; ModuleID = './build/uart_loopback_data_dma.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabihf"

%union.CACHE_CON_Type = type { %struct.anon }
%struct.anon = type { i32 }
%struct.CACHE_ENTRY_Type = type { %union.CACHE_CON_Type, %union.CACHE_CON_Type }
%struct.GPT_REGISTER_T = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.GPT_REGISTER_GLOABL_T = type { i32, i32, i32 }
%struct.gpt_context_t = type { i32, %struct.gpt_callback_context_t, i8, i8 }
%struct.gpt_callback_context_t = type { void (i8*)*, i8* }
%struct.gpt_sw_context_t = type { [32 x %struct.gpt_sw_timer_t], i32, i32, i32, i32, i8, i8, i8 }
%struct.gpt_sw_timer_t = type { %struct.gpt_callback_context_t, i32, i8, i8 }
%struct.GDMA_REGISTER_T = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.PDMA_REGISTER_T = type { i32, i32, i32, i32, i32, i32, i32, i32, [1 x i32], i32 }
%struct.VDMA_REGISTER_T = type { i32, i32, i32, i32, i32, [2 x i32], i32, i32, i32, i32, i32, i32, i32 }
%struct.gdma_user_callback_t = type { void (i32, i8*)*, i8* }
%struct.GPIO_REGISTER_T = type { [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIN_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [4 x %struct.GPIO_DIR_REGISTER_T], [192 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [2 x %struct.GPIO_DIR_REGISTER_T], [192 x i8], [7 x %struct.GPIO_DIR_REGISTER_T], [144 x i8], [4 x %struct.GPIO_DIR_REGISTER_T], [192 x i8], [6 x %struct.GPIO_DIN_REGISTER_T] }
%struct.GPIO_DIN_REGISTER_T = type { i32, [12 x i8] }
%struct.GPIO_DIR_REGISTER_T = type { i32, i32, i32, [4 x i8] }
%struct.hal_uart_dma_config_t = type { i8*, i32, i32, i8*, i32, i32, i32 }
%struct.uart_dma_callback_data_t = type { i8, i32 }
%struct.UART_REGISTER_T = type { %struct.anon, %struct.anon, %struct.anon, i32, %struct.anon, %struct.anon, i32, %struct.anon, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.nvic_function_t = type { void (i32)*, i32 }
%struct.GFH_CMEM_ID_INFO_v1 = type { %struct.GFH_Header, %struct.CMEMEntryIDList }
%struct.GFH_Header = type { i32, i16, i32 }
%struct.CMEMEntryIDList = type { i32, i32, [5 x %struct.CMEMEntryID] }
%struct.CMEMEntryID = type { i8, i8, [8 x i8] }
%struct.anon.9 = type { i8 }
%struct.SF_MTD_Data = type { i32, i8*, %struct.anon.9*, %struct.anon.9*, i8, %struct.hal_cache_region_config_t*, i8*, %struct.hal_cache_region_config_t*, i8*, i32, i8*, [8 x [2 x %struct.hal_cache_region_config_t]], i8*, %struct.SF_MTD_CMD*, i32, i16, i16, i16, i16, i8, [3 x i8], i8, i8, i16, i32, i32, i8, i8, i32 (i8*)*, i32 (i8*)*, i32 (i8*, i32, i8*, i32)*, i32 (i8*, i32, i8*, i32)* }
%struct.hal_cache_region_config_t = type { i32, i32 }
%struct.SF_MTD_CMD = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.CMEMEntryNOR = type { i16, i16, i32, [8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t] }
%struct.NOR_MTD_Driver = type { i32 (i8*, i8*)*, i32 (i8*)*, i8* (i8*, i32, i32)*, i32 (i8*, i32)*, i32 (i8*, i8*, i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32, i32, i8*, i32)*, i32 (i8*, i32*)*, i32 (i8*, i8*, i32)*, i1 (i8*, i32)*, i32 (i8*, i32, i8*)* }
%struct.NOR_FLASH_DRV_Data = type { i32, %struct.NOR_MTD_Driver*, i8*, i16*, i16*, %struct.NOR_MTD_FlashInfo, [8 x i32], [8 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.hal_cache_region_config_t*, i8*, i8*, void (%struct.NOR_FLASH_DRV_Data*)*, i32, void (%struct.NOR_FLASH_DRV_Data*)*, void (%struct.NOR_FLASH_DRV_Data*)*, i32, i32 (%struct.NOR_FLASH_DRV_Data*)*, i32 (%struct.NOR_FLASH_DRV_Data*, i32, i32)*, %struct.hal_cache_region_config_t*, i32, i32, i32, i16, i16, i8, i8 }
%struct.NOR_MTD_FlashInfo = type { i32, [8 x i32], [8 x i32], [8 x i32], i32, i16, i32, i32 }
%struct.GFH_CMEM_NOR_INFO_v1 = type { %struct.GFH_Header, %struct.CMEMEntryNORList }
%struct.CMEMEntryNORList = type { i32, i32, [5 x %struct.CMEMEntryNOR] }
%struct.NOR_FLASH_DISK_Data = type { i32, %struct.NOR_MTD_Driver*, i8*, %struct.NOR_MTD_FlashInfo, i8 }
%struct.EMI_SETTINGS = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.EMI_REGISTER_T = type { [96 x i8], i32, [12 x i8], i32, [20 x i8], i32, [4 x i8], i32, [60 x i8], i32, [4 x i8], i32, [4 x i8], i32, [20 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [28 x i8], i32, [4 x i8], i32, [12 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [12 x i8], i32, [4 x i8], i32, [4 x i8], i32, [20 x i8], i32, [4 x i8], i32, [92 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [60 x i8], i32, [124 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [20 x i8], i32, [20 x i8], i32 }
%struct.pdma_config_t = type { i8, i32, i32, i32 }
%struct.hal_uart_config_t = type { i32, i32, i32, i32 }
%union.CMEMFlashID = type { [4 x i16] }
%struct.NOR_Flash_MTD_Data = type { i32, i8*, %struct.anon.9*, %struct.anon.9*, i8, %struct.hal_cache_region_config_t*, i8*, %struct.hal_cache_region_config_t*, i8*, i32, i8*, [8 x [2 x %struct.hal_cache_region_config_t]] }
%struct.__va_list = type { i8* }
%struct.stat = type { i16, i16, i32, i16, i16, i16, i16, i32, %struct.timespec, %struct.timespec, %struct.timespec, i32, i32, [2 x i32] }
%struct.timespec = type { i64, i32 }
%struct._reent = type { i32, %struct.__sFILE*, %struct.__sFILE*, %struct.__sFILE*, i32, i8*, i32, i32, %struct.__locale_t*, %struct._mprec*, void (%struct._reent*)*, i32, i32, i8*, %struct._rand48*, %struct.GPT_REGISTER_T*, i8*, void (i32)**, %struct._atexit*, %struct._atexit, %struct._glue, %struct.__sFILE*, %struct._misc_reent*, i8* }
%struct.__locale_t = type opaque
%struct._mprec = type { %struct._Bigint*, i32, %struct._Bigint*, %struct._Bigint** }
%struct._Bigint = type { %struct._Bigint*, i32, i32, i32, i32, [1 x i32] }
%struct._rand48 = type { [3 x i16], [3 x i16], i16, i64 }
%struct._atexit = type { %struct._atexit*, i32, [32 x void ()*], %struct._on_exit_args* }
%struct._on_exit_args = type { [32 x i8*], [32 x i8*], i32, i32 }
%struct._glue = type { %struct._glue*, i32, %struct.__sFILE* }
%struct.__sFILE = type { i8*, i32, i32, i16, i16, %struct.__sbuf, i32, %struct._reent*, i8*, i32 (%struct._reent*, i8*, i8*, i32)*, i32 (%struct._reent*, i8*, i8*, i32)*, i32 (%struct._reent*, i8*, i32, i32)*, i32 (%struct._reent*, i8*)*, %struct.__sbuf, i8*, i32, [3 x i8], [1 x i8], %struct.__sbuf, i32, i32, %struct.__lock*, %struct._mbstate_t, i32 }
%struct.__sbuf = type { i8*, i32 }
%struct.__lock = type opaque
%struct._mbstate_t = type { i32, %struct.anon }
%struct._misc_reent = type { i8*, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t, [8 x i8], i32, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t }

@g_cache_status = dso_local global i8 0, align 1, !dbg !0
@g_cache_con = external dso_local local_unnamed_addr global %union.CACHE_CON_Type, align 4
@g_cache_region_en = external dso_local local_unnamed_addr global i32, align 4
@g_cache_entry = external dso_local local_unnamed_addr global [16 x %struct.CACHE_ENTRY_Type], align 4
@.str = private unnamed_addr constant [50 x i8] c"../../../../../driver/chip/mt2523/src/hal_cache.c\00", align 1
@__func__.hal_cache_region_config = private unnamed_addr constant [24 x i8] c"hal_cache_region_config\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@gp_gpt = dso_local local_unnamed_addr global [6 x %struct.GPT_REGISTER_T*] [%struct.GPT_REGISTER_T* inttoptr (i32 -1575747568 to %struct.GPT_REGISTER_T*), %struct.GPT_REGISTER_T* inttoptr (i32 -1575747520 to %struct.GPT_REGISTER_T*), %struct.GPT_REGISTER_T* inttoptr (i32 -1575747472 to %struct.GPT_REGISTER_T*), %struct.GPT_REGISTER_T* inttoptr (i32 -1575747424 to %struct.GPT_REGISTER_T*), %struct.GPT_REGISTER_T* inttoptr (i32 -1575747376 to %struct.GPT_REGISTER_T*), %struct.GPT_REGISTER_T* inttoptr (i32 -1575747328 to %struct.GPT_REGISTER_T*)], section ".tcm_rwdata", align 4, !dbg !92
@gp_gpt_glb = dso_local local_unnamed_addr global %struct.GPT_REGISTER_GLOABL_T* inttoptr (i32 -1575747584 to %struct.GPT_REGISTER_GLOABL_T*), align 4, !dbg !279
@gpt_get_lfosc_clock.flag = internal unnamed_addr global i1 false, section ".tcm_rwdata", align 1, !dbg !342
@gpt_clock_source = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !339
@g_gpt_context = dso_local global [6 x %struct.gpt_context_t] zeroinitializer, section ".tcm_zidata", align 4, !dbg !294
@gpt_sw_context = dso_local local_unnamed_addr global %struct.gpt_sw_context_t zeroinitializer, align 4, !dbg !316
@gdma = dso_local local_unnamed_addr global [1 x %struct.GDMA_REGISTER_T*] [%struct.GDMA_REGISTER_T* inttoptr (i32 -1610612480 to %struct.GDMA_REGISTER_T*)], align 4, !dbg !343
@gdma_global = dso_local local_unnamed_addr global [1 x %struct.anon*] [%struct.anon* inttoptr (i32 -1610612736 to %struct.anon*)], align 4, !dbg !426
@pdma = dso_local local_unnamed_addr global [6 x %struct.PDMA_REGISTER_T*] [%struct.PDMA_REGISTER_T* inttoptr (i32 -1610612216 to %struct.PDMA_REGISTER_T*), %struct.PDMA_REGISTER_T* inttoptr (i32 -1610611960 to %struct.PDMA_REGISTER_T*), %struct.PDMA_REGISTER_T* inttoptr (i32 -1608318456 to %struct.PDMA_REGISTER_T*), %struct.PDMA_REGISTER_T* inttoptr (i32 -1608318200 to %struct.PDMA_REGISTER_T*), %struct.PDMA_REGISTER_T* inttoptr (i32 -1608317944 to %struct.PDMA_REGISTER_T*), %struct.PDMA_REGISTER_T* inttoptr (i32 -1608317688 to %struct.PDMA_REGISTER_T*)], align 4, !dbg !434
@pdma_global = dso_local local_unnamed_addr global [6 x %struct.anon*] [%struct.anon* inttoptr (i32 -1610612736 to %struct.anon*), %struct.anon* inttoptr (i32 -1610612736 to %struct.anon*), %struct.anon* inttoptr (i32 -1608318976 to %struct.anon*), %struct.anon* inttoptr (i32 -1608318976 to %struct.anon*), %struct.anon* inttoptr (i32 -1608318976 to %struct.anon*), %struct.anon* inttoptr (i32 -1608318976 to %struct.anon*)], align 4, !dbg !452
@g_pdma_global_running_bit = dso_local local_unnamed_addr global [6 x i8] c"\02\04\02\04\06\08", align 1, !dbg !460
@vdma = dso_local local_unnamed_addr global [10 x %struct.VDMA_REGISTER_T*] [%struct.VDMA_REGISTER_T* inttoptr (i32 -1610610416 to %struct.VDMA_REGISTER_T*), %struct.VDMA_REGISTER_T* inttoptr (i32 -1610610160 to %struct.VDMA_REGISTER_T*), %struct.VDMA_REGISTER_T* inttoptr (i32 -1610609904 to %struct.VDMA_REGISTER_T*), %struct.VDMA_REGISTER_T* inttoptr (i32 -1610609648 to %struct.VDMA_REGISTER_T*), %struct.VDMA_REGISTER_T* inttoptr (i32 -1610609392 to %struct.VDMA_REGISTER_T*), %struct.VDMA_REGISTER_T* inttoptr (i32 -1610609136 to %struct.VDMA_REGISTER_T*), %struct.VDMA_REGISTER_T* inttoptr (i32 -1610608880 to %struct.VDMA_REGISTER_T*), %struct.VDMA_REGISTER_T* inttoptr (i32 -1610608624 to %struct.VDMA_REGISTER_T*), %struct.VDMA_REGISTER_T* inttoptr (i32 -1608054512 to %struct.VDMA_REGISTER_T*), %struct.VDMA_REGISTER_T* inttoptr (i32 -1608054256 to %struct.VDMA_REGISTER_T*)], align 4, !dbg !466
@vdma_port = dso_local local_unnamed_addr global [10 x %struct.anon*] [%struct.anon* inttoptr (i32 -1601044480 to %struct.anon*), %struct.anon* inttoptr (i32 -1601044224 to %struct.anon*), %struct.anon* inttoptr (i32 -1601043968 to %struct.anon*), %struct.anon* inttoptr (i32 -1601043712 to %struct.anon*), %struct.anon* inttoptr (i32 -1601043456 to %struct.anon*), %struct.anon* inttoptr (i32 -1601043200 to %struct.anon*), %struct.anon* inttoptr (i32 -1601042944 to %struct.anon*), %struct.anon* inttoptr (i32 -1601042688 to %struct.anon*), %struct.anon* inttoptr (i32 -1567490048 to %struct.anon*), %struct.anon* inttoptr (i32 -1567489792 to %struct.anon*)], align 4, !dbg !491
@vdma_global = dso_local local_unnamed_addr global [10 x %struct.anon*] [%struct.anon* inttoptr (i32 -1610612736 to %struct.anon*), %struct.anon* inttoptr (i32 -1610612736 to %struct.anon*), %struct.anon* inttoptr (i32 -1610612736 to %struct.anon*), %struct.anon* inttoptr (i32 -1610612736 to %struct.anon*), %struct.anon* inttoptr (i32 -1610612736 to %struct.anon*), %struct.anon* inttoptr (i32 -1610612736 to %struct.anon*), %struct.anon* inttoptr (i32 -1610612736 to %struct.anon*), %struct.anon* inttoptr (i32 -1610612736 to %struct.anon*), %struct.anon* inttoptr (i32 -1608056832 to %struct.anon*), %struct.anon* inttoptr (i32 -1608056832 to %struct.anon*)], align 4, !dbg !499
@g_vdma_global_running_bit = dso_local local_unnamed_addr global [10 x i8] c"\10\12\14\16\18\1A\1C\1E\10\12", align 1, !dbg !507
@g_gdma_callback = dso_local local_unnamed_addr global [1 x %struct.gdma_user_callback_t] zeroinitializer, align 4, !dbg !510
@pdma_init_status = internal global [7 x i8] zeroinitializer, align 1, !dbg !547
@__FUNCTION__.pdma_init = private unnamed_addr constant [10 x i8] c"pdma_init\00", align 1
@.str.35 = private unnamed_addr constant [52 x i8] c"This peripheral dma channel %d has been initialized\00", align 1
@.str.1.36 = private unnamed_addr constant [58 x i8] c"../../../../../driver/chip/mt2523/src/hal_pdma_internal.c\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@__func__.pdma_deinit = private unnamed_addr constant [12 x i8] c"pdma_deinit\00", align 1
@.str.3 = private unnamed_addr constant [54 x i8] c"This peripheral dma channel %d has been deinitialized\00", align 1
@__func__.pdma_start_polling = private unnamed_addr constant [19 x i8] c"pdma_start_polling\00", align 1
@__func__.pdma_start_interrupt = private unnamed_addr constant [21 x i8] c"pdma_start_interrupt\00", align 1
@g_pdma_callback = internal unnamed_addr global [6 x %struct.gdma_user_callback_t] zeroinitializer, align 4, !dbg !553
@vdma_init_status = internal global [18 x i8] zeroinitializer, align 1, !dbg !561
@__FUNCTION__.vdma_init = private unnamed_addr constant [10 x i8] c"vdma_init\00", align 1
@.str.4 = private unnamed_addr constant [47 x i8] c"This vfifo dma channel %d has been initialized\00", align 1
@__func__.vdma_deinit = private unnamed_addr constant [12 x i8] c"vdma_deinit\00", align 1
@.str.5 = private unnamed_addr constant [49 x i8] c"This vfifo dma channel %d has been deinitialized\00", align 1
@__func__.vdma_configure = private unnamed_addr constant [15 x i8] c"vdma_configure\00", align 1
@g_vdma_callback = internal unnamed_addr global [10 x %struct.gdma_user_callback_t] zeroinitializer, align 4, !dbg !566
@pd_domain_dma_interrupt_hander.count = internal unnamed_addr global i32 0, align 4, !dbg !523
@__func__.pd_domain_dma_interrupt_hander = private unnamed_addr constant [31 x i8] c"pd_domain_dma_interrupt_hander\00", align 1
@__func__.ao_domain_dma_interrupt_hander = private unnamed_addr constant [31 x i8] c"ao_domain_dma_interrupt_hander\00", align 1
@switch.table.pdma_configure = private unnamed_addr constant [4 x i32] [i32 4, i32 262152, i32 131076, i32 458756], align 4
@switch.table.vdma_init = private unnamed_addr constant [10 x %struct.VDMA_REGISTER_T**] [%struct.VDMA_REGISTER_T** getelementptr inbounds ([10 x %struct.VDMA_REGISTER_T*], [10 x %struct.VDMA_REGISTER_T*]* @vdma, i32 0, i32 0), %struct.VDMA_REGISTER_T** getelementptr inbounds ([10 x %struct.VDMA_REGISTER_T*], [10 x %struct.VDMA_REGISTER_T*]* @vdma, i32 0, i32 1), %struct.VDMA_REGISTER_T** getelementptr inbounds ([10 x %struct.VDMA_REGISTER_T*], [10 x %struct.VDMA_REGISTER_T*]* @vdma, i32 0, i32 2), %struct.VDMA_REGISTER_T** getelementptr inbounds ([10 x %struct.VDMA_REGISTER_T*], [10 x %struct.VDMA_REGISTER_T*]* @vdma, i32 0, i32 3), %struct.VDMA_REGISTER_T** getelementptr inbounds ([10 x %struct.VDMA_REGISTER_T*], [10 x %struct.VDMA_REGISTER_T*]* @vdma, i32 0, i32 4), %struct.VDMA_REGISTER_T** getelementptr inbounds ([10 x %struct.VDMA_REGISTER_T*], [10 x %struct.VDMA_REGISTER_T*]* @vdma, i32 0, i32 5), %struct.VDMA_REGISTER_T** getelementptr inbounds ([10 x %struct.VDMA_REGISTER_T*], [10 x %struct.VDMA_REGISTER_T*]* @vdma, i32 0, i32 6), %struct.VDMA_REGISTER_T** getelementptr inbounds ([10 x %struct.VDMA_REGISTER_T*], [10 x %struct.VDMA_REGISTER_T*]* @vdma, i32 0, i32 7), %struct.VDMA_REGISTER_T** getelementptr inbounds ([10 x %struct.VDMA_REGISTER_T*], [10 x %struct.VDMA_REGISTER_T*]* @vdma, i32 0, i32 8), %struct.VDMA_REGISTER_T** getelementptr inbounds ([10 x %struct.VDMA_REGISTER_T*], [10 x %struct.VDMA_REGISTER_T*]* @vdma, i32 0, i32 9)], align 4
@switch.table.vdma_init.6 = private unnamed_addr constant [10 x i32] [i32 16, i32 262160, i32 16, i32 262160, i32 16, i32 262160, i32 16, i32 262160, i32 16, i32 262160], align 4
@__const.is_pin_with_pullsel.pin_number_with_pullsel = private unnamed_addr constant [5 x i32] [i32 0, i32 1, i32 2, i32 3, i32 10], align 4
@gpio_register_base = dso_local local_unnamed_addr global %struct.GPIO_REGISTER_T* inttoptr (i32 -1576927232 to %struct.GPIO_REGISTER_T*), align 4, !dbg !589
@g_uart_hwstatus = internal global [4 x i32] zeroinitializer, align 4, !dbg !865
@.str.37 = private unnamed_addr constant [49 x i8] c"../../../../../driver/chip/mt2523/src/hal_uart.c\00", align 1
@__func__.uart_receive_handler = private unnamed_addr constant [21 x i8] c"uart_receive_handler\00", align 1
@.str.1.38 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@g_uart_callback = internal unnamed_addr global [4 x %struct.gdma_user_callback_t] zeroinitializer, align 4, !dbg !944
@g_uart_dma_config = internal unnamed_addr global [4 x %struct.hal_uart_dma_config_t] zeroinitializer, align 4, !dbg !962
@__func__.uart_send_handler = private unnamed_addr constant [18 x i8] c"uart_send_handler\00", align 1
@__func__.uart_error_handler = private unnamed_addr constant [19 x i8] c"uart_error_handler\00", align 1
@g_uart_baudrate_map = internal unnamed_addr constant [13 x i32] [i32 110, i32 300, i32 1200, i32 2400, i32 4800, i32 9600, i32 19200, i32 38400, i32 57600, i32 115200, i32 230400, i32 460800, i32 921600], align 4, !dbg !976
@g_uart_global_data_initialized = internal unnamed_addr global i1 false, align 1, !dbg !987
@__func__.hal_uart_init = private unnamed_addr constant [14 x i8] c"hal_uart_init\00", align 1
@__func__.hal_uart_deinit = private unnamed_addr constant [16 x i8] c"hal_uart_deinit\00", align 1
@__func__.hal_uart_send_dma = private unnamed_addr constant [18 x i8] c"hal_uart_send_dma\00", align 1
@__func__.hal_uart_receive_dma = private unnamed_addr constant [21 x i8] c"hal_uart_receive_dma\00", align 1
@g_uart_dma_callback_data = internal global [8 x %struct.uart_dma_callback_data_t] zeroinitializer, align 4, !dbg !957
@__func__.hal_uart_register_callback = private unnamed_addr constant [27 x i8] c"hal_uart_register_callback\00", align 1
@__func__.hal_uart_get_available_send_space = private unnamed_addr constant [34 x i8] c"hal_uart_get_available_send_space\00", align 1
@__func__.hal_uart_get_available_receive_bytes = private unnamed_addr constant [37 x i8] c"hal_uart_get_available_receive_bytes\00", align 1
@__func__.hal_uart_set_dma = private unnamed_addr constant [17 x i8] c"hal_uart_set_dma\00", align 1
@__func__.uart_start_dma_transmission = private unnamed_addr constant [28 x i8] c"uart_start_dma_transmission\00", align 1
@__const.uart_set_baudrate.fraction_L_mapping = private unnamed_addr constant [10 x i32] [i32 0, i32 0, i32 32, i32 144, i32 168, i32 84, i32 108, i32 186, i32 246, i32 254], align 4
@g_uart_regbase = dso_local local_unnamed_addr constant [4 x %struct.UART_REGISTER_T*] [%struct.UART_REGISTER_T* inttoptr (i32 -1609760768 to %struct.UART_REGISTER_T*), %struct.UART_REGISTER_T* inttoptr (i32 -1609695232 to %struct.UART_REGISTER_T*), %struct.UART_REGISTER_T* inttoptr (i32 -1609629696 to %struct.UART_REGISTER_T*), %struct.UART_REGISTER_T* inttoptr (i32 -1609564160 to %struct.UART_REGISTER_T*)], align 4, !dbg !988
@g_uart_port_to_pdn = dso_local local_unnamed_addr constant [4 x i32] [i32 45, i32 46, i32 47, i32 48], align 4, !dbg !1060
@g_uart_port_to_irq_num = dso_local local_unnamed_addr constant [4 x i32] [i32 29, i32 30, i32 31, i32 32], align 4, !dbg !1065
@.str.83 = private unnamed_addr constant [67 x i8] c"../../../../../driver/chip/mt2523/src/hal_uart_internal_platform.c\00", align 1
@__func__.uart_interrupt_handler = private unnamed_addr constant [23 x i8] c"uart_interrupt_handler\00", align 1
@.str.1.84 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@switch.table.uart_dma_channel_to_callback_data = private unnamed_addr constant [8 x i8] c"\00\01\00\01\00\01\00\01", align 1
@switch.table.uart_dma_channel_to_callback_data.2 = private unnamed_addr constant [8 x i32] [i32 1, i32 1, i32 2, i32 2, i32 3, i32 3, i32 0, i32 0], align 4
@hal_nvic_init.priority_set = internal unnamed_addr global i1 false, align 4, !dbg !1071
@defualt_irq_priority = internal unnamed_addr constant [64 x i32] [i32 5, i32 68, i32 7, i32 8, i32 68, i32 68, i32 68, i32 68, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 68, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 40, i32 68, i32 68, i32 43, i32 44, i32 26, i32 46, i32 47, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68], align 4, !dbg !1159
@nvic_function_table = dso_local local_unnamed_addr global [64 x %struct.nvic_function_t] zeroinitializer, align 4, !dbg !1148
@__FUNCTION__.isrC_main = private unnamed_addr constant [10 x i8] c"isrC_main\00", align 1
@.str.89 = private unnamed_addr constant [25 x i8] c"ERROR: no IRQ handler! \0A\00", align 1
@DelayResume = dso_local local_unnamed_addr global i8 0, align 1, !dbg !1164
@.str.99 = private unnamed_addr constant [61 x i8] c"../../../../../driver/chip/mt2523/src/hal_flash_mtd_common.c\00", align 1
@__func__.SFI_BlankCheck = private unnamed_addr constant [15 x i8] c"SFI_BlankCheck\00", align 1
@.str.1.100 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@__func__.SFI_MacEnable = private unnamed_addr constant [14 x i8] c"SFI_MacEnable\00", align 1
@NOR_FLASH_LeaveDPDCmd = dso_local local_unnamed_addr global i8 0, section ".tcm_rwdata", align 1, !dbg !1243
@NOR_FLASH_FATStartAddr = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1245
@NOR_FLASH_FATStartValue = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1247
@SFI_MAC_CTL_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1249
@SFI_DIRECT_CTL_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1251
@SFI_MISC_CTL_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1253
@SFI_MISC_CTL2_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1255
@SFI_DLY_CTL_3_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1257
@SFI_CLK_SWITCH_MISC_CTL_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1259
@SFI_CLK_SWITCH_DLY_CTL_3_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1261
@sf_dal_brbusy_wait = dso_local local_unnamed_addr global i8 0, align 1, !dbg !1263
@sf_dal_resume_time = dso_local local_unnamed_addr global i32 -1, align 4, !dbg !1576
@sf_dal_flash_return_ready_max = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1578
@.str.103 = private unnamed_addr constant [58 x i8] c"../../../../../driver/chip/mt2523/src/hal_flash_mtd_dal.c\00", align 1
@__func__.Flash_ReturnReady = private unnamed_addr constant [18 x i8] c"Flash_ReturnReady\00", align 1
@.str.1.104 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@__func__.Flash_CheckReady = private unnamed_addr constant [17 x i8] c"Flash_CheckReady\00", align 1
@__func__.Flash_ResumeOperation = private unnamed_addr constant [22 x i8] c"Flash_ResumeOperation\00", align 1
@__func__.Flash_SuspendOperation = private unnamed_addr constant [23 x i8] c"Flash_SuspendOperation\00", align 1
@MTDMutex = internal unnamed_addr global i1 false, align 4, !dbg !1587
@__func__.SF_DAL_FreeDevLock = private unnamed_addr constant [19 x i8] c"SF_DAL_FreeDevLock\00", align 1
@__func__.SF_DAL_Init_Vendor = private unnamed_addr constant [19 x i8] c"SF_DAL_Init_Vendor\00", align 1
@__func__.SF_DAL_IOCtrl = private unnamed_addr constant [14 x i8] c"SF_DAL_IOCtrl\00", align 1
@__func__.SF_DAL_ProgramData = private unnamed_addr constant [19 x i8] c"SF_DAL_ProgramData\00", align 1
@tmp_data_buffer = internal unnamed_addr global [128 x i8] zeroinitializer, align 1, !dbg !1580
@__func__.SF_DAL_EraseBlock = private unnamed_addr constant [18 x i8] c"SF_DAL_EraseBlock\00", align 1
@__func__.SF_DAL_CheckReadyAndResume = private unnamed_addr constant [27 x i8] c"SF_DAL_CheckReadyAndResume\00", align 1
@__func__.SF_DAL_CheckDeviceReady = private unnamed_addr constant [24 x i8] c"SF_DAL_CheckDeviceReady\00", align 1
@combo_mem_id_list = dso_local constant %struct.GFH_CMEM_ID_INFO_v1 { %struct.GFH_Header { i32 21843277, i16 72, i32 258 }, %struct.CMEMEntryIDList { i32 1, i32 5, [5 x %struct.CMEMEntryID] [%struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\C2(\16\00\00\00\00\00" }, %struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\C2(\15\00\00\00\00\00" }, %struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\EFp\16\00\00\00\00\00" }, %struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\C2%8\00\00\00\00\00" }, %struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\EF@\18\00\00\00\00\00" }] } }, align 4, !dbg !1588
@cmem_index = internal unnamed_addr global i16 -1, align 2, !dbg !1639
@cmem_emiinit_index = internal unnamed_addr global i16 -1, align 2, !dbg !1642
@FLASH_ID = dso_local local_unnamed_addr constant [19 x i8] c"{0xC2, 0x28, 0x16}\00", align 1, !dbg !1675
@nor_egid = dso_local local_unnamed_addr global %struct.anon.9* null, align 4, !dbg !1686
@EntireDiskMtdData = dso_local global %struct.SF_MTD_Data zeroinitializer, align 4, !dbg !2002
@RegionInfo = internal global [8 x %struct.hal_cache_region_config_t] zeroinitializer, align 4, !dbg !1873
@mtdflash = dso_local global %struct.SF_MTD_Data zeroinitializer, align 4, !dbg !1901
@nor_list = internal unnamed_addr global %struct.CMEMEntryNOR* null, align 4, !dbg !2004
@cmem_nor_index = internal unnamed_addr global i32 0, align 4, !dbg !1711
@PAGE_BUFFER_SIZE = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1897
@NORFlashMtd = dso_local global %struct.NOR_MTD_Driver zeroinitializer, align 4, !dbg !1899
@FlashDriveData = dso_local local_unnamed_addr global %struct.NOR_FLASH_DRV_Data zeroinitializer, align 4, !dbg !1723
@StatusMap = dso_local global [8 x i8] zeroinitializer, align 1, !dbg !1984
@sf_dal_data_cmd = dso_local global %struct.SF_MTD_CMD zeroinitializer, align 1, !dbg !1987
@combo_mem_sw_list = internal constant %struct.GFH_CMEM_NOR_INFO_v1 { %struct.GFH_Header { i32 21843277, i16 700, i32 259 }, %struct.CMEMEntryNORList { i32 2, i32 5, [5 x %struct.CMEMEntryNOR] [%struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 0, i32 4096 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer], [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 4194304, i32 1 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer] }, %struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 0, i32 4096 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer], [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 4194304, i32 1 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer] }, %struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 0, i32 4096 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer], [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 4194304, i32 1 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer] }, %struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 0, i32 4096 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer], [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 4194304, i32 1 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer] }, %struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 0, i32 4096 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer], [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 4194304, i32 1 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer] }] } }, align 4, !dbg !2017
@BlockLayout = internal unnamed_addr global %struct.hal_cache_region_config_t* null, align 4, !dbg !1876
@BankInfo = internal global [8 x %struct.hal_cache_region_config_t] zeroinitializer, align 4, !dbg !1889
@TOTAL_BLOCKS = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1860
@NOR_LARGEST_BLOCK_SIZE = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1864
@TOTAL_SECTORS = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1862
@cmem_id = dso_local local_unnamed_addr global %struct.CMEMEntryID* null, align 4, !dbg !1713
@.str.119 = private unnamed_addr constant [60 x i8] c"../../../../../driver/chip/mt2523/src/hal_flash_combo_nor.c\00", align 1
@__func__.CMEM_Init_nor_list = private unnamed_addr constant [19 x i8] c"CMEM_Init_nor_list\00", align 1
@.str.1.120 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@EntireDiskRegionInfo = internal global [8 x %struct.hal_cache_region_config_t] zeroinitializer, align 4, !dbg !1989
@__func__.CMEM_Init_FullDriver = private unnamed_addr constant [21 x i8] c"CMEM_Init_FullDriver\00", align 1
@FDMBuffer = dso_local local_unnamed_addr global [512 x i8] zeroinitializer, align 1, !dbg !1868
@CS0_SIZE = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1885
@CS1_SIZE = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1887
@FDMMutex = internal unnamed_addr global i1 false, align 4, !dbg !2044
@.str.125 = private unnamed_addr constant [55 x i8] c"../../../../../driver/chip/mt2523/src/hal_flash_disk.c\00", align 1
@.str.1.126 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@__func__.FreeFDMLock = private unnamed_addr constant [12 x i8] c"FreeFDMLock\00", align 1
@flash_init_status = internal unnamed_addr global i1 false, section ".tcm_rwdata", align 4, !dbg !2104
@EntireDiskDriveData = dso_local global %struct.NOR_FLASH_DISK_Data zeroinitializer, align 4, !dbg !1991
@__func__.get_rawdisk_error_code = private unnamed_addr constant [23 x i8] c"get_rawdisk_error_code\00", align 1
@__func__.get_block_size_from_address = private unnamed_addr constant [28 x i8] c"get_block_size_from_address\00", align 1
@__func__.MountDevice = private unnamed_addr constant [12 x i8] c"MountDevice\00", align 1
@switch.table.get_rawdisk_error_code = private unnamed_addr constant [9 x i32] [i32 -7, i32 -3, i32 -3, i32 -3, i32 -3, i32 -4, i32 -3, i32 -6, i32 -7], align 4
@gNOR_ReturnReadyBegin = dso_local local_unnamed_addr global i32 0, align 4, !dbg !2105
@gNOR_ReturnReadyEnd = dso_local local_unnamed_addr global i32 -1, align 4, !dbg !2119
@NOR_Flash_Base_Address = dso_local local_unnamed_addr global i32 0, align 4, !dbg !2121
@NOR_FLASH_BUSY = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2123
@NOR_FLASH_SUSPENDED = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2125
@.str.141 = private unnamed_addr constant [54 x i8] c"../../../../../driver/chip/mt2523/src/hal_flash_mtd.c\00", align 1
@__func__.MapWindow = private unnamed_addr constant [10 x i8] c"MapWindow\00", align 1
@.str.1.142 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@__func__.DelayAWhile_UST = private unnamed_addr constant [16 x i8] c"DelayAWhile_UST\00", align 1
@LookupAddress.replaced = internal unnamed_addr global i32 0, align 4, !dbg !2127
@LookupAddress.look_up_hit = internal unnamed_addr global i32 0, align 4, !dbg !2181
@LookupAddress.look_up_miss = internal unnamed_addr global i32 0, align 4, !dbg !2183
@emi_settings = dso_local local_unnamed_addr global [1 x %struct.EMI_SETTINGS] [%struct.EMI_SETTINGS { i32 16, i32 0, i32 16384, i32 -1608118272, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 131074, i32 131074 }], section ".tcm_rwdata", align 4, !dbg !2185
@__EMI_CurSR0 = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !2197
@__EMI_CurSR1 = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !2199
@__EMI_CurSR2 = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !2201
@emi_register = dso_local local_unnamed_addr global %struct.EMI_REGISTER_T* inttoptr (i32 -1610285056 to %struct.EMI_REGISTER_T*), section ".tcm_rwdata", align 4, !dbg !2203
@EMI_GENA_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2306
@EMI_RDCT_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2308
@EMI_DSRAM_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2310
@EMI_MSRAM_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2312
@EMI_IDL_C_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2314
@EMI_IDL_D_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2316
@EMI_IDL_E_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2318
@EMI_ODL_C_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2320
@EMI_ODL_D_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2322
@EMI_ODL_E_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2324
@EMI_ODL_F_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2326
@EMI_IO_A_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2328
@EMI_IO_B_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2330
@__const.TestCase_MBIST.mbist_data = private unnamed_addr constant [2 x i32] [i32 23205, i32 65535], align 4
@emi_register_backup = dso_local global %struct.EMI_REGISTER_T zeroinitializer, section ".tcm_zidata", align 4, !dbg !2332
@dvfs_dma_runing_status = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !2304
@cm_freq_state = dso_local local_unnamed_addr global i32 1, section ".tcm_rwdata", align 4, !dbg !2351
@g_uart_receive_buffer = internal global [256 x i8] zeroinitializer, section ".noncached_zidata", align 4, !dbg !2363
@g_uart_send_buffer = internal global [256 x i8] zeroinitializer, section ".noncached_zidata", align 4, !dbg !2372
@.str.155 = private unnamed_addr constant [65 x i8] c"\0D\0A\0D\0APlease input data to this UART port and watch it's output:\0D\0A\00", align 1
@g_uart_receive_event = internal global i8 0, align 1, !dbg !2377
@_sbrk_r.heap_end = internal unnamed_addr global i8* null, align 4, !dbg !2379
@end = external dso_local global i8, align 1
@System_Initialize_Done = internal global i32 0, align 4, !dbg !2583
@SystemCoreClock = dso_local local_unnamed_addr global i32 0, align 4, !dbg !2691
@build_date_time_str = dso_local local_unnamed_addr global [31 x i8] c"2022/12/13 07:59:43 GMT +00:00\00", align 1, !dbg !2693
@sw_verno_str = dso_local local_unnamed_addr global [11 x i8] c"SDK_V4.6.1\00", align 1, !dbg !2698
@hw_verno_str = dso_local local_unnamed_addr global [11 x i8] c"mt2523_hdk\00", align 1, !dbg !2704

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_init() local_unnamed_addr #0 !dbg !2797 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !2805
  call void @llvm.dbg.value(metadata i32 %1, metadata !2804, metadata !DIExpression()), !dbg !2806
  %2 = load volatile i8, i8* @g_cache_status, align 1, !dbg !2807, !range !2809
  %3 = icmp eq i8 %2, 0, !dbg !2807
  br i1 %3, label %5, label %4, !dbg !2810

4:                                                ; preds = %0
  tail call void @restore_interrupt_mask(i32 noundef %1) #20, !dbg !2811
  br label %15, !dbg !2813

5:                                                ; preds = %0
  store volatile i8 1, i8* @g_cache_status, align 1, !dbg !2814
  tail call void @restore_interrupt_mask(i32 noundef %1) #20, !dbg !2816
  %6 = tail call i32 @hal_cache_invalidate_all_cache_lines() #21, !dbg !2817
  store volatile i32 0, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2818
  store volatile i32 0, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !2819
  store i32 0, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !2820
  store i32 0, i32* @g_cache_region_en, align 4, !dbg !2821
  call void @llvm.dbg.value(metadata i32 0, metadata !2802, metadata !DIExpression()), !dbg !2806
  br label %7, !dbg !2822

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %13, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !2802, metadata !DIExpression()), !dbg !2806
  %9 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634304 to [16 x i32]*), i32 0, i32 %8, !dbg !2824
  store volatile i32 0, i32* %9, align 4, !dbg !2827
  %10 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634240 to [16 x i32]*), i32 0, i32 %8, !dbg !2828
  store volatile i32 0, i32* %10, align 4, !dbg !2829
  %11 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %8, i32 0, i32 0, i32 0, !dbg !2830
  store i32 0, i32* %11, align 4, !dbg !2831
  %12 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %8, i32 1, i32 0, i32 0, !dbg !2832
  store i32 0, i32* %12, align 4, !dbg !2833
  %13 = add nuw nsw i32 %8, 1, !dbg !2834
  call void @llvm.dbg.value(metadata i32 %13, metadata !2802, metadata !DIExpression()), !dbg !2806
  %14 = icmp eq i32 %13, 16, !dbg !2835
  br i1 %14, label %15, label %7, !dbg !2822, !llvm.loop !2836

15:                                               ; preds = %7, %4
  %16 = phi i32 [ -6, %4 ], [ 0, %7 ], !dbg !2806
  ret i32 %16, !dbg !2838
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_invalidate_all_cache_lines() local_unnamed_addr #0 section ".tcm_code" !dbg !2839 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !2842
  call void @llvm.dbg.value(metadata i32 %1, metadata !2841, metadata !DIExpression()), !dbg !2843
  %2 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2844
  %3 = and i32 %2, -31, !dbg !2844
  store volatile i32 %3, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2844
  %4 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2845
  %5 = or i32 %4, 19, !dbg !2845
  store volatile i32 %5, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2845
  %6 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2846
  %7 = and i32 %6, -31, !dbg !2846
  store volatile i32 %7, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2846
  %8 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2847
  %9 = or i32 %8, 3, !dbg !2847
  store volatile i32 %9, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2847
  tail call void asm sideeffect "isb", ""() #22, !dbg !2848, !srcloc !2852
  tail call void @restore_interrupt_mask(i32 noundef %1) #20, !dbg !2853
  ret i32 0, !dbg !2854
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_deinit() local_unnamed_addr #0 !dbg !2855 {
  %1 = tail call i32 @hal_cache_invalidate_all_cache_lines() #21, !dbg !2858
  store volatile i32 0, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2859
  store volatile i32 0, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !2860
  store i32 0, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !2861
  store i32 0, i32* @g_cache_region_en, align 4, !dbg !2862
  call void @llvm.dbg.value(metadata i32 0, metadata !2857, metadata !DIExpression()), !dbg !2863
  br label %2, !dbg !2864

2:                                                ; preds = %0, %2
  %3 = phi i32 [ 0, %0 ], [ %8, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !2857, metadata !DIExpression()), !dbg !2863
  %4 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634304 to [16 x i32]*), i32 0, i32 %3, !dbg !2866
  store volatile i32 0, i32* %4, align 4, !dbg !2869
  %5 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634240 to [16 x i32]*), i32 0, i32 %3, !dbg !2870
  store volatile i32 0, i32* %5, align 4, !dbg !2871
  %6 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %3, i32 0, i32 0, i32 0, !dbg !2872
  store i32 0, i32* %6, align 4, !dbg !2873
  %7 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %3, i32 1, i32 0, i32 0, !dbg !2874
  store i32 0, i32* %7, align 4, !dbg !2875
  %8 = add nuw nsw i32 %3, 1, !dbg !2876
  call void @llvm.dbg.value(metadata i32 %8, metadata !2857, metadata !DIExpression()), !dbg !2863
  %9 = icmp eq i32 %8, 16, !dbg !2877
  br i1 %9, label %10, label %2, !dbg !2864, !llvm.loop !2878

10:                                               ; preds = %2
  store volatile i8 0, i8* @g_cache_status, align 1, !dbg !2880
  ret i32 0, !dbg !2881
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_cache_enable() local_unnamed_addr #2 !dbg !2882 {
  %1 = load i32, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !2883
  %2 = and i32 %1, 768, !dbg !2885
  %3 = icmp eq i32 %2, 0, !dbg !2885
  br i1 %3, label %8, label %4, !dbg !2886

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2887
  %6 = or i32 %5, 13, !dbg !2887
  store volatile i32 %6, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2887
  %7 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2888
  store i32 %7, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !2889
  br label %8, !dbg !2890

8:                                                ; preds = %0, %4
  %9 = phi i32 [ 0, %4 ], [ -5, %0 ], !dbg !2891
  ret i32 %9, !dbg !2892
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_disable() local_unnamed_addr #0 !dbg !2893 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !2896
  call void @llvm.dbg.value(metadata i32 %1, metadata !2895, metadata !DIExpression()), !dbg !2897
  %2 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2898
  %3 = and i32 %2, 1, !dbg !2900
  %4 = icmp eq i32 %3, 0, !dbg !2900
  br i1 %4, label %7, label %5, !dbg !2901

5:                                                ; preds = %0
  %6 = tail call i32 @hal_cache_invalidate_all_cache_lines() #21, !dbg !2902
  br label %7, !dbg !2904

7:                                                ; preds = %5, %0
  %8 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2905
  %9 = and i32 %8, -2, !dbg !2905
  store volatile i32 %9, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2905
  %10 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2906
  store i32 %10, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !2907
  tail call void @restore_interrupt_mask(i32 noundef %1) #20, !dbg !2908
  ret i32 0, !dbg !2909
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_cache_region_enable(i32 noundef %0) local_unnamed_addr #2 !dbg !2910 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2914, metadata !DIExpression()), !dbg !2915
  %2 = icmp ugt i32 %0, 15, !dbg !2916
  br i1 %2, label %13, label %3, !dbg !2918

3:                                                ; preds = %1
  %4 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634304 to [16 x i32]*), i32 0, i32 %0, !dbg !2919
  %5 = load volatile i32, i32* %4, align 4, !dbg !2919
  %6 = and i32 %5, 256, !dbg !2921
  %7 = icmp eq i32 %6, 0, !dbg !2921
  br i1 %7, label %13, label %8, !dbg !2922

8:                                                ; preds = %3
  %9 = shl nuw nsw i32 1, %0, !dbg !2923
  %10 = load volatile i32, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !2925
  %11 = or i32 %10, %9, !dbg !2925
  store volatile i32 %11, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !2925
  %12 = load volatile i32, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !2926
  store i32 %12, i32* @g_cache_region_en, align 4, !dbg !2927
  br label %13, !dbg !2928

13:                                               ; preds = %3, %1, %8
  %14 = phi i32 [ 0, %8 ], [ -4, %1 ], [ -1, %3 ], !dbg !2915
  ret i32 %14, !dbg !2929
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_cache_region_disable(i32 noundef %0) local_unnamed_addr #2 !dbg !2930 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2932, metadata !DIExpression()), !dbg !2933
  %2 = icmp ugt i32 %0, 15, !dbg !2934
  br i1 %2, label %11, label %3, !dbg !2936

3:                                                ; preds = %1
  %4 = shl nuw nsw i32 1, %0, !dbg !2937
  %5 = xor i32 %4, -1, !dbg !2938
  %6 = load volatile i32, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !2939
  %7 = and i32 %6, %5, !dbg !2939
  store volatile i32 %7, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !2939
  %8 = load volatile i32, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !2940
  store i32 %8, i32* @g_cache_region_en, align 4, !dbg !2941
  %9 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %0, i32 0, i32 0, i32 0, !dbg !2942
  store i32 0, i32* %9, align 4, !dbg !2943
  %10 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %0, i32 1, i32 0, i32 0, !dbg !2944
  store i32 0, i32* %10, align 4, !dbg !2945
  br label %11, !dbg !2946

11:                                               ; preds = %1, %3
  %12 = phi i32 [ 0, %3 ], [ -4, %1 ], !dbg !2933
  ret i32 %12, !dbg !2947
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_cache_set_size(i32 noundef %0) local_unnamed_addr #2 !dbg !2948 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2953, metadata !DIExpression()), !dbg !2954
  %2 = icmp ugt i32 %0, 3, !dbg !2955
  br i1 %2, label %13, label %3, !dbg !2957

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2958
  %5 = and i32 %4, -769, !dbg !2958
  store volatile i32 %5, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2958
  %6 = shl nuw nsw i32 %0, 8, !dbg !2959
  %7 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2960
  %8 = or i32 %7, %6, !dbg !2960
  store volatile i32 %8, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2960
  %9 = icmp eq i32 %0, 0, !dbg !2961
  br i1 %9, label %10, label %11, !dbg !2963

10:                                               ; preds = %3
  store volatile i32 0, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2964
  br label %11, !dbg !2966

11:                                               ; preds = %10, %3
  %12 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2967
  store i32 %12, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !2968
  br label %13, !dbg !2969

13:                                               ; preds = %1, %11
  %14 = phi i32 [ 0, %11 ], [ -5, %1 ], !dbg !2954
  ret i32 %14, !dbg !2970
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_region_config(i32 noundef %0, %struct.hal_cache_region_config_t* noundef readonly %1) local_unnamed_addr #0 !dbg !2971 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2982, metadata !DIExpression()), !dbg !2984
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %1, metadata !2983, metadata !DIExpression()), !dbg !2984
  %3 = icmp ugt i32 %0, 15, !dbg !2985
  br i1 %3, label %30, label %4, !dbg !2987

4:                                                ; preds = %2
  %5 = icmp eq %struct.hal_cache_region_config_t* %1, null, !dbg !2988
  br i1 %5, label %30, label %6, !dbg !2990

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 0, i32 0, !dbg !2991
  %8 = load i32, i32* %7, align 4, !dbg !2991
  %9 = and i32 %8, 4095, !dbg !2993
  %10 = icmp eq i32 %9, 0, !dbg !2993
  br i1 %10, label %12, label %11, !dbg !2994

11:                                               ; preds = %6
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i32 0, i32 0), i32 noundef 251, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.hal_cache_region_config, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !2995
  unreachable, !dbg !2995

12:                                               ; preds = %6
  %13 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 0, i32 1, !dbg !2997
  %14 = load i32, i32* %13, align 4, !dbg !2997
  %15 = and i32 %14, 4095, !dbg !2999
  %16 = icmp eq i32 %15, 0, !dbg !2999
  br i1 %16, label %18, label %17, !dbg !3000

17:                                               ; preds = %12
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i32 0, i32 0), i32 noundef 257, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.hal_cache_region_config, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !3001
  unreachable, !dbg !3001

18:                                               ; preds = %12
  %19 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634304 to [16 x i32]*), i32 0, i32 %0, !dbg !3003
  store volatile i32 %8, i32* %19, align 4, !dbg !3004
  %20 = load i32, i32* %7, align 4, !dbg !3005
  %21 = load i32, i32* %13, align 4, !dbg !3006
  %22 = add i32 %21, %20, !dbg !3007
  %23 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634240 to [16 x i32]*), i32 0, i32 %0, !dbg !3008
  store volatile i32 %22, i32* %23, align 4, !dbg !3009
  %24 = load volatile i32, i32* %19, align 4, !dbg !3010
  %25 = or i32 %24, 256, !dbg !3010
  store volatile i32 %25, i32* %19, align 4, !dbg !3010
  %26 = load volatile i32, i32* %19, align 4, !dbg !3011
  %27 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %0, i32 0, i32 0, i32 0, !dbg !3012
  store i32 %26, i32* %27, align 4, !dbg !3013
  %28 = load volatile i32, i32* %23, align 4, !dbg !3014
  %29 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %0, i32 1, i32 0, i32 0, !dbg !3015
  store i32 %28, i32* %29, align 4, !dbg !3016
  br label %30, !dbg !3017

30:                                               ; preds = %4, %2, %18
  %31 = phi i32 [ 0, %18 ], [ -4, %2 ], [ -7, %4 ], !dbg !2984
  ret i32 %31, !dbg !3018
}

; Function Attrs: noreturn optsize
declare dso_local void @__assert_func(i8* noundef, i32 noundef, i8* noundef, i8* noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_invalidate_one_cache_line(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !3019 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3023, metadata !DIExpression()), !dbg !3025
  %2 = and i32 %0, 31, !dbg !3026
  %3 = icmp eq i32 %2, 0, !dbg !3026
  br i1 %3, label %4, label %9, !dbg !3028

4:                                                ; preds = %1
  %5 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3029
  call void @llvm.dbg.value(metadata i32 %5, metadata !3024, metadata !DIExpression()), !dbg !3025
  %6 = and i32 %0, -32, !dbg !3030
  store volatile i32 %6, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !3031
  %7 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !3032
  %8 = or i32 %7, 5, !dbg !3032
  store volatile i32 %8, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !3032
  tail call void asm sideeffect "isb", ""() #22, !dbg !3033, !srcloc !2852
  tail call void @restore_interrupt_mask(i32 noundef %5) #20, !dbg !3035
  br label %9, !dbg !3036

9:                                                ; preds = %1, %4
  %10 = phi i32 [ 0, %4 ], [ -7, %1 ], !dbg !3025
  ret i32 %10, !dbg !3037
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_invalidate_multiple_cache_lines(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".tcm_code" !dbg !3038 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3042, metadata !DIExpression()), !dbg !3046
  call void @llvm.dbg.value(metadata i32 %1, metadata !3043, metadata !DIExpression()), !dbg !3046
  %3 = add i32 %1, %0, !dbg !3047
  call void @llvm.dbg.value(metadata i32 %3, metadata !3045, metadata !DIExpression()), !dbg !3046
  %4 = or i32 %1, %0, !dbg !3048
  %5 = and i32 %4, 31, !dbg !3048
  %6 = icmp eq i32 %5, 0, !dbg !3048
  br i1 %6, label %7, label %16, !dbg !3048

7:                                                ; preds = %2
  %8 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3050
  call void @llvm.dbg.value(metadata i32 %8, metadata !3044, metadata !DIExpression()), !dbg !3046
  call void @llvm.dbg.value(metadata i32 %0, metadata !3042, metadata !DIExpression()), !dbg !3046
  %9 = icmp ugt i32 %3, %0, !dbg !3051
  br i1 %9, label %10, label %15, !dbg !3052

10:                                               ; preds = %7, %10
  %11 = phi i32 [ %13, %10 ], [ %0, %7 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !3042, metadata !DIExpression()), !dbg !3046
  %12 = tail call i32 @hal_cache_invalidate_one_cache_line(i32 noundef %11) #21, !dbg !3053
  %13 = add i32 %11, 32, !dbg !3055
  call void @llvm.dbg.value(metadata i32 %13, metadata !3042, metadata !DIExpression()), !dbg !3046
  %14 = icmp ult i32 %13, %3, !dbg !3051
  br i1 %14, label %10, label %15, !dbg !3052, !llvm.loop !3056

15:                                               ; preds = %10, %7
  tail call void asm sideeffect "isb", ""() #22, !dbg !3058, !srcloc !2852
  tail call void @restore_interrupt_mask(i32 noundef %8) #20, !dbg !3060
  br label %16, !dbg !3061

16:                                               ; preds = %2, %15
  %17 = phi i32 [ 0, %15 ], [ -7, %2 ], !dbg !3046
  ret i32 %17, !dbg !3062
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_flush_one_cache_line(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !3063 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3065, metadata !DIExpression()), !dbg !3067
  %2 = and i32 %0, 31, !dbg !3068
  %3 = icmp eq i32 %2, 0, !dbg !3068
  br i1 %3, label %4, label %9, !dbg !3070

4:                                                ; preds = %1
  %5 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3071
  call void @llvm.dbg.value(metadata i32 %5, metadata !3066, metadata !DIExpression()), !dbg !3067
  %6 = and i32 %0, -32, !dbg !3072
  store volatile i32 %6, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !3073
  %7 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !3074
  %8 = or i32 %7, 21, !dbg !3074
  store volatile i32 %8, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !3074
  tail call void asm sideeffect "isb", ""() #22, !dbg !3075, !srcloc !2852
  tail call void @restore_interrupt_mask(i32 noundef %5) #20, !dbg !3077
  br label %9, !dbg !3078

9:                                                ; preds = %1, %4
  %10 = phi i32 [ 0, %4 ], [ -7, %1 ], !dbg !3067
  ret i32 %10, !dbg !3079
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_flush_multiple_cache_lines(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".tcm_code" !dbg !3080 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3082, metadata !DIExpression()), !dbg !3086
  call void @llvm.dbg.value(metadata i32 %1, metadata !3083, metadata !DIExpression()), !dbg !3086
  %3 = add i32 %1, %0, !dbg !3087
  call void @llvm.dbg.value(metadata i32 %3, metadata !3085, metadata !DIExpression()), !dbg !3086
  %4 = or i32 %1, %0, !dbg !3088
  %5 = and i32 %4, 31, !dbg !3088
  %6 = icmp eq i32 %5, 0, !dbg !3088
  br i1 %6, label %7, label %16, !dbg !3088

7:                                                ; preds = %2
  %8 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3090
  call void @llvm.dbg.value(metadata i32 %8, metadata !3084, metadata !DIExpression()), !dbg !3086
  call void @llvm.dbg.value(metadata i32 %0, metadata !3082, metadata !DIExpression()), !dbg !3086
  %9 = icmp ugt i32 %3, %0, !dbg !3091
  br i1 %9, label %10, label %15, !dbg !3092

10:                                               ; preds = %7, %10
  %11 = phi i32 [ %13, %10 ], [ %0, %7 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !3082, metadata !DIExpression()), !dbg !3086
  %12 = tail call i32 @hal_cache_flush_one_cache_line(i32 noundef %11) #21, !dbg !3093
  %13 = add i32 %11, 32, !dbg !3095
  call void @llvm.dbg.value(metadata i32 %13, metadata !3082, metadata !DIExpression()), !dbg !3086
  %14 = icmp ult i32 %13, %3, !dbg !3091
  br i1 %14, label %10, label %15, !dbg !3092, !llvm.loop !3096

15:                                               ; preds = %10, %7
  tail call void asm sideeffect "isb", ""() #22, !dbg !3098, !srcloc !2852
  tail call void @restore_interrupt_mask(i32 noundef %8) #20, !dbg !3100
  br label %16, !dbg !3101

16:                                               ; preds = %2, %15
  %17 = phi i32 [ 0, %15 ], [ -7, %2 ], !dbg !3086
  ret i32 %17, !dbg !3102
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_flush_all_cache_lines() local_unnamed_addr #0 section ".tcm_code" !dbg !3103 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3106
  call void @llvm.dbg.value(metadata i32 %1, metadata !3105, metadata !DIExpression()), !dbg !3107
  %2 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !3108
  %3 = and i32 %2, -31, !dbg !3108
  store volatile i32 %3, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !3108
  %4 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !3109
  %5 = or i32 %4, 19, !dbg !3109
  store volatile i32 %5, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !3109
  tail call void asm sideeffect "isb", ""() #22, !dbg !3110, !srcloc !2852
  tail call void @restore_interrupt_mask(i32 noundef %1) #20, !dbg !3112
  ret i32 0, !dbg !3113
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local zeroext i1 @hal_cache_is_cacheable(i32 noundef %0) local_unnamed_addr #2 !dbg !3114 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3118, metadata !DIExpression()), !dbg !3120
  %2 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !3121
  %3 = and i32 %2, 8, !dbg !3123
  %4 = icmp eq i32 %3, 0, !dbg !3123
  br i1 %4, label %23, label %5, !dbg !3124

5:                                                ; preds = %1, %20
  %6 = phi i32 [ %21, %20 ], [ 0, %1 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !3119, metadata !DIExpression()), !dbg !3120
  %7 = load volatile i32, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !3125
  %8 = shl nuw nsw i32 1, %6, !dbg !3130
  %9 = and i32 %7, %8, !dbg !3131
  %10 = icmp eq i32 %9, 0, !dbg !3131
  br i1 %10, label %20, label %11, !dbg !3132

11:                                               ; preds = %5
  %12 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634304 to [16 x i32]*), i32 0, i32 %6, !dbg !3133
  %13 = load volatile i32, i32* %12, align 4, !dbg !3133
  %14 = and i32 %13, -257, !dbg !3136
  %15 = icmp ugt i32 %14, %0, !dbg !3137
  br i1 %15, label %20, label %16, !dbg !3138

16:                                               ; preds = %11
  %17 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634240 to [16 x i32]*), i32 0, i32 %6, !dbg !3139
  %18 = load volatile i32, i32* %17, align 4, !dbg !3139
  %19 = icmp ugt i32 %18, %0, !dbg !3140
  br i1 %19, label %23, label %20, !dbg !3141

20:                                               ; preds = %5, %16, %11
  %21 = add nuw nsw i32 %6, 1, !dbg !3142
  call void @llvm.dbg.value(metadata i32 %21, metadata !3119, metadata !DIExpression()), !dbg !3120
  %22 = icmp eq i32 %21, 16, !dbg !3143
  br i1 %22, label %23, label %5, !dbg !3144, !llvm.loop !3145

23:                                               ; preds = %20, %16, %1
  %24 = phi i1 [ false, %1 ], [ false, %20 ], [ true, %16 ], !dbg !3120
  ret i1 %24, !dbg !3147
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_init(i32 noundef %0) local_unnamed_addr #0 !dbg !3148 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3154, metadata !DIExpression()), !dbg !3155
  %2 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #21, !dbg !3156
  br i1 %2, label %3, label %26, !dbg !3158

3:                                                ; preds = %1
  %4 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, !dbg !3159
  %5 = getelementptr inbounds %struct.gpt_context_t, %struct.gpt_context_t* %4, i32 0, i32 0, !dbg !3161
  %6 = load i32, i32* %5, align 4, !dbg !3161
  %7 = icmp eq i32 %6, 1, !dbg !3162
  br i1 %7, label %26, label %8, !dbg !3163

8:                                                ; preds = %3
  %9 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !3164
  %10 = load i8, i8* %9, align 4, !dbg !3164, !range !2809
  %11 = icmp eq i8 %10, 0, !dbg !3164
  br i1 %11, label %12, label %26, !dbg !3165

12:                                               ; preds = %8
  %13 = bitcast %struct.gpt_context_t* %4 to i8*, !dbg !3166
  %14 = tail call i8* @memset(i8* noundef nonnull %13, i32 noundef 0, i32 noundef 16) #20, !dbg !3167
  tail call void @gpt_open_clock_source() #20, !dbg !3168
  store i8 1, i8* %9, align 4, !dbg !3169
  %15 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %0, !dbg !3170
  %16 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %15, align 4, !dbg !3170
  %17 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %16, i32 0, i32 2, !dbg !3171
  %18 = load volatile i32, i32* %17, align 4, !dbg !3172
  %19 = and i32 %18, -2, !dbg !3172
  store volatile i32 %19, i32* %17, align 4, !dbg !3172
  %20 = shl nuw i32 1, %0, !dbg !3173
  %21 = xor i32 %20, -1, !dbg !3174
  %22 = load %struct.GPT_REGISTER_GLOABL_T*, %struct.GPT_REGISTER_GLOABL_T** @gp_gpt_glb, align 4, !dbg !3175
  %23 = getelementptr inbounds %struct.GPT_REGISTER_GLOABL_T, %struct.GPT_REGISTER_GLOABL_T* %22, i32 0, i32 2, !dbg !3176
  %24 = load volatile i32, i32* %23, align 4, !dbg !3177
  %25 = and i32 %24, %21, !dbg !3177
  store volatile i32 %25, i32* %23, align 4, !dbg !3177
  br label %26, !dbg !3178

26:                                               ; preds = %3, %8, %1, %12
  %27 = phi i32 [ 0, %12 ], [ -2, %1 ], [ -4, %8 ], [ -4, %3 ], !dbg !3155
  ret i32 %27, !dbg !3179
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) unnamed_addr #4 !dbg !3180 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3184, metadata !DIExpression()), !dbg !3185
  %2 = load i8, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3186, !range !2809
  %3 = icmp ne i8 %2, 0, !dbg !3188
  %4 = icmp ne i32 %0, 3
  %5 = icmp ult i32 %0, 4
  %6 = or i1 %4, %3, !dbg !3189
  %7 = and i1 %5, %6, !dbg !3189
  ret i1 %7, !dbg !3190
}

; Function Attrs: optsize
declare dso_local i8* @memset(i8* noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_deinit(i32 noundef %0) local_unnamed_addr #0 !dbg !3191 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3193, metadata !DIExpression()), !dbg !3194
  %2 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #21, !dbg !3195
  br i1 %2, label %3, label %14, !dbg !3197

3:                                                ; preds = %1
  %4 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, !dbg !3198
  %5 = getelementptr inbounds %struct.gpt_context_t, %struct.gpt_context_t* %4, i32 0, i32 0, !dbg !3200
  %6 = load i32, i32* %5, align 4, !dbg !3200
  %7 = icmp eq i32 %6, 1, !dbg !3201
  br i1 %7, label %14, label %8, !dbg !3202

8:                                                ; preds = %3
  %9 = bitcast %struct.gpt_context_t* %4 to i8*, !dbg !3203
  %10 = tail call i8* @memset(i8* noundef nonnull %9, i32 noundef 0, i32 noundef 16) #20, !dbg !3204
  %11 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !3205
  store i8 0, i8* %11, align 4, !dbg !3206
  %12 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %0, !dbg !3207
  %13 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %12, align 4, !dbg !3207
  tail call void @gpt_reset_default_timer(%struct.GPT_REGISTER_T* noundef %13) #20, !dbg !3208
  br label %14, !dbg !3209

14:                                               ; preds = %3, %1, %8
  %15 = phi i32 [ 0, %8 ], [ -2, %1 ], [ -3, %3 ], !dbg !3194
  ret i32 %15, !dbg !3210
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_get_free_run_count(i32 noundef %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #0 section ".tcm_code" !dbg !3211 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3216, metadata !DIExpression()), !dbg !3218
  call void @llvm.dbg.value(metadata i32* %1, metadata !3217, metadata !DIExpression()), !dbg !3218
  switch i32 %0, label %22 [
    i32 0, label %3
    i32 1, label %11
  ], !dbg !3219

3:                                                ; preds = %2
  %4 = load i32, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 5, i32 0), align 4, !dbg !3220
  %5 = icmp eq i32 %4, 1, !dbg !3224
  br i1 %5, label %8, label %6, !dbg !3225

6:                                                ; preds = %3
  %7 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 5), align 4, !dbg !3226
  tail call void @gpt_start_free_run_timer(%struct.GPT_REGISTER_T* noundef %7, i32 noundef 16, i32 noundef 0) #20, !dbg !3228
  store i32 1, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 5, i32 0), align 4, !dbg !3229
  br label %8, !dbg !3230

8:                                                ; preds = %6, %3
  %9 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 5), align 4, !dbg !3231
  %10 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %9) #20, !dbg !3232
  br label %20, !dbg !3233

11:                                               ; preds = %2
  %12 = load i32, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !3234
  %13 = icmp eq i32 %12, 1, !dbg !3238
  br i1 %13, label %16, label %14, !dbg !3239

14:                                               ; preds = %11
  %15 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 4), align 4, !dbg !3240
  tail call void @gpt_start_free_run_timer(%struct.GPT_REGISTER_T* noundef %15, i32 noundef 0, i32 noundef 12) #20, !dbg !3242
  store i32 1, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !3243
  br label %16, !dbg !3244

16:                                               ; preds = %14, %11
  %17 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 4), align 4, !dbg !3245
  %18 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %17) #20, !dbg !3246
  %19 = tail call i32 @gpt_clock_calibrate_count_to_us(i32 noundef %18) #20, !dbg !3247
  br label %20

20:                                               ; preds = %16, %8
  %21 = phi i32 [ %19, %16 ], [ %10, %8 ], !dbg !3248
  store i32 %21, i32* %1, align 4, !dbg !3248
  br label %22, !dbg !3249

22:                                               ; preds = %2, %20
  %23 = phi i32 [ 0, %20 ], [ -1, %2 ], !dbg !3218
  ret i32 %23, !dbg !3250
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @hal_gpt_get_duration_count(i32 noundef %0, i32 noundef %1, i32* noundef writeonly %2) local_unnamed_addr #6 section ".tcm_code" !dbg !3251 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3255, metadata !DIExpression()), !dbg !3258
  call void @llvm.dbg.value(metadata i32 %1, metadata !3256, metadata !DIExpression()), !dbg !3258
  call void @llvm.dbg.value(metadata i32* %2, metadata !3257, metadata !DIExpression()), !dbg !3258
  %4 = icmp eq i32* %2, null, !dbg !3259
  br i1 %4, label %7, label %5, !dbg !3261

5:                                                ; preds = %3
  %6 = sub i32 %1, %0, !dbg !3262
  store i32 %6, i32* %2, align 4, !dbg !3262
  br label %7, !dbg !3264

7:                                                ; preds = %3, %5
  %8 = phi i32 [ 0, %5 ], [ -1, %3 ], !dbg !3258
  ret i32 %8, !dbg !3265
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @hal_gpt_get_running_status(i32 noundef %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #7 !dbg !3266 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3271, metadata !DIExpression()), !dbg !3273
  call void @llvm.dbg.value(metadata i32* %1, metadata !3272, metadata !DIExpression()), !dbg !3273
  %3 = icmp ugt i32 %0, 5, !dbg !3274
  br i1 %3, label %7, label %4, !dbg !3276

4:                                                ; preds = %2
  %5 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !3277
  %6 = load i32, i32* %5, align 4, !dbg !3277
  store i32 %6, i32* %1, align 4, !dbg !3278
  br label %7, !dbg !3279

7:                                                ; preds = %2, %4
  %8 = phi i32 [ 0, %4 ], [ -2, %2 ], !dbg !3273
  ret i32 %8, !dbg !3280
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_register_callback(i32 noundef %0, void (i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !3281 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3285, metadata !DIExpression()), !dbg !3288
  call void @llvm.dbg.value(metadata void (i8*)* %1, metadata !3286, metadata !DIExpression()), !dbg !3288
  call void @llvm.dbg.value(metadata i8* %2, metadata !3287, metadata !DIExpression()), !dbg !3288
  %4 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #21, !dbg !3289
  br i1 %4, label %5, label %18, !dbg !3291

5:                                                ; preds = %3
  %6 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !3292
  %7 = load i32, i32* %6, align 4, !dbg !3292
  %8 = icmp eq i32 %7, 1, !dbg !3294
  br i1 %8, label %18, label %9, !dbg !3295

9:                                                ; preds = %5
  %10 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !3296
  %11 = load i8, i8* %10, align 4, !dbg !3296, !range !2809
  %12 = icmp eq i8 %11, 1, !dbg !3297
  br i1 %12, label %13, label %18, !dbg !3298

13:                                               ; preds = %9
  %14 = icmp eq void (i8*)* %1, null, !dbg !3299
  br i1 %14, label %18, label %15, !dbg !3301

15:                                               ; preds = %13
  %16 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 1, i32 0, !dbg !3302
  store void (i8*)* %1, void (i8*)** %16, align 4, !dbg !3303
  %17 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 1, i32 1, !dbg !3304
  store i8* %2, i8** %17, align 4, !dbg !3305
  tail call void @gpt_nvic_register() #20, !dbg !3306
  br label %18, !dbg !3307

18:                                               ; preds = %13, %5, %9, %3, %15
  %19 = phi i32 [ 0, %15 ], [ -2, %3 ], [ -3, %9 ], [ -3, %5 ], [ -1, %13 ], !dbg !3288
  ret i32 %19, !dbg !3308
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_start_timer_ms(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !3309 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !3314, metadata !DIExpression()), !dbg !3318
  call void @llvm.dbg.value(metadata i32 %1, metadata !3315, metadata !DIExpression()), !dbg !3318
  call void @llvm.dbg.value(metadata i32 %2, metadata !3316, metadata !DIExpression()), !dbg !3318
  %5 = bitcast i32* %4 to i8*, !dbg !3319
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5), !dbg !3319
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3317, metadata !DIExpression()), !dbg !3320
  %6 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #21, !dbg !3321
  br i1 %6, label %7, label %51, !dbg !3323

7:                                                ; preds = %3
  %8 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !3324
  %9 = load i32, i32* %8, align 4, !dbg !3324
  %10 = icmp eq i32 %9, 1, !dbg !3326
  br i1 %10, label %51, label %11, !dbg !3327

11:                                               ; preds = %7
  %12 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !3328
  %13 = load i8, i8* %12, align 4, !dbg !3328, !range !2809
  %14 = icmp eq i8 %13, 1, !dbg !3329
  br i1 %14, label %15, label %51, !dbg !3330

15:                                               ; preds = %11
  %16 = icmp ugt i32 %1, 130150523, !dbg !3331
  br i1 %16, label %51, label %17, !dbg !3333

17:                                               ; preds = %15
  %18 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3334
  store volatile i32 %18, i32* %4, align 4, !dbg !3335
  tail call void @gpt_open_clock_source() #20, !dbg !3336
  %19 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %0, !dbg !3337
  %20 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3337
  %21 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %20, i32 0, i32 2, !dbg !3338
  %22 = load volatile i32, i32* %21, align 4, !dbg !3339
  %23 = and i32 %22, -2, !dbg !3339
  store volatile i32 %23, i32* %21, align 4, !dbg !3339
  %24 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3340
  %25 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %24, i32 0, i32 0, !dbg !3341
  %26 = load volatile i32, i32* %25, align 4, !dbg !3342
  %27 = and i32 %26, -2, !dbg !3342
  store volatile i32 %27, i32* %25, align 4, !dbg !3342
  %28 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3343
  %29 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %28, i32 0, i32 1, !dbg !3344
  store volatile i32 16, i32* %29, align 4, !dbg !3345
  %30 = tail call i32 @gpt_convert_ms_to_32k_count(i32 noundef %1) #20, !dbg !3346
  %31 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3347
  %32 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %31, i32 0, i32 6, !dbg !3348
  store volatile i32 %30, i32* %32, align 4, !dbg !3349
  %33 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3350
  %34 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %33, i32 0, i32 4, !dbg !3351
  store volatile i32 1, i32* %34, align 4, !dbg !3352
  %35 = shl i32 %2, 4, !dbg !3353
  %36 = or i32 %35, 2, !dbg !3354
  %37 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3355
  %38 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %37, i32 0, i32 0, !dbg !3356
  store volatile i32 %36, i32* %38, align 4, !dbg !3357
  %39 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4
  %40 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %39, i32 0, i32 5
  br label %41, !dbg !3358

41:                                               ; preds = %41, %17
  %42 = load volatile i32, i32* %40, align 4, !dbg !3359
  %43 = icmp eq i32 %42, 0, !dbg !3358
  br i1 %43, label %44, label %41, !dbg !3358, !llvm.loop !3360

44:                                               ; preds = %41
  %45 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %39, i32 0, i32 0, !dbg !3362
  %46 = load volatile i32, i32* %45, align 4, !dbg !3363
  %47 = or i32 %46, 1, !dbg !3363
  store volatile i32 %47, i32* %45, align 4, !dbg !3363
  %48 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3364
  %49 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %48, i32 0, i32 2, !dbg !3365
  store volatile i32 1, i32* %49, align 4, !dbg !3366
  store i32 1, i32* %8, align 4, !dbg !3367
  %50 = load volatile i32, i32* %4, align 4, !dbg !3368
  tail call void @restore_interrupt_mask(i32 noundef %50) #20, !dbg !3369
  br label %51, !dbg !3370

51:                                               ; preds = %15, %7, %11, %3, %44
  %52 = phi i32 [ 0, %44 ], [ -2, %3 ], [ -4, %11 ], [ -4, %7 ], [ -1, %15 ], !dbg !3318
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !3371
  ret i32 %52, !dbg !3371
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #8

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #8

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_delay_ms(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !3372 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3376, metadata !DIExpression()), !dbg !3377
  %2 = load i32, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 5, i32 0), align 4, !dbg !3378
  %3 = icmp eq i32 %2, 1, !dbg !3380
  br i1 %3, label %6, label %4, !dbg !3381

4:                                                ; preds = %1
  %5 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 5), align 4, !dbg !3382
  tail call void @gpt_start_free_run_timer(%struct.GPT_REGISTER_T* noundef %5, i32 noundef 16, i32 noundef 0) #20, !dbg !3384
  store i32 1, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 5, i32 0), align 4, !dbg !3385
  br label %6, !dbg !3386

6:                                                ; preds = %4, %1
  %7 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 5), align 4, !dbg !3387
  %8 = tail call i32 @gpt_convert_ms_to_32k_count(i32 noundef %0) #20, !dbg !3388
  tail call void @gpt_delay_time(%struct.GPT_REGISTER_T* noundef %7, i32 noundef %8) #20, !dbg !3389
  ret i32 0, !dbg !3390
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_start_timer_us(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !3391 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !3393, metadata !DIExpression()), !dbg !3397
  call void @llvm.dbg.value(metadata i32 %1, metadata !3394, metadata !DIExpression()), !dbg !3397
  call void @llvm.dbg.value(metadata i32 %2, metadata !3395, metadata !DIExpression()), !dbg !3397
  %5 = bitcast i32* %4 to i8*, !dbg !3398
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5), !dbg !3398
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3396, metadata !DIExpression()), !dbg !3399
  %6 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #21, !dbg !3400
  br i1 %6, label %7, label %50, !dbg !3402

7:                                                ; preds = %3
  %8 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !3403
  %9 = load i32, i32* %8, align 4, !dbg !3403
  %10 = icmp eq i32 %9, 1, !dbg !3405
  br i1 %10, label %50, label %11, !dbg !3406

11:                                               ; preds = %7
  %12 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !3407
  %13 = load i8, i8* %12, align 4, !dbg !3407, !range !2809
  %14 = icmp eq i8 %13, 1, !dbg !3408
  br i1 %14, label %15, label %50, !dbg !3409

15:                                               ; preds = %11
  %16 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 3, !dbg !3410
  store i8 1, i8* %16, align 1, !dbg !3411
  %17 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3412
  store volatile i32 %17, i32* %4, align 4, !dbg !3413
  tail call void @gpt_open_clock_source() #20, !dbg !3414
  %18 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %0, !dbg !3415
  %19 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !3415
  %20 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %19, i32 0, i32 2, !dbg !3416
  %21 = load volatile i32, i32* %20, align 4, !dbg !3417
  %22 = and i32 %21, -2, !dbg !3417
  store volatile i32 %22, i32* %20, align 4, !dbg !3417
  %23 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !3418
  %24 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %23, i32 0, i32 0, !dbg !3419
  %25 = load volatile i32, i32* %24, align 4, !dbg !3420
  %26 = and i32 %25, -2, !dbg !3420
  store volatile i32 %26, i32* %24, align 4, !dbg !3420
  %27 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !3421
  %28 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %27, i32 0, i32 1, !dbg !3422
  store volatile i32 12, i32* %28, align 4, !dbg !3423
  %29 = tail call i32 @gpt_clock_calibrate_us_to_count(i32 noundef %1) #20, !dbg !3424
  %30 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !3425
  %31 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %30, i32 0, i32 6, !dbg !3426
  store volatile i32 %29, i32* %31, align 4, !dbg !3427
  %32 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !3428
  %33 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %32, i32 0, i32 4, !dbg !3429
  store volatile i32 1, i32* %33, align 4, !dbg !3430
  %34 = shl i32 %2, 4, !dbg !3431
  %35 = or i32 %34, 2, !dbg !3432
  %36 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !3433
  %37 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %36, i32 0, i32 0, !dbg !3434
  store volatile i32 %35, i32* %37, align 4, !dbg !3435
  %38 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4
  %39 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %38, i32 0, i32 5
  br label %40, !dbg !3436

40:                                               ; preds = %40, %15
  %41 = load volatile i32, i32* %39, align 4, !dbg !3437
  %42 = icmp eq i32 %41, 0, !dbg !3436
  br i1 %42, label %43, label %40, !dbg !3436, !llvm.loop !3438

43:                                               ; preds = %40
  %44 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %38, i32 0, i32 0, !dbg !3440
  %45 = load volatile i32, i32* %44, align 4, !dbg !3441
  %46 = or i32 %45, 1, !dbg !3441
  store volatile i32 %46, i32* %44, align 4, !dbg !3441
  %47 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !3442
  %48 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %47, i32 0, i32 2, !dbg !3443
  store volatile i32 1, i32* %48, align 4, !dbg !3444
  %49 = load volatile i32, i32* %4, align 4, !dbg !3445
  tail call void @restore_interrupt_mask(i32 noundef %49) #20, !dbg !3446
  store i32 1, i32* %8, align 4, !dbg !3447
  br label %50, !dbg !3448

50:                                               ; preds = %7, %11, %3, %43
  %51 = phi i32 [ 0, %43 ], [ -2, %3 ], [ -4, %11 ], [ -4, %7 ], !dbg !3397
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !3449
  ret i32 %51, !dbg !3449
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_delay_us(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !3450 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3452, metadata !DIExpression()), !dbg !3453
  %2 = load i32, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !3454
  %3 = icmp eq i32 %2, 1, !dbg !3456
  br i1 %3, label %6, label %4, !dbg !3457

4:                                                ; preds = %1
  %5 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 4), align 4, !dbg !3458
  tail call void @gpt_start_free_run_timer(%struct.GPT_REGISTER_T* noundef %5, i32 noundef 0, i32 noundef 12) #20, !dbg !3460
  store i32 1, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !3461
  br label %6, !dbg !3462

6:                                                ; preds = %4, %1
  %7 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 4), align 4, !dbg !3463
  %8 = tail call i32 @gpt_clock_calibrate_us_to_count(i32 noundef %0) #20, !dbg !3464
  tail call void @gpt_delay_time(%struct.GPT_REGISTER_T* noundef %7, i32 noundef %8) #20, !dbg !3465
  ret i32 0, !dbg !3466
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_stop_timer(i32 noundef %0) local_unnamed_addr #0 !dbg !3467 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !3469, metadata !DIExpression()), !dbg !3471
  %3 = bitcast i32* %2 to i8*, !dbg !3472
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !3472
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3470, metadata !DIExpression()), !dbg !3473
  %4 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #21, !dbg !3474
  br i1 %4, label %5, label %24, !dbg !3476

5:                                                ; preds = %1
  %6 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3477
  store volatile i32 %6, i32* %2, align 4, !dbg !3478
  %7 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %0, !dbg !3479
  %8 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %7, align 4, !dbg !3479
  %9 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %8, i32 0, i32 2, !dbg !3480
  %10 = load volatile i32, i32* %9, align 4, !dbg !3481
  %11 = and i32 %10, -2, !dbg !3481
  store volatile i32 %11, i32* %9, align 4, !dbg !3481
  %12 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %7, align 4, !dbg !3482
  %13 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %12, i32 0, i32 0, !dbg !3483
  %14 = load volatile i32, i32* %13, align 4, !dbg !3484
  %15 = and i32 %14, -2, !dbg !3484
  store volatile i32 %15, i32* %13, align 4, !dbg !3484
  %16 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %7, align 4, !dbg !3485
  %17 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %16, i32 0, i32 4, !dbg !3486
  store volatile i32 1, i32* %17, align 4, !dbg !3487
  %18 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !3488
  store i32 0, i32* %18, align 4, !dbg !3489
  %19 = load volatile i32, i32* %2, align 4, !dbg !3490
  tail call void @restore_interrupt_mask(i32 noundef %19) #20, !dbg !3491
  %20 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 3, !dbg !3492
  %21 = load i8, i8* %20, align 1, !dbg !3492, !range !2809
  %22 = icmp eq i8 %21, 0, !dbg !3492
  br i1 %22, label %24, label %23, !dbg !3494

23:                                               ; preds = %5
  store i8 0, i8* %20, align 1, !dbg !3495
  br label %24, !dbg !3497

24:                                               ; preds = %5, %23, %1
  %25 = phi i32 [ -2, %1 ], [ 0, %23 ], [ 0, %5 ], !dbg !3471
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !3498
  ret i32 %25, !dbg !3498
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_sw_get_timer(i32* noundef writeonly %0) local_unnamed_addr #0 !dbg !3499 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !3503, metadata !DIExpression()), !dbg !3506
  %2 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !3507
  %3 = icmp ugt i32 %2, 31, !dbg !3509
  br i1 %3, label %13, label %4, !dbg !3510

4:                                                ; preds = %1
  %5 = icmp eq i32* %0, null, !dbg !3511
  br i1 %5, label %13, label %6, !dbg !3513

6:                                                ; preds = %4
  %7 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3514
  call void @llvm.dbg.value(metadata i32 %7, metadata !3505, metadata !DIExpression()), !dbg !3506
  %8 = tail call i32 @gpt_sw_get_free_timer() #20, !dbg !3515
  call void @llvm.dbg.value(metadata i32 %8, metadata !3504, metadata !DIExpression()), !dbg !3506
  %9 = or i32 %8, -559087616, !dbg !3516
  store i32 %9, i32* %0, align 4, !dbg !3517
  %10 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %8, i32 2, !dbg !3518
  store i8 1, i8* %10, align 4, !dbg !3519
  %11 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !3520
  %12 = add i32 %11, 1, !dbg !3520
  store i32 %12, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !3520
  tail call void @restore_interrupt_mask(i32 noundef %7) #20, !dbg !3521
  br label %13, !dbg !3522

13:                                               ; preds = %4, %1, %6
  %14 = phi i32 [ 0, %6 ], [ -3, %1 ], [ -1, %4 ], !dbg !3506
  ret i32 %14, !dbg !3523
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @hal_gpt_sw_free_timer(i32 noundef %0) local_unnamed_addr #9 !dbg !3524 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !3526, metadata !DIExpression()), !dbg !3528
  %3 = bitcast i32* %2 to i8*, !dbg !3529
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !3529
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3527, metadata !DIExpression()), !dbg !3530
  %4 = and i32 %0, -559087616, !dbg !3531
  %5 = icmp eq i32 %4, -559087616, !dbg !3533
  br i1 %5, label %6, label %24, !dbg !3534

6:                                                ; preds = %1
  %7 = and i32 %0, 65535, !dbg !3535
  store volatile i32 %7, i32* %2, align 4, !dbg !3536
  %8 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !3537
  %9 = icmp eq i32 %8, 0, !dbg !3539
  br i1 %9, label %24, label %10, !dbg !3540

10:                                               ; preds = %6
  %11 = load volatile i32, i32* %2, align 4, !dbg !3541
  %12 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %11, i32 3, !dbg !3543
  %13 = load i8, i8* %12, align 1, !dbg !3543, !range !2809
  %14 = icmp eq i8 %13, 0, !dbg !3543
  br i1 %14, label %15, label %24, !dbg !3544

15:                                               ; preds = %10
  %16 = load volatile i32, i32* %2, align 4, !dbg !3545
  %17 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %16, i32 2, !dbg !3547
  %18 = load i8, i8* %17, align 4, !dbg !3547, !range !2809
  %19 = icmp eq i8 %18, 1, !dbg !3548
  br i1 %19, label %20, label %24, !dbg !3549

20:                                               ; preds = %15
  %21 = load volatile i32, i32* %2, align 4, !dbg !3550
  %22 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %21, i32 2, !dbg !3551
  store i8 0, i8* %22, align 4, !dbg !3552
  %23 = add i32 %8, -1, !dbg !3553
  store i32 %23, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !3553
  br label %24, !dbg !3554

24:                                               ; preds = %15, %10, %6, %1, %20
  %25 = phi i32 [ 0, %20 ], [ -1, %1 ], [ -3, %6 ], [ -3, %10 ], [ -3, %15 ], !dbg !3528
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !3555
  ret i32 %25, !dbg !3555
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_sw_start_timer_ms(i32 noundef %0, i32 noundef %1, void (i8*)* noundef %2, i8* noundef %3) local_unnamed_addr #0 !dbg !3556 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3560, metadata !DIExpression()), !dbg !3567
  call void @llvm.dbg.value(metadata i32 %1, metadata !3561, metadata !DIExpression()), !dbg !3567
  call void @llvm.dbg.value(metadata void (i8*)* %2, metadata !3562, metadata !DIExpression()), !dbg !3567
  call void @llvm.dbg.value(metadata i8* %3, metadata !3563, metadata !DIExpression()), !dbg !3567
  %5 = and i32 %0, -559087616, !dbg !3568
  %6 = icmp ne i32 %5, -559087616, !dbg !3570
  %7 = icmp eq void (i8*)* %2, null
  %8 = or i1 %6, %7, !dbg !3571
  call void @llvm.dbg.value(metadata i32 %0, metadata !3566, metadata !DIExpression(DW_OP_constu, 65535, DW_OP_and, DW_OP_stack_value)), !dbg !3567
  br i1 %8, label %44, label %9, !dbg !3571

9:                                                ; preds = %4
  %10 = and i32 %0, 65535, !dbg !3572
  call void @llvm.dbg.value(metadata i32 %10, metadata !3566, metadata !DIExpression()), !dbg !3567
  %11 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %10, i32 3, !dbg !3573
  %12 = load i8, i8* %11, align 1, !dbg !3573, !range !2809
  %13 = icmp eq i8 %12, 0, !dbg !3573
  br i1 %13, label %14, label %44, !dbg !3575

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %10, i32 2, !dbg !3576
  %16 = load i8, i8* %15, align 4, !dbg !3576, !range !2809
  %17 = icmp eq i8 %16, 1, !dbg !3578
  br i1 %17, label %18, label %44, !dbg !3579

18:                                               ; preds = %14
  %19 = icmp ugt i32 %1, 130150523, !dbg !3580
  br i1 %19, label %44, label %20, !dbg !3582

20:                                               ; preds = %18
  %21 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3583
  call void @llvm.dbg.value(metadata i32 %21, metadata !3565, metadata !DIExpression()), !dbg !3567
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3584
  %22 = load i8, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 5), align 4, !dbg !3585, !range !2809
  %23 = icmp eq i8 %22, 0, !dbg !3587
  br i1 %23, label %24, label %27, !dbg !3588

24:                                               ; preds = %20
  %25 = tail call i32 @hal_gpt_init(i32 noundef 3) #21, !dbg !3589
  %26 = tail call i32 @hal_gpt_register_callback(i32 noundef 3, void (i8*)* noundef nonnull @gpt_sw_handler, i8* noundef null) #21, !dbg !3591
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 5), align 4, !dbg !3592
  br label %27, !dbg !3593

27:                                               ; preds = %24, %20
  %28 = tail call i32 @hal_gpt_stop_timer(i32 noundef 3) #21, !dbg !3594
  %29 = load i8, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 6), align 1, !dbg !3595, !range !2809
  %30 = icmp eq i8 %29, 0, !dbg !3597
  br i1 %30, label %31, label %34, !dbg !3598

31:                                               ; preds = %27
  %32 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4, !dbg !3599
  %33 = tail call i32 @gpt_sw_get_current_time_ms(%struct.GPT_REGISTER_T* noundef %32) #20, !dbg !3601
  call void @llvm.dbg.value(metadata i32 %33, metadata !3564, metadata !DIExpression()), !dbg !3567
  br label %34, !dbg !3602

34:                                               ; preds = %27, %31
  %35 = phi i32 [ %33, %31 ], [ 0, %27 ], !dbg !3603
  call void @llvm.dbg.value(metadata i32 %35, metadata !3564, metadata !DIExpression()), !dbg !3567
  %36 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3604
  %37 = add i32 %36, %35, !dbg !3604
  store i32 %37, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3604
  %38 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3605
  %39 = add i32 %38, 1, !dbg !3605
  store i32 %39, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3605
  store i8 1, i8* %11, align 1, !dbg !3606
  %40 = add i32 %37, %1, !dbg !3607
  %41 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %10, i32 1, !dbg !3608
  store i32 %40, i32* %41, align 4, !dbg !3609
  %42 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %10, i32 0, i32 0, !dbg !3610
  store void (i8*)* %2, void (i8*)** %42, align 4, !dbg !3611
  %43 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %10, i32 0, i32 1, !dbg !3612
  store i8* %3, i8** %43, align 4, !dbg !3613
  tail call void @gpt_sw_start_timer() #20, !dbg !3614
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3615
  tail call void @restore_interrupt_mask(i32 noundef %21) #20, !dbg !3616
  br label %44, !dbg !3617

44:                                               ; preds = %18, %14, %9, %4, %34
  %45 = phi i32 [ 0, %34 ], [ -1, %4 ], [ -3, %9 ], [ -3, %14 ], [ -1, %18 ], !dbg !3567
  ret i32 %45, !dbg !3618
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_sw_stop_timer_ms(i32 noundef %0) local_unnamed_addr #0 !dbg !3619 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3621, metadata !DIExpression()), !dbg !3625
  %2 = and i32 %0, -559087616, !dbg !3626
  %3 = icmp eq i32 %2, -559087616, !dbg !3628
  br i1 %3, label %4, label %31, !dbg !3629

4:                                                ; preds = %1
  %5 = and i32 %0, 65535, !dbg !3630
  call void @llvm.dbg.value(metadata i32 %5, metadata !3624, metadata !DIExpression()), !dbg !3625
  %6 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %5, i32 3, !dbg !3631
  %7 = load i8, i8* %6, align 1, !dbg !3631, !range !2809
  %8 = icmp eq i8 %7, 1, !dbg !3633
  br i1 %8, label %9, label %31, !dbg !3634

9:                                                ; preds = %4
  %10 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %5, i32 2, !dbg !3635
  %11 = load i8, i8* %10, align 4, !dbg !3635, !range !2809
  %12 = icmp eq i8 %11, 1, !dbg !3637
  br i1 %12, label %13, label %31, !dbg !3638

13:                                               ; preds = %9
  %14 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3639
  call void @llvm.dbg.value(metadata i32 %14, metadata !3623, metadata !DIExpression()), !dbg !3625
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3640
  %15 = tail call i32 @hal_gpt_stop_timer(i32 noundef 3) #21, !dbg !3641
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3642
  %16 = load i8, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 6), align 1, !dbg !3643, !range !2809
  %17 = icmp eq i8 %16, 0, !dbg !3645
  br i1 %17, label %18, label %21, !dbg !3646

18:                                               ; preds = %13
  %19 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4, !dbg !3647
  %20 = tail call i32 @gpt_sw_get_current_time_ms(%struct.GPT_REGISTER_T* noundef %19) #20, !dbg !3649
  call void @llvm.dbg.value(metadata i32 %20, metadata !3622, metadata !DIExpression()), !dbg !3625
  br label %21, !dbg !3650

21:                                               ; preds = %13, %18
  %22 = phi i32 [ %20, %18 ], [ 0, %13 ], !dbg !3651
  call void @llvm.dbg.value(metadata i32 %22, metadata !3622, metadata !DIExpression()), !dbg !3625
  %23 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3652
  %24 = add i32 %23, %22, !dbg !3652
  store i32 %24, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3652
  %25 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3653
  %26 = add i32 %25, -1, !dbg !3653
  store i32 %26, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3653
  store i8 0, i8* %6, align 1, !dbg !3654
  %27 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3655
  %28 = icmp eq i32 %27, 0, !dbg !3657
  br i1 %28, label %30, label %29, !dbg !3658

29:                                               ; preds = %21
  tail call void @gpt_sw_start_timer() #20, !dbg !3659
  br label %30, !dbg !3661

30:                                               ; preds = %21, %29
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3662
  tail call void @restore_interrupt_mask(i32 noundef %14) #20, !dbg !3663
  br label %31, !dbg !3664

31:                                               ; preds = %9, %4, %1, %30
  %32 = phi i32 [ 0, %30 ], [ -1, %1 ], [ -3, %4 ], [ -3, %9 ], !dbg !3625
  ret i32 %32, !dbg !3665
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_sw_get_remaining_time_ms(i32 noundef %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #0 !dbg !3666 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3670, metadata !DIExpression()), !dbg !3675
  call void @llvm.dbg.value(metadata i32* %1, metadata !3671, metadata !DIExpression()), !dbg !3675
  %3 = and i32 %0, -559087616, !dbg !3676
  %4 = icmp eq i32 %3, -559087616, !dbg !3678
  br i1 %4, label %5, label %20, !dbg !3679

5:                                                ; preds = %2
  %6 = and i32 %0, 65535, !dbg !3680
  call void @llvm.dbg.value(metadata i32 %6, metadata !3674, metadata !DIExpression()), !dbg !3675
  %7 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %6, i32 2, !dbg !3681
  %8 = load i8, i8* %7, align 4, !dbg !3681, !range !2809
  %9 = icmp eq i8 %8, 1, !dbg !3683
  br i1 %9, label %10, label %20, !dbg !3684

10:                                               ; preds = %5
  %11 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3685
  call void @llvm.dbg.value(metadata i32 %11, metadata !3673, metadata !DIExpression()), !dbg !3675
  %12 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3686
  %13 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4, !dbg !3687
  %14 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %13, i32 0, i32 5, !dbg !3688
  %15 = load volatile i32, i32* %14, align 4, !dbg !3688
  %16 = add i32 %15, %12, !dbg !3689
  call void @llvm.dbg.value(metadata i32 %16, metadata !3672, metadata !DIExpression()), !dbg !3675
  %17 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %6, i32 1, !dbg !3690
  %18 = load i32, i32* %17, align 4, !dbg !3690
  %19 = tail call i32 @llvm.usub.sat.i32(i32 %18, i32 %16), !dbg !3692
  store i32 %19, i32* %1, align 4, !dbg !3693
  tail call void @restore_interrupt_mask(i32 noundef %11) #20, !dbg !3694
  br label %20, !dbg !3695

20:                                               ; preds = %5, %2, %10
  %21 = phi i32 [ 0, %10 ], [ -1, %2 ], [ -3, %5 ], !dbg !3675
  ret i32 %21, !dbg !3696
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.usub.sat.i32(i32, i32) #1

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @gpt_calibrate_algorithm(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #10 section ".tcm_code" !dbg !3697 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3701, metadata !DIExpression()), !dbg !3708
  call void @llvm.dbg.value(metadata i32 %1, metadata !3702, metadata !DIExpression()), !dbg !3708
  call void @llvm.dbg.value(metadata i32 %2, metadata !3703, metadata !DIExpression()), !dbg !3708
  %4 = and i32 %0, 65535, !dbg !3709
  %5 = mul i32 %4, %1, !dbg !3710
  call void @llvm.dbg.value(metadata i32 %5, metadata !3704, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !3708
  %6 = lshr i32 %0, 16, !dbg !3711
  %7 = mul i32 %6, %1, !dbg !3712
  call void @llvm.dbg.value(metadata i32 %7, metadata !3704, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !3708
  %8 = and i32 %5, 65535, !dbg !3713
  call void @llvm.dbg.value(metadata i32 %8, metadata !3706, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !3708
  %9 = lshr i32 %5, 16, !dbg !3714
  %10 = add i32 %9, %7, !dbg !3715
  call void @llvm.dbg.value(metadata i32 %10, metadata !3706, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !3708
  %11 = udiv i32 %10, %2, !dbg !3716
  call void @llvm.dbg.value(metadata i32 %11, metadata !3707, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !3708
  %12 = mul i32 %11, %2
  %13 = sub i32 %10, %12
  %14 = shl i32 %13, 16, !dbg !3717
  %15 = or i32 %14, %8, !dbg !3718
  %16 = udiv i32 %15, %2, !dbg !3719
  call void @llvm.dbg.value(metadata i32 %16, metadata !3707, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !3708
  %17 = shl i32 %11, 16, !dbg !3720
  %18 = add i32 %16, %17, !dbg !3721
  ret i32 %18, !dbg !3722
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) local_unnamed_addr #11 section ".tcm_code" !dbg !3723 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3727, metadata !DIExpression()), !dbg !3728
  %2 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 5, !dbg !3729
  %3 = load volatile i32, i32* %2, align 4, !dbg !3729
  ret i32 %3, !dbg !3730
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @gpt_convert_ms_to_32k_count(i32 noundef %0) local_unnamed_addr #10 section ".tcm_code" !dbg !3731 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3735, metadata !DIExpression()), !dbg !3736
  %2 = shl i32 %0, 5, !dbg !3737
  %3 = mul i32 %0, 7, !dbg !3738
  %4 = udiv i32 %3, 10, !dbg !3739
  %5 = add i32 %4, %2, !dbg !3740
  %6 = mul i32 %0, 6, !dbg !3741
  %7 = udiv i32 %6, 100, !dbg !3742
  %8 = add i32 %5, %7, !dbg !3743
  %9 = shl i32 %0, 3, !dbg !3744
  %10 = udiv i32 %9, 1000, !dbg !3745
  %11 = add i32 %8, %10, !dbg !3746
  ret i32 %11, !dbg !3747
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_get_lfosc_clock() local_unnamed_addr #0 section ".tcm_code" !dbg !290 {
  %1 = load i1, i1* @gpt_get_lfosc_clock.flag, align 1, !dbg !3748
  br i1 %1, label %10, label %2, !dbg !3750

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @is_clk_use_lfosc() #20, !dbg !3751
  br i1 %3, label %4, label %6, !dbg !3754

4:                                                ; preds = %2
  %5 = tail call i32 @clock_get_freq_lfosc() #20, !dbg !3755
  store i32 %5, i32* @gpt_clock_source, align 4, !dbg !3757
  switch i32 %5, label %8 [
    i32 26000, label %6
    i32 0, label %6
  ], !dbg !3758

6:                                                ; preds = %2, %4, %4
  %7 = phi i1 [ false, %4 ], [ false, %4 ], [ true, %2 ]
  store i32 26000, i32* @gpt_clock_source, align 4, !dbg !3760
  br label %8, !dbg !3760

8:                                                ; preds = %6, %4
  %9 = phi i1 [ true, %4 ], [ %7, %6 ]
  store i1 %9, i1* @gpt_get_lfosc_clock.flag, align 1, !dbg !3760
  br label %10, !dbg !3761

10:                                               ; preds = %8, %0
  ret void, !dbg !3761
}

; Function Attrs: optsize
declare dso_local i32 @clock_get_freq_lfosc() local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_open_clock_source() local_unnamed_addr #0 section ".tcm_code" !dbg !3762 {
  %1 = tail call zeroext i1 @hal_clock_is_enabled(i32 noundef 66) #20, !dbg !3763
  br i1 %1, label %4, label %2, !dbg !3765

2:                                                ; preds = %0
  %3 = tail call i32 @hal_clock_enable(i32 noundef 66) #20, !dbg !3766
  br label %4, !dbg !3768

4:                                                ; preds = %2, %0
  ret void, !dbg !3769
}

; Function Attrs: optsize
declare dso_local zeroext i1 @hal_clock_is_enabled(i32 noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local i32 @hal_clock_enable(i32 noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpt_clock_calibrate_us_to_count(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !3770 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3772, metadata !DIExpression()), !dbg !3773
  tail call void @gpt_get_lfosc_clock() #21, !dbg !3774
  %2 = tail call zeroext i1 @is_clk_use_lfosc() #20, !dbg !3775
  br i1 %2, label %3, label %6, !dbg !3777

3:                                                ; preds = %1
  %4 = load i32, i32* @gpt_clock_source, align 4, !dbg !3778
  %5 = tail call i32 @gpt_calibrate_algorithm(i32 noundef %0, i32 noundef %4, i32 noundef 26000) #21, !dbg !3780
  br label %6, !dbg !3781

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ %0, %1 ], !dbg !3782
  ret i32 %7, !dbg !3783
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpt_clock_calibrate_count_to_us(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !3784 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3786, metadata !DIExpression()), !dbg !3787
  tail call void @gpt_get_lfosc_clock() #21, !dbg !3788
  %2 = tail call zeroext i1 @is_clk_use_lfosc() #20, !dbg !3789
  br i1 %2, label %3, label %6, !dbg !3791

3:                                                ; preds = %1
  %4 = load i32, i32* @gpt_clock_source, align 4, !dbg !3792
  %5 = tail call i32 @gpt_calibrate_algorithm(i32 noundef %0, i32 noundef 26000, i32 noundef %4) #21, !dbg !3794
  br label %6, !dbg !3795

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ %0, %1 ], !dbg !3796
  ret i32 %7, !dbg !3797
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_start_free_run_timer(%struct.GPT_REGISTER_T* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 section ".tcm_code" !dbg !3798 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3802, metadata !DIExpression()), !dbg !3805
  call void @llvm.dbg.value(metadata i32 %1, metadata !3803, metadata !DIExpression()), !dbg !3805
  call void @llvm.dbg.value(metadata i32 %2, metadata !3804, metadata !DIExpression()), !dbg !3805
  tail call void @gpt_open_clock_source() #21, !dbg !3806
  %4 = or i32 %2, %1, !dbg !3807
  %5 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 1, !dbg !3808
  store volatile i32 %4, i32* %5, align 4, !dbg !3809
  %6 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 0, !dbg !3810
  store volatile i32 49, i32* %6, align 4, !dbg !3811
  ret void, !dbg !3812
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gpt_delay_time(%struct.GPT_REGISTER_T* noundef %0, i32 noundef %1) local_unnamed_addr #2 section ".tcm_code" !dbg !3813 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3817, metadata !DIExpression()), !dbg !3821
  call void @llvm.dbg.value(metadata i32 %1, metadata !3818, metadata !DIExpression()), !dbg !3821
  call void @llvm.dbg.value(metadata i32 0, metadata !3819, metadata !DIExpression()), !dbg !3821
  call void @llvm.dbg.value(metadata i32 0, metadata !3820, metadata !DIExpression()), !dbg !3821
  %3 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) #21, !dbg !3822
  call void @llvm.dbg.value(metadata i32 %3, metadata !3820, metadata !DIExpression()), !dbg !3821
  %4 = add i32 %1, 1, !dbg !3823
  %5 = add i32 %4, %3, !dbg !3824
  call void @llvm.dbg.value(metadata i32 %5, metadata !3819, metadata !DIExpression()), !dbg !3821
  %6 = icmp ugt i32 %5, %3, !dbg !3825
  br i1 %6, label %7, label %10, !dbg !3827

7:                                                ; preds = %2, %7
  %8 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) #21, !dbg !3828
  %9 = icmp ult i32 %8, %5, !dbg !3830
  br i1 %9, label %7, label %16, !dbg !3831, !llvm.loop !3832

10:                                               ; preds = %2, %10
  %11 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) #21, !dbg !3834
  %12 = icmp ult i32 %11, %3, !dbg !3836
  br i1 %12, label %13, label %10, !dbg !3837, !llvm.loop !3838

13:                                               ; preds = %10, %13
  %14 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) #21, !dbg !3840
  %15 = icmp ult i32 %14, %5, !dbg !3841
  br i1 %15, label %13, label %16, !dbg !3842, !llvm.loop !3843

16:                                               ; preds = %13, %7
  ret void, !dbg !3845
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gpt_reset_default_timer(%struct.GPT_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !3846 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3850, metadata !DIExpression()), !dbg !3851
  %2 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 2, !dbg !3852
  store volatile i32 0, i32* %2, align 4, !dbg !3853
  %3 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 0, !dbg !3854
  store volatile i32 0, i32* %3, align 4, !dbg !3855
  %4 = load volatile i32, i32* %3, align 4, !dbg !3856
  %5 = or i32 %4, 2, !dbg !3856
  store volatile i32 %5, i32* %3, align 4, !dbg !3856
  %6 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 5
  br label %7, !dbg !3857

7:                                                ; preds = %7, %1
  %8 = load volatile i32, i32* %6, align 4, !dbg !3858
  %9 = icmp eq i32 %8, 0, !dbg !3857
  br i1 %9, label %10, label %7, !dbg !3857, !llvm.loop !3859

10:                                               ; preds = %7
  %11 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 1, !dbg !3861
  store volatile i32 16, i32* %11, align 4, !dbg !3862
  %12 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 4, !dbg !3863
  store volatile i32 1, i32* %12, align 4, !dbg !3864
  %13 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 6, !dbg !3865
  store volatile i32 -1, i32* %13, align 4, !dbg !3866
  %14 = icmp eq %struct.GPT_REGISTER_T* %0, inttoptr (i32 -1575747328 to %struct.GPT_REGISTER_T*), !dbg !3867
  br i1 %14, label %15, label %16, !dbg !3869

15:                                               ; preds = %10
  store volatile i32 0, i32* inttoptr (i32 -1575747296 to i32*), align 32, !dbg !3870
  br label %16, !dbg !3872

16:                                               ; preds = %15, %10
  ret void, !dbg !3873
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @gpt_save_and_mask_interrupt(%struct.GPT_REGISTER_T* noundef %0) local_unnamed_addr #9 !dbg !3874 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3876, metadata !DIExpression()), !dbg !3878
  %3 = bitcast i32* %2 to i8*, !dbg !3879
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !3879
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3877, metadata !DIExpression()), !dbg !3880
  %4 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 2, !dbg !3881
  %5 = load volatile i32, i32* %4, align 4, !dbg !3881
  store volatile i32 %5, i32* %2, align 4, !dbg !3882
  %6 = load volatile i32, i32* %4, align 4, !dbg !3883
  %7 = and i32 %6, -2, !dbg !3883
  store volatile i32 %7, i32* %4, align 4, !dbg !3883
  %8 = load volatile i32, i32* %2, align 4, !dbg !3884
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !3885
  ret i32 %8, !dbg !3886
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gpt_restore_interrupt(%struct.GPT_REGISTER_T* noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !3887 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3891, metadata !DIExpression()), !dbg !3893
  call void @llvm.dbg.value(metadata i32 %1, metadata !3892, metadata !DIExpression()), !dbg !3893
  %3 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 2, !dbg !3894
  store volatile i32 %1, i32* %3, align 4, !dbg !3895
  ret void, !dbg !3896
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_interrupt_handler(i32 %0) #0 !dbg !3897 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !3899, metadata !DIExpression()), !dbg !3904
  %5 = bitcast i32* %2 to i8*, !dbg !3905
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5), !dbg !3905
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3901, metadata !DIExpression()), !dbg !3906
  %6 = bitcast i32* %3 to i8*, !dbg !3907
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6), !dbg !3907
  call void @llvm.dbg.declare(metadata i32* %3, metadata !3902, metadata !DIExpression()), !dbg !3908
  %7 = bitcast i32* %4 to i8*, !dbg !3909
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7), !dbg !3909
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3903, metadata !DIExpression()), !dbg !3910
  call void @llvm.dbg.value(metadata i32 undef, metadata !3899, metadata !DIExpression()), !dbg !3904
  call void @llvm.dbg.value(metadata i32 0, metadata !3900, metadata !DIExpression()), !dbg !3904
  br label %8, !dbg !3911

8:                                                ; preds = %1, %33
  %9 = phi i32 [ 0, %1 ], [ %36, %33 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !3900, metadata !DIExpression()), !dbg !3904
  %10 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %9, !dbg !3913
  %11 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %10, align 4, !dbg !3913
  %12 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %11, i32 0, i32 3, !dbg !3916
  %13 = load volatile i32, i32* %12, align 4, !dbg !3916
  store volatile i32 %13, i32* %3, align 4, !dbg !3917
  %14 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %11, i32 0, i32 2, !dbg !3918
  %15 = load volatile i32, i32* %14, align 4, !dbg !3918
  store volatile i32 %15, i32* %4, align 4, !dbg !3919
  %16 = tail call i32 @gpt_save_and_mask_interrupt(%struct.GPT_REGISTER_T* noundef %11) #21, !dbg !3920
  store volatile i32 %16, i32* %2, align 4, !dbg !3921
  %17 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %10, align 4, !dbg !3922
  %18 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %17, i32 0, i32 4, !dbg !3923
  store volatile i32 1, i32* %18, align 4, !dbg !3924
  %19 = load volatile i32, i32* %3, align 4, !dbg !3925
  %20 = and i32 %19, 1, !dbg !3927
  %21 = icmp eq i32 %20, 0, !dbg !3927
  br i1 %21, label %33, label %22, !dbg !3928

22:                                               ; preds = %8
  %23 = load volatile i32, i32* %4, align 4, !dbg !3929
  %24 = and i32 %23, 1, !dbg !3930
  %25 = icmp eq i32 %24, 0, !dbg !3930
  br i1 %25, label %33, label %26, !dbg !3931

26:                                               ; preds = %22
  %27 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %9, i32 1, i32 0, !dbg !3932
  %28 = load void (i8*)*, void (i8*)** %27, align 4, !dbg !3932
  %29 = icmp eq void (i8*)* %28, null, !dbg !3935
  br i1 %29, label %33, label %30, !dbg !3936

30:                                               ; preds = %26
  %31 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %9, i32 1, i32 1, !dbg !3937
  %32 = load i8*, i8** %31, align 4, !dbg !3937
  tail call void %28(i8* noundef %32) #20, !dbg !3939
  br label %33, !dbg !3940

33:                                               ; preds = %26, %30, %22, %8
  %34 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %10, align 4, !dbg !3941
  %35 = load volatile i32, i32* %2, align 4, !dbg !3942
  tail call void @gpt_restore_interrupt(%struct.GPT_REGISTER_T* noundef %34, i32 noundef %35) #21, !dbg !3943
  %36 = add nuw nsw i32 %9, 1, !dbg !3944
  call void @llvm.dbg.value(metadata i32 %36, metadata !3900, metadata !DIExpression()), !dbg !3904
  %37 = icmp eq i32 %36, 6, !dbg !3945
  br i1 %37, label %38, label %8, !dbg !3911, !llvm.loop !3946

38:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7), !dbg !3948
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6), !dbg !3948
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !3948
  ret void, !dbg !3948
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_nvic_register() local_unnamed_addr #0 !dbg !3949 {
  %1 = tail call i32 @hal_nvic_disable_irq(i32 noundef 11) #20, !dbg !3950
  %2 = tail call i32 @hal_nvic_register_isr_handler(i32 noundef 11, void (i32)* noundef nonnull @gpt_interrupt_handler) #20, !dbg !3951
  %3 = tail call i32 @hal_nvic_enable_irq(i32 noundef 11) #20, !dbg !3952
  ret void, !dbg !3953
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @gpt_sw_get_current_time_ms(%struct.GPT_REGISTER_T* noundef %0) local_unnamed_addr #9 !dbg !3954 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3956, metadata !DIExpression()), !dbg !3961
  %3 = bitcast i32* %2 to i8*, !dbg !3962
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !3962
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3957, metadata !DIExpression()), !dbg !3963
  %4 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) #21, !dbg !3964
  call void @llvm.dbg.value(metadata i32 %4, metadata !3958, metadata !DIExpression()), !dbg !3961
  %5 = lshr i32 %4, 15, !dbg !3965
  call void @llvm.dbg.value(metadata i32 %5, metadata !3959, metadata !DIExpression()), !dbg !3961
  %6 = and i32 %4, 32767, !dbg !3966
  %7 = mul nuw nsw i32 %6, 1000, !dbg !3967
  %8 = add nuw nsw i32 %7, 16384, !dbg !3968
  %9 = lshr i32 %8, 15, !dbg !3969
  call void @llvm.dbg.value(metadata i32 %9, metadata !3960, metadata !DIExpression()), !dbg !3961
  %10 = mul nuw nsw i32 %5, 1000, !dbg !3970
  %11 = add nuw nsw i32 %9, %10, !dbg !3971
  store volatile i32 %11, i32* %2, align 4, !dbg !3972
  %12 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4, !dbg !3973
  %13 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %12, i32 0, i32 0, !dbg !3974
  %14 = load volatile i32, i32* %13, align 4, !dbg !3975
  %15 = or i32 %14, 2, !dbg !3975
  store volatile i32 %15, i32* %13, align 4, !dbg !3975
  %16 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4
  %17 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %16, i32 0, i32 5
  br label %18, !dbg !3976

18:                                               ; preds = %18, %1
  %19 = load volatile i32, i32* %17, align 4, !dbg !3977
  %20 = icmp eq i32 %19, 0, !dbg !3976
  br i1 %20, label %21, label %18, !dbg !3976, !llvm.loop !3978

21:                                               ; preds = %18
  %22 = load volatile i32, i32* %2, align 4, !dbg !3980
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !3981
  ret i32 %22, !dbg !3982
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @gpt_sw_get_free_timer() local_unnamed_addr #12 !dbg !3983 {
  call void @llvm.dbg.value(metadata i32 0, metadata !3987, metadata !DIExpression()), !dbg !3988
  br label %1, !dbg !3989

1:                                                ; preds = %0, %6
  %2 = phi i32 [ 0, %0 ], [ %7, %6 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !3987, metadata !DIExpression()), !dbg !3988
  %3 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %2, i32 2, !dbg !3991
  %4 = load i8, i8* %3, align 4, !dbg !3991, !range !2809
  %5 = icmp eq i8 %4, 1, !dbg !3995
  br i1 %5, label %6, label %9, !dbg !3996

6:                                                ; preds = %1
  %7 = add nuw nsw i32 %2, 1, !dbg !3997
  call void @llvm.dbg.value(metadata i32 %7, metadata !3987, metadata !DIExpression()), !dbg !3988
  %8 = icmp eq i32 %7, 32, !dbg !3998
  br i1 %8, label %9, label %1, !dbg !3989, !llvm.loop !3999

9:                                                ; preds = %6, %1
  %10 = phi i32 [ %2, %1 ], [ 32, %6 ], !dbg !3988
  ret i32 %10, !dbg !4001
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_sw_start_timer() local_unnamed_addr #0 !dbg !4002 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = bitcast i32* %1 to i8*, !dbg !4006
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #22, !dbg !4006
  %4 = bitcast i32* %2 to i8*, !dbg !4006
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #22, !dbg !4006
  %5 = load i8, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 6), align 1, !dbg !4007, !range !2809
  %6 = icmp eq i8 %5, 0, !dbg !4007
  br i1 %6, label %7, label %11, !dbg !4009

7:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32* %1, metadata !4004, metadata !DIExpression(DW_OP_deref)), !dbg !4010
  call void @llvm.dbg.value(metadata i32* %2, metadata !4005, metadata !DIExpression(DW_OP_deref)), !dbg !4010
  call void @gpt_sw_get_minimum_left_time_ms(i32* noundef nonnull %1, i32* noundef nonnull %2) #21, !dbg !4011
  %8 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !4012
  store i32 %8, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 2), align 4, !dbg !4013
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !4014
  %9 = load i32, i32* %1, align 4, !dbg !4015
  call void @llvm.dbg.value(metadata i32 %9, metadata !4004, metadata !DIExpression()), !dbg !4010
  %10 = tail call i32 @hal_gpt_start_timer_ms(i32 noundef 3, i32 noundef %9, i32 noundef 0) #20, !dbg !4016
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !4017
  br label %11, !dbg !4018

11:                                               ; preds = %0, %7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #22, !dbg !4018
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #22, !dbg !4018
  ret void, !dbg !4018
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local void @gpt_sw_get_minimum_left_time_ms(i32* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #13 !dbg !4019 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !4023, metadata !DIExpression()), !dbg !4028
  call void @llvm.dbg.value(metadata i32* %1, metadata !4024, metadata !DIExpression()), !dbg !4028
  call void @llvm.dbg.value(metadata i32 -1, metadata !4026, metadata !DIExpression()), !dbg !4028
  call void @llvm.dbg.value(metadata i32 0, metadata !4025, metadata !DIExpression()), !dbg !4028
  br label %3, !dbg !4029

3:                                                ; preds = %2, %13
  %4 = phi i32 [ 0, %2 ], [ %15, %13 ]
  %5 = phi i32 [ -1, %2 ], [ %14, %13 ]
  call void @llvm.dbg.value(metadata i32 %4, metadata !4025, metadata !DIExpression()), !dbg !4028
  call void @llvm.dbg.value(metadata i32 %5, metadata !4026, metadata !DIExpression()), !dbg !4028
  %6 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %4, i32 3, !dbg !4031
  %7 = load i8, i8* %6, align 1, !dbg !4031, !range !2809
  %8 = icmp eq i8 %7, 0, !dbg !4031
  br i1 %8, label %13, label %9, !dbg !4035

9:                                                ; preds = %3
  %10 = tail call i32 @gpt_sw_absolute_value(i32 noundef %4) #21, !dbg !4036
  call void @llvm.dbg.value(metadata i32 %10, metadata !4027, metadata !DIExpression()), !dbg !4028
  %11 = icmp ult i32 %10, %5, !dbg !4038
  br i1 %11, label %12, label %13, !dbg !4040

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %10, metadata !4026, metadata !DIExpression()), !dbg !4028
  store i32 %4, i32* %1, align 4, !dbg !4041
  br label %13, !dbg !4043

13:                                               ; preds = %3, %12, %9
  %14 = phi i32 [ %10, %12 ], [ %5, %9 ], [ %5, %3 ], !dbg !4028
  call void @llvm.dbg.value(metadata i32 %14, metadata !4026, metadata !DIExpression()), !dbg !4028
  %15 = add nuw nsw i32 %4, 1, !dbg !4044
  call void @llvm.dbg.value(metadata i32 %15, metadata !4025, metadata !DIExpression()), !dbg !4028
  %16 = icmp eq i32 %15, 32, !dbg !4045
  br i1 %16, label %17, label %3, !dbg !4029, !llvm.loop !4046

17:                                               ; preds = %13
  store i32 %14, i32* %0, align 4, !dbg !4048
  ret void, !dbg !4049
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @gpt_sw_absolute_value(i32 noundef %0) local_unnamed_addr #4 !dbg !4050 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4052, metadata !DIExpression()), !dbg !4056
  %2 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %0, i32 1, !dbg !4057
  %3 = load i32, i32* %2, align 4, !dbg !4057
  %4 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 2), align 4, !dbg !4057
  %5 = sub i32 %3, %4, !dbg !4057
  call void @llvm.dbg.value(metadata i32 %5, metadata !4053, metadata !DIExpression()), !dbg !4056
  %6 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !4058
  %7 = sub i32 %6, %4, !dbg !4058
  call void @llvm.dbg.value(metadata i32 %7, metadata !4054, metadata !DIExpression()), !dbg !4056
  %8 = icmp ugt i32 %5, %7, !dbg !4059
  %9 = sub i32 %3, %6
  %10 = select i1 %8, i32 %9, i32 0, !dbg !4061
  call void @llvm.dbg.value(metadata i32 %10, metadata !4055, metadata !DIExpression()), !dbg !4056
  ret i32 %10, !dbg !4062
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_sw_handler(i8* nocapture noundef readnone %0) #0 !dbg !4063 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4065, metadata !DIExpression()), !dbg !4069
  %4 = bitcast i32* %2 to i8*, !dbg !4070
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4), !dbg !4070
  call void @llvm.dbg.declare(metadata i32* %2, metadata !4067, metadata !DIExpression()), !dbg !4071
  %5 = bitcast i32* %3 to i8*, !dbg !4072
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5), !dbg !4072
  call void @llvm.dbg.declare(metadata i32* %3, metadata !4068, metadata !DIExpression()), !dbg !4073
  %6 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !4074
  %7 = icmp eq i32 %6, 0, !dbg !4076
  br i1 %7, label %38, label %8, !dbg !4077

8:                                                ; preds = %1
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !4078
  %9 = tail call i32 @hal_gpt_stop_timer(i32 noundef 3) #20, !dbg !4080
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !4081
  %10 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4, !dbg !4082
  %11 = tail call i32 @gpt_sw_get_current_time_ms(%struct.GPT_REGISTER_T* noundef %10) #21, !dbg !4083
  store volatile i32 %11, i32* %2, align 4, !dbg !4084
  %12 = load volatile i32, i32* %2, align 4, !dbg !4085
  %13 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !4086
  %14 = add i32 %13, %12, !dbg !4086
  store i32 %14, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !4086
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 6), align 1, !dbg !4087
  call void @llvm.dbg.value(metadata i32 0, metadata !4066, metadata !DIExpression()), !dbg !4069
  br label %15, !dbg !4088

15:                                               ; preds = %8, %31
  %16 = phi i32 [ 0, %8 ], [ %32, %31 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !4066, metadata !DIExpression()), !dbg !4069
  %17 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %16, i32 3, !dbg !4090
  %18 = load i8, i8* %17, align 1, !dbg !4090, !range !2809
  %19 = icmp eq i8 %18, 0, !dbg !4090
  br i1 %19, label %31, label %20, !dbg !4094

20:                                               ; preds = %15
  %21 = tail call i32 @gpt_sw_absolute_value(i32 noundef %16) #21, !dbg !4095
  store volatile i32 %21, i32* %3, align 4, !dbg !4097
  %22 = load volatile i32, i32* %3, align 4, !dbg !4098
  %23 = icmp eq i32 %22, 0, !dbg !4100
  br i1 %23, label %24, label %31, !dbg !4101

24:                                               ; preds = %20
  store i8 0, i8* %17, align 1, !dbg !4102
  %25 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !4104
  %26 = add i32 %25, -1, !dbg !4104
  store i32 %26, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !4104
  %27 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %16, i32 0, i32 0, !dbg !4105
  %28 = load void (i8*)*, void (i8*)** %27, align 4, !dbg !4105
  %29 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %16, i32 0, i32 1, !dbg !4106
  %30 = load i8*, i8** %29, align 4, !dbg !4106
  tail call void %28(i8* noundef %30) #20, !dbg !4107
  br label %31, !dbg !4108

31:                                               ; preds = %15, %24, %20
  %32 = add nuw nsw i32 %16, 1, !dbg !4109
  call void @llvm.dbg.value(metadata i32 %32, metadata !4066, metadata !DIExpression()), !dbg !4069
  %33 = icmp eq i32 %32, 32, !dbg !4110
  br i1 %33, label %34, label %15, !dbg !4088, !llvm.loop !4111

34:                                               ; preds = %31
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 6), align 1, !dbg !4113
  %35 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !4114
  %36 = icmp eq i32 %35, 0, !dbg !4116
  br i1 %36, label %38, label %37, !dbg !4117

37:                                               ; preds = %34
  tail call void @gpt_sw_start_timer() #21, !dbg !4118
  br label %38, !dbg !4120

38:                                               ; preds = %34, %37, %1
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !4121
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4), !dbg !4121
  ret void, !dbg !4121
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gdma_reset(i32 noundef %0) local_unnamed_addr #2 !dbg !4122 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4126, metadata !DIExpression()), !dbg !4127
  %2 = getelementptr inbounds [1 x %struct.GDMA_REGISTER_T*], [1 x %struct.GDMA_REGISTER_T*]* @gdma, i32 0, i32 %0, !dbg !4128
  %3 = load %struct.GDMA_REGISTER_T*, %struct.GDMA_REGISTER_T** %2, align 4, !dbg !4128
  %4 = getelementptr inbounds %struct.GDMA_REGISTER_T, %struct.GDMA_REGISTER_T* %3, i32 0, i32 5, !dbg !4129
  store volatile i32 0, i32* %4, align 4, !dbg !4130
  %5 = load %struct.GDMA_REGISTER_T*, %struct.GDMA_REGISTER_T** %2, align 4, !dbg !4131
  %6 = getelementptr inbounds %struct.GDMA_REGISTER_T, %struct.GDMA_REGISTER_T* %5, i32 0, i32 6, !dbg !4132
  store volatile i32 0, i32* %6, align 4, !dbg !4133
  %7 = load %struct.GDMA_REGISTER_T*, %struct.GDMA_REGISTER_T** %2, align 4, !dbg !4134
  %8 = getelementptr inbounds %struct.GDMA_REGISTER_T, %struct.GDMA_REGISTER_T* %7, i32 0, i32 7, !dbg !4135
  store volatile i32 0, i32* %8, align 4, !dbg !4136
  %9 = load %struct.GDMA_REGISTER_T*, %struct.GDMA_REGISTER_T** %2, align 4, !dbg !4137
  %10 = getelementptr inbounds %struct.GDMA_REGISTER_T, %struct.GDMA_REGISTER_T* %9, i32 0, i32 0, !dbg !4138
  store volatile i32 0, i32* %10, align 4, !dbg !4139
  %11 = load %struct.GDMA_REGISTER_T*, %struct.GDMA_REGISTER_T** %2, align 4, !dbg !4140
  %12 = getelementptr inbounds %struct.GDMA_REGISTER_T, %struct.GDMA_REGISTER_T* %11, i32 0, i32 1, !dbg !4141
  store volatile i32 0, i32* %12, align 4, !dbg !4142
  %13 = load %struct.GDMA_REGISTER_T*, %struct.GDMA_REGISTER_T** %2, align 4, !dbg !4143
  %14 = getelementptr inbounds %struct.GDMA_REGISTER_T, %struct.GDMA_REGISTER_T* %13, i32 0, i32 8, !dbg !4144
  store volatile i32 32768, i32* %14, align 4, !dbg !4145
  ret void, !dbg !4146
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @gdma_get_global_status(i32 noundef %0) local_unnamed_addr #11 !dbg !4147 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4149, metadata !DIExpression()), !dbg !4151
  call void @llvm.dbg.value(metadata i32 0, metadata !4150, metadata !DIExpression()), !dbg !4151
  %2 = getelementptr inbounds [1 x %struct.anon*], [1 x %struct.anon*]* @gdma_global, i32 0, i32 %0, !dbg !4152
  %3 = load %struct.anon*, %struct.anon** %2, align 4, !dbg !4152
  %4 = getelementptr inbounds %struct.anon, %struct.anon* %3, i32 0, i32 0, !dbg !4153
  %5 = load volatile i32, i32* %4, align 4, !dbg !4153
  call void @llvm.dbg.value(metadata i32 %5, metadata !4150, metadata !DIExpression()), !dbg !4151
  ret i32 %5, !dbg !4154
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @gdma_register_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #7 !dbg !4155 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4159, metadata !DIExpression()), !dbg !4162
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !4160, metadata !DIExpression()), !dbg !4162
  call void @llvm.dbg.value(metadata i8* %2, metadata !4161, metadata !DIExpression()), !dbg !4162
  %4 = getelementptr inbounds [1 x %struct.gdma_user_callback_t], [1 x %struct.gdma_user_callback_t]* @g_gdma_callback, i32 0, i32 %0, i32 0, !dbg !4163
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !4163
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !4165
  br i1 %6, label %7, label %9, !dbg !4166

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !4167
  %8 = getelementptr inbounds [1 x %struct.gdma_user_callback_t], [1 x %struct.gdma_user_callback_t]* @g_gdma_callback, i32 0, i32 %0, i32 1, !dbg !4169
  store i8* %2, i8** %8, align 4, !dbg !4170
  br label %9, !dbg !4171

9:                                                ; preds = %7, %3
  ret void, !dbg !4172
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gdma_stop(i32 noundef %0) local_unnamed_addr #2 !dbg !4173 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4175, metadata !DIExpression()), !dbg !4176
  %2 = getelementptr inbounds [1 x %struct.GDMA_REGISTER_T*], [1 x %struct.GDMA_REGISTER_T*]* @gdma, i32 0, i32 %0, !dbg !4177
  %3 = load %struct.GDMA_REGISTER_T*, %struct.GDMA_REGISTER_T** %2, align 4, !dbg !4177
  %4 = getelementptr inbounds %struct.GDMA_REGISTER_T, %struct.GDMA_REGISTER_T* %3, i32 0, i32 6, !dbg !4178
  store volatile i32 0, i32* %4, align 4, !dbg !4179
  ret void, !dbg !4180
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gdma_start(i32 noundef %0) local_unnamed_addr #2 !dbg !4181 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4183, metadata !DIExpression()), !dbg !4184
  %2 = getelementptr inbounds [1 x %struct.GDMA_REGISTER_T*], [1 x %struct.GDMA_REGISTER_T*]* @gdma, i32 0, i32 %0, !dbg !4185
  %3 = load %struct.GDMA_REGISTER_T*, %struct.GDMA_REGISTER_T** %2, align 4, !dbg !4185
  %4 = getelementptr inbounds %struct.GDMA_REGISTER_T, %struct.GDMA_REGISTER_T* %3, i32 0, i32 6, !dbg !4186
  store volatile i32 32768, i32* %4, align 4, !dbg !4187
  ret void, !dbg !4188
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gdma_set_control(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #2 !dbg !4189 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4193, metadata !DIExpression()), !dbg !4196
  call void @llvm.dbg.value(metadata i32 %1, metadata !4194, metadata !DIExpression()), !dbg !4196
  call void @llvm.dbg.value(metadata i32 %2, metadata !4195, metadata !DIExpression()), !dbg !4196
  %4 = getelementptr inbounds [1 x %struct.GDMA_REGISTER_T*], [1 x %struct.GDMA_REGISTER_T*]* @gdma, i32 0, i32 %0, !dbg !4197
  %5 = load %struct.GDMA_REGISTER_T*, %struct.GDMA_REGISTER_T** %4, align 4, !dbg !4197
  %6 = getelementptr inbounds %struct.GDMA_REGISTER_T, %struct.GDMA_REGISTER_T* %5, i32 0, i32 5, !dbg !4198
  store volatile i32 %1, i32* %6, align 4, !dbg !4199
  %7 = load %struct.GDMA_REGISTER_T*, %struct.GDMA_REGISTER_T** %4, align 4, !dbg !4200
  %8 = getelementptr inbounds %struct.GDMA_REGISTER_T, %struct.GDMA_REGISTER_T* %7, i32 0, i32 4, !dbg !4201
  store volatile i32 %2, i32* %8, align 4, !dbg !4202
  ret void, !dbg !4203
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gdma_set_address(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #2 !dbg !4204 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4206, metadata !DIExpression()), !dbg !4209
  call void @llvm.dbg.value(metadata i32 %1, metadata !4207, metadata !DIExpression()), !dbg !4209
  call void @llvm.dbg.value(metadata i32 %2, metadata !4208, metadata !DIExpression()), !dbg !4209
  %4 = getelementptr inbounds [1 x %struct.GDMA_REGISTER_T*], [1 x %struct.GDMA_REGISTER_T*]* @gdma, i32 0, i32 %0, !dbg !4210
  %5 = load %struct.GDMA_REGISTER_T*, %struct.GDMA_REGISTER_T** %4, align 4, !dbg !4210
  %6 = getelementptr inbounds %struct.GDMA_REGISTER_T, %struct.GDMA_REGISTER_T* %5, i32 0, i32 0, !dbg !4211
  store volatile i32 %2, i32* %6, align 4, !dbg !4212
  %7 = load %struct.GDMA_REGISTER_T*, %struct.GDMA_REGISTER_T** %4, align 4, !dbg !4213
  %8 = getelementptr inbounds %struct.GDMA_REGISTER_T, %struct.GDMA_REGISTER_T* %7, i32 0, i32 1, !dbg !4214
  store volatile i32 %1, i32* %8, align 4, !dbg !4215
  ret void, !dbg !4216
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @dma_enable_clock(i32 noundef %0) local_unnamed_addr #0 !dbg !4217 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4222, metadata !DIExpression()), !dbg !4226
  call void @llvm.dbg.value(metadata i32 255, metadata !4225, metadata !DIExpression()), !dbg !4226
  %2 = icmp eq i32 %0, 0, !dbg !4227
  br i1 %2, label %3, label %9, !dbg !4229

3:                                                ; preds = %1
  %4 = tail call i32 @hal_clock_enable(i32 noundef 33) #20, !dbg !4230
  call void @llvm.dbg.value(metadata i32 %4, metadata !4223, metadata !DIExpression()), !dbg !4226
  %5 = icmp eq i32 %4, 0, !dbg !4232
  call void @llvm.dbg.value(metadata i32 undef, metadata !4225, metadata !DIExpression()), !dbg !4226
  %6 = tail call i32 @hal_clock_enable(i32 noundef 136) #20, !dbg !4234
  call void @llvm.dbg.value(metadata i32 %6, metadata !4223, metadata !DIExpression()), !dbg !4226
  %7 = icmp eq i32 %6, 0, !dbg !4235
  %8 = select i1 %7, i1 true, i1 %5, !dbg !4237
  br label %12, !dbg !4237

9:                                                ; preds = %1
  %10 = tail call i32 @hal_clock_enable(i32 noundef 44) #20, !dbg !4238
  call void @llvm.dbg.value(metadata i32 %10, metadata !4223, metadata !DIExpression()), !dbg !4226
  %11 = icmp eq i32 %10, 0, !dbg !4240
  br label %12, !dbg !4242

12:                                               ; preds = %3, %9
  %13 = phi i1 [ %8, %3 ], [ %11, %9 ]
  %14 = select i1 %13, i32 0, i32 255, !dbg !4243
  call void @llvm.dbg.value(metadata i32 %14, metadata !4225, metadata !DIExpression()), !dbg !4226
  ret i32 %14, !dbg !4244
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @dma_disable_clock(i32 noundef %0) local_unnamed_addr #0 !dbg !4245 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4247, metadata !DIExpression()), !dbg !4250
  call void @llvm.dbg.value(metadata i32 255, metadata !4248, metadata !DIExpression()), !dbg !4250
  %2 = icmp eq i32 %0, 0, !dbg !4251
  br i1 %2, label %3, label %9, !dbg !4253

3:                                                ; preds = %1
  %4 = tail call i32 @hal_clock_disable(i32 noundef 33) #20, !dbg !4254
  call void @llvm.dbg.value(metadata i32 %4, metadata !4249, metadata !DIExpression()), !dbg !4250
  %5 = icmp eq i32 %4, 0, !dbg !4256
  call void @llvm.dbg.value(metadata i32 undef, metadata !4248, metadata !DIExpression()), !dbg !4250
  %6 = tail call i32 @hal_clock_disable(i32 noundef 136) #20, !dbg !4258
  call void @llvm.dbg.value(metadata i32 %6, metadata !4249, metadata !DIExpression()), !dbg !4250
  %7 = icmp eq i32 %6, 0, !dbg !4259
  %8 = select i1 %7, i1 true, i1 %5, !dbg !4261
  br label %12, !dbg !4261

9:                                                ; preds = %1
  %10 = tail call i32 @hal_clock_disable(i32 noundef 44) #20, !dbg !4262
  call void @llvm.dbg.value(metadata i32 %10, metadata !4249, metadata !DIExpression()), !dbg !4250
  %11 = icmp eq i32 %10, 0, !dbg !4264
  br label %12, !dbg !4266

12:                                               ; preds = %3, %9
  %13 = phi i1 [ %8, %3 ], [ %11, %9 ]
  %14 = select i1 %13, i32 0, i32 255, !dbg !4267
  call void @llvm.dbg.value(metadata i32 %14, metadata !4248, metadata !DIExpression()), !dbg !4250
  ret i32 %14, !dbg !4268
}

; Function Attrs: optsize
declare dso_local i32 @hal_clock_disable(i32 noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pdma_init(i32 noundef %0) local_unnamed_addr #0 !dbg !4269 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4275, metadata !DIExpression()), !dbg !4280
  call void @llvm.dbg.value(metadata i32 0, metadata !4276, metadata !DIExpression()), !dbg !4280
  %2 = tail call fastcc i32 @pdma_check_valid_channel(i32 noundef %0) #21, !dbg !4281
  call void @llvm.dbg.value(metadata i32 %2, metadata !4276, metadata !DIExpression()), !dbg !4280
  %3 = icmp eq i32 %2, 255, !dbg !4282
  br i1 %3, label %32, label %4, !dbg !4284

4:                                                ; preds = %1
  %5 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !4285
  call void @llvm.dbg.value(metadata i32 %5, metadata !4278, metadata !DIExpression()), !dbg !4286
  %6 = getelementptr inbounds [7 x i8], [7 x i8]* @pdma_init_status, i32 0, i32 %0, !dbg !4287
  %7 = load volatile i8, i8* %6, align 1, !dbg !4287
  %8 = icmp eq i8 %7, 1, !dbg !4287
  br i1 %8, label %9, label %10, !dbg !4285

9:                                                ; preds = %4
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @__FUNCTION__.pdma_init, i32 0, i32 0), i32 noundef 291, i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.35, i32 0, i32 0), i32 noundef %0) #20, !dbg !4289
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1.36, i32 0, i32 0), i32 noundef 291, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @__FUNCTION__.pdma_init, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i32 0, i32 0)) #23, !dbg !4289
  unreachable, !dbg !4289

10:                                               ; preds = %4
  store volatile i8 1, i8* %6, align 1, !dbg !4291
  tail call void @restore_interrupt_mask(i32 noundef %5) #20, !dbg !4285
  %11 = tail call i32 @dma_enable_clock(i32 noundef 0) #21, !dbg !4293
  call void @llvm.dbg.value(metadata i32 %11, metadata !4277, metadata !DIExpression()), !dbg !4280
  %12 = icmp eq i32 %11, 255, !dbg !4294
  br i1 %12, label %32, label %13, !dbg !4296

13:                                               ; preds = %10
  %14 = tail call i32 @dma_enable_clock(i32 noundef 1) #21, !dbg !4297
  call void @llvm.dbg.value(metadata i32 %14, metadata !4277, metadata !DIExpression()), !dbg !4280
  %15 = icmp eq i32 %14, 255, !dbg !4298
  br i1 %15, label %32, label %16, !dbg !4300

16:                                               ; preds = %13
  %17 = getelementptr inbounds [6 x %struct.PDMA_REGISTER_T*], [6 x %struct.PDMA_REGISTER_T*]* @pdma, i32 0, i32 %2, !dbg !4301
  %18 = load %struct.PDMA_REGISTER_T*, %struct.PDMA_REGISTER_T** %17, align 4, !dbg !4301
  %19 = getelementptr inbounds %struct.PDMA_REGISTER_T, %struct.PDMA_REGISTER_T* %18, i32 0, i32 3, !dbg !4302
  store volatile i32 0, i32* %19, align 4, !dbg !4303
  %20 = load %struct.PDMA_REGISTER_T*, %struct.PDMA_REGISTER_T** %17, align 4, !dbg !4304
  %21 = getelementptr inbounds %struct.PDMA_REGISTER_T, %struct.PDMA_REGISTER_T* %20, i32 0, i32 2, !dbg !4305
  store volatile i32 0, i32* %21, align 4, !dbg !4306
  %22 = load %struct.PDMA_REGISTER_T*, %struct.PDMA_REGISTER_T** %17, align 4, !dbg !4307
  %23 = getelementptr inbounds %struct.PDMA_REGISTER_T, %struct.PDMA_REGISTER_T* %22, i32 0, i32 4, !dbg !4308
  store volatile i32 0, i32* %23, align 4, !dbg !4309
  %24 = load %struct.PDMA_REGISTER_T*, %struct.PDMA_REGISTER_T** %17, align 4, !dbg !4310
  %25 = getelementptr inbounds %struct.PDMA_REGISTER_T, %struct.PDMA_REGISTER_T* %24, i32 0, i32 5, !dbg !4311
  store volatile i32 0, i32* %25, align 4, !dbg !4312
  %26 = load %struct.PDMA_REGISTER_T*, %struct.PDMA_REGISTER_T** %17, align 4, !dbg !4313
  %27 = getelementptr inbounds %struct.PDMA_REGISTER_T, %struct.PDMA_REGISTER_T* %26, i32 0, i32 9, !dbg !4314
  store volatile i32 0, i32* %27, align 4, !dbg !4315
  %28 = tail call i32 @hal_nvic_register_isr_handler(i32 noundef 21, void (i32)* noundef nonnull @pd_domain_dma_interrupt_hander) #20, !dbg !4316
  %29 = tail call i32 @hal_nvic_enable_irq(i32 noundef 21) #20, !dbg !4317
  %30 = tail call i32 @hal_nvic_register_isr_handler(i32 noundef 40, void (i32)* noundef nonnull @pd_domain_dma_interrupt_hander) #20, !dbg !4318
  %31 = tail call i32 @hal_nvic_enable_irq(i32 noundef 40) #20, !dbg !4319
  br label %32, !dbg !4320

32:                                               ; preds = %13, %10, %1, %16
  %33 = phi i32 [ 0, %16 ], [ -2, %1 ], [ -3, %10 ], [ -3, %13 ], !dbg !4280
  ret i32 %33, !dbg !4321
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @pdma_check_valid_channel(i32 noundef %0) unnamed_addr #10 !dbg !4322 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4326, metadata !DIExpression()), !dbg !4328
  call void @llvm.dbg.value(metadata i32 0, metadata !4327, metadata !DIExpression()), !dbg !4328
  %2 = add i32 %0, -1, !dbg !4329
  call void @llvm.dbg.value(metadata i32 %2, metadata !4327, metadata !DIExpression()), !dbg !4328
  %3 = icmp ugt i32 %2, 5, !dbg !4330
  %4 = select i1 %3, i32 255, i32 %2, !dbg !4332
  ret i32 %4, !dbg !4333
}

; Function Attrs: noinline nounwind optsize
define dso_local void @pd_domain_dma_interrupt_hander(i32 %0) #0 !dbg !525 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !531, metadata !DIExpression()), !dbg !4334
  %3 = bitcast i32* %2 to i8*, !dbg !4335
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !4335
  call void @llvm.dbg.declare(metadata i32* %2, metadata !532, metadata !DIExpression()), !dbg !4336
  store volatile i32 0, i32* %2, align 4, !dbg !4336
  %4 = load %struct.anon*, %struct.anon** getelementptr inbounds ([1 x %struct.anon*], [1 x %struct.anon*]* @gdma_global, i32 0, i32 0), align 4, !dbg !4337
  %5 = getelementptr inbounds %struct.anon, %struct.anon* %4, i32 0, i32 0, !dbg !4338
  %6 = load volatile i32, i32* %5, align 4, !dbg !4338
  store volatile i32 %6, i32* %2, align 4, !dbg !4339
  %7 = load volatile i32, i32* %2, align 4, !dbg !4340
  %8 = and i32 %7, 2, !dbg !4342
  %9 = icmp eq i32 %8, 0, !dbg !4342
  br i1 %9, label %18, label %10, !dbg !4343

10:                                               ; preds = %1
  %11 = load %struct.GDMA_REGISTER_T*, %struct.GDMA_REGISTER_T** getelementptr inbounds ([1 x %struct.GDMA_REGISTER_T*], [1 x %struct.GDMA_REGISTER_T*]* @gdma, i32 0, i32 0), align 4, !dbg !4344
  %12 = getelementptr inbounds %struct.GDMA_REGISTER_T, %struct.GDMA_REGISTER_T* %11, i32 0, i32 8, !dbg !4346
  store volatile i32 32768, i32* %12, align 4, !dbg !4347
  %13 = load void (i32, i8*)*, void (i32, i8*)** getelementptr inbounds ([1 x %struct.gdma_user_callback_t], [1 x %struct.gdma_user_callback_t]* @g_gdma_callback, i32 0, i32 0, i32 0), align 4, !dbg !4348
  call void @llvm.dbg.value(metadata void (i32, i8*)* %13, metadata !533, metadata !DIExpression()), !dbg !4334
  call void @llvm.dbg.value(metadata i8* undef, metadata !546, metadata !DIExpression()), !dbg !4334
  %14 = icmp eq void (i32, i8*)* %13, null, !dbg !4349
  br i1 %14, label %17, label %15, !dbg !4351

15:                                               ; preds = %10
  %16 = load i8*, i8** getelementptr inbounds ([1 x %struct.gdma_user_callback_t], [1 x %struct.gdma_user_callback_t]* @g_gdma_callback, i32 0, i32 0, i32 1), align 4, !dbg !4352
  call void @llvm.dbg.value(metadata i8* %16, metadata !546, metadata !DIExpression()), !dbg !4334
  tail call void %13(i32 noundef 0, i8* noundef %16) #20, !dbg !4353
  br label %18, !dbg !4355

17:                                               ; preds = %10
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1.36, i32 0, i32 0), i32 noundef 1138, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @__func__.pd_domain_dma_interrupt_hander, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i32 0, i32 0)) #23, !dbg !4356
  unreachable, !dbg !4356

18:                                               ; preds = %15, %1
  store i32 0, i32* @pd_domain_dma_interrupt_hander.count, align 4, !dbg !4358
  br label %20, !dbg !4360

19:                                               ; preds = %50
  store i32 0, i32* @pd_domain_dma_interrupt_hander.count, align 4, !dbg !4361
  br label %54, !dbg !4363

20:                                               ; preds = %18, %50
  %21 = phi i32 [ 0, %18 ], [ %52, %50 ]
  %22 = getelementptr inbounds [6 x %struct.anon*], [6 x %struct.anon*]* @pdma_global, i32 0, i32 %21, !dbg !4364
  %23 = load %struct.anon*, %struct.anon** %22, align 4, !dbg !4364
  %24 = getelementptr inbounds %struct.anon, %struct.anon* %23, i32 0, i32 0, !dbg !4367
  %25 = load volatile i32, i32* %24, align 4, !dbg !4367
  store volatile i32 %25, i32* %2, align 4, !dbg !4368
  %26 = load volatile i32, i32* %2, align 4, !dbg !4369
  %27 = getelementptr inbounds [6 x i8], [6 x i8]* @g_pdma_global_running_bit, i32 0, i32 %21, !dbg !4371
  %28 = load i8, i8* %27, align 1, !dbg !4371
  %29 = zext i8 %28 to i32, !dbg !4371
  %30 = shl i32 2, %29, !dbg !4372
  %31 = and i32 %30, %26, !dbg !4373
  %32 = icmp eq i32 %31, 0, !dbg !4373
  br i1 %32, label %50, label %33, !dbg !4374

33:                                               ; preds = %20
  %34 = getelementptr inbounds [6 x %struct.PDMA_REGISTER_T*], [6 x %struct.PDMA_REGISTER_T*]* @pdma, i32 0, i32 %21, !dbg !4375
  %35 = load %struct.PDMA_REGISTER_T*, %struct.PDMA_REGISTER_T** %34, align 4, !dbg !4375
  %36 = getelementptr inbounds %struct.PDMA_REGISTER_T, %struct.PDMA_REGISTER_T* %35, i32 0, i32 6, !dbg !4378
  store volatile i32 32768, i32* %36, align 4, !dbg !4379
  %37 = getelementptr inbounds [6 x %struct.gdma_user_callback_t], [6 x %struct.gdma_user_callback_t]* @g_pdma_callback, i32 0, i32 %21, i32 0, !dbg !4380
  %38 = load void (i32, i8*)*, void (i32, i8*)** %37, align 4, !dbg !4380
  call void @llvm.dbg.value(metadata void (i32, i8*)* %38, metadata !534, metadata !DIExpression()), !dbg !4334
  call void @llvm.dbg.value(metadata i8* undef, metadata !546, metadata !DIExpression()), !dbg !4334
  %39 = icmp eq void (i32, i8*)* %38, null, !dbg !4381
  br i1 %39, label %49, label %40, !dbg !4383

40:                                               ; preds = %33
  %41 = getelementptr inbounds [6 x %struct.gdma_user_callback_t], [6 x %struct.gdma_user_callback_t]* @g_pdma_callback, i32 0, i32 %21, i32 1, !dbg !4384
  %42 = load i8*, i8** %41, align 4, !dbg !4384
  call void @llvm.dbg.value(metadata i8* %42, metadata !546, metadata !DIExpression()), !dbg !4334
  tail call void %38(i32 noundef 0, i8* noundef %42) #20, !dbg !4385
  %43 = load i32, i32* @pd_domain_dma_interrupt_hander.count, align 4, !dbg !4387
  %44 = getelementptr inbounds [6 x %struct.PDMA_REGISTER_T*], [6 x %struct.PDMA_REGISTER_T*]* @pdma, i32 0, i32 %43, !dbg !4388
  %45 = load %struct.PDMA_REGISTER_T*, %struct.PDMA_REGISTER_T** %44, align 4, !dbg !4388
  %46 = getelementptr inbounds %struct.PDMA_REGISTER_T, %struct.PDMA_REGISTER_T* %45, i32 0, i32 4, !dbg !4389
  %47 = load volatile i32, i32* %46, align 4, !dbg !4390
  %48 = and i32 %47, -32769, !dbg !4390
  store volatile i32 %48, i32* %46, align 4, !dbg !4390
  br label %50, !dbg !4391

49:                                               ; preds = %33
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1.36, i32 0, i32 0), i32 noundef 1161, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @__func__.pd_domain_dma_interrupt_hander, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i32 0, i32 0)) #23, !dbg !4392
  unreachable, !dbg !4392

50:                                               ; preds = %20, %40
  %51 = phi i32 [ %21, %20 ], [ %43, %40 ], !dbg !4394
  %52 = add i32 %51, 1, !dbg !4394
  store i32 %52, i32* @pd_domain_dma_interrupt_hander.count, align 4, !dbg !4358
  %53 = icmp ult i32 %52, 6, !dbg !4395
  br i1 %53, label %20, label %19, !dbg !4360, !llvm.loop !4396

54:                                               ; preds = %19, %79
  %55 = phi i32 [ 0, %19 ], [ %81, %79 ]
  %56 = getelementptr inbounds [10 x %struct.anon*], [10 x %struct.anon*]* @vdma_global, i32 0, i32 %55, !dbg !4398
  %57 = load %struct.anon*, %struct.anon** %56, align 4, !dbg !4398
  %58 = getelementptr inbounds %struct.anon, %struct.anon* %57, i32 0, i32 0, !dbg !4401
  %59 = load volatile i32, i32* %58, align 4, !dbg !4401
  store volatile i32 %59, i32* %2, align 4, !dbg !4402
  %60 = load volatile i32, i32* %2, align 4, !dbg !4403
  %61 = getelementptr inbounds [10 x i8], [10 x i8]* @g_vdma_global_running_bit, i32 0, i32 %55, !dbg !4405
  %62 = load i8, i8* %61, align 1, !dbg !4405
  %63 = zext i8 %62 to i32, !dbg !4405
  %64 = shl i32 2, %63, !dbg !4406
  %65 = and i32 %64, %60, !dbg !4407
  %66 = icmp eq i32 %65, 0, !dbg !4407
  br i1 %66, label %79, label %67, !dbg !4408

67:                                               ; preds = %54
  %68 = getelementptr inbounds [10 x %struct.VDMA_REGISTER_T*], [10 x %struct.VDMA_REGISTER_T*]* @vdma, i32 0, i32 %55, !dbg !4409
  %69 = load %struct.VDMA_REGISTER_T*, %struct.VDMA_REGISTER_T** %68, align 4, !dbg !4409
  %70 = getelementptr inbounds %struct.VDMA_REGISTER_T, %struct.VDMA_REGISTER_T* %69, i32 0, i32 4, !dbg !4412
  store volatile i32 32768, i32* %70, align 4, !dbg !4413
  %71 = getelementptr inbounds [10 x %struct.gdma_user_callback_t], [10 x %struct.gdma_user_callback_t]* @g_vdma_callback, i32 0, i32 %55, i32 0, !dbg !4414
  %72 = load void (i32, i8*)*, void (i32, i8*)** %71, align 4, !dbg !4414
  call void @llvm.dbg.value(metadata void (i32, i8*)* %72, metadata !540, metadata !DIExpression()), !dbg !4334
  call void @llvm.dbg.value(metadata i8* undef, metadata !546, metadata !DIExpression()), !dbg !4334
  %73 = icmp eq void (i32, i8*)* %72, null, !dbg !4415
  br i1 %73, label %78, label %74, !dbg !4417

74:                                               ; preds = %67
  %75 = getelementptr inbounds [10 x %struct.gdma_user_callback_t], [10 x %struct.gdma_user_callback_t]* @g_vdma_callback, i32 0, i32 %55, i32 1, !dbg !4418
  %76 = load i8*, i8** %75, align 4, !dbg !4418
  call void @llvm.dbg.value(metadata i8* %76, metadata !546, metadata !DIExpression()), !dbg !4334
  tail call void %72(i32 noundef 0, i8* noundef %76) #20, !dbg !4419
  %77 = load i32, i32* @pd_domain_dma_interrupt_hander.count, align 4, !dbg !4421
  br label %79, !dbg !4422

78:                                               ; preds = %67
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1.36, i32 0, i32 0), i32 noundef 1185, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @__func__.pd_domain_dma_interrupt_hander, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i32 0, i32 0)) #23, !dbg !4423
  unreachable, !dbg !4423

79:                                               ; preds = %54, %74
  %80 = phi i32 [ %55, %54 ], [ %77, %74 ], !dbg !4421
  %81 = add i32 %80, 1, !dbg !4421
  store i32 %81, i32* @pd_domain_dma_interrupt_hander.count, align 4, !dbg !4361
  %82 = icmp ult i32 %81, 8, !dbg !4425
  br i1 %82, label %54, label %83, !dbg !4363, !llvm.loop !4426

83:                                               ; preds = %79
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !4428
  ret void, !dbg !4428
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pdma_deinit(i32 noundef %0) local_unnamed_addr #0 !dbg !4429 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !4431, metadata !DIExpression()), !dbg !4438
  call void @llvm.dbg.value(metadata i32 0, metadata !4432, metadata !DIExpression()), !dbg !4438
  %3 = bitcast i32* %2 to i8*, !dbg !4439
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !4439
  call void @llvm.dbg.declare(metadata i32* %2, metadata !4435, metadata !DIExpression()), !dbg !4440
  store volatile i32 0, i32* %2, align 4, !dbg !4440
  %4 = tail call fastcc i32 @pdma_check_valid_channel(i32 noundef %0) #21, !dbg !4441
  call void @llvm.dbg.value(metadata i32 %4, metadata !4432, metadata !DIExpression()), !dbg !4438
  %5 = icmp eq i32 %4, 255, !dbg !4442
  br i1 %5, label %39, label %6, !dbg !4444

6:                                                ; preds = %1
  %7 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !4445
  call void @llvm.dbg.value(metadata i32 %7, metadata !4434, metadata !DIExpression()), !dbg !4438
  %8 = getelementptr inbounds [6 x %struct.anon*], [6 x %struct.anon*]* @pdma_global, i32 0, i32 %4, !dbg !4446
  %9 = load %struct.anon*, %struct.anon** %8, align 4, !dbg !4446
  %10 = getelementptr inbounds %struct.anon, %struct.anon* %9, i32 0, i32 0, !dbg !4447
  %11 = load volatile i32, i32* %10, align 4, !dbg !4447
  store volatile i32 %11, i32* %2, align 4, !dbg !4448
  %12 = load volatile i32, i32* %2, align 4, !dbg !4449
  %13 = getelementptr inbounds [6 x i8], [6 x i8]* @g_pdma_global_running_bit, i32 0, i32 %4, !dbg !4451
  %14 = load i8, i8* %13, align 1, !dbg !4451
  %15 = zext i8 %14 to i32, !dbg !4451
  %16 = shl i32 2, %15, !dbg !4452
  %17 = and i32 %16, %12, !dbg !4453
  %18 = icmp eq i32 %17, 0, !dbg !4453
  br i1 %18, label %20, label %19, !dbg !4454

19:                                               ; preds = %6
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1.36, i32 0, i32 0), i32 noundef 341, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.pdma_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i32 0, i32 0)) #23, !dbg !4455
  unreachable, !dbg !4455

20:                                               ; preds = %6
  %21 = load volatile i32, i32* %2, align 4, !dbg !4457
  %22 = shl nuw i32 1, %15, !dbg !4459
  %23 = and i32 %21, %22, !dbg !4460
  %24 = icmp eq i32 %23, 0, !dbg !4460
  br i1 %24, label %26, label %25, !dbg !4461

25:                                               ; preds = %20
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1.36, i32 0, i32 0), i32 noundef 349, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.pdma_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i32 0, i32 0)) #23, !dbg !4462
  unreachable, !dbg !4462

26:                                               ; preds = %20
  tail call void @restore_interrupt_mask(i32 noundef %7) #20, !dbg !4464
  %27 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !4465
  call void @llvm.dbg.value(metadata i32 %27, metadata !4436, metadata !DIExpression()), !dbg !4466
  %28 = getelementptr inbounds [7 x i8], [7 x i8]* @pdma_init_status, i32 0, i32 %0, !dbg !4467
  %29 = load volatile i8, i8* %28, align 1, !dbg !4467
  %30 = icmp eq i8 %29, 0, !dbg !4467
  br i1 %30, label %31, label %32, !dbg !4465

31:                                               ; preds = %26
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.pdma_deinit, i32 0, i32 0), i32 noundef 356, i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.3, i32 0, i32 0), i32 noundef %0) #20, !dbg !4469
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1.36, i32 0, i32 0), i32 noundef 356, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.pdma_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i32 0, i32 0)) #23, !dbg !4469
  unreachable, !dbg !4469

32:                                               ; preds = %26
  store volatile i8 0, i8* %28, align 1, !dbg !4471
  tail call void @restore_interrupt_mask(i32 noundef %27) #20, !dbg !4465
  %33 = tail call i32 @dma_disable_clock(i32 noundef 0) #21, !dbg !4473
  call void @llvm.dbg.value(metadata i32 %33, metadata !4433, metadata !DIExpression()), !dbg !4438
  %34 = icmp eq i32 %33, 255, !dbg !4474
  br i1 %34, label %39, label %35, !dbg !4476

35:                                               ; preds = %32
  %36 = tail call i32 @dma_disable_clock(i32 noundef 1) #21, !dbg !4477
  call void @llvm.dbg.value(metadata i32 %36, metadata !4433, metadata !DIExpression()), !dbg !4438
  %37 = icmp eq i32 %36, 255, !dbg !4478
  %38 = select i1 %37, i32 -3, i32 0, !dbg !4438
  br label %39, !dbg !4438

39:                                               ; preds = %35, %32, %1
  %40 = phi i32 [ -2, %1 ], [ -3, %32 ], [ %38, %35 ], !dbg !4438
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !4480
  ret i32 %40, !dbg !4480
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @pdma_set_ring_buffer(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #2 !dbg !4481 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4485, metadata !DIExpression()), !dbg !4489
  call void @llvm.dbg.value(metadata i32 %1, metadata !4486, metadata !DIExpression()), !dbg !4489
  call void @llvm.dbg.value(metadata i32 %2, metadata !4487, metadata !DIExpression()), !dbg !4489
  call void @llvm.dbg.value(metadata i32 0, metadata !4488, metadata !DIExpression()), !dbg !4489
  %4 = tail call fastcc i32 @pdma_check_valid_channel(i32 noundef %0) #21, !dbg !4490
  call void @llvm.dbg.value(metadata i32 %4, metadata !4488, metadata !DIExpression()), !dbg !4489
  %5 = icmp eq i32 %4, 255, !dbg !4491
  br i1 %5, label %14, label %6, !dbg !4493

6:                                                ; preds = %3
  %7 = icmp ugt i32 %1, 65535, !dbg !4494
  br i1 %7, label %14, label %8, !dbg !4496

8:                                                ; preds = %6
  %9 = getelementptr inbounds [6 x %struct.PDMA_REGISTER_T*], [6 x %struct.PDMA_REGISTER_T*]* @pdma, i32 0, i32 %4, !dbg !4497
  %10 = load %struct.PDMA_REGISTER_T*, %struct.PDMA_REGISTER_T** %9, align 4, !dbg !4497
  %11 = getelementptr inbounds %struct.PDMA_REGISTER_T, %struct.PDMA_REGISTER_T* %10, i32 0, i32 0, !dbg !4498
  store volatile i32 %1, i32* %11, align 4, !dbg !4499
  %12 = load %struct.PDMA_REGISTER_T*, %struct.PDMA_REGISTER_T** %9, align 4, !dbg !4500
  %13 = getelementptr inbounds %struct.PDMA_REGISTER_T, %struct.PDMA_REGISTER_T* %12, i32 0, i32 1, !dbg !4501
  store volatile i32 %2, i32* %13, align 4, !dbg !4502
  br label %14, !dbg !4503

14:                                               ; preds = %6, %3, %8
  %15 = phi i32 [ 0, %8 ], [ -2, %3 ], [ -1, %6 ], !dbg !4489
  ret i32 %15, !dbg !4504
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pdma_configure(i32 noundef %0, %struct.pdma_config_t* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !4505 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !4519, metadata !DIExpression()), !dbg !4525
  call void @llvm.dbg.value(metadata %struct.pdma_config_t* %1, metadata !4520, metadata !DIExpression()), !dbg !4525
  call void @llvm.dbg.value(metadata i32 0, metadata !4521, metadata !DIExpression()), !dbg !4525
  call void @llvm.dbg.value(metadata i32 0, metadata !4523, metadata !DIExpression()), !dbg !4525
  %4 = bitcast i32* %3 to i8*, !dbg !4526
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4), !dbg !4526
  call void @llvm.dbg.declare(metadata i32* %3, metadata !4524, metadata !DIExpression()), !dbg !4527
  store volatile i32 0, i32* %3, align 4, !dbg !4527
  %5 = tail call fastcc i32 @pdma_check_valid_channel(i32 noundef %0) #21, !dbg !4528
  call void @llvm.dbg.value(metadata i32 %5, metadata !4521, metadata !DIExpression()), !dbg !4525
  %6 = icmp eq i32 %5, 255, !dbg !4529
  br i1 %6, label %64, label %7, !dbg !4531

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.pdma_config_t, %struct.pdma_config_t* %1, i32 0, i32 0, !dbg !4532
  %9 = load i8, i8* %8, align 4, !dbg !4532, !range !2809
  %10 = icmp eq i8 %9, 0, !dbg !4532
  %11 = select i1 %10, i32 0, i32 512, !dbg !4534
  call void @llvm.dbg.value(metadata i32 %11, metadata !4523, metadata !DIExpression()), !dbg !4525
  %12 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !4535
  call void @llvm.dbg.value(metadata i32 %12, metadata !4522, metadata !DIExpression()), !dbg !4525
  %13 = getelementptr inbounds [6 x %struct.anon*], [6 x %struct.anon*]* @pdma_global, i32 0, i32 %5, !dbg !4536
  %14 = load %struct.anon*, %struct.anon** %13, align 4, !dbg !4536
  %15 = getelementptr inbounds %struct.anon, %struct.anon* %14, i32 0, i32 0, !dbg !4537
  %16 = load volatile i32, i32* %15, align 4, !dbg !4537
  store volatile i32 %16, i32* %3, align 4, !dbg !4538
  %17 = load volatile i32, i32* %3, align 4, !dbg !4539
  %18 = getelementptr inbounds [6 x i8], [6 x i8]* @g_pdma_global_running_bit, i32 0, i32 %5, !dbg !4541
  %19 = load i8, i8* %18, align 1, !dbg !4541
  %20 = zext i8 %19 to i32, !dbg !4541
  %21 = shl nuw i32 1, %20, !dbg !4542
  %22 = and i32 %21, %17, !dbg !4543
  %23 = icmp eq i32 %22, 0, !dbg !4543
  br i1 %23, label %25, label %24, !dbg !4544

24:                                               ; preds = %7
  tail call void @restore_interrupt_mask(i32 noundef %12) #20, !dbg !4545
  br label %64, !dbg !4547

25:                                               ; preds = %7
  %26 = load volatile i32, i32* %3, align 4, !dbg !4548
  %27 = shl i32 2, %20, !dbg !4550
  %28 = and i32 %26, %27, !dbg !4551
  %29 = icmp eq i32 %28, 0, !dbg !4551
  tail call void @restore_interrupt_mask(i32 noundef %12) #20, !dbg !4525
  br i1 %29, label %30, label %64, !dbg !4552

30:                                               ; preds = %25
  %31 = getelementptr inbounds [6 x %struct.PDMA_REGISTER_T*], [6 x %struct.PDMA_REGISTER_T*]* @pdma, i32 0, i32 %5, !dbg !4553
  %32 = load %struct.PDMA_REGISTER_T*, %struct.PDMA_REGISTER_T** %31, align 4, !dbg !4553
  %33 = getelementptr inbounds %struct.PDMA_REGISTER_T, %struct.PDMA_REGISTER_T* %32, i32 0, i32 4, !dbg !4554
  %34 = load volatile i32, i32* %33, align 4, !dbg !4555
  %35 = and i32 %34, -32769, !dbg !4555
  store volatile i32 %35, i32* %33, align 4, !dbg !4555
  %36 = getelementptr inbounds %struct.pdma_config_t, %struct.pdma_config_t* %1, i32 0, i32 3, !dbg !4556
  %37 = load i32, i32* %36, align 4, !dbg !4556
  %38 = icmp ult i32 %37, 4, !dbg !4557
  br i1 %38, label %39, label %64, !dbg !4557

39:                                               ; preds = %30
  %40 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.pdma_configure, i32 0, i32 %37, !dbg !4557
  %41 = load i32, i32* %40, align 4, !dbg !4557
  %42 = or i32 %11, %41, !dbg !4558
  call void @llvm.dbg.value(metadata i32 %42, metadata !4523, metadata !DIExpression()), !dbg !4525
  %43 = getelementptr inbounds %struct.pdma_config_t, %struct.pdma_config_t* %1, i32 0, i32 1, !dbg !4560
  %44 = load i32, i32* %43, align 4, !dbg !4560
  switch i32 %44, label %64 [
    i32 0, label %49
    i32 1, label %45
    i32 2, label %47
  ], !dbg !4561

45:                                               ; preds = %39
  %46 = or i32 %42, 1, !dbg !4562
  call void @llvm.dbg.value(metadata i32 %46, metadata !4523, metadata !DIExpression()), !dbg !4525
  br label %49, !dbg !4564

47:                                               ; preds = %39
  %48 = or i32 %42, 2, !dbg !4565
  call void @llvm.dbg.value(metadata i32 %48, metadata !4523, metadata !DIExpression()), !dbg !4525
  br label %49, !dbg !4566

49:                                               ; preds = %39, %47, %45
  %50 = phi i32 [ %48, %47 ], [ %46, %45 ], [ %42, %39 ], !dbg !4567
  call void @llvm.dbg.value(metadata i32 %50, metadata !4523, metadata !DIExpression()), !dbg !4525
  %51 = load i8, i8* %8, align 4, !dbg !4568, !range !2809
  %52 = icmp eq i8 %51, 0, !dbg !4568
  %53 = icmp eq i32 %44, 0, !dbg !4570
  %54 = or i32 %50, 32, !dbg !4570
  %55 = select i1 %53, i32 %54, i32 %50, !dbg !4570
  %56 = select i1 %52, i32 %50, i32 %55, !dbg !4570
  call void @llvm.dbg.value(metadata i32 %56, metadata !4523, metadata !DIExpression()), !dbg !4525
  %57 = or i32 %56, 16, !dbg !4571
  call void @llvm.dbg.value(metadata i32 %57, metadata !4523, metadata !DIExpression()), !dbg !4525
  %58 = load %struct.PDMA_REGISTER_T*, %struct.PDMA_REGISTER_T** %31, align 4, !dbg !4572
  %59 = getelementptr inbounds %struct.PDMA_REGISTER_T, %struct.PDMA_REGISTER_T* %58, i32 0, i32 3, !dbg !4573
  store volatile i32 %57, i32* %59, align 4, !dbg !4574
  %60 = getelementptr inbounds %struct.pdma_config_t, %struct.pdma_config_t* %1, i32 0, i32 2, !dbg !4575
  %61 = load i32, i32* %60, align 4, !dbg !4575
  %62 = load %struct.PDMA_REGISTER_T*, %struct.PDMA_REGISTER_T** %31, align 4, !dbg !4576
  %63 = getelementptr inbounds %struct.PDMA_REGISTER_T, %struct.PDMA_REGISTER_T* %62, i32 0, i32 2, !dbg !4577
  store volatile i32 %61, i32* %63, align 4, !dbg !4578
  br label %64, !dbg !4579

64:                                               ; preds = %30, %25, %39, %2, %49, %24
  %65 = phi i32 [ -3, %24 ], [ 0, %49 ], [ -2, %2 ], [ -3, %30 ], [ -3, %39 ], [ -3, %25 ], !dbg !4525
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4), !dbg !4580
  ret i32 %65, !dbg !4580
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pdma_start_polling(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !4581 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !4585, metadata !DIExpression()), !dbg !4590
  call void @llvm.dbg.value(metadata i32 %1, metadata !4586, metadata !DIExpression()), !dbg !4590
  call void @llvm.dbg.value(metadata i32 0, metadata !4587, metadata !DIExpression()), !dbg !4590
  %4 = bitcast i32* %3 to i8*, !dbg !4591
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #22, !dbg !4591
  call void @llvm.dbg.value(metadata i32 0, metadata !4588, metadata !DIExpression()), !dbg !4590
  store i32 0, i32* %3, align 4, !dbg !4592
  %5 = tail call fastcc i32 @pdma_check_valid_channel(i32 noundef %0) #21, !dbg !4593
  call void @llvm.dbg.value(metadata i32 %5, metadata !4587, metadata !DIExpression()), !dbg !4590
  %6 = icmp eq i32 %5, 255, !dbg !4594
  br i1 %6, label %33, label %7, !dbg !4596

7:                                                ; preds = %2
  %8 = and i32 %1, 3, !dbg !4597
  %9 = icmp eq i32 %8, 0, !dbg !4599
  br i1 %9, label %11, label %10, !dbg !4600

10:                                               ; preds = %7
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1.36, i32 0, i32 0), i32 noundef 527, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.pdma_start_polling, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i32 0, i32 0)) #23, !dbg !4601
  unreachable, !dbg !4601

11:                                               ; preds = %7
  %12 = tail call zeroext i1 @hal_cache_is_cacheable(i32 noundef %1) #20, !dbg !4603
  br i1 %12, label %13, label %14, !dbg !4605

13:                                               ; preds = %11
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1.36, i32 0, i32 0), i32 noundef 533, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.pdma_start_polling, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i32 0, i32 0)) #23, !dbg !4606
  unreachable, !dbg !4606

14:                                               ; preds = %11
  %15 = getelementptr inbounds [6 x %struct.PDMA_REGISTER_T*], [6 x %struct.PDMA_REGISTER_T*]* @pdma, i32 0, i32 %5, !dbg !4608
  %16 = load %struct.PDMA_REGISTER_T*, %struct.PDMA_REGISTER_T** %15, align 4, !dbg !4608
  %17 = getelementptr inbounds %struct.PDMA_REGISTER_T, %struct.PDMA_REGISTER_T* %16, i32 0, i32 9, !dbg !4609
  store volatile i32 %1, i32* %17, align 4, !dbg !4610
  %18 = load %struct.PDMA_REGISTER_T*, %struct.PDMA_REGISTER_T** %15, align 4, !dbg !4611
  %19 = getelementptr inbounds %struct.PDMA_REGISTER_T, %struct.PDMA_REGISTER_T* %18, i32 0, i32 3, !dbg !4612
  %20 = load volatile i32, i32* %19, align 4, !dbg !4613
  %21 = and i32 %20, -32769, !dbg !4613
  store volatile i32 %21, i32* %19, align 4, !dbg !4613
  %22 = load %struct.PDMA_REGISTER_T*, %struct.PDMA_REGISTER_T** %15, align 4, !dbg !4614
  %23 = getelementptr inbounds %struct.PDMA_REGISTER_T, %struct.PDMA_REGISTER_T* %22, i32 0, i32 4, !dbg !4615
  store volatile i32 32768, i32* %23, align 4, !dbg !4616
  call void @llvm.dbg.value(metadata i32* %3, metadata !4588, metadata !DIExpression(DW_OP_deref)), !dbg !4590
  %24 = call i32 @pdma_get_running_status(i32 noundef %0, i32* noundef nonnull %3) #21, !dbg !4617
  %25 = load i32, i32* %3, align 4, !dbg !4618
  call void @llvm.dbg.value(metadata i32 %25, metadata !4588, metadata !DIExpression()), !dbg !4590
  %26 = icmp eq i32 %25, 0, !dbg !4619
  br i1 %26, label %31, label %27, !dbg !4619

27:                                               ; preds = %14, %27
  call void @llvm.dbg.value(metadata i32* %3, metadata !4588, metadata !DIExpression(DW_OP_deref)), !dbg !4590
  %28 = call i32 @pdma_get_running_status(i32 noundef %0, i32* noundef nonnull %3) #21, !dbg !4620
  %29 = load i32, i32* %3, align 4, !dbg !4618
  call void @llvm.dbg.value(metadata i32 %29, metadata !4588, metadata !DIExpression()), !dbg !4590
  %30 = icmp eq i32 %29, 0, !dbg !4619
  br i1 %30, label %31, label %27, !dbg !4619, !llvm.loop !4622

31:                                               ; preds = %27, %14
  %32 = tail call i32 @pdma_stop(i32 noundef %0) #21, !dbg !4624
  br label %33, !dbg !4625

33:                                               ; preds = %2, %31
  %34 = phi i32 [ 0, %31 ], [ -2, %2 ], !dbg !4590
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #22, !dbg !4626
  ret i32 %34, !dbg !4626
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @pdma_get_running_status(i32 noundef %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #9 !dbg !4627 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !4632, metadata !DIExpression()), !dbg !4636
  call void @llvm.dbg.value(metadata i32* %1, metadata !4633, metadata !DIExpression()), !dbg !4636
  call void @llvm.dbg.value(metadata i32 0, metadata !4634, metadata !DIExpression()), !dbg !4636
  %4 = bitcast i32* %3 to i8*, !dbg !4637
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4), !dbg !4637
  call void @llvm.dbg.declare(metadata i32* %3, metadata !4635, metadata !DIExpression()), !dbg !4638
  store volatile i32 0, i32* %3, align 4, !dbg !4638
  %5 = tail call fastcc i32 @pdma_check_valid_channel(i32 noundef %0) #21, !dbg !4639
  call void @llvm.dbg.value(metadata i32 %5, metadata !4634, metadata !DIExpression()), !dbg !4636
  %6 = icmp eq i32 %5, 255, !dbg !4640
  br i1 %6, label %18, label %7, !dbg !4642

7:                                                ; preds = %2
  %8 = getelementptr inbounds [6 x %struct.anon*], [6 x %struct.anon*]* @pdma_global, i32 0, i32 %5, !dbg !4643
  %9 = load %struct.anon*, %struct.anon** %8, align 4, !dbg !4643
  %10 = getelementptr inbounds %struct.anon, %struct.anon* %9, i32 0, i32 0, !dbg !4644
  %11 = load volatile i32, i32* %10, align 4, !dbg !4644
  store volatile i32 %11, i32* %3, align 4, !dbg !4645
  %12 = load volatile i32, i32* %3, align 4, !dbg !4646
  %13 = getelementptr inbounds [6 x i8], [6 x i8]* @g_pdma_global_running_bit, i32 0, i32 %5, !dbg !4648
  %14 = load i8, i8* %13, align 1, !dbg !4648
  %15 = zext i8 %14 to i32, !dbg !4648
  %16 = lshr i32 %12, %15
  %17 = and i32 %16, 1
  store i32 %17, i32* %1, align 4, !dbg !4649
  br label %18, !dbg !4650

18:                                               ; preds = %2, %7
  %19 = phi i32 [ 0, %7 ], [ -2, %2 ], !dbg !4636
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4), !dbg !4651
  ret i32 %19, !dbg !4651
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @pdma_stop(i32 noundef %0) local_unnamed_addr #2 !dbg !4652 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4654, metadata !DIExpression()), !dbg !4656
  call void @llvm.dbg.value(metadata i32 0, metadata !4655, metadata !DIExpression()), !dbg !4656
  %2 = tail call fastcc i32 @pdma_check_valid_channel(i32 noundef %0) #21, !dbg !4657
  call void @llvm.dbg.value(metadata i32 %2, metadata !4655, metadata !DIExpression()), !dbg !4656
  %3 = icmp eq i32 %2, 255, !dbg !4658
  br i1 %3, label %12, label %4, !dbg !4660

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x %struct.PDMA_REGISTER_T*], [6 x %struct.PDMA_REGISTER_T*]* @pdma, i32 0, i32 %2, !dbg !4661
  %6 = load %struct.PDMA_REGISTER_T*, %struct.PDMA_REGISTER_T** %5, align 4, !dbg !4661
  %7 = getelementptr inbounds %struct.PDMA_REGISTER_T, %struct.PDMA_REGISTER_T* %6, i32 0, i32 4, !dbg !4662
  %8 = load volatile i32, i32* %7, align 4, !dbg !4663
  %9 = and i32 %8, -32769, !dbg !4663
  store volatile i32 %9, i32* %7, align 4, !dbg !4663
  %10 = load %struct.PDMA_REGISTER_T*, %struct.PDMA_REGISTER_T** %5, align 4, !dbg !4664
  %11 = getelementptr inbounds %struct.PDMA_REGISTER_T, %struct.PDMA_REGISTER_T* %10, i32 0, i32 6, !dbg !4665
  store volatile i32 32768, i32* %11, align 4, !dbg !4666
  br label %12, !dbg !4667

12:                                               ; preds = %1, %4
  %13 = phi i32 [ 0, %4 ], [ -2, %1 ], !dbg !4656
  ret i32 %13, !dbg !4668
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pdma_start_interrupt(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !4669 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4671, metadata !DIExpression()), !dbg !4674
  call void @llvm.dbg.value(metadata i32 %1, metadata !4672, metadata !DIExpression()), !dbg !4674
  call void @llvm.dbg.value(metadata i32 0, metadata !4673, metadata !DIExpression()), !dbg !4674
  %3 = tail call fastcc i32 @pdma_check_valid_channel(i32 noundef %0) #21, !dbg !4675
  call void @llvm.dbg.value(metadata i32 %3, metadata !4673, metadata !DIExpression()), !dbg !4674
  %4 = icmp eq i32 %3, 255, !dbg !4676
  br i1 %4, label %22, label %5, !dbg !4678

5:                                                ; preds = %2
  %6 = and i32 %1, 3, !dbg !4679
  %7 = icmp eq i32 %6, 0, !dbg !4681
  br i1 %7, label %9, label %8, !dbg !4682

8:                                                ; preds = %5
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1.36, i32 0, i32 0), i32 noundef 567, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.pdma_start_interrupt, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i32 0, i32 0)) #23, !dbg !4683
  unreachable, !dbg !4683

9:                                                ; preds = %5
  %10 = tail call zeroext i1 @hal_cache_is_cacheable(i32 noundef %1) #20, !dbg !4685
  br i1 %10, label %11, label %12, !dbg !4687

11:                                               ; preds = %9
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1.36, i32 0, i32 0), i32 noundef 573, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.pdma_start_interrupt, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i32 0, i32 0)) #23, !dbg !4688
  unreachable, !dbg !4688

12:                                               ; preds = %9
  %13 = getelementptr inbounds [6 x %struct.PDMA_REGISTER_T*], [6 x %struct.PDMA_REGISTER_T*]* @pdma, i32 0, i32 %3, !dbg !4690
  %14 = load %struct.PDMA_REGISTER_T*, %struct.PDMA_REGISTER_T** %13, align 4, !dbg !4690
  %15 = getelementptr inbounds %struct.PDMA_REGISTER_T, %struct.PDMA_REGISTER_T* %14, i32 0, i32 9, !dbg !4691
  store volatile i32 %1, i32* %15, align 4, !dbg !4692
  %16 = load %struct.PDMA_REGISTER_T*, %struct.PDMA_REGISTER_T** %13, align 4, !dbg !4693
  %17 = getelementptr inbounds %struct.PDMA_REGISTER_T, %struct.PDMA_REGISTER_T* %16, i32 0, i32 3, !dbg !4694
  %18 = load volatile i32, i32* %17, align 4, !dbg !4695
  %19 = or i32 %18, 32768, !dbg !4695
  store volatile i32 %19, i32* %17, align 4, !dbg !4695
  %20 = load %struct.PDMA_REGISTER_T*, %struct.PDMA_REGISTER_T** %13, align 4, !dbg !4696
  %21 = getelementptr inbounds %struct.PDMA_REGISTER_T, %struct.PDMA_REGISTER_T* %20, i32 0, i32 4, !dbg !4697
  store volatile i32 32768, i32* %21, align 4, !dbg !4698
  br label %22, !dbg !4699

22:                                               ; preds = %2, %12
  %23 = phi i32 [ 0, %12 ], [ -2, %2 ], !dbg !4674
  ret i32 %23, !dbg !4700
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @pdma_register_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #7 !dbg !4701 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4705, metadata !DIExpression()), !dbg !4709
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !4706, metadata !DIExpression()), !dbg !4709
  call void @llvm.dbg.value(metadata i8* %2, metadata !4707, metadata !DIExpression()), !dbg !4709
  call void @llvm.dbg.value(metadata i32 0, metadata !4708, metadata !DIExpression()), !dbg !4709
  %4 = tail call fastcc i32 @pdma_check_valid_channel(i32 noundef %0) #21, !dbg !4710
  call void @llvm.dbg.value(metadata i32 %4, metadata !4708, metadata !DIExpression()), !dbg !4709
  %5 = icmp eq i32 %4, 255, !dbg !4711
  br i1 %5, label %12, label %6, !dbg !4713

6:                                                ; preds = %3
  %7 = getelementptr inbounds [6 x %struct.gdma_user_callback_t], [6 x %struct.gdma_user_callback_t]* @g_pdma_callback, i32 0, i32 %4, i32 0, !dbg !4714
  %8 = load void (i32, i8*)*, void (i32, i8*)** %7, align 4, !dbg !4714
  %9 = icmp eq void (i32, i8*)* %8, null, !dbg !4716
  br i1 %9, label %10, label %12, !dbg !4717

10:                                               ; preds = %6
  store void (i32, i8*)* %1, void (i32, i8*)** %7, align 4, !dbg !4718
  %11 = getelementptr inbounds [6 x %struct.gdma_user_callback_t], [6 x %struct.gdma_user_callback_t]* @g_pdma_callback, i32 0, i32 %4, i32 1, !dbg !4720
  store i8* %2, i8** %11, align 4, !dbg !4721
  br label %12, !dbg !4722

12:                                               ; preds = %6, %10, %3
  %13 = phi i32 [ -2, %3 ], [ 0, %10 ], [ 0, %6 ], !dbg !4709
  ret i32 %13, !dbg !4723
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vdma_init(i32 noundef %0) local_unnamed_addr #0 !dbg !4724 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4730, metadata !DIExpression()), !dbg !4736
  call void @llvm.dbg.value(metadata i32 0, metadata !4731, metadata !DIExpression()), !dbg !4736
  call void @llvm.dbg.value(metadata i32 0, metadata !4733, metadata !DIExpression()), !dbg !4736
  %2 = tail call fastcc i32 @vdma_check_valid_channel(i32 noundef %0) #21, !dbg !4737
  call void @llvm.dbg.value(metadata i32 %2, metadata !4731, metadata !DIExpression()), !dbg !4736
  %3 = icmp eq i32 %2, 255, !dbg !4738
  br i1 %3, label %47, label %4, !dbg !4740

4:                                                ; preds = %1
  %5 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !4741
  call void @llvm.dbg.value(metadata i32 %5, metadata !4734, metadata !DIExpression()), !dbg !4742
  %6 = getelementptr inbounds [18 x i8], [18 x i8]* @vdma_init_status, i32 0, i32 %0, !dbg !4743
  %7 = load volatile i8, i8* %6, align 1, !dbg !4743
  %8 = icmp eq i8 %7, 1, !dbg !4743
  br i1 %8, label %9, label %10, !dbg !4741

9:                                                ; preds = %4
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @__FUNCTION__.vdma_init, i32 0, i32 0), i32 noundef 690, i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.4, i32 0, i32 0), i32 noundef %0) #20, !dbg !4745
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1.36, i32 0, i32 0), i32 noundef 690, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @__FUNCTION__.vdma_init, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i32 0, i32 0)) #23, !dbg !4745
  unreachable, !dbg !4745

10:                                               ; preds = %4
  store volatile i8 1, i8* %6, align 1, !dbg !4747
  tail call void @restore_interrupt_mask(i32 noundef %5) #20, !dbg !4741
  %11 = getelementptr inbounds [10 x %struct.VDMA_REGISTER_T*], [10 x %struct.VDMA_REGISTER_T*]* @vdma, i32 0, i32 %2, !dbg !4749
  %12 = load %struct.VDMA_REGISTER_T*, %struct.VDMA_REGISTER_T** %11, align 4, !dbg !4749
  %13 = getelementptr inbounds %struct.VDMA_REGISTER_T, %struct.VDMA_REGISTER_T* %12, i32 0, i32 1, !dbg !4750
  store volatile i32 0, i32* %13, align 4, !dbg !4751
  %14 = load %struct.VDMA_REGISTER_T*, %struct.VDMA_REGISTER_T** %11, align 4, !dbg !4752
  %15 = getelementptr inbounds %struct.VDMA_REGISTER_T, %struct.VDMA_REGISTER_T* %14, i32 0, i32 0, !dbg !4753
  store volatile i32 0, i32* %15, align 4, !dbg !4754
  %16 = load %struct.VDMA_REGISTER_T*, %struct.VDMA_REGISTER_T** %11, align 4, !dbg !4755
  %17 = getelementptr inbounds %struct.VDMA_REGISTER_T, %struct.VDMA_REGISTER_T* %16, i32 0, i32 2, !dbg !4756
  store volatile i32 0, i32* %17, align 4, !dbg !4757
  %18 = load %struct.VDMA_REGISTER_T*, %struct.VDMA_REGISTER_T** %11, align 4, !dbg !4758
  %19 = getelementptr inbounds %struct.VDMA_REGISTER_T, %struct.VDMA_REGISTER_T* %18, i32 0, i32 3, !dbg !4759
  store volatile i32 0, i32* %19, align 4, !dbg !4760
  %20 = load %struct.VDMA_REGISTER_T*, %struct.VDMA_REGISTER_T** %11, align 4, !dbg !4761
  %21 = getelementptr inbounds %struct.VDMA_REGISTER_T, %struct.VDMA_REGISTER_T* %20, i32 0, i32 6, !dbg !4762
  store volatile i32 0, i32* %21, align 4, !dbg !4763
  %22 = load %struct.VDMA_REGISTER_T*, %struct.VDMA_REGISTER_T** %11, align 4, !dbg !4764
  %23 = getelementptr inbounds %struct.VDMA_REGISTER_T, %struct.VDMA_REGISTER_T* %22, i32 0, i32 11, !dbg !4765
  store volatile i32 0, i32* %23, align 4, !dbg !4766
  %24 = load %struct.VDMA_REGISTER_T*, %struct.VDMA_REGISTER_T** %11, align 4, !dbg !4767
  %25 = getelementptr inbounds %struct.VDMA_REGISTER_T, %struct.VDMA_REGISTER_T* %24, i32 0, i32 12, !dbg !4768
  store volatile i32 0, i32* %25, align 4, !dbg !4769
  %26 = icmp ult i32 %2, 8, !dbg !4770
  br i1 %26, label %27, label %30, !dbg !4772

27:                                               ; preds = %10
  %28 = tail call i32 @dma_enable_clock(i32 noundef 0) #21, !dbg !4773
  call void @llvm.dbg.value(metadata i32 %28, metadata !4732, metadata !DIExpression()), !dbg !4736
  %29 = icmp eq i32 %28, 255, !dbg !4775
  br i1 %29, label %47, label %33, !dbg !4777

30:                                               ; preds = %10
  %31 = tail call i32 @dma_enable_clock(i32 noundef 1) #21, !dbg !4778
  call void @llvm.dbg.value(metadata i32 %31, metadata !4732, metadata !DIExpression()), !dbg !4736
  %32 = icmp eq i32 %31, 255, !dbg !4780
  br i1 %32, label %47, label %33, !dbg !4782

33:                                               ; preds = %30, %27
  %34 = add i32 %0, -8, !dbg !4783
  %35 = icmp ult i32 %34, 10, !dbg !4783
  br i1 %35, label %36, label %47, !dbg !4783

36:                                               ; preds = %33
  %37 = getelementptr inbounds [10 x %struct.VDMA_REGISTER_T**], [10 x %struct.VDMA_REGISTER_T**]* @switch.table.vdma_init, i32 0, i32 %34, !dbg !4783
  %38 = load %struct.VDMA_REGISTER_T**, %struct.VDMA_REGISTER_T*** %37, align 4, !dbg !4783
  %39 = getelementptr inbounds [10 x i32], [10 x i32]* @switch.table.vdma_init.6, i32 0, i32 %34, !dbg !4783
  %40 = load i32, i32* %39, align 4, !dbg !4783
  %41 = load %struct.VDMA_REGISTER_T*, %struct.VDMA_REGISTER_T** %38, align 4, !dbg !4784
  %42 = getelementptr inbounds %struct.VDMA_REGISTER_T, %struct.VDMA_REGISTER_T* %41, i32 0, i32 1, !dbg !4784
  store volatile i32 %40, i32* %42, align 4, !dbg !4784
  %43 = tail call i32 @hal_nvic_register_isr_handler(i32 noundef 21, void (i32)* noundef nonnull @pd_domain_dma_interrupt_hander) #20, !dbg !4786
  %44 = tail call i32 @hal_nvic_enable_irq(i32 noundef 21) #20, !dbg !4787
  %45 = tail call i32 @hal_nvic_register_isr_handler(i32 noundef 22, void (i32)* noundef nonnull @ao_domain_dma_interrupt_hander) #20, !dbg !4788
  %46 = tail call i32 @hal_nvic_enable_irq(i32 noundef 22) #20, !dbg !4789
  br label %47, !dbg !4790

47:                                               ; preds = %33, %30, %27, %1, %36
  %48 = phi i32 [ 0, %36 ], [ -2, %1 ], [ -3, %27 ], [ -3, %30 ], [ -3, %33 ], !dbg !4736
  ret i32 %48, !dbg !4791
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @vdma_check_valid_channel(i32 noundef %0) unnamed_addr #10 !dbg !4792 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4796, metadata !DIExpression()), !dbg !4798
  call void @llvm.dbg.value(metadata i32 0, metadata !4797, metadata !DIExpression()), !dbg !4798
  %2 = add i32 %0, -8, !dbg !4799
  call void @llvm.dbg.value(metadata i32 %2, metadata !4797, metadata !DIExpression()), !dbg !4798
  %3 = icmp ugt i32 %2, 9, !dbg !4800
  %4 = select i1 %3, i32 255, i32 %2, !dbg !4802
  ret i32 %4, !dbg !4803
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ao_domain_dma_interrupt_hander(i32 %0) #0 !dbg !4804 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !4806, metadata !DIExpression()), !dbg !4811
  %3 = bitcast i32* %2 to i8*, !dbg !4812
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !4812
  call void @llvm.dbg.declare(metadata i32* %2, metadata !4807, metadata !DIExpression()), !dbg !4813
  store volatile i32 0, i32* %2, align 4, !dbg !4813
  call void @llvm.dbg.value(metadata i32 0, metadata !4810, metadata !DIExpression()), !dbg !4811
  call void @llvm.dbg.value(metadata i32 8, metadata !4810, metadata !DIExpression()), !dbg !4811
  br label %4, !dbg !4814

4:                                                ; preds = %1, %28
  %5 = phi i32 [ 8, %1 ], [ %29, %28 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !4810, metadata !DIExpression()), !dbg !4811
  %6 = getelementptr inbounds [10 x %struct.anon*], [10 x %struct.anon*]* @vdma_global, i32 0, i32 %5, !dbg !4816
  %7 = load %struct.anon*, %struct.anon** %6, align 4, !dbg !4816
  %8 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, !dbg !4819
  %9 = load volatile i32, i32* %8, align 4, !dbg !4819
  store volatile i32 %9, i32* %2, align 4, !dbg !4820
  %10 = load volatile i32, i32* %2, align 4, !dbg !4821
  %11 = getelementptr inbounds [10 x i8], [10 x i8]* @g_vdma_global_running_bit, i32 0, i32 %5, !dbg !4823
  %12 = load i8, i8* %11, align 1, !dbg !4823
  %13 = zext i8 %12 to i32, !dbg !4823
  %14 = shl i32 2, %13, !dbg !4824
  %15 = and i32 %14, %10, !dbg !4825
  %16 = icmp eq i32 %15, 0, !dbg !4825
  br i1 %16, label %28, label %17, !dbg !4826

17:                                               ; preds = %4
  %18 = getelementptr inbounds [10 x %struct.VDMA_REGISTER_T*], [10 x %struct.VDMA_REGISTER_T*]* @vdma, i32 0, i32 %5, !dbg !4827
  %19 = load %struct.VDMA_REGISTER_T*, %struct.VDMA_REGISTER_T** %18, align 4, !dbg !4827
  %20 = getelementptr inbounds %struct.VDMA_REGISTER_T, %struct.VDMA_REGISTER_T* %19, i32 0, i32 4, !dbg !4830
  store volatile i32 32768, i32* %20, align 4, !dbg !4831
  %21 = getelementptr inbounds [10 x %struct.gdma_user_callback_t], [10 x %struct.gdma_user_callback_t]* @g_vdma_callback, i32 0, i32 %5, i32 0, !dbg !4832
  %22 = load void (i32, i8*)*, void (i32, i8*)** %21, align 4, !dbg !4832
  call void @llvm.dbg.value(metadata void (i32, i8*)* %22, metadata !4808, metadata !DIExpression()), !dbg !4811
  call void @llvm.dbg.value(metadata i8* undef, metadata !4809, metadata !DIExpression()), !dbg !4811
  %23 = icmp eq void (i32, i8*)* %22, null, !dbg !4833
  br i1 %23, label %27, label %24, !dbg !4835

24:                                               ; preds = %17
  %25 = getelementptr inbounds [10 x %struct.gdma_user_callback_t], [10 x %struct.gdma_user_callback_t]* @g_vdma_callback, i32 0, i32 %5, i32 1, !dbg !4836
  %26 = load i8*, i8** %25, align 4, !dbg !4836
  call void @llvm.dbg.value(metadata i8* %26, metadata !4809, metadata !DIExpression()), !dbg !4811
  tail call void %22(i32 noundef 0, i8* noundef %26) #20, !dbg !4837
  br label %28, !dbg !4839

27:                                               ; preds = %17
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1.36, i32 0, i32 0), i32 noundef 1234, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @__func__.ao_domain_dma_interrupt_hander, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i32 0, i32 0)) #23, !dbg !4840
  unreachable, !dbg !4840

28:                                               ; preds = %4, %24
  %29 = add nuw nsw i32 %5, 1, !dbg !4842
  call void @llvm.dbg.value(metadata i32 %29, metadata !4810, metadata !DIExpression()), !dbg !4811
  %30 = icmp eq i32 %29, 10, !dbg !4843
  br i1 %30, label %31, label %4, !dbg !4814, !llvm.loop !4844

31:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !4846
  ret void, !dbg !4846
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vdma_deinit(i32 noundef %0) local_unnamed_addr #0 !dbg !4847 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !4849, metadata !DIExpression()), !dbg !4856
  call void @llvm.dbg.value(metadata i32 255, metadata !4850, metadata !DIExpression()), !dbg !4856
  %3 = bitcast i32* %2 to i8*, !dbg !4857
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !4857
  call void @llvm.dbg.declare(metadata i32* %2, metadata !4853, metadata !DIExpression()), !dbg !4858
  store volatile i32 0, i32* %2, align 4, !dbg !4858
  %4 = tail call fastcc i32 @vdma_check_valid_channel(i32 noundef %0) #21, !dbg !4859
  call void @llvm.dbg.value(metadata i32 %4, metadata !4850, metadata !DIExpression()), !dbg !4856
  %5 = icmp eq i32 %4, 255, !dbg !4860
  br i1 %5, label %41, label %6, !dbg !4862

6:                                                ; preds = %1
  %7 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !4863
  call void @llvm.dbg.value(metadata i32 %7, metadata !4852, metadata !DIExpression()), !dbg !4856
  %8 = getelementptr inbounds [10 x %struct.anon*], [10 x %struct.anon*]* @vdma_global, i32 0, i32 %4, !dbg !4864
  %9 = load %struct.anon*, %struct.anon** %8, align 4, !dbg !4864
  %10 = getelementptr inbounds %struct.anon, %struct.anon* %9, i32 0, i32 0, !dbg !4865
  %11 = load volatile i32, i32* %10, align 4, !dbg !4865
  store volatile i32 %11, i32* %2, align 4, !dbg !4866
  %12 = load volatile i32, i32* %2, align 4, !dbg !4867
  %13 = getelementptr inbounds [10 x i8], [10 x i8]* @g_vdma_global_running_bit, i32 0, i32 %4, !dbg !4869
  %14 = load i8, i8* %13, align 1, !dbg !4869
  %15 = zext i8 %14 to i32, !dbg !4869
  %16 = shl i32 2, %15, !dbg !4870
  %17 = and i32 %16, %12, !dbg !4871
  %18 = icmp eq i32 %17, 0, !dbg !4871
  br i1 %18, label %20, label %19, !dbg !4872

19:                                               ; preds = %6
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1.36, i32 0, i32 0), i32 noundef 806, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.vdma_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i32 0, i32 0)) #23, !dbg !4873
  unreachable, !dbg !4873

20:                                               ; preds = %6
  %21 = load volatile i32, i32* %2, align 4, !dbg !4875
  %22 = shl nuw i32 1, %15, !dbg !4877
  %23 = and i32 %21, %22, !dbg !4878
  %24 = icmp eq i32 %23, 0, !dbg !4878
  br i1 %24, label %26, label %25, !dbg !4879

25:                                               ; preds = %20
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1.36, i32 0, i32 0), i32 noundef 812, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.vdma_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i32 0, i32 0)) #23, !dbg !4880
  unreachable, !dbg !4880

26:                                               ; preds = %20
  tail call void @restore_interrupt_mask(i32 noundef %7) #20, !dbg !4882
  %27 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !4883
  call void @llvm.dbg.value(metadata i32 %27, metadata !4854, metadata !DIExpression()), !dbg !4884
  %28 = getelementptr inbounds [18 x i8], [18 x i8]* @vdma_init_status, i32 0, i32 %0, !dbg !4885
  %29 = load volatile i8, i8* %28, align 1, !dbg !4885
  %30 = icmp eq i8 %29, 0, !dbg !4885
  br i1 %30, label %31, label %32, !dbg !4883

31:                                               ; preds = %26
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.vdma_deinit, i32 0, i32 0), i32 noundef 820, i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.5, i32 0, i32 0), i32 noundef %0) #20, !dbg !4887
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1.36, i32 0, i32 0), i32 noundef 820, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.vdma_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i32 0, i32 0)) #23, !dbg !4887
  unreachable, !dbg !4887

32:                                               ; preds = %26
  store volatile i8 0, i8* %28, align 1, !dbg !4889
  tail call void @restore_interrupt_mask(i32 noundef %27) #20, !dbg !4883
  %33 = icmp ult i32 %4, 8, !dbg !4891
  br i1 %33, label %34, label %37, !dbg !4893

34:                                               ; preds = %32
  %35 = tail call i32 @dma_disable_clock(i32 noundef 0) #21, !dbg !4894
  call void @llvm.dbg.value(metadata i32 %35, metadata !4851, metadata !DIExpression()), !dbg !4856
  %36 = icmp eq i32 %35, 255, !dbg !4896
  br i1 %36, label %41, label %40, !dbg !4898

37:                                               ; preds = %32
  %38 = tail call i32 @dma_disable_clock(i32 noundef 1) #21, !dbg !4899
  call void @llvm.dbg.value(metadata i32 %38, metadata !4851, metadata !DIExpression()), !dbg !4856
  %39 = icmp eq i32 %38, 255, !dbg !4901
  br i1 %39, label %41, label %40, !dbg !4903

40:                                               ; preds = %37, %34
  br label %41, !dbg !4904

41:                                               ; preds = %37, %34, %1, %40
  %42 = phi i32 [ 0, %40 ], [ -2, %1 ], [ -3, %34 ], [ -3, %37 ], !dbg !4856
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !4905
  ret i32 %42, !dbg !4905
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vdma_configure(i32 noundef %0, %struct.hal_cache_region_config_t* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !4906 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4916, metadata !DIExpression()), !dbg !4919
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %1, metadata !4917, metadata !DIExpression()), !dbg !4919
  call void @llvm.dbg.value(metadata i32 0, metadata !4918, metadata !DIExpression()), !dbg !4919
  %3 = tail call fastcc i32 @vdma_check_valid_channel(i32 noundef %0) #21, !dbg !4920
  call void @llvm.dbg.value(metadata i32 %3, metadata !4918, metadata !DIExpression()), !dbg !4919
  %4 = icmp eq i32 %3, 255, !dbg !4921
  br i1 %4, label %23, label %5, !dbg !4923

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 0, i32 0, !dbg !4924
  %7 = load i32, i32* %6, align 4, !dbg !4924
  %8 = and i32 %7, 3, !dbg !4926
  %9 = icmp eq i32 %8, 0, !dbg !4927
  br i1 %9, label %11, label %10, !dbg !4928

10:                                               ; preds = %5
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1.36, i32 0, i32 0), i32 noundef 857, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.vdma_configure, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i32 0, i32 0)) #23, !dbg !4929
  unreachable, !dbg !4929

11:                                               ; preds = %5
  %12 = tail call zeroext i1 @hal_cache_is_cacheable(i32 noundef %7) #20, !dbg !4931
  br i1 %12, label %13, label %14, !dbg !4933

13:                                               ; preds = %11
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1.36, i32 0, i32 0), i32 noundef 863, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.vdma_configure, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i32 0, i32 0)) #23, !dbg !4934
  unreachable, !dbg !4934

14:                                               ; preds = %11
  %15 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 0, i32 1, !dbg !4936
  %16 = load i32, i32* %15, align 4, !dbg !4936
  %17 = getelementptr inbounds [10 x %struct.VDMA_REGISTER_T*], [10 x %struct.VDMA_REGISTER_T*]* @vdma, i32 0, i32 %3, !dbg !4937
  %18 = load %struct.VDMA_REGISTER_T*, %struct.VDMA_REGISTER_T** %17, align 4, !dbg !4937
  %19 = getelementptr inbounds %struct.VDMA_REGISTER_T, %struct.VDMA_REGISTER_T* %18, i32 0, i32 12, !dbg !4938
  store volatile i32 %16, i32* %19, align 4, !dbg !4939
  %20 = load i32, i32* %6, align 4, !dbg !4940
  %21 = load %struct.VDMA_REGISTER_T*, %struct.VDMA_REGISTER_T** %17, align 4, !dbg !4941
  %22 = getelementptr inbounds %struct.VDMA_REGISTER_T, %struct.VDMA_REGISTER_T* %21, i32 0, i32 6, !dbg !4942
  store volatile i32 %20, i32* %22, align 4, !dbg !4943
  br label %23, !dbg !4944

23:                                               ; preds = %2, %14
  %24 = phi i32 [ 0, %14 ], [ -2, %2 ], !dbg !4919
  ret i32 %24, !dbg !4945
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @vdma_enable_interrupt(i32 noundef %0) local_unnamed_addr #2 !dbg !4946 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4948, metadata !DIExpression()), !dbg !4950
  call void @llvm.dbg.value(metadata i32 0, metadata !4949, metadata !DIExpression()), !dbg !4950
  %2 = tail call fastcc i32 @vdma_check_valid_channel(i32 noundef %0) #21, !dbg !4951
  call void @llvm.dbg.value(metadata i32 %2, metadata !4949, metadata !DIExpression()), !dbg !4950
  %3 = icmp eq i32 %2, 255, !dbg !4952
  br i1 %3, label %10, label %4, !dbg !4954

4:                                                ; preds = %1
  %5 = getelementptr inbounds [10 x %struct.VDMA_REGISTER_T*], [10 x %struct.VDMA_REGISTER_T*]* @vdma, i32 0, i32 %2, !dbg !4955
  %6 = load %struct.VDMA_REGISTER_T*, %struct.VDMA_REGISTER_T** %5, align 4, !dbg !4955
  %7 = getelementptr inbounds %struct.VDMA_REGISTER_T, %struct.VDMA_REGISTER_T* %6, i32 0, i32 1, !dbg !4956
  %8 = load volatile i32, i32* %7, align 4, !dbg !4957
  %9 = or i32 %8, 32768, !dbg !4957
  store volatile i32 %9, i32* %7, align 4, !dbg !4957
  br label %10, !dbg !4958

10:                                               ; preds = %1, %4
  %11 = phi i32 [ 0, %4 ], [ -2, %1 ], !dbg !4950
  ret i32 %11, !dbg !4959
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vdma_start(i32 noundef %0) local_unnamed_addr #0 !dbg !4960 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !4962, metadata !DIExpression()), !dbg !4966
  call void @llvm.dbg.value(metadata i32 0, metadata !4963, metadata !DIExpression()), !dbg !4966
  %3 = bitcast i32* %2 to i8*, !dbg !4967
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !4967
  call void @llvm.dbg.declare(metadata i32* %2, metadata !4965, metadata !DIExpression()), !dbg !4968
  store volatile i32 0, i32* %2, align 4, !dbg !4968
  %4 = tail call fastcc i32 @vdma_check_valid_channel(i32 noundef %0) #21, !dbg !4969
  call void @llvm.dbg.value(metadata i32 %4, metadata !4963, metadata !DIExpression()), !dbg !4966
  %5 = icmp eq i32 %4, 255, !dbg !4970
  br i1 %5, label %29, label %6, !dbg !4972

6:                                                ; preds = %1
  %7 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !4973
  call void @llvm.dbg.value(metadata i32 %7, metadata !4964, metadata !DIExpression()), !dbg !4966
  %8 = getelementptr inbounds [10 x %struct.anon*], [10 x %struct.anon*]* @vdma_global, i32 0, i32 %4, !dbg !4974
  %9 = load %struct.anon*, %struct.anon** %8, align 4, !dbg !4974
  %10 = getelementptr inbounds %struct.anon, %struct.anon* %9, i32 0, i32 0, !dbg !4975
  %11 = load volatile i32, i32* %10, align 4, !dbg !4975
  store volatile i32 %11, i32* %2, align 4, !dbg !4976
  %12 = load volatile i32, i32* %2, align 4, !dbg !4977
  %13 = getelementptr inbounds [10 x i8], [10 x i8]* @g_vdma_global_running_bit, i32 0, i32 %4, !dbg !4979
  %14 = load i8, i8* %13, align 1, !dbg !4979
  %15 = zext i8 %14 to i32, !dbg !4979
  %16 = shl nuw i32 1, %15, !dbg !4980
  %17 = and i32 %16, %12, !dbg !4981
  %18 = icmp eq i32 %17, 0, !dbg !4981
  br i1 %18, label %20, label %19, !dbg !4982

19:                                               ; preds = %6
  tail call void @restore_interrupt_mask(i32 noundef %7) #20, !dbg !4983
  br label %29, !dbg !4985

20:                                               ; preds = %6
  %21 = load volatile i32, i32* %2, align 4, !dbg !4986
  %22 = shl i32 2, %15, !dbg !4988
  %23 = and i32 %21, %22, !dbg !4989
  %24 = icmp eq i32 %23, 0, !dbg !4989
  tail call void @restore_interrupt_mask(i32 noundef %7) #20, !dbg !4966
  br i1 %24, label %25, label %29, !dbg !4990

25:                                               ; preds = %20
  %26 = getelementptr inbounds [10 x %struct.VDMA_REGISTER_T*], [10 x %struct.VDMA_REGISTER_T*]* @vdma, i32 0, i32 %4, !dbg !4991
  %27 = load %struct.VDMA_REGISTER_T*, %struct.VDMA_REGISTER_T** %26, align 4, !dbg !4991
  %28 = getelementptr inbounds %struct.VDMA_REGISTER_T, %struct.VDMA_REGISTER_T* %27, i32 0, i32 2, !dbg !4992
  store volatile i32 32768, i32* %28, align 4, !dbg !4993
  br label %29, !dbg !4994

29:                                               ; preds = %20, %1, %25, %19
  %30 = phi i32 [ -3, %19 ], [ 0, %25 ], [ -2, %1 ], [ -3, %20 ], !dbg !4966
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !4995
  ret i32 %30, !dbg !4995
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @vdma_disable_interrupt(i32 noundef %0) local_unnamed_addr #2 !dbg !4996 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4998, metadata !DIExpression()), !dbg !5000
  call void @llvm.dbg.value(metadata i32 0, metadata !4999, metadata !DIExpression()), !dbg !5000
  %2 = tail call fastcc i32 @vdma_check_valid_channel(i32 noundef %0) #21, !dbg !5001
  call void @llvm.dbg.value(metadata i32 %2, metadata !4999, metadata !DIExpression()), !dbg !5000
  %3 = icmp eq i32 %2, 255, !dbg !5002
  br i1 %3, label %10, label %4, !dbg !5004

4:                                                ; preds = %1
  %5 = getelementptr inbounds [10 x %struct.VDMA_REGISTER_T*], [10 x %struct.VDMA_REGISTER_T*]* @vdma, i32 0, i32 %2, !dbg !5005
  %6 = load %struct.VDMA_REGISTER_T*, %struct.VDMA_REGISTER_T** %5, align 4, !dbg !5005
  %7 = getelementptr inbounds %struct.VDMA_REGISTER_T, %struct.VDMA_REGISTER_T* %6, i32 0, i32 1, !dbg !5006
  %8 = load volatile i32, i32* %7, align 4, !dbg !5007
  %9 = and i32 %8, -32769, !dbg !5007
  store volatile i32 %9, i32* %7, align 4, !dbg !5007
  br label %10, !dbg !5008

10:                                               ; preds = %1, %4
  %11 = phi i32 [ 0, %4 ], [ -2, %1 ], !dbg !5000
  ret i32 %11, !dbg !5009
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @vdma_stop(i32 noundef %0) local_unnamed_addr #2 !dbg !5010 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5012, metadata !DIExpression()), !dbg !5014
  call void @llvm.dbg.value(metadata i32 0, metadata !5013, metadata !DIExpression()), !dbg !5014
  %2 = tail call fastcc i32 @vdma_check_valid_channel(i32 noundef %0) #21, !dbg !5015
  call void @llvm.dbg.value(metadata i32 %2, metadata !5013, metadata !DIExpression()), !dbg !5014
  %3 = icmp eq i32 %2, 255, !dbg !5016
  br i1 %3, label %8, label %4, !dbg !5018

4:                                                ; preds = %1
  %5 = getelementptr inbounds [10 x %struct.VDMA_REGISTER_T*], [10 x %struct.VDMA_REGISTER_T*]* @vdma, i32 0, i32 %2, !dbg !5019
  %6 = load %struct.VDMA_REGISTER_T*, %struct.VDMA_REGISTER_T** %5, align 4, !dbg !5019
  %7 = getelementptr inbounds %struct.VDMA_REGISTER_T, %struct.VDMA_REGISTER_T* %6, i32 0, i32 2, !dbg !5020
  store volatile i32 0, i32* %7, align 4, !dbg !5021
  br label %8, !dbg !5022

8:                                                ; preds = %1, %4
  %9 = phi i32 [ 0, %4 ], [ -2, %1 ], !dbg !5014
  ret i32 %9, !dbg !5023
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @vdma_set_threshold(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !5024 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5028, metadata !DIExpression()), !dbg !5031
  call void @llvm.dbg.value(metadata i32 %1, metadata !5029, metadata !DIExpression()), !dbg !5031
  call void @llvm.dbg.value(metadata i32 0, metadata !5030, metadata !DIExpression()), !dbg !5031
  %3 = tail call fastcc i32 @vdma_check_valid_channel(i32 noundef %0) #21, !dbg !5032
  call void @llvm.dbg.value(metadata i32 %3, metadata !5030, metadata !DIExpression()), !dbg !5031
  %4 = icmp eq i32 %3, 255, !dbg !5033
  br i1 %4, label %11, label %5, !dbg !5035

5:                                                ; preds = %2
  %6 = icmp ugt i32 %1, 65535, !dbg !5036
  br i1 %6, label %11, label %7, !dbg !5038

7:                                                ; preds = %5
  %8 = getelementptr inbounds [10 x %struct.VDMA_REGISTER_T*], [10 x %struct.VDMA_REGISTER_T*]* @vdma, i32 0, i32 %3, !dbg !5039
  %9 = load %struct.VDMA_REGISTER_T*, %struct.VDMA_REGISTER_T** %8, align 4, !dbg !5039
  %10 = getelementptr inbounds %struct.VDMA_REGISTER_T, %struct.VDMA_REGISTER_T* %9, i32 0, i32 0, !dbg !5040
  store volatile i32 %1, i32* %10, align 4, !dbg !5041
  br label %11, !dbg !5042

11:                                               ; preds = %5, %2, %7
  %12 = phi i32 [ 0, %7 ], [ -2, %2 ], [ -1, %5 ], !dbg !5031
  ret i32 %12, !dbg !5043
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @vdma_set_alert_length(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !5044 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5046, metadata !DIExpression()), !dbg !5049
  call void @llvm.dbg.value(metadata i32 %1, metadata !5047, metadata !DIExpression()), !dbg !5049
  call void @llvm.dbg.value(metadata i32 0, metadata !5048, metadata !DIExpression()), !dbg !5049
  %3 = tail call fastcc i32 @vdma_check_valid_channel(i32 noundef %0) #21, !dbg !5050
  call void @llvm.dbg.value(metadata i32 %3, metadata !5048, metadata !DIExpression()), !dbg !5049
  %4 = icmp eq i32 %3, 255, !dbg !5051
  br i1 %4, label %11, label %5, !dbg !5053

5:                                                ; preds = %2
  %6 = icmp ugt i32 %1, 63, !dbg !5054
  br i1 %6, label %11, label %7, !dbg !5056

7:                                                ; preds = %5
  %8 = getelementptr inbounds [10 x %struct.VDMA_REGISTER_T*], [10 x %struct.VDMA_REGISTER_T*]* @vdma, i32 0, i32 %3, !dbg !5057
  %9 = load %struct.VDMA_REGISTER_T*, %struct.VDMA_REGISTER_T** %8, align 4, !dbg !5057
  %10 = getelementptr inbounds %struct.VDMA_REGISTER_T, %struct.VDMA_REGISTER_T* %9, i32 0, i32 11, !dbg !5058
  store volatile i32 %1, i32* %10, align 4, !dbg !5059
  br label %11, !dbg !5060

11:                                               ; preds = %5, %2, %7
  %12 = phi i32 [ 0, %7 ], [ -2, %2 ], [ -1, %5 ], !dbg !5049
  ret i32 %12, !dbg !5061
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @vdma_push_data(i32 noundef %0, i8 noundef zeroext %1) local_unnamed_addr #2 !dbg !5062 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5066, metadata !DIExpression()), !dbg !5069
  call void @llvm.dbg.value(metadata i8 %1, metadata !5067, metadata !DIExpression()), !dbg !5069
  call void @llvm.dbg.value(metadata i32 0, metadata !5068, metadata !DIExpression()), !dbg !5069
  %3 = tail call fastcc i32 @vdma_check_valid_channel(i32 noundef %0) #21, !dbg !5070
  call void @llvm.dbg.value(metadata i32 %3, metadata !5068, metadata !DIExpression()), !dbg !5069
  %4 = icmp eq i32 %3, 255, !dbg !5071
  br i1 %4, label %10, label %5, !dbg !5073

5:                                                ; preds = %2
  %6 = zext i8 %1 to i32, !dbg !5074
  %7 = getelementptr inbounds [10 x %struct.anon*], [10 x %struct.anon*]* @vdma_port, i32 0, i32 %3, !dbg !5075
  %8 = load %struct.anon*, %struct.anon** %7, align 4, !dbg !5075
  %9 = getelementptr inbounds %struct.anon, %struct.anon* %8, i32 0, i32 0, !dbg !5076
  store volatile i32 %6, i32* %9, align 4, !dbg !5077
  br label %10, !dbg !5078

10:                                               ; preds = %2, %5
  %11 = phi i32 [ 0, %5 ], [ -2, %2 ], !dbg !5069
  ret i32 %11, !dbg !5079
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @vdma_pop_data(i32 noundef %0, i8* nocapture noundef writeonly %1) local_unnamed_addr #11 !dbg !5080 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5084, metadata !DIExpression()), !dbg !5087
  call void @llvm.dbg.value(metadata i8* %1, metadata !5085, metadata !DIExpression()), !dbg !5087
  call void @llvm.dbg.value(metadata i32 0, metadata !5086, metadata !DIExpression()), !dbg !5087
  %3 = tail call fastcc i32 @vdma_check_valid_channel(i32 noundef %0) #21, !dbg !5088
  call void @llvm.dbg.value(metadata i32 %3, metadata !5086, metadata !DIExpression()), !dbg !5087
  %4 = icmp eq i32 %3, 255, !dbg !5089
  br i1 %4, label %11, label %5, !dbg !5091

5:                                                ; preds = %2
  %6 = getelementptr inbounds [10 x %struct.anon*], [10 x %struct.anon*]* @vdma_port, i32 0, i32 %3, !dbg !5092
  %7 = load %struct.anon*, %struct.anon** %6, align 4, !dbg !5092
  %8 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, !dbg !5093
  %9 = load volatile i32, i32* %8, align 4, !dbg !5093
  %10 = trunc i32 %9 to i8, !dbg !5092
  store i8 %10, i8* %1, align 1, !dbg !5094
  br label %11, !dbg !5095

11:                                               ; preds = %2, %5
  %12 = phi i32 [ 0, %5 ], [ -2, %2 ], !dbg !5087
  ret i32 %12, !dbg !5096
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @vdma_get_available_receive_bytes(i32 noundef %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #11 !dbg !5097 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5101, metadata !DIExpression()), !dbg !5104
  call void @llvm.dbg.value(metadata i32* %1, metadata !5102, metadata !DIExpression()), !dbg !5104
  call void @llvm.dbg.value(metadata i32 0, metadata !5103, metadata !DIExpression()), !dbg !5104
  %3 = tail call fastcc i32 @vdma_check_valid_channel(i32 noundef %0) #21, !dbg !5105
  call void @llvm.dbg.value(metadata i32 %3, metadata !5103, metadata !DIExpression()), !dbg !5104
  %4 = icmp eq i32 %3, 255, !dbg !5106
  br i1 %4, label %10, label %5, !dbg !5108

5:                                                ; preds = %2
  %6 = getelementptr inbounds [10 x %struct.VDMA_REGISTER_T*], [10 x %struct.VDMA_REGISTER_T*]* @vdma, i32 0, i32 %3, !dbg !5109
  %7 = load %struct.VDMA_REGISTER_T*, %struct.VDMA_REGISTER_T** %6, align 4, !dbg !5109
  %8 = getelementptr inbounds %struct.VDMA_REGISTER_T, %struct.VDMA_REGISTER_T* %7, i32 0, i32 9, !dbg !5110
  %9 = load volatile i32, i32* %8, align 4, !dbg !5110
  store i32 %9, i32* %1, align 4, !dbg !5111
  br label %10, !dbg !5112

10:                                               ; preds = %2, %5
  %11 = phi i32 [ 0, %5 ], [ -2, %2 ], !dbg !5104
  ret i32 %11, !dbg !5113
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @vdma_get_available_send_space(i32 noundef %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #11 !dbg !5114 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5116, metadata !DIExpression()), !dbg !5121
  call void @llvm.dbg.value(metadata i32* %1, metadata !5117, metadata !DIExpression()), !dbg !5121
  call void @llvm.dbg.value(metadata i32 0, metadata !5118, metadata !DIExpression()), !dbg !5121
  call void @llvm.dbg.value(metadata i32 0, metadata !5119, metadata !DIExpression()), !dbg !5121
  call void @llvm.dbg.value(metadata i32 0, metadata !5120, metadata !DIExpression()), !dbg !5121
  %3 = tail call fastcc i32 @vdma_check_valid_channel(i32 noundef %0) #21, !dbg !5122
  call void @llvm.dbg.value(metadata i32 %3, metadata !5118, metadata !DIExpression()), !dbg !5121
  %4 = icmp eq i32 %3, 255, !dbg !5123
  br i1 %4, label %13, label %5, !dbg !5125

5:                                                ; preds = %2
  %6 = getelementptr inbounds [10 x %struct.VDMA_REGISTER_T*], [10 x %struct.VDMA_REGISTER_T*]* @vdma, i32 0, i32 %3, !dbg !5126
  %7 = load %struct.VDMA_REGISTER_T*, %struct.VDMA_REGISTER_T** %6, align 4, !dbg !5126
  %8 = getelementptr inbounds %struct.VDMA_REGISTER_T, %struct.VDMA_REGISTER_T* %7, i32 0, i32 12, !dbg !5127
  %9 = load volatile i32, i32* %8, align 4, !dbg !5127
  call void @llvm.dbg.value(metadata i32 %9, metadata !5119, metadata !DIExpression()), !dbg !5121
  %10 = getelementptr inbounds %struct.VDMA_REGISTER_T, %struct.VDMA_REGISTER_T* %7, i32 0, i32 9, !dbg !5128
  %11 = load volatile i32, i32* %10, align 4, !dbg !5128
  call void @llvm.dbg.value(metadata i32 %11, metadata !5120, metadata !DIExpression()), !dbg !5121
  %12 = sub i32 %9, %11, !dbg !5129
  store i32 %12, i32* %1, align 4, !dbg !5130
  br label %13, !dbg !5131

13:                                               ; preds = %2, %5
  %14 = phi i32 [ 0, %5 ], [ -2, %2 ], !dbg !5121
  ret i32 %14, !dbg !5132
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @vdma_register_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #7 !dbg !5133 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5137, metadata !DIExpression()), !dbg !5141
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !5138, metadata !DIExpression()), !dbg !5141
  call void @llvm.dbg.value(metadata i8* %2, metadata !5139, metadata !DIExpression()), !dbg !5141
  call void @llvm.dbg.value(metadata i32 0, metadata !5140, metadata !DIExpression()), !dbg !5141
  %4 = tail call fastcc i32 @vdma_check_valid_channel(i32 noundef %0) #21, !dbg !5142
  call void @llvm.dbg.value(metadata i32 %4, metadata !5140, metadata !DIExpression()), !dbg !5141
  %5 = icmp eq i32 %4, 255, !dbg !5143
  br i1 %5, label %12, label %6, !dbg !5145

6:                                                ; preds = %3
  %7 = getelementptr inbounds [10 x %struct.gdma_user_callback_t], [10 x %struct.gdma_user_callback_t]* @g_vdma_callback, i32 0, i32 %4, i32 0, !dbg !5146
  %8 = load void (i32, i8*)*, void (i32, i8*)** %7, align 4, !dbg !5146
  %9 = icmp eq void (i32, i8*)* %8, null, !dbg !5148
  br i1 %9, label %10, label %12, !dbg !5149

10:                                               ; preds = %6
  store void (i32, i8*)* %1, void (i32, i8*)** %7, align 4, !dbg !5150
  %11 = getelementptr inbounds [10 x %struct.gdma_user_callback_t], [10 x %struct.gdma_user_callback_t]* @g_vdma_callback, i32 0, i32 %4, i32 1, !dbg !5152
  store i8* %2, i8** %11, align 4, !dbg !5153
  br label %12, !dbg !5154

12:                                               ; preds = %6, %10, %3
  %13 = phi i32 [ -2, %3 ], [ 0, %10 ], [ 0, %6 ], !dbg !5141
  ret i32 %13, !dbg !5155
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local i32 @is_pin_with_pullsel(i32 noundef %0) local_unnamed_addr #14 !dbg !5156 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5161, metadata !DIExpression()), !dbg !5164
  call void @llvm.dbg.declare(metadata [5 x i32]* @__const.is_pin_with_pullsel.pin_number_with_pullsel, metadata !5163, metadata !DIExpression()), !dbg !5165
  call void @llvm.dbg.value(metadata i32 0, metadata !5162, metadata !DIExpression()), !dbg !5164
  br label %5, !dbg !5166

2:                                                ; preds = %5
  %3 = add nuw nsw i32 %6, 1, !dbg !5168
  call void @llvm.dbg.value(metadata i32 %3, metadata !5162, metadata !DIExpression()), !dbg !5164
  call void @llvm.dbg.value(metadata i32 %6, metadata !5162, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5164
  %4 = icmp eq i32 %3, 5, !dbg !5170
  br i1 %4, label %10, label %5, !dbg !5166, !llvm.loop !5171

5:                                                ; preds = %1, %2
  %6 = phi i32 [ 0, %1 ], [ %3, %2 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !5162, metadata !DIExpression()), !dbg !5164
  %7 = getelementptr inbounds [5 x i32], [5 x i32]* @__const.is_pin_with_pullsel.pin_number_with_pullsel, i32 0, i32 %6, !dbg !5173
  %8 = load i32, i32* %7, align 4, !dbg !5173
  %9 = icmp eq i32 %8, %0, !dbg !5176
  call void @llvm.dbg.value(metadata i32 %6, metadata !5162, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5164
  br i1 %9, label %10, label %2, !dbg !5177

10:                                               ; preds = %2, %5
  %11 = phi i32 [ 1, %5 ], [ 0, %2 ], !dbg !5164
  ret i32 %11, !dbg !5178
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @hal_gpio_init(i32 noundef %0) local_unnamed_addr #10 !dbg !5179 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5184, metadata !DIExpression()), !dbg !5185
  ret i32 0, !dbg !5186
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @hal_gpio_deinit(i32 noundef %0) local_unnamed_addr #10 !dbg !5187 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5189, metadata !DIExpression()), !dbg !5190
  ret i32 0, !dbg !5191
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_direction(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !5192 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5196, metadata !DIExpression()), !dbg !5200
  call void @llvm.dbg.value(metadata i32 %1, metadata !5197, metadata !DIExpression()), !dbg !5200
  %3 = icmp ugt i32 %0, 48, !dbg !5201
  br i1 %3, label %13, label %4, !dbg !5203

4:                                                ; preds = %2
  %5 = lshr i32 %0, 5, !dbg !5204
  call void @llvm.dbg.value(metadata i32 %5, metadata !5198, metadata !DIExpression()), !dbg !5200
  %6 = and i32 %0, 31, !dbg !5205
  call void @llvm.dbg.value(metadata i32 %6, metadata !5199, metadata !DIExpression()), !dbg !5200
  %7 = icmp eq i32 %1, 0, !dbg !5206
  %8 = shl nuw i32 1, %6, !dbg !5208
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5208
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 0, i32 %5, i32 2, !dbg !5209
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 0, i32 %5, i32 1, !dbg !5209
  %12 = select i1 %7, i32* %10, i32* %11, !dbg !5209
  store volatile i32 %8, i32* %12, align 4, !dbg !5208
  br label %13, !dbg !5210

13:                                               ; preds = %4, %2
  %14 = phi i32 [ -2, %2 ], [ 0, %4 ], !dbg !5200
  ret i32 %14, !dbg !5210
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_gpio_get_direction(i32 noundef %0, i32* noundef writeonly %1) local_unnamed_addr #11 !dbg !5211 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5216, metadata !DIExpression()), !dbg !5221
  call void @llvm.dbg.value(metadata i32* %1, metadata !5217, metadata !DIExpression()), !dbg !5221
  %3 = icmp ugt i32 %0, 48, !dbg !5222
  br i1 %3, label %15, label %4, !dbg !5224

4:                                                ; preds = %2
  %5 = icmp eq i32* %1, null, !dbg !5225
  br i1 %5, label %15, label %6, !dbg !5227

6:                                                ; preds = %4
  %7 = lshr i32 %0, 5, !dbg !5228
  call void @llvm.dbg.value(metadata i32 %7, metadata !5218, metadata !DIExpression()), !dbg !5221
  %8 = and i32 %0, 31, !dbg !5229
  call void @llvm.dbg.value(metadata i32 %8, metadata !5219, metadata !DIExpression()), !dbg !5221
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5230
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 0, i32 %7, i32 0, !dbg !5231
  %11 = load volatile i32, i32* %10, align 4, !dbg !5231
  call void @llvm.dbg.value(metadata i32 %11, metadata !5220, metadata !DIExpression()), !dbg !5221
  %12 = shl nuw i32 1, %8, !dbg !5232
  %13 = and i32 %11, %12, !dbg !5233
  call void @llvm.dbg.value(metadata i32 %13, metadata !5220, metadata !DIExpression()), !dbg !5221
  %14 = lshr i32 %13, %8, !dbg !5234
  store i32 %14, i32* %1, align 4, !dbg !5235
  br label %15, !dbg !5236

15:                                               ; preds = %4, %2, %6
  %16 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !5221
  ret i32 %16, !dbg !5237
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_pinmux_set_function(i32 noundef %0, i8 noundef zeroext %1) local_unnamed_addr #0 !dbg !5238 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5243, metadata !DIExpression()), !dbg !5248
  call void @llvm.dbg.value(metadata i8 %1, metadata !5244, metadata !DIExpression()), !dbg !5248
  %3 = icmp ugt i32 %0, 48, !dbg !5249
  br i1 %3, label %18, label %4, !dbg !5251

4:                                                ; preds = %2
  %5 = icmp ugt i8 %1, 15, !dbg !5252
  br i1 %5, label %18, label %6, !dbg !5254

6:                                                ; preds = %4
  %7 = zext i8 %1 to i32, !dbg !5255
  %8 = lshr i32 %0, 3, !dbg !5256
  call void @llvm.dbg.value(metadata i32 %8, metadata !5245, metadata !DIExpression()), !dbg !5248
  call void @llvm.dbg.value(metadata i32 %0, metadata !5246, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_stack_value)), !dbg !5248
  %9 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !5257
  call void @llvm.dbg.value(metadata i32 %9, metadata !5247, metadata !DIExpression()), !dbg !5248
  %10 = shl nuw nsw i32 %0, 2, !dbg !5258
  %11 = and i32 %10, 28, !dbg !5258
  %12 = shl nuw i32 15, %11, !dbg !5259
  %13 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5260
  %14 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %13, i32 0, i32 25, i32 %8, i32 2, !dbg !5261
  store volatile i32 %12, i32* %14, align 4, !dbg !5262
  %15 = shl nuw i32 %7, %11, !dbg !5263
  %16 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5264
  %17 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %16, i32 0, i32 25, i32 %8, i32 1, !dbg !5265
  store volatile i32 %15, i32* %17, align 4, !dbg !5266
  tail call void @restore_interrupt_mask(i32 noundef %9) #20, !dbg !5267
  br label %18, !dbg !5268

18:                                               ; preds = %4, %2, %6
  %19 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !5248
  ret i32 %19, !dbg !5269
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_gpio_get_input(i32 noundef %0, i32* noundef writeonly %1) local_unnamed_addr #11 !dbg !5270 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5275, metadata !DIExpression()), !dbg !5280
  call void @llvm.dbg.value(metadata i32* %1, metadata !5276, metadata !DIExpression()), !dbg !5280
  %3 = icmp ugt i32 %0, 48, !dbg !5281
  br i1 %3, label %15, label %4, !dbg !5283

4:                                                ; preds = %2
  %5 = icmp eq i32* %1, null, !dbg !5284
  br i1 %5, label %15, label %6, !dbg !5286

6:                                                ; preds = %4
  %7 = lshr i32 %0, 5, !dbg !5287
  call void @llvm.dbg.value(metadata i32 %7, metadata !5277, metadata !DIExpression()), !dbg !5280
  %8 = and i32 %0, 31, !dbg !5288
  call void @llvm.dbg.value(metadata i32 %8, metadata !5278, metadata !DIExpression()), !dbg !5280
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5289
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 8, i32 %7, i32 0, !dbg !5290
  %11 = load volatile i32, i32* %10, align 4, !dbg !5290
  call void @llvm.dbg.value(metadata i32 %11, metadata !5279, metadata !DIExpression()), !dbg !5280
  %12 = shl nuw i32 1, %8, !dbg !5291
  %13 = and i32 %11, %12, !dbg !5292
  call void @llvm.dbg.value(metadata i32 %13, metadata !5279, metadata !DIExpression()), !dbg !5280
  %14 = lshr i32 %13, %8, !dbg !5293
  store i32 %14, i32* %1, align 4, !dbg !5294
  br label %15, !dbg !5295

15:                                               ; preds = %4, %2, %6
  %16 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !5280
  ret i32 %16, !dbg !5296
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_output(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !5297 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5301, metadata !DIExpression()), !dbg !5305
  call void @llvm.dbg.value(metadata i32 %1, metadata !5302, metadata !DIExpression()), !dbg !5305
  %3 = icmp ugt i32 %0, 48, !dbg !5306
  br i1 %3, label %13, label %4, !dbg !5308

4:                                                ; preds = %2
  %5 = lshr i32 %0, 5, !dbg !5309
  call void @llvm.dbg.value(metadata i32 %5, metadata !5303, metadata !DIExpression()), !dbg !5305
  %6 = and i32 %0, 31, !dbg !5310
  call void @llvm.dbg.value(metadata i32 %6, metadata !5304, metadata !DIExpression()), !dbg !5305
  %7 = icmp eq i32 %1, 0, !dbg !5311
  %8 = shl nuw i32 1, %6, !dbg !5313
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5313
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 6, i32 %5, i32 1, !dbg !5314
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 6, i32 %5, i32 2, !dbg !5314
  %12 = select i1 %7, i32* %11, i32* %10, !dbg !5314
  store volatile i32 %8, i32* %12, align 4, !dbg !5313
  br label %13, !dbg !5315

13:                                               ; preds = %4, %2
  %14 = phi i32 [ -2, %2 ], [ 0, %4 ], !dbg !5305
  ret i32 %14, !dbg !5315
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_gpio_get_output(i32 noundef %0, i32* noundef writeonly %1) local_unnamed_addr #11 !dbg !5316 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5318, metadata !DIExpression()), !dbg !5323
  call void @llvm.dbg.value(metadata i32* %1, metadata !5319, metadata !DIExpression()), !dbg !5323
  %3 = icmp ugt i32 %0, 48, !dbg !5324
  br i1 %3, label %15, label %4, !dbg !5326

4:                                                ; preds = %2
  %5 = icmp eq i32* %1, null, !dbg !5327
  br i1 %5, label %15, label %6, !dbg !5329

6:                                                ; preds = %4
  %7 = lshr i32 %0, 5, !dbg !5330
  call void @llvm.dbg.value(metadata i32 %7, metadata !5320, metadata !DIExpression()), !dbg !5323
  %8 = and i32 %0, 31, !dbg !5331
  call void @llvm.dbg.value(metadata i32 %8, metadata !5321, metadata !DIExpression()), !dbg !5323
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5332
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 6, i32 %7, i32 0, !dbg !5333
  %11 = load volatile i32, i32* %10, align 4, !dbg !5333
  call void @llvm.dbg.value(metadata i32 %11, metadata !5322, metadata !DIExpression()), !dbg !5323
  %12 = shl nuw i32 1, %8, !dbg !5334
  %13 = and i32 %11, %12, !dbg !5335
  call void @llvm.dbg.value(metadata i32 %13, metadata !5322, metadata !DIExpression()), !dbg !5323
  %14 = lshr i32 %13, %8, !dbg !5336
  store i32 %14, i32* %1, align 4, !dbg !5337
  br label %15, !dbg !5338

15:                                               ; preds = %4, %2, %6
  %16 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !5323
  ret i32 %16, !dbg !5339
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_toggle_pin(i32 noundef %0) local_unnamed_addr #2 !dbg !5340 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5342, metadata !DIExpression()), !dbg !5346
  %2 = icmp ugt i32 %0, 48, !dbg !5347
  br i1 %2, label %16, label %3, !dbg !5349

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !5350
  call void @llvm.dbg.value(metadata i32 %4, metadata !5343, metadata !DIExpression()), !dbg !5346
  %5 = and i32 %0, 31, !dbg !5351
  call void @llvm.dbg.value(metadata i32 %5, metadata !5344, metadata !DIExpression()), !dbg !5346
  %6 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5352
  %7 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %6, i32 0, i32 6, i32 %4, i32 0, !dbg !5353
  %8 = load volatile i32, i32* %7, align 4, !dbg !5353
  call void @llvm.dbg.value(metadata i32 %8, metadata !5345, metadata !DIExpression()), !dbg !5346
  %9 = shl nuw i32 1, %5, !dbg !5354
  %10 = and i32 %8, %9, !dbg !5355
  call void @llvm.dbg.value(metadata i32 %10, metadata !5345, metadata !DIExpression()), !dbg !5346
  %11 = lshr i32 %10, %5, !dbg !5356
  %12 = icmp eq i32 %11, 0, !dbg !5356
  %13 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %6, i32 0, i32 6, i32 %4, i32 2, !dbg !5358
  %14 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %6, i32 0, i32 6, i32 %4, i32 1, !dbg !5358
  %15 = select i1 %12, i32* %14, i32* %13, !dbg !5358
  store volatile i32 %9, i32* %15, align 4, !dbg !5359
  br label %16, !dbg !5360

16:                                               ; preds = %3, %1
  %17 = phi i32 [ -2, %1 ], [ 0, %3 ], !dbg !5346
  ret i32 %17, !dbg !5360
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_enable_inversion(i32 noundef %0) local_unnamed_addr #2 !dbg !5361 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5363, metadata !DIExpression()), !dbg !5366
  %2 = icmp ugt i32 %0, 48, !dbg !5367
  br i1 %2, label %9, label %3, !dbg !5369

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !5370
  call void @llvm.dbg.value(metadata i32 %4, metadata !5364, metadata !DIExpression()), !dbg !5366
  %5 = and i32 %0, 31, !dbg !5371
  call void @llvm.dbg.value(metadata i32 %5, metadata !5365, metadata !DIExpression()), !dbg !5366
  %6 = shl nuw i32 1, %5, !dbg !5372
  %7 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5373
  %8 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %7, i32 0, i32 4, i32 %4, i32 1, !dbg !5374
  store volatile i32 %6, i32* %8, align 4, !dbg !5375
  br label %9, !dbg !5376

9:                                                ; preds = %1, %3
  %10 = phi i32 [ 0, %3 ], [ -2, %1 ], !dbg !5366
  ret i32 %10, !dbg !5377
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_disable_inversion(i32 noundef %0) local_unnamed_addr #2 !dbg !5378 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5380, metadata !DIExpression()), !dbg !5383
  %2 = icmp ugt i32 %0, 48, !dbg !5384
  br i1 %2, label %9, label %3, !dbg !5386

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !5387
  call void @llvm.dbg.value(metadata i32 %4, metadata !5381, metadata !DIExpression()), !dbg !5383
  %5 = and i32 %0, 31, !dbg !5388
  call void @llvm.dbg.value(metadata i32 %5, metadata !5382, metadata !DIExpression()), !dbg !5383
  %6 = shl nuw i32 1, %5, !dbg !5389
  %7 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5390
  %8 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %7, i32 0, i32 4, i32 %4, i32 2, !dbg !5391
  store volatile i32 %6, i32* %8, align 4, !dbg !5392
  br label %9, !dbg !5393

9:                                                ; preds = %1, %3
  %10 = phi i32 [ 0, %3 ], [ -2, %1 ], !dbg !5383
  ret i32 %10, !dbg !5394
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_pull_up(i32 noundef %0) local_unnamed_addr #2 !dbg !5395 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5397, metadata !DIExpression()), !dbg !5400
  %2 = icmp ugt i32 %0, 48, !dbg !5401
  br i1 %2, label %14, label %3, !dbg !5403

3:                                                ; preds = %1
  %4 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #21, !dbg !5404
  %5 = icmp eq i32 %4, 0, !dbg !5404
  br i1 %5, label %14, label %6, !dbg !5405

6:                                                ; preds = %3
  %7 = lshr i32 %0, 5, !dbg !5406
  call void @llvm.dbg.value(metadata i32 %7, metadata !5398, metadata !DIExpression()), !dbg !5400
  %8 = and i32 %0, 31, !dbg !5407
  call void @llvm.dbg.value(metadata i32 %8, metadata !5399, metadata !DIExpression()), !dbg !5400
  %9 = shl nuw i32 1, %8, !dbg !5408
  %10 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5409
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %10, i32 0, i32 2, i32 %7, i32 1, !dbg !5410
  store volatile i32 %9, i32* %11, align 4, !dbg !5411
  %12 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5412
  %13 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %12, i32 0, i32 10, i32 %7, i32 1, !dbg !5413
  store volatile i32 %9, i32* %13, align 4, !dbg !5414
  br label %14, !dbg !5415

14:                                               ; preds = %1, %3, %6
  %15 = phi i32 [ 0, %6 ], [ -2, %3 ], [ -2, %1 ], !dbg !5400
  ret i32 %15, !dbg !5416
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_pull_down(i32 noundef %0) local_unnamed_addr #2 !dbg !5417 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5419, metadata !DIExpression()), !dbg !5422
  %2 = icmp ugt i32 %0, 48, !dbg !5423
  br i1 %2, label %14, label %3, !dbg !5425

3:                                                ; preds = %1
  %4 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #21, !dbg !5426
  %5 = icmp eq i32 %4, 0, !dbg !5426
  br i1 %5, label %14, label %6, !dbg !5427

6:                                                ; preds = %3
  %7 = lshr i32 %0, 5, !dbg !5428
  call void @llvm.dbg.value(metadata i32 %7, metadata !5420, metadata !DIExpression()), !dbg !5422
  %8 = and i32 %0, 31, !dbg !5429
  call void @llvm.dbg.value(metadata i32 %8, metadata !5421, metadata !DIExpression()), !dbg !5422
  %9 = shl nuw i32 1, %8, !dbg !5430
  %10 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5431
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %10, i32 0, i32 2, i32 %7, i32 1, !dbg !5432
  store volatile i32 %9, i32* %11, align 4, !dbg !5433
  %12 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5434
  %13 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %12, i32 0, i32 10, i32 %7, i32 2, !dbg !5435
  store volatile i32 %9, i32* %13, align 4, !dbg !5436
  br label %14, !dbg !5437

14:                                               ; preds = %1, %3, %6
  %15 = phi i32 [ 0, %6 ], [ -2, %3 ], [ -2, %1 ], !dbg !5422
  ret i32 %15, !dbg !5438
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_disable_pull(i32 noundef %0) local_unnamed_addr #2 !dbg !5439 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5441, metadata !DIExpression()), !dbg !5444
  %2 = icmp ugt i32 %0, 48, !dbg !5445
  br i1 %2, label %12, label %3, !dbg !5447

3:                                                ; preds = %1
  %4 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #21, !dbg !5448
  %5 = icmp eq i32 %4, 0, !dbg !5448
  br i1 %5, label %12, label %6, !dbg !5449

6:                                                ; preds = %3
  %7 = lshr i32 %0, 5, !dbg !5450
  call void @llvm.dbg.value(metadata i32 %7, metadata !5442, metadata !DIExpression()), !dbg !5444
  %8 = and i32 %0, 31, !dbg !5451
  call void @llvm.dbg.value(metadata i32 %8, metadata !5443, metadata !DIExpression()), !dbg !5444
  %9 = shl nuw i32 1, %8, !dbg !5452
  %10 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5453
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %10, i32 0, i32 2, i32 %7, i32 2, !dbg !5454
  store volatile i32 %9, i32* %11, align 4, !dbg !5455
  br label %12, !dbg !5456

12:                                               ; preds = %1, %3, %6
  %13 = phi i32 [ 0, %6 ], [ -2, %3 ], [ -2, %1 ], !dbg !5444
  ret i32 %13, !dbg !5457
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_clockout(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !5458 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5464, metadata !DIExpression()), !dbg !5466
  call void @llvm.dbg.value(metadata i32 %1, metadata !5465, metadata !DIExpression()), !dbg !5466
  %3 = icmp ugt i32 %0, 5, !dbg !5467
  br i1 %3, label %7, label %4, !dbg !5469

4:                                                ; preds = %2
  %5 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5470
  %6 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %5, i32 0, i32 29, i32 %0, i32 0, !dbg !5471
  store volatile i32 %1, i32* %6, align 4, !dbg !5472
  br label %7, !dbg !5473

7:                                                ; preds = %2, %4
  %8 = phi i32 [ 0, %4 ], [ -1, %2 ], !dbg !5466
  ret i32 %8, !dbg !5474
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_pupd_register(i32 noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) local_unnamed_addr #2 !dbg !5475 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5479, metadata !DIExpression()), !dbg !5485
  call void @llvm.dbg.value(metadata i8 %1, metadata !5480, metadata !DIExpression()), !dbg !5485
  call void @llvm.dbg.value(metadata i8 %2, metadata !5481, metadata !DIExpression()), !dbg !5485
  call void @llvm.dbg.value(metadata i8 %3, metadata !5482, metadata !DIExpression()), !dbg !5485
  %5 = icmp ugt i32 %0, 48, !dbg !5486
  br i1 %5, label %30, label %6, !dbg !5488

6:                                                ; preds = %4
  %7 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #21, !dbg !5489
  %8 = icmp eq i32 %7, 0, !dbg !5489
  br i1 %8, label %9, label %30, !dbg !5490

9:                                                ; preds = %6
  %10 = lshr i32 %0, 5, !dbg !5491
  call void @llvm.dbg.value(metadata i32 %10, metadata !5483, metadata !DIExpression()), !dbg !5485
  %11 = and i32 %0, 31, !dbg !5492
  call void @llvm.dbg.value(metadata i32 %11, metadata !5484, metadata !DIExpression()), !dbg !5485
  %12 = icmp eq i8 %1, 0, !dbg !5493
  %13 = shl nuw i32 1, %11, !dbg !5495
  %14 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5495
  %15 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %14, i32 0, i32 20, i32 %10, i32 2, !dbg !5496
  %16 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %14, i32 0, i32 20, i32 %10, i32 1, !dbg !5496
  %17 = select i1 %12, i32* %15, i32* %16, !dbg !5496
  store volatile i32 %13, i32* %17, align 4, !dbg !5495
  %18 = icmp eq i8 %2, 0, !dbg !5497
  %19 = shl nuw i32 1, %11, !dbg !5499
  %20 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5499
  %21 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %20, i32 0, i32 22, i32 %10, i32 2, !dbg !5500
  %22 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %20, i32 0, i32 22, i32 %10, i32 1, !dbg !5500
  %23 = select i1 %18, i32* %21, i32* %22, !dbg !5500
  store volatile i32 %19, i32* %23, align 4, !dbg !5499
  %24 = icmp eq i8 %3, 0, !dbg !5501
  %25 = shl nuw i32 1, %11, !dbg !5503
  %26 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5503
  %27 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %26, i32 0, i32 23, i32 %10, i32 1, !dbg !5504
  %28 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %26, i32 0, i32 23, i32 %10, i32 2, !dbg !5504
  %29 = select i1 %24, i32* %28, i32* %27, !dbg !5504
  store volatile i32 %25, i32* %29, align 4, !dbg !5503
  br label %30, !dbg !5505

30:                                               ; preds = %9, %4, %6
  %31 = phi i32 [ -2, %6 ], [ -2, %4 ], [ 0, %9 ], !dbg !5485
  ret i32 %31, !dbg !5505
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_high_impedance(i32 noundef %0) local_unnamed_addr #2 !dbg !5506 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5508, metadata !DIExpression()), !dbg !5515
  %2 = icmp ugt i32 %0, 48, !dbg !5516
  br i1 %2, label %40, label %3, !dbg !5518

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !5519
  call void @llvm.dbg.value(metadata i32 %4, metadata !5509, metadata !DIExpression()), !dbg !5515
  %5 = and i32 %0, 31, !dbg !5520
  call void @llvm.dbg.value(metadata i32 %5, metadata !5512, metadata !DIExpression()), !dbg !5515
  %6 = lshr i32 %0, 4, !dbg !5521
  call void @llvm.dbg.value(metadata i32 %6, metadata !5510, metadata !DIExpression()), !dbg !5515
  call void @llvm.dbg.value(metadata i32 %0, metadata !5513, metadata !DIExpression(DW_OP_constu, 15, DW_OP_and, DW_OP_stack_value)), !dbg !5515
  %7 = lshr i32 %0, 3, !dbg !5522
  call void @llvm.dbg.value(metadata i32 %7, metadata !5511, metadata !DIExpression()), !dbg !5515
  call void @llvm.dbg.value(metadata i32 %0, metadata !5514, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_stack_value)), !dbg !5515
  %8 = shl nuw nsw i32 %0, 2, !dbg !5523
  %9 = and i32 %8, 28, !dbg !5523
  %10 = shl nuw i32 15, %9, !dbg !5524
  %11 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5525
  %12 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %11, i32 0, i32 25, i32 %7, i32 2, !dbg !5526
  store volatile i32 %10, i32* %12, align 4, !dbg !5527
  %13 = shl nuw i32 1, %5, !dbg !5528
  %14 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5529
  %15 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %14, i32 0, i32 0, i32 %4, i32 2, !dbg !5530
  store volatile i32 %13, i32* %15, align 4, !dbg !5531
  %16 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5532
  %17 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %16, i32 0, i32 18, i32 %4, i32 2, !dbg !5533
  store volatile i32 %13, i32* %17, align 4, !dbg !5534
  %18 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #21, !dbg !5535
  %19 = icmp eq i32 %18, 0, !dbg !5535
  %20 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5537
  br i1 %19, label %23, label %21, !dbg !5538

21:                                               ; preds = %3
  %22 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %20, i32 0, i32 2, i32 %4, i32 2, !dbg !5539
  br label %29, !dbg !5541

23:                                               ; preds = %3
  %24 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %20, i32 0, i32 20, i32 %4, i32 2, !dbg !5542
  store volatile i32 %13, i32* %24, align 4, !dbg !5544
  %25 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5545
  %26 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %25, i32 0, i32 22, i32 %4, i32 2, !dbg !5546
  store volatile i32 %13, i32* %26, align 4, !dbg !5547
  %27 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5548
  %28 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %27, i32 0, i32 23, i32 %4, i32 2, !dbg !5549
  br label %29

29:                                               ; preds = %23, %21
  %30 = phi i32* [ %28, %23 ], [ %22, %21 ]
  store volatile i32 %13, i32* %30, align 4, !dbg !5537
  %31 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5550
  %32 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %31, i32 0, i32 12, i32 %4, i32 2, !dbg !5551
  store volatile i32 %13, i32* %32, align 4, !dbg !5552
  %33 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5553
  %34 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %33, i32 0, i32 14, i32 %4, i32 2, !dbg !5554
  store volatile i32 %13, i32* %34, align 4, !dbg !5555
  %35 = shl nuw nsw i32 %0, 1, !dbg !5556
  %36 = and i32 %35, 30, !dbg !5556
  %37 = shl nuw i32 3, %36, !dbg !5557
  %38 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5558
  %39 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %38, i32 0, i32 27, i32 %6, i32 2, !dbg !5559
  store volatile i32 %37, i32* %39, align 4, !dbg !5560
  br label %40, !dbg !5561

40:                                               ; preds = %1, %29
  %41 = phi i32 [ 0, %29 ], [ -2, %1 ], !dbg !5515
  ret i32 %41, !dbg !5562
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_clear_high_impedance(i32 noundef %0) local_unnamed_addr #2 !dbg !5563 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5565, metadata !DIExpression()), !dbg !5570
  %2 = icmp ugt i32 %0, 48, !dbg !5571
  br i1 %2, label %34, label %3, !dbg !5573

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !5574
  call void @llvm.dbg.value(metadata i32 %4, metadata !5566, metadata !DIExpression()), !dbg !5570
  %5 = and i32 %0, 31, !dbg !5575
  call void @llvm.dbg.value(metadata i32 %5, metadata !5568, metadata !DIExpression()), !dbg !5570
  %6 = lshr i32 %0, 3, !dbg !5576
  call void @llvm.dbg.value(metadata i32 %6, metadata !5567, metadata !DIExpression()), !dbg !5570
  call void @llvm.dbg.value(metadata i32 %0, metadata !5569, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_stack_value)), !dbg !5570
  %7 = shl nuw nsw i32 %0, 2, !dbg !5577
  %8 = and i32 %7, 28, !dbg !5577
  %9 = shl nuw i32 15, %8, !dbg !5578
  %10 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5579
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %10, i32 0, i32 25, i32 %6, i32 2, !dbg !5580
  store volatile i32 %9, i32* %11, align 4, !dbg !5581
  %12 = shl nuw i32 1, %5, !dbg !5582
  %13 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5583
  %14 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %13, i32 0, i32 0, i32 %4, i32 2, !dbg !5584
  store volatile i32 %12, i32* %14, align 4, !dbg !5585
  %15 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #21, !dbg !5586
  %16 = icmp eq i32 %15, 0, !dbg !5586
  %17 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5588
  br i1 %16, label %22, label %18, !dbg !5589

18:                                               ; preds = %3
  %19 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %17, i32 0, i32 2, i32 %4, i32 1, !dbg !5590
  store volatile i32 %12, i32* %19, align 4, !dbg !5592
  %20 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5593
  %21 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %20, i32 0, i32 10, i32 %4, i32 2, !dbg !5594
  br label %28, !dbg !5595

22:                                               ; preds = %3
  %23 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %17, i32 0, i32 20, i32 %4, i32 1, !dbg !5596
  store volatile i32 %12, i32* %23, align 4, !dbg !5598
  %24 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5599
  %25 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %24, i32 0, i32 22, i32 %4, i32 1, !dbg !5600
  store volatile i32 %12, i32* %25, align 4, !dbg !5601
  %26 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5602
  %27 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %26, i32 0, i32 23, i32 %4, i32 1, !dbg !5603
  br label %28

28:                                               ; preds = %22, %18
  %29 = phi i32* [ %27, %22 ], [ %21, %18 ]
  store volatile i32 %12, i32* %29, align 4, !dbg !5588
  %30 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5604
  %31 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %30, i32 0, i32 18, i32 %4, i32 1, !dbg !5605
  store volatile i32 %12, i32* %31, align 4, !dbg !5606
  %32 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5607
  %33 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %32, i32 0, i32 14, i32 %4, i32 1, !dbg !5608
  store volatile i32 %12, i32* %33, align 4, !dbg !5609
  br label %34, !dbg !5610

34:                                               ; preds = %1, %28
  %35 = phi i32 [ 0, %28 ], [ -2, %1 ], !dbg !5570
  ret i32 %35, !dbg !5611
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_driving_current(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !5612 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5616, metadata !DIExpression()), !dbg !5620
  call void @llvm.dbg.value(metadata i32 %1, metadata !5617, metadata !DIExpression()), !dbg !5620
  %3 = icmp ugt i32 %0, 48, !dbg !5621
  br i1 %3, label %14, label %4, !dbg !5623

4:                                                ; preds = %2
  %5 = lshr i32 %0, 4, !dbg !5624
  call void @llvm.dbg.value(metadata i32 %5, metadata !5618, metadata !DIExpression()), !dbg !5620
  call void @llvm.dbg.value(metadata i32 %0, metadata !5619, metadata !DIExpression(DW_OP_constu, 15, DW_OP_and, DW_OP_stack_value)), !dbg !5620
  %6 = shl nuw nsw i32 %0, 1, !dbg !5625
  %7 = and i32 %6, 30, !dbg !5625
  %8 = shl nuw i32 3, %7, !dbg !5626
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5627
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 16, i32 %5, i32 2, !dbg !5628
  store volatile i32 %8, i32* %10, align 4, !dbg !5629
  %11 = shl i32 %1, %7, !dbg !5630
  %12 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5631
  %13 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %12, i32 0, i32 16, i32 %5, i32 1, !dbg !5632
  store volatile i32 %11, i32* %13, align 4, !dbg !5633
  br label %14, !dbg !5634

14:                                               ; preds = %2, %4
  %15 = phi i32 [ 0, %4 ], [ -2, %2 ], !dbg !5620
  ret i32 %15, !dbg !5635
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_gpio_get_driving_current(i32 noundef %0, i32* noundef writeonly %1) local_unnamed_addr #11 !dbg !5636 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5641, metadata !DIExpression()), !dbg !5646
  call void @llvm.dbg.value(metadata i32* %1, metadata !5642, metadata !DIExpression()), !dbg !5646
  %3 = icmp ugt i32 %0, 48, !dbg !5647
  br i1 %3, label %18, label %4, !dbg !5649

4:                                                ; preds = %2
  %5 = icmp eq i32* %1, null, !dbg !5650
  br i1 %5, label %18, label %6, !dbg !5652

6:                                                ; preds = %4
  %7 = lshr i32 %0, 4, !dbg !5653
  call void @llvm.dbg.value(metadata i32 %7, metadata !5643, metadata !DIExpression()), !dbg !5646
  call void @llvm.dbg.value(metadata i32 %0, metadata !5644, metadata !DIExpression(DW_OP_constu, 15, DW_OP_and, DW_OP_stack_value)), !dbg !5646
  %8 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5654
  %9 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %8, i32 0, i32 16, i32 %7, i32 0, !dbg !5655
  %10 = load volatile i32, i32* %9, align 4, !dbg !5655
  call void @llvm.dbg.value(metadata i32 %10, metadata !5645, metadata !DIExpression()), !dbg !5646
  %11 = shl nuw nsw i32 %0, 1, !dbg !5656
  %12 = and i32 %11, 30, !dbg !5656
  %13 = shl nuw i32 3, %12, !dbg !5657
  %14 = and i32 %10, %13, !dbg !5658
  call void @llvm.dbg.value(metadata i32 %14, metadata !5645, metadata !DIExpression()), !dbg !5646
  %15 = lshr i32 %14, %12, !dbg !5659
  call void @llvm.dbg.value(metadata i32 %15, metadata !5645, metadata !DIExpression()), !dbg !5646
  %16 = shl i32 %15, 2, !dbg !5660
  %17 = add i32 %16, 4, !dbg !5660
  store i32 %17, i32* %1, align 4, !dbg !5661
  br label %18, !dbg !5662

18:                                               ; preds = %4, %2, %6
  %19 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !5646
  ret i32 %19, !dbg !5663
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_receive_handler(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #0 !dbg !5664 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !5668, metadata !DIExpression()), !dbg !5731
  call void @llvm.dbg.value(metadata i1 %1, metadata !5669, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5731
  %4 = bitcast i32* %3 to i8*, !dbg !5732
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #22, !dbg !5732
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5733
  %6 = load volatile i32, i32* %5, align 4, !dbg !5733
  %7 = icmp eq i32 %6, 2, !dbg !5735
  br i1 %7, label %9, label %8, !dbg !5736

8:                                                ; preds = %2
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.37, i32 0, i32 0), i32 noundef 156, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.uart_receive_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.38, i32 0, i32 0)) #23, !dbg !5737
  unreachable, !dbg !5737

9:                                                ; preds = %2
  %10 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !5739
  %11 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %10, align 4, !dbg !5739
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %11, metadata !5674, metadata !DIExpression()), !dbg !5731
  %12 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #20, !dbg !5740
  call void @llvm.dbg.value(metadata i32 %12, metadata !5670, metadata !DIExpression()), !dbg !5731
  br i1 %1, label %13, label %14, !dbg !5741

13:                                               ; preds = %9
  tail call void @uart_clear_timeout_interrupt(%struct.UART_REGISTER_T* noundef %11) #20, !dbg !5742
  br label %14, !dbg !5745

14:                                               ; preds = %13, %9
  call void @llvm.dbg.value(metadata i32* %3, metadata !5671, metadata !DIExpression(DW_OP_deref)), !dbg !5731
  %15 = call i32 @vdma_get_available_receive_bytes(i32 noundef %12, i32* noundef nonnull %3) #20, !dbg !5746
  call void @llvm.dbg.value(metadata i32 %15, metadata !5730, metadata !DIExpression()), !dbg !5731
  %16 = icmp eq i32 %15, 0, !dbg !5747
  br i1 %16, label %18, label %17, !dbg !5749

17:                                               ; preds = %14
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.37, i32 0, i32 0), i32 noundef 169, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.uart_receive_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.38, i32 0, i32 0)) #23, !dbg !5750
  unreachable, !dbg !5750

18:                                               ; preds = %14
  %19 = load i32, i32* %3, align 4, !dbg !5752
  call void @llvm.dbg.value(metadata i32 %19, metadata !5671, metadata !DIExpression()), !dbg !5731
  %20 = icmp eq i32 %19, 0, !dbg !5754
  br i1 %20, label %43, label %21, !dbg !5755

21:                                               ; preds = %18
  %22 = getelementptr inbounds [4 x %struct.gdma_user_callback_t], [4 x %struct.gdma_user_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 0, !dbg !5756
  %23 = load void (i32, i8*)*, void (i32, i8*)** %22, align 4, !dbg !5756
  call void @llvm.dbg.value(metadata void (i32, i8*)* %23, metadata !5672, metadata !DIExpression()), !dbg !5731
  call void @llvm.dbg.value(metadata i8* undef, metadata !5673, metadata !DIExpression()), !dbg !5731
  %24 = icmp eq void (i32, i8*)* %23, null, !dbg !5757
  br i1 %24, label %25, label %26, !dbg !5759

25:                                               ; preds = %21
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.37, i32 0, i32 0), i32 noundef 179, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.uart_receive_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.38, i32 0, i32 0)) #23, !dbg !5760
  unreachable, !dbg !5760

26:                                               ; preds = %21
  %27 = getelementptr inbounds [4 x %struct.gdma_user_callback_t], [4 x %struct.gdma_user_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 1, !dbg !5762
  %28 = load i8*, i8** %27, align 4, !dbg !5762
  call void @llvm.dbg.value(metadata i8* %28, metadata !5673, metadata !DIExpression()), !dbg !5731
  %29 = call i32 @vdma_disable_interrupt(i32 noundef %12) #20, !dbg !5763
  call void %23(i32 noundef 1, i8* noundef %28) #20, !dbg !5764
  %30 = call i32 @vdma_enable_interrupt(i32 noundef %12) #20, !dbg !5765
  call void @llvm.dbg.value(metadata i32* %3, metadata !5671, metadata !DIExpression(DW_OP_deref)), !dbg !5731
  %31 = call i32 @vdma_get_available_receive_bytes(i32 noundef %12, i32* noundef nonnull %3) #20, !dbg !5766
  call void @llvm.dbg.value(metadata i32 %31, metadata !5730, metadata !DIExpression()), !dbg !5731
  %32 = icmp eq i32 %31, 0, !dbg !5767
  br i1 %32, label %34, label %33, !dbg !5769

33:                                               ; preds = %26
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.37, i32 0, i32 0), i32 noundef 189, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.uart_receive_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.38, i32 0, i32 0)) #23, !dbg !5770
  unreachable, !dbg !5770

34:                                               ; preds = %26
  %35 = load i32, i32* %3, align 4, !dbg !5772
  call void @llvm.dbg.value(metadata i32 %35, metadata !5671, metadata !DIExpression()), !dbg !5731
  %36 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 5, !dbg !5774
  %37 = load i32, i32* %36, align 4, !dbg !5774
  %38 = icmp ult i32 %35, %37, !dbg !5775
  br i1 %38, label %43, label %39, !dbg !5776

39:                                               ; preds = %34
  %40 = call i32 @vdma_disable_interrupt(i32 noundef %12) #20, !dbg !5777
  call void @llvm.dbg.value(metadata i32 %40, metadata !5730, metadata !DIExpression()), !dbg !5731
  %41 = icmp eq i32 %40, 0, !dbg !5779
  br i1 %41, label %43, label %42, !dbg !5781

42:                                               ; preds = %39
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.37, i32 0, i32 0), i32 noundef 195, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.uart_receive_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.38, i32 0, i32 0)) #23, !dbg !5782
  unreachable, !dbg !5782

43:                                               ; preds = %34, %39, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #22, !dbg !5784
  ret void, !dbg !5784
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_send_handler(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #0 !dbg !5785 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !5787, metadata !DIExpression()), !dbg !5795
  call void @llvm.dbg.value(metadata i1 %1, metadata !5788, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5795
  %4 = bitcast i32* %3 to i8*, !dbg !5796
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #22, !dbg !5796
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5797
  %6 = load volatile i32, i32* %5, align 4, !dbg !5797
  %7 = icmp eq i32 %6, 2, !dbg !5799
  br i1 %7, label %9, label %8, !dbg !5800

8:                                                ; preds = %2
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.37, i32 0, i32 0), i32 noundef 222, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.uart_send_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.38, i32 0, i32 0)) #23, !dbg !5801
  unreachable, !dbg !5801

9:                                                ; preds = %2
  %10 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #20, !dbg !5803
  call void @llvm.dbg.value(metadata i32 %10, metadata !5789, metadata !DIExpression()), !dbg !5795
  br i1 %1, label %36, label %11, !dbg !5804

11:                                               ; preds = %9
  %12 = getelementptr inbounds [4 x %struct.gdma_user_callback_t], [4 x %struct.gdma_user_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 0, !dbg !5805
  %13 = load void (i32, i8*)*, void (i32, i8*)** %12, align 4, !dbg !5805
  call void @llvm.dbg.value(metadata void (i32, i8*)* %13, metadata !5793, metadata !DIExpression()), !dbg !5795
  call void @llvm.dbg.value(metadata i8* undef, metadata !5794, metadata !DIExpression()), !dbg !5795
  %14 = icmp eq void (i32, i8*)* %13, null, !dbg !5808
  br i1 %14, label %15, label %16, !dbg !5810

15:                                               ; preds = %11
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.37, i32 0, i32 0), i32 noundef 256, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.uart_send_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.38, i32 0, i32 0)) #23, !dbg !5811
  unreachable, !dbg !5811

16:                                               ; preds = %11
  %17 = getelementptr inbounds [4 x %struct.gdma_user_callback_t], [4 x %struct.gdma_user_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 1, !dbg !5813
  %18 = load i8*, i8** %17, align 4, !dbg !5813
  call void @llvm.dbg.value(metadata i8* %18, metadata !5794, metadata !DIExpression()), !dbg !5795
  %19 = tail call i32 @vdma_disable_interrupt(i32 noundef %10) #20, !dbg !5814
  tail call void %13(i32 noundef 2, i8* noundef %18) #20, !dbg !5815
  %20 = tail call i32 @vdma_enable_interrupt(i32 noundef %10) #20, !dbg !5816
  call void @llvm.dbg.value(metadata i32* %3, metadata !5792, metadata !DIExpression(DW_OP_deref)), !dbg !5795
  %21 = call i32 @vdma_get_available_send_space(i32 noundef %10, i32* noundef nonnull %3) #20, !dbg !5817
  call void @llvm.dbg.value(metadata i32 %21, metadata !5790, metadata !DIExpression()), !dbg !5795
  %22 = icmp eq i32 %21, 0, !dbg !5818
  br i1 %22, label %24, label %23, !dbg !5820

23:                                               ; preds = %16
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.37, i32 0, i32 0), i32 noundef 266, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.uart_send_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.38, i32 0, i32 0)) #23, !dbg !5821
  unreachable, !dbg !5821

24:                                               ; preds = %16
  %25 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 1, !dbg !5823
  %26 = load i32, i32* %25, align 4, !dbg !5823
  %27 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 2, !dbg !5824
  %28 = load i32, i32* %27, align 4, !dbg !5824
  %29 = sub i32 %26, %28, !dbg !5825
  call void @llvm.dbg.value(metadata i32 %29, metadata !5791, metadata !DIExpression()), !dbg !5795
  %30 = load i32, i32* %3, align 4, !dbg !5826
  call void @llvm.dbg.value(metadata i32 %30, metadata !5792, metadata !DIExpression()), !dbg !5795
  %31 = icmp ult i32 %30, %29, !dbg !5828
  br i1 %31, label %36, label %32, !dbg !5829

32:                                               ; preds = %24
  %33 = call i32 @vdma_disable_interrupt(i32 noundef %10) #20, !dbg !5830
  call void @llvm.dbg.value(metadata i32 %33, metadata !5790, metadata !DIExpression()), !dbg !5795
  %34 = icmp eq i32 %33, 0, !dbg !5832
  br i1 %34, label %36, label %35, !dbg !5834

35:                                               ; preds = %32
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.37, i32 0, i32 0), i32 noundef 274, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.uart_send_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.38, i32 0, i32 0)) #23, !dbg !5835
  unreachable, !dbg !5835

36:                                               ; preds = %24, %32, %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #22, !dbg !5837
  ret void, !dbg !5837
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_error_handler(i32 noundef %0) local_unnamed_addr #0 !dbg !5838 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5842, metadata !DIExpression()), !dbg !5846
  %2 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !5847
  %3 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %2, align 4, !dbg !5847
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %3, metadata !5843, metadata !DIExpression()), !dbg !5846
  %4 = tail call i32 @uart_verify_error(%struct.UART_REGISTER_T* noundef %3) #20, !dbg !5848
  %5 = icmp eq i32 %4, 0, !dbg !5848
  br i1 %5, label %6, label %14, !dbg !5850

6:                                                ; preds = %1
  tail call void @uart_purge_fifo(%struct.UART_REGISTER_T* noundef %3, i32 noundef 1) #20, !dbg !5851
  tail call void @uart_purge_fifo(%struct.UART_REGISTER_T* noundef %3, i32 noundef 0) #20, !dbg !5853
  %7 = getelementptr inbounds [4 x %struct.gdma_user_callback_t], [4 x %struct.gdma_user_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 0, !dbg !5854
  %8 = load void (i32, i8*)*, void (i32, i8*)** %7, align 4, !dbg !5854
  call void @llvm.dbg.value(metadata void (i32, i8*)* %8, metadata !5844, metadata !DIExpression()), !dbg !5846
  call void @llvm.dbg.value(metadata i8* undef, metadata !5845, metadata !DIExpression()), !dbg !5846
  %9 = icmp eq void (i32, i8*)* %8, null, !dbg !5855
  br i1 %9, label %10, label %11, !dbg !5857

10:                                               ; preds = %6
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.37, i32 0, i32 0), i32 noundef 296, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.uart_error_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.38, i32 0, i32 0)) #23, !dbg !5858
  unreachable, !dbg !5858

11:                                               ; preds = %6
  %12 = getelementptr inbounds [4 x %struct.gdma_user_callback_t], [4 x %struct.gdma_user_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 1, !dbg !5860
  %13 = load i8*, i8** %12, align 4, !dbg !5860
  call void @llvm.dbg.value(metadata i8* %13, metadata !5845, metadata !DIExpression()), !dbg !5846
  tail call void %8(i32 noundef -1, i8* noundef %13) #20, !dbg !5861
  br label %14, !dbg !5862

14:                                               ; preds = %11, %1
  ret void, !dbg !5863
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_baudrate(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !5864 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5870, metadata !DIExpression()), !dbg !5875
  call void @llvm.dbg.value(metadata i32 %1, metadata !5871, metadata !DIExpression()), !dbg !5875
  %3 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5876
  br i1 %3, label %4, label %16, !dbg !5878

4:                                                ; preds = %2
  %5 = tail call fastcc zeroext i1 @uart_baudrate_is_valid(i32 noundef %1) #21, !dbg !5879
  br i1 %5, label %6, label %16, !dbg !5880

6:                                                ; preds = %4
  %7 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5881
  %8 = load volatile i32, i32* %7, align 4, !dbg !5881
  %9 = icmp eq i32 %8, 0, !dbg !5883
  br i1 %9, label %16, label %10, !dbg !5884

10:                                               ; preds = %6
  %11 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !5885
  call void @llvm.dbg.value(metadata i32 %11, metadata !5873, metadata !DIExpression()), !dbg !5875
  tail call void @restore_interrupt_mask(i32 noundef %11) #20, !dbg !5886
  %12 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !5887
  %13 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %12, align 4, !dbg !5887
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %13, metadata !5874, metadata !DIExpression()), !dbg !5875
  %14 = getelementptr inbounds [13 x i32], [13 x i32]* @g_uart_baudrate_map, i32 0, i32 %1, !dbg !5888
  %15 = load i32, i32* %14, align 4, !dbg !5888
  call void @llvm.dbg.value(metadata i32 %15, metadata !5872, metadata !DIExpression()), !dbg !5875
  tail call void @uart_set_baudrate(%struct.UART_REGISTER_T* noundef %13, i32 noundef %15) #20, !dbg !5889
  br label %16, !dbg !5890

16:                                               ; preds = %6, %2, %4, %10
  %17 = phi i32 [ 0, %10 ], [ -4, %4 ], [ -4, %2 ], [ -2, %6 ], !dbg !5875
  ret i32 %17, !dbg !5891
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) unnamed_addr #10 !dbg !5892 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5896, metadata !DIExpression()), !dbg !5897
  %2 = icmp ult i32 %0, 4, !dbg !5898
  ret i1 %2, !dbg !5899
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @uart_baudrate_is_valid(i32 noundef %0) unnamed_addr #10 !dbg !5900 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5904, metadata !DIExpression()), !dbg !5905
  %2 = icmp ult i32 %0, 13, !dbg !5906
  ret i1 %2, !dbg !5907
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_format(i32 noundef %0, %struct.hal_uart_config_t* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !5908 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5924, metadata !DIExpression()), !dbg !5928
  call void @llvm.dbg.value(metadata %struct.hal_uart_config_t* %1, metadata !5925, metadata !DIExpression()), !dbg !5928
  %3 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5929
  br i1 %3, label %4, label %23, !dbg !5931

4:                                                ; preds = %2
  %5 = tail call fastcc zeroext i1 @uart_config_is_valid(%struct.hal_uart_config_t* noundef %1) #21, !dbg !5932
  br i1 %5, label %6, label %23, !dbg !5933

6:                                                ; preds = %4
  %7 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5934
  %8 = load volatile i32, i32* %7, align 4, !dbg !5934
  %9 = icmp eq i32 %8, 0, !dbg !5936
  br i1 %9, label %23, label %10, !dbg !5937

10:                                               ; preds = %6
  %11 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !5938
  call void @llvm.dbg.value(metadata i32 %11, metadata !5926, metadata !DIExpression()), !dbg !5928
  tail call void @restore_interrupt_mask(i32 noundef %11) #20, !dbg !5939
  %12 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !5940
  %13 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %12, align 4, !dbg !5940
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %13, metadata !5927, metadata !DIExpression()), !dbg !5928
  %14 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 0, !dbg !5941
  %15 = load i32, i32* %14, align 4, !dbg !5941
  %16 = tail call i32 @hal_uart_set_baudrate(i32 noundef %0, i32 noundef %15) #21, !dbg !5942
  %17 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 1, !dbg !5943
  %18 = load i32, i32* %17, align 4, !dbg !5943
  %19 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 2, !dbg !5944
  %20 = load i32, i32* %19, align 4, !dbg !5944
  %21 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 3, !dbg !5945
  %22 = load i32, i32* %21, align 4, !dbg !5945
  tail call void @uart_set_format(%struct.UART_REGISTER_T* noundef %13, i32 noundef %18, i32 noundef %20, i32 noundef %22) #20, !dbg !5946
  br label %23, !dbg !5947

23:                                               ; preds = %6, %2, %4, %10
  %24 = phi i32 [ 0, %10 ], [ -4, %4 ], [ -4, %2 ], [ -2, %6 ], !dbg !5928
  ret i32 %24, !dbg !5948
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @uart_config_is_valid(%struct.hal_uart_config_t* nocapture noundef readonly %0) unnamed_addr #4 !dbg !5949 {
  call void @llvm.dbg.value(metadata %struct.hal_uart_config_t* %0, metadata !5953, metadata !DIExpression()), !dbg !5954
  %2 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %0, i32 0, i32 0, !dbg !5955
  %3 = load i32, i32* %2, align 4, !dbg !5955
  %4 = icmp ult i32 %3, 13, !dbg !5956
  br i1 %4, label %5, label %17, !dbg !5957

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %0, i32 0, i32 1, !dbg !5958
  %7 = load i32, i32* %6, align 4, !dbg !5958
  %8 = icmp ult i32 %7, 4, !dbg !5959
  br i1 %8, label %9, label %17, !dbg !5960

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %0, i32 0, i32 2, !dbg !5961
  %11 = load i32, i32* %10, align 4, !dbg !5961
  %12 = icmp ult i32 %11, 2, !dbg !5962
  br i1 %12, label %13, label %17, !dbg !5963

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %0, i32 0, i32 3, !dbg !5964
  %15 = load i32, i32* %14, align 4, !dbg !5964
  %16 = icmp ult i32 %15, 3, !dbg !5965
  br label %17

17:                                               ; preds = %13, %9, %5, %1
  %18 = phi i1 [ false, %9 ], [ false, %5 ], [ false, %1 ], [ %16, %13 ], !dbg !5954
  ret i1 %18, !dbg !5966
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_init(i32 noundef %0, %struct.hal_uart_config_t* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !5967 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5972, metadata !DIExpression()), !dbg !5979
  call void @llvm.dbg.value(metadata %struct.hal_uart_config_t* %1, metadata !5973, metadata !DIExpression()), !dbg !5979
  %3 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5980
  br i1 %3, label %4, label %41, !dbg !5982

4:                                                ; preds = %2
  %5 = tail call fastcc zeroext i1 @uart_config_is_valid(%struct.hal_uart_config_t* noundef %1) #21, !dbg !5983
  br i1 %5, label %6, label %41, !dbg !5984

6:                                                ; preds = %4
  %7 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !5985
  call void @llvm.dbg.value(metadata i32 %7, metadata !5977, metadata !DIExpression()), !dbg !5979
  %8 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5986
  %9 = load volatile i32, i32* %8, align 4, !dbg !5986
  %10 = icmp eq i32 %9, 0, !dbg !5988
  br i1 %10, label %12, label %11, !dbg !5989

11:                                               ; preds = %6
  tail call void @restore_interrupt_mask(i32 noundef %7) #20, !dbg !5990
  br label %41, !dbg !5992

12:                                               ; preds = %6
  %13 = load i1, i1* @g_uart_global_data_initialized, align 1, !dbg !5993
  br i1 %13, label %22, label %14, !dbg !5995

14:                                               ; preds = %12, %14
  %15 = phi i32 [ %19, %14 ], [ 0, %12 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !5975, metadata !DIExpression()), !dbg !5979
  %16 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %15, !dbg !5996
  store volatile i32 0, i32* %16, align 4, !dbg !6001
  %17 = getelementptr inbounds [4 x %struct.gdma_user_callback_t], [4 x %struct.gdma_user_callback_t]* @g_uart_callback, i32 0, i32 %15, i32 1, !dbg !6002
  store i8* null, i8** %17, align 4, !dbg !6003
  %18 = getelementptr inbounds [4 x %struct.gdma_user_callback_t], [4 x %struct.gdma_user_callback_t]* @g_uart_callback, i32 0, i32 %15, i32 0, !dbg !6004
  store void (i32, i8*)* null, void (i32, i8*)** %18, align 4, !dbg !6005
  %19 = add nuw nsw i32 %15, 1, !dbg !6006
  call void @llvm.dbg.value(metadata i32 %19, metadata !5975, metadata !DIExpression()), !dbg !5979
  %20 = icmp eq i32 %19, 4, !dbg !6007
  br i1 %20, label %21, label %14, !dbg !6008, !llvm.loop !6009

21:                                               ; preds = %14
  store i1 true, i1* @g_uart_global_data_initialized, align 1, !dbg !6011
  br label %22, !dbg !6012

22:                                               ; preds = %21, %12
  store volatile i32 1, i32* %8, align 4, !dbg !6013
  tail call void @restore_interrupt_mask(i32 noundef %7) #20, !dbg !6014
  %23 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_pdn to [0 x i32]*), i32 0, i32 %0, !dbg !6015
  %24 = load i32, i32* %23, align 4, !dbg !6015
  %25 = tail call i32 @hal_clock_enable(i32 noundef %24) #20, !dbg !6016
  call void @llvm.dbg.value(metadata i32 %25, metadata !5978, metadata !DIExpression()), !dbg !5979
  %26 = icmp eq i32 %25, 0, !dbg !6017
  br i1 %26, label %28, label %27, !dbg !6019

27:                                               ; preds = %22
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.37, i32 0, i32 0), i32 noundef 526, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.hal_uart_init, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.38, i32 0, i32 0)) #23, !dbg !6020
  unreachable, !dbg !6020

28:                                               ; preds = %22
  %29 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !6022
  %30 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %29, align 4, !dbg !6022
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %30, metadata !5974, metadata !DIExpression()), !dbg !5979
  tail call void @uart_reset_default_value(%struct.UART_REGISTER_T* noundef %30) #20, !dbg !6023
  %31 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 0, !dbg !6024
  %32 = load i32, i32* %31, align 4, !dbg !6024
  %33 = getelementptr inbounds [13 x i32], [13 x i32]* @g_uart_baudrate_map, i32 0, i32 %32, !dbg !6025
  %34 = load i32, i32* %33, align 4, !dbg !6025
  call void @llvm.dbg.value(metadata i32 %34, metadata !5976, metadata !DIExpression()), !dbg !5979
  tail call void @uart_set_baudrate(%struct.UART_REGISTER_T* noundef %30, i32 noundef %34) #20, !dbg !6026
  %35 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 1, !dbg !6027
  %36 = load i32, i32* %35, align 4, !dbg !6027
  %37 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 2, !dbg !6028
  %38 = load i32, i32* %37, align 4, !dbg !6028
  %39 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 3, !dbg !6029
  %40 = load i32, i32* %39, align 4, !dbg !6029
  tail call void @uart_set_format(%struct.UART_REGISTER_T* noundef %30, i32 noundef %36, i32 noundef %38, i32 noundef %40) #20, !dbg !6030
  tail call void @uart_set_fifo(%struct.UART_REGISTER_T* noundef %30) #20, !dbg !6031
  br label %41, !dbg !6032

41:                                               ; preds = %2, %4, %28, %11
  %42 = phi i32 [ -3, %11 ], [ 0, %28 ], [ -4, %4 ], [ -4, %2 ], !dbg !5979
  ret i32 %42, !dbg !6033
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_deinit(i32 noundef %0) local_unnamed_addr #0 !dbg !6034 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6038, metadata !DIExpression()), !dbg !6045
  %2 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !6046
  br i1 %2, label %3, label %54, !dbg !6048

3:                                                ; preds = %1
  %4 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !6049
  call void @llvm.dbg.value(metadata i32 %4, metadata !6042, metadata !DIExpression()), !dbg !6045
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !6050
  %6 = load volatile i32, i32* %5, align 4, !dbg !6050
  %7 = icmp eq i32 %6, 0, !dbg !6052
  br i1 %7, label %52, label %8, !dbg !6053

8:                                                ; preds = %3
  %9 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !6054
  %10 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %9, align 4, !dbg !6054
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %10, metadata !6039, metadata !DIExpression()), !dbg !6045
  tail call void @uart_query_empty(%struct.UART_REGISTER_T* noundef %10) #20, !dbg !6055
  %11 = load volatile i32, i32* %5, align 4, !dbg !6056
  %12 = icmp eq i32 %11, 2, !dbg !6058
  br i1 %12, label %13, label %43, !dbg !6059

13:                                               ; preds = %8
  %14 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #20, !dbg !6060
  call void @llvm.dbg.value(metadata i32 %14, metadata !6040, metadata !DIExpression()), !dbg !6045
  %15 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #20, !dbg !6062
  call void @llvm.dbg.value(metadata i32 %15, metadata !6041, metadata !DIExpression()), !dbg !6045
  %16 = tail call i32 @vdma_disable_interrupt(i32 noundef %14) #20, !dbg !6063
  call void @llvm.dbg.value(metadata i32 %16, metadata !6043, metadata !DIExpression()), !dbg !6045
  %17 = icmp eq i32 %16, 0, !dbg !6064
  br i1 %17, label %19, label %18, !dbg !6066

18:                                               ; preds = %13
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !6067
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.37, i32 0, i32 0), i32 noundef 575, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.38, i32 0, i32 0)) #23, !dbg !6069
  unreachable, !dbg !6069

19:                                               ; preds = %13
  %20 = tail call i32 @vdma_disable_interrupt(i32 noundef %15) #20, !dbg !6070
  call void @llvm.dbg.value(metadata i32 %20, metadata !6043, metadata !DIExpression()), !dbg !6045
  %21 = icmp eq i32 %20, 0, !dbg !6071
  br i1 %21, label %23, label %22, !dbg !6073

22:                                               ; preds = %19
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !6074
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.37, i32 0, i32 0), i32 noundef 581, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.38, i32 0, i32 0)) #23, !dbg !6076
  unreachable, !dbg !6076

23:                                               ; preds = %19
  %24 = tail call i32 @vdma_stop(i32 noundef %14) #20, !dbg !6077
  call void @llvm.dbg.value(metadata i32 %24, metadata !6043, metadata !DIExpression()), !dbg !6045
  %25 = icmp eq i32 %24, 0, !dbg !6078
  br i1 %25, label %27, label %26, !dbg !6080

26:                                               ; preds = %23
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !6081
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.37, i32 0, i32 0), i32 noundef 587, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.38, i32 0, i32 0)) #23, !dbg !6083
  unreachable, !dbg !6083

27:                                               ; preds = %23
  %28 = tail call i32 @vdma_stop(i32 noundef %15) #20, !dbg !6084
  call void @llvm.dbg.value(metadata i32 %28, metadata !6043, metadata !DIExpression()), !dbg !6045
  %29 = icmp eq i32 %28, 0, !dbg !6085
  br i1 %29, label %31, label %30, !dbg !6087

30:                                               ; preds = %27
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !6088
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.37, i32 0, i32 0), i32 noundef 593, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.38, i32 0, i32 0)) #23, !dbg !6090
  unreachable, !dbg !6090

31:                                               ; preds = %27
  %32 = tail call i32 @vdma_deinit(i32 noundef %14) #20, !dbg !6091
  call void @llvm.dbg.value(metadata i32 %32, metadata !6043, metadata !DIExpression()), !dbg !6045
  %33 = icmp eq i32 %32, 0, !dbg !6092
  br i1 %33, label %35, label %34, !dbg !6094

34:                                               ; preds = %31
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !6095
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.37, i32 0, i32 0), i32 noundef 599, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.38, i32 0, i32 0)) #23, !dbg !6097
  unreachable, !dbg !6097

35:                                               ; preds = %31
  %36 = tail call i32 @vdma_deinit(i32 noundef %15) #20, !dbg !6098
  call void @llvm.dbg.value(metadata i32 %36, metadata !6043, metadata !DIExpression()), !dbg !6045
  %37 = icmp eq i32 %36, 0, !dbg !6099
  br i1 %37, label %39, label %38, !dbg !6101

38:                                               ; preds = %35
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !6102
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.37, i32 0, i32 0), i32 noundef 605, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.38, i32 0, i32 0)) #23, !dbg !6104
  unreachable, !dbg !6104

39:                                               ; preds = %35
  %40 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_irq_num to [0 x i32]*), i32 0, i32 %0, !dbg !6105
  %41 = load i32, i32* %40, align 4, !dbg !6105
  %42 = tail call i32 @hal_nvic_disable_irq(i32 noundef %41) #20, !dbg !6106
  br label %43, !dbg !6107

43:                                               ; preds = %39, %8
  tail call void @uart_reset_default_value(%struct.UART_REGISTER_T* noundef %10) #20, !dbg !6108
  %44 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_pdn to [0 x i32]*), i32 0, i32 %0, !dbg !6109
  %45 = load i32, i32* %44, align 4, !dbg !6109
  %46 = tail call i32 @hal_clock_disable(i32 noundef %45) #20, !dbg !6110
  call void @llvm.dbg.value(metadata i32 %46, metadata !6044, metadata !DIExpression()), !dbg !6045
  %47 = icmp eq i32 %46, 0, !dbg !6111
  br i1 %47, label %49, label %48, !dbg !6113

48:                                               ; preds = %43
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !6114
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.37, i32 0, i32 0), i32 noundef 614, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.38, i32 0, i32 0)) #23, !dbg !6116
  unreachable, !dbg !6116

49:                                               ; preds = %43
  %50 = getelementptr inbounds [4 x %struct.gdma_user_callback_t], [4 x %struct.gdma_user_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 0, !dbg !6117
  store void (i32, i8*)* null, void (i32, i8*)** %50, align 4, !dbg !6118
  %51 = getelementptr inbounds [4 x %struct.gdma_user_callback_t], [4 x %struct.gdma_user_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 1, !dbg !6119
  store i8* null, i8** %51, align 4, !dbg !6120
  store volatile i32 0, i32* %5, align 4, !dbg !6121
  br label %52, !dbg !6122

52:                                               ; preds = %3, %49
  %53 = phi i32 [ 0, %49 ], [ -2, %3 ]
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !6045
  br label %54, !dbg !6123

54:                                               ; preds = %52, %1
  %55 = phi i32 [ -4, %1 ], [ %53, %52 ], !dbg !6045
  ret i32 %55, !dbg !6123
}

; Function Attrs: noinline nounwind optsize
define dso_local void @hal_uart_put_char(i32 noundef %0, i8 noundef zeroext %1) local_unnamed_addr #0 !dbg !6124 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6128, metadata !DIExpression()), !dbg !6131
  call void @llvm.dbg.value(metadata i8 %1, metadata !6129, metadata !DIExpression()), !dbg !6131
  %3 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !6132
  br i1 %3, label %4, label %11, !dbg !6134

4:                                                ; preds = %2
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !6135
  %6 = load volatile i32, i32* %5, align 4, !dbg !6135
  %7 = icmp eq i32 %6, 1, !dbg !6137
  br i1 %7, label %8, label %11, !dbg !6138

8:                                                ; preds = %4
  %9 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !6139
  %10 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %9, align 4, !dbg !6139
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %10, metadata !6130, metadata !DIExpression()), !dbg !6131
  tail call void @uart_put_char_block(%struct.UART_REGISTER_T* noundef %10, i8 noundef zeroext %1) #20, !dbg !6140
  br label %11, !dbg !6141

11:                                               ; preds = %4, %2, %8
  ret void, !dbg !6141
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_send_polling(i32 noundef %0, i8* noundef readonly %1, i32 noundef %2) local_unnamed_addr #0 !dbg !6142 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6146, metadata !DIExpression()), !dbg !6150
  call void @llvm.dbg.value(metadata i8* %1, metadata !6147, metadata !DIExpression()), !dbg !6150
  call void @llvm.dbg.value(metadata i32 %2, metadata !6148, metadata !DIExpression()), !dbg !6150
  call void @llvm.dbg.value(metadata i32 0, metadata !6149, metadata !DIExpression()), !dbg !6150
  %4 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !6151
  %5 = icmp ne i8* %1, null
  %6 = and i1 %5, %4, !dbg !6153
  br i1 %6, label %7, label %20, !dbg !6153

7:                                                ; preds = %3
  %8 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !6154
  %9 = load volatile i32, i32* %8, align 4, !dbg !6154
  %10 = icmp ne i32 %9, 1, !dbg !6156
  %11 = icmp eq i32 %2, 0
  %12 = or i1 %10, %11, !dbg !6157
  call void @llvm.dbg.value(metadata i32 0, metadata !6149, metadata !DIExpression()), !dbg !6150
  call void @llvm.dbg.value(metadata i8* %1, metadata !6147, metadata !DIExpression()), !dbg !6150
  br i1 %12, label %20, label %13, !dbg !6157

13:                                               ; preds = %7, %13
  %14 = phi i32 [ %18, %13 ], [ 0, %7 ]
  %15 = phi i8* [ %17, %13 ], [ %1, %7 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !6149, metadata !DIExpression()), !dbg !6150
  call void @llvm.dbg.value(metadata i8* %15, metadata !6147, metadata !DIExpression()), !dbg !6150
  %16 = load i8, i8* %15, align 1, !dbg !6158
  tail call void @hal_uart_put_char(i32 noundef %0, i8 noundef zeroext %16) #21, !dbg !6162
  %17 = getelementptr inbounds i8, i8* %15, i32 1, !dbg !6163
  call void @llvm.dbg.value(metadata i8* %17, metadata !6147, metadata !DIExpression()), !dbg !6150
  %18 = add nuw i32 %14, 1, !dbg !6164
  call void @llvm.dbg.value(metadata i32 %18, metadata !6149, metadata !DIExpression()), !dbg !6150
  %19 = icmp eq i32 %18, %2, !dbg !6165
  br i1 %19, label %20, label %13, !dbg !6166, !llvm.loop !6167

20:                                               ; preds = %13, %7, %3
  %21 = phi i32 [ 0, %3 ], [ 0, %7 ], [ %2, %13 ], !dbg !6150
  ret i32 %21, !dbg !6169
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_send_dma(i32 noundef %0, i8* noundef readonly %1, i32 noundef %2) local_unnamed_addr #0 !dbg !6170 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6172, metadata !DIExpression()), !dbg !6180
  call void @llvm.dbg.value(metadata i8* %1, metadata !6173, metadata !DIExpression()), !dbg !6180
  call void @llvm.dbg.value(metadata i32 %2, metadata !6174, metadata !DIExpression()), !dbg !6180
  %5 = bitcast i32* %4 to i8*, !dbg !6181
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #22, !dbg !6181
  %6 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !6182
  %7 = xor i1 %6, true, !dbg !6184
  %8 = icmp eq i8* %1, null
  %9 = or i1 %8, %7, !dbg !6184
  %10 = icmp eq i32 %2, 0
  %11 = or i1 %10, %9, !dbg !6184
  br i1 %11, label %45, label %12, !dbg !6184

12:                                               ; preds = %3
  %13 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !6185
  %14 = load volatile i32, i32* %13, align 4, !dbg !6185
  %15 = icmp eq i32 %14, 2, !dbg !6187
  br i1 %15, label %16, label %45, !dbg !6188

16:                                               ; preds = %12
  %17 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #20, !dbg !6189
  call void @llvm.dbg.value(metadata i32 %17, metadata !6175, metadata !DIExpression()), !dbg !6180
  call void @llvm.dbg.value(metadata i32* %4, metadata !6178, metadata !DIExpression(DW_OP_deref)), !dbg !6180
  %18 = call i32 @vdma_get_available_send_space(i32 noundef %17, i32* noundef nonnull %4) #20, !dbg !6190
  call void @llvm.dbg.value(metadata i32 %18, metadata !6179, metadata !DIExpression()), !dbg !6180
  %19 = icmp eq i32 %18, 0, !dbg !6191
  br i1 %19, label %21, label %20, !dbg !6193

20:                                               ; preds = %16
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.37, i32 0, i32 0), i32 noundef 708, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.hal_uart_send_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.38, i32 0, i32 0)) #23, !dbg !6194
  unreachable, !dbg !6194

21:                                               ; preds = %16
  %22 = load i32, i32* %4, align 4, !dbg !6196
  call void @llvm.dbg.value(metadata i32 %22, metadata !6178, metadata !DIExpression()), !dbg !6180
  %23 = icmp ult i32 %22, %2, !dbg !6198
  %24 = select i1 %23, i32 %22, i32 %2
  call void @llvm.dbg.value(metadata i32 %24, metadata !6177, metadata !DIExpression()), !dbg !6180
  call void @llvm.dbg.value(metadata i32 0, metadata !6176, metadata !DIExpression()), !dbg !6180
  %25 = icmp eq i32 %24, 0, !dbg !6199
  br i1 %25, label %38, label %28, !dbg !6202

26:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !6176, metadata !DIExpression()), !dbg !6180
  %27 = icmp eq i32 %34, %24, !dbg !6199
  br i1 %27, label %36, label %28, !dbg !6202, !llvm.loop !6203

28:                                               ; preds = %21, %26
  %29 = phi i32 [ %34, %26 ], [ 0, %21 ]
  call void @llvm.dbg.value(metadata i32 %29, metadata !6176, metadata !DIExpression()), !dbg !6180
  %30 = getelementptr inbounds i8, i8* %1, i32 %29, !dbg !6205
  %31 = load i8, i8* %30, align 1, !dbg !6205
  %32 = call i32 @vdma_push_data(i32 noundef %17, i8 noundef zeroext %31) #20, !dbg !6207
  call void @llvm.dbg.value(metadata i32 %32, metadata !6179, metadata !DIExpression()), !dbg !6180
  %33 = icmp eq i32 %32, 0, !dbg !6208
  %34 = add nuw i32 %29, 1, !dbg !6210
  call void @llvm.dbg.value(metadata i32 %34, metadata !6176, metadata !DIExpression()), !dbg !6180
  br i1 %33, label %26, label %35, !dbg !6211

35:                                               ; preds = %28
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.37, i32 0, i32 0), i32 noundef 720, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.hal_uart_send_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.38, i32 0, i32 0)) #23, !dbg !6212
  unreachable, !dbg !6212

36:                                               ; preds = %26
  %37 = load i32, i32* %4, align 4, !dbg !6214
  br label %38, !dbg !6214

38:                                               ; preds = %36, %21
  %39 = phi i32 [ %37, %36 ], [ %22, %21 ], !dbg !6214
  call void @llvm.dbg.value(metadata i32 %39, metadata !6178, metadata !DIExpression()), !dbg !6180
  %40 = icmp eq i32 %24, %39, !dbg !6216
  br i1 %40, label %41, label %45, !dbg !6217

41:                                               ; preds = %38
  %42 = call i32 @vdma_enable_interrupt(i32 noundef %17) #20, !dbg !6218
  call void @llvm.dbg.value(metadata i32 %42, metadata !6179, metadata !DIExpression()), !dbg !6180
  %43 = icmp eq i32 %42, 0, !dbg !6220
  br i1 %43, label %45, label %44, !dbg !6222

44:                                               ; preds = %41
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.37, i32 0, i32 0), i32 noundef 731, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.hal_uart_send_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.38, i32 0, i32 0)) #23, !dbg !6223
  unreachable, !dbg !6223

45:                                               ; preds = %38, %41, %12, %3
  %46 = phi i32 [ 0, %3 ], [ 0, %12 ], [ %24, %41 ], [ %24, %38 ], !dbg !6180
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #22, !dbg !6225
  ret i32 %46, !dbg !6225
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i8 @hal_uart_get_char(i32 noundef %0) local_unnamed_addr #0 !dbg !6226 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6230, metadata !DIExpression()), !dbg !6233
  %2 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !6234
  br i1 %2, label %3, label %11, !dbg !6236

3:                                                ; preds = %1
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !6237
  %5 = load volatile i32, i32* %4, align 4, !dbg !6237
  %6 = icmp eq i32 %5, 1, !dbg !6239
  br i1 %6, label %7, label %11, !dbg !6240

7:                                                ; preds = %3
  %8 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !6241
  %9 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %8, align 4, !dbg !6241
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %9, metadata !6232, metadata !DIExpression()), !dbg !6233
  %10 = tail call zeroext i8 @uart_get_char_block(%struct.UART_REGISTER_T* noundef %9) #20, !dbg !6242
  call void @llvm.dbg.value(metadata i8 %10, metadata !6231, metadata !DIExpression()), !dbg !6233
  br label %11, !dbg !6243

11:                                               ; preds = %3, %1, %7
  %12 = phi i8 [ %10, %7 ], [ 0, %1 ], [ 0, %3 ], !dbg !6233
  ret i8 %12, !dbg !6244
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_get_char_unblocking(i32 noundef %0) local_unnamed_addr #0 !dbg !6245 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6249, metadata !DIExpression()), !dbg !6252
  %2 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !6253
  br i1 %2, label %3, label %11, !dbg !6255

3:                                                ; preds = %1
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !6256
  %5 = load volatile i32, i32* %4, align 4, !dbg !6256
  %6 = icmp eq i32 %5, 1, !dbg !6258
  br i1 %6, label %7, label %11, !dbg !6259

7:                                                ; preds = %3
  %8 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !6260
  %9 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %8, align 4, !dbg !6260
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %9, metadata !6251, metadata !DIExpression()), !dbg !6252
  %10 = tail call i32 @uart_get_char_unblocking(%struct.UART_REGISTER_T* noundef %9) #20, !dbg !6261
  call void @llvm.dbg.value(metadata i32 %10, metadata !6250, metadata !DIExpression()), !dbg !6252
  br label %11, !dbg !6262

11:                                               ; preds = %3, %1, %7
  %12 = phi i32 [ %10, %7 ], [ 0, %1 ], [ 0, %3 ], !dbg !6252
  ret i32 %12, !dbg !6263
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_receive_polling(i32 noundef %0, i8* noundef writeonly %1, i32 noundef %2) local_unnamed_addr #0 !dbg !6264 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6268, metadata !DIExpression()), !dbg !6273
  call void @llvm.dbg.value(metadata i8* %1, metadata !6269, metadata !DIExpression()), !dbg !6273
  call void @llvm.dbg.value(metadata i32 %2, metadata !6270, metadata !DIExpression()), !dbg !6273
  call void @llvm.dbg.value(metadata i8* %1, metadata !6272, metadata !DIExpression()), !dbg !6273
  %4 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !6274
  %5 = icmp ne i8* %1, null
  %6 = and i1 %5, %4, !dbg !6276
  br i1 %6, label %7, label %19, !dbg !6276

7:                                                ; preds = %3
  %8 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !6277
  %9 = load volatile i32, i32* %8, align 4, !dbg !6277
  %10 = icmp ne i32 %9, 1, !dbg !6279
  %11 = icmp eq i32 %2, 0
  %12 = or i1 %10, %11, !dbg !6280
  call void @llvm.dbg.value(metadata i32 0, metadata !6271, metadata !DIExpression()), !dbg !6273
  br i1 %12, label %19, label %13, !dbg !6280

13:                                               ; preds = %7, %13
  %14 = phi i32 [ %17, %13 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !6271, metadata !DIExpression()), !dbg !6273
  %15 = tail call zeroext i8 @hal_uart_get_char(i32 noundef %0) #21, !dbg !6281
  %16 = getelementptr inbounds i8, i8* %1, i32 %14, !dbg !6285
  store i8 %15, i8* %16, align 1, !dbg !6286
  %17 = add nuw i32 %14, 1, !dbg !6287
  call void @llvm.dbg.value(metadata i32 %17, metadata !6271, metadata !DIExpression()), !dbg !6273
  %18 = icmp eq i32 %17, %2, !dbg !6288
  br i1 %18, label %19, label %13, !dbg !6289, !llvm.loop !6290

19:                                               ; preds = %13, %7, %3
  %20 = phi i32 [ 0, %3 ], [ 0, %7 ], [ %2, %13 ], !dbg !6273
  ret i32 %20, !dbg !6292
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_receive_dma(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !6293 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6295, metadata !DIExpression()), !dbg !6303
  call void @llvm.dbg.value(metadata i8* %1, metadata !6296, metadata !DIExpression()), !dbg !6303
  call void @llvm.dbg.value(metadata i32 %2, metadata !6297, metadata !DIExpression()), !dbg !6303
  %5 = bitcast i32* %4 to i8*, !dbg !6304
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #22, !dbg !6304
  %6 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !6305
  %7 = xor i1 %6, true, !dbg !6307
  %8 = icmp eq i8* %1, null
  %9 = or i1 %8, %7, !dbg !6307
  %10 = icmp eq i32 %2, 0
  %11 = or i1 %10, %9, !dbg !6307
  br i1 %11, label %44, label %12, !dbg !6307

12:                                               ; preds = %3
  %13 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !6308
  %14 = load volatile i32, i32* %13, align 4, !dbg !6308
  %15 = icmp eq i32 %14, 2, !dbg !6310
  br i1 %15, label %16, label %44, !dbg !6311

16:                                               ; preds = %12
  %17 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #20, !dbg !6312
  call void @llvm.dbg.value(metadata i32 %17, metadata !6298, metadata !DIExpression()), !dbg !6303
  call void @llvm.dbg.value(metadata i32* %4, metadata !6300, metadata !DIExpression(DW_OP_deref)), !dbg !6303
  %18 = call i32 @vdma_get_available_receive_bytes(i32 noundef %17, i32* noundef nonnull %4) #20, !dbg !6313
  call void @llvm.dbg.value(metadata i32 %18, metadata !6302, metadata !DIExpression()), !dbg !6303
  %19 = icmp eq i32 %18, 0, !dbg !6314
  br i1 %19, label %21, label %20, !dbg !6316

20:                                               ; preds = %16
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.37, i32 0, i32 0), i32 noundef 821, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.hal_uart_receive_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.38, i32 0, i32 0)) #23, !dbg !6317
  unreachable, !dbg !6317

21:                                               ; preds = %16
  %22 = load i32, i32* %4, align 4, !dbg !6319
  call void @llvm.dbg.value(metadata i32 %22, metadata !6300, metadata !DIExpression()), !dbg !6303
  %23 = icmp ult i32 %22, %2, !dbg !6321
  %24 = select i1 %23, i32 %22, i32 %2
  call void @llvm.dbg.value(metadata i32 %24, metadata !6299, metadata !DIExpression()), !dbg !6303
  call void @llvm.dbg.value(metadata i32 0, metadata !6301, metadata !DIExpression()), !dbg !6303
  %25 = icmp eq i32 %24, 0, !dbg !6322
  br i1 %25, label %37, label %28, !dbg !6325

26:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %33, metadata !6301, metadata !DIExpression()), !dbg !6303
  %27 = icmp eq i32 %33, %24, !dbg !6322
  br i1 %27, label %35, label %28, !dbg !6325, !llvm.loop !6326

28:                                               ; preds = %21, %26
  %29 = phi i32 [ %33, %26 ], [ 0, %21 ]
  call void @llvm.dbg.value(metadata i32 %29, metadata !6301, metadata !DIExpression()), !dbg !6303
  %30 = getelementptr inbounds i8, i8* %1, i32 %29, !dbg !6328
  %31 = call i32 @vdma_pop_data(i32 noundef %17, i8* noundef %30) #20, !dbg !6330
  call void @llvm.dbg.value(metadata i32 %31, metadata !6302, metadata !DIExpression()), !dbg !6303
  %32 = icmp eq i32 %31, 0, !dbg !6331
  %33 = add nuw i32 %29, 1, !dbg !6333
  call void @llvm.dbg.value(metadata i32 %33, metadata !6301, metadata !DIExpression()), !dbg !6303
  br i1 %32, label %26, label %34, !dbg !6334

34:                                               ; preds = %28
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.37, i32 0, i32 0), i32 noundef 833, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.hal_uart_receive_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.38, i32 0, i32 0)) #23, !dbg !6335
  unreachable, !dbg !6335

35:                                               ; preds = %26
  %36 = load i32, i32* %4, align 4, !dbg !6337
  br label %37, !dbg !6337

37:                                               ; preds = %35, %21
  %38 = phi i32 [ %36, %35 ], [ %22, %21 ], !dbg !6337
  call void @llvm.dbg.value(metadata i32 %38, metadata !6300, metadata !DIExpression()), !dbg !6303
  %39 = icmp eq i32 %24, %38, !dbg !6339
  br i1 %39, label %40, label %44, !dbg !6340

40:                                               ; preds = %37
  %41 = call i32 @vdma_enable_interrupt(i32 noundef %17) #20, !dbg !6341
  call void @llvm.dbg.value(metadata i32 %41, metadata !6302, metadata !DIExpression()), !dbg !6303
  %42 = icmp eq i32 %41, 0, !dbg !6343
  br i1 %42, label %44, label %43, !dbg !6345

43:                                               ; preds = %40
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.37, i32 0, i32 0), i32 noundef 844, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.hal_uart_receive_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.38, i32 0, i32 0)) #23, !dbg !6346
  unreachable, !dbg !6346

44:                                               ; preds = %37, %40, %12, %3
  %45 = phi i32 [ 0, %3 ], [ 0, %12 ], [ %24, %40 ], [ %24, %37 ], !dbg !6303
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #22, !dbg !6348
  ret i32 %45, !dbg !6348
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_register_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !6349 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6353, metadata !DIExpression()), !dbg !6361
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !6354, metadata !DIExpression()), !dbg !6361
  call void @llvm.dbg.value(metadata i8* %2, metadata !6355, metadata !DIExpression()), !dbg !6361
  %4 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !6362
  %5 = icmp ne void (i32, i8*)* %1, null
  %6 = and i1 %5, %4, !dbg !6364
  br i1 %6, label %7, label %39, !dbg !6364

7:                                                ; preds = %3
  %8 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !6365
  call void @llvm.dbg.value(metadata i32 %8, metadata !6358, metadata !DIExpression()), !dbg !6361
  %9 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !6366
  %10 = load volatile i32, i32* %9, align 4, !dbg !6366
  %11 = icmp eq i32 %10, 1, !dbg !6368
  br i1 %11, label %12, label %37, !dbg !6369

12:                                               ; preds = %7
  %13 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #20, !dbg !6370
  call void @llvm.dbg.value(metadata i32 %13, metadata !6356, metadata !DIExpression()), !dbg !6361
  %14 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #20, !dbg !6371
  call void @llvm.dbg.value(metadata i32 %14, metadata !6357, metadata !DIExpression()), !dbg !6361
  %15 = getelementptr inbounds [4 x %struct.gdma_user_callback_t], [4 x %struct.gdma_user_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 0, !dbg !6372
  store void (i32, i8*)* %1, void (i32, i8*)** %15, align 4, !dbg !6373
  %16 = getelementptr inbounds [4 x %struct.gdma_user_callback_t], [4 x %struct.gdma_user_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 1, !dbg !6374
  store i8* %2, i8** %16, align 4, !dbg !6375
  %17 = shl i32 %0, 1, !dbg !6376
  %18 = getelementptr inbounds [8 x %struct.uart_dma_callback_data_t], [8 x %struct.uart_dma_callback_data_t]* @g_uart_dma_callback_data, i32 0, i32 %17, !dbg !6377
  tail call void @uart_dma_channel_to_callback_data(i32 noundef %13, %struct.uart_dma_callback_data_t* noundef nonnull %18) #20, !dbg !6378
  %19 = getelementptr %struct.uart_dma_callback_data_t, %struct.uart_dma_callback_data_t* %18, i32 0, i32 0, !dbg !6379
  %20 = tail call i32 @vdma_register_callback(i32 noundef %13, void (i32, i8*)* noundef nonnull @uart_dma_callback_handler, i8* noundef nonnull %19) #20, !dbg !6380
  call void @llvm.dbg.value(metadata i32 %20, metadata !6359, metadata !DIExpression()), !dbg !6361
  %21 = icmp eq i32 %20, 0, !dbg !6381
  br i1 %21, label %23, label %22, !dbg !6383

22:                                               ; preds = %12
  tail call void @restore_interrupt_mask(i32 noundef %8) #20, !dbg !6384
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.37, i32 0, i32 0), i32 noundef 921, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.hal_uart_register_callback, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.38, i32 0, i32 0)) #23, !dbg !6386
  unreachable, !dbg !6386

23:                                               ; preds = %12
  %24 = or i32 %17, 1, !dbg !6387
  %25 = getelementptr inbounds [8 x %struct.uart_dma_callback_data_t], [8 x %struct.uart_dma_callback_data_t]* @g_uart_dma_callback_data, i32 0, i32 %24, !dbg !6388
  tail call void @uart_dma_channel_to_callback_data(i32 noundef %14, %struct.uart_dma_callback_data_t* noundef nonnull %25) #20, !dbg !6389
  %26 = getelementptr %struct.uart_dma_callback_data_t, %struct.uart_dma_callback_data_t* %25, i32 0, i32 0, !dbg !6390
  %27 = tail call i32 @vdma_register_callback(i32 noundef %14, void (i32, i8*)* noundef nonnull @uart_dma_callback_handler, i8* noundef nonnull %26) #20, !dbg !6391
  call void @llvm.dbg.value(metadata i32 %27, metadata !6359, metadata !DIExpression()), !dbg !6361
  %28 = icmp eq i32 %27, 0, !dbg !6392
  br i1 %28, label %30, label %29, !dbg !6394

29:                                               ; preds = %23
  tail call void @restore_interrupt_mask(i32 noundef %8) #20, !dbg !6395
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.37, i32 0, i32 0), i32 noundef 928, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.hal_uart_register_callback, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.38, i32 0, i32 0)) #23, !dbg !6397
  unreachable, !dbg !6397

30:                                               ; preds = %23
  %31 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_irq_num to [0 x i32]*), i32 0, i32 %0, !dbg !6398
  %32 = load i32, i32* %31, align 4, !dbg !6398
  %33 = tail call i32 @hal_nvic_register_isr_handler(i32 noundef %32, void (i32)* noundef nonnull @uart_interrupt_handler) #20, !dbg !6399
  call void @llvm.dbg.value(metadata i32 %33, metadata !6360, metadata !DIExpression()), !dbg !6361
  %34 = icmp eq i32 %33, 0, !dbg !6400
  br i1 %34, label %36, label %35, !dbg !6402

35:                                               ; preds = %30
  tail call void @restore_interrupt_mask(i32 noundef %8) #20, !dbg !6403
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.37, i32 0, i32 0), i32 noundef 934, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.hal_uart_register_callback, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.38, i32 0, i32 0)) #23, !dbg !6405
  unreachable, !dbg !6405

36:                                               ; preds = %30
  tail call fastcc void @uart_start_dma_transmission(i32 noundef %0) #21, !dbg !6406
  store volatile i32 2, i32* %9, align 4, !dbg !6407
  br label %37, !dbg !6408

37:                                               ; preds = %7, %36
  %38 = phi i32 [ 0, %36 ], [ -2, %7 ]
  tail call void @restore_interrupt_mask(i32 noundef %8) #20, !dbg !6361
  br label %39, !dbg !6409

39:                                               ; preds = %37, %3
  %40 = phi i32 [ -4, %3 ], [ %38, %37 ], !dbg !6361
  ret i32 %40, !dbg !6409
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_dma_callback_handler(i32 noundef %0, i8* nocapture noundef readonly %1) #0 !dbg !6410 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6412, metadata !DIExpression()), !dbg !6415
  call void @llvm.dbg.value(metadata i8* %1, metadata !6413, metadata !DIExpression()), !dbg !6415
  call void @llvm.dbg.value(metadata i8* %1, metadata !6414, metadata !DIExpression()), !dbg !6415
  %3 = load i8, i8* %1, align 4, !dbg !6416, !range !2809
  %4 = icmp eq i8 %3, 0, !dbg !6416
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !6418
  %6 = bitcast i8* %5 to i32*, !dbg !6418
  %7 = load i32, i32* %6, align 4, !dbg !6418
  br i1 %4, label %9, label %8, !dbg !6419

8:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !6414, metadata !DIExpression()), !dbg !6415
  tail call void @uart_receive_handler(i32 noundef %7, i1 noundef zeroext false) #21, !dbg !6420
  br label %10, !dbg !6422

9:                                                ; preds = %2
  tail call void @uart_send_handler(i32 noundef %7, i1 noundef zeroext false) #21, !dbg !6423
  br label %10

10:                                               ; preds = %9, %8
  ret void, !dbg !6425
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_start_dma_transmission(i32 noundef %0) unnamed_addr #0 !dbg !6426 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6428, metadata !DIExpression()), !dbg !6433
  %2 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !6434
  %3 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %2, align 4, !dbg !6434
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %3, metadata !6429, metadata !DIExpression()), !dbg !6433
  %4 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #20, !dbg !6435
  call void @llvm.dbg.value(metadata i32 %4, metadata !6430, metadata !DIExpression()), !dbg !6433
  %5 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #20, !dbg !6436
  call void @llvm.dbg.value(metadata i32 %5, metadata !6431, metadata !DIExpression()), !dbg !6433
  tail call void @uart_unmask_receive_interrupt(%struct.UART_REGISTER_T* noundef %3) #20, !dbg !6437
  %6 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_irq_num to [0 x i32]*), i32 0, i32 %0, !dbg !6438
  %7 = load i32, i32* %6, align 4, !dbg !6438
  %8 = tail call i32 @hal_nvic_enable_irq(i32 noundef %7) #20, !dbg !6439
  %9 = tail call i32 @vdma_enable_interrupt(i32 noundef %4) #20, !dbg !6440
  call void @llvm.dbg.value(metadata i32 %9, metadata !6432, metadata !DIExpression()), !dbg !6433
  %10 = icmp eq i32 %9, 0, !dbg !6441
  br i1 %10, label %12, label %11, !dbg !6443

11:                                               ; preds = %1
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.37, i32 0, i32 0), i32 noundef 870, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.uart_start_dma_transmission, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.38, i32 0, i32 0)) #23, !dbg !6444
  unreachable, !dbg !6444

12:                                               ; preds = %1
  %13 = tail call i32 @vdma_enable_interrupt(i32 noundef %5) #20, !dbg !6446
  call void @llvm.dbg.value(metadata i32 %13, metadata !6432, metadata !DIExpression()), !dbg !6433
  %14 = icmp eq i32 %13, 0, !dbg !6447
  br i1 %14, label %16, label %15, !dbg !6449

15:                                               ; preds = %12
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.37, i32 0, i32 0), i32 noundef 875, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.uart_start_dma_transmission, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.38, i32 0, i32 0)) #23, !dbg !6450
  unreachable, !dbg !6450

16:                                               ; preds = %12
  %17 = tail call i32 @vdma_start(i32 noundef %4) #20, !dbg !6452
  call void @llvm.dbg.value(metadata i32 %17, metadata !6432, metadata !DIExpression()), !dbg !6433
  %18 = icmp eq i32 %17, 0, !dbg !6453
  br i1 %18, label %20, label %19, !dbg !6455

19:                                               ; preds = %16
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.37, i32 0, i32 0), i32 noundef 880, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.uart_start_dma_transmission, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.38, i32 0, i32 0)) #23, !dbg !6456
  unreachable, !dbg !6456

20:                                               ; preds = %16
  %21 = tail call i32 @vdma_start(i32 noundef %5) #20, !dbg !6458
  call void @llvm.dbg.value(metadata i32 %21, metadata !6432, metadata !DIExpression()), !dbg !6433
  %22 = icmp eq i32 %21, 0, !dbg !6459
  br i1 %22, label %24, label %23, !dbg !6461

23:                                               ; preds = %20
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.37, i32 0, i32 0), i32 noundef 885, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.uart_start_dma_transmission, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.38, i32 0, i32 0)) #23, !dbg !6462
  unreachable, !dbg !6462

24:                                               ; preds = %20
  tail call void @uart_enable_dma(%struct.UART_REGISTER_T* noundef %3) #20, !dbg !6464
  ret void, !dbg !6465
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_get_available_send_space(i32 noundef %0) local_unnamed_addr #0 !dbg !6466 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6468, metadata !DIExpression()), !dbg !6472
  %3 = bitcast i32* %2 to i8*, !dbg !6473
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #22, !dbg !6473
  %4 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !6474
  br i1 %4, label %5, label %16, !dbg !6476

5:                                                ; preds = %1
  %6 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !6477
  %7 = load volatile i32, i32* %6, align 4, !dbg !6477
  %8 = icmp eq i32 %7, 2, !dbg !6479
  br i1 %8, label %9, label %16, !dbg !6480

9:                                                ; preds = %5
  %10 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #20, !dbg !6481
  call void @llvm.dbg.value(metadata i32 %10, metadata !6469, metadata !DIExpression()), !dbg !6472
  call void @llvm.dbg.value(metadata i32* %2, metadata !6470, metadata !DIExpression(DW_OP_deref)), !dbg !6472
  %11 = call i32 @vdma_get_available_send_space(i32 noundef %10, i32* noundef nonnull %2) #20, !dbg !6482
  call void @llvm.dbg.value(metadata i32 %11, metadata !6471, metadata !DIExpression()), !dbg !6472
  %12 = icmp eq i32 %11, 0, !dbg !6483
  br i1 %12, label %14, label %13, !dbg !6485

13:                                               ; preds = %9
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.37, i32 0, i32 0), i32 noundef 964, i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @__func__.hal_uart_get_available_send_space, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.38, i32 0, i32 0)) #23, !dbg !6486
  unreachable, !dbg !6486

14:                                               ; preds = %9
  %15 = load i32, i32* %2, align 4, !dbg !6488
  call void @llvm.dbg.value(metadata i32 %15, metadata !6470, metadata !DIExpression()), !dbg !6472
  br label %16, !dbg !6489

16:                                               ; preds = %5, %1, %14
  %17 = phi i32 [ %15, %14 ], [ 0, %1 ], [ 0, %5 ], !dbg !6472
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #22, !dbg !6490
  ret i32 %17, !dbg !6490
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_get_available_receive_bytes(i32 noundef %0) local_unnamed_addr #0 !dbg !6491 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6493, metadata !DIExpression()), !dbg !6497
  %3 = bitcast i32* %2 to i8*, !dbg !6498
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #22, !dbg !6498
  %4 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !6499
  br i1 %4, label %5, label %16, !dbg !6501

5:                                                ; preds = %1
  %6 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !6502
  %7 = load volatile i32, i32* %6, align 4, !dbg !6502
  %8 = icmp eq i32 %7, 2, !dbg !6504
  br i1 %8, label %9, label %16, !dbg !6505

9:                                                ; preds = %5
  %10 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #20, !dbg !6506
  call void @llvm.dbg.value(metadata i32 %10, metadata !6494, metadata !DIExpression()), !dbg !6497
  call void @llvm.dbg.value(metadata i32* %2, metadata !6495, metadata !DIExpression(DW_OP_deref)), !dbg !6497
  %11 = call i32 @vdma_get_available_receive_bytes(i32 noundef %10, i32* noundef nonnull %2) #20, !dbg !6507
  call void @llvm.dbg.value(metadata i32 %11, metadata !6496, metadata !DIExpression()), !dbg !6497
  %12 = icmp eq i32 %11, 0, !dbg !6508
  br i1 %12, label %14, label %13, !dbg !6510

13:                                               ; preds = %9
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.37, i32 0, i32 0), i32 noundef 988, i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @__func__.hal_uart_get_available_receive_bytes, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.38, i32 0, i32 0)) #23, !dbg !6511
  unreachable, !dbg !6511

14:                                               ; preds = %9
  %15 = load i32, i32* %2, align 4, !dbg !6513
  call void @llvm.dbg.value(metadata i32 %15, metadata !6495, metadata !DIExpression()), !dbg !6497
  br label %16, !dbg !6514

16:                                               ; preds = %5, %1, %14
  %17 = phi i32 [ %15, %14 ], [ 0, %1 ], [ 0, %5 ], !dbg !6497
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #22, !dbg !6515
  ret i32 %17, !dbg !6515
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_hardware_flowcontrol(i32 noundef %0) local_unnamed_addr #0 !dbg !6516 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6518, metadata !DIExpression()), !dbg !6520
  %2 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !6521
  br i1 %2, label %3, label %10, !dbg !6523

3:                                                ; preds = %1
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !6524
  %5 = load volatile i32, i32* %4, align 4, !dbg !6524
  %6 = icmp eq i32 %5, 0, !dbg !6526
  br i1 %6, label %10, label %7, !dbg !6527

7:                                                ; preds = %3
  %8 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !6528
  %9 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %8, align 4, !dbg !6528
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %9, metadata !6519, metadata !DIExpression()), !dbg !6520
  tail call void @uart_set_hardware_flowcontrol(%struct.UART_REGISTER_T* noundef %9) #20, !dbg !6529
  br label %10, !dbg !6530

10:                                               ; preds = %3, %1, %7
  %11 = phi i32 [ 0, %7 ], [ -4, %1 ], [ -2, %3 ], !dbg !6520
  ret i32 %11, !dbg !6531
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_software_flowcontrol(i32 noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) local_unnamed_addr #0 !dbg !6532 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6536, metadata !DIExpression()), !dbg !6541
  call void @llvm.dbg.value(metadata i8 %1, metadata !6537, metadata !DIExpression()), !dbg !6541
  call void @llvm.dbg.value(metadata i8 %2, metadata !6538, metadata !DIExpression()), !dbg !6541
  call void @llvm.dbg.value(metadata i8 %3, metadata !6539, metadata !DIExpression()), !dbg !6541
  %5 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !6542
  br i1 %5, label %6, label %13, !dbg !6544

6:                                                ; preds = %4
  %7 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !6545
  %8 = load volatile i32, i32* %7, align 4, !dbg !6545
  %9 = icmp eq i32 %8, 0, !dbg !6547
  br i1 %9, label %13, label %10, !dbg !6548

10:                                               ; preds = %6
  %11 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !6549
  %12 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %11, align 4, !dbg !6549
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %12, metadata !6540, metadata !DIExpression()), !dbg !6541
  tail call void @uart_set_software_flowcontrol(%struct.UART_REGISTER_T* noundef %12, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) #20, !dbg !6550
  br label %13, !dbg !6551

13:                                               ; preds = %6, %4, %10
  %14 = phi i32 [ 0, %10 ], [ -4, %4 ], [ -2, %6 ], !dbg !6541
  ret i32 %14, !dbg !6552
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_disable_flowcontrol(i32 noundef %0) local_unnamed_addr #0 !dbg !6553 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6555, metadata !DIExpression()), !dbg !6557
  %2 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !6558
  br i1 %2, label %3, label %10, !dbg !6560

3:                                                ; preds = %1
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !6561
  %5 = load volatile i32, i32* %4, align 4, !dbg !6561
  %6 = icmp eq i32 %5, 0, !dbg !6563
  br i1 %6, label %10, label %7, !dbg !6564

7:                                                ; preds = %3
  %8 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !6565
  %9 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %8, align 4, !dbg !6565
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %9, metadata !6556, metadata !DIExpression()), !dbg !6557
  tail call void @uart_disable_flowcontrol(%struct.UART_REGISTER_T* noundef %9) #20, !dbg !6566
  br label %10, !dbg !6567

10:                                               ; preds = %3, %1, %7
  %11 = phi i32 [ 0, %7 ], [ -4, %1 ], [ -2, %3 ], !dbg !6557
  ret i32 %11, !dbg !6568
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_dma(i32 noundef %0, %struct.hal_uart_dma_config_t* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !6569 {
  %3 = alloca %struct.hal_cache_region_config_t, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6575, metadata !DIExpression()), !dbg !6587
  call void @llvm.dbg.value(metadata %struct.hal_uart_dma_config_t* %1, metadata !6576, metadata !DIExpression()), !dbg !6587
  %4 = bitcast %struct.hal_cache_region_config_t* %3 to i8*, !dbg !6588
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #22, !dbg !6588
  call void @llvm.dbg.declare(metadata %struct.hal_cache_region_config_t* %3, metadata !6578, metadata !DIExpression()), !dbg !6589
  %5 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !6590
  br i1 %5, label %6, label %101, !dbg !6592

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 0, !dbg !6593
  %8 = load i8*, i8** %7, align 4, !dbg !6593
  %9 = icmp eq i8* %8, null, !dbg !6595
  br i1 %9, label %101, label %10, !dbg !6596

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 3, !dbg !6597
  %12 = load i8*, i8** %11, align 4, !dbg !6597
  %13 = icmp eq i8* %12, null, !dbg !6598
  br i1 %13, label %101, label %14, !dbg !6599

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 1, !dbg !6600
  %16 = load i32, i32* %15, align 4, !dbg !6600
  %17 = icmp ugt i32 %16, 131071, !dbg !6602
  br i1 %17, label %101, label %18, !dbg !6603

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 2, !dbg !6604
  %20 = load i32, i32* %19, align 4, !dbg !6604
  %21 = icmp ugt i32 %20, 131071, !dbg !6605
  %22 = icmp ugt i32 %20, %16
  %23 = select i1 %21, i1 true, i1 %22, !dbg !6606
  br i1 %23, label %101, label %24, !dbg !6606

24:                                               ; preds = %18
  %25 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 4, !dbg !6607
  %26 = load i32, i32* %25, align 4, !dbg !6607
  %27 = icmp ugt i32 %26, 131071, !dbg !6609
  br i1 %27, label %101, label %28, !dbg !6610

28:                                               ; preds = %24
  %29 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 5, !dbg !6611
  %30 = load i32, i32* %29, align 4, !dbg !6611
  %31 = icmp ugt i32 %30, 131071, !dbg !6612
  br i1 %31, label %101, label %32, !dbg !6613

32:                                               ; preds = %28
  %33 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 6, !dbg !6614
  %34 = load i32, i32* %33, align 4, !dbg !6614
  %35 = icmp ugt i32 %34, 131071, !dbg !6615
  %36 = icmp ugt i32 %30, %26
  %37 = select i1 %35, i1 true, i1 %36, !dbg !6616
  %38 = icmp ugt i32 %34, %26
  %39 = select i1 %37, i1 true, i1 %38, !dbg !6616
  br i1 %39, label %101, label %40, !dbg !6616

40:                                               ; preds = %32
  %41 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !6617
  %42 = load volatile i32, i32* %41, align 4, !dbg !6617
  %43 = icmp eq i32 %42, 1, !dbg !6619
  br i1 %43, label %44, label %101, !dbg !6620

44:                                               ; preds = %40
  %45 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #20, !dbg !6621
  call void @llvm.dbg.value(metadata i32 %45, metadata !6584, metadata !DIExpression()), !dbg !6587
  %46 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #20, !dbg !6622
  call void @llvm.dbg.value(metadata i32 %46, metadata !6585, metadata !DIExpression()), !dbg !6587
  %47 = tail call i32 @vdma_init(i32 noundef %45) #20, !dbg !6623
  call void @llvm.dbg.value(metadata i32 %47, metadata !6586, metadata !DIExpression()), !dbg !6587
  %48 = icmp eq i32 %47, 0, !dbg !6624
  br i1 %48, label %50, label %49, !dbg !6626

49:                                               ; preds = %44
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.37, i32 0, i32 0), i32 noundef 1107, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.38, i32 0, i32 0)) #23, !dbg !6627
  unreachable, !dbg !6627

50:                                               ; preds = %44
  %51 = load i8*, i8** %7, align 4, !dbg !6629
  %52 = ptrtoint i8* %51 to i32, !dbg !6630
  %53 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %3, i32 0, i32 0, !dbg !6631
  store i32 %52, i32* %53, align 4, !dbg !6632
  %54 = load i32, i32* %15, align 4, !dbg !6633
  %55 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %3, i32 0, i32 1, !dbg !6634
  store i32 %54, i32* %55, align 4, !dbg !6635
  %56 = call i32 @vdma_configure(i32 noundef %45, %struct.hal_cache_region_config_t* noundef nonnull %3) #20, !dbg !6636
  call void @llvm.dbg.value(metadata i32 %56, metadata !6586, metadata !DIExpression()), !dbg !6587
  %57 = icmp eq i32 %56, 0, !dbg !6637
  br i1 %57, label %59, label %58, !dbg !6639

58:                                               ; preds = %50
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.37, i32 0, i32 0), i32 noundef 1114, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.38, i32 0, i32 0)) #23, !dbg !6640
  unreachable, !dbg !6640

59:                                               ; preds = %50
  %60 = load i32, i32* %19, align 4, !dbg !6642
  %61 = call i32 @vdma_set_threshold(i32 noundef %45, i32 noundef %60) #20, !dbg !6643
  call void @llvm.dbg.value(metadata i32 %61, metadata !6586, metadata !DIExpression()), !dbg !6587
  %62 = icmp eq i32 %61, 0, !dbg !6644
  br i1 %62, label %64, label %63, !dbg !6646

63:                                               ; preds = %59
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.37, i32 0, i32 0), i32 noundef 1119, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.38, i32 0, i32 0)) #23, !dbg !6647
  unreachable, !dbg !6647

64:                                               ; preds = %59
  %65 = call i32 @vdma_init(i32 noundef %46) #20, !dbg !6649
  call void @llvm.dbg.value(metadata i32 %65, metadata !6586, metadata !DIExpression()), !dbg !6587
  %66 = icmp eq i32 %65, 0, !dbg !6650
  br i1 %66, label %68, label %67, !dbg !6652

67:                                               ; preds = %64
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.37, i32 0, i32 0), i32 noundef 1125, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.38, i32 0, i32 0)) #23, !dbg !6653
  unreachable, !dbg !6653

68:                                               ; preds = %64
  %69 = load i8*, i8** %11, align 4, !dbg !6655
  %70 = ptrtoint i8* %69 to i32, !dbg !6656
  store i32 %70, i32* %53, align 4, !dbg !6657
  %71 = load i32, i32* %25, align 4, !dbg !6658
  store i32 %71, i32* %55, align 4, !dbg !6659
  %72 = call i32 @vdma_configure(i32 noundef %46, %struct.hal_cache_region_config_t* noundef nonnull %3) #20, !dbg !6660
  call void @llvm.dbg.value(metadata i32 %72, metadata !6586, metadata !DIExpression()), !dbg !6587
  %73 = icmp eq i32 %72, 0, !dbg !6661
  br i1 %73, label %75, label %74, !dbg !6663

74:                                               ; preds = %68
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.37, i32 0, i32 0), i32 noundef 1132, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.38, i32 0, i32 0)) #23, !dbg !6664
  unreachable, !dbg !6664

75:                                               ; preds = %68
  %76 = load i32, i32* %29, align 4, !dbg !6666
  %77 = call i32 @vdma_set_threshold(i32 noundef %46, i32 noundef %76) #20, !dbg !6667
  call void @llvm.dbg.value(metadata i32 %77, metadata !6586, metadata !DIExpression()), !dbg !6587
  %78 = icmp eq i32 %77, 0, !dbg !6668
  br i1 %78, label %80, label %79, !dbg !6670

79:                                               ; preds = %75
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.37, i32 0, i32 0), i32 noundef 1137, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.38, i32 0, i32 0)) #23, !dbg !6671
  unreachable, !dbg !6671

80:                                               ; preds = %75
  %81 = load i32, i32* %33, align 4, !dbg !6673
  %82 = call i32 @vdma_set_alert_length(i32 noundef %46, i32 noundef %81) #20, !dbg !6674
  call void @llvm.dbg.value(metadata i32 %82, metadata !6586, metadata !DIExpression()), !dbg !6587
  %83 = icmp eq i32 %82, 0, !dbg !6675
  br i1 %83, label %85, label %84, !dbg !6677

84:                                               ; preds = %80
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.37, i32 0, i32 0), i32 noundef 1142, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.38, i32 0, i32 0)) #23, !dbg !6678
  unreachable, !dbg !6678

85:                                               ; preds = %80
  %86 = call i32 @save_and_set_interrupt_mask() #20, !dbg !6680
  call void @llvm.dbg.value(metadata i32 %86, metadata !6577, metadata !DIExpression()), !dbg !6587
  %87 = load i8*, i8** %7, align 4, !dbg !6681
  %88 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 0, !dbg !6682
  store i8* %87, i8** %88, align 4, !dbg !6683
  %89 = load i32, i32* %15, align 4, !dbg !6684
  %90 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 1, !dbg !6685
  store i32 %89, i32* %90, align 4, !dbg !6686
  %91 = load i32, i32* %19, align 4, !dbg !6687
  %92 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 2, !dbg !6688
  store i32 %91, i32* %92, align 4, !dbg !6689
  %93 = load i32, i32* %33, align 4, !dbg !6690
  %94 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 6, !dbg !6691
  store i32 %93, i32* %94, align 4, !dbg !6692
  %95 = load i8*, i8** %11, align 4, !dbg !6693
  %96 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 3, !dbg !6694
  store i8* %95, i8** %96, align 4, !dbg !6695
  %97 = load i32, i32* %25, align 4, !dbg !6696
  %98 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 4, !dbg !6697
  store i32 %97, i32* %98, align 4, !dbg !6698
  %99 = load i32, i32* %29, align 4, !dbg !6699
  %100 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 5, !dbg !6700
  store i32 %99, i32* %100, align 4, !dbg !6701
  call void @restore_interrupt_mask(i32 noundef %86) #20, !dbg !6702
  br label %101, !dbg !6703

101:                                              ; preds = %40, %24, %28, %32, %14, %18, %6, %10, %2, %85
  %102 = phi i32 [ 0, %85 ], [ -4, %2 ], [ -4, %10 ], [ -4, %6 ], [ -4, %18 ], [ -4, %14 ], [ -4, %32 ], [ -4, %28 ], [ -4, %24 ], [ -2, %40 ], !dbg !6587
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #22, !dbg !6704
  ret i32 %102, !dbg !6704
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_set_baudrate(%struct.UART_REGISTER_T* noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !6705 {
  %3 = alloca [10 x i32], align 4
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6764, metadata !DIExpression()), !dbg !6777
  call void @llvm.dbg.value(metadata i32 %1, metadata !6765, metadata !DIExpression()), !dbg !6777
  call void @llvm.dbg.declare(metadata [10 x i32]* @__const.uart_set_baudrate.fraction_L_mapping, metadata !6774, metadata !DIExpression()), !dbg !6778
  %4 = bitcast [10 x i32]* %3 to i8*, !dbg !6779
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %4) #22, !dbg !6779
  call void @llvm.dbg.declare(metadata [10 x i32]* %3, metadata !6776, metadata !DIExpression()), !dbg !6780
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(40) %4, i8 0, i32 20, i1 false), !dbg !6780
  %5 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 5, !dbg !6780
  store i32 1, i32* %5, align 4, !dbg !6780
  %6 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 6, !dbg !6780
  store i32 1, i32* %6, align 4, !dbg !6780
  %7 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 7, !dbg !6780
  store i32 1, i32* %7, align 4, !dbg !6780
  %8 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 8, !dbg !6780
  store i32 1, i32* %8, align 4, !dbg !6780
  %9 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 9, !dbg !6780
  store i32 1, i32* %9, align 4, !dbg !6780
  %10 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 13, !dbg !6781
  store volatile i32 0, i32* %10, align 4, !dbg !6782
  %11 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 21, !dbg !6783
  store volatile i32 0, i32* %11, align 4, !dbg !6784
  %12 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 22, !dbg !6785
  store volatile i32 0, i32* %12, align 4, !dbg !6786
  %13 = tail call zeroext i1 @is_clk_use_lfosc() #20, !dbg !6787
  br i1 %13, label %14, label %17, !dbg !6789

14:                                               ; preds = %2
  %15 = tail call i32 @clock_get_freq_lfosc() #20, !dbg !6790
  %16 = mul i32 %15, 1000, !dbg !6792
  call void @llvm.dbg.value(metadata i32 %16, metadata !6766, metadata !DIExpression()), !dbg !6777
  br label %17, !dbg !6793

17:                                               ; preds = %2, %14
  %18 = phi i32 [ %16, %14 ], [ 26000000, %2 ], !dbg !6794
  call void @llvm.dbg.value(metadata i32 %18, metadata !6766, metadata !DIExpression()), !dbg !6777
  %19 = shl i32 %1, 8, !dbg !6795
  %20 = udiv i32 %18, %19, !dbg !6796
  call void @llvm.dbg.value(metadata i32 %20, metadata !6767, metadata !DIExpression()), !dbg !6777
  %21 = mul i32 %18, 10, !dbg !6797
  %22 = udiv i32 %21, %19, !dbg !6798
  %23 = urem i32 %22, 10, !dbg !6799
  call void @llvm.dbg.value(metadata i32 %23, metadata !6768, metadata !DIExpression()), !dbg !6777
  %24 = icmp ne i32 %23, 0, !dbg !6800
  %25 = icmp ugt i32 %19, %18
  %26 = select i1 %24, i1 true, i1 %25, !dbg !6802
  %27 = zext i1 %26 to i32, !dbg !6802
  %28 = add i32 %20, %27, !dbg !6802
  call void @llvm.dbg.value(metadata i32 %28, metadata !6767, metadata !DIExpression()), !dbg !6777
  call void @llvm.dbg.value(metadata i32 %28, metadata !6770, metadata !DIExpression()), !dbg !6777
  call void @llvm.dbg.value(metadata i32 undef, metadata !6771, metadata !DIExpression()), !dbg !6777
  br label %29, !dbg !6803

29:                                               ; preds = %29, %17
  %30 = phi i32 [ %28, %17 ], [ %34, %29 ], !dbg !6777
  %31 = mul i32 %30, %1, !dbg !6777
  %32 = udiv i32 %18, %31, !dbg !6777
  call void @llvm.dbg.value(metadata i32 %32, metadata !6771, metadata !DIExpression()), !dbg !6777
  call void @llvm.dbg.value(metadata i32 %30, metadata !6770, metadata !DIExpression()), !dbg !6777
  %33 = icmp ugt i32 %32, 256, !dbg !6804
  %34 = add i32 %30, 1, !dbg !6805
  call void @llvm.dbg.value(metadata i32 %34, metadata !6770, metadata !DIExpression()), !dbg !6777
  call void @llvm.dbg.value(metadata i32 undef, metadata !6771, metadata !DIExpression()), !dbg !6777
  br i1 %33, label %29, label %35, !dbg !6803, !llvm.loop !6807

35:                                               ; preds = %29
  %36 = udiv i32 %21, %31, !dbg !6809
  %37 = urem i32 %36, 10, !dbg !6810
  call void @llvm.dbg.value(metadata i32 %37, metadata !6769, metadata !DIExpression()), !dbg !6777
  %38 = add nsw i32 %32, -1, !dbg !6811
  call void @llvm.dbg.value(metadata i32 %38, metadata !6771, metadata !DIExpression()), !dbg !6777
  %39 = add nsw i32 %32, -2, !dbg !6812
  %40 = lshr i32 %39, 1, !dbg !6813
  call void @llvm.dbg.value(metadata i32 %40, metadata !6772, metadata !DIExpression()), !dbg !6777
  %41 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 9, !dbg !6814
  store volatile i32 3, i32* %41, align 4, !dbg !6815
  %42 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !6816
  %43 = load volatile i32, i32* %42, align 4, !dbg !6816
  call void @llvm.dbg.value(metadata i32 %43, metadata !6773, metadata !DIExpression()), !dbg !6777
  %44 = or i32 %43, 128, !dbg !6817
  store volatile i32 %44, i32* %42, align 4, !dbg !6818
  %45 = and i32 %30, 255, !dbg !6819
  %46 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 0, i32 0, !dbg !6820
  store volatile i32 %45, i32* %46, align 4, !dbg !6821
  %47 = lshr i32 %30, 8, !dbg !6822
  %48 = and i32 %47, 255, !dbg !6823
  %49 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 1, i32 0, !dbg !6824
  store volatile i32 %48, i32* %49, align 4, !dbg !6825
  store volatile i32 %43, i32* %42, align 4, !dbg !6826
  %50 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 10, !dbg !6827
  store volatile i32 %38, i32* %50, align 4, !dbg !6828
  %51 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 11, !dbg !6829
  store volatile i32 %40, i32* %51, align 4, !dbg !6830
  %52 = getelementptr inbounds [10 x i32], [10 x i32]* @__const.uart_set_baudrate.fraction_L_mapping, i32 0, i32 %37, !dbg !6831
  %53 = load i32, i32* %52, align 4, !dbg !6831
  store volatile i32 %53, i32* %11, align 4, !dbg !6832
  %54 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 %37, !dbg !6833
  %55 = load i32, i32* %54, align 4, !dbg !6833
  store volatile i32 %55, i32* %12, align 4, !dbg !6834
  %56 = icmp ugt i32 %1, 2999999, !dbg !6835
  br i1 %56, label %57, label %59, !dbg !6837

57:                                               ; preds = %35
  %58 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 15, !dbg !6838
  store volatile i32 18, i32* %58, align 4, !dbg !6840
  br label %59, !dbg !6841

59:                                               ; preds = %57, %35
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %4) #22, !dbg !6842
  ret void, !dbg !6842
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #15

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_format(%struct.UART_REGISTER_T* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #2 !dbg !6843 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6847, metadata !DIExpression()), !dbg !6852
  call void @llvm.dbg.value(metadata i32 %1, metadata !6848, metadata !DIExpression()), !dbg !6852
  call void @llvm.dbg.value(metadata i32 %2, metadata !6849, metadata !DIExpression()), !dbg !6852
  call void @llvm.dbg.value(metadata i32 %3, metadata !6850, metadata !DIExpression()), !dbg !6852
  %5 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !6853
  %6 = load volatile i32, i32* %5, align 4, !dbg !6853
  call void @llvm.dbg.value(metadata i32 %6, metadata !6851, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6852
  store volatile i32 128, i32* %5, align 4, !dbg !6854
  %7 = trunc i32 %6 to i16, !dbg !6855
  %8 = and i16 %7, -4, !dbg !6855
  call void @llvm.dbg.value(metadata i16 %7, metadata !6851, metadata !DIExpression(DW_OP_constu, 18446744073709551612, DW_OP_and, DW_OP_stack_value)), !dbg !6852
  switch i32 %1, label %15 [
    i32 3, label %13
    i32 1, label %9
    i32 2, label %11
  ], !dbg !6856

9:                                                ; preds = %4
  %10 = or i16 %8, 1, !dbg !6857
  call void @llvm.dbg.value(metadata i16 %10, metadata !6851, metadata !DIExpression()), !dbg !6852
  br label %15, !dbg !6859

11:                                               ; preds = %4
  %12 = or i16 %8, 2, !dbg !6860
  call void @llvm.dbg.value(metadata i16 %12, metadata !6851, metadata !DIExpression()), !dbg !6852
  br label %15, !dbg !6861

13:                                               ; preds = %4
  %14 = or i16 %7, 3, !dbg !6862
  call void @llvm.dbg.value(metadata i16 %14, metadata !6851, metadata !DIExpression()), !dbg !6852
  br label %15, !dbg !6863

15:                                               ; preds = %4, %13, %11, %9
  %16 = phi i16 [ %14, %13 ], [ %12, %11 ], [ %10, %9 ], [ %8, %4 ], !dbg !6852
  call void @llvm.dbg.value(metadata i16 %16, metadata !6851, metadata !DIExpression()), !dbg !6852
  %17 = and i16 %16, -61, !dbg !6864
  call void @llvm.dbg.value(metadata i16 %16, metadata !6851, metadata !DIExpression(DW_OP_constu, 18446744073709551611, DW_OP_and, DW_OP_stack_value)), !dbg !6852
  %18 = icmp eq i32 %2, 1, !dbg !6865
  %19 = select i1 %18, i16 4, i16 0, !dbg !6865
  %20 = or i16 %17, %19, !dbg !6865
  call void @llvm.dbg.value(metadata !DIArgList(i16 %17, i16 %19), metadata !6851, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !6852
  call void @llvm.dbg.value(metadata i16 %20, metadata !6851, metadata !DIExpression()), !dbg !6852
  %21 = icmp eq i32 %3, 2, !dbg !6866
  %22 = or i16 %20, 16, !dbg !6866
  %23 = select i1 %21, i16 %22, i16 %20, !dbg !6866
  call void @llvm.dbg.value(metadata i16 %23, metadata !6851, metadata !DIExpression()), !dbg !6852
  %24 = zext i16 %23 to i32, !dbg !6867
  store volatile i32 %24, i32* %5, align 4, !dbg !6868
  ret void, !dbg !6869
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_put_char_block(%struct.UART_REGISTER_T* noundef %0, i8 noundef zeroext %1) local_unnamed_addr #2 !dbg !6870 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6874, metadata !DIExpression()), !dbg !6877
  call void @llvm.dbg.value(metadata i8 %1, metadata !6875, metadata !DIExpression()), !dbg !6877
  %3 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0
  br label %4, !dbg !6878

4:                                                ; preds = %4, %2
  %5 = load volatile i32, i32* %3, align 4, !dbg !6879
  call void @llvm.dbg.value(metadata i32 %5, metadata !6876, metadata !DIExpression()), !dbg !6877
  %6 = and i32 %5, 32, !dbg !6881
  %7 = icmp eq i32 %6, 0, !dbg !6881
  br i1 %7, label %4, label %8, !dbg !6883, !llvm.loop !6884

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !6886
  %10 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 0, i32 0, !dbg !6888
  store volatile i32 %9, i32* %10, align 4, !dbg !6889
  ret void, !dbg !6890
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local zeroext i8 @uart_get_char_block(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !6891 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6895, metadata !DIExpression()), !dbg !6898
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0
  br label %3, !dbg !6899

3:                                                ; preds = %3, %1
  %4 = load volatile i32, i32* %2, align 4, !dbg !6900
  call void @llvm.dbg.value(metadata i32 %4, metadata !6896, metadata !DIExpression()), !dbg !6898
  %5 = and i32 %4, 1, !dbg !6902
  %6 = icmp eq i32 %5, 0, !dbg !6902
  br i1 %6, label %3, label %7, !dbg !6904, !llvm.loop !6905

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 0, i32 0, !dbg !6907
  %9 = load volatile i32, i32* %8, align 4, !dbg !6907
  %10 = trunc i32 %9 to i8, !dbg !6909
  call void @llvm.dbg.value(metadata i8 %10, metadata !6897, metadata !DIExpression()), !dbg !6898
  ret i8 %10, !dbg !6910
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @uart_get_char_unblocking(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #11 !dbg !6911 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6915, metadata !DIExpression()), !dbg !6918
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0, !dbg !6919
  %3 = load volatile i32, i32* %2, align 4, !dbg !6919
  call void @llvm.dbg.value(metadata i32 %3, metadata !6916, metadata !DIExpression()), !dbg !6918
  %4 = and i32 %3, 1, !dbg !6920
  %5 = icmp eq i32 %4, 0, !dbg !6920
  br i1 %5, label %9, label %6, !dbg !6922

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 0, i32 0, !dbg !6923
  %8 = load volatile i32, i32* %7, align 4, !dbg !6923
  call void @llvm.dbg.value(metadata i32 %8, metadata !6917, metadata !DIExpression()), !dbg !6918
  br label %9, !dbg !6925

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %1 ], !dbg !6926
  call void @llvm.dbg.value(metadata i32 %10, metadata !6917, metadata !DIExpression()), !dbg !6918
  ret i32 %10, !dbg !6927
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_hardware_flowcontrol(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !6928 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6932, metadata !DIExpression()), !dbg !6935
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !6936
  %3 = load volatile i32, i32* %2, align 4, !dbg !6936
  call void @llvm.dbg.value(metadata i32 %3, metadata !6934, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6935
  store volatile i32 191, i32* %2, align 4, !dbg !6937
  %4 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !6938
  %5 = load volatile i32, i32* %4, align 4, !dbg !6938
  call void @llvm.dbg.value(metadata i32 %5, metadata !6933, metadata !DIExpression()), !dbg !6935
  %6 = and i32 %5, 65343, !dbg !6939
  %7 = or i32 %6, 192, !dbg !6939
  call void @llvm.dbg.value(metadata i32 %5, metadata !6933, metadata !DIExpression(DW_OP_constu, 192, DW_OP_or, DW_OP_stack_value)), !dbg !6935
  store volatile i32 %7, i32* %4, align 4, !dbg !6940
  %8 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 17, !dbg !6941
  store volatile i32 0, i32* %8, align 4, !dbg !6942
  store volatile i32 0, i32* %2, align 4, !dbg !6943
  %9 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 4, i32 0, !dbg !6944
  store volatile i32 2, i32* %9, align 4, !dbg !6945
  %10 = and i32 %3, 65535, !dbg !6946
  store volatile i32 %10, i32* %2, align 4, !dbg !6947
  ret void, !dbg !6948
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_software_flowcontrol(%struct.UART_REGISTER_T* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) local_unnamed_addr #2 !dbg !6949 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6953, metadata !DIExpression()), !dbg !6959
  call void @llvm.dbg.value(metadata i8 %1, metadata !6954, metadata !DIExpression()), !dbg !6959
  call void @llvm.dbg.value(metadata i8 %2, metadata !6955, metadata !DIExpression()), !dbg !6959
  call void @llvm.dbg.value(metadata i8 %3, metadata !6956, metadata !DIExpression()), !dbg !6959
  %5 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !6960
  %6 = load volatile i32, i32* %5, align 4, !dbg !6960
  call void @llvm.dbg.value(metadata i32 %6, metadata !6958, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6959
  store volatile i32 191, i32* %5, align 4, !dbg !6961
  %7 = zext i8 %1 to i32, !dbg !6962
  %8 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 4, i32 0, !dbg !6963
  store volatile i32 %7, i32* %8, align 4, !dbg !6964
  %9 = zext i8 %2 to i32, !dbg !6965
  %10 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 6, !dbg !6966
  store volatile i32 %9, i32* %10, align 4, !dbg !6967
  %11 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !6968
  %12 = load volatile i32, i32* %11, align 4, !dbg !6968
  call void @llvm.dbg.value(metadata i32 %12, metadata !6957, metadata !DIExpression()), !dbg !6959
  %13 = and i32 %12, 65509, !dbg !6969
  %14 = or i32 %13, 26, !dbg !6969
  call void @llvm.dbg.value(metadata i32 %12, metadata !6957, metadata !DIExpression(DW_OP_constu, 26, DW_OP_or, DW_OP_stack_value)), !dbg !6959
  store volatile i32 %14, i32* %11, align 4, !dbg !6970
  %15 = zext i8 %3 to i32, !dbg !6971
  %16 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 16, !dbg !6972
  store volatile i32 %15, i32* %16, align 4, !dbg !6973
  %17 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 17, !dbg !6974
  store volatile i32 1, i32* %17, align 4, !dbg !6975
  %18 = and i32 %6, 65535, !dbg !6976
  store volatile i32 %18, i32* %5, align 4, !dbg !6977
  ret void, !dbg !6978
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_disable_flowcontrol(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !6979 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6981, metadata !DIExpression()), !dbg !6983
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !6984
  %3 = load volatile i32, i32* %2, align 4, !dbg !6984
  call void @llvm.dbg.value(metadata i32 %3, metadata !6982, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6983
  store volatile i32 191, i32* %2, align 4, !dbg !6985
  %4 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !6986
  store volatile i32 0, i32* %4, align 4, !dbg !6987
  store volatile i32 0, i32* %2, align 4, !dbg !6988
  %5 = and i32 %3, 65535, !dbg !6989
  store volatile i32 %5, i32* %2, align 4, !dbg !6990
  ret void, !dbg !6991
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_fifo(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !6992 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6994, metadata !DIExpression()), !dbg !6997
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !6998
  %3 = load volatile i32, i32* %2, align 4, !dbg !6998
  call void @llvm.dbg.value(metadata i32 %3, metadata !6996, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6997
  store volatile i32 191, i32* %2, align 4, !dbg !6999
  %4 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !7000
  %5 = load volatile i32, i32* %4, align 4, !dbg !7000
  call void @llvm.dbg.value(metadata i32 %5, metadata !6995, metadata !DIExpression()), !dbg !6997
  %6 = and i32 %5, 65519, !dbg !7001
  %7 = or i32 %6, 16, !dbg !7001
  call void @llvm.dbg.value(metadata i32 %5, metadata !6995, metadata !DIExpression(DW_OP_constu, 16, DW_OP_or, DW_OP_stack_value)), !dbg !6997
  store volatile i32 %7, i32* %4, align 4, !dbg !7002
  store volatile i32 0, i32* %2, align 4, !dbg !7003
  store volatile i32 135, i32* %4, align 4, !dbg !7004
  %8 = and i32 %3, 65535, !dbg !7005
  store volatile i32 %8, i32* %2, align 4, !dbg !7006
  ret void, !dbg !7007
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_unmask_receive_interrupt(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !7008 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !7010, metadata !DIExpression()), !dbg !7013
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !7014
  %3 = load volatile i32, i32* %2, align 4, !dbg !7014
  call void @llvm.dbg.value(metadata i32 %3, metadata !7012, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7013
  %4 = load volatile i32, i32* %2, align 4, !dbg !7015
  %5 = and i32 %4, -129, !dbg !7015
  store volatile i32 %5, i32* %2, align 4, !dbg !7015
  %6 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 1, i32 0, !dbg !7016
  %7 = load volatile i32, i32* %6, align 4, !dbg !7016
  call void @llvm.dbg.value(metadata i32 %7, metadata !7011, metadata !DIExpression()), !dbg !7013
  %8 = and i32 %7, 65530, !dbg !7017
  %9 = or i32 %8, 5, !dbg !7017
  call void @llvm.dbg.value(metadata i32 %7, metadata !7011, metadata !DIExpression(DW_OP_constu, 5, DW_OP_or, DW_OP_stack_value)), !dbg !7013
  store volatile i32 %9, i32* %6, align 4, !dbg !7018
  %10 = and i32 %3, 65535, !dbg !7019
  %11 = load volatile i32, i32* %2, align 4, !dbg !7020
  %12 = and i32 %10, %11, !dbg !7020
  store volatile i32 %12, i32* %2, align 4, !dbg !7020
  ret void, !dbg !7021
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_purge_fifo(%struct.UART_REGISTER_T* noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !7022 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !7026, metadata !DIExpression()), !dbg !7029
  call void @llvm.dbg.value(metadata i32 %1, metadata !7027, metadata !DIExpression()), !dbg !7029
  call void @llvm.dbg.value(metadata i16 145, metadata !7028, metadata !DIExpression()), !dbg !7029
  %3 = icmp eq i32 %1, 0, !dbg !7030
  %4 = select i1 %3, i32 149, i32 147
  call void @llvm.dbg.value(metadata i16 undef, metadata !7028, metadata !DIExpression()), !dbg !7029
  %5 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !7032
  store volatile i32 %4, i32* %5, align 4, !dbg !7033
  ret void, !dbg !7034
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @uart_query_interrupt_type(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #11 !dbg !7035 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !7040, metadata !DIExpression()), !dbg !7044
  call void @llvm.dbg.value(metadata i32 0, metadata !7043, metadata !DIExpression()), !dbg !7044
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !7045
  %3 = load volatile i32, i32* %2, align 4, !dbg !7045
  call void @llvm.dbg.value(metadata i32 %3, metadata !7041, metadata !DIExpression()), !dbg !7044
  %4 = and i32 %3, 1, !dbg !7046
  %5 = icmp eq i32 %4, 0, !dbg !7046
  br i1 %5, label %6, label %16, !dbg !7048

6:                                                ; preds = %1
  %7 = and i32 %3, 63, !dbg !7049
  switch i32 %7, label %16 [
    i32 12, label %8
    i32 6, label %9
    i32 2, label %15
  ], !dbg !7050

8:                                                ; preds = %6
  call void @llvm.dbg.value(metadata i32 2, metadata !7043, metadata !DIExpression()), !dbg !7044
  br label %16, !dbg !7051

9:                                                ; preds = %6
  %10 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0, !dbg !7053
  %11 = load volatile i32, i32* %10, align 4, !dbg !7053
  call void @llvm.dbg.value(metadata i32 %11, metadata !7042, metadata !DIExpression()), !dbg !7044
  %12 = and i32 %11, 16, !dbg !7054
  %13 = icmp eq i32 %12, 0, !dbg !7054
  %14 = select i1 %13, i32 1, i32 3
  br label %16

15:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i32 5, metadata !7043, metadata !DIExpression()), !dbg !7044
  br label %16, !dbg !7056

16:                                               ; preds = %8, %15, %6, %9, %1
  %17 = phi i32 [ 0, %1 ], [ 0, %6 ], [ 5, %15 ], [ 2, %8 ], [ %14, %9 ], !dbg !7044
  ret i32 %17, !dbg !7057
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @uart_verify_error(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #11 !dbg !7058 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !7062, metadata !DIExpression()), !dbg !7065
  call void @llvm.dbg.value(metadata i32 0, metadata !7064, metadata !DIExpression()), !dbg !7065
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0, !dbg !7066
  %3 = load volatile i32, i32* %2, align 4, !dbg !7066
  call void @llvm.dbg.value(metadata i32 %3, metadata !7063, metadata !DIExpression()), !dbg !7065
  %4 = and i32 %3, 14, !dbg !7067
  %5 = icmp eq i32 %4, 0, !dbg !7067
  %6 = sext i1 %5 to i32, !dbg !7069
  call void @llvm.dbg.value(metadata i32 %6, metadata !7064, metadata !DIExpression()), !dbg !7065
  ret i32 %6, !dbg !7070
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @uart_clear_timeout_interrupt(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #11 !dbg !7071 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !7073, metadata !DIExpression()), !dbg !7075
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 19, !dbg !7076
  %3 = load volatile i32, i32* %2, align 4, !dbg !7076
  call void @llvm.dbg.value(metadata i32 %3, metadata !7074, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7075
  call void @llvm.dbg.value(metadata i32 %3, metadata !7074, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7075
  ret void, !dbg !7077
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_reset_default_value(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !7078 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !7080, metadata !DIExpression()), !dbg !7081
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !7082
  store volatile i32 191, i32* %2, align 4, !dbg !7083
  %3 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !7084
  store volatile i32 16, i32* %3, align 4, !dbg !7085
  %4 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 4, i32 0, !dbg !7086
  store volatile i32 0, i32* %4, align 4, !dbg !7087
  %5 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 6, !dbg !7088
  store volatile i32 0, i32* %5, align 4, !dbg !7089
  store volatile i32 128, i32* %2, align 4, !dbg !7090
  %6 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 0, i32 0, !dbg !7091
  store volatile i32 0, i32* %6, align 4, !dbg !7092
  %7 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 1, i32 0, !dbg !7093
  store volatile i32 0, i32* %7, align 4, !dbg !7094
  store volatile i32 0, i32* %2, align 4, !dbg !7095
  store volatile i32 0, i32* %7, align 4, !dbg !7096
  store volatile i32 0, i32* %3, align 4, !dbg !7097
  store volatile i32 191, i32* %2, align 4, !dbg !7098
  store volatile i32 0, i32* %3, align 4, !dbg !7099
  store volatile i32 0, i32* %2, align 4, !dbg !7100
  store volatile i32 0, i32* %4, align 4, !dbg !7101
  %8 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 7, i32 0, !dbg !7102
  store volatile i32 0, i32* %8, align 4, !dbg !7103
  %9 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 8, !dbg !7104
  store volatile i32 0, i32* %9, align 4, !dbg !7105
  %10 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 9, !dbg !7106
  store volatile i32 0, i32* %10, align 4, !dbg !7107
  %11 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 10, !dbg !7108
  store volatile i32 0, i32* %11, align 4, !dbg !7109
  %12 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 11, !dbg !7110
  store volatile i32 0, i32* %12, align 4, !dbg !7111
  %13 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 13, !dbg !7112
  store volatile i32 0, i32* %13, align 4, !dbg !7113
  %14 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 14, !dbg !7114
  store volatile i32 0, i32* %14, align 4, !dbg !7115
  %15 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 15, !dbg !7116
  store volatile i32 0, i32* %15, align 4, !dbg !7117
  %16 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 16, !dbg !7118
  store volatile i32 0, i32* %16, align 4, !dbg !7119
  %17 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 17, !dbg !7120
  store volatile i32 0, i32* %17, align 4, !dbg !7121
  %18 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 18, !dbg !7122
  store volatile i32 0, i32* %18, align 4, !dbg !7123
  %19 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 19, !dbg !7124
  store volatile i32 0, i32* %19, align 4, !dbg !7125
  store volatile i32 0, i32* %13, align 4, !dbg !7126
  %20 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 21, !dbg !7127
  store volatile i32 0, i32* %20, align 4, !dbg !7128
  %21 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 22, !dbg !7129
  store volatile i32 0, i32* %21, align 4, !dbg !7130
  ret void, !dbg !7131
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_query_empty(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !7132 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !7134, metadata !DIExpression()), !dbg !7135
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0
  br label %3, !dbg !7136

3:                                                ; preds = %3, %1
  %4 = load volatile i32, i32* %2, align 4, !dbg !7137
  %5 = and i32 %4, 64, !dbg !7138
  %6 = icmp eq i32 %5, 0, !dbg !7139
  br i1 %6, label %3, label %7, !dbg !7136, !llvm.loop !7140

7:                                                ; preds = %3
  ret void, !dbg !7142
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef %1) local_unnamed_addr #10 !dbg !7143 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7147, metadata !DIExpression()), !dbg !7150
  call void @llvm.dbg.value(metadata i32 %1, metadata !7148, metadata !DIExpression()), !dbg !7150
  call void @llvm.dbg.value(metadata i32 15, metadata !7149, metadata !DIExpression()), !dbg !7150
  switch i32 %0, label %15 [
    i32 0, label %3
    i32 1, label %6
    i32 2, label %9
    i32 3, label %12
  ], !dbg !7151

3:                                                ; preds = %2
  %4 = icmp eq i32 %1, 0, !dbg !7152
  %5 = select i1 %4, i32 14, i32 15
  br label %15

6:                                                ; preds = %2
  %7 = icmp eq i32 %1, 0, !dbg !7155
  %8 = select i1 %7, i32 8, i32 9
  br label %15

9:                                                ; preds = %2
  %10 = icmp eq i32 %1, 0, !dbg !7157
  %11 = select i1 %10, i32 10, i32 11
  br label %15

12:                                               ; preds = %2
  %13 = icmp eq i32 %1, 0, !dbg !7159
  %14 = select i1 %13, i32 12, i32 13
  br label %15

15:                                               ; preds = %12, %9, %6, %3, %2
  %16 = phi i32 [ 15, %2 ], [ %5, %3 ], [ %8, %6 ], [ %11, %9 ], [ %14, %12 ], !dbg !7150
  call void @llvm.dbg.value(metadata i32 %16, metadata !7149, metadata !DIExpression()), !dbg !7150
  ret i32 %16, !dbg !7161
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @uart_dma_channel_to_callback_data(i32 noundef %0, %struct.uart_dma_callback_data_t* nocapture noundef writeonly %1) local_unnamed_addr #6 !dbg !7162 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7172, metadata !DIExpression()), !dbg !7174
  call void @llvm.dbg.value(metadata %struct.uart_dma_callback_data_t* %1, metadata !7173, metadata !DIExpression()), !dbg !7174
  %3 = add i32 %0, -8, !dbg !7175
  %4 = icmp ult i32 %3, 8, !dbg !7175
  br i1 %4, label %5, label %12, !dbg !7175

5:                                                ; preds = %2
  %6 = getelementptr inbounds [8 x i8], [8 x i8]* @switch.table.uart_dma_channel_to_callback_data, i32 0, i32 %3, !dbg !7175
  %7 = load i8, i8* %6, align 1, !dbg !7175
  %8 = getelementptr inbounds [8 x i32], [8 x i32]* @switch.table.uart_dma_channel_to_callback_data.2, i32 0, i32 %3, !dbg !7175
  %9 = load i32, i32* %8, align 4, !dbg !7175
  %10 = getelementptr inbounds %struct.uart_dma_callback_data_t, %struct.uart_dma_callback_data_t* %1, i32 0, i32 0, !dbg !7176
  store i8 %7, i8* %10, align 4, !dbg !7176
  %11 = getelementptr inbounds %struct.uart_dma_callback_data_t, %struct.uart_dma_callback_data_t* %1, i32 0, i32 1, !dbg !7176
  store i32 %9, i32* %11, align 4, !dbg !7176
  br label %12, !dbg !7178

12:                                               ; preds = %2, %5
  ret void, !dbg !7178
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_enable_dma(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !7179 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !7183, metadata !DIExpression()), !dbg !7184
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 19, !dbg !7185
  store volatile i32 3, i32* %2, align 4, !dbg !7186
  ret void, !dbg !7187
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_interrupt_handler(i32 noundef %0) #0 !dbg !7188 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7190, metadata !DIExpression()), !dbg !7194
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* inttoptr (i32 -1609760768 to %struct.UART_REGISTER_T*), metadata !7193, metadata !DIExpression()), !dbg !7194
  %2 = add i32 %0, -30, !dbg !7195
  %3 = icmp ult i32 %2, 3, !dbg !7195
  %4 = add i32 %0, -29
  %5 = select i1 %3, i32 %4, i32 0, !dbg !7195
  call void @llvm.dbg.value(metadata i32 %5, metadata !7191, metadata !DIExpression()), !dbg !7194
  %6 = getelementptr inbounds [4 x %struct.UART_REGISTER_T*], [4 x %struct.UART_REGISTER_T*]* @g_uart_regbase, i32 0, i32 %5, !dbg !7196
  %7 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %6, align 4, !dbg !7196
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %7, metadata !7193, metadata !DIExpression()), !dbg !7194
  %8 = tail call i32 @uart_query_interrupt_type(%struct.UART_REGISTER_T* noundef %7) #20, !dbg !7197
  call void @llvm.dbg.value(metadata i32 %8, metadata !7192, metadata !DIExpression()), !dbg !7194
  switch i32 %8, label %12 [
    i32 2, label %9
    i32 1, label %10
    i32 4, label %13
    i32 0, label %13
    i32 3, label %11
  ], !dbg !7198

9:                                                ; preds = %1
  tail call void @uart_receive_handler(i32 noundef %5, i1 noundef zeroext true) #20, !dbg !7199
  br label %13, !dbg !7201

10:                                               ; preds = %1
  tail call void @uart_error_handler(i32 noundef %5) #20, !dbg !7202
  br label %13, !dbg !7203

11:                                               ; preds = %1
  tail call void @uart_purge_fifo(%struct.UART_REGISTER_T* noundef %7, i32 noundef 1) #20, !dbg !7204
  br label %13, !dbg !7205

12:                                               ; preds = %1
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.83, i32 0, i32 0), i32 noundef 276, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.uart_interrupt_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.84, i32 0, i32 0)) #23, !dbg !7206
  unreachable, !dbg !7206

13:                                               ; preds = %11, %1, %1, %10, %9
  ret void, !dbg !7207
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_init() local_unnamed_addr #2 !dbg !1073 {
  %1 = load i1, i1* @hal_nvic_init.priority_set, align 4, !dbg !7208
  br i1 %1, label %9, label %2, !dbg !7210

2:                                                ; preds = %0, %2
  %3 = phi i32 [ %6, %2 ], [ 0, %0 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !1163, metadata !DIExpression()), !dbg !7211
  %4 = getelementptr inbounds [64 x i32], [64 x i32]* @defualt_irq_priority, i32 0, i32 %3, !dbg !7212
  %5 = load i32, i32* %4, align 4, !dbg !7212
  tail call fastcc void @NVIC_SetPriority(i32 noundef %3, i32 noundef %5) #21, !dbg !7217
  %6 = add nuw nsw i32 %3, 1, !dbg !7218
  call void @llvm.dbg.value(metadata i32 %6, metadata !1163, metadata !DIExpression()), !dbg !7211
  %7 = icmp eq i32 %6, 64, !dbg !7219
  br i1 %7, label %8, label %2, !dbg !7220, !llvm.loop !7221

8:                                                ; preds = %2
  store i1 true, i1* @hal_nvic_init.priority_set, align 4, !dbg !7223
  br label %9, !dbg !7224

9:                                                ; preds = %8, %0
  ret i32 0, !dbg !7225
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #2 !dbg !7226 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7230, metadata !DIExpression()), !dbg !7232
  call void @llvm.dbg.value(metadata i32 %1, metadata !7231, metadata !DIExpression()), !dbg !7232
  %3 = trunc i32 %1 to i8, !dbg !7233
  %4 = shl i8 %3, 2, !dbg !7233
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7236
  store volatile i8 %4, i8* %5, align 1, !dbg !7237
  ret void, !dbg !7238
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_enable_irq(i32 noundef %0) local_unnamed_addr #2 !dbg !7239 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7243, metadata !DIExpression()), !dbg !7245
  call void @llvm.dbg.value(metadata i32 -1, metadata !7244, metadata !DIExpression()), !dbg !7245
  %2 = icmp ugt i32 %0, 63, !dbg !7246
  br i1 %2, label %4, label %3, !dbg !7246

3:                                                ; preds = %1
  tail call fastcc void @NVIC_EnableIRQ(i32 noundef %0) #21, !dbg !7248
  call void @llvm.dbg.value(metadata i32 0, metadata !7244, metadata !DIExpression()), !dbg !7245
  br label %4, !dbg !7250

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !7245
  ret i32 %5, !dbg !7251
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #2 !dbg !7252 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7256, metadata !DIExpression()), !dbg !7257
  %2 = and i32 %0, 31, !dbg !7258
  %3 = shl nuw i32 1, %2, !dbg !7259
  %4 = lshr i32 %0, 5, !dbg !7260
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %4, !dbg !7261
  store volatile i32 %3, i32* %5, align 4, !dbg !7262
  ret void, !dbg !7263
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_disable_irq(i32 noundef %0) local_unnamed_addr #2 !dbg !7264 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7266, metadata !DIExpression()), !dbg !7268
  call void @llvm.dbg.value(metadata i32 -1, metadata !7267, metadata !DIExpression()), !dbg !7268
  %2 = icmp ugt i32 %0, 63, !dbg !7269
  br i1 %2, label %4, label %3, !dbg !7269

3:                                                ; preds = %1
  tail call fastcc void @NVIC_DisableIRQ(i32 noundef %0) #21, !dbg !7271
  call void @llvm.dbg.value(metadata i32 0, metadata !7267, metadata !DIExpression()), !dbg !7268
  br label %4, !dbg !7273

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !7268
  ret i32 %5, !dbg !7274
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #2 !dbg !7275 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7277, metadata !DIExpression()), !dbg !7278
  %2 = and i32 %0, 31, !dbg !7279
  %3 = shl nuw i32 1, %2, !dbg !7280
  %4 = lshr i32 %0, 5, !dbg !7281
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %4, !dbg !7282
  store volatile i32 %3, i32* %5, align 4, !dbg !7283
  ret void, !dbg !7284
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_nvic_get_pending_irq(i32 noundef %0) local_unnamed_addr #11 !dbg !7285 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7289, metadata !DIExpression()), !dbg !7291
  call void @llvm.dbg.value(metadata i32 255, metadata !7290, metadata !DIExpression()), !dbg !7291
  %2 = icmp ugt i32 %0, 63, !dbg !7292
  br i1 %2, label %5, label %3, !dbg !7292

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @NVIC_GetPendingIRQ(i32 noundef %0) #21, !dbg !7294
  call void @llvm.dbg.value(metadata i32 %4, metadata !7290, metadata !DIExpression()), !dbg !7291
  br label %5, !dbg !7296

5:                                                ; preds = %1, %3
  %6 = phi i32 [ %4, %3 ], [ 255, %1 ], !dbg !7291
  ret i32 %6, !dbg !7297
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @NVIC_GetPendingIRQ(i32 noundef %0) unnamed_addr #11 !dbg !7298 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7302, metadata !DIExpression()), !dbg !7303
  %2 = lshr i32 %0, 5, !dbg !7304
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813056 to [8 x i32]*), i32 0, i32 %2, !dbg !7305
  %4 = load volatile i32, i32* %3, align 4, !dbg !7305
  %5 = and i32 %0, 31, !dbg !7306
  %6 = lshr i32 %4, %5, !dbg !7307
  %7 = and i32 %6, 1, !dbg !7307
  ret i32 %7, !dbg !7308
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_set_pending_irq(i32 noundef %0) local_unnamed_addr #2 !dbg !7309 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7311, metadata !DIExpression()), !dbg !7313
  call void @llvm.dbg.value(metadata i32 -1, metadata !7312, metadata !DIExpression()), !dbg !7313
  %2 = icmp ugt i32 %0, 63, !dbg !7314
  br i1 %2, label %4, label %3, !dbg !7314

3:                                                ; preds = %1
  tail call fastcc void @NVIC_SetPendingIRQ(i32 noundef %0) #21, !dbg !7316
  call void @llvm.dbg.value(metadata i32 0, metadata !7312, metadata !DIExpression()), !dbg !7313
  br label %4, !dbg !7318

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !7313
  ret i32 %5, !dbg !7319
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_SetPendingIRQ(i32 noundef %0) unnamed_addr #2 !dbg !7320 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7322, metadata !DIExpression()), !dbg !7323
  %2 = and i32 %0, 31, !dbg !7324
  %3 = shl nuw i32 1, %2, !dbg !7325
  %4 = lshr i32 %0, 5, !dbg !7326
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813056 to [8 x i32]*), i32 0, i32 %4, !dbg !7327
  store volatile i32 %3, i32* %5, align 4, !dbg !7328
  ret void, !dbg !7329
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_clear_pending_irq(i32 noundef %0) local_unnamed_addr #2 !dbg !7330 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7332, metadata !DIExpression()), !dbg !7334
  call void @llvm.dbg.value(metadata i32 -1, metadata !7333, metadata !DIExpression()), !dbg !7334
  %2 = icmp ugt i32 %0, 63, !dbg !7335
  br i1 %2, label %4, label %3, !dbg !7335

3:                                                ; preds = %1
  tail call fastcc void @NVIC_ClearPendingIRQ(i32 noundef %0) #21, !dbg !7337
  call void @llvm.dbg.value(metadata i32 0, metadata !7333, metadata !DIExpression()), !dbg !7334
  br label %4, !dbg !7339

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !7334
  ret i32 %5, !dbg !7340
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_ClearPendingIRQ(i32 noundef %0) unnamed_addr #2 !dbg !7341 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7343, metadata !DIExpression()), !dbg !7344
  %2 = and i32 %0, 31, !dbg !7345
  %3 = shl nuw i32 1, %2, !dbg !7346
  %4 = lshr i32 %0, 5, !dbg !7347
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536812928 to [8 x i32]*), i32 0, i32 %4, !dbg !7348
  store volatile i32 %3, i32* %5, align 4, !dbg !7349
  ret void, !dbg !7350
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_set_priority(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !7351 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7355, metadata !DIExpression()), !dbg !7358
  call void @llvm.dbg.value(metadata i32 %1, metadata !7356, metadata !DIExpression()), !dbg !7358
  call void @llvm.dbg.value(metadata i32 -1, metadata !7357, metadata !DIExpression()), !dbg !7358
  %3 = icmp ugt i32 %0, 63, !dbg !7359
  br i1 %3, label %5, label %4, !dbg !7359

4:                                                ; preds = %2
  tail call fastcc void @NVIC_SetPriority(i32 noundef %0, i32 noundef %1) #21, !dbg !7361
  call void @llvm.dbg.value(metadata i32 0, metadata !7357, metadata !DIExpression()), !dbg !7358
  br label %5, !dbg !7363

5:                                                ; preds = %2, %4
  %6 = phi i32 [ 0, %4 ], [ -3, %2 ], !dbg !7358
  ret i32 %6, !dbg !7364
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_nvic_get_priority(i32 noundef %0) local_unnamed_addr #11 !dbg !7365 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7367, metadata !DIExpression()), !dbg !7369
  call void @llvm.dbg.value(metadata i32 68, metadata !7368, metadata !DIExpression()), !dbg !7369
  %2 = icmp ugt i32 %0, 63, !dbg !7370
  br i1 %2, label %5, label %3, !dbg !7370

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @NVIC_GetPriority(i32 noundef %0) #21, !dbg !7372
  call void @llvm.dbg.value(metadata i32 %4, metadata !7368, metadata !DIExpression()), !dbg !7369
  br label %5, !dbg !7374

5:                                                ; preds = %1, %3
  %6 = phi i32 [ %4, %3 ], [ 68, %1 ], !dbg !7369
  ret i32 %6, !dbg !7375
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @NVIC_GetPriority(i32 noundef %0) unnamed_addr #11 !dbg !7376 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7378, metadata !DIExpression()), !dbg !7379
  %2 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7380
  %3 = load volatile i8, i8* %2, align 1, !dbg !7380
  %4 = lshr i8 %3, 2, !dbg !7383
  %5 = zext i8 %4 to i32, !dbg !7383
  ret i32 %5, !dbg !7384
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @isrC_main() local_unnamed_addr #0 section ".tcm_code" !dbg !7385 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !7387, metadata !DIExpression()), !dbg !7389
  tail call void @Flash_ReturnReady() #20, !dbg !7390
  %1 = tail call fastcc i32 @get_current_irq() #21, !dbg !7391
  call void @llvm.dbg.value(metadata i32 %1, metadata !7388, metadata !DIExpression()), !dbg !7389
  %2 = icmp ugt i32 %1, 63, !dbg !7392
  br i1 %2, label %12, label %3, !dbg !7392

3:                                                ; preds = %0
  %4 = getelementptr inbounds [64 x %struct.nvic_function_t], [64 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %1, i32 0, !dbg !7394
  %5 = load void (i32)*, void (i32)** %4, align 4, !dbg !7394
  %6 = icmp eq void (i32)* %5, null, !dbg !7396
  br i1 %6, label %7, label %8, !dbg !7397

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 -4, metadata !7387, metadata !DIExpression()), !dbg !7389
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @__FUNCTION__.isrC_main, i32 0, i32 0), i32 noundef 261, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.89, i32 0, i32 0)) #20, !dbg !7398
  br label %12, !dbg !7400

8:                                                ; preds = %3
  %9 = tail call fastcc i32 @get_pending_irq() #21, !dbg !7401
  %10 = getelementptr inbounds [64 x %struct.nvic_function_t], [64 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %1, i32 1, !dbg !7403
  store i32 %9, i32* %10, align 4, !dbg !7404
  %11 = load void (i32)*, void (i32)** %4, align 4, !dbg !7405
  tail call void %11(i32 noundef %1) #20, !dbg !7406
  call void @llvm.dbg.value(metadata i32 0, metadata !7387, metadata !DIExpression()), !dbg !7389
  br label %12, !dbg !7407

12:                                               ; preds = %0, %8, %7
  %13 = phi i32 [ -4, %7 ], [ 0, %8 ], [ -3, %0 ], !dbg !7389
  ret i32 %13, !dbg !7408
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @get_current_irq() unnamed_addr #11 !dbg !7409 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7412
  %2 = and i32 %1, 511, !dbg !7413
  call void @llvm.dbg.value(metadata i32 %2, metadata !7411, metadata !DIExpression()), !dbg !7414
  %3 = add nsw i32 %2, -16, !dbg !7415
  ret i32 %3, !dbg !7416
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @get_pending_irq() unnamed_addr #11 !dbg !7417 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7418
  %2 = lshr i32 %1, 22, !dbg !7419
  %3 = and i32 %2, 1, !dbg !7419
  ret i32 %3, !dbg !7420
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_nvic_register_isr_handler(i32 noundef %0, void (i32)* noundef %1) local_unnamed_addr #0 !dbg !7421 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7426, metadata !DIExpression()), !dbg !7429
  call void @llvm.dbg.value(metadata void (i32)* %1, metadata !7427, metadata !DIExpression()), !dbg !7429
  %3 = icmp ugt i32 %0, 63, !dbg !7430
  %4 = icmp eq void (i32)* %1, null
  %5 = or i1 %3, %4, !dbg !7430
  br i1 %5, label %10, label %6, !dbg !7430

6:                                                ; preds = %2
  %7 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !7432
  call void @llvm.dbg.value(metadata i32 %7, metadata !7428, metadata !DIExpression()), !dbg !7429
  tail call fastcc void @NVIC_ClearPendingIRQ(i32 noundef %0) #21, !dbg !7433
  %8 = getelementptr inbounds [64 x %struct.nvic_function_t], [64 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %0, i32 0, !dbg !7434
  store void (i32)* %1, void (i32)** %8, align 4, !dbg !7435
  %9 = getelementptr inbounds [64 x %struct.nvic_function_t], [64 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %0, i32 1, !dbg !7436
  store i32 0, i32* %9, align 4, !dbg !7437
  tail call void @restore_interrupt_mask(i32 noundef %7) #20, !dbg !7438
  br label %10, !dbg !7439

10:                                               ; preds = %2, %6
  %11 = phi i32 [ 0, %6 ], [ -2, %2 ], !dbg !7429
  ret i32 %11, !dbg !7440
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_nvic_save_and_set_interrupt_mask(i32* nocapture noundef writeonly %0) local_unnamed_addr #0 !dbg !7441 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !7445, metadata !DIExpression()), !dbg !7446
  %2 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !7447
  store i32 %2, i32* %0, align 4, !dbg !7448
  ret i32 0, !dbg !7449
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_nvic_restore_interrupt_mask(i32 noundef %0) local_unnamed_addr #0 !dbg !7450 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7454, metadata !DIExpression()), !dbg !7455
  tail call void @restore_interrupt_mask(i32 noundef %0) #20, !dbg !7456
  ret i32 0, !dbg !7457
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @save_and_set_interrupt_mask() local_unnamed_addr #0 section ".tcm_code" !dbg !7458 {
  %1 = tail call i32 asm sideeffect "MRS $0, basepri_max", "=r"() #22, !dbg !7462, !srcloc !7468
  call void @llvm.dbg.value(metadata i32 %1, metadata !7466, metadata !DIExpression()) #22, !dbg !7469
  call void @llvm.dbg.value(metadata i32 %1, metadata !7460, metadata !DIExpression()), !dbg !7470
  call void @llvm.dbg.value(metadata i32 1, metadata !7461, metadata !DIExpression()), !dbg !7470
  call void @llvm.dbg.value(metadata i32 4, metadata !7471, metadata !DIExpression()) #22, !dbg !7474
  tail call void asm sideeffect "MSR basepri, $0", "r,~{memory}"(i32 4) #22, !dbg !7476, !srcloc !7477
  tail call void asm sideeffect "dmb", ""() #22, !dbg !7478, !srcloc !7481
  tail call void asm sideeffect "isb", ""() #22, !dbg !7482, !srcloc !7485
  ret i32 %1, !dbg !7486
}

; Function Attrs: noinline nounwind optsize
define dso_local void @restore_interrupt_mask(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !7487 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7489, metadata !DIExpression()), !dbg !7490
  call void @llvm.dbg.value(metadata i32 %0, metadata !7471, metadata !DIExpression()) #22, !dbg !7491
  tail call void asm sideeffect "MSR basepri, $0", "r,~{memory}"(i32 %0) #22, !dbg !7493, !srcloc !7477
  tail call void asm sideeffect "dmb", ""() #22, !dbg !7494, !srcloc !7481
  tail call void asm sideeffect "isb", ""() #22, !dbg !7496, !srcloc !7485
  ret void, !dbg !7498
}

; Function Attrs: noinline nounwind optsize
define dso_local void @nvic_mask_all_interrupt() local_unnamed_addr #0 !dbg !7499 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !7503
  call void @llvm.dbg.value(metadata i32 %1, metadata !7502, metadata !DIExpression()), !dbg !7504
  call void @llvm.dbg.value(metadata i32 0, metadata !7501, metadata !DIExpression()), !dbg !7504
  br label %2, !dbg !7505

2:                                                ; preds = %0, %2
  %3 = phi i32 [ 0, %0 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !7501, metadata !DIExpression()), !dbg !7504
  tail call fastcc void @NVIC_DisableIRQ.96(i32 noundef %3) #21, !dbg !7507
  %4 = add nuw nsw i32 %3, 1, !dbg !7510
  call void @llvm.dbg.value(metadata i32 %4, metadata !7501, metadata !DIExpression()), !dbg !7504
  %5 = icmp eq i32 %4, 64, !dbg !7511
  br i1 %5, label %6, label %2, !dbg !7505, !llvm.loop !7512

6:                                                ; preds = %2
  tail call void @restore_interrupt_mask(i32 noundef %1) #21, !dbg !7514
  ret void, !dbg !7515
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_DisableIRQ.96(i32 noundef %0) unnamed_addr #2 !dbg !7516 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7518, metadata !DIExpression()), !dbg !7519
  %2 = and i32 %0, 31, !dbg !7520
  %3 = shl nuw i32 1, %2, !dbg !7521
  %4 = lshr i32 %0, 5, !dbg !7522
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %4, !dbg !7523
  store volatile i32 %3, i32* %5, align 4, !dbg !7524
  ret void, !dbg !7525
}

; Function Attrs: noinline nounwind optsize
define dso_local void @nvic_unmask_all_interrupt() local_unnamed_addr #0 !dbg !7526 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !7530
  call void @llvm.dbg.value(metadata i32 %1, metadata !7529, metadata !DIExpression()), !dbg !7531
  call void @llvm.dbg.value(metadata i32 0, metadata !7528, metadata !DIExpression()), !dbg !7531
  br label %2, !dbg !7532

2:                                                ; preds = %0, %2
  %3 = phi i32 [ 0, %0 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !7528, metadata !DIExpression()), !dbg !7531
  tail call fastcc void @NVIC_EnableIRQ.97(i32 noundef %3) #21, !dbg !7534
  %4 = add nuw nsw i32 %3, 1, !dbg !7537
  call void @llvm.dbg.value(metadata i32 %4, metadata !7528, metadata !DIExpression()), !dbg !7531
  %5 = icmp eq i32 %4, 64, !dbg !7538
  br i1 %5, label %6, label %2, !dbg !7532, !llvm.loop !7539

6:                                                ; preds = %2
  tail call void @restore_interrupt_mask(i32 noundef %1) #21, !dbg !7541
  ret void, !dbg !7542
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_EnableIRQ.97(i32 noundef %0) unnamed_addr #2 !dbg !7543 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7545, metadata !DIExpression()), !dbg !7546
  %2 = and i32 %0, 31, !dbg !7547
  %3 = shl nuw i32 1, %2, !dbg !7548
  %4 = lshr i32 %0, 5, !dbg !7549
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %4, !dbg !7550
  store volatile i32 %3, i32* %5, align 4, !dbg !7551
  ret void, !dbg !7552
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @nvic_clear_all_pending_interrupt() local_unnamed_addr #2 !dbg !7553 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7555, metadata !DIExpression()), !dbg !7556
  br label %1, !dbg !7557

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !7555, metadata !DIExpression()), !dbg !7556
  tail call fastcc void @NVIC_ClearPendingIRQ.98(i32 noundef %2) #21, !dbg !7559
  %3 = add nuw nsw i32 %2, 1, !dbg !7562
  call void @llvm.dbg.value(metadata i32 %3, metadata !7555, metadata !DIExpression()), !dbg !7556
  %4 = icmp eq i32 %3, 64, !dbg !7563
  br i1 %4, label %5, label %1, !dbg !7557, !llvm.loop !7564

5:                                                ; preds = %1
  ret void, !dbg !7566
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_ClearPendingIRQ.98(i32 noundef %0) unnamed_addr #2 !dbg !7567 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7569, metadata !DIExpression()), !dbg !7570
  %2 = and i32 %0, 31, !dbg !7571
  %3 = shl nuw i32 1, %2, !dbg !7572
  %4 = lshr i32 %0, 5, !dbg !7573
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536812928 to [8 x i32]*), i32 0, i32 %4, !dbg !7574
  store volatile i32 %3, i32* %5, align 4, !dbg !7575
  ret void, !dbg !7576
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @nvic_irq_software_trigger(i32 noundef %0) local_unnamed_addr #0 !dbg !7577 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7579, metadata !DIExpression()), !dbg !7580
  %2 = icmp ugt i32 %0, 63, !dbg !7581
  br i1 %2, label %4, label %3, !dbg !7581

3:                                                ; preds = %1
  tail call fastcc void @software_trigger_irq(i32 noundef %0) #21, !dbg !7583
  br label %4, !dbg !7584

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -2, %1 ], !dbg !7580
  ret i32 %5, !dbg !7585
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @software_trigger_irq(i32 noundef %0) unnamed_addr #0 !dbg !7586 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7588, metadata !DIExpression()), !dbg !7589
  %2 = and i32 %0, 511, !dbg !7590
  store volatile i32 %2, i32* inttoptr (i32 -536809728 to i32*), align 256, !dbg !7591
  tail call void asm sideeffect "dsb", ""() #22, !dbg !7592, !srcloc !7595
  ret void, !dbg !7596
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_nvic_query_exception_number() local_unnamed_addr #11 !dbg !7597 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7598
  %2 = and i32 %1, 511, !dbg !7599
  ret i32 %2, !dbg !7600
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_BlankCheck(i8* noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".ram_code" !dbg !7601 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7605, metadata !DIExpression()), !dbg !7704
  call void @llvm.dbg.value(metadata i32 %1, metadata !7606, metadata !DIExpression()), !dbg !7704
  call void @llvm.dbg.value(metadata i8* %0, metadata !7607, metadata !DIExpression()), !dbg !7704
  %3 = tail call i32 @BlockSize(i8* noundef %0, i32 noundef %1) #20, !dbg !7705
  call void @llvm.dbg.value(metadata i32 %3, metadata !7702, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shr, DW_OP_stack_value)), !dbg !7704
  call void @llvm.dbg.value(metadata i32 0, metadata !7701, metadata !DIExpression()), !dbg !7704
  call void @llvm.dbg.value(metadata i32* undef, metadata !7703, metadata !DIExpression()), !dbg !7704
  call void @llvm.dbg.value(metadata i32 0, metadata !7701, metadata !DIExpression()), !dbg !7704
  %4 = icmp ult i32 %3, 4, !dbg !7706
  br i1 %4, label %20, label %5, !dbg !7709

5:                                                ; preds = %2
  %6 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !7710
  %7 = bitcast i8* %6 to i32**, !dbg !7710
  %8 = load i32*, i32** %7, align 4, !dbg !7710
  call void @llvm.dbg.value(metadata i32* %8, metadata !7703, metadata !DIExpression()), !dbg !7704
  %9 = lshr i32 %3, 2, !dbg !7711
  call void @llvm.dbg.value(metadata i32 %9, metadata !7702, metadata !DIExpression()), !dbg !7704
  br label %10, !dbg !7709

10:                                               ; preds = %5, %16
  %11 = phi i32* [ %18, %16 ], [ %8, %5 ]
  %12 = phi i32 [ %17, %16 ], [ 0, %5 ]
  call void @llvm.dbg.value(metadata i32* %11, metadata !7703, metadata !DIExpression()), !dbg !7704
  call void @llvm.dbg.value(metadata i32 %12, metadata !7701, metadata !DIExpression()), !dbg !7704
  %13 = load i32, i32* %11, align 4, !dbg !7712
  %14 = icmp eq i32 %13, -1, !dbg !7715
  br i1 %14, label %16, label %15, !dbg !7716

15:                                               ; preds = %10
  tail call void @Flash_ReturnReady() #20, !dbg !7717
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.99, i32 0, i32 0), i32 noundef 81, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.SFI_BlankCheck, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.100, i32 0, i32 0)) #23, !dbg !7717
  unreachable, !dbg !7717

16:                                               ; preds = %10
  %17 = add nuw nsw i32 %12, 1, !dbg !7722
  call void @llvm.dbg.value(metadata i32 %17, metadata !7701, metadata !DIExpression()), !dbg !7704
  %18 = getelementptr inbounds i32, i32* %11, i32 1, !dbg !7723
  call void @llvm.dbg.value(metadata i32* %18, metadata !7703, metadata !DIExpression()), !dbg !7704
  %19 = icmp eq i32 %17, %9, !dbg !7706
  br i1 %19, label %20, label %10, !dbg !7709, !llvm.loop !7724

20:                                               ; preds = %16, %2
  ret void, !dbg !7726
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define dso_local i32 @SFI_ReverseByteOrder(i32 noundef %0) local_unnamed_addr #16 section ".ram_code" !dbg !7727 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7729, metadata !DIExpression()), !dbg !7731
  call void @llvm.dbg.value(metadata i32 0, metadata !7730, metadata !DIExpression()), !dbg !7731
  call void @llvm.dbg.value(metadata i32 %0, metadata !7730, metadata !DIExpression(DW_OP_constu, 24, DW_OP_shr, DW_OP_stack_value)), !dbg !7731
  call void @llvm.dbg.value(metadata !DIArgList(i32 %0, i32 %0), metadata !7730, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 24, DW_OP_shr, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_shr, DW_OP_constu, 65280, DW_OP_and, DW_OP_or, DW_OP_stack_value)), !dbg !7731
  call void @llvm.dbg.value(metadata !DIArgList(i32 %0, i32 %0, i32 %0), metadata !7730, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 24, DW_OP_shr, DW_OP_LLVM_arg, 2, DW_OP_constu, 8, DW_OP_shr, DW_OP_constu, 65280, DW_OP_and, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_shl, DW_OP_constu, 16711680, DW_OP_and, DW_OP_or, DW_OP_stack_value)), !dbg !7731
  %2 = tail call i32 @llvm.bswap.i32(i32 %0), !dbg !7732
  call void @llvm.dbg.value(metadata i32 %2, metadata !7730, metadata !DIExpression()), !dbg !7731
  ret i32 %2, !dbg !7733
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_MacEnable(i16 noundef zeroext %0) local_unnamed_addr #0 section ".tcm_code" !dbg !7734 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !7739, metadata !DIExpression()), !dbg !7741
  %2 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !7742
  %3 = or i32 %2, 512, !dbg !7742
  store volatile i32 %3, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !7742
  %4 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !7745
  call void @llvm.dbg.value(metadata i32 %4, metadata !7740, metadata !DIExpression()), !dbg !7741
  switch i16 %0, label %6 [
    i16 0, label %7
    i16 1, label %5
  ], !dbg !7746

5:                                                ; preds = %1
  br label %7, !dbg !7747

6:                                                ; preds = %1
  tail call void @Flash_ReturnReady() #20, !dbg !7751
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.99, i32 0, i32 0), i32 noundef 127, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.SFI_MacEnable, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.100, i32 0, i32 0)) #23, !dbg !7751
  unreachable, !dbg !7751

7:                                                ; preds = %1, %5
  %8 = phi i32* [ inttoptr (i32 -1610350528 to i32*), %5 ], [ inttoptr (i32 -1610350588 to i32*), %1 ]
  %9 = load volatile i32, i32* %8, align 4, !dbg !7756
  call void @llvm.dbg.value(metadata !DIArgList(i32 %9, i32 %4), metadata !7740, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 4, DW_OP_shl, DW_OP_constu, 16, DW_OP_and, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !7741
  call void @llvm.dbg.value(metadata !DIArgList(i32 %9, i32 %4), metadata !7740, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 4, DW_OP_shl, DW_OP_constu, 16, DW_OP_and, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_constu, 8, DW_OP_or, DW_OP_stack_value)), !dbg !7741
  br label %10, !dbg !7757

10:                                               ; preds = %10, %7
  %11 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !7758
  %12 = and i32 %11, 8192, !dbg !7759
  %13 = icmp eq i32 %12, 0, !dbg !7760
  br i1 %13, label %10, label %14, !dbg !7757, !llvm.loop !7761

14:                                               ; preds = %10, %14
  %15 = load volatile i32, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !7763
  %16 = and i32 %15, 256, !dbg !7764
  %17 = icmp eq i32 %16, 0, !dbg !7765
  br i1 %17, label %14, label %18, !dbg !7766, !llvm.loop !7767

18:                                               ; preds = %14
  %19 = shl i32 %9, 4, !dbg !7756
  call void @llvm.dbg.value(metadata !DIArgList(i32 %19, i32 %4), metadata !7740, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 16, DW_OP_and, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_constu, 8, DW_OP_or, DW_OP_stack_value)), !dbg !7741
  %20 = and i32 %19, 16, !dbg !7756
  call void @llvm.dbg.value(metadata !DIArgList(i32 %20, i32 %4), metadata !7740, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_constu, 8, DW_OP_or, DW_OP_stack_value)), !dbg !7741
  call void @llvm.dbg.value(metadata i32 undef, metadata !7740, metadata !DIExpression(DW_OP_constu, 8, DW_OP_or, DW_OP_stack_value)), !dbg !7741
  %21 = or i32 %4, %20, !dbg !7769
  %22 = or i32 %21, 8, !dbg !7769
  call void @llvm.dbg.value(metadata i32 %22, metadata !7740, metadata !DIExpression()), !dbg !7741
  store volatile i32 %22, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !7770
  ret void, !dbg !7771
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SFI_MacLeave(i16 zeroext %0) local_unnamed_addr #2 section ".tcm_code" !dbg !7772 {
  call void @llvm.dbg.value(metadata i16 undef, metadata !7774, metadata !DIExpression()), !dbg !7776
  %2 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !7777
  call void @llvm.dbg.value(metadata i32 %2, metadata !7775, metadata !DIExpression()), !dbg !7776
  %3 = and i32 %2, -268435477, !dbg !7778
  call void @llvm.dbg.value(metadata i32 %3, metadata !7775, metadata !DIExpression()), !dbg !7776
  store volatile i32 %3, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !7779
  br label %4, !dbg !7780

4:                                                ; preds = %4, %1
  %5 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !7781
  %6 = and i32 %5, 2, !dbg !7782
  %7 = icmp eq i32 %6, 0, !dbg !7780
  br i1 %7, label %8, label %4, !dbg !7780, !llvm.loop !7783

8:                                                ; preds = %4
  %9 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !7785
  call void @llvm.dbg.value(metadata i32 %9, metadata !7775, metadata !DIExpression()), !dbg !7776
  %10 = and i32 %9, -9, !dbg !7786
  call void @llvm.dbg.value(metadata i32 %10, metadata !7775, metadata !DIExpression()), !dbg !7776
  store volatile i32 %10, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !7787
  br label %11, !dbg !7788

11:                                               ; preds = %11, %8
  %12 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !7789
  %13 = and i32 %12, 8, !dbg !7790
  %14 = icmp eq i32 %13, 0, !dbg !7788
  br i1 %14, label %15, label %11, !dbg !7788, !llvm.loop !7791

15:                                               ; preds = %11
  %16 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !7793, !range !2809
  %17 = icmp eq i8 %16, 0, !dbg !7795
  br i1 %17, label %18, label %21, !dbg !7796

18:                                               ; preds = %15
  %19 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !7797
  %20 = and i32 %19, -513, !dbg !7797
  store volatile i32 %20, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !7797
  br label %21, !dbg !7801

21:                                               ; preds = %18, %15
  ret void, !dbg !7802
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @SFI_MacTrigger(i16 noundef zeroext %0) local_unnamed_addr #2 section ".tcm_code" !dbg !7803 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !7807, metadata !DIExpression()), !dbg !7810
  call void @llvm.dbg.value(metadata i32 0, metadata !7808, metadata !DIExpression()), !dbg !7810
  call void @llvm.dbg.value(metadata i32 0, metadata !7809, metadata !DIExpression()), !dbg !7810
  %2 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !7811
  call void @llvm.dbg.value(metadata i32 %2, metadata !7808, metadata !DIExpression()), !dbg !7810
  call void @llvm.dbg.value(metadata i32 %2, metadata !7808, metadata !DIExpression(DW_OP_constu, 12, DW_OP_or, DW_OP_stack_value)), !dbg !7810
  %3 = icmp eq i16 %0, 1, !dbg !7812
  %4 = select i1 %3, i32 268435468, i32 12, !dbg !7814
  %5 = or i32 %2, %4, !dbg !7814
  call void @llvm.dbg.value(metadata i32 %5, metadata !7808, metadata !DIExpression()), !dbg !7810
  store volatile i32 %5, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !7815
  br label %6, !dbg !7816

6:                                                ; preds = %6, %1
  %7 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !7817
  %8 = and i32 %7, 2, !dbg !7818
  %9 = icmp eq i32 %8, 0, !dbg !7819
  br i1 %9, label %6, label %10, !dbg !7816, !llvm.loop !7820

10:                                               ; preds = %6, %10
  %11 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !7822
  %12 = and i32 %11, 1, !dbg !7823
  %13 = icmp eq i32 %12, 0, !dbg !7824
  br i1 %13, label %14, label %10, !dbg !7824, !llvm.loop !7825

14:                                               ; preds = %10
  ret i32 0, !dbg !7827
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SFI_MacWaitReady(i16 noundef zeroext %0) local_unnamed_addr #2 section ".tcm_code" !dbg !7828 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !7830, metadata !DIExpression()), !dbg !7831
  %2 = tail call i32 @SFI_MacTrigger(i16 noundef zeroext %0) #21, !dbg !7832
  tail call void @SFI_MacLeave(i16 zeroext undef) #21, !dbg !7833
  ret void, !dbg !7834
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_Dev_Command(i16 noundef zeroext %0, i32 noundef %1) local_unnamed_addr #0 section ".tcm_code" !dbg !7835 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !7839, metadata !DIExpression()), !dbg !7844
  call void @llvm.dbg.value(metadata i32 %1, metadata !7840, metadata !DIExpression()), !dbg !7844
  call void @llvm.dbg.value(metadata i32 %1, metadata !7841, metadata !DIExpression()), !dbg !7844
  call void @llvm.dbg.value(metadata i8 0, metadata !7843, metadata !DIExpression()), !dbg !7844
  call void @llvm.dbg.value(metadata i32 0, metadata !7842, metadata !DIExpression()), !dbg !7844
  %3 = icmp eq i32 %1, 0, !dbg !7845
  br i1 %3, label %16, label %4, !dbg !7848

4:                                                ; preds = %2, %4
  %5 = phi i8 [ %12, %4 ], [ 0, %2 ]
  %6 = phi i32 [ %10, %4 ], [ 0, %2 ]
  %7 = phi i32 [ %11, %4 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8 %5, metadata !7843, metadata !DIExpression()), !dbg !7844
  call void @llvm.dbg.value(metadata i32 %6, metadata !7842, metadata !DIExpression()), !dbg !7844
  call void @llvm.dbg.value(metadata i32 %7, metadata !7841, metadata !DIExpression()), !dbg !7844
  %8 = shl i32 %6, 8, !dbg !7849
  %9 = and i32 %7, 255, !dbg !7851
  %10 = or i32 %8, %9, !dbg !7852
  call void @llvm.dbg.value(metadata i32 %10, metadata !7842, metadata !DIExpression()), !dbg !7844
  %11 = lshr i32 %7, 8, !dbg !7853
  call void @llvm.dbg.value(metadata i32 %11, metadata !7841, metadata !DIExpression()), !dbg !7844
  %12 = add nuw nsw i8 %5, 1, !dbg !7854
  call void @llvm.dbg.value(metadata i8 %12, metadata !7843, metadata !DIExpression()), !dbg !7844
  %13 = icmp ult i32 %7, 256, !dbg !7845
  br i1 %13, label %14, label %4, !dbg !7848, !llvm.loop !7855

14:                                               ; preds = %4
  %15 = zext i8 %12 to i32, !dbg !7857
  tail call void @SFI_MacEnable(i16 noundef zeroext %0) #21, !dbg !7859
  store volatile i32 %10, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !7860
  store volatile i32 %15, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !7861
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !7862
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %0) #21, !dbg !7863
  br label %16, !dbg !7864

16:                                               ; preds = %2, %14
  ret void, !dbg !7865
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_Dev_CommandAddress(i16 noundef zeroext %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #0 section ".ram_code" !dbg !7866 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !7870, metadata !DIExpression()), !dbg !7876
  call void @llvm.dbg.value(metadata i8 %1, metadata !7871, metadata !DIExpression()), !dbg !7876
  call void @llvm.dbg.value(metadata i32 %2, metadata !7872, metadata !DIExpression()), !dbg !7876
  call void @llvm.dbg.value(metadata i32 %3, metadata !7873, metadata !DIExpression()), !dbg !7876
  %5 = tail call i32 @SFI_ReverseByteOrder(i32 noundef %2) #21, !dbg !7877
  call void @llvm.dbg.value(metadata i32 %5, metadata !7875, metadata !DIExpression()), !dbg !7876
  %6 = icmp eq i32 %3, 3, !dbg !7878
  br i1 %6, label %7, label %11, !dbg !7880

7:                                                ; preds = %4
  %8 = and i32 %5, -256, !dbg !7881
  %9 = zext i8 %1 to i32, !dbg !7883
  %10 = or i32 %8, %9, !dbg !7884
  call void @llvm.dbg.value(metadata i32 %10, metadata !7874, metadata !DIExpression()), !dbg !7876
  br label %16, !dbg !7885

11:                                               ; preds = %4
  %12 = shl i32 %5, 8, !dbg !7886
  %13 = zext i8 %1 to i32, !dbg !7888
  %14 = or i32 %12, %13, !dbg !7889
  call void @llvm.dbg.value(metadata i32 %14, metadata !7874, metadata !DIExpression()), !dbg !7876
  %15 = lshr i32 %5, 24, !dbg !7890
  call void @llvm.dbg.value(metadata i32 %15, metadata !7875, metadata !DIExpression()), !dbg !7876
  br label %16

16:                                               ; preds = %11, %7
  %17 = phi i32 [ %10, %7 ], [ %14, %11 ], !dbg !7891
  %18 = phi i32 [ %5, %7 ], [ %15, %11 ], !dbg !7876
  call void @llvm.dbg.value(metadata i32 %18, metadata !7875, metadata !DIExpression()), !dbg !7876
  call void @llvm.dbg.value(metadata i32 %17, metadata !7874, metadata !DIExpression()), !dbg !7876
  store volatile i32 %17, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !7892
  store volatile i32 %18, i32* inttoptr (i32 -1610348540 to i32*), align 4, !dbg !7893
  %19 = add i32 %3, 1, !dbg !7894
  store volatile i32 %19, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !7895
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !7896
  tail call void @SFI_MacEnable(i16 noundef zeroext %0) #21, !dbg !7897
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %0) #21, !dbg !7898
  ret void, !dbg !7899
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define dso_local i32 @SFI_GPRAM_Write_C1A3(i32 noundef %0, i32 noundef %1) local_unnamed_addr #16 section ".ram_code" !dbg !7900 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7904, metadata !DIExpression()), !dbg !7906
  call void @llvm.dbg.value(metadata i32 %1, metadata !7905, metadata !DIExpression()), !dbg !7906
  %3 = tail call i32 @SFI_ReverseByteOrder(i32 noundef %1) #21, !dbg !7907
  %4 = and i32 %3, -256, !dbg !7908
  %5 = and i32 %0, 255, !dbg !7909
  %6 = or i32 %4, %5, !dbg !7910
  ret i32 %6, !dbg !7911
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @SFI_GPRAM_Write_C1A4(i32 noundef %0, i32 noundef %1, i8** nocapture noundef %2, i32* nocapture noundef %3) local_unnamed_addr #9 section ".ram_code" !dbg !7912 {
  %5 = alloca %struct.anon, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !7917, metadata !DIExpression()), !dbg !7932
  call void @llvm.dbg.value(metadata i32 %1, metadata !7918, metadata !DIExpression()), !dbg !7932
  call void @llvm.dbg.value(metadata i8** %2, metadata !7919, metadata !DIExpression()), !dbg !7932
  call void @llvm.dbg.value(metadata i32* %3, metadata !7920, metadata !DIExpression()), !dbg !7932
  %6 = bitcast %struct.anon* %5 to i8*, !dbg !7933
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #22, !dbg !7933
  call void @llvm.dbg.declare(metadata %struct.anon* %5, metadata !7921, metadata !DIExpression()), !dbg !7934
  %7 = tail call i32 @SFI_ReverseByteOrder(i32 noundef %1) #21, !dbg !7935
  call void @llvm.dbg.value(metadata i32 %7, metadata !7930, metadata !DIExpression()), !dbg !7932
  call void @llvm.dbg.value(metadata !DIArgList(i32 %7, i32 %0), metadata !7929, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 8, DW_OP_shl, DW_OP_LLVM_arg, 1, DW_OP_constu, 255, DW_OP_and, DW_OP_or, DW_OP_stack_value)), !dbg !7932
  %8 = lshr i32 %7, 24, !dbg !7936
  call void @llvm.dbg.value(metadata i32 %8, metadata !7930, metadata !DIExpression()), !dbg !7932
  %9 = trunc i32 %8 to i8, !dbg !7937
  %10 = bitcast %struct.anon* %5 to [4 x i8]*, !dbg !7938
  store i8 %9, i8* %6, align 4, !dbg !7939
  call void @llvm.dbg.value(metadata i32 1, metadata !7931, metadata !DIExpression()), !dbg !7932
  %11 = load i8*, i8** %2, align 4, !dbg !7940
  br label %12, !dbg !7944

12:                                               ; preds = %4, %12
  %13 = phi i8* [ %11, %4 ], [ %17, %12 ], !dbg !7940
  %14 = phi i32 [ 1, %4 ], [ %18, %12 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !7931, metadata !DIExpression()), !dbg !7932
  %15 = load i8, i8* %13, align 1, !dbg !7945
  %16 = getelementptr inbounds [4 x i8], [4 x i8]* %10, i32 0, i32 %14, !dbg !7946
  store i8 %15, i8* %16, align 1, !dbg !7947
  %17 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7948
  store i8* %17, i8** %2, align 4, !dbg !7948
  %18 = add nuw nsw i32 %14, 1, !dbg !7949
  call void @llvm.dbg.value(metadata i32 %18, metadata !7931, metadata !DIExpression()), !dbg !7932
  %19 = icmp eq i32 %18, 4, !dbg !7950
  br i1 %19, label %20, label %12, !dbg !7944, !llvm.loop !7951

20:                                               ; preds = %12
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %5, i32 0, i32 0, !dbg !7953
  %22 = load i32, i32* %21, align 4, !dbg !7953
  call void @llvm.dbg.value(metadata i32 %22, metadata !7930, metadata !DIExpression()), !dbg !7932
  %23 = load i32, i32* %3, align 4, !dbg !7954
  %24 = tail call i32 @llvm.usub.sat.i32(i32 %23, i32 3), !dbg !7955
  %25 = shl i32 %7, 8, !dbg !7956
  call void @llvm.dbg.value(metadata !DIArgList(i32 %25, i32 %0), metadata !7929, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 255, DW_OP_and, DW_OP_or, DW_OP_stack_value)), !dbg !7932
  %26 = and i32 %0, 255, !dbg !7957
  call void @llvm.dbg.value(metadata !DIArgList(i32 %7, i32 %26), metadata !7929, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 8, DW_OP_shl, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !7932
  %27 = or i32 %25, %26, !dbg !7958
  call void @llvm.dbg.value(metadata i32 %27, metadata !7929, metadata !DIExpression()), !dbg !7932
  store i32 %24, i32* %3, align 4, !dbg !7959
  store volatile i32 %22, i32* inttoptr (i32 -1610348540 to i32*), align 4, !dbg !7960
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #22, !dbg !7961
  ret i32 %27, !dbg !7962
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @SFI_GPRAM_Write(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #9 section ".ram_code" !dbg !7963 {
  %4 = alloca %struct.anon, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !7967, metadata !DIExpression()), !dbg !7973
  call void @llvm.dbg.value(metadata i8* %1, metadata !7968, metadata !DIExpression()), !dbg !7973
  call void @llvm.dbg.value(metadata i32 %2, metadata !7969, metadata !DIExpression()), !dbg !7973
  call void @llvm.dbg.value(metadata i8* %1, metadata !7971, metadata !DIExpression()), !dbg !7973
  %5 = bitcast %struct.anon* %4 to i8*, !dbg !7974
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #22, !dbg !7974
  call void @llvm.dbg.declare(metadata %struct.anon* %4, metadata !7972, metadata !DIExpression()), !dbg !7975
  %6 = add i32 %0, -1610348544, !dbg !7976
  call void @llvm.dbg.value(metadata i32 %6, metadata !7967, metadata !DIExpression()), !dbg !7973
  %7 = ptrtoint i8* %1 to i32, !dbg !7977
  %8 = and i32 %7, 3, !dbg !7979
  %9 = icmp eq i32 %8, 0, !dbg !7980
  br i1 %9, label %10, label %23, !dbg !7981

10:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7971, metadata !DIExpression()), !dbg !7973
  call void @llvm.dbg.value(metadata i32 %2, metadata !7969, metadata !DIExpression()), !dbg !7973
  call void @llvm.dbg.value(metadata i32 %6, metadata !7967, metadata !DIExpression()), !dbg !7973
  %11 = icmp sgt i32 %2, 0, !dbg !7982
  br i1 %11, label %12, label %72, !dbg !7986

12:                                               ; preds = %10, %12
  %13 = phi i8* [ %20, %12 ], [ %1, %10 ]
  %14 = phi i32 [ %21, %12 ], [ %2, %10 ]
  %15 = phi i32 [ %19, %12 ], [ %6, %10 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7971, metadata !DIExpression()), !dbg !7973
  call void @llvm.dbg.value(metadata i32 %14, metadata !7969, metadata !DIExpression()), !dbg !7973
  call void @llvm.dbg.value(metadata i32 %15, metadata !7967, metadata !DIExpression()), !dbg !7973
  %16 = bitcast i8* %13 to i32*, !dbg !7987
  %17 = load i32, i32* %16, align 4, !dbg !7987
  %18 = inttoptr i32 %15 to i32*, !dbg !7987
  store volatile i32 %17, i32* %18, align 4, !dbg !7987
  %19 = add i32 %15, 4, !dbg !7989
  call void @llvm.dbg.value(metadata i32 %19, metadata !7967, metadata !DIExpression()), !dbg !7973
  %20 = getelementptr inbounds i8, i8* %13, i32 4, !dbg !7990
  call void @llvm.dbg.value(metadata i8* %20, metadata !7971, metadata !DIExpression()), !dbg !7973
  %21 = add nsw i32 %14, -4, !dbg !7991
  call void @llvm.dbg.value(metadata i32 %21, metadata !7969, metadata !DIExpression()), !dbg !7973
  %22 = icmp ugt i32 %14, 4, !dbg !7982
  br i1 %22, label %12, label %72, !dbg !7986, !llvm.loop !7992

23:                                               ; preds = %3
  %24 = and i32 %7, 1, !dbg !7994
  %25 = icmp eq i32 %24, 0, !dbg !7996
  call void @llvm.dbg.value(metadata i8* %1, metadata !7971, metadata !DIExpression()), !dbg !7973
  call void @llvm.dbg.value(metadata i8* %1, metadata !7971, metadata !DIExpression()), !dbg !7973
  call void @llvm.dbg.value(metadata i32 %2, metadata !7969, metadata !DIExpression()), !dbg !7973
  call void @llvm.dbg.value(metadata i32 %2, metadata !7969, metadata !DIExpression()), !dbg !7973
  call void @llvm.dbg.value(metadata i32 %6, metadata !7967, metadata !DIExpression()), !dbg !7973
  call void @llvm.dbg.value(metadata i32 %6, metadata !7967, metadata !DIExpression()), !dbg !7973
  %26 = icmp sgt i32 %2, 0, !dbg !7997
  br i1 %25, label %31, label %27, !dbg !7998

27:                                               ; preds = %23
  br i1 %26, label %28, label %72, !dbg !7999

28:                                               ; preds = %27
  %29 = bitcast %struct.anon* %4 to [4 x i8]*
  %30 = getelementptr inbounds %struct.anon, %struct.anon* %4, i32 0, i32 0
  br label %52, !dbg !7999

31:                                               ; preds = %23
  br i1 %26, label %32, label %72, !dbg !8002

32:                                               ; preds = %31
  %33 = bitcast %struct.anon* %4 to [2 x i16]*
  %34 = bitcast %struct.anon* %4 to i16*
  %35 = getelementptr inbounds [2 x i16], [2 x i16]* %33, i32 0, i32 1
  %36 = getelementptr inbounds %struct.anon, %struct.anon* %4, i32 0, i32 0
  br label %37, !dbg !8002

37:                                               ; preds = %32, %37
  %38 = phi i8* [ %1, %32 ], [ %49, %37 ]
  %39 = phi i32 [ %2, %32 ], [ %50, %37 ]
  %40 = phi i32 [ %6, %32 ], [ %48, %37 ]
  call void @llvm.dbg.value(metadata i8* %38, metadata !7971, metadata !DIExpression()), !dbg !7973
  call void @llvm.dbg.value(metadata i32 %39, metadata !7969, metadata !DIExpression()), !dbg !7973
  call void @llvm.dbg.value(metadata i32 %40, metadata !7967, metadata !DIExpression()), !dbg !7973
  %41 = bitcast i8* %38 to i16*, !dbg !8005
  %42 = load i16, i16* %41, align 2, !dbg !8005
  store i16 %42, i16* %34, align 4, !dbg !8008
  %43 = getelementptr inbounds i8, i8* %38, i32 2, !dbg !8009
  %44 = bitcast i8* %43 to i16*, !dbg !8009
  %45 = load i16, i16* %44, align 2, !dbg !8010
  store i16 %45, i16* %35, align 2, !dbg !8011
  %46 = load i32, i32* %36, align 4, !dbg !8012
  %47 = inttoptr i32 %40 to i32*, !dbg !8012
  store volatile i32 %46, i32* %47, align 4, !dbg !8012
  %48 = add i32 %40, 4, !dbg !8013
  call void @llvm.dbg.value(metadata i32 %48, metadata !7967, metadata !DIExpression()), !dbg !7973
  %49 = getelementptr inbounds i8, i8* %38, i32 4, !dbg !8014
  call void @llvm.dbg.value(metadata i8* %49, metadata !7971, metadata !DIExpression()), !dbg !7973
  %50 = add nsw i32 %39, -4, !dbg !8015
  call void @llvm.dbg.value(metadata i32 %50, metadata !7969, metadata !DIExpression()), !dbg !7973
  %51 = icmp ugt i32 %39, 4, !dbg !8016
  br i1 %51, label %37, label %72, !dbg !8002, !llvm.loop !8017

52:                                               ; preds = %28, %66
  %53 = phi i8* [ %1, %28 ], [ %59, %66 ]
  %54 = phi i32 [ %2, %28 ], [ %70, %66 ]
  %55 = phi i32 [ %6, %28 ], [ %69, %66 ]
  call void @llvm.dbg.value(metadata i8* %53, metadata !7971, metadata !DIExpression()), !dbg !7973
  call void @llvm.dbg.value(metadata i32 %54, metadata !7969, metadata !DIExpression()), !dbg !7973
  call void @llvm.dbg.value(metadata i32 %55, metadata !7967, metadata !DIExpression()), !dbg !7973
  call void @llvm.dbg.value(metadata i8* %53, metadata !7971, metadata !DIExpression()), !dbg !7973
  call void @llvm.dbg.value(metadata i32 0, metadata !7970, metadata !DIExpression()), !dbg !7973
  br label %56, !dbg !8019

56:                                               ; preds = %52, %56
  %57 = phi i8* [ %53, %52 ], [ %59, %56 ]
  %58 = phi i32 [ 0, %52 ], [ %62, %56 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !7971, metadata !DIExpression()), !dbg !7973
  call void @llvm.dbg.value(metadata i32 %58, metadata !7970, metadata !DIExpression()), !dbg !7973
  %59 = getelementptr inbounds i8, i8* %57, i32 1, !dbg !8023
  call void @llvm.dbg.value(metadata i8* %59, metadata !7971, metadata !DIExpression()), !dbg !7973
  %60 = load i8, i8* %57, align 1, !dbg !8026
  %61 = getelementptr inbounds [4 x i8], [4 x i8]* %29, i32 0, i32 %58, !dbg !8027
  store i8 %60, i8* %61, align 1, !dbg !8028
  %62 = add nuw nsw i32 %58, 1, !dbg !8029
  call void @llvm.dbg.value(metadata i32 %62, metadata !7970, metadata !DIExpression()), !dbg !7973
  %63 = icmp ult i32 %58, 3, !dbg !8030
  %64 = icmp ult i32 %62, %54, !dbg !8031
  %65 = select i1 %63, i1 %64, i1 false, !dbg !8031
  br i1 %65, label %56, label %66, !dbg !8019, !llvm.loop !8032

66:                                               ; preds = %56
  %67 = load i32, i32* %30, align 4, !dbg !8034
  %68 = inttoptr i32 %55 to i32*, !dbg !8034
  store volatile i32 %67, i32* %68, align 4, !dbg !8034
  %69 = add i32 %55, 4, !dbg !8035
  call void @llvm.dbg.value(metadata i32 %69, metadata !7967, metadata !DIExpression()), !dbg !7973
  %70 = add nsw i32 %54, -4, !dbg !8036
  call void @llvm.dbg.value(metadata i8* %59, metadata !7971, metadata !DIExpression()), !dbg !7973
  call void @llvm.dbg.value(metadata i32 %70, metadata !7969, metadata !DIExpression()), !dbg !7973
  %71 = icmp sgt i32 %54, 4, !dbg !8037
  br i1 %71, label %52, label %72, !dbg !7999, !llvm.loop !8038

72:                                               ; preds = %66, %37, %12, %27, %31, %10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #22, !dbg !8040
  ret void, !dbg !8040
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* nocapture noundef readonly %1, i8* nocapture noundef writeonly %2, i16 noundef zeroext %3, i16 noundef zeroext %4) local_unnamed_addr #0 section ".ram_code" !dbg !8041 {
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i16 %0, metadata !8045, metadata !DIExpression()), !dbg !8055
  call void @llvm.dbg.value(metadata i8* %1, metadata !8046, metadata !DIExpression()), !dbg !8055
  call void @llvm.dbg.value(metadata i8* %2, metadata !8047, metadata !DIExpression()), !dbg !8055
  call void @llvm.dbg.value(metadata i16 %3, metadata !8048, metadata !DIExpression()), !dbg !8055
  call void @llvm.dbg.value(metadata i16 %4, metadata !8049, metadata !DIExpression()), !dbg !8055
  %7 = bitcast i32* %6 to i8*, !dbg !8056
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #22, !dbg !8056
  call void @llvm.dbg.value(metadata i8* %7, metadata !8054, metadata !DIExpression()), !dbg !8055
  call void @llvm.dbg.value(metadata i32 0, metadata !8051, metadata !DIExpression()), !dbg !8055
  call void @llvm.dbg.value(metadata i8* inttoptr (i32 -1610348544 to i8*), metadata !8053, metadata !DIExpression()), !dbg !8055
  %8 = zext i16 %3 to i32
  call void @llvm.dbg.value(metadata i8* inttoptr (i32 -1610348544 to i8*), metadata !8053, metadata !DIExpression()), !dbg !8055
  call void @llvm.dbg.value(metadata i32 0, metadata !8051, metadata !DIExpression()), !dbg !8055
  %9 = icmp eq i16 %3, 0, !dbg !8057
  br i1 %9, label %33, label %10, !dbg !8060

10:                                               ; preds = %5, %27
  %11 = phi i8* [ %31, %27 ], [ inttoptr (i32 -1610348544 to i8*), %5 ]
  %12 = phi i32 [ %29, %27 ], [ 0, %5 ]
  call void @llvm.dbg.value(metadata i8* %11, metadata !8053, metadata !DIExpression()), !dbg !8055
  call void @llvm.dbg.value(metadata i32 %12, metadata !8051, metadata !DIExpression()), !dbg !8055
  call void @llvm.dbg.value(metadata i32 0, metadata !8052, metadata !DIExpression()), !dbg !8055
  call void @llvm.dbg.value(metadata i32 0, metadata !8050, metadata !DIExpression()), !dbg !8055
  store i32 0, i32* %6, align 4, !dbg !8061
  call void @llvm.dbg.value(metadata i32 0, metadata !8052, metadata !DIExpression()), !dbg !8055
  call void @llvm.dbg.value(metadata i32 %12, metadata !8051, metadata !DIExpression()), !dbg !8055
  %13 = icmp ult i32 %12, %8, !dbg !8064
  br i1 %13, label %14, label %27, !dbg !8066

14:                                               ; preds = %10, %14
  %15 = phi i32 [ %21, %14 ], [ 0, %10 ]
  %16 = phi i32 [ %20, %14 ], [ %12, %10 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !8052, metadata !DIExpression()), !dbg !8055
  call void @llvm.dbg.value(metadata i32 %16, metadata !8051, metadata !DIExpression()), !dbg !8055
  %17 = getelementptr inbounds i8, i8* %1, i32 %16, !dbg !8067
  %18 = load i8, i8* %17, align 1, !dbg !8067
  %19 = getelementptr inbounds i8, i8* %7, i32 %15, !dbg !8069
  store i8 %18, i8* %19, align 1, !dbg !8070
  %20 = add nuw nsw i32 %16, 1, !dbg !8071
  call void @llvm.dbg.value(metadata i32 %20, metadata !8051, metadata !DIExpression()), !dbg !8055
  %21 = add nuw nsw i32 %15, 1, !dbg !8072
  call void @llvm.dbg.value(metadata i32 %21, metadata !8052, metadata !DIExpression()), !dbg !8055
  %22 = icmp ult i32 %20, %8, !dbg !8064
  %23 = icmp ult i32 %15, 3, !dbg !8073
  %24 = select i1 %22, i1 %23, i1 false, !dbg !8073
  br i1 %24, label %14, label %25, !dbg !8066, !llvm.loop !8074

25:                                               ; preds = %14
  %26 = load i32, i32* %6, align 4, !dbg !8076
  br label %27, !dbg !8076

27:                                               ; preds = %25, %10
  %28 = phi i32 [ 0, %10 ], [ %26, %25 ], !dbg !8076
  %29 = phi i32 [ %12, %10 ], [ %20, %25 ], !dbg !8077
  call void @llvm.dbg.value(metadata i32 %28, metadata !8050, metadata !DIExpression()), !dbg !8055
  %30 = bitcast i8* %11 to i32*, !dbg !8076
  store volatile i32 %28, i32* %30, align 4, !dbg !8076
  %31 = getelementptr inbounds i8, i8* %11, i32 4, !dbg !8078
  call void @llvm.dbg.value(metadata i8* %31, metadata !8053, metadata !DIExpression()), !dbg !8055
  call void @llvm.dbg.value(metadata i32 %29, metadata !8051, metadata !DIExpression()), !dbg !8055
  %32 = icmp ult i32 %29, %8, !dbg !8057
  br i1 %32, label %10, label %33, !dbg !8060, !llvm.loop !8079

33:                                               ; preds = %27, %5
  store volatile i32 %8, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !8081
  %34 = zext i16 %4 to i32, !dbg !8082
  store volatile i32 %34, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !8083
  tail call void @SFI_MacEnable(i16 noundef zeroext %0) #21, !dbg !8084
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %0) #21, !dbg !8085
  call void @llvm.dbg.value(metadata !DIArgList(i8* inttoptr (i32 -1610348544 to i8*), i32 %8), metadata !8053, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !8055
  call void @llvm.dbg.value(metadata i8* %2, metadata !8047, metadata !DIExpression()), !dbg !8055
  call void @llvm.dbg.value(metadata i32 0, metadata !8051, metadata !DIExpression()), !dbg !8055
  %35 = icmp eq i16 %4, 0, !dbg !8086
  br i1 %35, label %47, label %36, !dbg !8089

36:                                               ; preds = %33
  %37 = getelementptr inbounds i8, i8* inttoptr (i32 -1610348544 to i8*), i32 %8, !dbg !8090
  call void @llvm.dbg.value(metadata i8* %37, metadata !8053, metadata !DIExpression()), !dbg !8055
  br label %38, !dbg !8089

38:                                               ; preds = %36, %38
  %39 = phi i8* [ %44, %38 ], [ %2, %36 ]
  %40 = phi i8* [ %45, %38 ], [ %37, %36 ]
  %41 = phi i32 [ %43, %38 ], [ 0, %36 ]
  call void @llvm.dbg.value(metadata i8* %39, metadata !8047, metadata !DIExpression()), !dbg !8055
  call void @llvm.dbg.value(metadata i8* %40, metadata !8053, metadata !DIExpression()), !dbg !8055
  call void @llvm.dbg.value(metadata i32 %41, metadata !8051, metadata !DIExpression()), !dbg !8055
  %42 = load volatile i8, i8* %40, align 1, !dbg !8091
  store i8 %42, i8* %39, align 1, !dbg !8093
  %43 = add nuw nsw i32 %41, 1, !dbg !8094
  call void @llvm.dbg.value(metadata i32 %43, metadata !8051, metadata !DIExpression()), !dbg !8055
  %44 = getelementptr inbounds i8, i8* %39, i32 1, !dbg !8095
  call void @llvm.dbg.value(metadata i8* %44, metadata !8047, metadata !DIExpression()), !dbg !8055
  %45 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !8096
  call void @llvm.dbg.value(metadata i8* %45, metadata !8053, metadata !DIExpression()), !dbg !8055
  %46 = icmp eq i32 %43, %34, !dbg !8086
  br i1 %46, label %47, label %38, !dbg !8089, !llvm.loop !8097

47:                                               ; preds = %38, %33
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #22, !dbg !8099
  ret void, !dbg !8099
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_Dev_Command_List(i16 noundef zeroext %0, i8* noundef readonly %1) local_unnamed_addr #0 section ".ram_code" !dbg !8100 {
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i16 %0, metadata !8104, metadata !DIExpression()), !dbg !8112
  call void @llvm.dbg.value(metadata i8* %1, metadata !8105, metadata !DIExpression()), !dbg !8112
  call void @llvm.dbg.value(metadata i32 0, metadata !8106, metadata !DIExpression()), !dbg !8112
  %4 = icmp eq i8* %1, null, !dbg !8113
  br i1 %4, label %67, label %5, !dbg !8115

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !8116
  call void @llvm.dbg.value(metadata i32 %27, metadata !8107, metadata !DIExpression()), !dbg !8112
  %7 = icmp eq i16 %0, 0
  br label %8, !dbg !8117

8:                                                ; preds = %61, %5
  %9 = phi i32 [ 0, %5 ], [ %66, %61 ], !dbg !8112
  call void @llvm.dbg.value(metadata i32 %9, metadata !8106, metadata !DIExpression()), !dbg !8112
  %10 = getelementptr inbounds i8, i8* %1, i32 %9, !dbg !8118
  %11 = load i8, i8* %10, align 1, !dbg !8118
  switch i8 %11, label %26 [
    i8 1, label %12
    i8 2, label %12
    i8 3, label %19
  ], !dbg !8119

12:                                               ; preds = %8, %8
  br i1 %7, label %13, label %16, !dbg !8120

13:                                               ; preds = %12
  %14 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !8123
  %15 = and i32 %14, -2, !dbg !8123
  store volatile i32 %15, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !8123
  br label %41, !dbg !8127

16:                                               ; preds = %12
  %17 = load volatile i32, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !8128
  %18 = and i32 %17, -2, !dbg !8128
  store volatile i32 %18, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !8128
  br label %41

19:                                               ; preds = %8
  br i1 %7, label %20, label %23, !dbg !8131

20:                                               ; preds = %19
  %21 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !8133
  %22 = or i32 %21, 1, !dbg !8133
  store volatile i32 %22, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !8133
  br label %41, !dbg !8137

23:                                               ; preds = %19
  %24 = load volatile i32, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !8138
  %25 = or i32 %24, 1, !dbg !8138
  store volatile i32 %25, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !8138
  br label %41

26:                                               ; preds = %8
  %27 = and i32 %6, 1, !dbg !8116
  %28 = icmp eq i32 %27, 0, !dbg !8141
  br i1 %7, label %29, label %35, !dbg !8144

29:                                               ; preds = %26
  %30 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !8145
  br i1 %28, label %33, label %31, !dbg !8148

31:                                               ; preds = %29
  %32 = or i32 %30, 1, !dbg !8145
  store volatile i32 %32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !8145
  br label %67, !dbg !8145

33:                                               ; preds = %29
  %34 = and i32 %30, -2, !dbg !8145
  store volatile i32 %34, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !8145
  br label %67

35:                                               ; preds = %26
  %36 = load volatile i32, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !8149
  br i1 %28, label %39, label %37, !dbg !8152

37:                                               ; preds = %35
  %38 = or i32 %36, 1, !dbg !8149
  store volatile i32 %38, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !8149
  br label %67, !dbg !8149

39:                                               ; preds = %35
  %40 = and i32 %36, -2, !dbg !8149
  store volatile i32 %40, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !8149
  br label %67

41:                                               ; preds = %20, %23, %13, %16
  %42 = add i32 %9, 2, !dbg !8153
  %43 = getelementptr inbounds i8, i8* %1, i32 %42, !dbg !8154
  %44 = load i8, i8* %43, align 1, !dbg !8154
  %45 = icmp eq i8 %44, 5, !dbg !8155
  br i1 %45, label %46, label %56, !dbg !8156

46:                                               ; preds = %41
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #22, !dbg !8157
  %47 = add i32 %9, 3
  %48 = getelementptr inbounds i8, i8* %1, i32 %47
  br label %49, !dbg !8158

49:                                               ; preds = %49, %46
  call void @llvm.dbg.value(metadata i8* %3, metadata !8108, metadata !DIExpression(DW_OP_deref)), !dbg !8159
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %43, i8* noundef nonnull %3, i16 noundef zeroext 1, i16 noundef zeroext 1) #21, !dbg !8160
  %50 = load i8, i8* %3, align 1, !dbg !8162
  call void @llvm.dbg.value(metadata i8 %50, metadata !8108, metadata !DIExpression()), !dbg !8159
  %51 = load i8, i8* %48, align 1, !dbg !8163
  %52 = and i8 %51, %50, !dbg !8164
  %53 = icmp eq i8 %52, 0, !dbg !8165
  br i1 %53, label %54, label %49, !dbg !8165, !llvm.loop !8166

54:                                               ; preds = %49
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #22, !dbg !8168
  %55 = add i32 %9, 1, !dbg !8169
  br label %61, !dbg !8170

56:                                               ; preds = %41
  %57 = add i32 %9, 1, !dbg !8171
  %58 = getelementptr inbounds i8, i8* %1, i32 %57, !dbg !8173
  %59 = load i8, i8* %58, align 1, !dbg !8173
  %60 = zext i8 %59 to i16, !dbg !8173
  tail call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %43, i8* noundef null, i16 noundef zeroext %60, i16 noundef zeroext 0) #21, !dbg !8174
  br label %61

61:                                               ; preds = %56, %54
  %62 = phi i32 [ %57, %56 ], [ %55, %54 ], !dbg !8169
  %63 = getelementptr inbounds i8, i8* %1, i32 %62, !dbg !8175
  %64 = load i8, i8* %63, align 1, !dbg !8175
  %65 = zext i8 %64 to i32, !dbg !8175
  %66 = add i32 %42, %65, !dbg !8176
  call void @llvm.dbg.value(metadata i32 %66, metadata !8106, metadata !DIExpression()), !dbg !8112
  br label %8, !dbg !8117, !llvm.loop !8177

67:                                               ; preds = %33, %31, %39, %37, %2
  ret void, !dbg !8179
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_ReadDeviceID(i16 noundef zeroext %0, i8* nocapture noundef writeonly %1, i8 noundef zeroext %2) local_unnamed_addr #0 section ".ram_code" !dbg !8180 {
  %4 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i16 %0, metadata !8184, metadata !DIExpression()), !dbg !8187
  call void @llvm.dbg.value(metadata i8* %1, metadata !8185, metadata !DIExpression()), !dbg !8187
  call void @llvm.dbg.value(metadata i8 %2, metadata !8186, metadata !DIExpression()), !dbg !8187
  store i8 %2, i8* %4, align 1
  call void @llvm.dbg.value(metadata i8* %4, metadata !8186, metadata !DIExpression(DW_OP_deref)), !dbg !8187
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef %1, i16 noundef zeroext 1, i16 noundef zeroext 3) #21, !dbg !8188
  ret void, !dbg !8189
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_ReadDeviceID_SPI(i16 noundef zeroext %0, i8* nocapture noundef writeonly %1) local_unnamed_addr #0 section ".ram_code" !dbg !8190 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !8194, metadata !DIExpression()), !dbg !8196
  call void @llvm.dbg.value(metadata i8* %1, metadata !8195, metadata !DIExpression()), !dbg !8196
  tail call void @SFI_ReadDeviceID(i16 noundef zeroext %0, i8* noundef %1, i8 noundef zeroext -97) #21, !dbg !8197
  ret void, !dbg !8198
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SFI_Dev_WorkingFrequencyQuery() local_unnamed_addr #10 section ".ram_code" !dbg !8199 {
  ret i32 78, !dbg !8203
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @SFI_Dev_WorkingVoltageQuery() local_unnamed_addr #11 section ".ram_code" !dbg !8204 {
  %1 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !8208
  %2 = and i32 %1, 7340032, !dbg !8210
  %3 = icmp ult i32 %2, 2097153, !dbg !8211
  %4 = select i1 %3, i32 30, i32 18, !dbg !8212
  ret i32 %4, !dbg !8213
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local zeroext i1 @SFI_Dev_GetUniqueID(i8* nocapture noundef writeonly %0) local_unnamed_addr #17 section ".ram_code" !dbg !8214 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8218, metadata !DIExpression()), !dbg !8220
  call void @llvm.dbg.value(metadata i32 0, metadata !8219, metadata !DIExpression()), !dbg !8220
  call void @llvm.dbg.value(metadata i32 0, metadata !8219, metadata !DIExpression()), !dbg !8220
  br label %2, !dbg !8221

2:                                                ; preds = %1, %2
  %3 = phi i32 [ 0, %1 ], [ %5, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !8219, metadata !DIExpression()), !dbg !8220
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !8223
  store i8 -1, i8* %4, align 1, !dbg !8226
  %5 = add nuw nsw i32 %3, 1, !dbg !8227
  call void @llvm.dbg.value(metadata i32 %5, metadata !8219, metadata !DIExpression()), !dbg !8220
  %6 = icmp eq i32 %5, 8, !dbg !8228
  br i1 %6, label %7, label %2, !dbg !8221, !llvm.loop !8229

7:                                                ; preds = %2
  ret i1 true, !dbg !8231
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_DEV_Enter_DPD() local_unnamed_addr #0 section ".ram_code" !dbg !8232 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* @EntireDiskMtdData, metadata !8234, metadata !DIExpression()), !dbg !8235
  %1 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 13), align 4, !dbg !8236
  %2 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %1, i32 0, i32 19, !dbg !8237
  %3 = load i8, i8* %2, align 1, !dbg !8237
  store i8 %3, i8* @NOR_FLASH_LeaveDPDCmd, align 1, !dbg !8238
  %4 = load i8*, i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 1), align 4, !dbg !8239
  %5 = ptrtoint i8* %4 to i32, !dbg !8240
  store i32 %5, i32* @NOR_FLASH_FATStartAddr, align 4, !dbg !8241
  %6 = bitcast i8* %4 to i32*, !dbg !8242
  %7 = load volatile i32, i32* %6, align 4, !dbg !8243
  store i32 %7, i32* @NOR_FLASH_FATStartValue, align 4, !dbg !8244
  %8 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !8245
  store i32 %8, i32* @SFI_MAC_CTL_BACKUP, align 4, !dbg !8246
  %9 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !8247
  store i32 %9, i32* @SFI_DIRECT_CTL_BACKUP, align 4, !dbg !8248
  %10 = load volatile i32, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !8249
  store i32 %10, i32* @SFI_MISC_CTL_BACKUP, align 4, !dbg !8250
  %11 = load volatile i32, i32* inttoptr (i32 -1610350580 to i32*), align 4, !dbg !8251
  store i32 %11, i32* @SFI_MISC_CTL2_BACKUP, align 4, !dbg !8252
  %12 = load volatile i32, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !8253
  store i32 %12, i32* @SFI_DLY_CTL_3_BACKUP, align 4, !dbg !8254
  %13 = load volatile i32, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !8255
  %14 = or i32 %13, 986880, !dbg !8256
  store volatile i32 %14, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !8257
  %15 = load volatile i32, i32* inttoptr (i32 -1610350560 to i32*), align 32, !dbg !8258
  %16 = or i32 %15, 252645135, !dbg !8259
  store volatile i32 %16, i32* inttoptr (i32 -1610350560 to i32*), align 32, !dbg !8260
  %17 = load i16, i16* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 23), align 2, !dbg !8261
  %18 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 13), align 4, !dbg !8262
  %19 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %18, i32 0, i32 18, !dbg !8263
  %20 = load i8, i8* %19, align 1, !dbg !8263
  %21 = zext i8 %20 to i32, !dbg !8264
  tail call void @SFI_Dev_Command(i16 noundef zeroext %17, i32 noundef %21) #21, !dbg !8265
  %22 = tail call i32 @hal_gpt_delay_us(i32 noundef 100) #20, !dbg !8266
  ret void, !dbg !8267
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_DEV_Leave_DPD() local_unnamed_addr #0 section ".tcm_code" !dbg !8268 {
  %1 = load i32, i32* @SFI_MAC_CTL_BACKUP, align 4, !dbg !8269
  store volatile i32 %1, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !8270
  %2 = load i32, i32* @SFI_DIRECT_CTL_BACKUP, align 4, !dbg !8271
  store volatile i32 %2, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !8272
  %3 = load i32, i32* @SFI_MISC_CTL_BACKUP, align 4, !dbg !8273
  store volatile i32 %3, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !8274
  %4 = load i32, i32* @SFI_MISC_CTL2_BACKUP, align 4, !dbg !8275
  store volatile i32 %4, i32* inttoptr (i32 -1610350580 to i32*), align 4, !dbg !8276
  %5 = load i32, i32* @SFI_DLY_CTL_3_BACKUP, align 4, !dbg !8277
  store volatile i32 %5, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !8278
  %6 = load volatile i32, i32* inttoptr (i32 -1610350560 to i32*), align 32, !dbg !8279
  %7 = and i32 %6, -252645136, !dbg !8280
  store volatile i32 %7, i32* inttoptr (i32 -1610350560 to i32*), align 32, !dbg !8281
  %8 = load i8, i8* @NOR_FLASH_LeaveDPDCmd, align 1, !dbg !8282
  %9 = zext i8 %8 to i32, !dbg !8282
  tail call void @SFI_Dev_Command(i16 noundef zeroext 0, i32 noundef %9) #21, !dbg !8283
  %10 = tail call i32 @hal_gpt_delay_us(i32 noundef 100) #20, !dbg !8284
  %11 = load i32, i32* @NOR_FLASH_FATStartValue, align 4, !dbg !8285
  %12 = load i32, i32* @NOR_FLASH_FATStartAddr, align 4, !dbg !8287
  %13 = inttoptr i32 %12 to i32*, !dbg !8288
  %14 = load volatile i32, i32* %13, align 4, !dbg !8289
  %15 = icmp eq i32 %11, %14, !dbg !8290
  br i1 %15, label %17, label %16, !dbg !8291

16:                                               ; preds = %0, %16
  br label %16, !dbg !8292, !llvm.loop !8293

17:                                               ; preds = %0
  ret void, !dbg !8295
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_DEV_SWITCH_TO_LOW_FQ() local_unnamed_addr #0 section ".tcm_code" !dbg !8296 {
  %1 = load i32, i32* @SFI_CLK_SWITCH_MISC_CTL_BACKUP, align 4, !dbg !8297
  %2 = icmp eq i32 %1, 0, !dbg !8299
  br i1 %2, label %3, label %5, !dbg !8300

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !8301
  store i32 %4, i32* @SFI_CLK_SWITCH_MISC_CTL_BACKUP, align 4, !dbg !8303
  br label %5, !dbg !8304

5:                                                ; preds = %3, %0
  %6 = load i32, i32* @SFI_CLK_SWITCH_DLY_CTL_3_BACKUP, align 4, !dbg !8305
  %7 = icmp eq i32 %6, 0, !dbg !8307
  br i1 %7, label %8, label %10, !dbg !8308

8:                                                ; preds = %5
  %9 = load volatile i32, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !8309
  store i32 %9, i32* @SFI_CLK_SWITCH_DLY_CTL_3_BACKUP, align 4, !dbg !8311
  br label %10, !dbg !8312

10:                                               ; preds = %8, %5
  %11 = load volatile i32, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !8313
  %12 = and i32 %11, -256, !dbg !8314
  store volatile i32 %12, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !8315
  store volatile i32 0, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !8316
  %13 = tail call i32 @clock_mux_sel(i32 noundef 2, i32 noundef 0) #20, !dbg !8317
  ret void, !dbg !8318
}

; Function Attrs: optsize
declare dso_local i32 @clock_mux_sel(i32 noundef, i32 noundef) local_unnamed_addr #5 section ".tcm_code"

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_DEV_SWITCH_TO_HIGH_FQ() local_unnamed_addr #0 section ".tcm_code" !dbg !8319 {
  %1 = load i32, i32* @SFI_CLK_SWITCH_MISC_CTL_BACKUP, align 4, !dbg !8320
  %2 = icmp eq i32 %1, 0, !dbg !8322
  br i1 %2, label %4, label %3, !dbg !8323

3:                                                ; preds = %0
  store volatile i32 %1, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !8324
  br label %4, !dbg !8326

4:                                                ; preds = %3, %0
  %5 = load i32, i32* @SFI_CLK_SWITCH_DLY_CTL_3_BACKUP, align 4, !dbg !8327
  %6 = icmp eq i32 %5, 0, !dbg !8329
  br i1 %6, label %8, label %7, !dbg !8330

7:                                                ; preds = %4
  store volatile i32 %5, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !8331
  br label %8, !dbg !8333

8:                                                ; preds = %7, %4
  %9 = tail call i32 @clock_mux_sel(i32 noundef 2, i32 noundef 7) #20, !dbg !8334
  ret void, !dbg !8335
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @ust_get_current_time() local_unnamed_addr #10 section ".tcm_code" !dbg !8336 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8338, metadata !DIExpression()), !dbg !8339
  ret i32 0, !dbg !8340
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_current_32K_counter() local_unnamed_addr #10 section ".ram_code" !dbg !8341 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8343, metadata !DIExpression()), !dbg !8344
  ret i32 0, !dbg !8345
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ust_busy_wait(i32 noundef %0) local_unnamed_addr #0 section ".ram_code" !dbg !8346 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8348, metadata !DIExpression()), !dbg !8349
  %2 = tail call i32 @hal_gpt_delay_us(i32 noundef %0) #20, !dbg !8350
  ret void, !dbg !8351
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SaveAndSetIRQMask() local_unnamed_addr #0 section ".ram_code" !dbg !8352 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !8355
  call void @llvm.dbg.value(metadata i32 %1, metadata !8354, metadata !DIExpression()), !dbg !8356
  ret i32 %1, !dbg !8357
}

; Function Attrs: noinline nounwind optsize
define dso_local void @RestoreIRQMask(i32 noundef %0) local_unnamed_addr #0 section ".ram_code" !dbg !8358 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8360, metadata !DIExpression()), !dbg !8361
  tail call void @restore_interrupt_mask(i32 noundef %0) #20, !dbg !8362
  ret void, !dbg !8363
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SF_DAL_UnlockBlock_None(i8* nocapture readnone %0) #10 section ".ram_code" !dbg !8364 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !8366, metadata !DIExpression()), !dbg !8367
  ret i32 0, !dbg !8368
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @sfi_60qbit_test() local_unnamed_addr #10 section ".ram_code" !dbg !8369 {
  ret i32 0, !dbg !8372
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @CompareData(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #12 section ".ram_code" !dbg !8373 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8377, metadata !DIExpression()), !dbg !8392
  call void @llvm.dbg.value(metadata i8* %1, metadata !8378, metadata !DIExpression()), !dbg !8392
  call void @llvm.dbg.value(metadata i32 %2, metadata !8379, metadata !DIExpression()), !dbg !8392
  %4 = ptrtoint i8* %0 to i32, !dbg !8393
  %5 = ptrtoint i8* %1 to i32
  %6 = or i32 %5, %4, !dbg !8394
  %7 = and i32 %6, 3, !dbg !8394
  %8 = icmp eq i32 %7, 0, !dbg !8394
  br i1 %8, label %9, label %26, !dbg !8394

9:                                                ; preds = %3
  %10 = bitcast i8* %0 to i32*, !dbg !8395
  call void @llvm.dbg.value(metadata i32* %10, metadata !8381, metadata !DIExpression()), !dbg !8396
  %11 = bitcast i8* %1 to i32*, !dbg !8397
  call void @llvm.dbg.value(metadata i32* %11, metadata !8384, metadata !DIExpression()), !dbg !8396
  call void @llvm.dbg.value(metadata i32 0, metadata !8380, metadata !DIExpression()), !dbg !8392
  call void @llvm.dbg.value(metadata i32 0, metadata !8380, metadata !DIExpression()), !dbg !8392
  %12 = icmp ult i32 %2, 4, !dbg !8398
  br i1 %12, label %65, label %13, !dbg !8401

13:                                               ; preds = %9
  %14 = lshr i32 %2, 2
  br label %15, !dbg !8401

15:                                               ; preds = %15, %13
  %16 = phi i32 [ 0, %13 ], [ %22, %15 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !8380, metadata !DIExpression()), !dbg !8392
  %17 = getelementptr inbounds i32, i32* %10, i32 %16, !dbg !8402
  %18 = load i32, i32* %17, align 4, !dbg !8402
  %19 = getelementptr inbounds i32, i32* %11, i32 %16, !dbg !8405
  %20 = load i32, i32* %19, align 4, !dbg !8405
  %21 = icmp eq i32 %18, %20, !dbg !8406
  %22 = add nuw nsw i32 %16, 1, !dbg !8407
  call void @llvm.dbg.value(metadata i32 %22, metadata !8380, metadata !DIExpression()), !dbg !8392
  %23 = xor i1 %21, true, !dbg !8408
  %24 = icmp eq i32 %22, %14
  %25 = select i1 %23, i1 true, i1 %24, !dbg !8408
  call void @llvm.dbg.value(metadata i32 %22, metadata !8380, metadata !DIExpression()), !dbg !8392
  br i1 %25, label %59, label %15, !dbg !8408, !llvm.loop !8409

26:                                               ; preds = %3
  %27 = and i32 %6, 1, !dbg !8411
  %28 = icmp eq i32 %27, 0, !dbg !8411
  br i1 %28, label %31, label %29, !dbg !8411

29:                                               ; preds = %26
  call void @llvm.dbg.value(metadata i32 0, metadata !8380, metadata !DIExpression()), !dbg !8392
  %30 = icmp eq i32 %2, 0, !dbg !8412
  br i1 %30, label %65, label %48, !dbg !8415

31:                                               ; preds = %26
  %32 = bitcast i8* %0 to i16*, !dbg !8416
  call void @llvm.dbg.value(metadata i16* %32, metadata !8385, metadata !DIExpression()), !dbg !8417
  %33 = bitcast i8* %1 to i16*, !dbg !8418
  call void @llvm.dbg.value(metadata i16* %33, metadata !8388, metadata !DIExpression()), !dbg !8417
  call void @llvm.dbg.value(metadata i32 0, metadata !8380, metadata !DIExpression()), !dbg !8392
  call void @llvm.dbg.value(metadata i32 0, metadata !8380, metadata !DIExpression()), !dbg !8392
  %34 = icmp ult i32 %2, 2, !dbg !8419
  br i1 %34, label %65, label %35, !dbg !8422

35:                                               ; preds = %31
  %36 = lshr i32 %2, 1
  br label %37, !dbg !8422

37:                                               ; preds = %37, %35
  %38 = phi i32 [ 0, %35 ], [ %44, %37 ]
  call void @llvm.dbg.value(metadata i32 %38, metadata !8380, metadata !DIExpression()), !dbg !8392
  %39 = getelementptr inbounds i16, i16* %32, i32 %38, !dbg !8423
  %40 = load i16, i16* %39, align 2, !dbg !8423
  %41 = getelementptr inbounds i16, i16* %33, i32 %38, !dbg !8426
  %42 = load i16, i16* %41, align 2, !dbg !8426
  %43 = icmp eq i16 %40, %42, !dbg !8427
  %44 = add nuw nsw i32 %38, 1, !dbg !8428
  call void @llvm.dbg.value(metadata i32 %44, metadata !8380, metadata !DIExpression()), !dbg !8392
  %45 = xor i1 %43, true, !dbg !8429
  %46 = icmp eq i32 %44, %36
  %47 = select i1 %45, i1 true, i1 %46, !dbg !8429
  call void @llvm.dbg.value(metadata i32 %44, metadata !8380, metadata !DIExpression()), !dbg !8392
  br i1 %47, label %61, label %37, !dbg !8429, !llvm.loop !8430

48:                                               ; preds = %29, %48
  %49 = phi i32 [ %55, %48 ], [ 0, %29 ]
  call void @llvm.dbg.value(metadata i32 %49, metadata !8380, metadata !DIExpression()), !dbg !8392
  %50 = getelementptr inbounds i8, i8* %0, i32 %49, !dbg !8432
  %51 = load i8, i8* %50, align 1, !dbg !8432
  %52 = getelementptr inbounds i8, i8* %1, i32 %49, !dbg !8435
  %53 = load i8, i8* %52, align 1, !dbg !8435
  %54 = icmp eq i8 %51, %53, !dbg !8436
  %55 = add nuw i32 %49, 1, !dbg !8437
  call void @llvm.dbg.value(metadata i32 %55, metadata !8380, metadata !DIExpression()), !dbg !8392
  %56 = xor i1 %54, true, !dbg !8438
  %57 = icmp eq i32 %55, %2
  %58 = select i1 %56, i1 true, i1 %57, !dbg !8438
  call void @llvm.dbg.value(metadata i32 %55, metadata !8380, metadata !DIExpression()), !dbg !8392
  br i1 %58, label %63, label %48, !dbg !8438, !llvm.loop !8439

59:                                               ; preds = %15
  %60 = xor i1 %21, true, !dbg !8441
  br label %65, !dbg !8441

61:                                               ; preds = %37
  %62 = xor i1 %43, true, !dbg !8441
  br label %65, !dbg !8441

63:                                               ; preds = %48
  %64 = xor i1 %54, true, !dbg !8441
  br label %65, !dbg !8441

65:                                               ; preds = %63, %61, %59, %29, %31, %9
  %66 = phi i1 [ false, %9 ], [ false, %31 ], [ false, %29 ], [ %60, %59 ], [ %62, %61 ], [ %64, %63 ], !dbg !8392
  ret i1 %66, !dbg !8441
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Flash_ProgramData(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 section ".ram_code" !dbg !8442 {
  %4 = alloca i8*, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !8446, metadata !DIExpression()), !dbg !8457
  call void @llvm.dbg.value(metadata i8* %1, metadata !8447, metadata !DIExpression()), !dbg !8457
  call void @llvm.dbg.value(metadata i32 %2, metadata !8448, metadata !DIExpression()), !dbg !8457
  %6 = load %struct.SF_MTD_Data*, %struct.SF_MTD_Data** bitcast (i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2) to %struct.SF_MTD_Data**), align 4, !dbg !8458
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %6, metadata !8449, metadata !DIExpression()), !dbg !8457
  call void @llvm.dbg.value(metadata i8* %0, metadata !8450, metadata !DIExpression()), !dbg !8457
  %7 = bitcast i8** %4 to i8*, !dbg !8459
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #22, !dbg !8459
  call void @llvm.dbg.value(metadata i8* %1, metadata !8451, metadata !DIExpression()), !dbg !8457
  store i8* %1, i8** %4, align 4, !dbg !8460
  call void @llvm.dbg.value(metadata i32 0, metadata !8452, metadata !DIExpression()), !dbg !8457
  %8 = bitcast i32* %5 to i8*, !dbg !8461
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #22, !dbg !8461
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !8462
  %9 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 21, !dbg !8463
  store i8 1, i8* %9, align 4, !dbg !8464
  call void @llvm.dbg.value(metadata i32 %2, metadata !8448, metadata !DIExpression()), !dbg !8457
  call void @llvm.dbg.value(metadata i8* %0, metadata !8450, metadata !DIExpression()), !dbg !8457
  %10 = icmp eq i32 %2, 0, !dbg !8465
  br i1 %10, label %73, label %11, !dbg !8466

11:                                               ; preds = %3
  %12 = ptrtoint i8* %0 to i32, !dbg !8467
  call void @llvm.dbg.value(metadata i32 %12, metadata !8450, metadata !DIExpression()), !dbg !8457
  %13 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 24
  %14 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 22
  %15 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 13
  %16 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 23
  %17 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 12
  br label %18, !dbg !8466

18:                                               ; preds = %11, %66
  %19 = phi i32 [ %2, %11 ], [ %70, %66 ]
  %20 = phi i32 [ %12, %11 ], [ %71, %66 ]
  call void @llvm.dbg.value(metadata i32 %19, metadata !8448, metadata !DIExpression()), !dbg !8457
  call void @llvm.dbg.value(metadata i32 %20, metadata !8450, metadata !DIExpression()), !dbg !8457
  %21 = load i32, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !8468
  %22 = shl i32 %21, 1, !dbg !8470
  %23 = add i32 %22, -1, !dbg !8471
  %24 = and i32 %23, %20, !dbg !8472
  %25 = sub i32 %22, %24, !dbg !8473
  %26 = icmp ugt i32 %19, %25, !dbg !8474
  %27 = select i1 %26, i32 %25, i32 %19, !dbg !8475
  call void @llvm.dbg.value(metadata i32 %27, metadata !8454, metadata !DIExpression()), !dbg !8457
  call void @llvm.dbg.value(metadata i32 %27, metadata !8453, metadata !DIExpression()), !dbg !8457
  store i32 %27, i32* %5, align 4, !dbg !8476
  %28 = load i32, i32* %13, align 4, !dbg !8477
  %29 = and i32 %28, 16, !dbg !8479
  %30 = icmp eq i32 %29, 0, !dbg !8479
  br i1 %30, label %31, label %32, !dbg !8480

31:                                               ; preds = %18
  call void @SF_DAL_Dev_WriteEnable(%struct.SF_MTD_Data* noundef nonnull %6) #21, !dbg !8481
  br label %32, !dbg !8483

32:                                               ; preds = %31, %18
  %33 = load i8, i8* %14, align 1, !dbg !8484
  %34 = icmp eq i8 %33, 4, !dbg !8486
  %35 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %15, align 4, !dbg !8487
  %36 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %35, i32 0, i32 0, !dbg !8487
  %37 = load i8, i8* %36, align 1, !dbg !8487
  %38 = zext i8 %37 to i32, !dbg !8487
  br i1 %34, label %39, label %43, !dbg !8488

39:                                               ; preds = %32
  call void @llvm.dbg.value(metadata i8** %4, metadata !8451, metadata !DIExpression(DW_OP_deref)), !dbg !8457
  call void @llvm.dbg.value(metadata i32* %5, metadata !8453, metadata !DIExpression(DW_OP_deref)), !dbg !8457
  %40 = call i32 @SFI_GPRAM_Write_C1A4(i32 noundef %38, i32 noundef %20, i8** noundef nonnull %4, i32* noundef nonnull %5) #20, !dbg !8489
  call void @llvm.dbg.value(metadata i32 %40, metadata !8452, metadata !DIExpression()), !dbg !8457
  %41 = load i8*, i8** %4, align 4, !dbg !8491
  call void @llvm.dbg.value(metadata i8* %41, metadata !8451, metadata !DIExpression()), !dbg !8457
  %42 = load i32, i32* %5, align 4, !dbg !8492
  call void @llvm.dbg.value(metadata i32 %42, metadata !8453, metadata !DIExpression()), !dbg !8457
  call void @SFI_GPRAM_Write(i32 noundef 8, i8* noundef %41, i32 noundef %42) #20, !dbg !8493
  br label %47, !dbg !8494

43:                                               ; preds = %32
  %44 = call i32 @SFI_GPRAM_Write_C1A3(i32 noundef %38, i32 noundef %20) #20, !dbg !8495
  call void @llvm.dbg.value(metadata i32 %44, metadata !8452, metadata !DIExpression()), !dbg !8457
  %45 = load i8*, i8** %4, align 4, !dbg !8497
  call void @llvm.dbg.value(metadata i8* %45, metadata !8451, metadata !DIExpression()), !dbg !8457
  %46 = load i32, i32* %5, align 4, !dbg !8498
  call void @llvm.dbg.value(metadata i32 %46, metadata !8453, metadata !DIExpression()), !dbg !8457
  call void @SFI_GPRAM_Write(i32 noundef 4, i8* noundef %45, i32 noundef %46) #20, !dbg !8499
  br label %47

47:                                               ; preds = %43, %39
  %48 = phi i32 [ %40, %39 ], [ %44, %43 ], !dbg !8487
  call void @llvm.dbg.value(metadata i32 %48, metadata !8452, metadata !DIExpression()), !dbg !8457
  %49 = call i32 @SaveAndSetIRQMask() #21, !dbg !8500
  call void @llvm.dbg.value(metadata i32 %49, metadata !8456, metadata !DIExpression()), !dbg !8457
  %50 = load i8, i8* %14, align 1, !dbg !8501
  %51 = zext i8 %50 to i32, !dbg !8502
  %52 = add i32 %27, 1, !dbg !8503
  %53 = add i32 %52, %51, !dbg !8504
  store volatile i32 %53, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !8505
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !8506
  store volatile i32 %48, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !8507
  call void @SF_DAL_FLAG_BUSY_SET() #21, !dbg !8508
  %54 = load i16, i16* %16, align 2, !dbg !8509
  call void @SFI_MacEnable(i16 noundef zeroext %54) #20, !dbg !8510
  %55 = load i16, i16* %16, align 2, !dbg !8511
  call void @SFI_MacWaitReady(i16 noundef zeroext %55) #20, !dbg !8512
  call void @RestoreIRQMask(i32 noundef %49) #21, !dbg !8513
  br label %56, !dbg !8514

56:                                               ; preds = %56, %47
  %57 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %15, align 4, !dbg !8515
  %58 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %57, i32 0, i32 16, !dbg !8517
  %59 = load i8, i8* %58, align 1, !dbg !8517
  %60 = call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %6, i8 noundef zeroext %59) #21, !dbg !8518
  call void @llvm.dbg.value(metadata i32 %60, metadata !8455, metadata !DIExpression()), !dbg !8457
  %61 = load i8*, i8** %17, align 4, !dbg !8519
  %62 = load i8, i8* %61, align 1, !dbg !8521
  %63 = zext i8 %62 to i32, !dbg !8521
  %64 = and i32 %60, %63, !dbg !8522
  %65 = icmp eq i32 %64, 0, !dbg !8523
  br i1 %65, label %66, label %56, !dbg !8524, !llvm.loop !8525

66:                                               ; preds = %56
  call void @SF_DAL_FLAG_BUSY_CLR() #21, !dbg !8527
  %67 = load i32, i32* %5, align 4, !dbg !8528
  call void @llvm.dbg.value(metadata i32 %67, metadata !8453, metadata !DIExpression()), !dbg !8457
  %68 = load i8*, i8** %4, align 4, !dbg !8529
  call void @llvm.dbg.value(metadata i8* %68, metadata !8451, metadata !DIExpression()), !dbg !8457
  %69 = getelementptr inbounds i8, i8* %68, i32 %67, !dbg !8529
  call void @llvm.dbg.value(metadata i8* %69, metadata !8451, metadata !DIExpression()), !dbg !8457
  store i8* %69, i8** %4, align 4, !dbg !8529
  %70 = sub i32 %19, %27, !dbg !8530
  call void @llvm.dbg.value(metadata i32 %70, metadata !8448, metadata !DIExpression()), !dbg !8457
  %71 = add i32 %27, %20, !dbg !8531
  call void @llvm.dbg.value(metadata i32 %71, metadata !8450, metadata !DIExpression()), !dbg !8457
  %72 = icmp eq i32 %70, 0, !dbg !8465
  br i1 %72, label %73, label %18, !dbg !8466, !llvm.loop !8532

73:                                               ; preds = %66, %3
  store i8 0, i8* %9, align 4, !dbg !8534
  call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !8535
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #22, !dbg !8536
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #22, !dbg !8536
  ret void, !dbg !8536
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* nocapture readnone %0) local_unnamed_addr #0 section ".ram_code" !dbg !8537 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !8541, metadata !DIExpression()), !dbg !8543
  br label %2, !dbg !8544

2:                                                ; preds = %2, %1
  %3 = tail call i32 @retrieve_MTD_lock() #21, !dbg !8545
  call void @llvm.dbg.value(metadata i32 %3, metadata !8542, metadata !DIExpression()), !dbg !8543
  %4 = icmp eq i32 %3, 0, !dbg !8547
  br i1 %4, label %5, label %2, !dbg !8548, !llvm.loop !8549

5:                                                ; preds = %2
  ret void, !dbg !8551
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_WriteEnable(%struct.SF_MTD_Data* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !8552 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !8554, metadata !DIExpression()), !dbg !8555
  %2 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !8556
  %3 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %2, align 4, !dbg !8556
  %4 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %3, i32 0, i32 1, !dbg !8557
  %5 = load i8, i8* %4, align 1, !dbg !8557
  %6 = zext i8 %5 to i32, !dbg !8558
  tail call void @SF_DAL_Dev_Command(%struct.SF_MTD_Data* noundef %0, i32 noundef %6, i8 noundef zeroext 1) #21, !dbg !8559
  ret void, !dbg !8560
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_FLAG_BUSY_SET() local_unnamed_addr #0 section ".ram_code" !dbg !8561 {
  %1 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !8564
  call void @llvm.dbg.value(metadata i32 %1, metadata !8563, metadata !DIExpression()), !dbg !8565
  store i8 1, i8* @NOR_FLASH_BUSY, align 1, !dbg !8566
  tail call void @RestoreIRQMask(i32 noundef %1) #21, !dbg !8567
  ret void, !dbg !8568
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #0 section ".ram_code" !dbg !8569 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !8573, metadata !DIExpression()), !dbg !8577
  call void @llvm.dbg.value(metadata i8 %1, metadata !8574, metadata !DIExpression()), !dbg !8577
  %3 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !8578
  call void @llvm.dbg.value(metadata i32 %3, metadata !8575, metadata !DIExpression()), !dbg !8577
  %4 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !8579
  %5 = load i16, i16* %4, align 2, !dbg !8579
  tail call void @SFI_MacEnable(i16 noundef zeroext %5) #20, !dbg !8580
  %6 = zext i8 %1 to i32, !dbg !8581
  store volatile i32 %6, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !8582
  store volatile i32 1, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !8583
  store volatile i32 1, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !8584
  %7 = load i16, i16* %4, align 2, !dbg !8585
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %7) #20, !dbg !8586
  %8 = load volatile i32, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !8587
  %9 = lshr i32 %8, 8, !dbg !8588
  %10 = and i32 %9, 255, !dbg !8589
  call void @llvm.dbg.value(metadata i32 %10, metadata !8576, metadata !DIExpression()), !dbg !8577
  tail call void @RestoreIRQMask(i32 noundef %3) #21, !dbg !8590
  ret i32 %10, !dbg !8591
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_FLAG_BUSY_CLR() local_unnamed_addr #0 section ".ram_code" !dbg !8592 {
  %1 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !8595
  call void @llvm.dbg.value(metadata i32 %1, metadata !8594, metadata !DIExpression()), !dbg !8596
  store i8 0, i8* @NOR_FLASH_BUSY, align 1, !dbg !8597
  %2 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !8598
  %3 = and i32 %2, -513, !dbg !8598
  store volatile i32 %3, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !8598
  tail call void @RestoreIRQMask(i32 noundef %1) #21, !dbg !8601
  ret void, !dbg !8602
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* nocapture readnone %0) local_unnamed_addr #0 section ".ram_code" !dbg !8603 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !8605, metadata !DIExpression()), !dbg !8607
  %2 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !8608
  call void @llvm.dbg.value(metadata i32 %2, metadata !8606, metadata !DIExpression()), !dbg !8607
  %3 = load i1, i1* @MTDMutex, align 4, !dbg !8609
  br i1 %3, label %4, label %5, !dbg !8611

4:                                                ; preds = %1
  store i1 false, i1* @MTDMutex, align 4, !dbg !8612
  tail call void @RestoreIRQMask(i32 noundef %2) #21, !dbg !8614
  ret void, !dbg !8615

5:                                                ; preds = %1
  tail call void @RestoreIRQMask(i32 noundef %2) #21, !dbg !8616
  tail call void @Flash_ReturnReady() #21, !dbg !8618
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.103, i32 0, i32 0), i32 noundef 1449, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.SF_DAL_FreeDevLock, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.104, i32 0, i32 0)) #23, !dbg !8618
  unreachable, !dbg !8618
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Flash_ReturnReady() local_unnamed_addr #0 section ".ram_code" !dbg !8622 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* null, metadata !8624, metadata !DIExpression()), !dbg !8629
  %1 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !8630
  call void @llvm.dbg.value(metadata i32 %1, metadata !8626, metadata !DIExpression()), !dbg !8629
  %2 = tail call i32 @get_NOR_init_status() #20, !dbg !8631
  %3 = icmp eq i32 %2, 0, !dbg !8633
  br i1 %3, label %4, label %125, !dbg !8634

4:                                                ; preds = %0
  store i32 0, i32* @gNOR_ReturnReadyBegin, align 4, !dbg !8635
  %5 = load %struct.SF_MTD_Data*, %struct.SF_MTD_Data** bitcast (i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2) to %struct.SF_MTD_Data**), align 4, !dbg !8636
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %5, metadata !8624, metadata !DIExpression()), !dbg !8629
  %6 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 0, !dbg !8638
  %7 = load i32, i32* %6, align 4, !dbg !8638
  %8 = xor i32 %7, -1, !dbg !8638
  %9 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 5, !dbg !8638
  %10 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %9, align 4, !dbg !8638
  %11 = ptrtoint %struct.hal_cache_region_config_t* %10 to i32, !dbg !8638
  %12 = icmp eq i32 %8, %11, !dbg !8638
  br i1 %12, label %14, label %13, !dbg !8641

13:                                               ; preds = %4
  tail call void @Flash_ReturnReady() #21, !dbg !8642
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.103, i32 0, i32 0), i32 noundef 1069, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.Flash_ReturnReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.104, i32 0, i32 0)) #23, !dbg !8642
  unreachable, !dbg !8642

14:                                               ; preds = %4
  %15 = load i32, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !8644
  %16 = icmp ult i32 %15, 16, !dbg !8646
  br i1 %16, label %17, label %34, !dbg !8647

17:                                               ; preds = %14
  %18 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 21, !dbg !8648
  %19 = load i8, i8* %18, align 4, !dbg !8648
  %20 = icmp eq i8 %19, 1, !dbg !8649
  br i1 %20, label %21, label %34, !dbg !8650

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 13
  %23 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 12
  br label %24, !dbg !8651

24:                                               ; preds = %21, %24
  %25 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !8653
  %26 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %25, i32 0, i32 16, !dbg !8655
  %27 = load i8, i8* %26, align 1, !dbg !8655
  %28 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %5, i8 noundef zeroext %27) #21, !dbg !8656
  call void @llvm.dbg.value(metadata i32 %28, metadata !8625, metadata !DIExpression()), !dbg !8629
  %29 = load i8*, i8** %23, align 4, !dbg !8657
  %30 = load i8, i8* %29, align 1, !dbg !8659
  %31 = zext i8 %30 to i32, !dbg !8659
  %32 = and i32 %28, %31, !dbg !8660
  %33 = icmp eq i32 %32, 0, !dbg !8661
  br i1 %33, label %34, label %24, !dbg !8662, !llvm.loop !8663

34:                                               ; preds = %24, %17, %14
  %35 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !8665, !range !2809
  %36 = icmp ne i8 %35, 0, !dbg !8665
  %37 = load i8, i8* @NOR_FLASH_BUSY, align 1
  %38 = icmp eq i8 %37, 0
  %39 = select i1 %36, i1 true, i1 %38, !dbg !8667
  br i1 %39, label %116, label %40, !dbg !8667

40:                                               ; preds = %34
  %41 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 13, !dbg !8668
  %42 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %41, align 4, !dbg !8668
  %43 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %42, i32 0, i32 16, !dbg !8670
  %44 = load i8, i8* %43, align 1, !dbg !8670
  %45 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %5, i8 noundef zeroext %44) #21, !dbg !8671
  call void @llvm.dbg.value(metadata i32 %45, metadata !8625, metadata !DIExpression()), !dbg !8629
  %46 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 12, !dbg !8672
  %47 = load i8*, i8** %46, align 4, !dbg !8672
  %48 = load i8, i8* %47, align 1, !dbg !8674
  %49 = zext i8 %48 to i32, !dbg !8674
  %50 = and i32 %45, %49, !dbg !8675
  %51 = icmp eq i32 %50, 0, !dbg !8676
  br i1 %51, label %85, label %52, !dbg !8677

52:                                               ; preds = %40
  tail call void @SF_DAL_Dev_Suspend(%struct.SF_MTD_Data* noundef nonnull %5) #21, !dbg !8678
  br label %53, !dbg !8680

53:                                               ; preds = %53, %52
  %54 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %41, align 4, !dbg !8681
  %55 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %54, i32 0, i32 16, !dbg !8683
  %56 = load i8, i8* %55, align 1, !dbg !8683
  %57 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %5, i8 noundef zeroext %56) #21, !dbg !8684
  call void @llvm.dbg.value(metadata i32 %57, metadata !8625, metadata !DIExpression()), !dbg !8629
  %58 = load i8*, i8** %46, align 4, !dbg !8685
  %59 = load i8, i8* %58, align 1, !dbg !8687
  %60 = zext i8 %59 to i32, !dbg !8687
  %61 = and i32 %57, %60, !dbg !8688
  %62 = icmp eq i32 %61, 0, !dbg !8689
  br i1 %62, label %63, label %53, !dbg !8690, !llvm.loop !8691

63:                                               ; preds = %53
  %64 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 24, !dbg !8693
  %65 = load i32, i32* %64, align 4, !dbg !8693
  %66 = and i32 %65, 4, !dbg !8695
  %67 = icmp eq i32 %66, 0, !dbg !8695
  br i1 %67, label %84, label %68, !dbg !8696

68:                                               ; preds = %63
  %69 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 21, !dbg !8697
  %70 = load i8, i8* %69, align 4, !dbg !8697
  %71 = icmp eq i8 %70, 2, !dbg !8698
  br i1 %71, label %72, label %84, !dbg !8699

72:                                               ; preds = %68
  store volatile i32 6, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !8700
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !8702
  store volatile i32 1, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !8703
  %73 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 23, !dbg !8704
  %74 = load i16, i16* %73, align 2, !dbg !8704
  tail call void @SFI_MacEnable(i16 noundef zeroext %74) #20, !dbg !8705
  %75 = load i16, i16* %73, align 2, !dbg !8706
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %75) #20, !dbg !8707
  store volatile i32 -1, i32* inttoptr (i32 -1610348540 to i32*), align 4, !dbg !8708
  store volatile i32 6, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !8709
  store volatile i32 2, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !8710
  %76 = load i16, i16* %73, align 2, !dbg !8711
  tail call void @SFI_MacEnable(i16 noundef zeroext %76) #20, !dbg !8712
  %77 = load i16, i16* %73, align 2, !dbg !8713
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %77) #20, !dbg !8714
  br label %78, !dbg !8715

78:                                               ; preds = %78, %72
  store volatile i32 5, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !8716
  store volatile i32 1, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !8718
  store volatile i32 1, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !8719
  %79 = load i16, i16* %73, align 2, !dbg !8720
  tail call void @SFI_MacEnable(i16 noundef zeroext %79) #20, !dbg !8721
  %80 = load i16, i16* %73, align 2, !dbg !8722
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %80) #20, !dbg !8723
  %81 = load volatile i32, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !8724
  call void @llvm.dbg.value(metadata i32 %81, metadata !8625, metadata !DIExpression(DW_OP_constu, 8, DW_OP_shr, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !8629
  %82 = and i32 %81, 256, !dbg !8725
  %83 = icmp eq i32 %82, 0, !dbg !8725
  br i1 %83, label %84, label %78, !dbg !8725, !llvm.loop !8726

84:                                               ; preds = %78, %68, %63
  tail call void @SF_DAL_FLAG_SUS_SET() #21, !dbg !8728
  br label %116, !dbg !8729

85:                                               ; preds = %40
  %86 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 24, !dbg !8730
  %87 = load i32, i32* %86, align 4, !dbg !8730
  %88 = and i32 %87, 2, !dbg !8733
  %89 = icmp eq i32 %88, 0, !dbg !8733
  br i1 %89, label %115, label %90, !dbg !8734

90:                                               ; preds = %85
  %91 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 3, !dbg !8735
  %92 = load %struct.anon.9*, %struct.anon.9** %91, align 4, !dbg !8735
  %93 = icmp eq %struct.anon.9* %92, null, !dbg !8736
  br i1 %93, label %94, label %115, !dbg !8737

94:                                               ; preds = %90
  %95 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %41, align 4, !dbg !8738
  %96 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %95, i32 0, i32 15, !dbg !8740
  %97 = load i8, i8* %96, align 1, !dbg !8740
  %98 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %5, i8 noundef zeroext %97) #21, !dbg !8741
  call void @llvm.dbg.value(metadata i32 %98, metadata !8625, metadata !DIExpression()), !dbg !8629
  %99 = load i8*, i8** %46, align 4, !dbg !8742
  %100 = getelementptr inbounds i8, i8* %99, i32 2, !dbg !8744
  %101 = load i8, i8* %100, align 1, !dbg !8744
  %102 = zext i8 %101 to i32, !dbg !8744
  %103 = and i32 %98, %102, !dbg !8745
  %104 = icmp eq i32 %103, 0, !dbg !8746
  br i1 %104, label %105, label %115, !dbg !8747

105:                                              ; preds = %94
  %106 = getelementptr inbounds i8, i8* %99, i32 3, !dbg !8748
  %107 = load i8, i8* %106, align 1, !dbg !8748
  %108 = zext i8 %107 to i32, !dbg !8748
  %109 = and i32 %98, %108, !dbg !8749
  %110 = icmp eq i32 %109, 0, !dbg !8750
  br i1 %110, label %111, label %115, !dbg !8751

111:                                              ; preds = %105
  %112 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 23, !dbg !8752
  %113 = load i16, i16* %112, align 2, !dbg !8752
  tail call void @SFI_Dev_Command(i16 noundef zeroext %113, i32 noundef 122) #20, !dbg !8754
  %114 = load i16, i16* %112, align 2, !dbg !8755
  tail call void @SFI_Dev_Command(i16 noundef zeroext %114, i32 noundef 122) #20, !dbg !8756
  br label %115, !dbg !8757

115:                                              ; preds = %94, %105, %111, %90, %85
  tail call void @SF_DAL_FLAG_BUSY_CLR() #21, !dbg !8758
  br label %116

116:                                              ; preds = %84, %115, %34
  store i32 0, i32* @gNOR_ReturnReadyEnd, align 4, !dbg !8759
  %117 = load i32, i32* @gNOR_ReturnReadyBegin, align 4, !dbg !8760
  %118 = sub i32 0, %117, !dbg !8760
  call void @llvm.dbg.value(metadata i32 %118, metadata !8627, metadata !DIExpression()), !dbg !8761
  %119 = load i32, i32* @sf_dal_flash_return_ready_max, align 4, !dbg !8762
  %120 = icmp ult i32 %119, %118, !dbg !8764
  br i1 %120, label %121, label %122, !dbg !8765

121:                                              ; preds = %116
  store i32 %118, i32* @sf_dal_flash_return_ready_max, align 4, !dbg !8766
  br label %122, !dbg !8768

122:                                              ; preds = %121, %116
  %123 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !8769
  %124 = and i32 %123, -513, !dbg !8769
  store volatile i32 %124, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !8769
  br label %125, !dbg !8772

125:                                              ; preds = %0, %122
  tail call void @RestoreIRQMask(i32 noundef %1) #21, !dbg !8629
  ret void, !dbg !8773
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_Suspend(%struct.SF_MTD_Data* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !8774 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !8776, metadata !DIExpression()), !dbg !8780
  %2 = load i32, i32* @sf_dal_resume_time, align 4, !dbg !8781
  %3 = icmp eq i32 %2, -1, !dbg !8783
  br i1 %3, label %12, label %4, !dbg !8784

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 0, metadata !8778, metadata !DIExpression()), !dbg !8780
  %5 = sub i32 0, %2, !dbg !8785
  call void @llvm.dbg.value(metadata i32 %5, metadata !8779, metadata !DIExpression()), !dbg !8780
  %6 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 19, !dbg !8787
  %7 = load i8, i8* %6, align 4, !dbg !8787
  %8 = zext i8 %7 to i32, !dbg !8789
  %9 = icmp ugt i32 %8, %5, !dbg !8790
  br i1 %9, label %10, label %12, !dbg !8791

10:                                               ; preds = %4
  %11 = add i32 %2, %8, !dbg !8792
  tail call void @DelayAWhile_UST(i32 noundef %11) #20, !dbg !8794
  br label %12, !dbg !8795

12:                                               ; preds = %4, %10, %1
  %13 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !8796
  call void @llvm.dbg.value(metadata i32 %13, metadata !8777, metadata !DIExpression()), !dbg !8780
  %14 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !8797
  %15 = load i16, i16* %14, align 2, !dbg !8797
  %16 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !8798
  %17 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %16, align 4, !dbg !8798
  %18 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %17, i32 0, i32 2, !dbg !8799
  %19 = load i8, i8* %18, align 1, !dbg !8799
  %20 = zext i8 %19 to i32, !dbg !8800
  tail call void @SFI_Dev_Command(i16 noundef zeroext %15, i32 noundef %20) #20, !dbg !8801
  tail call void @RestoreIRQMask(i32 noundef %13) #21, !dbg !8802
  ret void, !dbg !8803
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_FLAG_SUS_SET() local_unnamed_addr #0 section ".ram_code" !dbg !8804 {
  %1 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !8807
  call void @llvm.dbg.value(metadata i32 %1, metadata !8806, metadata !DIExpression()), !dbg !8808
  store i8 1, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !8809
  %2 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !8810
  %3 = and i32 %2, -513, !dbg !8810
  store volatile i32 %3, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !8810
  tail call void @RestoreIRQMask(i32 noundef %1) #21, !dbg !8813
  ret void, !dbg !8814
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_Command(%struct.SF_MTD_Data* nocapture noundef readonly %0, i32 noundef %1, i8 noundef zeroext %2) local_unnamed_addr #0 section ".ram_code" !dbg !8815 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !8819, metadata !DIExpression()), !dbg !8823
  call void @llvm.dbg.value(metadata i32 %1, metadata !8820, metadata !DIExpression()), !dbg !8823
  call void @llvm.dbg.value(metadata i8 %2, metadata !8821, metadata !DIExpression()), !dbg !8823
  %4 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !8824
  call void @llvm.dbg.value(metadata i32 %4, metadata !8822, metadata !DIExpression()), !dbg !8823
  %5 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !8825
  %6 = load i16, i16* %5, align 2, !dbg !8825
  tail call void @SFI_MacEnable(i16 noundef zeroext %6) #20, !dbg !8826
  store volatile i32 %1, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !8827
  %7 = zext i8 %2 to i32, !dbg !8828
  store volatile i32 %7, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !8829
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !8830
  %8 = load i16, i16* %5, align 2, !dbg !8831
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %8) #20, !dbg !8832
  tail call void @RestoreIRQMask(i32 noundef %4) #21, !dbg !8833
  ret void, !dbg !8834
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @retrieve_MTD_lock() local_unnamed_addr #0 section ".ram_code" !dbg !8835 {
  %1 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !8840
  call void @llvm.dbg.value(metadata i32 %1, metadata !8839, metadata !DIExpression()), !dbg !8841
  %2 = load i1, i1* @MTDMutex, align 4, !dbg !8842
  br i1 %2, label %4, label %3, !dbg !8844

3:                                                ; preds = %0
  store i1 true, i1* @MTDMutex, align 4, !dbg !8845
  br label %4, !dbg !8847

4:                                                ; preds = %0, %3
  %5 = phi i32 [ 0, %3 ], [ -2, %0 ], !dbg !8848
  tail call void @RestoreIRQMask(i32 noundef %1) #21, !dbg !8848
  ret i32 %5, !dbg !8849
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @Flash_CheckReady() local_unnamed_addr #0 section ".ram_code" !dbg !8850 {
  %1 = load %struct.SF_MTD_Data*, %struct.SF_MTD_Data** bitcast (i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2) to %struct.SF_MTD_Data**), align 4, !dbg !8857
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !8854, metadata !DIExpression()), !dbg !8858
  call void @llvm.dbg.value(metadata i8 0, metadata !8856, metadata !DIExpression()), !dbg !8858
  %2 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 0, !dbg !8859
  %3 = load i32, i32* %2, align 4, !dbg !8859
  %4 = xor i32 %3, -1, !dbg !8859
  %5 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 5, !dbg !8859
  %6 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %5, align 4, !dbg !8859
  %7 = ptrtoint %struct.hal_cache_region_config_t* %6 to i32, !dbg !8859
  %8 = icmp eq i32 %4, %7, !dbg !8859
  br i1 %8, label %10, label %9, !dbg !8862

9:                                                ; preds = %0
  tail call void @Flash_ReturnReady() #21, !dbg !8863
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.103, i32 0, i32 0), i32 noundef 1263, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.Flash_CheckReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.104, i32 0, i32 0)) #23, !dbg !8863
  unreachable, !dbg !8863

10:                                               ; preds = %0
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !8865
  %11 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !8866
  %12 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !8866
  %13 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %12, i32 0, i32 16, !dbg !8867
  %14 = load i8, i8* %13, align 1, !dbg !8867
  %15 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %1, i8 noundef zeroext %14) #21, !dbg !8868
  call void @llvm.dbg.value(metadata i32 %15, metadata !8855, metadata !DIExpression()), !dbg !8858
  %16 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12, !dbg !8869
  %17 = load i8*, i8** %16, align 4, !dbg !8869
  %18 = load i8, i8* %17, align 1, !dbg !8871
  %19 = zext i8 %18 to i32, !dbg !8871
  %20 = and i32 %15, %19, !dbg !8872
  %21 = icmp eq i32 %20, 0, !dbg !8873
  br i1 %21, label %22, label %23, !dbg !8874

22:                                               ; preds = %10
  tail call void @SF_DAL_FLAG_BUSY_CLR() #21, !dbg !8875
  call void @llvm.dbg.value(metadata i8 1, metadata !8856, metadata !DIExpression()), !dbg !8858
  br label %23, !dbg !8877

23:                                               ; preds = %22, %10
  call void @llvm.dbg.value(metadata i8 poison, metadata !8856, metadata !DIExpression()), !dbg !8858
  tail call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !8878
  ret i1 %21, !dbg !8879
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Flash_ResumeOperation() local_unnamed_addr #0 section ".ram_code" !dbg !8880 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !8882, metadata !DIExpression()), !dbg !8883
  %1 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !8884, !range !2809
  %2 = icmp eq i8 %1, 0, !dbg !8884
  %3 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !8884
  %4 = icmp eq i8 %3, 0, !dbg !8884
  %5 = select i1 %2, i1 true, i1 %4, !dbg !8884
  br i1 %5, label %6, label %7, !dbg !8884

6:                                                ; preds = %0
  tail call void @Flash_ReturnReady() #21, !dbg !8887
  tail call void @Flash_ReturnReady() #21, !dbg !8889
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.103, i32 0, i32 0), i32 noundef 1293, i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.Flash_ResumeOperation, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.104, i32 0, i32 0)) #23, !dbg !8889
  unreachable, !dbg !8889

7:                                                ; preds = %0
  %8 = load %struct.SF_MTD_Data*, %struct.SF_MTD_Data** bitcast (i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2) to %struct.SF_MTD_Data**), align 4, !dbg !8893
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %8, metadata !8882, metadata !DIExpression()), !dbg !8883
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef %8) #21, !dbg !8894
  ret void, !dbg !8895
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !8896 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !8898, metadata !DIExpression()), !dbg !8900
  %2 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !8901
  call void @llvm.dbg.value(metadata i32 %2, metadata !8899, metadata !DIExpression()), !dbg !8900
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !8902
  %4 = load i16, i16* %3, align 2, !dbg !8902
  %5 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !8903
  %6 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %5, align 4, !dbg !8903
  %7 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %6, i32 0, i32 3, !dbg !8904
  %8 = load i8, i8* %7, align 1, !dbg !8904
  %9 = zext i8 %8 to i32, !dbg !8905
  tail call void @SFI_Dev_Command(i16 noundef zeroext %4, i32 noundef %9) #20, !dbg !8906
  %10 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 19, !dbg !8907
  %11 = load i8, i8* %10, align 4, !dbg !8907
  %12 = icmp eq i8 %11, 0, !dbg !8909
  br i1 %12, label %14, label %13, !dbg !8910

13:                                               ; preds = %1
  store i32 0, i32* @sf_dal_resume_time, align 4, !dbg !8911
  br label %14, !dbg !8913

14:                                               ; preds = %13, %1
  tail call void @SF_DAL_FLAG_SUS_CLR() #21, !dbg !8914
  tail call void @RestoreIRQMask(i32 noundef %2) #21, !dbg !8915
  ret void, !dbg !8916
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_FLAG_SUS_CLR() local_unnamed_addr #0 section ".ram_code" !dbg !8917 {
  %1 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !8920
  call void @llvm.dbg.value(metadata i32 %1, metadata !8919, metadata !DIExpression()), !dbg !8921
  store i8 0, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !8922
  tail call void @RestoreIRQMask(i32 noundef %1) #21, !dbg !8923
  ret void, !dbg !8924
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Flash_SuspendOperation() local_unnamed_addr #0 section ".ram_code" !dbg !8925 {
  %1 = load %struct.SF_MTD_Data*, %struct.SF_MTD_Data** bitcast (i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2) to %struct.SF_MTD_Data**), align 4, !dbg !8929
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !8927, metadata !DIExpression()), !dbg !8930
  %2 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !8931, !range !2809
  %3 = icmp ne i8 %2, 0, !dbg !8931
  %4 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !8931
  %5 = icmp eq i8 %4, 0, !dbg !8931
  %6 = select i1 %3, i1 %5, i1 false, !dbg !8931
  br i1 %6, label %8, label %7, !dbg !8931

7:                                                ; preds = %0
  tail call void @Flash_ReturnReady() #21, !dbg !8934
  tail call void @Flash_ReturnReady() #21, !dbg !8936
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.103, i32 0, i32 0), i32 noundef 1313, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.Flash_SuspendOperation, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.104, i32 0, i32 0)) #23, !dbg !8936
  unreachable, !dbg !8936

8:                                                ; preds = %0
  %9 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 0, !dbg !8940
  %10 = load i32, i32* %9, align 4, !dbg !8940
  %11 = xor i32 %10, -1, !dbg !8940
  %12 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 5, !dbg !8940
  %13 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %12, align 4, !dbg !8940
  %14 = ptrtoint %struct.hal_cache_region_config_t* %13 to i32, !dbg !8940
  %15 = icmp eq i32 %11, %14, !dbg !8940
  br i1 %15, label %17, label %16, !dbg !8943

16:                                               ; preds = %8
  tail call void @Flash_ReturnReady() #21, !dbg !8944
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.103, i32 0, i32 0), i32 noundef 1315, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.Flash_SuspendOperation, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.104, i32 0, i32 0)) #23, !dbg !8944
  unreachable, !dbg !8944

17:                                               ; preds = %8
  tail call void @SF_DAL_Dev_Suspend(%struct.SF_MTD_Data* noundef nonnull %1) #21, !dbg !8946
  %18 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13
  %19 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12
  br label %20, !dbg !8947

20:                                               ; preds = %20, %17
  %21 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %18, align 4, !dbg !8948
  %22 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %21, i32 0, i32 16, !dbg !8950
  %23 = load i8, i8* %22, align 1, !dbg !8950
  %24 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %1, i8 noundef zeroext %23) #21, !dbg !8951
  call void @llvm.dbg.value(metadata i32 %24, metadata !8928, metadata !DIExpression()), !dbg !8930
  %25 = load i8*, i8** %19, align 4, !dbg !8952
  %26 = load i8, i8* %25, align 1, !dbg !8954
  %27 = zext i8 %26 to i32, !dbg !8954
  %28 = and i32 %24, %27, !dbg !8955
  %29 = icmp eq i32 %28, 0, !dbg !8956
  br i1 %29, label %30, label %20, !dbg !8957, !llvm.loop !8958

30:                                               ; preds = %20
  tail call void @SF_DAL_FLAG_SUS_SET() #21, !dbg !8960
  ret void, !dbg !8961
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SF_DAL_CreateDevLock(%struct.SF_MTD_Data* nocapture %0) local_unnamed_addr #10 section ".ram_code" !dbg !8962 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !8964, metadata !DIExpression()), !dbg !8965
  ret void, !dbg !8966
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @SF_DAL_Init_MXIC(%struct.NOR_MTD_Driver* nocapture readnone %0, %struct.SF_MTD_Data* nocapture noundef %1) local_unnamed_addr #7 !dbg !8967 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* undef, metadata !8990, metadata !DIExpression()), !dbg !8993
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !8991, metadata !DIExpression()), !dbg !8993
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12, !dbg !8994
  %4 = load i8*, i8** %3, align 4, !dbg !8994
  call void @llvm.dbg.value(metadata i8* %4, metadata !8992, metadata !DIExpression()), !dbg !8993
  store i8 1, i8* %4, align 1, !dbg !8995
  %5 = getelementptr inbounds i8, i8* %4, i32 1, !dbg !8996
  store i8 2, i8* %5, align 1, !dbg !8997
  %6 = getelementptr inbounds i8, i8* %4, i32 2, !dbg !8998
  store i8 8, i8* %6, align 1, !dbg !8999
  %7 = getelementptr inbounds i8, i8* %4, i32 3, !dbg !9000
  store i8 4, i8* %7, align 1, !dbg !9001
  %8 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !9002
  store i8 60, i8* %8, align 1, !dbg !9003
  %9 = getelementptr inbounds i8, i8* %4, i32 5, !dbg !9004
  store i8 -128, i8* %9, align 1, !dbg !9005
  %10 = getelementptr inbounds i8, i8* %4, i32 7, !dbg !9006
  store i8 96, i8* %10, align 1, !dbg !9007
  %11 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !9008
  %12 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !9008
  %13 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %12, i32 0, i32 15, !dbg !9009
  store i8 43, i8* %13, align 1, !dbg !9010
  %14 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !9011
  %15 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %14, i32 0, i32 13, !dbg !9012
  store i8 43, i8* %15, align 1, !dbg !9013
  %16 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !9014
  %17 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %16, i32 0, i32 14, !dbg !9015
  store i8 47, i8* %17, align 1, !dbg !9016
  %18 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !9017
  %19 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %18, i32 0, i32 11, !dbg !9018
  store i8 5, i8* %19, align 1, !dbg !9019
  %20 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !9020
  %21 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %20, i32 0, i32 12, !dbg !9021
  store i8 1, i8* %21, align 1, !dbg !9022
  %22 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !9023
  %23 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %22, i32 0, i32 17, !dbg !9024
  store i8 43, i8* %23, align 1, !dbg !9025
  %24 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 19, !dbg !9026
  store i8 22, i8* %24, align 4, !dbg !9027
  %25 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 20, i32 1, !dbg !9028
  %26 = load i8, i8* %25, align 1, !dbg !9028
  %27 = icmp eq i8 %26, 32, !dbg !9030
  br i1 %27, label %28, label %49, !dbg !9031

28:                                               ; preds = %2
  %29 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 20, i32 2, !dbg !9032
  %30 = load i8, i8* %29, align 1, !dbg !9032
  %31 = icmp eq i8 %30, 24, !dbg !9033
  br i1 %31, label %32, label %41, !dbg !9034

32:                                               ; preds = %28
  %33 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !9035
  %34 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %33, i32 0, i32 2, !dbg !9037
  store i8 117, i8* %34, align 1, !dbg !9038
  %35 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !9039
  %36 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %35, i32 0, i32 3, !dbg !9040
  store i8 122, i8* %36, align 1, !dbg !9041
  %37 = load i8, i8* %25, align 1, !dbg !9042
  %38 = icmp eq i8 %37, 32, !dbg !9044
  br i1 %38, label %39, label %49, !dbg !9045

39:                                               ; preds = %32
  %40 = load i8, i8* %29, align 1, !dbg !9047
  br label %41, !dbg !9047

41:                                               ; preds = %28, %39
  %42 = phi i8 [ %40, %39 ], [ %30, %28 ], !dbg !9047
  %43 = icmp eq i8 %42, 22, !dbg !9048
  br i1 %43, label %44, label %49, !dbg !9049

44:                                               ; preds = %41
  %45 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !9050
  %46 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %45, i32 0, i32 2, !dbg !9052
  store i8 117, i8* %46, align 1, !dbg !9053
  %47 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !9054
  %48 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %47, i32 0, i32 3, !dbg !9055
  store i8 122, i8* %48, align 1, !dbg !9056
  br label %49, !dbg !9057

49:                                               ; preds = %2, %44, %41, %32
  %50 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 28, !dbg !9058
  store i32 (i8*)* @SF_DAL_UnlockBlock_MXIC, i32 (i8*)** %50, align 4, !dbg !9059
  ret i32 0, !dbg !9060
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_UnlockBlock_MXIC(i8* nocapture noundef readonly %0) #0 section ".ram_code" !dbg !9061 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !9063, metadata !DIExpression()), !dbg !9067
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !9068
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !9064, metadata !DIExpression()), !dbg !9067
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #22, !dbg !9069
  %4 = getelementptr inbounds i8, i8* %0, i32 193, !dbg !9070
  %5 = load i8, i8* %4, align 1, !dbg !9072
  %6 = icmp eq i8 %5, -62, !dbg !9073
  br i1 %6, label %7, label %15, !dbg !9074

7:                                                ; preds = %1
  %8 = getelementptr inbounds i8, i8* %0, i32 194, !dbg !9075
  %9 = load i8, i8* %8, align 1, !dbg !9075
  %10 = icmp eq i8 %9, 32, !dbg !9076
  br i1 %10, label %11, label %15, !dbg !9077

11:                                               ; preds = %7
  %12 = getelementptr inbounds i8, i8* %0, i32 195, !dbg !9078
  %13 = load i8, i8* %12, align 1, !dbg !9078
  %14 = icmp eq i8 %13, 22, !dbg !9079
  br i1 %14, label %48, label %15, !dbg !9080

15:                                               ; preds = %11, %7, %1
  %16 = getelementptr inbounds i8, i8* %0, i32 198, !dbg !9081
  %17 = bitcast i8* %16 to i16*, !dbg !9081
  %18 = load i16, i16* %17, align 2, !dbg !9081
  %19 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !9082
  %20 = bitcast i8* %19 to %struct.SF_MTD_CMD**, !dbg !9082
  %21 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %20, align 4, !dbg !9082
  %22 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %21, i32 0, i32 1, !dbg !9083
  %23 = load i8, i8* %22, align 1, !dbg !9083
  %24 = zext i8 %23 to i32, !dbg !9084
  tail call void @SFI_Dev_Command(i16 noundef zeroext %18, i32 noundef %24) #20, !dbg !9085
  tail call void @SF_DAL_Dev_WaitReady_EMIINIT(%struct.SF_MTD_Data* noundef nonnull %3) #21, !dbg !9086
  %25 = load i16, i16* %17, align 2, !dbg !9087
  %26 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %20, align 4, !dbg !9088
  %27 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %26, i32 0, i32 11, !dbg !9089
  call void @llvm.dbg.value(metadata i8* %2, metadata !9066, metadata !DIExpression(DW_OP_deref)), !dbg !9067
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %25, i8* noundef nonnull %27, i8* noundef nonnull %2, i16 noundef zeroext 1, i16 noundef zeroext 1) #20, !dbg !9090
  %28 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %20, align 4, !dbg !9091
  %29 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %28, i32 0, i32 12, !dbg !9092
  %30 = load i8, i8* %29, align 1, !dbg !9092
  %31 = zext i8 %30 to i32, !dbg !9093
  call void @llvm.dbg.value(metadata i32 %31, metadata !9065, metadata !DIExpression()), !dbg !9067
  %32 = shl nuw nsw i32 %31, 8, !dbg !9094
  %33 = load i8, i8* %2, align 1, !dbg !9095
  call void @llvm.dbg.value(metadata i8 %33, metadata !9066, metadata !DIExpression()), !dbg !9067
  %34 = zext i8 %33 to i32, !dbg !9095
  %35 = getelementptr inbounds i8, i8* %0, i32 172, !dbg !9096
  %36 = bitcast i8* %35 to i8**, !dbg !9096
  %37 = load i8*, i8** %36, align 4, !dbg !9096
  %38 = getelementptr inbounds i8, i8* %37, i32 4, !dbg !9097
  %39 = load i8, i8* %38, align 1, !dbg !9097
  %40 = getelementptr inbounds i8, i8* %37, i32 5, !dbg !9098
  %41 = load i8, i8* %40, align 1, !dbg !9098
  %42 = or i8 %41, %39, !dbg !9099
  %43 = zext i8 %42 to i32, !dbg !9099
  %44 = xor i32 %43, -1, !dbg !9100
  %45 = and i32 %44, %34, !dbg !9101
  %46 = or i32 %45, %32, !dbg !9102
  call void @llvm.dbg.value(metadata i32 %46, metadata !9065, metadata !DIExpression()), !dbg !9067
  %47 = load i16, i16* %17, align 2, !dbg !9103
  call void @SFI_Dev_Command(i16 noundef zeroext %47, i32 noundef %46) #20, !dbg !9104
  call void @SF_DAL_Dev_WaitReady_EMIINIT(%struct.SF_MTD_Data* noundef nonnull %3) #21, !dbg !9105
  br label %48, !dbg !9106

48:                                               ; preds = %11, %15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #22, !dbg !9107
  ret i32 0, !dbg !9107
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_WaitReady_EMIINIT(%struct.SF_MTD_Data* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !9108 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !9110, metadata !DIExpression()), !dbg !9112
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #22, !dbg !9113
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23
  %4 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13
  %5 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 12
  br label %6, !dbg !9114

6:                                                ; preds = %6, %1
  %7 = load i16, i16* %3, align 2, !dbg !9115
  %8 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %4, align 4, !dbg !9117
  %9 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %8, i32 0, i32 16, !dbg !9118
  call void @llvm.dbg.value(metadata i8* %2, metadata !9111, metadata !DIExpression(DW_OP_deref)), !dbg !9112
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %7, i8* noundef nonnull %9, i8* noundef nonnull %2, i16 noundef zeroext 1, i16 noundef zeroext 1) #20, !dbg !9119
  %10 = load i8, i8* %2, align 1, !dbg !9120
  call void @llvm.dbg.value(metadata i8 %10, metadata !9111, metadata !DIExpression()), !dbg !9112
  %11 = load i8*, i8** %5, align 4, !dbg !9121
  %12 = load i8, i8* %11, align 1, !dbg !9122
  %13 = and i8 %12, %10, !dbg !9123
  %14 = icmp eq i8 %13, 0, !dbg !9124
  br i1 %14, label %15, label %6, !dbg !9125, !llvm.loop !9126

15:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #22, !dbg !9128
  ret void, !dbg !9128
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @SF_DAL_Init_WINBOND(%struct.NOR_MTD_Driver* nocapture readnone %0, %struct.SF_MTD_Data* nocapture noundef %1) local_unnamed_addr #7 !dbg !9129 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* undef, metadata !9131, metadata !DIExpression()), !dbg !9134
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !9132, metadata !DIExpression()), !dbg !9134
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12, !dbg !9135
  %4 = load i8*, i8** %3, align 4, !dbg !9135
  call void @llvm.dbg.value(metadata i8* %4, metadata !9133, metadata !DIExpression()), !dbg !9134
  store i8 1, i8* %4, align 1, !dbg !9136
  %5 = getelementptr inbounds i8, i8* %4, i32 1, !dbg !9137
  store i8 2, i8* %5, align 1, !dbg !9138
  %6 = getelementptr inbounds i8, i8* %4, i32 2, !dbg !9139
  store i8 -128, i8* %6, align 1, !dbg !9140
  %7 = getelementptr inbounds i8, i8* %4, i32 3, !dbg !9141
  store i8 -128, i8* %7, align 1, !dbg !9142
  %8 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !9143
  store i8 60, i8* %8, align 1, !dbg !9144
  %9 = getelementptr inbounds i8, i8* %4, i32 5, !dbg !9145
  store i8 -128, i8* %9, align 1, !dbg !9146
  %10 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !9147
  %11 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !9147
  %12 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %11, i32 0, i32 10, !dbg !9148
  store i8 -97, i8* %12, align 1, !dbg !9149
  %13 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !9150
  %14 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %13, i32 0, i32 15, !dbg !9151
  store i8 53, i8* %14, align 1, !dbg !9152
  %15 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !9153
  %16 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %15, i32 0, i32 13, !dbg !9154
  store i8 53, i8* %16, align 1, !dbg !9155
  %17 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !9156
  %18 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %17, i32 0, i32 11, !dbg !9157
  store i8 5, i8* %18, align 1, !dbg !9158
  %19 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !9159
  %20 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %19, i32 0, i32 12, !dbg !9160
  store i8 1, i8* %20, align 1, !dbg !9161
  %21 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !9162
  %22 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %21, i32 0, i32 2, !dbg !9163
  store i8 117, i8* %22, align 1, !dbg !9164
  %23 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !9165
  %24 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %23, i32 0, i32 3, !dbg !9166
  store i8 122, i8* %24, align 1, !dbg !9167
  %25 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 19, !dbg !9168
  store i8 22, i8* %25, align 4, !dbg !9169
  %26 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 28, !dbg !9170
  store i32 (i8*)* @SF_DAL_UnlockBlock_None, i32 (i8*)** %26, align 4, !dbg !9171
  ret i32 0, !dbg !9172
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SF_DAL_Init_WINBOND_OTP(%struct.NOR_MTD_Driver* nocapture readnone %0, %struct.SF_MTD_Data* nocapture readnone %1) local_unnamed_addr #10 !dbg !9173 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* undef, metadata !9175, metadata !DIExpression()), !dbg !9177
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !9176, metadata !DIExpression()), !dbg !9177
  ret i32 0, !dbg !9178
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_Init_Common(%struct.NOR_MTD_Driver* nocapture noundef writeonly %0, %struct.SF_MTD_Data* nocapture noundef %1) local_unnamed_addr #0 !dbg !9179 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* %0, metadata !9181, metadata !DIExpression()), !dbg !9183
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !9182, metadata !DIExpression()), !dbg !9183
  %3 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 0, !dbg !9184
  store i32 (i8*, i8*)* @SF_DAL_MountDevice, i32 (i8*, i8*)** %3, align 4, !dbg !9185
  %4 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 1, !dbg !9186
  store i32 (i8*)* @SF_DAL_ShutDown, i32 (i8*)** %4, align 4, !dbg !9187
  %5 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 2, !dbg !9188
  store i8* (i8*, i32, i32)* @MapWindow, i8* (i8*, i32, i32)** %5, align 4, !dbg !9189
  %6 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 3, !dbg !9190
  store i32 (i8*, i32)* @SF_DAL_EraseBlock, i32 (i8*, i32)** %6, align 4, !dbg !9191
  %7 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 4, !dbg !9192
  store i32 (i8*, i8*, i8*, i32)* @SF_DAL_ProgramData, i32 (i8*, i8*, i8*, i32)** %7, align 4, !dbg !9193
  %8 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 5, !dbg !9194
  store i32 (i8*, i32)* @SF_DAL_NonBlockEraseBlock, i32 (i8*, i32)** %8, align 4, !dbg !9195
  %9 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 6, !dbg !9196
  store i32 (i8*, i32)* @SF_DAL_CheckDeviceReady, i32 (i8*, i32)** %9, align 4, !dbg !9197
  %10 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 7, !dbg !9198
  store i32 (i8*, i32)* @SF_DAL_SuspendErase, i32 (i8*, i32)** %10, align 4, !dbg !9199
  %11 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 8, !dbg !9200
  store i32 (i8*, i32)* @SF_DAL_ResumeErase, i32 (i8*, i32)** %11, align 4, !dbg !9201
  %12 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 9, !dbg !9202
  store i32 (i8*, i32)* null, i32 (i8*, i32)** %12, align 4, !dbg !9203
  %13 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 10, !dbg !9204
  store i32 (i8*, i32, i32, i8*, i32)* null, i32 (i8*, i32, i32, i8*, i32)** %13, align 4, !dbg !9205
  %14 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 11, !dbg !9206
  store i32 (i8*, i32*)* null, i32 (i8*, i32*)** %14, align 4, !dbg !9207
  %15 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 12, !dbg !9208
  store i32 (i8*, i8*, i32)* @SF_DAL_LockEraseBlkAddr, i32 (i8*, i8*, i32)** %15, align 4, !dbg !9209
  %16 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 13, !dbg !9210
  store i1 (i8*, i32)* null, i1 (i8*, i32)** %16, align 4, !dbg !9211
  %17 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 14, !dbg !9212
  store i32 (i8*, i32, i8*)* @SF_DAL_IOCtrl, i32 (i8*, i32, i8*)** %17, align 4, !dbg !9213
  %18 = tail call i32 @custom_get_NORFLASH_Size() #20, !dbg !9214
  %19 = icmp ugt i32 %18, 16777216, !dbg !9216
  %20 = select i1 %19, i8 4, i8 3, !dbg !9217
  %21 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 22, !dbg !9218
  store i8 %20, i8* %21, align 1, !dbg !9220
  %22 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !9221
  %23 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !9221
  %24 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %23, i32 0, i32 17, !dbg !9222
  store i8 0, i8* %24, align 1, !dbg !9223
  %25 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !9224
  %26 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %25, i32 0, i32 10, !dbg !9225
  store i8 -81, i8* %26, align 1, !dbg !9226
  %27 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !9227
  %28 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %27, i32 0, i32 9, !dbg !9228
  store i8 -97, i8* %28, align 1, !dbg !9229
  %29 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !9230
  %30 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %29, i32 0, i32 0, !dbg !9231
  store i8 2, i8* %30, align 1, !dbg !9232
  %31 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !9233
  %32 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %31, i32 0, i32 6, !dbg !9234
  store i8 32, i8* %32, align 1, !dbg !9235
  %33 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !9236
  %34 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %33, i32 0, i32 7, !dbg !9237
  store i8 82, i8* %34, align 1, !dbg !9238
  %35 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !9239
  %36 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %35, i32 0, i32 8, !dbg !9240
  store i8 -40, i8* %36, align 1, !dbg !9241
  %37 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !9242
  %38 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %37, i32 0, i32 2, !dbg !9243
  store i8 -80, i8* %38, align 1, !dbg !9244
  %39 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !9245
  %40 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %39, i32 0, i32 3, !dbg !9246
  store i8 48, i8* %40, align 1, !dbg !9247
  %41 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !9248
  %42 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %41, i32 0, i32 1, !dbg !9249
  store i8 6, i8* %42, align 1, !dbg !9250
  %43 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !9251
  %44 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %43, i32 0, i32 18, !dbg !9252
  store i8 -71, i8* %44, align 1, !dbg !9253
  %45 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !9254
  %46 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %45, i32 0, i32 19, !dbg !9255
  store i8 -85, i8* %46, align 1, !dbg !9256
  %47 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !9257
  %48 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %47, i32 0, i32 16, !dbg !9258
  store i8 5, i8* %48, align 1, !dbg !9259
  %49 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 15, !dbg !9260
  store i16 0, i16* %49, align 4, !dbg !9261
  %50 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 3, !dbg !9262
  store %struct.anon.9* null, %struct.anon.9** %50, align 4, !dbg !9263
  %51 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 2, !dbg !9264
  store %struct.anon.9* null, %struct.anon.9** %51, align 4, !dbg !9265
  %52 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 4, !dbg !9266
  store i8 0, i8* %52, align 4, !dbg !9267
  %53 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 19, !dbg !9268
  store i8 5, i8* %53, align 4, !dbg !9269
  ret i32 0, !dbg !9270
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_MountDevice(i8* nocapture noundef readonly %0, i8* nocapture noundef %1) #0 section ".ram_code" !dbg !9271 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9273, metadata !DIExpression()), !dbg !9291
  call void @llvm.dbg.value(metadata i8* %1, metadata !9274, metadata !DIExpression()), !dbg !9291
  call void @llvm.dbg.value(metadata i8* %1, metadata !9275, metadata !DIExpression()), !dbg !9291
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !9292
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !9288, metadata !DIExpression()), !dbg !9291
  call void @llvm.dbg.value(metadata i32 0, metadata !9289, metadata !DIExpression()), !dbg !9291
  %4 = bitcast i8* %1 to i32*, !dbg !9293
  store i32 0, i32* %4, align 4, !dbg !9294
  %5 = getelementptr inbounds i8, i8* %0, i32 20
  %6 = bitcast i8* %5 to %struct.hal_cache_region_config_t**
  call void @llvm.dbg.value(metadata i32 0, metadata !9289, metadata !DIExpression()), !dbg !9291
  %7 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %6, align 4, !dbg !9295
  %8 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %7, i32 0, i32 0, !dbg !9296
  %9 = load i32, i32* %8, align 4, !dbg !9296
  %10 = icmp eq i32 %9, 0, !dbg !9297
  br i1 %10, label %34, label %11, !dbg !9298

11:                                               ; preds = %2
  %12 = getelementptr inbounds i8, i8* %1, i32 4
  %13 = bitcast i8* %12 to [8 x i32]*
  %14 = getelementptr inbounds i8, i8* %1, i32 68
  %15 = bitcast i8* %14 to [8 x i32]*
  br label %16, !dbg !9298

16:                                               ; preds = %11, %16
  %17 = phi i32 [ %9, %11 ], [ %32, %16 ]
  %18 = phi i32 [ 0, %11 ], [ %29, %16 ]
  call void @llvm.dbg.value(metadata i32 %18, metadata !9289, metadata !DIExpression()), !dbg !9291
  %19 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i32 0, i32 %18, !dbg !9299
  store i32 %17, i32* %19, align 4, !dbg !9301
  %20 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %6, align 4, !dbg !9302
  %21 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %20, i32 %18, i32 1, !dbg !9303
  %22 = load i32, i32* %21, align 4, !dbg !9303
  %23 = getelementptr inbounds [8 x i32], [8 x i32]* %15, i32 0, i32 %18, !dbg !9304
  store i32 %22, i32* %23, align 4, !dbg !9305
  %24 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %6, align 4, !dbg !9306
  %25 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %24, i32 %18, i32 1, !dbg !9307
  %26 = load i32, i32* %25, align 4, !dbg !9307
  %27 = load i32, i32* %4, align 4, !dbg !9308
  %28 = add i32 %27, %26, !dbg !9308
  store i32 %28, i32* %4, align 4, !dbg !9308
  %29 = add i32 %18, 1, !dbg !9309
  call void @llvm.dbg.value(metadata i32 %29, metadata !9289, metadata !DIExpression()), !dbg !9291
  %30 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %6, align 4, !dbg !9295
  %31 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %30, i32 %29, i32 0, !dbg !9296
  %32 = load i32, i32* %31, align 4, !dbg !9296
  %33 = icmp eq i32 %32, 0, !dbg !9297
  br i1 %33, label %34, label %16, !dbg !9298, !llvm.loop !9310

34:                                               ; preds = %16, %2
  %35 = phi i32 [ 0, %2 ], [ %29, %16 ], !dbg !9291
  %36 = getelementptr inbounds i8, i8* %1, i32 100, !dbg !9312
  %37 = bitcast i8* %36 to i32*, !dbg !9312
  store i32 %35, i32* %37, align 4, !dbg !9313
  %38 = getelementptr inbounds i8, i8* %1, i32 104, !dbg !9314
  %39 = bitcast i8* %38 to i16*, !dbg !9314
  store i16 512, i16* %39, align 4, !dbg !9315
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef nonnull %3) #21, !dbg !9316
  br label %40, !dbg !9317

40:                                               ; preds = %40, %34
  %41 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef %0, i32 undef) #21, !dbg !9318
  call void @llvm.dbg.value(metadata i32 %41, metadata !9290, metadata !DIExpression()), !dbg !9291
  %42 = icmp eq i32 %41, -121, !dbg !9320
  br i1 %42, label %40, label %43, !dbg !9321, !llvm.loop !9322

43:                                               ; preds = %40
  ret i32 0, !dbg !9324
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_ShutDown(i8* nocapture noundef %0) #0 section ".ram_code" !dbg !9325 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9327, metadata !DIExpression()), !dbg !9331
  %2 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !9332
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %2, metadata !9328, metadata !DIExpression()), !dbg !9331
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !9333
  %3 = getelementptr inbounds i8, i8* %0, i32 176
  %4 = bitcast i8* %3 to %struct.SF_MTD_CMD**
  %5 = getelementptr inbounds i8, i8* %0, i32 172
  %6 = bitcast i8* %5 to i8**
  br label %7, !dbg !9334

7:                                                ; preds = %25, %1
  %8 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !9335
  call void @llvm.dbg.value(metadata i32 %8, metadata !9330, metadata !DIExpression()), !dbg !9331
  %9 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !9337, !range !2809
  %10 = icmp eq i8 %9, 0, !dbg !9337
  br i1 %10, label %12, label %11, !dbg !9339

11:                                               ; preds = %7
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef %2) #21, !dbg !9340
  store i32 -1, i32* @gNOR_ReturnReadyEnd, align 4, !dbg !9342
  br label %12, !dbg !9343

12:                                               ; preds = %11, %7
  %13 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %4, align 4, !dbg !9344
  %14 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %13, i32 0, i32 16, !dbg !9345
  %15 = load i8, i8* %14, align 1, !dbg !9345
  %16 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef %2, i8 noundef zeroext %15) #21, !dbg !9346
  call void @llvm.dbg.value(metadata i32 %16, metadata !9329, metadata !DIExpression()), !dbg !9331
  %17 = load i8*, i8** %6, align 4, !dbg !9347
  %18 = load i8, i8* %17, align 1, !dbg !9349
  %19 = zext i8 %18 to i32, !dbg !9349
  %20 = and i32 %16, %19, !dbg !9350
  %21 = icmp eq i32 %20, 0, !dbg !9351
  br i1 %21, label %22, label %25, !dbg !9352

22:                                               ; preds = %12
  tail call void @SF_DAL_FLAG_BUSY_CLR() #21, !dbg !9353
  tail call void @RestoreIRQMask(i32 noundef %8) #21, !dbg !9355
  %23 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !9356
  %24 = bitcast i8* %23 to i8**, !dbg !9356
  store i8* null, i8** %24, align 4, !dbg !9357
  tail call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !9358
  ret i32 0, !dbg !9359

25:                                               ; preds = %12
  tail call void @RestoreIRQMask(i32 noundef %8) #21, !dbg !9360
  br label %7, !dbg !9334, !llvm.loop !9362
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_EraseBlock(i8* nocapture noundef %0, i32 noundef %1) #0 section ".ram_code" !dbg !9364 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9366, metadata !DIExpression()), !dbg !9380
  call void @llvm.dbg.value(metadata i32 %1, metadata !9367, metadata !DIExpression()), !dbg !9380
  call void @llvm.dbg.value(metadata i32 0, metadata !9368, metadata !DIExpression()), !dbg !9380
  call void @llvm.dbg.value(metadata i32 1, metadata !9372, metadata !DIExpression()), !dbg !9380
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !9381
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !9373, metadata !DIExpression()), !dbg !9380
  call void @llvm.dbg.value(metadata i32 0, metadata !9374, metadata !DIExpression()), !dbg !9380
  %4 = bitcast i8* %0 to i32*, !dbg !9382
  %5 = load i32, i32* %4, align 4, !dbg !9382
  %6 = xor i32 %5, -1, !dbg !9382
  %7 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !9382
  %8 = bitcast i8* %7 to %struct.hal_cache_region_config_t**, !dbg !9382
  %9 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %8, align 4, !dbg !9382
  %10 = ptrtoint %struct.hal_cache_region_config_t* %9 to i32, !dbg !9382
  %11 = icmp eq i32 %6, %10, !dbg !9382
  br i1 %11, label %13, label %12, !dbg !9385

12:                                               ; preds = %2
  tail call void @Flash_ReturnReady() #21, !dbg !9386
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.103, i32 0, i32 0), i32 noundef 2829, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.SF_DAL_EraseBlock, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.104, i32 0, i32 0)) #23, !dbg !9386
  unreachable, !dbg !9386

13:                                               ; preds = %2
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !9388
  %14 = getelementptr inbounds i8, i8* %0, i32 196, !dbg !9389
  store i8 2, i8* %14, align 4, !dbg !9390
  call void @llvm.dbg.value(metadata i32 %19, metadata !9374, metadata !DIExpression()), !dbg !9380
  call void @llvm.dbg.value(metadata i32 %1, metadata !9367, metadata !DIExpression(DW_OP_constu, 16777215, DW_OP_and, DW_OP_stack_value)), !dbg !9380
  br label %15, !dbg !9391

15:                                               ; preds = %15, %13
  %16 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef %0, i32 undef) #21, !dbg !9392
  call void @llvm.dbg.value(metadata i32 %16, metadata !9368, metadata !DIExpression()), !dbg !9380
  %17 = icmp eq i32 %16, -121, !dbg !9394
  br i1 %17, label %15, label %18, !dbg !9395, !llvm.loop !9396

18:                                               ; preds = %15
  %19 = lshr i32 %1, 24, !dbg !9398
  %20 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !9399
  %21 = bitcast i8* %20 to i8**, !dbg !9399
  %22 = load i8*, i8** %21, align 4, !dbg !9399
  %23 = ptrtoint i8* %22 to i32, !dbg !9400
  %24 = tail call i32 @CMEM_BlockSize(i32 noundef %23) #20, !dbg !9401
  call void @llvm.dbg.value(metadata i32 %24, metadata !9369, metadata !DIExpression()), !dbg !9380
  call void @llvm.dbg.value(metadata i32 %24, metadata !9370, metadata !DIExpression()), !dbg !9380
  %25 = getelementptr inbounds i8, i8* %0, i32 186, !dbg !9402
  %26 = bitcast i8* %25 to i16*, !dbg !9402
  %27 = load i16, i16* %26, align 2, !dbg !9402
  %28 = zext i16 %27 to i32, !dbg !9403
  call void @llvm.dbg.value(metadata i32 %28, metadata !9375, metadata !DIExpression()), !dbg !9404
  %29 = lshr i32 %24, 10, !dbg !9405
  call void @llvm.dbg.value(metadata i32 %29, metadata !9378, metadata !DIExpression()), !dbg !9404
  %30 = and i32 %29, %28, !dbg !9406
  %31 = and i32 %24, 1024
  %32 = or i32 %30, %31, !dbg !9408
  %33 = icmp eq i32 %32, 0, !dbg !9408
  call void @llvm.dbg.value(metadata i32 0, metadata !9379, metadata !DIExpression()), !dbg !9404
  call void @llvm.dbg.value(metadata i32 %29, metadata !9378, metadata !DIExpression()), !dbg !9404
  call void @llvm.dbg.value(metadata i32 %28, metadata !9375, metadata !DIExpression()), !dbg !9404
  call void @llvm.dbg.value(metadata i32 1, metadata !9372, metadata !DIExpression()), !dbg !9380
  call void @llvm.dbg.value(metadata i32 %24, metadata !9370, metadata !DIExpression()), !dbg !9380
  br i1 %33, label %34, label %51, !dbg !9408

34:                                               ; preds = %18, %34
  %35 = phi i32 [ %48, %34 ], [ 0, %18 ]
  %36 = phi i32 [ %47, %34 ], [ %29, %18 ]
  %37 = phi i32 [ %46, %34 ], [ %28, %18 ]
  %38 = phi i32 [ %45, %34 ], [ 1, %18 ]
  %39 = phi i32 [ %44, %34 ], [ %24, %18 ]
  call void @llvm.dbg.value(metadata i32 %35, metadata !9379, metadata !DIExpression()), !dbg !9404
  call void @llvm.dbg.value(metadata i32 %36, metadata !9378, metadata !DIExpression()), !dbg !9404
  call void @llvm.dbg.value(metadata i32 %37, metadata !9375, metadata !DIExpression()), !dbg !9404
  call void @llvm.dbg.value(metadata i32 %38, metadata !9372, metadata !DIExpression()), !dbg !9380
  call void @llvm.dbg.value(metadata i32 %39, metadata !9370, metadata !DIExpression()), !dbg !9380
  %40 = and i32 %37, 1, !dbg !9409
  %41 = icmp eq i32 %40, 0, !dbg !9409
  %42 = add i32 %35, 10, !dbg !9415
  %43 = shl nuw i32 1, %42, !dbg !9415
  %44 = select i1 %41, i32 %39, i32 %43, !dbg !9415
  %45 = select i1 %41, i32 %38, i32 %36, !dbg !9415
  call void @llvm.dbg.value(metadata i32 %45, metadata !9372, metadata !DIExpression()), !dbg !9380
  call void @llvm.dbg.value(metadata i32 %44, metadata !9370, metadata !DIExpression()), !dbg !9380
  %46 = lshr i32 %37, 1, !dbg !9416
  call void @llvm.dbg.value(metadata i32 %46, metadata !9375, metadata !DIExpression()), !dbg !9404
  %47 = lshr i32 %36, 1, !dbg !9417
  call void @llvm.dbg.value(metadata i32 %47, metadata !9378, metadata !DIExpression()), !dbg !9404
  %48 = add i32 %35, 1, !dbg !9418
  call void @llvm.dbg.value(metadata i32 %48, metadata !9379, metadata !DIExpression()), !dbg !9404
  %49 = and i32 %36, 2, !dbg !9419
  %50 = icmp eq i32 %49, 0, !dbg !9419
  br i1 %50, label %34, label %51, !dbg !9420, !llvm.loop !9421

51:                                               ; preds = %34, %18
  %52 = phi i32 [ %24, %18 ], [ %44, %34 ], !dbg !9423
  %53 = phi i32 [ 1, %18 ], [ %45, %34 ], !dbg !9424
  call void @llvm.dbg.value(metadata i32 %53, metadata !9372, metadata !DIExpression()), !dbg !9380
  call void @llvm.dbg.value(metadata i32 %52, metadata !9370, metadata !DIExpression()), !dbg !9380
  switch i32 %52, label %69 [
    i32 4096, label %54
    i32 32768, label %59
    i32 65536, label %64
  ], !dbg !9425

54:                                               ; preds = %51
  %55 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !9426
  %56 = bitcast i8* %55 to %struct.SF_MTD_CMD**, !dbg !9426
  %57 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %56, align 4, !dbg !9426
  %58 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %57, i32 0, i32 6, !dbg !9428
  br label %70, !dbg !9429

59:                                               ; preds = %51
  %60 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !9430
  %61 = bitcast i8* %60 to %struct.SF_MTD_CMD**, !dbg !9430
  %62 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %61, align 4, !dbg !9430
  %63 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %62, i32 0, i32 7, !dbg !9431
  br label %70, !dbg !9432

64:                                               ; preds = %51
  %65 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !9433
  %66 = bitcast i8* %65 to %struct.SF_MTD_CMD**, !dbg !9433
  %67 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %66, align 4, !dbg !9433
  %68 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %67, i32 0, i32 8, !dbg !9434
  br label %70, !dbg !9435

69:                                               ; preds = %51
  tail call void @Flash_ReturnReady() #21, !dbg !9436
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.103, i32 0, i32 0), i32 noundef 2897, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.SF_DAL_EraseBlock, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.104, i32 0, i32 0)) #23, !dbg !9436
  unreachable, !dbg !9436

70:                                               ; preds = %54, %59, %64
  %71 = phi i8* [ %58, %54 ], [ %63, %59 ], [ %68, %64 ]
  %72 = phi %struct.SF_MTD_CMD* [ %57, %54 ], [ %62, %59 ], [ %67, %64 ]
  %73 = load i8, i8* %71, align 1, !dbg !9440
  %74 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %72, i32 0, i32 5, !dbg !9440
  store i8 %73, i8* %74, align 1, !dbg !9440
  call void @llvm.dbg.value(metadata i32 %53, metadata !9372, metadata !DIExpression()), !dbg !9380
  call void @llvm.dbg.value(metadata i32 %52, metadata !9370, metadata !DIExpression()), !dbg !9380
  %75 = trunc i32 %19 to i8, !dbg !9441
  switch i8 %75, label %96 [
    i8 -6, label %76
    i8 -5, label %81
    i8 -4, label %86
  ], !dbg !9441

76:                                               ; preds = %70
  %77 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !9442
  %78 = bitcast i8* %77 to %struct.SF_MTD_CMD**, !dbg !9442
  %79 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %78, align 4, !dbg !9442
  %80 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %79, i32 0, i32 6, !dbg !9444
  br label %91, !dbg !9445

81:                                               ; preds = %70
  %82 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !9446
  %83 = bitcast i8* %82 to %struct.SF_MTD_CMD**, !dbg !9446
  %84 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %83, align 4, !dbg !9446
  %85 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %84, i32 0, i32 7, !dbg !9447
  br label %91, !dbg !9448

86:                                               ; preds = %70
  %87 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !9449
  %88 = bitcast i8* %87 to %struct.SF_MTD_CMD**, !dbg !9449
  %89 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %88, align 4, !dbg !9449
  %90 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %89, i32 0, i32 8, !dbg !9450
  br label %91, !dbg !9451

91:                                               ; preds = %76, %81, %86
  %92 = phi i8* [ %90, %86 ], [ %85, %81 ], [ %80, %76 ]
  %93 = phi %struct.SF_MTD_CMD* [ %89, %86 ], [ %84, %81 ], [ %79, %76 ]
  %94 = load i8, i8* %92, align 1, !dbg !9452
  %95 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %93, i32 0, i32 5, !dbg !9452
  store i8 %94, i8* %95, align 1, !dbg !9452
  br label %96, !dbg !9453

96:                                               ; preds = %91, %70
  call void @llvm.dbg.value(metadata i8* undef, metadata !9371, metadata !DIExpression()), !dbg !9380
  call void @llvm.dbg.value(metadata i32 %53, metadata !9372, metadata !DIExpression()), !dbg !9380
  call void @llvm.dbg.value(metadata i32 %16, metadata !9368, metadata !DIExpression()), !dbg !9380
  %97 = icmp eq i32 %53, 0, !dbg !9453
  br i1 %97, label %111, label %98, !dbg !9456

98:                                               ; preds = %96
  %99 = load i8*, i8** %21, align 4, !dbg !9457
  call void @llvm.dbg.value(metadata i8* %99, metadata !9371, metadata !DIExpression()), !dbg !9380
  %100 = ptrtoint i8* %99 to i32, !dbg !9458
  call void @llvm.dbg.value(metadata i32 %100, metadata !9371, metadata !DIExpression()), !dbg !9380
  br label %101, !dbg !9456

101:                                              ; preds = %98, %107
  %102 = phi i32 [ %108, %107 ], [ %53, %98 ]
  %103 = phi i32 [ %109, %107 ], [ %100, %98 ]
  call void @llvm.dbg.value(metadata i32 %102, metadata !9372, metadata !DIExpression()), !dbg !9380
  call void @llvm.dbg.value(metadata i32 %103, metadata !9371, metadata !DIExpression()), !dbg !9380
  tail call void @SF_DAL_Dev_EraseBlock(%struct.SF_MTD_Data* noundef %3, i32 noundef %103) #21, !dbg !9459
  br label %104, !dbg !9461

104:                                              ; preds = %104, %101
  %105 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef %0, i32 undef) #21, !dbg !9462
  call void @llvm.dbg.value(metadata i32 %105, metadata !9368, metadata !DIExpression()), !dbg !9380
  %106 = icmp eq i32 %105, -121, !dbg !9464
  br i1 %106, label %104, label %107, !dbg !9466, !llvm.loop !9467

107:                                              ; preds = %104
  %108 = add i32 %102, -1, !dbg !9469
  call void @llvm.dbg.value(metadata i32 %108, metadata !9372, metadata !DIExpression()), !dbg !9380
  %109 = add i32 %103, %52, !dbg !9470
  call void @llvm.dbg.value(metadata i32 %109, metadata !9371, metadata !DIExpression()), !dbg !9380
  call void @llvm.dbg.value(metadata i32 %105, metadata !9368, metadata !DIExpression()), !dbg !9380
  %110 = icmp eq i32 %108, 0, !dbg !9453
  br i1 %110, label %111, label %101, !dbg !9456, !llvm.loop !9471

111:                                              ; preds = %107, %96
  %112 = phi i32 [ %16, %96 ], [ %105, %107 ], !dbg !9380
  store i8 0, i8* %14, align 4, !dbg !9473
  tail call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !9474
  ret i32 %112, !dbg !9475
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_ProgramData(i8* nocapture noundef %0, i8* noundef %1, i8* noundef %2, i32 noundef %3) #0 section ".ram_code" !dbg !9476 {
  %5 = alloca i8*, align 4
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !9478, metadata !DIExpression()), !dbg !9495
  call void @llvm.dbg.value(metadata i8* %1, metadata !9479, metadata !DIExpression()), !dbg !9495
  call void @llvm.dbg.value(metadata i8* %2, metadata !9480, metadata !DIExpression()), !dbg !9495
  call void @llvm.dbg.value(metadata i32 %3, metadata !9481, metadata !DIExpression()), !dbg !9495
  %7 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !9496
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %7, metadata !9482, metadata !DIExpression()), !dbg !9495
  %8 = ptrtoint i8* %1 to i32, !dbg !9497
  call void @llvm.dbg.value(metadata i32 %8, metadata !9484, metadata !DIExpression()), !dbg !9495
  %9 = bitcast i8** %5 to i8*, !dbg !9498
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #22, !dbg !9498
  call void @llvm.dbg.value(metadata i8* %2, metadata !9485, metadata !DIExpression()), !dbg !9495
  store i8* %2, i8** %5, align 4, !dbg !9499
  call void @llvm.dbg.value(metadata i32 0, metadata !9487, metadata !DIExpression()), !dbg !9495
  %10 = bitcast i32* %6 to i8*, !dbg !9500
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #22, !dbg !9500
  %11 = bitcast i8* %0 to i32*, !dbg !9501
  %12 = load i32, i32* %11, align 4, !dbg !9501
  %13 = xor i32 %12, -1, !dbg !9501
  %14 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !9501
  %15 = bitcast i8* %14 to %struct.hal_cache_region_config_t**, !dbg !9501
  %16 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %15, align 4, !dbg !9501
  %17 = ptrtoint %struct.hal_cache_region_config_t* %16 to i32, !dbg !9501
  %18 = icmp eq i32 %13, %17, !dbg !9501
  br i1 %18, label %20, label %19, !dbg !9504

19:                                               ; preds = %4
  tail call void @Flash_ReturnReady() #21, !dbg !9505
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.103, i32 0, i32 0), i32 noundef 2545, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.SF_DAL_ProgramData, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.104, i32 0, i32 0)) #23, !dbg !9505
  unreachable, !dbg !9505

20:                                               ; preds = %4
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !9507
  %21 = getelementptr inbounds i8, i8* %0, i32 196, !dbg !9508
  store i8 1, i8* %21, align 4, !dbg !9509
  br label %22, !dbg !9510

22:                                               ; preds = %22, %20
  %23 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef %0, i32 undef) #21, !dbg !9511
  call void @llvm.dbg.value(metadata i32 %23, metadata !9487, metadata !DIExpression()), !dbg !9495
  %24 = icmp eq i32 %23, -121, !dbg !9513
  br i1 %24, label %22, label %25, !dbg !9514, !llvm.loop !9515

25:                                               ; preds = %22
  %26 = icmp eq i32 %3, 0, !dbg !9517
  br i1 %26, label %104, label %27, !dbg !9518

27:                                               ; preds = %25
  %28 = getelementptr inbounds i8, i8* %0, i32 200
  %29 = bitcast i8* %28 to i32*
  %30 = getelementptr inbounds i8, i8* %0, i32 197
  %31 = getelementptr inbounds i8, i8* %0, i32 176
  %32 = bitcast i8* %31 to %struct.SF_MTD_CMD**
  %33 = getelementptr inbounds i8, i8* %0, i32 198
  %34 = bitcast i8* %33 to i16*
  br label %35, !dbg !9518

35:                                               ; preds = %27, %96
  %36 = phi i8* [ %99, %96 ], [ %2, %27 ], !dbg !9519
  %37 = phi i32 [ %100, %96 ], [ %3, %27 ]
  %38 = phi i32 [ %88, %96 ], [ %8, %27 ], !dbg !9495
  call void @llvm.dbg.value(metadata i32 %38, metadata !9484, metadata !DIExpression()), !dbg !9495
  call void @llvm.dbg.value(metadata i32 %37, metadata !9481, metadata !DIExpression()), !dbg !9495
  call void @llvm.dbg.value(metadata i8* %36, metadata !9485, metadata !DIExpression()), !dbg !9495
  call void @llvm.dbg.value(metadata i8* %36, metadata !9486, metadata !DIExpression()), !dbg !9495
  %39 = load i32, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !9520
  %40 = shl i32 %39, 1, !dbg !9521
  %41 = add i32 %40, -1, !dbg !9522
  %42 = and i32 %41, %38, !dbg !9523
  %43 = sub i32 %40, %42, !dbg !9524
  %44 = icmp ugt i32 %37, %43, !dbg !9525
  %45 = select i1 %44, i32 %43, i32 %37, !dbg !9526
  call void @llvm.dbg.value(metadata i32 %45, metadata !9488, metadata !DIExpression()), !dbg !9495
  call void @llvm.dbg.value(metadata i32 %45, metadata !9489, metadata !DIExpression()), !dbg !9495
  store i32 %45, i32* %6, align 4, !dbg !9527
  call void @llvm.dbg.value(metadata i8* %36, metadata !9485, metadata !DIExpression()), !dbg !9495
  %46 = ptrtoint i8* %36 to i32, !dbg !9528
  %47 = and i32 %46, 134217728, !dbg !9529
  %48 = icmp eq i32 %47, 0, !dbg !9529
  br i1 %48, label %58, label %49, !dbg !9530

49:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 0, metadata !9491, metadata !DIExpression()), !dbg !9531
  call void @llvm.dbg.value(metadata i32 %45, metadata !9489, metadata !DIExpression()), !dbg !9495
  %50 = icmp eq i32 %45, 0, !dbg !9532
  br i1 %50, label %58, label %51, !dbg !9535

51:                                               ; preds = %49, %51
  %52 = phi i32 [ %56, %51 ], [ 0, %49 ]
  call void @llvm.dbg.value(metadata i32 %52, metadata !9491, metadata !DIExpression()), !dbg !9531
  call void @llvm.dbg.value(metadata i8* %36, metadata !9485, metadata !DIExpression()), !dbg !9495
  %53 = getelementptr inbounds i8, i8* %36, i32 %52, !dbg !9536
  %54 = load i8, i8* %53, align 1, !dbg !9536
  %55 = getelementptr inbounds [128 x i8], [128 x i8]* @tmp_data_buffer, i32 0, i32 %52, !dbg !9538
  store i8 %54, i8* %55, align 1, !dbg !9539
  %56 = add nuw i32 %52, 1, !dbg !9540
  call void @llvm.dbg.value(metadata i32 %56, metadata !9491, metadata !DIExpression()), !dbg !9531
  call void @llvm.dbg.value(metadata i32 %45, metadata !9489, metadata !DIExpression()), !dbg !9495
  %57 = icmp eq i32 %56, %45, !dbg !9532
  br i1 %57, label %58, label %51, !dbg !9535, !llvm.loop !9541

58:                                               ; preds = %51, %49, %35
  %59 = phi i8* [ %36, %35 ], [ getelementptr inbounds ([128 x i8], [128 x i8]* @tmp_data_buffer, i32 0, i32 0), %49 ], [ getelementptr inbounds ([128 x i8], [128 x i8]* @tmp_data_buffer, i32 0, i32 0), %51 ], !dbg !9543
  call void @llvm.dbg.value(metadata i8* %59, metadata !9486, metadata !DIExpression()), !dbg !9495
  %60 = load i32, i32* %29, align 4, !dbg !9544
  %61 = and i32 %60, 16, !dbg !9546
  %62 = icmp eq i32 %61, 0, !dbg !9546
  br i1 %62, label %63, label %64, !dbg !9547

63:                                               ; preds = %58
  call void @SF_DAL_Dev_WriteEnable(%struct.SF_MTD_Data* noundef nonnull %7) #21, !dbg !9548
  br label %64, !dbg !9550

64:                                               ; preds = %63, %58
  %65 = load i8, i8* %30, align 1, !dbg !9551
  %66 = icmp eq i8 %65, 4, !dbg !9553
  %67 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %32, align 4, !dbg !9554
  %68 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %67, i32 0, i32 0, !dbg !9554
  %69 = load i8, i8* %68, align 1, !dbg !9554
  %70 = zext i8 %69 to i32, !dbg !9554
  br i1 %66, label %71, label %75, !dbg !9555

71:                                               ; preds = %64
  call void @llvm.dbg.value(metadata i8** %5, metadata !9485, metadata !DIExpression(DW_OP_deref)), !dbg !9495
  call void @llvm.dbg.value(metadata i32* %6, metadata !9489, metadata !DIExpression(DW_OP_deref)), !dbg !9495
  %72 = call i32 @SFI_GPRAM_Write_C1A4(i32 noundef %70, i32 noundef %38, i8** noundef nonnull %5, i32* noundef nonnull %6) #20, !dbg !9556
  call void @llvm.dbg.value(metadata i32 %72, metadata !9490, metadata !DIExpression()), !dbg !9495
  %73 = load i8*, i8** %5, align 4, !dbg !9558
  call void @llvm.dbg.value(metadata i8* %73, metadata !9485, metadata !DIExpression()), !dbg !9495
  %74 = load i32, i32* %6, align 4, !dbg !9559
  call void @llvm.dbg.value(metadata i32 %74, metadata !9489, metadata !DIExpression()), !dbg !9495
  call void @SFI_GPRAM_Write(i32 noundef 8, i8* noundef %73, i32 noundef %74) #20, !dbg !9560
  br label %79, !dbg !9561

75:                                               ; preds = %64
  %76 = call i32 @SFI_GPRAM_Write_C1A3(i32 noundef %70, i32 noundef %38) #20, !dbg !9562
  call void @llvm.dbg.value(metadata i32 %76, metadata !9490, metadata !DIExpression()), !dbg !9495
  %77 = load i8*, i8** %5, align 4, !dbg !9564
  call void @llvm.dbg.value(metadata i8* %77, metadata !9485, metadata !DIExpression()), !dbg !9495
  %78 = load i32, i32* %6, align 4, !dbg !9565
  call void @llvm.dbg.value(metadata i32 %78, metadata !9489, metadata !DIExpression()), !dbg !9495
  call void @SFI_GPRAM_Write(i32 noundef 4, i8* noundef %77, i32 noundef %78) #20, !dbg !9566
  br label %79

79:                                               ; preds = %75, %71
  %80 = phi i32 [ %72, %71 ], [ %76, %75 ], !dbg !9554
  call void @llvm.dbg.value(metadata i32 %80, metadata !9490, metadata !DIExpression()), !dbg !9495
  %81 = call i32 @SaveAndSetIRQMask() #21, !dbg !9567
  call void @llvm.dbg.value(metadata i32 %81, metadata !9483, metadata !DIExpression()), !dbg !9495
  store volatile i32 %80, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !9568
  %82 = load i8, i8* %30, align 1, !dbg !9569
  %83 = zext i8 %82 to i32, !dbg !9570
  %84 = add i32 %45, 1, !dbg !9571
  %85 = add i32 %84, %83, !dbg !9572
  store volatile i32 %85, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !9573
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !9574
  call void @SF_DAL_FLAG_BUSY_SET() #21, !dbg !9575
  %86 = load i16, i16* %34, align 2, !dbg !9576
  call void @SFI_MacEnable(i16 noundef zeroext %86) #20, !dbg !9577
  %87 = load i16, i16* %34, align 2, !dbg !9578
  call void @SFI_MacWaitReady(i16 noundef zeroext %87) #20, !dbg !9579
  call void @RestoreIRQMask(i32 noundef %81) #21, !dbg !9580
  %88 = add i32 %45, %38
  %89 = add i32 %88, -1
  %90 = getelementptr inbounds i8, i8* %59, i32 -1
  %91 = getelementptr inbounds i8, i8* %90, i32 %45
  br label %92, !dbg !9581

92:                                               ; preds = %92, %79
  %93 = load i8, i8* %91, align 1, !dbg !9582
  %94 = call i32 @SF_DAL_CheckReadyAndResume(i8* noundef %0, i32 noundef %89, i8 noundef zeroext %93) #21, !dbg !9584
  call void @llvm.dbg.value(metadata i32 %94, metadata !9487, metadata !DIExpression()), !dbg !9495
  %95 = icmp eq i32 %94, 0, !dbg !9585
  br i1 %95, label %92, label %96, !dbg !9586, !llvm.loop !9587

96:                                               ; preds = %92
  %97 = load i32, i32* %6, align 4, !dbg !9589
  call void @llvm.dbg.value(metadata i32 %97, metadata !9489, metadata !DIExpression()), !dbg !9495
  %98 = load i8*, i8** %5, align 4, !dbg !9590
  call void @llvm.dbg.value(metadata i8* %98, metadata !9485, metadata !DIExpression()), !dbg !9495
  %99 = getelementptr inbounds i8, i8* %98, i32 %97, !dbg !9590
  call void @llvm.dbg.value(metadata i8* %99, metadata !9485, metadata !DIExpression()), !dbg !9495
  store i8* %99, i8** %5, align 4, !dbg !9590
  %100 = sub i32 %37, %45, !dbg !9591
  call void @llvm.dbg.value(metadata i32 %100, metadata !9481, metadata !DIExpression()), !dbg !9495
  call void @llvm.dbg.value(metadata i32 undef, metadata !9484, metadata !DIExpression()), !dbg !9495
  %101 = icmp eq i32 %94, 1, !dbg !9592
  %102 = icmp ne i32 %100, 0
  %103 = select i1 %101, i1 %102, i1 false, !dbg !9594
  br i1 %103, label %35, label %104, !dbg !9594, !llvm.loop !9595

104:                                              ; preds = %96, %25
  %105 = phi i32 [ %23, %25 ], [ %94, %96 ], !dbg !9495
  call void @llvm.dbg.value(metadata i32 %105, metadata !9487, metadata !DIExpression()), !dbg !9495
  store i8 0, i8* %21, align 4, !dbg !9597
  call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !9598
  %106 = icmp eq i32 %105, 1, !dbg !9599
  %107 = select i1 %106, i32 0, i32 %105, !dbg !9495
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #22, !dbg !9601
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #22, !dbg !9601
  ret i32 %107, !dbg !9601
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SF_DAL_NonBlockEraseBlock(i8* nocapture readnone %0, i32 %1) #10 section ".ram_code" !dbg !9602 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !9604, metadata !DIExpression()), !dbg !9606
  call void @llvm.dbg.value(metadata i32 undef, metadata !9605, metadata !DIExpression()), !dbg !9606
  ret i32 -12, !dbg !9607
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_CheckDeviceReady(i8* nocapture noundef readonly %0, i32 %1) #0 section ".ram_code" !dbg !9608 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9610, metadata !DIExpression()), !dbg !9620
  call void @llvm.dbg.value(metadata i32 undef, metadata !9611, metadata !DIExpression()), !dbg !9620
  call void @llvm.dbg.value(metadata i32 0, metadata !9613, metadata !DIExpression()), !dbg !9620
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !9621
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !9614, metadata !DIExpression()), !dbg !9620
  %4 = bitcast i8* %0 to i32*, !dbg !9622
  %5 = load i32, i32* %4, align 4, !dbg !9622
  %6 = xor i32 %5, -1, !dbg !9622
  %7 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !9622
  %8 = bitcast i8* %7 to %struct.hal_cache_region_config_t**, !dbg !9622
  %9 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %8, align 4, !dbg !9622
  %10 = ptrtoint %struct.hal_cache_region_config_t* %9 to i32, !dbg !9622
  %11 = icmp eq i32 %6, %10, !dbg !9622
  br i1 %11, label %13, label %12, !dbg !9625

12:                                               ; preds = %2
  tail call void @Flash_ReturnReady() #21, !dbg !9626
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.103, i32 0, i32 0), i32 noundef 3131, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.SF_DAL_CheckDeviceReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.104, i32 0, i32 0)) #23, !dbg !9626
  unreachable, !dbg !9626

13:                                               ; preds = %2
  %14 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !9628
  %15 = bitcast i8* %14 to %struct.SF_MTD_CMD**, !dbg !9628
  %16 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %15, align 4, !dbg !9628
  %17 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %16, i32 0, i32 16, !dbg !9629
  %18 = load i8, i8* %17, align 1, !dbg !9629
  %19 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %3, i8 noundef zeroext %18) #21, !dbg !9630
  call void @llvm.dbg.value(metadata i32 %19, metadata !9615, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9620
  %20 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %15, align 4, !dbg !9631
  %21 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %20, i32 0, i32 15, !dbg !9632
  %22 = load i8, i8* %21, align 1, !dbg !9632
  %23 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %3, i8 noundef zeroext %22) #21, !dbg !9633
  call void @llvm.dbg.value(metadata i32 %23, metadata !9616, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9620
  %24 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !9634
  call void @llvm.dbg.value(metadata i32 %24, metadata !9613, metadata !DIExpression()), !dbg !9620
  %25 = getelementptr inbounds i8, i8* %0, i32 172, !dbg !9635
  %26 = bitcast i8* %25 to i8**, !dbg !9635
  %27 = load i8*, i8** %26, align 4, !dbg !9635
  %28 = load i8, i8* %27, align 1, !dbg !9636
  %29 = zext i8 %28 to i32, !dbg !9636
  %30 = and i32 %19, %29, !dbg !9637
  %31 = icmp eq i32 %30, 0, !dbg !9638
  br i1 %31, label %32, label %62, !dbg !9639

32:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32 %23, metadata !9616, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9620
  %33 = getelementptr inbounds i8, i8* %27, i32 2, !dbg !9640
  %34 = load i8, i8* %33, align 1, !dbg !9640
  %35 = getelementptr inbounds i8, i8* %27, i32 3, !dbg !9641
  %36 = load i8, i8* %35, align 1, !dbg !9641
  %37 = or i8 %36, %34, !dbg !9642
  call void @llvm.dbg.value(metadata i8 %37, metadata !9617, metadata !DIExpression()), !dbg !9643
  %38 = zext i8 %37 to i32, !dbg !9644
  %39 = and i32 %23, %38, !dbg !9646
  %40 = icmp eq i32 %39, 0, !dbg !9647
  br i1 %40, label %41, label %46, !dbg !9648

41:                                               ; preds = %32
  %42 = icmp ne i8 %37, 0, !dbg !9649
  %43 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1
  %44 = icmp eq i8 %43, 0
  %45 = select i1 %42, i1 true, i1 %44, !dbg !9650
  br i1 %45, label %51, label %46, !dbg !9650

46:                                               ; preds = %41, %32
  %47 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !9651, !range !2809
  %48 = icmp eq i8 %47, 0, !dbg !9651
  br i1 %48, label %49, label %50, !dbg !9655

49:                                               ; preds = %46
  tail call void @Flash_ReturnReady() #21, !dbg !9656
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.103, i32 0, i32 0), i32 noundef 3147, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.SF_DAL_CheckDeviceReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.104, i32 0, i32 0)) #23, !dbg !9656
  unreachable, !dbg !9656

50:                                               ; preds = %46
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef nonnull %3) #21, !dbg !9658
  store i32 -1, i32* @gNOR_ReturnReadyEnd, align 4, !dbg !9659
  call void @llvm.dbg.value(metadata i32 -121, metadata !9612, metadata !DIExpression()), !dbg !9620
  br label %62, !dbg !9660

51:                                               ; preds = %41
  %52 = getelementptr inbounds i8, i8* %0, i32 200, !dbg !9661
  %53 = bitcast i8* %52 to i32*, !dbg !9661
  %54 = load i32, i32* %53, align 4, !dbg !9661
  %55 = and i32 %54, 2, !dbg !9664
  %56 = icmp eq i32 %55, 0, !dbg !9664
  br i1 %56, label %63, label %57, !dbg !9665

57:                                               ; preds = %51
  %58 = getelementptr inbounds i8, i8* %0, i32 198, !dbg !9666
  %59 = bitcast i8* %58 to i16*, !dbg !9666
  %60 = load i16, i16* %59, align 2, !dbg !9666
  tail call void @SFI_Dev_Command(i16 noundef zeroext %60, i32 noundef 122) #20, !dbg !9668
  %61 = load i16, i16* %59, align 2, !dbg !9669
  tail call void @SFI_Dev_Command(i16 noundef zeroext %61, i32 noundef 122) #20, !dbg !9670
  br label %63, !dbg !9671

62:                                               ; preds = %50, %13
  call void @llvm.dbg.value(metadata i32 0, metadata !9612, metadata !DIExpression()), !dbg !9620
  tail call void @RestoreIRQMask(i32 noundef %24) #21, !dbg !9672
  br label %65, !dbg !9673

63:                                               ; preds = %57, %51
  tail call void @SF_DAL_FLAG_BUSY_CLR() #21, !dbg !9674
  tail call void @SF_DAL_FLAG_SUS_CLR() #21, !dbg !9675
  call void @llvm.dbg.value(metadata i32 0, metadata !9612, metadata !DIExpression()), !dbg !9620
  tail call void @RestoreIRQMask(i32 noundef %24) #21, !dbg !9672
  %64 = tail call i32 @SF_DAL_FailCheck(i8* noundef nonnull %0) #21, !dbg !9676
  call void @llvm.dbg.value(metadata i32 %64, metadata !9612, metadata !DIExpression()), !dbg !9620
  br label %65, !dbg !9679

65:                                               ; preds = %62, %63
  %66 = phi i32 [ %64, %63 ], [ -121, %62 ], !dbg !9620
  call void @llvm.dbg.value(metadata i32 %66, metadata !9612, metadata !DIExpression()), !dbg !9620
  ret i32 %66, !dbg !9680
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_SuspendErase(i8* nocapture noundef readonly %0, i32 %1) #0 section ".ram_code" !dbg !9681 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9683, metadata !DIExpression()), !dbg !9688
  call void @llvm.dbg.value(metadata i32 undef, metadata !9684, metadata !DIExpression()), !dbg !9688
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !9689
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !9685, metadata !DIExpression()), !dbg !9688
  %4 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !9690
  call void @llvm.dbg.value(metadata i32 %4, metadata !9687, metadata !DIExpression()), !dbg !9688
  tail call void @SF_DAL_Dev_Suspend(%struct.SF_MTD_Data* noundef %3) #21, !dbg !9691
  %5 = getelementptr inbounds i8, i8* %0, i32 176
  %6 = bitcast i8* %5 to %struct.SF_MTD_CMD**
  %7 = getelementptr inbounds i8, i8* %0, i32 172
  %8 = bitcast i8* %7 to i8**
  br label %9, !dbg !9692

9:                                                ; preds = %9, %2
  %10 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %6, align 4, !dbg !9693
  %11 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %10, i32 0, i32 16, !dbg !9695
  %12 = load i8, i8* %11, align 1, !dbg !9695
  %13 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef %3, i8 noundef zeroext %12) #21, !dbg !9696
  call void @llvm.dbg.value(metadata i32 %13, metadata !9686, metadata !DIExpression()), !dbg !9688
  %14 = load i8*, i8** %8, align 4, !dbg !9697
  %15 = load i8, i8* %14, align 1, !dbg !9699
  %16 = zext i8 %15 to i32, !dbg !9699
  %17 = and i32 %13, %16, !dbg !9700
  %18 = icmp eq i32 %17, 0, !dbg !9701
  br i1 %18, label %19, label %9, !dbg !9702, !llvm.loop !9703

19:                                               ; preds = %9
  tail call void @SF_DAL_FLAG_SUS_SET() #21, !dbg !9705
  tail call void @RestoreIRQMask(i32 noundef %4) #21, !dbg !9706
  ret i32 0, !dbg !9707
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_ResumeErase(i8* nocapture noundef readonly %0, i32 %1) #0 section ".ram_code" !dbg !9708 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9710, metadata !DIExpression()), !dbg !9713
  call void @llvm.dbg.value(metadata i32 undef, metadata !9711, metadata !DIExpression()), !dbg !9713
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !9714
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !9712, metadata !DIExpression()), !dbg !9713
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !9715
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef %3) #21, !dbg !9716
  tail call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !9717
  ret i32 0, !dbg !9718
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SF_DAL_LockEraseBlkAddr(i8* nocapture readnone %0, i8* nocapture readnone %1, i32 %2) #10 section ".ram_code" !dbg !9719 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !9721, metadata !DIExpression()), !dbg !9724
  call void @llvm.dbg.value(metadata i8* undef, metadata !9722, metadata !DIExpression()), !dbg !9724
  call void @llvm.dbg.value(metadata i32 undef, metadata !9723, metadata !DIExpression()), !dbg !9724
  ret i32 0, !dbg !9725
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_IOCtrl(i8* noundef %0, i32 noundef %1, i8* nocapture readnone %2) #0 !dbg !9726 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9728, metadata !DIExpression()), !dbg !9732
  call void @llvm.dbg.value(metadata i32 %1, metadata !9729, metadata !DIExpression()), !dbg !9732
  call void @llvm.dbg.value(metadata i8* undef, metadata !9730, metadata !DIExpression()), !dbg !9732
  call void @llvm.dbg.value(metadata i8* %0, metadata !9731, metadata !DIExpression()), !dbg !9732
  switch i32 %1, label %20 [
    i32 0, label %4
    i32 1, label %9
  ], !dbg !9733

4:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %0, metadata !9731, metadata !DIExpression()), !dbg !9732
  %5 = getelementptr inbounds i8, i8* %0, i32 212, !dbg !9734
  %6 = bitcast i8* %5 to i32 (i8*)**, !dbg !9734
  %7 = load i32 (i8*)*, i32 (i8*)** %6, align 4, !dbg !9734
  %8 = tail call i32 %7(i8* noundef %0) #20, !dbg !9737
  br label %21, !dbg !9738

9:                                                ; preds = %3
  %10 = getelementptr inbounds i8, i8* %0, i32 193, !dbg !9739
  %11 = load i8, i8* %10, align 1, !dbg !9743
  %12 = icmp eq i8 %11, -62, !dbg !9744
  br i1 %12, label %13, label %21, !dbg !9745

13:                                               ; preds = %9
  %14 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !9746
  %15 = bitcast i8* %14 to %struct.hal_cache_region_config_t**, !dbg !9746
  %16 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %15, align 4, !dbg !9746
  %17 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %16, i32 0, i32 0, !dbg !9747
  %18 = load i32, i32* %17, align 4, !dbg !9747
  %19 = icmp eq i32 %18, 262144, !dbg !9748
  br i1 %19, label %22, label %21, !dbg !9749

20:                                               ; preds = %3
  tail call void @Flash_ReturnReady() #21, !dbg !9750
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.103, i32 0, i32 0), i32 noundef 2361, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.SF_DAL_IOCtrl, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.104, i32 0, i32 0)) #23, !dbg !9750
  unreachable, !dbg !9750

21:                                               ; preds = %13, %9, %4
  br label %22, !dbg !9755

22:                                               ; preds = %13, %21
  %23 = phi i32 [ 0, %21 ], [ 194, %13 ], !dbg !9732
  ret i32 %23, !dbg !9756
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_FailCheck(i8* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !9757 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9759, metadata !DIExpression()), !dbg !9762
  call void @llvm.dbg.value(metadata i8* %0, metadata !9760, metadata !DIExpression()), !dbg !9762
  %2 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !9763
  %3 = bitcast i8* %2 to %struct.SF_MTD_CMD**, !dbg !9763
  %4 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %3, align 4, !dbg !9763
  %5 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %4, i32 0, i32 17, !dbg !9765
  %6 = load i8, i8* %5, align 1, !dbg !9765
  %7 = icmp eq i8 %6, 0, !dbg !9766
  br i1 %7, label %19, label %8, !dbg !9767

8:                                                ; preds = %1
  %9 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !9768
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %9, metadata !9760, metadata !DIExpression()), !dbg !9762
  %10 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef %9, i8 noundef zeroext %6) #21, !dbg !9769
  call void @llvm.dbg.value(metadata i32 %10, metadata !9761, metadata !DIExpression()), !dbg !9762
  %11 = getelementptr inbounds i8, i8* %0, i32 172, !dbg !9771
  %12 = bitcast i8* %11 to i8**, !dbg !9771
  %13 = load i8*, i8** %12, align 4, !dbg !9771
  %14 = getelementptr inbounds i8, i8* %13, i32 7, !dbg !9773
  %15 = load i8, i8* %14, align 1, !dbg !9773
  %16 = zext i8 %15 to i32, !dbg !9773
  %17 = and i32 %10, %16, !dbg !9774
  %18 = icmp eq i32 %17, 0, !dbg !9774
  br i1 %18, label %19, label %20, !dbg !9775

19:                                               ; preds = %8, %1
  br label %20, !dbg !9776

20:                                               ; preds = %8, %19
  %21 = phi i32 [ 0, %19 ], [ -1, %8 ], !dbg !9762
  ret i32 %21, !dbg !9777
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_CheckReadyAndResume(i8* nocapture noundef readonly %0, i32 noundef %1, i8 noundef zeroext %2) local_unnamed_addr #0 section ".ram_code" !dbg !9778 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9782, metadata !DIExpression()), !dbg !9790
  call void @llvm.dbg.value(metadata i32 %1, metadata !9783, metadata !DIExpression()), !dbg !9790
  call void @llvm.dbg.value(metadata i8 %2, metadata !9784, metadata !DIExpression()), !dbg !9790
  %4 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !9791
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %4, metadata !9786, metadata !DIExpression()), !dbg !9790
  call void @llvm.dbg.value(metadata i32 0, metadata !9787, metadata !DIExpression()), !dbg !9790
  %5 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !9792
  %6 = bitcast i8* %5 to %struct.SF_MTD_CMD**, !dbg !9792
  %7 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %6, align 4, !dbg !9792
  %8 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %7, i32 0, i32 16, !dbg !9793
  %9 = load i8, i8* %8, align 1, !dbg !9793
  %10 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef %4, i8 noundef zeroext %9) #21, !dbg !9794
  call void @llvm.dbg.value(metadata i32 %10, metadata !9789, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9790
  %11 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !9795, !range !2809
  %12 = icmp eq i8 %11, 0, !dbg !9795
  br i1 %12, label %18, label %13, !dbg !9797

13:                                               ; preds = %3
  %14 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !9798, !range !2809
  %15 = icmp eq i8 %14, 0, !dbg !9798
  br i1 %15, label %16, label %17, !dbg !9802

16:                                               ; preds = %13
  tail call void @Flash_ReturnReady() #21, !dbg !9803
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.103, i32 0, i32 0), i32 noundef 3058, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.SF_DAL_CheckReadyAndResume, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.104, i32 0, i32 0)) #23, !dbg !9803
  unreachable, !dbg !9803

17:                                               ; preds = %13
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef nonnull %4) #21, !dbg !9805
  store i32 -1, i32* @gNOR_ReturnReadyEnd, align 4, !dbg !9806
  br label %42, !dbg !9807

18:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 %10, metadata !9789, metadata !DIExpression()), !dbg !9790
  %19 = getelementptr inbounds i8, i8* %0, i32 172, !dbg !9808
  %20 = bitcast i8* %19 to i8**, !dbg !9808
  %21 = load i8*, i8** %20, align 4, !dbg !9808
  %22 = load i8, i8* %21, align 1, !dbg !9810
  %23 = zext i8 %22 to i32, !dbg !9810
  %24 = and i32 %10, %23, !dbg !9811
  %25 = icmp eq i32 %24, 0, !dbg !9812
  br i1 %25, label %26, label %42, !dbg !9813

26:                                               ; preds = %18
  %27 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !9814
  call void @llvm.dbg.value(metadata i32 %27, metadata !9785, metadata !DIExpression()), !dbg !9790
  tail call void @SF_DAL_FLAG_BUSY_CLR() #21, !dbg !9816
  %28 = inttoptr i32 %1 to i8*, !dbg !9817
  %29 = load volatile i8, i8* %28, align 1, !dbg !9818
  call void @llvm.dbg.value(metadata i8 %29, metadata !9788, metadata !DIExpression()), !dbg !9790
  %30 = icmp eq i8 %29, %2, !dbg !9819
  br i1 %30, label %39, label %31, !dbg !9821

31:                                               ; preds = %26
  call void @llvm.dbg.value(metadata i32 -1, metadata !9787, metadata !DIExpression()), !dbg !9790
  %32 = tail call zeroext i1 @hal_cache_is_cacheable(i32 noundef %1) #20, !dbg !9822
  br i1 %32, label %33, label %38, !dbg !9825

33:                                               ; preds = %31
  %34 = and i32 %1, -32, !dbg !9826
  %35 = tail call i32 @hal_cache_invalidate_one_cache_line(i32 noundef %34) #20, !dbg !9828
  %36 = load volatile i8, i8* %28, align 1, !dbg !9829
  %37 = icmp eq i8 %36, %2, !dbg !9831
  br i1 %37, label %39, label %38, !dbg !9832

38:                                               ; preds = %33, %31
  call void @llvm.dbg.value(metadata i32 -1, metadata !9787, metadata !DIExpression()), !dbg !9790
  tail call void @RestoreIRQMask(i32 noundef %27) #21, !dbg !9833
  br label %42, !dbg !9834

39:                                               ; preds = %33, %26
  call void @llvm.dbg.value(metadata i32 -1, metadata !9787, metadata !DIExpression()), !dbg !9790
  tail call void @RestoreIRQMask(i32 noundef %27) #21, !dbg !9833
  %40 = tail call i32 @SF_DAL_FailCheck(i8* noundef nonnull %0) #21, !dbg !9835
  %41 = icmp eq i32 %40, 0, !dbg !9838
  br i1 %41, label %42, label %44, !dbg !9839

42:                                               ; preds = %18, %17, %38, %39
  %43 = phi i32 [ 1, %39 ], [ -1, %38 ], [ 0, %17 ], [ 0, %18 ]
  br label %44, !dbg !9840

44:                                               ; preds = %39, %42
  %45 = phi i32 [ %43, %42 ], [ -1, %39 ], !dbg !9790
  ret i32 %45, !dbg !9841
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_EraseBlock(%struct.SF_MTD_Data* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #0 section ".ram_code" !dbg !9842 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !9846, metadata !DIExpression()), !dbg !9849
  call void @llvm.dbg.value(metadata i32 %1, metadata !9847, metadata !DIExpression()), !dbg !9849
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 24, !dbg !9850
  %4 = load i32, i32* %3, align 4, !dbg !9850
  %5 = and i32 %4, 16, !dbg !9852
  %6 = icmp eq i32 %5, 0, !dbg !9852
  br i1 %6, label %7, label %8, !dbg !9853

7:                                                ; preds = %2
  tail call void @SF_DAL_Dev_WriteEnable(%struct.SF_MTD_Data* noundef nonnull %0) #21, !dbg !9854
  br label %8, !dbg !9856

8:                                                ; preds = %7, %2
  %9 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !9857
  call void @llvm.dbg.value(metadata i32 %9, metadata !9848, metadata !DIExpression()), !dbg !9849
  tail call void @SF_DAL_FLAG_BUSY_SET() #21, !dbg !9858
  %10 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !9859
  %11 = load i16, i16* %10, align 2, !dbg !9859
  %12 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !9860
  %13 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %12, align 4, !dbg !9860
  %14 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %13, i32 0, i32 5, !dbg !9861
  %15 = load i8, i8* %14, align 1, !dbg !9861
  %16 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 22, !dbg !9862
  %17 = load i8, i8* %16, align 1, !dbg !9862
  %18 = zext i8 %17 to i32, !dbg !9863
  tail call void @SFI_Dev_CommandAddress(i16 noundef zeroext %11, i8 noundef zeroext %15, i32 noundef %1, i32 noundef %18) #20, !dbg !9864
  tail call void @RestoreIRQMask(i32 noundef %9) #21, !dbg !9865
  ret void, !dbg !9866
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_Init_Vendor(%struct.NOR_MTD_Driver* nocapture readnone %0, %struct.SF_MTD_Data* nocapture noundef %1) local_unnamed_addr #0 !dbg !9867 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* undef, metadata !9869, metadata !DIExpression()), !dbg !9872
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !9870, metadata !DIExpression()), !dbg !9872
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 20, i32 0, !dbg !9873
  %4 = load i8, i8* %3, align 1, !dbg !9873
  switch i8 %4, label %17 [
    i8 -62, label %5
    i8 -17, label %10
    i8 -8, label %15
  ], !dbg !9874

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 24, !dbg !9875
  %7 = load i32, i32* %6, align 4, !dbg !9877
  %8 = or i32 %7, 4, !dbg !9877
  store i32 %8, i32* %6, align 4, !dbg !9877
  %9 = tail call i32 @SF_DAL_Init_MXIC(%struct.NOR_MTD_Driver* undef, %struct.SF_MTD_Data* noundef nonnull %1) #21, !dbg !9878
  call void @llvm.dbg.value(metadata i32 0, metadata !9871, metadata !DIExpression()), !dbg !9872
  br label %18, !dbg !9879

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 24, !dbg !9880
  %12 = load i32, i32* %11, align 4, !dbg !9881
  %13 = or i32 %12, 2, !dbg !9881
  store i32 %13, i32* %11, align 4, !dbg !9881
  %14 = tail call i32 @SF_DAL_Init_WINBOND(%struct.NOR_MTD_Driver* undef, %struct.SF_MTD_Data* noundef nonnull %1) #21, !dbg !9882
  call void @llvm.dbg.value(metadata i32 0, metadata !9871, metadata !DIExpression()), !dbg !9872
  call void @llvm.dbg.value(metadata i32 0, metadata !9871, metadata !DIExpression()), !dbg !9872
  br label %18, !dbg !9883

15:                                               ; preds = %2
  %16 = tail call i32 @SF_DAL_Init_WINBOND(%struct.NOR_MTD_Driver* undef, %struct.SF_MTD_Data* noundef nonnull %1) #21, !dbg !9884
  call void @llvm.dbg.value(metadata i32 0, metadata !9871, metadata !DIExpression()), !dbg !9872
  br label %18, !dbg !9885

17:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 -120, metadata !9871, metadata !DIExpression()), !dbg !9872
  tail call void @Flash_ReturnReady() #21, !dbg !9886
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.103, i32 0, i32 0), i32 noundef 2079, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.SF_DAL_Init_Vendor, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.104, i32 0, i32 0)) #23, !dbg !9886
  unreachable, !dbg !9886

18:                                               ; preds = %15, %10, %5
  call void @llvm.dbg.value(metadata i32 0, metadata !9871, metadata !DIExpression()), !dbg !9872
  ret i32 0, !dbg !9890
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_Init_Driver(%struct.NOR_MTD_Driver* noundef writeonly %0, %struct.SF_MTD_Data* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !9891 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* %0, metadata !9895, metadata !DIExpression()), !dbg !9900
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !9896, metadata !DIExpression()), !dbg !9900
  call void @llvm.dbg.value(metadata i32 %2, metadata !9897, metadata !DIExpression()), !dbg !9900
  call void @llvm.dbg.value(metadata i32 %3, metadata !9898, metadata !DIExpression()), !dbg !9900
  %5 = icmp eq %struct.NOR_MTD_Driver* %0, null, !dbg !9901
  %6 = icmp eq %struct.SF_MTD_Data* %1, null
  %7 = or i1 %5, %6, !dbg !9903
  br i1 %7, label %33, label %8, !dbg !9903

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !9904
  %10 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %9, align 4, !dbg !9904
  %11 = icmp eq %struct.SF_MTD_CMD* %10, null, !dbg !9906
  br i1 %11, label %33, label %12, !dbg !9907

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12, !dbg !9908
  %14 = load i8*, i8** %13, align 4, !dbg !9908
  %15 = icmp eq i8* %14, null, !dbg !9909
  br i1 %15, label %33, label %16, !dbg !9910

16:                                               ; preds = %12
  %17 = inttoptr i32 %2 to i8*, !dbg !9911
  %18 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 1, !dbg !9912
  store i8* %17, i8** %18, align 4, !dbg !9913
  %19 = trunc i32 %3 to i16, !dbg !9914
  %20 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 16, !dbg !9915
  store i16 %19, i16* %20, align 2, !dbg !9916
  %21 = tail call i32 @SF_DAL_Init_Common(%struct.NOR_MTD_Driver* noundef nonnull %0, %struct.SF_MTD_Data* noundef nonnull %1) #21, !dbg !9917
  %22 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %9, align 4, !dbg !9918
  %23 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %22, i32 0, i32 10, !dbg !9919
  store i8 -81, i8* %23, align 1, !dbg !9920
  %24 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 20, i32 0, !dbg !9921
  tail call void @SF_DAL_Dev_ReadID(%struct.SF_MTD_Data* noundef nonnull %1, i8* noundef nonnull %24) #21, !dbg !9922
  %25 = load i8, i8* %24, align 1, !dbg !9923
  switch i8 %25, label %26 [
    i8 -1, label %28
    i8 0, label %28
  ], !dbg !9925

26:                                               ; preds = %16
  %27 = tail call zeroext i1 @CMEM_CheckValidDeviceID(i8* noundef nonnull %24) #20, !dbg !9926
  br i1 %27, label %31, label %28, !dbg !9927

28:                                               ; preds = %16, %16, %26
  %29 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %9, align 4, !dbg !9928
  %30 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %29, i32 0, i32 10, !dbg !9930
  store i8 -97, i8* %30, align 1, !dbg !9931
  tail call void @SF_DAL_Dev_ReadID(%struct.SF_MTD_Data* noundef nonnull %1, i8* noundef nonnull %24) #21, !dbg !9932
  br label %31, !dbg !9933

31:                                               ; preds = %28, %26
  %32 = tail call i32 @SF_DAL_Init_Vendor(%struct.NOR_MTD_Driver* undef, %struct.SF_MTD_Data* noundef nonnull %1) #21, !dbg !9934
  call void @llvm.dbg.value(metadata i32 0, metadata !9899, metadata !DIExpression()), !dbg !9900
  br label %33, !dbg !9935

33:                                               ; preds = %8, %12, %4, %31
  %34 = phi i32 [ 0, %31 ], [ -120, %4 ], [ -120, %12 ], [ -120, %8 ], !dbg !9900
  ret i32 %34, !dbg !9936
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_ReadID(%struct.SF_MTD_Data* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #0 section ".ram_code" !dbg !9937 {
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !9941, metadata !DIExpression()), !dbg !9944
  call void @llvm.dbg.value(metadata i8* %1, metadata !9942, metadata !DIExpression()), !dbg !9944
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #22, !dbg !9945
  %4 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !9946
  %5 = and i32 %4, 1, !dbg !9946
  %6 = icmp eq i32 %5, 0, !dbg !9948
  %7 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !9949
  %8 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %7, align 4, !dbg !9949
  %9 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %8, i32 0, i32 9, !dbg !9950
  %10 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %8, i32 0, i32 10, !dbg !9950
  %11 = select i1 %6, i8* %9, i8* %10, !dbg !9950
  %12 = load i8, i8* %11, align 1, !dbg !9949
  store i8 %12, i8* %3, align 1, !dbg !9949
  %13 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !9951
  %14 = load i16, i16* %13, align 2, !dbg !9951
  call void @llvm.dbg.value(metadata i8* %3, metadata !9943, metadata !DIExpression(DW_OP_deref)), !dbg !9944
  call void @SF_DAL_Dev_Command_Ext(i16 noundef zeroext %14, i8* noundef nonnull %3, i8* noundef %1, i16 noundef zeroext 1, i16 noundef zeroext 3) #21, !dbg !9952
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #22, !dbg !9953
  ret void, !dbg !9953
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3, i16 noundef zeroext %4) local_unnamed_addr #0 section ".ram_code" !dbg !9954 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !9958, metadata !DIExpression()), !dbg !9964
  call void @llvm.dbg.value(metadata i8* %1, metadata !9959, metadata !DIExpression()), !dbg !9964
  call void @llvm.dbg.value(metadata i8* %2, metadata !9960, metadata !DIExpression()), !dbg !9964
  call void @llvm.dbg.value(metadata i16 %3, metadata !9961, metadata !DIExpression()), !dbg !9964
  call void @llvm.dbg.value(metadata i16 %4, metadata !9962, metadata !DIExpression()), !dbg !9964
  %6 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !9965
  call void @llvm.dbg.value(metadata i32 %6, metadata !9963, metadata !DIExpression()), !dbg !9964
  tail call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3, i16 noundef zeroext %4) #20, !dbg !9966
  tail call void @RestoreIRQMask(i32 noundef %6) #21, !dbg !9967
  ret void, !dbg !9968
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @CMEM_CheckValidDeviceID(i8* nocapture noundef readonly %0) local_unnamed_addr #12 !dbg !9969 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9971, metadata !DIExpression()), !dbg !9977
  call void @llvm.dbg.value(metadata %struct.CMEMEntryID* null, metadata !9974, metadata !DIExpression()), !dbg !9977
  call void @llvm.dbg.value(metadata i32 0, metadata !9972, metadata !DIExpression()), !dbg !9977
  br label %6, !dbg !9978

2:                                                ; preds = %23
  %3 = add nuw nsw i32 %8, 1, !dbg !9980
  call void @llvm.dbg.value(metadata i32 %3, metadata !9972, metadata !DIExpression()), !dbg !9977
  call void @llvm.dbg.value(metadata i32 %8, metadata !9972, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9977
  %4 = icmp ult i32 %8, 4, !dbg !9982
  %5 = icmp eq i32 %3, 5, !dbg !9982
  br i1 %5, label %26, label %6, !dbg !9978, !llvm.loop !9983

6:                                                ; preds = %1, %2
  %7 = phi i1 [ true, %1 ], [ %4, %2 ]
  %8 = phi i32 [ 0, %1 ], [ %3, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !9972, metadata !DIExpression()), !dbg !9977
  %9 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  call void @llvm.dbg.value(metadata i32 0, metadata !9973, metadata !DIExpression()), !dbg !9977
  %12 = icmp eq i8 %10, 0, !dbg !9985
  br i1 %12, label %23, label %13, !dbg !9989

13:                                               ; preds = %6, %20
  %14 = phi i32 [ %21, %20 ], [ 0, %6 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !9973, metadata !DIExpression()), !dbg !9977
  %15 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 2, i32 %14, !dbg !9990
  %16 = load i8, i8* %15, align 1, !dbg !9990
  %17 = getelementptr inbounds i8, i8* %0, i32 %14, !dbg !9993
  %18 = load i8, i8* %17, align 1, !dbg !9993
  %19 = icmp eq i8 %16, %18, !dbg !9994
  br i1 %19, label %20, label %23, !dbg !9995

20:                                               ; preds = %13
  %21 = add nuw nsw i32 %14, 1, !dbg !9996
  call void @llvm.dbg.value(metadata i32 %21, metadata !9973, metadata !DIExpression()), !dbg !9977
  %22 = icmp eq i32 %21, %11, !dbg !9985
  br i1 %22, label %26, label %13, !dbg !9989, !llvm.loop !9997

23:                                               ; preds = %13, %6
  %24 = phi i32 [ 0, %6 ], [ %14, %13 ], !dbg !9999
  %25 = icmp eq i32 %24, %11, !dbg !10000
  call void @llvm.dbg.value(metadata i32 %8, metadata !9972, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9977
  br i1 %25, label %26, label %2, !dbg !10002

26:                                               ; preds = %2, %23, %20
  %27 = phi i1 [ %7, %20 ], [ %7, %23 ], [ %4, %2 ], !dbg !9982
  ret i1 %27, !dbg !10003
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Index() local_unnamed_addr #0 !dbg !10004 {
  %1 = alloca %union.CMEMFlashID, align 2
  %2 = bitcast %union.CMEMFlashID* %1 to i8*, !dbg !10016
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #22, !dbg !10016
  call void @llvm.dbg.declare(metadata %union.CMEMFlashID* %1, metadata !10008, metadata !DIExpression()), !dbg !10017
  call void @llvm.dbg.value(metadata %struct.CMEMEntryID* null, metadata !10015, metadata !DIExpression()), !dbg !10018
  %3 = load i16, i16* @cmem_index, align 2, !dbg !10019
  %4 = icmp sgt i16 %3, -1, !dbg !10021
  br i1 %4, label %34, label %5, !dbg !10022

5:                                                ; preds = %0
  %6 = getelementptr inbounds %union.CMEMFlashID, %union.CMEMFlashID* %1, i32 0, i32 0, i32 0, !dbg !10023
  call void @NOR_ReadID(i16 noundef zeroext 0, i16* noundef nonnull inttoptr (i32 134217728 to i16*), i16* noundef nonnull %6) #20, !dbg !10024
  call void @llvm.dbg.value(metadata i32 0, metadata !10006, metadata !DIExpression()), !dbg !10018
  br label %7, !dbg !10025

7:                                                ; preds = %5, %29
  %8 = phi i32 [ 0, %5 ], [ %30, %29 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !10006, metadata !DIExpression()), !dbg !10018
  %9 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  call void @llvm.dbg.value(metadata i32 0, metadata !10007, metadata !DIExpression()), !dbg !10018
  %12 = icmp eq i8 %10, 0, !dbg !10027
  br i1 %12, label %24, label %13, !dbg !10032

13:                                               ; preds = %7, %21
  %14 = phi i32 [ %22, %21 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !10007, metadata !DIExpression()), !dbg !10018
  %15 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 2, i32 %14, !dbg !10033
  %16 = load i8, i8* %15, align 1, !dbg !10033
  %17 = getelementptr inbounds %union.CMEMFlashID, %union.CMEMFlashID* %1, i32 0, i32 0, i32 %14, !dbg !10036
  %18 = load i16, i16* %17, align 2, !dbg !10036
  %19 = zext i8 %16 to i16, !dbg !10037
  %20 = icmp eq i16 %18, %19, !dbg !10037
  br i1 %20, label %21, label %24, !dbg !10038

21:                                               ; preds = %13
  %22 = add nuw nsw i32 %14, 1, !dbg !10039
  call void @llvm.dbg.value(metadata i32 %22, metadata !10007, metadata !DIExpression()), !dbg !10018
  %23 = icmp eq i32 %22, %11, !dbg !10027
  br i1 %23, label %27, label %13, !dbg !10032, !llvm.loop !10040

24:                                               ; preds = %13, %7
  %25 = phi i32 [ 0, %7 ], [ %14, %13 ], !dbg !10042
  %26 = icmp eq i32 %25, %11, !dbg !10043
  br i1 %26, label %27, label %29, !dbg !10045

27:                                               ; preds = %24, %21
  %28 = trunc i32 %8 to i16, !dbg !10046
  store i16 %28, i16* @cmem_index, align 2, !dbg !10048
  br label %34, !dbg !10049

29:                                               ; preds = %24
  %30 = add nuw nsw i32 %8, 1, !dbg !10050
  call void @llvm.dbg.value(metadata i32 %30, metadata !10006, metadata !DIExpression()), !dbg !10018
  %31 = icmp eq i32 %30, 5, !dbg !10051
  br i1 %31, label %32, label %7, !dbg !10025, !llvm.loop !10052

32:                                               ; preds = %29
  %33 = load i16, i16* @cmem_index, align 2, !dbg !10054
  br label %34, !dbg !10054

34:                                               ; preds = %27, %32, %0
  %35 = phi i16 [ %3, %0 ], [ %33, %32 ], [ %28, %27 ]
  %36 = sext i16 %35 to i32, !dbg !10018
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #22, !dbg !10055
  ret i32 %36, !dbg !10055
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local nonnull %struct.CMEMEntryID* @CMEM_GetIDEntry(i32 noundef %0) local_unnamed_addr #10 !dbg !10056 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10060, metadata !DIExpression()), !dbg !10061
  %2 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %0, !dbg !10062
  ret %struct.CMEMEntryID* %2, !dbg !10063
}

; Function Attrs: noinline nounwind optsize
define dso_local void @CMEM_EMIINIT_ReadID(i16 noundef zeroext %0, i8* nocapture readnone %1, i16* nocapture noundef writeonly %2) local_unnamed_addr #0 section ".ram_code" !dbg !10064 {
  %4 = alloca i8, align 1
  %5 = alloca [3 x i8], align 1
  call void @llvm.dbg.value(metadata i16 %0, metadata !10068, metadata !DIExpression()), !dbg !10075
  call void @llvm.dbg.value(metadata i8* undef, metadata !10069, metadata !DIExpression()), !dbg !10075
  call void @llvm.dbg.value(metadata i16* %2, metadata !10070, metadata !DIExpression()), !dbg !10075
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #22, !dbg !10076
  %6 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i32 0, i32 0, !dbg !10076
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %6) #22, !dbg !10076
  call void @llvm.dbg.declare(metadata [3 x i8]* %5, metadata !10073, metadata !DIExpression()), !dbg !10077
  call void @llvm.dbg.value(metadata i8 -81, metadata !10071, metadata !DIExpression()), !dbg !10078
  store i8 -81, i8* %4, align 1, !dbg !10079
  call void @llvm.dbg.value(metadata i8* %4, metadata !10071, metadata !DIExpression(DW_OP_deref)), !dbg !10078
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef nonnull %6, i16 noundef zeroext 1, i16 noundef zeroext 3) #20, !dbg !10080
  %7 = load i8, i8* %6, align 1, !dbg !10081
  %8 = add i8 %7, 1, !dbg !10083
  %9 = icmp ult i8 %8, 2, !dbg !10083
  br i1 %9, label %12, label %10, !dbg !10083

10:                                               ; preds = %3
  %11 = call zeroext i1 @CMEM_EMIINIT_CheckValidDeviceID(i8* noundef nonnull %6) #21, !dbg !10084
  br i1 %11, label %13, label %12, !dbg !10085

12:                                               ; preds = %10, %3
  call void @llvm.dbg.value(metadata i8 -97, metadata !10071, metadata !DIExpression()), !dbg !10078
  store i8 -97, i8* %4, align 1, !dbg !10086
  call void @llvm.dbg.value(metadata i8* %4, metadata !10071, metadata !DIExpression(DW_OP_deref)), !dbg !10078
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef nonnull %6, i16 noundef zeroext 1, i16 noundef zeroext 3) #20, !dbg !10088
  br label %13, !dbg !10089

13:                                               ; preds = %12, %10
  br label %14, !dbg !10090

14:                                               ; preds = %13, %14
  %15 = phi i32 [ %20, %14 ], [ 0, %13 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !10074, metadata !DIExpression()), !dbg !10078
  %16 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i32 0, i32 %15, !dbg !10092
  %17 = load i8, i8* %16, align 1, !dbg !10092
  %18 = zext i8 %17 to i16, !dbg !10092
  %19 = getelementptr inbounds i16, i16* %2, i32 %15, !dbg !10095
  store i16 %18, i16* %19, align 2, !dbg !10096
  %20 = add nuw nsw i32 %15, 1, !dbg !10097
  call void @llvm.dbg.value(metadata i32 %20, metadata !10074, metadata !DIExpression()), !dbg !10078
  %21 = icmp eq i32 %20, 3, !dbg !10098
  br i1 %21, label %22, label %14, !dbg !10090, !llvm.loop !10099

22:                                               ; preds = %14
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %6) #22, !dbg !10101
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #22, !dbg !10101
  ret void, !dbg !10102
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @CMEM_EMIINIT_CheckValidDeviceID(i8* nocapture noundef readonly %0) local_unnamed_addr #12 section ".ram_code" !dbg !10103 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10105, metadata !DIExpression()), !dbg !10109
  call void @llvm.dbg.value(metadata %struct.CMEMEntryID* null, metadata !10108, metadata !DIExpression()), !dbg !10109
  call void @llvm.dbg.value(metadata i32 0, metadata !10106, metadata !DIExpression()), !dbg !10109
  br label %6, !dbg !10110

2:                                                ; preds = %23
  %3 = add nuw nsw i32 %8, 1, !dbg !10112
  call void @llvm.dbg.value(metadata i32 %3, metadata !10106, metadata !DIExpression()), !dbg !10109
  call void @llvm.dbg.value(metadata i32 %8, metadata !10106, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !10109
  %4 = icmp ult i32 %8, 4, !dbg !10114
  %5 = icmp eq i32 %3, 5, !dbg !10114
  br i1 %5, label %26, label %6, !dbg !10110, !llvm.loop !10115

6:                                                ; preds = %1, %2
  %7 = phi i1 [ true, %1 ], [ %4, %2 ]
  %8 = phi i32 [ 0, %1 ], [ %3, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !10106, metadata !DIExpression()), !dbg !10109
  %9 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  call void @llvm.dbg.value(metadata i32 0, metadata !10107, metadata !DIExpression()), !dbg !10109
  %12 = icmp eq i8 %10, 0, !dbg !10117
  br i1 %12, label %23, label %13, !dbg !10121

13:                                               ; preds = %6, %20
  %14 = phi i32 [ %21, %20 ], [ 0, %6 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !10107, metadata !DIExpression()), !dbg !10109
  %15 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 2, i32 %14, !dbg !10122
  %16 = load i8, i8* %15, align 1, !dbg !10122
  %17 = getelementptr inbounds i8, i8* %0, i32 %14, !dbg !10125
  %18 = load i8, i8* %17, align 1, !dbg !10125
  %19 = icmp eq i8 %16, %18, !dbg !10126
  br i1 %19, label %20, label %23, !dbg !10127

20:                                               ; preds = %13
  %21 = add nuw nsw i32 %14, 1, !dbg !10128
  call void @llvm.dbg.value(metadata i32 %21, metadata !10107, metadata !DIExpression()), !dbg !10109
  %22 = icmp eq i32 %21, %11, !dbg !10117
  br i1 %22, label %26, label %13, !dbg !10121, !llvm.loop !10129

23:                                               ; preds = %13, %6
  %24 = phi i32 [ 0, %6 ], [ %14, %13 ], !dbg !10131
  %25 = icmp eq i32 %24, %11, !dbg !10132
  call void @llvm.dbg.value(metadata i32 %8, metadata !10106, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !10109
  br i1 %25, label %26, label %2, !dbg !10134

26:                                               ; preds = %2, %23, %20
  %27 = phi i1 [ %7, %20 ], [ %7, %23 ], [ %4, %2 ], !dbg !10114
  ret i1 %27, !dbg !10135
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_EMIINIT_Index() local_unnamed_addr #0 section ".ram_code" !dbg !10136 {
  %1 = alloca %union.CMEMFlashID, align 2
  %2 = bitcast %union.CMEMFlashID* %1 to i8*, !dbg !10142
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #22, !dbg !10142
  call void @llvm.dbg.declare(metadata %union.CMEMFlashID* %1, metadata !10140, metadata !DIExpression()), !dbg !10143
  call void @llvm.dbg.value(metadata %struct.CMEMEntryID* null, metadata !10141, metadata !DIExpression()), !dbg !10144
  %3 = load i16, i16* @cmem_emiinit_index, align 2, !dbg !10145
  %4 = icmp sgt i16 %3, -1, !dbg !10147
  br i1 %4, label %34, label %5, !dbg !10148

5:                                                ; preds = %0
  %6 = getelementptr inbounds %union.CMEMFlashID, %union.CMEMFlashID* %1, i32 0, i32 0, i32 0, !dbg !10149
  call void @CMEM_EMIINIT_ReadID(i16 noundef zeroext 0, i8* undef, i16* noundef nonnull %6) #21, !dbg !10150
  call void @llvm.dbg.value(metadata i32 0, metadata !10138, metadata !DIExpression()), !dbg !10144
  br label %7, !dbg !10151

7:                                                ; preds = %5, %29
  %8 = phi i32 [ 0, %5 ], [ %30, %29 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !10138, metadata !DIExpression()), !dbg !10144
  %9 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  call void @llvm.dbg.value(metadata i32 0, metadata !10139, metadata !DIExpression()), !dbg !10144
  %12 = icmp eq i8 %10, 0, !dbg !10153
  br i1 %12, label %24, label %13, !dbg !10158

13:                                               ; preds = %7, %21
  %14 = phi i32 [ %22, %21 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !10139, metadata !DIExpression()), !dbg !10144
  %15 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 2, i32 %14, !dbg !10159
  %16 = load i8, i8* %15, align 1, !dbg !10159
  %17 = getelementptr inbounds %union.CMEMFlashID, %union.CMEMFlashID* %1, i32 0, i32 0, i32 %14, !dbg !10162
  %18 = load i16, i16* %17, align 2, !dbg !10162
  %19 = zext i8 %16 to i16, !dbg !10163
  %20 = icmp eq i16 %18, %19, !dbg !10163
  br i1 %20, label %21, label %24, !dbg !10164

21:                                               ; preds = %13
  %22 = add nuw nsw i32 %14, 1, !dbg !10165
  call void @llvm.dbg.value(metadata i32 %22, metadata !10139, metadata !DIExpression()), !dbg !10144
  %23 = icmp eq i32 %22, %11, !dbg !10153
  br i1 %23, label %27, label %13, !dbg !10158, !llvm.loop !10166

24:                                               ; preds = %13, %7
  %25 = phi i32 [ 0, %7 ], [ %14, %13 ], !dbg !10168
  %26 = icmp eq i32 %25, %11, !dbg !10169
  br i1 %26, label %27, label %29, !dbg !10171

27:                                               ; preds = %24, %21
  %28 = trunc i32 %8 to i16, !dbg !10172
  store i16 %28, i16* @cmem_emiinit_index, align 2, !dbg !10174
  br label %34, !dbg !10175

29:                                               ; preds = %24
  %30 = add nuw nsw i32 %8, 1, !dbg !10176
  call void @llvm.dbg.value(metadata i32 %30, metadata !10138, metadata !DIExpression()), !dbg !10144
  %31 = icmp eq i32 %30, 5, !dbg !10177
  br i1 %31, label %32, label %7, !dbg !10151, !llvm.loop !10178

32:                                               ; preds = %29
  %33 = load i16, i16* @cmem_emiinit_index, align 2, !dbg !10180
  br label %34, !dbg !10180

34:                                               ; preds = %27, %32, %0
  %35 = phi i16 [ %3, %0 ], [ %33, %32 ], [ %28, %27 ]
  %36 = sext i16 %35 to i32, !dbg !10144
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #22, !dbg !10181
  ret i32 %36, !dbg !10181
}

; Function Attrs: noinline nounwind optsize
define dso_local void @NOR_ReadID(i16 noundef zeroext %0, i16* nocapture noundef readnone %1, i16* nocapture noundef writeonly %2) local_unnamed_addr #0 section ".ram_code" !dbg !10182 {
  %4 = alloca i8, align 1
  %5 = alloca [3 x i8], align 1
  call void @llvm.dbg.value(metadata i16 %0, metadata !10190, metadata !DIExpression()), !dbg !10198
  call void @llvm.dbg.value(metadata i16* %1, metadata !10191, metadata !DIExpression()), !dbg !10198
  call void @llvm.dbg.value(metadata i16* %2, metadata !10192, metadata !DIExpression()), !dbg !10198
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #22, !dbg !10199
  %6 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i32 0, i32 0, !dbg !10199
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %6) #22, !dbg !10199
  call void @llvm.dbg.declare(metadata [3 x i8]* %5, metadata !10196, metadata !DIExpression()), !dbg !10200
  call void @llvm.dbg.value(metadata i8 -81, metadata !10194, metadata !DIExpression()), !dbg !10201
  store i8 -81, i8* %4, align 1, !dbg !10202
  %7 = tail call i32 @SaveAndSetIRQMask() #20, !dbg !10203
  call void @llvm.dbg.value(metadata i32 %7, metadata !10193, metadata !DIExpression()), !dbg !10198
  call void @llvm.dbg.value(metadata i8* %4, metadata !10194, metadata !DIExpression(DW_OP_deref)), !dbg !10201
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef nonnull %6, i16 noundef zeroext 1, i16 noundef zeroext 3) #20, !dbg !10204
  call void @RestoreIRQMask(i32 noundef %7) #20, !dbg !10205
  %8 = load i8, i8* %6, align 1, !dbg !10206
  %9 = add i8 %8, 1, !dbg !10208
  %10 = icmp ult i8 %9, 2, !dbg !10208
  br i1 %10, label %13, label %11, !dbg !10208

11:                                               ; preds = %3
  %12 = call zeroext i1 @CMEM_CheckValidDeviceID(i8* noundef nonnull %6) #20, !dbg !10209
  br i1 %12, label %15, label %13, !dbg !10210

13:                                               ; preds = %11, %3
  call void @llvm.dbg.value(metadata i8 -97, metadata !10194, metadata !DIExpression()), !dbg !10201
  store i8 -97, i8* %4, align 1, !dbg !10211
  %14 = call i32 @SaveAndSetIRQMask() #20, !dbg !10213
  call void @llvm.dbg.value(metadata i32 %14, metadata !10193, metadata !DIExpression()), !dbg !10198
  call void @llvm.dbg.value(metadata i8* %4, metadata !10194, metadata !DIExpression(DW_OP_deref)), !dbg !10201
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef nonnull %6, i16 noundef zeroext 1, i16 noundef zeroext 3) #20, !dbg !10214
  call void @RestoreIRQMask(i32 noundef %14) #20, !dbg !10215
  br label %15, !dbg !10216

15:                                               ; preds = %13, %11
  br label %16, !dbg !10217

16:                                               ; preds = %15, %16
  %17 = phi i32 [ %22, %16 ], [ 0, %15 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !10197, metadata !DIExpression()), !dbg !10201
  %18 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i32 0, i32 %17, !dbg !10219
  %19 = load i8, i8* %18, align 1, !dbg !10219
  %20 = zext i8 %19 to i16, !dbg !10219
  %21 = getelementptr inbounds i16, i16* %2, i32 %17, !dbg !10222
  store i16 %20, i16* %21, align 2, !dbg !10223
  %22 = add nuw nsw i32 %17, 1, !dbg !10224
  call void @llvm.dbg.value(metadata i32 %22, metadata !10197, metadata !DIExpression()), !dbg !10201
  %23 = icmp eq i32 %22, 3, !dbg !10225
  br i1 %23, label %24, label %16, !dbg !10217, !llvm.loop !10226

24:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %6) #22, !dbg !10228
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #22, !dbg !10228
  ret void, !dbg !10229
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_NORFLASH_ROMSpace() local_unnamed_addr #10 !dbg !10230 {
  ret i32 3932160, !dbg !10231
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_NORFLASH_Size() local_unnamed_addr #10 !dbg !10232 {
  ret i32 4194304, !dbg !10233
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Initialize_FDD_tables() local_unnamed_addr #0 !dbg !10234 {
  %1 = tail call i32 @ComboMem_Initialize() #20, !dbg !10235
  ret void, !dbg !10236
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @nor_sweep_device() local_unnamed_addr #10 !dbg !10237 {
  ret void, !dbg !10238
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @nor_manual_reclaim() local_unnamed_addr #10 !dbg !10239 {
  ret void, !dbg !10240
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_fat_addr() local_unnamed_addr #10 !dbg !10241 {
  ret i32 3932160, !dbg !10242
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_fat_len() local_unnamed_addr #10 !dbg !10243 {
  ret i32 262144, !dbg !10244
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Custom_NOR_Init() local_unnamed_addr #0 !dbg !10245 {
  %1 = tail call i32 @CMEM_Init_FullDriver() #20, !dbg !10246
  ret void, !dbg !10247
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_NORFLASH_Base() local_unnamed_addr #10 !dbg !10248 {
  ret i32 134217728, !dbg !10249
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_FLASH_Size() local_unnamed_addr #10 !dbg !10250 {
  ret i32 4194304, !dbg !10251
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @INT_RetrieveFlashBaseAddr() local_unnamed_addr #6 !dbg !10252 {
  store i8* inttoptr (i32 134217728 to i8*), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 1), align 4, !dbg !10253
  ret i32 134217728, !dbg !10254
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Init_NOR_MTD_Common() local_unnamed_addr #0 !dbg !10255 {
  store i32 xor (i32 ptrtoint ([8 x %struct.hal_cache_region_config_t]* @RegionInfo to i32), i32 -1), i32* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 0), align 4, !dbg !10256
  %1 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !10257
  %2 = load i32, i32* @cmem_nor_index, align 4, !dbg !10258
  %3 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 1, !dbg !10259
  %4 = load i16, i16* %3, align 2, !dbg !10259
  %5 = zext i16 %4 to i32, !dbg !10257
  store i32 %5, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !10260
  %6 = tail call i8* @memset(i8* noundef bitcast ([2 x %struct.hal_cache_region_config_t]* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 11, i32 0) to i8*), i32 noundef 255, i32 noundef 128) #20, !dbg !10261
  %7 = tail call i32 @INT_RetrieveFlashBaseAddr() #21, !dbg !10262
  store i8* inttoptr (i32 138149888 to i8*), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 1), align 4, !dbg !10263
  store %struct.hal_cache_region_config_t* getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @RegionInfo, i32 0, i32 0), %struct.hal_cache_region_config_t** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 5), align 4, !dbg !10264
  ret i32 0, !dbg !10265
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Init_NOR_MTD_SF() local_unnamed_addr #0 !dbg !10266 {
  store %struct.NOR_MTD_Driver* @NORFlashMtd, %struct.NOR_MTD_Driver** getelementptr inbounds (%struct.NOR_FLASH_DRV_Data, %struct.NOR_FLASH_DRV_Data* @FlashDriveData, i32 0, i32 1), align 4, !dbg !10269
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @StatusMap, i32 0, i32 0), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 12), align 4, !dbg !10270
  store %struct.SF_MTD_CMD* @sf_dal_data_cmd, %struct.SF_MTD_CMD** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 13), align 4, !dbg !10271
  store i16 0, i16* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 23), align 2, !dbg !10272
  %1 = tail call i32 @INT_RetrieveFlashBaseAddr() #21, !dbg !10273
  %2 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !10274
  %3 = load i32, i32* @cmem_nor_index, align 4, !dbg !10275
  %4 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %2, i32 %3, i32 2, !dbg !10276
  %5 = load i32, i32* %4, align 4, !dbg !10276
  %6 = tail call i32 @SF_DAL_Init_Driver(%struct.NOR_MTD_Driver* noundef nonnull @NORFlashMtd, %struct.SF_MTD_Data* noundef nonnull @mtdflash, i32 noundef 138149888, i32 noundef %5) #20, !dbg !10277
  call void @llvm.dbg.value(metadata i32 %6, metadata !10268, metadata !DIExpression()), !dbg !10278
  %7 = icmp eq i32 %6, -120, !dbg !10279
  %8 = select i1 %7, i32 5, i32 0, !dbg !10278
  ret i32 %8, !dbg !10281
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i8 @EMINIT_CMEM_GET_NOR_FLASH_COUNT() local_unnamed_addr #10 !dbg !10282 {
  ret i8 1, !dbg !10284
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @EMINIT_CMEM_GET_NOR_FLASH_SIZE(i8 noundef zeroext %0) local_unnamed_addr #0 !dbg !10285 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !10289, metadata !DIExpression()), !dbg !10292
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* null, metadata !10291, metadata !DIExpression()), !dbg !10292
  %2 = tail call i32 @CMEM_EMIINIT_Index() #20, !dbg !10293
  call void @llvm.dbg.value(metadata i32 %2, metadata !10290, metadata !DIExpression()), !dbg !10292
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), metadata !10291, metadata !DIExpression()), !dbg !10292
  %3 = getelementptr inbounds %struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 %2, i32 4, i32 0, i32 0, !dbg !10294
  %4 = load i32, i32* %3, align 4, !dbg !10294
  ret i32 %4, !dbg !10295
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @CMEM_BlockSize_Internal(i32 noundef %0, %struct.hal_cache_region_config_t* nocapture noundef readonly %1) local_unnamed_addr #12 !dbg !10296 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10300, metadata !DIExpression()), !dbg !10303
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %1, metadata !10301, metadata !DIExpression()), !dbg !10303
  %3 = and i32 %0, 134217727, !dbg !10304
  call void @llvm.dbg.value(metadata i32 %3, metadata !10300, metadata !DIExpression()), !dbg !10303
  call void @llvm.dbg.value(metadata i16 0, metadata !10302, metadata !DIExpression()), !dbg !10303
  %4 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 1, i32 1, !dbg !10305
  %5 = load i32, i32* %4, align 4, !dbg !10305
  %6 = icmp eq i32 %5, 0, !dbg !10308
  br i1 %6, label %25, label %7, !dbg !10309

7:                                                ; preds = %2, %18
  %8 = phi i32 [ %21, %18 ], [ 1, %2 ]
  %9 = phi i32 [ %20, %18 ], [ 0, %2 ]
  %10 = phi i16 [ %19, %18 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i16 %10, metadata !10302, metadata !DIExpression()), !dbg !10303
  %11 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 %9, i32 0, !dbg !10310
  %12 = load i32, i32* %11, align 4, !dbg !10310
  %13 = icmp ult i32 %3, %12, !dbg !10313
  br i1 %13, label %18, label %14, !dbg !10314

14:                                               ; preds = %7
  %15 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 %8, i32 0, !dbg !10315
  %16 = load i32, i32* %15, align 4, !dbg !10315
  %17 = icmp ult i32 %3, %16, !dbg !10316
  br i1 %17, label %25, label %18, !dbg !10317

18:                                               ; preds = %7, %14
  %19 = add i16 %10, 1, !dbg !10318
  call void @llvm.dbg.value(metadata i16 %19, metadata !10302, metadata !DIExpression()), !dbg !10303
  %20 = zext i16 %19 to i32, !dbg !10319
  %21 = add nuw nsw i32 %20, 1, !dbg !10320
  %22 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 %21, i32 1, !dbg !10305
  %23 = load i32, i32* %22, align 4, !dbg !10305
  %24 = icmp eq i32 %23, 0, !dbg !10308
  br i1 %24, label %25, label %7, !dbg !10309, !llvm.loop !10321

25:                                               ; preds = %18, %14, %2
  %26 = phi i32 [ 0, %2 ], [ %9, %14 ], [ %20, %18 ], !dbg !10319
  %27 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 %26, i32 1, !dbg !10323
  %28 = load i32, i32* %27, align 4, !dbg !10323
  ret i32 %28, !dbg !10324
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @CMEM_BlockSize(i32 noundef %0) local_unnamed_addr #12 !dbg !10325 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10327, metadata !DIExpression()), !dbg !10328
  %2 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** @BlockLayout, align 4, !dbg !10329
  %3 = tail call i32 @CMEM_BlockSize_Internal(i32 noundef %0, %struct.hal_cache_region_config_t* noundef %2) #21, !dbg !10330
  ret i32 %3, !dbg !10331
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @EMIINIT_CMEM_BlockSize(i32 noundef %0) local_unnamed_addr #0 !dbg !10332 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10334, metadata !DIExpression()), !dbg !10337
  %2 = tail call i32 @CMEM_EMIINIT_Index() #20, !dbg !10338
  call void @llvm.dbg.value(metadata i32 %2, metadata !10335, metadata !DIExpression()), !dbg !10337
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* null, metadata !10336, metadata !DIExpression()), !dbg !10337
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), metadata !10336, metadata !DIExpression()), !dbg !10337
  %3 = getelementptr inbounds %struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 %2, i32 3, i32 0, !dbg !10339
  %4 = tail call i32 @CMEM_BlockSize_Internal(i32 noundef %0, %struct.hal_cache_region_config_t* noundef nonnull %3) #21, !dbg !10340
  ret i32 %4, !dbg !10341
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @NOR_Get_FlashSizeFromBankInfo(%struct.hal_cache_region_config_t* nocapture noundef readonly %0) local_unnamed_addr #12 !dbg !10342 {
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %0, metadata !10348, metadata !DIExpression()), !dbg !10351
  call void @llvm.dbg.value(metadata i32 0, metadata !10349, metadata !DIExpression()), !dbg !10351
  call void @llvm.dbg.value(metadata i32 0, metadata !10350, metadata !DIExpression()), !dbg !10351
  %2 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 0, i32 0, !dbg !10352
  %3 = load i32, i32* %2, align 4, !dbg !10352
  %4 = icmp eq i32 %3, 0, !dbg !10355
  br i1 %4, label %17, label %5, !dbg !10356

5:                                                ; preds = %1, %5
  %6 = phi i32 [ %15, %5 ], [ %3, %1 ]
  %7 = phi i32 [ %13, %5 ], [ 0, %1 ]
  %8 = phi i32 [ %12, %5 ], [ 0, %1 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !10350, metadata !DIExpression()), !dbg !10351
  call void @llvm.dbg.value(metadata i32 %8, metadata !10349, metadata !DIExpression()), !dbg !10351
  %9 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 %7, i32 1, !dbg !10357
  %10 = load i32, i32* %9, align 4, !dbg !10357
  %11 = mul i32 %10, %6, !dbg !10359
  %12 = add i32 %11, %8, !dbg !10360
  call void @llvm.dbg.value(metadata i32 %12, metadata !10349, metadata !DIExpression()), !dbg !10351
  %13 = add i32 %7, 1, !dbg !10361
  call void @llvm.dbg.value(metadata i32 %13, metadata !10350, metadata !DIExpression()), !dbg !10351
  %14 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 %13, i32 0, !dbg !10352
  %15 = load i32, i32* %14, align 4, !dbg !10352
  %16 = icmp eq i32 %15, 0, !dbg !10355
  br i1 %16, label %17, label %5, !dbg !10356, !llvm.loop !10362

17:                                               ; preds = %5, %1
  %18 = phi i32 [ 0, %1 ], [ %12, %5 ], !dbg !10351
  ret i32 %18, !dbg !10364
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @CMEM_NOR_Construct_RegionInfo_Internal(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* nocapture noundef %2, %struct.hal_cache_region_config_t* nocapture noundef readonly %3) local_unnamed_addr #13 !dbg !10365 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10369, metadata !DIExpression()), !dbg !10378
  call void @llvm.dbg.value(metadata i32 %1, metadata !10370, metadata !DIExpression()), !dbg !10378
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %2, metadata !10371, metadata !DIExpression()), !dbg !10378
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %3, metadata !10372, metadata !DIExpression()), !dbg !10378
  %5 = add i32 %1, %0, !dbg !10379
  call void @llvm.dbg.value(metadata i32 %5, metadata !10377, metadata !DIExpression()), !dbg !10378
  call void @llvm.dbg.value(metadata i32 %0, metadata !10373, metadata !DIExpression()), !dbg !10378
  call void @llvm.dbg.value(metadata i32 0, metadata !10374, metadata !DIExpression()), !dbg !10378
  call void @llvm.dbg.value(metadata i32 0, metadata !10376, metadata !DIExpression()), !dbg !10378
  %6 = icmp ugt i32 %5, %0, !dbg !10380
  br i1 %6, label %7, label %34, !dbg !10383

7:                                                ; preds = %4, %29
  %8 = phi i32 [ %32, %29 ], [ 0, %4 ]
  %9 = phi i32 [ %31, %29 ], [ %0, %4 ]
  %10 = phi i32 [ %30, %29 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !10376, metadata !DIExpression()), !dbg !10378
  call void @llvm.dbg.value(metadata i32 %9, metadata !10373, metadata !DIExpression()), !dbg !10378
  call void @llvm.dbg.value(metadata i32 %10, metadata !10374, metadata !DIExpression()), !dbg !10378
  %11 = tail call i32 @CMEM_BlockSize_Internal(i32 noundef %9, %struct.hal_cache_region_config_t* noundef %3) #21, !dbg !10384
  call void @llvm.dbg.value(metadata i32 %11, metadata !10375, metadata !DIExpression()), !dbg !10378
  %12 = icmp eq i32 %8, 0, !dbg !10386
  %13 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %10, i32 0, !dbg !10388
  br i1 %12, label %14, label %16, !dbg !10389

14:                                               ; preds = %7
  store i32 %11, i32* %13, align 4, !dbg !10390
  %15 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %10, i32 1, !dbg !10392
  store i32 1, i32* %15, align 4, !dbg !10393
  br label %29, !dbg !10394

16:                                               ; preds = %7
  %17 = load i32, i32* %13, align 4, !dbg !10395
  %18 = icmp eq i32 %11, %17, !dbg !10397
  br i1 %18, label %19, label %23, !dbg !10398

19:                                               ; preds = %16
  %20 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %10, i32 1, !dbg !10399
  %21 = load i32, i32* %20, align 4, !dbg !10401
  %22 = add i32 %21, 1, !dbg !10401
  store i32 %22, i32* %20, align 4, !dbg !10401
  br label %29, !dbg !10402

23:                                               ; preds = %16
  %24 = add i32 %10, 1, !dbg !10403
  call void @llvm.dbg.value(metadata i32 %24, metadata !10374, metadata !DIExpression()), !dbg !10378
  %25 = icmp eq i32 %24, 9, !dbg !10405
  br i1 %25, label %34, label %26, !dbg !10407

26:                                               ; preds = %23
  %27 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %24, i32 0, !dbg !10408
  store i32 %11, i32* %27, align 4, !dbg !10409
  %28 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %24, i32 1, !dbg !10410
  store i32 1, i32* %28, align 4, !dbg !10411
  br label %29

29:                                               ; preds = %19, %26, %14
  %30 = phi i32 [ %10, %14 ], [ %10, %19 ], [ %24, %26 ], !dbg !10412
  call void @llvm.dbg.value(metadata i32 %30, metadata !10374, metadata !DIExpression()), !dbg !10378
  %31 = add i32 %11, %9, !dbg !10413
  call void @llvm.dbg.value(metadata i32 %31, metadata !10373, metadata !DIExpression()), !dbg !10378
  %32 = add i32 %8, 1, !dbg !10414
  call void @llvm.dbg.value(metadata i32 %32, metadata !10376, metadata !DIExpression()), !dbg !10378
  %33 = icmp ult i32 %31, %5, !dbg !10380
  br i1 %33, label %7, label %34, !dbg !10383, !llvm.loop !10415

34:                                               ; preds = %23, %29, %4
  %35 = phi i32 [ 0, %4 ], [ 0, %29 ], [ 6, %23 ], !dbg !10378
  ret i32 %35, !dbg !10417
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_Construct_RegionInfo(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* noundef %2) local_unnamed_addr #0 !dbg !10418 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10422, metadata !DIExpression()), !dbg !10425
  call void @llvm.dbg.value(metadata i32 %1, metadata !10423, metadata !DIExpression()), !dbg !10425
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %2, metadata !10424, metadata !DIExpression()), !dbg !10425
  %4 = bitcast %struct.hal_cache_region_config_t* %2 to i8*, !dbg !10426
  %5 = tail call i8* @memset(i8* noundef %4, i32 noundef 0, i32 noundef 64) #20, !dbg !10427
  %6 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** @BlockLayout, align 4, !dbg !10428
  %7 = tail call i32 @CMEM_NOR_Construct_RegionInfo_Internal(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* noundef %2, %struct.hal_cache_region_config_t* noundef %6) #21, !dbg !10429
  ret i32 %7, !dbg !10430
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @NOR_Construct_DualRegionInfo(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* nocapture noundef readnone %2) local_unnamed_addr #10 !dbg !10431 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10433, metadata !DIExpression()), !dbg !10436
  call void @llvm.dbg.value(metadata i32 %1, metadata !10434, metadata !DIExpression()), !dbg !10436
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %2, metadata !10435, metadata !DIExpression()), !dbg !10436
  ret i32 0, !dbg !10437
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @EMIINIT_CMEM_NOR_Construct_RegionInfo(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* nocapture noundef %2) local_unnamed_addr #0 !dbg !10438 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10440, metadata !DIExpression()), !dbg !10445
  call void @llvm.dbg.value(metadata i32 %1, metadata !10441, metadata !DIExpression()), !dbg !10445
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %2, metadata !10442, metadata !DIExpression()), !dbg !10445
  %4 = tail call i32 @CMEM_EMIINIT_Index() #20, !dbg !10446
  call void @llvm.dbg.value(metadata i32 %4, metadata !10443, metadata !DIExpression()), !dbg !10445
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* null, metadata !10444, metadata !DIExpression()), !dbg !10445
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), metadata !10444, metadata !DIExpression()), !dbg !10445
  %5 = getelementptr inbounds %struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 %4, i32 3, i32 0, !dbg !10447
  %6 = tail call i32 @CMEM_NOR_Construct_RegionInfo_Internal(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* noundef %2, %struct.hal_cache_region_config_t* noundef nonnull %5) #21, !dbg !10448
  ret i32 %6, !dbg !10449
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @EMIINIT_CMEM_NOR_Construct_DualRegionInfo(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* nocapture noundef readnone %2) local_unnamed_addr #10 !dbg !10450 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10452, metadata !DIExpression()), !dbg !10455
  call void @llvm.dbg.value(metadata i32 %1, metadata !10453, metadata !DIExpression()), !dbg !10455
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %2, metadata !10454, metadata !DIExpression()), !dbg !10455
  ret i32 0, !dbg !10456
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @EMIINIT_CMEM_NOR_GetUniformBlock(i16 noundef zeroext %0) local_unnamed_addr #0 !dbg !10457 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !10459, metadata !DIExpression()), !dbg !10462
  %2 = tail call i32 @CMEM_EMIINIT_Index() #20, !dbg !10463
  call void @llvm.dbg.value(metadata i32 %2, metadata !10460, metadata !DIExpression()), !dbg !10462
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* null, metadata !10461, metadata !DIExpression()), !dbg !10462
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), metadata !10461, metadata !DIExpression()), !dbg !10462
  %3 = getelementptr inbounds %struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 %2, i32 2, !dbg !10464
  %4 = load i32, i32* %3, align 4, !dbg !10464
  ret i32 %4, !dbg !10465
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @CMEM_NOR_AddBankInfo(%struct.hal_cache_region_config_t* nocapture noundef %0, i32* nocapture noundef %1, i32 noundef %2) local_unnamed_addr #7 !dbg !10466 {
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %0, metadata !10470, metadata !DIExpression()), !dbg !10473
  call void @llvm.dbg.value(metadata i32* %1, metadata !10471, metadata !DIExpression()), !dbg !10473
  call void @llvm.dbg.value(metadata i32 %2, metadata !10472, metadata !DIExpression()), !dbg !10473
  %4 = load i32, i32* %1, align 4, !dbg !10474
  %5 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 %4, i32 0, !dbg !10476
  %6 = load i32, i32* %5, align 4, !dbg !10476
  %7 = icmp eq i32 %6, %2, !dbg !10477
  br i1 %7, label %8, label %12, !dbg !10478

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 %4, i32 1, !dbg !10479
  %10 = load i32, i32* %9, align 4, !dbg !10481
  %11 = add i32 %10, 1, !dbg !10481
  store i32 %11, i32* %9, align 4, !dbg !10481
  br label %17, !dbg !10482

12:                                               ; preds = %3
  %13 = add i32 %4, 1, !dbg !10483
  store i32 %13, i32* %1, align 4, !dbg !10483
  %14 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 %13, i32 1, !dbg !10485
  store i32 1, i32* %14, align 4, !dbg !10486
  %15 = load i32, i32* %1, align 4, !dbg !10487
  %16 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 %15, i32 0, !dbg !10488
  store i32 %2, i32* %16, align 4, !dbg !10489
  br label %17

17:                                               ; preds = %12, %8
  ret void, !dbg !10490
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_NOR_Construct_BankInfo(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* noundef %2, %struct.hal_cache_region_config_t* nocapture noundef readonly %3) local_unnamed_addr #0 !dbg !10491 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10495, metadata !DIExpression()), !dbg !10504
  call void @llvm.dbg.value(metadata i32 %1, metadata !10496, metadata !DIExpression()), !dbg !10504
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %2, metadata !10497, metadata !DIExpression()), !dbg !10504
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %3, metadata !10498, metadata !DIExpression()), !dbg !10504
  call void @llvm.dbg.value(metadata i32 0, metadata !10499, metadata !DIExpression()), !dbg !10504
  call void @llvm.dbg.value(metadata i32 0, metadata !10500, metadata !DIExpression()), !dbg !10504
  %5 = bitcast %struct.hal_cache_region_config_t* %2 to i8*, !dbg !10505
  %6 = tail call i8* @memset(i8* noundef %5, i32 noundef 0, i32 noundef 64) #20, !dbg !10506
  call void @llvm.dbg.value(metadata i32 0, metadata !10503, metadata !DIExpression()), !dbg !10504
  call void @llvm.dbg.value(metadata i32 0, metadata !10502, metadata !DIExpression()), !dbg !10504
  call void @llvm.dbg.value(metadata i32 0, metadata !10500, metadata !DIExpression()), !dbg !10504
  call void @llvm.dbg.value(metadata i32 0, metadata !10499, metadata !DIExpression()), !dbg !10504
  call void @llvm.dbg.value(metadata i32 %0, metadata !10495, metadata !DIExpression()), !dbg !10504
  call void @llvm.dbg.value(metadata i32 %1, metadata !10496, metadata !DIExpression()), !dbg !10504
  %7 = icmp eq i32 %1, 0, !dbg !10507
  br i1 %7, label %53, label %8, !dbg !10510

8:                                                ; preds = %4, %46
  %9 = phi i32 [ %51, %46 ], [ 0, %4 ]
  %10 = phi i32 [ %23, %46 ], [ 0, %4 ]
  %11 = phi i32 [ %49, %46 ], [ 0, %4 ]
  %12 = phi i32 [ %20, %46 ], [ 0, %4 ]
  %13 = phi i32 [ %48, %46 ], [ %0, %4 ]
  %14 = phi i32 [ %47, %46 ], [ %1, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !10503, metadata !DIExpression()), !dbg !10504
  call void @llvm.dbg.value(metadata i32 %10, metadata !10502, metadata !DIExpression()), !dbg !10504
  call void @llvm.dbg.value(metadata i32 %11, metadata !10500, metadata !DIExpression()), !dbg !10504
  call void @llvm.dbg.value(metadata i32 %12, metadata !10499, metadata !DIExpression()), !dbg !10504
  call void @llvm.dbg.value(metadata i32 %13, metadata !10495, metadata !DIExpression()), !dbg !10504
  call void @llvm.dbg.value(metadata i32 %14, metadata !10496, metadata !DIExpression()), !dbg !10504
  %15 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %3, i32 %12, i32 1, !dbg !10511
  %16 = load i32, i32* %15, align 4, !dbg !10511
  %17 = icmp ult i32 %9, %16, !dbg !10514
  %18 = xor i1 %17, true, !dbg !10515
  %19 = zext i1 %18 to i32, !dbg !10515
  %20 = add i32 %12, %19, !dbg !10515
  call void @llvm.dbg.value(metadata i32 undef, metadata !10503, metadata !DIExpression()), !dbg !10504
  call void @llvm.dbg.value(metadata i32 %20, metadata !10499, metadata !DIExpression()), !dbg !10504
  %21 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %3, i32 %20, i32 0, !dbg !10516
  %22 = load i32, i32* %21, align 4, !dbg !10516
  %23 = add i32 %22, %10, !dbg !10517
  call void @llvm.dbg.value(metadata i32 %23, metadata !10502, metadata !DIExpression()), !dbg !10504
  %24 = icmp ult i32 %23, %13, !dbg !10518
  br i1 %24, label %46, label %25, !dbg !10520

25:                                               ; preds = %8
  %26 = sub i32 %23, %13, !dbg !10521
  call void @llvm.dbg.value(metadata i32 %26, metadata !10501, metadata !DIExpression()), !dbg !10504
  %27 = icmp ult i32 %14, %26, !dbg !10523
  %28 = select i1 %27, i32 %14, i32 %26, !dbg !10525
  call void @llvm.dbg.value(metadata i32 %28, metadata !10501, metadata !DIExpression()), !dbg !10504
  %29 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %11, i32 0, !dbg !10526
  %30 = load i32, i32* %29, align 4, !dbg !10526
  %31 = icmp eq i32 %30, %28, !dbg !10528
  br i1 %31, label %32, label %36, !dbg !10529

32:                                               ; preds = %25
  %33 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %11, i32 1, !dbg !10530
  %34 = load i32, i32* %33, align 4, !dbg !10532
  %35 = add i32 %34, 1, !dbg !10532
  store i32 %35, i32* %33, align 4, !dbg !10532
  br label %42, !dbg !10533

36:                                               ; preds = %25
  %37 = icmp ne i32 %30, 0, !dbg !10534
  %38 = zext i1 %37 to i32, !dbg !10537
  %39 = add nsw i32 %11, %38, !dbg !10537
  call void @llvm.dbg.value(metadata i32 %39, metadata !10500, metadata !DIExpression()), !dbg !10504
  %40 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %39, i32 1, !dbg !10538
  store i32 1, i32* %40, align 4, !dbg !10539
  %41 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %39, i32 0, !dbg !10540
  store i32 %28, i32* %41, align 4, !dbg !10541
  br label %42

42:                                               ; preds = %36, %32
  %43 = phi i32 [ %11, %32 ], [ %39, %36 ], !dbg !10504
  call void @llvm.dbg.value(metadata i32 %43, metadata !10500, metadata !DIExpression()), !dbg !10504
  %44 = add i32 %28, %13, !dbg !10542
  call void @llvm.dbg.value(metadata i32 %44, metadata !10495, metadata !DIExpression()), !dbg !10504
  %45 = sub i32 %14, %28, !dbg !10543
  call void @llvm.dbg.value(metadata i32 %45, metadata !10496, metadata !DIExpression()), !dbg !10504
  br label %46, !dbg !10544

46:                                               ; preds = %8, %42
  %47 = phi i32 [ %45, %42 ], [ %14, %8 ]
  %48 = phi i32 [ %44, %42 ], [ %13, %8 ]
  %49 = phi i32 [ %43, %42 ], [ %11, %8 ], !dbg !10545
  call void @llvm.dbg.value(metadata i32 %49, metadata !10500, metadata !DIExpression()), !dbg !10504
  call void @llvm.dbg.value(metadata i32 %48, metadata !10495, metadata !DIExpression()), !dbg !10504
  call void @llvm.dbg.value(metadata i32 %47, metadata !10496, metadata !DIExpression()), !dbg !10504
  %50 = add nuw i32 %9, 1, !dbg !10546
  %51 = select i1 %17, i32 %50, i32 1, !dbg !10546
  call void @llvm.dbg.value(metadata i32 %51, metadata !10503, metadata !DIExpression()), !dbg !10504
  call void @llvm.dbg.value(metadata i32 %23, metadata !10502, metadata !DIExpression()), !dbg !10504
  call void @llvm.dbg.value(metadata i32 %20, metadata !10499, metadata !DIExpression()), !dbg !10504
  %52 = icmp eq i32 %47, 0, !dbg !10507
  br i1 %52, label %53, label %8, !dbg !10510, !llvm.loop !10547

53:                                               ; preds = %46, %4
  ret i32 0, !dbg !10549
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Init_NOR() local_unnamed_addr #0 !dbg !10550 {
  %1 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !10554
  %2 = load i32, i32* @cmem_nor_index, align 4, !dbg !10555
  %3 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 3, i32 0, !dbg !10554
  store %struct.hal_cache_region_config_t* %3, %struct.hal_cache_region_config_t** @BlockLayout, align 4, !dbg !10556
  %4 = tail call i32 @custom_get_fat_addr() #20, !dbg !10557
  %5 = tail call i32 @custom_get_fat_len() #20, !dbg !10558
  %6 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !10559
  %7 = load i32, i32* @cmem_nor_index, align 4, !dbg !10560
  %8 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %6, i32 %7, i32 4, i32 0, !dbg !10559
  %9 = tail call i32 @CMEM_NOR_Construct_BankInfo(i32 noundef %4, i32 noundef %5, %struct.hal_cache_region_config_t* noundef getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @BankInfo, i32 0, i32 0), %struct.hal_cache_region_config_t* noundef nonnull %8) #21, !dbg !10561
  %10 = tail call i32 @custom_get_fat_addr() #20, !dbg !10562
  %11 = tail call i32 @custom_get_fat_len() #20, !dbg !10563
  %12 = tail call i32 @NOR_Construct_RegionInfo(i32 noundef %10, i32 noundef %11, %struct.hal_cache_region_config_t* noundef getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @RegionInfo, i32 0, i32 0)) #21, !dbg !10564
  call void @llvm.dbg.value(metadata i32 %12, metadata !10552, metadata !DIExpression()), !dbg !10565
  %13 = icmp eq i32 %12, 0, !dbg !10566
  br i1 %13, label %14, label %46, !dbg !10568

14:                                               ; preds = %0
  call void @llvm.dbg.value(metadata i32 0, metadata !10553, metadata !DIExpression()), !dbg !10565
  store i32 0, i32* @TOTAL_BLOCKS, align 4, !dbg !10569
  store i32 0, i32* @NOR_LARGEST_BLOCK_SIZE, align 4, !dbg !10571
  call void @llvm.dbg.value(metadata i32 0, metadata !10553, metadata !DIExpression()), !dbg !10565
  %15 = load i32, i32* getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @RegionInfo, i32 0, i32 0, i32 0), align 4, !dbg !10572
  %16 = icmp eq i32 %15, 0, !dbg !10574
  br i1 %16, label %34, label %17, !dbg !10575

17:                                               ; preds = %14, %27
  %18 = phi i32 [ %31, %27 ], [ %15, %14 ]
  %19 = phi i32 [ %29, %27 ], [ 0, %14 ]
  %20 = phi i32 [ %24, %27 ], [ 0, %14 ]
  %21 = phi i32 [ %28, %27 ], [ 0, %14 ]
  call void @llvm.dbg.value(metadata i32 %19, metadata !10553, metadata !DIExpression()), !dbg !10565
  %22 = getelementptr inbounds [8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @RegionInfo, i32 0, i32 %19, i32 1, !dbg !10576
  %23 = load i32, i32* %22, align 4, !dbg !10576
  %24 = add i32 %20, %23, !dbg !10578
  %25 = icmp ugt i32 %18, %21, !dbg !10579
  br i1 %25, label %26, label %27, !dbg !10581

26:                                               ; preds = %17
  store i32 %18, i32* @NOR_LARGEST_BLOCK_SIZE, align 4, !dbg !10582
  br label %27, !dbg !10584

27:                                               ; preds = %17, %26
  %28 = phi i32 [ %21, %17 ], [ %18, %26 ]
  %29 = add nuw nsw i32 %19, 1, !dbg !10585
  call void @llvm.dbg.value(metadata i32 %29, metadata !10553, metadata !DIExpression()), !dbg !10565
  %30 = getelementptr inbounds [8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @RegionInfo, i32 0, i32 %29, i32 0, !dbg !10572
  %31 = load i32, i32* %30, align 4, !dbg !10572
  %32 = icmp eq i32 %31, 0, !dbg !10574
  br i1 %32, label %33, label %17, !dbg !10575, !llvm.loop !10586

33:                                               ; preds = %27
  store i32 %24, i32* @TOTAL_BLOCKS, align 4, !dbg !10578
  br label %34, !dbg !10575

34:                                               ; preds = %33, %14
  %35 = phi i32 [ %28, %33 ], [ 0, %14 ], !dbg !10588
  %36 = mul i32 %35, -5, !dbg !10589
  %37 = add i32 %36, 262144, !dbg !10590
  %38 = lshr i32 %37, 9, !dbg !10591
  store i32 %38, i32* @TOTAL_SECTORS, align 4, !dbg !10592
  %39 = tail call i32 @CMEM_Init_NOR_MTD_Common() #21, !dbg !10593
  call void @llvm.dbg.value(metadata i32 0, metadata !10552, metadata !DIExpression()), !dbg !10565
  %40 = load %struct.CMEMEntryID*, %struct.CMEMEntryID** @cmem_id, align 4, !dbg !10594
  %41 = getelementptr inbounds %struct.CMEMEntryID, %struct.CMEMEntryID* %40, i32 0, i32 0, !dbg !10595
  %42 = load i8, i8* %41, align 1, !dbg !10595
  %43 = icmp eq i8 %42, 3, !dbg !10596
  br i1 %43, label %44, label %46, !dbg !10596

44:                                               ; preds = %34
  %45 = tail call i32 @CMEM_Init_NOR_MTD_SF() #21, !dbg !10597
  call void @llvm.dbg.value(metadata i32 %45, metadata !10552, metadata !DIExpression()), !dbg !10565
  br label %46, !dbg !10599

46:                                               ; preds = %44, %34, %0
  %47 = phi i32 [ %12, %0 ], [ %45, %44 ], [ 3, %34 ], !dbg !10565
  ret i32 %47, !dbg !10600
}

; Function Attrs: noinline nounwind optsize
define dso_local void @CMEM_Init_nor_list(i32 noundef %0) local_unnamed_addr #0 !dbg !10601 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10605, metadata !DIExpression()), !dbg !10606
  %2 = icmp eq i32 %0, 0, !dbg !10607
  br i1 %2, label %3, label %9, !dbg !10609

3:                                                ; preds = %1
  %4 = tail call i32 @CMEM_Index() #20, !dbg !10610
  store i32 %4, i32* @cmem_nor_index, align 4, !dbg !10612
  %5 = icmp slt i32 %4, 0, !dbg !10613
  br i1 %5, label %6, label %7, !dbg !10615

6:                                                ; preds = %3
  tail call void @Flash_ReturnReady() #20, !dbg !10616
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.119, i32 0, i32 0), i32 noundef 921, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.CMEM_Init_nor_list, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.120, i32 0, i32 0)) #23, !dbg !10616
  unreachable, !dbg !10616

7:                                                ; preds = %3
  %8 = tail call %struct.CMEMEntryID* @CMEM_GetIDEntry(i32 noundef %4) #20, !dbg !10621
  store %struct.CMEMEntryID* %8, %struct.CMEMEntryID** @cmem_id, align 4, !dbg !10622
  br label %9, !dbg !10623

9:                                                ; preds = %7, %1
  store %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !10624
  ret void, !dbg !10625
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @ComboMem_Initialize() local_unnamed_addr #0 !dbg !10626 {
  tail call void @CMEM_Init_nor_list(i32 noundef 0) #21, !dbg !10627
  %1 = tail call i32 @CMEM_Init_NOR() #21, !dbg !10628
  ret i32 %1, !dbg !10629
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Init_FullDriver() local_unnamed_addr #0 !dbg !10630 {
  tail call void @CMEM_Init_nor_list(i32 noundef 0) #21, !dbg !10633
  %1 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !10634
  %2 = load i32, i32* @cmem_nor_index, align 4, !dbg !10635
  %3 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 1, !dbg !10636
  %4 = load i16, i16* %3, align 2, !dbg !10636
  %5 = zext i16 %4 to i32, !dbg !10634
  store i32 %5, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !10637
  %6 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 3, i32 0, !dbg !10638
  store %struct.hal_cache_region_config_t* %6, %struct.hal_cache_region_config_t** @BlockLayout, align 4, !dbg !10639
  %7 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 4, i32 0, !dbg !10640
  %8 = bitcast %struct.hal_cache_region_config_t* %7 to i8*, !dbg !10640
  %9 = tail call i8* @memcpy(i8* noundef bitcast ([8 x %struct.hal_cache_region_config_t]* @BankInfo to i8*), i8* noundef nonnull %8, i32 noundef 64) #20, !dbg !10641
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @StatusMap, i32 0, i32 0), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 12), align 4, !dbg !10642
  store %struct.SF_MTD_CMD* @sf_dal_data_cmd, %struct.SF_MTD_CMD** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 13), align 4, !dbg !10643
  store i16 0, i16* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 23), align 2, !dbg !10644
  store i32 xor (i32 ptrtoint ([8 x %struct.hal_cache_region_config_t]* @EntireDiskRegionInfo to i32), i32 -1), i32* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 0), align 4, !dbg !10645
  store i8* inttoptr (i32 134217728 to i8*), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 1), align 4, !dbg !10646
  %10 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !10647
  %11 = load i32, i32* @cmem_nor_index, align 4, !dbg !10648
  %12 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %10, i32 %11, i32 2, !dbg !10649
  %13 = load i32, i32* %12, align 4, !dbg !10649
  %14 = tail call i32 @SF_DAL_Init_Driver(%struct.NOR_MTD_Driver* noundef nonnull @NORFlashMtd, %struct.SF_MTD_Data* noundef nonnull @EntireDiskMtdData, i32 noundef 134217728, i32 noundef %13) #20, !dbg !10650
  call void @llvm.dbg.value(metadata i32 %14, metadata !10632, metadata !DIExpression()), !dbg !10651
  %15 = icmp eq i32 %14, -120, !dbg !10652
  br i1 %15, label %16, label %17, !dbg !10655

16:                                               ; preds = %0
  tail call void @Flash_ReturnReady() #20, !dbg !10656
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.119, i32 0, i32 0), i32 noundef 1063, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.CMEM_Init_FullDriver, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.120, i32 0, i32 0)) #23, !dbg !10656
  unreachable, !dbg !10656

17:                                               ; preds = %0
  %18 = tail call i32 @NOR_Get_FlashSizeFromBankInfo(%struct.hal_cache_region_config_t* noundef getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @BankInfo, i32 0, i32 0)) #21, !dbg !10658
  store i32 %18, i32* getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 0), align 4, !dbg !10659
  %19 = tail call i32 @NOR_Construct_RegionInfo(i32 noundef 0, i32 noundef %18, %struct.hal_cache_region_config_t* noundef getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @EntireDiskRegionInfo, i32 0, i32 0)) #21, !dbg !10660
  store %struct.hal_cache_region_config_t* getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @EntireDiskRegionInfo, i32 0, i32 0), %struct.hal_cache_region_config_t** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 5), align 4, !dbg !10661
  store %struct.NOR_MTD_Driver* @NORFlashMtd, %struct.NOR_MTD_Driver** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 1), align 4, !dbg !10662
  store i8* bitcast (%struct.SF_MTD_Data* @EntireDiskMtdData to i8*), i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !10663
  store i8 0, i8* getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 4), align 4, !dbg !10664
  ret i32 0, !dbg !10665
}

; Function Attrs: optsize
declare dso_local i8* @memcpy(i8* noundef, i8* noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @CreateFDMLock() local_unnamed_addr #10 !dbg !10666 {
  ret void, !dbg !10667
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @GetFDMLock() local_unnamed_addr #0 !dbg !10668 {
  %1 = tail call i32 @SaveAndSetIRQMask() #20, !dbg !10671
  call void @llvm.dbg.value(metadata i32 %1, metadata !10670, metadata !DIExpression()), !dbg !10672
  %2 = load i1, i1* @FDMMutex, align 4, !dbg !10673
  br i1 %2, label %4, label %3, !dbg !10675

3:                                                ; preds = %0
  store i1 true, i1* @FDMMutex, align 4, !dbg !10676
  br label %4, !dbg !10678

4:                                                ; preds = %0, %3
  %5 = phi i32 [ 0, %3 ], [ -2, %0 ], !dbg !10679
  tail call void @RestoreIRQMask(i32 noundef %1) #20, !dbg !10679
  ret i32 %5, !dbg !10680
}

; Function Attrs: noinline nounwind optsize
define dso_local void @FreeFDMLock() local_unnamed_addr #0 !dbg !10681 {
  %1 = tail call i32 @SaveAndSetIRQMask() #20, !dbg !10684
  call void @llvm.dbg.value(metadata i32 %1, metadata !10683, metadata !DIExpression()), !dbg !10685
  %2 = load i1, i1* @FDMMutex, align 4, !dbg !10686
  br i1 %2, label %3, label %4, !dbg !10688

3:                                                ; preds = %0
  store i1 false, i1* @FDMMutex, align 4, !dbg !10689
  tail call void @RestoreIRQMask(i32 noundef %1) #20, !dbg !10691
  ret void, !dbg !10692

4:                                                ; preds = %0
  tail call void @RestoreIRQMask(i32 noundef %1) #20, !dbg !10693
  tail call void @Flash_ReturnReady() #20, !dbg !10695
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.125, i32 0, i32 0), i32 noundef 112, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.FreeFDMLock, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.126, i32 0, i32 0)) #23, !dbg !10695
  unreachable, !dbg !10695
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @create_FDM_lock() local_unnamed_addr #10 !dbg !10699 {
  ret void, !dbg !10700
}

; Function Attrs: noinline nounwind optsize
define dso_local void @retrieve_FDM_lock() local_unnamed_addr #0 !dbg !10701 {
  br label %1, !dbg !10704

1:                                                ; preds = %1, %0
  %2 = tail call i32 @GetFDMLock() #21, !dbg !10705
  call void @llvm.dbg.value(metadata i32 %2, metadata !10703, metadata !DIExpression()), !dbg !10707
  %3 = icmp eq i32 %2, 0, !dbg !10708
  br i1 %3, label %4, label %1, !dbg !10709, !llvm.loop !10710

4:                                                ; preds = %1
  ret void, !dbg !10712
}

; Function Attrs: noinline nounwind optsize
define dso_local void @release_FDM_lock() local_unnamed_addr #0 !dbg !10713 {
  tail call void @FreeFDMLock() #21, !dbg !10714
  ret void, !dbg !10715
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @readRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !10716 {
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* %0, metadata !10759, metadata !DIExpression()), !dbg !10765
  call void @llvm.dbg.value(metadata i32 %1, metadata !10760, metadata !DIExpression()), !dbg !10765
  call void @llvm.dbg.value(metadata i8* %2, metadata !10761, metadata !DIExpression()), !dbg !10765
  call void @llvm.dbg.value(metadata i32 %3, metadata !10762, metadata !DIExpression()), !dbg !10765
  %5 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 0, !dbg !10766
  %6 = load i32, i32* %5, align 4, !dbg !10766
  call void @llvm.dbg.value(metadata i32 %6, metadata !10764, metadata !DIExpression()), !dbg !10765
  %7 = icmp ule i32 %6, %1, !dbg !10767
  %8 = add i32 %3, %1
  %9 = icmp ugt i32 %8, %6
  %10 = or i1 %7, %9, !dbg !10769
  br i1 %10, label %26, label %11, !dbg !10769

11:                                               ; preds = %4
  %12 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 2, !dbg !10770
  %13 = bitcast i8** %12 to %struct.NOR_Flash_MTD_Data**, !dbg !10770
  %14 = load %struct.NOR_Flash_MTD_Data*, %struct.NOR_Flash_MTD_Data** %13, align 4, !dbg !10770
  %15 = getelementptr inbounds %struct.NOR_Flash_MTD_Data, %struct.NOR_Flash_MTD_Data* %14, i32 0, i32 1, !dbg !10771
  %16 = load i8*, i8** %15, align 4, !dbg !10771
  %17 = ptrtoint i8* %16 to i32, !dbg !10772
  %18 = add i32 %17, %1, !dbg !10773
  call void @llvm.dbg.value(metadata i32 %18, metadata !10763, metadata !DIExpression()), !dbg !10765
  %19 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 4, !dbg !10774
  %20 = load i8, i8* %19, align 4, !dbg !10774, !range !2809
  %21 = icmp eq i8 %20, 0, !dbg !10774
  br i1 %21, label %22, label %23, !dbg !10776

22:                                               ; preds = %11
  tail call fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef nonnull %0) #21, !dbg !10777
  br label %23, !dbg !10779

23:                                               ; preds = %22, %11
  tail call void @retrieve_FDM_lock() #21, !dbg !10780
  %24 = inttoptr i32 %18 to i8*, !dbg !10781
  %25 = tail call i8* @memcpy(i8* noundef %2, i8* noundef %24, i32 noundef %3) #20, !dbg !10782
  tail call void @release_FDM_lock() #21, !dbg !10783
  br label %26, !dbg !10784

26:                                               ; preds = %4, %23
  %27 = phi i32 [ 0, %23 ], [ 2, %4 ], !dbg !10765
  ret i32 %27, !dbg !10785
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef %0) unnamed_addr #0 !dbg !10786 {
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* %0, metadata !10790, metadata !DIExpression()), !dbg !10792
  %2 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 4, !dbg !10793
  %3 = load i8, i8* %2, align 4, !dbg !10793, !range !2809
  %4 = icmp eq i8 %3, 0, !dbg !10793
  br i1 %4, label %5, label %18, !dbg !10795

5:                                                ; preds = %1
  tail call void @retrieve_FDM_lock() #21, !dbg !10796
  %6 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 1, !dbg !10797
  %7 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %6, align 4, !dbg !10797
  %8 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %7, i32 0, i32 0, !dbg !10798
  %9 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %8, align 4, !dbg !10798
  %10 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 2, !dbg !10799
  %11 = load i8*, i8** %10, align 4, !dbg !10799
  %12 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 3, !dbg !10800
  %13 = bitcast %struct.NOR_MTD_FlashInfo* %12 to i8*, !dbg !10801
  %14 = tail call i32 %9(i8* noundef %11, i8* noundef nonnull %13) #20, !dbg !10802
  call void @llvm.dbg.value(metadata i32 %14, metadata !10791, metadata !DIExpression()), !dbg !10792
  tail call void @release_FDM_lock() #21, !dbg !10803
  %15 = icmp slt i32 %14, 0, !dbg !10804
  br i1 %15, label %16, label %17, !dbg !10806

16:                                               ; preds = %5
  tail call void @Flash_ReturnReady() #20, !dbg !10807
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.125, i32 0, i32 0), i32 noundef 191, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.MountDevice, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.126, i32 0, i32 0)) #23, !dbg !10807
  unreachable, !dbg !10807

17:                                               ; preds = %5
  store i8 1, i8* %2, align 4, !dbg !10812
  br label %18, !dbg !10813

18:                                               ; preds = %1, %17
  ret void, !dbg !10813
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @writeRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !10814 {
  %5 = alloca i16, align 2
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* %0, metadata !10816, metadata !DIExpression()), !dbg !10837
  call void @llvm.dbg.value(metadata i32 %1, metadata !10817, metadata !DIExpression()), !dbg !10837
  call void @llvm.dbg.value(metadata i8* %2, metadata !10818, metadata !DIExpression()), !dbg !10837
  call void @llvm.dbg.value(metadata i32 %3, metadata !10819, metadata !DIExpression()), !dbg !10837
  %6 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 0, !dbg !10838
  %7 = load i32, i32* %6, align 4, !dbg !10838
  call void @llvm.dbg.value(metadata i32 %7, metadata !10822, metadata !DIExpression()), !dbg !10837
  call void @llvm.dbg.value(metadata i32 0, metadata !10823, metadata !DIExpression()), !dbg !10837
  call void @llvm.dbg.value(metadata i32 0, metadata !10824, metadata !DIExpression()), !dbg !10837
  %8 = icmp ugt i32 %7, %1, !dbg !10839
  br i1 %8, label %9, label %101, !dbg !10841

9:                                                ; preds = %4
  %10 = add i32 %3, %1, !dbg !10842
  %11 = icmp ugt i32 %10, %7, !dbg !10844
  br i1 %11, label %101, label %12, !dbg !10845

12:                                               ; preds = %9
  %13 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 4, !dbg !10846
  %14 = load i8, i8* %13, align 4, !dbg !10846, !range !2809
  %15 = icmp eq i8 %14, 0, !dbg !10846
  br i1 %15, label %16, label %17, !dbg !10848

16:                                               ; preds = %12
  tail call fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef nonnull %0) #21, !dbg !10849
  br label %17, !dbg !10851

17:                                               ; preds = %16, %12
  tail call void @retrieve_FDM_lock() #21, !dbg !10852
  %18 = bitcast i16* %5 to i8*, !dbg !10853
  call void @llvm.dbg.value(metadata i32 0, metadata !10823, metadata !DIExpression()), !dbg !10837
  call void @llvm.dbg.value(metadata i32 0, metadata !10824, metadata !DIExpression()), !dbg !10837
  %19 = icmp eq i32 %3, 0, !dbg !10854
  br i1 %19, label %99, label %20, !dbg !10855

20:                                               ; preds = %17
  %21 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 2
  %22 = ptrtoint i8* %2 to i32
  %23 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 1
  %24 = getelementptr inbounds i8, i8* %18, i32 1
  br label %25, !dbg !10855

25:                                               ; preds = %20, %96
  %26 = phi i32 [ 0, %20 ], [ %97, %96 ]
  call void @llvm.dbg.value(metadata i32 %26, metadata !10824, metadata !DIExpression()), !dbg !10837
  %27 = load i8*, i8** %21, align 4, !dbg !10856
  %28 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !10857
  %29 = bitcast i8* %28 to i8**, !dbg !10857
  %30 = load i8*, i8** %29, align 4, !dbg !10857
  %31 = ptrtoint i8* %30 to i32, !dbg !10858
  %32 = add i32 %31, %1, !dbg !10859
  %33 = add i32 %32, %26, !dbg !10860
  call void @llvm.dbg.value(metadata i32 %33, metadata !10820, metadata !DIExpression()), !dbg !10837
  %34 = add i32 %26, %22, !dbg !10861
  call void @llvm.dbg.value(metadata i32 %34, metadata !10821, metadata !DIExpression()), !dbg !10837
  %35 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %23, align 4, !dbg !10862
  %36 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %35, i32 0, i32 2, !dbg !10863
  %37 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %36, align 4, !dbg !10863
  %38 = add i32 %26, %1, !dbg !10864
  %39 = call i32 @BlockIndex(i8* noundef %27, i32 noundef %38) #20, !dbg !10865
  %40 = call i8* %37(i8* noundef %27, i32 noundef %39, i32 noundef 0) #20, !dbg !10866
  %41 = and i32 %33, 1, !dbg !10867
  %42 = icmp eq i32 %41, 0, !dbg !10867
  br i1 %42, label %43, label %46, !dbg !10868

43:                                               ; preds = %25
  %44 = sub i32 %3, %26, !dbg !10869
  %45 = icmp eq i32 %44, 1, !dbg !10870
  br i1 %45, label %46, label %57, !dbg !10871

46:                                               ; preds = %43, %25
  %47 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %23, align 4, !dbg !10872
  %48 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %47, i32 0, i32 4, !dbg !10874
  %49 = load i32 (i8*, i8*, i8*, i32)*, i32 (i8*, i8*, i8*, i32)** %48, align 4, !dbg !10874
  %50 = load i8*, i8** %21, align 4, !dbg !10875
  %51 = inttoptr i32 %33 to i8*, !dbg !10876
  %52 = inttoptr i32 %34 to i8*, !dbg !10877
  %53 = call i32 %49(i8* noundef %50, i8* noundef %51, i8* noundef %52, i32 noundef 1) #20, !dbg !10878
  call void @llvm.dbg.value(metadata i32 %53, metadata !10823, metadata !DIExpression()), !dbg !10837
  %54 = icmp eq i32 %53, 0, !dbg !10879
  br i1 %54, label %55, label %99, !dbg !10881

55:                                               ; preds = %46
  %56 = add i32 %26, 1, !dbg !10882
  call void @llvm.dbg.value(metadata i32 %56, metadata !10824, metadata !DIExpression()), !dbg !10837
  br label %96, !dbg !10883

57:                                               ; preds = %43
  %58 = load i8*, i8** %21, align 4, !dbg !10884
  %59 = call i32 @BlockIndex(i8* noundef %58, i32 noundef %38) #20, !dbg !10885
  %60 = call i32 @BlockSize(i8* noundef %58, i32 noundef %59) #20, !dbg !10886
  call void @llvm.dbg.value(metadata i32 %60, metadata !10825, metadata !DIExpression()), !dbg !10887
  call void @llvm.dbg.value(metadata i32 %44, metadata !10829, metadata !DIExpression()), !dbg !10887
  %61 = add i32 %60, %33, !dbg !10888
  %62 = sub i32 0, %60, !dbg !10889
  %63 = and i32 %61, %62, !dbg !10890
  call void @llvm.dbg.value(metadata i32 %63, metadata !10830, metadata !DIExpression()), !dbg !10887
  %64 = add i32 %32, %3, !dbg !10891
  %65 = icmp ugt i32 %64, %63, !dbg !10893
  %66 = sub i32 %63, %33
  %67 = select i1 %65, i32 %66, i32 %44, !dbg !10894
  call void @llvm.dbg.value(metadata i32 %67, metadata !10829, metadata !DIExpression()), !dbg !10887
  %68 = and i32 %67, -2, !dbg !10895
  call void @llvm.dbg.value(metadata i32 %68, metadata !10829, metadata !DIExpression()), !dbg !10887
  %69 = icmp ne i32 %68, 2, !dbg !10896
  %70 = and i32 %34, 1
  %71 = icmp eq i32 %70, 0
  %72 = select i1 %69, i1 true, i1 %71, !dbg !10897
  br i1 %72, label %85, label %73, !dbg !10897

73:                                               ; preds = %57
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %18) #22, !dbg !10853
  call void @llvm.dbg.value(metadata i8* %18, metadata !10836, metadata !DIExpression()), !dbg !10898
  %74 = inttoptr i32 %34 to i8*, !dbg !10899
  %75 = load i8, i8* %74, align 1, !dbg !10900
  call void @llvm.dbg.value(metadata i8 undef, metadata !10831, metadata !DIExpression()), !dbg !10898
  store i8 %75, i8* %18, align 2, !dbg !10901
  %76 = getelementptr inbounds i8, i8* %74, i32 1, !dbg !10902
  %77 = load i8, i8* %76, align 1, !dbg !10903
  store i8 %77, i8* %24, align 1, !dbg !10904
  %78 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %23, align 4, !dbg !10905
  %79 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %78, i32 0, i32 4, !dbg !10906
  %80 = load i32 (i8*, i8*, i8*, i32)*, i32 (i8*, i8*, i8*, i32)** %79, align 4, !dbg !10906
  %81 = load i8*, i8** %21, align 4, !dbg !10907
  %82 = inttoptr i32 %33 to i8*, !dbg !10908
  call void @llvm.dbg.value(metadata i16* %5, metadata !10831, metadata !DIExpression(DW_OP_deref)), !dbg !10898
  %83 = call i32 %80(i8* noundef %81, i8* noundef %82, i8* noundef nonnull %18, i32 noundef 2) #20, !dbg !10909
  call void @llvm.dbg.value(metadata i32 %83, metadata !10823, metadata !DIExpression()), !dbg !10837
  %84 = icmp eq i32 %83, 0, !dbg !10910
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %18) #22, !dbg !10912
  br i1 %84, label %94, label %99

85:                                               ; preds = %57
  %86 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %23, align 4, !dbg !10913
  %87 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %86, i32 0, i32 4, !dbg !10917
  %88 = load i32 (i8*, i8*, i8*, i32)*, i32 (i8*, i8*, i8*, i32)** %87, align 4, !dbg !10917
  %89 = load i8*, i8** %21, align 4, !dbg !10918
  %90 = inttoptr i32 %33 to i8*, !dbg !10919
  %91 = inttoptr i32 %34 to i8*, !dbg !10920
  %92 = call i32 %88(i8* noundef %89, i8* noundef %90, i8* noundef %91, i32 noundef %68) #20, !dbg !10921
  call void @llvm.dbg.value(metadata i32 %92, metadata !10823, metadata !DIExpression()), !dbg !10837
  %93 = icmp eq i32 %92, 0, !dbg !10922
  br i1 %93, label %94, label %99, !dbg !10924

94:                                               ; preds = %73, %85
  call void @llvm.dbg.value(metadata i32 0, metadata !10823, metadata !DIExpression()), !dbg !10837
  %95 = add i32 %68, %26, !dbg !10925
  call void @llvm.dbg.value(metadata i32 %83, metadata !10823, metadata !DIExpression()), !dbg !10837
  call void @llvm.dbg.value(metadata i32 %26, metadata !10824, metadata !DIExpression()), !dbg !10837
  br label %96

96:                                               ; preds = %94, %55
  %97 = phi i32 [ %56, %55 ], [ %95, %94 ], !dbg !10926
  call void @llvm.dbg.value(metadata i32 0, metadata !10823, metadata !DIExpression()), !dbg !10837
  call void @llvm.dbg.value(metadata i32 %97, metadata !10824, metadata !DIExpression()), !dbg !10837
  %98 = icmp ult i32 %97, %3, !dbg !10854
  br i1 %98, label %25, label %99, !dbg !10855, !llvm.loop !10927

99:                                               ; preds = %96, %73, %85, %46, %17
  %100 = phi i32 [ 0, %17 ], [ 5, %46 ], [ 5, %85 ], [ 5, %73 ], [ 0, %96 ]
  call void @release_FDM_lock() #21, !dbg !10929
  br label %101, !dbg !10930

101:                                              ; preds = %99, %9, %4
  %102 = phi i32 [ 2, %4 ], [ 3, %9 ], [ %100, %99 ], !dbg !10837
  ret i32 %102, !dbg !10930
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @eraseRawDiskBlock(%struct.NOR_FLASH_DISK_Data* noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !10931 {
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* %0, metadata !10935, metadata !DIExpression()), !dbg !10939
  call void @llvm.dbg.value(metadata i32 %1, metadata !10936, metadata !DIExpression()), !dbg !10939
  %3 = and i32 %1, 16777215, !dbg !10940
  call void @llvm.dbg.value(metadata i32 %3, metadata !10938, metadata !DIExpression()), !dbg !10939
  %4 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 4, !dbg !10941
  %5 = load i8, i8* %4, align 4, !dbg !10941, !range !2809
  %6 = icmp eq i8 %5, 0, !dbg !10941
  br i1 %6, label %7, label %8, !dbg !10943

7:                                                ; preds = %2
  tail call fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef nonnull %0) #21, !dbg !10944
  br label %8, !dbg !10946

8:                                                ; preds = %7, %2
  %9 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 3, i32 0, !dbg !10947
  %10 = load i32, i32* %9, align 4, !dbg !10947
  %11 = icmp ult i32 %3, %10, !dbg !10949
  br i1 %11, label %12, label %27, !dbg !10950

12:                                               ; preds = %8
  tail call void @retrieve_FDM_lock() #21, !dbg !10951
  %13 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 1, !dbg !10952
  %14 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %13, align 4, !dbg !10952
  %15 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %14, i32 0, i32 2, !dbg !10953
  %16 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %15, align 4, !dbg !10953
  %17 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 2, !dbg !10954
  %18 = load i8*, i8** %17, align 4, !dbg !10954
  %19 = tail call i8* %16(i8* noundef %18, i32 noundef %3, i32 noundef 0) #20, !dbg !10955
  %20 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %13, align 4, !dbg !10956
  %21 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %20, i32 0, i32 3, !dbg !10957
  %22 = load i32 (i8*, i32)*, i32 (i8*, i32)** %21, align 4, !dbg !10957
  %23 = load i8*, i8** %17, align 4, !dbg !10958
  %24 = tail call i32 %22(i8* noundef %23, i32 noundef %1) #20, !dbg !10959
  call void @llvm.dbg.value(metadata i32 %24, metadata !10937, metadata !DIExpression()), !dbg !10939
  tail call void @release_FDM_lock() #21, !dbg !10960
  %25 = icmp eq i32 %24, 0, !dbg !10961
  %26 = select i1 %25, i32 0, i32 6, !dbg !10939
  br label %27, !dbg !10939

27:                                               ; preds = %12, %8
  %28 = phi i32 [ 2, %8 ], [ %26, %12 ], !dbg !10939
  ret i32 %28, !dbg !10963
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_init() local_unnamed_addr #0 !dbg !10964 {
  %1 = load i1, i1* @flash_init_status, align 4, !dbg !10965
  br i1 %1, label %3, label %2, !dbg !10967

2:                                                ; preds = %0
  tail call void @Custom_NOR_Init() #20, !dbg !10968
  tail call fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData) #21, !dbg !10970
  store i1 true, i1* @flash_init_status, align 4, !dbg !10971
  br label %3, !dbg !10972

3:                                                ; preds = %2, %0
  ret i32 0, !dbg !10973
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @get_NOR_init_status() local_unnamed_addr #4 section ".ram_code" !dbg !10974 {
  %1 = load i1, i1* @flash_init_status, align 4, !dbg !10975
  %2 = select i1 %1, i32 0, i32 -5, !dbg !10975
  ret i32 %2, !dbg !10976
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_ReadPhysicalPage(i32 noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !10977 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10981, metadata !DIExpression()), !dbg !10988
  call void @llvm.dbg.value(metadata i32 %1, metadata !10982, metadata !DIExpression()), !dbg !10988
  call void @llvm.dbg.value(metadata i8* %2, metadata !10983, metadata !DIExpression()), !dbg !10988
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !10984, metadata !DIExpression()), !dbg !10988
  %4 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !10989
  call void @llvm.dbg.value(metadata i8* %4, metadata !10985, metadata !DIExpression()), !dbg !10988
  %5 = tail call i8* @BlockAddress(i8* noundef %4, i32 noundef %0) #20, !dbg !10990
  %6 = ptrtoint i8* %5 to i32, !dbg !10991
  %7 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !10992
  %8 = bitcast i8* %7 to i8**, !dbg !10992
  %9 = load i8*, i8** %8, align 4, !dbg !10992
  %10 = ptrtoint i8* %9 to i32, !dbg !10993
  %11 = shl i32 %1, 9, !dbg !10994
  %12 = add i32 %11, %6, !dbg !10995
  %13 = sub i32 %12, %10, !dbg !10996
  call void @llvm.dbg.value(metadata i32 %13, metadata !10987, metadata !DIExpression()), !dbg !10988
  %14 = tail call i32 @readRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %13, i8* noundef %2, i32 noundef 512) #21, !dbg !10997
  call void @llvm.dbg.value(metadata i32 %14, metadata !10986, metadata !DIExpression()), !dbg !10988
  %15 = icmp eq i32 %14, 0, !dbg !10998
  %16 = select i1 %15, i32 0, i32 -13, !dbg !10988
  ret i32 %16, !dbg !11000
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_ProgramPhysicalPage(i32 noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !11001 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11003, metadata !DIExpression()), !dbg !11010
  call void @llvm.dbg.value(metadata i32 %1, metadata !11004, metadata !DIExpression()), !dbg !11010
  call void @llvm.dbg.value(metadata i8* %2, metadata !11005, metadata !DIExpression()), !dbg !11010
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !11006, metadata !DIExpression()), !dbg !11010
  %4 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !11011
  call void @llvm.dbg.value(metadata i8* %4, metadata !11007, metadata !DIExpression()), !dbg !11010
  %5 = tail call i8* @BlockAddress(i8* noundef %4, i32 noundef %0) #20, !dbg !11012
  %6 = ptrtoint i8* %5 to i32, !dbg !11013
  %7 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !11014
  %8 = bitcast i8* %7 to i8**, !dbg !11014
  %9 = load i8*, i8** %8, align 4, !dbg !11014
  %10 = ptrtoint i8* %9 to i32, !dbg !11015
  %11 = shl i32 %1, 9, !dbg !11016
  %12 = add i32 %11, %6, !dbg !11017
  %13 = sub i32 %12, %10, !dbg !11018
  call void @llvm.dbg.value(metadata i32 %13, metadata !11009, metadata !DIExpression()), !dbg !11010
  %14 = tail call i32 @writeRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %13, i8* noundef %2, i32 noundef 512) #21, !dbg !11019
  call void @llvm.dbg.value(metadata i32 %14, metadata !11008, metadata !DIExpression()), !dbg !11010
  %15 = icmp eq i32 %14, 0, !dbg !11020
  %16 = select i1 %15, i32 0, i32 -14, !dbg !11010
  ret i32 %16, !dbg !11022
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_ErasePhysicalBlock(i32 noundef %0) local_unnamed_addr #0 !dbg !11023 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11027, metadata !DIExpression()), !dbg !11029
  %2 = tail call i32 @eraseRawDiskBlock(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %0) #21, !dbg !11030
  call void @llvm.dbg.value(metadata i32 %2, metadata !11028, metadata !DIExpression()), !dbg !11029
  %3 = icmp eq i32 %2, 0, !dbg !11031
  %4 = select i1 %3, i32 0, i32 -15, !dbg !11029
  ret i32 %4, !dbg !11033
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_BlockSize(i32 noundef %0) local_unnamed_addr #0 !dbg !11034 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11036, metadata !DIExpression()), !dbg !11039
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !11037, metadata !DIExpression()), !dbg !11039
  %2 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !11040
  call void @llvm.dbg.value(metadata i8* %2, metadata !11038, metadata !DIExpression()), !dbg !11039
  %3 = tail call i32 @BlockSize(i8* noundef %2, i32 noundef %0) #20, !dbg !11041
  ret i32 %3, !dbg !11042
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_BlockIndex(i32 noundef %0) local_unnamed_addr #0 !dbg !11043 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11045, metadata !DIExpression()), !dbg !11048
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !11046, metadata !DIExpression()), !dbg !11048
  %2 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !11049
  call void @llvm.dbg.value(metadata i8* %2, metadata !11047, metadata !DIExpression()), !dbg !11048
  %3 = tail call i32 @BlockIndex(i8* noundef %2, i32 noundef %0) #20, !dbg !11050
  ret i32 %3, !dbg !11051
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_Addr2BlockIndexOffset(i32 noundef %0, i32* nocapture noundef writeonly %1, i32* nocapture noundef writeonly %2) local_unnamed_addr #0 !dbg !11052 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11056, metadata !DIExpression()), !dbg !11061
  call void @llvm.dbg.value(metadata i32* %1, metadata !11057, metadata !DIExpression()), !dbg !11061
  call void @llvm.dbg.value(metadata i32* %2, metadata !11058, metadata !DIExpression()), !dbg !11061
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !11059, metadata !DIExpression()), !dbg !11061
  %4 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !11062
  call void @llvm.dbg.value(metadata i8* %4, metadata !11060, metadata !DIExpression()), !dbg !11061
  %5 = tail call i32 @BlockIndex(i8* noundef %4, i32 noundef %0) #20, !dbg !11063
  store i32 %5, i32* %1, align 4, !dbg !11064
  %6 = icmp eq i32 %5, -1, !dbg !11065
  br i1 %6, label %10, label %7, !dbg !11067

7:                                                ; preds = %3
  %8 = tail call i32 @BlockSize(i8* noundef %4, i32 noundef %5) #20, !dbg !11068
  %9 = urem i32 %0, %8, !dbg !11069
  store i32 %9, i32* %2, align 4, !dbg !11070
  br label %10, !dbg !11071

10:                                               ; preds = %3, %7
  %11 = phi i32 [ 0, %7 ], [ -1, %3 ], !dbg !11061
  ret i32 %11, !dbg !11072
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_BlockIndexOffset2Addr(i32 noundef %0, i32 noundef %1, i32* nocapture noundef writeonly %2) local_unnamed_addr #0 !dbg !11073 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11077, metadata !DIExpression()), !dbg !11082
  call void @llvm.dbg.value(metadata i32 %1, metadata !11078, metadata !DIExpression()), !dbg !11082
  call void @llvm.dbg.value(metadata i32* %2, metadata !11079, metadata !DIExpression()), !dbg !11082
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !11080, metadata !DIExpression()), !dbg !11082
  %4 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !11083
  call void @llvm.dbg.value(metadata i8* %4, metadata !11081, metadata !DIExpression()), !dbg !11082
  %5 = tail call i8* @BlockAddress(i8* noundef %4, i32 noundef %0) #20, !dbg !11084
  %6 = ptrtoint i8* %5 to i32, !dbg !11085
  %7 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !11086
  %8 = bitcast i8* %7 to i8**, !dbg !11086
  %9 = load i8*, i8** %8, align 4, !dbg !11086
  %10 = ptrtoint i8* %9 to i32, !dbg !11087
  %11 = add i32 %6, %1, !dbg !11088
  %12 = sub i32 %11, %10, !dbg !11089
  store i32 %12, i32* %2, align 4, !dbg !11090
  ret i32 0, !dbg !11091
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_rawdisk_error_code(i32 noundef %0) local_unnamed_addr #0 !dbg !11092 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11096, metadata !DIExpression()), !dbg !11097
  %2 = add i32 %0, 2, !dbg !11098
  %3 = icmp ult i32 %2, 9, !dbg !11098
  br i1 %3, label %5, label %4, !dbg !11098

4:                                                ; preds = %5, %1
  tail call void @Flash_ReturnReady() #20, !dbg !11099
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.125, i32 0, i32 0), i32 noundef 558, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.get_rawdisk_error_code, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.126, i32 0, i32 0)) #23, !dbg !11099
  unreachable, !dbg !11099

5:                                                ; preds = %1
  %6 = trunc i32 %2 to i16, !dbg !11098
  %7 = lshr i16 433, %6, !dbg !11098
  %8 = and i16 %7, 1, !dbg !11098
  %9 = icmp eq i16 %8, 0, !dbg !11098
  br i1 %9, label %4, label %10, !dbg !11098

10:                                               ; preds = %5
  %11 = getelementptr inbounds [9 x i32], [9 x i32]* @switch.table.get_rawdisk_error_code, i32 0, i32 %2, !dbg !11098
  %12 = load i32, i32* %11, align 4, !dbg !11098
  ret i32 %12, !dbg !11109
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_block_size_from_address(i32 noundef %0) local_unnamed_addr #0 !dbg !11110 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11115, metadata !DIExpression()), !dbg !11118
  %2 = tail call i32 @NOR_BlockIndex(i32 noundef %0) #21, !dbg !11119
  call void @llvm.dbg.value(metadata i32 %2, metadata !11117, metadata !DIExpression()), !dbg !11118
  %3 = icmp eq i32 %2, -1, !dbg !11120
  br i1 %3, label %4, label %5, !dbg !11122

4:                                                ; preds = %1
  tail call void @Flash_ReturnReady() #20, !dbg !11123
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.125, i32 0, i32 0), i32 noundef 568, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.get_block_size_from_address, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.126, i32 0, i32 0)) #23, !dbg !11123
  unreachable, !dbg !11123

5:                                                ; preds = %1
  %6 = tail call i32 @NOR_BlockSize(i32 noundef %2) #21, !dbg !11128
  call void @llvm.dbg.value(metadata i32 %6, metadata !11116, metadata !DIExpression()), !dbg !11118
  switch i32 %6, label %9 [
    i32 4096, label %10
    i32 32768, label %7
    i32 65536, label %8
  ], !dbg !11129

7:                                                ; preds = %5
  br label %10, !dbg !11130

8:                                                ; preds = %5
  br label %10, !dbg !11134

9:                                                ; preds = %5
  tail call void @Flash_ReturnReady() #20, !dbg !11137
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.125, i32 0, i32 0), i32 noundef 578, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.get_block_size_from_address, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.126, i32 0, i32 0)) #23, !dbg !11137
  unreachable, !dbg !11137

10:                                               ; preds = %5, %8, %7
  %11 = phi i32 [ 1, %7 ], [ 2, %8 ], [ 0, %5 ], !dbg !11142
  ret i32 %11, !dbg !11143
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_init() local_unnamed_addr #0 !dbg !11144 {
  %1 = tail call i32 @NOR_init() #21, !dbg !11145
  ret i32 0, !dbg !11146
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @hal_flash_deinit() local_unnamed_addr #10 !dbg !11147 {
  ret i32 0, !dbg !11148
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_erase(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !11149 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11153, metadata !DIExpression()), !dbg !11158
  call void @llvm.dbg.value(metadata i32 %1, metadata !11154, metadata !DIExpression()), !dbg !11158
  call void @llvm.dbg.value(metadata i32 0, metadata !11157, metadata !DIExpression()), !dbg !11158
  switch i32 %1, label %22 [
    i32 0, label %3
    i32 1, label %6
    i32 2, label %9
  ], !dbg !11159

3:                                                ; preds = %2
  %4 = and i32 %0, 4095, !dbg !11160
  %5 = icmp eq i32 %4, 0, !dbg !11164
  br i1 %5, label %12, label %22, !dbg !11165

6:                                                ; preds = %2
  %7 = and i32 %0, 32767, !dbg !11166
  %8 = icmp eq i32 %7, 0, !dbg !11170
  br i1 %8, label %12, label %22, !dbg !11171

9:                                                ; preds = %2
  %10 = and i32 %0, 65535, !dbg !11172
  %11 = icmp eq i32 %10, 0, !dbg !11176
  br i1 %11, label %12, label %22, !dbg !11177

12:                                               ; preds = %9, %6, %3
  %13 = phi i32 [ -100663296, %3 ], [ -83886080, %6 ], [ -67108864, %9 ], !dbg !11178
  call void @llvm.dbg.value(metadata i32 %13, metadata !11157, metadata !DIExpression()), !dbg !11158
  %14 = tail call i32 @NOR_BlockIndex(i32 noundef %0) #21, !dbg !11179
  call void @llvm.dbg.value(metadata i32 %14, metadata !11156, metadata !DIExpression()), !dbg !11158
  %15 = icmp eq i32 %14, -1, !dbg !11180
  br i1 %15, label %22, label %16, !dbg !11182

16:                                               ; preds = %12
  %17 = or i32 %14, %13, !dbg !11183
  call void @llvm.dbg.value(metadata i32 %17, metadata !11156, metadata !DIExpression()), !dbg !11158
  %18 = tail call i32 @eraseRawDiskBlock(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %17) #21, !dbg !11184
  call void @llvm.dbg.value(metadata i32 %18, metadata !11155, metadata !DIExpression()), !dbg !11158
  %19 = icmp eq i32 %18, 0, !dbg !11185
  br i1 %19, label %22, label %20, !dbg !11187

20:                                               ; preds = %16
  %21 = tail call i32 @get_rawdisk_error_code(i32 noundef %18) #21, !dbg !11188
  br label %22, !dbg !11190

22:                                               ; preds = %16, %12, %2, %9, %6, %3, %20
  %23 = phi i32 [ %21, %20 ], [ -3, %3 ], [ -3, %6 ], [ -3, %9 ], [ -3, %2 ], [ -3, %12 ], [ 0, %16 ], !dbg !11158
  ret i32 %23, !dbg !11191
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_read(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !11192 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11196, metadata !DIExpression()), !dbg !11201
  call void @llvm.dbg.value(metadata i8* %1, metadata !11197, metadata !DIExpression()), !dbg !11201
  call void @llvm.dbg.value(metadata i32 %2, metadata !11198, metadata !DIExpression()), !dbg !11201
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !11199, metadata !DIExpression()), !dbg !11201
  %4 = tail call i32 @readRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %0, i8* noundef %1, i32 noundef %2) #21, !dbg !11202
  call void @llvm.dbg.value(metadata i32 %4, metadata !11200, metadata !DIExpression()), !dbg !11201
  %5 = icmp eq i32 %4, 0, !dbg !11203
  br i1 %5, label %8, label %6, !dbg !11205

6:                                                ; preds = %3
  %7 = tail call i32 @get_rawdisk_error_code(i32 noundef %4) #21, !dbg !11206
  br label %8, !dbg !11208

8:                                                ; preds = %3, %6
  %9 = phi i32 [ %7, %6 ], [ 0, %3 ], !dbg !11201
  ret i32 %9, !dbg !11209
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_write(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !11210 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11214, metadata !DIExpression()), !dbg !11222
  call void @llvm.dbg.value(metadata i8* %1, metadata !11215, metadata !DIExpression()), !dbg !11222
  call void @llvm.dbg.value(metadata i32 %2, metadata !11216, metadata !DIExpression()), !dbg !11222
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !11217, metadata !DIExpression()), !dbg !11222
  %4 = tail call i32 @writeRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %0, i8* noundef %1, i32 noundef %2) #21, !dbg !11223
  call void @llvm.dbg.value(metadata i32 %4, metadata !11218, metadata !DIExpression()), !dbg !11222
  %5 = icmp eq i32 %4, 0, !dbg !11224
  br i1 %5, label %8, label %6, !dbg !11226

6:                                                ; preds = %3
  %7 = tail call i32 @get_rawdisk_error_code(i32 noundef %4) #21, !dbg !11227
  br label %21, !dbg !11229

8:                                                ; preds = %3
  %9 = tail call zeroext i1 @hal_cache_is_cacheable(i32 noundef %0) #20, !dbg !11230
  br i1 %9, label %10, label %21, !dbg !11231

10:                                               ; preds = %8
  %11 = and i32 %0, -32, !dbg !11232
  call void @llvm.dbg.value(metadata i32 %11, metadata !11219, metadata !DIExpression()), !dbg !11234
  %12 = add i32 %0, 32
  %13 = add i32 %12, %2
  %14 = and i32 %13, -32
  call void @llvm.dbg.value(metadata i32 %11, metadata !11219, metadata !DIExpression()), !dbg !11234
  %15 = icmp ugt i32 %11, %14, !dbg !11235
  br i1 %15, label %21, label %16, !dbg !11237

16:                                               ; preds = %10, %16
  %17 = phi i32 [ %19, %16 ], [ %11, %10 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !11219, metadata !DIExpression()), !dbg !11234
  %18 = tail call i32 @hal_cache_invalidate_one_cache_line(i32 noundef %17) #20, !dbg !11238
  %19 = add i32 %17, 32, !dbg !11240
  call void @llvm.dbg.value(metadata i32 %19, metadata !11219, metadata !DIExpression()), !dbg !11234
  %20 = icmp ugt i32 %19, %14, !dbg !11235
  br i1 %20, label %21, label %16, !dbg !11237, !llvm.loop !11241

21:                                               ; preds = %16, %10, %8, %6
  %22 = phi i32 [ %7, %6 ], [ 0, %8 ], [ 0, %10 ], [ 0, %16 ], !dbg !11222
  ret i32 %22, !dbg !11243
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @BlockAddress(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #12 section ".ram_code" !dbg !11244 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11248, metadata !DIExpression()), !dbg !11254
  call void @llvm.dbg.value(metadata i32 %1, metadata !11249, metadata !DIExpression()), !dbg !11254
  call void @llvm.dbg.value(metadata i8* %0, metadata !11250, metadata !DIExpression()), !dbg !11254
  call void @llvm.dbg.value(metadata i32 0, metadata !11251, metadata !DIExpression()), !dbg !11254
  call void @llvm.dbg.value(metadata i32 0, metadata !11252, metadata !DIExpression()), !dbg !11254
  call void @llvm.dbg.value(metadata i32 0, metadata !11253, metadata !DIExpression()), !dbg !11254
  %3 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !11255
  %4 = bitcast i8* %3 to %struct.hal_cache_region_config_t**, !dbg !11255
  %5 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %4, align 4, !dbg !11255
  %6 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 0, i32 1, !dbg !11256
  %7 = load i32, i32* %6, align 4, !dbg !11256
  call void @llvm.dbg.value(metadata i32 %7, metadata !11253, metadata !DIExpression()), !dbg !11254
  call void @llvm.dbg.value(metadata i32 0, metadata !11252, metadata !DIExpression()), !dbg !11254
  call void @llvm.dbg.value(metadata i32 0, metadata !11251, metadata !DIExpression()), !dbg !11254
  %8 = icmp ugt i32 %7, %1, !dbg !11257
  br i1 %8, label %23, label %9, !dbg !11258

9:                                                ; preds = %2, %9
  %10 = phi i32 [ %20, %9 ], [ %7, %2 ], !dbg !11259
  %11 = phi i32 [ %21, %9 ], [ %7, %2 ]
  %12 = phi i32 [ %18, %9 ], [ 0, %2 ]
  %13 = phi i32 [ %17, %9 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !11253, metadata !DIExpression()), !dbg !11254
  call void @llvm.dbg.value(metadata i32 %12, metadata !11252, metadata !DIExpression()), !dbg !11254
  call void @llvm.dbg.value(metadata i32 %13, metadata !11251, metadata !DIExpression()), !dbg !11254
  %14 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %12, i32 0, !dbg !11261
  %15 = load i32, i32* %14, align 4, !dbg !11261
  %16 = mul i32 %15, %10, !dbg !11262
  %17 = add i32 %16, %13, !dbg !11263
  call void @llvm.dbg.value(metadata i32 %17, metadata !11251, metadata !DIExpression()), !dbg !11254
  %18 = add i32 %12, 1, !dbg !11264
  call void @llvm.dbg.value(metadata i32 %18, metadata !11252, metadata !DIExpression()), !dbg !11254
  %19 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %18, i32 1, !dbg !11265
  %20 = load i32, i32* %19, align 4, !dbg !11265
  %21 = add i32 %20, %11, !dbg !11266
  call void @llvm.dbg.value(metadata i32 %21, metadata !11253, metadata !DIExpression()), !dbg !11254
  %22 = icmp ugt i32 %21, %1, !dbg !11257
  br i1 %22, label %23, label %9, !dbg !11258, !llvm.loop !11267

23:                                               ; preds = %9, %2
  %24 = phi i32 [ %7, %2 ], [ %20, %9 ], !dbg !11269
  %25 = phi i32 [ 0, %2 ], [ %17, %9 ], !dbg !11254
  %26 = phi i32 [ 0, %2 ], [ %18, %9 ], !dbg !11254
  %27 = phi i32 [ %7, %2 ], [ %21, %9 ], !dbg !11254
  call void @llvm.dbg.value(metadata i8* %0, metadata !11250, metadata !DIExpression()), !dbg !11254
  %28 = sub i32 %1, %27, !dbg !11270
  %29 = add i32 %28, %24, !dbg !11271
  %30 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %26, i32 0, !dbg !11272
  %31 = load i32, i32* %30, align 4, !dbg !11272
  %32 = mul i32 %29, %31, !dbg !11273
  %33 = add i32 %32, %25, !dbg !11274
  call void @llvm.dbg.value(metadata i32 %33, metadata !11251, metadata !DIExpression()), !dbg !11254
  %34 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !11275
  %35 = bitcast i8* %34 to i8**, !dbg !11275
  %36 = load i8*, i8** %35, align 4, !dbg !11275
  %37 = getelementptr inbounds i8, i8* %36, i32 %33, !dbg !11276
  ret i8* %37, !dbg !11277
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @MapWindow(i8* nocapture noundef %0, i32 noundef %1, i32 noundef %2) #0 section ".ram_code" !dbg !11278 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11280, metadata !DIExpression()), !dbg !11284
  call void @llvm.dbg.value(metadata i32 %1, metadata !11281, metadata !DIExpression()), !dbg !11284
  call void @llvm.dbg.value(metadata i32 %2, metadata !11282, metadata !DIExpression()), !dbg !11284
  call void @llvm.dbg.value(metadata i8* %0, metadata !11283, metadata !DIExpression()), !dbg !11284
  %4 = icmp eq i32 %2, 0, !dbg !11285
  br i1 %4, label %6, label %5, !dbg !11288

5:                                                ; preds = %3
  tail call void @Flash_ReturnReady() #20, !dbg !11289
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.141, i32 0, i32 0), i32 noundef 185, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @__func__.MapWindow, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.142, i32 0, i32 0)) #23, !dbg !11289
  unreachable, !dbg !11289

6:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %0, metadata !11283, metadata !DIExpression()), !dbg !11284
  %7 = tail call fastcc i32 @LookupAddress(i8* noundef %0, i32 noundef %1) #21, !dbg !11291
  %8 = inttoptr i32 %7 to i8*, !dbg !11292
  %9 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !11293
  %10 = bitcast i8* %9 to i8**, !dbg !11293
  store i8* %8, i8** %10, align 4, !dbg !11294
  ret i8* %8, !dbg !11295
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @LookupAddress(i8* nocapture noundef %0, i32 noundef %1) unnamed_addr #13 section ".ram_code" !dbg !2129 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !2133, metadata !DIExpression()), !dbg !11296
  call void @llvm.dbg.value(metadata i32 %1, metadata !2134, metadata !DIExpression()), !dbg !11296
  call void @llvm.dbg.value(metadata i8* %0, metadata !2135, metadata !DIExpression()), !dbg !11296
  call void @llvm.dbg.value(metadata i32 0, metadata !2180, metadata !DIExpression()), !dbg !11296
  %3 = getelementptr inbounds i8, i8* %0, i32 44, !dbg !11297
  %4 = bitcast i8* %3 to [8 x [2 x %struct.hal_cache_region_config_t]]*, !dbg !11297
  %5 = and i32 %1, 7, !dbg !11299
  %6 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 0, i32 0, !dbg !11300
  %7 = load i32, i32* %6, align 4, !dbg !11300
  %8 = icmp eq i32 %7, -1, !dbg !11301
  br i1 %8, label %62, label %9, !dbg !11302

9:                                                ; preds = %2
  %10 = icmp eq i32 %7, %1, !dbg !11303
  br i1 %10, label %54, label %11, !dbg !11306

11:                                               ; preds = %9
  %12 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 1, i32 0, !dbg !11307
  %13 = load i32, i32* %12, align 4, !dbg !11307
  %14 = icmp eq i32 %13, -1, !dbg !11310
  br i1 %14, label %44, label %15, !dbg !11311

15:                                               ; preds = %11
  %16 = icmp eq i32 %13, %1, !dbg !11312
  br i1 %16, label %35, label %17, !dbg !11315

17:                                               ; preds = %15
  %18 = load i32, i32* @LookupAddress.look_up_miss, align 4, !dbg !11316
  %19 = add i32 %18, 1, !dbg !11316
  store i32 %19, i32* @LookupAddress.look_up_miss, align 4, !dbg !11316
  %20 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !11318
  %21 = shl nuw nsw i32 1, %5, !dbg !11320
  %22 = and i32 %20, %21, !dbg !11321
  %23 = icmp eq i32 %22, 0, !dbg !11321
  br i1 %23, label %30, label %24, !dbg !11322

24:                                               ; preds = %17
  store i32 %1, i32* %12, align 4, !dbg !11323
  %25 = tail call i8* @BlockAddress(i8* noundef nonnull %0, i32 noundef %1) #21, !dbg !11325
  %26 = ptrtoint i8* %25 to i32, !dbg !11326
  %27 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 1, i32 1, !dbg !11327
  store i32 %26, i32* %27, align 4, !dbg !11328
  call void @llvm.dbg.value(metadata i32 %26, metadata !2180, metadata !DIExpression()), !dbg !11296
  %28 = xor i32 %21, -1, !dbg !11329
  %29 = and i32 %20, %28, !dbg !11330
  br label %71, !dbg !11331

30:                                               ; preds = %17
  store i32 %1, i32* %6, align 4, !dbg !11332
  %31 = tail call i8* @BlockAddress(i8* noundef nonnull %0, i32 noundef %1) #21, !dbg !11334
  %32 = ptrtoint i8* %31 to i32, !dbg !11335
  %33 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 0, i32 1, !dbg !11336
  store i32 %32, i32* %33, align 4, !dbg !11337
  call void @llvm.dbg.value(metadata i32 %32, metadata !2180, metadata !DIExpression()), !dbg !11296
  %34 = or i32 %20, %21, !dbg !11338
  br label %71

35:                                               ; preds = %15
  %36 = load i32, i32* @LookupAddress.look_up_hit, align 4, !dbg !11339
  %37 = add i32 %36, 1, !dbg !11339
  store i32 %37, i32* @LookupAddress.look_up_hit, align 4, !dbg !11339
  %38 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 1, i32 1, !dbg !11341
  %39 = load i32, i32* %38, align 4, !dbg !11341
  call void @llvm.dbg.value(metadata i32 %39, metadata !2180, metadata !DIExpression()), !dbg !11296
  %40 = shl nuw nsw i32 1, %5, !dbg !11342
  %41 = xor i32 %40, -1, !dbg !11343
  %42 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !11344
  %43 = and i32 %42, %41, !dbg !11344
  br label %71

44:                                               ; preds = %11
  %45 = load i32, i32* @LookupAddress.look_up_miss, align 4, !dbg !11345
  %46 = add i32 %45, 1, !dbg !11345
  store i32 %46, i32* @LookupAddress.look_up_miss, align 4, !dbg !11345
  store i32 %1, i32* %12, align 4, !dbg !11347
  %47 = tail call i8* @BlockAddress(i8* noundef nonnull %0, i32 noundef %1) #21, !dbg !11348
  %48 = ptrtoint i8* %47 to i32, !dbg !11349
  %49 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 1, i32 1, !dbg !11350
  store i32 %48, i32* %49, align 4, !dbg !11351
  call void @llvm.dbg.value(metadata i32 %48, metadata !2180, metadata !DIExpression()), !dbg !11296
  %50 = shl nuw nsw i32 1, %5, !dbg !11352
  %51 = xor i32 %50, -1, !dbg !11353
  %52 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !11354
  %53 = and i32 %52, %51, !dbg !11354
  br label %71

54:                                               ; preds = %9
  %55 = load i32, i32* @LookupAddress.look_up_hit, align 4, !dbg !11355
  %56 = add i32 %55, 1, !dbg !11355
  store i32 %56, i32* @LookupAddress.look_up_hit, align 4, !dbg !11355
  %57 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 0, i32 1, !dbg !11357
  %58 = load i32, i32* %57, align 4, !dbg !11357
  call void @llvm.dbg.value(metadata i32 %58, metadata !2180, metadata !DIExpression()), !dbg !11296
  %59 = shl nuw nsw i32 1, %5, !dbg !11358
  %60 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !11359
  %61 = or i32 %60, %59, !dbg !11359
  br label %71

62:                                               ; preds = %2
  %63 = load i32, i32* @LookupAddress.look_up_miss, align 4, !dbg !11360
  %64 = add i32 %63, 1, !dbg !11360
  store i32 %64, i32* @LookupAddress.look_up_miss, align 4, !dbg !11360
  store i32 %1, i32* %6, align 4, !dbg !11362
  %65 = tail call i8* @BlockAddress(i8* noundef nonnull %0, i32 noundef %1) #21, !dbg !11363
  %66 = ptrtoint i8* %65 to i32, !dbg !11364
  %67 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 0, i32 1, !dbg !11365
  store i32 %66, i32* %67, align 4, !dbg !11366
  call void @llvm.dbg.value(metadata i32 %66, metadata !2180, metadata !DIExpression()), !dbg !11296
  %68 = shl nuw nsw i32 1, %5, !dbg !11367
  %69 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !11368
  %70 = or i32 %69, %68, !dbg !11368
  br label %71

71:                                               ; preds = %54, %35, %30, %24, %44, %62
  %72 = phi i32 [ %61, %54 ], [ %43, %35 ], [ %34, %30 ], [ %29, %24 ], [ %53, %44 ], [ %70, %62 ]
  %73 = phi i32 [ %58, %54 ], [ %39, %35 ], [ %32, %30 ], [ %26, %24 ], [ %48, %44 ], [ %66, %62 ], !dbg !11369
  store i32 %72, i32* @LookupAddress.replaced, align 4, !dbg !11369
  call void @llvm.dbg.value(metadata i32 %73, metadata !2180, metadata !DIExpression()), !dbg !11296
  ret i32 %73, !dbg !11370
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @BlockSize(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #12 section ".ram_code" !dbg !11371 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11373, metadata !DIExpression()), !dbg !11378
  call void @llvm.dbg.value(metadata i32 %1, metadata !11374, metadata !DIExpression()), !dbg !11378
  call void @llvm.dbg.value(metadata i8* %0, metadata !11375, metadata !DIExpression()), !dbg !11378
  call void @llvm.dbg.value(metadata i32 0, metadata !11376, metadata !DIExpression()), !dbg !11378
  call void @llvm.dbg.value(metadata i32 0, metadata !11377, metadata !DIExpression()), !dbg !11378
  %3 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !11379
  %4 = bitcast i8* %3 to %struct.hal_cache_region_config_t**, !dbg !11379
  %5 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %4, align 4, !dbg !11379
  %6 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 0, i32 1, !dbg !11380
  %7 = load i32, i32* %6, align 4, !dbg !11380
  call void @llvm.dbg.value(metadata i32 %7, metadata !11377, metadata !DIExpression()), !dbg !11378
  call void @llvm.dbg.value(metadata i32 0, metadata !11376, metadata !DIExpression()), !dbg !11378
  %8 = icmp ugt i32 %7, %1, !dbg !11381
  br i1 %8, label %17, label %9, !dbg !11382

9:                                                ; preds = %2, %9
  %10 = phi i32 [ %15, %9 ], [ %7, %2 ]
  %11 = phi i32 [ %12, %9 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !11377, metadata !DIExpression()), !dbg !11378
  call void @llvm.dbg.value(metadata i32 %11, metadata !11376, metadata !DIExpression()), !dbg !11378
  %12 = add i32 %11, 1, !dbg !11383
  call void @llvm.dbg.value(metadata i32 %12, metadata !11376, metadata !DIExpression()), !dbg !11378
  %13 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %12, i32 1, !dbg !11385
  %14 = load i32, i32* %13, align 4, !dbg !11385
  %15 = add i32 %14, %10, !dbg !11386
  call void @llvm.dbg.value(metadata i32 %15, metadata !11377, metadata !DIExpression()), !dbg !11378
  %16 = icmp ugt i32 %15, %1, !dbg !11381
  br i1 %16, label %17, label %9, !dbg !11382, !llvm.loop !11387

17:                                               ; preds = %9, %2
  %18 = phi i32 [ 0, %2 ], [ %12, %9 ], !dbg !11378
  %19 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %18, i32 0, !dbg !11389
  %20 = load i32, i32* %19, align 4, !dbg !11389
  ret i32 %20, !dbg !11390
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @BlockIndex(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #12 section ".ram_code" !dbg !11391 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11393, metadata !DIExpression()), !dbg !11399
  call void @llvm.dbg.value(metadata i32 %1, metadata !11394, metadata !DIExpression()), !dbg !11399
  call void @llvm.dbg.value(metadata i8* %0, metadata !11395, metadata !DIExpression()), !dbg !11399
  call void @llvm.dbg.value(metadata i32 0, metadata !11396, metadata !DIExpression()), !dbg !11399
  call void @llvm.dbg.value(metadata i32 0, metadata !11397, metadata !DIExpression()), !dbg !11399
  call void @llvm.dbg.value(metadata i32 0, metadata !11398, metadata !DIExpression()), !dbg !11399
  %3 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !11400
  %4 = bitcast i8* %3 to %struct.hal_cache_region_config_t**, !dbg !11400
  %5 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %4, align 4, !dbg !11400
  %6 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 0, i32 1, !dbg !11401
  %7 = load i32, i32* %6, align 4, !dbg !11401
  %8 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 0, i32 0, !dbg !11402
  %9 = load i32, i32* %8, align 4, !dbg !11402
  %10 = mul i32 %9, %7, !dbg !11403
  call void @llvm.dbg.value(metadata i32 %10, metadata !11397, metadata !DIExpression()), !dbg !11399
  call void @llvm.dbg.value(metadata i32 0, metadata !11398, metadata !DIExpression()), !dbg !11399
  call void @llvm.dbg.value(metadata i32 0, metadata !11396, metadata !DIExpression()), !dbg !11399
  call void @llvm.dbg.value(metadata i32 %1, metadata !11394, metadata !DIExpression()), !dbg !11399
  %11 = icmp ult i32 %10, %1, !dbg !11404
  br i1 %11, label %12, label %30, !dbg !11405

12:                                               ; preds = %2, %20
  %13 = phi i32 [ %25, %20 ], [ %7, %2 ]
  %14 = phi i32 [ %27, %20 ], [ %9, %2 ], !dbg !11406
  %15 = phi i32 [ %21, %20 ], [ 0, %2 ]
  %16 = phi i32 [ %28, %20 ], [ %10, %2 ]
  %17 = phi i32 [ %23, %20 ], [ 0, %2 ]
  %18 = phi i32 [ %22, %20 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !11398, metadata !DIExpression()), !dbg !11399
  call void @llvm.dbg.value(metadata i32 %16, metadata !11397, metadata !DIExpression()), !dbg !11399
  call void @llvm.dbg.value(metadata i32 %17, metadata !11396, metadata !DIExpression()), !dbg !11399
  call void @llvm.dbg.value(metadata i32 %18, metadata !11394, metadata !DIExpression()), !dbg !11399
  %19 = icmp eq i32 %14, 0, !dbg !11405
  br i1 %19, label %36, label %20, !dbg !11407

20:                                               ; preds = %12
  %21 = add i32 %13, %15, !dbg !11408
  call void @llvm.dbg.value(metadata i32 %21, metadata !11398, metadata !DIExpression()), !dbg !11399
  %22 = sub i32 %18, %16, !dbg !11410
  call void @llvm.dbg.value(metadata i32 %22, metadata !11394, metadata !DIExpression()), !dbg !11399
  %23 = add i32 %17, 1, !dbg !11411
  call void @llvm.dbg.value(metadata i32 %23, metadata !11396, metadata !DIExpression()), !dbg !11399
  %24 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %23, i32 1, !dbg !11412
  %25 = load i32, i32* %24, align 4, !dbg !11412
  %26 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %23, i32 0, !dbg !11413
  %27 = load i32, i32* %26, align 4, !dbg !11413
  %28 = mul i32 %27, %25, !dbg !11414
  call void @llvm.dbg.value(metadata i32 %28, metadata !11397, metadata !DIExpression()), !dbg !11399
  %29 = icmp ugt i32 %22, %28, !dbg !11404
  br i1 %29, label %12, label %30, !dbg !11405, !llvm.loop !11415

30:                                               ; preds = %20, %2
  %31 = phi i32 [ %9, %2 ], [ %27, %20 ], !dbg !11417
  %32 = phi i32 [ %1, %2 ], [ %22, %20 ]
  %33 = phi i32 [ 0, %2 ], [ %21, %20 ], !dbg !11399
  %34 = udiv i32 %32, %31, !dbg !11420
  %35 = add i32 %34, %33, !dbg !11421
  call void @llvm.dbg.value(metadata i32 %35, metadata !11398, metadata !DIExpression()), !dbg !11399
  br label %36, !dbg !11422

36:                                               ; preds = %12, %30
  %37 = phi i32 [ %35, %30 ], [ -1, %12 ], !dbg !11423
  call void @llvm.dbg.value(metadata i32 %37, metadata !11398, metadata !DIExpression()), !dbg !11399
  ret i32 %37, !dbg !11424
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_ROM_BASE() local_unnamed_addr #10 !dbg !11425 {
  ret i32 134217728, !dbg !11426
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_NOR_FLASH_BASE_ADDRESS() local_unnamed_addr #10 !dbg !11427 {
  ret i32 3932160, !dbg !11428
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_Dual_NOR_FLASH_SIZE() local_unnamed_addr #10 !dbg !11429 {
  ret i32 0, !dbg !11430
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_NOR_ALLOCATED_FAT_SPACE() local_unnamed_addr #10 !dbg !11431 {
  ret i32 262144, !dbg !11432
}

; Function Attrs: noinline nounwind optsize
define dso_local void @DelayAWhile_UST(i32 noundef %0) local_unnamed_addr #0 section ".ram_code" !dbg !11433 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11435, metadata !DIExpression()), !dbg !11437
  %2 = tail call i32 @hal_gpt_delay_us(i32 noundef %0) #20, !dbg !11438
  call void @llvm.dbg.value(metadata i32 %2, metadata !11436, metadata !DIExpression()), !dbg !11437
  %3 = icmp eq i32 %2, 0, !dbg !11439
  br i1 %3, label %5, label %4, !dbg !11441

4:                                                ; preds = %1
  tail call void @Flash_ReturnReady() #20, !dbg !11442
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.141, i32 0, i32 0), i32 noundef 279, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.DelayAWhile_UST, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.142, i32 0, i32 0)) #23, !dbg !11442
  unreachable, !dbg !11442

5:                                                ; preds = %1
  ret void, !dbg !11447
}

; Function Attrs: noinline nounwind optsize
define dso_local void @log_hal_error_internal(i8* nocapture noundef readnone %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #0 !dbg !11448 {
  %4 = alloca %struct.__va_list, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !11452, metadata !DIExpression()), !dbg !11465
  call void @llvm.dbg.value(metadata i32 %1, metadata !11453, metadata !DIExpression()), !dbg !11465
  call void @llvm.dbg.value(metadata i8* %2, metadata !11454, metadata !DIExpression()), !dbg !11465
  %6 = bitcast %struct.__va_list* %4 to i8*, !dbg !11466
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #22, !dbg !11466
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !11455, metadata !DIExpression()), !dbg !11467
  %7 = bitcast i32* %5 to i8*, !dbg !11468
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #22, !dbg !11468
  call void @llvm.dbg.value(metadata i32* %5, metadata !11464, metadata !DIExpression(DW_OP_deref)), !dbg !11465
  %8 = call i32 @hal_nvic_save_and_set_interrupt_mask(i32* noundef nonnull %5) #20, !dbg !11469
  call void @llvm.va_start(i8* nonnull %6), !dbg !11470
  %9 = bitcast %struct.__va_list* %4 to i32*, !dbg !11471
  %10 = load i32, i32* %9, align 4, !dbg !11471
  %11 = insertvalue [1 x i32] poison, i32 %10, 0, !dbg !11471
  %12 = call i32 @vprintf(i8* noundef %2, [1 x i32] %11) #20, !dbg !11471
  call void @llvm.va_end(i8* nonnull %6), !dbg !11472
  %13 = load i32, i32* %5, align 4, !dbg !11473
  call void @llvm.dbg.value(metadata i32 %13, metadata !11464, metadata !DIExpression()), !dbg !11465
  %14 = call i32 @hal_nvic_restore_interrupt_mask(i32 noundef %13) #20, !dbg !11474
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #22, !dbg !11475
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #22, !dbg !11475
  ret void, !dbg !11475
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #18

; Function Attrs: optsize
declare dso_local i32 @vprintf(i8* noundef, [1 x i32]) local_unnamed_addr #5

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #18

; Function Attrs: noinline nounwind optsize
define dso_local void @log_hal_warning_internal(i8* nocapture noundef readnone %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #0 !dbg !11476 {
  %4 = alloca %struct.__va_list, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !11478, metadata !DIExpression()), !dbg !11483
  call void @llvm.dbg.value(metadata i32 %1, metadata !11479, metadata !DIExpression()), !dbg !11483
  call void @llvm.dbg.value(metadata i8* %2, metadata !11480, metadata !DIExpression()), !dbg !11483
  %6 = bitcast %struct.__va_list* %4 to i8*, !dbg !11484
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #22, !dbg !11484
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !11481, metadata !DIExpression()), !dbg !11485
  %7 = bitcast i32* %5 to i8*, !dbg !11486
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #22, !dbg !11486
  call void @llvm.dbg.value(metadata i32* %5, metadata !11482, metadata !DIExpression(DW_OP_deref)), !dbg !11483
  %8 = call i32 @hal_nvic_save_and_set_interrupt_mask(i32* noundef nonnull %5) #20, !dbg !11487
  call void @llvm.va_start(i8* nonnull %6), !dbg !11488
  %9 = bitcast %struct.__va_list* %4 to i32*, !dbg !11489
  %10 = load i32, i32* %9, align 4, !dbg !11489
  %11 = insertvalue [1 x i32] poison, i32 %10, 0, !dbg !11489
  %12 = call i32 @vprintf(i8* noundef %2, [1 x i32] %11) #20, !dbg !11489
  call void @llvm.va_end(i8* nonnull %6), !dbg !11490
  %13 = load i32, i32* %5, align 4, !dbg !11491
  call void @llvm.dbg.value(metadata i32 %13, metadata !11482, metadata !DIExpression()), !dbg !11483
  %14 = call i32 @hal_nvic_restore_interrupt_mask(i32 noundef %13) #20, !dbg !11492
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #22, !dbg !11493
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #22, !dbg !11493
  ret void, !dbg !11493
}

; Function Attrs: noinline nounwind optsize
define dso_local void @log_hal_info_internal(i8* nocapture noundef readnone %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #0 !dbg !11494 {
  %4 = alloca %struct.__va_list, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !11496, metadata !DIExpression()), !dbg !11501
  call void @llvm.dbg.value(metadata i32 %1, metadata !11497, metadata !DIExpression()), !dbg !11501
  call void @llvm.dbg.value(metadata i8* %2, metadata !11498, metadata !DIExpression()), !dbg !11501
  %6 = bitcast %struct.__va_list* %4 to i8*, !dbg !11502
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #22, !dbg !11502
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !11499, metadata !DIExpression()), !dbg !11503
  %7 = bitcast i32* %5 to i8*, !dbg !11504
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #22, !dbg !11504
  call void @llvm.dbg.value(metadata i32* %5, metadata !11500, metadata !DIExpression(DW_OP_deref)), !dbg !11501
  %8 = call i32 @hal_nvic_save_and_set_interrupt_mask(i32* noundef nonnull %5) #20, !dbg !11505
  call void @llvm.va_start(i8* nonnull %6), !dbg !11506
  %9 = bitcast %struct.__va_list* %4 to i32*, !dbg !11507
  %10 = load i32, i32* %9, align 4, !dbg !11507
  %11 = insertvalue [1 x i32] poison, i32 %10, 0, !dbg !11507
  %12 = call i32 @vprintf(i8* noundef %2, [1 x i32] %11) #20, !dbg !11507
  call void @llvm.va_end(i8* nonnull %6), !dbg !11508
  %13 = load i32, i32* %5, align 4, !dbg !11509
  call void @llvm.dbg.value(metadata i32 %13, metadata !11500, metadata !DIExpression()), !dbg !11501
  %14 = call i32 @hal_nvic_restore_interrupt_mask(i32 noundef %13) #20, !dbg !11510
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #22, !dbg !11511
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #22, !dbg !11511
  ret void, !dbg !11511
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @log_hal_dump_internal(i8* nocapture noundef %0, i32 noundef %1, i8* nocapture noundef %2, i8* nocapture noundef %3, i32 noundef %4, ...) local_unnamed_addr #10 !dbg !11512 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11518, metadata !DIExpression()), !dbg !11523
  call void @llvm.dbg.value(metadata i32 %1, metadata !11519, metadata !DIExpression()), !dbg !11523
  call void @llvm.dbg.value(metadata i8* %2, metadata !11520, metadata !DIExpression()), !dbg !11523
  call void @llvm.dbg.value(metadata i8* %3, metadata !11521, metadata !DIExpression()), !dbg !11523
  call void @llvm.dbg.value(metadata i32 %4, metadata !11522, metadata !DIExpression()), !dbg !11523
  ret void, !dbg !11524
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @__EMI_GetSR(i32 noundef %0) local_unnamed_addr #2 section ".tcm_code" !dbg !11525 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11527, metadata !DIExpression()), !dbg !11529
  %2 = shl i32 %0, 20, !dbg !11530
  %3 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !11531
  %4 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %3, i32 0, i32 33, !dbg !11532
  store volatile i32 %2, i32* %4, align 4, !dbg !11533
  %5 = load volatile i32, i32* %4, align 4, !dbg !11534
  %6 = or i32 %5, 65536, !dbg !11535
  store volatile i32 %6, i32* %4, align 4, !dbg !11536
  br label %7, !dbg !11537

7:                                                ; preds = %7, %1
  %8 = load volatile i32, i32* %4, align 4, !dbg !11538
  %9 = and i32 %8, 1, !dbg !11539
  %10 = icmp eq i32 %9, 0, !dbg !11540
  br i1 %10, label %7, label %11, !dbg !11537, !llvm.loop !11541

11:                                               ; preds = %7
  %12 = load volatile i32, i32* %4, align 4, !dbg !11543
  %13 = lshr i32 %12, 8, !dbg !11544
  %14 = and i32 %13, 255, !dbg !11544
  call void @llvm.dbg.value(metadata i32 %14, metadata !11528, metadata !DIExpression()), !dbg !11529
  ret i32 %14, !dbg !11545
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @__EMI_SetSR(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 section ".tcm_code" !dbg !11546 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11550, metadata !DIExpression()), !dbg !11552
  call void @llvm.dbg.value(metadata i32 %1, metadata !11551, metadata !DIExpression()), !dbg !11552
  call void @llvm.dbg.value(metadata i32 %1, metadata !11551, metadata !DIExpression(DW_OP_constu, 255, DW_OP_and, DW_OP_stack_value)), !dbg !11552
  %3 = shl i32 %1, 24, !dbg !11553
  %4 = shl i32 %0, 20, !dbg !11554
  %5 = or i32 %4, %3, !dbg !11555
  %6 = or i32 %5, 131072, !dbg !11555
  %7 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !11556
  %8 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %7, i32 0, i32 33, !dbg !11557
  store volatile i32 %6, i32* %8, align 4, !dbg !11558
  %9 = load volatile i32, i32* %8, align 4, !dbg !11559
  %10 = or i32 %9, 65536, !dbg !11560
  store volatile i32 %10, i32* %8, align 4, !dbg !11561
  br label %11, !dbg !11562

11:                                               ; preds = %11, %2
  %12 = load volatile i32, i32* %8, align 4, !dbg !11563
  %13 = and i32 %12, 1, !dbg !11564
  %14 = icmp eq i32 %13, 0, !dbg !11565
  br i1 %14, label %11, label %15, !dbg !11562, !llvm.loop !11566

15:                                               ; preds = %11
  ret void, !dbg !11568
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @__EMI_SetRegValfromCMCP() local_unnamed_addr #7 section ".tcm_code" !dbg !11569 {
  %1 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 0), align 4, !dbg !11570
  store i32 %1, i32* @EMI_GENA_VAL, align 4, !dbg !11571
  %2 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 1), align 4, !dbg !11572
  store i32 %2, i32* @EMI_RDCT_VAL, align 4, !dbg !11573
  %3 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 2), align 4, !dbg !11574
  store i32 %3, i32* @EMI_DSRAM_VAL, align 4, !dbg !11575
  %4 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 3), align 4, !dbg !11576
  store i32 %4, i32* @EMI_MSRAM_VAL, align 4, !dbg !11577
  %5 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 4), align 4, !dbg !11578
  store i32 %5, i32* @EMI_IDL_C_VAL, align 4, !dbg !11579
  %6 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 5), align 4, !dbg !11580
  store i32 %6, i32* @EMI_IDL_D_VAL, align 4, !dbg !11581
  %7 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 6), align 4, !dbg !11582
  store i32 %7, i32* @EMI_IDL_E_VAL, align 4, !dbg !11583
  %8 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 7), align 4, !dbg !11584
  store i32 %8, i32* @EMI_ODL_C_VAL, align 4, !dbg !11585
  %9 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 8), align 4, !dbg !11586
  store i32 %9, i32* @EMI_ODL_D_VAL, align 4, !dbg !11587
  %10 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 9), align 4, !dbg !11588
  store i32 %10, i32* @EMI_ODL_E_VAL, align 4, !dbg !11589
  %11 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 10), align 4, !dbg !11590
  store i32 %11, i32* @EMI_ODL_F_VAL, align 4, !dbg !11591
  %12 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 11), align 4, !dbg !11592
  store i32 %12, i32* @EMI_IO_A_VAL, align 4, !dbg !11593
  %13 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 12), align 4, !dbg !11594
  store i32 %13, i32* @EMI_IO_B_VAL, align 4, !dbg !11595
  ret void, !dbg !11596
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @__EMI_EnableBandwidthLimiter() local_unnamed_addr #2 section ".tcm_code" !dbg !11597 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !11600
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 35, !dbg !11601
  store volatile i32 21553, i32* %2, align 4, !dbg !11602
  %3 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 37, !dbg !11603
  store volatile i32 20489, i32* %3, align 4, !dbg !11604
  %4 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 39, !dbg !11605
  store volatile i32 20550, i32* %4, align 4, !dbg !11606
  ret i32 0, !dbg !11607
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @TestCase_MBIST() local_unnamed_addr #2 section ".tcm_code" !dbg !11608 {
  call void @llvm.dbg.declare(metadata [2 x i32]* @__const.TestCase_MBIST.mbist_data, metadata !11612, metadata !DIExpression()), !dbg !11616
  call void @llvm.dbg.value(metadata i32 0, metadata !11610, metadata !DIExpression()), !dbg !11617
  call void @llvm.dbg.value(metadata i32 16384, metadata !11611, metadata !DIExpression()), !dbg !11617
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !11618
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 65, !dbg !11619
  store volatile i32 0, i32* %2, align 4, !dbg !11620
  call void @llvm.dbg.value(metadata i32 0, metadata !11614, metadata !DIExpression()), !dbg !11617
  %3 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 67
  %4 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 71
  call void @llvm.dbg.value(metadata i32 0, metadata !11614, metadata !DIExpression()), !dbg !11617
  br label %5, !dbg !11621

5:                                                ; preds = %0, %34
  %6 = phi i32 [ 0, %0 ], [ %35, %34 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !11614, metadata !DIExpression()), !dbg !11617
  %7 = shl i32 %6, 12
  call void @llvm.dbg.value(metadata i32 0, metadata !11613, metadata !DIExpression()), !dbg !11617
  br label %8, !dbg !11623

8:                                                ; preds = %5, %31
  %9 = phi i32 [ 0, %5 ], [ %32, %31 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !11613, metadata !DIExpression()), !dbg !11617
  call void @llvm.dbg.value(metadata i32 0, metadata !11615, metadata !DIExpression()), !dbg !11617
  %10 = getelementptr inbounds [2 x i32], [2 x i32]* @__const.TestCase_MBIST.mbist_data, i32 0, i32 %9
  br label %13, !dbg !11627

11:                                               ; preds = %26
  call void @llvm.dbg.value(metadata i32 undef, metadata !11615, metadata !DIExpression()), !dbg !11617
  %12 = icmp eq i32 %30, 2, !dbg !11631
  br i1 %12, label %31, label %13, !dbg !11627, !llvm.loop !11633

13:                                               ; preds = %8, %11
  %14 = phi i32 [ 0, %8 ], [ %30, %11 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !11615, metadata !DIExpression()), !dbg !11617
  store volatile i32 0, i32* %2, align 4, !dbg !11635
  store volatile i32 63, i32* %3, align 4, !dbg !11637
  %15 = load i32, i32* %10, align 4, !dbg !11638
  %16 = shl i32 %15, 16, !dbg !11639
  %17 = shl nuw nsw i32 %14, 13, !dbg !11640
  %18 = or i32 %17, %7, !dbg !11641
  %19 = or i32 %18, %16, !dbg !11642
  store volatile i32 %19, i32* %2, align 4, !dbg !11643
  %20 = load volatile i32, i32* %2, align 4, !dbg !11644
  %21 = or i32 %20, 805, !dbg !11644
  store volatile i32 %21, i32* %2, align 4, !dbg !11644
  br label %22, !dbg !11645

22:                                               ; preds = %22, %13
  %23 = load volatile i32, i32* %4, align 4, !dbg !11646
  %24 = and i32 %23, 2, !dbg !11647
  %25 = icmp eq i32 %24, 0, !dbg !11648
  br i1 %25, label %22, label %26, !dbg !11645, !llvm.loop !11649

26:                                               ; preds = %22
  %27 = load volatile i32, i32* %4, align 4, !dbg !11651
  %28 = and i32 %27, 1, !dbg !11653
  %29 = icmp eq i32 %28, 0, !dbg !11654
  %30 = add nuw nsw i32 %14, 1, !dbg !11655
  call void @llvm.dbg.value(metadata i32 %30, metadata !11615, metadata !DIExpression()), !dbg !11617
  br i1 %29, label %11, label %37, !dbg !11656

31:                                               ; preds = %11
  %32 = add nuw nsw i32 %9, 1, !dbg !11657
  call void @llvm.dbg.value(metadata i32 %32, metadata !11613, metadata !DIExpression()), !dbg !11617
  %33 = icmp eq i32 %32, 2, !dbg !11658
  br i1 %33, label %34, label %8, !dbg !11623, !llvm.loop !11659

34:                                               ; preds = %31
  %35 = add nuw nsw i32 %6, 1, !dbg !11661
  call void @llvm.dbg.value(metadata i32 %35, metadata !11614, metadata !DIExpression()), !dbg !11617
  %36 = icmp eq i32 %35, 2, !dbg !11662
  br i1 %36, label %37, label %5, !dbg !11621, !llvm.loop !11663

37:                                               ; preds = %34, %26
  %38 = phi i32 [ -1, %26 ], [ 0, %34 ], !dbg !11617
  store volatile i32 0, i32* %2, align 4, !dbg !11617
  ret i32 %38, !dbg !11665
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @__EMI_DataAutoTrackingMbistTest() local_unnamed_addr #2 section ".tcm_code" !dbg !11666 {
  %1 = tail call i32 @TestCase_MBIST() #21, !dbg !11667
  %2 = icmp ne i32 %1, 0, !dbg !11669
  %3 = sext i1 %2 to i32, !dbg !11670
  ret i32 %3, !dbg !11671
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @__EMI_EnableDataAutoTracking() local_unnamed_addr #2 section ".tcm_code" !dbg !11672 {
  call void @llvm.dbg.value(metadata i32 31, metadata !11674, metadata !DIExpression()), !dbg !11676
  call void @llvm.dbg.value(metadata i32 0, metadata !11675, metadata !DIExpression()), !dbg !11676
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !11677
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 7, !dbg !11678
  store volatile i32 0, i32* %2, align 4, !dbg !11679
  %3 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 9, !dbg !11680
  store volatile i32 0, i32* %3, align 4, !dbg !11681
  %4 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 11, !dbg !11682
  store volatile i32 0, i32* %4, align 4, !dbg !11683
  %5 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 13, !dbg !11684
  store volatile i32 0, i32* %5, align 4, !dbg !11685
  call void @llvm.dbg.value(metadata i32 31, metadata !11674, metadata !DIExpression()), !dbg !11676
  %6 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 9, !dbg !11686
  store volatile i32 522133279, i32* %6, align 4, !dbg !11690
  %7 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 11, !dbg !11691
  store volatile i32 522133279, i32* %7, align 4, !dbg !11692
  %8 = tail call i32 @__EMI_DataAutoTrackingMbistTest() #21, !dbg !11693
  %9 = icmp eq i32 %8, 0, !dbg !11695
  call void @llvm.dbg.value(metadata i32 31, metadata !11674, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !11676
  br i1 %9, label %36, label %10, !dbg !11696

10:                                               ; preds = %0, %13
  %11 = phi i32 [ %14, %13 ], [ 31, %0 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !11674, metadata !DIExpression()), !dbg !11676
  call void @llvm.dbg.value(metadata i32 %11, metadata !11674, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !11676
  call void @llvm.dbg.value(metadata i32 %11, metadata !11674, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !11676
  %12 = icmp eq i32 %11, 0, !dbg !11697
  br i1 %12, label %26, label %13, !dbg !11698, !llvm.loop !11699

13:                                               ; preds = %10
  %14 = add nsw i32 %11, -1, !dbg !11701
  call void @llvm.dbg.value(metadata i32 %14, metadata !11674, metadata !DIExpression()), !dbg !11676
  %15 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !11702
  %16 = shl i32 %14, 24, !dbg !11703
  %17 = shl i32 %14, 16, !dbg !11704
  %18 = shl i32 %14, 8, !dbg !11705
  %19 = or i32 %17, %14, !dbg !11706
  %20 = or i32 %19, %16, !dbg !11707
  %21 = or i32 %20, %18, !dbg !11708
  %22 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %15, i32 0, i32 9, !dbg !11686
  store volatile i32 %21, i32* %22, align 4, !dbg !11690
  %23 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %15, i32 0, i32 11, !dbg !11691
  store volatile i32 %21, i32* %23, align 4, !dbg !11692
  %24 = tail call i32 @__EMI_DataAutoTrackingMbistTest() #21, !dbg !11693
  %25 = icmp eq i32 %24, 0, !dbg !11695
  call void @llvm.dbg.value(metadata i32 %14, metadata !11674, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !11676
  br i1 %25, label %36, label %10, !dbg !11696

26:                                               ; preds = %10, %26
  %27 = phi i32 [ %33, %26 ], [ 1, %10 ]
  call void @llvm.dbg.value(metadata i32 %27, metadata !11675, metadata !DIExpression()), !dbg !11676
  %28 = shl nuw nsw i32 %27, 16, !dbg !11709
  %29 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !11715
  %30 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %29, i32 0, i32 13, !dbg !11716
  store volatile i32 %28, i32* %30, align 4, !dbg !11717
  %31 = tail call i32 @__EMI_DataAutoTrackingMbistTest() #21, !dbg !11718
  %32 = icmp eq i32 %31, 0, !dbg !11720
  call void @llvm.dbg.value(metadata i32 %27, metadata !11675, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !11676
  %33 = add nuw nsw i32 %27, 1
  %34 = icmp eq i32 %33, 32
  %35 = select i1 %32, i1 true, i1 %34, !dbg !11721
  call void @llvm.dbg.value(metadata i32 %33, metadata !11675, metadata !DIExpression()), !dbg !11676
  call void @llvm.dbg.value(metadata i32 %27, metadata !11675, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !11676
  br i1 %35, label %36, label %26, !dbg !11721, !llvm.loop !11722

36:                                               ; preds = %13, %26, %0
  ret void, !dbg !11725
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @EMI_PowerOn_Init() local_unnamed_addr #2 section ".tcm_code" !dbg !11726 {
  store volatile i32 0, i32* inttoptr (i32 -1575944184 to i32*), align 8, !dbg !11727
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !11728
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 27, !dbg !11729
  store volatile i32 1, i32* %2, align 4, !dbg !11730
  br label %3, !dbg !11731

3:                                                ; preds = %3, %0
  %4 = load volatile i32, i32* %2, align 4, !dbg !11732
  %5 = and i32 %4, 2, !dbg !11733
  %6 = icmp eq i32 %5, 0, !dbg !11733
  br i1 %6, label %3, label %7, !dbg !11731, !llvm.loop !11734

7:                                                ; preds = %3
  store volatile i32 0, i32* %2, align 4, !dbg !11736
  br label %8, !dbg !11737

8:                                                ; preds = %8, %7
  %9 = load volatile i32, i32* %2, align 4, !dbg !11738
  %10 = and i32 %9, 2, !dbg !11739
  %11 = icmp eq i32 %10, 0, !dbg !11739
  br i1 %11, label %12, label %8, !dbg !11737, !llvm.loop !11740

12:                                               ; preds = %8
  store volatile i32 1515870810, i32* null, align 2147483648, !dbg !11742
  store volatile i32 1515870810, i32* inttoptr (i32 4 to i32*), align 4, !dbg !11743
  %13 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4
  %14 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %13, i32 0, i32 33
  br label %15, !dbg !11744

15:                                               ; preds = %15, %12
  %16 = load volatile i32, i32* %14, align 4, !dbg !11745
  %17 = and i32 %16, 1, !dbg !11746
  %18 = icmp eq i32 %17, 0, !dbg !11747
  br i1 %18, label %15, label %19, !dbg !11744, !llvm.loop !11748

19:                                               ; preds = %15
  tail call void @__EMI_SetSR(i32 noundef 0, i32 noundef 15) #21, !dbg !11750
  tail call void @__EMI_SetSR(i32 noundef 4, i32 noundef 8) #21, !dbg !11751
  %20 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4
  %21 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %20, i32 0, i32 33
  br label %22, !dbg !11752

22:                                               ; preds = %22, %19
  %23 = load volatile i32, i32* %21, align 4, !dbg !11753
  %24 = and i32 %23, 1, !dbg !11754
  %25 = icmp eq i32 %24, 0, !dbg !11755
  br i1 %25, label %22, label %26, !dbg !11752, !llvm.loop !11756

26:                                               ; preds = %22
  %27 = load volatile i32, i32* inttoptr (i32 -1577058296 to i32*), align 8, !dbg !11758
  %28 = icmp eq i32 %27, 9507, !dbg !11760
  br i1 %28, label %29, label %37, !dbg !11761

29:                                               ; preds = %26
  %30 = load volatile i32, i32* inttoptr (i32 -1576664700 to i32*), align 4, !dbg !11762
  %31 = and i32 %30, 15, !dbg !11765
  %32 = icmp eq i32 %31, 2, !dbg !11766
  %33 = load volatile i32, i32* inttoptr (i32 -1602224060 to i32*), align 4, !dbg !11767
  %34 = and i32 %33, -128, !dbg !11767
  %35 = select i1 %32, i32 1, i32 7
  %36 = or i32 %34, %35, !dbg !11767
  store volatile i32 %36, i32* inttoptr (i32 -1602224060 to i32*), align 4, !dbg !11767
  br label %37, !dbg !11768

37:                                               ; preds = %29, %26
  ret void, !dbg !11768
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local signext i8 @custom_setEMI() local_unnamed_addr #2 section ".tcm_code" !dbg !11769 {
  tail call void @EMI_PowerOn_Init() #21, !dbg !11772
  tail call void @__EMI_SetRegValfromCMCP() #21, !dbg !11773
  %1 = tail call i32 @__EMI_GetSR(i32 noundef 0) #21, !dbg !11774
  store i32 %1, i32* @__EMI_CurSR0, align 4, !dbg !11775
  %2 = tail call i32 @__EMI_GetSR(i32 noundef 1) #21, !dbg !11776
  store i32 %2, i32* @__EMI_CurSR1, align 4, !dbg !11777
  %3 = tail call i32 @__EMI_GetSR(i32 noundef 2) #21, !dbg !11778
  store i32 %3, i32* @__EMI_CurSR2, align 4, !dbg !11779
  ret i8 0, !dbg !11780
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local signext i8 @custom_setAdvEMI() local_unnamed_addr #2 section ".tcm_code" !dbg !11781 {
  %1 = load i32, i32* @EMI_IO_A_VAL, align 4, !dbg !11782
  %2 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !11783
  %3 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 23, !dbg !11784
  store volatile i32 %1, i32* %3, align 4, !dbg !11785
  %4 = load i32, i32* @EMI_IO_B_VAL, align 4, !dbg !11786
  %5 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 25, !dbg !11787
  store volatile i32 %4, i32* %5, align 4, !dbg !11788
  %6 = load i32, i32* @EMI_GENA_VAL, align 4, !dbg !11789
  %7 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 3, !dbg !11790
  store volatile i32 %6, i32* %7, align 4, !dbg !11791
  %8 = load i32, i32* @EMI_RDCT_VAL, align 4, !dbg !11792
  %9 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 5, !dbg !11793
  store volatile i32 %8, i32* %9, align 4, !dbg !11794
  %10 = load i32, i32* @EMI_DSRAM_VAL, align 4, !dbg !11795
  %11 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 29, !dbg !11796
  store volatile i32 %10, i32* %11, align 4, !dbg !11797
  %12 = load i32, i32* @EMI_MSRAM_VAL, align 4, !dbg !11798
  %13 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 31, !dbg !11799
  store volatile i32 %12, i32* %13, align 4, !dbg !11800
  %14 = load i32, i32* @EMI_IDL_C_VAL, align 4, !dbg !11801
  %15 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 9, !dbg !11802
  store volatile i32 %14, i32* %15, align 4, !dbg !11803
  %16 = load i32, i32* @EMI_IDL_D_VAL, align 4, !dbg !11804
  %17 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 11, !dbg !11805
  store volatile i32 %16, i32* %17, align 4, !dbg !11806
  %18 = load i32, i32* @EMI_IDL_E_VAL, align 4, !dbg !11807
  %19 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 13, !dbg !11808
  store volatile i32 %18, i32* %19, align 4, !dbg !11809
  %20 = load i32, i32* @EMI_ODL_C_VAL, align 4, !dbg !11810
  %21 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 15, !dbg !11811
  store volatile i32 %20, i32* %21, align 4, !dbg !11812
  %22 = load i32, i32* @EMI_ODL_D_VAL, align 4, !dbg !11813
  %23 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 17, !dbg !11814
  store volatile i32 %22, i32* %23, align 4, !dbg !11815
  %24 = load i32, i32* @EMI_ODL_E_VAL, align 4, !dbg !11816
  %25 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 19, !dbg !11817
  store volatile i32 %24, i32* %25, align 4, !dbg !11818
  %26 = load i32, i32* @EMI_ODL_F_VAL, align 4, !dbg !11819
  %27 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 21, !dbg !11820
  store volatile i32 %26, i32* %27, align 4, !dbg !11821
  tail call void @__EMI_EnableDataAutoTracking() #21, !dbg !11822
  %28 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !11823
  %29 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %28, i32 0, i32 7, !dbg !11824
  store volatile i32 806289408, i32* %29, align 4, !dbg !11825
  br label %30, !dbg !11826

30:                                               ; preds = %30, %0
  %31 = load volatile i32, i32* %29, align 4, !dbg !11827
  %32 = and i32 %31, 128, !dbg !11828
  %33 = icmp eq i32 %32, 0, !dbg !11828
  br i1 %33, label %30, label %34, !dbg !11826, !llvm.loop !11829

34:                                               ; preds = %30
  store volatile i32 1880031232, i32* %29, align 4, !dbg !11831
  br label %35, !dbg !11832

35:                                               ; preds = %35, %34
  %36 = load volatile i32, i32* %29, align 4, !dbg !11833
  %37 = and i32 %36, 128, !dbg !11834
  %38 = icmp eq i32 %37, 0, !dbg !11834
  br i1 %38, label %39, label %35, !dbg !11832, !llvm.loop !11835

39:                                               ; preds = %35
  store volatile i32 269418496, i32* %29, align 4, !dbg !11837
  %40 = tail call i32 @__EMI_EnableBandwidthLimiter() #21, !dbg !11838
  ret i8 0, !dbg !11839
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @EMI_Setting_Save() local_unnamed_addr #2 section ".tcm_code" !dbg !11840 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !11841
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 1, !dbg !11842
  %3 = load volatile i32, i32* %2, align 4, !dbg !11842
  store volatile i32 %3, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 1), align 4, !dbg !11843
  %4 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 3, !dbg !11844
  %5 = load volatile i32, i32* %4, align 4, !dbg !11844
  store volatile i32 %5, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 3), align 4, !dbg !11845
  %6 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 5, !dbg !11846
  %7 = load volatile i32, i32* %6, align 4, !dbg !11846
  store volatile i32 %7, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 5), align 4, !dbg !11847
  %8 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 9, !dbg !11848
  %9 = load volatile i32, i32* %8, align 4, !dbg !11848
  store volatile i32 %9, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 9), align 4, !dbg !11849
  %10 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 11, !dbg !11850
  %11 = load volatile i32, i32* %10, align 4, !dbg !11850
  store volatile i32 %11, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 11), align 4, !dbg !11851
  %12 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 13, !dbg !11852
  %13 = load volatile i32, i32* %12, align 4, !dbg !11852
  store volatile i32 %13, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 13), align 4, !dbg !11853
  %14 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 15, !dbg !11854
  %15 = load volatile i32, i32* %14, align 4, !dbg !11854
  store volatile i32 %15, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 15), align 4, !dbg !11855
  %16 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 17, !dbg !11856
  %17 = load volatile i32, i32* %16, align 4, !dbg !11856
  store volatile i32 %17, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 17), align 4, !dbg !11857
  %18 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 19, !dbg !11858
  %19 = load volatile i32, i32* %18, align 4, !dbg !11858
  store volatile i32 %19, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 19), align 4, !dbg !11859
  %20 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 21, !dbg !11860
  %21 = load volatile i32, i32* %20, align 4, !dbg !11860
  store volatile i32 %21, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 21), align 4, !dbg !11861
  %22 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 23, !dbg !11862
  %23 = load volatile i32, i32* %22, align 4, !dbg !11862
  store volatile i32 %23, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 23), align 4, !dbg !11863
  %24 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 25, !dbg !11864
  %25 = load volatile i32, i32* %24, align 4, !dbg !11864
  store volatile i32 %25, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 25), align 4, !dbg !11865
  %26 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 29, !dbg !11866
  %27 = load volatile i32, i32* %26, align 4, !dbg !11866
  store volatile i32 %27, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 29), align 4, !dbg !11867
  %28 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 31, !dbg !11868
  %29 = load volatile i32, i32* %28, align 4, !dbg !11868
  store volatile i32 %29, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 31), align 4, !dbg !11869
  %30 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 35, !dbg !11870
  %31 = load volatile i32, i32* %30, align 4, !dbg !11870
  store volatile i32 %31, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 35), align 4, !dbg !11871
  %32 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 37, !dbg !11872
  %33 = load volatile i32, i32* %32, align 4, !dbg !11872
  store volatile i32 %33, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 37), align 4, !dbg !11873
  %34 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 39, !dbg !11874
  %35 = load volatile i32, i32* %34, align 4, !dbg !11874
  store volatile i32 %35, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 39), align 4, !dbg !11875
  %36 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 41, !dbg !11876
  %37 = load volatile i32, i32* %36, align 4, !dbg !11876
  store volatile i32 %37, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 41), align 4, !dbg !11877
  %38 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 43, !dbg !11878
  %39 = load volatile i32, i32* %38, align 4, !dbg !11878
  store volatile i32 %39, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 43), align 4, !dbg !11879
  %40 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 45, !dbg !11880
  %41 = load volatile i32, i32* %40, align 4, !dbg !11880
  store volatile i32 %41, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 45), align 4, !dbg !11881
  ret void, !dbg !11882
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @EMI_Setting_restore() local_unnamed_addr #2 section ".tcm_code" !dbg !11883 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 1
  br label %3, !dbg !11884

3:                                                ; preds = %3, %0
  %4 = load volatile i32, i32* %2, align 4, !dbg !11885
  %5 = and i32 %4, 17, !dbg !11886
  %6 = icmp eq i32 %5, 17, !dbg !11887
  br i1 %6, label %7, label %3, !dbg !11884, !llvm.loop !11888

7:                                                ; preds = %3
  %8 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 45), align 4, !dbg !11890
  %9 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 45, !dbg !11891
  store volatile i32 %8, i32* %9, align 4, !dbg !11892
  %10 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 43), align 4, !dbg !11893
  %11 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 43, !dbg !11894
  store volatile i32 %10, i32* %11, align 4, !dbg !11895
  %12 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 41), align 4, !dbg !11896
  %13 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 41, !dbg !11897
  store volatile i32 %12, i32* %13, align 4, !dbg !11898
  %14 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 39), align 4, !dbg !11899
  %15 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 39, !dbg !11900
  store volatile i32 %14, i32* %15, align 4, !dbg !11901
  %16 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 37), align 4, !dbg !11902
  %17 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 37, !dbg !11903
  store volatile i32 %16, i32* %17, align 4, !dbg !11904
  %18 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 35), align 4, !dbg !11905
  %19 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 35, !dbg !11906
  store volatile i32 %18, i32* %19, align 4, !dbg !11907
  %20 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 31), align 4, !dbg !11908
  %21 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 31, !dbg !11909
  store volatile i32 %20, i32* %21, align 4, !dbg !11910
  %22 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 29), align 4, !dbg !11911
  %23 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 29, !dbg !11912
  store volatile i32 %22, i32* %23, align 4, !dbg !11913
  %24 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 25), align 4, !dbg !11914
  %25 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 25, !dbg !11915
  store volatile i32 %24, i32* %25, align 4, !dbg !11916
  %26 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 23), align 4, !dbg !11917
  %27 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 23, !dbg !11918
  store volatile i32 %26, i32* %27, align 4, !dbg !11919
  %28 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 21), align 4, !dbg !11920
  %29 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 21, !dbg !11921
  store volatile i32 %28, i32* %29, align 4, !dbg !11922
  %30 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 19), align 4, !dbg !11923
  %31 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 19, !dbg !11924
  store volatile i32 %30, i32* %31, align 4, !dbg !11925
  %32 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 17), align 4, !dbg !11926
  %33 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 17, !dbg !11927
  store volatile i32 %32, i32* %33, align 4, !dbg !11928
  %34 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 15), align 4, !dbg !11929
  %35 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 15, !dbg !11930
  store volatile i32 %34, i32* %35, align 4, !dbg !11931
  %36 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 13), align 4, !dbg !11932
  %37 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 13, !dbg !11933
  store volatile i32 %36, i32* %37, align 4, !dbg !11934
  %38 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 11), align 4, !dbg !11935
  %39 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 11, !dbg !11936
  store volatile i32 %38, i32* %39, align 4, !dbg !11937
  %40 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 9), align 4, !dbg !11938
  %41 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 9, !dbg !11939
  store volatile i32 %40, i32* %41, align 4, !dbg !11940
  %42 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 5), align 4, !dbg !11941
  %43 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 5, !dbg !11942
  store volatile i32 %42, i32* %43, align 4, !dbg !11943
  %44 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 3), align 4, !dbg !11944
  %45 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 3, !dbg !11945
  store volatile i32 %44, i32* %45, align 4, !dbg !11946
  ret void, !dbg !11947
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @mtk_psram_half_sleep_exit() local_unnamed_addr #2 section ".tcm_code" !dbg !11948 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !11949
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 25, !dbg !11950
  %3 = load volatile i32, i32* %2, align 4, !dbg !11950
  %4 = and i32 %3, -2097185, !dbg !11951
  store volatile i32 %4, i32* %2, align 4, !dbg !11952
  %5 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 27, !dbg !11953
  store volatile i32 1, i32* %5, align 4, !dbg !11954
  br label %6, !dbg !11955

6:                                                ; preds = %6, %0
  %7 = load volatile i32, i32* %5, align 4, !dbg !11956
  %8 = and i32 %7, 2, !dbg !11957
  %9 = icmp eq i32 %8, 0, !dbg !11957
  br i1 %9, label %6, label %10, !dbg !11955, !llvm.loop !11958

10:                                               ; preds = %6
  store volatile i32 0, i32* %5, align 4, !dbg !11960
  br label %11, !dbg !11961

11:                                               ; preds = %11, %10
  %12 = load volatile i32, i32* %5, align 4, !dbg !11962
  %13 = and i32 %12, 2, !dbg !11963
  %14 = icmp eq i32 %13, 0, !dbg !11963
  br i1 %14, label %15, label %11, !dbg !11961, !llvm.loop !11964

15:                                               ; preds = %11
  tail call void @EMI_Setting_restore() #21, !dbg !11966
  %16 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !11967
  %17 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %16, i32 0, i32 7, !dbg !11968
  store volatile i32 806289408, i32* %17, align 4, !dbg !11969
  br label %18, !dbg !11970

18:                                               ; preds = %18, %15
  %19 = load volatile i32, i32* %17, align 4, !dbg !11971
  %20 = and i32 %19, 128, !dbg !11972
  %21 = icmp eq i32 %20, 0, !dbg !11972
  br i1 %21, label %18, label %22, !dbg !11970, !llvm.loop !11973

22:                                               ; preds = %18
  store volatile i32 1880031232, i32* %17, align 4, !dbg !11975
  br label %23, !dbg !11976

23:                                               ; preds = %23, %22
  %24 = load volatile i32, i32* %17, align 4, !dbg !11977
  %25 = and i32 %24, 128, !dbg !11978
  %26 = icmp eq i32 %25, 0, !dbg !11978
  br i1 %26, label %27, label %23, !dbg !11976, !llvm.loop !11979

27:                                               ; preds = %23
  store volatile i32 269418496, i32* %17, align 4, !dbg !11981
  %28 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 1), align 4, !dbg !11982
  %29 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %16, i32 0, i32 1, !dbg !11983
  store volatile i32 %28, i32* %29, align 4, !dbg !11984
  ret void, !dbg !11985
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @mtk_psram_half_sleep_enter() local_unnamed_addr #2 section ".tcm_code" !dbg !11986 {
  tail call void @EMI_Setting_Save() #21, !dbg !11987
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 1
  br label %3, !dbg !11988

3:                                                ; preds = %3, %0
  %4 = load volatile i32, i32* %2, align 4, !dbg !11989
  %5 = and i32 %4, 17, !dbg !11990
  %6 = icmp eq i32 %5, 17, !dbg !11991
  br i1 %6, label %7, label %3, !dbg !11988, !llvm.loop !11992

7:                                                ; preds = %3
  %8 = load volatile i32, i32* %2, align 4, !dbg !11994
  %9 = or i32 %8, 1792, !dbg !11995
  store volatile i32 %9, i32* %2, align 4, !dbg !11996
  %10 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 33, !dbg !11997
  store volatile i32 -261685248, i32* %10, align 4, !dbg !11998
  br label %11, !dbg !11999

11:                                               ; preds = %11, %7
  %12 = load volatile i32, i32* %10, align 4, !dbg !12000
  %13 = and i32 %12, 1, !dbg !12001
  %14 = icmp eq i32 %13, 0, !dbg !12002
  br i1 %14, label %11, label %15, !dbg !11999, !llvm.loop !12003

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 7, !dbg !12005
  store volatile i32 0, i32* %16, align 4, !dbg !12006
  %17 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 27
  br label %18, !dbg !12007

18:                                               ; preds = %18, %15
  %19 = load volatile i32, i32* %17, align 4, !dbg !12008
  %20 = and i32 %19, 16, !dbg !12009
  %21 = icmp eq i32 %20, 0, !dbg !12009
  br i1 %21, label %18, label %22, !dbg !12007, !llvm.loop !12010

22:                                               ; preds = %18
  %23 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 25, !dbg !12012
  %24 = load volatile i32, i32* %23, align 4, !dbg !12012
  %25 = or i32 %24, 2097184, !dbg !12013
  store volatile i32 %25, i32* %23, align 4, !dbg !12014
  ret void, !dbg !12015
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @EMI_DynamicClockSwitch(i32 noundef %0) local_unnamed_addr #9 section ".tcm_code" !dbg !12016 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !12021, metadata !DIExpression()), !dbg !12023
  %3 = bitcast i32* %2 to i8*, !dbg !12024
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !12024
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12022, metadata !DIExpression()), !dbg !12025
  switch i32 %0, label %24 [
    i32 0, label %4
    i32 1, label %25
  ], !dbg !12026

4:                                                ; preds = %1
  %5 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !12027
  %6 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %5, i32 0, i32 7, !dbg !12030
  store volatile i32 0, i32* %6, align 4, !dbg !12031
  store volatile i32 806289408, i32* %6, align 4, !dbg !12032
  br label %7, !dbg !12033

7:                                                ; preds = %7, %4
  %8 = load volatile i32, i32* %6, align 4, !dbg !12034
  %9 = and i32 %8, 128, !dbg !12035
  %10 = icmp eq i32 %9, 0, !dbg !12035
  br i1 %10, label %7, label %11, !dbg !12033, !llvm.loop !12036

11:                                               ; preds = %7
  store volatile i32 1880031232, i32* %6, align 4, !dbg !12038
  br label %12, !dbg !12039

12:                                               ; preds = %12, %11
  %13 = load volatile i32, i32* %6, align 4, !dbg !12040
  %14 = and i32 %13, 128, !dbg !12041
  %15 = icmp eq i32 %14, 0, !dbg !12041
  br i1 %15, label %16, label %12, !dbg !12039, !llvm.loop !12042

16:                                               ; preds = %12
  store volatile i32 269418496, i32* %6, align 4, !dbg !12044
  store volatile i32 0, i32* %2, align 4, !dbg !12045
  %17 = load volatile i32, i32* %2, align 4, !dbg !12047
  %18 = icmp ult i32 %17, 255, !dbg !12049
  br i1 %18, label %19, label %25, !dbg !12050

19:                                               ; preds = %16, %19
  %20 = load volatile i32, i32* %2, align 4, !dbg !12051
  %21 = add i32 %20, 1, !dbg !12051
  store volatile i32 %21, i32* %2, align 4, !dbg !12051
  %22 = load volatile i32, i32* %2, align 4, !dbg !12047
  %23 = icmp ult i32 %22, 255, !dbg !12049
  br i1 %23, label %19, label %25, !dbg !12050, !llvm.loop !12052

24:                                               ; preds = %1
  br label %25, !dbg !12054

25:                                               ; preds = %19, %16, %1, %24
  %26 = phi i32 [ -1, %24 ], [ 0, %1 ], [ 0, %16 ], [ 0, %19 ], !dbg !12023
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !12057
  ret i32 %26, !dbg !12057
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @emi_mask_master() local_unnamed_addr #2 section ".tcm_code" !dbg !12058 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !12059
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 1, !dbg !12060
  %3 = load volatile i32, i32* %2, align 4, !dbg !12060
  %4 = or i32 %3, 1792, !dbg !12061
  store volatile i32 %4, i32* %2, align 4, !dbg !12062
  ret void, !dbg !12063
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @emi_unmask_master() local_unnamed_addr #2 section ".tcm_code" !dbg !12064 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !12065
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 1, !dbg !12066
  %3 = load volatile i32, i32* %2, align 4, !dbg !12066
  %4 = and i32 %3, -1793, !dbg !12067
  store volatile i32 %4, i32* %2, align 4, !dbg !12068
  ret void, !dbg !12069
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i1 @is_clk_use_lfosc() local_unnamed_addr #10 section ".tcm_code" !dbg !12070 {
  ret i1 false, !dbg !12071
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i1 @is_clk_use_mpll() local_unnamed_addr #10 section ".tcm_code" !dbg !12072 {
  ret i1 false, !dbg !12073
}

; Function Attrs: noinline nounwind optsize
define dso_local void @cm_bus_clk_208m() local_unnamed_addr #0 section ".tcm_code" !dbg !12074 {
  tail call void @cm_bus_clk_208m_mpll_hfosc() #20, !dbg !12075
  ret void, !dbg !12078
}

; Function Attrs: optsize
declare dso_local void @cm_bus_clk_208m_mpll_hfosc() local_unnamed_addr #5 section ".tcm_code"

; Function Attrs: noinline nounwind optsize
define dso_local void @cm_bus_clk_104m() local_unnamed_addr #0 section ".tcm_code" !dbg !12079 {
  tail call void @cm_bus_clk_104m_hfosc_hfosc() #20, !dbg !12080
  ret void, !dbg !12083
}

; Function Attrs: optsize
declare dso_local void @cm_bus_clk_104m_hfosc_hfosc() local_unnamed_addr #5 section ".tcm_code"

; Function Attrs: noinline nounwind optsize
define dso_local void @cm_bus_clk_26m() local_unnamed_addr #0 section ".tcm_code" !dbg !12084 {
  tail call void @cm_bus_clk_26m_dcxo_dcxo() #20, !dbg !12085
  ret void, !dbg !12088
}

; Function Attrs: optsize
declare dso_local void @cm_bus_clk_26m_dcxo_dcxo() local_unnamed_addr #5 section ".tcm_code"

; Function Attrs: noinline nounwind optsize
define dso_local void @peri_clk_26m() local_unnamed_addr #0 section ".tcm_code" !dbg !12089 {
  tail call void @peri_26m_dcxo() #20, !dbg !12090
  ret void, !dbg !12093
}

; Function Attrs: optsize
declare dso_local void @peri_26m_dcxo() local_unnamed_addr #5 section ".tcm_code"

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @__io_putchar(i32 noundef returned %0) local_unnamed_addr #10 !dbg !12094 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12098, metadata !DIExpression()), !dbg !12099
  ret i32 %0, !dbg !12100
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local i32 @main() local_unnamed_addr #19 !dbg !12101 {
  tail call fastcc void @SystemClock_Config() #21, !dbg !12102
  tail call void @SystemCoreClockUpdate() #20, !dbg !12103
  tail call fastcc void @prvSetupHardware() #21, !dbg !12104
  tail call void asm sideeffect "cpsie i", "~{memory}"() #22, !dbg !12105, !srcloc !12108
  tail call void asm sideeffect "cpsie f", "~{memory}"() #22, !dbg !12109, !srcloc !12112
  tail call fastcc void @uart_loopback_data_dma_example() #21, !dbg !12113
  unreachable, !dbg !12114
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @SystemClock_Config() unnamed_addr #0 !dbg !12115 {
  %1 = tail call i32 @hal_clock_init() #20, !dbg !12116
  ret void, !dbg !12117
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvSetupHardware() unnamed_addr #0 !dbg !12118 {
  %1 = tail call i32 @hal_flash_init() #20, !dbg !12119
  %2 = tail call i32 @hal_nvic_init() #20, !dbg !12120
  ret void, !dbg !12121
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @uart_loopback_data_dma_example() unnamed_addr #19 !dbg !12122 {
  %1 = alloca %struct.hal_uart_config_t, align 4
  %2 = alloca %struct.hal_uart_dma_config_t, align 4
  %3 = alloca [256 x i8], align 1
  %4 = bitcast %struct.hal_uart_config_t* %1 to i8*, !dbg !12145
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #22, !dbg !12145
  call void @llvm.dbg.declare(metadata %struct.hal_uart_config_t* %1, metadata !12124, metadata !DIExpression()), !dbg !12146
  %5 = bitcast %struct.hal_uart_dma_config_t* %2 to i8*, !dbg !12147
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %5) #22, !dbg !12147
  call void @llvm.dbg.declare(metadata %struct.hal_uart_dma_config_t* %2, metadata !12132, metadata !DIExpression()), !dbg !12148
  %6 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i32 0, i32 0, !dbg !12149
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %6) #22, !dbg !12149
  call void @llvm.dbg.declare(metadata [256 x i8]* %3, metadata !12143, metadata !DIExpression()), !dbg !12150
  %7 = tail call i32 @hal_gpio_init(i32 noundef 0) #20, !dbg !12151
  %8 = tail call i32 @hal_gpio_init(i32 noundef 1) #20, !dbg !12152
  %9 = tail call i32 @hal_pinmux_set_function(i32 noundef 0, i8 noundef zeroext 3) #20, !dbg !12153
  %10 = tail call i32 @hal_pinmux_set_function(i32 noundef 1, i8 noundef zeroext 3) #20, !dbg !12154
  %11 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 0, !dbg !12155
  store i32 9, i32* %11, align 4, !dbg !12156
  %12 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 3, !dbg !12157
  store i32 0, i32* %12, align 4, !dbg !12158
  %13 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 2, !dbg !12159
  store i32 0, i32* %13, align 4, !dbg !12160
  %14 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 1, !dbg !12161
  store i32 3, i32* %14, align 4, !dbg !12162
  %15 = call i32 @hal_uart_init(i32 noundef 2, %struct.hal_uart_config_t* noundef nonnull %1) #20, !dbg !12163
  %16 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %2, i32 0, i32 6, !dbg !12164
  store i32 30, i32* %16, align 4, !dbg !12165
  %17 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %2, i32 0, i32 3, !dbg !12166
  store i8* getelementptr inbounds ([256 x i8], [256 x i8]* @g_uart_receive_buffer, i32 0, i32 0), i8** %17, align 4, !dbg !12167
  %18 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %2, i32 0, i32 4, !dbg !12168
  store i32 256, i32* %18, align 4, !dbg !12169
  %19 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %2, i32 0, i32 5, !dbg !12170
  store i32 150, i32* %19, align 4, !dbg !12171
  %20 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %2, i32 0, i32 0, !dbg !12172
  store i8* getelementptr inbounds ([256 x i8], [256 x i8]* @g_uart_send_buffer, i32 0, i32 0), i8** %20, align 4, !dbg !12173
  %21 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %2, i32 0, i32 1, !dbg !12174
  store i32 256, i32* %21, align 4, !dbg !12175
  %22 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %2, i32 0, i32 2, !dbg !12176
  store i32 50, i32* %22, align 4, !dbg !12177
  %23 = call i32 @hal_uart_set_dma(i32 noundef 2, %struct.hal_uart_dma_config_t* noundef nonnull %2) #20, !dbg !12178
  %24 = call i32 @hal_uart_register_callback(i32 noundef 2, void (i32, i8*)* noundef nonnull @uart_read_from_input, i8* noundef null) #20, !dbg !12179
  %25 = call i32 @hal_uart_send_dma(i32 noundef 2, i8* noundef getelementptr inbounds ([65 x i8], [65 x i8]* @.str.155, i32 0, i32 0), i32 noundef 65) #20, !dbg !12180
  br label %26, !dbg !12181

26:                                               ; preds = %33, %0
  %27 = load volatile i8, i8* @g_uart_receive_event, align 1, !dbg !12182, !range !2809
  %28 = icmp eq i8 %27, 0, !dbg !12182
  br i1 %28, label %33, label %29, !dbg !12185

29:                                               ; preds = %26
  %30 = call i32 @hal_uart_get_available_receive_bytes(i32 noundef 2) #20, !dbg !12186
  call void @llvm.dbg.value(metadata i32 %30, metadata !12144, metadata !DIExpression()), !dbg !12188
  %31 = call i32 @hal_uart_receive_dma(i32 noundef 2, i8* noundef nonnull %6, i32 noundef %30) #20, !dbg !12189
  %32 = call i32 @hal_uart_send_dma(i32 noundef 2, i8* noundef nonnull %6, i32 noundef %30) #20, !dbg !12190
  store volatile i8 0, i8* @g_uart_receive_event, align 1, !dbg !12191
  br label %33, !dbg !12192

33:                                               ; preds = %29, %26
  br label %26, !dbg !12182, !llvm.loop !12193
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal void @uart_read_from_input(i32 noundef %0, i8* nocapture noundef readnone %1) #2 !dbg !12195 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12197, metadata !DIExpression()), !dbg !12199
  call void @llvm.dbg.value(metadata i8* %1, metadata !12198, metadata !DIExpression()), !dbg !12199
  %3 = icmp eq i32 %0, 1, !dbg !12200
  br i1 %3, label %4, label %5, !dbg !12202

4:                                                ; preds = %2
  store volatile i8 1, i8* @g_uart_receive_event, align 1, !dbg !12203
  br label %5, !dbg !12205

5:                                                ; preds = %4, %2
  ret void, !dbg !12206
}

; Function Attrs: optsize
declare dso_local i32 @hal_clock_init() local_unnamed_addr #5

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_close(i32 noundef %0) local_unnamed_addr #10 !dbg !12207 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12209, metadata !DIExpression()), !dbg !12210
  ret i32 0, !dbg !12211
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_fstat(i32 noundef %0, %struct.stat* nocapture noundef readnone %1) local_unnamed_addr #10 !dbg !12212 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12262, metadata !DIExpression()), !dbg !12264
  call void @llvm.dbg.value(metadata %struct.stat* %1, metadata !12263, metadata !DIExpression()), !dbg !12264
  ret i32 0, !dbg !12265
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_isatty(i32 noundef %0) local_unnamed_addr #10 !dbg !12266 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12268, metadata !DIExpression()), !dbg !12269
  ret i32 1, !dbg !12270
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_lseek(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #10 !dbg !12271 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12275, metadata !DIExpression()), !dbg !12278
  call void @llvm.dbg.value(metadata i32 %1, metadata !12276, metadata !DIExpression()), !dbg !12278
  call void @llvm.dbg.value(metadata i32 %2, metadata !12277, metadata !DIExpression()), !dbg !12278
  ret i32 0, !dbg !12279
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_open(i8* nocapture noundef readnone %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #10 !dbg !12280 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12284, metadata !DIExpression()), !dbg !12287
  call void @llvm.dbg.value(metadata i32 %1, metadata !12285, metadata !DIExpression()), !dbg !12287
  call void @llvm.dbg.value(metadata i32 %2, metadata !12286, metadata !DIExpression()), !dbg !12287
  ret i32 -1, !dbg !12288
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_read(i32 noundef %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #10 !dbg !12289 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12293, metadata !DIExpression()), !dbg !12296
  call void @llvm.dbg.value(metadata i8* %1, metadata !12294, metadata !DIExpression()), !dbg !12296
  call void @llvm.dbg.value(metadata i32 %2, metadata !12295, metadata !DIExpression()), !dbg !12296
  ret i32 0, !dbg !12297
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_getpid() local_unnamed_addr #10 !dbg !12298 {
  ret i32 1, !dbg !12299
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_kill(i32 noundef %0, i32 noundef %1) local_unnamed_addr #10 !dbg !12300 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12304, metadata !DIExpression()), !dbg !12306
  call void @llvm.dbg.value(metadata i32 %1, metadata !12305, metadata !DIExpression()), !dbg !12306
  ret i32 -1, !dbg !12307
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_exit(i32 noundef %0) local_unnamed_addr #10 !dbg !12308 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12310, metadata !DIExpression()), !dbg !12311
  ret i32 -1, !dbg !12312
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @_sbrk_r(%struct._reent* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #0 !dbg !2381 {
  call void @llvm.dbg.value(metadata %struct._reent* %0, metadata !2579, metadata !DIExpression()), !dbg !12313
  call void @llvm.dbg.value(metadata i32 %1, metadata !2580, metadata !DIExpression()), !dbg !12313
  %3 = tail call i8* asm sideeffect "MRS $0, msp\0A", "=r"() #22, !dbg !12314, !srcloc !12315
  call void @llvm.dbg.value(metadata i8* %3, metadata !2582, metadata !DIExpression()), !dbg !12313
  %4 = load i8*, i8** @_sbrk_r.heap_end, align 4, !dbg !12316
  %5 = icmp eq i8* %4, null, !dbg !12318
  %6 = select i1 %5, i8* @end, i8* %4, !dbg !12319
  call void @llvm.dbg.value(metadata i8* %6, metadata !2581, metadata !DIExpression()), !dbg !12313
  %7 = getelementptr inbounds i8, i8* %6, i32 %1, !dbg !12320
  %8 = icmp ult i8* %3, %7, !dbg !12322
  %9 = xor i1 %8, true, !dbg !12323
  %10 = or i1 %5, %9, !dbg !12323
  br i1 %10, label %11, label %13, !dbg !12323

11:                                               ; preds = %2
  %12 = select i1 %8, i8* %6, i8* %7, !dbg !12324
  store i8* %12, i8** @_sbrk_r.heap_end, align 4, !dbg !12323
  br label %13, !dbg !12323

13:                                               ; preds = %2, %11
  %14 = select i1 %8, i8* inttoptr (i32 -1 to i8*), i8* %6, !dbg !12324
  ret i8* %14, !dbg !12323
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @_write(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef returned %2) local_unnamed_addr #0 !dbg !12325 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12327, metadata !DIExpression()), !dbg !12331
  call void @llvm.dbg.value(metadata i8* %1, metadata !12328, metadata !DIExpression()), !dbg !12331
  call void @llvm.dbg.value(metadata i32 %2, metadata !12329, metadata !DIExpression()), !dbg !12331
  call void @llvm.dbg.value(metadata i32 0, metadata !12330, metadata !DIExpression()), !dbg !12331
  %4 = icmp sgt i32 %2, 0, !dbg !12332
  br i1 %4, label %5, label %14, !dbg !12335

5:                                                ; preds = %3, %5
  %6 = phi i32 [ %12, %5 ], [ 0, %3 ]
  %7 = phi i8* [ %8, %5 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !12330, metadata !DIExpression()), !dbg !12331
  call void @llvm.dbg.value(metadata i8* %7, metadata !12328, metadata !DIExpression()), !dbg !12331
  %8 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !12336
  call void @llvm.dbg.value(metadata i8* %8, metadata !12328, metadata !DIExpression()), !dbg !12331
  %9 = load i8, i8* %7, align 1, !dbg !12338
  %10 = zext i8 %9 to i32, !dbg !12338
  %11 = tail call i32 @__io_putchar(i32 noundef %10) #20, !dbg !12339
  %12 = add nuw nsw i32 %6, 1, !dbg !12340
  call void @llvm.dbg.value(metadata i32 %12, metadata !12330, metadata !DIExpression()), !dbg !12331
  %13 = icmp eq i32 %12, %2, !dbg !12332
  br i1 %13, label %14, label %5, !dbg !12335, !llvm.loop !12341

14:                                               ; preds = %5, %3
  ret i32 %2, !dbg !12343
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @SysTick_Set(i32 noundef %0) local_unnamed_addr #2 !dbg !12344 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12346, metadata !DIExpression()), !dbg !12348
  %2 = add i32 %0, -1, !dbg !12349
  %3 = icmp ugt i32 %2, 16777215, !dbg !12351
  br i1 %3, label %8, label %4, !dbg !12352

4:                                                ; preds = %1
  %5 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12353
  call void @llvm.dbg.value(metadata i32 %5, metadata !12347, metadata !DIExpression()), !dbg !12348
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12354
  %7 = and i32 %6, -4, !dbg !12354
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12354
  store volatile i32 %2, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !12355
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12356
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12357
  br label %8, !dbg !12358

8:                                                ; preds = %1, %4
  %9 = phi i32 [ 0, %4 ], [ 1, %1 ], !dbg !12348
  ret i32 %9, !dbg !12359
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SysInitStatus_Set() local_unnamed_addr #2 !dbg !12360 {
  store volatile i32 1, i32* @System_Initialize_Done, align 4, !dbg !12361
  ret void, !dbg !12362
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @SysInitStatus_Query() local_unnamed_addr #11 !dbg !12363 {
  %1 = load volatile i32, i32* @System_Initialize_Done, align 4, !dbg !12364
  ret i32 %1, !dbg !12365
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #11 !dbg !12366 {
  %1 = load volatile i32, i32* inttoptr (i32 -1576992508 to i32*), align 4, !dbg !12369
  %2 = lshr i32 %1, 3, !dbg !12370
  %3 = and i32 %2, 15, !dbg !12370
  call void @llvm.dbg.value(metadata i32 %3, metadata !12368, metadata !DIExpression()), !dbg !12371
  switch i32 %3, label %6 [
    i32 8, label %5
    i32 6, label %5
    i32 2, label %4
    i32 3, label %4
    i32 4, label %4
    i32 5, label %9
    i32 7, label %9
  ], !dbg !12372

4:                                                ; preds = %0, %0, %0
  br label %6, !dbg !12373

5:                                                ; preds = %0, %0
  br label %9, !dbg !12375

6:                                                ; preds = %0, %4
  %7 = phi i32 [ 104000000, %4 ], [ 26000000, %0 ]
  store i32 %7, i32* @SystemCoreClock, align 4, !dbg !12376
  %8 = load volatile i32, i32* inttoptr (i32 -1576665024 to i32*), align 64, !dbg !12377
  br label %15, !dbg !12379

9:                                                ; preds = %0, %0, %5
  %10 = phi i32 [ 156000000, %5 ], [ 208000000, %0 ], [ 208000000, %0 ]
  store i32 %10, i32* @SystemCoreClock, align 4, !dbg !12376
  %11 = load volatile i32, i32* inttoptr (i32 -1576665024 to i32*), align 64, !dbg !12377
  %12 = and i32 %11, 1024, !dbg !12380
  %13 = icmp eq i32 %12, 0, !dbg !12380
  br i1 %13, label %15, label %14, !dbg !12379

14:                                               ; preds = %9
  store i32 104000000, i32* @SystemCoreClock, align 4, !dbg !12381
  br label %15, !dbg !12383

15:                                               ; preds = %6, %14, %9
  ret void, !dbg !12384
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SystemInit() local_unnamed_addr #2 !dbg !12385 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !12386
  %2 = or i32 %1, 15728640, !dbg !12386
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !12386
  store volatile i32 0, i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !12387
  %3 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !12388
  %4 = or i32 %3, 458752, !dbg !12388
  store volatile i32 %4, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !12388
  ret void, !dbg !12389
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @CachePreInit() local_unnamed_addr #2 !dbg !12390 {
  store volatile i32 0, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !12391
  store volatile i32 19, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !12392
  store volatile i32 3, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !12393
  store volatile i32 134283520, i32* inttoptr (i32 -1601634304 to i32*), align 65536, !dbg !12394
  store volatile i32 138280960, i32* inttoptr (i32 -1601634240 to i32*), align 64, !dbg !12395
  store volatile i32 1, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !12396
  store volatile i32 781, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !12397
  ret void, !dbg !12398
}

attributes #0 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #1 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #2 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #3 = { noreturn optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #5 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #6 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #7 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #8 = { argmemonly nofree nosync nounwind willreturn }
attributes #9 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #10 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #11 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #12 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #13 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #14 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #15 = { argmemonly nofree nounwind willreturn writeonly }
attributes #16 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #17 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #18 = { nofree nosync nounwind willreturn }
attributes #19 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #20 = { nobuiltin nounwind optsize "no-builtins" }
attributes #21 = { nobuiltin optsize "no-builtins" }
attributes #22 = { nounwind }
attributes #23 = { nobuiltin noreturn nounwind optsize "no-builtins" }

!llvm.dbg.cu = !{!2, !2707, !94, !345, !591, !867, !2733, !990, !1078, !2737, !1166, !1265, !1590, !2783, !1677, !1688, !2046, !2107, !2785, !2187, !2353, !2365, !2574, !2585, !2695}
!llvm.ident = !{!2787, !2787, !2787, !2787, !2787, !2787, !2787, !2787, !2787, !2787, !2787, !2787, !2787, !2787, !2787, !2787, !2787, !2787, !2787, !2787, !2787, !2787, !2787, !2787, !2787}
!llvm.module.flags = !{!2788, !2789, !2790, !2791, !2792, !2793, !2794, !2795, !2796}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "g_cache_status", scope: !2, file: !3, line: 51, type: !90, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !53, globals: !89, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_cache.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/uart_loopback_data_dma/GCC")
!4 = !{!5, !17, !37, !44}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 163, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "../../../../../driver/chip/inc/hal_cache.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/uart_loopback_data_dma/GCC")
!7 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16}
!9 = !DIEnumerator(name: "HAL_CACHE_STATUS_INVALID_PARAMETER", value: -7)
!10 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_BUSY", value: -6)
!11 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_CACHE_SIZE", value: -5)
!12 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_REGION", value: -4)
!13 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_REGION_ADDRESS", value: -3)
!14 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_REGION_SIZE", value: -2)
!15 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR", value: -1)
!16 = !DIEnumerator(name: "HAL_CACHE_STATUS_OK", value: 0)
!17 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 186, baseType: !18, size: 32, elements: !19)
!18 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!19 = !{!20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36}
!20 = !DIEnumerator(name: "HAL_CACHE_REGION_0", value: 0)
!21 = !DIEnumerator(name: "HAL_CACHE_REGION_1", value: 1)
!22 = !DIEnumerator(name: "HAL_CACHE_REGION_2", value: 2)
!23 = !DIEnumerator(name: "HAL_CACHE_REGION_3", value: 3)
!24 = !DIEnumerator(name: "HAL_CACHE_REGION_4", value: 4)
!25 = !DIEnumerator(name: "HAL_CACHE_REGION_5", value: 5)
!26 = !DIEnumerator(name: "HAL_CACHE_REGION_6", value: 6)
!27 = !DIEnumerator(name: "HAL_CACHE_REGION_7", value: 7)
!28 = !DIEnumerator(name: "HAL_CACHE_REGION_8", value: 8)
!29 = !DIEnumerator(name: "HAL_CACHE_REGION_9", value: 9)
!30 = !DIEnumerator(name: "HAL_CACHE_REGION_10", value: 10)
!31 = !DIEnumerator(name: "HAL_CACHE_REGION_11", value: 11)
!32 = !DIEnumerator(name: "HAL_CACHE_REGION_12", value: 12)
!33 = !DIEnumerator(name: "HAL_CACHE_REGION_13", value: 13)
!34 = !DIEnumerator(name: "HAL_CACHE_REGION_14", value: 14)
!35 = !DIEnumerator(name: "HAL_CACHE_REGION_15", value: 15)
!36 = !DIEnumerator(name: "HAL_CACHE_REGION_MAX", value: 16)
!37 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 176, baseType: !18, size: 32, elements: !38)
!38 = !{!39, !40, !41, !42, !43}
!39 = !DIEnumerator(name: "HAL_CACHE_SIZE_0KB", value: 0)
!40 = !DIEnumerator(name: "HAL_CACHE_SIZE_8KB", value: 1)
!41 = !DIEnumerator(name: "HAL_CACHE_SIZE_16KB", value: 2)
!42 = !DIEnumerator(name: "HAL_CACHE_SIZE_32KB", value: 3)
!43 = !DIEnumerator(name: "HAL_CACHE_SIZE_MAX", value: 4)
!44 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !45, line: 98, baseType: !18, size: 32, elements: !46)
!45 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_cache_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/uart_loopback_data_dma/GCC")
!46 = !{!47, !48, !49, !50, !51, !52}
!47 = !DIEnumerator(name: "CACHE_INVALIDATE_ALL_LINES", value: 1)
!48 = !DIEnumerator(name: "CACHE_INVALIDATE_ONE_LINE_BY_ADDRESS", value: 2)
!49 = !DIEnumerator(name: "CACHE_INVALIDATE_ONE_LINE_BY_SET_WAY", value: 4)
!50 = !DIEnumerator(name: "CACHE_FLUSH_ALL_LINES", value: 9)
!51 = !DIEnumerator(name: "CACHE_FLUSH_ONE_LINE_BY_ADDRESS", value: 10)
!52 = !DIEnumerator(name: "CACHE_FLUSH_ONE_LINE_BY_SET_WAY", value: 12)
!53 = !{!54, !88}
!54 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !55, size: 32)
!55 = !DIDerivedType(tag: DW_TAG_typedef, name: "CACHE_REGISTER_T", file: !56, line: 276, baseType: !57)
!56 = !DIFile(filename: "../../../../../driver/CMSIS/Device/MTK/mt2523/Include/mt2523.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/uart_loopback_data_dma/GCC")
!57 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 260, size: 525312, elements: !58)
!58 = !{!59, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !78, !79, !83, !87}
!59 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CON", scope: !57, file: !56, line: 261, baseType: !60, size: 32)
!60 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !61)
!61 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !62, line: 48, baseType: !63)
!62 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_stdint.h", directory: "/home/mjshen/RTOSExploration")
!63 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !64, line: 79, baseType: !18)
!64 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/machine/_default_types.h", directory: "/home/mjshen/RTOSExploration")
!65 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_OP", scope: !57, file: !56, line: 262, baseType: !60, size: 32, offset: 32)
!66 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0L", scope: !57, file: !56, line: 263, baseType: !60, size: 32, offset: 64)
!67 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0U", scope: !57, file: !56, line: 264, baseType: !60, size: 32, offset: 96)
!68 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0L", scope: !57, file: !56, line: 265, baseType: !60, size: 32, offset: 128)
!69 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0U", scope: !57, file: !56, line: 266, baseType: !60, size: 32, offset: 160)
!70 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1L", scope: !57, file: !56, line: 267, baseType: !60, size: 32, offset: 192)
!71 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1U", scope: !57, file: !56, line: 268, baseType: !60, size: 32, offset: 224)
!72 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1L", scope: !57, file: !56, line: 269, baseType: !60, size: 32, offset: 256)
!73 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1U", scope: !57, file: !56, line: 270, baseType: !60, size: 32, offset: 288)
!74 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !57, file: !56, line: 271, baseType: !75, size: 32, offset: 320)
!75 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 32, elements: !76)
!76 = !{!77}
!77 = !DISubrange(count: 1)
!78 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_REGION_EN", scope: !57, file: !56, line: 272, baseType: !60, size: 32, offset: 352)
!79 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !57, file: !56, line: 273, baseType: !80, size: 523904, offset: 384)
!80 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 523904, elements: !81)
!81 = !{!82}
!82 = !DISubrange(count: 16372)
!83 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_ENTRY_N", scope: !57, file: !56, line: 274, baseType: !84, size: 512, offset: 524288)
!84 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 512, elements: !85)
!85 = !{!86}
!86 = !DISubrange(count: 16)
!87 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_END_ENTRY_N", scope: !57, file: !56, line: 275, baseType: !84, size: 512, offset: 524800)
!88 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!89 = !{!0}
!90 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !91)
!91 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!92 = !DIGlobalVariableExpression(var: !93, expr: !DIExpression())
!93 = distinct !DIGlobalVariable(name: "gp_gpt", scope: !94, file: !95, line: 48, type: !341, isLocal: false, isDefinition: true)
!94 = distinct !DICompileUnit(language: DW_LANG_C99, file: !95, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !96, retainedTypes: !263, globals: !278, splitDebugInlining: false, nameTableKind: None)
!95 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_gpt_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/uart_loopback_data_dma/GCC")
!96 = !{!97, !157, !162, !168, !245, !254, !259}
!97 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 1170, baseType: !18, size: 32, elements: !99)
!98 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_platform.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/uart_loopback_data_dma/GCC")
!99 = !{!100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156}
!100 = !DIEnumerator(name: "HAL_CLOCK_CG_BT_26M", value: 9)
!101 = !DIEnumerator(name: "HAL_CLOCK_CG_CAMINF48M", value: 10)
!102 = !DIEnumerator(name: "HAL_CLOCK_CG_BT_BUSCK", value: 13)
!103 = !DIEnumerator(name: "HAL_CLOCK_CG_BT_N9", value: 15)
!104 = !DIEnumerator(name: "HAL_CLOCK_CG_BUS", value: 20)
!105 = !DIEnumerator(name: "HAL_CLOCK_CG_CM", value: 21)
!106 = !DIEnumerator(name: "HAL_CLOCK_CG_BSI", value: 23)
!107 = !DIEnumerator(name: "HAL_CLOCK_CG_SEJ", value: 32)
!108 = !DIEnumerator(name: "HAL_CLOCK_CG_DMA", value: 33)
!109 = !DIEnumerator(name: "HAL_CLOCK_CG_USB48M", value: 34)
!110 = !DIEnumerator(name: "HAL_CLOCK_CG_MSDC0", value: 35)
!111 = !DIEnumerator(name: "HAL_CLOCK_CG_I2C_D2D", value: 38)
!112 = !DIEnumerator(name: "HAL_CLOCK_CG_I2C2", value: 39)
!113 = !DIEnumerator(name: "HAL_CLOCK_CG_CM4_OSTIMER", value: 42)
!114 = !DIEnumerator(name: "HAL_CLOCK_CG_DMA_AO", value: 44)
!115 = !DIEnumerator(name: "HAL_CLOCK_CG_UART0", value: 45)
!116 = !DIEnumerator(name: "HAL_CLOCK_CG_UART1", value: 46)
!117 = !DIEnumerator(name: "HAL_CLOCK_CG_UART2", value: 47)
!118 = !DIEnumerator(name: "HAL_CLOCK_CG_UART3", value: 48)
!119 = !DIEnumerator(name: "HAL_CLOCK_CG_SPISLV", value: 51)
!120 = !DIEnumerator(name: "HAL_CLOCK_CG_SPI0", value: 52)
!121 = !DIEnumerator(name: "HAL_CLOCK_CG_SPI1", value: 53)
!122 = !DIEnumerator(name: "HAL_CLOCK_CG_SPI2", value: 54)
!123 = !DIEnumerator(name: "HAL_CLOCK_CG_SPI3", value: 55)
!124 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM0", value: 64)
!125 = !DIEnumerator(name: "HAL_CLOCK_CG_BTIF", value: 65)
!126 = !DIEnumerator(name: "HAL_CLOCK_CG_GPTIMER", value: 66)
!127 = !DIEnumerator(name: "HAL_CLOCK_CG_GPCOUNTER", value: 67)
!128 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM1", value: 68)
!129 = !DIEnumerator(name: "HAL_CLOCK_CG_EFUSE", value: 70)
!130 = !DIEnumerator(name: "HAL_CLOCK_CG_LPM", value: 71)
!131 = !DIEnumerator(name: "HAL_CLOCK_CG_CM_SYSROM", value: 72)
!132 = !DIEnumerator(name: "HAL_CLOCK_CG_SFC", value: 73)
!133 = !DIEnumerator(name: "HAL_CLOCK_CG_MSDC1", value: 74)
!134 = !DIEnumerator(name: "HAL_CLOCK_CG_USB_DMA", value: 76)
!135 = !DIEnumerator(name: "HAL_CLOCK_CG_USB_BUS", value: 77)
!136 = !DIEnumerator(name: "HAL_CLOCK_CG_DISP_PWM", value: 78)
!137 = !DIEnumerator(name: "HAL_CLOCK_CG_TRNG", value: 80)
!138 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM2", value: 83)
!139 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM3", value: 84)
!140 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM4", value: 85)
!141 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM5", value: 86)
!142 = !DIEnumerator(name: "HAL_CLOCK_CG_LCD", value: 96)
!143 = !DIEnumerator(name: "HAL_CLOCK_CG_RESEIZER", value: 97)
!144 = !DIEnumerator(name: "HAL_CLOCK_CG_ROTDMA", value: 98)
!145 = !DIEnumerator(name: "HAL_CLOCK_CG_CAM_BCLK", value: 99)
!146 = !DIEnumerator(name: "HAL_CLOCK_CG_PAD2CAM", value: 100)
!147 = !DIEnumerator(name: "HAL_CLOCK_CG_G2D", value: 101)
!148 = !DIEnumerator(name: "HAL_CLOCK_CG_MM_COLOR", value: 102)
!149 = !DIEnumerator(name: "HAL_CLOCK_CG_AAL", value: 103)
!150 = !DIEnumerator(name: "HAL_CLOCK_CG_DSI0", value: 104)
!151 = !DIEnumerator(name: "HAL_CLOCK_CG_LCD_APB", value: 105)
!152 = !DIEnumerator(name: "HAL_CLOCK_CG_AUXADC", value: 130)
!153 = !DIEnumerator(name: "HAL_CLOCK_CG_GPDAC", value: 134)
!154 = !DIEnumerator(name: "HAL_CLOCK_CG_SENSOR_DMA", value: 136)
!155 = !DIEnumerator(name: "HAL_CLOCK_CG_I2C1", value: 137)
!156 = !DIEnumerator(name: "HAL_CLOCK_CG_I2C0", value: 138)
!157 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !158, line: 82, baseType: !18, size: 32, elements: !159)
!158 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_gpt_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/uart_loopback_data_dma/GCC")
!159 = !{!160, !161}
!160 = !DIEnumerator(name: "GPT_CLOCK_UNGATE", value: 0)
!161 = !DIEnumerator(name: "GPT_CLOCK_GATE", value: 64)
!162 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !158, line: 75, baseType: !18, size: 32, elements: !163)
!163 = !{!164, !165, !166, !167}
!164 = !DIEnumerator(name: "GPT_MODE_ONE_SHOT", value: 0)
!165 = !DIEnumerator(name: "GPT_MODE_REPEAT", value: 16)
!166 = !DIEnumerator(name: "GPT_MODE_KEEP_GO", value: 32)
!167 = !DIEnumerator(name: "GPT_MODE_FREE_RUN", value: 48)
!168 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "IRQn", file: !56, line: 44, baseType: !7, size: 32, elements: !169)
!169 = !{!170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244}
!170 = !DIEnumerator(name: "Reset_IRQn", value: -15)
!171 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!172 = !DIEnumerator(name: "HardFault_IRQn", value: -13)
!173 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!174 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!175 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!176 = !DIEnumerator(name: "SVC_IRQn", value: -5)
!177 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!178 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!179 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!180 = !DIEnumerator(name: "OSTimer_IRQn", value: 0)
!181 = !DIEnumerator(name: "Reserved1_IRQn", value: 1)
!182 = !DIEnumerator(name: "MD_TOPSM_IRQn", value: 2)
!183 = !DIEnumerator(name: "CM4_TOPSM_IRQn", value: 3)
!184 = !DIEnumerator(name: "Reserved2_IRQn", value: 4)
!185 = !DIEnumerator(name: "Reserved3_IRQn", value: 5)
!186 = !DIEnumerator(name: "Reserved4_IRQn", value: 6)
!187 = !DIEnumerator(name: "Reserved5_IRQn", value: 7)
!188 = !DIEnumerator(name: "ACCDET_IRQn", value: 8)
!189 = !DIEnumerator(name: "RTC_IRQn", value: 9)
!190 = !DIEnumerator(name: "KP_IRQn", value: 10)
!191 = !DIEnumerator(name: "GPTimer_IRQn", value: 11)
!192 = !DIEnumerator(name: "EINT_IRQn", value: 12)
!193 = !DIEnumerator(name: "LCD_IRQn", value: 13)
!194 = !DIEnumerator(name: "LCD_AAL_IRQn", value: 14)
!195 = !DIEnumerator(name: "DSI_IRQn", value: 15)
!196 = !DIEnumerator(name: "RESIZE_IRQn", value: 16)
!197 = !DIEnumerator(name: "G2D_IRQn", value: 17)
!198 = !DIEnumerator(name: "CAM_IRQn", value: 18)
!199 = !DIEnumerator(name: "ROT_DMA_IRQn", value: 19)
!200 = !DIEnumerator(name: "SCAM_IRQn", value: 20)
!201 = !DIEnumerator(name: "DMA_IRQn", value: 21)
!202 = !DIEnumerator(name: "DMA_AO_IRQn", value: 22)
!203 = !DIEnumerator(name: "I2C_DUAL_IRQn", value: 23)
!204 = !DIEnumerator(name: "I2C0_IRQn", value: 24)
!205 = !DIEnumerator(name: "I2C1_IRQn", value: 25)
!206 = !DIEnumerator(name: "I2C2_IRQn", value: 26)
!207 = !DIEnumerator(name: "Reserved6_IRQn", value: 27)
!208 = !DIEnumerator(name: "GPCounter_IRQn", value: 28)
!209 = !DIEnumerator(name: "UART0_IRQn", value: 29)
!210 = !DIEnumerator(name: "UART1_IRQn", value: 30)
!211 = !DIEnumerator(name: "UART2_IRQn", value: 31)
!212 = !DIEnumerator(name: "UART3_IRQn", value: 32)
!213 = !DIEnumerator(name: "USB20_IRQn", value: 33)
!214 = !DIEnumerator(name: "MSDC0_IRQn", value: 34)
!215 = !DIEnumerator(name: "MSDC1_IRQn", value: 35)
!216 = !DIEnumerator(name: "Reserved7_IRQn", value: 36)
!217 = !DIEnumerator(name: "Reserved8_IRQn", value: 37)
!218 = !DIEnumerator(name: "SF_IRQn", value: 38)
!219 = !DIEnumerator(name: "DSP22CPU_IRQn", value: 39)
!220 = !DIEnumerator(name: "SensorDMA_IRQn", value: 40)
!221 = !DIEnumerator(name: "RGU_IRQn", value: 41)
!222 = !DIEnumerator(name: "SPI_SLV_IRQn", value: 42)
!223 = !DIEnumerator(name: "SPI_MST0_IRQn", value: 43)
!224 = !DIEnumerator(name: "SPI_MST1_IRQn", value: 44)
!225 = !DIEnumerator(name: "SPI_MST2_IRQn", value: 45)
!226 = !DIEnumerator(name: "SPI_MST3_IRQn", value: 46)
!227 = !DIEnumerator(name: "TRNG_IRQn", value: 47)
!228 = !DIEnumerator(name: "BT_TIMCON_IRQn", value: 48)
!229 = !DIEnumerator(name: "BTIF_IRQn", value: 49)
!230 = !DIEnumerator(name: "Reserved9_IRQn", value: 50)
!231 = !DIEnumerator(name: "Reserved10_IRQn", value: 51)
!232 = !DIEnumerator(name: "LISR0_IRQn", value: 52)
!233 = !DIEnumerator(name: "LISR1_IRQn", value: 53)
!234 = !DIEnumerator(name: "LISR2_IRQn", value: 54)
!235 = !DIEnumerator(name: "LISR3_IRQn", value: 55)
!236 = !DIEnumerator(name: "PSI_RISE_IRQn", value: 56)
!237 = !DIEnumerator(name: "PSI_FALL_IRQn", value: 57)
!238 = !DIEnumerator(name: "Reserved11_IRQn", value: 58)
!239 = !DIEnumerator(name: "Reserved12_IRQn", value: 59)
!240 = !DIEnumerator(name: "Reserved13_IRQn", value: 60)
!241 = !DIEnumerator(name: "Reserved14_IRQn", value: 61)
!242 = !DIEnumerator(name: "Reserved15_IRQn", value: 62)
!243 = !DIEnumerator(name: "Reserved16_IRQn", value: 63)
!244 = !DIEnumerator(name: "IRQ_NUMBER_MAX", value: 64)
!245 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 846, baseType: !18, size: 32, elements: !246)
!246 = !{!247, !248, !249, !250, !251, !252, !253}
!247 = !DIEnumerator(name: "HAL_GPT_0", value: 0)
!248 = !DIEnumerator(name: "HAL_GPT_1", value: 1)
!249 = !DIEnumerator(name: "HAL_GPT_2", value: 2)
!250 = !DIEnumerator(name: "HAL_GPT_3", value: 3)
!251 = !DIEnumerator(name: "HAL_GPT_4", value: 4)
!252 = !DIEnumerator(name: "HAL_GPT_5", value: 5)
!253 = !DIEnumerator(name: "HAL_GPT_MAX_PORT", value: 6)
!254 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !255, line: 380, baseType: !18, size: 32, elements: !256)
!255 = !DIFile(filename: "../../../../../driver/chip/inc/hal_gpt.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/uart_loopback_data_dma/GCC")
!256 = !{!257, !258}
!257 = !DIEnumerator(name: "HAL_GPT_TIMER_TYPE_ONE_SHOT", value: 0)
!258 = !DIEnumerator(name: "HAL_GPT_TIMER_TYPE_REPEAT", value: 1)
!259 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !255, line: 397, baseType: !18, size: 32, elements: !260)
!260 = !{!261, !262}
!261 = !DIEnumerator(name: "HAL_GPT_STOPPED", value: 0)
!262 = !DIEnumerator(name: "HAL_GPT_RUNNING", value: 1)
!263 = !{!61, !264, !88}
!264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !265, size: 32)
!265 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPT_REGISTER_T", file: !56, line: 1272, baseType: !266)
!266 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1262, size: 288, elements: !267)
!267 = !{!268, !269, !270, !271, !273, !274, !275, !276, !277}
!268 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_CON", scope: !266, file: !56, line: 1263, baseType: !60, size: 32)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_CLK", scope: !266, file: !56, line: 1264, baseType: !60, size: 32, offset: 32)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQ_EN", scope: !266, file: !56, line: 1265, baseType: !60, size: 32, offset: 64)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQ_STA", scope: !266, file: !56, line: 1266, baseType: !272, size: 32, offset: 96)
!272 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !60)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQ_ACK", scope: !266, file: !56, line: 1267, baseType: !60, size: 32, offset: 128)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_COUNT", scope: !266, file: !56, line: 1268, baseType: !60, size: 32, offset: 160)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_COMPARE", scope: !266, file: !56, line: 1269, baseType: !60, size: 32, offset: 192)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_COUNTH", scope: !266, file: !56, line: 1270, baseType: !60, size: 32, offset: 224)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_COMPAREH", scope: !266, file: !56, line: 1271, baseType: !60, size: 32, offset: 256)
!278 = !{!92, !279, !288, !294, !316, !339}
!279 = !DIGlobalVariableExpression(var: !280, expr: !DIExpression())
!280 = distinct !DIGlobalVariable(name: "gp_gpt_glb", scope: !94, file: !95, line: 49, type: !281, isLocal: false, isDefinition: true)
!281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !282, size: 32)
!282 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPT_REGISTER_GLOABL_T", file: !56, line: 1260, baseType: !283)
!283 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1256, size: 96, elements: !284)
!284 = !{!285, !286, !287}
!285 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQSTA", scope: !283, file: !56, line: 1257, baseType: !272, size: 32)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQMSK0", scope: !283, file: !56, line: 1258, baseType: !60, size: 32, offset: 32)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQMSK1", scope: !283, file: !56, line: 1259, baseType: !60, size: 32, offset: 64)
!288 = !DIGlobalVariableExpression(var: !289, expr: !DIExpression())
!289 = distinct !DIGlobalVariable(name: "flag", scope: !290, file: !95, line: 88, type: !91, isLocal: true, isDefinition: true)
!290 = distinct !DISubprogram(name: "gpt_get_lfosc_clock", scope: !95, file: !95, line: 86, type: !291, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !293)
!291 = !DISubroutineType(types: !292)
!292 = !{null}
!293 = !{}
!294 = !DIGlobalVariableExpression(var: !295, expr: !DIExpression())
!295 = distinct !DIGlobalVariable(name: "g_gpt_context", scope: !94, file: !95, line: 51, type: !296, isLocal: false, isDefinition: true)
!296 = !DICompositeType(tag: DW_TAG_array_type, baseType: !297, size: 768, elements: !314)
!297 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpt_context_t", file: !158, line: 116, baseType: !298)
!298 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !158, line: 111, size: 128, elements: !299)
!299 = !{!300, !302, !312, !313}
!300 = !DIDerivedType(tag: DW_TAG_member, name: "running_status", scope: !298, file: !158, line: 112, baseType: !301, size: 32)
!301 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_running_status_t", file: !255, line: 400, baseType: !259)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "callback_context", scope: !298, file: !158, line: 113, baseType: !303, size: 64, offset: 32)
!303 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpt_callback_context_t", file: !158, line: 109, baseType: !304)
!304 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !158, line: 106, size: 64, elements: !305)
!305 = !{!306, !311}
!306 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !304, file: !158, line: 107, baseType: !307, size: 32)
!307 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_callback_t", file: !255, line: 371, baseType: !308)
!308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !309, size: 32)
!309 = !DISubroutineType(types: !310)
!310 = !{null, !88}
!311 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !304, file: !158, line: 108, baseType: !88, size: 32, offset: 32)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "has_initilized", scope: !298, file: !158, line: 114, baseType: !91, size: 8, offset: 96)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "is_gpt_locked_sleep", scope: !298, file: !158, line: 115, baseType: !91, size: 8, offset: 104)
!314 = !{!315}
!315 = !DISubrange(count: 6)
!316 = !DIGlobalVariableExpression(var: !317, expr: !DIExpression())
!317 = distinct !DIGlobalVariable(name: "gpt_sw_context", scope: !94, file: !95, line: 52, type: !318, isLocal: false, isDefinition: true)
!318 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpt_sw_context_t", file: !158, line: 134, baseType: !319)
!319 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !158, line: 125, size: 4256, elements: !320)
!320 = !{!321, !332, !333, !334, !335, !336, !337, !338}
!321 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !319, file: !158, line: 126, baseType: !322, size: 4096)
!322 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, size: 4096, elements: !330)
!323 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpt_sw_timer_t", file: !158, line: 123, baseType: !324)
!324 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !158, line: 118, size: 128, elements: !325)
!325 = !{!326, !327, !328, !329}
!326 = !DIDerivedType(tag: DW_TAG_member, name: "callback_context", scope: !324, file: !158, line: 119, baseType: !303, size: 64)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "time_out_ms", scope: !324, file: !158, line: 120, baseType: !61, size: 32, offset: 64)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "is_used", scope: !324, file: !158, line: 121, baseType: !91, size: 8, offset: 96)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "is_running", scope: !324, file: !158, line: 122, baseType: !91, size: 8, offset: 104)
!330 = !{!331}
!331 = !DISubrange(count: 32)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "absolute_time", scope: !319, file: !158, line: 127, baseType: !61, size: 32, offset: 4096)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "last_absolute_time", scope: !319, file: !158, line: 128, baseType: !61, size: 32, offset: 4128)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "used_timer_count", scope: !319, file: !158, line: 129, baseType: !61, size: 32, offset: 4160)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "running_timer_count", scope: !319, file: !158, line: 130, baseType: !61, size: 32, offset: 4192)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "is_first_init", scope: !319, file: !158, line: 131, baseType: !91, size: 8, offset: 4224)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "is_start_from_isr", scope: !319, file: !158, line: 132, baseType: !91, size: 8, offset: 4232)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "is_sw_gpt", scope: !319, file: !158, line: 133, baseType: !91, size: 8, offset: 4240)
!339 = !DIGlobalVariableExpression(var: !340, expr: !DIExpression())
!340 = distinct !DIGlobalVariable(name: "gpt_clock_source", scope: !94, file: !95, line: 53, type: !61, isLocal: false, isDefinition: true)
!341 = !DICompositeType(tag: DW_TAG_array_type, baseType: !264, size: 192, elements: !314)
!342 = !DIGlobalVariableExpression(var: !289, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!343 = !DIGlobalVariableExpression(var: !344, expr: !DIExpression())
!344 = distinct !DIGlobalVariable(name: "gdma", scope: !345, file: !346, line: 46, type: !574, isLocal: false, isDefinition: true)
!345 = distinct !DICompileUnit(language: DW_LANG_C99, file: !346, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !347, retainedTypes: !424, globals: !425, splitDebugInlining: false, nameTableKind: None)
!346 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_pdma_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/uart_loopback_data_dma/GCC")
!347 = !{!348, !353, !358, !97, !365, !371, !168, !381, !386, !392, !396, !400, !406, !420}
!348 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !349, line: 201, baseType: !7, size: 32, elements: !350)
!349 = !DIFile(filename: "../../../../../driver/chip/inc/hal_gdma.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/uart_loopback_data_dma/GCC")
!350 = !{!351, !352}
!351 = !DIEnumerator(name: "HAL_GDMA_EVENT_TRANSACTION_ERROR", value: -1)
!352 = !DIEnumerator(name: "HAL_GDMA_EVENT_TRANSACTION_SUCCESS", value: 0)
!353 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !354, line: 124, baseType: !18, size: 32, elements: !355)
!354 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_pdma_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/uart_loopback_data_dma/GCC")
!355 = !{!356, !357}
!356 = !DIEnumerator(name: "DMA_PD", value: 0)
!357 = !DIEnumerator(name: "DMA_AO", value: 1)
!358 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !359, line: 101, baseType: !7, size: 32, elements: !360)
!359 = !DIFile(filename: "../../../../../driver/chip/inc/hal_clock.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/uart_loopback_data_dma/GCC")
!360 = !{!361, !362, !363, !364}
!361 = !DIEnumerator(name: "HAL_CLOCK_STATUS_UNINITIALIZED", value: -3)
!362 = !DIEnumerator(name: "HAL_CLOCK_STATUS_INVALID_PARAMETER", value: -2)
!363 = !DIEnumerator(name: "HAL_CLOCK_STATUS_ERROR", value: -1)
!364 = !DIEnumerator(name: "HAL_CLOCK_STATUS_OK", value: 0)
!365 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !354, line: 166, baseType: !7, size: 32, elements: !366)
!366 = !{!367, !368, !369, !370}
!367 = !DIEnumerator(name: "PDMA_ERROR", value: -3)
!368 = !DIEnumerator(name: "PDMA_ERROR_CHANNEL", value: -2)
!369 = !DIEnumerator(name: "PDMA_INVALID_PARAMETER", value: -1)
!370 = !DIEnumerator(name: "PDMA_OK", value: 0)
!371 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !354, line: 137, baseType: !18, size: 32, elements: !372)
!372 = !{!373, !374, !375, !376, !377, !378, !379, !380}
!373 = !DIEnumerator(name: "PDMA_START_CHANNEL", value: 1)
!374 = !DIEnumerator(name: "PDMA_MSDC1", value: 1)
!375 = !DIEnumerator(name: "PDMA_MSDC2", value: 2)
!376 = !DIEnumerator(name: "PDMA_I2C0_TX", value: 3)
!377 = !DIEnumerator(name: "PDMA_I2C0_RX", value: 4)
!378 = !DIEnumerator(name: "PDMA_I2C1_TX", value: 5)
!379 = !DIEnumerator(name: "PDMA_I2C1_RX", value: 6)
!380 = !DIEnumerator(name: "PDMA_END_CHANNEL", value: 7)
!381 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !354, line: 151, baseType: !18, size: 32, elements: !382)
!382 = !{!383, !384, !385}
!383 = !DIEnumerator(name: "PDMA_BYTE", value: 0)
!384 = !DIEnumerator(name: "PDMA_HALF_WORD", value: 1)
!385 = !DIEnumerator(name: "PDMA_WORD", value: 2)
!386 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !354, line: 180, baseType: !18, size: 32, elements: !387)
!387 = !{!388, !389, !390, !391}
!388 = !DIEnumerator(name: "PDMA_TX", value: 0)
!389 = !DIEnumerator(name: "PDMA_RX", value: 1)
!390 = !DIEnumerator(name: "PDMA_TX_RINGBUFF", value: 2)
!391 = !DIEnumerator(name: "PDMA_RX_RINGBUFF", value: 3)
!392 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !354, line: 174, baseType: !18, size: 32, elements: !393)
!393 = !{!394, !395}
!394 = !DIEnumerator(name: "PDMA_IDLE", value: 0)
!395 = !DIEnumerator(name: "PDMA_BUSY", value: 1)
!396 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !354, line: 159, baseType: !7, size: 32, elements: !397)
!397 = !{!398, !399}
!398 = !DIEnumerator(name: "PDMA_EVENT_TRANSACTION_ERROR", value: -1)
!399 = !DIEnumerator(name: "PDMA_EVENT_TRANSACTION_SUCCESS", value: 0)
!400 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !354, line: 206, baseType: !7, size: 32, elements: !401)
!401 = !{!402, !403, !404, !405}
!402 = !DIEnumerator(name: "VDMA_ERROR", value: -3)
!403 = !DIEnumerator(name: "VDMA_ERROR_CHANNEL", value: -2)
!404 = !DIEnumerator(name: "VDMA_INVALID_PARAMETER", value: -1)
!405 = !DIEnumerator(name: "VDMA_OK", value: 0)
!406 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !354, line: 189, baseType: !18, size: 32, elements: !407)
!407 = !{!408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419}
!408 = !DIEnumerator(name: "VDMA_START_CHANNEL", value: 8)
!409 = !DIEnumerator(name: "VDMA_UART1TX", value: 8)
!410 = !DIEnumerator(name: "VDMA_UART1RX", value: 9)
!411 = !DIEnumerator(name: "VDMA_UART2TX", value: 10)
!412 = !DIEnumerator(name: "VDMA_UART2RX", value: 11)
!413 = !DIEnumerator(name: "VDMA_UART3TX", value: 12)
!414 = !DIEnumerator(name: "VDMA_UART3RX", value: 13)
!415 = !DIEnumerator(name: "VDMA_UART0TX", value: 14)
!416 = !DIEnumerator(name: "VDMA_UART0RX", value: 15)
!417 = !DIEnumerator(name: "VDMA_BTIFTX", value: 16)
!418 = !DIEnumerator(name: "VDMA_BTIFRX", value: 17)
!419 = !DIEnumerator(name: "VDMA_END_CHANNEL", value: 18)
!420 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !354, line: 222, baseType: !7, size: 32, elements: !421)
!421 = !{!422, !423}
!422 = !DIEnumerator(name: "VDMA_EVENT_TRANSACTION_ERROR", value: -1)
!423 = !DIEnumerator(name: "VDMA_EVENT_TRANSACTION_SUCCESS", value: 0)
!424 = !{!88}
!425 = !{!343, !426, !434, !452, !460, !466, !491, !499, !507, !510, !523, !547, !553, !561, !566}
!426 = !DIGlobalVariableExpression(var: !427, expr: !DIExpression())
!427 = distinct !DIGlobalVariable(name: "gdma_global", scope: !345, file: !346, line: 49, type: !428, isLocal: false, isDefinition: true)
!428 = !DICompositeType(tag: DW_TAG_array_type, baseType: !429, size: 32, elements: !76)
!429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !430, size: 32)
!430 = !DIDerivedType(tag: DW_TAG_typedef, name: "GDMA_REGISTER_GLOBAL_T", file: !56, line: 843, baseType: !431)
!431 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 841, size: 32, elements: !432)
!432 = !{!433}
!433 = !DIDerivedType(tag: DW_TAG_member, name: "GDMA_GLBSTA", scope: !431, file: !56, line: 842, baseType: !60, size: 32)
!434 = !DIGlobalVariableExpression(var: !435, expr: !DIExpression())
!435 = distinct !DIGlobalVariable(name: "pdma", scope: !345, file: !346, line: 52, type: !436, isLocal: false, isDefinition: true)
!436 = !DICompositeType(tag: DW_TAG_array_type, baseType: !437, size: 192, elements: !314)
!437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !438, size: 32)
!438 = !DIDerivedType(tag: DW_TAG_typedef, name: "PDMA_REGISTER_T", file: !56, line: 859, baseType: !439)
!439 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 848, size: 320, elements: !440)
!440 = !{!441, !442, !443, !444, !445, !446, !447, !448, !449, !451}
!441 = !DIDerivedType(tag: DW_TAG_member, name: "PDMA_WPPT", scope: !439, file: !56, line: 849, baseType: !60, size: 32)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "PDMA_WPTO", scope: !439, file: !56, line: 850, baseType: !60, size: 32, offset: 32)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "PDMA_COUNT", scope: !439, file: !56, line: 851, baseType: !60, size: 32, offset: 64)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "PDMA_CON", scope: !439, file: !56, line: 852, baseType: !60, size: 32, offset: 96)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "PDMA_START", scope: !439, file: !56, line: 853, baseType: !60, size: 32, offset: 128)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "PDMA_INTSTA", scope: !439, file: !56, line: 854, baseType: !60, size: 32, offset: 160)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "PDMA_ACKINT", scope: !439, file: !56, line: 855, baseType: !60, size: 32, offset: 192)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "PDMA_RLCT", scope: !439, file: !56, line: 856, baseType: !272, size: 32, offset: 224)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "DUMMY_OFFSET", scope: !439, file: !56, line: 857, baseType: !450, size: 32, offset: 256)
!450 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 32, elements: !76)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "PDMA_PGMADDR", scope: !439, file: !56, line: 858, baseType: !60, size: 32, offset: 288)
!452 = !DIGlobalVariableExpression(var: !453, expr: !DIExpression())
!453 = distinct !DIGlobalVariable(name: "pdma_global", scope: !345, file: !346, line: 55, type: !454, isLocal: false, isDefinition: true)
!454 = !DICompositeType(tag: DW_TAG_array_type, baseType: !455, size: 192, elements: !314)
!455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !456, size: 32)
!456 = !DIDerivedType(tag: DW_TAG_typedef, name: "PDMA_REGISTER_GLOBAL_T", file: !56, line: 865, baseType: !457)
!457 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 863, size: 32, elements: !458)
!458 = !{!459}
!459 = !DIDerivedType(tag: DW_TAG_member, name: "PDMA_GLBSTA", scope: !457, file: !56, line: 864, baseType: !60, size: 32)
!460 = !DIGlobalVariableExpression(var: !461, expr: !DIExpression())
!461 = distinct !DIGlobalVariable(name: "g_pdma_global_running_bit", scope: !345, file: !346, line: 58, type: !462, isLocal: false, isDefinition: true)
!462 = !DICompositeType(tag: DW_TAG_array_type, baseType: !463, size: 48, elements: !314)
!463 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !62, line: 24, baseType: !464)
!464 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint8_t", file: !64, line: 43, baseType: !465)
!465 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!466 = !DIGlobalVariableExpression(var: !467, expr: !DIExpression())
!467 = distinct !DIGlobalVariable(name: "vdma", scope: !345, file: !346, line: 64, type: !468, isLocal: false, isDefinition: true)
!468 = !DICompositeType(tag: DW_TAG_array_type, baseType: !469, size: 320, elements: !489)
!469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !470, size: 32)
!470 = !DIDerivedType(tag: DW_TAG_typedef, name: "VDMA_REGISTER_T", file: !56, line: 885, baseType: !471)
!471 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 870, size: 448, elements: !472)
!472 = !{!473, !474, !475, !476, !477, !478, !482, !483, !484, !485, !486, !487, !488}
!473 = !DIDerivedType(tag: DW_TAG_member, name: "VDMA_COUNT", scope: !471, file: !56, line: 871, baseType: !60, size: 32)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "VDMA_CON", scope: !471, file: !56, line: 872, baseType: !60, size: 32, offset: 32)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "VDMA_START", scope: !471, file: !56, line: 873, baseType: !60, size: 32, offset: 64)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "VDMA_INTSTA", scope: !471, file: !56, line: 874, baseType: !60, size: 32, offset: 96)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "VDMA_ACKINT", scope: !471, file: !56, line: 875, baseType: !60, size: 32, offset: 128)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "DUMMY_OFFSET", scope: !471, file: !56, line: 876, baseType: !479, size: 64, offset: 160)
!479 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 64, elements: !480)
!480 = !{!481}
!481 = !DISubrange(count: 2)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "VDMA_PGMADDR", scope: !471, file: !56, line: 877, baseType: !60, size: 32, offset: 224)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "VDMA_WRPTR", scope: !471, file: !56, line: 878, baseType: !272, size: 32, offset: 256)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "VDMA_RDPTR", scope: !471, file: !56, line: 879, baseType: !272, size: 32, offset: 288)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "VDMA_FFCNT", scope: !471, file: !56, line: 880, baseType: !272, size: 32, offset: 320)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "VDMA_FFSTA", scope: !471, file: !56, line: 881, baseType: !272, size: 32, offset: 352)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "VDMA_ALTLEN", scope: !471, file: !56, line: 882, baseType: !60, size: 32, offset: 384)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "VDMA_FFSIZE", scope: !471, file: !56, line: 883, baseType: !60, size: 32, offset: 416)
!489 = !{!490}
!490 = !DISubrange(count: 10)
!491 = !DIGlobalVariableExpression(var: !492, expr: !DIExpression())
!492 = distinct !DIGlobalVariable(name: "vdma_port", scope: !345, file: !346, line: 69, type: !493, isLocal: false, isDefinition: true)
!493 = !DICompositeType(tag: DW_TAG_array_type, baseType: !494, size: 320, elements: !489)
!494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !495, size: 32)
!495 = !DIDerivedType(tag: DW_TAG_typedef, name: "VDMA_REGISTER_PORT_T", file: !56, line: 891, baseType: !496)
!496 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 889, size: 32, elements: !497)
!497 = !{!498}
!498 = !DIDerivedType(tag: DW_TAG_member, name: "VDMA_PORT", scope: !496, file: !56, line: 890, baseType: !60, size: 32)
!499 = !DIGlobalVariableExpression(var: !500, expr: !DIExpression())
!500 = distinct !DIGlobalVariable(name: "vdma_global", scope: !345, file: !346, line: 75, type: !501, isLocal: false, isDefinition: true)
!501 = !DICompositeType(tag: DW_TAG_array_type, baseType: !502, size: 320, elements: !489)
!502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !503, size: 32)
!503 = !DIDerivedType(tag: DW_TAG_typedef, name: "VDMA_REGISTER_GLOBAL_T", file: !56, line: 898, baseType: !504)
!504 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 896, size: 32, elements: !505)
!505 = !{!506}
!506 = !DIDerivedType(tag: DW_TAG_member, name: "VDMA_GLBSTA", scope: !504, file: !56, line: 897, baseType: !60, size: 32)
!507 = !DIGlobalVariableExpression(var: !508, expr: !DIExpression())
!508 = distinct !DIGlobalVariable(name: "g_vdma_global_running_bit", scope: !345, file: !346, line: 80, type: !509, isLocal: false, isDefinition: true)
!509 = !DICompositeType(tag: DW_TAG_array_type, baseType: !463, size: 80, elements: !489)
!510 = !DIGlobalVariableExpression(var: !511, expr: !DIExpression())
!511 = distinct !DIGlobalVariable(name: "g_gdma_callback", scope: !345, file: !346, line: 92, type: !512, isLocal: false, isDefinition: true)
!512 = !DICompositeType(tag: DW_TAG_array_type, baseType: !513, size: 64, elements: !76)
!513 = !DIDerivedType(tag: DW_TAG_typedef, name: "gdma_user_callback_t", file: !346, line: 89, baseType: !514)
!514 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !346, line: 86, size: 64, elements: !515)
!515 = !{!516, !522}
!516 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !514, file: !346, line: 87, baseType: !517, size: 32)
!517 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gdma_callback_t", file: !349, line: 230, baseType: !518)
!518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !519, size: 32)
!519 = !DISubroutineType(types: !520)
!520 = !{null, !521, !88}
!521 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gdma_event_t", file: !349, line: 204, baseType: !348)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "argument", scope: !514, file: !346, line: 88, baseType: !88, size: 32, offset: 32)
!523 = !DIGlobalVariableExpression(var: !524, expr: !DIExpression())
!524 = distinct !DIGlobalVariable(name: "count", scope: !525, file: !346, line: 1122, type: !61, isLocal: true, isDefinition: true)
!525 = distinct !DISubprogram(name: "pd_domain_dma_interrupt_hander", scope: !346, file: !346, line: 1108, type: !526, scopeLine: 1110, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !530)
!526 = !DISubroutineType(types: !527)
!527 = !{null, !528}
!528 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_nvic_irq_t", file: !56, line: 125, baseType: !529)
!529 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !56, line: 123, baseType: !168)
!530 = !{!531, !532, !533, !534, !540, !546}
!531 = !DILocalVariable(name: "irq_number", arg: 1, scope: !525, file: !346, line: 1108, type: !528)
!532 = !DILocalVariable(name: "global_status", scope: !525, file: !346, line: 1113, type: !60)
!533 = !DILocalVariable(name: "gdma_callback", scope: !525, file: !346, line: 1116, type: !517)
!534 = !DILocalVariable(name: "pdma_callback", scope: !525, file: !346, line: 1117, type: !535)
!535 = !DIDerivedType(tag: DW_TAG_typedef, name: "pdma_callback_t", file: !354, line: 288, baseType: !536)
!536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !537, size: 32)
!537 = !DISubroutineType(types: !538)
!538 = !{null, !539, !88}
!539 = !DIDerivedType(tag: DW_TAG_typedef, name: "pdma_event_t", file: !354, line: 162, baseType: !396)
!540 = !DILocalVariable(name: "vdma_callback", scope: !525, file: !346, line: 1118, type: !541)
!541 = !DIDerivedType(tag: DW_TAG_typedef, name: "vdma_callback_t", file: !354, line: 291, baseType: !542)
!542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !543, size: 32)
!543 = !DISubroutineType(types: !544)
!544 = !{null, !545, !88}
!545 = !DIDerivedType(tag: DW_TAG_typedef, name: "vdma_event_t", file: !354, line: 225, baseType: !420)
!546 = !DILocalVariable(name: "argument", scope: !525, file: !346, line: 1119, type: !88)
!547 = !DIGlobalVariableExpression(var: !548, expr: !DIExpression())
!548 = distinct !DIGlobalVariable(name: "pdma_init_status", scope: !345, file: !346, line: 61, type: !549, isLocal: true, isDefinition: true)
!549 = !DICompositeType(tag: DW_TAG_array_type, baseType: !550, size: 56, elements: !551)
!550 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !463)
!551 = !{!552}
!552 = !DISubrange(count: 7)
!553 = !DIGlobalVariableExpression(var: !554, expr: !DIExpression())
!554 = distinct !DIGlobalVariable(name: "g_pdma_callback", scope: !345, file: !346, line: 104, type: !555, isLocal: true, isDefinition: true)
!555 = !DICompositeType(tag: DW_TAG_array_type, baseType: !556, size: 384, elements: !314)
!556 = !DIDerivedType(tag: DW_TAG_typedef, name: "pdma_user_callback_t", file: !346, line: 101, baseType: !557)
!557 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !346, line: 98, size: 64, elements: !558)
!558 = !{!559, !560}
!559 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !557, file: !346, line: 99, baseType: !535, size: 32)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "argument", scope: !557, file: !346, line: 100, baseType: !88, size: 32, offset: 32)
!561 = !DIGlobalVariableExpression(var: !562, expr: !DIExpression())
!562 = distinct !DIGlobalVariable(name: "vdma_init_status", scope: !345, file: !346, line: 83, type: !563, isLocal: true, isDefinition: true)
!563 = !DICompositeType(tag: DW_TAG_array_type, baseType: !550, size: 144, elements: !564)
!564 = !{!565}
!565 = !DISubrange(count: 18)
!566 = !DIGlobalVariableExpression(var: !567, expr: !DIExpression())
!567 = distinct !DIGlobalVariable(name: "g_vdma_callback", scope: !345, file: !346, line: 120, type: !568, isLocal: true, isDefinition: true)
!568 = !DICompositeType(tag: DW_TAG_array_type, baseType: !569, size: 640, elements: !489)
!569 = !DIDerivedType(tag: DW_TAG_typedef, name: "vdma_user_callback_t", file: !346, line: 117, baseType: !570)
!570 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !346, line: 114, size: 64, elements: !571)
!571 = !{!572, !573}
!572 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !570, file: !346, line: 115, baseType: !541, size: 32)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "argument", scope: !570, file: !346, line: 116, baseType: !88, size: 32, offset: 32)
!574 = !DICompositeType(tag: DW_TAG_array_type, baseType: !575, size: 32, elements: !76)
!575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !576, size: 32)
!576 = !DIDerivedType(tag: DW_TAG_typedef, name: "GDMA_REGISTER_T", file: !56, line: 837, baseType: !577)
!577 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 826, size: 320, elements: !578)
!578 = !{!579, !580, !581, !582, !583, !584, !585, !586, !587, !588}
!579 = !DIDerivedType(tag: DW_TAG_member, name: "GDMA_SRC", scope: !577, file: !56, line: 827, baseType: !60, size: 32)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "GDMA_DST", scope: !577, file: !56, line: 828, baseType: !60, size: 32, offset: 32)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "GDMA_WPPT", scope: !577, file: !56, line: 829, baseType: !60, size: 32, offset: 64)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "GDMA_WPTO", scope: !577, file: !56, line: 830, baseType: !60, size: 32, offset: 96)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "GDMA_COUNT", scope: !577, file: !56, line: 831, baseType: !60, size: 32, offset: 128)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "GDMA_CON", scope: !577, file: !56, line: 832, baseType: !60, size: 32, offset: 160)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "GDMA_START", scope: !577, file: !56, line: 833, baseType: !60, size: 32, offset: 192)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "GDMA_INTSTA", scope: !577, file: !56, line: 834, baseType: !60, size: 32, offset: 224)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "GDMA_ACKINT", scope: !577, file: !56, line: 835, baseType: !60, size: 32, offset: 256)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "GDMA_RLCT", scope: !577, file: !56, line: 836, baseType: !272, size: 32, offset: 288)
!589 = !DIGlobalVariableExpression(var: !590, expr: !DIExpression())
!590 = distinct !DIGlobalVariable(name: "gpio_register_base", scope: !591, file: !592, line: 64, type: !692, isLocal: false, isDefinition: true)
!591 = distinct !DICompileUnit(language: DW_LANG_C99, file: !592, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !593, retainedTypes: !687, globals: !691, splitDebugInlining: false, nameTableKind: None)
!592 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_gpio.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/uart_loopback_data_dma/GCC")
!593 = !{!594, !646, !653, !657, !663, !667, !676, !681}
!594 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 339, baseType: !18, size: 32, elements: !595)
!595 = !{!596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645}
!596 = !DIEnumerator(name: "HAL_GPIO_0", value: 0)
!597 = !DIEnumerator(name: "HAL_GPIO_1", value: 1)
!598 = !DIEnumerator(name: "HAL_GPIO_2", value: 2)
!599 = !DIEnumerator(name: "HAL_GPIO_3", value: 3)
!600 = !DIEnumerator(name: "HAL_GPIO_4", value: 4)
!601 = !DIEnumerator(name: "HAL_GPIO_5", value: 5)
!602 = !DIEnumerator(name: "HAL_GPIO_6", value: 6)
!603 = !DIEnumerator(name: "HAL_GPIO_7", value: 7)
!604 = !DIEnumerator(name: "HAL_GPIO_8", value: 8)
!605 = !DIEnumerator(name: "HAL_GPIO_9", value: 9)
!606 = !DIEnumerator(name: "HAL_GPIO_10", value: 10)
!607 = !DIEnumerator(name: "HAL_GPIO_11", value: 11)
!608 = !DIEnumerator(name: "HAL_GPIO_12", value: 12)
!609 = !DIEnumerator(name: "HAL_GPIO_13", value: 13)
!610 = !DIEnumerator(name: "HAL_GPIO_14", value: 14)
!611 = !DIEnumerator(name: "HAL_GPIO_15", value: 15)
!612 = !DIEnumerator(name: "HAL_GPIO_16", value: 16)
!613 = !DIEnumerator(name: "HAL_GPIO_17", value: 17)
!614 = !DIEnumerator(name: "HAL_GPIO_18", value: 18)
!615 = !DIEnumerator(name: "HAL_GPIO_19", value: 19)
!616 = !DIEnumerator(name: "HAL_GPIO_20", value: 20)
!617 = !DIEnumerator(name: "HAL_GPIO_21", value: 21)
!618 = !DIEnumerator(name: "HAL_GPIO_22", value: 22)
!619 = !DIEnumerator(name: "HAL_GPIO_23", value: 23)
!620 = !DIEnumerator(name: "HAL_GPIO_24", value: 24)
!621 = !DIEnumerator(name: "HAL_GPIO_25", value: 25)
!622 = !DIEnumerator(name: "HAL_GPIO_26", value: 26)
!623 = !DIEnumerator(name: "HAL_GPIO_27", value: 27)
!624 = !DIEnumerator(name: "HAL_GPIO_28", value: 28)
!625 = !DIEnumerator(name: "HAL_GPIO_29", value: 29)
!626 = !DIEnumerator(name: "HAL_GPIO_30", value: 30)
!627 = !DIEnumerator(name: "HAL_GPIO_31", value: 31)
!628 = !DIEnumerator(name: "HAL_GPIO_32", value: 32)
!629 = !DIEnumerator(name: "HAL_GPIO_33", value: 33)
!630 = !DIEnumerator(name: "HAL_GPIO_34", value: 34)
!631 = !DIEnumerator(name: "HAL_GPIO_35", value: 35)
!632 = !DIEnumerator(name: "HAL_GPIO_36", value: 36)
!633 = !DIEnumerator(name: "HAL_GPIO_37", value: 37)
!634 = !DIEnumerator(name: "HAL_GPIO_38", value: 38)
!635 = !DIEnumerator(name: "HAL_GPIO_39", value: 39)
!636 = !DIEnumerator(name: "HAL_GPIO_40", value: 40)
!637 = !DIEnumerator(name: "HAL_GPIO_41", value: 41)
!638 = !DIEnumerator(name: "HAL_GPIO_42", value: 42)
!639 = !DIEnumerator(name: "HAL_GPIO_43", value: 43)
!640 = !DIEnumerator(name: "HAL_GPIO_44", value: 44)
!641 = !DIEnumerator(name: "HAL_GPIO_45", value: 45)
!642 = !DIEnumerator(name: "HAL_GPIO_46", value: 46)
!643 = !DIEnumerator(name: "HAL_GPIO_47", value: 47)
!644 = !DIEnumerator(name: "HAL_GPIO_48", value: 48)
!645 = !DIEnumerator(name: "HAL_GPIO_MAX", value: 49)
!646 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !647, line: 224, baseType: !7, size: 32, elements: !648)
!647 = !DIFile(filename: "../../../../../driver/chip/inc/hal_gpio.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/uart_loopback_data_dma/GCC")
!648 = !{!649, !650, !651, !652}
!649 = !DIEnumerator(name: "HAL_GPIO_STATUS_ERROR", value: -3)
!650 = !DIEnumerator(name: "HAL_GPIO_STATUS_ERROR_PIN", value: -2)
!651 = !DIEnumerator(name: "HAL_GPIO_STATUS_INVALID_PARAMETER", value: -1)
!652 = !DIEnumerator(name: "HAL_GPIO_STATUS_OK", value: 0)
!653 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !647, line: 210, baseType: !18, size: 32, elements: !654)
!654 = !{!655, !656}
!655 = !DIEnumerator(name: "HAL_GPIO_DIRECTION_INPUT", value: 0)
!656 = !DIEnumerator(name: "HAL_GPIO_DIRECTION_OUTPUT", value: 1)
!657 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !647, line: 233, baseType: !7, size: 32, elements: !658)
!658 = !{!659, !660, !661, !662}
!659 = !DIEnumerator(name: "HAL_PINMUX_STATUS_ERROR", value: -3)
!660 = !DIEnumerator(name: "HAL_PINMUX_STATUS_ERROR_PORT", value: -2)
!661 = !DIEnumerator(name: "HAL_PINMUX_STATUS_INVALID_FUNCTION", value: -1)
!662 = !DIEnumerator(name: "HAL_PINMUX_STATUS_OK", value: 0)
!663 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !647, line: 217, baseType: !18, size: 32, elements: !664)
!664 = !{!665, !666}
!665 = !DIEnumerator(name: "HAL_GPIO_DATA_LOW", value: 0)
!666 = !DIEnumerator(name: "HAL_GPIO_DATA_HIGH", value: 1)
!667 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 415, baseType: !18, size: 32, elements: !668)
!668 = !{!669, !670, !671, !672, !673, !674, !675}
!669 = !DIEnumerator(name: "HAL_GPIO_CLOCK_0", value: 0)
!670 = !DIEnumerator(name: "HAL_GPIO_CLOCK_1", value: 1)
!671 = !DIEnumerator(name: "HAL_GPIO_CLOCK_2", value: 2)
!672 = !DIEnumerator(name: "HAL_GPIO_CLOCK_3", value: 3)
!673 = !DIEnumerator(name: "HAL_GPIO_CLOCK_4", value: 4)
!674 = !DIEnumerator(name: "HAL_GPIO_CLOCK_5", value: 5)
!675 = !DIEnumerator(name: "HAL_GPIO_CLOCK_MAX", value: 6)
!676 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 427, baseType: !18, size: 32, elements: !677)
!677 = !{!678, !679, !680}
!678 = !DIEnumerator(name: "HAL_GPIO_CLOCK_MODE_26M", value: 1)
!679 = !DIEnumerator(name: "HAL_GPIO_CLOCK_MODE_32K", value: 4)
!680 = !DIEnumerator(name: "HAL_GPIO_CLOCK_MODE_MAX", value: 5)
!681 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !647, line: 242, baseType: !18, size: 32, elements: !682)
!682 = !{!683, !684, !685, !686}
!683 = !DIEnumerator(name: "HAL_GPIO_DRIVING_CURRENT_4MA", value: 0)
!684 = !DIEnumerator(name: "HAL_GPIO_DRIVING_CURRENT_8MA", value: 1)
!685 = !DIEnumerator(name: "HAL_GPIO_DRIVING_CURRENT_12MA", value: 2)
!686 = !DIEnumerator(name: "HAL_GPIO_DRIVING_CURRENT_16MA", value: 3)
!687 = !{!88, !688, !689, !690}
!688 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_direction_t", file: !647, line: 213, baseType: !653)
!689 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_data_t", file: !647, line: 220, baseType: !663)
!690 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_driving_current_t", file: !647, line: 247, baseType: !681)
!691 = !{!589}
!692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !693, size: 32)
!693 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_REGISTER_T", file: !56, line: 1554, baseType: !694)
!694 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1522, size: 29440, elements: !695)
!695 = !{!696, !708, !712, !721, !722, !731, !732, !741, !742, !752, !753, !762, !763, !772, !773, !782, !783, !792, !796, !805, !806, !815, !816, !825, !834, !835, !844, !848, !857, !858}
!696 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIR_REGISTER", scope: !694, file: !56, line: 1523, baseType: !697, size: 256)
!697 = !DICompositeType(tag: DW_TAG_array_type, baseType: !698, size: 256, elements: !480)
!698 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_DIR_REGISTER_T", file: !56, line: 1400, baseType: !699)
!699 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1395, size: 128, elements: !700)
!700 = !{!701, !702, !703, !704}
!701 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIR", scope: !699, file: !56, line: 1396, baseType: !60, size: 32)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIR_SET", scope: !699, file: !56, line: 1397, baseType: !60, size: 32, offset: 32)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIR_CLR", scope: !699, file: !56, line: 1398, baseType: !60, size: 32, offset: 64)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !699, file: !56, line: 1399, baseType: !705, size: 32, offset: 96)
!705 = !DICompositeType(tag: DW_TAG_array_type, baseType: !463, size: 32, elements: !706)
!706 = !{!707}
!707 = !DISubrange(count: 4)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET1", scope: !694, file: !56, line: 1524, baseType: !709, size: 1792, offset: 256)
!709 = !DICompositeType(tag: DW_TAG_array_type, baseType: !463, size: 1792, elements: !710)
!710 = !{!711}
!711 = !DISubrange(count: 224)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLEN_REGISTER", scope: !694, file: !56, line: 1525, baseType: !713, size: 256, offset: 2048)
!713 = !DICompositeType(tag: DW_TAG_array_type, baseType: !714, size: 256, elements: !480)
!714 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_PULLEN_REGISTER_T", file: !56, line: 1409, baseType: !715)
!715 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1404, size: 128, elements: !716)
!716 = !{!717, !718, !719, !720}
!717 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLEN", scope: !715, file: !56, line: 1405, baseType: !60, size: 32)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLEN_SET", scope: !715, file: !56, line: 1406, baseType: !60, size: 32, offset: 32)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLEN_CLR", scope: !715, file: !56, line: 1407, baseType: !60, size: 32, offset: 64)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !715, file: !56, line: 1408, baseType: !705, size: 32, offset: 96)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET2", scope: !694, file: !56, line: 1526, baseType: !709, size: 1792, offset: 2304)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DINV_REGISTER", scope: !694, file: !56, line: 1527, baseType: !723, size: 256, offset: 4096)
!723 = !DICompositeType(tag: DW_TAG_array_type, baseType: !724, size: 256, elements: !480)
!724 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_DINV_REGISTER_T", file: !56, line: 1417, baseType: !725)
!725 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1412, size: 128, elements: !726)
!726 = !{!727, !728, !729, !730}
!727 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DINV", scope: !725, file: !56, line: 1413, baseType: !60, size: 32)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DINV_SET", scope: !725, file: !56, line: 1414, baseType: !60, size: 32, offset: 32)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DINV_CLR", scope: !725, file: !56, line: 1415, baseType: !60, size: 32, offset: 64)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !725, file: !56, line: 1416, baseType: !705, size: 32, offset: 96)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET3", scope: !694, file: !56, line: 1528, baseType: !709, size: 1792, offset: 4352)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DOUT_REGISTER", scope: !694, file: !56, line: 1529, baseType: !733, size: 256, offset: 6144)
!733 = !DICompositeType(tag: DW_TAG_array_type, baseType: !734, size: 256, elements: !480)
!734 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_DOUT_REGISTER_T", file: !56, line: 1426, baseType: !735)
!735 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1421, size: 128, elements: !736)
!736 = !{!737, !738, !739, !740}
!737 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DOUT", scope: !735, file: !56, line: 1422, baseType: !60, size: 32)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DOUT_SET", scope: !735, file: !56, line: 1423, baseType: !60, size: 32, offset: 32)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DOUT_CLR", scope: !735, file: !56, line: 1424, baseType: !60, size: 32, offset: 64)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !735, file: !56, line: 1425, baseType: !705, size: 32, offset: 96)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET4", scope: !694, file: !56, line: 1530, baseType: !709, size: 1792, offset: 6400)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIN_REGISTER", scope: !694, file: !56, line: 1531, baseType: !743, size: 256, offset: 8192)
!743 = !DICompositeType(tag: DW_TAG_array_type, baseType: !744, size: 256, elements: !480)
!744 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_DIN_REGISTER_T", file: !56, line: 1432, baseType: !745)
!745 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1429, size: 128, elements: !746)
!746 = !{!747, !748}
!747 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIN", scope: !745, file: !56, line: 1430, baseType: !60, size: 32)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !745, file: !56, line: 1431, baseType: !749, size: 96, offset: 32)
!749 = !DICompositeType(tag: DW_TAG_array_type, baseType: !463, size: 96, elements: !750)
!750 = !{!751}
!751 = !DISubrange(count: 12)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET5", scope: !694, file: !56, line: 1532, baseType: !709, size: 1792, offset: 8448)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLSEL_REGISTER", scope: !694, file: !56, line: 1533, baseType: !754, size: 256, offset: 10240)
!754 = !DICompositeType(tag: DW_TAG_array_type, baseType: !755, size: 256, elements: !480)
!755 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_PULLSEL_REGISTER_T", file: !56, line: 1440, baseType: !756)
!756 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1435, size: 128, elements: !757)
!757 = !{!758, !759, !760, !761}
!758 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLSEL", scope: !756, file: !56, line: 1436, baseType: !60, size: 32)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLSEL_SET", scope: !756, file: !56, line: 1437, baseType: !60, size: 32, offset: 32)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLSEL_CLR", scope: !756, file: !56, line: 1438, baseType: !60, size: 32, offset: 64)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !756, file: !56, line: 1439, baseType: !705, size: 32, offset: 96)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET6", scope: !694, file: !56, line: 1534, baseType: !709, size: 1792, offset: 10496)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SMT_REGISTER", scope: !694, file: !56, line: 1535, baseType: !764, size: 256, offset: 12288)
!764 = !DICompositeType(tag: DW_TAG_array_type, baseType: !765, size: 256, elements: !480)
!765 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_SMT_REGISTER_T", file: !56, line: 1448, baseType: !766)
!766 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1443, size: 128, elements: !767)
!767 = !{!768, !769, !770, !771}
!768 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SMT", scope: !766, file: !56, line: 1444, baseType: !60, size: 32)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SMT_SET", scope: !766, file: !56, line: 1445, baseType: !60, size: 32, offset: 32)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SMT_CLR", scope: !766, file: !56, line: 1446, baseType: !60, size: 32, offset: 64)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !766, file: !56, line: 1447, baseType: !705, size: 32, offset: 96)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET7", scope: !694, file: !56, line: 1536, baseType: !709, size: 1792, offset: 12544)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SR_REGISTER", scope: !694, file: !56, line: 1537, baseType: !774, size: 256, offset: 14336)
!774 = !DICompositeType(tag: DW_TAG_array_type, baseType: !775, size: 256, elements: !480)
!775 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_SR_REGISTER_T", file: !56, line: 1455, baseType: !776)
!776 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1450, size: 128, elements: !777)
!777 = !{!778, !779, !780, !781}
!778 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SR", scope: !776, file: !56, line: 1451, baseType: !60, size: 32)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SR_SET", scope: !776, file: !56, line: 1452, baseType: !60, size: 32, offset: 32)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SR_CLR", scope: !776, file: !56, line: 1453, baseType: !60, size: 32, offset: 64)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !776, file: !56, line: 1454, baseType: !705, size: 32, offset: 96)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET8", scope: !694, file: !56, line: 1538, baseType: !709, size: 1792, offset: 14592)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DRV_REGISTER", scope: !694, file: !56, line: 1539, baseType: !784, size: 512, offset: 16384)
!784 = !DICompositeType(tag: DW_TAG_array_type, baseType: !785, size: 512, elements: !706)
!785 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_DRV_REGISTER_T", file: !56, line: 1463, baseType: !786)
!786 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1458, size: 128, elements: !787)
!787 = !{!788, !789, !790, !791}
!788 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DRV", scope: !786, file: !56, line: 1459, baseType: !60, size: 32)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DRV_SET", scope: !786, file: !56, line: 1460, baseType: !60, size: 32, offset: 32)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DRV_CLR", scope: !786, file: !56, line: 1461, baseType: !60, size: 32, offset: 64)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !786, file: !56, line: 1462, baseType: !705, size: 32, offset: 96)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET9", scope: !694, file: !56, line: 1540, baseType: !793, size: 1536, offset: 16896)
!793 = !DICompositeType(tag: DW_TAG_array_type, baseType: !463, size: 1536, elements: !794)
!794 = !{!795}
!795 = !DISubrange(count: 192)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_IES_REGISTER", scope: !694, file: !56, line: 1541, baseType: !797, size: 256, offset: 18432)
!797 = !DICompositeType(tag: DW_TAG_array_type, baseType: !798, size: 256, elements: !480)
!798 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_IES_REGISTER_T", file: !56, line: 1471, baseType: !799)
!799 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1466, size: 128, elements: !800)
!800 = !{!801, !802, !803, !804}
!801 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_IES", scope: !799, file: !56, line: 1467, baseType: !60, size: 32)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_IES_SET", scope: !799, file: !56, line: 1468, baseType: !60, size: 32, offset: 32)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_IES_CLR", scope: !799, file: !56, line: 1469, baseType: !60, size: 32, offset: 64)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !799, file: !56, line: 1470, baseType: !705, size: 32, offset: 96)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET10", scope: !694, file: !56, line: 1542, baseType: !709, size: 1792, offset: 18688)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PUPD_REGISTER", scope: !694, file: !56, line: 1543, baseType: !807, size: 256, offset: 20480)
!807 = !DICompositeType(tag: DW_TAG_array_type, baseType: !808, size: 256, elements: !480)
!808 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_PUPD_REGISTER_T", file: !56, line: 1480, baseType: !809)
!809 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1475, size: 128, elements: !810)
!810 = !{!811, !812, !813, !814}
!811 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PUPD", scope: !809, file: !56, line: 1476, baseType: !60, size: 32)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PUPD_SET", scope: !809, file: !56, line: 1477, baseType: !60, size: 32, offset: 32)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PUPD_CLR", scope: !809, file: !56, line: 1478, baseType: !60, size: 32, offset: 64)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !809, file: !56, line: 1479, baseType: !705, size: 32, offset: 96)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET11", scope: !694, file: !56, line: 1544, baseType: !709, size: 1792, offset: 20736)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN0_REGISTER", scope: !694, file: !56, line: 1545, baseType: !817, size: 256, offset: 22528)
!817 = !DICompositeType(tag: DW_TAG_array_type, baseType: !818, size: 256, elements: !480)
!818 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_RESEN0_REGISTER_T", file: !56, line: 1489, baseType: !819)
!819 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1484, size: 128, elements: !820)
!820 = !{!821, !822, !823, !824}
!821 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN0", scope: !819, file: !56, line: 1485, baseType: !60, size: 32)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN0_SET", scope: !819, file: !56, line: 1486, baseType: !60, size: 32, offset: 32)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN0_CLR", scope: !819, file: !56, line: 1487, baseType: !60, size: 32, offset: 64)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !819, file: !56, line: 1488, baseType: !705, size: 32, offset: 96)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN1_REGISTER", scope: !694, file: !56, line: 1546, baseType: !826, size: 256, offset: 22784)
!826 = !DICompositeType(tag: DW_TAG_array_type, baseType: !827, size: 256, elements: !480)
!827 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_RESEN1_REGISTER_T", file: !56, line: 1497, baseType: !828)
!828 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1492, size: 128, elements: !829)
!829 = !{!830, !831, !832, !833}
!830 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN1", scope: !828, file: !56, line: 1493, baseType: !60, size: 32)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN1_SET", scope: !828, file: !56, line: 1494, baseType: !60, size: 32, offset: 32)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN1_CLR", scope: !828, file: !56, line: 1495, baseType: !60, size: 32, offset: 64)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !828, file: !56, line: 1496, baseType: !705, size: 32, offset: 96)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET12", scope: !694, file: !56, line: 1547, baseType: !793, size: 1536, offset: 23040)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_MODE_REGISTER", scope: !694, file: !56, line: 1548, baseType: !836, size: 896, offset: 24576)
!836 = !DICompositeType(tag: DW_TAG_array_type, baseType: !837, size: 896, elements: !551)
!837 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_MODE_REGISTER_T", file: !56, line: 1505, baseType: !838)
!838 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1500, size: 128, elements: !839)
!839 = !{!840, !841, !842, !843}
!840 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_MODE", scope: !838, file: !56, line: 1501, baseType: !60, size: 32)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_MODE_SET", scope: !838, file: !56, line: 1502, baseType: !60, size: 32, offset: 32)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_MODE_CLR", scope: !838, file: !56, line: 1503, baseType: !60, size: 32, offset: 64)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !838, file: !56, line: 1504, baseType: !705, size: 32, offset: 96)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET13", scope: !694, file: !56, line: 1549, baseType: !845, size: 1152, offset: 25472)
!845 = !DICompositeType(tag: DW_TAG_array_type, baseType: !463, size: 1152, elements: !846)
!846 = !{!847}
!847 = !DISubrange(count: 144)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_TDSEL_REGISTER", scope: !694, file: !56, line: 1550, baseType: !849, size: 512, offset: 26624)
!849 = !DICompositeType(tag: DW_TAG_array_type, baseType: !850, size: 512, elements: !706)
!850 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TDSEL_REGISTER_T", file: !56, line: 1513, baseType: !851)
!851 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1508, size: 128, elements: !852)
!852 = !{!853, !854, !855, !856}
!853 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_TDSEL", scope: !851, file: !56, line: 1509, baseType: !60, size: 32)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_TDSEL_SET", scope: !851, file: !56, line: 1510, baseType: !60, size: 32, offset: 32)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_TDSEL_CLR", scope: !851, file: !56, line: 1511, baseType: !60, size: 32, offset: 64)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !851, file: !56, line: 1512, baseType: !705, size: 32, offset: 96)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET14", scope: !694, file: !56, line: 1551, baseType: !793, size: 1536, offset: 27136)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_CLKOUT_REGISTER", scope: !694, file: !56, line: 1552, baseType: !859, size: 768, offset: 28672)
!859 = !DICompositeType(tag: DW_TAG_array_type, baseType: !860, size: 768, elements: !314)
!860 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_CLKOUT_REGISTER_T", file: !56, line: 1519, baseType: !861)
!861 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1516, size: 128, elements: !862)
!862 = !{!863, !864}
!863 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_CLKOUT", scope: !861, file: !56, line: 1517, baseType: !60, size: 32)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !861, file: !56, line: 1518, baseType: !749, size: 96, offset: 32)
!865 = !DIGlobalVariableExpression(var: !866, expr: !DIExpression())
!866 = distinct !DIGlobalVariable(name: "g_uart_hwstatus", scope: !867, file: !868, line: 101, type: !984, isLocal: true, isDefinition: true)
!867 = distinct !DICompileUnit(language: DW_LANG_C99, file: !868, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !869, retainedTypes: !934, globals: !943, splitDebugInlining: false, nameTableKind: None)
!868 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_uart.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/uart_loopback_data_dma/GCC")
!869 = !{!870, !406, !877, !400, !883, !888, !895, !911, !917, !921, !358, !926, !420}
!870 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 180, baseType: !18, size: 32, elements: !871)
!871 = !{!872, !873, !874, !875, !876}
!872 = !DIEnumerator(name: "HAL_UART_0", value: 0)
!873 = !DIEnumerator(name: "HAL_UART_1", value: 1)
!874 = !DIEnumerator(name: "HAL_UART_2", value: 2)
!875 = !DIEnumerator(name: "HAL_UART_3", value: 3)
!876 = !DIEnumerator(name: "HAL_UART_MAX", value: 4)
!877 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !878, line: 355, baseType: !7, size: 32, elements: !879)
!878 = !DIFile(filename: "../../../../../driver/chip/inc/hal_uart.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/uart_loopback_data_dma/GCC")
!879 = !{!880, !881, !882}
!880 = !DIEnumerator(name: "HAL_UART_EVENT_TRANSACTION_ERROR", value: -1)
!881 = !DIEnumerator(name: "HAL_UART_EVENT_READY_TO_READ", value: 1)
!882 = !DIEnumerator(name: "HAL_UART_EVENT_READY_TO_WRITE", value: 2)
!883 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !868, line: 65, baseType: !18, size: 32, elements: !884)
!884 = !{!885, !886, !887}
!885 = !DIEnumerator(name: "UART_HWSTATUS_UNINITIALIZED", value: 0)
!886 = !DIEnumerator(name: "UART_HWSTATUS_POLL_INITIALIZED", value: 1)
!887 = !DIEnumerator(name: "UART_HWSTATUS_DMA_INITIALIZED", value: 2)
!888 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !878, line: 345, baseType: !7, size: 32, elements: !889)
!889 = !{!890, !891, !892, !893, !894}
!890 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR_PARAMETER", value: -4)
!891 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR_BUSY", value: -3)
!892 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR_UNINITIALIZED", value: -2)
!893 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR", value: -1)
!894 = !DIEnumerator(name: "HAL_UART_STATUS_OK", value: 0)
!895 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !878, line: 302, baseType: !18, size: 32, elements: !896)
!896 = !{!897, !898, !899, !900, !901, !902, !903, !904, !905, !906, !907, !908, !909, !910}
!897 = !DIEnumerator(name: "HAL_UART_BAUDRATE_110", value: 0)
!898 = !DIEnumerator(name: "HAL_UART_BAUDRATE_300", value: 1)
!899 = !DIEnumerator(name: "HAL_UART_BAUDRATE_1200", value: 2)
!900 = !DIEnumerator(name: "HAL_UART_BAUDRATE_2400", value: 3)
!901 = !DIEnumerator(name: "HAL_UART_BAUDRATE_4800", value: 4)
!902 = !DIEnumerator(name: "HAL_UART_BAUDRATE_9600", value: 5)
!903 = !DIEnumerator(name: "HAL_UART_BAUDRATE_19200", value: 6)
!904 = !DIEnumerator(name: "HAL_UART_BAUDRATE_38400", value: 7)
!905 = !DIEnumerator(name: "HAL_UART_BAUDRATE_57600", value: 8)
!906 = !DIEnumerator(name: "HAL_UART_BAUDRATE_115200", value: 9)
!907 = !DIEnumerator(name: "HAL_UART_BAUDRATE_230400", value: 10)
!908 = !DIEnumerator(name: "HAL_UART_BAUDRATE_460800", value: 11)
!909 = !DIEnumerator(name: "HAL_UART_BAUDRATE_921600", value: 12)
!910 = !DIEnumerator(name: "HAL_UART_BAUDRATE_MAX", value: 13)
!911 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !878, line: 321, baseType: !18, size: 32, elements: !912)
!912 = !{!913, !914, !915, !916}
!913 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_5", value: 0)
!914 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_6", value: 1)
!915 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_7", value: 2)
!916 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_8", value: 3)
!917 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !878, line: 330, baseType: !18, size: 32, elements: !918)
!918 = !{!919, !920}
!919 = !DIEnumerator(name: "HAL_UART_STOP_BIT_1", value: 0)
!920 = !DIEnumerator(name: "HAL_UART_STOP_BIT_2", value: 1)
!921 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !878, line: 337, baseType: !18, size: 32, elements: !922)
!922 = !{!923, !924, !925}
!923 = !DIEnumerator(name: "HAL_UART_PARITY_NONE", value: 0)
!924 = !DIEnumerator(name: "HAL_UART_PARITY_ODD", value: 1)
!925 = !DIEnumerator(name: "HAL_UART_PARITY_EVEN", value: 2)
!926 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !927, line: 152, baseType: !7, size: 32, elements: !928)
!927 = !DIFile(filename: "../../../../../driver/chip/inc/hal_nvic.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/uart_loopback_data_dma/GCC")
!928 = !{!929, !930, !931, !932, !933}
!929 = !DIEnumerator(name: "HAL_NVIC_STATUS_ERROR_NO_ISR", value: -4)
!930 = !DIEnumerator(name: "HAL_NVIC_STATUS_ERROR_IRQ_NUMBER", value: -3)
!931 = !DIEnumerator(name: "HAL_NVIC_STATUS_INVALID_PARAMETER", value: -2)
!932 = !DIEnumerator(name: "HAL_NVIC_STATUS_ERROR", value: -1)
!933 = !DIEnumerator(name: "HAL_NVIC_STATUS_OK", value: 0)
!934 = !{!88, !61, !935}
!935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !936, size: 32)
!936 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_dma_callback_data_t", file: !937, line: 96, baseType: !938)
!937 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_uart_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/uart_loopback_data_dma/GCC")
!938 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !937, line: 93, size: 64, elements: !939)
!939 = !{!940, !941}
!940 = !DIDerivedType(tag: DW_TAG_member, name: "is_rx", scope: !938, file: !937, line: 94, baseType: !91, size: 8)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "uart_port", scope: !938, file: !937, line: 95, baseType: !942, size: 32, offset: 32)
!942 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_port_t", file: !98, line: 186, baseType: !870)
!943 = !{!865, !944, !957, !962, !976, !982}
!944 = !DIGlobalVariableExpression(var: !945, expr: !DIExpression())
!945 = distinct !DIGlobalVariable(name: "g_uart_callback", scope: !867, file: !868, line: 102, type: !946, isLocal: true, isDefinition: true)
!946 = !DICompositeType(tag: DW_TAG_array_type, baseType: !947, size: 256, elements: !706)
!947 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_callback_t", file: !868, line: 74, baseType: !948)
!948 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !868, line: 71, size: 64, elements: !949)
!949 = !{!950, !956}
!950 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !948, file: !868, line: 72, baseType: !951, size: 32)
!951 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_callback_t", file: !878, line: 410, baseType: !952)
!952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !953, size: 32)
!953 = !DISubroutineType(types: !954)
!954 = !{null, !955, !88}
!955 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_callback_event_t", file: !878, line: 359, baseType: !877)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !948, file: !868, line: 73, baseType: !88, size: 32, offset: 32)
!957 = !DIGlobalVariableExpression(var: !958, expr: !DIExpression())
!958 = distinct !DIGlobalVariable(name: "g_uart_dma_callback_data", scope: !867, file: !868, line: 103, type: !959, isLocal: true, isDefinition: true)
!959 = !DICompositeType(tag: DW_TAG_array_type, baseType: !936, size: 512, elements: !960)
!960 = !{!961}
!961 = !DISubrange(count: 8)
!962 = !DIGlobalVariableExpression(var: !963, expr: !DIExpression())
!963 = distinct !DIGlobalVariable(name: "g_uart_dma_config", scope: !867, file: !868, line: 104, type: !964, isLocal: true, isDefinition: true)
!964 = !DICompositeType(tag: DW_TAG_array_type, baseType: !965, size: 896, elements: !706)
!965 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_dma_config_t", file: !878, line: 390, baseType: !966)
!966 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !878, line: 382, size: 224, elements: !967)
!967 = !{!968, !970, !971, !972, !973, !974, !975}
!968 = !DIDerivedType(tag: DW_TAG_member, name: "send_vfifo_buffer", scope: !966, file: !878, line: 383, baseType: !969, size: 32)
!969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !463, size: 32)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "send_vfifo_buffer_size", scope: !966, file: !878, line: 384, baseType: !61, size: 32, offset: 32)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "send_vfifo_threshold_size", scope: !966, file: !878, line: 385, baseType: !61, size: 32, offset: 64)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_buffer", scope: !966, file: !878, line: 386, baseType: !969, size: 32, offset: 96)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_buffer_size", scope: !966, file: !878, line: 387, baseType: !61, size: 32, offset: 128)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_threshold_size", scope: !966, file: !878, line: 388, baseType: !61, size: 32, offset: 160)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_alert_size", scope: !966, file: !878, line: 389, baseType: !61, size: 32, offset: 192)
!976 = !DIGlobalVariableExpression(var: !977, expr: !DIExpression())
!977 = distinct !DIGlobalVariable(name: "g_uart_baudrate_map", scope: !867, file: !868, line: 105, type: !978, isLocal: true, isDefinition: true)
!978 = !DICompositeType(tag: DW_TAG_array_type, baseType: !979, size: 416, elements: !980)
!979 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !61)
!980 = !{!981}
!981 = !DISubrange(count: 13)
!982 = !DIGlobalVariableExpression(var: !983, expr: !DIExpression())
!983 = distinct !DIGlobalVariable(name: "g_uart_global_data_initialized", scope: !867, file: !868, line: 90, type: !91, isLocal: true, isDefinition: true)
!984 = !DICompositeType(tag: DW_TAG_array_type, baseType: !985, size: 128, elements: !706)
!985 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !986)
!986 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_hwstatus_t", file: !868, line: 69, baseType: !883)
!987 = !DIGlobalVariableExpression(var: !983, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!988 = !DIGlobalVariableExpression(var: !989, expr: !DIExpression())
!989 = distinct !DIGlobalVariable(name: "g_uart_regbase", scope: !990, file: !991, line: 53, type: !1069, isLocal: false, isDefinition: true)
!990 = distinct !DICompileUnit(language: DW_LANG_C99, file: !991, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !992, retainedTypes: !1003, globals: !1059, splitDebugInlining: false, nameTableKind: None)
!991 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_uart_internal_platform.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/uart_loopback_data_dma/GCC")
!992 = !{!97, !168, !406, !870, !993}
!993 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !937, line: 46, baseType: !18, size: 32, elements: !994)
!994 = !{!995, !996, !997, !998, !999, !1000, !1001, !1002}
!995 = !DIEnumerator(name: "UART_INTERRUPT_NONE", value: 0)
!996 = !DIEnumerator(name: "UART_INTERRUPT_RECEIVE_ERROR", value: 1)
!997 = !DIEnumerator(name: "UART_INTERRUPT_RECEIVE_TIMEOUT", value: 2)
!998 = !DIEnumerator(name: "UART_INTERRUPT_RECEIVE_BREAK", value: 3)
!999 = !DIEnumerator(name: "UART_INTERRUPT_RECEIVE_AVAILABLE", value: 4)
!1000 = !DIEnumerator(name: "UART_INTERRUPT_SEND_AVAILABLE", value: 5)
!1001 = !DIEnumerator(name: "UART_INTERRUPT_SOFTWARE_FLOWCONTROL", value: 6)
!1002 = !DIEnumerator(name: "UART_INTERRUPT_HARDWARE_FLOWCONTROL", value: 7)
!1003 = !{!1004}
!1004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1005, size: 32)
!1005 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_REGISTER_T", file: !56, line: 588, baseType: !1006)
!1006 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 542, size: 800, elements: !1007)
!1007 = !{!1008, !1014, !1019, !1025, !1026, !1031, !1036, !1037, !1042, !1043, !1044, !1045, !1046, !1047, !1048, !1049, !1050, !1051, !1052, !1053, !1054, !1055, !1056, !1057, !1058}
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "RBR_THR_DLL", scope: !1006, file: !56, line: 547, baseType: !1009, size: 32)
!1009 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1006, file: !56, line: 543, size: 32, elements: !1010)
!1010 = !{!1011, !1012, !1013}
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "RBR", scope: !1009, file: !56, line: 544, baseType: !272, size: 32)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "THR", scope: !1009, file: !56, line: 545, baseType: !60, size: 32)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "DLL", scope: !1009, file: !56, line: 546, baseType: !60, size: 32)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "IER_DLM", scope: !1006, file: !56, line: 551, baseType: !1015, size: 32, offset: 32)
!1015 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1006, file: !56, line: 548, size: 32, elements: !1016)
!1016 = !{!1017, !1018}
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "IER", scope: !1015, file: !56, line: 549, baseType: !60, size: 32)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "DLM", scope: !1015, file: !56, line: 550, baseType: !60, size: 32)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "IIR_FCR_EFR", scope: !1006, file: !56, line: 556, baseType: !1020, size: 32, offset: 64)
!1020 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1006, file: !56, line: 552, size: 32, elements: !1021)
!1021 = !{!1022, !1023, !1024}
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "IIR", scope: !1020, file: !56, line: 553, baseType: !272, size: 32)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "FCR", scope: !1020, file: !56, line: 554, baseType: !60, size: 32)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "EFR", scope: !1020, file: !56, line: 555, baseType: !60, size: 32)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "LCR", scope: !1006, file: !56, line: 557, baseType: !60, size: 32, offset: 96)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "MCR_XON1", scope: !1006, file: !56, line: 561, baseType: !1027, size: 32, offset: 128)
!1027 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1006, file: !56, line: 558, size: 32, elements: !1028)
!1028 = !{!1029, !1030}
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "MCR", scope: !1027, file: !56, line: 559, baseType: !60, size: 32)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "XON1", scope: !1027, file: !56, line: 560, baseType: !60, size: 32)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "LSR_XON2", scope: !1006, file: !56, line: 565, baseType: !1032, size: 32, offset: 160)
!1032 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1006, file: !56, line: 562, size: 32, elements: !1033)
!1033 = !{!1034, !1035}
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "LSR", scope: !1032, file: !56, line: 563, baseType: !272, size: 32)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "XON2", scope: !1032, file: !56, line: 564, baseType: !60, size: 32)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF1", scope: !1006, file: !56, line: 566, baseType: !60, size: 32, offset: 192)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "SCR_XOFF2", scope: !1006, file: !56, line: 570, baseType: !1038, size: 32, offset: 224)
!1038 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1006, file: !56, line: 567, size: 32, elements: !1039)
!1039 = !{!1040, !1041}
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1038, file: !56, line: 568, baseType: !60, size: 32)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF2", scope: !1038, file: !56, line: 569, baseType: !60, size: 32)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_EN", scope: !1006, file: !56, line: 571, baseType: !60, size: 32, offset: 256)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "HIGHSPEED", scope: !1006, file: !56, line: 572, baseType: !60, size: 32, offset: 288)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_COUNT", scope: !1006, file: !56, line: 573, baseType: !60, size: 32, offset: 320)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_POINT", scope: !1006, file: !56, line: 574, baseType: !60, size: 32, offset: 352)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_REG", scope: !1006, file: !56, line: 575, baseType: !272, size: 32, offset: 384)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "RATEFIX_AD", scope: !1006, file: !56, line: 576, baseType: !60, size: 32, offset: 416)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUDSAMPLE", scope: !1006, file: !56, line: 577, baseType: !60, size: 32, offset: 448)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "GUARD", scope: !1006, file: !56, line: 578, baseType: !60, size: 32, offset: 480)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_DAT", scope: !1006, file: !56, line: 579, baseType: !60, size: 32, offset: 512)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_EN", scope: !1006, file: !56, line: 580, baseType: !60, size: 32, offset: 544)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEP_EN", scope: !1006, file: !56, line: 581, baseType: !60, size: 32, offset: 576)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "DMA_EN", scope: !1006, file: !56, line: 582, baseType: !60, size: 32, offset: 608)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "RXTRI_AD", scope: !1006, file: !56, line: 583, baseType: !60, size: 32, offset: 640)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_L", scope: !1006, file: !56, line: 584, baseType: !60, size: 32, offset: 672)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_M", scope: !1006, file: !56, line: 585, baseType: !60, size: 32, offset: 704)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "FCR_RD", scope: !1006, file: !56, line: 586, baseType: !272, size: 32, offset: 736)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "TX_ACTIVE_EN", scope: !1006, file: !56, line: 587, baseType: !60, size: 32, offset: 768)
!1059 = !{!988, !1060, !1065}
!1060 = !DIGlobalVariableExpression(var: !1061, expr: !DIExpression())
!1061 = distinct !DIGlobalVariable(name: "g_uart_port_to_pdn", scope: !990, file: !991, line: 54, type: !1062, isLocal: false, isDefinition: true)
!1062 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1063, size: 128, elements: !706)
!1063 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1064)
!1064 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_clock_cg_id", file: !98, line: 1237, baseType: !97)
!1065 = !DIGlobalVariableExpression(var: !1066, expr: !DIExpression())
!1066 = distinct !DIGlobalVariable(name: "g_uart_port_to_irq_num", scope: !990, file: !991, line: 55, type: !1067, isLocal: false, isDefinition: true)
!1067 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1068, size: 128, elements: !706)
!1068 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !528)
!1069 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1070, size: 128, elements: !706)
!1070 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1004)
!1071 = !DIGlobalVariableExpression(var: !1072, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!1072 = distinct !DIGlobalVariable(name: "priority_set", scope: !1073, file: !1074, line: 128, type: !61, isLocal: true, isDefinition: true)
!1073 = distinct !DISubprogram(name: "hal_nvic_init", scope: !1074, file: !1074, line: 126, type: !1075, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1078, retainedNodes: !1162)
!1074 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_nvic.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/uart_loopback_data_dma/GCC")
!1075 = !DISubroutineType(types: !1076)
!1076 = !{!1077}
!1077 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_nvic_status_t", file: !927, line: 158, baseType: !926)
!1078 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1074, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1079, retainedTypes: !1080, globals: !1146, splitDebugInlining: false, nameTableKind: None)
!1079 = !{!926, !168}
!1080 = !{!528, !1081, !61, !1114, !1144}
!1081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1082, size: 32)
!1082 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1083, line: 418, baseType: !1084)
!1083 = !DIFile(filename: "../../../../../driver/CMSIS/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/uart_loopback_data_dma/GCC")
!1084 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1083, line: 395, size: 1120, elements: !1085)
!1085 = !{!1086, !1087, !1088, !1089, !1090, !1091, !1092, !1094, !1095, !1096, !1097, !1098, !1099, !1100, !1101, !1103, !1104, !1105, !1107, !1111, !1113}
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1084, file: !1083, line: 397, baseType: !272, size: 32)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1084, file: !1083, line: 398, baseType: !60, size: 32, offset: 32)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1084, file: !1083, line: 399, baseType: !60, size: 32, offset: 64)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1084, file: !1083, line: 400, baseType: !60, size: 32, offset: 96)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1084, file: !1083, line: 401, baseType: !60, size: 32, offset: 128)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1084, file: !1083, line: 402, baseType: !60, size: 32, offset: 160)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1084, file: !1083, line: 403, baseType: !1093, size: 96, offset: 192)
!1093 = !DICompositeType(tag: DW_TAG_array_type, baseType: !550, size: 96, elements: !750)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1084, file: !1083, line: 404, baseType: !60, size: 32, offset: 288)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1084, file: !1083, line: 405, baseType: !60, size: 32, offset: 320)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1084, file: !1083, line: 406, baseType: !60, size: 32, offset: 352)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1084, file: !1083, line: 407, baseType: !60, size: 32, offset: 384)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1084, file: !1083, line: 408, baseType: !60, size: 32, offset: 416)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1084, file: !1083, line: 409, baseType: !60, size: 32, offset: 448)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1084, file: !1083, line: 410, baseType: !60, size: 32, offset: 480)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1084, file: !1083, line: 411, baseType: !1102, size: 64, offset: 512)
!1102 = !DICompositeType(tag: DW_TAG_array_type, baseType: !272, size: 64, elements: !480)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1084, file: !1083, line: 412, baseType: !272, size: 32, offset: 576)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1084, file: !1083, line: 413, baseType: !272, size: 32, offset: 608)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1084, file: !1083, line: 414, baseType: !1106, size: 128, offset: 640)
!1106 = !DICompositeType(tag: DW_TAG_array_type, baseType: !272, size: 128, elements: !706)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1084, file: !1083, line: 415, baseType: !1108, size: 160, offset: 768)
!1108 = !DICompositeType(tag: DW_TAG_array_type, baseType: !272, size: 160, elements: !1109)
!1109 = !{!1110}
!1110 = !DISubrange(count: 5)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1084, file: !1083, line: 416, baseType: !1112, size: 160, offset: 928)
!1112 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 160, elements: !1109)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1084, file: !1083, line: 417, baseType: !60, size: 32, offset: 1088)
!1114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1115, size: 32)
!1115 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !1083, line: 378, baseType: !1116)
!1116 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1083, line: 363, size: 28704, elements: !1117)
!1117 = !{!1118, !1120, !1124, !1125, !1126, !1127, !1128, !1129, !1130, !1131, !1135, !1139, !1143}
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1116, file: !1083, line: 365, baseType: !1119, size: 256)
!1119 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 256, elements: !960)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1116, file: !1083, line: 366, baseType: !1121, size: 768, offset: 256)
!1121 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 768, elements: !1122)
!1122 = !{!1123}
!1123 = !DISubrange(count: 24)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1116, file: !1083, line: 367, baseType: !1119, size: 256, offset: 1024)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "RSERVED1", scope: !1116, file: !1083, line: 368, baseType: !1121, size: 768, offset: 1280)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1116, file: !1083, line: 369, baseType: !1119, size: 256, offset: 2048)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1116, file: !1083, line: 370, baseType: !1121, size: 768, offset: 2304)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1116, file: !1083, line: 371, baseType: !1119, size: 256, offset: 3072)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1116, file: !1083, line: 372, baseType: !1121, size: 768, offset: 3328)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1116, file: !1083, line: 373, baseType: !1119, size: 256, offset: 4096)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1116, file: !1083, line: 374, baseType: !1132, size: 1792, offset: 4352)
!1132 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 1792, elements: !1133)
!1133 = !{!1134}
!1134 = !DISubrange(count: 56)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1116, file: !1083, line: 375, baseType: !1136, size: 1920, offset: 6144)
!1136 = !DICompositeType(tag: DW_TAG_array_type, baseType: !550, size: 1920, elements: !1137)
!1137 = !{!1138}
!1138 = !DISubrange(count: 240)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1116, file: !1083, line: 376, baseType: !1140, size: 20608, offset: 8064)
!1140 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 20608, elements: !1141)
!1141 = !{!1142}
!1142 = !DISubrange(count: 644)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1116, file: !1083, line: 377, baseType: !60, size: 32, offset: 28672)
!1144 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !62, line: 44, baseType: !1145)
!1145 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int32_t", file: !64, line: 77, baseType: !7)
!1146 = !{!1147, !1148, !1159}
!1147 = !DIGlobalVariableExpression(var: !1072, expr: !DIExpression())
!1148 = !DIGlobalVariableExpression(var: !1149, expr: !DIExpression())
!1149 = distinct !DIGlobalVariable(name: "nvic_function_table", scope: !1078, file: !1074, line: 119, type: !1150, isLocal: false, isDefinition: true)
!1150 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1151, size: 4096, elements: !1157)
!1151 = !DIDerivedType(tag: DW_TAG_typedef, name: "nvic_function_t", file: !1074, line: 50, baseType: !1152)
!1152 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1074, line: 47, size: 64, elements: !1153)
!1153 = !{!1154, !1156}
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "nvic_callback", scope: !1152, file: !1074, line: 48, baseType: !1155, size: 32)
!1155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !526, size: 32)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "irq_pending", scope: !1152, file: !1074, line: 49, baseType: !61, size: 32, offset: 32)
!1157 = !{!1158}
!1158 = !DISubrange(count: 64)
!1159 = !DIGlobalVariableExpression(var: !1160, expr: !DIExpression())
!1160 = distinct !DIGlobalVariable(name: "defualt_irq_priority", scope: !1078, file: !1074, line: 52, type: !1161, isLocal: true, isDefinition: true)
!1161 = !DICompositeType(tag: DW_TAG_array_type, baseType: !979, size: 2048, elements: !1157)
!1162 = !{!1163}
!1163 = !DILocalVariable(name: "i", scope: !1073, file: !1074, line: 129, type: !61)
!1164 = !DIGlobalVariableExpression(var: !1165, expr: !DIExpression())
!1165 = distinct !DIGlobalVariable(name: "DelayResume", scope: !1166, file: !1167, line: 55, type: !91, isLocal: false, isDefinition: true)
!1166 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1167, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1168, retainedTypes: !1203, globals: !1242, splitDebugInlining: false, nameTableKind: None)
!1167 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_mtd_common.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/uart_loopback_data_dma/GCC")
!1168 = !{!1169, !1177, !1182}
!1169 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "sfi_clock_enum_t", file: !1170, line: 51, baseType: !18, size: 32, elements: !1171)
!1170 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_sfi_release.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/uart_loopback_data_dma/GCC")
!1171 = !{!1172, !1173, !1174, !1175, !1176}
!1172 = !DIEnumerator(name: "SFI_CLK_UNKNOWN", value: 0)
!1173 = !DIEnumerator(name: "SFI_CLK_78MHZ", value: 78)
!1174 = !DIEnumerator(name: "SFI_CLK_104MHZ", value: 104)
!1175 = !DIEnumerator(name: "SFI_CLK_130MHZ", value: 130)
!1176 = !DIEnumerator(name: "SFI_CLK_166MHZ", value: 166)
!1177 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "sfi_voltage_enum_t", file: !1170, line: 62, baseType: !18, size: 32, elements: !1178)
!1178 = !{!1179, !1180, !1181}
!1179 = !DIEnumerator(name: "SFI_Voltage_UNKNOWN", value: 0)
!1180 = !DIEnumerator(name: "SFI_Voltage_18", value: 18)
!1181 = !DIEnumerator(name: "SFI_Voltage_30", value: 30)
!1182 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1183, line: 228, baseType: !18, size: 32, elements: !1184)
!1183 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_clock_platform_mt2523.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/uart_loopback_data_dma/GCC")
!1184 = !{!1185, !1186, !1187, !1188, !1189, !1190, !1191, !1192, !1193, !1194, !1195, !1196, !1197, !1198, !1199, !1200, !1201, !1202}
!1185 = !DIEnumerator(name: "BUS_MUX_SEL", value: 0)
!1186 = !DIEnumerator(name: "CM_MUX_SEL", value: 1)
!1187 = !DIEnumerator(name: "SFC_MUX_SEL", value: 2)
!1188 = !DIEnumerator(name: "SLCD_MUX_SEL", value: 3)
!1189 = !DIEnumerator(name: "BSI_MUX_SEL", value: 4)
!1190 = !DIEnumerator(name: "DSP_MUX_SEL", value: 5)
!1191 = !DIEnumerator(name: "CAM_MUX_SEL", value: 6)
!1192 = !DIEnumerator(name: "USB_MUX_SEL", value: 7)
!1193 = !DIEnumerator(name: "DISP_PWM_MUX_SEL", value: 8)
!1194 = !DIEnumerator(name: "MSDC0_MUX_SEL", value: 9)
!1195 = !DIEnumerator(name: "MSDC1_MUX_SEL", value: 10)
!1196 = !DIEnumerator(name: "LP_CLKSQ_MUX_SEL", value: 11)
!1197 = !DIEnumerator(name: "LP_LFOSC_MUX_SEL", value: 12)
!1198 = !DIEnumerator(name: "RG_SLCD_CK_SEL", value: 13)
!1199 = !DIEnumerator(name: "GP_F26M_GFMUX_SEL", value: 14)
!1200 = !DIEnumerator(name: "LP_F26M_GFMUX_SEL", value: 15)
!1201 = !DIEnumerator(name: "NR_MUXS", value: 16)
!1202 = !DIEnumerator(name: "CLK_MUX_SEL_NONE", value: 17)
!1203 = !{!1204, !1205, !1227, !969, !61, !18, !1233, !1235, !1239, !1241}
!1204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !61, size: 32)
!1205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1206, size: 32)
!1206 = !DIDerivedType(tag: DW_TAG_typedef, name: "SFC_REGISTER_T", file: !56, line: 2777, baseType: !1207)
!1207 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 2758, size: 576, elements: !1208)
!1208 = !{!1209, !1210, !1211, !1212, !1213, !1214, !1215, !1216, !1217, !1218, !1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226}
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_CTL", scope: !1207, file: !56, line: 2759, baseType: !60, size: 32)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DIRECT_CTL", scope: !1207, file: !56, line: 2760, baseType: !60, size: 32, offset: 32)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL", scope: !1207, file: !56, line: 2761, baseType: !60, size: 32, offset: 64)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL2", scope: !1207, file: !56, line: 2762, baseType: !60, size: 32, offset: 96)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_OUTL", scope: !1207, file: !56, line: 2763, baseType: !60, size: 32, offset: 128)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_INL", scope: !1207, file: !56, line: 2764, baseType: !60, size: 32, offset: 160)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_RESET_CTL", scope: !1207, file: !56, line: 2765, baseType: !60, size: 32, offset: 192)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_STA2_CTL", scope: !1207, file: !56, line: 2766, baseType: !60, size: 32, offset: 224)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL1", scope: !1207, file: !56, line: 2767, baseType: !60, size: 32, offset: 256)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL2", scope: !1207, file: !56, line: 2768, baseType: !60, size: 32, offset: 288)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL3", scope: !1207, file: !56, line: 2769, baseType: !60, size: 32, offset: 320)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DUMMY1", scope: !1207, file: !56, line: 2770, baseType: !60, size: 32, offset: 352)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL4", scope: !1207, file: !56, line: 2771, baseType: !60, size: 32, offset: 384)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL5", scope: !1207, file: !56, line: 2772, baseType: !60, size: 32, offset: 416)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL6", scope: !1207, file: !56, line: 2773, baseType: !60, size: 32, offset: 448)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DUMMY2", scope: !1207, file: !56, line: 2774, baseType: !60, size: 32, offset: 480)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DIRECT_CTL2", scope: !1207, file: !56, line: 2775, baseType: !60, size: 32, offset: 512)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL3", scope: !1207, file: !56, line: 2776, baseType: !60, size: 32, offset: 544)
!1227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1228, size: 32)
!1228 = !DIDerivedType(tag: DW_TAG_typedef, name: "SFC_GPRAM_REGISTER_T", file: !56, line: 2801, baseType: !1229)
!1229 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 2798, size: 64, elements: !1230)
!1230 = !{!1231, !1232}
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_GPRAM_DATA", scope: !1229, file: !56, line: 2799, baseType: !60, size: 32)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_GPRAM_DATA_OF_4", scope: !1229, file: !56, line: 2800, baseType: !60, size: 32, offset: 32)
!1233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1234, size: 32)
!1234 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !18)
!1235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1236, size: 32)
!1236 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !62, line: 36, baseType: !1237)
!1237 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint16_t", file: !64, line: 57, baseType: !1238)
!1238 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!1239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1240, size: 32)
!1240 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !465)
!1241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !60, size: 32)
!1242 = !{!1164, !1243, !1245, !1247, !1249, !1251, !1253, !1255, !1257, !1259, !1261}
!1243 = !DIGlobalVariableExpression(var: !1244, expr: !DIExpression())
!1244 = distinct !DIGlobalVariable(name: "NOR_FLASH_LeaveDPDCmd", scope: !1166, file: !1167, line: 604, type: !463, isLocal: false, isDefinition: true)
!1245 = !DIGlobalVariableExpression(var: !1246, expr: !DIExpression())
!1246 = distinct !DIGlobalVariable(name: "NOR_FLASH_FATStartAddr", scope: !1166, file: !1167, line: 605, type: !61, isLocal: false, isDefinition: true)
!1247 = !DIGlobalVariableExpression(var: !1248, expr: !DIExpression())
!1248 = distinct !DIGlobalVariable(name: "NOR_FLASH_FATStartValue", scope: !1166, file: !1167, line: 606, type: !61, isLocal: false, isDefinition: true)
!1249 = !DIGlobalVariableExpression(var: !1250, expr: !DIExpression())
!1250 = distinct !DIGlobalVariable(name: "SFI_MAC_CTL_BACKUP", scope: !1166, file: !1167, line: 607, type: !61, isLocal: false, isDefinition: true)
!1251 = !DIGlobalVariableExpression(var: !1252, expr: !DIExpression())
!1252 = distinct !DIGlobalVariable(name: "SFI_DIRECT_CTL_BACKUP", scope: !1166, file: !1167, line: 608, type: !61, isLocal: false, isDefinition: true)
!1253 = !DIGlobalVariableExpression(var: !1254, expr: !DIExpression())
!1254 = distinct !DIGlobalVariable(name: "SFI_MISC_CTL_BACKUP", scope: !1166, file: !1167, line: 609, type: !61, isLocal: false, isDefinition: true)
!1255 = !DIGlobalVariableExpression(var: !1256, expr: !DIExpression())
!1256 = distinct !DIGlobalVariable(name: "SFI_MISC_CTL2_BACKUP", scope: !1166, file: !1167, line: 610, type: !61, isLocal: false, isDefinition: true)
!1257 = !DIGlobalVariableExpression(var: !1258, expr: !DIExpression())
!1258 = distinct !DIGlobalVariable(name: "SFI_DLY_CTL_3_BACKUP", scope: !1166, file: !1167, line: 611, type: !61, isLocal: false, isDefinition: true)
!1259 = !DIGlobalVariableExpression(var: !1260, expr: !DIExpression())
!1260 = distinct !DIGlobalVariable(name: "SFI_CLK_SWITCH_MISC_CTL_BACKUP", scope: !1166, file: !1167, line: 665, type: !61, isLocal: false, isDefinition: true)
!1261 = !DIGlobalVariableExpression(var: !1262, expr: !DIExpression())
!1262 = distinct !DIGlobalVariable(name: "SFI_CLK_SWITCH_DLY_CTL_3_BACKUP", scope: !1166, file: !1167, line: 666, type: !61, isLocal: false, isDefinition: true)
!1263 = !DIGlobalVariableExpression(var: !1264, expr: !DIExpression())
!1264 = distinct !DIGlobalVariable(name: "sf_dal_brbusy_wait", scope: !1265, file: !1266, line: 334, type: !91, isLocal: false, isDefinition: true)
!1265 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1266, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1267, retainedTypes: !1435, globals: !1575, splitDebugInlining: false, nameTableKind: None)
!1266 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_mtd_dal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/uart_loopback_data_dma/GCC")
!1267 = !{!1268, !1359, !1365, !1372, !1384, !1395, !1404, !1413, !1417, !1421}
!1268 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1269, line: 58, baseType: !7, size: 32, elements: !1270)
!1269 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_fs_type.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/uart_loopback_data_dma/GCC")
!1270 = !{!1271, !1272, !1273, !1274, !1275, !1276, !1277, !1278, !1279, !1280, !1281, !1282, !1283, !1284, !1285, !1286, !1287, !1288, !1289, !1290, !1291, !1292, !1293, !1294, !1295, !1296, !1297, !1298, !1299, !1300, !1301, !1302, !1303, !1304, !1305, !1306, !1307, !1308, !1309, !1310, !1311, !1312, !1313, !1314, !1315, !1316, !1317, !1318, !1319, !1320, !1321, !1322, !1323, !1324, !1325, !1326, !1327, !1328, !1329, !1330, !1331, !1332, !1333, !1334, !1335, !1336, !1337, !1338, !1339, !1340, !1341, !1342, !1343, !1344, !1345, !1346, !1347, !1348, !1349, !1350, !1351, !1352, !1353, !1354, !1355, !1356, !1357, !1358}
!1271 = !DIEnumerator(name: "FS_NO_ERROR", value: 0)
!1272 = !DIEnumerator(name: "FS_ERROR_RESERVED", value: -1)
!1273 = !DIEnumerator(name: "FS_PARAM_ERROR", value: -2)
!1274 = !DIEnumerator(name: "FS_INVALID_FILENAME", value: -3)
!1275 = !DIEnumerator(name: "FS_DRIVE_NOT_FOUND", value: -4)
!1276 = !DIEnumerator(name: "FS_TOO_MANY_FILES", value: -5)
!1277 = !DIEnumerator(name: "FS_NO_MORE_FILES", value: -6)
!1278 = !DIEnumerator(name: "FS_WRONG_MEDIA", value: -7)
!1279 = !DIEnumerator(name: "FS_INVALID_FILE_SYSTEM", value: -8)
!1280 = !DIEnumerator(name: "FS_FILE_NOT_FOUND", value: -9)
!1281 = !DIEnumerator(name: "FS_INVALID_FILE_HANDLE", value: -10)
!1282 = !DIEnumerator(name: "FS_UNSUPPORTED_DEVICE", value: -11)
!1283 = !DIEnumerator(name: "FS_UNSUPPORTED_DRIVER_FUNCTION", value: -12)
!1284 = !DIEnumerator(name: "FS_CORRUPTED_PARTITION_TABLE", value: -13)
!1285 = !DIEnumerator(name: "FS_TOO_MANY_DRIVES", value: -14)
!1286 = !DIEnumerator(name: "FS_INVALID_FILE_POS", value: -15)
!1287 = !DIEnumerator(name: "FS_ACCESS_DENIED", value: -16)
!1288 = !DIEnumerator(name: "FS_STRING_BUFFER_TOO_SMALL", value: -17)
!1289 = !DIEnumerator(name: "FS_GENERAL_FAILURE", value: -18)
!1290 = !DIEnumerator(name: "FS_PATH_NOT_FOUND", value: -19)
!1291 = !DIEnumerator(name: "FS_FAT_ALLOC_ERROR", value: -20)
!1292 = !DIEnumerator(name: "FS_ROOT_DIR_FULL", value: -21)
!1293 = !DIEnumerator(name: "FS_DISK_FULL", value: -22)
!1294 = !DIEnumerator(name: "FS_TIMEOUT", value: -23)
!1295 = !DIEnumerator(name: "FS_BAD_SECTOR", value: -24)
!1296 = !DIEnumerator(name: "FS_DATA_ERROR", value: -25)
!1297 = !DIEnumerator(name: "FS_MEDIA_CHANGED", value: -26)
!1298 = !DIEnumerator(name: "FS_SECTOR_NOT_FOUND", value: -27)
!1299 = !DIEnumerator(name: "FS_ADDRESS_MARK_NOT_FOUND", value: -28)
!1300 = !DIEnumerator(name: "FS_DRIVE_NOT_READY", value: -29)
!1301 = !DIEnumerator(name: "FS_WRITE_PROTECTION", value: -30)
!1302 = !DIEnumerator(name: "FS_DMA_OVERRUN", value: -31)
!1303 = !DIEnumerator(name: "FS_CRC_ERROR", value: -32)
!1304 = !DIEnumerator(name: "FS_DEVICE_RESOURCE_ERROR", value: -33)
!1305 = !DIEnumerator(name: "FS_INVALID_SECTOR_SIZE", value: -34)
!1306 = !DIEnumerator(name: "FS_OUT_OF_BUFFERS", value: -35)
!1307 = !DIEnumerator(name: "FS_FILE_EXISTS", value: -36)
!1308 = !DIEnumerator(name: "FS_LONG_FILE_POS", value: -37)
!1309 = !DIEnumerator(name: "FS_FILE_TOO_LARGE", value: -38)
!1310 = !DIEnumerator(name: "FS_BAD_DIR_ENTRY", value: -39)
!1311 = !DIEnumerator(name: "FS_ATTR_CONFLICT", value: -40)
!1312 = !DIEnumerator(name: "FS_CHECKDISK_RETRY", value: -41)
!1313 = !DIEnumerator(name: "FS_LACK_OF_PROTECTION_SPACE", value: -42)
!1314 = !DIEnumerator(name: "FS_SYSTEM_CRASH", value: -43)
!1315 = !DIEnumerator(name: "FS_FAIL_GET_MEM", value: -44)
!1316 = !DIEnumerator(name: "FS_READ_ONLY_ERROR", value: -45)
!1317 = !DIEnumerator(name: "FS_DEVICE_BUSY", value: -46)
!1318 = !DIEnumerator(name: "FS_ABORTED_ERROR", value: -47)
!1319 = !DIEnumerator(name: "FS_QUOTA_OVER_DISK_SPACE", value: -48)
!1320 = !DIEnumerator(name: "FS_PATH_OVER_LEN_ERROR", value: -49)
!1321 = !DIEnumerator(name: "FS_APP_QUOTA_FULL", value: -50)
!1322 = !DIEnumerator(name: "FS_VF_MAP_ERROR", value: -51)
!1323 = !DIEnumerator(name: "FS_DEVICE_EXPORTED_ERROR", value: -52)
!1324 = !DIEnumerator(name: "FS_DISK_FRAGMENT", value: -53)
!1325 = !DIEnumerator(name: "FS_DIRCACHE_EXPIRED", value: -54)
!1326 = !DIEnumerator(name: "FS_QUOTA_USAGE_WARNING", value: -55)
!1327 = !DIEnumerator(name: "FS_ERR_DIRDATA_LOCKED", value: -56)
!1328 = !DIEnumerator(name: "FS_INVALID_OPERATION", value: -57)
!1329 = !DIEnumerator(name: "FS_ERR_VF_PARENT_CLOSED", value: -58)
!1330 = !DIEnumerator(name: "FS_ERR_UNSUPPORTED_SERVICE", value: -59)
!1331 = !DIEnumerator(name: "FS_ERR_INVALID_JOB_ID", value: -81)
!1332 = !DIEnumerator(name: "FS_ERR_ASYNC_JOB_NOT_FOUND", value: -82)
!1333 = !DIEnumerator(name: "FS_MSDC_MOUNT_ERROR", value: -100)
!1334 = !DIEnumerator(name: "FS_MSDC_READ_SECTOR_ERROR", value: -101)
!1335 = !DIEnumerator(name: "FS_MSDC_WRITE_SECTOR_ERROR", value: -102)
!1336 = !DIEnumerator(name: "FS_MSDC_DISCARD_SECTOR_ERROR", value: -103)
!1337 = !DIEnumerator(name: "FS_MSDC_PRESNET_NOT_READY", value: -104)
!1338 = !DIEnumerator(name: "FS_MSDC_NOT_PRESENT", value: -105)
!1339 = !DIEnumerator(name: "FS_EXTERNAL_DEVICE_NOT_PRESENT", value: -106)
!1340 = !DIEnumerator(name: "FS_HIGH_LEVEL_FORMAT_ERROR", value: -107)
!1341 = !DIEnumerator(name: "FS_CARD_BATCHCOUNT_NOT_PRESENT", value: -110)
!1342 = !DIEnumerator(name: "FS_FLASH_MOUNT_ERROR", value: -120)
!1343 = !DIEnumerator(name: "FS_FLASH_ERASE_BUSY", value: -121)
!1344 = !DIEnumerator(name: "FS_NAND_DEVICE_NOT_SUPPORTED", value: -122)
!1345 = !DIEnumerator(name: "FS_FLASH_OTP_UNKNOWERR", value: -123)
!1346 = !DIEnumerator(name: "FS_FLASH_OTP_OVERSCOPE", value: -124)
!1347 = !DIEnumerator(name: "FS_FLASH_OTP_WRITEFAIL", value: -125)
!1348 = !DIEnumerator(name: "FS_FDM_VERSION_MISMATCH", value: -126)
!1349 = !DIEnumerator(name: "FS_FLASH_OTP_LOCK_ALREADY", value: -127)
!1350 = !DIEnumerator(name: "FS_FDM_FORMAT_ERROR", value: -128)
!1351 = !DIEnumerator(name: "FS_FDM_USER_DRIVE_BROKEN", value: -129)
!1352 = !DIEnumerator(name: "FS_FDM_SYS_DRIVE_BROKEN", value: -130)
!1353 = !DIEnumerator(name: "FS_FDM_MULTIPLE_BROKEN", value: -131)
!1354 = !DIEnumerator(name: "FS_LOCK_MUTEX_FAIL", value: -141)
!1355 = !DIEnumerator(name: "FS_NO_NONBLOCKMODE", value: -142)
!1356 = !DIEnumerator(name: "FS_NO_PROTECTIONMODE", value: -143)
!1357 = !DIEnumerator(name: "FS_DISK_SIZE_TOO_LARGE", value: -100)
!1358 = !DIEnumerator(name: "FS_MINIMUM_ERROR_CODE", value: -65536)
!1359 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1360, line: 81, baseType: !18, size: 32, elements: !1361)
!1360 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_mtd_sf_dal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/uart_loopback_data_dma/GCC")
!1361 = !{!1362, !1363, !1364}
!1362 = !DIEnumerator(name: "SFDRV_READY", value: 0)
!1363 = !DIEnumerator(name: "SFDRV_PROGRAMMING", value: 1)
!1364 = !DIEnumerator(name: "SFDRV_ERASING", value: 2)
!1365 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1266, line: 298, baseType: !18, size: 32, elements: !1366)
!1366 = !{!1367, !1368, !1369, !1370, !1371}
!1367 = !DIEnumerator(name: "sf_fix_winbond_cv", value: 1)
!1368 = !DIEnumerator(name: "sf_fix_winbond_dw", value: 2)
!1369 = !DIEnumerator(name: "sf_fix_mxic_35e", value: 4)
!1370 = !DIEnumerator(name: "sf_fix_fidelix_q32a", value: 8)
!1371 = !DIEnumerator(name: "sf_fix_gigadevice_b", value: 16)
!1372 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1373, line: 51, baseType: !18, size: 32, elements: !1374)
!1373 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_sf.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/uart_loopback_data_dma/GCC")
!1374 = !{!1375, !1376, !1377, !1378, !1379, !1380, !1381, !1382, !1383}
!1375 = !DIEnumerator(name: "SF_SR_BUSY", value: 0)
!1376 = !DIEnumerator(name: "SF_SR_WEL", value: 1)
!1377 = !DIEnumerator(name: "SF_SR_WSE", value: 2)
!1378 = !DIEnumerator(name: "SF_SR_WSP", value: 3)
!1379 = !DIEnumerator(name: "SF_SR_BP", value: 4)
!1380 = !DIEnumerator(name: "SF_SR_SRWD", value: 5)
!1381 = !DIEnumerator(name: "SF_SR_OTPLOCK", value: 6)
!1382 = !DIEnumerator(name: "SF_SR_FAIL", value: 7)
!1383 = !DIEnumerator(name: "SF_SR_COUNT", value: 8)
!1384 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1385, line: 110, baseType: !7, size: 32, elements: !1386)
!1385 = !DIFile(filename: "../../../../../driver/chip/inc/hal_flash.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/uart_loopback_data_dma/GCC")
!1386 = !{!1387, !1388, !1389, !1390, !1391, !1392, !1393, !1394}
!1387 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_ERASE_FAIL", value: -7)
!1388 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_PROG_FAIL", value: -6)
!1389 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_NO_INIT", value: -5)
!1390 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_NO_SPACE", value: -4)
!1391 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_WRONG_ADDRESS", value: -3)
!1392 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_LOCKED", value: -2)
!1393 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR", value: -1)
!1394 = !DIEnumerator(name: "HAL_FLASH_STATUS_OK", value: 0)
!1395 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1373, line: 73, baseType: !18, size: 32, elements: !1396)
!1396 = !{!1397, !1398, !1399, !1400, !1401, !1402, !1403}
!1397 = !DIEnumerator(name: "SF_MXIC_SR_BUSY", value: 1)
!1398 = !DIEnumerator(name: "SF_MXIC_SR_WEL", value: 2)
!1399 = !DIEnumerator(name: "SF_MXIC_SR_WSE", value: 8)
!1400 = !DIEnumerator(name: "SF_MXIC_SR_WSP", value: 4)
!1401 = !DIEnumerator(name: "SF_MXIC_SR_BP", value: 60)
!1402 = !DIEnumerator(name: "SF_MXIC_SR_SRWD", value: 128)
!1403 = !DIEnumerator(name: "SF_MXIC_SR_ALL", value: 255)
!1404 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1373, line: 83, baseType: !18, size: 32, elements: !1405)
!1405 = !{!1406, !1407, !1408, !1409, !1410, !1411, !1412}
!1406 = !DIEnumerator(name: "SF_MXIC_SSR_OTP", value: 1)
!1407 = !DIEnumerator(name: "SF_MXIC_SSR_LDSO", value: 2)
!1408 = !DIEnumerator(name: "SF_MXIC_SSR_WSP", value: 4)
!1409 = !DIEnumerator(name: "SF_MXIC_SSR_WSE", value: 8)
!1410 = !DIEnumerator(name: "SF_MXIC_SSR_PFAIL", value: 32)
!1411 = !DIEnumerator(name: "SF_MXIC_SSR_EFAIL", value: 64)
!1412 = !DIEnumerator(name: "SF_MXIC_SSR_WPSEL", value: 128)
!1413 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1373, line: 98, baseType: !18, size: 32, elements: !1414)
!1414 = !{!1415, !1416}
!1415 = !DIEnumerator(name: "SF_WINBOND_SSR_SUS", value: 128)
!1416 = !DIEnumerator(name: "SF_WINBOND_SSR_OTP", value: 60)
!1417 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1360, line: 76, baseType: !18, size: 32, elements: !1418)
!1418 = !{!1419, !1420}
!1419 = !DIEnumerator(name: "SF_IOCTRL_UNLOCK_BLOCK", value: 0)
!1420 = !DIEnumerator(name: "SF_IOCTRL_GET_PROGRAM_FAIL_HANDLE_TYPE", value: 1)
!1421 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1360, line: 208, baseType: !18, size: 32, elements: !1422)
!1422 = !{!1423, !1424, !1425, !1426, !1427, !1428, !1429, !1430, !1431, !1432, !1433, !1434}
!1423 = !DIEnumerator(name: "SF_DAL_TYPE_NONE", value: 0)
!1424 = !DIEnumerator(name: "SF_DAL_TYPE_NUMONYX", value: 32)
!1425 = !DIEnumerator(name: "SF_DAL_TYPE_NUMONYX_W", value: 44)
!1426 = !DIEnumerator(name: "SF_DAL_TYPE_EON", value: 28)
!1427 = !DIEnumerator(name: "SF_DAL_TYPE_SST", value: 191)
!1428 = !DIEnumerator(name: "SF_DAL_TYPE_MXIC", value: 194)
!1429 = !DIEnumerator(name: "SF_DAL_TYPE_GIGADEVICE", value: 200)
!1430 = !DIEnumerator(name: "SF_DAL_TYPE_GIGADEVICE_MD", value: 81)
!1431 = !DIEnumerator(name: "SF_DAL_TYPE_WINBOND", value: 239)
!1432 = !DIEnumerator(name: "SF_DAL_TYPE_FIDELIX", value: 248)
!1433 = !DIEnumerator(name: "SF_DAL_TYPE_ESMT", value: 140)
!1434 = !DIEnumerator(name: "SF_DAL_TYPE_COUNT", value: 141)
!1435 = !{!61, !1204, !1235, !969, !1436, !1546, !1568, !88, !1574, !465}
!1436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1437, size: 32)
!1437 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_Data", file: !1360, line: 193, baseType: !1438)
!1438 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1360, line: 134, size: 1824, elements: !1439)
!1439 = !{!1440, !1441, !1442, !1449, !1455, !1459, !1467, !1468, !1475, !1476, !1477, !1478, !1486, !1489, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1540, !1541, !1545}
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !1438, file: !1360, line: 136, baseType: !61, size: 32)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !1438, file: !1360, line: 137, baseType: !969, size: 32, offset: 32)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !1438, file: !1360, line: 138, baseType: !1443, size: 32, offset: 64)
!1443 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !1444, line: 56, baseType: !1445)
!1444 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_kal_public_defs.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/uart_loopback_data_dma/GCC")
!1445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1446, size: 32)
!1446 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1444, line: 54, size: 8, elements: !1447)
!1447 = !{!1448}
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1446, file: !1444, line: 55, baseType: !463, size: 8)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !1438, file: !1360, line: 139, baseType: !1450, size: 32, offset: 96)
!1450 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !1444, line: 46, baseType: !1451)
!1451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1452, size: 32)
!1452 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1444, line: 44, size: 8, elements: !1453)
!1453 = !{!1454}
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1452, file: !1444, line: 45, baseType: !463, size: 8)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !1438, file: !1360, line: 140, baseType: !1456, size: 8, offset: 128)
!1456 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !62, line: 20, baseType: !1457)
!1457 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int8_t", file: !64, line: 41, baseType: !1458)
!1458 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !1438, file: !1360, line: 143, baseType: !1460, size: 32, offset: 160)
!1460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1461, size: 32)
!1461 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !1462, line: 146, baseType: !1463)
!1462 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_drvflash.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/uart_loopback_data_dma/GCC")
!1463 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1462, line: 143, size: 64, elements: !1464)
!1464 = !{!1465, !1466}
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !1463, file: !1462, line: 144, baseType: !61, size: 32)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !1463, file: !1462, line: 145, baseType: !61, size: 32, offset: 32)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !1438, file: !1360, line: 144, baseType: !969, size: 32, offset: 192)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !1438, file: !1360, line: 145, baseType: !1469, size: 32, offset: 224)
!1469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1470, size: 32)
!1470 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !1462, line: 152, baseType: !1471)
!1471 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1462, line: 149, size: 64, elements: !1472)
!1472 = !{!1473, !1474}
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !1471, file: !1462, line: 150, baseType: !61, size: 32)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !1471, file: !1462, line: 151, baseType: !61, size: 32, offset: 32)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !1438, file: !1360, line: 146, baseType: !969, size: 32, offset: 256)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !1438, file: !1360, line: 147, baseType: !61, size: 32, offset: 288)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !1438, file: !1360, line: 148, baseType: !969, size: 32, offset: 320)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !1438, file: !1360, line: 151, baseType: !1479, size: 1024, offset: 352)
!1479 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1480, size: 1024, elements: !1485)
!1480 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !1462, line: 170, baseType: !1481)
!1481 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1462, line: 167, size: 64, elements: !1482)
!1482 = !{!1483, !1484}
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !1481, file: !1462, line: 168, baseType: !61, size: 32)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !1481, file: !1462, line: 169, baseType: !61, size: 32, offset: 32)
!1485 = !{!961, !481}
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "StatusMap", scope: !1438, file: !1360, line: 155, baseType: !1487, size: 32, offset: 1376)
!1487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1488, size: 32)
!1488 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_Status", file: !1373, line: 120, baseType: !463)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "CMD", scope: !1438, file: !1360, line: 156, baseType: !1490, size: 32, offset: 1408)
!1490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1491, size: 32)
!1491 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_CMD", file: !1360, line: 124, baseType: !1492)
!1492 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1360, line: 90, size: 200, elements: !1493)
!1493 = !{!1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518}
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "PageProg", scope: !1492, file: !1360, line: 91, baseType: !463, size: 8)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "WriteEnable", scope: !1492, file: !1360, line: 92, baseType: !463, size: 8, offset: 8)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "Suspend", scope: !1492, file: !1360, line: 94, baseType: !463, size: 8, offset: 16)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "Resume", scope: !1492, file: !1360, line: 95, baseType: !463, size: 8, offset: 24)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "Read", scope: !1492, file: !1360, line: 96, baseType: !463, size: 8, offset: 32)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "Erase", scope: !1492, file: !1360, line: 98, baseType: !463, size: 8, offset: 40)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "Erase4K", scope: !1492, file: !1360, line: 99, baseType: !463, size: 8, offset: 48)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "Erase32K", scope: !1492, file: !1360, line: 100, baseType: !463, size: 8, offset: 56)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "Erase64K", scope: !1492, file: !1360, line: 101, baseType: !463, size: 8, offset: 64)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_SPI", scope: !1492, file: !1360, line: 103, baseType: !463, size: 8, offset: 72)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_QPI", scope: !1492, file: !1360, line: 104, baseType: !463, size: 8, offset: 80)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "ReadBPReg", scope: !1492, file: !1360, line: 106, baseType: !463, size: 8, offset: 88)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "WriteBPReg", scope: !1492, file: !1360, line: 107, baseType: !463, size: 8, offset: 96)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSecurityReg", scope: !1492, file: !1360, line: 108, baseType: !463, size: 8, offset: 104)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "WriteSecurityReg", scope: !1492, file: !1360, line: 109, baseType: !463, size: 8, offset: 112)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSuspendReg", scope: !1492, file: !1360, line: 110, baseType: !463, size: 8, offset: 120)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "ReadReadyReg", scope: !1492, file: !1360, line: 111, baseType: !463, size: 8, offset: 128)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "ReadFailReg", scope: !1492, file: !1360, line: 112, baseType: !463, size: 8, offset: 136)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "EnterDPD", scope: !1492, file: !1360, line: 114, baseType: !463, size: 8, offset: 144)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "LeaveDPD", scope: !1492, file: !1360, line: 115, baseType: !463, size: 8, offset: 152)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "OTPProg", scope: !1492, file: !1360, line: 118, baseType: !463, size: 8, offset: 160)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !1492, file: !1360, line: 119, baseType: !463, size: 8, offset: 168)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "OTPEnter", scope: !1492, file: !1360, line: 120, baseType: !463, size: 8, offset: 176)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "OTPExit", scope: !1492, file: !1360, line: 121, baseType: !463, size: 8, offset: 184)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !1492, file: !1360, line: 122, baseType: !463, size: 8, offset: 192)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "Flag", scope: !1438, file: !1360, line: 157, baseType: !61, size: 32, offset: 1440)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "BPRBitCount", scope: !1438, file: !1360, line: 158, baseType: !1236, size: 16, offset: 1472)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "UniformBlock", scope: !1438, file: !1360, line: 159, baseType: !1236, size: 16, offset: 1488)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLength", scope: !1438, file: !1360, line: 163, baseType: !1236, size: 16, offset: 1504)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "OTPBase", scope: !1438, file: !1360, line: 164, baseType: !1236, size: 16, offset: 1520)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendLatency", scope: !1438, file: !1360, line: 167, baseType: !463, size: 8, offset: 1536)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "FlashID", scope: !1438, file: !1360, line: 168, baseType: !1526, size: 24, offset: 1544)
!1526 = !DICompositeType(tag: DW_TAG_array_type, baseType: !463, size: 24, elements: !1527)
!1527 = !{!1528}
!1528 = !DISubrange(count: 3)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "DriverStatus", scope: !1438, file: !1360, line: 169, baseType: !463, size: 8, offset: 1568)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "AddressCycle", scope: !1438, file: !1360, line: 170, baseType: !463, size: 8, offset: 1576)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "CS", scope: !1438, file: !1360, line: 173, baseType: !1236, size: 16, offset: 1584)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "sf_dal_fix", scope: !1438, file: !1360, line: 174, baseType: !61, size: 32, offset: 1600)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "CS_Size", scope: !1438, file: !1360, line: 175, baseType: !61, size: 32, offset: 1632)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_BUSY", scope: !1438, file: !1360, line: 178, baseType: !91, size: 8, offset: 1664)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_SUSPENDED", scope: !1438, file: !1360, line: 179, baseType: !91, size: 8, offset: 1672)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "UnlockBlock", scope: !1438, file: !1360, line: 182, baseType: !1537, size: 32, offset: 1696)
!1537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1538, size: 32)
!1538 = !DISubroutineType(types: !1539)
!1539 = !{!7, !88}
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !1438, file: !1360, line: 186, baseType: !1537, size: 32, offset: 1728)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !1438, file: !1360, line: 187, baseType: !1542, size: 32, offset: 1760)
!1542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1543, size: 32)
!1543 = !DISubroutineType(types: !1544)
!1544 = !{!7, !88, !61, !88, !61}
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "OTPWrite", scope: !1438, file: !1360, line: 188, baseType: !1542, size: 32, offset: 1792)
!1546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1547, size: 32)
!1547 = !DIDerivedType(tag: DW_TAG_typedef, name: "SFC_REGISTER_T", file: !56, line: 2777, baseType: !1548)
!1548 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 2758, size: 576, elements: !1549)
!1549 = !{!1550, !1551, !1552, !1553, !1554, !1555, !1556, !1557, !1558, !1559, !1560, !1561, !1562, !1563, !1564, !1565, !1566, !1567}
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_CTL", scope: !1548, file: !56, line: 2759, baseType: !60, size: 32)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DIRECT_CTL", scope: !1548, file: !56, line: 2760, baseType: !60, size: 32, offset: 32)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL", scope: !1548, file: !56, line: 2761, baseType: !60, size: 32, offset: 64)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL2", scope: !1548, file: !56, line: 2762, baseType: !60, size: 32, offset: 96)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_OUTL", scope: !1548, file: !56, line: 2763, baseType: !60, size: 32, offset: 128)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_INL", scope: !1548, file: !56, line: 2764, baseType: !60, size: 32, offset: 160)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_RESET_CTL", scope: !1548, file: !56, line: 2765, baseType: !60, size: 32, offset: 192)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_STA2_CTL", scope: !1548, file: !56, line: 2766, baseType: !60, size: 32, offset: 224)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL1", scope: !1548, file: !56, line: 2767, baseType: !60, size: 32, offset: 256)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL2", scope: !1548, file: !56, line: 2768, baseType: !60, size: 32, offset: 288)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL3", scope: !1548, file: !56, line: 2769, baseType: !60, size: 32, offset: 320)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DUMMY1", scope: !1548, file: !56, line: 2770, baseType: !60, size: 32, offset: 352)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL4", scope: !1548, file: !56, line: 2771, baseType: !60, size: 32, offset: 384)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL5", scope: !1548, file: !56, line: 2772, baseType: !60, size: 32, offset: 416)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL6", scope: !1548, file: !56, line: 2773, baseType: !60, size: 32, offset: 448)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DUMMY2", scope: !1548, file: !56, line: 2774, baseType: !60, size: 32, offset: 480)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DIRECT_CTL2", scope: !1548, file: !56, line: 2775, baseType: !60, size: 32, offset: 512)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL3", scope: !1548, file: !56, line: 2776, baseType: !60, size: 32, offset: 544)
!1568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1569, size: 32)
!1569 = !DIDerivedType(tag: DW_TAG_typedef, name: "SFC_GPRAM_REGISTER_T", file: !56, line: 2801, baseType: !1570)
!1570 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 2798, size: 64, elements: !1571)
!1571 = !{!1572, !1573}
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_GPRAM_DATA", scope: !1570, file: !56, line: 2799, baseType: !60, size: 32)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_GPRAM_DATA_OF_4", scope: !1570, file: !56, line: 2800, baseType: !60, size: 32, offset: 32)
!1574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !550, size: 32)
!1575 = !{!1263, !1576, !1578, !1580, !1585}
!1576 = !DIGlobalVariableExpression(var: !1577, expr: !DIExpression())
!1577 = distinct !DIGlobalVariable(name: "sf_dal_resume_time", scope: !1265, file: !1266, line: 382, type: !61, isLocal: false, isDefinition: true)
!1578 = !DIGlobalVariableExpression(var: !1579, expr: !DIExpression())
!1579 = distinct !DIGlobalVariable(name: "sf_dal_flash_return_ready_max", scope: !1265, file: !1266, line: 383, type: !61, isLocal: false, isDefinition: true)
!1580 = !DIGlobalVariableExpression(var: !1581, expr: !DIExpression())
!1581 = distinct !DIGlobalVariable(name: "tmp_data_buffer", scope: !1265, file: !1266, line: 369, type: !1582, isLocal: true, isDefinition: true)
!1582 = !DICompositeType(tag: DW_TAG_array_type, baseType: !463, size: 1024, elements: !1583)
!1583 = !{!1584}
!1584 = !DISubrange(count: 128)
!1585 = !DIGlobalVariableExpression(var: !1586, expr: !DIExpression())
!1586 = distinct !DIGlobalVariable(name: "MTDMutex", scope: !1265, file: !1266, line: 1409, type: !7, isLocal: true, isDefinition: true)
!1587 = !DIGlobalVariableExpression(var: !1586, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 18446744073709551615, DW_OP_mul, DW_OP_constu, 1, DW_OP_plus, DW_OP_stack_value))
!1588 = !DIGlobalVariableExpression(var: !1589, expr: !DIExpression())
!1589 = distinct !DIGlobalVariable(name: "combo_mem_id_list", scope: !1590, file: !1644, line: 35, type: !1645, isLocal: false, isDefinition: true)
!1590 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1591, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1592, retainedTypes: !424, globals: !1638, splitDebugInlining: false, nameTableKind: None)
!1591 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_combo_init.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/uart_loopback_data_dma/GCC")
!1592 = !{!1593}
!1593 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1594, line: 77, baseType: !18, size: 32, elements: !1595)
!1594 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_general_types.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/uart_loopback_data_dma/GCC")
!1595 = !{!1596, !1597, !1598, !1599, !1600, !1601, !1602, !1603, !1604, !1605, !1606, !1607, !1608, !1609, !1610, !1611, !1612, !1613, !1614, !1615, !1616, !1617, !1618, !1619, !1620, !1621, !1622, !1623, !1624, !1625, !1626, !1627, !1628, !1629, !1630, !1631, !1632, !1633, !1634, !1635, !1636, !1637}
!1596 = !DIEnumerator(name: "GFH_FILE_INFO", value: 0)
!1597 = !DIEnumerator(name: "GFH_BL_INFO", value: 1)
!1598 = !DIEnumerator(name: "GFH_ANTI_CLONE", value: 2)
!1599 = !DIEnumerator(name: "GFH_BL_SEC_KEY", value: 3)
!1600 = !DIEnumerator(name: "GFH_SCTRL_CERT", value: 4)
!1601 = !DIEnumerator(name: "GFH_TOOL_AUTH", value: 5)
!1602 = !DIEnumerator(name: "GFH_MTK_RESERVED1", value: 6)
!1603 = !DIEnumerator(name: "GFH_BROM_CFG", value: 7)
!1604 = !DIEnumerator(name: "GFH_BROM_SEC_CFG", value: 8)
!1605 = !DIEnumerator(name: "GFH_MTK_RESERVED2", value: 9)
!1606 = !DIEnumerator(name: "GFH_MTK_RESERVED3", value: 10)
!1607 = !DIEnumerator(name: "GFH_ROOT_CERT", value: 11)
!1608 = !DIEnumerator(name: "GFH_EXP_CHK", value: 12)
!1609 = !DIEnumerator(name: "GFH_EPP_PARAM", value: 13)
!1610 = !DIEnumerator(name: "GFH_CHIP_VER", value: 14)
!1611 = !DIEnumerator(name: "GFH_MTK_RESERVED4", value: 15)
!1612 = !DIEnumerator(name: "GFH_MD_SEC_CFG", value: 16)
!1613 = !DIEnumerator(name: "GFH_EPP_INFO", value: 256)
!1614 = !DIEnumerator(name: "GFH_EMI_LIST", value: 257)
!1615 = !DIEnumerator(name: "GFH_CMEM_ID_INFO", value: 258)
!1616 = !DIEnumerator(name: "GFH_CMEM_NOR_INFO", value: 259)
!1617 = !DIEnumerator(name: "GFH_DSP_INFO", value: 260)
!1618 = !DIEnumerator(name: "GFH_MAUI_INFO", value: 512)
!1619 = !DIEnumerator(name: "GFH_MAUI_SEC", value: 513)
!1620 = !DIEnumerator(name: "GFH_MAUI_CODE_KEY", value: 514)
!1621 = !DIEnumerator(name: "GFH_MAUI_SECURE_RO_KEY", value: 515)
!1622 = !DIEnumerator(name: "GFH_MAUI_RESOURCE_KEY", value: 516)
!1623 = !DIEnumerator(name: "GFH_SECURE_RO_INFO", value: 517)
!1624 = !DIEnumerator(name: "GFH_DL_PACKAGE_INFO", value: 518)
!1625 = !DIEnumerator(name: "GFH_FLASH_INFO", value: 519)
!1626 = !DIEnumerator(name: "GFH_MACR_INFO", value: 520)
!1627 = !DIEnumerator(name: "GFH_ARM_BL_INFO", value: 521)
!1628 = !DIEnumerator(name: "GFH_EMMC_BOOTING_INFO", value: 522)
!1629 = !DIEnumerator(name: "GFH_FOTA_INFO", value: 523)
!1630 = !DIEnumerator(name: "GFH_CBR_RECORD_INFO", value: 524)
!1631 = !DIEnumerator(name: "GFH_CONFIDENTIAL_BIN_INFO", value: 525)
!1632 = !DIEnumerator(name: "GFH_CBR_INFO", value: 526)
!1633 = !DIEnumerator(name: "GFH_MBA_INFO", value: 527)
!1634 = !DIEnumerator(name: "GFH_BINARY_LOCATION", value: 528)
!1635 = !DIEnumerator(name: "GFH_BOOT_CERT_CTRL_CONTENT", value: 768)
!1636 = !DIEnumerator(name: "GFH_TYPE_NUM", value: 769)
!1637 = !DIEnumerator(name: "GFH_TYPE_END", value: 65535)
!1638 = !{!1588, !1639, !1642}
!1639 = !DIGlobalVariableExpression(var: !1640, expr: !DIExpression())
!1640 = distinct !DIGlobalVariable(name: "cmem_index", scope: !1590, file: !1591, line: 96, type: !1641, isLocal: true, isDefinition: true)
!1641 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1642 = !DIGlobalVariableExpression(var: !1643, expr: !DIExpression())
!1643 = distinct !DIGlobalVariable(name: "cmem_emiinit_index", scope: !1590, file: !1591, line: 94, type: !1641, isLocal: true, isDefinition: true)
!1644 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_combo_id.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/uart_loopback_data_dma/GCC")
!1645 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1646)
!1646 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_CMEM_ID_INFO_v1", file: !1591, line: 54, baseType: !1647)
!1647 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1591, line: 51, size: 576, elements: !1648)
!1648 = !{!1649, !1659}
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "m_gfh_hdr", scope: !1647, file: !1591, line: 52, baseType: !1650, size: 96)
!1650 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_Header", file: !1594, line: 152, baseType: !1651)
!1651 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GFH_Header", file: !1594, line: 144, size: 96, elements: !1652)
!1652 = !{!1653, !1655, !1657}
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "m_magic_ver", scope: !1651, file: !1594, line: 145, baseType: !1654, size: 32)
!1654 = !DIDerivedType(tag: DW_TAG_typedef, name: "U32", file: !1594, line: 61, baseType: !18)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "m_size", scope: !1651, file: !1594, line: 146, baseType: !1656, size: 16, offset: 32)
!1656 = !DIDerivedType(tag: DW_TAG_typedef, name: "U16", file: !1594, line: 62, baseType: !1238)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "m_type", scope: !1651, file: !1594, line: 150, baseType: !1658, size: 32, offset: 64)
!1658 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_TYPE", file: !1594, line: 127, baseType: !1593)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "m_data", scope: !1647, file: !1591, line: 53, baseType: !1660, size: 480, offset: 96)
!1660 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryIDList", file: !1661, line: 107, baseType: !1662)
!1661 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_combo_defs.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/uart_loopback_data_dma/GCC")
!1662 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1661, line: 103, size: 480, elements: !1663)
!1663 = !{!1664, !1665, !1666}
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "m_ver", scope: !1662, file: !1661, line: 104, baseType: !18, size: 32)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "Count", scope: !1662, file: !1661, line: 105, baseType: !18, size: 32, offset: 32)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "List", scope: !1662, file: !1661, line: 106, baseType: !1667, size: 400, offset: 64)
!1667 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1668, size: 400, elements: !1109)
!1668 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryID", file: !1661, line: 100, baseType: !1669)
!1669 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1661, line: 92, size: 80, elements: !1670)
!1670 = !{!1671, !1672, !1673}
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceType", scope: !1669, file: !1661, line: 93, baseType: !463, size: 8)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "IDLength", scope: !1669, file: !1661, line: 94, baseType: !463, size: 8, offset: 8)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "ID", scope: !1669, file: !1661, line: 96, baseType: !1674, size: 64, offset: 16)
!1674 = !DICompositeType(tag: DW_TAG_array_type, baseType: !463, size: 64, elements: !960)
!1675 = !DIGlobalVariableExpression(var: !1676, expr: !DIExpression())
!1676 = distinct !DIGlobalVariable(name: "FLASH_ID", scope: !1677, file: !1680, line: 96, type: !1681, isLocal: false, isDefinition: true)
!1677 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1678, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !1679, splitDebugInlining: false, nameTableKind: None)
!1678 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_custom.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/uart_loopback_data_dma/GCC")
!1679 = !{!1675}
!1680 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_custom.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/uart_loopback_data_dma/GCC")
!1681 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1682, size: 152, elements: !1684)
!1682 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1683)
!1683 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!1684 = !{!1685}
!1685 = !DISubrange(count: 19)
!1686 = !DIGlobalVariableExpression(var: !1687, expr: !DIExpression())
!1687 = distinct !DIGlobalVariable(name: "nor_egid", scope: !1688, file: !1689, line: 168, type: !2039, isLocal: false, isDefinition: true)
!1688 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1689, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1690, retainedTypes: !1701, globals: !1710, splitDebugInlining: false, nameTableKind: None)
!1689 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_combo_nor.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/uart_loopback_data_dma/GCC")
!1690 = !{!1691, !1268, !1593}
!1691 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1692, line: 49, baseType: !18, size: 32, elements: !1693)
!1692 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_combo_init.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/uart_loopback_data_dma/GCC")
!1693 = !{!1694, !1695, !1696, !1697, !1698, !1699, !1700}
!1694 = !DIEnumerator(name: "CMEM_NO_ERROR", value: 0)
!1695 = !DIEnumerator(name: "CMEM_ERR_ID_NOT_FOUND", value: 1)
!1696 = !DIEnumerator(name: "CMEM_ERR_FDM_MISMATCH", value: 2)
!1697 = !DIEnumerator(name: "CMEM_ERR_MTD_MISMATCH", value: 3)
!1698 = !DIEnumerator(name: "CMEM_ERR_FDM_INIT_FAIL", value: 4)
!1699 = !DIEnumerator(name: "CMEM_ERR_MTD_INIT_FAIL", value: 5)
!1700 = !DIEnumerator(name: "CMEM_ERR_FDM_REGION_INFO_OVERFLOW", value: 6)
!1701 = !{!1702, !61, !1704}
!1702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1703, size: 32)
!1703 = !DIDerivedType(tag: DW_TAG_typedef, name: "BYTE", file: !1269, line: 47, baseType: !465)
!1704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1705, size: 32)
!1705 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !1462, line: 146, baseType: !1706)
!1706 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1462, line: 143, size: 64, elements: !1707)
!1707 = !{!1708, !1709}
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !1706, file: !1462, line: 144, baseType: !61, size: 32)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !1706, file: !1462, line: 145, baseType: !61, size: 32, offset: 32)
!1710 = !{!1686, !1711, !1713, !1723, !1860, !1862, !1864, !1866, !1868, !1873, !1876, !1885, !1887, !1889, !1897, !1899, !1901, !1984, !1987, !1989, !1991, !2002, !2004, !2017}
!1711 = !DIGlobalVariableExpression(var: !1712, expr: !DIExpression())
!1712 = distinct !DIGlobalVariable(name: "cmem_nor_index", scope: !1688, file: !1689, line: 94, type: !1144, isLocal: true, isDefinition: true)
!1713 = !DIGlobalVariableExpression(var: !1714, expr: !DIExpression())
!1714 = distinct !DIGlobalVariable(name: "cmem_id", scope: !1688, file: !1689, line: 95, type: !1715, isLocal: false, isDefinition: true)
!1715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1716, size: 32)
!1716 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1717)
!1717 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryID", file: !1661, line: 100, baseType: !1718)
!1718 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1661, line: 92, size: 80, elements: !1719)
!1719 = !{!1720, !1721, !1722}
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceType", scope: !1718, file: !1661, line: 93, baseType: !463, size: 8)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "IDLength", scope: !1718, file: !1661, line: 94, baseType: !463, size: 8, offset: 8)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "ID", scope: !1718, file: !1661, line: 96, baseType: !1674, size: 64, offset: 16)
!1723 = !DIGlobalVariableExpression(var: !1724, expr: !DIExpression())
!1724 = distinct !DIGlobalVariable(name: "FlashDriveData", scope: !1688, file: !1689, line: 127, type: !1725, isLocal: false, isDefinition: true)
!1725 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_FLASH_DRV_Data", file: !1462, line: 317, baseType: !1726)
!1726 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "NOR_FLASH_DRV_Data", file: !1462, line: 237, size: 2720, elements: !1727)
!1727 = !{!1728, !1729, !1781, !1782, !1785, !1786, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816, !1817, !1818, !1819, !1820, !1827, !1828, !1829, !1834, !1835, !1836, !1837, !1838, !1842, !1846, !1853, !1854, !1855, !1856, !1857, !1858, !1859}
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "TotalFATSectors", scope: !1726, file: !1462, line: 238, baseType: !61, size: 32)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "MTDDriver", scope: !1726, file: !1462, line: 239, baseType: !1730, size: 32, offset: 32)
!1730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1731, size: 32)
!1731 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_Driver", file: !1462, line: 121, baseType: !1732)
!1732 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1462, line: 105, size: 480, elements: !1733)
!1733 = !{!1734, !1738, !1739, !1743, !1747, !1751, !1752, !1756, !1757, !1758, !1759, !1764, !1769, !1773, !1777}
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "MountDevice", scope: !1732, file: !1462, line: 106, baseType: !1735, size: 32)
!1735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1736, size: 32)
!1736 = !DISubroutineType(types: !1737)
!1737 = !{!7, !88, !88}
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "ShutDown", scope: !1732, file: !1462, line: 107, baseType: !1537, size: 32, offset: 32)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "MapWindow", scope: !1732, file: !1462, line: 108, baseType: !1740, size: 32, offset: 64)
!1740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1741, size: 32)
!1741 = !DISubroutineType(types: !1742)
!1742 = !{!88, !88, !61, !61}
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "EraseBlock", scope: !1732, file: !1462, line: 109, baseType: !1744, size: 32, offset: 96)
!1744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1745, size: 32)
!1745 = !DISubroutineType(types: !1746)
!1746 = !{!7, !88, !61}
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramData", scope: !1732, file: !1462, line: 110, baseType: !1748, size: 32, offset: 128)
!1748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1749, size: 32)
!1749 = !DISubroutineType(types: !1750)
!1750 = !{!7, !88, !88, !88, !61}
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "NonBlockEraseBlock", scope: !1732, file: !1462, line: 111, baseType: !1744, size: 32, offset: 160)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "CheckDeviceReady", scope: !1732, file: !1462, line: 112, baseType: !1753, size: 32, offset: 192)
!1753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1754, size: 32)
!1754 = !DISubroutineType(types: !1755)
!1755 = !{!1144, !88, !61}
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendErase", scope: !1732, file: !1462, line: 113, baseType: !1744, size: 32, offset: 224)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "ResumeErase", scope: !1732, file: !1462, line: 114, baseType: !1744, size: 32, offset: 256)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "BlankCheck", scope: !1732, file: !1462, line: 115, baseType: !1744, size: 32, offset: 288)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "OTPAccess", scope: !1732, file: !1462, line: 116, baseType: !1760, size: 32, offset: 320)
!1760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1761, size: 32)
!1761 = !DISubroutineType(types: !1762)
!1762 = !{!7, !88, !7, !1763, !88, !1763}
!1763 = !DIDerivedType(tag: DW_TAG_typedef, name: "UINT", file: !1269, line: 50, baseType: !18)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "OTPQueryLength", scope: !1732, file: !1462, line: 117, baseType: !1765, size: 32, offset: 352)
!1765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1766, size: 32)
!1766 = !DISubroutineType(types: !1767)
!1767 = !{!7, !88, !1768}
!1768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1763, size: 32)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "LockEraseBlkAddr", scope: !1732, file: !1462, line: 118, baseType: !1770, size: 32, offset: 384)
!1770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1771, size: 32)
!1771 = !DISubroutineType(types: !1772)
!1772 = !{!7, !88, !88, !61}
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "IsEraseSuspended", scope: !1732, file: !1462, line: 119, baseType: !1774, size: 32, offset: 416)
!1774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1775, size: 32)
!1775 = !DISubroutineType(types: !1776)
!1776 = !{!91, !88, !61}
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "IOCtrl", scope: !1732, file: !1462, line: 120, baseType: !1778, size: 32, offset: 448)
!1778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1779, size: 32)
!1779 = !DISubroutineType(types: !1780)
!1780 = !{!7, !88, !61, !88}
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "MTDData", scope: !1726, file: !1462, line: 240, baseType: !88, size: 32, offset: 64)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "AvailSectorsInBlock", scope: !1726, file: !1462, line: 241, baseType: !1783, size: 32, offset: 96)
!1783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1784, size: 32)
!1784 = !DIDerivedType(tag: DW_TAG_typedef, name: "WORD", file: !1269, line: 46, baseType: !1238)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "ValidSectorsInBlock", scope: !1726, file: !1462, line: 242, baseType: !1783, size: 32, offset: 128)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "FlashInfo", scope: !1726, file: !1462, line: 243, baseType: !1787, size: 928, offset: 160)
!1787 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_FlashInfo", file: !1462, line: 99, baseType: !1788)
!1788 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1462, line: 90, size: 928, elements: !1789)
!1789 = !{!1790, !1791, !1793, !1794, !1795, !1796, !1797, !1798}
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "TotalBlocks", scope: !1788, file: !1462, line: 91, baseType: !61, size: 32)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !1788, file: !1462, line: 92, baseType: !1792, size: 256, offset: 32)
!1792 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 256, elements: !960)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "AvailInRegion", scope: !1788, file: !1462, line: 93, baseType: !1792, size: 256, offset: 288)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !1788, file: !1462, line: 94, baseType: !1792, size: 256, offset: 544)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "ActualRegionNum", scope: !1788, file: !1462, line: 95, baseType: !61, size: 32, offset: 800)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "PageSize", scope: !1788, file: !1462, line: 96, baseType: !1784, size: 16, offset: 832)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "baseUnlockBlock", scope: !1788, file: !1462, line: 97, baseType: !61, size: 32, offset: 864)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "endUnlockBlock", scope: !1788, file: !1462, line: 98, baseType: !61, size: 32, offset: 896)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "HeaderSize", scope: !1726, file: !1462, line: 244, baseType: !1792, size: 256, offset: 1088)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "SectorsPerBlock", scope: !1726, file: !1462, line: 245, baseType: !1792, size: 256, offset: 1344)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "ActiveBlock", scope: !1726, file: !1462, line: 246, baseType: !61, size: 32, offset: 1600)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "ReclaimEraseCount", scope: !1726, file: !1462, line: 247, baseType: !61, size: 32, offset: 1632)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "ReclaimBlockID", scope: !1726, file: !1462, line: 248, baseType: !61, size: 32, offset: 1664)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "TotalPhysicalSectors", scope: !1726, file: !1462, line: 249, baseType: !61, size: 32, offset: 1696)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "PartitionSectors", scope: !1726, file: !1462, line: 250, baseType: !61, size: 32, offset: 1728)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "GCBlockSectors", scope: !1726, file: !1462, line: 252, baseType: !61, size: 32, offset: 1760)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "GCHighThreshold", scope: !1726, file: !1462, line: 255, baseType: !61, size: 32, offset: 1792)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "GCMiddleThreshold", scope: !1726, file: !1462, line: 256, baseType: !61, size: 32, offset: 1824)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "GCLowThreshold", scope: !1726, file: !1462, line: 257, baseType: !61, size: 32, offset: 1856)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "AvailSectors", scope: !1726, file: !1462, line: 261, baseType: !61, size: 32, offset: 1888)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "DeletedSectors", scope: !1726, file: !1462, line: 262, baseType: !61, size: 32, offset: 1920)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "StartSector", scope: !1726, file: !1462, line: 263, baseType: !61, size: 32, offset: 1952)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "Sectors", scope: !1726, file: !1462, line: 264, baseType: !61, size: 32, offset: 1984)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "SectorsLeft", scope: !1726, file: !1462, line: 265, baseType: !61, size: 32, offset: 2016)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "BLOCKID_OFFSET", scope: !1726, file: !1462, line: 266, baseType: !61, size: 32, offset: 2048)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "SECTORIDX_MASK", scope: !1726, file: !1462, line: 267, baseType: !61, size: 32, offset: 2080)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "PHY_SECTOR_OFFSET", scope: !1726, file: !1462, line: 268, baseType: !61, size: 32, offset: 2112)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "MSTABLE_ENTRY_NUM", scope: !1726, file: !1462, line: 270, baseType: !61, size: 32, offset: 2144)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "MS_count", scope: !1726, file: !1462, line: 271, baseType: !61, size: 32, offset: 2176)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "MSEntryTable", scope: !1726, file: !1462, line: 272, baseType: !1821, size: 32, offset: 2208)
!1821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1822, size: 32)
!1822 = !DIDerivedType(tag: DW_TAG_typedef, name: "MS_ENTRY", file: !1462, line: 229, baseType: !1823)
!1823 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1462, line: 226, size: 64, elements: !1824)
!1824 = !{!1825, !1826}
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "LogicalSectorID", scope: !1823, file: !1462, line: 227, baseType: !61, size: 32)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "PysicalSectorID_new", scope: !1823, file: !1462, line: 228, baseType: !61, size: 32, offset: 32)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "SectorMap", scope: !1726, file: !1462, line: 273, baseType: !1702, size: 32, offset: 2240)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "Buffer", scope: !1726, file: !1462, line: 274, baseType: !1702, size: 32, offset: 2272)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "CompleteErase", scope: !1726, file: !1462, line: 276, baseType: !1830, size: 32, offset: 2304)
!1830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1831, size: 32)
!1831 = !DISubroutineType(types: !1832)
!1832 = !{null, !1833}
!1833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1726, size: 32)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "RegionMaxBlock", scope: !1726, file: !1462, line: 278, baseType: !61, size: 32, offset: 2336)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramFailHandle", scope: !1726, file: !1462, line: 280, baseType: !1830, size: 32, offset: 2368)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "ReclaimBlock_post", scope: !1726, file: !1462, line: 281, baseType: !1830, size: 32, offset: 2400)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "IdleReclaimBlockID", scope: !1726, file: !1462, line: 283, baseType: !61, size: 32, offset: 2432)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "SelectReclaimTarget", scope: !1726, file: !1462, line: 284, baseType: !1839, size: 32, offset: 2464)
!1839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1840, size: 32)
!1840 = !DISubroutineType(types: !1841)
!1841 = !{!61, !1833}
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "ReclaimOneSector", scope: !1726, file: !1462, line: 285, baseType: !1843, size: 32, offset: 2496)
!1843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1844, size: 32)
!1844 = !DISubroutineType(types: !1845)
!1845 = !{!61, !1833, !61, !61}
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "EraseQueue", scope: !1726, file: !1462, line: 293, baseType: !1847, size: 32, offset: 2528)
!1847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1848, size: 32)
!1848 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_EraseInfo", file: !1462, line: 162, baseType: !1849)
!1849 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1462, line: 159, size: 64, elements: !1850)
!1850 = !{!1851, !1852}
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !1849, file: !1462, line: 160, baseType: !61, size: 32)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "EraseCount", scope: !1849, file: !1462, line: 161, baseType: !61, size: 32, offset: 32)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "processedBankAddr", scope: !1726, file: !1462, line: 295, baseType: !61, size: 32, offset: 2560)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "processedBlock", scope: !1726, file: !1462, line: 296, baseType: !61, size: 32, offset: 2592)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "processedEraseCount", scope: !1726, file: !1462, line: 297, baseType: !61, size: 32, offset: 2624)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "eraseItems", scope: !1726, file: !1462, line: 298, baseType: !1784, size: 16, offset: 2656)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "queueSize", scope: !1726, file: !1462, line: 302, baseType: !1784, size: 16, offset: 2672)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramFailRetry", scope: !1726, file: !1462, line: 310, baseType: !91, size: 8, offset: 2688)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "IsEraseSuspended", scope: !1726, file: !1462, line: 313, baseType: !91, size: 8, offset: 2696)
!1860 = !DIGlobalVariableExpression(var: !1861, expr: !DIExpression())
!1861 = distinct !DIGlobalVariable(name: "TOTAL_BLOCKS", scope: !1688, file: !1689, line: 129, type: !61, isLocal: false, isDefinition: true)
!1862 = !DIGlobalVariableExpression(var: !1863, expr: !DIExpression())
!1863 = distinct !DIGlobalVariable(name: "TOTAL_SECTORS", scope: !1688, file: !1689, line: 130, type: !61, isLocal: false, isDefinition: true)
!1864 = !DIGlobalVariableExpression(var: !1865, expr: !DIExpression())
!1865 = distinct !DIGlobalVariable(name: "NOR_LARGEST_BLOCK_SIZE", scope: !1688, file: !1689, line: 131, type: !61, isLocal: false, isDefinition: true)
!1866 = !DIGlobalVariableExpression(var: !1867, expr: !DIExpression())
!1867 = distinct !DIGlobalVariable(name: "PAGE_SIZE", scope: !1688, file: !1689, line: 132, type: !1236, isLocal: true, isDefinition: true)
!1868 = !DIGlobalVariableExpression(var: !1869, expr: !DIExpression())
!1869 = distinct !DIGlobalVariable(name: "FDMBuffer", scope: !1688, file: !1689, line: 136, type: !1870, isLocal: false, isDefinition: true)
!1870 = !DICompositeType(tag: DW_TAG_array_type, baseType: !463, size: 4096, elements: !1871)
!1871 = !{!1872}
!1872 = !DISubrange(count: 512)
!1873 = !DIGlobalVariableExpression(var: !1874, expr: !DIExpression())
!1874 = distinct !DIGlobalVariable(name: "RegionInfo", scope: !1688, file: !1689, line: 146, type: !1875, isLocal: true, isDefinition: true)
!1875 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1705, size: 512, elements: !960)
!1876 = !DIGlobalVariableExpression(var: !1877, expr: !DIExpression())
!1877 = distinct !DIGlobalVariable(name: "BlockLayout", scope: !1688, file: !1689, line: 152, type: !1878, isLocal: true, isDefinition: true)
!1878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1879, size: 32)
!1879 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1880)
!1880 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBlockLayout", file: !1661, line: 116, baseType: !1881)
!1881 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1661, line: 113, size: 64, elements: !1882)
!1882 = !{!1883, !1884}
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "Offset", scope: !1881, file: !1661, line: 114, baseType: !61, size: 32)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "Size", scope: !1881, file: !1661, line: 115, baseType: !61, size: 32, offset: 32)
!1885 = !DIGlobalVariableExpression(var: !1886, expr: !DIExpression())
!1886 = distinct !DIGlobalVariable(name: "CS0_SIZE", scope: !1688, file: !1689, line: 156, type: !61, isLocal: false, isDefinition: true)
!1887 = !DIGlobalVariableExpression(var: !1888, expr: !DIExpression())
!1888 = distinct !DIGlobalVariable(name: "CS1_SIZE", scope: !1688, file: !1689, line: 157, type: !61, isLocal: false, isDefinition: true)
!1889 = !DIGlobalVariableExpression(var: !1890, expr: !DIExpression())
!1890 = distinct !DIGlobalVariable(name: "BankInfo", scope: !1688, file: !1689, line: 160, type: !1891, isLocal: true, isDefinition: true)
!1891 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1892, size: 512, elements: !960)
!1892 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !1462, line: 152, baseType: !1893)
!1893 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1462, line: 149, size: 64, elements: !1894)
!1894 = !{!1895, !1896}
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !1893, file: !1462, line: 150, baseType: !61, size: 32)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !1893, file: !1462, line: 151, baseType: !61, size: 32, offset: 32)
!1897 = !DIGlobalVariableExpression(var: !1898, expr: !DIExpression())
!1898 = distinct !DIGlobalVariable(name: "PAGE_BUFFER_SIZE", scope: !1688, file: !1689, line: 173, type: !61, isLocal: false, isDefinition: true)
!1899 = !DIGlobalVariableExpression(var: !1900, expr: !DIExpression())
!1900 = distinct !DIGlobalVariable(name: "NORFlashMtd", scope: !1688, file: !1689, line: 176, type: !1731, isLocal: false, isDefinition: true)
!1901 = !DIGlobalVariableExpression(var: !1902, expr: !DIExpression())
!1902 = distinct !DIGlobalVariable(name: "mtdflash", scope: !1688, file: !1689, line: 177, type: !1903, isLocal: false, isDefinition: true)
!1903 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_Data", file: !1360, line: 193, baseType: !1904)
!1904 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1360, line: 134, size: 1824, elements: !1905)
!1905 = !{!1906, !1907, !1908, !1914, !1920, !1921, !1922, !1923, !1925, !1926, !1927, !1928, !1935, !1936, !1966, !1967, !1968, !1969, !1970, !1971, !1972, !1973, !1974, !1975, !1976, !1977, !1978, !1979, !1980, !1981, !1982, !1983}
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !1904, file: !1360, line: 136, baseType: !61, size: 32)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !1904, file: !1360, line: 137, baseType: !969, size: 32, offset: 32)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !1904, file: !1360, line: 138, baseType: !1909, size: 32, offset: 64)
!1909 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !1444, line: 56, baseType: !1910)
!1910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1911, size: 32)
!1911 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1444, line: 54, size: 8, elements: !1912)
!1912 = !{!1913}
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1911, file: !1444, line: 55, baseType: !463, size: 8)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !1904, file: !1360, line: 139, baseType: !1915, size: 32, offset: 96)
!1915 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !1444, line: 46, baseType: !1916)
!1916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1917, size: 32)
!1917 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1444, line: 44, size: 8, elements: !1918)
!1918 = !{!1919}
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1917, file: !1444, line: 45, baseType: !463, size: 8)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !1904, file: !1360, line: 140, baseType: !1456, size: 8, offset: 128)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !1904, file: !1360, line: 143, baseType: !1704, size: 32, offset: 160)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !1904, file: !1360, line: 144, baseType: !969, size: 32, offset: 192)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !1904, file: !1360, line: 145, baseType: !1924, size: 32, offset: 224)
!1924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1892, size: 32)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !1904, file: !1360, line: 146, baseType: !969, size: 32, offset: 256)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !1904, file: !1360, line: 147, baseType: !61, size: 32, offset: 288)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !1904, file: !1360, line: 148, baseType: !969, size: 32, offset: 320)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !1904, file: !1360, line: 151, baseType: !1929, size: 1024, offset: 352)
!1929 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1930, size: 1024, elements: !1485)
!1930 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !1462, line: 170, baseType: !1931)
!1931 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1462, line: 167, size: 64, elements: !1932)
!1932 = !{!1933, !1934}
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !1931, file: !1462, line: 168, baseType: !61, size: 32)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !1931, file: !1462, line: 169, baseType: !61, size: 32, offset: 32)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "StatusMap", scope: !1904, file: !1360, line: 155, baseType: !1487, size: 32, offset: 1376)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "CMD", scope: !1904, file: !1360, line: 156, baseType: !1937, size: 32, offset: 1408)
!1937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1938, size: 32)
!1938 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_CMD", file: !1360, line: 124, baseType: !1939)
!1939 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1360, line: 90, size: 200, elements: !1940)
!1940 = !{!1941, !1942, !1943, !1944, !1945, !1946, !1947, !1948, !1949, !1950, !1951, !1952, !1953, !1954, !1955, !1956, !1957, !1958, !1959, !1960, !1961, !1962, !1963, !1964, !1965}
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "PageProg", scope: !1939, file: !1360, line: 91, baseType: !463, size: 8)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "WriteEnable", scope: !1939, file: !1360, line: 92, baseType: !463, size: 8, offset: 8)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "Suspend", scope: !1939, file: !1360, line: 94, baseType: !463, size: 8, offset: 16)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "Resume", scope: !1939, file: !1360, line: 95, baseType: !463, size: 8, offset: 24)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "Read", scope: !1939, file: !1360, line: 96, baseType: !463, size: 8, offset: 32)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "Erase", scope: !1939, file: !1360, line: 98, baseType: !463, size: 8, offset: 40)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "Erase4K", scope: !1939, file: !1360, line: 99, baseType: !463, size: 8, offset: 48)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "Erase32K", scope: !1939, file: !1360, line: 100, baseType: !463, size: 8, offset: 56)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "Erase64K", scope: !1939, file: !1360, line: 101, baseType: !463, size: 8, offset: 64)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_SPI", scope: !1939, file: !1360, line: 103, baseType: !463, size: 8, offset: 72)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_QPI", scope: !1939, file: !1360, line: 104, baseType: !463, size: 8, offset: 80)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "ReadBPReg", scope: !1939, file: !1360, line: 106, baseType: !463, size: 8, offset: 88)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "WriteBPReg", scope: !1939, file: !1360, line: 107, baseType: !463, size: 8, offset: 96)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSecurityReg", scope: !1939, file: !1360, line: 108, baseType: !463, size: 8, offset: 104)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "WriteSecurityReg", scope: !1939, file: !1360, line: 109, baseType: !463, size: 8, offset: 112)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSuspendReg", scope: !1939, file: !1360, line: 110, baseType: !463, size: 8, offset: 120)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "ReadReadyReg", scope: !1939, file: !1360, line: 111, baseType: !463, size: 8, offset: 128)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "ReadFailReg", scope: !1939, file: !1360, line: 112, baseType: !463, size: 8, offset: 136)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "EnterDPD", scope: !1939, file: !1360, line: 114, baseType: !463, size: 8, offset: 144)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "LeaveDPD", scope: !1939, file: !1360, line: 115, baseType: !463, size: 8, offset: 152)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "OTPProg", scope: !1939, file: !1360, line: 118, baseType: !463, size: 8, offset: 160)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !1939, file: !1360, line: 119, baseType: !463, size: 8, offset: 168)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "OTPEnter", scope: !1939, file: !1360, line: 120, baseType: !463, size: 8, offset: 176)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "OTPExit", scope: !1939, file: !1360, line: 121, baseType: !463, size: 8, offset: 184)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !1939, file: !1360, line: 122, baseType: !463, size: 8, offset: 192)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "Flag", scope: !1904, file: !1360, line: 157, baseType: !61, size: 32, offset: 1440)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "BPRBitCount", scope: !1904, file: !1360, line: 158, baseType: !1236, size: 16, offset: 1472)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "UniformBlock", scope: !1904, file: !1360, line: 159, baseType: !1236, size: 16, offset: 1488)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLength", scope: !1904, file: !1360, line: 163, baseType: !1236, size: 16, offset: 1504)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "OTPBase", scope: !1904, file: !1360, line: 164, baseType: !1236, size: 16, offset: 1520)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendLatency", scope: !1904, file: !1360, line: 167, baseType: !463, size: 8, offset: 1536)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "FlashID", scope: !1904, file: !1360, line: 168, baseType: !1526, size: 24, offset: 1544)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "DriverStatus", scope: !1904, file: !1360, line: 169, baseType: !463, size: 8, offset: 1568)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "AddressCycle", scope: !1904, file: !1360, line: 170, baseType: !463, size: 8, offset: 1576)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "CS", scope: !1904, file: !1360, line: 173, baseType: !1236, size: 16, offset: 1584)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "sf_dal_fix", scope: !1904, file: !1360, line: 174, baseType: !61, size: 32, offset: 1600)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "CS_Size", scope: !1904, file: !1360, line: 175, baseType: !61, size: 32, offset: 1632)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_BUSY", scope: !1904, file: !1360, line: 178, baseType: !91, size: 8, offset: 1664)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_SUSPENDED", scope: !1904, file: !1360, line: 179, baseType: !91, size: 8, offset: 1672)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "UnlockBlock", scope: !1904, file: !1360, line: 182, baseType: !1537, size: 32, offset: 1696)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !1904, file: !1360, line: 186, baseType: !1537, size: 32, offset: 1728)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !1904, file: !1360, line: 187, baseType: !1542, size: 32, offset: 1760)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "OTPWrite", scope: !1904, file: !1360, line: 188, baseType: !1542, size: 32, offset: 1792)
!1984 = !DIGlobalVariableExpression(var: !1985, expr: !DIExpression())
!1985 = distinct !DIGlobalVariable(name: "StatusMap", scope: !1688, file: !1689, line: 178, type: !1986, isLocal: false, isDefinition: true)
!1986 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1488, size: 64, elements: !960)
!1987 = !DIGlobalVariableExpression(var: !1988, expr: !DIExpression())
!1988 = distinct !DIGlobalVariable(name: "sf_dal_data_cmd", scope: !1688, file: !1689, line: 179, type: !1938, isLocal: false, isDefinition: true)
!1989 = !DIGlobalVariableExpression(var: !1990, expr: !DIExpression())
!1990 = distinct !DIGlobalVariable(name: "EntireDiskRegionInfo", scope: !1688, file: !1689, line: 204, type: !1875, isLocal: true, isDefinition: true)
!1991 = !DIGlobalVariableExpression(var: !1992, expr: !DIExpression())
!1992 = distinct !DIGlobalVariable(name: "EntireDiskDriveData", scope: !1688, file: !1689, line: 205, type: !1993, isLocal: false, isDefinition: true)
!1993 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_FLASH_DISK_Data", file: !1994, line: 93, baseType: !1995)
!1994 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_disk_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/uart_loopback_data_dma/GCC")
!1995 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1994, line: 83, size: 1056, elements: !1996)
!1996 = !{!1997, !1998, !1999, !2000, !2001}
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "DiskSize", scope: !1995, file: !1994, line: 84, baseType: !61, size: 32)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "MTDDriver", scope: !1995, file: !1994, line: 85, baseType: !1730, size: 32, offset: 32)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "MTDData", scope: !1995, file: !1994, line: 86, baseType: !88, size: 32, offset: 64)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "FlashInfo", scope: !1995, file: !1994, line: 87, baseType: !1787, size: 928, offset: 96)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "is_mount", scope: !1995, file: !1994, line: 92, baseType: !91, size: 8, offset: 1024)
!2002 = !DIGlobalVariableExpression(var: !2003, expr: !DIExpression())
!2003 = distinct !DIGlobalVariable(name: "EntireDiskMtdData", scope: !1688, file: !1689, line: 208, type: !1903, isLocal: false, isDefinition: true)
!2004 = !DIGlobalVariableExpression(var: !2005, expr: !DIExpression())
!2005 = distinct !DIGlobalVariable(name: "nor_list", scope: !1688, file: !1689, line: 114, type: !2006, isLocal: true, isDefinition: true)
!2006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2007, size: 32)
!2007 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2008)
!2008 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryNOR", file: !1661, line: 125, baseType: !2009)
!2009 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1661, line: 119, size: 1088, elements: !2010)
!2010 = !{!2011, !2012, !2013, !2014, !2016}
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "FDMType", scope: !2009, file: !1661, line: 120, baseType: !1236, size: 16)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "PageBufferSize", scope: !2009, file: !1661, line: 121, baseType: !1236, size: 16, offset: 16)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "UniformBlocks", scope: !2009, file: !1661, line: 122, baseType: !61, size: 32, offset: 32)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "BlockLayout", scope: !2009, file: !1661, line: 123, baseType: !2015, size: 512, offset: 64)
!2015 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1880, size: 512, elements: !960)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !2009, file: !1661, line: 124, baseType: !1891, size: 512, offset: 576)
!2017 = !DIGlobalVariableExpression(var: !2018, expr: !DIExpression())
!2018 = distinct !DIGlobalVariable(name: "combo_mem_sw_list", scope: !1688, file: !2019, line: 42, type: !2020, isLocal: true, isDefinition: true)
!2019 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_combo_config.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/uart_loopback_data_dma/GCC")
!2020 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2021)
!2021 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_CMEM_NOR_INFO_v1", file: !1689, line: 66, baseType: !2022)
!2022 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1689, line: 63, size: 5600, elements: !2023)
!2023 = !{!2024, !2031}
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "m_gfh_hdr", scope: !2022, file: !1689, line: 64, baseType: !2025, size: 96)
!2025 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_Header", file: !1594, line: 152, baseType: !2026)
!2026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GFH_Header", file: !1594, line: 144, size: 96, elements: !2027)
!2027 = !{!2028, !2029, !2030}
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "m_magic_ver", scope: !2026, file: !1594, line: 145, baseType: !1654, size: 32)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "m_size", scope: !2026, file: !1594, line: 146, baseType: !1656, size: 16, offset: 32)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "m_type", scope: !2026, file: !1594, line: 150, baseType: !1658, size: 32, offset: 64)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "m_data", scope: !2022, file: !1689, line: 65, baseType: !2032, size: 5504, offset: 96)
!2032 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryNORList", file: !1661, line: 132, baseType: !2033)
!2033 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1661, line: 128, size: 5504, elements: !2034)
!2034 = !{!2035, !2036, !2037}
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "m_ver", scope: !2033, file: !1661, line: 129, baseType: !18, size: 32)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "Count", scope: !2033, file: !1661, line: 130, baseType: !18, size: 32, offset: 32)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "List", scope: !2033, file: !1661, line: 131, baseType: !2038, size: 5440, offset: 64)
!2038 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2008, size: 5440, elements: !1109)
!2039 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_eventgrpid", file: !1444, line: 79, baseType: !2040)
!2040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2041, size: 32)
!2041 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1444, line: 77, size: 8, elements: !2042)
!2042 = !{!2043}
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !2041, file: !1444, line: 78, baseType: !463, size: 8)
!2044 = !DIGlobalVariableExpression(var: !2045, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 18446744073709551615, DW_OP_mul, DW_OP_constu, 1, DW_OP_plus, DW_OP_stack_value))
!2045 = distinct !DIGlobalVariable(name: "FDMMutex", scope: !2046, file: !2047, line: 82, type: !7, isLocal: true, isDefinition: true)
!2046 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2047, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2048, retainedTypes: !2054, globals: !2099, splitDebugInlining: false, nameTableKind: None)
!2047 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_disk.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/uart_loopback_data_dma/GCC")
!2048 = !{!1384, !1268, !2049}
!2049 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1385, line: 123, baseType: !18, size: 32, elements: !2050)
!2050 = !{!2051, !2052, !2053}
!2051 = !DIEnumerator(name: "HAL_FLASH_BLOCK_4K", value: 0)
!2052 = !DIEnumerator(name: "HAL_FLASH_BLOCK_32K", value: 1)
!2053 = !DIEnumerator(name: "HAL_FLASH_BLOCK_64K", value: 2)
!2054 = !{!61, !2055, !88, !969}
!2055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2056, size: 32)
!2056 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_Flash_MTD_Data", file: !1462, line: 190, baseType: !2057)
!2057 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1462, line: 173, size: 1376, elements: !2058)
!2058 = !{!2059, !2060, !2061, !2067, !2073, !2074, !2081, !2082, !2089, !2090, !2091, !2092}
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !2057, file: !1462, line: 174, baseType: !61, size: 32)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !2057, file: !1462, line: 175, baseType: !1702, size: 32, offset: 32)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !2057, file: !1462, line: 176, baseType: !2062, size: 32, offset: 64)
!2062 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !1444, line: 56, baseType: !2063)
!2063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2064, size: 32)
!2064 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1444, line: 54, size: 8, elements: !2065)
!2065 = !{!2066}
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !2064, file: !1444, line: 55, baseType: !463, size: 8)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !2057, file: !1462, line: 177, baseType: !2068, size: 32, offset: 96)
!2068 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !1444, line: 46, baseType: !2069)
!2069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2070, size: 32)
!2070 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1444, line: 44, size: 8, elements: !2071)
!2071 = !{!2072}
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !2070, file: !1444, line: 45, baseType: !463, size: 8)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !2057, file: !1462, line: 178, baseType: !1456, size: 8, offset: 128)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !2057, file: !1462, line: 180, baseType: !2075, size: 32, offset: 160)
!2075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2076, size: 32)
!2076 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !1462, line: 146, baseType: !2077)
!2077 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1462, line: 143, size: 64, elements: !2078)
!2078 = !{!2079, !2080}
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !2077, file: !1462, line: 144, baseType: !61, size: 32)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !2077, file: !1462, line: 145, baseType: !61, size: 32, offset: 32)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !2057, file: !1462, line: 181, baseType: !1702, size: 32, offset: 192)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !2057, file: !1462, line: 182, baseType: !2083, size: 32, offset: 224)
!2083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2084, size: 32)
!2084 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !1462, line: 152, baseType: !2085)
!2085 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1462, line: 149, size: 64, elements: !2086)
!2086 = !{!2087, !2088}
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !2085, file: !1462, line: 150, baseType: !61, size: 32)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !2085, file: !1462, line: 151, baseType: !61, size: 32, offset: 32)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !2057, file: !1462, line: 183, baseType: !1702, size: 32, offset: 256)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !2057, file: !1462, line: 184, baseType: !61, size: 32, offset: 288)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !2057, file: !1462, line: 185, baseType: !1702, size: 32, offset: 320)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !2057, file: !1462, line: 188, baseType: !2093, size: 1024, offset: 352)
!2093 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2094, size: 1024, elements: !1485)
!2094 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !1462, line: 170, baseType: !2095)
!2095 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1462, line: 167, size: 64, elements: !2096)
!2096 = !{!2097, !2098}
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !2095, file: !1462, line: 168, baseType: !61, size: 32)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !2095, file: !1462, line: 169, baseType: !61, size: 32, offset: 32)
!2099 = !{!2100, !2101}
!2100 = !DIGlobalVariableExpression(var: !2045, expr: !DIExpression())
!2101 = !DIGlobalVariableExpression(var: !2102, expr: !DIExpression())
!2102 = distinct !DIGlobalVariable(name: "flash_init_status", scope: !2046, file: !2047, line: 432, type: !2103, isLocal: true, isDefinition: true)
!2103 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_flash_status_t", file: !1385, line: 119, baseType: !1384)
!2104 = !DIGlobalVariableExpression(var: !2102, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 18446744069414584325, DW_OP_mul, DW_OP_constu, 4294967291, DW_OP_plus, DW_OP_stack_value))
!2105 = !DIGlobalVariableExpression(var: !2106, expr: !DIExpression())
!2106 = distinct !DIGlobalVariable(name: "gNOR_ReturnReadyBegin", scope: !2107, file: !2108, line: 60, type: !61, isLocal: false, isDefinition: true)
!2107 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2108, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2109, retainedTypes: !2117, globals: !2118, splitDebugInlining: false, nameTableKind: None)
!2108 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_mtd.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/uart_loopback_data_dma/GCC")
!2109 = !{!2110}
!2110 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !255, line: 387, baseType: !7, size: 32, elements: !2111)
!2111 = !{!2112, !2113, !2114, !2115, !2116}
!2112 = !DIEnumerator(name: "HAL_GPT_STATUS_ERROR_PORT_USED", value: -4)
!2113 = !DIEnumerator(name: "HAL_GPT_STATUS_ERROR", value: -3)
!2114 = !DIEnumerator(name: "HAL_GPT_STATUS_ERROR_PORT", value: -2)
!2115 = !DIEnumerator(name: "HAL_GPT_STATUS_INVALID_PARAMETER", value: -1)
!2116 = !DIEnumerator(name: "HAL_GPT_STATUS_OK", value: 0)
!2117 = !{!88, !61}
!2118 = !{!2105, !2119, !2121, !2123, !2125, !2127, !2181, !2183}
!2119 = !DIGlobalVariableExpression(var: !2120, expr: !DIExpression())
!2120 = distinct !DIGlobalVariable(name: "gNOR_ReturnReadyEnd", scope: !2107, file: !2108, line: 61, type: !61, isLocal: false, isDefinition: true)
!2121 = !DIGlobalVariableExpression(var: !2122, expr: !DIExpression())
!2122 = distinct !DIGlobalVariable(name: "NOR_Flash_Base_Address", scope: !2107, file: !2108, line: 107, type: !61, isLocal: false, isDefinition: true)
!2123 = !DIGlobalVariableExpression(var: !2124, expr: !DIExpression())
!2124 = distinct !DIGlobalVariable(name: "NOR_FLASH_BUSY", scope: !2107, file: !2108, line: 132, type: !91, isLocal: false, isDefinition: true)
!2125 = !DIGlobalVariableExpression(var: !2126, expr: !DIExpression())
!2126 = distinct !DIGlobalVariable(name: "NOR_FLASH_SUSPENDED", scope: !2107, file: !2108, line: 133, type: !91, isLocal: false, isDefinition: true)
!2127 = !DIGlobalVariableExpression(var: !2128, expr: !DIExpression())
!2128 = distinct !DIGlobalVariable(name: "replaced", scope: !2129, file: !2108, line: 139, type: !61, isLocal: true, isDefinition: true)
!2129 = distinct !DISubprogram(name: "LookupAddress", scope: !2108, file: !2108, line: 135, type: !2130, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !2132)
!2130 = !DISubroutineType(types: !2131)
!2131 = !{!61, !88, !61}
!2132 = !{!2133, !2134, !2135, !2180}
!2133 = !DILocalVariable(name: "DriveData", arg: 1, scope: !2129, file: !2108, line: 135, type: !88)
!2134 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !2129, file: !2108, line: 135, type: !61)
!2135 = !DILocalVariable(name: "D", scope: !2129, file: !2108, line: 137, type: !2136)
!2136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2137, size: 32)
!2137 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_Flash_MTD_Data", file: !1462, line: 190, baseType: !2138)
!2138 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1462, line: 173, size: 1376, elements: !2139)
!2139 = !{!2140, !2141, !2142, !2148, !2154, !2155, !2162, !2163, !2170, !2171, !2172, !2173}
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !2138, file: !1462, line: 174, baseType: !61, size: 32)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !2138, file: !1462, line: 175, baseType: !1702, size: 32, offset: 32)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !2138, file: !1462, line: 176, baseType: !2143, size: 32, offset: 64)
!2143 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !1444, line: 56, baseType: !2144)
!2144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2145, size: 32)
!2145 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1444, line: 54, size: 8, elements: !2146)
!2146 = !{!2147}
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !2145, file: !1444, line: 55, baseType: !463, size: 8)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !2138, file: !1462, line: 177, baseType: !2149, size: 32, offset: 96)
!2149 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !1444, line: 46, baseType: !2150)
!2150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2151, size: 32)
!2151 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1444, line: 44, size: 8, elements: !2152)
!2152 = !{!2153}
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !2151, file: !1444, line: 45, baseType: !463, size: 8)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !2138, file: !1462, line: 178, baseType: !1456, size: 8, offset: 128)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !2138, file: !1462, line: 180, baseType: !2156, size: 32, offset: 160)
!2156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2157, size: 32)
!2157 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !1462, line: 146, baseType: !2158)
!2158 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1462, line: 143, size: 64, elements: !2159)
!2159 = !{!2160, !2161}
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !2158, file: !1462, line: 144, baseType: !61, size: 32)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !2158, file: !1462, line: 145, baseType: !61, size: 32, offset: 32)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !2138, file: !1462, line: 181, baseType: !1702, size: 32, offset: 192)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !2138, file: !1462, line: 182, baseType: !2164, size: 32, offset: 224)
!2164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2165, size: 32)
!2165 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !1462, line: 152, baseType: !2166)
!2166 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1462, line: 149, size: 64, elements: !2167)
!2167 = !{!2168, !2169}
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !2166, file: !1462, line: 150, baseType: !61, size: 32)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !2166, file: !1462, line: 151, baseType: !61, size: 32, offset: 32)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !2138, file: !1462, line: 183, baseType: !1702, size: 32, offset: 256)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !2138, file: !1462, line: 184, baseType: !61, size: 32, offset: 288)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !2138, file: !1462, line: 185, baseType: !1702, size: 32, offset: 320)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !2138, file: !1462, line: 188, baseType: !2174, size: 1024, offset: 352)
!2174 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2175, size: 1024, elements: !1485)
!2175 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !1462, line: 170, baseType: !2176)
!2176 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1462, line: 167, size: 64, elements: !2177)
!2177 = !{!2178, !2179}
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !2176, file: !1462, line: 168, baseType: !61, size: 32)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !2176, file: !1462, line: 169, baseType: !61, size: 32, offset: 32)
!2180 = !DILocalVariable(name: "addr", scope: !2129, file: !2108, line: 138, type: !61)
!2181 = !DIGlobalVariableExpression(var: !2182, expr: !DIExpression())
!2182 = distinct !DIGlobalVariable(name: "look_up_hit", scope: !2129, file: !2108, line: 140, type: !61, isLocal: true, isDefinition: true)
!2183 = !DIGlobalVariableExpression(var: !2184, expr: !DIExpression())
!2184 = distinct !DIGlobalVariable(name: "look_up_miss", scope: !2129, file: !2108, line: 141, type: !61, isLocal: true, isDefinition: true)
!2185 = !DIGlobalVariableExpression(var: !2186, expr: !DIExpression())
!2186 = distinct !DIGlobalVariable(name: "emi_settings", scope: !2187, file: !2188, line: 44, type: !2334, isLocal: false, isDefinition: true)
!2187 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2188, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2189, retainedTypes: !2195, globals: !2196, splitDebugInlining: false, nameTableKind: None)
!2188 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_emi.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/uart_loopback_data_dma/GCC")
!2189 = !{!2190}
!2190 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "emi_clock_enum_t", file: !2191, line: 40, baseType: !18, size: 32, elements: !2192)
!2191 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_emi_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/uart_loopback_data_dma/GCC")
!2192 = !{!2193, !2194}
!2193 = !DIEnumerator(name: "EMI_CLK_LOW_TO_HIGH", value: 0)
!2194 = !DIEnumerator(name: "EMI_CLK_HIGH_TO_LOW", value: 1)
!2195 = !{!1241}
!2196 = !{!2185, !2197, !2199, !2201, !2203, !2304, !2306, !2308, !2310, !2312, !2314, !2316, !2318, !2320, !2322, !2324, !2326, !2328, !2330, !2332}
!2197 = !DIGlobalVariableExpression(var: !2198, expr: !DIExpression())
!2198 = distinct !DIGlobalVariable(name: "__EMI_CurSR0", scope: !2187, file: !2188, line: 65, type: !61, isLocal: false, isDefinition: true)
!2199 = !DIGlobalVariableExpression(var: !2200, expr: !DIExpression())
!2200 = distinct !DIGlobalVariable(name: "__EMI_CurSR1", scope: !2187, file: !2188, line: 66, type: !61, isLocal: false, isDefinition: true)
!2201 = !DIGlobalVariableExpression(var: !2202, expr: !DIExpression())
!2202 = distinct !DIGlobalVariable(name: "__EMI_CurSR2", scope: !2187, file: !2188, line: 67, type: !61, isLocal: false, isDefinition: true)
!2203 = !DIGlobalVariableExpression(var: !2204, expr: !DIExpression())
!2204 = distinct !DIGlobalVariable(name: "emi_register", scope: !2187, file: !2188, line: 83, type: !2205, isLocal: false, isDefinition: true)
!2205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2206, size: 32)
!2206 = !DIDerivedType(tag: DW_TAG_typedef, name: "EMI_REGISTER_T", file: !56, line: 2524, baseType: !2207)
!2207 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 2447, size: 6752, elements: !2208)
!2208 = !{!2209, !2213, !2214, !2215, !2216, !2220, !2221, !2223, !2224, !2228, !2229, !2230, !2231, !2232, !2233, !2234, !2235, !2236, !2237, !2238, !2239, !2240, !2241, !2245, !2246, !2247, !2248, !2249, !2250, !2251, !2252, !2253, !2254, !2255, !2256, !2257, !2258, !2259, !2260, !2261, !2262, !2263, !2264, !2265, !2266, !2270, !2271, !2272, !2273, !2274, !2275, !2276, !2277, !2278, !2279, !2280, !2281, !2282, !2283, !2284, !2285, !2286, !2287, !2288, !2289, !2293, !2294, !2295, !2296, !2297, !2298, !2299, !2300, !2301, !2302, !2303}
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2207, file: !56, line: 2448, baseType: !2210, size: 768)
!2210 = !DICompositeType(tag: DW_TAG_array_type, baseType: !550, size: 768, elements: !2211)
!2211 = !{!2212}
!2212 = !DISubrange(count: 96)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_CONM", scope: !2207, file: !56, line: 2449, baseType: !60, size: 32, offset: 768)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2207, file: !56, line: 2450, baseType: !1093, size: 96, offset: 800)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_GENA", scope: !2207, file: !56, line: 2451, baseType: !60, size: 32, offset: 896)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2207, file: !56, line: 2452, baseType: !2217, size: 160, offset: 928)
!2217 = !DICompositeType(tag: DW_TAG_array_type, baseType: !550, size: 160, elements: !2218)
!2218 = !{!2219}
!2219 = !DISubrange(count: 20)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_RDCT", scope: !2207, file: !56, line: 2453, baseType: !60, size: 32, offset: 1088)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2207, file: !56, line: 2454, baseType: !2222, size: 32, offset: 1120)
!2222 = !DICompositeType(tag: DW_TAG_array_type, baseType: !550, size: 32, elements: !706)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_DLLV", scope: !2207, file: !56, line: 2455, baseType: !60, size: 32, offset: 1152)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2207, file: !56, line: 2456, baseType: !2225, size: 480, offset: 1184)
!2225 = !DICompositeType(tag: DW_TAG_array_type, baseType: !550, size: 480, elements: !2226)
!2226 = !{!2227}
!2227 = !DISubrange(count: 60)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDLC", scope: !2207, file: !56, line: 2457, baseType: !60, size: 32, offset: 1664)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2207, file: !56, line: 2458, baseType: !2222, size: 32, offset: 1696)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDLD", scope: !2207, file: !56, line: 2459, baseType: !60, size: 32, offset: 1728)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2207, file: !56, line: 2460, baseType: !2222, size: 32, offset: 1760)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDLE", scope: !2207, file: !56, line: 2461, baseType: !60, size: 32, offset: 1792)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED8", scope: !2207, file: !56, line: 2462, baseType: !2217, size: 160, offset: 1824)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODLC", scope: !2207, file: !56, line: 2463, baseType: !60, size: 32, offset: 1984)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED9", scope: !2207, file: !56, line: 2464, baseType: !2222, size: 32, offset: 2016)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODLD", scope: !2207, file: !56, line: 2465, baseType: !60, size: 32, offset: 2048)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED10", scope: !2207, file: !56, line: 2466, baseType: !2222, size: 32, offset: 2080)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODLE", scope: !2207, file: !56, line: 2467, baseType: !60, size: 32, offset: 2112)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED11", scope: !2207, file: !56, line: 2468, baseType: !2222, size: 32, offset: 2144)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODLF", scope: !2207, file: !56, line: 2469, baseType: !60, size: 32, offset: 2176)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED12", scope: !2207, file: !56, line: 2470, baseType: !2242, size: 224, offset: 2208)
!2242 = !DICompositeType(tag: DW_TAG_array_type, baseType: !550, size: 224, elements: !2243)
!2243 = !{!2244}
!2244 = !DISubrange(count: 28)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IOA", scope: !2207, file: !56, line: 2471, baseType: !60, size: 32, offset: 2432)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED13", scope: !2207, file: !56, line: 2472, baseType: !2222, size: 32, offset: 2464)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IOB", scope: !2207, file: !56, line: 2473, baseType: !60, size: 32, offset: 2496)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED14", scope: !2207, file: !56, line: 2474, baseType: !1093, size: 96, offset: 2528)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_HFSLP", scope: !2207, file: !56, line: 2475, baseType: !60, size: 32, offset: 2624)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED15", scope: !2207, file: !56, line: 2476, baseType: !2222, size: 32, offset: 2656)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_DSRAM", scope: !2207, file: !56, line: 2477, baseType: !60, size: 32, offset: 2688)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED16", scope: !2207, file: !56, line: 2478, baseType: !2222, size: 32, offset: 2720)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MSRAM", scope: !2207, file: !56, line: 2479, baseType: !60, size: 32, offset: 2752)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED17", scope: !2207, file: !56, line: 2480, baseType: !2222, size: 32, offset: 2784)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MREG_RW", scope: !2207, file: !56, line: 2481, baseType: !60, size: 32, offset: 2816)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED18", scope: !2207, file: !56, line: 2482, baseType: !1093, size: 96, offset: 2848)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ARBA", scope: !2207, file: !56, line: 2483, baseType: !60, size: 32, offset: 2944)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED19", scope: !2207, file: !56, line: 2484, baseType: !2222, size: 32, offset: 2976)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ARBB", scope: !2207, file: !56, line: 2485, baseType: !60, size: 32, offset: 3008)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED20", scope: !2207, file: !56, line: 2486, baseType: !2222, size: 32, offset: 3040)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ARBC", scope: !2207, file: !56, line: 2487, baseType: !60, size: 32, offset: 3072)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED21", scope: !2207, file: !56, line: 2488, baseType: !2217, size: 160, offset: 3104)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_SLCT", scope: !2207, file: !56, line: 2489, baseType: !60, size: 32, offset: 3264)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED22", scope: !2207, file: !56, line: 2490, baseType: !2222, size: 32, offset: 3296)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ABCT", scope: !2207, file: !56, line: 2491, baseType: !60, size: 32, offset: 3328)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED23", scope: !2207, file: !56, line: 2492, baseType: !2267, size: 736, offset: 3360)
!2267 = !DICompositeType(tag: DW_TAG_array_type, baseType: !550, size: 736, elements: !2268)
!2268 = !{!2269}
!2269 = !DISubrange(count: 92)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_BMEN", scope: !2207, file: !56, line: 2493, baseType: !60, size: 32, offset: 4096)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED24", scope: !2207, file: !56, line: 2494, baseType: !2222, size: 32, offset: 4128)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_BCNT", scope: !2207, file: !56, line: 2495, baseType: !60, size: 32, offset: 4160)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED25", scope: !2207, file: !56, line: 2496, baseType: !2222, size: 32, offset: 4192)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_TACT", scope: !2207, file: !56, line: 2497, baseType: !60, size: 32, offset: 4224)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED26", scope: !2207, file: !56, line: 2498, baseType: !2222, size: 32, offset: 4256)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_TSCT", scope: !2207, file: !56, line: 2499, baseType: !60, size: 32, offset: 4288)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED27", scope: !2207, file: !56, line: 2500, baseType: !2222, size: 32, offset: 4320)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_WACT", scope: !2207, file: !56, line: 2501, baseType: !60, size: 32, offset: 4352)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED28", scope: !2207, file: !56, line: 2502, baseType: !2222, size: 32, offset: 4384)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_WSCT", scope: !2207, file: !56, line: 2503, baseType: !60, size: 32, offset: 4416)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED29", scope: !2207, file: !56, line: 2504, baseType: !2222, size: 32, offset: 4448)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_BACT", scope: !2207, file: !56, line: 2505, baseType: !60, size: 32, offset: 4480)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED30", scope: !2207, file: !56, line: 2506, baseType: !2222, size: 32, offset: 4512)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_BSCT0", scope: !2207, file: !56, line: 2507, baseType: !60, size: 32, offset: 4544)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED31", scope: !2207, file: !56, line: 2508, baseType: !2222, size: 32, offset: 4576)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_BSCT1", scope: !2207, file: !56, line: 2509, baseType: !60, size: 32, offset: 4608)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED32", scope: !2207, file: !56, line: 2510, baseType: !2225, size: 480, offset: 4640)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_TTYPE1", scope: !2207, file: !56, line: 2511, baseType: !60, size: 32, offset: 5120)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED33", scope: !2207, file: !56, line: 2512, baseType: !2290, size: 992, offset: 5152)
!2290 = !DICompositeType(tag: DW_TAG_array_type, baseType: !550, size: 992, elements: !2291)
!2291 = !{!2292}
!2292 = !DISubrange(count: 124)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MBISTA", scope: !2207, file: !56, line: 2513, baseType: !60, size: 32, offset: 6144)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED34", scope: !2207, file: !56, line: 2514, baseType: !2222, size: 32, offset: 6176)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MBISTB", scope: !2207, file: !56, line: 2515, baseType: !60, size: 32, offset: 6208)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED35", scope: !2207, file: !56, line: 2516, baseType: !2222, size: 32, offset: 6240)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MBISTC", scope: !2207, file: !56, line: 2517, baseType: !60, size: 32, offset: 6272)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED36", scope: !2207, file: !56, line: 2518, baseType: !2222, size: 32, offset: 6304)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MBISTD", scope: !2207, file: !56, line: 2519, baseType: !60, size: 32, offset: 6336)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED37", scope: !2207, file: !56, line: 2520, baseType: !2217, size: 160, offset: 6368)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_TEST", scope: !2207, file: !56, line: 2521, baseType: !60, size: 32, offset: 6528)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED38", scope: !2207, file: !56, line: 2522, baseType: !2217, size: 160, offset: 6560)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_VENDER_INFO", scope: !2207, file: !56, line: 2523, baseType: !60, size: 32, offset: 6720)
!2304 = !DIGlobalVariableExpression(var: !2305, expr: !DIExpression())
!2305 = distinct !DIGlobalVariable(name: "dvfs_dma_runing_status", scope: !2187, file: !2188, line: 485, type: !60, isLocal: false, isDefinition: true)
!2306 = !DIGlobalVariableExpression(var: !2307, expr: !DIExpression())
!2307 = distinct !DIGlobalVariable(name: "EMI_GENA_VAL", scope: !2187, file: !2188, line: 68, type: !61, isLocal: false, isDefinition: true)
!2308 = !DIGlobalVariableExpression(var: !2309, expr: !DIExpression())
!2309 = distinct !DIGlobalVariable(name: "EMI_RDCT_VAL", scope: !2187, file: !2188, line: 69, type: !61, isLocal: false, isDefinition: true)
!2310 = !DIGlobalVariableExpression(var: !2311, expr: !DIExpression())
!2311 = distinct !DIGlobalVariable(name: "EMI_DSRAM_VAL", scope: !2187, file: !2188, line: 70, type: !61, isLocal: false, isDefinition: true)
!2312 = !DIGlobalVariableExpression(var: !2313, expr: !DIExpression())
!2313 = distinct !DIGlobalVariable(name: "EMI_MSRAM_VAL", scope: !2187, file: !2188, line: 71, type: !61, isLocal: false, isDefinition: true)
!2314 = !DIGlobalVariableExpression(var: !2315, expr: !DIExpression())
!2315 = distinct !DIGlobalVariable(name: "EMI_IDL_C_VAL", scope: !2187, file: !2188, line: 72, type: !61, isLocal: false, isDefinition: true)
!2316 = !DIGlobalVariableExpression(var: !2317, expr: !DIExpression())
!2317 = distinct !DIGlobalVariable(name: "EMI_IDL_D_VAL", scope: !2187, file: !2188, line: 73, type: !61, isLocal: false, isDefinition: true)
!2318 = !DIGlobalVariableExpression(var: !2319, expr: !DIExpression())
!2319 = distinct !DIGlobalVariable(name: "EMI_IDL_E_VAL", scope: !2187, file: !2188, line: 74, type: !61, isLocal: false, isDefinition: true)
!2320 = !DIGlobalVariableExpression(var: !2321, expr: !DIExpression())
!2321 = distinct !DIGlobalVariable(name: "EMI_ODL_C_VAL", scope: !2187, file: !2188, line: 75, type: !61, isLocal: false, isDefinition: true)
!2322 = !DIGlobalVariableExpression(var: !2323, expr: !DIExpression())
!2323 = distinct !DIGlobalVariable(name: "EMI_ODL_D_VAL", scope: !2187, file: !2188, line: 76, type: !61, isLocal: false, isDefinition: true)
!2324 = !DIGlobalVariableExpression(var: !2325, expr: !DIExpression())
!2325 = distinct !DIGlobalVariable(name: "EMI_ODL_E_VAL", scope: !2187, file: !2188, line: 77, type: !61, isLocal: false, isDefinition: true)
!2326 = !DIGlobalVariableExpression(var: !2327, expr: !DIExpression())
!2327 = distinct !DIGlobalVariable(name: "EMI_ODL_F_VAL", scope: !2187, file: !2188, line: 78, type: !61, isLocal: false, isDefinition: true)
!2328 = !DIGlobalVariableExpression(var: !2329, expr: !DIExpression())
!2329 = distinct !DIGlobalVariable(name: "EMI_IO_A_VAL", scope: !2187, file: !2188, line: 79, type: !61, isLocal: false, isDefinition: true)
!2330 = !DIGlobalVariableExpression(var: !2331, expr: !DIExpression())
!2331 = distinct !DIGlobalVariable(name: "EMI_IO_B_VAL", scope: !2187, file: !2188, line: 80, type: !61, isLocal: false, isDefinition: true)
!2332 = !DIGlobalVariableExpression(var: !2333, expr: !DIExpression())
!2333 = distinct !DIGlobalVariable(name: "emi_register_backup", scope: !2187, file: !2188, line: 84, type: !2206, isLocal: false, isDefinition: true)
!2334 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2335, size: 416, elements: !76)
!2335 = !DIDerivedType(tag: DW_TAG_typedef, name: "EMI_SETTINGS", file: !2191, line: 60, baseType: !2336)
!2336 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2191, line: 45, size: 416, elements: !2337)
!2337 = !{!2338, !2339, !2340, !2341, !2342, !2343, !2344, !2345, !2346, !2347, !2348, !2349, !2350}
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_GENA_VAL", scope: !2336, file: !2191, line: 46, baseType: !61, size: 32)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_RDCT_VAL", scope: !2336, file: !2191, line: 47, baseType: !61, size: 32, offset: 32)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_DSRAM_VAL", scope: !2336, file: !2191, line: 48, baseType: !61, size: 32, offset: 64)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MSRAM_VAL", scope: !2336, file: !2191, line: 49, baseType: !61, size: 32, offset: 96)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDL_C_VAL", scope: !2336, file: !2191, line: 50, baseType: !61, size: 32, offset: 128)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDL_D_VAL", scope: !2336, file: !2191, line: 51, baseType: !61, size: 32, offset: 160)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDL_E_VAL", scope: !2336, file: !2191, line: 52, baseType: !61, size: 32, offset: 192)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODL_C_VAL", scope: !2336, file: !2191, line: 53, baseType: !61, size: 32, offset: 224)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODL_D_VAL", scope: !2336, file: !2191, line: 54, baseType: !61, size: 32, offset: 256)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODL_E_VAL", scope: !2336, file: !2191, line: 55, baseType: !61, size: 32, offset: 288)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODL_F_VAL", scope: !2336, file: !2191, line: 56, baseType: !61, size: 32, offset: 320)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IO_A_VAL", scope: !2336, file: !2191, line: 57, baseType: !61, size: 32, offset: 352)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IO_B_VAL", scope: !2336, file: !2191, line: 58, baseType: !61, size: 32, offset: 384)
!2351 = !DIGlobalVariableExpression(var: !2352, expr: !DIExpression())
!2352 = distinct !DIGlobalVariable(name: "cm_freq_state", scope: !2353, file: !2354, line: 48, type: !2362, isLocal: false, isDefinition: true)
!2353 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2354, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2355, globals: !2361, splitDebugInlining: false, nameTableKind: None)
!2354 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_clock_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/uart_loopback_data_dma/GCC")
!2355 = !{!2356}
!2356 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1183, line: 100, baseType: !18, size: 32, elements: !2357)
!2357 = !{!2358, !2359, !2360}
!2358 = !DIEnumerator(name: "CM_208M_STA", value: 0)
!2359 = !DIEnumerator(name: "CM_104M_STA", value: 1)
!2360 = !DIEnumerator(name: "CM_26M_STA", value: 2)
!2361 = !{!2351}
!2362 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_cm_freq_state_id", file: !1183, line: 104, baseType: !2356)
!2363 = !DIGlobalVariableExpression(var: !2364, expr: !DIExpression())
!2364 = distinct !DIGlobalVariable(name: "g_uart_receive_buffer", scope: !2365, file: !2366, line: 58, type: !2374, isLocal: true, isDefinition: true, align: 32)
!2365 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2366, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2367, retainedTypes: !2368, globals: !2371, splitDebugInlining: false, nameTableKind: None)
!2366 = !DIFile(filename: "../../../../../project/mt2523_hdk/hal_examples/uart_loopback_data_dma/src/main.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/uart_loopback_data_dma/GCC")
!2367 = !{!895, !911, !917, !921, !594, !870, !877}
!2368 = !{!88, !2369}
!2369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2370, size: 32)
!2370 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !463)
!2371 = !{!2363, !2372, !2377}
!2372 = !DIGlobalVariableExpression(var: !2373, expr: !DIExpression())
!2373 = distinct !DIGlobalVariable(name: "g_uart_send_buffer", scope: !2365, file: !2366, line: 57, type: !2374, isLocal: true, isDefinition: true, align: 32)
!2374 = !DICompositeType(tag: DW_TAG_array_type, baseType: !463, size: 2048, elements: !2375)
!2375 = !{!2376}
!2376 = !DISubrange(count: 256)
!2377 = !DIGlobalVariableExpression(var: !2378, expr: !DIExpression())
!2378 = distinct !DIGlobalVariable(name: "g_uart_receive_event", scope: !2365, file: !2366, line: 59, type: !90, isLocal: true, isDefinition: true)
!2379 = !DIGlobalVariableExpression(var: !2380, expr: !DIExpression())
!2380 = distinct !DIGlobalVariable(name: "heap_end", scope: !2381, file: !2382, line: 69, type: !2387, isLocal: true, isDefinition: true)
!2381 = distinct !DISubprogram(name: "_sbrk_r", scope: !2382, file: !2382, line: 66, type: !2383, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2574, retainedNodes: !2578)
!2382 = !DIFile(filename: "../../../../../project/mt2523_hdk/hal_examples/uart_loopback_data_dma/GCC/syscalls.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/uart_loopback_data_dma/GCC")
!2383 = !DISubroutineType(types: !2384)
!2384 = !{!2385, !2388, !2573}
!2385 = !DIDerivedType(tag: DW_TAG_typedef, name: "caddr_t", file: !2386, line: 123, baseType: !2387)
!2386 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/types.h", directory: "/home/mjshen/RTOSExploration")
!2387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1683, size: 32)
!2388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2389, size: 32)
!2389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_reent", file: !2390, line: 377, size: 1920, elements: !2391)
!2390 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/reent.h", directory: "/home/mjshen/RTOSExploration")
!2391 = !{!2392, !2393, !2463, !2464, !2465, !2466, !2467, !2468, !2469, !2472, !2493, !2497, !2498, !2499, !2500, !2510, !2523, !2524, !2529, !2547, !2548, !2555, !2556, !2572}
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "_errno", scope: !2389, file: !2390, line: 381, baseType: !7, size: 32)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "_stdin", scope: !2389, file: !2390, line: 386, baseType: !2394, size: 32, offset: 32)
!2394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2395, size: 32)
!2395 = !DIDerivedType(tag: DW_TAG_typedef, name: "__FILE", file: !2390, line: 292, baseType: !2396)
!2396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__sFILE", file: !2390, line: 186, size: 832, elements: !2397)
!2397 = !{!2398, !2400, !2401, !2402, !2403, !2404, !2409, !2410, !2411, !2412, !2416, !2421, !2428, !2432, !2433, !2434, !2435, !2437, !2439, !2440, !2441, !2443, !2449, !2462}
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "_p", scope: !2396, file: !2390, line: 187, baseType: !2399, size: 32)
!2399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !465, size: 32)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "_r", scope: !2396, file: !2390, line: 188, baseType: !7, size: 32, offset: 32)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "_w", scope: !2396, file: !2390, line: 189, baseType: !7, size: 32, offset: 64)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2396, file: !2390, line: 190, baseType: !1641, size: 16, offset: 96)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "_file", scope: !2396, file: !2390, line: 191, baseType: !1641, size: 16, offset: 112)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "_bf", scope: !2396, file: !2390, line: 192, baseType: !2405, size: 64, offset: 128)
!2405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__sbuf", file: !2390, line: 122, size: 64, elements: !2406)
!2406 = !{!2407, !2408}
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "_base", scope: !2405, file: !2390, line: 123, baseType: !2399, size: 32)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "_size", scope: !2405, file: !2390, line: 124, baseType: !7, size: 32, offset: 32)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "_lbfsize", scope: !2396, file: !2390, line: 193, baseType: !7, size: 32, offset: 192)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "_data", scope: !2396, file: !2390, line: 196, baseType: !2388, size: 32, offset: 224)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "_cookie", scope: !2396, file: !2390, line: 200, baseType: !88, size: 32, offset: 256)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "_read", scope: !2396, file: !2390, line: 202, baseType: !2413, size: 32, offset: 288)
!2413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2414, size: 32)
!2414 = !DISubroutineType(types: !2415)
!2415 = !{!7, !2388, !88, !2387, !7}
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "_write", scope: !2396, file: !2390, line: 204, baseType: !2417, size: 32, offset: 320)
!2417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2418, size: 32)
!2418 = !DISubroutineType(types: !2419)
!2419 = !{!7, !2388, !88, !2420, !7}
!2420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1682, size: 32)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "_seek", scope: !2396, file: !2390, line: 207, baseType: !2422, size: 32, offset: 352)
!2422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2423, size: 32)
!2423 = !DISubroutineType(types: !2424)
!2424 = !{!2425, !2388, !88, !2425, !7}
!2425 = !DIDerivedType(tag: DW_TAG_typedef, name: "_fpos_t", file: !2426, line: 116, baseType: !2427)
!2426 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_types.h", directory: "/home/mjshen/RTOSExploration")
!2427 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "_close", scope: !2396, file: !2390, line: 208, baseType: !2429, size: 32, offset: 384)
!2429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2430, size: 32)
!2430 = !DISubroutineType(types: !2431)
!2431 = !{!7, !2388, !88}
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "_ub", scope: !2396, file: !2390, line: 211, baseType: !2405, size: 64, offset: 416)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "_up", scope: !2396, file: !2390, line: 212, baseType: !2399, size: 32, offset: 480)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "_ur", scope: !2396, file: !2390, line: 213, baseType: !7, size: 32, offset: 512)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "_ubuf", scope: !2396, file: !2390, line: 216, baseType: !2436, size: 24, offset: 544)
!2436 = !DICompositeType(tag: DW_TAG_array_type, baseType: !465, size: 24, elements: !1527)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "_nbuf", scope: !2396, file: !2390, line: 217, baseType: !2438, size: 8, offset: 568)
!2438 = !DICompositeType(tag: DW_TAG_array_type, baseType: !465, size: 8, elements: !76)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "_lb", scope: !2396, file: !2390, line: 220, baseType: !2405, size: 64, offset: 576)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "_blksize", scope: !2396, file: !2390, line: 223, baseType: !7, size: 32, offset: 640)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2396, file: !2390, line: 224, baseType: !2442, size: 32, offset: 672)
!2442 = !DIDerivedType(tag: DW_TAG_typedef, name: "_off_t", file: !2426, line: 46, baseType: !2427)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2396, file: !2390, line: 231, baseType: !2444, size: 32, offset: 704)
!2444 = !DIDerivedType(tag: DW_TAG_typedef, name: "_flock_t", file: !2390, line: 35, baseType: !2445)
!2445 = !DIDerivedType(tag: DW_TAG_typedef, name: "_LOCK_T", file: !2446, line: 34, baseType: !2447)
!2446 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/lock.h", directory: "/home/mjshen/RTOSExploration")
!2447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2448, size: 32)
!2448 = !DICompositeType(tag: DW_TAG_structure_type, name: "__lock", file: !2446, line: 33, flags: DIFlagFwdDecl)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "_mbstate", scope: !2396, file: !2390, line: 233, baseType: !2450, size: 64, offset: 736)
!2450 = !DIDerivedType(tag: DW_TAG_typedef, name: "_mbstate_t", file: !2426, line: 170, baseType: !2451)
!2451 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2426, line: 162, size: 64, elements: !2452)
!2452 = !{!2453, !2454}
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !2451, file: !2426, line: 164, baseType: !7, size: 32)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !2451, file: !2426, line: 169, baseType: !2455, size: 32, offset: 32)
!2455 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2451, file: !2426, line: 165, size: 32, elements: !2456)
!2456 = !{!2457, !2460}
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !2455, file: !2426, line: 167, baseType: !2458, size: 32)
!2458 = !DIDerivedType(tag: DW_TAG_typedef, name: "wint_t", file: !2459, line: 116, baseType: !7)
!2459 = !DIFile(filename: "/usr/lib/llvm-14/lib/clang/14.0.6/include/stddef.h", directory: "")
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !2455, file: !2426, line: 168, baseType: !2461, size: 32)
!2461 = !DICompositeType(tag: DW_TAG_array_type, baseType: !465, size: 32, elements: !706)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2396, file: !2390, line: 234, baseType: !7, size: 32, offset: 800)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "_stdout", scope: !2389, file: !2390, line: 386, baseType: !2394, size: 32, offset: 64)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "_stderr", scope: !2389, file: !2390, line: 386, baseType: !2394, size: 32, offset: 96)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "_inc", scope: !2389, file: !2390, line: 388, baseType: !7, size: 32, offset: 128)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "_emergency", scope: !2389, file: !2390, line: 390, baseType: !2387, size: 32, offset: 160)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "__sdidinit", scope: !2389, file: !2390, line: 392, baseType: !7, size: 32, offset: 192)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "_unspecified_locale_info", scope: !2389, file: !2390, line: 394, baseType: !7, size: 32, offset: 224)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "_locale", scope: !2389, file: !2390, line: 395, baseType: !2470, size: 32, offset: 256)
!2470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2471, size: 32)
!2471 = !DICompositeType(tag: DW_TAG_structure_type, name: "__locale_t", file: !2390, line: 45, flags: DIFlagFwdDecl)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "_mp", scope: !2389, file: !2390, line: 397, baseType: !2473, size: 32, offset: 288)
!2473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2474, size: 32)
!2474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_mprec", file: !2390, line: 349, size: 128, elements: !2475)
!2475 = !{!2476, !2489, !2490, !2491}
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "_result", scope: !2474, file: !2390, line: 352, baseType: !2477, size: 32)
!2477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2478, size: 32)
!2478 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Bigint", file: !2390, line: 52, size: 192, elements: !2479)
!2479 = !{!2480, !2481, !2482, !2483, !2484, !2485}
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !2478, file: !2390, line: 54, baseType: !2477, size: 32)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "_k", scope: !2478, file: !2390, line: 55, baseType: !7, size: 32, offset: 32)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "_maxwds", scope: !2478, file: !2390, line: 55, baseType: !7, size: 32, offset: 64)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "_sign", scope: !2478, file: !2390, line: 55, baseType: !7, size: 32, offset: 96)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "_wds", scope: !2478, file: !2390, line: 55, baseType: !7, size: 32, offset: 128)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "_x", scope: !2478, file: !2390, line: 56, baseType: !2486, size: 32, offset: 160)
!2486 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2487, size: 32, elements: !76)
!2487 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ULong", file: !2390, line: 22, baseType: !2488)
!2488 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "_result_k", scope: !2474, file: !2390, line: 353, baseType: !7, size: 32, offset: 32)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "_p5s", scope: !2474, file: !2390, line: 354, baseType: !2477, size: 32, offset: 64)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "_freelist", scope: !2474, file: !2390, line: 355, baseType: !2492, size: 32, offset: 96)
!2492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2477, size: 32)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "__cleanup", scope: !2389, file: !2390, line: 399, baseType: !2494, size: 32, offset: 320)
!2494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2495, size: 32)
!2495 = !DISubroutineType(types: !2496)
!2496 = !{null, !2388}
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "_gamma_signgam", scope: !2389, file: !2390, line: 401, baseType: !7, size: 32, offset: 352)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "_cvtlen", scope: !2389, file: !2390, line: 404, baseType: !7, size: 32, offset: 384)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "_cvtbuf", scope: !2389, file: !2390, line: 405, baseType: !2387, size: 32, offset: 416)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "_r48", scope: !2389, file: !2390, line: 407, baseType: !2501, size: 32, offset: 448)
!2501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2502, size: 32)
!2502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rand48", file: !2390, line: 324, size: 192, elements: !2503)
!2503 = !{!2504, !2506, !2507, !2508}
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "_seed", scope: !2502, file: !2390, line: 325, baseType: !2505, size: 48)
!2505 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1238, size: 48, elements: !1527)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "_mult", scope: !2502, file: !2390, line: 326, baseType: !2505, size: 48, offset: 48)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "_add", scope: !2502, file: !2390, line: 327, baseType: !1238, size: 16, offset: 96)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "_rand_next", scope: !2502, file: !2390, line: 330, baseType: !2509, size: 64, offset: 128)
!2509 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "_localtime_buf", scope: !2389, file: !2390, line: 408, baseType: !2511, size: 32, offset: 480)
!2511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2512, size: 32)
!2512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__tm", file: !2390, line: 60, size: 288, elements: !2513)
!2513 = !{!2514, !2515, !2516, !2517, !2518, !2519, !2520, !2521, !2522}
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_sec", scope: !2512, file: !2390, line: 62, baseType: !7, size: 32)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_min", scope: !2512, file: !2390, line: 63, baseType: !7, size: 32, offset: 32)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_hour", scope: !2512, file: !2390, line: 64, baseType: !7, size: 32, offset: 64)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_mday", scope: !2512, file: !2390, line: 65, baseType: !7, size: 32, offset: 96)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_mon", scope: !2512, file: !2390, line: 66, baseType: !7, size: 32, offset: 128)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_year", scope: !2512, file: !2390, line: 67, baseType: !7, size: 32, offset: 160)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_wday", scope: !2512, file: !2390, line: 68, baseType: !7, size: 32, offset: 192)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_yday", scope: !2512, file: !2390, line: 69, baseType: !7, size: 32, offset: 224)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_isdst", scope: !2512, file: !2390, line: 70, baseType: !7, size: 32, offset: 256)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "_asctime_buf", scope: !2389, file: !2390, line: 409, baseType: !2387, size: 32, offset: 512)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "_sig_func", scope: !2389, file: !2390, line: 412, baseType: !2525, size: 32, offset: 544)
!2525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2526, size: 32)
!2526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2527, size: 32)
!2527 = !DISubroutineType(types: !2528)
!2528 = !{null, !7}
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "_atexit", scope: !2389, file: !2390, line: 416, baseType: !2530, size: 32, offset: 576)
!2530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2531, size: 32)
!2531 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_atexit", file: !2390, line: 90, size: 1120, elements: !2532)
!2532 = !{!2533, !2534, !2535, !2538}
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !2531, file: !2390, line: 91, baseType: !2530, size: 32)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "_ind", scope: !2531, file: !2390, line: 92, baseType: !7, size: 32, offset: 32)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "_fns", scope: !2531, file: !2390, line: 93, baseType: !2536, size: 1024, offset: 64)
!2536 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2537, size: 1024, elements: !330)
!2537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !291, size: 32)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "_on_exit_args_ptr", scope: !2531, file: !2390, line: 94, baseType: !2539, size: 32, offset: 1088)
!2539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2540, size: 32)
!2540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_on_exit_args", file: !2390, line: 79, size: 2112, elements: !2541)
!2541 = !{!2542, !2544, !2545, !2546}
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "_fnargs", scope: !2540, file: !2390, line: 80, baseType: !2543, size: 1024)
!2543 = !DICompositeType(tag: DW_TAG_array_type, baseType: !88, size: 1024, elements: !330)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "_dso_handle", scope: !2540, file: !2390, line: 81, baseType: !2543, size: 1024, offset: 1024)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "_fntypes", scope: !2540, file: !2390, line: 83, baseType: !2487, size: 32, offset: 2048)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "_is_cxa", scope: !2540, file: !2390, line: 86, baseType: !2487, size: 32, offset: 2080)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "_atexit0", scope: !2389, file: !2390, line: 417, baseType: !2531, size: 1120, offset: 608)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "__sglue", scope: !2389, file: !2390, line: 420, baseType: !2549, size: 96, offset: 1728)
!2549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_glue", file: !2390, line: 296, size: 96, elements: !2550)
!2550 = !{!2551, !2553, !2554}
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !2549, file: !2390, line: 298, baseType: !2552, size: 32)
!2552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2549, size: 32)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "_niobs", scope: !2549, file: !2390, line: 299, baseType: !7, size: 32, offset: 32)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "_iobs", scope: !2549, file: !2390, line: 300, baseType: !2394, size: 32, offset: 64)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "__sf", scope: !2389, file: !2390, line: 421, baseType: !2394, size: 32, offset: 1824)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "_misc", scope: !2389, file: !2390, line: 422, baseType: !2557, size: 32, offset: 1856)
!2557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2558, size: 32)
!2558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_misc_reent", file: !2390, line: 359, size: 640, elements: !2559)
!2559 = !{!2560, !2561, !2562, !2563, !2564, !2566, !2567, !2568, !2569, !2570, !2571}
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "_strtok_last", scope: !2558, file: !2390, line: 362, baseType: !2387, size: 32)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "_mblen_state", scope: !2558, file: !2390, line: 363, baseType: !2450, size: 64, offset: 32)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "_wctomb_state", scope: !2558, file: !2390, line: 364, baseType: !2450, size: 64, offset: 96)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "_mbtowc_state", scope: !2558, file: !2390, line: 365, baseType: !2450, size: 64, offset: 160)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "_l64a_buf", scope: !2558, file: !2390, line: 366, baseType: !2565, size: 64, offset: 224)
!2565 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1683, size: 64, elements: !960)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "_getdate_err", scope: !2558, file: !2390, line: 367, baseType: !7, size: 32, offset: 288)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "_mbrlen_state", scope: !2558, file: !2390, line: 368, baseType: !2450, size: 64, offset: 320)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "_mbrtowc_state", scope: !2558, file: !2390, line: 369, baseType: !2450, size: 64, offset: 384)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "_mbsrtowcs_state", scope: !2558, file: !2390, line: 370, baseType: !2450, size: 64, offset: 448)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "_wcrtomb_state", scope: !2558, file: !2390, line: 371, baseType: !2450, size: 64, offset: 512)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "_wcsrtombs_state", scope: !2558, file: !2390, line: 372, baseType: !2450, size: 64, offset: 576)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "_signal_buf", scope: !2389, file: !2390, line: 423, baseType: !2387, size: 32, offset: 1888)
!2573 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !2459, line: 46, baseType: !18)
!2574 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2575, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2576, globals: !2577, splitDebugInlining: false, nameTableKind: None)
!2575 = !DIFile(filename: "syscalls.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/uart_loopback_data_dma/GCC")
!2576 = !{!2387, !2385}
!2577 = !{!2379}
!2578 = !{!2579, !2580, !2581, !2582}
!2579 = !DILocalVariable(name: "r", arg: 1, scope: !2381, file: !2382, line: 66, type: !2388)
!2580 = !DILocalVariable(name: "nbytes", arg: 2, scope: !2381, file: !2382, line: 66, type: !2573)
!2581 = !DILocalVariable(name: "prev_heap_end", scope: !2381, file: !2382, line: 70, type: !2387)
!2582 = !DILocalVariable(name: "stack", scope: !2381, file: !2382, line: 71, type: !2387)
!2583 = !DIGlobalVariableExpression(var: !2584, expr: !DIExpression())
!2584 = distinct !DIGlobalVariable(name: "System_Initialize_Done", scope: !2585, file: !2586, line: 52, type: !60, isLocal: true, isDefinition: true)
!2585 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2586, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2587, globals: !2690, splitDebugInlining: false, nameTableKind: None)
!2586 = !DIFile(filename: "../../../../../project/mt2523_hdk/hal_examples/uart_loopback_data_dma/src/system_mt2523.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/uart_loopback_data_dma/GCC")
!2587 = !{!2588, !2596, !61, !2641, !2646, !2671}
!2588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2589, size: 32)
!2589 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !1083, line: 656, baseType: !2590)
!2590 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1083, line: 650, size: 128, elements: !2591)
!2591 = !{!2592, !2593, !2594, !2595}
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !2590, file: !1083, line: 652, baseType: !60, size: 32)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !2590, file: !1083, line: 653, baseType: !60, size: 32, offset: 32)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !2590, file: !1083, line: 654, baseType: !60, size: 32, offset: 64)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !2590, file: !1083, line: 655, baseType: !272, size: 32, offset: 96)
!2596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2597, size: 32)
!2597 = !DIDerivedType(tag: DW_TAG_typedef, name: "CONFIGSYS_REGISTER_T", file: !56, line: 1952, baseType: !2598)
!2598 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1921, size: 8288, elements: !2599)
!2599 = !{!2600, !2601, !2602, !2603, !2604, !2605, !2606, !2607, !2608, !2610, !2611, !2615, !2616, !2618, !2619, !2623, !2624, !2625, !2626, !2627, !2628, !2629, !2630, !2631, !2632, !2633, !2634, !2638, !2639, !2640}
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDA", scope: !2598, file: !56, line: 1922, baseType: !60, size: 32)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDB", scope: !2598, file: !56, line: 1923, baseType: !60, size: 32, offset: 32)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDC", scope: !2598, file: !56, line: 1924, baseType: !60, size: 32, offset: 64)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDD", scope: !2598, file: !56, line: 1925, baseType: !60, size: 32, offset: 96)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "reserver1", scope: !2598, file: !56, line: 1926, baseType: !60, size: 32, offset: 128)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDF", scope: !2598, file: !56, line: 1927, baseType: !60, size: 32, offset: 160)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDG", scope: !2598, file: !56, line: 1928, baseType: !60, size: 32, offset: 192)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDH", scope: !2598, file: !56, line: 1929, baseType: !60, size: 32, offset: 224)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "reserver2", scope: !2598, file: !56, line: 1930, baseType: !2609, size: 768, offset: 256)
!2609 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 768, elements: !1122)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_SOURCE_SEL", scope: !2598, file: !56, line: 1931, baseType: !60, size: 32, offset: 1024)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "reserver3", scope: !2598, file: !56, line: 1932, baseType: !2612, size: 992, offset: 1056)
!2612 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 992, elements: !2613)
!2613 = !{!2614}
!2614 = !DISubrange(count: 31)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEP_COND", scope: !2598, file: !56, line: 1933, baseType: !60, size: 32, offset: 2048)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "reserver4", scope: !2598, file: !56, line: 1934, baseType: !2617, size: 416, offset: 2080)
!2617 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 416, elements: !980)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "TOP_DEBUG", scope: !2598, file: !56, line: 1935, baseType: !60, size: 32, offset: 2496)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "reserver5", scope: !2598, file: !56, line: 1936, baseType: !2620, size: 1568, offset: 2528)
!2620 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 1568, elements: !2621)
!2621 = !{!2622}
!2622 = !DISubrange(count: 49)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_COND0", scope: !2598, file: !56, line: 1937, baseType: !272, size: 32, offset: 4096)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_COND1", scope: !2598, file: !56, line: 1938, baseType: !272, size: 32, offset: 4128)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_COND2", scope: !2598, file: !56, line: 1939, baseType: !272, size: 32, offset: 4160)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "reserver6", scope: !2598, file: !56, line: 1940, baseType: !60, size: 32, offset: 4192)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_SETD0", scope: !2598, file: !56, line: 1941, baseType: !60, size: 32, offset: 4224)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_SETD1", scope: !2598, file: !56, line: 1942, baseType: !60, size: 32, offset: 4256)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_SETD2", scope: !2598, file: !56, line: 1943, baseType: !60, size: 32, offset: 4288)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "reserver7", scope: !2598, file: !56, line: 1944, baseType: !60, size: 32, offset: 4320)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_CLRD0", scope: !2598, file: !56, line: 1945, baseType: !60, size: 32, offset: 4352)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_CLRD1", scope: !2598, file: !56, line: 1946, baseType: !60, size: 32, offset: 4384)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_CLRD2", scope: !2598, file: !56, line: 1947, baseType: !60, size: 32, offset: 4416)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "reserver8", scope: !2598, file: !56, line: 1948, baseType: !2635, size: 3744, offset: 4448)
!2635 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 3744, elements: !2636)
!2636 = !{!2637}
!2637 = !DISubrange(count: 117)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "LPM_CON", scope: !2598, file: !56, line: 1949, baseType: !60, size: 32, offset: 8192)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "reserver9", scope: !2598, file: !56, line: 1950, baseType: !60, size: 32, offset: 8224)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "LPM_L2H_CNT", scope: !2598, file: !56, line: 1951, baseType: !272, size: 32, offset: 8256)
!2641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2642, size: 32)
!2642 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFUSE_REGISTER_T", file: !56, line: 2158, baseType: !2643)
!2643 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 2156, size: 32, elements: !2644)
!2644 = !{!2645}
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "EFUSE_CPU_104M", scope: !2643, file: !56, line: 2157, baseType: !60, size: 32)
!2646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2647, size: 32)
!2647 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1083, line: 418, baseType: !2648)
!2648 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1083, line: 395, size: 1120, elements: !2649)
!2649 = !{!2650, !2651, !2652, !2653, !2654, !2655, !2656, !2657, !2658, !2659, !2660, !2661, !2662, !2663, !2664, !2665, !2666, !2667, !2668, !2669, !2670}
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2648, file: !1083, line: 397, baseType: !272, size: 32)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2648, file: !1083, line: 398, baseType: !60, size: 32, offset: 32)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2648, file: !1083, line: 399, baseType: !60, size: 32, offset: 64)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2648, file: !1083, line: 400, baseType: !60, size: 32, offset: 96)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2648, file: !1083, line: 401, baseType: !60, size: 32, offset: 128)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2648, file: !1083, line: 402, baseType: !60, size: 32, offset: 160)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2648, file: !1083, line: 403, baseType: !1093, size: 96, offset: 192)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2648, file: !1083, line: 404, baseType: !60, size: 32, offset: 288)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2648, file: !1083, line: 405, baseType: !60, size: 32, offset: 320)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2648, file: !1083, line: 406, baseType: !60, size: 32, offset: 352)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2648, file: !1083, line: 407, baseType: !60, size: 32, offset: 384)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2648, file: !1083, line: 408, baseType: !60, size: 32, offset: 416)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2648, file: !1083, line: 409, baseType: !60, size: 32, offset: 448)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2648, file: !1083, line: 410, baseType: !60, size: 32, offset: 480)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2648, file: !1083, line: 411, baseType: !1102, size: 64, offset: 512)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2648, file: !1083, line: 412, baseType: !272, size: 32, offset: 576)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2648, file: !1083, line: 413, baseType: !272, size: 32, offset: 608)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2648, file: !1083, line: 414, baseType: !1106, size: 128, offset: 640)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2648, file: !1083, line: 415, baseType: !1108, size: 160, offset: 768)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2648, file: !1083, line: 416, baseType: !1112, size: 160, offset: 928)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2648, file: !1083, line: 417, baseType: !60, size: 32, offset: 1088)
!2671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2672, size: 32)
!2672 = !DIDerivedType(tag: DW_TAG_typedef, name: "CACHE_REGISTER_T", file: !56, line: 276, baseType: !2673)
!2673 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 260, size: 525312, elements: !2674)
!2674 = !{!2675, !2676, !2677, !2678, !2679, !2680, !2681, !2682, !2683, !2684, !2685, !2686, !2687, !2688, !2689}
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CON", scope: !2673, file: !56, line: 261, baseType: !60, size: 32)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_OP", scope: !2673, file: !56, line: 262, baseType: !60, size: 32, offset: 32)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0L", scope: !2673, file: !56, line: 263, baseType: !60, size: 32, offset: 64)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0U", scope: !2673, file: !56, line: 264, baseType: !60, size: 32, offset: 96)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0L", scope: !2673, file: !56, line: 265, baseType: !60, size: 32, offset: 128)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0U", scope: !2673, file: !56, line: 266, baseType: !60, size: 32, offset: 160)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1L", scope: !2673, file: !56, line: 267, baseType: !60, size: 32, offset: 192)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1U", scope: !2673, file: !56, line: 268, baseType: !60, size: 32, offset: 224)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1L", scope: !2673, file: !56, line: 269, baseType: !60, size: 32, offset: 256)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1U", scope: !2673, file: !56, line: 270, baseType: !60, size: 32, offset: 288)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2673, file: !56, line: 271, baseType: !75, size: 32, offset: 320)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_REGION_EN", scope: !2673, file: !56, line: 272, baseType: !60, size: 32, offset: 352)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2673, file: !56, line: 273, baseType: !80, size: 523904, offset: 384)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_ENTRY_N", scope: !2673, file: !56, line: 274, baseType: !84, size: 512, offset: 524288)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_END_ENTRY_N", scope: !2673, file: !56, line: 275, baseType: !84, size: 512, offset: 524800)
!2690 = !{!2691, !2583}
!2691 = !DIGlobalVariableExpression(var: !2692, expr: !DIExpression())
!2692 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !2585, file: !2586, line: 50, type: !61, isLocal: false, isDefinition: true)
!2693 = !DIGlobalVariableExpression(var: !2694, expr: !DIExpression())
!2694 = distinct !DIGlobalVariable(name: "build_date_time_str", scope: !2695, file: !2700, line: 4, type: !2706, isLocal: false, isDefinition: true)
!2695 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2696, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !2697, splitDebugInlining: false, nameTableKind: None)
!2696 = !DIFile(filename: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/uart_loopback_data_dma/GCC/build/middleware/MTK/verno/verno.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/uart_loopback_data_dma/GCC")
!2697 = !{!2693, !2698, !2704}
!2698 = !DIGlobalVariableExpression(var: !2699, expr: !DIExpression())
!2699 = distinct !DIGlobalVariable(name: "sw_verno_str", scope: !2695, file: !2700, line: 5, type: !2701, isLocal: false, isDefinition: true)
!2700 = !DIFile(filename: "build/middleware/MTK/verno/verno.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/uart_loopback_data_dma/GCC")
!2701 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1683, size: 88, elements: !2702)
!2702 = !{!2703}
!2703 = !DISubrange(count: 11)
!2704 = !DIGlobalVariableExpression(var: !2705, expr: !DIExpression())
!2705 = distinct !DIGlobalVariable(name: "hw_verno_str", scope: !2695, file: !2700, line: 6, type: !2701, isLocal: false, isDefinition: true)
!2706 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1683, size: 248, elements: !2613)
!2707 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2708, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2709, retainedTypes: !2732, splitDebugInlining: false, nameTableKind: None)
!2708 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_gpt.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/uart_loopback_data_dma/GCC")
!2709 = !{!2110, !245, !259, !2710, !2714, !254, !157}
!2710 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 857, baseType: !18, size: 32, elements: !2711)
!2711 = !{!2712, !2713}
!2712 = !DIEnumerator(name: "HAL_GPT_CLOCK_SOURCE_32K", value: 0)
!2713 = !DIEnumerator(name: "HAL_GPT_CLOCK_SOURCE_1M", value: 1)
!2714 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !158, line: 87, baseType: !18, size: 32, elements: !2715)
!2715 = !{!2716, !2717, !2718, !2719, !2720, !2721, !2722, !2723, !2724, !2725, !2726, !2727, !2728, !2729, !2730, !2731}
!2716 = !DIEnumerator(name: "GPT_DIVIDE_1", value: 0)
!2717 = !DIEnumerator(name: "GPT_DIVIDE_2", value: 1)
!2718 = !DIEnumerator(name: "GPT_DIVIDE_3", value: 2)
!2719 = !DIEnumerator(name: "GPT_DIVIDE_4", value: 3)
!2720 = !DIEnumerator(name: "GPT_DIVIDE_5", value: 4)
!2721 = !DIEnumerator(name: "GPT_DIVIDE_6", value: 5)
!2722 = !DIEnumerator(name: "GPT_DIVIDE_7", value: 6)
!2723 = !DIEnumerator(name: "GPT_DIVIDE_8", value: 7)
!2724 = !DIEnumerator(name: "GPT_DIVIDE_9", value: 8)
!2725 = !DIEnumerator(name: "GPT_DIVIDE_10", value: 9)
!2726 = !DIEnumerator(name: "GPT_DIVIDE_11", value: 10)
!2727 = !DIEnumerator(name: "GPT_DIVIDE_12", value: 11)
!2728 = !DIEnumerator(name: "GPT_DIVIDE_13", value: 12)
!2729 = !DIEnumerator(name: "GPT_DIVIDE_16", value: 13)
!2730 = !DIEnumerator(name: "GPT_DIVIDE_32", value: 14)
!2731 = !DIEnumerator(name: "GPT_DIVIDE_64", value: 15)
!2732 = !{!61, !88, !307}
!2733 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2734, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2735, retainedTypes: !2736, splitDebugInlining: false, nameTableKind: None)
!2734 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_uart_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/uart_loopback_data_dma/GCC")
!2735 = !{!911, !917, !921, !993}
!2736 = !{!463}
!2737 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2738, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2739, retainedTypes: !2740, splitDebugInlining: false, nameTableKind: None)
!2738 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_nvic_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/uart_loopback_data_dma/GCC")
!2739 = !{!168, !926}
!2740 = !{!528, !2741, !61, !2766, !1144}
!2741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2742, size: 32)
!2742 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1083, line: 418, baseType: !2743)
!2743 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1083, line: 395, size: 1120, elements: !2744)
!2744 = !{!2745, !2746, !2747, !2748, !2749, !2750, !2751, !2752, !2753, !2754, !2755, !2756, !2757, !2758, !2759, !2760, !2761, !2762, !2763, !2764, !2765}
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2743, file: !1083, line: 397, baseType: !272, size: 32)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2743, file: !1083, line: 398, baseType: !60, size: 32, offset: 32)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2743, file: !1083, line: 399, baseType: !60, size: 32, offset: 64)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2743, file: !1083, line: 400, baseType: !60, size: 32, offset: 96)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2743, file: !1083, line: 401, baseType: !60, size: 32, offset: 128)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2743, file: !1083, line: 402, baseType: !60, size: 32, offset: 160)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2743, file: !1083, line: 403, baseType: !1093, size: 96, offset: 192)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2743, file: !1083, line: 404, baseType: !60, size: 32, offset: 288)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2743, file: !1083, line: 405, baseType: !60, size: 32, offset: 320)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2743, file: !1083, line: 406, baseType: !60, size: 32, offset: 352)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2743, file: !1083, line: 407, baseType: !60, size: 32, offset: 384)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2743, file: !1083, line: 408, baseType: !60, size: 32, offset: 416)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2743, file: !1083, line: 409, baseType: !60, size: 32, offset: 448)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2743, file: !1083, line: 410, baseType: !60, size: 32, offset: 480)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2743, file: !1083, line: 411, baseType: !1102, size: 64, offset: 512)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2743, file: !1083, line: 412, baseType: !272, size: 32, offset: 576)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2743, file: !1083, line: 413, baseType: !272, size: 32, offset: 608)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2743, file: !1083, line: 414, baseType: !1106, size: 128, offset: 640)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2743, file: !1083, line: 415, baseType: !1108, size: 160, offset: 768)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2743, file: !1083, line: 416, baseType: !1112, size: 160, offset: 928)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2743, file: !1083, line: 417, baseType: !60, size: 32, offset: 1088)
!2766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2767, size: 32)
!2767 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !1083, line: 378, baseType: !2768)
!2768 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1083, line: 363, size: 28704, elements: !2769)
!2769 = !{!2770, !2771, !2772, !2773, !2774, !2775, !2776, !2777, !2778, !2779, !2780, !2781, !2782}
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2768, file: !1083, line: 365, baseType: !1119, size: 256)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2768, file: !1083, line: 366, baseType: !1121, size: 768, offset: 256)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2768, file: !1083, line: 367, baseType: !1119, size: 256, offset: 1024)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "RSERVED1", scope: !2768, file: !1083, line: 368, baseType: !1121, size: 768, offset: 1280)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2768, file: !1083, line: 369, baseType: !1119, size: 256, offset: 2048)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2768, file: !1083, line: 370, baseType: !1121, size: 768, offset: 2304)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2768, file: !1083, line: 371, baseType: !1119, size: 256, offset: 3072)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2768, file: !1083, line: 372, baseType: !1121, size: 768, offset: 3328)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2768, file: !1083, line: 373, baseType: !1119, size: 256, offset: 4096)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2768, file: !1083, line: 374, baseType: !1132, size: 1792, offset: 4352)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2768, file: !1083, line: 375, baseType: !1136, size: 1920, offset: 6144)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2768, file: !1083, line: 376, baseType: !1140, size: 20608, offset: 8064)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2768, file: !1083, line: 377, baseType: !60, size: 32, offset: 28672)
!2783 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2784, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2784 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_cfi.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/uart_loopback_data_dma/GCC")
!2785 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2786, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2786 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_log.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/uart_loopback_data_dma/GCC")
!2787 = !{!"Ubuntu clang version 14.0.6"}
!2788 = !{i32 7, !"Dwarf Version", i32 2}
!2789 = !{i32 2, !"Debug Info Version", i32 3}
!2790 = !{i32 1, !"wchar_size", i32 4}
!2791 = !{i32 1, !"min_enum_size", i32 4}
!2792 = !{i32 1, !"branch-target-enforcement", i32 0}
!2793 = !{i32 1, !"sign-return-address", i32 0}
!2794 = !{i32 1, !"sign-return-address-all", i32 0}
!2795 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!2796 = !{i32 7, !"frame-pointer", i32 2}
!2797 = distinct !DISubprogram(name: "hal_cache_init", scope: !3, file: !3, line: 53, type: !2798, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2801)
!2798 = !DISubroutineType(types: !2799)
!2799 = !{!2800}
!2800 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_status_t", file: !6, line: 172, baseType: !5)
!2801 = !{!2802, !2804}
!2802 = !DILocalVariable(name: "region", scope: !2797, file: !3, line: 55, type: !2803)
!2803 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_region_t", file: !6, line: 204, baseType: !17)
!2804 = !DILocalVariable(name: "irq_flag", scope: !2797, file: !3, line: 56, type: !61)
!2805 = !DILocation(line: 59, column: 16, scope: !2797)
!2806 = !DILocation(line: 0, scope: !2797)
!2807 = !DILocation(line: 62, column: 9, scope: !2808)
!2808 = distinct !DILexicalBlock(scope: !2797, file: !3, line: 62, column: 9)
!2809 = !{i8 0, i8 2}
!2810 = !DILocation(line: 62, column: 9, scope: !2797)
!2811 = !DILocation(line: 64, column: 9, scope: !2812)
!2812 = distinct !DILexicalBlock(scope: !2808, file: !3, line: 62, column: 39)
!2813 = !DILocation(line: 66, column: 9, scope: !2812)
!2814 = !DILocation(line: 69, column: 24, scope: !2815)
!2815 = distinct !DILexicalBlock(scope: !2808, file: !3, line: 67, column: 12)
!2816 = !DILocation(line: 72, column: 9, scope: !2815)
!2817 = !DILocation(line: 77, column: 5, scope: !2797)
!2818 = !DILocation(line: 80, column: 22, scope: !2797)
!2819 = !DILocation(line: 81, column: 28, scope: !2797)
!2820 = !DILocation(line: 84, column: 19, scope: !2797)
!2821 = !DILocation(line: 85, column: 23, scope: !2797)
!2822 = !DILocation(line: 88, column: 5, scope: !2823)
!2823 = distinct !DILexicalBlock(scope: !2797, file: !3, line: 88, column: 5)
!2824 = !DILocation(line: 90, column: 9, scope: !2825)
!2825 = distinct !DILexicalBlock(scope: !2826, file: !3, line: 88, column: 81)
!2826 = distinct !DILexicalBlock(scope: !2823, file: !3, line: 88, column: 5)
!2827 = !DILocation(line: 90, column: 38, scope: !2825)
!2828 = !DILocation(line: 91, column: 9, scope: !2825)
!2829 = !DILocation(line: 91, column: 42, scope: !2825)
!2830 = !DILocation(line: 94, column: 45, scope: !2825)
!2831 = !DILocation(line: 94, column: 47, scope: !2825)
!2832 = !DILocation(line: 95, column: 49, scope: !2825)
!2833 = !DILocation(line: 95, column: 51, scope: !2825)
!2834 = !DILocation(line: 88, column: 77, scope: !2826)
!2835 = !DILocation(line: 88, column: 46, scope: !2826)
!2836 = distinct !{!2836, !2822, !2837}
!2837 = !DILocation(line: 96, column: 5, scope: !2823)
!2838 = !DILocation(line: 99, column: 1, scope: !2797)
!2839 = distinct !DISubprogram(name: "hal_cache_invalidate_all_cache_lines", scope: !3, file: !3, line: 327, type: !2798, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2840)
!2840 = !{!2841}
!2841 = !DILocalVariable(name: "irq_flag", scope: !2839, file: !3, line: 329, type: !61)
!2842 = !DILocation(line: 332, column: 16, scope: !2839)
!2843 = !DILocation(line: 0, scope: !2839)
!2844 = !DILocation(line: 335, column: 21, scope: !2839)
!2845 = !DILocation(line: 336, column: 21, scope: !2839)
!2846 = !DILocation(line: 339, column: 21, scope: !2839)
!2847 = !DILocation(line: 340, column: 21, scope: !2839)
!2848 = !DILocation(line: 434, column: 3, scope: !2849, inlinedAt: !2851)
!2849 = distinct !DISubprogram(name: "__ISB", scope: !2850, file: !2850, line: 432, type: !291, scopeLine: 433, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !293)
!2850 = !DIFile(filename: "../../../../../driver/CMSIS/Include/core_cmInstr.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/uart_loopback_data_dma/GCC")
!2851 = distinct !DILocation(line: 343, column: 5, scope: !2839)
!2852 = !{i64 442816}
!2853 = !DILocation(line: 346, column: 5, scope: !2839)
!2854 = !DILocation(line: 348, column: 5, scope: !2839)
!2855 = distinct !DISubprogram(name: "hal_cache_deinit", scope: !3, file: !3, line: 101, type: !2798, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2856)
!2856 = !{!2857}
!2857 = !DILocalVariable(name: "region", scope: !2855, file: !3, line: 103, type: !2803)
!2858 = !DILocation(line: 107, column: 5, scope: !2855)
!2859 = !DILocation(line: 110, column: 22, scope: !2855)
!2860 = !DILocation(line: 111, column: 28, scope: !2855)
!2861 = !DILocation(line: 114, column: 19, scope: !2855)
!2862 = !DILocation(line: 115, column: 23, scope: !2855)
!2863 = !DILocation(line: 0, scope: !2855)
!2864 = !DILocation(line: 118, column: 5, scope: !2865)
!2865 = distinct !DILexicalBlock(scope: !2855, file: !3, line: 118, column: 5)
!2866 = !DILocation(line: 120, column: 9, scope: !2867)
!2867 = distinct !DILexicalBlock(scope: !2868, file: !3, line: 118, column: 81)
!2868 = distinct !DILexicalBlock(scope: !2865, file: !3, line: 118, column: 5)
!2869 = !DILocation(line: 120, column: 38, scope: !2867)
!2870 = !DILocation(line: 121, column: 9, scope: !2867)
!2871 = !DILocation(line: 121, column: 42, scope: !2867)
!2872 = !DILocation(line: 124, column: 45, scope: !2867)
!2873 = !DILocation(line: 124, column: 47, scope: !2867)
!2874 = !DILocation(line: 125, column: 49, scope: !2867)
!2875 = !DILocation(line: 125, column: 51, scope: !2867)
!2876 = !DILocation(line: 118, column: 77, scope: !2868)
!2877 = !DILocation(line: 118, column: 46, scope: !2868)
!2878 = distinct !{!2878, !2864, !2879}
!2879 = !DILocation(line: 126, column: 5, scope: !2865)
!2880 = !DILocation(line: 129, column: 20, scope: !2855)
!2881 = !DILocation(line: 131, column: 5, scope: !2855)
!2882 = distinct !DISubprogram(name: "hal_cache_enable", scope: !3, file: !3, line: 134, type: !2798, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !293)
!2883 = !DILocation(line: 137, column: 45, scope: !2884)
!2884 = distinct !DILexicalBlock(scope: !2882, file: !3, line: 137, column: 9)
!2885 = !DILocation(line: 137, column: 28, scope: !2884)
!2886 = !DILocation(line: 137, column: 9, scope: !2882)
!2887 = !DILocation(line: 142, column: 22, scope: !2882)
!2888 = !DILocation(line: 145, column: 28, scope: !2882)
!2889 = !DILocation(line: 145, column: 19, scope: !2882)
!2890 = !DILocation(line: 147, column: 5, scope: !2882)
!2891 = !DILocation(line: 0, scope: !2882)
!2892 = !DILocation(line: 148, column: 1, scope: !2882)
!2893 = distinct !DISubprogram(name: "hal_cache_disable", scope: !3, file: !3, line: 150, type: !2798, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2894)
!2894 = !{!2895}
!2895 = !DILocalVariable(name: "irq_flag", scope: !2893, file: !3, line: 152, type: !61)
!2896 = !DILocation(line: 155, column: 16, scope: !2893)
!2897 = !DILocation(line: 0, scope: !2893)
!2898 = !DILocation(line: 158, column: 16, scope: !2899)
!2899 = distinct !DILexicalBlock(scope: !2893, file: !3, line: 158, column: 9)
!2900 = !DILocation(line: 158, column: 26, scope: !2899)
!2901 = !DILocation(line: 158, column: 9, scope: !2893)
!2902 = !DILocation(line: 160, column: 9, scope: !2903)
!2903 = distinct !DILexicalBlock(scope: !2899, file: !3, line: 158, column: 49)
!2904 = !DILocation(line: 161, column: 5, scope: !2903)
!2905 = !DILocation(line: 164, column: 22, scope: !2893)
!2906 = !DILocation(line: 167, column: 28, scope: !2893)
!2907 = !DILocation(line: 167, column: 19, scope: !2893)
!2908 = !DILocation(line: 170, column: 5, scope: !2893)
!2909 = !DILocation(line: 172, column: 5, scope: !2893)
!2910 = distinct !DISubprogram(name: "hal_cache_region_enable", scope: !3, file: !3, line: 175, type: !2911, scopeLine: 176, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2913)
!2911 = !DISubroutineType(types: !2912)
!2912 = !{!2800, !2803}
!2913 = !{!2914}
!2914 = !DILocalVariable(name: "region", arg: 1, scope: !2910, file: !3, line: 175, type: !2803)
!2915 = !DILocation(line: 0, scope: !2910)
!2916 = !DILocation(line: 178, column: 16, scope: !2917)
!2917 = distinct !DILexicalBlock(scope: !2910, file: !3, line: 178, column: 9)
!2918 = !DILocation(line: 178, column: 9, scope: !2910)
!2919 = !DILocation(line: 183, column: 9, scope: !2920)
!2920 = distinct !DILexicalBlock(scope: !2910, file: !3, line: 183, column: 9)
!2921 = !DILocation(line: 183, column: 38, scope: !2920)
!2922 = !DILocation(line: 183, column: 9, scope: !2910)
!2923 = !DILocation(line: 184, column: 38, scope: !2924)
!2924 = distinct !DILexicalBlock(scope: !2920, file: !3, line: 183, column: 62)
!2925 = !DILocation(line: 184, column: 32, scope: !2924)
!2926 = !DILocation(line: 190, column: 32, scope: !2910)
!2927 = !DILocation(line: 190, column: 23, scope: !2910)
!2928 = !DILocation(line: 192, column: 5, scope: !2910)
!2929 = !DILocation(line: 193, column: 1, scope: !2910)
!2930 = distinct !DISubprogram(name: "hal_cache_region_disable", scope: !3, file: !3, line: 195, type: !2911, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2931)
!2931 = !{!2932}
!2932 = !DILocalVariable(name: "region", arg: 1, scope: !2930, file: !3, line: 195, type: !2803)
!2933 = !DILocation(line: 0, scope: !2930)
!2934 = !DILocation(line: 198, column: 16, scope: !2935)
!2935 = distinct !DILexicalBlock(scope: !2930, file: !3, line: 198, column: 9)
!2936 = !DILocation(line: 198, column: 9, scope: !2930)
!2937 = !DILocation(line: 203, column: 35, scope: !2930)
!2938 = !DILocation(line: 203, column: 31, scope: !2930)
!2939 = !DILocation(line: 203, column: 28, scope: !2930)
!2940 = !DILocation(line: 206, column: 32, scope: !2930)
!2941 = !DILocation(line: 206, column: 23, scope: !2930)
!2942 = !DILocation(line: 209, column: 41, scope: !2930)
!2943 = !DILocation(line: 209, column: 43, scope: !2930)
!2944 = !DILocation(line: 210, column: 45, scope: !2930)
!2945 = !DILocation(line: 210, column: 47, scope: !2930)
!2946 = !DILocation(line: 212, column: 5, scope: !2930)
!2947 = !DILocation(line: 213, column: 1, scope: !2930)
!2948 = distinct !DISubprogram(name: "hal_cache_set_size", scope: !3, file: !3, line: 215, type: !2949, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2952)
!2949 = !DISubroutineType(types: !2950)
!2950 = !{!2800, !2951}
!2951 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_size_t", file: !6, line: 182, baseType: !37)
!2952 = !{!2953}
!2953 = !DILocalVariable(name: "cache_size", arg: 1, scope: !2948, file: !3, line: 215, type: !2951)
!2954 = !DILocation(line: 0, scope: !2948)
!2955 = !DILocation(line: 218, column: 20, scope: !2956)
!2956 = distinct !DILexicalBlock(scope: !2948, file: !3, line: 218, column: 9)
!2957 = !DILocation(line: 218, column: 9, scope: !2948)
!2958 = !DILocation(line: 223, column: 22, scope: !2948)
!2959 = !DILocation(line: 224, column: 37, scope: !2948)
!2960 = !DILocation(line: 224, column: 22, scope: !2948)
!2961 = !DILocation(line: 227, column: 20, scope: !2962)
!2962 = distinct !DILexicalBlock(scope: !2948, file: !3, line: 227, column: 9)
!2963 = !DILocation(line: 227, column: 9, scope: !2948)
!2964 = !DILocation(line: 228, column: 26, scope: !2965)
!2965 = distinct !DILexicalBlock(scope: !2962, file: !3, line: 227, column: 43)
!2966 = !DILocation(line: 229, column: 5, scope: !2965)
!2967 = !DILocation(line: 232, column: 28, scope: !2948)
!2968 = !DILocation(line: 232, column: 19, scope: !2948)
!2969 = !DILocation(line: 234, column: 5, scope: !2948)
!2970 = !DILocation(line: 235, column: 1, scope: !2948)
!2971 = distinct !DISubprogram(name: "hal_cache_region_config", scope: !3, file: !3, line: 237, type: !2972, scopeLine: 238, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2981)
!2972 = !DISubroutineType(types: !2973)
!2973 = !{!2800, !2803, !2974}
!2974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2975, size: 32)
!2975 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2976)
!2976 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_region_config_t", file: !6, line: 222, baseType: !2977)
!2977 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 219, size: 64, elements: !2978)
!2978 = !{!2979, !2980}
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "cache_region_address", scope: !2977, file: !6, line: 220, baseType: !61, size: 32)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "cache_region_size", scope: !2977, file: !6, line: 221, baseType: !61, size: 32, offset: 32)
!2981 = !{!2982, !2983}
!2982 = !DILocalVariable(name: "region", arg: 1, scope: !2971, file: !3, line: 237, type: !2803)
!2983 = !DILocalVariable(name: "region_config", arg: 2, scope: !2971, file: !3, line: 237, type: !2974)
!2984 = !DILocation(line: 0, scope: !2971)
!2985 = !DILocation(line: 240, column: 16, scope: !2986)
!2986 = distinct !DILexicalBlock(scope: !2971, file: !3, line: 240, column: 9)
!2987 = !DILocation(line: 240, column: 9, scope: !2971)
!2988 = !DILocation(line: 245, column: 23, scope: !2989)
!2989 = distinct !DILexicalBlock(scope: !2971, file: !3, line: 245, column: 9)
!2990 = !DILocation(line: 245, column: 9, scope: !2971)
!2991 = !DILocation(line: 250, column: 24, scope: !2992)
!2992 = distinct !DILexicalBlock(scope: !2971, file: !3, line: 250, column: 9)
!2993 = !DILocation(line: 250, column: 45, scope: !2992)
!2994 = !DILocation(line: 250, column: 9, scope: !2971)
!2995 = !DILocation(line: 251, column: 9, scope: !2996)
!2996 = distinct !DILexicalBlock(scope: !2992, file: !3, line: 250, column: 81)
!2997 = !DILocation(line: 256, column: 24, scope: !2998)
!2998 = distinct !DILexicalBlock(scope: !2971, file: !3, line: 256, column: 9)
!2999 = !DILocation(line: 256, column: 42, scope: !2998)
!3000 = !DILocation(line: 256, column: 9, scope: !2971)
!3001 = !DILocation(line: 257, column: 9, scope: !3002)
!3002 = distinct !DILexicalBlock(scope: !2998, file: !3, line: 256, column: 78)
!3003 = !DILocation(line: 262, column: 5, scope: !2971)
!3004 = !DILocation(line: 262, column: 34, scope: !2971)
!3005 = !DILocation(line: 263, column: 55, scope: !2971)
!3006 = !DILocation(line: 263, column: 93, scope: !2971)
!3007 = !DILocation(line: 263, column: 76, scope: !2971)
!3008 = !DILocation(line: 263, column: 5, scope: !2971)
!3009 = !DILocation(line: 263, column: 38, scope: !2971)
!3010 = !DILocation(line: 266, column: 34, scope: !2971)
!3011 = !DILocation(line: 269, column: 45, scope: !2971)
!3012 = !DILocation(line: 269, column: 41, scope: !2971)
!3013 = !DILocation(line: 269, column: 43, scope: !2971)
!3014 = !DILocation(line: 270, column: 49, scope: !2971)
!3015 = !DILocation(line: 270, column: 45, scope: !2971)
!3016 = !DILocation(line: 270, column: 47, scope: !2971)
!3017 = !DILocation(line: 272, column: 5, scope: !2971)
!3018 = !DILocation(line: 273, column: 1, scope: !2971)
!3019 = distinct !DISubprogram(name: "hal_cache_invalidate_one_cache_line", scope: !3, file: !3, line: 275, type: !3020, scopeLine: 276, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3022)
!3020 = !DISubroutineType(types: !3021)
!3021 = !{!2800, !61}
!3022 = !{!3023, !3024}
!3023 = !DILocalVariable(name: "address", arg: 1, scope: !3019, file: !3, line: 275, type: !61)
!3024 = !DILocalVariable(name: "irq_flag", scope: !3019, file: !3, line: 277, type: !61)
!3025 = !DILocation(line: 0, scope: !3019)
!3026 = !DILocation(line: 280, column: 17, scope: !3027)
!3027 = distinct !DILexicalBlock(scope: !3019, file: !3, line: 280, column: 9)
!3028 = !DILocation(line: 280, column: 9, scope: !3019)
!3029 = !DILocation(line: 284, column: 16, scope: !3019)
!3030 = !DILocation(line: 287, column: 32, scope: !3019)
!3031 = !DILocation(line: 287, column: 21, scope: !3019)
!3032 = !DILocation(line: 288, column: 21, scope: !3019)
!3033 = !DILocation(line: 434, column: 3, scope: !2849, inlinedAt: !3034)
!3034 = distinct !DILocation(line: 291, column: 5, scope: !3019)
!3035 = !DILocation(line: 294, column: 5, scope: !3019)
!3036 = !DILocation(line: 296, column: 5, scope: !3019)
!3037 = !DILocation(line: 297, column: 1, scope: !3019)
!3038 = distinct !DISubprogram(name: "hal_cache_invalidate_multiple_cache_lines", scope: !3, file: !3, line: 299, type: !3039, scopeLine: 300, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3041)
!3039 = !DISubroutineType(types: !3040)
!3040 = !{!2800, !61, !61}
!3041 = !{!3042, !3043, !3044, !3045}
!3042 = !DILocalVariable(name: "address", arg: 1, scope: !3038, file: !3, line: 299, type: !61)
!3043 = !DILocalVariable(name: "length", arg: 2, scope: !3038, file: !3, line: 299, type: !61)
!3044 = !DILocalVariable(name: "irq_flag", scope: !3038, file: !3, line: 301, type: !61)
!3045 = !DILocalVariable(name: "end_address", scope: !3038, file: !3, line: 302, type: !61)
!3046 = !DILocation(line: 0, scope: !3038)
!3047 = !DILocation(line: 302, column: 36, scope: !3038)
!3048 = !DILocation(line: 305, column: 47, scope: !3049)
!3049 = distinct !DILexicalBlock(scope: !3038, file: !3, line: 305, column: 9)
!3050 = !DILocation(line: 310, column: 16, scope: !3038)
!3051 = !DILocation(line: 313, column: 20, scope: !3038)
!3052 = !DILocation(line: 313, column: 5, scope: !3038)
!3053 = !DILocation(line: 314, column: 9, scope: !3054)
!3054 = distinct !DILexicalBlock(scope: !3038, file: !3, line: 313, column: 35)
!3055 = !DILocation(line: 315, column: 17, scope: !3054)
!3056 = distinct !{!3056, !3052, !3057}
!3057 = !DILocation(line: 316, column: 5, scope: !3038)
!3058 = !DILocation(line: 434, column: 3, scope: !2849, inlinedAt: !3059)
!3059 = distinct !DILocation(line: 319, column: 5, scope: !3038)
!3060 = !DILocation(line: 322, column: 5, scope: !3038)
!3061 = !DILocation(line: 324, column: 5, scope: !3038)
!3062 = !DILocation(line: 325, column: 1, scope: !3038)
!3063 = distinct !DISubprogram(name: "hal_cache_flush_one_cache_line", scope: !3, file: !3, line: 351, type: !3020, scopeLine: 352, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3064)
!3064 = !{!3065, !3066}
!3065 = !DILocalVariable(name: "address", arg: 1, scope: !3063, file: !3, line: 351, type: !61)
!3066 = !DILocalVariable(name: "irq_flag", scope: !3063, file: !3, line: 353, type: !61)
!3067 = !DILocation(line: 0, scope: !3063)
!3068 = !DILocation(line: 356, column: 17, scope: !3069)
!3069 = distinct !DILexicalBlock(scope: !3063, file: !3, line: 356, column: 9)
!3070 = !DILocation(line: 356, column: 9, scope: !3063)
!3071 = !DILocation(line: 361, column: 16, scope: !3063)
!3072 = !DILocation(line: 364, column: 32, scope: !3063)
!3073 = !DILocation(line: 364, column: 21, scope: !3063)
!3074 = !DILocation(line: 365, column: 21, scope: !3063)
!3075 = !DILocation(line: 434, column: 3, scope: !2849, inlinedAt: !3076)
!3076 = distinct !DILocation(line: 368, column: 5, scope: !3063)
!3077 = !DILocation(line: 371, column: 5, scope: !3063)
!3078 = !DILocation(line: 373, column: 5, scope: !3063)
!3079 = !DILocation(line: 374, column: 1, scope: !3063)
!3080 = distinct !DISubprogram(name: "hal_cache_flush_multiple_cache_lines", scope: !3, file: !3, line: 376, type: !3039, scopeLine: 377, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3081)
!3081 = !{!3082, !3083, !3084, !3085}
!3082 = !DILocalVariable(name: "address", arg: 1, scope: !3080, file: !3, line: 376, type: !61)
!3083 = !DILocalVariable(name: "length", arg: 2, scope: !3080, file: !3, line: 376, type: !61)
!3084 = !DILocalVariable(name: "irq_flag", scope: !3080, file: !3, line: 378, type: !61)
!3085 = !DILocalVariable(name: "end_address", scope: !3080, file: !3, line: 379, type: !61)
!3086 = !DILocation(line: 0, scope: !3080)
!3087 = !DILocation(line: 379, column: 36, scope: !3080)
!3088 = !DILocation(line: 382, column: 47, scope: !3089)
!3089 = distinct !DILexicalBlock(scope: !3080, file: !3, line: 382, column: 9)
!3090 = !DILocation(line: 387, column: 16, scope: !3080)
!3091 = !DILocation(line: 390, column: 20, scope: !3080)
!3092 = !DILocation(line: 390, column: 5, scope: !3080)
!3093 = !DILocation(line: 391, column: 9, scope: !3094)
!3094 = distinct !DILexicalBlock(scope: !3080, file: !3, line: 390, column: 35)
!3095 = !DILocation(line: 392, column: 17, scope: !3094)
!3096 = distinct !{!3096, !3092, !3097}
!3097 = !DILocation(line: 393, column: 5, scope: !3080)
!3098 = !DILocation(line: 434, column: 3, scope: !2849, inlinedAt: !3099)
!3099 = distinct !DILocation(line: 396, column: 5, scope: !3080)
!3100 = !DILocation(line: 399, column: 5, scope: !3080)
!3101 = !DILocation(line: 401, column: 5, scope: !3080)
!3102 = !DILocation(line: 402, column: 1, scope: !3080)
!3103 = distinct !DISubprogram(name: "hal_cache_flush_all_cache_lines", scope: !3, file: !3, line: 404, type: !2798, scopeLine: 405, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3104)
!3104 = !{!3105}
!3105 = !DILocalVariable(name: "irq_flag", scope: !3103, file: !3, line: 406, type: !61)
!3106 = !DILocation(line: 409, column: 16, scope: !3103)
!3107 = !DILocation(line: 0, scope: !3103)
!3108 = !DILocation(line: 412, column: 21, scope: !3103)
!3109 = !DILocation(line: 413, column: 21, scope: !3103)
!3110 = !DILocation(line: 434, column: 3, scope: !2849, inlinedAt: !3111)
!3111 = distinct !DILocation(line: 416, column: 5, scope: !3103)
!3112 = !DILocation(line: 419, column: 5, scope: !3103)
!3113 = !DILocation(line: 421, column: 5, scope: !3103)
!3114 = distinct !DISubprogram(name: "hal_cache_is_cacheable", scope: !3, file: !3, line: 424, type: !3115, scopeLine: 425, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3117)
!3115 = !DISubroutineType(types: !3116)
!3116 = !{!91, !61}
!3117 = !{!3118, !3119}
!3118 = !DILocalVariable(name: "address", arg: 1, scope: !3114, file: !3, line: 424, type: !61)
!3119 = !DILocalVariable(name: "region", scope: !3114, file: !3, line: 426, type: !2803)
!3120 = !DILocation(line: 0, scope: !3114)
!3121 = !DILocation(line: 429, column: 18, scope: !3122)
!3122 = distinct !DILexicalBlock(scope: !3114, file: !3, line: 429, column: 9)
!3123 = !DILocation(line: 429, column: 28, scope: !3122)
!3124 = !DILocation(line: 429, column: 9, scope: !3114)
!3125 = !DILocation(line: 435, column: 20, scope: !3126)
!3126 = distinct !DILexicalBlock(scope: !3127, file: !3, line: 435, column: 13)
!3127 = distinct !DILexicalBlock(scope: !3128, file: !3, line: 433, column: 81)
!3128 = distinct !DILexicalBlock(scope: !3129, file: !3, line: 433, column: 5)
!3129 = distinct !DILexicalBlock(scope: !3114, file: !3, line: 433, column: 5)
!3130 = !DILocation(line: 435, column: 41, scope: !3126)
!3131 = !DILocation(line: 435, column: 36, scope: !3126)
!3132 = !DILocation(line: 435, column: 13, scope: !3127)
!3133 = !DILocation(line: 436, column: 30, scope: !3134)
!3134 = distinct !DILexicalBlock(scope: !3135, file: !3, line: 436, column: 17)
!3135 = distinct !DILexicalBlock(scope: !3126, file: !3, line: 435, column: 53)
!3136 = !DILocation(line: 436, column: 59, scope: !3134)
!3137 = !DILocation(line: 436, column: 26, scope: !3134)
!3138 = !DILocation(line: 436, column: 85, scope: !3134)
!3139 = !DILocation(line: 436, column: 99, scope: !3134)
!3140 = !DILocation(line: 436, column: 97, scope: !3134)
!3141 = !DILocation(line: 436, column: 17, scope: !3135)
!3142 = !DILocation(line: 433, column: 77, scope: !3128)
!3143 = !DILocation(line: 433, column: 46, scope: !3128)
!3144 = !DILocation(line: 433, column: 5, scope: !3129)
!3145 = distinct !{!3145, !3144, !3146}
!3146 = !DILocation(line: 440, column: 5, scope: !3129)
!3147 = !DILocation(line: 442, column: 1, scope: !3114)
!3148 = distinct !DISubprogram(name: "hal_gpt_init", scope: !2708, file: !2708, line: 95, type: !3149, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2707, retainedNodes: !3153)
!3149 = !DISubroutineType(types: !3150)
!3150 = !{!3151, !3152}
!3151 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_status_t", file: !255, line: 393, baseType: !2110)
!3152 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_port_t", file: !98, line: 854, baseType: !245)
!3153 = !{!3154}
!3154 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3148, file: !2708, line: 95, type: !3152)
!3155 = !DILocation(line: 0, scope: !3148)
!3156 = !DILocation(line: 98, column: 9, scope: !3157)
!3157 = distinct !DILexicalBlock(scope: !3148, file: !2708, line: 98, column: 9)
!3158 = !DILocation(line: 98, column: 9, scope: !3148)
!3159 = !DILocation(line: 102, column: 10, scope: !3160)
!3160 = distinct !DILexicalBlock(scope: !3148, file: !2708, line: 102, column: 9)
!3161 = !DILocation(line: 102, column: 34, scope: !3160)
!3162 = !DILocation(line: 102, column: 49, scope: !3160)
!3163 = !DILocation(line: 102, column: 69, scope: !3160)
!3164 = !DILocation(line: 103, column: 38, scope: !3160)
!3165 = !DILocation(line: 102, column: 9, scope: !3148)
!3166 = !DILocation(line: 109, column: 12, scope: !3148)
!3167 = !DILocation(line: 109, column: 5, scope: !3148)
!3168 = !DILocation(line: 112, column: 5, scope: !3148)
!3169 = !DILocation(line: 115, column: 44, scope: !3148)
!3170 = !DILocation(line: 118, column: 5, scope: !3148)
!3171 = !DILocation(line: 118, column: 23, scope: !3148)
!3172 = !DILocation(line: 118, column: 35, scope: !3148)
!3173 = !DILocation(line: 121, column: 42, scope: !3148)
!3174 = !DILocation(line: 121, column: 38, scope: !3148)
!3175 = !DILocation(line: 121, column: 5, scope: !3148)
!3176 = !DILocation(line: 121, column: 17, scope: !3148)
!3177 = !DILocation(line: 121, column: 35, scope: !3148)
!3178 = !DILocation(line: 129, column: 5, scope: !3148)
!3179 = !DILocation(line: 131, column: 1, scope: !3148)
!3180 = distinct !DISubprogram(name: "hal_gpt_is_port_valid", scope: !2708, file: !2708, line: 81, type: !3181, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2707, retainedNodes: !3183)
!3181 = !DISubroutineType(types: !3182)
!3182 = !{!91, !3152}
!3183 = !{!3184}
!3184 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3180, file: !2708, line: 81, type: !3152)
!3185 = !DILocation(line: 0, scope: !3180)
!3186 = !DILocation(line: 84, column: 25, scope: !3187)
!3187 = distinct !DILexicalBlock(scope: !3180, file: !2708, line: 84, column: 9)
!3188 = !DILocation(line: 84, column: 35, scope: !3187)
!3189 = !DILocation(line: 84, column: 45, scope: !3187)
!3190 = !DILocation(line: 93, column: 1, scope: !3180)
!3191 = distinct !DISubprogram(name: "hal_gpt_deinit", scope: !2708, file: !2708, line: 133, type: !3149, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2707, retainedNodes: !3192)
!3192 = !{!3193}
!3193 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3191, file: !2708, line: 133, type: !3152)
!3194 = !DILocation(line: 0, scope: !3191)
!3195 = !DILocation(line: 136, column: 9, scope: !3196)
!3196 = distinct !DILexicalBlock(scope: !3191, file: !2708, line: 136, column: 9)
!3197 = !DILocation(line: 136, column: 9, scope: !3191)
!3198 = !DILocation(line: 140, column: 9, scope: !3199)
!3199 = distinct !DILexicalBlock(scope: !3191, file: !2708, line: 140, column: 9)
!3200 = !DILocation(line: 140, column: 33, scope: !3199)
!3201 = !DILocation(line: 140, column: 48, scope: !3199)
!3202 = !DILocation(line: 140, column: 9, scope: !3191)
!3203 = !DILocation(line: 146, column: 12, scope: !3191)
!3204 = !DILocation(line: 146, column: 5, scope: !3191)
!3205 = !DILocation(line: 149, column: 29, scope: !3191)
!3206 = !DILocation(line: 149, column: 44, scope: !3191)
!3207 = !DILocation(line: 151, column: 29, scope: !3191)
!3208 = !DILocation(line: 151, column: 5, scope: !3191)
!3209 = !DILocation(line: 159, column: 5, scope: !3191)
!3210 = !DILocation(line: 160, column: 1, scope: !3191)
!3211 = distinct !DISubprogram(name: "hal_gpt_get_free_run_count", scope: !2708, file: !2708, line: 163, type: !3212, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2707, retainedNodes: !3215)
!3212 = !DISubroutineType(types: !3213)
!3213 = !{!3151, !3214, !1204}
!3214 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_clock_source_t", file: !98, line: 860, baseType: !2710)
!3215 = !{!3216, !3217}
!3216 = !DILocalVariable(name: "clock_source", arg: 1, scope: !3211, file: !2708, line: 163, type: !3214)
!3217 = !DILocalVariable(name: "count", arg: 2, scope: !3211, file: !2708, line: 163, type: !1204)
!3218 = !DILocation(line: 0, scope: !3211)
!3219 = !DILocation(line: 166, column: 9, scope: !3211)
!3220 = !DILocation(line: 167, column: 44, scope: !3221)
!3221 = distinct !DILexicalBlock(scope: !3222, file: !2708, line: 167, column: 13)
!3222 = distinct !DILexicalBlock(scope: !3223, file: !2708, line: 166, column: 51)
!3223 = distinct !DILexicalBlock(scope: !3211, file: !2708, line: 166, column: 9)
!3224 = !DILocation(line: 167, column: 59, scope: !3221)
!3225 = !DILocation(line: 167, column: 13, scope: !3222)
!3226 = !DILocation(line: 170, column: 38, scope: !3227)
!3227 = distinct !DILexicalBlock(scope: !3221, file: !2708, line: 167, column: 79)
!3228 = !DILocation(line: 170, column: 13, scope: !3227)
!3229 = !DILocation(line: 172, column: 59, scope: !3227)
!3230 = !DILocation(line: 173, column: 9, scope: !3227)
!3231 = !DILocation(line: 175, column: 36, scope: !3222)
!3232 = !DILocation(line: 175, column: 18, scope: !3222)
!3233 = !DILocation(line: 177, column: 5, scope: !3222)
!3234 = !DILocation(line: 179, column: 44, scope: !3235)
!3235 = distinct !DILexicalBlock(scope: !3236, file: !2708, line: 179, column: 13)
!3236 = distinct !DILexicalBlock(scope: !3237, file: !2708, line: 178, column: 55)
!3237 = distinct !DILexicalBlock(scope: !3223, file: !2708, line: 178, column: 14)
!3238 = !DILocation(line: 179, column: 59, scope: !3235)
!3239 = !DILocation(line: 179, column: 13, scope: !3236)
!3240 = !DILocation(line: 182, column: 38, scope: !3241)
!3241 = distinct !DILexicalBlock(scope: !3235, file: !2708, line: 179, column: 79)
!3242 = !DILocation(line: 182, column: 13, scope: !3241)
!3243 = !DILocation(line: 184, column: 59, scope: !3241)
!3244 = !DILocation(line: 186, column: 9, scope: !3241)
!3245 = !DILocation(line: 188, column: 68, scope: !3236)
!3246 = !DILocation(line: 188, column: 50, scope: !3236)
!3247 = !DILocation(line: 188, column: 18, scope: !3236)
!3248 = !DILocation(line: 0, scope: !3223)
!3249 = !DILocation(line: 193, column: 5, scope: !3211)
!3250 = !DILocation(line: 194, column: 1, scope: !3211)
!3251 = distinct !DISubprogram(name: "hal_gpt_get_duration_count", scope: !2708, file: !2708, line: 196, type: !3252, scopeLine: 197, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2707, retainedNodes: !3254)
!3252 = !DISubroutineType(types: !3253)
!3253 = !{!3151, !61, !61, !1204}
!3254 = !{!3255, !3256, !3257}
!3255 = !DILocalVariable(name: "start_count", arg: 1, scope: !3251, file: !2708, line: 196, type: !61)
!3256 = !DILocalVariable(name: "end_count", arg: 2, scope: !3251, file: !2708, line: 196, type: !61)
!3257 = !DILocalVariable(name: "duration_count", arg: 3, scope: !3251, file: !2708, line: 196, type: !1204)
!3258 = !DILocation(line: 0, scope: !3251)
!3259 = !DILocation(line: 198, column: 24, scope: !3260)
!3260 = distinct !DILexicalBlock(scope: !3251, file: !2708, line: 198, column: 9)
!3261 = !DILocation(line: 198, column: 9, scope: !3251)
!3262 = !DILocation(line: 0, scope: !3263)
!3263 = distinct !DILexicalBlock(scope: !3251, file: !2708, line: 202, column: 9)
!3264 = !DILocation(line: 208, column: 5, scope: !3251)
!3265 = !DILocation(line: 209, column: 1, scope: !3251)
!3266 = distinct !DISubprogram(name: "hal_gpt_get_running_status", scope: !2708, file: !2708, line: 211, type: !3267, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2707, retainedNodes: !3270)
!3267 = !DISubroutineType(types: !3268)
!3268 = !{!3151, !3152, !3269}
!3269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !301, size: 32)
!3270 = !{!3271, !3272}
!3271 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3266, file: !2708, line: 211, type: !3152)
!3272 = !DILocalVariable(name: "running_status", arg: 2, scope: !3266, file: !2708, line: 211, type: !3269)
!3273 = !DILocation(line: 0, scope: !3266)
!3274 = !DILocation(line: 213, column: 18, scope: !3275)
!3275 = distinct !DILexicalBlock(scope: !3266, file: !2708, line: 213, column: 9)
!3276 = !DILocation(line: 213, column: 9, scope: !3266)
!3277 = !DILocation(line: 217, column: 47, scope: !3266)
!3278 = !DILocation(line: 217, column: 21, scope: !3266)
!3279 = !DILocation(line: 219, column: 5, scope: !3266)
!3280 = !DILocation(line: 220, column: 1, scope: !3266)
!3281 = distinct !DISubprogram(name: "hal_gpt_register_callback", scope: !2708, file: !2708, line: 222, type: !3282, scopeLine: 225, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2707, retainedNodes: !3284)
!3282 = !DISubroutineType(types: !3283)
!3283 = !{!3151, !3152, !307, !88}
!3284 = !{!3285, !3286, !3287}
!3285 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3281, file: !2708, line: 222, type: !3152)
!3286 = !DILocalVariable(name: "callback", arg: 2, scope: !3281, file: !2708, line: 223, type: !307)
!3287 = !DILocalVariable(name: "user_data", arg: 3, scope: !3281, file: !2708, line: 224, type: !88)
!3288 = !DILocation(line: 0, scope: !3281)
!3289 = !DILocation(line: 227, column: 9, scope: !3290)
!3290 = distinct !DILexicalBlock(scope: !3281, file: !2708, line: 227, column: 9)
!3291 = !DILocation(line: 227, column: 9, scope: !3281)
!3292 = !DILocation(line: 231, column: 34, scope: !3293)
!3293 = distinct !DILexicalBlock(scope: !3281, file: !2708, line: 231, column: 9)
!3294 = !DILocation(line: 231, column: 49, scope: !3293)
!3295 = !DILocation(line: 231, column: 69, scope: !3293)
!3296 = !DILocation(line: 232, column: 38, scope: !3293)
!3297 = !DILocation(line: 232, column: 53, scope: !3293)
!3298 = !DILocation(line: 231, column: 9, scope: !3281)
!3299 = !DILocation(line: 237, column: 18, scope: !3300)
!3300 = distinct !DILexicalBlock(scope: !3281, file: !2708, line: 237, column: 9)
!3301 = !DILocation(line: 237, column: 9, scope: !3281)
!3302 = !DILocation(line: 245, column: 46, scope: !3281)
!3303 = !DILocation(line: 245, column: 56, scope: !3281)
!3304 = !DILocation(line: 246, column: 46, scope: !3281)
!3305 = !DILocation(line: 246, column: 56, scope: !3281)
!3306 = !DILocation(line: 248, column: 5, scope: !3281)
!3307 = !DILocation(line: 250, column: 5, scope: !3281)
!3308 = !DILocation(line: 252, column: 1, scope: !3281)
!3309 = distinct !DISubprogram(name: "hal_gpt_start_timer_ms", scope: !2708, file: !2708, line: 256, type: !3310, scopeLine: 257, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2707, retainedNodes: !3313)
!3310 = !DISubroutineType(types: !3311)
!3311 = !{!3151, !3152, !61, !3312}
!3312 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_timer_type_t", file: !255, line: 383, baseType: !254)
!3313 = !{!3314, !3315, !3316, !3317}
!3314 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3309, file: !2708, line: 256, type: !3152)
!3315 = !DILocalVariable(name: "timeout_time_ms", arg: 2, scope: !3309, file: !2708, line: 256, type: !61)
!3316 = !DILocalVariable(name: "timer_type", arg: 3, scope: !3309, file: !2708, line: 256, type: !3312)
!3317 = !DILocalVariable(name: "mask", scope: !3309, file: !2708, line: 259, type: !60)
!3318 = !DILocation(line: 0, scope: !3309)
!3319 = !DILocation(line: 259, column: 5, scope: !3309)
!3320 = !DILocation(line: 259, column: 23, scope: !3309)
!3321 = !DILocation(line: 261, column: 9, scope: !3322)
!3322 = distinct !DILexicalBlock(scope: !3309, file: !2708, line: 261, column: 9)
!3323 = !DILocation(line: 261, column: 9, scope: !3309)
!3324 = !DILocation(line: 265, column: 34, scope: !3325)
!3325 = distinct !DILexicalBlock(scope: !3309, file: !2708, line: 265, column: 9)
!3326 = !DILocation(line: 265, column: 49, scope: !3325)
!3327 = !DILocation(line: 266, column: 13, scope: !3325)
!3328 = !DILocation(line: 266, column: 41, scope: !3325)
!3329 = !DILocation(line: 266, column: 56, scope: !3325)
!3330 = !DILocation(line: 265, column: 9, scope: !3309)
!3331 = !DILocation(line: 271, column: 25, scope: !3332)
!3332 = distinct !DILexicalBlock(scope: !3309, file: !2708, line: 271, column: 9)
!3333 = !DILocation(line: 271, column: 9, scope: !3309)
!3334 = !DILocation(line: 282, column: 12, scope: !3309)
!3335 = !DILocation(line: 282, column: 10, scope: !3309)
!3336 = !DILocation(line: 284, column: 5, scope: !3309)
!3337 = !DILocation(line: 286, column: 5, scope: !3309)
!3338 = !DILocation(line: 286, column: 23, scope: !3309)
!3339 = !DILocation(line: 286, column: 34, scope: !3309)
!3340 = !DILocation(line: 287, column: 5, scope: !3309)
!3341 = !DILocation(line: 287, column: 23, scope: !3309)
!3342 = !DILocation(line: 287, column: 34, scope: !3309)
!3343 = !DILocation(line: 290, column: 5, scope: !3309)
!3344 = !DILocation(line: 290, column: 23, scope: !3309)
!3345 = !DILocation(line: 290, column: 37, scope: !3309)
!3346 = !DILocation(line: 291, column: 39, scope: !3309)
!3347 = !DILocation(line: 291, column: 5, scope: !3309)
!3348 = !DILocation(line: 291, column: 23, scope: !3309)
!3349 = !DILocation(line: 291, column: 37, scope: !3309)
!3350 = !DILocation(line: 292, column: 5, scope: !3309)
!3351 = !DILocation(line: 292, column: 23, scope: !3309)
!3352 = !DILocation(line: 292, column: 37, scope: !3309)
!3353 = !DILocation(line: 297, column: 47, scope: !3309)
!3354 = !DILocation(line: 298, column: 33, scope: !3309)
!3355 = !DILocation(line: 296, column: 5, scope: !3309)
!3356 = !DILocation(line: 296, column: 23, scope: !3309)
!3357 = !DILocation(line: 296, column: 31, scope: !3309)
!3358 = !DILocation(line: 300, column: 5, scope: !3309)
!3359 = !DILocation(line: 300, column: 29, scope: !3309)
!3360 = distinct !{!3360, !3358, !3361}
!3361 = !DILocation(line: 300, column: 39, scope: !3309)
!3362 = !DILocation(line: 301, column: 23, scope: !3309)
!3363 = !DILocation(line: 301, column: 33, scope: !3309)
!3364 = !DILocation(line: 302, column: 5, scope: !3309)
!3365 = !DILocation(line: 302, column: 23, scope: !3309)
!3366 = !DILocation(line: 302, column: 34, scope: !3309)
!3367 = !DILocation(line: 303, column: 44, scope: !3309)
!3368 = !DILocation(line: 305, column: 28, scope: !3309)
!3369 = !DILocation(line: 305, column: 5, scope: !3309)
!3370 = !DILocation(line: 306, column: 5, scope: !3309)
!3371 = !DILocation(line: 307, column: 1, scope: !3309)
!3372 = distinct !DISubprogram(name: "hal_gpt_delay_ms", scope: !2708, file: !2708, line: 310, type: !3373, scopeLine: 311, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2707, retainedNodes: !3375)
!3373 = !DISubroutineType(types: !3374)
!3374 = !{!3151, !61}
!3375 = !{!3376}
!3376 = !DILocalVariable(name: "ms", arg: 1, scope: !3372, file: !2708, line: 310, type: !61)
!3377 = !DILocation(line: 0, scope: !3372)
!3378 = !DILocation(line: 313, column: 40, scope: !3379)
!3379 = distinct !DILexicalBlock(scope: !3372, file: !2708, line: 313, column: 9)
!3380 = !DILocation(line: 313, column: 55, scope: !3379)
!3381 = !DILocation(line: 313, column: 9, scope: !3372)
!3382 = !DILocation(line: 316, column: 34, scope: !3383)
!3383 = distinct !DILexicalBlock(scope: !3379, file: !2708, line: 313, column: 75)
!3384 = !DILocation(line: 316, column: 9, scope: !3383)
!3385 = !DILocation(line: 317, column: 55, scope: !3383)
!3386 = !DILocation(line: 318, column: 5, scope: !3383)
!3387 = !DILocation(line: 320, column: 20, scope: !3372)
!3388 = !DILocation(line: 320, column: 45, scope: !3372)
!3389 = !DILocation(line: 320, column: 5, scope: !3372)
!3390 = !DILocation(line: 322, column: 5, scope: !3372)
!3391 = distinct !DISubprogram(name: "hal_gpt_start_timer_us", scope: !2708, file: !2708, line: 327, type: !3310, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2707, retainedNodes: !3392)
!3392 = !{!3393, !3394, !3395, !3396}
!3393 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3391, file: !2708, line: 327, type: !3152)
!3394 = !DILocalVariable(name: "timeout_time_us", arg: 2, scope: !3391, file: !2708, line: 327, type: !61)
!3395 = !DILocalVariable(name: "timer_type", arg: 3, scope: !3391, file: !2708, line: 327, type: !3312)
!3396 = !DILocalVariable(name: "mask", scope: !3391, file: !2708, line: 329, type: !60)
!3397 = !DILocation(line: 0, scope: !3391)
!3398 = !DILocation(line: 329, column: 5, scope: !3391)
!3399 = !DILocation(line: 329, column: 23, scope: !3391)
!3400 = !DILocation(line: 331, column: 9, scope: !3401)
!3401 = distinct !DILexicalBlock(scope: !3391, file: !2708, line: 331, column: 9)
!3402 = !DILocation(line: 331, column: 9, scope: !3391)
!3403 = !DILocation(line: 336, column: 34, scope: !3404)
!3404 = distinct !DILexicalBlock(scope: !3391, file: !2708, line: 336, column: 9)
!3405 = !DILocation(line: 336, column: 49, scope: !3404)
!3406 = !DILocation(line: 337, column: 13, scope: !3404)
!3407 = !DILocation(line: 337, column: 41, scope: !3404)
!3408 = !DILocation(line: 337, column: 56, scope: !3404)
!3409 = !DILocation(line: 336, column: 9, scope: !3391)
!3410 = !DILocation(line: 349, column: 29, scope: !3391)
!3411 = !DILocation(line: 349, column: 49, scope: !3391)
!3412 = !DILocation(line: 351, column: 12, scope: !3391)
!3413 = !DILocation(line: 351, column: 10, scope: !3391)
!3414 = !DILocation(line: 353, column: 5, scope: !3391)
!3415 = !DILocation(line: 355, column: 5, scope: !3391)
!3416 = !DILocation(line: 355, column: 23, scope: !3391)
!3417 = !DILocation(line: 355, column: 34, scope: !3391)
!3418 = !DILocation(line: 356, column: 5, scope: !3391)
!3419 = !DILocation(line: 356, column: 23, scope: !3391)
!3420 = !DILocation(line: 356, column: 34, scope: !3391)
!3421 = !DILocation(line: 359, column: 5, scope: !3391)
!3422 = !DILocation(line: 359, column: 23, scope: !3391)
!3423 = !DILocation(line: 359, column: 37, scope: !3391)
!3424 = !DILocation(line: 360, column: 39, scope: !3391)
!3425 = !DILocation(line: 360, column: 5, scope: !3391)
!3426 = !DILocation(line: 360, column: 23, scope: !3391)
!3427 = !DILocation(line: 360, column: 37, scope: !3391)
!3428 = !DILocation(line: 361, column: 5, scope: !3391)
!3429 = !DILocation(line: 361, column: 23, scope: !3391)
!3430 = !DILocation(line: 361, column: 37, scope: !3391)
!3431 = !DILocation(line: 366, column: 47, scope: !3391)
!3432 = !DILocation(line: 367, column: 33, scope: !3391)
!3433 = !DILocation(line: 365, column: 5, scope: !3391)
!3434 = !DILocation(line: 365, column: 23, scope: !3391)
!3435 = !DILocation(line: 365, column: 31, scope: !3391)
!3436 = !DILocation(line: 369, column: 5, scope: !3391)
!3437 = !DILocation(line: 369, column: 29, scope: !3391)
!3438 = distinct !{!3438, !3436, !3439}
!3439 = !DILocation(line: 369, column: 39, scope: !3391)
!3440 = !DILocation(line: 370, column: 23, scope: !3391)
!3441 = !DILocation(line: 370, column: 33, scope: !3391)
!3442 = !DILocation(line: 371, column: 5, scope: !3391)
!3443 = !DILocation(line: 371, column: 23, scope: !3391)
!3444 = !DILocation(line: 371, column: 34, scope: !3391)
!3445 = !DILocation(line: 373, column: 28, scope: !3391)
!3446 = !DILocation(line: 373, column: 5, scope: !3391)
!3447 = !DILocation(line: 375, column: 44, scope: !3391)
!3448 = !DILocation(line: 377, column: 5, scope: !3391)
!3449 = !DILocation(line: 378, column: 1, scope: !3391)
!3450 = distinct !DISubprogram(name: "hal_gpt_delay_us", scope: !2708, file: !2708, line: 382, type: !3373, scopeLine: 383, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2707, retainedNodes: !3451)
!3451 = !{!3452}
!3452 = !DILocalVariable(name: "us", arg: 1, scope: !3450, file: !2708, line: 382, type: !61)
!3453 = !DILocation(line: 0, scope: !3450)
!3454 = !DILocation(line: 385, column: 40, scope: !3455)
!3455 = distinct !DILexicalBlock(scope: !3450, file: !2708, line: 385, column: 9)
!3456 = !DILocation(line: 385, column: 55, scope: !3455)
!3457 = !DILocation(line: 385, column: 9, scope: !3450)
!3458 = !DILocation(line: 388, column: 34, scope: !3459)
!3459 = distinct !DILexicalBlock(scope: !3455, file: !2708, line: 385, column: 75)
!3460 = !DILocation(line: 388, column: 9, scope: !3459)
!3461 = !DILocation(line: 390, column: 55, scope: !3459)
!3462 = !DILocation(line: 391, column: 5, scope: !3459)
!3463 = !DILocation(line: 392, column: 20, scope: !3450)
!3464 = !DILocation(line: 392, column: 45, scope: !3450)
!3465 = !DILocation(line: 392, column: 5, scope: !3450)
!3466 = !DILocation(line: 394, column: 5, scope: !3450)
!3467 = distinct !DISubprogram(name: "hal_gpt_stop_timer", scope: !2708, file: !2708, line: 398, type: !3149, scopeLine: 399, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2707, retainedNodes: !3468)
!3468 = !{!3469, !3470}
!3469 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3467, file: !2708, line: 398, type: !3152)
!3470 = !DILocalVariable(name: "mask", scope: !3467, file: !2708, line: 400, type: !60)
!3471 = !DILocation(line: 0, scope: !3467)
!3472 = !DILocation(line: 400, column: 5, scope: !3467)
!3473 = !DILocation(line: 400, column: 23, scope: !3467)
!3474 = !DILocation(line: 402, column: 9, scope: !3475)
!3475 = distinct !DILexicalBlock(scope: !3467, file: !2708, line: 402, column: 9)
!3476 = !DILocation(line: 402, column: 9, scope: !3467)
!3477 = !DILocation(line: 413, column: 12, scope: !3467)
!3478 = !DILocation(line: 413, column: 10, scope: !3467)
!3479 = !DILocation(line: 415, column: 5, scope: !3467)
!3480 = !DILocation(line: 415, column: 23, scope: !3467)
!3481 = !DILocation(line: 415, column: 34, scope: !3467)
!3482 = !DILocation(line: 418, column: 5, scope: !3467)
!3483 = !DILocation(line: 418, column: 23, scope: !3467)
!3484 = !DILocation(line: 418, column: 34, scope: !3467)
!3485 = !DILocation(line: 420, column: 5, scope: !3467)
!3486 = !DILocation(line: 420, column: 23, scope: !3467)
!3487 = !DILocation(line: 420, column: 35, scope: !3467)
!3488 = !DILocation(line: 422, column: 29, scope: !3467)
!3489 = !DILocation(line: 422, column: 44, scope: !3467)
!3490 = !DILocation(line: 423, column: 28, scope: !3467)
!3491 = !DILocation(line: 423, column: 5, scope: !3467)
!3492 = !DILocation(line: 425, column: 33, scope: !3493)
!3493 = distinct !DILexicalBlock(scope: !3467, file: !2708, line: 425, column: 9)
!3494 = !DILocation(line: 425, column: 9, scope: !3467)
!3495 = !DILocation(line: 427, column: 53, scope: !3496)
!3496 = distinct !DILexicalBlock(scope: !3493, file: !2708, line: 425, column: 62)
!3497 = !DILocation(line: 428, column: 5, scope: !3496)
!3498 = !DILocation(line: 430, column: 1, scope: !3467)
!3499 = distinct !DISubprogram(name: "hal_gpt_sw_get_timer", scope: !2708, file: !2708, line: 434, type: !3500, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2707, retainedNodes: !3502)
!3500 = !DISubroutineType(types: !3501)
!3501 = !{!3151, !1204}
!3502 = !{!3503, !3504, !3505}
!3503 = !DILocalVariable(name: "handle", arg: 1, scope: !3499, file: !2708, line: 434, type: !1204)
!3504 = !DILocalVariable(name: "timer", scope: !3499, file: !2708, line: 436, type: !61)
!3505 = !DILocalVariable(name: "mask", scope: !3499, file: !2708, line: 437, type: !61)
!3506 = !DILocation(line: 0, scope: !3499)
!3507 = !DILocation(line: 439, column: 24, scope: !3508)
!3508 = distinct !DILexicalBlock(scope: !3499, file: !2708, line: 439, column: 9)
!3509 = !DILocation(line: 439, column: 41, scope: !3508)
!3510 = !DILocation(line: 439, column: 9, scope: !3499)
!3511 = !DILocation(line: 443, column: 16, scope: !3512)
!3512 = distinct !DILexicalBlock(scope: !3499, file: !2708, line: 443, column: 9)
!3513 = !DILocation(line: 443, column: 9, scope: !3499)
!3514 = !DILocation(line: 448, column: 12, scope: !3499)
!3515 = !DILocation(line: 450, column: 15, scope: !3499)
!3516 = !DILocation(line: 451, column: 21, scope: !3499)
!3517 = !DILocation(line: 451, column: 13, scope: !3499)
!3518 = !DILocation(line: 452, column: 33, scope: !3499)
!3519 = !DILocation(line: 452, column: 41, scope: !3499)
!3520 = !DILocation(line: 453, column: 36, scope: !3499)
!3521 = !DILocation(line: 455, column: 5, scope: !3499)
!3522 = !DILocation(line: 456, column: 5, scope: !3499)
!3523 = !DILocation(line: 457, column: 1, scope: !3499)
!3524 = distinct !DISubprogram(name: "hal_gpt_sw_free_timer", scope: !2708, file: !2708, line: 459, type: !3373, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2707, retainedNodes: !3525)
!3525 = !{!3526, !3527}
!3526 = !DILocalVariable(name: "handle", arg: 1, scope: !3524, file: !2708, line: 459, type: !61)
!3527 = !DILocalVariable(name: "timer", scope: !3524, file: !2708, line: 461, type: !60)
!3528 = !DILocation(line: 0, scope: !3524)
!3529 = !DILocation(line: 461, column: 5, scope: !3524)
!3530 = !DILocation(line: 461, column: 23, scope: !3524)
!3531 = !DILocation(line: 463, column: 17, scope: !3532)
!3532 = distinct !DILexicalBlock(scope: !3524, file: !2708, line: 463, column: 9)
!3533 = !DILocation(line: 463, column: 37, scope: !3532)
!3534 = !DILocation(line: 463, column: 9, scope: !3524)
!3535 = !DILocation(line: 467, column: 20, scope: !3524)
!3536 = !DILocation(line: 467, column: 11, scope: !3524)
!3537 = !DILocation(line: 469, column: 24, scope: !3538)
!3538 = distinct !DILexicalBlock(scope: !3524, file: !2708, line: 469, column: 9)
!3539 = !DILocation(line: 469, column: 41, scope: !3538)
!3540 = !DILocation(line: 469, column: 9, scope: !3524)
!3541 = !DILocation(line: 473, column: 30, scope: !3542)
!3542 = distinct !DILexicalBlock(scope: !3524, file: !2708, line: 473, column: 9)
!3543 = !DILocation(line: 473, column: 37, scope: !3542)
!3544 = !DILocation(line: 473, column: 9, scope: !3524)
!3545 = !DILocation(line: 477, column: 30, scope: !3546)
!3546 = distinct !DILexicalBlock(scope: !3524, file: !2708, line: 477, column: 9)
!3547 = !DILocation(line: 477, column: 37, scope: !3546)
!3548 = !DILocation(line: 477, column: 45, scope: !3546)
!3549 = !DILocation(line: 477, column: 9, scope: !3524)
!3550 = !DILocation(line: 481, column: 26, scope: !3524)
!3551 = !DILocation(line: 481, column: 33, scope: !3524)
!3552 = !DILocation(line: 481, column: 41, scope: !3524)
!3553 = !DILocation(line: 482, column: 36, scope: !3524)
!3554 = !DILocation(line: 484, column: 5, scope: !3524)
!3555 = !DILocation(line: 485, column: 1, scope: !3524)
!3556 = distinct !DISubprogram(name: "hal_gpt_sw_start_timer_ms", scope: !2708, file: !2708, line: 487, type: !3557, scopeLine: 488, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2707, retainedNodes: !3559)
!3557 = !DISubroutineType(types: !3558)
!3558 = !{!3151, !61, !61, !307, !88}
!3559 = !{!3560, !3561, !3562, !3563, !3564, !3565, !3566}
!3560 = !DILocalVariable(name: "handle", arg: 1, scope: !3556, file: !2708, line: 487, type: !61)
!3561 = !DILocalVariable(name: "timeout_time_ms", arg: 2, scope: !3556, file: !2708, line: 487, type: !61)
!3562 = !DILocalVariable(name: "callback", arg: 3, scope: !3556, file: !2708, line: 487, type: !307)
!3563 = !DILocalVariable(name: "user_data", arg: 4, scope: !3556, file: !2708, line: 487, type: !88)
!3564 = !DILocalVariable(name: "current_time", scope: !3556, file: !2708, line: 489, type: !61)
!3565 = !DILocalVariable(name: "mask", scope: !3556, file: !2708, line: 490, type: !61)
!3566 = !DILocalVariable(name: "timer", scope: !3556, file: !2708, line: 491, type: !61)
!3567 = !DILocation(line: 0, scope: !3556)
!3568 = !DILocation(line: 493, column: 17, scope: !3569)
!3569 = distinct !DILexicalBlock(scope: !3556, file: !2708, line: 493, column: 9)
!3570 = !DILocation(line: 493, column: 37, scope: !3569)
!3571 = !DILocation(line: 493, column: 9, scope: !3556)
!3572 = !DILocation(line: 497, column: 20, scope: !3556)
!3573 = !DILocation(line: 503, column: 37, scope: !3574)
!3574 = distinct !DILexicalBlock(scope: !3556, file: !2708, line: 503, column: 9)
!3575 = !DILocation(line: 503, column: 9, scope: !3556)
!3576 = !DILocation(line: 507, column: 37, scope: !3577)
!3577 = distinct !DILexicalBlock(scope: !3556, file: !2708, line: 507, column: 9)
!3578 = !DILocation(line: 507, column: 45, scope: !3577)
!3579 = !DILocation(line: 507, column: 9, scope: !3556)
!3580 = !DILocation(line: 511, column: 25, scope: !3581)
!3581 = distinct !DILexicalBlock(scope: !3556, file: !2708, line: 511, column: 9)
!3582 = !DILocation(line: 511, column: 9, scope: !3556)
!3583 = !DILocation(line: 516, column: 12, scope: !3556)
!3584 = !DILocation(line: 519, column: 30, scope: !3556)
!3585 = !DILocation(line: 521, column: 24, scope: !3586)
!3586 = distinct !DILexicalBlock(scope: !3556, file: !2708, line: 521, column: 9)
!3587 = !DILocation(line: 521, column: 38, scope: !3586)
!3588 = !DILocation(line: 521, column: 9, scope: !3556)
!3589 = !DILocation(line: 522, column: 9, scope: !3590)
!3590 = distinct !DILexicalBlock(scope: !3586, file: !2708, line: 521, column: 48)
!3591 = !DILocation(line: 523, column: 9, scope: !3590)
!3592 = !DILocation(line: 524, column: 38, scope: !3590)
!3593 = !DILocation(line: 525, column: 5, scope: !3590)
!3594 = !DILocation(line: 526, column: 5, scope: !3556)
!3595 = !DILocation(line: 528, column: 23, scope: !3596)
!3596 = distinct !DILexicalBlock(scope: !3556, file: !2708, line: 528, column: 8)
!3597 = !DILocation(line: 528, column: 41, scope: !3596)
!3598 = !DILocation(line: 528, column: 8, scope: !3556)
!3599 = !DILocation(line: 529, column: 51, scope: !3600)
!3600 = distinct !DILexicalBlock(scope: !3596, file: !2708, line: 528, column: 51)
!3601 = !DILocation(line: 529, column: 24, scope: !3600)
!3602 = !DILocation(line: 530, column: 5, scope: !3600)
!3603 = !DILocation(line: 0, scope: !3596)
!3604 = !DILocation(line: 534, column: 34, scope: !3556)
!3605 = !DILocation(line: 535, column: 39, scope: !3556)
!3606 = !DILocation(line: 537, column: 49, scope: !3556)
!3607 = !DILocation(line: 538, column: 80, scope: !3556)
!3608 = !DILocation(line: 538, column: 33, scope: !3556)
!3609 = !DILocation(line: 538, column: 49, scope: !3556)
!3610 = !DILocation(line: 539, column: 50, scope: !3556)
!3611 = !DILocation(line: 539, column: 61, scope: !3556)
!3612 = !DILocation(line: 540, column: 50, scope: !3556)
!3613 = !DILocation(line: 540, column: 61, scope: !3556)
!3614 = !DILocation(line: 542, column: 5, scope: !3556)
!3615 = !DILocation(line: 546, column: 30, scope: !3556)
!3616 = !DILocation(line: 548, column: 5, scope: !3556)
!3617 = !DILocation(line: 550, column: 5, scope: !3556)
!3618 = !DILocation(line: 551, column: 1, scope: !3556)
!3619 = distinct !DISubprogram(name: "hal_gpt_sw_stop_timer_ms", scope: !2708, file: !2708, line: 553, type: !3373, scopeLine: 554, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2707, retainedNodes: !3620)
!3620 = !{!3621, !3622, !3623, !3624}
!3621 = !DILocalVariable(name: "handle", arg: 1, scope: !3619, file: !2708, line: 553, type: !61)
!3622 = !DILocalVariable(name: "current_time", scope: !3619, file: !2708, line: 555, type: !61)
!3623 = !DILocalVariable(name: "mask", scope: !3619, file: !2708, line: 556, type: !61)
!3624 = !DILocalVariable(name: "timer", scope: !3619, file: !2708, line: 557, type: !61)
!3625 = !DILocation(line: 0, scope: !3619)
!3626 = !DILocation(line: 559, column: 17, scope: !3627)
!3627 = distinct !DILexicalBlock(scope: !3619, file: !2708, line: 559, column: 9)
!3628 = !DILocation(line: 559, column: 37, scope: !3627)
!3629 = !DILocation(line: 559, column: 9, scope: !3619)
!3630 = !DILocation(line: 563, column: 20, scope: !3619)
!3631 = !DILocation(line: 565, column: 37, scope: !3632)
!3632 = distinct !DILexicalBlock(scope: !3619, file: !2708, line: 565, column: 9)
!3633 = !DILocation(line: 565, column: 48, scope: !3632)
!3634 = !DILocation(line: 565, column: 9, scope: !3619)
!3635 = !DILocation(line: 569, column: 37, scope: !3636)
!3636 = distinct !DILexicalBlock(scope: !3619, file: !2708, line: 569, column: 9)
!3637 = !DILocation(line: 569, column: 45, scope: !3636)
!3638 = !DILocation(line: 569, column: 9, scope: !3619)
!3639 = !DILocation(line: 574, column: 12, scope: !3619)
!3640 = !DILocation(line: 577, column: 30, scope: !3619)
!3641 = !DILocation(line: 578, column: 5, scope: !3619)
!3642 = !DILocation(line: 579, column: 30, scope: !3619)
!3643 = !DILocation(line: 581, column: 23, scope: !3644)
!3644 = distinct !DILexicalBlock(scope: !3619, file: !2708, line: 581, column: 8)
!3645 = !DILocation(line: 581, column: 41, scope: !3644)
!3646 = !DILocation(line: 581, column: 8, scope: !3619)
!3647 = !DILocation(line: 582, column: 51, scope: !3648)
!3648 = distinct !DILexicalBlock(scope: !3644, file: !2708, line: 581, column: 51)
!3649 = !DILocation(line: 582, column: 24, scope: !3648)
!3650 = !DILocation(line: 583, column: 5, scope: !3648)
!3651 = !DILocation(line: 0, scope: !3644)
!3652 = !DILocation(line: 587, column: 34, scope: !3619)
!3653 = !DILocation(line: 588, column: 39, scope: !3619)
!3654 = !DILocation(line: 590, column: 44, scope: !3619)
!3655 = !DILocation(line: 592, column: 24, scope: !3656)
!3656 = distinct !DILexicalBlock(scope: !3619, file: !2708, line: 592, column: 9)
!3657 = !DILocation(line: 592, column: 44, scope: !3656)
!3658 = !DILocation(line: 592, column: 9, scope: !3619)
!3659 = !DILocation(line: 593, column: 9, scope: !3660)
!3660 = distinct !DILexicalBlock(scope: !3656, file: !2708, line: 592, column: 50)
!3661 = !DILocation(line: 594, column: 5, scope: !3660)
!3662 = !DILocation(line: 598, column: 30, scope: !3619)
!3663 = !DILocation(line: 599, column: 5, scope: !3619)
!3664 = !DILocation(line: 601, column: 5, scope: !3619)
!3665 = !DILocation(line: 603, column: 1, scope: !3619)
!3666 = distinct !DISubprogram(name: "hal_gpt_sw_get_remaining_time_ms", scope: !2708, file: !2708, line: 605, type: !3667, scopeLine: 606, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2707, retainedNodes: !3669)
!3667 = !DISubroutineType(types: !3668)
!3668 = !{!3151, !61, !1204}
!3669 = !{!3670, !3671, !3672, !3673, !3674}
!3670 = !DILocalVariable(name: "handle", arg: 1, scope: !3666, file: !2708, line: 605, type: !61)
!3671 = !DILocalVariable(name: "remaing_time", arg: 2, scope: !3666, file: !2708, line: 605, type: !1204)
!3672 = !DILocalVariable(name: "current_time", scope: !3666, file: !2708, line: 607, type: !61)
!3673 = !DILocalVariable(name: "mask", scope: !3666, file: !2708, line: 608, type: !61)
!3674 = !DILocalVariable(name: "timer", scope: !3666, file: !2708, line: 609, type: !61)
!3675 = !DILocation(line: 0, scope: !3666)
!3676 = !DILocation(line: 611, column: 17, scope: !3677)
!3677 = distinct !DILexicalBlock(scope: !3666, file: !2708, line: 611, column: 9)
!3678 = !DILocation(line: 611, column: 37, scope: !3677)
!3679 = !DILocation(line: 611, column: 9, scope: !3666)
!3680 = !DILocation(line: 615, column: 20, scope: !3666)
!3681 = !DILocation(line: 617, column: 37, scope: !3682)
!3682 = distinct !DILexicalBlock(scope: !3666, file: !2708, line: 617, column: 9)
!3683 = !DILocation(line: 617, column: 45, scope: !3682)
!3684 = !DILocation(line: 617, column: 9, scope: !3666)
!3685 = !DILocation(line: 622, column: 12, scope: !3666)
!3686 = !DILocation(line: 624, column: 35, scope: !3666)
!3687 = !DILocation(line: 624, column: 51, scope: !3666)
!3688 = !DILocation(line: 624, column: 76, scope: !3666)
!3689 = !DILocation(line: 624, column: 49, scope: !3666)
!3690 = !DILocation(line: 626, column: 37, scope: !3691)
!3691 = distinct !DILexicalBlock(scope: !3666, file: !2708, line: 626, column: 9)
!3692 = !DILocation(line: 626, column: 9, scope: !3666)
!3693 = !DILocation(line: 0, scope: !3691)
!3694 = !DILocation(line: 632, column: 5, scope: !3666)
!3695 = !DILocation(line: 634, column: 5, scope: !3666)
!3696 = !DILocation(line: 636, column: 1, scope: !3666)
!3697 = distinct !DISubprogram(name: "gpt_calibrate_algorithm", scope: !95, file: !95, line: 56, type: !3698, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3700)
!3698 = !DISubroutineType(types: !3699)
!3699 = !{!61, !61, !61, !61}
!3700 = !{!3701, !3702, !3703, !3704, !3706, !3707}
!3701 = !DILocalVariable(name: "mul1", arg: 1, scope: !3697, file: !95, line: 56, type: !61)
!3702 = !DILocalVariable(name: "mul2", arg: 2, scope: !3697, file: !95, line: 56, type: !61)
!3703 = !DILocalVariable(name: "div", arg: 3, scope: !3697, file: !95, line: 56, type: !61)
!3704 = !DILocalVariable(name: "data1", scope: !3697, file: !95, line: 58, type: !3705)
!3705 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 64, elements: !480)
!3706 = !DILocalVariable(name: "data2", scope: !3697, file: !95, line: 59, type: !3705)
!3707 = !DILocalVariable(name: "result", scope: !3697, file: !95, line: 60, type: !3705)
!3708 = !DILocation(line: 0, scope: !3697)
!3709 = !DILocation(line: 63, column: 22, scope: !3697)
!3710 = !DILocation(line: 63, column: 32, scope: !3697)
!3711 = !DILocation(line: 64, column: 23, scope: !3697)
!3712 = !DILocation(line: 64, column: 40, scope: !3697)
!3713 = !DILocation(line: 66, column: 27, scope: !3697)
!3714 = !DILocation(line: 67, column: 27, scope: !3697)
!3715 = !DILocation(line: 67, column: 44, scope: !3697)
!3716 = !DILocation(line: 69, column: 26, scope: !3697)
!3717 = !DILocation(line: 70, column: 36, scope: !3697)
!3718 = !DILocation(line: 70, column: 43, scope: !3697)
!3719 = !DILocation(line: 70, column: 55, scope: !3697)
!3720 = !DILocation(line: 72, column: 34, scope: !3697)
!3721 = !DILocation(line: 72, column: 41, scope: !3697)
!3722 = !DILocation(line: 72, column: 5, scope: !3697)
!3723 = distinct !DISubprogram(name: "gpt_current_count", scope: !95, file: !95, line: 75, type: !3724, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3726)
!3724 = !DISubroutineType(types: !3725)
!3725 = !{!61, !264}
!3726 = !{!3727}
!3727 = !DILocalVariable(name: "gpt", arg: 1, scope: !3723, file: !95, line: 75, type: !264)
!3728 = !DILocation(line: 0, scope: !3723)
!3729 = !DILocation(line: 77, column: 17, scope: !3723)
!3730 = !DILocation(line: 77, column: 5, scope: !3723)
!3731 = distinct !DISubprogram(name: "gpt_convert_ms_to_32k_count", scope: !95, file: !95, line: 81, type: !3732, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3734)
!3732 = !DISubroutineType(types: !3733)
!3733 = !{!61, !61}
!3734 = !{!3735}
!3735 = !DILocalVariable(name: "ms", arg: 1, scope: !3731, file: !95, line: 81, type: !61)
!3736 = !DILocation(line: 0, scope: !3731)
!3737 = !DILocation(line: 83, column: 27, scope: !3731)
!3738 = !DILocation(line: 83, column: 37, scope: !3731)
!3739 = !DILocation(line: 83, column: 43, scope: !3731)
!3740 = !DILocation(line: 83, column: 32, scope: !3731)
!3741 = !DILocation(line: 83, column: 53, scope: !3731)
!3742 = !DILocation(line: 83, column: 59, scope: !3731)
!3743 = !DILocation(line: 83, column: 48, scope: !3731)
!3744 = !DILocation(line: 83, column: 70, scope: !3731)
!3745 = !DILocation(line: 83, column: 76, scope: !3731)
!3746 = !DILocation(line: 83, column: 65, scope: !3731)
!3747 = !DILocation(line: 83, column: 5, scope: !3731)
!3748 = !DILocation(line: 90, column: 9, scope: !3749)
!3749 = distinct !DILexicalBlock(scope: !290, file: !95, line: 90, column: 9)
!3750 = !DILocation(line: 90, column: 9, scope: !290)
!3751 = !DILocation(line: 91, column: 13, scope: !3752)
!3752 = distinct !DILexicalBlock(scope: !3753, file: !95, line: 91, column: 13)
!3753 = distinct !DILexicalBlock(scope: !3749, file: !95, line: 90, column: 24)
!3754 = !DILocation(line: 91, column: 13, scope: !3753)
!3755 = !DILocation(line: 92, column: 32, scope: !3756)
!3756 = distinct !DILexicalBlock(scope: !3752, file: !95, line: 91, column: 41)
!3757 = !DILocation(line: 92, column: 30, scope: !3756)
!3758 = !DILocation(line: 93, column: 41, scope: !3759)
!3759 = distinct !DILexicalBlock(scope: !3756, file: !95, line: 93, column: 17)
!3760 = !DILocation(line: 0, scope: !3752)
!3761 = !DILocation(line: 105, column: 1, scope: !290)
!3762 = distinct !DISubprogram(name: "gpt_open_clock_source", scope: !95, file: !95, line: 107, type: !291, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !293)
!3763 = !DILocation(line: 109, column: 9, scope: !3764)
!3764 = distinct !DILexicalBlock(scope: !3762, file: !95, line: 109, column: 9)
!3765 = !DILocation(line: 109, column: 9, scope: !3762)
!3766 = !DILocation(line: 110, column: 9, scope: !3767)
!3767 = distinct !DILexicalBlock(scope: !3764, file: !95, line: 109, column: 61)
!3768 = !DILocation(line: 111, column: 5, scope: !3767)
!3769 = !DILocation(line: 112, column: 1, scope: !3762)
!3770 = distinct !DISubprogram(name: "gpt_clock_calibrate_us_to_count", scope: !95, file: !95, line: 114, type: !3732, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3771)
!3771 = !{!3772}
!3772 = !DILocalVariable(name: "time_us", arg: 1, scope: !3770, file: !95, line: 114, type: !61)
!3773 = !DILocation(line: 0, scope: !3770)
!3774 = !DILocation(line: 116, column: 5, scope: !3770)
!3775 = !DILocation(line: 118, column: 9, scope: !3776)
!3776 = distinct !DILexicalBlock(scope: !3770, file: !95, line: 118, column: 9)
!3777 = !DILocation(line: 118, column: 9, scope: !3770)
!3778 = !DILocation(line: 120, column: 49, scope: !3779)
!3779 = distinct !DILexicalBlock(scope: !3776, file: !95, line: 118, column: 37)
!3780 = !DILocation(line: 120, column: 16, scope: !3779)
!3781 = !DILocation(line: 120, column: 9, scope: !3779)
!3782 = !DILocation(line: 0, scope: !3776)
!3783 = !DILocation(line: 125, column: 1, scope: !3770)
!3784 = distinct !DISubprogram(name: "gpt_clock_calibrate_count_to_us", scope: !95, file: !95, line: 127, type: !3732, scopeLine: 128, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3785)
!3785 = !{!3786}
!3786 = !DILocalVariable(name: "count", arg: 1, scope: !3784, file: !95, line: 127, type: !61)
!3787 = !DILocation(line: 0, scope: !3784)
!3788 = !DILocation(line: 129, column: 5, scope: !3784)
!3789 = !DILocation(line: 131, column: 9, scope: !3790)
!3790 = distinct !DILexicalBlock(scope: !3784, file: !95, line: 131, column: 9)
!3791 = !DILocation(line: 131, column: 9, scope: !3784)
!3792 = !DILocation(line: 133, column: 69, scope: !3793)
!3793 = distinct !DILexicalBlock(scope: !3790, file: !95, line: 131, column: 37)
!3794 = !DILocation(line: 133, column: 16, scope: !3793)
!3795 = !DILocation(line: 133, column: 9, scope: !3793)
!3796 = !DILocation(line: 0, scope: !3790)
!3797 = !DILocation(line: 138, column: 1, scope: !3784)
!3798 = distinct !DISubprogram(name: "gpt_start_free_run_timer", scope: !95, file: !95, line: 141, type: !3799, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3801)
!3799 = !DISubroutineType(types: !3800)
!3800 = !{null, !264, !61, !61}
!3801 = !{!3802, !3803, !3804}
!3802 = !DILocalVariable(name: "gpt", arg: 1, scope: !3798, file: !95, line: 141, type: !264)
!3803 = !DILocalVariable(name: "clock_source", arg: 2, scope: !3798, file: !95, line: 141, type: !61)
!3804 = !DILocalVariable(name: "divide", arg: 3, scope: !3798, file: !95, line: 141, type: !61)
!3805 = !DILocation(line: 0, scope: !3798)
!3806 = !DILocation(line: 143, column: 5, scope: !3798)
!3807 = !DILocation(line: 145, column: 33, scope: !3798)
!3808 = !DILocation(line: 145, column: 10, scope: !3798)
!3809 = !DILocation(line: 145, column: 18, scope: !3798)
!3810 = !DILocation(line: 148, column: 10, scope: !3798)
!3811 = !DILocation(line: 148, column: 18, scope: !3798)
!3812 = !DILocation(line: 149, column: 1, scope: !3798)
!3813 = distinct !DISubprogram(name: "gpt_delay_time", scope: !95, file: !95, line: 151, type: !3814, scopeLine: 152, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3816)
!3814 = !DISubroutineType(types: !3815)
!3815 = !{null, !264, !979}
!3816 = !{!3817, !3818, !3819, !3820}
!3817 = !DILocalVariable(name: "gpt", arg: 1, scope: !3813, file: !95, line: 151, type: !264)
!3818 = !DILocalVariable(name: "count", arg: 2, scope: !3813, file: !95, line: 151, type: !979)
!3819 = !DILocalVariable(name: "end_count", scope: !3813, file: !95, line: 153, type: !61)
!3820 = !DILocalVariable(name: "current", scope: !3813, file: !95, line: 153, type: !61)
!3821 = !DILocation(line: 0, scope: !3813)
!3822 = !DILocation(line: 155, column: 17, scope: !3813)
!3823 = !DILocation(line: 156, column: 25, scope: !3813)
!3824 = !DILocation(line: 156, column: 33, scope: !3813)
!3825 = !DILocation(line: 159, column: 19, scope: !3826)
!3826 = distinct !DILexicalBlock(scope: !3813, file: !95, line: 159, column: 9)
!3827 = !DILocation(line: 159, column: 9, scope: !3813)
!3828 = !DILocation(line: 160, column: 16, scope: !3829)
!3829 = distinct !DILexicalBlock(scope: !3826, file: !95, line: 159, column: 30)
!3830 = !DILocation(line: 160, column: 39, scope: !3829)
!3831 = !DILocation(line: 160, column: 9, scope: !3829)
!3832 = distinct !{!3832, !3831, !3833}
!3833 = !DILocation(line: 160, column: 51, scope: !3829)
!3834 = !DILocation(line: 162, column: 16, scope: !3835)
!3835 = distinct !DILexicalBlock(scope: !3826, file: !95, line: 161, column: 12)
!3836 = !DILocation(line: 162, column: 39, scope: !3835)
!3837 = !DILocation(line: 162, column: 9, scope: !3835)
!3838 = distinct !{!3838, !3837, !3839}
!3839 = !DILocation(line: 162, column: 50, scope: !3835)
!3840 = !DILocation(line: 163, column: 16, scope: !3835)
!3841 = !DILocation(line: 163, column: 39, scope: !3835)
!3842 = !DILocation(line: 163, column: 9, scope: !3835)
!3843 = distinct !{!3843, !3842, !3844}
!3844 = !DILocation(line: 163, column: 51, scope: !3835)
!3845 = !DILocation(line: 165, column: 1, scope: !3813)
!3846 = distinct !DISubprogram(name: "gpt_reset_default_timer", scope: !95, file: !95, line: 166, type: !3847, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3849)
!3847 = !DISubroutineType(types: !3848)
!3848 = !{null, !264}
!3849 = !{!3850}
!3850 = !DILocalVariable(name: "gpt", arg: 1, scope: !3846, file: !95, line: 166, type: !264)
!3851 = !DILocation(line: 0, scope: !3846)
!3852 = !DILocation(line: 168, column: 10, scope: !3846)
!3853 = !DILocation(line: 168, column: 22, scope: !3846)
!3854 = !DILocation(line: 169, column: 10, scope: !3846)
!3855 = !DILocation(line: 169, column: 22, scope: !3846)
!3856 = !DILocation(line: 170, column: 21, scope: !3846)
!3857 = !DILocation(line: 171, column: 5, scope: !3846)
!3858 = !DILocation(line: 171, column: 16, scope: !3846)
!3859 = distinct !{!3859, !3857, !3860}
!3860 = !DILocation(line: 171, column: 26, scope: !3846)
!3861 = !DILocation(line: 172, column: 10, scope: !3846)
!3862 = !DILocation(line: 172, column: 22, scope: !3846)
!3863 = !DILocation(line: 173, column: 10, scope: !3846)
!3864 = !DILocation(line: 173, column: 22, scope: !3846)
!3865 = !DILocation(line: 174, column: 10, scope: !3846)
!3866 = !DILocation(line: 174, column: 22, scope: !3846)
!3867 = !DILocation(line: 176, column: 13, scope: !3868)
!3868 = distinct !DILexicalBlock(scope: !3846, file: !95, line: 176, column: 9)
!3869 = !DILocation(line: 176, column: 9, scope: !3846)
!3870 = !DILocation(line: 177, column: 27, scope: !3871)
!3871 = distinct !DILexicalBlock(scope: !3868, file: !95, line: 176, column: 22)
!3872 = !DILocation(line: 178, column: 5, scope: !3871)
!3873 = !DILocation(line: 179, column: 1, scope: !3846)
!3874 = distinct !DISubprogram(name: "gpt_save_and_mask_interrupt", scope: !95, file: !95, line: 181, type: !3724, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3875)
!3875 = !{!3876, !3877}
!3876 = !DILocalVariable(name: "gpt", arg: 1, scope: !3874, file: !95, line: 181, type: !264)
!3877 = !DILocalVariable(name: "mask", scope: !3874, file: !95, line: 183, type: !60)
!3878 = !DILocation(line: 0, scope: !3874)
!3879 = !DILocation(line: 183, column: 5, scope: !3874)
!3880 = !DILocation(line: 183, column: 23, scope: !3874)
!3881 = !DILocation(line: 185, column: 17, scope: !3874)
!3882 = !DILocation(line: 185, column: 10, scope: !3874)
!3883 = !DILocation(line: 187, column: 22, scope: !3874)
!3884 = !DILocation(line: 189, column: 12, scope: !3874)
!3885 = !DILocation(line: 190, column: 1, scope: !3874)
!3886 = !DILocation(line: 189, column: 5, scope: !3874)
!3887 = distinct !DISubprogram(name: "gpt_restore_interrupt", scope: !95, file: !95, line: 192, type: !3888, scopeLine: 193, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3890)
!3888 = !DISubroutineType(types: !3889)
!3889 = !{null, !264, !61}
!3890 = !{!3891, !3892}
!3891 = !DILocalVariable(name: "gpt", arg: 1, scope: !3887, file: !95, line: 192, type: !264)
!3892 = !DILocalVariable(name: "mask", arg: 2, scope: !3887, file: !95, line: 192, type: !61)
!3893 = !DILocation(line: 0, scope: !3887)
!3894 = !DILocation(line: 194, column: 10, scope: !3887)
!3895 = !DILocation(line: 194, column: 21, scope: !3887)
!3896 = !DILocation(line: 195, column: 1, scope: !3887)
!3897 = distinct !DISubprogram(name: "gpt_interrupt_handler", scope: !95, file: !95, line: 197, type: !526, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3898)
!3898 = !{!3899, !3900, !3901, !3902, !3903}
!3899 = !DILocalVariable(name: "irq_number", arg: 1, scope: !3897, file: !95, line: 197, type: !528)
!3900 = !DILocalVariable(name: "i", scope: !3897, file: !95, line: 199, type: !61)
!3901 = !DILocalVariable(name: "mask", scope: !3897, file: !95, line: 200, type: !60)
!3902 = !DILocalVariable(name: "state", scope: !3897, file: !95, line: 201, type: !60)
!3903 = !DILocalVariable(name: "enable", scope: !3897, file: !95, line: 202, type: !60)
!3904 = !DILocation(line: 0, scope: !3897)
!3905 = !DILocation(line: 200, column: 5, scope: !3897)
!3906 = !DILocation(line: 200, column: 23, scope: !3897)
!3907 = !DILocation(line: 201, column: 5, scope: !3897)
!3908 = !DILocation(line: 201, column: 23, scope: !3897)
!3909 = !DILocation(line: 202, column: 5, scope: !3897)
!3910 = !DILocation(line: 202, column: 23, scope: !3897)
!3911 = !DILocation(line: 207, column: 5, scope: !3912)
!3912 = distinct !DILexicalBlock(scope: !3897, file: !95, line: 207, column: 5)
!3913 = !DILocation(line: 209, column: 18, scope: !3914)
!3914 = distinct !DILexicalBlock(scope: !3915, file: !95, line: 207, column: 44)
!3915 = distinct !DILexicalBlock(scope: !3912, file: !95, line: 207, column: 5)
!3916 = !DILocation(line: 209, column: 29, scope: !3914)
!3917 = !DILocation(line: 209, column: 16, scope: !3914)
!3918 = !DILocation(line: 210, column: 29, scope: !3914)
!3919 = !DILocation(line: 210, column: 16, scope: !3914)
!3920 = !DILocation(line: 212, column: 16, scope: !3914)
!3921 = !DILocation(line: 212, column: 14, scope: !3914)
!3922 = !DILocation(line: 214, column: 9, scope: !3914)
!3923 = !DILocation(line: 214, column: 20, scope: !3914)
!3924 = !DILocation(line: 214, column: 32, scope: !3914)
!3925 = !DILocation(line: 216, column: 14, scope: !3926)
!3926 = distinct !DILexicalBlock(scope: !3914, file: !95, line: 216, column: 13)
!3927 = !DILocation(line: 216, column: 20, scope: !3926)
!3928 = !DILocation(line: 216, column: 40, scope: !3926)
!3929 = !DILocation(line: 216, column: 44, scope: !3926)
!3930 = !DILocation(line: 216, column: 51, scope: !3926)
!3931 = !DILocation(line: 216, column: 13, scope: !3914)
!3932 = !DILocation(line: 224, column: 51, scope: !3933)
!3933 = distinct !DILexicalBlock(scope: !3934, file: !95, line: 224, column: 17)
!3934 = distinct !DILexicalBlock(scope: !3926, file: !95, line: 216, column: 70)
!3935 = !DILocation(line: 224, column: 60, scope: !3933)
!3936 = !DILocation(line: 224, column: 17, scope: !3934)
!3937 = !DILocation(line: 225, column: 94, scope: !3938)
!3938 = distinct !DILexicalBlock(scope: !3933, file: !95, line: 224, column: 69)
!3939 = !DILocation(line: 225, column: 17, scope: !3938)
!3940 = !DILocation(line: 226, column: 13, scope: !3938)
!3941 = !DILocation(line: 229, column: 31, scope: !3914)
!3942 = !DILocation(line: 229, column: 42, scope: !3914)
!3943 = !DILocation(line: 229, column: 9, scope: !3914)
!3944 = !DILocation(line: 207, column: 40, scope: !3915)
!3945 = !DILocation(line: 207, column: 19, scope: !3915)
!3946 = distinct !{!3946, !3911, !3947}
!3947 = !DILocation(line: 231, column: 5, scope: !3912)
!3948 = !DILocation(line: 233, column: 1, scope: !3897)
!3949 = distinct !DISubprogram(name: "gpt_nvic_register", scope: !95, file: !95, line: 236, type: !291, scopeLine: 237, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !293)
!3950 = !DILocation(line: 238, column: 5, scope: !3949)
!3951 = !DILocation(line: 239, column: 5, scope: !3949)
!3952 = !DILocation(line: 240, column: 5, scope: !3949)
!3953 = !DILocation(line: 241, column: 1, scope: !3949)
!3954 = distinct !DISubprogram(name: "gpt_sw_get_current_time_ms", scope: !95, file: !95, line: 242, type: !3724, scopeLine: 243, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3955)
!3955 = !{!3956, !3957, !3958, !3959, !3960}
!3956 = !DILocalVariable(name: "gpt", arg: 1, scope: !3954, file: !95, line: 242, type: !264)
!3957 = !DILocalVariable(name: "time", scope: !3954, file: !95, line: 244, type: !60)
!3958 = !DILocalVariable(name: "count", scope: !3954, file: !95, line: 245, type: !61)
!3959 = !DILocalVariable(name: "time_s", scope: !3954, file: !95, line: 245, type: !61)
!3960 = !DILocalVariable(name: "time_ms", scope: !3954, file: !95, line: 245, type: !61)
!3961 = !DILocation(line: 0, scope: !3954)
!3962 = !DILocation(line: 244, column: 5, scope: !3954)
!3963 = !DILocation(line: 244, column: 23, scope: !3954)
!3964 = !DILocation(line: 247, column: 13, scope: !3954)
!3965 = !DILocation(line: 248, column: 20, scope: !3954)
!3966 = !DILocation(line: 249, column: 23, scope: !3954)
!3967 = !DILocation(line: 249, column: 32, scope: !3954)
!3968 = !DILocation(line: 249, column: 39, scope: !3954)
!3969 = !DILocation(line: 249, column: 48, scope: !3954)
!3970 = !DILocation(line: 250, column: 19, scope: !3954)
!3971 = !DILocation(line: 250, column: 26, scope: !3954)
!3972 = !DILocation(line: 250, column: 10, scope: !3954)
!3973 = !DILocation(line: 253, column: 5, scope: !3954)
!3974 = !DILocation(line: 253, column: 30, scope: !3954)
!3975 = !DILocation(line: 253, column: 38, scope: !3954)
!3976 = !DILocation(line: 254, column: 5, scope: !3954)
!3977 = !DILocation(line: 254, column: 36, scope: !3954)
!3978 = distinct !{!3978, !3976, !3979}
!3979 = !DILocation(line: 254, column: 46, scope: !3954)
!3980 = !DILocation(line: 255, column: 12, scope: !3954)
!3981 = !DILocation(line: 256, column: 1, scope: !3954)
!3982 = !DILocation(line: 255, column: 5, scope: !3954)
!3983 = distinct !DISubprogram(name: "gpt_sw_get_free_timer", scope: !95, file: !95, line: 258, type: !3984, scopeLine: 259, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3986)
!3984 = !DISubroutineType(types: !3985)
!3985 = !{!61}
!3986 = !{!3987}
!3987 = !DILocalVariable(name: "i", scope: !3983, file: !95, line: 260, type: !61)
!3988 = !DILocation(line: 0, scope: !3983)
!3989 = !DILocation(line: 262, column: 5, scope: !3990)
!3990 = distinct !DILexicalBlock(scope: !3983, file: !95, line: 262, column: 5)
!3991 = !DILocation(line: 263, column: 37, scope: !3992)
!3992 = distinct !DILexicalBlock(scope: !3993, file: !95, line: 263, column: 13)
!3993 = distinct !DILexicalBlock(scope: !3994, file: !95, line: 262, column: 45)
!3994 = distinct !DILexicalBlock(scope: !3990, file: !95, line: 262, column: 5)
!3995 = !DILocation(line: 263, column: 45, scope: !3992)
!3996 = !DILocation(line: 263, column: 13, scope: !3993)
!3997 = !DILocation(line: 262, column: 41, scope: !3994)
!3998 = !DILocation(line: 262, column: 19, scope: !3994)
!3999 = distinct !{!3999, !3989, !4000}
!4000 = !DILocation(line: 266, column: 5, scope: !3990)
!4001 = !DILocation(line: 269, column: 1, scope: !3983)
!4002 = distinct !DISubprogram(name: "gpt_sw_start_timer", scope: !95, file: !95, line: 271, type: !291, scopeLine: 272, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !4003)
!4003 = !{!4004, !4005}
!4004 = !DILocalVariable(name: "minimum_time", scope: !4002, file: !95, line: 273, type: !61)
!4005 = !DILocalVariable(name: "current_timer", scope: !4002, file: !95, line: 273, type: !61)
!4006 = !DILocation(line: 273, column: 5, scope: !4002)
!4007 = !DILocation(line: 275, column: 24, scope: !4008)
!4008 = distinct !DILexicalBlock(scope: !4002, file: !95, line: 275, column: 9)
!4009 = !DILocation(line: 275, column: 9, scope: !4002)
!4010 = !DILocation(line: 0, scope: !4002)
!4011 = !DILocation(line: 279, column: 5, scope: !4002)
!4012 = !DILocation(line: 282, column: 56, scope: !4002)
!4013 = !DILocation(line: 282, column: 39, scope: !4002)
!4014 = !DILocation(line: 284, column: 30, scope: !4002)
!4015 = !DILocation(line: 285, column: 45, scope: !4002)
!4016 = !DILocation(line: 285, column: 5, scope: !4002)
!4017 = !DILocation(line: 286, column: 30, scope: !4002)
!4018 = !DILocation(line: 287, column: 1, scope: !4002)
!4019 = distinct !DISubprogram(name: "gpt_sw_get_minimum_left_time_ms", scope: !95, file: !95, line: 308, type: !4020, scopeLine: 309, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !4022)
!4020 = !DISubroutineType(types: !4021)
!4021 = !{null, !1204, !1204}
!4022 = !{!4023, !4024, !4025, !4026, !4027}
!4023 = !DILocalVariable(name: "minimum_time", arg: 1, scope: !4019, file: !95, line: 308, type: !1204)
!4024 = !DILocalVariable(name: "number", arg: 2, scope: !4019, file: !95, line: 308, type: !1204)
!4025 = !DILocalVariable(name: "i", scope: !4019, file: !95, line: 310, type: !61)
!4026 = !DILocalVariable(name: "minimum", scope: !4019, file: !95, line: 311, type: !61)
!4027 = !DILocalVariable(name: "data", scope: !4019, file: !95, line: 312, type: !61)
!4028 = !DILocation(line: 0, scope: !4019)
!4029 = !DILocation(line: 314, column: 5, scope: !4030)
!4030 = distinct !DILexicalBlock(scope: !4019, file: !95, line: 314, column: 5)
!4031 = !DILocation(line: 315, column: 37, scope: !4032)
!4032 = distinct !DILexicalBlock(scope: !4033, file: !95, line: 315, column: 13)
!4033 = distinct !DILexicalBlock(scope: !4034, file: !95, line: 314, column: 45)
!4034 = distinct !DILexicalBlock(scope: !4030, file: !95, line: 314, column: 5)
!4035 = !DILocation(line: 315, column: 13, scope: !4033)
!4036 = !DILocation(line: 316, column: 20, scope: !4037)
!4037 = distinct !DILexicalBlock(scope: !4032, file: !95, line: 315, column: 57)
!4038 = !DILocation(line: 318, column: 22, scope: !4039)
!4039 = distinct !DILexicalBlock(scope: !4037, file: !95, line: 318, column: 17)
!4040 = !DILocation(line: 318, column: 17, scope: !4037)
!4041 = !DILocation(line: 320, column: 25, scope: !4042)
!4042 = distinct !DILexicalBlock(scope: !4039, file: !95, line: 318, column: 33)
!4043 = !DILocation(line: 321, column: 13, scope: !4042)
!4044 = !DILocation(line: 314, column: 41, scope: !4034)
!4045 = !DILocation(line: 314, column: 19, scope: !4034)
!4046 = distinct !{!4046, !4029, !4047}
!4047 = !DILocation(line: 323, column: 5, scope: !4030)
!4048 = !DILocation(line: 325, column: 19, scope: !4019)
!4049 = !DILocation(line: 326, column: 1, scope: !4019)
!4050 = distinct !DISubprogram(name: "gpt_sw_absolute_value", scope: !95, file: !95, line: 289, type: !3732, scopeLine: 290, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !4051)
!4051 = !{!4052, !4053, !4054, !4055}
!4052 = !DILocalVariable(name: "timer_number", arg: 1, scope: !4050, file: !95, line: 289, type: !61)
!4053 = !DILocalVariable(name: "time_out_delta", scope: !4050, file: !95, line: 291, type: !61)
!4054 = !DILocalVariable(name: "current_delta", scope: !4050, file: !95, line: 292, type: !61)
!4055 = !DILocalVariable(name: "ret_value", scope: !4050, file: !95, line: 293, type: !61)
!4056 = !DILocation(line: 0, scope: !4050)
!4057 = !DILocation(line: 295, column: 22, scope: !4050)
!4058 = !DILocation(line: 296, column: 22, scope: !4050)
!4059 = !DILocation(line: 298, column: 24, scope: !4060)
!4060 = distinct !DILexicalBlock(scope: !4050, file: !95, line: 298, column: 9)
!4061 = !DILocation(line: 298, column: 9, scope: !4050)
!4062 = !DILocation(line: 306, column: 5, scope: !4050)
!4063 = distinct !DISubprogram(name: "gpt_sw_handler", scope: !95, file: !95, line: 329, type: !309, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !4064)
!4064 = !{!4065, !4066, !4067, !4068}
!4065 = !DILocalVariable(name: "parameter", arg: 1, scope: !4063, file: !95, line: 329, type: !88)
!4066 = !DILocalVariable(name: "i", scope: !4063, file: !95, line: 331, type: !61)
!4067 = !DILocalVariable(name: "time_ms", scope: !4063, file: !95, line: 332, type: !60)
!4068 = !DILocalVariable(name: "data", scope: !4063, file: !95, line: 333, type: !60)
!4069 = !DILocation(line: 0, scope: !4063)
!4070 = !DILocation(line: 332, column: 5, scope: !4063)
!4071 = !DILocation(line: 332, column: 23, scope: !4063)
!4072 = !DILocation(line: 333, column: 5, scope: !4063)
!4073 = !DILocation(line: 333, column: 23, scope: !4063)
!4074 = !DILocation(line: 336, column: 24, scope: !4075)
!4075 = distinct !DILexicalBlock(scope: !4063, file: !95, line: 336, column: 9)
!4076 = !DILocation(line: 336, column: 41, scope: !4075)
!4077 = !DILocation(line: 336, column: 9, scope: !4063)
!4078 = !DILocation(line: 338, column: 34, scope: !4079)
!4079 = distinct !DILexicalBlock(scope: !4075, file: !95, line: 336, column: 47)
!4080 = !DILocation(line: 339, column: 9, scope: !4079)
!4081 = !DILocation(line: 340, column: 34, scope: !4079)
!4082 = !DILocation(line: 342, column: 46, scope: !4079)
!4083 = !DILocation(line: 342, column: 19, scope: !4079)
!4084 = !DILocation(line: 342, column: 17, scope: !4079)
!4085 = !DILocation(line: 344, column: 41, scope: !4079)
!4086 = !DILocation(line: 344, column: 38, scope: !4079)
!4087 = !DILocation(line: 345, column: 42, scope: !4079)
!4088 = !DILocation(line: 347, column: 9, scope: !4089)
!4089 = distinct !DILexicalBlock(scope: !4079, file: !95, line: 347, column: 9)
!4090 = !DILocation(line: 348, column: 41, scope: !4091)
!4091 = distinct !DILexicalBlock(scope: !4092, file: !95, line: 348, column: 17)
!4092 = distinct !DILexicalBlock(scope: !4093, file: !95, line: 347, column: 49)
!4093 = distinct !DILexicalBlock(scope: !4089, file: !95, line: 347, column: 9)
!4094 = !DILocation(line: 348, column: 17, scope: !4092)
!4095 = !DILocation(line: 350, column: 24, scope: !4096)
!4096 = distinct !DILexicalBlock(scope: !4091, file: !95, line: 348, column: 61)
!4097 = !DILocation(line: 350, column: 22, scope: !4096)
!4098 = !DILocation(line: 352, column: 21, scope: !4099)
!4099 = distinct !DILexicalBlock(scope: !4096, file: !95, line: 352, column: 21)
!4100 = !DILocation(line: 352, column: 26, scope: !4099)
!4101 = !DILocation(line: 352, column: 21, scope: !4096)
!4102 = !DILocation(line: 353, column: 56, scope: !4103)
!4103 = distinct !DILexicalBlock(scope: !4099, file: !95, line: 352, column: 32)
!4104 = !DILocation(line: 354, column: 55, scope: !4103)
!4105 = !DILocation(line: 356, column: 62, scope: !4103)
!4106 = !DILocation(line: 356, column: 112, scope: !4103)
!4107 = !DILocation(line: 356, column: 21, scope: !4103)
!4108 = !DILocation(line: 357, column: 17, scope: !4103)
!4109 = !DILocation(line: 347, column: 45, scope: !4093)
!4110 = !DILocation(line: 347, column: 23, scope: !4093)
!4111 = distinct !{!4111, !4088, !4112}
!4112 = !DILocation(line: 360, column: 9, scope: !4089)
!4113 = !DILocation(line: 362, column: 42, scope: !4079)
!4114 = !DILocation(line: 364, column: 28, scope: !4115)
!4115 = distinct !DILexicalBlock(scope: !4079, file: !95, line: 364, column: 13)
!4116 = !DILocation(line: 364, column: 48, scope: !4115)
!4117 = !DILocation(line: 364, column: 13, scope: !4079)
!4118 = !DILocation(line: 365, column: 13, scope: !4119)
!4119 = distinct !DILexicalBlock(scope: !4115, file: !95, line: 364, column: 54)
!4120 = !DILocation(line: 366, column: 9, scope: !4119)
!4121 = !DILocation(line: 369, column: 1, scope: !4063)
!4122 = distinct !DISubprogram(name: "gdma_reset", scope: !346, file: !346, line: 138, type: !4123, scopeLine: 140, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4125)
!4123 = !DISubroutineType(types: !4124)
!4124 = !{null, !61}
!4125 = !{!4126}
!4126 = !DILocalVariable(name: "index", arg: 1, scope: !4122, file: !346, line: 138, type: !61)
!4127 = !DILocation(line: 0, scope: !4122)
!4128 = !DILocation(line: 142, column: 5, scope: !4122)
!4129 = !DILocation(line: 142, column: 18, scope: !4122)
!4130 = !DILocation(line: 142, column: 27, scope: !4122)
!4131 = !DILocation(line: 143, column: 5, scope: !4122)
!4132 = !DILocation(line: 143, column: 18, scope: !4122)
!4133 = !DILocation(line: 143, column: 29, scope: !4122)
!4134 = !DILocation(line: 144, column: 5, scope: !4122)
!4135 = !DILocation(line: 144, column: 18, scope: !4122)
!4136 = !DILocation(line: 144, column: 30, scope: !4122)
!4137 = !DILocation(line: 145, column: 5, scope: !4122)
!4138 = !DILocation(line: 145, column: 18, scope: !4122)
!4139 = !DILocation(line: 145, column: 27, scope: !4122)
!4140 = !DILocation(line: 146, column: 5, scope: !4122)
!4141 = !DILocation(line: 146, column: 18, scope: !4122)
!4142 = !DILocation(line: 146, column: 27, scope: !4122)
!4143 = !DILocation(line: 147, column: 5, scope: !4122)
!4144 = !DILocation(line: 147, column: 18, scope: !4122)
!4145 = !DILocation(line: 147, column: 30, scope: !4122)
!4146 = !DILocation(line: 149, column: 1, scope: !4122)
!4147 = distinct !DISubprogram(name: "gdma_get_global_status", scope: !346, file: !346, line: 151, type: !3732, scopeLine: 152, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4148)
!4148 = !{!4149, !4150}
!4149 = !DILocalVariable(name: "index", arg: 1, scope: !4147, file: !346, line: 151, type: !61)
!4150 = !DILocalVariable(name: "global_status", scope: !4147, file: !346, line: 154, type: !61)
!4151 = !DILocation(line: 0, scope: !4147)
!4152 = !DILocation(line: 157, column: 21, scope: !4147)
!4153 = !DILocation(line: 157, column: 41, scope: !4147)
!4154 = !DILocation(line: 159, column: 5, scope: !4147)
!4155 = distinct !DISubprogram(name: "gdma_register_callback", scope: !346, file: !346, line: 163, type: !4156, scopeLine: 165, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4158)
!4156 = !DISubroutineType(types: !4157)
!4157 = !{null, !61, !517, !88}
!4158 = !{!4159, !4160, !4161}
!4159 = !DILocalVariable(name: "index", arg: 1, scope: !4155, file: !346, line: 163, type: !61)
!4160 = !DILocalVariable(name: "callback", arg: 2, scope: !4155, file: !346, line: 163, type: !517)
!4161 = !DILocalVariable(name: "user_data", arg: 3, scope: !4155, file: !346, line: 163, type: !88)
!4162 = !DILocation(line: 0, scope: !4155)
!4163 = !DILocation(line: 166, column: 32, scope: !4164)
!4164 = distinct !DILexicalBlock(scope: !4155, file: !346, line: 166, column: 9)
!4165 = !DILocation(line: 166, column: 37, scope: !4164)
!4166 = !DILocation(line: 166, column: 9, scope: !4155)
!4167 = !DILocation(line: 167, column: 37, scope: !4168)
!4168 = distinct !DILexicalBlock(scope: !4164, file: !346, line: 166, column: 46)
!4169 = !DILocation(line: 168, column: 32, scope: !4168)
!4170 = !DILocation(line: 168, column: 41, scope: !4168)
!4171 = !DILocation(line: 169, column: 5, scope: !4168)
!4172 = !DILocation(line: 170, column: 1, scope: !4155)
!4173 = distinct !DISubprogram(name: "gdma_stop", scope: !346, file: !346, line: 172, type: !4123, scopeLine: 173, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4174)
!4174 = !{!4175}
!4175 = !DILocalVariable(name: "index", arg: 1, scope: !4173, file: !346, line: 172, type: !61)
!4176 = !DILocation(line: 0, scope: !4173)
!4177 = !DILocation(line: 174, column: 5, scope: !4173)
!4178 = !DILocation(line: 174, column: 18, scope: !4173)
!4179 = !DILocation(line: 174, column: 29, scope: !4173)
!4180 = !DILocation(line: 175, column: 1, scope: !4173)
!4181 = distinct !DISubprogram(name: "gdma_start", scope: !346, file: !346, line: 177, type: !4123, scopeLine: 178, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4182)
!4182 = !{!4183}
!4183 = !DILocalVariable(name: "index", arg: 1, scope: !4181, file: !346, line: 177, type: !61)
!4184 = !DILocation(line: 0, scope: !4181)
!4185 = !DILocation(line: 179, column: 5, scope: !4181)
!4186 = !DILocation(line: 179, column: 18, scope: !4181)
!4187 = !DILocation(line: 179, column: 29, scope: !4181)
!4188 = !DILocation(line: 180, column: 1, scope: !4181)
!4189 = distinct !DISubprogram(name: "gdma_set_control", scope: !346, file: !346, line: 183, type: !4190, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4192)
!4190 = !DISubroutineType(types: !4191)
!4191 = !{null, !61, !61, !61}
!4192 = !{!4193, !4194, !4195}
!4193 = !DILocalVariable(name: "index", arg: 1, scope: !4189, file: !346, line: 183, type: !61)
!4194 = !DILocalVariable(name: "control", arg: 2, scope: !4189, file: !346, line: 183, type: !61)
!4195 = !DILocalVariable(name: "count", arg: 3, scope: !4189, file: !346, line: 183, type: !61)
!4196 = !DILocation(line: 0, scope: !4189)
!4197 = !DILocation(line: 185, column: 5, scope: !4189)
!4198 = !DILocation(line: 185, column: 18, scope: !4189)
!4199 = !DILocation(line: 185, column: 27, scope: !4189)
!4200 = !DILocation(line: 186, column: 5, scope: !4189)
!4201 = !DILocation(line: 186, column: 18, scope: !4189)
!4202 = !DILocation(line: 186, column: 29, scope: !4189)
!4203 = !DILocation(line: 187, column: 1, scope: !4189)
!4204 = distinct !DISubprogram(name: "gdma_set_address", scope: !346, file: !346, line: 189, type: !4190, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4205)
!4205 = !{!4206, !4207, !4208}
!4206 = !DILocalVariable(name: "index", arg: 1, scope: !4204, file: !346, line: 189, type: !61)
!4207 = !DILocalVariable(name: "destination", arg: 2, scope: !4204, file: !346, line: 189, type: !61)
!4208 = !DILocalVariable(name: "source", arg: 3, scope: !4204, file: !346, line: 189, type: !61)
!4209 = !DILocation(line: 0, scope: !4204)
!4210 = !DILocation(line: 191, column: 5, scope: !4204)
!4211 = !DILocation(line: 191, column: 18, scope: !4204)
!4212 = !DILocation(line: 191, column: 27, scope: !4204)
!4213 = !DILocation(line: 192, column: 5, scope: !4204)
!4214 = !DILocation(line: 192, column: 18, scope: !4204)
!4215 = !DILocation(line: 192, column: 27, scope: !4204)
!4216 = !DILocation(line: 194, column: 1, scope: !4204)
!4217 = distinct !DISubprogram(name: "dma_enable_clock", scope: !346, file: !346, line: 195, type: !4218, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4221)
!4218 = !DISubroutineType(types: !4219)
!4219 = !{!61, !4220}
!4220 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_domain_type_t", file: !354, line: 127, baseType: !353)
!4221 = !{!4222, !4223, !4225}
!4222 = !DILocalVariable(name: "domain", arg: 1, scope: !4217, file: !346, line: 195, type: !4220)
!4223 = !DILocalVariable(name: "clock_status", scope: !4217, file: !346, line: 197, type: !4224)
!4224 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_clock_status_t", file: !359, line: 106, baseType: !358)
!4225 = !DILocalVariable(name: "status", scope: !4217, file: !346, line: 198, type: !61)
!4226 = !DILocation(line: 0, scope: !4217)
!4227 = !DILocation(line: 200, column: 16, scope: !4228)
!4228 = distinct !DILexicalBlock(scope: !4217, file: !346, line: 200, column: 9)
!4229 = !DILocation(line: 200, column: 9, scope: !4217)
!4230 = !DILocation(line: 202, column: 24, scope: !4231)
!4231 = distinct !DILexicalBlock(scope: !4228, file: !346, line: 200, column: 27)
!4232 = !DILocation(line: 203, column: 33, scope: !4233)
!4233 = distinct !DILexicalBlock(scope: !4231, file: !346, line: 203, column: 13)
!4234 = !DILocation(line: 207, column: 24, scope: !4231)
!4235 = !DILocation(line: 208, column: 33, scope: !4236)
!4236 = distinct !DILexicalBlock(scope: !4231, file: !346, line: 208, column: 13)
!4237 = !DILocation(line: 208, column: 13, scope: !4231)
!4238 = !DILocation(line: 213, column: 24, scope: !4239)
!4239 = distinct !DILexicalBlock(scope: !4228, file: !346, line: 211, column: 12)
!4240 = !DILocation(line: 214, column: 33, scope: !4241)
!4241 = distinct !DILexicalBlock(scope: !4239, file: !346, line: 214, column: 13)
!4242 = !DILocation(line: 214, column: 13, scope: !4239)
!4243 = !DILocation(line: 0, scope: !4228)
!4244 = !DILocation(line: 219, column: 5, scope: !4217)
!4245 = distinct !DISubprogram(name: "dma_disable_clock", scope: !346, file: !346, line: 223, type: !4218, scopeLine: 224, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4246)
!4246 = !{!4247, !4248, !4249}
!4247 = !DILocalVariable(name: "domain", arg: 1, scope: !4245, file: !346, line: 223, type: !4220)
!4248 = !DILocalVariable(name: "return_status", scope: !4245, file: !346, line: 225, type: !61)
!4249 = !DILocalVariable(name: "clock_status", scope: !4245, file: !346, line: 226, type: !4224)
!4250 = !DILocation(line: 0, scope: !4245)
!4251 = !DILocation(line: 228, column: 16, scope: !4252)
!4252 = distinct !DILexicalBlock(scope: !4245, file: !346, line: 228, column: 9)
!4253 = !DILocation(line: 228, column: 9, scope: !4245)
!4254 = !DILocation(line: 231, column: 24, scope: !4255)
!4255 = distinct !DILexicalBlock(scope: !4252, file: !346, line: 228, column: 27)
!4256 = !DILocation(line: 232, column: 33, scope: !4257)
!4257 = distinct !DILexicalBlock(scope: !4255, file: !346, line: 232, column: 13)
!4258 = !DILocation(line: 235, column: 24, scope: !4255)
!4259 = !DILocation(line: 236, column: 33, scope: !4260)
!4260 = distinct !DILexicalBlock(scope: !4255, file: !346, line: 236, column: 13)
!4261 = !DILocation(line: 236, column: 13, scope: !4255)
!4262 = !DILocation(line: 242, column: 24, scope: !4263)
!4263 = distinct !DILexicalBlock(scope: !4252, file: !346, line: 240, column: 12)
!4264 = !DILocation(line: 243, column: 33, scope: !4265)
!4265 = distinct !DILexicalBlock(scope: !4263, file: !346, line: 243, column: 13)
!4266 = !DILocation(line: 243, column: 13, scope: !4263)
!4267 = !DILocation(line: 0, scope: !4252)
!4268 = !DILocation(line: 248, column: 5, scope: !4245)
!4269 = distinct !DISubprogram(name: "pdma_init", scope: !346, file: !346, line: 279, type: !4270, scopeLine: 280, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4274)
!4270 = !DISubroutineType(types: !4271)
!4271 = !{!4272, !4273}
!4272 = !DIDerivedType(tag: DW_TAG_typedef, name: "pdma_status_t", file: !354, line: 171, baseType: !365)
!4273 = !DIDerivedType(tag: DW_TAG_typedef, name: "pdma_channel_t", file: !354, line: 147, baseType: !371)
!4274 = !{!4275, !4276, !4277, !4278}
!4275 = !DILocalVariable(name: "channel", arg: 1, scope: !4269, file: !346, line: 279, type: !4273)
!4276 = !DILocalVariable(name: "offset", scope: !4269, file: !346, line: 282, type: !61)
!4277 = !DILocalVariable(name: "result", scope: !4269, file: !346, line: 283, type: !61)
!4278 = !DILocalVariable(name: "saved_mask", scope: !4279, file: !346, line: 291, type: !61)
!4279 = distinct !DILexicalBlock(scope: !4269, file: !346, line: 291, column: 5)
!4280 = !DILocation(line: 0, scope: !4269)
!4281 = !DILocation(line: 284, column: 14, scope: !4269)
!4282 = !DILocation(line: 286, column: 14, scope: !4283)
!4283 = distinct !DILexicalBlock(scope: !4269, file: !346, line: 286, column: 9)
!4284 = !DILocation(line: 286, column: 9, scope: !4269)
!4285 = !DILocation(line: 291, column: 5, scope: !4279)
!4286 = !DILocation(line: 0, scope: !4279)
!4287 = !DILocation(line: 291, column: 5, scope: !4288)
!4288 = distinct !DILexicalBlock(scope: !4279, file: !346, line: 291, column: 5)
!4289 = !DILocation(line: 291, column: 5, scope: !4290)
!4290 = distinct !DILexicalBlock(scope: !4288, file: !346, line: 291, column: 5)
!4291 = !DILocation(line: 291, column: 5, scope: !4292)
!4292 = distinct !DILexicalBlock(scope: !4288, file: !346, line: 291, column: 5)
!4293 = !DILocation(line: 294, column: 14, scope: !4269)
!4294 = !DILocation(line: 296, column: 14, scope: !4295)
!4295 = distinct !DILexicalBlock(scope: !4269, file: !346, line: 296, column: 9)
!4296 = !DILocation(line: 296, column: 9, scope: !4269)
!4297 = !DILocation(line: 300, column: 14, scope: !4269)
!4298 = !DILocation(line: 302, column: 14, scope: !4299)
!4299 = distinct !DILexicalBlock(scope: !4269, file: !346, line: 302, column: 9)
!4300 = !DILocation(line: 302, column: 9, scope: !4269)
!4301 = !DILocation(line: 307, column: 5, scope: !4269)
!4302 = !DILocation(line: 307, column: 19, scope: !4269)
!4303 = !DILocation(line: 307, column: 28, scope: !4269)
!4304 = !DILocation(line: 308, column: 5, scope: !4269)
!4305 = !DILocation(line: 308, column: 19, scope: !4269)
!4306 = !DILocation(line: 308, column: 30, scope: !4269)
!4307 = !DILocation(line: 309, column: 5, scope: !4269)
!4308 = !DILocation(line: 309, column: 19, scope: !4269)
!4309 = !DILocation(line: 309, column: 30, scope: !4269)
!4310 = !DILocation(line: 310, column: 5, scope: !4269)
!4311 = !DILocation(line: 310, column: 19, scope: !4269)
!4312 = !DILocation(line: 310, column: 31, scope: !4269)
!4313 = !DILocation(line: 311, column: 5, scope: !4269)
!4314 = !DILocation(line: 311, column: 19, scope: !4269)
!4315 = !DILocation(line: 311, column: 32, scope: !4269)
!4316 = !DILocation(line: 314, column: 5, scope: !4269)
!4317 = !DILocation(line: 315, column: 5, scope: !4269)
!4318 = !DILocation(line: 316, column: 5, scope: !4269)
!4319 = !DILocation(line: 317, column: 5, scope: !4269)
!4320 = !DILocation(line: 318, column: 5, scope: !4269)
!4321 = !DILocation(line: 319, column: 1, scope: !4269)
!4322 = distinct !DISubprogram(name: "pdma_check_valid_channel", scope: !346, file: !346, line: 262, type: !4323, scopeLine: 263, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4325)
!4323 = !DISubroutineType(types: !4324)
!4324 = !{!61, !4273}
!4325 = !{!4326, !4327}
!4326 = !DILocalVariable(name: "channel", arg: 1, scope: !4322, file: !346, line: 262, type: !4273)
!4327 = !DILocalVariable(name: "offset", scope: !4322, file: !346, line: 265, type: !61)
!4328 = !DILocation(line: 0, scope: !4322)
!4329 = !DILocation(line: 268, column: 22, scope: !4322)
!4330 = !DILocation(line: 270, column: 16, scope: !4331)
!4331 = distinct !DILexicalBlock(scope: !4322, file: !346, line: 270, column: 9)
!4332 = !DILocation(line: 0, scope: !4331)
!4333 = !DILocation(line: 275, column: 1, scope: !4322)
!4334 = !DILocation(line: 0, scope: !525)
!4335 = !DILocation(line: 1113, column: 5, scope: !525)
!4336 = !DILocation(line: 1113, column: 24, scope: !525)
!4337 = !DILocation(line: 1126, column: 21, scope: !525)
!4338 = !DILocation(line: 1126, column: 37, scope: !525)
!4339 = !DILocation(line: 1126, column: 19, scope: !525)
!4340 = !DILocation(line: 1127, column: 9, scope: !4341)
!4341 = distinct !DILexicalBlock(scope: !525, file: !346, line: 1127, column: 9)
!4342 = !DILocation(line: 1127, column: 23, scope: !4341)
!4343 = !DILocation(line: 1127, column: 9, scope: !525)
!4344 = !DILocation(line: 1130, column: 9, scope: !4345)
!4345 = distinct !DILexicalBlock(scope: !4341, file: !346, line: 1127, column: 53)
!4346 = !DILocation(line: 1130, column: 18, scope: !4345)
!4347 = !DILocation(line: 1130, column: 30, scope: !4345)
!4348 = !DILocation(line: 1133, column: 44, scope: !4345)
!4349 = !DILocation(line: 1135, column: 27, scope: !4350)
!4350 = distinct !DILexicalBlock(scope: !4345, file: !346, line: 1135, column: 13)
!4351 = !DILocation(line: 1135, column: 13, scope: !4345)
!4352 = !DILocation(line: 1134, column: 39, scope: !4345)
!4353 = !DILocation(line: 1136, column: 13, scope: !4354)
!4354 = distinct !DILexicalBlock(scope: !4350, file: !346, line: 1135, column: 36)
!4355 = !DILocation(line: 1141, column: 5, scope: !4345)
!4356 = !DILocation(line: 1138, column: 13, scope: !4357)
!4357 = distinct !DILexicalBlock(scope: !4350, file: !346, line: 1137, column: 16)
!4358 = !DILocation(line: 0, scope: !4359)
!4359 = distinct !DILexicalBlock(scope: !525, file: !346, line: 1145, column: 5)
!4360 = !DILocation(line: 1145, column: 5, scope: !4359)
!4361 = !DILocation(line: 0, scope: !4362)
!4362 = distinct !DILexicalBlock(scope: !525, file: !346, line: 1170, column: 5)
!4363 = !DILocation(line: 1170, column: 5, scope: !4362)
!4364 = !DILocation(line: 1146, column: 25, scope: !4365)
!4365 = distinct !DILexicalBlock(scope: !4366, file: !346, line: 1145, column: 51)
!4366 = distinct !DILexicalBlock(scope: !4359, file: !346, line: 1145, column: 5)
!4367 = !DILocation(line: 1146, column: 45, scope: !4365)
!4368 = !DILocation(line: 1146, column: 23, scope: !4365)
!4369 = !DILocation(line: 1149, column: 13, scope: !4370)
!4370 = distinct !DILexicalBlock(scope: !4365, file: !346, line: 1149, column: 13)
!4371 = !DILocation(line: 1149, column: 38, scope: !4370)
!4372 = !DILocation(line: 1149, column: 34, scope: !4370)
!4373 = !DILocation(line: 1149, column: 27, scope: !4370)
!4374 = !DILocation(line: 1149, column: 13, scope: !4365)
!4375 = !DILocation(line: 1153, column: 17, scope: !4376)
!4376 = distinct !DILexicalBlock(scope: !4377, file: !346, line: 1151, column: 13)
!4377 = distinct !DILexicalBlock(scope: !4370, file: !346, line: 1149, column: 78)
!4378 = !DILocation(line: 1153, column: 30, scope: !4376)
!4379 = !DILocation(line: 1153, column: 42, scope: !4376)
!4380 = !DILocation(line: 1156, column: 56, scope: !4376)
!4381 = !DILocation(line: 1158, column: 35, scope: !4382)
!4382 = distinct !DILexicalBlock(scope: !4376, file: !346, line: 1158, column: 21)
!4383 = !DILocation(line: 1158, column: 21, scope: !4376)
!4384 = !DILocation(line: 1157, column: 51, scope: !4376)
!4385 = !DILocation(line: 1159, column: 21, scope: !4386)
!4386 = distinct !DILexicalBlock(scope: !4382, file: !346, line: 1158, column: 44)
!4387 = !DILocation(line: 1163, column: 22, scope: !4376)
!4388 = !DILocation(line: 1163, column: 17, scope: !4376)
!4389 = !DILocation(line: 1163, column: 30, scope: !4376)
!4390 = !DILocation(line: 1163, column: 41, scope: !4376)
!4391 = !DILocation(line: 1165, column: 9, scope: !4377)
!4392 = !DILocation(line: 1161, column: 21, scope: !4393)
!4393 = distinct !DILexicalBlock(scope: !4382, file: !346, line: 1160, column: 24)
!4394 = !DILocation(line: 1145, column: 47, scope: !4366)
!4395 = !DILocation(line: 1145, column: 27, scope: !4366)
!4396 = distinct !{!4396, !4360, !4397}
!4397 = !DILocation(line: 1166, column: 5, scope: !4359)
!4398 = !DILocation(line: 1171, column: 25, scope: !4399)
!4399 = distinct !DILexicalBlock(scope: !4400, file: !346, line: 1170, column: 61)
!4400 = distinct !DILexicalBlock(scope: !4362, file: !346, line: 1170, column: 5)
!4401 = !DILocation(line: 1171, column: 45, scope: !4399)
!4402 = !DILocation(line: 1171, column: 23, scope: !4399)
!4403 = !DILocation(line: 1174, column: 13, scope: !4404)
!4404 = distinct !DILexicalBlock(scope: !4399, file: !346, line: 1174, column: 13)
!4405 = !DILocation(line: 1174, column: 38, scope: !4404)
!4406 = !DILocation(line: 1174, column: 34, scope: !4404)
!4407 = !DILocation(line: 1174, column: 27, scope: !4404)
!4408 = !DILocation(line: 1174, column: 13, scope: !4399)
!4409 = !DILocation(line: 1178, column: 17, scope: !4410)
!4410 = distinct !DILexicalBlock(scope: !4411, file: !346, line: 1176, column: 13)
!4411 = distinct !DILexicalBlock(scope: !4404, file: !346, line: 1174, column: 78)
!4412 = !DILocation(line: 1178, column: 30, scope: !4410)
!4413 = !DILocation(line: 1178, column: 42, scope: !4410)
!4414 = !DILocation(line: 1180, column: 56, scope: !4410)
!4415 = !DILocation(line: 1182, column: 35, scope: !4416)
!4416 = distinct !DILexicalBlock(scope: !4410, file: !346, line: 1182, column: 21)
!4417 = !DILocation(line: 1182, column: 21, scope: !4410)
!4418 = !DILocation(line: 1181, column: 51, scope: !4410)
!4419 = !DILocation(line: 1183, column: 21, scope: !4420)
!4420 = distinct !DILexicalBlock(scope: !4416, file: !346, line: 1182, column: 44)
!4421 = !DILocation(line: 1170, column: 57, scope: !4400)
!4422 = !DILocation(line: 1188, column: 9, scope: !4411)
!4423 = !DILocation(line: 1185, column: 21, scope: !4424)
!4424 = distinct !DILexicalBlock(scope: !4416, file: !346, line: 1184, column: 24)
!4425 = !DILocation(line: 1170, column: 27, scope: !4400)
!4426 = distinct !{!4426, !4363, !4427}
!4427 = !DILocation(line: 1189, column: 5, scope: !4362)
!4428 = !DILocation(line: 1193, column: 1, scope: !525)
!4429 = distinct !DISubprogram(name: "pdma_deinit", scope: !346, file: !346, line: 324, type: !4270, scopeLine: 325, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4430)
!4430 = !{!4431, !4432, !4433, !4434, !4435, !4436}
!4431 = !DILocalVariable(name: "channel", arg: 1, scope: !4429, file: !346, line: 324, type: !4273)
!4432 = !DILocalVariable(name: "offset", scope: !4429, file: !346, line: 326, type: !61)
!4433 = !DILocalVariable(name: "result", scope: !4429, file: !346, line: 327, type: !61)
!4434 = !DILocalVariable(name: "saved_mask", scope: !4429, file: !346, line: 328, type: !61)
!4435 = !DILocalVariable(name: "global_status", scope: !4429, file: !346, line: 330, type: !60)
!4436 = !DILocalVariable(name: "saved_mask", scope: !4437, file: !346, line: 356, type: !61)
!4437 = distinct !DILexicalBlock(scope: !4429, file: !346, line: 356, column: 5)
!4438 = !DILocation(line: 0, scope: !4429)
!4439 = !DILocation(line: 330, column: 5, scope: !4429)
!4440 = !DILocation(line: 330, column: 24, scope: !4429)
!4441 = !DILocation(line: 331, column: 14, scope: !4429)
!4442 = !DILocation(line: 332, column: 14, scope: !4443)
!4443 = distinct !DILexicalBlock(scope: !4429, file: !346, line: 332, column: 9)
!4444 = !DILocation(line: 332, column: 9, scope: !4429)
!4445 = !DILocation(line: 336, column: 18, scope: !4429)
!4446 = !DILocation(line: 337, column: 21, scope: !4429)
!4447 = !DILocation(line: 337, column: 42, scope: !4429)
!4448 = !DILocation(line: 337, column: 19, scope: !4429)
!4449 = !DILocation(line: 339, column: 9, scope: !4450)
!4450 = distinct !DILexicalBlock(scope: !4429, file: !346, line: 339, column: 9)
!4451 = !DILocation(line: 339, column: 34, scope: !4450)
!4452 = !DILocation(line: 339, column: 30, scope: !4450)
!4453 = !DILocation(line: 339, column: 23, scope: !4450)
!4454 = !DILocation(line: 339, column: 9, scope: !4429)
!4455 = !DILocation(line: 341, column: 9, scope: !4456)
!4456 = distinct !DILexicalBlock(scope: !4450, file: !346, line: 339, column: 75)
!4457 = !DILocation(line: 347, column: 9, scope: !4458)
!4458 = distinct !DILexicalBlock(scope: !4429, file: !346, line: 347, column: 9)
!4459 = !DILocation(line: 347, column: 30, scope: !4458)
!4460 = !DILocation(line: 347, column: 23, scope: !4458)
!4461 = !DILocation(line: 347, column: 9, scope: !4429)
!4462 = !DILocation(line: 349, column: 9, scope: !4463)
!4463 = distinct !DILexicalBlock(scope: !4458, file: !346, line: 347, column: 69)
!4464 = !DILocation(line: 353, column: 5, scope: !4429)
!4465 = !DILocation(line: 356, column: 5, scope: !4437)
!4466 = !DILocation(line: 0, scope: !4437)
!4467 = !DILocation(line: 356, column: 5, scope: !4468)
!4468 = distinct !DILexicalBlock(scope: !4437, file: !346, line: 356, column: 5)
!4469 = !DILocation(line: 356, column: 5, scope: !4470)
!4470 = distinct !DILexicalBlock(scope: !4468, file: !346, line: 356, column: 5)
!4471 = !DILocation(line: 356, column: 5, scope: !4472)
!4472 = distinct !DILexicalBlock(scope: !4468, file: !346, line: 356, column: 5)
!4473 = !DILocation(line: 359, column: 14, scope: !4429)
!4474 = !DILocation(line: 361, column: 14, scope: !4475)
!4475 = distinct !DILexicalBlock(scope: !4429, file: !346, line: 361, column: 9)
!4476 = !DILocation(line: 361, column: 9, scope: !4429)
!4477 = !DILocation(line: 365, column: 14, scope: !4429)
!4478 = !DILocation(line: 367, column: 14, scope: !4479)
!4479 = distinct !DILexicalBlock(scope: !4429, file: !346, line: 367, column: 9)
!4480 = !DILocation(line: 372, column: 1, scope: !4429)
!4481 = distinct !DISubprogram(name: "pdma_set_ring_buffer", scope: !346, file: !346, line: 374, type: !4482, scopeLine: 376, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4484)
!4482 = !DISubroutineType(types: !4483)
!4483 = !{!4272, !4273, !61, !61}
!4484 = !{!4485, !4486, !4487, !4488}
!4485 = !DILocalVariable(name: "channel", arg: 1, scope: !4481, file: !346, line: 374, type: !4273)
!4486 = !DILocalVariable(name: "wppt", arg: 2, scope: !4481, file: !346, line: 374, type: !61)
!4487 = !DILocalVariable(name: "wpto", arg: 3, scope: !4481, file: !346, line: 374, type: !61)
!4488 = !DILocalVariable(name: "offset", scope: !4481, file: !346, line: 377, type: !61)
!4489 = !DILocation(line: 0, scope: !4481)
!4490 = !DILocation(line: 379, column: 14, scope: !4481)
!4491 = !DILocation(line: 380, column: 14, scope: !4492)
!4492 = distinct !DILexicalBlock(scope: !4481, file: !346, line: 380, column: 9)
!4493 = !DILocation(line: 380, column: 9, scope: !4481)
!4494 = !DILocation(line: 385, column: 14, scope: !4495)
!4495 = distinct !DILexicalBlock(scope: !4481, file: !346, line: 385, column: 9)
!4496 = !DILocation(line: 385, column: 9, scope: !4481)
!4497 = !DILocation(line: 390, column: 5, scope: !4481)
!4498 = !DILocation(line: 390, column: 19, scope: !4481)
!4499 = !DILocation(line: 390, column: 29, scope: !4481)
!4500 = !DILocation(line: 393, column: 5, scope: !4481)
!4501 = !DILocation(line: 393, column: 19, scope: !4481)
!4502 = !DILocation(line: 393, column: 29, scope: !4481)
!4503 = !DILocation(line: 395, column: 5, scope: !4481)
!4504 = !DILocation(line: 397, column: 1, scope: !4481)
!4505 = distinct !DISubprogram(name: "pdma_configure", scope: !346, file: !346, line: 401, type: !4506, scopeLine: 403, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4518)
!4506 = !DISubroutineType(types: !4507)
!4507 = !{!4272, !4273, !4508}
!4508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4509, size: 32)
!4509 = !DIDerivedType(tag: DW_TAG_typedef, name: "pdma_config_t", file: !354, line: 275, baseType: !4510)
!4510 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !354, line: 270, size: 128, elements: !4511)
!4511 = !{!4512, !4513, !4515, !4516}
!4512 = !DIDerivedType(tag: DW_TAG_member, name: "burst_mode", scope: !4510, file: !354, line: 271, baseType: !91, size: 8)
!4513 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4510, file: !354, line: 272, baseType: !4514, size: 32, offset: 32)
!4514 = !DIDerivedType(tag: DW_TAG_typedef, name: "pdma_transfer_size_format_t", file: !354, line: 155, baseType: !381)
!4515 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4510, file: !354, line: 273, baseType: !61, size: 32, offset: 64)
!4516 = !DIDerivedType(tag: DW_TAG_member, name: "master_type", scope: !4510, file: !354, line: 274, baseType: !4517, size: 32, offset: 96)
!4517 = !DIDerivedType(tag: DW_TAG_typedef, name: "pdma_master_type_t", file: !354, line: 185, baseType: !386)
!4518 = !{!4519, !4520, !4521, !4522, !4523, !4524}
!4519 = !DILocalVariable(name: "channel", arg: 1, scope: !4505, file: !346, line: 401, type: !4273)
!4520 = !DILocalVariable(name: "pdma_config", arg: 2, scope: !4505, file: !346, line: 401, type: !4508)
!4521 = !DILocalVariable(name: "offset", scope: !4505, file: !346, line: 405, type: !61)
!4522 = !DILocalVariable(name: "saved_mask", scope: !4505, file: !346, line: 407, type: !61)
!4523 = !DILocalVariable(name: "dma_control", scope: !4505, file: !346, line: 410, type: !61)
!4524 = !DILocalVariable(name: "global_status", scope: !4505, file: !346, line: 413, type: !60)
!4525 = !DILocation(line: 0, scope: !4505)
!4526 = !DILocation(line: 413, column: 5, scope: !4505)
!4527 = !DILocation(line: 413, column: 24, scope: !4505)
!4528 = !DILocation(line: 415, column: 14, scope: !4505)
!4529 = !DILocation(line: 416, column: 14, scope: !4530)
!4530 = distinct !DILexicalBlock(scope: !4505, file: !346, line: 416, column: 9)
!4531 = !DILocation(line: 416, column: 9, scope: !4505)
!4532 = !DILocation(line: 422, column: 22, scope: !4533)
!4533 = distinct !DILexicalBlock(scope: !4505, file: !346, line: 422, column: 9)
!4534 = !DILocation(line: 422, column: 9, scope: !4505)
!4535 = !DILocation(line: 432, column: 18, scope: !4505)
!4536 = !DILocation(line: 435, column: 21, scope: !4505)
!4537 = !DILocation(line: 435, column: 42, scope: !4505)
!4538 = !DILocation(line: 435, column: 19, scope: !4505)
!4539 = !DILocation(line: 437, column: 9, scope: !4540)
!4540 = distinct !DILexicalBlock(scope: !4505, file: !346, line: 437, column: 9)
!4541 = !DILocation(line: 437, column: 33, scope: !4540)
!4542 = !DILocation(line: 437, column: 30, scope: !4540)
!4543 = !DILocation(line: 437, column: 23, scope: !4540)
!4544 = !DILocation(line: 437, column: 9, scope: !4505)
!4545 = !DILocation(line: 440, column: 9, scope: !4546)
!4546 = distinct !DILexicalBlock(scope: !4540, file: !346, line: 437, column: 69)
!4547 = !DILocation(line: 441, column: 9, scope: !4546)
!4548 = !DILocation(line: 447, column: 9, scope: !4549)
!4549 = distinct !DILexicalBlock(scope: !4505, file: !346, line: 447, column: 9)
!4550 = !DILocation(line: 447, column: 30, scope: !4549)
!4551 = !DILocation(line: 447, column: 23, scope: !4549)
!4552 = !DILocation(line: 447, column: 9, scope: !4505)
!4553 = !DILocation(line: 457, column: 5, scope: !4505)
!4554 = !DILocation(line: 457, column: 19, scope: !4505)
!4555 = !DILocation(line: 457, column: 30, scope: !4505)
!4556 = !DILocation(line: 459, column: 26, scope: !4505)
!4557 = !DILocation(line: 459, column: 5, scope: !4505)
!4558 = !DILocation(line: 0, scope: !4559)
!4559 = distinct !DILexicalBlock(scope: !4505, file: !346, line: 459, column: 39)
!4560 = !DILocation(line: 483, column: 26, scope: !4505)
!4561 = !DILocation(line: 483, column: 5, scope: !4505)
!4562 = !DILocation(line: 490, column: 25, scope: !4563)
!4563 = distinct !DILexicalBlock(scope: !4505, file: !346, line: 483, column: 32)
!4564 = !DILocation(line: 491, column: 13, scope: !4563)
!4565 = !DILocation(line: 493, column: 25, scope: !4563)
!4566 = !DILocation(line: 494, column: 13, scope: !4563)
!4567 = !DILocation(line: 0, scope: !4563)
!4568 = !DILocation(line: 499, column: 23, scope: !4569)
!4569 = distinct !DILexicalBlock(scope: !4505, file: !346, line: 499, column: 9)
!4570 = !DILocation(line: 499, column: 43, scope: !4569)
!4571 = !DILocation(line: 503, column: 17, scope: !4505)
!4572 = !DILocation(line: 505, column: 5, scope: !4505)
!4573 = !DILocation(line: 505, column: 19, scope: !4505)
!4574 = !DILocation(line: 505, column: 28, scope: !4505)
!4575 = !DILocation(line: 506, column: 45, scope: !4505)
!4576 = !DILocation(line: 506, column: 5, scope: !4505)
!4577 = !DILocation(line: 506, column: 19, scope: !4505)
!4578 = !DILocation(line: 506, column: 30, scope: !4505)
!4579 = !DILocation(line: 508, column: 5, scope: !4505)
!4580 = !DILocation(line: 510, column: 1, scope: !4505)
!4581 = distinct !DISubprogram(name: "pdma_start_polling", scope: !346, file: !346, line: 512, type: !4582, scopeLine: 514, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4584)
!4582 = !DISubroutineType(types: !4583)
!4583 = !{!4272, !4273, !61}
!4584 = !{!4585, !4586, !4587, !4588}
!4585 = !DILocalVariable(name: "channel", arg: 1, scope: !4581, file: !346, line: 512, type: !4273)
!4586 = !DILocalVariable(name: "address", arg: 2, scope: !4581, file: !346, line: 512, type: !61)
!4587 = !DILocalVariable(name: "offset", scope: !4581, file: !346, line: 516, type: !61)
!4588 = !DILocalVariable(name: "running_status", scope: !4581, file: !346, line: 518, type: !4589)
!4589 = !DIDerivedType(tag: DW_TAG_typedef, name: "pdma_running_status_t", file: !354, line: 177, baseType: !392)
!4590 = !DILocation(line: 0, scope: !4581)
!4591 = !DILocation(line: 518, column: 5, scope: !4581)
!4592 = !DILocation(line: 518, column: 28, scope: !4581)
!4593 = !DILocation(line: 520, column: 14, scope: !4581)
!4594 = !DILocation(line: 521, column: 14, scope: !4595)
!4595 = distinct !DILexicalBlock(scope: !4581, file: !346, line: 521, column: 9)
!4596 = !DILocation(line: 521, column: 9, scope: !4581)
!4597 = !DILocation(line: 526, column: 18, scope: !4598)
!4598 = distinct !DILexicalBlock(scope: !4581, file: !346, line: 526, column: 9)
!4599 = !DILocation(line: 526, column: 23, scope: !4598)
!4600 = !DILocation(line: 526, column: 9, scope: !4581)
!4601 = !DILocation(line: 527, column: 9, scope: !4602)
!4602 = distinct !DILexicalBlock(scope: !4598, file: !346, line: 526, column: 28)
!4603 = !DILocation(line: 532, column: 17, scope: !4604)
!4604 = distinct !DILexicalBlock(scope: !4581, file: !346, line: 532, column: 9)
!4605 = !DILocation(line: 532, column: 9, scope: !4581)
!4606 = !DILocation(line: 533, column: 9, scope: !4607)
!4607 = distinct !DILexicalBlock(scope: !4604, file: !346, line: 532, column: 50)
!4608 = !DILocation(line: 538, column: 5, scope: !4581)
!4609 = !DILocation(line: 538, column: 19, scope: !4581)
!4610 = !DILocation(line: 538, column: 32, scope: !4581)
!4611 = !DILocation(line: 540, column: 5, scope: !4581)
!4612 = !DILocation(line: 540, column: 19, scope: !4581)
!4613 = !DILocation(line: 540, column: 28, scope: !4581)
!4614 = !DILocation(line: 542, column: 5, scope: !4581)
!4615 = !DILocation(line: 542, column: 19, scope: !4581)
!4616 = !DILocation(line: 542, column: 30, scope: !4581)
!4617 = !DILocation(line: 544, column: 5, scope: !4581)
!4618 = !DILocation(line: 545, column: 12, scope: !4581)
!4619 = !DILocation(line: 545, column: 5, scope: !4581)
!4620 = !DILocation(line: 547, column: 9, scope: !4621)
!4621 = distinct !DILexicalBlock(scope: !4581, file: !346, line: 545, column: 28)
!4622 = distinct !{!4622, !4619, !4623}
!4623 = !DILocation(line: 548, column: 5, scope: !4581)
!4624 = !DILocation(line: 550, column: 5, scope: !4581)
!4625 = !DILocation(line: 551, column: 5, scope: !4581)
!4626 = !DILocation(line: 553, column: 1, scope: !4581)
!4627 = distinct !DISubprogram(name: "pdma_get_running_status", scope: !346, file: !346, line: 620, type: !4628, scopeLine: 622, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4631)
!4628 = !DISubroutineType(types: !4629)
!4629 = !{!4272, !4273, !4630}
!4630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4589, size: 32)
!4631 = !{!4632, !4633, !4634, !4635}
!4632 = !DILocalVariable(name: "channel", arg: 1, scope: !4627, file: !346, line: 620, type: !4273)
!4633 = !DILocalVariable(name: "running_status", arg: 2, scope: !4627, file: !346, line: 620, type: !4630)
!4634 = !DILocalVariable(name: "offset", scope: !4627, file: !346, line: 624, type: !61)
!4635 = !DILocalVariable(name: "global_status", scope: !4627, file: !346, line: 627, type: !60)
!4636 = !DILocation(line: 0, scope: !4627)
!4637 = !DILocation(line: 627, column: 5, scope: !4627)
!4638 = !DILocation(line: 627, column: 24, scope: !4627)
!4639 = !DILocation(line: 629, column: 14, scope: !4627)
!4640 = !DILocation(line: 630, column: 14, scope: !4641)
!4641 = distinct !DILexicalBlock(scope: !4627, file: !346, line: 630, column: 9)
!4642 = !DILocation(line: 630, column: 9, scope: !4627)
!4643 = !DILocation(line: 635, column: 21, scope: !4627)
!4644 = !DILocation(line: 635, column: 42, scope: !4627)
!4645 = !DILocation(line: 635, column: 19, scope: !4627)
!4646 = !DILocation(line: 637, column: 9, scope: !4647)
!4647 = distinct !DILexicalBlock(scope: !4627, file: !346, line: 637, column: 9)
!4648 = !DILocation(line: 637, column: 33, scope: !4647)
!4649 = !DILocation(line: 0, scope: !4647)
!4650 = !DILocation(line: 644, column: 5, scope: !4627)
!4651 = !DILocation(line: 646, column: 1, scope: !4627)
!4652 = distinct !DISubprogram(name: "pdma_stop", scope: !346, file: !346, line: 585, type: !4270, scopeLine: 587, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4653)
!4653 = !{!4654, !4655}
!4654 = !DILocalVariable(name: "channel", arg: 1, scope: !4652, file: !346, line: 585, type: !4273)
!4655 = !DILocalVariable(name: "offset", scope: !4652, file: !346, line: 589, type: !61)
!4656 = !DILocation(line: 0, scope: !4652)
!4657 = !DILocation(line: 591, column: 14, scope: !4652)
!4658 = !DILocation(line: 592, column: 14, scope: !4659)
!4659 = distinct !DILexicalBlock(scope: !4652, file: !346, line: 592, column: 9)
!4660 = !DILocation(line: 592, column: 9, scope: !4652)
!4661 = !DILocation(line: 597, column: 5, scope: !4652)
!4662 = !DILocation(line: 597, column: 19, scope: !4652)
!4663 = !DILocation(line: 597, column: 30, scope: !4652)
!4664 = !DILocation(line: 598, column: 5, scope: !4652)
!4665 = !DILocation(line: 598, column: 19, scope: !4652)
!4666 = !DILocation(line: 598, column: 31, scope: !4652)
!4667 = !DILocation(line: 600, column: 5, scope: !4652)
!4668 = !DILocation(line: 601, column: 1, scope: !4652)
!4669 = distinct !DISubprogram(name: "pdma_start_interrupt", scope: !346, file: !346, line: 555, type: !4582, scopeLine: 556, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4670)
!4670 = !{!4671, !4672, !4673}
!4671 = !DILocalVariable(name: "channel", arg: 1, scope: !4669, file: !346, line: 555, type: !4273)
!4672 = !DILocalVariable(name: "address", arg: 2, scope: !4669, file: !346, line: 555, type: !61)
!4673 = !DILocalVariable(name: "offset", scope: !4669, file: !346, line: 558, type: !61)
!4674 = !DILocation(line: 0, scope: !4669)
!4675 = !DILocation(line: 561, column: 14, scope: !4669)
!4676 = !DILocation(line: 562, column: 14, scope: !4677)
!4677 = distinct !DILexicalBlock(scope: !4669, file: !346, line: 562, column: 9)
!4678 = !DILocation(line: 562, column: 9, scope: !4669)
!4679 = !DILocation(line: 566, column: 18, scope: !4680)
!4680 = distinct !DILexicalBlock(scope: !4669, file: !346, line: 566, column: 9)
!4681 = !DILocation(line: 566, column: 23, scope: !4680)
!4682 = !DILocation(line: 566, column: 9, scope: !4669)
!4683 = !DILocation(line: 567, column: 9, scope: !4684)
!4684 = distinct !DILexicalBlock(scope: !4680, file: !346, line: 566, column: 28)
!4685 = !DILocation(line: 572, column: 17, scope: !4686)
!4686 = distinct !DILexicalBlock(scope: !4669, file: !346, line: 572, column: 9)
!4687 = !DILocation(line: 572, column: 9, scope: !4669)
!4688 = !DILocation(line: 573, column: 9, scope: !4689)
!4689 = distinct !DILexicalBlock(scope: !4686, file: !346, line: 572, column: 50)
!4690 = !DILocation(line: 577, column: 5, scope: !4669)
!4691 = !DILocation(line: 577, column: 19, scope: !4669)
!4692 = !DILocation(line: 577, column: 32, scope: !4669)
!4693 = !DILocation(line: 578, column: 5, scope: !4669)
!4694 = !DILocation(line: 578, column: 19, scope: !4669)
!4695 = !DILocation(line: 578, column: 28, scope: !4669)
!4696 = !DILocation(line: 579, column: 5, scope: !4669)
!4697 = !DILocation(line: 579, column: 19, scope: !4669)
!4698 = !DILocation(line: 579, column: 30, scope: !4669)
!4699 = !DILocation(line: 581, column: 5, scope: !4669)
!4700 = !DILocation(line: 583, column: 1, scope: !4669)
!4701 = distinct !DISubprogram(name: "pdma_register_callback", scope: !346, file: !346, line: 603, type: !4702, scopeLine: 605, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4704)
!4702 = !DISubroutineType(types: !4703)
!4703 = !{!4272, !4273, !535, !88}
!4704 = !{!4705, !4706, !4707, !4708}
!4705 = !DILocalVariable(name: "channel", arg: 1, scope: !4701, file: !346, line: 603, type: !4273)
!4706 = !DILocalVariable(name: "callback", arg: 2, scope: !4701, file: !346, line: 603, type: !535)
!4707 = !DILocalVariable(name: "user_data", arg: 3, scope: !4701, file: !346, line: 603, type: !88)
!4708 = !DILocalVariable(name: "offset", scope: !4701, file: !346, line: 607, type: !61)
!4709 = !DILocation(line: 0, scope: !4701)
!4710 = !DILocation(line: 609, column: 14, scope: !4701)
!4711 = !DILocation(line: 610, column: 14, scope: !4712)
!4712 = distinct !DILexicalBlock(scope: !4701, file: !346, line: 610, column: 9)
!4713 = !DILocation(line: 610, column: 9, scope: !4701)
!4714 = !DILocation(line: 613, column: 33, scope: !4715)
!4715 = distinct !DILexicalBlock(scope: !4701, file: !346, line: 613, column: 9)
!4716 = !DILocation(line: 613, column: 38, scope: !4715)
!4717 = !DILocation(line: 613, column: 9, scope: !4701)
!4718 = !DILocation(line: 614, column: 38, scope: !4719)
!4719 = distinct !DILexicalBlock(scope: !4715, file: !346, line: 613, column: 47)
!4720 = !DILocation(line: 615, column: 33, scope: !4719)
!4721 = !DILocation(line: 615, column: 43, scope: !4719)
!4722 = !DILocation(line: 616, column: 5, scope: !4719)
!4723 = !DILocation(line: 619, column: 1, scope: !4701)
!4724 = distinct !DISubprogram(name: "vdma_init", scope: !346, file: !346, line: 676, type: !4725, scopeLine: 677, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4729)
!4725 = !DISubroutineType(types: !4726)
!4726 = !{!4727, !4728}
!4727 = !DIDerivedType(tag: DW_TAG_typedef, name: "vdma_status_t", file: !354, line: 211, baseType: !400)
!4728 = !DIDerivedType(tag: DW_TAG_typedef, name: "vdma_channel_t", file: !354, line: 203, baseType: !406)
!4729 = !{!4730, !4731, !4732, !4733, !4734}
!4730 = !DILocalVariable(name: "channel", arg: 1, scope: !4724, file: !346, line: 676, type: !4728)
!4731 = !DILocalVariable(name: "offset", scope: !4724, file: !346, line: 679, type: !61)
!4732 = !DILocalVariable(name: "result", scope: !4724, file: !346, line: 680, type: !61)
!4733 = !DILocalVariable(name: "dma_control", scope: !4724, file: !346, line: 682, type: !61)
!4734 = !DILocalVariable(name: "saved_mask", scope: !4735, file: !346, line: 690, type: !61)
!4735 = distinct !DILexicalBlock(scope: !4724, file: !346, line: 690, column: 5)
!4736 = !DILocation(line: 0, scope: !4724)
!4737 = !DILocation(line: 684, column: 14, scope: !4724)
!4738 = !DILocation(line: 685, column: 14, scope: !4739)
!4739 = distinct !DILexicalBlock(scope: !4724, file: !346, line: 685, column: 9)
!4740 = !DILocation(line: 685, column: 9, scope: !4724)
!4741 = !DILocation(line: 690, column: 5, scope: !4735)
!4742 = !DILocation(line: 0, scope: !4735)
!4743 = !DILocation(line: 690, column: 5, scope: !4744)
!4744 = distinct !DILexicalBlock(scope: !4735, file: !346, line: 690, column: 5)
!4745 = !DILocation(line: 690, column: 5, scope: !4746)
!4746 = distinct !DILexicalBlock(scope: !4744, file: !346, line: 690, column: 5)
!4747 = !DILocation(line: 690, column: 5, scope: !4748)
!4748 = distinct !DILexicalBlock(scope: !4744, file: !346, line: 690, column: 5)
!4749 = !DILocation(line: 693, column: 5, scope: !4724)
!4750 = !DILocation(line: 693, column: 19, scope: !4724)
!4751 = !DILocation(line: 693, column: 28, scope: !4724)
!4752 = !DILocation(line: 694, column: 5, scope: !4724)
!4753 = !DILocation(line: 694, column: 19, scope: !4724)
!4754 = !DILocation(line: 694, column: 30, scope: !4724)
!4755 = !DILocation(line: 695, column: 5, scope: !4724)
!4756 = !DILocation(line: 695, column: 19, scope: !4724)
!4757 = !DILocation(line: 695, column: 30, scope: !4724)
!4758 = !DILocation(line: 696, column: 5, scope: !4724)
!4759 = !DILocation(line: 696, column: 19, scope: !4724)
!4760 = !DILocation(line: 696, column: 31, scope: !4724)
!4761 = !DILocation(line: 697, column: 5, scope: !4724)
!4762 = !DILocation(line: 697, column: 19, scope: !4724)
!4763 = !DILocation(line: 697, column: 32, scope: !4724)
!4764 = !DILocation(line: 698, column: 5, scope: !4724)
!4765 = !DILocation(line: 698, column: 19, scope: !4724)
!4766 = !DILocation(line: 698, column: 31, scope: !4724)
!4767 = !DILocation(line: 699, column: 5, scope: !4724)
!4768 = !DILocation(line: 699, column: 19, scope: !4724)
!4769 = !DILocation(line: 699, column: 31, scope: !4724)
!4770 = !DILocation(line: 703, column: 16, scope: !4771)
!4771 = distinct !DILexicalBlock(scope: !4724, file: !346, line: 703, column: 9)
!4772 = !DILocation(line: 703, column: 9, scope: !4724)
!4773 = !DILocation(line: 705, column: 18, scope: !4774)
!4774 = distinct !DILexicalBlock(scope: !4771, file: !346, line: 703, column: 37)
!4775 = !DILocation(line: 707, column: 18, scope: !4776)
!4776 = distinct !DILexicalBlock(scope: !4774, file: !346, line: 707, column: 13)
!4777 = !DILocation(line: 707, column: 13, scope: !4774)
!4778 = !DILocation(line: 713, column: 18, scope: !4779)
!4779 = distinct !DILexicalBlock(scope: !4771, file: !346, line: 711, column: 12)
!4780 = !DILocation(line: 715, column: 18, scope: !4781)
!4781 = distinct !DILexicalBlock(scope: !4779, file: !346, line: 715, column: 13)
!4782 = !DILocation(line: 715, column: 13, scope: !4779)
!4783 = !DILocation(line: 720, column: 5, scope: !4724)
!4784 = !DILocation(line: 0, scope: !4785)
!4785 = distinct !DILexicalBlock(scope: !4724, file: !346, line: 720, column: 22)
!4786 = !DILocation(line: 776, column: 5, scope: !4724)
!4787 = !DILocation(line: 777, column: 5, scope: !4724)
!4788 = !DILocation(line: 778, column: 5, scope: !4724)
!4789 = !DILocation(line: 779, column: 5, scope: !4724)
!4790 = !DILocation(line: 781, column: 5, scope: !4724)
!4791 = !DILocation(line: 783, column: 1, scope: !4724)
!4792 = distinct !DISubprogram(name: "vdma_check_valid_channel", scope: !346, file: !346, line: 660, type: !4793, scopeLine: 661, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4795)
!4793 = !DISubroutineType(types: !4794)
!4794 = !{!61, !4728}
!4795 = !{!4796, !4797}
!4796 = !DILocalVariable(name: "channel", arg: 1, scope: !4792, file: !346, line: 660, type: !4728)
!4797 = !DILocalVariable(name: "offset", scope: !4792, file: !346, line: 663, type: !61)
!4798 = !DILocation(line: 0, scope: !4792)
!4799 = !DILocation(line: 666, column: 22, scope: !4792)
!4800 = !DILocation(line: 668, column: 16, scope: !4801)
!4801 = distinct !DILexicalBlock(scope: !4792, file: !346, line: 668, column: 9)
!4802 = !DILocation(line: 0, scope: !4801)
!4803 = !DILocation(line: 673, column: 1, scope: !4792)
!4804 = distinct !DISubprogram(name: "ao_domain_dma_interrupt_hander", scope: !346, file: !346, line: 1196, type: !526, scopeLine: 1198, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4805)
!4805 = !{!4806, !4807, !4808, !4809, !4810}
!4806 = !DILocalVariable(name: "irq_number", arg: 1, scope: !4804, file: !346, line: 1196, type: !528)
!4807 = !DILocalVariable(name: "global_status", scope: !4804, file: !346, line: 1201, type: !60)
!4808 = !DILocalVariable(name: "callback", scope: !4804, file: !346, line: 1204, type: !541)
!4809 = !DILocalVariable(name: "argument", scope: !4804, file: !346, line: 1206, type: !88)
!4810 = !DILocalVariable(name: "count", scope: !4804, file: !346, line: 1209, type: !61)
!4811 = !DILocation(line: 0, scope: !4804)
!4812 = !DILocation(line: 1201, column: 5, scope: !4804)
!4813 = !DILocation(line: 1201, column: 24, scope: !4804)
!4814 = !DILocation(line: 1220, column: 5, scope: !4815)
!4815 = distinct !DILexicalBlock(scope: !4804, file: !346, line: 1220, column: 5)
!4816 = !DILocation(line: 1221, column: 25, scope: !4817)
!4817 = distinct !DILexicalBlock(scope: !4818, file: !346, line: 1220, column: 77)
!4818 = distinct !DILexicalBlock(scope: !4815, file: !346, line: 1220, column: 5)
!4819 = !DILocation(line: 1221, column: 45, scope: !4817)
!4820 = !DILocation(line: 1221, column: 23, scope: !4817)
!4821 = !DILocation(line: 1223, column: 13, scope: !4822)
!4822 = distinct !DILexicalBlock(scope: !4817, file: !346, line: 1223, column: 13)
!4823 = !DILocation(line: 1223, column: 38, scope: !4822)
!4824 = !DILocation(line: 1223, column: 34, scope: !4822)
!4825 = !DILocation(line: 1223, column: 27, scope: !4822)
!4826 = !DILocation(line: 1223, column: 13, scope: !4817)
!4827 = !DILocation(line: 1227, column: 17, scope: !4828)
!4828 = distinct !DILexicalBlock(scope: !4829, file: !346, line: 1225, column: 13)
!4829 = distinct !DILexicalBlock(scope: !4822, file: !346, line: 1223, column: 78)
!4830 = !DILocation(line: 1227, column: 30, scope: !4828)
!4831 = !DILocation(line: 1227, column: 42, scope: !4828)
!4832 = !DILocation(line: 1229, column: 51, scope: !4828)
!4833 = !DILocation(line: 1231, column: 30, scope: !4834)
!4834 = distinct !DILexicalBlock(scope: !4828, file: !346, line: 1231, column: 21)
!4835 = !DILocation(line: 1231, column: 21, scope: !4828)
!4836 = !DILocation(line: 1230, column: 51, scope: !4828)
!4837 = !DILocation(line: 1232, column: 21, scope: !4838)
!4838 = distinct !DILexicalBlock(scope: !4834, file: !346, line: 1231, column: 39)
!4839 = !DILocation(line: 1237, column: 9, scope: !4829)
!4840 = !DILocation(line: 1234, column: 21, scope: !4841)
!4841 = distinct !DILexicalBlock(scope: !4834, file: !346, line: 1233, column: 24)
!4842 = !DILocation(line: 1220, column: 73, scope: !4818)
!4843 = !DILocation(line: 1220, column: 53, scope: !4818)
!4844 = distinct !{!4844, !4814, !4845}
!4845 = !DILocation(line: 1238, column: 5, scope: !4815)
!4846 = !DILocation(line: 1241, column: 1, scope: !4804)
!4847 = distinct !DISubprogram(name: "vdma_deinit", scope: !346, file: !346, line: 785, type: !4725, scopeLine: 786, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4848)
!4848 = !{!4849, !4850, !4851, !4852, !4853, !4854}
!4849 = !DILocalVariable(name: "channel", arg: 1, scope: !4847, file: !346, line: 785, type: !4728)
!4850 = !DILocalVariable(name: "offset", scope: !4847, file: !346, line: 789, type: !61)
!4851 = !DILocalVariable(name: "result", scope: !4847, file: !346, line: 790, type: !61)
!4852 = !DILocalVariable(name: "saved_mask", scope: !4847, file: !346, line: 791, type: !61)
!4853 = !DILocalVariable(name: "global_status", scope: !4847, file: !346, line: 794, type: !60)
!4854 = !DILocalVariable(name: "saved_mask", scope: !4855, file: !346, line: 820, type: !61)
!4855 = distinct !DILexicalBlock(scope: !4847, file: !346, line: 820, column: 5)
!4856 = !DILocation(line: 0, scope: !4847)
!4857 = !DILocation(line: 794, column: 5, scope: !4847)
!4858 = !DILocation(line: 794, column: 24, scope: !4847)
!4859 = !DILocation(line: 796, column: 14, scope: !4847)
!4860 = !DILocation(line: 797, column: 24, scope: !4861)
!4861 = distinct !DILexicalBlock(scope: !4847, file: !346, line: 797, column: 9)
!4862 = !DILocation(line: 797, column: 9, scope: !4847)
!4863 = !DILocation(line: 801, column: 18, scope: !4847)
!4864 = !DILocation(line: 803, column: 21, scope: !4847)
!4865 = !DILocation(line: 803, column: 42, scope: !4847)
!4866 = !DILocation(line: 803, column: 19, scope: !4847)
!4867 = !DILocation(line: 805, column: 9, scope: !4868)
!4868 = distinct !DILexicalBlock(scope: !4847, file: !346, line: 805, column: 9)
!4869 = !DILocation(line: 805, column: 34, scope: !4868)
!4870 = !DILocation(line: 805, column: 30, scope: !4868)
!4871 = !DILocation(line: 805, column: 23, scope: !4868)
!4872 = !DILocation(line: 805, column: 9, scope: !4847)
!4873 = !DILocation(line: 806, column: 9, scope: !4874)
!4874 = distinct !DILexicalBlock(scope: !4868, file: !346, line: 805, column: 75)
!4875 = !DILocation(line: 811, column: 9, scope: !4876)
!4876 = distinct !DILexicalBlock(scope: !4847, file: !346, line: 811, column: 9)
!4877 = !DILocation(line: 811, column: 30, scope: !4876)
!4878 = !DILocation(line: 811, column: 23, scope: !4876)
!4879 = !DILocation(line: 811, column: 9, scope: !4847)
!4880 = !DILocation(line: 812, column: 9, scope: !4881)
!4881 = distinct !DILexicalBlock(scope: !4876, file: !346, line: 811, column: 69)
!4882 = !DILocation(line: 817, column: 5, scope: !4847)
!4883 = !DILocation(line: 820, column: 5, scope: !4855)
!4884 = !DILocation(line: 0, scope: !4855)
!4885 = !DILocation(line: 820, column: 5, scope: !4886)
!4886 = distinct !DILexicalBlock(scope: !4855, file: !346, line: 820, column: 5)
!4887 = !DILocation(line: 820, column: 5, scope: !4888)
!4888 = distinct !DILexicalBlock(scope: !4886, file: !346, line: 820, column: 5)
!4889 = !DILocation(line: 820, column: 5, scope: !4890)
!4890 = distinct !DILexicalBlock(scope: !4886, file: !346, line: 820, column: 5)
!4891 = !DILocation(line: 824, column: 16, scope: !4892)
!4892 = distinct !DILexicalBlock(scope: !4847, file: !346, line: 824, column: 9)
!4893 = !DILocation(line: 824, column: 9, scope: !4847)
!4894 = !DILocation(line: 826, column: 18, scope: !4895)
!4895 = distinct !DILexicalBlock(scope: !4892, file: !346, line: 824, column: 53)
!4896 = !DILocation(line: 828, column: 28, scope: !4897)
!4897 = distinct !DILexicalBlock(scope: !4895, file: !346, line: 828, column: 13)
!4898 = !DILocation(line: 828, column: 13, scope: !4895)
!4899 = !DILocation(line: 834, column: 18, scope: !4900)
!4900 = distinct !DILexicalBlock(scope: !4892, file: !346, line: 832, column: 12)
!4901 = !DILocation(line: 836, column: 28, scope: !4902)
!4902 = distinct !DILexicalBlock(scope: !4900, file: !346, line: 836, column: 13)
!4903 = !DILocation(line: 836, column: 13, scope: !4900)
!4904 = !DILocation(line: 841, column: 5, scope: !4847)
!4905 = !DILocation(line: 842, column: 1, scope: !4847)
!4906 = distinct !DISubprogram(name: "vdma_configure", scope: !346, file: !346, line: 844, type: !4907, scopeLine: 845, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4915)
!4907 = !DISubroutineType(types: !4908)
!4908 = !{!4727, !4728, !4909}
!4909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4910, size: 32)
!4910 = !DIDerivedType(tag: DW_TAG_typedef, name: "vdma_config_t", file: !354, line: 283, baseType: !4911)
!4911 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !354, line: 280, size: 64, elements: !4912)
!4912 = !{!4913, !4914}
!4913 = !DIDerivedType(tag: DW_TAG_member, name: "base_address", scope: !4911, file: !354, line: 281, baseType: !61, size: 32)
!4914 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4911, file: !354, line: 282, baseType: !61, size: 32, offset: 32)
!4915 = !{!4916, !4917, !4918}
!4916 = !DILocalVariable(name: "channel", arg: 1, scope: !4906, file: !346, line: 844, type: !4728)
!4917 = !DILocalVariable(name: "vdma_config", arg: 2, scope: !4906, file: !346, line: 844, type: !4909)
!4918 = !DILocalVariable(name: "offset", scope: !4906, file: !346, line: 848, type: !61)
!4919 = !DILocation(line: 0, scope: !4906)
!4920 = !DILocation(line: 850, column: 14, scope: !4906)
!4921 = !DILocation(line: 851, column: 24, scope: !4922)
!4922 = distinct !DILexicalBlock(scope: !4906, file: !346, line: 851, column: 9)
!4923 = !DILocation(line: 851, column: 9, scope: !4906)
!4924 = !DILocation(line: 856, column: 23, scope: !4925)
!4925 = distinct !DILexicalBlock(scope: !4906, file: !346, line: 856, column: 9)
!4926 = !DILocation(line: 856, column: 36, scope: !4925)
!4927 = !DILocation(line: 856, column: 41, scope: !4925)
!4928 = !DILocation(line: 856, column: 9, scope: !4906)
!4929 = !DILocation(line: 857, column: 9, scope: !4930)
!4930 = distinct !DILexicalBlock(scope: !4925, file: !346, line: 856, column: 46)
!4931 = !DILocation(line: 862, column: 17, scope: !4932)
!4932 = distinct !DILexicalBlock(scope: !4906, file: !346, line: 862, column: 9)
!4933 = !DILocation(line: 862, column: 9, scope: !4906)
!4934 = !DILocation(line: 863, column: 9, scope: !4935)
!4935 = distinct !DILexicalBlock(scope: !4932, file: !346, line: 862, column: 68)
!4936 = !DILocation(line: 867, column: 46, scope: !4906)
!4937 = !DILocation(line: 867, column: 5, scope: !4906)
!4938 = !DILocation(line: 867, column: 19, scope: !4906)
!4939 = !DILocation(line: 867, column: 31, scope: !4906)
!4940 = !DILocation(line: 868, column: 47, scope: !4906)
!4941 = !DILocation(line: 868, column: 5, scope: !4906)
!4942 = !DILocation(line: 868, column: 19, scope: !4906)
!4943 = !DILocation(line: 868, column: 32, scope: !4906)
!4944 = !DILocation(line: 870, column: 5, scope: !4906)
!4945 = !DILocation(line: 871, column: 1, scope: !4906)
!4946 = distinct !DISubprogram(name: "vdma_enable_interrupt", scope: !346, file: !346, line: 873, type: !4725, scopeLine: 874, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4947)
!4947 = !{!4948, !4949}
!4948 = !DILocalVariable(name: "channel", arg: 1, scope: !4946, file: !346, line: 873, type: !4728)
!4949 = !DILocalVariable(name: "offset", scope: !4946, file: !346, line: 876, type: !61)
!4950 = !DILocation(line: 0, scope: !4946)
!4951 = !DILocation(line: 878, column: 14, scope: !4946)
!4952 = !DILocation(line: 879, column: 24, scope: !4953)
!4953 = distinct !DILexicalBlock(scope: !4946, file: !346, line: 879, column: 9)
!4954 = !DILocation(line: 879, column: 9, scope: !4946)
!4955 = !DILocation(line: 883, column: 5, scope: !4946)
!4956 = !DILocation(line: 883, column: 19, scope: !4946)
!4957 = !DILocation(line: 883, column: 28, scope: !4946)
!4958 = !DILocation(line: 884, column: 5, scope: !4946)
!4959 = !DILocation(line: 886, column: 1, scope: !4946)
!4960 = distinct !DISubprogram(name: "vdma_start", scope: !346, file: !346, line: 889, type: !4725, scopeLine: 890, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4961)
!4961 = !{!4962, !4963, !4964, !4965}
!4962 = !DILocalVariable(name: "channel", arg: 1, scope: !4960, file: !346, line: 889, type: !4728)
!4963 = !DILocalVariable(name: "offset", scope: !4960, file: !346, line: 892, type: !61)
!4964 = !DILocalVariable(name: "saved_mask", scope: !4960, file: !346, line: 893, type: !61)
!4965 = !DILocalVariable(name: "global_status", scope: !4960, file: !346, line: 895, type: !60)
!4966 = !DILocation(line: 0, scope: !4960)
!4967 = !DILocation(line: 895, column: 5, scope: !4960)
!4968 = !DILocation(line: 895, column: 24, scope: !4960)
!4969 = !DILocation(line: 897, column: 14, scope: !4960)
!4970 = !DILocation(line: 898, column: 24, scope: !4971)
!4971 = distinct !DILexicalBlock(scope: !4960, file: !346, line: 898, column: 9)
!4972 = !DILocation(line: 898, column: 9, scope: !4960)
!4973 = !DILocation(line: 902, column: 18, scope: !4960)
!4974 = !DILocation(line: 904, column: 21, scope: !4960)
!4975 = !DILocation(line: 904, column: 42, scope: !4960)
!4976 = !DILocation(line: 904, column: 19, scope: !4960)
!4977 = !DILocation(line: 906, column: 9, scope: !4978)
!4978 = distinct !DILexicalBlock(scope: !4960, file: !346, line: 906, column: 9)
!4979 = !DILocation(line: 906, column: 33, scope: !4978)
!4980 = !DILocation(line: 906, column: 30, scope: !4978)
!4981 = !DILocation(line: 906, column: 23, scope: !4978)
!4982 = !DILocation(line: 906, column: 9, scope: !4960)
!4983 = !DILocation(line: 909, column: 9, scope: !4984)
!4984 = distinct !DILexicalBlock(scope: !4978, file: !346, line: 906, column: 69)
!4985 = !DILocation(line: 910, column: 9, scope: !4984)
!4986 = !DILocation(line: 916, column: 9, scope: !4987)
!4987 = distinct !DILexicalBlock(scope: !4960, file: !346, line: 916, column: 9)
!4988 = !DILocation(line: 916, column: 30, scope: !4987)
!4989 = !DILocation(line: 916, column: 23, scope: !4987)
!4990 = !DILocation(line: 916, column: 9, scope: !4960)
!4991 = !DILocation(line: 925, column: 5, scope: !4960)
!4992 = !DILocation(line: 925, column: 19, scope: !4960)
!4993 = !DILocation(line: 925, column: 30, scope: !4960)
!4994 = !DILocation(line: 926, column: 5, scope: !4960)
!4995 = !DILocation(line: 928, column: 1, scope: !4960)
!4996 = distinct !DISubprogram(name: "vdma_disable_interrupt", scope: !346, file: !346, line: 931, type: !4725, scopeLine: 932, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4997)
!4997 = !{!4998, !4999}
!4998 = !DILocalVariable(name: "channel", arg: 1, scope: !4996, file: !346, line: 931, type: !4728)
!4999 = !DILocalVariable(name: "offset", scope: !4996, file: !346, line: 934, type: !61)
!5000 = !DILocation(line: 0, scope: !4996)
!5001 = !DILocation(line: 936, column: 14, scope: !4996)
!5002 = !DILocation(line: 937, column: 24, scope: !5003)
!5003 = distinct !DILexicalBlock(scope: !4996, file: !346, line: 937, column: 9)
!5004 = !DILocation(line: 937, column: 9, scope: !4996)
!5005 = !DILocation(line: 942, column: 5, scope: !4996)
!5006 = !DILocation(line: 942, column: 19, scope: !4996)
!5007 = !DILocation(line: 942, column: 28, scope: !4996)
!5008 = !DILocation(line: 943, column: 5, scope: !4996)
!5009 = !DILocation(line: 944, column: 1, scope: !4996)
!5010 = distinct !DISubprogram(name: "vdma_stop", scope: !346, file: !346, line: 947, type: !4725, scopeLine: 948, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !5011)
!5011 = !{!5012, !5013}
!5012 = !DILocalVariable(name: "channel", arg: 1, scope: !5010, file: !346, line: 947, type: !4728)
!5013 = !DILocalVariable(name: "offset", scope: !5010, file: !346, line: 950, type: !61)
!5014 = !DILocation(line: 0, scope: !5010)
!5015 = !DILocation(line: 952, column: 14, scope: !5010)
!5016 = !DILocation(line: 953, column: 24, scope: !5017)
!5017 = distinct !DILexicalBlock(scope: !5010, file: !346, line: 953, column: 9)
!5018 = !DILocation(line: 953, column: 9, scope: !5010)
!5019 = !DILocation(line: 957, column: 5, scope: !5010)
!5020 = !DILocation(line: 957, column: 19, scope: !5010)
!5021 = !DILocation(line: 957, column: 30, scope: !5010)
!5022 = !DILocation(line: 958, column: 5, scope: !5010)
!5023 = !DILocation(line: 959, column: 1, scope: !5010)
!5024 = distinct !DISubprogram(name: "vdma_set_threshold", scope: !346, file: !346, line: 961, type: !5025, scopeLine: 963, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !5027)
!5025 = !DISubroutineType(types: !5026)
!5026 = !{!4727, !4728, !61}
!5027 = !{!5028, !5029, !5030}
!5028 = !DILocalVariable(name: "channel", arg: 1, scope: !5024, file: !346, line: 961, type: !4728)
!5029 = !DILocalVariable(name: "threshold", arg: 2, scope: !5024, file: !346, line: 961, type: !61)
!5030 = !DILocalVariable(name: "offset", scope: !5024, file: !346, line: 965, type: !61)
!5031 = !DILocation(line: 0, scope: !5024)
!5032 = !DILocation(line: 967, column: 14, scope: !5024)
!5033 = !DILocation(line: 968, column: 24, scope: !5034)
!5034 = distinct !DILexicalBlock(scope: !5024, file: !346, line: 968, column: 9)
!5035 = !DILocation(line: 968, column: 9, scope: !5024)
!5036 = !DILocation(line: 972, column: 19, scope: !5037)
!5037 = distinct !DILexicalBlock(scope: !5024, file: !346, line: 972, column: 9)
!5038 = !DILocation(line: 972, column: 9, scope: !5024)
!5039 = !DILocation(line: 975, column: 5, scope: !5024)
!5040 = !DILocation(line: 975, column: 19, scope: !5024)
!5041 = !DILocation(line: 975, column: 30, scope: !5024)
!5042 = !DILocation(line: 977, column: 5, scope: !5024)
!5043 = !DILocation(line: 979, column: 1, scope: !5024)
!5044 = distinct !DISubprogram(name: "vdma_set_alert_length", scope: !346, file: !346, line: 982, type: !5025, scopeLine: 984, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !5045)
!5045 = !{!5046, !5047, !5048}
!5046 = !DILocalVariable(name: "channel", arg: 1, scope: !5044, file: !346, line: 982, type: !4728)
!5047 = !DILocalVariable(name: "alert_length", arg: 2, scope: !5044, file: !346, line: 982, type: !61)
!5048 = !DILocalVariable(name: "offset", scope: !5044, file: !346, line: 986, type: !61)
!5049 = !DILocation(line: 0, scope: !5044)
!5050 = !DILocation(line: 988, column: 14, scope: !5044)
!5051 = !DILocation(line: 989, column: 24, scope: !5052)
!5052 = distinct !DILexicalBlock(scope: !5044, file: !346, line: 989, column: 9)
!5053 = !DILocation(line: 989, column: 9, scope: !5044)
!5054 = !DILocation(line: 993, column: 22, scope: !5055)
!5055 = distinct !DILexicalBlock(scope: !5044, file: !346, line: 993, column: 9)
!5056 = !DILocation(line: 993, column: 9, scope: !5044)
!5057 = !DILocation(line: 996, column: 5, scope: !5044)
!5058 = !DILocation(line: 996, column: 19, scope: !5044)
!5059 = !DILocation(line: 996, column: 31, scope: !5044)
!5060 = !DILocation(line: 998, column: 5, scope: !5044)
!5061 = !DILocation(line: 1000, column: 1, scope: !5044)
!5062 = distinct !DISubprogram(name: "vdma_push_data", scope: !346, file: !346, line: 1002, type: !5063, scopeLine: 1004, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !5065)
!5063 = !DISubroutineType(types: !5064)
!5064 = !{!4727, !4728, !463}
!5065 = !{!5066, !5067, !5068}
!5066 = !DILocalVariable(name: "channel", arg: 1, scope: !5062, file: !346, line: 1002, type: !4728)
!5067 = !DILocalVariable(name: "data", arg: 2, scope: !5062, file: !346, line: 1002, type: !463)
!5068 = !DILocalVariable(name: "offset", scope: !5062, file: !346, line: 1007, type: !61)
!5069 = !DILocation(line: 0, scope: !5062)
!5070 = !DILocation(line: 1008, column: 14, scope: !5062)
!5071 = !DILocation(line: 1009, column: 24, scope: !5072)
!5072 = distinct !DILexicalBlock(scope: !5062, file: !346, line: 1009, column: 9)
!5073 = !DILocation(line: 1009, column: 9, scope: !5062)
!5074 = !DILocation(line: 1016, column: 36, scope: !5062)
!5075 = !DILocation(line: 1016, column: 5, scope: !5062)
!5076 = !DILocation(line: 1016, column: 24, scope: !5062)
!5077 = !DILocation(line: 1016, column: 34, scope: !5062)
!5078 = !DILocation(line: 1018, column: 5, scope: !5062)
!5079 = !DILocation(line: 1019, column: 1, scope: !5062)
!5080 = distinct !DISubprogram(name: "vdma_pop_data", scope: !346, file: !346, line: 1021, type: !5081, scopeLine: 1023, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !5083)
!5081 = !DISubroutineType(types: !5082)
!5082 = !{!4727, !4728, !969}
!5083 = !{!5084, !5085, !5086}
!5084 = !DILocalVariable(name: "channel", arg: 1, scope: !5080, file: !346, line: 1021, type: !4728)
!5085 = !DILocalVariable(name: "data", arg: 2, scope: !5080, file: !346, line: 1021, type: !969)
!5086 = !DILocalVariable(name: "offset", scope: !5080, file: !346, line: 1026, type: !61)
!5087 = !DILocation(line: 0, scope: !5080)
!5088 = !DILocation(line: 1028, column: 14, scope: !5080)
!5089 = !DILocation(line: 1029, column: 24, scope: !5090)
!5090 = distinct !DILexicalBlock(scope: !5080, file: !346, line: 1029, column: 9)
!5091 = !DILocation(line: 1029, column: 9, scope: !5080)
!5092 = !DILocation(line: 1036, column: 13, scope: !5080)
!5093 = !DILocation(line: 1036, column: 32, scope: !5080)
!5094 = !DILocation(line: 1036, column: 11, scope: !5080)
!5095 = !DILocation(line: 1038, column: 5, scope: !5080)
!5096 = !DILocation(line: 1039, column: 1, scope: !5080)
!5097 = distinct !DISubprogram(name: "vdma_get_available_receive_bytes", scope: !346, file: !346, line: 1041, type: !5098, scopeLine: 1043, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !5100)
!5098 = !DISubroutineType(types: !5099)
!5099 = !{!4727, !4728, !1204}
!5100 = !{!5101, !5102, !5103}
!5101 = !DILocalVariable(name: "channel", arg: 1, scope: !5097, file: !346, line: 1041, type: !4728)
!5102 = !DILocalVariable(name: "receive_bytes", arg: 2, scope: !5097, file: !346, line: 1041, type: !1204)
!5103 = !DILocalVariable(name: "offset", scope: !5097, file: !346, line: 1045, type: !61)
!5104 = !DILocation(line: 0, scope: !5097)
!5105 = !DILocation(line: 1047, column: 14, scope: !5097)
!5106 = !DILocation(line: 1048, column: 24, scope: !5107)
!5107 = distinct !DILexicalBlock(scope: !5097, file: !346, line: 1048, column: 9)
!5108 = !DILocation(line: 1048, column: 9, scope: !5097)
!5109 = !DILocation(line: 1052, column: 22, scope: !5097)
!5110 = !DILocation(line: 1052, column: 36, scope: !5097)
!5111 = !DILocation(line: 1052, column: 20, scope: !5097)
!5112 = !DILocation(line: 1054, column: 5, scope: !5097)
!5113 = !DILocation(line: 1056, column: 1, scope: !5097)
!5114 = distinct !DISubprogram(name: "vdma_get_available_send_space", scope: !346, file: !346, line: 1058, type: !5098, scopeLine: 1060, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !5115)
!5115 = !{!5116, !5117, !5118, !5119, !5120}
!5116 = !DILocalVariable(name: "channel", arg: 1, scope: !5114, file: !346, line: 1058, type: !4728)
!5117 = !DILocalVariable(name: "available_space", arg: 2, scope: !5114, file: !346, line: 1058, type: !1204)
!5118 = !DILocalVariable(name: "offset", scope: !5114, file: !346, line: 1063, type: !61)
!5119 = !DILocalVariable(name: "total_size", scope: !5114, file: !346, line: 1066, type: !61)
!5120 = !DILocalVariable(name: "valid_size", scope: !5114, file: !346, line: 1069, type: !61)
!5121 = !DILocation(line: 0, scope: !5114)
!5122 = !DILocation(line: 1071, column: 14, scope: !5114)
!5123 = !DILocation(line: 1072, column: 24, scope: !5124)
!5124 = distinct !DILexicalBlock(scope: !5114, file: !346, line: 1072, column: 9)
!5125 = !DILocation(line: 1072, column: 9, scope: !5114)
!5126 = !DILocation(line: 1077, column: 18, scope: !5114)
!5127 = !DILocation(line: 1077, column: 32, scope: !5114)
!5128 = !DILocation(line: 1078, column: 32, scope: !5114)
!5129 = !DILocation(line: 1080, column: 35, scope: !5114)
!5130 = !DILocation(line: 1080, column: 22, scope: !5114)
!5131 = !DILocation(line: 1082, column: 5, scope: !5114)
!5132 = !DILocation(line: 1084, column: 1, scope: !5114)
!5133 = distinct !DISubprogram(name: "vdma_register_callback", scope: !346, file: !346, line: 1087, type: !5134, scopeLine: 1089, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !5136)
!5134 = !DISubroutineType(types: !5135)
!5135 = !{!4727, !4728, !541, !88}
!5136 = !{!5137, !5138, !5139, !5140}
!5137 = !DILocalVariable(name: "channel", arg: 1, scope: !5133, file: !346, line: 1087, type: !4728)
!5138 = !DILocalVariable(name: "callback", arg: 2, scope: !5133, file: !346, line: 1087, type: !541)
!5139 = !DILocalVariable(name: "user_data", arg: 3, scope: !5133, file: !346, line: 1087, type: !88)
!5140 = !DILocalVariable(name: "offset", scope: !5133, file: !346, line: 1091, type: !61)
!5141 = !DILocation(line: 0, scope: !5133)
!5142 = !DILocation(line: 1093, column: 14, scope: !5133)
!5143 = !DILocation(line: 1094, column: 24, scope: !5144)
!5144 = distinct !DILexicalBlock(scope: !5133, file: !346, line: 1094, column: 9)
!5145 = !DILocation(line: 1094, column: 9, scope: !5133)
!5146 = !DILocation(line: 1098, column: 33, scope: !5147)
!5147 = distinct !DILexicalBlock(scope: !5133, file: !346, line: 1098, column: 9)
!5148 = !DILocation(line: 1098, column: 38, scope: !5147)
!5149 = !DILocation(line: 1098, column: 9, scope: !5133)
!5150 = !DILocation(line: 1099, column: 38, scope: !5151)
!5151 = distinct !DILexicalBlock(scope: !5147, file: !346, line: 1098, column: 47)
!5152 = !DILocation(line: 1100, column: 33, scope: !5151)
!5153 = !DILocation(line: 1100, column: 43, scope: !5151)
!5154 = !DILocation(line: 1101, column: 5, scope: !5151)
!5155 = !DILocation(line: 1105, column: 1, scope: !5133)
!5156 = distinct !DISubprogram(name: "is_pin_with_pullsel", scope: !592, file: !592, line: 50, type: !5157, scopeLine: 51, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !591, retainedNodes: !5160)
!5157 = !DISubroutineType(types: !5158)
!5158 = !{!61, !5159}
!5159 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_pin_t", file: !98, line: 390, baseType: !594)
!5160 = !{!5161, !5162, !5163}
!5161 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !5156, file: !592, line: 50, type: !5159)
!5162 = !DILocalVariable(name: "i", scope: !5156, file: !592, line: 52, type: !61)
!5163 = !DILocalVariable(name: "pin_number_with_pullsel", scope: !5156, file: !592, line: 53, type: !1112)
!5164 = !DILocation(line: 0, scope: !5156)
!5165 = !DILocation(line: 53, column: 14, scope: !5156)
!5166 = !DILocation(line: 55, column: 5, scope: !5167)
!5167 = distinct !DILexicalBlock(scope: !5156, file: !592, line: 55, column: 5)
!5168 = !DILocation(line: 55, column: 25, scope: !5169)
!5169 = distinct !DILexicalBlock(scope: !5167, file: !592, line: 55, column: 5)
!5170 = !DILocation(line: 55, column: 19, scope: !5169)
!5171 = distinct !{!5171, !5166, !5172}
!5172 = !DILocation(line: 59, column: 5, scope: !5167)
!5173 = !DILocation(line: 56, column: 13, scope: !5174)
!5174 = distinct !DILexicalBlock(scope: !5175, file: !592, line: 56, column: 13)
!5175 = distinct !DILexicalBlock(scope: !5169, file: !592, line: 55, column: 29)
!5176 = !DILocation(line: 56, column: 40, scope: !5174)
!5177 = !DILocation(line: 56, column: 13, scope: !5175)
!5178 = !DILocation(line: 61, column: 1, scope: !5156)
!5179 = distinct !DISubprogram(name: "hal_gpio_init", scope: !592, file: !592, line: 66, type: !5180, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !591, retainedNodes: !5183)
!5180 = !DISubroutineType(types: !5181)
!5181 = !{!5182, !5159}
!5182 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_status_t", file: !647, line: 229, baseType: !646)
!5183 = !{!5184}
!5184 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !5179, file: !592, line: 66, type: !5159)
!5185 = !DILocation(line: 0, scope: !5179)
!5186 = !DILocation(line: 68, column: 5, scope: !5179)
!5187 = distinct !DISubprogram(name: "hal_gpio_deinit", scope: !592, file: !592, line: 72, type: !5180, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !591, retainedNodes: !5188)
!5188 = !{!5189}
!5189 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !5187, file: !592, line: 72, type: !5159)
!5190 = !DILocation(line: 0, scope: !5187)
!5191 = !DILocation(line: 74, column: 5, scope: !5187)
!5192 = distinct !DISubprogram(name: "hal_gpio_set_direction", scope: !592, file: !592, line: 79, type: !5193, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !591, retainedNodes: !5195)
!5193 = !DISubroutineType(types: !5194)
!5194 = !{!5182, !5159, !688}
!5195 = !{!5196, !5197, !5198, !5199}
!5196 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !5192, file: !592, line: 79, type: !5159)
!5197 = !DILocalVariable(name: "gpio_direction", arg: 2, scope: !5192, file: !592, line: 79, type: !688)
!5198 = !DILocalVariable(name: "no", scope: !5192, file: !592, line: 81, type: !61)
!5199 = !DILocalVariable(name: "remainder", scope: !5192, file: !592, line: 82, type: !61)
!5200 = !DILocation(line: 0, scope: !5192)
!5201 = !DILocation(line: 84, column: 18, scope: !5202)
!5202 = distinct !DILexicalBlock(scope: !5192, file: !592, line: 84, column: 9)
!5203 = !DILocation(line: 84, column: 9, scope: !5192)
!5204 = !DILocation(line: 89, column: 19, scope: !5192)
!5205 = !DILocation(line: 92, column: 26, scope: !5192)
!5206 = !DILocation(line: 94, column: 24, scope: !5207)
!5207 = distinct !DILexicalBlock(scope: !5192, file: !592, line: 94, column: 9)
!5208 = !DILocation(line: 0, scope: !5207)
!5209 = !DILocation(line: 94, column: 9, scope: !5192)
!5210 = !DILocation(line: 101, column: 1, scope: !5192)
!5211 = distinct !DISubprogram(name: "hal_gpio_get_direction", scope: !592, file: !592, line: 105, type: !5212, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !591, retainedNodes: !5215)
!5212 = !DISubroutineType(types: !5213)
!5213 = !{!5182, !5159, !5214}
!5214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !688, size: 32)
!5215 = !{!5216, !5217, !5218, !5219, !5220}
!5216 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !5211, file: !592, line: 105, type: !5159)
!5217 = !DILocalVariable(name: "gpio_direction", arg: 2, scope: !5211, file: !592, line: 105, type: !5214)
!5218 = !DILocalVariable(name: "no", scope: !5211, file: !592, line: 107, type: !61)
!5219 = !DILocalVariable(name: "remainder", scope: !5211, file: !592, line: 108, type: !61)
!5220 = !DILocalVariable(name: "temp", scope: !5211, file: !592, line: 109, type: !61)
!5221 = !DILocation(line: 0, scope: !5211)
!5222 = !DILocation(line: 111, column: 18, scope: !5223)
!5223 = distinct !DILexicalBlock(scope: !5211, file: !592, line: 111, column: 9)
!5224 = !DILocation(line: 111, column: 9, scope: !5211)
!5225 = !DILocation(line: 115, column: 14, scope: !5226)
!5226 = distinct !DILexicalBlock(scope: !5211, file: !592, line: 115, column: 9)
!5227 = !DILocation(line: 115, column: 9, scope: !5211)
!5228 = !DILocation(line: 120, column: 19, scope: !5211)
!5229 = !DILocation(line: 123, column: 26, scope: !5211)
!5230 = !DILocation(line: 125, column: 12, scope: !5211)
!5231 = !DILocation(line: 125, column: 54, scope: !5211)
!5232 = !DILocation(line: 126, column: 45, scope: !5211)
!5233 = !DILocation(line: 126, column: 17, scope: !5211)
!5234 = !DILocation(line: 127, column: 51, scope: !5211)
!5235 = !DILocation(line: 127, column: 21, scope: !5211)
!5236 = !DILocation(line: 128, column: 5, scope: !5211)
!5237 = !DILocation(line: 130, column: 1, scope: !5211)
!5238 = distinct !DISubprogram(name: "hal_pinmux_set_function", scope: !592, file: !592, line: 134, type: !5239, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !591, retainedNodes: !5242)
!5239 = !DISubroutineType(types: !5240)
!5240 = !{!5241, !5159, !463}
!5241 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_pinmux_status_t", file: !647, line: 238, baseType: !657)
!5242 = !{!5243, !5244, !5245, !5246, !5247}
!5243 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !5238, file: !592, line: 134, type: !5159)
!5244 = !DILocalVariable(name: "function_index", arg: 2, scope: !5238, file: !592, line: 134, type: !463)
!5245 = !DILocalVariable(name: "no", scope: !5238, file: !592, line: 136, type: !61)
!5246 = !DILocalVariable(name: "remainder", scope: !5238, file: !592, line: 137, type: !61)
!5247 = !DILocalVariable(name: "irq_status", scope: !5238, file: !592, line: 138, type: !61)
!5248 = !DILocation(line: 0, scope: !5238)
!5249 = !DILocation(line: 140, column: 18, scope: !5250)
!5250 = distinct !DILexicalBlock(scope: !5238, file: !592, line: 140, column: 9)
!5251 = !DILocation(line: 140, column: 9, scope: !5238)
!5252 = !DILocation(line: 145, column: 24, scope: !5253)
!5253 = distinct !DILexicalBlock(scope: !5238, file: !592, line: 145, column: 9)
!5254 = !DILocation(line: 145, column: 9, scope: !5238)
!5255 = !DILocation(line: 145, column: 9, scope: !5253)
!5256 = !DILocation(line: 150, column: 19, scope: !5238)
!5257 = !DILocation(line: 156, column: 18, scope: !5238)
!5258 = !DILocation(line: 157, column: 105, scope: !5238)
!5259 = !DILocation(line: 157, column: 91, scope: !5238)
!5260 = !DILocation(line: 157, column: 5, scope: !5238)
!5261 = !DILocation(line: 157, column: 48, scope: !5238)
!5262 = !DILocation(line: 157, column: 62, scope: !5238)
!5263 = !DILocation(line: 158, column: 80, scope: !5238)
!5264 = !DILocation(line: 158, column: 5, scope: !5238)
!5265 = !DILocation(line: 158, column: 48, scope: !5238)
!5266 = !DILocation(line: 158, column: 62, scope: !5238)
!5267 = !DILocation(line: 159, column: 5, scope: !5238)
!5268 = !DILocation(line: 160, column: 5, scope: !5238)
!5269 = !DILocation(line: 162, column: 1, scope: !5238)
!5270 = distinct !DISubprogram(name: "hal_gpio_get_input", scope: !592, file: !592, line: 166, type: !5271, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !591, retainedNodes: !5274)
!5271 = !DISubroutineType(types: !5272)
!5272 = !{!5182, !5159, !5273}
!5273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !689, size: 32)
!5274 = !{!5275, !5276, !5277, !5278, !5279}
!5275 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !5270, file: !592, line: 166, type: !5159)
!5276 = !DILocalVariable(name: "gpio_data", arg: 2, scope: !5270, file: !592, line: 166, type: !5273)
!5277 = !DILocalVariable(name: "no", scope: !5270, file: !592, line: 168, type: !61)
!5278 = !DILocalVariable(name: "remainder", scope: !5270, file: !592, line: 169, type: !61)
!5279 = !DILocalVariable(name: "temp", scope: !5270, file: !592, line: 170, type: !61)
!5280 = !DILocation(line: 0, scope: !5270)
!5281 = !DILocation(line: 172, column: 18, scope: !5282)
!5282 = distinct !DILexicalBlock(scope: !5270, file: !592, line: 172, column: 9)
!5283 = !DILocation(line: 172, column: 9, scope: !5270)
!5284 = !DILocation(line: 176, column: 14, scope: !5285)
!5285 = distinct !DILexicalBlock(scope: !5270, file: !592, line: 176, column: 9)
!5286 = !DILocation(line: 176, column: 9, scope: !5270)
!5287 = !DILocation(line: 181, column: 19, scope: !5270)
!5288 = !DILocation(line: 184, column: 26, scope: !5270)
!5289 = !DILocation(line: 186, column: 12, scope: !5270)
!5290 = !DILocation(line: 186, column: 54, scope: !5270)
!5291 = !DILocation(line: 187, column: 45, scope: !5270)
!5292 = !DILocation(line: 187, column: 17, scope: !5270)
!5293 = !DILocation(line: 188, column: 41, scope: !5270)
!5294 = !DILocation(line: 188, column: 16, scope: !5270)
!5295 = !DILocation(line: 189, column: 5, scope: !5270)
!5296 = !DILocation(line: 191, column: 1, scope: !5270)
!5297 = distinct !DISubprogram(name: "hal_gpio_set_output", scope: !592, file: !592, line: 195, type: !5298, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !591, retainedNodes: !5300)
!5298 = !DISubroutineType(types: !5299)
!5299 = !{!5182, !5159, !689}
!5300 = !{!5301, !5302, !5303, !5304}
!5301 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !5297, file: !592, line: 195, type: !5159)
!5302 = !DILocalVariable(name: "gpio_data", arg: 2, scope: !5297, file: !592, line: 195, type: !689)
!5303 = !DILocalVariable(name: "no", scope: !5297, file: !592, line: 197, type: !61)
!5304 = !DILocalVariable(name: "remainder", scope: !5297, file: !592, line: 198, type: !61)
!5305 = !DILocation(line: 0, scope: !5297)
!5306 = !DILocation(line: 200, column: 18, scope: !5307)
!5307 = distinct !DILexicalBlock(scope: !5297, file: !592, line: 200, column: 9)
!5308 = !DILocation(line: 200, column: 9, scope: !5297)
!5309 = !DILocation(line: 205, column: 19, scope: !5297)
!5310 = !DILocation(line: 208, column: 26, scope: !5297)
!5311 = !DILocation(line: 210, column: 9, scope: !5312)
!5312 = distinct !DILexicalBlock(scope: !5297, file: !592, line: 210, column: 9)
!5313 = !DILocation(line: 0, scope: !5312)
!5314 = !DILocation(line: 210, column: 9, scope: !5297)
!5315 = !DILocation(line: 216, column: 1, scope: !5297)
!5316 = distinct !DISubprogram(name: "hal_gpio_get_output", scope: !592, file: !592, line: 220, type: !5271, scopeLine: 221, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !591, retainedNodes: !5317)
!5317 = !{!5318, !5319, !5320, !5321, !5322}
!5318 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !5316, file: !592, line: 220, type: !5159)
!5319 = !DILocalVariable(name: "gpio_data", arg: 2, scope: !5316, file: !592, line: 220, type: !5273)
!5320 = !DILocalVariable(name: "no", scope: !5316, file: !592, line: 222, type: !61)
!5321 = !DILocalVariable(name: "remainder", scope: !5316, file: !592, line: 223, type: !61)
!5322 = !DILocalVariable(name: "temp", scope: !5316, file: !592, line: 224, type: !61)
!5323 = !DILocation(line: 0, scope: !5316)
!5324 = !DILocation(line: 226, column: 18, scope: !5325)
!5325 = distinct !DILexicalBlock(scope: !5316, file: !592, line: 226, column: 9)
!5326 = !DILocation(line: 226, column: 9, scope: !5316)
!5327 = !DILocation(line: 230, column: 14, scope: !5328)
!5328 = distinct !DILexicalBlock(scope: !5316, file: !592, line: 230, column: 9)
!5329 = !DILocation(line: 230, column: 9, scope: !5316)
!5330 = !DILocation(line: 235, column: 19, scope: !5316)
!5331 = !DILocation(line: 238, column: 26, scope: !5316)
!5332 = !DILocation(line: 240, column: 12, scope: !5316)
!5333 = !DILocation(line: 240, column: 55, scope: !5316)
!5334 = !DILocation(line: 241, column: 45, scope: !5316)
!5335 = !DILocation(line: 241, column: 17, scope: !5316)
!5336 = !DILocation(line: 242, column: 41, scope: !5316)
!5337 = !DILocation(line: 242, column: 16, scope: !5316)
!5338 = !DILocation(line: 243, column: 5, scope: !5316)
!5339 = !DILocation(line: 245, column: 1, scope: !5316)
!5340 = distinct !DISubprogram(name: "hal_gpio_toggle_pin", scope: !592, file: !592, line: 249, type: !5180, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !591, retainedNodes: !5341)
!5341 = !{!5342, !5343, !5344, !5345}
!5342 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !5340, file: !592, line: 249, type: !5159)
!5343 = !DILocalVariable(name: "no", scope: !5340, file: !592, line: 251, type: !61)
!5344 = !DILocalVariable(name: "remainder", scope: !5340, file: !592, line: 252, type: !61)
!5345 = !DILocalVariable(name: "temp", scope: !5340, file: !592, line: 253, type: !61)
!5346 = !DILocation(line: 0, scope: !5340)
!5347 = !DILocation(line: 255, column: 18, scope: !5348)
!5348 = distinct !DILexicalBlock(scope: !5340, file: !592, line: 255, column: 9)
!5349 = !DILocation(line: 255, column: 9, scope: !5340)
!5350 = !DILocation(line: 260, column: 19, scope: !5340)
!5351 = !DILocation(line: 263, column: 26, scope: !5340)
!5352 = !DILocation(line: 265, column: 12, scope: !5340)
!5353 = !DILocation(line: 265, column: 55, scope: !5340)
!5354 = !DILocation(line: 266, column: 45, scope: !5340)
!5355 = !DILocation(line: 266, column: 17, scope: !5340)
!5356 = !DILocation(line: 267, column: 15, scope: !5357)
!5357 = distinct !DILexicalBlock(scope: !5340, file: !592, line: 267, column: 9)
!5358 = !DILocation(line: 267, column: 9, scope: !5340)
!5359 = !DILocation(line: 0, scope: !5357)
!5360 = !DILocation(line: 273, column: 1, scope: !5340)
!5361 = distinct !DISubprogram(name: "hal_gpio_enable_inversion", scope: !592, file: !592, line: 278, type: !5180, scopeLine: 279, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !591, retainedNodes: !5362)
!5362 = !{!5363, !5364, !5365}
!5363 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !5361, file: !592, line: 278, type: !5159)
!5364 = !DILocalVariable(name: "no", scope: !5361, file: !592, line: 280, type: !61)
!5365 = !DILocalVariable(name: "remainder", scope: !5361, file: !592, line: 281, type: !61)
!5366 = !DILocation(line: 0, scope: !5361)
!5367 = !DILocation(line: 283, column: 18, scope: !5368)
!5368 = distinct !DILexicalBlock(scope: !5361, file: !592, line: 283, column: 9)
!5369 = !DILocation(line: 283, column: 9, scope: !5361)
!5370 = !DILocation(line: 288, column: 19, scope: !5361)
!5371 = !DILocation(line: 291, column: 26, scope: !5361)
!5372 = !DILocation(line: 293, column: 90, scope: !5361)
!5373 = !DILocation(line: 293, column: 5, scope: !5361)
!5374 = !DILocation(line: 293, column: 48, scope: !5361)
!5375 = !DILocation(line: 293, column: 62, scope: !5361)
!5376 = !DILocation(line: 294, column: 5, scope: !5361)
!5377 = !DILocation(line: 295, column: 1, scope: !5361)
!5378 = distinct !DISubprogram(name: "hal_gpio_disable_inversion", scope: !592, file: !592, line: 299, type: !5180, scopeLine: 300, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !591, retainedNodes: !5379)
!5379 = !{!5380, !5381, !5382}
!5380 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !5378, file: !592, line: 299, type: !5159)
!5381 = !DILocalVariable(name: "no", scope: !5378, file: !592, line: 301, type: !61)
!5382 = !DILocalVariable(name: "remainder", scope: !5378, file: !592, line: 302, type: !61)
!5383 = !DILocation(line: 0, scope: !5378)
!5384 = !DILocation(line: 304, column: 18, scope: !5385)
!5385 = distinct !DILexicalBlock(scope: !5378, file: !592, line: 304, column: 9)
!5386 = !DILocation(line: 304, column: 9, scope: !5378)
!5387 = !DILocation(line: 309, column: 19, scope: !5378)
!5388 = !DILocation(line: 312, column: 26, scope: !5378)
!5389 = !DILocation(line: 314, column: 90, scope: !5378)
!5390 = !DILocation(line: 314, column: 5, scope: !5378)
!5391 = !DILocation(line: 314, column: 48, scope: !5378)
!5392 = !DILocation(line: 314, column: 62, scope: !5378)
!5393 = !DILocation(line: 315, column: 5, scope: !5378)
!5394 = !DILocation(line: 316, column: 1, scope: !5378)
!5395 = distinct !DISubprogram(name: "hal_gpio_pull_up", scope: !592, file: !592, line: 321, type: !5180, scopeLine: 322, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !591, retainedNodes: !5396)
!5396 = !{!5397, !5398, !5399}
!5397 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !5395, file: !592, line: 321, type: !5159)
!5398 = !DILocalVariable(name: "no", scope: !5395, file: !592, line: 323, type: !61)
!5399 = !DILocalVariable(name: "remainder", scope: !5395, file: !592, line: 324, type: !61)
!5400 = !DILocation(line: 0, scope: !5395)
!5401 = !DILocation(line: 326, column: 19, scope: !5402)
!5402 = distinct !DILexicalBlock(scope: !5395, file: !592, line: 326, column: 9)
!5403 = !DILocation(line: 326, column: 36, scope: !5402)
!5404 = !DILocation(line: 326, column: 41, scope: !5402)
!5405 = !DILocation(line: 326, column: 9, scope: !5395)
!5406 = !DILocation(line: 331, column: 19, scope: !5395)
!5407 = !DILocation(line: 334, column: 26, scope: !5395)
!5408 = !DILocation(line: 336, column: 94, scope: !5395)
!5409 = !DILocation(line: 336, column: 5, scope: !5395)
!5410 = !DILocation(line: 336, column: 50, scope: !5395)
!5411 = !DILocation(line: 336, column: 66, scope: !5395)
!5412 = !DILocation(line: 337, column: 5, scope: !5395)
!5413 = !DILocation(line: 337, column: 51, scope: !5395)
!5414 = !DILocation(line: 337, column: 68, scope: !5395)
!5415 = !DILocation(line: 338, column: 5, scope: !5395)
!5416 = !DILocation(line: 339, column: 1, scope: !5395)
!5417 = distinct !DISubprogram(name: "hal_gpio_pull_down", scope: !592, file: !592, line: 343, type: !5180, scopeLine: 344, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !591, retainedNodes: !5418)
!5418 = !{!5419, !5420, !5421}
!5419 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !5417, file: !592, line: 343, type: !5159)
!5420 = !DILocalVariable(name: "no", scope: !5417, file: !592, line: 345, type: !61)
!5421 = !DILocalVariable(name: "remainder", scope: !5417, file: !592, line: 346, type: !61)
!5422 = !DILocation(line: 0, scope: !5417)
!5423 = !DILocation(line: 348, column: 19, scope: !5424)
!5424 = distinct !DILexicalBlock(scope: !5417, file: !592, line: 348, column: 9)
!5425 = !DILocation(line: 348, column: 36, scope: !5424)
!5426 = !DILocation(line: 348, column: 41, scope: !5424)
!5427 = !DILocation(line: 348, column: 9, scope: !5417)
!5428 = !DILocation(line: 353, column: 19, scope: !5417)
!5429 = !DILocation(line: 356, column: 26, scope: !5417)
!5430 = !DILocation(line: 358, column: 94, scope: !5417)
!5431 = !DILocation(line: 358, column: 5, scope: !5417)
!5432 = !DILocation(line: 358, column: 50, scope: !5417)
!5433 = !DILocation(line: 358, column: 66, scope: !5417)
!5434 = !DILocation(line: 359, column: 5, scope: !5417)
!5435 = !DILocation(line: 359, column: 51, scope: !5417)
!5436 = !DILocation(line: 359, column: 68, scope: !5417)
!5437 = !DILocation(line: 360, column: 5, scope: !5417)
!5438 = !DILocation(line: 361, column: 1, scope: !5417)
!5439 = distinct !DISubprogram(name: "hal_gpio_disable_pull", scope: !592, file: !592, line: 365, type: !5180, scopeLine: 366, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !591, retainedNodes: !5440)
!5440 = !{!5441, !5442, !5443}
!5441 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !5439, file: !592, line: 365, type: !5159)
!5442 = !DILocalVariable(name: "no", scope: !5439, file: !592, line: 367, type: !61)
!5443 = !DILocalVariable(name: "remainder", scope: !5439, file: !592, line: 368, type: !61)
!5444 = !DILocation(line: 0, scope: !5439)
!5445 = !DILocation(line: 370, column: 19, scope: !5446)
!5446 = distinct !DILexicalBlock(scope: !5439, file: !592, line: 370, column: 9)
!5447 = !DILocation(line: 370, column: 36, scope: !5446)
!5448 = !DILocation(line: 370, column: 41, scope: !5446)
!5449 = !DILocation(line: 370, column: 9, scope: !5439)
!5450 = !DILocation(line: 375, column: 19, scope: !5439)
!5451 = !DILocation(line: 378, column: 26, scope: !5439)
!5452 = !DILocation(line: 380, column: 94, scope: !5439)
!5453 = !DILocation(line: 380, column: 5, scope: !5439)
!5454 = !DILocation(line: 380, column: 50, scope: !5439)
!5455 = !DILocation(line: 380, column: 66, scope: !5439)
!5456 = !DILocation(line: 381, column: 5, scope: !5439)
!5457 = !DILocation(line: 382, column: 1, scope: !5439)
!5458 = distinct !DISubprogram(name: "hal_gpio_set_clockout", scope: !592, file: !592, line: 387, type: !5459, scopeLine: 388, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !591, retainedNodes: !5463)
!5459 = !DISubroutineType(types: !5460)
!5460 = !{!5182, !5461, !5462}
!5461 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_clock_t", file: !98, line: 423, baseType: !667)
!5462 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_clock_mode_t", file: !98, line: 431, baseType: !676)
!5463 = !{!5464, !5465}
!5464 = !DILocalVariable(name: "gpio_clock_num", arg: 1, scope: !5458, file: !592, line: 387, type: !5461)
!5465 = !DILocalVariable(name: "clock_mode", arg: 2, scope: !5458, file: !592, line: 387, type: !5462)
!5466 = !DILocation(line: 0, scope: !5458)
!5467 = !DILocation(line: 390, column: 24, scope: !5468)
!5468 = distinct !DILexicalBlock(scope: !5458, file: !592, line: 390, column: 9)
!5469 = !DILocation(line: 390, column: 9, scope: !5458)
!5470 = !DILocation(line: 394, column: 5, scope: !5458)
!5471 = !DILocation(line: 394, column: 62, scope: !5458)
!5472 = !DILocation(line: 394, column: 74, scope: !5458)
!5473 = !DILocation(line: 395, column: 5, scope: !5458)
!5474 = !DILocation(line: 396, column: 1, scope: !5458)
!5475 = distinct !DISubprogram(name: "hal_gpio_set_pupd_register", scope: !592, file: !592, line: 403, type: !5476, scopeLine: 404, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !591, retainedNodes: !5478)
!5476 = !DISubroutineType(types: !5477)
!5477 = !{!5182, !5159, !463, !463, !463}
!5478 = !{!5479, !5480, !5481, !5482, !5483, !5484}
!5479 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !5475, file: !592, line: 403, type: !5159)
!5480 = !DILocalVariable(name: "gpio_pupd", arg: 2, scope: !5475, file: !592, line: 403, type: !463)
!5481 = !DILocalVariable(name: "gpio_r0", arg: 3, scope: !5475, file: !592, line: 403, type: !463)
!5482 = !DILocalVariable(name: "gpio_r1", arg: 4, scope: !5475, file: !592, line: 403, type: !463)
!5483 = !DILocalVariable(name: "no", scope: !5475, file: !592, line: 405, type: !61)
!5484 = !DILocalVariable(name: "remainder", scope: !5475, file: !592, line: 406, type: !61)
!5485 = !DILocation(line: 0, scope: !5475)
!5486 = !DILocation(line: 408, column: 19, scope: !5487)
!5487 = distinct !DILexicalBlock(scope: !5475, file: !592, line: 408, column: 9)
!5488 = !DILocation(line: 408, column: 36, scope: !5487)
!5489 = !DILocation(line: 408, column: 40, scope: !5487)
!5490 = !DILocation(line: 408, column: 9, scope: !5475)
!5491 = !DILocation(line: 413, column: 19, scope: !5475)
!5492 = !DILocation(line: 416, column: 26, scope: !5475)
!5493 = !DILocation(line: 418, column: 9, scope: !5494)
!5494 = distinct !DILexicalBlock(scope: !5475, file: !592, line: 418, column: 9)
!5495 = !DILocation(line: 0, scope: !5494)
!5496 = !DILocation(line: 418, column: 9, scope: !5475)
!5497 = !DILocation(line: 424, column: 9, scope: !5498)
!5498 = distinct !DILexicalBlock(scope: !5475, file: !592, line: 424, column: 9)
!5499 = !DILocation(line: 0, scope: !5498)
!5500 = !DILocation(line: 424, column: 9, scope: !5475)
!5501 = !DILocation(line: 430, column: 9, scope: !5502)
!5502 = distinct !DILexicalBlock(scope: !5475, file: !592, line: 430, column: 9)
!5503 = !DILocation(line: 0, scope: !5502)
!5504 = !DILocation(line: 430, column: 9, scope: !5475)
!5505 = !DILocation(line: 436, column: 1, scope: !5475)
!5506 = distinct !DISubprogram(name: "hal_gpio_set_high_impedance", scope: !592, file: !592, line: 441, type: !5180, scopeLine: 442, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !591, retainedNodes: !5507)
!5507 = !{!5508, !5509, !5510, !5511, !5512, !5513, !5514}
!5508 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !5506, file: !592, line: 441, type: !5159)
!5509 = !DILocalVariable(name: "no1", scope: !5506, file: !592, line: 443, type: !61)
!5510 = !DILocalVariable(name: "no2", scope: !5506, file: !592, line: 443, type: !61)
!5511 = !DILocalVariable(name: "no3", scope: !5506, file: !592, line: 443, type: !61)
!5512 = !DILocalVariable(name: "remainder1", scope: !5506, file: !592, line: 444, type: !61)
!5513 = !DILocalVariable(name: "remainder2", scope: !5506, file: !592, line: 444, type: !61)
!5514 = !DILocalVariable(name: "remainder3", scope: !5506, file: !592, line: 444, type: !61)
!5515 = !DILocation(line: 0, scope: !5506)
!5516 = !DILocation(line: 446, column: 18, scope: !5517)
!5517 = distinct !DILexicalBlock(scope: !5506, file: !592, line: 446, column: 9)
!5518 = !DILocation(line: 446, column: 9, scope: !5506)
!5519 = !DILocation(line: 451, column: 20, scope: !5506)
!5520 = !DILocation(line: 454, column: 27, scope: !5506)
!5521 = !DILocation(line: 457, column: 20, scope: !5506)
!5522 = !DILocation(line: 463, column: 20, scope: !5506)
!5523 = !DILocation(line: 469, column: 107, scope: !5506)
!5524 = !DILocation(line: 469, column: 92, scope: !5506)
!5525 = !DILocation(line: 469, column: 5, scope: !5506)
!5526 = !DILocation(line: 469, column: 49, scope: !5506)
!5527 = !DILocation(line: 469, column: 63, scope: !5506)
!5528 = !DILocation(line: 472, column: 89, scope: !5506)
!5529 = !DILocation(line: 472, column: 5, scope: !5506)
!5530 = !DILocation(line: 472, column: 48, scope: !5506)
!5531 = !DILocation(line: 472, column: 61, scope: !5506)
!5532 = !DILocation(line: 475, column: 5, scope: !5506)
!5533 = !DILocation(line: 475, column: 48, scope: !5506)
!5534 = !DILocation(line: 475, column: 61, scope: !5506)
!5535 = !DILocation(line: 478, column: 9, scope: !5536)
!5536 = distinct !DILexicalBlock(scope: !5506, file: !592, line: 478, column: 9)
!5537 = !DILocation(line: 0, scope: !5536)
!5538 = !DILocation(line: 478, column: 9, scope: !5506)
!5539 = !DILocation(line: 479, column: 55, scope: !5540)
!5540 = distinct !DILexicalBlock(scope: !5536, file: !592, line: 478, column: 40)
!5541 = !DILocation(line: 480, column: 5, scope: !5540)
!5542 = !DILocation(line: 483, column: 53, scope: !5543)
!5543 = distinct !DILexicalBlock(scope: !5536, file: !592, line: 482, column: 10)
!5544 = !DILocation(line: 483, column: 67, scope: !5543)
!5545 = !DILocation(line: 484, column: 9, scope: !5543)
!5546 = !DILocation(line: 484, column: 55, scope: !5543)
!5547 = !DILocation(line: 484, column: 71, scope: !5543)
!5548 = !DILocation(line: 485, column: 9, scope: !5543)
!5549 = !DILocation(line: 485, column: 55, scope: !5543)
!5550 = !DILocation(line: 490, column: 5, scope: !5506)
!5551 = !DILocation(line: 490, column: 48, scope: !5506)
!5552 = !DILocation(line: 490, column: 61, scope: !5506)
!5553 = !DILocation(line: 493, column: 5, scope: !5506)
!5554 = !DILocation(line: 493, column: 47, scope: !5506)
!5555 = !DILocation(line: 493, column: 59, scope: !5506)
!5556 = !DILocation(line: 496, column: 108, scope: !5506)
!5557 = !DILocation(line: 496, column: 93, scope: !5506)
!5558 = !DILocation(line: 496, column: 5, scope: !5506)
!5559 = !DILocation(line: 496, column: 50, scope: !5506)
!5560 = !DILocation(line: 496, column: 65, scope: !5506)
!5561 = !DILocation(line: 498, column: 5, scope: !5506)
!5562 = !DILocation(line: 499, column: 1, scope: !5506)
!5563 = distinct !DISubprogram(name: "hal_gpio_clear_high_impedance", scope: !592, file: !592, line: 502, type: !5180, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !591, retainedNodes: !5564)
!5564 = !{!5565, !5566, !5567, !5568, !5569}
!5565 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !5563, file: !592, line: 502, type: !5159)
!5566 = !DILocalVariable(name: "no1", scope: !5563, file: !592, line: 504, type: !61)
!5567 = !DILocalVariable(name: "no2", scope: !5563, file: !592, line: 504, type: !61)
!5568 = !DILocalVariable(name: "remainder1", scope: !5563, file: !592, line: 505, type: !61)
!5569 = !DILocalVariable(name: "remainder2", scope: !5563, file: !592, line: 505, type: !61)
!5570 = !DILocation(line: 0, scope: !5563)
!5571 = !DILocation(line: 507, column: 18, scope: !5572)
!5572 = distinct !DILexicalBlock(scope: !5563, file: !592, line: 507, column: 9)
!5573 = !DILocation(line: 507, column: 9, scope: !5563)
!5574 = !DILocation(line: 512, column: 20, scope: !5563)
!5575 = !DILocation(line: 515, column: 27, scope: !5563)
!5576 = !DILocation(line: 518, column: 20, scope: !5563)
!5577 = !DILocation(line: 524, column: 107, scope: !5563)
!5578 = !DILocation(line: 524, column: 92, scope: !5563)
!5579 = !DILocation(line: 524, column: 5, scope: !5563)
!5580 = !DILocation(line: 524, column: 49, scope: !5563)
!5581 = !DILocation(line: 524, column: 63, scope: !5563)
!5582 = !DILocation(line: 527, column: 89, scope: !5563)
!5583 = !DILocation(line: 527, column: 5, scope: !5563)
!5584 = !DILocation(line: 527, column: 48, scope: !5563)
!5585 = !DILocation(line: 527, column: 61, scope: !5563)
!5586 = !DILocation(line: 530, column: 9, scope: !5587)
!5587 = distinct !DILexicalBlock(scope: !5563, file: !592, line: 530, column: 9)
!5588 = !DILocation(line: 0, scope: !5587)
!5589 = !DILocation(line: 530, column: 9, scope: !5563)
!5590 = !DILocation(line: 531, column: 55, scope: !5591)
!5591 = distinct !DILexicalBlock(scope: !5587, file: !592, line: 530, column: 40)
!5592 = !DILocation(line: 531, column: 71, scope: !5591)
!5593 = !DILocation(line: 532, column: 9, scope: !5591)
!5594 = !DILocation(line: 532, column: 56, scope: !5591)
!5595 = !DILocation(line: 533, column: 5, scope: !5591)
!5596 = !DILocation(line: 536, column: 53, scope: !5597)
!5597 = distinct !DILexicalBlock(scope: !5587, file: !592, line: 535, column: 10)
!5598 = !DILocation(line: 536, column: 67, scope: !5597)
!5599 = !DILocation(line: 537, column: 9, scope: !5597)
!5600 = !DILocation(line: 537, column: 55, scope: !5597)
!5601 = !DILocation(line: 537, column: 71, scope: !5597)
!5602 = !DILocation(line: 538, column: 9, scope: !5597)
!5603 = !DILocation(line: 538, column: 55, scope: !5597)
!5604 = !DILocation(line: 543, column: 5, scope: !5563)
!5605 = !DILocation(line: 543, column: 48, scope: !5563)
!5606 = !DILocation(line: 543, column: 61, scope: !5563)
!5607 = !DILocation(line: 546, column: 5, scope: !5563)
!5608 = !DILocation(line: 546, column: 47, scope: !5563)
!5609 = !DILocation(line: 546, column: 59, scope: !5563)
!5610 = !DILocation(line: 549, column: 5, scope: !5563)
!5611 = !DILocation(line: 550, column: 1, scope: !5563)
!5612 = distinct !DISubprogram(name: "hal_gpio_set_driving_current", scope: !592, file: !592, line: 554, type: !5613, scopeLine: 555, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !591, retainedNodes: !5615)
!5613 = !DISubroutineType(types: !5614)
!5614 = !{!5182, !5159, !690}
!5615 = !{!5616, !5617, !5618, !5619}
!5616 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !5612, file: !592, line: 554, type: !5159)
!5617 = !DILocalVariable(name: "driving", arg: 2, scope: !5612, file: !592, line: 554, type: !690)
!5618 = !DILocalVariable(name: "no", scope: !5612, file: !592, line: 556, type: !61)
!5619 = !DILocalVariable(name: "remainder", scope: !5612, file: !592, line: 557, type: !61)
!5620 = !DILocation(line: 0, scope: !5612)
!5621 = !DILocation(line: 559, column: 19, scope: !5622)
!5622 = distinct !DILexicalBlock(scope: !5612, file: !592, line: 559, column: 9)
!5623 = !DILocation(line: 559, column: 9, scope: !5612)
!5624 = !DILocation(line: 564, column: 19, scope: !5612)
!5625 = !DILocation(line: 569, column: 102, scope: !5612)
!5626 = !DILocation(line: 569, column: 88, scope: !5612)
!5627 = !DILocation(line: 569, column: 5, scope: !5612)
!5628 = !DILocation(line: 569, column: 47, scope: !5612)
!5629 = !DILocation(line: 569, column: 60, scope: !5612)
!5630 = !DILocation(line: 570, column: 71, scope: !5612)
!5631 = !DILocation(line: 570, column: 5, scope: !5612)
!5632 = !DILocation(line: 570, column: 47, scope: !5612)
!5633 = !DILocation(line: 570, column: 60, scope: !5612)
!5634 = !DILocation(line: 571, column: 5, scope: !5612)
!5635 = !DILocation(line: 572, column: 1, scope: !5612)
!5636 = distinct !DISubprogram(name: "hal_gpio_get_driving_current", scope: !592, file: !592, line: 575, type: !5637, scopeLine: 576, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !591, retainedNodes: !5640)
!5637 = !DISubroutineType(types: !5638)
!5638 = !{!5182, !5159, !5639}
!5639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !690, size: 32)
!5640 = !{!5641, !5642, !5643, !5644, !5645}
!5641 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !5636, file: !592, line: 575, type: !5159)
!5642 = !DILocalVariable(name: "driving", arg: 2, scope: !5636, file: !592, line: 575, type: !5639)
!5643 = !DILocalVariable(name: "no", scope: !5636, file: !592, line: 577, type: !61)
!5644 = !DILocalVariable(name: "remainder", scope: !5636, file: !592, line: 578, type: !61)
!5645 = !DILocalVariable(name: "temp", scope: !5636, file: !592, line: 579, type: !61)
!5646 = !DILocation(line: 0, scope: !5636)
!5647 = !DILocation(line: 581, column: 19, scope: !5648)
!5648 = distinct !DILexicalBlock(scope: !5636, file: !592, line: 581, column: 9)
!5649 = !DILocation(line: 581, column: 9, scope: !5636)
!5650 = !DILocation(line: 585, column: 14, scope: !5651)
!5651 = distinct !DILexicalBlock(scope: !5636, file: !592, line: 585, column: 9)
!5652 = !DILocation(line: 585, column: 9, scope: !5636)
!5653 = !DILocation(line: 590, column: 19, scope: !5636)
!5654 = !DILocation(line: 595, column: 12, scope: !5636)
!5655 = !DILocation(line: 595, column: 54, scope: !5636)
!5656 = !DILocation(line: 596, column: 59, scope: !5636)
!5657 = !DILocation(line: 596, column: 45, scope: !5636)
!5658 = !DILocation(line: 596, column: 17, scope: !5636)
!5659 = !DILocation(line: 597, column: 18, scope: !5636)
!5660 = !DILocation(line: 600, column: 56, scope: !5636)
!5661 = !DILocation(line: 600, column: 14, scope: !5636)
!5662 = !DILocation(line: 602, column: 5, scope: !5636)
!5663 = !DILocation(line: 603, column: 1, scope: !5636)
!5664 = distinct !DISubprogram(name: "uart_receive_handler", scope: !868, file: !868, line: 146, type: !5665, scopeLine: 147, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !5667)
!5665 = !DISubroutineType(types: !5666)
!5666 = !{null, !942, !91}
!5667 = !{!5668, !5669, !5670, !5671, !5672, !5673, !5674, !5730}
!5668 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5664, file: !868, line: 146, type: !942)
!5669 = !DILocalVariable(name: "is_timeout", arg: 2, scope: !5664, file: !868, line: 146, type: !91)
!5670 = !DILocalVariable(name: "channel", scope: !5664, file: !868, line: 148, type: !4728)
!5671 = !DILocalVariable(name: "avail_bytes", scope: !5664, file: !868, line: 149, type: !61)
!5672 = !DILocalVariable(name: "callback", scope: !5664, file: !868, line: 150, type: !951)
!5673 = !DILocalVariable(name: "arg", scope: !5664, file: !868, line: 151, type: !88)
!5674 = !DILocalVariable(name: "uartx", scope: !5664, file: !868, line: 152, type: !5675)
!5675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5676, size: 32)
!5676 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_REGISTER_T", file: !56, line: 588, baseType: !5677)
!5677 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 542, size: 800, elements: !5678)
!5678 = !{!5679, !5685, !5690, !5696, !5697, !5702, !5707, !5708, !5713, !5714, !5715, !5716, !5717, !5718, !5719, !5720, !5721, !5722, !5723, !5724, !5725, !5726, !5727, !5728, !5729}
!5679 = !DIDerivedType(tag: DW_TAG_member, name: "RBR_THR_DLL", scope: !5677, file: !56, line: 547, baseType: !5680, size: 32)
!5680 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5677, file: !56, line: 543, size: 32, elements: !5681)
!5681 = !{!5682, !5683, !5684}
!5682 = !DIDerivedType(tag: DW_TAG_member, name: "RBR", scope: !5680, file: !56, line: 544, baseType: !272, size: 32)
!5683 = !DIDerivedType(tag: DW_TAG_member, name: "THR", scope: !5680, file: !56, line: 545, baseType: !60, size: 32)
!5684 = !DIDerivedType(tag: DW_TAG_member, name: "DLL", scope: !5680, file: !56, line: 546, baseType: !60, size: 32)
!5685 = !DIDerivedType(tag: DW_TAG_member, name: "IER_DLM", scope: !5677, file: !56, line: 551, baseType: !5686, size: 32, offset: 32)
!5686 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5677, file: !56, line: 548, size: 32, elements: !5687)
!5687 = !{!5688, !5689}
!5688 = !DIDerivedType(tag: DW_TAG_member, name: "IER", scope: !5686, file: !56, line: 549, baseType: !60, size: 32)
!5689 = !DIDerivedType(tag: DW_TAG_member, name: "DLM", scope: !5686, file: !56, line: 550, baseType: !60, size: 32)
!5690 = !DIDerivedType(tag: DW_TAG_member, name: "IIR_FCR_EFR", scope: !5677, file: !56, line: 556, baseType: !5691, size: 32, offset: 64)
!5691 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5677, file: !56, line: 552, size: 32, elements: !5692)
!5692 = !{!5693, !5694, !5695}
!5693 = !DIDerivedType(tag: DW_TAG_member, name: "IIR", scope: !5691, file: !56, line: 553, baseType: !272, size: 32)
!5694 = !DIDerivedType(tag: DW_TAG_member, name: "FCR", scope: !5691, file: !56, line: 554, baseType: !60, size: 32)
!5695 = !DIDerivedType(tag: DW_TAG_member, name: "EFR", scope: !5691, file: !56, line: 555, baseType: !60, size: 32)
!5696 = !DIDerivedType(tag: DW_TAG_member, name: "LCR", scope: !5677, file: !56, line: 557, baseType: !60, size: 32, offset: 96)
!5697 = !DIDerivedType(tag: DW_TAG_member, name: "MCR_XON1", scope: !5677, file: !56, line: 561, baseType: !5698, size: 32, offset: 128)
!5698 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5677, file: !56, line: 558, size: 32, elements: !5699)
!5699 = !{!5700, !5701}
!5700 = !DIDerivedType(tag: DW_TAG_member, name: "MCR", scope: !5698, file: !56, line: 559, baseType: !60, size: 32)
!5701 = !DIDerivedType(tag: DW_TAG_member, name: "XON1", scope: !5698, file: !56, line: 560, baseType: !60, size: 32)
!5702 = !DIDerivedType(tag: DW_TAG_member, name: "LSR_XON2", scope: !5677, file: !56, line: 565, baseType: !5703, size: 32, offset: 160)
!5703 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5677, file: !56, line: 562, size: 32, elements: !5704)
!5704 = !{!5705, !5706}
!5705 = !DIDerivedType(tag: DW_TAG_member, name: "LSR", scope: !5703, file: !56, line: 563, baseType: !272, size: 32)
!5706 = !DIDerivedType(tag: DW_TAG_member, name: "XON2", scope: !5703, file: !56, line: 564, baseType: !60, size: 32)
!5707 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF1", scope: !5677, file: !56, line: 566, baseType: !60, size: 32, offset: 192)
!5708 = !DIDerivedType(tag: DW_TAG_member, name: "SCR_XOFF2", scope: !5677, file: !56, line: 570, baseType: !5709, size: 32, offset: 224)
!5709 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5677, file: !56, line: 567, size: 32, elements: !5710)
!5710 = !{!5711, !5712}
!5711 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !5709, file: !56, line: 568, baseType: !60, size: 32)
!5712 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF2", scope: !5709, file: !56, line: 569, baseType: !60, size: 32)
!5713 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_EN", scope: !5677, file: !56, line: 571, baseType: !60, size: 32, offset: 256)
!5714 = !DIDerivedType(tag: DW_TAG_member, name: "HIGHSPEED", scope: !5677, file: !56, line: 572, baseType: !60, size: 32, offset: 288)
!5715 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_COUNT", scope: !5677, file: !56, line: 573, baseType: !60, size: 32, offset: 320)
!5716 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_POINT", scope: !5677, file: !56, line: 574, baseType: !60, size: 32, offset: 352)
!5717 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_REG", scope: !5677, file: !56, line: 575, baseType: !272, size: 32, offset: 384)
!5718 = !DIDerivedType(tag: DW_TAG_member, name: "RATEFIX_AD", scope: !5677, file: !56, line: 576, baseType: !60, size: 32, offset: 416)
!5719 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUDSAMPLE", scope: !5677, file: !56, line: 577, baseType: !60, size: 32, offset: 448)
!5720 = !DIDerivedType(tag: DW_TAG_member, name: "GUARD", scope: !5677, file: !56, line: 578, baseType: !60, size: 32, offset: 480)
!5721 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_DAT", scope: !5677, file: !56, line: 579, baseType: !60, size: 32, offset: 512)
!5722 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_EN", scope: !5677, file: !56, line: 580, baseType: !60, size: 32, offset: 544)
!5723 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEP_EN", scope: !5677, file: !56, line: 581, baseType: !60, size: 32, offset: 576)
!5724 = !DIDerivedType(tag: DW_TAG_member, name: "DMA_EN", scope: !5677, file: !56, line: 582, baseType: !60, size: 32, offset: 608)
!5725 = !DIDerivedType(tag: DW_TAG_member, name: "RXTRI_AD", scope: !5677, file: !56, line: 583, baseType: !60, size: 32, offset: 640)
!5726 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_L", scope: !5677, file: !56, line: 584, baseType: !60, size: 32, offset: 672)
!5727 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_M", scope: !5677, file: !56, line: 585, baseType: !60, size: 32, offset: 704)
!5728 = !DIDerivedType(tag: DW_TAG_member, name: "FCR_RD", scope: !5677, file: !56, line: 586, baseType: !272, size: 32, offset: 736)
!5729 = !DIDerivedType(tag: DW_TAG_member, name: "TX_ACTIVE_EN", scope: !5677, file: !56, line: 587, baseType: !60, size: 32, offset: 768)
!5730 = !DILocalVariable(name: "status", scope: !5664, file: !868, line: 153, type: !4727)
!5731 = !DILocation(line: 0, scope: !5664)
!5732 = !DILocation(line: 149, column: 5, scope: !5664)
!5733 = !DILocation(line: 155, column: 9, scope: !5734)
!5734 = distinct !DILexicalBlock(scope: !5664, file: !868, line: 155, column: 9)
!5735 = !DILocation(line: 155, column: 36, scope: !5734)
!5736 = !DILocation(line: 155, column: 9, scope: !5664)
!5737 = !DILocation(line: 156, column: 9, scope: !5738)
!5738 = distinct !DILexicalBlock(scope: !5734, file: !868, line: 155, column: 70)
!5739 = !DILocation(line: 160, column: 13, scope: !5664)
!5740 = !DILocation(line: 161, column: 15, scope: !5664)
!5741 = !DILocation(line: 163, column: 9, scope: !5664)
!5742 = !DILocation(line: 164, column: 9, scope: !5743)
!5743 = distinct !DILexicalBlock(scope: !5744, file: !868, line: 163, column: 29)
!5744 = distinct !DILexicalBlock(scope: !5664, file: !868, line: 163, column: 9)
!5745 = !DILocation(line: 165, column: 5, scope: !5743)
!5746 = !DILocation(line: 167, column: 14, scope: !5664)
!5747 = !DILocation(line: 168, column: 16, scope: !5748)
!5748 = distinct !DILexicalBlock(scope: !5664, file: !868, line: 168, column: 9)
!5749 = !DILocation(line: 168, column: 9, scope: !5664)
!5750 = !DILocation(line: 169, column: 9, scope: !5751)
!5751 = distinct !DILexicalBlock(scope: !5748, file: !868, line: 168, column: 28)
!5752 = !DILocation(line: 172, column: 9, scope: !5753)
!5753 = distinct !DILexicalBlock(scope: !5664, file: !868, line: 172, column: 9)
!5754 = !DILocation(line: 172, column: 21, scope: !5753)
!5755 = !DILocation(line: 172, column: 9, scope: !5664)
!5756 = !DILocation(line: 176, column: 43, scope: !5664)
!5757 = !DILocation(line: 178, column: 18, scope: !5758)
!5758 = distinct !DILexicalBlock(scope: !5664, file: !868, line: 178, column: 9)
!5759 = !DILocation(line: 178, column: 9, scope: !5664)
!5760 = !DILocation(line: 179, column: 9, scope: !5761)
!5761 = distinct !DILexicalBlock(scope: !5758, file: !868, line: 178, column: 27)
!5762 = !DILocation(line: 177, column: 38, scope: !5664)
!5763 = !DILocation(line: 183, column: 5, scope: !5664)
!5764 = !DILocation(line: 184, column: 5, scope: !5664)
!5765 = !DILocation(line: 185, column: 5, scope: !5664)
!5766 = !DILocation(line: 187, column: 14, scope: !5664)
!5767 = !DILocation(line: 188, column: 16, scope: !5768)
!5768 = distinct !DILexicalBlock(scope: !5664, file: !868, line: 188, column: 9)
!5769 = !DILocation(line: 188, column: 9, scope: !5664)
!5770 = !DILocation(line: 189, column: 9, scope: !5771)
!5771 = distinct !DILexicalBlock(scope: !5768, file: !868, line: 188, column: 28)
!5772 = !DILocation(line: 192, column: 9, scope: !5773)
!5773 = distinct !DILexicalBlock(scope: !5664, file: !868, line: 192, column: 9)
!5774 = !DILocation(line: 192, column: 53, scope: !5773)
!5775 = !DILocation(line: 192, column: 21, scope: !5773)
!5776 = !DILocation(line: 192, column: 9, scope: !5664)
!5777 = !DILocation(line: 193, column: 18, scope: !5778)
!5778 = distinct !DILexicalBlock(scope: !5773, file: !868, line: 192, column: 83)
!5779 = !DILocation(line: 194, column: 20, scope: !5780)
!5780 = distinct !DILexicalBlock(scope: !5778, file: !868, line: 194, column: 13)
!5781 = !DILocation(line: 194, column: 13, scope: !5778)
!5782 = !DILocation(line: 195, column: 13, scope: !5783)
!5783 = distinct !DILexicalBlock(scope: !5780, file: !868, line: 194, column: 32)
!5784 = !DILocation(line: 199, column: 1, scope: !5664)
!5785 = distinct !DISubprogram(name: "uart_send_handler", scope: !868, file: !868, line: 210, type: !5665, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !5786)
!5786 = !{!5787, !5788, !5789, !5790, !5791, !5792, !5793, !5794}
!5787 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5785, file: !868, line: 210, type: !942)
!5788 = !DILocalVariable(name: "is_send_complete_trigger", arg: 2, scope: !5785, file: !868, line: 210, type: !91)
!5789 = !DILocalVariable(name: "channel", scope: !5785, file: !868, line: 212, type: !4728)
!5790 = !DILocalVariable(name: "status", scope: !5785, file: !868, line: 213, type: !4727)
!5791 = !DILocalVariable(name: "compare_space", scope: !5785, file: !868, line: 214, type: !61)
!5792 = !DILocalVariable(name: "avail_space", scope: !5785, file: !868, line: 214, type: !61)
!5793 = !DILocalVariable(name: "callback", scope: !5785, file: !868, line: 215, type: !951)
!5794 = !DILocalVariable(name: "arg", scope: !5785, file: !868, line: 216, type: !88)
!5795 = !DILocation(line: 0, scope: !5785)
!5796 = !DILocation(line: 214, column: 5, scope: !5785)
!5797 = !DILocation(line: 221, column: 9, scope: !5798)
!5798 = distinct !DILexicalBlock(scope: !5785, file: !868, line: 221, column: 9)
!5799 = !DILocation(line: 221, column: 36, scope: !5798)
!5800 = !DILocation(line: 221, column: 9, scope: !5785)
!5801 = !DILocation(line: 222, column: 9, scope: !5802)
!5802 = distinct !DILexicalBlock(scope: !5798, file: !868, line: 221, column: 70)
!5803 = !DILocation(line: 226, column: 15, scope: !5785)
!5804 = !DILocation(line: 228, column: 9, scope: !5785)
!5805 = !DILocation(line: 253, column: 47, scope: !5806)
!5806 = distinct !DILexicalBlock(scope: !5807, file: !868, line: 252, column: 12)
!5807 = distinct !DILexicalBlock(scope: !5785, file: !868, line: 228, column: 9)
!5808 = !DILocation(line: 255, column: 22, scope: !5809)
!5809 = distinct !DILexicalBlock(scope: !5806, file: !868, line: 255, column: 13)
!5810 = !DILocation(line: 255, column: 13, scope: !5806)
!5811 = !DILocation(line: 256, column: 13, scope: !5812)
!5812 = distinct !DILexicalBlock(scope: !5809, file: !868, line: 255, column: 31)
!5813 = !DILocation(line: 254, column: 42, scope: !5806)
!5814 = !DILocation(line: 260, column: 9, scope: !5806)
!5815 = !DILocation(line: 261, column: 9, scope: !5806)
!5816 = !DILocation(line: 262, column: 9, scope: !5806)
!5817 = !DILocation(line: 264, column: 18, scope: !5806)
!5818 = !DILocation(line: 265, column: 20, scope: !5819)
!5819 = distinct !DILexicalBlock(scope: !5806, file: !868, line: 265, column: 13)
!5820 = !DILocation(line: 265, column: 13, scope: !5806)
!5821 = !DILocation(line: 266, column: 13, scope: !5822)
!5822 = distinct !DILexicalBlock(scope: !5819, file: !868, line: 265, column: 32)
!5823 = !DILocation(line: 269, column: 54, scope: !5806)
!5824 = !DILocation(line: 270, column: 56, scope: !5806)
!5825 = !DILocation(line: 270, column: 25, scope: !5806)
!5826 = !DILocation(line: 271, column: 13, scope: !5827)
!5827 = distinct !DILexicalBlock(scope: !5806, file: !868, line: 271, column: 13)
!5828 = !DILocation(line: 271, column: 25, scope: !5827)
!5829 = !DILocation(line: 271, column: 13, scope: !5806)
!5830 = !DILocation(line: 272, column: 22, scope: !5831)
!5831 = distinct !DILexicalBlock(scope: !5827, file: !868, line: 271, column: 43)
!5832 = !DILocation(line: 273, column: 24, scope: !5833)
!5833 = distinct !DILexicalBlock(scope: !5831, file: !868, line: 273, column: 17)
!5834 = !DILocation(line: 273, column: 17, scope: !5831)
!5835 = !DILocation(line: 274, column: 17, scope: !5836)
!5836 = distinct !DILexicalBlock(scope: !5833, file: !868, line: 273, column: 36)
!5837 = !DILocation(line: 279, column: 1, scope: !5785)
!5838 = distinct !DISubprogram(name: "uart_error_handler", scope: !868, file: !868, line: 282, type: !5839, scopeLine: 283, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !5841)
!5839 = !DISubroutineType(types: !5840)
!5840 = !{null, !942}
!5841 = !{!5842, !5843, !5844, !5845}
!5842 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5838, file: !868, line: 282, type: !942)
!5843 = !DILocalVariable(name: "uartx", scope: !5838, file: !868, line: 284, type: !5675)
!5844 = !DILocalVariable(name: "callback", scope: !5838, file: !868, line: 285, type: !951)
!5845 = !DILocalVariable(name: "arg", scope: !5838, file: !868, line: 286, type: !88)
!5846 = !DILocation(line: 0, scope: !5838)
!5847 = !DILocation(line: 288, column: 13, scope: !5838)
!5848 = !DILocation(line: 290, column: 10, scope: !5849)
!5849 = distinct !DILexicalBlock(scope: !5838, file: !868, line: 290, column: 9)
!5850 = !DILocation(line: 290, column: 9, scope: !5838)
!5851 = !DILocation(line: 291, column: 9, scope: !5852)
!5852 = distinct !DILexicalBlock(scope: !5849, file: !868, line: 290, column: 36)
!5853 = !DILocation(line: 292, column: 9, scope: !5852)
!5854 = !DILocation(line: 293, column: 47, scope: !5852)
!5855 = !DILocation(line: 295, column: 22, scope: !5856)
!5856 = distinct !DILexicalBlock(scope: !5852, file: !868, line: 295, column: 13)
!5857 = !DILocation(line: 295, column: 13, scope: !5852)
!5858 = !DILocation(line: 296, column: 13, scope: !5859)
!5859 = distinct !DILexicalBlock(scope: !5856, file: !868, line: 295, column: 31)
!5860 = !DILocation(line: 294, column: 42, scope: !5852)
!5861 = !DILocation(line: 299, column: 9, scope: !5852)
!5862 = !DILocation(line: 300, column: 5, scope: !5852)
!5863 = !DILocation(line: 301, column: 1, scope: !5838)
!5864 = distinct !DISubprogram(name: "hal_uart_set_baudrate", scope: !868, file: !868, line: 416, type: !5865, scopeLine: 417, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !5869)
!5865 = !DISubroutineType(types: !5866)
!5866 = !{!5867, !942, !5868}
!5867 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_status_t", file: !878, line: 351, baseType: !888)
!5868 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_baudrate_t", file: !878, line: 317, baseType: !895)
!5869 = !{!5870, !5871, !5872, !5873, !5874}
!5870 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5864, file: !868, line: 416, type: !942)
!5871 = !DILocalVariable(name: "baudrate", arg: 2, scope: !5864, file: !868, line: 416, type: !5868)
!5872 = !DILocalVariable(name: "actual_baudrate", scope: !5864, file: !868, line: 418, type: !61)
!5873 = !DILocalVariable(name: "irq_status", scope: !5864, file: !868, line: 418, type: !61)
!5874 = !DILocalVariable(name: "uartx", scope: !5864, file: !868, line: 419, type: !5675)
!5875 = !DILocation(line: 0, scope: !5864)
!5876 = !DILocation(line: 421, column: 11, scope: !5877)
!5877 = distinct !DILexicalBlock(scope: !5864, file: !868, line: 421, column: 9)
!5878 = !DILocation(line: 421, column: 42, scope: !5877)
!5879 = !DILocation(line: 422, column: 11, scope: !5877)
!5880 = !DILocation(line: 421, column: 9, scope: !5864)
!5881 = !DILocation(line: 426, column: 9, scope: !5882)
!5882 = distinct !DILexicalBlock(scope: !5864, file: !868, line: 426, column: 9)
!5883 = !DILocation(line: 426, column: 36, scope: !5882)
!5884 = !DILocation(line: 426, column: 9, scope: !5864)
!5885 = !DILocation(line: 430, column: 18, scope: !5864)
!5886 = !DILocation(line: 434, column: 5, scope: !5864)
!5887 = !DILocation(line: 436, column: 13, scope: !5864)
!5888 = !DILocation(line: 437, column: 23, scope: !5864)
!5889 = !DILocation(line: 439, column: 5, scope: !5864)
!5890 = !DILocation(line: 441, column: 5, scope: !5864)
!5891 = !DILocation(line: 442, column: 1, scope: !5864)
!5892 = distinct !DISubprogram(name: "uart_port_is_valid", scope: !868, file: !868, line: 120, type: !5893, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !5895)
!5893 = !DISubroutineType(types: !5894)
!5894 = !{!91, !942}
!5895 = !{!5896}
!5896 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5892, file: !868, line: 120, type: !942)
!5897 = !DILocation(line: 0, scope: !5892)
!5898 = !DILocation(line: 122, column: 23, scope: !5892)
!5899 = !DILocation(line: 122, column: 5, scope: !5892)
!5900 = distinct !DISubprogram(name: "uart_baudrate_is_valid", scope: !868, file: !868, line: 125, type: !5901, scopeLine: 126, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !5903)
!5901 = !DISubroutineType(types: !5902)
!5902 = !{!91, !5868}
!5903 = !{!5904}
!5904 = !DILocalVariable(name: "baudrate", arg: 1, scope: !5900, file: !868, line: 125, type: !5868)
!5905 = !DILocation(line: 0, scope: !5900)
!5906 = !DILocation(line: 127, column: 22, scope: !5900)
!5907 = !DILocation(line: 127, column: 5, scope: !5900)
!5908 = distinct !DISubprogram(name: "hal_uart_set_format", scope: !868, file: !868, line: 444, type: !5909, scopeLine: 446, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !5923)
!5909 = !DISubroutineType(types: !5910)
!5910 = !{!5867, !942, !5911}
!5911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5912, size: 32)
!5912 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5913)
!5913 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_config_t", file: !878, line: 378, baseType: !5914)
!5914 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !878, line: 373, size: 128, elements: !5915)
!5915 = !{!5916, !5917, !5919, !5921}
!5916 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !5914, file: !878, line: 374, baseType: !5868, size: 32)
!5917 = !DIDerivedType(tag: DW_TAG_member, name: "word_length", scope: !5914, file: !878, line: 375, baseType: !5918, size: 32, offset: 32)
!5918 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_word_length_t", file: !878, line: 326, baseType: !911)
!5919 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bit", scope: !5914, file: !878, line: 376, baseType: !5920, size: 32, offset: 64)
!5920 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_stop_bit_t", file: !878, line: 333, baseType: !917)
!5921 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !5914, file: !878, line: 377, baseType: !5922, size: 32, offset: 96)
!5922 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_parity_t", file: !878, line: 341, baseType: !921)
!5923 = !{!5924, !5925, !5926, !5927}
!5924 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5908, file: !868, line: 444, type: !942)
!5925 = !DILocalVariable(name: "config", arg: 2, scope: !5908, file: !868, line: 445, type: !5911)
!5926 = !DILocalVariable(name: "irq_status", scope: !5908, file: !868, line: 447, type: !61)
!5927 = !DILocalVariable(name: "uartx", scope: !5908, file: !868, line: 448, type: !5675)
!5928 = !DILocation(line: 0, scope: !5908)
!5929 = !DILocation(line: 450, column: 11, scope: !5930)
!5930 = distinct !DILexicalBlock(scope: !5908, file: !868, line: 450, column: 9)
!5931 = !DILocation(line: 450, column: 42, scope: !5930)
!5932 = !DILocation(line: 451, column: 11, scope: !5930)
!5933 = !DILocation(line: 450, column: 9, scope: !5908)
!5934 = !DILocation(line: 455, column: 9, scope: !5935)
!5935 = distinct !DILexicalBlock(scope: !5908, file: !868, line: 455, column: 9)
!5936 = !DILocation(line: 455, column: 36, scope: !5935)
!5937 = !DILocation(line: 455, column: 9, scope: !5908)
!5938 = !DILocation(line: 459, column: 18, scope: !5908)
!5939 = !DILocation(line: 466, column: 5, scope: !5908)
!5940 = !DILocation(line: 468, column: 13, scope: !5908)
!5941 = !DILocation(line: 470, column: 46, scope: !5908)
!5942 = !DILocation(line: 470, column: 5, scope: !5908)
!5943 = !DILocation(line: 471, column: 36, scope: !5908)
!5944 = !DILocation(line: 471, column: 57, scope: !5908)
!5945 = !DILocation(line: 471, column: 75, scope: !5908)
!5946 = !DILocation(line: 471, column: 5, scope: !5908)
!5947 = !DILocation(line: 473, column: 5, scope: !5908)
!5948 = !DILocation(line: 474, column: 1, scope: !5908)
!5949 = distinct !DISubprogram(name: "uart_config_is_valid", scope: !868, file: !868, line: 130, type: !5950, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !5952)
!5950 = !DISubroutineType(types: !5951)
!5951 = !{!91, !5911}
!5952 = !{!5953}
!5953 = !DILocalVariable(name: "config", arg: 1, scope: !5949, file: !868, line: 130, type: !5911)
!5954 = !DILocation(line: 0, scope: !5949)
!5955 = !DILocation(line: 132, column: 22, scope: !5949)
!5956 = !DILocation(line: 132, column: 31, scope: !5949)
!5957 = !DILocation(line: 132, column: 56, scope: !5949)
!5958 = !DILocation(line: 133, column: 22, scope: !5949)
!5959 = !DILocation(line: 133, column: 34, scope: !5949)
!5960 = !DILocation(line: 133, column: 61, scope: !5949)
!5961 = !DILocation(line: 134, column: 22, scope: !5949)
!5962 = !DILocation(line: 134, column: 31, scope: !5949)
!5963 = !DILocation(line: 134, column: 55, scope: !5949)
!5964 = !DILocation(line: 135, column: 22, scope: !5949)
!5965 = !DILocation(line: 135, column: 29, scope: !5949)
!5966 = !DILocation(line: 132, column: 5, scope: !5949)
!5967 = distinct !DISubprogram(name: "hal_uart_init", scope: !868, file: !868, line: 476, type: !5968, scopeLine: 477, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !5971)
!5968 = !DISubroutineType(types: !5969)
!5969 = !{!5867, !942, !5970}
!5970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5913, size: 32)
!5971 = !{!5972, !5973, !5974, !5975, !5976, !5977, !5978}
!5972 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5967, file: !868, line: 476, type: !942)
!5973 = !DILocalVariable(name: "uart_config", arg: 2, scope: !5967, file: !868, line: 476, type: !5970)
!5974 = !DILocalVariable(name: "uartx", scope: !5967, file: !868, line: 478, type: !5675)
!5975 = !DILocalVariable(name: "i", scope: !5967, file: !868, line: 479, type: !61)
!5976 = !DILocalVariable(name: "actual_baudrate", scope: !5967, file: !868, line: 479, type: !61)
!5977 = !DILocalVariable(name: "irq_status", scope: !5967, file: !868, line: 479, type: !61)
!5978 = !DILocalVariable(name: "status", scope: !5967, file: !868, line: 480, type: !4224)
!5979 = !DILocation(line: 0, scope: !5967)
!5980 = !DILocation(line: 482, column: 11, scope: !5981)
!5981 = distinct !DILexicalBlock(scope: !5967, file: !868, line: 482, column: 9)
!5982 = !DILocation(line: 482, column: 42, scope: !5981)
!5983 = !DILocation(line: 483, column: 11, scope: !5981)
!5984 = !DILocation(line: 482, column: 9, scope: !5967)
!5985 = !DILocation(line: 487, column: 18, scope: !5967)
!5986 = !DILocation(line: 488, column: 9, scope: !5987)
!5987 = distinct !DILexicalBlock(scope: !5967, file: !868, line: 488, column: 9)
!5988 = !DILocation(line: 488, column: 36, scope: !5987)
!5989 = !DILocation(line: 488, column: 9, scope: !5967)
!5990 = !DILocation(line: 489, column: 9, scope: !5991)
!5991 = distinct !DILexicalBlock(scope: !5987, file: !868, line: 488, column: 68)
!5992 = !DILocation(line: 490, column: 9, scope: !5991)
!5993 = !DILocation(line: 502, column: 9, scope: !5994)
!5994 = distinct !DILexicalBlock(scope: !5967, file: !868, line: 502, column: 9)
!5995 = !DILocation(line: 502, column: 9, scope: !5967)
!5996 = !DILocation(line: 504, column: 13, scope: !5997)
!5997 = distinct !DILexicalBlock(scope: !5998, file: !868, line: 503, column: 44)
!5998 = distinct !DILexicalBlock(scope: !5999, file: !868, line: 503, column: 9)
!5999 = distinct !DILexicalBlock(scope: !6000, file: !868, line: 503, column: 9)
!6000 = distinct !DILexicalBlock(scope: !5994, file: !868, line: 502, column: 50)
!6001 = !DILocation(line: 504, column: 32, scope: !5997)
!6002 = !DILocation(line: 510, column: 32, scope: !5997)
!6003 = !DILocation(line: 510, column: 36, scope: !5997)
!6004 = !DILocation(line: 511, column: 32, scope: !5997)
!6005 = !DILocation(line: 511, column: 37, scope: !5997)
!6006 = !DILocation(line: 503, column: 40, scope: !5998)
!6007 = !DILocation(line: 503, column: 23, scope: !5998)
!6008 = !DILocation(line: 503, column: 9, scope: !5999)
!6009 = distinct !{!6009, !6008, !6010}
!6010 = !DILocation(line: 512, column: 9, scope: !5999)
!6011 = !DILocation(line: 513, column: 40, scope: !6000)
!6012 = !DILocation(line: 514, column: 5, scope: !6000)
!6013 = !DILocation(line: 521, column: 32, scope: !5967)
!6014 = !DILocation(line: 522, column: 5, scope: !5967)
!6015 = !DILocation(line: 524, column: 31, scope: !5967)
!6016 = !DILocation(line: 524, column: 14, scope: !5967)
!6017 = !DILocation(line: 525, column: 16, scope: !6018)
!6018 = distinct !DILexicalBlock(scope: !5967, file: !868, line: 525, column: 9)
!6019 = !DILocation(line: 525, column: 9, scope: !5967)
!6020 = !DILocation(line: 526, column: 9, scope: !6021)
!6021 = distinct !DILexicalBlock(scope: !6018, file: !868, line: 525, column: 40)
!6022 = !DILocation(line: 530, column: 13, scope: !5967)
!6023 = !DILocation(line: 532, column: 5, scope: !5967)
!6024 = !DILocation(line: 533, column: 56, scope: !5967)
!6025 = !DILocation(line: 533, column: 23, scope: !5967)
!6026 = !DILocation(line: 534, column: 5, scope: !5967)
!6027 = !DILocation(line: 535, column: 41, scope: !5967)
!6028 = !DILocation(line: 535, column: 67, scope: !5967)
!6029 = !DILocation(line: 535, column: 90, scope: !5967)
!6030 = !DILocation(line: 535, column: 5, scope: !5967)
!6031 = !DILocation(line: 536, column: 5, scope: !5967)
!6032 = !DILocation(line: 541, column: 5, scope: !5967)
!6033 = !DILocation(line: 542, column: 1, scope: !5967)
!6034 = distinct !DISubprogram(name: "hal_uart_deinit", scope: !868, file: !868, line: 544, type: !6035, scopeLine: 545, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !6037)
!6035 = !DISubroutineType(types: !6036)
!6036 = !{!5867, !942}
!6037 = !{!6038, !6039, !6040, !6041, !6042, !6043, !6044}
!6038 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6034, file: !868, line: 544, type: !942)
!6039 = !DILocalVariable(name: "uartx", scope: !6034, file: !868, line: 546, type: !5675)
!6040 = !DILocalVariable(name: "tx_dma_channel", scope: !6034, file: !868, line: 547, type: !4728)
!6041 = !DILocalVariable(name: "rx_dma_channel", scope: !6034, file: !868, line: 547, type: !4728)
!6042 = !DILocalVariable(name: "irq_status", scope: !6034, file: !868, line: 548, type: !61)
!6043 = !DILocalVariable(name: "status", scope: !6034, file: !868, line: 549, type: !4727)
!6044 = !DILocalVariable(name: "clock_status", scope: !6034, file: !868, line: 550, type: !4224)
!6045 = !DILocation(line: 0, scope: !6034)
!6046 = !DILocation(line: 552, column: 10, scope: !6047)
!6047 = distinct !DILexicalBlock(scope: !6034, file: !868, line: 552, column: 9)
!6048 = !DILocation(line: 552, column: 9, scope: !6034)
!6049 = !DILocation(line: 556, column: 18, scope: !6034)
!6050 = !DILocation(line: 557, column: 9, scope: !6051)
!6051 = distinct !DILexicalBlock(scope: !6034, file: !868, line: 557, column: 9)
!6052 = !DILocation(line: 557, column: 36, scope: !6051)
!6053 = !DILocation(line: 557, column: 9, scope: !6034)
!6054 = !DILocation(line: 562, column: 13, scope: !6034)
!6055 = !DILocation(line: 565, column: 5, scope: !6034)
!6056 = !DILocation(line: 568, column: 9, scope: !6057)
!6057 = distinct !DILexicalBlock(scope: !6034, file: !868, line: 568, column: 9)
!6058 = !DILocation(line: 568, column: 36, scope: !6057)
!6059 = !DILocation(line: 568, column: 9, scope: !6034)
!6060 = !DILocation(line: 569, column: 26, scope: !6061)
!6061 = distinct !DILexicalBlock(scope: !6057, file: !868, line: 568, column: 70)
!6062 = !DILocation(line: 570, column: 26, scope: !6061)
!6063 = !DILocation(line: 572, column: 18, scope: !6061)
!6064 = !DILocation(line: 573, column: 20, scope: !6065)
!6065 = distinct !DILexicalBlock(scope: !6061, file: !868, line: 573, column: 13)
!6066 = !DILocation(line: 573, column: 13, scope: !6061)
!6067 = !DILocation(line: 574, column: 13, scope: !6068)
!6068 = distinct !DILexicalBlock(scope: !6065, file: !868, line: 573, column: 32)
!6069 = !DILocation(line: 575, column: 13, scope: !6068)
!6070 = !DILocation(line: 578, column: 18, scope: !6061)
!6071 = !DILocation(line: 579, column: 20, scope: !6072)
!6072 = distinct !DILexicalBlock(scope: !6061, file: !868, line: 579, column: 13)
!6073 = !DILocation(line: 579, column: 13, scope: !6061)
!6074 = !DILocation(line: 580, column: 13, scope: !6075)
!6075 = distinct !DILexicalBlock(scope: !6072, file: !868, line: 579, column: 32)
!6076 = !DILocation(line: 581, column: 13, scope: !6075)
!6077 = !DILocation(line: 584, column: 18, scope: !6061)
!6078 = !DILocation(line: 585, column: 20, scope: !6079)
!6079 = distinct !DILexicalBlock(scope: !6061, file: !868, line: 585, column: 13)
!6080 = !DILocation(line: 585, column: 13, scope: !6061)
!6081 = !DILocation(line: 586, column: 13, scope: !6082)
!6082 = distinct !DILexicalBlock(scope: !6079, file: !868, line: 585, column: 32)
!6083 = !DILocation(line: 587, column: 13, scope: !6082)
!6084 = !DILocation(line: 590, column: 18, scope: !6061)
!6085 = !DILocation(line: 591, column: 20, scope: !6086)
!6086 = distinct !DILexicalBlock(scope: !6061, file: !868, line: 591, column: 13)
!6087 = !DILocation(line: 591, column: 13, scope: !6061)
!6088 = !DILocation(line: 592, column: 13, scope: !6089)
!6089 = distinct !DILexicalBlock(scope: !6086, file: !868, line: 591, column: 32)
!6090 = !DILocation(line: 593, column: 13, scope: !6089)
!6091 = !DILocation(line: 596, column: 18, scope: !6061)
!6092 = !DILocation(line: 597, column: 20, scope: !6093)
!6093 = distinct !DILexicalBlock(scope: !6061, file: !868, line: 597, column: 13)
!6094 = !DILocation(line: 597, column: 13, scope: !6061)
!6095 = !DILocation(line: 598, column: 13, scope: !6096)
!6096 = distinct !DILexicalBlock(scope: !6093, file: !868, line: 597, column: 32)
!6097 = !DILocation(line: 599, column: 13, scope: !6096)
!6098 = !DILocation(line: 602, column: 18, scope: !6061)
!6099 = !DILocation(line: 603, column: 20, scope: !6100)
!6100 = distinct !DILexicalBlock(scope: !6061, file: !868, line: 603, column: 13)
!6101 = !DILocation(line: 603, column: 13, scope: !6061)
!6102 = !DILocation(line: 604, column: 13, scope: !6103)
!6103 = distinct !DILexicalBlock(scope: !6100, file: !868, line: 603, column: 32)
!6104 = !DILocation(line: 605, column: 13, scope: !6103)
!6105 = !DILocation(line: 608, column: 30, scope: !6061)
!6106 = !DILocation(line: 608, column: 9, scope: !6061)
!6107 = !DILocation(line: 609, column: 5, scope: !6061)
!6108 = !DILocation(line: 610, column: 5, scope: !6034)
!6109 = !DILocation(line: 611, column: 38, scope: !6034)
!6110 = !DILocation(line: 611, column: 20, scope: !6034)
!6111 = !DILocation(line: 612, column: 22, scope: !6112)
!6112 = distinct !DILexicalBlock(scope: !6034, file: !868, line: 612, column: 9)
!6113 = !DILocation(line: 612, column: 9, scope: !6034)
!6114 = !DILocation(line: 613, column: 9, scope: !6115)
!6115 = distinct !DILexicalBlock(scope: !6112, file: !868, line: 612, column: 46)
!6116 = !DILocation(line: 614, column: 9, scope: !6115)
!6117 = !DILocation(line: 618, column: 32, scope: !6034)
!6118 = !DILocation(line: 618, column: 37, scope: !6034)
!6119 = !DILocation(line: 619, column: 32, scope: !6034)
!6120 = !DILocation(line: 619, column: 36, scope: !6034)
!6121 = !DILocation(line: 635, column: 32, scope: !6034)
!6122 = !DILocation(line: 639, column: 5, scope: !6034)
!6123 = !DILocation(line: 640, column: 1, scope: !6034)
!6124 = distinct !DISubprogram(name: "hal_uart_put_char", scope: !868, file: !868, line: 642, type: !6125, scopeLine: 643, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !6127)
!6125 = !DISubroutineType(types: !6126)
!6126 = !{null, !942, !1683}
!6127 = !{!6128, !6129, !6130}
!6128 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6124, file: !868, line: 642, type: !942)
!6129 = !DILocalVariable(name: "byte", arg: 2, scope: !6124, file: !868, line: 642, type: !1683)
!6130 = !DILocalVariable(name: "uartx", scope: !6124, file: !868, line: 644, type: !5675)
!6131 = !DILocation(line: 0, scope: !6124)
!6132 = !DILocation(line: 646, column: 10, scope: !6133)
!6133 = distinct !DILexicalBlock(scope: !6124, file: !868, line: 646, column: 9)
!6134 = !DILocation(line: 646, column: 9, scope: !6124)
!6135 = !DILocation(line: 650, column: 9, scope: !6136)
!6136 = distinct !DILexicalBlock(scope: !6124, file: !868, line: 650, column: 9)
!6137 = !DILocation(line: 650, column: 36, scope: !6136)
!6138 = !DILocation(line: 650, column: 9, scope: !6124)
!6139 = !DILocation(line: 654, column: 13, scope: !6124)
!6140 = !DILocation(line: 655, column: 5, scope: !6124)
!6141 = !DILocation(line: 656, column: 1, scope: !6124)
!6142 = distinct !DISubprogram(name: "hal_uart_send_polling", scope: !868, file: !868, line: 658, type: !6143, scopeLine: 659, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !6145)
!6143 = !DISubroutineType(types: !6144)
!6144 = !{!61, !942, !2369, !61}
!6145 = !{!6146, !6147, !6148, !6149}
!6146 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6142, file: !868, line: 658, type: !942)
!6147 = !DILocalVariable(name: "data", arg: 2, scope: !6142, file: !868, line: 658, type: !2369)
!6148 = !DILocalVariable(name: "size", arg: 3, scope: !6142, file: !868, line: 658, type: !61)
!6149 = !DILocalVariable(name: "i", scope: !6142, file: !868, line: 660, type: !61)
!6150 = !DILocation(line: 0, scope: !6142)
!6151 = !DILocation(line: 662, column: 11, scope: !6152)
!6152 = distinct !DILexicalBlock(scope: !6142, file: !868, line: 662, column: 9)
!6153 = !DILocation(line: 662, column: 42, scope: !6152)
!6154 = !DILocation(line: 666, column: 9, scope: !6155)
!6155 = distinct !DILexicalBlock(scope: !6142, file: !868, line: 666, column: 9)
!6156 = !DILocation(line: 666, column: 36, scope: !6155)
!6157 = !DILocation(line: 666, column: 9, scope: !6142)
!6158 = !DILocation(line: 671, column: 38, scope: !6159)
!6159 = distinct !DILexicalBlock(scope: !6160, file: !868, line: 670, column: 32)
!6160 = distinct !DILexicalBlock(scope: !6161, file: !868, line: 670, column: 5)
!6161 = distinct !DILexicalBlock(scope: !6142, file: !868, line: 670, column: 5)
!6162 = !DILocation(line: 671, column: 9, scope: !6159)
!6163 = !DILocation(line: 672, column: 13, scope: !6159)
!6164 = !DILocation(line: 670, column: 28, scope: !6160)
!6165 = !DILocation(line: 670, column: 19, scope: !6160)
!6166 = !DILocation(line: 670, column: 5, scope: !6161)
!6167 = distinct !{!6167, !6166, !6168}
!6168 = !DILocation(line: 673, column: 5, scope: !6161)
!6169 = !DILocation(line: 676, column: 1, scope: !6142)
!6170 = distinct !DISubprogram(name: "hal_uart_send_dma", scope: !868, file: !868, line: 678, type: !6143, scopeLine: 679, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !6171)
!6171 = !{!6172, !6173, !6174, !6175, !6176, !6177, !6178, !6179}
!6172 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6170, file: !868, line: 678, type: !942)
!6173 = !DILocalVariable(name: "data", arg: 2, scope: !6170, file: !868, line: 678, type: !2369)
!6174 = !DILocalVariable(name: "size", arg: 3, scope: !6170, file: !868, line: 678, type: !61)
!6175 = !DILocalVariable(name: "channel", scope: !6170, file: !868, line: 680, type: !4728)
!6176 = !DILocalVariable(name: "i", scope: !6170, file: !868, line: 681, type: !61)
!6177 = !DILocalVariable(name: "real_count", scope: !6170, file: !868, line: 681, type: !61)
!6178 = !DILocalVariable(name: "avail_space", scope: !6170, file: !868, line: 681, type: !61)
!6179 = !DILocalVariable(name: "status", scope: !6170, file: !868, line: 682, type: !4727)
!6180 = !DILocation(line: 0, scope: !6170)
!6181 = !DILocation(line: 681, column: 5, scope: !6170)
!6182 = !DILocation(line: 687, column: 11, scope: !6183)
!6183 = distinct !DILexicalBlock(scope: !6170, file: !868, line: 687, column: 9)
!6184 = !DILocation(line: 687, column: 42, scope: !6183)
!6185 = !DILocation(line: 691, column: 9, scope: !6186)
!6186 = distinct !DILexicalBlock(scope: !6170, file: !868, line: 691, column: 9)
!6187 = !DILocation(line: 691, column: 36, scope: !6186)
!6188 = !DILocation(line: 691, column: 9, scope: !6170)
!6189 = !DILocation(line: 704, column: 15, scope: !6170)
!6190 = !DILocation(line: 706, column: 14, scope: !6170)
!6191 = !DILocation(line: 707, column: 16, scope: !6192)
!6192 = distinct !DILexicalBlock(scope: !6170, file: !868, line: 707, column: 9)
!6193 = !DILocation(line: 707, column: 9, scope: !6170)
!6194 = !DILocation(line: 708, column: 9, scope: !6195)
!6195 = distinct !DILexicalBlock(scope: !6192, file: !868, line: 707, column: 28)
!6196 = !DILocation(line: 712, column: 9, scope: !6197)
!6197 = distinct !DILexicalBlock(scope: !6170, file: !868, line: 712, column: 9)
!6198 = !DILocation(line: 712, column: 21, scope: !6197)
!6199 = !DILocation(line: 717, column: 19, scope: !6200)
!6200 = distinct !DILexicalBlock(scope: !6201, file: !868, line: 717, column: 5)
!6201 = distinct !DILexicalBlock(scope: !6170, file: !868, line: 717, column: 5)
!6202 = !DILocation(line: 717, column: 5, scope: !6201)
!6203 = distinct !{!6203, !6202, !6204}
!6204 = !DILocation(line: 723, column: 5, scope: !6201)
!6205 = !DILocation(line: 718, column: 42, scope: !6206)
!6206 = distinct !DILexicalBlock(scope: !6200, file: !868, line: 717, column: 38)
!6207 = !DILocation(line: 718, column: 18, scope: !6206)
!6208 = !DILocation(line: 719, column: 20, scope: !6209)
!6209 = distinct !DILexicalBlock(scope: !6206, file: !868, line: 719, column: 13)
!6210 = !DILocation(line: 717, column: 34, scope: !6200)
!6211 = !DILocation(line: 719, column: 13, scope: !6206)
!6212 = !DILocation(line: 720, column: 13, scope: !6213)
!6213 = distinct !DILexicalBlock(scope: !6209, file: !868, line: 719, column: 32)
!6214 = !DILocation(line: 728, column: 23, scope: !6215)
!6215 = distinct !DILexicalBlock(scope: !6170, file: !868, line: 728, column: 9)
!6216 = !DILocation(line: 728, column: 20, scope: !6215)
!6217 = !DILocation(line: 728, column: 9, scope: !6170)
!6218 = !DILocation(line: 729, column: 18, scope: !6219)
!6219 = distinct !DILexicalBlock(scope: !6215, file: !868, line: 728, column: 36)
!6220 = !DILocation(line: 730, column: 20, scope: !6221)
!6221 = distinct !DILexicalBlock(scope: !6219, file: !868, line: 730, column: 13)
!6222 = !DILocation(line: 730, column: 13, scope: !6219)
!6223 = !DILocation(line: 731, column: 13, scope: !6224)
!6224 = distinct !DILexicalBlock(scope: !6221, file: !868, line: 730, column: 32)
!6225 = !DILocation(line: 737, column: 1, scope: !6170)
!6226 = distinct !DISubprogram(name: "hal_uart_get_char", scope: !868, file: !868, line: 739, type: !6227, scopeLine: 740, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !6229)
!6227 = !DISubroutineType(types: !6228)
!6228 = !{!1683, !942}
!6229 = !{!6230, !6231, !6232}
!6230 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6226, file: !868, line: 739, type: !942)
!6231 = !DILocalVariable(name: "data", scope: !6226, file: !868, line: 741, type: !1683)
!6232 = !DILocalVariable(name: "uartx", scope: !6226, file: !868, line: 742, type: !5675)
!6233 = !DILocation(line: 0, scope: !6226)
!6234 = !DILocation(line: 744, column: 10, scope: !6235)
!6235 = distinct !DILexicalBlock(scope: !6226, file: !868, line: 744, column: 9)
!6236 = !DILocation(line: 744, column: 9, scope: !6226)
!6237 = !DILocation(line: 748, column: 9, scope: !6238)
!6238 = distinct !DILexicalBlock(scope: !6226, file: !868, line: 748, column: 9)
!6239 = !DILocation(line: 748, column: 36, scope: !6238)
!6240 = !DILocation(line: 748, column: 9, scope: !6226)
!6241 = !DILocation(line: 752, column: 13, scope: !6226)
!6242 = !DILocation(line: 754, column: 12, scope: !6226)
!6243 = !DILocation(line: 756, column: 5, scope: !6226)
!6244 = !DILocation(line: 757, column: 1, scope: !6226)
!6245 = distinct !DISubprogram(name: "hal_uart_get_char_unblocking", scope: !868, file: !868, line: 759, type: !6246, scopeLine: 760, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !6248)
!6246 = !DISubroutineType(types: !6247)
!6247 = !{!61, !942}
!6248 = !{!6249, !6250, !6251}
!6249 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6245, file: !868, line: 759, type: !942)
!6250 = !DILocalVariable(name: "data", scope: !6245, file: !868, line: 761, type: !61)
!6251 = !DILocalVariable(name: "uartx", scope: !6245, file: !868, line: 762, type: !5675)
!6252 = !DILocation(line: 0, scope: !6245)
!6253 = !DILocation(line: 764, column: 10, scope: !6254)
!6254 = distinct !DILexicalBlock(scope: !6245, file: !868, line: 764, column: 9)
!6255 = !DILocation(line: 764, column: 9, scope: !6245)
!6256 = !DILocation(line: 768, column: 9, scope: !6257)
!6257 = distinct !DILexicalBlock(scope: !6245, file: !868, line: 768, column: 9)
!6258 = !DILocation(line: 768, column: 36, scope: !6257)
!6259 = !DILocation(line: 768, column: 9, scope: !6245)
!6260 = !DILocation(line: 772, column: 13, scope: !6245)
!6261 = !DILocation(line: 774, column: 12, scope: !6245)
!6262 = !DILocation(line: 776, column: 5, scope: !6245)
!6263 = !DILocation(line: 777, column: 1, scope: !6245)
!6264 = distinct !DISubprogram(name: "hal_uart_receive_polling", scope: !868, file: !868, line: 779, type: !6265, scopeLine: 780, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !6267)
!6265 = !DISubroutineType(types: !6266)
!6266 = !{!61, !942, !969, !61}
!6267 = !{!6268, !6269, !6270, !6271, !6272}
!6268 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6264, file: !868, line: 779, type: !942)
!6269 = !DILocalVariable(name: "buffer", arg: 2, scope: !6264, file: !868, line: 779, type: !969)
!6270 = !DILocalVariable(name: "size", arg: 3, scope: !6264, file: !868, line: 779, type: !61)
!6271 = !DILocalVariable(name: "i", scope: !6264, file: !868, line: 781, type: !61)
!6272 = !DILocalVariable(name: "pbuf", scope: !6264, file: !868, line: 782, type: !969)
!6273 = !DILocation(line: 0, scope: !6264)
!6274 = !DILocation(line: 784, column: 11, scope: !6275)
!6275 = distinct !DILexicalBlock(scope: !6264, file: !868, line: 784, column: 9)
!6276 = !DILocation(line: 784, column: 42, scope: !6275)
!6277 = !DILocation(line: 789, column: 9, scope: !6278)
!6278 = distinct !DILexicalBlock(scope: !6264, file: !868, line: 789, column: 9)
!6279 = !DILocation(line: 789, column: 36, scope: !6278)
!6280 = !DILocation(line: 789, column: 9, scope: !6264)
!6281 = !DILocation(line: 794, column: 19, scope: !6282)
!6282 = distinct !DILexicalBlock(scope: !6283, file: !868, line: 793, column: 32)
!6283 = distinct !DILexicalBlock(scope: !6284, file: !868, line: 793, column: 5)
!6284 = distinct !DILexicalBlock(scope: !6264, file: !868, line: 793, column: 5)
!6285 = !DILocation(line: 794, column: 9, scope: !6282)
!6286 = !DILocation(line: 794, column: 17, scope: !6282)
!6287 = !DILocation(line: 793, column: 28, scope: !6283)
!6288 = !DILocation(line: 793, column: 19, scope: !6283)
!6289 = !DILocation(line: 793, column: 5, scope: !6284)
!6290 = distinct !{!6290, !6289, !6291}
!6291 = !DILocation(line: 795, column: 5, scope: !6284)
!6292 = !DILocation(line: 798, column: 1, scope: !6264)
!6293 = distinct !DISubprogram(name: "hal_uart_receive_dma", scope: !868, file: !868, line: 800, type: !6265, scopeLine: 801, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !6294)
!6294 = !{!6295, !6296, !6297, !6298, !6299, !6300, !6301, !6302}
!6295 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6293, file: !868, line: 800, type: !942)
!6296 = !DILocalVariable(name: "buffer", arg: 2, scope: !6293, file: !868, line: 800, type: !969)
!6297 = !DILocalVariable(name: "size", arg: 3, scope: !6293, file: !868, line: 800, type: !61)
!6298 = !DILocalVariable(name: "channel", scope: !6293, file: !868, line: 802, type: !4728)
!6299 = !DILocalVariable(name: "receive_count", scope: !6293, file: !868, line: 803, type: !61)
!6300 = !DILocalVariable(name: "avail_count", scope: !6293, file: !868, line: 803, type: !61)
!6301 = !DILocalVariable(name: "index", scope: !6293, file: !868, line: 804, type: !61)
!6302 = !DILocalVariable(name: "status", scope: !6293, file: !868, line: 805, type: !4727)
!6303 = !DILocation(line: 0, scope: !6293)
!6304 = !DILocation(line: 803, column: 5, scope: !6293)
!6305 = !DILocation(line: 807, column: 11, scope: !6306)
!6306 = distinct !DILexicalBlock(scope: !6293, file: !868, line: 807, column: 9)
!6307 = !DILocation(line: 807, column: 42, scope: !6306)
!6308 = !DILocation(line: 813, column: 9, scope: !6309)
!6309 = distinct !DILexicalBlock(scope: !6293, file: !868, line: 813, column: 9)
!6310 = !DILocation(line: 813, column: 36, scope: !6309)
!6311 = !DILocation(line: 813, column: 9, scope: !6293)
!6312 = !DILocation(line: 817, column: 15, scope: !6293)
!6313 = !DILocation(line: 819, column: 14, scope: !6293)
!6314 = !DILocation(line: 820, column: 16, scope: !6315)
!6315 = distinct !DILexicalBlock(scope: !6293, file: !868, line: 820, column: 9)
!6316 = !DILocation(line: 820, column: 9, scope: !6293)
!6317 = !DILocation(line: 821, column: 9, scope: !6318)
!6318 = distinct !DILexicalBlock(scope: !6315, file: !868, line: 820, column: 28)
!6319 = !DILocation(line: 825, column: 9, scope: !6320)
!6320 = distinct !DILexicalBlock(scope: !6293, file: !868, line: 825, column: 9)
!6321 = !DILocation(line: 825, column: 21, scope: !6320)
!6322 = !DILocation(line: 830, column: 27, scope: !6323)
!6323 = distinct !DILexicalBlock(scope: !6324, file: !868, line: 830, column: 5)
!6324 = distinct !DILexicalBlock(scope: !6293, file: !868, line: 830, column: 5)
!6325 = !DILocation(line: 830, column: 5, scope: !6324)
!6326 = distinct !{!6326, !6325, !6327}
!6327 = !DILocation(line: 836, column: 5, scope: !6324)
!6328 = !DILocation(line: 831, column: 42, scope: !6329)
!6329 = distinct !DILexicalBlock(scope: !6323, file: !868, line: 830, column: 53)
!6330 = !DILocation(line: 831, column: 18, scope: !6329)
!6331 = !DILocation(line: 832, column: 20, scope: !6332)
!6332 = distinct !DILexicalBlock(scope: !6329, file: !868, line: 832, column: 13)
!6333 = !DILocation(line: 830, column: 49, scope: !6323)
!6334 = !DILocation(line: 832, column: 13, scope: !6329)
!6335 = !DILocation(line: 833, column: 13, scope: !6336)
!6336 = distinct !DILexicalBlock(scope: !6332, file: !868, line: 832, column: 32)
!6337 = !DILocation(line: 841, column: 26, scope: !6338)
!6338 = distinct !DILexicalBlock(scope: !6293, file: !868, line: 841, column: 9)
!6339 = !DILocation(line: 841, column: 23, scope: !6338)
!6340 = !DILocation(line: 841, column: 9, scope: !6293)
!6341 = !DILocation(line: 842, column: 18, scope: !6342)
!6342 = distinct !DILexicalBlock(scope: !6338, file: !868, line: 841, column: 39)
!6343 = !DILocation(line: 843, column: 20, scope: !6344)
!6344 = distinct !DILexicalBlock(scope: !6342, file: !868, line: 843, column: 13)
!6345 = !DILocation(line: 843, column: 13, scope: !6342)
!6346 = !DILocation(line: 844, column: 13, scope: !6347)
!6347 = distinct !DILexicalBlock(scope: !6344, file: !868, line: 843, column: 32)
!6348 = !DILocation(line: 850, column: 1, scope: !6293)
!6349 = distinct !DISubprogram(name: "hal_uart_register_callback", scope: !868, file: !868, line: 891, type: !6350, scopeLine: 894, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !6352)
!6350 = !DISubroutineType(types: !6351)
!6351 = !{!5867, !942, !951, !88}
!6352 = !{!6353, !6354, !6355, !6356, !6357, !6358, !6359, !6360}
!6353 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6349, file: !868, line: 891, type: !942)
!6354 = !DILocalVariable(name: "user_callback", arg: 2, scope: !6349, file: !868, line: 892, type: !951)
!6355 = !DILocalVariable(name: "user_data", arg: 3, scope: !6349, file: !868, line: 893, type: !88)
!6356 = !DILocalVariable(name: "tx_dma_channel", scope: !6349, file: !868, line: 895, type: !4728)
!6357 = !DILocalVariable(name: "rx_dma_channel", scope: !6349, file: !868, line: 895, type: !4728)
!6358 = !DILocalVariable(name: "irq_status", scope: !6349, file: !868, line: 896, type: !61)
!6359 = !DILocalVariable(name: "status", scope: !6349, file: !868, line: 897, type: !4727)
!6360 = !DILocalVariable(name: "nvic_status", scope: !6349, file: !868, line: 898, type: !1077)
!6361 = !DILocation(line: 0, scope: !6349)
!6362 = !DILocation(line: 900, column: 11, scope: !6363)
!6363 = distinct !DILexicalBlock(scope: !6349, file: !868, line: 900, column: 9)
!6364 = !DILocation(line: 900, column: 42, scope: !6363)
!6365 = !DILocation(line: 905, column: 18, scope: !6349)
!6366 = !DILocation(line: 906, column: 9, scope: !6367)
!6367 = distinct !DILexicalBlock(scope: !6349, file: !868, line: 906, column: 9)
!6368 = !DILocation(line: 906, column: 36, scope: !6367)
!6369 = !DILocation(line: 906, column: 9, scope: !6349)
!6370 = !DILocation(line: 911, column: 22, scope: !6349)
!6371 = !DILocation(line: 912, column: 22, scope: !6349)
!6372 = !DILocation(line: 914, column: 32, scope: !6349)
!6373 = !DILocation(line: 914, column: 37, scope: !6349)
!6374 = !DILocation(line: 915, column: 32, scope: !6349)
!6375 = !DILocation(line: 915, column: 36, scope: !6349)
!6376 = !DILocation(line: 917, column: 91, scope: !6349)
!6377 = !DILocation(line: 917, column: 56, scope: !6349)
!6378 = !DILocation(line: 917, column: 5, scope: !6349)
!6379 = !DILocation(line: 918, column: 80, scope: !6349)
!6380 = !DILocation(line: 918, column: 14, scope: !6349)
!6381 = !DILocation(line: 919, column: 16, scope: !6382)
!6382 = distinct !DILexicalBlock(scope: !6349, file: !868, line: 919, column: 9)
!6383 = !DILocation(line: 919, column: 9, scope: !6349)
!6384 = !DILocation(line: 920, column: 9, scope: !6385)
!6385 = distinct !DILexicalBlock(scope: !6382, file: !868, line: 919, column: 28)
!6386 = !DILocation(line: 921, column: 9, scope: !6385)
!6387 = !DILocation(line: 924, column: 97, scope: !6349)
!6388 = !DILocation(line: 924, column: 56, scope: !6349)
!6389 = !DILocation(line: 924, column: 5, scope: !6349)
!6390 = !DILocation(line: 925, column: 80, scope: !6349)
!6391 = !DILocation(line: 925, column: 14, scope: !6349)
!6392 = !DILocation(line: 926, column: 16, scope: !6393)
!6393 = distinct !DILexicalBlock(scope: !6349, file: !868, line: 926, column: 9)
!6394 = !DILocation(line: 926, column: 9, scope: !6349)
!6395 = !DILocation(line: 927, column: 9, scope: !6396)
!6396 = distinct !DILexicalBlock(scope: !6393, file: !868, line: 926, column: 28)
!6397 = !DILocation(line: 928, column: 9, scope: !6396)
!6398 = !DILocation(line: 931, column: 49, scope: !6349)
!6399 = !DILocation(line: 931, column: 19, scope: !6349)
!6400 = !DILocation(line: 932, column: 21, scope: !6401)
!6401 = distinct !DILexicalBlock(scope: !6349, file: !868, line: 932, column: 9)
!6402 = !DILocation(line: 932, column: 9, scope: !6349)
!6403 = !DILocation(line: 933, column: 9, scope: !6404)
!6404 = distinct !DILexicalBlock(scope: !6401, file: !868, line: 932, column: 44)
!6405 = !DILocation(line: 934, column: 9, scope: !6404)
!6406 = !DILocation(line: 938, column: 5, scope: !6349)
!6407 = !DILocation(line: 940, column: 32, scope: !6349)
!6408 = !DILocation(line: 944, column: 5, scope: !6349)
!6409 = !DILocation(line: 945, column: 1, scope: !6349)
!6410 = distinct !DISubprogram(name: "uart_dma_callback_handler", scope: !868, file: !868, line: 303, type: !543, scopeLine: 304, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !6411)
!6411 = !{!6412, !6413, !6414}
!6412 = !DILocalVariable(name: "event", arg: 1, scope: !6410, file: !868, line: 303, type: !545)
!6413 = !DILocalVariable(name: "user_data", arg: 2, scope: !6410, file: !868, line: 303, type: !88)
!6414 = !DILocalVariable(name: "callback_data", scope: !6410, file: !868, line: 305, type: !935)
!6415 = !DILocation(line: 0, scope: !6410)
!6416 = !DILocation(line: 307, column: 24, scope: !6417)
!6417 = distinct !DILexicalBlock(scope: !6410, file: !868, line: 307, column: 9)
!6418 = !DILocation(line: 0, scope: !6417)
!6419 = !DILocation(line: 307, column: 9, scope: !6410)
!6420 = !DILocation(line: 308, column: 9, scope: !6421)
!6421 = distinct !DILexicalBlock(scope: !6417, file: !868, line: 307, column: 39)
!6422 = !DILocation(line: 309, column: 5, scope: !6421)
!6423 = !DILocation(line: 310, column: 9, scope: !6424)
!6424 = distinct !DILexicalBlock(scope: !6417, file: !868, line: 309, column: 12)
!6425 = !DILocation(line: 312, column: 1, scope: !6410)
!6426 = distinct !DISubprogram(name: "uart_start_dma_transmission", scope: !868, file: !868, line: 852, type: !5839, scopeLine: 853, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !6427)
!6427 = !{!6428, !6429, !6430, !6431, !6432}
!6428 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6426, file: !868, line: 852, type: !942)
!6429 = !DILocalVariable(name: "uartx", scope: !6426, file: !868, line: 854, type: !5675)
!6430 = !DILocalVariable(name: "tx_dma_channel", scope: !6426, file: !868, line: 855, type: !4728)
!6431 = !DILocalVariable(name: "rx_dma_channel", scope: !6426, file: !868, line: 855, type: !4728)
!6432 = !DILocalVariable(name: "status", scope: !6426, file: !868, line: 856, type: !4727)
!6433 = !DILocation(line: 0, scope: !6426)
!6434 = !DILocation(line: 858, column: 13, scope: !6426)
!6435 = !DILocation(line: 859, column: 22, scope: !6426)
!6436 = !DILocation(line: 860, column: 22, scope: !6426)
!6437 = !DILocation(line: 866, column: 5, scope: !6426)
!6438 = !DILocation(line: 867, column: 25, scope: !6426)
!6439 = !DILocation(line: 867, column: 5, scope: !6426)
!6440 = !DILocation(line: 868, column: 14, scope: !6426)
!6441 = !DILocation(line: 869, column: 16, scope: !6442)
!6442 = distinct !DILexicalBlock(scope: !6426, file: !868, line: 869, column: 9)
!6443 = !DILocation(line: 869, column: 9, scope: !6426)
!6444 = !DILocation(line: 870, column: 9, scope: !6445)
!6445 = distinct !DILexicalBlock(scope: !6442, file: !868, line: 869, column: 28)
!6446 = !DILocation(line: 873, column: 14, scope: !6426)
!6447 = !DILocation(line: 874, column: 16, scope: !6448)
!6448 = distinct !DILexicalBlock(scope: !6426, file: !868, line: 874, column: 9)
!6449 = !DILocation(line: 874, column: 9, scope: !6426)
!6450 = !DILocation(line: 875, column: 9, scope: !6451)
!6451 = distinct !DILexicalBlock(scope: !6448, file: !868, line: 874, column: 28)
!6452 = !DILocation(line: 878, column: 14, scope: !6426)
!6453 = !DILocation(line: 879, column: 16, scope: !6454)
!6454 = distinct !DILexicalBlock(scope: !6426, file: !868, line: 879, column: 9)
!6455 = !DILocation(line: 879, column: 9, scope: !6426)
!6456 = !DILocation(line: 880, column: 9, scope: !6457)
!6457 = distinct !DILexicalBlock(scope: !6454, file: !868, line: 879, column: 28)
!6458 = !DILocation(line: 883, column: 14, scope: !6426)
!6459 = !DILocation(line: 884, column: 16, scope: !6460)
!6460 = distinct !DILexicalBlock(scope: !6426, file: !868, line: 884, column: 9)
!6461 = !DILocation(line: 884, column: 9, scope: !6426)
!6462 = !DILocation(line: 885, column: 9, scope: !6463)
!6463 = distinct !DILexicalBlock(scope: !6460, file: !868, line: 884, column: 28)
!6464 = !DILocation(line: 888, column: 5, scope: !6426)
!6465 = !DILocation(line: 889, column: 1, scope: !6426)
!6466 = distinct !DISubprogram(name: "hal_uart_get_available_send_space", scope: !868, file: !868, line: 947, type: !6246, scopeLine: 948, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !6467)
!6467 = !{!6468, !6469, !6470, !6471}
!6468 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6466, file: !868, line: 947, type: !942)
!6469 = !DILocalVariable(name: "channel", scope: !6466, file: !868, line: 949, type: !4728)
!6470 = !DILocalVariable(name: "roomleft", scope: !6466, file: !868, line: 950, type: !61)
!6471 = !DILocalVariable(name: "status", scope: !6466, file: !868, line: 951, type: !4727)
!6472 = !DILocation(line: 0, scope: !6466)
!6473 = !DILocation(line: 950, column: 5, scope: !6466)
!6474 = !DILocation(line: 953, column: 10, scope: !6475)
!6475 = distinct !DILexicalBlock(scope: !6466, file: !868, line: 953, column: 9)
!6476 = !DILocation(line: 953, column: 9, scope: !6466)
!6477 = !DILocation(line: 957, column: 9, scope: !6478)
!6478 = distinct !DILexicalBlock(scope: !6466, file: !868, line: 957, column: 9)
!6479 = !DILocation(line: 957, column: 36, scope: !6478)
!6480 = !DILocation(line: 957, column: 9, scope: !6466)
!6481 = !DILocation(line: 961, column: 15, scope: !6466)
!6482 = !DILocation(line: 962, column: 14, scope: !6466)
!6483 = !DILocation(line: 963, column: 16, scope: !6484)
!6484 = distinct !DILexicalBlock(scope: !6466, file: !868, line: 963, column: 9)
!6485 = !DILocation(line: 963, column: 9, scope: !6466)
!6486 = !DILocation(line: 964, column: 9, scope: !6487)
!6487 = distinct !DILexicalBlock(scope: !6484, file: !868, line: 963, column: 28)
!6488 = !DILocation(line: 968, column: 12, scope: !6466)
!6489 = !DILocation(line: 968, column: 5, scope: !6466)
!6490 = !DILocation(line: 969, column: 1, scope: !6466)
!6491 = distinct !DISubprogram(name: "hal_uart_get_available_receive_bytes", scope: !868, file: !868, line: 971, type: !6246, scopeLine: 972, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !6492)
!6492 = !{!6493, !6494, !6495, !6496}
!6493 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6491, file: !868, line: 971, type: !942)
!6494 = !DILocalVariable(name: "channel", scope: !6491, file: !868, line: 973, type: !4728)
!6495 = !DILocalVariable(name: "avail", scope: !6491, file: !868, line: 974, type: !61)
!6496 = !DILocalVariable(name: "status", scope: !6491, file: !868, line: 975, type: !4727)
!6497 = !DILocation(line: 0, scope: !6491)
!6498 = !DILocation(line: 974, column: 5, scope: !6491)
!6499 = !DILocation(line: 977, column: 10, scope: !6500)
!6500 = distinct !DILexicalBlock(scope: !6491, file: !868, line: 977, column: 9)
!6501 = !DILocation(line: 977, column: 9, scope: !6491)
!6502 = !DILocation(line: 981, column: 9, scope: !6503)
!6503 = distinct !DILexicalBlock(scope: !6491, file: !868, line: 981, column: 9)
!6504 = !DILocation(line: 981, column: 36, scope: !6503)
!6505 = !DILocation(line: 981, column: 9, scope: !6491)
!6506 = !DILocation(line: 985, column: 15, scope: !6491)
!6507 = !DILocation(line: 986, column: 14, scope: !6491)
!6508 = !DILocation(line: 987, column: 16, scope: !6509)
!6509 = distinct !DILexicalBlock(scope: !6491, file: !868, line: 987, column: 9)
!6510 = !DILocation(line: 987, column: 9, scope: !6491)
!6511 = !DILocation(line: 988, column: 9, scope: !6512)
!6512 = distinct !DILexicalBlock(scope: !6509, file: !868, line: 987, column: 28)
!6513 = !DILocation(line: 992, column: 12, scope: !6491)
!6514 = !DILocation(line: 992, column: 5, scope: !6491)
!6515 = !DILocation(line: 993, column: 1, scope: !6491)
!6516 = distinct !DISubprogram(name: "hal_uart_set_hardware_flowcontrol", scope: !868, file: !868, line: 995, type: !6035, scopeLine: 996, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !6517)
!6517 = !{!6518, !6519}
!6518 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6516, file: !868, line: 995, type: !942)
!6519 = !DILocalVariable(name: "uartx", scope: !6516, file: !868, line: 997, type: !5675)
!6520 = !DILocation(line: 0, scope: !6516)
!6521 = !DILocation(line: 999, column: 10, scope: !6522)
!6522 = distinct !DILexicalBlock(scope: !6516, file: !868, line: 999, column: 9)
!6523 = !DILocation(line: 999, column: 9, scope: !6516)
!6524 = !DILocation(line: 1003, column: 9, scope: !6525)
!6525 = distinct !DILexicalBlock(scope: !6516, file: !868, line: 1003, column: 9)
!6526 = !DILocation(line: 1003, column: 36, scope: !6525)
!6527 = !DILocation(line: 1003, column: 9, scope: !6516)
!6528 = !DILocation(line: 1007, column: 13, scope: !6516)
!6529 = !DILocation(line: 1009, column: 5, scope: !6516)
!6530 = !DILocation(line: 1015, column: 5, scope: !6516)
!6531 = !DILocation(line: 1016, column: 1, scope: !6516)
!6532 = distinct !DISubprogram(name: "hal_uart_set_software_flowcontrol", scope: !868, file: !868, line: 1018, type: !6533, scopeLine: 1022, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !6535)
!6533 = !DISubroutineType(types: !6534)
!6534 = !{!5867, !942, !463, !463, !463}
!6535 = !{!6536, !6537, !6538, !6539, !6540}
!6536 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6532, file: !868, line: 1018, type: !942)
!6537 = !DILocalVariable(name: "xon", arg: 2, scope: !6532, file: !868, line: 1019, type: !463)
!6538 = !DILocalVariable(name: "xoff", arg: 3, scope: !6532, file: !868, line: 1020, type: !463)
!6539 = !DILocalVariable(name: "escape_character", arg: 4, scope: !6532, file: !868, line: 1021, type: !463)
!6540 = !DILocalVariable(name: "uartx", scope: !6532, file: !868, line: 1023, type: !5675)
!6541 = !DILocation(line: 0, scope: !6532)
!6542 = !DILocation(line: 1025, column: 10, scope: !6543)
!6543 = distinct !DILexicalBlock(scope: !6532, file: !868, line: 1025, column: 9)
!6544 = !DILocation(line: 1025, column: 9, scope: !6532)
!6545 = !DILocation(line: 1029, column: 9, scope: !6546)
!6546 = distinct !DILexicalBlock(scope: !6532, file: !868, line: 1029, column: 9)
!6547 = !DILocation(line: 1029, column: 36, scope: !6546)
!6548 = !DILocation(line: 1029, column: 9, scope: !6532)
!6549 = !DILocation(line: 1033, column: 13, scope: !6532)
!6550 = !DILocation(line: 1035, column: 5, scope: !6532)
!6551 = !DILocation(line: 1044, column: 5, scope: !6532)
!6552 = !DILocation(line: 1045, column: 1, scope: !6532)
!6553 = distinct !DISubprogram(name: "hal_uart_disable_flowcontrol", scope: !868, file: !868, line: 1047, type: !6035, scopeLine: 1048, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !6554)
!6554 = !{!6555, !6556}
!6555 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6553, file: !868, line: 1047, type: !942)
!6556 = !DILocalVariable(name: "uartx", scope: !6553, file: !868, line: 1049, type: !5675)
!6557 = !DILocation(line: 0, scope: !6553)
!6558 = !DILocation(line: 1051, column: 10, scope: !6559)
!6559 = distinct !DILexicalBlock(scope: !6553, file: !868, line: 1051, column: 9)
!6560 = !DILocation(line: 1051, column: 9, scope: !6553)
!6561 = !DILocation(line: 1055, column: 9, scope: !6562)
!6562 = distinct !DILexicalBlock(scope: !6553, file: !868, line: 1055, column: 9)
!6563 = !DILocation(line: 1055, column: 36, scope: !6562)
!6564 = !DILocation(line: 1055, column: 9, scope: !6553)
!6565 = !DILocation(line: 1059, column: 13, scope: !6553)
!6566 = !DILocation(line: 1061, column: 5, scope: !6553)
!6567 = !DILocation(line: 1067, column: 5, scope: !6553)
!6568 = !DILocation(line: 1068, column: 1, scope: !6553)
!6569 = distinct !DISubprogram(name: "hal_uart_set_dma", scope: !868, file: !868, line: 1071, type: !6570, scopeLine: 1072, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !6574)
!6570 = !DISubroutineType(types: !6571)
!6571 = !{!5867, !942, !6572}
!6572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6573, size: 32)
!6573 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !965)
!6574 = !{!6575, !6576, !6577, !6578, !6584, !6585, !6586}
!6575 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6569, file: !868, line: 1071, type: !942)
!6576 = !DILocalVariable(name: "dma_config", arg: 2, scope: !6569, file: !868, line: 1071, type: !6572)
!6577 = !DILocalVariable(name: "irq_status", scope: !6569, file: !868, line: 1073, type: !61)
!6578 = !DILocalVariable(name: "internal_dma_config", scope: !6569, file: !868, line: 1074, type: !6579)
!6579 = !DIDerivedType(tag: DW_TAG_typedef, name: "vdma_config_t", file: !354, line: 283, baseType: !6580)
!6580 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !354, line: 280, size: 64, elements: !6581)
!6581 = !{!6582, !6583}
!6582 = !DIDerivedType(tag: DW_TAG_member, name: "base_address", scope: !6580, file: !354, line: 281, baseType: !61, size: 32)
!6583 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6580, file: !354, line: 282, baseType: !61, size: 32, offset: 32)
!6584 = !DILocalVariable(name: "tx_dma_channel", scope: !6569, file: !868, line: 1075, type: !4728)
!6585 = !DILocalVariable(name: "rx_dma_channel", scope: !6569, file: !868, line: 1075, type: !4728)
!6586 = !DILocalVariable(name: "status", scope: !6569, file: !868, line: 1076, type: !4727)
!6587 = !DILocation(line: 0, scope: !6569)
!6588 = !DILocation(line: 1074, column: 5, scope: !6569)
!6589 = !DILocation(line: 1074, column: 19, scope: !6569)
!6590 = !DILocation(line: 1078, column: 10, scope: !6591)
!6591 = distinct !DILexicalBlock(scope: !6569, file: !868, line: 1078, column: 9)
!6592 = !DILocation(line: 1078, column: 9, scope: !6569)
!6593 = !DILocation(line: 1081, column: 22, scope: !6594)
!6594 = distinct !DILexicalBlock(scope: !6569, file: !868, line: 1081, column: 9)
!6595 = !DILocation(line: 1081, column: 40, scope: !6594)
!6596 = !DILocation(line: 1081, column: 49, scope: !6594)
!6597 = !DILocation(line: 1082, column: 22, scope: !6594)
!6598 = !DILocation(line: 1082, column: 43, scope: !6594)
!6599 = !DILocation(line: 1081, column: 9, scope: !6569)
!6600 = !DILocation(line: 1085, column: 22, scope: !6601)
!6601 = distinct !DILexicalBlock(scope: !6569, file: !868, line: 1085, column: 9)
!6602 = !DILocation(line: 1085, column: 45, scope: !6601)
!6603 = !DILocation(line: 1085, column: 76, scope: !6601)
!6604 = !DILocation(line: 1086, column: 22, scope: !6601)
!6605 = !DILocation(line: 1086, column: 48, scope: !6601)
!6606 = !DILocation(line: 1086, column: 79, scope: !6601)
!6607 = !DILocation(line: 1090, column: 22, scope: !6608)
!6608 = distinct !DILexicalBlock(scope: !6569, file: !868, line: 1090, column: 9)
!6609 = !DILocation(line: 1090, column: 48, scope: !6608)
!6610 = !DILocation(line: 1090, column: 79, scope: !6608)
!6611 = !DILocation(line: 1091, column: 22, scope: !6608)
!6612 = !DILocation(line: 1091, column: 51, scope: !6608)
!6613 = !DILocation(line: 1091, column: 82, scope: !6608)
!6614 = !DILocation(line: 1092, column: 22, scope: !6608)
!6615 = !DILocation(line: 1092, column: 47, scope: !6608)
!6616 = !DILocation(line: 1092, column: 78, scope: !6608)
!6617 = !DILocation(line: 1098, column: 9, scope: !6618)
!6618 = distinct !DILexicalBlock(scope: !6569, file: !868, line: 1098, column: 9)
!6619 = !DILocation(line: 1098, column: 36, scope: !6618)
!6620 = !DILocation(line: 1098, column: 9, scope: !6569)
!6621 = !DILocation(line: 1102, column: 22, scope: !6569)
!6622 = !DILocation(line: 1103, column: 22, scope: !6569)
!6623 = !DILocation(line: 1105, column: 14, scope: !6569)
!6624 = !DILocation(line: 1106, column: 16, scope: !6625)
!6625 = distinct !DILexicalBlock(scope: !6569, file: !868, line: 1106, column: 9)
!6626 = !DILocation(line: 1106, column: 9, scope: !6569)
!6627 = !DILocation(line: 1107, column: 9, scope: !6628)
!6628 = distinct !DILexicalBlock(scope: !6625, file: !868, line: 1106, column: 28)
!6629 = !DILocation(line: 1110, column: 62, scope: !6569)
!6630 = !DILocation(line: 1110, column: 40, scope: !6569)
!6631 = !DILocation(line: 1110, column: 25, scope: !6569)
!6632 = !DILocation(line: 1110, column: 38, scope: !6569)
!6633 = !DILocation(line: 1111, column: 44, scope: !6569)
!6634 = !DILocation(line: 1111, column: 25, scope: !6569)
!6635 = !DILocation(line: 1111, column: 30, scope: !6569)
!6636 = !DILocation(line: 1112, column: 14, scope: !6569)
!6637 = !DILocation(line: 1113, column: 16, scope: !6638)
!6638 = distinct !DILexicalBlock(scope: !6569, file: !868, line: 1113, column: 9)
!6639 = !DILocation(line: 1113, column: 9, scope: !6569)
!6640 = !DILocation(line: 1114, column: 9, scope: !6641)
!6641 = distinct !DILexicalBlock(scope: !6638, file: !868, line: 1113, column: 28)
!6642 = !DILocation(line: 1117, column: 61, scope: !6569)
!6643 = !DILocation(line: 1117, column: 14, scope: !6569)
!6644 = !DILocation(line: 1118, column: 16, scope: !6645)
!6645 = distinct !DILexicalBlock(scope: !6569, file: !868, line: 1118, column: 9)
!6646 = !DILocation(line: 1118, column: 9, scope: !6569)
!6647 = !DILocation(line: 1119, column: 9, scope: !6648)
!6648 = distinct !DILexicalBlock(scope: !6645, file: !868, line: 1118, column: 28)
!6649 = !DILocation(line: 1123, column: 14, scope: !6569)
!6650 = !DILocation(line: 1124, column: 16, scope: !6651)
!6651 = distinct !DILexicalBlock(scope: !6569, file: !868, line: 1124, column: 9)
!6652 = !DILocation(line: 1124, column: 9, scope: !6569)
!6653 = !DILocation(line: 1125, column: 9, scope: !6654)
!6654 = distinct !DILexicalBlock(scope: !6651, file: !868, line: 1124, column: 28)
!6655 = !DILocation(line: 1128, column: 62, scope: !6569)
!6656 = !DILocation(line: 1128, column: 40, scope: !6569)
!6657 = !DILocation(line: 1128, column: 38, scope: !6569)
!6658 = !DILocation(line: 1129, column: 44, scope: !6569)
!6659 = !DILocation(line: 1129, column: 30, scope: !6569)
!6660 = !DILocation(line: 1130, column: 14, scope: !6569)
!6661 = !DILocation(line: 1131, column: 16, scope: !6662)
!6662 = distinct !DILexicalBlock(scope: !6569, file: !868, line: 1131, column: 9)
!6663 = !DILocation(line: 1131, column: 9, scope: !6569)
!6664 = !DILocation(line: 1132, column: 9, scope: !6665)
!6665 = distinct !DILexicalBlock(scope: !6662, file: !868, line: 1131, column: 28)
!6666 = !DILocation(line: 1135, column: 61, scope: !6569)
!6667 = !DILocation(line: 1135, column: 14, scope: !6569)
!6668 = !DILocation(line: 1136, column: 16, scope: !6669)
!6669 = distinct !DILexicalBlock(scope: !6569, file: !868, line: 1136, column: 9)
!6670 = !DILocation(line: 1136, column: 9, scope: !6569)
!6671 = !DILocation(line: 1137, column: 9, scope: !6672)
!6672 = distinct !DILexicalBlock(scope: !6669, file: !868, line: 1136, column: 28)
!6673 = !DILocation(line: 1140, column: 64, scope: !6569)
!6674 = !DILocation(line: 1140, column: 14, scope: !6569)
!6675 = !DILocation(line: 1141, column: 16, scope: !6676)
!6676 = distinct !DILexicalBlock(scope: !6569, file: !868, line: 1141, column: 9)
!6677 = !DILocation(line: 1141, column: 9, scope: !6569)
!6678 = !DILocation(line: 1142, column: 9, scope: !6679)
!6679 = distinct !DILexicalBlock(scope: !6676, file: !868, line: 1141, column: 28)
!6680 = !DILocation(line: 1146, column: 18, scope: !6569)
!6681 = !DILocation(line: 1147, column: 66, scope: !6569)
!6682 = !DILocation(line: 1147, column: 34, scope: !6569)
!6683 = !DILocation(line: 1147, column: 52, scope: !6569)
!6684 = !DILocation(line: 1148, column: 71, scope: !6569)
!6685 = !DILocation(line: 1148, column: 34, scope: !6569)
!6686 = !DILocation(line: 1148, column: 57, scope: !6569)
!6687 = !DILocation(line: 1149, column: 74, scope: !6569)
!6688 = !DILocation(line: 1149, column: 34, scope: !6569)
!6689 = !DILocation(line: 1149, column: 60, scope: !6569)
!6690 = !DILocation(line: 1150, column: 73, scope: !6569)
!6691 = !DILocation(line: 1150, column: 34, scope: !6569)
!6692 = !DILocation(line: 1150, column: 59, scope: !6569)
!6693 = !DILocation(line: 1151, column: 69, scope: !6569)
!6694 = !DILocation(line: 1151, column: 34, scope: !6569)
!6695 = !DILocation(line: 1151, column: 55, scope: !6569)
!6696 = !DILocation(line: 1152, column: 74, scope: !6569)
!6697 = !DILocation(line: 1152, column: 34, scope: !6569)
!6698 = !DILocation(line: 1152, column: 60, scope: !6569)
!6699 = !DILocation(line: 1153, column: 77, scope: !6569)
!6700 = !DILocation(line: 1153, column: 34, scope: !6569)
!6701 = !DILocation(line: 1153, column: 63, scope: !6569)
!6702 = !DILocation(line: 1154, column: 5, scope: !6569)
!6703 = !DILocation(line: 1156, column: 5, scope: !6569)
!6704 = !DILocation(line: 1157, column: 1, scope: !6569)
!6705 = distinct !DISubprogram(name: "uart_set_baudrate", scope: !2734, file: !2734, line: 52, type: !6706, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2733, retainedNodes: !6763)
!6706 = !DISubroutineType(types: !6707)
!6707 = !{null, !6708, !61}
!6708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6709, size: 32)
!6709 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_REGISTER_T", file: !56, line: 588, baseType: !6710)
!6710 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 542, size: 800, elements: !6711)
!6711 = !{!6712, !6718, !6723, !6729, !6730, !6735, !6740, !6741, !6746, !6747, !6748, !6749, !6750, !6751, !6752, !6753, !6754, !6755, !6756, !6757, !6758, !6759, !6760, !6761, !6762}
!6712 = !DIDerivedType(tag: DW_TAG_member, name: "RBR_THR_DLL", scope: !6710, file: !56, line: 547, baseType: !6713, size: 32)
!6713 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6710, file: !56, line: 543, size: 32, elements: !6714)
!6714 = !{!6715, !6716, !6717}
!6715 = !DIDerivedType(tag: DW_TAG_member, name: "RBR", scope: !6713, file: !56, line: 544, baseType: !272, size: 32)
!6716 = !DIDerivedType(tag: DW_TAG_member, name: "THR", scope: !6713, file: !56, line: 545, baseType: !60, size: 32)
!6717 = !DIDerivedType(tag: DW_TAG_member, name: "DLL", scope: !6713, file: !56, line: 546, baseType: !60, size: 32)
!6718 = !DIDerivedType(tag: DW_TAG_member, name: "IER_DLM", scope: !6710, file: !56, line: 551, baseType: !6719, size: 32, offset: 32)
!6719 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6710, file: !56, line: 548, size: 32, elements: !6720)
!6720 = !{!6721, !6722}
!6721 = !DIDerivedType(tag: DW_TAG_member, name: "IER", scope: !6719, file: !56, line: 549, baseType: !60, size: 32)
!6722 = !DIDerivedType(tag: DW_TAG_member, name: "DLM", scope: !6719, file: !56, line: 550, baseType: !60, size: 32)
!6723 = !DIDerivedType(tag: DW_TAG_member, name: "IIR_FCR_EFR", scope: !6710, file: !56, line: 556, baseType: !6724, size: 32, offset: 64)
!6724 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6710, file: !56, line: 552, size: 32, elements: !6725)
!6725 = !{!6726, !6727, !6728}
!6726 = !DIDerivedType(tag: DW_TAG_member, name: "IIR", scope: !6724, file: !56, line: 553, baseType: !272, size: 32)
!6727 = !DIDerivedType(tag: DW_TAG_member, name: "FCR", scope: !6724, file: !56, line: 554, baseType: !60, size: 32)
!6728 = !DIDerivedType(tag: DW_TAG_member, name: "EFR", scope: !6724, file: !56, line: 555, baseType: !60, size: 32)
!6729 = !DIDerivedType(tag: DW_TAG_member, name: "LCR", scope: !6710, file: !56, line: 557, baseType: !60, size: 32, offset: 96)
!6730 = !DIDerivedType(tag: DW_TAG_member, name: "MCR_XON1", scope: !6710, file: !56, line: 561, baseType: !6731, size: 32, offset: 128)
!6731 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6710, file: !56, line: 558, size: 32, elements: !6732)
!6732 = !{!6733, !6734}
!6733 = !DIDerivedType(tag: DW_TAG_member, name: "MCR", scope: !6731, file: !56, line: 559, baseType: !60, size: 32)
!6734 = !DIDerivedType(tag: DW_TAG_member, name: "XON1", scope: !6731, file: !56, line: 560, baseType: !60, size: 32)
!6735 = !DIDerivedType(tag: DW_TAG_member, name: "LSR_XON2", scope: !6710, file: !56, line: 565, baseType: !6736, size: 32, offset: 160)
!6736 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6710, file: !56, line: 562, size: 32, elements: !6737)
!6737 = !{!6738, !6739}
!6738 = !DIDerivedType(tag: DW_TAG_member, name: "LSR", scope: !6736, file: !56, line: 563, baseType: !272, size: 32)
!6739 = !DIDerivedType(tag: DW_TAG_member, name: "XON2", scope: !6736, file: !56, line: 564, baseType: !60, size: 32)
!6740 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF1", scope: !6710, file: !56, line: 566, baseType: !60, size: 32, offset: 192)
!6741 = !DIDerivedType(tag: DW_TAG_member, name: "SCR_XOFF2", scope: !6710, file: !56, line: 570, baseType: !6742, size: 32, offset: 224)
!6742 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6710, file: !56, line: 567, size: 32, elements: !6743)
!6743 = !{!6744, !6745}
!6744 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !6742, file: !56, line: 568, baseType: !60, size: 32)
!6745 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF2", scope: !6742, file: !56, line: 569, baseType: !60, size: 32)
!6746 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_EN", scope: !6710, file: !56, line: 571, baseType: !60, size: 32, offset: 256)
!6747 = !DIDerivedType(tag: DW_TAG_member, name: "HIGHSPEED", scope: !6710, file: !56, line: 572, baseType: !60, size: 32, offset: 288)
!6748 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_COUNT", scope: !6710, file: !56, line: 573, baseType: !60, size: 32, offset: 320)
!6749 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_POINT", scope: !6710, file: !56, line: 574, baseType: !60, size: 32, offset: 352)
!6750 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_REG", scope: !6710, file: !56, line: 575, baseType: !272, size: 32, offset: 384)
!6751 = !DIDerivedType(tag: DW_TAG_member, name: "RATEFIX_AD", scope: !6710, file: !56, line: 576, baseType: !60, size: 32, offset: 416)
!6752 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUDSAMPLE", scope: !6710, file: !56, line: 577, baseType: !60, size: 32, offset: 448)
!6753 = !DIDerivedType(tag: DW_TAG_member, name: "GUARD", scope: !6710, file: !56, line: 578, baseType: !60, size: 32, offset: 480)
!6754 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_DAT", scope: !6710, file: !56, line: 579, baseType: !60, size: 32, offset: 512)
!6755 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_EN", scope: !6710, file: !56, line: 580, baseType: !60, size: 32, offset: 544)
!6756 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEP_EN", scope: !6710, file: !56, line: 581, baseType: !60, size: 32, offset: 576)
!6757 = !DIDerivedType(tag: DW_TAG_member, name: "DMA_EN", scope: !6710, file: !56, line: 582, baseType: !60, size: 32, offset: 608)
!6758 = !DIDerivedType(tag: DW_TAG_member, name: "RXTRI_AD", scope: !6710, file: !56, line: 583, baseType: !60, size: 32, offset: 640)
!6759 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_L", scope: !6710, file: !56, line: 584, baseType: !60, size: 32, offset: 672)
!6760 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_M", scope: !6710, file: !56, line: 585, baseType: !60, size: 32, offset: 704)
!6761 = !DIDerivedType(tag: DW_TAG_member, name: "FCR_RD", scope: !6710, file: !56, line: 586, baseType: !272, size: 32, offset: 736)
!6762 = !DIDerivedType(tag: DW_TAG_member, name: "TX_ACTIVE_EN", scope: !6710, file: !56, line: 587, baseType: !60, size: 32, offset: 768)
!6763 = !{!6764, !6765, !6766, !6767, !6768, !6769, !6770, !6771, !6772, !6773, !6774, !6776}
!6764 = !DILocalVariable(name: "uartx", arg: 1, scope: !6705, file: !2734, line: 52, type: !6708)
!6765 = !DILocalVariable(name: "actual_baudrate", arg: 2, scope: !6705, file: !2734, line: 52, type: !61)
!6766 = !DILocalVariable(name: "uart_clock", scope: !6705, file: !2734, line: 54, type: !61)
!6767 = !DILocalVariable(name: "integer", scope: !6705, file: !2734, line: 54, type: !61)
!6768 = !DILocalVariable(name: "remainder", scope: !6705, file: !2734, line: 54, type: !61)
!6769 = !DILocalVariable(name: "fraction", scope: !6705, file: !2734, line: 54, type: !61)
!6770 = !DILocalVariable(name: "dll_dlm", scope: !6705, file: !2734, line: 55, type: !61)
!6771 = !DILocalVariable(name: "sample_count", scope: !6705, file: !2734, line: 55, type: !61)
!6772 = !DILocalVariable(name: "sample_point", scope: !6705, file: !2734, line: 55, type: !61)
!6773 = !DILocalVariable(name: "temp_lcr", scope: !6705, file: !2734, line: 55, type: !61)
!6774 = !DILocalVariable(name: "fraction_L_mapping", scope: !6705, file: !2734, line: 56, type: !6775)
!6775 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 320, elements: !489)
!6776 = !DILocalVariable(name: "fraction_M_mapping", scope: !6705, file: !2734, line: 57, type: !6775)
!6777 = !DILocation(line: 0, scope: !6705)
!6778 = !DILocation(line: 56, column: 14, scope: !6705)
!6779 = !DILocation(line: 57, column: 5, scope: !6705)
!6780 = !DILocation(line: 57, column: 14, scope: !6705)
!6781 = !DILocation(line: 59, column: 12, scope: !6705)
!6782 = !DILocation(line: 59, column: 23, scope: !6705)
!6783 = !DILocation(line: 60, column: 12, scope: !6705)
!6784 = !DILocation(line: 60, column: 22, scope: !6705)
!6785 = !DILocation(line: 61, column: 12, scope: !6705)
!6786 = !DILocation(line: 61, column: 22, scope: !6705)
!6787 = !DILocation(line: 63, column: 9, scope: !6788)
!6788 = distinct !DILexicalBlock(scope: !6705, file: !2734, line: 63, column: 9)
!6789 = !DILocation(line: 63, column: 9, scope: !6705)
!6790 = !DILocation(line: 64, column: 22, scope: !6791)
!6791 = distinct !DILexicalBlock(scope: !6788, file: !2734, line: 63, column: 37)
!6792 = !DILocation(line: 64, column: 45, scope: !6791)
!6793 = !DILocation(line: 65, column: 5, scope: !6791)
!6794 = !DILocation(line: 0, scope: !6788)
!6795 = !DILocation(line: 69, column: 45, scope: !6705)
!6796 = !DILocation(line: 69, column: 26, scope: !6705)
!6797 = !DILocation(line: 70, column: 30, scope: !6705)
!6798 = !DILocation(line: 70, column: 36, scope: !6705)
!6799 = !DILocation(line: 70, column: 63, scope: !6705)
!6800 = !DILocation(line: 71, column: 20, scope: !6801)
!6801 = distinct !DILexicalBlock(scope: !6705, file: !2734, line: 71, column: 9)
!6802 = !DILocation(line: 71, column: 26, scope: !6801)
!6803 = !DILocation(line: 77, column: 5, scope: !6705)
!6804 = !DILocation(line: 77, column: 25, scope: !6705)
!6805 = !DILocation(line: 78, column: 16, scope: !6806)
!6806 = distinct !DILexicalBlock(scope: !6705, file: !2734, line: 77, column: 32)
!6807 = distinct !{!6807, !6803, !6808}
!6808 = !DILocation(line: 80, column: 5, scope: !6705)
!6809 = !DILocation(line: 82, column: 35, scope: !6705)
!6810 = !DILocation(line: 82, column: 66, scope: !6705)
!6811 = !DILocation(line: 84, column: 18, scope: !6705)
!6812 = !DILocation(line: 85, column: 34, scope: !6705)
!6813 = !DILocation(line: 85, column: 39, scope: !6705)
!6814 = !DILocation(line: 87, column: 12, scope: !6705)
!6815 = !DILocation(line: 87, column: 22, scope: !6705)
!6816 = !DILocation(line: 89, column: 23, scope: !6705)
!6817 = !DILocation(line: 90, column: 27, scope: !6705)
!6818 = !DILocation(line: 90, column: 16, scope: !6705)
!6819 = !DILocation(line: 91, column: 38, scope: !6705)
!6820 = !DILocation(line: 91, column: 24, scope: !6705)
!6821 = !DILocation(line: 91, column: 28, scope: !6705)
!6822 = !DILocation(line: 92, column: 35, scope: !6705)
!6823 = !DILocation(line: 92, column: 41, scope: !6705)
!6824 = !DILocation(line: 92, column: 20, scope: !6705)
!6825 = !DILocation(line: 92, column: 24, scope: !6705)
!6826 = !DILocation(line: 93, column: 16, scope: !6705)
!6827 = !DILocation(line: 95, column: 12, scope: !6705)
!6828 = !DILocation(line: 95, column: 25, scope: !6705)
!6829 = !DILocation(line: 96, column: 12, scope: !6705)
!6830 = !DILocation(line: 96, column: 25, scope: !6705)
!6831 = !DILocation(line: 98, column: 24, scope: !6705)
!6832 = !DILocation(line: 98, column: 22, scope: !6705)
!6833 = !DILocation(line: 99, column: 24, scope: !6705)
!6834 = !DILocation(line: 99, column: 22, scope: !6705)
!6835 = !DILocation(line: 101, column: 25, scope: !6836)
!6836 = distinct !DILexicalBlock(scope: !6705, file: !2734, line: 101, column: 9)
!6837 = !DILocation(line: 101, column: 9, scope: !6705)
!6838 = !DILocation(line: 102, column: 16, scope: !6839)
!6839 = distinct !DILexicalBlock(scope: !6836, file: !2734, line: 101, column: 37)
!6840 = !DILocation(line: 102, column: 22, scope: !6839)
!6841 = !DILocation(line: 103, column: 5, scope: !6839)
!6842 = !DILocation(line: 104, column: 1, scope: !6705)
!6843 = distinct !DISubprogram(name: "uart_set_format", scope: !2734, file: !2734, line: 106, type: !6844, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2733, retainedNodes: !6846)
!6844 = !DISubroutineType(types: !6845)
!6845 = !{null, !6708, !5918, !5920, !5922}
!6846 = !{!6847, !6848, !6849, !6850, !6851}
!6847 = !DILocalVariable(name: "uartx", arg: 1, scope: !6843, file: !2734, line: 106, type: !6708)
!6848 = !DILocalVariable(name: "word_length", arg: 2, scope: !6843, file: !2734, line: 107, type: !5918)
!6849 = !DILocalVariable(name: "stop_bit", arg: 3, scope: !6843, file: !2734, line: 108, type: !5920)
!6850 = !DILocalVariable(name: "parity", arg: 4, scope: !6843, file: !2734, line: 109, type: !5922)
!6851 = !DILocalVariable(name: "byte", scope: !6843, file: !2734, line: 111, type: !1236)
!6852 = !DILocation(line: 0, scope: !6843)
!6853 = !DILocation(line: 114, column: 19, scope: !6843)
!6854 = !DILocation(line: 115, column: 16, scope: !6843)
!6855 = !DILocation(line: 118, column: 10, scope: !6843)
!6856 = !DILocation(line: 119, column: 5, scope: !6843)
!6857 = !DILocation(line: 124, column: 18, scope: !6858)
!6858 = distinct !DILexicalBlock(scope: !6843, file: !2734, line: 119, column: 26)
!6859 = !DILocation(line: 125, column: 13, scope: !6858)
!6860 = !DILocation(line: 127, column: 18, scope: !6858)
!6861 = !DILocation(line: 128, column: 13, scope: !6858)
!6862 = !DILocation(line: 130, column: 18, scope: !6858)
!6863 = !DILocation(line: 131, column: 13, scope: !6858)
!6864 = !DILocation(line: 137, column: 10, scope: !6843)
!6865 = !DILocation(line: 138, column: 5, scope: !6843)
!6866 = !DILocation(line: 151, column: 5, scope: !6843)
!6867 = !DILocation(line: 166, column: 18, scope: !6843)
!6868 = !DILocation(line: 166, column: 16, scope: !6843)
!6869 = !DILocation(line: 167, column: 1, scope: !6843)
!6870 = distinct !DISubprogram(name: "uart_put_char_block", scope: !2734, file: !2734, line: 169, type: !6871, scopeLine: 170, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2733, retainedNodes: !6873)
!6871 = !DISubroutineType(types: !6872)
!6872 = !{null, !6708, !463}
!6873 = !{!6874, !6875, !6876}
!6874 = !DILocalVariable(name: "uartx", arg: 1, scope: !6870, file: !2734, line: 169, type: !6708)
!6875 = !DILocalVariable(name: "byte", arg: 2, scope: !6870, file: !2734, line: 169, type: !463)
!6876 = !DILocalVariable(name: "LSR", scope: !6870, file: !2734, line: 171, type: !1236)
!6877 = !DILocation(line: 0, scope: !6870)
!6878 = !DILocation(line: 173, column: 5, scope: !6870)
!6879 = !DILocation(line: 174, column: 31, scope: !6880)
!6880 = distinct !DILexicalBlock(scope: !6870, file: !2734, line: 173, column: 15)
!6881 = !DILocation(line: 175, column: 17, scope: !6882)
!6882 = distinct !DILexicalBlock(scope: !6880, file: !2734, line: 175, column: 13)
!6883 = !DILocation(line: 175, column: 13, scope: !6880)
!6884 = distinct !{!6884, !6878, !6885}
!6885 = !DILocation(line: 179, column: 5, scope: !6870)
!6886 = !DILocation(line: 176, column: 38, scope: !6887)
!6887 = distinct !DILexicalBlock(scope: !6882, file: !2734, line: 175, column: 39)
!6888 = !DILocation(line: 176, column: 32, scope: !6887)
!6889 = !DILocation(line: 176, column: 36, scope: !6887)
!6890 = !DILocation(line: 180, column: 1, scope: !6870)
!6891 = distinct !DISubprogram(name: "uart_get_char_block", scope: !2734, file: !2734, line: 182, type: !6892, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2733, retainedNodes: !6894)
!6892 = !DISubroutineType(types: !6893)
!6893 = !{!463, !6708}
!6894 = !{!6895, !6896, !6897}
!6895 = !DILocalVariable(name: "uartx", arg: 1, scope: !6891, file: !2734, line: 182, type: !6708)
!6896 = !DILocalVariable(name: "LSR", scope: !6891, file: !2734, line: 184, type: !1236)
!6897 = !DILocalVariable(name: "byte", scope: !6891, file: !2734, line: 185, type: !463)
!6898 = !DILocation(line: 0, scope: !6891)
!6899 = !DILocation(line: 187, column: 5, scope: !6891)
!6900 = !DILocation(line: 188, column: 31, scope: !6901)
!6901 = distinct !DILexicalBlock(scope: !6891, file: !2734, line: 187, column: 15)
!6902 = !DILocation(line: 189, column: 17, scope: !6903)
!6903 = distinct !DILexicalBlock(scope: !6901, file: !2734, line: 189, column: 13)
!6904 = !DILocation(line: 189, column: 13, scope: !6901)
!6905 = distinct !{!6905, !6899, !6906}
!6906 = !DILocation(line: 193, column: 5, scope: !6891)
!6907 = !DILocation(line: 190, column: 48, scope: !6908)
!6908 = distinct !DILexicalBlock(scope: !6903, file: !2734, line: 189, column: 37)
!6909 = !DILocation(line: 190, column: 20, scope: !6908)
!6910 = !DILocation(line: 195, column: 5, scope: !6891)
!6911 = distinct !DISubprogram(name: "uart_get_char_unblocking", scope: !2734, file: !2734, line: 198, type: !6912, scopeLine: 199, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2733, retainedNodes: !6914)
!6912 = !DISubroutineType(types: !6913)
!6913 = !{!61, !6708}
!6914 = !{!6915, !6916, !6917}
!6915 = !DILocalVariable(name: "uartx", arg: 1, scope: !6911, file: !2734, line: 198, type: !6708)
!6916 = !DILocalVariable(name: "LSR", scope: !6911, file: !2734, line: 200, type: !1236)
!6917 = !DILocalVariable(name: "value", scope: !6911, file: !2734, line: 201, type: !61)
!6918 = !DILocation(line: 0, scope: !6911)
!6919 = !DILocation(line: 203, column: 27, scope: !6911)
!6920 = !DILocation(line: 204, column: 13, scope: !6921)
!6921 = distinct !DILexicalBlock(scope: !6911, file: !2734, line: 204, column: 9)
!6922 = !DILocation(line: 204, column: 9, scope: !6911)
!6923 = !DILocation(line: 205, column: 36, scope: !6924)
!6924 = distinct !DILexicalBlock(scope: !6921, file: !2734, line: 204, column: 33)
!6925 = !DILocation(line: 206, column: 5, scope: !6924)
!6926 = !DILocation(line: 0, scope: !6921)
!6927 = !DILocation(line: 210, column: 5, scope: !6911)
!6928 = distinct !DISubprogram(name: "uart_set_hardware_flowcontrol", scope: !2734, file: !2734, line: 213, type: !6929, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2733, retainedNodes: !6931)
!6929 = !DISubroutineType(types: !6930)
!6930 = !{null, !6708}
!6931 = !{!6932, !6933, !6934}
!6932 = !DILocalVariable(name: "uartx", arg: 1, scope: !6928, file: !2734, line: 213, type: !6708)
!6933 = !DILocalVariable(name: "EFR", scope: !6928, file: !2734, line: 215, type: !1236)
!6934 = !DILocalVariable(name: "LCR", scope: !6928, file: !2734, line: 215, type: !1236)
!6935 = !DILocation(line: 0, scope: !6928)
!6936 = !DILocation(line: 217, column: 18, scope: !6928)
!6937 = !DILocation(line: 219, column: 16, scope: !6928)
!6938 = !DILocation(line: 220, column: 30, scope: !6928)
!6939 = !DILocation(line: 222, column: 30, scope: !6928)
!6940 = !DILocation(line: 222, column: 28, scope: !6928)
!6941 = !DILocation(line: 223, column: 12, scope: !6928)
!6942 = !DILocation(line: 223, column: 22, scope: !6928)
!6943 = !DILocation(line: 225, column: 16, scope: !6928)
!6944 = !DILocation(line: 226, column: 21, scope: !6928)
!6945 = !DILocation(line: 226, column: 25, scope: !6928)
!6946 = !DILocation(line: 228, column: 18, scope: !6928)
!6947 = !DILocation(line: 228, column: 16, scope: !6928)
!6948 = !DILocation(line: 229, column: 1, scope: !6928)
!6949 = distinct !DISubprogram(name: "uart_set_software_flowcontrol", scope: !2734, file: !2734, line: 231, type: !6950, scopeLine: 235, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2733, retainedNodes: !6952)
!6950 = !DISubroutineType(types: !6951)
!6951 = !{null, !6708, !463, !463, !463}
!6952 = !{!6953, !6954, !6955, !6956, !6957, !6958}
!6953 = !DILocalVariable(name: "uartx", arg: 1, scope: !6949, file: !2734, line: 231, type: !6708)
!6954 = !DILocalVariable(name: "xon", arg: 2, scope: !6949, file: !2734, line: 232, type: !463)
!6955 = !DILocalVariable(name: "xoff", arg: 3, scope: !6949, file: !2734, line: 233, type: !463)
!6956 = !DILocalVariable(name: "escape_character", arg: 4, scope: !6949, file: !2734, line: 234, type: !463)
!6957 = !DILocalVariable(name: "EFR", scope: !6949, file: !2734, line: 236, type: !1236)
!6958 = !DILocalVariable(name: "LCR", scope: !6949, file: !2734, line: 236, type: !1236)
!6959 = !DILocation(line: 0, scope: !6949)
!6960 = !DILocation(line: 238, column: 18, scope: !6949)
!6961 = !DILocation(line: 240, column: 16, scope: !6949)
!6962 = !DILocation(line: 241, column: 28, scope: !6949)
!6963 = !DILocation(line: 241, column: 21, scope: !6949)
!6964 = !DILocation(line: 241, column: 26, scope: !6949)
!6965 = !DILocation(line: 242, column: 20, scope: !6949)
!6966 = !DILocation(line: 242, column: 12, scope: !6949)
!6967 = !DILocation(line: 242, column: 18, scope: !6949)
!6968 = !DILocation(line: 243, column: 30, scope: !6949)
!6969 = !DILocation(line: 245, column: 30, scope: !6949)
!6970 = !DILocation(line: 245, column: 28, scope: !6949)
!6971 = !DILocation(line: 246, column: 25, scope: !6949)
!6972 = !DILocation(line: 246, column: 12, scope: !6949)
!6973 = !DILocation(line: 246, column: 23, scope: !6949)
!6974 = !DILocation(line: 247, column: 12, scope: !6949)
!6975 = !DILocation(line: 247, column: 22, scope: !6949)
!6976 = !DILocation(line: 249, column: 18, scope: !6949)
!6977 = !DILocation(line: 249, column: 16, scope: !6949)
!6978 = !DILocation(line: 250, column: 1, scope: !6949)
!6979 = distinct !DISubprogram(name: "uart_disable_flowcontrol", scope: !2734, file: !2734, line: 252, type: !6929, scopeLine: 253, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2733, retainedNodes: !6980)
!6980 = !{!6981, !6982}
!6981 = !DILocalVariable(name: "uartx", arg: 1, scope: !6979, file: !2734, line: 252, type: !6708)
!6982 = !DILocalVariable(name: "LCR", scope: !6979, file: !2734, line: 254, type: !1236)
!6983 = !DILocation(line: 0, scope: !6979)
!6984 = !DILocation(line: 256, column: 18, scope: !6979)
!6985 = !DILocation(line: 258, column: 16, scope: !6979)
!6986 = !DILocation(line: 259, column: 24, scope: !6979)
!6987 = !DILocation(line: 259, column: 28, scope: !6979)
!6988 = !DILocation(line: 261, column: 16, scope: !6979)
!6989 = !DILocation(line: 262, column: 18, scope: !6979)
!6990 = !DILocation(line: 262, column: 16, scope: !6979)
!6991 = !DILocation(line: 263, column: 1, scope: !6979)
!6992 = distinct !DISubprogram(name: "uart_set_fifo", scope: !2734, file: !2734, line: 265, type: !6929, scopeLine: 266, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2733, retainedNodes: !6993)
!6993 = !{!6994, !6995, !6996}
!6994 = !DILocalVariable(name: "uartx", arg: 1, scope: !6992, file: !2734, line: 265, type: !6708)
!6995 = !DILocalVariable(name: "EFR", scope: !6992, file: !2734, line: 267, type: !1236)
!6996 = !DILocalVariable(name: "LCR", scope: !6992, file: !2734, line: 267, type: !1236)
!6997 = !DILocation(line: 0, scope: !6992)
!6998 = !DILocation(line: 269, column: 18, scope: !6992)
!6999 = !DILocation(line: 271, column: 16, scope: !6992)
!7000 = !DILocation(line: 272, column: 30, scope: !6992)
!7001 = !DILocation(line: 274, column: 30, scope: !6992)
!7002 = !DILocation(line: 274, column: 28, scope: !6992)
!7003 = !DILocation(line: 276, column: 16, scope: !6992)
!7004 = !DILocation(line: 277, column: 28, scope: !6992)
!7005 = !DILocation(line: 283, column: 18, scope: !6992)
!7006 = !DILocation(line: 283, column: 16, scope: !6992)
!7007 = !DILocation(line: 284, column: 1, scope: !6992)
!7008 = distinct !DISubprogram(name: "uart_unmask_receive_interrupt", scope: !2734, file: !2734, line: 307, type: !6929, scopeLine: 308, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2733, retainedNodes: !7009)
!7009 = !{!7010, !7011, !7012}
!7010 = !DILocalVariable(name: "uartx", arg: 1, scope: !7008, file: !2734, line: 307, type: !6708)
!7011 = !DILocalVariable(name: "IER", scope: !7008, file: !2734, line: 309, type: !1236)
!7012 = !DILocalVariable(name: "LCR", scope: !7008, file: !2734, line: 309, type: !1236)
!7013 = !DILocation(line: 0, scope: !7008)
!7014 = !DILocation(line: 311, column: 18, scope: !7008)
!7015 = !DILocation(line: 313, column: 16, scope: !7008)
!7016 = !DILocation(line: 314, column: 26, scope: !7008)
!7017 = !DILocation(line: 316, column: 26, scope: !7008)
!7018 = !DILocation(line: 316, column: 24, scope: !7008)
!7019 = !DILocation(line: 318, column: 19, scope: !7008)
!7020 = !DILocation(line: 318, column: 16, scope: !7008)
!7021 = !DILocation(line: 319, column: 1, scope: !7008)
!7022 = distinct !DISubprogram(name: "uart_purge_fifo", scope: !2734, file: !2734, line: 321, type: !7023, scopeLine: 322, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2733, retainedNodes: !7025)
!7023 = !DISubroutineType(types: !7024)
!7024 = !{null, !6708, !1144}
!7025 = !{!7026, !7027, !7028}
!7026 = !DILocalVariable(name: "uartx", arg: 1, scope: !7022, file: !2734, line: 321, type: !6708)
!7027 = !DILocalVariable(name: "is_rx", arg: 2, scope: !7022, file: !2734, line: 321, type: !1144)
!7028 = !DILocalVariable(name: "FCR", scope: !7022, file: !2734, line: 323, type: !1236)
!7029 = !DILocation(line: 0, scope: !7022)
!7030 = !DILocation(line: 327, column: 9, scope: !7031)
!7031 = distinct !DILexicalBlock(scope: !7022, file: !2734, line: 327, column: 9)
!7032 = !DILocation(line: 333, column: 24, scope: !7022)
!7033 = !DILocation(line: 333, column: 28, scope: !7022)
!7034 = !DILocation(line: 334, column: 1, scope: !7022)
!7035 = distinct !DISubprogram(name: "uart_query_interrupt_type", scope: !2734, file: !2734, line: 336, type: !7036, scopeLine: 337, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2733, retainedNodes: !7039)
!7036 = !DISubroutineType(types: !7037)
!7037 = !{!7038, !6708}
!7038 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_interrupt_type_t", file: !937, line: 55, baseType: !993)
!7039 = !{!7040, !7041, !7042, !7043}
!7040 = !DILocalVariable(name: "uartx", arg: 1, scope: !7035, file: !2734, line: 336, type: !6708)
!7041 = !DILocalVariable(name: "IIR", scope: !7035, file: !2734, line: 338, type: !1236)
!7042 = !DILocalVariable(name: "LSR", scope: !7035, file: !2734, line: 338, type: !1236)
!7043 = !DILocalVariable(name: "type", scope: !7035, file: !2734, line: 339, type: !7038)
!7044 = !DILocation(line: 0, scope: !7035)
!7045 = !DILocation(line: 341, column: 30, scope: !7035)
!7046 = !DILocation(line: 342, column: 13, scope: !7047)
!7047 = distinct !DILexicalBlock(scope: !7035, file: !2734, line: 342, column: 9)
!7048 = !DILocation(line: 342, column: 9, scope: !7035)
!7049 = !DILocation(line: 346, column: 17, scope: !7035)
!7050 = !DILocation(line: 346, column: 5, scope: !7035)
!7051 = !DILocation(line: 350, column: 13, scope: !7052)
!7052 = distinct !DILexicalBlock(scope: !7035, file: !2734, line: 346, column: 37)
!7053 = !DILocation(line: 353, column: 35, scope: !7052)
!7054 = !DILocation(line: 354, column: 21, scope: !7055)
!7055 = distinct !DILexicalBlock(scope: !7052, file: !2734, line: 354, column: 17)
!7056 = !DILocation(line: 363, column: 13, scope: !7052)
!7057 = !DILocation(line: 369, column: 1, scope: !7035)
!7058 = distinct !DISubprogram(name: "uart_verify_error", scope: !2734, file: !2734, line: 371, type: !7059, scopeLine: 372, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2733, retainedNodes: !7061)
!7059 = !DISubroutineType(types: !7060)
!7060 = !{!1144, !6708}
!7061 = !{!7062, !7063, !7064}
!7062 = !DILocalVariable(name: "uartx", arg: 1, scope: !7058, file: !2734, line: 371, type: !6708)
!7063 = !DILocalVariable(name: "LSR", scope: !7058, file: !2734, line: 373, type: !1236)
!7064 = !DILocalVariable(name: "ret", scope: !7058, file: !2734, line: 374, type: !1144)
!7065 = !DILocation(line: 0, scope: !7058)
!7066 = !DILocation(line: 376, column: 27, scope: !7058)
!7067 = !DILocation(line: 377, column: 15, scope: !7068)
!7068 = distinct !DILexicalBlock(scope: !7058, file: !2734, line: 377, column: 9)
!7069 = !DILocation(line: 377, column: 9, scope: !7058)
!7070 = !DILocation(line: 381, column: 5, scope: !7058)
!7071 = distinct !DISubprogram(name: "uart_clear_timeout_interrupt", scope: !2734, file: !2734, line: 384, type: !6929, scopeLine: 385, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2733, retainedNodes: !7072)
!7072 = !{!7073, !7074}
!7073 = !DILocalVariable(name: "uartx", arg: 1, scope: !7071, file: !2734, line: 384, type: !6708)
!7074 = !DILocalVariable(name: "DMA_EN", scope: !7071, file: !2734, line: 386, type: !1236)
!7075 = !DILocation(line: 0, scope: !7071)
!7076 = !DILocation(line: 388, column: 21, scope: !7071)
!7077 = !DILocation(line: 390, column: 1, scope: !7071)
!7078 = distinct !DISubprogram(name: "uart_reset_default_value", scope: !2734, file: !2734, line: 392, type: !6929, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2733, retainedNodes: !7079)
!7079 = !{!7080}
!7080 = !DILocalVariable(name: "uartx", arg: 1, scope: !7078, file: !2734, line: 392, type: !6708)
!7081 = !DILocation(line: 0, scope: !7078)
!7082 = !DILocation(line: 394, column: 12, scope: !7078)
!7083 = !DILocation(line: 394, column: 16, scope: !7078)
!7084 = !DILocation(line: 395, column: 24, scope: !7078)
!7085 = !DILocation(line: 395, column: 28, scope: !7078)
!7086 = !DILocation(line: 396, column: 21, scope: !7078)
!7087 = !DILocation(line: 396, column: 26, scope: !7078)
!7088 = !DILocation(line: 397, column: 12, scope: !7078)
!7089 = !DILocation(line: 397, column: 18, scope: !7078)
!7090 = !DILocation(line: 399, column: 16, scope: !7078)
!7091 = !DILocation(line: 400, column: 24, scope: !7078)
!7092 = !DILocation(line: 400, column: 28, scope: !7078)
!7093 = !DILocation(line: 401, column: 20, scope: !7078)
!7094 = !DILocation(line: 401, column: 24, scope: !7078)
!7095 = !DILocation(line: 403, column: 16, scope: !7078)
!7096 = !DILocation(line: 404, column: 24, scope: !7078)
!7097 = !DILocation(line: 405, column: 28, scope: !7078)
!7098 = !DILocation(line: 407, column: 16, scope: !7078)
!7099 = !DILocation(line: 408, column: 28, scope: !7078)
!7100 = !DILocation(line: 409, column: 16, scope: !7078)
!7101 = !DILocation(line: 411, column: 25, scope: !7078)
!7102 = !DILocation(line: 412, column: 22, scope: !7078)
!7103 = !DILocation(line: 412, column: 26, scope: !7078)
!7104 = !DILocation(line: 413, column: 12, scope: !7078)
!7105 = !DILocation(line: 413, column: 24, scope: !7078)
!7106 = !DILocation(line: 414, column: 12, scope: !7078)
!7107 = !DILocation(line: 414, column: 22, scope: !7078)
!7108 = !DILocation(line: 415, column: 12, scope: !7078)
!7109 = !DILocation(line: 415, column: 25, scope: !7078)
!7110 = !DILocation(line: 416, column: 12, scope: !7078)
!7111 = !DILocation(line: 416, column: 25, scope: !7078)
!7112 = !DILocation(line: 417, column: 12, scope: !7078)
!7113 = !DILocation(line: 417, column: 23, scope: !7078)
!7114 = !DILocation(line: 418, column: 12, scope: !7078)
!7115 = !DILocation(line: 418, column: 27, scope: !7078)
!7116 = !DILocation(line: 419, column: 12, scope: !7078)
!7117 = !DILocation(line: 419, column: 18, scope: !7078)
!7118 = !DILocation(line: 420, column: 12, scope: !7078)
!7119 = !DILocation(line: 420, column: 23, scope: !7078)
!7120 = !DILocation(line: 421, column: 12, scope: !7078)
!7121 = !DILocation(line: 421, column: 22, scope: !7078)
!7122 = !DILocation(line: 422, column: 12, scope: !7078)
!7123 = !DILocation(line: 422, column: 21, scope: !7078)
!7124 = !DILocation(line: 423, column: 12, scope: !7078)
!7125 = !DILocation(line: 423, column: 19, scope: !7078)
!7126 = !DILocation(line: 424, column: 23, scope: !7078)
!7127 = !DILocation(line: 425, column: 12, scope: !7078)
!7128 = !DILocation(line: 425, column: 22, scope: !7078)
!7129 = !DILocation(line: 426, column: 12, scope: !7078)
!7130 = !DILocation(line: 426, column: 22, scope: !7078)
!7131 = !DILocation(line: 427, column: 1, scope: !7078)
!7132 = distinct !DISubprogram(name: "uart_query_empty", scope: !2734, file: !2734, line: 429, type: !6929, scopeLine: 430, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2733, retainedNodes: !7133)
!7133 = !{!7134}
!7134 = !DILocalVariable(name: "uartx", arg: 1, scope: !7132, file: !2734, line: 429, type: !6708)
!7135 = !DILocation(line: 0, scope: !7132)
!7136 = !DILocation(line: 431, column: 5, scope: !7132)
!7137 = !DILocation(line: 431, column: 31, scope: !7132)
!7138 = !DILocation(line: 431, column: 36, scope: !7132)
!7139 = !DILocation(line: 431, column: 12, scope: !7132)
!7140 = distinct !{!7140, !7136, !7141}
!7141 = !DILocation(line: 431, column: 44, scope: !7132)
!7142 = !DILocation(line: 432, column: 1, scope: !7132)
!7143 = distinct !DISubprogram(name: "uart_port_to_dma_channel", scope: !991, file: !991, line: 134, type: !7144, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !990, retainedNodes: !7146)
!7144 = !DISubroutineType(types: !7145)
!7145 = !{!4728, !942, !1144}
!7146 = !{!7147, !7148, !7149}
!7147 = !DILocalVariable(name: "uart_port", arg: 1, scope: !7143, file: !991, line: 134, type: !942)
!7148 = !DILocalVariable(name: "is_rx", arg: 2, scope: !7143, file: !991, line: 134, type: !1144)
!7149 = !DILocalVariable(name: "dma_channel", scope: !7143, file: !991, line: 136, type: !4728)
!7150 = !DILocation(line: 0, scope: !7143)
!7151 = !DILocation(line: 138, column: 5, scope: !7143)
!7152 = !DILocation(line: 140, column: 17, scope: !7153)
!7153 = distinct !DILexicalBlock(scope: !7154, file: !991, line: 140, column: 17)
!7154 = distinct !DILexicalBlock(scope: !7143, file: !991, line: 138, column: 24)
!7155 = !DILocation(line: 147, column: 17, scope: !7156)
!7156 = distinct !DILexicalBlock(scope: !7154, file: !991, line: 147, column: 17)
!7157 = !DILocation(line: 154, column: 17, scope: !7158)
!7158 = distinct !DILexicalBlock(scope: !7154, file: !991, line: 154, column: 17)
!7159 = !DILocation(line: 161, column: 17, scope: !7160)
!7160 = distinct !DILexicalBlock(scope: !7154, file: !991, line: 161, column: 17)
!7161 = !DILocation(line: 171, column: 5, scope: !7143)
!7162 = distinct !DISubprogram(name: "uart_dma_channel_to_callback_data", scope: !991, file: !991, line: 174, type: !7163, scopeLine: 175, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !990, retainedNodes: !7171)
!7163 = !DISubroutineType(types: !7164)
!7164 = !{null, !4728, !7165}
!7165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7166, size: 32)
!7166 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_dma_callback_data_t", file: !937, line: 96, baseType: !7167)
!7167 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !937, line: 93, size: 64, elements: !7168)
!7168 = !{!7169, !7170}
!7169 = !DIDerivedType(tag: DW_TAG_member, name: "is_rx", scope: !7167, file: !937, line: 94, baseType: !91, size: 8)
!7170 = !DIDerivedType(tag: DW_TAG_member, name: "uart_port", scope: !7167, file: !937, line: 95, baseType: !942, size: 32, offset: 32)
!7171 = !{!7172, !7173}
!7172 = !DILocalVariable(name: "dma_channel", arg: 1, scope: !7162, file: !991, line: 174, type: !4728)
!7173 = !DILocalVariable(name: "user_data", arg: 2, scope: !7162, file: !991, line: 174, type: !7165)
!7174 = !DILocation(line: 0, scope: !7162)
!7175 = !DILocation(line: 176, column: 5, scope: !7162)
!7176 = !DILocation(line: 0, scope: !7177)
!7177 = distinct !DILexicalBlock(scope: !7162, file: !991, line: 176, column: 26)
!7178 = !DILocation(line: 212, column: 1, scope: !7162)
!7179 = distinct !DISubprogram(name: "uart_enable_dma", scope: !991, file: !991, line: 214, type: !7180, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !990, retainedNodes: !7182)
!7180 = !DISubroutineType(types: !7181)
!7181 = !{null, !1004}
!7182 = !{!7183}
!7183 = !DILocalVariable(name: "uartx", arg: 1, scope: !7179, file: !991, line: 214, type: !1004)
!7184 = !DILocation(line: 0, scope: !7179)
!7185 = !DILocation(line: 216, column: 12, scope: !7179)
!7186 = !DILocation(line: 216, column: 19, scope: !7179)
!7187 = !DILocation(line: 217, column: 1, scope: !7179)
!7188 = distinct !DISubprogram(name: "uart_interrupt_handler", scope: !991, file: !991, line: 219, type: !526, scopeLine: 220, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !990, retainedNodes: !7189)
!7189 = !{!7190, !7191, !7192, !7193}
!7190 = !DILocalVariable(name: "irq_number", arg: 1, scope: !7188, file: !991, line: 219, type: !528)
!7191 = !DILocalVariable(name: "uart_port", scope: !7188, file: !991, line: 221, type: !942)
!7192 = !DILocalVariable(name: "type", scope: !7188, file: !991, line: 222, type: !7038)
!7193 = !DILocalVariable(name: "uartx", scope: !7188, file: !991, line: 223, type: !1004)
!7194 = !DILocation(line: 0, scope: !7188)
!7195 = !DILocation(line: 225, column: 5, scope: !7188)
!7196 = !DILocation(line: 242, column: 13, scope: !7188)
!7197 = !DILocation(line: 243, column: 12, scope: !7188)
!7198 = !DILocation(line: 245, column: 5, scope: !7188)
!7199 = !DILocation(line: 248, column: 13, scope: !7200)
!7200 = distinct !DILexicalBlock(scope: !7188, file: !991, line: 245, column: 19)
!7201 = !DILocation(line: 249, column: 13, scope: !7200)
!7202 = !DILocation(line: 252, column: 13, scope: !7200)
!7203 = !DILocation(line: 253, column: 13, scope: !7200)
!7204 = !DILocation(line: 263, column: 13, scope: !7200)
!7205 = !DILocation(line: 264, column: 13, scope: !7200)
!7206 = !DILocation(line: 276, column: 13, scope: !7200)
!7207 = !DILocation(line: 278, column: 1, scope: !7188)
!7208 = !DILocation(line: 131, column: 9, scope: !7209)
!7209 = distinct !DILexicalBlock(scope: !1073, file: !1074, line: 131, column: 9)
!7210 = !DILocation(line: 131, column: 9, scope: !1073)
!7211 = !DILocation(line: 0, scope: !1073)
!7212 = !DILocation(line: 134, column: 49, scope: !7213)
!7213 = distinct !DILexicalBlock(scope: !7214, file: !1074, line: 133, column: 46)
!7214 = distinct !DILexicalBlock(scope: !7215, file: !1074, line: 133, column: 9)
!7215 = distinct !DILexicalBlock(scope: !7216, file: !1074, line: 133, column: 9)
!7216 = distinct !DILexicalBlock(scope: !7209, file: !1074, line: 131, column: 28)
!7217 = !DILocation(line: 134, column: 13, scope: !7213)
!7218 = !DILocation(line: 133, column: 42, scope: !7214)
!7219 = !DILocation(line: 133, column: 23, scope: !7214)
!7220 = !DILocation(line: 133, column: 9, scope: !7215)
!7221 = distinct !{!7221, !7220, !7222}
!7222 = !DILocation(line: 135, column: 9, scope: !7215)
!7223 = !DILocation(line: 136, column: 22, scope: !7216)
!7224 = !DILocation(line: 137, column: 5, scope: !7216)
!7225 = !DILocation(line: 138, column: 5, scope: !1073)
!7226 = distinct !DISubprogram(name: "NVIC_SetPriority", scope: !1083, file: !1083, line: 1577, type: !7227, scopeLine: 1578, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1078, retainedNodes: !7229)
!7227 = !DISubroutineType(types: !7228)
!7228 = !{null, !529, !61}
!7229 = !{!7230, !7231}
!7230 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7226, file: !1083, line: 1577, type: !529)
!7231 = !DILocalVariable(name: "priority", arg: 2, scope: !7226, file: !1083, line: 1577, type: !61)
!7232 = !DILocation(line: 0, scope: !7226)
!7233 = !DILocation(line: 1582, column: 34, scope: !7234)
!7234 = distinct !DILexicalBlock(scope: !7235, file: !1083, line: 1581, column: 8)
!7235 = distinct !DILexicalBlock(scope: !7226, file: !1083, line: 1579, column: 6)
!7236 = !DILocation(line: 1582, column: 5, scope: !7234)
!7237 = !DILocation(line: 1582, column: 32, scope: !7234)
!7238 = !DILocation(line: 1583, column: 1, scope: !7226)
!7239 = distinct !DISubprogram(name: "hal_nvic_enable_irq", scope: !1074, file: !1074, line: 141, type: !7240, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1078, retainedNodes: !7242)
!7240 = !DISubroutineType(types: !7241)
!7241 = !{!1077, !528}
!7242 = !{!7243, !7244}
!7243 = !DILocalVariable(name: "irq_number", arg: 1, scope: !7239, file: !1074, line: 141, type: !528)
!7244 = !DILocalVariable(name: "status", scope: !7239, file: !1074, line: 143, type: !1077)
!7245 = !DILocation(line: 0, scope: !7239)
!7246 = !DILocation(line: 145, column: 40, scope: !7247)
!7247 = distinct !DILexicalBlock(scope: !7239, file: !1074, line: 145, column: 9)
!7248 = !DILocation(line: 149, column: 9, scope: !7249)
!7249 = distinct !DILexicalBlock(scope: !7247, file: !1074, line: 148, column: 12)
!7250 = !DILocation(line: 153, column: 5, scope: !7239)
!7251 = !DILocation(line: 154, column: 1, scope: !7239)
!7252 = distinct !DISubprogram(name: "NVIC_EnableIRQ", scope: !1083, file: !1083, line: 1494, type: !7253, scopeLine: 1495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1078, retainedNodes: !7255)
!7253 = !DISubroutineType(types: !7254)
!7254 = !{null, !529}
!7255 = !{!7256}
!7256 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7252, file: !1083, line: 1494, type: !529)
!7257 = !DILocation(line: 0, scope: !7252)
!7258 = !DILocation(line: 1497, column: 91, scope: !7252)
!7259 = !DILocation(line: 1497, column: 61, scope: !7252)
!7260 = !DILocation(line: 1497, column: 40, scope: !7252)
!7261 = !DILocation(line: 1497, column: 3, scope: !7252)
!7262 = !DILocation(line: 1497, column: 46, scope: !7252)
!7263 = !DILocation(line: 1498, column: 1, scope: !7252)
!7264 = distinct !DISubprogram(name: "hal_nvic_disable_irq", scope: !1074, file: !1074, line: 156, type: !7240, scopeLine: 157, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1078, retainedNodes: !7265)
!7265 = !{!7266, !7267}
!7266 = !DILocalVariable(name: "irq_number", arg: 1, scope: !7264, file: !1074, line: 156, type: !528)
!7267 = !DILocalVariable(name: "status", scope: !7264, file: !1074, line: 158, type: !1077)
!7268 = !DILocation(line: 0, scope: !7264)
!7269 = !DILocation(line: 160, column: 40, scope: !7270)
!7270 = distinct !DILexicalBlock(scope: !7264, file: !1074, line: 160, column: 9)
!7271 = !DILocation(line: 164, column: 9, scope: !7272)
!7272 = distinct !DILexicalBlock(scope: !7270, file: !1074, line: 163, column: 12)
!7273 = !DILocation(line: 168, column: 5, scope: !7264)
!7274 = !DILocation(line: 169, column: 1, scope: !7264)
!7275 = distinct !DISubprogram(name: "NVIC_DisableIRQ", scope: !1083, file: !1083, line: 1507, type: !7253, scopeLine: 1508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1078, retainedNodes: !7276)
!7276 = !{!7277}
!7277 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7275, file: !1083, line: 1507, type: !529)
!7278 = !DILocation(line: 0, scope: !7275)
!7279 = !DILocation(line: 1509, column: 65, scope: !7275)
!7280 = !DILocation(line: 1509, column: 44, scope: !7275)
!7281 = !DILocation(line: 1509, column: 32, scope: !7275)
!7282 = !DILocation(line: 1509, column: 3, scope: !7275)
!7283 = !DILocation(line: 1509, column: 39, scope: !7275)
!7284 = !DILocation(line: 1510, column: 1, scope: !7275)
!7285 = distinct !DISubprogram(name: "hal_nvic_get_pending_irq", scope: !1074, file: !1074, line: 171, type: !7286, scopeLine: 172, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1078, retainedNodes: !7288)
!7286 = !DISubroutineType(types: !7287)
!7287 = !{!61, !528}
!7288 = !{!7289, !7290}
!7289 = !DILocalVariable(name: "irq_number", arg: 1, scope: !7285, file: !1074, line: 171, type: !528)
!7290 = !DILocalVariable(name: "ret", scope: !7285, file: !1074, line: 173, type: !61)
!7291 = !DILocation(line: 0, scope: !7285)
!7292 = !DILocation(line: 175, column: 40, scope: !7293)
!7293 = distinct !DILexicalBlock(scope: !7285, file: !1074, line: 175, column: 9)
!7294 = !DILocation(line: 178, column: 15, scope: !7295)
!7295 = distinct !DILexicalBlock(scope: !7293, file: !1074, line: 177, column: 12)
!7296 = !DILocation(line: 181, column: 5, scope: !7285)
!7297 = !DILocation(line: 182, column: 1, scope: !7285)
!7298 = distinct !DISubprogram(name: "NVIC_GetPendingIRQ", scope: !1083, file: !1083, line: 1523, type: !7299, scopeLine: 1524, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1078, retainedNodes: !7301)
!7299 = !DISubroutineType(types: !7300)
!7300 = !{!61, !529}
!7301 = !{!7302}
!7302 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7298, file: !1083, line: 1523, type: !529)
!7303 = !DILocation(line: 0, scope: !7298)
!7304 = !DILocation(line: 1525, column: 51, scope: !7298)
!7305 = !DILocation(line: 1525, column: 23, scope: !7298)
!7306 = !DILocation(line: 1525, column: 83, scope: !7298)
!7307 = !DILocation(line: 1525, column: 22, scope: !7298)
!7308 = !DILocation(line: 1525, column: 3, scope: !7298)
!7309 = distinct !DISubprogram(name: "hal_nvic_set_pending_irq", scope: !1074, file: !1074, line: 184, type: !7240, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1078, retainedNodes: !7310)
!7310 = !{!7311, !7312}
!7311 = !DILocalVariable(name: "irq_number", arg: 1, scope: !7309, file: !1074, line: 184, type: !528)
!7312 = !DILocalVariable(name: "status", scope: !7309, file: !1074, line: 186, type: !1077)
!7313 = !DILocation(line: 0, scope: !7309)
!7314 = !DILocation(line: 188, column: 40, scope: !7315)
!7315 = distinct !DILexicalBlock(scope: !7309, file: !1074, line: 188, column: 9)
!7316 = !DILocation(line: 192, column: 9, scope: !7317)
!7317 = distinct !DILexicalBlock(scope: !7315, file: !1074, line: 191, column: 12)
!7318 = !DILocation(line: 196, column: 5, scope: !7309)
!7319 = !DILocation(line: 197, column: 1, scope: !7309)
!7320 = distinct !DISubprogram(name: "NVIC_SetPendingIRQ", scope: !1083, file: !1083, line: 1535, type: !7253, scopeLine: 1536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1078, retainedNodes: !7321)
!7321 = !{!7322}
!7322 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7320, file: !1083, line: 1535, type: !529)
!7323 = !DILocation(line: 0, scope: !7320)
!7324 = !DILocation(line: 1537, column: 65, scope: !7320)
!7325 = !DILocation(line: 1537, column: 44, scope: !7320)
!7326 = !DILocation(line: 1537, column: 32, scope: !7320)
!7327 = !DILocation(line: 1537, column: 3, scope: !7320)
!7328 = !DILocation(line: 1537, column: 39, scope: !7320)
!7329 = !DILocation(line: 1538, column: 1, scope: !7320)
!7330 = distinct !DISubprogram(name: "hal_nvic_clear_pending_irq", scope: !1074, file: !1074, line: 199, type: !7240, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1078, retainedNodes: !7331)
!7331 = !{!7332, !7333}
!7332 = !DILocalVariable(name: "irq_number", arg: 1, scope: !7330, file: !1074, line: 199, type: !528)
!7333 = !DILocalVariable(name: "status", scope: !7330, file: !1074, line: 201, type: !1077)
!7334 = !DILocation(line: 0, scope: !7330)
!7335 = !DILocation(line: 203, column: 40, scope: !7336)
!7336 = distinct !DILexicalBlock(scope: !7330, file: !1074, line: 203, column: 9)
!7337 = !DILocation(line: 207, column: 9, scope: !7338)
!7338 = distinct !DILexicalBlock(scope: !7336, file: !1074, line: 206, column: 12)
!7339 = !DILocation(line: 211, column: 5, scope: !7330)
!7340 = !DILocation(line: 212, column: 1, scope: !7330)
!7341 = distinct !DISubprogram(name: "NVIC_ClearPendingIRQ", scope: !1083, file: !1083, line: 1547, type: !7253, scopeLine: 1548, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1078, retainedNodes: !7342)
!7342 = !{!7343}
!7343 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7341, file: !1083, line: 1547, type: !529)
!7344 = !DILocation(line: 0, scope: !7341)
!7345 = !DILocation(line: 1549, column: 65, scope: !7341)
!7346 = !DILocation(line: 1549, column: 44, scope: !7341)
!7347 = !DILocation(line: 1549, column: 32, scope: !7341)
!7348 = !DILocation(line: 1549, column: 3, scope: !7341)
!7349 = !DILocation(line: 1549, column: 39, scope: !7341)
!7350 = !DILocation(line: 1550, column: 1, scope: !7341)
!7351 = distinct !DISubprogram(name: "hal_nvic_set_priority", scope: !1074, file: !1074, line: 214, type: !7352, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1078, retainedNodes: !7354)
!7352 = !DISubroutineType(types: !7353)
!7353 = !{!1077, !528, !61}
!7354 = !{!7355, !7356, !7357}
!7355 = !DILocalVariable(name: "irq_number", arg: 1, scope: !7351, file: !1074, line: 214, type: !528)
!7356 = !DILocalVariable(name: "priority", arg: 2, scope: !7351, file: !1074, line: 214, type: !61)
!7357 = !DILocalVariable(name: "status", scope: !7351, file: !1074, line: 216, type: !1077)
!7358 = !DILocation(line: 0, scope: !7351)
!7359 = !DILocation(line: 218, column: 40, scope: !7360)
!7360 = distinct !DILexicalBlock(scope: !7351, file: !1074, line: 218, column: 9)
!7361 = !DILocation(line: 222, column: 9, scope: !7362)
!7362 = distinct !DILexicalBlock(scope: !7360, file: !1074, line: 221, column: 12)
!7363 = !DILocation(line: 226, column: 5, scope: !7351)
!7364 = !DILocation(line: 227, column: 1, scope: !7351)
!7365 = distinct !DISubprogram(name: "hal_nvic_get_priority", scope: !1074, file: !1074, line: 229, type: !7286, scopeLine: 230, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1078, retainedNodes: !7366)
!7366 = !{!7367, !7368}
!7367 = !DILocalVariable(name: "irq_number", arg: 1, scope: !7365, file: !1074, line: 229, type: !528)
!7368 = !DILocalVariable(name: "ret", scope: !7365, file: !1074, line: 231, type: !61)
!7369 = !DILocation(line: 0, scope: !7365)
!7370 = !DILocation(line: 233, column: 40, scope: !7371)
!7371 = distinct !DILexicalBlock(scope: !7365, file: !1074, line: 233, column: 9)
!7372 = !DILocation(line: 236, column: 15, scope: !7373)
!7373 = distinct !DILexicalBlock(scope: !7371, file: !1074, line: 235, column: 12)
!7374 = !DILocation(line: 239, column: 5, scope: !7365)
!7375 = !DILocation(line: 240, column: 1, scope: !7365)
!7376 = distinct !DISubprogram(name: "NVIC_GetPriority", scope: !1083, file: !1083, line: 1597, type: !7299, scopeLine: 1598, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1078, retainedNodes: !7377)
!7377 = !{!7378}
!7378 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7376, file: !1083, line: 1597, type: !529)
!7379 = !DILocation(line: 0, scope: !7376)
!7380 = !DILocation(line: 1603, column: 23, scope: !7381)
!7381 = distinct !DILexicalBlock(scope: !7382, file: !1083, line: 1602, column: 8)
!7382 = distinct !DILexicalBlock(scope: !7376, file: !1083, line: 1600, column: 6)
!7383 = !DILocation(line: 1603, column: 60, scope: !7381)
!7384 = !DILocation(line: 1604, column: 1, scope: !7376)
!7385 = distinct !DISubprogram(name: "isrC_main", scope: !1074, file: !1074, line: 248, type: !1075, scopeLine: 249, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1078, retainedNodes: !7386)
!7386 = !{!7387, !7388}
!7387 = !DILocalVariable(name: "status", scope: !7385, file: !1074, line: 250, type: !1077)
!7388 = !DILocalVariable(name: "irq_number", scope: !7385, file: !1074, line: 251, type: !528)
!7389 = !DILocation(line: 0, scope: !7385)
!7390 = !DILocation(line: 253, column: 5, scope: !7385)
!7391 = !DILocation(line: 255, column: 35, scope: !7385)
!7392 = !DILocation(line: 256, column: 40, scope: !7393)
!7393 = distinct !DILexicalBlock(scope: !7385, file: !1074, line: 256, column: 9)
!7394 = !DILocation(line: 259, column: 48, scope: !7395)
!7395 = distinct !DILexicalBlock(scope: !7393, file: !1074, line: 259, column: 16)
!7396 = !DILocation(line: 259, column: 62, scope: !7395)
!7397 = !DILocation(line: 259, column: 16, scope: !7393)
!7398 = !DILocation(line: 261, column: 9, scope: !7399)
!7399 = distinct !DILexicalBlock(scope: !7395, file: !1074, line: 259, column: 71)
!7400 = !DILocation(line: 262, column: 9, scope: !7399)
!7401 = !DILocation(line: 264, column: 55, scope: !7402)
!7402 = distinct !DILexicalBlock(scope: !7395, file: !1074, line: 263, column: 12)
!7403 = !DILocation(line: 264, column: 41, scope: !7402)
!7404 = !DILocation(line: 264, column: 53, scope: !7402)
!7405 = !DILocation(line: 265, column: 41, scope: !7402)
!7406 = !DILocation(line: 265, column: 9, scope: !7402)
!7407 = !DILocation(line: 269, column: 5, scope: !7385)
!7408 = !DILocation(line: 270, column: 1, scope: !7385)
!7409 = distinct !DISubprogram(name: "get_current_irq", scope: !1074, file: !1074, line: 242, type: !3984, scopeLine: 243, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1078, retainedNodes: !7410)
!7410 = !{!7411}
!7411 = !DILocalVariable(name: "irq_num", scope: !7409, file: !1074, line: 244, type: !61)
!7412 = !DILocation(line: 244, column: 31, scope: !7409)
!7413 = !DILocation(line: 244, column: 36, scope: !7409)
!7414 = !DILocation(line: 0, scope: !7409)
!7415 = !DILocation(line: 245, column: 21, scope: !7409)
!7416 = !DILocation(line: 245, column: 5, scope: !7409)
!7417 = distinct !DISubprogram(name: "get_pending_irq", scope: !1074, file: !1074, line: 121, type: !3984, scopeLine: 122, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1078, retainedNodes: !293)
!7418 = !DILocation(line: 123, column: 19, scope: !7417)
!7419 = !DILocation(line: 123, column: 51, scope: !7417)
!7420 = !DILocation(line: 123, column: 5, scope: !7417)
!7421 = distinct !DISubprogram(name: "hal_nvic_register_isr_handler", scope: !1074, file: !1074, line: 272, type: !7422, scopeLine: 273, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1078, retainedNodes: !7425)
!7422 = !DISubroutineType(types: !7423)
!7423 = !{!1077, !528, !7424}
!7424 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_nvic_isr_t", file: !927, line: 175, baseType: !1155)
!7425 = !{!7426, !7427, !7428}
!7426 = !DILocalVariable(name: "irq_number", arg: 1, scope: !7421, file: !1074, line: 272, type: !528)
!7427 = !DILocalVariable(name: "callback", arg: 2, scope: !7421, file: !1074, line: 272, type: !7424)
!7428 = !DILocalVariable(name: "mask", scope: !7421, file: !1074, line: 274, type: !61)
!7429 = !DILocation(line: 0, scope: !7421)
!7430 = !DILocation(line: 276, column: 40, scope: !7431)
!7431 = distinct !DILexicalBlock(scope: !7421, file: !1074, line: 276, column: 9)
!7432 = !DILocation(line: 280, column: 12, scope: !7421)
!7433 = !DILocation(line: 281, column: 5, scope: !7421)
!7434 = !DILocation(line: 282, column: 37, scope: !7421)
!7435 = !DILocation(line: 282, column: 51, scope: !7421)
!7436 = !DILocation(line: 283, column: 37, scope: !7421)
!7437 = !DILocation(line: 283, column: 49, scope: !7421)
!7438 = !DILocation(line: 284, column: 5, scope: !7421)
!7439 = !DILocation(line: 286, column: 5, scope: !7421)
!7440 = !DILocation(line: 287, column: 1, scope: !7421)
!7441 = distinct !DISubprogram(name: "hal_nvic_save_and_set_interrupt_mask", scope: !1074, file: !1074, line: 289, type: !7442, scopeLine: 290, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1078, retainedNodes: !7444)
!7442 = !DISubroutineType(types: !7443)
!7443 = !{!1077, !1204}
!7444 = !{!7445}
!7445 = !DILocalVariable(name: "mask", arg: 1, scope: !7441, file: !1074, line: 289, type: !1204)
!7446 = !DILocation(line: 0, scope: !7441)
!7447 = !DILocation(line: 291, column: 13, scope: !7441)
!7448 = !DILocation(line: 291, column: 11, scope: !7441)
!7449 = !DILocation(line: 292, column: 5, scope: !7441)
!7450 = distinct !DISubprogram(name: "hal_nvic_restore_interrupt_mask", scope: !1074, file: !1074, line: 295, type: !7451, scopeLine: 296, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1078, retainedNodes: !7453)
!7451 = !DISubroutineType(types: !7452)
!7452 = !{!1077, !61}
!7453 = !{!7454}
!7454 = !DILocalVariable(name: "mask", arg: 1, scope: !7450, file: !1074, line: 295, type: !61)
!7455 = !DILocation(line: 0, scope: !7450)
!7456 = !DILocation(line: 297, column: 5, scope: !7450)
!7457 = !DILocation(line: 298, column: 5, scope: !7450)
!7458 = distinct !DISubprogram(name: "save_and_set_interrupt_mask", scope: !2738, file: !2738, line: 51, type: !3984, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2737, retainedNodes: !7459)
!7459 = !{!7460, !7461}
!7460 = !DILocalVariable(name: "mask", scope: !7458, file: !2738, line: 53, type: !61)
!7461 = !DILocalVariable(name: "priority", scope: !7458, file: !2738, line: 55, type: !61)
!7462 = !DILocation(line: 521, column: 3, scope: !7463, inlinedAt: !7467)
!7463 = distinct !DISubprogram(name: "__get_BASEPRI", scope: !7464, file: !7464, line: 517, type: !3984, scopeLine: 518, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2737, retainedNodes: !7465)
!7464 = !DIFile(filename: "../../../../../driver/CMSIS/Include/core_cmFunc.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/uart_loopback_data_dma/GCC")
!7465 = !{!7466}
!7466 = !DILocalVariable(name: "result", scope: !7463, file: !7464, line: 519, type: !61)
!7467 = distinct !DILocation(line: 53, column: 21, scope: !7458)
!7468 = !{i64 457580}
!7469 = !DILocation(line: 0, scope: !7463, inlinedAt: !7467)
!7470 = !DILocation(line: 0, scope: !7458)
!7471 = !DILocalVariable(name: "value", arg: 1, scope: !7472, file: !7464, line: 532, type: !61)
!7472 = distinct !DISubprogram(name: "__set_BASEPRI", scope: !7464, file: !7464, line: 532, type: !4123, scopeLine: 533, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2737, retainedNodes: !7473)
!7473 = !{!7471}
!7474 = !DILocation(line: 0, scope: !7472, inlinedAt: !7475)
!7475 = distinct !DILocation(line: 56, column: 5, scope: !7458)
!7476 = !DILocation(line: 534, column: 3, scope: !7472, inlinedAt: !7475)
!7477 = !{i64 457913}
!7478 = !DILocation(line: 456, column: 3, scope: !7479, inlinedAt: !7480)
!7479 = distinct !DISubprogram(name: "__DMB", scope: !2850, file: !2850, line: 454, type: !291, scopeLine: 455, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2737, retainedNodes: !293)
!7480 = distinct !DILocation(line: 57, column: 5, scope: !7458)
!7481 = !{i64 430669}
!7482 = !DILocation(line: 434, column: 3, scope: !7483, inlinedAt: !7484)
!7483 = distinct !DISubprogram(name: "__ISB", scope: !2850, file: !2850, line: 432, type: !291, scopeLine: 433, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2737, retainedNodes: !293)
!7484 = distinct !DILocation(line: 58, column: 5, scope: !7458)
!7485 = !{i64 430084}
!7486 = !DILocation(line: 59, column: 5, scope: !7458)
!7487 = distinct !DISubprogram(name: "restore_interrupt_mask", scope: !2738, file: !2738, line: 62, type: !4123, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2737, retainedNodes: !7488)
!7488 = !{!7489}
!7489 = !DILocalVariable(name: "mask", arg: 1, scope: !7487, file: !2738, line: 62, type: !61)
!7490 = !DILocation(line: 0, scope: !7487)
!7491 = !DILocation(line: 0, scope: !7472, inlinedAt: !7492)
!7492 = distinct !DILocation(line: 64, column: 5, scope: !7487)
!7493 = !DILocation(line: 534, column: 3, scope: !7472, inlinedAt: !7492)
!7494 = !DILocation(line: 456, column: 3, scope: !7479, inlinedAt: !7495)
!7495 = distinct !DILocation(line: 65, column: 5, scope: !7487)
!7496 = !DILocation(line: 434, column: 3, scope: !7483, inlinedAt: !7497)
!7497 = distinct !DILocation(line: 66, column: 5, scope: !7487)
!7498 = !DILocation(line: 67, column: 1, scope: !7487)
!7499 = distinct !DISubprogram(name: "nvic_mask_all_interrupt", scope: !2738, file: !2738, line: 69, type: !291, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2737, retainedNodes: !7500)
!7500 = !{!7501, !7502}
!7501 = !DILocalVariable(name: "irq_number", scope: !7499, file: !2738, line: 71, type: !528)
!7502 = !DILocalVariable(name: "mask", scope: !7499, file: !2738, line: 72, type: !61)
!7503 = !DILocation(line: 72, column: 21, scope: !7499)
!7504 = !DILocation(line: 0, scope: !7499)
!7505 = !DILocation(line: 73, column: 5, scope: !7506)
!7506 = distinct !DILexicalBlock(scope: !7499, file: !2738, line: 73, column: 5)
!7507 = !DILocation(line: 74, column: 9, scope: !7508)
!7508 = distinct !DILexicalBlock(scope: !7509, file: !2738, line: 73, column: 85)
!7509 = distinct !DILexicalBlock(scope: !7506, file: !2738, line: 73, column: 5)
!7510 = !DILocation(line: 73, column: 81, scope: !7509)
!7511 = !DILocation(line: 73, column: 53, scope: !7509)
!7512 = distinct !{!7512, !7505, !7513}
!7513 = !DILocation(line: 75, column: 5, scope: !7506)
!7514 = !DILocation(line: 76, column: 5, scope: !7499)
!7515 = !DILocation(line: 77, column: 1, scope: !7499)
!7516 = distinct !DISubprogram(name: "NVIC_DisableIRQ", scope: !1083, file: !1083, line: 1507, type: !7253, scopeLine: 1508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2737, retainedNodes: !7517)
!7517 = !{!7518}
!7518 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7516, file: !1083, line: 1507, type: !529)
!7519 = !DILocation(line: 0, scope: !7516)
!7520 = !DILocation(line: 1509, column: 65, scope: !7516)
!7521 = !DILocation(line: 1509, column: 44, scope: !7516)
!7522 = !DILocation(line: 1509, column: 32, scope: !7516)
!7523 = !DILocation(line: 1509, column: 3, scope: !7516)
!7524 = !DILocation(line: 1509, column: 39, scope: !7516)
!7525 = !DILocation(line: 1510, column: 1, scope: !7516)
!7526 = distinct !DISubprogram(name: "nvic_unmask_all_interrupt", scope: !2738, file: !2738, line: 79, type: !291, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2737, retainedNodes: !7527)
!7527 = !{!7528, !7529}
!7528 = !DILocalVariable(name: "irq_number", scope: !7526, file: !2738, line: 81, type: !528)
!7529 = !DILocalVariable(name: "mask", scope: !7526, file: !2738, line: 82, type: !61)
!7530 = !DILocation(line: 82, column: 21, scope: !7526)
!7531 = !DILocation(line: 0, scope: !7526)
!7532 = !DILocation(line: 84, column: 5, scope: !7533)
!7533 = distinct !DILexicalBlock(scope: !7526, file: !2738, line: 84, column: 5)
!7534 = !DILocation(line: 85, column: 9, scope: !7535)
!7535 = distinct !DILexicalBlock(scope: !7536, file: !2738, line: 84, column: 85)
!7536 = distinct !DILexicalBlock(scope: !7533, file: !2738, line: 84, column: 5)
!7537 = !DILocation(line: 84, column: 81, scope: !7536)
!7538 = !DILocation(line: 84, column: 53, scope: !7536)
!7539 = distinct !{!7539, !7532, !7540}
!7540 = !DILocation(line: 86, column: 5, scope: !7533)
!7541 = !DILocation(line: 87, column: 5, scope: !7526)
!7542 = !DILocation(line: 88, column: 1, scope: !7526)
!7543 = distinct !DISubprogram(name: "NVIC_EnableIRQ", scope: !1083, file: !1083, line: 1494, type: !7253, scopeLine: 1495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2737, retainedNodes: !7544)
!7544 = !{!7545}
!7545 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7543, file: !1083, line: 1494, type: !529)
!7546 = !DILocation(line: 0, scope: !7543)
!7547 = !DILocation(line: 1497, column: 91, scope: !7543)
!7548 = !DILocation(line: 1497, column: 61, scope: !7543)
!7549 = !DILocation(line: 1497, column: 40, scope: !7543)
!7550 = !DILocation(line: 1497, column: 3, scope: !7543)
!7551 = !DILocation(line: 1497, column: 46, scope: !7543)
!7552 = !DILocation(line: 1498, column: 1, scope: !7543)
!7553 = distinct !DISubprogram(name: "nvic_clear_all_pending_interrupt", scope: !2738, file: !2738, line: 90, type: !291, scopeLine: 91, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2737, retainedNodes: !7554)
!7554 = !{!7555}
!7555 = !DILocalVariable(name: "irq_number", scope: !7553, file: !2738, line: 92, type: !528)
!7556 = !DILocation(line: 0, scope: !7553)
!7557 = !DILocation(line: 93, column: 5, scope: !7558)
!7558 = distinct !DILexicalBlock(scope: !7553, file: !2738, line: 93, column: 5)
!7559 = !DILocation(line: 94, column: 9, scope: !7560)
!7560 = distinct !DILexicalBlock(scope: !7561, file: !2738, line: 93, column: 85)
!7561 = distinct !DILexicalBlock(scope: !7558, file: !2738, line: 93, column: 5)
!7562 = !DILocation(line: 93, column: 81, scope: !7561)
!7563 = !DILocation(line: 93, column: 53, scope: !7561)
!7564 = distinct !{!7564, !7557, !7565}
!7565 = !DILocation(line: 95, column: 5, scope: !7558)
!7566 = !DILocation(line: 96, column: 1, scope: !7553)
!7567 = distinct !DISubprogram(name: "NVIC_ClearPendingIRQ", scope: !1083, file: !1083, line: 1547, type: !7253, scopeLine: 1548, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2737, retainedNodes: !7568)
!7568 = !{!7569}
!7569 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7567, file: !1083, line: 1547, type: !529)
!7570 = !DILocation(line: 0, scope: !7567)
!7571 = !DILocation(line: 1549, column: 65, scope: !7567)
!7572 = !DILocation(line: 1549, column: 44, scope: !7567)
!7573 = !DILocation(line: 1549, column: 32, scope: !7567)
!7574 = !DILocation(line: 1549, column: 3, scope: !7567)
!7575 = !DILocation(line: 1549, column: 39, scope: !7567)
!7576 = !DILocation(line: 1550, column: 1, scope: !7567)
!7577 = distinct !DISubprogram(name: "nvic_irq_software_trigger", scope: !2738, file: !2738, line: 98, type: !7240, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2737, retainedNodes: !7578)
!7578 = !{!7579}
!7579 = !DILocalVariable(name: "irq_number", arg: 1, scope: !7577, file: !2738, line: 98, type: !528)
!7580 = !DILocation(line: 0, scope: !7577)
!7581 = !DILocation(line: 100, column: 24, scope: !7582)
!7582 = distinct !DILexicalBlock(scope: !7577, file: !2738, line: 100, column: 9)
!7583 = !DILocation(line: 104, column: 5, scope: !7577)
!7584 = !DILocation(line: 105, column: 5, scope: !7577)
!7585 = !DILocation(line: 106, column: 1, scope: !7577)
!7586 = distinct !DISubprogram(name: "software_trigger_irq", scope: !2738, file: !2738, line: 45, type: !526, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2737, retainedNodes: !7587)
!7587 = !{!7588}
!7588 = !DILocalVariable(name: "irq_number", arg: 1, scope: !7586, file: !2738, line: 45, type: !528)
!7589 = !DILocation(line: 0, scope: !7586)
!7590 = !DILocation(line: 47, column: 54, scope: !7586)
!7591 = !DILocation(line: 47, column: 16, scope: !7586)
!7592 = !DILocation(line: 445, column: 3, scope: !7593, inlinedAt: !7594)
!7593 = distinct !DISubprogram(name: "__DSB", scope: !2850, file: !2850, line: 443, type: !291, scopeLine: 444, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2737, retainedNodes: !293)
!7594 = distinct !DILocation(line: 48, column: 5, scope: !7586)
!7595 = !{i64 430380}
!7596 = !DILocation(line: 49, column: 1, scope: !7586)
!7597 = distinct !DISubprogram(name: "hal_nvic_query_exception_number", scope: !2738, file: !2738, line: 114, type: !3984, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2737, retainedNodes: !293)
!7598 = !DILocation(line: 116, column: 19, scope: !7597)
!7599 = !DILocation(line: 116, column: 24, scope: !7597)
!7600 = !DILocation(line: 116, column: 5, scope: !7597)
!7601 = distinct !DISubprogram(name: "SFI_BlankCheck", scope: !1167, file: !1167, line: 71, type: !7602, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !7604)
!7602 = !DISubroutineType(types: !7603)
!7603 = !{null, !88, !61}
!7604 = !{!7605, !7606, !7607, !7701, !7702, !7703}
!7605 = !DILocalVariable(name: "MTDData", arg: 1, scope: !7601, file: !1167, line: 71, type: !88)
!7606 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !7601, file: !1167, line: 71, type: !61)
!7607 = !DILocalVariable(name: "D", scope: !7601, file: !1167, line: 73, type: !7608)
!7608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7609, size: 32)
!7609 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_Data", file: !1360, line: 193, baseType: !7610)
!7610 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1360, line: 134, size: 1824, elements: !7611)
!7611 = !{!7612, !7613, !7614, !7620, !7626, !7627, !7634, !7635, !7642, !7643, !7644, !7645, !7652, !7653, !7683, !7684, !7685, !7686, !7687, !7688, !7689, !7690, !7691, !7692, !7693, !7694, !7695, !7696, !7697, !7698, !7699, !7700}
!7612 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !7610, file: !1360, line: 136, baseType: !61, size: 32)
!7613 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !7610, file: !1360, line: 137, baseType: !969, size: 32, offset: 32)
!7614 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !7610, file: !1360, line: 138, baseType: !7615, size: 32, offset: 64)
!7615 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !1444, line: 56, baseType: !7616)
!7616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7617, size: 32)
!7617 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1444, line: 54, size: 8, elements: !7618)
!7618 = !{!7619}
!7619 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !7617, file: !1444, line: 55, baseType: !463, size: 8)
!7620 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !7610, file: !1360, line: 139, baseType: !7621, size: 32, offset: 96)
!7621 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !1444, line: 46, baseType: !7622)
!7622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7623, size: 32)
!7623 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1444, line: 44, size: 8, elements: !7624)
!7624 = !{!7625}
!7625 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !7623, file: !1444, line: 45, baseType: !463, size: 8)
!7626 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !7610, file: !1360, line: 140, baseType: !1456, size: 8, offset: 128)
!7627 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !7610, file: !1360, line: 143, baseType: !7628, size: 32, offset: 160)
!7628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7629, size: 32)
!7629 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !1462, line: 146, baseType: !7630)
!7630 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1462, line: 143, size: 64, elements: !7631)
!7631 = !{!7632, !7633}
!7632 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !7630, file: !1462, line: 144, baseType: !61, size: 32)
!7633 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !7630, file: !1462, line: 145, baseType: !61, size: 32, offset: 32)
!7634 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !7610, file: !1360, line: 144, baseType: !969, size: 32, offset: 192)
!7635 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !7610, file: !1360, line: 145, baseType: !7636, size: 32, offset: 224)
!7636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7637, size: 32)
!7637 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !1462, line: 152, baseType: !7638)
!7638 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1462, line: 149, size: 64, elements: !7639)
!7639 = !{!7640, !7641}
!7640 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !7638, file: !1462, line: 150, baseType: !61, size: 32)
!7641 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !7638, file: !1462, line: 151, baseType: !61, size: 32, offset: 32)
!7642 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !7610, file: !1360, line: 146, baseType: !969, size: 32, offset: 256)
!7643 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !7610, file: !1360, line: 147, baseType: !61, size: 32, offset: 288)
!7644 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !7610, file: !1360, line: 148, baseType: !969, size: 32, offset: 320)
!7645 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !7610, file: !1360, line: 151, baseType: !7646, size: 1024, offset: 352)
!7646 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7647, size: 1024, elements: !1485)
!7647 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !1462, line: 170, baseType: !7648)
!7648 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1462, line: 167, size: 64, elements: !7649)
!7649 = !{!7650, !7651}
!7650 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !7648, file: !1462, line: 168, baseType: !61, size: 32)
!7651 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !7648, file: !1462, line: 169, baseType: !61, size: 32, offset: 32)
!7652 = !DIDerivedType(tag: DW_TAG_member, name: "StatusMap", scope: !7610, file: !1360, line: 155, baseType: !1487, size: 32, offset: 1376)
!7653 = !DIDerivedType(tag: DW_TAG_member, name: "CMD", scope: !7610, file: !1360, line: 156, baseType: !7654, size: 32, offset: 1408)
!7654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7655, size: 32)
!7655 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_CMD", file: !1360, line: 124, baseType: !7656)
!7656 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1360, line: 90, size: 200, elements: !7657)
!7657 = !{!7658, !7659, !7660, !7661, !7662, !7663, !7664, !7665, !7666, !7667, !7668, !7669, !7670, !7671, !7672, !7673, !7674, !7675, !7676, !7677, !7678, !7679, !7680, !7681, !7682}
!7658 = !DIDerivedType(tag: DW_TAG_member, name: "PageProg", scope: !7656, file: !1360, line: 91, baseType: !463, size: 8)
!7659 = !DIDerivedType(tag: DW_TAG_member, name: "WriteEnable", scope: !7656, file: !1360, line: 92, baseType: !463, size: 8, offset: 8)
!7660 = !DIDerivedType(tag: DW_TAG_member, name: "Suspend", scope: !7656, file: !1360, line: 94, baseType: !463, size: 8, offset: 16)
!7661 = !DIDerivedType(tag: DW_TAG_member, name: "Resume", scope: !7656, file: !1360, line: 95, baseType: !463, size: 8, offset: 24)
!7662 = !DIDerivedType(tag: DW_TAG_member, name: "Read", scope: !7656, file: !1360, line: 96, baseType: !463, size: 8, offset: 32)
!7663 = !DIDerivedType(tag: DW_TAG_member, name: "Erase", scope: !7656, file: !1360, line: 98, baseType: !463, size: 8, offset: 40)
!7664 = !DIDerivedType(tag: DW_TAG_member, name: "Erase4K", scope: !7656, file: !1360, line: 99, baseType: !463, size: 8, offset: 48)
!7665 = !DIDerivedType(tag: DW_TAG_member, name: "Erase32K", scope: !7656, file: !1360, line: 100, baseType: !463, size: 8, offset: 56)
!7666 = !DIDerivedType(tag: DW_TAG_member, name: "Erase64K", scope: !7656, file: !1360, line: 101, baseType: !463, size: 8, offset: 64)
!7667 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_SPI", scope: !7656, file: !1360, line: 103, baseType: !463, size: 8, offset: 72)
!7668 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_QPI", scope: !7656, file: !1360, line: 104, baseType: !463, size: 8, offset: 80)
!7669 = !DIDerivedType(tag: DW_TAG_member, name: "ReadBPReg", scope: !7656, file: !1360, line: 106, baseType: !463, size: 8, offset: 88)
!7670 = !DIDerivedType(tag: DW_TAG_member, name: "WriteBPReg", scope: !7656, file: !1360, line: 107, baseType: !463, size: 8, offset: 96)
!7671 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSecurityReg", scope: !7656, file: !1360, line: 108, baseType: !463, size: 8, offset: 104)
!7672 = !DIDerivedType(tag: DW_TAG_member, name: "WriteSecurityReg", scope: !7656, file: !1360, line: 109, baseType: !463, size: 8, offset: 112)
!7673 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSuspendReg", scope: !7656, file: !1360, line: 110, baseType: !463, size: 8, offset: 120)
!7674 = !DIDerivedType(tag: DW_TAG_member, name: "ReadReadyReg", scope: !7656, file: !1360, line: 111, baseType: !463, size: 8, offset: 128)
!7675 = !DIDerivedType(tag: DW_TAG_member, name: "ReadFailReg", scope: !7656, file: !1360, line: 112, baseType: !463, size: 8, offset: 136)
!7676 = !DIDerivedType(tag: DW_TAG_member, name: "EnterDPD", scope: !7656, file: !1360, line: 114, baseType: !463, size: 8, offset: 144)
!7677 = !DIDerivedType(tag: DW_TAG_member, name: "LeaveDPD", scope: !7656, file: !1360, line: 115, baseType: !463, size: 8, offset: 152)
!7678 = !DIDerivedType(tag: DW_TAG_member, name: "OTPProg", scope: !7656, file: !1360, line: 118, baseType: !463, size: 8, offset: 160)
!7679 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !7656, file: !1360, line: 119, baseType: !463, size: 8, offset: 168)
!7680 = !DIDerivedType(tag: DW_TAG_member, name: "OTPEnter", scope: !7656, file: !1360, line: 120, baseType: !463, size: 8, offset: 176)
!7681 = !DIDerivedType(tag: DW_TAG_member, name: "OTPExit", scope: !7656, file: !1360, line: 121, baseType: !463, size: 8, offset: 184)
!7682 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !7656, file: !1360, line: 122, baseType: !463, size: 8, offset: 192)
!7683 = !DIDerivedType(tag: DW_TAG_member, name: "Flag", scope: !7610, file: !1360, line: 157, baseType: !61, size: 32, offset: 1440)
!7684 = !DIDerivedType(tag: DW_TAG_member, name: "BPRBitCount", scope: !7610, file: !1360, line: 158, baseType: !1236, size: 16, offset: 1472)
!7685 = !DIDerivedType(tag: DW_TAG_member, name: "UniformBlock", scope: !7610, file: !1360, line: 159, baseType: !1236, size: 16, offset: 1488)
!7686 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLength", scope: !7610, file: !1360, line: 163, baseType: !1236, size: 16, offset: 1504)
!7687 = !DIDerivedType(tag: DW_TAG_member, name: "OTPBase", scope: !7610, file: !1360, line: 164, baseType: !1236, size: 16, offset: 1520)
!7688 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendLatency", scope: !7610, file: !1360, line: 167, baseType: !463, size: 8, offset: 1536)
!7689 = !DIDerivedType(tag: DW_TAG_member, name: "FlashID", scope: !7610, file: !1360, line: 168, baseType: !1526, size: 24, offset: 1544)
!7690 = !DIDerivedType(tag: DW_TAG_member, name: "DriverStatus", scope: !7610, file: !1360, line: 169, baseType: !463, size: 8, offset: 1568)
!7691 = !DIDerivedType(tag: DW_TAG_member, name: "AddressCycle", scope: !7610, file: !1360, line: 170, baseType: !463, size: 8, offset: 1576)
!7692 = !DIDerivedType(tag: DW_TAG_member, name: "CS", scope: !7610, file: !1360, line: 173, baseType: !1236, size: 16, offset: 1584)
!7693 = !DIDerivedType(tag: DW_TAG_member, name: "sf_dal_fix", scope: !7610, file: !1360, line: 174, baseType: !61, size: 32, offset: 1600)
!7694 = !DIDerivedType(tag: DW_TAG_member, name: "CS_Size", scope: !7610, file: !1360, line: 175, baseType: !61, size: 32, offset: 1632)
!7695 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_BUSY", scope: !7610, file: !1360, line: 178, baseType: !91, size: 8, offset: 1664)
!7696 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_SUSPENDED", scope: !7610, file: !1360, line: 179, baseType: !91, size: 8, offset: 1672)
!7697 = !DIDerivedType(tag: DW_TAG_member, name: "UnlockBlock", scope: !7610, file: !1360, line: 182, baseType: !1537, size: 32, offset: 1696)
!7698 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !7610, file: !1360, line: 186, baseType: !1537, size: 32, offset: 1728)
!7699 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !7610, file: !1360, line: 187, baseType: !1542, size: 32, offset: 1760)
!7700 = !DIDerivedType(tag: DW_TAG_member, name: "OTPWrite", scope: !7610, file: !1360, line: 188, baseType: !1542, size: 32, offset: 1792)
!7701 = !DILocalVariable(name: "i", scope: !7601, file: !1167, line: 74, type: !61)
!7702 = !DILocalVariable(name: "data_cnt", scope: !7601, file: !1167, line: 74, type: !61)
!7703 = !DILocalVariable(name: "p_data", scope: !7601, file: !1167, line: 75, type: !1204)
!7704 = !DILocation(line: 0, scope: !7601)
!7705 = !DILocation(line: 77, column: 16, scope: !7601)
!7706 = !DILocation(line: 79, column: 53, scope: !7707)
!7707 = distinct !DILexicalBlock(scope: !7708, file: !1167, line: 79, column: 5)
!7708 = distinct !DILexicalBlock(scope: !7601, file: !1167, line: 79, column: 5)
!7709 = !DILocation(line: 79, column: 5, scope: !7708)
!7710 = !DILocation(line: 79, column: 41, scope: !7708)
!7711 = !DILocation(line: 77, column: 47, scope: !7601)
!7712 = !DILocation(line: 80, column: 13, scope: !7713)
!7713 = distinct !DILexicalBlock(scope: !7714, file: !1167, line: 80, column: 13)
!7714 = distinct !DILexicalBlock(scope: !7707, file: !1167, line: 79, column: 80)
!7715 = !DILocation(line: 80, column: 21, scope: !7713)
!7716 = !DILocation(line: 80, column: 13, scope: !7714)
!7717 = !DILocation(line: 81, column: 13, scope: !7718)
!7718 = distinct !DILexicalBlock(scope: !7719, file: !1167, line: 81, column: 13)
!7719 = distinct !DILexicalBlock(scope: !7720, file: !1167, line: 81, column: 13)
!7720 = distinct !DILexicalBlock(scope: !7721, file: !1167, line: 81, column: 13)
!7721 = distinct !DILexicalBlock(scope: !7713, file: !1167, line: 80, column: 36)
!7722 = !DILocation(line: 79, column: 65, scope: !7707)
!7723 = !DILocation(line: 79, column: 70, scope: !7707)
!7724 = distinct !{!7724, !7709, !7725}
!7725 = !DILocation(line: 84, column: 5, scope: !7708)
!7726 = !DILocation(line: 85, column: 1, scope: !7601)
!7727 = distinct !DISubprogram(name: "SFI_ReverseByteOrder", scope: !1167, file: !1167, line: 93, type: !3732, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !7728)
!7728 = !{!7729, !7730}
!7729 = !DILocalVariable(name: "num", arg: 1, scope: !7727, file: !1167, line: 93, type: !61)
!7730 = !DILocalVariable(name: "ret", scope: !7727, file: !1167, line: 95, type: !18)
!7731 = !DILocation(line: 0, scope: !7727)
!7732 = !DILocation(line: 100, column: 9, scope: !7727)
!7733 = !DILocation(line: 102, column: 5, scope: !7727)
!7734 = distinct !DISubprogram(name: "SFI_MacEnable", scope: !1167, file: !1167, line: 110, type: !7735, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !7738)
!7735 = !DISubroutineType(types: !7736)
!7736 = !{null, !7737}
!7737 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1236)
!7738 = !{!7739, !7740}
!7739 = !DILocalVariable(name: "CS", arg: 1, scope: !7734, file: !1167, line: 110, type: !7737)
!7740 = !DILocalVariable(name: "val", scope: !7734, file: !1167, line: 112, type: !61)
!7741 = !DILocation(line: 0, scope: !7734)
!7742 = !DILocation(line: 114, column: 5, scope: !7743)
!7743 = distinct !DILexicalBlock(scope: !7744, file: !1167, line: 114, column: 5)
!7744 = distinct !DILexicalBlock(scope: !7734, file: !1167, line: 114, column: 5)
!7745 = !DILocation(line: 116, column: 16, scope: !7734)
!7746 = !DILocation(line: 117, column: 9, scope: !7734)
!7747 = !DILocation(line: 122, column: 13, scope: !7748)
!7748 = distinct !DILexicalBlock(scope: !7749, file: !1167, line: 121, column: 27)
!7749 = distinct !DILexicalBlock(scope: !7750, file: !1167, line: 121, column: 16)
!7750 = distinct !DILexicalBlock(scope: !7734, file: !1167, line: 117, column: 9)
!7751 = !DILocation(line: 127, column: 9, scope: !7752)
!7752 = distinct !DILexicalBlock(scope: !7753, file: !1167, line: 127, column: 9)
!7753 = distinct !DILexicalBlock(scope: !7754, file: !1167, line: 127, column: 9)
!7754 = distinct !DILexicalBlock(scope: !7755, file: !1167, line: 127, column: 9)
!7755 = distinct !DILexicalBlock(scope: !7749, file: !1167, line: 125, column: 12)
!7756 = !DILocation(line: 0, scope: !7750)
!7757 = !DILocation(line: 134, column: 5, scope: !7734)
!7758 = !DILocation(line: 134, column: 19, scope: !7734)
!7759 = !DILocation(line: 134, column: 35, scope: !7734)
!7760 = !DILocation(line: 134, column: 12, scope: !7734)
!7761 = distinct !{!7761, !7757, !7762}
!7762 = !DILocation(line: 134, column: 57, scope: !7734)
!7763 = !DILocation(line: 135, column: 19, scope: !7734)
!7764 = !DILocation(line: 135, column: 34, scope: !7734)
!7765 = !DILocation(line: 135, column: 12, scope: !7734)
!7766 = !DILocation(line: 135, column: 5, scope: !7734)
!7767 = distinct !{!7767, !7766, !7768}
!7768 = !DILocation(line: 135, column: 50, scope: !7734)
!7769 = !DILocation(line: 130, column: 9, scope: !7734)
!7770 = !DILocation(line: 138, column: 24, scope: !7734)
!7771 = !DILocation(line: 139, column: 1, scope: !7734)
!7772 = distinct !DISubprogram(name: "SFI_MacLeave", scope: !1167, file: !1167, line: 148, type: !7735, scopeLine: 149, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !7773)
!7773 = !{!7774, !7775}
!7774 = !DILocalVariable(name: "CS", arg: 1, scope: !7772, file: !1167, line: 148, type: !7737)
!7775 = !DILocalVariable(name: "val", scope: !7772, file: !1167, line: 150, type: !61)
!7776 = !DILocation(line: 0, scope: !7772)
!7777 = !DILocation(line: 153, column: 16, scope: !7772)
!7778 = !DILocation(line: 154, column: 9, scope: !7772)
!7779 = !DILocation(line: 155, column: 24, scope: !7772)
!7780 = !DILocation(line: 158, column: 5, scope: !7772)
!7781 = !DILocation(line: 158, column: 18, scope: !7772)
!7782 = !DILocation(line: 158, column: 32, scope: !7772)
!7783 = distinct !{!7783, !7780, !7784}
!7784 = !DILocation(line: 158, column: 49, scope: !7772)
!7785 = !DILocation(line: 163, column: 16, scope: !7772)
!7786 = !DILocation(line: 164, column: 9, scope: !7772)
!7787 = !DILocation(line: 165, column: 24, scope: !7772)
!7788 = !DILocation(line: 168, column: 5, scope: !7772)
!7789 = !DILocation(line: 168, column: 18, scope: !7772)
!7790 = !DILocation(line: 168, column: 32, scope: !7772)
!7791 = distinct !{!7791, !7788, !7792}
!7792 = !DILocation(line: 168, column: 46, scope: !7772)
!7793 = !DILocation(line: 174, column: 10, scope: !7794)
!7794 = distinct !DILexicalBlock(scope: !7772, file: !1167, line: 174, column: 9)
!7795 = !DILocation(line: 174, column: 25, scope: !7794)
!7796 = !DILocation(line: 174, column: 9, scope: !7772)
!7797 = !DILocation(line: 175, column: 9, scope: !7798)
!7798 = distinct !DILexicalBlock(scope: !7799, file: !1167, line: 175, column: 9)
!7799 = distinct !DILexicalBlock(scope: !7800, file: !1167, line: 175, column: 9)
!7800 = distinct !DILexicalBlock(scope: !7794, file: !1167, line: 174, column: 36)
!7801 = !DILocation(line: 176, column: 5, scope: !7800)
!7802 = !DILocation(line: 179, column: 1, scope: !7772)
!7803 = distinct !DISubprogram(name: "SFI_MacTrigger", scope: !1167, file: !1167, line: 186, type: !7804, scopeLine: 187, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !7806)
!7804 = !DISubroutineType(types: !7805)
!7805 = !{!61, !7737}
!7806 = !{!7807, !7808, !7809}
!7807 = !DILocalVariable(name: "CS", arg: 1, scope: !7803, file: !1167, line: 186, type: !7737)
!7808 = !DILocalVariable(name: "val", scope: !7803, file: !1167, line: 188, type: !61)
!7809 = !DILocalVariable(name: "misc_ctl", scope: !7803, file: !1167, line: 189, type: !61)
!7810 = !DILocation(line: 0, scope: !7803)
!7811 = !DILocation(line: 204, column: 16, scope: !7803)
!7812 = !DILocation(line: 208, column: 12, scope: !7813)
!7813 = distinct !DILexicalBlock(scope: !7803, file: !1167, line: 208, column: 9)
!7814 = !DILocation(line: 208, column: 9, scope: !7803)
!7815 = !DILocation(line: 212, column: 20, scope: !7803)
!7816 = !DILocation(line: 215, column: 1, scope: !7803)
!7817 = !DILocation(line: 215, column: 15, scope: !7803)
!7818 = !DILocation(line: 215, column: 29, scope: !7803)
!7819 = !DILocation(line: 215, column: 8, scope: !7803)
!7820 = distinct !{!7820, !7816, !7821}
!7821 = !DILocation(line: 215, column: 46, scope: !7803)
!7822 = !DILocation(line: 216, column: 22, scope: !7803)
!7823 = !DILocation(line: 216, column: 36, scope: !7803)
!7824 = !DILocation(line: 216, column: 9, scope: !7803)
!7825 = distinct !{!7825, !7824, !7826}
!7826 = !DILocation(line: 216, column: 47, scope: !7803)
!7827 = !DILocation(line: 218, column: 13, scope: !7803)
!7828 = distinct !DISubprogram(name: "SFI_MacWaitReady", scope: !1167, file: !1167, line: 227, type: !7735, scopeLine: 228, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !7829)
!7829 = !{!7830}
!7830 = !DILocalVariable(name: "CS", arg: 1, scope: !7828, file: !1167, line: 227, type: !7737)
!7831 = !DILocation(line: 0, scope: !7828)
!7832 = !DILocation(line: 235, column: 5, scope: !7828)
!7833 = !DILocation(line: 236, column: 5, scope: !7828)
!7834 = !DILocation(line: 238, column: 1, scope: !7828)
!7835 = distinct !DISubprogram(name: "SFI_Dev_Command", scope: !1167, file: !1167, line: 249, type: !7836, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !7838)
!7836 = !DISubroutineType(types: !7837)
!7837 = !{null, !7737, !979}
!7838 = !{!7839, !7840, !7841, !7842, !7843}
!7839 = !DILocalVariable(name: "CS", arg: 1, scope: !7835, file: !1167, line: 249, type: !7737)
!7840 = !DILocalVariable(name: "cmd", arg: 2, scope: !7835, file: !1167, line: 249, type: !979)
!7841 = !DILocalVariable(name: "cmdi", scope: !7835, file: !1167, line: 251, type: !61)
!7842 = !DILocalVariable(name: "cmdo", scope: !7835, file: !1167, line: 251, type: !61)
!7843 = !DILocalVariable(name: "len", scope: !7835, file: !1167, line: 252, type: !463)
!7844 = !DILocation(line: 0, scope: !7835)
!7845 = !DILocation(line: 254, column: 46, scope: !7846)
!7846 = distinct !DILexicalBlock(scope: !7847, file: !1167, line: 254, column: 5)
!7847 = distinct !DILexicalBlock(scope: !7835, file: !1167, line: 254, column: 5)
!7848 = !DILocation(line: 254, column: 5, scope: !7847)
!7849 = !DILocation(line: 255, column: 22, scope: !7850)
!7850 = distinct !DILexicalBlock(scope: !7846, file: !1167, line: 254, column: 103)
!7851 = !DILocation(line: 255, column: 59, scope: !7850)
!7852 = !DILocation(line: 255, column: 51, scope: !7850)
!7853 = !DILocation(line: 254, column: 65, scope: !7846)
!7854 = !DILocation(line: 254, column: 97, scope: !7846)
!7855 = distinct !{!7855, !7848, !7856}
!7856 = !DILocation(line: 256, column: 5, scope: !7847)
!7857 = !DILocation(line: 258, column: 9, scope: !7858)
!7858 = distinct !DILexicalBlock(scope: !7835, file: !1167, line: 258, column: 9)
!7859 = !DILocation(line: 262, column: 5, scope: !7835)
!7860 = !DILocation(line: 263, column: 33, scope: !7835)
!7861 = !DILocation(line: 264, column: 25, scope: !7835)
!7862 = !DILocation(line: 265, column: 24, scope: !7835)
!7863 = !DILocation(line: 266, column: 5, scope: !7835)
!7864 = !DILocation(line: 268, column: 5, scope: !7835)
!7865 = !DILocation(line: 269, column: 1, scope: !7835)
!7866 = distinct !DISubprogram(name: "SFI_Dev_CommandAddress", scope: !1167, file: !1167, line: 281, type: !7867, scopeLine: 282, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !7869)
!7867 = !DISubroutineType(types: !7868)
!7868 = !{null, !7737, !2370, !979, !979}
!7869 = !{!7870, !7871, !7872, !7873, !7874, !7875}
!7870 = !DILocalVariable(name: "CS", arg: 1, scope: !7866, file: !1167, line: 281, type: !7737)
!7871 = !DILocalVariable(name: "cmd", arg: 2, scope: !7866, file: !1167, line: 281, type: !2370)
!7872 = !DILocalVariable(name: "address", arg: 3, scope: !7866, file: !1167, line: 281, type: !979)
!7873 = !DILocalVariable(name: "address_bytes", arg: 4, scope: !7866, file: !1167, line: 281, type: !979)
!7874 = !DILocalVariable(name: "cmd1", scope: !7866, file: !1167, line: 283, type: !61)
!7875 = !DILocalVariable(name: "cmd2", scope: !7866, file: !1167, line: 283, type: !61)
!7876 = !DILocation(line: 0, scope: !7866)
!7877 = !DILocation(line: 285, column: 12, scope: !7866)
!7878 = !DILocation(line: 287, column: 23, scope: !7879)
!7879 = distinct !DILexicalBlock(scope: !7866, file: !1167, line: 287, column: 9)
!7880 = !DILocation(line: 287, column: 9, scope: !7866)
!7881 = !DILocation(line: 288, column: 22, scope: !7882)
!7882 = distinct !DILexicalBlock(scope: !7879, file: !1167, line: 287, column: 31)
!7883 = !DILocation(line: 288, column: 55, scope: !7882)
!7884 = !DILocation(line: 288, column: 53, scope: !7882)
!7885 = !DILocation(line: 289, column: 5, scope: !7882)
!7886 = !DILocation(line: 290, column: 22, scope: !7887)
!7887 = distinct !DILexicalBlock(scope: !7879, file: !1167, line: 289, column: 12)
!7888 = !DILocation(line: 290, column: 53, scope: !7887)
!7889 = !DILocation(line: 290, column: 51, scope: !7887)
!7890 = !DILocation(line: 291, column: 21, scope: !7887)
!7891 = !DILocation(line: 0, scope: !7879)
!7892 = !DILocation(line: 294, column: 33, scope: !7866)
!7893 = !DILocation(line: 295, column: 38, scope: !7866)
!7894 = !DILocation(line: 296, column: 41, scope: !7866)
!7895 = !DILocation(line: 296, column: 25, scope: !7866)
!7896 = !DILocation(line: 297, column: 24, scope: !7866)
!7897 = !DILocation(line: 299, column: 5, scope: !7866)
!7898 = !DILocation(line: 300, column: 5, scope: !7866)
!7899 = !DILocation(line: 302, column: 1, scope: !7866)
!7900 = distinct !DISubprogram(name: "SFI_GPRAM_Write_C1A3", scope: !1167, file: !1167, line: 312, type: !7901, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !7903)
!7901 = !DISubroutineType(types: !7902)
!7902 = !{!61, !979, !979}
!7903 = !{!7904, !7905}
!7904 = !DILocalVariable(name: "cmd", arg: 1, scope: !7900, file: !1167, line: 312, type: !979)
!7905 = !DILocalVariable(name: "address", arg: 2, scope: !7900, file: !1167, line: 312, type: !979)
!7906 = !DILocation(line: 0, scope: !7900)
!7907 = !DILocation(line: 314, column: 14, scope: !7900)
!7908 = !DILocation(line: 314, column: 44, scope: !7900)
!7909 = !DILocation(line: 314, column: 82, scope: !7900)
!7910 = !DILocation(line: 314, column: 75, scope: !7900)
!7911 = !DILocation(line: 314, column: 5, scope: !7900)
!7912 = distinct !DISubprogram(name: "SFI_GPRAM_Write_C1A4", scope: !1167, file: !1167, line: 332, type: !7913, scopeLine: 333, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !7916)
!7913 = !DISubroutineType(types: !7914)
!7914 = !{!61, !979, !979, !7915, !1204}
!7915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !969, size: 32)
!7916 = !{!7917, !7918, !7919, !7920, !7921, !7929, !7930, !7931}
!7917 = !DILocalVariable(name: "cmd", arg: 1, scope: !7912, file: !1167, line: 332, type: !979)
!7918 = !DILocalVariable(name: "address", arg: 2, scope: !7912, file: !1167, line: 332, type: !979)
!7919 = !DILocalVariable(name: "p_data", arg: 3, scope: !7912, file: !1167, line: 332, type: !7915)
!7920 = !DILocalVariable(name: "length", arg: 4, scope: !7912, file: !1167, line: 332, type: !1204)
!7921 = !DILocalVariable(name: "tmp", scope: !7912, file: !1167, line: 334, type: !7922)
!7922 = !DIDerivedType(tag: DW_TAG_typedef, name: "sf_uint", file: !1360, line: 202, baseType: !7923)
!7923 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1360, line: 198, size: 32, elements: !7924)
!7924 = !{!7925, !7926, !7928}
!7925 = !DIDerivedType(tag: DW_TAG_member, name: "u32", scope: !7923, file: !1360, line: 199, baseType: !61, size: 32)
!7926 = !DIDerivedType(tag: DW_TAG_member, name: "u16", scope: !7923, file: !1360, line: 200, baseType: !7927, size: 32)
!7927 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1236, size: 32, elements: !480)
!7928 = !DIDerivedType(tag: DW_TAG_member, name: "u8", scope: !7923, file: !1360, line: 201, baseType: !705, size: 32)
!7929 = !DILocalVariable(name: "cmd1", scope: !7912, file: !1167, line: 335, type: !61)
!7930 = !DILocalVariable(name: "cmd2", scope: !7912, file: !1167, line: 335, type: !61)
!7931 = !DILocalVariable(name: "i", scope: !7912, file: !1167, line: 336, type: !61)
!7932 = !DILocation(line: 0, scope: !7912)
!7933 = !DILocation(line: 334, column: 5, scope: !7912)
!7934 = !DILocation(line: 334, column: 16, scope: !7912)
!7935 = !DILocation(line: 338, column: 12, scope: !7912)
!7936 = !DILocation(line: 340, column: 17, scope: !7912)
!7937 = !DILocation(line: 342, column: 17, scope: !7912)
!7938 = !DILocation(line: 342, column: 9, scope: !7912)
!7939 = !DILocation(line: 342, column: 15, scope: !7912)
!7940 = !DILocation(line: 344, column: 22, scope: !7941)
!7941 = distinct !DILexicalBlock(scope: !7942, file: !1167, line: 343, column: 29)
!7942 = distinct !DILexicalBlock(scope: !7943, file: !1167, line: 343, column: 5)
!7943 = distinct !DILexicalBlock(scope: !7912, file: !1167, line: 343, column: 5)
!7944 = !DILocation(line: 343, column: 5, scope: !7943)
!7945 = !DILocation(line: 344, column: 21, scope: !7941)
!7946 = !DILocation(line: 344, column: 9, scope: !7941)
!7947 = !DILocation(line: 344, column: 19, scope: !7941)
!7948 = !DILocation(line: 345, column: 18, scope: !7941)
!7949 = !DILocation(line: 343, column: 25, scope: !7942)
!7950 = !DILocation(line: 343, column: 19, scope: !7942)
!7951 = distinct !{!7951, !7944, !7952}
!7952 = !DILocation(line: 346, column: 5, scope: !7943)
!7953 = !DILocation(line: 347, column: 16, scope: !7912)
!7954 = !DILocation(line: 348, column: 16, scope: !7912)
!7955 = !DILocation(line: 348, column: 15, scope: !7912)
!7956 = !DILocation(line: 339, column: 17, scope: !7912)
!7957 = !DILocation(line: 339, column: 52, scope: !7912)
!7958 = !DILocation(line: 339, column: 45, scope: !7912)
!7959 = !DILocation(line: 348, column: 13, scope: !7912)
!7960 = !DILocation(line: 349, column: 38, scope: !7912)
!7961 = !DILocation(line: 351, column: 1, scope: !7912)
!7962 = !DILocation(line: 350, column: 5, scope: !7912)
!7963 = distinct !DISubprogram(name: "SFI_GPRAM_Write", scope: !1167, file: !1167, line: 367, type: !7964, scopeLine: 368, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !7966)
!7964 = !DISubroutineType(types: !7965)
!7965 = !{null, !61, !88, !1144}
!7966 = !{!7967, !7968, !7969, !7970, !7971, !7972}
!7967 = !DILocalVariable(name: "gpram_offset", arg: 1, scope: !7963, file: !1167, line: 367, type: !61)
!7968 = !DILocalVariable(name: "buff", arg: 2, scope: !7963, file: !1167, line: 367, type: !88)
!7969 = !DILocalVariable(name: "length", arg: 3, scope: !7963, file: !1167, line: 367, type: !1144)
!7970 = !DILocalVariable(name: "i", scope: !7963, file: !1167, line: 369, type: !61)
!7971 = !DILocalVariable(name: "p_data", scope: !7963, file: !1167, line: 370, type: !969)
!7972 = !DILocalVariable(name: "tmp", scope: !7963, file: !1167, line: 371, type: !7922)
!7973 = !DILocation(line: 0, scope: !7963)
!7974 = !DILocation(line: 371, column: 5, scope: !7963)
!7975 = !DILocation(line: 371, column: 13, scope: !7963)
!7976 = !DILocation(line: 373, column: 18, scope: !7963)
!7977 = !DILocation(line: 376, column: 15, scope: !7978)
!7978 = distinct !DILexicalBlock(scope: !7963, file: !1167, line: 376, column: 9)
!7979 = !DILocation(line: 376, column: 30, scope: !7978)
!7980 = !DILocation(line: 376, column: 11, scope: !7978)
!7981 = !DILocation(line: 376, column: 9, scope: !7963)
!7982 = !DILocation(line: 377, column: 23, scope: !7983)
!7983 = distinct !DILexicalBlock(scope: !7984, file: !1167, line: 377, column: 9)
!7984 = distinct !DILexicalBlock(scope: !7985, file: !1167, line: 377, column: 9)
!7985 = distinct !DILexicalBlock(scope: !7978, file: !1167, line: 376, column: 41)
!7986 = !DILocation(line: 377, column: 9, scope: !7984)
!7987 = !DILocation(line: 378, column: 13, scope: !7988)
!7988 = distinct !DILexicalBlock(scope: !7983, file: !1167, line: 377, column: 80)
!7989 = !DILocation(line: 377, column: 41, scope: !7983)
!7990 = !DILocation(line: 377, column: 54, scope: !7983)
!7991 = !DILocation(line: 377, column: 67, scope: !7983)
!7992 = distinct !{!7992, !7986, !7993}
!7993 = !DILocation(line: 379, column: 9, scope: !7984)
!7994 = !DILocation(line: 382, column: 37, scope: !7995)
!7995 = distinct !DILexicalBlock(scope: !7978, file: !1167, line: 382, column: 14)
!7996 = !DILocation(line: 382, column: 16, scope: !7995)
!7997 = !DILocation(line: 0, scope: !7995)
!7998 = !DILocation(line: 382, column: 14, scope: !7978)
!7999 = !DILocation(line: 391, column: 9, scope: !8000)
!8000 = distinct !DILexicalBlock(scope: !8001, file: !1167, line: 391, column: 9)
!8001 = distinct !DILexicalBlock(scope: !7995, file: !1167, line: 390, column: 13)
!8002 = !DILocation(line: 383, column: 9, scope: !8003)
!8003 = distinct !DILexicalBlock(scope: !8004, file: !1167, line: 383, column: 9)
!8004 = distinct !DILexicalBlock(scope: !7995, file: !1167, line: 382, column: 49)
!8005 = !DILocation(line: 384, column: 26, scope: !8006)
!8006 = distinct !DILexicalBlock(scope: !8007, file: !1167, line: 383, column: 80)
!8007 = distinct !DILexicalBlock(scope: !8003, file: !1167, line: 383, column: 9)
!8008 = !DILocation(line: 384, column: 24, scope: !8006)
!8009 = !DILocation(line: 385, column: 47, scope: !8006)
!8010 = !DILocation(line: 385, column: 26, scope: !8006)
!8011 = !DILocation(line: 385, column: 24, scope: !8006)
!8012 = !DILocation(line: 386, column: 13, scope: !8006)
!8013 = !DILocation(line: 383, column: 41, scope: !8007)
!8014 = !DILocation(line: 383, column: 54, scope: !8007)
!8015 = !DILocation(line: 383, column: 67, scope: !8007)
!8016 = !DILocation(line: 383, column: 23, scope: !8007)
!8017 = distinct !{!8017, !8002, !8018}
!8018 = !DILocation(line: 387, column: 9, scope: !8003)
!8019 = !DILocation(line: 392, column: 13, scope: !8020)
!8020 = distinct !DILexicalBlock(scope: !8021, file: !1167, line: 392, column: 13)
!8021 = distinct !DILexicalBlock(scope: !8022, file: !1167, line: 391, column: 61)
!8022 = distinct !DILexicalBlock(scope: !8000, file: !1167, line: 391, column: 9)
!8023 = !DILocation(line: 393, column: 36, scope: !8024)
!8024 = distinct !DILexicalBlock(scope: !8025, file: !1167, line: 392, column: 51)
!8025 = distinct !DILexicalBlock(scope: !8020, file: !1167, line: 392, column: 13)
!8026 = !DILocation(line: 393, column: 29, scope: !8024)
!8027 = !DILocation(line: 393, column: 17, scope: !8024)
!8028 = !DILocation(line: 393, column: 27, scope: !8024)
!8029 = !DILocation(line: 392, column: 47, scope: !8025)
!8030 = !DILocation(line: 392, column: 27, scope: !8025)
!8031 = !DILocation(line: 392, column: 31, scope: !8025)
!8032 = distinct !{!8032, !8019, !8033}
!8033 = !DILocation(line: 394, column: 13, scope: !8020)
!8034 = !DILocation(line: 395, column: 13, scope: !8021)
!8035 = !DILocation(line: 391, column: 41, scope: !8022)
!8036 = !DILocation(line: 391, column: 54, scope: !8022)
!8037 = !DILocation(line: 391, column: 23, scope: !8022)
!8038 = distinct !{!8038, !7999, !8039}
!8039 = !DILocation(line: 396, column: 9, scope: !8000)
!8040 = !DILocation(line: 398, column: 1, scope: !7963)
!8041 = distinct !DISubprogram(name: "SFI_Dev_Command_Ext", scope: !1167, file: !1167, line: 414, type: !8042, scopeLine: 415, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !8044)
!8042 = !DISubroutineType(types: !8043)
!8043 = !{null, !7737, !2369, !969, !7737, !7737}
!8044 = !{!8045, !8046, !8047, !8048, !8049, !8050, !8051, !8052, !8053, !8054}
!8045 = !DILocalVariable(name: "CS", arg: 1, scope: !8041, file: !1167, line: 414, type: !7737)
!8046 = !DILocalVariable(name: "cmd", arg: 2, scope: !8041, file: !1167, line: 414, type: !2369)
!8047 = !DILocalVariable(name: "data", arg: 3, scope: !8041, file: !1167, line: 414, type: !969)
!8048 = !DILocalVariable(name: "outl", arg: 4, scope: !8041, file: !1167, line: 414, type: !7737)
!8049 = !DILocalVariable(name: "inl", arg: 5, scope: !8041, file: !1167, line: 414, type: !7737)
!8050 = !DILocalVariable(name: "tmp", scope: !8041, file: !1167, line: 416, type: !61)
!8051 = !DILocalVariable(name: "i", scope: !8041, file: !1167, line: 417, type: !61)
!8052 = !DILocalVariable(name: "j", scope: !8041, file: !1167, line: 417, type: !61)
!8053 = !DILocalVariable(name: "p_data", scope: !8041, file: !1167, line: 418, type: !969)
!8054 = !DILocalVariable(name: "p_tmp", scope: !8041, file: !1167, line: 418, type: !969)
!8055 = !DILocation(line: 0, scope: !8041)
!8056 = !DILocation(line: 416, column: 5, scope: !8041)
!8057 = !DILocation(line: 422, column: 60, scope: !8058)
!8058 = distinct !DILexicalBlock(scope: !8059, file: !1167, line: 422, column: 5)
!8059 = distinct !DILexicalBlock(scope: !8041, file: !1167, line: 422, column: 5)
!8060 = !DILocation(line: 422, column: 5, scope: !8059)
!8061 = !DILocation(line: 423, column: 25, scope: !8062)
!8062 = distinct !DILexicalBlock(scope: !8063, file: !1167, line: 423, column: 9)
!8063 = distinct !DILexicalBlock(scope: !8058, file: !1167, line: 422, column: 83)
!8064 = !DILocation(line: 423, column: 32, scope: !8065)
!8065 = distinct !DILexicalBlock(scope: !8062, file: !1167, line: 423, column: 9)
!8066 = !DILocation(line: 423, column: 9, scope: !8062)
!8067 = !DILocation(line: 424, column: 24, scope: !8068)
!8068 = distinct !DILexicalBlock(scope: !8065, file: !1167, line: 423, column: 59)
!8069 = !DILocation(line: 424, column: 13, scope: !8068)
!8070 = !DILocation(line: 424, column: 22, scope: !8068)
!8071 = !DILocation(line: 423, column: 50, scope: !8065)
!8072 = !DILocation(line: 423, column: 55, scope: !8065)
!8073 = !DILocation(line: 423, column: 39, scope: !8065)
!8074 = distinct !{!8074, !8066, !8075}
!8075 = !DILocation(line: 425, column: 9, scope: !8062)
!8076 = !DILocation(line: 426, column: 9, scope: !8063)
!8077 = !DILocation(line: 0, scope: !8059)
!8078 = !DILocation(line: 422, column: 75, scope: !8058)
!8079 = distinct !{!8079, !8060, !8080}
!8080 = !DILocation(line: 427, column: 5, scope: !8059)
!8081 = !DILocation(line: 428, column: 25, scope: !8041)
!8082 = !DILocation(line: 429, column: 26, scope: !8041)
!8083 = !DILocation(line: 429, column: 24, scope: !8041)
!8084 = !DILocation(line: 430, column: 5, scope: !8041)
!8085 = !DILocation(line: 431, column: 5, scope: !8041)
!8086 = !DILocation(line: 433, column: 67, scope: !8087)
!8087 = distinct !DILexicalBlock(scope: !8088, file: !1167, line: 433, column: 5)
!8088 = distinct !DILexicalBlock(scope: !8041, file: !1167, line: 433, column: 5)
!8089 = !DILocation(line: 433, column: 5, scope: !8088)
!8090 = !DILocation(line: 433, column: 56, scope: !8088)
!8091 = !DILocation(line: 434, column: 17, scope: !8092)
!8092 = distinct !DILexicalBlock(scope: !8087, file: !1167, line: 433, column: 100)
!8093 = !DILocation(line: 434, column: 15, scope: !8092)
!8094 = !DILocation(line: 433, column: 74, scope: !8087)
!8095 = !DILocation(line: 433, column: 79, scope: !8087)
!8096 = !DILocation(line: 433, column: 87, scope: !8087)
!8097 = distinct !{!8097, !8089, !8098}
!8098 = !DILocation(line: 435, column: 5, scope: !8088)
!8099 = !DILocation(line: 437, column: 1, scope: !8041)
!8100 = distinct !DISubprogram(name: "SFI_Dev_Command_List", scope: !1167, file: !1167, line: 462, type: !8101, scopeLine: 463, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !8103)
!8101 = !DISubroutineType(types: !8102)
!8102 = !{null, !7737, !2369}
!8103 = !{!8104, !8105, !8106, !8107, !8108}
!8104 = !DILocalVariable(name: "CS", arg: 1, scope: !8100, file: !1167, line: 462, type: !7737)
!8105 = !DILocalVariable(name: "cmdlist", arg: 2, scope: !8100, file: !1167, line: 462, type: !2369)
!8106 = !DILocalVariable(name: "i", scope: !8100, file: !1167, line: 464, type: !61)
!8107 = !DILocalVariable(name: "val", scope: !8100, file: !1167, line: 465, type: !61)
!8108 = !DILocalVariable(name: "status", scope: !8109, file: !1167, line: 492, type: !463)
!8109 = distinct !DILexicalBlock(scope: !8110, file: !1167, line: 491, column: 47)
!8110 = distinct !DILexicalBlock(scope: !8111, file: !1167, line: 491, column: 13)
!8111 = distinct !DILexicalBlock(scope: !8100, file: !1167, line: 477, column: 17)
!8112 = !DILocation(line: 0, scope: !8100)
!8113 = !DILocation(line: 467, column: 17, scope: !8114)
!8114 = distinct !DILexicalBlock(scope: !8100, file: !1167, line: 467, column: 9)
!8115 = !DILocation(line: 467, column: 9, scope: !8100)
!8116 = !DILocation(line: 474, column: 11, scope: !8100)
!8117 = !DILocation(line: 477, column: 5, scope: !8100)
!8118 = !DILocation(line: 478, column: 17, scope: !8111)
!8119 = !DILocation(line: 478, column: 9, scope: !8111)
!8120 = !DILocation(line: 481, column: 17, scope: !8121)
!8121 = distinct !DILexicalBlock(scope: !8122, file: !1167, line: 481, column: 17)
!8122 = distinct !DILexicalBlock(scope: !8111, file: !1167, line: 478, column: 29)
!8123 = !DILocation(line: 481, column: 17, scope: !8124)
!8124 = distinct !DILexicalBlock(scope: !8125, file: !1167, line: 481, column: 17)
!8125 = distinct !DILexicalBlock(scope: !8126, file: !1167, line: 481, column: 17)
!8126 = distinct !DILexicalBlock(scope: !8121, file: !1167, line: 481, column: 17)
!8127 = !DILocation(line: 481, column: 17, scope: !8125)
!8128 = !DILocation(line: 481, column: 17, scope: !8129)
!8129 = distinct !DILexicalBlock(scope: !8130, file: !1167, line: 481, column: 17)
!8130 = distinct !DILexicalBlock(scope: !8126, file: !1167, line: 481, column: 17)
!8131 = !DILocation(line: 484, column: 17, scope: !8132)
!8132 = distinct !DILexicalBlock(scope: !8122, file: !1167, line: 484, column: 17)
!8133 = !DILocation(line: 484, column: 17, scope: !8134)
!8134 = distinct !DILexicalBlock(scope: !8135, file: !1167, line: 484, column: 17)
!8135 = distinct !DILexicalBlock(scope: !8136, file: !1167, line: 484, column: 17)
!8136 = distinct !DILexicalBlock(scope: !8132, file: !1167, line: 484, column: 17)
!8137 = !DILocation(line: 484, column: 17, scope: !8135)
!8138 = !DILocation(line: 484, column: 17, scope: !8139)
!8139 = distinct !DILexicalBlock(scope: !8140, file: !1167, line: 484, column: 17)
!8140 = distinct !DILexicalBlock(scope: !8136, file: !1167, line: 484, column: 17)
!8141 = !DILocation(line: 0, scope: !8142)
!8142 = distinct !DILexicalBlock(scope: !8143, file: !1167, line: 487, column: 17)
!8143 = distinct !DILexicalBlock(scope: !8122, file: !1167, line: 487, column: 17)
!8144 = !DILocation(line: 487, column: 17, scope: !8143)
!8145 = !DILocation(line: 487, column: 17, scope: !8146)
!8146 = distinct !DILexicalBlock(scope: !8147, file: !1167, line: 487, column: 17)
!8147 = distinct !DILexicalBlock(scope: !8142, file: !1167, line: 487, column: 17)
!8148 = !DILocation(line: 487, column: 17, scope: !8147)
!8149 = !DILocation(line: 487, column: 17, scope: !8150)
!8150 = distinct !DILexicalBlock(scope: !8151, file: !1167, line: 487, column: 17)
!8151 = distinct !DILexicalBlock(scope: !8142, file: !1167, line: 487, column: 17)
!8152 = !DILocation(line: 487, column: 17, scope: !8151)
!8153 = !DILocation(line: 491, column: 23, scope: !8110)
!8154 = !DILocation(line: 491, column: 13, scope: !8110)
!8155 = !DILocation(line: 491, column: 28, scope: !8110)
!8156 = !DILocation(line: 491, column: 13, scope: !8111)
!8157 = !DILocation(line: 492, column: 13, scope: !8109)
!8158 = !DILocation(line: 494, column: 13, scope: !8109)
!8159 = !DILocation(line: 0, scope: !8109)
!8160 = !DILocation(line: 495, column: 17, scope: !8161)
!8161 = distinct !DILexicalBlock(scope: !8109, file: !1167, line: 494, column: 16)
!8162 = !DILocation(line: 496, column: 22, scope: !8109)
!8163 = !DILocation(line: 496, column: 31, scope: !8109)
!8164 = !DILocation(line: 496, column: 29, scope: !8109)
!8165 = !DILocation(line: 496, column: 13, scope: !8161)
!8166 = distinct !{!8166, !8158, !8167}
!8167 = !DILocation(line: 496, column: 45, scope: !8109)
!8168 = !DILocation(line: 497, column: 9, scope: !8110)
!8169 = !DILocation(line: 503, column: 25, scope: !8111)
!8170 = !DILocation(line: 497, column: 9, scope: !8109)
!8171 = !DILocation(line: 500, column: 70, scope: !8172)
!8172 = distinct !DILexicalBlock(scope: !8110, file: !1167, line: 499, column: 14)
!8173 = !DILocation(line: 500, column: 60, scope: !8172)
!8174 = !DILocation(line: 500, column: 13, scope: !8172)
!8175 = !DILocation(line: 503, column: 15, scope: !8111)
!8176 = !DILocation(line: 503, column: 11, scope: !8111)
!8177 = distinct !{!8177, !8117, !8178}
!8178 = !DILocation(line: 504, column: 5, scope: !8100)
!8179 = !DILocation(line: 505, column: 1, scope: !8100)
!8180 = distinct !DISubprogram(name: "SFI_ReadDeviceID", scope: !1167, file: !1167, line: 514, type: !8181, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !8183)
!8181 = !DISubroutineType(types: !8182)
!8182 = !{null, !7737, !969, !463}
!8183 = !{!8184, !8185, !8186}
!8184 = !DILocalVariable(name: "CS", arg: 1, scope: !8180, file: !1167, line: 514, type: !7737)
!8185 = !DILocalVariable(name: "id", arg: 2, scope: !8180, file: !1167, line: 514, type: !969)
!8186 = !DILocalVariable(name: "cmd", arg: 3, scope: !8180, file: !1167, line: 514, type: !463)
!8187 = !DILocation(line: 0, scope: !8180)
!8188 = !DILocation(line: 517, column: 5, scope: !8180)
!8189 = !DILocation(line: 518, column: 1, scope: !8180)
!8190 = distinct !DISubprogram(name: "SFI_ReadDeviceID_SPI", scope: !1167, file: !1167, line: 521, type: !8191, scopeLine: 522, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !8193)
!8191 = !DISubroutineType(types: !8192)
!8192 = !{null, !7737, !969}
!8193 = !{!8194, !8195}
!8194 = !DILocalVariable(name: "CS", arg: 1, scope: !8190, file: !1167, line: 521, type: !7737)
!8195 = !DILocalVariable(name: "id", arg: 2, scope: !8190, file: !1167, line: 521, type: !969)
!8196 = !DILocation(line: 0, scope: !8190)
!8197 = !DILocation(line: 523, column: 5, scope: !8190)
!8198 = !DILocation(line: 524, column: 1, scope: !8190)
!8199 = distinct !DISubprogram(name: "SFI_Dev_WorkingFrequencyQuery", scope: !1167, file: !1167, line: 536, type: !8200, scopeLine: 537, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !293)
!8200 = !DISubroutineType(types: !8201)
!8201 = !{!8202}
!8202 = !DIDerivedType(tag: DW_TAG_typedef, name: "sfi_clock_enum", file: !1170, line: 57, baseType: !1169)
!8203 = !DILocation(line: 540, column: 5, scope: !8199)
!8204 = distinct !DISubprogram(name: "SFI_Dev_WorkingVoltageQuery", scope: !1167, file: !1167, line: 561, type: !8205, scopeLine: 562, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !293)
!8205 = !DISubroutineType(types: !8206)
!8206 = !{!8207}
!8207 = !DIDerivedType(tag: DW_TAG_typedef, name: "sfi_voltage_enum", file: !1170, line: 66, baseType: !1177)
!8208 = !DILocation(line: 564, column: 15, scope: !8209)
!8209 = distinct !DILexicalBlock(scope: !8204, file: !1167, line: 564, column: 9)
!8210 = !DILocation(line: 564, column: 31, scope: !8209)
!8211 = !DILocation(line: 564, column: 45, scope: !8209)
!8212 = !DILocation(line: 0, scope: !8209)
!8213 = !DILocation(line: 569, column: 1, scope: !8204)
!8214 = distinct !DISubprogram(name: "SFI_Dev_GetUniqueID", scope: !1167, file: !1167, line: 580, type: !8215, scopeLine: 581, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !8217)
!8215 = !DISubroutineType(types: !8216)
!8216 = !{!91, !969}
!8217 = !{!8218, !8219}
!8218 = !DILocalVariable(name: "buffer", arg: 1, scope: !8214, file: !1167, line: 580, type: !969)
!8219 = !DILocalVariable(name: "i", scope: !8214, file: !1167, line: 582, type: !7)
!8220 = !DILocation(line: 0, scope: !8214)
!8221 = !DILocation(line: 583, column: 5, scope: !8222)
!8222 = distinct !DILexicalBlock(scope: !8214, file: !1167, line: 583, column: 5)
!8223 = !DILocation(line: 584, column: 9, scope: !8224)
!8224 = distinct !DILexicalBlock(scope: !8225, file: !1167, line: 583, column: 29)
!8225 = distinct !DILexicalBlock(scope: !8222, file: !1167, line: 583, column: 5)
!8226 = !DILocation(line: 584, column: 19, scope: !8224)
!8227 = !DILocation(line: 583, column: 25, scope: !8225)
!8228 = !DILocation(line: 583, column: 19, scope: !8225)
!8229 = distinct !{!8229, !8221, !8230}
!8230 = !DILocation(line: 585, column: 5, scope: !8222)
!8231 = !DILocation(line: 586, column: 5, scope: !8214)
!8232 = distinct !DISubprogram(name: "SF_DAL_DEV_Enter_DPD", scope: !1167, file: !1167, line: 613, type: !291, scopeLine: 614, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !8233)
!8233 = !{!8234}
!8234 = !DILocalVariable(name: "D", scope: !8232, file: !1167, line: 615, type: !7608)
!8235 = !DILocation(line: 0, scope: !8232)
!8236 = !DILocation(line: 616, column: 32, scope: !8232)
!8237 = !DILocation(line: 616, column: 37, scope: !8232)
!8238 = !DILocation(line: 616, column: 27, scope: !8232)
!8239 = !DILocation(line: 617, column: 44, scope: !8232)
!8240 = !DILocation(line: 617, column: 31, scope: !8232)
!8241 = !DILocation(line: 617, column: 28, scope: !8232)
!8242 = !DILocation(line: 618, column: 32, scope: !8232)
!8243 = !DILocation(line: 618, column: 31, scope: !8232)
!8244 = !DILocation(line: 618, column: 29, scope: !8232)
!8245 = !DILocation(line: 621, column: 31, scope: !8232)
!8246 = !DILocation(line: 621, column: 24, scope: !8232)
!8247 = !DILocation(line: 622, column: 34, scope: !8232)
!8248 = !DILocation(line: 622, column: 27, scope: !8232)
!8249 = !DILocation(line: 623, column: 32, scope: !8232)
!8250 = !DILocation(line: 623, column: 25, scope: !8232)
!8251 = !DILocation(line: 624, column: 33, scope: !8232)
!8252 = !DILocation(line: 624, column: 26, scope: !8232)
!8253 = !DILocation(line: 625, column: 33, scope: !8232)
!8254 = !DILocation(line: 625, column: 26, scope: !8232)
!8255 = !DILocation(line: 629, column: 32, scope: !8232)
!8256 = !DILocation(line: 629, column: 47, scope: !8232)
!8257 = !DILocation(line: 629, column: 25, scope: !8232)
!8258 = !DILocation(line: 630, column: 32, scope: !8232)
!8259 = !DILocation(line: 630, column: 47, scope: !8232)
!8260 = !DILocation(line: 630, column: 25, scope: !8232)
!8261 = !DILocation(line: 633, column: 24, scope: !8232)
!8262 = !DILocation(line: 633, column: 31, scope: !8232)
!8263 = !DILocation(line: 633, column: 36, scope: !8232)
!8264 = !DILocation(line: 633, column: 28, scope: !8232)
!8265 = !DILocation(line: 633, column: 5, scope: !8232)
!8266 = !DILocation(line: 635, column: 5, scope: !8232)
!8267 = !DILocation(line: 636, column: 1, scope: !8232)
!8268 = distinct !DISubprogram(name: "SF_DAL_DEV_Leave_DPD", scope: !1167, file: !1167, line: 641, type: !291, scopeLine: 642, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !293)
!8269 = !DILocation(line: 644, column: 26, scope: !8268)
!8270 = !DILocation(line: 644, column: 24, scope: !8268)
!8271 = !DILocation(line: 645, column: 29, scope: !8268)
!8272 = !DILocation(line: 645, column: 27, scope: !8268)
!8273 = !DILocation(line: 646, column: 27, scope: !8268)
!8274 = !DILocation(line: 646, column: 25, scope: !8268)
!8275 = !DILocation(line: 647, column: 28, scope: !8268)
!8276 = !DILocation(line: 647, column: 26, scope: !8268)
!8277 = !DILocation(line: 648, column: 27, scope: !8268)
!8278 = !DILocation(line: 648, column: 25, scope: !8268)
!8279 = !DILocation(line: 652, column: 32, scope: !8268)
!8280 = !DILocation(line: 652, column: 47, scope: !8268)
!8281 = !DILocation(line: 652, column: 25, scope: !8268)
!8282 = !DILocation(line: 655, column: 24, scope: !8268)
!8283 = !DILocation(line: 655, column: 5, scope: !8268)
!8284 = !DILocation(line: 657, column: 5, scope: !8268)
!8285 = !DILocation(line: 660, column: 9, scope: !8286)
!8286 = distinct !DILexicalBlock(scope: !8268, file: !1167, line: 660, column: 9)
!8287 = !DILocation(line: 660, column: 59, scope: !8286)
!8288 = !DILocation(line: 660, column: 38, scope: !8286)
!8289 = !DILocation(line: 660, column: 37, scope: !8286)
!8290 = !DILocation(line: 660, column: 33, scope: !8286)
!8291 = !DILocation(line: 660, column: 9, scope: !8268)
!8292 = !DILocation(line: 661, column: 9, scope: !8286)
!8293 = distinct !{!8293, !8292, !8294}
!8294 = !DILocation(line: 661, column: 18, scope: !8286)
!8295 = !DILocation(line: 662, column: 1, scope: !8268)
!8296 = distinct !DISubprogram(name: "SF_DAL_DEV_SWITCH_TO_LOW_FQ", scope: !1167, file: !1167, line: 668, type: !291, scopeLine: 669, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !293)
!8297 = !DILocation(line: 671, column: 9, scope: !8298)
!8298 = distinct !DILexicalBlock(scope: !8296, file: !1167, line: 671, column: 9)
!8299 = !DILocation(line: 671, column: 40, scope: !8298)
!8300 = !DILocation(line: 671, column: 9, scope: !8296)
!8301 = !DILocation(line: 672, column: 47, scope: !8302)
!8302 = distinct !DILexicalBlock(scope: !8298, file: !1167, line: 671, column: 46)
!8303 = !DILocation(line: 672, column: 40, scope: !8302)
!8304 = !DILocation(line: 673, column: 5, scope: !8302)
!8305 = !DILocation(line: 674, column: 9, scope: !8306)
!8306 = distinct !DILexicalBlock(scope: !8296, file: !1167, line: 674, column: 9)
!8307 = !DILocation(line: 674, column: 41, scope: !8306)
!8308 = !DILocation(line: 674, column: 9, scope: !8296)
!8309 = !DILocation(line: 675, column: 48, scope: !8310)
!8310 = distinct !DILexicalBlock(scope: !8306, file: !1167, line: 674, column: 47)
!8311 = !DILocation(line: 675, column: 41, scope: !8310)
!8312 = !DILocation(line: 676, column: 5, scope: !8310)
!8313 = !DILocation(line: 679, column: 33, scope: !8296)
!8314 = !DILocation(line: 679, column: 48, scope: !8296)
!8315 = !DILocation(line: 679, column: 25, scope: !8296)
!8316 = !DILocation(line: 680, column: 25, scope: !8296)
!8317 = !DILocation(line: 686, column: 5, scope: !8296)
!8318 = !DILocation(line: 688, column: 1, scope: !8296)
!8319 = distinct !DISubprogram(name: "SF_DAL_DEV_SWITCH_TO_HIGH_FQ", scope: !1167, file: !1167, line: 689, type: !291, scopeLine: 690, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !293)
!8320 = !DILocation(line: 692, column: 9, scope: !8321)
!8321 = distinct !DILexicalBlock(scope: !8319, file: !1167, line: 692, column: 9)
!8322 = !DILocation(line: 692, column: 40, scope: !8321)
!8323 = !DILocation(line: 692, column: 9, scope: !8319)
!8324 = !DILocation(line: 693, column: 29, scope: !8325)
!8325 = distinct !DILexicalBlock(scope: !8321, file: !1167, line: 692, column: 46)
!8326 = !DILocation(line: 694, column: 5, scope: !8325)
!8327 = !DILocation(line: 695, column: 9, scope: !8328)
!8328 = distinct !DILexicalBlock(scope: !8319, file: !1167, line: 695, column: 9)
!8329 = !DILocation(line: 695, column: 41, scope: !8328)
!8330 = !DILocation(line: 695, column: 9, scope: !8319)
!8331 = !DILocation(line: 696, column: 29, scope: !8332)
!8332 = distinct !DILexicalBlock(scope: !8328, file: !1167, line: 695, column: 47)
!8333 = !DILocation(line: 697, column: 5, scope: !8332)
!8334 = !DILocation(line: 698, column: 5, scope: !8319)
!8335 = !DILocation(line: 699, column: 1, scope: !8319)
!8336 = distinct !DISubprogram(name: "ust_get_current_time", scope: !1266, file: !1266, line: 91, type: !3984, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1265, retainedNodes: !8337)
!8337 = !{!8338}
!8338 = !DILocalVariable(name: "counter", scope: !8336, file: !1266, line: 102, type: !61)
!8339 = !DILocation(line: 0, scope: !8336)
!8340 = !DILocation(line: 110, column: 5, scope: !8336)
!8341 = distinct !DISubprogram(name: "get_current_32K_counter", scope: !1266, file: !1266, line: 114, type: !3984, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1265, retainedNodes: !8342)
!8342 = !{!8343}
!8343 = !DILocalVariable(name: "counter", scope: !8341, file: !1266, line: 125, type: !61)
!8344 = !DILocation(line: 0, scope: !8341)
!8345 = !DILocation(line: 133, column: 5, scope: !8341)
!8346 = distinct !DISubprogram(name: "ust_busy_wait", scope: !1266, file: !1266, line: 137, type: !4123, scopeLine: 138, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1265, retainedNodes: !8347)
!8347 = !{!8348}
!8348 = !DILocalVariable(name: "delay_us", arg: 1, scope: !8346, file: !1266, line: 137, type: !61)
!8349 = !DILocation(line: 0, scope: !8346)
!8350 = !DILocation(line: 142, column: 5, scope: !8346)
!8351 = !DILocation(line: 144, column: 1, scope: !8346)
!8352 = distinct !DISubprogram(name: "SaveAndSetIRQMask", scope: !1266, file: !1266, line: 163, type: !3984, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1265, retainedNodes: !8353)
!8353 = !{!8354}
!8354 = !DILocalVariable(name: "mask", scope: !8352, file: !1266, line: 165, type: !61)
!8355 = !DILocation(line: 166, column: 12, scope: !8352)
!8356 = !DILocation(line: 0, scope: !8352)
!8357 = !DILocation(line: 167, column: 5, scope: !8352)
!8358 = distinct !DISubprogram(name: "RestoreIRQMask", scope: !1266, file: !1266, line: 171, type: !4123, scopeLine: 172, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1265, retainedNodes: !8359)
!8359 = !{!8360}
!8360 = !DILocalVariable(name: "mask", arg: 1, scope: !8358, file: !1266, line: 171, type: !61)
!8361 = !DILocation(line: 0, scope: !8358)
!8362 = !DILocation(line: 173, column: 5, scope: !8358)
!8363 = !DILocation(line: 174, column: 1, scope: !8358)
!8364 = distinct !DISubprogram(name: "SF_DAL_UnlockBlock_None", scope: !1266, file: !1266, line: 199, type: !1538, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1265, retainedNodes: !8365)
!8365 = !{!8366}
!8366 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8364, file: !1266, line: 199, type: !88)
!8367 = !DILocation(line: 0, scope: !8364)
!8368 = !DILocation(line: 201, column: 5, scope: !8364)
!8369 = distinct !DISubprogram(name: "sfi_60qbit_test", scope: !1266, file: !1266, line: 388, type: !8370, scopeLine: 389, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1265, retainedNodes: !293)
!8370 = !DISubroutineType(types: !8371)
!8371 = !{!1144}
!8372 = !DILocation(line: 390, column: 5, scope: !8369)
!8373 = distinct !DISubprogram(name: "CompareData", scope: !1266, file: !1266, line: 872, type: !8374, scopeLine: 873, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1265, retainedNodes: !8376)
!8374 = !DISubroutineType(types: !8375)
!8375 = !{!91, !88, !88, !61}
!8376 = !{!8377, !8378, !8379, !8380, !8381, !8384, !8385, !8388, !8389, !8391}
!8377 = !DILocalVariable(name: "Address", arg: 1, scope: !8373, file: !1266, line: 872, type: !88)
!8378 = !DILocalVariable(name: "Data", arg: 2, scope: !8373, file: !1266, line: 872, type: !88)
!8379 = !DILocalVariable(name: "Length", arg: 3, scope: !8373, file: !1266, line: 872, type: !61)
!8380 = !DILocalVariable(name: "i", scope: !8373, file: !1266, line: 874, type: !61)
!8381 = !DILocalVariable(name: "Source", scope: !8382, file: !1266, line: 877, type: !1204)
!8382 = distinct !DILexicalBlock(scope: !8383, file: !1266, line: 876, column: 74)
!8383 = distinct !DILexicalBlock(scope: !8373, file: !1266, line: 876, column: 9)
!8384 = !DILocalVariable(name: "Dest", scope: !8382, file: !1266, line: 878, type: !1204)
!8385 = !DILocalVariable(name: "Source", scope: !8386, file: !1266, line: 885, type: !1235)
!8386 = distinct !DILexicalBlock(scope: !8387, file: !1266, line: 884, column: 79)
!8387 = distinct !DILexicalBlock(scope: !8383, file: !1266, line: 884, column: 16)
!8388 = !DILocalVariable(name: "Dest", scope: !8386, file: !1266, line: 886, type: !1235)
!8389 = !DILocalVariable(name: "Source", scope: !8390, file: !1266, line: 893, type: !969)
!8390 = distinct !DILexicalBlock(scope: !8387, file: !1266, line: 892, column: 12)
!8391 = !DILocalVariable(name: "Dest", scope: !8390, file: !1266, line: 894, type: !969)
!8392 = !DILocation(line: 0, scope: !8373)
!8393 = !DILocation(line: 876, column: 11, scope: !8383)
!8394 = !DILocation(line: 876, column: 42, scope: !8383)
!8395 = !DILocation(line: 877, column: 28, scope: !8382)
!8396 = !DILocation(line: 0, scope: !8382)
!8397 = !DILocation(line: 878, column: 26, scope: !8382)
!8398 = !DILocation(line: 879, column: 23, scope: !8399)
!8399 = distinct !DILexicalBlock(scope: !8400, file: !1266, line: 879, column: 9)
!8400 = distinct !DILexicalBlock(scope: !8382, file: !1266, line: 879, column: 9)
!8401 = !DILocation(line: 879, column: 9, scope: !8400)
!8402 = !DILocation(line: 880, column: 17, scope: !8403)
!8403 = distinct !DILexicalBlock(scope: !8404, file: !1266, line: 880, column: 17)
!8404 = distinct !DILexicalBlock(scope: !8399, file: !1266, line: 879, column: 68)
!8405 = !DILocation(line: 880, column: 30, scope: !8403)
!8406 = !DILocation(line: 880, column: 27, scope: !8403)
!8407 = !DILocation(line: 879, column: 64, scope: !8399)
!8408 = !DILocation(line: 880, column: 17, scope: !8404)
!8409 = distinct !{!8409, !8401, !8410}
!8410 = !DILocation(line: 883, column: 9, scope: !8400)
!8411 = !DILocation(line: 884, column: 47, scope: !8387)
!8412 = !DILocation(line: 895, column: 23, scope: !8413)
!8413 = distinct !DILexicalBlock(scope: !8414, file: !1266, line: 895, column: 9)
!8414 = distinct !DILexicalBlock(scope: !8390, file: !1266, line: 895, column: 9)
!8415 = !DILocation(line: 895, column: 9, scope: !8414)
!8416 = !DILocation(line: 885, column: 28, scope: !8386)
!8417 = !DILocation(line: 0, scope: !8386)
!8418 = !DILocation(line: 886, column: 26, scope: !8386)
!8419 = !DILocation(line: 887, column: 23, scope: !8420)
!8420 = distinct !DILexicalBlock(scope: !8421, file: !1266, line: 887, column: 9)
!8421 = distinct !DILexicalBlock(scope: !8386, file: !1266, line: 887, column: 9)
!8422 = !DILocation(line: 887, column: 9, scope: !8421)
!8423 = !DILocation(line: 888, column: 17, scope: !8424)
!8424 = distinct !DILexicalBlock(scope: !8425, file: !1266, line: 888, column: 17)
!8425 = distinct !DILexicalBlock(scope: !8420, file: !1266, line: 887, column: 68)
!8426 = !DILocation(line: 888, column: 30, scope: !8424)
!8427 = !DILocation(line: 888, column: 27, scope: !8424)
!8428 = !DILocation(line: 887, column: 64, scope: !8420)
!8429 = !DILocation(line: 888, column: 17, scope: !8425)
!8430 = distinct !{!8430, !8422, !8431}
!8431 = !DILocation(line: 891, column: 9, scope: !8421)
!8432 = !DILocation(line: 896, column: 17, scope: !8433)
!8433 = distinct !DILexicalBlock(scope: !8434, file: !1266, line: 896, column: 17)
!8434 = distinct !DILexicalBlock(scope: !8413, file: !1266, line: 895, column: 38)
!8435 = !DILocation(line: 896, column: 30, scope: !8433)
!8436 = !DILocation(line: 896, column: 27, scope: !8433)
!8437 = !DILocation(line: 895, column: 34, scope: !8413)
!8438 = !DILocation(line: 896, column: 17, scope: !8434)
!8439 = distinct !{!8439, !8415, !8440}
!8440 = !DILocation(line: 899, column: 9, scope: !8414)
!8441 = !DILocation(line: 902, column: 1, scope: !8373)
!8442 = distinct !DISubprogram(name: "Flash_ProgramData", scope: !1266, file: !1266, line: 919, type: !8443, scopeLine: 920, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1265, retainedNodes: !8445)
!8443 = !DISubroutineType(types: !8444)
!8444 = !{null, !88, !88, !61}
!8445 = !{!8446, !8447, !8448, !8449, !8450, !8451, !8452, !8453, !8454, !8455, !8456}
!8446 = !DILocalVariable(name: "Target", arg: 1, scope: !8442, file: !1266, line: 919, type: !88)
!8447 = !DILocalVariable(name: "Data", arg: 2, scope: !8442, file: !1266, line: 919, type: !88)
!8448 = !DILocalVariable(name: "Size", arg: 3, scope: !8442, file: !1266, line: 919, type: !61)
!8449 = !DILocalVariable(name: "D", scope: !8442, file: !1266, line: 921, type: !1436)
!8450 = !DILocalVariable(name: "address", scope: !8442, file: !1266, line: 922, type: !61)
!8451 = !DILocalVariable(name: "p_data", scope: !8442, file: !1266, line: 923, type: !969)
!8452 = !DILocalVariable(name: "cmd1", scope: !8442, file: !1266, line: 924, type: !61)
!8453 = !DILocalVariable(name: "length", scope: !8442, file: !1266, line: 924, type: !61)
!8454 = !DILocalVariable(name: "written", scope: !8442, file: !1266, line: 924, type: !61)
!8455 = !DILocalVariable(name: "status", scope: !8442, file: !1266, line: 925, type: !1488)
!8456 = !DILocalVariable(name: "savedMask", scope: !8442, file: !1266, line: 926, type: !61)
!8457 = !DILocation(line: 0, scope: !8442)
!8458 = !DILocation(line: 921, column: 60, scope: !8442)
!8459 = !DILocation(line: 923, column: 5, scope: !8442)
!8460 = !DILocation(line: 923, column: 19, scope: !8442)
!8461 = !DILocation(line: 924, column: 5, scope: !8442)
!8462 = !DILocation(line: 932, column: 9, scope: !8442)
!8463 = !DILocation(line: 933, column: 8, scope: !8442)
!8464 = !DILocation(line: 933, column: 21, scope: !8442)
!8465 = !DILocation(line: 935, column: 14, scope: !8442)
!8466 = !DILocation(line: 935, column: 5, scope: !8442)
!8467 = !DILocation(line: 922, column: 29, scope: !8442)
!8468 = !DILocation(line: 937, column: 18, scope: !8469)
!8469 = distinct !DILexicalBlock(scope: !8442, file: !1266, line: 935, column: 23)
!8470 = !DILocation(line: 937, column: 35, scope: !8469)
!8471 = !DILocation(line: 937, column: 74, scope: !8469)
!8472 = !DILocation(line: 937, column: 50, scope: !8469)
!8473 = !DILocation(line: 937, column: 39, scope: !8469)
!8474 = !DILocation(line: 940, column: 35, scope: !8469)
!8475 = !DILocation(line: 940, column: 29, scope: !8469)
!8476 = !DILocation(line: 940, column: 16, scope: !8469)
!8477 = !DILocation(line: 942, column: 18, scope: !8478)
!8478 = distinct !DILexicalBlock(scope: !8469, file: !1266, line: 942, column: 13)
!8479 = !DILocation(line: 942, column: 29, scope: !8478)
!8480 = !DILocation(line: 942, column: 13, scope: !8469)
!8481 = !DILocation(line: 943, column: 13, scope: !8482)
!8482 = distinct !DILexicalBlock(scope: !8478, file: !1266, line: 942, column: 55)
!8483 = !DILocation(line: 944, column: 9, scope: !8482)
!8484 = !DILocation(line: 947, column: 16, scope: !8485)
!8485 = distinct !DILexicalBlock(scope: !8469, file: !1266, line: 947, column: 13)
!8486 = !DILocation(line: 947, column: 29, scope: !8485)
!8487 = !DILocation(line: 0, scope: !8485)
!8488 = !DILocation(line: 947, column: 13, scope: !8469)
!8489 = !DILocation(line: 948, column: 20, scope: !8490)
!8490 = distinct !DILexicalBlock(scope: !8485, file: !1266, line: 947, column: 35)
!8491 = !DILocation(line: 949, column: 32, scope: !8490)
!8492 = !DILocation(line: 949, column: 40, scope: !8490)
!8493 = !DILocation(line: 949, column: 13, scope: !8490)
!8494 = !DILocation(line: 950, column: 9, scope: !8490)
!8495 = !DILocation(line: 953, column: 20, scope: !8496)
!8496 = distinct !DILexicalBlock(scope: !8485, file: !1266, line: 952, column: 9)
!8497 = !DILocation(line: 954, column: 32, scope: !8496)
!8498 = !DILocation(line: 954, column: 40, scope: !8496)
!8499 = !DILocation(line: 954, column: 13, scope: !8496)
!8500 = !DILocation(line: 957, column: 21, scope: !8469)
!8501 = !DILocation(line: 963, column: 45, scope: !8469)
!8502 = !DILocation(line: 963, column: 42, scope: !8469)
!8503 = !DILocation(line: 963, column: 40, scope: !8469)
!8504 = !DILocation(line: 963, column: 58, scope: !8469)
!8505 = !DILocation(line: 963, column: 29, scope: !8469)
!8506 = !DILocation(line: 964, column: 28, scope: !8469)
!8507 = !DILocation(line: 965, column: 37, scope: !8469)
!8508 = !DILocation(line: 966, column: 9, scope: !8469)
!8509 = !DILocation(line: 967, column: 26, scope: !8469)
!8510 = !DILocation(line: 967, column: 9, scope: !8469)
!8511 = !DILocation(line: 968, column: 29, scope: !8469)
!8512 = !DILocation(line: 968, column: 9, scope: !8469)
!8513 = !DILocation(line: 972, column: 9, scope: !8469)
!8514 = !DILocation(line: 978, column: 9, scope: !8469)
!8515 = !DILocation(line: 979, column: 50, scope: !8516)
!8516 = distinct !DILexicalBlock(scope: !8469, file: !1266, line: 978, column: 22)
!8517 = !DILocation(line: 979, column: 55, scope: !8516)
!8518 = !DILocation(line: 979, column: 22, scope: !8516)
!8519 = !DILocation(line: 980, column: 35, scope: !8520)
!8520 = distinct !DILexicalBlock(scope: !8516, file: !1266, line: 980, column: 17)
!8521 = !DILocation(line: 980, column: 32, scope: !8520)
!8522 = !DILocation(line: 980, column: 30, scope: !8520)
!8523 = !DILocation(line: 980, column: 19, scope: !8520)
!8524 = !DILocation(line: 980, column: 17, scope: !8516)
!8525 = distinct !{!8525, !8514, !8526}
!8526 = !DILocation(line: 983, column: 9, scope: !8469)
!8527 = !DILocation(line: 991, column: 9, scope: !8469)
!8528 = !DILocation(line: 993, column: 19, scope: !8469)
!8529 = !DILocation(line: 993, column: 16, scope: !8469)
!8530 = !DILocation(line: 994, column: 14, scope: !8469)
!8531 = !DILocation(line: 995, column: 17, scope: !8469)
!8532 = distinct !{!8532, !8466, !8533}
!8533 = !DILocation(line: 996, column: 5, scope: !8442)
!8534 = !DILocation(line: 998, column: 21, scope: !8442)
!8535 = !DILocation(line: 1005, column: 9, scope: !8442)
!8536 = !DILocation(line: 1008, column: 1, scope: !8442)
!8537 = distinct !DISubprogram(name: "SF_DAL_GetDevLock", scope: !1266, file: !1266, line: 1427, type: !8538, scopeLine: 1428, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1265, retainedNodes: !8540)
!8538 = !DISubroutineType(types: !8539)
!8539 = !{null, !1436}
!8540 = !{!8541, !8542}
!8541 = !DILocalVariable(name: "D", arg: 1, scope: !8537, file: !1266, line: 1427, type: !1436)
!8542 = !DILocalVariable(name: "Result", scope: !8537, file: !1266, line: 1429, type: !2103)
!8543 = !DILocation(line: 0, scope: !8537)
!8544 = !DILocation(line: 1430, column: 5, scope: !8537)
!8545 = !DILocation(line: 1431, column: 18, scope: !8546)
!8546 = distinct !DILexicalBlock(scope: !8537, file: !1266, line: 1430, column: 8)
!8547 = !DILocation(line: 1432, column: 21, scope: !8537)
!8548 = !DILocation(line: 1432, column: 5, scope: !8546)
!8549 = distinct !{!8549, !8544, !8550}
!8550 = !DILocation(line: 1432, column: 43, scope: !8537)
!8551 = !DILocation(line: 1433, column: 1, scope: !8537)
!8552 = distinct !DISubprogram(name: "SF_DAL_Dev_WriteEnable", scope: !1266, file: !1266, line: 3478, type: !8538, scopeLine: 3479, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1265, retainedNodes: !8553)
!8553 = !{!8554}
!8554 = !DILocalVariable(name: "D", arg: 1, scope: !8552, file: !1266, line: 3478, type: !1436)
!8555 = !DILocation(line: 0, scope: !8552)
!8556 = !DILocation(line: 3480, column: 30, scope: !8552)
!8557 = !DILocation(line: 3480, column: 35, scope: !8552)
!8558 = !DILocation(line: 3480, column: 27, scope: !8552)
!8559 = !DILocation(line: 3480, column: 5, scope: !8552)
!8560 = !DILocation(line: 3481, column: 1, scope: !8552)
!8561 = distinct !DISubprogram(name: "SF_DAL_FLAG_BUSY_SET", scope: !1266, file: !1266, line: 2382, type: !291, scopeLine: 2383, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1265, retainedNodes: !8562)
!8562 = !{!8563}
!8563 = !DILocalVariable(name: "savedMask", scope: !8561, file: !1266, line: 2384, type: !61)
!8564 = !DILocation(line: 2385, column: 17, scope: !8561)
!8565 = !DILocation(line: 0, scope: !8561)
!8566 = !DILocation(line: 2390, column: 20, scope: !8561)
!8567 = !DILocation(line: 2391, column: 5, scope: !8561)
!8568 = !DILocation(line: 2392, column: 1, scope: !8561)
!8569 = distinct !DISubprogram(name: "SF_DAL_Dev_ReadStatus", scope: !1266, file: !1266, line: 3536, type: !8570, scopeLine: 3537, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1265, retainedNodes: !8572)
!8570 = !DISubroutineType(types: !8571)
!8571 = !{!61, !1436, !463}
!8572 = !{!8573, !8574, !8575, !8576}
!8573 = !DILocalVariable(name: "D", arg: 1, scope: !8569, file: !1266, line: 3536, type: !1436)
!8574 = !DILocalVariable(name: "cmd", arg: 2, scope: !8569, file: !1266, line: 3536, type: !463)
!8575 = !DILocalVariable(name: "savedMask", scope: !8569, file: !1266, line: 3538, type: !61)
!8576 = !DILocalVariable(name: "result", scope: !8569, file: !1266, line: 3539, type: !61)
!8577 = !DILocation(line: 0, scope: !8569)
!8578 = !DILocation(line: 3541, column: 17, scope: !8569)
!8579 = !DILocation(line: 3542, column: 22, scope: !8569)
!8580 = !DILocation(line: 3542, column: 5, scope: !8569)
!8581 = !DILocation(line: 3543, column: 35, scope: !8569)
!8582 = !DILocation(line: 3543, column: 33, scope: !8569)
!8583 = !DILocation(line: 3544, column: 25, scope: !8569)
!8584 = !DILocation(line: 3545, column: 24, scope: !8569)
!8585 = !DILocation(line: 3546, column: 25, scope: !8569)
!8586 = !DILocation(line: 3546, column: 5, scope: !8569)
!8587 = !DILocation(line: 3547, column: 42, scope: !8569)
!8588 = !DILocation(line: 3547, column: 60, scope: !8569)
!8589 = !DILocation(line: 3547, column: 14, scope: !8569)
!8590 = !DILocation(line: 3548, column: 5, scope: !8569)
!8591 = !DILocation(line: 3550, column: 5, scope: !8569)
!8592 = distinct !DISubprogram(name: "SF_DAL_FLAG_BUSY_CLR", scope: !1266, file: !1266, line: 2393, type: !291, scopeLine: 2394, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1265, retainedNodes: !8593)
!8593 = !{!8594}
!8594 = !DILocalVariable(name: "savedMask", scope: !8592, file: !1266, line: 2395, type: !61)
!8595 = !DILocation(line: 2396, column: 17, scope: !8592)
!8596 = !DILocation(line: 0, scope: !8592)
!8597 = !DILocation(line: 2401, column: 20, scope: !8592)
!8598 = !DILocation(line: 2402, column: 5, scope: !8599)
!8599 = distinct !DILexicalBlock(scope: !8600, file: !1266, line: 2402, column: 5)
!8600 = distinct !DILexicalBlock(scope: !8592, file: !1266, line: 2402, column: 5)
!8601 = !DILocation(line: 2403, column: 5, scope: !8592)
!8602 = !DILocation(line: 2404, column: 1, scope: !8592)
!8603 = distinct !DISubprogram(name: "SF_DAL_FreeDevLock", scope: !1266, file: !1266, line: 1440, type: !8538, scopeLine: 1441, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1265, retainedNodes: !8604)
!8604 = !{!8605, !8606}
!8605 = !DILocalVariable(name: "D", arg: 1, scope: !8603, file: !1266, line: 1440, type: !1436)
!8606 = !DILocalVariable(name: "savedMask", scope: !8603, file: !1266, line: 1442, type: !1144)
!8607 = !DILocation(line: 0, scope: !8603)
!8608 = !DILocation(line: 1443, column: 17, scope: !8603)
!8609 = !DILocation(line: 1444, column: 9, scope: !8610)
!8610 = distinct !DILexicalBlock(scope: !8603, file: !1266, line: 1444, column: 9)
!8611 = !DILocation(line: 1444, column: 9, scope: !8603)
!8612 = !DILocation(line: 1445, column: 17, scope: !8613)
!8613 = distinct !DILexicalBlock(scope: !8610, file: !1266, line: 1444, column: 24)
!8614 = !DILocation(line: 1446, column: 9, scope: !8613)
!8615 = !DILocation(line: 1451, column: 1, scope: !8603)
!8616 = !DILocation(line: 1448, column: 9, scope: !8617)
!8617 = distinct !DILexicalBlock(scope: !8610, file: !1266, line: 1447, column: 12)
!8618 = !DILocation(line: 1449, column: 9, scope: !8619)
!8619 = distinct !DILexicalBlock(scope: !8620, file: !1266, line: 1449, column: 9)
!8620 = distinct !DILexicalBlock(scope: !8621, file: !1266, line: 1449, column: 9)
!8621 = distinct !DILexicalBlock(scope: !8617, file: !1266, line: 1449, column: 9)
!8622 = distinct !DISubprogram(name: "Flash_ReturnReady", scope: !1266, file: !1266, line: 1027, type: !291, scopeLine: 1028, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1265, retainedNodes: !8623)
!8623 = !{!8624, !8625, !8626, !8627}
!8624 = !DILocalVariable(name: "D", scope: !8622, file: !1266, line: 1029, type: !1436)
!8625 = !DILocalVariable(name: "status", scope: !8622, file: !1266, line: 1030, type: !1488)
!8626 = !DILocalVariable(name: "savedMask", scope: !8622, file: !1266, line: 1031, type: !61)
!8627 = !DILocalVariable(name: "duration", scope: !8628, file: !1266, line: 1231, type: !61)
!8628 = distinct !DILexicalBlock(scope: !8622, file: !1266, line: 1230, column: 5)
!8629 = !DILocation(line: 0, scope: !8622)
!8630 = !DILocation(line: 1033, column: 17, scope: !8622)
!8631 = !DILocation(line: 1034, column: 8, scope: !8632)
!8632 = distinct !DILexicalBlock(scope: !8622, file: !1266, line: 1034, column: 8)
!8633 = !DILocation(line: 1034, column: 30, scope: !8632)
!8634 = !DILocation(line: 1034, column: 8, scope: !8622)
!8635 = !DILocation(line: 1039, column: 27, scope: !8622)
!8636 = !DILocation(line: 1058, column: 48, scope: !8637)
!8637 = distinct !DILexicalBlock(scope: !8622, file: !1266, line: 1055, column: 5)
!8638 = !DILocation(line: 1069, column: 5, scope: !8639)
!8639 = distinct !DILexicalBlock(scope: !8640, file: !1266, line: 1069, column: 5)
!8640 = distinct !DILexicalBlock(scope: !8622, file: !1266, line: 1069, column: 5)
!8641 = !DILocation(line: 1069, column: 5, scope: !8640)
!8642 = !DILocation(line: 1069, column: 5, scope: !8643)
!8643 = distinct !DILexicalBlock(scope: !8639, file: !1266, line: 1069, column: 5)
!8644 = !DILocation(line: 1075, column: 10, scope: !8645)
!8645 = distinct !DILexicalBlock(scope: !8622, file: !1266, line: 1075, column: 9)
!8646 = !DILocation(line: 1075, column: 27, scope: !8645)
!8647 = !DILocation(line: 1075, column: 33, scope: !8645)
!8648 = !DILocation(line: 1075, column: 40, scope: !8645)
!8649 = !DILocation(line: 1075, column: 53, scope: !8645)
!8650 = !DILocation(line: 1075, column: 9, scope: !8622)
!8651 = !DILocation(line: 1084, column: 9, scope: !8652)
!8652 = distinct !DILexicalBlock(scope: !8645, file: !1266, line: 1083, column: 11)
!8653 = !DILocation(line: 1085, column: 50, scope: !8654)
!8654 = distinct !DILexicalBlock(scope: !8652, file: !1266, line: 1084, column: 21)
!8655 = !DILocation(line: 1085, column: 55, scope: !8654)
!8656 = !DILocation(line: 1085, column: 22, scope: !8654)
!8657 = !DILocation(line: 1086, column: 35, scope: !8658)
!8658 = distinct !DILexicalBlock(scope: !8654, file: !1266, line: 1086, column: 17)
!8659 = !DILocation(line: 1086, column: 32, scope: !8658)
!8660 = !DILocation(line: 1086, column: 30, scope: !8658)
!8661 = !DILocation(line: 1086, column: 19, scope: !8658)
!8662 = !DILocation(line: 1086, column: 17, scope: !8654)
!8663 = distinct !{!8663, !8651, !8664}
!8664 = !DILocation(line: 1089, column: 9, scope: !8652)
!8665 = !DILocation(line: 1107, column: 11, scope: !8666)
!8666 = distinct !DILexicalBlock(scope: !8622, file: !1266, line: 1107, column: 9)
!8667 = !DILocation(line: 1107, column: 30, scope: !8666)
!8668 = !DILocation(line: 1117, column: 46, scope: !8669)
!8669 = distinct !DILexicalBlock(scope: !8666, file: !1266, line: 1107, column: 53)
!8670 = !DILocation(line: 1117, column: 51, scope: !8669)
!8671 = !DILocation(line: 1117, column: 18, scope: !8669)
!8672 = !DILocation(line: 1120, column: 31, scope: !8673)
!8673 = distinct !DILexicalBlock(scope: !8669, file: !1266, line: 1120, column: 13)
!8674 = !DILocation(line: 1120, column: 28, scope: !8673)
!8675 = !DILocation(line: 1120, column: 26, scope: !8673)
!8676 = !DILocation(line: 1120, column: 15, scope: !8673)
!8677 = !DILocation(line: 1120, column: 13, scope: !8669)
!8678 = !DILocation(line: 1128, column: 13, scope: !8679)
!8679 = distinct !DILexicalBlock(scope: !8673, file: !1266, line: 1120, column: 55)
!8680 = !DILocation(line: 1131, column: 13, scope: !8679)
!8681 = !DILocation(line: 1132, column: 54, scope: !8682)
!8682 = distinct !DILexicalBlock(scope: !8679, file: !1266, line: 1131, column: 23)
!8683 = !DILocation(line: 1132, column: 59, scope: !8682)
!8684 = !DILocation(line: 1132, column: 26, scope: !8682)
!8685 = !DILocation(line: 1133, column: 39, scope: !8686)
!8686 = distinct !DILexicalBlock(scope: !8682, file: !1266, line: 1133, column: 21)
!8687 = !DILocation(line: 1133, column: 36, scope: !8686)
!8688 = !DILocation(line: 1133, column: 34, scope: !8686)
!8689 = !DILocation(line: 1133, column: 23, scope: !8686)
!8690 = !DILocation(line: 1133, column: 21, scope: !8682)
!8691 = distinct !{!8691, !8680, !8692}
!8692 = !DILocation(line: 1158, column: 13, scope: !8679)
!8693 = !DILocation(line: 1162, column: 21, scope: !8694)
!8694 = distinct !DILexicalBlock(scope: !8679, file: !1266, line: 1162, column: 17)
!8695 = !DILocation(line: 1162, column: 32, scope: !8694)
!8696 = !DILocation(line: 1162, column: 51, scope: !8694)
!8697 = !DILocation(line: 1162, column: 58, scope: !8694)
!8698 = !DILocation(line: 1162, column: 71, scope: !8694)
!8699 = !DILocation(line: 1162, column: 17, scope: !8679)
!8700 = !DILocation(line: 1164, column: 45, scope: !8701)
!8701 = distinct !DILexicalBlock(scope: !8694, file: !1266, line: 1162, column: 91)
!8702 = !DILocation(line: 1165, column: 36, scope: !8701)
!8703 = !DILocation(line: 1166, column: 37, scope: !8701)
!8704 = !DILocation(line: 1167, column: 34, scope: !8701)
!8705 = !DILocation(line: 1167, column: 17, scope: !8701)
!8706 = !DILocation(line: 1168, column: 37, scope: !8701)
!8707 = !DILocation(line: 1168, column: 17, scope: !8701)
!8708 = !DILocation(line: 1171, column: 50, scope: !8701)
!8709 = !DILocation(line: 1172, column: 37, scope: !8701)
!8710 = !DILocation(line: 1173, column: 45, scope: !8701)
!8711 = !DILocation(line: 1174, column: 34, scope: !8701)
!8712 = !DILocation(line: 1174, column: 17, scope: !8701)
!8713 = !DILocation(line: 1175, column: 37, scope: !8701)
!8714 = !DILocation(line: 1175, column: 17, scope: !8701)
!8715 = !DILocation(line: 1178, column: 17, scope: !8701)
!8716 = !DILocation(line: 1179, column: 49, scope: !8717)
!8717 = distinct !DILexicalBlock(scope: !8701, file: !1266, line: 1178, column: 20)
!8718 = !DILocation(line: 1180, column: 40, scope: !8717)
!8719 = !DILocation(line: 1181, column: 41, scope: !8717)
!8720 = !DILocation(line: 1182, column: 38, scope: !8717)
!8721 = !DILocation(line: 1182, column: 21, scope: !8717)
!8722 = !DILocation(line: 1183, column: 41, scope: !8717)
!8723 = !DILocation(line: 1183, column: 21, scope: !8717)
!8724 = !DILocation(line: 1184, column: 43, scope: !8717)
!8725 = !DILocation(line: 1185, column: 17, scope: !8717)
!8726 = distinct !{!8726, !8715, !8727}
!8727 = !DILocation(line: 1185, column: 32, scope: !8701)
!8728 = !DILocation(line: 1194, column: 13, scope: !8679)
!8729 = !DILocation(line: 1195, column: 9, scope: !8679)
!8730 = !DILocation(line: 1197, column: 21, scope: !8731)
!8731 = distinct !DILexicalBlock(scope: !8732, file: !1266, line: 1197, column: 17)
!8732 = distinct !DILexicalBlock(scope: !8673, file: !1266, line: 1195, column: 16)
!8733 = !DILocation(line: 1197, column: 32, scope: !8731)
!8734 = !DILocation(line: 1197, column: 53, scope: !8731)
!8735 = !DILocation(line: 1197, column: 60, scope: !8731)
!8736 = !DILocation(line: 1197, column: 76, scope: !8731)
!8737 = !DILocation(line: 1197, column: 17, scope: !8732)
!8738 = !DILocation(line: 1198, column: 54, scope: !8739)
!8739 = distinct !DILexicalBlock(scope: !8731, file: !1266, line: 1197, column: 98)
!8740 = !DILocation(line: 1198, column: 59, scope: !8739)
!8741 = !DILocation(line: 1198, column: 26, scope: !8739)
!8742 = !DILocation(line: 1199, column: 40, scope: !8743)
!8743 = distinct !DILexicalBlock(scope: !8739, file: !1266, line: 1199, column: 21)
!8744 = !DILocation(line: 1199, column: 37, scope: !8743)
!8745 = !DILocation(line: 1199, column: 35, scope: !8743)
!8746 = !DILocation(line: 1199, column: 24, scope: !8743)
!8747 = !DILocation(line: 1199, column: 63, scope: !8743)
!8748 = !DILocation(line: 1200, column: 41, scope: !8743)
!8749 = !DILocation(line: 1200, column: 39, scope: !8743)
!8750 = !DILocation(line: 1200, column: 28, scope: !8743)
!8751 = !DILocation(line: 1199, column: 21, scope: !8739)
!8752 = !DILocation(line: 1201, column: 40, scope: !8753)
!8753 = distinct !DILexicalBlock(scope: !8743, file: !1266, line: 1200, column: 68)
!8754 = !DILocation(line: 1201, column: 21, scope: !8753)
!8755 = !DILocation(line: 1202, column: 40, scope: !8753)
!8756 = !DILocation(line: 1202, column: 21, scope: !8753)
!8757 = !DILocation(line: 1203, column: 17, scope: !8753)
!8758 = !DILocation(line: 1206, column: 13, scope: !8732)
!8759 = !DILocation(line: 1228, column: 25, scope: !8622)
!8760 = !DILocation(line: 1231, column: 29, scope: !8628)
!8761 = !DILocation(line: 0, scope: !8628)
!8762 = !DILocation(line: 1232, column: 13, scope: !8763)
!8763 = distinct !DILexicalBlock(scope: !8628, file: !1266, line: 1232, column: 13)
!8764 = !DILocation(line: 1232, column: 43, scope: !8763)
!8765 = !DILocation(line: 1232, column: 13, scope: !8628)
!8766 = !DILocation(line: 1233, column: 43, scope: !8767)
!8767 = distinct !DILexicalBlock(scope: !8763, file: !1266, line: 1232, column: 55)
!8768 = !DILocation(line: 1234, column: 9, scope: !8767)
!8769 = !DILocation(line: 1237, column: 5, scope: !8770)
!8770 = distinct !DILexicalBlock(scope: !8771, file: !1266, line: 1237, column: 5)
!8771 = distinct !DILexicalBlock(scope: !8622, file: !1266, line: 1237, column: 5)
!8772 = !DILocation(line: 1240, column: 5, scope: !8622)
!8773 = !DILocation(line: 1241, column: 1, scope: !8622)
!8774 = distinct !DISubprogram(name: "SF_DAL_Dev_Suspend", scope: !1266, file: !1266, line: 3421, type: !8538, scopeLine: 3422, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1265, retainedNodes: !8775)
!8775 = !{!8776, !8777, !8778, !8779}
!8776 = !DILocalVariable(name: "D", arg: 1, scope: !8774, file: !1266, line: 3421, type: !1436)
!8777 = !DILocalVariable(name: "savedMask", scope: !8774, file: !1266, line: 3423, type: !61)
!8778 = !DILocalVariable(name: "currtime", scope: !8774, file: !1266, line: 3424, type: !61)
!8779 = !DILocalVariable(name: "difftime", scope: !8774, file: !1266, line: 3424, type: !61)
!8780 = !DILocation(line: 0, scope: !8774)
!8781 = !DILocation(line: 3427, column: 9, scope: !8782)
!8782 = distinct !DILexicalBlock(scope: !8774, file: !1266, line: 3427, column: 9)
!8783 = !DILocation(line: 3427, column: 28, scope: !8782)
!8784 = !DILocation(line: 3427, column: 9, scope: !8774)
!8785 = !DILocation(line: 3429, column: 20, scope: !8786)
!8786 = distinct !DILexicalBlock(scope: !8782, file: !1266, line: 3427, column: 59)
!8787 = !DILocation(line: 3430, column: 27, scope: !8788)
!8788 = distinct !DILexicalBlock(scope: !8786, file: !1266, line: 3430, column: 13)
!8789 = !DILocation(line: 3430, column: 24, scope: !8788)
!8790 = !DILocation(line: 3430, column: 22, scope: !8788)
!8791 = !DILocation(line: 3430, column: 13, scope: !8786)
!8792 = !DILocation(line: 3431, column: 47, scope: !8793)
!8793 = distinct !DILexicalBlock(scope: !8788, file: !1266, line: 3430, column: 46)
!8794 = !DILocation(line: 3431, column: 13, scope: !8793)
!8795 = !DILocation(line: 3432, column: 9, scope: !8793)
!8796 = !DILocation(line: 3435, column: 17, scope: !8774)
!8797 = !DILocation(line: 3436, column: 24, scope: !8774)
!8798 = !DILocation(line: 3436, column: 31, scope: !8774)
!8799 = !DILocation(line: 3436, column: 36, scope: !8774)
!8800 = !DILocation(line: 3436, column: 28, scope: !8774)
!8801 = !DILocation(line: 3436, column: 5, scope: !8774)
!8802 = !DILocation(line: 3442, column: 5, scope: !8774)
!8803 = !DILocation(line: 3443, column: 1, scope: !8774)
!8804 = distinct !DISubprogram(name: "SF_DAL_FLAG_SUS_SET", scope: !1266, file: !1266, line: 2405, type: !291, scopeLine: 2406, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1265, retainedNodes: !8805)
!8805 = !{!8806}
!8806 = !DILocalVariable(name: "savedMask", scope: !8804, file: !1266, line: 2407, type: !61)
!8807 = !DILocation(line: 2408, column: 17, scope: !8804)
!8808 = !DILocation(line: 0, scope: !8804)
!8809 = !DILocation(line: 2413, column: 25, scope: !8804)
!8810 = !DILocation(line: 2414, column: 5, scope: !8811)
!8811 = distinct !DILexicalBlock(scope: !8812, file: !1266, line: 2414, column: 5)
!8812 = distinct !DILexicalBlock(scope: !8804, file: !1266, line: 2414, column: 5)
!8813 = !DILocation(line: 2415, column: 5, scope: !8804)
!8814 = !DILocation(line: 2416, column: 1, scope: !8804)
!8815 = distinct !DISubprogram(name: "SF_DAL_Dev_Command", scope: !1266, file: !1266, line: 3561, type: !8816, scopeLine: 3562, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1265, retainedNodes: !8818)
!8816 = !DISubroutineType(types: !8817)
!8817 = !{null, !1436, !979, !463}
!8818 = !{!8819, !8820, !8821, !8822}
!8819 = !DILocalVariable(name: "D", arg: 1, scope: !8815, file: !1266, line: 3561, type: !1436)
!8820 = !DILocalVariable(name: "cmd", arg: 2, scope: !8815, file: !1266, line: 3561, type: !979)
!8821 = !DILocalVariable(name: "outlen", arg: 3, scope: !8815, file: !1266, line: 3561, type: !463)
!8822 = !DILocalVariable(name: "savedMask", scope: !8815, file: !1266, line: 3563, type: !61)
!8823 = !DILocation(line: 0, scope: !8815)
!8824 = !DILocation(line: 3565, column: 17, scope: !8815)
!8825 = !DILocation(line: 3566, column: 22, scope: !8815)
!8826 = !DILocation(line: 3566, column: 5, scope: !8815)
!8827 = !DILocation(line: 3567, column: 33, scope: !8815)
!8828 = !DILocation(line: 3568, column: 27, scope: !8815)
!8829 = !DILocation(line: 3568, column: 25, scope: !8815)
!8830 = !DILocation(line: 3569, column: 24, scope: !8815)
!8831 = !DILocation(line: 3570, column: 25, scope: !8815)
!8832 = !DILocation(line: 3570, column: 5, scope: !8815)
!8833 = !DILocation(line: 3571, column: 5, scope: !8815)
!8834 = !DILocation(line: 3573, column: 1, scope: !8815)
!8835 = distinct !DISubprogram(name: "retrieve_MTD_lock", scope: !1266, file: !1266, line: 1410, type: !8836, scopeLine: 1411, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1265, retainedNodes: !8838)
!8836 = !DISubroutineType(types: !8837)
!8837 = !{!2103}
!8838 = !{!8839}
!8839 = !DILocalVariable(name: "savedMask", scope: !8835, file: !1266, line: 1412, type: !1144)
!8840 = !DILocation(line: 1413, column: 17, scope: !8835)
!8841 = !DILocation(line: 0, scope: !8835)
!8842 = !DILocation(line: 1414, column: 9, scope: !8843)
!8843 = distinct !DILexicalBlock(scope: !8835, file: !1266, line: 1414, column: 9)
!8844 = !DILocation(line: 1414, column: 9, scope: !8835)
!8845 = !DILocation(line: 1415, column: 17, scope: !8846)
!8846 = distinct !DILexicalBlock(scope: !8843, file: !1266, line: 1414, column: 24)
!8847 = !DILocation(line: 1417, column: 9, scope: !8846)
!8848 = !DILocation(line: 0, scope: !8843)
!8849 = !DILocation(line: 1425, column: 1, scope: !8835)
!8850 = distinct !DISubprogram(name: "Flash_CheckReady", scope: !1266, file: !1266, line: 1257, type: !8851, scopeLine: 1258, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1265, retainedNodes: !8853)
!8851 = !DISubroutineType(types: !8852)
!8852 = !{!91}
!8853 = !{!8854, !8855, !8856}
!8854 = !DILocalVariable(name: "D", scope: !8850, file: !1266, line: 1259, type: !1436)
!8855 = !DILocalVariable(name: "status", scope: !8850, file: !1266, line: 1260, type: !1488)
!8856 = !DILocalVariable(name: "result", scope: !8850, file: !1266, line: 1261, type: !91)
!8857 = !DILocation(line: 1259, column: 57, scope: !8850)
!8858 = !DILocation(line: 0, scope: !8850)
!8859 = !DILocation(line: 1263, column: 5, scope: !8860)
!8860 = distinct !DILexicalBlock(scope: !8861, file: !1266, line: 1263, column: 5)
!8861 = distinct !DILexicalBlock(scope: !8850, file: !1266, line: 1263, column: 5)
!8862 = !DILocation(line: 1263, column: 5, scope: !8861)
!8863 = !DILocation(line: 1263, column: 5, scope: !8864)
!8864 = distinct !DILexicalBlock(scope: !8860, file: !1266, line: 1263, column: 5)
!8865 = !DILocation(line: 1265, column: 5, scope: !8850)
!8866 = !DILocation(line: 1267, column: 42, scope: !8850)
!8867 = !DILocation(line: 1267, column: 47, scope: !8850)
!8868 = !DILocation(line: 1267, column: 14, scope: !8850)
!8869 = !DILocation(line: 1269, column: 27, scope: !8870)
!8870 = distinct !DILexicalBlock(scope: !8850, file: !1266, line: 1269, column: 9)
!8871 = !DILocation(line: 1269, column: 24, scope: !8870)
!8872 = !DILocation(line: 1269, column: 22, scope: !8870)
!8873 = !DILocation(line: 1269, column: 11, scope: !8870)
!8874 = !DILocation(line: 1269, column: 9, scope: !8850)
!8875 = !DILocation(line: 1270, column: 9, scope: !8876)
!8876 = distinct !DILexicalBlock(scope: !8870, file: !1266, line: 1269, column: 51)
!8877 = !DILocation(line: 1272, column: 5, scope: !8876)
!8878 = !DILocation(line: 1274, column: 5, scope: !8850)
!8879 = !DILocation(line: 1276, column: 5, scope: !8850)
!8880 = distinct !DISubprogram(name: "Flash_ResumeOperation", scope: !1266, file: !1266, line: 1289, type: !291, scopeLine: 1290, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1265, retainedNodes: !8881)
!8881 = !{!8882}
!8882 = !DILocalVariable(name: "D", scope: !8880, file: !1266, line: 1291, type: !1436)
!8883 = !DILocation(line: 0, scope: !8880)
!8884 = !DILocation(line: 1293, column: 5, scope: !8885)
!8885 = distinct !DILexicalBlock(scope: !8886, file: !1266, line: 1293, column: 5)
!8886 = distinct !DILexicalBlock(scope: !8880, file: !1266, line: 1293, column: 5)
!8887 = !DILocation(line: 1293, column: 5, scope: !8888)
!8888 = distinct !DILexicalBlock(scope: !8885, file: !1266, line: 1293, column: 5)
!8889 = !DILocation(line: 1293, column: 5, scope: !8890)
!8890 = distinct !DILexicalBlock(scope: !8891, file: !1266, line: 1293, column: 5)
!8891 = distinct !DILexicalBlock(scope: !8892, file: !1266, line: 1293, column: 5)
!8892 = distinct !DILexicalBlock(scope: !8888, file: !1266, line: 1293, column: 5)
!8893 = !DILocation(line: 1291, column: 60, scope: !8880)
!8894 = !DILocation(line: 1295, column: 5, scope: !8880)
!8895 = !DILocation(line: 1296, column: 1, scope: !8880)
!8896 = distinct !DISubprogram(name: "SF_DAL_Dev_Resume", scope: !1266, file: !1266, line: 3452, type: !8538, scopeLine: 3453, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1265, retainedNodes: !8897)
!8897 = !{!8898, !8899}
!8898 = !DILocalVariable(name: "D", arg: 1, scope: !8896, file: !1266, line: 3452, type: !1436)
!8899 = !DILocalVariable(name: "savedMask", scope: !8896, file: !1266, line: 3454, type: !61)
!8900 = !DILocation(line: 0, scope: !8896)
!8901 = !DILocation(line: 3456, column: 17, scope: !8896)
!8902 = !DILocation(line: 3462, column: 24, scope: !8896)
!8903 = !DILocation(line: 3462, column: 31, scope: !8896)
!8904 = !DILocation(line: 3462, column: 36, scope: !8896)
!8905 = !DILocation(line: 3462, column: 28, scope: !8896)
!8906 = !DILocation(line: 3462, column: 5, scope: !8896)
!8907 = !DILocation(line: 3463, column: 12, scope: !8908)
!8908 = distinct !DILexicalBlock(scope: !8896, file: !1266, line: 3463, column: 9)
!8909 = !DILocation(line: 3463, column: 27, scope: !8908)
!8910 = !DILocation(line: 3463, column: 9, scope: !8896)
!8911 = !DILocation(line: 3464, column: 28, scope: !8912)
!8912 = distinct !DILexicalBlock(scope: !8908, file: !1266, line: 3463, column: 33)
!8913 = !DILocation(line: 3465, column: 5, scope: !8912)
!8914 = !DILocation(line: 3467, column: 5, scope: !8896)
!8915 = !DILocation(line: 3468, column: 5, scope: !8896)
!8916 = !DILocation(line: 3469, column: 1, scope: !8896)
!8917 = distinct !DISubprogram(name: "SF_DAL_FLAG_SUS_CLR", scope: !1266, file: !1266, line: 2417, type: !291, scopeLine: 2418, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1265, retainedNodes: !8918)
!8918 = !{!8919}
!8919 = !DILocalVariable(name: "savedMask", scope: !8917, file: !1266, line: 2419, type: !61)
!8920 = !DILocation(line: 2420, column: 17, scope: !8917)
!8921 = !DILocation(line: 0, scope: !8917)
!8922 = !DILocation(line: 2425, column: 25, scope: !8917)
!8923 = !DILocation(line: 2426, column: 5, scope: !8917)
!8924 = !DILocation(line: 2427, column: 1, scope: !8917)
!8925 = distinct !DISubprogram(name: "Flash_SuspendOperation", scope: !1266, file: !1266, line: 1308, type: !291, scopeLine: 1309, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1265, retainedNodes: !8926)
!8926 = !{!8927, !8928}
!8927 = !DILocalVariable(name: "D", scope: !8925, file: !1266, line: 1310, type: !1436)
!8928 = !DILocalVariable(name: "status", scope: !8925, file: !1266, line: 1311, type: !1488)
!8929 = !DILocation(line: 1310, column: 60, scope: !8925)
!8930 = !DILocation(line: 0, scope: !8925)
!8931 = !DILocation(line: 1313, column: 5, scope: !8932)
!8932 = distinct !DILexicalBlock(scope: !8933, file: !1266, line: 1313, column: 5)
!8933 = distinct !DILexicalBlock(scope: !8925, file: !1266, line: 1313, column: 5)
!8934 = !DILocation(line: 1313, column: 5, scope: !8935)
!8935 = distinct !DILexicalBlock(scope: !8932, file: !1266, line: 1313, column: 5)
!8936 = !DILocation(line: 1313, column: 5, scope: !8937)
!8937 = distinct !DILexicalBlock(scope: !8938, file: !1266, line: 1313, column: 5)
!8938 = distinct !DILexicalBlock(scope: !8939, file: !1266, line: 1313, column: 5)
!8939 = distinct !DILexicalBlock(scope: !8935, file: !1266, line: 1313, column: 5)
!8940 = !DILocation(line: 1315, column: 5, scope: !8941)
!8941 = distinct !DILexicalBlock(scope: !8942, file: !1266, line: 1315, column: 5)
!8942 = distinct !DILexicalBlock(scope: !8925, file: !1266, line: 1315, column: 5)
!8943 = !DILocation(line: 1315, column: 5, scope: !8942)
!8944 = !DILocation(line: 1315, column: 5, scope: !8945)
!8945 = distinct !DILexicalBlock(scope: !8941, file: !1266, line: 1315, column: 5)
!8946 = !DILocation(line: 1317, column: 5, scope: !8925)
!8947 = !DILocation(line: 1319, column: 5, scope: !8925)
!8948 = !DILocation(line: 1320, column: 46, scope: !8949)
!8949 = distinct !DILexicalBlock(scope: !8925, file: !1266, line: 1319, column: 15)
!8950 = !DILocation(line: 1320, column: 51, scope: !8949)
!8951 = !DILocation(line: 1320, column: 18, scope: !8949)
!8952 = !DILocation(line: 1322, column: 31, scope: !8953)
!8953 = distinct !DILexicalBlock(scope: !8949, file: !1266, line: 1322, column: 13)
!8954 = !DILocation(line: 1322, column: 28, scope: !8953)
!8955 = !DILocation(line: 1322, column: 26, scope: !8953)
!8956 = !DILocation(line: 1322, column: 15, scope: !8953)
!8957 = !DILocation(line: 1322, column: 13, scope: !8949)
!8958 = distinct !{!8958, !8947, !8959}
!8959 = !DILocation(line: 1325, column: 5, scope: !8925)
!8960 = !DILocation(line: 1327, column: 5, scope: !8925)
!8961 = !DILocation(line: 1328, column: 1, scope: !8925)
!8962 = distinct !DISubprogram(name: "SF_DAL_CreateDevLock", scope: !1266, file: !1266, line: 1394, type: !8538, scopeLine: 1395, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1265, retainedNodes: !8963)
!8963 = !{!8964}
!8964 = !DILocalVariable(name: "D", arg: 1, scope: !8962, file: !1266, line: 1394, type: !1436)
!8965 = !DILocation(line: 0, scope: !8962)
!8966 = !DILocation(line: 1401, column: 1, scope: !8962)
!8967 = distinct !DISubprogram(name: "SF_DAL_Init_MXIC", scope: !1266, file: !1266, line: 1556, type: !8968, scopeLine: 1557, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1265, retainedNodes: !8989)
!8968 = !DISubroutineType(types: !8969)
!8969 = !{!1144, !8970, !1436}
!8970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8971, size: 32)
!8971 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_Driver", file: !1462, line: 121, baseType: !8972)
!8972 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1462, line: 105, size: 480, elements: !8973)
!8973 = !{!8974, !8975, !8976, !8977, !8978, !8979, !8980, !8981, !8982, !8983, !8984, !8985, !8986, !8987, !8988}
!8974 = !DIDerivedType(tag: DW_TAG_member, name: "MountDevice", scope: !8972, file: !1462, line: 106, baseType: !1735, size: 32)
!8975 = !DIDerivedType(tag: DW_TAG_member, name: "ShutDown", scope: !8972, file: !1462, line: 107, baseType: !1537, size: 32, offset: 32)
!8976 = !DIDerivedType(tag: DW_TAG_member, name: "MapWindow", scope: !8972, file: !1462, line: 108, baseType: !1740, size: 32, offset: 64)
!8977 = !DIDerivedType(tag: DW_TAG_member, name: "EraseBlock", scope: !8972, file: !1462, line: 109, baseType: !1744, size: 32, offset: 96)
!8978 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramData", scope: !8972, file: !1462, line: 110, baseType: !1748, size: 32, offset: 128)
!8979 = !DIDerivedType(tag: DW_TAG_member, name: "NonBlockEraseBlock", scope: !8972, file: !1462, line: 111, baseType: !1744, size: 32, offset: 160)
!8980 = !DIDerivedType(tag: DW_TAG_member, name: "CheckDeviceReady", scope: !8972, file: !1462, line: 112, baseType: !1753, size: 32, offset: 192)
!8981 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendErase", scope: !8972, file: !1462, line: 113, baseType: !1744, size: 32, offset: 224)
!8982 = !DIDerivedType(tag: DW_TAG_member, name: "ResumeErase", scope: !8972, file: !1462, line: 114, baseType: !1744, size: 32, offset: 256)
!8983 = !DIDerivedType(tag: DW_TAG_member, name: "BlankCheck", scope: !8972, file: !1462, line: 115, baseType: !1744, size: 32, offset: 288)
!8984 = !DIDerivedType(tag: DW_TAG_member, name: "OTPAccess", scope: !8972, file: !1462, line: 116, baseType: !1760, size: 32, offset: 320)
!8985 = !DIDerivedType(tag: DW_TAG_member, name: "OTPQueryLength", scope: !8972, file: !1462, line: 117, baseType: !1765, size: 32, offset: 352)
!8986 = !DIDerivedType(tag: DW_TAG_member, name: "LockEraseBlkAddr", scope: !8972, file: !1462, line: 118, baseType: !1770, size: 32, offset: 384)
!8987 = !DIDerivedType(tag: DW_TAG_member, name: "IsEraseSuspended", scope: !8972, file: !1462, line: 119, baseType: !1774, size: 32, offset: 416)
!8988 = !DIDerivedType(tag: DW_TAG_member, name: "IOCtrl", scope: !8972, file: !1462, line: 120, baseType: !1778, size: 32, offset: 448)
!8989 = !{!8990, !8991, !8992}
!8990 = !DILocalVariable(name: "driver", arg: 1, scope: !8967, file: !1266, line: 1556, type: !8970)
!8991 = !DILocalVariable(name: "D", arg: 2, scope: !8967, file: !1266, line: 1556, type: !1436)
!8992 = !DILocalVariable(name: "smap", scope: !8967, file: !1266, line: 1558, type: !1487)
!8993 = !DILocation(line: 0, scope: !8967)
!8994 = !DILocation(line: 1561, column: 15, scope: !8967)
!8995 = !DILocation(line: 1562, column: 22, scope: !8967)
!8996 = !DILocation(line: 1563, column: 5, scope: !8967)
!8997 = !DILocation(line: 1563, column: 22, scope: !8967)
!8998 = !DILocation(line: 1565, column: 5, scope: !8967)
!8999 = !DILocation(line: 1565, column: 22, scope: !8967)
!9000 = !DILocation(line: 1566, column: 5, scope: !8967)
!9001 = !DILocation(line: 1566, column: 22, scope: !8967)
!9002 = !DILocation(line: 1568, column: 5, scope: !8967)
!9003 = !DILocation(line: 1568, column: 22, scope: !8967)
!9004 = !DILocation(line: 1569, column: 5, scope: !8967)
!9005 = !DILocation(line: 1569, column: 22, scope: !8967)
!9006 = !DILocation(line: 1570, column: 5, scope: !8967)
!9007 = !DILocation(line: 1570, column: 22, scope: !8967)
!9008 = !DILocation(line: 1573, column: 8, scope: !8967)
!9009 = !DILocation(line: 1573, column: 13, scope: !8967)
!9010 = !DILocation(line: 1573, column: 28, scope: !8967)
!9011 = !DILocation(line: 1574, column: 8, scope: !8967)
!9012 = !DILocation(line: 1574, column: 13, scope: !8967)
!9013 = !DILocation(line: 1574, column: 29, scope: !8967)
!9014 = !DILocation(line: 1575, column: 8, scope: !8967)
!9015 = !DILocation(line: 1575, column: 13, scope: !8967)
!9016 = !DILocation(line: 1575, column: 30, scope: !8967)
!9017 = !DILocation(line: 1576, column: 8, scope: !8967)
!9018 = !DILocation(line: 1576, column: 13, scope: !8967)
!9019 = !DILocation(line: 1576, column: 23, scope: !8967)
!9020 = !DILocation(line: 1577, column: 8, scope: !8967)
!9021 = !DILocation(line: 1577, column: 13, scope: !8967)
!9022 = !DILocation(line: 1577, column: 24, scope: !8967)
!9023 = !DILocation(line: 1578, column: 8, scope: !8967)
!9024 = !DILocation(line: 1578, column: 13, scope: !8967)
!9025 = !DILocation(line: 1578, column: 25, scope: !8967)
!9026 = !DILocation(line: 1579, column: 8, scope: !8967)
!9027 = !DILocation(line: 1579, column: 23, scope: !8967)
!9028 = !DILocation(line: 1583, column: 10, scope: !9029)
!9029 = distinct !DILexicalBlock(scope: !8967, file: !1266, line: 1583, column: 9)
!9030 = !DILocation(line: 1583, column: 24, scope: !9029)
!9031 = !DILocation(line: 1583, column: 32, scope: !9029)
!9032 = !DILocation(line: 1583, column: 35, scope: !9029)
!9033 = !DILocation(line: 1583, column: 49, scope: !9029)
!9034 = !DILocation(line: 1583, column: 9, scope: !8967)
!9035 = !DILocation(line: 1586, column: 12, scope: !9036)
!9036 = distinct !DILexicalBlock(scope: !9029, file: !1266, line: 1583, column: 59)
!9037 = !DILocation(line: 1586, column: 17, scope: !9036)
!9038 = !DILocation(line: 1586, column: 25, scope: !9036)
!9039 = !DILocation(line: 1587, column: 12, scope: !9036)
!9040 = !DILocation(line: 1587, column: 17, scope: !9036)
!9041 = !DILocation(line: 1587, column: 24, scope: !9036)
!9042 = !DILocation(line: 1591, column: 10, scope: !9043)
!9043 = distinct !DILexicalBlock(scope: !8967, file: !1266, line: 1591, column: 9)
!9044 = !DILocation(line: 1589, column: 5, scope: !9036)
!9045 = !DILocation(line: 1600, column: 32, scope: !9046)
!9046 = distinct !DILexicalBlock(scope: !8967, file: !1266, line: 1600, column: 9)
!9047 = !DILocation(line: 1600, column: 35, scope: !9046)
!9048 = !DILocation(line: 1600, column: 49, scope: !9046)
!9049 = !DILocation(line: 1600, column: 9, scope: !8967)
!9050 = !DILocation(line: 1601, column: 12, scope: !9051)
!9051 = distinct !DILexicalBlock(scope: !9046, file: !1266, line: 1600, column: 59)
!9052 = !DILocation(line: 1601, column: 17, scope: !9051)
!9053 = !DILocation(line: 1601, column: 25, scope: !9051)
!9054 = !DILocation(line: 1602, column: 12, scope: !9051)
!9055 = !DILocation(line: 1602, column: 17, scope: !9051)
!9056 = !DILocation(line: 1602, column: 24, scope: !9051)
!9057 = !DILocation(line: 1603, column: 5, scope: !9051)
!9058 = !DILocation(line: 1607, column: 8, scope: !8967)
!9059 = !DILocation(line: 1607, column: 20, scope: !8967)
!9060 = !DILocation(line: 1622, column: 5, scope: !8967)
!9061 = distinct !DISubprogram(name: "SF_DAL_UnlockBlock_MXIC", scope: !1266, file: !1266, line: 4553, type: !1538, scopeLine: 4554, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1265, retainedNodes: !9062)
!9062 = !{!9063, !9064, !9065, !9066}
!9063 = !DILocalVariable(name: "MTDData", arg: 1, scope: !9061, file: !1266, line: 4553, type: !88)
!9064 = !DILocalVariable(name: "D", scope: !9061, file: !1266, line: 4555, type: !1436)
!9065 = !DILocalVariable(name: "unlock", scope: !9061, file: !1266, line: 4556, type: !61)
!9066 = !DILocalVariable(name: "cmd", scope: !9061, file: !1266, line: 4557, type: !463)
!9067 = !DILocation(line: 0, scope: !9061)
!9068 = !DILocation(line: 4555, column: 24, scope: !9061)
!9069 = !DILocation(line: 4557, column: 5, scope: !9061)
!9070 = !DILocation(line: 4558, column: 12, scope: !9071)
!9071 = distinct !DILexicalBlock(scope: !9061, file: !1266, line: 4558, column: 9)
!9072 = !DILocation(line: 4558, column: 9, scope: !9071)
!9073 = !DILocation(line: 4558, column: 23, scope: !9071)
!9074 = !DILocation(line: 4558, column: 31, scope: !9071)
!9075 = !DILocation(line: 4558, column: 34, scope: !9071)
!9076 = !DILocation(line: 4558, column: 48, scope: !9071)
!9077 = !DILocation(line: 4558, column: 56, scope: !9071)
!9078 = !DILocation(line: 4558, column: 59, scope: !9071)
!9079 = !DILocation(line: 4558, column: 73, scope: !9071)
!9080 = !DILocation(line: 4558, column: 9, scope: !9061)
!9081 = !DILocation(line: 4563, column: 24, scope: !9061)
!9082 = !DILocation(line: 4563, column: 31, scope: !9061)
!9083 = !DILocation(line: 4563, column: 36, scope: !9061)
!9084 = !DILocation(line: 4563, column: 28, scope: !9061)
!9085 = !DILocation(line: 4563, column: 5, scope: !9061)
!9086 = !DILocation(line: 4564, column: 5, scope: !9061)
!9087 = !DILocation(line: 4567, column: 28, scope: !9061)
!9088 = !DILocation(line: 4567, column: 36, scope: !9061)
!9089 = !DILocation(line: 4567, column: 41, scope: !9061)
!9090 = !DILocation(line: 4567, column: 5, scope: !9061)
!9091 = !DILocation(line: 4568, column: 17, scope: !9061)
!9092 = !DILocation(line: 4568, column: 22, scope: !9061)
!9093 = !DILocation(line: 4568, column: 14, scope: !9061)
!9094 = !DILocation(line: 4569, column: 22, scope: !9061)
!9095 = !DILocation(line: 4569, column: 54, scope: !9061)
!9096 = !DILocation(line: 4569, column: 65, scope: !9061)
!9097 = !DILocation(line: 4569, column: 62, scope: !9061)
!9098 = !DILocation(line: 4569, column: 87, scope: !9061)
!9099 = !DILocation(line: 4569, column: 85, scope: !9061)
!9100 = !DILocation(line: 4569, column: 60, scope: !9061)
!9101 = !DILocation(line: 4569, column: 58, scope: !9061)
!9102 = !DILocation(line: 4569, column: 51, scope: !9061)
!9103 = !DILocation(line: 4572, column: 24, scope: !9061)
!9104 = !DILocation(line: 4572, column: 5, scope: !9061)
!9105 = !DILocation(line: 4573, column: 5, scope: !9061)
!9106 = !DILocation(line: 4575, column: 5, scope: !9061)
!9107 = !DILocation(line: 4576, column: 1, scope: !9061)
!9108 = distinct !DISubprogram(name: "SF_DAL_Dev_WaitReady_EMIINIT", scope: !1266, file: !1266, line: 4488, type: !8538, scopeLine: 4489, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1265, retainedNodes: !9109)
!9109 = !{!9110, !9111}
!9110 = !DILocalVariable(name: "D", arg: 1, scope: !9108, file: !1266, line: 4488, type: !1436)
!9111 = !DILocalVariable(name: "status", scope: !9108, file: !1266, line: 4490, type: !1488)
!9112 = !DILocation(line: 0, scope: !9108)
!9113 = !DILocation(line: 4490, column: 5, scope: !9108)
!9114 = !DILocation(line: 4491, column: 5, scope: !9108)
!9115 = !DILocation(line: 4492, column: 32, scope: !9116)
!9116 = distinct !DILexicalBlock(scope: !9108, file: !1266, line: 4491, column: 10)
!9117 = !DILocation(line: 4492, column: 40, scope: !9116)
!9118 = !DILocation(line: 4492, column: 45, scope: !9116)
!9119 = !DILocation(line: 4492, column: 9, scope: !9116)
!9120 = !DILocation(line: 4493, column: 20, scope: !9108)
!9121 = !DILocation(line: 4493, column: 32, scope: !9108)
!9122 = !DILocation(line: 4493, column: 29, scope: !9108)
!9123 = !DILocation(line: 4493, column: 27, scope: !9108)
!9124 = !DILocation(line: 4493, column: 16, scope: !9108)
!9125 = !DILocation(line: 4493, column: 5, scope: !9116)
!9126 = distinct !{!9126, !9114, !9127}
!9127 = !DILocation(line: 4493, column: 54, scope: !9108)
!9128 = !DILocation(line: 4494, column: 1, scope: !9108)
!9129 = distinct !DISubprogram(name: "SF_DAL_Init_WINBOND", scope: !1266, file: !1266, line: 1742, type: !8968, scopeLine: 1743, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1265, retainedNodes: !9130)
!9130 = !{!9131, !9132, !9133}
!9131 = !DILocalVariable(name: "driver", arg: 1, scope: !9129, file: !1266, line: 1742, type: !8970)
!9132 = !DILocalVariable(name: "D", arg: 2, scope: !9129, file: !1266, line: 1742, type: !1436)
!9133 = !DILocalVariable(name: "smap", scope: !9129, file: !1266, line: 1744, type: !1487)
!9134 = !DILocation(line: 0, scope: !9129)
!9135 = !DILocation(line: 1747, column: 15, scope: !9129)
!9136 = !DILocation(line: 1748, column: 22, scope: !9129)
!9137 = !DILocation(line: 1749, column: 5, scope: !9129)
!9138 = !DILocation(line: 1749, column: 22, scope: !9129)
!9139 = !DILocation(line: 1750, column: 5, scope: !9129)
!9140 = !DILocation(line: 1750, column: 22, scope: !9129)
!9141 = !DILocation(line: 1751, column: 5, scope: !9129)
!9142 = !DILocation(line: 1751, column: 22, scope: !9129)
!9143 = !DILocation(line: 1752, column: 5, scope: !9129)
!9144 = !DILocation(line: 1752, column: 22, scope: !9129)
!9145 = !DILocation(line: 1753, column: 5, scope: !9129)
!9146 = !DILocation(line: 1753, column: 22, scope: !9129)
!9147 = !DILocation(line: 1756, column: 8, scope: !9129)
!9148 = !DILocation(line: 1756, column: 13, scope: !9129)
!9149 = !DILocation(line: 1756, column: 24, scope: !9129)
!9150 = !DILocation(line: 1758, column: 8, scope: !9129)
!9151 = !DILocation(line: 1758, column: 13, scope: !9129)
!9152 = !DILocation(line: 1758, column: 28, scope: !9129)
!9153 = !DILocation(line: 1759, column: 8, scope: !9129)
!9154 = !DILocation(line: 1759, column: 13, scope: !9129)
!9155 = !DILocation(line: 1759, column: 29, scope: !9129)
!9156 = !DILocation(line: 1760, column: 8, scope: !9129)
!9157 = !DILocation(line: 1760, column: 13, scope: !9129)
!9158 = !DILocation(line: 1760, column: 23, scope: !9129)
!9159 = !DILocation(line: 1761, column: 8, scope: !9129)
!9160 = !DILocation(line: 1761, column: 13, scope: !9129)
!9161 = !DILocation(line: 1761, column: 24, scope: !9129)
!9162 = !DILocation(line: 1762, column: 8, scope: !9129)
!9163 = !DILocation(line: 1762, column: 13, scope: !9129)
!9164 = !DILocation(line: 1762, column: 21, scope: !9129)
!9165 = !DILocation(line: 1763, column: 8, scope: !9129)
!9166 = !DILocation(line: 1763, column: 13, scope: !9129)
!9167 = !DILocation(line: 1763, column: 20, scope: !9129)
!9168 = !DILocation(line: 1764, column: 8, scope: !9129)
!9169 = !DILocation(line: 1764, column: 23, scope: !9129)
!9170 = !DILocation(line: 1768, column: 8, scope: !9129)
!9171 = !DILocation(line: 1768, column: 20, scope: !9129)
!9172 = !DILocation(line: 1770, column: 5, scope: !9129)
!9173 = distinct !DISubprogram(name: "SF_DAL_Init_WINBOND_OTP", scope: !1266, file: !1266, line: 1775, type: !8968, scopeLine: 1776, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1265, retainedNodes: !9174)
!9174 = !{!9175, !9176}
!9175 = !DILocalVariable(name: "driver", arg: 1, scope: !9173, file: !1266, line: 1775, type: !8970)
!9176 = !DILocalVariable(name: "D", arg: 2, scope: !9173, file: !1266, line: 1775, type: !1436)
!9177 = !DILocation(line: 0, scope: !9173)
!9178 = !DILocation(line: 1793, column: 5, scope: !9173)
!9179 = distinct !DISubprogram(name: "SF_DAL_Init_Common", scope: !1266, file: !1266, line: 1932, type: !8968, scopeLine: 1933, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1265, retainedNodes: !9180)
!9180 = !{!9181, !9182}
!9181 = !DILocalVariable(name: "driver", arg: 1, scope: !9179, file: !1266, line: 1932, type: !8970)
!9182 = !DILocalVariable(name: "D", arg: 2, scope: !9179, file: !1266, line: 1932, type: !1436)
!9183 = !DILocation(line: 0, scope: !9179)
!9184 = !DILocation(line: 1935, column: 13, scope: !9179)
!9185 = !DILocation(line: 1935, column: 25, scope: !9179)
!9186 = !DILocation(line: 1936, column: 13, scope: !9179)
!9187 = !DILocation(line: 1936, column: 22, scope: !9179)
!9188 = !DILocation(line: 1937, column: 13, scope: !9179)
!9189 = !DILocation(line: 1937, column: 23, scope: !9179)
!9190 = !DILocation(line: 1939, column: 13, scope: !9179)
!9191 = !DILocation(line: 1939, column: 24, scope: !9179)
!9192 = !DILocation(line: 1940, column: 13, scope: !9179)
!9193 = !DILocation(line: 1940, column: 25, scope: !9179)
!9194 = !DILocation(line: 1945, column: 13, scope: !9179)
!9195 = !DILocation(line: 1945, column: 32, scope: !9179)
!9196 = !DILocation(line: 1946, column: 13, scope: !9179)
!9197 = !DILocation(line: 1946, column: 30, scope: !9179)
!9198 = !DILocation(line: 1947, column: 13, scope: !9179)
!9199 = !DILocation(line: 1947, column: 26, scope: !9179)
!9200 = !DILocation(line: 1948, column: 13, scope: !9179)
!9201 = !DILocation(line: 1948, column: 25, scope: !9179)
!9202 = !DILocation(line: 1949, column: 13, scope: !9179)
!9203 = !DILocation(line: 1949, column: 24, scope: !9179)
!9204 = !DILocation(line: 1956, column: 13, scope: !9179)
!9205 = !DILocation(line: 1956, column: 23, scope: !9179)
!9206 = !DILocation(line: 1957, column: 13, scope: !9179)
!9207 = !DILocation(line: 1957, column: 28, scope: !9179)
!9208 = !DILocation(line: 1960, column: 13, scope: !9179)
!9209 = !DILocation(line: 1960, column: 30, scope: !9179)
!9210 = !DILocation(line: 1961, column: 13, scope: !9179)
!9211 = !DILocation(line: 1961, column: 30, scope: !9179)
!9212 = !DILocation(line: 1962, column: 13, scope: !9179)
!9213 = !DILocation(line: 1962, column: 20, scope: !9179)
!9214 = !DILocation(line: 1968, column: 9, scope: !9215)
!9215 = distinct !DILexicalBlock(scope: !9179, file: !1266, line: 1968, column: 9)
!9216 = !DILocation(line: 1968, column: 36, scope: !9215)
!9217 = !DILocation(line: 1968, column: 9, scope: !9179)
!9218 = !DILocation(line: 1971, column: 12, scope: !9219)
!9219 = distinct !DILexicalBlock(scope: !9215, file: !1266, line: 1970, column: 5)
!9220 = !DILocation(line: 1971, column: 25, scope: !9219)
!9221 = !DILocation(line: 1979, column: 8, scope: !9179)
!9222 = !DILocation(line: 1979, column: 13, scope: !9179)
!9223 = !DILocation(line: 1979, column: 25, scope: !9179)
!9224 = !DILocation(line: 1980, column: 8, scope: !9179)
!9225 = !DILocation(line: 1980, column: 13, scope: !9179)
!9226 = !DILocation(line: 1980, column: 24, scope: !9179)
!9227 = !DILocation(line: 1981, column: 8, scope: !9179)
!9228 = !DILocation(line: 1981, column: 13, scope: !9179)
!9229 = !DILocation(line: 1981, column: 24, scope: !9179)
!9230 = !DILocation(line: 1982, column: 8, scope: !9179)
!9231 = !DILocation(line: 1982, column: 13, scope: !9179)
!9232 = !DILocation(line: 1982, column: 22, scope: !9179)
!9233 = !DILocation(line: 1983, column: 8, scope: !9179)
!9234 = !DILocation(line: 1983, column: 13, scope: !9179)
!9235 = !DILocation(line: 1983, column: 21, scope: !9179)
!9236 = !DILocation(line: 1984, column: 8, scope: !9179)
!9237 = !DILocation(line: 1984, column: 13, scope: !9179)
!9238 = !DILocation(line: 1984, column: 22, scope: !9179)
!9239 = !DILocation(line: 1985, column: 8, scope: !9179)
!9240 = !DILocation(line: 1985, column: 13, scope: !9179)
!9241 = !DILocation(line: 1985, column: 22, scope: !9179)
!9242 = !DILocation(line: 1986, column: 8, scope: !9179)
!9243 = !DILocation(line: 1986, column: 13, scope: !9179)
!9244 = !DILocation(line: 1986, column: 21, scope: !9179)
!9245 = !DILocation(line: 1987, column: 8, scope: !9179)
!9246 = !DILocation(line: 1987, column: 13, scope: !9179)
!9247 = !DILocation(line: 1987, column: 20, scope: !9179)
!9248 = !DILocation(line: 1988, column: 8, scope: !9179)
!9249 = !DILocation(line: 1988, column: 13, scope: !9179)
!9250 = !DILocation(line: 1988, column: 25, scope: !9179)
!9251 = !DILocation(line: 1989, column: 8, scope: !9179)
!9252 = !DILocation(line: 1989, column: 13, scope: !9179)
!9253 = !DILocation(line: 1989, column: 22, scope: !9179)
!9254 = !DILocation(line: 1990, column: 8, scope: !9179)
!9255 = !DILocation(line: 1990, column: 13, scope: !9179)
!9256 = !DILocation(line: 1990, column: 22, scope: !9179)
!9257 = !DILocation(line: 1993, column: 8, scope: !9179)
!9258 = !DILocation(line: 1993, column: 13, scope: !9179)
!9259 = !DILocation(line: 1993, column: 26, scope: !9179)
!9260 = !DILocation(line: 1996, column: 8, scope: !9179)
!9261 = !DILocation(line: 1996, column: 20, scope: !9179)
!9262 = !DILocation(line: 1999, column: 8, scope: !9179)
!9263 = !DILocation(line: 1999, column: 24, scope: !9179)
!9264 = !DILocation(line: 2000, column: 8, scope: !9179)
!9265 = !DILocation(line: 2000, column: 19, scope: !9179)
!9266 = !DILocation(line: 2001, column: 8, scope: !9179)
!9267 = !DILocation(line: 2001, column: 24, scope: !9179)
!9268 = !DILocation(line: 2002, column: 8, scope: !9179)
!9269 = !DILocation(line: 2002, column: 23, scope: !9179)
!9270 = !DILocation(line: 2004, column: 5, scope: !9179)
!9271 = distinct !DISubprogram(name: "SF_DAL_MountDevice", scope: !1266, file: !1266, line: 2160, type: !1736, scopeLine: 2161, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1265, retainedNodes: !9272)
!9272 = !{!9273, !9274, !9275, !9288, !9289, !9290}
!9273 = !DILocalVariable(name: "MTDData", arg: 1, scope: !9271, file: !1266, line: 2160, type: !88)
!9274 = !DILocalVariable(name: "Info", arg: 2, scope: !9271, file: !1266, line: 2160, type: !88)
!9275 = !DILocalVariable(name: "FlashInfo", scope: !9271, file: !1266, line: 2162, type: !9276)
!9276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9277, size: 32)
!9277 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_FlashInfo", file: !1462, line: 99, baseType: !9278)
!9278 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1462, line: 90, size: 928, elements: !9279)
!9279 = !{!9280, !9281, !9282, !9283, !9284, !9285, !9286, !9287}
!9280 = !DIDerivedType(tag: DW_TAG_member, name: "TotalBlocks", scope: !9278, file: !1462, line: 91, baseType: !61, size: 32)
!9281 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !9278, file: !1462, line: 92, baseType: !1792, size: 256, offset: 32)
!9282 = !DIDerivedType(tag: DW_TAG_member, name: "AvailInRegion", scope: !9278, file: !1462, line: 93, baseType: !1792, size: 256, offset: 288)
!9283 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !9278, file: !1462, line: 94, baseType: !1792, size: 256, offset: 544)
!9284 = !DIDerivedType(tag: DW_TAG_member, name: "ActualRegionNum", scope: !9278, file: !1462, line: 95, baseType: !61, size: 32, offset: 800)
!9285 = !DIDerivedType(tag: DW_TAG_member, name: "PageSize", scope: !9278, file: !1462, line: 96, baseType: !1784, size: 16, offset: 832)
!9286 = !DIDerivedType(tag: DW_TAG_member, name: "baseUnlockBlock", scope: !9278, file: !1462, line: 97, baseType: !61, size: 32, offset: 864)
!9287 = !DIDerivedType(tag: DW_TAG_member, name: "endUnlockBlock", scope: !9278, file: !1462, line: 98, baseType: !61, size: 32, offset: 896)
!9288 = !DILocalVariable(name: "D", scope: !9271, file: !1266, line: 2163, type: !1436)
!9289 = !DILocalVariable(name: "i", scope: !9271, file: !1266, line: 2164, type: !61)
!9290 = !DILocalVariable(name: "result", scope: !9271, file: !1266, line: 2166, type: !1144)
!9291 = !DILocation(line: 0, scope: !9271)
!9292 = !DILocation(line: 2163, column: 37, scope: !9271)
!9293 = !DILocation(line: 2202, column: 16, scope: !9271)
!9294 = !DILocation(line: 2202, column: 28, scope: !9271)
!9295 = !DILocation(line: 2204, column: 15, scope: !9271)
!9296 = !DILocation(line: 2204, column: 29, scope: !9271)
!9297 = !DILocation(line: 2204, column: 39, scope: !9271)
!9298 = !DILocation(line: 2204, column: 5, scope: !9271)
!9299 = !DILocation(line: 2205, column: 9, scope: !9300)
!9300 = distinct !DILexicalBlock(scope: !9271, file: !1266, line: 2204, column: 45)
!9301 = !DILocation(line: 2205, column: 33, scope: !9300)
!9302 = !DILocation(line: 2206, column: 41, scope: !9300)
!9303 = !DILocation(line: 2206, column: 55, scope: !9300)
!9304 = !DILocation(line: 2206, column: 9, scope: !9300)
!9305 = !DILocation(line: 2206, column: 36, scope: !9300)
!9306 = !DILocation(line: 2207, column: 38, scope: !9300)
!9307 = !DILocation(line: 2207, column: 52, scope: !9300)
!9308 = !DILocation(line: 2207, column: 32, scope: !9300)
!9309 = !DILocation(line: 2209, column: 10, scope: !9300)
!9310 = distinct !{!9310, !9298, !9311}
!9311 = !DILocation(line: 2210, column: 5, scope: !9271)
!9312 = !DILocation(line: 2212, column: 16, scope: !9271)
!9313 = !DILocation(line: 2212, column: 32, scope: !9271)
!9314 = !DILocation(line: 2213, column: 16, scope: !9271)
!9315 = !DILocation(line: 2213, column: 25, scope: !9271)
!9316 = !DILocation(line: 2236, column: 5, scope: !9271)
!9317 = !DILocation(line: 2238, column: 5, scope: !9271)
!9318 = !DILocation(line: 2239, column: 18, scope: !9319)
!9319 = distinct !DILexicalBlock(scope: !9271, file: !1266, line: 2238, column: 10)
!9320 = !DILocation(line: 2240, column: 34, scope: !9271)
!9321 = !DILocation(line: 2240, column: 5, scope: !9319)
!9322 = distinct !{!9322, !9317, !9323}
!9323 = !DILocation(line: 2240, column: 43, scope: !9271)
!9324 = !DILocation(line: 2259, column: 5, scope: !9271)
!9325 = distinct !DISubprogram(name: "SF_DAL_ShutDown", scope: !1266, file: !1266, line: 2275, type: !1538, scopeLine: 2276, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1265, retainedNodes: !9326)
!9326 = !{!9327, !9328, !9329, !9330}
!9327 = !DILocalVariable(name: "MTDData", arg: 1, scope: !9325, file: !1266, line: 2275, type: !88)
!9328 = !DILocalVariable(name: "D", scope: !9325, file: !1266, line: 2278, type: !1436)
!9329 = !DILocalVariable(name: "status", scope: !9325, file: !1266, line: 2279, type: !1488)
!9330 = !DILocalVariable(name: "saved_mask", scope: !9325, file: !1266, line: 2280, type: !61)
!9331 = !DILocation(line: 0, scope: !9325)
!9332 = !DILocation(line: 2278, column: 33, scope: !9325)
!9333 = !DILocation(line: 2286, column: 5, scope: !9325)
!9334 = !DILocation(line: 2293, column: 9, scope: !9325)
!9335 = !DILocation(line: 2294, column: 26, scope: !9336)
!9336 = distinct !DILexicalBlock(scope: !9325, file: !1266, line: 2293, column: 19)
!9337 = !DILocation(line: 2297, column: 17, scope: !9338)
!9338 = distinct !DILexicalBlock(scope: !9336, file: !1266, line: 2297, column: 17)
!9339 = !DILocation(line: 2297, column: 17, scope: !9336)
!9340 = !DILocation(line: 2298, column: 17, scope: !9341)
!9341 = distinct !DILexicalBlock(scope: !9338, file: !1266, line: 2297, column: 36)
!9342 = !DILocation(line: 2299, column: 37, scope: !9341)
!9343 = !DILocation(line: 2300, column: 13, scope: !9341)
!9344 = !DILocation(line: 2303, column: 50, scope: !9336)
!9345 = !DILocation(line: 2303, column: 55, scope: !9336)
!9346 = !DILocation(line: 2303, column: 22, scope: !9336)
!9347 = !DILocation(line: 2306, column: 35, scope: !9348)
!9348 = distinct !DILexicalBlock(scope: !9336, file: !1266, line: 2306, column: 17)
!9349 = !DILocation(line: 2306, column: 32, scope: !9348)
!9350 = !DILocation(line: 2306, column: 30, scope: !9348)
!9351 = !DILocation(line: 2306, column: 19, scope: !9348)
!9352 = !DILocation(line: 2306, column: 17, scope: !9336)
!9353 = !DILocation(line: 2307, column: 17, scope: !9354)
!9354 = distinct !DILexicalBlock(scope: !9348, file: !1266, line: 2306, column: 59)
!9355 = !DILocation(line: 2308, column: 17, scope: !9354)
!9356 = !DILocation(line: 2315, column: 12, scope: !9325)
!9357 = !DILocation(line: 2315, column: 21, scope: !9325)
!9358 = !DILocation(line: 2325, column: 9, scope: !9325)
!9359 = !DILocation(line: 2326, column: 5, scope: !9325)
!9360 = !DILocation(line: 2311, column: 17, scope: !9361)
!9361 = distinct !DILexicalBlock(scope: !9348, file: !1266, line: 2310, column: 20)
!9362 = distinct !{!9362, !9334, !9363}
!9363 = !DILocation(line: 2313, column: 9, scope: !9325)
!9364 = distinct !DISubprogram(name: "SF_DAL_EraseBlock", scope: !1266, file: !1266, line: 2819, type: !1745, scopeLine: 2820, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1265, retainedNodes: !9365)
!9365 = !{!9366, !9367, !9368, !9369, !9370, !9371, !9372, !9373, !9374, !9375, !9378, !9379}
!9366 = !DILocalVariable(name: "MTDData", arg: 1, scope: !9364, file: !1266, line: 2819, type: !88)
!9367 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !9364, file: !1266, line: 2819, type: !61)
!9368 = !DILocalVariable(name: "result", scope: !9364, file: !1266, line: 2821, type: !1144)
!9369 = !DILocalVariable(name: "blocksize", scope: !9364, file: !1266, line: 2822, type: !61)
!9370 = !DILocalVariable(name: "eraseunit", scope: !9364, file: !1266, line: 2823, type: !61)
!9371 = !DILocalVariable(name: "eraseaddr", scope: !9364, file: !1266, line: 2824, type: !61)
!9372 = !DILocalVariable(name: "iteration", scope: !9364, file: !1266, line: 2825, type: !61)
!9373 = !DILocalVariable(name: "D", scope: !9364, file: !1266, line: 2826, type: !1436)
!9374 = !DILocalVariable(name: "erase_block", scope: !9364, file: !1266, line: 2827, type: !61)
!9375 = !DILocalVariable(name: "a", scope: !9376, file: !1266, line: 2853, type: !61)
!9376 = distinct !DILexicalBlock(scope: !9377, file: !1266, line: 2852, column: 56)
!9377 = distinct !DILexicalBlock(scope: !9364, file: !1266, line: 2852, column: 9)
!9378 = !DILocalVariable(name: "b", scope: !9376, file: !1266, line: 2853, type: !61)
!9379 = !DILocalVariable(name: "c", scope: !9376, file: !1266, line: 2853, type: !61)
!9380 = !DILocation(line: 0, scope: !9364)
!9381 = !DILocation(line: 2826, column: 30, scope: !9364)
!9382 = !DILocation(line: 2829, column: 5, scope: !9383)
!9383 = distinct !DILexicalBlock(scope: !9384, file: !1266, line: 2829, column: 5)
!9384 = distinct !DILexicalBlock(scope: !9364, file: !1266, line: 2829, column: 5)
!9385 = !DILocation(line: 2829, column: 5, scope: !9384)
!9386 = !DILocation(line: 2829, column: 5, scope: !9387)
!9387 = distinct !DILexicalBlock(scope: !9383, file: !1266, line: 2829, column: 5)
!9388 = !DILocation(line: 2836, column: 9, scope: !9364)
!9389 = !DILocation(line: 2838, column: 8, scope: !9364)
!9390 = !DILocation(line: 2838, column: 21, scope: !9364)
!9391 = !DILocation(line: 2847, column: 5, scope: !9364)
!9392 = !DILocation(line: 2848, column: 18, scope: !9393)
!9393 = distinct !DILexicalBlock(scope: !9364, file: !1266, line: 2847, column: 10)
!9394 = !DILocation(line: 2850, column: 34, scope: !9364)
!9395 = !DILocation(line: 2850, column: 5, scope: !9393)
!9396 = distinct !{!9396, !9391, !9397}
!9397 = !DILocation(line: 2850, column: 43, scope: !9364)
!9398 = !DILocation(line: 2839, column: 32, scope: !9364)
!9399 = !DILocation(line: 2861, column: 53, scope: !9376)
!9400 = !DILocation(line: 2861, column: 40, scope: !9376)
!9401 = !DILocation(line: 2861, column: 25, scope: !9376)
!9402 = !DILocation(line: 2874, column: 16, scope: !9376)
!9403 = !DILocation(line: 2874, column: 13, scope: !9376)
!9404 = !DILocation(line: 0, scope: !9376)
!9405 = !DILocation(line: 2875, column: 24, scope: !9376)
!9406 = !DILocation(line: 2877, column: 21, scope: !9407)
!9407 = distinct !DILexicalBlock(scope: !9376, file: !1266, line: 2877, column: 13)
!9408 = !DILocation(line: 2877, column: 13, scope: !9376)
!9409 = !DILocation(line: 2879, column: 23, scope: !9410)
!9410 = distinct !DILexicalBlock(scope: !9411, file: !1266, line: 2879, column: 21)
!9411 = distinct !DILexicalBlock(scope: !9412, file: !1266, line: 2878, column: 120)
!9412 = distinct !DILexicalBlock(scope: !9413, file: !1266, line: 2878, column: 13)
!9413 = distinct !DILexicalBlock(scope: !9414, file: !1266, line: 2878, column: 13)
!9414 = distinct !DILexicalBlock(scope: !9407, file: !1266, line: 2877, column: 27)
!9415 = !DILocation(line: 2879, column: 21, scope: !9411)
!9416 = !DILocation(line: 2878, column: 48, scope: !9412)
!9417 = !DILocation(line: 2878, column: 83, scope: !9412)
!9418 = !DILocation(line: 2878, column: 113, scope: !9412)
!9419 = !DILocation(line: 2878, column: 35, scope: !9412)
!9420 = !DILocation(line: 2878, column: 13, scope: !9413)
!9421 = distinct !{!9421, !9420, !9422}
!9422 = !DILocation(line: 2883, column: 13, scope: !9413)
!9423 = !DILocation(line: 2863, column: 19, scope: !9376)
!9424 = !DILocation(line: 2825, column: 24, scope: !9364)
!9425 = !DILocation(line: 2886, column: 9, scope: !9376)
!9426 = !DILocation(line: 2888, column: 36, scope: !9427)
!9427 = distinct !DILexicalBlock(scope: !9376, file: !1266, line: 2886, column: 31)
!9428 = !DILocation(line: 2888, column: 41, scope: !9427)
!9429 = !DILocation(line: 2889, column: 17, scope: !9427)
!9430 = !DILocation(line: 2891, column: 36, scope: !9427)
!9431 = !DILocation(line: 2891, column: 41, scope: !9427)
!9432 = !DILocation(line: 2892, column: 17, scope: !9427)
!9433 = !DILocation(line: 2894, column: 36, scope: !9427)
!9434 = !DILocation(line: 2894, column: 41, scope: !9427)
!9435 = !DILocation(line: 2895, column: 17, scope: !9427)
!9436 = !DILocation(line: 2897, column: 17, scope: !9437)
!9437 = distinct !DILexicalBlock(scope: !9438, file: !1266, line: 2897, column: 17)
!9438 = distinct !DILexicalBlock(scope: !9439, file: !1266, line: 2897, column: 17)
!9439 = distinct !DILexicalBlock(scope: !9427, file: !1266, line: 2897, column: 17)
!9440 = !DILocation(line: 0, scope: !9427)
!9441 = !DILocation(line: 2906, column: 5, scope: !9364)
!9442 = !DILocation(line: 2908, column: 32, scope: !9443)
!9443 = distinct !DILexicalBlock(scope: !9364, file: !1266, line: 2906, column: 27)
!9444 = !DILocation(line: 2908, column: 37, scope: !9443)
!9445 = !DILocation(line: 2909, column: 13, scope: !9443)
!9446 = !DILocation(line: 2911, column: 32, scope: !9443)
!9447 = !DILocation(line: 2911, column: 37, scope: !9443)
!9448 = !DILocation(line: 2912, column: 13, scope: !9443)
!9449 = !DILocation(line: 2914, column: 32, scope: !9443)
!9450 = !DILocation(line: 2914, column: 37, scope: !9443)
!9451 = !DILocation(line: 2915, column: 13, scope: !9443)
!9452 = !DILocation(line: 0, scope: !9443)
!9453 = !DILocation(line: 2921, column: 56, scope: !9454)
!9454 = distinct !DILexicalBlock(scope: !9455, file: !1266, line: 2921, column: 5)
!9455 = distinct !DILexicalBlock(scope: !9364, file: !1266, line: 2921, column: 5)
!9456 = !DILocation(line: 2921, column: 5, scope: !9455)
!9457 = !DILocation(line: 2921, column: 35, scope: !9455)
!9458 = !DILocation(line: 2921, column: 22, scope: !9455)
!9459 = !DILocation(line: 2922, column: 9, scope: !9460)
!9460 = distinct !DILexicalBlock(scope: !9454, file: !1266, line: 2921, column: 99)
!9461 = !DILocation(line: 2929, column: 9, scope: !9460)
!9462 = !DILocation(line: 2938, column: 26, scope: !9463)
!9463 = distinct !DILexicalBlock(scope: !9460, file: !1266, line: 2929, column: 26)
!9464 = !DILocation(line: 2939, column: 37, scope: !9465)
!9465 = distinct !DILexicalBlock(scope: !9463, file: !1266, line: 2939, column: 17)
!9466 = !DILocation(line: 2939, column: 17, scope: !9463)
!9467 = distinct !{!9467, !9461, !9468}
!9468 = !DILocation(line: 2943, column: 9, scope: !9460)
!9469 = !DILocation(line: 2921, column: 71, scope: !9454)
!9470 = !DILocation(line: 2921, column: 85, scope: !9454)
!9471 = distinct !{!9471, !9456, !9472}
!9472 = !DILocation(line: 2983, column: 5, scope: !9455)
!9473 = !DILocation(line: 2985, column: 21, scope: !9364)
!9474 = !DILocation(line: 2992, column: 9, scope: !9364)
!9475 = !DILocation(line: 3000, column: 5, scope: !9364)
!9476 = distinct !DISubprogram(name: "SF_DAL_ProgramData", scope: !1266, file: !1266, line: 2533, type: !1749, scopeLine: 2534, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1265, retainedNodes: !9477)
!9477 = !{!9478, !9479, !9480, !9481, !9482, !9483, !9484, !9485, !9486, !9487, !9488, !9489, !9490, !9491}
!9478 = !DILocalVariable(name: "MTDData", arg: 1, scope: !9476, file: !1266, line: 2533, type: !88)
!9479 = !DILocalVariable(name: "Address", arg: 2, scope: !9476, file: !1266, line: 2533, type: !88)
!9480 = !DILocalVariable(name: "Data", arg: 3, scope: !9476, file: !1266, line: 2533, type: !88)
!9481 = !DILocalVariable(name: "Length", arg: 4, scope: !9476, file: !1266, line: 2533, type: !61)
!9482 = !DILocalVariable(name: "D", scope: !9476, file: !1266, line: 2535, type: !1436)
!9483 = !DILocalVariable(name: "savedMask", scope: !9476, file: !1266, line: 2536, type: !61)
!9484 = !DILocalVariable(name: "address", scope: !9476, file: !1266, line: 2537, type: !61)
!9485 = !DILocalVariable(name: "p_data", scope: !9476, file: !1266, line: 2538, type: !969)
!9486 = !DILocalVariable(name: "p_data_first", scope: !9476, file: !1266, line: 2539, type: !969)
!9487 = !DILocalVariable(name: "result", scope: !9476, file: !1266, line: 2540, type: !1144)
!9488 = !DILocalVariable(name: "written", scope: !9476, file: !1266, line: 2541, type: !61)
!9489 = !DILocalVariable(name: "length", scope: !9476, file: !1266, line: 2542, type: !61)
!9490 = !DILocalVariable(name: "cmd1", scope: !9476, file: !1266, line: 2543, type: !61)
!9491 = !DILocalVariable(name: "j", scope: !9492, file: !1266, line: 2599, type: !61)
!9492 = distinct !DILexicalBlock(scope: !9493, file: !1266, line: 2597, column: 61)
!9493 = distinct !DILexicalBlock(scope: !9494, file: !1266, line: 2597, column: 13)
!9494 = distinct !DILexicalBlock(scope: !9476, file: !1266, line: 2583, column: 25)
!9495 = !DILocation(line: 0, scope: !9476)
!9496 = !DILocation(line: 2535, column: 26, scope: !9476)
!9497 = !DILocation(line: 2537, column: 37, scope: !9476)
!9498 = !DILocation(line: 2538, column: 5, scope: !9476)
!9499 = !DILocation(line: 2538, column: 19, scope: !9476)
!9500 = !DILocation(line: 2542, column: 5, scope: !9476)
!9501 = !DILocation(line: 2545, column: 5, scope: !9502)
!9502 = distinct !DILexicalBlock(scope: !9503, file: !1266, line: 2545, column: 5)
!9503 = distinct !DILexicalBlock(scope: !9476, file: !1266, line: 2545, column: 5)
!9504 = !DILocation(line: 2545, column: 5, scope: !9503)
!9505 = !DILocation(line: 2545, column: 5, scope: !9506)
!9506 = distinct !DILexicalBlock(scope: !9502, file: !1266, line: 2545, column: 5)
!9507 = !DILocation(line: 2567, column: 9, scope: !9476)
!9508 = !DILocation(line: 2569, column: 8, scope: !9476)
!9509 = !DILocation(line: 2569, column: 21, scope: !9476)
!9510 = !DILocation(line: 2576, column: 5, scope: !9476)
!9511 = !DILocation(line: 2577, column: 18, scope: !9512)
!9512 = distinct !DILexicalBlock(scope: !9476, file: !1266, line: 2576, column: 10)
!9513 = !DILocation(line: 2579, column: 34, scope: !9476)
!9514 = !DILocation(line: 2579, column: 5, scope: !9512)
!9515 = distinct !{!9515, !9510, !9516}
!9516 = !DILocation(line: 2579, column: 43, scope: !9476)
!9517 = !DILocation(line: 2583, column: 14, scope: !9476)
!9518 = !DILocation(line: 2583, column: 5, scope: !9476)
!9519 = !DILocation(line: 2584, column: 27, scope: !9494)
!9520 = !DILocation(line: 2592, column: 18, scope: !9494)
!9521 = !DILocation(line: 2592, column: 35, scope: !9494)
!9522 = !DILocation(line: 2592, column: 74, scope: !9494)
!9523 = !DILocation(line: 2592, column: 50, scope: !9494)
!9524 = !DILocation(line: 2592, column: 39, scope: !9494)
!9525 = !DILocation(line: 2595, column: 37, scope: !9494)
!9526 = !DILocation(line: 2595, column: 29, scope: !9494)
!9527 = !DILocation(line: 2595, column: 16, scope: !9494)
!9528 = !DILocation(line: 2597, column: 13, scope: !9493)
!9529 = !DILocation(line: 2597, column: 30, scope: !9493)
!9530 = !DILocation(line: 2597, column: 13, scope: !9494)
!9531 = !DILocation(line: 0, scope: !9492)
!9532 = !DILocation(line: 2600, column: 27, scope: !9533)
!9533 = distinct !DILexicalBlock(scope: !9534, file: !1266, line: 2600, column: 13)
!9534 = distinct !DILexicalBlock(scope: !9492, file: !1266, line: 2600, column: 13)
!9535 = !DILocation(line: 2600, column: 13, scope: !9534)
!9536 = !DILocation(line: 2601, column: 38, scope: !9537)
!9537 = distinct !DILexicalBlock(scope: !9533, file: !1266, line: 2600, column: 42)
!9538 = !DILocation(line: 2601, column: 17, scope: !9537)
!9539 = !DILocation(line: 2601, column: 36, scope: !9537)
!9540 = !DILocation(line: 2600, column: 38, scope: !9533)
!9541 = distinct !{!9541, !9535, !9542}
!9542 = !DILocation(line: 2602, column: 13, scope: !9534)
!9543 = !DILocation(line: 0, scope: !9494)
!9544 = !DILocation(line: 2606, column: 18, scope: !9545)
!9545 = distinct !DILexicalBlock(scope: !9494, file: !1266, line: 2606, column: 13)
!9546 = !DILocation(line: 2606, column: 29, scope: !9545)
!9547 = !DILocation(line: 2606, column: 13, scope: !9494)
!9548 = !DILocation(line: 2607, column: 13, scope: !9549)
!9549 = distinct !DILexicalBlock(scope: !9545, file: !1266, line: 2606, column: 55)
!9550 = !DILocation(line: 2608, column: 9, scope: !9549)
!9551 = !DILocation(line: 2613, column: 16, scope: !9552)
!9552 = distinct !DILexicalBlock(scope: !9494, file: !1266, line: 2613, column: 13)
!9553 = !DILocation(line: 2613, column: 29, scope: !9552)
!9554 = !DILocation(line: 0, scope: !9552)
!9555 = !DILocation(line: 2613, column: 13, scope: !9494)
!9556 = !DILocation(line: 2614, column: 20, scope: !9557)
!9557 = distinct !DILexicalBlock(scope: !9552, file: !1266, line: 2613, column: 35)
!9558 = !DILocation(line: 2615, column: 32, scope: !9557)
!9559 = !DILocation(line: 2615, column: 40, scope: !9557)
!9560 = !DILocation(line: 2615, column: 13, scope: !9557)
!9561 = !DILocation(line: 2616, column: 9, scope: !9557)
!9562 = !DILocation(line: 2619, column: 20, scope: !9563)
!9563 = distinct !DILexicalBlock(scope: !9552, file: !1266, line: 2618, column: 9)
!9564 = !DILocation(line: 2620, column: 32, scope: !9563)
!9565 = !DILocation(line: 2620, column: 40, scope: !9563)
!9566 = !DILocation(line: 2620, column: 13, scope: !9563)
!9567 = !DILocation(line: 2626, column: 21, scope: !9494)
!9568 = !DILocation(line: 2633, column: 37, scope: !9494)
!9569 = !DILocation(line: 2634, column: 45, scope: !9494)
!9570 = !DILocation(line: 2634, column: 42, scope: !9494)
!9571 = !DILocation(line: 2634, column: 40, scope: !9494)
!9572 = !DILocation(line: 2634, column: 58, scope: !9494)
!9573 = !DILocation(line: 2634, column: 29, scope: !9494)
!9574 = !DILocation(line: 2635, column: 28, scope: !9494)
!9575 = !DILocation(line: 2636, column: 9, scope: !9494)
!9576 = !DILocation(line: 2638, column: 26, scope: !9494)
!9577 = !DILocation(line: 2638, column: 9, scope: !9494)
!9578 = !DILocation(line: 2639, column: 29, scope: !9494)
!9579 = !DILocation(line: 2639, column: 9, scope: !9494)
!9580 = !DILocation(line: 2662, column: 9, scope: !9494)
!9581 = !DILocation(line: 2670, column: 9, scope: !9494)
!9582 = !DILocation(line: 2676, column: 89, scope: !9583)
!9583 = distinct !DILexicalBlock(scope: !9494, file: !1266, line: 2670, column: 13)
!9584 = !DILocation(line: 2676, column: 26, scope: !9583)
!9585 = !DILocation(line: 2678, column: 36, scope: !9494)
!9586 = !DILocation(line: 2678, column: 9, scope: !9583)
!9587 = distinct !{!9587, !9581, !9588}
!9588 = !DILocation(line: 2678, column: 45, scope: !9494)
!9589 = !DILocation(line: 2718, column: 19, scope: !9494)
!9590 = !DILocation(line: 2718, column: 16, scope: !9494)
!9591 = !DILocation(line: 2719, column: 16, scope: !9494)
!9592 = !DILocation(line: 2722, column: 31, scope: !9593)
!9593 = distinct !DILexicalBlock(scope: !9494, file: !1266, line: 2722, column: 13)
!9594 = !DILocation(line: 2722, column: 13, scope: !9494)
!9595 = distinct !{!9595, !9518, !9596}
!9596 = !DILocation(line: 2725, column: 5, scope: !9476)
!9597 = !DILocation(line: 2748, column: 21, scope: !9476)
!9598 = !DILocation(line: 2755, column: 9, scope: !9476)
!9599 = !DILocation(line: 2757, column: 16, scope: !9600)
!9600 = distinct !DILexicalBlock(scope: !9476, file: !1266, line: 2757, column: 9)
!9601 = !DILocation(line: 2761, column: 1, scope: !9476)
!9602 = distinct !DISubprogram(name: "SF_DAL_NonBlockEraseBlock", scope: !1266, file: !1266, line: 3019, type: !1745, scopeLine: 3020, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1265, retainedNodes: !9603)
!9603 = !{!9604, !9605}
!9604 = !DILocalVariable(name: "MTDData", arg: 1, scope: !9602, file: !1266, line: 3019, type: !88)
!9605 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !9602, file: !1266, line: 3019, type: !61)
!9606 = !DILocation(line: 0, scope: !9602)
!9607 = !DILocation(line: 3021, column: 5, scope: !9602)
!9608 = distinct !DISubprogram(name: "SF_DAL_CheckDeviceReady", scope: !1266, file: !1266, line: 3124, type: !1754, scopeLine: 3125, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1265, retainedNodes: !9609)
!9609 = !{!9610, !9611, !9612, !9613, !9614, !9615, !9616, !9617}
!9610 = !DILocalVariable(name: "MTDData", arg: 1, scope: !9608, file: !1266, line: 3124, type: !88)
!9611 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !9608, file: !1266, line: 3124, type: !61)
!9612 = !DILocalVariable(name: "result", scope: !9608, file: !1266, line: 3126, type: !1144)
!9613 = !DILocalVariable(name: "savedMask", scope: !9608, file: !1266, line: 3127, type: !61)
!9614 = !DILocalVariable(name: "D", scope: !9608, file: !1266, line: 3128, type: !1436)
!9615 = !DILocalVariable(name: "status_busy", scope: !9608, file: !1266, line: 3129, type: !1488)
!9616 = !DILocalVariable(name: "status_suspend", scope: !9608, file: !1266, line: 3129, type: !1488)
!9617 = !DILocalVariable(name: "check_status", scope: !9618, file: !1266, line: 3141, type: !1488)
!9618 = distinct !DILexicalBlock(scope: !9619, file: !1266, line: 3140, column: 56)
!9619 = distinct !DILexicalBlock(scope: !9608, file: !1266, line: 3140, column: 9)
!9620 = !DILocation(line: 0, scope: !9608)
!9621 = !DILocation(line: 3128, column: 47, scope: !9608)
!9622 = !DILocation(line: 3131, column: 5, scope: !9623)
!9623 = distinct !DILexicalBlock(scope: !9624, file: !1266, line: 3131, column: 5)
!9624 = distinct !DILexicalBlock(scope: !9608, file: !1266, line: 3131, column: 5)
!9625 = !DILocation(line: 3131, column: 5, scope: !9624)
!9626 = !DILocation(line: 3131, column: 5, scope: !9627)
!9627 = distinct !DILexicalBlock(scope: !9623, file: !1266, line: 3131, column: 5)
!9628 = !DILocation(line: 3134, column: 50, scope: !9608)
!9629 = !DILocation(line: 3134, column: 55, scope: !9608)
!9630 = !DILocation(line: 3134, column: 22, scope: !9608)
!9631 = !DILocation(line: 3135, column: 50, scope: !9608)
!9632 = !DILocation(line: 3135, column: 55, scope: !9608)
!9633 = !DILocation(line: 3135, column: 22, scope: !9608)
!9634 = !DILocation(line: 3138, column: 17, scope: !9608)
!9635 = !DILocation(line: 3140, column: 32, scope: !9619)
!9636 = !DILocation(line: 3140, column: 29, scope: !9619)
!9637 = !DILocation(line: 3140, column: 27, scope: !9619)
!9638 = !DILocation(line: 3140, column: 11, scope: !9619)
!9639 = !DILocation(line: 3140, column: 9, scope: !9608)
!9640 = !DILocation(line: 3141, column: 34, scope: !9618)
!9641 = !DILocation(line: 3141, column: 60, scope: !9618)
!9642 = !DILocation(line: 3141, column: 58, scope: !9618)
!9643 = !DILocation(line: 0, scope: !9618)
!9644 = !DILocation(line: 3144, column: 37, scope: !9645)
!9645 = distinct !DILexicalBlock(scope: !9618, file: !1266, line: 3144, column: 13)
!9646 = !DILocation(line: 3144, column: 35, scope: !9645)
!9647 = !DILocation(line: 3144, column: 16, scope: !9645)
!9648 = !DILocation(line: 3144, column: 52, scope: !9645)
!9649 = !DILocation(line: 3145, column: 21, scope: !9645)
!9650 = !DILocation(line: 3145, column: 38, scope: !9645)
!9651 = !DILocation(line: 3147, column: 13, scope: !9652)
!9652 = distinct !DILexicalBlock(scope: !9653, file: !1266, line: 3147, column: 13)
!9653 = distinct !DILexicalBlock(scope: !9654, file: !1266, line: 3147, column: 13)
!9654 = distinct !DILexicalBlock(scope: !9645, file: !1266, line: 3145, column: 61)
!9655 = !DILocation(line: 3147, column: 13, scope: !9653)
!9656 = !DILocation(line: 3147, column: 13, scope: !9657)
!9657 = distinct !DILexicalBlock(scope: !9652, file: !1266, line: 3147, column: 13)
!9658 = !DILocation(line: 3150, column: 13, scope: !9654)
!9659 = !DILocation(line: 3151, column: 33, scope: !9654)
!9660 = !DILocation(line: 3153, column: 9, scope: !9654)
!9661 = !DILocation(line: 3155, column: 20, scope: !9662)
!9662 = distinct !DILexicalBlock(scope: !9663, file: !1266, line: 3155, column: 17)
!9663 = distinct !DILexicalBlock(scope: !9645, file: !1266, line: 3153, column: 16)
!9664 = !DILocation(line: 3155, column: 31, scope: !9662)
!9665 = !DILocation(line: 3155, column: 17, scope: !9663)
!9666 = !DILocation(line: 3156, column: 36, scope: !9667)
!9667 = distinct !DILexicalBlock(scope: !9662, file: !1266, line: 3155, column: 54)
!9668 = !DILocation(line: 3156, column: 17, scope: !9667)
!9669 = !DILocation(line: 3157, column: 36, scope: !9667)
!9670 = !DILocation(line: 3157, column: 17, scope: !9667)
!9671 = !DILocation(line: 3158, column: 13, scope: !9667)
!9672 = !DILocation(line: 3191, column: 5, scope: !9608)
!9673 = !DILocation(line: 3193, column: 9, scope: !9608)
!9674 = !DILocation(line: 3160, column: 13, scope: !9663)
!9675 = !DILocation(line: 3173, column: 13, scope: !9663)
!9676 = !DILocation(line: 3194, column: 18, scope: !9677)
!9677 = distinct !DILexicalBlock(scope: !9678, file: !1266, line: 3193, column: 32)
!9678 = distinct !DILexicalBlock(scope: !9608, file: !1266, line: 3193, column: 9)
!9679 = !DILocation(line: 3195, column: 5, scope: !9677)
!9680 = !DILocation(line: 3197, column: 5, scope: !9608)
!9681 = distinct !DISubprogram(name: "SF_DAL_SuspendErase", scope: !1266, file: !1266, line: 3225, type: !1745, scopeLine: 3226, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1265, retainedNodes: !9682)
!9682 = !{!9683, !9684, !9685, !9686, !9687}
!9683 = !DILocalVariable(name: "MTDData", arg: 1, scope: !9681, file: !1266, line: 3225, type: !88)
!9684 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !9681, file: !1266, line: 3225, type: !61)
!9685 = !DILocalVariable(name: "D", scope: !9681, file: !1266, line: 3227, type: !1436)
!9686 = !DILocalVariable(name: "status", scope: !9681, file: !1266, line: 3228, type: !1488)
!9687 = !DILocalVariable(name: "savedMask", scope: !9681, file: !1266, line: 3229, type: !61)
!9688 = !DILocation(line: 0, scope: !9681)
!9689 = !DILocation(line: 3227, column: 30, scope: !9681)
!9690 = !DILocation(line: 3231, column: 17, scope: !9681)
!9691 = !DILocation(line: 3234, column: 5, scope: !9681)
!9692 = !DILocation(line: 3238, column: 5, scope: !9681)
!9693 = !DILocation(line: 3239, column: 46, scope: !9694)
!9694 = distinct !DILexicalBlock(scope: !9681, file: !1266, line: 3238, column: 15)
!9695 = !DILocation(line: 3239, column: 51, scope: !9694)
!9696 = !DILocation(line: 3239, column: 18, scope: !9694)
!9697 = !DILocation(line: 3241, column: 31, scope: !9698)
!9698 = distinct !DILexicalBlock(scope: !9694, file: !1266, line: 3241, column: 13)
!9699 = !DILocation(line: 3241, column: 28, scope: !9698)
!9700 = !DILocation(line: 3241, column: 26, scope: !9698)
!9701 = !DILocation(line: 3241, column: 15, scope: !9698)
!9702 = !DILocation(line: 3241, column: 13, scope: !9694)
!9703 = distinct !{!9703, !9692, !9704}
!9704 = !DILocation(line: 3244, column: 5, scope: !9681)
!9705 = !DILocation(line: 3246, column: 5, scope: !9681)
!9706 = !DILocation(line: 3248, column: 5, scope: !9681)
!9707 = !DILocation(line: 3250, column: 5, scope: !9681)
!9708 = distinct !DISubprogram(name: "SF_DAL_ResumeErase", scope: !1266, file: !1266, line: 3277, type: !1745, scopeLine: 3278, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1265, retainedNodes: !9709)
!9709 = !{!9710, !9711, !9712}
!9710 = !DILocalVariable(name: "MTDData", arg: 1, scope: !9708, file: !1266, line: 3277, type: !88)
!9711 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !9708, file: !1266, line: 3277, type: !61)
!9712 = !DILocalVariable(name: "D", scope: !9708, file: !1266, line: 3279, type: !1436)
!9713 = !DILocation(line: 0, scope: !9708)
!9714 = !DILocation(line: 3279, column: 29, scope: !9708)
!9715 = !DILocation(line: 3281, column: 5, scope: !9708)
!9716 = !DILocation(line: 3282, column: 5, scope: !9708)
!9717 = !DILocation(line: 3283, column: 5, scope: !9708)
!9718 = !DILocation(line: 3285, column: 5, scope: !9708)
!9719 = distinct !DISubprogram(name: "SF_DAL_LockEraseBlkAddr", scope: !1266, file: !1266, line: 3332, type: !1771, scopeLine: 3333, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1265, retainedNodes: !9720)
!9720 = !{!9721, !9722, !9723}
!9721 = !DILocalVariable(name: "MTDData", arg: 1, scope: !9719, file: !1266, line: 3332, type: !88)
!9722 = !DILocalVariable(name: "BlkAddr", arg: 2, scope: !9719, file: !1266, line: 3332, type: !88)
!9723 = !DILocalVariable(name: "ACTION", arg: 3, scope: !9719, file: !1266, line: 3332, type: !61)
!9724 = !DILocation(line: 0, scope: !9719)
!9725 = !DILocation(line: 3334, column: 5, scope: !9719)
!9726 = distinct !DISubprogram(name: "SF_DAL_IOCtrl", scope: !1266, file: !1266, line: 2350, type: !1779, scopeLine: 2351, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1265, retainedNodes: !9727)
!9727 = !{!9728, !9729, !9730, !9731}
!9728 = !DILocalVariable(name: "MTDData", arg: 1, scope: !9726, file: !1266, line: 2350, type: !88)
!9729 = !DILocalVariable(name: "CtrlAction", arg: 2, scope: !9726, file: !1266, line: 2350, type: !61)
!9730 = !DILocalVariable(name: "CtrlData", arg: 3, scope: !9726, file: !1266, line: 2350, type: !88)
!9731 = !DILocalVariable(name: "D", scope: !9726, file: !1266, line: 2352, type: !1436)
!9732 = !DILocation(line: 0, scope: !9726)
!9733 = !DILocation(line: 2353, column: 9, scope: !9726)
!9734 = !DILocation(line: 2354, column: 12, scope: !9735)
!9735 = distinct !DILexicalBlock(scope: !9736, file: !1266, line: 2353, column: 51)
!9736 = distinct !DILexicalBlock(scope: !9726, file: !1266, line: 2353, column: 9)
!9737 = !DILocation(line: 2354, column: 9, scope: !9735)
!9738 = !DILocation(line: 2355, column: 5, scope: !9735)
!9739 = !DILocation(line: 2356, column: 17, scope: !9740)
!9740 = distinct !DILexicalBlock(scope: !9741, file: !1266, line: 2356, column: 13)
!9741 = distinct !DILexicalBlock(scope: !9742, file: !1266, line: 2355, column: 71)
!9742 = distinct !DILexicalBlock(scope: !9736, file: !1266, line: 2355, column: 16)
!9743 = !DILocation(line: 2356, column: 14, scope: !9740)
!9744 = !DILocation(line: 2356, column: 28, scope: !9740)
!9745 = !DILocation(line: 2356, column: 49, scope: !9740)
!9746 = !DILocation(line: 2356, column: 56, scope: !9740)
!9747 = !DILocation(line: 2356, column: 70, scope: !9740)
!9748 = !DILocation(line: 2356, column: 80, scope: !9740)
!9749 = !DILocation(line: 2356, column: 13, scope: !9741)
!9750 = !DILocation(line: 2361, column: 9, scope: !9751)
!9751 = distinct !DILexicalBlock(scope: !9752, file: !1266, line: 2361, column: 9)
!9752 = distinct !DILexicalBlock(scope: !9753, file: !1266, line: 2361, column: 9)
!9753 = distinct !DILexicalBlock(scope: !9754, file: !1266, line: 2361, column: 9)
!9754 = distinct !DILexicalBlock(scope: !9742, file: !1266, line: 2359, column: 12)
!9755 = !DILocation(line: 2363, column: 5, scope: !9726)
!9756 = !DILocation(line: 2364, column: 1, scope: !9726)
!9757 = distinct !DISubprogram(name: "SF_DAL_FailCheck", scope: !1266, file: !1266, line: 3355, type: !1538, scopeLine: 3356, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1265, retainedNodes: !9758)
!9758 = !{!9759, !9760, !9761}
!9759 = !DILocalVariable(name: "MTDData", arg: 1, scope: !9757, file: !1266, line: 3355, type: !88)
!9760 = !DILocalVariable(name: "D", scope: !9757, file: !1266, line: 3357, type: !1436)
!9761 = !DILocalVariable(name: "status", scope: !9757, file: !1266, line: 3358, type: !1236)
!9762 = !DILocation(line: 0, scope: !9757)
!9763 = !DILocation(line: 3366, column: 12, scope: !9764)
!9764 = distinct !DILexicalBlock(scope: !9757, file: !1266, line: 3366, column: 9)
!9765 = !DILocation(line: 3366, column: 17, scope: !9764)
!9766 = !DILocation(line: 3366, column: 9, scope: !9764)
!9767 = !DILocation(line: 3366, column: 9, scope: !9757)
!9768 = !DILocation(line: 3357, column: 25, scope: !9757)
!9769 = !DILocation(line: 3367, column: 18, scope: !9770)
!9770 = distinct !DILexicalBlock(scope: !9764, file: !1266, line: 3366, column: 33)
!9771 = !DILocation(line: 3368, column: 25, scope: !9772)
!9772 = distinct !DILexicalBlock(scope: !9770, file: !1266, line: 3368, column: 13)
!9773 = !DILocation(line: 3368, column: 22, scope: !9772)
!9774 = !DILocation(line: 3368, column: 20, scope: !9772)
!9775 = !DILocation(line: 3368, column: 13, scope: !9770)
!9776 = !DILocation(line: 3373, column: 5, scope: !9757)
!9777 = !DILocation(line: 3374, column: 1, scope: !9757)
!9778 = distinct !DISubprogram(name: "SF_DAL_CheckReadyAndResume", scope: !1266, file: !1266, line: 3044, type: !9779, scopeLine: 3045, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1265, retainedNodes: !9781)
!9779 = !DISubroutineType(types: !9780)
!9780 = !{!1144, !88, !61, !463}
!9781 = !{!9782, !9783, !9784, !9785, !9786, !9787, !9788, !9789}
!9782 = !DILocalVariable(name: "MTDData", arg: 1, scope: !9778, file: !1266, line: 3044, type: !88)
!9783 = !DILocalVariable(name: "addr", arg: 2, scope: !9778, file: !1266, line: 3044, type: !61)
!9784 = !DILocalVariable(name: "data", arg: 3, scope: !9778, file: !1266, line: 3044, type: !463)
!9785 = !DILocalVariable(name: "savedMask", scope: !9778, file: !1266, line: 3046, type: !61)
!9786 = !DILocalVariable(name: "D", scope: !9778, file: !1266, line: 3047, type: !1436)
!9787 = !DILocalVariable(name: "result", scope: !9778, file: !1266, line: 3048, type: !1144)
!9788 = !DILocalVariable(name: "check_data", scope: !9778, file: !1266, line: 3049, type: !463)
!9789 = !DILocalVariable(name: "status_busy", scope: !9778, file: !1266, line: 3050, type: !1236)
!9790 = !DILocation(line: 0, scope: !9778)
!9791 = !DILocation(line: 3047, column: 43, scope: !9778)
!9792 = !DILocation(line: 3053, column: 47, scope: !9778)
!9793 = !DILocation(line: 3053, column: 52, scope: !9778)
!9794 = !DILocation(line: 3053, column: 19, scope: !9778)
!9795 = !DILocation(line: 3056, column: 9, scope: !9796)
!9796 = distinct !DILexicalBlock(scope: !9778, file: !1266, line: 3056, column: 9)
!9797 = !DILocation(line: 3056, column: 9, scope: !9778)
!9798 = !DILocation(line: 3058, column: 9, scope: !9799)
!9799 = distinct !DILexicalBlock(scope: !9800, file: !1266, line: 3058, column: 9)
!9800 = distinct !DILexicalBlock(scope: !9801, file: !1266, line: 3058, column: 9)
!9801 = distinct !DILexicalBlock(scope: !9796, file: !1266, line: 3056, column: 28)
!9802 = !DILocation(line: 3058, column: 9, scope: !9800)
!9803 = !DILocation(line: 3058, column: 9, scope: !9804)
!9804 = distinct !DILexicalBlock(scope: !9799, file: !1266, line: 3058, column: 9)
!9805 = !DILocation(line: 3060, column: 9, scope: !9801)
!9806 = !DILocation(line: 3062, column: 29, scope: !9801)
!9807 = !DILocation(line: 3063, column: 5, scope: !9801)
!9808 = !DILocation(line: 3065, column: 38, scope: !9809)
!9809 = distinct !DILexicalBlock(scope: !9796, file: !1266, line: 3065, column: 15)
!9810 = !DILocation(line: 3065, column: 35, scope: !9809)
!9811 = !DILocation(line: 3065, column: 33, scope: !9809)
!9812 = !DILocation(line: 3065, column: 17, scope: !9809)
!9813 = !DILocation(line: 3065, column: 15, scope: !9796)
!9814 = !DILocation(line: 3066, column: 21, scope: !9815)
!9815 = distinct !DILexicalBlock(scope: !9809, file: !1266, line: 3065, column: 62)
!9816 = !DILocation(line: 3068, column: 9, scope: !9815)
!9817 = !DILocation(line: 3071, column: 23, scope: !9815)
!9818 = !DILocation(line: 3071, column: 22, scope: !9815)
!9819 = !DILocation(line: 3073, column: 24, scope: !9820)
!9820 = distinct !DILexicalBlock(scope: !9815, file: !1266, line: 3073, column: 13)
!9821 = !DILocation(line: 3073, column: 13, scope: !9815)
!9822 = !DILocation(line: 3078, column: 16, scope: !9823)
!9823 = distinct !DILexicalBlock(scope: !9824, file: !1266, line: 3078, column: 16)
!9824 = distinct !DILexicalBlock(scope: !9820, file: !1266, line: 3075, column: 16)
!9825 = !DILocation(line: 3078, column: 16, scope: !9824)
!9826 = !DILocation(line: 3081, column: 58, scope: !9827)
!9827 = distinct !DILexicalBlock(scope: !9823, file: !1266, line: 3078, column: 46)
!9828 = !DILocation(line: 3081, column: 17, scope: !9827)
!9829 = !DILocation(line: 3082, column: 22, scope: !9830)
!9830 = distinct !DILexicalBlock(scope: !9827, file: !1266, line: 3082, column: 21)
!9831 = !DILocation(line: 3082, column: 49, scope: !9830)
!9832 = !DILocation(line: 3082, column: 21, scope: !9827)
!9833 = !DILocation(line: 3088, column: 9, scope: !9815)
!9834 = !DILocation(line: 3091, column: 9, scope: !9778)
!9835 = !DILocation(line: 3092, column: 13, scope: !9836)
!9836 = distinct !DILexicalBlock(scope: !9837, file: !1266, line: 3092, column: 13)
!9837 = distinct !DILexicalBlock(scope: !9778, file: !1266, line: 3091, column: 9)
!9838 = !DILocation(line: 3092, column: 33, scope: !9836)
!9839 = !DILocation(line: 3092, column: 13, scope: !9837)
!9840 = !DILocation(line: 3106, column: 5, scope: !9778)
!9841 = !DILocation(line: 3107, column: 1, scope: !9778)
!9842 = distinct !DISubprogram(name: "SF_DAL_Dev_EraseBlock", scope: !1266, file: !1266, line: 3497, type: !9843, scopeLine: 3498, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1265, retainedNodes: !9845)
!9843 = !DISubroutineType(types: !9844)
!9844 = !{null, !1436, !61}
!9845 = !{!9846, !9847, !9848}
!9846 = !DILocalVariable(name: "D", arg: 1, scope: !9842, file: !1266, line: 3497, type: !1436)
!9847 = !DILocalVariable(name: "addr", arg: 2, scope: !9842, file: !1266, line: 3497, type: !61)
!9848 = !DILocalVariable(name: "savedMask", scope: !9842, file: !1266, line: 3499, type: !61)
!9849 = !DILocation(line: 0, scope: !9842)
!9850 = !DILocation(line: 3501, column: 14, scope: !9851)
!9851 = distinct !DILexicalBlock(scope: !9842, file: !1266, line: 3501, column: 9)
!9852 = !DILocation(line: 3501, column: 25, scope: !9851)
!9853 = !DILocation(line: 3501, column: 9, scope: !9842)
!9854 = !DILocation(line: 3502, column: 9, scope: !9855)
!9855 = distinct !DILexicalBlock(scope: !9851, file: !1266, line: 3501, column: 51)
!9856 = !DILocation(line: 3503, column: 5, scope: !9855)
!9857 = !DILocation(line: 3507, column: 17, scope: !9842)
!9858 = !DILocation(line: 3516, column: 5, scope: !9842)
!9859 = !DILocation(line: 3517, column: 31, scope: !9842)
!9860 = !DILocation(line: 3517, column: 38, scope: !9842)
!9861 = !DILocation(line: 3517, column: 43, scope: !9842)
!9862 = !DILocation(line: 3517, column: 59, scope: !9842)
!9863 = !DILocation(line: 3517, column: 56, scope: !9842)
!9864 = !DILocation(line: 3517, column: 5, scope: !9842)
!9865 = !DILocation(line: 3523, column: 5, scope: !9842)
!9866 = !DILocation(line: 3524, column: 1, scope: !9842)
!9867 = distinct !DISubprogram(name: "SF_DAL_Init_Vendor", scope: !1266, file: !1266, line: 2018, type: !8968, scopeLine: 2019, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1265, retainedNodes: !9868)
!9868 = !{!9869, !9870, !9871}
!9869 = !DILocalVariable(name: "driver", arg: 1, scope: !9867, file: !1266, line: 2018, type: !8970)
!9870 = !DILocalVariable(name: "D", arg: 2, scope: !9867, file: !1266, line: 2018, type: !1436)
!9871 = !DILocalVariable(name: "result", scope: !9867, file: !1266, line: 2020, type: !1144)
!9872 = !DILocation(line: 0, scope: !9867)
!9873 = !DILocation(line: 2022, column: 13, scope: !9867)
!9874 = !DILocation(line: 2022, column: 5, scope: !9867)
!9875 = !DILocation(line: 2031, column: 16, scope: !9876)
!9876 = distinct !DILexicalBlock(scope: !9867, file: !1266, line: 2022, column: 31)
!9877 = !DILocation(line: 2031, column: 27, scope: !9876)
!9878 = !DILocation(line: 2033, column: 22, scope: !9876)
!9879 = !DILocation(line: 2034, column: 13, scope: !9876)
!9880 = !DILocation(line: 2049, column: 16, scope: !9876)
!9881 = !DILocation(line: 2049, column: 27, scope: !9876)
!9882 = !DILocation(line: 2051, column: 23, scope: !9876)
!9883 = !DILocation(line: 2053, column: 13, scope: !9876)
!9884 = !DILocation(line: 2058, column: 22, scope: !9876)
!9885 = !DILocation(line: 2059, column: 13, scope: !9876)
!9886 = !DILocation(line: 2079, column: 13, scope: !9887)
!9887 = distinct !DILexicalBlock(scope: !9888, file: !1266, line: 2079, column: 13)
!9888 = distinct !DILexicalBlock(scope: !9889, file: !1266, line: 2079, column: 13)
!9889 = distinct !DILexicalBlock(scope: !9876, file: !1266, line: 2079, column: 13)
!9890 = !DILocation(line: 2083, column: 5, scope: !9867)
!9891 = distinct !DISubprogram(name: "SF_DAL_Init_Driver", scope: !1266, file: !1266, line: 2100, type: !9892, scopeLine: 2101, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1265, retainedNodes: !9894)
!9892 = !DISubroutineType(types: !9893)
!9893 = !{!1144, !8970, !1436, !61, !61}
!9894 = !{!9895, !9896, !9897, !9898, !9899}
!9895 = !DILocalVariable(name: "driver", arg: 1, scope: !9891, file: !1266, line: 2100, type: !8970)
!9896 = !DILocalVariable(name: "D", arg: 2, scope: !9891, file: !1266, line: 2100, type: !1436)
!9897 = !DILocalVariable(name: "baseaddr", arg: 3, scope: !9891, file: !1266, line: 2100, type: !61)
!9898 = !DILocalVariable(name: "parameter", arg: 4, scope: !9891, file: !1266, line: 2100, type: !61)
!9899 = !DILocalVariable(name: "result", scope: !9891, file: !1266, line: 2102, type: !1144)
!9900 = !DILocation(line: 0, scope: !9891)
!9901 = !DILocation(line: 2105, column: 16, scope: !9902)
!9902 = distinct !DILexicalBlock(scope: !9891, file: !1266, line: 2105, column: 9)
!9903 = !DILocation(line: 2105, column: 24, scope: !9902)
!9904 = !DILocation(line: 2109, column: 12, scope: !9905)
!9905 = distinct !DILexicalBlock(scope: !9891, file: !1266, line: 2109, column: 9)
!9906 = !DILocation(line: 2109, column: 16, scope: !9905)
!9907 = !DILocation(line: 2109, column: 24, scope: !9905)
!9908 = !DILocation(line: 2109, column: 30, scope: !9905)
!9909 = !DILocation(line: 2109, column: 40, scope: !9905)
!9910 = !DILocation(line: 2109, column: 9, scope: !9891)
!9911 = !DILocation(line: 2118, column: 19, scope: !9891)
!9912 = !DILocation(line: 2118, column: 8, scope: !9891)
!9913 = !DILocation(line: 2118, column: 17, scope: !9891)
!9914 = !DILocation(line: 2119, column: 23, scope: !9891)
!9915 = !DILocation(line: 2119, column: 8, scope: !9891)
!9916 = !DILocation(line: 2119, column: 21, scope: !9891)
!9917 = !DILocation(line: 2122, column: 5, scope: !9891)
!9918 = !DILocation(line: 2125, column: 8, scope: !9891)
!9919 = !DILocation(line: 2125, column: 13, scope: !9891)
!9920 = !DILocation(line: 2125, column: 24, scope: !9891)
!9921 = !DILocation(line: 2126, column: 26, scope: !9891)
!9922 = !DILocation(line: 2126, column: 5, scope: !9891)
!9923 = !DILocation(line: 2128, column: 9, scope: !9924)
!9924 = distinct !DILexicalBlock(scope: !9891, file: !1266, line: 2128, column: 9)
!9925 = !DILocation(line: 2128, column: 31, scope: !9924)
!9926 = !DILocation(line: 2128, column: 60, scope: !9924)
!9927 = !DILocation(line: 2128, column: 9, scope: !9891)
!9928 = !DILocation(line: 2129, column: 12, scope: !9929)
!9929 = distinct !DILexicalBlock(scope: !9924, file: !1266, line: 2128, column: 110)
!9930 = !DILocation(line: 2129, column: 17, scope: !9929)
!9931 = !DILocation(line: 2129, column: 28, scope: !9929)
!9932 = !DILocation(line: 2130, column: 9, scope: !9929)
!9933 = !DILocation(line: 2131, column: 5, scope: !9929)
!9934 = !DILocation(line: 2134, column: 14, scope: !9891)
!9935 = !DILocation(line: 2136, column: 5, scope: !9891)
!9936 = !DILocation(line: 2137, column: 1, scope: !9891)
!9937 = distinct !DISubprogram(name: "SF_DAL_Dev_ReadID", scope: !1266, file: !1266, line: 3387, type: !9938, scopeLine: 3388, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1265, retainedNodes: !9940)
!9938 = !DISubroutineType(types: !9939)
!9939 = !{null, !1436, !969}
!9940 = !{!9941, !9942, !9943}
!9941 = !DILocalVariable(name: "D", arg: 1, scope: !9937, file: !1266, line: 3387, type: !1436)
!9942 = !DILocalVariable(name: "id", arg: 2, scope: !9937, file: !1266, line: 3387, type: !969)
!9943 = !DILocalVariable(name: "cmd", scope: !9937, file: !1266, line: 3389, type: !463)
!9944 = !DILocation(line: 0, scope: !9937)
!9945 = !DILocation(line: 3389, column: 5, scope: !9937)
!9946 = !DILocation(line: 3405, column: 9, scope: !9947)
!9947 = distinct !DILexicalBlock(scope: !9937, file: !1266, line: 3405, column: 9)
!9948 = !DILocation(line: 3405, column: 21, scope: !9947)
!9949 = !DILocation(line: 0, scope: !9947)
!9950 = !DILocation(line: 3405, column: 9, scope: !9937)
!9951 = !DILocation(line: 3411, column: 31, scope: !9937)
!9952 = !DILocation(line: 3411, column: 5, scope: !9937)
!9953 = !DILocation(line: 3412, column: 1, scope: !9937)
!9954 = distinct !DISubprogram(name: "SF_DAL_Dev_Command_Ext", scope: !1266, file: !1266, line: 3585, type: !9955, scopeLine: 3586, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1265, retainedNodes: !9957)
!9955 = !DISubroutineType(types: !9956)
!9956 = !{null, !7737, !969, !969, !7737, !7737}
!9957 = !{!9958, !9959, !9960, !9961, !9962, !9963}
!9958 = !DILocalVariable(name: "CS", arg: 1, scope: !9954, file: !1266, line: 3585, type: !7737)
!9959 = !DILocalVariable(name: "cmd", arg: 2, scope: !9954, file: !1266, line: 3585, type: !969)
!9960 = !DILocalVariable(name: "data", arg: 3, scope: !9954, file: !1266, line: 3585, type: !969)
!9961 = !DILocalVariable(name: "outl", arg: 4, scope: !9954, file: !1266, line: 3585, type: !7737)
!9962 = !DILocalVariable(name: "inl", arg: 5, scope: !9954, file: !1266, line: 3585, type: !7737)
!9963 = !DILocalVariable(name: "savedMask", scope: !9954, file: !1266, line: 3587, type: !61)
!9964 = !DILocation(line: 0, scope: !9954)
!9965 = !DILocation(line: 3589, column: 17, scope: !9954)
!9966 = !DILocation(line: 3590, column: 5, scope: !9954)
!9967 = !DILocation(line: 3591, column: 5, scope: !9954)
!9968 = !DILocation(line: 3593, column: 1, scope: !9954)
!9969 = distinct !DISubprogram(name: "CMEM_CheckValidDeviceID", scope: !1591, file: !1591, line: 110, type: !8215, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1590, retainedNodes: !9970)
!9970 = !{!9971, !9972, !9973, !9974}
!9971 = !DILocalVariable(name: "id", arg: 1, scope: !9969, file: !1591, line: 110, type: !969)
!9972 = !DILocalVariable(name: "i", scope: !9969, file: !1591, line: 114, type: !1144)
!9973 = !DILocalVariable(name: "j", scope: !9969, file: !1591, line: 114, type: !1144)
!9974 = !DILocalVariable(name: "id_list", scope: !9969, file: !1591, line: 115, type: !9975)
!9975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9976, size: 32)
!9976 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1668)
!9977 = !DILocation(line: 0, scope: !9969)
!9978 = !DILocation(line: 119, column: 5, scope: !9979)
!9979 = distinct !DILexicalBlock(scope: !9969, file: !1591, line: 119, column: 5)
!9980 = !DILocation(line: 119, column: 46, scope: !9981)
!9981 = distinct !DILexicalBlock(scope: !9979, file: !1591, line: 119, column: 5)
!9982 = !DILocation(line: 119, column: 19, scope: !9981)
!9983 = distinct !{!9983, !9978, !9984}
!9984 = !DILocation(line: 131, column: 5, scope: !9979)
!9985 = !DILocation(line: 121, column: 23, scope: !9986)
!9986 = distinct !DILexicalBlock(scope: !9987, file: !1591, line: 121, column: 9)
!9987 = distinct !DILexicalBlock(scope: !9988, file: !1591, line: 121, column: 9)
!9988 = distinct !DILexicalBlock(scope: !9981, file: !1591, line: 119, column: 50)
!9989 = !DILocation(line: 121, column: 9, scope: !9987)
!9990 = !DILocation(line: 122, column: 17, scope: !9991)
!9991 = distinct !DILexicalBlock(scope: !9992, file: !1591, line: 122, column: 17)
!9992 = distinct !DILexicalBlock(scope: !9986, file: !1591, line: 121, column: 51)
!9993 = !DILocation(line: 122, column: 37, scope: !9991)
!9994 = !DILocation(line: 122, column: 34, scope: !9991)
!9995 = !DILocation(line: 122, column: 17, scope: !9992)
!9996 = !DILocation(line: 121, column: 47, scope: !9986)
!9997 = distinct !{!9997, !9989, !9998}
!9998 = !DILocation(line: 125, column: 9, scope: !9987)
!9999 = !DILocation(line: 0, scope: !9987)
!10000 = !DILocation(line: 127, column: 15, scope: !10001)
!10001 = distinct !DILexicalBlock(scope: !9988, file: !1591, line: 127, column: 13)
!10002 = !DILocation(line: 127, column: 13, scope: !9988)
!10003 = !DILocation(line: 134, column: 1, scope: !9969)
!10004 = distinct !DISubprogram(name: "CMEM_Index", scope: !1591, file: !1591, line: 153, type: !8370, scopeLine: 155, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1590, retainedNodes: !10005)
!10005 = !{!10006, !10007, !10008, !10015}
!10006 = !DILocalVariable(name: "i", scope: !10004, file: !1591, line: 156, type: !1144)
!10007 = !DILocalVariable(name: "j", scope: !10004, file: !1591, line: 156, type: !1144)
!10008 = !DILocalVariable(name: "id", scope: !10004, file: !1591, line: 157, type: !10009)
!10009 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMFlashID", file: !1661, line: 89, baseType: !10010)
!10010 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1661, line: 86, size: 64, elements: !10011)
!10011 = !{!10012, !10013}
!10012 = !DIDerivedType(tag: DW_TAG_member, name: "NAND", scope: !10010, file: !1661, line: 87, baseType: !1674, size: 64)
!10013 = !DIDerivedType(tag: DW_TAG_member, name: "NOR", scope: !10010, file: !1661, line: 88, baseType: !10014, size: 64)
!10014 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1236, size: 64, elements: !706)
!10015 = !DILocalVariable(name: "id_list", scope: !10004, file: !1591, line: 158, type: !9975)
!10016 = !DILocation(line: 157, column: 5, scope: !10004)
!10017 = !DILocation(line: 157, column: 17, scope: !10004)
!10018 = !DILocation(line: 0, scope: !10004)
!10019 = !DILocation(line: 161, column: 9, scope: !10020)
!10020 = distinct !DILexicalBlock(scope: !10004, file: !1591, line: 161, column: 9)
!10021 = !DILocation(line: 161, column: 20, scope: !10020)
!10022 = !DILocation(line: 161, column: 9, scope: !10004)
!10023 = !DILocation(line: 172, column: 58, scope: !10004)
!10024 = !DILocation(line: 172, column: 5, scope: !10004)
!10025 = !DILocation(line: 178, column: 5, scope: !10026)
!10026 = distinct !DILexicalBlock(scope: !10004, file: !1591, line: 178, column: 5)
!10027 = !DILocation(line: 180, column: 23, scope: !10028)
!10028 = distinct !DILexicalBlock(scope: !10029, file: !1591, line: 180, column: 9)
!10029 = distinct !DILexicalBlock(scope: !10030, file: !1591, line: 180, column: 9)
!10030 = distinct !DILexicalBlock(scope: !10031, file: !1591, line: 178, column: 53)
!10031 = distinct !DILexicalBlock(scope: !10026, file: !1591, line: 178, column: 5)
!10032 = !DILocation(line: 180, column: 9, scope: !10029)
!10033 = !DILocation(line: 181, column: 17, scope: !10034)
!10034 = distinct !DILexicalBlock(scope: !10035, file: !1591, line: 181, column: 17)
!10035 = distinct !DILexicalBlock(scope: !10028, file: !1591, line: 180, column: 51)
!10036 = !DILocation(line: 181, column: 37, scope: !10034)
!10037 = !DILocation(line: 181, column: 34, scope: !10034)
!10038 = !DILocation(line: 181, column: 17, scope: !10035)
!10039 = !DILocation(line: 180, column: 47, scope: !10028)
!10040 = distinct !{!10040, !10032, !10041}
!10041 = !DILocation(line: 184, column: 9, scope: !10029)
!10042 = !DILocation(line: 0, scope: !10029)
!10043 = !DILocation(line: 186, column: 15, scope: !10044)
!10044 = distinct !DILexicalBlock(scope: !10030, file: !1591, line: 186, column: 13)
!10045 = !DILocation(line: 186, column: 13, scope: !10030)
!10046 = !DILocation(line: 188, column: 26, scope: !10047)
!10047 = distinct !DILexicalBlock(scope: !10044, file: !1591, line: 186, column: 41)
!10048 = !DILocation(line: 188, column: 24, scope: !10047)
!10049 = !DILocation(line: 189, column: 13, scope: !10047)
!10050 = !DILocation(line: 178, column: 46, scope: !10031)
!10051 = !DILocation(line: 178, column: 19, scope: !10031)
!10052 = distinct !{!10052, !10025, !10053}
!10053 = !DILocation(line: 191, column: 5, scope: !10026)
!10054 = !DILocation(line: 222, column: 12, scope: !10004)
!10055 = !DILocation(line: 223, column: 1, scope: !10004)
!10056 = distinct !DISubprogram(name: "CMEM_GetIDEntry", scope: !1591, file: !1591, line: 240, type: !10057, scopeLine: 241, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1590, retainedNodes: !10059)
!10057 = !DISubroutineType(types: !10058)
!10058 = !{!9975, !61}
!10059 = !{!10060}
!10060 = !DILocalVariable(name: "index", arg: 1, scope: !10056, file: !1591, line: 240, type: !61)
!10061 = !DILocation(line: 0, scope: !10056)
!10062 = !DILocation(line: 242, column: 13, scope: !10056)
!10063 = !DILocation(line: 242, column: 5, scope: !10056)
!10064 = distinct !DISubprogram(name: "CMEM_EMIINIT_ReadID", scope: !1591, file: !1591, line: 254, type: !10065, scopeLine: 255, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1590, retainedNodes: !10067)
!10065 = !DISubroutineType(types: !10066)
!10066 = !{null, !7737, !88, !1235}
!10067 = !{!10068, !10069, !10070, !10071, !10073, !10074}
!10068 = !DILocalVariable(name: "CS", arg: 1, scope: !10064, file: !1591, line: 254, type: !7737)
!10069 = !DILocalVariable(name: "BaseAddr", arg: 2, scope: !10064, file: !1591, line: 254, type: !88)
!10070 = !DILocalVariable(name: "flashid", arg: 3, scope: !10064, file: !1591, line: 254, type: !1235)
!10071 = !DILocalVariable(name: "cmd", scope: !10072, file: !1591, line: 258, type: !463)
!10072 = distinct !DILexicalBlock(scope: !10064, file: !1591, line: 257, column: 5)
!10073 = !DILocalVariable(name: "id", scope: !10072, file: !1591, line: 258, type: !1526)
!10074 = !DILocalVariable(name: "i", scope: !10072, file: !1591, line: 258, type: !463)
!10075 = !DILocation(line: 0, scope: !10064)
!10076 = !DILocation(line: 258, column: 9, scope: !10072)
!10077 = !DILocation(line: 258, column: 22, scope: !10072)
!10078 = !DILocation(line: 0, scope: !10072)
!10079 = !DILocation(line: 260, column: 13, scope: !10072)
!10080 = !DILocation(line: 261, column: 9, scope: !10072)
!10081 = !DILocation(line: 263, column: 13, scope: !10082)
!10082 = distinct !DILexicalBlock(scope: !10072, file: !1591, line: 263, column: 13)
!10083 = !DILocation(line: 263, column: 27, scope: !10082)
!10084 = !DILocation(line: 263, column: 48, scope: !10082)
!10085 = !DILocation(line: 263, column: 13, scope: !10072)
!10086 = !DILocation(line: 264, column: 17, scope: !10087)
!10087 = distinct !DILexicalBlock(scope: !10082, file: !1591, line: 263, column: 95)
!10088 = !DILocation(line: 265, column: 13, scope: !10087)
!10089 = !DILocation(line: 266, column: 9, scope: !10087)
!10090 = !DILocation(line: 268, column: 9, scope: !10091)
!10091 = distinct !DILexicalBlock(scope: !10072, file: !1591, line: 268, column: 9)
!10092 = !DILocation(line: 269, column: 26, scope: !10093)
!10093 = distinct !DILexicalBlock(scope: !10094, file: !1591, line: 268, column: 50)
!10094 = distinct !DILexicalBlock(scope: !10091, file: !1591, line: 268, column: 9)
!10095 = !DILocation(line: 269, column: 13, scope: !10093)
!10096 = !DILocation(line: 269, column: 24, scope: !10093)
!10097 = !DILocation(line: 268, column: 46, scope: !10094)
!10098 = !DILocation(line: 268, column: 23, scope: !10094)
!10099 = distinct !{!10099, !10090, !10100}
!10100 = !DILocation(line: 270, column: 9, scope: !10091)
!10101 = !DILocation(line: 271, column: 5, scope: !10064)
!10102 = !DILocation(line: 272, column: 5, scope: !10064)
!10103 = distinct !DISubprogram(name: "CMEM_EMIINIT_CheckValidDeviceID", scope: !1591, file: !1591, line: 285, type: !8215, scopeLine: 286, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1590, retainedNodes: !10104)
!10104 = !{!10105, !10106, !10107, !10108}
!10105 = !DILocalVariable(name: "id", arg: 1, scope: !10103, file: !1591, line: 285, type: !969)
!10106 = !DILocalVariable(name: "i", scope: !10103, file: !1591, line: 289, type: !1144)
!10107 = !DILocalVariable(name: "j", scope: !10103, file: !1591, line: 289, type: !1144)
!10108 = !DILocalVariable(name: "id_list", scope: !10103, file: !1591, line: 290, type: !9975)
!10109 = !DILocation(line: 0, scope: !10103)
!10110 = !DILocation(line: 294, column: 5, scope: !10111)
!10111 = distinct !DILexicalBlock(scope: !10103, file: !1591, line: 294, column: 5)
!10112 = !DILocation(line: 294, column: 46, scope: !10113)
!10113 = distinct !DILexicalBlock(scope: !10111, file: !1591, line: 294, column: 5)
!10114 = !DILocation(line: 294, column: 19, scope: !10113)
!10115 = distinct !{!10115, !10110, !10116}
!10116 = !DILocation(line: 306, column: 5, scope: !10111)
!10117 = !DILocation(line: 296, column: 23, scope: !10118)
!10118 = distinct !DILexicalBlock(scope: !10119, file: !1591, line: 296, column: 9)
!10119 = distinct !DILexicalBlock(scope: !10120, file: !1591, line: 296, column: 9)
!10120 = distinct !DILexicalBlock(scope: !10113, file: !1591, line: 294, column: 53)
!10121 = !DILocation(line: 296, column: 9, scope: !10119)
!10122 = !DILocation(line: 297, column: 17, scope: !10123)
!10123 = distinct !DILexicalBlock(scope: !10124, file: !1591, line: 297, column: 17)
!10124 = distinct !DILexicalBlock(scope: !10118, file: !1591, line: 296, column: 51)
!10125 = !DILocation(line: 297, column: 37, scope: !10123)
!10126 = !DILocation(line: 297, column: 34, scope: !10123)
!10127 = !DILocation(line: 297, column: 17, scope: !10124)
!10128 = !DILocation(line: 296, column: 47, scope: !10118)
!10129 = distinct !{!10129, !10121, !10130}
!10130 = !DILocation(line: 300, column: 9, scope: !10119)
!10131 = !DILocation(line: 0, scope: !10119)
!10132 = !DILocation(line: 302, column: 15, scope: !10133)
!10133 = distinct !DILexicalBlock(scope: !10120, file: !1591, line: 302, column: 13)
!10134 = !DILocation(line: 302, column: 13, scope: !10120)
!10135 = !DILocation(line: 310, column: 1, scope: !10103)
!10136 = distinct !DISubprogram(name: "CMEM_EMIINIT_Index", scope: !1591, file: !1591, line: 328, type: !8370, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1590, retainedNodes: !10137)
!10137 = !{!10138, !10139, !10140, !10141}
!10138 = !DILocalVariable(name: "i", scope: !10136, file: !1591, line: 331, type: !1144)
!10139 = !DILocalVariable(name: "j", scope: !10136, file: !1591, line: 331, type: !1144)
!10140 = !DILocalVariable(name: "id", scope: !10136, file: !1591, line: 332, type: !10009)
!10141 = !DILocalVariable(name: "id_list", scope: !10136, file: !1591, line: 333, type: !9975)
!10142 = !DILocation(line: 332, column: 5, scope: !10136)
!10143 = !DILocation(line: 332, column: 17, scope: !10136)
!10144 = !DILocation(line: 0, scope: !10136)
!10145 = !DILocation(line: 336, column: 9, scope: !10146)
!10146 = distinct !DILexicalBlock(scope: !10136, file: !1591, line: 336, column: 9)
!10147 = !DILocation(line: 336, column: 28, scope: !10146)
!10148 = !DILocation(line: 336, column: 9, scope: !10136)
!10149 = !DILocation(line: 344, column: 60, scope: !10136)
!10150 = !DILocation(line: 344, column: 5, scope: !10136)
!10151 = !DILocation(line: 350, column: 5, scope: !10152)
!10152 = distinct !DILexicalBlock(scope: !10136, file: !1591, line: 350, column: 5)
!10153 = !DILocation(line: 352, column: 23, scope: !10154)
!10154 = distinct !DILexicalBlock(scope: !10155, file: !1591, line: 352, column: 9)
!10155 = distinct !DILexicalBlock(scope: !10156, file: !1591, line: 352, column: 9)
!10156 = distinct !DILexicalBlock(scope: !10157, file: !1591, line: 350, column: 53)
!10157 = distinct !DILexicalBlock(scope: !10152, file: !1591, line: 350, column: 5)
!10158 = !DILocation(line: 352, column: 9, scope: !10155)
!10159 = !DILocation(line: 353, column: 17, scope: !10160)
!10160 = distinct !DILexicalBlock(scope: !10161, file: !1591, line: 353, column: 17)
!10161 = distinct !DILexicalBlock(scope: !10154, file: !1591, line: 352, column: 51)
!10162 = !DILocation(line: 353, column: 37, scope: !10160)
!10163 = !DILocation(line: 353, column: 34, scope: !10160)
!10164 = !DILocation(line: 353, column: 17, scope: !10161)
!10165 = !DILocation(line: 352, column: 47, scope: !10154)
!10166 = distinct !{!10166, !10158, !10167}
!10167 = !DILocation(line: 356, column: 9, scope: !10155)
!10168 = !DILocation(line: 0, scope: !10155)
!10169 = !DILocation(line: 358, column: 15, scope: !10170)
!10170 = distinct !DILexicalBlock(scope: !10156, file: !1591, line: 358, column: 13)
!10171 = !DILocation(line: 358, column: 13, scope: !10156)
!10172 = !DILocation(line: 360, column: 34, scope: !10173)
!10173 = distinct !DILexicalBlock(scope: !10170, file: !1591, line: 358, column: 41)
!10174 = !DILocation(line: 360, column: 32, scope: !10173)
!10175 = !DILocation(line: 361, column: 13, scope: !10173)
!10176 = !DILocation(line: 350, column: 46, scope: !10157)
!10177 = !DILocation(line: 350, column: 19, scope: !10157)
!10178 = distinct !{!10178, !10151, !10179}
!10179 = !DILocation(line: 363, column: 5, scope: !10152)
!10180 = !DILocation(line: 364, column: 12, scope: !10136)
!10181 = !DILocation(line: 365, column: 1, scope: !10136)
!10182 = distinct !DISubprogram(name: "NOR_ReadID", scope: !2784, file: !2784, line: 64, type: !10183, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2783, retainedNodes: !10189)
!10183 = !DISubroutineType(types: !10184)
!10184 = !{null, !7737, !10185, !1235}
!10185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10186, size: 32)
!10186 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !10187)
!10187 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_CELL", file: !10188, line: 158, baseType: !1236)
!10188 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_cfi_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/uart_loopback_data_dma/GCC")
!10189 = !{!10190, !10191, !10192, !10193, !10194, !10196, !10197}
!10190 = !DILocalVariable(name: "CS", arg: 1, scope: !10182, file: !2784, line: 64, type: !7737)
!10191 = !DILocalVariable(name: "BaseAddr", arg: 2, scope: !10182, file: !2784, line: 64, type: !10185)
!10192 = !DILocalVariable(name: "flashid", arg: 3, scope: !10182, file: !2784, line: 64, type: !1235)
!10193 = !DILocalVariable(name: "savedMask", scope: !10182, file: !2784, line: 66, type: !61)
!10194 = !DILocalVariable(name: "cmd", scope: !10195, file: !2784, line: 70, type: !463)
!10195 = distinct !DILexicalBlock(scope: !10182, file: !2784, line: 69, column: 5)
!10196 = !DILocalVariable(name: "id", scope: !10195, file: !2784, line: 70, type: !1526)
!10197 = !DILocalVariable(name: "i", scope: !10195, file: !2784, line: 70, type: !463)
!10198 = !DILocation(line: 0, scope: !10182)
!10199 = !DILocation(line: 70, column: 9, scope: !10195)
!10200 = !DILocation(line: 70, column: 22, scope: !10195)
!10201 = !DILocation(line: 0, scope: !10195)
!10202 = !DILocation(line: 72, column: 13, scope: !10195)
!10203 = !DILocation(line: 73, column: 21, scope: !10195)
!10204 = !DILocation(line: 74, column: 9, scope: !10195)
!10205 = !DILocation(line: 75, column: 9, scope: !10195)
!10206 = !DILocation(line: 77, column: 13, scope: !10207)
!10207 = distinct !DILexicalBlock(scope: !10195, file: !2784, line: 77, column: 13)
!10208 = !DILocation(line: 77, column: 27, scope: !10207)
!10209 = !DILocation(line: 77, column: 48, scope: !10207)
!10210 = !DILocation(line: 77, column: 13, scope: !10195)
!10211 = !DILocation(line: 78, column: 17, scope: !10212)
!10212 = distinct !DILexicalBlock(scope: !10207, file: !2784, line: 77, column: 87)
!10213 = !DILocation(line: 79, column: 25, scope: !10212)
!10214 = !DILocation(line: 80, column: 13, scope: !10212)
!10215 = !DILocation(line: 81, column: 13, scope: !10212)
!10216 = !DILocation(line: 82, column: 9, scope: !10212)
!10217 = !DILocation(line: 84, column: 9, scope: !10218)
!10218 = distinct !DILexicalBlock(scope: !10195, file: !2784, line: 84, column: 9)
!10219 = !DILocation(line: 85, column: 26, scope: !10220)
!10220 = distinct !DILexicalBlock(scope: !10221, file: !2784, line: 84, column: 50)
!10221 = distinct !DILexicalBlock(scope: !10218, file: !2784, line: 84, column: 9)
!10222 = !DILocation(line: 85, column: 13, scope: !10220)
!10223 = !DILocation(line: 85, column: 24, scope: !10220)
!10224 = !DILocation(line: 84, column: 46, scope: !10221)
!10225 = !DILocation(line: 84, column: 23, scope: !10221)
!10226 = distinct !{!10226, !10217, !10227}
!10227 = !DILocation(line: 86, column: 9, scope: !10218)
!10228 = !DILocation(line: 87, column: 5, scope: !10182)
!10229 = !DILocation(line: 89, column: 1, scope: !10182)
!10230 = distinct !DISubprogram(name: "custom_get_NORFLASH_ROMSpace", scope: !1678, file: !1678, line: 248, type: !3984, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1677, retainedNodes: !293)
!10231 = !DILocation(line: 250, column: 5, scope: !10230)
!10232 = distinct !DISubprogram(name: "custom_get_NORFLASH_Size", scope: !1678, file: !1678, line: 270, type: !3984, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1677, retainedNodes: !293)
!10233 = !DILocation(line: 272, column: 5, scope: !10232)
!10234 = distinct !DISubprogram(name: "Initialize_FDD_tables", scope: !1678, file: !1678, line: 294, type: !291, scopeLine: 295, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1677, retainedNodes: !293)
!10235 = !DILocation(line: 296, column: 5, scope: !10234)
!10236 = !DILocation(line: 297, column: 5, scope: !10234)
!10237 = distinct !DISubprogram(name: "nor_sweep_device", scope: !1678, file: !1678, line: 304, type: !291, scopeLine: 305, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1677, retainedNodes: !293)
!10238 = !DILocation(line: 309, column: 5, scope: !10237)
!10239 = distinct !DISubprogram(name: "nor_manual_reclaim", scope: !1678, file: !1678, line: 312, type: !291, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1677, retainedNodes: !293)
!10240 = !DILocation(line: 317, column: 5, scope: !10239)
!10241 = distinct !DISubprogram(name: "custom_get_fat_addr", scope: !1678, file: !1678, line: 334, type: !3984, scopeLine: 335, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1677, retainedNodes: !293)
!10242 = !DILocation(line: 336, column: 5, scope: !10241)
!10243 = distinct !DISubprogram(name: "custom_get_fat_len", scope: !1678, file: !1678, line: 353, type: !3984, scopeLine: 354, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1677, retainedNodes: !293)
!10244 = !DILocation(line: 355, column: 5, scope: !10243)
!10245 = distinct !DISubprogram(name: "Custom_NOR_Init", scope: !1678, file: !1678, line: 374, type: !291, scopeLine: 375, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1677, retainedNodes: !293)
!10246 = !DILocation(line: 376, column: 5, scope: !10245)
!10247 = !DILocation(line: 377, column: 1, scope: !10245)
!10248 = distinct !DISubprogram(name: "custom_get_NORFLASH_Base", scope: !1678, file: !1678, line: 395, type: !3984, scopeLine: 396, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1677, retainedNodes: !293)
!10249 = !DILocation(line: 397, column: 5, scope: !10248)
!10250 = distinct !DISubprogram(name: "custom_get_FLASH_Size", scope: !1678, file: !1678, line: 416, type: !3984, scopeLine: 417, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1677, retainedNodes: !293)
!10251 = !DILocation(line: 418, column: 5, scope: !10250)
!10252 = distinct !DISubprogram(name: "INT_RetrieveFlashBaseAddr", scope: !1689, file: !1689, line: 254, type: !3984, scopeLine: 255, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1688, retainedNodes: !293)
!10253 = !DILocation(line: 256, column: 32, scope: !10252)
!10254 = !DILocation(line: 257, column: 5, scope: !10252)
!10255 = distinct !DISubprogram(name: "CMEM_Init_NOR_MTD_Common", scope: !1689, file: !1689, line: 269, type: !8370, scopeLine: 270, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1688, retainedNodes: !293)
!10256 = !DILocation(line: 275, column: 24, scope: !10255)
!10257 = !DILocation(line: 278, column: 24, scope: !10255)
!10258 = !DILocation(line: 278, column: 33, scope: !10255)
!10259 = !DILocation(line: 278, column: 49, scope: !10255)
!10260 = !DILocation(line: 278, column: 22, scope: !10255)
!10261 = !DILocation(line: 281, column: 5, scope: !10255)
!10262 = !DILocation(line: 283, column: 34, scope: !10255)
!10263 = !DILocation(line: 283, column: 23, scope: !10255)
!10264 = !DILocation(line: 286, column: 25, scope: !10255)
!10265 = !DILocation(line: 321, column: 5, scope: !10255)
!10266 = distinct !DISubprogram(name: "CMEM_Init_NOR_MTD_SF", scope: !1689, file: !1689, line: 332, type: !8370, scopeLine: 333, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1688, retainedNodes: !10267)
!10267 = !{!10268}
!10268 = !DILocalVariable(name: "result", scope: !10266, file: !1689, line: 334, type: !1144)
!10269 = !DILocation(line: 340, column: 30, scope: !10266)
!10270 = !DILocation(line: 343, column: 24, scope: !10266)
!10271 = !DILocation(line: 344, column: 18, scope: !10266)
!10272 = !DILocation(line: 348, column: 17, scope: !10266)
!10273 = !DILocation(line: 353, column: 19, scope: !10266)
!10274 = !DILocation(line: 354, column: 18, scope: !10266)
!10275 = !DILocation(line: 354, column: 27, scope: !10266)
!10276 = !DILocation(line: 354, column: 43, scope: !10266)
!10277 = !DILocation(line: 350, column: 14, scope: !10266)
!10278 = !DILocation(line: 0, scope: !10266)
!10279 = !DILocation(line: 356, column: 16, scope: !10280)
!10280 = distinct !DILexicalBlock(scope: !10266, file: !1689, line: 356, column: 9)
!10281 = !DILocation(line: 395, column: 1, scope: !10266)
!10282 = distinct !DISubprogram(name: "EMINIT_CMEM_GET_NOR_FLASH_COUNT", scope: !1689, file: !1689, line: 406, type: !10283, scopeLine: 407, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1688, retainedNodes: !293)
!10283 = !DISubroutineType(types: !2736)
!10284 = !DILocation(line: 408, column: 5, scope: !10282)
!10285 = distinct !DISubprogram(name: "EMINIT_CMEM_GET_NOR_FLASH_SIZE", scope: !1689, file: !1689, line: 420, type: !10286, scopeLine: 421, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1688, retainedNodes: !10288)
!10286 = !DISubroutineType(types: !10287)
!10287 = !{!61, !463}
!10288 = !{!10289, !10290, !10291}
!10289 = !DILocalVariable(name: "CS", arg: 1, scope: !10285, file: !1689, line: 420, type: !463)
!10290 = !DILocalVariable(name: "index", scope: !10285, file: !1689, line: 422, type: !61)
!10291 = !DILocalVariable(name: "list", scope: !10285, file: !1689, line: 423, type: !2006)
!10292 = !DILocation(line: 0, scope: !10285)
!10293 = !DILocation(line: 427, column: 13, scope: !10285)
!10294 = !DILocation(line: 430, column: 34, scope: !10285)
!10295 = !DILocation(line: 430, column: 5, scope: !10285)
!10296 = distinct !DISubprogram(name: "CMEM_BlockSize_Internal", scope: !1689, file: !1689, line: 442, type: !10297, scopeLine: 443, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1688, retainedNodes: !10299)
!10297 = !DISubroutineType(types: !10298)
!10298 = !{!61, !61, !1878}
!10299 = !{!10300, !10301, !10302}
!10300 = !DILocalVariable(name: "address", arg: 1, scope: !10296, file: !1689, line: 442, type: !61)
!10301 = !DILocalVariable(name: "blocklayout", arg: 2, scope: !10296, file: !1689, line: 442, type: !1878)
!10302 = !DILocalVariable(name: "i", scope: !10296, file: !1689, line: 444, type: !1236)
!10303 = !DILocation(line: 0, scope: !10296)
!10304 = !DILocation(line: 446, column: 23, scope: !10296)
!10305 = !DILocation(line: 448, column: 36, scope: !10306)
!10306 = distinct !DILexicalBlock(scope: !10307, file: !1689, line: 448, column: 5)
!10307 = distinct !DILexicalBlock(scope: !10296, file: !1689, line: 448, column: 5)
!10308 = !DILocation(line: 448, column: 41, scope: !10306)
!10309 = !DILocation(line: 448, column: 5, scope: !10307)
!10310 = !DILocation(line: 449, column: 39, scope: !10311)
!10311 = distinct !DILexicalBlock(scope: !10312, file: !1689, line: 449, column: 13)
!10312 = distinct !DILexicalBlock(scope: !10306, file: !1689, line: 448, column: 54)
!10313 = !DILocation(line: 449, column: 21, scope: !10311)
!10314 = !DILocation(line: 449, column: 46, scope: !10311)
!10315 = !DILocation(line: 450, column: 46, scope: !10311)
!10316 = !DILocation(line: 450, column: 25, scope: !10311)
!10317 = !DILocation(line: 449, column: 13, scope: !10312)
!10318 = !DILocation(line: 448, column: 48, scope: !10306)
!10319 = !DILocation(line: 448, column: 29, scope: !10306)
!10320 = !DILocation(line: 448, column: 31, scope: !10306)
!10321 = distinct !{!10321, !10309, !10322}
!10322 = !DILocation(line: 453, column: 5, scope: !10307)
!10323 = !DILocation(line: 454, column: 27, scope: !10296)
!10324 = !DILocation(line: 454, column: 5, scope: !10296)
!10325 = distinct !DISubprogram(name: "CMEM_BlockSize", scope: !1689, file: !1689, line: 462, type: !3732, scopeLine: 463, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1688, retainedNodes: !10326)
!10326 = !{!10327}
!10327 = !DILocalVariable(name: "address", arg: 1, scope: !10325, file: !1689, line: 462, type: !61)
!10328 = !DILocation(line: 0, scope: !10325)
!10329 = !DILocation(line: 464, column: 45, scope: !10325)
!10330 = !DILocation(line: 464, column: 12, scope: !10325)
!10331 = !DILocation(line: 464, column: 5, scope: !10325)
!10332 = distinct !DISubprogram(name: "EMIINIT_CMEM_BlockSize", scope: !1689, file: !1689, line: 487, type: !3732, scopeLine: 488, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1688, retainedNodes: !10333)
!10333 = !{!10334, !10335, !10336}
!10334 = !DILocalVariable(name: "address", arg: 1, scope: !10332, file: !1689, line: 487, type: !61)
!10335 = !DILocalVariable(name: "index", scope: !10332, file: !1689, line: 490, type: !61)
!10336 = !DILocalVariable(name: "list", scope: !10332, file: !1689, line: 491, type: !2006)
!10337 = !DILocation(line: 0, scope: !10332)
!10338 = !DILocation(line: 490, column: 22, scope: !10332)
!10339 = !DILocation(line: 495, column: 45, scope: !10332)
!10340 = !DILocation(line: 495, column: 12, scope: !10332)
!10341 = !DILocation(line: 495, column: 5, scope: !10332)
!10342 = distinct !DISubprogram(name: "NOR_Get_FlashSizeFromBankInfo", scope: !1689, file: !1689, line: 517, type: !10343, scopeLine: 518, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1688, retainedNodes: !10347)
!10343 = !DISubroutineType(types: !10344)
!10344 = !{!1144, !10345}
!10345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10346, size: 32)
!10346 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1892)
!10347 = !{!10348, !10349, !10350}
!10348 = !DILocalVariable(name: "bankinfo", arg: 1, scope: !10342, file: !1689, line: 517, type: !10345)
!10349 = !DILocalVariable(name: "result", scope: !10342, file: !1689, line: 519, type: !61)
!10350 = !DILocalVariable(name: "i", scope: !10342, file: !1689, line: 519, type: !61)
!10351 = !DILocation(line: 0, scope: !10342)
!10352 = !DILocation(line: 522, column: 29, scope: !10353)
!10353 = distinct !DILexicalBlock(scope: !10354, file: !1689, line: 522, column: 5)
!10354 = distinct !DILexicalBlock(scope: !10342, file: !1689, line: 522, column: 5)
!10355 = !DILocation(line: 522, column: 38, scope: !10353)
!10356 = !DILocation(line: 522, column: 5, scope: !10354)
!10357 = !DILocation(line: 523, column: 31, scope: !10358)
!10358 = distinct !DILexicalBlock(scope: !10353, file: !1689, line: 522, column: 51)
!10359 = !DILocation(line: 523, column: 37, scope: !10358)
!10360 = !DILocation(line: 523, column: 16, scope: !10358)
!10361 = !DILocation(line: 522, column: 45, scope: !10353)
!10362 = distinct !{!10362, !10356, !10363}
!10363 = !DILocation(line: 524, column: 5, scope: !10354)
!10364 = !DILocation(line: 525, column: 5, scope: !10342)
!10365 = distinct !DISubprogram(name: "CMEM_NOR_Construct_RegionInfo_Internal", scope: !1689, file: !1689, line: 535, type: !10366, scopeLine: 540, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1688, retainedNodes: !10368)
!10366 = !DISubroutineType(types: !10367)
!10367 = !{!61, !61, !61, !1704, !1878}
!10368 = !{!10369, !10370, !10371, !10372, !10373, !10374, !10375, !10376, !10377}
!10369 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !10365, file: !1689, line: 536, type: !61)
!10370 = !DILocalVariable(name: "length", arg: 2, scope: !10365, file: !1689, line: 537, type: !61)
!10371 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !10365, file: !1689, line: 538, type: !1704)
!10372 = !DILocalVariable(name: "blocklayout", arg: 4, scope: !10365, file: !1689, line: 539, type: !1878)
!10373 = !DILocalVariable(name: "addr", scope: !10365, file: !1689, line: 541, type: !61)
!10374 = !DILocalVariable(name: "ptr", scope: !10365, file: !1689, line: 541, type: !61)
!10375 = !DILocalVariable(name: "blksize", scope: !10365, file: !1689, line: 541, type: !61)
!10376 = !DILocalVariable(name: "total_blocks", scope: !10365, file: !1689, line: 541, type: !61)
!10377 = !DILocalVariable(name: "endaddr", scope: !10365, file: !1689, line: 542, type: !61)
!10378 = !DILocation(line: 0, scope: !10365)
!10379 = !DILocation(line: 542, column: 33, scope: !10365)
!10380 = !DILocation(line: 557, column: 59, scope: !10381)
!10381 = distinct !DILexicalBlock(scope: !10382, file: !1689, line: 557, column: 5)
!10382 = distinct !DILexicalBlock(scope: !10365, file: !1689, line: 557, column: 5)
!10383 = !DILocation(line: 557, column: 5, scope: !10382)
!10384 = !DILocation(line: 560, column: 19, scope: !10385)
!10385 = distinct !DILexicalBlock(scope: !10381, file: !1689, line: 559, column: 5)
!10386 = !DILocation(line: 562, column: 26, scope: !10387)
!10387 = distinct !DILexicalBlock(scope: !10385, file: !1689, line: 562, column: 13)
!10388 = !DILocation(line: 0, scope: !10387)
!10389 = !DILocation(line: 562, column: 13, scope: !10385)
!10390 = !DILocation(line: 563, column: 39, scope: !10391)
!10391 = distinct !DILexicalBlock(scope: !10387, file: !1689, line: 562, column: 34)
!10392 = !DILocation(line: 564, column: 29, scope: !10391)
!10393 = !DILocation(line: 564, column: 42, scope: !10391)
!10394 = !DILocation(line: 565, column: 9, scope: !10391)
!10395 = !DILocation(line: 567, column: 45, scope: !10396)
!10396 = distinct !DILexicalBlock(scope: !10387, file: !1689, line: 567, column: 18)
!10397 = !DILocation(line: 567, column: 26, scope: !10396)
!10398 = !DILocation(line: 567, column: 18, scope: !10387)
!10399 = !DILocation(line: 568, column: 29, scope: !10400)
!10400 = distinct !DILexicalBlock(scope: !10396, file: !1689, line: 567, column: 59)
!10401 = !DILocation(line: 568, column: 41, scope: !10400)
!10402 = !DILocation(line: 569, column: 9, scope: !10400)
!10403 = !DILocation(line: 572, column: 16, scope: !10404)
!10404 = distinct !DILexicalBlock(scope: !10396, file: !1689, line: 571, column: 14)
!10405 = !DILocation(line: 573, column: 21, scope: !10406)
!10406 = distinct !DILexicalBlock(scope: !10404, file: !1689, line: 573, column: 17)
!10407 = !DILocation(line: 573, column: 17, scope: !10404)
!10408 = !DILocation(line: 576, column: 29, scope: !10404)
!10409 = !DILocation(line: 576, column: 39, scope: !10404)
!10410 = !DILocation(line: 577, column: 29, scope: !10404)
!10411 = !DILocation(line: 577, column: 42, scope: !10404)
!10412 = !DILocation(line: 0, scope: !10382)
!10413 = !DILocation(line: 579, column: 14, scope: !10385)
!10414 = !DILocation(line: 580, column: 21, scope: !10385)
!10415 = distinct !{!10415, !10383, !10416}
!10416 = !DILocation(line: 581, column: 5, scope: !10382)
!10417 = !DILocation(line: 586, column: 1, scope: !10365)
!10418 = distinct !DISubprogram(name: "NOR_Construct_RegionInfo", scope: !1689, file: !1689, line: 593, type: !10419, scopeLine: 594, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1688, retainedNodes: !10421)
!10419 = !DISubroutineType(types: !10420)
!10420 = !{!1144, !61, !61, !1704}
!10421 = !{!10422, !10423, !10424}
!10422 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !10418, file: !1689, line: 593, type: !61)
!10423 = !DILocalVariable(name: "length", arg: 2, scope: !10418, file: !1689, line: 593, type: !61)
!10424 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !10418, file: !1689, line: 593, type: !1704)
!10425 = !DILocation(line: 0, scope: !10418)
!10426 = !DILocation(line: 595, column: 12, scope: !10418)
!10427 = !DILocation(line: 595, column: 5, scope: !10418)
!10428 = !DILocation(line: 597, column: 81, scope: !10418)
!10429 = !DILocation(line: 597, column: 12, scope: !10418)
!10430 = !DILocation(line: 597, column: 5, scope: !10418)
!10431 = distinct !DISubprogram(name: "NOR_Construct_DualRegionInfo", scope: !1689, file: !1689, line: 606, type: !10419, scopeLine: 607, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1688, retainedNodes: !10432)
!10432 = !{!10433, !10434, !10435}
!10433 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !10431, file: !1689, line: 606, type: !61)
!10434 = !DILocalVariable(name: "length", arg: 2, scope: !10431, file: !1689, line: 606, type: !61)
!10435 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !10431, file: !1689, line: 606, type: !1704)
!10436 = !DILocation(line: 0, scope: !10431)
!10437 = !DILocation(line: 624, column: 5, scope: !10431)
!10438 = distinct !DISubprogram(name: "EMIINIT_CMEM_NOR_Construct_RegionInfo", scope: !1689, file: !1689, line: 637, type: !10419, scopeLine: 638, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1688, retainedNodes: !10439)
!10439 = !{!10440, !10441, !10442, !10443, !10444}
!10440 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !10438, file: !1689, line: 637, type: !61)
!10441 = !DILocalVariable(name: "length", arg: 2, scope: !10438, file: !1689, line: 637, type: !61)
!10442 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !10438, file: !1689, line: 637, type: !1704)
!10443 = !DILocalVariable(name: "index", scope: !10438, file: !1689, line: 642, type: !61)
!10444 = !DILocalVariable(name: "list", scope: !10438, file: !1689, line: 644, type: !2006)
!10445 = !DILocation(line: 0, scope: !10438)
!10446 = !DILocation(line: 642, column: 22, scope: !10438)
!10447 = !DILocation(line: 648, column: 81, scope: !10438)
!10448 = !DILocation(line: 648, column: 12, scope: !10438)
!10449 = !DILocation(line: 648, column: 5, scope: !10438)
!10450 = distinct !DISubprogram(name: "EMIINIT_CMEM_NOR_Construct_DualRegionInfo", scope: !1689, file: !1689, line: 658, type: !10419, scopeLine: 659, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1688, retainedNodes: !10451)
!10451 = !{!10452, !10453, !10454}
!10452 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !10450, file: !1689, line: 658, type: !61)
!10453 = !DILocalVariable(name: "length", arg: 2, scope: !10450, file: !1689, line: 658, type: !61)
!10454 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !10450, file: !1689, line: 658, type: !1704)
!10455 = !DILocation(line: 0, scope: !10450)
!10456 = !DILocation(line: 688, column: 5, scope: !10450)
!10457 = distinct !DISubprogram(name: "EMIINIT_CMEM_NOR_GetUniformBlock", scope: !1689, file: !1689, line: 700, type: !7804, scopeLine: 701, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1688, retainedNodes: !10458)
!10458 = !{!10459, !10460, !10461}
!10459 = !DILocalVariable(name: "CS", arg: 1, scope: !10457, file: !1689, line: 700, type: !7737)
!10460 = !DILocalVariable(name: "index", scope: !10457, file: !1689, line: 705, type: !61)
!10461 = !DILocalVariable(name: "list", scope: !10457, file: !1689, line: 707, type: !2006)
!10462 = !DILocation(line: 0, scope: !10457)
!10463 = !DILocation(line: 705, column: 22, scope: !10457)
!10464 = !DILocation(line: 711, column: 24, scope: !10457)
!10465 = !DILocation(line: 711, column: 5, scope: !10457)
!10466 = distinct !DISubprogram(name: "CMEM_NOR_AddBankInfo", scope: !1689, file: !1689, line: 721, type: !10467, scopeLine: 722, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1688, retainedNodes: !10469)
!10467 = !DISubroutineType(types: !10468)
!10468 = !{null, !1924, !1204, !61}
!10469 = !{!10470, !10471, !10472}
!10470 = !DILocalVariable(name: "bankInfo", arg: 1, scope: !10466, file: !1689, line: 721, type: !1924)
!10471 = !DILocalVariable(name: "index", arg: 2, scope: !10466, file: !1689, line: 721, type: !1204)
!10472 = !DILocalVariable(name: "bankSize", arg: 3, scope: !10466, file: !1689, line: 721, type: !61)
!10473 = !DILocation(line: 0, scope: !10466)
!10474 = !DILocation(line: 723, column: 18, scope: !10475)
!10475 = distinct !DILexicalBlock(scope: !10466, file: !1689, line: 723, column: 9)
!10476 = !DILocation(line: 723, column: 26, scope: !10475)
!10477 = !DILocation(line: 723, column: 35, scope: !10475)
!10478 = !DILocation(line: 723, column: 9, scope: !10466)
!10479 = !DILocation(line: 724, column: 26, scope: !10480)
!10480 = distinct !DILexicalBlock(scope: !10475, file: !1689, line: 723, column: 48)
!10481 = !DILocation(line: 724, column: 32, scope: !10480)
!10482 = !DILocation(line: 725, column: 5, scope: !10480)
!10483 = !DILocation(line: 726, column: 18, scope: !10484)
!10484 = distinct !DILexicalBlock(scope: !10475, file: !1689, line: 725, column: 12)
!10485 = !DILocation(line: 727, column: 26, scope: !10484)
!10486 = !DILocation(line: 727, column: 32, scope: !10484)
!10487 = !DILocation(line: 728, column: 18, scope: !10484)
!10488 = !DILocation(line: 728, column: 26, scope: !10484)
!10489 = !DILocation(line: 728, column: 35, scope: !10484)
!10490 = !DILocation(line: 731, column: 1, scope: !10466)
!10491 = distinct !DISubprogram(name: "CMEM_NOR_Construct_BankInfo", scope: !1689, file: !1689, line: 739, type: !10492, scopeLine: 744, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1688, retainedNodes: !10494)
!10492 = !DISubroutineType(types: !10493)
!10493 = !{!61, !61, !61, !1924, !10345}
!10494 = !{!10495, !10496, !10497, !10498, !10499, !10500, !10501, !10502, !10503}
!10495 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !10491, file: !1689, line: 740, type: !61)
!10496 = !DILocalVariable(name: "length", arg: 2, scope: !10491, file: !1689, line: 741, type: !61)
!10497 = !DILocalVariable(name: "bankInfo", arg: 3, scope: !10491, file: !1689, line: 742, type: !1924)
!10498 = !DILocalVariable(name: "cmemBankInfo", arg: 4, scope: !10491, file: !1689, line: 743, type: !10345)
!10499 = !DILocalVariable(name: "Partition", scope: !10491, file: !1689, line: 745, type: !61)
!10500 = !DILocalVariable(name: "Index", scope: !10491, file: !1689, line: 746, type: !1144)
!10501 = !DILocalVariable(name: "bankSize", scope: !10491, file: !1689, line: 747, type: !61)
!10502 = !DILocalVariable(name: "NextBankAddr", scope: !10491, file: !1689, line: 748, type: !61)
!10503 = !DILocalVariable(name: "srcBankIdx", scope: !10491, file: !1689, line: 748, type: !61)
!10504 = !DILocation(line: 0, scope: !10491)
!10505 = !DILocation(line: 750, column: 12, scope: !10491)
!10506 = !DILocation(line: 750, column: 5, scope: !10491)
!10507 = !DILocation(line: 752, column: 51, scope: !10508)
!10508 = distinct !DILexicalBlock(scope: !10509, file: !1689, line: 752, column: 5)
!10509 = distinct !DILexicalBlock(scope: !10491, file: !1689, line: 752, column: 5)
!10510 = !DILocation(line: 752, column: 5, scope: !10509)
!10511 = !DILocation(line: 753, column: 51, scope: !10512)
!10512 = distinct !DILexicalBlock(scope: !10513, file: !1689, line: 753, column: 13)
!10513 = distinct !DILexicalBlock(scope: !10508, file: !1689, line: 752, column: 70)
!10514 = !DILocation(line: 753, column: 24, scope: !10512)
!10515 = !DILocation(line: 753, column: 13, scope: !10513)
!10516 = !DILocation(line: 758, column: 49, scope: !10513)
!10517 = !DILocation(line: 758, column: 22, scope: !10513)
!10518 = !DILocation(line: 760, column: 22, scope: !10519)
!10519 = distinct !DILexicalBlock(scope: !10513, file: !1689, line: 760, column: 13)
!10520 = !DILocation(line: 760, column: 13, scope: !10513)
!10521 = !DILocation(line: 761, column: 37, scope: !10522)
!10522 = distinct !DILexicalBlock(scope: !10519, file: !1689, line: 760, column: 39)
!10523 = !DILocation(line: 762, column: 24, scope: !10524)
!10524 = distinct !DILexicalBlock(scope: !10522, file: !1689, line: 762, column: 17)
!10525 = !DILocation(line: 762, column: 17, scope: !10522)
!10526 = !DILocation(line: 767, column: 33, scope: !10527)
!10527 = distinct !DILexicalBlock(scope: !10522, file: !1689, line: 767, column: 17)
!10528 = !DILocation(line: 767, column: 42, scope: !10527)
!10529 = !DILocation(line: 767, column: 17, scope: !10522)
!10530 = !DILocation(line: 768, column: 33, scope: !10531)
!10531 = distinct !DILexicalBlock(scope: !10527, file: !1689, line: 767, column: 55)
!10532 = !DILocation(line: 768, column: 39, scope: !10531)
!10533 = !DILocation(line: 769, column: 13, scope: !10531)
!10534 = !DILocation(line: 770, column: 46, scope: !10535)
!10535 = distinct !DILexicalBlock(scope: !10536, file: !1689, line: 770, column: 21)
!10536 = distinct !DILexicalBlock(scope: !10527, file: !1689, line: 769, column: 20)
!10537 = !DILocation(line: 770, column: 21, scope: !10536)
!10538 = !DILocation(line: 773, column: 33, scope: !10536)
!10539 = !DILocation(line: 773, column: 39, scope: !10536)
!10540 = !DILocation(line: 774, column: 33, scope: !10536)
!10541 = !DILocation(line: 774, column: 42, scope: !10536)
!10542 = !DILocation(line: 777, column: 22, scope: !10522)
!10543 = !DILocation(line: 778, column: 20, scope: !10522)
!10544 = !DILocation(line: 779, column: 9, scope: !10522)
!10545 = !DILocation(line: 746, column: 13, scope: !10491)
!10546 = !DILocation(line: 752, column: 66, scope: !10508)
!10547 = distinct !{!10547, !10510, !10548}
!10548 = !DILocation(line: 781, column: 5, scope: !10509)
!10549 = !DILocation(line: 784, column: 5, scope: !10491)
!10550 = distinct !DISubprogram(name: "CMEM_Init_NOR", scope: !1689, file: !1689, line: 796, type: !8370, scopeLine: 797, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1688, retainedNodes: !10551)
!10551 = !{!10552, !10553}
!10552 = !DILocalVariable(name: "result", scope: !10550, file: !1689, line: 798, type: !1144)
!10553 = !DILocalVariable(name: "i", scope: !10550, file: !1689, line: 799, type: !1144)
!10554 = !DILocation(line: 803, column: 19, scope: !10550)
!10555 = !DILocation(line: 803, column: 28, scope: !10550)
!10556 = !DILocation(line: 803, column: 17, scope: !10550)
!10557 = !DILocation(line: 822, column: 33, scope: !10550)
!10558 = !DILocation(line: 822, column: 56, scope: !10550)
!10559 = !DILocation(line: 822, column: 88, scope: !10550)
!10560 = !DILocation(line: 822, column: 97, scope: !10550)
!10561 = !DILocation(line: 822, column: 5, scope: !10550)
!10562 = !DILocation(line: 829, column: 39, scope: !10550)
!10563 = !DILocation(line: 829, column: 62, scope: !10550)
!10564 = !DILocation(line: 829, column: 14, scope: !10550)
!10565 = !DILocation(line: 0, scope: !10550)
!10566 = !DILocation(line: 834, column: 16, scope: !10567)
!10567 = distinct !DILexicalBlock(scope: !10550, file: !1689, line: 834, column: 9)
!10568 = !DILocation(line: 834, column: 9, scope: !10550)
!10569 = !DILocation(line: 838, column: 30, scope: !10570)
!10570 = distinct !DILexicalBlock(scope: !10550, file: !1689, line: 838, column: 5)
!10571 = !DILocation(line: 838, column: 58, scope: !10570)
!10572 = !DILocation(line: 838, column: 78, scope: !10573)
!10573 = distinct !DILexicalBlock(scope: !10570, file: !1689, line: 838, column: 5)
!10574 = !DILocation(line: 838, column: 88, scope: !10573)
!10575 = !DILocation(line: 838, column: 5, scope: !10570)
!10576 = !DILocation(line: 839, column: 39, scope: !10577)
!10577 = distinct !DILexicalBlock(scope: !10573, file: !1689, line: 838, column: 102)
!10578 = !DILocation(line: 839, column: 22, scope: !10577)
!10579 = !DILocation(line: 840, column: 37, scope: !10580)
!10580 = distinct !DILexicalBlock(scope: !10577, file: !1689, line: 840, column: 13)
!10581 = !DILocation(line: 840, column: 13, scope: !10577)
!10582 = !DILocation(line: 841, column: 36, scope: !10583)
!10583 = distinct !DILexicalBlock(scope: !10580, file: !1689, line: 840, column: 63)
!10584 = !DILocation(line: 842, column: 9, scope: !10583)
!10585 = !DILocation(line: 838, column: 95, scope: !10573)
!10586 = distinct !{!10586, !10575, !10587}
!10587 = !DILocation(line: 843, column: 5, scope: !10570)
!10588 = !DILocation(line: 871, column: 49, scope: !10550)
!10589 = !DILocation(line: 871, column: 72, scope: !10550)
!10590 = !DILocation(line: 871, column: 47, scope: !10550)
!10591 = !DILocation(line: 871, column: 97, scope: !10550)
!10592 = !DILocation(line: 871, column: 19, scope: !10550)
!10593 = !DILocation(line: 882, column: 14, scope: !10550)
!10594 = !DILocation(line: 887, column: 13, scope: !10550)
!10595 = !DILocation(line: 887, column: 22, scope: !10550)
!10596 = !DILocation(line: 887, column: 5, scope: !10550)
!10597 = !DILocation(line: 889, column: 22, scope: !10598)
!10598 = distinct !DILexicalBlock(scope: !10550, file: !1689, line: 887, column: 34)
!10599 = !DILocation(line: 890, column: 13, scope: !10598)
!10600 = !DILocation(line: 902, column: 1, scope: !10550)
!10601 = distinct !DISubprogram(name: "CMEM_Init_nor_list", scope: !1689, file: !1689, line: 912, type: !10602, scopeLine: 913, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1688, retainedNodes: !10604)
!10602 = !DISubroutineType(types: !10603)
!10603 = !{null, !979}
!10604 = !{!10605}
!10605 = !DILocalVariable(name: "CS", arg: 1, scope: !10601, file: !1689, line: 912, type: !979)
!10606 = !DILocation(line: 0, scope: !10601)
!10607 = !DILocation(line: 914, column: 12, scope: !10608)
!10608 = distinct !DILexicalBlock(scope: !10601, file: !1689, line: 914, column: 9)
!10609 = !DILocation(line: 914, column: 9, scope: !10601)
!10610 = !DILocation(line: 918, column: 26, scope: !10611)
!10611 = distinct !DILexicalBlock(scope: !10608, file: !1689, line: 914, column: 18)
!10612 = !DILocation(line: 918, column: 24, scope: !10611)
!10613 = !DILocation(line: 920, column: 28, scope: !10614)
!10614 = distinct !DILexicalBlock(scope: !10611, file: !1689, line: 920, column: 13)
!10615 = !DILocation(line: 920, column: 13, scope: !10611)
!10616 = !DILocation(line: 921, column: 13, scope: !10617)
!10617 = distinct !DILexicalBlock(scope: !10618, file: !1689, line: 921, column: 13)
!10618 = distinct !DILexicalBlock(scope: !10619, file: !1689, line: 921, column: 13)
!10619 = distinct !DILexicalBlock(scope: !10620, file: !1689, line: 921, column: 13)
!10620 = distinct !DILexicalBlock(scope: !10614, file: !1689, line: 920, column: 33)
!10621 = !DILocation(line: 923, column: 19, scope: !10611)
!10622 = !DILocation(line: 923, column: 17, scope: !10611)
!10623 = !DILocation(line: 924, column: 5, scope: !10611)
!10624 = !DILocation(line: 935, column: 14, scope: !10601)
!10625 = !DILocation(line: 936, column: 1, scope: !10601)
!10626 = distinct !DISubprogram(name: "ComboMem_Initialize", scope: !1689, file: !1689, line: 952, type: !8370, scopeLine: 953, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1688, retainedNodes: !293)
!10627 = !DILocation(line: 955, column: 5, scope: !10626)
!10628 = !DILocation(line: 956, column: 12, scope: !10626)
!10629 = !DILocation(line: 956, column: 5, scope: !10626)
!10630 = distinct !DISubprogram(name: "CMEM_Init_FullDriver", scope: !1689, file: !1689, line: 974, type: !8370, scopeLine: 975, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1688, retainedNodes: !10631)
!10631 = !{!10632}
!10632 = !DILocalVariable(name: "result", scope: !10630, file: !1689, line: 976, type: !1144)
!10633 = !DILocation(line: 981, column: 5, scope: !10630)
!10634 = !DILocation(line: 986, column: 24, scope: !10630)
!10635 = !DILocation(line: 986, column: 33, scope: !10630)
!10636 = !DILocation(line: 986, column: 49, scope: !10630)
!10637 = !DILocation(line: 986, column: 22, scope: !10630)
!10638 = !DILocation(line: 1002, column: 19, scope: !10630)
!10639 = !DILocation(line: 1002, column: 17, scope: !10630)
!10640 = !DILocation(line: 1014, column: 22, scope: !10630)
!10641 = !DILocation(line: 1014, column: 5, scope: !10630)
!10642 = !DILocation(line: 1024, column: 33, scope: !10630)
!10643 = !DILocation(line: 1026, column: 27, scope: !10630)
!10644 = !DILocation(line: 1027, column: 26, scope: !10630)
!10645 = !DILocation(line: 1042, column: 33, scope: !10630)
!10646 = !DILocation(line: 1044, column: 32, scope: !10630)
!10647 = !DILocation(line: 1052, column: 18, scope: !10630)
!10648 = !DILocation(line: 1052, column: 27, scope: !10630)
!10649 = !DILocation(line: 1052, column: 43, scope: !10630)
!10650 = !DILocation(line: 1048, column: 14, scope: !10630)
!10651 = !DILocation(line: 0, scope: !10630)
!10652 = !DILocation(line: 1063, column: 5, scope: !10653)
!10653 = distinct !DILexicalBlock(scope: !10654, file: !1689, line: 1063, column: 5)
!10654 = distinct !DILexicalBlock(scope: !10630, file: !1689, line: 1063, column: 5)
!10655 = !DILocation(line: 1063, column: 5, scope: !10654)
!10656 = !DILocation(line: 1063, column: 5, scope: !10657)
!10657 = distinct !DILexicalBlock(scope: !10653, file: !1689, line: 1063, column: 5)
!10658 = !DILocation(line: 1096, column: 36, scope: !10630)
!10659 = !DILocation(line: 1096, column: 34, scope: !10630)
!10660 = !DILocation(line: 1101, column: 5, scope: !10630)
!10661 = !DILocation(line: 1103, column: 34, scope: !10630)
!10662 = !DILocation(line: 1109, column: 35, scope: !10630)
!10663 = !DILocation(line: 1110, column: 33, scope: !10630)
!10664 = !DILocation(line: 1111, column: 34, scope: !10630)
!10665 = !DILocation(line: 1113, column: 5, scope: !10630)
!10666 = distinct !DISubprogram(name: "CreateFDMLock", scope: !2047, file: !2047, line: 84, type: !291, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2046, retainedNodes: !293)
!10667 = !DILocation(line: 86, column: 1, scope: !10666)
!10668 = distinct !DISubprogram(name: "GetFDMLock", scope: !2047, file: !2047, line: 87, type: !8836, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2046, retainedNodes: !10669)
!10669 = !{!10670}
!10670 = !DILocalVariable(name: "savedMask", scope: !10668, file: !2047, line: 89, type: !1144)
!10671 = !DILocation(line: 90, column: 17, scope: !10668)
!10672 = !DILocation(line: 0, scope: !10668)
!10673 = !DILocation(line: 91, column: 9, scope: !10674)
!10674 = distinct !DILexicalBlock(scope: !10668, file: !2047, line: 91, column: 9)
!10675 = !DILocation(line: 91, column: 9, scope: !10668)
!10676 = !DILocation(line: 92, column: 17, scope: !10677)
!10677 = distinct !DILexicalBlock(scope: !10674, file: !2047, line: 91, column: 24)
!10678 = !DILocation(line: 94, column: 9, scope: !10677)
!10679 = !DILocation(line: 0, scope: !10674)
!10680 = !DILocation(line: 102, column: 1, scope: !10668)
!10681 = distinct !DISubprogram(name: "FreeFDMLock", scope: !2047, file: !2047, line: 103, type: !291, scopeLine: 104, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2046, retainedNodes: !10682)
!10682 = !{!10683}
!10683 = !DILocalVariable(name: "savedMask", scope: !10681, file: !2047, line: 105, type: !1144)
!10684 = !DILocation(line: 106, column: 17, scope: !10681)
!10685 = !DILocation(line: 0, scope: !10681)
!10686 = !DILocation(line: 107, column: 9, scope: !10687)
!10687 = distinct !DILexicalBlock(scope: !10681, file: !2047, line: 107, column: 9)
!10688 = !DILocation(line: 107, column: 9, scope: !10681)
!10689 = !DILocation(line: 108, column: 17, scope: !10690)
!10690 = distinct !DILexicalBlock(scope: !10687, file: !2047, line: 107, column: 24)
!10691 = !DILocation(line: 109, column: 9, scope: !10690)
!10692 = !DILocation(line: 114, column: 1, scope: !10681)
!10693 = !DILocation(line: 111, column: 9, scope: !10694)
!10694 = distinct !DILexicalBlock(scope: !10687, file: !2047, line: 110, column: 12)
!10695 = !DILocation(line: 112, column: 9, scope: !10696)
!10696 = distinct !DILexicalBlock(scope: !10697, file: !2047, line: 112, column: 9)
!10697 = distinct !DILexicalBlock(scope: !10698, file: !2047, line: 112, column: 9)
!10698 = distinct !DILexicalBlock(scope: !10694, file: !2047, line: 112, column: 9)
!10699 = distinct !DISubprogram(name: "create_FDM_lock", scope: !2047, file: !2047, line: 119, type: !291, scopeLine: 120, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2046, retainedNodes: !293)
!10700 = !DILocation(line: 123, column: 1, scope: !10699)
!10701 = distinct !DISubprogram(name: "retrieve_FDM_lock", scope: !2047, file: !2047, line: 130, type: !291, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2046, retainedNodes: !10702)
!10702 = !{!10703}
!10703 = !DILocalVariable(name: "Result", scope: !10701, file: !2047, line: 132, type: !2103)
!10704 = !DILocation(line: 133, column: 5, scope: !10701)
!10705 = !DILocation(line: 134, column: 18, scope: !10706)
!10706 = distinct !DILexicalBlock(scope: !10701, file: !2047, line: 133, column: 8)
!10707 = !DILocation(line: 0, scope: !10701)
!10708 = !DILocation(line: 135, column: 21, scope: !10701)
!10709 = !DILocation(line: 135, column: 5, scope: !10706)
!10710 = distinct !{!10710, !10704, !10711}
!10711 = !DILocation(line: 135, column: 43, scope: !10701)
!10712 = !DILocation(line: 136, column: 1, scope: !10701)
!10713 = distinct !DISubprogram(name: "release_FDM_lock", scope: !2047, file: !2047, line: 143, type: !291, scopeLine: 144, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2046, retainedNodes: !293)
!10714 = !DILocation(line: 147, column: 5, scope: !10713)
!10715 = !DILocation(line: 148, column: 1, scope: !10713)
!10716 = distinct !DISubprogram(name: "readRawDiskData", scope: !2047, file: !2047, line: 216, type: !10717, scopeLine: 217, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2046, retainedNodes: !10758)
!10717 = !DISubroutineType(types: !10718)
!10718 = !{!1144, !10719, !61, !969, !61}
!10719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10720, size: 32)
!10720 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_FLASH_DISK_Data", file: !1994, line: 93, baseType: !10721)
!10721 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1994, line: 83, size: 1056, elements: !10722)
!10722 = !{!10723, !10724, !10744, !10745, !10757}
!10723 = !DIDerivedType(tag: DW_TAG_member, name: "DiskSize", scope: !10721, file: !1994, line: 84, baseType: !61, size: 32)
!10724 = !DIDerivedType(tag: DW_TAG_member, name: "MTDDriver", scope: !10721, file: !1994, line: 85, baseType: !10725, size: 32, offset: 32)
!10725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10726, size: 32)
!10726 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_Driver", file: !1462, line: 121, baseType: !10727)
!10727 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1462, line: 105, size: 480, elements: !10728)
!10728 = !{!10729, !10730, !10731, !10732, !10733, !10734, !10735, !10736, !10737, !10738, !10739, !10740, !10741, !10742, !10743}
!10729 = !DIDerivedType(tag: DW_TAG_member, name: "MountDevice", scope: !10727, file: !1462, line: 106, baseType: !1735, size: 32)
!10730 = !DIDerivedType(tag: DW_TAG_member, name: "ShutDown", scope: !10727, file: !1462, line: 107, baseType: !1537, size: 32, offset: 32)
!10731 = !DIDerivedType(tag: DW_TAG_member, name: "MapWindow", scope: !10727, file: !1462, line: 108, baseType: !1740, size: 32, offset: 64)
!10732 = !DIDerivedType(tag: DW_TAG_member, name: "EraseBlock", scope: !10727, file: !1462, line: 109, baseType: !1744, size: 32, offset: 96)
!10733 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramData", scope: !10727, file: !1462, line: 110, baseType: !1748, size: 32, offset: 128)
!10734 = !DIDerivedType(tag: DW_TAG_member, name: "NonBlockEraseBlock", scope: !10727, file: !1462, line: 111, baseType: !1744, size: 32, offset: 160)
!10735 = !DIDerivedType(tag: DW_TAG_member, name: "CheckDeviceReady", scope: !10727, file: !1462, line: 112, baseType: !1753, size: 32, offset: 192)
!10736 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendErase", scope: !10727, file: !1462, line: 113, baseType: !1744, size: 32, offset: 224)
!10737 = !DIDerivedType(tag: DW_TAG_member, name: "ResumeErase", scope: !10727, file: !1462, line: 114, baseType: !1744, size: 32, offset: 256)
!10738 = !DIDerivedType(tag: DW_TAG_member, name: "BlankCheck", scope: !10727, file: !1462, line: 115, baseType: !1744, size: 32, offset: 288)
!10739 = !DIDerivedType(tag: DW_TAG_member, name: "OTPAccess", scope: !10727, file: !1462, line: 116, baseType: !1760, size: 32, offset: 320)
!10740 = !DIDerivedType(tag: DW_TAG_member, name: "OTPQueryLength", scope: !10727, file: !1462, line: 117, baseType: !1765, size: 32, offset: 352)
!10741 = !DIDerivedType(tag: DW_TAG_member, name: "LockEraseBlkAddr", scope: !10727, file: !1462, line: 118, baseType: !1770, size: 32, offset: 384)
!10742 = !DIDerivedType(tag: DW_TAG_member, name: "IsEraseSuspended", scope: !10727, file: !1462, line: 119, baseType: !1774, size: 32, offset: 416)
!10743 = !DIDerivedType(tag: DW_TAG_member, name: "IOCtrl", scope: !10727, file: !1462, line: 120, baseType: !1778, size: 32, offset: 448)
!10744 = !DIDerivedType(tag: DW_TAG_member, name: "MTDData", scope: !10721, file: !1994, line: 86, baseType: !88, size: 32, offset: 64)
!10745 = !DIDerivedType(tag: DW_TAG_member, name: "FlashInfo", scope: !10721, file: !1994, line: 87, baseType: !10746, size: 928, offset: 96)
!10746 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_FlashInfo", file: !1462, line: 99, baseType: !10747)
!10747 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1462, line: 90, size: 928, elements: !10748)
!10748 = !{!10749, !10750, !10751, !10752, !10753, !10754, !10755, !10756}
!10749 = !DIDerivedType(tag: DW_TAG_member, name: "TotalBlocks", scope: !10747, file: !1462, line: 91, baseType: !61, size: 32)
!10750 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !10747, file: !1462, line: 92, baseType: !1792, size: 256, offset: 32)
!10751 = !DIDerivedType(tag: DW_TAG_member, name: "AvailInRegion", scope: !10747, file: !1462, line: 93, baseType: !1792, size: 256, offset: 288)
!10752 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !10747, file: !1462, line: 94, baseType: !1792, size: 256, offset: 544)
!10753 = !DIDerivedType(tag: DW_TAG_member, name: "ActualRegionNum", scope: !10747, file: !1462, line: 95, baseType: !61, size: 32, offset: 800)
!10754 = !DIDerivedType(tag: DW_TAG_member, name: "PageSize", scope: !10747, file: !1462, line: 96, baseType: !1784, size: 16, offset: 832)
!10755 = !DIDerivedType(tag: DW_TAG_member, name: "baseUnlockBlock", scope: !10747, file: !1462, line: 97, baseType: !61, size: 32, offset: 864)
!10756 = !DIDerivedType(tag: DW_TAG_member, name: "endUnlockBlock", scope: !10747, file: !1462, line: 98, baseType: !61, size: 32, offset: 896)
!10757 = !DIDerivedType(tag: DW_TAG_member, name: "is_mount", scope: !10721, file: !1994, line: 92, baseType: !91, size: 8, offset: 1024)
!10758 = !{!10759, !10760, !10761, !10762, !10763, !10764}
!10759 = !DILocalVariable(name: "D", arg: 1, scope: !10716, file: !2047, line: 216, type: !10719)
!10760 = !DILocalVariable(name: "addr", arg: 2, scope: !10716, file: !2047, line: 216, type: !61)
!10761 = !DILocalVariable(name: "data_ptr", arg: 3, scope: !10716, file: !2047, line: 216, type: !969)
!10762 = !DILocalVariable(name: "len", arg: 4, scope: !10716, file: !2047, line: 216, type: !61)
!10763 = !DILocalVariable(name: "phyAddr", scope: !10716, file: !2047, line: 219, type: !61)
!10764 = !DILocalVariable(name: "diskSize", scope: !10716, file: !2047, line: 220, type: !61)
!10765 = !DILocation(line: 0, scope: !10716)
!10766 = !DILocation(line: 220, column: 28, scope: !10716)
!10767 = !DILocation(line: 222, column: 14, scope: !10768)
!10768 = distinct !DILexicalBlock(scope: !10716, file: !2047, line: 222, column: 9)
!10769 = !DILocation(line: 222, column: 26, scope: !10768)
!10770 = !DILocation(line: 225, column: 51, scope: !10716)
!10771 = !DILocation(line: 225, column: 61, scope: !10716)
!10772 = !DILocation(line: 225, column: 15, scope: !10716)
!10773 = !DILocation(line: 225, column: 70, scope: !10716)
!10774 = !DILocation(line: 227, column: 13, scope: !10775)
!10775 = distinct !DILexicalBlock(scope: !10716, file: !2047, line: 227, column: 9)
!10776 = !DILocation(line: 227, column: 9, scope: !10716)
!10777 = !DILocation(line: 228, column: 9, scope: !10778)
!10778 = distinct !DILexicalBlock(scope: !10775, file: !2047, line: 227, column: 23)
!10779 = !DILocation(line: 229, column: 5, scope: !10778)
!10780 = !DILocation(line: 231, column: 5, scope: !10716)
!10781 = !DILocation(line: 233, column: 22, scope: !10716)
!10782 = !DILocation(line: 233, column: 5, scope: !10716)
!10783 = !DILocation(line: 235, column: 5, scope: !10716)
!10784 = !DILocation(line: 237, column: 5, scope: !10716)
!10785 = !DILocation(line: 238, column: 1, scope: !10716)
!10786 = distinct !DISubprogram(name: "MountDevice", scope: !2047, file: !2047, line: 165, type: !10787, scopeLine: 166, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2046, retainedNodes: !10789)
!10787 = !DISubroutineType(types: !10788)
!10788 = !{null, !10719}
!10789 = !{!10790, !10791}
!10790 = !DILocalVariable(name: "D", arg: 1, scope: !10786, file: !2047, line: 165, type: !10719)
!10791 = !DILocalVariable(name: "Result", scope: !10786, file: !2047, line: 167, type: !1144)
!10792 = !DILocation(line: 0, scope: !10786)
!10793 = !DILocation(line: 171, column: 12, scope: !10794)
!10794 = distinct !DILexicalBlock(scope: !10786, file: !2047, line: 171, column: 9)
!10795 = !DILocation(line: 171, column: 9, scope: !10786)
!10796 = !DILocation(line: 176, column: 5, scope: !10786)
!10797 = !DILocation(line: 186, column: 17, scope: !10786)
!10798 = !DILocation(line: 186, column: 28, scope: !10786)
!10799 = !DILocation(line: 186, column: 43, scope: !10786)
!10800 = !DILocation(line: 186, column: 64, scope: !10786)
!10801 = !DILocation(line: 186, column: 52, scope: !10786)
!10802 = !DILocation(line: 186, column: 14, scope: !10786)
!10803 = !DILocation(line: 188, column: 5, scope: !10786)
!10804 = !DILocation(line: 190, column: 16, scope: !10805)
!10805 = distinct !DILexicalBlock(scope: !10786, file: !2047, line: 190, column: 9)
!10806 = !DILocation(line: 190, column: 9, scope: !10786)
!10807 = !DILocation(line: 191, column: 9, scope: !10808)
!10808 = distinct !DILexicalBlock(scope: !10809, file: !2047, line: 191, column: 9)
!10809 = distinct !DILexicalBlock(scope: !10810, file: !2047, line: 191, column: 9)
!10810 = distinct !DILexicalBlock(scope: !10811, file: !2047, line: 191, column: 9)
!10811 = distinct !DILexicalBlock(scope: !10805, file: !2047, line: 190, column: 31)
!10812 = !DILocation(line: 194, column: 17, scope: !10786)
!10813 = !DILocation(line: 195, column: 1, scope: !10786)
!10814 = distinct !DISubprogram(name: "writeRawDiskData", scope: !2047, file: !2047, line: 277, type: !10717, scopeLine: 278, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2046, retainedNodes: !10815)
!10815 = !{!10816, !10817, !10818, !10819, !10820, !10821, !10822, !10823, !10824, !10825, !10829, !10830, !10831, !10836}
!10816 = !DILocalVariable(name: "D", arg: 1, scope: !10814, file: !2047, line: 277, type: !10719)
!10817 = !DILocalVariable(name: "addr", arg: 2, scope: !10814, file: !2047, line: 277, type: !61)
!10818 = !DILocalVariable(name: "data_ptr", arg: 3, scope: !10814, file: !2047, line: 277, type: !969)
!10819 = !DILocalVariable(name: "len", arg: 4, scope: !10814, file: !2047, line: 277, type: !61)
!10820 = !DILocalVariable(name: "dest", scope: !10814, file: !2047, line: 279, type: !61)
!10821 = !DILocalVariable(name: "src", scope: !10814, file: !2047, line: 279, type: !61)
!10822 = !DILocalVariable(name: "diskSize", scope: !10814, file: !2047, line: 280, type: !61)
!10823 = !DILocalVariable(name: "result", scope: !10814, file: !2047, line: 281, type: !1144)
!10824 = !DILocalVariable(name: "DoneLength", scope: !10814, file: !2047, line: 282, type: !61)
!10825 = !DILocalVariable(name: "blockSize", scope: !10826, file: !2047, line: 313, type: !61)
!10826 = distinct !DILexicalBlock(scope: !10827, file: !2047, line: 312, column: 14)
!10827 = distinct !DILexicalBlock(scope: !10828, file: !2047, line: 305, column: 13)
!10828 = distinct !DILexicalBlock(scope: !10814, file: !2047, line: 298, column: 30)
!10829 = !DILocalVariable(name: "programBytes", scope: !10826, file: !2047, line: 314, type: !61)
!10830 = !DILocalVariable(name: "nextBlkAddr", scope: !10826, file: !2047, line: 316, type: !61)
!10831 = !DILocalVariable(name: "Cell", scope: !10832, file: !2047, line: 346, type: !10834)
!10832 = distinct !DILexicalBlock(scope: !10833, file: !2047, line: 345, column: 83)
!10833 = distinct !DILexicalBlock(scope: !10826, file: !2047, line: 345, column: 17)
!10834 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_CELL", file: !10835, line: 76, baseType: !1236)
!10835 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_mtd_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/uart_loopback_data_dma/GCC")
!10836 = !DILocalVariable(name: "b", scope: !10832, file: !2047, line: 347, type: !969)
!10837 = !DILocation(line: 0, scope: !10814)
!10838 = !DILocation(line: 280, column: 28, scope: !10814)
!10839 = !DILocation(line: 284, column: 14, scope: !10840)
!10840 = distinct !DILexicalBlock(scope: !10814, file: !2047, line: 284, column: 9)
!10841 = !DILocation(line: 284, column: 9, scope: !10814)
!10842 = !DILocation(line: 288, column: 14, scope: !10843)
!10843 = distinct !DILexicalBlock(scope: !10814, file: !2047, line: 288, column: 9)
!10844 = !DILocation(line: 288, column: 20, scope: !10843)
!10845 = !DILocation(line: 288, column: 9, scope: !10814)
!10846 = !DILocation(line: 292, column: 13, scope: !10847)
!10847 = distinct !DILexicalBlock(scope: !10814, file: !2047, line: 292, column: 9)
!10848 = !DILocation(line: 292, column: 9, scope: !10814)
!10849 = !DILocation(line: 293, column: 9, scope: !10850)
!10850 = distinct !DILexicalBlock(scope: !10847, file: !2047, line: 292, column: 23)
!10851 = !DILocation(line: 294, column: 5, scope: !10850)
!10852 = !DILocation(line: 296, column: 5, scope: !10814)
!10853 = !DILocation(line: 346, column: 17, scope: !10832)
!10854 = !DILocation(line: 298, column: 23, scope: !10814)
!10855 = !DILocation(line: 298, column: 5, scope: !10814)
!10856 = !DILocation(line: 299, column: 52, scope: !10828)
!10857 = !DILocation(line: 299, column: 62, scope: !10828)
!10858 = !DILocation(line: 299, column: 16, scope: !10828)
!10859 = !DILocation(line: 299, column: 71, scope: !10828)
!10860 = !DILocation(line: 299, column: 78, scope: !10828)
!10861 = !DILocation(line: 300, column: 34, scope: !10828)
!10862 = !DILocation(line: 302, column: 12, scope: !10828)
!10863 = !DILocation(line: 302, column: 23, scope: !10828)
!10864 = !DILocation(line: 302, column: 81, scope: !10828)
!10865 = !DILocation(line: 302, column: 45, scope: !10828)
!10866 = !DILocation(line: 302, column: 9, scope: !10828)
!10867 = !DILocation(line: 305, column: 29, scope: !10827)
!10868 = !DILocation(line: 305, column: 57, scope: !10827)
!10869 = !DILocation(line: 305, column: 66, scope: !10827)
!10870 = !DILocation(line: 305, column: 80, scope: !10827)
!10871 = !DILocation(line: 305, column: 13, scope: !10828)
!10872 = !DILocation(line: 306, column: 25, scope: !10873)
!10873 = distinct !DILexicalBlock(scope: !10827, file: !2047, line: 305, column: 87)
!10874 = !DILocation(line: 306, column: 36, scope: !10873)
!10875 = !DILocation(line: 306, column: 51, scope: !10873)
!10876 = !DILocation(line: 306, column: 60, scope: !10873)
!10877 = !DILocation(line: 306, column: 74, scope: !10873)
!10878 = !DILocation(line: 306, column: 22, scope: !10873)
!10879 = !DILocation(line: 307, column: 24, scope: !10880)
!10880 = distinct !DILexicalBlock(scope: !10873, file: !2047, line: 307, column: 17)
!10881 = !DILocation(line: 307, column: 17, scope: !10873)
!10882 = !DILocation(line: 310, column: 23, scope: !10873)
!10883 = !DILocation(line: 311, column: 9, scope: !10873)
!10884 = !DILocation(line: 313, column: 47, scope: !10826)
!10885 = !DILocation(line: 313, column: 56, scope: !10826)
!10886 = !DILocation(line: 313, column: 34, scope: !10826)
!10887 = !DILocation(line: 0, scope: !10826)
!10888 = !DILocation(line: 316, column: 42, scope: !10826)
!10889 = !DILocation(line: 316, column: 58, scope: !10826)
!10890 = !DILocation(line: 316, column: 55, scope: !10826)
!10891 = !DILocation(line: 326, column: 22, scope: !10892)
!10892 = distinct !DILexicalBlock(scope: !10826, file: !2047, line: 326, column: 17)
!10893 = !DILocation(line: 326, column: 37, scope: !10892)
!10894 = !DILocation(line: 326, column: 17, scope: !10826)
!10895 = !DILocation(line: 332, column: 43, scope: !10826)
!10896 = !DILocation(line: 345, column: 30, scope: !10833)
!10897 = !DILocation(line: 345, column: 52, scope: !10833)
!10898 = !DILocation(line: 0, scope: !10832)
!10899 = !DILocation(line: 348, column: 26, scope: !10832)
!10900 = !DILocation(line: 348, column: 24, scope: !10832)
!10901 = !DILocation(line: 348, column: 22, scope: !10832)
!10902 = !DILocation(line: 349, column: 41, scope: !10832)
!10903 = !DILocation(line: 349, column: 24, scope: !10832)
!10904 = !DILocation(line: 349, column: 22, scope: !10832)
!10905 = !DILocation(line: 350, column: 29, scope: !10832)
!10906 = !DILocation(line: 350, column: 40, scope: !10832)
!10907 = !DILocation(line: 350, column: 55, scope: !10832)
!10908 = !DILocation(line: 350, column: 64, scope: !10832)
!10909 = !DILocation(line: 350, column: 26, scope: !10832)
!10910 = !DILocation(line: 351, column: 28, scope: !10911)
!10911 = distinct !DILexicalBlock(scope: !10832, file: !2047, line: 351, column: 21)
!10912 = !DILocation(line: 354, column: 13, scope: !10833)
!10913 = !DILocation(line: 362, column: 33, scope: !10914)
!10914 = distinct !DILexicalBlock(scope: !10915, file: !2047, line: 361, column: 24)
!10915 = distinct !DILexicalBlock(scope: !10916, file: !2047, line: 355, column: 21)
!10916 = distinct !DILexicalBlock(scope: !10833, file: !2047, line: 354, column: 20)
!10917 = !DILocation(line: 362, column: 44, scope: !10914)
!10918 = !DILocation(line: 362, column: 59, scope: !10914)
!10919 = !DILocation(line: 362, column: 68, scope: !10914)
!10920 = !DILocation(line: 362, column: 82, scope: !10914)
!10921 = !DILocation(line: 362, column: 30, scope: !10914)
!10922 = !DILocation(line: 364, column: 28, scope: !10923)
!10923 = distinct !DILexicalBlock(scope: !10916, file: !2047, line: 364, column: 21)
!10924 = !DILocation(line: 364, column: 21, scope: !10916)
!10925 = !DILocation(line: 368, column: 24, scope: !10826)
!10926 = !DILocation(line: 0, scope: !10827)
!10927 = distinct !{!10927, !10855, !10928}
!10928 = !DILocation(line: 370, column: 5, scope: !10814)
!10929 = !DILocation(line: 372, column: 5, scope: !10814)
!10930 = !DILocation(line: 379, column: 1, scope: !10814)
!10931 = distinct !DISubprogram(name: "eraseRawDiskBlock", scope: !2047, file: !2047, line: 398, type: !10932, scopeLine: 399, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2046, retainedNodes: !10934)
!10932 = !DISubroutineType(types: !10933)
!10933 = !{!1144, !10719, !61}
!10934 = !{!10935, !10936, !10937, !10938}
!10935 = !DILocalVariable(name: "D", arg: 1, scope: !10931, file: !2047, line: 398, type: !10719)
!10936 = !DILocalVariable(name: "blkIdx", arg: 2, scope: !10931, file: !2047, line: 398, type: !61)
!10937 = !DILocalVariable(name: "result", scope: !10931, file: !2047, line: 401, type: !1144)
!10938 = !DILocalVariable(name: "block_index", scope: !10931, file: !2047, line: 402, type: !61)
!10939 = !DILocation(line: 0, scope: !10931)
!10940 = !DILocation(line: 402, column: 36, scope: !10931)
!10941 = !DILocation(line: 403, column: 13, scope: !10942)
!10942 = distinct !DILexicalBlock(scope: !10931, file: !2047, line: 403, column: 9)
!10943 = !DILocation(line: 403, column: 9, scope: !10931)
!10944 = !DILocation(line: 404, column: 9, scope: !10945)
!10945 = distinct !DILexicalBlock(scope: !10942, file: !2047, line: 403, column: 23)
!10946 = !DILocation(line: 405, column: 5, scope: !10945)
!10947 = !DILocation(line: 407, column: 37, scope: !10948)
!10948 = distinct !DILexicalBlock(scope: !10931, file: !2047, line: 407, column: 9)
!10949 = !DILocation(line: 407, column: 21, scope: !10948)
!10950 = !DILocation(line: 407, column: 9, scope: !10931)
!10951 = !DILocation(line: 412, column: 5, scope: !10931)
!10952 = !DILocation(line: 414, column: 8, scope: !10931)
!10953 = !DILocation(line: 414, column: 19, scope: !10931)
!10954 = !DILocation(line: 414, column: 32, scope: !10931)
!10955 = !DILocation(line: 414, column: 5, scope: !10931)
!10956 = !DILocation(line: 416, column: 17, scope: !10931)
!10957 = !DILocation(line: 416, column: 28, scope: !10931)
!10958 = !DILocation(line: 416, column: 42, scope: !10931)
!10959 = !DILocation(line: 416, column: 14, scope: !10931)
!10960 = !DILocation(line: 418, column: 5, scope: !10931)
!10961 = !DILocation(line: 420, column: 16, scope: !10962)
!10962 = distinct !DILexicalBlock(scope: !10931, file: !2047, line: 420, column: 9)
!10963 = !DILocation(line: 424, column: 1, scope: !10931)
!10964 = distinct !DISubprogram(name: "NOR_init", scope: !2047, file: !2047, line: 433, type: !8370, scopeLine: 434, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2046, retainedNodes: !293)
!10965 = !DILocation(line: 436, column: 9, scope: !10966)
!10966 = distinct !DILexicalBlock(scope: !10964, file: !2047, line: 436, column: 9)
!10967 = !DILocation(line: 436, column: 9, scope: !10964)
!10968 = !DILocation(line: 437, column: 9, scope: !10969)
!10969 = distinct !DILexicalBlock(scope: !10966, file: !2047, line: 436, column: 62)
!10970 = !DILocation(line: 438, column: 9, scope: !10969)
!10971 = !DILocation(line: 439, column: 27, scope: !10969)
!10972 = !DILocation(line: 440, column: 5, scope: !10969)
!10973 = !DILocation(line: 441, column: 5, scope: !10964)
!10974 = distinct !DISubprogram(name: "get_NOR_init_status", scope: !2047, file: !2047, line: 444, type: !8836, scopeLine: 445, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2046, retainedNodes: !293)
!10975 = !DILocation(line: 446, column: 12, scope: !10974)
!10976 = !DILocation(line: 446, column: 5, scope: !10974)
!10977 = distinct !DISubprogram(name: "NOR_ReadPhysicalPage", scope: !2047, file: !2047, line: 449, type: !10978, scopeLine: 450, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2046, retainedNodes: !10980)
!10978 = !DISubroutineType(types: !10979)
!10979 = !{!1144, !61, !61, !969}
!10980 = !{!10981, !10982, !10983, !10984, !10985, !10986, !10987}
!10981 = !DILocalVariable(name: "block_idx", arg: 1, scope: !10977, file: !2047, line: 449, type: !61)
!10982 = !DILocalVariable(name: "page_idx", arg: 2, scope: !10977, file: !2047, line: 449, type: !61)
!10983 = !DILocalVariable(name: "data_ptr", arg: 3, scope: !10977, file: !2047, line: 449, type: !969)
!10984 = !DILocalVariable(name: "D", scope: !10977, file: !2047, line: 451, type: !10719)
!10985 = !DILocalVariable(name: "mtdData", scope: !10977, file: !2047, line: 452, type: !2055)
!10986 = !DILocalVariable(name: "result", scope: !10977, file: !2047, line: 453, type: !1144)
!10987 = !DILocalVariable(name: "addr", scope: !10977, file: !2047, line: 455, type: !61)
!10988 = !DILocation(line: 0, scope: !10977)
!10989 = !DILocation(line: 452, column: 60, scope: !10977)
!10990 = !DILocation(line: 455, column: 32, scope: !10977)
!10991 = !DILocation(line: 455, column: 22, scope: !10977)
!10992 = !DILocation(line: 455, column: 95, scope: !10977)
!10993 = !DILocation(line: 455, column: 76, scope: !10977)
!10994 = !DILocation(line: 455, column: 118, scope: !10977)
!10995 = !DILocation(line: 455, column: 74, scope: !10977)
!10996 = !DILocation(line: 455, column: 106, scope: !10977)
!10997 = !DILocation(line: 457, column: 14, scope: !10977)
!10998 = !DILocation(line: 459, column: 16, scope: !10999)
!10999 = distinct !DILexicalBlock(scope: !10977, file: !2047, line: 459, column: 9)
!11000 = !DILocation(line: 463, column: 1, scope: !10977)
!11001 = distinct !DISubprogram(name: "NOR_ProgramPhysicalPage", scope: !2047, file: !2047, line: 466, type: !10978, scopeLine: 467, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2046, retainedNodes: !11002)
!11002 = !{!11003, !11004, !11005, !11006, !11007, !11008, !11009}
!11003 = !DILocalVariable(name: "block_idx", arg: 1, scope: !11001, file: !2047, line: 466, type: !61)
!11004 = !DILocalVariable(name: "page_idx", arg: 2, scope: !11001, file: !2047, line: 466, type: !61)
!11005 = !DILocalVariable(name: "data_ptr", arg: 3, scope: !11001, file: !2047, line: 466, type: !969)
!11006 = !DILocalVariable(name: "D", scope: !11001, file: !2047, line: 468, type: !10719)
!11007 = !DILocalVariable(name: "mtdData", scope: !11001, file: !2047, line: 469, type: !2055)
!11008 = !DILocalVariable(name: "result", scope: !11001, file: !2047, line: 470, type: !1144)
!11009 = !DILocalVariable(name: "addr", scope: !11001, file: !2047, line: 472, type: !61)
!11010 = !DILocation(line: 0, scope: !11001)
!11011 = !DILocation(line: 469, column: 60, scope: !11001)
!11012 = !DILocation(line: 472, column: 32, scope: !11001)
!11013 = !DILocation(line: 472, column: 22, scope: !11001)
!11014 = !DILocation(line: 472, column: 95, scope: !11001)
!11015 = !DILocation(line: 472, column: 76, scope: !11001)
!11016 = !DILocation(line: 472, column: 118, scope: !11001)
!11017 = !DILocation(line: 472, column: 74, scope: !11001)
!11018 = !DILocation(line: 472, column: 106, scope: !11001)
!11019 = !DILocation(line: 474, column: 14, scope: !11001)
!11020 = !DILocation(line: 475, column: 16, scope: !11021)
!11021 = distinct !DILexicalBlock(scope: !11001, file: !2047, line: 475, column: 9)
!11022 = !DILocation(line: 479, column: 1, scope: !11001)
!11023 = distinct !DISubprogram(name: "NOR_ErasePhysicalBlock", scope: !2047, file: !2047, line: 481, type: !11024, scopeLine: 482, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2046, retainedNodes: !11026)
!11024 = !DISubroutineType(types: !11025)
!11025 = !{!1144, !61}
!11026 = !{!11027, !11028}
!11027 = !DILocalVariable(name: "block_idx", arg: 1, scope: !11023, file: !2047, line: 481, type: !61)
!11028 = !DILocalVariable(name: "result", scope: !11023, file: !2047, line: 483, type: !1144)
!11029 = !DILocation(line: 0, scope: !11023)
!11030 = !DILocation(line: 484, column: 14, scope: !11023)
!11031 = !DILocation(line: 485, column: 16, scope: !11032)
!11032 = distinct !DILexicalBlock(scope: !11023, file: !2047, line: 485, column: 9)
!11033 = !DILocation(line: 489, column: 1, scope: !11023)
!11034 = distinct !DISubprogram(name: "NOR_BlockSize", scope: !2047, file: !2047, line: 492, type: !3732, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2046, retainedNodes: !11035)
!11035 = !{!11036, !11037, !11038}
!11036 = !DILocalVariable(name: "block_idx", arg: 1, scope: !11034, file: !2047, line: 492, type: !61)
!11037 = !DILocalVariable(name: "D", scope: !11034, file: !2047, line: 494, type: !10719)
!11038 = !DILocalVariable(name: "mtdData", scope: !11034, file: !2047, line: 495, type: !2055)
!11039 = !DILocation(line: 0, scope: !11034)
!11040 = !DILocation(line: 495, column: 60, scope: !11034)
!11041 = !DILocation(line: 496, column: 12, scope: !11034)
!11042 = !DILocation(line: 496, column: 5, scope: !11034)
!11043 = distinct !DISubprogram(name: "NOR_BlockIndex", scope: !2047, file: !2047, line: 499, type: !3732, scopeLine: 500, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2046, retainedNodes: !11044)
!11044 = !{!11045, !11046, !11047}
!11045 = !DILocalVariable(name: "block_addr", arg: 1, scope: !11043, file: !2047, line: 499, type: !61)
!11046 = !DILocalVariable(name: "D", scope: !11043, file: !2047, line: 501, type: !10719)
!11047 = !DILocalVariable(name: "mtdData", scope: !11043, file: !2047, line: 502, type: !2055)
!11048 = !DILocation(line: 0, scope: !11043)
!11049 = !DILocation(line: 502, column: 60, scope: !11043)
!11050 = !DILocation(line: 504, column: 12, scope: !11043)
!11051 = !DILocation(line: 504, column: 5, scope: !11043)
!11052 = distinct !DISubprogram(name: "NOR_Addr2BlockIndexOffset", scope: !2047, file: !2047, line: 510, type: !11053, scopeLine: 511, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2046, retainedNodes: !11055)
!11053 = !DISubroutineType(types: !11054)
!11054 = !{!1144, !61, !1204, !1204}
!11055 = !{!11056, !11057, !11058, !11059, !11060}
!11056 = !DILocalVariable(name: "block_addr", arg: 1, scope: !11052, file: !2047, line: 510, type: !61)
!11057 = !DILocalVariable(name: "block_index", arg: 2, scope: !11052, file: !2047, line: 510, type: !1204)
!11058 = !DILocalVariable(name: "offset", arg: 3, scope: !11052, file: !2047, line: 510, type: !1204)
!11059 = !DILocalVariable(name: "D", scope: !11052, file: !2047, line: 512, type: !10719)
!11060 = !DILocalVariable(name: "mtdData", scope: !11052, file: !2047, line: 513, type: !2055)
!11061 = !DILocation(line: 0, scope: !11052)
!11062 = !DILocation(line: 513, column: 60, scope: !11052)
!11063 = !DILocation(line: 519, column: 20, scope: !11052)
!11064 = !DILocation(line: 519, column: 18, scope: !11052)
!11065 = !DILocation(line: 520, column: 22, scope: !11066)
!11066 = distinct !DILexicalBlock(scope: !11052, file: !2047, line: 520, column: 9)
!11067 = !DILocation(line: 520, column: 9, scope: !11052)
!11068 = !DILocation(line: 524, column: 28, scope: !11052)
!11069 = !DILocation(line: 524, column: 26, scope: !11052)
!11070 = !DILocation(line: 524, column: 13, scope: !11052)
!11071 = !DILocation(line: 526, column: 5, scope: !11052)
!11072 = !DILocation(line: 527, column: 1, scope: !11052)
!11073 = distinct !DISubprogram(name: "NOR_BlockIndexOffset2Addr", scope: !2047, file: !2047, line: 532, type: !11074, scopeLine: 533, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2046, retainedNodes: !11076)
!11074 = !DISubroutineType(types: !11075)
!11075 = !{!1144, !61, !61, !1204}
!11076 = !{!11077, !11078, !11079, !11080, !11081}
!11077 = !DILocalVariable(name: "block_index", arg: 1, scope: !11073, file: !2047, line: 532, type: !61)
!11078 = !DILocalVariable(name: "offset", arg: 2, scope: !11073, file: !2047, line: 532, type: !61)
!11079 = !DILocalVariable(name: "addr", arg: 3, scope: !11073, file: !2047, line: 532, type: !1204)
!11080 = !DILocalVariable(name: "D", scope: !11073, file: !2047, line: 534, type: !10719)
!11081 = !DILocalVariable(name: "mtdData", scope: !11073, file: !2047, line: 535, type: !2055)
!11082 = !DILocation(line: 0, scope: !11073)
!11083 = !DILocation(line: 535, column: 60, scope: !11073)
!11084 = !DILocation(line: 537, column: 23, scope: !11073)
!11085 = !DILocation(line: 537, column: 13, scope: !11073)
!11086 = !DILocation(line: 537, column: 79, scope: !11073)
!11087 = !DILocation(line: 537, column: 60, scope: !11073)
!11088 = !DILocation(line: 537, column: 58, scope: !11073)
!11089 = !DILocation(line: 537, column: 88, scope: !11073)
!11090 = !DILocation(line: 537, column: 11, scope: !11073)
!11091 = !DILocation(line: 539, column: 5, scope: !11073)
!11092 = distinct !DISubprogram(name: "get_rawdisk_error_code", scope: !2047, file: !2047, line: 545, type: !11093, scopeLine: 546, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2046, retainedNodes: !11095)
!11093 = !DISubroutineType(types: !11094)
!11094 = !{!2103, !1144}
!11095 = !{!11096}
!11096 = !DILocalVariable(name: "ori_err_code", arg: 1, scope: !11092, file: !2047, line: 545, type: !1144)
!11097 = !DILocation(line: 0, scope: !11092)
!11098 = !DILocation(line: 547, column: 9, scope: !11092)
!11099 = !DILocation(line: 558, column: 9, scope: !11100)
!11100 = distinct !DILexicalBlock(scope: !11101, file: !2047, line: 558, column: 9)
!11101 = distinct !DILexicalBlock(scope: !11102, file: !2047, line: 558, column: 9)
!11102 = distinct !DILexicalBlock(scope: !11103, file: !2047, line: 558, column: 9)
!11103 = distinct !DILexicalBlock(scope: !11104, file: !2047, line: 557, column: 12)
!11104 = distinct !DILexicalBlock(scope: !11105, file: !2047, line: 555, column: 16)
!11105 = distinct !DILexicalBlock(scope: !11106, file: !2047, line: 553, column: 16)
!11106 = distinct !DILexicalBlock(scope: !11107, file: !2047, line: 551, column: 16)
!11107 = distinct !DILexicalBlock(scope: !11108, file: !2047, line: 549, column: 16)
!11108 = distinct !DILexicalBlock(scope: !11092, file: !2047, line: 547, column: 9)
!11109 = !DILocation(line: 560, column: 1, scope: !11092)
!11110 = distinct !DISubprogram(name: "get_block_size_from_address", scope: !2047, file: !2047, line: 561, type: !11111, scopeLine: 562, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2046, retainedNodes: !11114)
!11111 = !DISubroutineType(types: !11112)
!11112 = !{!11113, !61}
!11113 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_flash_block_t", file: !1385, line: 127, baseType: !2049)
!11114 = !{!11115, !11116, !11117}
!11115 = !DILocalVariable(name: "address", arg: 1, scope: !11110, file: !2047, line: 561, type: !61)
!11116 = !DILocalVariable(name: "block_size", scope: !11110, file: !2047, line: 563, type: !61)
!11117 = !DILocalVariable(name: "block_index", scope: !11110, file: !2047, line: 564, type: !61)
!11118 = !DILocation(line: 0, scope: !11110)
!11119 = !DILocation(line: 566, column: 19, scope: !11110)
!11120 = !DILocation(line: 567, column: 21, scope: !11121)
!11121 = distinct !DILexicalBlock(scope: !11110, file: !2047, line: 567, column: 9)
!11122 = !DILocation(line: 567, column: 9, scope: !11110)
!11123 = !DILocation(line: 568, column: 9, scope: !11124)
!11124 = distinct !DILexicalBlock(scope: !11125, file: !2047, line: 568, column: 9)
!11125 = distinct !DILexicalBlock(scope: !11126, file: !2047, line: 568, column: 9)
!11126 = distinct !DILexicalBlock(scope: !11127, file: !2047, line: 568, column: 9)
!11127 = distinct !DILexicalBlock(scope: !11121, file: !2047, line: 567, column: 45)
!11128 = !DILocation(line: 570, column: 18, scope: !11110)
!11129 = !DILocation(line: 571, column: 9, scope: !11110)
!11130 = !DILocation(line: 574, column: 9, scope: !11131)
!11131 = distinct !DILexicalBlock(scope: !11132, file: !2047, line: 573, column: 38)
!11132 = distinct !DILexicalBlock(scope: !11133, file: !2047, line: 573, column: 16)
!11133 = distinct !DILexicalBlock(scope: !11110, file: !2047, line: 571, column: 9)
!11134 = !DILocation(line: 576, column: 9, scope: !11135)
!11135 = distinct !DILexicalBlock(scope: !11136, file: !2047, line: 575, column: 39)
!11136 = distinct !DILexicalBlock(scope: !11132, file: !2047, line: 575, column: 16)
!11137 = !DILocation(line: 578, column: 9, scope: !11138)
!11138 = distinct !DILexicalBlock(scope: !11139, file: !2047, line: 578, column: 9)
!11139 = distinct !DILexicalBlock(scope: !11140, file: !2047, line: 578, column: 9)
!11140 = distinct !DILexicalBlock(scope: !11141, file: !2047, line: 578, column: 9)
!11141 = distinct !DILexicalBlock(scope: !11136, file: !2047, line: 577, column: 12)
!11142 = !DILocation(line: 0, scope: !11133)
!11143 = !DILocation(line: 580, column: 1, scope: !11110)
!11144 = distinct !DISubprogram(name: "hal_flash_init", scope: !2047, file: !2047, line: 583, type: !8836, scopeLine: 584, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2046, retainedNodes: !293)
!11145 = !DILocation(line: 585, column: 5, scope: !11144)
!11146 = !DILocation(line: 586, column: 5, scope: !11144)
!11147 = distinct !DISubprogram(name: "hal_flash_deinit", scope: !2047, file: !2047, line: 589, type: !8836, scopeLine: 590, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2046, retainedNodes: !293)
!11148 = !DILocation(line: 591, column: 5, scope: !11147)
!11149 = distinct !DISubprogram(name: "hal_flash_erase", scope: !2047, file: !2047, line: 595, type: !11150, scopeLine: 596, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2046, retainedNodes: !11152)
!11150 = !DISubroutineType(types: !11151)
!11151 = !{!2103, !61, !11113}
!11152 = !{!11153, !11154, !11155, !11156, !11157}
!11153 = !DILocalVariable(name: "start_address", arg: 1, scope: !11149, file: !2047, line: 595, type: !61)
!11154 = !DILocalVariable(name: "block", arg: 2, scope: !11149, file: !2047, line: 595, type: !11113)
!11155 = !DILocalVariable(name: "result", scope: !11149, file: !2047, line: 597, type: !1144)
!11156 = !DILocalVariable(name: "block_index", scope: !11149, file: !2047, line: 598, type: !61)
!11157 = !DILocalVariable(name: "erase_type", scope: !11149, file: !2047, line: 599, type: !61)
!11158 = !DILocation(line: 0, scope: !11149)
!11159 = !DILocation(line: 601, column: 9, scope: !11149)
!11160 = !DILocation(line: 602, column: 28, scope: !11161)
!11161 = distinct !DILexicalBlock(scope: !11162, file: !2047, line: 602, column: 13)
!11162 = distinct !DILexicalBlock(scope: !11163, file: !2047, line: 601, column: 38)
!11163 = distinct !DILexicalBlock(scope: !11149, file: !2047, line: 601, column: 9)
!11164 = !DILocation(line: 602, column: 37, scope: !11161)
!11165 = !DILocation(line: 602, column: 13, scope: !11162)
!11166 = !DILocation(line: 607, column: 28, scope: !11167)
!11167 = distinct !DILexicalBlock(scope: !11168, file: !2047, line: 607, column: 13)
!11168 = distinct !DILexicalBlock(scope: !11169, file: !2047, line: 606, column: 46)
!11169 = distinct !DILexicalBlock(scope: !11163, file: !2047, line: 606, column: 16)
!11170 = !DILocation(line: 607, column: 38, scope: !11167)
!11171 = !DILocation(line: 607, column: 13, scope: !11168)
!11172 = !DILocation(line: 612, column: 28, scope: !11173)
!11173 = distinct !DILexicalBlock(scope: !11174, file: !2047, line: 612, column: 13)
!11174 = distinct !DILexicalBlock(scope: !11175, file: !2047, line: 611, column: 46)
!11175 = distinct !DILexicalBlock(scope: !11169, file: !2047, line: 611, column: 16)
!11176 = !DILocation(line: 612, column: 38, scope: !11173)
!11177 = !DILocation(line: 612, column: 13, scope: !11174)
!11178 = !DILocation(line: 0, scope: !11163)
!11179 = !DILocation(line: 621, column: 19, scope: !11149)
!11180 = !DILocation(line: 622, column: 21, scope: !11181)
!11181 = distinct !DILexicalBlock(scope: !11149, file: !2047, line: 622, column: 9)
!11182 = !DILocation(line: 622, column: 9, scope: !11149)
!11183 = !DILocation(line: 626, column: 17, scope: !11149)
!11184 = !DILocation(line: 627, column: 14, scope: !11149)
!11185 = !DILocation(line: 628, column: 16, scope: !11186)
!11186 = distinct !DILexicalBlock(scope: !11149, file: !2047, line: 628, column: 9)
!11187 = !DILocation(line: 628, column: 9, scope: !11149)
!11188 = !DILocation(line: 629, column: 16, scope: !11189)
!11189 = distinct !DILexicalBlock(scope: !11186, file: !2047, line: 628, column: 38)
!11190 = !DILocation(line: 629, column: 9, scope: !11189)
!11191 = !DILocation(line: 632, column: 1, scope: !11149)
!11192 = distinct !DISubprogram(name: "hal_flash_read", scope: !2047, file: !2047, line: 634, type: !11193, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2046, retainedNodes: !11195)
!11193 = !DISubroutineType(types: !11194)
!11194 = !{!2103, !61, !969, !61}
!11195 = !{!11196, !11197, !11198, !11199, !11200}
!11196 = !DILocalVariable(name: "start_address", arg: 1, scope: !11192, file: !2047, line: 634, type: !61)
!11197 = !DILocalVariable(name: "buffer", arg: 2, scope: !11192, file: !2047, line: 634, type: !969)
!11198 = !DILocalVariable(name: "length", arg: 3, scope: !11192, file: !2047, line: 634, type: !61)
!11199 = !DILocalVariable(name: "D", scope: !11192, file: !2047, line: 636, type: !10719)
!11200 = !DILocalVariable(name: "result", scope: !11192, file: !2047, line: 637, type: !1144)
!11201 = !DILocation(line: 0, scope: !11192)
!11202 = !DILocation(line: 639, column: 14, scope: !11192)
!11203 = !DILocation(line: 641, column: 16, scope: !11204)
!11204 = distinct !DILexicalBlock(scope: !11192, file: !2047, line: 641, column: 9)
!11205 = !DILocation(line: 641, column: 9, scope: !11192)
!11206 = !DILocation(line: 642, column: 16, scope: !11207)
!11207 = distinct !DILexicalBlock(scope: !11204, file: !2047, line: 641, column: 38)
!11208 = !DILocation(line: 642, column: 9, scope: !11207)
!11209 = !DILocation(line: 645, column: 1, scope: !11192)
!11210 = distinct !DISubprogram(name: "hal_flash_write", scope: !2047, file: !2047, line: 647, type: !11211, scopeLine: 648, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2046, retainedNodes: !11213)
!11211 = !DISubroutineType(types: !11212)
!11212 = !{!2103, !61, !2369, !61}
!11213 = !{!11214, !11215, !11216, !11217, !11218, !11219}
!11214 = !DILocalVariable(name: "address", arg: 1, scope: !11210, file: !2047, line: 647, type: !61)
!11215 = !DILocalVariable(name: "data", arg: 2, scope: !11210, file: !2047, line: 647, type: !2369)
!11216 = !DILocalVariable(name: "length", arg: 3, scope: !11210, file: !2047, line: 647, type: !61)
!11217 = !DILocalVariable(name: "D", scope: !11210, file: !2047, line: 649, type: !10719)
!11218 = !DILocalVariable(name: "result", scope: !11210, file: !2047, line: 650, type: !1144)
!11219 = !DILocalVariable(name: "addr", scope: !11220, file: !2047, line: 660, type: !61)
!11220 = distinct !DILexicalBlock(scope: !11221, file: !2047, line: 659, column: 40)
!11221 = distinct !DILexicalBlock(scope: !11210, file: !2047, line: 659, column: 8)
!11222 = !DILocation(line: 0, scope: !11210)
!11223 = !DILocation(line: 652, column: 14, scope: !11210)
!11224 = !DILocation(line: 653, column: 16, scope: !11225)
!11225 = distinct !DILexicalBlock(scope: !11210, file: !2047, line: 653, column: 9)
!11226 = !DILocation(line: 653, column: 9, scope: !11210)
!11227 = !DILocation(line: 654, column: 16, scope: !11228)
!11228 = distinct !DILexicalBlock(scope: !11225, file: !2047, line: 653, column: 38)
!11229 = !DILocation(line: 654, column: 9, scope: !11228)
!11230 = !DILocation(line: 659, column: 8, scope: !11221)
!11231 = !DILocation(line: 659, column: 8, scope: !11210)
!11232 = !DILocation(line: 661, column: 25, scope: !11233)
!11233 = distinct !DILexicalBlock(scope: !11220, file: !2047, line: 661, column: 8)
!11234 = !DILocation(line: 0, scope: !11220)
!11235 = !DILocation(line: 661, column: 58, scope: !11236)
!11236 = distinct !DILexicalBlock(scope: !11233, file: !2047, line: 661, column: 8)
!11237 = !DILocation(line: 661, column: 8, scope: !11233)
!11238 = !DILocation(line: 662, column: 13, scope: !11239)
!11239 = distinct !DILexicalBlock(scope: !11236, file: !2047, line: 661, column: 147)
!11240 = !DILocation(line: 661, column: 128, scope: !11236)
!11241 = distinct !{!11241, !11237, !11242}
!11242 = !DILocation(line: 663, column: 8, scope: !11233)
!11243 = !DILocation(line: 668, column: 1, scope: !11210)
!11244 = distinct !DISubprogram(name: "BlockAddress", scope: !2108, file: !2108, line: 111, type: !11245, scopeLine: 112, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !11247)
!11245 = !DISubroutineType(types: !11246)
!11246 = !{!88, !88, !61}
!11247 = !{!11248, !11249, !11250, !11251, !11252, !11253}
!11248 = !DILocalVariable(name: "DriverData", arg: 1, scope: !11244, file: !2108, line: 111, type: !88)
!11249 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !11244, file: !2108, line: 111, type: !61)
!11250 = !DILocalVariable(name: "D", scope: !11244, file: !2108, line: 113, type: !2136)
!11251 = !DILocalVariable(name: "addr", scope: !11244, file: !2108, line: 114, type: !61)
!11252 = !DILocalVariable(name: "region", scope: !11244, file: !2108, line: 115, type: !61)
!11253 = !DILocalVariable(name: "BlockUpperBound", scope: !11244, file: !2108, line: 115, type: !61)
!11254 = !DILocation(line: 0, scope: !11244)
!11255 = !DILocation(line: 117, column: 26, scope: !11244)
!11256 = !DILocation(line: 117, column: 40, scope: !11244)
!11257 = !DILocation(line: 118, column: 28, scope: !11244)
!11258 = !DILocation(line: 118, column: 5, scope: !11244)
!11259 = !DILocation(line: 119, column: 39, scope: !11260)
!11260 = distinct !DILexicalBlock(scope: !11244, file: !2108, line: 118, column: 43)
!11261 = !DILocation(line: 119, column: 76, scope: !11260)
!11262 = !DILocation(line: 119, column: 52, scope: !11260)
!11263 = !DILocation(line: 119, column: 14, scope: !11260)
!11264 = !DILocation(line: 120, column: 15, scope: !11260)
!11265 = !DILocation(line: 121, column: 50, scope: !11260)
!11266 = !DILocation(line: 121, column: 25, scope: !11260)
!11267 = distinct !{!11267, !11258, !11268}
!11268 = !DILocation(line: 122, column: 5, scope: !11244)
!11269 = !DILocation(line: 123, column: 68, scope: !11244)
!11270 = !DILocation(line: 123, column: 44, scope: !11244)
!11271 = !DILocation(line: 123, column: 25, scope: !11244)
!11272 = !DILocation(line: 123, column: 107, scope: !11244)
!11273 = !DILocation(line: 123, column: 83, scope: !11244)
!11274 = !DILocation(line: 123, column: 10, scope: !11244)
!11275 = !DILocation(line: 125, column: 16, scope: !11244)
!11276 = !DILocation(line: 125, column: 25, scope: !11244)
!11277 = !DILocation(line: 125, column: 5, scope: !11244)
!11278 = distinct !DISubprogram(name: "MapWindow", scope: !2108, file: !2108, line: 180, type: !1741, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !11279)
!11279 = !{!11280, !11281, !11282, !11283}
!11280 = !DILocalVariable(name: "DriveData", arg: 1, scope: !11278, file: !2108, line: 180, type: !88)
!11281 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !11278, file: !2108, line: 180, type: !61)
!11282 = !DILocalVariable(name: "WindowIndex", arg: 3, scope: !11278, file: !2108, line: 180, type: !61)
!11283 = !DILocalVariable(name: "D", scope: !11278, file: !2108, line: 182, type: !2136)
!11284 = !DILocation(line: 0, scope: !11278)
!11285 = !DILocation(line: 185, column: 5, scope: !11286)
!11286 = distinct !DILexicalBlock(scope: !11287, file: !2108, line: 185, column: 5)
!11287 = distinct !DILexicalBlock(scope: !11278, file: !2108, line: 185, column: 5)
!11288 = !DILocation(line: 185, column: 5, scope: !11287)
!11289 = !DILocation(line: 185, column: 5, scope: !11290)
!11290 = distinct !DILexicalBlock(scope: !11286, file: !2108, line: 185, column: 5)
!11291 = !DILocation(line: 186, column: 27, scope: !11278)
!11292 = !DILocation(line: 186, column: 19, scope: !11278)
!11293 = !DILocation(line: 186, column: 8, scope: !11278)
!11294 = !DILocation(line: 186, column: 17, scope: !11278)
!11295 = !DILocation(line: 188, column: 5, scope: !11278)
!11296 = !DILocation(line: 0, scope: !2129)
!11297 = !DILocation(line: 142, column: 12, scope: !11298)
!11298 = distinct !DILexicalBlock(scope: !2129, file: !2108, line: 142, column: 9)
!11299 = !DILocation(line: 142, column: 34, scope: !11298)
!11300 = !DILocation(line: 142, column: 64, scope: !11298)
!11301 = !DILocation(line: 142, column: 75, scope: !11298)
!11302 = !DILocation(line: 142, column: 9, scope: !2129)
!11303 = !DILocation(line: 143, column: 79, scope: !11304)
!11304 = distinct !DILexicalBlock(scope: !11305, file: !2108, line: 143, column: 13)
!11305 = distinct !DILexicalBlock(scope: !11298, file: !2108, line: 142, column: 99)
!11306 = !DILocation(line: 143, column: 13, scope: !11305)
!11307 = !DILocation(line: 144, column: 72, scope: !11308)
!11308 = distinct !DILexicalBlock(scope: !11309, file: !2108, line: 144, column: 17)
!11309 = distinct !DILexicalBlock(scope: !11304, file: !2108, line: 143, column: 94)
!11310 = !DILocation(line: 144, column: 83, scope: !11308)
!11311 = !DILocation(line: 144, column: 17, scope: !11309)
!11312 = !DILocation(line: 145, column: 87, scope: !11313)
!11313 = distinct !DILexicalBlock(scope: !11314, file: !2108, line: 145, column: 21)
!11314 = distinct !DILexicalBlock(scope: !11308, file: !2108, line: 144, column: 107)
!11315 = !DILocation(line: 145, column: 21, scope: !11314)
!11316 = !DILocation(line: 146, column: 33, scope: !11317)
!11317 = distinct !DILexicalBlock(scope: !11313, file: !2108, line: 145, column: 102)
!11318 = !DILocation(line: 147, column: 25, scope: !11319)
!11319 = distinct !DILexicalBlock(scope: !11317, file: !2108, line: 147, column: 25)
!11320 = !DILocation(line: 147, column: 62, scope: !11319)
!11321 = !DILocation(line: 147, column: 34, scope: !11319)
!11322 = !DILocation(line: 147, column: 25, scope: !11317)
!11323 = !DILocation(line: 148, column: 91, scope: !11324)
!11324 = distinct !DILexicalBlock(scope: !11319, file: !2108, line: 147, column: 106)
!11325 = !DILocation(line: 149, column: 111, scope: !11324)
!11326 = !DILocation(line: 149, column: 101, scope: !11324)
!11327 = !DILocation(line: 149, column: 87, scope: !11324)
!11328 = !DILocation(line: 149, column: 99, scope: !11324)
!11329 = !DILocation(line: 150, column: 37, scope: !11324)
!11330 = !DILocation(line: 150, column: 34, scope: !11324)
!11331 = !DILocation(line: 151, column: 21, scope: !11324)
!11332 = !DILocation(line: 152, column: 91, scope: !11333)
!11333 = distinct !DILexicalBlock(scope: !11319, file: !2108, line: 151, column: 28)
!11334 = !DILocation(line: 153, column: 111, scope: !11333)
!11335 = !DILocation(line: 153, column: 101, scope: !11333)
!11336 = !DILocation(line: 153, column: 87, scope: !11333)
!11337 = !DILocation(line: 153, column: 99, scope: !11333)
!11338 = !DILocation(line: 154, column: 34, scope: !11333)
!11339 = !DILocation(line: 157, column: 32, scope: !11340)
!11340 = distinct !DILexicalBlock(scope: !11313, file: !2108, line: 156, column: 24)
!11341 = !DILocation(line: 158, column: 83, scope: !11340)
!11342 = !DILocation(line: 159, column: 60, scope: !11340)
!11343 = !DILocation(line: 159, column: 33, scope: !11340)
!11344 = !DILocation(line: 159, column: 30, scope: !11340)
!11345 = !DILocation(line: 162, column: 29, scope: !11346)
!11346 = distinct !DILexicalBlock(scope: !11308, file: !2108, line: 161, column: 20)
!11347 = !DILocation(line: 163, column: 83, scope: !11346)
!11348 = !DILocation(line: 164, column: 103, scope: !11346)
!11349 = !DILocation(line: 164, column: 93, scope: !11346)
!11350 = !DILocation(line: 164, column: 79, scope: !11346)
!11351 = !DILocation(line: 164, column: 91, scope: !11346)
!11352 = !DILocation(line: 165, column: 56, scope: !11346)
!11353 = !DILocation(line: 165, column: 29, scope: !11346)
!11354 = !DILocation(line: 165, column: 26, scope: !11346)
!11355 = !DILocation(line: 168, column: 24, scope: !11356)
!11356 = distinct !DILexicalBlock(scope: !11304, file: !2108, line: 167, column: 16)
!11357 = !DILocation(line: 169, column: 75, scope: !11356)
!11358 = !DILocation(line: 170, column: 50, scope: !11356)
!11359 = !DILocation(line: 170, column: 22, scope: !11356)
!11360 = !DILocation(line: 173, column: 21, scope: !11361)
!11361 = distinct !DILexicalBlock(scope: !11298, file: !2108, line: 172, column: 12)
!11362 = !DILocation(line: 174, column: 75, scope: !11361)
!11363 = !DILocation(line: 175, column: 95, scope: !11361)
!11364 = !DILocation(line: 175, column: 85, scope: !11361)
!11365 = !DILocation(line: 175, column: 71, scope: !11361)
!11366 = !DILocation(line: 175, column: 83, scope: !11361)
!11367 = !DILocation(line: 176, column: 46, scope: !11361)
!11368 = !DILocation(line: 176, column: 18, scope: !11361)
!11369 = !DILocation(line: 0, scope: !11298)
!11370 = !DILocation(line: 178, column: 5, scope: !2129)
!11371 = distinct !DISubprogram(name: "BlockSize", scope: !2108, file: !2108, line: 191, type: !2130, scopeLine: 192, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !11372)
!11372 = !{!11373, !11374, !11375, !11376, !11377}
!11373 = !DILocalVariable(name: "DriveData", arg: 1, scope: !11371, file: !2108, line: 191, type: !88)
!11374 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !11371, file: !2108, line: 191, type: !61)
!11375 = !DILocalVariable(name: "D", scope: !11371, file: !2108, line: 193, type: !2136)
!11376 = !DILocalVariable(name: "region", scope: !11371, file: !2108, line: 194, type: !61)
!11377 = !DILocalVariable(name: "BlockUpperBound", scope: !11371, file: !2108, line: 194, type: !61)
!11378 = !DILocation(line: 0, scope: !11371)
!11379 = !DILocation(line: 196, column: 26, scope: !11371)
!11380 = !DILocation(line: 196, column: 45, scope: !11371)
!11381 = !DILocation(line: 197, column: 28, scope: !11371)
!11382 = !DILocation(line: 197, column: 5, scope: !11371)
!11383 = !DILocation(line: 198, column: 15, scope: !11384)
!11384 = distinct !DILexicalBlock(scope: !11371, file: !2108, line: 197, column: 43)
!11385 = !DILocation(line: 199, column: 50, scope: !11384)
!11386 = !DILocation(line: 199, column: 25, scope: !11384)
!11387 = distinct !{!11387, !11382, !11388}
!11388 = !DILocation(line: 200, column: 5, scope: !11371)
!11389 = !DILocation(line: 202, column: 35, scope: !11371)
!11390 = !DILocation(line: 202, column: 5, scope: !11371)
!11391 = distinct !DISubprogram(name: "BlockIndex", scope: !2108, file: !2108, line: 205, type: !2130, scopeLine: 206, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !11392)
!11392 = !{!11393, !11394, !11395, !11396, !11397, !11398}
!11393 = !DILocalVariable(name: "DriveData", arg: 1, scope: !11391, file: !2108, line: 205, type: !88)
!11394 = !DILocalVariable(name: "blk_addr", arg: 2, scope: !11391, file: !2108, line: 205, type: !61)
!11395 = !DILocalVariable(name: "D", scope: !11391, file: !2108, line: 207, type: !2136)
!11396 = !DILocalVariable(name: "region", scope: !11391, file: !2108, line: 208, type: !61)
!11397 = !DILocalVariable(name: "BlockUpperAddr", scope: !11391, file: !2108, line: 208, type: !61)
!11398 = !DILocalVariable(name: "blk_idx", scope: !11391, file: !2108, line: 209, type: !61)
!11399 = !DILocation(line: 0, scope: !11391)
!11400 = !DILocation(line: 211, column: 25, scope: !11391)
!11401 = !DILocation(line: 211, column: 44, scope: !11391)
!11402 = !DILocation(line: 211, column: 81, scope: !11391)
!11403 = !DILocation(line: 211, column: 57, scope: !11391)
!11404 = !DILocation(line: 213, column: 28, scope: !11391)
!11405 = !DILocation(line: 213, column: 40, scope: !11391)
!11406 = !DILocation(line: 213, column: 66, scope: !11391)
!11407 = !DILocation(line: 213, column: 5, scope: !11391)
!11408 = !DILocation(line: 214, column: 17, scope: !11409)
!11409 = distinct !DILexicalBlock(scope: !11391, file: !2108, line: 213, column: 78)
!11410 = !DILocation(line: 215, column: 18, scope: !11409)
!11411 = !DILocation(line: 216, column: 15, scope: !11409)
!11412 = !DILocation(line: 217, column: 48, scope: !11409)
!11413 = !DILocation(line: 217, column: 85, scope: !11409)
!11414 = !DILocation(line: 217, column: 61, scope: !11409)
!11415 = distinct !{!11415, !11407, !11416}
!11416 = !DILocation(line: 218, column: 5, scope: !11391)
!11417 = !DILocation(line: 221, column: 53, scope: !11418)
!11418 = distinct !DILexicalBlock(scope: !11419, file: !2108, line: 220, column: 37)
!11419 = distinct !DILexicalBlock(scope: !11391, file: !2108, line: 220, column: 9)
!11420 = !DILocation(line: 221, column: 29, scope: !11418)
!11421 = !DILocation(line: 221, column: 17, scope: !11418)
!11422 = !DILocation(line: 222, column: 5, scope: !11418)
!11423 = !DILocation(line: 0, scope: !11419)
!11424 = !DILocation(line: 225, column: 5, scope: !11391)
!11425 = distinct !DISubprogram(name: "get_ROM_BASE", scope: !2108, file: !2108, line: 232, type: !3984, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !293)
!11426 = !DILocation(line: 238, column: 5, scope: !11425)
!11427 = distinct !DISubprogram(name: "get_NOR_FLASH_BASE_ADDRESS", scope: !2108, file: !2108, line: 243, type: !3984, scopeLine: 244, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !293)
!11428 = !DILocation(line: 245, column: 5, scope: !11427)
!11429 = distinct !DISubprogram(name: "get_Dual_NOR_FLASH_SIZE", scope: !2108, file: !2108, line: 249, type: !3984, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !293)
!11430 = !DILocation(line: 254, column: 5, scope: !11429)
!11431 = distinct !DISubprogram(name: "get_NOR_ALLOCATED_FAT_SPACE", scope: !2108, file: !2108, line: 259, type: !3984, scopeLine: 260, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !293)
!11432 = !DILocation(line: 261, column: 5, scope: !11431)
!11433 = distinct !DISubprogram(name: "DelayAWhile_UST", scope: !2108, file: !2108, line: 271, type: !4123, scopeLine: 272, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !11434)
!11434 = !{!11435, !11436}
!11435 = !DILocalVariable(name: "delay", arg: 1, scope: !11433, file: !2108, line: 271, type: !61)
!11436 = !DILocalVariable(name: "ret", scope: !11433, file: !2108, line: 276, type: !3151)
!11437 = !DILocation(line: 0, scope: !11433)
!11438 = !DILocation(line: 277, column: 11, scope: !11433)
!11439 = !DILocation(line: 278, column: 13, scope: !11440)
!11440 = distinct !DILexicalBlock(scope: !11433, file: !2108, line: 278, column: 9)
!11441 = !DILocation(line: 278, column: 9, scope: !11433)
!11442 = !DILocation(line: 279, column: 9, scope: !11443)
!11443 = distinct !DILexicalBlock(scope: !11444, file: !2108, line: 279, column: 9)
!11444 = distinct !DILexicalBlock(scope: !11445, file: !2108, line: 279, column: 9)
!11445 = distinct !DILexicalBlock(scope: !11446, file: !2108, line: 279, column: 9)
!11446 = distinct !DILexicalBlock(scope: !11440, file: !2108, line: 278, column: 35)
!11447 = !DILocation(line: 282, column: 1, scope: !11433)
!11448 = distinct !DISubprogram(name: "log_hal_error_internal", scope: !2786, file: !2786, line: 58, type: !11449, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2785, retainedNodes: !11451)
!11449 = !DISubroutineType(types: !11450)
!11450 = !{null, !2420, !7, !2420, null}
!11451 = !{!11452, !11453, !11454, !11455, !11464}
!11452 = !DILocalVariable(name: "func", arg: 1, scope: !11448, file: !2786, line: 58, type: !2420)
!11453 = !DILocalVariable(name: "line", arg: 2, scope: !11448, file: !2786, line: 58, type: !7)
!11454 = !DILocalVariable(name: "message", arg: 3, scope: !11448, file: !2786, line: 58, type: !2420)
!11455 = !DILocalVariable(name: "ap", scope: !11448, file: !2786, line: 60, type: !11456)
!11456 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !11457, line: 46, baseType: !11458)
!11457 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/stdio.h", directory: "/home/mjshen/RTOSExploration")
!11458 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !11459, line: 32, baseType: !11460)
!11459 = !DIFile(filename: "/usr/lib/llvm-14/lib/clang/14.0.6/include/stdarg.h", directory: "")
!11460 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2786, baseType: !11461)
!11461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !11462)
!11462 = !{!11463}
!11463 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !11461, file: !2786, line: 60, baseType: !88, size: 32)
!11464 = !DILocalVariable(name: "mask", scope: !11448, file: !2786, line: 62, type: !61)
!11465 = !DILocation(line: 0, scope: !11448)
!11466 = !DILocation(line: 60, column: 5, scope: !11448)
!11467 = !DILocation(line: 60, column: 13, scope: !11448)
!11468 = !DILocation(line: 62, column: 5, scope: !11448)
!11469 = !DILocation(line: 63, column: 5, scope: !11448)
!11470 = !DILocation(line: 65, column: 5, scope: !11448)
!11471 = !DILocation(line: 66, column: 5, scope: !11448)
!11472 = !DILocation(line: 67, column: 5, scope: !11448)
!11473 = !DILocation(line: 69, column: 37, scope: !11448)
!11474 = !DILocation(line: 69, column: 5, scope: !11448)
!11475 = !DILocation(line: 71, column: 1, scope: !11448)
!11476 = distinct !DISubprogram(name: "log_hal_warning_internal", scope: !2786, file: !2786, line: 72, type: !11449, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2785, retainedNodes: !11477)
!11477 = !{!11478, !11479, !11480, !11481, !11482}
!11478 = !DILocalVariable(name: "func", arg: 1, scope: !11476, file: !2786, line: 72, type: !2420)
!11479 = !DILocalVariable(name: "line", arg: 2, scope: !11476, file: !2786, line: 72, type: !7)
!11480 = !DILocalVariable(name: "message", arg: 3, scope: !11476, file: !2786, line: 72, type: !2420)
!11481 = !DILocalVariable(name: "ap", scope: !11476, file: !2786, line: 74, type: !11456)
!11482 = !DILocalVariable(name: "mask", scope: !11476, file: !2786, line: 76, type: !61)
!11483 = !DILocation(line: 0, scope: !11476)
!11484 = !DILocation(line: 74, column: 5, scope: !11476)
!11485 = !DILocation(line: 74, column: 13, scope: !11476)
!11486 = !DILocation(line: 76, column: 5, scope: !11476)
!11487 = !DILocation(line: 77, column: 5, scope: !11476)
!11488 = !DILocation(line: 79, column: 5, scope: !11476)
!11489 = !DILocation(line: 80, column: 5, scope: !11476)
!11490 = !DILocation(line: 81, column: 5, scope: !11476)
!11491 = !DILocation(line: 83, column: 37, scope: !11476)
!11492 = !DILocation(line: 83, column: 5, scope: !11476)
!11493 = !DILocation(line: 85, column: 1, scope: !11476)
!11494 = distinct !DISubprogram(name: "log_hal_info_internal", scope: !2786, file: !2786, line: 86, type: !11449, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2785, retainedNodes: !11495)
!11495 = !{!11496, !11497, !11498, !11499, !11500}
!11496 = !DILocalVariable(name: "func", arg: 1, scope: !11494, file: !2786, line: 86, type: !2420)
!11497 = !DILocalVariable(name: "line", arg: 2, scope: !11494, file: !2786, line: 86, type: !7)
!11498 = !DILocalVariable(name: "message", arg: 3, scope: !11494, file: !2786, line: 86, type: !2420)
!11499 = !DILocalVariable(name: "ap", scope: !11494, file: !2786, line: 88, type: !11456)
!11500 = !DILocalVariable(name: "mask", scope: !11494, file: !2786, line: 90, type: !61)
!11501 = !DILocation(line: 0, scope: !11494)
!11502 = !DILocation(line: 88, column: 5, scope: !11494)
!11503 = !DILocation(line: 88, column: 13, scope: !11494)
!11504 = !DILocation(line: 90, column: 5, scope: !11494)
!11505 = !DILocation(line: 91, column: 5, scope: !11494)
!11506 = !DILocation(line: 93, column: 5, scope: !11494)
!11507 = !DILocation(line: 94, column: 5, scope: !11494)
!11508 = !DILocation(line: 95, column: 5, scope: !11494)
!11509 = !DILocation(line: 97, column: 37, scope: !11494)
!11510 = !DILocation(line: 97, column: 5, scope: !11494)
!11511 = !DILocation(line: 99, column: 1, scope: !11494)
!11512 = distinct !DISubprogram(name: "log_hal_dump_internal", scope: !2786, file: !2786, line: 101, type: !11513, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2785, retainedNodes: !11517)
!11513 = !DISubroutineType(types: !11514)
!11514 = !{null, !2420, !7, !2420, !11515, !7, null}
!11515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11516, size: 32)
!11516 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!11517 = !{!11518, !11519, !11520, !11521, !11522}
!11518 = !DILocalVariable(name: "func", arg: 1, scope: !11512, file: !2786, line: 101, type: !2420)
!11519 = !DILocalVariable(name: "line", arg: 2, scope: !11512, file: !2786, line: 101, type: !7)
!11520 = !DILocalVariable(name: "message", arg: 3, scope: !11512, file: !2786, line: 101, type: !2420)
!11521 = !DILocalVariable(name: "data", arg: 4, scope: !11512, file: !2786, line: 101, type: !11515)
!11522 = !DILocalVariable(name: "length", arg: 5, scope: !11512, file: !2786, line: 101, type: !7)
!11523 = !DILocation(line: 0, scope: !11512)
!11524 = !DILocation(line: 103, column: 1, scope: !11512)
!11525 = distinct !DISubprogram(name: "__EMI_GetSR", scope: !2188, file: !2188, line: 87, type: !3732, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2187, retainedNodes: !11526)
!11526 = !{!11527, !11528}
!11527 = !DILocalVariable(name: "bank_no", arg: 1, scope: !11525, file: !2188, line: 87, type: !61)
!11528 = !DILocalVariable(name: "value", scope: !11525, file: !2188, line: 89, type: !61)
!11529 = !DILocation(line: 0, scope: !11525)
!11530 = !DILocation(line: 91, column: 41, scope: !11525)
!11531 = !DILocation(line: 91, column: 5, scope: !11525)
!11532 = !DILocation(line: 91, column: 19, scope: !11525)
!11533 = !DILocation(line: 91, column: 31, scope: !11525)
!11534 = !DILocation(line: 92, column: 77, scope: !11525)
!11535 = !DILocation(line: 92, column: 60, scope: !11525)
!11536 = !DILocation(line: 92, column: 31, scope: !11525)
!11537 = !DILocation(line: 94, column: 5, scope: !11525)
!11538 = !DILocation(line: 94, column: 27, scope: !11525)
!11539 = !DILocation(line: 94, column: 39, scope: !11525)
!11540 = !DILocation(line: 94, column: 65, scope: !11525)
!11541 = distinct !{!11541, !11537, !11542}
!11542 = !DILocation(line: 94, column: 70, scope: !11525)
!11543 = !DILocation(line: 96, column: 29, scope: !11525)
!11544 = !DILocation(line: 96, column: 64, scope: !11525)
!11545 = !DILocation(line: 98, column: 5, scope: !11525)
!11546 = distinct !DISubprogram(name: "__EMI_SetSR", scope: !2188, file: !2188, line: 102, type: !11547, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2187, retainedNodes: !11549)
!11547 = !DISubroutineType(types: !11548)
!11548 = !{null, !61, !61}
!11549 = !{!11550, !11551}
!11550 = !DILocalVariable(name: "bank_no", arg: 1, scope: !11546, file: !2188, line: 102, type: !61)
!11551 = !DILocalVariable(name: "value", arg: 2, scope: !11546, file: !2188, line: 102, type: !61)
!11552 = !DILocation(line: 0, scope: !11546)
!11553 = !DILocation(line: 106, column: 40, scope: !11546)
!11554 = !DILocation(line: 106, column: 77, scope: !11546)
!11555 = !DILocation(line: 106, column: 102, scope: !11546)
!11556 = !DILocation(line: 106, column: 5, scope: !11546)
!11557 = !DILocation(line: 106, column: 19, scope: !11546)
!11558 = !DILocation(line: 106, column: 31, scope: !11546)
!11559 = !DILocation(line: 107, column: 77, scope: !11546)
!11560 = !DILocation(line: 107, column: 60, scope: !11546)
!11561 = !DILocation(line: 107, column: 31, scope: !11546)
!11562 = !DILocation(line: 109, column: 5, scope: !11546)
!11563 = !DILocation(line: 109, column: 27, scope: !11546)
!11564 = !DILocation(line: 109, column: 39, scope: !11546)
!11565 = !DILocation(line: 109, column: 65, scope: !11546)
!11566 = distinct !{!11566, !11562, !11567}
!11567 = !DILocation(line: 109, column: 70, scope: !11546)
!11568 = !DILocation(line: 111, column: 5, scope: !11546)
!11569 = distinct !DISubprogram(name: "__EMI_SetRegValfromCMCP", scope: !2188, file: !2188, line: 114, type: !291, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2187, retainedNodes: !293)
!11570 = !DILocation(line: 117, column: 36, scope: !11569)
!11571 = !DILocation(line: 117, column: 18, scope: !11569)
!11572 = !DILocation(line: 118, column: 37, scope: !11569)
!11573 = !DILocation(line: 118, column: 18, scope: !11569)
!11574 = !DILocation(line: 119, column: 37, scope: !11569)
!11575 = !DILocation(line: 119, column: 19, scope: !11569)
!11576 = !DILocation(line: 120, column: 37, scope: !11569)
!11577 = !DILocation(line: 120, column: 19, scope: !11569)
!11578 = !DILocation(line: 121, column: 37, scope: !11569)
!11579 = !DILocation(line: 121, column: 19, scope: !11569)
!11580 = !DILocation(line: 122, column: 37, scope: !11569)
!11581 = !DILocation(line: 122, column: 19, scope: !11569)
!11582 = !DILocation(line: 123, column: 37, scope: !11569)
!11583 = !DILocation(line: 123, column: 19, scope: !11569)
!11584 = !DILocation(line: 125, column: 37, scope: !11569)
!11585 = !DILocation(line: 125, column: 19, scope: !11569)
!11586 = !DILocation(line: 126, column: 37, scope: !11569)
!11587 = !DILocation(line: 126, column: 19, scope: !11569)
!11588 = !DILocation(line: 127, column: 37, scope: !11569)
!11589 = !DILocation(line: 127, column: 19, scope: !11569)
!11590 = !DILocation(line: 128, column: 37, scope: !11569)
!11591 = !DILocation(line: 128, column: 19, scope: !11569)
!11592 = !DILocation(line: 130, column: 36, scope: !11569)
!11593 = !DILocation(line: 130, column: 18, scope: !11569)
!11594 = !DILocation(line: 131, column: 36, scope: !11569)
!11595 = !DILocation(line: 131, column: 18, scope: !11569)
!11596 = !DILocation(line: 133, column: 5, scope: !11569)
!11597 = distinct !DISubprogram(name: "__EMI_EnableBandwidthLimiter", scope: !2188, file: !2188, line: 140, type: !11598, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2187, retainedNodes: !293)
!11598 = !DISubroutineType(types: !11599)
!11599 = !{!7}
!11600 = !DILocation(line: 144, column: 5, scope: !11597)
!11601 = !DILocation(line: 144, column: 19, scope: !11597)
!11602 = !DILocation(line: 144, column: 28, scope: !11597)
!11603 = !DILocation(line: 147, column: 19, scope: !11597)
!11604 = !DILocation(line: 147, column: 28, scope: !11597)
!11605 = !DILocation(line: 150, column: 19, scope: !11597)
!11606 = !DILocation(line: 150, column: 28, scope: !11597)
!11607 = !DILocation(line: 152, column: 5, scope: !11597)
!11608 = distinct !DISubprogram(name: "TestCase_MBIST", scope: !2188, file: !2188, line: 157, type: !8370, scopeLine: 158, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2187, retainedNodes: !11609)
!11609 = !{!11610, !11611, !11612, !11613, !11614, !11615}
!11610 = !DILocalVariable(name: "mbist_src", scope: !11608, file: !2188, line: 159, type: !61)
!11611 = !DILocalVariable(name: "mbist_len", scope: !11608, file: !2188, line: 159, type: !61)
!11612 = !DILocalVariable(name: "mbist_data", scope: !11608, file: !2188, line: 159, type: !3705)
!11613 = !DILocalVariable(name: "i", scope: !11608, file: !2188, line: 160, type: !61)
!11614 = !DILocalVariable(name: "bist_data_inv", scope: !11608, file: !2188, line: 160, type: !61)
!11615 = !DILocalVariable(name: "bist_data_random", scope: !11608, file: !2188, line: 160, type: !61)
!11616 = !DILocation(line: 159, column: 36, scope: !11608)
!11617 = !DILocation(line: 0, scope: !11608)
!11618 = !DILocation(line: 165, column: 5, scope: !11608)
!11619 = !DILocation(line: 165, column: 19, scope: !11608)
!11620 = !DILocation(line: 165, column: 30, scope: !11608)
!11621 = !DILocation(line: 166, column: 5, scope: !11622)
!11622 = distinct !DILexicalBlock(scope: !11608, file: !2188, line: 166, column: 5)
!11623 = !DILocation(line: 167, column: 9, scope: !11624)
!11624 = distinct !DILexicalBlock(scope: !11625, file: !2188, line: 167, column: 9)
!11625 = distinct !DILexicalBlock(scope: !11626, file: !2188, line: 166, column: 66)
!11626 = distinct !DILexicalBlock(scope: !11622, file: !2188, line: 166, column: 5)
!11627 = !DILocation(line: 168, column: 13, scope: !11628)
!11628 = distinct !DILexicalBlock(scope: !11629, file: !2188, line: 168, column: 13)
!11629 = distinct !DILexicalBlock(scope: !11630, file: !2188, line: 167, column: 34)
!11630 = distinct !DILexicalBlock(scope: !11624, file: !2188, line: 167, column: 9)
!11631 = !DILocation(line: 168, column: 57, scope: !11632)
!11632 = distinct !DILexicalBlock(scope: !11628, file: !2188, line: 168, column: 13)
!11633 = distinct !{!11633, !11627, !11634}
!11634 = !DILocation(line: 183, column: 13, scope: !11628)
!11635 = !DILocation(line: 170, column: 42, scope: !11636)
!11636 = distinct !DILexicalBlock(scope: !11632, file: !2188, line: 168, column: 83)
!11637 = !DILocation(line: 172, column: 42, scope: !11636)
!11638 = !DILocation(line: 174, column: 45, scope: !11636)
!11639 = !DILocation(line: 174, column: 59, scope: !11636)
!11640 = !DILocation(line: 174, column: 154, scope: !11636)
!11641 = !DILocation(line: 174, column: 87, scope: !11636)
!11642 = !DILocation(line: 174, column: 134, scope: !11636)
!11643 = !DILocation(line: 174, column: 42, scope: !11636)
!11644 = !DILocation(line: 175, column: 42, scope: !11636)
!11645 = !DILocation(line: 177, column: 17, scope: !11636)
!11646 = !DILocation(line: 177, column: 39, scope: !11636)
!11647 = !DILocation(line: 177, column: 50, scope: !11636)
!11648 = !DILocation(line: 177, column: 71, scope: !11636)
!11649 = distinct !{!11649, !11645, !11650}
!11650 = !DILocation(line: 177, column: 78, scope: !11636)
!11651 = !DILocation(line: 179, column: 36, scope: !11652)
!11652 = distinct !DILexicalBlock(scope: !11636, file: !2188, line: 179, column: 21)
!11653 = !DILocation(line: 179, column: 47, scope: !11652)
!11654 = !DILocation(line: 179, column: 69, scope: !11652)
!11655 = !DILocation(line: 168, column: 79, scope: !11632)
!11656 = !DILocation(line: 179, column: 21, scope: !11636)
!11657 = !DILocation(line: 167, column: 30, scope: !11630)
!11658 = !DILocation(line: 167, column: 23, scope: !11630)
!11659 = distinct !{!11659, !11623, !11660}
!11660 = !DILocation(line: 184, column: 9, scope: !11624)
!11661 = !DILocation(line: 166, column: 62, scope: !11626)
!11662 = !DILocation(line: 166, column: 43, scope: !11626)
!11663 = distinct !{!11663, !11621, !11664}
!11664 = !DILocation(line: 185, column: 5, scope: !11622)
!11665 = !DILocation(line: 189, column: 1, scope: !11608)
!11666 = distinct !DISubprogram(name: "__EMI_DataAutoTrackingMbistTest", scope: !2188, file: !2188, line: 190, type: !8370, scopeLine: 191, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2187, retainedNodes: !293)
!11667 = !DILocation(line: 192, column: 9, scope: !11668)
!11668 = distinct !DILexicalBlock(scope: !11666, file: !2188, line: 192, column: 9)
!11669 = !DILocation(line: 192, column: 26, scope: !11668)
!11670 = !DILocation(line: 0, scope: !11666)
!11671 = !DILocation(line: 197, column: 1, scope: !11666)
!11672 = distinct !DISubprogram(name: "__EMI_EnableDataAutoTracking", scope: !2188, file: !2188, line: 201, type: !291, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2187, retainedNodes: !11673)
!11673 = !{!11674, !11675}
!11674 = !DILocalVariable(name: "dqy_in_del", scope: !11672, file: !2188, line: 203, type: !1144)
!11675 = !DILocalVariable(name: "dqs_in_del", scope: !11672, file: !2188, line: 204, type: !1144)
!11676 = !DILocation(line: 0, scope: !11672)
!11677 = !DILocation(line: 206, column: 5, scope: !11672)
!11678 = !DILocation(line: 206, column: 19, scope: !11672)
!11679 = !DILocation(line: 206, column: 28, scope: !11672)
!11680 = !DILocation(line: 207, column: 19, scope: !11672)
!11681 = !DILocation(line: 207, column: 28, scope: !11672)
!11682 = !DILocation(line: 208, column: 19, scope: !11672)
!11683 = !DILocation(line: 208, column: 28, scope: !11672)
!11684 = !DILocation(line: 209, column: 19, scope: !11672)
!11685 = !DILocation(line: 209, column: 28, scope: !11672)
!11686 = !DILocation(line: 212, column: 23, scope: !11687)
!11687 = distinct !DILexicalBlock(scope: !11688, file: !2188, line: 211, column: 78)
!11688 = distinct !DILexicalBlock(scope: !11689, file: !2188, line: 211, column: 5)
!11689 = distinct !DILexicalBlock(scope: !11672, file: !2188, line: 211, column: 5)
!11690 = !DILocation(line: 212, column: 32, scope: !11687)
!11691 = !DILocation(line: 213, column: 23, scope: !11687)
!11692 = !DILocation(line: 213, column: 32, scope: !11687)
!11693 = !DILocation(line: 215, column: 19, scope: !11694)
!11694 = distinct !DILexicalBlock(scope: !11687, file: !2188, line: 215, column: 13)
!11695 = !DILocation(line: 215, column: 15, scope: !11694)
!11696 = !DILocation(line: 215, column: 13, scope: !11687)
!11697 = !DILocation(line: 211, column: 40, scope: !11688)
!11698 = !DILocation(line: 211, column: 5, scope: !11689)
!11699 = distinct !{!11699, !11698, !11700}
!11700 = !DILocation(line: 218, column: 5, scope: !11689)
!11701 = !DILocation(line: 211, column: 57, scope: !11688)
!11702 = !DILocation(line: 212, column: 9, scope: !11687)
!11703 = !DILocation(line: 212, column: 45, scope: !11687)
!11704 = !DILocation(line: 212, column: 83, scope: !11687)
!11705 = !DILocation(line: 212, column: 121, scope: !11687)
!11706 = !DILocation(line: 212, column: 70, scope: !11687)
!11707 = !DILocation(line: 212, column: 108, scope: !11687)
!11708 = !DILocation(line: 212, column: 146, scope: !11687)
!11709 = !DILocation(line: 222, column: 49, scope: !11710)
!11710 = distinct !DILexicalBlock(scope: !11711, file: !2188, line: 221, column: 84)
!11711 = distinct !DILexicalBlock(scope: !11712, file: !2188, line: 221, column: 9)
!11712 = distinct !DILexicalBlock(scope: !11713, file: !2188, line: 221, column: 9)
!11713 = distinct !DILexicalBlock(scope: !11714, file: !2188, line: 220, column: 25)
!11714 = distinct !DILexicalBlock(scope: !11672, file: !2188, line: 220, column: 9)
!11715 = !DILocation(line: 222, column: 13, scope: !11710)
!11716 = !DILocation(line: 222, column: 27, scope: !11710)
!11717 = !DILocation(line: 222, column: 36, scope: !11710)
!11718 = !DILocation(line: 224, column: 23, scope: !11719)
!11719 = distinct !DILexicalBlock(scope: !11710, file: !2188, line: 224, column: 17)
!11720 = !DILocation(line: 224, column: 19, scope: !11719)
!11721 = !DILocation(line: 224, column: 17, scope: !11710)
!11722 = distinct !{!11722, !11723, !11724}
!11723 = !DILocation(line: 221, column: 9, scope: !11712)
!11724 = !DILocation(line: 227, column: 9, scope: !11712)
!11725 = !DILocation(line: 230, column: 1, scope: !11672)
!11726 = distinct !DISubprogram(name: "EMI_PowerOn_Init", scope: !2188, file: !2188, line: 253, type: !291, scopeLine: 254, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2187, retainedNodes: !293)
!11727 = !DILocation(line: 257, column: 26, scope: !11726)
!11728 = !DILocation(line: 259, column: 5, scope: !11726)
!11729 = !DILocation(line: 259, column: 19, scope: !11726)
!11730 = !DILocation(line: 259, column: 29, scope: !11726)
!11731 = !DILocation(line: 260, column: 5, scope: !11726)
!11732 = !DILocation(line: 260, column: 27, scope: !11726)
!11733 = !DILocation(line: 260, column: 93, scope: !11726)
!11734 = distinct !{!11734, !11731, !11735}
!11735 = !DILocation(line: 260, column: 98, scope: !11726)
!11736 = !DILocation(line: 261, column: 29, scope: !11726)
!11737 = !DILocation(line: 262, column: 5, scope: !11726)
!11738 = !DILocation(line: 262, column: 27, scope: !11726)
!11739 = !DILocation(line: 262, column: 93, scope: !11726)
!11740 = distinct !{!11740, !11737, !11741}
!11741 = !DILocation(line: 262, column: 98, scope: !11726)
!11742 = !DILocation(line: 264, column: 42, scope: !11726)
!11743 = !DILocation(line: 265, column: 48, scope: !11726)
!11744 = !DILocation(line: 267, column: 5, scope: !11726)
!11745 = !DILocation(line: 267, column: 27, scope: !11726)
!11746 = !DILocation(line: 267, column: 39, scope: !11726)
!11747 = !DILocation(line: 267, column: 65, scope: !11726)
!11748 = distinct !{!11748, !11744, !11749}
!11749 = !DILocation(line: 267, column: 70, scope: !11726)
!11750 = !DILocation(line: 269, column: 5, scope: !11726)
!11751 = !DILocation(line: 273, column: 8, scope: !11726)
!11752 = !DILocation(line: 275, column: 5, scope: !11726)
!11753 = !DILocation(line: 275, column: 27, scope: !11726)
!11754 = !DILocation(line: 275, column: 39, scope: !11726)
!11755 = !DILocation(line: 275, column: 65, scope: !11726)
!11756 = distinct !{!11756, !11752, !11757}
!11757 = !DILocation(line: 275, column: 70, scope: !11726)
!11758 = !DILocation(line: 278, column: 9, scope: !11759)
!11759 = distinct !DILexicalBlock(scope: !11726, file: !2188, line: 278, column: 9)
!11760 = !DILocation(line: 278, column: 44, scope: !11759)
!11761 = !DILocation(line: 278, column: 9, scope: !11726)
!11762 = !DILocation(line: 279, column: 13, scope: !11763)
!11763 = distinct !DILexicalBlock(scope: !11764, file: !2188, line: 279, column: 12)
!11764 = distinct !DILexicalBlock(scope: !11759, file: !2188, line: 278, column: 55)
!11765 = !DILocation(line: 279, column: 48, scope: !11763)
!11766 = !DILocation(line: 279, column: 56, scope: !11763)
!11767 = !DILocation(line: 0, scope: !11763)
!11768 = !DILocation(line: 288, column: 1, scope: !11726)
!11769 = distinct !DISubprogram(name: "custom_setEMI", scope: !2188, file: !2188, line: 294, type: !11770, scopeLine: 295, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2187, retainedNodes: !293)
!11770 = !DISubroutineType(types: !11771)
!11771 = !{!1456}
!11772 = !DILocation(line: 298, column: 5, scope: !11769)
!11773 = !DILocation(line: 300, column: 5, scope: !11769)
!11774 = !DILocation(line: 302, column: 20, scope: !11769)
!11775 = !DILocation(line: 302, column: 18, scope: !11769)
!11776 = !DILocation(line: 303, column: 20, scope: !11769)
!11777 = !DILocation(line: 303, column: 18, scope: !11769)
!11778 = !DILocation(line: 304, column: 20, scope: !11769)
!11779 = !DILocation(line: 304, column: 18, scope: !11769)
!11780 = !DILocation(line: 307, column: 5, scope: !11769)
!11781 = distinct !DISubprogram(name: "custom_setAdvEMI", scope: !2188, file: !2188, line: 312, type: !11770, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2187, retainedNodes: !293)
!11782 = !DILocation(line: 319, column: 29, scope: !11781)
!11783 = !DILocation(line: 319, column: 5, scope: !11781)
!11784 = !DILocation(line: 319, column: 19, scope: !11781)
!11785 = !DILocation(line: 319, column: 27, scope: !11781)
!11786 = !DILocation(line: 320, column: 29, scope: !11781)
!11787 = !DILocation(line: 320, column: 19, scope: !11781)
!11788 = !DILocation(line: 320, column: 27, scope: !11781)
!11789 = !DILocation(line: 322, column: 30, scope: !11781)
!11790 = !DILocation(line: 322, column: 19, scope: !11781)
!11791 = !DILocation(line: 322, column: 28, scope: !11781)
!11792 = !DILocation(line: 324, column: 30, scope: !11781)
!11793 = !DILocation(line: 324, column: 19, scope: !11781)
!11794 = !DILocation(line: 324, column: 28, scope: !11781)
!11795 = !DILocation(line: 326, column: 31, scope: !11781)
!11796 = !DILocation(line: 326, column: 19, scope: !11781)
!11797 = !DILocation(line: 326, column: 29, scope: !11781)
!11798 = !DILocation(line: 327, column: 31, scope: !11781)
!11799 = !DILocation(line: 327, column: 19, scope: !11781)
!11800 = !DILocation(line: 327, column: 29, scope: !11781)
!11801 = !DILocation(line: 332, column: 30, scope: !11781)
!11802 = !DILocation(line: 332, column: 19, scope: !11781)
!11803 = !DILocation(line: 332, column: 28, scope: !11781)
!11804 = !DILocation(line: 333, column: 30, scope: !11781)
!11805 = !DILocation(line: 333, column: 19, scope: !11781)
!11806 = !DILocation(line: 333, column: 28, scope: !11781)
!11807 = !DILocation(line: 334, column: 30, scope: !11781)
!11808 = !DILocation(line: 334, column: 19, scope: !11781)
!11809 = !DILocation(line: 334, column: 28, scope: !11781)
!11810 = !DILocation(line: 336, column: 30, scope: !11781)
!11811 = !DILocation(line: 336, column: 19, scope: !11781)
!11812 = !DILocation(line: 336, column: 28, scope: !11781)
!11813 = !DILocation(line: 337, column: 30, scope: !11781)
!11814 = !DILocation(line: 337, column: 19, scope: !11781)
!11815 = !DILocation(line: 337, column: 28, scope: !11781)
!11816 = !DILocation(line: 338, column: 30, scope: !11781)
!11817 = !DILocation(line: 338, column: 19, scope: !11781)
!11818 = !DILocation(line: 338, column: 28, scope: !11781)
!11819 = !DILocation(line: 339, column: 30, scope: !11781)
!11820 = !DILocation(line: 339, column: 19, scope: !11781)
!11821 = !DILocation(line: 339, column: 28, scope: !11781)
!11822 = !DILocation(line: 341, column: 5, scope: !11781)
!11823 = !DILocation(line: 345, column: 5, scope: !11781)
!11824 = !DILocation(line: 345, column: 19, scope: !11781)
!11825 = !DILocation(line: 345, column: 28, scope: !11781)
!11826 = !DILocation(line: 346, column: 5, scope: !11781)
!11827 = !DILocation(line: 346, column: 28, scope: !11781)
!11828 = !DILocation(line: 346, column: 82, scope: !11781)
!11829 = distinct !{!11829, !11826, !11830}
!11830 = !DILocation(line: 346, column: 87, scope: !11781)
!11831 = !DILocation(line: 347, column: 28, scope: !11781)
!11832 = !DILocation(line: 348, column: 5, scope: !11781)
!11833 = !DILocation(line: 348, column: 28, scope: !11781)
!11834 = !DILocation(line: 348, column: 82, scope: !11781)
!11835 = distinct !{!11835, !11832, !11836}
!11836 = !DILocation(line: 348, column: 87, scope: !11781)
!11837 = !DILocation(line: 349, column: 28, scope: !11781)
!11838 = !DILocation(line: 351, column: 5, scope: !11781)
!11839 = !DILocation(line: 353, column: 5, scope: !11781)
!11840 = distinct !DISubprogram(name: "EMI_Setting_Save", scope: !2188, file: !2188, line: 358, type: !291, scopeLine: 359, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2187, retainedNodes: !293)
!11841 = !DILocation(line: 361, column: 36, scope: !11840)
!11842 = !DILocation(line: 361, column: 50, scope: !11840)
!11843 = !DILocation(line: 361, column: 34, scope: !11840)
!11844 = !DILocation(line: 362, column: 50, scope: !11840)
!11845 = !DILocation(line: 362, column: 34, scope: !11840)
!11846 = !DILocation(line: 363, column: 50, scope: !11840)
!11847 = !DILocation(line: 363, column: 34, scope: !11840)
!11848 = !DILocation(line: 364, column: 50, scope: !11840)
!11849 = !DILocation(line: 364, column: 34, scope: !11840)
!11850 = !DILocation(line: 365, column: 50, scope: !11840)
!11851 = !DILocation(line: 365, column: 34, scope: !11840)
!11852 = !DILocation(line: 366, column: 50, scope: !11840)
!11853 = !DILocation(line: 366, column: 34, scope: !11840)
!11854 = !DILocation(line: 367, column: 50, scope: !11840)
!11855 = !DILocation(line: 367, column: 34, scope: !11840)
!11856 = !DILocation(line: 368, column: 50, scope: !11840)
!11857 = !DILocation(line: 368, column: 34, scope: !11840)
!11858 = !DILocation(line: 369, column: 50, scope: !11840)
!11859 = !DILocation(line: 369, column: 34, scope: !11840)
!11860 = !DILocation(line: 370, column: 50, scope: !11840)
!11861 = !DILocation(line: 370, column: 34, scope: !11840)
!11862 = !DILocation(line: 371, column: 50, scope: !11840)
!11863 = !DILocation(line: 371, column: 34, scope: !11840)
!11864 = !DILocation(line: 372, column: 50, scope: !11840)
!11865 = !DILocation(line: 372, column: 34, scope: !11840)
!11866 = !DILocation(line: 373, column: 51, scope: !11840)
!11867 = !DILocation(line: 373, column: 35, scope: !11840)
!11868 = !DILocation(line: 374, column: 51, scope: !11840)
!11869 = !DILocation(line: 374, column: 35, scope: !11840)
!11870 = !DILocation(line: 375, column: 50, scope: !11840)
!11871 = !DILocation(line: 375, column: 34, scope: !11840)
!11872 = !DILocation(line: 376, column: 50, scope: !11840)
!11873 = !DILocation(line: 376, column: 34, scope: !11840)
!11874 = !DILocation(line: 377, column: 50, scope: !11840)
!11875 = !DILocation(line: 377, column: 34, scope: !11840)
!11876 = !DILocation(line: 378, column: 50, scope: !11840)
!11877 = !DILocation(line: 378, column: 34, scope: !11840)
!11878 = !DILocation(line: 379, column: 50, scope: !11840)
!11879 = !DILocation(line: 379, column: 34, scope: !11840)
!11880 = !DILocation(line: 380, column: 50, scope: !11840)
!11881 = !DILocation(line: 380, column: 34, scope: !11840)
!11882 = !DILocation(line: 382, column: 1, scope: !11840)
!11883 = distinct !DISubprogram(name: "EMI_Setting_restore", scope: !2188, file: !2188, line: 384, type: !291, scopeLine: 385, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2187, retainedNodes: !293)
!11884 = !DILocation(line: 387, column: 5, scope: !11883)
!11885 = !DILocation(line: 387, column: 27, scope: !11883)
!11886 = !DILocation(line: 387, column: 36, scope: !11883)
!11887 = !DILocation(line: 387, column: 76, scope: !11883)
!11888 = distinct !{!11888, !11884, !11889}
!11889 = !DILocation(line: 387, column: 84, scope: !11883)
!11890 = !DILocation(line: 388, column: 50, scope: !11883)
!11891 = !DILocation(line: 388, column: 19, scope: !11883)
!11892 = !DILocation(line: 388, column: 28, scope: !11883)
!11893 = !DILocation(line: 389, column: 50, scope: !11883)
!11894 = !DILocation(line: 389, column: 19, scope: !11883)
!11895 = !DILocation(line: 389, column: 28, scope: !11883)
!11896 = !DILocation(line: 390, column: 50, scope: !11883)
!11897 = !DILocation(line: 390, column: 19, scope: !11883)
!11898 = !DILocation(line: 390, column: 28, scope: !11883)
!11899 = !DILocation(line: 391, column: 50, scope: !11883)
!11900 = !DILocation(line: 391, column: 19, scope: !11883)
!11901 = !DILocation(line: 391, column: 28, scope: !11883)
!11902 = !DILocation(line: 392, column: 50, scope: !11883)
!11903 = !DILocation(line: 392, column: 19, scope: !11883)
!11904 = !DILocation(line: 392, column: 28, scope: !11883)
!11905 = !DILocation(line: 393, column: 50, scope: !11883)
!11906 = !DILocation(line: 393, column: 19, scope: !11883)
!11907 = !DILocation(line: 393, column: 28, scope: !11883)
!11908 = !DILocation(line: 394, column: 51, scope: !11883)
!11909 = !DILocation(line: 394, column: 19, scope: !11883)
!11910 = !DILocation(line: 394, column: 29, scope: !11883)
!11911 = !DILocation(line: 395, column: 51, scope: !11883)
!11912 = !DILocation(line: 395, column: 19, scope: !11883)
!11913 = !DILocation(line: 395, column: 29, scope: !11883)
!11914 = !DILocation(line: 396, column: 50, scope: !11883)
!11915 = !DILocation(line: 396, column: 19, scope: !11883)
!11916 = !DILocation(line: 396, column: 28, scope: !11883)
!11917 = !DILocation(line: 397, column: 50, scope: !11883)
!11918 = !DILocation(line: 397, column: 19, scope: !11883)
!11919 = !DILocation(line: 397, column: 28, scope: !11883)
!11920 = !DILocation(line: 398, column: 50, scope: !11883)
!11921 = !DILocation(line: 398, column: 19, scope: !11883)
!11922 = !DILocation(line: 398, column: 28, scope: !11883)
!11923 = !DILocation(line: 399, column: 50, scope: !11883)
!11924 = !DILocation(line: 399, column: 19, scope: !11883)
!11925 = !DILocation(line: 399, column: 28, scope: !11883)
!11926 = !DILocation(line: 400, column: 50, scope: !11883)
!11927 = !DILocation(line: 400, column: 19, scope: !11883)
!11928 = !DILocation(line: 400, column: 28, scope: !11883)
!11929 = !DILocation(line: 401, column: 50, scope: !11883)
!11930 = !DILocation(line: 401, column: 19, scope: !11883)
!11931 = !DILocation(line: 401, column: 28, scope: !11883)
!11932 = !DILocation(line: 402, column: 50, scope: !11883)
!11933 = !DILocation(line: 402, column: 19, scope: !11883)
!11934 = !DILocation(line: 402, column: 28, scope: !11883)
!11935 = !DILocation(line: 403, column: 50, scope: !11883)
!11936 = !DILocation(line: 403, column: 19, scope: !11883)
!11937 = !DILocation(line: 403, column: 28, scope: !11883)
!11938 = !DILocation(line: 404, column: 50, scope: !11883)
!11939 = !DILocation(line: 404, column: 19, scope: !11883)
!11940 = !DILocation(line: 404, column: 28, scope: !11883)
!11941 = !DILocation(line: 405, column: 50, scope: !11883)
!11942 = !DILocation(line: 405, column: 19, scope: !11883)
!11943 = !DILocation(line: 405, column: 28, scope: !11883)
!11944 = !DILocation(line: 406, column: 50, scope: !11883)
!11945 = !DILocation(line: 406, column: 19, scope: !11883)
!11946 = !DILocation(line: 406, column: 28, scope: !11883)
!11947 = !DILocation(line: 408, column: 1, scope: !11883)
!11948 = distinct !DISubprogram(name: "mtk_psram_half_sleep_exit", scope: !2188, file: !2188, line: 410, type: !291, scopeLine: 411, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2187, retainedNodes: !293)
!11949 = !DILocation(line: 413, column: 29, scope: !11948)
!11950 = !DILocation(line: 413, column: 43, scope: !11948)
!11951 = !DILocation(line: 413, column: 51, scope: !11948)
!11952 = !DILocation(line: 413, column: 27, scope: !11948)
!11953 = !DILocation(line: 416, column: 19, scope: !11948)
!11954 = !DILocation(line: 416, column: 29, scope: !11948)
!11955 = !DILocation(line: 417, column: 5, scope: !11948)
!11956 = !DILocation(line: 417, column: 27, scope: !11948)
!11957 = !DILocation(line: 417, column: 93, scope: !11948)
!11958 = distinct !{!11958, !11955, !11959}
!11959 = !DILocation(line: 417, column: 98, scope: !11948)
!11960 = !DILocation(line: 418, column: 29, scope: !11948)
!11961 = !DILocation(line: 419, column: 5, scope: !11948)
!11962 = !DILocation(line: 419, column: 27, scope: !11948)
!11963 = !DILocation(line: 419, column: 93, scope: !11948)
!11964 = distinct !{!11964, !11961, !11965}
!11965 = !DILocation(line: 419, column: 98, scope: !11948)
!11966 = !DILocation(line: 421, column: 5, scope: !11948)
!11967 = !DILocation(line: 422, column: 5, scope: !11948)
!11968 = !DILocation(line: 422, column: 19, scope: !11948)
!11969 = !DILocation(line: 422, column: 28, scope: !11948)
!11970 = !DILocation(line: 423, column: 5, scope: !11948)
!11971 = !DILocation(line: 423, column: 28, scope: !11948)
!11972 = !DILocation(line: 423, column: 82, scope: !11948)
!11973 = distinct !{!11973, !11970, !11974}
!11974 = !DILocation(line: 423, column: 87, scope: !11948)
!11975 = !DILocation(line: 424, column: 28, scope: !11948)
!11976 = !DILocation(line: 425, column: 5, scope: !11948)
!11977 = !DILocation(line: 425, column: 28, scope: !11948)
!11978 = !DILocation(line: 425, column: 82, scope: !11948)
!11979 = distinct !{!11979, !11976, !11980}
!11980 = !DILocation(line: 425, column: 87, scope: !11948)
!11981 = !DILocation(line: 426, column: 28, scope: !11948)
!11982 = !DILocation(line: 428, column: 50, scope: !11948)
!11983 = !DILocation(line: 428, column: 19, scope: !11948)
!11984 = !DILocation(line: 428, column: 28, scope: !11948)
!11985 = !DILocation(line: 432, column: 1, scope: !11948)
!11986 = distinct !DISubprogram(name: "mtk_psram_half_sleep_enter", scope: !2188, file: !2188, line: 434, type: !291, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2187, retainedNodes: !293)
!11987 = !DILocation(line: 437, column: 5, scope: !11986)
!11988 = !DILocation(line: 440, column: 5, scope: !11986)
!11989 = !DILocation(line: 440, column: 27, scope: !11986)
!11990 = !DILocation(line: 440, column: 36, scope: !11986)
!11991 = !DILocation(line: 440, column: 76, scope: !11986)
!11992 = distinct !{!11992, !11988, !11993}
!11993 = !DILocation(line: 440, column: 84, scope: !11986)
!11994 = !DILocation(line: 441, column: 45, scope: !11986)
!11995 = !DILocation(line: 441, column: 54, scope: !11986)
!11996 = !DILocation(line: 441, column: 28, scope: !11986)
!11997 = !DILocation(line: 442, column: 19, scope: !11986)
!11998 = !DILocation(line: 442, column: 31, scope: !11986)
!11999 = !DILocation(line: 443, column: 5, scope: !11986)
!12000 = !DILocation(line: 443, column: 27, scope: !11986)
!12001 = !DILocation(line: 443, column: 39, scope: !11986)
!12002 = !DILocation(line: 443, column: 65, scope: !11986)
!12003 = distinct !{!12003, !11999, !12004}
!12004 = !DILocation(line: 443, column: 70, scope: !11986)
!12005 = !DILocation(line: 444, column: 19, scope: !11986)
!12006 = !DILocation(line: 444, column: 28, scope: !11986)
!12007 = !DILocation(line: 445, column: 5, scope: !11986)
!12008 = !DILocation(line: 445, column: 27, scope: !11986)
!12009 = !DILocation(line: 445, column: 91, scope: !11986)
!12010 = distinct !{!12010, !12007, !12011}
!12011 = !DILocation(line: 445, column: 96, scope: !11986)
!12012 = !DILocation(line: 447, column: 43, scope: !11986)
!12013 = !DILocation(line: 447, column: 51, scope: !11986)
!12014 = !DILocation(line: 447, column: 27, scope: !11986)
!12015 = !DILocation(line: 450, column: 1, scope: !11986)
!12016 = distinct !DISubprogram(name: "EMI_DynamicClockSwitch", scope: !2188, file: !2188, line: 452, type: !12017, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2187, retainedNodes: !12020)
!12017 = !DISubroutineType(types: !12018)
!12018 = !{!1144, !12019}
!12019 = !DIDerivedType(tag: DW_TAG_typedef, name: "emi_clock", file: !2191, line: 43, baseType: !2190)
!12020 = !{!12021, !12022}
!12021 = !DILocalVariable(name: "clock", arg: 1, scope: !12016, file: !2188, line: 452, type: !12019)
!12022 = !DILocalVariable(name: "delay", scope: !12016, file: !2188, line: 457, type: !60)
!12023 = !DILocation(line: 0, scope: !12016)
!12024 = !DILocation(line: 457, column: 5, scope: !12016)
!12025 = !DILocation(line: 457, column: 23, scope: !12016)
!12026 = !DILocation(line: 458, column: 9, scope: !12016)
!12027 = !DILocation(line: 465, column: 9, scope: !12028)
!12028 = distinct !DILexicalBlock(scope: !12029, file: !2188, line: 458, column: 39)
!12029 = distinct !DILexicalBlock(scope: !12016, file: !2188, line: 458, column: 9)
!12030 = !DILocation(line: 465, column: 23, scope: !12028)
!12031 = !DILocation(line: 465, column: 32, scope: !12028)
!12032 = !DILocation(line: 466, column: 32, scope: !12028)
!12033 = !DILocation(line: 467, column: 9, scope: !12028)
!12034 = !DILocation(line: 467, column: 32, scope: !12028)
!12035 = !DILocation(line: 467, column: 86, scope: !12028)
!12036 = distinct !{!12036, !12033, !12037}
!12037 = !DILocation(line: 467, column: 91, scope: !12028)
!12038 = !DILocation(line: 468, column: 32, scope: !12028)
!12039 = !DILocation(line: 469, column: 9, scope: !12028)
!12040 = !DILocation(line: 469, column: 32, scope: !12028)
!12041 = !DILocation(line: 469, column: 86, scope: !12028)
!12042 = distinct !{!12042, !12039, !12043}
!12043 = !DILocation(line: 469, column: 91, scope: !12028)
!12044 = !DILocation(line: 470, column: 32, scope: !12028)
!12045 = !DILocation(line: 472, column: 20, scope: !12046)
!12046 = distinct !DILexicalBlock(scope: !12028, file: !2188, line: 472, column: 9)
!12047 = !DILocation(line: 472, column: 25, scope: !12048)
!12048 = distinct !DILexicalBlock(scope: !12046, file: !2188, line: 472, column: 9)
!12049 = !DILocation(line: 472, column: 31, scope: !12048)
!12050 = !DILocation(line: 472, column: 9, scope: !12046)
!12051 = !DILocation(line: 472, column: 44, scope: !12048)
!12052 = distinct !{!12052, !12050, !12053}
!12053 = !DILocation(line: 472, column: 47, scope: !12046)
!12054 = !DILocation(line: 478, column: 9, scope: !12055)
!12055 = distinct !DILexicalBlock(scope: !12056, file: !2188, line: 477, column: 12)
!12056 = distinct !DILexicalBlock(scope: !12029, file: !2188, line: 475, column: 16)
!12057 = !DILocation(line: 483, column: 1, scope: !12016)
!12058 = distinct !DISubprogram(name: "emi_mask_master", scope: !2188, file: !2188, line: 487, type: !291, scopeLine: 488, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2187, retainedNodes: !293)
!12059 = !DILocation(line: 490, column: 30, scope: !12058)
!12060 = !DILocation(line: 490, column: 44, scope: !12058)
!12061 = !DILocation(line: 490, column: 53, scope: !12058)
!12062 = !DILocation(line: 490, column: 28, scope: !12058)
!12063 = !DILocation(line: 492, column: 1, scope: !12058)
!12064 = distinct !DISubprogram(name: "emi_unmask_master", scope: !2188, file: !2188, line: 494, type: !291, scopeLine: 495, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2187, retainedNodes: !293)
!12065 = !DILocation(line: 497, column: 30, scope: !12064)
!12066 = !DILocation(line: 497, column: 44, scope: !12064)
!12067 = !DILocation(line: 497, column: 53, scope: !12064)
!12068 = !DILocation(line: 497, column: 28, scope: !12064)
!12069 = !DILocation(line: 500, column: 1, scope: !12064)
!12070 = distinct !DISubprogram(name: "is_clk_use_lfosc", scope: !2354, file: !2354, line: 56, type: !8851, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !293)
!12071 = !DILocation(line: 61, column: 5, scope: !12070)
!12072 = distinct !DISubprogram(name: "is_clk_use_mpll", scope: !2354, file: !2354, line: 65, type: !8851, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !293)
!12073 = !DILocation(line: 70, column: 5, scope: !12072)
!12074 = distinct !DISubprogram(name: "cm_bus_clk_208m", scope: !2354, file: !2354, line: 74, type: !291, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !293)
!12075 = !DILocation(line: 79, column: 9, scope: !12076)
!12076 = distinct !DILexicalBlock(scope: !12077, file: !2354, line: 78, column: 12)
!12077 = distinct !DILexicalBlock(scope: !12074, file: !2354, line: 76, column: 9)
!12078 = !DILocation(line: 81, column: 1, scope: !12074)
!12079 = distinct !DISubprogram(name: "cm_bus_clk_104m", scope: !2354, file: !2354, line: 83, type: !291, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !293)
!12080 = !DILocation(line: 88, column: 9, scope: !12081)
!12081 = distinct !DILexicalBlock(scope: !12082, file: !2354, line: 87, column: 12)
!12082 = distinct !DILexicalBlock(scope: !12079, file: !2354, line: 85, column: 9)
!12083 = !DILocation(line: 90, column: 1, scope: !12079)
!12084 = distinct !DISubprogram(name: "cm_bus_clk_26m", scope: !2354, file: !2354, line: 92, type: !291, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !293)
!12085 = !DILocation(line: 97, column: 9, scope: !12086)
!12086 = distinct !DILexicalBlock(scope: !12087, file: !2354, line: 96, column: 12)
!12087 = distinct !DILexicalBlock(scope: !12084, file: !2354, line: 94, column: 9)
!12088 = !DILocation(line: 99, column: 1, scope: !12084)
!12089 = distinct !DISubprogram(name: "peri_clk_26m", scope: !2354, file: !2354, line: 101, type: !291, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !293)
!12090 = !DILocation(line: 106, column: 9, scope: !12091)
!12091 = distinct !DILexicalBlock(scope: !12092, file: !2354, line: 105, column: 12)
!12092 = distinct !DILexicalBlock(scope: !12089, file: !2354, line: 103, column: 9)
!12093 = !DILocation(line: 108, column: 1, scope: !12089)
!12094 = distinct !DISubprogram(name: "__io_putchar", scope: !2366, file: !2366, line: 64, type: !12095, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2365, retainedNodes: !12097)
!12095 = !DISubroutineType(types: !12096)
!12096 = !{!7, !7}
!12097 = !{!12098}
!12098 = !DILocalVariable(name: "ch", arg: 1, scope: !12094, file: !2366, line: 64, type: !7)
!12099 = !DILocation(line: 0, scope: !12094)
!12100 = !DILocation(line: 71, column: 5, scope: !12094)
!12101 = distinct !DISubprogram(name: "main", scope: !2366, file: !2366, line: 159, type: !11598, scopeLine: 160, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2365, retainedNodes: !293)
!12102 = !DILocation(line: 162, column: 5, scope: !12101)
!12103 = !DILocation(line: 164, column: 5, scope: !12101)
!12104 = !DILocation(line: 167, column: 5, scope: !12101)
!12105 = !DILocation(line: 319, column: 3, scope: !12106, inlinedAt: !12107)
!12106 = distinct !DISubprogram(name: "__enable_irq", scope: !7464, file: !7464, line: 317, type: !291, scopeLine: 318, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2365, retainedNodes: !293)
!12107 = distinct !DILocation(line: 170, column: 5, scope: !12101)
!12108 = !{i64 660124}
!12109 = !DILocation(line: 496, column: 3, scope: !12110, inlinedAt: !12111)
!12110 = distinct !DISubprogram(name: "__enable_fault_irq", scope: !7464, file: !7464, line: 494, type: !291, scopeLine: 495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2365, retainedNodes: !293)
!12111 = distinct !DILocation(line: 171, column: 5, scope: !12101)
!12112 = !{i64 664399}
!12113 = !DILocation(line: 174, column: 5, scope: !12101)
!12114 = !DILocation(line: 176, column: 5, scope: !12101)
!12115 = distinct !DISubprogram(name: "SystemClock_Config", scope: !2366, file: !2366, line: 79, type: !291, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2365, retainedNodes: !293)
!12116 = !DILocation(line: 81, column: 5, scope: !12115)
!12117 = !DILocation(line: 82, column: 1, scope: !12115)
!12118 = distinct !DISubprogram(name: "prvSetupHardware", scope: !2366, file: !2366, line: 89, type: !291, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2365, retainedNodes: !293)
!12119 = !DILocation(line: 92, column: 5, scope: !12118)
!12120 = !DILocation(line: 93, column: 5, scope: !12118)
!12121 = !DILocation(line: 94, column: 1, scope: !12118)
!12122 = distinct !DISubprogram(name: "uart_loopback_data_dma_example", scope: !2366, file: !2366, line: 114, type: !291, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2365, retainedNodes: !12123)
!12123 = !{!12124, !12132, !12143, !12144}
!12124 = !DILocalVariable(name: "basic_config", scope: !12122, file: !2366, line: 116, type: !12125)
!12125 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_config_t", file: !878, line: 378, baseType: !12126)
!12126 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !878, line: 373, size: 128, elements: !12127)
!12127 = !{!12128, !12129, !12130, !12131}
!12128 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !12126, file: !878, line: 374, baseType: !5868, size: 32)
!12129 = !DIDerivedType(tag: DW_TAG_member, name: "word_length", scope: !12126, file: !878, line: 375, baseType: !5918, size: 32, offset: 32)
!12130 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bit", scope: !12126, file: !878, line: 376, baseType: !5920, size: 32, offset: 64)
!12131 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !12126, file: !878, line: 377, baseType: !5922, size: 32, offset: 96)
!12132 = !DILocalVariable(name: "dma_config", scope: !12122, file: !2366, line: 117, type: !12133)
!12133 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_dma_config_t", file: !878, line: 390, baseType: !12134)
!12134 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !878, line: 382, size: 224, elements: !12135)
!12135 = !{!12136, !12137, !12138, !12139, !12140, !12141, !12142}
!12136 = !DIDerivedType(tag: DW_TAG_member, name: "send_vfifo_buffer", scope: !12134, file: !878, line: 383, baseType: !969, size: 32)
!12137 = !DIDerivedType(tag: DW_TAG_member, name: "send_vfifo_buffer_size", scope: !12134, file: !878, line: 384, baseType: !61, size: 32, offset: 32)
!12138 = !DIDerivedType(tag: DW_TAG_member, name: "send_vfifo_threshold_size", scope: !12134, file: !878, line: 385, baseType: !61, size: 32, offset: 64)
!12139 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_buffer", scope: !12134, file: !878, line: 386, baseType: !969, size: 32, offset: 96)
!12140 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_buffer_size", scope: !12134, file: !878, line: 387, baseType: !61, size: 32, offset: 128)
!12141 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_threshold_size", scope: !12134, file: !878, line: 388, baseType: !61, size: 32, offset: 160)
!12142 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_alert_size", scope: !12134, file: !878, line: 389, baseType: !61, size: 32, offset: 192)
!12143 = !DILocalVariable(name: "buffer", scope: !12122, file: !2366, line: 118, type: !2374)
!12144 = !DILocalVariable(name: "length", scope: !12122, file: !2366, line: 119, type: !61)
!12145 = !DILocation(line: 116, column: 5, scope: !12122)
!12146 = !DILocation(line: 116, column: 23, scope: !12122)
!12147 = !DILocation(line: 117, column: 5, scope: !12122)
!12148 = !DILocation(line: 117, column: 27, scope: !12122)
!12149 = !DILocation(line: 118, column: 5, scope: !12122)
!12150 = !DILocation(line: 118, column: 13, scope: !12122)
!12151 = !DILocation(line: 122, column: 5, scope: !12122)
!12152 = !DILocation(line: 123, column: 5, scope: !12122)
!12153 = !DILocation(line: 124, column: 5, scope: !12122)
!12154 = !DILocation(line: 125, column: 5, scope: !12122)
!12155 = !DILocation(line: 128, column: 18, scope: !12122)
!12156 = !DILocation(line: 128, column: 27, scope: !12122)
!12157 = !DILocation(line: 129, column: 18, scope: !12122)
!12158 = !DILocation(line: 129, column: 25, scope: !12122)
!12159 = !DILocation(line: 130, column: 18, scope: !12122)
!12160 = !DILocation(line: 130, column: 27, scope: !12122)
!12161 = !DILocation(line: 131, column: 18, scope: !12122)
!12162 = !DILocation(line: 131, column: 30, scope: !12122)
!12163 = !DILocation(line: 132, column: 5, scope: !12122)
!12164 = !DILocation(line: 135, column: 16, scope: !12122)
!12165 = !DILocation(line: 135, column: 41, scope: !12122)
!12166 = !DILocation(line: 136, column: 16, scope: !12122)
!12167 = !DILocation(line: 136, column: 37, scope: !12122)
!12168 = !DILocation(line: 137, column: 16, scope: !12122)
!12169 = !DILocation(line: 137, column: 42, scope: !12122)
!12170 = !DILocation(line: 138, column: 16, scope: !12122)
!12171 = !DILocation(line: 138, column: 45, scope: !12122)
!12172 = !DILocation(line: 139, column: 16, scope: !12122)
!12173 = !DILocation(line: 139, column: 34, scope: !12122)
!12174 = !DILocation(line: 140, column: 16, scope: !12122)
!12175 = !DILocation(line: 140, column: 39, scope: !12122)
!12176 = !DILocation(line: 141, column: 16, scope: !12122)
!12177 = !DILocation(line: 141, column: 42, scope: !12122)
!12178 = !DILocation(line: 142, column: 5, scope: !12122)
!12179 = !DILocation(line: 143, column: 5, scope: !12122)
!12180 = !DILocation(line: 146, column: 5, scope: !12122)
!12181 = !DILocation(line: 149, column: 5, scope: !12122)
!12182 = !DILocation(line: 150, column: 13, scope: !12183)
!12183 = distinct !DILexicalBlock(scope: !12184, file: !2366, line: 150, column: 13)
!12184 = distinct !DILexicalBlock(scope: !12122, file: !2366, line: 149, column: 15)
!12185 = !DILocation(line: 150, column: 13, scope: !12184)
!12186 = !DILocation(line: 151, column: 22, scope: !12187)
!12187 = distinct !DILexicalBlock(scope: !12183, file: !2366, line: 150, column: 43)
!12188 = !DILocation(line: 0, scope: !12122)
!12189 = !DILocation(line: 152, column: 13, scope: !12187)
!12190 = !DILocation(line: 153, column: 13, scope: !12187)
!12191 = !DILocation(line: 154, column: 34, scope: !12187)
!12192 = !DILocation(line: 155, column: 9, scope: !12187)
!12193 = distinct !{!12193, !12181, !12194}
!12194 = !DILocation(line: 156, column: 5, scope: !12122)
!12195 = distinct !DISubprogram(name: "uart_read_from_input", scope: !2366, file: !2366, line: 102, type: !953, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2365, retainedNodes: !12196)
!12196 = !{!12197, !12198}
!12197 = !DILocalVariable(name: "event", arg: 1, scope: !12195, file: !2366, line: 102, type: !955)
!12198 = !DILocalVariable(name: "user_data", arg: 2, scope: !12195, file: !2366, line: 102, type: !88)
!12199 = !DILocation(line: 0, scope: !12195)
!12200 = !DILocation(line: 104, column: 15, scope: !12201)
!12201 = distinct !DILexicalBlock(scope: !12195, file: !2366, line: 104, column: 9)
!12202 = !DILocation(line: 104, column: 9, scope: !12195)
!12203 = !DILocation(line: 105, column: 30, scope: !12204)
!12204 = distinct !DILexicalBlock(scope: !12201, file: !2366, line: 104, column: 48)
!12205 = !DILocation(line: 106, column: 5, scope: !12204)
!12206 = !DILocation(line: 107, column: 1, scope: !12195)
!12207 = distinct !DISubprogram(name: "_close", scope: !2382, file: !2382, line: 5, type: !12095, scopeLine: 6, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2574, retainedNodes: !12208)
!12208 = !{!12209}
!12209 = !DILocalVariable(name: "file", arg: 1, scope: !12207, file: !2382, line: 5, type: !7)
!12210 = !DILocation(line: 0, scope: !12207)
!12211 = !DILocation(line: 7, column: 5, scope: !12207)
!12212 = distinct !DISubprogram(name: "_fstat", scope: !2382, file: !2382, line: 10, type: !12213, scopeLine: 11, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2574, retainedNodes: !12261)
!12213 = !DISubroutineType(types: !12214)
!12214 = !{!7, !7, !12215}
!12215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12216, size: 32)
!12216 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !12217, line: 27, size: 704, elements: !12218)
!12217 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/stat.h", directory: "/home/mjshen/RTOSExploration")
!12218 = !{!12219, !12222, !12225, !12228, !12231, !12234, !12237, !12238, !12241, !12251, !12252, !12253, !12256, !12259}
!12219 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !12216, file: !12217, line: 29, baseType: !12220, size: 16)
!12220 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !2386, line: 161, baseType: !12221)
!12221 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !2426, line: 56, baseType: !1641)
!12222 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !12216, file: !12217, line: 30, baseType: !12223, size: 16, offset: 16)
!12223 = !DIDerivedType(tag: DW_TAG_typedef, name: "ino_t", file: !2386, line: 139, baseType: !12224)
!12224 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !2426, line: 75, baseType: !1238)
!12225 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !12216, file: !12217, line: 31, baseType: !12226, size: 32, offset: 32)
!12226 = !DIDerivedType(tag: DW_TAG_typedef, name: "mode_t", file: !2386, line: 189, baseType: !12227)
!12227 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !2426, line: 90, baseType: !63)
!12228 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !12216, file: !12217, line: 32, baseType: !12229, size: 16, offset: 64)
!12229 = !DIDerivedType(tag: DW_TAG_typedef, name: "nlink_t", file: !2386, line: 194, baseType: !12230)
!12230 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !2426, line: 209, baseType: !1238)
!12231 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !12216, file: !12217, line: 33, baseType: !12232, size: 16, offset: 80)
!12232 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !2386, line: 165, baseType: !12233)
!12233 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !2426, line: 60, baseType: !1238)
!12234 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !12216, file: !12217, line: 34, baseType: !12235, size: 16, offset: 96)
!12235 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !2386, line: 169, baseType: !12236)
!12236 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !2426, line: 63, baseType: !1238)
!12237 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !12216, file: !12217, line: 35, baseType: !12220, size: 16, offset: 112)
!12238 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !12216, file: !12217, line: 36, baseType: !12239, size: 32, offset: 128)
!12239 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !2386, line: 157, baseType: !12240)
!12240 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !2426, line: 102, baseType: !2442)
!12241 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !12216, file: !12217, line: 42, baseType: !12242, size: 128, offset: 192)
!12242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !12243, line: 47, size: 128, elements: !12244)
!12243 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_timespec.h", directory: "/home/mjshen/RTOSExploration")
!12244 = !{!12245, !12250}
!12245 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !12242, file: !12243, line: 48, baseType: !12246, size: 64)
!12246 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !12247, line: 42, baseType: !12248)
!12247 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_timeval.h", directory: "/home/mjshen/RTOSExploration")
!12248 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int_least64_t", file: !64, line: 200, baseType: !12249)
!12249 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!12250 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !12242, file: !12243, line: 49, baseType: !2427, size: 32, offset: 64)
!12251 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !12216, file: !12217, line: 43, baseType: !12242, size: 128, offset: 320)
!12252 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !12216, file: !12217, line: 44, baseType: !12242, size: 128, offset: 448)
!12253 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !12216, file: !12217, line: 45, baseType: !12254, size: 32, offset: 576)
!12254 = !DIDerivedType(tag: DW_TAG_typedef, name: "blksize_t", file: !2386, line: 102, baseType: !12255)
!12255 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !2426, line: 34, baseType: !2427)
!12256 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !12216, file: !12217, line: 46, baseType: !12257, size: 32, offset: 608)
!12257 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !2386, line: 97, baseType: !12258)
!12258 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !2426, line: 30, baseType: !2427)
!12259 = !DIDerivedType(tag: DW_TAG_member, name: "st_spare4", scope: !12216, file: !12217, line: 48, baseType: !12260, size: 64, offset: 640)
!12260 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2427, size: 64, elements: !480)
!12261 = !{!12262, !12263}
!12262 = !DILocalVariable(name: "file", arg: 1, scope: !12212, file: !2382, line: 10, type: !7)
!12263 = !DILocalVariable(name: "st", arg: 2, scope: !12212, file: !2382, line: 10, type: !12215)
!12264 = !DILocation(line: 0, scope: !12212)
!12265 = !DILocation(line: 12, column: 5, scope: !12212)
!12266 = distinct !DISubprogram(name: "_isatty", scope: !2382, file: !2382, line: 15, type: !12095, scopeLine: 16, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2574, retainedNodes: !12267)
!12267 = !{!12268}
!12268 = !DILocalVariable(name: "file", arg: 1, scope: !12266, file: !2382, line: 15, type: !7)
!12269 = !DILocation(line: 0, scope: !12266)
!12270 = !DILocation(line: 17, column: 5, scope: !12266)
!12271 = distinct !DISubprogram(name: "_lseek", scope: !2382, file: !2382, line: 20, type: !12272, scopeLine: 21, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2574, retainedNodes: !12274)
!12272 = !DISubroutineType(types: !12273)
!12273 = !{!7, !7, !7, !7}
!12274 = !{!12275, !12276, !12277}
!12275 = !DILocalVariable(name: "file", arg: 1, scope: !12271, file: !2382, line: 20, type: !7)
!12276 = !DILocalVariable(name: "ptr", arg: 2, scope: !12271, file: !2382, line: 20, type: !7)
!12277 = !DILocalVariable(name: "dir", arg: 3, scope: !12271, file: !2382, line: 20, type: !7)
!12278 = !DILocation(line: 0, scope: !12271)
!12279 = !DILocation(line: 22, column: 5, scope: !12271)
!12280 = distinct !DISubprogram(name: "_open", scope: !2382, file: !2382, line: 25, type: !12281, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2574, retainedNodes: !12283)
!12281 = !DISubroutineType(types: !12282)
!12282 = !{!7, !2420, !7, !7}
!12283 = !{!12284, !12285, !12286}
!12284 = !DILocalVariable(name: "name", arg: 1, scope: !12280, file: !2382, line: 25, type: !2420)
!12285 = !DILocalVariable(name: "flags", arg: 2, scope: !12280, file: !2382, line: 25, type: !7)
!12286 = !DILocalVariable(name: "mode", arg: 3, scope: !12280, file: !2382, line: 25, type: !7)
!12287 = !DILocation(line: 0, scope: !12280)
!12288 = !DILocation(line: 27, column: 5, scope: !12280)
!12289 = distinct !DISubprogram(name: "_read", scope: !2382, file: !2382, line: 30, type: !12290, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2574, retainedNodes: !12292)
!12290 = !DISubroutineType(types: !12291)
!12291 = !{!7, !7, !2387, !7}
!12292 = !{!12293, !12294, !12295}
!12293 = !DILocalVariable(name: "file", arg: 1, scope: !12289, file: !2382, line: 30, type: !7)
!12294 = !DILocalVariable(name: "ptr", arg: 2, scope: !12289, file: !2382, line: 30, type: !2387)
!12295 = !DILocalVariable(name: "len", arg: 3, scope: !12289, file: !2382, line: 30, type: !7)
!12296 = !DILocation(line: 0, scope: !12289)
!12297 = !DILocation(line: 32, column: 5, scope: !12289)
!12298 = distinct !DISubprogram(name: "_getpid", scope: !2382, file: !2382, line: 48, type: !11598, scopeLine: 49, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2574, retainedNodes: !293)
!12299 = !DILocation(line: 50, column: 5, scope: !12298)
!12300 = distinct !DISubprogram(name: "_kill", scope: !2382, file: !2382, line: 56, type: !12301, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2574, retainedNodes: !12303)
!12301 = !DISubroutineType(types: !12302)
!12302 = !{!7, !7, !7}
!12303 = !{!12304, !12305}
!12304 = !DILocalVariable(name: "pid", arg: 1, scope: !12300, file: !2382, line: 56, type: !7)
!12305 = !DILocalVariable(name: "sig", arg: 2, scope: !12300, file: !2382, line: 56, type: !7)
!12306 = !DILocation(line: 0, scope: !12300)
!12307 = !DILocation(line: 58, column: 5, scope: !12300)
!12308 = distinct !DISubprogram(name: "_exit", scope: !2382, file: !2382, line: 61, type: !12095, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2574, retainedNodes: !12309)
!12309 = !{!12310}
!12310 = !DILocalVariable(name: "val", arg: 1, scope: !12308, file: !2382, line: 61, type: !7)
!12311 = !DILocation(line: 0, scope: !12308)
!12312 = !DILocation(line: 63, column: 5, scope: !12308)
!12313 = !DILocation(line: 0, scope: !2381)
!12314 = !DILocation(line: 73, column: 5, scope: !2381)
!12315 = !{i64 1127}
!12316 = !DILocation(line: 75, column: 14, scope: !12317)
!12317 = distinct !DILexicalBlock(scope: !2381, file: !2382, line: 75, column: 9)
!12318 = !DILocation(line: 75, column: 11, scope: !12317)
!12319 = !DILocation(line: 75, column: 9, scope: !2381)
!12320 = !DILocation(line: 81, column: 32, scope: !12321)
!12321 = distinct !DILexicalBlock(scope: !2381, file: !2382, line: 81, column: 9)
!12322 = !DILocation(line: 81, column: 15, scope: !12321)
!12323 = !DILocation(line: 92, column: 1, scope: !2381)
!12324 = !DILocation(line: 81, column: 9, scope: !2381)
!12325 = distinct !DISubprogram(name: "_write", scope: !2382, file: !2382, line: 94, type: !12290, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2574, retainedNodes: !12326)
!12326 = !{!12327, !12328, !12329, !12330}
!12327 = !DILocalVariable(name: "file", arg: 1, scope: !12325, file: !2382, line: 94, type: !7)
!12328 = !DILocalVariable(name: "ptr", arg: 2, scope: !12325, file: !2382, line: 94, type: !2387)
!12329 = !DILocalVariable(name: "len", arg: 3, scope: !12325, file: !2382, line: 94, type: !7)
!12330 = !DILocalVariable(name: "DataIdx", scope: !12325, file: !2382, line: 96, type: !7)
!12331 = !DILocation(line: 0, scope: !12325)
!12332 = !DILocation(line: 98, column: 31, scope: !12333)
!12333 = distinct !DILexicalBlock(scope: !12334, file: !2382, line: 98, column: 5)
!12334 = distinct !DILexicalBlock(scope: !12325, file: !2382, line: 98, column: 5)
!12335 = !DILocation(line: 98, column: 5, scope: !12334)
!12336 = !DILocation(line: 99, column: 26, scope: !12337)
!12337 = distinct !DILexicalBlock(scope: !12333, file: !2382, line: 98, column: 49)
!12338 = !DILocation(line: 99, column: 22, scope: !12337)
!12339 = !DILocation(line: 99, column: 9, scope: !12337)
!12340 = !DILocation(line: 98, column: 45, scope: !12333)
!12341 = distinct !{!12341, !12335, !12342}
!12342 = !DILocation(line: 100, column: 5, scope: !12334)
!12343 = !DILocation(line: 101, column: 5, scope: !12325)
!12344 = distinct !DISubprogram(name: "SysTick_Set", scope: !2586, file: !2586, line: 62, type: !3732, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !12345)
!12345 = !{!12346, !12347}
!12346 = !DILocalVariable(name: "ticks", arg: 1, scope: !12344, file: !2586, line: 62, type: !61)
!12347 = !DILocalVariable(name: "val", scope: !12344, file: !2586, line: 64, type: !61)
!12348 = !DILocation(line: 0, scope: !12344)
!12349 = !DILocation(line: 67, column: 16, scope: !12350)
!12350 = distinct !DILexicalBlock(scope: !12344, file: !2586, line: 67, column: 9)
!12351 = !DILocation(line: 67, column: 21, scope: !12350)
!12352 = !DILocation(line: 67, column: 9, scope: !12344)
!12353 = !DILocation(line: 72, column: 20, scope: !12344)
!12354 = !DILocation(line: 75, column: 19, scope: !12344)
!12355 = !DILocation(line: 79, column: 20, scope: !12344)
!12356 = !DILocation(line: 80, column: 20, scope: !12344)
!12357 = !DILocation(line: 83, column: 19, scope: !12344)
!12358 = !DILocation(line: 85, column: 5, scope: !12344)
!12359 = !DILocation(line: 86, column: 1, scope: !12344)
!12360 = distinct !DISubprogram(name: "SysInitStatus_Set", scope: !2586, file: !2586, line: 95, type: !291, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !293)
!12361 = !DILocation(line: 97, column: 28, scope: !12360)
!12362 = !DILocation(line: 98, column: 1, scope: !12360)
!12363 = distinct !DISubprogram(name: "SysInitStatus_Query", scope: !2586, file: !2586, line: 107, type: !3984, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !293)
!12364 = !DILocation(line: 109, column: 12, scope: !12363)
!12365 = !DILocation(line: 109, column: 5, scope: !12363)
!12366 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !2586, file: !2586, line: 119, type: !291, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !12367)
!12367 = !{!12368}
!12368 = !DILocalVariable(name: "cm_mux_sel", scope: !12366, file: !2586, line: 121, type: !463)
!12369 = !DILocation(line: 121, column: 38, scope: !12366)
!12370 = !DILocation(line: 121, column: 26, scope: !12366)
!12371 = !DILocation(line: 0, scope: !12366)
!12372 = !DILocation(line: 123, column: 5, scope: !12366)
!12373 = !DILocation(line: 132, column: 13, scope: !12374)
!12374 = distinct !DILexicalBlock(scope: !12366, file: !2586, line: 123, column: 25)
!12375 = !DILocation(line: 140, column: 13, scope: !12374)
!12376 = !DILocation(line: 0, scope: !12374)
!12377 = !DILocation(line: 146, column: 26, scope: !12378)
!12378 = distinct !DILexicalBlock(scope: !12366, file: !2586, line: 146, column: 9)
!12379 = !DILocation(line: 146, column: 50, scope: !12378)
!12380 = !DILocation(line: 146, column: 41, scope: !12378)
!12381 = !DILocation(line: 148, column: 25, scope: !12382)
!12382 = distinct !DILexicalBlock(scope: !12378, file: !2586, line: 147, column: 52)
!12383 = !DILocation(line: 149, column: 5, scope: !12382)
!12384 = !DILocation(line: 150, column: 1, scope: !12366)
!12385 = distinct !DISubprogram(name: "SystemInit", scope: !2586, file: !2586, line: 158, type: !291, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !293)
!12386 = !DILocation(line: 162, column: 16, scope: !12385)
!12387 = !DILocation(line: 166, column: 16, scope: !12385)
!12388 = !DILocation(line: 169, column: 16, scope: !12385)
!12389 = !DILocation(line: 172, column: 1, scope: !12385)
!12390 = distinct !DISubprogram(name: "CachePreInit", scope: !2586, file: !2586, line: 180, type: !291, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !293)
!12391 = !DILocation(line: 183, column: 22, scope: !12390)
!12392 = !DILocation(line: 186, column: 21, scope: !12390)
!12393 = !DILocation(line: 189, column: 21, scope: !12390)
!12394 = !DILocation(line: 192, column: 29, scope: !12390)
!12395 = !DILocation(line: 193, column: 33, scope: !12390)
!12396 = !DILocation(line: 195, column: 28, scope: !12390)
!12397 = !DILocation(line: 200, column: 30, scope: !12390)
!12398 = !DILocation(line: 214, column: 1, scope: !12390)
