; ModuleID = './build/powerkey.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabihf"

%struct.GPT_REGISTER_T = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.GPT_REGISTER_GLOABL_T = type { i32, i32, i32 }
%struct.gpt_context_t = type { i32, %struct.gpt_callback_context_t, i8, i8 }
%struct.gpt_callback_context_t = type { void (i8*)*, i8* }
%struct.gpt_sw_context_t = type { [32 x %struct.gpt_sw_timer_t], i32, i32, i32, i32, i8, i8, i8 }
%struct.gpt_sw_timer_t = type { %struct.gpt_callback_context_t, i32, i8, i8 }
%struct.keypad_buffer_t = type { [128 x %struct.GPT_REGISTER_GLOABL_T], i32, i32, i32 }
%struct.KEYPAD_REGISTER_T = type { i32, i32, i32, [3 x i32], i32, i32, i32, i32 }
%struct.keypad_key_bitmap_t = type { [2 x i32] }
%struct.powerkey_buffer_t = type { [32 x %struct.GPT_REGISTER_GLOABL_T], i8, i8, i8 }
%struct.powerkey_state_t = type { i32, i32 }
%struct.GPIO_REGISTER_T = type { [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIN_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [4 x %struct.GPIO_DIR_REGISTER_T], [192 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [2 x %struct.GPIO_DIR_REGISTER_T], [192 x i8], [7 x %struct.GPIO_DIR_REGISTER_T], [144 x i8], [4 x %struct.GPIO_DIR_REGISTER_T], [192 x i8], [6 x %struct.GPIO_DIN_REGISTER_T] }
%struct.GPIO_DIN_REGISTER_T = type { i32, [12 x i8] }
%struct.GPIO_DIR_REGISTER_T = type { i32, i32, i32, [4 x i8] }
%struct.uart_callback_t = type { void (i32, i8*)*, i8* }
%struct.hal_uart_dma_config_t = type { i8*, i32, i32, i8*, i32, i32, i32 }
%struct.hal_uart_config_t = type { i32, i32, i32, i32 }
%struct.uart_sw_flowcontrol_config_t = type { i8, i8, i8 }
%struct.uart_dma_callback_data_t = type { i8, i32 }
%struct.UART_REGISTER_T = type { %union.anon, %union.anon, %union.anon, i32, %union.anon, %union.anon, i32, %union.anon, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%union.anon = type { i32 }
%struct.I2C_REGISTER_T = type { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, [2 x i16], i16, i16, i16, i16, i16, i16, i16, i16, [2 x i16], i16, i16, [2 x i16], i16, i16, [2 x i16], i16, i16, [6 x i16], i16, i16, i16, i16, i16, i16, i16, i16, [2 x i16], i16, i16 }
%struct.EINT_REGISTER_T = type { i32, i32, i32, i32, i32, [3 x i32], i32, i32, i32, i32, i32, [3 x i32], i32, i32, i32, i32, i32, [3 x i32], i32, i32, i32, i32, i32, [3 x i32], i32, i32, i32, i32, i32, [3 x i32], i32, i32, i32, i32, i32, [3 x i32], i32, [15 x i32], [64 x %struct.EINT_CON_REGISTER_T] }
%struct.EINT_CON_REGISTER_T = type { %union.EINT_CON_T }
%union.EINT_CON_T = type { %union.anon }
%struct.nvic_function_t = type { void (i32)*, i32 }
%struct.GFH_CMEM_ID_INFO_v1 = type { %struct.GFH_Header, %struct.CMEMEntryIDList }
%struct.GFH_Header = type { i32, i16, i32 }
%struct.CMEMEntryIDList = type { i32, i32, [5 x %struct.CMEMEntryID] }
%struct.CMEMEntryID = type { i8, i8, [8 x i8] }
%struct.anon = type { i8 }
%struct.SF_MTD_Data = type { i32, i8*, %struct.anon*, %struct.anon*, i8, %struct.powerkey_state_t*, i8*, %struct.powerkey_state_t*, i8*, i32, i8*, [8 x [2 x %struct.powerkey_state_t]], i8*, %struct.SF_MTD_CMD*, i32, i16, i16, i16, i16, i8, [3 x i8], i8, i8, i16, i32, i32, i8, i8, i32 (i8*)*, i32 (i8*)*, i32 (i8*, i32, i8*, i32)*, i32 (i8*, i32, i8*, i32)* }
%struct.SF_MTD_CMD = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.CMEMEntryNOR = type { i16, i16, i32, [8 x %struct.powerkey_state_t], [8 x %struct.powerkey_state_t] }
%struct.NOR_MTD_Driver = type { i32 (i8*, i8*)*, i32 (i8*)*, i8* (i8*, i32, i32)*, i32 (i8*, i32)*, i32 (i8*, i8*, i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32, i32, i8*, i32)*, i32 (i8*, i32*)*, i32 (i8*, i8*, i32)*, i1 (i8*, i32)*, i32 (i8*, i32, i8*)* }
%struct.NOR_FLASH_DRV_Data = type { i32, %struct.NOR_MTD_Driver*, i8*, i16*, i16*, %struct.NOR_MTD_FlashInfo, [8 x i32], [8 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.powerkey_state_t*, i8*, i8*, void (%struct.NOR_FLASH_DRV_Data*)*, i32, void (%struct.NOR_FLASH_DRV_Data*)*, void (%struct.NOR_FLASH_DRV_Data*)*, i32, i32 (%struct.NOR_FLASH_DRV_Data*)*, i32 (%struct.NOR_FLASH_DRV_Data*, i32, i32)*, %struct.powerkey_state_t*, i32, i32, i32, i16, i16, i8, i8 }
%struct.NOR_MTD_FlashInfo = type { i32, [8 x i32], [8 x i32], [8 x i32], i32, i16, i32, i32 }
%struct.GFH_CMEM_NOR_INFO_v1 = type { %struct.GFH_Header, %struct.CMEMEntryNORList }
%struct.CMEMEntryNORList = type { i32, i32, [5 x %struct.CMEMEntryNOR] }
%struct.NOR_FLASH_DISK_Data = type { i32, %struct.NOR_MTD_Driver*, i8*, %struct.NOR_MTD_FlashInfo, i8 }
%struct.pmu_function_t = type { void (i8, i8*)*, i8*, i8, i8 }
%struct.EMI_SETTINGS = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.EMI_REGISTER_T = type { [96 x i8], i32, [12 x i8], i32, [20 x i8], i32, [4 x i8], i32, [60 x i8], i32, [4 x i8], i32, [4 x i8], i32, [20 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [28 x i8], i32, [4 x i8], i32, [12 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [12 x i8], i32, [4 x i8], i32, [4 x i8], i32, [20 x i8], i32, [4 x i8], i32, [92 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [60 x i8], i32, [124 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [20 x i8], i32, [20 x i8], i32 }
%struct.powerkey_context_t = type { i32, i32, i32, i8, i8, %struct.gpt_callback_context_t, i32, i32 }
%struct.keypad_context_t = type { i8, i8, %struct.gpt_callback_context_t, i32, i32 }
%struct.hal_keypad_config_t = type { i32, %struct.hal_keypad_column_row_t, i32, i32, i32 }
%struct.hal_keypad_column_row_t = type { i8, i8 }
%struct.hal_keypad_scan_timing_t = type { i8, i8, i8, i8 }
%struct.i2c_transaction_size_t = type { i32, i32, i32, i32, i32 }
%struct.pmic_i2c_send_to_receive_config_t = type { i8, i8*, i32, i8*, i32 }
%union.CMEMFlashID = type { [4 x i16] }
%struct.NOR_Flash_MTD_Data = type { i32, i8*, %struct.anon*, %struct.anon*, i8, %struct.powerkey_state_t*, i8*, %struct.powerkey_state_t*, i8*, i32, i8*, [8 x [2 x %struct.powerkey_state_t]] }
%struct.__va_list = type { i8* }
%struct.stat = type { i16, i16, i32, i16, i16, i16, i16, i32, %struct.timespec, %struct.timespec, %struct.timespec, i32, i32, [2 x i32] }
%struct.timespec = type { i64, i32 }
%struct._reent = type { i32, %struct.__sFILE*, %struct.__sFILE*, %struct.__sFILE*, i32, i8*, i32, i32, %struct.__locale_t*, %struct._mprec*, void (%struct._reent*)*, i32, i32, i8*, %struct._rand48*, %struct.GPT_REGISTER_T*, i8*, void (i32)**, %struct._atexit*, %struct._atexit, %struct._glue, %struct.__sFILE*, %struct._misc_reent*, i8* }
%struct.__locale_t = type opaque
%struct._mprec = type { %struct._Bigint*, i32, %struct._Bigint*, %struct._Bigint** }
%struct._Bigint = type { %struct._Bigint*, i32, i32, i32, i32, [1 x i32] }
%struct._rand48 = type { [3 x i16], [3 x i16], i16, i64 }
%struct._atexit = type { %struct._atexit*, i32, [32 x void ()*], %struct._on_exit_args* }
%struct._on_exit_args = type { [32 x i8*], [32 x i8*], i32, i32 }
%struct._glue = type { %struct._glue*, i32, %struct.__sFILE* }
%struct.__sFILE = type { i8*, i32, i32, i16, i16, %struct.__sbuf, i32, %struct._reent*, i8*, i32 (%struct._reent*, i8*, i8*, i32)*, i32 (%struct._reent*, i8*, i8*, i32)*, i32 (%struct._reent*, i8*, i32, i32)*, i32 (%struct._reent*, i8*)*, %struct.__sbuf, i8*, i32, [3 x i8], [1 x i8], %struct.__sbuf, i32, i32, %struct.__lock*, %struct._mbstate_t, i32 }
%struct.__sbuf = type { i8*, i32 }
%struct.__lock = type opaque
%struct._mbstate_t = type { i32, %union.anon }
%struct._misc_reent = type { i8*, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t, [8 x i8], i32, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t }

@gpt_lock_sleep_name = internal unnamed_addr constant [6 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i32 0, i32 0)], align 4, !dbg !0
@gpt_lock_sleep_handle = internal unnamed_addr global [6 x i8] zeroinitializer, align 1, !dbg !71
@__FUNCTION__.hal_gpt_init = private unnamed_addr constant [13 x i8] c"hal_gpt_init\00", align 1
@.str = private unnamed_addr constant [40 x i8] c"[GPT%d][init]:get sleep handle failed\0D\0A\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"GPT0\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"GPT1\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"GPT2\00", align 1
@.str.4 = private unnamed_addr constant [5 x i8] c"GPT3\00", align 1
@.str.5 = private unnamed_addr constant [5 x i8] c"GPT4\00", align 1
@.str.6 = private unnamed_addr constant [5 x i8] c"GPT5\00", align 1
@gp_gpt = dso_local local_unnamed_addr global [6 x %struct.GPT_REGISTER_T*] [%struct.GPT_REGISTER_T* inttoptr (i32 -1575747568 to %struct.GPT_REGISTER_T*), %struct.GPT_REGISTER_T* inttoptr (i32 -1575747520 to %struct.GPT_REGISTER_T*), %struct.GPT_REGISTER_T* inttoptr (i32 -1575747472 to %struct.GPT_REGISTER_T*), %struct.GPT_REGISTER_T* inttoptr (i32 -1575747424 to %struct.GPT_REGISTER_T*), %struct.GPT_REGISTER_T* inttoptr (i32 -1575747376 to %struct.GPT_REGISTER_T*), %struct.GPT_REGISTER_T* inttoptr (i32 -1575747328 to %struct.GPT_REGISTER_T*)], section ".tcm_rwdata", align 4, !dbg !83
@gp_gpt_glb = dso_local local_unnamed_addr global %struct.GPT_REGISTER_GLOABL_T* inttoptr (i32 -1575747584 to %struct.GPT_REGISTER_GLOABL_T*), align 4, !dbg !248
@gpt_get_lfosc_clock.flag = internal unnamed_addr global i1 false, section ".tcm_rwdata", align 1, !dbg !306
@gpt_clock_source = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !303
@g_gpt_context = dso_local global [6 x %struct.gpt_context_t] zeroinitializer, section ".tcm_zidata", align 4, !dbg !264
@gpt_sw_context = dso_local local_unnamed_addr global %struct.gpt_sw_context_t zeroinitializer, align 4, !dbg !280
@keypad_buffer = external dso_local global %struct.keypad_buffer_t, align 4
@keypad = external dso_local local_unnamed_addr global %struct.KEYPAD_REGISTER_T*, align 4
@keypad_saved_bitmap = external dso_local local_unnamed_addr global %struct.keypad_key_bitmap_t, align 4
@__FUNCTION__.hal_keypad_set_scan_timing = private unnamed_addr constant [27 x i8] c"hal_keypad_set_scan_timing\00", align 1
@.str.35 = private unnamed_addr constant [72 x i8] c"[keypad][err]column_scan_div=%d is not over than column_high_pulse=%d\0D\0A\00", align 1
@.str.1.36 = private unnamed_addr constant [66 x i8] c"[keypad][err]row_scan_div=%d is not over than row_high_pulse=%d\0D\0A\00", align 1
@__FUNCTION__.hal_keypad_get_key = private unnamed_addr constant [19 x i8] c"hal_keypad_get_key\00", align 1
@.str.2.37 = private unnamed_addr constant [48 x i8] c"[keypad][get key]normal key no data in buffer\0D\0A\00", align 1
@.str.3.38 = private unnamed_addr constant [51 x i8] c"[keypad[get key]normal key state=%d, position=%d\0D\0A\00", align 1
@__FUNCTION__.hal_keypad_powerkey_deinit = private unnamed_addr constant [27 x i8] c"hal_keypad_powerkey_deinit\00", align 1
@.str.4.39 = private unnamed_addr constant [46 x i8] c"[keypad][deinit]powerkey has data in buffer\0D\0A\00", align 1
@__FUNCTION__.hal_keypad_powerkey_get_key = private unnamed_addr constant [28 x i8] c"hal_keypad_powerkey_get_key\00", align 1
@.str.5.40 = private unnamed_addr constant [46 x i8] c"[keypad][get key]powerkey no data in buffer\0D\0A\00", align 1
@.str.6.41 = private unnamed_addr constant [50 x i8] c"[keypad[get key]power key state=%d, key_data=%d\0D\0A\00", align 1
@powerkey_buffer = dso_local local_unnamed_addr global %struct.powerkey_buffer_t zeroinitializer, align 4, !dbg !307
@.str.46 = private unnamed_addr constant [69 x i8] c"../../../../../driver/chip/mt2523/src/hal_keypad_powerkey_internal.c\00", align 1
@__func__.powerkey_process_repeat_and_longpress = private unnamed_addr constant [38 x i8] c"powerkey_process_repeat_and_longpress\00", align 1
@.str.1.47 = private unnamed_addr constant [50 x i8] c"*powerkey_type == powerkey_context.registerd_data\00", align 1
@powerkey_state = dso_local global %struct.powerkey_state_t zeroinitializer, align 4, !dbg !388
@.str.2.48 = private unnamed_addr constant [62 x i8] c"[keypad][powerkey]start timer error,ret = %d, handle = 0x%x\0D\0A\00", align 1
@.str.3.49 = private unnamed_addr constant [52 x i8] c"[keypad][powerkey]key state = %d, key_data = 0x%x\0D\0A\00", align 1
@__FUNCTION__.powerkey_pmu_reisgter_callback = private unnamed_addr constant [31 x i8] c"powerkey_pmu_reisgter_callback\00", align 1
@.str.4.50 = private unnamed_addr constant [48 x i8] c"[keypad]powerkey before pmu register callback\0D\0A\00", align 1
@.str.5.51 = private unnamed_addr constant [61 x i8] c"[keypad]powerkey register powerkey_long_press_handler fail\0D\0A\00", align 1
@.str.6.52 = private unnamed_addr constant [56 x i8] c"[keypad]powerkey register powerkey_press_handler fail\0D\0A\00", align 1
@.str.7 = private unnamed_addr constant [47 x i8] c"[keypad]powerkey after pmu register callback\0D\0A\00", align 1
@powerkey_lock_sleep_handle = internal unnamed_addr global i8 0, align 1, !dbg !386
@__FUNCTION__.powerkey_pmu_init = private unnamed_addr constant [18 x i8] c"powerkey_pmu_init\00", align 1
@.str.8 = private unnamed_addr constant [45 x i8] c"[keypad][powerkey]:get sleep handle failed\0D\0A\00", align 1
@.str.9 = private unnamed_addr constant [34 x i8] c"[keypad]powerkey after pmu init\0D\0A\00", align 1
@.str.10 = private unnamed_addr constant [62 x i8] c"[keypad]powerkey set PMU_RG_PWRHOLD_MASK hold on power fail\0D\0A\00", align 1
@.str.11 = private unnamed_addr constant [53 x i8] c"[keypad]powerkey set POWERKEY_PMU_RG_PKEY_CFG fail\0D\0A\00", align 1
@.str.12 = private unnamed_addr constant [46 x i8] c"[keypad]powerkey register PMU callback fail\0D\0A\00", align 1
@powerkey_get_pressed_state.last_state = internal unnamed_addr global i8 0, align 1, !dbg !379
@__FUNCTION__.powerkey_get_pressed_state = private unnamed_addr constant [27 x i8] c"powerkey_get_pressed_state\00", align 1
@.str.13 = private unnamed_addr constant [38 x i8] c"[keypad]powerke PMU_PWRKEY_VAL=0x%x\0D\0A\00", align 1
@__FUNCTION__.powerkey_call_user_callback = private unnamed_addr constant [28 x i8] c"powerkey_call_user_callback\00", align 1
@.str.14 = private unnamed_addr constant [32 x i8] c"[keypad][powerkey]inform user\0D\0A\00", align 1
@.str.15 = private unnamed_addr constant [38 x i8] c"[keypad][powerkey]callback is NULL!\0D\0A\00", align 1
@__FUNCTION__.powerkey_process_key = private unnamed_addr constant [21 x i8] c"powerkey_process_key\00", align 1
@.str.16 = private unnamed_addr constant [67 x i8] c"[keypad][powerkey]get timer handle error,ret = %d, handle = 0x%x\0D\0A\00", align 1
@.str.17 = private unnamed_addr constant [38 x i8] c"[keypad]powerkey pmu_state=%d PRESS\0D\0A\00", align 1
@.str.18 = private unnamed_addr constant [36 x i8] c"[keypad][powerkey] no press event\0D\0A\00", align 1
@.str.19 = private unnamed_addr constant [65 x i8] c"[keypad][state]stop timer handle error,ret = %d, handle = 0x%x\0D\0A\00", align 1
@.str.20 = private unnamed_addr constant [65 x i8] c"[keypad][state]free timer handle error,ret = %d, handle = 0x%x\0D\0A\00", align 1
@.str.21 = private unnamed_addr constant [40 x i8] c"[keypad]powerkey pmu_state=%d RELEASE\0D\0A\00", align 1
@.str.22 = private unnamed_addr constant [9 x i8] c"Powerkey\00", align 1
@__const.is_pin_with_pullsel.pin_number_with_pullsel = private unnamed_addr constant [5 x i32] [i32 0, i32 1, i32 2, i32 3, i32 10], align 4
@gpio_register_base = dso_local local_unnamed_addr global %struct.GPIO_REGISTER_T* inttoptr (i32 -1576927232 to %struct.GPIO_REGISTER_T*), align 4, !dbg !412
@g_uart_hwstatus = internal global [4 x i32] zeroinitializer, align 4, !dbg !692
@.str.55 = private unnamed_addr constant [49 x i8] c"../../../../../driver/chip/mt2523/src/hal_uart.c\00", align 1
@__func__.uart_receive_handler = private unnamed_addr constant [21 x i8] c"uart_receive_handler\00", align 1
@.str.1.56 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@g_uart_callback = internal unnamed_addr global [4 x %struct.uart_callback_t] zeroinitializer, align 4, !dbg !847
@g_uart_dma_config = internal global [4 x %struct.hal_uart_dma_config_t] zeroinitializer, align 4, !dbg !865
@__func__.uart_send_handler = private unnamed_addr constant [18 x i8] c"uart_send_handler\00", align 1
@g_uart_frist_send_complete_interrupt = internal unnamed_addr global [4 x i8] zeroinitializer, align 1, !dbg !809
@g_uart_send_lock_status = internal unnamed_addr global [4 x i8] zeroinitializer, align 1, !dbg !814
@g_uart_sleep_handler = internal unnamed_addr global [4 x i8] zeroinitializer, align 1, !dbg !816
@__func__.uart_error_handler = private unnamed_addr constant [19 x i8] c"uart_error_handler\00", align 1
@g_uart_flowcontrol_status = internal unnamed_addr global [4 x i32] zeroinitializer, align 4, !dbg !818
@g_uart_irq_pending_status = internal unnamed_addr global [4 x i8] zeroinitializer, align 1, !dbg !845
@g_uart_restore_init = internal unnamed_addr global i1 false, align 1, !dbg !890
@g_uart_config = internal global [4 x %struct.hal_uart_config_t] zeroinitializer, align 4, !dbg !831
@g_uart_sw_flowcontrol_config = internal unnamed_addr global [4 x %struct.uart_sw_flowcontrol_config_t] zeroinitializer, align 1, !dbg !822
@g_uart_baudrate_map = internal unnamed_addr constant [13 x i32] [i32 110, i32 300, i32 1200, i32 2400, i32 4800, i32 9600, i32 19200, i32 38400, i32 57600, i32 115200, i32 230400, i32 460800, i32 921600], align 4, !dbg !879
@g_uart_global_data_initialized = internal unnamed_addr global i1 false, align 1, !dbg !891
@__func__.hal_uart_init = private unnamed_addr constant [14 x i8] c"hal_uart_init\00", align 1
@__func__.hal_uart_deinit = private unnamed_addr constant [16 x i8] c"hal_uart_deinit\00", align 1
@__func__.hal_uart_send_dma = private unnamed_addr constant [18 x i8] c"hal_uart_send_dma\00", align 1
@__func__.hal_uart_receive_dma = private unnamed_addr constant [21 x i8] c"hal_uart_receive_dma\00", align 1
@g_uart_dma_callback_data = internal global [8 x %struct.uart_dma_callback_data_t] zeroinitializer, align 4, !dbg !860
@__func__.hal_uart_register_callback = private unnamed_addr constant [27 x i8] c"hal_uart_register_callback\00", align 1
@__func__.hal_uart_get_available_send_space = private unnamed_addr constant [34 x i8] c"hal_uart_get_available_send_space\00", align 1
@__func__.hal_uart_get_available_receive_bytes = private unnamed_addr constant [37 x i8] c"hal_uart_get_available_receive_bytes\00", align 1
@__func__.hal_uart_set_dma = private unnamed_addr constant [17 x i8] c"hal_uart_set_dma\00", align 1
@__func__.uart_start_dma_transmission = private unnamed_addr constant [28 x i8] c"uart_start_dma_transmission\00", align 1
@__const.uart_set_baudrate.fraction_L_mapping = private unnamed_addr constant [10 x i32] [i32 0, i32 0, i32 32, i32 144, i32 168, i32 84, i32 108, i32 186, i32 246, i32 254], align 4
@g_uart_regbase = dso_local local_unnamed_addr constant [4 x %struct.UART_REGISTER_T*] [%struct.UART_REGISTER_T* inttoptr (i32 -1609760768 to %struct.UART_REGISTER_T*), %struct.UART_REGISTER_T* inttoptr (i32 -1609695232 to %struct.UART_REGISTER_T*), %struct.UART_REGISTER_T* inttoptr (i32 -1609629696 to %struct.UART_REGISTER_T*), %struct.UART_REGISTER_T* inttoptr (i32 -1609564160 to %struct.UART_REGISTER_T*)], align 4, !dbg !892
@g_uart_port_to_pdn = dso_local local_unnamed_addr constant [4 x i32] [i32 45, i32 46, i32 47, i32 48], align 4, !dbg !964
@g_uart_port_to_irq_num = dso_local local_unnamed_addr constant [4 x i32] [i32 29, i32 30, i32 31, i32 32], align 4, !dbg !969
@.str.99 = private unnamed_addr constant [6 x i8] c"uart0\00", align 1
@.str.1.100 = private unnamed_addr constant [6 x i8] c"uart1\00", align 1
@.str.2.101 = private unnamed_addr constant [6 x i8] c"uart2\00", align 1
@.str.3.102 = private unnamed_addr constant [6 x i8] c"uart3\00", align 1
@g_uart_sleep_handler_name = dso_local local_unnamed_addr constant [4 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.99, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.100, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2.101, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3.102, i32 0, i32 0)], align 4, !dbg !975
@.str.4.111 = private unnamed_addr constant [67 x i8] c"../../../../../driver/chip/mt2523/src/hal_uart_internal_platform.c\00", align 1
@__func__.uart_interrupt_handler = private unnamed_addr constant [23 x i8] c"uart_interrupt_handler\00", align 1
@.str.5.112 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@switch.table.uart_dma_channel_to_callback_data = private unnamed_addr constant [8 x i8] c"\00\01\00\01\00\01\00\01", align 1
@switch.table.uart_dma_channel_to_callback_data.6 = private unnamed_addr constant [8 x i32] [i32 1, i32 1, i32 2, i32 2, i32 3, i32 3, i32 0, i32 0], align 4
@g_i2c_tx_dma_channel = dso_local local_unnamed_addr constant [4 x i32] [i32 3, i32 5, i32 7, i32 7], align 4, !dbg !981
@g_i2c_rx_dma_channel = dso_local local_unnamed_addr constant [4 x i32] [i32 4, i32 6, i32 7, i32 7], align 4, !dbg !1095
@g_i2c_source_clock_table = dso_local local_unnamed_addr global [4 x i32] [i32 26000, i32 26000, i32 62400, i32 62400], align 4, !dbg !1102
@g_i2c_pdn_table = dso_local local_unnamed_addr constant [4 x i32] [i32 138, i32 137, i32 39, i32 38], align 4, !dbg !1100
@i2c_master_register = dso_local local_unnamed_addr constant [4 x %struct.I2C_REGISTER_T*] [%struct.I2C_REGISTER_T* inttoptr (i32 -1608450048 to %struct.I2C_REGISTER_T*), %struct.I2C_REGISTER_T* inttoptr (i32 -1608384512 to %struct.I2C_REGISTER_T*), %struct.I2C_REGISTER_T* inttoptr (i32 -1608843264 to %struct.I2C_REGISTER_T*), %struct.I2C_REGISTER_T* inttoptr (i32 -1575682048 to %struct.I2C_REGISTER_T*)], align 4, !dbg !1031
@__FUNCTION__.pmic_i2c_send_polling = private unnamed_addr constant [22 x i8] c"pmic_i2c_send_polling\00", align 1
@.str.113 = private unnamed_addr constant [25 x i8] c"i2c pmic send error:%d\0D\0A\00", align 1
@__FUNCTION__.pmic_i2c_send_to_receive_polling = private unnamed_addr constant [33 x i8] c"pmic_i2c_send_to_receive_polling\00", align 1
@.str.1.114 = private unnamed_addr constant [33 x i8] c"i2c pmic send_to_read error:%d\0D\0A\00", align 1
@EINT_REGISTER = dso_local local_unnamed_addr global %struct.EINT_REGISTER_T* inttoptr (i32 -1576860928 to %struct.EINT_REGISTER_T*), section ".tcm_rwdata", align 4, !dbg !1105
@hal_eint_init.ini_state = internal unnamed_addr global i1 false, align 4, !dbg !1268
@eint_function_table = internal unnamed_addr global [32 x %struct.gpt_callback_context_t] zeroinitializer, align 4, !dbg !1190
@__FUNCTION__.hal_eint_isr = private unnamed_addr constant [13 x i8] c"hal_eint_isr\00", align 1
@.str.115 = private unnamed_addr constant [35 x i8] c"ERROR: no EINT interrupt handler!\0A\00", align 1
@hal_nvic_init.priority_set = internal unnamed_addr global i1 false, align 4, !dbg !1269
@defualt_irq_priority = internal unnamed_addr constant [64 x i32] [i32 5, i32 68, i32 7, i32 8, i32 68, i32 68, i32 68, i32 68, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 68, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 40, i32 68, i32 68, i32 43, i32 44, i32 26, i32 46, i32 47, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68], align 4, !dbg !1355
@nvic_function_table = dso_local local_unnamed_addr global [64 x %struct.nvic_function_t] zeroinitializer, align 4, !dbg !1347
@__FUNCTION__.isrC_main = private unnamed_addr constant [10 x i8] c"isrC_main\00", align 1
@.str.122 = private unnamed_addr constant [25 x i8] c"ERROR: no IRQ handler! \0A\00", align 1
@DelayResume = dso_local local_unnamed_addr global i8 0, align 1, !dbg !1360
@.str.132 = private unnamed_addr constant [61 x i8] c"../../../../../driver/chip/mt2523/src/hal_flash_mtd_common.c\00", align 1
@__func__.SFI_BlankCheck = private unnamed_addr constant [15 x i8] c"SFI_BlankCheck\00", align 1
@.str.1.133 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@__func__.SFI_MacEnable = private unnamed_addr constant [14 x i8] c"SFI_MacEnable\00", align 1
@NOR_FLASH_LeaveDPDCmd = dso_local local_unnamed_addr global i8 0, section ".tcm_rwdata", align 1, !dbg !1436
@NOR_FLASH_FATStartAddr = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1438
@NOR_FLASH_FATStartValue = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1440
@SFI_MAC_CTL_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1442
@SFI_DIRECT_CTL_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1444
@SFI_MISC_CTL_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1446
@SFI_MISC_CTL2_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1448
@SFI_DLY_CTL_3_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1450
@SFI_CLK_SWITCH_MISC_CTL_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1452
@SFI_CLK_SWITCH_DLY_CTL_3_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1454
@sf_dal_brbusy_wait = dso_local local_unnamed_addr global i8 0, align 1, !dbg !1456
@sf_dal_resume_time = dso_local local_unnamed_addr global i32 -1, align 4, !dbg !1767
@sf_dal_flash_return_ready_max = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1769
@.str.136 = private unnamed_addr constant [58 x i8] c"../../../../../driver/chip/mt2523/src/hal_flash_mtd_dal.c\00", align 1
@__func__.Flash_ReturnReady = private unnamed_addr constant [18 x i8] c"Flash_ReturnReady\00", align 1
@.str.1.137 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@__func__.Flash_CheckReady = private unnamed_addr constant [17 x i8] c"Flash_CheckReady\00", align 1
@__func__.Flash_ResumeOperation = private unnamed_addr constant [22 x i8] c"Flash_ResumeOperation\00", align 1
@__func__.Flash_SuspendOperation = private unnamed_addr constant [23 x i8] c"Flash_SuspendOperation\00", align 1
@MTDMutex = internal unnamed_addr global i1 false, align 4, !dbg !1778
@__func__.SF_DAL_FreeDevLock = private unnamed_addr constant [19 x i8] c"SF_DAL_FreeDevLock\00", align 1
@__func__.SF_DAL_Init_Vendor = private unnamed_addr constant [19 x i8] c"SF_DAL_Init_Vendor\00", align 1
@__func__.SF_DAL_IOCtrl = private unnamed_addr constant [14 x i8] c"SF_DAL_IOCtrl\00", align 1
@__func__.SF_DAL_ProgramData = private unnamed_addr constant [19 x i8] c"SF_DAL_ProgramData\00", align 1
@tmp_data_buffer = internal unnamed_addr global [128 x i8] zeroinitializer, align 1, !dbg !1771
@__func__.SF_DAL_EraseBlock = private unnamed_addr constant [18 x i8] c"SF_DAL_EraseBlock\00", align 1
@__func__.SF_DAL_CheckReadyAndResume = private unnamed_addr constant [27 x i8] c"SF_DAL_CheckReadyAndResume\00", align 1
@__func__.SF_DAL_CheckDeviceReady = private unnamed_addr constant [24 x i8] c"SF_DAL_CheckDeviceReady\00", align 1
@combo_mem_id_list = dso_local constant %struct.GFH_CMEM_ID_INFO_v1 { %struct.GFH_Header { i32 21843277, i16 72, i32 258 }, %struct.CMEMEntryIDList { i32 1, i32 5, [5 x %struct.CMEMEntryID] [%struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\C2(\16\00\00\00\00\00" }, %struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\C2(\15\00\00\00\00\00" }, %struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\EFp\16\00\00\00\00\00" }, %struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\C2%8\00\00\00\00\00" }, %struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\EF@\18\00\00\00\00\00" }] } }, align 4, !dbg !1779
@cmem_index = internal unnamed_addr global i16 -1, align 2, !dbg !1831
@cmem_emiinit_index = internal unnamed_addr global i16 -1, align 2, !dbg !1834
@FLASH_ID = dso_local local_unnamed_addr constant [19 x i8] c"{0xC2, 0x28, 0x16}\00", align 1, !dbg !1867
@nor_egid = dso_local local_unnamed_addr global %struct.anon* null, align 4, !dbg !1876
@EntireDiskMtdData = dso_local global %struct.SF_MTD_Data zeroinitializer, align 4, !dbg !2192
@RegionInfo = internal global [8 x %struct.powerkey_state_t] zeroinitializer, align 4, !dbg !2063
@mtdflash = dso_local global %struct.SF_MTD_Data zeroinitializer, align 4, !dbg !2091
@nor_list = internal unnamed_addr global %struct.CMEMEntryNOR* null, align 4, !dbg !2194
@cmem_nor_index = internal unnamed_addr global i32 0, align 4, !dbg !1901
@PAGE_BUFFER_SIZE = dso_local local_unnamed_addr global i32 0, align 4, !dbg !2087
@NORFlashMtd = dso_local global %struct.NOR_MTD_Driver zeroinitializer, align 4, !dbg !2089
@FlashDriveData = dso_local local_unnamed_addr global %struct.NOR_FLASH_DRV_Data zeroinitializer, align 4, !dbg !1913
@StatusMap = dso_local global [8 x i8] zeroinitializer, align 1, !dbg !2174
@sf_dal_data_cmd = dso_local global %struct.SF_MTD_CMD zeroinitializer, align 1, !dbg !2177
@combo_mem_sw_list = internal constant %struct.GFH_CMEM_NOR_INFO_v1 { %struct.GFH_Header { i32 21843277, i16 700, i32 259 }, %struct.CMEMEntryNORList { i32 2, i32 5, [5 x %struct.CMEMEntryNOR] [%struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.powerkey_state_t] [%struct.powerkey_state_t { i32 0, i32 4096 }, %struct.powerkey_state_t zeroinitializer, %struct.powerkey_state_t zeroinitializer, %struct.powerkey_state_t zeroinitializer, %struct.powerkey_state_t zeroinitializer, %struct.powerkey_state_t zeroinitializer, %struct.powerkey_state_t zeroinitializer, %struct.powerkey_state_t zeroinitializer], [8 x %struct.powerkey_state_t] [%struct.powerkey_state_t { i32 4194304, i32 1 }, %struct.powerkey_state_t zeroinitializer, %struct.powerkey_state_t zeroinitializer, %struct.powerkey_state_t zeroinitializer, %struct.powerkey_state_t zeroinitializer, %struct.powerkey_state_t zeroinitializer, %struct.powerkey_state_t zeroinitializer, %struct.powerkey_state_t zeroinitializer] }, %struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.powerkey_state_t] [%struct.powerkey_state_t { i32 0, i32 4096 }, %struct.powerkey_state_t zeroinitializer, %struct.powerkey_state_t zeroinitializer, %struct.powerkey_state_t zeroinitializer, %struct.powerkey_state_t zeroinitializer, %struct.powerkey_state_t zeroinitializer, %struct.powerkey_state_t zeroinitializer, %struct.powerkey_state_t zeroinitializer], [8 x %struct.powerkey_state_t] [%struct.powerkey_state_t { i32 4194304, i32 1 }, %struct.powerkey_state_t zeroinitializer, %struct.powerkey_state_t zeroinitializer, %struct.powerkey_state_t zeroinitializer, %struct.powerkey_state_t zeroinitializer, %struct.powerkey_state_t zeroinitializer, %struct.powerkey_state_t zeroinitializer, %struct.powerkey_state_t zeroinitializer] }, %struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.powerkey_state_t] [%struct.powerkey_state_t { i32 0, i32 4096 }, %struct.powerkey_state_t zeroinitializer, %struct.powerkey_state_t zeroinitializer, %struct.powerkey_state_t zeroinitializer, %struct.powerkey_state_t zeroinitializer, %struct.powerkey_state_t zeroinitializer, %struct.powerkey_state_t zeroinitializer, %struct.powerkey_state_t zeroinitializer], [8 x %struct.powerkey_state_t] [%struct.powerkey_state_t { i32 4194304, i32 1 }, %struct.powerkey_state_t zeroinitializer, %struct.powerkey_state_t zeroinitializer, %struct.powerkey_state_t zeroinitializer, %struct.powerkey_state_t zeroinitializer, %struct.powerkey_state_t zeroinitializer, %struct.powerkey_state_t zeroinitializer, %struct.powerkey_state_t zeroinitializer] }, %struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.powerkey_state_t] [%struct.powerkey_state_t { i32 0, i32 4096 }, %struct.powerkey_state_t zeroinitializer, %struct.powerkey_state_t zeroinitializer, %struct.powerkey_state_t zeroinitializer, %struct.powerkey_state_t zeroinitializer, %struct.powerkey_state_t zeroinitializer, %struct.powerkey_state_t zeroinitializer, %struct.powerkey_state_t zeroinitializer], [8 x %struct.powerkey_state_t] [%struct.powerkey_state_t { i32 4194304, i32 1 }, %struct.powerkey_state_t zeroinitializer, %struct.powerkey_state_t zeroinitializer, %struct.powerkey_state_t zeroinitializer, %struct.powerkey_state_t zeroinitializer, %struct.powerkey_state_t zeroinitializer, %struct.powerkey_state_t zeroinitializer, %struct.powerkey_state_t zeroinitializer] }, %struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.powerkey_state_t] [%struct.powerkey_state_t { i32 0, i32 4096 }, %struct.powerkey_state_t zeroinitializer, %struct.powerkey_state_t zeroinitializer, %struct.powerkey_state_t zeroinitializer, %struct.powerkey_state_t zeroinitializer, %struct.powerkey_state_t zeroinitializer, %struct.powerkey_state_t zeroinitializer, %struct.powerkey_state_t zeroinitializer], [8 x %struct.powerkey_state_t] [%struct.powerkey_state_t { i32 4194304, i32 1 }, %struct.powerkey_state_t zeroinitializer, %struct.powerkey_state_t zeroinitializer, %struct.powerkey_state_t zeroinitializer, %struct.powerkey_state_t zeroinitializer, %struct.powerkey_state_t zeroinitializer, %struct.powerkey_state_t zeroinitializer, %struct.powerkey_state_t zeroinitializer] }] } }, align 4, !dbg !2207
@BlockLayout = internal unnamed_addr global %struct.powerkey_state_t* null, align 4, !dbg !2066
@BankInfo = internal global [8 x %struct.powerkey_state_t] zeroinitializer, align 4, !dbg !2079
@TOTAL_BLOCKS = dso_local local_unnamed_addr global i32 0, align 4, !dbg !2050
@NOR_LARGEST_BLOCK_SIZE = dso_local local_unnamed_addr global i32 0, align 4, !dbg !2054
@TOTAL_SECTORS = dso_local local_unnamed_addr global i32 0, align 4, !dbg !2052
@cmem_id = dso_local local_unnamed_addr global %struct.CMEMEntryID* null, align 4, !dbg !1903
@.str.152 = private unnamed_addr constant [60 x i8] c"../../../../../driver/chip/mt2523/src/hal_flash_combo_nor.c\00", align 1
@__func__.CMEM_Init_nor_list = private unnamed_addr constant [19 x i8] c"CMEM_Init_nor_list\00", align 1
@.str.1.153 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@EntireDiskRegionInfo = internal global [8 x %struct.powerkey_state_t] zeroinitializer, align 4, !dbg !2179
@__func__.CMEM_Init_FullDriver = private unnamed_addr constant [21 x i8] c"CMEM_Init_FullDriver\00", align 1
@FDMBuffer = dso_local local_unnamed_addr global [512 x i8] zeroinitializer, align 1, !dbg !2058
@CS0_SIZE = dso_local local_unnamed_addr global i32 0, align 4, !dbg !2075
@CS1_SIZE = dso_local local_unnamed_addr global i32 0, align 4, !dbg !2077
@FDMMutex = internal unnamed_addr global i1 false, align 4, !dbg !2234
@.str.158 = private unnamed_addr constant [55 x i8] c"../../../../../driver/chip/mt2523/src/hal_flash_disk.c\00", align 1
@.str.1.159 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@__func__.FreeFDMLock = private unnamed_addr constant [12 x i8] c"FreeFDMLock\00", align 1
@flash_init_status = internal unnamed_addr global i1 false, section ".tcm_rwdata", align 4, !dbg !2294
@EntireDiskDriveData = dso_local global %struct.NOR_FLASH_DISK_Data zeroinitializer, align 4, !dbg !2181
@__func__.get_rawdisk_error_code = private unnamed_addr constant [23 x i8] c"get_rawdisk_error_code\00", align 1
@__func__.get_block_size_from_address = private unnamed_addr constant [28 x i8] c"get_block_size_from_address\00", align 1
@__func__.MountDevice = private unnamed_addr constant [12 x i8] c"MountDevice\00", align 1
@switch.table.get_rawdisk_error_code = private unnamed_addr constant [9 x i32] [i32 -7, i32 -3, i32 -3, i32 -3, i32 -3, i32 -4, i32 -3, i32 -6, i32 -7], align 4
@gNOR_ReturnReadyBegin = dso_local local_unnamed_addr global i32 0, align 4, !dbg !2295
@gNOR_ReturnReadyEnd = dso_local local_unnamed_addr global i32 -1, align 4, !dbg !2302
@NOR_Flash_Base_Address = dso_local local_unnamed_addr global i32 0, align 4, !dbg !2304
@NOR_FLASH_BUSY = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2306
@NOR_FLASH_SUSPENDED = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2308
@.str.174 = private unnamed_addr constant [54 x i8] c"../../../../../driver/chip/mt2523/src/hal_flash_mtd.c\00", align 1
@__func__.MapWindow = private unnamed_addr constant [10 x i8] c"MapWindow\00", align 1
@.str.1.175 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@__func__.DelayAWhile_UST = private unnamed_addr constant [16 x i8] c"DelayAWhile_UST\00", align 1
@LookupAddress.replaced = internal unnamed_addr global i32 0, align 4, !dbg !2310
@LookupAddress.look_up_hit = internal unnamed_addr global i32 0, align 4, !dbg !2364
@LookupAddress.look_up_miss = internal unnamed_addr global i32 0, align 4, !dbg !2366
@pmu_init_mt6385.init = internal unnamed_addr global i1 false, align 1, !dbg !2368
@__FUNCTION__.pmu_init_mt6385 = private unnamed_addr constant [16 x i8] c"pmu_init_mt6385\00", align 1
@.str.182 = private unnamed_addr constant [21 x i8] c"\0A\0DPMU Version : E1\0A\0D\00", align 1
@.str.1.183 = private unnamed_addr constant [21 x i8] c"\0A\0DPMU Version : E2\0A\0D\00", align 1
@pmu_power_mode_init_setting_E1 = internal global [10 x [8 x i8]] [[8 x i8] c"\01\00\00\02\02\00\00\00", [8 x i8] c"\01\00\00\03\02\00\00\00", [8 x i8] c"\01\00\00\03\03\01\00\00", [8 x i8] c"\01\00\00\02\02\01\06\06", [8 x i8] c"\01\02\02\02\02\00\00\00", [8 x i8] c"\01\00\00\02\02\00\00\00", [8 x i8] c"\01\00\00\02\02\00\04\04", [8 x i8] c"\00\00\00\02\02\00\03\03", [8 x i8] c"\01\00\00\02\02\00\02\02", [8 x i8] c"\01\00\00\02\02\01\01\01"], align 1, !dbg !2462
@pmu_power_mode_init_setting_E2 = internal global [10 x [8 x i8]] [[8 x i8] c"\01\00\00\02\02\00\00\00", [8 x i8] c"\01\00\00\02\02\00\00\00", [8 x i8] c"\01\00\00\03\03\01\00\00", [8 x i8] c"\01\00\00\02\02\01\00\00", [8 x i8] c"\01\02\02\02\02\00\00\00", [8 x i8] c"\01\00\00\02\02\00\00\00", [8 x i8] c"\00\00\00\02\02\01\00\00", [8 x i8] c"\00\00\00\02\02\01\01\01", [8 x i8] c"\00\00\00\02\02\01\00\00", [8 x i8] c"\00\00\00\02\02\01\00\00"], align 1, !dbg !2467
@pmu_eint_handler.index = internal unnamed_addr global i32 0, align 4, !dbg !2441
@pmu_eint_handler.int_sts = internal unnamed_addr global [7 x i32] zeroinitializer, align 4, !dbg !2447
@pmu_function_table = dso_local local_unnamed_addr global [32 x %struct.pmu_function_t] zeroinitializer, align 4, !dbg !2452
@pmu_auxadc_get_isense.trim_gain_ch7 = internal unnamed_addr global i32 0, align 4, !dbg !2477
@pmu_auxadc_get_isense.trim_offset_ch7 = internal unnamed_addr global i32 0, align 4, !dbg !2506
@pmu_auxadc_get_isense.init = internal unnamed_addr global i1 false, align 1, !dbg !2546
@pmu_get_auxadc_temperature.init = internal unnamed_addr global i1 false, align 1, !dbg !2547
@pmu_get_auxadc_temperature.O_VTS = internal unnamed_addr global i32 0, align 4, !dbg !2523
@pmu_get_auxadc_temperature.O_SLOPE = internal unnamed_addr global float 0.000000e+00, align 4, !dbg !2525
@pmu_get_auxadc_temperature.DEGC_CALI = internal unnamed_addr global float 0.000000e+00, align 4, !dbg !2527
@pmu_get_thermal_status.ADC_CALI_EN = internal unnamed_addr global i1 false, align 1, !dbg !2548
@__FUNCTION__.pmu_init = private unnamed_addr constant [9 x i8] c"pmu_init\00", align 1
@.str.190 = private unnamed_addr constant [23 x i8] c"\0A\0Duse internal pmic \0A\0D\00", align 1
@__FUNCTION__.internal_pmu_ctrl_power = private unnamed_addr constant [24 x i8] c"internal_pmu_ctrl_power\00", align 1
@.str.1.195 = private unnamed_addr constant [48 x i8] c"EXTERNAL PMU ERROR: No matching Power Control!\0A\00", align 1
@pmu_mtcmos_ldo_ctrl = dso_local local_unnamed_addr global i16 448, align 2, !dbg !2549
@pmu_mtcmos_ldo_en = dso_local local_unnamed_addr global i16 0, align 2, !dbg !2582
@pmu_mtcmos_vio28_pmod = dso_local local_unnamed_addr global i16 0, align 2, !dbg !2584
@__FUNCTION__.PMIC_VR_PSI_PMOD_CONFIG = private unnamed_addr constant [24 x i8] c"PMIC_VR_PSI_PMOD_CONFIG\00", align 1
@.str.206 = private unnamed_addr constant [30 x i8] c"PMU ERROR: Illegal PSI Mode!\0A\00", align 1
@.str.1.207 = private unnamed_addr constant [29 x i8] c"PMU ERROR: Illegal PSI Mode\0A\00", align 1
@.str.2.208 = private unnamed_addr constant [29 x i8] c"PMU ERROR: No matching LDO!\0A\00", align 1
@__FUNCTION__.PMIC_VR_SLEEP_WKUP_CONFIG = private unnamed_addr constant [26 x i8] c"PMIC_VR_SLEEP_WKUP_CONFIG\00", align 1
@.str.3.211 = private unnamed_addr constant [30 x i8] c"PMU ERROR: Illegal PSI mode!\0A\00", align 1
@.str.4.212 = private unnamed_addr constant [52 x i8] c"PMU ERROR: wk_slot > Wake sequence length setting!\0A\00", align 1
@.str.5.213 = private unnamed_addr constant [40 x i8] c"PMU ERROR: Undefined control mode =%d!\0A\00", align 1
@.str.6.214 = private unnamed_addr constant [52 x i8] c"PMU ERROR: No sleep wake up setting for VCORE LDO!\0A\00", align 1
@.str.7.215 = private unnamed_addr constant [52 x i8] c"PMU ERROR: No sleep wake up setting for VIO18 LDO!\0A\00", align 1
@.str.8.216 = private unnamed_addr constant [31 x i8] c"PMU ERROR: Illeagal PSI mode!\0A\00", align 1
@.str.9.217 = private unnamed_addr constant [52 x i8] c"PMU ERROR: No sleep wake up setting for VDIG18 LDO!\00", align 1
@.str.10.218 = private unnamed_addr constant [43 x i8] c"PMU ERROR: wk_slot should greater than 0!\0A\00", align 1
@.str.11.219 = private unnamed_addr constant [52 x i8] c"PMU ERROR: No sleep wake up setting for VCAMA LDO!\0A\00", align 1
@.str.12.220 = private unnamed_addr constant [51 x i8] c"PMU ERROR: No sleep wake up setting for VIBR! LDO\0A\00", align 1
@.str.13.221 = private unnamed_addr constant [51 x i8] c"PMU ERROR: No sleep wake up setting for SWMP! LDO\0A\00", align 1
@.str.14.222 = private unnamed_addr constant [28 x i8] c"PMU ERROR: No matching LDO!\00", align 1
@__FUNCTION__.PMIC_VR_CONTROL = private unnamed_addr constant [16 x i8] c"PMIC_VR_CONTROL\00", align 1
@.str.15.225 = private unnamed_addr constant [44 x i8] c"PMU ERROR: VCORE LDO cannot be turned off!\0A\00", align 1
@.str.16.226 = private unnamed_addr constant [44 x i8] c"PMU ERROR: VIO18 LDO cannot be turned off!\0A\00", align 1
@.str.17.227 = private unnamed_addr constant [28 x i8] c"PMU ERROR: No matching VR!\0A\00", align 1
@__const.PMIC_VCORE_VOSEL_CONFIG.vc_ldo_vosel = private unnamed_addr constant [7 x i32] [i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12], align 4
@__FUNCTION__.PMIC_VCORE_VOSEL_CONFIG = private unnamed_addr constant [24 x i8] c"PMIC_VCORE_VOSEL_CONFIG\00", align 1
@.str.18.230 = private unnamed_addr constant [56 x i8] c"PMU ERROR: Illegal PSI mode for setting VCORE voltage!\0A\00", align 1
@__const.PMIC_VR_VOSEL_INIT_CONFIG.viber_vosel = private unnamed_addr constant [8 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7], align 4
@__FUNCTION__.PMIC_VR_VOSEL_INIT_CONFIG = private unnamed_addr constant [26 x i8] c"PMIC_VR_VOSEL_INIT_CONFIG\00", align 1
@.str.19.231 = private unnamed_addr constant [32 x i8] c"PMU ERROR: No support voltage!\0A\00", align 1
@pmu_control_mtcmos_mt6385.local_flag = internal unnamed_addr global i16 0, align 2, !dbg !2586
@pmu_control_mtcmos_mt6385.mtcmos_flag = internal unnamed_addr global i16 0, align 2, !dbg !2589
@pmu_ctrl_va28_ldo_mt6385.resoure_count = internal unnamed_addr global i32 0, align 4, !dbg !2591
@pmu_ctrl_va28_ldo_mt6385.version = internal unnamed_addr global i8 0, align 1, !dbg !2598
@__const.pmu_get_vcore_setting_index.vcbuck_voval = private unnamed_addr constant [7 x i8] c"\02\04\06\08\0A\0C\0E", align 1
@pmu_set_vcore_voltage_mt6385.Vcore_Resource_Ctrl = internal unnamed_addr global [7 x i8] zeroinitializer, align 1, !dbg !2600
@pmu_set_vcore_voltage_mt6385.origin_voltage = internal unnamed_addr global i8 0, align 1, !dbg !2608
@pmu_set_vcore_voltage_mt6385.old_vcore = internal unnamed_addr global i8 0, align 1, !dbg !2610
@pmu_set_vcore_voltage_mt6385.old_vcore_lp = internal unnamed_addr global i8 0, align 1, !dbg !2612
@pmu_set_vcore_voltage_mt6385.init = internal unnamed_addr global i1 false, align 1, !dbg !2624
@pmu_set_vcore_s1_buck_mt6385.S1_setting = internal unnamed_addr global i32 255, align 4, !dbg !2616
@__const.pmu_set_vcore_s1_buck_mt6385.vcbuck_voval = private unnamed_addr constant [7 x i32] [i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14], align 4
@emi_settings = dso_local local_unnamed_addr global [1 x %struct.EMI_SETTINGS] [%struct.EMI_SETTINGS { i32 16, i32 0, i32 16384, i32 -1608118272, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 131074, i32 131074 }], section ".tcm_rwdata", align 4, !dbg !2625
@__EMI_CurSR0 = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !2637
@__EMI_CurSR1 = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !2639
@__EMI_CurSR2 = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !2641
@emi_register = dso_local local_unnamed_addr global %struct.EMI_REGISTER_T* inttoptr (i32 -1610285056 to %struct.EMI_REGISTER_T*), section ".tcm_rwdata", align 4, !dbg !2643
@EMI_GENA_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2746
@EMI_RDCT_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2748
@EMI_DSRAM_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2750
@EMI_MSRAM_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2752
@EMI_IDL_C_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2754
@EMI_IDL_D_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2756
@EMI_IDL_E_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2758
@EMI_ODL_C_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2760
@EMI_ODL_D_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2762
@EMI_ODL_E_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2764
@EMI_ODL_F_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2766
@EMI_IO_A_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2768
@EMI_IO_B_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2770
@__const.TestCase_MBIST.mbist_data = private unnamed_addr constant [2 x i32] [i32 23205, i32 65535], align 4
@emi_register_backup = dso_local global %struct.EMI_REGISTER_T zeroinitializer, section ".tcm_zidata", align 4, !dbg !2772
@dvfs_dma_runing_status = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !2744
@cm_freq_state = dso_local local_unnamed_addr global i32 1, section ".tcm_rwdata", align 4, !dbg !2793
@.str.252 = private unnamed_addr constant [5 x i8] c"\0D\0A\0D\0A\00", align 1
@.str.1.253 = private unnamed_addr constant [20 x i8] c"welcome to main()\0D\0A\00", align 1
@.str.2.254 = private unnamed_addr constant [47 x i8] c"[keypad][test]keypad_custom_init init failed\0D\0A\00", align 1
@.str.3.255 = private unnamed_addr constant [73 x i8] c"[keypad][test]hal_keypad_powerkey_register_callback failed, state = %d\0D\0A\00", align 1
@.str.4.258 = private unnamed_addr constant [8 x i8] c"release\00", align 1
@.str.5.259 = private unnamed_addr constant [6 x i8] c"press\00", align 1
@.str.6.260 = private unnamed_addr constant [10 x i8] c"longpress\00", align 1
@.str.7.261 = private unnamed_addr constant [7 x i8] c"repeat\00", align 1
@.str.8.262 = private unnamed_addr constant [14 x i8] c"pmu_longpress\00", align 1
@__const.keypad_user_powerkey_handler.string = private unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4.258, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5.259, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.6.260, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.261, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8.262, i32 0, i32 0)], align 4
@.str.9.256 = private unnamed_addr constant [44 x i8] c"[keypad][test]powerkey no key in buffer\0D\0A\0D\0A\00", align 1
@.str.10.257 = private unnamed_addr constant [47 x i8] c"[keypad][test]powerkey data:[%d], state:[%s]\0D\0A\00", align 1
@_sbrk_r.heap_end = internal unnamed_addr global i8* null, align 4, !dbg !2805
@end = external dso_local global i8, align 1
@System_Initialize_Done = internal global i32 0, align 4, !dbg !3006
@SystemCoreClock = dso_local local_unnamed_addr global i32 0, align 4, !dbg !3121
@custom_key_data = dso_local local_unnamed_addr constant [32 x i8] c"!\22#$%%&'()*+,-./0123456789:\00;<=>", align 1, !dbg !3123
@custom_col_and_row_sel = dso_local local_unnamed_addr constant i32 455, align 4, !dbg !3138
@custom_powerkey_data = dso_local local_unnamed_addr constant i32 24, align 4, !dbg !3140
@keypad_mode = dso_local local_unnamed_addr constant i32 1, align 4, !dbg !3142
@__FUNCTION__.keypad_custom_normal_init = private unnamed_addr constant [26 x i8] c"keypad_custom_normal_init\00", align 1
@.str.265 = private unnamed_addr constant [44 x i8] c"[keypad]normal keypad custom initial fail\0D\0A\00", align 1
@powerkey_context = dso_local global %struct.powerkey_context_t zeroinitializer, align 4, !dbg !3148
@__FUNCTION__.keypad_custom_powerkey_init = private unnamed_addr constant [28 x i8] c"keypad_custom_powerkey_init\00", align 1
@.str.1.268 = private unnamed_addr constant [39 x i8] c"[keypad]powerkey custom initial fail\0D\0A\00", align 1
@keypad_context = dso_local global %struct.keypad_context_t zeroinitializer, align 4, !dbg !3155
@build_date_time_str = dso_local local_unnamed_addr global [31 x i8] c"2022/12/13 08:00:18 GMT +00:00\00", align 1, !dbg !3189
@sw_verno_str = dso_local local_unnamed_addr global [11 x i8] c"SDK_V4.6.1\00", align 1, !dbg !3194
@hw_verno_str = dso_local local_unnamed_addr global [11 x i8] c"mt2523_hdk\00", align 1, !dbg !3200

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_init(i32 noundef %0) local_unnamed_addr #0 !dbg !3326 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3332, metadata !DIExpression()), !dbg !3333
  %2 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #20, !dbg !3334
  br i1 %2, label %3, label %32, !dbg !3336

3:                                                ; preds = %1
  %4 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, !dbg !3337
  %5 = getelementptr inbounds %struct.gpt_context_t, %struct.gpt_context_t* %4, i32 0, i32 0, !dbg !3339
  %6 = load i32, i32* %5, align 4, !dbg !3339
  %7 = icmp eq i32 %6, 1, !dbg !3340
  br i1 %7, label %32, label %8, !dbg !3341

8:                                                ; preds = %3
  %9 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !3342
  %10 = load i8, i8* %9, align 4, !dbg !3342, !range !3343
  %11 = icmp eq i8 %10, 0, !dbg !3342
  br i1 %11, label %12, label %32, !dbg !3344

12:                                               ; preds = %8
  %13 = bitcast %struct.gpt_context_t* %4 to i8*, !dbg !3345
  %14 = tail call i8* @memset(i8* noundef nonnull %13, i32 noundef 0, i32 noundef 16) #21, !dbg !3346
  tail call void @gpt_open_clock_source() #21, !dbg !3347
  store i8 1, i8* %9, align 4, !dbg !3348
  %15 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %0, !dbg !3349
  %16 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %15, align 4, !dbg !3349
  %17 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %16, i32 0, i32 2, !dbg !3350
  %18 = load volatile i32, i32* %17, align 4, !dbg !3351
  %19 = and i32 %18, -2, !dbg !3351
  store volatile i32 %19, i32* %17, align 4, !dbg !3351
  %20 = shl nuw i32 1, %0, !dbg !3352
  %21 = xor i32 %20, -1, !dbg !3353
  %22 = load %struct.GPT_REGISTER_GLOABL_T*, %struct.GPT_REGISTER_GLOABL_T** @gp_gpt_glb, align 4, !dbg !3354
  %23 = getelementptr inbounds %struct.GPT_REGISTER_GLOABL_T, %struct.GPT_REGISTER_GLOABL_T* %22, i32 0, i32 2, !dbg !3355
  %24 = load volatile i32, i32* %23, align 4, !dbg !3356
  %25 = and i32 %24, %21, !dbg !3356
  store volatile i32 %25, i32* %23, align 4, !dbg !3356
  %26 = getelementptr inbounds [6 x i8*], [6 x i8*]* @gpt_lock_sleep_name, i32 0, i32 %0, !dbg !3357
  %27 = load i8*, i8** %26, align 4, !dbg !3357
  %28 = tail call zeroext i8 @hal_sleep_manager_set_sleep_handle(i8* noundef %27) #21, !dbg !3357
  %29 = getelementptr inbounds [6 x i8], [6 x i8]* @gpt_lock_sleep_handle, i32 0, i32 %0, !dbg !3357
  store i8 %28, i8* %29, align 1, !dbg !3357
  %30 = icmp eq i8 %28, -1, !dbg !3359
  br i1 %30, label %31, label %32, !dbg !3357

31:                                               ; preds = %12
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @__FUNCTION__.hal_gpt_init, i32 0, i32 0), i32 noundef 123, i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str, i32 0, i32 0), i32 noundef %0) #21, !dbg !3361
  br label %32, !dbg !3361

32:                                               ; preds = %12, %3, %8, %1, %31
  %33 = phi i32 [ -3, %31 ], [ -2, %1 ], [ -4, %8 ], [ -4, %3 ], [ 0, %12 ], !dbg !3333
  ret i32 %33, !dbg !3363
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) unnamed_addr #2 !dbg !3364 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3368, metadata !DIExpression()), !dbg !3369
  %2 = load i8, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3370, !range !3343
  %3 = icmp ne i8 %2, 0, !dbg !3372
  %4 = icmp ne i32 %0, 3
  %5 = icmp ult i32 %0, 4
  %6 = or i1 %4, %3, !dbg !3373
  %7 = and i1 %5, %6, !dbg !3373
  ret i1 %7, !dbg !3374
}

; Function Attrs: optsize
declare dso_local i8* @memset(i8* noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: optsize
declare dso_local zeroext i8 @hal_sleep_manager_set_sleep_handle(i8* noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_deinit(i32 noundef %0) local_unnamed_addr #0 !dbg !3375 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3377, metadata !DIExpression()), !dbg !3378
  %2 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #20, !dbg !3379
  br i1 %2, label %3, label %17, !dbg !3381

3:                                                ; preds = %1
  %4 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, !dbg !3382
  %5 = getelementptr inbounds %struct.gpt_context_t, %struct.gpt_context_t* %4, i32 0, i32 0, !dbg !3384
  %6 = load i32, i32* %5, align 4, !dbg !3384
  %7 = icmp eq i32 %6, 1, !dbg !3385
  br i1 %7, label %17, label %8, !dbg !3386

8:                                                ; preds = %3
  %9 = bitcast %struct.gpt_context_t* %4 to i8*, !dbg !3387
  %10 = tail call i8* @memset(i8* noundef nonnull %9, i32 noundef 0, i32 noundef 16) #21, !dbg !3388
  %11 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !3389
  store i8 0, i8* %11, align 4, !dbg !3390
  %12 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %0, !dbg !3391
  %13 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %12, align 4, !dbg !3391
  tail call void @gpt_reset_default_timer(%struct.GPT_REGISTER_T* noundef %13) #21, !dbg !3392
  %14 = getelementptr inbounds [6 x i8], [6 x i8]* @gpt_lock_sleep_handle, i32 0, i32 %0, !dbg !3393
  %15 = load i8, i8* %14, align 1, !dbg !3393
  %16 = tail call i32 @hal_sleep_manager_release_sleep_handle(i8 noundef zeroext %15) #21, !dbg !3393
  br label %17, !dbg !3395

17:                                               ; preds = %3, %1, %8
  %18 = phi i32 [ 0, %8 ], [ -2, %1 ], [ -3, %3 ], !dbg !3378
  ret i32 %18, !dbg !3396
}

; Function Attrs: optsize
declare dso_local i32 @hal_sleep_manager_release_sleep_handle(i8 noundef zeroext) local_unnamed_addr #3

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_get_free_run_count(i32 noundef %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #0 section ".tcm_code" !dbg !3397 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3402, metadata !DIExpression()), !dbg !3404
  call void @llvm.dbg.value(metadata i32* %1, metadata !3403, metadata !DIExpression()), !dbg !3404
  switch i32 %0, label %22 [
    i32 0, label %3
    i32 1, label %11
  ], !dbg !3405

3:                                                ; preds = %2
  %4 = load i32, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 5, i32 0), align 4, !dbg !3406
  %5 = icmp eq i32 %4, 1, !dbg !3410
  br i1 %5, label %8, label %6, !dbg !3411

6:                                                ; preds = %3
  %7 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 5), align 4, !dbg !3412
  tail call void @gpt_start_free_run_timer(%struct.GPT_REGISTER_T* noundef %7, i32 noundef 16, i32 noundef 0) #21, !dbg !3414
  store i32 1, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 5, i32 0), align 4, !dbg !3415
  br label %8, !dbg !3416

8:                                                ; preds = %6, %3
  %9 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 5), align 4, !dbg !3417
  %10 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %9) #21, !dbg !3418
  br label %20, !dbg !3419

11:                                               ; preds = %2
  %12 = load i32, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !3420
  %13 = icmp eq i32 %12, 1, !dbg !3424
  br i1 %13, label %16, label %14, !dbg !3425

14:                                               ; preds = %11
  %15 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 4), align 4, !dbg !3426
  tail call void @gpt_start_free_run_timer(%struct.GPT_REGISTER_T* noundef %15, i32 noundef 0, i32 noundef 12) #21, !dbg !3428
  store i32 1, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !3429
  br label %16, !dbg !3430

16:                                               ; preds = %14, %11
  %17 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 4), align 4, !dbg !3431
  %18 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %17) #21, !dbg !3432
  %19 = tail call i32 @gpt_clock_calibrate_count_to_us(i32 noundef %18) #21, !dbg !3433
  br label %20

20:                                               ; preds = %16, %8
  %21 = phi i32 [ %19, %16 ], [ %10, %8 ], !dbg !3434
  store i32 %21, i32* %1, align 4, !dbg !3434
  br label %22, !dbg !3435

22:                                               ; preds = %2, %20
  %23 = phi i32 [ 0, %20 ], [ -1, %2 ], !dbg !3404
  ret i32 %23, !dbg !3436
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @hal_gpt_get_duration_count(i32 noundef %0, i32 noundef %1, i32* noundef writeonly %2) local_unnamed_addr #4 section ".tcm_code" !dbg !3437 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3441, metadata !DIExpression()), !dbg !3444
  call void @llvm.dbg.value(metadata i32 %1, metadata !3442, metadata !DIExpression()), !dbg !3444
  call void @llvm.dbg.value(metadata i32* %2, metadata !3443, metadata !DIExpression()), !dbg !3444
  %4 = icmp eq i32* %2, null, !dbg !3445
  br i1 %4, label %7, label %5, !dbg !3447

5:                                                ; preds = %3
  %6 = sub i32 %1, %0, !dbg !3448
  store i32 %6, i32* %2, align 4, !dbg !3448
  br label %7, !dbg !3450

7:                                                ; preds = %3, %5
  %8 = phi i32 [ 0, %5 ], [ -1, %3 ], !dbg !3444
  ret i32 %8, !dbg !3451
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @hal_gpt_get_running_status(i32 noundef %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #5 !dbg !3452 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3457, metadata !DIExpression()), !dbg !3459
  call void @llvm.dbg.value(metadata i32* %1, metadata !3458, metadata !DIExpression()), !dbg !3459
  %3 = icmp ugt i32 %0, 5, !dbg !3460
  br i1 %3, label %7, label %4, !dbg !3462

4:                                                ; preds = %2
  %5 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !3463
  %6 = load i32, i32* %5, align 4, !dbg !3463
  store i32 %6, i32* %1, align 4, !dbg !3464
  br label %7, !dbg !3465

7:                                                ; preds = %2, %4
  %8 = phi i32 [ 0, %4 ], [ -2, %2 ], !dbg !3459
  ret i32 %8, !dbg !3466
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_register_callback(i32 noundef %0, void (i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !3467 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3471, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.value(metadata void (i8*)* %1, metadata !3472, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.value(metadata i8* %2, metadata !3473, metadata !DIExpression()), !dbg !3474
  %4 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #20, !dbg !3475
  br i1 %4, label %5, label %18, !dbg !3477

5:                                                ; preds = %3
  %6 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !3478
  %7 = load i32, i32* %6, align 4, !dbg !3478
  %8 = icmp eq i32 %7, 1, !dbg !3480
  br i1 %8, label %18, label %9, !dbg !3481

9:                                                ; preds = %5
  %10 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !3482
  %11 = load i8, i8* %10, align 4, !dbg !3482, !range !3343
  %12 = icmp eq i8 %11, 1, !dbg !3483
  br i1 %12, label %13, label %18, !dbg !3484

13:                                               ; preds = %9
  %14 = icmp eq void (i8*)* %1, null, !dbg !3485
  br i1 %14, label %18, label %15, !dbg !3487

15:                                               ; preds = %13
  %16 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 1, i32 0, !dbg !3488
  store void (i8*)* %1, void (i8*)** %16, align 4, !dbg !3489
  %17 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 1, i32 1, !dbg !3490
  store i8* %2, i8** %17, align 4, !dbg !3491
  tail call void @gpt_nvic_register() #21, !dbg !3492
  br label %18, !dbg !3493

18:                                               ; preds = %13, %5, %9, %3, %15
  %19 = phi i32 [ 0, %15 ], [ -2, %3 ], [ -3, %9 ], [ -3, %5 ], [ -1, %13 ], !dbg !3474
  ret i32 %19, !dbg !3494
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_start_timer_ms(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !3495 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !3500, metadata !DIExpression()), !dbg !3504
  call void @llvm.dbg.value(metadata i32 %1, metadata !3501, metadata !DIExpression()), !dbg !3504
  call void @llvm.dbg.value(metadata i32 %2, metadata !3502, metadata !DIExpression()), !dbg !3504
  %5 = bitcast i32* %4 to i8*, !dbg !3505
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5), !dbg !3505
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3503, metadata !DIExpression()), !dbg !3506
  %6 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #20, !dbg !3507
  br i1 %6, label %7, label %51, !dbg !3509

7:                                                ; preds = %3
  %8 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !3510
  %9 = load i32, i32* %8, align 4, !dbg !3510
  %10 = icmp eq i32 %9, 1, !dbg !3512
  br i1 %10, label %51, label %11, !dbg !3513

11:                                               ; preds = %7
  %12 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !3514
  %13 = load i8, i8* %12, align 4, !dbg !3514, !range !3343
  %14 = icmp eq i8 %13, 1, !dbg !3515
  br i1 %14, label %15, label %51, !dbg !3516

15:                                               ; preds = %11
  %16 = icmp ugt i32 %1, 130150523, !dbg !3517
  br i1 %16, label %51, label %17, !dbg !3519

17:                                               ; preds = %15
  %18 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !3520
  store volatile i32 %18, i32* %4, align 4, !dbg !3521
  tail call void @gpt_open_clock_source() #21, !dbg !3522
  %19 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %0, !dbg !3523
  %20 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3523
  %21 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %20, i32 0, i32 2, !dbg !3524
  %22 = load volatile i32, i32* %21, align 4, !dbg !3525
  %23 = and i32 %22, -2, !dbg !3525
  store volatile i32 %23, i32* %21, align 4, !dbg !3525
  %24 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3526
  %25 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %24, i32 0, i32 0, !dbg !3527
  %26 = load volatile i32, i32* %25, align 4, !dbg !3528
  %27 = and i32 %26, -2, !dbg !3528
  store volatile i32 %27, i32* %25, align 4, !dbg !3528
  %28 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3529
  %29 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %28, i32 0, i32 1, !dbg !3530
  store volatile i32 16, i32* %29, align 4, !dbg !3531
  %30 = tail call i32 @gpt_convert_ms_to_32k_count(i32 noundef %1) #21, !dbg !3532
  %31 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3533
  %32 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %31, i32 0, i32 6, !dbg !3534
  store volatile i32 %30, i32* %32, align 4, !dbg !3535
  %33 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3536
  %34 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %33, i32 0, i32 4, !dbg !3537
  store volatile i32 1, i32* %34, align 4, !dbg !3538
  %35 = shl i32 %2, 4, !dbg !3539
  %36 = or i32 %35, 2, !dbg !3540
  %37 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3541
  %38 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %37, i32 0, i32 0, !dbg !3542
  store volatile i32 %36, i32* %38, align 4, !dbg !3543
  %39 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4
  %40 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %39, i32 0, i32 5
  br label %41, !dbg !3544

41:                                               ; preds = %41, %17
  %42 = load volatile i32, i32* %40, align 4, !dbg !3545
  %43 = icmp eq i32 %42, 0, !dbg !3544
  br i1 %43, label %44, label %41, !dbg !3544, !llvm.loop !3546

44:                                               ; preds = %41
  %45 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %39, i32 0, i32 0, !dbg !3548
  %46 = load volatile i32, i32* %45, align 4, !dbg !3549
  %47 = or i32 %46, 1, !dbg !3549
  store volatile i32 %47, i32* %45, align 4, !dbg !3549
  %48 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3550
  %49 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %48, i32 0, i32 2, !dbg !3551
  store volatile i32 1, i32* %49, align 4, !dbg !3552
  store i32 1, i32* %8, align 4, !dbg !3553
  %50 = load volatile i32, i32* %4, align 4, !dbg !3554
  tail call void @restore_interrupt_mask(i32 noundef %50) #21, !dbg !3555
  br label %51, !dbg !3556

51:                                               ; preds = %15, %7, %11, %3, %44
  %52 = phi i32 [ 0, %44 ], [ -2, %3 ], [ -4, %11 ], [ -4, %7 ], [ -1, %15 ], !dbg !3504
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !3557
  ret i32 %52, !dbg !3557
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_delay_ms(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !3558 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3562, metadata !DIExpression()), !dbg !3563
  %2 = load i32, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 5, i32 0), align 4, !dbg !3564
  %3 = icmp eq i32 %2, 1, !dbg !3566
  br i1 %3, label %6, label %4, !dbg !3567

4:                                                ; preds = %1
  %5 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 5), align 4, !dbg !3568
  tail call void @gpt_start_free_run_timer(%struct.GPT_REGISTER_T* noundef %5, i32 noundef 16, i32 noundef 0) #21, !dbg !3570
  store i32 1, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 5, i32 0), align 4, !dbg !3571
  br label %6, !dbg !3572

6:                                                ; preds = %4, %1
  %7 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 5), align 4, !dbg !3573
  %8 = tail call i32 @gpt_convert_ms_to_32k_count(i32 noundef %0) #21, !dbg !3574
  tail call void @gpt_delay_time(%struct.GPT_REGISTER_T* noundef %7, i32 noundef %8) #21, !dbg !3575
  ret i32 0, !dbg !3576
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_start_timer_us(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !3577 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !3579, metadata !DIExpression()), !dbg !3583
  call void @llvm.dbg.value(metadata i32 %1, metadata !3580, metadata !DIExpression()), !dbg !3583
  call void @llvm.dbg.value(metadata i32 %2, metadata !3581, metadata !DIExpression()), !dbg !3583
  %5 = bitcast i32* %4 to i8*, !dbg !3584
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5), !dbg !3584
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3582, metadata !DIExpression()), !dbg !3585
  %6 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #20, !dbg !3586
  br i1 %6, label %7, label %53, !dbg !3588

7:                                                ; preds = %3
  %8 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !3589
  %9 = load i32, i32* %8, align 4, !dbg !3589
  %10 = icmp eq i32 %9, 1, !dbg !3591
  br i1 %10, label %53, label %11, !dbg !3592

11:                                               ; preds = %7
  %12 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !3593
  %13 = load i8, i8* %12, align 4, !dbg !3593, !range !3343
  %14 = icmp eq i8 %13, 1, !dbg !3594
  br i1 %14, label %15, label %53, !dbg !3595

15:                                               ; preds = %11
  %16 = getelementptr inbounds [6 x i8], [6 x i8]* @gpt_lock_sleep_handle, i32 0, i32 %0, !dbg !3596
  %17 = load i8, i8* %16, align 1, !dbg !3596
  %18 = tail call i32 @hal_sleep_manager_lock_sleep(i8 noundef zeroext %17) #21, !dbg !3596
  %19 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 3, !dbg !3598
  store i8 1, i8* %19, align 1, !dbg !3599
  %20 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !3600
  store volatile i32 %20, i32* %4, align 4, !dbg !3601
  tail call void @gpt_open_clock_source() #21, !dbg !3602
  %21 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %0, !dbg !3603
  %22 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %21, align 4, !dbg !3603
  %23 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %22, i32 0, i32 2, !dbg !3604
  %24 = load volatile i32, i32* %23, align 4, !dbg !3605
  %25 = and i32 %24, -2, !dbg !3605
  store volatile i32 %25, i32* %23, align 4, !dbg !3605
  %26 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %21, align 4, !dbg !3606
  %27 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %26, i32 0, i32 0, !dbg !3607
  %28 = load volatile i32, i32* %27, align 4, !dbg !3608
  %29 = and i32 %28, -2, !dbg !3608
  store volatile i32 %29, i32* %27, align 4, !dbg !3608
  %30 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %21, align 4, !dbg !3609
  %31 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %30, i32 0, i32 1, !dbg !3610
  store volatile i32 12, i32* %31, align 4, !dbg !3611
  %32 = tail call i32 @gpt_clock_calibrate_us_to_count(i32 noundef %1) #21, !dbg !3612
  %33 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %21, align 4, !dbg !3613
  %34 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %33, i32 0, i32 6, !dbg !3614
  store volatile i32 %32, i32* %34, align 4, !dbg !3615
  %35 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %21, align 4, !dbg !3616
  %36 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %35, i32 0, i32 4, !dbg !3617
  store volatile i32 1, i32* %36, align 4, !dbg !3618
  %37 = shl i32 %2, 4, !dbg !3619
  %38 = or i32 %37, 2, !dbg !3620
  %39 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %21, align 4, !dbg !3621
  %40 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %39, i32 0, i32 0, !dbg !3622
  store volatile i32 %38, i32* %40, align 4, !dbg !3623
  %41 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %21, align 4
  %42 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %41, i32 0, i32 5
  br label %43, !dbg !3624

43:                                               ; preds = %43, %15
  %44 = load volatile i32, i32* %42, align 4, !dbg !3625
  %45 = icmp eq i32 %44, 0, !dbg !3624
  br i1 %45, label %46, label %43, !dbg !3624, !llvm.loop !3626

46:                                               ; preds = %43
  %47 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %41, i32 0, i32 0, !dbg !3628
  %48 = load volatile i32, i32* %47, align 4, !dbg !3629
  %49 = or i32 %48, 1, !dbg !3629
  store volatile i32 %49, i32* %47, align 4, !dbg !3629
  %50 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %21, align 4, !dbg !3630
  %51 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %50, i32 0, i32 2, !dbg !3631
  store volatile i32 1, i32* %51, align 4, !dbg !3632
  %52 = load volatile i32, i32* %4, align 4, !dbg !3633
  tail call void @restore_interrupt_mask(i32 noundef %52) #21, !dbg !3634
  store i32 1, i32* %8, align 4, !dbg !3635
  br label %53, !dbg !3636

53:                                               ; preds = %7, %11, %3, %46
  %54 = phi i32 [ 0, %46 ], [ -2, %3 ], [ -4, %11 ], [ -4, %7 ], !dbg !3583
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !3637
  ret i32 %54, !dbg !3637
}

; Function Attrs: optsize
declare dso_local i32 @hal_sleep_manager_lock_sleep(i8 noundef zeroext) local_unnamed_addr #3

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_delay_us(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !3638 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3640, metadata !DIExpression()), !dbg !3641
  %2 = load i32, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !3642
  %3 = icmp eq i32 %2, 1, !dbg !3644
  br i1 %3, label %6, label %4, !dbg !3645

4:                                                ; preds = %1
  %5 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 4), align 4, !dbg !3646
  tail call void @gpt_start_free_run_timer(%struct.GPT_REGISTER_T* noundef %5, i32 noundef 0, i32 noundef 12) #21, !dbg !3648
  store i32 1, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !3649
  br label %6, !dbg !3650

6:                                                ; preds = %4, %1
  %7 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 4), align 4, !dbg !3651
  %8 = tail call i32 @gpt_clock_calibrate_us_to_count(i32 noundef %0) #21, !dbg !3652
  tail call void @gpt_delay_time(%struct.GPT_REGISTER_T* noundef %7, i32 noundef %8) #21, !dbg !3653
  ret i32 0, !dbg !3654
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_stop_timer(i32 noundef %0) local_unnamed_addr #0 !dbg !3655 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !3657, metadata !DIExpression()), !dbg !3659
  %3 = bitcast i32* %2 to i8*, !dbg !3660
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !3660
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3658, metadata !DIExpression()), !dbg !3661
  %4 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #20, !dbg !3662
  br i1 %4, label %5, label %27, !dbg !3664

5:                                                ; preds = %1
  %6 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !3665
  store volatile i32 %6, i32* %2, align 4, !dbg !3666
  %7 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %0, !dbg !3667
  %8 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %7, align 4, !dbg !3667
  %9 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %8, i32 0, i32 2, !dbg !3668
  %10 = load volatile i32, i32* %9, align 4, !dbg !3669
  %11 = and i32 %10, -2, !dbg !3669
  store volatile i32 %11, i32* %9, align 4, !dbg !3669
  %12 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %7, align 4, !dbg !3670
  %13 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %12, i32 0, i32 0, !dbg !3671
  %14 = load volatile i32, i32* %13, align 4, !dbg !3672
  %15 = and i32 %14, -2, !dbg !3672
  store volatile i32 %15, i32* %13, align 4, !dbg !3672
  %16 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %7, align 4, !dbg !3673
  %17 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %16, i32 0, i32 4, !dbg !3674
  store volatile i32 1, i32* %17, align 4, !dbg !3675
  %18 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !3676
  store i32 0, i32* %18, align 4, !dbg !3677
  %19 = load volatile i32, i32* %2, align 4, !dbg !3678
  tail call void @restore_interrupt_mask(i32 noundef %19) #21, !dbg !3679
  %20 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 3, !dbg !3680
  %21 = load i8, i8* %20, align 1, !dbg !3680, !range !3343
  %22 = icmp eq i8 %21, 0, !dbg !3680
  br i1 %22, label %27, label %23, !dbg !3682

23:                                               ; preds = %5
  %24 = getelementptr inbounds [6 x i8], [6 x i8]* @gpt_lock_sleep_handle, i32 0, i32 %0, !dbg !3683
  %25 = load i8, i8* %24, align 1, !dbg !3683
  %26 = tail call i32 @hal_sleep_manager_unlock_sleep(i8 noundef zeroext %25) #21, !dbg !3683
  store i8 0, i8* %20, align 1, !dbg !3686
  br label %27, !dbg !3687

27:                                               ; preds = %5, %23, %1
  %28 = phi i32 [ -2, %1 ], [ 0, %23 ], [ 0, %5 ], !dbg !3659
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !3688
  ret i32 %28, !dbg !3688
}

; Function Attrs: optsize
declare dso_local i32 @hal_sleep_manager_unlock_sleep(i8 noundef zeroext) local_unnamed_addr #3

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_sw_get_timer(i32* noundef writeonly %0) local_unnamed_addr #0 !dbg !3689 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !3693, metadata !DIExpression()), !dbg !3696
  %2 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !3697
  %3 = icmp ugt i32 %2, 31, !dbg !3699
  br i1 %3, label %13, label %4, !dbg !3700

4:                                                ; preds = %1
  %5 = icmp eq i32* %0, null, !dbg !3701
  br i1 %5, label %13, label %6, !dbg !3703

6:                                                ; preds = %4
  %7 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !3704
  call void @llvm.dbg.value(metadata i32 %7, metadata !3695, metadata !DIExpression()), !dbg !3696
  %8 = tail call i32 @gpt_sw_get_free_timer() #21, !dbg !3705
  call void @llvm.dbg.value(metadata i32 %8, metadata !3694, metadata !DIExpression()), !dbg !3696
  %9 = or i32 %8, -559087616, !dbg !3706
  store i32 %9, i32* %0, align 4, !dbg !3707
  %10 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %8, i32 2, !dbg !3708
  store i8 1, i8* %10, align 4, !dbg !3709
  %11 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !3710
  %12 = add i32 %11, 1, !dbg !3710
  store i32 %12, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !3710
  tail call void @restore_interrupt_mask(i32 noundef %7) #21, !dbg !3711
  br label %13, !dbg !3712

13:                                               ; preds = %4, %1, %6
  %14 = phi i32 [ 0, %6 ], [ -3, %1 ], [ -1, %4 ], !dbg !3696
  ret i32 %14, !dbg !3713
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @hal_gpt_sw_free_timer(i32 noundef %0) local_unnamed_addr #7 !dbg !3714 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !3716, metadata !DIExpression()), !dbg !3718
  %3 = bitcast i32* %2 to i8*, !dbg !3719
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !3719
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3717, metadata !DIExpression()), !dbg !3720
  %4 = and i32 %0, -559087616, !dbg !3721
  %5 = icmp eq i32 %4, -559087616, !dbg !3723
  br i1 %5, label %6, label %24, !dbg !3724

6:                                                ; preds = %1
  %7 = and i32 %0, 65535, !dbg !3725
  store volatile i32 %7, i32* %2, align 4, !dbg !3726
  %8 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !3727
  %9 = icmp eq i32 %8, 0, !dbg !3729
  br i1 %9, label %24, label %10, !dbg !3730

10:                                               ; preds = %6
  %11 = load volatile i32, i32* %2, align 4, !dbg !3731
  %12 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %11, i32 3, !dbg !3733
  %13 = load i8, i8* %12, align 1, !dbg !3733, !range !3343
  %14 = icmp eq i8 %13, 0, !dbg !3733
  br i1 %14, label %15, label %24, !dbg !3734

15:                                               ; preds = %10
  %16 = load volatile i32, i32* %2, align 4, !dbg !3735
  %17 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %16, i32 2, !dbg !3737
  %18 = load i8, i8* %17, align 4, !dbg !3737, !range !3343
  %19 = icmp eq i8 %18, 1, !dbg !3738
  br i1 %19, label %20, label %24, !dbg !3739

20:                                               ; preds = %15
  %21 = load volatile i32, i32* %2, align 4, !dbg !3740
  %22 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %21, i32 2, !dbg !3741
  store i8 0, i8* %22, align 4, !dbg !3742
  %23 = add i32 %8, -1, !dbg !3743
  store i32 %23, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !3743
  br label %24, !dbg !3744

24:                                               ; preds = %15, %10, %6, %1, %20
  %25 = phi i32 [ 0, %20 ], [ -1, %1 ], [ -3, %6 ], [ -3, %10 ], [ -3, %15 ], !dbg !3718
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !3745
  ret i32 %25, !dbg !3745
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_sw_start_timer_ms(i32 noundef %0, i32 noundef %1, void (i8*)* noundef %2, i8* noundef %3) local_unnamed_addr #0 !dbg !3746 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3750, metadata !DIExpression()), !dbg !3757
  call void @llvm.dbg.value(metadata i32 %1, metadata !3751, metadata !DIExpression()), !dbg !3757
  call void @llvm.dbg.value(metadata void (i8*)* %2, metadata !3752, metadata !DIExpression()), !dbg !3757
  call void @llvm.dbg.value(metadata i8* %3, metadata !3753, metadata !DIExpression()), !dbg !3757
  %5 = and i32 %0, -559087616, !dbg !3758
  %6 = icmp ne i32 %5, -559087616, !dbg !3760
  %7 = icmp eq void (i8*)* %2, null
  %8 = or i1 %6, %7, !dbg !3761
  call void @llvm.dbg.value(metadata i32 %0, metadata !3756, metadata !DIExpression(DW_OP_constu, 65535, DW_OP_and, DW_OP_stack_value)), !dbg !3757
  br i1 %8, label %44, label %9, !dbg !3761

9:                                                ; preds = %4
  %10 = and i32 %0, 65535, !dbg !3762
  call void @llvm.dbg.value(metadata i32 %10, metadata !3756, metadata !DIExpression()), !dbg !3757
  %11 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %10, i32 3, !dbg !3763
  %12 = load i8, i8* %11, align 1, !dbg !3763, !range !3343
  %13 = icmp eq i8 %12, 0, !dbg !3763
  br i1 %13, label %14, label %44, !dbg !3765

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %10, i32 2, !dbg !3766
  %16 = load i8, i8* %15, align 4, !dbg !3766, !range !3343
  %17 = icmp eq i8 %16, 1, !dbg !3768
  br i1 %17, label %18, label %44, !dbg !3769

18:                                               ; preds = %14
  %19 = icmp ugt i32 %1, 130150523, !dbg !3770
  br i1 %19, label %44, label %20, !dbg !3772

20:                                               ; preds = %18
  %21 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !3773
  call void @llvm.dbg.value(metadata i32 %21, metadata !3755, metadata !DIExpression()), !dbg !3757
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3774
  %22 = load i8, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 5), align 4, !dbg !3775, !range !3343
  %23 = icmp eq i8 %22, 0, !dbg !3777
  br i1 %23, label %24, label %27, !dbg !3778

24:                                               ; preds = %20
  %25 = tail call i32 @hal_gpt_init(i32 noundef 3) #20, !dbg !3779
  %26 = tail call i32 @hal_gpt_register_callback(i32 noundef 3, void (i8*)* noundef nonnull @gpt_sw_handler, i8* noundef null) #20, !dbg !3781
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 5), align 4, !dbg !3782
  br label %27, !dbg !3783

27:                                               ; preds = %24, %20
  %28 = tail call i32 @hal_gpt_stop_timer(i32 noundef 3) #20, !dbg !3784
  %29 = load i8, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 6), align 1, !dbg !3785, !range !3343
  %30 = icmp eq i8 %29, 0, !dbg !3787
  br i1 %30, label %31, label %34, !dbg !3788

31:                                               ; preds = %27
  %32 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4, !dbg !3789
  %33 = tail call i32 @gpt_sw_get_current_time_ms(%struct.GPT_REGISTER_T* noundef %32) #21, !dbg !3791
  call void @llvm.dbg.value(metadata i32 %33, metadata !3754, metadata !DIExpression()), !dbg !3757
  br label %34, !dbg !3792

34:                                               ; preds = %27, %31
  %35 = phi i32 [ %33, %31 ], [ 0, %27 ], !dbg !3793
  call void @llvm.dbg.value(metadata i32 %35, metadata !3754, metadata !DIExpression()), !dbg !3757
  %36 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3794
  %37 = add i32 %36, %35, !dbg !3794
  store i32 %37, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3794
  %38 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3795
  %39 = add i32 %38, 1, !dbg !3795
  store i32 %39, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3795
  store i8 1, i8* %11, align 1, !dbg !3796
  %40 = add i32 %37, %1, !dbg !3797
  %41 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %10, i32 1, !dbg !3798
  store i32 %40, i32* %41, align 4, !dbg !3799
  %42 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %10, i32 0, i32 0, !dbg !3800
  store void (i8*)* %2, void (i8*)** %42, align 4, !dbg !3801
  %43 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %10, i32 0, i32 1, !dbg !3802
  store i8* %3, i8** %43, align 4, !dbg !3803
  tail call void @gpt_sw_start_timer() #21, !dbg !3804
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3805
  tail call void @restore_interrupt_mask(i32 noundef %21) #21, !dbg !3806
  br label %44, !dbg !3807

44:                                               ; preds = %18, %14, %9, %4, %34
  %45 = phi i32 [ 0, %34 ], [ -1, %4 ], [ -3, %9 ], [ -3, %14 ], [ -1, %18 ], !dbg !3757
  ret i32 %45, !dbg !3808
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_sw_stop_timer_ms(i32 noundef %0) local_unnamed_addr #0 !dbg !3809 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3811, metadata !DIExpression()), !dbg !3815
  %2 = and i32 %0, -559087616, !dbg !3816
  %3 = icmp eq i32 %2, -559087616, !dbg !3818
  br i1 %3, label %4, label %31, !dbg !3819

4:                                                ; preds = %1
  %5 = and i32 %0, 65535, !dbg !3820
  call void @llvm.dbg.value(metadata i32 %5, metadata !3814, metadata !DIExpression()), !dbg !3815
  %6 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %5, i32 3, !dbg !3821
  %7 = load i8, i8* %6, align 1, !dbg !3821, !range !3343
  %8 = icmp eq i8 %7, 1, !dbg !3823
  br i1 %8, label %9, label %31, !dbg !3824

9:                                                ; preds = %4
  %10 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %5, i32 2, !dbg !3825
  %11 = load i8, i8* %10, align 4, !dbg !3825, !range !3343
  %12 = icmp eq i8 %11, 1, !dbg !3827
  br i1 %12, label %13, label %31, !dbg !3828

13:                                               ; preds = %9
  %14 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !3829
  call void @llvm.dbg.value(metadata i32 %14, metadata !3813, metadata !DIExpression()), !dbg !3815
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3830
  %15 = tail call i32 @hal_gpt_stop_timer(i32 noundef 3) #20, !dbg !3831
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3832
  %16 = load i8, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 6), align 1, !dbg !3833, !range !3343
  %17 = icmp eq i8 %16, 0, !dbg !3835
  br i1 %17, label %18, label %21, !dbg !3836

18:                                               ; preds = %13
  %19 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4, !dbg !3837
  %20 = tail call i32 @gpt_sw_get_current_time_ms(%struct.GPT_REGISTER_T* noundef %19) #21, !dbg !3839
  call void @llvm.dbg.value(metadata i32 %20, metadata !3812, metadata !DIExpression()), !dbg !3815
  br label %21, !dbg !3840

21:                                               ; preds = %13, %18
  %22 = phi i32 [ %20, %18 ], [ 0, %13 ], !dbg !3841
  call void @llvm.dbg.value(metadata i32 %22, metadata !3812, metadata !DIExpression()), !dbg !3815
  %23 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3842
  %24 = add i32 %23, %22, !dbg !3842
  store i32 %24, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3842
  %25 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3843
  %26 = add i32 %25, -1, !dbg !3843
  store i32 %26, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3843
  store i8 0, i8* %6, align 1, !dbg !3844
  %27 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3845
  %28 = icmp eq i32 %27, 0, !dbg !3847
  br i1 %28, label %30, label %29, !dbg !3848

29:                                               ; preds = %21
  tail call void @gpt_sw_start_timer() #21, !dbg !3849
  br label %30, !dbg !3851

30:                                               ; preds = %21, %29
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3852
  tail call void @restore_interrupt_mask(i32 noundef %14) #21, !dbg !3853
  br label %31, !dbg !3854

31:                                               ; preds = %9, %4, %1, %30
  %32 = phi i32 [ 0, %30 ], [ -1, %1 ], [ -3, %4 ], [ -3, %9 ], !dbg !3815
  ret i32 %32, !dbg !3855
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_sw_get_remaining_time_ms(i32 noundef %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #0 !dbg !3856 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3860, metadata !DIExpression()), !dbg !3865
  call void @llvm.dbg.value(metadata i32* %1, metadata !3861, metadata !DIExpression()), !dbg !3865
  %3 = and i32 %0, -559087616, !dbg !3866
  %4 = icmp eq i32 %3, -559087616, !dbg !3868
  br i1 %4, label %5, label %20, !dbg !3869

5:                                                ; preds = %2
  %6 = and i32 %0, 65535, !dbg !3870
  call void @llvm.dbg.value(metadata i32 %6, metadata !3864, metadata !DIExpression()), !dbg !3865
  %7 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %6, i32 2, !dbg !3871
  %8 = load i8, i8* %7, align 4, !dbg !3871, !range !3343
  %9 = icmp eq i8 %8, 1, !dbg !3873
  br i1 %9, label %10, label %20, !dbg !3874

10:                                               ; preds = %5
  %11 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !3875
  call void @llvm.dbg.value(metadata i32 %11, metadata !3863, metadata !DIExpression()), !dbg !3865
  %12 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3876
  %13 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4, !dbg !3877
  %14 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %13, i32 0, i32 5, !dbg !3878
  %15 = load volatile i32, i32* %14, align 4, !dbg !3878
  %16 = add i32 %15, %12, !dbg !3879
  call void @llvm.dbg.value(metadata i32 %16, metadata !3862, metadata !DIExpression()), !dbg !3865
  %17 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %6, i32 1, !dbg !3880
  %18 = load i32, i32* %17, align 4, !dbg !3880
  %19 = tail call i32 @llvm.usub.sat.i32(i32 %18, i32 %16), !dbg !3882
  store i32 %19, i32* %1, align 4, !dbg !3883
  tail call void @restore_interrupt_mask(i32 noundef %11) #21, !dbg !3884
  br label %20, !dbg !3885

20:                                               ; preds = %5, %2, %10
  %21 = phi i32 [ 0, %10 ], [ -1, %2 ], [ -3, %5 ], !dbg !3865
  ret i32 %21, !dbg !3886
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.usub.sat.i32(i32, i32) #1

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @gpt_calibrate_algorithm(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #8 section ".tcm_code" !dbg !3887 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3891, metadata !DIExpression()), !dbg !3898
  call void @llvm.dbg.value(metadata i32 %1, metadata !3892, metadata !DIExpression()), !dbg !3898
  call void @llvm.dbg.value(metadata i32 %2, metadata !3893, metadata !DIExpression()), !dbg !3898
  %4 = and i32 %0, 65535, !dbg !3899
  %5 = mul i32 %4, %1, !dbg !3900
  call void @llvm.dbg.value(metadata i32 %5, metadata !3894, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !3898
  %6 = lshr i32 %0, 16, !dbg !3901
  %7 = mul i32 %6, %1, !dbg !3902
  call void @llvm.dbg.value(metadata i32 %7, metadata !3894, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !3898
  %8 = and i32 %5, 65535, !dbg !3903
  call void @llvm.dbg.value(metadata i32 %8, metadata !3896, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !3898
  %9 = lshr i32 %5, 16, !dbg !3904
  %10 = add i32 %9, %7, !dbg !3905
  call void @llvm.dbg.value(metadata i32 %10, metadata !3896, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !3898
  %11 = udiv i32 %10, %2, !dbg !3906
  call void @llvm.dbg.value(metadata i32 %11, metadata !3897, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !3898
  %12 = mul i32 %11, %2
  %13 = sub i32 %10, %12
  %14 = shl i32 %13, 16, !dbg !3907
  %15 = or i32 %14, %8, !dbg !3908
  %16 = udiv i32 %15, %2, !dbg !3909
  call void @llvm.dbg.value(metadata i32 %16, metadata !3897, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !3898
  %17 = shl i32 %11, 16, !dbg !3910
  %18 = add i32 %16, %17, !dbg !3911
  ret i32 %18, !dbg !3912
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) local_unnamed_addr #9 section ".tcm_code" !dbg !3913 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3917, metadata !DIExpression()), !dbg !3918
  %2 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 5, !dbg !3919
  %3 = load volatile i32, i32* %2, align 4, !dbg !3919
  ret i32 %3, !dbg !3920
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @gpt_convert_ms_to_32k_count(i32 noundef %0) local_unnamed_addr #8 section ".tcm_code" !dbg !3921 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3925, metadata !DIExpression()), !dbg !3926
  %2 = shl i32 %0, 5, !dbg !3927
  %3 = mul i32 %0, 7, !dbg !3928
  %4 = udiv i32 %3, 10, !dbg !3929
  %5 = add i32 %4, %2, !dbg !3930
  %6 = mul i32 %0, 6, !dbg !3931
  %7 = udiv i32 %6, 100, !dbg !3932
  %8 = add i32 %5, %7, !dbg !3933
  %9 = shl i32 %0, 3, !dbg !3934
  %10 = udiv i32 %9, 1000, !dbg !3935
  %11 = add i32 %8, %10, !dbg !3936
  ret i32 %11, !dbg !3937
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_get_lfosc_clock() local_unnamed_addr #0 section ".tcm_code" !dbg !259 {
  %1 = load i1, i1* @gpt_get_lfosc_clock.flag, align 1, !dbg !3938
  br i1 %1, label %10, label %2, !dbg !3940

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @is_clk_use_lfosc() #21, !dbg !3941
  br i1 %3, label %4, label %6, !dbg !3944

4:                                                ; preds = %2
  %5 = tail call i32 @clock_get_freq_lfosc() #21, !dbg !3945
  store i32 %5, i32* @gpt_clock_source, align 4, !dbg !3947
  switch i32 %5, label %8 [
    i32 26000, label %6
    i32 0, label %6
  ], !dbg !3948

6:                                                ; preds = %2, %4, %4
  %7 = phi i1 [ false, %4 ], [ false, %4 ], [ true, %2 ]
  store i32 26000, i32* @gpt_clock_source, align 4, !dbg !3950
  br label %8, !dbg !3950

8:                                                ; preds = %6, %4
  %9 = phi i1 [ true, %4 ], [ %7, %6 ]
  store i1 %9, i1* @gpt_get_lfosc_clock.flag, align 1, !dbg !3950
  br label %10, !dbg !3951

10:                                               ; preds = %8, %0
  ret void, !dbg !3951
}

; Function Attrs: optsize
declare dso_local i32 @clock_get_freq_lfosc() local_unnamed_addr #3

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_open_clock_source() local_unnamed_addr #0 section ".tcm_code" !dbg !3952 {
  %1 = tail call zeroext i1 @hal_clock_is_enabled(i32 noundef 66) #21, !dbg !3953
  br i1 %1, label %4, label %2, !dbg !3955

2:                                                ; preds = %0
  %3 = tail call i32 @hal_clock_enable(i32 noundef 66) #21, !dbg !3956
  br label %4, !dbg !3958

4:                                                ; preds = %2, %0
  ret void, !dbg !3959
}

; Function Attrs: optsize
declare dso_local zeroext i1 @hal_clock_is_enabled(i32 noundef) local_unnamed_addr #3

; Function Attrs: optsize
declare dso_local i32 @hal_clock_enable(i32 noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpt_clock_calibrate_us_to_count(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !3960 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3962, metadata !DIExpression()), !dbg !3963
  tail call void @gpt_get_lfosc_clock() #20, !dbg !3964
  %2 = tail call zeroext i1 @is_clk_use_lfosc() #21, !dbg !3965
  br i1 %2, label %3, label %6, !dbg !3967

3:                                                ; preds = %1
  %4 = load i32, i32* @gpt_clock_source, align 4, !dbg !3968
  %5 = tail call i32 @gpt_calibrate_algorithm(i32 noundef %0, i32 noundef %4, i32 noundef 26000) #20, !dbg !3970
  br label %6, !dbg !3971

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ %0, %1 ], !dbg !3972
  ret i32 %7, !dbg !3973
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpt_clock_calibrate_count_to_us(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !3974 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3976, metadata !DIExpression()), !dbg !3977
  tail call void @gpt_get_lfosc_clock() #20, !dbg !3978
  %2 = tail call zeroext i1 @is_clk_use_lfosc() #21, !dbg !3979
  br i1 %2, label %3, label %6, !dbg !3981

3:                                                ; preds = %1
  %4 = load i32, i32* @gpt_clock_source, align 4, !dbg !3982
  %5 = tail call i32 @gpt_calibrate_algorithm(i32 noundef %0, i32 noundef 26000, i32 noundef %4) #20, !dbg !3984
  br label %6, !dbg !3985

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ %0, %1 ], !dbg !3986
  ret i32 %7, !dbg !3987
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_start_free_run_timer(%struct.GPT_REGISTER_T* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 section ".tcm_code" !dbg !3988 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3992, metadata !DIExpression()), !dbg !3995
  call void @llvm.dbg.value(metadata i32 %1, metadata !3993, metadata !DIExpression()), !dbg !3995
  call void @llvm.dbg.value(metadata i32 %2, metadata !3994, metadata !DIExpression()), !dbg !3995
  tail call void @gpt_open_clock_source() #20, !dbg !3996
  %4 = or i32 %2, %1, !dbg !3997
  %5 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 1, !dbg !3998
  store volatile i32 %4, i32* %5, align 4, !dbg !3999
  %6 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 0, !dbg !4000
  store volatile i32 49, i32* %6, align 4, !dbg !4001
  ret void, !dbg !4002
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gpt_delay_time(%struct.GPT_REGISTER_T* noundef %0, i32 noundef %1) local_unnamed_addr #10 section ".tcm_code" !dbg !4003 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !4007, metadata !DIExpression()), !dbg !4011
  call void @llvm.dbg.value(metadata i32 %1, metadata !4008, metadata !DIExpression()), !dbg !4011
  call void @llvm.dbg.value(metadata i32 0, metadata !4009, metadata !DIExpression()), !dbg !4011
  call void @llvm.dbg.value(metadata i32 0, metadata !4010, metadata !DIExpression()), !dbg !4011
  %3 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) #20, !dbg !4012
  call void @llvm.dbg.value(metadata i32 %3, metadata !4010, metadata !DIExpression()), !dbg !4011
  %4 = add i32 %1, 1, !dbg !4013
  %5 = add i32 %4, %3, !dbg !4014
  call void @llvm.dbg.value(metadata i32 %5, metadata !4009, metadata !DIExpression()), !dbg !4011
  %6 = icmp ugt i32 %5, %3, !dbg !4015
  br i1 %6, label %7, label %10, !dbg !4017

7:                                                ; preds = %2, %7
  %8 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) #20, !dbg !4018
  %9 = icmp ult i32 %8, %5, !dbg !4020
  br i1 %9, label %7, label %16, !dbg !4021, !llvm.loop !4022

10:                                               ; preds = %2, %10
  %11 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) #20, !dbg !4024
  %12 = icmp ult i32 %11, %3, !dbg !4026
  br i1 %12, label %13, label %10, !dbg !4027, !llvm.loop !4028

13:                                               ; preds = %10, %13
  %14 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) #20, !dbg !4030
  %15 = icmp ult i32 %14, %5, !dbg !4031
  br i1 %15, label %13, label %16, !dbg !4032, !llvm.loop !4033

16:                                               ; preds = %13, %7
  ret void, !dbg !4035
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gpt_reset_default_timer(%struct.GPT_REGISTER_T* noundef %0) local_unnamed_addr #10 !dbg !4036 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !4040, metadata !DIExpression()), !dbg !4041
  %2 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 2, !dbg !4042
  store volatile i32 0, i32* %2, align 4, !dbg !4043
  %3 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 0, !dbg !4044
  store volatile i32 0, i32* %3, align 4, !dbg !4045
  %4 = load volatile i32, i32* %3, align 4, !dbg !4046
  %5 = or i32 %4, 2, !dbg !4046
  store volatile i32 %5, i32* %3, align 4, !dbg !4046
  %6 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 5
  br label %7, !dbg !4047

7:                                                ; preds = %7, %1
  %8 = load volatile i32, i32* %6, align 4, !dbg !4048
  %9 = icmp eq i32 %8, 0, !dbg !4047
  br i1 %9, label %10, label %7, !dbg !4047, !llvm.loop !4049

10:                                               ; preds = %7
  %11 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 1, !dbg !4051
  store volatile i32 16, i32* %11, align 4, !dbg !4052
  %12 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 4, !dbg !4053
  store volatile i32 1, i32* %12, align 4, !dbg !4054
  %13 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 6, !dbg !4055
  store volatile i32 -1, i32* %13, align 4, !dbg !4056
  %14 = icmp eq %struct.GPT_REGISTER_T* %0, inttoptr (i32 -1575747328 to %struct.GPT_REGISTER_T*), !dbg !4057
  br i1 %14, label %15, label %16, !dbg !4059

15:                                               ; preds = %10
  store volatile i32 0, i32* inttoptr (i32 -1575747296 to i32*), align 32, !dbg !4060
  br label %16, !dbg !4062

16:                                               ; preds = %15, %10
  ret void, !dbg !4063
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @gpt_save_and_mask_interrupt(%struct.GPT_REGISTER_T* noundef %0) local_unnamed_addr #7 !dbg !4064 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !4066, metadata !DIExpression()), !dbg !4068
  %3 = bitcast i32* %2 to i8*, !dbg !4069
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !4069
  call void @llvm.dbg.declare(metadata i32* %2, metadata !4067, metadata !DIExpression()), !dbg !4070
  %4 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 2, !dbg !4071
  %5 = load volatile i32, i32* %4, align 4, !dbg !4071
  store volatile i32 %5, i32* %2, align 4, !dbg !4072
  %6 = load volatile i32, i32* %4, align 4, !dbg !4073
  %7 = and i32 %6, -2, !dbg !4073
  store volatile i32 %7, i32* %4, align 4, !dbg !4073
  %8 = load volatile i32, i32* %2, align 4, !dbg !4074
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !4075
  ret i32 %8, !dbg !4076
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gpt_restore_interrupt(%struct.GPT_REGISTER_T* noundef %0, i32 noundef %1) local_unnamed_addr #10 !dbg !4077 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !4081, metadata !DIExpression()), !dbg !4083
  call void @llvm.dbg.value(metadata i32 %1, metadata !4082, metadata !DIExpression()), !dbg !4083
  %3 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 2, !dbg !4084
  store volatile i32 %1, i32* %3, align 4, !dbg !4085
  ret void, !dbg !4086
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_interrupt_handler(i32 %0) #0 !dbg !4087 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !4089, metadata !DIExpression()), !dbg !4094
  %5 = bitcast i32* %2 to i8*, !dbg !4095
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5), !dbg !4095
  call void @llvm.dbg.declare(metadata i32* %2, metadata !4091, metadata !DIExpression()), !dbg !4096
  %6 = bitcast i32* %3 to i8*, !dbg !4097
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6), !dbg !4097
  call void @llvm.dbg.declare(metadata i32* %3, metadata !4092, metadata !DIExpression()), !dbg !4098
  %7 = bitcast i32* %4 to i8*, !dbg !4099
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7), !dbg !4099
  call void @llvm.dbg.declare(metadata i32* %4, metadata !4093, metadata !DIExpression()), !dbg !4100
  call void @llvm.dbg.value(metadata i32 undef, metadata !4089, metadata !DIExpression()), !dbg !4094
  call void @llvm.dbg.value(metadata i32 0, metadata !4090, metadata !DIExpression()), !dbg !4094
  br label %8, !dbg !4101

8:                                                ; preds = %1, %33
  %9 = phi i32 [ 0, %1 ], [ %36, %33 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !4090, metadata !DIExpression()), !dbg !4094
  %10 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %9, !dbg !4103
  %11 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %10, align 4, !dbg !4103
  %12 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %11, i32 0, i32 3, !dbg !4106
  %13 = load volatile i32, i32* %12, align 4, !dbg !4106
  store volatile i32 %13, i32* %3, align 4, !dbg !4107
  %14 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %11, i32 0, i32 2, !dbg !4108
  %15 = load volatile i32, i32* %14, align 4, !dbg !4108
  store volatile i32 %15, i32* %4, align 4, !dbg !4109
  %16 = tail call i32 @gpt_save_and_mask_interrupt(%struct.GPT_REGISTER_T* noundef %11) #20, !dbg !4110
  store volatile i32 %16, i32* %2, align 4, !dbg !4111
  %17 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %10, align 4, !dbg !4112
  %18 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %17, i32 0, i32 4, !dbg !4113
  store volatile i32 1, i32* %18, align 4, !dbg !4114
  %19 = load volatile i32, i32* %3, align 4, !dbg !4115
  %20 = and i32 %19, 1, !dbg !4117
  %21 = icmp eq i32 %20, 0, !dbg !4117
  br i1 %21, label %33, label %22, !dbg !4118

22:                                               ; preds = %8
  %23 = load volatile i32, i32* %4, align 4, !dbg !4119
  %24 = and i32 %23, 1, !dbg !4120
  %25 = icmp eq i32 %24, 0, !dbg !4120
  br i1 %25, label %33, label %26, !dbg !4121

26:                                               ; preds = %22
  %27 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %9, i32 1, i32 0, !dbg !4122
  %28 = load void (i8*)*, void (i8*)** %27, align 4, !dbg !4122
  %29 = icmp eq void (i8*)* %28, null, !dbg !4125
  br i1 %29, label %33, label %30, !dbg !4126

30:                                               ; preds = %26
  %31 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %9, i32 1, i32 1, !dbg !4127
  %32 = load i8*, i8** %31, align 4, !dbg !4127
  tail call void %28(i8* noundef %32) #21, !dbg !4129
  br label %33, !dbg !4130

33:                                               ; preds = %26, %30, %22, %8
  %34 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %10, align 4, !dbg !4131
  %35 = load volatile i32, i32* %2, align 4, !dbg !4132
  tail call void @gpt_restore_interrupt(%struct.GPT_REGISTER_T* noundef %34, i32 noundef %35) #20, !dbg !4133
  %36 = add nuw nsw i32 %9, 1, !dbg !4134
  call void @llvm.dbg.value(metadata i32 %36, metadata !4090, metadata !DIExpression()), !dbg !4094
  %37 = icmp eq i32 %36, 6, !dbg !4135
  br i1 %37, label %38, label %8, !dbg !4101, !llvm.loop !4136

38:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7), !dbg !4138
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6), !dbg !4138
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !4138
  ret void, !dbg !4138
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_nvic_register() local_unnamed_addr #0 !dbg !4139 {
  %1 = tail call i32 @hal_nvic_disable_irq(i32 noundef 11) #21, !dbg !4140
  %2 = tail call i32 @hal_nvic_register_isr_handler(i32 noundef 11, void (i32)* noundef nonnull @gpt_interrupt_handler) #21, !dbg !4141
  %3 = tail call i32 @hal_nvic_enable_irq(i32 noundef 11) #21, !dbg !4142
  ret void, !dbg !4143
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @gpt_sw_get_current_time_ms(%struct.GPT_REGISTER_T* noundef %0) local_unnamed_addr #7 !dbg !4144 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !4146, metadata !DIExpression()), !dbg !4151
  %3 = bitcast i32* %2 to i8*, !dbg !4152
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !4152
  call void @llvm.dbg.declare(metadata i32* %2, metadata !4147, metadata !DIExpression()), !dbg !4153
  %4 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) #20, !dbg !4154
  call void @llvm.dbg.value(metadata i32 %4, metadata !4148, metadata !DIExpression()), !dbg !4151
  %5 = lshr i32 %4, 15, !dbg !4155
  call void @llvm.dbg.value(metadata i32 %5, metadata !4149, metadata !DIExpression()), !dbg !4151
  %6 = and i32 %4, 32767, !dbg !4156
  %7 = mul nuw nsw i32 %6, 1000, !dbg !4157
  %8 = add nuw nsw i32 %7, 16384, !dbg !4158
  %9 = lshr i32 %8, 15, !dbg !4159
  call void @llvm.dbg.value(metadata i32 %9, metadata !4150, metadata !DIExpression()), !dbg !4151
  %10 = mul nuw nsw i32 %5, 1000, !dbg !4160
  %11 = add nuw nsw i32 %9, %10, !dbg !4161
  store volatile i32 %11, i32* %2, align 4, !dbg !4162
  %12 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4, !dbg !4163
  %13 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %12, i32 0, i32 0, !dbg !4164
  %14 = load volatile i32, i32* %13, align 4, !dbg !4165
  %15 = or i32 %14, 2, !dbg !4165
  store volatile i32 %15, i32* %13, align 4, !dbg !4165
  %16 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4
  %17 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %16, i32 0, i32 5
  br label %18, !dbg !4166

18:                                               ; preds = %18, %1
  %19 = load volatile i32, i32* %17, align 4, !dbg !4167
  %20 = icmp eq i32 %19, 0, !dbg !4166
  br i1 %20, label %21, label %18, !dbg !4166, !llvm.loop !4168

21:                                               ; preds = %18
  %22 = load volatile i32, i32* %2, align 4, !dbg !4170
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !4171
  ret i32 %22, !dbg !4172
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @gpt_sw_get_free_timer() local_unnamed_addr #11 !dbg !4173 {
  call void @llvm.dbg.value(metadata i32 0, metadata !4177, metadata !DIExpression()), !dbg !4178
  br label %1, !dbg !4179

1:                                                ; preds = %0, %6
  %2 = phi i32 [ 0, %0 ], [ %7, %6 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !4177, metadata !DIExpression()), !dbg !4178
  %3 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %2, i32 2, !dbg !4181
  %4 = load i8, i8* %3, align 4, !dbg !4181, !range !3343
  %5 = icmp eq i8 %4, 1, !dbg !4185
  br i1 %5, label %6, label %9, !dbg !4186

6:                                                ; preds = %1
  %7 = add nuw nsw i32 %2, 1, !dbg !4187
  call void @llvm.dbg.value(metadata i32 %7, metadata !4177, metadata !DIExpression()), !dbg !4178
  %8 = icmp eq i32 %7, 32, !dbg !4188
  br i1 %8, label %9, label %1, !dbg !4179, !llvm.loop !4189

9:                                                ; preds = %6, %1
  %10 = phi i32 [ %2, %1 ], [ 32, %6 ], !dbg !4178
  ret i32 %10, !dbg !4191
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_sw_start_timer() local_unnamed_addr #0 !dbg !4192 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = bitcast i32* %1 to i8*, !dbg !4196
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #22, !dbg !4196
  %4 = bitcast i32* %2 to i8*, !dbg !4196
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #22, !dbg !4196
  %5 = load i8, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 6), align 1, !dbg !4197, !range !3343
  %6 = icmp eq i8 %5, 0, !dbg !4197
  br i1 %6, label %7, label %11, !dbg !4199

7:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32* %1, metadata !4194, metadata !DIExpression(DW_OP_deref)), !dbg !4200
  call void @llvm.dbg.value(metadata i32* %2, metadata !4195, metadata !DIExpression(DW_OP_deref)), !dbg !4200
  call void @gpt_sw_get_minimum_left_time_ms(i32* noundef nonnull %1, i32* noundef nonnull %2) #20, !dbg !4201
  %8 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !4202
  store i32 %8, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 2), align 4, !dbg !4203
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !4204
  %9 = load i32, i32* %1, align 4, !dbg !4205
  call void @llvm.dbg.value(metadata i32 %9, metadata !4194, metadata !DIExpression()), !dbg !4200
  %10 = tail call i32 @hal_gpt_start_timer_ms(i32 noundef 3, i32 noundef %9, i32 noundef 0) #21, !dbg !4206
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !4207
  br label %11, !dbg !4208

11:                                               ; preds = %0, %7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #22, !dbg !4208
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #22, !dbg !4208
  ret void, !dbg !4208
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local void @gpt_sw_get_minimum_left_time_ms(i32* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #12 !dbg !4209 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !4213, metadata !DIExpression()), !dbg !4218
  call void @llvm.dbg.value(metadata i32* %1, metadata !4214, metadata !DIExpression()), !dbg !4218
  call void @llvm.dbg.value(metadata i32 -1, metadata !4216, metadata !DIExpression()), !dbg !4218
  call void @llvm.dbg.value(metadata i32 0, metadata !4215, metadata !DIExpression()), !dbg !4218
  br label %3, !dbg !4219

3:                                                ; preds = %2, %13
  %4 = phi i32 [ 0, %2 ], [ %15, %13 ]
  %5 = phi i32 [ -1, %2 ], [ %14, %13 ]
  call void @llvm.dbg.value(metadata i32 %4, metadata !4215, metadata !DIExpression()), !dbg !4218
  call void @llvm.dbg.value(metadata i32 %5, metadata !4216, metadata !DIExpression()), !dbg !4218
  %6 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %4, i32 3, !dbg !4221
  %7 = load i8, i8* %6, align 1, !dbg !4221, !range !3343
  %8 = icmp eq i8 %7, 0, !dbg !4221
  br i1 %8, label %13, label %9, !dbg !4225

9:                                                ; preds = %3
  %10 = tail call i32 @gpt_sw_absolute_value(i32 noundef %4) #20, !dbg !4226
  call void @llvm.dbg.value(metadata i32 %10, metadata !4217, metadata !DIExpression()), !dbg !4218
  %11 = icmp ult i32 %10, %5, !dbg !4228
  br i1 %11, label %12, label %13, !dbg !4230

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %10, metadata !4216, metadata !DIExpression()), !dbg !4218
  store i32 %4, i32* %1, align 4, !dbg !4231
  br label %13, !dbg !4233

13:                                               ; preds = %3, %12, %9
  %14 = phi i32 [ %10, %12 ], [ %5, %9 ], [ %5, %3 ], !dbg !4218
  call void @llvm.dbg.value(metadata i32 %14, metadata !4216, metadata !DIExpression()), !dbg !4218
  %15 = add nuw nsw i32 %4, 1, !dbg !4234
  call void @llvm.dbg.value(metadata i32 %15, metadata !4215, metadata !DIExpression()), !dbg !4218
  %16 = icmp eq i32 %15, 32, !dbg !4235
  br i1 %16, label %17, label %3, !dbg !4219, !llvm.loop !4236

17:                                               ; preds = %13
  store i32 %14, i32* %0, align 4, !dbg !4238
  ret void, !dbg !4239
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @gpt_sw_absolute_value(i32 noundef %0) local_unnamed_addr #2 !dbg !4240 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4242, metadata !DIExpression()), !dbg !4246
  %2 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %0, i32 1, !dbg !4247
  %3 = load i32, i32* %2, align 4, !dbg !4247
  %4 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 2), align 4, !dbg !4247
  %5 = sub i32 %3, %4, !dbg !4247
  call void @llvm.dbg.value(metadata i32 %5, metadata !4243, metadata !DIExpression()), !dbg !4246
  %6 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !4248
  %7 = sub i32 %6, %4, !dbg !4248
  call void @llvm.dbg.value(metadata i32 %7, metadata !4244, metadata !DIExpression()), !dbg !4246
  %8 = icmp ugt i32 %5, %7, !dbg !4249
  %9 = sub i32 %3, %6
  %10 = select i1 %8, i32 %9, i32 0, !dbg !4251
  call void @llvm.dbg.value(metadata i32 %10, metadata !4245, metadata !DIExpression()), !dbg !4246
  ret i32 %10, !dbg !4252
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_sw_handler(i8* nocapture noundef readnone %0) #0 !dbg !4253 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4255, metadata !DIExpression()), !dbg !4259
  %4 = bitcast i32* %2 to i8*, !dbg !4260
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4), !dbg !4260
  call void @llvm.dbg.declare(metadata i32* %2, metadata !4257, metadata !DIExpression()), !dbg !4261
  %5 = bitcast i32* %3 to i8*, !dbg !4262
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5), !dbg !4262
  call void @llvm.dbg.declare(metadata i32* %3, metadata !4258, metadata !DIExpression()), !dbg !4263
  %6 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !4264
  %7 = icmp eq i32 %6, 0, !dbg !4266
  br i1 %7, label %38, label %8, !dbg !4267

8:                                                ; preds = %1
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !4268
  %9 = tail call i32 @hal_gpt_stop_timer(i32 noundef 3) #21, !dbg !4270
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !4271
  %10 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4, !dbg !4272
  %11 = tail call i32 @gpt_sw_get_current_time_ms(%struct.GPT_REGISTER_T* noundef %10) #20, !dbg !4273
  store volatile i32 %11, i32* %2, align 4, !dbg !4274
  %12 = load volatile i32, i32* %2, align 4, !dbg !4275
  %13 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !4276
  %14 = add i32 %13, %12, !dbg !4276
  store i32 %14, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !4276
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 6), align 1, !dbg !4277
  call void @llvm.dbg.value(metadata i32 0, metadata !4256, metadata !DIExpression()), !dbg !4259
  br label %15, !dbg !4278

15:                                               ; preds = %8, %31
  %16 = phi i32 [ 0, %8 ], [ %32, %31 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !4256, metadata !DIExpression()), !dbg !4259
  %17 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %16, i32 3, !dbg !4280
  %18 = load i8, i8* %17, align 1, !dbg !4280, !range !3343
  %19 = icmp eq i8 %18, 0, !dbg !4280
  br i1 %19, label %31, label %20, !dbg !4284

20:                                               ; preds = %15
  %21 = tail call i32 @gpt_sw_absolute_value(i32 noundef %16) #20, !dbg !4285
  store volatile i32 %21, i32* %3, align 4, !dbg !4287
  %22 = load volatile i32, i32* %3, align 4, !dbg !4288
  %23 = icmp eq i32 %22, 0, !dbg !4290
  br i1 %23, label %24, label %31, !dbg !4291

24:                                               ; preds = %20
  store i8 0, i8* %17, align 1, !dbg !4292
  %25 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !4294
  %26 = add i32 %25, -1, !dbg !4294
  store i32 %26, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !4294
  %27 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %16, i32 0, i32 0, !dbg !4295
  %28 = load void (i8*)*, void (i8*)** %27, align 4, !dbg !4295
  %29 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %16, i32 0, i32 1, !dbg !4296
  %30 = load i8*, i8** %29, align 4, !dbg !4296
  tail call void %28(i8* noundef %30) #21, !dbg !4297
  br label %31, !dbg !4298

31:                                               ; preds = %15, %24, %20
  %32 = add nuw nsw i32 %16, 1, !dbg !4299
  call void @llvm.dbg.value(metadata i32 %32, metadata !4256, metadata !DIExpression()), !dbg !4259
  %33 = icmp eq i32 %32, 32, !dbg !4300
  br i1 %33, label %34, label %15, !dbg !4278, !llvm.loop !4301

34:                                               ; preds = %31
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 6), align 1, !dbg !4303
  %35 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !4304
  %36 = icmp eq i32 %35, 0, !dbg !4306
  br i1 %36, label %38, label %37, !dbg !4307

37:                                               ; preds = %34
  tail call void @gpt_sw_start_timer() #20, !dbg !4308
  br label %38, !dbg !4310

38:                                               ; preds = %34, %37, %1
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !4311
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4), !dbg !4311
  ret void, !dbg !4311
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_keypad_init(%struct.hal_keypad_config_t* nocapture noundef readonly %0) local_unnamed_addr #0 !dbg !4312 {
  call void @llvm.dbg.value(metadata %struct.hal_keypad_config_t* %0, metadata !4332, metadata !DIExpression()), !dbg !4333
  %2 = load i8, i8* getelementptr inbounds (%struct.keypad_context_t, %struct.keypad_context_t* @keypad_context, i32 0, i32 0), align 4, !dbg !4334, !range !3343
  %3 = icmp eq i8 %2, 0, !dbg !4334
  br i1 %3, label %4, label %42, !dbg !4336

4:                                                ; preds = %1
  %5 = tail call i8* @memset(i8* noundef getelementptr inbounds (%struct.keypad_context_t, %struct.keypad_context_t* @keypad_context, i32 0, i32 0), i32 noundef 0, i32 noundef 20) #21, !dbg !4337
  %6 = tail call i8* @memset(i8* noundef bitcast (%struct.keypad_buffer_t* @keypad_buffer to i8*), i32 noundef 0, i32 noundef 1548) #21, !dbg !4338
  %7 = tail call i32 @hal_nvic_disable_irq(i32 noundef 10) #21, !dbg !4339
  %8 = load %struct.KEYPAD_REGISTER_T*, %struct.KEYPAD_REGISTER_T** @keypad, align 4, !dbg !4340
  %9 = getelementptr inbounds %struct.KEYPAD_REGISTER_T, %struct.KEYPAD_REGISTER_T* %8, i32 0, i32 7, !dbg !4341
  store volatile i32 1, i32* %9, align 4, !dbg !4342
  %10 = getelementptr inbounds %struct.hal_keypad_config_t, %struct.hal_keypad_config_t* %0, i32 0, i32 2, !dbg !4343
  %11 = load i32, i32* %10, align 4, !dbg !4343
  %12 = icmp eq i32 %11, 0, !dbg !4345
  %13 = shl i32 %11, 5, !dbg !4346
  %14 = select i1 %12, i32 512, i32 %13, !dbg !4346
  %15 = getelementptr inbounds %struct.KEYPAD_REGISTER_T, %struct.KEYPAD_REGISTER_T* %8, i32 0, i32 4, !dbg !4347
  store volatile i32 %14, i32* %15, align 4, !dbg !4347
  %16 = getelementptr inbounds %struct.hal_keypad_config_t, %struct.hal_keypad_config_t* %0, i32 0, i32 1, i32 0, !dbg !4348
  %17 = load i8, i8* %16, align 4, !dbg !4348
  %18 = zext i8 %17 to i32, !dbg !4349
  %19 = shl nuw nsw i32 %18, 10, !dbg !4350
  %20 = getelementptr inbounds %struct.hal_keypad_config_t, %struct.hal_keypad_config_t* %0, i32 0, i32 1, i32 1, !dbg !4351
  %21 = load i8, i8* %20, align 1, !dbg !4351
  %22 = zext i8 %21 to i32, !dbg !4352
  %23 = shl nuw nsw i32 %22, 4, !dbg !4353
  %24 = getelementptr inbounds %struct.hal_keypad_config_t, %struct.hal_keypad_config_t* %0, i32 0, i32 0, !dbg !4354
  %25 = load i32, i32* %24, align 4, !dbg !4354
  %26 = add i32 %25, %19, !dbg !4355
  %27 = add i32 %26, %23, !dbg !4356
  %28 = getelementptr inbounds %struct.KEYPAD_REGISTER_T, %struct.KEYPAD_REGISTER_T* %8, i32 0, i32 6, !dbg !4357
  store volatile i32 %27, i32* %28, align 4, !dbg !4358
  %29 = load i32, i32* %24, align 4, !dbg !4359
  %30 = icmp eq i32 %29, 1, !dbg !4361
  br i1 %30, label %31, label %33, !dbg !4362

31:                                               ; preds = %4
  %32 = getelementptr inbounds %struct.KEYPAD_REGISTER_T, %struct.KEYPAD_REGISTER_T* %8, i32 0, i32 5, !dbg !4363
  store volatile i32 26299, i32* %32, align 4, !dbg !4365
  br label %33, !dbg !4366

33:                                               ; preds = %31, %4
  store i32 -1, i32* getelementptr inbounds (%struct.keypad_key_bitmap_t, %struct.keypad_key_bitmap_t* @keypad_saved_bitmap, i32 0, i32 0, i32 0), align 4, !dbg !4367
  store i32 -1, i32* getelementptr inbounds (%struct.keypad_key_bitmap_t, %struct.keypad_key_bitmap_t* @keypad_saved_bitmap, i32 0, i32 0, i32 1), align 4, !dbg !4368
  %34 = getelementptr inbounds %struct.hal_keypad_config_t, %struct.hal_keypad_config_t* %0, i32 0, i32 3, !dbg !4369
  %35 = load i32, i32* %34, align 4, !dbg !4369
  %36 = icmp eq i32 %35, 0, !dbg !4371
  %37 = select i1 %36, i32 1000, i32 %35
  store i32 %37, i32* getelementptr inbounds (%struct.keypad_context_t, %struct.keypad_context_t* @keypad_context, i32 0, i32 4), align 4, !dbg !4372
  %38 = getelementptr inbounds %struct.hal_keypad_config_t, %struct.hal_keypad_config_t* %0, i32 0, i32 4, !dbg !4373
  %39 = load i32, i32* %38, align 4, !dbg !4373
  %40 = icmp eq i32 %39, 0, !dbg !4375
  %41 = select i1 %40, i32 2000, i32 %39, !dbg !4376
  store i32 %41, i32* getelementptr inbounds (%struct.keypad_context_t, %struct.keypad_context_t* @keypad_context, i32 0, i32 3), align 4, !dbg !4377
  tail call void @keypad_eint_wakeup_init() #21, !dbg !4378
  store i8 1, i8* getelementptr inbounds (%struct.keypad_context_t, %struct.keypad_context_t* @keypad_context, i32 0, i32 0), align 4, !dbg !4379
  br label %42, !dbg !4380

42:                                               ; preds = %1, %33
  %43 = phi i32 [ 0, %33 ], [ -2, %1 ], !dbg !4333
  ret i32 %43, !dbg !4381
}

; Function Attrs: optsize
declare dso_local void @keypad_eint_wakeup_init() local_unnamed_addr #3

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_keypad_deinit() local_unnamed_addr #0 !dbg !4382 {
  %1 = load i8, i8* getelementptr inbounds (%struct.keypad_context_t, %struct.keypad_context_t* @keypad_context, i32 0, i32 0), align 4, !dbg !4385, !range !3343
  %2 = icmp eq i8 %1, 1, !dbg !4387
  br i1 %2, label %3, label %12, !dbg !4388

3:                                                ; preds = %0
  %4 = tail call i32 @keypad_get_buffer_data_size() #21, !dbg !4389
  %5 = icmp eq i32 %4, 0, !dbg !4391
  %6 = load i8, i8* getelementptr inbounds (%struct.keypad_context_t, %struct.keypad_context_t* @keypad_context, i32 0, i32 1), align 1
  %7 = icmp eq i8 %6, 0
  %8 = select i1 %5, i1 %7, i1 false, !dbg !4392
  br i1 %8, label %9, label %12, !dbg !4392

9:                                                ; preds = %3
  %10 = load %struct.KEYPAD_REGISTER_T*, %struct.KEYPAD_REGISTER_T** @keypad, align 4, !dbg !4393
  %11 = getelementptr inbounds %struct.KEYPAD_REGISTER_T, %struct.KEYPAD_REGISTER_T* %10, i32 0, i32 6, !dbg !4394
  store volatile i32 0, i32* %11, align 4, !dbg !4395
  store i8 0, i8* getelementptr inbounds (%struct.keypad_context_t, %struct.keypad_context_t* @keypad_context, i32 0, i32 0), align 4, !dbg !4396
  br label %12, !dbg !4397

12:                                               ; preds = %3, %0, %9
  %13 = phi i32 [ 0, %9 ], [ -2, %0 ], [ -2, %3 ], !dbg !4398
  ret i32 %13, !dbg !4399
}

; Function Attrs: optsize
declare dso_local i32 @keypad_get_buffer_data_size() local_unnamed_addr #3

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_keypad_enable() local_unnamed_addr #10 !dbg !4400 {
  %1 = load i8, i8* getelementptr inbounds (%struct.keypad_context_t, %struct.keypad_context_t* @keypad_context, i32 0, i32 0), align 4, !dbg !4401, !range !3343
  %2 = icmp eq i8 %1, 1, !dbg !4403
  br i1 %2, label %3, label %6, !dbg !4404

3:                                                ; preds = %0
  %4 = load %struct.KEYPAD_REGISTER_T*, %struct.KEYPAD_REGISTER_T** @keypad, align 4, !dbg !4405
  %5 = getelementptr inbounds %struct.KEYPAD_REGISTER_T, %struct.KEYPAD_REGISTER_T* %4, i32 0, i32 7, !dbg !4406
  store volatile i32 1, i32* %5, align 4, !dbg !4407
  br label %6, !dbg !4408

6:                                                ; preds = %0, %3
  %7 = phi i32 [ 0, %3 ], [ -2, %0 ], !dbg !4409
  ret i32 %7, !dbg !4410
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_keypad_disable() local_unnamed_addr #10 !dbg !4411 {
  %1 = load %struct.KEYPAD_REGISTER_T*, %struct.KEYPAD_REGISTER_T** @keypad, align 4, !dbg !4412
  %2 = getelementptr inbounds %struct.KEYPAD_REGISTER_T, %struct.KEYPAD_REGISTER_T* %1, i32 0, i32 7, !dbg !4413
  %3 = load volatile i32, i32* %2, align 4, !dbg !4414
  %4 = and i32 %3, -2, !dbg !4414
  store volatile i32 %4, i32* %2, align 4, !dbg !4414
  ret i32 0, !dbg !4415
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_keypad_set_scan_timing(%struct.hal_keypad_scan_timing_t* noundef readonly %0) local_unnamed_addr #0 !dbg !4416 {
  call void @llvm.dbg.value(metadata %struct.hal_keypad_scan_timing_t* %0, metadata !4429, metadata !DIExpression()), !dbg !4430
  %2 = icmp eq %struct.hal_keypad_scan_timing_t* %0, null, !dbg !4431
  br i1 %2, label %30, label %3, !dbg !4433

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.hal_keypad_scan_timing_t, %struct.hal_keypad_scan_timing_t* %0, i32 0, i32 2, !dbg !4434
  %5 = load i8, i8* %4, align 1, !dbg !4434
  %6 = zext i8 %5 to i32, !dbg !4436
  %7 = getelementptr inbounds %struct.hal_keypad_scan_timing_t, %struct.hal_keypad_scan_timing_t* %0, i32 0, i32 0, !dbg !4437
  %8 = load i8, i8* %7, align 1, !dbg !4437
  %9 = zext i8 %8 to i32, !dbg !4438
  %10 = icmp ugt i8 %5, %8, !dbg !4439
  br i1 %10, label %12, label %11, !dbg !4440

11:                                               ; preds = %3
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__FUNCTION__.hal_keypad_set_scan_timing, i32 0, i32 0), i32 noundef 153, i8* noundef getelementptr inbounds ([72 x i8], [72 x i8]* @.str.35, i32 0, i32 0), i32 noundef %6, i32 noundef %9) #21, !dbg !4441
  br label %30, !dbg !4443

12:                                               ; preds = %3
  %13 = getelementptr inbounds %struct.hal_keypad_scan_timing_t, %struct.hal_keypad_scan_timing_t* %0, i32 0, i32 3, !dbg !4444
  %14 = load i8, i8* %13, align 1, !dbg !4444
  %15 = zext i8 %14 to i32, !dbg !4446
  %16 = getelementptr inbounds %struct.hal_keypad_scan_timing_t, %struct.hal_keypad_scan_timing_t* %0, i32 0, i32 1, !dbg !4447
  %17 = load i8, i8* %16, align 1, !dbg !4447
  %18 = zext i8 %17 to i32, !dbg !4448
  %19 = icmp ugt i8 %14, %17, !dbg !4449
  br i1 %19, label %21, label %20, !dbg !4450

20:                                               ; preds = %12
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__FUNCTION__.hal_keypad_set_scan_timing, i32 0, i32 0), i32 noundef 160, i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.1.36, i32 0, i32 0), i32 noundef %15, i32 noundef %18) #21, !dbg !4451
  br label %30, !dbg !4453

21:                                               ; preds = %12
  %22 = shl nuw nsw i32 %9, 12, !dbg !4454
  %23 = shl nuw nsw i32 %18, 8, !dbg !4455
  %24 = shl nuw nsw i32 %6, 4, !dbg !4456
  %25 = or i32 %22, %24, !dbg !4457
  %26 = add nuw nsw i32 %25, %15, !dbg !4458
  %27 = add nuw nsw i32 %26, %23, !dbg !4459
  %28 = load %struct.KEYPAD_REGISTER_T*, %struct.KEYPAD_REGISTER_T** @keypad, align 4, !dbg !4460
  %29 = getelementptr inbounds %struct.KEYPAD_REGISTER_T, %struct.KEYPAD_REGISTER_T* %28, i32 0, i32 5, !dbg !4461
  store volatile i32 %27, i32* %29, align 4, !dbg !4462
  br label %30, !dbg !4463

30:                                               ; preds = %1, %21, %20, %11
  %31 = phi i32 [ -1, %11 ], [ -1, %20 ], [ 0, %21 ], [ -1, %1 ], !dbg !4430
  ret i32 %31, !dbg !4464
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_keypad_get_scan_timing(%struct.hal_keypad_scan_timing_t* noundef writeonly %0) local_unnamed_addr #9 !dbg !4465 {
  call void @llvm.dbg.value(metadata %struct.hal_keypad_scan_timing_t* %0, metadata !4470, metadata !DIExpression()), !dbg !4472
  %2 = icmp eq %struct.hal_keypad_scan_timing_t* %0, null, !dbg !4473
  br i1 %2, label %20, label %3, !dbg !4475

3:                                                ; preds = %1
  %4 = load %struct.KEYPAD_REGISTER_T*, %struct.KEYPAD_REGISTER_T** @keypad, align 4, !dbg !4476
  %5 = getelementptr inbounds %struct.KEYPAD_REGISTER_T, %struct.KEYPAD_REGISTER_T* %4, i32 0, i32 5, !dbg !4477
  %6 = load volatile i32, i32* %5, align 4, !dbg !4477
  call void @llvm.dbg.value(metadata i32 %6, metadata !4471, metadata !DIExpression()), !dbg !4472
  %7 = lshr i32 %6, 12, !dbg !4478
  %8 = trunc i32 %7 to i8, !dbg !4479
  %9 = and i8 %8, 15, !dbg !4479
  %10 = getelementptr inbounds %struct.hal_keypad_scan_timing_t, %struct.hal_keypad_scan_timing_t* %0, i32 0, i32 0, !dbg !4480
  store i8 %9, i8* %10, align 1, !dbg !4481
  %11 = lshr i32 %6, 8, !dbg !4482
  %12 = trunc i32 %11 to i8, !dbg !4483
  %13 = and i8 %12, 15, !dbg !4483
  %14 = getelementptr inbounds %struct.hal_keypad_scan_timing_t, %struct.hal_keypad_scan_timing_t* %0, i32 0, i32 1, !dbg !4484
  store i8 %13, i8* %14, align 1, !dbg !4485
  %15 = trunc i32 %6 to i8, !dbg !4486
  %16 = lshr i8 %15, 4, !dbg !4486
  %17 = getelementptr inbounds %struct.hal_keypad_scan_timing_t, %struct.hal_keypad_scan_timing_t* %0, i32 0, i32 2, !dbg !4487
  store i8 %16, i8* %17, align 1, !dbg !4488
  %18 = and i8 %15, 15, !dbg !4489
  %19 = getelementptr inbounds %struct.hal_keypad_scan_timing_t, %struct.hal_keypad_scan_timing_t* %0, i32 0, i32 3, !dbg !4490
  store i8 %18, i8* %19, align 1, !dbg !4491
  br label %20, !dbg !4492

20:                                               ; preds = %1, %3
  %21 = phi i32 [ 0, %3 ], [ -1, %1 ], !dbg !4472
  ret i32 %21, !dbg !4493
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_keypad_set_debounce(i32* nocapture noundef readonly %0) local_unnamed_addr #10 !dbg !4494 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !4499, metadata !DIExpression()), !dbg !4500
  %2 = load i32, i32* %0, align 4, !dbg !4501
  %3 = shl i32 %2, 5, !dbg !4503
  %4 = icmp ugt i32 %3, 131071, !dbg !4504
  br i1 %4, label %8, label %5, !dbg !4505

5:                                                ; preds = %1
  %6 = load %struct.KEYPAD_REGISTER_T*, %struct.KEYPAD_REGISTER_T** @keypad, align 4, !dbg !4506
  %7 = getelementptr inbounds %struct.KEYPAD_REGISTER_T, %struct.KEYPAD_REGISTER_T* %6, i32 0, i32 4, !dbg !4507
  store volatile i32 %3, i32* %7, align 4, !dbg !4508
  br label %8, !dbg !4509

8:                                                ; preds = %1, %5
  %9 = phi i32 [ 0, %5 ], [ -1, %1 ], !dbg !4500
  ret i32 %9, !dbg !4510
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_keypad_get_debounce(i32* nocapture noundef writeonly %0) local_unnamed_addr #9 !dbg !4511 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !4515, metadata !DIExpression()), !dbg !4516
  %2 = load %struct.KEYPAD_REGISTER_T*, %struct.KEYPAD_REGISTER_T** @keypad, align 4, !dbg !4517
  %3 = getelementptr inbounds %struct.KEYPAD_REGISTER_T, %struct.KEYPAD_REGISTER_T* %2, i32 0, i32 4, !dbg !4518
  %4 = load volatile i32, i32* %3, align 4, !dbg !4518
  %5 = lshr i32 %4, 5, !dbg !4519
  store i32 %5, i32* %0, align 4, !dbg !4520
  ret i32 0, !dbg !4521
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_keypad_register_callback(void (i8*)* noundef %0, i8* noundef %1) local_unnamed_addr #0 !dbg !4522 {
  call void @llvm.dbg.value(metadata void (i8*)* %0, metadata !4526, metadata !DIExpression()), !dbg !4528
  call void @llvm.dbg.value(metadata i8* %1, metadata !4527, metadata !DIExpression()), !dbg !4528
  %3 = load i8, i8* getelementptr inbounds (%struct.keypad_context_t, %struct.keypad_context_t* @keypad_context, i32 0, i32 0), align 4, !dbg !4529, !range !3343
  %4 = icmp ne i8 %3, 1, !dbg !4531
  %5 = icmp eq void (i8*)* %0, null
  %6 = or i1 %5, %4, !dbg !4532
  br i1 %6, label %8, label %7, !dbg !4532

7:                                                ; preds = %2
  store void (i8*)* %0, void (i8*)** getelementptr inbounds (%struct.keypad_context_t, %struct.keypad_context_t* @keypad_context, i32 0, i32 2, i32 0), align 4, !dbg !4533
  store i8* %1, i8** getelementptr inbounds (%struct.keypad_context_t, %struct.keypad_context_t* @keypad_context, i32 0, i32 2, i32 1), align 4, !dbg !4534
  tail call void @keypad_nvic_register() #21, !dbg !4535
  br label %8, !dbg !4536

8:                                                ; preds = %2, %7
  %9 = phi i32 [ 0, %7 ], [ -2, %2 ], !dbg !4528
  ret i32 %9, !dbg !4537
}

; Function Attrs: optsize
declare dso_local void @keypad_nvic_register() local_unnamed_addr #3

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_keypad_get_key(%struct.GPT_REGISTER_GLOABL_T* noundef %0) local_unnamed_addr #0 !dbg !4538 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_GLOABL_T* %0, metadata !4549, metadata !DIExpression()), !dbg !4550
  %2 = tail call i32 @keypad_get_buffer_data_size() #21, !dbg !4551
  %3 = icmp eq i32 %2, 0, !dbg !4553
  br i1 %3, label %4, label %5, !dbg !4554

4:                                                ; preds = %1
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__FUNCTION__.hal_keypad_get_key, i32 0, i32 0), i32 noundef 230, i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.37, i32 0, i32 0)) #21, !dbg !4555
  br label %10, !dbg !4557

5:                                                ; preds = %1
  tail call void @keypad_pop_one_key_from_buffer(%struct.GPT_REGISTER_GLOABL_T* noundef %0) #21, !dbg !4558
  %6 = getelementptr inbounds %struct.GPT_REGISTER_GLOABL_T, %struct.GPT_REGISTER_GLOABL_T* %0, i32 0, i32 0, !dbg !4559
  %7 = load i32, i32* %6, align 4, !dbg !4559
  %8 = getelementptr inbounds %struct.GPT_REGISTER_GLOABL_T, %struct.GPT_REGISTER_GLOABL_T* %0, i32 0, i32 1, !dbg !4559
  %9 = load i32, i32* %8, align 4, !dbg !4559
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__FUNCTION__.hal_keypad_get_key, i32 0, i32 0), i32 noundef 235, i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3.38, i32 0, i32 0), i32 noundef %7, i32 noundef %9) #21, !dbg !4559
  br label %10, !dbg !4560

10:                                               ; preds = %5, %4
  %11 = phi i32 [ -2, %4 ], [ 0, %5 ], !dbg !4550
  ret i32 %11, !dbg !4561
}

; Function Attrs: optsize
declare dso_local void @keypad_pop_one_key_from_buffer(%struct.GPT_REGISTER_GLOABL_T* noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_keypad_powerkey_init(i32 noundef %0) local_unnamed_addr #0 !dbg !4562 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4566, metadata !DIExpression()), !dbg !4568
  %2 = load i8, i8* getelementptr inbounds (%struct.powerkey_context_t, %struct.powerkey_context_t* @powerkey_context, i32 0, i32 3), align 4, !dbg !4569, !range !3343
  %3 = icmp eq i8 %2, 0, !dbg !4569
  br i1 %3, label %4, label %22, !dbg !4571

4:                                                ; preds = %1
  %5 = icmp eq i32 %0, 254, !dbg !4572
  br i1 %5, label %16, label %6, !dbg !4574

6:                                                ; preds = %4
  %7 = tail call i8* @memset(i8* noundef bitcast (%struct.powerkey_context_t* @powerkey_context to i8*), i32 noundef 0, i32 noundef 32) #21, !dbg !4575
  %8 = load i32, i32* getelementptr inbounds (%struct.powerkey_context_t, %struct.powerkey_context_t* @powerkey_context, i32 0, i32 7), align 4, !dbg !4577
  %9 = icmp eq i32 %8, 0, !dbg !4579
  br i1 %9, label %10, label %11, !dbg !4580

10:                                               ; preds = %6
  store i32 1000, i32* getelementptr inbounds (%struct.powerkey_context_t, %struct.powerkey_context_t* @powerkey_context, i32 0, i32 7), align 4, !dbg !4581
  br label %11, !dbg !4583

11:                                               ; preds = %10, %6
  %12 = load i32, i32* getelementptr inbounds (%struct.powerkey_context_t, %struct.powerkey_context_t* @powerkey_context, i32 0, i32 6), align 4, !dbg !4584
  %13 = icmp eq i32 %12, 0, !dbg !4586
  br i1 %13, label %14, label %15, !dbg !4587

14:                                               ; preds = %11
  store i32 2000, i32* getelementptr inbounds (%struct.powerkey_context_t, %struct.powerkey_context_t* @powerkey_context, i32 0, i32 6), align 4, !dbg !4588
  br label %15, !dbg !4590

15:                                               ; preds = %14, %11
  store i32 %0, i32* getelementptr inbounds (%struct.powerkey_context_t, %struct.powerkey_context_t* @powerkey_context, i32 0, i32 0), align 4, !dbg !4591
  store i8 1, i8* getelementptr inbounds (%struct.powerkey_context_t, %struct.powerkey_context_t* @powerkey_context, i32 0, i32 3), align 4, !dbg !4592
  br label %16, !dbg !4593

16:                                               ; preds = %15, %4
  %17 = load i8, i8* getelementptr inbounds (%struct.powerkey_context_t, %struct.powerkey_context_t* @powerkey_context, i32 0, i32 4), align 1, !dbg !4594, !range !3343
  %18 = icmp eq i8 %17, 0, !dbg !4596
  br i1 %18, label %19, label %22, !dbg !4597

19:                                               ; preds = %16
  %20 = tail call zeroext i1 @powerkey_pmu_init() #21, !dbg !4598
  call void @llvm.dbg.value(metadata i1 %20, metadata !4567, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4568
  br i1 %20, label %21, label %22, !dbg !4600

21:                                               ; preds = %19
  store i8 1, i8* getelementptr inbounds (%struct.powerkey_context_t, %struct.powerkey_context_t* @powerkey_context, i32 0, i32 4), align 1, !dbg !4601
  br label %22, !dbg !4602

22:                                               ; preds = %16, %21, %19, %1
  %23 = phi i32 [ -2, %1 ], [ -2, %19 ], [ 0, %21 ], [ 0, %16 ], !dbg !4568
  ret i32 %23, !dbg !4603
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_keypad_powerkey_deinit() local_unnamed_addr #0 !dbg !4604 {
  %1 = load i8, i8* getelementptr inbounds (%struct.powerkey_context_t, %struct.powerkey_context_t* @powerkey_context, i32 0, i32 3), align 4, !dbg !4605, !range !3343
  %2 = icmp eq i8 %1, 1, !dbg !4607
  br i1 %2, label %3, label %8, !dbg !4608

3:                                                ; preds = %0
  %4 = tail call i32 @powerkey_get_buffer_data_size() #21, !dbg !4609
  %5 = icmp eq i32 %4, 0, !dbg !4611
  br i1 %5, label %7, label %6, !dbg !4612

6:                                                ; preds = %3
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__FUNCTION__.hal_keypad_powerkey_deinit, i32 0, i32 0), i32 noundef 286, i8* noundef getelementptr inbounds ([46 x i8], [46 x i8]* @.str.4.39, i32 0, i32 0)) #21, !dbg !4613
  br label %8, !dbg !4615

7:                                                ; preds = %3
  store i8 0, i8* getelementptr inbounds (%struct.powerkey_context_t, %struct.powerkey_context_t* @powerkey_context, i32 0, i32 3), align 4, !dbg !4616
  br label %8, !dbg !4617

8:                                                ; preds = %0, %7, %6
  %9 = phi i32 [ -2, %6 ], [ 0, %7 ], [ -2, %0 ], !dbg !4618
  ret i32 %9, !dbg !4619
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @hal_keypad_powerkey_register_callback(void (i8*)* noundef %0, i8* noundef %1) local_unnamed_addr #5 !dbg !4620 {
  call void @llvm.dbg.value(metadata void (i8*)* %0, metadata !4624, metadata !DIExpression()), !dbg !4626
  call void @llvm.dbg.value(metadata i8* %1, metadata !4625, metadata !DIExpression()), !dbg !4626
  %3 = load i8, i8* getelementptr inbounds (%struct.powerkey_context_t, %struct.powerkey_context_t* @powerkey_context, i32 0, i32 3), align 4, !dbg !4627, !range !3343
  %4 = icmp eq i8 %3, 1, !dbg !4629
  br i1 %4, label %5, label %8, !dbg !4630

5:                                                ; preds = %2
  %6 = icmp eq void (i8*)* %0, null, !dbg !4631
  br i1 %6, label %8, label %7, !dbg !4633

7:                                                ; preds = %5
  store void (i8*)* %0, void (i8*)** getelementptr inbounds (%struct.powerkey_context_t, %struct.powerkey_context_t* @powerkey_context, i32 0, i32 5, i32 0), align 4, !dbg !4634
  store i8* %1, i8** getelementptr inbounds (%struct.powerkey_context_t, %struct.powerkey_context_t* @powerkey_context, i32 0, i32 5, i32 1), align 4, !dbg !4635
  br label %8, !dbg !4636

8:                                                ; preds = %5, %2, %7
  %9 = phi i32 [ 0, %7 ], [ -2, %2 ], [ -1, %5 ], !dbg !4626
  ret i32 %9, !dbg !4637
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_keypad_powerkey_get_key(%struct.GPT_REGISTER_GLOABL_T* noundef %0) local_unnamed_addr #0 !dbg !4638 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_GLOABL_T* %0, metadata !4649, metadata !DIExpression()), !dbg !4650
  %2 = tail call i32 @powerkey_get_buffer_data_size() #21, !dbg !4651
  %3 = icmp eq i32 %2, 0, !dbg !4653
  br i1 %3, label %4, label %5, !dbg !4654

4:                                                ; preds = %1
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.hal_keypad_powerkey_get_key, i32 0, i32 0), i32 noundef 315, i8* noundef getelementptr inbounds ([46 x i8], [46 x i8]* @.str.5.40, i32 0, i32 0)) #21, !dbg !4655
  br label %10, !dbg !4657

5:                                                ; preds = %1
  tail call void @powerkey_pop_one_key_from_buffer(%struct.GPT_REGISTER_GLOABL_T* noundef %0) #21, !dbg !4658
  %6 = getelementptr inbounds %struct.GPT_REGISTER_GLOABL_T, %struct.GPT_REGISTER_GLOABL_T* %0, i32 0, i32 0, !dbg !4659
  %7 = load i32, i32* %6, align 4, !dbg !4659
  %8 = getelementptr inbounds %struct.GPT_REGISTER_GLOABL_T, %struct.GPT_REGISTER_GLOABL_T* %0, i32 0, i32 1, !dbg !4659
  %9 = load i32, i32* %8, align 4, !dbg !4659
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.hal_keypad_powerkey_get_key, i32 0, i32 0), i32 noundef 320, i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str.6.41, i32 0, i32 0), i32 noundef %7, i32 noundef %9) #21, !dbg !4659
  br label %10, !dbg !4660

10:                                               ; preds = %5, %4
  %11 = phi i32 [ -2, %4 ], [ 0, %5 ], !dbg !4650
  ret i32 %11, !dbg !4661
}

; Function Attrs: noinline nounwind optsize
define dso_local void @powerkey_push_one_key_to_buffer(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !4662 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !4666, metadata !DIExpression()), !dbg !4669
  call void @llvm.dbg.value(metadata i32 %1, metadata !4667, metadata !DIExpression()), !dbg !4669
  %4 = bitcast i32* %3 to i8*, !dbg !4670
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #22, !dbg !4670
  call void @llvm.dbg.value(metadata i32* %3, metadata !4668, metadata !DIExpression(DW_OP_deref)), !dbg !4669
  %5 = call i32 @hal_gpt_get_free_run_count(i32 noundef 0, i32* noundef nonnull %3) #21, !dbg !4671
  %6 = load i8, i8* getelementptr inbounds (%struct.powerkey_buffer_t, %struct.powerkey_buffer_t* @powerkey_buffer, i32 0, i32 1), align 4, !dbg !4672
  %7 = zext i8 %6 to i32, !dbg !4673
  %8 = getelementptr inbounds %struct.powerkey_buffer_t, %struct.powerkey_buffer_t* @powerkey_buffer, i32 0, i32 0, i32 %7, i32 0, !dbg !4674
  store i32 %0, i32* %8, align 4, !dbg !4675
  %9 = load i8, i8* getelementptr inbounds (%struct.powerkey_buffer_t, %struct.powerkey_buffer_t* @powerkey_buffer, i32 0, i32 1), align 4, !dbg !4676
  %10 = zext i8 %9 to i32, !dbg !4677
  %11 = getelementptr inbounds %struct.powerkey_buffer_t, %struct.powerkey_buffer_t* @powerkey_buffer, i32 0, i32 0, i32 %10, i32 1, !dbg !4678
  store i32 %1, i32* %11, align 4, !dbg !4679
  %12 = load i32, i32* %3, align 4, !dbg !4680
  call void @llvm.dbg.value(metadata i32 %12, metadata !4668, metadata !DIExpression()), !dbg !4669
  %13 = getelementptr inbounds %struct.powerkey_buffer_t, %struct.powerkey_buffer_t* @powerkey_buffer, i32 0, i32 0, i32 %10, i32 2, !dbg !4681
  store i32 %12, i32* %13, align 4, !dbg !4682
  %14 = add i8 %9, 1, !dbg !4683
  %15 = and i8 %14, 31, !dbg !4684
  store i8 %15, i8* getelementptr inbounds (%struct.powerkey_buffer_t, %struct.powerkey_buffer_t* @powerkey_buffer, i32 0, i32 1), align 4, !dbg !4684
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #22, !dbg !4685
  ret void, !dbg !4685
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @powerkey_pop_one_key_from_buffer(%struct.GPT_REGISTER_GLOABL_T* nocapture noundef writeonly %0) local_unnamed_addr #5 !dbg !4686 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_GLOABL_T* %0, metadata !4691, metadata !DIExpression()), !dbg !4692
  %2 = load i8, i8* getelementptr inbounds (%struct.powerkey_buffer_t, %struct.powerkey_buffer_t* @powerkey_buffer, i32 0, i32 2), align 1, !dbg !4693
  %3 = zext i8 %2 to i32, !dbg !4694
  %4 = getelementptr inbounds %struct.powerkey_buffer_t, %struct.powerkey_buffer_t* @powerkey_buffer, i32 0, i32 0, i32 %3, i32 0, !dbg !4695
  %5 = load i32, i32* %4, align 4, !dbg !4695
  %6 = getelementptr inbounds %struct.GPT_REGISTER_GLOABL_T, %struct.GPT_REGISTER_GLOABL_T* %0, i32 0, i32 0, !dbg !4696
  store i32 %5, i32* %6, align 4, !dbg !4697
  %7 = load i8, i8* getelementptr inbounds (%struct.powerkey_buffer_t, %struct.powerkey_buffer_t* @powerkey_buffer, i32 0, i32 2), align 1, !dbg !4698
  %8 = zext i8 %7 to i32, !dbg !4699
  %9 = getelementptr inbounds %struct.powerkey_buffer_t, %struct.powerkey_buffer_t* @powerkey_buffer, i32 0, i32 0, i32 %8, i32 1, !dbg !4700
  %10 = load i32, i32* %9, align 4, !dbg !4700
  %11 = getelementptr inbounds %struct.GPT_REGISTER_GLOABL_T, %struct.GPT_REGISTER_GLOABL_T* %0, i32 0, i32 1, !dbg !4701
  store i32 %10, i32* %11, align 4, !dbg !4702
  %12 = load i8, i8* getelementptr inbounds (%struct.powerkey_buffer_t, %struct.powerkey_buffer_t* @powerkey_buffer, i32 0, i32 2), align 1, !dbg !4703
  %13 = zext i8 %12 to i32, !dbg !4704
  %14 = getelementptr inbounds %struct.powerkey_buffer_t, %struct.powerkey_buffer_t* @powerkey_buffer, i32 0, i32 0, i32 %13, i32 2, !dbg !4705
  %15 = load i32, i32* %14, align 4, !dbg !4705
  %16 = getelementptr inbounds %struct.GPT_REGISTER_GLOABL_T, %struct.GPT_REGISTER_GLOABL_T* %0, i32 0, i32 2, !dbg !4706
  store i32 %15, i32* %16, align 4, !dbg !4707
  %17 = load i8, i8* getelementptr inbounds (%struct.powerkey_buffer_t, %struct.powerkey_buffer_t* @powerkey_buffer, i32 0, i32 2), align 1, !dbg !4708
  %18 = add i8 %17, 1, !dbg !4708
  %19 = and i8 %18, 31, !dbg !4709
  store i8 %19, i8* getelementptr inbounds (%struct.powerkey_buffer_t, %struct.powerkey_buffer_t* @powerkey_buffer, i32 0, i32 2), align 1, !dbg !4709
  ret void, !dbg !4710
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @powerkey_get_buffer_left_size() local_unnamed_addr #2 !dbg !4711 {
  %1 = load i8, i8* getelementptr inbounds (%struct.powerkey_buffer_t, %struct.powerkey_buffer_t* @powerkey_buffer, i32 0, i32 1), align 4, !dbg !4712
  %2 = zext i8 %1 to i32, !dbg !4714
  %3 = load i8, i8* getelementptr inbounds (%struct.powerkey_buffer_t, %struct.powerkey_buffer_t* @powerkey_buffer, i32 0, i32 2), align 1, !dbg !4715
  %4 = zext i8 %3 to i32, !dbg !4716
  %5 = icmp ugt i8 %3, %1, !dbg !4717
  %6 = select i1 %5, i32 0, i32 32, !dbg !4718
  %7 = sub nsw i32 %4, %2, !dbg !4718
  %8 = add nsw i32 %7, %6, !dbg !4718
  ret i32 %8, !dbg !4719
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @powerkey_get_buffer_data_size() local_unnamed_addr #2 !dbg !4720 {
  %1 = tail call i32 @powerkey_get_buffer_left_size() #20, !dbg !4721
  %2 = sub i32 32, %1, !dbg !4722
  ret i32 %2, !dbg !4723
}

; Function Attrs: noinline nounwind optsize
define dso_local void @powerkey_process_repeat_and_longpress(i32* nocapture noundef readonly %0) #0 !dbg !4724 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !4728, metadata !DIExpression()), !dbg !4730
  %2 = load i32, i32* %0, align 4, !dbg !4731
  %3 = load i32, i32* getelementptr inbounds (%struct.powerkey_context_t, %struct.powerkey_context_t* @powerkey_context, i32 0, i32 0), align 4, !dbg !4731
  %4 = icmp eq i32 %2, %3, !dbg !4731
  br i1 %4, label %6, label %5, !dbg !4731

5:                                                ; preds = %1
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([69 x i8], [69 x i8]* @.str.46, i32 0, i32 0), i32 noundef 150, i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @__func__.powerkey_process_repeat_and_longpress, i32 0, i32 0), i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str.1.47, i32 0, i32 0)) #23, !dbg !4731
  unreachable, !dbg !4731

6:                                                ; preds = %1
  %7 = tail call i32 @powerkey_get_buffer_left_size() #20, !dbg !4732
  %8 = load i8, i8* getelementptr inbounds (%struct.powerkey_buffer_t, %struct.powerkey_buffer_t* @powerkey_buffer, i32 0, i32 3), align 2, !dbg !4734
  %9 = zext i8 %8 to i32, !dbg !4735
  %10 = add nuw nsw i32 %9, 1, !dbg !4736
  %11 = icmp ugt i32 %7, %10, !dbg !4737
  br i1 %11, label %12, label %25, !dbg !4738

12:                                               ; preds = %6
  %13 = load i32, i32* getelementptr inbounds (%struct.powerkey_state_t, %struct.powerkey_state_t* @powerkey_state, i32 0, i32 1), align 4, !dbg !4739
  %14 = icmp eq i32 %13, 1, !dbg !4742
  %15 = select i1 %14, i32 2, i32 3
  store i32 %15, i32* getelementptr inbounds (%struct.powerkey_state_t, %struct.powerkey_state_t* @powerkey_state, i32 0, i32 1), align 4, !dbg !4743
  tail call void @powerkey_push_one_key_to_buffer(i32 noundef %15, i32 noundef %2) #20, !dbg !4744
  %16 = load i32, i32* getelementptr inbounds (%struct.powerkey_state_t, %struct.powerkey_state_t* @powerkey_state, i32 0, i32 0), align 4, !dbg !4745
  %17 = load i32, i32* getelementptr inbounds (%struct.powerkey_context_t, %struct.powerkey_context_t* @powerkey_context, i32 0, i32 7), align 4, !dbg !4746
  %18 = tail call i32 @hal_gpt_sw_start_timer_ms(i32 noundef %16, i32 noundef %17, void (i8*)* noundef bitcast (void (i32*)* @powerkey_process_repeat_and_longpress to void (i8*)*), i8* noundef bitcast (%struct.powerkey_context_t* @powerkey_context to i8*)) #21, !dbg !4747
  call void @llvm.dbg.value(metadata i32 %18, metadata !4729, metadata !DIExpression()), !dbg !4730
  %19 = icmp eq i32 %18, 0, !dbg !4748
  br i1 %19, label %22, label %20, !dbg !4750

20:                                               ; preds = %12
  %21 = load i32, i32* getelementptr inbounds (%struct.powerkey_state_t, %struct.powerkey_state_t* @powerkey_state, i32 0, i32 0), align 4, !dbg !4751
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @__func__.powerkey_process_repeat_and_longpress, i32 0, i32 0), i32 noundef 168, i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.2.48, i32 0, i32 0), i32 noundef %18, i32 noundef %21) #21, !dbg !4751
  br label %22, !dbg !4753

22:                                               ; preds = %20, %12
  %23 = load i32, i32* getelementptr inbounds (%struct.powerkey_state_t, %struct.powerkey_state_t* @powerkey_state, i32 0, i32 1), align 4, !dbg !4754
  %24 = load i32, i32* getelementptr inbounds (%struct.powerkey_context_t, %struct.powerkey_context_t* @powerkey_context, i32 0, i32 0), align 4, !dbg !4754
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @__func__.powerkey_process_repeat_and_longpress, i32 0, i32 0), i32 noundef 171, i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.3.49, i32 0, i32 0), i32 noundef %23, i32 noundef %24) #21, !dbg !4754
  tail call fastcc void @powerkey_call_user_callback() #20, !dbg !4755
  br label %25, !dbg !4756

25:                                               ; preds = %22, %6
  ret void, !dbg !4757
}

; Function Attrs: noreturn optsize
declare dso_local void @__assert_func(i8* noundef, i32 noundef, i8* noundef, i8* noundef) local_unnamed_addr #13

; Function Attrs: noinline nounwind optsize
define internal fastcc void @powerkey_call_user_callback() unnamed_addr #0 !dbg !4758 {
  %1 = load i8, i8* getelementptr inbounds (%struct.powerkey_context_t, %struct.powerkey_context_t* @powerkey_context, i32 0, i32 3), align 4, !dbg !4767, !range !3343
  %2 = icmp eq i8 %1, 1, !dbg !4769
  br i1 %2, label %3, label %10, !dbg !4770

3:                                                ; preds = %0
  %4 = load void (i8*)*, void (i8*)** getelementptr inbounds (%struct.powerkey_context_t, %struct.powerkey_context_t* @powerkey_context, i32 0, i32 5, i32 0), align 4, !dbg !4771
  %5 = icmp eq void (i8*)* %4, null, !dbg !4773
  br i1 %5, label %9, label %6, !dbg !4774

6:                                                ; preds = %3
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.powerkey_call_user_callback, i32 0, i32 0), i32 noundef 137, i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.14, i32 0, i32 0)) #21, !dbg !4775
  %7 = load void (i8*)*, void (i8*)** getelementptr inbounds (%struct.powerkey_context_t, %struct.powerkey_context_t* @powerkey_context, i32 0, i32 5, i32 0), align 4, !dbg !4777
  %8 = load i8*, i8** getelementptr inbounds (%struct.powerkey_context_t, %struct.powerkey_context_t* @powerkey_context, i32 0, i32 5, i32 1), align 4, !dbg !4778
  tail call void %7(i8* noundef %8) #21, !dbg !4779
  br label %10, !dbg !4780

9:                                                ; preds = %3
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.powerkey_call_user_callback, i32 0, i32 0), i32 noundef 140, i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15, i32 0, i32 0)) #21, !dbg !4781
  br label %10

10:                                               ; preds = %6, %9, %0
  ret void, !dbg !4783
}

; Function Attrs: noinline nounwind optsize
define dso_local void @powerkey_long_press_handler(i8 noundef zeroext %0, %struct.powerkey_context_t* nocapture readnone %1) #0 !dbg !4784 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !4800, metadata !DIExpression()), !dbg !4802
  call void @llvm.dbg.value(metadata %struct.powerkey_context_t* undef, metadata !4801, metadata !DIExpression()), !dbg !4802
  %3 = zext i8 %0 to i32, !dbg !4803
  tail call fastcc void @powerkey_process_key(i32 noundef 1, i32 noundef %3) #20, !dbg !4804
  ret void, !dbg !4805
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @powerkey_process_key(i32 noundef %0, i32 noundef %1) unnamed_addr #0 !dbg !4806 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4811, metadata !DIExpression()), !dbg !4819
  call void @llvm.dbg.value(metadata i32 %1, metadata !4812, metadata !DIExpression()), !dbg !4819
  call void @llvm.dbg.value(metadata %struct.powerkey_context_t* undef, metadata !4813, metadata !DIExpression()), !dbg !4819
  %3 = load i8, i8* getelementptr inbounds (%struct.powerkey_context_t, %struct.powerkey_context_t* @powerkey_context, i32 0, i32 4), align 1, !dbg !4820, !range !3343
  %4 = icmp eq i8 %3, 1, !dbg !4822
  br i1 %4, label %5, label %69, !dbg !4823

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 %1, metadata !4817, metadata !DIExpression()), !dbg !4819
  %6 = icmp eq i32 %0, 1, !dbg !4824
  %7 = select i1 %6, i32 4, i32 1
  call void @llvm.dbg.value(metadata i32 0, metadata !4814, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !4819
  call void @llvm.dbg.value(metadata i32 2, metadata !4816, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !4819
  call void @llvm.dbg.value(metadata i32 1, metadata !4816, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !4819
  call void @llvm.dbg.value(metadata i32 %7, metadata !4814, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !4819
  %8 = and i32 %1, 2, !dbg !4826
  %9 = icmp eq i32 %8, 0, !dbg !4828
  br i1 %9, label %36, label %10, !dbg !4829

10:                                               ; preds = %5
  %11 = load i8, i8* @powerkey_lock_sleep_handle, align 1, !dbg !4830
  %12 = tail call i32 @hal_sleep_manager_lock_sleep(i8 noundef zeroext %11) #21, !dbg !4830
  %13 = tail call i32 @powerkey_get_buffer_left_size() #20, !dbg !4833
  %14 = load i8, i8* getelementptr inbounds (%struct.powerkey_buffer_t, %struct.powerkey_buffer_t* @powerkey_buffer, i32 0, i32 3), align 2, !dbg !4835
  %15 = zext i8 %14 to i32, !dbg !4836
  %16 = add nuw nsw i32 %15, 1, !dbg !4837
  %17 = icmp ugt i32 %13, %16, !dbg !4838
  br i1 %17, label %18, label %36, !dbg !4839

18:                                               ; preds = %10
  store i32 %7, i32* getelementptr inbounds (%struct.powerkey_state_t, %struct.powerkey_state_t* @powerkey_state, i32 0, i32 1), align 4, !dbg !4840
  br i1 %6, label %31, label %19, !dbg !4842

19:                                               ; preds = %18
  %20 = tail call i32 @hal_gpt_sw_get_timer(i32* noundef getelementptr inbounds (%struct.powerkey_state_t, %struct.powerkey_state_t* @powerkey_state, i32 0, i32 0)) #21, !dbg !4843
  call void @llvm.dbg.value(metadata i32 %20, metadata !4818, metadata !DIExpression()), !dbg !4819
  %21 = icmp eq i32 %20, 0, !dbg !4846
  br i1 %21, label %24, label %22, !dbg !4848

22:                                               ; preds = %19
  %23 = load i32, i32* getelementptr inbounds (%struct.powerkey_state_t, %struct.powerkey_state_t* @powerkey_state, i32 0, i32 0), align 4, !dbg !4849
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__FUNCTION__.powerkey_process_key, i32 0, i32 0), i32 noundef 219, i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.16, i32 0, i32 0), i32 noundef %20, i32 noundef %23) #21, !dbg !4849
  br label %24, !dbg !4851

24:                                               ; preds = %22, %19
  %25 = load i32, i32* getelementptr inbounds (%struct.powerkey_state_t, %struct.powerkey_state_t* @powerkey_state, i32 0, i32 0), align 4, !dbg !4852
  %26 = load i32, i32* getelementptr inbounds (%struct.powerkey_context_t, %struct.powerkey_context_t* @powerkey_context, i32 0, i32 6), align 4, !dbg !4853
  %27 = tail call i32 @hal_gpt_sw_start_timer_ms(i32 noundef %25, i32 noundef %26, void (i8*)* noundef bitcast (void (i32*)* @powerkey_process_repeat_and_longpress to void (i8*)*), i8* noundef bitcast (%struct.powerkey_context_t* @powerkey_context to i8*)) #21, !dbg !4854
  call void @llvm.dbg.value(metadata i32 %27, metadata !4818, metadata !DIExpression()), !dbg !4819
  %28 = icmp eq i32 %27, 0, !dbg !4855
  br i1 %28, label %31, label %29, !dbg !4857

29:                                               ; preds = %24
  %30 = load i32, i32* getelementptr inbounds (%struct.powerkey_state_t, %struct.powerkey_state_t* @powerkey_state, i32 0, i32 0), align 4, !dbg !4858
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__FUNCTION__.powerkey_process_key, i32 0, i32 0), i32 noundef 229, i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.2.48, i32 0, i32 0), i32 noundef %27, i32 noundef %30) #21, !dbg !4858
  br label %31, !dbg !4860

31:                                               ; preds = %24, %29, %18
  %32 = load i8, i8* getelementptr inbounds (%struct.powerkey_buffer_t, %struct.powerkey_buffer_t* @powerkey_buffer, i32 0, i32 3), align 2, !dbg !4861
  %33 = add i8 %32, 1, !dbg !4861
  store i8 %33, i8* getelementptr inbounds (%struct.powerkey_buffer_t, %struct.powerkey_buffer_t* @powerkey_buffer, i32 0, i32 3), align 2, !dbg !4861
  store i32 0, i32* getelementptr inbounds (%struct.powerkey_context_t, %struct.powerkey_context_t* @powerkey_context, i32 0, i32 1), align 4, !dbg !4862
  %34 = load i32, i32* getelementptr inbounds (%struct.powerkey_state_t, %struct.powerkey_state_t* @powerkey_state, i32 0, i32 1), align 4, !dbg !4863
  %35 = load i32, i32* getelementptr inbounds (%struct.powerkey_context_t, %struct.powerkey_context_t* @powerkey_context, i32 0, i32 0), align 4, !dbg !4864
  tail call void @powerkey_push_one_key_to_buffer(i32 noundef %34, i32 noundef %35) #20, !dbg !4865
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__FUNCTION__.powerkey_process_key, i32 0, i32 0), i32 noundef 236, i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.17, i32 0, i32 0), i32 noundef %0) #21, !dbg !4866
  tail call fastcc void @powerkey_call_user_callback() #20, !dbg !4867
  br label %36, !dbg !4868

36:                                               ; preds = %10, %31, %5
  %37 = and i32 %1, 1, !dbg !4869
  %38 = icmp eq i32 %37, 0, !dbg !4871
  br i1 %38, label %69, label %39, !dbg !4872

39:                                               ; preds = %36
  %40 = tail call i32 @powerkey_get_buffer_left_size() #20, !dbg !4873
  %41 = icmp eq i32 %40, 0, !dbg !4876
  br i1 %41, label %69, label %42, !dbg !4877

42:                                               ; preds = %39
  %43 = load i8, i8* getelementptr inbounds (%struct.powerkey_buffer_t, %struct.powerkey_buffer_t* @powerkey_buffer, i32 0, i32 3), align 2, !dbg !4878
  %44 = icmp eq i8 %43, 0, !dbg !4881
  br i1 %44, label %45, label %46, !dbg !4882

45:                                               ; preds = %42
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__FUNCTION__.powerkey_process_key, i32 0, i32 0), i32 noundef 246, i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.18, i32 0, i32 0)) #21, !dbg !4883
  br label %69, !dbg !4885

46:                                               ; preds = %42
  %47 = load i32, i32* getelementptr inbounds (%struct.powerkey_context_t, %struct.powerkey_context_t* @powerkey_context, i32 0, i32 1), align 4, !dbg !4886
  %48 = add i32 %47, 1, !dbg !4886
  store i32 %48, i32* getelementptr inbounds (%struct.powerkey_context_t, %struct.powerkey_context_t* @powerkey_context, i32 0, i32 1), align 4, !dbg !4886
  %49 = icmp ugt i32 %48, 1, !dbg !4887
  br i1 %49, label %69, label %50, !dbg !4889

50:                                               ; preds = %46
  store i32 0, i32* getelementptr inbounds (%struct.powerkey_state_t, %struct.powerkey_state_t* @powerkey_state, i32 0, i32 1), align 4, !dbg !4890
  %51 = load i32, i32* getelementptr inbounds (%struct.powerkey_state_t, %struct.powerkey_state_t* @powerkey_state, i32 0, i32 0), align 4, !dbg !4891
  %52 = tail call i32 @hal_gpt_sw_stop_timer_ms(i32 noundef %51) #21, !dbg !4892
  call void @llvm.dbg.value(metadata i32 %52, metadata !4818, metadata !DIExpression()), !dbg !4819
  %53 = icmp eq i32 %52, 0, !dbg !4893
  br i1 %53, label %56, label %54, !dbg !4895

54:                                               ; preds = %50
  %55 = load i32, i32* getelementptr inbounds (%struct.powerkey_state_t, %struct.powerkey_state_t* @powerkey_state, i32 0, i32 0), align 4, !dbg !4896
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__FUNCTION__.powerkey_process_key, i32 0, i32 0), i32 noundef 261, i8* noundef getelementptr inbounds ([65 x i8], [65 x i8]* @.str.19, i32 0, i32 0), i32 noundef %52, i32 noundef %55) #21, !dbg !4896
  br label %56, !dbg !4898

56:                                               ; preds = %54, %50
  %57 = load i32, i32* getelementptr inbounds (%struct.powerkey_state_t, %struct.powerkey_state_t* @powerkey_state, i32 0, i32 0), align 4, !dbg !4899
  %58 = tail call i32 @hal_gpt_sw_free_timer(i32 noundef %57) #21, !dbg !4900
  call void @llvm.dbg.value(metadata i32 %58, metadata !4818, metadata !DIExpression()), !dbg !4819
  %59 = icmp eq i32 %58, 0, !dbg !4901
  br i1 %59, label %62, label %60, !dbg !4903

60:                                               ; preds = %56
  %61 = load i32, i32* getelementptr inbounds (%struct.powerkey_state_t, %struct.powerkey_state_t* @powerkey_state, i32 0, i32 0), align 4, !dbg !4904
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__FUNCTION__.powerkey_process_key, i32 0, i32 0), i32 noundef 269, i8* noundef getelementptr inbounds ([65 x i8], [65 x i8]* @.str.20, i32 0, i32 0), i32 noundef %58, i32 noundef %61) #21, !dbg !4904
  br label %62, !dbg !4906

62:                                               ; preds = %60, %56
  %63 = load i8, i8* getelementptr inbounds (%struct.powerkey_buffer_t, %struct.powerkey_buffer_t* @powerkey_buffer, i32 0, i32 3), align 2, !dbg !4907
  %64 = add i8 %63, -1, !dbg !4907
  store i8 %64, i8* getelementptr inbounds (%struct.powerkey_buffer_t, %struct.powerkey_buffer_t* @powerkey_buffer, i32 0, i32 3), align 2, !dbg !4907
  %65 = load i32, i32* getelementptr inbounds (%struct.powerkey_state_t, %struct.powerkey_state_t* @powerkey_state, i32 0, i32 1), align 4, !dbg !4908
  %66 = load i32, i32* getelementptr inbounds (%struct.powerkey_context_t, %struct.powerkey_context_t* @powerkey_context, i32 0, i32 0), align 4, !dbg !4909
  tail call void @powerkey_push_one_key_to_buffer(i32 noundef %65, i32 noundef %66) #20, !dbg !4910
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__FUNCTION__.powerkey_process_key, i32 0, i32 0), i32 noundef 274, i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.21, i32 0, i32 0), i32 noundef %0) #21, !dbg !4911
  tail call fastcc void @powerkey_call_user_callback() #20, !dbg !4912
  %67 = load i8, i8* @powerkey_lock_sleep_handle, align 1, !dbg !4913
  %68 = tail call i32 @hal_sleep_manager_unlock_sleep(i8 noundef zeroext %67) #21, !dbg !4913
  br label %69, !dbg !4915

69:                                               ; preds = %36, %62, %39, %46, %2, %45
  ret void, !dbg !4916
}

; Function Attrs: noinline nounwind optsize
define dso_local void @powerkey_press_handler(i8 noundef zeroext %0, %struct.powerkey_context_t* nocapture readnone %1) #0 !dbg !4917 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !4919, metadata !DIExpression()), !dbg !4921
  call void @llvm.dbg.value(metadata %struct.powerkey_context_t* undef, metadata !4920, metadata !DIExpression()), !dbg !4921
  %3 = zext i8 %0 to i32, !dbg !4922
  tail call fastcc void @powerkey_process_key(i32 noundef 0, i32 noundef %3) #20, !dbg !4923
  ret void, !dbg !4924
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @powerkey_pmu_reisgter_callback() local_unnamed_addr #0 !dbg !4925 {
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @__FUNCTION__.powerkey_pmu_reisgter_callback, i32 0, i32 0), i32 noundef 296, i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.4.50, i32 0, i32 0)) #21, !dbg !4929
  %1 = tail call i32 @pmu_register_callback(i32 noundef 7, i32 noundef 3, void (i8, i8*)* noundef bitcast (void (i8, %struct.powerkey_context_t*)* @powerkey_long_press_handler to void (i8, i8*)*), i8* noundef bitcast (%struct.powerkey_context_t* @powerkey_context to i8*)) #21, !dbg !4930
  call void @llvm.dbg.value(metadata i32 %1, metadata !4927, metadata !DIExpression()), !dbg !4931
  %2 = icmp eq i32 %1, 0, !dbg !4932
  br i1 %2, label %4, label %3, !dbg !4934

3:                                                ; preds = %0
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @__FUNCTION__.powerkey_pmu_reisgter_callback, i32 0, i32 0), i32 noundef 300, i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.5.51, i32 0, i32 0)) #21, !dbg !4935
  br label %9, !dbg !4937

4:                                                ; preds = %0
  %5 = tail call i32 @pmu_register_callback(i32 noundef 11, i32 noundef 3, void (i8, i8*)* noundef bitcast (void (i8, %struct.powerkey_context_t*)* @powerkey_press_handler to void (i8, i8*)*), i8* noundef bitcast (%struct.powerkey_context_t* @powerkey_context to i8*)) #21, !dbg !4938
  call void @llvm.dbg.value(metadata i32 %5, metadata !4927, metadata !DIExpression()), !dbg !4931
  %6 = icmp eq i32 %5, 0, !dbg !4939
  br i1 %6, label %8, label %7, !dbg !4941

7:                                                ; preds = %4
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @__FUNCTION__.powerkey_pmu_reisgter_callback, i32 0, i32 0), i32 noundef 308, i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.6.52, i32 0, i32 0)) #21, !dbg !4942
  br label %9, !dbg !4944

8:                                                ; preds = %4
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @__FUNCTION__.powerkey_pmu_reisgter_callback, i32 0, i32 0), i32 noundef 311, i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.7, i32 0, i32 0)) #21, !dbg !4945
  br label %9, !dbg !4946

9:                                                ; preds = %8, %7, %3
  %10 = phi i1 [ false, %3 ], [ false, %7 ], [ true, %8 ], !dbg !4931
  ret i1 %10, !dbg !4947
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @powerkey_pmu_init() local_unnamed_addr #0 !dbg !4948 {
  %1 = tail call zeroext i8 @hal_sleep_manager_set_sleep_handle(i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.22, i32 0, i32 0)) #21, !dbg !4951
  store i8 %1, i8* @powerkey_lock_sleep_handle, align 1, !dbg !4951
  %2 = icmp eq i8 %1, -1, !dbg !4953
  br i1 %2, label %3, label %4, !dbg !4951

3:                                                ; preds = %0
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__FUNCTION__.powerkey_pmu_init, i32 0, i32 0), i32 noundef 321, i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.8, i32 0, i32 0)) #21, !dbg !4955
  br label %15, !dbg !4955

4:                                                ; preds = %0
  tail call void @pmu_init() #21, !dbg !4957
  %5 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 31, i16 noundef zeroext 3, i16 noundef zeroext 6, i16 noundef zeroext 3) #21, !dbg !4958
  %6 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 32, i16 noundef zeroext 3, i16 noundef zeroext 6, i16 noundef zeroext 3) #21, !dbg !4959
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__FUNCTION__.powerkey_pmu_init, i32 0, i32 0), i32 noundef 329, i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.9, i32 0, i32 0)) #21, !dbg !4960
  %7 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 75, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext 1) #21, !dbg !4961
  call void @llvm.dbg.value(metadata i1 %7, metadata !4950, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4962
  br i1 %7, label %9, label %8, !dbg !4963

8:                                                ; preds = %4
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__FUNCTION__.powerkey_pmu_init, i32 0, i32 0), i32 noundef 333, i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.10, i32 0, i32 0)) #21, !dbg !4964
  br label %15, !dbg !4967

9:                                                ; preds = %4
  %10 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 77, i16 noundef zeroext 1, i16 noundef zeroext 1, i16 noundef zeroext 0) #21, !dbg !4968
  call void @llvm.dbg.value(metadata i1 %10, metadata !4950, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4962
  br i1 %10, label %12, label %11, !dbg !4969

11:                                               ; preds = %9
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__FUNCTION__.powerkey_pmu_init, i32 0, i32 0), i32 noundef 340, i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.11, i32 0, i32 0)) #21, !dbg !4970
  br label %15, !dbg !4973

12:                                               ; preds = %9
  %13 = tail call zeroext i1 @powerkey_pmu_reisgter_callback() #20, !dbg !4974
  br i1 %13, label %15, label %14, !dbg !4976

14:                                               ; preds = %12
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__FUNCTION__.powerkey_pmu_init, i32 0, i32 0), i32 noundef 345, i8* noundef getelementptr inbounds ([46 x i8], [46 x i8]* @.str.12, i32 0, i32 0)) #21, !dbg !4977
  br label %15, !dbg !4979

15:                                               ; preds = %12, %14, %11, %8, %3
  %16 = phi i1 [ false, %3 ], [ false, %8 ], [ false, %11 ], [ false, %14 ], [ true, %12 ], !dbg !4962
  ret i1 %16, !dbg !4980
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @powerkey_get_pressed_state() local_unnamed_addr #0 !dbg !381 {
  %1 = tail call zeroext i8 @pmu_get_register_value(i16 noundef zeroext 52, i16 noundef zeroext 1, i16 noundef zeroext 4) #21, !dbg !4981
  call void @llvm.dbg.value(metadata i8 %1, metadata !385, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4982
  %2 = load i8, i8* @powerkey_get_pressed_state.last_state, align 1, !dbg !4983
  %3 = icmp eq i8 %2, %1, !dbg !4985
  br i1 %3, label %6, label %4, !dbg !4986

4:                                                ; preds = %0
  %5 = zext i8 %1 to i32, !dbg !4981
  call void @llvm.dbg.value(metadata i32 %5, metadata !385, metadata !DIExpression()), !dbg !4982
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__FUNCTION__.powerkey_get_pressed_state, i32 0, i32 0), i32 noundef 361, i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13, i32 0, i32 0), i32 noundef %5) #21, !dbg !4987
  br label %6, !dbg !4989

6:                                                ; preds = %4, %0
  store i8 %1, i8* @powerkey_get_pressed_state.last_state, align 1, !dbg !4990
  %7 = icmp eq i8 %1, 0, !dbg !4991
  ret i1 %7, !dbg !4993
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local i32 @is_pin_with_pullsel(i32 noundef %0) local_unnamed_addr #14 !dbg !4994 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4999, metadata !DIExpression()), !dbg !5002
  call void @llvm.dbg.declare(metadata [5 x i32]* @__const.is_pin_with_pullsel.pin_number_with_pullsel, metadata !5001, metadata !DIExpression()), !dbg !5003
  call void @llvm.dbg.value(metadata i32 0, metadata !5000, metadata !DIExpression()), !dbg !5002
  br label %5, !dbg !5004

2:                                                ; preds = %5
  %3 = add nuw nsw i32 %6, 1, !dbg !5006
  call void @llvm.dbg.value(metadata i32 %3, metadata !5000, metadata !DIExpression()), !dbg !5002
  call void @llvm.dbg.value(metadata i32 %6, metadata !5000, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5002
  %4 = icmp eq i32 %3, 5, !dbg !5008
  br i1 %4, label %10, label %5, !dbg !5004, !llvm.loop !5009

5:                                                ; preds = %1, %2
  %6 = phi i32 [ 0, %1 ], [ %3, %2 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !5000, metadata !DIExpression()), !dbg !5002
  %7 = getelementptr inbounds [5 x i32], [5 x i32]* @__const.is_pin_with_pullsel.pin_number_with_pullsel, i32 0, i32 %6, !dbg !5011
  %8 = load i32, i32* %7, align 4, !dbg !5011
  %9 = icmp eq i32 %8, %0, !dbg !5014
  call void @llvm.dbg.value(metadata i32 %6, metadata !5000, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5002
  br i1 %9, label %10, label %2, !dbg !5015

10:                                               ; preds = %2, %5
  %11 = phi i32 [ 1, %5 ], [ 0, %2 ], !dbg !5002
  ret i32 %11, !dbg !5016
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @hal_gpio_init(i32 noundef %0) local_unnamed_addr #8 !dbg !5017 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5022, metadata !DIExpression()), !dbg !5023
  ret i32 0, !dbg !5024
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @hal_gpio_deinit(i32 noundef %0) local_unnamed_addr #8 !dbg !5025 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5027, metadata !DIExpression()), !dbg !5028
  ret i32 0, !dbg !5029
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_direction(i32 noundef %0, i32 noundef %1) local_unnamed_addr #10 !dbg !5030 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5034, metadata !DIExpression()), !dbg !5038
  call void @llvm.dbg.value(metadata i32 %1, metadata !5035, metadata !DIExpression()), !dbg !5038
  %3 = icmp ugt i32 %0, 48, !dbg !5039
  br i1 %3, label %13, label %4, !dbg !5041

4:                                                ; preds = %2
  %5 = lshr i32 %0, 5, !dbg !5042
  call void @llvm.dbg.value(metadata i32 %5, metadata !5036, metadata !DIExpression()), !dbg !5038
  %6 = and i32 %0, 31, !dbg !5043
  call void @llvm.dbg.value(metadata i32 %6, metadata !5037, metadata !DIExpression()), !dbg !5038
  %7 = icmp eq i32 %1, 0, !dbg !5044
  %8 = shl nuw i32 1, %6, !dbg !5046
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5046
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 0, i32 %5, i32 2, !dbg !5047
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 0, i32 %5, i32 1, !dbg !5047
  %12 = select i1 %7, i32* %10, i32* %11, !dbg !5047
  store volatile i32 %8, i32* %12, align 4, !dbg !5046
  br label %13, !dbg !5048

13:                                               ; preds = %4, %2
  %14 = phi i32 [ -2, %2 ], [ 0, %4 ], !dbg !5038
  ret i32 %14, !dbg !5048
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_gpio_get_direction(i32 noundef %0, i32* noundef writeonly %1) local_unnamed_addr #9 !dbg !5049 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5054, metadata !DIExpression()), !dbg !5059
  call void @llvm.dbg.value(metadata i32* %1, metadata !5055, metadata !DIExpression()), !dbg !5059
  %3 = icmp ugt i32 %0, 48, !dbg !5060
  br i1 %3, label %15, label %4, !dbg !5062

4:                                                ; preds = %2
  %5 = icmp eq i32* %1, null, !dbg !5063
  br i1 %5, label %15, label %6, !dbg !5065

6:                                                ; preds = %4
  %7 = lshr i32 %0, 5, !dbg !5066
  call void @llvm.dbg.value(metadata i32 %7, metadata !5056, metadata !DIExpression()), !dbg !5059
  %8 = and i32 %0, 31, !dbg !5067
  call void @llvm.dbg.value(metadata i32 %8, metadata !5057, metadata !DIExpression()), !dbg !5059
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5068
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 0, i32 %7, i32 0, !dbg !5069
  %11 = load volatile i32, i32* %10, align 4, !dbg !5069
  call void @llvm.dbg.value(metadata i32 %11, metadata !5058, metadata !DIExpression()), !dbg !5059
  %12 = shl nuw i32 1, %8, !dbg !5070
  %13 = and i32 %11, %12, !dbg !5071
  call void @llvm.dbg.value(metadata i32 %13, metadata !5058, metadata !DIExpression()), !dbg !5059
  %14 = lshr i32 %13, %8, !dbg !5072
  store i32 %14, i32* %1, align 4, !dbg !5073
  br label %15, !dbg !5074

15:                                               ; preds = %4, %2, %6
  %16 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !5059
  ret i32 %16, !dbg !5075
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_pinmux_set_function(i32 noundef %0, i8 noundef zeroext %1) local_unnamed_addr #0 !dbg !5076 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5081, metadata !DIExpression()), !dbg !5086
  call void @llvm.dbg.value(metadata i8 %1, metadata !5082, metadata !DIExpression()), !dbg !5086
  %3 = icmp ugt i32 %0, 48, !dbg !5087
  br i1 %3, label %18, label %4, !dbg !5089

4:                                                ; preds = %2
  %5 = icmp ugt i8 %1, 15, !dbg !5090
  br i1 %5, label %18, label %6, !dbg !5092

6:                                                ; preds = %4
  %7 = zext i8 %1 to i32, !dbg !5093
  %8 = lshr i32 %0, 3, !dbg !5094
  call void @llvm.dbg.value(metadata i32 %8, metadata !5083, metadata !DIExpression()), !dbg !5086
  call void @llvm.dbg.value(metadata i32 %0, metadata !5084, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_stack_value)), !dbg !5086
  %9 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !5095
  call void @llvm.dbg.value(metadata i32 %9, metadata !5085, metadata !DIExpression()), !dbg !5086
  %10 = shl nuw nsw i32 %0, 2, !dbg !5096
  %11 = and i32 %10, 28, !dbg !5096
  %12 = shl nuw i32 15, %11, !dbg !5097
  %13 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5098
  %14 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %13, i32 0, i32 25, i32 %8, i32 2, !dbg !5099
  store volatile i32 %12, i32* %14, align 4, !dbg !5100
  %15 = shl nuw i32 %7, %11, !dbg !5101
  %16 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5102
  %17 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %16, i32 0, i32 25, i32 %8, i32 1, !dbg !5103
  store volatile i32 %15, i32* %17, align 4, !dbg !5104
  tail call void @restore_interrupt_mask(i32 noundef %9) #21, !dbg !5105
  br label %18, !dbg !5106

18:                                               ; preds = %4, %2, %6
  %19 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !5086
  ret i32 %19, !dbg !5107
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_gpio_get_input(i32 noundef %0, i32* noundef writeonly %1) local_unnamed_addr #9 !dbg !5108 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5113, metadata !DIExpression()), !dbg !5118
  call void @llvm.dbg.value(metadata i32* %1, metadata !5114, metadata !DIExpression()), !dbg !5118
  %3 = icmp ugt i32 %0, 48, !dbg !5119
  br i1 %3, label %15, label %4, !dbg !5121

4:                                                ; preds = %2
  %5 = icmp eq i32* %1, null, !dbg !5122
  br i1 %5, label %15, label %6, !dbg !5124

6:                                                ; preds = %4
  %7 = lshr i32 %0, 5, !dbg !5125
  call void @llvm.dbg.value(metadata i32 %7, metadata !5115, metadata !DIExpression()), !dbg !5118
  %8 = and i32 %0, 31, !dbg !5126
  call void @llvm.dbg.value(metadata i32 %8, metadata !5116, metadata !DIExpression()), !dbg !5118
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5127
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 8, i32 %7, i32 0, !dbg !5128
  %11 = load volatile i32, i32* %10, align 4, !dbg !5128
  call void @llvm.dbg.value(metadata i32 %11, metadata !5117, metadata !DIExpression()), !dbg !5118
  %12 = shl nuw i32 1, %8, !dbg !5129
  %13 = and i32 %11, %12, !dbg !5130
  call void @llvm.dbg.value(metadata i32 %13, metadata !5117, metadata !DIExpression()), !dbg !5118
  %14 = lshr i32 %13, %8, !dbg !5131
  store i32 %14, i32* %1, align 4, !dbg !5132
  br label %15, !dbg !5133

15:                                               ; preds = %4, %2, %6
  %16 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !5118
  ret i32 %16, !dbg !5134
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_output(i32 noundef %0, i32 noundef %1) local_unnamed_addr #10 !dbg !5135 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5139, metadata !DIExpression()), !dbg !5143
  call void @llvm.dbg.value(metadata i32 %1, metadata !5140, metadata !DIExpression()), !dbg !5143
  %3 = icmp ugt i32 %0, 48, !dbg !5144
  br i1 %3, label %13, label %4, !dbg !5146

4:                                                ; preds = %2
  %5 = lshr i32 %0, 5, !dbg !5147
  call void @llvm.dbg.value(metadata i32 %5, metadata !5141, metadata !DIExpression()), !dbg !5143
  %6 = and i32 %0, 31, !dbg !5148
  call void @llvm.dbg.value(metadata i32 %6, metadata !5142, metadata !DIExpression()), !dbg !5143
  %7 = icmp eq i32 %1, 0, !dbg !5149
  %8 = shl nuw i32 1, %6, !dbg !5151
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5151
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 6, i32 %5, i32 1, !dbg !5152
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 6, i32 %5, i32 2, !dbg !5152
  %12 = select i1 %7, i32* %11, i32* %10, !dbg !5152
  store volatile i32 %8, i32* %12, align 4, !dbg !5151
  br label %13, !dbg !5153

13:                                               ; preds = %4, %2
  %14 = phi i32 [ -2, %2 ], [ 0, %4 ], !dbg !5143
  ret i32 %14, !dbg !5153
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_gpio_get_output(i32 noundef %0, i32* noundef writeonly %1) local_unnamed_addr #9 !dbg !5154 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5156, metadata !DIExpression()), !dbg !5161
  call void @llvm.dbg.value(metadata i32* %1, metadata !5157, metadata !DIExpression()), !dbg !5161
  %3 = icmp ugt i32 %0, 48, !dbg !5162
  br i1 %3, label %15, label %4, !dbg !5164

4:                                                ; preds = %2
  %5 = icmp eq i32* %1, null, !dbg !5165
  br i1 %5, label %15, label %6, !dbg !5167

6:                                                ; preds = %4
  %7 = lshr i32 %0, 5, !dbg !5168
  call void @llvm.dbg.value(metadata i32 %7, metadata !5158, metadata !DIExpression()), !dbg !5161
  %8 = and i32 %0, 31, !dbg !5169
  call void @llvm.dbg.value(metadata i32 %8, metadata !5159, metadata !DIExpression()), !dbg !5161
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5170
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 6, i32 %7, i32 0, !dbg !5171
  %11 = load volatile i32, i32* %10, align 4, !dbg !5171
  call void @llvm.dbg.value(metadata i32 %11, metadata !5160, metadata !DIExpression()), !dbg !5161
  %12 = shl nuw i32 1, %8, !dbg !5172
  %13 = and i32 %11, %12, !dbg !5173
  call void @llvm.dbg.value(metadata i32 %13, metadata !5160, metadata !DIExpression()), !dbg !5161
  %14 = lshr i32 %13, %8, !dbg !5174
  store i32 %14, i32* %1, align 4, !dbg !5175
  br label %15, !dbg !5176

15:                                               ; preds = %4, %2, %6
  %16 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !5161
  ret i32 %16, !dbg !5177
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_toggle_pin(i32 noundef %0) local_unnamed_addr #10 !dbg !5178 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5180, metadata !DIExpression()), !dbg !5184
  %2 = icmp ugt i32 %0, 48, !dbg !5185
  br i1 %2, label %16, label %3, !dbg !5187

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !5188
  call void @llvm.dbg.value(metadata i32 %4, metadata !5181, metadata !DIExpression()), !dbg !5184
  %5 = and i32 %0, 31, !dbg !5189
  call void @llvm.dbg.value(metadata i32 %5, metadata !5182, metadata !DIExpression()), !dbg !5184
  %6 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5190
  %7 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %6, i32 0, i32 6, i32 %4, i32 0, !dbg !5191
  %8 = load volatile i32, i32* %7, align 4, !dbg !5191
  call void @llvm.dbg.value(metadata i32 %8, metadata !5183, metadata !DIExpression()), !dbg !5184
  %9 = shl nuw i32 1, %5, !dbg !5192
  %10 = and i32 %8, %9, !dbg !5193
  call void @llvm.dbg.value(metadata i32 %10, metadata !5183, metadata !DIExpression()), !dbg !5184
  %11 = lshr i32 %10, %5, !dbg !5194
  %12 = icmp eq i32 %11, 0, !dbg !5194
  %13 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %6, i32 0, i32 6, i32 %4, i32 2, !dbg !5196
  %14 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %6, i32 0, i32 6, i32 %4, i32 1, !dbg !5196
  %15 = select i1 %12, i32* %14, i32* %13, !dbg !5196
  store volatile i32 %9, i32* %15, align 4, !dbg !5197
  br label %16, !dbg !5198

16:                                               ; preds = %3, %1
  %17 = phi i32 [ -2, %1 ], [ 0, %3 ], !dbg !5184
  ret i32 %17, !dbg !5198
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_enable_inversion(i32 noundef %0) local_unnamed_addr #10 !dbg !5199 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5201, metadata !DIExpression()), !dbg !5204
  %2 = icmp ugt i32 %0, 48, !dbg !5205
  br i1 %2, label %9, label %3, !dbg !5207

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !5208
  call void @llvm.dbg.value(metadata i32 %4, metadata !5202, metadata !DIExpression()), !dbg !5204
  %5 = and i32 %0, 31, !dbg !5209
  call void @llvm.dbg.value(metadata i32 %5, metadata !5203, metadata !DIExpression()), !dbg !5204
  %6 = shl nuw i32 1, %5, !dbg !5210
  %7 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5211
  %8 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %7, i32 0, i32 4, i32 %4, i32 1, !dbg !5212
  store volatile i32 %6, i32* %8, align 4, !dbg !5213
  br label %9, !dbg !5214

9:                                                ; preds = %1, %3
  %10 = phi i32 [ 0, %3 ], [ -2, %1 ], !dbg !5204
  ret i32 %10, !dbg !5215
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_disable_inversion(i32 noundef %0) local_unnamed_addr #10 !dbg !5216 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5218, metadata !DIExpression()), !dbg !5221
  %2 = icmp ugt i32 %0, 48, !dbg !5222
  br i1 %2, label %9, label %3, !dbg !5224

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !5225
  call void @llvm.dbg.value(metadata i32 %4, metadata !5219, metadata !DIExpression()), !dbg !5221
  %5 = and i32 %0, 31, !dbg !5226
  call void @llvm.dbg.value(metadata i32 %5, metadata !5220, metadata !DIExpression()), !dbg !5221
  %6 = shl nuw i32 1, %5, !dbg !5227
  %7 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5228
  %8 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %7, i32 0, i32 4, i32 %4, i32 2, !dbg !5229
  store volatile i32 %6, i32* %8, align 4, !dbg !5230
  br label %9, !dbg !5231

9:                                                ; preds = %1, %3
  %10 = phi i32 [ 0, %3 ], [ -2, %1 ], !dbg !5221
  ret i32 %10, !dbg !5232
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_pull_up(i32 noundef %0) local_unnamed_addr #10 !dbg !5233 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5235, metadata !DIExpression()), !dbg !5238
  %2 = icmp ugt i32 %0, 48, !dbg !5239
  br i1 %2, label %14, label %3, !dbg !5241

3:                                                ; preds = %1
  %4 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #20, !dbg !5242
  %5 = icmp eq i32 %4, 0, !dbg !5242
  br i1 %5, label %14, label %6, !dbg !5243

6:                                                ; preds = %3
  %7 = lshr i32 %0, 5, !dbg !5244
  call void @llvm.dbg.value(metadata i32 %7, metadata !5236, metadata !DIExpression()), !dbg !5238
  %8 = and i32 %0, 31, !dbg !5245
  call void @llvm.dbg.value(metadata i32 %8, metadata !5237, metadata !DIExpression()), !dbg !5238
  %9 = shl nuw i32 1, %8, !dbg !5246
  %10 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5247
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %10, i32 0, i32 2, i32 %7, i32 1, !dbg !5248
  store volatile i32 %9, i32* %11, align 4, !dbg !5249
  %12 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5250
  %13 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %12, i32 0, i32 10, i32 %7, i32 1, !dbg !5251
  store volatile i32 %9, i32* %13, align 4, !dbg !5252
  br label %14, !dbg !5253

14:                                               ; preds = %1, %3, %6
  %15 = phi i32 [ 0, %6 ], [ -2, %3 ], [ -2, %1 ], !dbg !5238
  ret i32 %15, !dbg !5254
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_pull_down(i32 noundef %0) local_unnamed_addr #10 !dbg !5255 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5257, metadata !DIExpression()), !dbg !5260
  %2 = icmp ugt i32 %0, 48, !dbg !5261
  br i1 %2, label %14, label %3, !dbg !5263

3:                                                ; preds = %1
  %4 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #20, !dbg !5264
  %5 = icmp eq i32 %4, 0, !dbg !5264
  br i1 %5, label %14, label %6, !dbg !5265

6:                                                ; preds = %3
  %7 = lshr i32 %0, 5, !dbg !5266
  call void @llvm.dbg.value(metadata i32 %7, metadata !5258, metadata !DIExpression()), !dbg !5260
  %8 = and i32 %0, 31, !dbg !5267
  call void @llvm.dbg.value(metadata i32 %8, metadata !5259, metadata !DIExpression()), !dbg !5260
  %9 = shl nuw i32 1, %8, !dbg !5268
  %10 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5269
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %10, i32 0, i32 2, i32 %7, i32 1, !dbg !5270
  store volatile i32 %9, i32* %11, align 4, !dbg !5271
  %12 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5272
  %13 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %12, i32 0, i32 10, i32 %7, i32 2, !dbg !5273
  store volatile i32 %9, i32* %13, align 4, !dbg !5274
  br label %14, !dbg !5275

14:                                               ; preds = %1, %3, %6
  %15 = phi i32 [ 0, %6 ], [ -2, %3 ], [ -2, %1 ], !dbg !5260
  ret i32 %15, !dbg !5276
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_disable_pull(i32 noundef %0) local_unnamed_addr #10 !dbg !5277 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5279, metadata !DIExpression()), !dbg !5282
  %2 = icmp ugt i32 %0, 48, !dbg !5283
  br i1 %2, label %12, label %3, !dbg !5285

3:                                                ; preds = %1
  %4 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #20, !dbg !5286
  %5 = icmp eq i32 %4, 0, !dbg !5286
  br i1 %5, label %12, label %6, !dbg !5287

6:                                                ; preds = %3
  %7 = lshr i32 %0, 5, !dbg !5288
  call void @llvm.dbg.value(metadata i32 %7, metadata !5280, metadata !DIExpression()), !dbg !5282
  %8 = and i32 %0, 31, !dbg !5289
  call void @llvm.dbg.value(metadata i32 %8, metadata !5281, metadata !DIExpression()), !dbg !5282
  %9 = shl nuw i32 1, %8, !dbg !5290
  %10 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5291
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %10, i32 0, i32 2, i32 %7, i32 2, !dbg !5292
  store volatile i32 %9, i32* %11, align 4, !dbg !5293
  br label %12, !dbg !5294

12:                                               ; preds = %1, %3, %6
  %13 = phi i32 [ 0, %6 ], [ -2, %3 ], [ -2, %1 ], !dbg !5282
  ret i32 %13, !dbg !5295
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_clockout(i32 noundef %0, i32 noundef %1) local_unnamed_addr #10 !dbg !5296 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5302, metadata !DIExpression()), !dbg !5304
  call void @llvm.dbg.value(metadata i32 %1, metadata !5303, metadata !DIExpression()), !dbg !5304
  %3 = icmp ugt i32 %0, 5, !dbg !5305
  br i1 %3, label %7, label %4, !dbg !5307

4:                                                ; preds = %2
  %5 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5308
  %6 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %5, i32 0, i32 29, i32 %0, i32 0, !dbg !5309
  store volatile i32 %1, i32* %6, align 4, !dbg !5310
  br label %7, !dbg !5311

7:                                                ; preds = %2, %4
  %8 = phi i32 [ 0, %4 ], [ -1, %2 ], !dbg !5304
  ret i32 %8, !dbg !5312
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_pupd_register(i32 noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) local_unnamed_addr #10 !dbg !5313 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5317, metadata !DIExpression()), !dbg !5323
  call void @llvm.dbg.value(metadata i8 %1, metadata !5318, metadata !DIExpression()), !dbg !5323
  call void @llvm.dbg.value(metadata i8 %2, metadata !5319, metadata !DIExpression()), !dbg !5323
  call void @llvm.dbg.value(metadata i8 %3, metadata !5320, metadata !DIExpression()), !dbg !5323
  %5 = icmp ugt i32 %0, 48, !dbg !5324
  br i1 %5, label %30, label %6, !dbg !5326

6:                                                ; preds = %4
  %7 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #20, !dbg !5327
  %8 = icmp eq i32 %7, 0, !dbg !5327
  br i1 %8, label %9, label %30, !dbg !5328

9:                                                ; preds = %6
  %10 = lshr i32 %0, 5, !dbg !5329
  call void @llvm.dbg.value(metadata i32 %10, metadata !5321, metadata !DIExpression()), !dbg !5323
  %11 = and i32 %0, 31, !dbg !5330
  call void @llvm.dbg.value(metadata i32 %11, metadata !5322, metadata !DIExpression()), !dbg !5323
  %12 = icmp eq i8 %1, 0, !dbg !5331
  %13 = shl nuw i32 1, %11, !dbg !5333
  %14 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5333
  %15 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %14, i32 0, i32 20, i32 %10, i32 2, !dbg !5334
  %16 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %14, i32 0, i32 20, i32 %10, i32 1, !dbg !5334
  %17 = select i1 %12, i32* %15, i32* %16, !dbg !5334
  store volatile i32 %13, i32* %17, align 4, !dbg !5333
  %18 = icmp eq i8 %2, 0, !dbg !5335
  %19 = shl nuw i32 1, %11, !dbg !5337
  %20 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5337
  %21 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %20, i32 0, i32 22, i32 %10, i32 2, !dbg !5338
  %22 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %20, i32 0, i32 22, i32 %10, i32 1, !dbg !5338
  %23 = select i1 %18, i32* %21, i32* %22, !dbg !5338
  store volatile i32 %19, i32* %23, align 4, !dbg !5337
  %24 = icmp eq i8 %3, 0, !dbg !5339
  %25 = shl nuw i32 1, %11, !dbg !5341
  %26 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5341
  %27 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %26, i32 0, i32 23, i32 %10, i32 1, !dbg !5342
  %28 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %26, i32 0, i32 23, i32 %10, i32 2, !dbg !5342
  %29 = select i1 %24, i32* %28, i32* %27, !dbg !5342
  store volatile i32 %25, i32* %29, align 4, !dbg !5341
  br label %30, !dbg !5343

30:                                               ; preds = %9, %4, %6
  %31 = phi i32 [ -2, %6 ], [ -2, %4 ], [ 0, %9 ], !dbg !5323
  ret i32 %31, !dbg !5343
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_high_impedance(i32 noundef %0) local_unnamed_addr #10 !dbg !5344 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5346, metadata !DIExpression()), !dbg !5353
  %2 = icmp ugt i32 %0, 48, !dbg !5354
  br i1 %2, label %40, label %3, !dbg !5356

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !5357
  call void @llvm.dbg.value(metadata i32 %4, metadata !5347, metadata !DIExpression()), !dbg !5353
  %5 = and i32 %0, 31, !dbg !5358
  call void @llvm.dbg.value(metadata i32 %5, metadata !5350, metadata !DIExpression()), !dbg !5353
  %6 = lshr i32 %0, 4, !dbg !5359
  call void @llvm.dbg.value(metadata i32 %6, metadata !5348, metadata !DIExpression()), !dbg !5353
  call void @llvm.dbg.value(metadata i32 %0, metadata !5351, metadata !DIExpression(DW_OP_constu, 15, DW_OP_and, DW_OP_stack_value)), !dbg !5353
  %7 = lshr i32 %0, 3, !dbg !5360
  call void @llvm.dbg.value(metadata i32 %7, metadata !5349, metadata !DIExpression()), !dbg !5353
  call void @llvm.dbg.value(metadata i32 %0, metadata !5352, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_stack_value)), !dbg !5353
  %8 = shl nuw nsw i32 %0, 2, !dbg !5361
  %9 = and i32 %8, 28, !dbg !5361
  %10 = shl nuw i32 15, %9, !dbg !5362
  %11 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5363
  %12 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %11, i32 0, i32 25, i32 %7, i32 2, !dbg !5364
  store volatile i32 %10, i32* %12, align 4, !dbg !5365
  %13 = shl nuw i32 1, %5, !dbg !5366
  %14 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5367
  %15 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %14, i32 0, i32 0, i32 %4, i32 2, !dbg !5368
  store volatile i32 %13, i32* %15, align 4, !dbg !5369
  %16 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5370
  %17 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %16, i32 0, i32 18, i32 %4, i32 2, !dbg !5371
  store volatile i32 %13, i32* %17, align 4, !dbg !5372
  %18 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #20, !dbg !5373
  %19 = icmp eq i32 %18, 0, !dbg !5373
  %20 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5375
  br i1 %19, label %23, label %21, !dbg !5376

21:                                               ; preds = %3
  %22 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %20, i32 0, i32 2, i32 %4, i32 2, !dbg !5377
  br label %29, !dbg !5379

23:                                               ; preds = %3
  %24 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %20, i32 0, i32 20, i32 %4, i32 2, !dbg !5380
  store volatile i32 %13, i32* %24, align 4, !dbg !5382
  %25 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5383
  %26 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %25, i32 0, i32 22, i32 %4, i32 2, !dbg !5384
  store volatile i32 %13, i32* %26, align 4, !dbg !5385
  %27 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5386
  %28 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %27, i32 0, i32 23, i32 %4, i32 2, !dbg !5387
  br label %29

29:                                               ; preds = %23, %21
  %30 = phi i32* [ %28, %23 ], [ %22, %21 ]
  store volatile i32 %13, i32* %30, align 4, !dbg !5375
  %31 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5388
  %32 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %31, i32 0, i32 12, i32 %4, i32 2, !dbg !5389
  store volatile i32 %13, i32* %32, align 4, !dbg !5390
  %33 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5391
  %34 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %33, i32 0, i32 14, i32 %4, i32 2, !dbg !5392
  store volatile i32 %13, i32* %34, align 4, !dbg !5393
  %35 = shl nuw nsw i32 %0, 1, !dbg !5394
  %36 = and i32 %35, 30, !dbg !5394
  %37 = shl nuw i32 3, %36, !dbg !5395
  %38 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5396
  %39 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %38, i32 0, i32 27, i32 %6, i32 2, !dbg !5397
  store volatile i32 %37, i32* %39, align 4, !dbg !5398
  br label %40, !dbg !5399

40:                                               ; preds = %1, %29
  %41 = phi i32 [ 0, %29 ], [ -2, %1 ], !dbg !5353
  ret i32 %41, !dbg !5400
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_clear_high_impedance(i32 noundef %0) local_unnamed_addr #10 !dbg !5401 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5403, metadata !DIExpression()), !dbg !5408
  %2 = icmp ugt i32 %0, 48, !dbg !5409
  br i1 %2, label %34, label %3, !dbg !5411

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !5412
  call void @llvm.dbg.value(metadata i32 %4, metadata !5404, metadata !DIExpression()), !dbg !5408
  %5 = and i32 %0, 31, !dbg !5413
  call void @llvm.dbg.value(metadata i32 %5, metadata !5406, metadata !DIExpression()), !dbg !5408
  %6 = lshr i32 %0, 3, !dbg !5414
  call void @llvm.dbg.value(metadata i32 %6, metadata !5405, metadata !DIExpression()), !dbg !5408
  call void @llvm.dbg.value(metadata i32 %0, metadata !5407, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_stack_value)), !dbg !5408
  %7 = shl nuw nsw i32 %0, 2, !dbg !5415
  %8 = and i32 %7, 28, !dbg !5415
  %9 = shl nuw i32 15, %8, !dbg !5416
  %10 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5417
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %10, i32 0, i32 25, i32 %6, i32 2, !dbg !5418
  store volatile i32 %9, i32* %11, align 4, !dbg !5419
  %12 = shl nuw i32 1, %5, !dbg !5420
  %13 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5421
  %14 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %13, i32 0, i32 0, i32 %4, i32 2, !dbg !5422
  store volatile i32 %12, i32* %14, align 4, !dbg !5423
  %15 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #20, !dbg !5424
  %16 = icmp eq i32 %15, 0, !dbg !5424
  %17 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5426
  br i1 %16, label %22, label %18, !dbg !5427

18:                                               ; preds = %3
  %19 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %17, i32 0, i32 2, i32 %4, i32 1, !dbg !5428
  store volatile i32 %12, i32* %19, align 4, !dbg !5430
  %20 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5431
  %21 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %20, i32 0, i32 10, i32 %4, i32 2, !dbg !5432
  br label %28, !dbg !5433

22:                                               ; preds = %3
  %23 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %17, i32 0, i32 20, i32 %4, i32 1, !dbg !5434
  store volatile i32 %12, i32* %23, align 4, !dbg !5436
  %24 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5437
  %25 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %24, i32 0, i32 22, i32 %4, i32 1, !dbg !5438
  store volatile i32 %12, i32* %25, align 4, !dbg !5439
  %26 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5440
  %27 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %26, i32 0, i32 23, i32 %4, i32 1, !dbg !5441
  br label %28

28:                                               ; preds = %22, %18
  %29 = phi i32* [ %27, %22 ], [ %21, %18 ]
  store volatile i32 %12, i32* %29, align 4, !dbg !5426
  %30 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5442
  %31 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %30, i32 0, i32 18, i32 %4, i32 1, !dbg !5443
  store volatile i32 %12, i32* %31, align 4, !dbg !5444
  %32 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5445
  %33 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %32, i32 0, i32 14, i32 %4, i32 1, !dbg !5446
  store volatile i32 %12, i32* %33, align 4, !dbg !5447
  br label %34, !dbg !5448

34:                                               ; preds = %1, %28
  %35 = phi i32 [ 0, %28 ], [ -2, %1 ], !dbg !5408
  ret i32 %35, !dbg !5449
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_driving_current(i32 noundef %0, i32 noundef %1) local_unnamed_addr #10 !dbg !5450 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5454, metadata !DIExpression()), !dbg !5458
  call void @llvm.dbg.value(metadata i32 %1, metadata !5455, metadata !DIExpression()), !dbg !5458
  %3 = icmp ugt i32 %0, 48, !dbg !5459
  br i1 %3, label %14, label %4, !dbg !5461

4:                                                ; preds = %2
  %5 = lshr i32 %0, 4, !dbg !5462
  call void @llvm.dbg.value(metadata i32 %5, metadata !5456, metadata !DIExpression()), !dbg !5458
  call void @llvm.dbg.value(metadata i32 %0, metadata !5457, metadata !DIExpression(DW_OP_constu, 15, DW_OP_and, DW_OP_stack_value)), !dbg !5458
  %6 = shl nuw nsw i32 %0, 1, !dbg !5463
  %7 = and i32 %6, 30, !dbg !5463
  %8 = shl nuw i32 3, %7, !dbg !5464
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5465
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 16, i32 %5, i32 2, !dbg !5466
  store volatile i32 %8, i32* %10, align 4, !dbg !5467
  %11 = shl i32 %1, %7, !dbg !5468
  %12 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5469
  %13 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %12, i32 0, i32 16, i32 %5, i32 1, !dbg !5470
  store volatile i32 %11, i32* %13, align 4, !dbg !5471
  br label %14, !dbg !5472

14:                                               ; preds = %2, %4
  %15 = phi i32 [ 0, %4 ], [ -2, %2 ], !dbg !5458
  ret i32 %15, !dbg !5473
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_gpio_get_driving_current(i32 noundef %0, i32* noundef writeonly %1) local_unnamed_addr #9 !dbg !5474 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5479, metadata !DIExpression()), !dbg !5484
  call void @llvm.dbg.value(metadata i32* %1, metadata !5480, metadata !DIExpression()), !dbg !5484
  %3 = icmp ugt i32 %0, 48, !dbg !5485
  br i1 %3, label %18, label %4, !dbg !5487

4:                                                ; preds = %2
  %5 = icmp eq i32* %1, null, !dbg !5488
  br i1 %5, label %18, label %6, !dbg !5490

6:                                                ; preds = %4
  %7 = lshr i32 %0, 4, !dbg !5491
  call void @llvm.dbg.value(metadata i32 %7, metadata !5481, metadata !DIExpression()), !dbg !5484
  call void @llvm.dbg.value(metadata i32 %0, metadata !5482, metadata !DIExpression(DW_OP_constu, 15, DW_OP_and, DW_OP_stack_value)), !dbg !5484
  %8 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5492
  %9 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %8, i32 0, i32 16, i32 %7, i32 0, !dbg !5493
  %10 = load volatile i32, i32* %9, align 4, !dbg !5493
  call void @llvm.dbg.value(metadata i32 %10, metadata !5483, metadata !DIExpression()), !dbg !5484
  %11 = shl nuw nsw i32 %0, 1, !dbg !5494
  %12 = and i32 %11, 30, !dbg !5494
  %13 = shl nuw i32 3, %12, !dbg !5495
  %14 = and i32 %10, %13, !dbg !5496
  call void @llvm.dbg.value(metadata i32 %14, metadata !5483, metadata !DIExpression()), !dbg !5484
  %15 = lshr i32 %14, %12, !dbg !5497
  call void @llvm.dbg.value(metadata i32 %15, metadata !5483, metadata !DIExpression()), !dbg !5484
  %16 = shl i32 %15, 2, !dbg !5498
  %17 = add i32 %16, 4, !dbg !5498
  store i32 %17, i32* %1, align 4, !dbg !5499
  br label %18, !dbg !5500

18:                                               ; preds = %4, %2, %6
  %19 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !5484
  ret i32 %19, !dbg !5501
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_receive_handler(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #0 !dbg !5502 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !5506, metadata !DIExpression()), !dbg !5571
  call void @llvm.dbg.value(metadata i1 %1, metadata !5507, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5571
  %4 = bitcast i32* %3 to i8*, !dbg !5572
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #22, !dbg !5572
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5573
  %6 = load volatile i32, i32* %5, align 4, !dbg !5573
  %7 = icmp eq i32 %6, 2, !dbg !5575
  br i1 %7, label %9, label %8, !dbg !5576

8:                                                ; preds = %2
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.55, i32 0, i32 0), i32 noundef 156, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.uart_receive_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.56, i32 0, i32 0)) #23, !dbg !5577
  unreachable, !dbg !5577

9:                                                ; preds = %2
  %10 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !5579
  %11 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %10, align 4, !dbg !5579
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %11, metadata !5513, metadata !DIExpression()), !dbg !5571
  %12 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #21, !dbg !5580
  call void @llvm.dbg.value(metadata i32 %12, metadata !5508, metadata !DIExpression()), !dbg !5571
  br i1 %1, label %13, label %14, !dbg !5581

13:                                               ; preds = %9
  tail call void @uart_clear_timeout_interrupt(%struct.UART_REGISTER_T* noundef %11) #21, !dbg !5582
  br label %14, !dbg !5585

14:                                               ; preds = %13, %9
  call void @llvm.dbg.value(metadata i32* %3, metadata !5510, metadata !DIExpression(DW_OP_deref)), !dbg !5571
  %15 = call i32 @vdma_get_available_receive_bytes(i32 noundef %12, i32* noundef nonnull %3) #21, !dbg !5586
  call void @llvm.dbg.value(metadata i32 %15, metadata !5569, metadata !DIExpression()), !dbg !5571
  %16 = icmp eq i32 %15, 0, !dbg !5587
  br i1 %16, label %18, label %17, !dbg !5589

17:                                               ; preds = %14
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.55, i32 0, i32 0), i32 noundef 169, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.uart_receive_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.56, i32 0, i32 0)) #23, !dbg !5590
  unreachable, !dbg !5590

18:                                               ; preds = %14
  %19 = load i32, i32* %3, align 4, !dbg !5592
  call void @llvm.dbg.value(metadata i32 %19, metadata !5510, metadata !DIExpression()), !dbg !5571
  %20 = icmp eq i32 %19, 0, !dbg !5594
  br i1 %20, label %43, label %21, !dbg !5595

21:                                               ; preds = %18
  %22 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 0, !dbg !5596
  %23 = load void (i32, i8*)*, void (i32, i8*)** %22, align 4, !dbg !5596
  call void @llvm.dbg.value(metadata void (i32, i8*)* %23, metadata !5511, metadata !DIExpression()), !dbg !5571
  call void @llvm.dbg.value(metadata i8* undef, metadata !5512, metadata !DIExpression()), !dbg !5571
  %24 = icmp eq void (i32, i8*)* %23, null, !dbg !5597
  br i1 %24, label %25, label %26, !dbg !5599

25:                                               ; preds = %21
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.55, i32 0, i32 0), i32 noundef 179, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.uart_receive_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.56, i32 0, i32 0)) #23, !dbg !5600
  unreachable, !dbg !5600

26:                                               ; preds = %21
  %27 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 1, !dbg !5602
  %28 = load i8*, i8** %27, align 4, !dbg !5602
  call void @llvm.dbg.value(metadata i8* %28, metadata !5512, metadata !DIExpression()), !dbg !5571
  %29 = call i32 @vdma_disable_interrupt(i32 noundef %12) #21, !dbg !5603
  call void %23(i32 noundef 1, i8* noundef %28) #21, !dbg !5604
  %30 = call i32 @vdma_enable_interrupt(i32 noundef %12) #21, !dbg !5605
  call void @llvm.dbg.value(metadata i32* %3, metadata !5510, metadata !DIExpression(DW_OP_deref)), !dbg !5571
  %31 = call i32 @vdma_get_available_receive_bytes(i32 noundef %12, i32* noundef nonnull %3) #21, !dbg !5606
  call void @llvm.dbg.value(metadata i32 %31, metadata !5569, metadata !DIExpression()), !dbg !5571
  %32 = icmp eq i32 %31, 0, !dbg !5607
  br i1 %32, label %34, label %33, !dbg !5609

33:                                               ; preds = %26
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.55, i32 0, i32 0), i32 noundef 189, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.uart_receive_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.56, i32 0, i32 0)) #23, !dbg !5610
  unreachable, !dbg !5610

34:                                               ; preds = %26
  %35 = load i32, i32* %3, align 4, !dbg !5612
  call void @llvm.dbg.value(metadata i32 %35, metadata !5510, metadata !DIExpression()), !dbg !5571
  %36 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 5, !dbg !5614
  %37 = load i32, i32* %36, align 4, !dbg !5614
  %38 = icmp ult i32 %35, %37, !dbg !5615
  br i1 %38, label %43, label %39, !dbg !5616

39:                                               ; preds = %34
  %40 = call i32 @vdma_disable_interrupt(i32 noundef %12) #21, !dbg !5617
  call void @llvm.dbg.value(metadata i32 %40, metadata !5569, metadata !DIExpression()), !dbg !5571
  %41 = icmp eq i32 %40, 0, !dbg !5619
  br i1 %41, label %43, label %42, !dbg !5621

42:                                               ; preds = %39
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.55, i32 0, i32 0), i32 noundef 195, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.uart_receive_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.56, i32 0, i32 0)) #23, !dbg !5622
  unreachable, !dbg !5622

43:                                               ; preds = %34, %39, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #22, !dbg !5624
  ret void, !dbg !5624
}

; Function Attrs: optsize
declare dso_local i32 @vdma_get_available_receive_bytes(i32 noundef, i32* noundef) local_unnamed_addr #3

; Function Attrs: optsize
declare dso_local i32 @vdma_disable_interrupt(i32 noundef) local_unnamed_addr #3

; Function Attrs: optsize
declare dso_local i32 @vdma_enable_interrupt(i32 noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_send_handler(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #0 !dbg !5625 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !5627, metadata !DIExpression()), !dbg !5636
  call void @llvm.dbg.value(metadata i1 %1, metadata !5628, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5636
  %4 = bitcast i32* %3 to i8*, !dbg !5637
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #22, !dbg !5637
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5638
  %6 = load volatile i32, i32* %5, align 4, !dbg !5638
  %7 = icmp eq i32 %6, 2, !dbg !5640
  br i1 %7, label %9, label %8, !dbg !5641

8:                                                ; preds = %2
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.55, i32 0, i32 0), i32 noundef 222, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.uart_send_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.56, i32 0, i32 0)) #23, !dbg !5642
  unreachable, !dbg !5642

9:                                                ; preds = %2
  %10 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #21, !dbg !5644
  call void @llvm.dbg.value(metadata i32 %10, metadata !5629, metadata !DIExpression()), !dbg !5636
  br i1 %1, label %11, label %39, !dbg !5645

11:                                               ; preds = %9
  %12 = getelementptr inbounds [4 x i8], [4 x i8]* @g_uart_frist_send_complete_interrupt, i32 0, i32 %0, !dbg !5646
  %13 = load i8, i8* %12, align 1, !dbg !5646, !range !3343
  %14 = icmp eq i8 %13, 0, !dbg !5650
  br i1 %14, label %15, label %38, !dbg !5651

15:                                               ; preds = %11
  %16 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !5652
  call void @llvm.dbg.value(metadata i32 %16, metadata !5635, metadata !DIExpression()), !dbg !5636
  call void @llvm.dbg.value(metadata i32* %3, metadata !5632, metadata !DIExpression(DW_OP_deref)), !dbg !5636
  %17 = call i32 @vdma_get_available_send_space(i32 noundef %10, i32* noundef nonnull %3) #21, !dbg !5654
  call void @llvm.dbg.value(metadata i32 %17, metadata !5630, metadata !DIExpression()), !dbg !5636
  %18 = icmp eq i32 %17, 0, !dbg !5655
  br i1 %18, label %20, label %19, !dbg !5657

19:                                               ; preds = %15
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.55, i32 0, i32 0), i32 noundef 234, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.uart_send_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.56, i32 0, i32 0)) #23, !dbg !5658
  unreachable, !dbg !5658

20:                                               ; preds = %15
  %21 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 1, !dbg !5660
  %22 = load i32, i32* %21, align 4, !dbg !5660
  %23 = load i32, i32* %3, align 4, !dbg !5662
  call void @llvm.dbg.value(metadata i32 %23, metadata !5632, metadata !DIExpression()), !dbg !5636
  %24 = icmp eq i32 %22, %23, !dbg !5663
  br i1 %24, label %25, label %37, !dbg !5664

25:                                               ; preds = %20
  %26 = getelementptr inbounds [4 x i8], [4 x i8]* @g_uart_send_lock_status, i32 0, i32 %0, !dbg !5665
  %27 = load i8, i8* %26, align 1, !dbg !5665, !range !3343
  %28 = icmp eq i8 %27, 0, !dbg !5665
  br i1 %28, label %37, label %29, !dbg !5668

29:                                               ; preds = %25
  %30 = getelementptr inbounds [4 x i8], [4 x i8]* @g_uart_sleep_handler, i32 0, i32 %0, !dbg !5669
  %31 = load i8, i8* %30, align 1, !dbg !5669
  %32 = call zeroext i1 @hal_sleep_manager_is_sleep_handle_alive(i8 noundef zeroext %31) #21, !dbg !5672
  br i1 %32, label %33, label %36, !dbg !5673

33:                                               ; preds = %29
  %34 = load i8, i8* %30, align 1, !dbg !5674
  %35 = call i32 @hal_sleep_manager_unlock_sleep(i8 noundef zeroext %34) #21, !dbg !5676
  br label %36, !dbg !5677

36:                                               ; preds = %33, %29
  store i8 0, i8* %26, align 1, !dbg !5678
  br label %37, !dbg !5679

37:                                               ; preds = %25, %36, %20
  call void @restore_interrupt_mask(i32 noundef %16) #21, !dbg !5680
  br label %64, !dbg !5681

38:                                               ; preds = %11
  store i8 0, i8* %12, align 1, !dbg !5682
  br label %64

39:                                               ; preds = %9
  %40 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 0, !dbg !5684
  %41 = load void (i32, i8*)*, void (i32, i8*)** %40, align 4, !dbg !5684
  call void @llvm.dbg.value(metadata void (i32, i8*)* %41, metadata !5633, metadata !DIExpression()), !dbg !5636
  call void @llvm.dbg.value(metadata i8* undef, metadata !5634, metadata !DIExpression()), !dbg !5636
  %42 = icmp eq void (i32, i8*)* %41, null, !dbg !5686
  br i1 %42, label %43, label %44, !dbg !5688

43:                                               ; preds = %39
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.55, i32 0, i32 0), i32 noundef 256, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.uart_send_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.56, i32 0, i32 0)) #23, !dbg !5689
  unreachable, !dbg !5689

44:                                               ; preds = %39
  %45 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 1, !dbg !5691
  %46 = load i8*, i8** %45, align 4, !dbg !5691
  call void @llvm.dbg.value(metadata i8* %46, metadata !5634, metadata !DIExpression()), !dbg !5636
  %47 = tail call i32 @vdma_disable_interrupt(i32 noundef %10) #21, !dbg !5692
  tail call void %41(i32 noundef 2, i8* noundef %46) #21, !dbg !5693
  %48 = tail call i32 @vdma_enable_interrupt(i32 noundef %10) #21, !dbg !5694
  call void @llvm.dbg.value(metadata i32* %3, metadata !5632, metadata !DIExpression(DW_OP_deref)), !dbg !5636
  %49 = call i32 @vdma_get_available_send_space(i32 noundef %10, i32* noundef nonnull %3) #21, !dbg !5695
  call void @llvm.dbg.value(metadata i32 %49, metadata !5630, metadata !DIExpression()), !dbg !5636
  %50 = icmp eq i32 %49, 0, !dbg !5696
  br i1 %50, label %52, label %51, !dbg !5698

51:                                               ; preds = %44
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.55, i32 0, i32 0), i32 noundef 266, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.uart_send_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.56, i32 0, i32 0)) #23, !dbg !5699
  unreachable, !dbg !5699

52:                                               ; preds = %44
  %53 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 1, !dbg !5701
  %54 = load i32, i32* %53, align 4, !dbg !5701
  %55 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 2, !dbg !5702
  %56 = load i32, i32* %55, align 4, !dbg !5702
  %57 = sub i32 %54, %56, !dbg !5703
  call void @llvm.dbg.value(metadata i32 %57, metadata !5631, metadata !DIExpression()), !dbg !5636
  %58 = load i32, i32* %3, align 4, !dbg !5704
  call void @llvm.dbg.value(metadata i32 %58, metadata !5632, metadata !DIExpression()), !dbg !5636
  %59 = icmp ult i32 %58, %57, !dbg !5706
  br i1 %59, label %64, label %60, !dbg !5707

60:                                               ; preds = %52
  %61 = call i32 @vdma_disable_interrupt(i32 noundef %10) #21, !dbg !5708
  call void @llvm.dbg.value(metadata i32 %61, metadata !5630, metadata !DIExpression()), !dbg !5636
  %62 = icmp eq i32 %61, 0, !dbg !5710
  br i1 %62, label %64, label %63, !dbg !5712

63:                                               ; preds = %60
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.55, i32 0, i32 0), i32 noundef 274, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.uart_send_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.56, i32 0, i32 0)) #23, !dbg !5713
  unreachable, !dbg !5713

64:                                               ; preds = %60, %52, %37, %38
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #22, !dbg !5715
  ret void, !dbg !5715
}

; Function Attrs: optsize
declare dso_local i32 @vdma_get_available_send_space(i32 noundef, i32* noundef) local_unnamed_addr #3

; Function Attrs: optsize
declare dso_local zeroext i1 @hal_sleep_manager_is_sleep_handle_alive(i8 noundef zeroext) local_unnamed_addr #3

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_error_handler(i32 noundef %0) local_unnamed_addr #0 !dbg !5716 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5720, metadata !DIExpression()), !dbg !5724
  %2 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !5725
  %3 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %2, align 4, !dbg !5725
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %3, metadata !5721, metadata !DIExpression()), !dbg !5724
  %4 = tail call i32 @uart_verify_error(%struct.UART_REGISTER_T* noundef %3) #21, !dbg !5726
  %5 = icmp eq i32 %4, 0, !dbg !5726
  br i1 %5, label %6, label %14, !dbg !5728

6:                                                ; preds = %1
  tail call void @uart_purge_fifo(%struct.UART_REGISTER_T* noundef %3, i32 noundef 1) #21, !dbg !5729
  tail call void @uart_purge_fifo(%struct.UART_REGISTER_T* noundef %3, i32 noundef 0) #21, !dbg !5731
  %7 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 0, !dbg !5732
  %8 = load void (i32, i8*)*, void (i32, i8*)** %7, align 4, !dbg !5732
  call void @llvm.dbg.value(metadata void (i32, i8*)* %8, metadata !5722, metadata !DIExpression()), !dbg !5724
  call void @llvm.dbg.value(metadata i8* undef, metadata !5723, metadata !DIExpression()), !dbg !5724
  %9 = icmp eq void (i32, i8*)* %8, null, !dbg !5733
  br i1 %9, label %10, label %11, !dbg !5735

10:                                               ; preds = %6
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.55, i32 0, i32 0), i32 noundef 296, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.uart_error_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.56, i32 0, i32 0)) #23, !dbg !5736
  unreachable, !dbg !5736

11:                                               ; preds = %6
  %12 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 1, !dbg !5738
  %13 = load i8*, i8** %12, align 4, !dbg !5738
  call void @llvm.dbg.value(metadata i8* %13, metadata !5723, metadata !DIExpression()), !dbg !5724
  tail call void %8(i32 noundef -1, i8* noundef %13) #21, !dbg !5739
  br label %14, !dbg !5740

14:                                               ; preds = %11, %1
  ret void, !dbg !5741
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_backup_all_registers() local_unnamed_addr #0 !dbg !5742 {
  call void @llvm.dbg.value(metadata i32 0, metadata !5744, metadata !DIExpression()), !dbg !5749
  br label %1, !dbg !5750

1:                                                ; preds = %0, %21
  %2 = phi i32 [ 0, %0 ], [ %22, %21 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !5744, metadata !DIExpression()), !dbg !5749
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %2, !dbg !5752
  %4 = load volatile i32, i32* %3, align 4, !dbg !5752
  %5 = icmp eq i32 %4, 0, !dbg !5756
  br i1 %5, label %21, label %6, !dbg !5757

6:                                                ; preds = %1
  %7 = load volatile i32, i32* %3, align 4, !dbg !5758
  call void @llvm.dbg.value(metadata i32 %7, metadata !5745, metadata !DIExpression()), !dbg !5749
  %8 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_flowcontrol_status, i32 0, i32 %2, !dbg !5760
  %9 = load i32, i32* %8, align 4, !dbg !5760
  call void @llvm.dbg.value(metadata i32 %9, metadata !5746, metadata !DIExpression()), !dbg !5749
  %10 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %2, i32 0, !dbg !5761
  %11 = load void (i32, i8*)*, void (i32, i8*)** %10, align 4, !dbg !5761
  call void @llvm.dbg.value(metadata void (i32, i8*)* %11, metadata !5747, metadata !DIExpression()), !dbg !5749
  %12 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %2, i32 1, !dbg !5762
  %13 = load i8*, i8** %12, align 4, !dbg !5762
  call void @llvm.dbg.value(metadata i8* %13, metadata !5748, metadata !DIExpression()), !dbg !5749
  %14 = tail call i32 @hal_uart_deinit(i32 noundef %2) #20, !dbg !5763
  store volatile i32 %7, i32* %3, align 4, !dbg !5764
  store i32 %9, i32* %8, align 4, !dbg !5765
  store void (i32, i8*)* %11, void (i32, i8*)** %10, align 4, !dbg !5766
  store i8* %13, i8** %12, align 4, !dbg !5767
  %15 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_irq_num to [0 x i32]*), i32 0, i32 %2, !dbg !5768
  %16 = load i32, i32* %15, align 4, !dbg !5768
  %17 = tail call i32 @hal_nvic_get_pending_irq(i32 noundef %16) #21, !dbg !5769
  %18 = icmp ne i32 %17, 0, !dbg !5769
  %19 = getelementptr inbounds [4 x i8], [4 x i8]* @g_uart_irq_pending_status, i32 0, i32 %2, !dbg !5770
  %20 = zext i1 %18 to i8, !dbg !5771
  store i8 %20, i8* %19, align 1, !dbg !5771
  br label %21, !dbg !5772

21:                                               ; preds = %1, %6
  %22 = add nuw nsw i32 %2, 1, !dbg !5773
  call void @llvm.dbg.value(metadata i32 %22, metadata !5744, metadata !DIExpression()), !dbg !5749
  %23 = icmp eq i32 %22, 4, !dbg !5774
  br i1 %23, label %24, label %1, !dbg !5750, !llvm.loop !5775

24:                                               ; preds = %21
  ret void, !dbg !5777
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_deinit(i32 noundef %0) local_unnamed_addr #0 !dbg !5778 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5783, metadata !DIExpression()), !dbg !5791
  %2 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #20, !dbg !5792
  br i1 %2, label %3, label %56, !dbg !5794

3:                                                ; preds = %1
  %4 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !5795
  call void @llvm.dbg.value(metadata i32 %4, metadata !5787, metadata !DIExpression()), !dbg !5791
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5796
  %6 = load volatile i32, i32* %5, align 4, !dbg !5796
  %7 = icmp eq i32 %6, 0, !dbg !5798
  br i1 %7, label %54, label %8, !dbg !5799

8:                                                ; preds = %3
  %9 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !5800
  %10 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %9, align 4, !dbg !5800
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %10, metadata !5784, metadata !DIExpression()), !dbg !5791
  tail call void @uart_query_empty(%struct.UART_REGISTER_T* noundef %10) #21, !dbg !5801
  %11 = load volatile i32, i32* %5, align 4, !dbg !5802
  %12 = icmp eq i32 %11, 2, !dbg !5804
  br i1 %12, label %13, label %43, !dbg !5805

13:                                               ; preds = %8
  %14 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #21, !dbg !5806
  call void @llvm.dbg.value(metadata i32 %14, metadata !5785, metadata !DIExpression()), !dbg !5791
  %15 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #21, !dbg !5808
  call void @llvm.dbg.value(metadata i32 %15, metadata !5786, metadata !DIExpression()), !dbg !5791
  %16 = tail call i32 @vdma_disable_interrupt(i32 noundef %14) #21, !dbg !5809
  call void @llvm.dbg.value(metadata i32 %16, metadata !5788, metadata !DIExpression()), !dbg !5791
  %17 = icmp eq i32 %16, 0, !dbg !5810
  br i1 %17, label %19, label %18, !dbg !5812

18:                                               ; preds = %13
  tail call void @restore_interrupt_mask(i32 noundef %4) #21, !dbg !5813
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.55, i32 0, i32 0), i32 noundef 575, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.56, i32 0, i32 0)) #23, !dbg !5815
  unreachable, !dbg !5815

19:                                               ; preds = %13
  %20 = tail call i32 @vdma_disable_interrupt(i32 noundef %15) #21, !dbg !5816
  call void @llvm.dbg.value(metadata i32 %20, metadata !5788, metadata !DIExpression()), !dbg !5791
  %21 = icmp eq i32 %20, 0, !dbg !5817
  br i1 %21, label %23, label %22, !dbg !5819

22:                                               ; preds = %19
  tail call void @restore_interrupt_mask(i32 noundef %4) #21, !dbg !5820
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.55, i32 0, i32 0), i32 noundef 581, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.56, i32 0, i32 0)) #23, !dbg !5822
  unreachable, !dbg !5822

23:                                               ; preds = %19
  %24 = tail call i32 @vdma_stop(i32 noundef %14) #21, !dbg !5823
  call void @llvm.dbg.value(metadata i32 %24, metadata !5788, metadata !DIExpression()), !dbg !5791
  %25 = icmp eq i32 %24, 0, !dbg !5824
  br i1 %25, label %27, label %26, !dbg !5826

26:                                               ; preds = %23
  tail call void @restore_interrupt_mask(i32 noundef %4) #21, !dbg !5827
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.55, i32 0, i32 0), i32 noundef 587, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.56, i32 0, i32 0)) #23, !dbg !5829
  unreachable, !dbg !5829

27:                                               ; preds = %23
  %28 = tail call i32 @vdma_stop(i32 noundef %15) #21, !dbg !5830
  call void @llvm.dbg.value(metadata i32 %28, metadata !5788, metadata !DIExpression()), !dbg !5791
  %29 = icmp eq i32 %28, 0, !dbg !5831
  br i1 %29, label %31, label %30, !dbg !5833

30:                                               ; preds = %27
  tail call void @restore_interrupt_mask(i32 noundef %4) #21, !dbg !5834
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.55, i32 0, i32 0), i32 noundef 593, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.56, i32 0, i32 0)) #23, !dbg !5836
  unreachable, !dbg !5836

31:                                               ; preds = %27
  %32 = tail call i32 @vdma_deinit(i32 noundef %14) #21, !dbg !5837
  call void @llvm.dbg.value(metadata i32 %32, metadata !5788, metadata !DIExpression()), !dbg !5791
  %33 = icmp eq i32 %32, 0, !dbg !5838
  br i1 %33, label %35, label %34, !dbg !5840

34:                                               ; preds = %31
  tail call void @restore_interrupt_mask(i32 noundef %4) #21, !dbg !5841
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.55, i32 0, i32 0), i32 noundef 599, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.56, i32 0, i32 0)) #23, !dbg !5843
  unreachable, !dbg !5843

35:                                               ; preds = %31
  %36 = tail call i32 @vdma_deinit(i32 noundef %15) #21, !dbg !5844
  call void @llvm.dbg.value(metadata i32 %36, metadata !5788, metadata !DIExpression()), !dbg !5791
  %37 = icmp eq i32 %36, 0, !dbg !5845
  br i1 %37, label %39, label %38, !dbg !5847

38:                                               ; preds = %35
  tail call void @restore_interrupt_mask(i32 noundef %4) #21, !dbg !5848
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.55, i32 0, i32 0), i32 noundef 605, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.56, i32 0, i32 0)) #23, !dbg !5850
  unreachable, !dbg !5850

39:                                               ; preds = %35
  %40 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_irq_num to [0 x i32]*), i32 0, i32 %0, !dbg !5851
  %41 = load i32, i32* %40, align 4, !dbg !5851
  %42 = tail call i32 @hal_nvic_disable_irq(i32 noundef %41) #21, !dbg !5852
  br label %43, !dbg !5853

43:                                               ; preds = %39, %8
  tail call void @uart_reset_default_value(%struct.UART_REGISTER_T* noundef %10) #21, !dbg !5854
  %44 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_pdn to [0 x i32]*), i32 0, i32 %0, !dbg !5855
  %45 = load i32, i32* %44, align 4, !dbg !5855
  %46 = tail call i32 @hal_clock_disable(i32 noundef %45) #21, !dbg !5856
  call void @llvm.dbg.value(metadata i32 %46, metadata !5789, metadata !DIExpression()), !dbg !5791
  %47 = icmp eq i32 %46, 0, !dbg !5857
  br i1 %47, label %49, label %48, !dbg !5859

48:                                               ; preds = %43
  tail call void @restore_interrupt_mask(i32 noundef %4) #21, !dbg !5860
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.55, i32 0, i32 0), i32 noundef 614, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.56, i32 0, i32 0)) #23, !dbg !5862
  unreachable, !dbg !5862

49:                                               ; preds = %43
  %50 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 0, !dbg !5863
  store void (i32, i8*)* null, void (i32, i8*)** %50, align 4, !dbg !5864
  %51 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 1, !dbg !5865
  store i8* null, i8** %51, align 4, !dbg !5866
  %52 = getelementptr inbounds [4 x i8], [4 x i8]* @g_uart_frist_send_complete_interrupt, i32 0, i32 %0, !dbg !5867
  store i8 0, i8* %52, align 1, !dbg !5868
  %53 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_flowcontrol_status, i32 0, i32 %0, !dbg !5869
  store i32 0, i32* %53, align 4, !dbg !5870
  store volatile i32 0, i32* %5, align 4, !dbg !5871
  br label %54, !dbg !5872

54:                                               ; preds = %3, %49
  %55 = phi i32 [ 0, %49 ], [ -2, %3 ]
  tail call void @restore_interrupt_mask(i32 noundef %4) #21, !dbg !5791
  br label %56, !dbg !5873

56:                                               ; preds = %54, %1
  %57 = phi i32 [ -4, %1 ], [ %55, %54 ], !dbg !5791
  ret i32 %57, !dbg !5873
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) unnamed_addr #8 !dbg !5874 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5878, metadata !DIExpression()), !dbg !5879
  %2 = icmp ult i32 %0, 4, !dbg !5880
  ret i1 %2, !dbg !5881
}

; Function Attrs: optsize
declare dso_local i32 @vdma_stop(i32 noundef) local_unnamed_addr #3

; Function Attrs: optsize
declare dso_local i32 @vdma_deinit(i32 noundef) local_unnamed_addr #3

; Function Attrs: optsize
declare dso_local i32 @hal_clock_disable(i32 noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_restore_all_registers() local_unnamed_addr #0 !dbg !5882 {
  store i1 true, i1* @g_uart_restore_init, align 1, !dbg !5889
  call void @llvm.dbg.value(metadata i32 0, metadata !5885, metadata !DIExpression()), !dbg !5890
  br label %1, !dbg !5891

1:                                                ; preds = %0, %51
  %2 = phi i32 [ 0, %0 ], [ %52, %51 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !5885, metadata !DIExpression()), !dbg !5890
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %2, !dbg !5893
  %4 = load volatile i32, i32* %3, align 4, !dbg !5893
  call void @llvm.dbg.value(metadata i32 %4, metadata !5887, metadata !DIExpression()), !dbg !5890
  %5 = icmp eq i32 %4, 0, !dbg !5896
  br i1 %5, label %9, label %6, !dbg !5898

6:                                                ; preds = %1
  store volatile i32 0, i32* %3, align 4, !dbg !5899
  %7 = getelementptr inbounds [4 x %struct.hal_uart_config_t], [4 x %struct.hal_uart_config_t]* @g_uart_config, i32 0, i32 %2, !dbg !5901
  %8 = tail call i32 @hal_uart_init(i32 noundef %2, %struct.hal_uart_config_t* noundef nonnull %7) #20, !dbg !5902
  br label %9, !dbg !5903

9:                                                ; preds = %6, %1
  %10 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_flowcontrol_status, i32 0, i32 %2, !dbg !5904
  %11 = load i32, i32* %10, align 4, !dbg !5904
  switch i32 %11, label %30 [
    i32 1, label %12
    i32 2, label %28
  ], !dbg !5906

12:                                               ; preds = %9
  %13 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %2, !dbg !5907
  %14 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %13, align 4, !dbg !5907
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %14, metadata !5886, metadata !DIExpression()), !dbg !5890
  %15 = getelementptr inbounds [4 x %struct.uart_sw_flowcontrol_config_t], [4 x %struct.uart_sw_flowcontrol_config_t]* @g_uart_sw_flowcontrol_config, i32 0, i32 %2, i32 0, !dbg !5909
  %16 = load i8, i8* %15, align 1, !dbg !5909
  tail call void @uart_put_char_block(%struct.UART_REGISTER_T* noundef %14, i8 noundef zeroext %16) #21, !dbg !5910
  %17 = getelementptr inbounds [4 x %struct.hal_uart_config_t], [4 x %struct.hal_uart_config_t]* @g_uart_config, i32 0, i32 %2, i32 0, !dbg !5911
  %18 = load i32, i32* %17, align 4, !dbg !5911
  %19 = udiv i32 12000000, %18, !dbg !5912
  %20 = add nuw nsw i32 %19, 1, !dbg !5913
  call void @llvm.dbg.value(metadata i32 %20, metadata !5884, metadata !DIExpression()), !dbg !5890
  %21 = tail call i32 @hal_gpt_delay_us(i32 noundef %20) #21, !dbg !5914
  %22 = load i8, i8* %15, align 1, !dbg !5915
  %23 = getelementptr inbounds [4 x %struct.uart_sw_flowcontrol_config_t], [4 x %struct.uart_sw_flowcontrol_config_t]* @g_uart_sw_flowcontrol_config, i32 0, i32 %2, i32 1, !dbg !5916
  %24 = load i8, i8* %23, align 1, !dbg !5916
  %25 = getelementptr inbounds [4 x %struct.uart_sw_flowcontrol_config_t], [4 x %struct.uart_sw_flowcontrol_config_t]* @g_uart_sw_flowcontrol_config, i32 0, i32 %2, i32 2, !dbg !5917
  %26 = load i8, i8* %25, align 1, !dbg !5917
  %27 = tail call i32 @hal_uart_set_software_flowcontrol(i32 noundef %2, i8 noundef zeroext %22, i8 noundef zeroext %24, i8 noundef zeroext %26) #20, !dbg !5918
  br label %30, !dbg !5919

28:                                               ; preds = %9
  %29 = tail call i32 @hal_uart_set_hardware_flowcontrol(i32 noundef %2) #20, !dbg !5920
  br label %30, !dbg !5923

30:                                               ; preds = %9, %28, %12
  %31 = icmp eq i32 %4, 2, !dbg !5924
  br i1 %31, label %32, label %40, !dbg !5926

32:                                               ; preds = %30
  %33 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %2, !dbg !5927
  %34 = tail call i32 @hal_uart_set_dma(i32 noundef %2, %struct.hal_uart_dma_config_t* noundef nonnull %33) #20, !dbg !5929
  %35 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %2, i32 0, !dbg !5930
  %36 = load void (i32, i8*)*, void (i32, i8*)** %35, align 4, !dbg !5930
  %37 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %2, i32 1, !dbg !5931
  %38 = load i8*, i8** %37, align 4, !dbg !5931
  %39 = tail call i32 @hal_uart_register_callback(i32 noundef %2, void (i32, i8*)* noundef %36, i8* noundef %38) #20, !dbg !5932
  br label %40, !dbg !5933

40:                                               ; preds = %32, %30
  %41 = getelementptr inbounds [4 x i8], [4 x i8]* @g_uart_sleep_handler, i32 0, i32 %2, !dbg !5934
  %42 = load i8, i8* %41, align 1, !dbg !5934
  %43 = tail call zeroext i1 @hal_sleep_manager_is_sleep_handle_alive(i8 noundef zeroext %42) #21, !dbg !5935
  call void @llvm.dbg.value(metadata i1 %43, metadata !5888, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5890
  br i1 %43, label %44, label %51, !dbg !5936

44:                                               ; preds = %40
  %45 = getelementptr inbounds [4 x i8], [4 x i8]* @g_uart_irq_pending_status, i32 0, i32 %2, !dbg !5938
  %46 = load i8, i8* %45, align 1, !dbg !5938, !range !3343
  %47 = icmp eq i8 %46, 0, !dbg !5938
  br i1 %47, label %51, label %48, !dbg !5939

48:                                               ; preds = %44
  %49 = load i8, i8* %41, align 1, !dbg !5940
  %50 = tail call i32 @hal_sleep_manager_unlock_sleep(i8 noundef zeroext %49) #21, !dbg !5942
  br label %51, !dbg !5943

51:                                               ; preds = %40, %44, %48
  %52 = add nuw nsw i32 %2, 1, !dbg !5944
  call void @llvm.dbg.value(metadata i32 %52, metadata !5885, metadata !DIExpression()), !dbg !5890
  %53 = icmp eq i32 %52, 4, !dbg !5945
  br i1 %53, label %54, label %1, !dbg !5891, !llvm.loop !5946

54:                                               ; preds = %51
  store i1 false, i1* @g_uart_restore_init, align 1, !dbg !5948
  ret void, !dbg !5949
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_init(i32 noundef %0, %struct.hal_uart_config_t* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !5950 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5955, metadata !DIExpression()), !dbg !5962
  call void @llvm.dbg.value(metadata %struct.hal_uart_config_t* %1, metadata !5956, metadata !DIExpression()), !dbg !5962
  %3 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #20, !dbg !5963
  br i1 %3, label %4, label %59, !dbg !5965

4:                                                ; preds = %2
  %5 = tail call fastcc zeroext i1 @uart_config_is_valid(%struct.hal_uart_config_t* noundef %1) #20, !dbg !5966
  br i1 %5, label %6, label %59, !dbg !5967

6:                                                ; preds = %4
  %7 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !5968
  call void @llvm.dbg.value(metadata i32 %7, metadata !5960, metadata !DIExpression()), !dbg !5962
  %8 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5969
  %9 = load volatile i32, i32* %8, align 4, !dbg !5969
  %10 = icmp eq i32 %9, 0, !dbg !5971
  br i1 %10, label %12, label %11, !dbg !5972

11:                                               ; preds = %6
  tail call void @restore_interrupt_mask(i32 noundef %7) #21, !dbg !5973
  br label %59, !dbg !5975

12:                                               ; preds = %6
  %13 = load i1, i1* @g_uart_restore_init, align 1, !dbg !5976
  br i1 %13, label %19, label %14, !dbg !5978

14:                                               ; preds = %12
  %15 = getelementptr inbounds [0 x i8*], [0 x i8*]* bitcast ([4 x i8*]* @g_uart_sleep_handler_name to [0 x i8*]*), i32 0, i32 %0, !dbg !5979
  %16 = load i8*, i8** %15, align 4, !dbg !5979
  %17 = tail call zeroext i8 @hal_sleep_manager_set_sleep_handle(i8* noundef %16) #21, !dbg !5981
  %18 = getelementptr inbounds [4 x i8], [4 x i8]* @g_uart_sleep_handler, i32 0, i32 %0, !dbg !5982
  store i8 %17, i8* %18, align 1, !dbg !5983
  br label %19, !dbg !5984

19:                                               ; preds = %14, %12
  %20 = load i1, i1* @g_uart_global_data_initialized, align 1, !dbg !5985
  br i1 %20, label %32, label %21, !dbg !5987

21:                                               ; preds = %19, %21
  %22 = phi i32 [ %29, %21 ], [ 0, %19 ]
  call void @llvm.dbg.value(metadata i32 %22, metadata !5958, metadata !DIExpression()), !dbg !5962
  %23 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %22, !dbg !5988
  store volatile i32 0, i32* %23, align 4, !dbg !5993
  %24 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_flowcontrol_status, i32 0, i32 %22, !dbg !5994
  store i32 0, i32* %24, align 4, !dbg !5995
  %25 = getelementptr inbounds [4 x i8], [4 x i8]* @g_uart_frist_send_complete_interrupt, i32 0, i32 %22, !dbg !5996
  store i8 0, i8* %25, align 1, !dbg !5997
  %26 = getelementptr inbounds [4 x i8], [4 x i8]* @g_uart_send_lock_status, i32 0, i32 %22, !dbg !5998
  store i8 0, i8* %26, align 1, !dbg !5999
  %27 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %22, i32 1, !dbg !6000
  store i8* null, i8** %27, align 4, !dbg !6001
  %28 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %22, i32 0, !dbg !6002
  store void (i32, i8*)* null, void (i32, i8*)** %28, align 4, !dbg !6003
  %29 = add nuw nsw i32 %22, 1, !dbg !6004
  call void @llvm.dbg.value(metadata i32 %29, metadata !5958, metadata !DIExpression()), !dbg !5962
  %30 = icmp eq i32 %29, 4, !dbg !6005
  br i1 %30, label %31, label %21, !dbg !6006, !llvm.loop !6007

31:                                               ; preds = %21
  store i1 true, i1* @g_uart_global_data_initialized, align 1, !dbg !6009
  br label %32, !dbg !6010

32:                                               ; preds = %31, %19
  %33 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 0, !dbg !6011
  %34 = load i32, i32* %33, align 4, !dbg !6011
  %35 = getelementptr inbounds [4 x %struct.hal_uart_config_t], [4 x %struct.hal_uart_config_t]* @g_uart_config, i32 0, i32 %0, i32 0, !dbg !6012
  store i32 %34, i32* %35, align 4, !dbg !6013
  %36 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 1, !dbg !6014
  %37 = load i32, i32* %36, align 4, !dbg !6014
  %38 = getelementptr inbounds [4 x %struct.hal_uart_config_t], [4 x %struct.hal_uart_config_t]* @g_uart_config, i32 0, i32 %0, i32 1, !dbg !6015
  store i32 %37, i32* %38, align 4, !dbg !6016
  %39 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 2, !dbg !6017
  %40 = load i32, i32* %39, align 4, !dbg !6017
  %41 = getelementptr inbounds [4 x %struct.hal_uart_config_t], [4 x %struct.hal_uart_config_t]* @g_uart_config, i32 0, i32 %0, i32 2, !dbg !6018
  store i32 %40, i32* %41, align 4, !dbg !6019
  %42 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 3, !dbg !6020
  %43 = load i32, i32* %42, align 4, !dbg !6020
  %44 = getelementptr inbounds [4 x %struct.hal_uart_config_t], [4 x %struct.hal_uart_config_t]* @g_uart_config, i32 0, i32 %0, i32 3, !dbg !6021
  store i32 %43, i32* %44, align 4, !dbg !6022
  store volatile i32 1, i32* %8, align 4, !dbg !6023
  tail call void @restore_interrupt_mask(i32 noundef %7) #21, !dbg !6024
  %45 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_pdn to [0 x i32]*), i32 0, i32 %0, !dbg !6025
  %46 = load i32, i32* %45, align 4, !dbg !6025
  %47 = tail call i32 @hal_clock_enable(i32 noundef %46) #21, !dbg !6026
  call void @llvm.dbg.value(metadata i32 %47, metadata !5961, metadata !DIExpression()), !dbg !5962
  %48 = icmp eq i32 %47, 0, !dbg !6027
  br i1 %48, label %50, label %49, !dbg !6029

49:                                               ; preds = %32
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.55, i32 0, i32 0), i32 noundef 526, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.hal_uart_init, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.56, i32 0, i32 0)) #23, !dbg !6030
  unreachable, !dbg !6030

50:                                               ; preds = %32
  %51 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !6032
  %52 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %51, align 4, !dbg !6032
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %52, metadata !5957, metadata !DIExpression()), !dbg !5962
  tail call void @uart_reset_default_value(%struct.UART_REGISTER_T* noundef %52) #21, !dbg !6033
  %53 = load i32, i32* %33, align 4, !dbg !6034
  %54 = getelementptr inbounds [13 x i32], [13 x i32]* @g_uart_baudrate_map, i32 0, i32 %53, !dbg !6035
  %55 = load i32, i32* %54, align 4, !dbg !6035
  call void @llvm.dbg.value(metadata i32 %55, metadata !5959, metadata !DIExpression()), !dbg !5962
  tail call void @uart_set_baudrate(%struct.UART_REGISTER_T* noundef %52, i32 noundef %55) #21, !dbg !6036
  %56 = load i32, i32* %36, align 4, !dbg !6037
  %57 = load i32, i32* %39, align 4, !dbg !6038
  %58 = load i32, i32* %42, align 4, !dbg !6039
  tail call void @uart_set_format(%struct.UART_REGISTER_T* noundef %52, i32 noundef %56, i32 noundef %57, i32 noundef %58) #21, !dbg !6040
  tail call void @uart_set_fifo(%struct.UART_REGISTER_T* noundef %52) #21, !dbg !6041
  tail call void @uart_set_sleep_mode(%struct.UART_REGISTER_T* noundef %52) #21, !dbg !6042
  br label %59, !dbg !6043

59:                                               ; preds = %2, %4, %50, %11
  %60 = phi i32 [ -3, %11 ], [ 0, %50 ], [ -4, %4 ], [ -4, %2 ], !dbg !5962
  ret i32 %60, !dbg !6044
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_software_flowcontrol(i32 noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) local_unnamed_addr #0 !dbg !6045 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6049, metadata !DIExpression()), !dbg !6054
  call void @llvm.dbg.value(metadata i8 %1, metadata !6050, metadata !DIExpression()), !dbg !6054
  call void @llvm.dbg.value(metadata i8 %2, metadata !6051, metadata !DIExpression()), !dbg !6054
  call void @llvm.dbg.value(metadata i8 %3, metadata !6052, metadata !DIExpression()), !dbg !6054
  %5 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #20, !dbg !6055
  br i1 %5, label %6, label %17, !dbg !6057

6:                                                ; preds = %4
  %7 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !6058
  %8 = load volatile i32, i32* %7, align 4, !dbg !6058
  %9 = icmp eq i32 %8, 0, !dbg !6060
  br i1 %9, label %17, label %10, !dbg !6061

10:                                               ; preds = %6
  %11 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !6062
  %12 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %11, align 4, !dbg !6062
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %12, metadata !6053, metadata !DIExpression()), !dbg !6054
  tail call void @uart_set_software_flowcontrol(%struct.UART_REGISTER_T* noundef %12, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) #21, !dbg !6063
  %13 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_flowcontrol_status, i32 0, i32 %0, !dbg !6064
  store i32 1, i32* %13, align 4, !dbg !6065
  %14 = getelementptr inbounds [4 x %struct.uart_sw_flowcontrol_config_t], [4 x %struct.uart_sw_flowcontrol_config_t]* @g_uart_sw_flowcontrol_config, i32 0, i32 %0, i32 0, !dbg !6066
  store i8 %1, i8* %14, align 1, !dbg !6067
  %15 = getelementptr inbounds [4 x %struct.uart_sw_flowcontrol_config_t], [4 x %struct.uart_sw_flowcontrol_config_t]* @g_uart_sw_flowcontrol_config, i32 0, i32 %0, i32 1, !dbg !6068
  store i8 %2, i8* %15, align 1, !dbg !6069
  %16 = getelementptr inbounds [4 x %struct.uart_sw_flowcontrol_config_t], [4 x %struct.uart_sw_flowcontrol_config_t]* @g_uart_sw_flowcontrol_config, i32 0, i32 %0, i32 2, !dbg !6070
  store i8 %3, i8* %16, align 1, !dbg !6071
  br label %17, !dbg !6072

17:                                               ; preds = %6, %4, %10
  %18 = phi i32 [ 0, %10 ], [ -4, %4 ], [ -2, %6 ], !dbg !6054
  ret i32 %18, !dbg !6073
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_hardware_flowcontrol(i32 noundef %0) local_unnamed_addr #0 !dbg !6074 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6076, metadata !DIExpression()), !dbg !6078
  %2 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #20, !dbg !6079
  br i1 %2, label %3, label %11, !dbg !6081

3:                                                ; preds = %1
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !6082
  %5 = load volatile i32, i32* %4, align 4, !dbg !6082
  %6 = icmp eq i32 %5, 0, !dbg !6084
  br i1 %6, label %11, label %7, !dbg !6085

7:                                                ; preds = %3
  %8 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !6086
  %9 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %8, align 4, !dbg !6086
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %9, metadata !6077, metadata !DIExpression()), !dbg !6078
  tail call void @uart_set_hardware_flowcontrol(%struct.UART_REGISTER_T* noundef %9) #21, !dbg !6087
  %10 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_flowcontrol_status, i32 0, i32 %0, !dbg !6088
  store i32 2, i32* %10, align 4, !dbg !6089
  br label %11, !dbg !6090

11:                                               ; preds = %3, %1, %7
  %12 = phi i32 [ 0, %7 ], [ -4, %1 ], [ -2, %3 ], !dbg !6078
  ret i32 %12, !dbg !6091
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_dma(i32 noundef %0, %struct.hal_uart_dma_config_t* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !6092 {
  %3 = alloca %struct.powerkey_state_t, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6098, metadata !DIExpression()), !dbg !6110
  call void @llvm.dbg.value(metadata %struct.hal_uart_dma_config_t* %1, metadata !6099, metadata !DIExpression()), !dbg !6110
  %4 = bitcast %struct.powerkey_state_t* %3 to i8*, !dbg !6111
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #22, !dbg !6111
  call void @llvm.dbg.declare(metadata %struct.powerkey_state_t* %3, metadata !6101, metadata !DIExpression()), !dbg !6112
  %5 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #20, !dbg !6113
  br i1 %5, label %6, label %101, !dbg !6115

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 0, !dbg !6116
  %8 = load i8*, i8** %7, align 4, !dbg !6116
  %9 = icmp eq i8* %8, null, !dbg !6118
  br i1 %9, label %101, label %10, !dbg !6119

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 3, !dbg !6120
  %12 = load i8*, i8** %11, align 4, !dbg !6120
  %13 = icmp eq i8* %12, null, !dbg !6121
  br i1 %13, label %101, label %14, !dbg !6122

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 1, !dbg !6123
  %16 = load i32, i32* %15, align 4, !dbg !6123
  %17 = icmp ugt i32 %16, 131071, !dbg !6125
  br i1 %17, label %101, label %18, !dbg !6126

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 2, !dbg !6127
  %20 = load i32, i32* %19, align 4, !dbg !6127
  %21 = icmp ugt i32 %20, 131071, !dbg !6128
  %22 = icmp ugt i32 %20, %16
  %23 = select i1 %21, i1 true, i1 %22, !dbg !6129
  br i1 %23, label %101, label %24, !dbg !6129

24:                                               ; preds = %18
  %25 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 4, !dbg !6130
  %26 = load i32, i32* %25, align 4, !dbg !6130
  %27 = icmp ugt i32 %26, 131071, !dbg !6132
  br i1 %27, label %101, label %28, !dbg !6133

28:                                               ; preds = %24
  %29 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 5, !dbg !6134
  %30 = load i32, i32* %29, align 4, !dbg !6134
  %31 = icmp ugt i32 %30, 131071, !dbg !6135
  br i1 %31, label %101, label %32, !dbg !6136

32:                                               ; preds = %28
  %33 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 6, !dbg !6137
  %34 = load i32, i32* %33, align 4, !dbg !6137
  %35 = icmp ugt i32 %34, 131071, !dbg !6138
  %36 = icmp ugt i32 %30, %26
  %37 = select i1 %35, i1 true, i1 %36, !dbg !6139
  %38 = icmp ugt i32 %34, %26
  %39 = select i1 %37, i1 true, i1 %38, !dbg !6139
  br i1 %39, label %101, label %40, !dbg !6139

40:                                               ; preds = %32
  %41 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !6140
  %42 = load volatile i32, i32* %41, align 4, !dbg !6140
  %43 = icmp eq i32 %42, 1, !dbg !6142
  br i1 %43, label %44, label %101, !dbg !6143

44:                                               ; preds = %40
  %45 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #21, !dbg !6144
  call void @llvm.dbg.value(metadata i32 %45, metadata !6107, metadata !DIExpression()), !dbg !6110
  %46 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #21, !dbg !6145
  call void @llvm.dbg.value(metadata i32 %46, metadata !6108, metadata !DIExpression()), !dbg !6110
  %47 = tail call i32 @vdma_init(i32 noundef %45) #21, !dbg !6146
  call void @llvm.dbg.value(metadata i32 %47, metadata !6109, metadata !DIExpression()), !dbg !6110
  %48 = icmp eq i32 %47, 0, !dbg !6147
  br i1 %48, label %50, label %49, !dbg !6149

49:                                               ; preds = %44
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.55, i32 0, i32 0), i32 noundef 1107, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.56, i32 0, i32 0)) #23, !dbg !6150
  unreachable, !dbg !6150

50:                                               ; preds = %44
  %51 = load i8*, i8** %7, align 4, !dbg !6152
  %52 = ptrtoint i8* %51 to i32, !dbg !6153
  %53 = getelementptr inbounds %struct.powerkey_state_t, %struct.powerkey_state_t* %3, i32 0, i32 0, !dbg !6154
  store i32 %52, i32* %53, align 4, !dbg !6155
  %54 = load i32, i32* %15, align 4, !dbg !6156
  %55 = getelementptr inbounds %struct.powerkey_state_t, %struct.powerkey_state_t* %3, i32 0, i32 1, !dbg !6157
  store i32 %54, i32* %55, align 4, !dbg !6158
  %56 = call i32 @vdma_configure(i32 noundef %45, %struct.powerkey_state_t* noundef nonnull %3) #21, !dbg !6159
  call void @llvm.dbg.value(metadata i32 %56, metadata !6109, metadata !DIExpression()), !dbg !6110
  %57 = icmp eq i32 %56, 0, !dbg !6160
  br i1 %57, label %59, label %58, !dbg !6162

58:                                               ; preds = %50
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.55, i32 0, i32 0), i32 noundef 1114, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.56, i32 0, i32 0)) #23, !dbg !6163
  unreachable, !dbg !6163

59:                                               ; preds = %50
  %60 = load i32, i32* %19, align 4, !dbg !6165
  %61 = call i32 @vdma_set_threshold(i32 noundef %45, i32 noundef %60) #21, !dbg !6166
  call void @llvm.dbg.value(metadata i32 %61, metadata !6109, metadata !DIExpression()), !dbg !6110
  %62 = icmp eq i32 %61, 0, !dbg !6167
  br i1 %62, label %64, label %63, !dbg !6169

63:                                               ; preds = %59
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.55, i32 0, i32 0), i32 noundef 1119, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.56, i32 0, i32 0)) #23, !dbg !6170
  unreachable, !dbg !6170

64:                                               ; preds = %59
  %65 = call i32 @vdma_init(i32 noundef %46) #21, !dbg !6172
  call void @llvm.dbg.value(metadata i32 %65, metadata !6109, metadata !DIExpression()), !dbg !6110
  %66 = icmp eq i32 %65, 0, !dbg !6173
  br i1 %66, label %68, label %67, !dbg !6175

67:                                               ; preds = %64
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.55, i32 0, i32 0), i32 noundef 1125, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.56, i32 0, i32 0)) #23, !dbg !6176
  unreachable, !dbg !6176

68:                                               ; preds = %64
  %69 = load i8*, i8** %11, align 4, !dbg !6178
  %70 = ptrtoint i8* %69 to i32, !dbg !6179
  store i32 %70, i32* %53, align 4, !dbg !6180
  %71 = load i32, i32* %25, align 4, !dbg !6181
  store i32 %71, i32* %55, align 4, !dbg !6182
  %72 = call i32 @vdma_configure(i32 noundef %46, %struct.powerkey_state_t* noundef nonnull %3) #21, !dbg !6183
  call void @llvm.dbg.value(metadata i32 %72, metadata !6109, metadata !DIExpression()), !dbg !6110
  %73 = icmp eq i32 %72, 0, !dbg !6184
  br i1 %73, label %75, label %74, !dbg !6186

74:                                               ; preds = %68
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.55, i32 0, i32 0), i32 noundef 1132, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.56, i32 0, i32 0)) #23, !dbg !6187
  unreachable, !dbg !6187

75:                                               ; preds = %68
  %76 = load i32, i32* %29, align 4, !dbg !6189
  %77 = call i32 @vdma_set_threshold(i32 noundef %46, i32 noundef %76) #21, !dbg !6190
  call void @llvm.dbg.value(metadata i32 %77, metadata !6109, metadata !DIExpression()), !dbg !6110
  %78 = icmp eq i32 %77, 0, !dbg !6191
  br i1 %78, label %80, label %79, !dbg !6193

79:                                               ; preds = %75
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.55, i32 0, i32 0), i32 noundef 1137, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.56, i32 0, i32 0)) #23, !dbg !6194
  unreachable, !dbg !6194

80:                                               ; preds = %75
  %81 = load i32, i32* %33, align 4, !dbg !6196
  %82 = call i32 @vdma_set_alert_length(i32 noundef %46, i32 noundef %81) #21, !dbg !6197
  call void @llvm.dbg.value(metadata i32 %82, metadata !6109, metadata !DIExpression()), !dbg !6110
  %83 = icmp eq i32 %82, 0, !dbg !6198
  br i1 %83, label %85, label %84, !dbg !6200

84:                                               ; preds = %80
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.55, i32 0, i32 0), i32 noundef 1142, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.56, i32 0, i32 0)) #23, !dbg !6201
  unreachable, !dbg !6201

85:                                               ; preds = %80
  %86 = call i32 @save_and_set_interrupt_mask() #21, !dbg !6203
  call void @llvm.dbg.value(metadata i32 %86, metadata !6100, metadata !DIExpression()), !dbg !6110
  %87 = load i8*, i8** %7, align 4, !dbg !6204
  %88 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 0, !dbg !6205
  store i8* %87, i8** %88, align 4, !dbg !6206
  %89 = load i32, i32* %15, align 4, !dbg !6207
  %90 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 1, !dbg !6208
  store i32 %89, i32* %90, align 4, !dbg !6209
  %91 = load i32, i32* %19, align 4, !dbg !6210
  %92 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 2, !dbg !6211
  store i32 %91, i32* %92, align 4, !dbg !6212
  %93 = load i32, i32* %33, align 4, !dbg !6213
  %94 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 6, !dbg !6214
  store i32 %93, i32* %94, align 4, !dbg !6215
  %95 = load i8*, i8** %11, align 4, !dbg !6216
  %96 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 3, !dbg !6217
  store i8* %95, i8** %96, align 4, !dbg !6218
  %97 = load i32, i32* %25, align 4, !dbg !6219
  %98 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 4, !dbg !6220
  store i32 %97, i32* %98, align 4, !dbg !6221
  %99 = load i32, i32* %29, align 4, !dbg !6222
  %100 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 5, !dbg !6223
  store i32 %99, i32* %100, align 4, !dbg !6224
  call void @restore_interrupt_mask(i32 noundef %86) #21, !dbg !6225
  br label %101, !dbg !6226

101:                                              ; preds = %40, %24, %28, %32, %14, %18, %6, %10, %2, %85
  %102 = phi i32 [ 0, %85 ], [ -4, %2 ], [ -4, %10 ], [ -4, %6 ], [ -4, %18 ], [ -4, %14 ], [ -4, %32 ], [ -4, %28 ], [ -4, %24 ], [ -2, %40 ], !dbg !6110
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #22, !dbg !6227
  ret i32 %102, !dbg !6227
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_register_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !6228 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6232, metadata !DIExpression()), !dbg !6240
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !6233, metadata !DIExpression()), !dbg !6240
  call void @llvm.dbg.value(metadata i8* %2, metadata !6234, metadata !DIExpression()), !dbg !6240
  %4 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #20, !dbg !6241
  %5 = icmp ne void (i32, i8*)* %1, null
  %6 = and i1 %5, %4, !dbg !6243
  br i1 %6, label %7, label %39, !dbg !6243

7:                                                ; preds = %3
  %8 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !6244
  call void @llvm.dbg.value(metadata i32 %8, metadata !6237, metadata !DIExpression()), !dbg !6240
  %9 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !6245
  %10 = load volatile i32, i32* %9, align 4, !dbg !6245
  %11 = icmp eq i32 %10, 1, !dbg !6247
  br i1 %11, label %12, label %37, !dbg !6248

12:                                               ; preds = %7
  %13 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #21, !dbg !6249
  call void @llvm.dbg.value(metadata i32 %13, metadata !6235, metadata !DIExpression()), !dbg !6240
  %14 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #21, !dbg !6250
  call void @llvm.dbg.value(metadata i32 %14, metadata !6236, metadata !DIExpression()), !dbg !6240
  %15 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 0, !dbg !6251
  store void (i32, i8*)* %1, void (i32, i8*)** %15, align 4, !dbg !6252
  %16 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 1, !dbg !6253
  store i8* %2, i8** %16, align 4, !dbg !6254
  %17 = shl i32 %0, 1, !dbg !6255
  %18 = getelementptr inbounds [8 x %struct.uart_dma_callback_data_t], [8 x %struct.uart_dma_callback_data_t]* @g_uart_dma_callback_data, i32 0, i32 %17, !dbg !6256
  tail call void @uart_dma_channel_to_callback_data(i32 noundef %13, %struct.uart_dma_callback_data_t* noundef nonnull %18) #21, !dbg !6257
  %19 = getelementptr %struct.uart_dma_callback_data_t, %struct.uart_dma_callback_data_t* %18, i32 0, i32 0, !dbg !6258
  %20 = tail call i32 @vdma_register_callback(i32 noundef %13, void (i32, i8*)* noundef nonnull @uart_dma_callback_handler, i8* noundef nonnull %19) #21, !dbg !6259
  call void @llvm.dbg.value(metadata i32 %20, metadata !6238, metadata !DIExpression()), !dbg !6240
  %21 = icmp eq i32 %20, 0, !dbg !6260
  br i1 %21, label %23, label %22, !dbg !6262

22:                                               ; preds = %12
  tail call void @restore_interrupt_mask(i32 noundef %8) #21, !dbg !6263
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.55, i32 0, i32 0), i32 noundef 921, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.hal_uart_register_callback, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.56, i32 0, i32 0)) #23, !dbg !6265
  unreachable, !dbg !6265

23:                                               ; preds = %12
  %24 = or i32 %17, 1, !dbg !6266
  %25 = getelementptr inbounds [8 x %struct.uart_dma_callback_data_t], [8 x %struct.uart_dma_callback_data_t]* @g_uart_dma_callback_data, i32 0, i32 %24, !dbg !6267
  tail call void @uart_dma_channel_to_callback_data(i32 noundef %14, %struct.uart_dma_callback_data_t* noundef nonnull %25) #21, !dbg !6268
  %26 = getelementptr %struct.uart_dma_callback_data_t, %struct.uart_dma_callback_data_t* %25, i32 0, i32 0, !dbg !6269
  %27 = tail call i32 @vdma_register_callback(i32 noundef %14, void (i32, i8*)* noundef nonnull @uart_dma_callback_handler, i8* noundef nonnull %26) #21, !dbg !6270
  call void @llvm.dbg.value(metadata i32 %27, metadata !6238, metadata !DIExpression()), !dbg !6240
  %28 = icmp eq i32 %27, 0, !dbg !6271
  br i1 %28, label %30, label %29, !dbg !6273

29:                                               ; preds = %23
  tail call void @restore_interrupt_mask(i32 noundef %8) #21, !dbg !6274
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.55, i32 0, i32 0), i32 noundef 928, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.hal_uart_register_callback, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.56, i32 0, i32 0)) #23, !dbg !6276
  unreachable, !dbg !6276

30:                                               ; preds = %23
  %31 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_irq_num to [0 x i32]*), i32 0, i32 %0, !dbg !6277
  %32 = load i32, i32* %31, align 4, !dbg !6277
  %33 = tail call i32 @hal_nvic_register_isr_handler(i32 noundef %32, void (i32)* noundef nonnull @uart_interrupt_handler) #21, !dbg !6278
  call void @llvm.dbg.value(metadata i32 %33, metadata !6239, metadata !DIExpression()), !dbg !6240
  %34 = icmp eq i32 %33, 0, !dbg !6279
  br i1 %34, label %36, label %35, !dbg !6281

35:                                               ; preds = %30
  tail call void @restore_interrupt_mask(i32 noundef %8) #21, !dbg !6282
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.55, i32 0, i32 0), i32 noundef 934, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.hal_uart_register_callback, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.56, i32 0, i32 0)) #23, !dbg !6284
  unreachable, !dbg !6284

36:                                               ; preds = %30
  tail call fastcc void @uart_start_dma_transmission(i32 noundef %0) #20, !dbg !6285
  store volatile i32 2, i32* %9, align 4, !dbg !6286
  br label %37, !dbg !6287

37:                                               ; preds = %7, %36
  %38 = phi i32 [ 0, %36 ], [ -2, %7 ]
  tail call void @restore_interrupt_mask(i32 noundef %8) #21, !dbg !6240
  br label %39, !dbg !6288

39:                                               ; preds = %37, %3
  %40 = phi i32 [ -4, %3 ], [ %38, %37 ], !dbg !6240
  ret i32 %40, !dbg !6288
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_dma_callback_handler(i32 noundef %0, i8* nocapture noundef readonly %1) #0 !dbg !6289 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6294, metadata !DIExpression()), !dbg !6297
  call void @llvm.dbg.value(metadata i8* %1, metadata !6295, metadata !DIExpression()), !dbg !6297
  call void @llvm.dbg.value(metadata i8* %1, metadata !6296, metadata !DIExpression()), !dbg !6297
  %3 = load i8, i8* %1, align 4, !dbg !6298, !range !3343
  %4 = icmp eq i8 %3, 0, !dbg !6298
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !6300
  %6 = bitcast i8* %5 to i32*, !dbg !6300
  %7 = load i32, i32* %6, align 4, !dbg !6300
  br i1 %4, label %9, label %8, !dbg !6301

8:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !6296, metadata !DIExpression()), !dbg !6297
  tail call void @uart_receive_handler(i32 noundef %7, i1 noundef zeroext false) #20, !dbg !6302
  br label %10, !dbg !6304

9:                                                ; preds = %2
  tail call void @uart_send_handler(i32 noundef %7, i1 noundef zeroext false) #20, !dbg !6305
  br label %10

10:                                               ; preds = %9, %8
  ret void, !dbg !6307
}

; Function Attrs: optsize
declare dso_local i32 @vdma_register_callback(i32 noundef, void (i32, i8*)* noundef, i8* noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_start_dma_transmission(i32 noundef %0) unnamed_addr #0 !dbg !6308 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6310, metadata !DIExpression()), !dbg !6315
  %2 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !6316
  %3 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %2, align 4, !dbg !6316
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %3, metadata !6311, metadata !DIExpression()), !dbg !6315
  %4 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #21, !dbg !6317
  call void @llvm.dbg.value(metadata i32 %4, metadata !6312, metadata !DIExpression()), !dbg !6315
  %5 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #21, !dbg !6318
  call void @llvm.dbg.value(metadata i32 %5, metadata !6313, metadata !DIExpression()), !dbg !6315
  tail call void @uart_unmask_send_interrupt(%struct.UART_REGISTER_T* noundef %3) #21, !dbg !6319
  %6 = getelementptr inbounds [4 x i8], [4 x i8]* @g_uart_frist_send_complete_interrupt, i32 0, i32 %0, !dbg !6320
  store i8 1, i8* %6, align 1, !dbg !6321
  tail call void @uart_unmask_receive_interrupt(%struct.UART_REGISTER_T* noundef %3) #21, !dbg !6322
  %7 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_irq_num to [0 x i32]*), i32 0, i32 %0, !dbg !6323
  %8 = load i32, i32* %7, align 4, !dbg !6323
  %9 = tail call i32 @hal_nvic_enable_irq(i32 noundef %8) #21, !dbg !6324
  %10 = tail call i32 @vdma_enable_interrupt(i32 noundef %4) #21, !dbg !6325
  call void @llvm.dbg.value(metadata i32 %10, metadata !6314, metadata !DIExpression()), !dbg !6315
  %11 = icmp eq i32 %10, 0, !dbg !6326
  br i1 %11, label %13, label %12, !dbg !6328

12:                                               ; preds = %1
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.55, i32 0, i32 0), i32 noundef 870, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.uart_start_dma_transmission, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.56, i32 0, i32 0)) #23, !dbg !6329
  unreachable, !dbg !6329

13:                                               ; preds = %1
  %14 = tail call i32 @vdma_enable_interrupt(i32 noundef %5) #21, !dbg !6331
  call void @llvm.dbg.value(metadata i32 %14, metadata !6314, metadata !DIExpression()), !dbg !6315
  %15 = icmp eq i32 %14, 0, !dbg !6332
  br i1 %15, label %17, label %16, !dbg !6334

16:                                               ; preds = %13
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.55, i32 0, i32 0), i32 noundef 875, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.uart_start_dma_transmission, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.56, i32 0, i32 0)) #23, !dbg !6335
  unreachable, !dbg !6335

17:                                               ; preds = %13
  %18 = tail call i32 @vdma_start(i32 noundef %4) #21, !dbg !6337
  call void @llvm.dbg.value(metadata i32 %18, metadata !6314, metadata !DIExpression()), !dbg !6315
  %19 = icmp eq i32 %18, 0, !dbg !6338
  br i1 %19, label %21, label %20, !dbg !6340

20:                                               ; preds = %17
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.55, i32 0, i32 0), i32 noundef 880, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.uart_start_dma_transmission, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.56, i32 0, i32 0)) #23, !dbg !6341
  unreachable, !dbg !6341

21:                                               ; preds = %17
  %22 = tail call i32 @vdma_start(i32 noundef %5) #21, !dbg !6343
  call void @llvm.dbg.value(metadata i32 %22, metadata !6314, metadata !DIExpression()), !dbg !6315
  %23 = icmp eq i32 %22, 0, !dbg !6344
  br i1 %23, label %25, label %24, !dbg !6346

24:                                               ; preds = %21
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.55, i32 0, i32 0), i32 noundef 885, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.uart_start_dma_transmission, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.56, i32 0, i32 0)) #23, !dbg !6347
  unreachable, !dbg !6347

25:                                               ; preds = %21
  tail call void @uart_enable_dma(%struct.UART_REGISTER_T* noundef %3) #21, !dbg !6349
  ret void, !dbg !6350
}

; Function Attrs: optsize
declare dso_local i32 @vdma_start(i32 noundef) local_unnamed_addr #3

; Function Attrs: optsize
declare dso_local i32 @vdma_init(i32 noundef) local_unnamed_addr #3

; Function Attrs: optsize
declare dso_local i32 @vdma_configure(i32 noundef, %struct.powerkey_state_t* noundef) local_unnamed_addr #3

; Function Attrs: optsize
declare dso_local i32 @vdma_set_threshold(i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: optsize
declare dso_local i32 @vdma_set_alert_length(i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @uart_config_is_valid(%struct.hal_uart_config_t* nocapture noundef readonly %0) unnamed_addr #2 !dbg !6351 {
  call void @llvm.dbg.value(metadata %struct.hal_uart_config_t* %0, metadata !6357, metadata !DIExpression()), !dbg !6358
  %2 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %0, i32 0, i32 0, !dbg !6359
  %3 = load i32, i32* %2, align 4, !dbg !6359
  %4 = icmp ult i32 %3, 13, !dbg !6360
  br i1 %4, label %5, label %17, !dbg !6361

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %0, i32 0, i32 1, !dbg !6362
  %7 = load i32, i32* %6, align 4, !dbg !6362
  %8 = icmp ult i32 %7, 4, !dbg !6363
  br i1 %8, label %9, label %17, !dbg !6364

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %0, i32 0, i32 2, !dbg !6365
  %11 = load i32, i32* %10, align 4, !dbg !6365
  %12 = icmp ult i32 %11, 2, !dbg !6366
  br i1 %12, label %13, label %17, !dbg !6367

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %0, i32 0, i32 3, !dbg !6368
  %15 = load i32, i32* %14, align 4, !dbg !6368
  %16 = icmp ult i32 %15, 3, !dbg !6369
  br label %17

17:                                               ; preds = %13, %9, %5, %1
  %18 = phi i1 [ false, %9 ], [ false, %5 ], [ false, %1 ], [ %16, %13 ], !dbg !6358
  ret i1 %18, !dbg !6370
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_baudrate(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !6371 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6375, metadata !DIExpression()), !dbg !6380
  call void @llvm.dbg.value(metadata i32 %1, metadata !6376, metadata !DIExpression()), !dbg !6380
  %3 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #20, !dbg !6381
  br i1 %3, label %4, label %17, !dbg !6383

4:                                                ; preds = %2
  %5 = tail call fastcc zeroext i1 @uart_baudrate_is_valid(i32 noundef %1) #20, !dbg !6384
  br i1 %5, label %6, label %17, !dbg !6385

6:                                                ; preds = %4
  %7 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !6386
  %8 = load volatile i32, i32* %7, align 4, !dbg !6386
  %9 = icmp eq i32 %8, 0, !dbg !6388
  br i1 %9, label %17, label %10, !dbg !6389

10:                                               ; preds = %6
  %11 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !6390
  call void @llvm.dbg.value(metadata i32 %11, metadata !6378, metadata !DIExpression()), !dbg !6380
  %12 = getelementptr inbounds [4 x %struct.hal_uart_config_t], [4 x %struct.hal_uart_config_t]* @g_uart_config, i32 0, i32 %0, i32 0, !dbg !6391
  store i32 %1, i32* %12, align 4, !dbg !6392
  tail call void @restore_interrupt_mask(i32 noundef %11) #21, !dbg !6393
  %13 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !6394
  %14 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %13, align 4, !dbg !6394
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %14, metadata !6379, metadata !DIExpression()), !dbg !6380
  %15 = getelementptr inbounds [13 x i32], [13 x i32]* @g_uart_baudrate_map, i32 0, i32 %1, !dbg !6395
  %16 = load i32, i32* %15, align 4, !dbg !6395
  call void @llvm.dbg.value(metadata i32 %16, metadata !6377, metadata !DIExpression()), !dbg !6380
  tail call void @uart_set_baudrate(%struct.UART_REGISTER_T* noundef %14, i32 noundef %16) #21, !dbg !6396
  br label %17, !dbg !6397

17:                                               ; preds = %6, %2, %4, %10
  %18 = phi i32 [ 0, %10 ], [ -4, %4 ], [ -4, %2 ], [ -2, %6 ], !dbg !6380
  ret i32 %18, !dbg !6398
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @uart_baudrate_is_valid(i32 noundef %0) unnamed_addr #8 !dbg !6399 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6403, metadata !DIExpression()), !dbg !6404
  %2 = icmp ult i32 %0, 13, !dbg !6405
  ret i1 %2, !dbg !6406
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_format(i32 noundef %0, %struct.hal_uart_config_t* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !6407 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6411, metadata !DIExpression()), !dbg !6415
  call void @llvm.dbg.value(metadata %struct.hal_uart_config_t* %1, metadata !6412, metadata !DIExpression()), !dbg !6415
  %3 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #20, !dbg !6416
  br i1 %3, label %4, label %31, !dbg !6418

4:                                                ; preds = %2
  %5 = tail call fastcc zeroext i1 @uart_config_is_valid(%struct.hal_uart_config_t* noundef %1) #20, !dbg !6419
  br i1 %5, label %6, label %31, !dbg !6420

6:                                                ; preds = %4
  %7 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !6421
  %8 = load volatile i32, i32* %7, align 4, !dbg !6421
  %9 = icmp eq i32 %8, 0, !dbg !6423
  br i1 %9, label %31, label %10, !dbg !6424

10:                                               ; preds = %6
  %11 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !6425
  call void @llvm.dbg.value(metadata i32 %11, metadata !6413, metadata !DIExpression()), !dbg !6415
  %12 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 0, !dbg !6426
  %13 = load i32, i32* %12, align 4, !dbg !6426
  %14 = getelementptr inbounds [4 x %struct.hal_uart_config_t], [4 x %struct.hal_uart_config_t]* @g_uart_config, i32 0, i32 %0, i32 0, !dbg !6427
  store i32 %13, i32* %14, align 4, !dbg !6428
  %15 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 1, !dbg !6429
  %16 = load i32, i32* %15, align 4, !dbg !6429
  %17 = getelementptr inbounds [4 x %struct.hal_uart_config_t], [4 x %struct.hal_uart_config_t]* @g_uart_config, i32 0, i32 %0, i32 1, !dbg !6430
  store i32 %16, i32* %17, align 4, !dbg !6431
  %18 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 2, !dbg !6432
  %19 = load i32, i32* %18, align 4, !dbg !6432
  %20 = getelementptr inbounds [4 x %struct.hal_uart_config_t], [4 x %struct.hal_uart_config_t]* @g_uart_config, i32 0, i32 %0, i32 2, !dbg !6433
  store i32 %19, i32* %20, align 4, !dbg !6434
  %21 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 3, !dbg !6435
  %22 = load i32, i32* %21, align 4, !dbg !6435
  %23 = getelementptr inbounds [4 x %struct.hal_uart_config_t], [4 x %struct.hal_uart_config_t]* @g_uart_config, i32 0, i32 %0, i32 3, !dbg !6436
  store i32 %22, i32* %23, align 4, !dbg !6437
  tail call void @restore_interrupt_mask(i32 noundef %11) #21, !dbg !6438
  %24 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !6439
  %25 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %24, align 4, !dbg !6439
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %25, metadata !6414, metadata !DIExpression()), !dbg !6415
  %26 = load i32, i32* %12, align 4, !dbg !6440
  %27 = tail call i32 @hal_uart_set_baudrate(i32 noundef %0, i32 noundef %26) #20, !dbg !6441
  %28 = load i32, i32* %15, align 4, !dbg !6442
  %29 = load i32, i32* %18, align 4, !dbg !6443
  %30 = load i32, i32* %21, align 4, !dbg !6444
  tail call void @uart_set_format(%struct.UART_REGISTER_T* noundef %25, i32 noundef %28, i32 noundef %29, i32 noundef %30) #21, !dbg !6445
  br label %31, !dbg !6446

31:                                               ; preds = %6, %2, %4, %10
  %32 = phi i32 [ 0, %10 ], [ -4, %4 ], [ -4, %2 ], [ -2, %6 ], !dbg !6415
  ret i32 %32, !dbg !6447
}

; Function Attrs: noinline nounwind optsize
define dso_local void @hal_uart_put_char(i32 noundef %0, i8 noundef zeroext %1) local_unnamed_addr #0 !dbg !6448 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6452, metadata !DIExpression()), !dbg !6455
  call void @llvm.dbg.value(metadata i8 %1, metadata !6453, metadata !DIExpression()), !dbg !6455
  %3 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #20, !dbg !6456
  br i1 %3, label %4, label %11, !dbg !6458

4:                                                ; preds = %2
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !6459
  %6 = load volatile i32, i32* %5, align 4, !dbg !6459
  %7 = icmp eq i32 %6, 1, !dbg !6461
  br i1 %7, label %8, label %11, !dbg !6462

8:                                                ; preds = %4
  %9 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !6463
  %10 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %9, align 4, !dbg !6463
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %10, metadata !6454, metadata !DIExpression()), !dbg !6455
  tail call void @uart_put_char_block(%struct.UART_REGISTER_T* noundef %10, i8 noundef zeroext %1) #21, !dbg !6464
  br label %11, !dbg !6465

11:                                               ; preds = %4, %2, %8
  ret void, !dbg !6465
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_send_polling(i32 noundef %0, i8* noundef readonly %1, i32 noundef %2) local_unnamed_addr #0 !dbg !6466 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6471, metadata !DIExpression()), !dbg !6475
  call void @llvm.dbg.value(metadata i8* %1, metadata !6472, metadata !DIExpression()), !dbg !6475
  call void @llvm.dbg.value(metadata i32 %2, metadata !6473, metadata !DIExpression()), !dbg !6475
  call void @llvm.dbg.value(metadata i32 0, metadata !6474, metadata !DIExpression()), !dbg !6475
  %4 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #20, !dbg !6476
  %5 = icmp ne i8* %1, null
  %6 = and i1 %5, %4, !dbg !6478
  br i1 %6, label %7, label %20, !dbg !6478

7:                                                ; preds = %3
  %8 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !6479
  %9 = load volatile i32, i32* %8, align 4, !dbg !6479
  %10 = icmp ne i32 %9, 1, !dbg !6481
  %11 = icmp eq i32 %2, 0
  %12 = or i1 %10, %11, !dbg !6482
  call void @llvm.dbg.value(metadata i32 0, metadata !6474, metadata !DIExpression()), !dbg !6475
  call void @llvm.dbg.value(metadata i8* %1, metadata !6472, metadata !DIExpression()), !dbg !6475
  br i1 %12, label %20, label %13, !dbg !6482

13:                                               ; preds = %7, %13
  %14 = phi i32 [ %18, %13 ], [ 0, %7 ]
  %15 = phi i8* [ %17, %13 ], [ %1, %7 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !6474, metadata !DIExpression()), !dbg !6475
  call void @llvm.dbg.value(metadata i8* %15, metadata !6472, metadata !DIExpression()), !dbg !6475
  %16 = load i8, i8* %15, align 1, !dbg !6483
  tail call void @hal_uart_put_char(i32 noundef %0, i8 noundef zeroext %16) #20, !dbg !6487
  %17 = getelementptr inbounds i8, i8* %15, i32 1, !dbg !6488
  call void @llvm.dbg.value(metadata i8* %17, metadata !6472, metadata !DIExpression()), !dbg !6475
  %18 = add nuw i32 %14, 1, !dbg !6489
  call void @llvm.dbg.value(metadata i32 %18, metadata !6474, metadata !DIExpression()), !dbg !6475
  %19 = icmp eq i32 %18, %2, !dbg !6490
  br i1 %19, label %20, label %13, !dbg !6491, !llvm.loop !6492

20:                                               ; preds = %13, %7, %3
  %21 = phi i32 [ 0, %3 ], [ 0, %7 ], [ %2, %13 ], !dbg !6475
  ret i32 %21, !dbg !6494
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_send_dma(i32 noundef %0, i8* noundef readonly %1, i32 noundef %2) local_unnamed_addr #0 !dbg !6495 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6497, metadata !DIExpression()), !dbg !6506
  call void @llvm.dbg.value(metadata i8* %1, metadata !6498, metadata !DIExpression()), !dbg !6506
  call void @llvm.dbg.value(metadata i32 %2, metadata !6499, metadata !DIExpression()), !dbg !6506
  %5 = bitcast i32* %4 to i8*, !dbg !6507
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #22, !dbg !6507
  %6 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #20, !dbg !6508
  %7 = xor i1 %6, true, !dbg !6510
  %8 = icmp eq i8* %1, null
  %9 = or i1 %8, %7, !dbg !6510
  %10 = icmp eq i32 %2, 0
  %11 = or i1 %10, %9, !dbg !6510
  br i1 %11, label %54, label %12, !dbg !6510

12:                                               ; preds = %3
  %13 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !6511
  %14 = load volatile i32, i32* %13, align 4, !dbg !6511
  %15 = icmp eq i32 %14, 2, !dbg !6513
  br i1 %15, label %16, label %54, !dbg !6514

16:                                               ; preds = %12
  %17 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !6515
  call void @llvm.dbg.value(metadata i32 %17, metadata !6505, metadata !DIExpression()), !dbg !6506
  %18 = getelementptr inbounds [4 x i8], [4 x i8]* @g_uart_send_lock_status, i32 0, i32 %0, !dbg !6516
  %19 = load i8, i8* %18, align 1, !dbg !6516, !range !3343
  %20 = icmp eq i8 %19, 0, !dbg !6518
  br i1 %20, label %21, label %25, !dbg !6519

21:                                               ; preds = %16
  %22 = getelementptr inbounds [4 x i8], [4 x i8]* @g_uart_sleep_handler, i32 0, i32 %0, !dbg !6520
  %23 = load i8, i8* %22, align 1, !dbg !6520
  %24 = tail call i32 @hal_sleep_manager_lock_sleep(i8 noundef zeroext %23) #21, !dbg !6522
  store i8 1, i8* %18, align 1, !dbg !6523
  br label %25, !dbg !6524

25:                                               ; preds = %21, %16
  tail call void @restore_interrupt_mask(i32 noundef %17) #21, !dbg !6525
  %26 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #21, !dbg !6526
  call void @llvm.dbg.value(metadata i32 %26, metadata !6500, metadata !DIExpression()), !dbg !6506
  call void @llvm.dbg.value(metadata i32* %4, metadata !6503, metadata !DIExpression(DW_OP_deref)), !dbg !6506
  %27 = call i32 @vdma_get_available_send_space(i32 noundef %26, i32* noundef nonnull %4) #21, !dbg !6527
  call void @llvm.dbg.value(metadata i32 %27, metadata !6504, metadata !DIExpression()), !dbg !6506
  %28 = icmp eq i32 %27, 0, !dbg !6528
  br i1 %28, label %30, label %29, !dbg !6530

29:                                               ; preds = %25
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.55, i32 0, i32 0), i32 noundef 708, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.hal_uart_send_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.56, i32 0, i32 0)) #23, !dbg !6531
  unreachable, !dbg !6531

30:                                               ; preds = %25
  %31 = load i32, i32* %4, align 4, !dbg !6533
  call void @llvm.dbg.value(metadata i32 %31, metadata !6503, metadata !DIExpression()), !dbg !6506
  %32 = icmp ult i32 %31, %2, !dbg !6535
  %33 = select i1 %32, i32 %31, i32 %2
  call void @llvm.dbg.value(metadata i32 %33, metadata !6502, metadata !DIExpression()), !dbg !6506
  call void @llvm.dbg.value(metadata i32 0, metadata !6501, metadata !DIExpression()), !dbg !6506
  %34 = icmp eq i32 %33, 0, !dbg !6536
  br i1 %34, label %47, label %37, !dbg !6539

35:                                               ; preds = %37
  call void @llvm.dbg.value(metadata i32 %43, metadata !6501, metadata !DIExpression()), !dbg !6506
  %36 = icmp eq i32 %43, %33, !dbg !6536
  br i1 %36, label %45, label %37, !dbg !6539, !llvm.loop !6540

37:                                               ; preds = %30, %35
  %38 = phi i32 [ %43, %35 ], [ 0, %30 ]
  call void @llvm.dbg.value(metadata i32 %38, metadata !6501, metadata !DIExpression()), !dbg !6506
  %39 = getelementptr inbounds i8, i8* %1, i32 %38, !dbg !6542
  %40 = load i8, i8* %39, align 1, !dbg !6542
  %41 = call i32 @vdma_push_data(i32 noundef %26, i8 noundef zeroext %40) #21, !dbg !6544
  call void @llvm.dbg.value(metadata i32 %41, metadata !6504, metadata !DIExpression()), !dbg !6506
  %42 = icmp eq i32 %41, 0, !dbg !6545
  %43 = add nuw i32 %38, 1, !dbg !6547
  call void @llvm.dbg.value(metadata i32 %43, metadata !6501, metadata !DIExpression()), !dbg !6506
  br i1 %42, label %35, label %44, !dbg !6548

44:                                               ; preds = %37
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.55, i32 0, i32 0), i32 noundef 720, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.hal_uart_send_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.56, i32 0, i32 0)) #23, !dbg !6549
  unreachable, !dbg !6549

45:                                               ; preds = %35
  %46 = load i32, i32* %4, align 4, !dbg !6551
  br label %47, !dbg !6551

47:                                               ; preds = %45, %30
  %48 = phi i32 [ %46, %45 ], [ %31, %30 ], !dbg !6551
  call void @llvm.dbg.value(metadata i32 %48, metadata !6503, metadata !DIExpression()), !dbg !6506
  %49 = icmp eq i32 %33, %48, !dbg !6553
  br i1 %49, label %50, label %54, !dbg !6554

50:                                               ; preds = %47
  %51 = call i32 @vdma_enable_interrupt(i32 noundef %26) #21, !dbg !6555
  call void @llvm.dbg.value(metadata i32 %51, metadata !6504, metadata !DIExpression()), !dbg !6506
  %52 = icmp eq i32 %51, 0, !dbg !6557
  br i1 %52, label %54, label %53, !dbg !6559

53:                                               ; preds = %50
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.55, i32 0, i32 0), i32 noundef 731, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.hal_uart_send_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.56, i32 0, i32 0)) #23, !dbg !6560
  unreachable, !dbg !6560

54:                                               ; preds = %47, %50, %12, %3
  %55 = phi i32 [ 0, %3 ], [ 0, %12 ], [ %33, %50 ], [ %33, %47 ], !dbg !6506
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #22, !dbg !6562
  ret i32 %55, !dbg !6562
}

; Function Attrs: optsize
declare dso_local i32 @vdma_push_data(i32 noundef, i8 noundef zeroext) local_unnamed_addr #3

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i8 @hal_uart_get_char(i32 noundef %0) local_unnamed_addr #0 !dbg !6563 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6567, metadata !DIExpression()), !dbg !6570
  %2 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #20, !dbg !6571
  br i1 %2, label %3, label %11, !dbg !6573

3:                                                ; preds = %1
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !6574
  %5 = load volatile i32, i32* %4, align 4, !dbg !6574
  %6 = icmp eq i32 %5, 1, !dbg !6576
  br i1 %6, label %7, label %11, !dbg !6577

7:                                                ; preds = %3
  %8 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !6578
  %9 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %8, align 4, !dbg !6578
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %9, metadata !6569, metadata !DIExpression()), !dbg !6570
  %10 = tail call zeroext i8 @uart_get_char_block(%struct.UART_REGISTER_T* noundef %9) #21, !dbg !6579
  call void @llvm.dbg.value(metadata i8 %10, metadata !6568, metadata !DIExpression()), !dbg !6570
  br label %11, !dbg !6580

11:                                               ; preds = %3, %1, %7
  %12 = phi i8 [ %10, %7 ], [ 0, %1 ], [ 0, %3 ], !dbg !6570
  ret i8 %12, !dbg !6581
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_get_char_unblocking(i32 noundef %0) local_unnamed_addr #0 !dbg !6582 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6586, metadata !DIExpression()), !dbg !6589
  %2 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #20, !dbg !6590
  br i1 %2, label %3, label %11, !dbg !6592

3:                                                ; preds = %1
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !6593
  %5 = load volatile i32, i32* %4, align 4, !dbg !6593
  %6 = icmp eq i32 %5, 1, !dbg !6595
  br i1 %6, label %7, label %11, !dbg !6596

7:                                                ; preds = %3
  %8 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !6597
  %9 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %8, align 4, !dbg !6597
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %9, metadata !6588, metadata !DIExpression()), !dbg !6589
  %10 = tail call i32 @uart_get_char_unblocking(%struct.UART_REGISTER_T* noundef %9) #21, !dbg !6598
  call void @llvm.dbg.value(metadata i32 %10, metadata !6587, metadata !DIExpression()), !dbg !6589
  br label %11, !dbg !6599

11:                                               ; preds = %3, %1, %7
  %12 = phi i32 [ %10, %7 ], [ 0, %1 ], [ 0, %3 ], !dbg !6589
  ret i32 %12, !dbg !6600
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_receive_polling(i32 noundef %0, i8* noundef writeonly %1, i32 noundef %2) local_unnamed_addr #0 !dbg !6601 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6605, metadata !DIExpression()), !dbg !6610
  call void @llvm.dbg.value(metadata i8* %1, metadata !6606, metadata !DIExpression()), !dbg !6610
  call void @llvm.dbg.value(metadata i32 %2, metadata !6607, metadata !DIExpression()), !dbg !6610
  call void @llvm.dbg.value(metadata i8* %1, metadata !6609, metadata !DIExpression()), !dbg !6610
  %4 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #20, !dbg !6611
  %5 = icmp ne i8* %1, null
  %6 = and i1 %5, %4, !dbg !6613
  br i1 %6, label %7, label %19, !dbg !6613

7:                                                ; preds = %3
  %8 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !6614
  %9 = load volatile i32, i32* %8, align 4, !dbg !6614
  %10 = icmp ne i32 %9, 1, !dbg !6616
  %11 = icmp eq i32 %2, 0
  %12 = or i1 %10, %11, !dbg !6617
  call void @llvm.dbg.value(metadata i32 0, metadata !6608, metadata !DIExpression()), !dbg !6610
  br i1 %12, label %19, label %13, !dbg !6617

13:                                               ; preds = %7, %13
  %14 = phi i32 [ %17, %13 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !6608, metadata !DIExpression()), !dbg !6610
  %15 = tail call zeroext i8 @hal_uart_get_char(i32 noundef %0) #20, !dbg !6618
  %16 = getelementptr inbounds i8, i8* %1, i32 %14, !dbg !6622
  store i8 %15, i8* %16, align 1, !dbg !6623
  %17 = add nuw i32 %14, 1, !dbg !6624
  call void @llvm.dbg.value(metadata i32 %17, metadata !6608, metadata !DIExpression()), !dbg !6610
  %18 = icmp eq i32 %17, %2, !dbg !6625
  br i1 %18, label %19, label %13, !dbg !6626, !llvm.loop !6627

19:                                               ; preds = %13, %7, %3
  %20 = phi i32 [ 0, %3 ], [ 0, %7 ], [ %2, %13 ], !dbg !6610
  ret i32 %20, !dbg !6629
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_receive_dma(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !6630 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6632, metadata !DIExpression()), !dbg !6640
  call void @llvm.dbg.value(metadata i8* %1, metadata !6633, metadata !DIExpression()), !dbg !6640
  call void @llvm.dbg.value(metadata i32 %2, metadata !6634, metadata !DIExpression()), !dbg !6640
  %5 = bitcast i32* %4 to i8*, !dbg !6641
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #22, !dbg !6641
  %6 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #20, !dbg !6642
  %7 = xor i1 %6, true, !dbg !6644
  %8 = icmp eq i8* %1, null
  %9 = or i1 %8, %7, !dbg !6644
  %10 = icmp eq i32 %2, 0
  %11 = or i1 %10, %9, !dbg !6644
  br i1 %11, label %44, label %12, !dbg !6644

12:                                               ; preds = %3
  %13 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !6645
  %14 = load volatile i32, i32* %13, align 4, !dbg !6645
  %15 = icmp eq i32 %14, 2, !dbg !6647
  br i1 %15, label %16, label %44, !dbg !6648

16:                                               ; preds = %12
  %17 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #21, !dbg !6649
  call void @llvm.dbg.value(metadata i32 %17, metadata !6635, metadata !DIExpression()), !dbg !6640
  call void @llvm.dbg.value(metadata i32* %4, metadata !6637, metadata !DIExpression(DW_OP_deref)), !dbg !6640
  %18 = call i32 @vdma_get_available_receive_bytes(i32 noundef %17, i32* noundef nonnull %4) #21, !dbg !6650
  call void @llvm.dbg.value(metadata i32 %18, metadata !6639, metadata !DIExpression()), !dbg !6640
  %19 = icmp eq i32 %18, 0, !dbg !6651
  br i1 %19, label %21, label %20, !dbg !6653

20:                                               ; preds = %16
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.55, i32 0, i32 0), i32 noundef 821, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.hal_uart_receive_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.56, i32 0, i32 0)) #23, !dbg !6654
  unreachable, !dbg !6654

21:                                               ; preds = %16
  %22 = load i32, i32* %4, align 4, !dbg !6656
  call void @llvm.dbg.value(metadata i32 %22, metadata !6637, metadata !DIExpression()), !dbg !6640
  %23 = icmp ult i32 %22, %2, !dbg !6658
  %24 = select i1 %23, i32 %22, i32 %2
  call void @llvm.dbg.value(metadata i32 %24, metadata !6636, metadata !DIExpression()), !dbg !6640
  call void @llvm.dbg.value(metadata i32 0, metadata !6638, metadata !DIExpression()), !dbg !6640
  %25 = icmp eq i32 %24, 0, !dbg !6659
  br i1 %25, label %37, label %28, !dbg !6662

26:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %33, metadata !6638, metadata !DIExpression()), !dbg !6640
  %27 = icmp eq i32 %33, %24, !dbg !6659
  br i1 %27, label %35, label %28, !dbg !6662, !llvm.loop !6663

28:                                               ; preds = %21, %26
  %29 = phi i32 [ %33, %26 ], [ 0, %21 ]
  call void @llvm.dbg.value(metadata i32 %29, metadata !6638, metadata !DIExpression()), !dbg !6640
  %30 = getelementptr inbounds i8, i8* %1, i32 %29, !dbg !6665
  %31 = call i32 @vdma_pop_data(i32 noundef %17, i8* noundef %30) #21, !dbg !6667
  call void @llvm.dbg.value(metadata i32 %31, metadata !6639, metadata !DIExpression()), !dbg !6640
  %32 = icmp eq i32 %31, 0, !dbg !6668
  %33 = add nuw i32 %29, 1, !dbg !6670
  call void @llvm.dbg.value(metadata i32 %33, metadata !6638, metadata !DIExpression()), !dbg !6640
  br i1 %32, label %26, label %34, !dbg !6671

34:                                               ; preds = %28
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.55, i32 0, i32 0), i32 noundef 833, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.hal_uart_receive_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.56, i32 0, i32 0)) #23, !dbg !6672
  unreachable, !dbg !6672

35:                                               ; preds = %26
  %36 = load i32, i32* %4, align 4, !dbg !6674
  br label %37, !dbg !6674

37:                                               ; preds = %35, %21
  %38 = phi i32 [ %36, %35 ], [ %22, %21 ], !dbg !6674
  call void @llvm.dbg.value(metadata i32 %38, metadata !6637, metadata !DIExpression()), !dbg !6640
  %39 = icmp eq i32 %24, %38, !dbg !6676
  br i1 %39, label %40, label %44, !dbg !6677

40:                                               ; preds = %37
  %41 = call i32 @vdma_enable_interrupt(i32 noundef %17) #21, !dbg !6678
  call void @llvm.dbg.value(metadata i32 %41, metadata !6639, metadata !DIExpression()), !dbg !6640
  %42 = icmp eq i32 %41, 0, !dbg !6680
  br i1 %42, label %44, label %43, !dbg !6682

43:                                               ; preds = %40
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.55, i32 0, i32 0), i32 noundef 844, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.hal_uart_receive_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.56, i32 0, i32 0)) #23, !dbg !6683
  unreachable, !dbg !6683

44:                                               ; preds = %37, %40, %12, %3
  %45 = phi i32 [ 0, %3 ], [ 0, %12 ], [ %24, %40 ], [ %24, %37 ], !dbg !6640
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #22, !dbg !6685
  ret i32 %45, !dbg !6685
}

; Function Attrs: optsize
declare dso_local i32 @vdma_pop_data(i32 noundef, i8* noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_get_available_send_space(i32 noundef %0) local_unnamed_addr #0 !dbg !6686 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6688, metadata !DIExpression()), !dbg !6692
  %3 = bitcast i32* %2 to i8*, !dbg !6693
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #22, !dbg !6693
  %4 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #20, !dbg !6694
  br i1 %4, label %5, label %16, !dbg !6696

5:                                                ; preds = %1
  %6 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !6697
  %7 = load volatile i32, i32* %6, align 4, !dbg !6697
  %8 = icmp eq i32 %7, 2, !dbg !6699
  br i1 %8, label %9, label %16, !dbg !6700

9:                                                ; preds = %5
  %10 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #21, !dbg !6701
  call void @llvm.dbg.value(metadata i32 %10, metadata !6689, metadata !DIExpression()), !dbg !6692
  call void @llvm.dbg.value(metadata i32* %2, metadata !6690, metadata !DIExpression(DW_OP_deref)), !dbg !6692
  %11 = call i32 @vdma_get_available_send_space(i32 noundef %10, i32* noundef nonnull %2) #21, !dbg !6702
  call void @llvm.dbg.value(metadata i32 %11, metadata !6691, metadata !DIExpression()), !dbg !6692
  %12 = icmp eq i32 %11, 0, !dbg !6703
  br i1 %12, label %14, label %13, !dbg !6705

13:                                               ; preds = %9
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.55, i32 0, i32 0), i32 noundef 964, i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @__func__.hal_uart_get_available_send_space, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.56, i32 0, i32 0)) #23, !dbg !6706
  unreachable, !dbg !6706

14:                                               ; preds = %9
  %15 = load i32, i32* %2, align 4, !dbg !6708
  call void @llvm.dbg.value(metadata i32 %15, metadata !6690, metadata !DIExpression()), !dbg !6692
  br label %16, !dbg !6709

16:                                               ; preds = %5, %1, %14
  %17 = phi i32 [ %15, %14 ], [ 0, %1 ], [ 0, %5 ], !dbg !6692
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #22, !dbg !6710
  ret i32 %17, !dbg !6710
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_get_available_receive_bytes(i32 noundef %0) local_unnamed_addr #0 !dbg !6711 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6713, metadata !DIExpression()), !dbg !6717
  %3 = bitcast i32* %2 to i8*, !dbg !6718
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #22, !dbg !6718
  %4 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #20, !dbg !6719
  br i1 %4, label %5, label %16, !dbg !6721

5:                                                ; preds = %1
  %6 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !6722
  %7 = load volatile i32, i32* %6, align 4, !dbg !6722
  %8 = icmp eq i32 %7, 2, !dbg !6724
  br i1 %8, label %9, label %16, !dbg !6725

9:                                                ; preds = %5
  %10 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #21, !dbg !6726
  call void @llvm.dbg.value(metadata i32 %10, metadata !6714, metadata !DIExpression()), !dbg !6717
  call void @llvm.dbg.value(metadata i32* %2, metadata !6715, metadata !DIExpression(DW_OP_deref)), !dbg !6717
  %11 = call i32 @vdma_get_available_receive_bytes(i32 noundef %10, i32* noundef nonnull %2) #21, !dbg !6727
  call void @llvm.dbg.value(metadata i32 %11, metadata !6716, metadata !DIExpression()), !dbg !6717
  %12 = icmp eq i32 %11, 0, !dbg !6728
  br i1 %12, label %14, label %13, !dbg !6730

13:                                               ; preds = %9
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.55, i32 0, i32 0), i32 noundef 988, i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @__func__.hal_uart_get_available_receive_bytes, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.56, i32 0, i32 0)) #23, !dbg !6731
  unreachable, !dbg !6731

14:                                               ; preds = %9
  %15 = load i32, i32* %2, align 4, !dbg !6733
  call void @llvm.dbg.value(metadata i32 %15, metadata !6715, metadata !DIExpression()), !dbg !6717
  br label %16, !dbg !6734

16:                                               ; preds = %5, %1, %14
  %17 = phi i32 [ %15, %14 ], [ 0, %1 ], [ 0, %5 ], !dbg !6717
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #22, !dbg !6735
  ret i32 %17, !dbg !6735
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_disable_flowcontrol(i32 noundef %0) local_unnamed_addr #0 !dbg !6736 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6738, metadata !DIExpression()), !dbg !6740
  %2 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #20, !dbg !6741
  br i1 %2, label %3, label %11, !dbg !6743

3:                                                ; preds = %1
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !6744
  %5 = load volatile i32, i32* %4, align 4, !dbg !6744
  %6 = icmp eq i32 %5, 0, !dbg !6746
  br i1 %6, label %11, label %7, !dbg !6747

7:                                                ; preds = %3
  %8 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !6748
  %9 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %8, align 4, !dbg !6748
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %9, metadata !6739, metadata !DIExpression()), !dbg !6740
  tail call void @uart_disable_flowcontrol(%struct.UART_REGISTER_T* noundef %9) #21, !dbg !6749
  %10 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_flowcontrol_status, i32 0, i32 %0, !dbg !6750
  store i32 0, i32* %10, align 4, !dbg !6751
  br label %11, !dbg !6752

11:                                               ; preds = %3, %1, %7
  %12 = phi i32 [ 0, %7 ], [ -4, %1 ], [ -2, %3 ], !dbg !6740
  ret i32 %12, !dbg !6753
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_set_baudrate(%struct.UART_REGISTER_T* noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !6754 {
  %3 = alloca [10 x i32], align 4
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6813, metadata !DIExpression()), !dbg !6827
  call void @llvm.dbg.value(metadata i32 %1, metadata !6814, metadata !DIExpression()), !dbg !6827
  call void @llvm.dbg.declare(metadata [10 x i32]* @__const.uart_set_baudrate.fraction_L_mapping, metadata !6823, metadata !DIExpression()), !dbg !6828
  %4 = bitcast [10 x i32]* %3 to i8*, !dbg !6829
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %4) #22, !dbg !6829
  call void @llvm.dbg.declare(metadata [10 x i32]* %3, metadata !6826, metadata !DIExpression()), !dbg !6830
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(40) %4, i8 0, i32 20, i1 false), !dbg !6830
  %5 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 5, !dbg !6830
  store i32 1, i32* %5, align 4, !dbg !6830
  %6 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 6, !dbg !6830
  store i32 1, i32* %6, align 4, !dbg !6830
  %7 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 7, !dbg !6830
  store i32 1, i32* %7, align 4, !dbg !6830
  %8 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 8, !dbg !6830
  store i32 1, i32* %8, align 4, !dbg !6830
  %9 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 9, !dbg !6830
  store i32 1, i32* %9, align 4, !dbg !6830
  %10 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 13, !dbg !6831
  store volatile i32 0, i32* %10, align 4, !dbg !6832
  %11 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 21, !dbg !6833
  store volatile i32 0, i32* %11, align 4, !dbg !6834
  %12 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 22, !dbg !6835
  store volatile i32 0, i32* %12, align 4, !dbg !6836
  %13 = tail call zeroext i1 @is_clk_use_lfosc() #21, !dbg !6837
  br i1 %13, label %14, label %17, !dbg !6839

14:                                               ; preds = %2
  %15 = tail call i32 @clock_get_freq_lfosc() #21, !dbg !6840
  %16 = mul i32 %15, 1000, !dbg !6842
  call void @llvm.dbg.value(metadata i32 %16, metadata !6815, metadata !DIExpression()), !dbg !6827
  br label %17, !dbg !6843

17:                                               ; preds = %2, %14
  %18 = phi i32 [ %16, %14 ], [ 26000000, %2 ], !dbg !6844
  call void @llvm.dbg.value(metadata i32 %18, metadata !6815, metadata !DIExpression()), !dbg !6827
  %19 = shl i32 %1, 8, !dbg !6845
  %20 = udiv i32 %18, %19, !dbg !6846
  call void @llvm.dbg.value(metadata i32 %20, metadata !6816, metadata !DIExpression()), !dbg !6827
  %21 = mul i32 %18, 10, !dbg !6847
  %22 = udiv i32 %21, %19, !dbg !6848
  %23 = urem i32 %22, 10, !dbg !6849
  call void @llvm.dbg.value(metadata i32 %23, metadata !6817, metadata !DIExpression()), !dbg !6827
  %24 = icmp ne i32 %23, 0, !dbg !6850
  %25 = icmp ugt i32 %19, %18
  %26 = select i1 %24, i1 true, i1 %25, !dbg !6852
  %27 = zext i1 %26 to i32, !dbg !6852
  %28 = add i32 %20, %27, !dbg !6852
  call void @llvm.dbg.value(metadata i32 %28, metadata !6816, metadata !DIExpression()), !dbg !6827
  call void @llvm.dbg.value(metadata i32 %28, metadata !6819, metadata !DIExpression()), !dbg !6827
  call void @llvm.dbg.value(metadata i32 undef, metadata !6820, metadata !DIExpression()), !dbg !6827
  br label %29, !dbg !6853

29:                                               ; preds = %29, %17
  %30 = phi i32 [ %28, %17 ], [ %34, %29 ], !dbg !6827
  %31 = mul i32 %30, %1, !dbg !6827
  %32 = udiv i32 %18, %31, !dbg !6827
  call void @llvm.dbg.value(metadata i32 %32, metadata !6820, metadata !DIExpression()), !dbg !6827
  call void @llvm.dbg.value(metadata i32 %30, metadata !6819, metadata !DIExpression()), !dbg !6827
  %33 = icmp ugt i32 %32, 256, !dbg !6854
  %34 = add i32 %30, 1, !dbg !6855
  call void @llvm.dbg.value(metadata i32 %34, metadata !6819, metadata !DIExpression()), !dbg !6827
  call void @llvm.dbg.value(metadata i32 undef, metadata !6820, metadata !DIExpression()), !dbg !6827
  br i1 %33, label %29, label %35, !dbg !6853, !llvm.loop !6857

35:                                               ; preds = %29
  %36 = udiv i32 %21, %31, !dbg !6859
  %37 = urem i32 %36, 10, !dbg !6860
  call void @llvm.dbg.value(metadata i32 %37, metadata !6818, metadata !DIExpression()), !dbg !6827
  %38 = add nsw i32 %32, -1, !dbg !6861
  call void @llvm.dbg.value(metadata i32 %38, metadata !6820, metadata !DIExpression()), !dbg !6827
  %39 = add nsw i32 %32, -2, !dbg !6862
  %40 = lshr i32 %39, 1, !dbg !6863
  call void @llvm.dbg.value(metadata i32 %40, metadata !6821, metadata !DIExpression()), !dbg !6827
  %41 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 9, !dbg !6864
  store volatile i32 3, i32* %41, align 4, !dbg !6865
  %42 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !6866
  %43 = load volatile i32, i32* %42, align 4, !dbg !6866
  call void @llvm.dbg.value(metadata i32 %43, metadata !6822, metadata !DIExpression()), !dbg !6827
  %44 = or i32 %43, 128, !dbg !6867
  store volatile i32 %44, i32* %42, align 4, !dbg !6868
  %45 = and i32 %30, 255, !dbg !6869
  %46 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 0, i32 0, !dbg !6870
  store volatile i32 %45, i32* %46, align 4, !dbg !6871
  %47 = lshr i32 %30, 8, !dbg !6872
  %48 = and i32 %47, 255, !dbg !6873
  %49 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 1, i32 0, !dbg !6874
  store volatile i32 %48, i32* %49, align 4, !dbg !6875
  store volatile i32 %43, i32* %42, align 4, !dbg !6876
  %50 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 10, !dbg !6877
  store volatile i32 %38, i32* %50, align 4, !dbg !6878
  %51 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 11, !dbg !6879
  store volatile i32 %40, i32* %51, align 4, !dbg !6880
  %52 = getelementptr inbounds [10 x i32], [10 x i32]* @__const.uart_set_baudrate.fraction_L_mapping, i32 0, i32 %37, !dbg !6881
  %53 = load i32, i32* %52, align 4, !dbg !6881
  store volatile i32 %53, i32* %11, align 4, !dbg !6882
  %54 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 %37, !dbg !6883
  %55 = load i32, i32* %54, align 4, !dbg !6883
  store volatile i32 %55, i32* %12, align 4, !dbg !6884
  %56 = icmp ugt i32 %1, 2999999, !dbg !6885
  br i1 %56, label %57, label %59, !dbg !6887

57:                                               ; preds = %35
  %58 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 15, !dbg !6888
  store volatile i32 18, i32* %58, align 4, !dbg !6890
  br label %59, !dbg !6891

59:                                               ; preds = %57, %35
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %4) #22, !dbg !6892
  ret void, !dbg !6892
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #15

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_format(%struct.UART_REGISTER_T* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #10 !dbg !6893 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6897, metadata !DIExpression()), !dbg !6902
  call void @llvm.dbg.value(metadata i32 %1, metadata !6898, metadata !DIExpression()), !dbg !6902
  call void @llvm.dbg.value(metadata i32 %2, metadata !6899, metadata !DIExpression()), !dbg !6902
  call void @llvm.dbg.value(metadata i32 %3, metadata !6900, metadata !DIExpression()), !dbg !6902
  %5 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !6903
  %6 = load volatile i32, i32* %5, align 4, !dbg !6903
  call void @llvm.dbg.value(metadata i32 %6, metadata !6901, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6902
  store volatile i32 128, i32* %5, align 4, !dbg !6904
  %7 = trunc i32 %6 to i16, !dbg !6905
  %8 = and i16 %7, -4, !dbg !6905
  call void @llvm.dbg.value(metadata i16 %7, metadata !6901, metadata !DIExpression(DW_OP_constu, 18446744073709551612, DW_OP_and, DW_OP_stack_value)), !dbg !6902
  switch i32 %1, label %15 [
    i32 3, label %13
    i32 1, label %9
    i32 2, label %11
  ], !dbg !6906

9:                                                ; preds = %4
  %10 = or i16 %8, 1, !dbg !6907
  call void @llvm.dbg.value(metadata i16 %10, metadata !6901, metadata !DIExpression()), !dbg !6902
  br label %15, !dbg !6909

11:                                               ; preds = %4
  %12 = or i16 %8, 2, !dbg !6910
  call void @llvm.dbg.value(metadata i16 %12, metadata !6901, metadata !DIExpression()), !dbg !6902
  br label %15, !dbg !6911

13:                                               ; preds = %4
  %14 = or i16 %7, 3, !dbg !6912
  call void @llvm.dbg.value(metadata i16 %14, metadata !6901, metadata !DIExpression()), !dbg !6902
  br label %15, !dbg !6913

15:                                               ; preds = %4, %13, %11, %9
  %16 = phi i16 [ %14, %13 ], [ %12, %11 ], [ %10, %9 ], [ %8, %4 ], !dbg !6902
  call void @llvm.dbg.value(metadata i16 %16, metadata !6901, metadata !DIExpression()), !dbg !6902
  %17 = and i16 %16, -61, !dbg !6914
  call void @llvm.dbg.value(metadata i16 %16, metadata !6901, metadata !DIExpression(DW_OP_constu, 18446744073709551611, DW_OP_and, DW_OP_stack_value)), !dbg !6902
  %18 = icmp eq i32 %2, 1, !dbg !6915
  %19 = select i1 %18, i16 4, i16 0, !dbg !6915
  %20 = or i16 %17, %19, !dbg !6915
  call void @llvm.dbg.value(metadata !DIArgList(i16 %17, i16 %19), metadata !6901, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !6902
  call void @llvm.dbg.value(metadata i16 %20, metadata !6901, metadata !DIExpression()), !dbg !6902
  %21 = icmp eq i32 %3, 2, !dbg !6916
  %22 = or i16 %20, 16, !dbg !6916
  %23 = select i1 %21, i16 %22, i16 %20, !dbg !6916
  call void @llvm.dbg.value(metadata i16 %23, metadata !6901, metadata !DIExpression()), !dbg !6902
  %24 = zext i16 %23 to i32, !dbg !6917
  store volatile i32 %24, i32* %5, align 4, !dbg !6918
  ret void, !dbg !6919
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_put_char_block(%struct.UART_REGISTER_T* noundef %0, i8 noundef zeroext %1) local_unnamed_addr #10 !dbg !6920 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6924, metadata !DIExpression()), !dbg !6927
  call void @llvm.dbg.value(metadata i8 %1, metadata !6925, metadata !DIExpression()), !dbg !6927
  %3 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0
  br label %4, !dbg !6928

4:                                                ; preds = %4, %2
  %5 = load volatile i32, i32* %3, align 4, !dbg !6929
  call void @llvm.dbg.value(metadata i32 %5, metadata !6926, metadata !DIExpression()), !dbg !6927
  %6 = and i32 %5, 32, !dbg !6931
  %7 = icmp eq i32 %6, 0, !dbg !6931
  br i1 %7, label %4, label %8, !dbg !6933, !llvm.loop !6934

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !6936
  %10 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 0, i32 0, !dbg !6938
  store volatile i32 %9, i32* %10, align 4, !dbg !6939
  ret void, !dbg !6940
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local zeroext i8 @uart_get_char_block(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #10 !dbg !6941 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6945, metadata !DIExpression()), !dbg !6948
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0
  br label %3, !dbg !6949

3:                                                ; preds = %3, %1
  %4 = load volatile i32, i32* %2, align 4, !dbg !6950
  call void @llvm.dbg.value(metadata i32 %4, metadata !6946, metadata !DIExpression()), !dbg !6948
  %5 = and i32 %4, 1, !dbg !6952
  %6 = icmp eq i32 %5, 0, !dbg !6952
  br i1 %6, label %3, label %7, !dbg !6954, !llvm.loop !6955

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 0, i32 0, !dbg !6957
  %9 = load volatile i32, i32* %8, align 4, !dbg !6957
  %10 = trunc i32 %9 to i8, !dbg !6959
  call void @llvm.dbg.value(metadata i8 %10, metadata !6947, metadata !DIExpression()), !dbg !6948
  ret i8 %10, !dbg !6960
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @uart_get_char_unblocking(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #9 !dbg !6961 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6965, metadata !DIExpression()), !dbg !6968
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0, !dbg !6969
  %3 = load volatile i32, i32* %2, align 4, !dbg !6969
  call void @llvm.dbg.value(metadata i32 %3, metadata !6966, metadata !DIExpression()), !dbg !6968
  %4 = and i32 %3, 1, !dbg !6970
  %5 = icmp eq i32 %4, 0, !dbg !6970
  br i1 %5, label %9, label %6, !dbg !6972

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 0, i32 0, !dbg !6973
  %8 = load volatile i32, i32* %7, align 4, !dbg !6973
  call void @llvm.dbg.value(metadata i32 %8, metadata !6967, metadata !DIExpression()), !dbg !6968
  br label %9, !dbg !6975

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %1 ], !dbg !6976
  call void @llvm.dbg.value(metadata i32 %10, metadata !6967, metadata !DIExpression()), !dbg !6968
  ret i32 %10, !dbg !6977
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_hardware_flowcontrol(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #10 !dbg !6978 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6982, metadata !DIExpression()), !dbg !6985
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !6986
  %3 = load volatile i32, i32* %2, align 4, !dbg !6986
  call void @llvm.dbg.value(metadata i32 %3, metadata !6984, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6985
  store volatile i32 191, i32* %2, align 4, !dbg !6987
  %4 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !6988
  %5 = load volatile i32, i32* %4, align 4, !dbg !6988
  call void @llvm.dbg.value(metadata i32 %5, metadata !6983, metadata !DIExpression()), !dbg !6985
  %6 = and i32 %5, 65343, !dbg !6989
  %7 = or i32 %6, 192, !dbg !6989
  call void @llvm.dbg.value(metadata i32 %5, metadata !6983, metadata !DIExpression(DW_OP_constu, 192, DW_OP_or, DW_OP_stack_value)), !dbg !6985
  store volatile i32 %7, i32* %4, align 4, !dbg !6990
  %8 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 17, !dbg !6991
  store volatile i32 0, i32* %8, align 4, !dbg !6992
  store volatile i32 0, i32* %2, align 4, !dbg !6993
  %9 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 4, i32 0, !dbg !6994
  store volatile i32 2, i32* %9, align 4, !dbg !6995
  %10 = and i32 %3, 65535, !dbg !6996
  store volatile i32 %10, i32* %2, align 4, !dbg !6997
  ret void, !dbg !6998
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_software_flowcontrol(%struct.UART_REGISTER_T* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) local_unnamed_addr #10 !dbg !6999 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !7003, metadata !DIExpression()), !dbg !7009
  call void @llvm.dbg.value(metadata i8 %1, metadata !7004, metadata !DIExpression()), !dbg !7009
  call void @llvm.dbg.value(metadata i8 %2, metadata !7005, metadata !DIExpression()), !dbg !7009
  call void @llvm.dbg.value(metadata i8 %3, metadata !7006, metadata !DIExpression()), !dbg !7009
  %5 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !7010
  %6 = load volatile i32, i32* %5, align 4, !dbg !7010
  call void @llvm.dbg.value(metadata i32 %6, metadata !7008, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7009
  store volatile i32 191, i32* %5, align 4, !dbg !7011
  %7 = zext i8 %1 to i32, !dbg !7012
  %8 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 4, i32 0, !dbg !7013
  store volatile i32 %7, i32* %8, align 4, !dbg !7014
  %9 = zext i8 %2 to i32, !dbg !7015
  %10 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 6, !dbg !7016
  store volatile i32 %9, i32* %10, align 4, !dbg !7017
  %11 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !7018
  %12 = load volatile i32, i32* %11, align 4, !dbg !7018
  call void @llvm.dbg.value(metadata i32 %12, metadata !7007, metadata !DIExpression()), !dbg !7009
  %13 = and i32 %12, 65509, !dbg !7019
  %14 = or i32 %13, 26, !dbg !7019
  call void @llvm.dbg.value(metadata i32 %12, metadata !7007, metadata !DIExpression(DW_OP_constu, 26, DW_OP_or, DW_OP_stack_value)), !dbg !7009
  store volatile i32 %14, i32* %11, align 4, !dbg !7020
  %15 = zext i8 %3 to i32, !dbg !7021
  %16 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 16, !dbg !7022
  store volatile i32 %15, i32* %16, align 4, !dbg !7023
  %17 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 17, !dbg !7024
  store volatile i32 1, i32* %17, align 4, !dbg !7025
  %18 = and i32 %6, 65535, !dbg !7026
  store volatile i32 %18, i32* %5, align 4, !dbg !7027
  ret void, !dbg !7028
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_disable_flowcontrol(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #10 !dbg !7029 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !7031, metadata !DIExpression()), !dbg !7033
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !7034
  %3 = load volatile i32, i32* %2, align 4, !dbg !7034
  call void @llvm.dbg.value(metadata i32 %3, metadata !7032, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7033
  store volatile i32 191, i32* %2, align 4, !dbg !7035
  %4 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !7036
  store volatile i32 0, i32* %4, align 4, !dbg !7037
  store volatile i32 0, i32* %2, align 4, !dbg !7038
  %5 = and i32 %3, 65535, !dbg !7039
  store volatile i32 %5, i32* %2, align 4, !dbg !7040
  ret void, !dbg !7041
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_fifo(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #10 !dbg !7042 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !7044, metadata !DIExpression()), !dbg !7047
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !7048
  %3 = load volatile i32, i32* %2, align 4, !dbg !7048
  call void @llvm.dbg.value(metadata i32 %3, metadata !7046, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7047
  store volatile i32 191, i32* %2, align 4, !dbg !7049
  %4 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !7050
  %5 = load volatile i32, i32* %4, align 4, !dbg !7050
  call void @llvm.dbg.value(metadata i32 %5, metadata !7045, metadata !DIExpression()), !dbg !7047
  %6 = and i32 %5, 65519, !dbg !7051
  %7 = or i32 %6, 16, !dbg !7051
  call void @llvm.dbg.value(metadata i32 %5, metadata !7045, metadata !DIExpression(DW_OP_constu, 16, DW_OP_or, DW_OP_stack_value)), !dbg !7047
  store volatile i32 %7, i32* %4, align 4, !dbg !7052
  store volatile i32 0, i32* %2, align 4, !dbg !7053
  store volatile i32 135, i32* %4, align 4, !dbg !7054
  %8 = and i32 %3, 65535, !dbg !7055
  store volatile i32 %8, i32* %2, align 4, !dbg !7056
  ret void, !dbg !7057
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_sleep_mode(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #10 !dbg !7058 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !7060, metadata !DIExpression()), !dbg !7061
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 18, !dbg !7062
  store volatile i32 1, i32* %2, align 4, !dbg !7063
  ret void, !dbg !7064
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_unmask_send_interrupt(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #10 !dbg !7065 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !7067, metadata !DIExpression()), !dbg !7070
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !7071
  %3 = load volatile i32, i32* %2, align 4, !dbg !7071
  call void @llvm.dbg.value(metadata i32 %3, metadata !7069, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7070
  %4 = load volatile i32, i32* %2, align 4, !dbg !7072
  %5 = and i32 %4, -129, !dbg !7072
  store volatile i32 %5, i32* %2, align 4, !dbg !7072
  %6 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 1, i32 0, !dbg !7073
  %7 = load volatile i32, i32* %6, align 4, !dbg !7073
  call void @llvm.dbg.value(metadata i32 %7, metadata !7068, metadata !DIExpression()), !dbg !7070
  %8 = and i32 %7, 65533, !dbg !7074
  %9 = or i32 %8, 2, !dbg !7074
  call void @llvm.dbg.value(metadata i32 %7, metadata !7068, metadata !DIExpression(DW_OP_constu, 2, DW_OP_or, DW_OP_stack_value)), !dbg !7070
  store volatile i32 %9, i32* %6, align 4, !dbg !7075
  %10 = and i32 %3, 65535, !dbg !7076
  %11 = load volatile i32, i32* %2, align 4, !dbg !7077
  %12 = and i32 %10, %11, !dbg !7077
  store volatile i32 %12, i32* %2, align 4, !dbg !7077
  ret void, !dbg !7078
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_unmask_receive_interrupt(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #10 !dbg !7079 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !7081, metadata !DIExpression()), !dbg !7084
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !7085
  %3 = load volatile i32, i32* %2, align 4, !dbg !7085
  call void @llvm.dbg.value(metadata i32 %3, metadata !7083, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7084
  %4 = load volatile i32, i32* %2, align 4, !dbg !7086
  %5 = and i32 %4, -129, !dbg !7086
  store volatile i32 %5, i32* %2, align 4, !dbg !7086
  %6 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 1, i32 0, !dbg !7087
  %7 = load volatile i32, i32* %6, align 4, !dbg !7087
  call void @llvm.dbg.value(metadata i32 %7, metadata !7082, metadata !DIExpression()), !dbg !7084
  %8 = and i32 %7, 65530, !dbg !7088
  %9 = or i32 %8, 5, !dbg !7088
  call void @llvm.dbg.value(metadata i32 %7, metadata !7082, metadata !DIExpression(DW_OP_constu, 5, DW_OP_or, DW_OP_stack_value)), !dbg !7084
  store volatile i32 %9, i32* %6, align 4, !dbg !7089
  %10 = and i32 %3, 65535, !dbg !7090
  %11 = load volatile i32, i32* %2, align 4, !dbg !7091
  %12 = and i32 %10, %11, !dbg !7091
  store volatile i32 %12, i32* %2, align 4, !dbg !7091
  ret void, !dbg !7092
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_purge_fifo(%struct.UART_REGISTER_T* noundef %0, i32 noundef %1) local_unnamed_addr #10 !dbg !7093 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !7097, metadata !DIExpression()), !dbg !7100
  call void @llvm.dbg.value(metadata i32 %1, metadata !7098, metadata !DIExpression()), !dbg !7100
  call void @llvm.dbg.value(metadata i16 145, metadata !7099, metadata !DIExpression()), !dbg !7100
  %3 = icmp eq i32 %1, 0, !dbg !7101
  %4 = select i1 %3, i32 149, i32 147
  call void @llvm.dbg.value(metadata i16 undef, metadata !7099, metadata !DIExpression()), !dbg !7100
  %5 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !7103
  store volatile i32 %4, i32* %5, align 4, !dbg !7104
  ret void, !dbg !7105
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @uart_query_interrupt_type(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #9 !dbg !7106 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !7111, metadata !DIExpression()), !dbg !7115
  call void @llvm.dbg.value(metadata i32 0, metadata !7114, metadata !DIExpression()), !dbg !7115
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !7116
  %3 = load volatile i32, i32* %2, align 4, !dbg !7116
  call void @llvm.dbg.value(metadata i32 %3, metadata !7112, metadata !DIExpression()), !dbg !7115
  %4 = and i32 %3, 1, !dbg !7117
  %5 = icmp eq i32 %4, 0, !dbg !7117
  br i1 %5, label %6, label %16, !dbg !7119

6:                                                ; preds = %1
  %7 = and i32 %3, 63, !dbg !7120
  switch i32 %7, label %16 [
    i32 12, label %8
    i32 6, label %9
    i32 2, label %15
  ], !dbg !7121

8:                                                ; preds = %6
  call void @llvm.dbg.value(metadata i32 2, metadata !7114, metadata !DIExpression()), !dbg !7115
  br label %16, !dbg !7122

9:                                                ; preds = %6
  %10 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0, !dbg !7124
  %11 = load volatile i32, i32* %10, align 4, !dbg !7124
  call void @llvm.dbg.value(metadata i32 %11, metadata !7113, metadata !DIExpression()), !dbg !7115
  %12 = and i32 %11, 16, !dbg !7125
  %13 = icmp eq i32 %12, 0, !dbg !7125
  %14 = select i1 %13, i32 1, i32 3
  br label %16

15:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i32 5, metadata !7114, metadata !DIExpression()), !dbg !7115
  br label %16, !dbg !7127

16:                                               ; preds = %8, %15, %6, %9, %1
  %17 = phi i32 [ 0, %1 ], [ 0, %6 ], [ 5, %15 ], [ 2, %8 ], [ %14, %9 ], !dbg !7115
  ret i32 %17, !dbg !7128
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @uart_verify_error(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #9 !dbg !7129 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !7133, metadata !DIExpression()), !dbg !7136
  call void @llvm.dbg.value(metadata i32 0, metadata !7135, metadata !DIExpression()), !dbg !7136
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0, !dbg !7137
  %3 = load volatile i32, i32* %2, align 4, !dbg !7137
  call void @llvm.dbg.value(metadata i32 %3, metadata !7134, metadata !DIExpression()), !dbg !7136
  %4 = and i32 %3, 14, !dbg !7138
  %5 = icmp eq i32 %4, 0, !dbg !7138
  %6 = sext i1 %5 to i32, !dbg !7140
  call void @llvm.dbg.value(metadata i32 %6, metadata !7135, metadata !DIExpression()), !dbg !7136
  ret i32 %6, !dbg !7141
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @uart_clear_timeout_interrupt(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #9 !dbg !7142 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !7144, metadata !DIExpression()), !dbg !7146
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 19, !dbg !7147
  %3 = load volatile i32, i32* %2, align 4, !dbg !7147
  call void @llvm.dbg.value(metadata i32 %3, metadata !7145, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7146
  call void @llvm.dbg.value(metadata i32 %3, metadata !7145, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7146
  ret void, !dbg !7148
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_reset_default_value(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #10 !dbg !7149 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !7151, metadata !DIExpression()), !dbg !7152
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !7153
  store volatile i32 191, i32* %2, align 4, !dbg !7154
  %3 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !7155
  store volatile i32 16, i32* %3, align 4, !dbg !7156
  %4 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 4, i32 0, !dbg !7157
  store volatile i32 0, i32* %4, align 4, !dbg !7158
  %5 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 6, !dbg !7159
  store volatile i32 0, i32* %5, align 4, !dbg !7160
  store volatile i32 128, i32* %2, align 4, !dbg !7161
  %6 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 0, i32 0, !dbg !7162
  store volatile i32 0, i32* %6, align 4, !dbg !7163
  %7 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 1, i32 0, !dbg !7164
  store volatile i32 0, i32* %7, align 4, !dbg !7165
  store volatile i32 0, i32* %2, align 4, !dbg !7166
  store volatile i32 0, i32* %7, align 4, !dbg !7167
  store volatile i32 0, i32* %3, align 4, !dbg !7168
  store volatile i32 191, i32* %2, align 4, !dbg !7169
  store volatile i32 0, i32* %3, align 4, !dbg !7170
  store volatile i32 0, i32* %2, align 4, !dbg !7171
  store volatile i32 0, i32* %4, align 4, !dbg !7172
  %8 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 7, i32 0, !dbg !7173
  store volatile i32 0, i32* %8, align 4, !dbg !7174
  %9 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 8, !dbg !7175
  store volatile i32 0, i32* %9, align 4, !dbg !7176
  %10 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 9, !dbg !7177
  store volatile i32 0, i32* %10, align 4, !dbg !7178
  %11 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 10, !dbg !7179
  store volatile i32 0, i32* %11, align 4, !dbg !7180
  %12 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 11, !dbg !7181
  store volatile i32 0, i32* %12, align 4, !dbg !7182
  %13 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 13, !dbg !7183
  store volatile i32 0, i32* %13, align 4, !dbg !7184
  %14 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 14, !dbg !7185
  store volatile i32 0, i32* %14, align 4, !dbg !7186
  %15 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 15, !dbg !7187
  store volatile i32 0, i32* %15, align 4, !dbg !7188
  %16 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 16, !dbg !7189
  store volatile i32 0, i32* %16, align 4, !dbg !7190
  %17 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 17, !dbg !7191
  store volatile i32 0, i32* %17, align 4, !dbg !7192
  %18 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 18, !dbg !7193
  store volatile i32 0, i32* %18, align 4, !dbg !7194
  %19 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 19, !dbg !7195
  store volatile i32 0, i32* %19, align 4, !dbg !7196
  store volatile i32 0, i32* %13, align 4, !dbg !7197
  %20 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 21, !dbg !7198
  store volatile i32 0, i32* %20, align 4, !dbg !7199
  %21 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 22, !dbg !7200
  store volatile i32 0, i32* %21, align 4, !dbg !7201
  ret void, !dbg !7202
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_query_empty(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #10 !dbg !7203 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !7205, metadata !DIExpression()), !dbg !7206
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0
  br label %3, !dbg !7207

3:                                                ; preds = %3, %1
  %4 = load volatile i32, i32* %2, align 4, !dbg !7208
  %5 = and i32 %4, 64, !dbg !7209
  %6 = icmp eq i32 %5, 0, !dbg !7210
  br i1 %6, label %3, label %7, !dbg !7207, !llvm.loop !7211

7:                                                ; preds = %3
  ret void, !dbg !7213
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef %1) local_unnamed_addr #8 !dbg !7214 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7218, metadata !DIExpression()), !dbg !7221
  call void @llvm.dbg.value(metadata i32 %1, metadata !7219, metadata !DIExpression()), !dbg !7221
  call void @llvm.dbg.value(metadata i32 15, metadata !7220, metadata !DIExpression()), !dbg !7221
  switch i32 %0, label %15 [
    i32 0, label %3
    i32 1, label %6
    i32 2, label %9
    i32 3, label %12
  ], !dbg !7222

3:                                                ; preds = %2
  %4 = icmp eq i32 %1, 0, !dbg !7223
  %5 = select i1 %4, i32 14, i32 15
  br label %15

6:                                                ; preds = %2
  %7 = icmp eq i32 %1, 0, !dbg !7226
  %8 = select i1 %7, i32 8, i32 9
  br label %15

9:                                                ; preds = %2
  %10 = icmp eq i32 %1, 0, !dbg !7228
  %11 = select i1 %10, i32 10, i32 11
  br label %15

12:                                               ; preds = %2
  %13 = icmp eq i32 %1, 0, !dbg !7230
  %14 = select i1 %13, i32 12, i32 13
  br label %15

15:                                               ; preds = %12, %9, %6, %3, %2
  %16 = phi i32 [ 15, %2 ], [ %5, %3 ], [ %8, %6 ], [ %11, %9 ], [ %14, %12 ], !dbg !7221
  call void @llvm.dbg.value(metadata i32 %16, metadata !7220, metadata !DIExpression()), !dbg !7221
  ret i32 %16, !dbg !7232
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @uart_dma_channel_to_callback_data(i32 noundef %0, %struct.uart_dma_callback_data_t* nocapture noundef writeonly %1) local_unnamed_addr #4 !dbg !7233 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7243, metadata !DIExpression()), !dbg !7245
  call void @llvm.dbg.value(metadata %struct.uart_dma_callback_data_t* %1, metadata !7244, metadata !DIExpression()), !dbg !7245
  %3 = add i32 %0, -8, !dbg !7246
  %4 = icmp ult i32 %3, 8, !dbg !7246
  br i1 %4, label %5, label %12, !dbg !7246

5:                                                ; preds = %2
  %6 = getelementptr inbounds [8 x i8], [8 x i8]* @switch.table.uart_dma_channel_to_callback_data, i32 0, i32 %3, !dbg !7246
  %7 = load i8, i8* %6, align 1, !dbg !7246
  %8 = getelementptr inbounds [8 x i32], [8 x i32]* @switch.table.uart_dma_channel_to_callback_data.6, i32 0, i32 %3, !dbg !7246
  %9 = load i32, i32* %8, align 4, !dbg !7246
  %10 = getelementptr inbounds %struct.uart_dma_callback_data_t, %struct.uart_dma_callback_data_t* %1, i32 0, i32 0, !dbg !7247
  store i8 %7, i8* %10, align 4, !dbg !7247
  %11 = getelementptr inbounds %struct.uart_dma_callback_data_t, %struct.uart_dma_callback_data_t* %1, i32 0, i32 1, !dbg !7247
  store i32 %9, i32* %11, align 4, !dbg !7247
  br label %12, !dbg !7249

12:                                               ; preds = %2, %5
  ret void, !dbg !7249
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_enable_dma(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #10 !dbg !7250 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !7254, metadata !DIExpression()), !dbg !7255
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 19, !dbg !7256
  store volatile i32 3, i32* %2, align 4, !dbg !7257
  ret void, !dbg !7258
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_interrupt_handler(i32 noundef %0) #0 !dbg !7259 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7261, metadata !DIExpression()), !dbg !7265
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* inttoptr (i32 -1609760768 to %struct.UART_REGISTER_T*), metadata !7264, metadata !DIExpression()), !dbg !7265
  %2 = add i32 %0, -30, !dbg !7266
  %3 = icmp ult i32 %2, 3, !dbg !7266
  %4 = add i32 %0, -29
  %5 = select i1 %3, i32 %4, i32 0, !dbg !7266
  call void @llvm.dbg.value(metadata i32 %5, metadata !7262, metadata !DIExpression()), !dbg !7265
  %6 = getelementptr inbounds [4 x %struct.UART_REGISTER_T*], [4 x %struct.UART_REGISTER_T*]* @g_uart_regbase, i32 0, i32 %5, !dbg !7267
  %7 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %6, align 4, !dbg !7267
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %7, metadata !7264, metadata !DIExpression()), !dbg !7265
  %8 = tail call i32 @uart_query_interrupt_type(%struct.UART_REGISTER_T* noundef %7) #21, !dbg !7268
  call void @llvm.dbg.value(metadata i32 %8, metadata !7263, metadata !DIExpression()), !dbg !7265
  switch i32 %8, label %13 [
    i32 2, label %9
    i32 1, label %10
    i32 4, label %14
    i32 0, label %14
    i32 3, label %11
    i32 5, label %12
  ], !dbg !7269

9:                                                ; preds = %1
  tail call void @uart_receive_handler(i32 noundef %5, i1 noundef zeroext true) #21, !dbg !7270
  br label %14, !dbg !7272

10:                                               ; preds = %1
  tail call void @uart_error_handler(i32 noundef %5) #21, !dbg !7273
  br label %14, !dbg !7274

11:                                               ; preds = %1
  tail call void @uart_purge_fifo(%struct.UART_REGISTER_T* noundef %7, i32 noundef 1) #21, !dbg !7275
  br label %14, !dbg !7276

12:                                               ; preds = %1
  tail call void @uart_send_handler(i32 noundef %5, i1 noundef zeroext true) #21, !dbg !7277
  br label %14, !dbg !7278

13:                                               ; preds = %1
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.4.111, i32 0, i32 0), i32 noundef 276, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.uart_interrupt_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.112, i32 0, i32 0)) #23, !dbg !7279
  unreachable, !dbg !7279

14:                                               ; preds = %12, %11, %1, %1, %10, %9
  ret void, !dbg !7280
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @i2c_set_frequency(i32 noundef %0, i32 noundef %1) local_unnamed_addr #10 !dbg !7281 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7285, metadata !DIExpression()), !dbg !7293
  call void @llvm.dbg.value(metadata i32 %1, metadata !7286, metadata !DIExpression()), !dbg !7293
  call void @llvm.dbg.value(metadata i32 0, metadata !7287, metadata !DIExpression()), !dbg !7293
  %3 = getelementptr inbounds [4 x %struct.I2C_REGISTER_T*], [4 x %struct.I2C_REGISTER_T*]* @i2c_master_register, i32 0, i32 %0, !dbg !7294
  %4 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %3, align 4, !dbg !7294
  %5 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %4, i32 0, i32 21, !dbg !7295
  store volatile i16 0, i16* %5, align 2, !dbg !7296
  switch i32 %1, label %11 [
    i32 0, label %6
    i32 1, label %13
    i32 2, label %7
    i32 3, label %8
    i32 4, label %9
    i32 5, label %10
  ], !dbg !7297

6:                                                ; preds = %2
  store volatile i16 1, i16* %5, align 2, !dbg !7298
  call void @llvm.dbg.value(metadata i32 100, metadata !7287, metadata !DIExpression()), !dbg !7293
  br label %13, !dbg !7300

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 200, metadata !7287, metadata !DIExpression()), !dbg !7293
  br label %13, !dbg !7301

8:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 300, metadata !7287, metadata !DIExpression()), !dbg !7293
  br label %13, !dbg !7302

9:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 400, metadata !7287, metadata !DIExpression()), !dbg !7293
  br label %13, !dbg !7303

10:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 1000, metadata !7287, metadata !DIExpression()), !dbg !7293
  br label %13, !dbg !7304

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 %1, metadata !7287, metadata !DIExpression()), !dbg !7293
  %12 = shl i32 %1, 1, !dbg !7305
  br label %13, !dbg !7305

13:                                               ; preds = %2, %11, %10, %9, %8, %7, %6
  %14 = phi i32 [ %12, %11 ], [ 2000, %10 ], [ 800, %9 ], [ 600, %8 ], [ 400, %7 ], [ 200, %6 ], [ 200, %2 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !7287, metadata !DIExpression()), !dbg !7293
  call void @llvm.dbg.value(metadata i32 1, metadata !7289, metadata !DIExpression()), !dbg !7293
  call void @llvm.dbg.value(metadata i32 undef, metadata !7288, metadata !DIExpression()), !dbg !7293
  %15 = getelementptr inbounds [4 x i32], [4 x i32]* @g_i2c_source_clock_table, i32 0, i32 %0
  %16 = load i32, i32* %15, align 4
  br label %17, !dbg !7306

17:                                               ; preds = %13, %24
  %18 = phi i32 [ 1, %13 ], [ %25, %24 ]
  call void @llvm.dbg.value(metadata i32 %18, metadata !7289, metadata !DIExpression()), !dbg !7293
  %19 = mul i32 %18, %14, !dbg !7308
  call void @llvm.dbg.value(metadata i32 %19, metadata !7292, metadata !DIExpression()), !dbg !7293
  %20 = add i32 %19, -1, !dbg !7311
  %21 = add i32 %20, %16, !dbg !7312
  %22 = udiv i32 %21, %19, !dbg !7313
  call void @llvm.dbg.value(metadata i32 %22, metadata !7288, metadata !DIExpression()), !dbg !7293
  %23 = icmp ult i32 %22, 65, !dbg !7314
  br i1 %23, label %27, label %24, !dbg !7316

24:                                               ; preds = %17
  %25 = add nuw nsw i32 %18, 1, !dbg !7317
  call void @llvm.dbg.value(metadata i32 %22, metadata !7288, metadata !DIExpression()), !dbg !7293
  call void @llvm.dbg.value(metadata i32 %25, metadata !7289, metadata !DIExpression()), !dbg !7293
  %26 = icmp eq i32 %25, 9, !dbg !7318
  br i1 %26, label %27, label %17, !dbg !7306, !llvm.loop !7319

27:                                               ; preds = %17, %24
  %28 = phi i32 [ %18, %17 ], [ 9, %24 ], !dbg !7321
  call void @llvm.dbg.value(metadata i32 %22, metadata !7288, metadata !DIExpression()), !dbg !7293
  call void @llvm.dbg.value(metadata i32 %28, metadata !7289, metadata !DIExpression(DW_OP_plus_uconst, 16777215, DW_OP_stack_value)), !dbg !7293
  %29 = add i32 %22, 63, !dbg !7322
  call void @llvm.dbg.value(metadata i32 %22, metadata !7288, metadata !DIExpression(DW_OP_plus_uconst, 63, DW_OP_stack_value)), !dbg !7293
  %30 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %4, i32 0, i32 16, !dbg !7323
  %31 = load volatile i16, i16* %30, align 2, !dbg !7323
  %32 = and i16 %31, -1856, !dbg !7324
  call void @llvm.dbg.value(metadata i16 %32, metadata !7290, metadata !DIExpression(DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7293
  %33 = shl i32 %28, 8, !dbg !7325
  %34 = add i32 %33, 1792, !dbg !7325
  %35 = and i32 %34, 1792, !dbg !7326
  %36 = and i32 %29, 63, !dbg !7327
  %37 = or i32 %36, %35, !dbg !7328
  call void @llvm.dbg.value(metadata !DIArgList(i32 %37, i16 %32), metadata !7291, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !7293
  %38 = trunc i32 %37 to i16, !dbg !7329
  %39 = or i16 %32, %38, !dbg !7329
  store volatile i16 %39, i16* %30, align 2, !dbg !7330
  ret void, !dbg !7331
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @i2c_config_hardware(i32 noundef %0, i32 noundef %1, i8 noundef zeroext %2, %struct.i2c_transaction_size_t* nocapture noundef readonly %3) local_unnamed_addr #10 !dbg !7332 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7346, metadata !DIExpression()), !dbg !7350
  call void @llvm.dbg.value(metadata i32 %1, metadata !7347, metadata !DIExpression()), !dbg !7350
  call void @llvm.dbg.value(metadata i8 %2, metadata !7348, metadata !DIExpression()), !dbg !7350
  call void @llvm.dbg.value(metadata %struct.i2c_transaction_size_t* %3, metadata !7349, metadata !DIExpression()), !dbg !7350
  %5 = zext i8 %2 to i16, !dbg !7351
  %6 = getelementptr inbounds [4 x %struct.I2C_REGISTER_T*], [4 x %struct.I2C_REGISTER_T*]* @i2c_master_register, i32 0, i32 %0, !dbg !7352
  %7 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %6, align 4, !dbg !7352
  %8 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 2, !dbg !7353
  store volatile i16 %5, i16* %8, align 2, !dbg !7354
  %9 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 27, !dbg !7355
  store volatile i16 1, i16* %9, align 2, !dbg !7355
  %10 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 6, !dbg !7356
  store volatile i16 31, i16* %10, align 2, !dbg !7356
  switch i32 %1, label %117 [
    i32 14, label %100
    i32 13, label %89
    i32 6, label %11
    i32 0, label %12
    i32 7, label %21
    i32 1, label %22
    i32 8, label %31
    i32 2, label %32
    i32 9, label %41
    i32 3, label %42
    i32 10, label %51
    i32 4, label %52
    i32 12, label %78
    i32 5, label %65
    i32 11, label %64
  ], !dbg !7357

11:                                               ; preds = %4
  br label %12

12:                                               ; preds = %4, %11
  %13 = phi i16 [ 3, %11 ], [ 0, %4 ]
  %14 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 30, !dbg !7358
  store volatile i16 %13, i16* %14, align 2, !dbg !7358
  %15 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 8, !dbg !7358
  store volatile i16 32, i16* %15, align 2, !dbg !7358
  %16 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 0, !dbg !7361
  %17 = load i32, i32* %16, align 4, !dbg !7361
  %18 = trunc i32 %17 to i16, !dbg !7362
  %19 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 10, !dbg !7363
  store volatile i16 %18, i16* %19, align 2, !dbg !7364
  %20 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 12, !dbg !7365
  store volatile i16 1, i16* %20, align 2, !dbg !7366
  br label %114, !dbg !7367

21:                                               ; preds = %4
  br label %22

22:                                               ; preds = %4, %21
  %23 = phi i16 [ 3, %21 ], [ 0, %4 ]
  %24 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 30, !dbg !7368
  store volatile i16 %23, i16* %24, align 2, !dbg !7368
  %25 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 8, !dbg !7368
  store volatile i16 36, i16* %25, align 2, !dbg !7368
  %26 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 0, !dbg !7370
  %27 = load i32, i32* %26, align 4, !dbg !7370
  %28 = trunc i32 %27 to i16, !dbg !7371
  %29 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 10, !dbg !7372
  store volatile i16 %28, i16* %29, align 2, !dbg !7373
  %30 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 12, !dbg !7374
  store volatile i16 1, i16* %30, align 2, !dbg !7375
  br label %114, !dbg !7376

31:                                               ; preds = %4
  br label %32

32:                                               ; preds = %4, %31
  %33 = phi i16 [ 3, %31 ], [ 0, %4 ]
  %34 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 30, !dbg !7377
  store volatile i16 %33, i16* %34, align 2, !dbg !7377
  %35 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 8, !dbg !7377
  store volatile i16 32, i16* %35, align 2, !dbg !7377
  %36 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 1, !dbg !7379
  %37 = load i32, i32* %36, align 4, !dbg !7379
  %38 = trunc i32 %37 to i16, !dbg !7380
  %39 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 10, !dbg !7381
  store volatile i16 %38, i16* %39, align 2, !dbg !7382
  %40 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 12, !dbg !7383
  store volatile i16 1, i16* %40, align 2, !dbg !7384
  br label %114, !dbg !7385

41:                                               ; preds = %4
  br label %42

42:                                               ; preds = %4, %41
  %43 = phi i16 [ 3, %41 ], [ 0, %4 ]
  %44 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 30, !dbg !7386
  store volatile i16 %43, i16* %44, align 2, !dbg !7386
  %45 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 8, !dbg !7386
  store volatile i16 36, i16* %45, align 2, !dbg !7386
  %46 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 10, !dbg !7388
  store volatile i16 1, i16* %46, align 2, !dbg !7389
  %47 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 1, !dbg !7390
  %48 = load i32, i32* %47, align 4, !dbg !7390
  %49 = trunc i32 %48 to i16, !dbg !7391
  %50 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 12, !dbg !7392
  store volatile i16 %49, i16* %50, align 2, !dbg !7393
  br label %114, !dbg !7394

51:                                               ; preds = %4
  br label %52

52:                                               ; preds = %4, %51
  %53 = phi i16 [ 3, %51 ], [ 0, %4 ]
  %54 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 30, !dbg !7395
  store volatile i16 %53, i16* %54, align 2, !dbg !7395
  %55 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 8, !dbg !7395
  store volatile i16 114, i16* %55, align 2, !dbg !7395
  %56 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 0, !dbg !7397
  %57 = load i32, i32* %56, align 4, !dbg !7397
  %58 = trunc i32 %57 to i16, !dbg !7398
  %59 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 10, !dbg !7399
  store volatile i16 %58, i16* %59, align 2, !dbg !7400
  %60 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 12, !dbg !7401
  store volatile i16 2, i16* %60, align 2, !dbg !7402
  %61 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 1, !dbg !7403
  %62 = load i32, i32* %61, align 4, !dbg !7403
  %63 = trunc i32 %62 to i16, !dbg !7404
  br label %114, !dbg !7405

64:                                               ; preds = %4
  br label %65

65:                                               ; preds = %4, %64
  %66 = phi i16 [ 3, %64 ], [ 0, %4 ]
  %67 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 30, !dbg !7406
  store volatile i16 %66, i16* %67, align 2, !dbg !7406
  %68 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 8, !dbg !7406
  store volatile i16 118, i16* %68, align 2, !dbg !7406
  %69 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 0, !dbg !7408
  %70 = load i32, i32* %69, align 4, !dbg !7408
  %71 = trunc i32 %70 to i16, !dbg !7409
  %72 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 10, !dbg !7410
  store volatile i16 %71, i16* %72, align 2, !dbg !7411
  %73 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 1, !dbg !7412
  %74 = load i32, i32* %73, align 4, !dbg !7412
  %75 = trunc i32 %74 to i16, !dbg !7413
  %76 = add i16 %75, 1, !dbg !7413
  %77 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 12, !dbg !7414
  store volatile i16 %76, i16* %77, align 2, !dbg !7415
  br label %114, !dbg !7416

78:                                               ; preds = %4
  %79 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 30, !dbg !7417
  store volatile i16 3, i16* %79, align 2, !dbg !7418
  %80 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 8, !dbg !7419
  store volatile i16 38, i16* %80, align 2, !dbg !7420
  %81 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 2, !dbg !7421
  %82 = load i32, i32* %81, align 4, !dbg !7421
  %83 = trunc i32 %82 to i16, !dbg !7422
  %84 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 10, !dbg !7423
  store volatile i16 %83, i16* %84, align 2, !dbg !7424
  %85 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 4, !dbg !7425
  %86 = load i32, i32* %85, align 4, !dbg !7425
  %87 = trunc i32 %86 to i16, !dbg !7426
  %88 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 12, !dbg !7427
  store volatile i16 %87, i16* %88, align 2, !dbg !7428
  br label %114, !dbg !7429

89:                                               ; preds = %4
  %90 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 30, !dbg !7430
  store volatile i16 3, i16* %90, align 2, !dbg !7431
  %91 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 8, !dbg !7432
  store volatile i16 38, i16* %91, align 2, !dbg !7433
  %92 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 2, !dbg !7434
  %93 = load i32, i32* %92, align 4, !dbg !7434
  %94 = trunc i32 %93 to i16, !dbg !7435
  %95 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 10, !dbg !7436
  store volatile i16 %94, i16* %95, align 2, !dbg !7437
  %96 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 4, !dbg !7438
  %97 = load i32, i32* %96, align 4, !dbg !7438
  %98 = trunc i32 %97 to i16, !dbg !7439
  %99 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 12, !dbg !7440
  store volatile i16 %98, i16* %99, align 2, !dbg !7441
  br label %114, !dbg !7442

100:                                              ; preds = %4
  %101 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 30, !dbg !7443
  store volatile i16 3, i16* %101, align 2, !dbg !7444
  %102 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 8, !dbg !7445
  store volatile i16 118, i16* %102, align 2, !dbg !7446
  %103 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 2, !dbg !7447
  %104 = load i32, i32* %103, align 4, !dbg !7447
  %105 = trunc i32 %104 to i16, !dbg !7448
  %106 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 10, !dbg !7449
  store volatile i16 %105, i16* %106, align 2, !dbg !7450
  %107 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 4, !dbg !7451
  %108 = load i32, i32* %107, align 4, !dbg !7451
  %109 = trunc i32 %108 to i16, !dbg !7452
  %110 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 12, !dbg !7453
  store volatile i16 %109, i16* %110, align 2, !dbg !7454
  %111 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 3, !dbg !7455
  %112 = load i32, i32* %111, align 4, !dbg !7455
  %113 = trunc i32 %112 to i16, !dbg !7456
  br label %114, !dbg !7457

114:                                              ; preds = %12, %22, %32, %42, %52, %65, %78, %89, %100
  %115 = phi i16 [ %113, %100 ], [ 1, %89 ], [ 1, %78 ], [ 1, %65 ], [ %63, %52 ], [ 1, %42 ], [ 1, %32 ], [ 1, %22 ], [ 1, %12 ]
  %116 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 45, !dbg !7458
  store volatile i16 %115, i16* %116, align 2, !dbg !7458
  br label %117, !dbg !7459

117:                                              ; preds = %114, %4
  ret void, !dbg !7459
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @i2c_write_fifo(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #10 !dbg !7460 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7464, metadata !DIExpression()), !dbg !7468
  call void @llvm.dbg.value(metadata i8* %1, metadata !7465, metadata !DIExpression()), !dbg !7468
  call void @llvm.dbg.value(metadata i32 %2, metadata !7466, metadata !DIExpression()), !dbg !7468
  call void @llvm.dbg.value(metadata i32 0, metadata !7467, metadata !DIExpression()), !dbg !7468
  %4 = icmp eq i32 %2, 0, !dbg !7469
  br i1 %4, label %16, label %5, !dbg !7472

5:                                                ; preds = %3
  %6 = getelementptr inbounds [4 x %struct.I2C_REGISTER_T*], [4 x %struct.I2C_REGISTER_T*]* @i2c_master_register, i32 0, i32 %0
  %7 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %6, align 4
  %8 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 0
  br label %9, !dbg !7472

9:                                                ; preds = %5, %9
  %10 = phi i32 [ 0, %5 ], [ %14, %9 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !7467, metadata !DIExpression()), !dbg !7468
  %11 = getelementptr inbounds i8, i8* %1, i32 %10, !dbg !7473
  %12 = load i8, i8* %11, align 1, !dbg !7475
  %13 = zext i8 %12 to i16, !dbg !7475
  store volatile i16 %13, i16* %8, align 2, !dbg !7476
  %14 = add nuw i32 %10, 1, !dbg !7477
  call void @llvm.dbg.value(metadata i32 %14, metadata !7467, metadata !DIExpression()), !dbg !7468
  %15 = icmp eq i32 %14, %2, !dbg !7469
  br i1 %15, label %16, label %9, !dbg !7472, !llvm.loop !7478

16:                                               ; preds = %9, %3
  ret void, !dbg !7480
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @i2c_read_fifo(i32 noundef %0, i8* nocapture noundef writeonly %1, i32 noundef %2) local_unnamed_addr #10 !dbg !7481 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7485, metadata !DIExpression()), !dbg !7489
  call void @llvm.dbg.value(metadata i8* %1, metadata !7486, metadata !DIExpression()), !dbg !7489
  call void @llvm.dbg.value(metadata i32 %2, metadata !7487, metadata !DIExpression()), !dbg !7489
  call void @llvm.dbg.value(metadata i32 0, metadata !7488, metadata !DIExpression()), !dbg !7489
  %4 = icmp eq i32 %2, 0, !dbg !7490
  br i1 %4, label %16, label %5, !dbg !7493

5:                                                ; preds = %3
  %6 = getelementptr inbounds [4 x %struct.I2C_REGISTER_T*], [4 x %struct.I2C_REGISTER_T*]* @i2c_master_register, i32 0, i32 %0
  %7 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %6, align 4
  %8 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 0
  br label %9, !dbg !7493

9:                                                ; preds = %5, %9
  %10 = phi i32 [ 0, %5 ], [ %14, %9 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !7488, metadata !DIExpression()), !dbg !7489
  %11 = load volatile i16, i16* %8, align 2, !dbg !7494
  %12 = trunc i16 %11 to i8, !dbg !7496
  %13 = getelementptr inbounds i8, i8* %1, i32 %10, !dbg !7497
  store i8 %12, i8* %13, align 1, !dbg !7498
  %14 = add nuw i32 %10, 1, !dbg !7499
  call void @llvm.dbg.value(metadata i32 %14, metadata !7488, metadata !DIExpression()), !dbg !7489
  %15 = icmp eq i32 %14, %2, !dbg !7490
  br i1 %15, label %16, label %9, !dbg !7493, !llvm.loop !7500

16:                                               ; preds = %9, %3
  ret void, !dbg !7502
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @i2c_get_transaction_status(i32 noundef %0) local_unnamed_addr #10 !dbg !7503 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7508, metadata !DIExpression()), !dbg !7511
  call void @llvm.dbg.value(metadata i32 -4, metadata !7510, metadata !DIExpression()), !dbg !7511
  %2 = getelementptr inbounds [4 x %struct.I2C_REGISTER_T*], [4 x %struct.I2C_REGISTER_T*]* @i2c_master_register, i32 0, i32 %0, !dbg !7512
  %3 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %2, align 4, !dbg !7512
  %4 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %3, i32 0, i32 6, !dbg !7513
  %5 = load volatile i16, i16* %4, align 2, !dbg !7513
  call void @llvm.dbg.value(metadata i16 %5, metadata !7509, metadata !DIExpression()), !dbg !7511
  %6 = zext i16 %5 to i32, !dbg !7514
  %7 = and i32 %6, 2, !dbg !7516
  %8 = icmp eq i32 %7, 0, !dbg !7517
  br i1 %8, label %9, label %18, !dbg !7518

9:                                                ; preds = %1
  %10 = and i32 %6, 4, !dbg !7519
  %11 = icmp eq i32 %10, 0, !dbg !7521
  br i1 %11, label %12, label %18, !dbg !7522

12:                                               ; preds = %9
  %13 = and i32 %6, 16, !dbg !7523
  %14 = icmp eq i32 %13, 0, !dbg !7525
  br i1 %14, label %15, label %18, !dbg !7526

15:                                               ; preds = %12
  %16 = icmp eq i16 %5, 1, !dbg !7527
  %17 = select i1 %16, i32 0, i32 -4, !dbg !7529
  br label %18, !dbg !7529

18:                                               ; preds = %15, %12, %9, %1
  %19 = phi i32 [ -3, %1 ], [ -2, %9 ], [ -1, %12 ], [ %17, %15 ], !dbg !7511
  call void @llvm.dbg.value(metadata i32 %19, metadata !7510, metadata !DIExpression()), !dbg !7511
  store volatile i16 31, i16* %4, align 2, !dbg !7530
  ret i32 %19, !dbg !7531
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pmic_i2c_init(i32 noundef %0, %union.anon* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !7532 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7543, metadata !DIExpression()), !dbg !7545
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !7544, metadata !DIExpression()), !dbg !7545
  %3 = icmp eq i32 %0, 0, !dbg !7546
  br i1 %3, label %4, label %11, !dbg !7548

4:                                                ; preds = %2
  %5 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @g_i2c_pdn_table, i32 0, i32 3), align 4, !dbg !7549
  %6 = tail call i32 @hal_clock_enable(i32 noundef %5) #21, !dbg !7550
  %7 = getelementptr inbounds %union.anon, %union.anon* %1, i32 0, i32 0, !dbg !7551
  %8 = load i32, i32* %7, align 4, !dbg !7551
  tail call void @i2c_set_frequency(i32 noundef 3, i32 noundef %8) #21, !dbg !7552
  %9 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @g_i2c_pdn_table, i32 0, i32 3), align 4, !dbg !7553
  %10 = tail call i32 @hal_clock_disable(i32 noundef %9) #21, !dbg !7554
  br label %11, !dbg !7555

11:                                               ; preds = %2, %4
  %12 = phi i32 [ 0, %4 ], [ -102, %2 ], !dbg !7545
  ret i32 %12, !dbg !7556
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pmic_i2c_send_polling(i32 noundef %0, i8 noundef zeroext %1, i8* noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !7557 {
  %5 = alloca %struct.i2c_transaction_size_t, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !7561, metadata !DIExpression()), !dbg !7575
  call void @llvm.dbg.value(metadata i8 %1, metadata !7562, metadata !DIExpression()), !dbg !7575
  call void @llvm.dbg.value(metadata i8* %2, metadata !7563, metadata !DIExpression()), !dbg !7575
  call void @llvm.dbg.value(metadata i32 %3, metadata !7564, metadata !DIExpression()), !dbg !7575
  %6 = bitcast %struct.i2c_transaction_size_t* %5 to i8*, !dbg !7576
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %6) #22, !dbg !7576
  call void @llvm.dbg.declare(metadata %struct.i2c_transaction_size_t* %5, metadata !7566, metadata !DIExpression()), !dbg !7577
  %7 = icmp eq i32 %0, 0, !dbg !7578
  br i1 %7, label %8, label %32, !dbg !7580

8:                                                ; preds = %4
  %9 = icmp eq i8* %2, null, !dbg !7581
  %10 = icmp ugt i32 %3, 8
  %11 = or i1 %9, %10, !dbg !7583
  br i1 %11, label %32, label %12, !dbg !7583

12:                                               ; preds = %8
  %13 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @g_i2c_pdn_table, i32 0, i32 3), align 4, !dbg !7584
  %14 = tail call i32 @hal_clock_enable(i32 noundef %13) #21, !dbg !7585
  %15 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** getelementptr inbounds ([4 x %struct.I2C_REGISTER_T*], [4 x %struct.I2C_REGISTER_T*]* @i2c_master_register, i32 0, i32 3), align 4, !dbg !7586
  %16 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %15, i32 0, i32 4, !dbg !7586
  store volatile i16 0, i16* %16, align 2, !dbg !7586
  %17 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %5, i32 0, i32 0, !dbg !7587
  store i32 %3, i32* %17, align 4, !dbg !7588
  %18 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %5, i32 0, i32 1, !dbg !7589
  store i32 0, i32* %18, align 4, !dbg !7590
  %19 = shl i8 %1, 1, !dbg !7591
  call void @i2c_config_hardware(i32 noundef 3, i32 noundef 0, i8 noundef zeroext %19, %struct.i2c_transaction_size_t* noundef nonnull %5) #21, !dbg !7592
  call void @i2c_write_fifo(i32 noundef 3, i8* noundef nonnull %2, i32 noundef %3) #21, !dbg !7593
  %20 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** getelementptr inbounds ([4 x %struct.I2C_REGISTER_T*], [4 x %struct.I2C_REGISTER_T*]* @i2c_master_register, i32 0, i32 3), align 4, !dbg !7594
  %21 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %20, i32 0, i32 18, !dbg !7594
  store volatile i16 1, i16* %21, align 2, !dbg !7594
  %22 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %20, i32 0, i32 6
  br label %23, !dbg !7595

23:                                               ; preds = %23, %12
  %24 = load volatile i16, i16* %22, align 2, !dbg !7596
  %25 = icmp eq i16 %24, 0, !dbg !7597
  br i1 %25, label %23, label %26, !dbg !7595, !llvm.loop !7598

26:                                               ; preds = %23
  %27 = call i32 @i2c_get_transaction_status(i32 noundef 3) #21, !dbg !7600
  call void @llvm.dbg.value(metadata i32 %27, metadata !7565, metadata !DIExpression()), !dbg !7575
  %28 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @g_i2c_pdn_table, i32 0, i32 3), align 4, !dbg !7601
  %29 = call i32 @hal_clock_disable(i32 noundef %28) #21, !dbg !7602
  %30 = icmp eq i32 %27, 0, !dbg !7603
  br i1 %30, label %32, label %31, !dbg !7605

31:                                               ; preds = %26
  call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @__FUNCTION__.pmic_i2c_send_polling, i32 0, i32 0), i32 noundef 126, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.113, i32 0, i32 0), i32 noundef %27) #21, !dbg !7606
  br label %32, !dbg !7608

32:                                               ; preds = %26, %8, %4, %31
  %33 = phi i32 [ %27, %31 ], [ -102, %4 ], [ -101, %8 ], [ 0, %26 ], !dbg !7575
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %6) #22, !dbg !7609
  ret i32 %33, !dbg !7609
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pmic_i2c_receive_polling(i32 noundef %0, i8 noundef zeroext %1, i8* noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !7610 {
  %5 = alloca %struct.i2c_transaction_size_t, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !7614, metadata !DIExpression()), !dbg !7620
  call void @llvm.dbg.value(metadata i8 %1, metadata !7615, metadata !DIExpression()), !dbg !7620
  call void @llvm.dbg.value(metadata i8* %2, metadata !7616, metadata !DIExpression()), !dbg !7620
  call void @llvm.dbg.value(metadata i32 %3, metadata !7617, metadata !DIExpression()), !dbg !7620
  %6 = bitcast %struct.i2c_transaction_size_t* %5 to i8*, !dbg !7621
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %6) #22, !dbg !7621
  call void @llvm.dbg.declare(metadata %struct.i2c_transaction_size_t* %5, metadata !7619, metadata !DIExpression()), !dbg !7622
  %7 = icmp eq i32 %0, 0, !dbg !7623
  br i1 %7, label %8, label %35, !dbg !7625

8:                                                ; preds = %4
  %9 = icmp eq i8* %2, null, !dbg !7626
  %10 = icmp ugt i32 %3, 8
  %11 = or i1 %9, %10, !dbg !7628
  br i1 %11, label %35, label %12, !dbg !7628

12:                                               ; preds = %8
  %13 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @g_i2c_pdn_table, i32 0, i32 3), align 4, !dbg !7629
  %14 = tail call i32 @hal_clock_enable(i32 noundef %13) #21, !dbg !7630
  %15 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** getelementptr inbounds ([4 x %struct.I2C_REGISTER_T*], [4 x %struct.I2C_REGISTER_T*]* @i2c_master_register, i32 0, i32 3), align 4, !dbg !7631
  %16 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %15, i32 0, i32 4, !dbg !7631
  store volatile i16 0, i16* %16, align 2, !dbg !7631
  %17 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %5, i32 0, i32 0, !dbg !7632
  store i32 0, i32* %17, align 4, !dbg !7633
  %18 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %5, i32 0, i32 1, !dbg !7634
  store i32 %3, i32* %18, align 4, !dbg !7635
  %19 = shl i8 %1, 1, !dbg !7636
  %20 = or i8 %19, 1, !dbg !7636
  call void @i2c_config_hardware(i32 noundef 3, i32 noundef 2, i8 noundef zeroext %20, %struct.i2c_transaction_size_t* noundef nonnull %5) #21, !dbg !7637
  %21 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** getelementptr inbounds ([4 x %struct.I2C_REGISTER_T*], [4 x %struct.I2C_REGISTER_T*]* @i2c_master_register, i32 0, i32 3), align 4, !dbg !7638
  %22 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %21, i32 0, i32 18, !dbg !7638
  store volatile i16 1, i16* %22, align 2, !dbg !7638
  %23 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %21, i32 0, i32 6
  br label %24, !dbg !7639

24:                                               ; preds = %24, %12
  %25 = load volatile i16, i16* %23, align 2, !dbg !7640
  %26 = icmp eq i16 %25, 0, !dbg !7641
  br i1 %26, label %24, label %27, !dbg !7639, !llvm.loop !7642

27:                                               ; preds = %24
  %28 = call i32 @i2c_get_transaction_status(i32 noundef 3) #21, !dbg !7644
  call void @llvm.dbg.value(metadata i32 %28, metadata !7618, metadata !DIExpression()), !dbg !7620
  %29 = icmp eq i32 %28, 0, !dbg !7645
  br i1 %29, label %30, label %31, !dbg !7647

30:                                               ; preds = %27
  call void @i2c_read_fifo(i32 noundef 3, i8* noundef %2, i32 noundef %3) #21, !dbg !7648
  br label %31, !dbg !7650

31:                                               ; preds = %27, %30
  %32 = phi i32 [ 0, %30 ], [ %28, %27 ]
  %33 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @g_i2c_pdn_table, i32 0, i32 3), align 4, !dbg !7651
  %34 = call i32 @hal_clock_disable(i32 noundef %33) #21, !dbg !7651
  br label %35, !dbg !7652

35:                                               ; preds = %31, %8, %4
  %36 = phi i32 [ -102, %4 ], [ -101, %8 ], [ %32, %31 ], !dbg !7620
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %6) #22, !dbg !7652
  ret i32 %36, !dbg !7652
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pmic_i2c_send_to_receive_polling(i32 noundef %0, %struct.pmic_i2c_send_to_receive_config_t* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !7653 {
  %3 = alloca %struct.i2c_transaction_size_t, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !7666, metadata !DIExpression()), !dbg !7670
  call void @llvm.dbg.value(metadata %struct.pmic_i2c_send_to_receive_config_t* %1, metadata !7667, metadata !DIExpression()), !dbg !7670
  %4 = bitcast %struct.i2c_transaction_size_t* %3 to i8*, !dbg !7671
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %4) #22, !dbg !7671
  call void @llvm.dbg.declare(metadata %struct.i2c_transaction_size_t* %3, metadata !7669, metadata !DIExpression()), !dbg !7672
  %5 = icmp eq i32 %0, 0, !dbg !7673
  br i1 %5, label %6, label %53, !dbg !7675

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.pmic_i2c_send_to_receive_config_t, %struct.pmic_i2c_send_to_receive_config_t* %1, i32 0, i32 1, !dbg !7676
  %8 = load i8*, i8** %7, align 4, !dbg !7676
  %9 = icmp eq i8* %8, null, !dbg !7678
  br i1 %9, label %53, label %10, !dbg !7679

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.pmic_i2c_send_to_receive_config_t, %struct.pmic_i2c_send_to_receive_config_t* %1, i32 0, i32 3, !dbg !7680
  %12 = load i8*, i8** %11, align 4, !dbg !7680
  %13 = icmp eq i8* %12, null, !dbg !7681
  br i1 %13, label %53, label %14, !dbg !7682

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.pmic_i2c_send_to_receive_config_t, %struct.pmic_i2c_send_to_receive_config_t* %1, i32 0, i32 2, !dbg !7683
  %16 = load i32, i32* %15, align 4, !dbg !7683
  %17 = icmp ugt i32 %16, 8, !dbg !7685
  br i1 %17, label %53, label %18, !dbg !7686

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.pmic_i2c_send_to_receive_config_t, %struct.pmic_i2c_send_to_receive_config_t* %1, i32 0, i32 4, !dbg !7687
  %20 = load i32, i32* %19, align 4, !dbg !7687
  %21 = icmp ugt i32 %20, 8, !dbg !7688
  br i1 %21, label %53, label %22, !dbg !7689

22:                                               ; preds = %18
  %23 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @g_i2c_pdn_table, i32 0, i32 3), align 4, !dbg !7690
  %24 = tail call i32 @hal_clock_enable(i32 noundef %23) #21, !dbg !7691
  %25 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** getelementptr inbounds ([4 x %struct.I2C_REGISTER_T*], [4 x %struct.I2C_REGISTER_T*]* @i2c_master_register, i32 0, i32 3), align 4, !dbg !7692
  %26 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %25, i32 0, i32 4, !dbg !7692
  store volatile i16 0, i16* %26, align 2, !dbg !7692
  %27 = load i32, i32* %15, align 4, !dbg !7693
  %28 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 0, !dbg !7694
  store i32 %27, i32* %28, align 4, !dbg !7695
  %29 = load i32, i32* %19, align 4, !dbg !7696
  %30 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 1, !dbg !7697
  store i32 %29, i32* %30, align 4, !dbg !7698
  %31 = getelementptr inbounds %struct.pmic_i2c_send_to_receive_config_t, %struct.pmic_i2c_send_to_receive_config_t* %1, i32 0, i32 0, !dbg !7699
  %32 = load i8, i8* %31, align 4, !dbg !7699
  %33 = shl i8 %32, 1, !dbg !7699
  call void @i2c_config_hardware(i32 noundef 3, i32 noundef 4, i8 noundef zeroext %33, %struct.i2c_transaction_size_t* noundef nonnull %3) #21, !dbg !7700
  %34 = load i8*, i8** %7, align 4, !dbg !7701
  %35 = load i32, i32* %15, align 4, !dbg !7702
  call void @i2c_write_fifo(i32 noundef 3, i8* noundef %34, i32 noundef %35) #21, !dbg !7703
  %36 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** getelementptr inbounds ([4 x %struct.I2C_REGISTER_T*], [4 x %struct.I2C_REGISTER_T*]* @i2c_master_register, i32 0, i32 3), align 4, !dbg !7704
  %37 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %36, i32 0, i32 18, !dbg !7704
  store volatile i16 1, i16* %37, align 2, !dbg !7704
  %38 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %36, i32 0, i32 6
  br label %39, !dbg !7705

39:                                               ; preds = %39, %22
  %40 = load volatile i16, i16* %38, align 2, !dbg !7706
  %41 = icmp eq i16 %40, 0, !dbg !7707
  br i1 %41, label %39, label %42, !dbg !7705, !llvm.loop !7708

42:                                               ; preds = %39
  %43 = call i32 @i2c_get_transaction_status(i32 noundef 3) #21, !dbg !7710
  call void @llvm.dbg.value(metadata i32 %43, metadata !7668, metadata !DIExpression()), !dbg !7670
  %44 = icmp eq i32 %43, 0, !dbg !7711
  br i1 %44, label %46, label %45, !dbg !7713

45:                                               ; preds = %42
  call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @__FUNCTION__.pmic_i2c_send_to_receive_polling, i32 0, i32 0), i32 noundef 227, i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1.114, i32 0, i32 0), i32 noundef %43) #21, !dbg !7714
  br label %49, !dbg !7716

46:                                               ; preds = %42
  %47 = load i8*, i8** %11, align 4, !dbg !7717
  %48 = load i32, i32* %19, align 4, !dbg !7719
  call void @i2c_read_fifo(i32 noundef 3, i8* noundef %47, i32 noundef %48) #21, !dbg !7720
  br label %49, !dbg !7721

49:                                               ; preds = %45, %46
  %50 = phi i32 [ 0, %46 ], [ %43, %45 ]
  %51 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @g_i2c_pdn_table, i32 0, i32 3), align 4, !dbg !7722
  %52 = call i32 @hal_clock_disable(i32 noundef %51) #21, !dbg !7722
  br label %53, !dbg !7723

53:                                               ; preds = %49, %14, %18, %6, %10, %2
  %54 = phi i32 [ -102, %2 ], [ -101, %10 ], [ -101, %6 ], [ -101, %18 ], [ -101, %14 ], [ %50, %49 ], !dbg !7670
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %4) #22, !dbg !7723
  ret i32 %54, !dbg !7723
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @eint_ack_interrupt(i32 noundef %0) local_unnamed_addr #10 !dbg !7724 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7728, metadata !DIExpression()), !dbg !7729
  %2 = shl nuw i32 1, %0, !dbg !7730
  %3 = load %struct.EINT_REGISTER_T*, %struct.EINT_REGISTER_T** @EINT_REGISTER, align 4, !dbg !7731
  %4 = getelementptr inbounds %struct.EINT_REGISTER_T, %struct.EINT_REGISTER_T* %3, i32 0, i32 2, !dbg !7732
  store volatile i32 %2, i32* %4, align 4, !dbg !7733
  ret void, !dbg !7734
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_eint_init(i32 noundef %0, %struct.powerkey_state_t* noundef readonly %1) local_unnamed_addr #0 !dbg !1173 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !1186, metadata !DIExpression()), !dbg !7735
  call void @llvm.dbg.value(metadata %struct.powerkey_state_t* %1, metadata !1187, metadata !DIExpression()), !dbg !7735
  %3 = load i1, i1* @hal_eint_init.ini_state, align 4, !dbg !7736
  br i1 %3, label %7, label %4, !dbg !7738

4:                                                ; preds = %2
  %5 = tail call i32 @hal_nvic_register_isr_handler(i32 noundef 12, void (i32)* noundef nonnull @hal_eint_isr) #21, !dbg !7739
  %6 = tail call i32 @hal_nvic_enable_irq(i32 noundef 12) #21, !dbg !7741
  store i1 true, i1* @hal_eint_init.ini_state, align 4, !dbg !7742
  br label %7, !dbg !7743

7:                                                ; preds = %4, %2
  %8 = icmp ugt i32 %0, 31, !dbg !7744
  %9 = icmp eq %struct.powerkey_state_t* %1, null
  %10 = or i1 %8, %9, !dbg !7746
  br i1 %10, label %22, label %11, !dbg !7746

11:                                               ; preds = %7
  %12 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !7747
  call void @llvm.dbg.value(metadata i32 %12, metadata !1189, metadata !DIExpression()), !dbg !7735
  %13 = getelementptr inbounds [32 x %struct.gpt_callback_context_t], [32 x %struct.gpt_callback_context_t]* @eint_function_table, i32 0, i32 %0, i32 0, !dbg !7748
  store void (i8*)* null, void (i8*)** %13, align 4, !dbg !7749
  %14 = getelementptr inbounds [32 x %struct.gpt_callback_context_t], [32 x %struct.gpt_callback_context_t]* @eint_function_table, i32 0, i32 %0, i32 1, !dbg !7750
  store i8* null, i8** %14, align 4, !dbg !7751
  %15 = getelementptr inbounds %struct.powerkey_state_t, %struct.powerkey_state_t* %1, i32 0, i32 0, !dbg !7752
  %16 = load i32, i32* %15, align 4, !dbg !7752
  %17 = tail call i32 @hal_eint_set_trigger_mode(i32 noundef %0, i32 noundef %16) #20, !dbg !7753
  call void @llvm.dbg.value(metadata i32 %17, metadata !1188, metadata !DIExpression()), !dbg !7735
  %18 = getelementptr inbounds %struct.powerkey_state_t, %struct.powerkey_state_t* %1, i32 0, i32 1, !dbg !7754
  %19 = load i32, i32* %18, align 4, !dbg !7754
  %20 = tail call i32 @hal_eint_set_debounce_time(i32 noundef %0, i32 noundef %19) #20, !dbg !7755
  %21 = or i32 %20, %17, !dbg !7756
  call void @llvm.dbg.value(metadata i32 %21, metadata !1188, metadata !DIExpression()), !dbg !7735
  tail call void @eint_ack_interrupt(i32 noundef %0) #20, !dbg !7757
  tail call fastcc void @eint_enable_domain(i32 noundef %0) #20, !dbg !7758
  tail call void @restore_interrupt_mask(i32 noundef %12) #21, !dbg !7759
  br label %22, !dbg !7760

22:                                               ; preds = %7, %11
  %23 = phi i32 [ %21, %11 ], [ -2, %7 ], !dbg !7735
  ret i32 %23, !dbg !7761
}

; Function Attrs: noinline nounwind optsize
define internal void @hal_eint_isr(i32 noundef %0) #0 !dbg !7762 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7764, metadata !DIExpression()), !dbg !7767
  call void @llvm.dbg.value(metadata i32 0, metadata !7766, metadata !DIExpression()), !dbg !7767
  %2 = tail call fastcc i32 @eint_get_status() #20, !dbg !7768
  call void @llvm.dbg.value(metadata i32 %2, metadata !7765, metadata !DIExpression()), !dbg !7767
  %3 = icmp eq i32 %2, 0, !dbg !7769
  br i1 %3, label %21, label %4, !dbg !7771

4:                                                ; preds = %1, %18
  %5 = phi i32 [ %19, %18 ], [ 0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7766, metadata !DIExpression()), !dbg !7767
  %6 = shl nuw i32 1, %5, !dbg !7772
  %7 = and i32 %6, %2, !dbg !7777
  %8 = icmp eq i32 %7, 0, !dbg !7777
  br i1 %8, label %18, label %9, !dbg !7778

9:                                                ; preds = %4
  %10 = tail call i32 @hal_eint_mask(i32 noundef %5) #20, !dbg !7779
  tail call void @eint_ack_interrupt(i32 noundef %5) #20, !dbg !7781
  %11 = getelementptr inbounds [32 x %struct.gpt_callback_context_t], [32 x %struct.gpt_callback_context_t]* @eint_function_table, i32 0, i32 %5, i32 0, !dbg !7782
  %12 = load void (i8*)*, void (i8*)** %11, align 4, !dbg !7782
  %13 = icmp eq void (i8*)* %12, null, !dbg !7784
  br i1 %13, label %17, label %14, !dbg !7785

14:                                               ; preds = %9
  %15 = getelementptr inbounds [32 x %struct.gpt_callback_context_t], [32 x %struct.gpt_callback_context_t]* @eint_function_table, i32 0, i32 %5, i32 1, !dbg !7786
  %16 = load i8*, i8** %15, align 4, !dbg !7786
  tail call void %12(i8* noundef %16) #21, !dbg !7788
  br label %18, !dbg !7789

17:                                               ; preds = %9
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @__FUNCTION__.hal_eint_isr, i32 0, i32 0), i32 noundef 421, i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.115, i32 0, i32 0)) #21, !dbg !7790
  br label %18

18:                                               ; preds = %4, %17, %14
  %19 = add nuw nsw i32 %5, 1, !dbg !7792
  call void @llvm.dbg.value(metadata i32 %19, metadata !7766, metadata !DIExpression()), !dbg !7767
  %20 = icmp eq i32 %19, 32, !dbg !7793
  br i1 %20, label %21, label %4, !dbg !7794, !llvm.loop !7795

21:                                               ; preds = %18, %1
  ret void, !dbg !7797
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_eint_set_trigger_mode(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !7798 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7802, metadata !DIExpression()), !dbg !7805
  call void @llvm.dbg.value(metadata i32 %1, metadata !7803, metadata !DIExpression()), !dbg !7805
  %3 = icmp ugt i32 %0, 31, !dbg !7806
  br i1 %3, label %53, label %4, !dbg !7808

4:                                                ; preds = %2
  %5 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !7809
  call void @llvm.dbg.value(metadata i32 %5, metadata !7804, metadata !DIExpression()), !dbg !7805
  switch i32 %1, label %51 [
    i32 0, label %6
    i32 1, label %15
    i32 2, label %24
    i32 3, label %33
    i32 4, label %42
  ], !dbg !7810

6:                                                ; preds = %4
  %7 = shl nuw i32 1, %0, !dbg !7811
  %8 = load %struct.EINT_REGISTER_T*, %struct.EINT_REGISTER_T** @EINT_REGISTER, align 4, !dbg !7814
  %9 = getelementptr inbounds %struct.EINT_REGISTER_T, %struct.EINT_REGISTER_T* %8, i32 0, i32 20, !dbg !7815
  %10 = load volatile i32, i32* %9, align 4, !dbg !7816
  %11 = or i32 %10, %7, !dbg !7816
  store volatile i32 %11, i32* %9, align 4, !dbg !7816
  %12 = getelementptr inbounds %struct.EINT_REGISTER_T, %struct.EINT_REGISTER_T* %8, i32 0, i32 38, i32 %0, i32 0, i32 0, i32 0, !dbg !7817
  %13 = load volatile i32, i32* %12, align 4, !dbg !7818
  %14 = and i32 %13, -2049, !dbg !7818
  store volatile i32 %14, i32* %12, align 4, !dbg !7818
  br label %51, !dbg !7819

15:                                               ; preds = %4
  %16 = shl nuw i32 1, %0, !dbg !7820
  %17 = load %struct.EINT_REGISTER_T*, %struct.EINT_REGISTER_T** @EINT_REGISTER, align 4, !dbg !7823
  %18 = getelementptr inbounds %struct.EINT_REGISTER_T, %struct.EINT_REGISTER_T* %17, i32 0, i32 20, !dbg !7824
  %19 = load volatile i32, i32* %18, align 4, !dbg !7825
  %20 = or i32 %19, %16, !dbg !7825
  store volatile i32 %20, i32* %18, align 4, !dbg !7825
  %21 = getelementptr inbounds %struct.EINT_REGISTER_T, %struct.EINT_REGISTER_T* %17, i32 0, i32 38, i32 %0, i32 0, i32 0, i32 0, !dbg !7826
  %22 = load volatile i32, i32* %21, align 4, !dbg !7827
  %23 = or i32 %22, 2048, !dbg !7827
  store volatile i32 %23, i32* %21, align 4, !dbg !7827
  br label %51, !dbg !7828

24:                                               ; preds = %4
  %25 = shl nuw i32 1, %0, !dbg !7829
  %26 = load %struct.EINT_REGISTER_T*, %struct.EINT_REGISTER_T** @EINT_REGISTER, align 4, !dbg !7832
  %27 = getelementptr inbounds %struct.EINT_REGISTER_T, %struct.EINT_REGISTER_T* %26, i32 0, i32 22, !dbg !7833
  %28 = load volatile i32, i32* %27, align 4, !dbg !7834
  %29 = or i32 %28, %25, !dbg !7834
  store volatile i32 %29, i32* %27, align 4, !dbg !7834
  %30 = getelementptr inbounds %struct.EINT_REGISTER_T, %struct.EINT_REGISTER_T* %26, i32 0, i32 38, i32 %0, i32 0, i32 0, i32 0, !dbg !7835
  %31 = load volatile i32, i32* %30, align 4, !dbg !7836
  %32 = and i32 %31, -2049, !dbg !7836
  store volatile i32 %32, i32* %30, align 4, !dbg !7836
  br label %51, !dbg !7837

33:                                               ; preds = %4
  %34 = shl nuw i32 1, %0, !dbg !7838
  %35 = load %struct.EINT_REGISTER_T*, %struct.EINT_REGISTER_T** @EINT_REGISTER, align 4, !dbg !7841
  %36 = getelementptr inbounds %struct.EINT_REGISTER_T, %struct.EINT_REGISTER_T* %35, i32 0, i32 22, !dbg !7842
  %37 = load volatile i32, i32* %36, align 4, !dbg !7843
  %38 = or i32 %37, %34, !dbg !7843
  store volatile i32 %38, i32* %36, align 4, !dbg !7843
  %39 = getelementptr inbounds %struct.EINT_REGISTER_T, %struct.EINT_REGISTER_T* %35, i32 0, i32 38, i32 %0, i32 0, i32 0, i32 0, !dbg !7844
  %40 = load volatile i32, i32* %39, align 4, !dbg !7845
  %41 = or i32 %40, 2048, !dbg !7845
  store volatile i32 %41, i32* %39, align 4, !dbg !7845
  br label %51, !dbg !7846

42:                                               ; preds = %4
  %43 = shl nuw i32 1, %0, !dbg !7847
  %44 = load %struct.EINT_REGISTER_T*, %struct.EINT_REGISTER_T** @EINT_REGISTER, align 4, !dbg !7850
  %45 = getelementptr inbounds %struct.EINT_REGISTER_T, %struct.EINT_REGISTER_T* %44, i32 0, i32 22, !dbg !7851
  %46 = load volatile i32, i32* %45, align 4, !dbg !7852
  %47 = or i32 %46, %43, !dbg !7852
  store volatile i32 %47, i32* %45, align 4, !dbg !7852
  %48 = getelementptr inbounds %struct.EINT_REGISTER_T, %struct.EINT_REGISTER_T* %44, i32 0, i32 26, !dbg !7853
  %49 = load volatile i32, i32* %48, align 4, !dbg !7854
  %50 = or i32 %49, %43, !dbg !7854
  store volatile i32 %50, i32* %48, align 4, !dbg !7854
  br label %51

51:                                               ; preds = %6, %24, %42, %33, %15, %4
  %52 = phi i32 [ -2, %4 ], [ 0, %15 ], [ 0, %33 ], [ 0, %42 ], [ 0, %24 ], [ 0, %6 ]
  tail call void @restore_interrupt_mask(i32 noundef %5) #21, !dbg !7805
  br label %53, !dbg !7855

53:                                               ; preds = %51, %2
  %54 = phi i32 [ -2, %2 ], [ %52, %51 ], !dbg !7805
  ret i32 %54, !dbg !7855
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_eint_set_debounce_time(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !7856 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7860, metadata !DIExpression()), !dbg !7865
  call void @llvm.dbg.value(metadata i32 %1, metadata !7861, metadata !DIExpression()), !dbg !7865
  %3 = icmp ugt i32 %0, 31, !dbg !7866
  br i1 %3, label %25, label %4, !dbg !7868

4:                                                ; preds = %2
  %5 = tail call fastcc i32 @eint_caculate_debounce_time(i32 noundef %1) #20, !dbg !7869
  call void @llvm.dbg.value(metadata i32 %5, metadata !7863, metadata !DIExpression()), !dbg !7865
  %6 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !7870
  call void @llvm.dbg.value(metadata i32 %6, metadata !7862, metadata !DIExpression()), !dbg !7865
  %7 = load %struct.EINT_REGISTER_T*, %struct.EINT_REGISTER_T** @EINT_REGISTER, align 4, !dbg !7871
  %8 = getelementptr inbounds %struct.EINT_REGISTER_T, %struct.EINT_REGISTER_T* %7, i32 0, i32 38, i32 %0, i32 0, i32 0, i32 0, !dbg !7872
  %9 = load volatile i32, i32* %8, align 4, !dbg !7872
  call void @llvm.dbg.value(metadata i32 %9, metadata !7864, metadata !DIExpression()), !dbg !7865
  %10 = and i32 %9, -2048, !dbg !7873
  call void @llvm.dbg.value(metadata i32 %10, metadata !7864, metadata !DIExpression()), !dbg !7865
  %11 = or i32 %10, %5, !dbg !7874
  call void @llvm.dbg.value(metadata i32 %11, metadata !7864, metadata !DIExpression()), !dbg !7865
  %12 = icmp eq i32 %1, 0, !dbg !7875
  br i1 %12, label %13, label %15, !dbg !7877

13:                                               ; preds = %4
  %14 = and i32 %11, -32769, !dbg !7878
  call void @llvm.dbg.value(metadata i32 %14, metadata !7864, metadata !DIExpression()), !dbg !7865
  store volatile i32 %14, i32* %8, align 4, !dbg !7880
  br label %24, !dbg !7881

15:                                               ; preds = %4
  %16 = and i32 %11, -2048, !dbg !7882
  store volatile i32 %16, i32* %8, align 4, !dbg !7884
  %17 = tail call i32 @hal_gpt_delay_us(i32 noundef 125) #21, !dbg !7885
  %18 = load %struct.EINT_REGISTER_T*, %struct.EINT_REGISTER_T** @EINT_REGISTER, align 4, !dbg !7886
  %19 = getelementptr inbounds %struct.EINT_REGISTER_T, %struct.EINT_REGISTER_T* %18, i32 0, i32 38, i32 %0, i32 0, i32 0, i32 0, !dbg !7887
  store volatile i32 %11, i32* %19, align 4, !dbg !7888
  %20 = load %struct.EINT_REGISTER_T*, %struct.EINT_REGISTER_T** @EINT_REGISTER, align 4, !dbg !7889
  %21 = getelementptr inbounds %struct.EINT_REGISTER_T, %struct.EINT_REGISTER_T* %20, i32 0, i32 38, i32 %0, i32 0, i32 0, i32 0, !dbg !7890
  %22 = load volatile i32, i32* %21, align 4, !dbg !7891
  %23 = or i32 %22, -2147483648, !dbg !7891
  store volatile i32 %23, i32* %21, align 4, !dbg !7891
  br label %24

24:                                               ; preds = %15, %13
  tail call void @restore_interrupt_mask(i32 noundef %6) #21, !dbg !7892
  br label %25, !dbg !7893

25:                                               ; preds = %2, %24
  %26 = phi i32 [ 0, %24 ], [ -2, %2 ], !dbg !7865
  ret i32 %26, !dbg !7894
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @eint_enable_domain(i32 noundef %0) unnamed_addr #10 !dbg !7895 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7900, metadata !DIExpression()), !dbg !7902
  call void @llvm.dbg.value(metadata i32 1, metadata !7901, metadata !DIExpression()), !dbg !7902
  %2 = shl nuw i32 1, %0, !dbg !7903
  %3 = load %struct.EINT_REGISTER_T*, %struct.EINT_REGISTER_T** @EINT_REGISTER, align 4, !dbg !7906
  %4 = getelementptr inbounds %struct.EINT_REGISTER_T, %struct.EINT_REGISTER_T* %3, i32 0, i32 36, !dbg !7907
  %5 = load volatile i32, i32* %4, align 4, !dbg !7908
  %6 = or i32 %5, %2, !dbg !7908
  store volatile i32 %6, i32* %4, align 4, !dbg !7908
  ret void, !dbg !7909
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @eint_caculate_debounce_time(i32 noundef %0) unnamed_addr #8 !dbg !7910 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7912, metadata !DIExpression()), !dbg !7915
  %2 = icmp eq i32 %0, 0, !dbg !7916
  br i1 %2, label %47, label %3, !dbg !7918

3:                                                ; preds = %1
  %4 = icmp ult i32 %0, 63, !dbg !7919
  br i1 %4, label %5, label %7, !dbg !7921

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !7913, metadata !DIExpression()), !dbg !7915
  %6 = mul nuw nsw i32 %0, 33, !dbg !7922
  call void @llvm.dbg.value(metadata i32 %6, metadata !7914, metadata !DIExpression()), !dbg !7915
  br label %47, !dbg !7924

7:                                                ; preds = %3
  %8 = icmp ult i32 %0, 126, !dbg !7925
  br i1 %8, label %9, label %12, !dbg !7927

9:                                                ; preds = %7
  call void @llvm.dbg.value(metadata i32 1, metadata !7913, metadata !DIExpression()), !dbg !7915
  %10 = shl nuw nsw i32 %0, 4, !dbg !7928
  %11 = lshr i32 %0, 1, !dbg !7930
  call void @llvm.dbg.value(metadata i32 undef, metadata !7914, metadata !DIExpression()), !dbg !7915
  br label %41, !dbg !7931

12:                                               ; preds = %7
  %13 = icmp ult i32 %0, 251, !dbg !7932
  br i1 %13, label %14, label %17, !dbg !7934

14:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 2, metadata !7913, metadata !DIExpression()), !dbg !7915
  %15 = shl nuw nsw i32 %0, 3, !dbg !7935
  %16 = lshr i32 %0, 2, !dbg !7937
  call void @llvm.dbg.value(metadata i32 %45, metadata !7914, metadata !DIExpression()), !dbg !7915
  br label %41, !dbg !7938

17:                                               ; preds = %12
  %18 = icmp ult i32 %0, 501, !dbg !7939
  br i1 %18, label %19, label %22, !dbg !7941

19:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 3, metadata !7913, metadata !DIExpression()), !dbg !7915
  %20 = shl nuw nsw i32 %0, 2, !dbg !7942
  %21 = lshr i32 %0, 3, !dbg !7944
  call void @llvm.dbg.value(metadata i32 undef, metadata !7914, metadata !DIExpression()), !dbg !7915
  br label %41, !dbg !7945

22:                                               ; preds = %17
  %23 = icmp ult i32 %0, 1001, !dbg !7946
  br i1 %23, label %24, label %27, !dbg !7948

24:                                               ; preds = %22
  call void @llvm.dbg.value(metadata i32 4, metadata !7913, metadata !DIExpression()), !dbg !7915
  %25 = shl nuw nsw i32 %0, 1, !dbg !7949
  %26 = lshr i32 %0, 4, !dbg !7951
  call void @llvm.dbg.value(metadata i32 undef, metadata !7914, metadata !DIExpression()), !dbg !7915
  br label %41, !dbg !7952

27:                                               ; preds = %22
  %28 = icmp ult i32 %0, 2001, !dbg !7953
  br i1 %28, label %29, label %31, !dbg !7955

29:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 5, metadata !7913, metadata !DIExpression()), !dbg !7915
  %30 = lshr i32 %0, 5, !dbg !7956
  call void @llvm.dbg.value(metadata i32 undef, metadata !7914, metadata !DIExpression()), !dbg !7915
  br label %41, !dbg !7958

31:                                               ; preds = %27
  %32 = icmp ult i32 %0, 4001, !dbg !7959
  br i1 %32, label %33, label %36, !dbg !7961

33:                                               ; preds = %31
  call void @llvm.dbg.value(metadata i32 6, metadata !7913, metadata !DIExpression()), !dbg !7915
  %34 = lshr i32 %0, 1, !dbg !7962
  %35 = lshr i32 %0, 6, !dbg !7964
  call void @llvm.dbg.value(metadata i32 undef, metadata !7914, metadata !DIExpression()), !dbg !7915
  br label %41, !dbg !7965

36:                                               ; preds = %31
  %37 = icmp ult i32 %0, 8001, !dbg !7966
  br i1 %37, label %38, label %50, !dbg !7968

38:                                               ; preds = %36
  call void @llvm.dbg.value(metadata i32 7, metadata !7913, metadata !DIExpression()), !dbg !7915
  %39 = lshr i32 %0, 2, !dbg !7969
  %40 = lshr i32 %0, 7, !dbg !7971
  call void @llvm.dbg.value(metadata i32 undef, metadata !7914, metadata !DIExpression()), !dbg !7915
  br label %41, !dbg !7972

41:                                               ; preds = %14, %24, %33, %38, %29, %19, %9
  %42 = phi i32 [ %16, %14 ], [ %26, %24 ], [ %35, %33 ], [ %40, %38 ], [ %0, %29 ], [ %21, %19 ], [ %11, %9 ]
  %43 = phi i32 [ %15, %14 ], [ %25, %24 ], [ %34, %33 ], [ %39, %38 ], [ %30, %29 ], [ %20, %19 ], [ %10, %9 ]
  %44 = phi i32 [ 8192, %14 ], [ 16384, %24 ], [ 24576, %33 ], [ 28672, %38 ], [ 20480, %29 ], [ 12288, %19 ], [ 4096, %9 ], !dbg !7973
  %45 = add nuw nsw i32 %43, %42, !dbg !7974
  call void @llvm.dbg.value(metadata i32 %45, metadata !7914, metadata !DIExpression()), !dbg !7915
  call void @llvm.dbg.value(metadata i32 %44, metadata !7913, metadata !DIExpression()), !dbg !7915
  %46 = icmp ult i32 %45, 2047, !dbg !7975
  br i1 %46, label %47, label %50, !dbg !7975

47:                                               ; preds = %1, %5, %41
  %48 = phi i32 [ %45, %41 ], [ 0, %1 ], [ %6, %5 ]
  %49 = phi i32 [ %44, %41 ], [ 0, %1 ], [ 0, %5 ]
  br label %50, !dbg !7975

50:                                               ; preds = %36, %41, %47
  %51 = phi i32 [ %49, %47 ], [ %44, %41 ], [ 28672, %36 ]
  %52 = phi i32 [ %48, %47 ], [ 2047, %41 ], [ 2047, %36 ]
  call void @llvm.dbg.value(metadata i32 %52, metadata !7914, metadata !DIExpression()), !dbg !7915
  %53 = or i32 %51, %52, !dbg !7976
  %54 = or i32 %53, 32768, !dbg !7976
  call void @llvm.dbg.value(metadata i32 %54, metadata !7914, metadata !DIExpression()), !dbg !7915
  ret i32 %54, !dbg !7977
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @eint_get_status() unnamed_addr #9 !dbg !7978 {
  %1 = load %struct.EINT_REGISTER_T*, %struct.EINT_REGISTER_T** @EINT_REGISTER, align 4, !dbg !7979
  %2 = getelementptr inbounds %struct.EINT_REGISTER_T, %struct.EINT_REGISTER_T* %1, i32 0, i32 0, !dbg !7980
  %3 = load volatile i32, i32* %2, align 4, !dbg !7980
  ret i32 %3, !dbg !7981
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_eint_mask(i32 noundef %0) local_unnamed_addr #0 !dbg !7982 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7986, metadata !DIExpression()), !dbg !7988
  %2 = icmp ugt i32 %0, 31, !dbg !7989
  br i1 %2, label %11, label %3, !dbg !7991

3:                                                ; preds = %1
  %4 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !7992
  call void @llvm.dbg.value(metadata i32 %4, metadata !7987, metadata !DIExpression()), !dbg !7988
  %5 = shl nuw i32 1, %0, !dbg !7993
  %6 = load %struct.EINT_REGISTER_T*, %struct.EINT_REGISTER_T** @EINT_REGISTER, align 4, !dbg !7994
  %7 = getelementptr inbounds %struct.EINT_REGISTER_T, %struct.EINT_REGISTER_T* %6, i32 0, i32 8, !dbg !7995
  %8 = load volatile i32, i32* %7, align 4, !dbg !7996
  %9 = or i32 %8, %5, !dbg !7996
  store volatile i32 %9, i32* %7, align 4, !dbg !7996
  %10 = tail call i32 @eint_mask_wakeup_source(i32 noundef %0) #20, !dbg !7997
  tail call void @restore_interrupt_mask(i32 noundef %4) #21, !dbg !7998
  br label %11, !dbg !7999

11:                                               ; preds = %1, %3
  %12 = phi i32 [ 0, %3 ], [ -2, %1 ], !dbg !7988
  ret i32 %12, !dbg !8000
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @eint_mask_wakeup_source(i32 noundef %0) local_unnamed_addr #0 !dbg !8001 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8003, metadata !DIExpression()), !dbg !8005
  %2 = icmp ugt i32 %0, 31, !dbg !8006
  br i1 %2, label %10, label %3, !dbg !8008

3:                                                ; preds = %1
  %4 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !8009
  call void @llvm.dbg.value(metadata i32 %4, metadata !8004, metadata !DIExpression()), !dbg !8005
  %5 = shl nuw i32 1, %0, !dbg !8010
  %6 = load %struct.EINT_REGISTER_T*, %struct.EINT_REGISTER_T** @EINT_REGISTER, align 4, !dbg !8011
  %7 = getelementptr inbounds %struct.EINT_REGISTER_T, %struct.EINT_REGISTER_T* %6, i32 0, i32 14, !dbg !8012
  %8 = load volatile i32, i32* %7, align 4, !dbg !8013
  %9 = or i32 %8, %5, !dbg !8013
  store volatile i32 %9, i32* %7, align 4, !dbg !8013
  tail call void @restore_interrupt_mask(i32 noundef %4) #21, !dbg !8014
  br label %10, !dbg !8015

10:                                               ; preds = %1, %3
  %11 = phi i32 [ 0, %3 ], [ -2, %1 ], !dbg !8005
  ret i32 %11, !dbg !8016
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_eint_deinit(i32 noundef %0) local_unnamed_addr #0 !dbg !8017 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8019, metadata !DIExpression()), !dbg !8021
  %2 = icmp ugt i32 %0, 31, !dbg !8022
  br i1 %2, label %8, label %3, !dbg !8024

3:                                                ; preds = %1
  %4 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !8025
  call void @llvm.dbg.value(metadata i32 %4, metadata !8020, metadata !DIExpression()), !dbg !8021
  %5 = getelementptr inbounds [32 x %struct.gpt_callback_context_t], [32 x %struct.gpt_callback_context_t]* @eint_function_table, i32 0, i32 %0, i32 0, !dbg !8026
  store void (i8*)* null, void (i8*)** %5, align 4, !dbg !8027
  %6 = getelementptr inbounds [32 x %struct.gpt_callback_context_t], [32 x %struct.gpt_callback_context_t]* @eint_function_table, i32 0, i32 %0, i32 1, !dbg !8028
  store i8* null, i8** %6, align 4, !dbg !8029
  tail call void @eint_ack_interrupt(i32 noundef %0) #20, !dbg !8030
  %7 = tail call i32 @hal_eint_mask(i32 noundef %0) #20, !dbg !8031
  tail call void @restore_interrupt_mask(i32 noundef %4) #21, !dbg !8032
  br label %8, !dbg !8033

8:                                                ; preds = %1, %3
  %9 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !8021
  ret i32 %9, !dbg !8034
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_eint_register_callback(i32 noundef %0, void (i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !8035 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8040, metadata !DIExpression()), !dbg !8044
  call void @llvm.dbg.value(metadata void (i8*)* %1, metadata !8041, metadata !DIExpression()), !dbg !8044
  call void @llvm.dbg.value(metadata i8* %2, metadata !8042, metadata !DIExpression()), !dbg !8044
  %4 = icmp ugt i32 %0, 31, !dbg !8045
  %5 = icmp eq void (i8*)* %1, null
  %6 = or i1 %4, %5, !dbg !8047
  br i1 %6, label %11, label %7, !dbg !8047

7:                                                ; preds = %3
  %8 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !8048
  call void @llvm.dbg.value(metadata i32 %8, metadata !8043, metadata !DIExpression()), !dbg !8044
  %9 = getelementptr inbounds [32 x %struct.gpt_callback_context_t], [32 x %struct.gpt_callback_context_t]* @eint_function_table, i32 0, i32 %0, i32 0, !dbg !8049
  store void (i8*)* %1, void (i8*)** %9, align 4, !dbg !8050
  %10 = getelementptr inbounds [32 x %struct.gpt_callback_context_t], [32 x %struct.gpt_callback_context_t]* @eint_function_table, i32 0, i32 %0, i32 1, !dbg !8051
  store i8* %2, i8** %10, align 4, !dbg !8052
  tail call void @restore_interrupt_mask(i32 noundef %8) #21, !dbg !8053
  br label %11, !dbg !8054

11:                                               ; preds = %3, %7
  %12 = phi i32 [ 0, %7 ], [ -2, %3 ], !dbg !8044
  ret i32 %12, !dbg !8055
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_eint_set_debounce_count(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !8056 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8058, metadata !DIExpression()), !dbg !8063
  call void @llvm.dbg.value(metadata i32 %1, metadata !8059, metadata !DIExpression()), !dbg !8063
  %3 = icmp ult i32 %0, 32, !dbg !8064
  %4 = icmp ult i32 %1, 2048
  %5 = and i1 %3, %4, !dbg !8066
  br i1 %5, label %6, label %31, !dbg !8066

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 0, metadata !8062, metadata !DIExpression()), !dbg !8063
  %7 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !8067
  call void @llvm.dbg.value(metadata i32 %7, metadata !8060, metadata !DIExpression()), !dbg !8063
  %8 = load %struct.EINT_REGISTER_T*, %struct.EINT_REGISTER_T** @EINT_REGISTER, align 4, !dbg !8068
  %9 = getelementptr inbounds %struct.EINT_REGISTER_T, %struct.EINT_REGISTER_T* %8, i32 0, i32 38, i32 %0, i32 0, i32 0, i32 0, !dbg !8069
  %10 = load volatile i32, i32* %9, align 4, !dbg !8069
  call void @llvm.dbg.value(metadata i32 %10, metadata !8061, metadata !DIExpression()), !dbg !8063
  %11 = and i32 %10, -2048, !dbg !8070
  call void @llvm.dbg.value(metadata i32 %11, metadata !8061, metadata !DIExpression()), !dbg !8063
  %12 = or i32 %11, %1, !dbg !8071
  call void @llvm.dbg.value(metadata i32 %12, metadata !8061, metadata !DIExpression()), !dbg !8063
  tail call void @restore_interrupt_mask(i32 noundef %7) #21, !dbg !8072
  %13 = icmp eq i32 %1, 0, !dbg !8073
  br i1 %13, label %14, label %18, !dbg !8075

14:                                               ; preds = %6
  %15 = and i32 %12, -32769, !dbg !8076
  call void @llvm.dbg.value(metadata i32 %15, metadata !8061, metadata !DIExpression()), !dbg !8063
  %16 = load %struct.EINT_REGISTER_T*, %struct.EINT_REGISTER_T** @EINT_REGISTER, align 4, !dbg !8078
  %17 = getelementptr inbounds %struct.EINT_REGISTER_T, %struct.EINT_REGISTER_T* %16, i32 0, i32 38, i32 %0, i32 0, i32 0, i32 0, !dbg !8079
  store volatile i32 %15, i32* %17, align 4, !dbg !8080
  br label %31, !dbg !8081

18:                                               ; preds = %6
  %19 = and i32 %12, -2048, !dbg !8082
  %20 = load %struct.EINT_REGISTER_T*, %struct.EINT_REGISTER_T** @EINT_REGISTER, align 4, !dbg !8084
  %21 = getelementptr inbounds %struct.EINT_REGISTER_T, %struct.EINT_REGISTER_T* %20, i32 0, i32 38, i32 %0, i32 0, i32 0, i32 0, !dbg !8085
  store volatile i32 %19, i32* %21, align 4, !dbg !8086
  %22 = tail call i32 @hal_gpt_delay_us(i32 noundef 125) #21, !dbg !8087
  call void @llvm.dbg.value(metadata i32 %12, metadata !8061, metadata !DIExpression(DW_OP_constu, 32768, DW_OP_or, DW_OP_stack_value)), !dbg !8063
  %23 = and i32 %12, -61441, !dbg !8088
  %24 = or i32 %23, 32768, !dbg !8088
  call void @llvm.dbg.value(metadata i32 %24, metadata !8061, metadata !DIExpression()), !dbg !8063
  %25 = load %struct.EINT_REGISTER_T*, %struct.EINT_REGISTER_T** @EINT_REGISTER, align 4, !dbg !8089
  %26 = getelementptr inbounds %struct.EINT_REGISTER_T, %struct.EINT_REGISTER_T* %25, i32 0, i32 38, i32 %0, i32 0, i32 0, i32 0, !dbg !8090
  store volatile i32 %24, i32* %26, align 4, !dbg !8091
  %27 = load %struct.EINT_REGISTER_T*, %struct.EINT_REGISTER_T** @EINT_REGISTER, align 4, !dbg !8092
  %28 = getelementptr inbounds %struct.EINT_REGISTER_T, %struct.EINT_REGISTER_T* %27, i32 0, i32 38, i32 %0, i32 0, i32 0, i32 0, !dbg !8093
  %29 = load volatile i32, i32* %28, align 4, !dbg !8094
  %30 = or i32 %29, -2147483648, !dbg !8094
  store volatile i32 %30, i32* %28, align 4, !dbg !8094
  br label %31

31:                                               ; preds = %14, %18, %2
  %32 = phi i32 [ -2, %2 ], [ 0, %18 ], [ 0, %14 ], !dbg !8063
  ret i32 %32, !dbg !8095
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_eint_set_software_trigger(i32 noundef %0) local_unnamed_addr #0 !dbg !8096 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8098, metadata !DIExpression()), !dbg !8100
  %2 = icmp ugt i32 %0, 31, !dbg !8101
  br i1 %2, label %10, label %3, !dbg !8103

3:                                                ; preds = %1
  %4 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !8104
  call void @llvm.dbg.value(metadata i32 %4, metadata !8099, metadata !DIExpression()), !dbg !8100
  %5 = shl nuw i32 1, %0, !dbg !8105
  %6 = load %struct.EINT_REGISTER_T*, %struct.EINT_REGISTER_T** @EINT_REGISTER, align 4, !dbg !8106
  %7 = getelementptr inbounds %struct.EINT_REGISTER_T, %struct.EINT_REGISTER_T* %6, i32 0, i32 32, !dbg !8107
  %8 = load volatile i32, i32* %7, align 4, !dbg !8108
  %9 = or i32 %8, %5, !dbg !8108
  store volatile i32 %9, i32* %7, align 4, !dbg !8108
  tail call void @restore_interrupt_mask(i32 noundef %4) #21, !dbg !8109
  br label %10, !dbg !8110

10:                                               ; preds = %1, %3
  %11 = phi i32 [ 0, %3 ], [ -2, %1 ], !dbg !8100
  ret i32 %11, !dbg !8111
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_eint_clear_software_trigger(i32 noundef %0) local_unnamed_addr #0 !dbg !8112 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8114, metadata !DIExpression()), !dbg !8116
  %2 = icmp ugt i32 %0, 31, !dbg !8117
  br i1 %2, label %10, label %3, !dbg !8119

3:                                                ; preds = %1
  %4 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !8120
  call void @llvm.dbg.value(metadata i32 %4, metadata !8115, metadata !DIExpression()), !dbg !8116
  %5 = shl nuw i32 1, %0, !dbg !8121
  %6 = load %struct.EINT_REGISTER_T*, %struct.EINT_REGISTER_T** @EINT_REGISTER, align 4, !dbg !8122
  %7 = getelementptr inbounds %struct.EINT_REGISTER_T, %struct.EINT_REGISTER_T* %6, i32 0, i32 34, !dbg !8123
  %8 = load volatile i32, i32* %7, align 4, !dbg !8124
  %9 = or i32 %8, %5, !dbg !8124
  store volatile i32 %9, i32* %7, align 4, !dbg !8124
  tail call void @restore_interrupt_mask(i32 noundef %4) #21, !dbg !8125
  br label %10, !dbg !8126

10:                                               ; preds = %1, %3
  %11 = phi i32 [ 0, %3 ], [ -1, %1 ], !dbg !8116
  ret i32 %11, !dbg !8127
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @eint_unmask_wakeup_source(i32 noundef %0) local_unnamed_addr #0 !dbg !8128 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8130, metadata !DIExpression()), !dbg !8132
  %2 = icmp ugt i32 %0, 31, !dbg !8133
  br i1 %2, label %10, label %3, !dbg !8135

3:                                                ; preds = %1
  %4 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !8136
  call void @llvm.dbg.value(metadata i32 %4, metadata !8131, metadata !DIExpression()), !dbg !8132
  %5 = shl nuw i32 1, %0, !dbg !8137
  %6 = load %struct.EINT_REGISTER_T*, %struct.EINT_REGISTER_T** @EINT_REGISTER, align 4, !dbg !8138
  %7 = getelementptr inbounds %struct.EINT_REGISTER_T, %struct.EINT_REGISTER_T* %6, i32 0, i32 16, !dbg !8139
  %8 = load volatile i32, i32* %7, align 4, !dbg !8140
  %9 = or i32 %8, %5, !dbg !8140
  store volatile i32 %9, i32* %7, align 4, !dbg !8140
  tail call void @restore_interrupt_mask(i32 noundef %4) #21, !dbg !8141
  br label %10, !dbg !8142

10:                                               ; preds = %1, %3
  %11 = phi i32 [ 0, %3 ], [ -2, %1 ], !dbg !8132
  ret i32 %11, !dbg !8143
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_eint_unmask(i32 noundef %0) local_unnamed_addr #0 !dbg !8144 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8146, metadata !DIExpression()), !dbg !8148
  %2 = icmp ugt i32 %0, 31, !dbg !8149
  br i1 %2, label %11, label %3, !dbg !8151

3:                                                ; preds = %1
  %4 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !8152
  call void @llvm.dbg.value(metadata i32 %4, metadata !8147, metadata !DIExpression()), !dbg !8148
  %5 = shl nuw i32 1, %0, !dbg !8153
  %6 = load %struct.EINT_REGISTER_T*, %struct.EINT_REGISTER_T** @EINT_REGISTER, align 4, !dbg !8154
  %7 = getelementptr inbounds %struct.EINT_REGISTER_T, %struct.EINT_REGISTER_T* %6, i32 0, i32 10, !dbg !8155
  %8 = load volatile i32, i32* %7, align 4, !dbg !8156
  %9 = or i32 %8, %5, !dbg !8156
  store volatile i32 %9, i32* %7, align 4, !dbg !8156
  %10 = tail call i32 @eint_unmask_wakeup_source(i32 noundef %0) #20, !dbg !8157
  tail call void @restore_interrupt_mask(i32 noundef %4) #21, !dbg !8158
  br label %11, !dbg !8159

11:                                               ; preds = %1, %3
  %12 = phi i32 [ 0, %3 ], [ -2, %1 ], !dbg !8148
  ret i32 %12, !dbg !8160
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_init() local_unnamed_addr #10 !dbg !1271 {
  %1 = load i1, i1* @hal_nvic_init.priority_set, align 4, !dbg !8161
  br i1 %1, label %9, label %2, !dbg !8163

2:                                                ; preds = %0, %2
  %3 = phi i32 [ %6, %2 ], [ 0, %0 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !1359, metadata !DIExpression()), !dbg !8164
  %4 = getelementptr inbounds [64 x i32], [64 x i32]* @defualt_irq_priority, i32 0, i32 %3, !dbg !8165
  %5 = load i32, i32* %4, align 4, !dbg !8165
  tail call fastcc void @NVIC_SetPriority(i32 noundef %3, i32 noundef %5) #20, !dbg !8170
  %6 = add nuw nsw i32 %3, 1, !dbg !8171
  call void @llvm.dbg.value(metadata i32 %6, metadata !1359, metadata !DIExpression()), !dbg !8164
  %7 = icmp eq i32 %6, 64, !dbg !8172
  br i1 %7, label %8, label %2, !dbg !8173, !llvm.loop !8174

8:                                                ; preds = %2
  store i1 true, i1* @hal_nvic_init.priority_set, align 4, !dbg !8176
  br label %9, !dbg !8177

9:                                                ; preds = %8, %0
  ret i32 0, !dbg !8178
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !8179 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8183, metadata !DIExpression()), !dbg !8185
  call void @llvm.dbg.value(metadata i32 %1, metadata !8184, metadata !DIExpression()), !dbg !8185
  %3 = trunc i32 %1 to i8, !dbg !8186
  %4 = shl i8 %3, 2, !dbg !8186
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !8189
  store volatile i8 %4, i8* %5, align 1, !dbg !8190
  ret void, !dbg !8191
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_enable_irq(i32 noundef %0) local_unnamed_addr #10 !dbg !8192 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8196, metadata !DIExpression()), !dbg !8198
  call void @llvm.dbg.value(metadata i32 -1, metadata !8197, metadata !DIExpression()), !dbg !8198
  %2 = icmp ugt i32 %0, 63, !dbg !8199
  br i1 %2, label %4, label %3, !dbg !8199

3:                                                ; preds = %1
  tail call fastcc void @NVIC_EnableIRQ(i32 noundef %0) #20, !dbg !8201
  call void @llvm.dbg.value(metadata i32 0, metadata !8197, metadata !DIExpression()), !dbg !8198
  br label %4, !dbg !8203

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !8198
  ret i32 %5, !dbg !8204
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #10 !dbg !8205 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8209, metadata !DIExpression()), !dbg !8210
  %2 = and i32 %0, 31, !dbg !8211
  %3 = shl nuw i32 1, %2, !dbg !8212
  %4 = lshr i32 %0, 5, !dbg !8213
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %4, !dbg !8214
  store volatile i32 %3, i32* %5, align 4, !dbg !8215
  ret void, !dbg !8216
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_disable_irq(i32 noundef %0) local_unnamed_addr #10 !dbg !8217 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8219, metadata !DIExpression()), !dbg !8221
  call void @llvm.dbg.value(metadata i32 -1, metadata !8220, metadata !DIExpression()), !dbg !8221
  %2 = icmp ugt i32 %0, 63, !dbg !8222
  br i1 %2, label %4, label %3, !dbg !8222

3:                                                ; preds = %1
  tail call fastcc void @NVIC_DisableIRQ(i32 noundef %0) #20, !dbg !8224
  call void @llvm.dbg.value(metadata i32 0, metadata !8220, metadata !DIExpression()), !dbg !8221
  br label %4, !dbg !8226

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !8221
  ret i32 %5, !dbg !8227
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #10 !dbg !8228 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8230, metadata !DIExpression()), !dbg !8231
  %2 = and i32 %0, 31, !dbg !8232
  %3 = shl nuw i32 1, %2, !dbg !8233
  %4 = lshr i32 %0, 5, !dbg !8234
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %4, !dbg !8235
  store volatile i32 %3, i32* %5, align 4, !dbg !8236
  ret void, !dbg !8237
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_nvic_get_pending_irq(i32 noundef %0) local_unnamed_addr #9 !dbg !8238 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8242, metadata !DIExpression()), !dbg !8244
  call void @llvm.dbg.value(metadata i32 255, metadata !8243, metadata !DIExpression()), !dbg !8244
  %2 = icmp ugt i32 %0, 63, !dbg !8245
  br i1 %2, label %5, label %3, !dbg !8245

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @NVIC_GetPendingIRQ(i32 noundef %0) #20, !dbg !8247
  call void @llvm.dbg.value(metadata i32 %4, metadata !8243, metadata !DIExpression()), !dbg !8244
  br label %5, !dbg !8249

5:                                                ; preds = %1, %3
  %6 = phi i32 [ %4, %3 ], [ 255, %1 ], !dbg !8244
  ret i32 %6, !dbg !8250
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @NVIC_GetPendingIRQ(i32 noundef %0) unnamed_addr #9 !dbg !8251 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8255, metadata !DIExpression()), !dbg !8256
  %2 = lshr i32 %0, 5, !dbg !8257
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813056 to [8 x i32]*), i32 0, i32 %2, !dbg !8258
  %4 = load volatile i32, i32* %3, align 4, !dbg !8258
  %5 = and i32 %0, 31, !dbg !8259
  %6 = lshr i32 %4, %5, !dbg !8260
  %7 = and i32 %6, 1, !dbg !8260
  ret i32 %7, !dbg !8261
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_set_pending_irq(i32 noundef %0) local_unnamed_addr #10 !dbg !8262 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8264, metadata !DIExpression()), !dbg !8266
  call void @llvm.dbg.value(metadata i32 -1, metadata !8265, metadata !DIExpression()), !dbg !8266
  %2 = icmp ugt i32 %0, 63, !dbg !8267
  br i1 %2, label %4, label %3, !dbg !8267

3:                                                ; preds = %1
  tail call fastcc void @NVIC_SetPendingIRQ(i32 noundef %0) #20, !dbg !8269
  call void @llvm.dbg.value(metadata i32 0, metadata !8265, metadata !DIExpression()), !dbg !8266
  br label %4, !dbg !8271

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !8266
  ret i32 %5, !dbg !8272
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_SetPendingIRQ(i32 noundef %0) unnamed_addr #10 !dbg !8273 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8275, metadata !DIExpression()), !dbg !8276
  %2 = and i32 %0, 31, !dbg !8277
  %3 = shl nuw i32 1, %2, !dbg !8278
  %4 = lshr i32 %0, 5, !dbg !8279
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813056 to [8 x i32]*), i32 0, i32 %4, !dbg !8280
  store volatile i32 %3, i32* %5, align 4, !dbg !8281
  ret void, !dbg !8282
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_clear_pending_irq(i32 noundef %0) local_unnamed_addr #10 !dbg !8283 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8285, metadata !DIExpression()), !dbg !8287
  call void @llvm.dbg.value(metadata i32 -1, metadata !8286, metadata !DIExpression()), !dbg !8287
  %2 = icmp ugt i32 %0, 63, !dbg !8288
  br i1 %2, label %4, label %3, !dbg !8288

3:                                                ; preds = %1
  tail call fastcc void @NVIC_ClearPendingIRQ(i32 noundef %0) #20, !dbg !8290
  call void @llvm.dbg.value(metadata i32 0, metadata !8286, metadata !DIExpression()), !dbg !8287
  br label %4, !dbg !8292

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !8287
  ret i32 %5, !dbg !8293
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_ClearPendingIRQ(i32 noundef %0) unnamed_addr #10 !dbg !8294 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8296, metadata !DIExpression()), !dbg !8297
  %2 = and i32 %0, 31, !dbg !8298
  %3 = shl nuw i32 1, %2, !dbg !8299
  %4 = lshr i32 %0, 5, !dbg !8300
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536812928 to [8 x i32]*), i32 0, i32 %4, !dbg !8301
  store volatile i32 %3, i32* %5, align 4, !dbg !8302
  ret void, !dbg !8303
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_set_priority(i32 noundef %0, i32 noundef %1) local_unnamed_addr #10 !dbg !8304 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8308, metadata !DIExpression()), !dbg !8311
  call void @llvm.dbg.value(metadata i32 %1, metadata !8309, metadata !DIExpression()), !dbg !8311
  call void @llvm.dbg.value(metadata i32 -1, metadata !8310, metadata !DIExpression()), !dbg !8311
  %3 = icmp ugt i32 %0, 63, !dbg !8312
  br i1 %3, label %5, label %4, !dbg !8312

4:                                                ; preds = %2
  tail call fastcc void @NVIC_SetPriority(i32 noundef %0, i32 noundef %1) #20, !dbg !8314
  call void @llvm.dbg.value(metadata i32 0, metadata !8310, metadata !DIExpression()), !dbg !8311
  br label %5, !dbg !8316

5:                                                ; preds = %2, %4
  %6 = phi i32 [ 0, %4 ], [ -3, %2 ], !dbg !8311
  ret i32 %6, !dbg !8317
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_nvic_get_priority(i32 noundef %0) local_unnamed_addr #9 !dbg !8318 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8320, metadata !DIExpression()), !dbg !8322
  call void @llvm.dbg.value(metadata i32 68, metadata !8321, metadata !DIExpression()), !dbg !8322
  %2 = icmp ugt i32 %0, 63, !dbg !8323
  br i1 %2, label %5, label %3, !dbg !8323

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @NVIC_GetPriority(i32 noundef %0) #20, !dbg !8325
  call void @llvm.dbg.value(metadata i32 %4, metadata !8321, metadata !DIExpression()), !dbg !8322
  br label %5, !dbg !8327

5:                                                ; preds = %1, %3
  %6 = phi i32 [ %4, %3 ], [ 68, %1 ], !dbg !8322
  ret i32 %6, !dbg !8328
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @NVIC_GetPriority(i32 noundef %0) unnamed_addr #9 !dbg !8329 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8331, metadata !DIExpression()), !dbg !8332
  %2 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !8333
  %3 = load volatile i8, i8* %2, align 1, !dbg !8333
  %4 = lshr i8 %3, 2, !dbg !8336
  %5 = zext i8 %4 to i32, !dbg !8336
  ret i32 %5, !dbg !8337
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @isrC_main() local_unnamed_addr #0 section ".tcm_code" !dbg !8338 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !8340, metadata !DIExpression()), !dbg !8342
  tail call void @Flash_ReturnReady() #21, !dbg !8343
  %1 = tail call fastcc i32 @get_current_irq() #20, !dbg !8344
  call void @llvm.dbg.value(metadata i32 %1, metadata !8341, metadata !DIExpression()), !dbg !8342
  %2 = icmp ugt i32 %1, 63, !dbg !8345
  br i1 %2, label %12, label %3, !dbg !8345

3:                                                ; preds = %0
  %4 = getelementptr inbounds [64 x %struct.nvic_function_t], [64 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %1, i32 0, !dbg !8347
  %5 = load void (i32)*, void (i32)** %4, align 4, !dbg !8347
  %6 = icmp eq void (i32)* %5, null, !dbg !8349
  br i1 %6, label %7, label %8, !dbg !8350

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 -4, metadata !8340, metadata !DIExpression()), !dbg !8342
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @__FUNCTION__.isrC_main, i32 0, i32 0), i32 noundef 261, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.122, i32 0, i32 0)) #21, !dbg !8351
  br label %12, !dbg !8353

8:                                                ; preds = %3
  %9 = tail call fastcc i32 @get_pending_irq() #20, !dbg !8354
  %10 = getelementptr inbounds [64 x %struct.nvic_function_t], [64 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %1, i32 1, !dbg !8356
  store i32 %9, i32* %10, align 4, !dbg !8357
  %11 = load void (i32)*, void (i32)** %4, align 4, !dbg !8358
  tail call void %11(i32 noundef %1) #21, !dbg !8359
  call void @llvm.dbg.value(metadata i32 0, metadata !8340, metadata !DIExpression()), !dbg !8342
  br label %12, !dbg !8360

12:                                               ; preds = %0, %8, %7
  %13 = phi i32 [ -4, %7 ], [ 0, %8 ], [ -3, %0 ], !dbg !8342
  ret i32 %13, !dbg !8361
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @get_current_irq() unnamed_addr #9 !dbg !8362 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8365
  %2 = and i32 %1, 511, !dbg !8366
  call void @llvm.dbg.value(metadata i32 %2, metadata !8364, metadata !DIExpression()), !dbg !8367
  %3 = add nsw i32 %2, -16, !dbg !8368
  ret i32 %3, !dbg !8369
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @get_pending_irq() unnamed_addr #9 !dbg !8370 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8371
  %2 = lshr i32 %1, 22, !dbg !8372
  %3 = and i32 %2, 1, !dbg !8372
  ret i32 %3, !dbg !8373
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_nvic_register_isr_handler(i32 noundef %0, void (i32)* noundef %1) local_unnamed_addr #0 !dbg !8374 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8378, metadata !DIExpression()), !dbg !8381
  call void @llvm.dbg.value(metadata void (i32)* %1, metadata !8379, metadata !DIExpression()), !dbg !8381
  %3 = icmp ugt i32 %0, 63, !dbg !8382
  %4 = icmp eq void (i32)* %1, null
  %5 = or i1 %3, %4, !dbg !8382
  br i1 %5, label %10, label %6, !dbg !8382

6:                                                ; preds = %2
  %7 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !8384
  call void @llvm.dbg.value(metadata i32 %7, metadata !8380, metadata !DIExpression()), !dbg !8381
  tail call fastcc void @NVIC_ClearPendingIRQ(i32 noundef %0) #20, !dbg !8385
  %8 = getelementptr inbounds [64 x %struct.nvic_function_t], [64 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %0, i32 0, !dbg !8386
  store void (i32)* %1, void (i32)** %8, align 4, !dbg !8387
  %9 = getelementptr inbounds [64 x %struct.nvic_function_t], [64 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %0, i32 1, !dbg !8388
  store i32 0, i32* %9, align 4, !dbg !8389
  tail call void @restore_interrupt_mask(i32 noundef %7) #21, !dbg !8390
  br label %10, !dbg !8391

10:                                               ; preds = %2, %6
  %11 = phi i32 [ 0, %6 ], [ -2, %2 ], !dbg !8381
  ret i32 %11, !dbg !8392
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_nvic_save_and_set_interrupt_mask(i32* nocapture noundef writeonly %0) local_unnamed_addr #0 !dbg !8393 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !8397, metadata !DIExpression()), !dbg !8398
  %2 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !8399
  store i32 %2, i32* %0, align 4, !dbg !8400
  ret i32 0, !dbg !8401
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_nvic_restore_interrupt_mask(i32 noundef %0) local_unnamed_addr #0 !dbg !8402 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8406, metadata !DIExpression()), !dbg !8407
  tail call void @restore_interrupt_mask(i32 noundef %0) #21, !dbg !8408
  ret i32 0, !dbg !8409
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @save_and_set_interrupt_mask() local_unnamed_addr #0 section ".tcm_code" !dbg !8410 {
  %1 = tail call i32 asm sideeffect "MRS $0, basepri_max", "=r"() #22, !dbg !8414, !srcloc !8420
  call void @llvm.dbg.value(metadata i32 %1, metadata !8418, metadata !DIExpression()) #22, !dbg !8421
  call void @llvm.dbg.value(metadata i32 %1, metadata !8412, metadata !DIExpression()), !dbg !8422
  call void @llvm.dbg.value(metadata i32 1, metadata !8413, metadata !DIExpression()), !dbg !8422
  call void @llvm.dbg.value(metadata i32 4, metadata !8423, metadata !DIExpression()) #22, !dbg !8426
  tail call void asm sideeffect "MSR basepri, $0", "r,~{memory}"(i32 4) #22, !dbg !8428, !srcloc !8429
  tail call void asm sideeffect "dmb", ""() #22, !dbg !8430, !srcloc !8434
  tail call void asm sideeffect "isb", ""() #22, !dbg !8435, !srcloc !8438
  ret i32 %1, !dbg !8439
}

; Function Attrs: noinline nounwind optsize
define dso_local void @restore_interrupt_mask(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !8440 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8442, metadata !DIExpression()), !dbg !8443
  call void @llvm.dbg.value(metadata i32 %0, metadata !8423, metadata !DIExpression()) #22, !dbg !8444
  tail call void asm sideeffect "MSR basepri, $0", "r,~{memory}"(i32 %0) #22, !dbg !8446, !srcloc !8429
  tail call void asm sideeffect "dmb", ""() #22, !dbg !8447, !srcloc !8434
  tail call void asm sideeffect "isb", ""() #22, !dbg !8449, !srcloc !8438
  ret void, !dbg !8451
}

; Function Attrs: noinline nounwind optsize
define dso_local void @nvic_mask_all_interrupt() local_unnamed_addr #0 !dbg !8452 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !8456
  call void @llvm.dbg.value(metadata i32 %1, metadata !8455, metadata !DIExpression()), !dbg !8457
  call void @llvm.dbg.value(metadata i32 0, metadata !8454, metadata !DIExpression()), !dbg !8457
  br label %2, !dbg !8458

2:                                                ; preds = %0, %2
  %3 = phi i32 [ 0, %0 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !8454, metadata !DIExpression()), !dbg !8457
  tail call fastcc void @NVIC_DisableIRQ.129(i32 noundef %3) #20, !dbg !8460
  %4 = add nuw nsw i32 %3, 1, !dbg !8463
  call void @llvm.dbg.value(metadata i32 %4, metadata !8454, metadata !DIExpression()), !dbg !8457
  %5 = icmp eq i32 %4, 64, !dbg !8464
  br i1 %5, label %6, label %2, !dbg !8458, !llvm.loop !8465

6:                                                ; preds = %2
  tail call void @restore_interrupt_mask(i32 noundef %1) #20, !dbg !8467
  ret void, !dbg !8468
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_DisableIRQ.129(i32 noundef %0) unnamed_addr #10 !dbg !8469 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8471, metadata !DIExpression()), !dbg !8472
  %2 = and i32 %0, 31, !dbg !8473
  %3 = shl nuw i32 1, %2, !dbg !8474
  %4 = lshr i32 %0, 5, !dbg !8475
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %4, !dbg !8476
  store volatile i32 %3, i32* %5, align 4, !dbg !8477
  ret void, !dbg !8478
}

; Function Attrs: noinline nounwind optsize
define dso_local void @nvic_unmask_all_interrupt() local_unnamed_addr #0 !dbg !8479 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !8483
  call void @llvm.dbg.value(metadata i32 %1, metadata !8482, metadata !DIExpression()), !dbg !8484
  call void @llvm.dbg.value(metadata i32 0, metadata !8481, metadata !DIExpression()), !dbg !8484
  br label %2, !dbg !8485

2:                                                ; preds = %0, %2
  %3 = phi i32 [ 0, %0 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !8481, metadata !DIExpression()), !dbg !8484
  tail call fastcc void @NVIC_EnableIRQ.130(i32 noundef %3) #20, !dbg !8487
  %4 = add nuw nsw i32 %3, 1, !dbg !8490
  call void @llvm.dbg.value(metadata i32 %4, metadata !8481, metadata !DIExpression()), !dbg !8484
  %5 = icmp eq i32 %4, 64, !dbg !8491
  br i1 %5, label %6, label %2, !dbg !8485, !llvm.loop !8492

6:                                                ; preds = %2
  tail call void @restore_interrupt_mask(i32 noundef %1) #20, !dbg !8494
  ret void, !dbg !8495
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_EnableIRQ.130(i32 noundef %0) unnamed_addr #10 !dbg !8496 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8498, metadata !DIExpression()), !dbg !8499
  %2 = and i32 %0, 31, !dbg !8500
  %3 = shl nuw i32 1, %2, !dbg !8501
  %4 = lshr i32 %0, 5, !dbg !8502
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %4, !dbg !8503
  store volatile i32 %3, i32* %5, align 4, !dbg !8504
  ret void, !dbg !8505
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @nvic_clear_all_pending_interrupt() local_unnamed_addr #10 !dbg !8506 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8508, metadata !DIExpression()), !dbg !8509
  br label %1, !dbg !8510

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !8508, metadata !DIExpression()), !dbg !8509
  tail call fastcc void @NVIC_ClearPendingIRQ.131(i32 noundef %2) #20, !dbg !8512
  %3 = add nuw nsw i32 %2, 1, !dbg !8515
  call void @llvm.dbg.value(metadata i32 %3, metadata !8508, metadata !DIExpression()), !dbg !8509
  %4 = icmp eq i32 %3, 64, !dbg !8516
  br i1 %4, label %5, label %1, !dbg !8510, !llvm.loop !8517

5:                                                ; preds = %1
  ret void, !dbg !8519
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_ClearPendingIRQ.131(i32 noundef %0) unnamed_addr #10 !dbg !8520 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8522, metadata !DIExpression()), !dbg !8523
  %2 = and i32 %0, 31, !dbg !8524
  %3 = shl nuw i32 1, %2, !dbg !8525
  %4 = lshr i32 %0, 5, !dbg !8526
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536812928 to [8 x i32]*), i32 0, i32 %4, !dbg !8527
  store volatile i32 %3, i32* %5, align 4, !dbg !8528
  ret void, !dbg !8529
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @nvic_irq_software_trigger(i32 noundef %0) local_unnamed_addr #0 !dbg !8530 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8532, metadata !DIExpression()), !dbg !8533
  %2 = icmp ugt i32 %0, 63, !dbg !8534
  br i1 %2, label %4, label %3, !dbg !8534

3:                                                ; preds = %1
  tail call fastcc void @software_trigger_irq(i32 noundef %0) #20, !dbg !8536
  br label %4, !dbg !8537

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -2, %1 ], !dbg !8533
  ret i32 %5, !dbg !8538
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @software_trigger_irq(i32 noundef %0) unnamed_addr #0 !dbg !8539 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8541, metadata !DIExpression()), !dbg !8542
  %2 = and i32 %0, 511, !dbg !8543
  store volatile i32 %2, i32* inttoptr (i32 -536809728 to i32*), align 256, !dbg !8544
  tail call void asm sideeffect "dsb", ""() #22, !dbg !8545, !srcloc !8548
  ret void, !dbg !8549
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_nvic_query_exception_number() local_unnamed_addr #9 !dbg !8550 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8551
  %2 = and i32 %1, 511, !dbg !8552
  ret i32 %2, !dbg !8553
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_BlankCheck(i8* noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".ram_code" !dbg !8554 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8558, metadata !DIExpression()), !dbg !8657
  call void @llvm.dbg.value(metadata i32 %1, metadata !8559, metadata !DIExpression()), !dbg !8657
  call void @llvm.dbg.value(metadata i8* %0, metadata !8560, metadata !DIExpression()), !dbg !8657
  %3 = tail call i32 @BlockSize(i8* noundef %0, i32 noundef %1) #21, !dbg !8658
  call void @llvm.dbg.value(metadata i32 %3, metadata !8655, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shr, DW_OP_stack_value)), !dbg !8657
  call void @llvm.dbg.value(metadata i32 0, metadata !8654, metadata !DIExpression()), !dbg !8657
  call void @llvm.dbg.value(metadata i32* undef, metadata !8656, metadata !DIExpression()), !dbg !8657
  call void @llvm.dbg.value(metadata i32 0, metadata !8654, metadata !DIExpression()), !dbg !8657
  %4 = icmp ult i32 %3, 4, !dbg !8659
  br i1 %4, label %20, label %5, !dbg !8662

5:                                                ; preds = %2
  %6 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !8663
  %7 = bitcast i8* %6 to i32**, !dbg !8663
  %8 = load i32*, i32** %7, align 4, !dbg !8663
  call void @llvm.dbg.value(metadata i32* %8, metadata !8656, metadata !DIExpression()), !dbg !8657
  %9 = lshr i32 %3, 2, !dbg !8664
  call void @llvm.dbg.value(metadata i32 %9, metadata !8655, metadata !DIExpression()), !dbg !8657
  br label %10, !dbg !8662

10:                                               ; preds = %5, %16
  %11 = phi i32* [ %18, %16 ], [ %8, %5 ]
  %12 = phi i32 [ %17, %16 ], [ 0, %5 ]
  call void @llvm.dbg.value(metadata i32* %11, metadata !8656, metadata !DIExpression()), !dbg !8657
  call void @llvm.dbg.value(metadata i32 %12, metadata !8654, metadata !DIExpression()), !dbg !8657
  %13 = load i32, i32* %11, align 4, !dbg !8665
  %14 = icmp eq i32 %13, -1, !dbg !8668
  br i1 %14, label %16, label %15, !dbg !8669

15:                                               ; preds = %10
  tail call void @Flash_ReturnReady() #21, !dbg !8670
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.132, i32 0, i32 0), i32 noundef 81, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.SFI_BlankCheck, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.133, i32 0, i32 0)) #23, !dbg !8670
  unreachable, !dbg !8670

16:                                               ; preds = %10
  %17 = add nuw nsw i32 %12, 1, !dbg !8675
  call void @llvm.dbg.value(metadata i32 %17, metadata !8654, metadata !DIExpression()), !dbg !8657
  %18 = getelementptr inbounds i32, i32* %11, i32 1, !dbg !8676
  call void @llvm.dbg.value(metadata i32* %18, metadata !8656, metadata !DIExpression()), !dbg !8657
  %19 = icmp eq i32 %17, %9, !dbg !8659
  br i1 %19, label %20, label %10, !dbg !8662, !llvm.loop !8677

20:                                               ; preds = %16, %2
  ret void, !dbg !8679
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define dso_local i32 @SFI_ReverseByteOrder(i32 noundef %0) local_unnamed_addr #16 section ".ram_code" !dbg !8680 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8682, metadata !DIExpression()), !dbg !8684
  call void @llvm.dbg.value(metadata i32 0, metadata !8683, metadata !DIExpression()), !dbg !8684
  call void @llvm.dbg.value(metadata i32 %0, metadata !8683, metadata !DIExpression(DW_OP_constu, 24, DW_OP_shr, DW_OP_stack_value)), !dbg !8684
  call void @llvm.dbg.value(metadata !DIArgList(i32 %0, i32 %0), metadata !8683, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 24, DW_OP_shr, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_shr, DW_OP_constu, 65280, DW_OP_and, DW_OP_or, DW_OP_stack_value)), !dbg !8684
  call void @llvm.dbg.value(metadata !DIArgList(i32 %0, i32 %0, i32 %0), metadata !8683, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 24, DW_OP_shr, DW_OP_LLVM_arg, 2, DW_OP_constu, 8, DW_OP_shr, DW_OP_constu, 65280, DW_OP_and, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_shl, DW_OP_constu, 16711680, DW_OP_and, DW_OP_or, DW_OP_stack_value)), !dbg !8684
  %2 = tail call i32 @llvm.bswap.i32(i32 %0), !dbg !8685
  call void @llvm.dbg.value(metadata i32 %2, metadata !8683, metadata !DIExpression()), !dbg !8684
  ret i32 %2, !dbg !8686
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_MacEnable(i16 noundef zeroext %0) local_unnamed_addr #0 section ".tcm_code" !dbg !8687 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !8692, metadata !DIExpression()), !dbg !8694
  %2 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !8695
  %3 = or i32 %2, 512, !dbg !8695
  store volatile i32 %3, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !8695
  %4 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !8698
  call void @llvm.dbg.value(metadata i32 %4, metadata !8693, metadata !DIExpression()), !dbg !8694
  switch i16 %0, label %6 [
    i16 0, label %7
    i16 1, label %5
  ], !dbg !8699

5:                                                ; preds = %1
  br label %7, !dbg !8700

6:                                                ; preds = %1
  tail call void @Flash_ReturnReady() #21, !dbg !8704
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.132, i32 0, i32 0), i32 noundef 127, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.SFI_MacEnable, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.133, i32 0, i32 0)) #23, !dbg !8704
  unreachable, !dbg !8704

7:                                                ; preds = %1, %5
  %8 = phi i32* [ inttoptr (i32 -1610350528 to i32*), %5 ], [ inttoptr (i32 -1610350588 to i32*), %1 ]
  %9 = load volatile i32, i32* %8, align 4, !dbg !8709
  call void @llvm.dbg.value(metadata !DIArgList(i32 %9, i32 %4), metadata !8693, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 4, DW_OP_shl, DW_OP_constu, 16, DW_OP_and, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !8694
  call void @llvm.dbg.value(metadata !DIArgList(i32 %9, i32 %4), metadata !8693, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 4, DW_OP_shl, DW_OP_constu, 16, DW_OP_and, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_constu, 8, DW_OP_or, DW_OP_stack_value)), !dbg !8694
  br label %10, !dbg !8710

10:                                               ; preds = %10, %7
  %11 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !8711
  %12 = and i32 %11, 8192, !dbg !8712
  %13 = icmp eq i32 %12, 0, !dbg !8713
  br i1 %13, label %10, label %14, !dbg !8710, !llvm.loop !8714

14:                                               ; preds = %10, %14
  %15 = load volatile i32, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !8716
  %16 = and i32 %15, 256, !dbg !8717
  %17 = icmp eq i32 %16, 0, !dbg !8718
  br i1 %17, label %14, label %18, !dbg !8719, !llvm.loop !8720

18:                                               ; preds = %14
  %19 = shl i32 %9, 4, !dbg !8709
  call void @llvm.dbg.value(metadata !DIArgList(i32 %19, i32 %4), metadata !8693, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 16, DW_OP_and, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_constu, 8, DW_OP_or, DW_OP_stack_value)), !dbg !8694
  %20 = and i32 %19, 16, !dbg !8709
  call void @llvm.dbg.value(metadata !DIArgList(i32 %20, i32 %4), metadata !8693, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_constu, 8, DW_OP_or, DW_OP_stack_value)), !dbg !8694
  call void @llvm.dbg.value(metadata i32 undef, metadata !8693, metadata !DIExpression(DW_OP_constu, 8, DW_OP_or, DW_OP_stack_value)), !dbg !8694
  %21 = or i32 %4, %20, !dbg !8722
  %22 = or i32 %21, 8, !dbg !8722
  call void @llvm.dbg.value(metadata i32 %22, metadata !8693, metadata !DIExpression()), !dbg !8694
  store volatile i32 %22, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !8723
  ret void, !dbg !8724
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SFI_MacLeave(i16 zeroext %0) local_unnamed_addr #10 section ".tcm_code" !dbg !8725 {
  call void @llvm.dbg.value(metadata i16 undef, metadata !8727, metadata !DIExpression()), !dbg !8729
  %2 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !8730
  call void @llvm.dbg.value(metadata i32 %2, metadata !8728, metadata !DIExpression()), !dbg !8729
  %3 = and i32 %2, -268435477, !dbg !8731
  call void @llvm.dbg.value(metadata i32 %3, metadata !8728, metadata !DIExpression()), !dbg !8729
  store volatile i32 %3, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !8732
  br label %4, !dbg !8733

4:                                                ; preds = %4, %1
  %5 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !8734
  %6 = and i32 %5, 2, !dbg !8735
  %7 = icmp eq i32 %6, 0, !dbg !8733
  br i1 %7, label %8, label %4, !dbg !8733, !llvm.loop !8736

8:                                                ; preds = %4
  %9 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !8738
  call void @llvm.dbg.value(metadata i32 %9, metadata !8728, metadata !DIExpression()), !dbg !8729
  %10 = and i32 %9, -9, !dbg !8739
  call void @llvm.dbg.value(metadata i32 %10, metadata !8728, metadata !DIExpression()), !dbg !8729
  store volatile i32 %10, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !8740
  br label %11, !dbg !8741

11:                                               ; preds = %11, %8
  %12 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !8742
  %13 = and i32 %12, 8, !dbg !8743
  %14 = icmp eq i32 %13, 0, !dbg !8741
  br i1 %14, label %15, label %11, !dbg !8741, !llvm.loop !8744

15:                                               ; preds = %11
  %16 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !8746, !range !3343
  %17 = icmp eq i8 %16, 0, !dbg !8748
  br i1 %17, label %18, label %21, !dbg !8749

18:                                               ; preds = %15
  %19 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !8750
  %20 = and i32 %19, -513, !dbg !8750
  store volatile i32 %20, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !8750
  br label %21, !dbg !8754

21:                                               ; preds = %18, %15
  ret void, !dbg !8755
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @SFI_MacTrigger(i16 noundef zeroext %0) local_unnamed_addr #10 section ".tcm_code" !dbg !8756 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !8760, metadata !DIExpression()), !dbg !8763
  call void @llvm.dbg.value(metadata i32 0, metadata !8761, metadata !DIExpression()), !dbg !8763
  call void @llvm.dbg.value(metadata i32 0, metadata !8762, metadata !DIExpression()), !dbg !8763
  %2 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !8764
  call void @llvm.dbg.value(metadata i32 %2, metadata !8761, metadata !DIExpression()), !dbg !8763
  call void @llvm.dbg.value(metadata i32 %2, metadata !8761, metadata !DIExpression(DW_OP_constu, 12, DW_OP_or, DW_OP_stack_value)), !dbg !8763
  %3 = icmp eq i16 %0, 1, !dbg !8765
  %4 = select i1 %3, i32 268435468, i32 12, !dbg !8767
  %5 = or i32 %2, %4, !dbg !8767
  call void @llvm.dbg.value(metadata i32 %5, metadata !8761, metadata !DIExpression()), !dbg !8763
  store volatile i32 %5, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !8768
  br label %6, !dbg !8769

6:                                                ; preds = %6, %1
  %7 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !8770
  %8 = and i32 %7, 2, !dbg !8771
  %9 = icmp eq i32 %8, 0, !dbg !8772
  br i1 %9, label %6, label %10, !dbg !8769, !llvm.loop !8773

10:                                               ; preds = %6, %10
  %11 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !8775
  %12 = and i32 %11, 1, !dbg !8776
  %13 = icmp eq i32 %12, 0, !dbg !8777
  br i1 %13, label %14, label %10, !dbg !8777, !llvm.loop !8778

14:                                               ; preds = %10
  ret i32 0, !dbg !8780
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SFI_MacWaitReady(i16 noundef zeroext %0) local_unnamed_addr #10 section ".tcm_code" !dbg !8781 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !8783, metadata !DIExpression()), !dbg !8784
  %2 = tail call i32 @SFI_MacTrigger(i16 noundef zeroext %0) #20, !dbg !8785
  tail call void @SFI_MacLeave(i16 zeroext undef) #20, !dbg !8786
  ret void, !dbg !8787
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_Dev_Command(i16 noundef zeroext %0, i32 noundef %1) local_unnamed_addr #0 section ".tcm_code" !dbg !8788 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !8792, metadata !DIExpression()), !dbg !8797
  call void @llvm.dbg.value(metadata i32 %1, metadata !8793, metadata !DIExpression()), !dbg !8797
  call void @llvm.dbg.value(metadata i32 %1, metadata !8794, metadata !DIExpression()), !dbg !8797
  call void @llvm.dbg.value(metadata i8 0, metadata !8796, metadata !DIExpression()), !dbg !8797
  call void @llvm.dbg.value(metadata i32 0, metadata !8795, metadata !DIExpression()), !dbg !8797
  %3 = icmp eq i32 %1, 0, !dbg !8798
  br i1 %3, label %16, label %4, !dbg !8801

4:                                                ; preds = %2, %4
  %5 = phi i8 [ %12, %4 ], [ 0, %2 ]
  %6 = phi i32 [ %10, %4 ], [ 0, %2 ]
  %7 = phi i32 [ %11, %4 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8 %5, metadata !8796, metadata !DIExpression()), !dbg !8797
  call void @llvm.dbg.value(metadata i32 %6, metadata !8795, metadata !DIExpression()), !dbg !8797
  call void @llvm.dbg.value(metadata i32 %7, metadata !8794, metadata !DIExpression()), !dbg !8797
  %8 = shl i32 %6, 8, !dbg !8802
  %9 = and i32 %7, 255, !dbg !8804
  %10 = or i32 %8, %9, !dbg !8805
  call void @llvm.dbg.value(metadata i32 %10, metadata !8795, metadata !DIExpression()), !dbg !8797
  %11 = lshr i32 %7, 8, !dbg !8806
  call void @llvm.dbg.value(metadata i32 %11, metadata !8794, metadata !DIExpression()), !dbg !8797
  %12 = add nuw nsw i8 %5, 1, !dbg !8807
  call void @llvm.dbg.value(metadata i8 %12, metadata !8796, metadata !DIExpression()), !dbg !8797
  %13 = icmp ult i32 %7, 256, !dbg !8798
  br i1 %13, label %14, label %4, !dbg !8801, !llvm.loop !8808

14:                                               ; preds = %4
  %15 = zext i8 %12 to i32, !dbg !8810
  tail call void @SFI_MacEnable(i16 noundef zeroext %0) #20, !dbg !8812
  store volatile i32 %10, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !8813
  store volatile i32 %15, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !8814
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !8815
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %0) #20, !dbg !8816
  br label %16, !dbg !8817

16:                                               ; preds = %2, %14
  ret void, !dbg !8818
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_Dev_CommandAddress(i16 noundef zeroext %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #0 section ".ram_code" !dbg !8819 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !8823, metadata !DIExpression()), !dbg !8829
  call void @llvm.dbg.value(metadata i8 %1, metadata !8824, metadata !DIExpression()), !dbg !8829
  call void @llvm.dbg.value(metadata i32 %2, metadata !8825, metadata !DIExpression()), !dbg !8829
  call void @llvm.dbg.value(metadata i32 %3, metadata !8826, metadata !DIExpression()), !dbg !8829
  %5 = tail call i32 @SFI_ReverseByteOrder(i32 noundef %2) #20, !dbg !8830
  call void @llvm.dbg.value(metadata i32 %5, metadata !8828, metadata !DIExpression()), !dbg !8829
  %6 = icmp eq i32 %3, 3, !dbg !8831
  br i1 %6, label %7, label %11, !dbg !8833

7:                                                ; preds = %4
  %8 = and i32 %5, -256, !dbg !8834
  %9 = zext i8 %1 to i32, !dbg !8836
  %10 = or i32 %8, %9, !dbg !8837
  call void @llvm.dbg.value(metadata i32 %10, metadata !8827, metadata !DIExpression()), !dbg !8829
  br label %16, !dbg !8838

11:                                               ; preds = %4
  %12 = shl i32 %5, 8, !dbg !8839
  %13 = zext i8 %1 to i32, !dbg !8841
  %14 = or i32 %12, %13, !dbg !8842
  call void @llvm.dbg.value(metadata i32 %14, metadata !8827, metadata !DIExpression()), !dbg !8829
  %15 = lshr i32 %5, 24, !dbg !8843
  call void @llvm.dbg.value(metadata i32 %15, metadata !8828, metadata !DIExpression()), !dbg !8829
  br label %16

16:                                               ; preds = %11, %7
  %17 = phi i32 [ %10, %7 ], [ %14, %11 ], !dbg !8844
  %18 = phi i32 [ %5, %7 ], [ %15, %11 ], !dbg !8829
  call void @llvm.dbg.value(metadata i32 %18, metadata !8828, metadata !DIExpression()), !dbg !8829
  call void @llvm.dbg.value(metadata i32 %17, metadata !8827, metadata !DIExpression()), !dbg !8829
  store volatile i32 %17, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !8845
  store volatile i32 %18, i32* inttoptr (i32 -1610348540 to i32*), align 4, !dbg !8846
  %19 = add i32 %3, 1, !dbg !8847
  store volatile i32 %19, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !8848
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !8849
  tail call void @SFI_MacEnable(i16 noundef zeroext %0) #20, !dbg !8850
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %0) #20, !dbg !8851
  ret void, !dbg !8852
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define dso_local i32 @SFI_GPRAM_Write_C1A3(i32 noundef %0, i32 noundef %1) local_unnamed_addr #16 section ".ram_code" !dbg !8853 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8857, metadata !DIExpression()), !dbg !8859
  call void @llvm.dbg.value(metadata i32 %1, metadata !8858, metadata !DIExpression()), !dbg !8859
  %3 = tail call i32 @SFI_ReverseByteOrder(i32 noundef %1) #20, !dbg !8860
  %4 = and i32 %3, -256, !dbg !8861
  %5 = and i32 %0, 255, !dbg !8862
  %6 = or i32 %4, %5, !dbg !8863
  ret i32 %6, !dbg !8864
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @SFI_GPRAM_Write_C1A4(i32 noundef %0, i32 noundef %1, i8** nocapture noundef %2, i32* nocapture noundef %3) local_unnamed_addr #7 section ".ram_code" !dbg !8865 {
  %5 = alloca %union.anon, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !8870, metadata !DIExpression()), !dbg !8885
  call void @llvm.dbg.value(metadata i32 %1, metadata !8871, metadata !DIExpression()), !dbg !8885
  call void @llvm.dbg.value(metadata i8** %2, metadata !8872, metadata !DIExpression()), !dbg !8885
  call void @llvm.dbg.value(metadata i32* %3, metadata !8873, metadata !DIExpression()), !dbg !8885
  %6 = bitcast %union.anon* %5 to i8*, !dbg !8886
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #22, !dbg !8886
  call void @llvm.dbg.declare(metadata %union.anon* %5, metadata !8874, metadata !DIExpression()), !dbg !8887
  %7 = tail call i32 @SFI_ReverseByteOrder(i32 noundef %1) #20, !dbg !8888
  call void @llvm.dbg.value(metadata i32 %7, metadata !8883, metadata !DIExpression()), !dbg !8885
  call void @llvm.dbg.value(metadata !DIArgList(i32 %7, i32 %0), metadata !8882, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 8, DW_OP_shl, DW_OP_LLVM_arg, 1, DW_OP_constu, 255, DW_OP_and, DW_OP_or, DW_OP_stack_value)), !dbg !8885
  %8 = lshr i32 %7, 24, !dbg !8889
  call void @llvm.dbg.value(metadata i32 %8, metadata !8883, metadata !DIExpression()), !dbg !8885
  %9 = trunc i32 %8 to i8, !dbg !8890
  %10 = bitcast %union.anon* %5 to [4 x i8]*, !dbg !8891
  store i8 %9, i8* %6, align 4, !dbg !8892
  call void @llvm.dbg.value(metadata i32 1, metadata !8884, metadata !DIExpression()), !dbg !8885
  %11 = load i8*, i8** %2, align 4, !dbg !8893
  br label %12, !dbg !8897

12:                                               ; preds = %4, %12
  %13 = phi i8* [ %11, %4 ], [ %17, %12 ], !dbg !8893
  %14 = phi i32 [ 1, %4 ], [ %18, %12 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !8884, metadata !DIExpression()), !dbg !8885
  %15 = load i8, i8* %13, align 1, !dbg !8898
  %16 = getelementptr inbounds [4 x i8], [4 x i8]* %10, i32 0, i32 %14, !dbg !8899
  store i8 %15, i8* %16, align 1, !dbg !8900
  %17 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !8901
  store i8* %17, i8** %2, align 4, !dbg !8901
  %18 = add nuw nsw i32 %14, 1, !dbg !8902
  call void @llvm.dbg.value(metadata i32 %18, metadata !8884, metadata !DIExpression()), !dbg !8885
  %19 = icmp eq i32 %18, 4, !dbg !8903
  br i1 %19, label %20, label %12, !dbg !8897, !llvm.loop !8904

20:                                               ; preds = %12
  %21 = getelementptr inbounds %union.anon, %union.anon* %5, i32 0, i32 0, !dbg !8906
  %22 = load i32, i32* %21, align 4, !dbg !8906
  call void @llvm.dbg.value(metadata i32 %22, metadata !8883, metadata !DIExpression()), !dbg !8885
  %23 = load i32, i32* %3, align 4, !dbg !8907
  %24 = tail call i32 @llvm.usub.sat.i32(i32 %23, i32 3), !dbg !8908
  %25 = shl i32 %7, 8, !dbg !8909
  call void @llvm.dbg.value(metadata !DIArgList(i32 %25, i32 %0), metadata !8882, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 255, DW_OP_and, DW_OP_or, DW_OP_stack_value)), !dbg !8885
  %26 = and i32 %0, 255, !dbg !8910
  call void @llvm.dbg.value(metadata !DIArgList(i32 %7, i32 %26), metadata !8882, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 8, DW_OP_shl, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !8885
  %27 = or i32 %25, %26, !dbg !8911
  call void @llvm.dbg.value(metadata i32 %27, metadata !8882, metadata !DIExpression()), !dbg !8885
  store i32 %24, i32* %3, align 4, !dbg !8912
  store volatile i32 %22, i32* inttoptr (i32 -1610348540 to i32*), align 4, !dbg !8913
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #22, !dbg !8914
  ret i32 %27, !dbg !8915
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @SFI_GPRAM_Write(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #7 section ".ram_code" !dbg !8916 {
  %4 = alloca %union.anon, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !8920, metadata !DIExpression()), !dbg !8926
  call void @llvm.dbg.value(metadata i8* %1, metadata !8921, metadata !DIExpression()), !dbg !8926
  call void @llvm.dbg.value(metadata i32 %2, metadata !8922, metadata !DIExpression()), !dbg !8926
  call void @llvm.dbg.value(metadata i8* %1, metadata !8924, metadata !DIExpression()), !dbg !8926
  %5 = bitcast %union.anon* %4 to i8*, !dbg !8927
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #22, !dbg !8927
  call void @llvm.dbg.declare(metadata %union.anon* %4, metadata !8925, metadata !DIExpression()), !dbg !8928
  %6 = add i32 %0, -1610348544, !dbg !8929
  call void @llvm.dbg.value(metadata i32 %6, metadata !8920, metadata !DIExpression()), !dbg !8926
  %7 = ptrtoint i8* %1 to i32, !dbg !8930
  %8 = and i32 %7, 3, !dbg !8932
  %9 = icmp eq i32 %8, 0, !dbg !8933
  br i1 %9, label %10, label %23, !dbg !8934

10:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8924, metadata !DIExpression()), !dbg !8926
  call void @llvm.dbg.value(metadata i32 %2, metadata !8922, metadata !DIExpression()), !dbg !8926
  call void @llvm.dbg.value(metadata i32 %6, metadata !8920, metadata !DIExpression()), !dbg !8926
  %11 = icmp sgt i32 %2, 0, !dbg !8935
  br i1 %11, label %12, label %72, !dbg !8939

12:                                               ; preds = %10, %12
  %13 = phi i8* [ %20, %12 ], [ %1, %10 ]
  %14 = phi i32 [ %21, %12 ], [ %2, %10 ]
  %15 = phi i32 [ %19, %12 ], [ %6, %10 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !8924, metadata !DIExpression()), !dbg !8926
  call void @llvm.dbg.value(metadata i32 %14, metadata !8922, metadata !DIExpression()), !dbg !8926
  call void @llvm.dbg.value(metadata i32 %15, metadata !8920, metadata !DIExpression()), !dbg !8926
  %16 = bitcast i8* %13 to i32*, !dbg !8940
  %17 = load i32, i32* %16, align 4, !dbg !8940
  %18 = inttoptr i32 %15 to i32*, !dbg !8940
  store volatile i32 %17, i32* %18, align 4, !dbg !8940
  %19 = add i32 %15, 4, !dbg !8942
  call void @llvm.dbg.value(metadata i32 %19, metadata !8920, metadata !DIExpression()), !dbg !8926
  %20 = getelementptr inbounds i8, i8* %13, i32 4, !dbg !8943
  call void @llvm.dbg.value(metadata i8* %20, metadata !8924, metadata !DIExpression()), !dbg !8926
  %21 = add nsw i32 %14, -4, !dbg !8944
  call void @llvm.dbg.value(metadata i32 %21, metadata !8922, metadata !DIExpression()), !dbg !8926
  %22 = icmp ugt i32 %14, 4, !dbg !8935
  br i1 %22, label %12, label %72, !dbg !8939, !llvm.loop !8945

23:                                               ; preds = %3
  %24 = and i32 %7, 1, !dbg !8947
  %25 = icmp eq i32 %24, 0, !dbg !8949
  call void @llvm.dbg.value(metadata i8* %1, metadata !8924, metadata !DIExpression()), !dbg !8926
  call void @llvm.dbg.value(metadata i8* %1, metadata !8924, metadata !DIExpression()), !dbg !8926
  call void @llvm.dbg.value(metadata i32 %2, metadata !8922, metadata !DIExpression()), !dbg !8926
  call void @llvm.dbg.value(metadata i32 %2, metadata !8922, metadata !DIExpression()), !dbg !8926
  call void @llvm.dbg.value(metadata i32 %6, metadata !8920, metadata !DIExpression()), !dbg !8926
  call void @llvm.dbg.value(metadata i32 %6, metadata !8920, metadata !DIExpression()), !dbg !8926
  %26 = icmp sgt i32 %2, 0, !dbg !8950
  br i1 %25, label %31, label %27, !dbg !8951

27:                                               ; preds = %23
  br i1 %26, label %28, label %72, !dbg !8952

28:                                               ; preds = %27
  %29 = bitcast %union.anon* %4 to [4 x i8]*
  %30 = getelementptr inbounds %union.anon, %union.anon* %4, i32 0, i32 0
  br label %52, !dbg !8952

31:                                               ; preds = %23
  br i1 %26, label %32, label %72, !dbg !8955

32:                                               ; preds = %31
  %33 = bitcast %union.anon* %4 to [2 x i16]*
  %34 = bitcast %union.anon* %4 to i16*
  %35 = getelementptr inbounds [2 x i16], [2 x i16]* %33, i32 0, i32 1
  %36 = getelementptr inbounds %union.anon, %union.anon* %4, i32 0, i32 0
  br label %37, !dbg !8955

37:                                               ; preds = %32, %37
  %38 = phi i8* [ %1, %32 ], [ %49, %37 ]
  %39 = phi i32 [ %2, %32 ], [ %50, %37 ]
  %40 = phi i32 [ %6, %32 ], [ %48, %37 ]
  call void @llvm.dbg.value(metadata i8* %38, metadata !8924, metadata !DIExpression()), !dbg !8926
  call void @llvm.dbg.value(metadata i32 %39, metadata !8922, metadata !DIExpression()), !dbg !8926
  call void @llvm.dbg.value(metadata i32 %40, metadata !8920, metadata !DIExpression()), !dbg !8926
  %41 = bitcast i8* %38 to i16*, !dbg !8958
  %42 = load i16, i16* %41, align 2, !dbg !8958
  store i16 %42, i16* %34, align 4, !dbg !8961
  %43 = getelementptr inbounds i8, i8* %38, i32 2, !dbg !8962
  %44 = bitcast i8* %43 to i16*, !dbg !8962
  %45 = load i16, i16* %44, align 2, !dbg !8963
  store i16 %45, i16* %35, align 2, !dbg !8964
  %46 = load i32, i32* %36, align 4, !dbg !8965
  %47 = inttoptr i32 %40 to i32*, !dbg !8965
  store volatile i32 %46, i32* %47, align 4, !dbg !8965
  %48 = add i32 %40, 4, !dbg !8966
  call void @llvm.dbg.value(metadata i32 %48, metadata !8920, metadata !DIExpression()), !dbg !8926
  %49 = getelementptr inbounds i8, i8* %38, i32 4, !dbg !8967
  call void @llvm.dbg.value(metadata i8* %49, metadata !8924, metadata !DIExpression()), !dbg !8926
  %50 = add nsw i32 %39, -4, !dbg !8968
  call void @llvm.dbg.value(metadata i32 %50, metadata !8922, metadata !DIExpression()), !dbg !8926
  %51 = icmp ugt i32 %39, 4, !dbg !8969
  br i1 %51, label %37, label %72, !dbg !8955, !llvm.loop !8970

52:                                               ; preds = %28, %66
  %53 = phi i8* [ %1, %28 ], [ %59, %66 ]
  %54 = phi i32 [ %2, %28 ], [ %70, %66 ]
  %55 = phi i32 [ %6, %28 ], [ %69, %66 ]
  call void @llvm.dbg.value(metadata i8* %53, metadata !8924, metadata !DIExpression()), !dbg !8926
  call void @llvm.dbg.value(metadata i32 %54, metadata !8922, metadata !DIExpression()), !dbg !8926
  call void @llvm.dbg.value(metadata i32 %55, metadata !8920, metadata !DIExpression()), !dbg !8926
  call void @llvm.dbg.value(metadata i8* %53, metadata !8924, metadata !DIExpression()), !dbg !8926
  call void @llvm.dbg.value(metadata i32 0, metadata !8923, metadata !DIExpression()), !dbg !8926
  br label %56, !dbg !8972

56:                                               ; preds = %52, %56
  %57 = phi i8* [ %53, %52 ], [ %59, %56 ]
  %58 = phi i32 [ 0, %52 ], [ %62, %56 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !8924, metadata !DIExpression()), !dbg !8926
  call void @llvm.dbg.value(metadata i32 %58, metadata !8923, metadata !DIExpression()), !dbg !8926
  %59 = getelementptr inbounds i8, i8* %57, i32 1, !dbg !8976
  call void @llvm.dbg.value(metadata i8* %59, metadata !8924, metadata !DIExpression()), !dbg !8926
  %60 = load i8, i8* %57, align 1, !dbg !8979
  %61 = getelementptr inbounds [4 x i8], [4 x i8]* %29, i32 0, i32 %58, !dbg !8980
  store i8 %60, i8* %61, align 1, !dbg !8981
  %62 = add nuw nsw i32 %58, 1, !dbg !8982
  call void @llvm.dbg.value(metadata i32 %62, metadata !8923, metadata !DIExpression()), !dbg !8926
  %63 = icmp ult i32 %58, 3, !dbg !8983
  %64 = icmp ult i32 %62, %54, !dbg !8984
  %65 = select i1 %63, i1 %64, i1 false, !dbg !8984
  br i1 %65, label %56, label %66, !dbg !8972, !llvm.loop !8985

66:                                               ; preds = %56
  %67 = load i32, i32* %30, align 4, !dbg !8987
  %68 = inttoptr i32 %55 to i32*, !dbg !8987
  store volatile i32 %67, i32* %68, align 4, !dbg !8987
  %69 = add i32 %55, 4, !dbg !8988
  call void @llvm.dbg.value(metadata i32 %69, metadata !8920, metadata !DIExpression()), !dbg !8926
  %70 = add nsw i32 %54, -4, !dbg !8989
  call void @llvm.dbg.value(metadata i8* %59, metadata !8924, metadata !DIExpression()), !dbg !8926
  call void @llvm.dbg.value(metadata i32 %70, metadata !8922, metadata !DIExpression()), !dbg !8926
  %71 = icmp sgt i32 %54, 4, !dbg !8990
  br i1 %71, label %52, label %72, !dbg !8952, !llvm.loop !8991

72:                                               ; preds = %66, %37, %12, %27, %31, %10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #22, !dbg !8993
  ret void, !dbg !8993
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* nocapture noundef readonly %1, i8* nocapture noundef writeonly %2, i16 noundef zeroext %3, i16 noundef zeroext %4) local_unnamed_addr #0 section ".ram_code" !dbg !8994 {
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i16 %0, metadata !8998, metadata !DIExpression()), !dbg !9008
  call void @llvm.dbg.value(metadata i8* %1, metadata !8999, metadata !DIExpression()), !dbg !9008
  call void @llvm.dbg.value(metadata i8* %2, metadata !9000, metadata !DIExpression()), !dbg !9008
  call void @llvm.dbg.value(metadata i16 %3, metadata !9001, metadata !DIExpression()), !dbg !9008
  call void @llvm.dbg.value(metadata i16 %4, metadata !9002, metadata !DIExpression()), !dbg !9008
  %7 = bitcast i32* %6 to i8*, !dbg !9009
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #22, !dbg !9009
  call void @llvm.dbg.value(metadata i8* %7, metadata !9007, metadata !DIExpression()), !dbg !9008
  call void @llvm.dbg.value(metadata i32 0, metadata !9004, metadata !DIExpression()), !dbg !9008
  call void @llvm.dbg.value(metadata i8* inttoptr (i32 -1610348544 to i8*), metadata !9006, metadata !DIExpression()), !dbg !9008
  %8 = zext i16 %3 to i32
  call void @llvm.dbg.value(metadata i8* inttoptr (i32 -1610348544 to i8*), metadata !9006, metadata !DIExpression()), !dbg !9008
  call void @llvm.dbg.value(metadata i32 0, metadata !9004, metadata !DIExpression()), !dbg !9008
  %9 = icmp eq i16 %3, 0, !dbg !9010
  br i1 %9, label %33, label %10, !dbg !9013

10:                                               ; preds = %5, %27
  %11 = phi i8* [ %31, %27 ], [ inttoptr (i32 -1610348544 to i8*), %5 ]
  %12 = phi i32 [ %29, %27 ], [ 0, %5 ]
  call void @llvm.dbg.value(metadata i8* %11, metadata !9006, metadata !DIExpression()), !dbg !9008
  call void @llvm.dbg.value(metadata i32 %12, metadata !9004, metadata !DIExpression()), !dbg !9008
  call void @llvm.dbg.value(metadata i32 0, metadata !9005, metadata !DIExpression()), !dbg !9008
  call void @llvm.dbg.value(metadata i32 0, metadata !9003, metadata !DIExpression()), !dbg !9008
  store i32 0, i32* %6, align 4, !dbg !9014
  call void @llvm.dbg.value(metadata i32 0, metadata !9005, metadata !DIExpression()), !dbg !9008
  call void @llvm.dbg.value(metadata i32 %12, metadata !9004, metadata !DIExpression()), !dbg !9008
  %13 = icmp ult i32 %12, %8, !dbg !9017
  br i1 %13, label %14, label %27, !dbg !9019

14:                                               ; preds = %10, %14
  %15 = phi i32 [ %21, %14 ], [ 0, %10 ]
  %16 = phi i32 [ %20, %14 ], [ %12, %10 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !9005, metadata !DIExpression()), !dbg !9008
  call void @llvm.dbg.value(metadata i32 %16, metadata !9004, metadata !DIExpression()), !dbg !9008
  %17 = getelementptr inbounds i8, i8* %1, i32 %16, !dbg !9020
  %18 = load i8, i8* %17, align 1, !dbg !9020
  %19 = getelementptr inbounds i8, i8* %7, i32 %15, !dbg !9022
  store i8 %18, i8* %19, align 1, !dbg !9023
  %20 = add nuw nsw i32 %16, 1, !dbg !9024
  call void @llvm.dbg.value(metadata i32 %20, metadata !9004, metadata !DIExpression()), !dbg !9008
  %21 = add nuw nsw i32 %15, 1, !dbg !9025
  call void @llvm.dbg.value(metadata i32 %21, metadata !9005, metadata !DIExpression()), !dbg !9008
  %22 = icmp ult i32 %20, %8, !dbg !9017
  %23 = icmp ult i32 %15, 3, !dbg !9026
  %24 = select i1 %22, i1 %23, i1 false, !dbg !9026
  br i1 %24, label %14, label %25, !dbg !9019, !llvm.loop !9027

25:                                               ; preds = %14
  %26 = load i32, i32* %6, align 4, !dbg !9029
  br label %27, !dbg !9029

27:                                               ; preds = %25, %10
  %28 = phi i32 [ 0, %10 ], [ %26, %25 ], !dbg !9029
  %29 = phi i32 [ %12, %10 ], [ %20, %25 ], !dbg !9030
  call void @llvm.dbg.value(metadata i32 %28, metadata !9003, metadata !DIExpression()), !dbg !9008
  %30 = bitcast i8* %11 to i32*, !dbg !9029
  store volatile i32 %28, i32* %30, align 4, !dbg !9029
  %31 = getelementptr inbounds i8, i8* %11, i32 4, !dbg !9031
  call void @llvm.dbg.value(metadata i8* %31, metadata !9006, metadata !DIExpression()), !dbg !9008
  call void @llvm.dbg.value(metadata i32 %29, metadata !9004, metadata !DIExpression()), !dbg !9008
  %32 = icmp ult i32 %29, %8, !dbg !9010
  br i1 %32, label %10, label %33, !dbg !9013, !llvm.loop !9032

33:                                               ; preds = %27, %5
  store volatile i32 %8, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !9034
  %34 = zext i16 %4 to i32, !dbg !9035
  store volatile i32 %34, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !9036
  tail call void @SFI_MacEnable(i16 noundef zeroext %0) #20, !dbg !9037
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %0) #20, !dbg !9038
  call void @llvm.dbg.value(metadata !DIArgList(i8* inttoptr (i32 -1610348544 to i8*), i32 %8), metadata !9006, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !9008
  call void @llvm.dbg.value(metadata i8* %2, metadata !9000, metadata !DIExpression()), !dbg !9008
  call void @llvm.dbg.value(metadata i32 0, metadata !9004, metadata !DIExpression()), !dbg !9008
  %35 = icmp eq i16 %4, 0, !dbg !9039
  br i1 %35, label %47, label %36, !dbg !9042

36:                                               ; preds = %33
  %37 = getelementptr inbounds i8, i8* inttoptr (i32 -1610348544 to i8*), i32 %8, !dbg !9043
  call void @llvm.dbg.value(metadata i8* %37, metadata !9006, metadata !DIExpression()), !dbg !9008
  br label %38, !dbg !9042

38:                                               ; preds = %36, %38
  %39 = phi i8* [ %44, %38 ], [ %2, %36 ]
  %40 = phi i8* [ %45, %38 ], [ %37, %36 ]
  %41 = phi i32 [ %43, %38 ], [ 0, %36 ]
  call void @llvm.dbg.value(metadata i8* %39, metadata !9000, metadata !DIExpression()), !dbg !9008
  call void @llvm.dbg.value(metadata i8* %40, metadata !9006, metadata !DIExpression()), !dbg !9008
  call void @llvm.dbg.value(metadata i32 %41, metadata !9004, metadata !DIExpression()), !dbg !9008
  %42 = load volatile i8, i8* %40, align 1, !dbg !9044
  store i8 %42, i8* %39, align 1, !dbg !9046
  %43 = add nuw nsw i32 %41, 1, !dbg !9047
  call void @llvm.dbg.value(metadata i32 %43, metadata !9004, metadata !DIExpression()), !dbg !9008
  %44 = getelementptr inbounds i8, i8* %39, i32 1, !dbg !9048
  call void @llvm.dbg.value(metadata i8* %44, metadata !9000, metadata !DIExpression()), !dbg !9008
  %45 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !9049
  call void @llvm.dbg.value(metadata i8* %45, metadata !9006, metadata !DIExpression()), !dbg !9008
  %46 = icmp eq i32 %43, %34, !dbg !9039
  br i1 %46, label %47, label %38, !dbg !9042, !llvm.loop !9050

47:                                               ; preds = %38, %33
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #22, !dbg !9052
  ret void, !dbg !9052
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_Dev_Command_List(i16 noundef zeroext %0, i8* noundef readonly %1) local_unnamed_addr #0 section ".ram_code" !dbg !9053 {
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i16 %0, metadata !9057, metadata !DIExpression()), !dbg !9065
  call void @llvm.dbg.value(metadata i8* %1, metadata !9058, metadata !DIExpression()), !dbg !9065
  call void @llvm.dbg.value(metadata i32 0, metadata !9059, metadata !DIExpression()), !dbg !9065
  %4 = icmp eq i8* %1, null, !dbg !9066
  br i1 %4, label %67, label %5, !dbg !9068

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !9069
  call void @llvm.dbg.value(metadata i32 %27, metadata !9060, metadata !DIExpression()), !dbg !9065
  %7 = icmp eq i16 %0, 0
  br label %8, !dbg !9070

8:                                                ; preds = %61, %5
  %9 = phi i32 [ 0, %5 ], [ %66, %61 ], !dbg !9065
  call void @llvm.dbg.value(metadata i32 %9, metadata !9059, metadata !DIExpression()), !dbg !9065
  %10 = getelementptr inbounds i8, i8* %1, i32 %9, !dbg !9071
  %11 = load i8, i8* %10, align 1, !dbg !9071
  switch i8 %11, label %26 [
    i8 1, label %12
    i8 2, label %12
    i8 3, label %19
  ], !dbg !9072

12:                                               ; preds = %8, %8
  br i1 %7, label %13, label %16, !dbg !9073

13:                                               ; preds = %12
  %14 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !9076
  %15 = and i32 %14, -2, !dbg !9076
  store volatile i32 %15, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !9076
  br label %41, !dbg !9080

16:                                               ; preds = %12
  %17 = load volatile i32, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !9081
  %18 = and i32 %17, -2, !dbg !9081
  store volatile i32 %18, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !9081
  br label %41

19:                                               ; preds = %8
  br i1 %7, label %20, label %23, !dbg !9084

20:                                               ; preds = %19
  %21 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !9086
  %22 = or i32 %21, 1, !dbg !9086
  store volatile i32 %22, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !9086
  br label %41, !dbg !9090

23:                                               ; preds = %19
  %24 = load volatile i32, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !9091
  %25 = or i32 %24, 1, !dbg !9091
  store volatile i32 %25, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !9091
  br label %41

26:                                               ; preds = %8
  %27 = and i32 %6, 1, !dbg !9069
  %28 = icmp eq i32 %27, 0, !dbg !9094
  br i1 %7, label %29, label %35, !dbg !9097

29:                                               ; preds = %26
  %30 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !9098
  br i1 %28, label %33, label %31, !dbg !9101

31:                                               ; preds = %29
  %32 = or i32 %30, 1, !dbg !9098
  store volatile i32 %32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !9098
  br label %67, !dbg !9098

33:                                               ; preds = %29
  %34 = and i32 %30, -2, !dbg !9098
  store volatile i32 %34, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !9098
  br label %67

35:                                               ; preds = %26
  %36 = load volatile i32, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !9102
  br i1 %28, label %39, label %37, !dbg !9105

37:                                               ; preds = %35
  %38 = or i32 %36, 1, !dbg !9102
  store volatile i32 %38, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !9102
  br label %67, !dbg !9102

39:                                               ; preds = %35
  %40 = and i32 %36, -2, !dbg !9102
  store volatile i32 %40, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !9102
  br label %67

41:                                               ; preds = %20, %23, %13, %16
  %42 = add i32 %9, 2, !dbg !9106
  %43 = getelementptr inbounds i8, i8* %1, i32 %42, !dbg !9107
  %44 = load i8, i8* %43, align 1, !dbg !9107
  %45 = icmp eq i8 %44, 5, !dbg !9108
  br i1 %45, label %46, label %56, !dbg !9109

46:                                               ; preds = %41
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #22, !dbg !9110
  %47 = add i32 %9, 3
  %48 = getelementptr inbounds i8, i8* %1, i32 %47
  br label %49, !dbg !9111

49:                                               ; preds = %49, %46
  call void @llvm.dbg.value(metadata i8* %3, metadata !9061, metadata !DIExpression(DW_OP_deref)), !dbg !9112
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %43, i8* noundef nonnull %3, i16 noundef zeroext 1, i16 noundef zeroext 1) #20, !dbg !9113
  %50 = load i8, i8* %3, align 1, !dbg !9115
  call void @llvm.dbg.value(metadata i8 %50, metadata !9061, metadata !DIExpression()), !dbg !9112
  %51 = load i8, i8* %48, align 1, !dbg !9116
  %52 = and i8 %51, %50, !dbg !9117
  %53 = icmp eq i8 %52, 0, !dbg !9118
  br i1 %53, label %54, label %49, !dbg !9118, !llvm.loop !9119

54:                                               ; preds = %49
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #22, !dbg !9121
  %55 = add i32 %9, 1, !dbg !9122
  br label %61, !dbg !9123

56:                                               ; preds = %41
  %57 = add i32 %9, 1, !dbg !9124
  %58 = getelementptr inbounds i8, i8* %1, i32 %57, !dbg !9126
  %59 = load i8, i8* %58, align 1, !dbg !9126
  %60 = zext i8 %59 to i16, !dbg !9126
  tail call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %43, i8* noundef null, i16 noundef zeroext %60, i16 noundef zeroext 0) #20, !dbg !9127
  br label %61

61:                                               ; preds = %56, %54
  %62 = phi i32 [ %57, %56 ], [ %55, %54 ], !dbg !9122
  %63 = getelementptr inbounds i8, i8* %1, i32 %62, !dbg !9128
  %64 = load i8, i8* %63, align 1, !dbg !9128
  %65 = zext i8 %64 to i32, !dbg !9128
  %66 = add i32 %42, %65, !dbg !9129
  call void @llvm.dbg.value(metadata i32 %66, metadata !9059, metadata !DIExpression()), !dbg !9065
  br label %8, !dbg !9070, !llvm.loop !9130

67:                                               ; preds = %33, %31, %39, %37, %2
  ret void, !dbg !9132
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_ReadDeviceID(i16 noundef zeroext %0, i8* nocapture noundef writeonly %1, i8 noundef zeroext %2) local_unnamed_addr #0 section ".ram_code" !dbg !9133 {
  %4 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i16 %0, metadata !9137, metadata !DIExpression()), !dbg !9140
  call void @llvm.dbg.value(metadata i8* %1, metadata !9138, metadata !DIExpression()), !dbg !9140
  call void @llvm.dbg.value(metadata i8 %2, metadata !9139, metadata !DIExpression()), !dbg !9140
  store i8 %2, i8* %4, align 1
  call void @llvm.dbg.value(metadata i8* %4, metadata !9139, metadata !DIExpression(DW_OP_deref)), !dbg !9140
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef %1, i16 noundef zeroext 1, i16 noundef zeroext 3) #20, !dbg !9141
  ret void, !dbg !9142
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_ReadDeviceID_SPI(i16 noundef zeroext %0, i8* nocapture noundef writeonly %1) local_unnamed_addr #0 section ".ram_code" !dbg !9143 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !9147, metadata !DIExpression()), !dbg !9149
  call void @llvm.dbg.value(metadata i8* %1, metadata !9148, metadata !DIExpression()), !dbg !9149
  tail call void @SFI_ReadDeviceID(i16 noundef zeroext %0, i8* noundef %1, i8 noundef zeroext -97) #20, !dbg !9150
  ret void, !dbg !9151
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SFI_Dev_WorkingFrequencyQuery() local_unnamed_addr #8 section ".ram_code" !dbg !9152 {
  ret i32 78, !dbg !9156
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @SFI_Dev_WorkingVoltageQuery() local_unnamed_addr #9 section ".ram_code" !dbg !9157 {
  %1 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !9161
  %2 = and i32 %1, 7340032, !dbg !9163
  %3 = icmp ult i32 %2, 2097153, !dbg !9164
  %4 = select i1 %3, i32 30, i32 18, !dbg !9165
  ret i32 %4, !dbg !9166
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local zeroext i1 @SFI_Dev_GetUniqueID(i8* nocapture noundef writeonly %0) local_unnamed_addr #17 section ".ram_code" !dbg !9167 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9171, metadata !DIExpression()), !dbg !9173
  call void @llvm.dbg.value(metadata i32 0, metadata !9172, metadata !DIExpression()), !dbg !9173
  call void @llvm.dbg.value(metadata i32 0, metadata !9172, metadata !DIExpression()), !dbg !9173
  br label %2, !dbg !9174

2:                                                ; preds = %1, %2
  %3 = phi i32 [ 0, %1 ], [ %5, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !9172, metadata !DIExpression()), !dbg !9173
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !9176
  store i8 -1, i8* %4, align 1, !dbg !9179
  %5 = add nuw nsw i32 %3, 1, !dbg !9180
  call void @llvm.dbg.value(metadata i32 %5, metadata !9172, metadata !DIExpression()), !dbg !9173
  %6 = icmp eq i32 %5, 8, !dbg !9181
  br i1 %6, label %7, label %2, !dbg !9174, !llvm.loop !9182

7:                                                ; preds = %2
  ret i1 true, !dbg !9184
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_DEV_Enter_DPD() local_unnamed_addr #0 section ".ram_code" !dbg !9185 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* @EntireDiskMtdData, metadata !9187, metadata !DIExpression()), !dbg !9188
  %1 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 13), align 4, !dbg !9189
  %2 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %1, i32 0, i32 19, !dbg !9190
  %3 = load i8, i8* %2, align 1, !dbg !9190
  store i8 %3, i8* @NOR_FLASH_LeaveDPDCmd, align 1, !dbg !9191
  %4 = load i8*, i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 1), align 4, !dbg !9192
  %5 = ptrtoint i8* %4 to i32, !dbg !9193
  store i32 %5, i32* @NOR_FLASH_FATStartAddr, align 4, !dbg !9194
  %6 = bitcast i8* %4 to i32*, !dbg !9195
  %7 = load volatile i32, i32* %6, align 4, !dbg !9196
  store i32 %7, i32* @NOR_FLASH_FATStartValue, align 4, !dbg !9197
  %8 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !9198
  store i32 %8, i32* @SFI_MAC_CTL_BACKUP, align 4, !dbg !9199
  %9 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !9200
  store i32 %9, i32* @SFI_DIRECT_CTL_BACKUP, align 4, !dbg !9201
  %10 = load volatile i32, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !9202
  store i32 %10, i32* @SFI_MISC_CTL_BACKUP, align 4, !dbg !9203
  %11 = load volatile i32, i32* inttoptr (i32 -1610350580 to i32*), align 4, !dbg !9204
  store i32 %11, i32* @SFI_MISC_CTL2_BACKUP, align 4, !dbg !9205
  %12 = load volatile i32, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !9206
  store i32 %12, i32* @SFI_DLY_CTL_3_BACKUP, align 4, !dbg !9207
  %13 = load volatile i32, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !9208
  %14 = or i32 %13, 986880, !dbg !9209
  store volatile i32 %14, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !9210
  %15 = load volatile i32, i32* inttoptr (i32 -1610350560 to i32*), align 32, !dbg !9211
  %16 = or i32 %15, 252645135, !dbg !9212
  store volatile i32 %16, i32* inttoptr (i32 -1610350560 to i32*), align 32, !dbg !9213
  %17 = load i16, i16* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 23), align 2, !dbg !9214
  %18 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 13), align 4, !dbg !9215
  %19 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %18, i32 0, i32 18, !dbg !9216
  %20 = load i8, i8* %19, align 1, !dbg !9216
  %21 = zext i8 %20 to i32, !dbg !9217
  tail call void @SFI_Dev_Command(i16 noundef zeroext %17, i32 noundef %21) #20, !dbg !9218
  %22 = tail call i32 @hal_gpt_delay_us(i32 noundef 100) #21, !dbg !9219
  ret void, !dbg !9220
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_DEV_Leave_DPD() local_unnamed_addr #0 section ".tcm_code" !dbg !9221 {
  %1 = load i32, i32* @SFI_MAC_CTL_BACKUP, align 4, !dbg !9222
  store volatile i32 %1, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !9223
  %2 = load i32, i32* @SFI_DIRECT_CTL_BACKUP, align 4, !dbg !9224
  store volatile i32 %2, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !9225
  %3 = load i32, i32* @SFI_MISC_CTL_BACKUP, align 4, !dbg !9226
  store volatile i32 %3, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !9227
  %4 = load i32, i32* @SFI_MISC_CTL2_BACKUP, align 4, !dbg !9228
  store volatile i32 %4, i32* inttoptr (i32 -1610350580 to i32*), align 4, !dbg !9229
  %5 = load i32, i32* @SFI_DLY_CTL_3_BACKUP, align 4, !dbg !9230
  store volatile i32 %5, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !9231
  %6 = load volatile i32, i32* inttoptr (i32 -1610350560 to i32*), align 32, !dbg !9232
  %7 = and i32 %6, -252645136, !dbg !9233
  store volatile i32 %7, i32* inttoptr (i32 -1610350560 to i32*), align 32, !dbg !9234
  %8 = load i8, i8* @NOR_FLASH_LeaveDPDCmd, align 1, !dbg !9235
  %9 = zext i8 %8 to i32, !dbg !9235
  tail call void @SFI_Dev_Command(i16 noundef zeroext 0, i32 noundef %9) #20, !dbg !9236
  %10 = tail call i32 @hal_gpt_delay_us(i32 noundef 100) #21, !dbg !9237
  %11 = load i32, i32* @NOR_FLASH_FATStartValue, align 4, !dbg !9238
  %12 = load i32, i32* @NOR_FLASH_FATStartAddr, align 4, !dbg !9240
  %13 = inttoptr i32 %12 to i32*, !dbg !9241
  %14 = load volatile i32, i32* %13, align 4, !dbg !9242
  %15 = icmp eq i32 %11, %14, !dbg !9243
  br i1 %15, label %17, label %16, !dbg !9244

16:                                               ; preds = %0, %16
  br label %16, !dbg !9245, !llvm.loop !9246

17:                                               ; preds = %0
  ret void, !dbg !9248
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_DEV_SWITCH_TO_LOW_FQ() local_unnamed_addr #0 section ".tcm_code" !dbg !9249 {
  %1 = load i32, i32* @SFI_CLK_SWITCH_MISC_CTL_BACKUP, align 4, !dbg !9250
  %2 = icmp eq i32 %1, 0, !dbg !9252
  br i1 %2, label %3, label %5, !dbg !9253

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !9254
  store i32 %4, i32* @SFI_CLK_SWITCH_MISC_CTL_BACKUP, align 4, !dbg !9256
  br label %5, !dbg !9257

5:                                                ; preds = %3, %0
  %6 = load i32, i32* @SFI_CLK_SWITCH_DLY_CTL_3_BACKUP, align 4, !dbg !9258
  %7 = icmp eq i32 %6, 0, !dbg !9260
  br i1 %7, label %8, label %10, !dbg !9261

8:                                                ; preds = %5
  %9 = load volatile i32, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !9262
  store i32 %9, i32* @SFI_CLK_SWITCH_DLY_CTL_3_BACKUP, align 4, !dbg !9264
  br label %10, !dbg !9265

10:                                               ; preds = %8, %5
  %11 = load volatile i32, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !9266
  %12 = and i32 %11, -256, !dbg !9267
  store volatile i32 %12, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !9268
  store volatile i32 0, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !9269
  %13 = tail call i32 @clock_mux_sel(i32 noundef 2, i32 noundef 0) #21, !dbg !9270
  ret void, !dbg !9271
}

; Function Attrs: optsize
declare dso_local i32 @clock_mux_sel(i32 noundef, i32 noundef) local_unnamed_addr #3 section ".tcm_code"

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_DEV_SWITCH_TO_HIGH_FQ() local_unnamed_addr #0 section ".tcm_code" !dbg !9272 {
  %1 = load i32, i32* @SFI_CLK_SWITCH_MISC_CTL_BACKUP, align 4, !dbg !9273
  %2 = icmp eq i32 %1, 0, !dbg !9275
  br i1 %2, label %4, label %3, !dbg !9276

3:                                                ; preds = %0
  store volatile i32 %1, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !9277
  br label %4, !dbg !9279

4:                                                ; preds = %3, %0
  %5 = load i32, i32* @SFI_CLK_SWITCH_DLY_CTL_3_BACKUP, align 4, !dbg !9280
  %6 = icmp eq i32 %5, 0, !dbg !9282
  br i1 %6, label %8, label %7, !dbg !9283

7:                                                ; preds = %4
  store volatile i32 %5, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !9284
  br label %8, !dbg !9286

8:                                                ; preds = %7, %4
  %9 = tail call i32 @clock_mux_sel(i32 noundef 2, i32 noundef 7) #21, !dbg !9287
  ret void, !dbg !9288
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @ust_get_current_time() local_unnamed_addr #8 section ".tcm_code" !dbg !9289 {
  call void @llvm.dbg.value(metadata i32 0, metadata !9291, metadata !DIExpression()), !dbg !9292
  ret i32 0, !dbg !9293
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_current_32K_counter() local_unnamed_addr #8 section ".ram_code" !dbg !9294 {
  call void @llvm.dbg.value(metadata i32 0, metadata !9296, metadata !DIExpression()), !dbg !9297
  ret i32 0, !dbg !9298
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ust_busy_wait(i32 noundef %0) local_unnamed_addr #0 section ".ram_code" !dbg !9299 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9301, metadata !DIExpression()), !dbg !9302
  %2 = tail call i32 @hal_gpt_delay_us(i32 noundef %0) #21, !dbg !9303
  ret void, !dbg !9304
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SaveAndSetIRQMask() local_unnamed_addr #0 section ".ram_code" !dbg !9305 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !9308
  call void @llvm.dbg.value(metadata i32 %1, metadata !9307, metadata !DIExpression()), !dbg !9309
  ret i32 %1, !dbg !9310
}

; Function Attrs: noinline nounwind optsize
define dso_local void @RestoreIRQMask(i32 noundef %0) local_unnamed_addr #0 section ".ram_code" !dbg !9311 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9313, metadata !DIExpression()), !dbg !9314
  tail call void @restore_interrupt_mask(i32 noundef %0) #21, !dbg !9315
  ret void, !dbg !9316
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SF_DAL_UnlockBlock_None(i8* nocapture readnone %0) #8 section ".ram_code" !dbg !9317 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !9319, metadata !DIExpression()), !dbg !9320
  ret i32 0, !dbg !9321
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @sfi_60qbit_test() local_unnamed_addr #8 section ".ram_code" !dbg !9322 {
  ret i32 0, !dbg !9325
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @CompareData(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #11 section ".ram_code" !dbg !9326 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9330, metadata !DIExpression()), !dbg !9345
  call void @llvm.dbg.value(metadata i8* %1, metadata !9331, metadata !DIExpression()), !dbg !9345
  call void @llvm.dbg.value(metadata i32 %2, metadata !9332, metadata !DIExpression()), !dbg !9345
  %4 = ptrtoint i8* %0 to i32, !dbg !9346
  %5 = ptrtoint i8* %1 to i32
  %6 = or i32 %5, %4, !dbg !9347
  %7 = and i32 %6, 3, !dbg !9347
  %8 = icmp eq i32 %7, 0, !dbg !9347
  br i1 %8, label %9, label %26, !dbg !9347

9:                                                ; preds = %3
  %10 = bitcast i8* %0 to i32*, !dbg !9348
  call void @llvm.dbg.value(metadata i32* %10, metadata !9334, metadata !DIExpression()), !dbg !9349
  %11 = bitcast i8* %1 to i32*, !dbg !9350
  call void @llvm.dbg.value(metadata i32* %11, metadata !9337, metadata !DIExpression()), !dbg !9349
  call void @llvm.dbg.value(metadata i32 0, metadata !9333, metadata !DIExpression()), !dbg !9345
  call void @llvm.dbg.value(metadata i32 0, metadata !9333, metadata !DIExpression()), !dbg !9345
  %12 = icmp ult i32 %2, 4, !dbg !9351
  br i1 %12, label %65, label %13, !dbg !9354

13:                                               ; preds = %9
  %14 = lshr i32 %2, 2
  br label %15, !dbg !9354

15:                                               ; preds = %15, %13
  %16 = phi i32 [ 0, %13 ], [ %22, %15 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !9333, metadata !DIExpression()), !dbg !9345
  %17 = getelementptr inbounds i32, i32* %10, i32 %16, !dbg !9355
  %18 = load i32, i32* %17, align 4, !dbg !9355
  %19 = getelementptr inbounds i32, i32* %11, i32 %16, !dbg !9358
  %20 = load i32, i32* %19, align 4, !dbg !9358
  %21 = icmp eq i32 %18, %20, !dbg !9359
  %22 = add nuw nsw i32 %16, 1, !dbg !9360
  call void @llvm.dbg.value(metadata i32 %22, metadata !9333, metadata !DIExpression()), !dbg !9345
  %23 = xor i1 %21, true, !dbg !9361
  %24 = icmp eq i32 %22, %14
  %25 = select i1 %23, i1 true, i1 %24, !dbg !9361
  call void @llvm.dbg.value(metadata i32 %22, metadata !9333, metadata !DIExpression()), !dbg !9345
  br i1 %25, label %59, label %15, !dbg !9361, !llvm.loop !9362

26:                                               ; preds = %3
  %27 = and i32 %6, 1, !dbg !9364
  %28 = icmp eq i32 %27, 0, !dbg !9364
  br i1 %28, label %31, label %29, !dbg !9364

29:                                               ; preds = %26
  call void @llvm.dbg.value(metadata i32 0, metadata !9333, metadata !DIExpression()), !dbg !9345
  %30 = icmp eq i32 %2, 0, !dbg !9365
  br i1 %30, label %65, label %48, !dbg !9368

31:                                               ; preds = %26
  %32 = bitcast i8* %0 to i16*, !dbg !9369
  call void @llvm.dbg.value(metadata i16* %32, metadata !9338, metadata !DIExpression()), !dbg !9370
  %33 = bitcast i8* %1 to i16*, !dbg !9371
  call void @llvm.dbg.value(metadata i16* %33, metadata !9341, metadata !DIExpression()), !dbg !9370
  call void @llvm.dbg.value(metadata i32 0, metadata !9333, metadata !DIExpression()), !dbg !9345
  call void @llvm.dbg.value(metadata i32 0, metadata !9333, metadata !DIExpression()), !dbg !9345
  %34 = icmp ult i32 %2, 2, !dbg !9372
  br i1 %34, label %65, label %35, !dbg !9375

35:                                               ; preds = %31
  %36 = lshr i32 %2, 1
  br label %37, !dbg !9375

37:                                               ; preds = %37, %35
  %38 = phi i32 [ 0, %35 ], [ %44, %37 ]
  call void @llvm.dbg.value(metadata i32 %38, metadata !9333, metadata !DIExpression()), !dbg !9345
  %39 = getelementptr inbounds i16, i16* %32, i32 %38, !dbg !9376
  %40 = load i16, i16* %39, align 2, !dbg !9376
  %41 = getelementptr inbounds i16, i16* %33, i32 %38, !dbg !9379
  %42 = load i16, i16* %41, align 2, !dbg !9379
  %43 = icmp eq i16 %40, %42, !dbg !9380
  %44 = add nuw nsw i32 %38, 1, !dbg !9381
  call void @llvm.dbg.value(metadata i32 %44, metadata !9333, metadata !DIExpression()), !dbg !9345
  %45 = xor i1 %43, true, !dbg !9382
  %46 = icmp eq i32 %44, %36
  %47 = select i1 %45, i1 true, i1 %46, !dbg !9382
  call void @llvm.dbg.value(metadata i32 %44, metadata !9333, metadata !DIExpression()), !dbg !9345
  br i1 %47, label %61, label %37, !dbg !9382, !llvm.loop !9383

48:                                               ; preds = %29, %48
  %49 = phi i32 [ %55, %48 ], [ 0, %29 ]
  call void @llvm.dbg.value(metadata i32 %49, metadata !9333, metadata !DIExpression()), !dbg !9345
  %50 = getelementptr inbounds i8, i8* %0, i32 %49, !dbg !9385
  %51 = load i8, i8* %50, align 1, !dbg !9385
  %52 = getelementptr inbounds i8, i8* %1, i32 %49, !dbg !9388
  %53 = load i8, i8* %52, align 1, !dbg !9388
  %54 = icmp eq i8 %51, %53, !dbg !9389
  %55 = add nuw i32 %49, 1, !dbg !9390
  call void @llvm.dbg.value(metadata i32 %55, metadata !9333, metadata !DIExpression()), !dbg !9345
  %56 = xor i1 %54, true, !dbg !9391
  %57 = icmp eq i32 %55, %2
  %58 = select i1 %56, i1 true, i1 %57, !dbg !9391
  call void @llvm.dbg.value(metadata i32 %55, metadata !9333, metadata !DIExpression()), !dbg !9345
  br i1 %58, label %63, label %48, !dbg !9391, !llvm.loop !9392

59:                                               ; preds = %15
  %60 = xor i1 %21, true, !dbg !9394
  br label %65, !dbg !9394

61:                                               ; preds = %37
  %62 = xor i1 %43, true, !dbg !9394
  br label %65, !dbg !9394

63:                                               ; preds = %48
  %64 = xor i1 %54, true, !dbg !9394
  br label %65, !dbg !9394

65:                                               ; preds = %63, %61, %59, %29, %31, %9
  %66 = phi i1 [ false, %9 ], [ false, %31 ], [ false, %29 ], [ %60, %59 ], [ %62, %61 ], [ %64, %63 ], !dbg !9345
  ret i1 %66, !dbg !9394
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Flash_ProgramData(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 section ".ram_code" !dbg !9395 {
  %4 = alloca i8*, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !9399, metadata !DIExpression()), !dbg !9410
  call void @llvm.dbg.value(metadata i8* %1, metadata !9400, metadata !DIExpression()), !dbg !9410
  call void @llvm.dbg.value(metadata i32 %2, metadata !9401, metadata !DIExpression()), !dbg !9410
  %6 = load %struct.SF_MTD_Data*, %struct.SF_MTD_Data** bitcast (i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2) to %struct.SF_MTD_Data**), align 4, !dbg !9411
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %6, metadata !9402, metadata !DIExpression()), !dbg !9410
  call void @llvm.dbg.value(metadata i8* %0, metadata !9403, metadata !DIExpression()), !dbg !9410
  %7 = bitcast i8** %4 to i8*, !dbg !9412
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #22, !dbg !9412
  call void @llvm.dbg.value(metadata i8* %1, metadata !9404, metadata !DIExpression()), !dbg !9410
  store i8* %1, i8** %4, align 4, !dbg !9413
  call void @llvm.dbg.value(metadata i32 0, metadata !9405, metadata !DIExpression()), !dbg !9410
  %8 = bitcast i32* %5 to i8*, !dbg !9414
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #22, !dbg !9414
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #20, !dbg !9415
  %9 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 21, !dbg !9416
  store i8 1, i8* %9, align 4, !dbg !9417
  call void @llvm.dbg.value(metadata i32 %2, metadata !9401, metadata !DIExpression()), !dbg !9410
  call void @llvm.dbg.value(metadata i8* %0, metadata !9403, metadata !DIExpression()), !dbg !9410
  %10 = icmp eq i32 %2, 0, !dbg !9418
  br i1 %10, label %73, label %11, !dbg !9419

11:                                               ; preds = %3
  %12 = ptrtoint i8* %0 to i32, !dbg !9420
  call void @llvm.dbg.value(metadata i32 %12, metadata !9403, metadata !DIExpression()), !dbg !9410
  %13 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 24
  %14 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 22
  %15 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 13
  %16 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 23
  %17 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 12
  br label %18, !dbg !9419

18:                                               ; preds = %11, %66
  %19 = phi i32 [ %2, %11 ], [ %70, %66 ]
  %20 = phi i32 [ %12, %11 ], [ %71, %66 ]
  call void @llvm.dbg.value(metadata i32 %19, metadata !9401, metadata !DIExpression()), !dbg !9410
  call void @llvm.dbg.value(metadata i32 %20, metadata !9403, metadata !DIExpression()), !dbg !9410
  %21 = load i32, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !9421
  %22 = shl i32 %21, 1, !dbg !9423
  %23 = add i32 %22, -1, !dbg !9424
  %24 = and i32 %23, %20, !dbg !9425
  %25 = sub i32 %22, %24, !dbg !9426
  %26 = icmp ugt i32 %19, %25, !dbg !9427
  %27 = select i1 %26, i32 %25, i32 %19, !dbg !9428
  call void @llvm.dbg.value(metadata i32 %27, metadata !9407, metadata !DIExpression()), !dbg !9410
  call void @llvm.dbg.value(metadata i32 %27, metadata !9406, metadata !DIExpression()), !dbg !9410
  store i32 %27, i32* %5, align 4, !dbg !9429
  %28 = load i32, i32* %13, align 4, !dbg !9430
  %29 = and i32 %28, 16, !dbg !9432
  %30 = icmp eq i32 %29, 0, !dbg !9432
  br i1 %30, label %31, label %32, !dbg !9433

31:                                               ; preds = %18
  call void @SF_DAL_Dev_WriteEnable(%struct.SF_MTD_Data* noundef nonnull %6) #20, !dbg !9434
  br label %32, !dbg !9436

32:                                               ; preds = %31, %18
  %33 = load i8, i8* %14, align 1, !dbg !9437
  %34 = icmp eq i8 %33, 4, !dbg !9439
  %35 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %15, align 4, !dbg !9440
  %36 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %35, i32 0, i32 0, !dbg !9440
  %37 = load i8, i8* %36, align 1, !dbg !9440
  %38 = zext i8 %37 to i32, !dbg !9440
  br i1 %34, label %39, label %43, !dbg !9441

39:                                               ; preds = %32
  call void @llvm.dbg.value(metadata i8** %4, metadata !9404, metadata !DIExpression(DW_OP_deref)), !dbg !9410
  call void @llvm.dbg.value(metadata i32* %5, metadata !9406, metadata !DIExpression(DW_OP_deref)), !dbg !9410
  %40 = call i32 @SFI_GPRAM_Write_C1A4(i32 noundef %38, i32 noundef %20, i8** noundef nonnull %4, i32* noundef nonnull %5) #21, !dbg !9442
  call void @llvm.dbg.value(metadata i32 %40, metadata !9405, metadata !DIExpression()), !dbg !9410
  %41 = load i8*, i8** %4, align 4, !dbg !9444
  call void @llvm.dbg.value(metadata i8* %41, metadata !9404, metadata !DIExpression()), !dbg !9410
  %42 = load i32, i32* %5, align 4, !dbg !9445
  call void @llvm.dbg.value(metadata i32 %42, metadata !9406, metadata !DIExpression()), !dbg !9410
  call void @SFI_GPRAM_Write(i32 noundef 8, i8* noundef %41, i32 noundef %42) #21, !dbg !9446
  br label %47, !dbg !9447

43:                                               ; preds = %32
  %44 = call i32 @SFI_GPRAM_Write_C1A3(i32 noundef %38, i32 noundef %20) #21, !dbg !9448
  call void @llvm.dbg.value(metadata i32 %44, metadata !9405, metadata !DIExpression()), !dbg !9410
  %45 = load i8*, i8** %4, align 4, !dbg !9450
  call void @llvm.dbg.value(metadata i8* %45, metadata !9404, metadata !DIExpression()), !dbg !9410
  %46 = load i32, i32* %5, align 4, !dbg !9451
  call void @llvm.dbg.value(metadata i32 %46, metadata !9406, metadata !DIExpression()), !dbg !9410
  call void @SFI_GPRAM_Write(i32 noundef 4, i8* noundef %45, i32 noundef %46) #21, !dbg !9452
  br label %47

47:                                               ; preds = %43, %39
  %48 = phi i32 [ %40, %39 ], [ %44, %43 ], !dbg !9440
  call void @llvm.dbg.value(metadata i32 %48, metadata !9405, metadata !DIExpression()), !dbg !9410
  %49 = call i32 @SaveAndSetIRQMask() #20, !dbg !9453
  call void @llvm.dbg.value(metadata i32 %49, metadata !9409, metadata !DIExpression()), !dbg !9410
  %50 = load i8, i8* %14, align 1, !dbg !9454
  %51 = zext i8 %50 to i32, !dbg !9455
  %52 = add i32 %27, 1, !dbg !9456
  %53 = add i32 %52, %51, !dbg !9457
  store volatile i32 %53, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !9458
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !9459
  store volatile i32 %48, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !9460
  call void @SF_DAL_FLAG_BUSY_SET() #20, !dbg !9461
  %54 = load i16, i16* %16, align 2, !dbg !9462
  call void @SFI_MacEnable(i16 noundef zeroext %54) #21, !dbg !9463
  %55 = load i16, i16* %16, align 2, !dbg !9464
  call void @SFI_MacWaitReady(i16 noundef zeroext %55) #21, !dbg !9465
  call void @RestoreIRQMask(i32 noundef %49) #20, !dbg !9466
  br label %56, !dbg !9467

56:                                               ; preds = %56, %47
  %57 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %15, align 4, !dbg !9468
  %58 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %57, i32 0, i32 16, !dbg !9470
  %59 = load i8, i8* %58, align 1, !dbg !9470
  %60 = call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %6, i8 noundef zeroext %59) #20, !dbg !9471
  call void @llvm.dbg.value(metadata i32 %60, metadata !9408, metadata !DIExpression()), !dbg !9410
  %61 = load i8*, i8** %17, align 4, !dbg !9472
  %62 = load i8, i8* %61, align 1, !dbg !9474
  %63 = zext i8 %62 to i32, !dbg !9474
  %64 = and i32 %60, %63, !dbg !9475
  %65 = icmp eq i32 %64, 0, !dbg !9476
  br i1 %65, label %66, label %56, !dbg !9477, !llvm.loop !9478

66:                                               ; preds = %56
  call void @SF_DAL_FLAG_BUSY_CLR() #20, !dbg !9480
  %67 = load i32, i32* %5, align 4, !dbg !9481
  call void @llvm.dbg.value(metadata i32 %67, metadata !9406, metadata !DIExpression()), !dbg !9410
  %68 = load i8*, i8** %4, align 4, !dbg !9482
  call void @llvm.dbg.value(metadata i8* %68, metadata !9404, metadata !DIExpression()), !dbg !9410
  %69 = getelementptr inbounds i8, i8* %68, i32 %67, !dbg !9482
  call void @llvm.dbg.value(metadata i8* %69, metadata !9404, metadata !DIExpression()), !dbg !9410
  store i8* %69, i8** %4, align 4, !dbg !9482
  %70 = sub i32 %19, %27, !dbg !9483
  call void @llvm.dbg.value(metadata i32 %70, metadata !9401, metadata !DIExpression()), !dbg !9410
  %71 = add i32 %27, %20, !dbg !9484
  call void @llvm.dbg.value(metadata i32 %71, metadata !9403, metadata !DIExpression()), !dbg !9410
  %72 = icmp eq i32 %70, 0, !dbg !9418
  br i1 %72, label %73, label %18, !dbg !9419, !llvm.loop !9485

73:                                               ; preds = %66, %3
  store i8 0, i8* %9, align 4, !dbg !9487
  call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #20, !dbg !9488
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #22, !dbg !9489
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #22, !dbg !9489
  ret void, !dbg !9489
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* nocapture readnone %0) local_unnamed_addr #0 section ".ram_code" !dbg !9490 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !9494, metadata !DIExpression()), !dbg !9496
  br label %2, !dbg !9497

2:                                                ; preds = %2, %1
  %3 = tail call i32 @retrieve_MTD_lock() #20, !dbg !9498
  call void @llvm.dbg.value(metadata i32 %3, metadata !9495, metadata !DIExpression()), !dbg !9496
  %4 = icmp eq i32 %3, 0, !dbg !9500
  br i1 %4, label %5, label %2, !dbg !9501, !llvm.loop !9502

5:                                                ; preds = %2
  ret void, !dbg !9504
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_WriteEnable(%struct.SF_MTD_Data* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !9505 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !9507, metadata !DIExpression()), !dbg !9508
  %2 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !9509
  %3 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %2, align 4, !dbg !9509
  %4 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %3, i32 0, i32 1, !dbg !9510
  %5 = load i8, i8* %4, align 1, !dbg !9510
  %6 = zext i8 %5 to i32, !dbg !9511
  tail call void @SF_DAL_Dev_Command(%struct.SF_MTD_Data* noundef %0, i32 noundef %6, i8 noundef zeroext 1) #20, !dbg !9512
  ret void, !dbg !9513
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_FLAG_BUSY_SET() local_unnamed_addr #0 section ".ram_code" !dbg !9514 {
  %1 = tail call i32 @SaveAndSetIRQMask() #20, !dbg !9517
  call void @llvm.dbg.value(metadata i32 %1, metadata !9516, metadata !DIExpression()), !dbg !9518
  store i8 1, i8* @NOR_FLASH_BUSY, align 1, !dbg !9519
  tail call void @RestoreIRQMask(i32 noundef %1) #20, !dbg !9520
  ret void, !dbg !9521
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #0 section ".ram_code" !dbg !9522 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !9526, metadata !DIExpression()), !dbg !9530
  call void @llvm.dbg.value(metadata i8 %1, metadata !9527, metadata !DIExpression()), !dbg !9530
  %3 = tail call i32 @SaveAndSetIRQMask() #20, !dbg !9531
  call void @llvm.dbg.value(metadata i32 %3, metadata !9528, metadata !DIExpression()), !dbg !9530
  %4 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !9532
  %5 = load i16, i16* %4, align 2, !dbg !9532
  tail call void @SFI_MacEnable(i16 noundef zeroext %5) #21, !dbg !9533
  %6 = zext i8 %1 to i32, !dbg !9534
  store volatile i32 %6, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !9535
  store volatile i32 1, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !9536
  store volatile i32 1, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !9537
  %7 = load i16, i16* %4, align 2, !dbg !9538
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %7) #21, !dbg !9539
  %8 = load volatile i32, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !9540
  %9 = lshr i32 %8, 8, !dbg !9541
  %10 = and i32 %9, 255, !dbg !9542
  call void @llvm.dbg.value(metadata i32 %10, metadata !9529, metadata !DIExpression()), !dbg !9530
  tail call void @RestoreIRQMask(i32 noundef %3) #20, !dbg !9543
  ret i32 %10, !dbg !9544
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_FLAG_BUSY_CLR() local_unnamed_addr #0 section ".ram_code" !dbg !9545 {
  %1 = tail call i32 @SaveAndSetIRQMask() #20, !dbg !9548
  call void @llvm.dbg.value(metadata i32 %1, metadata !9547, metadata !DIExpression()), !dbg !9549
  store i8 0, i8* @NOR_FLASH_BUSY, align 1, !dbg !9550
  %2 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !9551
  %3 = and i32 %2, -513, !dbg !9551
  store volatile i32 %3, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !9551
  tail call void @RestoreIRQMask(i32 noundef %1) #20, !dbg !9554
  ret void, !dbg !9555
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* nocapture readnone %0) local_unnamed_addr #0 section ".ram_code" !dbg !9556 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !9558, metadata !DIExpression()), !dbg !9560
  %2 = tail call i32 @SaveAndSetIRQMask() #20, !dbg !9561
  call void @llvm.dbg.value(metadata i32 %2, metadata !9559, metadata !DIExpression()), !dbg !9560
  %3 = load i1, i1* @MTDMutex, align 4, !dbg !9562
  br i1 %3, label %4, label %5, !dbg !9564

4:                                                ; preds = %1
  store i1 false, i1* @MTDMutex, align 4, !dbg !9565
  tail call void @RestoreIRQMask(i32 noundef %2) #20, !dbg !9567
  ret void, !dbg !9568

5:                                                ; preds = %1
  tail call void @RestoreIRQMask(i32 noundef %2) #20, !dbg !9569
  tail call void @Flash_ReturnReady() #20, !dbg !9571
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.136, i32 0, i32 0), i32 noundef 1449, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.SF_DAL_FreeDevLock, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.137, i32 0, i32 0)) #23, !dbg !9571
  unreachable, !dbg !9571
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Flash_ReturnReady() local_unnamed_addr #0 section ".ram_code" !dbg !9575 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* null, metadata !9577, metadata !DIExpression()), !dbg !9582
  %1 = tail call i32 @SaveAndSetIRQMask() #20, !dbg !9583
  call void @llvm.dbg.value(metadata i32 %1, metadata !9579, metadata !DIExpression()), !dbg !9582
  %2 = tail call i32 @get_NOR_init_status() #21, !dbg !9584
  %3 = icmp eq i32 %2, 0, !dbg !9586
  br i1 %3, label %4, label %125, !dbg !9587

4:                                                ; preds = %0
  store i32 0, i32* @gNOR_ReturnReadyBegin, align 4, !dbg !9588
  %5 = load %struct.SF_MTD_Data*, %struct.SF_MTD_Data** bitcast (i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2) to %struct.SF_MTD_Data**), align 4, !dbg !9589
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %5, metadata !9577, metadata !DIExpression()), !dbg !9582
  %6 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 0, !dbg !9591
  %7 = load i32, i32* %6, align 4, !dbg !9591
  %8 = xor i32 %7, -1, !dbg !9591
  %9 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 5, !dbg !9591
  %10 = load %struct.powerkey_state_t*, %struct.powerkey_state_t** %9, align 4, !dbg !9591
  %11 = ptrtoint %struct.powerkey_state_t* %10 to i32, !dbg !9591
  %12 = icmp eq i32 %8, %11, !dbg !9591
  br i1 %12, label %14, label %13, !dbg !9594

13:                                               ; preds = %4
  tail call void @Flash_ReturnReady() #20, !dbg !9595
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.136, i32 0, i32 0), i32 noundef 1069, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.Flash_ReturnReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.137, i32 0, i32 0)) #23, !dbg !9595
  unreachable, !dbg !9595

14:                                               ; preds = %4
  %15 = load i32, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !9597
  %16 = icmp ult i32 %15, 16, !dbg !9599
  br i1 %16, label %17, label %34, !dbg !9600

17:                                               ; preds = %14
  %18 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 21, !dbg !9601
  %19 = load i8, i8* %18, align 4, !dbg !9601
  %20 = icmp eq i8 %19, 1, !dbg !9602
  br i1 %20, label %21, label %34, !dbg !9603

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 13
  %23 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 12
  br label %24, !dbg !9604

24:                                               ; preds = %21, %24
  %25 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !9606
  %26 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %25, i32 0, i32 16, !dbg !9608
  %27 = load i8, i8* %26, align 1, !dbg !9608
  %28 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %5, i8 noundef zeroext %27) #20, !dbg !9609
  call void @llvm.dbg.value(metadata i32 %28, metadata !9578, metadata !DIExpression()), !dbg !9582
  %29 = load i8*, i8** %23, align 4, !dbg !9610
  %30 = load i8, i8* %29, align 1, !dbg !9612
  %31 = zext i8 %30 to i32, !dbg !9612
  %32 = and i32 %28, %31, !dbg !9613
  %33 = icmp eq i32 %32, 0, !dbg !9614
  br i1 %33, label %34, label %24, !dbg !9615, !llvm.loop !9616

34:                                               ; preds = %24, %17, %14
  %35 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !9618, !range !3343
  %36 = icmp ne i8 %35, 0, !dbg !9618
  %37 = load i8, i8* @NOR_FLASH_BUSY, align 1
  %38 = icmp eq i8 %37, 0
  %39 = select i1 %36, i1 true, i1 %38, !dbg !9620
  br i1 %39, label %116, label %40, !dbg !9620

40:                                               ; preds = %34
  %41 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 13, !dbg !9621
  %42 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %41, align 4, !dbg !9621
  %43 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %42, i32 0, i32 16, !dbg !9623
  %44 = load i8, i8* %43, align 1, !dbg !9623
  %45 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %5, i8 noundef zeroext %44) #20, !dbg !9624
  call void @llvm.dbg.value(metadata i32 %45, metadata !9578, metadata !DIExpression()), !dbg !9582
  %46 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 12, !dbg !9625
  %47 = load i8*, i8** %46, align 4, !dbg !9625
  %48 = load i8, i8* %47, align 1, !dbg !9627
  %49 = zext i8 %48 to i32, !dbg !9627
  %50 = and i32 %45, %49, !dbg !9628
  %51 = icmp eq i32 %50, 0, !dbg !9629
  br i1 %51, label %85, label %52, !dbg !9630

52:                                               ; preds = %40
  tail call void @SF_DAL_Dev_Suspend(%struct.SF_MTD_Data* noundef nonnull %5) #20, !dbg !9631
  br label %53, !dbg !9633

53:                                               ; preds = %53, %52
  %54 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %41, align 4, !dbg !9634
  %55 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %54, i32 0, i32 16, !dbg !9636
  %56 = load i8, i8* %55, align 1, !dbg !9636
  %57 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %5, i8 noundef zeroext %56) #20, !dbg !9637
  call void @llvm.dbg.value(metadata i32 %57, metadata !9578, metadata !DIExpression()), !dbg !9582
  %58 = load i8*, i8** %46, align 4, !dbg !9638
  %59 = load i8, i8* %58, align 1, !dbg !9640
  %60 = zext i8 %59 to i32, !dbg !9640
  %61 = and i32 %57, %60, !dbg !9641
  %62 = icmp eq i32 %61, 0, !dbg !9642
  br i1 %62, label %63, label %53, !dbg !9643, !llvm.loop !9644

63:                                               ; preds = %53
  %64 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 24, !dbg !9646
  %65 = load i32, i32* %64, align 4, !dbg !9646
  %66 = and i32 %65, 4, !dbg !9648
  %67 = icmp eq i32 %66, 0, !dbg !9648
  br i1 %67, label %84, label %68, !dbg !9649

68:                                               ; preds = %63
  %69 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 21, !dbg !9650
  %70 = load i8, i8* %69, align 4, !dbg !9650
  %71 = icmp eq i8 %70, 2, !dbg !9651
  br i1 %71, label %72, label %84, !dbg !9652

72:                                               ; preds = %68
  store volatile i32 6, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !9653
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !9655
  store volatile i32 1, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !9656
  %73 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 23, !dbg !9657
  %74 = load i16, i16* %73, align 2, !dbg !9657
  tail call void @SFI_MacEnable(i16 noundef zeroext %74) #21, !dbg !9658
  %75 = load i16, i16* %73, align 2, !dbg !9659
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %75) #21, !dbg !9660
  store volatile i32 -1, i32* inttoptr (i32 -1610348540 to i32*), align 4, !dbg !9661
  store volatile i32 6, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !9662
  store volatile i32 2, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !9663
  %76 = load i16, i16* %73, align 2, !dbg !9664
  tail call void @SFI_MacEnable(i16 noundef zeroext %76) #21, !dbg !9665
  %77 = load i16, i16* %73, align 2, !dbg !9666
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %77) #21, !dbg !9667
  br label %78, !dbg !9668

78:                                               ; preds = %78, %72
  store volatile i32 5, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !9669
  store volatile i32 1, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !9671
  store volatile i32 1, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !9672
  %79 = load i16, i16* %73, align 2, !dbg !9673
  tail call void @SFI_MacEnable(i16 noundef zeroext %79) #21, !dbg !9674
  %80 = load i16, i16* %73, align 2, !dbg !9675
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %80) #21, !dbg !9676
  %81 = load volatile i32, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !9677
  call void @llvm.dbg.value(metadata i32 %81, metadata !9578, metadata !DIExpression(DW_OP_constu, 8, DW_OP_shr, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !9582
  %82 = and i32 %81, 256, !dbg !9678
  %83 = icmp eq i32 %82, 0, !dbg !9678
  br i1 %83, label %84, label %78, !dbg !9678, !llvm.loop !9679

84:                                               ; preds = %78, %68, %63
  tail call void @SF_DAL_FLAG_SUS_SET() #20, !dbg !9681
  br label %116, !dbg !9682

85:                                               ; preds = %40
  %86 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 24, !dbg !9683
  %87 = load i32, i32* %86, align 4, !dbg !9683
  %88 = and i32 %87, 2, !dbg !9686
  %89 = icmp eq i32 %88, 0, !dbg !9686
  br i1 %89, label %115, label %90, !dbg !9687

90:                                               ; preds = %85
  %91 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 3, !dbg !9688
  %92 = load %struct.anon*, %struct.anon** %91, align 4, !dbg !9688
  %93 = icmp eq %struct.anon* %92, null, !dbg !9689
  br i1 %93, label %94, label %115, !dbg !9690

94:                                               ; preds = %90
  %95 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %41, align 4, !dbg !9691
  %96 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %95, i32 0, i32 15, !dbg !9693
  %97 = load i8, i8* %96, align 1, !dbg !9693
  %98 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %5, i8 noundef zeroext %97) #20, !dbg !9694
  call void @llvm.dbg.value(metadata i32 %98, metadata !9578, metadata !DIExpression()), !dbg !9582
  %99 = load i8*, i8** %46, align 4, !dbg !9695
  %100 = getelementptr inbounds i8, i8* %99, i32 2, !dbg !9697
  %101 = load i8, i8* %100, align 1, !dbg !9697
  %102 = zext i8 %101 to i32, !dbg !9697
  %103 = and i32 %98, %102, !dbg !9698
  %104 = icmp eq i32 %103, 0, !dbg !9699
  br i1 %104, label %105, label %115, !dbg !9700

105:                                              ; preds = %94
  %106 = getelementptr inbounds i8, i8* %99, i32 3, !dbg !9701
  %107 = load i8, i8* %106, align 1, !dbg !9701
  %108 = zext i8 %107 to i32, !dbg !9701
  %109 = and i32 %98, %108, !dbg !9702
  %110 = icmp eq i32 %109, 0, !dbg !9703
  br i1 %110, label %111, label %115, !dbg !9704

111:                                              ; preds = %105
  %112 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 23, !dbg !9705
  %113 = load i16, i16* %112, align 2, !dbg !9705
  tail call void @SFI_Dev_Command(i16 noundef zeroext %113, i32 noundef 122) #21, !dbg !9707
  %114 = load i16, i16* %112, align 2, !dbg !9708
  tail call void @SFI_Dev_Command(i16 noundef zeroext %114, i32 noundef 122) #21, !dbg !9709
  br label %115, !dbg !9710

115:                                              ; preds = %94, %105, %111, %90, %85
  tail call void @SF_DAL_FLAG_BUSY_CLR() #20, !dbg !9711
  br label %116

116:                                              ; preds = %84, %115, %34
  store i32 0, i32* @gNOR_ReturnReadyEnd, align 4, !dbg !9712
  %117 = load i32, i32* @gNOR_ReturnReadyBegin, align 4, !dbg !9713
  %118 = sub i32 0, %117, !dbg !9713
  call void @llvm.dbg.value(metadata i32 %118, metadata !9580, metadata !DIExpression()), !dbg !9714
  %119 = load i32, i32* @sf_dal_flash_return_ready_max, align 4, !dbg !9715
  %120 = icmp ult i32 %119, %118, !dbg !9717
  br i1 %120, label %121, label %122, !dbg !9718

121:                                              ; preds = %116
  store i32 %118, i32* @sf_dal_flash_return_ready_max, align 4, !dbg !9719
  br label %122, !dbg !9721

122:                                              ; preds = %121, %116
  %123 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !9722
  %124 = and i32 %123, -513, !dbg !9722
  store volatile i32 %124, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !9722
  br label %125, !dbg !9725

125:                                              ; preds = %0, %122
  tail call void @RestoreIRQMask(i32 noundef %1) #20, !dbg !9582
  ret void, !dbg !9726
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_Suspend(%struct.SF_MTD_Data* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !9727 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !9729, metadata !DIExpression()), !dbg !9733
  %2 = load i32, i32* @sf_dal_resume_time, align 4, !dbg !9734
  %3 = icmp eq i32 %2, -1, !dbg !9736
  br i1 %3, label %12, label %4, !dbg !9737

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 0, metadata !9731, metadata !DIExpression()), !dbg !9733
  %5 = sub i32 0, %2, !dbg !9738
  call void @llvm.dbg.value(metadata i32 %5, metadata !9732, metadata !DIExpression()), !dbg !9733
  %6 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 19, !dbg !9740
  %7 = load i8, i8* %6, align 4, !dbg !9740
  %8 = zext i8 %7 to i32, !dbg !9742
  %9 = icmp ugt i32 %8, %5, !dbg !9743
  br i1 %9, label %10, label %12, !dbg !9744

10:                                               ; preds = %4
  %11 = add i32 %2, %8, !dbg !9745
  tail call void @DelayAWhile_UST(i32 noundef %11) #21, !dbg !9747
  br label %12, !dbg !9748

12:                                               ; preds = %4, %10, %1
  %13 = tail call i32 @SaveAndSetIRQMask() #20, !dbg !9749
  call void @llvm.dbg.value(metadata i32 %13, metadata !9730, metadata !DIExpression()), !dbg !9733
  %14 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !9750
  %15 = load i16, i16* %14, align 2, !dbg !9750
  %16 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !9751
  %17 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %16, align 4, !dbg !9751
  %18 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %17, i32 0, i32 2, !dbg !9752
  %19 = load i8, i8* %18, align 1, !dbg !9752
  %20 = zext i8 %19 to i32, !dbg !9753
  tail call void @SFI_Dev_Command(i16 noundef zeroext %15, i32 noundef %20) #21, !dbg !9754
  tail call void @RestoreIRQMask(i32 noundef %13) #20, !dbg !9755
  ret void, !dbg !9756
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_FLAG_SUS_SET() local_unnamed_addr #0 section ".ram_code" !dbg !9757 {
  %1 = tail call i32 @SaveAndSetIRQMask() #20, !dbg !9760
  call void @llvm.dbg.value(metadata i32 %1, metadata !9759, metadata !DIExpression()), !dbg !9761
  store i8 1, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !9762
  %2 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !9763
  %3 = and i32 %2, -513, !dbg !9763
  store volatile i32 %3, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !9763
  tail call void @RestoreIRQMask(i32 noundef %1) #20, !dbg !9766
  ret void, !dbg !9767
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_Command(%struct.SF_MTD_Data* nocapture noundef readonly %0, i32 noundef %1, i8 noundef zeroext %2) local_unnamed_addr #0 section ".ram_code" !dbg !9768 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !9772, metadata !DIExpression()), !dbg !9776
  call void @llvm.dbg.value(metadata i32 %1, metadata !9773, metadata !DIExpression()), !dbg !9776
  call void @llvm.dbg.value(metadata i8 %2, metadata !9774, metadata !DIExpression()), !dbg !9776
  %4 = tail call i32 @SaveAndSetIRQMask() #20, !dbg !9777
  call void @llvm.dbg.value(metadata i32 %4, metadata !9775, metadata !DIExpression()), !dbg !9776
  %5 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !9778
  %6 = load i16, i16* %5, align 2, !dbg !9778
  tail call void @SFI_MacEnable(i16 noundef zeroext %6) #21, !dbg !9779
  store volatile i32 %1, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !9780
  %7 = zext i8 %2 to i32, !dbg !9781
  store volatile i32 %7, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !9782
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !9783
  %8 = load i16, i16* %5, align 2, !dbg !9784
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %8) #21, !dbg !9785
  tail call void @RestoreIRQMask(i32 noundef %4) #20, !dbg !9786
  ret void, !dbg !9787
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @retrieve_MTD_lock() local_unnamed_addr #0 section ".ram_code" !dbg !9788 {
  %1 = tail call i32 @SaveAndSetIRQMask() #20, !dbg !9793
  call void @llvm.dbg.value(metadata i32 %1, metadata !9792, metadata !DIExpression()), !dbg !9794
  %2 = load i1, i1* @MTDMutex, align 4, !dbg !9795
  br i1 %2, label %4, label %3, !dbg !9797

3:                                                ; preds = %0
  store i1 true, i1* @MTDMutex, align 4, !dbg !9798
  br label %4, !dbg !9800

4:                                                ; preds = %0, %3
  %5 = phi i32 [ 0, %3 ], [ -2, %0 ], !dbg !9801
  tail call void @RestoreIRQMask(i32 noundef %1) #20, !dbg !9801
  ret i32 %5, !dbg !9802
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @Flash_CheckReady() local_unnamed_addr #0 section ".ram_code" !dbg !9803 {
  %1 = load %struct.SF_MTD_Data*, %struct.SF_MTD_Data** bitcast (i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2) to %struct.SF_MTD_Data**), align 4, !dbg !9808
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !9805, metadata !DIExpression()), !dbg !9809
  call void @llvm.dbg.value(metadata i8 0, metadata !9807, metadata !DIExpression()), !dbg !9809
  %2 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 0, !dbg !9810
  %3 = load i32, i32* %2, align 4, !dbg !9810
  %4 = xor i32 %3, -1, !dbg !9810
  %5 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 5, !dbg !9810
  %6 = load %struct.powerkey_state_t*, %struct.powerkey_state_t** %5, align 4, !dbg !9810
  %7 = ptrtoint %struct.powerkey_state_t* %6 to i32, !dbg !9810
  %8 = icmp eq i32 %4, %7, !dbg !9810
  br i1 %8, label %10, label %9, !dbg !9813

9:                                                ; preds = %0
  tail call void @Flash_ReturnReady() #20, !dbg !9814
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.136, i32 0, i32 0), i32 noundef 1263, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.Flash_CheckReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.137, i32 0, i32 0)) #23, !dbg !9814
  unreachable, !dbg !9814

10:                                               ; preds = %0
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #20, !dbg !9816
  %11 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !9817
  %12 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !9817
  %13 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %12, i32 0, i32 16, !dbg !9818
  %14 = load i8, i8* %13, align 1, !dbg !9818
  %15 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %1, i8 noundef zeroext %14) #20, !dbg !9819
  call void @llvm.dbg.value(metadata i32 %15, metadata !9806, metadata !DIExpression()), !dbg !9809
  %16 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12, !dbg !9820
  %17 = load i8*, i8** %16, align 4, !dbg !9820
  %18 = load i8, i8* %17, align 1, !dbg !9822
  %19 = zext i8 %18 to i32, !dbg !9822
  %20 = and i32 %15, %19, !dbg !9823
  %21 = icmp eq i32 %20, 0, !dbg !9824
  br i1 %21, label %22, label %23, !dbg !9825

22:                                               ; preds = %10
  tail call void @SF_DAL_FLAG_BUSY_CLR() #20, !dbg !9826
  call void @llvm.dbg.value(metadata i8 1, metadata !9807, metadata !DIExpression()), !dbg !9809
  br label %23, !dbg !9828

23:                                               ; preds = %22, %10
  call void @llvm.dbg.value(metadata i8 poison, metadata !9807, metadata !DIExpression()), !dbg !9809
  tail call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #20, !dbg !9829
  ret i1 %21, !dbg !9830
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Flash_ResumeOperation() local_unnamed_addr #0 section ".ram_code" !dbg !9831 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !9833, metadata !DIExpression()), !dbg !9834
  %1 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !9835, !range !3343
  %2 = icmp eq i8 %1, 0, !dbg !9835
  %3 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !9835
  %4 = icmp eq i8 %3, 0, !dbg !9835
  %5 = select i1 %2, i1 true, i1 %4, !dbg !9835
  br i1 %5, label %6, label %7, !dbg !9835

6:                                                ; preds = %0
  tail call void @Flash_ReturnReady() #20, !dbg !9838
  tail call void @Flash_ReturnReady() #20, !dbg !9840
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.136, i32 0, i32 0), i32 noundef 1293, i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.Flash_ResumeOperation, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.137, i32 0, i32 0)) #23, !dbg !9840
  unreachable, !dbg !9840

7:                                                ; preds = %0
  %8 = load %struct.SF_MTD_Data*, %struct.SF_MTD_Data** bitcast (i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2) to %struct.SF_MTD_Data**), align 4, !dbg !9844
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %8, metadata !9833, metadata !DIExpression()), !dbg !9834
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef %8) #20, !dbg !9845
  ret void, !dbg !9846
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !9847 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !9849, metadata !DIExpression()), !dbg !9851
  %2 = tail call i32 @SaveAndSetIRQMask() #20, !dbg !9852
  call void @llvm.dbg.value(metadata i32 %2, metadata !9850, metadata !DIExpression()), !dbg !9851
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !9853
  %4 = load i16, i16* %3, align 2, !dbg !9853
  %5 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !9854
  %6 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %5, align 4, !dbg !9854
  %7 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %6, i32 0, i32 3, !dbg !9855
  %8 = load i8, i8* %7, align 1, !dbg !9855
  %9 = zext i8 %8 to i32, !dbg !9856
  tail call void @SFI_Dev_Command(i16 noundef zeroext %4, i32 noundef %9) #21, !dbg !9857
  %10 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 19, !dbg !9858
  %11 = load i8, i8* %10, align 4, !dbg !9858
  %12 = icmp eq i8 %11, 0, !dbg !9860
  br i1 %12, label %14, label %13, !dbg !9861

13:                                               ; preds = %1
  store i32 0, i32* @sf_dal_resume_time, align 4, !dbg !9862
  br label %14, !dbg !9864

14:                                               ; preds = %13, %1
  tail call void @SF_DAL_FLAG_SUS_CLR() #20, !dbg !9865
  tail call void @RestoreIRQMask(i32 noundef %2) #20, !dbg !9866
  ret void, !dbg !9867
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_FLAG_SUS_CLR() local_unnamed_addr #0 section ".ram_code" !dbg !9868 {
  %1 = tail call i32 @SaveAndSetIRQMask() #20, !dbg !9871
  call void @llvm.dbg.value(metadata i32 %1, metadata !9870, metadata !DIExpression()), !dbg !9872
  store i8 0, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !9873
  tail call void @RestoreIRQMask(i32 noundef %1) #20, !dbg !9874
  ret void, !dbg !9875
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Flash_SuspendOperation() local_unnamed_addr #0 section ".ram_code" !dbg !9876 {
  %1 = load %struct.SF_MTD_Data*, %struct.SF_MTD_Data** bitcast (i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2) to %struct.SF_MTD_Data**), align 4, !dbg !9880
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !9878, metadata !DIExpression()), !dbg !9881
  %2 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !9882, !range !3343
  %3 = icmp ne i8 %2, 0, !dbg !9882
  %4 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !9882
  %5 = icmp eq i8 %4, 0, !dbg !9882
  %6 = select i1 %3, i1 %5, i1 false, !dbg !9882
  br i1 %6, label %8, label %7, !dbg !9882

7:                                                ; preds = %0
  tail call void @Flash_ReturnReady() #20, !dbg !9885
  tail call void @Flash_ReturnReady() #20, !dbg !9887
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.136, i32 0, i32 0), i32 noundef 1313, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.Flash_SuspendOperation, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.137, i32 0, i32 0)) #23, !dbg !9887
  unreachable, !dbg !9887

8:                                                ; preds = %0
  %9 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 0, !dbg !9891
  %10 = load i32, i32* %9, align 4, !dbg !9891
  %11 = xor i32 %10, -1, !dbg !9891
  %12 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 5, !dbg !9891
  %13 = load %struct.powerkey_state_t*, %struct.powerkey_state_t** %12, align 4, !dbg !9891
  %14 = ptrtoint %struct.powerkey_state_t* %13 to i32, !dbg !9891
  %15 = icmp eq i32 %11, %14, !dbg !9891
  br i1 %15, label %17, label %16, !dbg !9894

16:                                               ; preds = %8
  tail call void @Flash_ReturnReady() #20, !dbg !9895
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.136, i32 0, i32 0), i32 noundef 1315, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.Flash_SuspendOperation, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.137, i32 0, i32 0)) #23, !dbg !9895
  unreachable, !dbg !9895

17:                                               ; preds = %8
  tail call void @SF_DAL_Dev_Suspend(%struct.SF_MTD_Data* noundef nonnull %1) #20, !dbg !9897
  %18 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13
  %19 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12
  br label %20, !dbg !9898

20:                                               ; preds = %20, %17
  %21 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %18, align 4, !dbg !9899
  %22 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %21, i32 0, i32 16, !dbg !9901
  %23 = load i8, i8* %22, align 1, !dbg !9901
  %24 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %1, i8 noundef zeroext %23) #20, !dbg !9902
  call void @llvm.dbg.value(metadata i32 %24, metadata !9879, metadata !DIExpression()), !dbg !9881
  %25 = load i8*, i8** %19, align 4, !dbg !9903
  %26 = load i8, i8* %25, align 1, !dbg !9905
  %27 = zext i8 %26 to i32, !dbg !9905
  %28 = and i32 %24, %27, !dbg !9906
  %29 = icmp eq i32 %28, 0, !dbg !9907
  br i1 %29, label %30, label %20, !dbg !9908, !llvm.loop !9909

30:                                               ; preds = %20
  tail call void @SF_DAL_FLAG_SUS_SET() #20, !dbg !9911
  ret void, !dbg !9912
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SF_DAL_CreateDevLock(%struct.SF_MTD_Data* nocapture %0) local_unnamed_addr #8 section ".ram_code" !dbg !9913 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !9915, metadata !DIExpression()), !dbg !9916
  ret void, !dbg !9917
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @SF_DAL_Init_MXIC(%struct.NOR_MTD_Driver* nocapture readnone %0, %struct.SF_MTD_Data* nocapture noundef %1) local_unnamed_addr #5 !dbg !9918 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* undef, metadata !9941, metadata !DIExpression()), !dbg !9944
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !9942, metadata !DIExpression()), !dbg !9944
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12, !dbg !9945
  %4 = load i8*, i8** %3, align 4, !dbg !9945
  call void @llvm.dbg.value(metadata i8* %4, metadata !9943, metadata !DIExpression()), !dbg !9944
  store i8 1, i8* %4, align 1, !dbg !9946
  %5 = getelementptr inbounds i8, i8* %4, i32 1, !dbg !9947
  store i8 2, i8* %5, align 1, !dbg !9948
  %6 = getelementptr inbounds i8, i8* %4, i32 2, !dbg !9949
  store i8 8, i8* %6, align 1, !dbg !9950
  %7 = getelementptr inbounds i8, i8* %4, i32 3, !dbg !9951
  store i8 4, i8* %7, align 1, !dbg !9952
  %8 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !9953
  store i8 60, i8* %8, align 1, !dbg !9954
  %9 = getelementptr inbounds i8, i8* %4, i32 5, !dbg !9955
  store i8 -128, i8* %9, align 1, !dbg !9956
  %10 = getelementptr inbounds i8, i8* %4, i32 7, !dbg !9957
  store i8 96, i8* %10, align 1, !dbg !9958
  %11 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !9959
  %12 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !9959
  %13 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %12, i32 0, i32 15, !dbg !9960
  store i8 43, i8* %13, align 1, !dbg !9961
  %14 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !9962
  %15 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %14, i32 0, i32 13, !dbg !9963
  store i8 43, i8* %15, align 1, !dbg !9964
  %16 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !9965
  %17 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %16, i32 0, i32 14, !dbg !9966
  store i8 47, i8* %17, align 1, !dbg !9967
  %18 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !9968
  %19 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %18, i32 0, i32 11, !dbg !9969
  store i8 5, i8* %19, align 1, !dbg !9970
  %20 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !9971
  %21 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %20, i32 0, i32 12, !dbg !9972
  store i8 1, i8* %21, align 1, !dbg !9973
  %22 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !9974
  %23 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %22, i32 0, i32 17, !dbg !9975
  store i8 43, i8* %23, align 1, !dbg !9976
  %24 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 19, !dbg !9977
  store i8 22, i8* %24, align 4, !dbg !9978
  %25 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 20, i32 1, !dbg !9979
  %26 = load i8, i8* %25, align 1, !dbg !9979
  %27 = icmp eq i8 %26, 32, !dbg !9981
  br i1 %27, label %28, label %49, !dbg !9982

28:                                               ; preds = %2
  %29 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 20, i32 2, !dbg !9983
  %30 = load i8, i8* %29, align 1, !dbg !9983
  %31 = icmp eq i8 %30, 24, !dbg !9984
  br i1 %31, label %32, label %41, !dbg !9985

32:                                               ; preds = %28
  %33 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !9986
  %34 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %33, i32 0, i32 2, !dbg !9988
  store i8 117, i8* %34, align 1, !dbg !9989
  %35 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !9990
  %36 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %35, i32 0, i32 3, !dbg !9991
  store i8 122, i8* %36, align 1, !dbg !9992
  %37 = load i8, i8* %25, align 1, !dbg !9993
  %38 = icmp eq i8 %37, 32, !dbg !9995
  br i1 %38, label %39, label %49, !dbg !9996

39:                                               ; preds = %32
  %40 = load i8, i8* %29, align 1, !dbg !9998
  br label %41, !dbg !9998

41:                                               ; preds = %28, %39
  %42 = phi i8 [ %40, %39 ], [ %30, %28 ], !dbg !9998
  %43 = icmp eq i8 %42, 22, !dbg !9999
  br i1 %43, label %44, label %49, !dbg !10000

44:                                               ; preds = %41
  %45 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !10001
  %46 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %45, i32 0, i32 2, !dbg !10003
  store i8 117, i8* %46, align 1, !dbg !10004
  %47 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !10005
  %48 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %47, i32 0, i32 3, !dbg !10006
  store i8 122, i8* %48, align 1, !dbg !10007
  br label %49, !dbg !10008

49:                                               ; preds = %2, %44, %41, %32
  %50 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 28, !dbg !10009
  store i32 (i8*)* @SF_DAL_UnlockBlock_MXIC, i32 (i8*)** %50, align 4, !dbg !10010
  ret i32 0, !dbg !10011
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_UnlockBlock_MXIC(i8* nocapture noundef readonly %0) #0 section ".ram_code" !dbg !10012 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !10014, metadata !DIExpression()), !dbg !10018
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !10019
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !10015, metadata !DIExpression()), !dbg !10018
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #22, !dbg !10020
  %4 = getelementptr inbounds i8, i8* %0, i32 193, !dbg !10021
  %5 = load i8, i8* %4, align 1, !dbg !10023
  %6 = icmp eq i8 %5, -62, !dbg !10024
  br i1 %6, label %7, label %15, !dbg !10025

7:                                                ; preds = %1
  %8 = getelementptr inbounds i8, i8* %0, i32 194, !dbg !10026
  %9 = load i8, i8* %8, align 1, !dbg !10026
  %10 = icmp eq i8 %9, 32, !dbg !10027
  br i1 %10, label %11, label %15, !dbg !10028

11:                                               ; preds = %7
  %12 = getelementptr inbounds i8, i8* %0, i32 195, !dbg !10029
  %13 = load i8, i8* %12, align 1, !dbg !10029
  %14 = icmp eq i8 %13, 22, !dbg !10030
  br i1 %14, label %48, label %15, !dbg !10031

15:                                               ; preds = %11, %7, %1
  %16 = getelementptr inbounds i8, i8* %0, i32 198, !dbg !10032
  %17 = bitcast i8* %16 to i16*, !dbg !10032
  %18 = load i16, i16* %17, align 2, !dbg !10032
  %19 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !10033
  %20 = bitcast i8* %19 to %struct.SF_MTD_CMD**, !dbg !10033
  %21 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %20, align 4, !dbg !10033
  %22 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %21, i32 0, i32 1, !dbg !10034
  %23 = load i8, i8* %22, align 1, !dbg !10034
  %24 = zext i8 %23 to i32, !dbg !10035
  tail call void @SFI_Dev_Command(i16 noundef zeroext %18, i32 noundef %24) #21, !dbg !10036
  tail call void @SF_DAL_Dev_WaitReady_EMIINIT(%struct.SF_MTD_Data* noundef nonnull %3) #20, !dbg !10037
  %25 = load i16, i16* %17, align 2, !dbg !10038
  %26 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %20, align 4, !dbg !10039
  %27 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %26, i32 0, i32 11, !dbg !10040
  call void @llvm.dbg.value(metadata i8* %2, metadata !10017, metadata !DIExpression(DW_OP_deref)), !dbg !10018
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %25, i8* noundef nonnull %27, i8* noundef nonnull %2, i16 noundef zeroext 1, i16 noundef zeroext 1) #21, !dbg !10041
  %28 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %20, align 4, !dbg !10042
  %29 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %28, i32 0, i32 12, !dbg !10043
  %30 = load i8, i8* %29, align 1, !dbg !10043
  %31 = zext i8 %30 to i32, !dbg !10044
  call void @llvm.dbg.value(metadata i32 %31, metadata !10016, metadata !DIExpression()), !dbg !10018
  %32 = shl nuw nsw i32 %31, 8, !dbg !10045
  %33 = load i8, i8* %2, align 1, !dbg !10046
  call void @llvm.dbg.value(metadata i8 %33, metadata !10017, metadata !DIExpression()), !dbg !10018
  %34 = zext i8 %33 to i32, !dbg !10046
  %35 = getelementptr inbounds i8, i8* %0, i32 172, !dbg !10047
  %36 = bitcast i8* %35 to i8**, !dbg !10047
  %37 = load i8*, i8** %36, align 4, !dbg !10047
  %38 = getelementptr inbounds i8, i8* %37, i32 4, !dbg !10048
  %39 = load i8, i8* %38, align 1, !dbg !10048
  %40 = getelementptr inbounds i8, i8* %37, i32 5, !dbg !10049
  %41 = load i8, i8* %40, align 1, !dbg !10049
  %42 = or i8 %41, %39, !dbg !10050
  %43 = zext i8 %42 to i32, !dbg !10050
  %44 = xor i32 %43, -1, !dbg !10051
  %45 = and i32 %44, %34, !dbg !10052
  %46 = or i32 %45, %32, !dbg !10053
  call void @llvm.dbg.value(metadata i32 %46, metadata !10016, metadata !DIExpression()), !dbg !10018
  %47 = load i16, i16* %17, align 2, !dbg !10054
  call void @SFI_Dev_Command(i16 noundef zeroext %47, i32 noundef %46) #21, !dbg !10055
  call void @SF_DAL_Dev_WaitReady_EMIINIT(%struct.SF_MTD_Data* noundef nonnull %3) #20, !dbg !10056
  br label %48, !dbg !10057

48:                                               ; preds = %11, %15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #22, !dbg !10058
  ret i32 0, !dbg !10058
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_WaitReady_EMIINIT(%struct.SF_MTD_Data* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !10059 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !10061, metadata !DIExpression()), !dbg !10063
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #22, !dbg !10064
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23
  %4 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13
  %5 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 12
  br label %6, !dbg !10065

6:                                                ; preds = %6, %1
  %7 = load i16, i16* %3, align 2, !dbg !10066
  %8 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %4, align 4, !dbg !10068
  %9 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %8, i32 0, i32 16, !dbg !10069
  call void @llvm.dbg.value(metadata i8* %2, metadata !10062, metadata !DIExpression(DW_OP_deref)), !dbg !10063
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %7, i8* noundef nonnull %9, i8* noundef nonnull %2, i16 noundef zeroext 1, i16 noundef zeroext 1) #21, !dbg !10070
  %10 = load i8, i8* %2, align 1, !dbg !10071
  call void @llvm.dbg.value(metadata i8 %10, metadata !10062, metadata !DIExpression()), !dbg !10063
  %11 = load i8*, i8** %5, align 4, !dbg !10072
  %12 = load i8, i8* %11, align 1, !dbg !10073
  %13 = and i8 %12, %10, !dbg !10074
  %14 = icmp eq i8 %13, 0, !dbg !10075
  br i1 %14, label %15, label %6, !dbg !10076, !llvm.loop !10077

15:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #22, !dbg !10079
  ret void, !dbg !10079
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @SF_DAL_Init_WINBOND(%struct.NOR_MTD_Driver* nocapture readnone %0, %struct.SF_MTD_Data* nocapture noundef %1) local_unnamed_addr #5 !dbg !10080 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* undef, metadata !10082, metadata !DIExpression()), !dbg !10085
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !10083, metadata !DIExpression()), !dbg !10085
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12, !dbg !10086
  %4 = load i8*, i8** %3, align 4, !dbg !10086
  call void @llvm.dbg.value(metadata i8* %4, metadata !10084, metadata !DIExpression()), !dbg !10085
  store i8 1, i8* %4, align 1, !dbg !10087
  %5 = getelementptr inbounds i8, i8* %4, i32 1, !dbg !10088
  store i8 2, i8* %5, align 1, !dbg !10089
  %6 = getelementptr inbounds i8, i8* %4, i32 2, !dbg !10090
  store i8 -128, i8* %6, align 1, !dbg !10091
  %7 = getelementptr inbounds i8, i8* %4, i32 3, !dbg !10092
  store i8 -128, i8* %7, align 1, !dbg !10093
  %8 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !10094
  store i8 60, i8* %8, align 1, !dbg !10095
  %9 = getelementptr inbounds i8, i8* %4, i32 5, !dbg !10096
  store i8 -128, i8* %9, align 1, !dbg !10097
  %10 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !10098
  %11 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !10098
  %12 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %11, i32 0, i32 10, !dbg !10099
  store i8 -97, i8* %12, align 1, !dbg !10100
  %13 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !10101
  %14 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %13, i32 0, i32 15, !dbg !10102
  store i8 53, i8* %14, align 1, !dbg !10103
  %15 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !10104
  %16 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %15, i32 0, i32 13, !dbg !10105
  store i8 53, i8* %16, align 1, !dbg !10106
  %17 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !10107
  %18 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %17, i32 0, i32 11, !dbg !10108
  store i8 5, i8* %18, align 1, !dbg !10109
  %19 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !10110
  %20 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %19, i32 0, i32 12, !dbg !10111
  store i8 1, i8* %20, align 1, !dbg !10112
  %21 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !10113
  %22 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %21, i32 0, i32 2, !dbg !10114
  store i8 117, i8* %22, align 1, !dbg !10115
  %23 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !10116
  %24 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %23, i32 0, i32 3, !dbg !10117
  store i8 122, i8* %24, align 1, !dbg !10118
  %25 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 19, !dbg !10119
  store i8 22, i8* %25, align 4, !dbg !10120
  %26 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 28, !dbg !10121
  store i32 (i8*)* @SF_DAL_UnlockBlock_None, i32 (i8*)** %26, align 4, !dbg !10122
  ret i32 0, !dbg !10123
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SF_DAL_Init_WINBOND_OTP(%struct.NOR_MTD_Driver* nocapture readnone %0, %struct.SF_MTD_Data* nocapture readnone %1) local_unnamed_addr #8 !dbg !10124 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* undef, metadata !10126, metadata !DIExpression()), !dbg !10128
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !10127, metadata !DIExpression()), !dbg !10128
  ret i32 0, !dbg !10129
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_Init_Common(%struct.NOR_MTD_Driver* nocapture noundef writeonly %0, %struct.SF_MTD_Data* nocapture noundef %1) local_unnamed_addr #0 !dbg !10130 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* %0, metadata !10132, metadata !DIExpression()), !dbg !10134
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !10133, metadata !DIExpression()), !dbg !10134
  %3 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 0, !dbg !10135
  store i32 (i8*, i8*)* @SF_DAL_MountDevice, i32 (i8*, i8*)** %3, align 4, !dbg !10136
  %4 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 1, !dbg !10137
  store i32 (i8*)* @SF_DAL_ShutDown, i32 (i8*)** %4, align 4, !dbg !10138
  %5 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 2, !dbg !10139
  store i8* (i8*, i32, i32)* @MapWindow, i8* (i8*, i32, i32)** %5, align 4, !dbg !10140
  %6 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 3, !dbg !10141
  store i32 (i8*, i32)* @SF_DAL_EraseBlock, i32 (i8*, i32)** %6, align 4, !dbg !10142
  %7 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 4, !dbg !10143
  store i32 (i8*, i8*, i8*, i32)* @SF_DAL_ProgramData, i32 (i8*, i8*, i8*, i32)** %7, align 4, !dbg !10144
  %8 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 5, !dbg !10145
  store i32 (i8*, i32)* @SF_DAL_NonBlockEraseBlock, i32 (i8*, i32)** %8, align 4, !dbg !10146
  %9 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 6, !dbg !10147
  store i32 (i8*, i32)* @SF_DAL_CheckDeviceReady, i32 (i8*, i32)** %9, align 4, !dbg !10148
  %10 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 7, !dbg !10149
  store i32 (i8*, i32)* @SF_DAL_SuspendErase, i32 (i8*, i32)** %10, align 4, !dbg !10150
  %11 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 8, !dbg !10151
  store i32 (i8*, i32)* @SF_DAL_ResumeErase, i32 (i8*, i32)** %11, align 4, !dbg !10152
  %12 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 9, !dbg !10153
  store i32 (i8*, i32)* null, i32 (i8*, i32)** %12, align 4, !dbg !10154
  %13 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 10, !dbg !10155
  store i32 (i8*, i32, i32, i8*, i32)* null, i32 (i8*, i32, i32, i8*, i32)** %13, align 4, !dbg !10156
  %14 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 11, !dbg !10157
  store i32 (i8*, i32*)* null, i32 (i8*, i32*)** %14, align 4, !dbg !10158
  %15 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 12, !dbg !10159
  store i32 (i8*, i8*, i32)* @SF_DAL_LockEraseBlkAddr, i32 (i8*, i8*, i32)** %15, align 4, !dbg !10160
  %16 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 13, !dbg !10161
  store i1 (i8*, i32)* null, i1 (i8*, i32)** %16, align 4, !dbg !10162
  %17 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 14, !dbg !10163
  store i32 (i8*, i32, i8*)* @SF_DAL_IOCtrl, i32 (i8*, i32, i8*)** %17, align 4, !dbg !10164
  %18 = tail call i32 @custom_get_NORFLASH_Size() #21, !dbg !10165
  %19 = icmp ugt i32 %18, 16777216, !dbg !10167
  %20 = select i1 %19, i8 4, i8 3, !dbg !10168
  %21 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 22, !dbg !10169
  store i8 %20, i8* %21, align 1, !dbg !10171
  %22 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !10172
  %23 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !10172
  %24 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %23, i32 0, i32 17, !dbg !10173
  store i8 0, i8* %24, align 1, !dbg !10174
  %25 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !10175
  %26 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %25, i32 0, i32 10, !dbg !10176
  store i8 -81, i8* %26, align 1, !dbg !10177
  %27 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !10178
  %28 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %27, i32 0, i32 9, !dbg !10179
  store i8 -97, i8* %28, align 1, !dbg !10180
  %29 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !10181
  %30 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %29, i32 0, i32 0, !dbg !10182
  store i8 2, i8* %30, align 1, !dbg !10183
  %31 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !10184
  %32 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %31, i32 0, i32 6, !dbg !10185
  store i8 32, i8* %32, align 1, !dbg !10186
  %33 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !10187
  %34 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %33, i32 0, i32 7, !dbg !10188
  store i8 82, i8* %34, align 1, !dbg !10189
  %35 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !10190
  %36 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %35, i32 0, i32 8, !dbg !10191
  store i8 -40, i8* %36, align 1, !dbg !10192
  %37 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !10193
  %38 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %37, i32 0, i32 2, !dbg !10194
  store i8 -80, i8* %38, align 1, !dbg !10195
  %39 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !10196
  %40 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %39, i32 0, i32 3, !dbg !10197
  store i8 48, i8* %40, align 1, !dbg !10198
  %41 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !10199
  %42 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %41, i32 0, i32 1, !dbg !10200
  store i8 6, i8* %42, align 1, !dbg !10201
  %43 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !10202
  %44 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %43, i32 0, i32 18, !dbg !10203
  store i8 -71, i8* %44, align 1, !dbg !10204
  %45 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !10205
  %46 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %45, i32 0, i32 19, !dbg !10206
  store i8 -85, i8* %46, align 1, !dbg !10207
  %47 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !10208
  %48 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %47, i32 0, i32 16, !dbg !10209
  store i8 5, i8* %48, align 1, !dbg !10210
  %49 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 15, !dbg !10211
  store i16 0, i16* %49, align 4, !dbg !10212
  %50 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 3, !dbg !10213
  store %struct.anon* null, %struct.anon** %50, align 4, !dbg !10214
  %51 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 2, !dbg !10215
  store %struct.anon* null, %struct.anon** %51, align 4, !dbg !10216
  %52 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 4, !dbg !10217
  store i8 0, i8* %52, align 4, !dbg !10218
  %53 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 19, !dbg !10219
  store i8 5, i8* %53, align 4, !dbg !10220
  ret i32 0, !dbg !10221
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_MountDevice(i8* nocapture noundef readonly %0, i8* nocapture noundef %1) #0 section ".ram_code" !dbg !10222 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10224, metadata !DIExpression()), !dbg !10242
  call void @llvm.dbg.value(metadata i8* %1, metadata !10225, metadata !DIExpression()), !dbg !10242
  call void @llvm.dbg.value(metadata i8* %1, metadata !10226, metadata !DIExpression()), !dbg !10242
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !10243
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !10239, metadata !DIExpression()), !dbg !10242
  call void @llvm.dbg.value(metadata i32 0, metadata !10240, metadata !DIExpression()), !dbg !10242
  %4 = bitcast i8* %1 to i32*, !dbg !10244
  store i32 0, i32* %4, align 4, !dbg !10245
  %5 = getelementptr inbounds i8, i8* %0, i32 20
  %6 = bitcast i8* %5 to %struct.powerkey_state_t**
  call void @llvm.dbg.value(metadata i32 0, metadata !10240, metadata !DIExpression()), !dbg !10242
  %7 = load %struct.powerkey_state_t*, %struct.powerkey_state_t** %6, align 4, !dbg !10246
  %8 = getelementptr inbounds %struct.powerkey_state_t, %struct.powerkey_state_t* %7, i32 0, i32 0, !dbg !10247
  %9 = load i32, i32* %8, align 4, !dbg !10247
  %10 = icmp eq i32 %9, 0, !dbg !10248
  br i1 %10, label %34, label %11, !dbg !10249

11:                                               ; preds = %2
  %12 = getelementptr inbounds i8, i8* %1, i32 4
  %13 = bitcast i8* %12 to [8 x i32]*
  %14 = getelementptr inbounds i8, i8* %1, i32 68
  %15 = bitcast i8* %14 to [8 x i32]*
  br label %16, !dbg !10249

16:                                               ; preds = %11, %16
  %17 = phi i32 [ %9, %11 ], [ %32, %16 ]
  %18 = phi i32 [ 0, %11 ], [ %29, %16 ]
  call void @llvm.dbg.value(metadata i32 %18, metadata !10240, metadata !DIExpression()), !dbg !10242
  %19 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i32 0, i32 %18, !dbg !10250
  store i32 %17, i32* %19, align 4, !dbg !10252
  %20 = load %struct.powerkey_state_t*, %struct.powerkey_state_t** %6, align 4, !dbg !10253
  %21 = getelementptr inbounds %struct.powerkey_state_t, %struct.powerkey_state_t* %20, i32 %18, i32 1, !dbg !10254
  %22 = load i32, i32* %21, align 4, !dbg !10254
  %23 = getelementptr inbounds [8 x i32], [8 x i32]* %15, i32 0, i32 %18, !dbg !10255
  store i32 %22, i32* %23, align 4, !dbg !10256
  %24 = load %struct.powerkey_state_t*, %struct.powerkey_state_t** %6, align 4, !dbg !10257
  %25 = getelementptr inbounds %struct.powerkey_state_t, %struct.powerkey_state_t* %24, i32 %18, i32 1, !dbg !10258
  %26 = load i32, i32* %25, align 4, !dbg !10258
  %27 = load i32, i32* %4, align 4, !dbg !10259
  %28 = add i32 %27, %26, !dbg !10259
  store i32 %28, i32* %4, align 4, !dbg !10259
  %29 = add i32 %18, 1, !dbg !10260
  call void @llvm.dbg.value(metadata i32 %29, metadata !10240, metadata !DIExpression()), !dbg !10242
  %30 = load %struct.powerkey_state_t*, %struct.powerkey_state_t** %6, align 4, !dbg !10246
  %31 = getelementptr inbounds %struct.powerkey_state_t, %struct.powerkey_state_t* %30, i32 %29, i32 0, !dbg !10247
  %32 = load i32, i32* %31, align 4, !dbg !10247
  %33 = icmp eq i32 %32, 0, !dbg !10248
  br i1 %33, label %34, label %16, !dbg !10249, !llvm.loop !10261

34:                                               ; preds = %16, %2
  %35 = phi i32 [ 0, %2 ], [ %29, %16 ], !dbg !10242
  %36 = getelementptr inbounds i8, i8* %1, i32 100, !dbg !10263
  %37 = bitcast i8* %36 to i32*, !dbg !10263
  store i32 %35, i32* %37, align 4, !dbg !10264
  %38 = getelementptr inbounds i8, i8* %1, i32 104, !dbg !10265
  %39 = bitcast i8* %38 to i16*, !dbg !10265
  store i16 512, i16* %39, align 4, !dbg !10266
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef nonnull %3) #20, !dbg !10267
  br label %40, !dbg !10268

40:                                               ; preds = %40, %34
  %41 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef %0, i32 undef) #20, !dbg !10269
  call void @llvm.dbg.value(metadata i32 %41, metadata !10241, metadata !DIExpression()), !dbg !10242
  %42 = icmp eq i32 %41, -121, !dbg !10271
  br i1 %42, label %40, label %43, !dbg !10272, !llvm.loop !10273

43:                                               ; preds = %40
  ret i32 0, !dbg !10275
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_ShutDown(i8* nocapture noundef %0) #0 section ".ram_code" !dbg !10276 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10278, metadata !DIExpression()), !dbg !10282
  %2 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !10283
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %2, metadata !10279, metadata !DIExpression()), !dbg !10282
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #20, !dbg !10284
  %3 = getelementptr inbounds i8, i8* %0, i32 176
  %4 = bitcast i8* %3 to %struct.SF_MTD_CMD**
  %5 = getelementptr inbounds i8, i8* %0, i32 172
  %6 = bitcast i8* %5 to i8**
  br label %7, !dbg !10285

7:                                                ; preds = %25, %1
  %8 = tail call i32 @SaveAndSetIRQMask() #20, !dbg !10286
  call void @llvm.dbg.value(metadata i32 %8, metadata !10281, metadata !DIExpression()), !dbg !10282
  %9 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !10288, !range !3343
  %10 = icmp eq i8 %9, 0, !dbg !10288
  br i1 %10, label %12, label %11, !dbg !10290

11:                                               ; preds = %7
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef %2) #20, !dbg !10291
  store i32 -1, i32* @gNOR_ReturnReadyEnd, align 4, !dbg !10293
  br label %12, !dbg !10294

12:                                               ; preds = %11, %7
  %13 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %4, align 4, !dbg !10295
  %14 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %13, i32 0, i32 16, !dbg !10296
  %15 = load i8, i8* %14, align 1, !dbg !10296
  %16 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef %2, i8 noundef zeroext %15) #20, !dbg !10297
  call void @llvm.dbg.value(metadata i32 %16, metadata !10280, metadata !DIExpression()), !dbg !10282
  %17 = load i8*, i8** %6, align 4, !dbg !10298
  %18 = load i8, i8* %17, align 1, !dbg !10300
  %19 = zext i8 %18 to i32, !dbg !10300
  %20 = and i32 %16, %19, !dbg !10301
  %21 = icmp eq i32 %20, 0, !dbg !10302
  br i1 %21, label %22, label %25, !dbg !10303

22:                                               ; preds = %12
  tail call void @SF_DAL_FLAG_BUSY_CLR() #20, !dbg !10304
  tail call void @RestoreIRQMask(i32 noundef %8) #20, !dbg !10306
  %23 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !10307
  %24 = bitcast i8* %23 to i8**, !dbg !10307
  store i8* null, i8** %24, align 4, !dbg !10308
  tail call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #20, !dbg !10309
  ret i32 0, !dbg !10310

25:                                               ; preds = %12
  tail call void @RestoreIRQMask(i32 noundef %8) #20, !dbg !10311
  br label %7, !dbg !10285, !llvm.loop !10313
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_EraseBlock(i8* nocapture noundef %0, i32 noundef %1) #0 section ".ram_code" !dbg !10315 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10317, metadata !DIExpression()), !dbg !10331
  call void @llvm.dbg.value(metadata i32 %1, metadata !10318, metadata !DIExpression()), !dbg !10331
  call void @llvm.dbg.value(metadata i32 0, metadata !10319, metadata !DIExpression()), !dbg !10331
  call void @llvm.dbg.value(metadata i32 1, metadata !10323, metadata !DIExpression()), !dbg !10331
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !10332
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !10324, metadata !DIExpression()), !dbg !10331
  call void @llvm.dbg.value(metadata i32 0, metadata !10325, metadata !DIExpression()), !dbg !10331
  %4 = bitcast i8* %0 to i32*, !dbg !10333
  %5 = load i32, i32* %4, align 4, !dbg !10333
  %6 = xor i32 %5, -1, !dbg !10333
  %7 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !10333
  %8 = bitcast i8* %7 to %struct.powerkey_state_t**, !dbg !10333
  %9 = load %struct.powerkey_state_t*, %struct.powerkey_state_t** %8, align 4, !dbg !10333
  %10 = ptrtoint %struct.powerkey_state_t* %9 to i32, !dbg !10333
  %11 = icmp eq i32 %6, %10, !dbg !10333
  br i1 %11, label %13, label %12, !dbg !10336

12:                                               ; preds = %2
  tail call void @Flash_ReturnReady() #20, !dbg !10337
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.136, i32 0, i32 0), i32 noundef 2829, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.SF_DAL_EraseBlock, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.137, i32 0, i32 0)) #23, !dbg !10337
  unreachable, !dbg !10337

13:                                               ; preds = %2
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #20, !dbg !10339
  %14 = getelementptr inbounds i8, i8* %0, i32 196, !dbg !10340
  store i8 2, i8* %14, align 4, !dbg !10341
  call void @llvm.dbg.value(metadata i32 %19, metadata !10325, metadata !DIExpression()), !dbg !10331
  call void @llvm.dbg.value(metadata i32 %1, metadata !10318, metadata !DIExpression(DW_OP_constu, 16777215, DW_OP_and, DW_OP_stack_value)), !dbg !10331
  br label %15, !dbg !10342

15:                                               ; preds = %15, %13
  %16 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef %0, i32 undef) #20, !dbg !10343
  call void @llvm.dbg.value(metadata i32 %16, metadata !10319, metadata !DIExpression()), !dbg !10331
  %17 = icmp eq i32 %16, -121, !dbg !10345
  br i1 %17, label %15, label %18, !dbg !10346, !llvm.loop !10347

18:                                               ; preds = %15
  %19 = lshr i32 %1, 24, !dbg !10349
  %20 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !10350
  %21 = bitcast i8* %20 to i8**, !dbg !10350
  %22 = load i8*, i8** %21, align 4, !dbg !10350
  %23 = ptrtoint i8* %22 to i32, !dbg !10351
  %24 = tail call i32 @CMEM_BlockSize(i32 noundef %23) #21, !dbg !10352
  call void @llvm.dbg.value(metadata i32 %24, metadata !10320, metadata !DIExpression()), !dbg !10331
  call void @llvm.dbg.value(metadata i32 %24, metadata !10321, metadata !DIExpression()), !dbg !10331
  %25 = getelementptr inbounds i8, i8* %0, i32 186, !dbg !10353
  %26 = bitcast i8* %25 to i16*, !dbg !10353
  %27 = load i16, i16* %26, align 2, !dbg !10353
  %28 = zext i16 %27 to i32, !dbg !10354
  call void @llvm.dbg.value(metadata i32 %28, metadata !10326, metadata !DIExpression()), !dbg !10355
  %29 = lshr i32 %24, 10, !dbg !10356
  call void @llvm.dbg.value(metadata i32 %29, metadata !10329, metadata !DIExpression()), !dbg !10355
  %30 = and i32 %29, %28, !dbg !10357
  %31 = and i32 %24, 1024
  %32 = or i32 %30, %31, !dbg !10359
  %33 = icmp eq i32 %32, 0, !dbg !10359
  call void @llvm.dbg.value(metadata i32 0, metadata !10330, metadata !DIExpression()), !dbg !10355
  call void @llvm.dbg.value(metadata i32 %29, metadata !10329, metadata !DIExpression()), !dbg !10355
  call void @llvm.dbg.value(metadata i32 %28, metadata !10326, metadata !DIExpression()), !dbg !10355
  call void @llvm.dbg.value(metadata i32 1, metadata !10323, metadata !DIExpression()), !dbg !10331
  call void @llvm.dbg.value(metadata i32 %24, metadata !10321, metadata !DIExpression()), !dbg !10331
  br i1 %33, label %34, label %51, !dbg !10359

34:                                               ; preds = %18, %34
  %35 = phi i32 [ %48, %34 ], [ 0, %18 ]
  %36 = phi i32 [ %47, %34 ], [ %29, %18 ]
  %37 = phi i32 [ %46, %34 ], [ %28, %18 ]
  %38 = phi i32 [ %45, %34 ], [ 1, %18 ]
  %39 = phi i32 [ %44, %34 ], [ %24, %18 ]
  call void @llvm.dbg.value(metadata i32 %35, metadata !10330, metadata !DIExpression()), !dbg !10355
  call void @llvm.dbg.value(metadata i32 %36, metadata !10329, metadata !DIExpression()), !dbg !10355
  call void @llvm.dbg.value(metadata i32 %37, metadata !10326, metadata !DIExpression()), !dbg !10355
  call void @llvm.dbg.value(metadata i32 %38, metadata !10323, metadata !DIExpression()), !dbg !10331
  call void @llvm.dbg.value(metadata i32 %39, metadata !10321, metadata !DIExpression()), !dbg !10331
  %40 = and i32 %37, 1, !dbg !10360
  %41 = icmp eq i32 %40, 0, !dbg !10360
  %42 = add i32 %35, 10, !dbg !10366
  %43 = shl nuw i32 1, %42, !dbg !10366
  %44 = select i1 %41, i32 %39, i32 %43, !dbg !10366
  %45 = select i1 %41, i32 %38, i32 %36, !dbg !10366
  call void @llvm.dbg.value(metadata i32 %45, metadata !10323, metadata !DIExpression()), !dbg !10331
  call void @llvm.dbg.value(metadata i32 %44, metadata !10321, metadata !DIExpression()), !dbg !10331
  %46 = lshr i32 %37, 1, !dbg !10367
  call void @llvm.dbg.value(metadata i32 %46, metadata !10326, metadata !DIExpression()), !dbg !10355
  %47 = lshr i32 %36, 1, !dbg !10368
  call void @llvm.dbg.value(metadata i32 %47, metadata !10329, metadata !DIExpression()), !dbg !10355
  %48 = add i32 %35, 1, !dbg !10369
  call void @llvm.dbg.value(metadata i32 %48, metadata !10330, metadata !DIExpression()), !dbg !10355
  %49 = and i32 %36, 2, !dbg !10370
  %50 = icmp eq i32 %49, 0, !dbg !10370
  br i1 %50, label %34, label %51, !dbg !10371, !llvm.loop !10372

51:                                               ; preds = %34, %18
  %52 = phi i32 [ %24, %18 ], [ %44, %34 ], !dbg !10374
  %53 = phi i32 [ 1, %18 ], [ %45, %34 ], !dbg !10375
  call void @llvm.dbg.value(metadata i32 %53, metadata !10323, metadata !DIExpression()), !dbg !10331
  call void @llvm.dbg.value(metadata i32 %52, metadata !10321, metadata !DIExpression()), !dbg !10331
  switch i32 %52, label %69 [
    i32 4096, label %54
    i32 32768, label %59
    i32 65536, label %64
  ], !dbg !10376

54:                                               ; preds = %51
  %55 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !10377
  %56 = bitcast i8* %55 to %struct.SF_MTD_CMD**, !dbg !10377
  %57 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %56, align 4, !dbg !10377
  %58 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %57, i32 0, i32 6, !dbg !10379
  br label %70, !dbg !10380

59:                                               ; preds = %51
  %60 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !10381
  %61 = bitcast i8* %60 to %struct.SF_MTD_CMD**, !dbg !10381
  %62 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %61, align 4, !dbg !10381
  %63 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %62, i32 0, i32 7, !dbg !10382
  br label %70, !dbg !10383

64:                                               ; preds = %51
  %65 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !10384
  %66 = bitcast i8* %65 to %struct.SF_MTD_CMD**, !dbg !10384
  %67 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %66, align 4, !dbg !10384
  %68 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %67, i32 0, i32 8, !dbg !10385
  br label %70, !dbg !10386

69:                                               ; preds = %51
  tail call void @Flash_ReturnReady() #20, !dbg !10387
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.136, i32 0, i32 0), i32 noundef 2897, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.SF_DAL_EraseBlock, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.137, i32 0, i32 0)) #23, !dbg !10387
  unreachable, !dbg !10387

70:                                               ; preds = %54, %59, %64
  %71 = phi i8* [ %58, %54 ], [ %63, %59 ], [ %68, %64 ]
  %72 = phi %struct.SF_MTD_CMD* [ %57, %54 ], [ %62, %59 ], [ %67, %64 ]
  %73 = load i8, i8* %71, align 1, !dbg !10391
  %74 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %72, i32 0, i32 5, !dbg !10391
  store i8 %73, i8* %74, align 1, !dbg !10391
  call void @llvm.dbg.value(metadata i32 %53, metadata !10323, metadata !DIExpression()), !dbg !10331
  call void @llvm.dbg.value(metadata i32 %52, metadata !10321, metadata !DIExpression()), !dbg !10331
  %75 = trunc i32 %19 to i8, !dbg !10392
  switch i8 %75, label %96 [
    i8 -6, label %76
    i8 -5, label %81
    i8 -4, label %86
  ], !dbg !10392

76:                                               ; preds = %70
  %77 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !10393
  %78 = bitcast i8* %77 to %struct.SF_MTD_CMD**, !dbg !10393
  %79 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %78, align 4, !dbg !10393
  %80 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %79, i32 0, i32 6, !dbg !10395
  br label %91, !dbg !10396

81:                                               ; preds = %70
  %82 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !10397
  %83 = bitcast i8* %82 to %struct.SF_MTD_CMD**, !dbg !10397
  %84 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %83, align 4, !dbg !10397
  %85 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %84, i32 0, i32 7, !dbg !10398
  br label %91, !dbg !10399

86:                                               ; preds = %70
  %87 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !10400
  %88 = bitcast i8* %87 to %struct.SF_MTD_CMD**, !dbg !10400
  %89 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %88, align 4, !dbg !10400
  %90 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %89, i32 0, i32 8, !dbg !10401
  br label %91, !dbg !10402

91:                                               ; preds = %76, %81, %86
  %92 = phi i8* [ %90, %86 ], [ %85, %81 ], [ %80, %76 ]
  %93 = phi %struct.SF_MTD_CMD* [ %89, %86 ], [ %84, %81 ], [ %79, %76 ]
  %94 = load i8, i8* %92, align 1, !dbg !10403
  %95 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %93, i32 0, i32 5, !dbg !10403
  store i8 %94, i8* %95, align 1, !dbg !10403
  br label %96, !dbg !10404

96:                                               ; preds = %91, %70
  call void @llvm.dbg.value(metadata i8* undef, metadata !10322, metadata !DIExpression()), !dbg !10331
  call void @llvm.dbg.value(metadata i32 %53, metadata !10323, metadata !DIExpression()), !dbg !10331
  call void @llvm.dbg.value(metadata i32 %16, metadata !10319, metadata !DIExpression()), !dbg !10331
  %97 = icmp eq i32 %53, 0, !dbg !10404
  br i1 %97, label %111, label %98, !dbg !10407

98:                                               ; preds = %96
  %99 = load i8*, i8** %21, align 4, !dbg !10408
  call void @llvm.dbg.value(metadata i8* %99, metadata !10322, metadata !DIExpression()), !dbg !10331
  %100 = ptrtoint i8* %99 to i32, !dbg !10409
  call void @llvm.dbg.value(metadata i32 %100, metadata !10322, metadata !DIExpression()), !dbg !10331
  br label %101, !dbg !10407

101:                                              ; preds = %98, %107
  %102 = phi i32 [ %108, %107 ], [ %53, %98 ]
  %103 = phi i32 [ %109, %107 ], [ %100, %98 ]
  call void @llvm.dbg.value(metadata i32 %102, metadata !10323, metadata !DIExpression()), !dbg !10331
  call void @llvm.dbg.value(metadata i32 %103, metadata !10322, metadata !DIExpression()), !dbg !10331
  tail call void @SF_DAL_Dev_EraseBlock(%struct.SF_MTD_Data* noundef %3, i32 noundef %103) #20, !dbg !10410
  br label %104, !dbg !10412

104:                                              ; preds = %104, %101
  %105 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef %0, i32 undef) #20, !dbg !10413
  call void @llvm.dbg.value(metadata i32 %105, metadata !10319, metadata !DIExpression()), !dbg !10331
  %106 = icmp eq i32 %105, -121, !dbg !10415
  br i1 %106, label %104, label %107, !dbg !10417, !llvm.loop !10418

107:                                              ; preds = %104
  %108 = add i32 %102, -1, !dbg !10420
  call void @llvm.dbg.value(metadata i32 %108, metadata !10323, metadata !DIExpression()), !dbg !10331
  %109 = add i32 %103, %52, !dbg !10421
  call void @llvm.dbg.value(metadata i32 %109, metadata !10322, metadata !DIExpression()), !dbg !10331
  call void @llvm.dbg.value(metadata i32 %105, metadata !10319, metadata !DIExpression()), !dbg !10331
  %110 = icmp eq i32 %108, 0, !dbg !10404
  br i1 %110, label %111, label %101, !dbg !10407, !llvm.loop !10422

111:                                              ; preds = %107, %96
  %112 = phi i32 [ %16, %96 ], [ %105, %107 ], !dbg !10331
  store i8 0, i8* %14, align 4, !dbg !10424
  tail call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #20, !dbg !10425
  ret i32 %112, !dbg !10426
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_ProgramData(i8* nocapture noundef %0, i8* noundef %1, i8* noundef %2, i32 noundef %3) #0 section ".ram_code" !dbg !10427 {
  %5 = alloca i8*, align 4
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !10429, metadata !DIExpression()), !dbg !10446
  call void @llvm.dbg.value(metadata i8* %1, metadata !10430, metadata !DIExpression()), !dbg !10446
  call void @llvm.dbg.value(metadata i8* %2, metadata !10431, metadata !DIExpression()), !dbg !10446
  call void @llvm.dbg.value(metadata i32 %3, metadata !10432, metadata !DIExpression()), !dbg !10446
  %7 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !10447
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %7, metadata !10433, metadata !DIExpression()), !dbg !10446
  %8 = ptrtoint i8* %1 to i32, !dbg !10448
  call void @llvm.dbg.value(metadata i32 %8, metadata !10435, metadata !DIExpression()), !dbg !10446
  %9 = bitcast i8** %5 to i8*, !dbg !10449
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #22, !dbg !10449
  call void @llvm.dbg.value(metadata i8* %2, metadata !10436, metadata !DIExpression()), !dbg !10446
  store i8* %2, i8** %5, align 4, !dbg !10450
  call void @llvm.dbg.value(metadata i32 0, metadata !10438, metadata !DIExpression()), !dbg !10446
  %10 = bitcast i32* %6 to i8*, !dbg !10451
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #22, !dbg !10451
  %11 = bitcast i8* %0 to i32*, !dbg !10452
  %12 = load i32, i32* %11, align 4, !dbg !10452
  %13 = xor i32 %12, -1, !dbg !10452
  %14 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !10452
  %15 = bitcast i8* %14 to %struct.powerkey_state_t**, !dbg !10452
  %16 = load %struct.powerkey_state_t*, %struct.powerkey_state_t** %15, align 4, !dbg !10452
  %17 = ptrtoint %struct.powerkey_state_t* %16 to i32, !dbg !10452
  %18 = icmp eq i32 %13, %17, !dbg !10452
  br i1 %18, label %20, label %19, !dbg !10455

19:                                               ; preds = %4
  tail call void @Flash_ReturnReady() #20, !dbg !10456
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.136, i32 0, i32 0), i32 noundef 2545, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.SF_DAL_ProgramData, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.137, i32 0, i32 0)) #23, !dbg !10456
  unreachable, !dbg !10456

20:                                               ; preds = %4
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #20, !dbg !10458
  %21 = getelementptr inbounds i8, i8* %0, i32 196, !dbg !10459
  store i8 1, i8* %21, align 4, !dbg !10460
  br label %22, !dbg !10461

22:                                               ; preds = %22, %20
  %23 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef %0, i32 undef) #20, !dbg !10462
  call void @llvm.dbg.value(metadata i32 %23, metadata !10438, metadata !DIExpression()), !dbg !10446
  %24 = icmp eq i32 %23, -121, !dbg !10464
  br i1 %24, label %22, label %25, !dbg !10465, !llvm.loop !10466

25:                                               ; preds = %22
  %26 = icmp eq i32 %3, 0, !dbg !10468
  br i1 %26, label %104, label %27, !dbg !10469

27:                                               ; preds = %25
  %28 = getelementptr inbounds i8, i8* %0, i32 200
  %29 = bitcast i8* %28 to i32*
  %30 = getelementptr inbounds i8, i8* %0, i32 197
  %31 = getelementptr inbounds i8, i8* %0, i32 176
  %32 = bitcast i8* %31 to %struct.SF_MTD_CMD**
  %33 = getelementptr inbounds i8, i8* %0, i32 198
  %34 = bitcast i8* %33 to i16*
  br label %35, !dbg !10469

35:                                               ; preds = %27, %96
  %36 = phi i8* [ %99, %96 ], [ %2, %27 ], !dbg !10470
  %37 = phi i32 [ %100, %96 ], [ %3, %27 ]
  %38 = phi i32 [ %88, %96 ], [ %8, %27 ], !dbg !10446
  call void @llvm.dbg.value(metadata i32 %38, metadata !10435, metadata !DIExpression()), !dbg !10446
  call void @llvm.dbg.value(metadata i32 %37, metadata !10432, metadata !DIExpression()), !dbg !10446
  call void @llvm.dbg.value(metadata i8* %36, metadata !10436, metadata !DIExpression()), !dbg !10446
  call void @llvm.dbg.value(metadata i8* %36, metadata !10437, metadata !DIExpression()), !dbg !10446
  %39 = load i32, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !10471
  %40 = shl i32 %39, 1, !dbg !10472
  %41 = add i32 %40, -1, !dbg !10473
  %42 = and i32 %41, %38, !dbg !10474
  %43 = sub i32 %40, %42, !dbg !10475
  %44 = icmp ugt i32 %37, %43, !dbg !10476
  %45 = select i1 %44, i32 %43, i32 %37, !dbg !10477
  call void @llvm.dbg.value(metadata i32 %45, metadata !10439, metadata !DIExpression()), !dbg !10446
  call void @llvm.dbg.value(metadata i32 %45, metadata !10440, metadata !DIExpression()), !dbg !10446
  store i32 %45, i32* %6, align 4, !dbg !10478
  call void @llvm.dbg.value(metadata i8* %36, metadata !10436, metadata !DIExpression()), !dbg !10446
  %46 = ptrtoint i8* %36 to i32, !dbg !10479
  %47 = and i32 %46, 134217728, !dbg !10480
  %48 = icmp eq i32 %47, 0, !dbg !10480
  br i1 %48, label %58, label %49, !dbg !10481

49:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 0, metadata !10442, metadata !DIExpression()), !dbg !10482
  call void @llvm.dbg.value(metadata i32 %45, metadata !10440, metadata !DIExpression()), !dbg !10446
  %50 = icmp eq i32 %45, 0, !dbg !10483
  br i1 %50, label %58, label %51, !dbg !10486

51:                                               ; preds = %49, %51
  %52 = phi i32 [ %56, %51 ], [ 0, %49 ]
  call void @llvm.dbg.value(metadata i32 %52, metadata !10442, metadata !DIExpression()), !dbg !10482
  call void @llvm.dbg.value(metadata i8* %36, metadata !10436, metadata !DIExpression()), !dbg !10446
  %53 = getelementptr inbounds i8, i8* %36, i32 %52, !dbg !10487
  %54 = load i8, i8* %53, align 1, !dbg !10487
  %55 = getelementptr inbounds [128 x i8], [128 x i8]* @tmp_data_buffer, i32 0, i32 %52, !dbg !10489
  store i8 %54, i8* %55, align 1, !dbg !10490
  %56 = add nuw i32 %52, 1, !dbg !10491
  call void @llvm.dbg.value(metadata i32 %56, metadata !10442, metadata !DIExpression()), !dbg !10482
  call void @llvm.dbg.value(metadata i32 %45, metadata !10440, metadata !DIExpression()), !dbg !10446
  %57 = icmp eq i32 %56, %45, !dbg !10483
  br i1 %57, label %58, label %51, !dbg !10486, !llvm.loop !10492

58:                                               ; preds = %51, %49, %35
  %59 = phi i8* [ %36, %35 ], [ getelementptr inbounds ([128 x i8], [128 x i8]* @tmp_data_buffer, i32 0, i32 0), %49 ], [ getelementptr inbounds ([128 x i8], [128 x i8]* @tmp_data_buffer, i32 0, i32 0), %51 ], !dbg !10494
  call void @llvm.dbg.value(metadata i8* %59, metadata !10437, metadata !DIExpression()), !dbg !10446
  %60 = load i32, i32* %29, align 4, !dbg !10495
  %61 = and i32 %60, 16, !dbg !10497
  %62 = icmp eq i32 %61, 0, !dbg !10497
  br i1 %62, label %63, label %64, !dbg !10498

63:                                               ; preds = %58
  call void @SF_DAL_Dev_WriteEnable(%struct.SF_MTD_Data* noundef nonnull %7) #20, !dbg !10499
  br label %64, !dbg !10501

64:                                               ; preds = %63, %58
  %65 = load i8, i8* %30, align 1, !dbg !10502
  %66 = icmp eq i8 %65, 4, !dbg !10504
  %67 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %32, align 4, !dbg !10505
  %68 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %67, i32 0, i32 0, !dbg !10505
  %69 = load i8, i8* %68, align 1, !dbg !10505
  %70 = zext i8 %69 to i32, !dbg !10505
  br i1 %66, label %71, label %75, !dbg !10506

71:                                               ; preds = %64
  call void @llvm.dbg.value(metadata i8** %5, metadata !10436, metadata !DIExpression(DW_OP_deref)), !dbg !10446
  call void @llvm.dbg.value(metadata i32* %6, metadata !10440, metadata !DIExpression(DW_OP_deref)), !dbg !10446
  %72 = call i32 @SFI_GPRAM_Write_C1A4(i32 noundef %70, i32 noundef %38, i8** noundef nonnull %5, i32* noundef nonnull %6) #21, !dbg !10507
  call void @llvm.dbg.value(metadata i32 %72, metadata !10441, metadata !DIExpression()), !dbg !10446
  %73 = load i8*, i8** %5, align 4, !dbg !10509
  call void @llvm.dbg.value(metadata i8* %73, metadata !10436, metadata !DIExpression()), !dbg !10446
  %74 = load i32, i32* %6, align 4, !dbg !10510
  call void @llvm.dbg.value(metadata i32 %74, metadata !10440, metadata !DIExpression()), !dbg !10446
  call void @SFI_GPRAM_Write(i32 noundef 8, i8* noundef %73, i32 noundef %74) #21, !dbg !10511
  br label %79, !dbg !10512

75:                                               ; preds = %64
  %76 = call i32 @SFI_GPRAM_Write_C1A3(i32 noundef %70, i32 noundef %38) #21, !dbg !10513
  call void @llvm.dbg.value(metadata i32 %76, metadata !10441, metadata !DIExpression()), !dbg !10446
  %77 = load i8*, i8** %5, align 4, !dbg !10515
  call void @llvm.dbg.value(metadata i8* %77, metadata !10436, metadata !DIExpression()), !dbg !10446
  %78 = load i32, i32* %6, align 4, !dbg !10516
  call void @llvm.dbg.value(metadata i32 %78, metadata !10440, metadata !DIExpression()), !dbg !10446
  call void @SFI_GPRAM_Write(i32 noundef 4, i8* noundef %77, i32 noundef %78) #21, !dbg !10517
  br label %79

79:                                               ; preds = %75, %71
  %80 = phi i32 [ %72, %71 ], [ %76, %75 ], !dbg !10505
  call void @llvm.dbg.value(metadata i32 %80, metadata !10441, metadata !DIExpression()), !dbg !10446
  %81 = call i32 @SaveAndSetIRQMask() #20, !dbg !10518
  call void @llvm.dbg.value(metadata i32 %81, metadata !10434, metadata !DIExpression()), !dbg !10446
  store volatile i32 %80, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !10519
  %82 = load i8, i8* %30, align 1, !dbg !10520
  %83 = zext i8 %82 to i32, !dbg !10521
  %84 = add i32 %45, 1, !dbg !10522
  %85 = add i32 %84, %83, !dbg !10523
  store volatile i32 %85, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !10524
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !10525
  call void @SF_DAL_FLAG_BUSY_SET() #20, !dbg !10526
  %86 = load i16, i16* %34, align 2, !dbg !10527
  call void @SFI_MacEnable(i16 noundef zeroext %86) #21, !dbg !10528
  %87 = load i16, i16* %34, align 2, !dbg !10529
  call void @SFI_MacWaitReady(i16 noundef zeroext %87) #21, !dbg !10530
  call void @RestoreIRQMask(i32 noundef %81) #20, !dbg !10531
  %88 = add i32 %45, %38
  %89 = add i32 %88, -1
  %90 = getelementptr inbounds i8, i8* %59, i32 -1
  %91 = getelementptr inbounds i8, i8* %90, i32 %45
  br label %92, !dbg !10532

92:                                               ; preds = %92, %79
  %93 = load i8, i8* %91, align 1, !dbg !10533
  %94 = call i32 @SF_DAL_CheckReadyAndResume(i8* noundef %0, i32 noundef %89, i8 noundef zeroext %93) #20, !dbg !10535
  call void @llvm.dbg.value(metadata i32 %94, metadata !10438, metadata !DIExpression()), !dbg !10446
  %95 = icmp eq i32 %94, 0, !dbg !10536
  br i1 %95, label %92, label %96, !dbg !10537, !llvm.loop !10538

96:                                               ; preds = %92
  %97 = load i32, i32* %6, align 4, !dbg !10540
  call void @llvm.dbg.value(metadata i32 %97, metadata !10440, metadata !DIExpression()), !dbg !10446
  %98 = load i8*, i8** %5, align 4, !dbg !10541
  call void @llvm.dbg.value(metadata i8* %98, metadata !10436, metadata !DIExpression()), !dbg !10446
  %99 = getelementptr inbounds i8, i8* %98, i32 %97, !dbg !10541
  call void @llvm.dbg.value(metadata i8* %99, metadata !10436, metadata !DIExpression()), !dbg !10446
  store i8* %99, i8** %5, align 4, !dbg !10541
  %100 = sub i32 %37, %45, !dbg !10542
  call void @llvm.dbg.value(metadata i32 %100, metadata !10432, metadata !DIExpression()), !dbg !10446
  call void @llvm.dbg.value(metadata i32 undef, metadata !10435, metadata !DIExpression()), !dbg !10446
  %101 = icmp eq i32 %94, 1, !dbg !10543
  %102 = icmp ne i32 %100, 0
  %103 = select i1 %101, i1 %102, i1 false, !dbg !10545
  br i1 %103, label %35, label %104, !dbg !10545, !llvm.loop !10546

104:                                              ; preds = %96, %25
  %105 = phi i32 [ %23, %25 ], [ %94, %96 ], !dbg !10446
  call void @llvm.dbg.value(metadata i32 %105, metadata !10438, metadata !DIExpression()), !dbg !10446
  store i8 0, i8* %21, align 4, !dbg !10548
  call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #20, !dbg !10549
  %106 = icmp eq i32 %105, 1, !dbg !10550
  %107 = select i1 %106, i32 0, i32 %105, !dbg !10446
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #22, !dbg !10552
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #22, !dbg !10552
  ret i32 %107, !dbg !10552
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SF_DAL_NonBlockEraseBlock(i8* nocapture readnone %0, i32 %1) #8 section ".ram_code" !dbg !10553 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !10555, metadata !DIExpression()), !dbg !10557
  call void @llvm.dbg.value(metadata i32 undef, metadata !10556, metadata !DIExpression()), !dbg !10557
  ret i32 -12, !dbg !10558
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_CheckDeviceReady(i8* nocapture noundef readonly %0, i32 %1) #0 section ".ram_code" !dbg !10559 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10561, metadata !DIExpression()), !dbg !10571
  call void @llvm.dbg.value(metadata i32 undef, metadata !10562, metadata !DIExpression()), !dbg !10571
  call void @llvm.dbg.value(metadata i32 0, metadata !10564, metadata !DIExpression()), !dbg !10571
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !10572
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !10565, metadata !DIExpression()), !dbg !10571
  %4 = bitcast i8* %0 to i32*, !dbg !10573
  %5 = load i32, i32* %4, align 4, !dbg !10573
  %6 = xor i32 %5, -1, !dbg !10573
  %7 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !10573
  %8 = bitcast i8* %7 to %struct.powerkey_state_t**, !dbg !10573
  %9 = load %struct.powerkey_state_t*, %struct.powerkey_state_t** %8, align 4, !dbg !10573
  %10 = ptrtoint %struct.powerkey_state_t* %9 to i32, !dbg !10573
  %11 = icmp eq i32 %6, %10, !dbg !10573
  br i1 %11, label %13, label %12, !dbg !10576

12:                                               ; preds = %2
  tail call void @Flash_ReturnReady() #20, !dbg !10577
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.136, i32 0, i32 0), i32 noundef 3131, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.SF_DAL_CheckDeviceReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.137, i32 0, i32 0)) #23, !dbg !10577
  unreachable, !dbg !10577

13:                                               ; preds = %2
  %14 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !10579
  %15 = bitcast i8* %14 to %struct.SF_MTD_CMD**, !dbg !10579
  %16 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %15, align 4, !dbg !10579
  %17 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %16, i32 0, i32 16, !dbg !10580
  %18 = load i8, i8* %17, align 1, !dbg !10580
  %19 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %3, i8 noundef zeroext %18) #20, !dbg !10581
  call void @llvm.dbg.value(metadata i32 %19, metadata !10566, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10571
  %20 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %15, align 4, !dbg !10582
  %21 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %20, i32 0, i32 15, !dbg !10583
  %22 = load i8, i8* %21, align 1, !dbg !10583
  %23 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %3, i8 noundef zeroext %22) #20, !dbg !10584
  call void @llvm.dbg.value(metadata i32 %23, metadata !10567, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10571
  %24 = tail call i32 @SaveAndSetIRQMask() #20, !dbg !10585
  call void @llvm.dbg.value(metadata i32 %24, metadata !10564, metadata !DIExpression()), !dbg !10571
  %25 = getelementptr inbounds i8, i8* %0, i32 172, !dbg !10586
  %26 = bitcast i8* %25 to i8**, !dbg !10586
  %27 = load i8*, i8** %26, align 4, !dbg !10586
  %28 = load i8, i8* %27, align 1, !dbg !10587
  %29 = zext i8 %28 to i32, !dbg !10587
  %30 = and i32 %19, %29, !dbg !10588
  %31 = icmp eq i32 %30, 0, !dbg !10589
  br i1 %31, label %32, label %62, !dbg !10590

32:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32 %23, metadata !10567, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10571
  %33 = getelementptr inbounds i8, i8* %27, i32 2, !dbg !10591
  %34 = load i8, i8* %33, align 1, !dbg !10591
  %35 = getelementptr inbounds i8, i8* %27, i32 3, !dbg !10592
  %36 = load i8, i8* %35, align 1, !dbg !10592
  %37 = or i8 %36, %34, !dbg !10593
  call void @llvm.dbg.value(metadata i8 %37, metadata !10568, metadata !DIExpression()), !dbg !10594
  %38 = zext i8 %37 to i32, !dbg !10595
  %39 = and i32 %23, %38, !dbg !10597
  %40 = icmp eq i32 %39, 0, !dbg !10598
  br i1 %40, label %41, label %46, !dbg !10599

41:                                               ; preds = %32
  %42 = icmp ne i8 %37, 0, !dbg !10600
  %43 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1
  %44 = icmp eq i8 %43, 0
  %45 = select i1 %42, i1 true, i1 %44, !dbg !10601
  br i1 %45, label %51, label %46, !dbg !10601

46:                                               ; preds = %41, %32
  %47 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !10602, !range !3343
  %48 = icmp eq i8 %47, 0, !dbg !10602
  br i1 %48, label %49, label %50, !dbg !10606

49:                                               ; preds = %46
  tail call void @Flash_ReturnReady() #20, !dbg !10607
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.136, i32 0, i32 0), i32 noundef 3147, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.SF_DAL_CheckDeviceReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.137, i32 0, i32 0)) #23, !dbg !10607
  unreachable, !dbg !10607

50:                                               ; preds = %46
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef nonnull %3) #20, !dbg !10609
  store i32 -1, i32* @gNOR_ReturnReadyEnd, align 4, !dbg !10610
  call void @llvm.dbg.value(metadata i32 -121, metadata !10563, metadata !DIExpression()), !dbg !10571
  br label %62, !dbg !10611

51:                                               ; preds = %41
  %52 = getelementptr inbounds i8, i8* %0, i32 200, !dbg !10612
  %53 = bitcast i8* %52 to i32*, !dbg !10612
  %54 = load i32, i32* %53, align 4, !dbg !10612
  %55 = and i32 %54, 2, !dbg !10615
  %56 = icmp eq i32 %55, 0, !dbg !10615
  br i1 %56, label %63, label %57, !dbg !10616

57:                                               ; preds = %51
  %58 = getelementptr inbounds i8, i8* %0, i32 198, !dbg !10617
  %59 = bitcast i8* %58 to i16*, !dbg !10617
  %60 = load i16, i16* %59, align 2, !dbg !10617
  tail call void @SFI_Dev_Command(i16 noundef zeroext %60, i32 noundef 122) #21, !dbg !10619
  %61 = load i16, i16* %59, align 2, !dbg !10620
  tail call void @SFI_Dev_Command(i16 noundef zeroext %61, i32 noundef 122) #21, !dbg !10621
  br label %63, !dbg !10622

62:                                               ; preds = %50, %13
  call void @llvm.dbg.value(metadata i32 0, metadata !10563, metadata !DIExpression()), !dbg !10571
  tail call void @RestoreIRQMask(i32 noundef %24) #20, !dbg !10623
  br label %65, !dbg !10624

63:                                               ; preds = %57, %51
  tail call void @SF_DAL_FLAG_BUSY_CLR() #20, !dbg !10625
  tail call void @SF_DAL_FLAG_SUS_CLR() #20, !dbg !10626
  call void @llvm.dbg.value(metadata i32 0, metadata !10563, metadata !DIExpression()), !dbg !10571
  tail call void @RestoreIRQMask(i32 noundef %24) #20, !dbg !10623
  %64 = tail call i32 @SF_DAL_FailCheck(i8* noundef nonnull %0) #20, !dbg !10627
  call void @llvm.dbg.value(metadata i32 %64, metadata !10563, metadata !DIExpression()), !dbg !10571
  br label %65, !dbg !10630

65:                                               ; preds = %62, %63
  %66 = phi i32 [ %64, %63 ], [ -121, %62 ], !dbg !10571
  call void @llvm.dbg.value(metadata i32 %66, metadata !10563, metadata !DIExpression()), !dbg !10571
  ret i32 %66, !dbg !10631
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_SuspendErase(i8* nocapture noundef readonly %0, i32 %1) #0 section ".ram_code" !dbg !10632 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10634, metadata !DIExpression()), !dbg !10639
  call void @llvm.dbg.value(metadata i32 undef, metadata !10635, metadata !DIExpression()), !dbg !10639
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !10640
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !10636, metadata !DIExpression()), !dbg !10639
  %4 = tail call i32 @SaveAndSetIRQMask() #20, !dbg !10641
  call void @llvm.dbg.value(metadata i32 %4, metadata !10638, metadata !DIExpression()), !dbg !10639
  tail call void @SF_DAL_Dev_Suspend(%struct.SF_MTD_Data* noundef %3) #20, !dbg !10642
  %5 = getelementptr inbounds i8, i8* %0, i32 176
  %6 = bitcast i8* %5 to %struct.SF_MTD_CMD**
  %7 = getelementptr inbounds i8, i8* %0, i32 172
  %8 = bitcast i8* %7 to i8**
  br label %9, !dbg !10643

9:                                                ; preds = %9, %2
  %10 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %6, align 4, !dbg !10644
  %11 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %10, i32 0, i32 16, !dbg !10646
  %12 = load i8, i8* %11, align 1, !dbg !10646
  %13 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef %3, i8 noundef zeroext %12) #20, !dbg !10647
  call void @llvm.dbg.value(metadata i32 %13, metadata !10637, metadata !DIExpression()), !dbg !10639
  %14 = load i8*, i8** %8, align 4, !dbg !10648
  %15 = load i8, i8* %14, align 1, !dbg !10650
  %16 = zext i8 %15 to i32, !dbg !10650
  %17 = and i32 %13, %16, !dbg !10651
  %18 = icmp eq i32 %17, 0, !dbg !10652
  br i1 %18, label %19, label %9, !dbg !10653, !llvm.loop !10654

19:                                               ; preds = %9
  tail call void @SF_DAL_FLAG_SUS_SET() #20, !dbg !10656
  tail call void @RestoreIRQMask(i32 noundef %4) #20, !dbg !10657
  ret i32 0, !dbg !10658
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_ResumeErase(i8* nocapture noundef readonly %0, i32 %1) #0 section ".ram_code" !dbg !10659 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10661, metadata !DIExpression()), !dbg !10664
  call void @llvm.dbg.value(metadata i32 undef, metadata !10662, metadata !DIExpression()), !dbg !10664
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !10665
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !10663, metadata !DIExpression()), !dbg !10664
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #20, !dbg !10666
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef %3) #20, !dbg !10667
  tail call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #20, !dbg !10668
  ret i32 0, !dbg !10669
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SF_DAL_LockEraseBlkAddr(i8* nocapture readnone %0, i8* nocapture readnone %1, i32 %2) #8 section ".ram_code" !dbg !10670 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !10672, metadata !DIExpression()), !dbg !10675
  call void @llvm.dbg.value(metadata i8* undef, metadata !10673, metadata !DIExpression()), !dbg !10675
  call void @llvm.dbg.value(metadata i32 undef, metadata !10674, metadata !DIExpression()), !dbg !10675
  ret i32 0, !dbg !10676
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_IOCtrl(i8* noundef %0, i32 noundef %1, i8* nocapture readnone %2) #0 !dbg !10677 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10679, metadata !DIExpression()), !dbg !10683
  call void @llvm.dbg.value(metadata i32 %1, metadata !10680, metadata !DIExpression()), !dbg !10683
  call void @llvm.dbg.value(metadata i8* undef, metadata !10681, metadata !DIExpression()), !dbg !10683
  call void @llvm.dbg.value(metadata i8* %0, metadata !10682, metadata !DIExpression()), !dbg !10683
  switch i32 %1, label %20 [
    i32 0, label %4
    i32 1, label %9
  ], !dbg !10684

4:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %0, metadata !10682, metadata !DIExpression()), !dbg !10683
  %5 = getelementptr inbounds i8, i8* %0, i32 212, !dbg !10685
  %6 = bitcast i8* %5 to i32 (i8*)**, !dbg !10685
  %7 = load i32 (i8*)*, i32 (i8*)** %6, align 4, !dbg !10685
  %8 = tail call i32 %7(i8* noundef %0) #21, !dbg !10688
  br label %21, !dbg !10689

9:                                                ; preds = %3
  %10 = getelementptr inbounds i8, i8* %0, i32 193, !dbg !10690
  %11 = load i8, i8* %10, align 1, !dbg !10694
  %12 = icmp eq i8 %11, -62, !dbg !10695
  br i1 %12, label %13, label %21, !dbg !10696

13:                                               ; preds = %9
  %14 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !10697
  %15 = bitcast i8* %14 to %struct.powerkey_state_t**, !dbg !10697
  %16 = load %struct.powerkey_state_t*, %struct.powerkey_state_t** %15, align 4, !dbg !10697
  %17 = getelementptr inbounds %struct.powerkey_state_t, %struct.powerkey_state_t* %16, i32 0, i32 0, !dbg !10698
  %18 = load i32, i32* %17, align 4, !dbg !10698
  %19 = icmp eq i32 %18, 262144, !dbg !10699
  br i1 %19, label %22, label %21, !dbg !10700

20:                                               ; preds = %3
  tail call void @Flash_ReturnReady() #20, !dbg !10701
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.136, i32 0, i32 0), i32 noundef 2361, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.SF_DAL_IOCtrl, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.137, i32 0, i32 0)) #23, !dbg !10701
  unreachable, !dbg !10701

21:                                               ; preds = %13, %9, %4
  br label %22, !dbg !10706

22:                                               ; preds = %13, %21
  %23 = phi i32 [ 0, %21 ], [ 194, %13 ], !dbg !10683
  ret i32 %23, !dbg !10707
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_FailCheck(i8* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !10708 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10710, metadata !DIExpression()), !dbg !10713
  call void @llvm.dbg.value(metadata i8* %0, metadata !10711, metadata !DIExpression()), !dbg !10713
  %2 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !10714
  %3 = bitcast i8* %2 to %struct.SF_MTD_CMD**, !dbg !10714
  %4 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %3, align 4, !dbg !10714
  %5 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %4, i32 0, i32 17, !dbg !10716
  %6 = load i8, i8* %5, align 1, !dbg !10716
  %7 = icmp eq i8 %6, 0, !dbg !10717
  br i1 %7, label %19, label %8, !dbg !10718

8:                                                ; preds = %1
  %9 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !10719
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %9, metadata !10711, metadata !DIExpression()), !dbg !10713
  %10 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef %9, i8 noundef zeroext %6) #20, !dbg !10720
  call void @llvm.dbg.value(metadata i32 %10, metadata !10712, metadata !DIExpression()), !dbg !10713
  %11 = getelementptr inbounds i8, i8* %0, i32 172, !dbg !10722
  %12 = bitcast i8* %11 to i8**, !dbg !10722
  %13 = load i8*, i8** %12, align 4, !dbg !10722
  %14 = getelementptr inbounds i8, i8* %13, i32 7, !dbg !10724
  %15 = load i8, i8* %14, align 1, !dbg !10724
  %16 = zext i8 %15 to i32, !dbg !10724
  %17 = and i32 %10, %16, !dbg !10725
  %18 = icmp eq i32 %17, 0, !dbg !10725
  br i1 %18, label %19, label %20, !dbg !10726

19:                                               ; preds = %8, %1
  br label %20, !dbg !10727

20:                                               ; preds = %8, %19
  %21 = phi i32 [ 0, %19 ], [ -1, %8 ], !dbg !10713
  ret i32 %21, !dbg !10728
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_CheckReadyAndResume(i8* nocapture noundef readonly %0, i32 noundef %1, i8 noundef zeroext %2) local_unnamed_addr #0 section ".ram_code" !dbg !10729 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10733, metadata !DIExpression()), !dbg !10741
  call void @llvm.dbg.value(metadata i32 %1, metadata !10734, metadata !DIExpression()), !dbg !10741
  call void @llvm.dbg.value(metadata i8 %2, metadata !10735, metadata !DIExpression()), !dbg !10741
  %4 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !10742
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %4, metadata !10737, metadata !DIExpression()), !dbg !10741
  call void @llvm.dbg.value(metadata i32 0, metadata !10738, metadata !DIExpression()), !dbg !10741
  %5 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !10743
  %6 = bitcast i8* %5 to %struct.SF_MTD_CMD**, !dbg !10743
  %7 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %6, align 4, !dbg !10743
  %8 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %7, i32 0, i32 16, !dbg !10744
  %9 = load i8, i8* %8, align 1, !dbg !10744
  %10 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef %4, i8 noundef zeroext %9) #20, !dbg !10745
  call void @llvm.dbg.value(metadata i32 %10, metadata !10740, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10741
  %11 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !10746, !range !3343
  %12 = icmp eq i8 %11, 0, !dbg !10746
  br i1 %12, label %18, label %13, !dbg !10748

13:                                               ; preds = %3
  %14 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !10749, !range !3343
  %15 = icmp eq i8 %14, 0, !dbg !10749
  br i1 %15, label %16, label %17, !dbg !10753

16:                                               ; preds = %13
  tail call void @Flash_ReturnReady() #20, !dbg !10754
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.136, i32 0, i32 0), i32 noundef 3058, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.SF_DAL_CheckReadyAndResume, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.137, i32 0, i32 0)) #23, !dbg !10754
  unreachable, !dbg !10754

17:                                               ; preds = %13
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef nonnull %4) #20, !dbg !10756
  store i32 -1, i32* @gNOR_ReturnReadyEnd, align 4, !dbg !10757
  br label %34, !dbg !10758

18:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 %10, metadata !10740, metadata !DIExpression()), !dbg !10741
  %19 = getelementptr inbounds i8, i8* %0, i32 172, !dbg !10759
  %20 = bitcast i8* %19 to i8**, !dbg !10759
  %21 = load i8*, i8** %20, align 4, !dbg !10759
  %22 = load i8, i8* %21, align 1, !dbg !10761
  %23 = zext i8 %22 to i32, !dbg !10761
  %24 = and i32 %10, %23, !dbg !10762
  %25 = icmp eq i32 %24, 0, !dbg !10763
  br i1 %25, label %26, label %34, !dbg !10764

26:                                               ; preds = %18
  %27 = tail call i32 @SaveAndSetIRQMask() #20, !dbg !10765
  call void @llvm.dbg.value(metadata i32 %27, metadata !10736, metadata !DIExpression()), !dbg !10741
  tail call void @SF_DAL_FLAG_BUSY_CLR() #20, !dbg !10767
  %28 = inttoptr i32 %1 to i8*, !dbg !10768
  %29 = load volatile i8, i8* %28, align 1, !dbg !10769
  call void @llvm.dbg.value(metadata i8 %29, metadata !10739, metadata !DIExpression()), !dbg !10741
  %30 = icmp eq i8 %29, %2, !dbg !10770
  call void @llvm.dbg.value(metadata i32 undef, metadata !10738, metadata !DIExpression()), !dbg !10741
  tail call void @RestoreIRQMask(i32 noundef %27) #20, !dbg !10772
  br i1 %30, label %31, label %34

31:                                               ; preds = %26
  call void @llvm.dbg.value(metadata i32 1, metadata !10738, metadata !DIExpression()), !dbg !10741
  %32 = tail call i32 @SF_DAL_FailCheck(i8* noundef nonnull %0) #20, !dbg !10773
  %33 = icmp eq i32 %32, 0, !dbg !10776
  br i1 %33, label %34, label %36, !dbg !10777

34:                                               ; preds = %18, %26, %17, %31
  %35 = phi i32 [ 1, %31 ], [ 0, %18 ], [ -1, %26 ], [ 0, %17 ]
  br label %36, !dbg !10778

36:                                               ; preds = %31, %34
  %37 = phi i32 [ %35, %34 ], [ -1, %31 ], !dbg !10741
  ret i32 %37, !dbg !10779
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_EraseBlock(%struct.SF_MTD_Data* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #0 section ".ram_code" !dbg !10780 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !10784, metadata !DIExpression()), !dbg !10787
  call void @llvm.dbg.value(metadata i32 %1, metadata !10785, metadata !DIExpression()), !dbg !10787
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 24, !dbg !10788
  %4 = load i32, i32* %3, align 4, !dbg !10788
  %5 = and i32 %4, 16, !dbg !10790
  %6 = icmp eq i32 %5, 0, !dbg !10790
  br i1 %6, label %7, label %8, !dbg !10791

7:                                                ; preds = %2
  tail call void @SF_DAL_Dev_WriteEnable(%struct.SF_MTD_Data* noundef nonnull %0) #20, !dbg !10792
  br label %8, !dbg !10794

8:                                                ; preds = %7, %2
  %9 = tail call i32 @SaveAndSetIRQMask() #20, !dbg !10795
  call void @llvm.dbg.value(metadata i32 %9, metadata !10786, metadata !DIExpression()), !dbg !10787
  tail call void @SF_DAL_FLAG_BUSY_SET() #20, !dbg !10796
  %10 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !10797
  %11 = load i16, i16* %10, align 2, !dbg !10797
  %12 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !10798
  %13 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %12, align 4, !dbg !10798
  %14 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %13, i32 0, i32 5, !dbg !10799
  %15 = load i8, i8* %14, align 1, !dbg !10799
  %16 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 22, !dbg !10800
  %17 = load i8, i8* %16, align 1, !dbg !10800
  %18 = zext i8 %17 to i32, !dbg !10801
  tail call void @SFI_Dev_CommandAddress(i16 noundef zeroext %11, i8 noundef zeroext %15, i32 noundef %1, i32 noundef %18) #21, !dbg !10802
  tail call void @RestoreIRQMask(i32 noundef %9) #20, !dbg !10803
  ret void, !dbg !10804
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_Init_Vendor(%struct.NOR_MTD_Driver* nocapture readnone %0, %struct.SF_MTD_Data* nocapture noundef %1) local_unnamed_addr #0 !dbg !10805 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* undef, metadata !10807, metadata !DIExpression()), !dbg !10810
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !10808, metadata !DIExpression()), !dbg !10810
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 20, i32 0, !dbg !10811
  %4 = load i8, i8* %3, align 1, !dbg !10811
  switch i8 %4, label %17 [
    i8 -62, label %5
    i8 -17, label %10
    i8 -8, label %15
  ], !dbg !10812

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 24, !dbg !10813
  %7 = load i32, i32* %6, align 4, !dbg !10815
  %8 = or i32 %7, 4, !dbg !10815
  store i32 %8, i32* %6, align 4, !dbg !10815
  %9 = tail call i32 @SF_DAL_Init_MXIC(%struct.NOR_MTD_Driver* undef, %struct.SF_MTD_Data* noundef nonnull %1) #20, !dbg !10816
  call void @llvm.dbg.value(metadata i32 0, metadata !10809, metadata !DIExpression()), !dbg !10810
  br label %18, !dbg !10817

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 24, !dbg !10818
  %12 = load i32, i32* %11, align 4, !dbg !10819
  %13 = or i32 %12, 2, !dbg !10819
  store i32 %13, i32* %11, align 4, !dbg !10819
  %14 = tail call i32 @SF_DAL_Init_WINBOND(%struct.NOR_MTD_Driver* undef, %struct.SF_MTD_Data* noundef nonnull %1) #20, !dbg !10820
  call void @llvm.dbg.value(metadata i32 0, metadata !10809, metadata !DIExpression()), !dbg !10810
  call void @llvm.dbg.value(metadata i32 0, metadata !10809, metadata !DIExpression()), !dbg !10810
  br label %18, !dbg !10821

15:                                               ; preds = %2
  %16 = tail call i32 @SF_DAL_Init_WINBOND(%struct.NOR_MTD_Driver* undef, %struct.SF_MTD_Data* noundef nonnull %1) #20, !dbg !10822
  call void @llvm.dbg.value(metadata i32 0, metadata !10809, metadata !DIExpression()), !dbg !10810
  br label %18, !dbg !10823

17:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 -120, metadata !10809, metadata !DIExpression()), !dbg !10810
  tail call void @Flash_ReturnReady() #20, !dbg !10824
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.136, i32 0, i32 0), i32 noundef 2079, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.SF_DAL_Init_Vendor, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.137, i32 0, i32 0)) #23, !dbg !10824
  unreachable, !dbg !10824

18:                                               ; preds = %15, %10, %5
  call void @llvm.dbg.value(metadata i32 0, metadata !10809, metadata !DIExpression()), !dbg !10810
  ret i32 0, !dbg !10828
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_Init_Driver(%struct.NOR_MTD_Driver* noundef writeonly %0, %struct.SF_MTD_Data* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !10829 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* %0, metadata !10833, metadata !DIExpression()), !dbg !10838
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !10834, metadata !DIExpression()), !dbg !10838
  call void @llvm.dbg.value(metadata i32 %2, metadata !10835, metadata !DIExpression()), !dbg !10838
  call void @llvm.dbg.value(metadata i32 %3, metadata !10836, metadata !DIExpression()), !dbg !10838
  %5 = icmp eq %struct.NOR_MTD_Driver* %0, null, !dbg !10839
  %6 = icmp eq %struct.SF_MTD_Data* %1, null
  %7 = or i1 %5, %6, !dbg !10841
  br i1 %7, label %33, label %8, !dbg !10841

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !10842
  %10 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %9, align 4, !dbg !10842
  %11 = icmp eq %struct.SF_MTD_CMD* %10, null, !dbg !10844
  br i1 %11, label %33, label %12, !dbg !10845

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12, !dbg !10846
  %14 = load i8*, i8** %13, align 4, !dbg !10846
  %15 = icmp eq i8* %14, null, !dbg !10847
  br i1 %15, label %33, label %16, !dbg !10848

16:                                               ; preds = %12
  %17 = inttoptr i32 %2 to i8*, !dbg !10849
  %18 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 1, !dbg !10850
  store i8* %17, i8** %18, align 4, !dbg !10851
  %19 = trunc i32 %3 to i16, !dbg !10852
  %20 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 16, !dbg !10853
  store i16 %19, i16* %20, align 2, !dbg !10854
  %21 = tail call i32 @SF_DAL_Init_Common(%struct.NOR_MTD_Driver* noundef nonnull %0, %struct.SF_MTD_Data* noundef nonnull %1) #20, !dbg !10855
  %22 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %9, align 4, !dbg !10856
  %23 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %22, i32 0, i32 10, !dbg !10857
  store i8 -81, i8* %23, align 1, !dbg !10858
  %24 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 20, i32 0, !dbg !10859
  tail call void @SF_DAL_Dev_ReadID(%struct.SF_MTD_Data* noundef nonnull %1, i8* noundef nonnull %24) #20, !dbg !10860
  %25 = load i8, i8* %24, align 1, !dbg !10861
  switch i8 %25, label %26 [
    i8 -1, label %28
    i8 0, label %28
  ], !dbg !10863

26:                                               ; preds = %16
  %27 = tail call zeroext i1 @CMEM_CheckValidDeviceID(i8* noundef nonnull %24) #21, !dbg !10864
  br i1 %27, label %31, label %28, !dbg !10865

28:                                               ; preds = %16, %16, %26
  %29 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %9, align 4, !dbg !10866
  %30 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %29, i32 0, i32 10, !dbg !10868
  store i8 -97, i8* %30, align 1, !dbg !10869
  tail call void @SF_DAL_Dev_ReadID(%struct.SF_MTD_Data* noundef nonnull %1, i8* noundef nonnull %24) #20, !dbg !10870
  br label %31, !dbg !10871

31:                                               ; preds = %28, %26
  %32 = tail call i32 @SF_DAL_Init_Vendor(%struct.NOR_MTD_Driver* undef, %struct.SF_MTD_Data* noundef nonnull %1) #20, !dbg !10872
  call void @llvm.dbg.value(metadata i32 0, metadata !10837, metadata !DIExpression()), !dbg !10838
  br label %33, !dbg !10873

33:                                               ; preds = %8, %12, %4, %31
  %34 = phi i32 [ 0, %31 ], [ -120, %4 ], [ -120, %12 ], [ -120, %8 ], !dbg !10838
  ret i32 %34, !dbg !10874
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_ReadID(%struct.SF_MTD_Data* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #0 section ".ram_code" !dbg !10875 {
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !10879, metadata !DIExpression()), !dbg !10882
  call void @llvm.dbg.value(metadata i8* %1, metadata !10880, metadata !DIExpression()), !dbg !10882
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #22, !dbg !10883
  %4 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !10884
  %5 = and i32 %4, 1, !dbg !10884
  %6 = icmp eq i32 %5, 0, !dbg !10886
  %7 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !10887
  %8 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %7, align 4, !dbg !10887
  %9 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %8, i32 0, i32 9, !dbg !10888
  %10 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %8, i32 0, i32 10, !dbg !10888
  %11 = select i1 %6, i8* %9, i8* %10, !dbg !10888
  %12 = load i8, i8* %11, align 1, !dbg !10887
  store i8 %12, i8* %3, align 1, !dbg !10887
  %13 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !10889
  %14 = load i16, i16* %13, align 2, !dbg !10889
  call void @llvm.dbg.value(metadata i8* %3, metadata !10881, metadata !DIExpression(DW_OP_deref)), !dbg !10882
  call void @SF_DAL_Dev_Command_Ext(i16 noundef zeroext %14, i8* noundef nonnull %3, i8* noundef %1, i16 noundef zeroext 1, i16 noundef zeroext 3) #20, !dbg !10890
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #22, !dbg !10891
  ret void, !dbg !10891
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3, i16 noundef zeroext %4) local_unnamed_addr #0 section ".ram_code" !dbg !10892 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !10896, metadata !DIExpression()), !dbg !10902
  call void @llvm.dbg.value(metadata i8* %1, metadata !10897, metadata !DIExpression()), !dbg !10902
  call void @llvm.dbg.value(metadata i8* %2, metadata !10898, metadata !DIExpression()), !dbg !10902
  call void @llvm.dbg.value(metadata i16 %3, metadata !10899, metadata !DIExpression()), !dbg !10902
  call void @llvm.dbg.value(metadata i16 %4, metadata !10900, metadata !DIExpression()), !dbg !10902
  %6 = tail call i32 @SaveAndSetIRQMask() #20, !dbg !10903
  call void @llvm.dbg.value(metadata i32 %6, metadata !10901, metadata !DIExpression()), !dbg !10902
  tail call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3, i16 noundef zeroext %4) #21, !dbg !10904
  tail call void @RestoreIRQMask(i32 noundef %6) #20, !dbg !10905
  ret void, !dbg !10906
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @CMEM_CheckValidDeviceID(i8* nocapture noundef readonly %0) local_unnamed_addr #11 !dbg !10907 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10909, metadata !DIExpression()), !dbg !10915
  call void @llvm.dbg.value(metadata %struct.CMEMEntryID* null, metadata !10912, metadata !DIExpression()), !dbg !10915
  call void @llvm.dbg.value(metadata i32 0, metadata !10910, metadata !DIExpression()), !dbg !10915
  br label %6, !dbg !10916

2:                                                ; preds = %23
  %3 = add nuw nsw i32 %8, 1, !dbg !10918
  call void @llvm.dbg.value(metadata i32 %3, metadata !10910, metadata !DIExpression()), !dbg !10915
  call void @llvm.dbg.value(metadata i32 %8, metadata !10910, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !10915
  %4 = icmp ult i32 %8, 4, !dbg !10920
  %5 = icmp eq i32 %3, 5, !dbg !10920
  br i1 %5, label %26, label %6, !dbg !10916, !llvm.loop !10921

6:                                                ; preds = %1, %2
  %7 = phi i1 [ true, %1 ], [ %4, %2 ]
  %8 = phi i32 [ 0, %1 ], [ %3, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !10910, metadata !DIExpression()), !dbg !10915
  %9 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  call void @llvm.dbg.value(metadata i32 0, metadata !10911, metadata !DIExpression()), !dbg !10915
  %12 = icmp eq i8 %10, 0, !dbg !10923
  br i1 %12, label %23, label %13, !dbg !10927

13:                                               ; preds = %6, %20
  %14 = phi i32 [ %21, %20 ], [ 0, %6 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !10911, metadata !DIExpression()), !dbg !10915
  %15 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 2, i32 %14, !dbg !10928
  %16 = load i8, i8* %15, align 1, !dbg !10928
  %17 = getelementptr inbounds i8, i8* %0, i32 %14, !dbg !10931
  %18 = load i8, i8* %17, align 1, !dbg !10931
  %19 = icmp eq i8 %16, %18, !dbg !10932
  br i1 %19, label %20, label %23, !dbg !10933

20:                                               ; preds = %13
  %21 = add nuw nsw i32 %14, 1, !dbg !10934
  call void @llvm.dbg.value(metadata i32 %21, metadata !10911, metadata !DIExpression()), !dbg !10915
  %22 = icmp eq i32 %21, %11, !dbg !10923
  br i1 %22, label %26, label %13, !dbg !10927, !llvm.loop !10935

23:                                               ; preds = %13, %6
  %24 = phi i32 [ 0, %6 ], [ %14, %13 ], !dbg !10937
  %25 = icmp eq i32 %24, %11, !dbg !10938
  call void @llvm.dbg.value(metadata i32 %8, metadata !10910, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !10915
  br i1 %25, label %26, label %2, !dbg !10940

26:                                               ; preds = %2, %23, %20
  %27 = phi i1 [ %7, %20 ], [ %7, %23 ], [ %4, %2 ], !dbg !10920
  ret i1 %27, !dbg !10941
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Index() local_unnamed_addr #0 !dbg !10942 {
  %1 = alloca %union.CMEMFlashID, align 2
  %2 = bitcast %union.CMEMFlashID* %1 to i8*, !dbg !10954
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #22, !dbg !10954
  call void @llvm.dbg.declare(metadata %union.CMEMFlashID* %1, metadata !10946, metadata !DIExpression()), !dbg !10955
  call void @llvm.dbg.value(metadata %struct.CMEMEntryID* null, metadata !10953, metadata !DIExpression()), !dbg !10956
  %3 = load i16, i16* @cmem_index, align 2, !dbg !10957
  %4 = icmp sgt i16 %3, -1, !dbg !10959
  br i1 %4, label %34, label %5, !dbg !10960

5:                                                ; preds = %0
  %6 = getelementptr inbounds %union.CMEMFlashID, %union.CMEMFlashID* %1, i32 0, i32 0, i32 0, !dbg !10961
  call void @NOR_ReadID(i16 noundef zeroext 0, i16* noundef nonnull inttoptr (i32 134217728 to i16*), i16* noundef nonnull %6) #21, !dbg !10962
  call void @llvm.dbg.value(metadata i32 0, metadata !10944, metadata !DIExpression()), !dbg !10956
  br label %7, !dbg !10963

7:                                                ; preds = %5, %29
  %8 = phi i32 [ 0, %5 ], [ %30, %29 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !10944, metadata !DIExpression()), !dbg !10956
  %9 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  call void @llvm.dbg.value(metadata i32 0, metadata !10945, metadata !DIExpression()), !dbg !10956
  %12 = icmp eq i8 %10, 0, !dbg !10965
  br i1 %12, label %24, label %13, !dbg !10970

13:                                               ; preds = %7, %21
  %14 = phi i32 [ %22, %21 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !10945, metadata !DIExpression()), !dbg !10956
  %15 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 2, i32 %14, !dbg !10971
  %16 = load i8, i8* %15, align 1, !dbg !10971
  %17 = getelementptr inbounds %union.CMEMFlashID, %union.CMEMFlashID* %1, i32 0, i32 0, i32 %14, !dbg !10974
  %18 = load i16, i16* %17, align 2, !dbg !10974
  %19 = zext i8 %16 to i16, !dbg !10975
  %20 = icmp eq i16 %18, %19, !dbg !10975
  br i1 %20, label %21, label %24, !dbg !10976

21:                                               ; preds = %13
  %22 = add nuw nsw i32 %14, 1, !dbg !10977
  call void @llvm.dbg.value(metadata i32 %22, metadata !10945, metadata !DIExpression()), !dbg !10956
  %23 = icmp eq i32 %22, %11, !dbg !10965
  br i1 %23, label %27, label %13, !dbg !10970, !llvm.loop !10978

24:                                               ; preds = %13, %7
  %25 = phi i32 [ 0, %7 ], [ %14, %13 ], !dbg !10980
  %26 = icmp eq i32 %25, %11, !dbg !10981
  br i1 %26, label %27, label %29, !dbg !10983

27:                                               ; preds = %24, %21
  %28 = trunc i32 %8 to i16, !dbg !10984
  store i16 %28, i16* @cmem_index, align 2, !dbg !10986
  br label %34, !dbg !10987

29:                                               ; preds = %24
  %30 = add nuw nsw i32 %8, 1, !dbg !10988
  call void @llvm.dbg.value(metadata i32 %30, metadata !10944, metadata !DIExpression()), !dbg !10956
  %31 = icmp eq i32 %30, 5, !dbg !10989
  br i1 %31, label %32, label %7, !dbg !10963, !llvm.loop !10990

32:                                               ; preds = %29
  %33 = load i16, i16* @cmem_index, align 2, !dbg !10992
  br label %34, !dbg !10992

34:                                               ; preds = %27, %32, %0
  %35 = phi i16 [ %3, %0 ], [ %33, %32 ], [ %28, %27 ]
  %36 = sext i16 %35 to i32, !dbg !10956
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #22, !dbg !10993
  ret i32 %36, !dbg !10993
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local nonnull %struct.CMEMEntryID* @CMEM_GetIDEntry(i32 noundef %0) local_unnamed_addr #8 !dbg !10994 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10998, metadata !DIExpression()), !dbg !10999
  %2 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %0, !dbg !11000
  ret %struct.CMEMEntryID* %2, !dbg !11001
}

; Function Attrs: noinline nounwind optsize
define dso_local void @CMEM_EMIINIT_ReadID(i16 noundef zeroext %0, i8* nocapture readnone %1, i16* nocapture noundef writeonly %2) local_unnamed_addr #0 section ".ram_code" !dbg !11002 {
  %4 = alloca i8, align 1
  %5 = alloca [3 x i8], align 1
  call void @llvm.dbg.value(metadata i16 %0, metadata !11006, metadata !DIExpression()), !dbg !11013
  call void @llvm.dbg.value(metadata i8* undef, metadata !11007, metadata !DIExpression()), !dbg !11013
  call void @llvm.dbg.value(metadata i16* %2, metadata !11008, metadata !DIExpression()), !dbg !11013
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #22, !dbg !11014
  %6 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i32 0, i32 0, !dbg !11014
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %6) #22, !dbg !11014
  call void @llvm.dbg.declare(metadata [3 x i8]* %5, metadata !11011, metadata !DIExpression()), !dbg !11015
  call void @llvm.dbg.value(metadata i8 -81, metadata !11009, metadata !DIExpression()), !dbg !11016
  store i8 -81, i8* %4, align 1, !dbg !11017
  call void @llvm.dbg.value(metadata i8* %4, metadata !11009, metadata !DIExpression(DW_OP_deref)), !dbg !11016
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef nonnull %6, i16 noundef zeroext 1, i16 noundef zeroext 3) #21, !dbg !11018
  %7 = load i8, i8* %6, align 1, !dbg !11019
  %8 = add i8 %7, 1, !dbg !11021
  %9 = icmp ult i8 %8, 2, !dbg !11021
  br i1 %9, label %12, label %10, !dbg !11021

10:                                               ; preds = %3
  %11 = call zeroext i1 @CMEM_EMIINIT_CheckValidDeviceID(i8* noundef nonnull %6) #20, !dbg !11022
  br i1 %11, label %13, label %12, !dbg !11023

12:                                               ; preds = %10, %3
  call void @llvm.dbg.value(metadata i8 -97, metadata !11009, metadata !DIExpression()), !dbg !11016
  store i8 -97, i8* %4, align 1, !dbg !11024
  call void @llvm.dbg.value(metadata i8* %4, metadata !11009, metadata !DIExpression(DW_OP_deref)), !dbg !11016
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef nonnull %6, i16 noundef zeroext 1, i16 noundef zeroext 3) #21, !dbg !11026
  br label %13, !dbg !11027

13:                                               ; preds = %12, %10
  br label %14, !dbg !11028

14:                                               ; preds = %13, %14
  %15 = phi i32 [ %20, %14 ], [ 0, %13 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !11012, metadata !DIExpression()), !dbg !11016
  %16 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i32 0, i32 %15, !dbg !11030
  %17 = load i8, i8* %16, align 1, !dbg !11030
  %18 = zext i8 %17 to i16, !dbg !11030
  %19 = getelementptr inbounds i16, i16* %2, i32 %15, !dbg !11033
  store i16 %18, i16* %19, align 2, !dbg !11034
  %20 = add nuw nsw i32 %15, 1, !dbg !11035
  call void @llvm.dbg.value(metadata i32 %20, metadata !11012, metadata !DIExpression()), !dbg !11016
  %21 = icmp eq i32 %20, 3, !dbg !11036
  br i1 %21, label %22, label %14, !dbg !11028, !llvm.loop !11037

22:                                               ; preds = %14
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %6) #22, !dbg !11039
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #22, !dbg !11039
  ret void, !dbg !11040
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @CMEM_EMIINIT_CheckValidDeviceID(i8* nocapture noundef readonly %0) local_unnamed_addr #11 section ".ram_code" !dbg !11041 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11043, metadata !DIExpression()), !dbg !11047
  call void @llvm.dbg.value(metadata %struct.CMEMEntryID* null, metadata !11046, metadata !DIExpression()), !dbg !11047
  call void @llvm.dbg.value(metadata i32 0, metadata !11044, metadata !DIExpression()), !dbg !11047
  br label %6, !dbg !11048

2:                                                ; preds = %23
  %3 = add nuw nsw i32 %8, 1, !dbg !11050
  call void @llvm.dbg.value(metadata i32 %3, metadata !11044, metadata !DIExpression()), !dbg !11047
  call void @llvm.dbg.value(metadata i32 %8, metadata !11044, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !11047
  %4 = icmp ult i32 %8, 4, !dbg !11052
  %5 = icmp eq i32 %3, 5, !dbg !11052
  br i1 %5, label %26, label %6, !dbg !11048, !llvm.loop !11053

6:                                                ; preds = %1, %2
  %7 = phi i1 [ true, %1 ], [ %4, %2 ]
  %8 = phi i32 [ 0, %1 ], [ %3, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !11044, metadata !DIExpression()), !dbg !11047
  %9 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  call void @llvm.dbg.value(metadata i32 0, metadata !11045, metadata !DIExpression()), !dbg !11047
  %12 = icmp eq i8 %10, 0, !dbg !11055
  br i1 %12, label %23, label %13, !dbg !11059

13:                                               ; preds = %6, %20
  %14 = phi i32 [ %21, %20 ], [ 0, %6 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !11045, metadata !DIExpression()), !dbg !11047
  %15 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 2, i32 %14, !dbg !11060
  %16 = load i8, i8* %15, align 1, !dbg !11060
  %17 = getelementptr inbounds i8, i8* %0, i32 %14, !dbg !11063
  %18 = load i8, i8* %17, align 1, !dbg !11063
  %19 = icmp eq i8 %16, %18, !dbg !11064
  br i1 %19, label %20, label %23, !dbg !11065

20:                                               ; preds = %13
  %21 = add nuw nsw i32 %14, 1, !dbg !11066
  call void @llvm.dbg.value(metadata i32 %21, metadata !11045, metadata !DIExpression()), !dbg !11047
  %22 = icmp eq i32 %21, %11, !dbg !11055
  br i1 %22, label %26, label %13, !dbg !11059, !llvm.loop !11067

23:                                               ; preds = %13, %6
  %24 = phi i32 [ 0, %6 ], [ %14, %13 ], !dbg !11069
  %25 = icmp eq i32 %24, %11, !dbg !11070
  call void @llvm.dbg.value(metadata i32 %8, metadata !11044, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !11047
  br i1 %25, label %26, label %2, !dbg !11072

26:                                               ; preds = %2, %23, %20
  %27 = phi i1 [ %7, %20 ], [ %7, %23 ], [ %4, %2 ], !dbg !11052
  ret i1 %27, !dbg !11073
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_EMIINIT_Index() local_unnamed_addr #0 section ".ram_code" !dbg !11074 {
  %1 = alloca %union.CMEMFlashID, align 2
  %2 = bitcast %union.CMEMFlashID* %1 to i8*, !dbg !11080
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #22, !dbg !11080
  call void @llvm.dbg.declare(metadata %union.CMEMFlashID* %1, metadata !11078, metadata !DIExpression()), !dbg !11081
  call void @llvm.dbg.value(metadata %struct.CMEMEntryID* null, metadata !11079, metadata !DIExpression()), !dbg !11082
  %3 = load i16, i16* @cmem_emiinit_index, align 2, !dbg !11083
  %4 = icmp sgt i16 %3, -1, !dbg !11085
  br i1 %4, label %34, label %5, !dbg !11086

5:                                                ; preds = %0
  %6 = getelementptr inbounds %union.CMEMFlashID, %union.CMEMFlashID* %1, i32 0, i32 0, i32 0, !dbg !11087
  call void @CMEM_EMIINIT_ReadID(i16 noundef zeroext 0, i8* undef, i16* noundef nonnull %6) #20, !dbg !11088
  call void @llvm.dbg.value(metadata i32 0, metadata !11076, metadata !DIExpression()), !dbg !11082
  br label %7, !dbg !11089

7:                                                ; preds = %5, %29
  %8 = phi i32 [ 0, %5 ], [ %30, %29 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !11076, metadata !DIExpression()), !dbg !11082
  %9 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  call void @llvm.dbg.value(metadata i32 0, metadata !11077, metadata !DIExpression()), !dbg !11082
  %12 = icmp eq i8 %10, 0, !dbg !11091
  br i1 %12, label %24, label %13, !dbg !11096

13:                                               ; preds = %7, %21
  %14 = phi i32 [ %22, %21 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !11077, metadata !DIExpression()), !dbg !11082
  %15 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 2, i32 %14, !dbg !11097
  %16 = load i8, i8* %15, align 1, !dbg !11097
  %17 = getelementptr inbounds %union.CMEMFlashID, %union.CMEMFlashID* %1, i32 0, i32 0, i32 %14, !dbg !11100
  %18 = load i16, i16* %17, align 2, !dbg !11100
  %19 = zext i8 %16 to i16, !dbg !11101
  %20 = icmp eq i16 %18, %19, !dbg !11101
  br i1 %20, label %21, label %24, !dbg !11102

21:                                               ; preds = %13
  %22 = add nuw nsw i32 %14, 1, !dbg !11103
  call void @llvm.dbg.value(metadata i32 %22, metadata !11077, metadata !DIExpression()), !dbg !11082
  %23 = icmp eq i32 %22, %11, !dbg !11091
  br i1 %23, label %27, label %13, !dbg !11096, !llvm.loop !11104

24:                                               ; preds = %13, %7
  %25 = phi i32 [ 0, %7 ], [ %14, %13 ], !dbg !11106
  %26 = icmp eq i32 %25, %11, !dbg !11107
  br i1 %26, label %27, label %29, !dbg !11109

27:                                               ; preds = %24, %21
  %28 = trunc i32 %8 to i16, !dbg !11110
  store i16 %28, i16* @cmem_emiinit_index, align 2, !dbg !11112
  br label %34, !dbg !11113

29:                                               ; preds = %24
  %30 = add nuw nsw i32 %8, 1, !dbg !11114
  call void @llvm.dbg.value(metadata i32 %30, metadata !11076, metadata !DIExpression()), !dbg !11082
  %31 = icmp eq i32 %30, 5, !dbg !11115
  br i1 %31, label %32, label %7, !dbg !11089, !llvm.loop !11116

32:                                               ; preds = %29
  %33 = load i16, i16* @cmem_emiinit_index, align 2, !dbg !11118
  br label %34, !dbg !11118

34:                                               ; preds = %27, %32, %0
  %35 = phi i16 [ %3, %0 ], [ %33, %32 ], [ %28, %27 ]
  %36 = sext i16 %35 to i32, !dbg !11082
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #22, !dbg !11119
  ret i32 %36, !dbg !11119
}

; Function Attrs: noinline nounwind optsize
define dso_local void @NOR_ReadID(i16 noundef zeroext %0, i16* nocapture noundef readnone %1, i16* nocapture noundef writeonly %2) local_unnamed_addr #0 section ".ram_code" !dbg !11120 {
  %4 = alloca i8, align 1
  %5 = alloca [3 x i8], align 1
  call void @llvm.dbg.value(metadata i16 %0, metadata !11128, metadata !DIExpression()), !dbg !11136
  call void @llvm.dbg.value(metadata i16* %1, metadata !11129, metadata !DIExpression()), !dbg !11136
  call void @llvm.dbg.value(metadata i16* %2, metadata !11130, metadata !DIExpression()), !dbg !11136
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #22, !dbg !11137
  %6 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i32 0, i32 0, !dbg !11137
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %6) #22, !dbg !11137
  call void @llvm.dbg.declare(metadata [3 x i8]* %5, metadata !11134, metadata !DIExpression()), !dbg !11138
  call void @llvm.dbg.value(metadata i8 -81, metadata !11132, metadata !DIExpression()), !dbg !11139
  store i8 -81, i8* %4, align 1, !dbg !11140
  %7 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !11141
  call void @llvm.dbg.value(metadata i32 %7, metadata !11131, metadata !DIExpression()), !dbg !11136
  call void @llvm.dbg.value(metadata i8* %4, metadata !11132, metadata !DIExpression(DW_OP_deref)), !dbg !11139
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef nonnull %6, i16 noundef zeroext 1, i16 noundef zeroext 3) #21, !dbg !11142
  call void @RestoreIRQMask(i32 noundef %7) #21, !dbg !11143
  %8 = load i8, i8* %6, align 1, !dbg !11144
  %9 = add i8 %8, 1, !dbg !11146
  %10 = icmp ult i8 %9, 2, !dbg !11146
  br i1 %10, label %13, label %11, !dbg !11146

11:                                               ; preds = %3
  %12 = call zeroext i1 @CMEM_CheckValidDeviceID(i8* noundef nonnull %6) #21, !dbg !11147
  br i1 %12, label %15, label %13, !dbg !11148

13:                                               ; preds = %11, %3
  call void @llvm.dbg.value(metadata i8 -97, metadata !11132, metadata !DIExpression()), !dbg !11139
  store i8 -97, i8* %4, align 1, !dbg !11149
  %14 = call i32 @SaveAndSetIRQMask() #21, !dbg !11151
  call void @llvm.dbg.value(metadata i32 %14, metadata !11131, metadata !DIExpression()), !dbg !11136
  call void @llvm.dbg.value(metadata i8* %4, metadata !11132, metadata !DIExpression(DW_OP_deref)), !dbg !11139
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef nonnull %6, i16 noundef zeroext 1, i16 noundef zeroext 3) #21, !dbg !11152
  call void @RestoreIRQMask(i32 noundef %14) #21, !dbg !11153
  br label %15, !dbg !11154

15:                                               ; preds = %13, %11
  br label %16, !dbg !11155

16:                                               ; preds = %15, %16
  %17 = phi i32 [ %22, %16 ], [ 0, %15 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !11135, metadata !DIExpression()), !dbg !11139
  %18 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i32 0, i32 %17, !dbg !11157
  %19 = load i8, i8* %18, align 1, !dbg !11157
  %20 = zext i8 %19 to i16, !dbg !11157
  %21 = getelementptr inbounds i16, i16* %2, i32 %17, !dbg !11160
  store i16 %20, i16* %21, align 2, !dbg !11161
  %22 = add nuw nsw i32 %17, 1, !dbg !11162
  call void @llvm.dbg.value(metadata i32 %22, metadata !11135, metadata !DIExpression()), !dbg !11139
  %23 = icmp eq i32 %22, 3, !dbg !11163
  br i1 %23, label %24, label %16, !dbg !11155, !llvm.loop !11164

24:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %6) #22, !dbg !11166
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #22, !dbg !11166
  ret void, !dbg !11167
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_NORFLASH_ROMSpace() local_unnamed_addr #8 !dbg !11168 {
  ret i32 3932160, !dbg !11169
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_NORFLASH_Size() local_unnamed_addr #8 !dbg !11170 {
  ret i32 4194304, !dbg !11171
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Initialize_FDD_tables() local_unnamed_addr #0 !dbg !11172 {
  %1 = tail call i32 @ComboMem_Initialize() #21, !dbg !11173
  ret void, !dbg !11174
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @nor_sweep_device() local_unnamed_addr #8 !dbg !11175 {
  ret void, !dbg !11176
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @nor_manual_reclaim() local_unnamed_addr #8 !dbg !11177 {
  ret void, !dbg !11178
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_fat_addr() local_unnamed_addr #8 !dbg !11179 {
  ret i32 3932160, !dbg !11180
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_fat_len() local_unnamed_addr #8 !dbg !11181 {
  ret i32 262144, !dbg !11182
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Custom_NOR_Init() local_unnamed_addr #0 !dbg !11183 {
  %1 = tail call i32 @CMEM_Init_FullDriver() #21, !dbg !11184
  ret void, !dbg !11185
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_NORFLASH_Base() local_unnamed_addr #8 !dbg !11186 {
  ret i32 134217728, !dbg !11187
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_FLASH_Size() local_unnamed_addr #8 !dbg !11188 {
  ret i32 4194304, !dbg !11189
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @INT_RetrieveFlashBaseAddr() local_unnamed_addr #4 !dbg !11190 {
  store i8* inttoptr (i32 134217728 to i8*), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 1), align 4, !dbg !11191
  ret i32 134217728, !dbg !11192
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Init_NOR_MTD_Common() local_unnamed_addr #0 !dbg !11193 {
  store i32 xor (i32 ptrtoint ([8 x %struct.powerkey_state_t]* @RegionInfo to i32), i32 -1), i32* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 0), align 4, !dbg !11194
  %1 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !11195
  %2 = load i32, i32* @cmem_nor_index, align 4, !dbg !11196
  %3 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 1, !dbg !11197
  %4 = load i16, i16* %3, align 2, !dbg !11197
  %5 = zext i16 %4 to i32, !dbg !11195
  store i32 %5, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !11198
  %6 = tail call i8* @memset(i8* noundef bitcast ([2 x %struct.powerkey_state_t]* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 11, i32 0) to i8*), i32 noundef 255, i32 noundef 128) #21, !dbg !11199
  %7 = tail call i32 @INT_RetrieveFlashBaseAddr() #20, !dbg !11200
  store i8* inttoptr (i32 138149888 to i8*), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 1), align 4, !dbg !11201
  store %struct.powerkey_state_t* getelementptr inbounds ([8 x %struct.powerkey_state_t], [8 x %struct.powerkey_state_t]* @RegionInfo, i32 0, i32 0), %struct.powerkey_state_t** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 5), align 4, !dbg !11202
  ret i32 0, !dbg !11203
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Init_NOR_MTD_SF() local_unnamed_addr #0 !dbg !11204 {
  store %struct.NOR_MTD_Driver* @NORFlashMtd, %struct.NOR_MTD_Driver** getelementptr inbounds (%struct.NOR_FLASH_DRV_Data, %struct.NOR_FLASH_DRV_Data* @FlashDriveData, i32 0, i32 1), align 4, !dbg !11207
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @StatusMap, i32 0, i32 0), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 12), align 4, !dbg !11208
  store %struct.SF_MTD_CMD* @sf_dal_data_cmd, %struct.SF_MTD_CMD** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 13), align 4, !dbg !11209
  store i16 0, i16* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 23), align 2, !dbg !11210
  %1 = tail call i32 @INT_RetrieveFlashBaseAddr() #20, !dbg !11211
  %2 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !11212
  %3 = load i32, i32* @cmem_nor_index, align 4, !dbg !11213
  %4 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %2, i32 %3, i32 2, !dbg !11214
  %5 = load i32, i32* %4, align 4, !dbg !11214
  %6 = tail call i32 @SF_DAL_Init_Driver(%struct.NOR_MTD_Driver* noundef nonnull @NORFlashMtd, %struct.SF_MTD_Data* noundef nonnull @mtdflash, i32 noundef 138149888, i32 noundef %5) #21, !dbg !11215
  call void @llvm.dbg.value(metadata i32 %6, metadata !11206, metadata !DIExpression()), !dbg !11216
  %7 = icmp eq i32 %6, -120, !dbg !11217
  %8 = select i1 %7, i32 5, i32 0, !dbg !11216
  ret i32 %8, !dbg !11219
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i8 @EMINIT_CMEM_GET_NOR_FLASH_COUNT() local_unnamed_addr #8 !dbg !11220 {
  ret i8 1, !dbg !11222
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @EMINIT_CMEM_GET_NOR_FLASH_SIZE(i8 noundef zeroext %0) local_unnamed_addr #0 !dbg !11223 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !11227, metadata !DIExpression()), !dbg !11230
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* null, metadata !11229, metadata !DIExpression()), !dbg !11230
  %2 = tail call i32 @CMEM_EMIINIT_Index() #21, !dbg !11231
  call void @llvm.dbg.value(metadata i32 %2, metadata !11228, metadata !DIExpression()), !dbg !11230
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), metadata !11229, metadata !DIExpression()), !dbg !11230
  %3 = getelementptr inbounds %struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 %2, i32 4, i32 0, i32 0, !dbg !11232
  %4 = load i32, i32* %3, align 4, !dbg !11232
  ret i32 %4, !dbg !11233
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @CMEM_BlockSize_Internal(i32 noundef %0, %struct.powerkey_state_t* nocapture noundef readonly %1) local_unnamed_addr #11 !dbg !11234 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11238, metadata !DIExpression()), !dbg !11241
  call void @llvm.dbg.value(metadata %struct.powerkey_state_t* %1, metadata !11239, metadata !DIExpression()), !dbg !11241
  %3 = and i32 %0, 134217727, !dbg !11242
  call void @llvm.dbg.value(metadata i32 %3, metadata !11238, metadata !DIExpression()), !dbg !11241
  call void @llvm.dbg.value(metadata i16 0, metadata !11240, metadata !DIExpression()), !dbg !11241
  %4 = getelementptr inbounds %struct.powerkey_state_t, %struct.powerkey_state_t* %1, i32 1, i32 1, !dbg !11243
  %5 = load i32, i32* %4, align 4, !dbg !11243
  %6 = icmp eq i32 %5, 0, !dbg !11246
  br i1 %6, label %25, label %7, !dbg !11247

7:                                                ; preds = %2, %18
  %8 = phi i32 [ %21, %18 ], [ 1, %2 ]
  %9 = phi i32 [ %20, %18 ], [ 0, %2 ]
  %10 = phi i16 [ %19, %18 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i16 %10, metadata !11240, metadata !DIExpression()), !dbg !11241
  %11 = getelementptr inbounds %struct.powerkey_state_t, %struct.powerkey_state_t* %1, i32 %9, i32 0, !dbg !11248
  %12 = load i32, i32* %11, align 4, !dbg !11248
  %13 = icmp ult i32 %3, %12, !dbg !11251
  br i1 %13, label %18, label %14, !dbg !11252

14:                                               ; preds = %7
  %15 = getelementptr inbounds %struct.powerkey_state_t, %struct.powerkey_state_t* %1, i32 %8, i32 0, !dbg !11253
  %16 = load i32, i32* %15, align 4, !dbg !11253
  %17 = icmp ult i32 %3, %16, !dbg !11254
  br i1 %17, label %25, label %18, !dbg !11255

18:                                               ; preds = %7, %14
  %19 = add i16 %10, 1, !dbg !11256
  call void @llvm.dbg.value(metadata i16 %19, metadata !11240, metadata !DIExpression()), !dbg !11241
  %20 = zext i16 %19 to i32, !dbg !11257
  %21 = add nuw nsw i32 %20, 1, !dbg !11258
  %22 = getelementptr inbounds %struct.powerkey_state_t, %struct.powerkey_state_t* %1, i32 %21, i32 1, !dbg !11243
  %23 = load i32, i32* %22, align 4, !dbg !11243
  %24 = icmp eq i32 %23, 0, !dbg !11246
  br i1 %24, label %25, label %7, !dbg !11247, !llvm.loop !11259

25:                                               ; preds = %18, %14, %2
  %26 = phi i32 [ 0, %2 ], [ %9, %14 ], [ %20, %18 ], !dbg !11257
  %27 = getelementptr inbounds %struct.powerkey_state_t, %struct.powerkey_state_t* %1, i32 %26, i32 1, !dbg !11261
  %28 = load i32, i32* %27, align 4, !dbg !11261
  ret i32 %28, !dbg !11262
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @CMEM_BlockSize(i32 noundef %0) local_unnamed_addr #11 !dbg !11263 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11265, metadata !DIExpression()), !dbg !11266
  %2 = load %struct.powerkey_state_t*, %struct.powerkey_state_t** @BlockLayout, align 4, !dbg !11267
  %3 = tail call i32 @CMEM_BlockSize_Internal(i32 noundef %0, %struct.powerkey_state_t* noundef %2) #20, !dbg !11268
  ret i32 %3, !dbg !11269
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @EMIINIT_CMEM_BlockSize(i32 noundef %0) local_unnamed_addr #0 !dbg !11270 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11272, metadata !DIExpression()), !dbg !11275
  %2 = tail call i32 @CMEM_EMIINIT_Index() #21, !dbg !11276
  call void @llvm.dbg.value(metadata i32 %2, metadata !11273, metadata !DIExpression()), !dbg !11275
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* null, metadata !11274, metadata !DIExpression()), !dbg !11275
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), metadata !11274, metadata !DIExpression()), !dbg !11275
  %3 = getelementptr inbounds %struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 %2, i32 3, i32 0, !dbg !11277
  %4 = tail call i32 @CMEM_BlockSize_Internal(i32 noundef %0, %struct.powerkey_state_t* noundef nonnull %3) #20, !dbg !11278
  ret i32 %4, !dbg !11279
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @NOR_Get_FlashSizeFromBankInfo(%struct.powerkey_state_t* nocapture noundef readonly %0) local_unnamed_addr #11 !dbg !11280 {
  call void @llvm.dbg.value(metadata %struct.powerkey_state_t* %0, metadata !11286, metadata !DIExpression()), !dbg !11289
  call void @llvm.dbg.value(metadata i32 0, metadata !11287, metadata !DIExpression()), !dbg !11289
  call void @llvm.dbg.value(metadata i32 0, metadata !11288, metadata !DIExpression()), !dbg !11289
  %2 = getelementptr inbounds %struct.powerkey_state_t, %struct.powerkey_state_t* %0, i32 0, i32 0, !dbg !11290
  %3 = load i32, i32* %2, align 4, !dbg !11290
  %4 = icmp eq i32 %3, 0, !dbg !11293
  br i1 %4, label %17, label %5, !dbg !11294

5:                                                ; preds = %1, %5
  %6 = phi i32 [ %15, %5 ], [ %3, %1 ]
  %7 = phi i32 [ %13, %5 ], [ 0, %1 ]
  %8 = phi i32 [ %12, %5 ], [ 0, %1 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !11288, metadata !DIExpression()), !dbg !11289
  call void @llvm.dbg.value(metadata i32 %8, metadata !11287, metadata !DIExpression()), !dbg !11289
  %9 = getelementptr inbounds %struct.powerkey_state_t, %struct.powerkey_state_t* %0, i32 %7, i32 1, !dbg !11295
  %10 = load i32, i32* %9, align 4, !dbg !11295
  %11 = mul i32 %10, %6, !dbg !11297
  %12 = add i32 %11, %8, !dbg !11298
  call void @llvm.dbg.value(metadata i32 %12, metadata !11287, metadata !DIExpression()), !dbg !11289
  %13 = add i32 %7, 1, !dbg !11299
  call void @llvm.dbg.value(metadata i32 %13, metadata !11288, metadata !DIExpression()), !dbg !11289
  %14 = getelementptr inbounds %struct.powerkey_state_t, %struct.powerkey_state_t* %0, i32 %13, i32 0, !dbg !11290
  %15 = load i32, i32* %14, align 4, !dbg !11290
  %16 = icmp eq i32 %15, 0, !dbg !11293
  br i1 %16, label %17, label %5, !dbg !11294, !llvm.loop !11300

17:                                               ; preds = %5, %1
  %18 = phi i32 [ 0, %1 ], [ %12, %5 ], !dbg !11289
  ret i32 %18, !dbg !11302
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @CMEM_NOR_Construct_RegionInfo_Internal(i32 noundef %0, i32 noundef %1, %struct.powerkey_state_t* nocapture noundef %2, %struct.powerkey_state_t* nocapture noundef readonly %3) local_unnamed_addr #12 !dbg !11303 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11307, metadata !DIExpression()), !dbg !11316
  call void @llvm.dbg.value(metadata i32 %1, metadata !11308, metadata !DIExpression()), !dbg !11316
  call void @llvm.dbg.value(metadata %struct.powerkey_state_t* %2, metadata !11309, metadata !DIExpression()), !dbg !11316
  call void @llvm.dbg.value(metadata %struct.powerkey_state_t* %3, metadata !11310, metadata !DIExpression()), !dbg !11316
  %5 = add i32 %1, %0, !dbg !11317
  call void @llvm.dbg.value(metadata i32 %5, metadata !11315, metadata !DIExpression()), !dbg !11316
  call void @llvm.dbg.value(metadata i32 %0, metadata !11311, metadata !DIExpression()), !dbg !11316
  call void @llvm.dbg.value(metadata i32 0, metadata !11312, metadata !DIExpression()), !dbg !11316
  call void @llvm.dbg.value(metadata i32 0, metadata !11314, metadata !DIExpression()), !dbg !11316
  %6 = icmp ugt i32 %5, %0, !dbg !11318
  br i1 %6, label %7, label %34, !dbg !11321

7:                                                ; preds = %4, %29
  %8 = phi i32 [ %32, %29 ], [ 0, %4 ]
  %9 = phi i32 [ %31, %29 ], [ %0, %4 ]
  %10 = phi i32 [ %30, %29 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !11314, metadata !DIExpression()), !dbg !11316
  call void @llvm.dbg.value(metadata i32 %9, metadata !11311, metadata !DIExpression()), !dbg !11316
  call void @llvm.dbg.value(metadata i32 %10, metadata !11312, metadata !DIExpression()), !dbg !11316
  %11 = tail call i32 @CMEM_BlockSize_Internal(i32 noundef %9, %struct.powerkey_state_t* noundef %3) #20, !dbg !11322
  call void @llvm.dbg.value(metadata i32 %11, metadata !11313, metadata !DIExpression()), !dbg !11316
  %12 = icmp eq i32 %8, 0, !dbg !11324
  %13 = getelementptr inbounds %struct.powerkey_state_t, %struct.powerkey_state_t* %2, i32 %10, i32 0, !dbg !11326
  br i1 %12, label %14, label %16, !dbg !11327

14:                                               ; preds = %7
  store i32 %11, i32* %13, align 4, !dbg !11328
  %15 = getelementptr inbounds %struct.powerkey_state_t, %struct.powerkey_state_t* %2, i32 %10, i32 1, !dbg !11330
  store i32 1, i32* %15, align 4, !dbg !11331
  br label %29, !dbg !11332

16:                                               ; preds = %7
  %17 = load i32, i32* %13, align 4, !dbg !11333
  %18 = icmp eq i32 %11, %17, !dbg !11335
  br i1 %18, label %19, label %23, !dbg !11336

19:                                               ; preds = %16
  %20 = getelementptr inbounds %struct.powerkey_state_t, %struct.powerkey_state_t* %2, i32 %10, i32 1, !dbg !11337
  %21 = load i32, i32* %20, align 4, !dbg !11339
  %22 = add i32 %21, 1, !dbg !11339
  store i32 %22, i32* %20, align 4, !dbg !11339
  br label %29, !dbg !11340

23:                                               ; preds = %16
  %24 = add i32 %10, 1, !dbg !11341
  call void @llvm.dbg.value(metadata i32 %24, metadata !11312, metadata !DIExpression()), !dbg !11316
  %25 = icmp eq i32 %24, 9, !dbg !11343
  br i1 %25, label %34, label %26, !dbg !11345

26:                                               ; preds = %23
  %27 = getelementptr inbounds %struct.powerkey_state_t, %struct.powerkey_state_t* %2, i32 %24, i32 0, !dbg !11346
  store i32 %11, i32* %27, align 4, !dbg !11347
  %28 = getelementptr inbounds %struct.powerkey_state_t, %struct.powerkey_state_t* %2, i32 %24, i32 1, !dbg !11348
  store i32 1, i32* %28, align 4, !dbg !11349
  br label %29

29:                                               ; preds = %19, %26, %14
  %30 = phi i32 [ %10, %14 ], [ %10, %19 ], [ %24, %26 ], !dbg !11350
  call void @llvm.dbg.value(metadata i32 %30, metadata !11312, metadata !DIExpression()), !dbg !11316
  %31 = add i32 %11, %9, !dbg !11351
  call void @llvm.dbg.value(metadata i32 %31, metadata !11311, metadata !DIExpression()), !dbg !11316
  %32 = add i32 %8, 1, !dbg !11352
  call void @llvm.dbg.value(metadata i32 %32, metadata !11314, metadata !DIExpression()), !dbg !11316
  %33 = icmp ult i32 %31, %5, !dbg !11318
  br i1 %33, label %7, label %34, !dbg !11321, !llvm.loop !11353

34:                                               ; preds = %23, %29, %4
  %35 = phi i32 [ 0, %4 ], [ 0, %29 ], [ 6, %23 ], !dbg !11316
  ret i32 %35, !dbg !11355
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_Construct_RegionInfo(i32 noundef %0, i32 noundef %1, %struct.powerkey_state_t* noundef %2) local_unnamed_addr #0 !dbg !11356 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11360, metadata !DIExpression()), !dbg !11363
  call void @llvm.dbg.value(metadata i32 %1, metadata !11361, metadata !DIExpression()), !dbg !11363
  call void @llvm.dbg.value(metadata %struct.powerkey_state_t* %2, metadata !11362, metadata !DIExpression()), !dbg !11363
  %4 = bitcast %struct.powerkey_state_t* %2 to i8*, !dbg !11364
  %5 = tail call i8* @memset(i8* noundef %4, i32 noundef 0, i32 noundef 64) #21, !dbg !11365
  %6 = load %struct.powerkey_state_t*, %struct.powerkey_state_t** @BlockLayout, align 4, !dbg !11366
  %7 = tail call i32 @CMEM_NOR_Construct_RegionInfo_Internal(i32 noundef %0, i32 noundef %1, %struct.powerkey_state_t* noundef %2, %struct.powerkey_state_t* noundef %6) #20, !dbg !11367
  ret i32 %7, !dbg !11368
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @NOR_Construct_DualRegionInfo(i32 noundef %0, i32 noundef %1, %struct.powerkey_state_t* nocapture noundef readnone %2) local_unnamed_addr #8 !dbg !11369 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11371, metadata !DIExpression()), !dbg !11374
  call void @llvm.dbg.value(metadata i32 %1, metadata !11372, metadata !DIExpression()), !dbg !11374
  call void @llvm.dbg.value(metadata %struct.powerkey_state_t* %2, metadata !11373, metadata !DIExpression()), !dbg !11374
  ret i32 0, !dbg !11375
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @EMIINIT_CMEM_NOR_Construct_RegionInfo(i32 noundef %0, i32 noundef %1, %struct.powerkey_state_t* nocapture noundef %2) local_unnamed_addr #0 !dbg !11376 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11378, metadata !DIExpression()), !dbg !11383
  call void @llvm.dbg.value(metadata i32 %1, metadata !11379, metadata !DIExpression()), !dbg !11383
  call void @llvm.dbg.value(metadata %struct.powerkey_state_t* %2, metadata !11380, metadata !DIExpression()), !dbg !11383
  %4 = tail call i32 @CMEM_EMIINIT_Index() #21, !dbg !11384
  call void @llvm.dbg.value(metadata i32 %4, metadata !11381, metadata !DIExpression()), !dbg !11383
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* null, metadata !11382, metadata !DIExpression()), !dbg !11383
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), metadata !11382, metadata !DIExpression()), !dbg !11383
  %5 = getelementptr inbounds %struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 %4, i32 3, i32 0, !dbg !11385
  %6 = tail call i32 @CMEM_NOR_Construct_RegionInfo_Internal(i32 noundef %0, i32 noundef %1, %struct.powerkey_state_t* noundef %2, %struct.powerkey_state_t* noundef nonnull %5) #20, !dbg !11386
  ret i32 %6, !dbg !11387
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @EMIINIT_CMEM_NOR_Construct_DualRegionInfo(i32 noundef %0, i32 noundef %1, %struct.powerkey_state_t* nocapture noundef readnone %2) local_unnamed_addr #8 !dbg !11388 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11390, metadata !DIExpression()), !dbg !11393
  call void @llvm.dbg.value(metadata i32 %1, metadata !11391, metadata !DIExpression()), !dbg !11393
  call void @llvm.dbg.value(metadata %struct.powerkey_state_t* %2, metadata !11392, metadata !DIExpression()), !dbg !11393
  ret i32 0, !dbg !11394
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @EMIINIT_CMEM_NOR_GetUniformBlock(i16 noundef zeroext %0) local_unnamed_addr #0 !dbg !11395 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !11397, metadata !DIExpression()), !dbg !11400
  %2 = tail call i32 @CMEM_EMIINIT_Index() #21, !dbg !11401
  call void @llvm.dbg.value(metadata i32 %2, metadata !11398, metadata !DIExpression()), !dbg !11400
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* null, metadata !11399, metadata !DIExpression()), !dbg !11400
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), metadata !11399, metadata !DIExpression()), !dbg !11400
  %3 = getelementptr inbounds %struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 %2, i32 2, !dbg !11402
  %4 = load i32, i32* %3, align 4, !dbg !11402
  ret i32 %4, !dbg !11403
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @CMEM_NOR_AddBankInfo(%struct.powerkey_state_t* nocapture noundef %0, i32* nocapture noundef %1, i32 noundef %2) local_unnamed_addr #5 !dbg !11404 {
  call void @llvm.dbg.value(metadata %struct.powerkey_state_t* %0, metadata !11408, metadata !DIExpression()), !dbg !11411
  call void @llvm.dbg.value(metadata i32* %1, metadata !11409, metadata !DIExpression()), !dbg !11411
  call void @llvm.dbg.value(metadata i32 %2, metadata !11410, metadata !DIExpression()), !dbg !11411
  %4 = load i32, i32* %1, align 4, !dbg !11412
  %5 = getelementptr inbounds %struct.powerkey_state_t, %struct.powerkey_state_t* %0, i32 %4, i32 0, !dbg !11414
  %6 = load i32, i32* %5, align 4, !dbg !11414
  %7 = icmp eq i32 %6, %2, !dbg !11415
  br i1 %7, label %8, label %12, !dbg !11416

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.powerkey_state_t, %struct.powerkey_state_t* %0, i32 %4, i32 1, !dbg !11417
  %10 = load i32, i32* %9, align 4, !dbg !11419
  %11 = add i32 %10, 1, !dbg !11419
  store i32 %11, i32* %9, align 4, !dbg !11419
  br label %17, !dbg !11420

12:                                               ; preds = %3
  %13 = add i32 %4, 1, !dbg !11421
  store i32 %13, i32* %1, align 4, !dbg !11421
  %14 = getelementptr inbounds %struct.powerkey_state_t, %struct.powerkey_state_t* %0, i32 %13, i32 1, !dbg !11423
  store i32 1, i32* %14, align 4, !dbg !11424
  %15 = load i32, i32* %1, align 4, !dbg !11425
  %16 = getelementptr inbounds %struct.powerkey_state_t, %struct.powerkey_state_t* %0, i32 %15, i32 0, !dbg !11426
  store i32 %2, i32* %16, align 4, !dbg !11427
  br label %17

17:                                               ; preds = %12, %8
  ret void, !dbg !11428
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_NOR_Construct_BankInfo(i32 noundef %0, i32 noundef %1, %struct.powerkey_state_t* noundef %2, %struct.powerkey_state_t* nocapture noundef readonly %3) local_unnamed_addr #0 !dbg !11429 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11433, metadata !DIExpression()), !dbg !11442
  call void @llvm.dbg.value(metadata i32 %1, metadata !11434, metadata !DIExpression()), !dbg !11442
  call void @llvm.dbg.value(metadata %struct.powerkey_state_t* %2, metadata !11435, metadata !DIExpression()), !dbg !11442
  call void @llvm.dbg.value(metadata %struct.powerkey_state_t* %3, metadata !11436, metadata !DIExpression()), !dbg !11442
  call void @llvm.dbg.value(metadata i32 0, metadata !11437, metadata !DIExpression()), !dbg !11442
  call void @llvm.dbg.value(metadata i32 0, metadata !11438, metadata !DIExpression()), !dbg !11442
  %5 = bitcast %struct.powerkey_state_t* %2 to i8*, !dbg !11443
  %6 = tail call i8* @memset(i8* noundef %5, i32 noundef 0, i32 noundef 64) #21, !dbg !11444
  call void @llvm.dbg.value(metadata i32 0, metadata !11441, metadata !DIExpression()), !dbg !11442
  call void @llvm.dbg.value(metadata i32 0, metadata !11440, metadata !DIExpression()), !dbg !11442
  call void @llvm.dbg.value(metadata i32 0, metadata !11438, metadata !DIExpression()), !dbg !11442
  call void @llvm.dbg.value(metadata i32 0, metadata !11437, metadata !DIExpression()), !dbg !11442
  call void @llvm.dbg.value(metadata i32 %0, metadata !11433, metadata !DIExpression()), !dbg !11442
  call void @llvm.dbg.value(metadata i32 %1, metadata !11434, metadata !DIExpression()), !dbg !11442
  %7 = icmp eq i32 %1, 0, !dbg !11445
  br i1 %7, label %53, label %8, !dbg !11448

8:                                                ; preds = %4, %46
  %9 = phi i32 [ %51, %46 ], [ 0, %4 ]
  %10 = phi i32 [ %23, %46 ], [ 0, %4 ]
  %11 = phi i32 [ %49, %46 ], [ 0, %4 ]
  %12 = phi i32 [ %20, %46 ], [ 0, %4 ]
  %13 = phi i32 [ %48, %46 ], [ %0, %4 ]
  %14 = phi i32 [ %47, %46 ], [ %1, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !11441, metadata !DIExpression()), !dbg !11442
  call void @llvm.dbg.value(metadata i32 %10, metadata !11440, metadata !DIExpression()), !dbg !11442
  call void @llvm.dbg.value(metadata i32 %11, metadata !11438, metadata !DIExpression()), !dbg !11442
  call void @llvm.dbg.value(metadata i32 %12, metadata !11437, metadata !DIExpression()), !dbg !11442
  call void @llvm.dbg.value(metadata i32 %13, metadata !11433, metadata !DIExpression()), !dbg !11442
  call void @llvm.dbg.value(metadata i32 %14, metadata !11434, metadata !DIExpression()), !dbg !11442
  %15 = getelementptr inbounds %struct.powerkey_state_t, %struct.powerkey_state_t* %3, i32 %12, i32 1, !dbg !11449
  %16 = load i32, i32* %15, align 4, !dbg !11449
  %17 = icmp ult i32 %9, %16, !dbg !11452
  %18 = xor i1 %17, true, !dbg !11453
  %19 = zext i1 %18 to i32, !dbg !11453
  %20 = add i32 %12, %19, !dbg !11453
  call void @llvm.dbg.value(metadata i32 undef, metadata !11441, metadata !DIExpression()), !dbg !11442
  call void @llvm.dbg.value(metadata i32 %20, metadata !11437, metadata !DIExpression()), !dbg !11442
  %21 = getelementptr inbounds %struct.powerkey_state_t, %struct.powerkey_state_t* %3, i32 %20, i32 0, !dbg !11454
  %22 = load i32, i32* %21, align 4, !dbg !11454
  %23 = add i32 %22, %10, !dbg !11455
  call void @llvm.dbg.value(metadata i32 %23, metadata !11440, metadata !DIExpression()), !dbg !11442
  %24 = icmp ult i32 %23, %13, !dbg !11456
  br i1 %24, label %46, label %25, !dbg !11458

25:                                               ; preds = %8
  %26 = sub i32 %23, %13, !dbg !11459
  call void @llvm.dbg.value(metadata i32 %26, metadata !11439, metadata !DIExpression()), !dbg !11442
  %27 = icmp ult i32 %14, %26, !dbg !11461
  %28 = select i1 %27, i32 %14, i32 %26, !dbg !11463
  call void @llvm.dbg.value(metadata i32 %28, metadata !11439, metadata !DIExpression()), !dbg !11442
  %29 = getelementptr inbounds %struct.powerkey_state_t, %struct.powerkey_state_t* %2, i32 %11, i32 0, !dbg !11464
  %30 = load i32, i32* %29, align 4, !dbg !11464
  %31 = icmp eq i32 %30, %28, !dbg !11466
  br i1 %31, label %32, label %36, !dbg !11467

32:                                               ; preds = %25
  %33 = getelementptr inbounds %struct.powerkey_state_t, %struct.powerkey_state_t* %2, i32 %11, i32 1, !dbg !11468
  %34 = load i32, i32* %33, align 4, !dbg !11470
  %35 = add i32 %34, 1, !dbg !11470
  store i32 %35, i32* %33, align 4, !dbg !11470
  br label %42, !dbg !11471

36:                                               ; preds = %25
  %37 = icmp ne i32 %30, 0, !dbg !11472
  %38 = zext i1 %37 to i32, !dbg !11475
  %39 = add nsw i32 %11, %38, !dbg !11475
  call void @llvm.dbg.value(metadata i32 %39, metadata !11438, metadata !DIExpression()), !dbg !11442
  %40 = getelementptr inbounds %struct.powerkey_state_t, %struct.powerkey_state_t* %2, i32 %39, i32 1, !dbg !11476
  store i32 1, i32* %40, align 4, !dbg !11477
  %41 = getelementptr inbounds %struct.powerkey_state_t, %struct.powerkey_state_t* %2, i32 %39, i32 0, !dbg !11478
  store i32 %28, i32* %41, align 4, !dbg !11479
  br label %42

42:                                               ; preds = %36, %32
  %43 = phi i32 [ %11, %32 ], [ %39, %36 ], !dbg !11442
  call void @llvm.dbg.value(metadata i32 %43, metadata !11438, metadata !DIExpression()), !dbg !11442
  %44 = add i32 %28, %13, !dbg !11480
  call void @llvm.dbg.value(metadata i32 %44, metadata !11433, metadata !DIExpression()), !dbg !11442
  %45 = sub i32 %14, %28, !dbg !11481
  call void @llvm.dbg.value(metadata i32 %45, metadata !11434, metadata !DIExpression()), !dbg !11442
  br label %46, !dbg !11482

46:                                               ; preds = %8, %42
  %47 = phi i32 [ %45, %42 ], [ %14, %8 ]
  %48 = phi i32 [ %44, %42 ], [ %13, %8 ]
  %49 = phi i32 [ %43, %42 ], [ %11, %8 ], !dbg !11483
  call void @llvm.dbg.value(metadata i32 %49, metadata !11438, metadata !DIExpression()), !dbg !11442
  call void @llvm.dbg.value(metadata i32 %48, metadata !11433, metadata !DIExpression()), !dbg !11442
  call void @llvm.dbg.value(metadata i32 %47, metadata !11434, metadata !DIExpression()), !dbg !11442
  %50 = add nuw i32 %9, 1, !dbg !11484
  %51 = select i1 %17, i32 %50, i32 1, !dbg !11484
  call void @llvm.dbg.value(metadata i32 %51, metadata !11441, metadata !DIExpression()), !dbg !11442
  call void @llvm.dbg.value(metadata i32 %23, metadata !11440, metadata !DIExpression()), !dbg !11442
  call void @llvm.dbg.value(metadata i32 %20, metadata !11437, metadata !DIExpression()), !dbg !11442
  %52 = icmp eq i32 %47, 0, !dbg !11445
  br i1 %52, label %53, label %8, !dbg !11448, !llvm.loop !11485

53:                                               ; preds = %46, %4
  ret i32 0, !dbg !11487
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Init_NOR() local_unnamed_addr #0 !dbg !11488 {
  %1 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !11492
  %2 = load i32, i32* @cmem_nor_index, align 4, !dbg !11493
  %3 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 3, i32 0, !dbg !11492
  store %struct.powerkey_state_t* %3, %struct.powerkey_state_t** @BlockLayout, align 4, !dbg !11494
  %4 = tail call i32 @custom_get_fat_addr() #21, !dbg !11495
  %5 = tail call i32 @custom_get_fat_len() #21, !dbg !11496
  %6 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !11497
  %7 = load i32, i32* @cmem_nor_index, align 4, !dbg !11498
  %8 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %6, i32 %7, i32 4, i32 0, !dbg !11497
  %9 = tail call i32 @CMEM_NOR_Construct_BankInfo(i32 noundef %4, i32 noundef %5, %struct.powerkey_state_t* noundef getelementptr inbounds ([8 x %struct.powerkey_state_t], [8 x %struct.powerkey_state_t]* @BankInfo, i32 0, i32 0), %struct.powerkey_state_t* noundef nonnull %8) #20, !dbg !11499
  %10 = tail call i32 @custom_get_fat_addr() #21, !dbg !11500
  %11 = tail call i32 @custom_get_fat_len() #21, !dbg !11501
  %12 = tail call i32 @NOR_Construct_RegionInfo(i32 noundef %10, i32 noundef %11, %struct.powerkey_state_t* noundef getelementptr inbounds ([8 x %struct.powerkey_state_t], [8 x %struct.powerkey_state_t]* @RegionInfo, i32 0, i32 0)) #20, !dbg !11502
  call void @llvm.dbg.value(metadata i32 %12, metadata !11490, metadata !DIExpression()), !dbg !11503
  %13 = icmp eq i32 %12, 0, !dbg !11504
  br i1 %13, label %14, label %46, !dbg !11506

14:                                               ; preds = %0
  call void @llvm.dbg.value(metadata i32 0, metadata !11491, metadata !DIExpression()), !dbg !11503
  store i32 0, i32* @TOTAL_BLOCKS, align 4, !dbg !11507
  store i32 0, i32* @NOR_LARGEST_BLOCK_SIZE, align 4, !dbg !11509
  call void @llvm.dbg.value(metadata i32 0, metadata !11491, metadata !DIExpression()), !dbg !11503
  %15 = load i32, i32* getelementptr inbounds ([8 x %struct.powerkey_state_t], [8 x %struct.powerkey_state_t]* @RegionInfo, i32 0, i32 0, i32 0), align 4, !dbg !11510
  %16 = icmp eq i32 %15, 0, !dbg !11512
  br i1 %16, label %34, label %17, !dbg !11513

17:                                               ; preds = %14, %27
  %18 = phi i32 [ %31, %27 ], [ %15, %14 ]
  %19 = phi i32 [ %29, %27 ], [ 0, %14 ]
  %20 = phi i32 [ %24, %27 ], [ 0, %14 ]
  %21 = phi i32 [ %28, %27 ], [ 0, %14 ]
  call void @llvm.dbg.value(metadata i32 %19, metadata !11491, metadata !DIExpression()), !dbg !11503
  %22 = getelementptr inbounds [8 x %struct.powerkey_state_t], [8 x %struct.powerkey_state_t]* @RegionInfo, i32 0, i32 %19, i32 1, !dbg !11514
  %23 = load i32, i32* %22, align 4, !dbg !11514
  %24 = add i32 %20, %23, !dbg !11516
  %25 = icmp ugt i32 %18, %21, !dbg !11517
  br i1 %25, label %26, label %27, !dbg !11519

26:                                               ; preds = %17
  store i32 %18, i32* @NOR_LARGEST_BLOCK_SIZE, align 4, !dbg !11520
  br label %27, !dbg !11522

27:                                               ; preds = %17, %26
  %28 = phi i32 [ %21, %17 ], [ %18, %26 ]
  %29 = add nuw nsw i32 %19, 1, !dbg !11523
  call void @llvm.dbg.value(metadata i32 %29, metadata !11491, metadata !DIExpression()), !dbg !11503
  %30 = getelementptr inbounds [8 x %struct.powerkey_state_t], [8 x %struct.powerkey_state_t]* @RegionInfo, i32 0, i32 %29, i32 0, !dbg !11510
  %31 = load i32, i32* %30, align 4, !dbg !11510
  %32 = icmp eq i32 %31, 0, !dbg !11512
  br i1 %32, label %33, label %17, !dbg !11513, !llvm.loop !11524

33:                                               ; preds = %27
  store i32 %24, i32* @TOTAL_BLOCKS, align 4, !dbg !11516
  br label %34, !dbg !11513

34:                                               ; preds = %33, %14
  %35 = phi i32 [ %28, %33 ], [ 0, %14 ], !dbg !11526
  %36 = mul i32 %35, -5, !dbg !11527
  %37 = add i32 %36, 262144, !dbg !11528
  %38 = lshr i32 %37, 9, !dbg !11529
  store i32 %38, i32* @TOTAL_SECTORS, align 4, !dbg !11530
  %39 = tail call i32 @CMEM_Init_NOR_MTD_Common() #20, !dbg !11531
  call void @llvm.dbg.value(metadata i32 0, metadata !11490, metadata !DIExpression()), !dbg !11503
  %40 = load %struct.CMEMEntryID*, %struct.CMEMEntryID** @cmem_id, align 4, !dbg !11532
  %41 = getelementptr inbounds %struct.CMEMEntryID, %struct.CMEMEntryID* %40, i32 0, i32 0, !dbg !11533
  %42 = load i8, i8* %41, align 1, !dbg !11533
  %43 = icmp eq i8 %42, 3, !dbg !11534
  br i1 %43, label %44, label %46, !dbg !11534

44:                                               ; preds = %34
  %45 = tail call i32 @CMEM_Init_NOR_MTD_SF() #20, !dbg !11535
  call void @llvm.dbg.value(metadata i32 %45, metadata !11490, metadata !DIExpression()), !dbg !11503
  br label %46, !dbg !11537

46:                                               ; preds = %44, %34, %0
  %47 = phi i32 [ %12, %0 ], [ %45, %44 ], [ 3, %34 ], !dbg !11503
  ret i32 %47, !dbg !11538
}

; Function Attrs: noinline nounwind optsize
define dso_local void @CMEM_Init_nor_list(i32 noundef %0) local_unnamed_addr #0 !dbg !11539 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11543, metadata !DIExpression()), !dbg !11544
  %2 = icmp eq i32 %0, 0, !dbg !11545
  br i1 %2, label %3, label %9, !dbg !11547

3:                                                ; preds = %1
  %4 = tail call i32 @CMEM_Index() #21, !dbg !11548
  store i32 %4, i32* @cmem_nor_index, align 4, !dbg !11550
  %5 = icmp slt i32 %4, 0, !dbg !11551
  br i1 %5, label %6, label %7, !dbg !11553

6:                                                ; preds = %3
  tail call void @Flash_ReturnReady() #21, !dbg !11554
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.152, i32 0, i32 0), i32 noundef 921, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.CMEM_Init_nor_list, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.153, i32 0, i32 0)) #23, !dbg !11554
  unreachable, !dbg !11554

7:                                                ; preds = %3
  %8 = tail call %struct.CMEMEntryID* @CMEM_GetIDEntry(i32 noundef %4) #21, !dbg !11559
  store %struct.CMEMEntryID* %8, %struct.CMEMEntryID** @cmem_id, align 4, !dbg !11560
  br label %9, !dbg !11561

9:                                                ; preds = %7, %1
  store %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !11562
  ret void, !dbg !11563
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @ComboMem_Initialize() local_unnamed_addr #0 !dbg !11564 {
  tail call void @CMEM_Init_nor_list(i32 noundef 0) #20, !dbg !11565
  %1 = tail call i32 @CMEM_Init_NOR() #20, !dbg !11566
  ret i32 %1, !dbg !11567
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Init_FullDriver() local_unnamed_addr #0 !dbg !11568 {
  tail call void @CMEM_Init_nor_list(i32 noundef 0) #20, !dbg !11571
  %1 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !11572
  %2 = load i32, i32* @cmem_nor_index, align 4, !dbg !11573
  %3 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 1, !dbg !11574
  %4 = load i16, i16* %3, align 2, !dbg !11574
  %5 = zext i16 %4 to i32, !dbg !11572
  store i32 %5, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !11575
  %6 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 3, i32 0, !dbg !11576
  store %struct.powerkey_state_t* %6, %struct.powerkey_state_t** @BlockLayout, align 4, !dbg !11577
  %7 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 4, i32 0, !dbg !11578
  %8 = bitcast %struct.powerkey_state_t* %7 to i8*, !dbg !11578
  %9 = tail call i8* @memcpy(i8* noundef bitcast ([8 x %struct.powerkey_state_t]* @BankInfo to i8*), i8* noundef nonnull %8, i32 noundef 64) #21, !dbg !11579
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @StatusMap, i32 0, i32 0), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 12), align 4, !dbg !11580
  store %struct.SF_MTD_CMD* @sf_dal_data_cmd, %struct.SF_MTD_CMD** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 13), align 4, !dbg !11581
  store i16 0, i16* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 23), align 2, !dbg !11582
  store i32 xor (i32 ptrtoint ([8 x %struct.powerkey_state_t]* @EntireDiskRegionInfo to i32), i32 -1), i32* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 0), align 4, !dbg !11583
  store i8* inttoptr (i32 134217728 to i8*), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 1), align 4, !dbg !11584
  %10 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !11585
  %11 = load i32, i32* @cmem_nor_index, align 4, !dbg !11586
  %12 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %10, i32 %11, i32 2, !dbg !11587
  %13 = load i32, i32* %12, align 4, !dbg !11587
  %14 = tail call i32 @SF_DAL_Init_Driver(%struct.NOR_MTD_Driver* noundef nonnull @NORFlashMtd, %struct.SF_MTD_Data* noundef nonnull @EntireDiskMtdData, i32 noundef 134217728, i32 noundef %13) #21, !dbg !11588
  call void @llvm.dbg.value(metadata i32 %14, metadata !11570, metadata !DIExpression()), !dbg !11589
  %15 = icmp eq i32 %14, -120, !dbg !11590
  br i1 %15, label %16, label %17, !dbg !11593

16:                                               ; preds = %0
  tail call void @Flash_ReturnReady() #21, !dbg !11594
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.152, i32 0, i32 0), i32 noundef 1063, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.CMEM_Init_FullDriver, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.153, i32 0, i32 0)) #23, !dbg !11594
  unreachable, !dbg !11594

17:                                               ; preds = %0
  %18 = tail call i32 @NOR_Get_FlashSizeFromBankInfo(%struct.powerkey_state_t* noundef getelementptr inbounds ([8 x %struct.powerkey_state_t], [8 x %struct.powerkey_state_t]* @BankInfo, i32 0, i32 0)) #20, !dbg !11596
  store i32 %18, i32* getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 0), align 4, !dbg !11597
  %19 = tail call i32 @NOR_Construct_RegionInfo(i32 noundef 0, i32 noundef %18, %struct.powerkey_state_t* noundef getelementptr inbounds ([8 x %struct.powerkey_state_t], [8 x %struct.powerkey_state_t]* @EntireDiskRegionInfo, i32 0, i32 0)) #20, !dbg !11598
  store %struct.powerkey_state_t* getelementptr inbounds ([8 x %struct.powerkey_state_t], [8 x %struct.powerkey_state_t]* @EntireDiskRegionInfo, i32 0, i32 0), %struct.powerkey_state_t** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 5), align 4, !dbg !11599
  store %struct.NOR_MTD_Driver* @NORFlashMtd, %struct.NOR_MTD_Driver** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 1), align 4, !dbg !11600
  store i8* bitcast (%struct.SF_MTD_Data* @EntireDiskMtdData to i8*), i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !11601
  store i8 0, i8* getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 4), align 4, !dbg !11602
  ret i32 0, !dbg !11603
}

; Function Attrs: optsize
declare dso_local i8* @memcpy(i8* noundef, i8* noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @CreateFDMLock() local_unnamed_addr #8 !dbg !11604 {
  ret void, !dbg !11605
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @GetFDMLock() local_unnamed_addr #0 !dbg !11606 {
  %1 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !11609
  call void @llvm.dbg.value(metadata i32 %1, metadata !11608, metadata !DIExpression()), !dbg !11610
  %2 = load i1, i1* @FDMMutex, align 4, !dbg !11611
  br i1 %2, label %4, label %3, !dbg !11613

3:                                                ; preds = %0
  store i1 true, i1* @FDMMutex, align 4, !dbg !11614
  br label %4, !dbg !11616

4:                                                ; preds = %0, %3
  %5 = phi i32 [ 0, %3 ], [ -2, %0 ], !dbg !11617
  tail call void @RestoreIRQMask(i32 noundef %1) #21, !dbg !11617
  ret i32 %5, !dbg !11618
}

; Function Attrs: noinline nounwind optsize
define dso_local void @FreeFDMLock() local_unnamed_addr #0 !dbg !11619 {
  %1 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !11622
  call void @llvm.dbg.value(metadata i32 %1, metadata !11621, metadata !DIExpression()), !dbg !11623
  %2 = load i1, i1* @FDMMutex, align 4, !dbg !11624
  br i1 %2, label %3, label %4, !dbg !11626

3:                                                ; preds = %0
  store i1 false, i1* @FDMMutex, align 4, !dbg !11627
  tail call void @RestoreIRQMask(i32 noundef %1) #21, !dbg !11629
  ret void, !dbg !11630

4:                                                ; preds = %0
  tail call void @RestoreIRQMask(i32 noundef %1) #21, !dbg !11631
  tail call void @Flash_ReturnReady() #21, !dbg !11633
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.158, i32 0, i32 0), i32 noundef 112, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.FreeFDMLock, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.159, i32 0, i32 0)) #23, !dbg !11633
  unreachable, !dbg !11633
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @create_FDM_lock() local_unnamed_addr #8 !dbg !11637 {
  ret void, !dbg !11638
}

; Function Attrs: noinline nounwind optsize
define dso_local void @retrieve_FDM_lock() local_unnamed_addr #0 !dbg !11639 {
  br label %1, !dbg !11642

1:                                                ; preds = %1, %0
  %2 = tail call i32 @GetFDMLock() #20, !dbg !11643
  call void @llvm.dbg.value(metadata i32 %2, metadata !11641, metadata !DIExpression()), !dbg !11645
  %3 = icmp eq i32 %2, 0, !dbg !11646
  br i1 %3, label %4, label %1, !dbg !11647, !llvm.loop !11648

4:                                                ; preds = %1
  ret void, !dbg !11650
}

; Function Attrs: noinline nounwind optsize
define dso_local void @release_FDM_lock() local_unnamed_addr #0 !dbg !11651 {
  tail call void @FreeFDMLock() #20, !dbg !11652
  ret void, !dbg !11653
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @readRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !11654 {
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* %0, metadata !11697, metadata !DIExpression()), !dbg !11703
  call void @llvm.dbg.value(metadata i32 %1, metadata !11698, metadata !DIExpression()), !dbg !11703
  call void @llvm.dbg.value(metadata i8* %2, metadata !11699, metadata !DIExpression()), !dbg !11703
  call void @llvm.dbg.value(metadata i32 %3, metadata !11700, metadata !DIExpression()), !dbg !11703
  %5 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 0, !dbg !11704
  %6 = load i32, i32* %5, align 4, !dbg !11704
  call void @llvm.dbg.value(metadata i32 %6, metadata !11702, metadata !DIExpression()), !dbg !11703
  %7 = icmp ule i32 %6, %1, !dbg !11705
  %8 = add i32 %3, %1
  %9 = icmp ugt i32 %8, %6
  %10 = or i1 %7, %9, !dbg !11707
  br i1 %10, label %26, label %11, !dbg !11707

11:                                               ; preds = %4
  %12 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 2, !dbg !11708
  %13 = bitcast i8** %12 to %struct.NOR_Flash_MTD_Data**, !dbg !11708
  %14 = load %struct.NOR_Flash_MTD_Data*, %struct.NOR_Flash_MTD_Data** %13, align 4, !dbg !11708
  %15 = getelementptr inbounds %struct.NOR_Flash_MTD_Data, %struct.NOR_Flash_MTD_Data* %14, i32 0, i32 1, !dbg !11709
  %16 = load i8*, i8** %15, align 4, !dbg !11709
  %17 = ptrtoint i8* %16 to i32, !dbg !11710
  %18 = add i32 %17, %1, !dbg !11711
  call void @llvm.dbg.value(metadata i32 %18, metadata !11701, metadata !DIExpression()), !dbg !11703
  %19 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 4, !dbg !11712
  %20 = load i8, i8* %19, align 4, !dbg !11712, !range !3343
  %21 = icmp eq i8 %20, 0, !dbg !11712
  br i1 %21, label %22, label %23, !dbg !11714

22:                                               ; preds = %11
  tail call fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef nonnull %0) #20, !dbg !11715
  br label %23, !dbg !11717

23:                                               ; preds = %22, %11
  tail call void @retrieve_FDM_lock() #20, !dbg !11718
  %24 = inttoptr i32 %18 to i8*, !dbg !11719
  %25 = tail call i8* @memcpy(i8* noundef %2, i8* noundef %24, i32 noundef %3) #21, !dbg !11720
  tail call void @release_FDM_lock() #20, !dbg !11721
  br label %26, !dbg !11722

26:                                               ; preds = %4, %23
  %27 = phi i32 [ 0, %23 ], [ 2, %4 ], !dbg !11703
  ret i32 %27, !dbg !11723
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef %0) unnamed_addr #0 !dbg !11724 {
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* %0, metadata !11728, metadata !DIExpression()), !dbg !11730
  %2 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 4, !dbg !11731
  %3 = load i8, i8* %2, align 4, !dbg !11731, !range !3343
  %4 = icmp eq i8 %3, 0, !dbg !11731
  br i1 %4, label %5, label %18, !dbg !11733

5:                                                ; preds = %1
  tail call void @retrieve_FDM_lock() #20, !dbg !11734
  %6 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 1, !dbg !11735
  %7 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %6, align 4, !dbg !11735
  %8 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %7, i32 0, i32 0, !dbg !11736
  %9 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %8, align 4, !dbg !11736
  %10 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 2, !dbg !11737
  %11 = load i8*, i8** %10, align 4, !dbg !11737
  %12 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 3, !dbg !11738
  %13 = bitcast %struct.NOR_MTD_FlashInfo* %12 to i8*, !dbg !11739
  %14 = tail call i32 %9(i8* noundef %11, i8* noundef nonnull %13) #21, !dbg !11740
  call void @llvm.dbg.value(metadata i32 %14, metadata !11729, metadata !DIExpression()), !dbg !11730
  tail call void @release_FDM_lock() #20, !dbg !11741
  %15 = icmp slt i32 %14, 0, !dbg !11742
  br i1 %15, label %16, label %17, !dbg !11744

16:                                               ; preds = %5
  tail call void @Flash_ReturnReady() #21, !dbg !11745
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.158, i32 0, i32 0), i32 noundef 191, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.MountDevice, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.159, i32 0, i32 0)) #23, !dbg !11745
  unreachable, !dbg !11745

17:                                               ; preds = %5
  store i8 1, i8* %2, align 4, !dbg !11750
  br label %18, !dbg !11751

18:                                               ; preds = %1, %17
  ret void, !dbg !11751
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @writeRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !11752 {
  %5 = alloca i16, align 2
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* %0, metadata !11754, metadata !DIExpression()), !dbg !11775
  call void @llvm.dbg.value(metadata i32 %1, metadata !11755, metadata !DIExpression()), !dbg !11775
  call void @llvm.dbg.value(metadata i8* %2, metadata !11756, metadata !DIExpression()), !dbg !11775
  call void @llvm.dbg.value(metadata i32 %3, metadata !11757, metadata !DIExpression()), !dbg !11775
  %6 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 0, !dbg !11776
  %7 = load i32, i32* %6, align 4, !dbg !11776
  call void @llvm.dbg.value(metadata i32 %7, metadata !11760, metadata !DIExpression()), !dbg !11775
  call void @llvm.dbg.value(metadata i32 0, metadata !11761, metadata !DIExpression()), !dbg !11775
  call void @llvm.dbg.value(metadata i32 0, metadata !11762, metadata !DIExpression()), !dbg !11775
  %8 = icmp ugt i32 %7, %1, !dbg !11777
  br i1 %8, label %9, label %101, !dbg !11779

9:                                                ; preds = %4
  %10 = add i32 %3, %1, !dbg !11780
  %11 = icmp ugt i32 %10, %7, !dbg !11782
  br i1 %11, label %101, label %12, !dbg !11783

12:                                               ; preds = %9
  %13 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 4, !dbg !11784
  %14 = load i8, i8* %13, align 4, !dbg !11784, !range !3343
  %15 = icmp eq i8 %14, 0, !dbg !11784
  br i1 %15, label %16, label %17, !dbg !11786

16:                                               ; preds = %12
  tail call fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef nonnull %0) #20, !dbg !11787
  br label %17, !dbg !11789

17:                                               ; preds = %16, %12
  tail call void @retrieve_FDM_lock() #20, !dbg !11790
  %18 = bitcast i16* %5 to i8*, !dbg !11791
  call void @llvm.dbg.value(metadata i32 0, metadata !11761, metadata !DIExpression()), !dbg !11775
  call void @llvm.dbg.value(metadata i32 0, metadata !11762, metadata !DIExpression()), !dbg !11775
  %19 = icmp eq i32 %3, 0, !dbg !11792
  br i1 %19, label %99, label %20, !dbg !11793

20:                                               ; preds = %17
  %21 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 2
  %22 = ptrtoint i8* %2 to i32
  %23 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 1
  %24 = getelementptr inbounds i8, i8* %18, i32 1
  br label %25, !dbg !11793

25:                                               ; preds = %20, %96
  %26 = phi i32 [ 0, %20 ], [ %97, %96 ]
  call void @llvm.dbg.value(metadata i32 %26, metadata !11762, metadata !DIExpression()), !dbg !11775
  %27 = load i8*, i8** %21, align 4, !dbg !11794
  %28 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !11795
  %29 = bitcast i8* %28 to i8**, !dbg !11795
  %30 = load i8*, i8** %29, align 4, !dbg !11795
  %31 = ptrtoint i8* %30 to i32, !dbg !11796
  %32 = add i32 %31, %1, !dbg !11797
  %33 = add i32 %32, %26, !dbg !11798
  call void @llvm.dbg.value(metadata i32 %33, metadata !11758, metadata !DIExpression()), !dbg !11775
  %34 = add i32 %26, %22, !dbg !11799
  call void @llvm.dbg.value(metadata i32 %34, metadata !11759, metadata !DIExpression()), !dbg !11775
  %35 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %23, align 4, !dbg !11800
  %36 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %35, i32 0, i32 2, !dbg !11801
  %37 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %36, align 4, !dbg !11801
  %38 = add i32 %26, %1, !dbg !11802
  %39 = call i32 @BlockIndex(i8* noundef %27, i32 noundef %38) #21, !dbg !11803
  %40 = call i8* %37(i8* noundef %27, i32 noundef %39, i32 noundef 0) #21, !dbg !11804
  %41 = and i32 %33, 1, !dbg !11805
  %42 = icmp eq i32 %41, 0, !dbg !11805
  br i1 %42, label %43, label %46, !dbg !11806

43:                                               ; preds = %25
  %44 = sub i32 %3, %26, !dbg !11807
  %45 = icmp eq i32 %44, 1, !dbg !11808
  br i1 %45, label %46, label %57, !dbg !11809

46:                                               ; preds = %43, %25
  %47 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %23, align 4, !dbg !11810
  %48 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %47, i32 0, i32 4, !dbg !11812
  %49 = load i32 (i8*, i8*, i8*, i32)*, i32 (i8*, i8*, i8*, i32)** %48, align 4, !dbg !11812
  %50 = load i8*, i8** %21, align 4, !dbg !11813
  %51 = inttoptr i32 %33 to i8*, !dbg !11814
  %52 = inttoptr i32 %34 to i8*, !dbg !11815
  %53 = call i32 %49(i8* noundef %50, i8* noundef %51, i8* noundef %52, i32 noundef 1) #21, !dbg !11816
  call void @llvm.dbg.value(metadata i32 %53, metadata !11761, metadata !DIExpression()), !dbg !11775
  %54 = icmp eq i32 %53, 0, !dbg !11817
  br i1 %54, label %55, label %99, !dbg !11819

55:                                               ; preds = %46
  %56 = add i32 %26, 1, !dbg !11820
  call void @llvm.dbg.value(metadata i32 %56, metadata !11762, metadata !DIExpression()), !dbg !11775
  br label %96, !dbg !11821

57:                                               ; preds = %43
  %58 = load i8*, i8** %21, align 4, !dbg !11822
  %59 = call i32 @BlockIndex(i8* noundef %58, i32 noundef %38) #21, !dbg !11823
  %60 = call i32 @BlockSize(i8* noundef %58, i32 noundef %59) #21, !dbg !11824
  call void @llvm.dbg.value(metadata i32 %60, metadata !11763, metadata !DIExpression()), !dbg !11825
  call void @llvm.dbg.value(metadata i32 %44, metadata !11767, metadata !DIExpression()), !dbg !11825
  %61 = add i32 %60, %33, !dbg !11826
  %62 = sub i32 0, %60, !dbg !11827
  %63 = and i32 %61, %62, !dbg !11828
  call void @llvm.dbg.value(metadata i32 %63, metadata !11768, metadata !DIExpression()), !dbg !11825
  %64 = add i32 %32, %3, !dbg !11829
  %65 = icmp ugt i32 %64, %63, !dbg !11831
  %66 = sub i32 %63, %33
  %67 = select i1 %65, i32 %66, i32 %44, !dbg !11832
  call void @llvm.dbg.value(metadata i32 %67, metadata !11767, metadata !DIExpression()), !dbg !11825
  %68 = and i32 %67, -2, !dbg !11833
  call void @llvm.dbg.value(metadata i32 %68, metadata !11767, metadata !DIExpression()), !dbg !11825
  %69 = icmp ne i32 %68, 2, !dbg !11834
  %70 = and i32 %34, 1
  %71 = icmp eq i32 %70, 0
  %72 = select i1 %69, i1 true, i1 %71, !dbg !11835
  br i1 %72, label %85, label %73, !dbg !11835

73:                                               ; preds = %57
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %18) #22, !dbg !11791
  call void @llvm.dbg.value(metadata i8* %18, metadata !11774, metadata !DIExpression()), !dbg !11836
  %74 = inttoptr i32 %34 to i8*, !dbg !11837
  %75 = load i8, i8* %74, align 1, !dbg !11838
  call void @llvm.dbg.value(metadata i8 undef, metadata !11769, metadata !DIExpression()), !dbg !11836
  store i8 %75, i8* %18, align 2, !dbg !11839
  %76 = getelementptr inbounds i8, i8* %74, i32 1, !dbg !11840
  %77 = load i8, i8* %76, align 1, !dbg !11841
  store i8 %77, i8* %24, align 1, !dbg !11842
  %78 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %23, align 4, !dbg !11843
  %79 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %78, i32 0, i32 4, !dbg !11844
  %80 = load i32 (i8*, i8*, i8*, i32)*, i32 (i8*, i8*, i8*, i32)** %79, align 4, !dbg !11844
  %81 = load i8*, i8** %21, align 4, !dbg !11845
  %82 = inttoptr i32 %33 to i8*, !dbg !11846
  call void @llvm.dbg.value(metadata i16* %5, metadata !11769, metadata !DIExpression(DW_OP_deref)), !dbg !11836
  %83 = call i32 %80(i8* noundef %81, i8* noundef %82, i8* noundef nonnull %18, i32 noundef 2) #21, !dbg !11847
  call void @llvm.dbg.value(metadata i32 %83, metadata !11761, metadata !DIExpression()), !dbg !11775
  %84 = icmp eq i32 %83, 0, !dbg !11848
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %18) #22, !dbg !11850
  br i1 %84, label %94, label %99

85:                                               ; preds = %57
  %86 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %23, align 4, !dbg !11851
  %87 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %86, i32 0, i32 4, !dbg !11855
  %88 = load i32 (i8*, i8*, i8*, i32)*, i32 (i8*, i8*, i8*, i32)** %87, align 4, !dbg !11855
  %89 = load i8*, i8** %21, align 4, !dbg !11856
  %90 = inttoptr i32 %33 to i8*, !dbg !11857
  %91 = inttoptr i32 %34 to i8*, !dbg !11858
  %92 = call i32 %88(i8* noundef %89, i8* noundef %90, i8* noundef %91, i32 noundef %68) #21, !dbg !11859
  call void @llvm.dbg.value(metadata i32 %92, metadata !11761, metadata !DIExpression()), !dbg !11775
  %93 = icmp eq i32 %92, 0, !dbg !11860
  br i1 %93, label %94, label %99, !dbg !11862

94:                                               ; preds = %73, %85
  call void @llvm.dbg.value(metadata i32 0, metadata !11761, metadata !DIExpression()), !dbg !11775
  %95 = add i32 %68, %26, !dbg !11863
  call void @llvm.dbg.value(metadata i32 %83, metadata !11761, metadata !DIExpression()), !dbg !11775
  call void @llvm.dbg.value(metadata i32 %26, metadata !11762, metadata !DIExpression()), !dbg !11775
  br label %96

96:                                               ; preds = %94, %55
  %97 = phi i32 [ %56, %55 ], [ %95, %94 ], !dbg !11864
  call void @llvm.dbg.value(metadata i32 0, metadata !11761, metadata !DIExpression()), !dbg !11775
  call void @llvm.dbg.value(metadata i32 %97, metadata !11762, metadata !DIExpression()), !dbg !11775
  %98 = icmp ult i32 %97, %3, !dbg !11792
  br i1 %98, label %25, label %99, !dbg !11793, !llvm.loop !11865

99:                                               ; preds = %96, %73, %85, %46, %17
  %100 = phi i32 [ 0, %17 ], [ 5, %46 ], [ 5, %85 ], [ 5, %73 ], [ 0, %96 ]
  call void @release_FDM_lock() #20, !dbg !11867
  br label %101, !dbg !11868

101:                                              ; preds = %99, %9, %4
  %102 = phi i32 [ 2, %4 ], [ 3, %9 ], [ %100, %99 ], !dbg !11775
  ret i32 %102, !dbg !11868
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @eraseRawDiskBlock(%struct.NOR_FLASH_DISK_Data* noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !11869 {
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* %0, metadata !11873, metadata !DIExpression()), !dbg !11877
  call void @llvm.dbg.value(metadata i32 %1, metadata !11874, metadata !DIExpression()), !dbg !11877
  %3 = and i32 %1, 16777215, !dbg !11878
  call void @llvm.dbg.value(metadata i32 %3, metadata !11876, metadata !DIExpression()), !dbg !11877
  %4 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 4, !dbg !11879
  %5 = load i8, i8* %4, align 4, !dbg !11879, !range !3343
  %6 = icmp eq i8 %5, 0, !dbg !11879
  br i1 %6, label %7, label %8, !dbg !11881

7:                                                ; preds = %2
  tail call fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef nonnull %0) #20, !dbg !11882
  br label %8, !dbg !11884

8:                                                ; preds = %7, %2
  %9 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 3, i32 0, !dbg !11885
  %10 = load i32, i32* %9, align 4, !dbg !11885
  %11 = icmp ult i32 %3, %10, !dbg !11887
  br i1 %11, label %12, label %27, !dbg !11888

12:                                               ; preds = %8
  tail call void @retrieve_FDM_lock() #20, !dbg !11889
  %13 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 1, !dbg !11890
  %14 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %13, align 4, !dbg !11890
  %15 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %14, i32 0, i32 2, !dbg !11891
  %16 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %15, align 4, !dbg !11891
  %17 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 2, !dbg !11892
  %18 = load i8*, i8** %17, align 4, !dbg !11892
  %19 = tail call i8* %16(i8* noundef %18, i32 noundef %3, i32 noundef 0) #21, !dbg !11893
  %20 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %13, align 4, !dbg !11894
  %21 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %20, i32 0, i32 3, !dbg !11895
  %22 = load i32 (i8*, i32)*, i32 (i8*, i32)** %21, align 4, !dbg !11895
  %23 = load i8*, i8** %17, align 4, !dbg !11896
  %24 = tail call i32 %22(i8* noundef %23, i32 noundef %1) #21, !dbg !11897
  call void @llvm.dbg.value(metadata i32 %24, metadata !11875, metadata !DIExpression()), !dbg !11877
  tail call void @release_FDM_lock() #20, !dbg !11898
  %25 = icmp eq i32 %24, 0, !dbg !11899
  %26 = select i1 %25, i32 0, i32 6, !dbg !11877
  br label %27, !dbg !11877

27:                                               ; preds = %12, %8
  %28 = phi i32 [ 2, %8 ], [ %26, %12 ], !dbg !11877
  ret i32 %28, !dbg !11901
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_init() local_unnamed_addr #0 !dbg !11902 {
  %1 = load i1, i1* @flash_init_status, align 4, !dbg !11903
  br i1 %1, label %3, label %2, !dbg !11905

2:                                                ; preds = %0
  tail call void @Custom_NOR_Init() #21, !dbg !11906
  tail call fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData) #20, !dbg !11908
  store i1 true, i1* @flash_init_status, align 4, !dbg !11909
  br label %3, !dbg !11910

3:                                                ; preds = %2, %0
  ret i32 0, !dbg !11911
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @get_NOR_init_status() local_unnamed_addr #2 section ".ram_code" !dbg !11912 {
  %1 = load i1, i1* @flash_init_status, align 4, !dbg !11913
  %2 = select i1 %1, i32 0, i32 -5, !dbg !11913
  ret i32 %2, !dbg !11914
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_ReadPhysicalPage(i32 noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !11915 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11919, metadata !DIExpression()), !dbg !11926
  call void @llvm.dbg.value(metadata i32 %1, metadata !11920, metadata !DIExpression()), !dbg !11926
  call void @llvm.dbg.value(metadata i8* %2, metadata !11921, metadata !DIExpression()), !dbg !11926
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !11922, metadata !DIExpression()), !dbg !11926
  %4 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !11927
  call void @llvm.dbg.value(metadata i8* %4, metadata !11923, metadata !DIExpression()), !dbg !11926
  %5 = tail call i8* @BlockAddress(i8* noundef %4, i32 noundef %0) #21, !dbg !11928
  %6 = ptrtoint i8* %5 to i32, !dbg !11929
  %7 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !11930
  %8 = bitcast i8* %7 to i8**, !dbg !11930
  %9 = load i8*, i8** %8, align 4, !dbg !11930
  %10 = ptrtoint i8* %9 to i32, !dbg !11931
  %11 = shl i32 %1, 9, !dbg !11932
  %12 = add i32 %11, %6, !dbg !11933
  %13 = sub i32 %12, %10, !dbg !11934
  call void @llvm.dbg.value(metadata i32 %13, metadata !11925, metadata !DIExpression()), !dbg !11926
  %14 = tail call i32 @readRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %13, i8* noundef %2, i32 noundef 512) #20, !dbg !11935
  call void @llvm.dbg.value(metadata i32 %14, metadata !11924, metadata !DIExpression()), !dbg !11926
  %15 = icmp eq i32 %14, 0, !dbg !11936
  %16 = select i1 %15, i32 0, i32 -13, !dbg !11926
  ret i32 %16, !dbg !11938
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_ProgramPhysicalPage(i32 noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !11939 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11941, metadata !DIExpression()), !dbg !11948
  call void @llvm.dbg.value(metadata i32 %1, metadata !11942, metadata !DIExpression()), !dbg !11948
  call void @llvm.dbg.value(metadata i8* %2, metadata !11943, metadata !DIExpression()), !dbg !11948
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !11944, metadata !DIExpression()), !dbg !11948
  %4 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !11949
  call void @llvm.dbg.value(metadata i8* %4, metadata !11945, metadata !DIExpression()), !dbg !11948
  %5 = tail call i8* @BlockAddress(i8* noundef %4, i32 noundef %0) #21, !dbg !11950
  %6 = ptrtoint i8* %5 to i32, !dbg !11951
  %7 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !11952
  %8 = bitcast i8* %7 to i8**, !dbg !11952
  %9 = load i8*, i8** %8, align 4, !dbg !11952
  %10 = ptrtoint i8* %9 to i32, !dbg !11953
  %11 = shl i32 %1, 9, !dbg !11954
  %12 = add i32 %11, %6, !dbg !11955
  %13 = sub i32 %12, %10, !dbg !11956
  call void @llvm.dbg.value(metadata i32 %13, metadata !11947, metadata !DIExpression()), !dbg !11948
  %14 = tail call i32 @writeRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %13, i8* noundef %2, i32 noundef 512) #20, !dbg !11957
  call void @llvm.dbg.value(metadata i32 %14, metadata !11946, metadata !DIExpression()), !dbg !11948
  %15 = icmp eq i32 %14, 0, !dbg !11958
  %16 = select i1 %15, i32 0, i32 -14, !dbg !11948
  ret i32 %16, !dbg !11960
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_ErasePhysicalBlock(i32 noundef %0) local_unnamed_addr #0 !dbg !11961 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11965, metadata !DIExpression()), !dbg !11967
  %2 = tail call i32 @eraseRawDiskBlock(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %0) #20, !dbg !11968
  call void @llvm.dbg.value(metadata i32 %2, metadata !11966, metadata !DIExpression()), !dbg !11967
  %3 = icmp eq i32 %2, 0, !dbg !11969
  %4 = select i1 %3, i32 0, i32 -15, !dbg !11967
  ret i32 %4, !dbg !11971
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_BlockSize(i32 noundef %0) local_unnamed_addr #0 !dbg !11972 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11974, metadata !DIExpression()), !dbg !11977
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !11975, metadata !DIExpression()), !dbg !11977
  %2 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !11978
  call void @llvm.dbg.value(metadata i8* %2, metadata !11976, metadata !DIExpression()), !dbg !11977
  %3 = tail call i32 @BlockSize(i8* noundef %2, i32 noundef %0) #21, !dbg !11979
  ret i32 %3, !dbg !11980
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_BlockIndex(i32 noundef %0) local_unnamed_addr #0 !dbg !11981 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11983, metadata !DIExpression()), !dbg !11986
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !11984, metadata !DIExpression()), !dbg !11986
  %2 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !11987
  call void @llvm.dbg.value(metadata i8* %2, metadata !11985, metadata !DIExpression()), !dbg !11986
  %3 = tail call i32 @BlockIndex(i8* noundef %2, i32 noundef %0) #21, !dbg !11988
  ret i32 %3, !dbg !11989
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_Addr2BlockIndexOffset(i32 noundef %0, i32* nocapture noundef writeonly %1, i32* nocapture noundef writeonly %2) local_unnamed_addr #0 !dbg !11990 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11994, metadata !DIExpression()), !dbg !11999
  call void @llvm.dbg.value(metadata i32* %1, metadata !11995, metadata !DIExpression()), !dbg !11999
  call void @llvm.dbg.value(metadata i32* %2, metadata !11996, metadata !DIExpression()), !dbg !11999
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !11997, metadata !DIExpression()), !dbg !11999
  %4 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !12000
  call void @llvm.dbg.value(metadata i8* %4, metadata !11998, metadata !DIExpression()), !dbg !11999
  %5 = tail call i32 @BlockIndex(i8* noundef %4, i32 noundef %0) #21, !dbg !12001
  store i32 %5, i32* %1, align 4, !dbg !12002
  %6 = icmp eq i32 %5, -1, !dbg !12003
  br i1 %6, label %10, label %7, !dbg !12005

7:                                                ; preds = %3
  %8 = tail call i32 @BlockSize(i8* noundef %4, i32 noundef %5) #21, !dbg !12006
  %9 = urem i32 %0, %8, !dbg !12007
  store i32 %9, i32* %2, align 4, !dbg !12008
  br label %10, !dbg !12009

10:                                               ; preds = %3, %7
  %11 = phi i32 [ 0, %7 ], [ -1, %3 ], !dbg !11999
  ret i32 %11, !dbg !12010
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_BlockIndexOffset2Addr(i32 noundef %0, i32 noundef %1, i32* nocapture noundef writeonly %2) local_unnamed_addr #0 !dbg !12011 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12015, metadata !DIExpression()), !dbg !12020
  call void @llvm.dbg.value(metadata i32 %1, metadata !12016, metadata !DIExpression()), !dbg !12020
  call void @llvm.dbg.value(metadata i32* %2, metadata !12017, metadata !DIExpression()), !dbg !12020
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !12018, metadata !DIExpression()), !dbg !12020
  %4 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !12021
  call void @llvm.dbg.value(metadata i8* %4, metadata !12019, metadata !DIExpression()), !dbg !12020
  %5 = tail call i8* @BlockAddress(i8* noundef %4, i32 noundef %0) #21, !dbg !12022
  %6 = ptrtoint i8* %5 to i32, !dbg !12023
  %7 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !12024
  %8 = bitcast i8* %7 to i8**, !dbg !12024
  %9 = load i8*, i8** %8, align 4, !dbg !12024
  %10 = ptrtoint i8* %9 to i32, !dbg !12025
  %11 = add i32 %6, %1, !dbg !12026
  %12 = sub i32 %11, %10, !dbg !12027
  store i32 %12, i32* %2, align 4, !dbg !12028
  ret i32 0, !dbg !12029
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_rawdisk_error_code(i32 noundef %0) local_unnamed_addr #0 !dbg !12030 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12034, metadata !DIExpression()), !dbg !12035
  %2 = add i32 %0, 2, !dbg !12036
  %3 = icmp ult i32 %2, 9, !dbg !12036
  br i1 %3, label %5, label %4, !dbg !12036

4:                                                ; preds = %5, %1
  tail call void @Flash_ReturnReady() #21, !dbg !12037
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.158, i32 0, i32 0), i32 noundef 558, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.get_rawdisk_error_code, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.159, i32 0, i32 0)) #23, !dbg !12037
  unreachable, !dbg !12037

5:                                                ; preds = %1
  %6 = trunc i32 %2 to i16, !dbg !12036
  %7 = lshr i16 433, %6, !dbg !12036
  %8 = and i16 %7, 1, !dbg !12036
  %9 = icmp eq i16 %8, 0, !dbg !12036
  br i1 %9, label %4, label %10, !dbg !12036

10:                                               ; preds = %5
  %11 = getelementptr inbounds [9 x i32], [9 x i32]* @switch.table.get_rawdisk_error_code, i32 0, i32 %2, !dbg !12036
  %12 = load i32, i32* %11, align 4, !dbg !12036
  ret i32 %12, !dbg !12047
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_block_size_from_address(i32 noundef %0) local_unnamed_addr #0 !dbg !12048 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12053, metadata !DIExpression()), !dbg !12056
  %2 = tail call i32 @NOR_BlockIndex(i32 noundef %0) #20, !dbg !12057
  call void @llvm.dbg.value(metadata i32 %2, metadata !12055, metadata !DIExpression()), !dbg !12056
  %3 = icmp eq i32 %2, -1, !dbg !12058
  br i1 %3, label %4, label %5, !dbg !12060

4:                                                ; preds = %1
  tail call void @Flash_ReturnReady() #21, !dbg !12061
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.158, i32 0, i32 0), i32 noundef 568, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.get_block_size_from_address, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.159, i32 0, i32 0)) #23, !dbg !12061
  unreachable, !dbg !12061

5:                                                ; preds = %1
  %6 = tail call i32 @NOR_BlockSize(i32 noundef %2) #20, !dbg !12066
  call void @llvm.dbg.value(metadata i32 %6, metadata !12054, metadata !DIExpression()), !dbg !12056
  switch i32 %6, label %9 [
    i32 4096, label %10
    i32 32768, label %7
    i32 65536, label %8
  ], !dbg !12067

7:                                                ; preds = %5
  br label %10, !dbg !12068

8:                                                ; preds = %5
  br label %10, !dbg !12072

9:                                                ; preds = %5
  tail call void @Flash_ReturnReady() #21, !dbg !12075
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.158, i32 0, i32 0), i32 noundef 578, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.get_block_size_from_address, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.159, i32 0, i32 0)) #23, !dbg !12075
  unreachable, !dbg !12075

10:                                               ; preds = %5, %8, %7
  %11 = phi i32 [ 1, %7 ], [ 2, %8 ], [ 0, %5 ], !dbg !12080
  ret i32 %11, !dbg !12081
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_init() local_unnamed_addr #0 !dbg !12082 {
  %1 = tail call i32 @NOR_init() #20, !dbg !12083
  ret i32 0, !dbg !12084
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @hal_flash_deinit() local_unnamed_addr #8 !dbg !12085 {
  ret i32 0, !dbg !12086
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_erase(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !12087 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12091, metadata !DIExpression()), !dbg !12096
  call void @llvm.dbg.value(metadata i32 %1, metadata !12092, metadata !DIExpression()), !dbg !12096
  call void @llvm.dbg.value(metadata i32 0, metadata !12095, metadata !DIExpression()), !dbg !12096
  switch i32 %1, label %22 [
    i32 0, label %3
    i32 1, label %6
    i32 2, label %9
  ], !dbg !12097

3:                                                ; preds = %2
  %4 = and i32 %0, 4095, !dbg !12098
  %5 = icmp eq i32 %4, 0, !dbg !12102
  br i1 %5, label %12, label %22, !dbg !12103

6:                                                ; preds = %2
  %7 = and i32 %0, 32767, !dbg !12104
  %8 = icmp eq i32 %7, 0, !dbg !12108
  br i1 %8, label %12, label %22, !dbg !12109

9:                                                ; preds = %2
  %10 = and i32 %0, 65535, !dbg !12110
  %11 = icmp eq i32 %10, 0, !dbg !12114
  br i1 %11, label %12, label %22, !dbg !12115

12:                                               ; preds = %9, %6, %3
  %13 = phi i32 [ -100663296, %3 ], [ -83886080, %6 ], [ -67108864, %9 ], !dbg !12116
  call void @llvm.dbg.value(metadata i32 %13, metadata !12095, metadata !DIExpression()), !dbg !12096
  %14 = tail call i32 @NOR_BlockIndex(i32 noundef %0) #20, !dbg !12117
  call void @llvm.dbg.value(metadata i32 %14, metadata !12094, metadata !DIExpression()), !dbg !12096
  %15 = icmp eq i32 %14, -1, !dbg !12118
  br i1 %15, label %22, label %16, !dbg !12120

16:                                               ; preds = %12
  %17 = or i32 %14, %13, !dbg !12121
  call void @llvm.dbg.value(metadata i32 %17, metadata !12094, metadata !DIExpression()), !dbg !12096
  %18 = tail call i32 @eraseRawDiskBlock(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %17) #20, !dbg !12122
  call void @llvm.dbg.value(metadata i32 %18, metadata !12093, metadata !DIExpression()), !dbg !12096
  %19 = icmp eq i32 %18, 0, !dbg !12123
  br i1 %19, label %22, label %20, !dbg !12125

20:                                               ; preds = %16
  %21 = tail call i32 @get_rawdisk_error_code(i32 noundef %18) #20, !dbg !12126
  br label %22, !dbg !12128

22:                                               ; preds = %16, %12, %2, %9, %6, %3, %20
  %23 = phi i32 [ %21, %20 ], [ -3, %3 ], [ -3, %6 ], [ -3, %9 ], [ -3, %2 ], [ -3, %12 ], [ 0, %16 ], !dbg !12096
  ret i32 %23, !dbg !12129
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_read(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !12130 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12134, metadata !DIExpression()), !dbg !12139
  call void @llvm.dbg.value(metadata i8* %1, metadata !12135, metadata !DIExpression()), !dbg !12139
  call void @llvm.dbg.value(metadata i32 %2, metadata !12136, metadata !DIExpression()), !dbg !12139
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !12137, metadata !DIExpression()), !dbg !12139
  %4 = tail call i32 @readRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %0, i8* noundef %1, i32 noundef %2) #20, !dbg !12140
  call void @llvm.dbg.value(metadata i32 %4, metadata !12138, metadata !DIExpression()), !dbg !12139
  %5 = icmp eq i32 %4, 0, !dbg !12141
  br i1 %5, label %8, label %6, !dbg !12143

6:                                                ; preds = %3
  %7 = tail call i32 @get_rawdisk_error_code(i32 noundef %4) #20, !dbg !12144
  br label %8, !dbg !12146

8:                                                ; preds = %3, %6
  %9 = phi i32 [ %7, %6 ], [ 0, %3 ], !dbg !12139
  ret i32 %9, !dbg !12147
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_write(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !12148 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12152, metadata !DIExpression()), !dbg !12157
  call void @llvm.dbg.value(metadata i8* %1, metadata !12153, metadata !DIExpression()), !dbg !12157
  call void @llvm.dbg.value(metadata i32 %2, metadata !12154, metadata !DIExpression()), !dbg !12157
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !12155, metadata !DIExpression()), !dbg !12157
  %4 = tail call i32 @writeRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %0, i8* noundef %1, i32 noundef %2) #20, !dbg !12158
  call void @llvm.dbg.value(metadata i32 %4, metadata !12156, metadata !DIExpression()), !dbg !12157
  %5 = icmp eq i32 %4, 0, !dbg !12159
  br i1 %5, label %8, label %6, !dbg !12161

6:                                                ; preds = %3
  %7 = tail call i32 @get_rawdisk_error_code(i32 noundef %4) #20, !dbg !12162
  br label %8, !dbg !12164

8:                                                ; preds = %3, %6
  %9 = phi i32 [ %7, %6 ], [ 0, %3 ], !dbg !12157
  ret i32 %9, !dbg !12165
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @BlockAddress(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #11 section ".ram_code" !dbg !12166 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12170, metadata !DIExpression()), !dbg !12176
  call void @llvm.dbg.value(metadata i32 %1, metadata !12171, metadata !DIExpression()), !dbg !12176
  call void @llvm.dbg.value(metadata i8* %0, metadata !12172, metadata !DIExpression()), !dbg !12176
  call void @llvm.dbg.value(metadata i32 0, metadata !12173, metadata !DIExpression()), !dbg !12176
  call void @llvm.dbg.value(metadata i32 0, metadata !12174, metadata !DIExpression()), !dbg !12176
  call void @llvm.dbg.value(metadata i32 0, metadata !12175, metadata !DIExpression()), !dbg !12176
  %3 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !12177
  %4 = bitcast i8* %3 to %struct.powerkey_state_t**, !dbg !12177
  %5 = load %struct.powerkey_state_t*, %struct.powerkey_state_t** %4, align 4, !dbg !12177
  %6 = getelementptr inbounds %struct.powerkey_state_t, %struct.powerkey_state_t* %5, i32 0, i32 1, !dbg !12178
  %7 = load i32, i32* %6, align 4, !dbg !12178
  call void @llvm.dbg.value(metadata i32 %7, metadata !12175, metadata !DIExpression()), !dbg !12176
  call void @llvm.dbg.value(metadata i32 0, metadata !12174, metadata !DIExpression()), !dbg !12176
  call void @llvm.dbg.value(metadata i32 0, metadata !12173, metadata !DIExpression()), !dbg !12176
  %8 = icmp ugt i32 %7, %1, !dbg !12179
  br i1 %8, label %23, label %9, !dbg !12180

9:                                                ; preds = %2, %9
  %10 = phi i32 [ %20, %9 ], [ %7, %2 ], !dbg !12181
  %11 = phi i32 [ %21, %9 ], [ %7, %2 ]
  %12 = phi i32 [ %18, %9 ], [ 0, %2 ]
  %13 = phi i32 [ %17, %9 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !12175, metadata !DIExpression()), !dbg !12176
  call void @llvm.dbg.value(metadata i32 %12, metadata !12174, metadata !DIExpression()), !dbg !12176
  call void @llvm.dbg.value(metadata i32 %13, metadata !12173, metadata !DIExpression()), !dbg !12176
  %14 = getelementptr inbounds %struct.powerkey_state_t, %struct.powerkey_state_t* %5, i32 %12, i32 0, !dbg !12183
  %15 = load i32, i32* %14, align 4, !dbg !12183
  %16 = mul i32 %15, %10, !dbg !12184
  %17 = add i32 %16, %13, !dbg !12185
  call void @llvm.dbg.value(metadata i32 %17, metadata !12173, metadata !DIExpression()), !dbg !12176
  %18 = add i32 %12, 1, !dbg !12186
  call void @llvm.dbg.value(metadata i32 %18, metadata !12174, metadata !DIExpression()), !dbg !12176
  %19 = getelementptr inbounds %struct.powerkey_state_t, %struct.powerkey_state_t* %5, i32 %18, i32 1, !dbg !12187
  %20 = load i32, i32* %19, align 4, !dbg !12187
  %21 = add i32 %20, %11, !dbg !12188
  call void @llvm.dbg.value(metadata i32 %21, metadata !12175, metadata !DIExpression()), !dbg !12176
  %22 = icmp ugt i32 %21, %1, !dbg !12179
  br i1 %22, label %23, label %9, !dbg !12180, !llvm.loop !12189

23:                                               ; preds = %9, %2
  %24 = phi i32 [ %7, %2 ], [ %20, %9 ], !dbg !12191
  %25 = phi i32 [ 0, %2 ], [ %17, %9 ], !dbg !12176
  %26 = phi i32 [ 0, %2 ], [ %18, %9 ], !dbg !12176
  %27 = phi i32 [ %7, %2 ], [ %21, %9 ], !dbg !12176
  call void @llvm.dbg.value(metadata i8* %0, metadata !12172, metadata !DIExpression()), !dbg !12176
  %28 = sub i32 %1, %27, !dbg !12192
  %29 = add i32 %28, %24, !dbg !12193
  %30 = getelementptr inbounds %struct.powerkey_state_t, %struct.powerkey_state_t* %5, i32 %26, i32 0, !dbg !12194
  %31 = load i32, i32* %30, align 4, !dbg !12194
  %32 = mul i32 %29, %31, !dbg !12195
  %33 = add i32 %32, %25, !dbg !12196
  call void @llvm.dbg.value(metadata i32 %33, metadata !12173, metadata !DIExpression()), !dbg !12176
  %34 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !12197
  %35 = bitcast i8* %34 to i8**, !dbg !12197
  %36 = load i8*, i8** %35, align 4, !dbg !12197
  %37 = getelementptr inbounds i8, i8* %36, i32 %33, !dbg !12198
  ret i8* %37, !dbg !12199
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @MapWindow(i8* nocapture noundef %0, i32 noundef %1, i32 noundef %2) #0 section ".ram_code" !dbg !12200 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12202, metadata !DIExpression()), !dbg !12206
  call void @llvm.dbg.value(metadata i32 %1, metadata !12203, metadata !DIExpression()), !dbg !12206
  call void @llvm.dbg.value(metadata i32 %2, metadata !12204, metadata !DIExpression()), !dbg !12206
  call void @llvm.dbg.value(metadata i8* %0, metadata !12205, metadata !DIExpression()), !dbg !12206
  %4 = icmp eq i32 %2, 0, !dbg !12207
  br i1 %4, label %6, label %5, !dbg !12210

5:                                                ; preds = %3
  tail call void @Flash_ReturnReady() #21, !dbg !12211
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.174, i32 0, i32 0), i32 noundef 185, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @__func__.MapWindow, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.175, i32 0, i32 0)) #23, !dbg !12211
  unreachable, !dbg !12211

6:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %0, metadata !12205, metadata !DIExpression()), !dbg !12206
  %7 = tail call fastcc i32 @LookupAddress(i8* noundef %0, i32 noundef %1) #20, !dbg !12213
  %8 = inttoptr i32 %7 to i8*, !dbg !12214
  %9 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !12215
  %10 = bitcast i8* %9 to i8**, !dbg !12215
  store i8* %8, i8** %10, align 4, !dbg !12216
  ret i8* %8, !dbg !12217
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @LookupAddress(i8* nocapture noundef %0, i32 noundef %1) unnamed_addr #12 section ".ram_code" !dbg !2312 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !2316, metadata !DIExpression()), !dbg !12218
  call void @llvm.dbg.value(metadata i32 %1, metadata !2317, metadata !DIExpression()), !dbg !12218
  call void @llvm.dbg.value(metadata i8* %0, metadata !2318, metadata !DIExpression()), !dbg !12218
  call void @llvm.dbg.value(metadata i32 0, metadata !2363, metadata !DIExpression()), !dbg !12218
  %3 = getelementptr inbounds i8, i8* %0, i32 44, !dbg !12219
  %4 = bitcast i8* %3 to [8 x [2 x %struct.powerkey_state_t]]*, !dbg !12219
  %5 = and i32 %1, 7, !dbg !12221
  %6 = getelementptr inbounds [8 x [2 x %struct.powerkey_state_t]], [8 x [2 x %struct.powerkey_state_t]]* %4, i32 0, i32 %5, i32 0, i32 0, !dbg !12222
  %7 = load i32, i32* %6, align 4, !dbg !12222
  %8 = icmp eq i32 %7, -1, !dbg !12223
  br i1 %8, label %62, label %9, !dbg !12224

9:                                                ; preds = %2
  %10 = icmp eq i32 %7, %1, !dbg !12225
  br i1 %10, label %54, label %11, !dbg !12228

11:                                               ; preds = %9
  %12 = getelementptr inbounds [8 x [2 x %struct.powerkey_state_t]], [8 x [2 x %struct.powerkey_state_t]]* %4, i32 0, i32 %5, i32 1, i32 0, !dbg !12229
  %13 = load i32, i32* %12, align 4, !dbg !12229
  %14 = icmp eq i32 %13, -1, !dbg !12232
  br i1 %14, label %44, label %15, !dbg !12233

15:                                               ; preds = %11
  %16 = icmp eq i32 %13, %1, !dbg !12234
  br i1 %16, label %35, label %17, !dbg !12237

17:                                               ; preds = %15
  %18 = load i32, i32* @LookupAddress.look_up_miss, align 4, !dbg !12238
  %19 = add i32 %18, 1, !dbg !12238
  store i32 %19, i32* @LookupAddress.look_up_miss, align 4, !dbg !12238
  %20 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !12240
  %21 = shl nuw nsw i32 1, %5, !dbg !12242
  %22 = and i32 %20, %21, !dbg !12243
  %23 = icmp eq i32 %22, 0, !dbg !12243
  br i1 %23, label %30, label %24, !dbg !12244

24:                                               ; preds = %17
  store i32 %1, i32* %12, align 4, !dbg !12245
  %25 = tail call i8* @BlockAddress(i8* noundef nonnull %0, i32 noundef %1) #20, !dbg !12247
  %26 = ptrtoint i8* %25 to i32, !dbg !12248
  %27 = getelementptr inbounds [8 x [2 x %struct.powerkey_state_t]], [8 x [2 x %struct.powerkey_state_t]]* %4, i32 0, i32 %5, i32 1, i32 1, !dbg !12249
  store i32 %26, i32* %27, align 4, !dbg !12250
  call void @llvm.dbg.value(metadata i32 %26, metadata !2363, metadata !DIExpression()), !dbg !12218
  %28 = xor i32 %21, -1, !dbg !12251
  %29 = and i32 %20, %28, !dbg !12252
  br label %71, !dbg !12253

30:                                               ; preds = %17
  store i32 %1, i32* %6, align 4, !dbg !12254
  %31 = tail call i8* @BlockAddress(i8* noundef nonnull %0, i32 noundef %1) #20, !dbg !12256
  %32 = ptrtoint i8* %31 to i32, !dbg !12257
  %33 = getelementptr inbounds [8 x [2 x %struct.powerkey_state_t]], [8 x [2 x %struct.powerkey_state_t]]* %4, i32 0, i32 %5, i32 0, i32 1, !dbg !12258
  store i32 %32, i32* %33, align 4, !dbg !12259
  call void @llvm.dbg.value(metadata i32 %32, metadata !2363, metadata !DIExpression()), !dbg !12218
  %34 = or i32 %20, %21, !dbg !12260
  br label %71

35:                                               ; preds = %15
  %36 = load i32, i32* @LookupAddress.look_up_hit, align 4, !dbg !12261
  %37 = add i32 %36, 1, !dbg !12261
  store i32 %37, i32* @LookupAddress.look_up_hit, align 4, !dbg !12261
  %38 = getelementptr inbounds [8 x [2 x %struct.powerkey_state_t]], [8 x [2 x %struct.powerkey_state_t]]* %4, i32 0, i32 %5, i32 1, i32 1, !dbg !12263
  %39 = load i32, i32* %38, align 4, !dbg !12263
  call void @llvm.dbg.value(metadata i32 %39, metadata !2363, metadata !DIExpression()), !dbg !12218
  %40 = shl nuw nsw i32 1, %5, !dbg !12264
  %41 = xor i32 %40, -1, !dbg !12265
  %42 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !12266
  %43 = and i32 %42, %41, !dbg !12266
  br label %71

44:                                               ; preds = %11
  %45 = load i32, i32* @LookupAddress.look_up_miss, align 4, !dbg !12267
  %46 = add i32 %45, 1, !dbg !12267
  store i32 %46, i32* @LookupAddress.look_up_miss, align 4, !dbg !12267
  store i32 %1, i32* %12, align 4, !dbg !12269
  %47 = tail call i8* @BlockAddress(i8* noundef nonnull %0, i32 noundef %1) #20, !dbg !12270
  %48 = ptrtoint i8* %47 to i32, !dbg !12271
  %49 = getelementptr inbounds [8 x [2 x %struct.powerkey_state_t]], [8 x [2 x %struct.powerkey_state_t]]* %4, i32 0, i32 %5, i32 1, i32 1, !dbg !12272
  store i32 %48, i32* %49, align 4, !dbg !12273
  call void @llvm.dbg.value(metadata i32 %48, metadata !2363, metadata !DIExpression()), !dbg !12218
  %50 = shl nuw nsw i32 1, %5, !dbg !12274
  %51 = xor i32 %50, -1, !dbg !12275
  %52 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !12276
  %53 = and i32 %52, %51, !dbg !12276
  br label %71

54:                                               ; preds = %9
  %55 = load i32, i32* @LookupAddress.look_up_hit, align 4, !dbg !12277
  %56 = add i32 %55, 1, !dbg !12277
  store i32 %56, i32* @LookupAddress.look_up_hit, align 4, !dbg !12277
  %57 = getelementptr inbounds [8 x [2 x %struct.powerkey_state_t]], [8 x [2 x %struct.powerkey_state_t]]* %4, i32 0, i32 %5, i32 0, i32 1, !dbg !12279
  %58 = load i32, i32* %57, align 4, !dbg !12279
  call void @llvm.dbg.value(metadata i32 %58, metadata !2363, metadata !DIExpression()), !dbg !12218
  %59 = shl nuw nsw i32 1, %5, !dbg !12280
  %60 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !12281
  %61 = or i32 %60, %59, !dbg !12281
  br label %71

62:                                               ; preds = %2
  %63 = load i32, i32* @LookupAddress.look_up_miss, align 4, !dbg !12282
  %64 = add i32 %63, 1, !dbg !12282
  store i32 %64, i32* @LookupAddress.look_up_miss, align 4, !dbg !12282
  store i32 %1, i32* %6, align 4, !dbg !12284
  %65 = tail call i8* @BlockAddress(i8* noundef nonnull %0, i32 noundef %1) #20, !dbg !12285
  %66 = ptrtoint i8* %65 to i32, !dbg !12286
  %67 = getelementptr inbounds [8 x [2 x %struct.powerkey_state_t]], [8 x [2 x %struct.powerkey_state_t]]* %4, i32 0, i32 %5, i32 0, i32 1, !dbg !12287
  store i32 %66, i32* %67, align 4, !dbg !12288
  call void @llvm.dbg.value(metadata i32 %66, metadata !2363, metadata !DIExpression()), !dbg !12218
  %68 = shl nuw nsw i32 1, %5, !dbg !12289
  %69 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !12290
  %70 = or i32 %69, %68, !dbg !12290
  br label %71

71:                                               ; preds = %54, %35, %30, %24, %44, %62
  %72 = phi i32 [ %61, %54 ], [ %43, %35 ], [ %34, %30 ], [ %29, %24 ], [ %53, %44 ], [ %70, %62 ]
  %73 = phi i32 [ %58, %54 ], [ %39, %35 ], [ %32, %30 ], [ %26, %24 ], [ %48, %44 ], [ %66, %62 ], !dbg !12291
  store i32 %72, i32* @LookupAddress.replaced, align 4, !dbg !12291
  call void @llvm.dbg.value(metadata i32 %73, metadata !2363, metadata !DIExpression()), !dbg !12218
  ret i32 %73, !dbg !12292
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @BlockSize(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #11 section ".ram_code" !dbg !12293 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12295, metadata !DIExpression()), !dbg !12300
  call void @llvm.dbg.value(metadata i32 %1, metadata !12296, metadata !DIExpression()), !dbg !12300
  call void @llvm.dbg.value(metadata i8* %0, metadata !12297, metadata !DIExpression()), !dbg !12300
  call void @llvm.dbg.value(metadata i32 0, metadata !12298, metadata !DIExpression()), !dbg !12300
  call void @llvm.dbg.value(metadata i32 0, metadata !12299, metadata !DIExpression()), !dbg !12300
  %3 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !12301
  %4 = bitcast i8* %3 to %struct.powerkey_state_t**, !dbg !12301
  %5 = load %struct.powerkey_state_t*, %struct.powerkey_state_t** %4, align 4, !dbg !12301
  %6 = getelementptr inbounds %struct.powerkey_state_t, %struct.powerkey_state_t* %5, i32 0, i32 1, !dbg !12302
  %7 = load i32, i32* %6, align 4, !dbg !12302
  call void @llvm.dbg.value(metadata i32 %7, metadata !12299, metadata !DIExpression()), !dbg !12300
  call void @llvm.dbg.value(metadata i32 0, metadata !12298, metadata !DIExpression()), !dbg !12300
  %8 = icmp ugt i32 %7, %1, !dbg !12303
  br i1 %8, label %17, label %9, !dbg !12304

9:                                                ; preds = %2, %9
  %10 = phi i32 [ %15, %9 ], [ %7, %2 ]
  %11 = phi i32 [ %12, %9 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !12299, metadata !DIExpression()), !dbg !12300
  call void @llvm.dbg.value(metadata i32 %11, metadata !12298, metadata !DIExpression()), !dbg !12300
  %12 = add i32 %11, 1, !dbg !12305
  call void @llvm.dbg.value(metadata i32 %12, metadata !12298, metadata !DIExpression()), !dbg !12300
  %13 = getelementptr inbounds %struct.powerkey_state_t, %struct.powerkey_state_t* %5, i32 %12, i32 1, !dbg !12307
  %14 = load i32, i32* %13, align 4, !dbg !12307
  %15 = add i32 %14, %10, !dbg !12308
  call void @llvm.dbg.value(metadata i32 %15, metadata !12299, metadata !DIExpression()), !dbg !12300
  %16 = icmp ugt i32 %15, %1, !dbg !12303
  br i1 %16, label %17, label %9, !dbg !12304, !llvm.loop !12309

17:                                               ; preds = %9, %2
  %18 = phi i32 [ 0, %2 ], [ %12, %9 ], !dbg !12300
  %19 = getelementptr inbounds %struct.powerkey_state_t, %struct.powerkey_state_t* %5, i32 %18, i32 0, !dbg !12311
  %20 = load i32, i32* %19, align 4, !dbg !12311
  ret i32 %20, !dbg !12312
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @BlockIndex(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #11 section ".ram_code" !dbg !12313 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12315, metadata !DIExpression()), !dbg !12321
  call void @llvm.dbg.value(metadata i32 %1, metadata !12316, metadata !DIExpression()), !dbg !12321
  call void @llvm.dbg.value(metadata i8* %0, metadata !12317, metadata !DIExpression()), !dbg !12321
  call void @llvm.dbg.value(metadata i32 0, metadata !12318, metadata !DIExpression()), !dbg !12321
  call void @llvm.dbg.value(metadata i32 0, metadata !12319, metadata !DIExpression()), !dbg !12321
  call void @llvm.dbg.value(metadata i32 0, metadata !12320, metadata !DIExpression()), !dbg !12321
  %3 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !12322
  %4 = bitcast i8* %3 to %struct.powerkey_state_t**, !dbg !12322
  %5 = load %struct.powerkey_state_t*, %struct.powerkey_state_t** %4, align 4, !dbg !12322
  %6 = getelementptr inbounds %struct.powerkey_state_t, %struct.powerkey_state_t* %5, i32 0, i32 1, !dbg !12323
  %7 = load i32, i32* %6, align 4, !dbg !12323
  %8 = getelementptr inbounds %struct.powerkey_state_t, %struct.powerkey_state_t* %5, i32 0, i32 0, !dbg !12324
  %9 = load i32, i32* %8, align 4, !dbg !12324
  %10 = mul i32 %9, %7, !dbg !12325
  call void @llvm.dbg.value(metadata i32 %10, metadata !12319, metadata !DIExpression()), !dbg !12321
  call void @llvm.dbg.value(metadata i32 0, metadata !12320, metadata !DIExpression()), !dbg !12321
  call void @llvm.dbg.value(metadata i32 0, metadata !12318, metadata !DIExpression()), !dbg !12321
  call void @llvm.dbg.value(metadata i32 %1, metadata !12316, metadata !DIExpression()), !dbg !12321
  %11 = icmp ult i32 %10, %1, !dbg !12326
  br i1 %11, label %12, label %30, !dbg !12327

12:                                               ; preds = %2, %20
  %13 = phi i32 [ %25, %20 ], [ %7, %2 ]
  %14 = phi i32 [ %27, %20 ], [ %9, %2 ], !dbg !12328
  %15 = phi i32 [ %21, %20 ], [ 0, %2 ]
  %16 = phi i32 [ %28, %20 ], [ %10, %2 ]
  %17 = phi i32 [ %23, %20 ], [ 0, %2 ]
  %18 = phi i32 [ %22, %20 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !12320, metadata !DIExpression()), !dbg !12321
  call void @llvm.dbg.value(metadata i32 %16, metadata !12319, metadata !DIExpression()), !dbg !12321
  call void @llvm.dbg.value(metadata i32 %17, metadata !12318, metadata !DIExpression()), !dbg !12321
  call void @llvm.dbg.value(metadata i32 %18, metadata !12316, metadata !DIExpression()), !dbg !12321
  %19 = icmp eq i32 %14, 0, !dbg !12327
  br i1 %19, label %36, label %20, !dbg !12329

20:                                               ; preds = %12
  %21 = add i32 %13, %15, !dbg !12330
  call void @llvm.dbg.value(metadata i32 %21, metadata !12320, metadata !DIExpression()), !dbg !12321
  %22 = sub i32 %18, %16, !dbg !12332
  call void @llvm.dbg.value(metadata i32 %22, metadata !12316, metadata !DIExpression()), !dbg !12321
  %23 = add i32 %17, 1, !dbg !12333
  call void @llvm.dbg.value(metadata i32 %23, metadata !12318, metadata !DIExpression()), !dbg !12321
  %24 = getelementptr inbounds %struct.powerkey_state_t, %struct.powerkey_state_t* %5, i32 %23, i32 1, !dbg !12334
  %25 = load i32, i32* %24, align 4, !dbg !12334
  %26 = getelementptr inbounds %struct.powerkey_state_t, %struct.powerkey_state_t* %5, i32 %23, i32 0, !dbg !12335
  %27 = load i32, i32* %26, align 4, !dbg !12335
  %28 = mul i32 %27, %25, !dbg !12336
  call void @llvm.dbg.value(metadata i32 %28, metadata !12319, metadata !DIExpression()), !dbg !12321
  %29 = icmp ugt i32 %22, %28, !dbg !12326
  br i1 %29, label %12, label %30, !dbg !12327, !llvm.loop !12337

30:                                               ; preds = %20, %2
  %31 = phi i32 [ %9, %2 ], [ %27, %20 ], !dbg !12339
  %32 = phi i32 [ %1, %2 ], [ %22, %20 ]
  %33 = phi i32 [ 0, %2 ], [ %21, %20 ], !dbg !12321
  %34 = udiv i32 %32, %31, !dbg !12342
  %35 = add i32 %34, %33, !dbg !12343
  call void @llvm.dbg.value(metadata i32 %35, metadata !12320, metadata !DIExpression()), !dbg !12321
  br label %36, !dbg !12344

36:                                               ; preds = %12, %30
  %37 = phi i32 [ %35, %30 ], [ -1, %12 ], !dbg !12345
  call void @llvm.dbg.value(metadata i32 %37, metadata !12320, metadata !DIExpression()), !dbg !12321
  ret i32 %37, !dbg !12346
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_ROM_BASE() local_unnamed_addr #8 !dbg !12347 {
  ret i32 134217728, !dbg !12348
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_NOR_FLASH_BASE_ADDRESS() local_unnamed_addr #8 !dbg !12349 {
  ret i32 3932160, !dbg !12350
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_Dual_NOR_FLASH_SIZE() local_unnamed_addr #8 !dbg !12351 {
  ret i32 0, !dbg !12352
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_NOR_ALLOCATED_FAT_SPACE() local_unnamed_addr #8 !dbg !12353 {
  ret i32 262144, !dbg !12354
}

; Function Attrs: noinline nounwind optsize
define dso_local void @DelayAWhile_UST(i32 noundef %0) local_unnamed_addr #0 section ".ram_code" !dbg !12355 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12357, metadata !DIExpression()), !dbg !12359
  %2 = tail call i32 @hal_gpt_delay_us(i32 noundef %0) #21, !dbg !12360
  call void @llvm.dbg.value(metadata i32 %2, metadata !12358, metadata !DIExpression()), !dbg !12359
  %3 = icmp eq i32 %2, 0, !dbg !12361
  br i1 %3, label %5, label %4, !dbg !12363

4:                                                ; preds = %1
  tail call void @Flash_ReturnReady() #21, !dbg !12364
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.174, i32 0, i32 0), i32 noundef 279, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.DelayAWhile_UST, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.175, i32 0, i32 0)) #23, !dbg !12364
  unreachable, !dbg !12364

5:                                                ; preds = %1
  ret void, !dbg !12369
}

; Function Attrs: noinline nounwind optsize
define dso_local void @pmu_init_mt6385() local_unnamed_addr #0 !dbg !2370 {
  %1 = alloca %union.anon, align 4
  %2 = bitcast %union.anon* %1 to i8*, !dbg !12370
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #22, !dbg !12370
  call void @llvm.dbg.declare(metadata %union.anon* %1, metadata !2472, metadata !DIExpression()), !dbg !12371
  %3 = load i1, i1* @pmu_init_mt6385.init, align 1, !dbg !12372
  br i1 %3, label %47, label %4, !dbg !12374

4:                                                ; preds = %0
  store i1 true, i1* @pmu_init_mt6385.init, align 1, !dbg !12375
  %5 = getelementptr inbounds %union.anon, %union.anon* %1, i32 0, i32 0, !dbg !12376
  store i32 2500, i32* %5, align 4, !dbg !12377
  %6 = call i32 @pmic_i2c_init(i32 noundef 0, %union.anon* noundef nonnull %1) #21, !dbg !12378
  %7 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 25, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext 1) #21, !dbg !12379
  %8 = call zeroext i8 @pmu_get_register_value(i16 noundef zeroext 0, i16 noundef zeroext 255, i16 noundef zeroext 0) #21, !dbg !12380
  call void @llvm.dbg.value(metadata i8 %8, metadata !2470, metadata !DIExpression()), !dbg !12381
  %9 = call zeroext i8 @pmu_get_register_value(i16 noundef zeroext 1, i16 noundef zeroext 255, i16 noundef zeroext 0) #21, !dbg !12382
  call void @llvm.dbg.value(metadata i8 %9, metadata !2471, metadata !DIExpression()), !dbg !12381
  %10 = icmp eq i8 %8, 16, !dbg !12383
  %11 = icmp eq i8 %9, -123
  %12 = select i1 %10, i1 %11, i1 false, !dbg !12385
  br i1 %12, label %13, label %14, !dbg !12385

13:                                               ; preds = %4
  call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__FUNCTION__.pmu_init_mt6385, i32 0, i32 0), i32 noundef 111, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.182, i32 0, i32 0)) #21, !dbg !12386
  br label %18, !dbg !12388

14:                                               ; preds = %4
  %15 = icmp eq i8 %8, 17, !dbg !12390
  %16 = select i1 %15, i1 %11, i1 false, !dbg !12388
  br i1 %16, label %17, label %18, !dbg !12388

17:                                               ; preds = %14
  call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__FUNCTION__.pmu_init_mt6385, i32 0, i32 0), i32 noundef 114, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.183, i32 0, i32 0)) #21, !dbg !12391
  br label %18, !dbg !12393

18:                                               ; preds = %13, %17, %14
  %19 = phi i1 [ false, %13 ], [ true, %17 ], [ %15, %14 ]
  br i1 %10, label %20, label %30, !dbg !12394

20:                                               ; preds = %18
  %21 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 77, i16 noundef zeroext 1, i16 noundef zeroext 5, i16 noundef zeroext 0) #21, !dbg !12395
  %22 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 74, i16 noundef zeroext 1, i16 noundef zeroext 3, i16 noundef zeroext 1) #21, !dbg !12398
  %23 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 87, i16 noundef zeroext 1, i16 noundef zeroext 4, i16 noundef zeroext 0) #21, !dbg !12399
  %24 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 203, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext 0) #21, !dbg !12400
  %25 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 602, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 131) #21, !dbg !12401
  %26 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 611, i16 noundef zeroext 3, i16 noundef zeroext 0, i16 noundef zeroext 1) #21, !dbg !12402
  call void @pmu_set_vrc_key_mt6385(i32 noundef 0) #21, !dbg !12403
  %27 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 75, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext 1) #21, !dbg !12404
  %28 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 67, i16 noundef zeroext 3, i16 noundef zeroext 0, i16 noundef zeroext 2) #21, !dbg !12405
  call void @pmu_set_ovr_mode_mt6385(i32 noundef 0) #21, !dbg !12406
  %29 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 619, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 12) #21, !dbg !12407
  call void @pmu_init_power_mode([8 x i8]* noundef getelementptr inbounds ([10 x [8 x i8]], [10 x [8 x i8]]* @pmu_power_mode_init_setting_E1, i32 0, i32 0)) #20, !dbg !12408
  br label %30, !dbg !12409

30:                                               ; preds = %20, %18
  br i1 %19, label %31, label %44, !dbg !12410

31:                                               ; preds = %30
  %32 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 77, i16 noundef zeroext 1, i16 noundef zeroext 5, i16 noundef zeroext 1) #21, !dbg !12411
  %33 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 25, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext 1) #21, !dbg !12414
  %34 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 70, i16 noundef zeroext 1, i16 noundef zeroext 4, i16 noundef zeroext 1) #21, !dbg !12415
  %35 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 74, i16 noundef zeroext 1, i16 noundef zeroext 3, i16 noundef zeroext 1) #21, !dbg !12416
  %36 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 87, i16 noundef zeroext 1, i16 noundef zeroext 4, i16 noundef zeroext 0) #21, !dbg !12417
  %37 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 300, i16 noundef zeroext 7, i16 noundef zeroext 3, i16 noundef zeroext 1) #21, !dbg !12418
  %38 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 599, i16 noundef zeroext 1, i16 noundef zeroext 7, i16 noundef zeroext 0) #21, !dbg !12419
  %39 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 602, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 131) #21, !dbg !12420
  %40 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 603, i16 noundef zeroext 1, i16 noundef zeroext 7, i16 noundef zeroext 1) #21, !dbg !12421
  %41 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 611, i16 noundef zeroext 3, i16 noundef zeroext 0, i16 noundef zeroext 1) #21, !dbg !12422
  %42 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 619, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 12) #21, !dbg !12423
  call void @pmu_init_power_mode([8 x i8]* noundef getelementptr inbounds ([10 x [8 x i8]], [10 x [8 x i8]]* @pmu_power_mode_init_setting_E2, i32 0, i32 0)) #20, !dbg !12424
  call void @pmu_set_vrc_key_mt6385(i32 noundef 0) #21, !dbg !12425
  %43 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 75, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext 1) #21, !dbg !12426
  call void @pmu_set_ovr_mode_mt6385(i32 noundef 0) #21, !dbg !12427
  call void @pmu_set_vrc_key_mt6385(i32 noundef 1) #21, !dbg !12428
  br label %44, !dbg !12429

44:                                               ; preds = %31, %30
  %45 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 129, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext 0) #21, !dbg !12430
  %46 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 68, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 0) #21, !dbg !12431
  call void @pmu_auxadc_init() #21, !dbg !12432
  call void @pmu_eint_init() #20, !dbg !12433
  br label %47, !dbg !12434

47:                                               ; preds = %0, %44
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #22, !dbg !12434
  ret void, !dbg !12434
}

; Function Attrs: noinline nounwind optsize
define dso_local void @pmu_init_power_mode([8 x i8]* noundef readonly %0) local_unnamed_addr #0 !dbg !12435 {
  call void @llvm.dbg.value(metadata [8 x i8]* %0, metadata !12441, metadata !DIExpression()), !dbg !12443
  call void @llvm.dbg.value(metadata i32 0, metadata !12442, metadata !DIExpression()), !dbg !12443
  br label %2, !dbg !12444

2:                                                ; preds = %1, %2
  %3 = phi i32 [ 0, %1 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !12442, metadata !DIExpression()), !dbg !12443
  %4 = add nuw nsw i32 %3, 1, !dbg !12446
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 0, i32 %4, !dbg !12449
  %6 = load i8, i8* %5, align 1, !dbg !12449
  %7 = zext i8 %6 to i32, !dbg !12450
  tail call void @PMIC_VR_PSI_PMOD_CONFIG(i32 noundef 0, i32 noundef %4, i32 noundef %7) #21, !dbg !12451
  %8 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 1, i32 %4, !dbg !12452
  %9 = load i8, i8* %8, align 1, !dbg !12452
  %10 = zext i8 %9 to i32, !dbg !12453
  tail call void @PMIC_VR_PSI_PMOD_CONFIG(i32 noundef 1, i32 noundef %4, i32 noundef %10) #21, !dbg !12454
  %11 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 2, i32 %4, !dbg !12455
  %12 = load i8, i8* %11, align 1, !dbg !12455
  %13 = zext i8 %12 to i32, !dbg !12456
  tail call void @PMIC_VR_PSI_PMOD_CONFIG(i32 noundef 2, i32 noundef %4, i32 noundef %13) #21, !dbg !12457
  %14 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 3, i32 %4, !dbg !12458
  %15 = load i8, i8* %14, align 1, !dbg !12458
  %16 = zext i8 %15 to i32, !dbg !12459
  tail call void @PMIC_VR_PSI_PMOD_CONFIG(i32 noundef 3, i32 noundef %4, i32 noundef %16) #21, !dbg !12460
  %17 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 4, i32 %4, !dbg !12461
  %18 = load i8, i8* %17, align 1, !dbg !12461
  %19 = zext i8 %18 to i32, !dbg !12462
  tail call void @PMIC_VR_PSI_PMOD_CONFIG(i32 noundef 4, i32 noundef %4, i32 noundef %19) #21, !dbg !12463
  %20 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 5, i32 %4, !dbg !12464
  %21 = load i8, i8* %20, align 1, !dbg !12464
  %22 = zext i8 %21 to i32, !dbg !12465
  tail call void @PMIC_VR_PSI_PMOD_CONFIG(i32 noundef 5, i32 noundef %4, i32 noundef %22) #21, !dbg !12466
  %23 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 6, i32 %4, !dbg !12467
  %24 = load i8, i8* %23, align 1, !dbg !12467
  %25 = zext i8 %24 to i32, !dbg !12468
  tail call void @PMIC_VR_PSI_PMOD_CONFIG(i32 noundef 6, i32 noundef %4, i32 noundef %25) #21, !dbg !12469
  %26 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 7, i32 %4, !dbg !12470
  %27 = load i8, i8* %26, align 1, !dbg !12470
  %28 = zext i8 %27 to i32, !dbg !12471
  tail call void @PMIC_VR_PSI_PMOD_CONFIG(i32 noundef 7, i32 noundef %4, i32 noundef %28) #21, !dbg !12472
  %29 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 8, i32 %4, !dbg !12473
  %30 = load i8, i8* %29, align 1, !dbg !12473
  %31 = zext i8 %30 to i32, !dbg !12474
  tail call void @PMIC_VR_PSI_PMOD_CONFIG(i32 noundef 8, i32 noundef %4, i32 noundef %31) #21, !dbg !12475
  %32 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 9, i32 %4, !dbg !12476
  %33 = load i8, i8* %32, align 1, !dbg !12476
  %34 = zext i8 %33 to i32, !dbg !12477
  tail call void @PMIC_VR_PSI_PMOD_CONFIG(i32 noundef 9, i32 noundef %4, i32 noundef %34) #21, !dbg !12478
  call void @llvm.dbg.value(metadata i32 %4, metadata !12442, metadata !DIExpression()), !dbg !12443
  %35 = icmp eq i32 %4, 4, !dbg !12479
  br i1 %35, label %36, label %2, !dbg !12444, !llvm.loop !12480

36:                                               ; preds = %2
  tail call void @PMIC_VR_PSI_PMOD_CONFIG(i32 noundef 10, i32 noundef 1, i32 noundef 0) #21, !dbg !12482
  tail call void @PMIC_VR_PSI_PMOD_CONFIG(i32 noundef 11, i32 noundef 1, i32 noundef 0) #21, !dbg !12483
  call void @llvm.dbg.value(metadata i32 0, metadata !12442, metadata !DIExpression()), !dbg !12443
  %37 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 2, i32 5
  call void @llvm.dbg.value(metadata i32 0, metadata !12442, metadata !DIExpression()), !dbg !12443
  %38 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 3, i32 5
  %39 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 5, i32 5
  %40 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 6, i32 5
  %41 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 7, i32 5
  %42 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 8, i32 5
  %43 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 9, i32 5
  br label %44, !dbg !12484

44:                                               ; preds = %36, %44
  %45 = phi i1 [ true, %36 ], [ false, %44 ]
  %46 = phi i32 [ 0, %36 ], [ 1, %44 ]
  call void @llvm.dbg.value(metadata i32 %46, metadata !12442, metadata !DIExpression()), !dbg !12443
  %47 = add nuw nsw i32 %46, 3, !dbg !12486
  %48 = load i8, i8* %37, align 1, !dbg !12489
  %49 = zext i8 %48 to i32, !dbg !12490
  %50 = or i32 %46, 6, !dbg !12491
  %51 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 2, i32 %50, !dbg !12492
  %52 = load i8, i8* %51, align 1, !dbg !12492
  %53 = zext i8 %52 to i32, !dbg !12493
  tail call void @PMIC_VR_SLEEP_WKUP_CONFIG(i32 noundef 2, i32 noundef %47, i32 noundef %49, i32 noundef %53) #21, !dbg !12494
  %54 = load i8, i8* %38, align 1, !dbg !12495
  %55 = zext i8 %54 to i32, !dbg !12496
  %56 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 3, i32 %50, !dbg !12497
  %57 = load i8, i8* %56, align 1, !dbg !12497
  %58 = zext i8 %57 to i32, !dbg !12498
  tail call void @PMIC_VR_SLEEP_WKUP_CONFIG(i32 noundef 3, i32 noundef %47, i32 noundef %55, i32 noundef %58) #21, !dbg !12499
  %59 = load i8, i8* %39, align 1, !dbg !12500
  %60 = zext i8 %59 to i32, !dbg !12501
  %61 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 5, i32 %50, !dbg !12502
  %62 = load i8, i8* %61, align 1, !dbg !12502
  %63 = zext i8 %62 to i32, !dbg !12503
  tail call void @PMIC_VR_SLEEP_WKUP_CONFIG(i32 noundef 5, i32 noundef %47, i32 noundef %60, i32 noundef %63) #21, !dbg !12504
  %64 = load i8, i8* %40, align 1, !dbg !12505
  %65 = zext i8 %64 to i32, !dbg !12506
  %66 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 6, i32 %50, !dbg !12507
  %67 = load i8, i8* %66, align 1, !dbg !12507
  %68 = zext i8 %67 to i32, !dbg !12508
  tail call void @PMIC_VR_SLEEP_WKUP_CONFIG(i32 noundef 6, i32 noundef %47, i32 noundef %65, i32 noundef %68) #21, !dbg !12509
  %69 = load i8, i8* %41, align 1, !dbg !12510
  %70 = zext i8 %69 to i32, !dbg !12511
  %71 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 7, i32 %50, !dbg !12512
  %72 = load i8, i8* %71, align 1, !dbg !12512
  %73 = zext i8 %72 to i32, !dbg !12513
  tail call void @PMIC_VR_SLEEP_WKUP_CONFIG(i32 noundef 7, i32 noundef %47, i32 noundef %70, i32 noundef %73) #21, !dbg !12514
  %74 = load i8, i8* %42, align 1, !dbg !12515
  %75 = zext i8 %74 to i32, !dbg !12516
  %76 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 8, i32 %50, !dbg !12517
  %77 = load i8, i8* %76, align 1, !dbg !12517
  %78 = zext i8 %77 to i32, !dbg !12518
  tail call void @PMIC_VR_SLEEP_WKUP_CONFIG(i32 noundef 8, i32 noundef %47, i32 noundef %75, i32 noundef %78) #21, !dbg !12519
  %79 = load i8, i8* %43, align 1, !dbg !12520
  %80 = zext i8 %79 to i32, !dbg !12521
  %81 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 9, i32 %50, !dbg !12522
  %82 = load i8, i8* %81, align 1, !dbg !12522
  %83 = zext i8 %82 to i32, !dbg !12523
  tail call void @PMIC_VR_SLEEP_WKUP_CONFIG(i32 noundef 9, i32 noundef %47, i32 noundef %80, i32 noundef %83) #21, !dbg !12524
  call void @llvm.dbg.value(metadata i32 %46, metadata !12442, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !12443
  br i1 %45, label %44, label %84, !dbg !12484, !llvm.loop !12525

84:                                               ; preds = %44
  tail call void @PMIC_VR_SLEEP_WKUP_CONFIG(i32 noundef 12, i32 noundef 3, i32 noundef 1, i32 noundef 1) #21, !dbg !12527
  tail call void @PMIC_VR_SLEEP_WKUP_CONFIG(i32 noundef 13, i32 noundef 3, i32 noundef 1, i32 noundef 1) #21, !dbg !12528
  tail call void @PMIC_VR_SLEEP_WKUP_CONFIG(i32 noundef 12, i32 noundef 4, i32 noundef 1, i32 noundef 1) #21, !dbg !12529
  tail call void @PMIC_VR_SLEEP_WKUP_CONFIG(i32 noundef 13, i32 noundef 4, i32 noundef 1, i32 noundef 1) #21, !dbg !12530
  %85 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 2, i32 0, !dbg !12531
  %86 = load i8, i8* %85, align 1, !dbg !12531
  %87 = zext i8 %86 to i32, !dbg !12532
  tail call void @PMIC_VR_CONTROL(i32 noundef 2, i32 noundef %87) #21, !dbg !12533
  %88 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 3, i32 0, !dbg !12534
  %89 = load i8, i8* %88, align 1, !dbg !12534
  %90 = zext i8 %89 to i32, !dbg !12535
  tail call void @PMIC_VR_CONTROL(i32 noundef 3, i32 noundef %90) #21, !dbg !12536
  %91 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 5, i32 0, !dbg !12537
  %92 = load i8, i8* %91, align 1, !dbg !12537
  %93 = zext i8 %92 to i32, !dbg !12538
  tail call void @PMIC_VR_CONTROL(i32 noundef 5, i32 noundef %93) #21, !dbg !12539
  %94 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 6, i32 0, !dbg !12540
  %95 = load i8, i8* %94, align 1, !dbg !12540
  %96 = zext i8 %95 to i32, !dbg !12541
  tail call void @PMIC_VR_CONTROL(i32 noundef 6, i32 noundef %96) #21, !dbg !12542
  %97 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 7, i32 0, !dbg !12543
  %98 = load i8, i8* %97, align 1, !dbg !12543
  %99 = zext i8 %98 to i32, !dbg !12544
  tail call void @PMIC_VR_CONTROL(i32 noundef 7, i32 noundef %99) #21, !dbg !12545
  %100 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 8, i32 0, !dbg !12546
  %101 = load i8, i8* %100, align 1, !dbg !12546
  %102 = zext i8 %101 to i32, !dbg !12547
  tail call void @PMIC_VR_CONTROL(i32 noundef 8, i32 noundef %102) #21, !dbg !12548
  %103 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 9, i32 0, !dbg !12549
  %104 = load i8, i8* %103, align 1, !dbg !12549
  %105 = zext i8 %104 to i32, !dbg !12550
  tail call void @PMIC_VR_CONTROL(i32 noundef 9, i32 noundef %105) #21, !dbg !12551
  tail call void @PMIC_VR_CONTROL(i32 noundef 10, i32 noundef 0) #21, !dbg !12552
  tail call void @PMIC_VR_CONTROL(i32 noundef 11, i32 noundef 0) #21, !dbg !12553
  tail call void @PMIC_VR_CONTROL(i32 noundef 12, i32 noundef 0) #21, !dbg !12554
  tail call void @PMIC_VR_CONTROL(i32 noundef 13, i32 noundef 0) #21, !dbg !12555
  tail call void @PMIC_VR_CONTROL(i32 noundef 14, i32 noundef 0) #21, !dbg !12556
  tail call void @pmu_set_vrc_key_mt6385(i32 noundef 0) #21, !dbg !12557
  tail call void @pmu_set_ovr_mode_mt6385(i32 noundef 1) #21, !dbg !12558
  %106 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 66, i16 noundef zeroext 1, i16 noundef zeroext 2, i16 noundef zeroext 1) #21, !dbg !12559
  %107 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 66, i16 noundef zeroext 1, i16 noundef zeroext 3, i16 noundef zeroext 1) #21, !dbg !12560
  %108 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 66, i16 noundef zeroext 1, i16 noundef zeroext 5, i16 noundef zeroext 0) #21, !dbg !12561
  %109 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 66, i16 noundef zeroext 1, i16 noundef zeroext 4, i16 noundef zeroext 0) #21, !dbg !12562
  tail call void @pmu_set_ovr_mode_mt6385(i32 noundef 0) #21, !dbg !12563
  tail call void @pmu_set_vrc_key_mt6385(i32 noundef 1) #21, !dbg !12564
  tail call void @PMIC_VR_SLEEP_WKUP_CONFIG(i32 noundef 2, i32 noundef 3, i32 noundef 2, i32 noundef 0) #21, !dbg !12565
  tail call void @PMIC_VR_SLEEP_WKUP_CONFIG(i32 noundef 2, i32 noundef 4, i32 noundef 2, i32 noundef 0) #21, !dbg !12566
  ret void, !dbg !12567
}

; Function Attrs: noinline nounwind optsize
define dso_local void @pmu_eint_init() local_unnamed_addr #0 !dbg !12568 {
  %1 = alloca %struct.powerkey_state_t, align 4
  %2 = bitcast %struct.powerkey_state_t* %1 to i8*, !dbg !12576
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #22, !dbg !12576
  call void @llvm.dbg.declare(metadata %struct.powerkey_state_t* %1, metadata !12570, metadata !DIExpression()), !dbg !12577
  %3 = getelementptr inbounds %struct.powerkey_state_t, %struct.powerkey_state_t* %1, i32 0, i32 0, !dbg !12578
  store i32 2, i32* %3, align 4, !dbg !12579
  %4 = getelementptr inbounds %struct.powerkey_state_t, %struct.powerkey_state_t* %1, i32 0, i32 1, !dbg !12580
  store i32 1, i32* %4, align 4, !dbg !12581
  %5 = call i32 @hal_eint_init(i32 noundef 30, %struct.powerkey_state_t* noundef nonnull %1) #21, !dbg !12582
  %6 = call i32 @hal_eint_register_callback(i32 noundef 30, void (i8*)* noundef nonnull @pmu_eint_handler, i8* noundef null) #21, !dbg !12583
  %7 = call i32 @hal_eint_unmask(i32 noundef 30) #21, !dbg !12584
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #22, !dbg !12585
  ret void, !dbg !12585
}

; Function Attrs: noinline nounwind optsize
define dso_local void @pmu_eint_handler(i8* nocapture readnone %0) #0 !dbg !2443 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !2445, metadata !DIExpression()), !dbg !12586
  %2 = tail call i32 @hal_eint_mask(i32 noundef 30) #21, !dbg !12587
  %3 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !12588
  call void @llvm.dbg.value(metadata i32 %3, metadata !2446, metadata !DIExpression()), !dbg !12586
  store i32 0, i32* @pmu_eint_handler.index, align 4, !dbg !12589
  br label %6, !dbg !12591

4:                                                ; preds = %6
  store i32 0, i32* @pmu_eint_handler.index, align 4, !dbg !12592
  %5 = load i32, i32* getelementptr inbounds ([7 x i32], [7 x i32]* @pmu_eint_handler.int_sts, i32 0, i32 0), align 4, !dbg !12594
  br label %18, !dbg !12597

6:                                                ; preds = %1, %6
  %7 = phi i32 [ 0, %1 ], [ %14, %6 ]
  %8 = trunc i32 %7 to i16, !dbg !12598
  %9 = add nuw nsw i16 %8, 30, !dbg !12598
  %10 = tail call zeroext i8 @pmu_get_register_value(i16 noundef zeroext %9, i16 noundef zeroext 255, i16 noundef zeroext 0) #21, !dbg !12601
  %11 = zext i8 %10 to i32, !dbg !12601
  %12 = load i32, i32* @pmu_eint_handler.index, align 4, !dbg !12602
  %13 = getelementptr inbounds [7 x i32], [7 x i32]* @pmu_eint_handler.int_sts, i32 0, i32 %12, !dbg !12603
  store i32 %11, i32* %13, align 4, !dbg !12604
  %14 = add i32 %12, 1, !dbg !12605
  store i32 %14, i32* @pmu_eint_handler.index, align 4, !dbg !12589
  %15 = icmp ult i32 %14, 7, !dbg !12606
  br i1 %15, label %6, label %4, !dbg !12591, !llvm.loop !12607

16:                                               ; preds = %37
  store i32 0, i32* @pmu_eint_handler.index, align 4, !dbg !12609
  %17 = load i32, i32* getelementptr inbounds ([7 x i32], [7 x i32]* @pmu_eint_handler.int_sts, i32 0, i32 1), align 4, !dbg !12611
  br label %44, !dbg !12614

18:                                               ; preds = %4, %37
  %19 = phi i32 [ %5, %4 ], [ %39, %37 ], !dbg !12594
  %20 = phi i32 [ 0, %4 ], [ %40, %37 ]
  %21 = shl nuw nsw i32 %20, 1, !dbg !12615
  %22 = lshr i32 %19, %21, !dbg !12616
  %23 = and i32 %22, 3, !dbg !12617
  %24 = icmp eq i32 %23, 0, !dbg !12618
  br i1 %24, label %37, label %25, !dbg !12620

25:                                               ; preds = %18
  %26 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %20, i32 3, !dbg !12621
  %27 = load i8, i8* %26, align 1, !dbg !12621, !range !3343
  %28 = icmp eq i8 %27, 0, !dbg !12621
  br i1 %28, label %37, label %29, !dbg !12622

29:                                               ; preds = %25
  %30 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %20, i32 0, !dbg !12623
  %31 = load void (i8, i8*)*, void (i8, i8*)** %30, align 4, !dbg !12623
  %32 = trunc i32 %23 to i8, !dbg !12625
  %33 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %20, i32 1, !dbg !12626
  %34 = load i8*, i8** %33, align 4, !dbg !12626
  tail call void %31(i8 noundef zeroext %32, i8* noundef %34) #21, !dbg !12627
  %35 = load i32, i32* getelementptr inbounds ([7 x i32], [7 x i32]* @pmu_eint_handler.int_sts, i32 0, i32 0), align 4, !dbg !12594
  %36 = load i32, i32* @pmu_eint_handler.index, align 4, !dbg !12628
  br label %37, !dbg !12629

37:                                               ; preds = %18, %25, %29
  %38 = phi i32 [ %20, %18 ], [ %20, %25 ], [ %36, %29 ], !dbg !12628
  %39 = phi i32 [ %19, %18 ], [ %19, %25 ], [ %35, %29 ]
  %40 = add i32 %38, 1, !dbg !12628
  store i32 %40, i32* @pmu_eint_handler.index, align 4, !dbg !12592
  %41 = icmp ult i32 %40, 4, !dbg !12630
  br i1 %41, label %18, label %16, !dbg !12597, !llvm.loop !12631

42:                                               ; preds = %64
  store i32 0, i32* @pmu_eint_handler.index, align 4, !dbg !12633
  %43 = load i32, i32* getelementptr inbounds ([7 x i32], [7 x i32]* @pmu_eint_handler.int_sts, i32 0, i32 2), align 4, !dbg !12635
  br label %71, !dbg !12638

44:                                               ; preds = %16, %64
  %45 = phi i32 [ %17, %16 ], [ %66, %64 ], !dbg !12611
  %46 = phi i32 [ 0, %16 ], [ %67, %64 ]
  %47 = shl nuw nsw i32 %46, 1, !dbg !12639
  %48 = lshr i32 %45, %47, !dbg !12640
  %49 = and i32 %48, 3, !dbg !12641
  %50 = icmp eq i32 %49, 0, !dbg !12642
  br i1 %50, label %64, label %51, !dbg !12644

51:                                               ; preds = %44
  %52 = add nuw nsw i32 %46, 4, !dbg !12645
  %53 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %52, i32 3, !dbg !12646
  %54 = load i8, i8* %53, align 1, !dbg !12646, !range !3343
  %55 = icmp eq i8 %54, 0, !dbg !12646
  br i1 %55, label %64, label %56, !dbg !12647

56:                                               ; preds = %51
  %57 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %52, i32 0, !dbg !12648
  %58 = load void (i8, i8*)*, void (i8, i8*)** %57, align 4, !dbg !12648
  %59 = trunc i32 %49 to i8, !dbg !12650
  %60 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %52, i32 1, !dbg !12651
  %61 = load i8*, i8** %60, align 4, !dbg !12651
  tail call void %58(i8 noundef zeroext %59, i8* noundef %61) #21, !dbg !12652
  %62 = load i32, i32* getelementptr inbounds ([7 x i32], [7 x i32]* @pmu_eint_handler.int_sts, i32 0, i32 1), align 4, !dbg !12611
  %63 = load i32, i32* @pmu_eint_handler.index, align 4, !dbg !12653
  br label %64, !dbg !12654

64:                                               ; preds = %44, %51, %56
  %65 = phi i32 [ %46, %44 ], [ %46, %51 ], [ %63, %56 ], !dbg !12653
  %66 = phi i32 [ %45, %44 ], [ %45, %51 ], [ %62, %56 ]
  %67 = add i32 %65, 1, !dbg !12653
  store i32 %67, i32* @pmu_eint_handler.index, align 4, !dbg !12609
  %68 = icmp ult i32 %67, 4, !dbg !12655
  br i1 %68, label %44, label %42, !dbg !12614, !llvm.loop !12656

69:                                               ; preds = %91
  store i32 0, i32* @pmu_eint_handler.index, align 4, !dbg !12658
  %70 = load i32, i32* getelementptr inbounds ([7 x i32], [7 x i32]* @pmu_eint_handler.int_sts, i32 0, i32 3), align 4, !dbg !12660
  br label %98, !dbg !12663

71:                                               ; preds = %42, %91
  %72 = phi i32 [ %43, %42 ], [ %93, %91 ], !dbg !12635
  %73 = phi i32 [ 0, %42 ], [ %94, %91 ]
  %74 = shl nuw nsw i32 %73, 1, !dbg !12664
  %75 = lshr i32 %72, %74, !dbg !12665
  %76 = and i32 %75, 3, !dbg !12666
  %77 = icmp eq i32 %76, 0, !dbg !12667
  br i1 %77, label %91, label %78, !dbg !12669

78:                                               ; preds = %71
  %79 = add nuw nsw i32 %73, 8, !dbg !12670
  %80 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %79, i32 3, !dbg !12671
  %81 = load i8, i8* %80, align 1, !dbg !12671, !range !3343
  %82 = icmp eq i8 %81, 0, !dbg !12671
  br i1 %82, label %91, label %83, !dbg !12672

83:                                               ; preds = %78
  %84 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %79, i32 0, !dbg !12673
  %85 = load void (i8, i8*)*, void (i8, i8*)** %84, align 4, !dbg !12673
  %86 = trunc i32 %76 to i8, !dbg !12675
  %87 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %79, i32 1, !dbg !12676
  %88 = load i8*, i8** %87, align 4, !dbg !12676
  tail call void %85(i8 noundef zeroext %86, i8* noundef %88) #21, !dbg !12677
  %89 = load i32, i32* getelementptr inbounds ([7 x i32], [7 x i32]* @pmu_eint_handler.int_sts, i32 0, i32 2), align 4, !dbg !12635
  %90 = load i32, i32* @pmu_eint_handler.index, align 4, !dbg !12678
  br label %91, !dbg !12679

91:                                               ; preds = %71, %78, %83
  %92 = phi i32 [ %73, %71 ], [ %73, %78 ], [ %90, %83 ], !dbg !12678
  %93 = phi i32 [ %72, %71 ], [ %72, %78 ], [ %89, %83 ]
  %94 = add i32 %92, 1, !dbg !12678
  store i32 %94, i32* @pmu_eint_handler.index, align 4, !dbg !12633
  %95 = icmp ult i32 %94, 4, !dbg !12680
  br i1 %95, label %71, label %69, !dbg !12638, !llvm.loop !12681

96:                                               ; preds = %118
  store i32 0, i32* @pmu_eint_handler.index, align 4, !dbg !12683
  %97 = load i32, i32* getelementptr inbounds ([7 x i32], [7 x i32]* @pmu_eint_handler.int_sts, i32 0, i32 4), align 4, !dbg !12685
  br label %125, !dbg !12688

98:                                               ; preds = %69, %118
  %99 = phi i32 [ %70, %69 ], [ %120, %118 ], !dbg !12660
  %100 = phi i32 [ 0, %69 ], [ %121, %118 ]
  %101 = shl nuw nsw i32 %100, 1, !dbg !12689
  %102 = lshr i32 %99, %101, !dbg !12690
  %103 = and i32 %102, 3, !dbg !12691
  %104 = icmp eq i32 %103, 0, !dbg !12692
  br i1 %104, label %118, label %105, !dbg !12694

105:                                              ; preds = %98
  %106 = add nuw nsw i32 %100, 12, !dbg !12695
  %107 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %106, i32 3, !dbg !12696
  %108 = load i8, i8* %107, align 1, !dbg !12696, !range !3343
  %109 = icmp eq i8 %108, 0, !dbg !12696
  br i1 %109, label %118, label %110, !dbg !12697

110:                                              ; preds = %105
  %111 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %106, i32 0, !dbg !12698
  %112 = load void (i8, i8*)*, void (i8, i8*)** %111, align 4, !dbg !12698
  %113 = trunc i32 %103 to i8, !dbg !12700
  %114 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %106, i32 1, !dbg !12701
  %115 = load i8*, i8** %114, align 4, !dbg !12701
  tail call void %112(i8 noundef zeroext %113, i8* noundef %115) #21, !dbg !12702
  %116 = load i32, i32* getelementptr inbounds ([7 x i32], [7 x i32]* @pmu_eint_handler.int_sts, i32 0, i32 3), align 4, !dbg !12660
  %117 = load i32, i32* @pmu_eint_handler.index, align 4, !dbg !12703
  br label %118, !dbg !12704

118:                                              ; preds = %98, %105, %110
  %119 = phi i32 [ %100, %98 ], [ %100, %105 ], [ %117, %110 ], !dbg !12703
  %120 = phi i32 [ %99, %98 ], [ %99, %105 ], [ %116, %110 ]
  %121 = add i32 %119, 1, !dbg !12703
  store i32 %121, i32* @pmu_eint_handler.index, align 4, !dbg !12658
  %122 = icmp ult i32 %121, 4, !dbg !12705
  br i1 %122, label %98, label %96, !dbg !12663, !llvm.loop !12706

123:                                              ; preds = %145
  store i32 0, i32* @pmu_eint_handler.index, align 4, !dbg !12708
  %124 = load i32, i32* getelementptr inbounds ([7 x i32], [7 x i32]* @pmu_eint_handler.int_sts, i32 0, i32 5), align 4, !dbg !12710
  br label %152, !dbg !12713

125:                                              ; preds = %96, %145
  %126 = phi i32 [ %97, %96 ], [ %147, %145 ], !dbg !12685
  %127 = phi i32 [ 0, %96 ], [ %148, %145 ]
  %128 = shl nuw nsw i32 %127, 1, !dbg !12714
  %129 = lshr i32 %126, %128, !dbg !12715
  %130 = and i32 %129, 3, !dbg !12716
  %131 = icmp eq i32 %130, 0, !dbg !12717
  br i1 %131, label %145, label %132, !dbg !12719

132:                                              ; preds = %125
  %133 = add nuw nsw i32 %127, 16, !dbg !12720
  %134 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %133, i32 3, !dbg !12721
  %135 = load i8, i8* %134, align 1, !dbg !12721, !range !3343
  %136 = icmp eq i8 %135, 0, !dbg !12721
  br i1 %136, label %145, label %137, !dbg !12722

137:                                              ; preds = %132
  %138 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %133, i32 0, !dbg !12723
  %139 = load void (i8, i8*)*, void (i8, i8*)** %138, align 4, !dbg !12723
  %140 = trunc i32 %130 to i8, !dbg !12725
  %141 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %133, i32 1, !dbg !12726
  %142 = load i8*, i8** %141, align 4, !dbg !12726
  tail call void %139(i8 noundef zeroext %140, i8* noundef %142) #21, !dbg !12727
  %143 = load i32, i32* getelementptr inbounds ([7 x i32], [7 x i32]* @pmu_eint_handler.int_sts, i32 0, i32 4), align 4, !dbg !12685
  %144 = load i32, i32* @pmu_eint_handler.index, align 4, !dbg !12728
  br label %145, !dbg !12729

145:                                              ; preds = %125, %132, %137
  %146 = phi i32 [ %127, %125 ], [ %127, %132 ], [ %144, %137 ], !dbg !12728
  %147 = phi i32 [ %126, %125 ], [ %126, %132 ], [ %143, %137 ]
  %148 = add i32 %146, 1, !dbg !12728
  store i32 %148, i32* @pmu_eint_handler.index, align 4, !dbg !12683
  %149 = icmp ult i32 %148, 3, !dbg !12730
  br i1 %149, label %125, label %123, !dbg !12688, !llvm.loop !12731

150:                                              ; preds = %170
  store i32 0, i32* @pmu_eint_handler.index, align 4, !dbg !12733
  %151 = load i32, i32* getelementptr inbounds ([7 x i32], [7 x i32]* @pmu_eint_handler.int_sts, i32 0, i32 6), align 4, !dbg !12735
  br label %176, !dbg !12738

152:                                              ; preds = %123, %170
  %153 = phi i32 [ %124, %123 ], [ %172, %170 ], !dbg !12710
  %154 = phi i32 [ 0, %123 ], [ %173, %170 ]
  %155 = shl nuw nsw i32 1, %154, !dbg !12739
  %156 = and i32 %153, %155, !dbg !12739
  %157 = icmp eq i32 %156, 0, !dbg !12739
  br i1 %157, label %170, label %158, !dbg !12741

158:                                              ; preds = %152
  %159 = add nuw nsw i32 %154, 19, !dbg !12742
  %160 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %159, i32 3, !dbg !12743
  %161 = load i8, i8* %160, align 1, !dbg !12743, !range !3343
  %162 = icmp eq i8 %161, 0, !dbg !12743
  br i1 %162, label %170, label %163, !dbg !12744

163:                                              ; preds = %158
  %164 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %159, i32 0, !dbg !12745
  %165 = load void (i8, i8*)*, void (i8, i8*)** %164, align 4, !dbg !12745
  %166 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %159, i32 1, !dbg !12747
  %167 = load i8*, i8** %166, align 4, !dbg !12747
  tail call void %165(i8 noundef zeroext 1, i8* noundef %167) #21, !dbg !12748
  %168 = load i32, i32* getelementptr inbounds ([7 x i32], [7 x i32]* @pmu_eint_handler.int_sts, i32 0, i32 5), align 4, !dbg !12710
  %169 = load i32, i32* @pmu_eint_handler.index, align 4, !dbg !12749
  br label %170, !dbg !12750

170:                                              ; preds = %152, %158, %163
  %171 = phi i32 [ %154, %152 ], [ %154, %158 ], [ %169, %163 ], !dbg !12749
  %172 = phi i32 [ %153, %152 ], [ %153, %158 ], [ %168, %163 ]
  %173 = add i32 %171, 1, !dbg !12749
  store i32 %173, i32* @pmu_eint_handler.index, align 4, !dbg !12708
  %174 = icmp ult i32 %173, 8, !dbg !12751
  br i1 %174, label %152, label %150, !dbg !12713, !llvm.loop !12752

175:                                              ; preds = %194
  store i32 0, i32* @pmu_eint_handler.index, align 4, !dbg !12754
  br label %200, !dbg !12756

176:                                              ; preds = %150, %194
  %177 = phi i32 [ %151, %150 ], [ %196, %194 ], !dbg !12735
  %178 = phi i32 [ 0, %150 ], [ %197, %194 ]
  %179 = shl nuw nsw i32 1, %178, !dbg !12757
  %180 = and i32 %177, %179, !dbg !12757
  %181 = icmp eq i32 %180, 0, !dbg !12757
  br i1 %181, label %194, label %182, !dbg !12759

182:                                              ; preds = %176
  %183 = add nuw nsw i32 %178, 27, !dbg !12760
  %184 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %183, i32 3, !dbg !12761
  %185 = load i8, i8* %184, align 1, !dbg !12761, !range !3343
  %186 = icmp eq i8 %185, 0, !dbg !12761
  br i1 %186, label %194, label %187, !dbg !12762

187:                                              ; preds = %182
  %188 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %183, i32 0, !dbg !12763
  %189 = load void (i8, i8*)*, void (i8, i8*)** %188, align 4, !dbg !12763
  %190 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %183, i32 1, !dbg !12765
  %191 = load i8*, i8** %190, align 4, !dbg !12765
  tail call void %189(i8 noundef zeroext 1, i8* noundef %191) #21, !dbg !12766
  %192 = load i32, i32* getelementptr inbounds ([7 x i32], [7 x i32]* @pmu_eint_handler.int_sts, i32 0, i32 6), align 4, !dbg !12735
  %193 = load i32, i32* @pmu_eint_handler.index, align 4, !dbg !12767
  br label %194, !dbg !12768

194:                                              ; preds = %176, %182, %187
  %195 = phi i32 [ %178, %176 ], [ %178, %182 ], [ %193, %187 ], !dbg !12767
  %196 = phi i32 [ %177, %176 ], [ %177, %182 ], [ %192, %187 ]
  %197 = add i32 %195, 1, !dbg !12767
  store i32 %197, i32* @pmu_eint_handler.index, align 4, !dbg !12733
  %198 = icmp ult i32 %197, 5, !dbg !12769
  br i1 %198, label %176, label %175, !dbg !12738, !llvm.loop !12770

199:                                              ; preds = %200
  store i32 0, i32* @pmu_eint_handler.index, align 4, !dbg !12772
  br label %208, !dbg !12774

200:                                              ; preds = %175, %200
  %201 = phi i32 [ 0, %175 ], [ %206, %200 ]
  %202 = trunc i32 %201 to i16, !dbg !12775
  %203 = add nuw nsw i16 %202, 30, !dbg !12775
  %204 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext %203, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 255) #21, !dbg !12778
  %205 = load i32, i32* @pmu_eint_handler.index, align 4, !dbg !12779
  %206 = add i32 %205, 1, !dbg !12779
  store i32 %206, i32* @pmu_eint_handler.index, align 4, !dbg !12754
  %207 = icmp ult i32 %206, 7, !dbg !12780
  br i1 %207, label %200, label %199, !dbg !12756, !llvm.loop !12781

208:                                              ; preds = %199, %222
  %209 = phi i32 [ 0, %199 ], [ %224, %222 ]
  %210 = trunc i32 %209 to i16, !dbg !12783
  %211 = add nuw nsw i16 %210, 30, !dbg !12783
  %212 = tail call zeroext i8 @pmu_get_register_value(i16 noundef zeroext %211, i16 noundef zeroext 255, i16 noundef zeroext 0) #21, !dbg !12786
  %213 = zext i8 %212 to i32, !dbg !12786
  %214 = load i32, i32* @pmu_eint_handler.index, align 4, !dbg !12787
  %215 = getelementptr inbounds [7 x i32], [7 x i32]* @pmu_eint_handler.int_sts, i32 0, i32 %214, !dbg !12788
  store i32 %213, i32* %215, align 4, !dbg !12789
  %216 = icmp eq i8 %212, 0, !dbg !12790
  br i1 %216, label %222, label %217, !dbg !12792

217:                                              ; preds = %208
  %218 = trunc i32 %214 to i16, !dbg !12793
  %219 = add i16 %218, 30, !dbg !12793
  %220 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext %219, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 255) #21, !dbg !12795
  %221 = load i32, i32* @pmu_eint_handler.index, align 4, !dbg !12796
  br label %222, !dbg !12797

222:                                              ; preds = %208, %217
  %223 = phi i32 [ %214, %208 ], [ %221, %217 ], !dbg !12796
  %224 = add i32 %223, 1, !dbg !12796
  store i32 %224, i32* @pmu_eint_handler.index, align 4, !dbg !12772
  %225 = icmp ult i32 %224, 7, !dbg !12798
  br i1 %225, label %208, label %226, !dbg !12774, !llvm.loop !12799

226:                                              ; preds = %222
  tail call void @restore_interrupt_mask(i32 noundef %3) #21, !dbg !12801
  %227 = tail call i32 @hal_eint_unmask(i32 noundef 30) #21, !dbg !12802
  ret void, !dbg !12803
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @pmu_set_register_value_mt6385(i16 noundef zeroext %0, i16 noundef zeroext %1, i16 noundef zeroext %2, i16 noundef zeroext %3) local_unnamed_addr #0 !dbg !12804 {
  %5 = alloca [3 x i8], align 1
  %6 = alloca [1 x i8], align 1
  call void @llvm.dbg.value(metadata i16 %0, metadata !12806, metadata !DIExpression()), !dbg !12813
  call void @llvm.dbg.value(metadata i16 %1, metadata !12807, metadata !DIExpression()), !dbg !12813
  call void @llvm.dbg.value(metadata i16 %2, metadata !12808, metadata !DIExpression()), !dbg !12813
  call void @llvm.dbg.value(metadata i16 %3, metadata !12809, metadata !DIExpression()), !dbg !12813
  %7 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i32 0, i32 0, !dbg !12814
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %7) #22, !dbg !12814
  call void @llvm.dbg.declare(metadata [3 x i8]* %5, metadata !12810, metadata !DIExpression()), !dbg !12815
  %8 = getelementptr inbounds [1 x i8], [1 x i8]* %6, i32 0, i32 0, !dbg !12814
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %8) #22, !dbg !12814
  call void @llvm.dbg.declare(metadata [1 x i8]* %6, metadata !12811, metadata !DIExpression()), !dbg !12816
  %9 = trunc i16 %0 to i8, !dbg !12817
  %10 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i32 0, i32 1, !dbg !12818
  store i8 %9, i8* %10, align 1, !dbg !12819
  %11 = lshr i16 %0, 8, !dbg !12820
  %12 = trunc i16 %11 to i8, !dbg !12821
  %13 = or i8 %12, 64, !dbg !12821
  store i8 %13, i8* %7, align 1, !dbg !12822
  %14 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !12823
  call void @llvm.dbg.value(metadata i32 %14, metadata !12812, metadata !DIExpression()), !dbg !12813
  %15 = call zeroext i8 @Wrap_D2D_I2C_Read(i8* noundef nonnull %7, i8* noundef nonnull %8) #20, !dbg !12824
  %16 = zext i16 %1 to i32, !dbg !12825
  %17 = zext i16 %2 to i32, !dbg !12826
  %18 = shl i32 %16, %17, !dbg !12827
  %19 = load i8, i8* %8, align 1, !dbg !12828
  %20 = trunc i32 %18 to i8, !dbg !12828
  %21 = xor i8 %20, -1, !dbg !12828
  %22 = and i8 %19, %21, !dbg !12828
  store i8 %22, i8* %8, align 1, !dbg !12828
  %23 = zext i16 %3 to i32, !dbg !12829
  %24 = shl i32 %23, %17, !dbg !12830
  %25 = trunc i32 %24 to i8, !dbg !12831
  %26 = or i8 %22, %25, !dbg !12831
  %27 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i32 0, i32 2, !dbg !12832
  store i8 %26, i8* %27, align 1, !dbg !12833
  %28 = call zeroext i8 @Wrap_D2D_I2C_Write(i8* noundef nonnull %7) #20, !dbg !12834
  %29 = icmp eq i8 %28, 0, !dbg !12836
  call void @restore_interrupt_mask(i32 noundef %14) #21, !dbg !12837
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #22, !dbg !12838
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %7) #22, !dbg !12838
  ret i1 %29, !dbg !12838
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i8 @Wrap_D2D_I2C_Read(i8* noundef %0, i8* noundef %1) local_unnamed_addr #0 !dbg !12839 {
  %3 = alloca %struct.pmic_i2c_send_to_receive_config_t, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !12843, metadata !DIExpression()), !dbg !12856
  call void @llvm.dbg.value(metadata i8* %1, metadata !12844, metadata !DIExpression()), !dbg !12856
  %4 = getelementptr inbounds %struct.pmic_i2c_send_to_receive_config_t, %struct.pmic_i2c_send_to_receive_config_t* %3, i32 0, i32 0, !dbg !12857
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %4) #22, !dbg !12857
  call void @llvm.dbg.declare(metadata %struct.pmic_i2c_send_to_receive_config_t* %3, metadata !12845, metadata !DIExpression()), !dbg !12858
  call void @llvm.dbg.value(metadata i8 0, metadata !12854, metadata !DIExpression()), !dbg !12856
  %5 = load i8, i8* %0, align 1, !dbg !12859
  %6 = or i8 %5, 64, !dbg !12860
  store i8 %6, i8* %0, align 1, !dbg !12861
  store i8 107, i8* %4, align 4, !dbg !12862
  %7 = getelementptr inbounds %struct.pmic_i2c_send_to_receive_config_t, %struct.pmic_i2c_send_to_receive_config_t* %3, i32 0, i32 1, !dbg !12863
  store i8* %0, i8** %7, align 4, !dbg !12864
  %8 = getelementptr inbounds %struct.pmic_i2c_send_to_receive_config_t, %struct.pmic_i2c_send_to_receive_config_t* %3, i32 0, i32 2, !dbg !12865
  store i32 2, i32* %8, align 4, !dbg !12866
  %9 = getelementptr inbounds %struct.pmic_i2c_send_to_receive_config_t, %struct.pmic_i2c_send_to_receive_config_t* %3, i32 0, i32 3, !dbg !12867
  store i8* %1, i8** %9, align 4, !dbg !12868
  %10 = getelementptr inbounds %struct.pmic_i2c_send_to_receive_config_t, %struct.pmic_i2c_send_to_receive_config_t* %3, i32 0, i32 4, !dbg !12869
  store i32 1, i32* %10, align 4, !dbg !12870
  br label %11, !dbg !12871

11:                                               ; preds = %11, %2
  %12 = phi i8 [ 0, %2 ], [ %14, %11 ], !dbg !12856
  call void @llvm.dbg.value(metadata i8 %12, metadata !12854, metadata !DIExpression()), !dbg !12856
  %13 = call i32 @pmic_i2c_send_to_receive_polling(i32 noundef 0, %struct.pmic_i2c_send_to_receive_config_t* noundef nonnull %3) #21, !dbg !12872
  call void @llvm.dbg.value(metadata i32 %13, metadata !12855, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12856
  %14 = add nuw nsw i8 %12, 1, !dbg !12874
  call void @llvm.dbg.value(metadata i8 %14, metadata !12854, metadata !DIExpression()), !dbg !12856
  %15 = and i32 %13, 255, !dbg !12875
  %16 = icmp ne i32 %15, 0, !dbg !12876
  %17 = icmp ult i8 %12, 60, !dbg !12877
  %18 = select i1 %16, i1 %17, i1 false, !dbg !12877
  br i1 %18, label %11, label %19, !dbg !12878, !llvm.loop !12879

19:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8 %12, metadata !12854, metadata !DIExpression()), !dbg !12856
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %4) #22, !dbg !12881
  ret i8 %12, !dbg !12882
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i8 @Wrap_D2D_I2C_Write(i8* noundef %0) local_unnamed_addr #0 !dbg !12883 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12887, metadata !DIExpression()), !dbg !12890
  call void @llvm.dbg.value(metadata i8 0, metadata !12888, metadata !DIExpression()), !dbg !12890
  %2 = load i8, i8* %0, align 1, !dbg !12891
  %3 = or i8 %2, 64, !dbg !12892
  store i8 %3, i8* %0, align 1, !dbg !12893
  br label %4, !dbg !12894

4:                                                ; preds = %4, %1
  %5 = phi i8 [ 0, %1 ], [ %7, %4 ], !dbg !12890
  call void @llvm.dbg.value(metadata i8 %5, metadata !12888, metadata !DIExpression()), !dbg !12890
  %6 = tail call i32 @pmic_i2c_send_polling(i32 noundef 0, i8 noundef zeroext 107, i8* noundef nonnull %0, i32 noundef 3) #21, !dbg !12895
  call void @llvm.dbg.value(metadata i32 %6, metadata !12889, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12890
  %7 = add nuw nsw i8 %5, 1, !dbg !12897
  call void @llvm.dbg.value(metadata i8 %7, metadata !12888, metadata !DIExpression()), !dbg !12890
  %8 = and i32 %6, 255, !dbg !12898
  %9 = icmp ne i32 %8, 0, !dbg !12899
  %10 = icmp ult i8 %5, 60, !dbg !12900
  %11 = select i1 %9, i1 %10, i1 false, !dbg !12900
  br i1 %11, label %4, label %12, !dbg !12901, !llvm.loop !12902

12:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 %5, metadata !12888, metadata !DIExpression()), !dbg !12890
  ret i8 %5, !dbg !12904
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i8 @pmu_get_register_value_mt6385(i16 noundef zeroext %0, i16 noundef zeroext %1, i16 noundef zeroext %2) local_unnamed_addr #0 !dbg !12905 {
  %4 = alloca [2 x i8], align 1
  %5 = alloca [1 x i8], align 1
  call void @llvm.dbg.value(metadata i16 %0, metadata !12907, metadata !DIExpression()), !dbg !12914
  call void @llvm.dbg.value(metadata i16 %1, metadata !12908, metadata !DIExpression()), !dbg !12914
  call void @llvm.dbg.value(metadata i16 %2, metadata !12909, metadata !DIExpression()), !dbg !12914
  %6 = getelementptr inbounds [2 x i8], [2 x i8]* %4, i32 0, i32 0, !dbg !12915
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %6) #22, !dbg !12915
  call void @llvm.dbg.declare(metadata [2 x i8]* %4, metadata !12910, metadata !DIExpression()), !dbg !12916
  %7 = getelementptr inbounds [1 x i8], [1 x i8]* %5, i32 0, i32 0, !dbg !12915
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #22, !dbg !12915
  call void @llvm.dbg.declare(metadata [1 x i8]* %5, metadata !12912, metadata !DIExpression()), !dbg !12917
  %8 = trunc i16 %0 to i8, !dbg !12918
  %9 = getelementptr inbounds [2 x i8], [2 x i8]* %4, i32 0, i32 1, !dbg !12919
  store i8 %8, i8* %9, align 1, !dbg !12920
  %10 = lshr i16 %0, 8, !dbg !12921
  %11 = trunc i16 %10 to i8, !dbg !12922
  %12 = or i8 %11, 64, !dbg !12922
  store i8 %12, i8* %6, align 1, !dbg !12923
  %13 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !12924
  call void @llvm.dbg.value(metadata i32 %13, metadata !12913, metadata !DIExpression()), !dbg !12914
  %14 = call zeroext i8 @Wrap_D2D_I2C_Read(i8* noundef nonnull %6, i8* noundef nonnull %7) #20, !dbg !12925
  call void @restore_interrupt_mask(i32 noundef %13) #21, !dbg !12926
  %15 = load i8, i8* %7, align 1, !dbg !12927
  %16 = zext i8 %15 to i32, !dbg !12927
  %17 = zext i16 %2 to i32, !dbg !12928
  %18 = lshr i32 %16, %17, !dbg !12929
  %19 = zext i16 %1 to i32, !dbg !12930
  %20 = and i32 %18, %19, !dbg !12931
  %21 = trunc i32 %20 to i8, !dbg !12932
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #22, !dbg !12933
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %6) #22, !dbg !12933
  ret i8 %21, !dbg !12934
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pmu_register_callback(i32 noundef %0, i32 noundef %1, void (i8, i8*)* noundef %2, i8* noundef %3) local_unnamed_addr #0 !dbg !12935 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12941, metadata !DIExpression()), !dbg !12947
  call void @llvm.dbg.value(metadata i32 %1, metadata !12942, metadata !DIExpression()), !dbg !12947
  call void @llvm.dbg.value(metadata void (i8, i8*)* %2, metadata !12943, metadata !DIExpression()), !dbg !12947
  call void @llvm.dbg.value(metadata i8* %3, metadata !12944, metadata !DIExpression()), !dbg !12947
  call void @llvm.dbg.value(metadata i32 -1, metadata !12945, metadata !DIExpression()), !dbg !12947
  %5 = icmp ugt i32 %0, 31, !dbg !12948
  %6 = icmp eq void (i8, i8*)* %2, null
  %7 = or i1 %5, %6, !dbg !12950
  br i1 %7, label %16, label %8, !dbg !12950

8:                                                ; preds = %4
  %9 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !12951
  call void @llvm.dbg.value(metadata i32 %9, metadata !12946, metadata !DIExpression()), !dbg !12947
  %10 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %0, i32 0, !dbg !12952
  store void (i8, i8*)* %2, void (i8, i8*)** %10, align 4, !dbg !12953
  %11 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %0, i32 1, !dbg !12954
  store i8* %3, i8** %11, align 4, !dbg !12955
  %12 = trunc i32 %1 to i8, !dbg !12956
  %13 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %0, i32 2, !dbg !12957
  store i8 %12, i8* %13, align 4, !dbg !12958
  %14 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %0, i32 3, !dbg !12959
  store i8 1, i8* %14, align 1, !dbg !12960
  %15 = tail call i32 @pmu_enable_interrupt(i32 noundef %0, i32 noundef %1, i8 noundef zeroext 1) #20, !dbg !12961
  tail call void @restore_interrupt_mask(i32 noundef %9) #21, !dbg !12962
  call void @llvm.dbg.value(metadata i32 0, metadata !12945, metadata !DIExpression()), !dbg !12947
  br label %16, !dbg !12963

16:                                               ; preds = %4, %8
  %17 = phi i32 [ 0, %8 ], [ -2, %4 ], !dbg !12947
  ret i32 %17, !dbg !12964
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pmu_enable_interrupt(i32 noundef %0, i32 noundef %1, i8 noundef zeroext %2) local_unnamed_addr #0 !dbg !12965 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12969, metadata !DIExpression()), !dbg !12973
  call void @llvm.dbg.value(metadata i32 %1, metadata !12970, metadata !DIExpression()), !dbg !12973
  call void @llvm.dbg.value(metadata i8 %2, metadata !12971, metadata !DIExpression()), !dbg !12973
  call void @llvm.dbg.value(metadata i32 %0, metadata !12972, metadata !DIExpression()), !dbg !12973
  %4 = and i32 %0, 224, !dbg !12974
  %5 = icmp eq i32 %4, 0, !dbg !12976
  br i1 %5, label %6, label %275, !dbg !12977

6:                                                ; preds = %3
  %7 = trunc i32 %0 to i8, !dbg !12978
  switch i8 %7, label %275 [
    i8 0, label %8
    i8 1, label %20
    i8 2, label %32
    i8 3, label %44
    i8 4, label %56
    i8 5, label %68
    i8 6, label %80
    i8 7, label %92
    i8 8, label %104
    i8 9, label %116
    i8 10, label %128
    i8 11, label %140
    i8 12, label %152
    i8 13, label %164
    i8 14, label %176
    i8 15, label %188
    i8 16, label %200
    i8 17, label %212
    i8 18, label %224
    i8 19, label %236
    i8 20, label %239
    i8 21, label %242
    i8 22, label %245
    i8 23, label %248
    i8 24, label %251
    i8 25, label %254
    i8 26, label %257
    i8 27, label %260
    i8 28, label %263
    i8 29, label %266
    i8 30, label %269
    i8 31, label %272
  ], !dbg !12978

8:                                                ; preds = %6
  %9 = and i32 %1, 1, !dbg !12979
  %10 = icmp eq i32 %9, 0, !dbg !12982
  br i1 %10, label %14, label %11, !dbg !12983

11:                                               ; preds = %8
  %12 = zext i8 %2 to i16, !dbg !12984
  %13 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 37, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext %12) #21, !dbg !12986
  br label %14, !dbg !12987

14:                                               ; preds = %11, %8
  %15 = and i32 %1, 2, !dbg !12988
  %16 = icmp eq i32 %15, 0, !dbg !12990
  br i1 %16, label %275, label %17, !dbg !12991

17:                                               ; preds = %14
  %18 = zext i8 %2 to i16, !dbg !12992
  %19 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 37, i16 noundef zeroext 1, i16 noundef zeroext 1, i16 noundef zeroext %18) #21, !dbg !12994
  br label %275, !dbg !12995

20:                                               ; preds = %6
  %21 = and i32 %1, 1, !dbg !12996
  %22 = icmp eq i32 %21, 0, !dbg !12998
  br i1 %22, label %26, label %23, !dbg !12999

23:                                               ; preds = %20
  %24 = zext i8 %2 to i16, !dbg !13000
  %25 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 37, i16 noundef zeroext 1, i16 noundef zeroext 2, i16 noundef zeroext %24) #21, !dbg !13002
  br label %26, !dbg !13003

26:                                               ; preds = %23, %20
  %27 = and i32 %1, 2, !dbg !13004
  %28 = icmp eq i32 %27, 0, !dbg !13006
  br i1 %28, label %275, label %29, !dbg !13007

29:                                               ; preds = %26
  %30 = zext i8 %2 to i16, !dbg !13008
  %31 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 37, i16 noundef zeroext 1, i16 noundef zeroext 3, i16 noundef zeroext %30) #21, !dbg !13010
  br label %275, !dbg !13011

32:                                               ; preds = %6
  %33 = and i32 %1, 1, !dbg !13012
  %34 = icmp eq i32 %33, 0, !dbg !13014
  br i1 %34, label %38, label %35, !dbg !13015

35:                                               ; preds = %32
  %36 = zext i8 %2 to i16, !dbg !13016
  %37 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 37, i16 noundef zeroext 1, i16 noundef zeroext 4, i16 noundef zeroext %36) #21, !dbg !13018
  br label %38, !dbg !13019

38:                                               ; preds = %35, %32
  %39 = and i32 %1, 2, !dbg !13020
  %40 = icmp eq i32 %39, 0, !dbg !13022
  br i1 %40, label %275, label %41, !dbg !13023

41:                                               ; preds = %38
  %42 = zext i8 %2 to i16, !dbg !13024
  %43 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 37, i16 noundef zeroext 1, i16 noundef zeroext 5, i16 noundef zeroext %42) #21, !dbg !13026
  br label %275, !dbg !13027

44:                                               ; preds = %6
  %45 = and i32 %1, 1, !dbg !13028
  %46 = icmp eq i32 %45, 0, !dbg !13030
  br i1 %46, label %50, label %47, !dbg !13031

47:                                               ; preds = %44
  %48 = zext i8 %2 to i16, !dbg !13032
  %49 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 37, i16 noundef zeroext 1, i16 noundef zeroext 6, i16 noundef zeroext %48) #21, !dbg !13034
  br label %50, !dbg !13035

50:                                               ; preds = %47, %44
  %51 = and i32 %1, 2, !dbg !13036
  %52 = icmp eq i32 %51, 0, !dbg !13038
  br i1 %52, label %275, label %53, !dbg !13039

53:                                               ; preds = %50
  %54 = zext i8 %2 to i16, !dbg !13040
  %55 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 37, i16 noundef zeroext 1, i16 noundef zeroext 7, i16 noundef zeroext %54) #21, !dbg !13042
  br label %275, !dbg !13043

56:                                               ; preds = %6
  %57 = and i32 %1, 1, !dbg !13044
  %58 = icmp eq i32 %57, 0, !dbg !13046
  br i1 %58, label %62, label %59, !dbg !13047

59:                                               ; preds = %56
  %60 = zext i8 %2 to i16, !dbg !13048
  %61 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 38, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext %60) #21, !dbg !13050
  br label %62, !dbg !13051

62:                                               ; preds = %59, %56
  %63 = and i32 %1, 2, !dbg !13052
  %64 = icmp eq i32 %63, 0, !dbg !13054
  br i1 %64, label %275, label %65, !dbg !13055

65:                                               ; preds = %62
  %66 = zext i8 %2 to i16, !dbg !13056
  %67 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 38, i16 noundef zeroext 1, i16 noundef zeroext 1, i16 noundef zeroext %66) #21, !dbg !13058
  br label %275, !dbg !13059

68:                                               ; preds = %6
  %69 = and i32 %1, 1, !dbg !13060
  %70 = icmp eq i32 %69, 0, !dbg !13062
  br i1 %70, label %74, label %71, !dbg !13063

71:                                               ; preds = %68
  %72 = zext i8 %2 to i16, !dbg !13064
  %73 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 38, i16 noundef zeroext 1, i16 noundef zeroext 2, i16 noundef zeroext %72) #21, !dbg !13066
  br label %74, !dbg !13067

74:                                               ; preds = %71, %68
  %75 = and i32 %1, 2, !dbg !13068
  %76 = icmp eq i32 %75, 0, !dbg !13070
  br i1 %76, label %275, label %77, !dbg !13071

77:                                               ; preds = %74
  %78 = zext i8 %2 to i16, !dbg !13072
  %79 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 38, i16 noundef zeroext 1, i16 noundef zeroext 3, i16 noundef zeroext %78) #21, !dbg !13074
  br label %275, !dbg !13075

80:                                               ; preds = %6
  %81 = and i32 %1, 1, !dbg !13076
  %82 = icmp eq i32 %81, 0, !dbg !13078
  br i1 %82, label %86, label %83, !dbg !13079

83:                                               ; preds = %80
  %84 = zext i8 %2 to i16, !dbg !13080
  %85 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 38, i16 noundef zeroext 1, i16 noundef zeroext 4, i16 noundef zeroext %84) #21, !dbg !13082
  br label %86, !dbg !13083

86:                                               ; preds = %83, %80
  %87 = and i32 %1, 2, !dbg !13084
  %88 = icmp eq i32 %87, 0, !dbg !13086
  br i1 %88, label %275, label %89, !dbg !13087

89:                                               ; preds = %86
  %90 = zext i8 %2 to i16, !dbg !13088
  %91 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 38, i16 noundef zeroext 1, i16 noundef zeroext 5, i16 noundef zeroext %90) #21, !dbg !13090
  br label %275, !dbg !13091

92:                                               ; preds = %6
  %93 = and i32 %1, 1, !dbg !13092
  %94 = icmp eq i32 %93, 0, !dbg !13094
  br i1 %94, label %98, label %95, !dbg !13095

95:                                               ; preds = %92
  %96 = zext i8 %2 to i16, !dbg !13096
  %97 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 38, i16 noundef zeroext 1, i16 noundef zeroext 6, i16 noundef zeroext %96) #21, !dbg !13098
  br label %98, !dbg !13099

98:                                               ; preds = %95, %92
  %99 = and i32 %1, 2, !dbg !13100
  %100 = icmp eq i32 %99, 0, !dbg !13102
  br i1 %100, label %275, label %101, !dbg !13103

101:                                              ; preds = %98
  %102 = zext i8 %2 to i16, !dbg !13104
  %103 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 38, i16 noundef zeroext 1, i16 noundef zeroext 7, i16 noundef zeroext %102) #21, !dbg !13106
  br label %275, !dbg !13107

104:                                              ; preds = %6
  %105 = and i32 %1, 1, !dbg !13108
  %106 = icmp eq i32 %105, 0, !dbg !13110
  br i1 %106, label %110, label %107, !dbg !13111

107:                                              ; preds = %104
  %108 = zext i8 %2 to i16, !dbg !13112
  %109 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 39, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext %108) #21, !dbg !13114
  br label %110, !dbg !13115

110:                                              ; preds = %107, %104
  %111 = and i32 %1, 2, !dbg !13116
  %112 = icmp eq i32 %111, 0, !dbg !13118
  br i1 %112, label %275, label %113, !dbg !13119

113:                                              ; preds = %110
  %114 = zext i8 %2 to i16, !dbg !13120
  %115 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 39, i16 noundef zeroext 1, i16 noundef zeroext 1, i16 noundef zeroext %114) #21, !dbg !13122
  br label %275, !dbg !13123

116:                                              ; preds = %6
  %117 = and i32 %1, 1, !dbg !13124
  %118 = icmp eq i32 %117, 0, !dbg !13126
  br i1 %118, label %122, label %119, !dbg !13127

119:                                              ; preds = %116
  %120 = zext i8 %2 to i16, !dbg !13128
  %121 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 39, i16 noundef zeroext 1, i16 noundef zeroext 2, i16 noundef zeroext %120) #21, !dbg !13130
  br label %122, !dbg !13131

122:                                              ; preds = %119, %116
  %123 = and i32 %1, 2, !dbg !13132
  %124 = icmp eq i32 %123, 0, !dbg !13134
  br i1 %124, label %275, label %125, !dbg !13135

125:                                              ; preds = %122
  %126 = zext i8 %2 to i16, !dbg !13136
  %127 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 39, i16 noundef zeroext 1, i16 noundef zeroext 3, i16 noundef zeroext %126) #21, !dbg !13138
  br label %275, !dbg !13139

128:                                              ; preds = %6
  %129 = and i32 %1, 1, !dbg !13140
  %130 = icmp eq i32 %129, 0, !dbg !13142
  br i1 %130, label %134, label %131, !dbg !13143

131:                                              ; preds = %128
  %132 = zext i8 %2 to i16, !dbg !13144
  %133 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 39, i16 noundef zeroext 1, i16 noundef zeroext 4, i16 noundef zeroext %132) #21, !dbg !13146
  br label %134, !dbg !13147

134:                                              ; preds = %131, %128
  %135 = and i32 %1, 2, !dbg !13148
  %136 = icmp eq i32 %135, 0, !dbg !13150
  br i1 %136, label %275, label %137, !dbg !13151

137:                                              ; preds = %134
  %138 = zext i8 %2 to i16, !dbg !13152
  %139 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 39, i16 noundef zeroext 1, i16 noundef zeroext 5, i16 noundef zeroext %138) #21, !dbg !13154
  br label %275, !dbg !13155

140:                                              ; preds = %6
  %141 = and i32 %1, 1, !dbg !13156
  %142 = icmp eq i32 %141, 0, !dbg !13158
  br i1 %142, label %146, label %143, !dbg !13159

143:                                              ; preds = %140
  %144 = zext i8 %2 to i16, !dbg !13160
  %145 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 39, i16 noundef zeroext 1, i16 noundef zeroext 6, i16 noundef zeroext %144) #21, !dbg !13162
  br label %146, !dbg !13163

146:                                              ; preds = %143, %140
  %147 = and i32 %1, 2, !dbg !13164
  %148 = icmp eq i32 %147, 0, !dbg !13166
  br i1 %148, label %275, label %149, !dbg !13167

149:                                              ; preds = %146
  %150 = zext i8 %2 to i16, !dbg !13168
  %151 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 39, i16 noundef zeroext 1, i16 noundef zeroext 7, i16 noundef zeroext %150) #21, !dbg !13170
  br label %275, !dbg !13171

152:                                              ; preds = %6
  %153 = and i32 %1, 1, !dbg !13172
  %154 = icmp eq i32 %153, 0, !dbg !13174
  br i1 %154, label %158, label %155, !dbg !13175

155:                                              ; preds = %152
  %156 = zext i8 %2 to i16, !dbg !13176
  %157 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 40, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext %156) #21, !dbg !13178
  br label %158, !dbg !13179

158:                                              ; preds = %155, %152
  %159 = and i32 %1, 2, !dbg !13180
  %160 = icmp eq i32 %159, 0, !dbg !13182
  br i1 %160, label %275, label %161, !dbg !13183

161:                                              ; preds = %158
  %162 = zext i8 %2 to i16, !dbg !13184
  %163 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 40, i16 noundef zeroext 1, i16 noundef zeroext 1, i16 noundef zeroext %162) #21, !dbg !13186
  br label %275, !dbg !13187

164:                                              ; preds = %6
  %165 = and i32 %1, 1, !dbg !13188
  %166 = icmp eq i32 %165, 0, !dbg !13190
  br i1 %166, label %170, label %167, !dbg !13191

167:                                              ; preds = %164
  %168 = zext i8 %2 to i16, !dbg !13192
  %169 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 40, i16 noundef zeroext 1, i16 noundef zeroext 2, i16 noundef zeroext %168) #21, !dbg !13194
  br label %170, !dbg !13195

170:                                              ; preds = %167, %164
  %171 = and i32 %1, 2, !dbg !13196
  %172 = icmp eq i32 %171, 0, !dbg !13198
  br i1 %172, label %275, label %173, !dbg !13199

173:                                              ; preds = %170
  %174 = zext i8 %2 to i16, !dbg !13200
  %175 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 40, i16 noundef zeroext 1, i16 noundef zeroext 3, i16 noundef zeroext %174) #21, !dbg !13202
  br label %275, !dbg !13203

176:                                              ; preds = %6
  %177 = and i32 %1, 1, !dbg !13204
  %178 = icmp eq i32 %177, 0, !dbg !13206
  br i1 %178, label %182, label %179, !dbg !13207

179:                                              ; preds = %176
  %180 = zext i8 %2 to i16, !dbg !13208
  %181 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 40, i16 noundef zeroext 1, i16 noundef zeroext 4, i16 noundef zeroext %180) #21, !dbg !13210
  br label %182, !dbg !13211

182:                                              ; preds = %179, %176
  %183 = and i32 %1, 2, !dbg !13212
  %184 = icmp eq i32 %183, 0, !dbg !13214
  br i1 %184, label %275, label %185, !dbg !13215

185:                                              ; preds = %182
  %186 = zext i8 %2 to i16, !dbg !13216
  %187 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 40, i16 noundef zeroext 1, i16 noundef zeroext 5, i16 noundef zeroext %186) #21, !dbg !13218
  br label %275, !dbg !13219

188:                                              ; preds = %6
  %189 = and i32 %1, 1, !dbg !13220
  %190 = icmp eq i32 %189, 0, !dbg !13222
  br i1 %190, label %194, label %191, !dbg !13223

191:                                              ; preds = %188
  %192 = zext i8 %2 to i16, !dbg !13224
  %193 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 40, i16 noundef zeroext 1, i16 noundef zeroext 6, i16 noundef zeroext %192) #21, !dbg !13226
  br label %194, !dbg !13227

194:                                              ; preds = %191, %188
  %195 = and i32 %1, 2, !dbg !13228
  %196 = icmp eq i32 %195, 0, !dbg !13230
  br i1 %196, label %275, label %197, !dbg !13231

197:                                              ; preds = %194
  %198 = zext i8 %2 to i16, !dbg !13232
  %199 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 40, i16 noundef zeroext 1, i16 noundef zeroext 7, i16 noundef zeroext %198) #21, !dbg !13234
  br label %275, !dbg !13235

200:                                              ; preds = %6
  %201 = and i32 %1, 1, !dbg !13236
  %202 = icmp eq i32 %201, 0, !dbg !13238
  br i1 %202, label %206, label %203, !dbg !13239

203:                                              ; preds = %200
  %204 = zext i8 %2 to i16, !dbg !13240
  %205 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 41, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext %204) #21, !dbg !13242
  br label %206, !dbg !13243

206:                                              ; preds = %203, %200
  %207 = and i32 %1, 2, !dbg !13244
  %208 = icmp eq i32 %207, 0, !dbg !13246
  br i1 %208, label %275, label %209, !dbg !13247

209:                                              ; preds = %206
  %210 = zext i8 %2 to i16, !dbg !13248
  %211 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 41, i16 noundef zeroext 1, i16 noundef zeroext 1, i16 noundef zeroext %210) #21, !dbg !13250
  br label %275, !dbg !13251

212:                                              ; preds = %6
  %213 = and i32 %1, 1, !dbg !13252
  %214 = icmp eq i32 %213, 0, !dbg !13254
  br i1 %214, label %218, label %215, !dbg !13255

215:                                              ; preds = %212
  %216 = zext i8 %2 to i16, !dbg !13256
  %217 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 41, i16 noundef zeroext 1, i16 noundef zeroext 2, i16 noundef zeroext %216) #21, !dbg !13258
  br label %218, !dbg !13259

218:                                              ; preds = %215, %212
  %219 = and i32 %1, 2, !dbg !13260
  %220 = icmp eq i32 %219, 0, !dbg !13262
  br i1 %220, label %275, label %221, !dbg !13263

221:                                              ; preds = %218
  %222 = zext i8 %2 to i16, !dbg !13264
  %223 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 41, i16 noundef zeroext 1, i16 noundef zeroext 3, i16 noundef zeroext %222) #21, !dbg !13266
  br label %275, !dbg !13267

224:                                              ; preds = %6
  %225 = and i32 %1, 1, !dbg !13268
  %226 = icmp eq i32 %225, 0, !dbg !13270
  br i1 %226, label %230, label %227, !dbg !13271

227:                                              ; preds = %224
  %228 = zext i8 %2 to i16, !dbg !13272
  %229 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 41, i16 noundef zeroext 1, i16 noundef zeroext 4, i16 noundef zeroext %228) #21, !dbg !13274
  br label %230, !dbg !13275

230:                                              ; preds = %227, %224
  %231 = and i32 %1, 2, !dbg !13276
  %232 = icmp eq i32 %231, 0, !dbg !13278
  br i1 %232, label %275, label %233, !dbg !13279

233:                                              ; preds = %230
  %234 = zext i8 %2 to i16, !dbg !13280
  %235 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 41, i16 noundef zeroext 1, i16 noundef zeroext 5, i16 noundef zeroext %234) #21, !dbg !13282
  br label %275, !dbg !13283

236:                                              ; preds = %6
  %237 = zext i8 %2 to i16, !dbg !13284
  %238 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 42, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext %237) #21, !dbg !13285
  br label %275, !dbg !13286

239:                                              ; preds = %6
  %240 = zext i8 %2 to i16, !dbg !13287
  %241 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 42, i16 noundef zeroext 1, i16 noundef zeroext 1, i16 noundef zeroext %240) #21, !dbg !13288
  br label %275, !dbg !13289

242:                                              ; preds = %6
  %243 = zext i8 %2 to i16, !dbg !13290
  %244 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 42, i16 noundef zeroext 1, i16 noundef zeroext 2, i16 noundef zeroext %243) #21, !dbg !13291
  br label %275, !dbg !13292

245:                                              ; preds = %6
  %246 = zext i8 %2 to i16, !dbg !13293
  %247 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 42, i16 noundef zeroext 1, i16 noundef zeroext 3, i16 noundef zeroext %246) #21, !dbg !13294
  br label %275, !dbg !13295

248:                                              ; preds = %6
  %249 = zext i8 %2 to i16, !dbg !13296
  %250 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 42, i16 noundef zeroext 1, i16 noundef zeroext 4, i16 noundef zeroext %249) #21, !dbg !13297
  br label %275, !dbg !13298

251:                                              ; preds = %6
  %252 = zext i8 %2 to i16, !dbg !13299
  %253 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 42, i16 noundef zeroext 1, i16 noundef zeroext 5, i16 noundef zeroext %252) #21, !dbg !13300
  br label %275, !dbg !13301

254:                                              ; preds = %6
  %255 = zext i8 %2 to i16, !dbg !13302
  %256 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 42, i16 noundef zeroext 1, i16 noundef zeroext 6, i16 noundef zeroext %255) #21, !dbg !13303
  br label %275, !dbg !13304

257:                                              ; preds = %6
  %258 = zext i8 %2 to i16, !dbg !13305
  %259 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 42, i16 noundef zeroext 1, i16 noundef zeroext 7, i16 noundef zeroext %258) #21, !dbg !13306
  br label %275, !dbg !13307

260:                                              ; preds = %6
  %261 = zext i8 %2 to i16, !dbg !13308
  %262 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 43, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext %261) #21, !dbg !13309
  br label %275, !dbg !13310

263:                                              ; preds = %6
  %264 = zext i8 %2 to i16, !dbg !13311
  %265 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 43, i16 noundef zeroext 1, i16 noundef zeroext 1, i16 noundef zeroext %264) #21, !dbg !13312
  br label %275, !dbg !13313

266:                                              ; preds = %6
  %267 = zext i8 %2 to i16, !dbg !13314
  %268 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 43, i16 noundef zeroext 1, i16 noundef zeroext 2, i16 noundef zeroext %267) #21, !dbg !13315
  br label %275, !dbg !13316

269:                                              ; preds = %6
  %270 = zext i8 %2 to i16, !dbg !13317
  %271 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 43, i16 noundef zeroext 1, i16 noundef zeroext 3, i16 noundef zeroext %270) #21, !dbg !13318
  br label %275, !dbg !13319

272:                                              ; preds = %6
  %273 = zext i8 %2 to i16, !dbg !13320
  %274 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 43, i16 noundef zeroext 1, i16 noundef zeroext 4, i16 noundef zeroext %273) #21, !dbg !13321
  br label %275, !dbg !13322

275:                                              ; preds = %236, %239, %242, %245, %248, %251, %254, %257, %260, %263, %266, %269, %272, %6, %17, %14, %29, %26, %41, %38, %53, %50, %65, %62, %77, %74, %89, %86, %101, %98, %113, %110, %125, %122, %137, %134, %149, %146, %161, %158, %173, %170, %185, %182, %197, %194, %209, %206, %221, %218, %233, %230, %3
  %276 = phi i32 [ -1, %3 ], [ 0, %230 ], [ 0, %233 ], [ 0, %218 ], [ 0, %221 ], [ 0, %206 ], [ 0, %209 ], [ 0, %194 ], [ 0, %197 ], [ 0, %182 ], [ 0, %185 ], [ 0, %170 ], [ 0, %173 ], [ 0, %158 ], [ 0, %161 ], [ 0, %146 ], [ 0, %149 ], [ 0, %134 ], [ 0, %137 ], [ 0, %122 ], [ 0, %125 ], [ 0, %110 ], [ 0, %113 ], [ 0, %98 ], [ 0, %101 ], [ 0, %86 ], [ 0, %89 ], [ 0, %74 ], [ 0, %77 ], [ 0, %62 ], [ 0, %65 ], [ 0, %50 ], [ 0, %53 ], [ 0, %38 ], [ 0, %41 ], [ 0, %26 ], [ 0, %29 ], [ 0, %14 ], [ 0, %17 ], [ 0, %6 ], [ 0, %272 ], [ 0, %269 ], [ 0, %266 ], [ 0, %263 ], [ 0, %260 ], [ 0, %257 ], [ 0, %254 ], [ 0, %251 ], [ 0, %248 ], [ 0, %245 ], [ 0, %242 ], [ 0, %239 ], [ 0, %236 ], !dbg !12973
  ret i32 %276, !dbg !13323
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pmu_disable_interrupt(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !13324 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13328, metadata !DIExpression()), !dbg !13332
  call void @llvm.dbg.value(metadata i32 %1, metadata !13329, metadata !DIExpression()), !dbg !13332
  call void @llvm.dbg.value(metadata i32 -1, metadata !13330, metadata !DIExpression()), !dbg !13332
  %3 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !13333
  call void @llvm.dbg.value(metadata i32 %3, metadata !13331, metadata !DIExpression()), !dbg !13332
  %4 = tail call i32 @pmu_enable_interrupt(i32 noundef %0, i32 noundef %1, i8 noundef zeroext 0) #20, !dbg !13334
  %5 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %0, i32 3, !dbg !13335
  store i8 1, i8* %5, align 1, !dbg !13336
  tail call void @restore_interrupt_mask(i32 noundef %3) #21, !dbg !13337
  call void @llvm.dbg.value(metadata i32 0, metadata !13330, metadata !DIExpression()), !dbg !13332
  ret i32 0, !dbg !13338
}

; Function Attrs: noinline nounwind optsize
define dso_local void @pmu_auxadc_init() local_unnamed_addr #0 !dbg !13339 {
  %1 = tail call zeroext i8 @pmu_get_register_value(i16 noundef zeroext 615, i16 noundef zeroext 127, i16 noundef zeroext 0) #21, !dbg !13343
  call void @llvm.dbg.value(metadata i8 %1, metadata !13341, metadata !DIExpression()), !dbg !13344
  %2 = and i8 %1, 8, !dbg !13345
  %3 = icmp eq i8 %2, 0, !dbg !13347
  %4 = and i8 %1, -113, !dbg !13348
  %5 = select i1 %3, i8 0, i8 112, !dbg !13348
  %6 = or i8 %5, %4, !dbg !13348
  call void @llvm.dbg.value(metadata i8 %6, metadata !13341, metadata !DIExpression()), !dbg !13344
  %7 = zext i8 %6 to i16, !dbg !13349
  %8 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 615, i16 noundef zeroext 127, i16 noundef zeroext 0, i16 noundef zeroext %7) #21, !dbg !13350
  %9 = tail call zeroext i8 @pmu_get_register_value(i16 noundef zeroext 617, i16 noundef zeroext 127, i16 noundef zeroext 0) #21, !dbg !13351
  call void @llvm.dbg.value(metadata i8 %9, metadata !13342, metadata !DIExpression()), !dbg !13344
  %10 = and i8 %9, 4, !dbg !13352
  %11 = icmp eq i8 %10, 0, !dbg !13354
  %12 = and i8 %9, -121, !dbg !13355
  %13 = select i1 %11, i8 0, i8 120, !dbg !13355
  %14 = or i8 %13, %12, !dbg !13355
  call void @llvm.dbg.value(metadata i8 %14, metadata !13342, metadata !DIExpression()), !dbg !13344
  %15 = zext i8 %14 to i16, !dbg !13356
  %16 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 617, i16 noundef zeroext 127, i16 noundef zeroext 0, i16 noundef zeroext %15) #21, !dbg !13357
  ret void, !dbg !13358
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pmu_auxadc_get_channel_value(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !13359 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13364, metadata !DIExpression()), !dbg !13375
  call void @llvm.dbg.value(metadata i32 %1, metadata !13365, metadata !DIExpression()), !dbg !13375
  call void @llvm.dbg.value(metadata i32 %2, metadata !13366, metadata !DIExpression()), !dbg !13375
  call void @llvm.dbg.value(metadata i32 %0, metadata !13367, metadata !DIExpression()), !dbg !13375
  %4 = and i32 %0, 254, !dbg !13376
  %5 = icmp ugt i32 %4, 13, !dbg !13378
  br i1 %5, label %87, label %6, !dbg !13379

6:                                                ; preds = %3
  %7 = trunc i32 %0 to i8, !dbg !13380
  switch i8 %7, label %49 [
    i8 0, label %8
    i8 1, label %11
    i8 2, label %14
    i8 3, label %17
    i8 4, label %20
    i8 5, label %23
    i8 6, label %26
    i8 7, label %29
    i8 8, label %32
    i8 9, label %35
    i8 10, label %38
    i8 11, label %41
    i8 12, label %44
    i8 13, label %47
  ], !dbg !13380

8:                                                ; preds = %6
  %9 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 594, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext 1) #21, !dbg !13381
  tail call void @pmu_auxadc_delay(i32 noundef 1) #20, !dbg !13383
  %10 = tail call zeroext i16 @aux_get_adc_result(i32 noundef 512) #20, !dbg !13384
  call void @llvm.dbg.value(metadata i16 %10, metadata !13368, metadata !DIExpression()), !dbg !13375
  br label %49, !dbg !13385

11:                                               ; preds = %6
  %12 = tail call i32 @pmu_auxadc_get_isense() #20, !dbg !13386
  %13 = trunc i32 %12 to i16, !dbg !13386
  call void @llvm.dbg.value(metadata i16 %13, metadata !13368, metadata !DIExpression()), !dbg !13375
  br label %49, !dbg !13387

14:                                               ; preds = %6
  %15 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 594, i16 noundef zeroext 1, i16 noundef zeroext 2, i16 noundef zeroext 1) #21, !dbg !13388
  tail call void @pmu_auxadc_delay(i32 noundef 1) #20, !dbg !13389
  %16 = tail call zeroext i16 @aux_get_adc_result(i32 noundef 516) #20, !dbg !13390
  call void @llvm.dbg.value(metadata i16 %16, metadata !13368, metadata !DIExpression()), !dbg !13375
  br label %49, !dbg !13391

17:                                               ; preds = %6
  %18 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 594, i16 noundef zeroext 1, i16 noundef zeroext 3, i16 noundef zeroext 1) #21, !dbg !13392
  tail call void @pmu_auxadc_delay(i32 noundef 1) #20, !dbg !13393
  %19 = tail call zeroext i16 @aux_get_adc_result(i32 noundef 518) #20, !dbg !13394
  call void @llvm.dbg.value(metadata i16 %19, metadata !13368, metadata !DIExpression()), !dbg !13375
  br label %49, !dbg !13395

20:                                               ; preds = %6
  %21 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 594, i16 noundef zeroext 1, i16 noundef zeroext 4, i16 noundef zeroext 1) #21, !dbg !13396
  tail call void @pmu_auxadc_delay(i32 noundef 1) #20, !dbg !13397
  %22 = tail call zeroext i16 @aux_get_adc_result(i32 noundef 520) #20, !dbg !13398
  call void @llvm.dbg.value(metadata i16 %22, metadata !13368, metadata !DIExpression()), !dbg !13375
  br label %49, !dbg !13399

23:                                               ; preds = %6
  %24 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 594, i16 noundef zeroext 1, i16 noundef zeroext 5, i16 noundef zeroext 1) #21, !dbg !13400
  tail call void @pmu_auxadc_delay(i32 noundef 1) #20, !dbg !13401
  %25 = tail call zeroext i16 @aux_get_adc_result(i32 noundef 522) #20, !dbg !13402
  call void @llvm.dbg.value(metadata i16 %25, metadata !13368, metadata !DIExpression()), !dbg !13375
  br label %49, !dbg !13403

26:                                               ; preds = %6
  %27 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 594, i16 noundef zeroext 1, i16 noundef zeroext 6, i16 noundef zeroext 1) #21, !dbg !13404
  tail call void @pmu_auxadc_delay(i32 noundef 1) #20, !dbg !13405
  %28 = tail call zeroext i16 @aux_get_adc_result(i32 noundef 524) #20, !dbg !13406
  call void @llvm.dbg.value(metadata i16 %28, metadata !13368, metadata !DIExpression()), !dbg !13375
  br label %49, !dbg !13407

29:                                               ; preds = %6
  %30 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 594, i16 noundef zeroext 1, i16 noundef zeroext 7, i16 noundef zeroext 1) #21, !dbg !13408
  tail call void @pmu_auxadc_delay(i32 noundef 1) #20, !dbg !13409
  %31 = tail call zeroext i16 @aux_get_adc_result(i32 noundef 526) #20, !dbg !13410
  call void @llvm.dbg.value(metadata i16 %31, metadata !13368, metadata !DIExpression()), !dbg !13375
  br label %49, !dbg !13411

32:                                               ; preds = %6
  %33 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 595, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext 1) #21, !dbg !13412
  tail call void @pmu_auxadc_delay(i32 noundef 1) #20, !dbg !13413
  %34 = tail call zeroext i16 @aux_get_adc_result(i32 noundef 528) #20, !dbg !13414
  call void @llvm.dbg.value(metadata i16 %34, metadata !13368, metadata !DIExpression()), !dbg !13375
  br label %49, !dbg !13415

35:                                               ; preds = %6
  %36 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 595, i16 noundef zeroext 1, i16 noundef zeroext 1, i16 noundef zeroext 1) #21, !dbg !13416
  tail call void @pmu_auxadc_delay(i32 noundef 1) #20, !dbg !13417
  %37 = tail call zeroext i16 @aux_get_adc_result(i32 noundef 530) #20, !dbg !13418
  call void @llvm.dbg.value(metadata i16 %37, metadata !13368, metadata !DIExpression()), !dbg !13375
  br label %49, !dbg !13419

38:                                               ; preds = %6
  %39 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 595, i16 noundef zeroext 1, i16 noundef zeroext 2, i16 noundef zeroext 1) #21, !dbg !13420
  tail call void @pmu_auxadc_delay(i32 noundef 1) #20, !dbg !13421
  %40 = tail call zeroext i16 @aux_get_adc_result(i32 noundef 532) #20, !dbg !13422
  call void @llvm.dbg.value(metadata i16 %40, metadata !13368, metadata !DIExpression()), !dbg !13375
  br label %49, !dbg !13423

41:                                               ; preds = %6
  %42 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 595, i16 noundef zeroext 1, i16 noundef zeroext 3, i16 noundef zeroext 1) #21, !dbg !13424
  tail call void @pmu_auxadc_delay(i32 noundef 1) #20, !dbg !13425
  %43 = tail call zeroext i16 @aux_get_adc_result(i32 noundef 534) #20, !dbg !13426
  call void @llvm.dbg.value(metadata i16 %43, metadata !13368, metadata !DIExpression()), !dbg !13375
  br label %49, !dbg !13427

44:                                               ; preds = %6
  %45 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 595, i16 noundef zeroext 1, i16 noundef zeroext 4, i16 noundef zeroext 1) #21, !dbg !13428
  tail call void @pmu_auxadc_delay(i32 noundef 1) #20, !dbg !13429
  %46 = tail call zeroext i16 @aux_get_adc_result(i32 noundef 536) #20, !dbg !13430
  call void @llvm.dbg.value(metadata i16 %46, metadata !13368, metadata !DIExpression()), !dbg !13375
  br label %49, !dbg !13431

47:                                               ; preds = %6
  %48 = tail call zeroext i16 @aux_get_adc_result(i32 noundef 552) #20, !dbg !13432
  call void @llvm.dbg.value(metadata i16 %48, metadata !13368, metadata !DIExpression()), !dbg !13375
  br label %49, !dbg !13433

49:                                               ; preds = %6, %47, %44, %41, %38, %35, %32, %29, %26, %23, %20, %17, %14, %11, %8
  %50 = phi i16 [ undef, %6 ], [ %48, %47 ], [ %46, %44 ], [ %43, %41 ], [ %40, %38 ], [ %37, %35 ], [ %34, %32 ], [ %31, %29 ], [ %28, %26 ], [ %25, %23 ], [ %22, %20 ], [ %19, %17 ], [ %16, %14 ], [ %13, %11 ], [ %10, %8 ]
  call void @llvm.dbg.value(metadata i16 %50, metadata !13368, metadata !DIExpression()), !dbg !13375
  switch i32 %0, label %80 [
    i32 0, label %51
    i32 1, label %51
    i32 7, label %68
    i32 3, label %72
    i32 13, label %76
  ], !dbg !13434

51:                                               ; preds = %49, %49
  %52 = tail call i32 @pmu_get_auxadc_temperature() #20, !dbg !13435
  call void @llvm.dbg.value(metadata i32 %52, metadata !13369, metadata !DIExpression()), !dbg !13375
  %53 = tail call zeroext i8 @pmu_get_thermal_status(i8 noundef zeroext 0, i8 noundef zeroext 0) #20, !dbg !13436
  %54 = icmp eq i8 %53, 0, !dbg !13437
  br i1 %54, label %55, label %59, !dbg !13438

55:                                               ; preds = %51
  %56 = zext i16 %50 to i32, !dbg !13439
  %57 = mul nuw nsw i32 %56, 5400, !dbg !13441
  %58 = lshr i32 %57, 15, !dbg !13442
  call void @llvm.dbg.value(metadata i32 %58, metadata !13368, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13375
  br label %84, !dbg !13443

59:                                               ; preds = %51
  %60 = uitofp i16 %50 to float, !dbg !13444
  %61 = fmul float %60, 1.800000e+03, !dbg !13445
  %62 = fmul float %61, 3.000000e+00, !dbg !13446
  %63 = fmul float %62, 0x3F00000000000000, !dbg !13447
  call void @llvm.dbg.value(metadata float %63, metadata !13370, metadata !DIExpression()), !dbg !13448
  %64 = sitofp i32 %52 to float, !dbg !13449
  %65 = tail call float @llvm.fmuladd.f32(float %64, float 0x3FD7D4E900000000, float -6.000000e+00), !dbg !13450
  call void @llvm.dbg.value(metadata float %65, metadata !13374, metadata !DIExpression()), !dbg !13448
  %66 = fadd float %63, %65, !dbg !13451
  %67 = fptoui float %66 to i32, !dbg !13452
  call void @llvm.dbg.value(metadata i32 %67, metadata !13368, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13375
  br label %84

68:                                               ; preds = %49
  %69 = zext i16 %50 to i32, !dbg !13453
  %70 = mul nuw nsw i32 %69, 1800, !dbg !13454
  %71 = lshr i32 %70, 15, !dbg !13455
  call void @llvm.dbg.value(metadata i32 %71, metadata !13368, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13375
  br label %84, !dbg !13456

72:                                               ; preds = %49
  %73 = zext i16 %50 to i32, !dbg !13457
  %74 = mul nuw nsw i32 %73, 3600, !dbg !13458
  %75 = lshr i32 %74, 12, !dbg !13459
  call void @llvm.dbg.value(metadata i32 %75, metadata !13368, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13375
  br label %84, !dbg !13460

76:                                               ; preds = %49
  %77 = zext i16 %50 to i32, !dbg !13461
  %78 = mul nuw nsw i32 %77, 5400, !dbg !13462
  %79 = lshr i32 %78, 15, !dbg !13463
  call void @llvm.dbg.value(metadata i32 %79, metadata !13368, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13375
  br label %84, !dbg !13464

80:                                               ; preds = %49
  %81 = zext i16 %50 to i32, !dbg !13465
  %82 = mul nuw nsw i32 %81, 1800, !dbg !13466
  %83 = lshr i32 %82, 12, !dbg !13467
  call void @llvm.dbg.value(metadata i32 %83, metadata !13368, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13375
  br label %84, !dbg !13468

84:                                               ; preds = %55, %59, %80, %76, %72, %68
  %85 = phi i32 [ %83, %80 ], [ %79, %76 ], [ %75, %72 ], [ %71, %68 ], [ %58, %55 ], [ %67, %59 ]
  %86 = and i32 %85, 65535, !dbg !13469
  call void @llvm.dbg.value(metadata i32 %85, metadata !13368, metadata !DIExpression()), !dbg !13375
  br label %87, !dbg !13470

87:                                               ; preds = %3, %84
  %88 = phi i32 [ %86, %84 ], [ -1, %3 ], !dbg !13375
  ret i32 %88, !dbg !13471
}

; Function Attrs: noinline nounwind optsize
define dso_local void @pmu_auxadc_delay(i32 noundef %0) local_unnamed_addr #0 !dbg !13472 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13476, metadata !DIExpression()), !dbg !13477
  %2 = tail call i32 @hal_gpt_delay_ms(i32 noundef %0) #21, !dbg !13478
  ret void, !dbg !13479
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i16 @aux_get_adc_result(i32 noundef %0) local_unnamed_addr #0 !dbg !13480 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13484, metadata !DIExpression()), !dbg !13488
  call void @llvm.dbg.value(metadata i16 0, metadata !13485, metadata !DIExpression()), !dbg !13488
  %2 = trunc i32 %0 to i16
  %3 = add i16 %2, 1
  br label %4, !dbg !13489

4:                                                ; preds = %17, %1
  %5 = phi i16 [ 0, %1 ], [ %18, %17 ], !dbg !13488
  call void @llvm.dbg.value(metadata i16 %5, metadata !13485, metadata !DIExpression()), !dbg !13488
  %6 = tail call zeroext i8 @pmu_get_register_value(i16 noundef zeroext %3, i16 noundef zeroext 255, i16 noundef zeroext 0) #21, !dbg !13490
  %7 = zext i8 %6 to i32, !dbg !13492
  call void @llvm.dbg.value(metadata i32 %7, metadata !13486, metadata !DIExpression()), !dbg !13488
  %8 = and i32 %7, 128, !dbg !13494
  %9 = icmp eq i32 %8, 0, !dbg !13495
  br i1 %9, label %17, label %10, !dbg !13496

10:                                               ; preds = %4
  %11 = tail call zeroext i8 @pmu_get_register_value(i16 noundef zeroext %2, i16 noundef zeroext 255, i16 noundef zeroext 0) #21, !dbg !13497
  call void @llvm.dbg.value(metadata i8 %11, metadata !13487, metadata !DIExpression()), !dbg !13488
  %12 = shl nuw nsw i32 %7, 8, !dbg !13499
  %13 = and i32 %12, 32512, !dbg !13500
  %14 = zext i8 %11 to i32, !dbg !13501
  %15 = or i32 %13, %14, !dbg !13502
  %16 = trunc i32 %15 to i16, !dbg !13503
  call void @llvm.dbg.value(metadata i16 %16, metadata !13486, metadata !DIExpression()), !dbg !13488
  br label %20, !dbg !13504

17:                                               ; preds = %4
  tail call void @pmu_auxadc_delay(i32 noundef 1) #20, !dbg !13505
  %18 = add nuw nsw i16 %5, 1, !dbg !13506
  call void @llvm.dbg.value(metadata i16 %18, metadata !13485, metadata !DIExpression()), !dbg !13488
  %19 = icmp ult i16 %5, 16, !dbg !13507
  br i1 %19, label %4, label %20, !dbg !13508, !llvm.loop !13509

20:                                               ; preds = %17, %10
  %21 = phi i16 [ %16, %10 ], [ 0, %17 ], !dbg !13488
  ret i16 %21, !dbg !13511
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pmu_auxadc_get_isense() local_unnamed_addr #0 !dbg !2479 {
  %1 = load i1, i1* @pmu_auxadc_get_isense.init, align 1, !dbg !13512
  br i1 %1, label %25, label %2, !dbg !13513

2:                                                ; preds = %0
  store i1 true, i1* @pmu_auxadc_get_isense.init, align 1, !dbg !13514
  %3 = tail call zeroext i8 @pmu_get_register_value(i16 noundef zeroext 672, i16 noundef zeroext 255, i16 noundef zeroext 0) #21, !dbg !13515
  call void @llvm.dbg.value(metadata i8 %3, metadata !2545, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13516
  %4 = tail call zeroext i8 @pmu_get_register_value(i16 noundef zeroext 673, i16 noundef zeroext 15, i16 noundef zeroext 0) #21, !dbg !13517
  %5 = zext i8 %4 to i16
  call void @llvm.dbg.value(metadata i8 %4, metadata !2544, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13516
  %6 = shl nuw i16 %5, 8, !dbg !13518
  %7 = zext i8 %3 to i16
  %8 = or i16 %6, %7, !dbg !13519
  call void @llvm.dbg.value(metadata !DIArgList(i16 %6, i16 %7), metadata !2541, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !13516
  %9 = and i16 %5, 8, !dbg !13520
  %10 = icmp eq i16 %9, 0, !dbg !13520
  %11 = or i16 %8, -4096
  %12 = select i1 %10, i16 %8, i16 %11, !dbg !13522
  call void @llvm.dbg.value(metadata i16 %12, metadata !2541, metadata !DIExpression()), !dbg !13516
  %13 = sext i16 %12 to i32, !dbg !13523
  store i32 %13, i32* @pmu_auxadc_get_isense.trim_gain_ch7, align 4, !dbg !13524
  %14 = tail call zeroext i8 @pmu_get_register_value(i16 noundef zeroext 674, i16 noundef zeroext 255, i16 noundef zeroext 0) #21, !dbg !13525
  call void @llvm.dbg.value(metadata i8 %14, metadata !2545, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13516
  %15 = tail call zeroext i8 @pmu_get_register_value(i16 noundef zeroext 675, i16 noundef zeroext 7, i16 noundef zeroext 0) #21, !dbg !13526
  %16 = zext i8 %15 to i16
  call void @llvm.dbg.value(metadata i8 %15, metadata !2544, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13516
  %17 = shl nuw i16 %16, 8, !dbg !13527
  %18 = zext i8 %14 to i16
  %19 = or i16 %17, %18, !dbg !13528
  call void @llvm.dbg.value(metadata !DIArgList(i16 %17, i16 %18), metadata !2541, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !13516
  %20 = and i16 %16, 4, !dbg !13529
  %21 = icmp eq i16 %20, 0, !dbg !13529
  %22 = or i16 %19, -2048, !dbg !13531
  %23 = select i1 %21, i16 %19, i16 %22, !dbg !13531
  call void @llvm.dbg.value(metadata i16 %23, metadata !2541, metadata !DIExpression()), !dbg !13516
  %24 = sext i16 %23 to i32, !dbg !13532
  store i32 %24, i32* @pmu_auxadc_get_isense.trim_offset_ch7, align 4, !dbg !13533
  br label %25, !dbg !13534

25:                                               ; preds = %2, %0
  %26 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 594, i16 noundef zeroext 1, i16 noundef zeroext 1, i16 noundef zeroext 1) #21, !dbg !13535
  tail call void @pmu_auxadc_delay(i32 noundef 1) #20, !dbg !13536
  %27 = tail call zeroext i16 @aux_get_adc_result(i32 noundef 514) #20, !dbg !13537
  call void @llvm.dbg.value(metadata i16 %27, metadata !2538, metadata !DIExpression(DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13538
  %28 = tail call zeroext i8 @pmu_get_register_value(i16 noundef zeroext 575, i16 noundef zeroext 255, i16 noundef zeroext 0) #21, !dbg !13539
  call void @llvm.dbg.value(metadata i8 %28, metadata !2539, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13538
  %29 = tail call zeroext i8 @pmu_get_register_value(i16 noundef zeroext 574, i16 noundef zeroext 255, i16 noundef zeroext 0) #21, !dbg !13540
  call void @llvm.dbg.value(metadata i8 %29, metadata !2540, metadata !DIExpression()), !dbg !13538
  %30 = zext i8 %28 to i16, !dbg !13541
  %31 = shl nuw i16 %30, 8, !dbg !13542
  %32 = and i16 %31, 32512, !dbg !13543
  %33 = zext i8 %29 to i16, !dbg !13544
  %34 = or i16 %32, %33, !dbg !13545
  call void @llvm.dbg.value(metadata i16 %34, metadata !2539, metadata !DIExpression()), !dbg !13538
  %35 = uitofp i16 %34 to float, !dbg !13546
  %36 = load i32, i32* @pmu_auxadc_get_isense.trim_gain_ch7, align 4, !dbg !13547
  %37 = sitofp i32 %36 to float, !dbg !13548
  %38 = fmul float %37, 0x3F00000000000000, !dbg !13549
  %39 = fadd float %38, 1.000000e+00, !dbg !13550
  %40 = fmul float %39, %35, !dbg !13551
  %41 = fptosi float %40 to i32, !dbg !13552
  call void @llvm.dbg.value(metadata i32 %41, metadata !2538, metadata !DIExpression()), !dbg !13538
  %42 = load i32, i32* @pmu_auxadc_get_isense.trim_offset_ch7, align 4, !dbg !13553
  %43 = add nsw i32 %42, %41, !dbg !13554
  call void @llvm.dbg.value(metadata i32 %43, metadata !2538, metadata !DIExpression()), !dbg !13538
  ret i32 %43, !dbg !13555
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pmu_get_auxadc_temperature() local_unnamed_addr #0 !dbg !2512 {
  %1 = alloca [4 x i8], align 1
  %2 = load i1, i1* @pmu_get_auxadc_temperature.init, align 1, !dbg !13556
  br i1 %2, label %37, label %3, !dbg !13557

3:                                                ; preds = %0
  store i1 true, i1* @pmu_get_auxadc_temperature.init, align 1, !dbg !13558
  %4 = getelementptr inbounds [4 x i8], [4 x i8]* %1, i32 0, i32 0, !dbg !13559
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #22, !dbg !13559
  call void @llvm.dbg.declare(metadata [4 x i8]* %1, metadata !2518, metadata !DIExpression()), !dbg !13560
  %5 = getelementptr inbounds [4 x i8], [4 x i8]* %1, i32 0, i32 1, !dbg !13561
  call void @pmu_get_efuse(i8 noundef zeroext 94, i8* noundef nonnull %4, i8* noundef nonnull %5) #20, !dbg !13562
  %6 = getelementptr inbounds [4 x i8], [4 x i8]* %1, i32 0, i32 2, !dbg !13563
  %7 = getelementptr inbounds [4 x i8], [4 x i8]* %1, i32 0, i32 3, !dbg !13564
  call void @pmu_get_efuse(i8 noundef zeroext 96, i8* noundef nonnull %6, i8* noundef nonnull %7) #20, !dbg !13565
  %8 = load i8, i8* %4, align 1, !dbg !13566
  %9 = tail call zeroext i8 @pmu_get_thermal_status(i8 noundef zeroext 1, i8 noundef zeroext %8) #20, !dbg !13567
  %10 = lshr i8 %8, 1, !dbg !13568
  %11 = and i8 %10, 63, !dbg !13569
  call void @llvm.dbg.value(metadata i8 %11, metadata !2522, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13570
  %12 = uitofp i8 %11 to float, !dbg !13571
  %13 = add nsw i8 %11, -61, !dbg !13572
  %14 = icmp ult i8 %13, -23, !dbg !13572
  %15 = fmul float %12, 5.000000e-01, !dbg !13574
  %16 = select i1 %14, float 2.650000e+01, float %15, !dbg !13574
  store float %16, float* @pmu_get_auxadc_temperature.DEGC_CALI, align 4, !dbg !13574
  %17 = load i8, i8* %6, align 1, !dbg !13575
  %18 = zext i8 %17 to i32, !dbg !13575
  %19 = shl nuw nsw i32 %18, 8, !dbg !13576
  %20 = and i32 %19, 7936, !dbg !13577
  %21 = load i8, i8* %5, align 1, !dbg !13578
  %22 = zext i8 %21 to i32, !dbg !13578
  %23 = or i32 %20, %22, !dbg !13579
  store i32 %23, i32* @pmu_get_auxadc_temperature.O_VTS, align 4, !dbg !13580
  %24 = load i8, i8* %7, align 1, !dbg !13581
  %25 = lshr i8 %24, 1, !dbg !13582
  %26 = and i8 %25, 63, !dbg !13583
  call void @llvm.dbg.value(metadata i8 %26, metadata !2522, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13570
  %27 = uitofp i8 %26 to float, !dbg !13584
  %28 = and i8 %24, 1, !dbg !13585
  %29 = icmp eq i8 %28, 0, !dbg !13587
  %30 = fneg float %27
  %31 = select i1 %29, float %27, float %30, !dbg !13588
  %32 = icmp sgt i8 %24, -1, !dbg !13589
  %33 = fdiv float %31, 1.000000e+05, !dbg !13591
  %34 = fadd float %33, 0x3F5F794200000000, !dbg !13592
  %35 = select i1 %32, float 0x3F5F794200000000, float %34, !dbg !13592
  %36 = fneg float %35, !dbg !13593
  store float %36, float* @pmu_get_auxadc_temperature.O_SLOPE, align 4, !dbg !13594
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #22, !dbg !13595
  br label %37, !dbg !13596

37:                                               ; preds = %3, %0
  %38 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 594, i16 noundef zeroext 1, i16 noundef zeroext 4, i16 noundef zeroext 1) #21, !dbg !13597
  tail call void @pmu_auxadc_delay(i32 noundef 1) #20, !dbg !13598
  %39 = tail call zeroext i16 @aux_get_adc_result(i32 noundef 520) #20, !dbg !13599
  %40 = zext i16 %39 to i32, !dbg !13600
  call void @llvm.dbg.value(metadata i32 %40, metadata !2517, metadata !DIExpression()), !dbg !13601
  %41 = load i32, i32* @pmu_get_auxadc_temperature.O_VTS, align 4, !dbg !13602
  %42 = sub nsw i32 %40, %41, !dbg !13603
  %43 = sitofp i32 %42 to float, !dbg !13604
  call void @llvm.dbg.value(metadata float %43, metadata !2516, metadata !DIExpression()), !dbg !13601
  %44 = fmul float %43, 0x3F30000000000000, !dbg !13605
  %45 = fmul float %44, 0x3FFCCCCCC0000000, !dbg !13606
  call void @llvm.dbg.value(metadata float %45, metadata !2516, metadata !DIExpression()), !dbg !13601
  %46 = load float, float* @pmu_get_auxadc_temperature.DEGC_CALI, align 4, !dbg !13607
  %47 = load float, float* @pmu_get_auxadc_temperature.O_SLOPE, align 4, !dbg !13608
  %48 = fdiv float %45, %47, !dbg !13609
  %49 = fadd float %46, %48, !dbg !13610
  %50 = fptosi float %49 to i32, !dbg !13611
  call void @llvm.dbg.value(metadata i32 %50, metadata !2517, metadata !DIExpression()), !dbg !13601
  ret i32 %50, !dbg !13612
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local zeroext i8 @pmu_get_thermal_status(i8 noundef zeroext %0, i8 noundef zeroext %1) local_unnamed_addr #5 !dbg !2531 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !2535, metadata !DIExpression()), !dbg !13613
  call void @llvm.dbg.value(metadata i8 %1, metadata !2536, metadata !DIExpression()), !dbg !13613
  %3 = icmp eq i8 %0, 0, !dbg !13614
  br i1 %3, label %4, label %6, !dbg !13616

4:                                                ; preds = %2
  %5 = load i1, i1* @pmu_get_thermal_status.ADC_CALI_EN, align 1, !dbg !13617
  br label %11, !dbg !13616

6:                                                ; preds = %2
  %7 = and i8 %1, 126, !dbg !13618
  %8 = icmp eq i8 %7, 0, !dbg !13621
  br i1 %8, label %10, label %9, !dbg !13622

9:                                                ; preds = %6
  store i1 true, i1* @pmu_get_thermal_status.ADC_CALI_EN, align 1, !dbg !13623
  br label %11, !dbg !13625

10:                                               ; preds = %6
  store i1 false, i1* @pmu_get_thermal_status.ADC_CALI_EN, align 1, !dbg !13626
  br label %11

11:                                               ; preds = %4, %9, %10
  %12 = phi i1 [ %5, %4 ], [ true, %9 ], [ false, %10 ], !dbg !13617
  %13 = zext i1 %12 to i8, !dbg !13617
  ret i8 %13, !dbg !13628
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare float @llvm.fmuladd.f32(float, float, float) #1

; Function Attrs: noinline nounwind optsize
define dso_local void @pmu_get_efuse(i8 noundef zeroext %0, i8* nocapture noundef writeonly %1, i8* nocapture noundef writeonly %2) local_unnamed_addr #0 !dbg !13629 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !13633, metadata !DIExpression()), !dbg !13636
  call void @llvm.dbg.value(metadata i8* %1, metadata !13634, metadata !DIExpression()), !dbg !13636
  call void @llvm.dbg.value(metadata i8* %2, metadata !13635, metadata !DIExpression()), !dbg !13636
  %4 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 20, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 3) #21, !dbg !13637
  %5 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 201, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 1) #21, !dbg !13638
  %6 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 204, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 1) #21, !dbg !13639
  %7 = zext i8 %0 to i16, !dbg !13640
  %8 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 191, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext %7) #21, !dbg !13641
  tail call void @pmu_auxadc_delay(i32 noundef 1) #20, !dbg !13642
  %9 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 201, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 0) #21, !dbg !13643
  tail call void @pmu_auxadc_delay(i32 noundef 1) #20, !dbg !13644
  %10 = tail call zeroext i8 @pmu_get_register_value(i16 noundef zeroext 205, i16 noundef zeroext 255, i16 noundef zeroext 0) #21, !dbg !13645
  store i8 %10, i8* %1, align 1, !dbg !13646
  %11 = tail call zeroext i8 @pmu_get_register_value(i16 noundef zeroext 206, i16 noundef zeroext 255, i16 noundef zeroext 0) #21, !dbg !13647
  store i8 %11, i8* %2, align 1, !dbg !13648
  ret void, !dbg !13649
}

; Function Attrs: noinline nounwind optsize
define dso_local void @pmu_init() local_unnamed_addr #0 !dbg !13650 {
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.pmu_init, i32 0, i32 0), i32 noundef 98, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.190, i32 0, i32 0)) #21, !dbg !13651
  tail call void @pmu_init_mt6385() #21, !dbg !13652
  ret void, !dbg !13653
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @pmu_set_register_value(i16 noundef zeroext %0, i16 noundef zeroext %1, i16 noundef zeroext %2, i16 noundef zeroext %3) local_unnamed_addr #0 !dbg !13654 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !13656, metadata !DIExpression()), !dbg !13660
  call void @llvm.dbg.value(metadata i16 %1, metadata !13657, metadata !DIExpression()), !dbg !13660
  call void @llvm.dbg.value(metadata i16 %2, metadata !13658, metadata !DIExpression()), !dbg !13660
  call void @llvm.dbg.value(metadata i16 %3, metadata !13659, metadata !DIExpression()), !dbg !13660
  %5 = tail call zeroext i1 @pmu_set_register_value_mt6385(i16 noundef zeroext %0, i16 noundef zeroext %1, i16 noundef zeroext %2, i16 noundef zeroext %3) #21, !dbg !13661
  ret i1 %5, !dbg !13662
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i8 @pmu_get_register_value(i16 noundef zeroext %0, i16 noundef zeroext %1, i16 noundef zeroext %2) local_unnamed_addr #0 !dbg !13663 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !13665, metadata !DIExpression()), !dbg !13668
  call void @llvm.dbg.value(metadata i16 %1, metadata !13666, metadata !DIExpression()), !dbg !13668
  call void @llvm.dbg.value(metadata i16 %2, metadata !13667, metadata !DIExpression()), !dbg !13668
  %4 = tail call zeroext i8 @pmu_get_register_value_mt6385(i16 noundef zeroext %0, i16 noundef zeroext %1, i16 noundef zeroext %2) #21, !dbg !13669
  ret i8 %4, !dbg !13670
}

; Function Attrs: noinline nounwind optsize
define dso_local void @pmu_control_mtcmos() local_unnamed_addr #0 !dbg !13671 {
  tail call void @pmu_control_mtcmos_mt6385() #21, !dbg !13672
  ret void, !dbg !13673
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i8 @pmu_get_vcore_voltage() local_unnamed_addr #0 !dbg !13674 {
  %1 = tail call zeroext i8 @pmu_get_vcore_voltage_mt6385() #21, !dbg !13675
  ret i8 %1, !dbg !13676
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i8 @pmu_set_vcore_voltage(i8 noundef zeroext %0, i8 noundef zeroext %1) local_unnamed_addr #0 !dbg !13677 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !13679, metadata !DIExpression()), !dbg !13681
  call void @llvm.dbg.value(metadata i8 %1, metadata !13680, metadata !DIExpression()), !dbg !13681
  %3 = tail call zeroext i8 @pmu_set_vcore_voltage_mt6385(i8 noundef zeroext %0, i8 noundef zeroext %1) #21, !dbg !13682
  ret i8 %3, !dbg !13683
}

; Function Attrs: noinline nounwind optsize
define dso_local void @pmu_set_vcore_s1_buck() local_unnamed_addr #0 !dbg !13684 {
  tail call void @pmu_set_vcore_s1_buck_mt6385() #21, !dbg !13685
  ret void, !dbg !13686
}

; Function Attrs: noinline nounwind optsize
define dso_local void @pmu_ctrl_driver_power(i8 noundef zeroext %0, i8 noundef zeroext %1) local_unnamed_addr #0 !dbg !13687 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !13689, metadata !DIExpression()), !dbg !13691
  call void @llvm.dbg.value(metadata i8 %1, metadata !13690, metadata !DIExpression()), !dbg !13691
  tail call fastcc void @internal_pmu_ctrl_power(i8 noundef zeroext %0, i8 noundef zeroext %1) #20, !dbg !13692
  ret void, !dbg !13693
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @internal_pmu_ctrl_power(i8 noundef zeroext %0, i8 noundef zeroext %1) unnamed_addr #0 !dbg !13694 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !13696, metadata !DIExpression()), !dbg !13698
  call void @llvm.dbg.value(metadata i8 %1, metadata !13697, metadata !DIExpression()), !dbg !13698
  switch i8 %0, label %14 [
    i8 1, label %3
    i8 2, label %4
    i8 3, label %5
    i8 4, label %7
    i8 5, label %9
    i8 7, label %11
    i8 8, label %12
    i8 9, label %13
  ], !dbg !13699

3:                                                ; preds = %2
  tail call void @pmu_ctrl_vbt_ldo_mt6385(i8 noundef zeroext %1) #21, !dbg !13700
  br label %15, !dbg !13702

4:                                                ; preds = %2
  tail call void @pmu_ctrl_va28_ldo_mt6385(i8 noundef zeroext %1) #21, !dbg !13703
  br label %15, !dbg !13704

5:                                                ; preds = %2
  %6 = zext i8 %1 to i32, !dbg !13705
  tail call void @PMIC_VR_CONTROL(i32 noundef 6, i32 noundef %6) #21, !dbg !13706
  br label %15, !dbg !13707

7:                                                ; preds = %2
  %8 = zext i8 %1 to i32, !dbg !13708
  tail call void @PMIC_VR_CONTROL(i32 noundef 10, i32 noundef %8) #21, !dbg !13709
  br label %15, !dbg !13710

9:                                                ; preds = %2
  %10 = zext i8 %1 to i32, !dbg !13711
  tail call void @PMIC_VR_CONTROL(i32 noundef 9, i32 noundef %10) #21, !dbg !13712
  br label %15, !dbg !13713

11:                                               ; preds = %2
  tail call void @pmu_ctrl_va28_ldo_mt6385(i8 noundef zeroext %1) #21, !dbg !13714
  br label %15, !dbg !13715

12:                                               ; preds = %2
  tail call void @pmu_ctrl_va28_ldo_mt6385(i8 noundef zeroext %1) #21, !dbg !13716
  br label %15, !dbg !13717

13:                                               ; preds = %2
  tail call void @pmu_ctrl_va28_ldo_mt6385(i8 noundef zeroext %1) #21, !dbg !13718
  br label %15, !dbg !13719

14:                                               ; preds = %2
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__FUNCTION__.internal_pmu_ctrl_power, i32 0, i32 0), i32 noundef 225, i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.1.195, i32 0, i32 0)) #21, !dbg !13720
  br label %15, !dbg !13721

15:                                               ; preds = %14, %13, %12, %11, %9, %7, %5, %4, %3
  ret void, !dbg !13722
}

; Function Attrs: noinline nounwind optsize
define dso_local void @pmu_audio_lock_voltage() local_unnamed_addr #0 !dbg !13723 {
  tail call fastcc void @internal_pmu_audio_lock_voltage() #20, !dbg !13724
  ret void, !dbg !13725
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @internal_pmu_audio_lock_voltage() unnamed_addr #0 !dbg !13726 {
  tail call void @PMIC_VCORE_VOSEL_CONFIG(i32 noundef 2, i32 noundef 4) #21, !dbg !13727
  tail call void @PMIC_VCORE_VOSEL_CONFIG(i32 noundef 4, i32 noundef 2) #21, !dbg !13728
  ret void, !dbg !13729
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @pmu_audio_unlock_voltage() local_unnamed_addr #8 !dbg !13730 {
  ret void, !dbg !13731
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i8 @pmu_get_usb_input_status() local_unnamed_addr #0 !dbg !13732 {
  %1 = tail call zeroext i8 @pmu_get_usb_input_status_mt6385() #21, !dbg !13733
  ret i8 %1, !dbg !13734
}

; Function Attrs: noinline nounwind optsize
define dso_local void @pmu_enter_power_off() local_unnamed_addr #0 !dbg !13735 {
  tail call void @pmu_enter_power_off_mt6385() #21, !dbg !13736
  ret void, !dbg !13737
}

; Function Attrs: noinline nounwind optsize
define dso_local void @pmu_reset() local_unnamed_addr #0 !dbg !13738 {
  tail call void @pmu_reset_mt6385() #21, !dbg !13739
  ret void, !dbg !13740
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @pmu_get_type() local_unnamed_addr #8 !dbg !13741 {
  ret i32 1, !dbg !13742
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i1 @null_pmu_set_register_value(i16 noundef zeroext %0, i16 noundef zeroext %1, i16 noundef zeroext %2, i16 noundef zeroext %3) local_unnamed_addr #8 !dbg !13743 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !13745, metadata !DIExpression()), !dbg !13749
  call void @llvm.dbg.value(metadata i16 %1, metadata !13746, metadata !DIExpression()), !dbg !13749
  call void @llvm.dbg.value(metadata i16 %2, metadata !13747, metadata !DIExpression()), !dbg !13749
  call void @llvm.dbg.value(metadata i16 %3, metadata !13748, metadata !DIExpression()), !dbg !13749
  ret i1 true, !dbg !13750
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i8 @null_pmu_get_register_value(i16 noundef zeroext %0, i16 noundef zeroext %1, i16 noundef zeroext %2) local_unnamed_addr #8 !dbg !13751 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !13753, metadata !DIExpression()), !dbg !13756
  call void @llvm.dbg.value(metadata i16 %1, metadata !13754, metadata !DIExpression()), !dbg !13756
  call void @llvm.dbg.value(metadata i16 %2, metadata !13755, metadata !DIExpression()), !dbg !13756
  ret i8 0, !dbg !13757
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @null_function() local_unnamed_addr #8 !dbg !13758 {
  ret void, !dbg !13759
}

; Function Attrs: noinline nounwind optsize
define dso_local void @log_hal_error_internal(i8* nocapture noundef readnone %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #0 !dbg !13760 {
  %4 = alloca %struct.__va_list, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !13764, metadata !DIExpression()), !dbg !13777
  call void @llvm.dbg.value(metadata i32 %1, metadata !13765, metadata !DIExpression()), !dbg !13777
  call void @llvm.dbg.value(metadata i8* %2, metadata !13766, metadata !DIExpression()), !dbg !13777
  %6 = bitcast %struct.__va_list* %4 to i8*, !dbg !13778
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #22, !dbg !13778
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !13767, metadata !DIExpression()), !dbg !13779
  %7 = bitcast i32* %5 to i8*, !dbg !13780
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #22, !dbg !13780
  call void @llvm.dbg.value(metadata i32* %5, metadata !13776, metadata !DIExpression(DW_OP_deref)), !dbg !13777
  %8 = call i32 @hal_nvic_save_and_set_interrupt_mask(i32* noundef nonnull %5) #21, !dbg !13781
  call void @llvm.va_start(i8* nonnull %6), !dbg !13782
  %9 = bitcast %struct.__va_list* %4 to i32*, !dbg !13783
  %10 = load i32, i32* %9, align 4, !dbg !13783
  %11 = insertvalue [1 x i32] poison, i32 %10, 0, !dbg !13783
  %12 = call i32 @vprintf(i8* noundef %2, [1 x i32] %11) #21, !dbg !13783
  call void @llvm.va_end(i8* nonnull %6), !dbg !13784
  %13 = load i32, i32* %5, align 4, !dbg !13785
  call void @llvm.dbg.value(metadata i32 %13, metadata !13776, metadata !DIExpression()), !dbg !13777
  %14 = call i32 @hal_nvic_restore_interrupt_mask(i32 noundef %13) #21, !dbg !13786
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #22, !dbg !13787
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #22, !dbg !13787
  ret void, !dbg !13787
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #18

; Function Attrs: optsize
declare dso_local i32 @vprintf(i8* noundef, [1 x i32]) local_unnamed_addr #3

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #18

; Function Attrs: noinline nounwind optsize
define dso_local void @log_hal_warning_internal(i8* nocapture noundef readnone %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #0 !dbg !13788 {
  %4 = alloca %struct.__va_list, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !13790, metadata !DIExpression()), !dbg !13795
  call void @llvm.dbg.value(metadata i32 %1, metadata !13791, metadata !DIExpression()), !dbg !13795
  call void @llvm.dbg.value(metadata i8* %2, metadata !13792, metadata !DIExpression()), !dbg !13795
  %6 = bitcast %struct.__va_list* %4 to i8*, !dbg !13796
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #22, !dbg !13796
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !13793, metadata !DIExpression()), !dbg !13797
  %7 = bitcast i32* %5 to i8*, !dbg !13798
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #22, !dbg !13798
  call void @llvm.dbg.value(metadata i32* %5, metadata !13794, metadata !DIExpression(DW_OP_deref)), !dbg !13795
  %8 = call i32 @hal_nvic_save_and_set_interrupt_mask(i32* noundef nonnull %5) #21, !dbg !13799
  call void @llvm.va_start(i8* nonnull %6), !dbg !13800
  %9 = bitcast %struct.__va_list* %4 to i32*, !dbg !13801
  %10 = load i32, i32* %9, align 4, !dbg !13801
  %11 = insertvalue [1 x i32] poison, i32 %10, 0, !dbg !13801
  %12 = call i32 @vprintf(i8* noundef %2, [1 x i32] %11) #21, !dbg !13801
  call void @llvm.va_end(i8* nonnull %6), !dbg !13802
  %13 = load i32, i32* %5, align 4, !dbg !13803
  call void @llvm.dbg.value(metadata i32 %13, metadata !13794, metadata !DIExpression()), !dbg !13795
  %14 = call i32 @hal_nvic_restore_interrupt_mask(i32 noundef %13) #21, !dbg !13804
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #22, !dbg !13805
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #22, !dbg !13805
  ret void, !dbg !13805
}

; Function Attrs: noinline nounwind optsize
define dso_local void @log_hal_info_internal(i8* nocapture noundef readnone %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #0 !dbg !13806 {
  %4 = alloca %struct.__va_list, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !13808, metadata !DIExpression()), !dbg !13813
  call void @llvm.dbg.value(metadata i32 %1, metadata !13809, metadata !DIExpression()), !dbg !13813
  call void @llvm.dbg.value(metadata i8* %2, metadata !13810, metadata !DIExpression()), !dbg !13813
  %6 = bitcast %struct.__va_list* %4 to i8*, !dbg !13814
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #22, !dbg !13814
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !13811, metadata !DIExpression()), !dbg !13815
  %7 = bitcast i32* %5 to i8*, !dbg !13816
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #22, !dbg !13816
  call void @llvm.dbg.value(metadata i32* %5, metadata !13812, metadata !DIExpression(DW_OP_deref)), !dbg !13813
  %8 = call i32 @hal_nvic_save_and_set_interrupt_mask(i32* noundef nonnull %5) #21, !dbg !13817
  call void @llvm.va_start(i8* nonnull %6), !dbg !13818
  %9 = bitcast %struct.__va_list* %4 to i32*, !dbg !13819
  %10 = load i32, i32* %9, align 4, !dbg !13819
  %11 = insertvalue [1 x i32] poison, i32 %10, 0, !dbg !13819
  %12 = call i32 @vprintf(i8* noundef %2, [1 x i32] %11) #21, !dbg !13819
  call void @llvm.va_end(i8* nonnull %6), !dbg !13820
  %13 = load i32, i32* %5, align 4, !dbg !13821
  call void @llvm.dbg.value(metadata i32 %13, metadata !13812, metadata !DIExpression()), !dbg !13813
  %14 = call i32 @hal_nvic_restore_interrupt_mask(i32 noundef %13) #21, !dbg !13822
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #22, !dbg !13823
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #22, !dbg !13823
  ret void, !dbg !13823
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @log_hal_dump_internal(i8* nocapture noundef %0, i32 noundef %1, i8* nocapture noundef %2, i8* nocapture noundef %3, i32 noundef %4, ...) local_unnamed_addr #8 !dbg !13824 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13830, metadata !DIExpression()), !dbg !13835
  call void @llvm.dbg.value(metadata i32 %1, metadata !13831, metadata !DIExpression()), !dbg !13835
  call void @llvm.dbg.value(metadata i8* %2, metadata !13832, metadata !DIExpression()), !dbg !13835
  call void @llvm.dbg.value(metadata i8* %3, metadata !13833, metadata !DIExpression()), !dbg !13835
  call void @llvm.dbg.value(metadata i32 %4, metadata !13834, metadata !DIExpression()), !dbg !13835
  ret void, !dbg !13836
}

; Function Attrs: noinline nounwind optsize
define dso_local void @PMIC_VR_PSI_PMOD_CONFIG(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !13837 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13842, metadata !DIExpression()), !dbg !13846
  call void @llvm.dbg.value(metadata i32 %1, metadata !13843, metadata !DIExpression()), !dbg !13846
  call void @llvm.dbg.value(metadata i32 %2, metadata !13844, metadata !DIExpression()), !dbg !13846
  tail call void @pmu_set_vrc_key_mt6385(i32 noundef 0) #20, !dbg !13847
  tail call void @pmu_set_ovr_mode_mt6385(i32 noundef 1) #20, !dbg !13848
  switch i32 %0, label %240 [
    i32 0, label %4
    i32 1, label %21
    i32 2, label %38
    i32 3, label %55
    i32 4, label %120
    i32 5, label %146
    i32 6, label %166
    i32 7, label %183
    i32 8, label %200
    i32 9, label %217
    i32 10, label %234
    i32 11, label %237
  ], !dbg !13849

4:                                                ; preds = %3
  switch i32 %1, label %20 [
    i32 0, label %5
    i32 1, label %8
    i32 2, label %11
    i32 3, label %14
    i32 4, label %17
  ], !dbg !13850

5:                                                ; preds = %4
  %6 = trunc i32 %2 to i16, !dbg !13852
  %7 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 230, i16 noundef zeroext 3, i16 noundef zeroext 2, i16 noundef zeroext %6) #21, !dbg !13854
  br label %241, !dbg !13855

8:                                                ; preds = %4
  %9 = trunc i32 %2 to i16, !dbg !13856
  %10 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 259, i16 noundef zeroext 3, i16 noundef zeroext 1, i16 noundef zeroext %9) #21, !dbg !13857
  br label %241, !dbg !13858

11:                                               ; preds = %4
  %12 = trunc i32 %2 to i16, !dbg !13859
  %13 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 261, i16 noundef zeroext 3, i16 noundef zeroext 1, i16 noundef zeroext %12) #21, !dbg !13860
  br label %241, !dbg !13861

14:                                               ; preds = %4
  %15 = trunc i32 %2 to i16, !dbg !13862
  %16 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 263, i16 noundef zeroext 3, i16 noundef zeroext 1, i16 noundef zeroext %15) #21, !dbg !13863
  br label %241, !dbg !13864

17:                                               ; preds = %4
  %18 = trunc i32 %2 to i16, !dbg !13865
  %19 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 264, i16 noundef zeroext 3, i16 noundef zeroext 1, i16 noundef zeroext %18) #21, !dbg !13866
  br label %241, !dbg !13867

20:                                               ; preds = %4
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__FUNCTION__.PMIC_VR_PSI_PMOD_CONFIG, i32 0, i32 0), i32 noundef 85, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.206, i32 0, i32 0)) #21, !dbg !13868
  br label %241, !dbg !13869

21:                                               ; preds = %3
  switch i32 %1, label %37 [
    i32 0, label %22
    i32 1, label %25
    i32 2, label %28
    i32 3, label %31
    i32 4, label %34
  ], !dbg !13870

22:                                               ; preds = %21
  %23 = trunc i32 %2 to i16, !dbg !13871
  %24 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 233, i16 noundef zeroext 3, i16 noundef zeroext 2, i16 noundef zeroext %23) #21, !dbg !13873
  br label %241, !dbg !13874

25:                                               ; preds = %21
  %26 = trunc i32 %2 to i16, !dbg !13875
  %27 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 272, i16 noundef zeroext 3, i16 noundef zeroext 1, i16 noundef zeroext %26) #21, !dbg !13876
  br label %241, !dbg !13877

28:                                               ; preds = %21
  %29 = trunc i32 %2 to i16, !dbg !13878
  %30 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 272, i16 noundef zeroext 3, i16 noundef zeroext 5, i16 noundef zeroext %29) #21, !dbg !13879
  br label %241, !dbg !13880

31:                                               ; preds = %21
  %32 = trunc i32 %2 to i16, !dbg !13881
  %33 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 273, i16 noundef zeroext 3, i16 noundef zeroext 1, i16 noundef zeroext %32) #21, !dbg !13882
  br label %241, !dbg !13883

34:                                               ; preds = %21
  %35 = trunc i32 %2 to i16, !dbg !13884
  %36 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 273, i16 noundef zeroext 3, i16 noundef zeroext 5, i16 noundef zeroext %35) #21, !dbg !13885
  br label %241, !dbg !13886

37:                                               ; preds = %21
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__FUNCTION__.PMIC_VR_PSI_PMOD_CONFIG, i32 0, i32 0), i32 noundef 108, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.206, i32 0, i32 0)) #21, !dbg !13887
  br label %241, !dbg !13888

38:                                               ; preds = %3
  switch i32 %1, label %54 [
    i32 0, label %39
    i32 1, label %42
    i32 2, label %45
    i32 3, label %48
    i32 4, label %51
  ], !dbg !13889

39:                                               ; preds = %38
  %40 = trunc i32 %2 to i16, !dbg !13890
  %41 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 234, i16 noundef zeroext 3, i16 noundef zeroext 2, i16 noundef zeroext %40) #21, !dbg !13892
  br label %241, !dbg !13893

42:                                               ; preds = %38
  %43 = trunc i32 %2 to i16, !dbg !13894
  %44 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 281, i16 noundef zeroext 3, i16 noundef zeroext 1, i16 noundef zeroext %43) #21, !dbg !13895
  br label %241, !dbg !13896

45:                                               ; preds = %38
  %46 = trunc i32 %2 to i16, !dbg !13897
  %47 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 281, i16 noundef zeroext 3, i16 noundef zeroext 5, i16 noundef zeroext %46) #21, !dbg !13898
  br label %241, !dbg !13899

48:                                               ; preds = %38
  %49 = trunc i32 %2 to i16, !dbg !13900
  %50 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 282, i16 noundef zeroext 3, i16 noundef zeroext 1, i16 noundef zeroext %49) #21, !dbg !13901
  br label %241, !dbg !13902

51:                                               ; preds = %38
  %52 = trunc i32 %2 to i16, !dbg !13903
  %53 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 282, i16 noundef zeroext 3, i16 noundef zeroext 5, i16 noundef zeroext %52) #21, !dbg !13904
  br label %241, !dbg !13905

54:                                               ; preds = %38
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__FUNCTION__.PMIC_VR_PSI_PMOD_CONFIG, i32 0, i32 0), i32 noundef 131, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.206, i32 0, i32 0)) #21, !dbg !13906
  br label %241, !dbg !13907

55:                                               ; preds = %3
  %56 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 88, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 41) #21, !dbg !13908
  %57 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 89, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 71) #21, !dbg !13909
  %58 = tail call zeroext i8 @pmu_get_register_value(i16 noundef zeroext 0, i16 noundef zeroext 255, i16 noundef zeroext 0) #21, !dbg !13910
  call void @llvm.dbg.value(metadata i8 %58, metadata !13845, metadata !DIExpression()), !dbg !13846
  switch i8 %58, label %117 [
    i8 16, label %59
    i8 17, label %88
  ], !dbg !13911

59:                                               ; preds = %55
  switch i32 %1, label %87 [
    i32 0, label %60
    i32 1, label %63
    i32 2, label %66
    i32 3, label %69
    i32 4, label %78
  ], !dbg !13912

60:                                               ; preds = %59
  %61 = trunc i32 %2 to i16, !dbg !13915
  %62 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 235, i16 noundef zeroext 3, i16 noundef zeroext 2, i16 noundef zeroext %61) #21, !dbg !13917
  br label %117, !dbg !13918

63:                                               ; preds = %59
  %64 = trunc i32 %2 to i16, !dbg !13919
  %65 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 793, i16 noundef zeroext 3, i16 noundef zeroext 1, i16 noundef zeroext %64) #21, !dbg !13920
  br label %117, !dbg !13921

66:                                               ; preds = %59
  %67 = trunc i32 %2 to i16, !dbg !13922
  %68 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 793, i16 noundef zeroext 3, i16 noundef zeroext 5, i16 noundef zeroext %67) #21, !dbg !13923
  br label %117, !dbg !13924

69:                                               ; preds = %59
  %70 = trunc i32 %2 to i16, !dbg !13925
  %71 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 794, i16 noundef zeroext 3, i16 noundef zeroext 1, i16 noundef zeroext %70) #21, !dbg !13926
  %72 = icmp ult i32 %2, 2, !dbg !13927
  %73 = load i16, i16* @pmu_mtcmos_vio28_pmod, align 2, !dbg !13929
  br i1 %72, label %74, label %76, !dbg !13927

74:                                               ; preds = %69
  %75 = or i16 %73, 1, !dbg !13930
  store i16 %75, i16* @pmu_mtcmos_vio28_pmod, align 2, !dbg !13930
  br label %117, !dbg !13932

76:                                               ; preds = %69
  %77 = and i16 %73, -2, !dbg !13933
  store i16 %77, i16* @pmu_mtcmos_vio28_pmod, align 2, !dbg !13933
  br label %117

78:                                               ; preds = %59
  %79 = trunc i32 %2 to i16, !dbg !13935
  %80 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 794, i16 noundef zeroext 3, i16 noundef zeroext 5, i16 noundef zeroext %79) #21, !dbg !13936
  %81 = icmp ult i32 %2, 2, !dbg !13937
  %82 = load i16, i16* @pmu_mtcmos_vio28_pmod, align 2, !dbg !13939
  br i1 %81, label %83, label %85, !dbg !13937

83:                                               ; preds = %78
  %84 = or i16 %82, 2, !dbg !13940
  store i16 %84, i16* @pmu_mtcmos_vio28_pmod, align 2, !dbg !13940
  br label %117, !dbg !13942

85:                                               ; preds = %78
  %86 = and i16 %82, 2, !dbg !13943
  store i16 %86, i16* @pmu_mtcmos_vio28_pmod, align 2, !dbg !13943
  br label %117

87:                                               ; preds = %59
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__FUNCTION__.PMIC_VR_PSI_PMOD_CONFIG, i32 0, i32 0), i32 noundef 170, i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.207, i32 0, i32 0)) #21, !dbg !13945
  br label %117, !dbg !13946

88:                                               ; preds = %55
  switch i32 %1, label %116 [
    i32 0, label %89
    i32 1, label %92
    i32 2, label %95
    i32 3, label %98
    i32 4, label %107
  ], !dbg !13947

89:                                               ; preds = %88
  %90 = trunc i32 %2 to i16, !dbg !13950
  %91 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 235, i16 noundef zeroext 3, i16 noundef zeroext 2, i16 noundef zeroext %90) #21, !dbg !13952
  br label %117, !dbg !13953

92:                                               ; preds = %88
  %93 = trunc i32 %2 to i16, !dbg !13954
  %94 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 99, i16 noundef zeroext 3, i16 noundef zeroext 0, i16 noundef zeroext %93) #21, !dbg !13955
  br label %117, !dbg !13956

95:                                               ; preds = %88
  %96 = trunc i32 %2 to i16, !dbg !13957
  %97 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 99, i16 noundef zeroext 3, i16 noundef zeroext 4, i16 noundef zeroext %96) #21, !dbg !13958
  br label %117, !dbg !13959

98:                                               ; preds = %88
  %99 = trunc i32 %2 to i16, !dbg !13960
  %100 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 101, i16 noundef zeroext 3, i16 noundef zeroext 4, i16 noundef zeroext %99) #21, !dbg !13961
  %101 = icmp ult i32 %2, 2, !dbg !13962
  %102 = load i16, i16* @pmu_mtcmos_vio28_pmod, align 2, !dbg !13964
  br i1 %101, label %103, label %105, !dbg !13962

103:                                              ; preds = %98
  %104 = or i16 %102, 1, !dbg !13965
  store i16 %104, i16* @pmu_mtcmos_vio28_pmod, align 2, !dbg !13965
  br label %117, !dbg !13967

105:                                              ; preds = %98
  %106 = and i16 %102, -2, !dbg !13968
  store i16 %106, i16* @pmu_mtcmos_vio28_pmod, align 2, !dbg !13968
  br label %117

107:                                              ; preds = %88
  %108 = trunc i32 %2 to i16, !dbg !13970
  %109 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 100, i16 noundef zeroext 3, i16 noundef zeroext 0, i16 noundef zeroext %108) #21, !dbg !13971
  %110 = icmp ult i32 %2, 2, !dbg !13972
  %111 = load i16, i16* @pmu_mtcmos_vio28_pmod, align 2, !dbg !13974
  br i1 %110, label %112, label %114, !dbg !13972

112:                                              ; preds = %107
  %113 = or i16 %111, 2, !dbg !13975
  store i16 %113, i16* @pmu_mtcmos_vio28_pmod, align 2, !dbg !13975
  br label %117, !dbg !13977

114:                                              ; preds = %107
  %115 = and i16 %111, 2, !dbg !13978
  store i16 %115, i16* @pmu_mtcmos_vio28_pmod, align 2, !dbg !13978
  br label %117

116:                                              ; preds = %88
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__FUNCTION__.PMIC_VR_PSI_PMOD_CONFIG, i32 0, i32 0), i32 noundef 203, i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.207, i32 0, i32 0)) #21, !dbg !13980
  br label %117, !dbg !13981

117:                                              ; preds = %83, %85, %74, %76, %87, %66, %63, %60, %55, %89, %92, %95, %116, %105, %103, %114, %112
  %118 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 88, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 0) #21, !dbg !13982
  %119 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 89, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 0) #21, !dbg !13983
  br label %241, !dbg !13984

120:                                              ; preds = %3
  switch i32 %1, label %145 [
    i32 0, label %121
    i32 1, label %124
    i32 2, label %127
    i32 3, label %130
    i32 4, label %133
    i32 5, label %136
    i32 6, label %139
    i32 7, label %142
  ], !dbg !13985

121:                                              ; preds = %120
  %122 = trunc i32 %2 to i16, !dbg !13986
  %123 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 67, i16 noundef zeroext 3, i16 noundef zeroext 2, i16 noundef zeroext %122) #21, !dbg !13988
  br label %241, !dbg !13989

124:                                              ; preds = %120
  %125 = trunc i32 %2 to i16, !dbg !13990
  %126 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 67, i16 noundef zeroext 3, i16 noundef zeroext 2, i16 noundef zeroext %125) #21, !dbg !13991
  br label %241, !dbg !13992

127:                                              ; preds = %120
  %128 = trunc i32 %2 to i16, !dbg !13993
  %129 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 67, i16 noundef zeroext 3, i16 noundef zeroext 2, i16 noundef zeroext %128) #21, !dbg !13994
  br label %241, !dbg !13995

130:                                              ; preds = %120
  %131 = trunc i32 %2 to i16, !dbg !13996
  %132 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 67, i16 noundef zeroext 3, i16 noundef zeroext 4, i16 noundef zeroext %131) #21, !dbg !13997
  br label %241, !dbg !13998

133:                                              ; preds = %120
  %134 = trunc i32 %2 to i16, !dbg !13999
  %135 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 67, i16 noundef zeroext 3, i16 noundef zeroext 4, i16 noundef zeroext %134) #21, !dbg !14000
  br label %241, !dbg !14001

136:                                              ; preds = %120
  %137 = trunc i32 %2 to i16, !dbg !14002
  %138 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 67, i16 noundef zeroext 3, i16 noundef zeroext 0, i16 noundef zeroext %137) #21, !dbg !14003
  br label %241, !dbg !14004

139:                                              ; preds = %120
  %140 = trunc i32 %2 to i16, !dbg !14005
  %141 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 67, i16 noundef zeroext 3, i16 noundef zeroext 4, i16 noundef zeroext %140) #21, !dbg !14006
  br label %241, !dbg !14007

142:                                              ; preds = %120
  %143 = trunc i32 %2 to i16, !dbg !14008
  %144 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 67, i16 noundef zeroext 3, i16 noundef zeroext 2, i16 noundef zeroext %143) #21, !dbg !14009
  br label %241, !dbg !14010

145:                                              ; preds = %120
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__FUNCTION__.PMIC_VR_PSI_PMOD_CONFIG, i32 0, i32 0), i32 noundef 239, i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.207, i32 0, i32 0)) #21, !dbg !14011
  br label %241, !dbg !14012

146:                                              ; preds = %3
  switch i32 %1, label %165 [
    i32 0, label %147
    i32 1, label %150
    i32 2, label %153
    i32 3, label %156
    i32 4, label %159
    i32 5, label %162
  ], !dbg !14013

147:                                              ; preds = %146
  %148 = trunc i32 %2 to i16, !dbg !14014
  %149 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 218, i16 noundef zeroext 1, i16 noundef zeroext 2, i16 noundef zeroext %148) #21, !dbg !14016
  br label %241, !dbg !14017

150:                                              ; preds = %146
  %151 = trunc i32 %2 to i16, !dbg !14018
  %152 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 226, i16 noundef zeroext 1, i16 noundef zeroext 1, i16 noundef zeroext %151) #21, !dbg !14019
  br label %241, !dbg !14020

153:                                              ; preds = %146
  %154 = trunc i32 %2 to i16, !dbg !14021
  %155 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 226, i16 noundef zeroext 1, i16 noundef zeroext 5, i16 noundef zeroext %154) #21, !dbg !14022
  br label %241, !dbg !14023

156:                                              ; preds = %146
  %157 = trunc i32 %2 to i16, !dbg !14024
  %158 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 227, i16 noundef zeroext 1, i16 noundef zeroext 1, i16 noundef zeroext %157) #21, !dbg !14025
  br label %241, !dbg !14026

159:                                              ; preds = %146
  %160 = trunc i32 %2 to i16, !dbg !14027
  %161 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 227, i16 noundef zeroext 1, i16 noundef zeroext 5, i16 noundef zeroext %160) #21, !dbg !14028
  br label %241, !dbg !14029

162:                                              ; preds = %146
  %163 = trunc i32 %2 to i16, !dbg !14030
  %164 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 219, i16 noundef zeroext 1, i16 noundef zeroext 2, i16 noundef zeroext %163) #21, !dbg !14031
  br label %241, !dbg !14032

165:                                              ; preds = %146
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__FUNCTION__.PMIC_VR_PSI_PMOD_CONFIG, i32 0, i32 0), i32 noundef 265, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.206, i32 0, i32 0)) #21, !dbg !14033
  br label %241, !dbg !14034

166:                                              ; preds = %3
  switch i32 %1, label %182 [
    i32 0, label %167
    i32 1, label %170
    i32 2, label %173
    i32 3, label %176
    i32 4, label %179
  ], !dbg !14035

167:                                              ; preds = %166
  %168 = trunc i32 %2 to i16, !dbg !14036
  %169 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 237, i16 noundef zeroext 3, i16 noundef zeroext 2, i16 noundef zeroext %168) #21, !dbg !14038
  br label %241, !dbg !14039

170:                                              ; preds = %166
  %171 = trunc i32 %2 to i16, !dbg !14040
  %172 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 245, i16 noundef zeroext 3, i16 noundef zeroext 1, i16 noundef zeroext %171) #21, !dbg !14041
  br label %241, !dbg !14042

173:                                              ; preds = %166
  %174 = trunc i32 %2 to i16, !dbg !14043
  %175 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 245, i16 noundef zeroext 3, i16 noundef zeroext 5, i16 noundef zeroext %174) #21, !dbg !14044
  br label %241, !dbg !14045

176:                                              ; preds = %166
  %177 = trunc i32 %2 to i16, !dbg !14046
  %178 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 246, i16 noundef zeroext 3, i16 noundef zeroext 1, i16 noundef zeroext %177) #21, !dbg !14047
  br label %241, !dbg !14048

179:                                              ; preds = %166
  %180 = trunc i32 %2 to i16, !dbg !14049
  %181 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 246, i16 noundef zeroext 3, i16 noundef zeroext 5, i16 noundef zeroext %180) #21, !dbg !14050
  br label %241, !dbg !14051

182:                                              ; preds = %166
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__FUNCTION__.PMIC_VR_PSI_PMOD_CONFIG, i32 0, i32 0), i32 noundef 288, i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.207, i32 0, i32 0)) #21, !dbg !14052
  br label %241, !dbg !14053

183:                                              ; preds = %3
  switch i32 %1, label %199 [
    i32 0, label %184
    i32 1, label %187
    i32 2, label %190
    i32 3, label %193
    i32 4, label %196
  ], !dbg !14054

184:                                              ; preds = %183
  %185 = trunc i32 %2 to i16, !dbg !14055
  %186 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 228, i16 noundef zeroext 3, i16 noundef zeroext 2, i16 noundef zeroext %185) #21, !dbg !14057
  br label %241, !dbg !14058

187:                                              ; preds = %183
  %188 = trunc i32 %2 to i16, !dbg !14059
  %189 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 757, i16 noundef zeroext 3, i16 noundef zeroext 1, i16 noundef zeroext %188) #21, !dbg !14060
  br label %241, !dbg !14061

190:                                              ; preds = %183
  %191 = trunc i32 %2 to i16, !dbg !14062
  %192 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 757, i16 noundef zeroext 3, i16 noundef zeroext 5, i16 noundef zeroext %191) #21, !dbg !14063
  br label %241, !dbg !14064

193:                                              ; preds = %183
  %194 = trunc i32 %2 to i16, !dbg !14065
  %195 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 758, i16 noundef zeroext 3, i16 noundef zeroext 1, i16 noundef zeroext %194) #21, !dbg !14066
  br label %241, !dbg !14067

196:                                              ; preds = %183
  %197 = trunc i32 %2 to i16, !dbg !14068
  %198 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 758, i16 noundef zeroext 3, i16 noundef zeroext 5, i16 noundef zeroext %197) #21, !dbg !14069
  br label %241, !dbg !14070

199:                                              ; preds = %183
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__FUNCTION__.PMIC_VR_PSI_PMOD_CONFIG, i32 0, i32 0), i32 noundef 311, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.206, i32 0, i32 0)) #21, !dbg !14071
  br label %241, !dbg !14072

200:                                              ; preds = %3
  switch i32 %1, label %216 [
    i32 0, label %201
    i32 1, label %204
    i32 2, label %207
    i32 3, label %210
    i32 4, label %213
  ], !dbg !14073

201:                                              ; preds = %200
  %202 = trunc i32 %2 to i16, !dbg !14074
  %203 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 229, i16 noundef zeroext 3, i16 noundef zeroext 2, i16 noundef zeroext %202) #21, !dbg !14076
  br label %241, !dbg !14077

204:                                              ; preds = %200
  %205 = trunc i32 %2 to i16, !dbg !14078
  %206 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 766, i16 noundef zeroext 3, i16 noundef zeroext 1, i16 noundef zeroext %205) #21, !dbg !14079
  br label %241, !dbg !14080

207:                                              ; preds = %200
  %208 = trunc i32 %2 to i16, !dbg !14081
  %209 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 766, i16 noundef zeroext 3, i16 noundef zeroext 5, i16 noundef zeroext %208) #21, !dbg !14082
  br label %241, !dbg !14083

210:                                              ; preds = %200
  %211 = trunc i32 %2 to i16, !dbg !14084
  %212 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 767, i16 noundef zeroext 3, i16 noundef zeroext 1, i16 noundef zeroext %211) #21, !dbg !14085
  br label %241, !dbg !14086

213:                                              ; preds = %200
  %214 = trunc i32 %2 to i16, !dbg !14087
  %215 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 767, i16 noundef zeroext 3, i16 noundef zeroext 5, i16 noundef zeroext %214) #21, !dbg !14088
  br label %241, !dbg !14089

216:                                              ; preds = %200
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__FUNCTION__.PMIC_VR_PSI_PMOD_CONFIG, i32 0, i32 0), i32 noundef 334, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.206, i32 0, i32 0)) #21, !dbg !14090
  br label %241, !dbg !14091

217:                                              ; preds = %3
  switch i32 %1, label %233 [
    i32 0, label %218
    i32 1, label %221
    i32 2, label %224
    i32 3, label %227
    i32 4, label %230
  ], !dbg !14092

218:                                              ; preds = %217
  %219 = trunc i32 %2 to i16, !dbg !14093
  %220 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 236, i16 noundef zeroext 3, i16 noundef zeroext 2, i16 noundef zeroext %219) #21, !dbg !14095
  br label %241, !dbg !14096

221:                                              ; preds = %217
  %222 = trunc i32 %2 to i16, !dbg !14097
  %223 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 802, i16 noundef zeroext 3, i16 noundef zeroext 1, i16 noundef zeroext %222) #21, !dbg !14098
  br label %241, !dbg !14099

224:                                              ; preds = %217
  %225 = trunc i32 %2 to i16, !dbg !14100
  %226 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 802, i16 noundef zeroext 3, i16 noundef zeroext 5, i16 noundef zeroext %225) #21, !dbg !14101
  br label %241, !dbg !14102

227:                                              ; preds = %217
  %228 = trunc i32 %2 to i16, !dbg !14103
  %229 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 803, i16 noundef zeroext 3, i16 noundef zeroext 1, i16 noundef zeroext %228) #21, !dbg !14104
  br label %241, !dbg !14105

230:                                              ; preds = %217
  %231 = trunc i32 %2 to i16, !dbg !14106
  %232 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 803, i16 noundef zeroext 3, i16 noundef zeroext 5, i16 noundef zeroext %231) #21, !dbg !14107
  br label %241, !dbg !14108

233:                                              ; preds = %217
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__FUNCTION__.PMIC_VR_PSI_PMOD_CONFIG, i32 0, i32 0), i32 noundef 357, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.206, i32 0, i32 0)) #21, !dbg !14109
  br label %241, !dbg !14110

234:                                              ; preds = %3
  %235 = trunc i32 %2 to i16, !dbg !14111
  %236 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 768, i16 noundef zeroext 3, i16 noundef zeroext 2, i16 noundef zeroext %235) #21, !dbg !14112
  br label %241, !dbg !14113

237:                                              ; preds = %3
  %238 = trunc i32 %2 to i16, !dbg !14114
  %239 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 804, i16 noundef zeroext 3, i16 noundef zeroext 2, i16 noundef zeroext %238) #21, !dbg !14115
  br label %241, !dbg !14116

240:                                              ; preds = %3
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__FUNCTION__.PMIC_VR_PSI_PMOD_CONFIG, i32 0, i32 0), i32 noundef 371, i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.208, i32 0, i32 0)) #21, !dbg !14117
  br label %241, !dbg !14118

241:                                              ; preds = %218, %221, %224, %227, %230, %233, %201, %204, %207, %210, %213, %216, %184, %187, %190, %193, %196, %199, %167, %170, %173, %176, %179, %182, %147, %150, %153, %156, %159, %162, %165, %121, %124, %127, %130, %133, %136, %139, %142, %145, %39, %42, %45, %48, %51, %54, %22, %25, %28, %31, %34, %37, %5, %8, %11, %14, %17, %20, %240, %237, %234, %117
  tail call void @pmu_set_ovr_mode_mt6385(i32 noundef 0) #20, !dbg !14119
  tail call void @pmu_set_vrc_key_mt6385(i32 noundef 1) #20, !dbg !14120
  ret void, !dbg !14121
}

; Function Attrs: noinline nounwind optsize
define dso_local void @pmu_set_vrc_key_mt6385(i32 noundef %0) local_unnamed_addr #0 !dbg !14122 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14127, metadata !DIExpression()), !dbg !14128
  %2 = icmp eq i32 %0, 1, !dbg !14129
  %3 = select i1 %2, i16 0, i16 252
  %4 = select i1 %2, i16 0, i16 218
  %5 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 62, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext %3) #21, !dbg !14131
  %6 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 63, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext %4) #21, !dbg !14131
  ret void, !dbg !14132
}

; Function Attrs: noinline nounwind optsize
define dso_local void @pmu_set_ovr_mode_mt6385(i32 noundef %0) local_unnamed_addr #0 !dbg !14133 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14138, metadata !DIExpression()), !dbg !14139
  %2 = icmp eq i32 %0, 0, !dbg !14140
  br i1 %2, label %3, label %5, !dbg !14142

3:                                                ; preds = %1
  %4 = tail call i32 @hal_gpt_delay_us(i32 noundef 500) #21, !dbg !14143
  br label %5, !dbg !14145

5:                                                ; preds = %1, %3
  %6 = phi i16 [ 0, %3 ], [ 1, %1 ]
  %7 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 64, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext %6) #21, !dbg !14146
  ret void, !dbg !14147
}

; Function Attrs: noinline nounwind optsize
define dso_local void @PMIC_VR_SLEEP_WKUP_CONFIG(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !14148 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14152, metadata !DIExpression()), !dbg !14158
  call void @llvm.dbg.value(metadata i32 %1, metadata !14153, metadata !DIExpression()), !dbg !14158
  call void @llvm.dbg.value(metadata i32 %2, metadata !14154, metadata !DIExpression()), !dbg !14158
  call void @llvm.dbg.value(metadata i32 %3, metadata !14155, metadata !DIExpression()), !dbg !14158
  call void @llvm.dbg.value(metadata i32 0, metadata !14156, metadata !DIExpression()), !dbg !14158
  call void @llvm.dbg.value(metadata i32 14, metadata !14157, metadata !DIExpression()), !dbg !14158
  switch i32 %1, label %9 [
    i32 3, label %5
    i32 4, label %7
  ], !dbg !14159

5:                                                ; preds = %4
  %6 = tail call zeroext i8 @pmu_get_register_value(i16 noundef zeroext 117, i16 noundef zeroext 15, i16 noundef zeroext 0) #21, !dbg !14160
  call void @llvm.dbg.value(metadata i8 %6, metadata !14156, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14158
  br label %10, !dbg !14162

7:                                                ; preds = %4
  %8 = tail call zeroext i8 @pmu_get_register_value(i16 noundef zeroext 117, i16 noundef zeroext 15, i16 noundef zeroext 4) #21, !dbg !14163
  call void @llvm.dbg.value(metadata i8 %8, metadata !14156, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14158
  br label %10, !dbg !14164

9:                                                ; preds = %4
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.PMIC_VR_SLEEP_WKUP_CONFIG, i32 0, i32 0), i32 noundef 400, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.3.211, i32 0, i32 0)) #21, !dbg !14165
  br label %10, !dbg !14166

10:                                               ; preds = %9, %7, %5
  %11 = phi i8 [ 0, %9 ], [ %8, %7 ], [ %6, %5 ]
  %12 = zext i8 %11 to i32, !dbg !14158
  call void @llvm.dbg.value(metadata i32 %12, metadata !14156, metadata !DIExpression()), !dbg !14158
  %13 = icmp slt i32 %12, %3, !dbg !14167
  br i1 %13, label %14, label %15, !dbg !14169

14:                                               ; preds = %10
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.PMIC_VR_SLEEP_WKUP_CONFIG, i32 0, i32 0), i32 noundef 405, i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.4.212, i32 0, i32 0)) #21, !dbg !14170
  br label %15, !dbg !14172

15:                                               ; preds = %14, %10
  switch i32 %2, label %18 [
    i32 0, label %19
    i32 1, label %16
    i32 2, label %17
  ], !dbg !14173

16:                                               ; preds = %15
  call void @llvm.dbg.value(metadata i32 15, metadata !14157, metadata !DIExpression()), !dbg !14158
  br label %19, !dbg !14174

17:                                               ; preds = %15
  call void @llvm.dbg.value(metadata i32 15, metadata !14157, metadata !DIExpression()), !dbg !14158
  br label %19, !dbg !14176

18:                                               ; preds = %15
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.PMIC_VR_SLEEP_WKUP_CONFIG, i32 0, i32 0), i32 noundef 419, i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.5.213, i32 0, i32 0), i32 noundef %2) #21, !dbg !14177
  br label %19, !dbg !14178

19:                                               ; preds = %15, %18, %17, %16
  %20 = phi i32 [ 14, %18 ], [ 15, %17 ], [ 15, %16 ], [ %3, %15 ], !dbg !14158
  call void @llvm.dbg.value(metadata i32 %20, metadata !14157, metadata !DIExpression()), !dbg !14158
  %21 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 88, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 41) #21, !dbg !14179
  %22 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 89, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 71) #21, !dbg !14180
  switch i32 %0, label %148 [
    i32 0, label %23
    i32 1, label %24
    i32 2, label %25
    i32 3, label %33
    i32 4, label %46
    i32 5, label %47
    i32 6, label %57
    i32 7, label %65
    i32 8, label %81
    i32 9, label %97
    i32 10, label %113
    i32 11, label %114
    i32 12, label %115
    i32 13, label %131
    i32 14, label %147
  ], !dbg !14181

23:                                               ; preds = %19
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.PMIC_VR_SLEEP_WKUP_CONFIG, i32 0, i32 0), i32 noundef 431, i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.6.214, i32 0, i32 0)) #21, !dbg !14182
  br label %149, !dbg !14184

24:                                               ; preds = %19
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.PMIC_VR_SLEEP_WKUP_CONFIG, i32 0, i32 0), i32 noundef 435, i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.7.215, i32 0, i32 0)) #21, !dbg !14185
  br label %149, !dbg !14186

25:                                               ; preds = %19
  switch i32 %1, label %32 [
    i32 3, label %26
    i32 4, label %29
  ], !dbg !14187

26:                                               ; preds = %25
  %27 = trunc i32 %20 to i16, !dbg !14188
  %28 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 120, i16 noundef zeroext 15, i16 noundef zeroext 4, i16 noundef zeroext %27) #21, !dbg !14190
  br label %149, !dbg !14191

29:                                               ; preds = %25
  %30 = trunc i32 %20 to i16, !dbg !14192
  %31 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 125, i16 noundef zeroext 15, i16 noundef zeroext 4, i16 noundef zeroext %30) #21, !dbg !14193
  br label %149, !dbg !14194

32:                                               ; preds = %25
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.PMIC_VR_SLEEP_WKUP_CONFIG, i32 0, i32 0), i32 noundef 447, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.8.216, i32 0, i32 0)) #21, !dbg !14195
  br label %149, !dbg !14196

33:                                               ; preds = %19
  %34 = icmp eq i32 %20, 15, !dbg !14197
  %35 = load i16, i16* @pmu_mtcmos_ldo_ctrl, align 2, !dbg !14199
  %36 = and i16 %35, -2, !dbg !14199
  %37 = zext i1 %34 to i16, !dbg !14199
  %38 = or i16 %36, %37, !dbg !14199
  store i16 %38, i16* @pmu_mtcmos_ldo_ctrl, align 2, !dbg !14200
  switch i32 %1, label %45 [
    i32 3, label %39
    i32 4, label %42
  ], !dbg !14201

39:                                               ; preds = %33
  %40 = trunc i32 %20 to i16, !dbg !14202
  %41 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 121, i16 noundef zeroext 15, i16 noundef zeroext 0, i16 noundef zeroext %40) #21, !dbg !14204
  br label %149, !dbg !14205

42:                                               ; preds = %33
  %43 = trunc i32 %20 to i16, !dbg !14206
  %44 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 126, i16 noundef zeroext 15, i16 noundef zeroext 0, i16 noundef zeroext %43) #21, !dbg !14207
  br label %149, !dbg !14208

45:                                               ; preds = %33
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.PMIC_VR_SLEEP_WKUP_CONFIG, i32 0, i32 0), i32 noundef 466, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.8.216, i32 0, i32 0)) #21, !dbg !14209
  br label %149, !dbg !14210

46:                                               ; preds = %19
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.PMIC_VR_SLEEP_WKUP_CONFIG, i32 0, i32 0), i32 noundef 472, i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.9.217, i32 0, i32 0)) #21, !dbg !14211
  br label %149, !dbg !14212

47:                                               ; preds = %19
  %48 = add i32 %2, -1, !dbg !14213
  %49 = icmp ult i32 %48, 2, !dbg !14213
  br i1 %49, label %50, label %149, !dbg !14213

50:                                               ; preds = %47
  tail call void @pmu_set_vrc_key_mt6385(i32 noundef 0) #20, !dbg !14215
  tail call void @pmu_set_ovr_mode_mt6385(i32 noundef 1) #20, !dbg !14217
  switch i32 %1, label %55 [
    i32 3, label %51
    i32 4, label %53
  ], !dbg !14218

51:                                               ; preds = %50
  %52 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 227, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext 1) #21, !dbg !14219
  br label %56, !dbg !14221

53:                                               ; preds = %50
  %54 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 227, i16 noundef zeroext 1, i16 noundef zeroext 4, i16 noundef zeroext 1) #21, !dbg !14222
  br label %56, !dbg !14223

55:                                               ; preds = %50
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.PMIC_VR_SLEEP_WKUP_CONFIG, i32 0, i32 0), i32 noundef 488, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.8.216, i32 0, i32 0)) #21, !dbg !14224
  br label %56, !dbg !14225

56:                                               ; preds = %55, %53, %51
  tail call void @pmu_set_ovr_mode_mt6385(i32 noundef 0) #20, !dbg !14226
  tail call void @pmu_set_vrc_key_mt6385(i32 noundef 1) #20, !dbg !14227
  br label %149, !dbg !14228

57:                                               ; preds = %19
  switch i32 %1, label %64 [
    i32 3, label %58
    i32 4, label %61
  ], !dbg !14229

58:                                               ; preds = %57
  %59 = trunc i32 %20 to i16, !dbg !14230
  %60 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 122, i16 noundef zeroext 15, i16 noundef zeroext 0, i16 noundef zeroext %59) #21, !dbg !14232
  br label %149, !dbg !14233

61:                                               ; preds = %57
  %62 = trunc i32 %20 to i16, !dbg !14234
  %63 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 127, i16 noundef zeroext 15, i16 noundef zeroext 0, i16 noundef zeroext %62) #21, !dbg !14235
  br label %149, !dbg !14236

64:                                               ; preds = %57
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.PMIC_VR_SLEEP_WKUP_CONFIG, i32 0, i32 0), i32 noundef 506, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.8.216, i32 0, i32 0)) #21, !dbg !14237
  br label %149, !dbg !14238

65:                                               ; preds = %19
  %66 = icmp eq i32 %20, 15, !dbg !14239
  %67 = load i16, i16* @pmu_mtcmos_ldo_ctrl, align 2, !dbg !14241
  %68 = and i16 %67, -3, !dbg !14241
  %69 = select i1 %66, i16 2, i16 0, !dbg !14241
  %70 = or i16 %68, %69, !dbg !14241
  store i16 %70, i16* @pmu_mtcmos_ldo_ctrl, align 2, !dbg !14242
  %71 = icmp eq i32 %20, 0, !dbg !14243
  br i1 %71, label %72, label %73, !dbg !14245

72:                                               ; preds = %65
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.PMIC_VR_SLEEP_WKUP_CONFIG, i32 0, i32 0), i32 noundef 519, i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.10.218, i32 0, i32 0)) #21, !dbg !14246
  br label %73, !dbg !14248

73:                                               ; preds = %72, %65
  switch i32 %1, label %80 [
    i32 3, label %74
    i32 4, label %77
  ], !dbg !14249

74:                                               ; preds = %73
  %75 = trunc i32 %20 to i16, !dbg !14250
  %76 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 118, i16 noundef zeroext 15, i16 noundef zeroext 0, i16 noundef zeroext %75) #21, !dbg !14252
  br label %149, !dbg !14253

77:                                               ; preds = %73
  %78 = trunc i32 %20 to i16, !dbg !14254
  %79 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 123, i16 noundef zeroext 15, i16 noundef zeroext 0, i16 noundef zeroext %78) #21, !dbg !14255
  br label %149, !dbg !14256

80:                                               ; preds = %73
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.PMIC_VR_SLEEP_WKUP_CONFIG, i32 0, i32 0), i32 noundef 529, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.8.216, i32 0, i32 0)) #21, !dbg !14257
  br label %149, !dbg !14258

81:                                               ; preds = %19
  %82 = icmp eq i32 %20, 15, !dbg !14259
  %83 = load i16, i16* @pmu_mtcmos_ldo_ctrl, align 2, !dbg !14261
  %84 = and i16 %83, -5, !dbg !14261
  %85 = select i1 %82, i16 4, i16 0, !dbg !14261
  %86 = or i16 %84, %85, !dbg !14261
  store i16 %86, i16* @pmu_mtcmos_ldo_ctrl, align 2, !dbg !14262
  %87 = icmp eq i32 %20, 0, !dbg !14263
  br i1 %87, label %88, label %89, !dbg !14265

88:                                               ; preds = %81
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.PMIC_VR_SLEEP_WKUP_CONFIG, i32 0, i32 0), i32 noundef 542, i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.10.218, i32 0, i32 0)) #21, !dbg !14266
  br label %89, !dbg !14268

89:                                               ; preds = %88, %81
  switch i32 %1, label %96 [
    i32 3, label %90
    i32 4, label %93
  ], !dbg !14269

90:                                               ; preds = %89
  %91 = trunc i32 %20 to i16, !dbg !14270
  %92 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 118, i16 noundef zeroext 15, i16 noundef zeroext 4, i16 noundef zeroext %91) #21, !dbg !14272
  br label %149, !dbg !14273

93:                                               ; preds = %89
  %94 = trunc i32 %20 to i16, !dbg !14274
  %95 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 123, i16 noundef zeroext 15, i16 noundef zeroext 4, i16 noundef zeroext %94) #21, !dbg !14275
  br label %149, !dbg !14276

96:                                               ; preds = %89
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.PMIC_VR_SLEEP_WKUP_CONFIG, i32 0, i32 0), i32 noundef 552, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.8.216, i32 0, i32 0)) #21, !dbg !14277
  br label %149, !dbg !14278

97:                                               ; preds = %19
  %98 = icmp eq i32 %20, 15, !dbg !14279
  %99 = load i16, i16* @pmu_mtcmos_ldo_ctrl, align 2, !dbg !14281
  %100 = and i16 %99, -33, !dbg !14281
  %101 = select i1 %98, i16 32, i16 0, !dbg !14281
  %102 = or i16 %100, %101, !dbg !14281
  store i16 %102, i16* @pmu_mtcmos_ldo_ctrl, align 2, !dbg !14282
  %103 = icmp eq i32 %20, 0, !dbg !14283
  br i1 %103, label %104, label %105, !dbg !14285

104:                                              ; preds = %97
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.PMIC_VR_SLEEP_WKUP_CONFIG, i32 0, i32 0), i32 noundef 565, i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.10.218, i32 0, i32 0)) #21, !dbg !14286
  br label %105, !dbg !14288

105:                                              ; preds = %104, %97
  switch i32 %1, label %112 [
    i32 3, label %106
    i32 4, label %109
  ], !dbg !14289

106:                                              ; preds = %105
  %107 = trunc i32 %20 to i16, !dbg !14290
  %108 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 121, i16 noundef zeroext 15, i16 noundef zeroext 4, i16 noundef zeroext %107) #21, !dbg !14292
  br label %149, !dbg !14293

109:                                              ; preds = %105
  %110 = trunc i32 %20 to i16, !dbg !14294
  %111 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 126, i16 noundef zeroext 15, i16 noundef zeroext 4, i16 noundef zeroext %110) #21, !dbg !14295
  br label %149, !dbg !14296

112:                                              ; preds = %105
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.PMIC_VR_SLEEP_WKUP_CONFIG, i32 0, i32 0), i32 noundef 575, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.8.216, i32 0, i32 0)) #21, !dbg !14297
  br label %149, !dbg !14298

113:                                              ; preds = %19
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.PMIC_VR_SLEEP_WKUP_CONFIG, i32 0, i32 0), i32 noundef 581, i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.11.219, i32 0, i32 0)) #21, !dbg !14299
  br label %149, !dbg !14300

114:                                              ; preds = %19
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.PMIC_VR_SLEEP_WKUP_CONFIG, i32 0, i32 0), i32 noundef 585, i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.12.220, i32 0, i32 0)) #21, !dbg !14301
  br label %149, !dbg !14302

115:                                              ; preds = %19
  %116 = icmp eq i32 %20, 15, !dbg !14303
  %117 = load i16, i16* @pmu_mtcmos_ldo_ctrl, align 2, !dbg !14305
  %118 = and i16 %117, -9, !dbg !14305
  %119 = select i1 %116, i16 8, i16 0, !dbg !14305
  %120 = or i16 %118, %119, !dbg !14305
  store i16 %120, i16* @pmu_mtcmos_ldo_ctrl, align 2, !dbg !14306
  %121 = icmp eq i32 %20, 0, !dbg !14307
  br i1 %121, label %122, label %123, !dbg !14309

122:                                              ; preds = %115
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.PMIC_VR_SLEEP_WKUP_CONFIG, i32 0, i32 0), i32 noundef 596, i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.10.218, i32 0, i32 0)) #21, !dbg !14310
  br label %123, !dbg !14312

123:                                              ; preds = %122, %115
  switch i32 %1, label %130 [
    i32 3, label %124
    i32 4, label %127
  ], !dbg !14313

124:                                              ; preds = %123
  %125 = trunc i32 %20 to i16, !dbg !14314
  %126 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 119, i16 noundef zeroext 15, i16 noundef zeroext 4, i16 noundef zeroext %125) #21, !dbg !14316
  br label %149, !dbg !14317

127:                                              ; preds = %123
  %128 = trunc i32 %20 to i16, !dbg !14318
  %129 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 124, i16 noundef zeroext 15, i16 noundef zeroext 4, i16 noundef zeroext %128) #21, !dbg !14319
  br label %149, !dbg !14320

130:                                              ; preds = %123
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.PMIC_VR_SLEEP_WKUP_CONFIG, i32 0, i32 0), i32 noundef 606, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.8.216, i32 0, i32 0)) #21, !dbg !14321
  br label %149, !dbg !14322

131:                                              ; preds = %19
  %132 = icmp eq i32 %20, 15, !dbg !14323
  %133 = load i16, i16* @pmu_mtcmos_ldo_ctrl, align 2, !dbg !14325
  %134 = and i16 %133, -17, !dbg !14325
  %135 = select i1 %132, i16 16, i16 0, !dbg !14325
  %136 = or i16 %134, %135, !dbg !14325
  store i16 %136, i16* @pmu_mtcmos_ldo_ctrl, align 2, !dbg !14326
  %137 = icmp eq i32 %20, 0, !dbg !14327
  br i1 %137, label %138, label %139, !dbg !14329

138:                                              ; preds = %131
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.PMIC_VR_SLEEP_WKUP_CONFIG, i32 0, i32 0), i32 noundef 619, i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.10.218, i32 0, i32 0)) #21, !dbg !14330
  br label %139, !dbg !14332

139:                                              ; preds = %138, %131
  switch i32 %1, label %146 [
    i32 3, label %140
    i32 4, label %143
  ], !dbg !14333

140:                                              ; preds = %139
  %141 = trunc i32 %20 to i16, !dbg !14334
  %142 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 120, i16 noundef zeroext 15, i16 noundef zeroext 0, i16 noundef zeroext %141) #21, !dbg !14336
  br label %149, !dbg !14337

143:                                              ; preds = %139
  %144 = trunc i32 %20 to i16, !dbg !14338
  %145 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 125, i16 noundef zeroext 15, i16 noundef zeroext 0, i16 noundef zeroext %144) #21, !dbg !14339
  br label %149, !dbg !14340

146:                                              ; preds = %139
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.PMIC_VR_SLEEP_WKUP_CONFIG, i32 0, i32 0), i32 noundef 629, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.8.216, i32 0, i32 0)) #21, !dbg !14341
  br label %149, !dbg !14342

147:                                              ; preds = %19
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.PMIC_VR_SLEEP_WKUP_CONFIG, i32 0, i32 0), i32 noundef 635, i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.13.221, i32 0, i32 0)) #21, !dbg !14343
  br label %149, !dbg !14344

148:                                              ; preds = %19
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.PMIC_VR_SLEEP_WKUP_CONFIG, i32 0, i32 0), i32 noundef 639, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.14.222, i32 0, i32 0)) #21, !dbg !14345
  br label %149, !dbg !14346

149:                                              ; preds = %140, %143, %146, %124, %127, %130, %106, %109, %112, %90, %93, %96, %74, %77, %80, %58, %61, %64, %56, %47, %39, %42, %45, %26, %29, %32, %148, %147, %114, %113, %46, %24, %23
  %150 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 88, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 0) #21, !dbg !14347
  %151 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 89, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 0) #21, !dbg !14348
  ret void, !dbg !14349
}

; Function Attrs: noinline nounwind optsize
define dso_local void @PMIC_VR_CONTROL(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !14350 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14354, metadata !DIExpression()), !dbg !14357
  call void @llvm.dbg.value(metadata i32 %1, metadata !14355, metadata !DIExpression()), !dbg !14357
  call void @llvm.dbg.value(metadata i32 1, metadata !14356, metadata !DIExpression()), !dbg !14357
  %3 = icmp eq i32 %1, 0, !dbg !14358
  call void @llvm.dbg.value(metadata i1 %3, metadata !14356, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14357
  %4 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 62, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 252) #21, !dbg !14360
  %5 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 63, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 218) #21, !dbg !14361
  switch i32 %0, label %114 [
    i32 0, label %6
    i32 1, label %7
    i32 2, label %8
    i32 3, label %14
    i32 4, label %25
    i32 5, label %26
    i32 6, label %29
    i32 7, label %35
    i32 8, label %46
    i32 9, label %57
    i32 10, label %68
    i32 11, label %79
    i32 12, label %90
    i32 13, label %98
    i32 14, label %106
  ], !dbg !14362

6:                                                ; preds = %2
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__FUNCTION__.PMIC_VR_CONTROL, i32 0, i32 0), i32 noundef 662, i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.15.225, i32 0, i32 0)) #21, !dbg !14363
  br label %115, !dbg !14365

7:                                                ; preds = %2
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__FUNCTION__.PMIC_VR_CONTROL, i32 0, i32 0), i32 noundef 666, i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.16.226, i32 0, i32 0)) #21, !dbg !14366
  br label %115, !dbg !14367

8:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i1 %3, metadata !14356, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14357
  %9 = trunc i32 %1 to i16, !dbg !14368
  %10 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 234, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext %9) #21, !dbg !14369
  call void @llvm.dbg.value(metadata i1 %3, metadata !14356, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14357
  br i1 %3, label %115, label %11, !dbg !14370

11:                                               ; preds = %8, %11
  %12 = tail call zeroext i8 @pmu_get_register_value(i16 noundef zeroext 234, i16 noundef zeroext 1, i16 noundef zeroext 6) #21, !dbg !14371
  call void @llvm.dbg.value(metadata i8 %12, metadata !14356, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14357
  %13 = icmp eq i8 %12, 0, !dbg !14373
  br i1 %13, label %11, label %115, !dbg !14370, !llvm.loop !14374

14:                                               ; preds = %2
  %15 = icmp eq i32 %1, 1, !dbg !14376
  %16 = load i16, i16* @pmu_mtcmos_ldo_en, align 2, !dbg !14378
  %17 = and i16 %16, -2, !dbg !14378
  %18 = zext i1 %15 to i16, !dbg !14378
  %19 = or i16 %17, %18, !dbg !14378
  store i16 %19, i16* @pmu_mtcmos_ldo_en, align 2, !dbg !14379
  %20 = trunc i32 %1 to i16, !dbg !14380
  %21 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 235, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext %20) #21, !dbg !14381
  call void @llvm.dbg.value(metadata i1 %3, metadata !14356, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14357
  br i1 %3, label %115, label %22, !dbg !14382

22:                                               ; preds = %14, %22
  %23 = tail call zeroext i8 @pmu_get_register_value(i16 noundef zeroext 235, i16 noundef zeroext 1, i16 noundef zeroext 6) #21, !dbg !14383
  call void @llvm.dbg.value(metadata i8 %23, metadata !14356, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14357
  %24 = icmp eq i8 %23, 0, !dbg !14385
  br i1 %24, label %22, label %115, !dbg !14382, !llvm.loop !14386

25:                                               ; preds = %2
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__FUNCTION__.PMIC_VR_CONTROL, i32 0, i32 0), i32 noundef 689, i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.16.226, i32 0, i32 0)) #21, !dbg !14388
  br label %115, !dbg !14389

26:                                               ; preds = %2
  %27 = trunc i32 %1 to i16, !dbg !14390
  %28 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 218, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext %27) #21, !dbg !14391
  br label %115, !dbg !14392

29:                                               ; preds = %2
  %30 = trunc i32 %1 to i16, !dbg !14393
  %31 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 237, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext %30) #21, !dbg !14394
  call void @llvm.dbg.value(metadata i1 %3, metadata !14356, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14357
  br i1 %3, label %115, label %32, !dbg !14395

32:                                               ; preds = %29, %32
  %33 = tail call zeroext i8 @pmu_get_register_value(i16 noundef zeroext 237, i16 noundef zeroext 1, i16 noundef zeroext 6) #21, !dbg !14396
  call void @llvm.dbg.value(metadata i8 %33, metadata !14356, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14357
  %34 = icmp eq i8 %33, 0, !dbg !14398
  br i1 %34, label %32, label %115, !dbg !14395, !llvm.loop !14399

35:                                               ; preds = %2
  %36 = icmp eq i32 %1, 1, !dbg !14401
  %37 = load i16, i16* @pmu_mtcmos_ldo_en, align 2, !dbg !14403
  %38 = and i16 %37, -3, !dbg !14403
  %39 = select i1 %36, i16 2, i16 0, !dbg !14403
  %40 = or i16 %38, %39, !dbg !14403
  store i16 %40, i16* @pmu_mtcmos_ldo_en, align 2, !dbg !14404
  %41 = trunc i32 %1 to i16, !dbg !14405
  %42 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 228, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext %41) #21, !dbg !14406
  call void @llvm.dbg.value(metadata i1 %3, metadata !14356, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14357
  br i1 %3, label %115, label %43, !dbg !14407

43:                                               ; preds = %35, %43
  %44 = tail call zeroext i8 @pmu_get_register_value(i16 noundef zeroext 228, i16 noundef zeroext 1, i16 noundef zeroext 6) #21, !dbg !14408
  call void @llvm.dbg.value(metadata i8 %44, metadata !14356, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14357
  %45 = icmp eq i8 %44, 0, !dbg !14410
  br i1 %45, label %43, label %115, !dbg !14407, !llvm.loop !14411

46:                                               ; preds = %2
  %47 = icmp eq i32 %1, 1, !dbg !14413
  %48 = load i16, i16* @pmu_mtcmos_ldo_en, align 2, !dbg !14415
  %49 = and i16 %48, -5, !dbg !14415
  %50 = select i1 %47, i16 4, i16 0, !dbg !14415
  %51 = or i16 %49, %50, !dbg !14415
  store i16 %51, i16* @pmu_mtcmos_ldo_en, align 2, !dbg !14416
  %52 = trunc i32 %1 to i16, !dbg !14417
  %53 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 229, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext %52) #21, !dbg !14418
  call void @llvm.dbg.value(metadata i1 %3, metadata !14356, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14357
  br i1 %3, label %115, label %54, !dbg !14419

54:                                               ; preds = %46, %54
  %55 = tail call zeroext i8 @pmu_get_register_value(i16 noundef zeroext 229, i16 noundef zeroext 1, i16 noundef zeroext 6) #21, !dbg !14420
  call void @llvm.dbg.value(metadata i8 %55, metadata !14356, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14357
  %56 = icmp eq i8 %55, 0, !dbg !14422
  br i1 %56, label %54, label %115, !dbg !14419, !llvm.loop !14423

57:                                               ; preds = %2
  %58 = icmp eq i32 %1, 1, !dbg !14425
  %59 = load i16, i16* @pmu_mtcmos_ldo_en, align 2, !dbg !14427
  %60 = and i16 %59, -33, !dbg !14427
  %61 = select i1 %58, i16 32, i16 0, !dbg !14427
  %62 = or i16 %60, %61, !dbg !14427
  store i16 %62, i16* @pmu_mtcmos_ldo_en, align 2, !dbg !14428
  %63 = trunc i32 %1 to i16, !dbg !14429
  %64 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 236, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext %63) #21, !dbg !14430
  call void @llvm.dbg.value(metadata i1 %3, metadata !14356, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14357
  br i1 %3, label %115, label %65, !dbg !14431

65:                                               ; preds = %57, %65
  %66 = tail call zeroext i8 @pmu_get_register_value(i16 noundef zeroext 236, i16 noundef zeroext 1, i16 noundef zeroext 6) #21, !dbg !14432
  call void @llvm.dbg.value(metadata i8 %66, metadata !14356, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14357
  %67 = icmp eq i8 %66, 0, !dbg !14434
  br i1 %67, label %65, label %115, !dbg !14431, !llvm.loop !14435

68:                                               ; preds = %2
  %69 = icmp eq i32 %1, 1, !dbg !14437
  %70 = load i16, i16* @pmu_mtcmos_ldo_en, align 2, !dbg !14439
  %71 = and i16 %70, -65, !dbg !14439
  %72 = select i1 %69, i16 64, i16 0, !dbg !14439
  %73 = or i16 %71, %72, !dbg !14439
  store i16 %73, i16* @pmu_mtcmos_ldo_en, align 2, !dbg !14440
  %74 = trunc i32 %1 to i16, !dbg !14441
  %75 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 768, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext %74) #21, !dbg !14442
  call void @llvm.dbg.value(metadata i1 %3, metadata !14356, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14357
  br i1 %3, label %115, label %76, !dbg !14443

76:                                               ; preds = %68, %76
  %77 = tail call zeroext i8 @pmu_get_register_value(i16 noundef zeroext 768, i16 noundef zeroext 1, i16 noundef zeroext 6) #21, !dbg !14444
  call void @llvm.dbg.value(metadata i8 %77, metadata !14356, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14357
  %78 = icmp eq i8 %77, 0, !dbg !14446
  br i1 %78, label %76, label %115, !dbg !14443, !llvm.loop !14447

79:                                               ; preds = %2
  %80 = icmp eq i32 %1, 1, !dbg !14449
  %81 = load i16, i16* @pmu_mtcmos_ldo_en, align 2, !dbg !14451
  %82 = and i16 %81, -129, !dbg !14451
  %83 = select i1 %80, i16 128, i16 0, !dbg !14451
  %84 = or i16 %82, %83, !dbg !14451
  store i16 %84, i16* @pmu_mtcmos_ldo_en, align 2, !dbg !14452
  %85 = trunc i32 %1 to i16, !dbg !14453
  %86 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 804, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext %85) #21, !dbg !14454
  call void @llvm.dbg.value(metadata i1 %3, metadata !14356, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14357
  br i1 %3, label %115, label %87, !dbg !14455

87:                                               ; preds = %79, %87
  %88 = tail call zeroext i8 @pmu_get_register_value(i16 noundef zeroext 804, i16 noundef zeroext 1, i16 noundef zeroext 6) #21, !dbg !14456
  call void @llvm.dbg.value(metadata i8 %88, metadata !14356, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14357
  %89 = icmp eq i8 %88, 0, !dbg !14458
  br i1 %89, label %87, label %115, !dbg !14455, !llvm.loop !14459

90:                                               ; preds = %2
  %91 = icmp eq i32 %1, 1, !dbg !14461
  %92 = load i16, i16* @pmu_mtcmos_ldo_en, align 2, !dbg !14463
  %93 = and i16 %92, -9, !dbg !14463
  %94 = select i1 %91, i16 8, i16 0, !dbg !14463
  %95 = or i16 %93, %94, !dbg !14463
  store i16 %95, i16* @pmu_mtcmos_ldo_en, align 2, !dbg !14464
  %96 = trunc i32 %1 to i16, !dbg !14465
  %97 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 778, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext %96) #21, !dbg !14466
  br label %115, !dbg !14467

98:                                               ; preds = %2
  %99 = icmp eq i32 %1, 1, !dbg !14468
  %100 = load i16, i16* @pmu_mtcmos_ldo_en, align 2, !dbg !14470
  %101 = and i16 %100, -17, !dbg !14470
  %102 = select i1 %99, i16 16, i16 0, !dbg !14470
  %103 = or i16 %101, %102, !dbg !14470
  store i16 %103, i16* @pmu_mtcmos_ldo_en, align 2, !dbg !14471
  %104 = trunc i32 %1 to i16, !dbg !14472
  %105 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 778, i16 noundef zeroext 1, i16 noundef zeroext 1, i16 noundef zeroext %104) #21, !dbg !14473
  br label %115, !dbg !14474

106:                                              ; preds = %2
  %107 = icmp eq i32 %1, 1, !dbg !14475
  %108 = load i16, i16* @pmu_mtcmos_ldo_en, align 2, !dbg !14477
  %109 = and i16 %108, -257, !dbg !14477
  %110 = select i1 %107, i16 256, i16 0, !dbg !14477
  %111 = or i16 %109, %110, !dbg !14477
  store i16 %111, i16* @pmu_mtcmos_ldo_en, align 2, !dbg !14478
  %112 = trunc i32 %1 to i16, !dbg !14479
  %113 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 778, i16 noundef zeroext 1, i16 noundef zeroext 2, i16 noundef zeroext %112) #21, !dbg !14480
  br label %115, !dbg !14481

114:                                              ; preds = %2
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__FUNCTION__.PMIC_VR_CONTROL, i32 0, i32 0), i32 noundef 791, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.17.227, i32 0, i32 0)) #21, !dbg !14482
  br label %115, !dbg !14483

115:                                              ; preds = %87, %76, %65, %54, %43, %32, %22, %11, %79, %68, %57, %46, %35, %29, %14, %8, %114, %106, %98, %90, %26, %25, %7, %6
  %116 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 62, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 0) #21, !dbg !14484
  %117 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 63, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 0) #21, !dbg !14485
  ret void, !dbg !14486
}

; Function Attrs: noinline nounwind optsize
define dso_local void @PMIC_VCORE_VOSEL_CONFIG(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !14487 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14491, metadata !DIExpression()), !dbg !14495
  call void @llvm.dbg.value(metadata i32 %1, metadata !14492, metadata !DIExpression()), !dbg !14495
  call void @llvm.dbg.declare(metadata [7 x i32]* @__const.pmu_set_vcore_s1_buck_mt6385.vcbuck_voval, metadata !14493, metadata !DIExpression()), !dbg !14496
  call void @llvm.dbg.declare(metadata [7 x i32]* @__const.PMIC_VCORE_VOSEL_CONFIG.vc_ldo_vosel, metadata !14494, metadata !DIExpression()), !dbg !14497
  tail call void @pmu_set_vrc_key_mt6385(i32 noundef 0) #20, !dbg !14498
  tail call void @pmu_set_ovr_mode_mt6385(i32 noundef 1) #20, !dbg !14499
  %3 = tail call i32 @hal_gpt_delay_us(i32 noundef 350) #21, !dbg !14500
  switch i32 %0, label %36 [
    i32 0, label %4
    i32 1, label %13
    i32 2, label %22
    i32 4, label %31
  ], !dbg !14501

4:                                                ; preds = %2
  %5 = getelementptr inbounds [7 x i32], [7 x i32]* @__const.pmu_set_vcore_s1_buck_mt6385.vcbuck_voval, i32 0, i32 %1, !dbg !14502
  %6 = load i32, i32* %5, align 4, !dbg !14502
  %7 = trunc i32 %6 to i16, !dbg !14502
  %8 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 316, i16 noundef zeroext 15, i16 noundef zeroext 4, i16 noundef zeroext %7) #21, !dbg !14504
  %9 = getelementptr inbounds [7 x i32], [7 x i32]* @__const.PMIC_VCORE_VOSEL_CONFIG.vc_ldo_vosel, i32 0, i32 %1, !dbg !14505
  %10 = load i32, i32* %9, align 4, !dbg !14505
  %11 = trunc i32 %10 to i16, !dbg !14505
  %12 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 254, i16 noundef zeroext 15, i16 noundef zeroext 0, i16 noundef zeroext %11) #21, !dbg !14506
  br label %37, !dbg !14507

13:                                               ; preds = %2
  %14 = getelementptr inbounds [7 x i32], [7 x i32]* @__const.pmu_set_vcore_s1_buck_mt6385.vcbuck_voval, i32 0, i32 %1, !dbg !14508
  %15 = load i32, i32* %14, align 4, !dbg !14508
  %16 = trunc i32 %15 to i16, !dbg !14508
  %17 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 318, i16 noundef zeroext 15, i16 noundef zeroext 4, i16 noundef zeroext %16) #21, !dbg !14509
  %18 = getelementptr inbounds [7 x i32], [7 x i32]* @__const.PMIC_VCORE_VOSEL_CONFIG.vc_ldo_vosel, i32 0, i32 %1, !dbg !14510
  %19 = load i32, i32* %18, align 4, !dbg !14510
  %20 = trunc i32 %19 to i16, !dbg !14510
  %21 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 259, i16 noundef zeroext 15, i16 noundef zeroext 4, i16 noundef zeroext %20) #21, !dbg !14511
  br label %37, !dbg !14512

22:                                               ; preds = %2
  %23 = getelementptr inbounds [7 x i32], [7 x i32]* @__const.pmu_set_vcore_s1_buck_mt6385.vcbuck_voval, i32 0, i32 %1, !dbg !14513
  %24 = load i32, i32* %23, align 4, !dbg !14513
  %25 = trunc i32 %24 to i16, !dbg !14513
  %26 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 319, i16 noundef zeroext 15, i16 noundef zeroext 4, i16 noundef zeroext %25) #21, !dbg !14514
  %27 = getelementptr inbounds [7 x i32], [7 x i32]* @__const.PMIC_VCORE_VOSEL_CONFIG.vc_ldo_vosel, i32 0, i32 %1, !dbg !14515
  %28 = load i32, i32* %27, align 4, !dbg !14515
  %29 = trunc i32 %28 to i16, !dbg !14515
  %30 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 261, i16 noundef zeroext 15, i16 noundef zeroext 4, i16 noundef zeroext %29) #21, !dbg !14516
  br label %37, !dbg !14517

31:                                               ; preds = %2
  %32 = getelementptr inbounds [7 x i32], [7 x i32]* @__const.PMIC_VCORE_VOSEL_CONFIG.vc_ldo_vosel, i32 0, i32 %1, !dbg !14518
  %33 = load i32, i32* %32, align 4, !dbg !14518
  %34 = trunc i32 %33 to i16, !dbg !14518
  %35 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 264, i16 noundef zeroext 15, i16 noundef zeroext 4, i16 noundef zeroext %34) #21, !dbg !14519
  br label %37, !dbg !14520

36:                                               ; preds = %2
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__FUNCTION__.PMIC_VCORE_VOSEL_CONFIG, i32 0, i32 0), i32 noundef 830, i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.18.230, i32 0, i32 0)) #21, !dbg !14521
  br label %37, !dbg !14522

37:                                               ; preds = %36, %31, %22, %13, %4
  tail call void @pmu_set_ovr_mode_mt6385(i32 noundef 0) #20, !dbg !14523
  %38 = tail call i32 @hal_gpt_delay_us(i32 noundef 250) #21, !dbg !14524
  tail call void @pmu_set_vrc_key_mt6385(i32 noundef 1) #20, !dbg !14525
  ret void, !dbg !14526
}

; Function Attrs: noinline nounwind optsize
define dso_local void @PMIC_VR_VOSEL_INIT_CONFIG(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !14527 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14532, metadata !DIExpression()), !dbg !14536
  call void @llvm.dbg.value(metadata i32 %1, metadata !14533, metadata !DIExpression()), !dbg !14536
  call void @llvm.dbg.declare(metadata [8 x i32]* @__const.PMIC_VR_VOSEL_INIT_CONFIG.viber_vosel, metadata !14534, metadata !DIExpression()), !dbg !14537
  %3 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 62, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 252) #21, !dbg !14538
  %4 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 63, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 218) #21, !dbg !14539
  switch i32 %0, label %20 [
    i32 10, label %5
    i32 11, label %15
  ], !dbg !14540

5:                                                ; preds = %2
  switch i32 %1, label %14 [
    i32 1, label %6
    i32 2, label %8
    i32 4, label %10
    i32 5, label %12
  ], !dbg !14541

6:                                                ; preds = %5
  %7 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 771, i16 noundef zeroext 7, i16 noundef zeroext 0, i16 noundef zeroext 0) #21, !dbg !14543
  br label %21, !dbg !14545

8:                                                ; preds = %5
  %9 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 771, i16 noundef zeroext 7, i16 noundef zeroext 0, i16 noundef zeroext 1) #21, !dbg !14546
  br label %21, !dbg !14547

10:                                               ; preds = %5
  %11 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 771, i16 noundef zeroext 7, i16 noundef zeroext 0, i16 noundef zeroext 2) #21, !dbg !14548
  br label %21, !dbg !14549

12:                                               ; preds = %5
  %13 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 771, i16 noundef zeroext 7, i16 noundef zeroext 0, i16 noundef zeroext 3) #21, !dbg !14550
  br label %21, !dbg !14551

14:                                               ; preds = %5
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.PMIC_VR_VOSEL_INIT_CONFIG, i32 0, i32 0), i32 noundef 866, i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.19.231, i32 0, i32 0)) #21, !dbg !14552
  br label %21, !dbg !14553

15:                                               ; preds = %2
  %16 = getelementptr inbounds [8 x i32], [8 x i32]* @__const.PMIC_VR_VOSEL_INIT_CONFIG.viber_vosel, i32 0, i32 %1, !dbg !14554
  %17 = load i32, i32* %16, align 4, !dbg !14554
  %18 = trunc i32 %17 to i16, !dbg !14554
  %19 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 807, i16 noundef zeroext 7, i16 noundef zeroext 0, i16 noundef zeroext %18) #21, !dbg !14555
  br label %21, !dbg !14556

20:                                               ; preds = %2
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.PMIC_VR_VOSEL_INIT_CONFIG, i32 0, i32 0), i32 noundef 876, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.17.227, i32 0, i32 0)) #21, !dbg !14557
  br label %21, !dbg !14558

21:                                               ; preds = %6, %8, %10, %12, %14, %20, %15
  %22 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 62, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 0) #21, !dbg !14559
  %23 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 63, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 0) #21, !dbg !14560
  ret void, !dbg !14561
}

; Function Attrs: noinline nounwind optsize
define dso_local void @pmu_control_mtcmos_mt6385() local_unnamed_addr #0 !dbg !2588 {
  %1 = load i16, i16* @pmu_mtcmos_ldo_ctrl, align 2, !dbg !14562
  %2 = load i16, i16* @pmu_mtcmos_ldo_en, align 2, !dbg !14563
  %3 = and i16 %2, %1, !dbg !14564
  %4 = load i16, i16* @pmu_mtcmos_vio28_pmod, align 2, !dbg !14565
  %5 = or i16 %3, %4, !dbg !14566
  store i16 %5, i16* @pmu_control_mtcmos_mt6385.mtcmos_flag, align 2, !dbg !14567
  %6 = load i16, i16* @pmu_control_mtcmos_mt6385.local_flag, align 2, !dbg !14568
  %7 = icmp eq i16 %6, %5, !dbg !14570
  br i1 %7, label %12, label %8, !dbg !14571

8:                                                ; preds = %0
  %9 = icmp eq i16 %5, 0, !dbg !14572
  %10 = select i1 %9, i8 0, i8 3
  tail call void @pmu_set_mtcmos_mt6385(i8 noundef zeroext %10) #20, !dbg !14575
  %11 = load i16, i16* @pmu_control_mtcmos_mt6385.mtcmos_flag, align 2, !dbg !14576
  store i16 %11, i16* @pmu_control_mtcmos_mt6385.local_flag, align 2, !dbg !14577
  br label %12, !dbg !14578

12:                                               ; preds = %8, %0
  ret void, !dbg !14579
}

; Function Attrs: noinline nounwind optsize
define dso_local void @pmu_set_mtcmos_mt6385(i8 noundef zeroext %0) local_unnamed_addr #0 !dbg !14580 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !14582, metadata !DIExpression()), !dbg !14583
  %2 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 62, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 252) #21, !dbg !14584
  %3 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 63, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 218) #21, !dbg !14585
  %4 = zext i8 %0 to i16, !dbg !14586
  %5 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 130, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext %4) #21, !dbg !14587
  %6 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 62, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 0) #21, !dbg !14588
  %7 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 63, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 0) #21, !dbg !14589
  ret void, !dbg !14590
}

; Function Attrs: noinline nounwind optsize
define dso_local void @pmu_ctrl_va28_ldo_mt6385(i8 noundef zeroext %0) local_unnamed_addr #0 !dbg !2593 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !2597, metadata !DIExpression()), !dbg !14591
  %2 = load i8, i8* @pmu_ctrl_va28_ldo_mt6385.version, align 1, !dbg !14592
  switch i8 %2, label %5 [
    i8 17, label %22
    i8 0, label %3
  ], !dbg !14594

3:                                                ; preds = %1
  %4 = tail call zeroext i8 @pmu_get_register_value(i16 noundef zeroext 0, i16 noundef zeroext 255, i16 noundef zeroext 0) #21, !dbg !14595
  store i8 %4, i8* @pmu_ctrl_va28_ldo_mt6385.version, align 1, !dbg !14598
  br label %5, !dbg !14599

5:                                                ; preds = %1, %3
  %6 = icmp eq i8 %0, 1, !dbg !14600
  %7 = load i32, i32* @pmu_ctrl_va28_ldo_mt6385.resoure_count, align 4, !dbg !14602
  br i1 %6, label %8, label %15, !dbg !14603

8:                                                ; preds = %5
  %9 = icmp eq i32 %7, 0, !dbg !14604
  br i1 %9, label %10, label %12, !dbg !14607

10:                                               ; preds = %8
  tail call void @PMIC_VR_SLEEP_WKUP_CONFIG(i32 noundef 8, i32 noundef 3, i32 noundef 1, i32 noundef 0) #20, !dbg !14608
  tail call void @PMIC_VR_SLEEP_WKUP_CONFIG(i32 noundef 8, i32 noundef 4, i32 noundef 1, i32 noundef 0) #20, !dbg !14610
  %11 = load i32, i32* @pmu_ctrl_va28_ldo_mt6385.resoure_count, align 4, !dbg !14611
  br label %12, !dbg !14612

12:                                               ; preds = %10, %8
  %13 = phi i32 [ %11, %10 ], [ %7, %8 ], !dbg !14611
  %14 = add i32 %13, 1, !dbg !14611
  br label %20, !dbg !14613

15:                                               ; preds = %5
  %16 = icmp ult i32 %7, 2, !dbg !14614
  br i1 %16, label %17, label %18, !dbg !14617

17:                                               ; preds = %15
  tail call void @PMIC_VR_SLEEP_WKUP_CONFIG(i32 noundef 8, i32 noundef 3, i32 noundef 0, i32 noundef 0) #20, !dbg !14618
  tail call void @PMIC_VR_SLEEP_WKUP_CONFIG(i32 noundef 8, i32 noundef 4, i32 noundef 0, i32 noundef 0) #20, !dbg !14620
  br label %20, !dbg !14621

18:                                               ; preds = %15
  %19 = add i32 %7, -1, !dbg !14622
  br label %20

20:                                               ; preds = %12, %18, %17
  %21 = phi i32 [ 0, %17 ], [ %19, %18 ], [ %14, %12 ]
  store i32 %21, i32* @pmu_ctrl_va28_ldo_mt6385.resoure_count, align 4, !dbg !14602
  br label %22, !dbg !14624

22:                                               ; preds = %20, %1
  ret void, !dbg !14624
}

; Function Attrs: noinline nounwind optsize
define dso_local void @pmu_ctrl_vbt_ldo_mt6385(i8 noundef zeroext %0) local_unnamed_addr #0 !dbg !14625 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !14627, metadata !DIExpression()), !dbg !14628
  %2 = icmp eq i8 %0, 1, !dbg !14629
  %3 = xor i1 %2, true
  %4 = zext i1 %3 to i32
  %5 = zext i1 %2 to i32
  tail call void @PMIC_VR_SLEEP_WKUP_CONFIG(i32 noundef 7, i32 noundef 3, i32 noundef %4, i32 noundef 2) #20, !dbg !14631
  tail call void @PMIC_VR_SLEEP_WKUP_CONFIG(i32 noundef 7, i32 noundef 4, i32 noundef %4, i32 noundef 2) #20, !dbg !14631
  tail call void @PMIC_VR_CONTROL(i32 noundef 7, i32 noundef %5) #20, !dbg !14631
  ret void, !dbg !14632
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local i32 @pmu_get_vcore_setting_index(i8 noundef zeroext %0) local_unnamed_addr #14 !dbg !14633 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !14637, metadata !DIExpression()), !dbg !14640
  call void @llvm.dbg.declare(metadata [7 x i8]* @__const.pmu_get_vcore_setting_index.vcbuck_voval, metadata !14638, metadata !DIExpression()), !dbg !14641
  call void @llvm.dbg.value(metadata i32 0, metadata !14639, metadata !DIExpression()), !dbg !14640
  br label %2, !dbg !14642

2:                                                ; preds = %1, %7
  %3 = phi i32 [ 0, %1 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !14639, metadata !DIExpression()), !dbg !14640
  %4 = getelementptr inbounds [7 x i8], [7 x i8]* @__const.pmu_get_vcore_setting_index.vcbuck_voval, i32 0, i32 %3, !dbg !14644
  %5 = load i8, i8* %4, align 1, !dbg !14644
  %6 = icmp eq i8 %5, %0, !dbg !14648
  br i1 %6, label %10, label %7, !dbg !14649

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %3, 1, !dbg !14650
  call void @llvm.dbg.value(metadata i32 %8, metadata !14639, metadata !DIExpression()), !dbg !14640
  %9 = icmp eq i32 %8, 7, !dbg !14651
  br i1 %9, label %10, label %2, !dbg !14642, !llvm.loop !14652

10:                                               ; preds = %7, %2
  %11 = phi i32 [ %3, %2 ], [ 255, %7 ], !dbg !14640
  ret i32 %11, !dbg !14654
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i8 @pmu_set_vcore_voltage_mt6385(i8 noundef zeroext %0, i8 noundef zeroext %1) local_unnamed_addr #0 !dbg !2602 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !2604, metadata !DIExpression()), !dbg !14655
  call void @llvm.dbg.value(metadata i8 %1, metadata !2605, metadata !DIExpression()), !dbg !14655
  %3 = load i1, i1* @pmu_set_vcore_voltage_mt6385.init, align 1, !dbg !14656
  br i1 %3, label %15, label %4, !dbg !14658

4:                                                ; preds = %2
  %5 = tail call zeroext i8 @pmu_get_register_value(i16 noundef zeroext 319, i16 noundef zeroext 15, i16 noundef zeroext 4) #21, !dbg !14659
  %6 = tail call i32 @pmu_get_vcore_setting_index(i8 noundef zeroext %5) #20, !dbg !14661
  %7 = trunc i32 %6 to i8, !dbg !14661
  store i8 %7, i8* @pmu_set_vcore_voltage_mt6385.old_vcore_lp, align 1, !dbg !14662
  %8 = tail call zeroext i8 @pmu_get_register_value(i16 noundef zeroext 318, i16 noundef zeroext 15, i16 noundef zeroext 4) #21, !dbg !14663
  %9 = tail call i32 @pmu_get_vcore_setting_index(i8 noundef zeroext %8) #20, !dbg !14664
  %10 = trunc i32 %9 to i8, !dbg !14664
  %11 = load volatile i32, i32* inttoptr (i32 -1576271820 to i32*), align 4, !dbg !14665
  %12 = icmp eq i32 %11, 0, !dbg !14667
  %13 = load i8, i8* @pmu_set_vcore_voltage_mt6385.old_vcore_lp, align 1, !dbg !14668
  %14 = select i1 %12, i8 %13, i8 %10, !dbg !14668
  store i8 %14, i8* @pmu_set_vcore_voltage_mt6385.origin_voltage, align 1, !dbg !14668
  store i8 %14, i8* @pmu_set_vcore_voltage_mt6385.old_vcore, align 1, !dbg !14669
  store i1 true, i1* @pmu_set_vcore_voltage_mt6385.init, align 1, !dbg !14670
  br label %15, !dbg !14671

15:                                               ; preds = %4, %2
  %16 = add i8 %1, -7, !dbg !14672
  %17 = icmp ult i8 %16, -5, !dbg !14672
  br i1 %17, label %63, label %18, !dbg !14672

18:                                               ; preds = %15
  %19 = zext i8 %1 to i32, !dbg !14674
  %20 = icmp eq i8 %0, 1, !dbg !14675
  %21 = getelementptr inbounds [7 x i8], [7 x i8]* @pmu_set_vcore_voltage_mt6385.Vcore_Resource_Ctrl, i32 0, i32 %19, !dbg !14677
  %22 = load i8, i8* %21, align 1, !dbg !14677
  br i1 %20, label %25, label %23, !dbg !14678

23:                                               ; preds = %18
  %24 = icmp eq i8 %22, 0, !dbg !14679
  br i1 %24, label %28, label %25, !dbg !14682

25:                                               ; preds = %23, %18
  %26 = phi i8 [ 1, %18 ], [ -1, %23 ]
  %27 = add i8 %22, %26, !dbg !14677
  store i8 %27, i8* %21, align 1, !dbg !14677
  br label %28, !dbg !14683

28:                                               ; preds = %25, %23
  br label %29, !dbg !14683

29:                                               ; preds = %28, %34
  %30 = phi i32 [ %35, %34 ], [ 6, %28 ]
  call void @llvm.dbg.value(metadata i32 %30, metadata !2606, metadata !DIExpression()), !dbg !14655
  %31 = getelementptr inbounds [7 x i8], [7 x i8]* @pmu_set_vcore_voltage_mt6385.Vcore_Resource_Ctrl, i32 0, i32 %30, !dbg !14685
  %32 = load i8, i8* %31, align 1, !dbg !14685
  %33 = icmp eq i8 %32, 0, !dbg !14689
  br i1 %33, label %34, label %37, !dbg !14690

34:                                               ; preds = %29
  %35 = add nsw i32 %30, -1, !dbg !14691
  call void @llvm.dbg.value(metadata i32 %35, metadata !2606, metadata !DIExpression()), !dbg !14655
  %36 = icmp eq i32 %30, 0, !dbg !14692
  br i1 %36, label %39, label %29, !dbg !14683, !llvm.loop !14693

37:                                               ; preds = %29
  %38 = icmp slt i32 %30, 0, !dbg !14695
  br i1 %38, label %39, label %42, !dbg !14697

39:                                               ; preds = %34, %37
  %40 = load i8, i8* @pmu_set_vcore_voltage_mt6385.origin_voltage, align 1, !dbg !14697
  %41 = zext i8 %40 to i32, !dbg !14697
  br label %42, !dbg !14697

42:                                               ; preds = %37, %39
  %43 = phi i32 [ %41, %39 ], [ %30, %37 ]
  call void @llvm.dbg.value(metadata i32 %43, metadata !2606, metadata !DIExpression()), !dbg !14655
  %44 = load i8, i8* @pmu_set_vcore_voltage_mt6385.old_vcore, align 1, !dbg !14698
  %45 = zext i8 %44 to i32, !dbg !14698
  %46 = icmp eq i32 %43, %45, !dbg !14700
  %47 = trunc i32 %43 to i8, !dbg !14655
  br i1 %46, label %63, label %48, !dbg !14701

48:                                               ; preds = %42
  store i8 %47, i8* @pmu_set_vcore_voltage_mt6385.old_vcore, align 1, !dbg !14702
  %49 = icmp eq i32 %43, 6, !dbg !14704
  br i1 %49, label %50, label %54, !dbg !14706

50:                                               ; preds = %48
  %51 = load volatile i32, i32* inttoptr (i32 -1576271820 to i32*), align 4, !dbg !14707
  %52 = icmp eq i32 %51, 0, !dbg !14710
  br i1 %52, label %53, label %63, !dbg !14711

53:                                               ; preds = %50
  tail call void @PSI_LP_RUN_AT_HP(i32 noundef 1) #21, !dbg !14712
  br label %63, !dbg !14714

54:                                               ; preds = %48
  %55 = load i8, i8* @pmu_set_vcore_voltage_mt6385.old_vcore_lp, align 1, !dbg !14715
  %56 = zext i8 %55 to i32, !dbg !14715
  %57 = icmp eq i32 %43, %56, !dbg !14718
  br i1 %57, label %59, label %58, !dbg !14719

58:                                               ; preds = %54
  store i8 %47, i8* @pmu_set_vcore_voltage_mt6385.old_vcore_lp, align 1, !dbg !14720
  tail call void @PMIC_VCORE_VOSEL_CONFIG(i32 noundef 2, i32 noundef %43) #20, !dbg !14722
  br label %59, !dbg !14723

59:                                               ; preds = %58, %54
  %60 = load volatile i32, i32* inttoptr (i32 -1576271820 to i32*), align 4, !dbg !14724
  %61 = icmp eq i32 %60, 1, !dbg !14726
  br i1 %61, label %62, label %63, !dbg !14727

62:                                               ; preds = %59
  tail call void @PSI_HP_RUN_AT_LP(i32 noundef 1) #21, !dbg !14728
  br label %63, !dbg !14730

63:                                               ; preds = %42, %59, %62, %50, %53, %15
  %64 = phi i8 [ -1, %15 ], [ 6, %53 ], [ 6, %50 ], [ %47, %62 ], [ %47, %59 ], [ %47, %42 ], !dbg !14655
  ret i8 %64, !dbg !14731
}

; Function Attrs: optsize
declare dso_local void @PSI_LP_RUN_AT_HP(i32 noundef) local_unnamed_addr #3

; Function Attrs: optsize
declare dso_local void @PSI_HP_RUN_AT_LP(i32 noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i8 @pmu_get_vcore_voltage_mt6385() local_unnamed_addr #0 !dbg !14732 {
  %1 = tail call zeroext i8 @pmu_get_register_value(i16 noundef zeroext 65, i16 noundef zeroext 3, i16 noundef zeroext 6) #21, !dbg !14736
  call void @llvm.dbg.value(metadata i8 %1, metadata !14734, metadata !DIExpression()), !dbg !14737
  %2 = icmp eq i8 %1, 3, !dbg !14738
  %3 = select i1 %2, i16 319, i16 318
  %4 = tail call zeroext i8 @pmu_get_register_value(i16 noundef zeroext %3, i16 noundef zeroext 15, i16 noundef zeroext 4) #21, !dbg !14740
  %5 = tail call i32 @pmu_get_vcore_setting_index(i8 noundef zeroext %4) #20, !dbg !14740
  %6 = trunc i32 %5 to i8, !dbg !14740
  call void @llvm.dbg.value(metadata i8 %6, metadata !14735, metadata !DIExpression()), !dbg !14737
  ret i8 %6, !dbg !14741
}

; Function Attrs: noinline nounwind optsize
define dso_local void @pmu_set_vcore_s1_buck_mt6385() local_unnamed_addr #0 !dbg !2618 {
  call void @llvm.dbg.declare(metadata [7 x i32]* @__const.pmu_set_vcore_s1_buck_mt6385.vcbuck_voval, metadata !2620, metadata !DIExpression()), !dbg !14742
  %1 = tail call zeroext i8 @pmu_get_vcore_voltage() #21, !dbg !14743
  %2 = zext i8 %1 to i32, !dbg !14744
  %3 = load i32, i32* @pmu_set_vcore_s1_buck_mt6385.S1_setting, align 4, !dbg !14745
  %4 = icmp eq i32 %3, %2, !dbg !14747
  br i1 %4, label %11, label %5, !dbg !14748

5:                                                ; preds = %0
  store i32 %2, i32* @pmu_set_vcore_s1_buck_mt6385.S1_setting, align 4, !dbg !14749
  tail call void @pmu_set_vrc_key_mt6385(i32 noundef 0) #20, !dbg !14751
  tail call void @pmu_set_ovr_mode_mt6385(i32 noundef 1) #20, !dbg !14752
  %6 = load i32, i32* @pmu_set_vcore_s1_buck_mt6385.S1_setting, align 4, !dbg !14753
  %7 = getelementptr inbounds [7 x i32], [7 x i32]* @__const.pmu_set_vcore_s1_buck_mt6385.vcbuck_voval, i32 0, i32 %6, !dbg !14754
  %8 = load i32, i32* %7, align 4, !dbg !14754
  %9 = trunc i32 %8 to i16, !dbg !14754
  %10 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 320, i16 noundef zeroext 15, i16 noundef zeroext 4, i16 noundef zeroext %9) #21, !dbg !14755
  tail call void @pmu_set_ovr_mode_mt6385(i32 noundef 0) #20, !dbg !14756
  tail call void @pmu_set_vrc_key_mt6385(i32 noundef 1) #20, !dbg !14757
  br label %11, !dbg !14758

11:                                               ; preds = %5, %0
  ret void, !dbg !14759
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i8 @pmu_get_usb_input_status_mt6385() local_unnamed_addr #0 !dbg !14760 {
  %1 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 62, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 252) #21, !dbg !14763
  %2 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 63, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 218) #21, !dbg !14764
  %3 = tail call zeroext i8 @pmu_get_register_value(i16 noundef zeroext 135, i16 noundef zeroext 1, i16 noundef zeroext 5) #21, !dbg !14765
  call void @llvm.dbg.value(metadata i8 %3, metadata !14762, metadata !DIExpression()), !dbg !14766
  %4 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 62, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 0) #21, !dbg !14767
  %5 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 63, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 0) #21, !dbg !14768
  ret i8 %3, !dbg !14769
}

; Function Attrs: noinline nounwind optsize
define dso_local void @pmu_enter_power_off_mt6385() local_unnamed_addr #0 !dbg !14770 {
  %1 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 75, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext 0) #21, !dbg !14771
  ret void, !dbg !14772
}

; Function Attrs: noinline nounwind optsize
define dso_local void @pmu_reset_mt6385() local_unnamed_addr #0 !dbg !14773 {
  %1 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 62, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 252) #21, !dbg !14774
  %2 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 63, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 218) #21, !dbg !14775
  %3 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 75, i16 noundef zeroext 1, i16 noundef zeroext 5, i16 noundef zeroext 1) #21, !dbg !14776
  %4 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 62, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 0) #21, !dbg !14777
  %5 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 63, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 0) #21, !dbg !14778
  ret void, !dbg !14779
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @__EMI_GetSR(i32 noundef %0) local_unnamed_addr #10 section ".tcm_code" !dbg !14780 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14782, metadata !DIExpression()), !dbg !14784
  %2 = shl i32 %0, 20, !dbg !14785
  %3 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !14786
  %4 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %3, i32 0, i32 33, !dbg !14787
  store volatile i32 %2, i32* %4, align 4, !dbg !14788
  %5 = load volatile i32, i32* %4, align 4, !dbg !14789
  %6 = or i32 %5, 65536, !dbg !14790
  store volatile i32 %6, i32* %4, align 4, !dbg !14791
  br label %7, !dbg !14792

7:                                                ; preds = %7, %1
  %8 = load volatile i32, i32* %4, align 4, !dbg !14793
  %9 = and i32 %8, 1, !dbg !14794
  %10 = icmp eq i32 %9, 0, !dbg !14795
  br i1 %10, label %7, label %11, !dbg !14792, !llvm.loop !14796

11:                                               ; preds = %7
  %12 = load volatile i32, i32* %4, align 4, !dbg !14798
  %13 = lshr i32 %12, 8, !dbg !14799
  %14 = and i32 %13, 255, !dbg !14799
  call void @llvm.dbg.value(metadata i32 %14, metadata !14783, metadata !DIExpression()), !dbg !14784
  ret i32 %14, !dbg !14800
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @__EMI_SetSR(i32 noundef %0, i32 noundef %1) local_unnamed_addr #10 section ".tcm_code" !dbg !14801 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14803, metadata !DIExpression()), !dbg !14805
  call void @llvm.dbg.value(metadata i32 %1, metadata !14804, metadata !DIExpression()), !dbg !14805
  call void @llvm.dbg.value(metadata i32 %1, metadata !14804, metadata !DIExpression(DW_OP_constu, 255, DW_OP_and, DW_OP_stack_value)), !dbg !14805
  %3 = shl i32 %1, 24, !dbg !14806
  %4 = shl i32 %0, 20, !dbg !14807
  %5 = or i32 %4, %3, !dbg !14808
  %6 = or i32 %5, 131072, !dbg !14808
  %7 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !14809
  %8 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %7, i32 0, i32 33, !dbg !14810
  store volatile i32 %6, i32* %8, align 4, !dbg !14811
  %9 = load volatile i32, i32* %8, align 4, !dbg !14812
  %10 = or i32 %9, 65536, !dbg !14813
  store volatile i32 %10, i32* %8, align 4, !dbg !14814
  br label %11, !dbg !14815

11:                                               ; preds = %11, %2
  %12 = load volatile i32, i32* %8, align 4, !dbg !14816
  %13 = and i32 %12, 1, !dbg !14817
  %14 = icmp eq i32 %13, 0, !dbg !14818
  br i1 %14, label %11, label %15, !dbg !14815, !llvm.loop !14819

15:                                               ; preds = %11
  ret void, !dbg !14821
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @__EMI_SetRegValfromCMCP() local_unnamed_addr #5 section ".tcm_code" !dbg !14822 {
  %1 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 0), align 4, !dbg !14823
  store i32 %1, i32* @EMI_GENA_VAL, align 4, !dbg !14824
  %2 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 1), align 4, !dbg !14825
  store i32 %2, i32* @EMI_RDCT_VAL, align 4, !dbg !14826
  %3 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 2), align 4, !dbg !14827
  store i32 %3, i32* @EMI_DSRAM_VAL, align 4, !dbg !14828
  %4 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 3), align 4, !dbg !14829
  store i32 %4, i32* @EMI_MSRAM_VAL, align 4, !dbg !14830
  %5 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 4), align 4, !dbg !14831
  store i32 %5, i32* @EMI_IDL_C_VAL, align 4, !dbg !14832
  %6 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 5), align 4, !dbg !14833
  store i32 %6, i32* @EMI_IDL_D_VAL, align 4, !dbg !14834
  %7 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 6), align 4, !dbg !14835
  store i32 %7, i32* @EMI_IDL_E_VAL, align 4, !dbg !14836
  %8 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 7), align 4, !dbg !14837
  store i32 %8, i32* @EMI_ODL_C_VAL, align 4, !dbg !14838
  %9 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 8), align 4, !dbg !14839
  store i32 %9, i32* @EMI_ODL_D_VAL, align 4, !dbg !14840
  %10 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 9), align 4, !dbg !14841
  store i32 %10, i32* @EMI_ODL_E_VAL, align 4, !dbg !14842
  %11 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 10), align 4, !dbg !14843
  store i32 %11, i32* @EMI_ODL_F_VAL, align 4, !dbg !14844
  %12 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 11), align 4, !dbg !14845
  store i32 %12, i32* @EMI_IO_A_VAL, align 4, !dbg !14846
  %13 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 12), align 4, !dbg !14847
  store i32 %13, i32* @EMI_IO_B_VAL, align 4, !dbg !14848
  ret void, !dbg !14849
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @__EMI_EnableBandwidthLimiter() local_unnamed_addr #10 section ".tcm_code" !dbg !14850 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !14851
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 35, !dbg !14852
  store volatile i32 21553, i32* %2, align 4, !dbg !14853
  %3 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 37, !dbg !14854
  store volatile i32 20489, i32* %3, align 4, !dbg !14855
  %4 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 39, !dbg !14856
  store volatile i32 20550, i32* %4, align 4, !dbg !14857
  ret i32 0, !dbg !14858
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @TestCase_MBIST() local_unnamed_addr #10 section ".tcm_code" !dbg !14859 {
  call void @llvm.dbg.declare(metadata [2 x i32]* @__const.TestCase_MBIST.mbist_data, metadata !14863, metadata !DIExpression()), !dbg !14867
  call void @llvm.dbg.value(metadata i32 0, metadata !14861, metadata !DIExpression()), !dbg !14868
  call void @llvm.dbg.value(metadata i32 16384, metadata !14862, metadata !DIExpression()), !dbg !14868
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !14869
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 65, !dbg !14870
  store volatile i32 0, i32* %2, align 4, !dbg !14871
  call void @llvm.dbg.value(metadata i32 0, metadata !14865, metadata !DIExpression()), !dbg !14868
  %3 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 67
  %4 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 71
  call void @llvm.dbg.value(metadata i32 0, metadata !14865, metadata !DIExpression()), !dbg !14868
  br label %5, !dbg !14872

5:                                                ; preds = %0, %34
  %6 = phi i32 [ 0, %0 ], [ %35, %34 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !14865, metadata !DIExpression()), !dbg !14868
  %7 = shl i32 %6, 12
  call void @llvm.dbg.value(metadata i32 0, metadata !14864, metadata !DIExpression()), !dbg !14868
  br label %8, !dbg !14874

8:                                                ; preds = %5, %31
  %9 = phi i32 [ 0, %5 ], [ %32, %31 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !14864, metadata !DIExpression()), !dbg !14868
  call void @llvm.dbg.value(metadata i32 0, metadata !14866, metadata !DIExpression()), !dbg !14868
  %10 = getelementptr inbounds [2 x i32], [2 x i32]* @__const.TestCase_MBIST.mbist_data, i32 0, i32 %9
  br label %13, !dbg !14878

11:                                               ; preds = %26
  call void @llvm.dbg.value(metadata i32 undef, metadata !14866, metadata !DIExpression()), !dbg !14868
  %12 = icmp eq i32 %30, 2, !dbg !14882
  br i1 %12, label %31, label %13, !dbg !14878, !llvm.loop !14884

13:                                               ; preds = %8, %11
  %14 = phi i32 [ 0, %8 ], [ %30, %11 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !14866, metadata !DIExpression()), !dbg !14868
  store volatile i32 0, i32* %2, align 4, !dbg !14886
  store volatile i32 63, i32* %3, align 4, !dbg !14888
  %15 = load i32, i32* %10, align 4, !dbg !14889
  %16 = shl i32 %15, 16, !dbg !14890
  %17 = shl nuw nsw i32 %14, 13, !dbg !14891
  %18 = or i32 %17, %7, !dbg !14892
  %19 = or i32 %18, %16, !dbg !14893
  store volatile i32 %19, i32* %2, align 4, !dbg !14894
  %20 = load volatile i32, i32* %2, align 4, !dbg !14895
  %21 = or i32 %20, 805, !dbg !14895
  store volatile i32 %21, i32* %2, align 4, !dbg !14895
  br label %22, !dbg !14896

22:                                               ; preds = %22, %13
  %23 = load volatile i32, i32* %4, align 4, !dbg !14897
  %24 = and i32 %23, 2, !dbg !14898
  %25 = icmp eq i32 %24, 0, !dbg !14899
  br i1 %25, label %22, label %26, !dbg !14896, !llvm.loop !14900

26:                                               ; preds = %22
  %27 = load volatile i32, i32* %4, align 4, !dbg !14902
  %28 = and i32 %27, 1, !dbg !14904
  %29 = icmp eq i32 %28, 0, !dbg !14905
  %30 = add nuw nsw i32 %14, 1, !dbg !14906
  call void @llvm.dbg.value(metadata i32 %30, metadata !14866, metadata !DIExpression()), !dbg !14868
  br i1 %29, label %11, label %37, !dbg !14907

31:                                               ; preds = %11
  %32 = add nuw nsw i32 %9, 1, !dbg !14908
  call void @llvm.dbg.value(metadata i32 %32, metadata !14864, metadata !DIExpression()), !dbg !14868
  %33 = icmp eq i32 %32, 2, !dbg !14909
  br i1 %33, label %34, label %8, !dbg !14874, !llvm.loop !14910

34:                                               ; preds = %31
  %35 = add nuw nsw i32 %6, 1, !dbg !14912
  call void @llvm.dbg.value(metadata i32 %35, metadata !14865, metadata !DIExpression()), !dbg !14868
  %36 = icmp eq i32 %35, 2, !dbg !14913
  br i1 %36, label %37, label %5, !dbg !14872, !llvm.loop !14914

37:                                               ; preds = %34, %26
  %38 = phi i32 [ -1, %26 ], [ 0, %34 ], !dbg !14868
  store volatile i32 0, i32* %2, align 4, !dbg !14868
  ret i32 %38, !dbg !14916
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @__EMI_DataAutoTrackingMbistTest() local_unnamed_addr #10 section ".tcm_code" !dbg !14917 {
  %1 = tail call i32 @TestCase_MBIST() #20, !dbg !14918
  %2 = icmp ne i32 %1, 0, !dbg !14920
  %3 = sext i1 %2 to i32, !dbg !14921
  ret i32 %3, !dbg !14922
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @__EMI_EnableDataAutoTracking() local_unnamed_addr #10 section ".tcm_code" !dbg !14923 {
  call void @llvm.dbg.value(metadata i32 31, metadata !14925, metadata !DIExpression()), !dbg !14927
  call void @llvm.dbg.value(metadata i32 0, metadata !14926, metadata !DIExpression()), !dbg !14927
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !14928
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 7, !dbg !14929
  store volatile i32 0, i32* %2, align 4, !dbg !14930
  %3 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 9, !dbg !14931
  store volatile i32 0, i32* %3, align 4, !dbg !14932
  %4 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 11, !dbg !14933
  store volatile i32 0, i32* %4, align 4, !dbg !14934
  %5 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 13, !dbg !14935
  store volatile i32 0, i32* %5, align 4, !dbg !14936
  call void @llvm.dbg.value(metadata i32 31, metadata !14925, metadata !DIExpression()), !dbg !14927
  %6 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 9, !dbg !14937
  store volatile i32 522133279, i32* %6, align 4, !dbg !14941
  %7 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 11, !dbg !14942
  store volatile i32 522133279, i32* %7, align 4, !dbg !14943
  %8 = tail call i32 @__EMI_DataAutoTrackingMbistTest() #20, !dbg !14944
  %9 = icmp eq i32 %8, 0, !dbg !14946
  call void @llvm.dbg.value(metadata i32 31, metadata !14925, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !14927
  br i1 %9, label %36, label %10, !dbg !14947

10:                                               ; preds = %0, %13
  %11 = phi i32 [ %14, %13 ], [ 31, %0 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !14925, metadata !DIExpression()), !dbg !14927
  call void @llvm.dbg.value(metadata i32 %11, metadata !14925, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !14927
  call void @llvm.dbg.value(metadata i32 %11, metadata !14925, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !14927
  %12 = icmp eq i32 %11, 0, !dbg !14948
  br i1 %12, label %26, label %13, !dbg !14949, !llvm.loop !14950

13:                                               ; preds = %10
  %14 = add nsw i32 %11, -1, !dbg !14952
  call void @llvm.dbg.value(metadata i32 %14, metadata !14925, metadata !DIExpression()), !dbg !14927
  %15 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !14953
  %16 = shl i32 %14, 24, !dbg !14954
  %17 = shl i32 %14, 16, !dbg !14955
  %18 = shl i32 %14, 8, !dbg !14956
  %19 = or i32 %17, %14, !dbg !14957
  %20 = or i32 %19, %16, !dbg !14958
  %21 = or i32 %20, %18, !dbg !14959
  %22 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %15, i32 0, i32 9, !dbg !14937
  store volatile i32 %21, i32* %22, align 4, !dbg !14941
  %23 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %15, i32 0, i32 11, !dbg !14942
  store volatile i32 %21, i32* %23, align 4, !dbg !14943
  %24 = tail call i32 @__EMI_DataAutoTrackingMbistTest() #20, !dbg !14944
  %25 = icmp eq i32 %24, 0, !dbg !14946
  call void @llvm.dbg.value(metadata i32 %14, metadata !14925, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !14927
  br i1 %25, label %36, label %10, !dbg !14947

26:                                               ; preds = %10, %26
  %27 = phi i32 [ %33, %26 ], [ 1, %10 ]
  call void @llvm.dbg.value(metadata i32 %27, metadata !14926, metadata !DIExpression()), !dbg !14927
  %28 = shl nuw nsw i32 %27, 16, !dbg !14960
  %29 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !14966
  %30 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %29, i32 0, i32 13, !dbg !14967
  store volatile i32 %28, i32* %30, align 4, !dbg !14968
  %31 = tail call i32 @__EMI_DataAutoTrackingMbistTest() #20, !dbg !14969
  %32 = icmp eq i32 %31, 0, !dbg !14971
  call void @llvm.dbg.value(metadata i32 %27, metadata !14926, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !14927
  %33 = add nuw nsw i32 %27, 1
  %34 = icmp eq i32 %33, 32
  %35 = select i1 %32, i1 true, i1 %34, !dbg !14972
  call void @llvm.dbg.value(metadata i32 %33, metadata !14926, metadata !DIExpression()), !dbg !14927
  call void @llvm.dbg.value(metadata i32 %27, metadata !14926, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !14927
  br i1 %35, label %36, label %26, !dbg !14972, !llvm.loop !14973

36:                                               ; preds = %13, %26, %0
  ret void, !dbg !14976
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @EMI_PowerOn_Init() local_unnamed_addr #10 section ".tcm_code" !dbg !14977 {
  store volatile i32 0, i32* inttoptr (i32 -1575944184 to i32*), align 8, !dbg !14978
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !14979
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 27, !dbg !14980
  store volatile i32 1, i32* %2, align 4, !dbg !14981
  br label %3, !dbg !14982

3:                                                ; preds = %3, %0
  %4 = load volatile i32, i32* %2, align 4, !dbg !14983
  %5 = and i32 %4, 2, !dbg !14984
  %6 = icmp eq i32 %5, 0, !dbg !14984
  br i1 %6, label %3, label %7, !dbg !14982, !llvm.loop !14985

7:                                                ; preds = %3
  store volatile i32 0, i32* %2, align 4, !dbg !14987
  br label %8, !dbg !14988

8:                                                ; preds = %8, %7
  %9 = load volatile i32, i32* %2, align 4, !dbg !14989
  %10 = and i32 %9, 2, !dbg !14990
  %11 = icmp eq i32 %10, 0, !dbg !14990
  br i1 %11, label %12, label %8, !dbg !14988, !llvm.loop !14991

12:                                               ; preds = %8
  store volatile i32 1515870810, i32* null, align 2147483648, !dbg !14993
  store volatile i32 1515870810, i32* inttoptr (i32 4 to i32*), align 4, !dbg !14994
  %13 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4
  %14 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %13, i32 0, i32 33
  br label %15, !dbg !14995

15:                                               ; preds = %15, %12
  %16 = load volatile i32, i32* %14, align 4, !dbg !14996
  %17 = and i32 %16, 1, !dbg !14997
  %18 = icmp eq i32 %17, 0, !dbg !14998
  br i1 %18, label %15, label %19, !dbg !14995, !llvm.loop !14999

19:                                               ; preds = %15
  tail call void @__EMI_SetSR(i32 noundef 0, i32 noundef 15) #20, !dbg !15001
  tail call void @__EMI_SetSR(i32 noundef 4, i32 noundef 8) #20, !dbg !15002
  %20 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4
  %21 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %20, i32 0, i32 33
  br label %22, !dbg !15003

22:                                               ; preds = %22, %19
  %23 = load volatile i32, i32* %21, align 4, !dbg !15004
  %24 = and i32 %23, 1, !dbg !15005
  %25 = icmp eq i32 %24, 0, !dbg !15006
  br i1 %25, label %22, label %26, !dbg !15003, !llvm.loop !15007

26:                                               ; preds = %22
  %27 = load volatile i32, i32* inttoptr (i32 -1577058296 to i32*), align 8, !dbg !15009
  %28 = icmp eq i32 %27, 9507, !dbg !15011
  br i1 %28, label %29, label %37, !dbg !15012

29:                                               ; preds = %26
  %30 = load volatile i32, i32* inttoptr (i32 -1576664700 to i32*), align 4, !dbg !15013
  %31 = and i32 %30, 15, !dbg !15016
  %32 = icmp eq i32 %31, 2, !dbg !15017
  %33 = load volatile i32, i32* inttoptr (i32 -1602224060 to i32*), align 4, !dbg !15018
  %34 = and i32 %33, -128, !dbg !15018
  %35 = select i1 %32, i32 1, i32 7
  %36 = or i32 %34, %35, !dbg !15018
  store volatile i32 %36, i32* inttoptr (i32 -1602224060 to i32*), align 4, !dbg !15018
  br label %37, !dbg !15019

37:                                               ; preds = %29, %26
  ret void, !dbg !15019
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local signext i8 @custom_setEMI() local_unnamed_addr #10 section ".tcm_code" !dbg !15020 {
  tail call void @EMI_PowerOn_Init() #20, !dbg !15023
  tail call void @__EMI_SetRegValfromCMCP() #20, !dbg !15024
  %1 = tail call i32 @__EMI_GetSR(i32 noundef 0) #20, !dbg !15025
  store i32 %1, i32* @__EMI_CurSR0, align 4, !dbg !15026
  %2 = tail call i32 @__EMI_GetSR(i32 noundef 1) #20, !dbg !15027
  store i32 %2, i32* @__EMI_CurSR1, align 4, !dbg !15028
  %3 = tail call i32 @__EMI_GetSR(i32 noundef 2) #20, !dbg !15029
  store i32 %3, i32* @__EMI_CurSR2, align 4, !dbg !15030
  ret i8 0, !dbg !15031
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local signext i8 @custom_setAdvEMI() local_unnamed_addr #10 section ".tcm_code" !dbg !15032 {
  %1 = load i32, i32* @EMI_IO_A_VAL, align 4, !dbg !15033
  %2 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !15034
  %3 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 23, !dbg !15035
  store volatile i32 %1, i32* %3, align 4, !dbg !15036
  %4 = load i32, i32* @EMI_IO_B_VAL, align 4, !dbg !15037
  %5 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 25, !dbg !15038
  store volatile i32 %4, i32* %5, align 4, !dbg !15039
  %6 = load i32, i32* @EMI_GENA_VAL, align 4, !dbg !15040
  %7 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 3, !dbg !15041
  store volatile i32 %6, i32* %7, align 4, !dbg !15042
  %8 = load i32, i32* @EMI_RDCT_VAL, align 4, !dbg !15043
  %9 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 5, !dbg !15044
  store volatile i32 %8, i32* %9, align 4, !dbg !15045
  %10 = load i32, i32* @EMI_DSRAM_VAL, align 4, !dbg !15046
  %11 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 29, !dbg !15047
  store volatile i32 %10, i32* %11, align 4, !dbg !15048
  %12 = load i32, i32* @EMI_MSRAM_VAL, align 4, !dbg !15049
  %13 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 31, !dbg !15050
  store volatile i32 %12, i32* %13, align 4, !dbg !15051
  %14 = load i32, i32* @EMI_IDL_C_VAL, align 4, !dbg !15052
  %15 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 9, !dbg !15053
  store volatile i32 %14, i32* %15, align 4, !dbg !15054
  %16 = load i32, i32* @EMI_IDL_D_VAL, align 4, !dbg !15055
  %17 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 11, !dbg !15056
  store volatile i32 %16, i32* %17, align 4, !dbg !15057
  %18 = load i32, i32* @EMI_IDL_E_VAL, align 4, !dbg !15058
  %19 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 13, !dbg !15059
  store volatile i32 %18, i32* %19, align 4, !dbg !15060
  %20 = load i32, i32* @EMI_ODL_C_VAL, align 4, !dbg !15061
  %21 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 15, !dbg !15062
  store volatile i32 %20, i32* %21, align 4, !dbg !15063
  %22 = load i32, i32* @EMI_ODL_D_VAL, align 4, !dbg !15064
  %23 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 17, !dbg !15065
  store volatile i32 %22, i32* %23, align 4, !dbg !15066
  %24 = load i32, i32* @EMI_ODL_E_VAL, align 4, !dbg !15067
  %25 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 19, !dbg !15068
  store volatile i32 %24, i32* %25, align 4, !dbg !15069
  %26 = load i32, i32* @EMI_ODL_F_VAL, align 4, !dbg !15070
  %27 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 21, !dbg !15071
  store volatile i32 %26, i32* %27, align 4, !dbg !15072
  tail call void @__EMI_EnableDataAutoTracking() #20, !dbg !15073
  %28 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !15074
  %29 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %28, i32 0, i32 7, !dbg !15075
  store volatile i32 806289408, i32* %29, align 4, !dbg !15076
  br label %30, !dbg !15077

30:                                               ; preds = %30, %0
  %31 = load volatile i32, i32* %29, align 4, !dbg !15078
  %32 = and i32 %31, 128, !dbg !15079
  %33 = icmp eq i32 %32, 0, !dbg !15079
  br i1 %33, label %30, label %34, !dbg !15077, !llvm.loop !15080

34:                                               ; preds = %30
  store volatile i32 1880031232, i32* %29, align 4, !dbg !15082
  br label %35, !dbg !15083

35:                                               ; preds = %35, %34
  %36 = load volatile i32, i32* %29, align 4, !dbg !15084
  %37 = and i32 %36, 128, !dbg !15085
  %38 = icmp eq i32 %37, 0, !dbg !15085
  br i1 %38, label %39, label %35, !dbg !15083, !llvm.loop !15086

39:                                               ; preds = %35
  store volatile i32 269418496, i32* %29, align 4, !dbg !15088
  %40 = tail call i32 @__EMI_EnableBandwidthLimiter() #20, !dbg !15089
  ret i8 0, !dbg !15090
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @EMI_Setting_Save() local_unnamed_addr #10 section ".tcm_code" !dbg !15091 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !15092
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 1, !dbg !15093
  %3 = load volatile i32, i32* %2, align 4, !dbg !15093
  store volatile i32 %3, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 1), align 4, !dbg !15094
  %4 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 3, !dbg !15095
  %5 = load volatile i32, i32* %4, align 4, !dbg !15095
  store volatile i32 %5, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 3), align 4, !dbg !15096
  %6 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 5, !dbg !15097
  %7 = load volatile i32, i32* %6, align 4, !dbg !15097
  store volatile i32 %7, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 5), align 4, !dbg !15098
  %8 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 9, !dbg !15099
  %9 = load volatile i32, i32* %8, align 4, !dbg !15099
  store volatile i32 %9, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 9), align 4, !dbg !15100
  %10 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 11, !dbg !15101
  %11 = load volatile i32, i32* %10, align 4, !dbg !15101
  store volatile i32 %11, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 11), align 4, !dbg !15102
  %12 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 13, !dbg !15103
  %13 = load volatile i32, i32* %12, align 4, !dbg !15103
  store volatile i32 %13, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 13), align 4, !dbg !15104
  %14 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 15, !dbg !15105
  %15 = load volatile i32, i32* %14, align 4, !dbg !15105
  store volatile i32 %15, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 15), align 4, !dbg !15106
  %16 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 17, !dbg !15107
  %17 = load volatile i32, i32* %16, align 4, !dbg !15107
  store volatile i32 %17, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 17), align 4, !dbg !15108
  %18 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 19, !dbg !15109
  %19 = load volatile i32, i32* %18, align 4, !dbg !15109
  store volatile i32 %19, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 19), align 4, !dbg !15110
  %20 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 21, !dbg !15111
  %21 = load volatile i32, i32* %20, align 4, !dbg !15111
  store volatile i32 %21, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 21), align 4, !dbg !15112
  %22 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 23, !dbg !15113
  %23 = load volatile i32, i32* %22, align 4, !dbg !15113
  store volatile i32 %23, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 23), align 4, !dbg !15114
  %24 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 25, !dbg !15115
  %25 = load volatile i32, i32* %24, align 4, !dbg !15115
  store volatile i32 %25, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 25), align 4, !dbg !15116
  %26 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 29, !dbg !15117
  %27 = load volatile i32, i32* %26, align 4, !dbg !15117
  store volatile i32 %27, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 29), align 4, !dbg !15118
  %28 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 31, !dbg !15119
  %29 = load volatile i32, i32* %28, align 4, !dbg !15119
  store volatile i32 %29, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 31), align 4, !dbg !15120
  %30 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 35, !dbg !15121
  %31 = load volatile i32, i32* %30, align 4, !dbg !15121
  store volatile i32 %31, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 35), align 4, !dbg !15122
  %32 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 37, !dbg !15123
  %33 = load volatile i32, i32* %32, align 4, !dbg !15123
  store volatile i32 %33, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 37), align 4, !dbg !15124
  %34 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 39, !dbg !15125
  %35 = load volatile i32, i32* %34, align 4, !dbg !15125
  store volatile i32 %35, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 39), align 4, !dbg !15126
  %36 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 41, !dbg !15127
  %37 = load volatile i32, i32* %36, align 4, !dbg !15127
  store volatile i32 %37, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 41), align 4, !dbg !15128
  %38 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 43, !dbg !15129
  %39 = load volatile i32, i32* %38, align 4, !dbg !15129
  store volatile i32 %39, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 43), align 4, !dbg !15130
  %40 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 45, !dbg !15131
  %41 = load volatile i32, i32* %40, align 4, !dbg !15131
  store volatile i32 %41, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 45), align 4, !dbg !15132
  ret void, !dbg !15133
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @EMI_Setting_restore() local_unnamed_addr #10 section ".tcm_code" !dbg !15134 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 1
  br label %3, !dbg !15135

3:                                                ; preds = %3, %0
  %4 = load volatile i32, i32* %2, align 4, !dbg !15136
  %5 = and i32 %4, 17, !dbg !15137
  %6 = icmp eq i32 %5, 17, !dbg !15138
  br i1 %6, label %7, label %3, !dbg !15135, !llvm.loop !15139

7:                                                ; preds = %3
  %8 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 45), align 4, !dbg !15141
  %9 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 45, !dbg !15142
  store volatile i32 %8, i32* %9, align 4, !dbg !15143
  %10 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 43), align 4, !dbg !15144
  %11 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 43, !dbg !15145
  store volatile i32 %10, i32* %11, align 4, !dbg !15146
  %12 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 41), align 4, !dbg !15147
  %13 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 41, !dbg !15148
  store volatile i32 %12, i32* %13, align 4, !dbg !15149
  %14 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 39), align 4, !dbg !15150
  %15 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 39, !dbg !15151
  store volatile i32 %14, i32* %15, align 4, !dbg !15152
  %16 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 37), align 4, !dbg !15153
  %17 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 37, !dbg !15154
  store volatile i32 %16, i32* %17, align 4, !dbg !15155
  %18 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 35), align 4, !dbg !15156
  %19 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 35, !dbg !15157
  store volatile i32 %18, i32* %19, align 4, !dbg !15158
  %20 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 31), align 4, !dbg !15159
  %21 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 31, !dbg !15160
  store volatile i32 %20, i32* %21, align 4, !dbg !15161
  %22 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 29), align 4, !dbg !15162
  %23 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 29, !dbg !15163
  store volatile i32 %22, i32* %23, align 4, !dbg !15164
  %24 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 25), align 4, !dbg !15165
  %25 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 25, !dbg !15166
  store volatile i32 %24, i32* %25, align 4, !dbg !15167
  %26 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 23), align 4, !dbg !15168
  %27 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 23, !dbg !15169
  store volatile i32 %26, i32* %27, align 4, !dbg !15170
  %28 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 21), align 4, !dbg !15171
  %29 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 21, !dbg !15172
  store volatile i32 %28, i32* %29, align 4, !dbg !15173
  %30 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 19), align 4, !dbg !15174
  %31 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 19, !dbg !15175
  store volatile i32 %30, i32* %31, align 4, !dbg !15176
  %32 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 17), align 4, !dbg !15177
  %33 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 17, !dbg !15178
  store volatile i32 %32, i32* %33, align 4, !dbg !15179
  %34 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 15), align 4, !dbg !15180
  %35 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 15, !dbg !15181
  store volatile i32 %34, i32* %35, align 4, !dbg !15182
  %36 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 13), align 4, !dbg !15183
  %37 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 13, !dbg !15184
  store volatile i32 %36, i32* %37, align 4, !dbg !15185
  %38 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 11), align 4, !dbg !15186
  %39 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 11, !dbg !15187
  store volatile i32 %38, i32* %39, align 4, !dbg !15188
  %40 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 9), align 4, !dbg !15189
  %41 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 9, !dbg !15190
  store volatile i32 %40, i32* %41, align 4, !dbg !15191
  %42 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 5), align 4, !dbg !15192
  %43 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 5, !dbg !15193
  store volatile i32 %42, i32* %43, align 4, !dbg !15194
  %44 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 3), align 4, !dbg !15195
  %45 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 3, !dbg !15196
  store volatile i32 %44, i32* %45, align 4, !dbg !15197
  ret void, !dbg !15198
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @mtk_psram_half_sleep_exit() local_unnamed_addr #10 section ".tcm_code" !dbg !15199 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !15200
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 25, !dbg !15201
  %3 = load volatile i32, i32* %2, align 4, !dbg !15201
  %4 = and i32 %3, -2097185, !dbg !15202
  store volatile i32 %4, i32* %2, align 4, !dbg !15203
  %5 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 27, !dbg !15204
  store volatile i32 1, i32* %5, align 4, !dbg !15205
  br label %6, !dbg !15206

6:                                                ; preds = %6, %0
  %7 = load volatile i32, i32* %5, align 4, !dbg !15207
  %8 = and i32 %7, 2, !dbg !15208
  %9 = icmp eq i32 %8, 0, !dbg !15208
  br i1 %9, label %6, label %10, !dbg !15206, !llvm.loop !15209

10:                                               ; preds = %6
  store volatile i32 0, i32* %5, align 4, !dbg !15211
  br label %11, !dbg !15212

11:                                               ; preds = %11, %10
  %12 = load volatile i32, i32* %5, align 4, !dbg !15213
  %13 = and i32 %12, 2, !dbg !15214
  %14 = icmp eq i32 %13, 0, !dbg !15214
  br i1 %14, label %15, label %11, !dbg !15212, !llvm.loop !15215

15:                                               ; preds = %11
  tail call void @EMI_Setting_restore() #20, !dbg !15217
  %16 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !15218
  %17 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %16, i32 0, i32 7, !dbg !15219
  store volatile i32 806289408, i32* %17, align 4, !dbg !15220
  br label %18, !dbg !15221

18:                                               ; preds = %18, %15
  %19 = load volatile i32, i32* %17, align 4, !dbg !15222
  %20 = and i32 %19, 128, !dbg !15223
  %21 = icmp eq i32 %20, 0, !dbg !15223
  br i1 %21, label %18, label %22, !dbg !15221, !llvm.loop !15224

22:                                               ; preds = %18
  store volatile i32 1880031232, i32* %17, align 4, !dbg !15226
  br label %23, !dbg !15227

23:                                               ; preds = %23, %22
  %24 = load volatile i32, i32* %17, align 4, !dbg !15228
  %25 = and i32 %24, 128, !dbg !15229
  %26 = icmp eq i32 %25, 0, !dbg !15229
  br i1 %26, label %27, label %23, !dbg !15227, !llvm.loop !15230

27:                                               ; preds = %23
  store volatile i32 269418496, i32* %17, align 4, !dbg !15232
  %28 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 1), align 4, !dbg !15233
  %29 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %16, i32 0, i32 1, !dbg !15234
  store volatile i32 %28, i32* %29, align 4, !dbg !15235
  ret void, !dbg !15236
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @mtk_psram_half_sleep_enter() local_unnamed_addr #10 section ".tcm_code" !dbg !15237 {
  tail call void @EMI_Setting_Save() #20, !dbg !15238
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 1
  br label %3, !dbg !15239

3:                                                ; preds = %3, %0
  %4 = load volatile i32, i32* %2, align 4, !dbg !15240
  %5 = and i32 %4, 17, !dbg !15241
  %6 = icmp eq i32 %5, 17, !dbg !15242
  br i1 %6, label %7, label %3, !dbg !15239, !llvm.loop !15243

7:                                                ; preds = %3
  %8 = load volatile i32, i32* %2, align 4, !dbg !15245
  %9 = or i32 %8, 1792, !dbg !15246
  store volatile i32 %9, i32* %2, align 4, !dbg !15247
  %10 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 33, !dbg !15248
  store volatile i32 -261685248, i32* %10, align 4, !dbg !15249
  br label %11, !dbg !15250

11:                                               ; preds = %11, %7
  %12 = load volatile i32, i32* %10, align 4, !dbg !15251
  %13 = and i32 %12, 1, !dbg !15252
  %14 = icmp eq i32 %13, 0, !dbg !15253
  br i1 %14, label %11, label %15, !dbg !15250, !llvm.loop !15254

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 7, !dbg !15256
  store volatile i32 0, i32* %16, align 4, !dbg !15257
  %17 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 27
  br label %18, !dbg !15258

18:                                               ; preds = %18, %15
  %19 = load volatile i32, i32* %17, align 4, !dbg !15259
  %20 = and i32 %19, 16, !dbg !15260
  %21 = icmp eq i32 %20, 0, !dbg !15260
  br i1 %21, label %18, label %22, !dbg !15258, !llvm.loop !15261

22:                                               ; preds = %18
  %23 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 25, !dbg !15263
  %24 = load volatile i32, i32* %23, align 4, !dbg !15263
  %25 = or i32 %24, 2097184, !dbg !15264
  store volatile i32 %25, i32* %23, align 4, !dbg !15265
  ret void, !dbg !15266
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @EMI_DynamicClockSwitch(i32 noundef %0) local_unnamed_addr #7 section ".tcm_code" !dbg !15267 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !15272, metadata !DIExpression()), !dbg !15274
  %3 = bitcast i32* %2 to i8*, !dbg !15275
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !15275
  call void @llvm.dbg.declare(metadata i32* %2, metadata !15273, metadata !DIExpression()), !dbg !15276
  switch i32 %0, label %24 [
    i32 0, label %4
    i32 1, label %25
  ], !dbg !15277

4:                                                ; preds = %1
  %5 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !15278
  %6 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %5, i32 0, i32 7, !dbg !15281
  store volatile i32 0, i32* %6, align 4, !dbg !15282
  store volatile i32 806289408, i32* %6, align 4, !dbg !15283
  br label %7, !dbg !15284

7:                                                ; preds = %7, %4
  %8 = load volatile i32, i32* %6, align 4, !dbg !15285
  %9 = and i32 %8, 128, !dbg !15286
  %10 = icmp eq i32 %9, 0, !dbg !15286
  br i1 %10, label %7, label %11, !dbg !15284, !llvm.loop !15287

11:                                               ; preds = %7
  store volatile i32 1880031232, i32* %6, align 4, !dbg !15289
  br label %12, !dbg !15290

12:                                               ; preds = %12, %11
  %13 = load volatile i32, i32* %6, align 4, !dbg !15291
  %14 = and i32 %13, 128, !dbg !15292
  %15 = icmp eq i32 %14, 0, !dbg !15292
  br i1 %15, label %16, label %12, !dbg !15290, !llvm.loop !15293

16:                                               ; preds = %12
  store volatile i32 269418496, i32* %6, align 4, !dbg !15295
  store volatile i32 0, i32* %2, align 4, !dbg !15296
  %17 = load volatile i32, i32* %2, align 4, !dbg !15298
  %18 = icmp ult i32 %17, 255, !dbg !15300
  br i1 %18, label %19, label %25, !dbg !15301

19:                                               ; preds = %16, %19
  %20 = load volatile i32, i32* %2, align 4, !dbg !15302
  %21 = add i32 %20, 1, !dbg !15302
  store volatile i32 %21, i32* %2, align 4, !dbg !15302
  %22 = load volatile i32, i32* %2, align 4, !dbg !15298
  %23 = icmp ult i32 %22, 255, !dbg !15300
  br i1 %23, label %19, label %25, !dbg !15301, !llvm.loop !15303

24:                                               ; preds = %1
  br label %25, !dbg !15305

25:                                               ; preds = %19, %16, %1, %24
  %26 = phi i32 [ -1, %24 ], [ 0, %1 ], [ 0, %16 ], [ 0, %19 ], !dbg !15274
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !15308
  ret i32 %26, !dbg !15308
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @emi_mask_master() local_unnamed_addr #10 section ".tcm_code" !dbg !15309 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !15310
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 1, !dbg !15311
  %3 = load volatile i32, i32* %2, align 4, !dbg !15311
  %4 = or i32 %3, 1792, !dbg !15312
  store volatile i32 %4, i32* %2, align 4, !dbg !15313
  ret void, !dbg !15314
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @emi_unmask_master() local_unnamed_addr #10 section ".tcm_code" !dbg !15315 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !15316
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 1, !dbg !15317
  %3 = load volatile i32, i32* %2, align 4, !dbg !15317
  %4 = and i32 %3, -1793, !dbg !15318
  store volatile i32 %4, i32* %2, align 4, !dbg !15319
  ret void, !dbg !15320
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i1 @is_clk_use_lfosc() local_unnamed_addr #8 section ".tcm_code" !dbg !15321 {
  ret i1 false, !dbg !15322
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i1 @is_clk_use_mpll() local_unnamed_addr #8 section ".tcm_code" !dbg !15323 {
  ret i1 false, !dbg !15324
}

; Function Attrs: noinline nounwind optsize
define dso_local void @cm_bus_clk_208m() local_unnamed_addr #0 section ".tcm_code" !dbg !15325 {
  tail call void @cm_bus_clk_208m_mpll_hfosc() #21, !dbg !15326
  ret void, !dbg !15329
}

; Function Attrs: optsize
declare dso_local void @cm_bus_clk_208m_mpll_hfosc() local_unnamed_addr #3 section ".tcm_code"

; Function Attrs: noinline nounwind optsize
define dso_local void @cm_bus_clk_104m() local_unnamed_addr #0 section ".tcm_code" !dbg !15330 {
  tail call void @cm_bus_clk_104m_hfosc_hfosc() #21, !dbg !15331
  ret void, !dbg !15334
}

; Function Attrs: optsize
declare dso_local void @cm_bus_clk_104m_hfosc_hfosc() local_unnamed_addr #3 section ".tcm_code"

; Function Attrs: noinline nounwind optsize
define dso_local void @cm_bus_clk_26m() local_unnamed_addr #0 section ".tcm_code" !dbg !15335 {
  tail call void @cm_bus_clk_26m_dcxo_dcxo() #21, !dbg !15336
  ret void, !dbg !15339
}

; Function Attrs: optsize
declare dso_local void @cm_bus_clk_26m_dcxo_dcxo() local_unnamed_addr #3 section ".tcm_code"

; Function Attrs: noinline nounwind optsize
define dso_local void @peri_clk_26m() local_unnamed_addr #0 section ".tcm_code" !dbg !15340 {
  tail call void @peri_26m_dcxo() #21, !dbg !15341
  ret void, !dbg !15344
}

; Function Attrs: optsize
declare dso_local void @peri_26m_dcxo() local_unnamed_addr #3 section ".tcm_code"

; Function Attrs: noinline nounwind optsize
define dso_local i32 @__io_putchar(i32 noundef returned %0) local_unnamed_addr #0 !dbg !15345 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15349, metadata !DIExpression()), !dbg !15350
  %2 = trunc i32 %0 to i8, !dbg !15351
  tail call void @hal_uart_put_char(i32 noundef 2, i8 noundef zeroext %2) #21, !dbg !15352
  ret i32 %0, !dbg !15353
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local i32 @main() local_unnamed_addr #19 !dbg !15354 {
  tail call fastcc void @SystemClock_Config() #20, !dbg !15355
  tail call void @SystemCoreClockUpdate() #21, !dbg !15356
  tail call fastcc void @prvSetupHardware() #20, !dbg !15357
  tail call void asm sideeffect "cpsie i", "~{memory}"() #22, !dbg !15358, !srcloc !15361
  tail call void asm sideeffect "cpsie f", "~{memory}"() #22, !dbg !15362, !srcloc !15365
  %1 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.252, i32 0, i32 0)) #21, !dbg !15366
  %2 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1.253, i32 0, i32 0)) #21, !dbg !15367
  %3 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.252, i32 0, i32 0)) #21, !dbg !15368
  tail call fastcc void @hal_powerkey_example() #20, !dbg !15369
  br label %4, !dbg !15370

4:                                                ; preds = %0, %4
  br label %4, !dbg !15370, !llvm.loop !15371
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @SystemClock_Config() unnamed_addr #0 !dbg !15373 {
  %1 = tail call i32 @hal_clock_init() #21, !dbg !15374
  ret void, !dbg !15375
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvSetupHardware() unnamed_addr #0 !dbg !15376 {
  tail call fastcc void @log_uart_init() #20, !dbg !15377
  %1 = tail call i32 @hal_flash_init() #21, !dbg !15378
  %2 = tail call i32 @hal_nvic_init() #21, !dbg !15379
  ret void, !dbg !15380
}

; Function Attrs: optsize
declare dso_local i32 @printf(i8* noundef, ...) local_unnamed_addr #3

; Function Attrs: noinline nounwind optsize
define internal fastcc void @hal_powerkey_example() unnamed_addr #0 !dbg !15381 {
  %1 = tail call zeroext i1 @keypad_custom_powerkey_init() #21, !dbg !15385
  call void @llvm.dbg.value(metadata i1 %1, metadata !15383, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15386
  br i1 %1, label %4, label %2, !dbg !15387

2:                                                ; preds = %0
  %3 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.254, i32 0, i32 0)) #21, !dbg !15388
  br label %9, !dbg !15391

4:                                                ; preds = %0
  %5 = tail call i32 @hal_keypad_powerkey_register_callback(void (i8*)* noundef bitcast (void ()* @keypad_user_powerkey_handler to void (i8*)*), i8* noundef null) #21, !dbg !15392
  call void @llvm.dbg.value(metadata i32 %5, metadata !15384, metadata !DIExpression()), !dbg !15386
  %6 = icmp eq i32 %5, 0, !dbg !15393
  br i1 %6, label %9, label %7, !dbg !15395

7:                                                ; preds = %4
  %8 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([73 x i8], [73 x i8]* @.str.3.255, i32 0, i32 0), i32 noundef %5) #21, !dbg !15396
  br label %9, !dbg !15398

9:                                                ; preds = %4, %7, %2
  ret void, !dbg !15399
}

; Function Attrs: noinline nounwind optsize
define internal void @keypad_user_powerkey_handler() #0 !dbg !15400 {
  %1 = alloca %struct.GPT_REGISTER_GLOABL_T, align 4
  %2 = bitcast %struct.GPT_REGISTER_GLOABL_T* %1 to i8*, !dbg !15412
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %2) #22, !dbg !15412
  call void @llvm.dbg.declare(metadata %struct.GPT_REGISTER_GLOABL_T* %1, metadata !15403, metadata !DIExpression()), !dbg !15413
  call void @llvm.dbg.declare(metadata [5 x i8*]* @__const.keypad_user_powerkey_handler.string, metadata !15410, metadata !DIExpression()), !dbg !15414
  %3 = call i32 @hal_keypad_powerkey_get_key(%struct.GPT_REGISTER_GLOABL_T* noundef nonnull %1) #21, !dbg !15415
  call void @llvm.dbg.value(metadata i32 %3, metadata !15402, metadata !DIExpression()), !dbg !15417
  %4 = icmp eq i32 %3, -2, !dbg !15418
  br i1 %4, label %8, label %5, !dbg !15420

5:                                                ; preds = %0
  %6 = getelementptr inbounds %struct.GPT_REGISTER_GLOABL_T, %struct.GPT_REGISTER_GLOABL_T* %1, i32 0, i32 1
  %7 = getelementptr inbounds %struct.GPT_REGISTER_GLOABL_T, %struct.GPT_REGISTER_GLOABL_T* %1, i32 0, i32 0
  br label %10, !dbg !15420

8:                                                ; preds = %10, %0
  %9 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.9.256, i32 0, i32 0)) #21, !dbg !15421
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %2) #22, !dbg !15423
  ret void, !dbg !15423

10:                                               ; preds = %5, %10
  %11 = load i32, i32* %6, align 4, !dbg !15424
  %12 = load i32, i32* %7, align 4, !dbg !15425
  %13 = getelementptr inbounds [5 x i8*], [5 x i8*]* @__const.keypad_user_powerkey_handler.string, i32 0, i32 %12, !dbg !15426
  %14 = load i8*, i8** %13, align 4, !dbg !15426
  %15 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.10.257, i32 0, i32 0), i32 noundef %11, i8* noundef %14) #21, !dbg !15427
  %16 = call i32 @hal_keypad_powerkey_get_key(%struct.GPT_REGISTER_GLOABL_T* noundef nonnull %1) #21, !dbg !15415
  call void @llvm.dbg.value(metadata i32 %16, metadata !15402, metadata !DIExpression()), !dbg !15417
  %17 = icmp eq i32 %16, -2, !dbg !15418
  br i1 %17, label %8, label %10, !dbg !15420, !llvm.loop !15428
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @log_uart_init() unnamed_addr #0 !dbg !15431 {
  %1 = alloca %struct.hal_uart_config_t, align 4
  %2 = bitcast %struct.hal_uart_config_t* %1 to i8*, !dbg !15441
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #22, !dbg !15441
  call void @llvm.dbg.declare(metadata %struct.hal_uart_config_t* %1, metadata !15433, metadata !DIExpression()), !dbg !15442
  %3 = tail call i32 @hal_gpio_init(i32 noundef 0) #21, !dbg !15443
  %4 = tail call i32 @hal_gpio_init(i32 noundef 1) #21, !dbg !15444
  %5 = tail call i32 @hal_pinmux_set_function(i32 noundef 0, i8 noundef zeroext 3) #21, !dbg !15445
  %6 = tail call i32 @hal_pinmux_set_function(i32 noundef 1, i8 noundef zeroext 3) #21, !dbg !15446
  %7 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 0, !dbg !15447
  store i32 9, i32* %7, align 4, !dbg !15448
  %8 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 1, !dbg !15449
  store i32 3, i32* %8, align 4, !dbg !15450
  %9 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 2, !dbg !15451
  store i32 0, i32* %9, align 4, !dbg !15452
  %10 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 3, !dbg !15453
  store i32 0, i32* %10, align 4, !dbg !15454
  %11 = call i32 @hal_uart_init(i32 noundef 2, %struct.hal_uart_config_t* noundef nonnull %1) #21, !dbg !15455
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #22, !dbg !15456
  ret void, !dbg !15456
}

; Function Attrs: optsize
declare dso_local i32 @hal_clock_init() local_unnamed_addr #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_close(i32 noundef %0) local_unnamed_addr #8 !dbg !15457 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15459, metadata !DIExpression()), !dbg !15460
  ret i32 0, !dbg !15461
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_fstat(i32 noundef %0, %struct.stat* nocapture noundef readnone %1) local_unnamed_addr #8 !dbg !15462 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15512, metadata !DIExpression()), !dbg !15514
  call void @llvm.dbg.value(metadata %struct.stat* %1, metadata !15513, metadata !DIExpression()), !dbg !15514
  ret i32 0, !dbg !15515
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_isatty(i32 noundef %0) local_unnamed_addr #8 !dbg !15516 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15518, metadata !DIExpression()), !dbg !15519
  ret i32 1, !dbg !15520
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_lseek(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #8 !dbg !15521 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15525, metadata !DIExpression()), !dbg !15528
  call void @llvm.dbg.value(metadata i32 %1, metadata !15526, metadata !DIExpression()), !dbg !15528
  call void @llvm.dbg.value(metadata i32 %2, metadata !15527, metadata !DIExpression()), !dbg !15528
  ret i32 0, !dbg !15529
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_open(i8* nocapture noundef readnone %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #8 !dbg !15530 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15534, metadata !DIExpression()), !dbg !15537
  call void @llvm.dbg.value(metadata i32 %1, metadata !15535, metadata !DIExpression()), !dbg !15537
  call void @llvm.dbg.value(metadata i32 %2, metadata !15536, metadata !DIExpression()), !dbg !15537
  ret i32 -1, !dbg !15538
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_read(i32 noundef %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #8 !dbg !15539 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15543, metadata !DIExpression()), !dbg !15546
  call void @llvm.dbg.value(metadata i8* %1, metadata !15544, metadata !DIExpression()), !dbg !15546
  call void @llvm.dbg.value(metadata i32 %2, metadata !15545, metadata !DIExpression()), !dbg !15546
  ret i32 0, !dbg !15547
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_getpid() local_unnamed_addr #8 !dbg !15548 {
  ret i32 1, !dbg !15549
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_kill(i32 noundef %0, i32 noundef %1) local_unnamed_addr #8 !dbg !15550 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15554, metadata !DIExpression()), !dbg !15556
  call void @llvm.dbg.value(metadata i32 %1, metadata !15555, metadata !DIExpression()), !dbg !15556
  ret i32 -1, !dbg !15557
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_exit(i32 noundef %0) local_unnamed_addr #8 !dbg !15558 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15560, metadata !DIExpression()), !dbg !15561
  ret i32 -1, !dbg !15562
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @_sbrk_r(%struct._reent* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #0 !dbg !2807 {
  call void @llvm.dbg.value(metadata %struct._reent* %0, metadata !3002, metadata !DIExpression()), !dbg !15563
  call void @llvm.dbg.value(metadata i32 %1, metadata !3003, metadata !DIExpression()), !dbg !15563
  %3 = tail call i8* asm sideeffect "MRS $0, msp\0A", "=r"() #22, !dbg !15564, !srcloc !15565
  call void @llvm.dbg.value(metadata i8* %3, metadata !3005, metadata !DIExpression()), !dbg !15563
  %4 = load i8*, i8** @_sbrk_r.heap_end, align 4, !dbg !15566
  %5 = icmp eq i8* %4, null, !dbg !15568
  %6 = select i1 %5, i8* @end, i8* %4, !dbg !15569
  call void @llvm.dbg.value(metadata i8* %6, metadata !3004, metadata !DIExpression()), !dbg !15563
  %7 = getelementptr inbounds i8, i8* %6, i32 %1, !dbg !15570
  %8 = icmp ult i8* %3, %7, !dbg !15572
  %9 = xor i1 %8, true, !dbg !15573
  %10 = or i1 %5, %9, !dbg !15573
  br i1 %10, label %11, label %13, !dbg !15573

11:                                               ; preds = %2
  %12 = select i1 %8, i8* %6, i8* %7, !dbg !15574
  store i8* %12, i8** @_sbrk_r.heap_end, align 4, !dbg !15573
  br label %13, !dbg !15573

13:                                               ; preds = %2, %11
  %14 = select i1 %8, i8* inttoptr (i32 -1 to i8*), i8* %6, !dbg !15574
  ret i8* %14, !dbg !15573
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @_write(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef returned %2) local_unnamed_addr #0 !dbg !15575 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15577, metadata !DIExpression()), !dbg !15581
  call void @llvm.dbg.value(metadata i8* %1, metadata !15578, metadata !DIExpression()), !dbg !15581
  call void @llvm.dbg.value(metadata i32 %2, metadata !15579, metadata !DIExpression()), !dbg !15581
  call void @llvm.dbg.value(metadata i32 0, metadata !15580, metadata !DIExpression()), !dbg !15581
  %4 = icmp sgt i32 %2, 0, !dbg !15582
  br i1 %4, label %5, label %14, !dbg !15585

5:                                                ; preds = %3, %5
  %6 = phi i32 [ %12, %5 ], [ 0, %3 ]
  %7 = phi i8* [ %8, %5 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !15580, metadata !DIExpression()), !dbg !15581
  call void @llvm.dbg.value(metadata i8* %7, metadata !15578, metadata !DIExpression()), !dbg !15581
  %8 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !15586
  call void @llvm.dbg.value(metadata i8* %8, metadata !15578, metadata !DIExpression()), !dbg !15581
  %9 = load i8, i8* %7, align 1, !dbg !15588
  %10 = zext i8 %9 to i32, !dbg !15588
  %11 = tail call i32 @__io_putchar(i32 noundef %10) #21, !dbg !15589
  %12 = add nuw nsw i32 %6, 1, !dbg !15590
  call void @llvm.dbg.value(metadata i32 %12, metadata !15580, metadata !DIExpression()), !dbg !15581
  %13 = icmp eq i32 %12, %2, !dbg !15582
  br i1 %13, label %14, label %5, !dbg !15585, !llvm.loop !15591

14:                                               ; preds = %5, %3
  ret i32 %2, !dbg !15593
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @SysTick_Set(i32 noundef %0) local_unnamed_addr #10 !dbg !15594 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15596, metadata !DIExpression()), !dbg !15598
  %2 = add i32 %0, -1, !dbg !15599
  %3 = icmp ugt i32 %2, 16777215, !dbg !15601
  br i1 %3, label %8, label %4, !dbg !15602

4:                                                ; preds = %1
  %5 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !15603
  call void @llvm.dbg.value(metadata i32 %5, metadata !15597, metadata !DIExpression()), !dbg !15598
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !15604
  %7 = and i32 %6, -4, !dbg !15604
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !15604
  store volatile i32 %2, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !15605
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !15606
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !15607
  br label %8, !dbg !15608

8:                                                ; preds = %1, %4
  %9 = phi i32 [ 0, %4 ], [ 1, %1 ], !dbg !15598
  ret i32 %9, !dbg !15609
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SysInitStatus_Set() local_unnamed_addr #10 !dbg !15610 {
  store volatile i32 1, i32* @System_Initialize_Done, align 4, !dbg !15611
  ret void, !dbg !15612
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @SysInitStatus_Query() local_unnamed_addr #9 !dbg !15613 {
  %1 = load volatile i32, i32* @System_Initialize_Done, align 4, !dbg !15614
  ret i32 %1, !dbg !15615
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #9 !dbg !15616 {
  %1 = load volatile i32, i32* inttoptr (i32 -1576992508 to i32*), align 4, !dbg !15619
  %2 = lshr i32 %1, 3, !dbg !15620
  %3 = and i32 %2, 15, !dbg !15620
  call void @llvm.dbg.value(metadata i32 %3, metadata !15618, metadata !DIExpression()), !dbg !15621
  switch i32 %3, label %6 [
    i32 8, label %5
    i32 6, label %5
    i32 2, label %4
    i32 3, label %4
    i32 4, label %4
    i32 5, label %9
    i32 7, label %9
  ], !dbg !15622

4:                                                ; preds = %0, %0, %0
  br label %6, !dbg !15623

5:                                                ; preds = %0, %0
  br label %9, !dbg !15625

6:                                                ; preds = %0, %4
  %7 = phi i32 [ 104000000, %4 ], [ 26000000, %0 ]
  store i32 %7, i32* @SystemCoreClock, align 4, !dbg !15626
  %8 = load volatile i32, i32* inttoptr (i32 -1576665024 to i32*), align 64, !dbg !15627
  br label %15, !dbg !15629

9:                                                ; preds = %0, %0, %5
  %10 = phi i32 [ 156000000, %5 ], [ 208000000, %0 ], [ 208000000, %0 ]
  store i32 %10, i32* @SystemCoreClock, align 4, !dbg !15626
  %11 = load volatile i32, i32* inttoptr (i32 -1576665024 to i32*), align 64, !dbg !15627
  %12 = and i32 %11, 1024, !dbg !15630
  %13 = icmp eq i32 %12, 0, !dbg !15630
  br i1 %13, label %15, label %14, !dbg !15629

14:                                               ; preds = %9
  store i32 104000000, i32* @SystemCoreClock, align 4, !dbg !15631
  br label %15, !dbg !15633

15:                                               ; preds = %6, %14, %9
  ret void, !dbg !15634
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SystemInit() local_unnamed_addr #10 !dbg !15635 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !15636
  %2 = or i32 %1, 15728640, !dbg !15636
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !15636
  store volatile i32 0, i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !15637
  %3 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !15638
  %4 = or i32 %3, 458752, !dbg !15638
  store volatile i32 %4, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !15638
  ret void, !dbg !15639
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @CachePreInit() local_unnamed_addr #10 !dbg !15640 {
  store volatile i32 0, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !15641
  store volatile i32 19, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !15642
  store volatile i32 3, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !15643
  store volatile i32 134283520, i32* inttoptr (i32 -1601634304 to i32*), align 65536, !dbg !15644
  store volatile i32 138280960, i32* inttoptr (i32 -1601634240 to i32*), align 64, !dbg !15645
  store volatile i32 1, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !15646
  store volatile i32 781, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !15647
  ret void, !dbg !15648
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @keypad_custom_normal_init() local_unnamed_addr #0 !dbg !15649 {
  %1 = alloca %struct.hal_keypad_config_t, align 4
  %2 = bitcast %struct.hal_keypad_config_t* %1 to i8*, !dbg !15666
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %2) #22, !dbg !15666
  call void @llvm.dbg.declare(metadata %struct.hal_keypad_config_t* %1, metadata !15652, metadata !DIExpression()), !dbg !15667
  %3 = getelementptr inbounds %struct.hal_keypad_config_t, %struct.hal_keypad_config_t* %1, i32 0, i32 2, !dbg !15668
  store i32 16, i32* %3, align 4, !dbg !15669
  %4 = getelementptr inbounds %struct.hal_keypad_config_t, %struct.hal_keypad_config_t* %1, i32 0, i32 1, i32 1, !dbg !15670
  store i8 7, i8* %4, align 1, !dbg !15671
  %5 = getelementptr inbounds %struct.hal_keypad_config_t, %struct.hal_keypad_config_t* %1, i32 0, i32 1, i32 0, !dbg !15672
  store i8 7, i8* %5, align 4, !dbg !15673
  %6 = getelementptr inbounds %struct.hal_keypad_config_t, %struct.hal_keypad_config_t* %1, i32 0, i32 0, !dbg !15674
  store i32 1, i32* %6, align 4, !dbg !15675
  %7 = getelementptr inbounds %struct.hal_keypad_config_t, %struct.hal_keypad_config_t* %1, i32 0, i32 3, !dbg !15676
  store i32 1000, i32* %7, align 4, !dbg !15677
  %8 = getelementptr inbounds %struct.hal_keypad_config_t, %struct.hal_keypad_config_t* %1, i32 0, i32 4, !dbg !15678
  store i32 2000, i32* %8, align 4, !dbg !15679
  %9 = call i32 @hal_keypad_init(%struct.hal_keypad_config_t* noundef nonnull %1) #21, !dbg !15680
  call void @llvm.dbg.value(metadata i32 %9, metadata !15651, metadata !DIExpression()), !dbg !15681
  %10 = icmp eq i32 %9, 0, !dbg !15682
  br i1 %10, label %12, label %11, !dbg !15684

11:                                               ; preds = %0
  call void (i8*, i32, i8*, ...) @log_hal_warning_internal(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.keypad_custom_normal_init, i32 0, i32 0), i32 noundef 80, i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.265, i32 0, i32 0)) #21, !dbg !15685
  br label %12, !dbg !15687

12:                                               ; preds = %0, %11
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %2) #22, !dbg !15688
  ret i1 %10, !dbg !15688
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @keypad_custom_powerkey_init() local_unnamed_addr #0 !dbg !15689 {
  call void @llvm.dbg.value(metadata i32 24, metadata !15692, metadata !DIExpression()), !dbg !15693
  store i32 1000, i32* getelementptr inbounds (%struct.powerkey_context_t, %struct.powerkey_context_t* @powerkey_context, i32 0, i32 7), align 4, !dbg !15694
  store i32 2000, i32* getelementptr inbounds (%struct.powerkey_context_t, %struct.powerkey_context_t* @powerkey_context, i32 0, i32 6), align 4, !dbg !15695
  %1 = tail call i32 @hal_keypad_powerkey_init(i32 noundef 24) #21, !dbg !15696
  call void @llvm.dbg.value(metadata i32 %1, metadata !15691, metadata !DIExpression()), !dbg !15693
  %2 = icmp eq i32 %1, 0, !dbg !15697
  br i1 %2, label %4, label %3, !dbg !15699

3:                                                ; preds = %0
  tail call void (i8*, i32, i8*, ...) @log_hal_warning_internal(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.keypad_custom_powerkey_init, i32 0, i32 0), i32 noundef 104, i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.1.268, i32 0, i32 0)) #21, !dbg !15700
  br label %4, !dbg !15702

4:                                                ; preds = %0, %3
  ret i1 %2, !dbg !15703
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @keypad_custom_init() local_unnamed_addr #0 !dbg !15704 {
  %1 = tail call zeroext i1 @keypad_custom_normal_init() #20, !dbg !15705
  br i1 %1, label %2, label %4, !dbg !15707

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @keypad_custom_powerkey_init() #20, !dbg !15708
  br label %4, !dbg !15710

4:                                                ; preds = %2, %0
  %5 = phi i1 [ false, %0 ], [ %3, %2 ], !dbg !15710
  ret i1 %5, !dbg !15711
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @keypad_custom_deinit() local_unnamed_addr #0 !dbg !15712 {
  %1 = tail call i32 @hal_keypad_deinit() #21, !dbg !15713
  %2 = icmp eq i32 %1, 0, !dbg !15715
  br i1 %2, label %3, label %6, !dbg !15716

3:                                                ; preds = %0
  %4 = tail call i32 @hal_keypad_powerkey_deinit() #21, !dbg !15717
  %5 = icmp eq i32 %4, 0, !dbg !15719
  br label %6, !dbg !15720

6:                                                ; preds = %3, %0
  %7 = phi i1 [ false, %0 ], [ %5, %3 ], !dbg !15720
  ret i1 %7, !dbg !15721
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local zeroext i1 @keypad_custom_set_event_time(%struct.powerkey_state_t* noundef readonly %0) local_unnamed_addr #5 !dbg !15722 {
  call void @llvm.dbg.value(metadata %struct.powerkey_state_t* %0, metadata !15733, metadata !DIExpression()), !dbg !15734
  %2 = icmp eq %struct.powerkey_state_t* %0, null, !dbg !15735
  br i1 %2, label %10, label %3, !dbg !15737

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.powerkey_state_t, %struct.powerkey_state_t* %0, i32 0, i32 1, !dbg !15738
  %5 = load i32, i32* %4, align 4, !dbg !15738
  store i32 %5, i32* getelementptr inbounds (%struct.powerkey_context_t, %struct.powerkey_context_t* @powerkey_context, i32 0, i32 7), align 4, !dbg !15739
  %6 = getelementptr inbounds %struct.powerkey_state_t, %struct.powerkey_state_t* %0, i32 0, i32 0, !dbg !15740
  %7 = load i32, i32* %6, align 4, !dbg !15740
  store i32 %7, i32* getelementptr inbounds (%struct.powerkey_context_t, %struct.powerkey_context_t* @powerkey_context, i32 0, i32 6), align 4, !dbg !15741
  %8 = load i32, i32* %4, align 4, !dbg !15742
  store i32 %8, i32* getelementptr inbounds (%struct.keypad_context_t, %struct.keypad_context_t* @keypad_context, i32 0, i32 4), align 4, !dbg !15743
  %9 = load i32, i32* %6, align 4, !dbg !15744
  store i32 %9, i32* getelementptr inbounds (%struct.keypad_context_t, %struct.keypad_context_t* @keypad_context, i32 0, i32 3), align 4, !dbg !15745
  br label %10, !dbg !15746

10:                                               ; preds = %1, %3
  %11 = xor i1 %2, true, !dbg !15747
  ret i1 %11, !dbg !15747
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i8 @keypad_custom_translate_keydata(i8 noundef zeroext %0) local_unnamed_addr #8 !dbg !15748 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !15752, metadata !DIExpression()), !dbg !15753
  %2 = zext i8 %0 to i32, !dbg !15754
  %3 = getelementptr inbounds [32 x i8], [32 x i8]* @custom_key_data, i32 0, i32 %2, !dbg !15754
  %4 = load i8, i8* %3, align 1, !dbg !15754
  ret i8 %4, !dbg !15755
}

attributes #0 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #1 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #2 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #3 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #5 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #6 = { argmemonly nofree nosync nounwind willreturn }
attributes #7 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #8 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #9 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #10 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #11 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #12 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #13 = { noreturn optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #14 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #15 = { argmemonly nofree nounwind willreturn writeonly }
attributes #16 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #17 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #18 = { nofree nosync nounwind willreturn }
attributes #19 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #20 = { nobuiltin optsize "no-builtins" }
attributes #21 = { nobuiltin nounwind optsize "no-builtins" }
attributes #22 = { nounwind }
attributes #23 = { nobuiltin noreturn nounwind optsize "no-builtins" }

!llvm.dbg.cu = !{!2, !85, !3150, !309, !414, !694, !3203, !894, !983, !3207, !1107, !1276, !3226, !1362, !1458, !1781, !3272, !1869, !1878, !2236, !2297, !2372, !2483, !3274, !3310, !2551, !2627, !2795, !3312, !2997, !3008, !3125, !3191}
!llvm.ident = !{!3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316}
!llvm.module.flags = !{!3317, !3318, !3319, !3320, !3321, !3322, !3323, !3324, !3325}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "gpt_lock_sleep_name", scope: !2, file: !3, line: 46, type: !79, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !60, globals: !70, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_gpt.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/powerkey/GCC")
!4 = !{!5, !14, !25, !29, !33, !52, !56}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 387, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "../../../../../driver/chip/inc/hal_gpt.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/powerkey/GCC")
!7 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!8 = !{!9, !10, !11, !12, !13}
!9 = !DIEnumerator(name: "HAL_GPT_STATUS_ERROR_PORT_USED", value: -4)
!10 = !DIEnumerator(name: "HAL_GPT_STATUS_ERROR", value: -3)
!11 = !DIEnumerator(name: "HAL_GPT_STATUS_ERROR_PORT", value: -2)
!12 = !DIEnumerator(name: "HAL_GPT_STATUS_INVALID_PARAMETER", value: -1)
!13 = !DIEnumerator(name: "HAL_GPT_STATUS_OK", value: 0)
!14 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !15, line: 846, baseType: !16, size: 32, elements: !17)
!15 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_platform.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/powerkey/GCC")
!16 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!17 = !{!18, !19, !20, !21, !22, !23, !24}
!18 = !DIEnumerator(name: "HAL_GPT_0", value: 0)
!19 = !DIEnumerator(name: "HAL_GPT_1", value: 1)
!20 = !DIEnumerator(name: "HAL_GPT_2", value: 2)
!21 = !DIEnumerator(name: "HAL_GPT_3", value: 3)
!22 = !DIEnumerator(name: "HAL_GPT_4", value: 4)
!23 = !DIEnumerator(name: "HAL_GPT_5", value: 5)
!24 = !DIEnumerator(name: "HAL_GPT_MAX_PORT", value: 6)
!25 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 397, baseType: !16, size: 32, elements: !26)
!26 = !{!27, !28}
!27 = !DIEnumerator(name: "HAL_GPT_STOPPED", value: 0)
!28 = !DIEnumerator(name: "HAL_GPT_RUNNING", value: 1)
!29 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !15, line: 857, baseType: !16, size: 32, elements: !30)
!30 = !{!31, !32}
!31 = !DIEnumerator(name: "HAL_GPT_CLOCK_SOURCE_32K", value: 0)
!32 = !DIEnumerator(name: "HAL_GPT_CLOCK_SOURCE_1M", value: 1)
!33 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !34, line: 87, baseType: !16, size: 32, elements: !35)
!34 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_gpt_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/powerkey/GCC")
!35 = !{!36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51}
!36 = !DIEnumerator(name: "GPT_DIVIDE_1", value: 0)
!37 = !DIEnumerator(name: "GPT_DIVIDE_2", value: 1)
!38 = !DIEnumerator(name: "GPT_DIVIDE_3", value: 2)
!39 = !DIEnumerator(name: "GPT_DIVIDE_4", value: 3)
!40 = !DIEnumerator(name: "GPT_DIVIDE_5", value: 4)
!41 = !DIEnumerator(name: "GPT_DIVIDE_6", value: 5)
!42 = !DIEnumerator(name: "GPT_DIVIDE_7", value: 6)
!43 = !DIEnumerator(name: "GPT_DIVIDE_8", value: 7)
!44 = !DIEnumerator(name: "GPT_DIVIDE_9", value: 8)
!45 = !DIEnumerator(name: "GPT_DIVIDE_10", value: 9)
!46 = !DIEnumerator(name: "GPT_DIVIDE_11", value: 10)
!47 = !DIEnumerator(name: "GPT_DIVIDE_12", value: 11)
!48 = !DIEnumerator(name: "GPT_DIVIDE_13", value: 12)
!49 = !DIEnumerator(name: "GPT_DIVIDE_16", value: 13)
!50 = !DIEnumerator(name: "GPT_DIVIDE_32", value: 14)
!51 = !DIEnumerator(name: "GPT_DIVIDE_64", value: 15)
!52 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 380, baseType: !16, size: 32, elements: !53)
!53 = !{!54, !55}
!54 = !DIEnumerator(name: "HAL_GPT_TIMER_TYPE_ONE_SHOT", value: 0)
!55 = !DIEnumerator(name: "HAL_GPT_TIMER_TYPE_REPEAT", value: 1)
!56 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !34, line: 82, baseType: !16, size: 32, elements: !57)
!57 = !{!58, !59}
!58 = !DIEnumerator(name: "GPT_CLOCK_UNGATE", value: 0)
!59 = !DIEnumerator(name: "GPT_CLOCK_GATE", value: 64)
!60 = !{!61, !65, !66}
!61 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !62, line: 48, baseType: !63)
!62 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_stdint.h", directory: "/home/mjshen/RTOSExploration")
!63 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !64, line: 79, baseType: !16)
!64 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/machine/_default_types.h", directory: "/home/mjshen/RTOSExploration")
!65 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!66 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_callback_t", file: !6, line: 371, baseType: !67)
!67 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !68, size: 32)
!68 = !DISubroutineType(types: !69)
!69 = !{null, !65}
!70 = !{!71, !0}
!71 = !DIGlobalVariableExpression(var: !72, expr: !DIExpression())
!72 = distinct !DIGlobalVariable(name: "gpt_lock_sleep_handle", scope: !2, file: !3, line: 47, type: !73, isLocal: true, isDefinition: true)
!73 = !DICompositeType(tag: DW_TAG_array_type, baseType: !74, size: 48, elements: !77)
!74 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !62, line: 24, baseType: !75)
!75 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint8_t", file: !64, line: 43, baseType: !76)
!76 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!77 = !{!78}
!78 = !DISubrange(count: 6)
!79 = !DICompositeType(tag: DW_TAG_array_type, baseType: !80, size: 192, elements: !77)
!80 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !81, size: 32)
!81 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !82)
!82 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!83 = !DIGlobalVariableExpression(var: !84, expr: !DIExpression())
!84 = distinct !DIGlobalVariable(name: "gp_gpt", scope: !85, file: !86, line: 48, type: !305, isLocal: false, isDefinition: true)
!85 = distinct !DICompileUnit(language: DW_LANG_C99, file: !86, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !87, retainedTypes: !231, globals: !247, splitDebugInlining: false, nameTableKind: None)
!86 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_gpt_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/powerkey/GCC")
!87 = !{!88, !56, !147, !153, !14, !52, !25}
!88 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !15, line: 1170, baseType: !16, size: 32, elements: !89)
!89 = !{!90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146}
!90 = !DIEnumerator(name: "HAL_CLOCK_CG_BT_26M", value: 9)
!91 = !DIEnumerator(name: "HAL_CLOCK_CG_CAMINF48M", value: 10)
!92 = !DIEnumerator(name: "HAL_CLOCK_CG_BT_BUSCK", value: 13)
!93 = !DIEnumerator(name: "HAL_CLOCK_CG_BT_N9", value: 15)
!94 = !DIEnumerator(name: "HAL_CLOCK_CG_BUS", value: 20)
!95 = !DIEnumerator(name: "HAL_CLOCK_CG_CM", value: 21)
!96 = !DIEnumerator(name: "HAL_CLOCK_CG_BSI", value: 23)
!97 = !DIEnumerator(name: "HAL_CLOCK_CG_SEJ", value: 32)
!98 = !DIEnumerator(name: "HAL_CLOCK_CG_DMA", value: 33)
!99 = !DIEnumerator(name: "HAL_CLOCK_CG_USB48M", value: 34)
!100 = !DIEnumerator(name: "HAL_CLOCK_CG_MSDC0", value: 35)
!101 = !DIEnumerator(name: "HAL_CLOCK_CG_I2C_D2D", value: 38)
!102 = !DIEnumerator(name: "HAL_CLOCK_CG_I2C2", value: 39)
!103 = !DIEnumerator(name: "HAL_CLOCK_CG_CM4_OSTIMER", value: 42)
!104 = !DIEnumerator(name: "HAL_CLOCK_CG_DMA_AO", value: 44)
!105 = !DIEnumerator(name: "HAL_CLOCK_CG_UART0", value: 45)
!106 = !DIEnumerator(name: "HAL_CLOCK_CG_UART1", value: 46)
!107 = !DIEnumerator(name: "HAL_CLOCK_CG_UART2", value: 47)
!108 = !DIEnumerator(name: "HAL_CLOCK_CG_UART3", value: 48)
!109 = !DIEnumerator(name: "HAL_CLOCK_CG_SPISLV", value: 51)
!110 = !DIEnumerator(name: "HAL_CLOCK_CG_SPI0", value: 52)
!111 = !DIEnumerator(name: "HAL_CLOCK_CG_SPI1", value: 53)
!112 = !DIEnumerator(name: "HAL_CLOCK_CG_SPI2", value: 54)
!113 = !DIEnumerator(name: "HAL_CLOCK_CG_SPI3", value: 55)
!114 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM0", value: 64)
!115 = !DIEnumerator(name: "HAL_CLOCK_CG_BTIF", value: 65)
!116 = !DIEnumerator(name: "HAL_CLOCK_CG_GPTIMER", value: 66)
!117 = !DIEnumerator(name: "HAL_CLOCK_CG_GPCOUNTER", value: 67)
!118 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM1", value: 68)
!119 = !DIEnumerator(name: "HAL_CLOCK_CG_EFUSE", value: 70)
!120 = !DIEnumerator(name: "HAL_CLOCK_CG_LPM", value: 71)
!121 = !DIEnumerator(name: "HAL_CLOCK_CG_CM_SYSROM", value: 72)
!122 = !DIEnumerator(name: "HAL_CLOCK_CG_SFC", value: 73)
!123 = !DIEnumerator(name: "HAL_CLOCK_CG_MSDC1", value: 74)
!124 = !DIEnumerator(name: "HAL_CLOCK_CG_USB_DMA", value: 76)
!125 = !DIEnumerator(name: "HAL_CLOCK_CG_USB_BUS", value: 77)
!126 = !DIEnumerator(name: "HAL_CLOCK_CG_DISP_PWM", value: 78)
!127 = !DIEnumerator(name: "HAL_CLOCK_CG_TRNG", value: 80)
!128 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM2", value: 83)
!129 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM3", value: 84)
!130 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM4", value: 85)
!131 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM5", value: 86)
!132 = !DIEnumerator(name: "HAL_CLOCK_CG_LCD", value: 96)
!133 = !DIEnumerator(name: "HAL_CLOCK_CG_RESEIZER", value: 97)
!134 = !DIEnumerator(name: "HAL_CLOCK_CG_ROTDMA", value: 98)
!135 = !DIEnumerator(name: "HAL_CLOCK_CG_CAM_BCLK", value: 99)
!136 = !DIEnumerator(name: "HAL_CLOCK_CG_PAD2CAM", value: 100)
!137 = !DIEnumerator(name: "HAL_CLOCK_CG_G2D", value: 101)
!138 = !DIEnumerator(name: "HAL_CLOCK_CG_MM_COLOR", value: 102)
!139 = !DIEnumerator(name: "HAL_CLOCK_CG_AAL", value: 103)
!140 = !DIEnumerator(name: "HAL_CLOCK_CG_DSI0", value: 104)
!141 = !DIEnumerator(name: "HAL_CLOCK_CG_LCD_APB", value: 105)
!142 = !DIEnumerator(name: "HAL_CLOCK_CG_AUXADC", value: 130)
!143 = !DIEnumerator(name: "HAL_CLOCK_CG_GPDAC", value: 134)
!144 = !DIEnumerator(name: "HAL_CLOCK_CG_SENSOR_DMA", value: 136)
!145 = !DIEnumerator(name: "HAL_CLOCK_CG_I2C1", value: 137)
!146 = !DIEnumerator(name: "HAL_CLOCK_CG_I2C0", value: 138)
!147 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !34, line: 75, baseType: !16, size: 32, elements: !148)
!148 = !{!149, !150, !151, !152}
!149 = !DIEnumerator(name: "GPT_MODE_ONE_SHOT", value: 0)
!150 = !DIEnumerator(name: "GPT_MODE_REPEAT", value: 16)
!151 = !DIEnumerator(name: "GPT_MODE_KEEP_GO", value: 32)
!152 = !DIEnumerator(name: "GPT_MODE_FREE_RUN", value: 48)
!153 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "IRQn", file: !154, line: 44, baseType: !7, size: 32, elements: !155)
!154 = !DIFile(filename: "../../../../../driver/CMSIS/Device/MTK/mt2523/Include/mt2523.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/powerkey/GCC")
!155 = !{!156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230}
!156 = !DIEnumerator(name: "Reset_IRQn", value: -15)
!157 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!158 = !DIEnumerator(name: "HardFault_IRQn", value: -13)
!159 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!160 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!161 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!162 = !DIEnumerator(name: "SVC_IRQn", value: -5)
!163 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!164 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!165 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!166 = !DIEnumerator(name: "OSTimer_IRQn", value: 0)
!167 = !DIEnumerator(name: "Reserved1_IRQn", value: 1)
!168 = !DIEnumerator(name: "MD_TOPSM_IRQn", value: 2)
!169 = !DIEnumerator(name: "CM4_TOPSM_IRQn", value: 3)
!170 = !DIEnumerator(name: "Reserved2_IRQn", value: 4)
!171 = !DIEnumerator(name: "Reserved3_IRQn", value: 5)
!172 = !DIEnumerator(name: "Reserved4_IRQn", value: 6)
!173 = !DIEnumerator(name: "Reserved5_IRQn", value: 7)
!174 = !DIEnumerator(name: "ACCDET_IRQn", value: 8)
!175 = !DIEnumerator(name: "RTC_IRQn", value: 9)
!176 = !DIEnumerator(name: "KP_IRQn", value: 10)
!177 = !DIEnumerator(name: "GPTimer_IRQn", value: 11)
!178 = !DIEnumerator(name: "EINT_IRQn", value: 12)
!179 = !DIEnumerator(name: "LCD_IRQn", value: 13)
!180 = !DIEnumerator(name: "LCD_AAL_IRQn", value: 14)
!181 = !DIEnumerator(name: "DSI_IRQn", value: 15)
!182 = !DIEnumerator(name: "RESIZE_IRQn", value: 16)
!183 = !DIEnumerator(name: "G2D_IRQn", value: 17)
!184 = !DIEnumerator(name: "CAM_IRQn", value: 18)
!185 = !DIEnumerator(name: "ROT_DMA_IRQn", value: 19)
!186 = !DIEnumerator(name: "SCAM_IRQn", value: 20)
!187 = !DIEnumerator(name: "DMA_IRQn", value: 21)
!188 = !DIEnumerator(name: "DMA_AO_IRQn", value: 22)
!189 = !DIEnumerator(name: "I2C_DUAL_IRQn", value: 23)
!190 = !DIEnumerator(name: "I2C0_IRQn", value: 24)
!191 = !DIEnumerator(name: "I2C1_IRQn", value: 25)
!192 = !DIEnumerator(name: "I2C2_IRQn", value: 26)
!193 = !DIEnumerator(name: "Reserved6_IRQn", value: 27)
!194 = !DIEnumerator(name: "GPCounter_IRQn", value: 28)
!195 = !DIEnumerator(name: "UART0_IRQn", value: 29)
!196 = !DIEnumerator(name: "UART1_IRQn", value: 30)
!197 = !DIEnumerator(name: "UART2_IRQn", value: 31)
!198 = !DIEnumerator(name: "UART3_IRQn", value: 32)
!199 = !DIEnumerator(name: "USB20_IRQn", value: 33)
!200 = !DIEnumerator(name: "MSDC0_IRQn", value: 34)
!201 = !DIEnumerator(name: "MSDC1_IRQn", value: 35)
!202 = !DIEnumerator(name: "Reserved7_IRQn", value: 36)
!203 = !DIEnumerator(name: "Reserved8_IRQn", value: 37)
!204 = !DIEnumerator(name: "SF_IRQn", value: 38)
!205 = !DIEnumerator(name: "DSP22CPU_IRQn", value: 39)
!206 = !DIEnumerator(name: "SensorDMA_IRQn", value: 40)
!207 = !DIEnumerator(name: "RGU_IRQn", value: 41)
!208 = !DIEnumerator(name: "SPI_SLV_IRQn", value: 42)
!209 = !DIEnumerator(name: "SPI_MST0_IRQn", value: 43)
!210 = !DIEnumerator(name: "SPI_MST1_IRQn", value: 44)
!211 = !DIEnumerator(name: "SPI_MST2_IRQn", value: 45)
!212 = !DIEnumerator(name: "SPI_MST3_IRQn", value: 46)
!213 = !DIEnumerator(name: "TRNG_IRQn", value: 47)
!214 = !DIEnumerator(name: "BT_TIMCON_IRQn", value: 48)
!215 = !DIEnumerator(name: "BTIF_IRQn", value: 49)
!216 = !DIEnumerator(name: "Reserved9_IRQn", value: 50)
!217 = !DIEnumerator(name: "Reserved10_IRQn", value: 51)
!218 = !DIEnumerator(name: "LISR0_IRQn", value: 52)
!219 = !DIEnumerator(name: "LISR1_IRQn", value: 53)
!220 = !DIEnumerator(name: "LISR2_IRQn", value: 54)
!221 = !DIEnumerator(name: "LISR3_IRQn", value: 55)
!222 = !DIEnumerator(name: "PSI_RISE_IRQn", value: 56)
!223 = !DIEnumerator(name: "PSI_FALL_IRQn", value: 57)
!224 = !DIEnumerator(name: "Reserved11_IRQn", value: 58)
!225 = !DIEnumerator(name: "Reserved12_IRQn", value: 59)
!226 = !DIEnumerator(name: "Reserved13_IRQn", value: 60)
!227 = !DIEnumerator(name: "Reserved14_IRQn", value: 61)
!228 = !DIEnumerator(name: "Reserved15_IRQn", value: 62)
!229 = !DIEnumerator(name: "Reserved16_IRQn", value: 63)
!230 = !DIEnumerator(name: "IRQ_NUMBER_MAX", value: 64)
!231 = !{!61, !232, !65}
!232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !233, size: 32)
!233 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPT_REGISTER_T", file: !154, line: 1272, baseType: !234)
!234 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !154, line: 1262, size: 288, elements: !235)
!235 = !{!236, !238, !239, !240, !242, !243, !244, !245, !246}
!236 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_CON", scope: !234, file: !154, line: 1263, baseType: !237, size: 32)
!237 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !61)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_CLK", scope: !234, file: !154, line: 1264, baseType: !237, size: 32, offset: 32)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQ_EN", scope: !234, file: !154, line: 1265, baseType: !237, size: 32, offset: 64)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQ_STA", scope: !234, file: !154, line: 1266, baseType: !241, size: 32, offset: 96)
!241 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !237)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQ_ACK", scope: !234, file: !154, line: 1267, baseType: !237, size: 32, offset: 128)
!243 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_COUNT", scope: !234, file: !154, line: 1268, baseType: !237, size: 32, offset: 160)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_COMPARE", scope: !234, file: !154, line: 1269, baseType: !237, size: 32, offset: 192)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_COUNTH", scope: !234, file: !154, line: 1270, baseType: !237, size: 32, offset: 224)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_COMPAREH", scope: !234, file: !154, line: 1271, baseType: !237, size: 32, offset: 256)
!247 = !{!83, !248, !257, !264, !280, !303}
!248 = !DIGlobalVariableExpression(var: !249, expr: !DIExpression())
!249 = distinct !DIGlobalVariable(name: "gp_gpt_glb", scope: !85, file: !86, line: 49, type: !250, isLocal: false, isDefinition: true)
!250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !251, size: 32)
!251 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPT_REGISTER_GLOABL_T", file: !154, line: 1260, baseType: !252)
!252 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !154, line: 1256, size: 96, elements: !253)
!253 = !{!254, !255, !256}
!254 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQSTA", scope: !252, file: !154, line: 1257, baseType: !241, size: 32)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQMSK0", scope: !252, file: !154, line: 1258, baseType: !237, size: 32, offset: 32)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQMSK1", scope: !252, file: !154, line: 1259, baseType: !237, size: 32, offset: 64)
!257 = !DIGlobalVariableExpression(var: !258, expr: !DIExpression())
!258 = distinct !DIGlobalVariable(name: "flag", scope: !259, file: !86, line: 88, type: !263, isLocal: true, isDefinition: true)
!259 = distinct !DISubprogram(name: "gpt_get_lfosc_clock", scope: !86, file: !86, line: 86, type: !260, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !85, retainedNodes: !262)
!260 = !DISubroutineType(types: !261)
!261 = !{null}
!262 = !{}
!263 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!264 = !DIGlobalVariableExpression(var: !265, expr: !DIExpression())
!265 = distinct !DIGlobalVariable(name: "g_gpt_context", scope: !85, file: !86, line: 51, type: !266, isLocal: false, isDefinition: true)
!266 = !DICompositeType(tag: DW_TAG_array_type, baseType: !267, size: 768, elements: !77)
!267 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpt_context_t", file: !34, line: 116, baseType: !268)
!268 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !34, line: 111, size: 128, elements: !269)
!269 = !{!270, !272, !278, !279}
!270 = !DIDerivedType(tag: DW_TAG_member, name: "running_status", scope: !268, file: !34, line: 112, baseType: !271, size: 32)
!271 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_running_status_t", file: !6, line: 400, baseType: !25)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "callback_context", scope: !268, file: !34, line: 113, baseType: !273, size: 64, offset: 32)
!273 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpt_callback_context_t", file: !34, line: 109, baseType: !274)
!274 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !34, line: 106, size: 64, elements: !275)
!275 = !{!276, !277}
!276 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !274, file: !34, line: 107, baseType: !66, size: 32)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !274, file: !34, line: 108, baseType: !65, size: 32, offset: 32)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "has_initilized", scope: !268, file: !34, line: 114, baseType: !263, size: 8, offset: 96)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "is_gpt_locked_sleep", scope: !268, file: !34, line: 115, baseType: !263, size: 8, offset: 104)
!280 = !DIGlobalVariableExpression(var: !281, expr: !DIExpression())
!281 = distinct !DIGlobalVariable(name: "gpt_sw_context", scope: !85, file: !86, line: 52, type: !282, isLocal: false, isDefinition: true)
!282 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpt_sw_context_t", file: !34, line: 134, baseType: !283)
!283 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !34, line: 125, size: 4256, elements: !284)
!284 = !{!285, !296, !297, !298, !299, !300, !301, !302}
!285 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !283, file: !34, line: 126, baseType: !286, size: 4096)
!286 = !DICompositeType(tag: DW_TAG_array_type, baseType: !287, size: 4096, elements: !294)
!287 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpt_sw_timer_t", file: !34, line: 123, baseType: !288)
!288 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !34, line: 118, size: 128, elements: !289)
!289 = !{!290, !291, !292, !293}
!290 = !DIDerivedType(tag: DW_TAG_member, name: "callback_context", scope: !288, file: !34, line: 119, baseType: !273, size: 64)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "time_out_ms", scope: !288, file: !34, line: 120, baseType: !61, size: 32, offset: 64)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "is_used", scope: !288, file: !34, line: 121, baseType: !263, size: 8, offset: 96)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "is_running", scope: !288, file: !34, line: 122, baseType: !263, size: 8, offset: 104)
!294 = !{!295}
!295 = !DISubrange(count: 32)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "absolute_time", scope: !283, file: !34, line: 127, baseType: !61, size: 32, offset: 4096)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "last_absolute_time", scope: !283, file: !34, line: 128, baseType: !61, size: 32, offset: 4128)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "used_timer_count", scope: !283, file: !34, line: 129, baseType: !61, size: 32, offset: 4160)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "running_timer_count", scope: !283, file: !34, line: 130, baseType: !61, size: 32, offset: 4192)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "is_first_init", scope: !283, file: !34, line: 131, baseType: !263, size: 8, offset: 4224)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "is_start_from_isr", scope: !283, file: !34, line: 132, baseType: !263, size: 8, offset: 4232)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "is_sw_gpt", scope: !283, file: !34, line: 133, baseType: !263, size: 8, offset: 4240)
!303 = !DIGlobalVariableExpression(var: !304, expr: !DIExpression())
!304 = distinct !DIGlobalVariable(name: "gpt_clock_source", scope: !85, file: !86, line: 53, type: !61, isLocal: false, isDefinition: true)
!305 = !DICompositeType(tag: DW_TAG_array_type, baseType: !232, size: 192, elements: !77)
!306 = !DIGlobalVariableExpression(var: !258, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!307 = !DIGlobalVariableExpression(var: !308, expr: !DIExpression())
!308 = distinct !DIGlobalVariable(name: "powerkey_buffer", scope: !309, file: !310, line: 84, type: !398, isLocal: false, isDefinition: true)
!309 = distinct !DICompileUnit(language: DW_LANG_C99, file: !310, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !311, retainedTypes: !373, globals: !378, splitDebugInlining: false, nameTableKind: None)
!310 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_keypad_powerkey_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/powerkey/GCC")
!311 = !{!312, !29, !5, !320, !325, !332, !367}
!312 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !313, line: 312, baseType: !16, size: 32, elements: !314)
!313 = !DIFile(filename: "../../../../../driver/chip/inc/hal_keypad.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/powerkey/GCC")
!314 = !{!315, !316, !317, !318, !319}
!315 = !DIEnumerator(name: "HAL_KEYPAD_KEY_RELEASE", value: 0)
!316 = !DIEnumerator(name: "HAL_KEYPAD_KEY_PRESS", value: 1)
!317 = !DIEnumerator(name: "HAL_KEYPAD_KEY_LONG_PRESS", value: 2)
!318 = !DIEnumerator(name: "HAL_KEYPAD_KEY_REPEAT", value: 3)
!319 = !DIEnumerator(name: "HAL_KEYPAD_KEY_PMU_LONG_PRESS", value: 4)
!320 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !321, line: 99, baseType: !16, size: 32, elements: !322)
!321 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_keypad_powerkey_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/powerkey/GCC")
!322 = !{!323, !324}
!323 = !DIEnumerator(name: "POWERKEY_PMU_POWRKEY", value: 0)
!324 = !DIEnumerator(name: "POWERKEY_PMU_LONG_POWERKEY", value: 1)
!325 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !326, line: 94, baseType: !7, size: 32, elements: !327)
!326 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_pmu.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/powerkey/GCC")
!327 = !{!328, !329, !330, !331}
!328 = !DIEnumerator(name: "PMU_STATUS_ERROR_EINT_NUMBER", value: -3)
!329 = !DIEnumerator(name: "PMU_STATUS_INVALID_PARAMETER", value: -2)
!330 = !DIEnumerator(name: "PMU_STATUS_ERROR", value: -1)
!331 = !DIEnumerator(name: "PMU_STATUS_SUCCESS", value: 0)
!332 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !326, line: 57, baseType: !16, size: 32, elements: !333)
!333 = !{!334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366}
!334 = !DIEnumerator(name: "PMU_INT_ALDO_OC", value: 0)
!335 = !DIEnumerator(name: "PMU_INT_ALDO_PG", value: 1)
!336 = !DIEnumerator(name: "PMU_INT_DLDO_OC", value: 2)
!337 = !DIEnumerator(name: "PMU_INT_DLDO_PG", value: 3)
!338 = !DIEnumerator(name: "PMU_INT_VC_BUCK_OC", value: 4)
!339 = !DIEnumerator(name: "PMU_INT_VCORE_PG", value: 5)
!340 = !DIEnumerator(name: "PMU_INT_VC_LDO_OC", value: 6)
!341 = !DIEnumerator(name: "PMU_INT_PKEYLP", value: 7)
!342 = !DIEnumerator(name: "PMU_INT_THM1", value: 8)
!343 = !DIEnumerator(name: "PMU_INT_THM2", value: 9)
!344 = !DIEnumerator(name: "PMU_INT_AXPKEY", value: 10)
!345 = !DIEnumerator(name: "PMU_INT_PWRKEY", value: 11)
!346 = !DIEnumerator(name: "PMU_INT_CHGOV", value: 12)
!347 = !DIEnumerator(name: "PMU_INT_CHRDET", value: 13)
!348 = !DIEnumerator(name: "PMU_INT_THR_H", value: 14)
!349 = !DIEnumerator(name: "PMU_INT_THR_L", value: 15)
!350 = !DIEnumerator(name: "PMU_INT_OVER110", value: 16)
!351 = !DIEnumerator(name: "PMU_INT_OVER40", value: 17)
!352 = !DIEnumerator(name: "PMU_INT_PSW_PG", value: 18)
!353 = !DIEnumerator(name: "PMU_INT_BAT_H", value: 19)
!354 = !DIEnumerator(name: "PMU_INT_BAT_L", value: 20)
!355 = !DIEnumerator(name: "PMU_INT_VBATON_HV_LV", value: 21)
!356 = !DIEnumerator(name: "PMU_INT_VBAT_UNDET_LV", value: 22)
!357 = !DIEnumerator(name: "PMU_INT_BVALID_DET_LV", value: 23)
!358 = !DIEnumerator(name: "PMU_INT_CHRWDT_LV", value: 24)
!359 = !DIEnumerator(name: "PMU_INT_HOT_LV", value: 25)
!360 = !DIEnumerator(name: "PMU_INT_WARM_LV", value: 26)
!361 = !DIEnumerator(name: "PMU_INT_COOL_LV", value: 27)
!362 = !DIEnumerator(name: "PMU_INT_COLD_LV", value: 28)
!363 = !DIEnumerator(name: "PMU_INT_IMP_LV", value: 29)
!364 = !DIEnumerator(name: "PMU_INT_NAG_C_LV", value: 30)
!365 = !DIEnumerator(name: "PMU_INT_AD_LBAT_LV", value: 31)
!366 = !DIEnumerator(name: "PMU_INT_MAX", value: 32)
!367 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !326, line: 45, baseType: !16, size: 32, elements: !368)
!368 = !{!369, !370, !371, !372}
!369 = !DIEnumerator(name: "PMU_NONE", value: 0)
!370 = !DIEnumerator(name: "PMU_EDGE_RISING", value: 1)
!371 = !DIEnumerator(name: "PMU_EDGE_FALLING", value: 2)
!372 = !DIEnumerator(name: "PMU_EDGE_FALLING_AND_RISING", value: 3)
!373 = !{!66, !65, !7, !61, !374, !16}
!374 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmu_callback_t", file: !326, line: 108, baseType: !375)
!375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !376, size: 32)
!376 = !DISubroutineType(types: !377)
!377 = !{null, !74, !65}
!378 = !{!379, !386, !307, !388, !396}
!379 = !DIGlobalVariableExpression(var: !380, expr: !DIExpression())
!380 = distinct !DIGlobalVariable(name: "last_state", scope: !381, file: !310, line: 355, type: !74, isLocal: true, isDefinition: true)
!381 = distinct !DISubprogram(name: "powerkey_get_pressed_state", scope: !310, file: !310, line: 353, type: !382, scopeLine: 354, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !309, retainedNodes: !384)
!382 = !DISubroutineType(types: !383)
!383 = !{!263}
!384 = !{!385}
!385 = !DILocalVariable(name: "current_state", scope: !381, file: !310, line: 356, type: !61)
!386 = !DIGlobalVariableExpression(var: !387, expr: !DIExpression())
!387 = distinct !DIGlobalVariable(name: "powerkey_lock_sleep_handle", scope: !309, file: !310, line: 50, type: !74, isLocal: true, isDefinition: true)
!388 = !DIGlobalVariableExpression(var: !389, expr: !DIExpression())
!389 = distinct !DIGlobalVariable(name: "powerkey_state", scope: !309, file: !310, line: 85, type: !390, isLocal: false, isDefinition: true)
!390 = !DIDerivedType(tag: DW_TAG_typedef, name: "powerkey_state_t", file: !321, line: 108, baseType: !391)
!391 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !321, line: 104, size: 64, elements: !392)
!392 = !{!393, !394}
!393 = !DIDerivedType(tag: DW_TAG_member, name: "timer_handle", scope: !391, file: !321, line: 105, baseType: !61, size: 32)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "current_state", scope: !391, file: !321, line: 106, baseType: !395, size: 32, offset: 32)
!395 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_keypad_key_state_t", file: !313, line: 318, baseType: !312)
!396 = !DIGlobalVariableExpression(var: !397, expr: !DIExpression())
!397 = distinct !DIGlobalVariable(name: "powerkey_lock_sleep_name", scope: !309, file: !310, line: 49, type: !80, isLocal: true, isDefinition: true)
!398 = !DIDerivedType(tag: DW_TAG_typedef, name: "powerkey_buffer_t", file: !321, line: 96, baseType: !399)
!399 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !321, line: 91, size: 3104, elements: !400)
!400 = !{!401, !409, !410, !411}
!401 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !399, file: !321, line: 92, baseType: !402, size: 3072)
!402 = !DICompositeType(tag: DW_TAG_array_type, baseType: !403, size: 3072, elements: !294)
!403 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_keypad_powerkey_event_t", file: !313, line: 365, baseType: !404)
!404 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !313, line: 361, size: 96, elements: !405)
!405 = !{!406, !407, !408}
!406 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !404, file: !313, line: 362, baseType: !395, size: 32)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "key_data", scope: !404, file: !313, line: 363, baseType: !61, size: 32, offset: 32)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "time_stamp", scope: !404, file: !313, line: 364, baseType: !61, size: 32, offset: 64)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "write_index", scope: !399, file: !321, line: 93, baseType: !74, size: 8, offset: 3072)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "read_index", scope: !399, file: !321, line: 94, baseType: !74, size: 8, offset: 3080)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "press_count", scope: !399, file: !321, line: 95, baseType: !74, size: 8, offset: 3088)
!412 = !DIGlobalVariableExpression(var: !413, expr: !DIExpression())
!413 = distinct !DIGlobalVariable(name: "gpio_register_base", scope: !414, file: !415, line: 64, type: !515, isLocal: false, isDefinition: true)
!414 = distinct !DICompileUnit(language: DW_LANG_C99, file: !415, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !416, retainedTypes: !510, globals: !514, splitDebugInlining: false, nameTableKind: None)
!415 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_gpio.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/powerkey/GCC")
!416 = !{!417, !469, !476, !480, !486, !490, !499, !504}
!417 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !15, line: 339, baseType: !16, size: 32, elements: !418)
!418 = !{!419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468}
!419 = !DIEnumerator(name: "HAL_GPIO_0", value: 0)
!420 = !DIEnumerator(name: "HAL_GPIO_1", value: 1)
!421 = !DIEnumerator(name: "HAL_GPIO_2", value: 2)
!422 = !DIEnumerator(name: "HAL_GPIO_3", value: 3)
!423 = !DIEnumerator(name: "HAL_GPIO_4", value: 4)
!424 = !DIEnumerator(name: "HAL_GPIO_5", value: 5)
!425 = !DIEnumerator(name: "HAL_GPIO_6", value: 6)
!426 = !DIEnumerator(name: "HAL_GPIO_7", value: 7)
!427 = !DIEnumerator(name: "HAL_GPIO_8", value: 8)
!428 = !DIEnumerator(name: "HAL_GPIO_9", value: 9)
!429 = !DIEnumerator(name: "HAL_GPIO_10", value: 10)
!430 = !DIEnumerator(name: "HAL_GPIO_11", value: 11)
!431 = !DIEnumerator(name: "HAL_GPIO_12", value: 12)
!432 = !DIEnumerator(name: "HAL_GPIO_13", value: 13)
!433 = !DIEnumerator(name: "HAL_GPIO_14", value: 14)
!434 = !DIEnumerator(name: "HAL_GPIO_15", value: 15)
!435 = !DIEnumerator(name: "HAL_GPIO_16", value: 16)
!436 = !DIEnumerator(name: "HAL_GPIO_17", value: 17)
!437 = !DIEnumerator(name: "HAL_GPIO_18", value: 18)
!438 = !DIEnumerator(name: "HAL_GPIO_19", value: 19)
!439 = !DIEnumerator(name: "HAL_GPIO_20", value: 20)
!440 = !DIEnumerator(name: "HAL_GPIO_21", value: 21)
!441 = !DIEnumerator(name: "HAL_GPIO_22", value: 22)
!442 = !DIEnumerator(name: "HAL_GPIO_23", value: 23)
!443 = !DIEnumerator(name: "HAL_GPIO_24", value: 24)
!444 = !DIEnumerator(name: "HAL_GPIO_25", value: 25)
!445 = !DIEnumerator(name: "HAL_GPIO_26", value: 26)
!446 = !DIEnumerator(name: "HAL_GPIO_27", value: 27)
!447 = !DIEnumerator(name: "HAL_GPIO_28", value: 28)
!448 = !DIEnumerator(name: "HAL_GPIO_29", value: 29)
!449 = !DIEnumerator(name: "HAL_GPIO_30", value: 30)
!450 = !DIEnumerator(name: "HAL_GPIO_31", value: 31)
!451 = !DIEnumerator(name: "HAL_GPIO_32", value: 32)
!452 = !DIEnumerator(name: "HAL_GPIO_33", value: 33)
!453 = !DIEnumerator(name: "HAL_GPIO_34", value: 34)
!454 = !DIEnumerator(name: "HAL_GPIO_35", value: 35)
!455 = !DIEnumerator(name: "HAL_GPIO_36", value: 36)
!456 = !DIEnumerator(name: "HAL_GPIO_37", value: 37)
!457 = !DIEnumerator(name: "HAL_GPIO_38", value: 38)
!458 = !DIEnumerator(name: "HAL_GPIO_39", value: 39)
!459 = !DIEnumerator(name: "HAL_GPIO_40", value: 40)
!460 = !DIEnumerator(name: "HAL_GPIO_41", value: 41)
!461 = !DIEnumerator(name: "HAL_GPIO_42", value: 42)
!462 = !DIEnumerator(name: "HAL_GPIO_43", value: 43)
!463 = !DIEnumerator(name: "HAL_GPIO_44", value: 44)
!464 = !DIEnumerator(name: "HAL_GPIO_45", value: 45)
!465 = !DIEnumerator(name: "HAL_GPIO_46", value: 46)
!466 = !DIEnumerator(name: "HAL_GPIO_47", value: 47)
!467 = !DIEnumerator(name: "HAL_GPIO_48", value: 48)
!468 = !DIEnumerator(name: "HAL_GPIO_MAX", value: 49)
!469 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !470, line: 224, baseType: !7, size: 32, elements: !471)
!470 = !DIFile(filename: "../../../../../driver/chip/inc/hal_gpio.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/powerkey/GCC")
!471 = !{!472, !473, !474, !475}
!472 = !DIEnumerator(name: "HAL_GPIO_STATUS_ERROR", value: -3)
!473 = !DIEnumerator(name: "HAL_GPIO_STATUS_ERROR_PIN", value: -2)
!474 = !DIEnumerator(name: "HAL_GPIO_STATUS_INVALID_PARAMETER", value: -1)
!475 = !DIEnumerator(name: "HAL_GPIO_STATUS_OK", value: 0)
!476 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !470, line: 210, baseType: !16, size: 32, elements: !477)
!477 = !{!478, !479}
!478 = !DIEnumerator(name: "HAL_GPIO_DIRECTION_INPUT", value: 0)
!479 = !DIEnumerator(name: "HAL_GPIO_DIRECTION_OUTPUT", value: 1)
!480 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !470, line: 233, baseType: !7, size: 32, elements: !481)
!481 = !{!482, !483, !484, !485}
!482 = !DIEnumerator(name: "HAL_PINMUX_STATUS_ERROR", value: -3)
!483 = !DIEnumerator(name: "HAL_PINMUX_STATUS_ERROR_PORT", value: -2)
!484 = !DIEnumerator(name: "HAL_PINMUX_STATUS_INVALID_FUNCTION", value: -1)
!485 = !DIEnumerator(name: "HAL_PINMUX_STATUS_OK", value: 0)
!486 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !470, line: 217, baseType: !16, size: 32, elements: !487)
!487 = !{!488, !489}
!488 = !DIEnumerator(name: "HAL_GPIO_DATA_LOW", value: 0)
!489 = !DIEnumerator(name: "HAL_GPIO_DATA_HIGH", value: 1)
!490 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !15, line: 415, baseType: !16, size: 32, elements: !491)
!491 = !{!492, !493, !494, !495, !496, !497, !498}
!492 = !DIEnumerator(name: "HAL_GPIO_CLOCK_0", value: 0)
!493 = !DIEnumerator(name: "HAL_GPIO_CLOCK_1", value: 1)
!494 = !DIEnumerator(name: "HAL_GPIO_CLOCK_2", value: 2)
!495 = !DIEnumerator(name: "HAL_GPIO_CLOCK_3", value: 3)
!496 = !DIEnumerator(name: "HAL_GPIO_CLOCK_4", value: 4)
!497 = !DIEnumerator(name: "HAL_GPIO_CLOCK_5", value: 5)
!498 = !DIEnumerator(name: "HAL_GPIO_CLOCK_MAX", value: 6)
!499 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !15, line: 427, baseType: !16, size: 32, elements: !500)
!500 = !{!501, !502, !503}
!501 = !DIEnumerator(name: "HAL_GPIO_CLOCK_MODE_26M", value: 1)
!502 = !DIEnumerator(name: "HAL_GPIO_CLOCK_MODE_32K", value: 4)
!503 = !DIEnumerator(name: "HAL_GPIO_CLOCK_MODE_MAX", value: 5)
!504 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !470, line: 242, baseType: !16, size: 32, elements: !505)
!505 = !{!506, !507, !508, !509}
!506 = !DIEnumerator(name: "HAL_GPIO_DRIVING_CURRENT_4MA", value: 0)
!507 = !DIEnumerator(name: "HAL_GPIO_DRIVING_CURRENT_8MA", value: 1)
!508 = !DIEnumerator(name: "HAL_GPIO_DRIVING_CURRENT_12MA", value: 2)
!509 = !DIEnumerator(name: "HAL_GPIO_DRIVING_CURRENT_16MA", value: 3)
!510 = !{!65, !511, !512, !513}
!511 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_direction_t", file: !470, line: 213, baseType: !476)
!512 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_data_t", file: !470, line: 220, baseType: !486)
!513 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_driving_current_t", file: !470, line: 247, baseType: !504)
!514 = !{!412}
!515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !516, size: 32)
!516 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_REGISTER_T", file: !154, line: 1554, baseType: !517)
!517 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !154, line: 1522, size: 29440, elements: !518)
!518 = !{!519, !533, !537, !546, !547, !556, !557, !566, !567, !577, !578, !587, !588, !597, !598, !607, !608, !617, !621, !630, !631, !640, !641, !650, !659, !660, !671, !675, !684, !685}
!519 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIR_REGISTER", scope: !517, file: !154, line: 1523, baseType: !520, size: 256)
!520 = !DICompositeType(tag: DW_TAG_array_type, baseType: !521, size: 256, elements: !531)
!521 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_DIR_REGISTER_T", file: !154, line: 1400, baseType: !522)
!522 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !154, line: 1395, size: 128, elements: !523)
!523 = !{!524, !525, !526, !527}
!524 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIR", scope: !522, file: !154, line: 1396, baseType: !237, size: 32)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIR_SET", scope: !522, file: !154, line: 1397, baseType: !237, size: 32, offset: 32)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIR_CLR", scope: !522, file: !154, line: 1398, baseType: !237, size: 32, offset: 64)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !522, file: !154, line: 1399, baseType: !528, size: 32, offset: 96)
!528 = !DICompositeType(tag: DW_TAG_array_type, baseType: !74, size: 32, elements: !529)
!529 = !{!530}
!530 = !DISubrange(count: 4)
!531 = !{!532}
!532 = !DISubrange(count: 2)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET1", scope: !517, file: !154, line: 1524, baseType: !534, size: 1792, offset: 256)
!534 = !DICompositeType(tag: DW_TAG_array_type, baseType: !74, size: 1792, elements: !535)
!535 = !{!536}
!536 = !DISubrange(count: 224)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLEN_REGISTER", scope: !517, file: !154, line: 1525, baseType: !538, size: 256, offset: 2048)
!538 = !DICompositeType(tag: DW_TAG_array_type, baseType: !539, size: 256, elements: !531)
!539 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_PULLEN_REGISTER_T", file: !154, line: 1409, baseType: !540)
!540 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !154, line: 1404, size: 128, elements: !541)
!541 = !{!542, !543, !544, !545}
!542 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLEN", scope: !540, file: !154, line: 1405, baseType: !237, size: 32)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLEN_SET", scope: !540, file: !154, line: 1406, baseType: !237, size: 32, offset: 32)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLEN_CLR", scope: !540, file: !154, line: 1407, baseType: !237, size: 32, offset: 64)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !540, file: !154, line: 1408, baseType: !528, size: 32, offset: 96)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET2", scope: !517, file: !154, line: 1526, baseType: !534, size: 1792, offset: 2304)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DINV_REGISTER", scope: !517, file: !154, line: 1527, baseType: !548, size: 256, offset: 4096)
!548 = !DICompositeType(tag: DW_TAG_array_type, baseType: !549, size: 256, elements: !531)
!549 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_DINV_REGISTER_T", file: !154, line: 1417, baseType: !550)
!550 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !154, line: 1412, size: 128, elements: !551)
!551 = !{!552, !553, !554, !555}
!552 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DINV", scope: !550, file: !154, line: 1413, baseType: !237, size: 32)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DINV_SET", scope: !550, file: !154, line: 1414, baseType: !237, size: 32, offset: 32)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DINV_CLR", scope: !550, file: !154, line: 1415, baseType: !237, size: 32, offset: 64)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !550, file: !154, line: 1416, baseType: !528, size: 32, offset: 96)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET3", scope: !517, file: !154, line: 1528, baseType: !534, size: 1792, offset: 4352)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DOUT_REGISTER", scope: !517, file: !154, line: 1529, baseType: !558, size: 256, offset: 6144)
!558 = !DICompositeType(tag: DW_TAG_array_type, baseType: !559, size: 256, elements: !531)
!559 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_DOUT_REGISTER_T", file: !154, line: 1426, baseType: !560)
!560 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !154, line: 1421, size: 128, elements: !561)
!561 = !{!562, !563, !564, !565}
!562 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DOUT", scope: !560, file: !154, line: 1422, baseType: !237, size: 32)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DOUT_SET", scope: !560, file: !154, line: 1423, baseType: !237, size: 32, offset: 32)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DOUT_CLR", scope: !560, file: !154, line: 1424, baseType: !237, size: 32, offset: 64)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !560, file: !154, line: 1425, baseType: !528, size: 32, offset: 96)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET4", scope: !517, file: !154, line: 1530, baseType: !534, size: 1792, offset: 6400)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIN_REGISTER", scope: !517, file: !154, line: 1531, baseType: !568, size: 256, offset: 8192)
!568 = !DICompositeType(tag: DW_TAG_array_type, baseType: !569, size: 256, elements: !531)
!569 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_DIN_REGISTER_T", file: !154, line: 1432, baseType: !570)
!570 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !154, line: 1429, size: 128, elements: !571)
!571 = !{!572, !573}
!572 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIN", scope: !570, file: !154, line: 1430, baseType: !237, size: 32)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !570, file: !154, line: 1431, baseType: !574, size: 96, offset: 32)
!574 = !DICompositeType(tag: DW_TAG_array_type, baseType: !74, size: 96, elements: !575)
!575 = !{!576}
!576 = !DISubrange(count: 12)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET5", scope: !517, file: !154, line: 1532, baseType: !534, size: 1792, offset: 8448)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLSEL_REGISTER", scope: !517, file: !154, line: 1533, baseType: !579, size: 256, offset: 10240)
!579 = !DICompositeType(tag: DW_TAG_array_type, baseType: !580, size: 256, elements: !531)
!580 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_PULLSEL_REGISTER_T", file: !154, line: 1440, baseType: !581)
!581 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !154, line: 1435, size: 128, elements: !582)
!582 = !{!583, !584, !585, !586}
!583 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLSEL", scope: !581, file: !154, line: 1436, baseType: !237, size: 32)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLSEL_SET", scope: !581, file: !154, line: 1437, baseType: !237, size: 32, offset: 32)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLSEL_CLR", scope: !581, file: !154, line: 1438, baseType: !237, size: 32, offset: 64)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !581, file: !154, line: 1439, baseType: !528, size: 32, offset: 96)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET6", scope: !517, file: !154, line: 1534, baseType: !534, size: 1792, offset: 10496)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SMT_REGISTER", scope: !517, file: !154, line: 1535, baseType: !589, size: 256, offset: 12288)
!589 = !DICompositeType(tag: DW_TAG_array_type, baseType: !590, size: 256, elements: !531)
!590 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_SMT_REGISTER_T", file: !154, line: 1448, baseType: !591)
!591 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !154, line: 1443, size: 128, elements: !592)
!592 = !{!593, !594, !595, !596}
!593 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SMT", scope: !591, file: !154, line: 1444, baseType: !237, size: 32)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SMT_SET", scope: !591, file: !154, line: 1445, baseType: !237, size: 32, offset: 32)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SMT_CLR", scope: !591, file: !154, line: 1446, baseType: !237, size: 32, offset: 64)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !591, file: !154, line: 1447, baseType: !528, size: 32, offset: 96)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET7", scope: !517, file: !154, line: 1536, baseType: !534, size: 1792, offset: 12544)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SR_REGISTER", scope: !517, file: !154, line: 1537, baseType: !599, size: 256, offset: 14336)
!599 = !DICompositeType(tag: DW_TAG_array_type, baseType: !600, size: 256, elements: !531)
!600 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_SR_REGISTER_T", file: !154, line: 1455, baseType: !601)
!601 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !154, line: 1450, size: 128, elements: !602)
!602 = !{!603, !604, !605, !606}
!603 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SR", scope: !601, file: !154, line: 1451, baseType: !237, size: 32)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SR_SET", scope: !601, file: !154, line: 1452, baseType: !237, size: 32, offset: 32)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SR_CLR", scope: !601, file: !154, line: 1453, baseType: !237, size: 32, offset: 64)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !601, file: !154, line: 1454, baseType: !528, size: 32, offset: 96)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET8", scope: !517, file: !154, line: 1538, baseType: !534, size: 1792, offset: 14592)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DRV_REGISTER", scope: !517, file: !154, line: 1539, baseType: !609, size: 512, offset: 16384)
!609 = !DICompositeType(tag: DW_TAG_array_type, baseType: !610, size: 512, elements: !529)
!610 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_DRV_REGISTER_T", file: !154, line: 1463, baseType: !611)
!611 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !154, line: 1458, size: 128, elements: !612)
!612 = !{!613, !614, !615, !616}
!613 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DRV", scope: !611, file: !154, line: 1459, baseType: !237, size: 32)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DRV_SET", scope: !611, file: !154, line: 1460, baseType: !237, size: 32, offset: 32)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DRV_CLR", scope: !611, file: !154, line: 1461, baseType: !237, size: 32, offset: 64)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !611, file: !154, line: 1462, baseType: !528, size: 32, offset: 96)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET9", scope: !517, file: !154, line: 1540, baseType: !618, size: 1536, offset: 16896)
!618 = !DICompositeType(tag: DW_TAG_array_type, baseType: !74, size: 1536, elements: !619)
!619 = !{!620}
!620 = !DISubrange(count: 192)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_IES_REGISTER", scope: !517, file: !154, line: 1541, baseType: !622, size: 256, offset: 18432)
!622 = !DICompositeType(tag: DW_TAG_array_type, baseType: !623, size: 256, elements: !531)
!623 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_IES_REGISTER_T", file: !154, line: 1471, baseType: !624)
!624 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !154, line: 1466, size: 128, elements: !625)
!625 = !{!626, !627, !628, !629}
!626 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_IES", scope: !624, file: !154, line: 1467, baseType: !237, size: 32)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_IES_SET", scope: !624, file: !154, line: 1468, baseType: !237, size: 32, offset: 32)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_IES_CLR", scope: !624, file: !154, line: 1469, baseType: !237, size: 32, offset: 64)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !624, file: !154, line: 1470, baseType: !528, size: 32, offset: 96)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET10", scope: !517, file: !154, line: 1542, baseType: !534, size: 1792, offset: 18688)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PUPD_REGISTER", scope: !517, file: !154, line: 1543, baseType: !632, size: 256, offset: 20480)
!632 = !DICompositeType(tag: DW_TAG_array_type, baseType: !633, size: 256, elements: !531)
!633 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_PUPD_REGISTER_T", file: !154, line: 1480, baseType: !634)
!634 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !154, line: 1475, size: 128, elements: !635)
!635 = !{!636, !637, !638, !639}
!636 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PUPD", scope: !634, file: !154, line: 1476, baseType: !237, size: 32)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PUPD_SET", scope: !634, file: !154, line: 1477, baseType: !237, size: 32, offset: 32)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PUPD_CLR", scope: !634, file: !154, line: 1478, baseType: !237, size: 32, offset: 64)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !634, file: !154, line: 1479, baseType: !528, size: 32, offset: 96)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET11", scope: !517, file: !154, line: 1544, baseType: !534, size: 1792, offset: 20736)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN0_REGISTER", scope: !517, file: !154, line: 1545, baseType: !642, size: 256, offset: 22528)
!642 = !DICompositeType(tag: DW_TAG_array_type, baseType: !643, size: 256, elements: !531)
!643 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_RESEN0_REGISTER_T", file: !154, line: 1489, baseType: !644)
!644 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !154, line: 1484, size: 128, elements: !645)
!645 = !{!646, !647, !648, !649}
!646 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN0", scope: !644, file: !154, line: 1485, baseType: !237, size: 32)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN0_SET", scope: !644, file: !154, line: 1486, baseType: !237, size: 32, offset: 32)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN0_CLR", scope: !644, file: !154, line: 1487, baseType: !237, size: 32, offset: 64)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !644, file: !154, line: 1488, baseType: !528, size: 32, offset: 96)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN1_REGISTER", scope: !517, file: !154, line: 1546, baseType: !651, size: 256, offset: 22784)
!651 = !DICompositeType(tag: DW_TAG_array_type, baseType: !652, size: 256, elements: !531)
!652 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_RESEN1_REGISTER_T", file: !154, line: 1497, baseType: !653)
!653 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !154, line: 1492, size: 128, elements: !654)
!654 = !{!655, !656, !657, !658}
!655 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN1", scope: !653, file: !154, line: 1493, baseType: !237, size: 32)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN1_SET", scope: !653, file: !154, line: 1494, baseType: !237, size: 32, offset: 32)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN1_CLR", scope: !653, file: !154, line: 1495, baseType: !237, size: 32, offset: 64)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !653, file: !154, line: 1496, baseType: !528, size: 32, offset: 96)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET12", scope: !517, file: !154, line: 1547, baseType: !618, size: 1536, offset: 23040)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_MODE_REGISTER", scope: !517, file: !154, line: 1548, baseType: !661, size: 896, offset: 24576)
!661 = !DICompositeType(tag: DW_TAG_array_type, baseType: !662, size: 896, elements: !669)
!662 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_MODE_REGISTER_T", file: !154, line: 1505, baseType: !663)
!663 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !154, line: 1500, size: 128, elements: !664)
!664 = !{!665, !666, !667, !668}
!665 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_MODE", scope: !663, file: !154, line: 1501, baseType: !237, size: 32)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_MODE_SET", scope: !663, file: !154, line: 1502, baseType: !237, size: 32, offset: 32)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_MODE_CLR", scope: !663, file: !154, line: 1503, baseType: !237, size: 32, offset: 64)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !663, file: !154, line: 1504, baseType: !528, size: 32, offset: 96)
!669 = !{!670}
!670 = !DISubrange(count: 7)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET13", scope: !517, file: !154, line: 1549, baseType: !672, size: 1152, offset: 25472)
!672 = !DICompositeType(tag: DW_TAG_array_type, baseType: !74, size: 1152, elements: !673)
!673 = !{!674}
!674 = !DISubrange(count: 144)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_TDSEL_REGISTER", scope: !517, file: !154, line: 1550, baseType: !676, size: 512, offset: 26624)
!676 = !DICompositeType(tag: DW_TAG_array_type, baseType: !677, size: 512, elements: !529)
!677 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TDSEL_REGISTER_T", file: !154, line: 1513, baseType: !678)
!678 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !154, line: 1508, size: 128, elements: !679)
!679 = !{!680, !681, !682, !683}
!680 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_TDSEL", scope: !678, file: !154, line: 1509, baseType: !237, size: 32)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_TDSEL_SET", scope: !678, file: !154, line: 1510, baseType: !237, size: 32, offset: 32)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_TDSEL_CLR", scope: !678, file: !154, line: 1511, baseType: !237, size: 32, offset: 64)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !678, file: !154, line: 1512, baseType: !528, size: 32, offset: 96)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET14", scope: !517, file: !154, line: 1551, baseType: !618, size: 1536, offset: 27136)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_CLKOUT_REGISTER", scope: !517, file: !154, line: 1552, baseType: !686, size: 768, offset: 28672)
!686 = !DICompositeType(tag: DW_TAG_array_type, baseType: !687, size: 768, elements: !77)
!687 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_CLKOUT_REGISTER_T", file: !154, line: 1519, baseType: !688)
!688 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !154, line: 1516, size: 128, elements: !689)
!689 = !{!690, !691}
!690 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_CLKOUT", scope: !688, file: !154, line: 1517, baseType: !237, size: 32)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !688, file: !154, line: 1518, baseType: !574, size: 96, offset: 32)
!692 = !DIGlobalVariableExpression(var: !693, expr: !DIExpression())
!693 = distinct !DIGlobalVariable(name: "g_uart_hwstatus", scope: !694, file: !695, line: 101, type: !887, isLocal: true, isDefinition: true)
!694 = distinct !DICompileUnit(language: DW_LANG_C99, file: !695, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !696, retainedTypes: !798, globals: !808, splitDebugInlining: false, nameTableKind: None)
!695 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_uart.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/powerkey/GCC")
!696 = !{!697, !704, !719, !725, !731, !736, !741, !748, !764, !770, !774, !779, !786, !794}
!697 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !15, line: 180, baseType: !16, size: 32, elements: !698)
!698 = !{!699, !700, !701, !702, !703}
!699 = !DIEnumerator(name: "HAL_UART_0", value: 0)
!700 = !DIEnumerator(name: "HAL_UART_1", value: 1)
!701 = !DIEnumerator(name: "HAL_UART_2", value: 2)
!702 = !DIEnumerator(name: "HAL_UART_3", value: 3)
!703 = !DIEnumerator(name: "HAL_UART_MAX", value: 4)
!704 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !705, line: 189, baseType: !16, size: 32, elements: !706)
!705 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_pdma_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/powerkey/GCC")
!706 = !{!707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718}
!707 = !DIEnumerator(name: "VDMA_START_CHANNEL", value: 8)
!708 = !DIEnumerator(name: "VDMA_UART1TX", value: 8)
!709 = !DIEnumerator(name: "VDMA_UART1RX", value: 9)
!710 = !DIEnumerator(name: "VDMA_UART2TX", value: 10)
!711 = !DIEnumerator(name: "VDMA_UART2RX", value: 11)
!712 = !DIEnumerator(name: "VDMA_UART3TX", value: 12)
!713 = !DIEnumerator(name: "VDMA_UART3RX", value: 13)
!714 = !DIEnumerator(name: "VDMA_UART0TX", value: 14)
!715 = !DIEnumerator(name: "VDMA_UART0RX", value: 15)
!716 = !DIEnumerator(name: "VDMA_BTIFTX", value: 16)
!717 = !DIEnumerator(name: "VDMA_BTIFRX", value: 17)
!718 = !DIEnumerator(name: "VDMA_END_CHANNEL", value: 18)
!719 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !720, line: 355, baseType: !7, size: 32, elements: !721)
!720 = !DIFile(filename: "../../../../../driver/chip/inc/hal_uart.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/powerkey/GCC")
!721 = !{!722, !723, !724}
!722 = !DIEnumerator(name: "HAL_UART_EVENT_TRANSACTION_ERROR", value: -1)
!723 = !DIEnumerator(name: "HAL_UART_EVENT_READY_TO_READ", value: 1)
!724 = !DIEnumerator(name: "HAL_UART_EVENT_READY_TO_WRITE", value: 2)
!725 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !705, line: 206, baseType: !7, size: 32, elements: !726)
!726 = !{!727, !728, !729, !730}
!727 = !DIEnumerator(name: "VDMA_ERROR", value: -3)
!728 = !DIEnumerator(name: "VDMA_ERROR_CHANNEL", value: -2)
!729 = !DIEnumerator(name: "VDMA_INVALID_PARAMETER", value: -1)
!730 = !DIEnumerator(name: "VDMA_OK", value: 0)
!731 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !695, line: 65, baseType: !16, size: 32, elements: !732)
!732 = !{!733, !734, !735}
!733 = !DIEnumerator(name: "UART_HWSTATUS_UNINITIALIZED", value: 0)
!734 = !DIEnumerator(name: "UART_HWSTATUS_POLL_INITIALIZED", value: 1)
!735 = !DIEnumerator(name: "UART_HWSTATUS_DMA_INITIALIZED", value: 2)
!736 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !695, line: 77, baseType: !16, size: 32, elements: !737)
!737 = !{!738, !739, !740}
!738 = !DIEnumerator(name: "UART_FLOWCONTROL_NONE", value: 0)
!739 = !DIEnumerator(name: "UART_FLOWCONTROL_SOFTWARE", value: 1)
!740 = !DIEnumerator(name: "UART_FLOWCONTROL_HARDWARE", value: 2)
!741 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !720, line: 345, baseType: !7, size: 32, elements: !742)
!742 = !{!743, !744, !745, !746, !747}
!743 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR_PARAMETER", value: -4)
!744 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR_BUSY", value: -3)
!745 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR_UNINITIALIZED", value: -2)
!746 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR", value: -1)
!747 = !DIEnumerator(name: "HAL_UART_STATUS_OK", value: 0)
!748 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !720, line: 302, baseType: !16, size: 32, elements: !749)
!749 = !{!750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763}
!750 = !DIEnumerator(name: "HAL_UART_BAUDRATE_110", value: 0)
!751 = !DIEnumerator(name: "HAL_UART_BAUDRATE_300", value: 1)
!752 = !DIEnumerator(name: "HAL_UART_BAUDRATE_1200", value: 2)
!753 = !DIEnumerator(name: "HAL_UART_BAUDRATE_2400", value: 3)
!754 = !DIEnumerator(name: "HAL_UART_BAUDRATE_4800", value: 4)
!755 = !DIEnumerator(name: "HAL_UART_BAUDRATE_9600", value: 5)
!756 = !DIEnumerator(name: "HAL_UART_BAUDRATE_19200", value: 6)
!757 = !DIEnumerator(name: "HAL_UART_BAUDRATE_38400", value: 7)
!758 = !DIEnumerator(name: "HAL_UART_BAUDRATE_57600", value: 8)
!759 = !DIEnumerator(name: "HAL_UART_BAUDRATE_115200", value: 9)
!760 = !DIEnumerator(name: "HAL_UART_BAUDRATE_230400", value: 10)
!761 = !DIEnumerator(name: "HAL_UART_BAUDRATE_460800", value: 11)
!762 = !DIEnumerator(name: "HAL_UART_BAUDRATE_921600", value: 12)
!763 = !DIEnumerator(name: "HAL_UART_BAUDRATE_MAX", value: 13)
!764 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !720, line: 321, baseType: !16, size: 32, elements: !765)
!765 = !{!766, !767, !768, !769}
!766 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_5", value: 0)
!767 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_6", value: 1)
!768 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_7", value: 2)
!769 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_8", value: 3)
!770 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !720, line: 330, baseType: !16, size: 32, elements: !771)
!771 = !{!772, !773}
!772 = !DIEnumerator(name: "HAL_UART_STOP_BIT_1", value: 0)
!773 = !DIEnumerator(name: "HAL_UART_STOP_BIT_2", value: 1)
!774 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !720, line: 337, baseType: !16, size: 32, elements: !775)
!775 = !{!776, !777, !778}
!776 = !DIEnumerator(name: "HAL_UART_PARITY_NONE", value: 0)
!777 = !DIEnumerator(name: "HAL_UART_PARITY_ODD", value: 1)
!778 = !DIEnumerator(name: "HAL_UART_PARITY_EVEN", value: 2)
!779 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !780, line: 101, baseType: !7, size: 32, elements: !781)
!780 = !DIFile(filename: "../../../../../driver/chip/inc/hal_clock.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/powerkey/GCC")
!781 = !{!782, !783, !784, !785}
!782 = !DIEnumerator(name: "HAL_CLOCK_STATUS_UNINITIALIZED", value: -3)
!783 = !DIEnumerator(name: "HAL_CLOCK_STATUS_INVALID_PARAMETER", value: -2)
!784 = !DIEnumerator(name: "HAL_CLOCK_STATUS_ERROR", value: -1)
!785 = !DIEnumerator(name: "HAL_CLOCK_STATUS_OK", value: 0)
!786 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !787, line: 152, baseType: !7, size: 32, elements: !788)
!787 = !DIFile(filename: "../../../../../driver/chip/inc/hal_nvic.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/powerkey/GCC")
!788 = !{!789, !790, !791, !792, !793}
!789 = !DIEnumerator(name: "HAL_NVIC_STATUS_ERROR_NO_ISR", value: -4)
!790 = !DIEnumerator(name: "HAL_NVIC_STATUS_ERROR_IRQ_NUMBER", value: -3)
!791 = !DIEnumerator(name: "HAL_NVIC_STATUS_INVALID_PARAMETER", value: -2)
!792 = !DIEnumerator(name: "HAL_NVIC_STATUS_ERROR", value: -1)
!793 = !DIEnumerator(name: "HAL_NVIC_STATUS_OK", value: 0)
!794 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !705, line: 222, baseType: !7, size: 32, elements: !795)
!795 = !{!796, !797}
!796 = !DIEnumerator(name: "VDMA_EVENT_TRANSACTION_ERROR", value: -1)
!797 = !DIEnumerator(name: "VDMA_EVENT_TRANSACTION_SUCCESS", value: 0)
!798 = !{!65, !799, !61, !800}
!799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !82, size: 32)
!800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !801, size: 32)
!801 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_dma_callback_data_t", file: !802, line: 96, baseType: !803)
!802 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_uart_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/powerkey/GCC")
!803 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !802, line: 93, size: 64, elements: !804)
!804 = !{!805, !806}
!805 = !DIDerivedType(tag: DW_TAG_member, name: "is_rx", scope: !803, file: !802, line: 94, baseType: !263, size: 8)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "uart_port", scope: !803, file: !802, line: 95, baseType: !807, size: 32, offset: 32)
!807 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_port_t", file: !15, line: 186, baseType: !697)
!808 = !{!809, !812, !814, !816, !818, !822, !831, !845, !692, !847, !860, !865, !879, !885}
!809 = !DIGlobalVariableExpression(var: !810, expr: !DIExpression())
!810 = distinct !DIGlobalVariable(name: "g_uart_frist_send_complete_interrupt", scope: !694, file: !695, line: 92, type: !811, isLocal: true, isDefinition: true)
!811 = !DICompositeType(tag: DW_TAG_array_type, baseType: !263, size: 32, elements: !529)
!812 = !DIGlobalVariableExpression(var: !813, expr: !DIExpression())
!813 = distinct !DIGlobalVariable(name: "g_uart_restore_init", scope: !694, file: !695, line: 93, type: !263, isLocal: true, isDefinition: true)
!814 = !DIGlobalVariableExpression(var: !815, expr: !DIExpression())
!815 = distinct !DIGlobalVariable(name: "g_uart_send_lock_status", scope: !694, file: !695, line: 94, type: !811, isLocal: true, isDefinition: true)
!816 = !DIGlobalVariableExpression(var: !817, expr: !DIExpression())
!817 = distinct !DIGlobalVariable(name: "g_uart_sleep_handler", scope: !694, file: !695, line: 95, type: !528, isLocal: true, isDefinition: true)
!818 = !DIGlobalVariableExpression(var: !819, expr: !DIExpression())
!819 = distinct !DIGlobalVariable(name: "g_uart_flowcontrol_status", scope: !694, file: !695, line: 96, type: !820, isLocal: true, isDefinition: true)
!820 = !DICompositeType(tag: DW_TAG_array_type, baseType: !821, size: 128, elements: !529)
!821 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_flowcontrol_t", file: !695, line: 81, baseType: !736)
!822 = !DIGlobalVariableExpression(var: !823, expr: !DIExpression())
!823 = distinct !DIGlobalVariable(name: "g_uart_sw_flowcontrol_config", scope: !694, file: !695, line: 97, type: !824, isLocal: true, isDefinition: true)
!824 = !DICompositeType(tag: DW_TAG_array_type, baseType: !825, size: 96, elements: !529)
!825 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_sw_flowcontrol_config_t", file: !695, line: 87, baseType: !826)
!826 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !695, line: 83, size: 24, elements: !827)
!827 = !{!828, !829, !830}
!828 = !DIDerivedType(tag: DW_TAG_member, name: "xon", scope: !826, file: !695, line: 84, baseType: !74, size: 8)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "xoff", scope: !826, file: !695, line: 85, baseType: !74, size: 8, offset: 8)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "escape_character", scope: !826, file: !695, line: 86, baseType: !74, size: 8, offset: 16)
!831 = !DIGlobalVariableExpression(var: !832, expr: !DIExpression())
!832 = distinct !DIGlobalVariable(name: "g_uart_config", scope: !694, file: !695, line: 98, type: !833, isLocal: true, isDefinition: true)
!833 = !DICompositeType(tag: DW_TAG_array_type, baseType: !834, size: 512, elements: !529)
!834 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_config_t", file: !720, line: 378, baseType: !835)
!835 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !720, line: 373, size: 128, elements: !836)
!836 = !{!837, !839, !841, !843}
!837 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !835, file: !720, line: 374, baseType: !838, size: 32)
!838 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_baudrate_t", file: !720, line: 317, baseType: !748)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "word_length", scope: !835, file: !720, line: 375, baseType: !840, size: 32, offset: 32)
!840 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_word_length_t", file: !720, line: 326, baseType: !764)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bit", scope: !835, file: !720, line: 376, baseType: !842, size: 32, offset: 64)
!842 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_stop_bit_t", file: !720, line: 333, baseType: !770)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !835, file: !720, line: 377, baseType: !844, size: 32, offset: 96)
!844 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_parity_t", file: !720, line: 341, baseType: !774)
!845 = !DIGlobalVariableExpression(var: !846, expr: !DIExpression())
!846 = distinct !DIGlobalVariable(name: "g_uart_irq_pending_status", scope: !694, file: !695, line: 99, type: !811, isLocal: true, isDefinition: true)
!847 = !DIGlobalVariableExpression(var: !848, expr: !DIExpression())
!848 = distinct !DIGlobalVariable(name: "g_uart_callback", scope: !694, file: !695, line: 102, type: !849, isLocal: true, isDefinition: true)
!849 = !DICompositeType(tag: DW_TAG_array_type, baseType: !850, size: 256, elements: !529)
!850 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_callback_t", file: !695, line: 74, baseType: !851)
!851 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !695, line: 71, size: 64, elements: !852)
!852 = !{!853, !859}
!853 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !851, file: !695, line: 72, baseType: !854, size: 32)
!854 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_callback_t", file: !720, line: 410, baseType: !855)
!855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !856, size: 32)
!856 = !DISubroutineType(types: !857)
!857 = !{null, !858, !65}
!858 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_callback_event_t", file: !720, line: 359, baseType: !719)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !851, file: !695, line: 73, baseType: !65, size: 32, offset: 32)
!860 = !DIGlobalVariableExpression(var: !861, expr: !DIExpression())
!861 = distinct !DIGlobalVariable(name: "g_uart_dma_callback_data", scope: !694, file: !695, line: 103, type: !862, isLocal: true, isDefinition: true)
!862 = !DICompositeType(tag: DW_TAG_array_type, baseType: !801, size: 512, elements: !863)
!863 = !{!864}
!864 = !DISubrange(count: 8)
!865 = !DIGlobalVariableExpression(var: !866, expr: !DIExpression())
!866 = distinct !DIGlobalVariable(name: "g_uart_dma_config", scope: !694, file: !695, line: 104, type: !867, isLocal: true, isDefinition: true)
!867 = !DICompositeType(tag: DW_TAG_array_type, baseType: !868, size: 896, elements: !529)
!868 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_dma_config_t", file: !720, line: 390, baseType: !869)
!869 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !720, line: 382, size: 224, elements: !870)
!870 = !{!871, !873, !874, !875, !876, !877, !878}
!871 = !DIDerivedType(tag: DW_TAG_member, name: "send_vfifo_buffer", scope: !869, file: !720, line: 383, baseType: !872, size: 32)
!872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !74, size: 32)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "send_vfifo_buffer_size", scope: !869, file: !720, line: 384, baseType: !61, size: 32, offset: 32)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "send_vfifo_threshold_size", scope: !869, file: !720, line: 385, baseType: !61, size: 32, offset: 64)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_buffer", scope: !869, file: !720, line: 386, baseType: !872, size: 32, offset: 96)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_buffer_size", scope: !869, file: !720, line: 387, baseType: !61, size: 32, offset: 128)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_threshold_size", scope: !869, file: !720, line: 388, baseType: !61, size: 32, offset: 160)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_alert_size", scope: !869, file: !720, line: 389, baseType: !61, size: 32, offset: 192)
!879 = !DIGlobalVariableExpression(var: !880, expr: !DIExpression())
!880 = distinct !DIGlobalVariable(name: "g_uart_baudrate_map", scope: !694, file: !695, line: 105, type: !881, isLocal: true, isDefinition: true)
!881 = !DICompositeType(tag: DW_TAG_array_type, baseType: !882, size: 416, elements: !883)
!882 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !61)
!883 = !{!884}
!884 = !DISubrange(count: 13)
!885 = !DIGlobalVariableExpression(var: !886, expr: !DIExpression())
!886 = distinct !DIGlobalVariable(name: "g_uart_global_data_initialized", scope: !694, file: !695, line: 90, type: !263, isLocal: true, isDefinition: true)
!887 = !DICompositeType(tag: DW_TAG_array_type, baseType: !888, size: 128, elements: !529)
!888 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !889)
!889 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_hwstatus_t", file: !695, line: 69, baseType: !731)
!890 = !DIGlobalVariableExpression(var: !813, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!891 = !DIGlobalVariableExpression(var: !886, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!892 = !DIGlobalVariableExpression(var: !893, expr: !DIExpression())
!893 = distinct !DIGlobalVariable(name: "g_uart_regbase", scope: !894, file: !895, line: 53, type: !979, isLocal: false, isDefinition: true)
!894 = distinct !DICompileUnit(language: DW_LANG_C99, file: !895, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !896, retainedTypes: !907, globals: !963, splitDebugInlining: false, nameTableKind: None)
!895 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_uart_internal_platform.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/powerkey/GCC")
!896 = !{!88, !153, !704, !697, !897}
!897 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !802, line: 46, baseType: !16, size: 32, elements: !898)
!898 = !{!899, !900, !901, !902, !903, !904, !905, !906}
!899 = !DIEnumerator(name: "UART_INTERRUPT_NONE", value: 0)
!900 = !DIEnumerator(name: "UART_INTERRUPT_RECEIVE_ERROR", value: 1)
!901 = !DIEnumerator(name: "UART_INTERRUPT_RECEIVE_TIMEOUT", value: 2)
!902 = !DIEnumerator(name: "UART_INTERRUPT_RECEIVE_BREAK", value: 3)
!903 = !DIEnumerator(name: "UART_INTERRUPT_RECEIVE_AVAILABLE", value: 4)
!904 = !DIEnumerator(name: "UART_INTERRUPT_SEND_AVAILABLE", value: 5)
!905 = !DIEnumerator(name: "UART_INTERRUPT_SOFTWARE_FLOWCONTROL", value: 6)
!906 = !DIEnumerator(name: "UART_INTERRUPT_HARDWARE_FLOWCONTROL", value: 7)
!907 = !{!908}
!908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !909, size: 32)
!909 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_REGISTER_T", file: !154, line: 588, baseType: !910)
!910 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !154, line: 542, size: 800, elements: !911)
!911 = !{!912, !918, !923, !929, !930, !935, !940, !941, !946, !947, !948, !949, !950, !951, !952, !953, !954, !955, !956, !957, !958, !959, !960, !961, !962}
!912 = !DIDerivedType(tag: DW_TAG_member, name: "RBR_THR_DLL", scope: !910, file: !154, line: 547, baseType: !913, size: 32)
!913 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !910, file: !154, line: 543, size: 32, elements: !914)
!914 = !{!915, !916, !917}
!915 = !DIDerivedType(tag: DW_TAG_member, name: "RBR", scope: !913, file: !154, line: 544, baseType: !241, size: 32)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "THR", scope: !913, file: !154, line: 545, baseType: !237, size: 32)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "DLL", scope: !913, file: !154, line: 546, baseType: !237, size: 32)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "IER_DLM", scope: !910, file: !154, line: 551, baseType: !919, size: 32, offset: 32)
!919 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !910, file: !154, line: 548, size: 32, elements: !920)
!920 = !{!921, !922}
!921 = !DIDerivedType(tag: DW_TAG_member, name: "IER", scope: !919, file: !154, line: 549, baseType: !237, size: 32)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "DLM", scope: !919, file: !154, line: 550, baseType: !237, size: 32)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "IIR_FCR_EFR", scope: !910, file: !154, line: 556, baseType: !924, size: 32, offset: 64)
!924 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !910, file: !154, line: 552, size: 32, elements: !925)
!925 = !{!926, !927, !928}
!926 = !DIDerivedType(tag: DW_TAG_member, name: "IIR", scope: !924, file: !154, line: 553, baseType: !241, size: 32)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "FCR", scope: !924, file: !154, line: 554, baseType: !237, size: 32)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "EFR", scope: !924, file: !154, line: 555, baseType: !237, size: 32)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "LCR", scope: !910, file: !154, line: 557, baseType: !237, size: 32, offset: 96)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "MCR_XON1", scope: !910, file: !154, line: 561, baseType: !931, size: 32, offset: 128)
!931 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !910, file: !154, line: 558, size: 32, elements: !932)
!932 = !{!933, !934}
!933 = !DIDerivedType(tag: DW_TAG_member, name: "MCR", scope: !931, file: !154, line: 559, baseType: !237, size: 32)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "XON1", scope: !931, file: !154, line: 560, baseType: !237, size: 32)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "LSR_XON2", scope: !910, file: !154, line: 565, baseType: !936, size: 32, offset: 160)
!936 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !910, file: !154, line: 562, size: 32, elements: !937)
!937 = !{!938, !939}
!938 = !DIDerivedType(tag: DW_TAG_member, name: "LSR", scope: !936, file: !154, line: 563, baseType: !241, size: 32)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "XON2", scope: !936, file: !154, line: 564, baseType: !237, size: 32)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF1", scope: !910, file: !154, line: 566, baseType: !237, size: 32, offset: 192)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "SCR_XOFF2", scope: !910, file: !154, line: 570, baseType: !942, size: 32, offset: 224)
!942 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !910, file: !154, line: 567, size: 32, elements: !943)
!943 = !{!944, !945}
!944 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !942, file: !154, line: 568, baseType: !237, size: 32)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF2", scope: !942, file: !154, line: 569, baseType: !237, size: 32)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_EN", scope: !910, file: !154, line: 571, baseType: !237, size: 32, offset: 256)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "HIGHSPEED", scope: !910, file: !154, line: 572, baseType: !237, size: 32, offset: 288)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_COUNT", scope: !910, file: !154, line: 573, baseType: !237, size: 32, offset: 320)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_POINT", scope: !910, file: !154, line: 574, baseType: !237, size: 32, offset: 352)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_REG", scope: !910, file: !154, line: 575, baseType: !241, size: 32, offset: 384)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "RATEFIX_AD", scope: !910, file: !154, line: 576, baseType: !237, size: 32, offset: 416)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUDSAMPLE", scope: !910, file: !154, line: 577, baseType: !237, size: 32, offset: 448)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "GUARD", scope: !910, file: !154, line: 578, baseType: !237, size: 32, offset: 480)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_DAT", scope: !910, file: !154, line: 579, baseType: !237, size: 32, offset: 512)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_EN", scope: !910, file: !154, line: 580, baseType: !237, size: 32, offset: 544)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEP_EN", scope: !910, file: !154, line: 581, baseType: !237, size: 32, offset: 576)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "DMA_EN", scope: !910, file: !154, line: 582, baseType: !237, size: 32, offset: 608)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "RXTRI_AD", scope: !910, file: !154, line: 583, baseType: !237, size: 32, offset: 640)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_L", scope: !910, file: !154, line: 584, baseType: !237, size: 32, offset: 672)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_M", scope: !910, file: !154, line: 585, baseType: !237, size: 32, offset: 704)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "FCR_RD", scope: !910, file: !154, line: 586, baseType: !241, size: 32, offset: 736)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "TX_ACTIVE_EN", scope: !910, file: !154, line: 587, baseType: !237, size: 32, offset: 768)
!963 = !{!892, !964, !969, !975}
!964 = !DIGlobalVariableExpression(var: !965, expr: !DIExpression())
!965 = distinct !DIGlobalVariable(name: "g_uart_port_to_pdn", scope: !894, file: !895, line: 54, type: !966, isLocal: false, isDefinition: true)
!966 = !DICompositeType(tag: DW_TAG_array_type, baseType: !967, size: 128, elements: !529)
!967 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !968)
!968 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_clock_cg_id", file: !15, line: 1237, baseType: !88)
!969 = !DIGlobalVariableExpression(var: !970, expr: !DIExpression())
!970 = distinct !DIGlobalVariable(name: "g_uart_port_to_irq_num", scope: !894, file: !895, line: 55, type: !971, isLocal: false, isDefinition: true)
!971 = !DICompositeType(tag: DW_TAG_array_type, baseType: !972, size: 128, elements: !529)
!972 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !973)
!973 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_nvic_irq_t", file: !154, line: 125, baseType: !974)
!974 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !154, line: 123, baseType: !153)
!975 = !DIGlobalVariableExpression(var: !976, expr: !DIExpression())
!976 = distinct !DIGlobalVariable(name: "g_uart_sleep_handler_name", scope: !894, file: !895, line: 57, type: !977, isLocal: false, isDefinition: true)
!977 = !DICompositeType(tag: DW_TAG_array_type, baseType: !978, size: 128, elements: !529)
!978 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !80)
!979 = !DICompositeType(tag: DW_TAG_array_type, baseType: !980, size: 128, elements: !529)
!980 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !908)
!981 = !DIGlobalVariableExpression(var: !982, expr: !DIExpression())
!982 = distinct !DIGlobalVariable(name: "g_i2c_tx_dma_channel", scope: !983, file: !984, line: 47, type: !1097, isLocal: false, isDefinition: true)
!983 = distinct !DICompileUnit(language: DW_LANG_C99, file: !984, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !985, globals: !1030, splitDebugInlining: false, nameTableKind: None)
!984 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_i2c_master_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/powerkey/GCC")
!985 = !{!986, !88, !996, !1006, !1023}
!986 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !705, line: 137, baseType: !16, size: 32, elements: !987)
!987 = !{!988, !989, !990, !991, !992, !993, !994, !995}
!988 = !DIEnumerator(name: "PDMA_START_CHANNEL", value: 1)
!989 = !DIEnumerator(name: "PDMA_MSDC1", value: 1)
!990 = !DIEnumerator(name: "PDMA_MSDC2", value: 2)
!991 = !DIEnumerator(name: "PDMA_I2C0_TX", value: 3)
!992 = !DIEnumerator(name: "PDMA_I2C0_RX", value: 4)
!993 = !DIEnumerator(name: "PDMA_I2C1_TX", value: 5)
!994 = !DIEnumerator(name: "PDMA_I2C1_RX", value: 6)
!995 = !DIEnumerator(name: "PDMA_END_CHANNEL", value: 7)
!996 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !997, line: 132, baseType: !16, size: 32, elements: !998)
!997 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_i2c_master_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/powerkey/GCC")
!998 = !{!999, !1000, !1001, !1002, !1003, !1004, !1005}
!999 = !DIEnumerator(name: "I2C_FREQUENCY_50K", value: 50)
!1000 = !DIEnumerator(name: "I2C_FREQUENCY_100K", value: 100)
!1001 = !DIEnumerator(name: "I2C_FREQUENCY_200K", value: 200)
!1002 = !DIEnumerator(name: "I2C_FREQUENCY_300K", value: 300)
!1003 = !DIEnumerator(name: "I2C_FREQUENCY_400K", value: 400)
!1004 = !DIEnumerator(name: "I2C_FREQUENCY_1M", value: 1000)
!1005 = !DIEnumerator(name: "I2C_FREQUENCY_MAX", value: 1001)
!1006 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !997, line: 142, baseType: !16, size: 32, elements: !1007)
!1007 = !{!1008, !1009, !1010, !1011, !1012, !1013, !1014, !1015, !1016, !1017, !1018, !1019, !1020, !1021, !1022}
!1008 = !DIEnumerator(name: "I2C_TRANSACTION_PUSH_PULL_SEND_POLLING", value: 0)
!1009 = !DIEnumerator(name: "I2C_TRANSACTION_PUSH_PULL_SEND_DMA", value: 1)
!1010 = !DIEnumerator(name: "I2C_TRANSACTION_PUSH_PULL_RECEIVE_POLLING", value: 2)
!1011 = !DIEnumerator(name: "I2C_TRANSACTION_PUSH_PULL_RECEIVE_DMA", value: 3)
!1012 = !DIEnumerator(name: "I2C_TRANSACTION_PUSH_PULL_SEND_TO_RECEIVE_POLLING", value: 4)
!1013 = !DIEnumerator(name: "I2C_TRANSACTION_PUSH_PULL_SEND_TO_RECEIVE_DMA", value: 5)
!1014 = !DIEnumerator(name: "I2C_TRANSACTION_OPEN_DRAIN_SEND_POLLING", value: 6)
!1015 = !DIEnumerator(name: "I2C_TRANSACTION_OPEN_DRAIN_SEND_DMA", value: 7)
!1016 = !DIEnumerator(name: "I2C_TRANSACTION_OPEN_DRAIN_RECEIVE_POLLING", value: 8)
!1017 = !DIEnumerator(name: "I2C_TRANSACTION_OPEN_DRAIN_RECEIVE_DMA", value: 9)
!1018 = !DIEnumerator(name: "I2C_TRANSACTION_OPEN_DRAIN_SEND_TO_RECEIVE_POLLING", value: 10)
!1019 = !DIEnumerator(name: "I2C_TRANSACTION_OPEN_DRAIN_SEND_TO_RECEIVE_DMA", value: 11)
!1020 = !DIEnumerator(name: "I2C_TRANSACTION_OPEN_DRAIN_SEND_DMA_EXTEND", value: 12)
!1021 = !DIEnumerator(name: "I2C_TRANSACTION_OPEN_DRAIN_RECEIVE_DMA_EXTEND", value: 13)
!1022 = !DIEnumerator(name: "I2C_TRANSACTION_OPEN_DRAIN_SEND_TO_RECEIVE_DMA_EXTEND", value: 14)
!1023 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !997, line: 162, baseType: !7, size: 32, elements: !1024)
!1024 = !{!1025, !1026, !1027, !1028, !1029}
!1025 = !DIEnumerator(name: "I2C_TRANSACTION_UNKNOWN_ERROR", value: -4)
!1026 = !DIEnumerator(name: "I2C_TRANSACTION_ACK_ERROR", value: -3)
!1027 = !DIEnumerator(name: "I2C_TRANSACTION_NACK_ERROR", value: -2)
!1028 = !DIEnumerator(name: "I2C_TRANSACTION_TIMEOUT_ERROR", value: -1)
!1029 = !DIEnumerator(name: "I2C_TRANSACTION_SUCCESS", value: 0)
!1030 = !{!1031, !981, !1095, !1100, !1102}
!1031 = !DIGlobalVariableExpression(var: !1032, expr: !DIExpression())
!1032 = distinct !DIGlobalVariable(name: "i2c_master_register", scope: !983, file: !984, line: 46, type: !1033, isLocal: false, isDefinition: true)
!1033 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1034, size: 128, elements: !529)
!1034 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1035)
!1035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1036, size: 32)
!1036 = !DIDerivedType(tag: DW_TAG_typedef, name: "I2C_REGISTER_T", file: !154, line: 1885, baseType: !1037)
!1037 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !154, line: 1833, size: 960, elements: !1038)
!1038 = !{!1039, !1044, !1045, !1046, !1047, !1048, !1049, !1050, !1051, !1052, !1053, !1054, !1055, !1056, !1057, !1058, !1059, !1060, !1061, !1062, !1063, !1065, !1066, !1067, !1068, !1069, !1070, !1071, !1072, !1073, !1074, !1075, !1076, !1077, !1078, !1079, !1080, !1081, !1082, !1084, !1085, !1086, !1087, !1088, !1089, !1090, !1091, !1092, !1093, !1094}
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "DATA_PORT", scope: !1037, file: !154, line: 1834, baseType: !1040, size: 16)
!1040 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1041)
!1041 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !62, line: 36, baseType: !1042)
!1042 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint16_t", file: !64, line: 57, baseType: !1043)
!1043 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1037, file: !154, line: 1835, baseType: !1040, size: 16, offset: 16)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "SLAVE_ADDR", scope: !1037, file: !154, line: 1836, baseType: !1040, size: 16, offset: 32)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1037, file: !154, line: 1837, baseType: !1040, size: 16, offset: 48)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "INTR_MASK", scope: !1037, file: !154, line: 1838, baseType: !1040, size: 16, offset: 64)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1037, file: !154, line: 1839, baseType: !1040, size: 16, offset: 80)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "INTR_STAT", scope: !1037, file: !154, line: 1840, baseType: !1040, size: 16, offset: 96)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1037, file: !154, line: 1841, baseType: !1040, size: 16, offset: 112)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "CONTROL", scope: !1037, file: !154, line: 1842, baseType: !1040, size: 16, offset: 128)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1037, file: !154, line: 1843, baseType: !1040, size: 16, offset: 144)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "TRANSFER_LEN", scope: !1037, file: !154, line: 1844, baseType: !1040, size: 16, offset: 160)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1037, file: !154, line: 1845, baseType: !1040, size: 16, offset: 176)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "TRANSAC_LEN", scope: !1037, file: !154, line: 1846, baseType: !1040, size: 16, offset: 192)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !1037, file: !154, line: 1847, baseType: !1040, size: 16, offset: 208)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "DELAY_LEN", scope: !1037, file: !154, line: 1848, baseType: !1040, size: 16, offset: 224)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED8", scope: !1037, file: !154, line: 1849, baseType: !1040, size: 16, offset: 240)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "TIMING", scope: !1037, file: !154, line: 1850, baseType: !1040, size: 16, offset: 256)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED9", scope: !1037, file: !154, line: 1851, baseType: !1040, size: 16, offset: 272)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "START", scope: !1037, file: !154, line: 1852, baseType: !1040, size: 16, offset: 288)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED10", scope: !1037, file: !154, line: 1853, baseType: !1040, size: 16, offset: 304)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED11", scope: !1037, file: !154, line: 1854, baseType: !1064, size: 32, offset: 320)
!1064 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1040, size: 32, elements: !531)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "CLOCK_DIV", scope: !1037, file: !154, line: 1855, baseType: !1040, size: 16, offset: 352)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED12", scope: !1037, file: !154, line: 1856, baseType: !1040, size: 16, offset: 368)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "FIFO_STAT", scope: !1037, file: !154, line: 1857, baseType: !1040, size: 16, offset: 384)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED13", scope: !1037, file: !154, line: 1858, baseType: !1040, size: 16, offset: 400)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "FIFO_THRESH", scope: !1037, file: !154, line: 1859, baseType: !1040, size: 16, offset: 416)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED14", scope: !1037, file: !154, line: 1860, baseType: !1040, size: 16, offset: 432)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "FIFO_ADDR_CLR", scope: !1037, file: !154, line: 1861, baseType: !1040, size: 16, offset: 448)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED15", scope: !1037, file: !154, line: 1862, baseType: !1040, size: 16, offset: 464)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED16", scope: !1037, file: !154, line: 1863, baseType: !1064, size: 32, offset: 480)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "IO_CONFIG", scope: !1037, file: !154, line: 1864, baseType: !1040, size: 16, offset: 512)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED17", scope: !1037, file: !154, line: 1865, baseType: !1040, size: 16, offset: 528)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED18", scope: !1037, file: !154, line: 1866, baseType: !1064, size: 32, offset: 544)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "HS", scope: !1037, file: !154, line: 1867, baseType: !1040, size: 16, offset: 576)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED19", scope: !1037, file: !154, line: 1868, baseType: !1040, size: 16, offset: 592)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED20", scope: !1037, file: !154, line: 1869, baseType: !1064, size: 32, offset: 608)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "SOFTRESET", scope: !1037, file: !154, line: 1870, baseType: !1040, size: 16, offset: 640)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED21", scope: !1037, file: !154, line: 1871, baseType: !1040, size: 16, offset: 656)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED22", scope: !1037, file: !154, line: 1872, baseType: !1083, size: 96, offset: 672)
!1083 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1040, size: 96, elements: !77)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "SPARE", scope: !1037, file: !154, line: 1873, baseType: !1040, size: 16, offset: 768)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED23", scope: !1037, file: !154, line: 1874, baseType: !1040, size: 16, offset: 784)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "DEBUGSTAT", scope: !1037, file: !154, line: 1875, baseType: !1040, size: 16, offset: 800)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED24", scope: !1037, file: !154, line: 1876, baseType: !1040, size: 16, offset: 816)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "DEBUGCTRL", scope: !1037, file: !154, line: 1877, baseType: !1040, size: 16, offset: 832)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED25", scope: !1037, file: !154, line: 1878, baseType: !1040, size: 16, offset: 848)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "TRANSFER_LEN_AUX", scope: !1037, file: !154, line: 1879, baseType: !1040, size: 16, offset: 864)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED26", scope: !1037, file: !154, line: 1880, baseType: !1040, size: 16, offset: 880)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED27", scope: !1037, file: !154, line: 1881, baseType: !1064, size: 32, offset: 896)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "TIMEOUT", scope: !1037, file: !154, line: 1882, baseType: !1040, size: 16, offset: 928)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED28", scope: !1037, file: !154, line: 1883, baseType: !1040, size: 16, offset: 944)
!1095 = !DIGlobalVariableExpression(var: !1096, expr: !DIExpression())
!1096 = distinct !DIGlobalVariable(name: "g_i2c_rx_dma_channel", scope: !983, file: !984, line: 48, type: !1097, isLocal: false, isDefinition: true)
!1097 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1098, size: 128, elements: !529)
!1098 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1099)
!1099 = !DIDerivedType(tag: DW_TAG_typedef, name: "pdma_channel_t", file: !705, line: 147, baseType: !986)
!1100 = !DIGlobalVariableExpression(var: !1101, expr: !DIExpression())
!1101 = distinct !DIGlobalVariable(name: "g_i2c_pdn_table", scope: !983, file: !984, line: 49, type: !966, isLocal: false, isDefinition: true)
!1102 = !DIGlobalVariableExpression(var: !1103, expr: !DIExpression())
!1103 = distinct !DIGlobalVariable(name: "g_i2c_source_clock_table", scope: !983, file: !984, line: 52, type: !1104, isLocal: false, isDefinition: true)
!1104 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 128, elements: !529)
!1105 = !DIGlobalVariableExpression(var: !1106, expr: !DIExpression())
!1106 = distinct !DIGlobalVariable(name: "EINT_REGISTER", scope: !1107, file: !1108, line: 55, type: !1198, isLocal: false, isDefinition: true)
!1107 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1108, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1109, retainedTypes: !1164, globals: !1170, splitDebugInlining: false, nameTableKind: None)
!1108 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_eint.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/powerkey/GCC")
!1109 = !{!1110, !1117, !1152, !153, !1159}
!1110 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1111, line: 204, baseType: !7, size: 32, elements: !1112)
!1111 = !DIFile(filename: "../../../../../driver/chip/inc/hal_eint.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/powerkey/GCC")
!1112 = !{!1113, !1114, !1115, !1116}
!1113 = !DIEnumerator(name: "HAL_EINT_STATUS_ERROR_EINT_NUMBER", value: -3)
!1114 = !DIEnumerator(name: "HAL_EINT_STATUS_INVALID_PARAMETER", value: -2)
!1115 = !DIEnumerator(name: "HAL_EINT_STATUS_ERROR", value: -1)
!1116 = !DIEnumerator(name: "HAL_EINT_STATUS_OK", value: 0)
!1117 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !15, line: 787, baseType: !16, size: 32, elements: !1118)
!1118 = !{!1119, !1120, !1121, !1122, !1123, !1124, !1125, !1126, !1127, !1128, !1129, !1130, !1131, !1132, !1133, !1134, !1135, !1136, !1137, !1138, !1139, !1140, !1141, !1142, !1143, !1144, !1145, !1146, !1147, !1148, !1149, !1150, !1151}
!1119 = !DIEnumerator(name: "HAL_EINT_NUMBER_0", value: 0)
!1120 = !DIEnumerator(name: "HAL_EINT_NUMBER_1", value: 1)
!1121 = !DIEnumerator(name: "HAL_EINT_NUMBER_2", value: 2)
!1122 = !DIEnumerator(name: "HAL_EINT_NUMBER_3", value: 3)
!1123 = !DIEnumerator(name: "HAL_EINT_NUMBER_4", value: 4)
!1124 = !DIEnumerator(name: "HAL_EINT_NUMBER_5", value: 5)
!1125 = !DIEnumerator(name: "HAL_EINT_NUMBER_6", value: 6)
!1126 = !DIEnumerator(name: "HAL_EINT_NUMBER_7", value: 7)
!1127 = !DIEnumerator(name: "HAL_EINT_NUMBER_8", value: 8)
!1128 = !DIEnumerator(name: "HAL_EINT_NUMBER_9", value: 9)
!1129 = !DIEnumerator(name: "HAL_EINT_NUMBER_10", value: 10)
!1130 = !DIEnumerator(name: "HAL_EINT_NUMBER_11", value: 11)
!1131 = !DIEnumerator(name: "HAL_EINT_NUMBER_12", value: 12)
!1132 = !DIEnumerator(name: "HAL_EINT_NUMBER_13", value: 13)
!1133 = !DIEnumerator(name: "HAL_EINT_NUMBER_14", value: 14)
!1134 = !DIEnumerator(name: "HAL_EINT_NUMBER_15", value: 15)
!1135 = !DIEnumerator(name: "HAL_EINT_NUMBER_16", value: 16)
!1136 = !DIEnumerator(name: "HAL_EINT_NUMBER_17", value: 17)
!1137 = !DIEnumerator(name: "HAL_EINT_NUMBER_18", value: 18)
!1138 = !DIEnumerator(name: "HAL_EINT_NUMBER_19", value: 19)
!1139 = !DIEnumerator(name: "HAL_EINT_KEYPAD", value: 20)
!1140 = !DIEnumerator(name: "HAL_EINT_UART_0_RX", value: 21)
!1141 = !DIEnumerator(name: "HAL_EINT_UART_1_RX", value: 22)
!1142 = !DIEnumerator(name: "HAL_EINT_UART_2_RX", value: 23)
!1143 = !DIEnumerator(name: "HAL_EINT_UART_3_RX", value: 24)
!1144 = !DIEnumerator(name: "HAL_EINT_BTSYS", value: 25)
!1145 = !DIEnumerator(name: "HAL_EINT_BTSYS_BTIF", value: 26)
!1146 = !DIEnumerator(name: "HAL_EINT_USB", value: 27)
!1147 = !DIEnumerator(name: "HAL_EINT_ACCDET", value: 28)
!1148 = !DIEnumerator(name: "HAL_EINT_RTC", value: 29)
!1149 = !DIEnumerator(name: "HAL_EINT_PMIC", value: 30)
!1150 = !DIEnumerator(name: "HAL_EINT_GPCOUNTER", value: 31)
!1151 = !DIEnumerator(name: "HAL_EINT_NUMBER_MAX", value: 32)
!1152 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1111, line: 194, baseType: !16, size: 32, elements: !1153)
!1153 = !{!1154, !1155, !1156, !1157, !1158}
!1154 = !DIEnumerator(name: "HAL_EINT_LEVEL_LOW", value: 0)
!1155 = !DIEnumerator(name: "HAL_EINT_LEVEL_HIGH", value: 1)
!1156 = !DIEnumerator(name: "HAL_EINT_EDGE_FALLING", value: 2)
!1157 = !DIEnumerator(name: "HAL_EINT_EDGE_RISING", value: 3)
!1158 = !DIEnumerator(name: "HAL_EINT_EDGE_FALLING_AND_RISING", value: 4)
!1159 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1160, line: 59, baseType: !16, size: 32, elements: !1161)
!1160 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_eint_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/powerkey/GCC")
!1161 = !{!1162, !1163}
!1162 = !DIEnumerator(name: "EINT_DOMAIN_DISABLE", value: 0)
!1163 = !DIEnumerator(name: "EINT_DOMAIN_ENABLE", value: 1)
!1164 = !{!1165, !65, !1169}
!1165 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_nvic_isr_t", file: !787, line: 175, baseType: !1166)
!1166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1167, size: 32)
!1167 = !DISubroutineType(types: !1168)
!1168 = !{null, !973}
!1169 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_eint_number_t", file: !15, line: 821, baseType: !1117)
!1170 = !{!1105, !1171, !1190}
!1171 = !DIGlobalVariableExpression(var: !1172, expr: !DIExpression())
!1172 = distinct !DIGlobalVariable(name: "ini_state", scope: !1173, file: !1108, line: 134, type: !61, isLocal: true, isDefinition: true)
!1173 = distinct !DISubprogram(name: "hal_eint_init", scope: !1108, file: !1108, line: 130, type: !1174, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1107, retainedNodes: !1185)
!1174 = !DISubroutineType(types: !1175)
!1175 = !{!1176, !1169, !1177}
!1176 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_eint_status_t", file: !1111, line: 209, baseType: !1110)
!1177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1178, size: 32)
!1178 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1179)
!1179 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_eint_config_t", file: !1111, line: 225, baseType: !1180)
!1180 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1111, line: 222, size: 64, elements: !1181)
!1181 = !{!1182, !1184}
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "trigger_mode", scope: !1180, file: !1111, line: 223, baseType: !1183, size: 32)
!1183 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_eint_trigger_mode_t", file: !1111, line: 200, baseType: !1152)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "debounce_time", scope: !1180, file: !1111, line: 224, baseType: !61, size: 32, offset: 32)
!1185 = !{!1186, !1187, !1188, !1189}
!1186 = !DILocalVariable(name: "eint_number", arg: 1, scope: !1173, file: !1108, line: 130, type: !1169)
!1187 = !DILocalVariable(name: "eint_config", arg: 2, scope: !1173, file: !1108, line: 130, type: !1177)
!1188 = !DILocalVariable(name: "status", scope: !1173, file: !1108, line: 132, type: !1176)
!1189 = !DILocalVariable(name: "mask", scope: !1173, file: !1108, line: 133, type: !61)
!1190 = !DIGlobalVariableExpression(var: !1191, expr: !DIExpression())
!1191 = distinct !DIGlobalVariable(name: "eint_function_table", scope: !1107, file: !1108, line: 56, type: !1192, isLocal: true, isDefinition: true)
!1192 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1193, size: 2048, elements: !294)
!1193 = !DIDerivedType(tag: DW_TAG_typedef, name: "eint_function_t", file: !1160, line: 44, baseType: !1194)
!1194 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1160, line: 41, size: 64, elements: !1195)
!1195 = !{!1196, !1197}
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "eint_callback", scope: !1194, file: !1160, line: 42, baseType: !67, size: 32)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !1194, file: !1160, line: 43, baseType: !65, size: 32, offset: 32)
!1198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1199, size: 32)
!1199 = !DIDerivedType(tag: DW_TAG_typedef, name: "EINT_REGISTER_T", file: !154, line: 2305, baseType: !1200)
!1200 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !154, line: 2264, size: 4096, elements: !1201)
!1201 = !{!1202, !1203, !1204, !1205, !1206, !1207, !1211, !1212, !1213, !1214, !1215, !1216, !1217, !1218, !1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226, !1227, !1228, !1229, !1230, !1231, !1232, !1233, !1234, !1235, !1236, !1237, !1238, !1239, !1240, !1241, !1242, !1246}
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "EINT_STA", scope: !1200, file: !154, line: 2265, baseType: !241, size: 32)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1200, file: !154, line: 2266, baseType: !61, size: 32, offset: 32)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "EITN_INTACK", scope: !1200, file: !154, line: 2267, baseType: !237, size: 32, offset: 64)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1200, file: !154, line: 2268, baseType: !61, size: 32, offset: 96)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "EINT_EEVT", scope: !1200, file: !154, line: 2269, baseType: !241, size: 32, offset: 128)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1200, file: !154, line: 2270, baseType: !1208, size: 96, offset: 160)
!1208 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 96, elements: !1209)
!1209 = !{!1210}
!1210 = !DISubrange(count: 3)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "EINT_MASK", scope: !1200, file: !154, line: 2271, baseType: !241, size: 32, offset: 256)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1200, file: !154, line: 2272, baseType: !61, size: 32, offset: 288)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "EINT_MASK_SET", scope: !1200, file: !154, line: 2273, baseType: !237, size: 32, offset: 320)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1200, file: !154, line: 2274, baseType: !61, size: 32, offset: 352)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "EINT_MASK_CLR", scope: !1200, file: !154, line: 2275, baseType: !237, size: 32, offset: 384)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1200, file: !154, line: 2276, baseType: !1208, size: 96, offset: 416)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "EINT_WAKEUP_MASK", scope: !1200, file: !154, line: 2277, baseType: !241, size: 32, offset: 512)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1200, file: !154, line: 2278, baseType: !61, size: 32, offset: 544)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "EINT_WAKEUP_MASK_SET", scope: !1200, file: !154, line: 2280, baseType: !237, size: 32, offset: 576)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !1200, file: !154, line: 2281, baseType: !61, size: 32, offset: 608)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "EINT_WAKEUP_MASK_CLR", scope: !1200, file: !154, line: 2282, baseType: !237, size: 32, offset: 640)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED8", scope: !1200, file: !154, line: 2283, baseType: !1208, size: 96, offset: 672)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "EINT_SENS", scope: !1200, file: !154, line: 2284, baseType: !241, size: 32, offset: 768)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED9", scope: !1200, file: !154, line: 2285, baseType: !61, size: 32, offset: 800)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "EINT_SENS_SET", scope: !1200, file: !154, line: 2286, baseType: !237, size: 32, offset: 832)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED10", scope: !1200, file: !154, line: 2287, baseType: !61, size: 32, offset: 864)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "EINT_SENS_CLR", scope: !1200, file: !154, line: 2288, baseType: !237, size: 32, offset: 896)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED11", scope: !1200, file: !154, line: 2289, baseType: !1208, size: 96, offset: 928)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "EINT_DUALEDGE_SENS", scope: !1200, file: !154, line: 2290, baseType: !241, size: 32, offset: 1024)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED12", scope: !1200, file: !154, line: 2291, baseType: !61, size: 32, offset: 1056)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "EINT_DUALEDGE_SENS_SET", scope: !1200, file: !154, line: 2292, baseType: !237, size: 32, offset: 1088)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED13", scope: !1200, file: !154, line: 2293, baseType: !61, size: 32, offset: 1120)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "EINT_DUALEDGE_SENS_CLR", scope: !1200, file: !154, line: 2294, baseType: !237, size: 32, offset: 1152)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED14", scope: !1200, file: !154, line: 2295, baseType: !1208, size: 96, offset: 1184)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "EINT_SOFT", scope: !1200, file: !154, line: 2296, baseType: !241, size: 32, offset: 1280)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED15", scope: !1200, file: !154, line: 2297, baseType: !61, size: 32, offset: 1312)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "EINT_SOFT_SET", scope: !1200, file: !154, line: 2298, baseType: !237, size: 32, offset: 1344)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED16", scope: !1200, file: !154, line: 2299, baseType: !61, size: 32, offset: 1376)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "EINT_SOFT_CLR", scope: !1200, file: !154, line: 2300, baseType: !237, size: 32, offset: 1408)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED17", scope: !1200, file: !154, line: 2301, baseType: !1208, size: 96, offset: 1440)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "EINT_DOMEN", scope: !1200, file: !154, line: 2302, baseType: !237, size: 32, offset: 1536)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED18", scope: !1200, file: !154, line: 2303, baseType: !1243, size: 480, offset: 1568)
!1243 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 480, elements: !1244)
!1244 = !{!1245}
!1245 = !DISubrange(count: 15)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "EINT_CON", scope: !1200, file: !154, line: 2304, baseType: !1247, size: 2048, offset: 2048)
!1247 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1248, size: 2048, elements: !1266)
!1248 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1249)
!1249 = !DIDerivedType(tag: DW_TAG_typedef, name: "EINT_CON_REGISTER_T", file: !154, line: 2261, baseType: !1250)
!1250 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !154, line: 2259, size: 32, elements: !1251)
!1251 = !{!1252}
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "CON_REGISTER", scope: !1250, file: !154, line: 2260, baseType: !1253, size: 32)
!1253 = !DIDerivedType(tag: DW_TAG_typedef, name: "EINT_CON_T", file: !154, line: 2257, baseType: !1254)
!1254 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !154, line: 2246, size: 32, elements: !1255)
!1255 = !{!1256, !1265}
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "EINT_CON_B", scope: !1254, file: !154, line: 2255, baseType: !1257, size: 32)
!1257 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1254, file: !154, line: 2247, size: 32, elements: !1258)
!1258 = !{!1259, !1260, !1261, !1262, !1263, !1264}
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "EINT_CNT", scope: !1257, file: !154, line: 2248, baseType: !61, size: 10, flags: DIFlagBitField, extraData: i64 0)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "EINT_POL", scope: !1257, file: !154, line: 2250, baseType: !61, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "EINT_PRESCALER", scope: !1257, file: !154, line: 2251, baseType: !61, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "EINT_EN", scope: !1257, file: !154, line: 2252, baseType: !61, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !1257, file: !154, line: 2253, baseType: !61, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "RSTDBC", scope: !1257, file: !154, line: 2254, baseType: !61, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "EINT_CON_W", scope: !1254, file: !154, line: 2256, baseType: !61, size: 32)
!1266 = !{!1267}
!1267 = !DISubrange(count: 64)
!1268 = !DIGlobalVariableExpression(var: !1172, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!1269 = !DIGlobalVariableExpression(var: !1270, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!1270 = distinct !DIGlobalVariable(name: "priority_set", scope: !1271, file: !1272, line: 128, type: !61, isLocal: true, isDefinition: true)
!1271 = distinct !DISubprogram(name: "hal_nvic_init", scope: !1272, file: !1272, line: 126, type: !1273, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1276, retainedNodes: !1358)
!1272 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_nvic.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/powerkey/GCC")
!1273 = !DISubroutineType(types: !1274)
!1274 = !{!1275}
!1275 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_nvic_status_t", file: !787, line: 158, baseType: !786)
!1276 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1272, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1277, retainedTypes: !1278, globals: !1345, splitDebugInlining: false, nameTableKind: None)
!1277 = !{!786, !153}
!1278 = !{!973, !1279, !61, !1313, !1343}
!1279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1280, size: 32)
!1280 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1281, line: 418, baseType: !1282)
!1281 = !DIFile(filename: "../../../../../driver/CMSIS/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/powerkey/GCC")
!1282 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1281, line: 395, size: 1120, elements: !1283)
!1283 = !{!1284, !1285, !1286, !1287, !1288, !1289, !1290, !1293, !1294, !1295, !1296, !1297, !1298, !1299, !1300, !1302, !1303, !1304, !1306, !1310, !1312}
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1282, file: !1281, line: 397, baseType: !241, size: 32)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1282, file: !1281, line: 398, baseType: !237, size: 32, offset: 32)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1282, file: !1281, line: 399, baseType: !237, size: 32, offset: 64)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1282, file: !1281, line: 400, baseType: !237, size: 32, offset: 96)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1282, file: !1281, line: 401, baseType: !237, size: 32, offset: 128)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1282, file: !1281, line: 402, baseType: !237, size: 32, offset: 160)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1282, file: !1281, line: 403, baseType: !1291, size: 96, offset: 192)
!1291 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1292, size: 96, elements: !575)
!1292 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !74)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1282, file: !1281, line: 404, baseType: !237, size: 32, offset: 288)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1282, file: !1281, line: 405, baseType: !237, size: 32, offset: 320)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1282, file: !1281, line: 406, baseType: !237, size: 32, offset: 352)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1282, file: !1281, line: 407, baseType: !237, size: 32, offset: 384)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1282, file: !1281, line: 408, baseType: !237, size: 32, offset: 416)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1282, file: !1281, line: 409, baseType: !237, size: 32, offset: 448)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1282, file: !1281, line: 410, baseType: !237, size: 32, offset: 480)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1282, file: !1281, line: 411, baseType: !1301, size: 64, offset: 512)
!1301 = !DICompositeType(tag: DW_TAG_array_type, baseType: !241, size: 64, elements: !531)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1282, file: !1281, line: 412, baseType: !241, size: 32, offset: 576)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1282, file: !1281, line: 413, baseType: !241, size: 32, offset: 608)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1282, file: !1281, line: 414, baseType: !1305, size: 128, offset: 640)
!1305 = !DICompositeType(tag: DW_TAG_array_type, baseType: !241, size: 128, elements: !529)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1282, file: !1281, line: 415, baseType: !1307, size: 160, offset: 768)
!1307 = !DICompositeType(tag: DW_TAG_array_type, baseType: !241, size: 160, elements: !1308)
!1308 = !{!1309}
!1309 = !DISubrange(count: 5)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1282, file: !1281, line: 416, baseType: !1311, size: 160, offset: 928)
!1311 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 160, elements: !1308)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1282, file: !1281, line: 417, baseType: !237, size: 32, offset: 1088)
!1313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1314, size: 32)
!1314 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !1281, line: 378, baseType: !1315)
!1315 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1281, line: 363, size: 28704, elements: !1316)
!1316 = !{!1317, !1319, !1323, !1324, !1325, !1326, !1327, !1328, !1329, !1330, !1334, !1338, !1342}
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1315, file: !1281, line: 365, baseType: !1318, size: 256)
!1318 = !DICompositeType(tag: DW_TAG_array_type, baseType: !237, size: 256, elements: !863)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1315, file: !1281, line: 366, baseType: !1320, size: 768, offset: 256)
!1320 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 768, elements: !1321)
!1321 = !{!1322}
!1322 = !DISubrange(count: 24)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1315, file: !1281, line: 367, baseType: !1318, size: 256, offset: 1024)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "RSERVED1", scope: !1315, file: !1281, line: 368, baseType: !1320, size: 768, offset: 1280)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1315, file: !1281, line: 369, baseType: !1318, size: 256, offset: 2048)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1315, file: !1281, line: 370, baseType: !1320, size: 768, offset: 2304)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1315, file: !1281, line: 371, baseType: !1318, size: 256, offset: 3072)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1315, file: !1281, line: 372, baseType: !1320, size: 768, offset: 3328)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1315, file: !1281, line: 373, baseType: !1318, size: 256, offset: 4096)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1315, file: !1281, line: 374, baseType: !1331, size: 1792, offset: 4352)
!1331 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 1792, elements: !1332)
!1332 = !{!1333}
!1333 = !DISubrange(count: 56)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1315, file: !1281, line: 375, baseType: !1335, size: 1920, offset: 6144)
!1335 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1292, size: 1920, elements: !1336)
!1336 = !{!1337}
!1337 = !DISubrange(count: 240)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1315, file: !1281, line: 376, baseType: !1339, size: 20608, offset: 8064)
!1339 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 20608, elements: !1340)
!1340 = !{!1341}
!1341 = !DISubrange(count: 644)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1315, file: !1281, line: 377, baseType: !237, size: 32, offset: 28672)
!1343 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !62, line: 44, baseType: !1344)
!1344 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int32_t", file: !64, line: 77, baseType: !7)
!1345 = !{!1346, !1347, !1355}
!1346 = !DIGlobalVariableExpression(var: !1270, expr: !DIExpression())
!1347 = !DIGlobalVariableExpression(var: !1348, expr: !DIExpression())
!1348 = distinct !DIGlobalVariable(name: "nvic_function_table", scope: !1276, file: !1272, line: 119, type: !1349, isLocal: false, isDefinition: true)
!1349 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1350, size: 4096, elements: !1266)
!1350 = !DIDerivedType(tag: DW_TAG_typedef, name: "nvic_function_t", file: !1272, line: 50, baseType: !1351)
!1351 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1272, line: 47, size: 64, elements: !1352)
!1352 = !{!1353, !1354}
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "nvic_callback", scope: !1351, file: !1272, line: 48, baseType: !1166, size: 32)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "irq_pending", scope: !1351, file: !1272, line: 49, baseType: !61, size: 32, offset: 32)
!1355 = !DIGlobalVariableExpression(var: !1356, expr: !DIExpression())
!1356 = distinct !DIGlobalVariable(name: "defualt_irq_priority", scope: !1276, file: !1272, line: 52, type: !1357, isLocal: true, isDefinition: true)
!1357 = !DICompositeType(tag: DW_TAG_array_type, baseType: !882, size: 2048, elements: !1266)
!1358 = !{!1359}
!1359 = !DILocalVariable(name: "i", scope: !1271, file: !1272, line: 129, type: !61)
!1360 = !DIGlobalVariableExpression(var: !1361, expr: !DIExpression())
!1361 = distinct !DIGlobalVariable(name: "DelayResume", scope: !1362, file: !1363, line: 55, type: !263, isLocal: false, isDefinition: true)
!1362 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1363, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1364, retainedTypes: !1399, globals: !1435, splitDebugInlining: false, nameTableKind: None)
!1363 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_mtd_common.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/powerkey/GCC")
!1364 = !{!1365, !1373, !1378}
!1365 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "sfi_clock_enum_t", file: !1366, line: 51, baseType: !16, size: 32, elements: !1367)
!1366 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_sfi_release.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/powerkey/GCC")
!1367 = !{!1368, !1369, !1370, !1371, !1372}
!1368 = !DIEnumerator(name: "SFI_CLK_UNKNOWN", value: 0)
!1369 = !DIEnumerator(name: "SFI_CLK_78MHZ", value: 78)
!1370 = !DIEnumerator(name: "SFI_CLK_104MHZ", value: 104)
!1371 = !DIEnumerator(name: "SFI_CLK_130MHZ", value: 130)
!1372 = !DIEnumerator(name: "SFI_CLK_166MHZ", value: 166)
!1373 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "sfi_voltage_enum_t", file: !1366, line: 62, baseType: !16, size: 32, elements: !1374)
!1374 = !{!1375, !1376, !1377}
!1375 = !DIEnumerator(name: "SFI_Voltage_UNKNOWN", value: 0)
!1376 = !DIEnumerator(name: "SFI_Voltage_18", value: 18)
!1377 = !DIEnumerator(name: "SFI_Voltage_30", value: 30)
!1378 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1379, line: 228, baseType: !16, size: 32, elements: !1380)
!1379 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_clock_platform_mt2523.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/powerkey/GCC")
!1380 = !{!1381, !1382, !1383, !1384, !1385, !1386, !1387, !1388, !1389, !1390, !1391, !1392, !1393, !1394, !1395, !1396, !1397, !1398}
!1381 = !DIEnumerator(name: "BUS_MUX_SEL", value: 0)
!1382 = !DIEnumerator(name: "CM_MUX_SEL", value: 1)
!1383 = !DIEnumerator(name: "SFC_MUX_SEL", value: 2)
!1384 = !DIEnumerator(name: "SLCD_MUX_SEL", value: 3)
!1385 = !DIEnumerator(name: "BSI_MUX_SEL", value: 4)
!1386 = !DIEnumerator(name: "DSP_MUX_SEL", value: 5)
!1387 = !DIEnumerator(name: "CAM_MUX_SEL", value: 6)
!1388 = !DIEnumerator(name: "USB_MUX_SEL", value: 7)
!1389 = !DIEnumerator(name: "DISP_PWM_MUX_SEL", value: 8)
!1390 = !DIEnumerator(name: "MSDC0_MUX_SEL", value: 9)
!1391 = !DIEnumerator(name: "MSDC1_MUX_SEL", value: 10)
!1392 = !DIEnumerator(name: "LP_CLKSQ_MUX_SEL", value: 11)
!1393 = !DIEnumerator(name: "LP_LFOSC_MUX_SEL", value: 12)
!1394 = !DIEnumerator(name: "RG_SLCD_CK_SEL", value: 13)
!1395 = !DIEnumerator(name: "GP_F26M_GFMUX_SEL", value: 14)
!1396 = !DIEnumerator(name: "LP_F26M_GFMUX_SEL", value: 15)
!1397 = !DIEnumerator(name: "NR_MUXS", value: 16)
!1398 = !DIEnumerator(name: "CLK_MUX_SEL_NONE", value: 17)
!1399 = !{!1400, !1401, !1423, !872, !61, !16, !1429, !1431, !1432, !1434}
!1400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !61, size: 32)
!1401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1402, size: 32)
!1402 = !DIDerivedType(tag: DW_TAG_typedef, name: "SFC_REGISTER_T", file: !154, line: 2777, baseType: !1403)
!1403 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !154, line: 2758, size: 576, elements: !1404)
!1404 = !{!1405, !1406, !1407, !1408, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422}
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_CTL", scope: !1403, file: !154, line: 2759, baseType: !237, size: 32)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DIRECT_CTL", scope: !1403, file: !154, line: 2760, baseType: !237, size: 32, offset: 32)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL", scope: !1403, file: !154, line: 2761, baseType: !237, size: 32, offset: 64)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL2", scope: !1403, file: !154, line: 2762, baseType: !237, size: 32, offset: 96)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_OUTL", scope: !1403, file: !154, line: 2763, baseType: !237, size: 32, offset: 128)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_INL", scope: !1403, file: !154, line: 2764, baseType: !237, size: 32, offset: 160)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_RESET_CTL", scope: !1403, file: !154, line: 2765, baseType: !237, size: 32, offset: 192)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_STA2_CTL", scope: !1403, file: !154, line: 2766, baseType: !237, size: 32, offset: 224)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL1", scope: !1403, file: !154, line: 2767, baseType: !237, size: 32, offset: 256)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL2", scope: !1403, file: !154, line: 2768, baseType: !237, size: 32, offset: 288)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL3", scope: !1403, file: !154, line: 2769, baseType: !237, size: 32, offset: 320)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DUMMY1", scope: !1403, file: !154, line: 2770, baseType: !237, size: 32, offset: 352)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL4", scope: !1403, file: !154, line: 2771, baseType: !237, size: 32, offset: 384)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL5", scope: !1403, file: !154, line: 2772, baseType: !237, size: 32, offset: 416)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL6", scope: !1403, file: !154, line: 2773, baseType: !237, size: 32, offset: 448)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DUMMY2", scope: !1403, file: !154, line: 2774, baseType: !237, size: 32, offset: 480)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DIRECT_CTL2", scope: !1403, file: !154, line: 2775, baseType: !237, size: 32, offset: 512)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL3", scope: !1403, file: !154, line: 2776, baseType: !237, size: 32, offset: 544)
!1423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1424, size: 32)
!1424 = !DIDerivedType(tag: DW_TAG_typedef, name: "SFC_GPRAM_REGISTER_T", file: !154, line: 2801, baseType: !1425)
!1425 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !154, line: 2798, size: 64, elements: !1426)
!1426 = !{!1427, !1428}
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_GPRAM_DATA", scope: !1425, file: !154, line: 2799, baseType: !237, size: 32)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_GPRAM_DATA_OF_4", scope: !1425, file: !154, line: 2800, baseType: !237, size: 32, offset: 32)
!1429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1430, size: 32)
!1430 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !16)
!1431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1041, size: 32)
!1432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1433, size: 32)
!1433 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !76)
!1434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !237, size: 32)
!1435 = !{!1360, !1436, !1438, !1440, !1442, !1444, !1446, !1448, !1450, !1452, !1454}
!1436 = !DIGlobalVariableExpression(var: !1437, expr: !DIExpression())
!1437 = distinct !DIGlobalVariable(name: "NOR_FLASH_LeaveDPDCmd", scope: !1362, file: !1363, line: 604, type: !74, isLocal: false, isDefinition: true)
!1438 = !DIGlobalVariableExpression(var: !1439, expr: !DIExpression())
!1439 = distinct !DIGlobalVariable(name: "NOR_FLASH_FATStartAddr", scope: !1362, file: !1363, line: 605, type: !61, isLocal: false, isDefinition: true)
!1440 = !DIGlobalVariableExpression(var: !1441, expr: !DIExpression())
!1441 = distinct !DIGlobalVariable(name: "NOR_FLASH_FATStartValue", scope: !1362, file: !1363, line: 606, type: !61, isLocal: false, isDefinition: true)
!1442 = !DIGlobalVariableExpression(var: !1443, expr: !DIExpression())
!1443 = distinct !DIGlobalVariable(name: "SFI_MAC_CTL_BACKUP", scope: !1362, file: !1363, line: 607, type: !61, isLocal: false, isDefinition: true)
!1444 = !DIGlobalVariableExpression(var: !1445, expr: !DIExpression())
!1445 = distinct !DIGlobalVariable(name: "SFI_DIRECT_CTL_BACKUP", scope: !1362, file: !1363, line: 608, type: !61, isLocal: false, isDefinition: true)
!1446 = !DIGlobalVariableExpression(var: !1447, expr: !DIExpression())
!1447 = distinct !DIGlobalVariable(name: "SFI_MISC_CTL_BACKUP", scope: !1362, file: !1363, line: 609, type: !61, isLocal: false, isDefinition: true)
!1448 = !DIGlobalVariableExpression(var: !1449, expr: !DIExpression())
!1449 = distinct !DIGlobalVariable(name: "SFI_MISC_CTL2_BACKUP", scope: !1362, file: !1363, line: 610, type: !61, isLocal: false, isDefinition: true)
!1450 = !DIGlobalVariableExpression(var: !1451, expr: !DIExpression())
!1451 = distinct !DIGlobalVariable(name: "SFI_DLY_CTL_3_BACKUP", scope: !1362, file: !1363, line: 611, type: !61, isLocal: false, isDefinition: true)
!1452 = !DIGlobalVariableExpression(var: !1453, expr: !DIExpression())
!1453 = distinct !DIGlobalVariable(name: "SFI_CLK_SWITCH_MISC_CTL_BACKUP", scope: !1362, file: !1363, line: 665, type: !61, isLocal: false, isDefinition: true)
!1454 = !DIGlobalVariableExpression(var: !1455, expr: !DIExpression())
!1455 = distinct !DIGlobalVariable(name: "SFI_CLK_SWITCH_DLY_CTL_3_BACKUP", scope: !1362, file: !1363, line: 666, type: !61, isLocal: false, isDefinition: true)
!1456 = !DIGlobalVariableExpression(var: !1457, expr: !DIExpression())
!1457 = distinct !DIGlobalVariable(name: "sf_dal_brbusy_wait", scope: !1458, file: !1459, line: 334, type: !263, isLocal: false, isDefinition: true)
!1458 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1459, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1460, retainedTypes: !1628, globals: !1766, splitDebugInlining: false, nameTableKind: None)
!1459 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_mtd_dal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/powerkey/GCC")
!1460 = !{!1461, !1552, !1558, !1565, !1577, !1588, !1597, !1606, !1610, !1614}
!1461 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1462, line: 58, baseType: !7, size: 32, elements: !1463)
!1462 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_fs_type.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/powerkey/GCC")
!1463 = !{!1464, !1465, !1466, !1467, !1468, !1469, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546, !1547, !1548, !1549, !1550, !1551}
!1464 = !DIEnumerator(name: "FS_NO_ERROR", value: 0)
!1465 = !DIEnumerator(name: "FS_ERROR_RESERVED", value: -1)
!1466 = !DIEnumerator(name: "FS_PARAM_ERROR", value: -2)
!1467 = !DIEnumerator(name: "FS_INVALID_FILENAME", value: -3)
!1468 = !DIEnumerator(name: "FS_DRIVE_NOT_FOUND", value: -4)
!1469 = !DIEnumerator(name: "FS_TOO_MANY_FILES", value: -5)
!1470 = !DIEnumerator(name: "FS_NO_MORE_FILES", value: -6)
!1471 = !DIEnumerator(name: "FS_WRONG_MEDIA", value: -7)
!1472 = !DIEnumerator(name: "FS_INVALID_FILE_SYSTEM", value: -8)
!1473 = !DIEnumerator(name: "FS_FILE_NOT_FOUND", value: -9)
!1474 = !DIEnumerator(name: "FS_INVALID_FILE_HANDLE", value: -10)
!1475 = !DIEnumerator(name: "FS_UNSUPPORTED_DEVICE", value: -11)
!1476 = !DIEnumerator(name: "FS_UNSUPPORTED_DRIVER_FUNCTION", value: -12)
!1477 = !DIEnumerator(name: "FS_CORRUPTED_PARTITION_TABLE", value: -13)
!1478 = !DIEnumerator(name: "FS_TOO_MANY_DRIVES", value: -14)
!1479 = !DIEnumerator(name: "FS_INVALID_FILE_POS", value: -15)
!1480 = !DIEnumerator(name: "FS_ACCESS_DENIED", value: -16)
!1481 = !DIEnumerator(name: "FS_STRING_BUFFER_TOO_SMALL", value: -17)
!1482 = !DIEnumerator(name: "FS_GENERAL_FAILURE", value: -18)
!1483 = !DIEnumerator(name: "FS_PATH_NOT_FOUND", value: -19)
!1484 = !DIEnumerator(name: "FS_FAT_ALLOC_ERROR", value: -20)
!1485 = !DIEnumerator(name: "FS_ROOT_DIR_FULL", value: -21)
!1486 = !DIEnumerator(name: "FS_DISK_FULL", value: -22)
!1487 = !DIEnumerator(name: "FS_TIMEOUT", value: -23)
!1488 = !DIEnumerator(name: "FS_BAD_SECTOR", value: -24)
!1489 = !DIEnumerator(name: "FS_DATA_ERROR", value: -25)
!1490 = !DIEnumerator(name: "FS_MEDIA_CHANGED", value: -26)
!1491 = !DIEnumerator(name: "FS_SECTOR_NOT_FOUND", value: -27)
!1492 = !DIEnumerator(name: "FS_ADDRESS_MARK_NOT_FOUND", value: -28)
!1493 = !DIEnumerator(name: "FS_DRIVE_NOT_READY", value: -29)
!1494 = !DIEnumerator(name: "FS_WRITE_PROTECTION", value: -30)
!1495 = !DIEnumerator(name: "FS_DMA_OVERRUN", value: -31)
!1496 = !DIEnumerator(name: "FS_CRC_ERROR", value: -32)
!1497 = !DIEnumerator(name: "FS_DEVICE_RESOURCE_ERROR", value: -33)
!1498 = !DIEnumerator(name: "FS_INVALID_SECTOR_SIZE", value: -34)
!1499 = !DIEnumerator(name: "FS_OUT_OF_BUFFERS", value: -35)
!1500 = !DIEnumerator(name: "FS_FILE_EXISTS", value: -36)
!1501 = !DIEnumerator(name: "FS_LONG_FILE_POS", value: -37)
!1502 = !DIEnumerator(name: "FS_FILE_TOO_LARGE", value: -38)
!1503 = !DIEnumerator(name: "FS_BAD_DIR_ENTRY", value: -39)
!1504 = !DIEnumerator(name: "FS_ATTR_CONFLICT", value: -40)
!1505 = !DIEnumerator(name: "FS_CHECKDISK_RETRY", value: -41)
!1506 = !DIEnumerator(name: "FS_LACK_OF_PROTECTION_SPACE", value: -42)
!1507 = !DIEnumerator(name: "FS_SYSTEM_CRASH", value: -43)
!1508 = !DIEnumerator(name: "FS_FAIL_GET_MEM", value: -44)
!1509 = !DIEnumerator(name: "FS_READ_ONLY_ERROR", value: -45)
!1510 = !DIEnumerator(name: "FS_DEVICE_BUSY", value: -46)
!1511 = !DIEnumerator(name: "FS_ABORTED_ERROR", value: -47)
!1512 = !DIEnumerator(name: "FS_QUOTA_OVER_DISK_SPACE", value: -48)
!1513 = !DIEnumerator(name: "FS_PATH_OVER_LEN_ERROR", value: -49)
!1514 = !DIEnumerator(name: "FS_APP_QUOTA_FULL", value: -50)
!1515 = !DIEnumerator(name: "FS_VF_MAP_ERROR", value: -51)
!1516 = !DIEnumerator(name: "FS_DEVICE_EXPORTED_ERROR", value: -52)
!1517 = !DIEnumerator(name: "FS_DISK_FRAGMENT", value: -53)
!1518 = !DIEnumerator(name: "FS_DIRCACHE_EXPIRED", value: -54)
!1519 = !DIEnumerator(name: "FS_QUOTA_USAGE_WARNING", value: -55)
!1520 = !DIEnumerator(name: "FS_ERR_DIRDATA_LOCKED", value: -56)
!1521 = !DIEnumerator(name: "FS_INVALID_OPERATION", value: -57)
!1522 = !DIEnumerator(name: "FS_ERR_VF_PARENT_CLOSED", value: -58)
!1523 = !DIEnumerator(name: "FS_ERR_UNSUPPORTED_SERVICE", value: -59)
!1524 = !DIEnumerator(name: "FS_ERR_INVALID_JOB_ID", value: -81)
!1525 = !DIEnumerator(name: "FS_ERR_ASYNC_JOB_NOT_FOUND", value: -82)
!1526 = !DIEnumerator(name: "FS_MSDC_MOUNT_ERROR", value: -100)
!1527 = !DIEnumerator(name: "FS_MSDC_READ_SECTOR_ERROR", value: -101)
!1528 = !DIEnumerator(name: "FS_MSDC_WRITE_SECTOR_ERROR", value: -102)
!1529 = !DIEnumerator(name: "FS_MSDC_DISCARD_SECTOR_ERROR", value: -103)
!1530 = !DIEnumerator(name: "FS_MSDC_PRESNET_NOT_READY", value: -104)
!1531 = !DIEnumerator(name: "FS_MSDC_NOT_PRESENT", value: -105)
!1532 = !DIEnumerator(name: "FS_EXTERNAL_DEVICE_NOT_PRESENT", value: -106)
!1533 = !DIEnumerator(name: "FS_HIGH_LEVEL_FORMAT_ERROR", value: -107)
!1534 = !DIEnumerator(name: "FS_CARD_BATCHCOUNT_NOT_PRESENT", value: -110)
!1535 = !DIEnumerator(name: "FS_FLASH_MOUNT_ERROR", value: -120)
!1536 = !DIEnumerator(name: "FS_FLASH_ERASE_BUSY", value: -121)
!1537 = !DIEnumerator(name: "FS_NAND_DEVICE_NOT_SUPPORTED", value: -122)
!1538 = !DIEnumerator(name: "FS_FLASH_OTP_UNKNOWERR", value: -123)
!1539 = !DIEnumerator(name: "FS_FLASH_OTP_OVERSCOPE", value: -124)
!1540 = !DIEnumerator(name: "FS_FLASH_OTP_WRITEFAIL", value: -125)
!1541 = !DIEnumerator(name: "FS_FDM_VERSION_MISMATCH", value: -126)
!1542 = !DIEnumerator(name: "FS_FLASH_OTP_LOCK_ALREADY", value: -127)
!1543 = !DIEnumerator(name: "FS_FDM_FORMAT_ERROR", value: -128)
!1544 = !DIEnumerator(name: "FS_FDM_USER_DRIVE_BROKEN", value: -129)
!1545 = !DIEnumerator(name: "FS_FDM_SYS_DRIVE_BROKEN", value: -130)
!1546 = !DIEnumerator(name: "FS_FDM_MULTIPLE_BROKEN", value: -131)
!1547 = !DIEnumerator(name: "FS_LOCK_MUTEX_FAIL", value: -141)
!1548 = !DIEnumerator(name: "FS_NO_NONBLOCKMODE", value: -142)
!1549 = !DIEnumerator(name: "FS_NO_PROTECTIONMODE", value: -143)
!1550 = !DIEnumerator(name: "FS_DISK_SIZE_TOO_LARGE", value: -100)
!1551 = !DIEnumerator(name: "FS_MINIMUM_ERROR_CODE", value: -65536)
!1552 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1553, line: 81, baseType: !16, size: 32, elements: !1554)
!1553 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_mtd_sf_dal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/powerkey/GCC")
!1554 = !{!1555, !1556, !1557}
!1555 = !DIEnumerator(name: "SFDRV_READY", value: 0)
!1556 = !DIEnumerator(name: "SFDRV_PROGRAMMING", value: 1)
!1557 = !DIEnumerator(name: "SFDRV_ERASING", value: 2)
!1558 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1459, line: 298, baseType: !16, size: 32, elements: !1559)
!1559 = !{!1560, !1561, !1562, !1563, !1564}
!1560 = !DIEnumerator(name: "sf_fix_winbond_cv", value: 1)
!1561 = !DIEnumerator(name: "sf_fix_winbond_dw", value: 2)
!1562 = !DIEnumerator(name: "sf_fix_mxic_35e", value: 4)
!1563 = !DIEnumerator(name: "sf_fix_fidelix_q32a", value: 8)
!1564 = !DIEnumerator(name: "sf_fix_gigadevice_b", value: 16)
!1565 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1566, line: 51, baseType: !16, size: 32, elements: !1567)
!1566 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_sf.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/powerkey/GCC")
!1567 = !{!1568, !1569, !1570, !1571, !1572, !1573, !1574, !1575, !1576}
!1568 = !DIEnumerator(name: "SF_SR_BUSY", value: 0)
!1569 = !DIEnumerator(name: "SF_SR_WEL", value: 1)
!1570 = !DIEnumerator(name: "SF_SR_WSE", value: 2)
!1571 = !DIEnumerator(name: "SF_SR_WSP", value: 3)
!1572 = !DIEnumerator(name: "SF_SR_BP", value: 4)
!1573 = !DIEnumerator(name: "SF_SR_SRWD", value: 5)
!1574 = !DIEnumerator(name: "SF_SR_OTPLOCK", value: 6)
!1575 = !DIEnumerator(name: "SF_SR_FAIL", value: 7)
!1576 = !DIEnumerator(name: "SF_SR_COUNT", value: 8)
!1577 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1578, line: 110, baseType: !7, size: 32, elements: !1579)
!1578 = !DIFile(filename: "../../../../../driver/chip/inc/hal_flash.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/powerkey/GCC")
!1579 = !{!1580, !1581, !1582, !1583, !1584, !1585, !1586, !1587}
!1580 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_ERASE_FAIL", value: -7)
!1581 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_PROG_FAIL", value: -6)
!1582 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_NO_INIT", value: -5)
!1583 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_NO_SPACE", value: -4)
!1584 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_WRONG_ADDRESS", value: -3)
!1585 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_LOCKED", value: -2)
!1586 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR", value: -1)
!1587 = !DIEnumerator(name: "HAL_FLASH_STATUS_OK", value: 0)
!1588 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1566, line: 73, baseType: !16, size: 32, elements: !1589)
!1589 = !{!1590, !1591, !1592, !1593, !1594, !1595, !1596}
!1590 = !DIEnumerator(name: "SF_MXIC_SR_BUSY", value: 1)
!1591 = !DIEnumerator(name: "SF_MXIC_SR_WEL", value: 2)
!1592 = !DIEnumerator(name: "SF_MXIC_SR_WSE", value: 8)
!1593 = !DIEnumerator(name: "SF_MXIC_SR_WSP", value: 4)
!1594 = !DIEnumerator(name: "SF_MXIC_SR_BP", value: 60)
!1595 = !DIEnumerator(name: "SF_MXIC_SR_SRWD", value: 128)
!1596 = !DIEnumerator(name: "SF_MXIC_SR_ALL", value: 255)
!1597 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1566, line: 83, baseType: !16, size: 32, elements: !1598)
!1598 = !{!1599, !1600, !1601, !1602, !1603, !1604, !1605}
!1599 = !DIEnumerator(name: "SF_MXIC_SSR_OTP", value: 1)
!1600 = !DIEnumerator(name: "SF_MXIC_SSR_LDSO", value: 2)
!1601 = !DIEnumerator(name: "SF_MXIC_SSR_WSP", value: 4)
!1602 = !DIEnumerator(name: "SF_MXIC_SSR_WSE", value: 8)
!1603 = !DIEnumerator(name: "SF_MXIC_SSR_PFAIL", value: 32)
!1604 = !DIEnumerator(name: "SF_MXIC_SSR_EFAIL", value: 64)
!1605 = !DIEnumerator(name: "SF_MXIC_SSR_WPSEL", value: 128)
!1606 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1566, line: 98, baseType: !16, size: 32, elements: !1607)
!1607 = !{!1608, !1609}
!1608 = !DIEnumerator(name: "SF_WINBOND_SSR_SUS", value: 128)
!1609 = !DIEnumerator(name: "SF_WINBOND_SSR_OTP", value: 60)
!1610 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1553, line: 76, baseType: !16, size: 32, elements: !1611)
!1611 = !{!1612, !1613}
!1612 = !DIEnumerator(name: "SF_IOCTRL_UNLOCK_BLOCK", value: 0)
!1613 = !DIEnumerator(name: "SF_IOCTRL_GET_PROGRAM_FAIL_HANDLE_TYPE", value: 1)
!1614 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1553, line: 208, baseType: !16, size: 32, elements: !1615)
!1615 = !{!1616, !1617, !1618, !1619, !1620, !1621, !1622, !1623, !1624, !1625, !1626, !1627}
!1616 = !DIEnumerator(name: "SF_DAL_TYPE_NONE", value: 0)
!1617 = !DIEnumerator(name: "SF_DAL_TYPE_NUMONYX", value: 32)
!1618 = !DIEnumerator(name: "SF_DAL_TYPE_NUMONYX_W", value: 44)
!1619 = !DIEnumerator(name: "SF_DAL_TYPE_EON", value: 28)
!1620 = !DIEnumerator(name: "SF_DAL_TYPE_SST", value: 191)
!1621 = !DIEnumerator(name: "SF_DAL_TYPE_MXIC", value: 194)
!1622 = !DIEnumerator(name: "SF_DAL_TYPE_GIGADEVICE", value: 200)
!1623 = !DIEnumerator(name: "SF_DAL_TYPE_GIGADEVICE_MD", value: 81)
!1624 = !DIEnumerator(name: "SF_DAL_TYPE_WINBOND", value: 239)
!1625 = !DIEnumerator(name: "SF_DAL_TYPE_FIDELIX", value: 248)
!1626 = !DIEnumerator(name: "SF_DAL_TYPE_ESMT", value: 140)
!1627 = !DIEnumerator(name: "SF_DAL_TYPE_COUNT", value: 141)
!1628 = !{!61, !1400, !1431, !872, !1629, !1737, !1759, !65, !1765, !76}
!1629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1630, size: 32)
!1630 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_Data", file: !1553, line: 193, baseType: !1631)
!1631 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1553, line: 134, size: 1824, elements: !1632)
!1632 = !{!1633, !1634, !1635, !1642, !1648, !1652, !1660, !1661, !1668, !1669, !1670, !1671, !1679, !1682, !1712, !1713, !1714, !1715, !1716, !1717, !1718, !1720, !1721, !1722, !1723, !1724, !1725, !1726, !1727, !1731, !1732, !1736}
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !1631, file: !1553, line: 136, baseType: !61, size: 32)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !1631, file: !1553, line: 137, baseType: !872, size: 32, offset: 32)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !1631, file: !1553, line: 138, baseType: !1636, size: 32, offset: 64)
!1636 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !1637, line: 56, baseType: !1638)
!1637 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_kal_public_defs.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/powerkey/GCC")
!1638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1639, size: 32)
!1639 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1637, line: 54, size: 8, elements: !1640)
!1640 = !{!1641}
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1639, file: !1637, line: 55, baseType: !74, size: 8)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !1631, file: !1553, line: 139, baseType: !1643, size: 32, offset: 96)
!1643 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !1637, line: 46, baseType: !1644)
!1644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1645, size: 32)
!1645 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1637, line: 44, size: 8, elements: !1646)
!1646 = !{!1647}
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1645, file: !1637, line: 45, baseType: !74, size: 8)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !1631, file: !1553, line: 140, baseType: !1649, size: 8, offset: 128)
!1649 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !62, line: 20, baseType: !1650)
!1650 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int8_t", file: !64, line: 41, baseType: !1651)
!1651 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !1631, file: !1553, line: 143, baseType: !1653, size: 32, offset: 160)
!1653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1654, size: 32)
!1654 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !1655, line: 146, baseType: !1656)
!1655 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_drvflash.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/powerkey/GCC")
!1656 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1655, line: 143, size: 64, elements: !1657)
!1657 = !{!1658, !1659}
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !1656, file: !1655, line: 144, baseType: !61, size: 32)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !1656, file: !1655, line: 145, baseType: !61, size: 32, offset: 32)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !1631, file: !1553, line: 144, baseType: !872, size: 32, offset: 192)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !1631, file: !1553, line: 145, baseType: !1662, size: 32, offset: 224)
!1662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1663, size: 32)
!1663 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !1655, line: 152, baseType: !1664)
!1664 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1655, line: 149, size: 64, elements: !1665)
!1665 = !{!1666, !1667}
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !1664, file: !1655, line: 150, baseType: !61, size: 32)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !1664, file: !1655, line: 151, baseType: !61, size: 32, offset: 32)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !1631, file: !1553, line: 146, baseType: !872, size: 32, offset: 256)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !1631, file: !1553, line: 147, baseType: !61, size: 32, offset: 288)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !1631, file: !1553, line: 148, baseType: !872, size: 32, offset: 320)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !1631, file: !1553, line: 151, baseType: !1672, size: 1024, offset: 352)
!1672 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1673, size: 1024, elements: !1678)
!1673 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !1655, line: 170, baseType: !1674)
!1674 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1655, line: 167, size: 64, elements: !1675)
!1675 = !{!1676, !1677}
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !1674, file: !1655, line: 168, baseType: !61, size: 32)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !1674, file: !1655, line: 169, baseType: !61, size: 32, offset: 32)
!1678 = !{!864, !532}
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "StatusMap", scope: !1631, file: !1553, line: 155, baseType: !1680, size: 32, offset: 1376)
!1680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1681, size: 32)
!1681 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_Status", file: !1566, line: 120, baseType: !74)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "CMD", scope: !1631, file: !1553, line: 156, baseType: !1683, size: 32, offset: 1408)
!1683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1684, size: 32)
!1684 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_CMD", file: !1553, line: 124, baseType: !1685)
!1685 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1553, line: 90, size: 200, elements: !1686)
!1686 = !{!1687, !1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701, !1702, !1703, !1704, !1705, !1706, !1707, !1708, !1709, !1710, !1711}
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "PageProg", scope: !1685, file: !1553, line: 91, baseType: !74, size: 8)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "WriteEnable", scope: !1685, file: !1553, line: 92, baseType: !74, size: 8, offset: 8)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "Suspend", scope: !1685, file: !1553, line: 94, baseType: !74, size: 8, offset: 16)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "Resume", scope: !1685, file: !1553, line: 95, baseType: !74, size: 8, offset: 24)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "Read", scope: !1685, file: !1553, line: 96, baseType: !74, size: 8, offset: 32)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "Erase", scope: !1685, file: !1553, line: 98, baseType: !74, size: 8, offset: 40)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "Erase4K", scope: !1685, file: !1553, line: 99, baseType: !74, size: 8, offset: 48)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "Erase32K", scope: !1685, file: !1553, line: 100, baseType: !74, size: 8, offset: 56)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "Erase64K", scope: !1685, file: !1553, line: 101, baseType: !74, size: 8, offset: 64)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_SPI", scope: !1685, file: !1553, line: 103, baseType: !74, size: 8, offset: 72)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_QPI", scope: !1685, file: !1553, line: 104, baseType: !74, size: 8, offset: 80)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "ReadBPReg", scope: !1685, file: !1553, line: 106, baseType: !74, size: 8, offset: 88)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "WriteBPReg", scope: !1685, file: !1553, line: 107, baseType: !74, size: 8, offset: 96)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSecurityReg", scope: !1685, file: !1553, line: 108, baseType: !74, size: 8, offset: 104)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "WriteSecurityReg", scope: !1685, file: !1553, line: 109, baseType: !74, size: 8, offset: 112)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSuspendReg", scope: !1685, file: !1553, line: 110, baseType: !74, size: 8, offset: 120)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "ReadReadyReg", scope: !1685, file: !1553, line: 111, baseType: !74, size: 8, offset: 128)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "ReadFailReg", scope: !1685, file: !1553, line: 112, baseType: !74, size: 8, offset: 136)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "EnterDPD", scope: !1685, file: !1553, line: 114, baseType: !74, size: 8, offset: 144)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "LeaveDPD", scope: !1685, file: !1553, line: 115, baseType: !74, size: 8, offset: 152)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "OTPProg", scope: !1685, file: !1553, line: 118, baseType: !74, size: 8, offset: 160)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !1685, file: !1553, line: 119, baseType: !74, size: 8, offset: 168)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "OTPEnter", scope: !1685, file: !1553, line: 120, baseType: !74, size: 8, offset: 176)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "OTPExit", scope: !1685, file: !1553, line: 121, baseType: !74, size: 8, offset: 184)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !1685, file: !1553, line: 122, baseType: !74, size: 8, offset: 192)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "Flag", scope: !1631, file: !1553, line: 157, baseType: !61, size: 32, offset: 1440)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "BPRBitCount", scope: !1631, file: !1553, line: 158, baseType: !1041, size: 16, offset: 1472)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "UniformBlock", scope: !1631, file: !1553, line: 159, baseType: !1041, size: 16, offset: 1488)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLength", scope: !1631, file: !1553, line: 163, baseType: !1041, size: 16, offset: 1504)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "OTPBase", scope: !1631, file: !1553, line: 164, baseType: !1041, size: 16, offset: 1520)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendLatency", scope: !1631, file: !1553, line: 167, baseType: !74, size: 8, offset: 1536)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "FlashID", scope: !1631, file: !1553, line: 168, baseType: !1719, size: 24, offset: 1544)
!1719 = !DICompositeType(tag: DW_TAG_array_type, baseType: !74, size: 24, elements: !1209)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "DriverStatus", scope: !1631, file: !1553, line: 169, baseType: !74, size: 8, offset: 1568)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "AddressCycle", scope: !1631, file: !1553, line: 170, baseType: !74, size: 8, offset: 1576)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "CS", scope: !1631, file: !1553, line: 173, baseType: !1041, size: 16, offset: 1584)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "sf_dal_fix", scope: !1631, file: !1553, line: 174, baseType: !61, size: 32, offset: 1600)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "CS_Size", scope: !1631, file: !1553, line: 175, baseType: !61, size: 32, offset: 1632)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_BUSY", scope: !1631, file: !1553, line: 178, baseType: !263, size: 8, offset: 1664)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_SUSPENDED", scope: !1631, file: !1553, line: 179, baseType: !263, size: 8, offset: 1672)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "UnlockBlock", scope: !1631, file: !1553, line: 182, baseType: !1728, size: 32, offset: 1696)
!1728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1729, size: 32)
!1729 = !DISubroutineType(types: !1730)
!1730 = !{!7, !65}
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !1631, file: !1553, line: 186, baseType: !1728, size: 32, offset: 1728)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !1631, file: !1553, line: 187, baseType: !1733, size: 32, offset: 1760)
!1733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1734, size: 32)
!1734 = !DISubroutineType(types: !1735)
!1735 = !{!7, !65, !61, !65, !61}
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "OTPWrite", scope: !1631, file: !1553, line: 188, baseType: !1733, size: 32, offset: 1792)
!1737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1738, size: 32)
!1738 = !DIDerivedType(tag: DW_TAG_typedef, name: "SFC_REGISTER_T", file: !154, line: 2777, baseType: !1739)
!1739 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !154, line: 2758, size: 576, elements: !1740)
!1740 = !{!1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758}
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_CTL", scope: !1739, file: !154, line: 2759, baseType: !237, size: 32)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DIRECT_CTL", scope: !1739, file: !154, line: 2760, baseType: !237, size: 32, offset: 32)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL", scope: !1739, file: !154, line: 2761, baseType: !237, size: 32, offset: 64)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL2", scope: !1739, file: !154, line: 2762, baseType: !237, size: 32, offset: 96)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_OUTL", scope: !1739, file: !154, line: 2763, baseType: !237, size: 32, offset: 128)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_INL", scope: !1739, file: !154, line: 2764, baseType: !237, size: 32, offset: 160)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_RESET_CTL", scope: !1739, file: !154, line: 2765, baseType: !237, size: 32, offset: 192)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_STA2_CTL", scope: !1739, file: !154, line: 2766, baseType: !237, size: 32, offset: 224)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL1", scope: !1739, file: !154, line: 2767, baseType: !237, size: 32, offset: 256)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL2", scope: !1739, file: !154, line: 2768, baseType: !237, size: 32, offset: 288)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL3", scope: !1739, file: !154, line: 2769, baseType: !237, size: 32, offset: 320)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DUMMY1", scope: !1739, file: !154, line: 2770, baseType: !237, size: 32, offset: 352)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL4", scope: !1739, file: !154, line: 2771, baseType: !237, size: 32, offset: 384)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL5", scope: !1739, file: !154, line: 2772, baseType: !237, size: 32, offset: 416)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL6", scope: !1739, file: !154, line: 2773, baseType: !237, size: 32, offset: 448)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DUMMY2", scope: !1739, file: !154, line: 2774, baseType: !237, size: 32, offset: 480)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DIRECT_CTL2", scope: !1739, file: !154, line: 2775, baseType: !237, size: 32, offset: 512)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL3", scope: !1739, file: !154, line: 2776, baseType: !237, size: 32, offset: 544)
!1759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1760, size: 32)
!1760 = !DIDerivedType(tag: DW_TAG_typedef, name: "SFC_GPRAM_REGISTER_T", file: !154, line: 2801, baseType: !1761)
!1761 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !154, line: 2798, size: 64, elements: !1762)
!1762 = !{!1763, !1764}
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_GPRAM_DATA", scope: !1761, file: !154, line: 2799, baseType: !237, size: 32)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_GPRAM_DATA_OF_4", scope: !1761, file: !154, line: 2800, baseType: !237, size: 32, offset: 32)
!1765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1292, size: 32)
!1766 = !{!1456, !1767, !1769, !1771, !1776}
!1767 = !DIGlobalVariableExpression(var: !1768, expr: !DIExpression())
!1768 = distinct !DIGlobalVariable(name: "sf_dal_resume_time", scope: !1458, file: !1459, line: 382, type: !61, isLocal: false, isDefinition: true)
!1769 = !DIGlobalVariableExpression(var: !1770, expr: !DIExpression())
!1770 = distinct !DIGlobalVariable(name: "sf_dal_flash_return_ready_max", scope: !1458, file: !1459, line: 383, type: !61, isLocal: false, isDefinition: true)
!1771 = !DIGlobalVariableExpression(var: !1772, expr: !DIExpression())
!1772 = distinct !DIGlobalVariable(name: "tmp_data_buffer", scope: !1458, file: !1459, line: 369, type: !1773, isLocal: true, isDefinition: true)
!1773 = !DICompositeType(tag: DW_TAG_array_type, baseType: !74, size: 1024, elements: !1774)
!1774 = !{!1775}
!1775 = !DISubrange(count: 128)
!1776 = !DIGlobalVariableExpression(var: !1777, expr: !DIExpression())
!1777 = distinct !DIGlobalVariable(name: "MTDMutex", scope: !1458, file: !1459, line: 1409, type: !7, isLocal: true, isDefinition: true)
!1778 = !DIGlobalVariableExpression(var: !1777, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 18446744073709551615, DW_OP_mul, DW_OP_constu, 1, DW_OP_plus, DW_OP_stack_value))
!1779 = !DIGlobalVariableExpression(var: !1780, expr: !DIExpression())
!1780 = distinct !DIGlobalVariable(name: "combo_mem_id_list", scope: !1781, file: !1836, line: 35, type: !1837, isLocal: false, isDefinition: true)
!1781 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1782, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1783, retainedTypes: !1829, globals: !1830, splitDebugInlining: false, nameTableKind: None)
!1782 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_combo_init.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/powerkey/GCC")
!1783 = !{!1784}
!1784 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1785, line: 77, baseType: !16, size: 32, elements: !1786)
!1785 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_general_types.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/powerkey/GCC")
!1786 = !{!1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816, !1817, !1818, !1819, !1820, !1821, !1822, !1823, !1824, !1825, !1826, !1827, !1828}
!1787 = !DIEnumerator(name: "GFH_FILE_INFO", value: 0)
!1788 = !DIEnumerator(name: "GFH_BL_INFO", value: 1)
!1789 = !DIEnumerator(name: "GFH_ANTI_CLONE", value: 2)
!1790 = !DIEnumerator(name: "GFH_BL_SEC_KEY", value: 3)
!1791 = !DIEnumerator(name: "GFH_SCTRL_CERT", value: 4)
!1792 = !DIEnumerator(name: "GFH_TOOL_AUTH", value: 5)
!1793 = !DIEnumerator(name: "GFH_MTK_RESERVED1", value: 6)
!1794 = !DIEnumerator(name: "GFH_BROM_CFG", value: 7)
!1795 = !DIEnumerator(name: "GFH_BROM_SEC_CFG", value: 8)
!1796 = !DIEnumerator(name: "GFH_MTK_RESERVED2", value: 9)
!1797 = !DIEnumerator(name: "GFH_MTK_RESERVED3", value: 10)
!1798 = !DIEnumerator(name: "GFH_ROOT_CERT", value: 11)
!1799 = !DIEnumerator(name: "GFH_EXP_CHK", value: 12)
!1800 = !DIEnumerator(name: "GFH_EPP_PARAM", value: 13)
!1801 = !DIEnumerator(name: "GFH_CHIP_VER", value: 14)
!1802 = !DIEnumerator(name: "GFH_MTK_RESERVED4", value: 15)
!1803 = !DIEnumerator(name: "GFH_MD_SEC_CFG", value: 16)
!1804 = !DIEnumerator(name: "GFH_EPP_INFO", value: 256)
!1805 = !DIEnumerator(name: "GFH_EMI_LIST", value: 257)
!1806 = !DIEnumerator(name: "GFH_CMEM_ID_INFO", value: 258)
!1807 = !DIEnumerator(name: "GFH_CMEM_NOR_INFO", value: 259)
!1808 = !DIEnumerator(name: "GFH_DSP_INFO", value: 260)
!1809 = !DIEnumerator(name: "GFH_MAUI_INFO", value: 512)
!1810 = !DIEnumerator(name: "GFH_MAUI_SEC", value: 513)
!1811 = !DIEnumerator(name: "GFH_MAUI_CODE_KEY", value: 514)
!1812 = !DIEnumerator(name: "GFH_MAUI_SECURE_RO_KEY", value: 515)
!1813 = !DIEnumerator(name: "GFH_MAUI_RESOURCE_KEY", value: 516)
!1814 = !DIEnumerator(name: "GFH_SECURE_RO_INFO", value: 517)
!1815 = !DIEnumerator(name: "GFH_DL_PACKAGE_INFO", value: 518)
!1816 = !DIEnumerator(name: "GFH_FLASH_INFO", value: 519)
!1817 = !DIEnumerator(name: "GFH_MACR_INFO", value: 520)
!1818 = !DIEnumerator(name: "GFH_ARM_BL_INFO", value: 521)
!1819 = !DIEnumerator(name: "GFH_EMMC_BOOTING_INFO", value: 522)
!1820 = !DIEnumerator(name: "GFH_FOTA_INFO", value: 523)
!1821 = !DIEnumerator(name: "GFH_CBR_RECORD_INFO", value: 524)
!1822 = !DIEnumerator(name: "GFH_CONFIDENTIAL_BIN_INFO", value: 525)
!1823 = !DIEnumerator(name: "GFH_CBR_INFO", value: 526)
!1824 = !DIEnumerator(name: "GFH_MBA_INFO", value: 527)
!1825 = !DIEnumerator(name: "GFH_BINARY_LOCATION", value: 528)
!1826 = !DIEnumerator(name: "GFH_BOOT_CERT_CTRL_CONTENT", value: 768)
!1827 = !DIEnumerator(name: "GFH_TYPE_NUM", value: 769)
!1828 = !DIEnumerator(name: "GFH_TYPE_END", value: 65535)
!1829 = !{!65}
!1830 = !{!1779, !1831, !1834}
!1831 = !DIGlobalVariableExpression(var: !1832, expr: !DIExpression())
!1832 = distinct !DIGlobalVariable(name: "cmem_index", scope: !1781, file: !1782, line: 96, type: !1833, isLocal: true, isDefinition: true)
!1833 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1834 = !DIGlobalVariableExpression(var: !1835, expr: !DIExpression())
!1835 = distinct !DIGlobalVariable(name: "cmem_emiinit_index", scope: !1781, file: !1782, line: 94, type: !1833, isLocal: true, isDefinition: true)
!1836 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_combo_id.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/powerkey/GCC")
!1837 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1838)
!1838 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_CMEM_ID_INFO_v1", file: !1782, line: 54, baseType: !1839)
!1839 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1782, line: 51, size: 576, elements: !1840)
!1840 = !{!1841, !1851}
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "m_gfh_hdr", scope: !1839, file: !1782, line: 52, baseType: !1842, size: 96)
!1842 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_Header", file: !1785, line: 152, baseType: !1843)
!1843 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GFH_Header", file: !1785, line: 144, size: 96, elements: !1844)
!1844 = !{!1845, !1847, !1849}
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "m_magic_ver", scope: !1843, file: !1785, line: 145, baseType: !1846, size: 32)
!1846 = !DIDerivedType(tag: DW_TAG_typedef, name: "U32", file: !1785, line: 61, baseType: !16)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "m_size", scope: !1843, file: !1785, line: 146, baseType: !1848, size: 16, offset: 32)
!1848 = !DIDerivedType(tag: DW_TAG_typedef, name: "U16", file: !1785, line: 62, baseType: !1043)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "m_type", scope: !1843, file: !1785, line: 150, baseType: !1850, size: 32, offset: 64)
!1850 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_TYPE", file: !1785, line: 127, baseType: !1784)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "m_data", scope: !1839, file: !1782, line: 53, baseType: !1852, size: 480, offset: 96)
!1852 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryIDList", file: !1853, line: 107, baseType: !1854)
!1853 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_combo_defs.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/powerkey/GCC")
!1854 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1853, line: 103, size: 480, elements: !1855)
!1855 = !{!1856, !1857, !1858}
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "m_ver", scope: !1854, file: !1853, line: 104, baseType: !16, size: 32)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "Count", scope: !1854, file: !1853, line: 105, baseType: !16, size: 32, offset: 32)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "List", scope: !1854, file: !1853, line: 106, baseType: !1859, size: 400, offset: 64)
!1859 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1860, size: 400, elements: !1308)
!1860 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryID", file: !1853, line: 100, baseType: !1861)
!1861 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1853, line: 92, size: 80, elements: !1862)
!1862 = !{!1863, !1864, !1865}
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceType", scope: !1861, file: !1853, line: 93, baseType: !74, size: 8)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "IDLength", scope: !1861, file: !1853, line: 94, baseType: !74, size: 8, offset: 8)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "ID", scope: !1861, file: !1853, line: 96, baseType: !1866, size: 64, offset: 16)
!1866 = !DICompositeType(tag: DW_TAG_array_type, baseType: !74, size: 64, elements: !863)
!1867 = !DIGlobalVariableExpression(var: !1868, expr: !DIExpression())
!1868 = distinct !DIGlobalVariable(name: "FLASH_ID", scope: !1869, file: !1872, line: 96, type: !1873, isLocal: false, isDefinition: true)
!1869 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1870, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !1871, splitDebugInlining: false, nameTableKind: None)
!1870 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_custom.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/powerkey/GCC")
!1871 = !{!1867}
!1872 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_custom.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/powerkey/GCC")
!1873 = !DICompositeType(tag: DW_TAG_array_type, baseType: !81, size: 152, elements: !1874)
!1874 = !{!1875}
!1875 = !DISubrange(count: 19)
!1876 = !DIGlobalVariableExpression(var: !1877, expr: !DIExpression())
!1877 = distinct !DIGlobalVariable(name: "nor_egid", scope: !1878, file: !1879, line: 168, type: !2229, isLocal: false, isDefinition: true)
!1878 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1879, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1880, retainedTypes: !1891, globals: !1900, splitDebugInlining: false, nameTableKind: None)
!1879 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_combo_nor.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/powerkey/GCC")
!1880 = !{!1881, !1461, !1784}
!1881 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1882, line: 49, baseType: !16, size: 32, elements: !1883)
!1882 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_combo_init.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/powerkey/GCC")
!1883 = !{!1884, !1885, !1886, !1887, !1888, !1889, !1890}
!1884 = !DIEnumerator(name: "CMEM_NO_ERROR", value: 0)
!1885 = !DIEnumerator(name: "CMEM_ERR_ID_NOT_FOUND", value: 1)
!1886 = !DIEnumerator(name: "CMEM_ERR_FDM_MISMATCH", value: 2)
!1887 = !DIEnumerator(name: "CMEM_ERR_MTD_MISMATCH", value: 3)
!1888 = !DIEnumerator(name: "CMEM_ERR_FDM_INIT_FAIL", value: 4)
!1889 = !DIEnumerator(name: "CMEM_ERR_MTD_INIT_FAIL", value: 5)
!1890 = !DIEnumerator(name: "CMEM_ERR_FDM_REGION_INFO_OVERFLOW", value: 6)
!1891 = !{!1892, !61, !1894}
!1892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1893, size: 32)
!1893 = !DIDerivedType(tag: DW_TAG_typedef, name: "BYTE", file: !1462, line: 47, baseType: !76)
!1894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1895, size: 32)
!1895 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !1655, line: 146, baseType: !1896)
!1896 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1655, line: 143, size: 64, elements: !1897)
!1897 = !{!1898, !1899}
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !1896, file: !1655, line: 144, baseType: !61, size: 32)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !1896, file: !1655, line: 145, baseType: !61, size: 32, offset: 32)
!1900 = !{!1876, !1901, !1903, !1913, !2050, !2052, !2054, !2056, !2058, !2063, !2066, !2075, !2077, !2079, !2087, !2089, !2091, !2174, !2177, !2179, !2181, !2192, !2194, !2207}
!1901 = !DIGlobalVariableExpression(var: !1902, expr: !DIExpression())
!1902 = distinct !DIGlobalVariable(name: "cmem_nor_index", scope: !1878, file: !1879, line: 94, type: !1343, isLocal: true, isDefinition: true)
!1903 = !DIGlobalVariableExpression(var: !1904, expr: !DIExpression())
!1904 = distinct !DIGlobalVariable(name: "cmem_id", scope: !1878, file: !1879, line: 95, type: !1905, isLocal: false, isDefinition: true)
!1905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1906, size: 32)
!1906 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1907)
!1907 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryID", file: !1853, line: 100, baseType: !1908)
!1908 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1853, line: 92, size: 80, elements: !1909)
!1909 = !{!1910, !1911, !1912}
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceType", scope: !1908, file: !1853, line: 93, baseType: !74, size: 8)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "IDLength", scope: !1908, file: !1853, line: 94, baseType: !74, size: 8, offset: 8)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "ID", scope: !1908, file: !1853, line: 96, baseType: !1866, size: 64, offset: 16)
!1913 = !DIGlobalVariableExpression(var: !1914, expr: !DIExpression())
!1914 = distinct !DIGlobalVariable(name: "FlashDriveData", scope: !1878, file: !1879, line: 127, type: !1915, isLocal: false, isDefinition: true)
!1915 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_FLASH_DRV_Data", file: !1655, line: 317, baseType: !1916)
!1916 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "NOR_FLASH_DRV_Data", file: !1655, line: 237, size: 2720, elements: !1917)
!1917 = !{!1918, !1919, !1971, !1972, !1975, !1976, !1989, !1990, !1991, !1992, !1993, !1994, !1995, !1996, !1997, !1998, !1999, !2000, !2001, !2002, !2003, !2004, !2005, !2006, !2007, !2008, !2009, !2010, !2017, !2018, !2019, !2024, !2025, !2026, !2027, !2028, !2032, !2036, !2043, !2044, !2045, !2046, !2047, !2048, !2049}
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "TotalFATSectors", scope: !1916, file: !1655, line: 238, baseType: !61, size: 32)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "MTDDriver", scope: !1916, file: !1655, line: 239, baseType: !1920, size: 32, offset: 32)
!1920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1921, size: 32)
!1921 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_Driver", file: !1655, line: 121, baseType: !1922)
!1922 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1655, line: 105, size: 480, elements: !1923)
!1923 = !{!1924, !1928, !1929, !1933, !1937, !1941, !1942, !1946, !1947, !1948, !1949, !1954, !1959, !1963, !1967}
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "MountDevice", scope: !1922, file: !1655, line: 106, baseType: !1925, size: 32)
!1925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1926, size: 32)
!1926 = !DISubroutineType(types: !1927)
!1927 = !{!7, !65, !65}
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "ShutDown", scope: !1922, file: !1655, line: 107, baseType: !1728, size: 32, offset: 32)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "MapWindow", scope: !1922, file: !1655, line: 108, baseType: !1930, size: 32, offset: 64)
!1930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1931, size: 32)
!1931 = !DISubroutineType(types: !1932)
!1932 = !{!65, !65, !61, !61}
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "EraseBlock", scope: !1922, file: !1655, line: 109, baseType: !1934, size: 32, offset: 96)
!1934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1935, size: 32)
!1935 = !DISubroutineType(types: !1936)
!1936 = !{!7, !65, !61}
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramData", scope: !1922, file: !1655, line: 110, baseType: !1938, size: 32, offset: 128)
!1938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1939, size: 32)
!1939 = !DISubroutineType(types: !1940)
!1940 = !{!7, !65, !65, !65, !61}
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "NonBlockEraseBlock", scope: !1922, file: !1655, line: 111, baseType: !1934, size: 32, offset: 160)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "CheckDeviceReady", scope: !1922, file: !1655, line: 112, baseType: !1943, size: 32, offset: 192)
!1943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1944, size: 32)
!1944 = !DISubroutineType(types: !1945)
!1945 = !{!1343, !65, !61}
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendErase", scope: !1922, file: !1655, line: 113, baseType: !1934, size: 32, offset: 224)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "ResumeErase", scope: !1922, file: !1655, line: 114, baseType: !1934, size: 32, offset: 256)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "BlankCheck", scope: !1922, file: !1655, line: 115, baseType: !1934, size: 32, offset: 288)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "OTPAccess", scope: !1922, file: !1655, line: 116, baseType: !1950, size: 32, offset: 320)
!1950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1951, size: 32)
!1951 = !DISubroutineType(types: !1952)
!1952 = !{!7, !65, !7, !1953, !65, !1953}
!1953 = !DIDerivedType(tag: DW_TAG_typedef, name: "UINT", file: !1462, line: 50, baseType: !16)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "OTPQueryLength", scope: !1922, file: !1655, line: 117, baseType: !1955, size: 32, offset: 352)
!1955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1956, size: 32)
!1956 = !DISubroutineType(types: !1957)
!1957 = !{!7, !65, !1958}
!1958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1953, size: 32)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "LockEraseBlkAddr", scope: !1922, file: !1655, line: 118, baseType: !1960, size: 32, offset: 384)
!1960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1961, size: 32)
!1961 = !DISubroutineType(types: !1962)
!1962 = !{!7, !65, !65, !61}
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "IsEraseSuspended", scope: !1922, file: !1655, line: 119, baseType: !1964, size: 32, offset: 416)
!1964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1965, size: 32)
!1965 = !DISubroutineType(types: !1966)
!1966 = !{!263, !65, !61}
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "IOCtrl", scope: !1922, file: !1655, line: 120, baseType: !1968, size: 32, offset: 448)
!1968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1969, size: 32)
!1969 = !DISubroutineType(types: !1970)
!1970 = !{!7, !65, !61, !65}
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "MTDData", scope: !1916, file: !1655, line: 240, baseType: !65, size: 32, offset: 64)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "AvailSectorsInBlock", scope: !1916, file: !1655, line: 241, baseType: !1973, size: 32, offset: 96)
!1973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1974, size: 32)
!1974 = !DIDerivedType(tag: DW_TAG_typedef, name: "WORD", file: !1462, line: 46, baseType: !1043)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "ValidSectorsInBlock", scope: !1916, file: !1655, line: 242, baseType: !1973, size: 32, offset: 128)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "FlashInfo", scope: !1916, file: !1655, line: 243, baseType: !1977, size: 928, offset: 160)
!1977 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_FlashInfo", file: !1655, line: 99, baseType: !1978)
!1978 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1655, line: 90, size: 928, elements: !1979)
!1979 = !{!1980, !1981, !1983, !1984, !1985, !1986, !1987, !1988}
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "TotalBlocks", scope: !1978, file: !1655, line: 91, baseType: !61, size: 32)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !1978, file: !1655, line: 92, baseType: !1982, size: 256, offset: 32)
!1982 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 256, elements: !863)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "AvailInRegion", scope: !1978, file: !1655, line: 93, baseType: !1982, size: 256, offset: 288)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !1978, file: !1655, line: 94, baseType: !1982, size: 256, offset: 544)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "ActualRegionNum", scope: !1978, file: !1655, line: 95, baseType: !61, size: 32, offset: 800)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "PageSize", scope: !1978, file: !1655, line: 96, baseType: !1974, size: 16, offset: 832)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "baseUnlockBlock", scope: !1978, file: !1655, line: 97, baseType: !61, size: 32, offset: 864)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "endUnlockBlock", scope: !1978, file: !1655, line: 98, baseType: !61, size: 32, offset: 896)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "HeaderSize", scope: !1916, file: !1655, line: 244, baseType: !1982, size: 256, offset: 1088)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "SectorsPerBlock", scope: !1916, file: !1655, line: 245, baseType: !1982, size: 256, offset: 1344)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "ActiveBlock", scope: !1916, file: !1655, line: 246, baseType: !61, size: 32, offset: 1600)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "ReclaimEraseCount", scope: !1916, file: !1655, line: 247, baseType: !61, size: 32, offset: 1632)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "ReclaimBlockID", scope: !1916, file: !1655, line: 248, baseType: !61, size: 32, offset: 1664)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "TotalPhysicalSectors", scope: !1916, file: !1655, line: 249, baseType: !61, size: 32, offset: 1696)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "PartitionSectors", scope: !1916, file: !1655, line: 250, baseType: !61, size: 32, offset: 1728)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "GCBlockSectors", scope: !1916, file: !1655, line: 252, baseType: !61, size: 32, offset: 1760)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "GCHighThreshold", scope: !1916, file: !1655, line: 255, baseType: !61, size: 32, offset: 1792)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "GCMiddleThreshold", scope: !1916, file: !1655, line: 256, baseType: !61, size: 32, offset: 1824)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "GCLowThreshold", scope: !1916, file: !1655, line: 257, baseType: !61, size: 32, offset: 1856)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "AvailSectors", scope: !1916, file: !1655, line: 261, baseType: !61, size: 32, offset: 1888)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "DeletedSectors", scope: !1916, file: !1655, line: 262, baseType: !61, size: 32, offset: 1920)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "StartSector", scope: !1916, file: !1655, line: 263, baseType: !61, size: 32, offset: 1952)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "Sectors", scope: !1916, file: !1655, line: 264, baseType: !61, size: 32, offset: 1984)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "SectorsLeft", scope: !1916, file: !1655, line: 265, baseType: !61, size: 32, offset: 2016)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "BLOCKID_OFFSET", scope: !1916, file: !1655, line: 266, baseType: !61, size: 32, offset: 2048)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "SECTORIDX_MASK", scope: !1916, file: !1655, line: 267, baseType: !61, size: 32, offset: 2080)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "PHY_SECTOR_OFFSET", scope: !1916, file: !1655, line: 268, baseType: !61, size: 32, offset: 2112)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "MSTABLE_ENTRY_NUM", scope: !1916, file: !1655, line: 270, baseType: !61, size: 32, offset: 2144)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "MS_count", scope: !1916, file: !1655, line: 271, baseType: !61, size: 32, offset: 2176)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "MSEntryTable", scope: !1916, file: !1655, line: 272, baseType: !2011, size: 32, offset: 2208)
!2011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2012, size: 32)
!2012 = !DIDerivedType(tag: DW_TAG_typedef, name: "MS_ENTRY", file: !1655, line: 229, baseType: !2013)
!2013 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1655, line: 226, size: 64, elements: !2014)
!2014 = !{!2015, !2016}
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "LogicalSectorID", scope: !2013, file: !1655, line: 227, baseType: !61, size: 32)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "PysicalSectorID_new", scope: !2013, file: !1655, line: 228, baseType: !61, size: 32, offset: 32)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "SectorMap", scope: !1916, file: !1655, line: 273, baseType: !1892, size: 32, offset: 2240)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "Buffer", scope: !1916, file: !1655, line: 274, baseType: !1892, size: 32, offset: 2272)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "CompleteErase", scope: !1916, file: !1655, line: 276, baseType: !2020, size: 32, offset: 2304)
!2020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2021, size: 32)
!2021 = !DISubroutineType(types: !2022)
!2022 = !{null, !2023}
!2023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1916, size: 32)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "RegionMaxBlock", scope: !1916, file: !1655, line: 278, baseType: !61, size: 32, offset: 2336)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramFailHandle", scope: !1916, file: !1655, line: 280, baseType: !2020, size: 32, offset: 2368)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "ReclaimBlock_post", scope: !1916, file: !1655, line: 281, baseType: !2020, size: 32, offset: 2400)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "IdleReclaimBlockID", scope: !1916, file: !1655, line: 283, baseType: !61, size: 32, offset: 2432)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "SelectReclaimTarget", scope: !1916, file: !1655, line: 284, baseType: !2029, size: 32, offset: 2464)
!2029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2030, size: 32)
!2030 = !DISubroutineType(types: !2031)
!2031 = !{!61, !2023}
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "ReclaimOneSector", scope: !1916, file: !1655, line: 285, baseType: !2033, size: 32, offset: 2496)
!2033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2034, size: 32)
!2034 = !DISubroutineType(types: !2035)
!2035 = !{!61, !2023, !61, !61}
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "EraseQueue", scope: !1916, file: !1655, line: 293, baseType: !2037, size: 32, offset: 2528)
!2037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2038, size: 32)
!2038 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_EraseInfo", file: !1655, line: 162, baseType: !2039)
!2039 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1655, line: 159, size: 64, elements: !2040)
!2040 = !{!2041, !2042}
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !2039, file: !1655, line: 160, baseType: !61, size: 32)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "EraseCount", scope: !2039, file: !1655, line: 161, baseType: !61, size: 32, offset: 32)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "processedBankAddr", scope: !1916, file: !1655, line: 295, baseType: !61, size: 32, offset: 2560)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "processedBlock", scope: !1916, file: !1655, line: 296, baseType: !61, size: 32, offset: 2592)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "processedEraseCount", scope: !1916, file: !1655, line: 297, baseType: !61, size: 32, offset: 2624)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "eraseItems", scope: !1916, file: !1655, line: 298, baseType: !1974, size: 16, offset: 2656)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "queueSize", scope: !1916, file: !1655, line: 302, baseType: !1974, size: 16, offset: 2672)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramFailRetry", scope: !1916, file: !1655, line: 310, baseType: !263, size: 8, offset: 2688)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "IsEraseSuspended", scope: !1916, file: !1655, line: 313, baseType: !263, size: 8, offset: 2696)
!2050 = !DIGlobalVariableExpression(var: !2051, expr: !DIExpression())
!2051 = distinct !DIGlobalVariable(name: "TOTAL_BLOCKS", scope: !1878, file: !1879, line: 129, type: !61, isLocal: false, isDefinition: true)
!2052 = !DIGlobalVariableExpression(var: !2053, expr: !DIExpression())
!2053 = distinct !DIGlobalVariable(name: "TOTAL_SECTORS", scope: !1878, file: !1879, line: 130, type: !61, isLocal: false, isDefinition: true)
!2054 = !DIGlobalVariableExpression(var: !2055, expr: !DIExpression())
!2055 = distinct !DIGlobalVariable(name: "NOR_LARGEST_BLOCK_SIZE", scope: !1878, file: !1879, line: 131, type: !61, isLocal: false, isDefinition: true)
!2056 = !DIGlobalVariableExpression(var: !2057, expr: !DIExpression())
!2057 = distinct !DIGlobalVariable(name: "PAGE_SIZE", scope: !1878, file: !1879, line: 132, type: !1041, isLocal: true, isDefinition: true)
!2058 = !DIGlobalVariableExpression(var: !2059, expr: !DIExpression())
!2059 = distinct !DIGlobalVariable(name: "FDMBuffer", scope: !1878, file: !1879, line: 136, type: !2060, isLocal: false, isDefinition: true)
!2060 = !DICompositeType(tag: DW_TAG_array_type, baseType: !74, size: 4096, elements: !2061)
!2061 = !{!2062}
!2062 = !DISubrange(count: 512)
!2063 = !DIGlobalVariableExpression(var: !2064, expr: !DIExpression())
!2064 = distinct !DIGlobalVariable(name: "RegionInfo", scope: !1878, file: !1879, line: 146, type: !2065, isLocal: true, isDefinition: true)
!2065 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1895, size: 512, elements: !863)
!2066 = !DIGlobalVariableExpression(var: !2067, expr: !DIExpression())
!2067 = distinct !DIGlobalVariable(name: "BlockLayout", scope: !1878, file: !1879, line: 152, type: !2068, isLocal: true, isDefinition: true)
!2068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2069, size: 32)
!2069 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2070)
!2070 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBlockLayout", file: !1853, line: 116, baseType: !2071)
!2071 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1853, line: 113, size: 64, elements: !2072)
!2072 = !{!2073, !2074}
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "Offset", scope: !2071, file: !1853, line: 114, baseType: !61, size: 32)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "Size", scope: !2071, file: !1853, line: 115, baseType: !61, size: 32, offset: 32)
!2075 = !DIGlobalVariableExpression(var: !2076, expr: !DIExpression())
!2076 = distinct !DIGlobalVariable(name: "CS0_SIZE", scope: !1878, file: !1879, line: 156, type: !61, isLocal: false, isDefinition: true)
!2077 = !DIGlobalVariableExpression(var: !2078, expr: !DIExpression())
!2078 = distinct !DIGlobalVariable(name: "CS1_SIZE", scope: !1878, file: !1879, line: 157, type: !61, isLocal: false, isDefinition: true)
!2079 = !DIGlobalVariableExpression(var: !2080, expr: !DIExpression())
!2080 = distinct !DIGlobalVariable(name: "BankInfo", scope: !1878, file: !1879, line: 160, type: !2081, isLocal: true, isDefinition: true)
!2081 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2082, size: 512, elements: !863)
!2082 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !1655, line: 152, baseType: !2083)
!2083 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1655, line: 149, size: 64, elements: !2084)
!2084 = !{!2085, !2086}
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !2083, file: !1655, line: 150, baseType: !61, size: 32)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !2083, file: !1655, line: 151, baseType: !61, size: 32, offset: 32)
!2087 = !DIGlobalVariableExpression(var: !2088, expr: !DIExpression())
!2088 = distinct !DIGlobalVariable(name: "PAGE_BUFFER_SIZE", scope: !1878, file: !1879, line: 173, type: !61, isLocal: false, isDefinition: true)
!2089 = !DIGlobalVariableExpression(var: !2090, expr: !DIExpression())
!2090 = distinct !DIGlobalVariable(name: "NORFlashMtd", scope: !1878, file: !1879, line: 176, type: !1921, isLocal: false, isDefinition: true)
!2091 = !DIGlobalVariableExpression(var: !2092, expr: !DIExpression())
!2092 = distinct !DIGlobalVariable(name: "mtdflash", scope: !1878, file: !1879, line: 177, type: !2093, isLocal: false, isDefinition: true)
!2093 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_Data", file: !1553, line: 193, baseType: !2094)
!2094 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1553, line: 134, size: 1824, elements: !2095)
!2095 = !{!2096, !2097, !2098, !2104, !2110, !2111, !2112, !2113, !2115, !2116, !2117, !2118, !2125, !2126, !2156, !2157, !2158, !2159, !2160, !2161, !2162, !2163, !2164, !2165, !2166, !2167, !2168, !2169, !2170, !2171, !2172, !2173}
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !2094, file: !1553, line: 136, baseType: !61, size: 32)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !2094, file: !1553, line: 137, baseType: !872, size: 32, offset: 32)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !2094, file: !1553, line: 138, baseType: !2099, size: 32, offset: 64)
!2099 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !1637, line: 56, baseType: !2100)
!2100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2101, size: 32)
!2101 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1637, line: 54, size: 8, elements: !2102)
!2102 = !{!2103}
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !2101, file: !1637, line: 55, baseType: !74, size: 8)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !2094, file: !1553, line: 139, baseType: !2105, size: 32, offset: 96)
!2105 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !1637, line: 46, baseType: !2106)
!2106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2107, size: 32)
!2107 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1637, line: 44, size: 8, elements: !2108)
!2108 = !{!2109}
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !2107, file: !1637, line: 45, baseType: !74, size: 8)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !2094, file: !1553, line: 140, baseType: !1649, size: 8, offset: 128)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !2094, file: !1553, line: 143, baseType: !1894, size: 32, offset: 160)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !2094, file: !1553, line: 144, baseType: !872, size: 32, offset: 192)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !2094, file: !1553, line: 145, baseType: !2114, size: 32, offset: 224)
!2114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2082, size: 32)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !2094, file: !1553, line: 146, baseType: !872, size: 32, offset: 256)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !2094, file: !1553, line: 147, baseType: !61, size: 32, offset: 288)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !2094, file: !1553, line: 148, baseType: !872, size: 32, offset: 320)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !2094, file: !1553, line: 151, baseType: !2119, size: 1024, offset: 352)
!2119 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2120, size: 1024, elements: !1678)
!2120 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !1655, line: 170, baseType: !2121)
!2121 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1655, line: 167, size: 64, elements: !2122)
!2122 = !{!2123, !2124}
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !2121, file: !1655, line: 168, baseType: !61, size: 32)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !2121, file: !1655, line: 169, baseType: !61, size: 32, offset: 32)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "StatusMap", scope: !2094, file: !1553, line: 155, baseType: !1680, size: 32, offset: 1376)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "CMD", scope: !2094, file: !1553, line: 156, baseType: !2127, size: 32, offset: 1408)
!2127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2128, size: 32)
!2128 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_CMD", file: !1553, line: 124, baseType: !2129)
!2129 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1553, line: 90, size: 200, elements: !2130)
!2130 = !{!2131, !2132, !2133, !2134, !2135, !2136, !2137, !2138, !2139, !2140, !2141, !2142, !2143, !2144, !2145, !2146, !2147, !2148, !2149, !2150, !2151, !2152, !2153, !2154, !2155}
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "PageProg", scope: !2129, file: !1553, line: 91, baseType: !74, size: 8)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "WriteEnable", scope: !2129, file: !1553, line: 92, baseType: !74, size: 8, offset: 8)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "Suspend", scope: !2129, file: !1553, line: 94, baseType: !74, size: 8, offset: 16)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "Resume", scope: !2129, file: !1553, line: 95, baseType: !74, size: 8, offset: 24)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "Read", scope: !2129, file: !1553, line: 96, baseType: !74, size: 8, offset: 32)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "Erase", scope: !2129, file: !1553, line: 98, baseType: !74, size: 8, offset: 40)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "Erase4K", scope: !2129, file: !1553, line: 99, baseType: !74, size: 8, offset: 48)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "Erase32K", scope: !2129, file: !1553, line: 100, baseType: !74, size: 8, offset: 56)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "Erase64K", scope: !2129, file: !1553, line: 101, baseType: !74, size: 8, offset: 64)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_SPI", scope: !2129, file: !1553, line: 103, baseType: !74, size: 8, offset: 72)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_QPI", scope: !2129, file: !1553, line: 104, baseType: !74, size: 8, offset: 80)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "ReadBPReg", scope: !2129, file: !1553, line: 106, baseType: !74, size: 8, offset: 88)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "WriteBPReg", scope: !2129, file: !1553, line: 107, baseType: !74, size: 8, offset: 96)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSecurityReg", scope: !2129, file: !1553, line: 108, baseType: !74, size: 8, offset: 104)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "WriteSecurityReg", scope: !2129, file: !1553, line: 109, baseType: !74, size: 8, offset: 112)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSuspendReg", scope: !2129, file: !1553, line: 110, baseType: !74, size: 8, offset: 120)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "ReadReadyReg", scope: !2129, file: !1553, line: 111, baseType: !74, size: 8, offset: 128)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "ReadFailReg", scope: !2129, file: !1553, line: 112, baseType: !74, size: 8, offset: 136)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "EnterDPD", scope: !2129, file: !1553, line: 114, baseType: !74, size: 8, offset: 144)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "LeaveDPD", scope: !2129, file: !1553, line: 115, baseType: !74, size: 8, offset: 152)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "OTPProg", scope: !2129, file: !1553, line: 118, baseType: !74, size: 8, offset: 160)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !2129, file: !1553, line: 119, baseType: !74, size: 8, offset: 168)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "OTPEnter", scope: !2129, file: !1553, line: 120, baseType: !74, size: 8, offset: 176)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "OTPExit", scope: !2129, file: !1553, line: 121, baseType: !74, size: 8, offset: 184)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !2129, file: !1553, line: 122, baseType: !74, size: 8, offset: 192)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "Flag", scope: !2094, file: !1553, line: 157, baseType: !61, size: 32, offset: 1440)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "BPRBitCount", scope: !2094, file: !1553, line: 158, baseType: !1041, size: 16, offset: 1472)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "UniformBlock", scope: !2094, file: !1553, line: 159, baseType: !1041, size: 16, offset: 1488)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLength", scope: !2094, file: !1553, line: 163, baseType: !1041, size: 16, offset: 1504)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "OTPBase", scope: !2094, file: !1553, line: 164, baseType: !1041, size: 16, offset: 1520)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendLatency", scope: !2094, file: !1553, line: 167, baseType: !74, size: 8, offset: 1536)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "FlashID", scope: !2094, file: !1553, line: 168, baseType: !1719, size: 24, offset: 1544)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "DriverStatus", scope: !2094, file: !1553, line: 169, baseType: !74, size: 8, offset: 1568)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "AddressCycle", scope: !2094, file: !1553, line: 170, baseType: !74, size: 8, offset: 1576)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "CS", scope: !2094, file: !1553, line: 173, baseType: !1041, size: 16, offset: 1584)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "sf_dal_fix", scope: !2094, file: !1553, line: 174, baseType: !61, size: 32, offset: 1600)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "CS_Size", scope: !2094, file: !1553, line: 175, baseType: !61, size: 32, offset: 1632)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_BUSY", scope: !2094, file: !1553, line: 178, baseType: !263, size: 8, offset: 1664)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_SUSPENDED", scope: !2094, file: !1553, line: 179, baseType: !263, size: 8, offset: 1672)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "UnlockBlock", scope: !2094, file: !1553, line: 182, baseType: !1728, size: 32, offset: 1696)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !2094, file: !1553, line: 186, baseType: !1728, size: 32, offset: 1728)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !2094, file: !1553, line: 187, baseType: !1733, size: 32, offset: 1760)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "OTPWrite", scope: !2094, file: !1553, line: 188, baseType: !1733, size: 32, offset: 1792)
!2174 = !DIGlobalVariableExpression(var: !2175, expr: !DIExpression())
!2175 = distinct !DIGlobalVariable(name: "StatusMap", scope: !1878, file: !1879, line: 178, type: !2176, isLocal: false, isDefinition: true)
!2176 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1681, size: 64, elements: !863)
!2177 = !DIGlobalVariableExpression(var: !2178, expr: !DIExpression())
!2178 = distinct !DIGlobalVariable(name: "sf_dal_data_cmd", scope: !1878, file: !1879, line: 179, type: !2128, isLocal: false, isDefinition: true)
!2179 = !DIGlobalVariableExpression(var: !2180, expr: !DIExpression())
!2180 = distinct !DIGlobalVariable(name: "EntireDiskRegionInfo", scope: !1878, file: !1879, line: 204, type: !2065, isLocal: true, isDefinition: true)
!2181 = !DIGlobalVariableExpression(var: !2182, expr: !DIExpression())
!2182 = distinct !DIGlobalVariable(name: "EntireDiskDriveData", scope: !1878, file: !1879, line: 205, type: !2183, isLocal: false, isDefinition: true)
!2183 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_FLASH_DISK_Data", file: !2184, line: 93, baseType: !2185)
!2184 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_disk_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/powerkey/GCC")
!2185 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2184, line: 83, size: 1056, elements: !2186)
!2186 = !{!2187, !2188, !2189, !2190, !2191}
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "DiskSize", scope: !2185, file: !2184, line: 84, baseType: !61, size: 32)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "MTDDriver", scope: !2185, file: !2184, line: 85, baseType: !1920, size: 32, offset: 32)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "MTDData", scope: !2185, file: !2184, line: 86, baseType: !65, size: 32, offset: 64)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "FlashInfo", scope: !2185, file: !2184, line: 87, baseType: !1977, size: 928, offset: 96)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "is_mount", scope: !2185, file: !2184, line: 92, baseType: !263, size: 8, offset: 1024)
!2192 = !DIGlobalVariableExpression(var: !2193, expr: !DIExpression())
!2193 = distinct !DIGlobalVariable(name: "EntireDiskMtdData", scope: !1878, file: !1879, line: 208, type: !2093, isLocal: false, isDefinition: true)
!2194 = !DIGlobalVariableExpression(var: !2195, expr: !DIExpression())
!2195 = distinct !DIGlobalVariable(name: "nor_list", scope: !1878, file: !1879, line: 114, type: !2196, isLocal: true, isDefinition: true)
!2196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2197, size: 32)
!2197 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2198)
!2198 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryNOR", file: !1853, line: 125, baseType: !2199)
!2199 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1853, line: 119, size: 1088, elements: !2200)
!2200 = !{!2201, !2202, !2203, !2204, !2206}
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "FDMType", scope: !2199, file: !1853, line: 120, baseType: !1041, size: 16)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "PageBufferSize", scope: !2199, file: !1853, line: 121, baseType: !1041, size: 16, offset: 16)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "UniformBlocks", scope: !2199, file: !1853, line: 122, baseType: !61, size: 32, offset: 32)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "BlockLayout", scope: !2199, file: !1853, line: 123, baseType: !2205, size: 512, offset: 64)
!2205 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2070, size: 512, elements: !863)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !2199, file: !1853, line: 124, baseType: !2081, size: 512, offset: 576)
!2207 = !DIGlobalVariableExpression(var: !2208, expr: !DIExpression())
!2208 = distinct !DIGlobalVariable(name: "combo_mem_sw_list", scope: !1878, file: !2209, line: 42, type: !2210, isLocal: true, isDefinition: true)
!2209 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_combo_config.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/powerkey/GCC")
!2210 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2211)
!2211 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_CMEM_NOR_INFO_v1", file: !1879, line: 66, baseType: !2212)
!2212 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1879, line: 63, size: 5600, elements: !2213)
!2213 = !{!2214, !2221}
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "m_gfh_hdr", scope: !2212, file: !1879, line: 64, baseType: !2215, size: 96)
!2215 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_Header", file: !1785, line: 152, baseType: !2216)
!2216 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GFH_Header", file: !1785, line: 144, size: 96, elements: !2217)
!2217 = !{!2218, !2219, !2220}
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "m_magic_ver", scope: !2216, file: !1785, line: 145, baseType: !1846, size: 32)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "m_size", scope: !2216, file: !1785, line: 146, baseType: !1848, size: 16, offset: 32)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "m_type", scope: !2216, file: !1785, line: 150, baseType: !1850, size: 32, offset: 64)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "m_data", scope: !2212, file: !1879, line: 65, baseType: !2222, size: 5504, offset: 96)
!2222 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryNORList", file: !1853, line: 132, baseType: !2223)
!2223 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1853, line: 128, size: 5504, elements: !2224)
!2224 = !{!2225, !2226, !2227}
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "m_ver", scope: !2223, file: !1853, line: 129, baseType: !16, size: 32)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "Count", scope: !2223, file: !1853, line: 130, baseType: !16, size: 32, offset: 32)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "List", scope: !2223, file: !1853, line: 131, baseType: !2228, size: 5440, offset: 64)
!2228 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2198, size: 5440, elements: !1308)
!2229 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_eventgrpid", file: !1637, line: 79, baseType: !2230)
!2230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2231, size: 32)
!2231 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1637, line: 77, size: 8, elements: !2232)
!2232 = !{!2233}
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !2231, file: !1637, line: 78, baseType: !74, size: 8)
!2234 = !DIGlobalVariableExpression(var: !2235, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 18446744073709551615, DW_OP_mul, DW_OP_constu, 1, DW_OP_plus, DW_OP_stack_value))
!2235 = distinct !DIGlobalVariable(name: "FDMMutex", scope: !2236, file: !2237, line: 82, type: !7, isLocal: true, isDefinition: true)
!2236 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2237, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2238, retainedTypes: !2244, globals: !2289, splitDebugInlining: false, nameTableKind: None)
!2237 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_disk.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/powerkey/GCC")
!2238 = !{!1577, !1461, !2239}
!2239 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1578, line: 123, baseType: !16, size: 32, elements: !2240)
!2240 = !{!2241, !2242, !2243}
!2241 = !DIEnumerator(name: "HAL_FLASH_BLOCK_4K", value: 0)
!2242 = !DIEnumerator(name: "HAL_FLASH_BLOCK_32K", value: 1)
!2243 = !DIEnumerator(name: "HAL_FLASH_BLOCK_64K", value: 2)
!2244 = !{!61, !2245, !65, !872}
!2245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2246, size: 32)
!2246 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_Flash_MTD_Data", file: !1655, line: 190, baseType: !2247)
!2247 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1655, line: 173, size: 1376, elements: !2248)
!2248 = !{!2249, !2250, !2251, !2257, !2263, !2264, !2271, !2272, !2279, !2280, !2281, !2282}
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !2247, file: !1655, line: 174, baseType: !61, size: 32)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !2247, file: !1655, line: 175, baseType: !1892, size: 32, offset: 32)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !2247, file: !1655, line: 176, baseType: !2252, size: 32, offset: 64)
!2252 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !1637, line: 56, baseType: !2253)
!2253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2254, size: 32)
!2254 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1637, line: 54, size: 8, elements: !2255)
!2255 = !{!2256}
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !2254, file: !1637, line: 55, baseType: !74, size: 8)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !2247, file: !1655, line: 177, baseType: !2258, size: 32, offset: 96)
!2258 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !1637, line: 46, baseType: !2259)
!2259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2260, size: 32)
!2260 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1637, line: 44, size: 8, elements: !2261)
!2261 = !{!2262}
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !2260, file: !1637, line: 45, baseType: !74, size: 8)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !2247, file: !1655, line: 178, baseType: !1649, size: 8, offset: 128)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !2247, file: !1655, line: 180, baseType: !2265, size: 32, offset: 160)
!2265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2266, size: 32)
!2266 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !1655, line: 146, baseType: !2267)
!2267 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1655, line: 143, size: 64, elements: !2268)
!2268 = !{!2269, !2270}
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !2267, file: !1655, line: 144, baseType: !61, size: 32)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !2267, file: !1655, line: 145, baseType: !61, size: 32, offset: 32)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !2247, file: !1655, line: 181, baseType: !1892, size: 32, offset: 192)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !2247, file: !1655, line: 182, baseType: !2273, size: 32, offset: 224)
!2273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2274, size: 32)
!2274 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !1655, line: 152, baseType: !2275)
!2275 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1655, line: 149, size: 64, elements: !2276)
!2276 = !{!2277, !2278}
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !2275, file: !1655, line: 150, baseType: !61, size: 32)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !2275, file: !1655, line: 151, baseType: !61, size: 32, offset: 32)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !2247, file: !1655, line: 183, baseType: !1892, size: 32, offset: 256)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !2247, file: !1655, line: 184, baseType: !61, size: 32, offset: 288)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !2247, file: !1655, line: 185, baseType: !1892, size: 32, offset: 320)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !2247, file: !1655, line: 188, baseType: !2283, size: 1024, offset: 352)
!2283 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2284, size: 1024, elements: !1678)
!2284 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !1655, line: 170, baseType: !2285)
!2285 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1655, line: 167, size: 64, elements: !2286)
!2286 = !{!2287, !2288}
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !2285, file: !1655, line: 168, baseType: !61, size: 32)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !2285, file: !1655, line: 169, baseType: !61, size: 32, offset: 32)
!2289 = !{!2290, !2291}
!2290 = !DIGlobalVariableExpression(var: !2235, expr: !DIExpression())
!2291 = !DIGlobalVariableExpression(var: !2292, expr: !DIExpression())
!2292 = distinct !DIGlobalVariable(name: "flash_init_status", scope: !2236, file: !2237, line: 432, type: !2293, isLocal: true, isDefinition: true)
!2293 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_flash_status_t", file: !1578, line: 119, baseType: !1577)
!2294 = !DIGlobalVariableExpression(var: !2292, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 18446744069414584325, DW_OP_mul, DW_OP_constu, 4294967291, DW_OP_plus, DW_OP_stack_value))
!2295 = !DIGlobalVariableExpression(var: !2296, expr: !DIExpression())
!2296 = distinct !DIGlobalVariable(name: "gNOR_ReturnReadyBegin", scope: !2297, file: !2298, line: 60, type: !61, isLocal: false, isDefinition: true)
!2297 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2298, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2299, retainedTypes: !2300, globals: !2301, splitDebugInlining: false, nameTableKind: None)
!2298 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_mtd.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/powerkey/GCC")
!2299 = !{!5}
!2300 = !{!65, !61}
!2301 = !{!2295, !2302, !2304, !2306, !2308, !2310, !2364, !2366}
!2302 = !DIGlobalVariableExpression(var: !2303, expr: !DIExpression())
!2303 = distinct !DIGlobalVariable(name: "gNOR_ReturnReadyEnd", scope: !2297, file: !2298, line: 61, type: !61, isLocal: false, isDefinition: true)
!2304 = !DIGlobalVariableExpression(var: !2305, expr: !DIExpression())
!2305 = distinct !DIGlobalVariable(name: "NOR_Flash_Base_Address", scope: !2297, file: !2298, line: 107, type: !61, isLocal: false, isDefinition: true)
!2306 = !DIGlobalVariableExpression(var: !2307, expr: !DIExpression())
!2307 = distinct !DIGlobalVariable(name: "NOR_FLASH_BUSY", scope: !2297, file: !2298, line: 132, type: !263, isLocal: false, isDefinition: true)
!2308 = !DIGlobalVariableExpression(var: !2309, expr: !DIExpression())
!2309 = distinct !DIGlobalVariable(name: "NOR_FLASH_SUSPENDED", scope: !2297, file: !2298, line: 133, type: !263, isLocal: false, isDefinition: true)
!2310 = !DIGlobalVariableExpression(var: !2311, expr: !DIExpression())
!2311 = distinct !DIGlobalVariable(name: "replaced", scope: !2312, file: !2298, line: 139, type: !61, isLocal: true, isDefinition: true)
!2312 = distinct !DISubprogram(name: "LookupAddress", scope: !2298, file: !2298, line: 135, type: !2313, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2297, retainedNodes: !2315)
!2313 = !DISubroutineType(types: !2314)
!2314 = !{!61, !65, !61}
!2315 = !{!2316, !2317, !2318, !2363}
!2316 = !DILocalVariable(name: "DriveData", arg: 1, scope: !2312, file: !2298, line: 135, type: !65)
!2317 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !2312, file: !2298, line: 135, type: !61)
!2318 = !DILocalVariable(name: "D", scope: !2312, file: !2298, line: 137, type: !2319)
!2319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2320, size: 32)
!2320 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_Flash_MTD_Data", file: !1655, line: 190, baseType: !2321)
!2321 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1655, line: 173, size: 1376, elements: !2322)
!2322 = !{!2323, !2324, !2325, !2331, !2337, !2338, !2345, !2346, !2353, !2354, !2355, !2356}
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !2321, file: !1655, line: 174, baseType: !61, size: 32)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !2321, file: !1655, line: 175, baseType: !1892, size: 32, offset: 32)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !2321, file: !1655, line: 176, baseType: !2326, size: 32, offset: 64)
!2326 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !1637, line: 56, baseType: !2327)
!2327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2328, size: 32)
!2328 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1637, line: 54, size: 8, elements: !2329)
!2329 = !{!2330}
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !2328, file: !1637, line: 55, baseType: !74, size: 8)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !2321, file: !1655, line: 177, baseType: !2332, size: 32, offset: 96)
!2332 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !1637, line: 46, baseType: !2333)
!2333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2334, size: 32)
!2334 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1637, line: 44, size: 8, elements: !2335)
!2335 = !{!2336}
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !2334, file: !1637, line: 45, baseType: !74, size: 8)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !2321, file: !1655, line: 178, baseType: !1649, size: 8, offset: 128)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !2321, file: !1655, line: 180, baseType: !2339, size: 32, offset: 160)
!2339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2340, size: 32)
!2340 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !1655, line: 146, baseType: !2341)
!2341 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1655, line: 143, size: 64, elements: !2342)
!2342 = !{!2343, !2344}
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !2341, file: !1655, line: 144, baseType: !61, size: 32)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !2341, file: !1655, line: 145, baseType: !61, size: 32, offset: 32)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !2321, file: !1655, line: 181, baseType: !1892, size: 32, offset: 192)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !2321, file: !1655, line: 182, baseType: !2347, size: 32, offset: 224)
!2347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2348, size: 32)
!2348 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !1655, line: 152, baseType: !2349)
!2349 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1655, line: 149, size: 64, elements: !2350)
!2350 = !{!2351, !2352}
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !2349, file: !1655, line: 150, baseType: !61, size: 32)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !2349, file: !1655, line: 151, baseType: !61, size: 32, offset: 32)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !2321, file: !1655, line: 183, baseType: !1892, size: 32, offset: 256)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !2321, file: !1655, line: 184, baseType: !61, size: 32, offset: 288)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !2321, file: !1655, line: 185, baseType: !1892, size: 32, offset: 320)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !2321, file: !1655, line: 188, baseType: !2357, size: 1024, offset: 352)
!2357 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2358, size: 1024, elements: !1678)
!2358 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !1655, line: 170, baseType: !2359)
!2359 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1655, line: 167, size: 64, elements: !2360)
!2360 = !{!2361, !2362}
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !2359, file: !1655, line: 168, baseType: !61, size: 32)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !2359, file: !1655, line: 169, baseType: !61, size: 32, offset: 32)
!2363 = !DILocalVariable(name: "addr", scope: !2312, file: !2298, line: 138, type: !61)
!2364 = !DIGlobalVariableExpression(var: !2365, expr: !DIExpression())
!2365 = distinct !DIGlobalVariable(name: "look_up_hit", scope: !2312, file: !2298, line: 140, type: !61, isLocal: true, isDefinition: true)
!2366 = !DIGlobalVariableExpression(var: !2367, expr: !DIExpression())
!2367 = distinct !DIGlobalVariable(name: "look_up_miss", scope: !2312, file: !2298, line: 141, type: !61, isLocal: true, isDefinition: true)
!2368 = !DIGlobalVariableExpression(var: !2369, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!2369 = distinct !DIGlobalVariable(name: "init", scope: !2370, file: !2371, line: 94, type: !76, isLocal: true, isDefinition: true)
!2370 = distinct !DISubprogram(name: "pmu_init_mt6385", scope: !2371, file: !2371, line: 92, type: !260, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2372, retainedNodes: !2469)
!2371 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_pmu.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/powerkey/GCC")
!2372 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2371, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2373, retainedTypes: !2434, globals: !2439, splitDebugInlining: false, nameTableKind: None)
!2373 = !{!2374, !2379, !2384, !1152, !1117, !2388, !325, !332, !367, !2392, !2409, !2419, !2425, !2430}
!2374 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2375, line: 58, baseType: !16, size: 32, elements: !2376)
!2375 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_i2c_pmic.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/powerkey/GCC")
!2376 = !{!2377, !2378}
!2377 = !DIEnumerator(name: "PMIC_I2C_MASTER", value: 0)
!2378 = !DIEnumerator(name: "PMIC_I2C_MASTER_MAX", value: 1)
!2379 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2380, line: 118, baseType: !16, size: 32, elements: !2381)
!2380 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_pmu_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/powerkey/GCC")
!2381 = !{!2382, !2383}
!2382 = !DIEnumerator(name: "PMIC_UNLOCK_KEY", value: 0)
!2383 = !DIEnumerator(name: "PMIC_LOCK_KEY", value: 1)
!2384 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2380, line: 113, baseType: !16, size: 32, elements: !2385)
!2385 = !{!2386, !2387}
!2386 = !DIEnumerator(name: "PMIC_LEAVE_OVR_MODE", value: 0)
!2387 = !DIEnumerator(name: "PMIC_ENTER_OVR_MODE", value: 1)
!2388 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !326, line: 52, baseType: !16, size: 32, elements: !2389)
!2389 = !{!2390, !2391}
!2390 = !DIEnumerator(name: "PMU_NOT_INIT", value: 0)
!2391 = !DIEnumerator(name: "PMU_INIT", value: 1)
!2392 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2380, line: 44, baseType: !16, size: 32, elements: !2393)
!2393 = !{!2394, !2395, !2396, !2397, !2398, !2399, !2400, !2401, !2402, !2403, !2404, !2405, !2406, !2407, !2408}
!2394 = !DIEnumerator(name: "PMIC_VCLDO", value: 0)
!2395 = !DIEnumerator(name: "PMIC_VIO18", value: 1)
!2396 = !DIEnumerator(name: "PMIC_VSF", value: 2)
!2397 = !DIEnumerator(name: "PMIC_VIO28", value: 3)
!2398 = !DIEnumerator(name: "PMIC_VDIG18", value: 4)
!2399 = !DIEnumerator(name: "PMIC_VA18", value: 5)
!2400 = !DIEnumerator(name: "PMIC_VUSB", value: 6)
!2401 = !DIEnumerator(name: "PMIC_VBT", value: 7)
!2402 = !DIEnumerator(name: "PMIC_VA28", value: 8)
!2403 = !DIEnumerator(name: "PMIC_VMC", value: 9)
!2404 = !DIEnumerator(name: "PMIC_VCAMA", value: 10)
!2405 = !DIEnumerator(name: "PMIC_VIBR", value: 11)
!2406 = !DIEnumerator(name: "PMIC_SWXM", value: 12)
!2407 = !DIEnumerator(name: "PMIC_SWDP", value: 13)
!2408 = !DIEnumerator(name: "PMIC_SWMP", value: 14)
!2409 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2380, line: 62, baseType: !16, size: 32, elements: !2410)
!2410 = !{!2411, !2412, !2413, !2414, !2415, !2416, !2417, !2418}
!2411 = !DIEnumerator(name: "PMIC_PSI_OVR", value: 0)
!2412 = !DIEnumerator(name: "PMIC_PSI_HP", value: 1)
!2413 = !DIEnumerator(name: "PMIC_PSI_LP", value: 2)
!2414 = !DIEnumerator(name: "PMIC_PSI_S0", value: 3)
!2415 = !DIEnumerator(name: "PMIC_PSI_S1", value: 4)
!2416 = !DIEnumerator(name: "PMIC_PSI_OFF", value: 5)
!2417 = !DIEnumerator(name: "PMIC_PSI_SLP", value: 6)
!2418 = !DIEnumerator(name: "PMIC_PSI_ACT", value: 7)
!2419 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2380, line: 73, baseType: !16, size: 32, elements: !2420)
!2420 = !{!2421, !2422, !2423, !2424}
!2421 = !DIEnumerator(name: "PMIC_LDO_PMOD_NORMAL", value: 0)
!2422 = !DIEnumerator(name: "PMIC_LDO_PMOD_LITE", value: 1)
!2423 = !DIEnumerator(name: "PMIC_LDO_PMOD_LP", value: 2)
!2424 = !DIEnumerator(name: "PMIC_LDO_PMOD_ULP", value: 3)
!2425 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2380, line: 80, baseType: !16, size: 32, elements: !2426)
!2426 = !{!2427, !2428, !2429}
!2427 = !DIEnumerator(name: "PMIC_SLP_WKUP_HW_CTL", value: 0)
!2428 = !DIEnumerator(name: "PMIC_SLP_WKUP_SW_CTL", value: 1)
!2429 = !DIEnumerator(name: "PMIC_SLP_WKUP_AON", value: 2)
!2430 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2380, line: 86, baseType: !16, size: 32, elements: !2431)
!2431 = !{!2432, !2433}
!2432 = !DIEnumerator(name: "PMIC_VR_CTL_DISABLE", value: 0)
!2433 = !DIEnumerator(name: "PMIC_VR_CTL_ENABLE", value: 1)
!2434 = !{!65, !76, !2435, !2436, !2437, !7, !2438}
!2435 = !DIDerivedType(tag: DW_TAG_typedef, name: "PMIC_PSI", file: !2380, line: 71, baseType: !2409)
!2436 = !DIDerivedType(tag: DW_TAG_typedef, name: "PMIC_LDO_PMOD", file: !2380, line: 78, baseType: !2419)
!2437 = !DIDerivedType(tag: DW_TAG_typedef, name: "PMIC_SLP_WKUP_MODE", file: !2380, line: 84, baseType: !2425)
!2438 = !DIDerivedType(tag: DW_TAG_typedef, name: "PMIC_VR_CTL", file: !2380, line: 89, baseType: !2430)
!2439 = !{!2440, !2441, !2447, !2450, !2452, !2462, !2467}
!2440 = !DIGlobalVariableExpression(var: !2369, expr: !DIExpression())
!2441 = !DIGlobalVariableExpression(var: !2442, expr: !DIExpression())
!2442 = distinct !DIGlobalVariable(name: "index", scope: !2443, file: !2371, line: 293, type: !16, isLocal: true, isDefinition: true)
!2443 = distinct !DISubprogram(name: "pmu_eint_handler", scope: !2371, file: !2371, line: 291, type: !68, scopeLine: 292, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2372, retainedNodes: !2444)
!2444 = !{!2445, !2446}
!2445 = !DILocalVariable(name: "parameter", arg: 1, scope: !2443, file: !2371, line: 291, type: !65)
!2446 = !DILocalVariable(name: "mask", scope: !2443, file: !2371, line: 295, type: !16)
!2447 = !DIGlobalVariableExpression(var: !2448, expr: !DIExpression())
!2448 = distinct !DIGlobalVariable(name: "int_sts", scope: !2443, file: !2371, line: 294, type: !2449, isLocal: true, isDefinition: true)
!2449 = !DICompositeType(tag: DW_TAG_array_type, baseType: !16, size: 224, elements: !669)
!2450 = !DIGlobalVariableExpression(var: !2451, expr: !DIExpression())
!2451 = distinct !DIGlobalVariable(name: "trigger_staus", scope: !2443, file: !2371, line: 294, type: !16, isLocal: true, isDefinition: true)
!2452 = !DIGlobalVariableExpression(var: !2453, expr: !DIExpression())
!2453 = distinct !DIGlobalVariable(name: "pmu_function_table", scope: !2372, file: !2371, line: 90, type: !2454, isLocal: false, isDefinition: true)
!2454 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2455, size: 3072, elements: !294)
!2455 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmu_function_t", file: !326, line: 106, baseType: !2456)
!2456 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !326, line: 101, size: 96, elements: !2457)
!2457 = !{!2458, !2459, !2460, !2461}
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "pmu_callback", scope: !2456, file: !326, line: 102, baseType: !375, size: 32)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !2456, file: !326, line: 103, baseType: !65, size: 32, offset: 32)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "trigger_mode", scope: !2456, file: !326, line: 104, baseType: !74, size: 8, offset: 64)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "init_status", scope: !2456, file: !326, line: 105, baseType: !263, size: 8, offset: 72)
!2462 = !DIGlobalVariableExpression(var: !2463, expr: !DIExpression())
!2463 = distinct !DIGlobalVariable(name: "pmu_power_mode_init_setting_E1", scope: !2372, file: !2371, line: 59, type: !2464, isLocal: true, isDefinition: true)
!2464 = !DICompositeType(tag: DW_TAG_array_type, baseType: !76, size: 640, elements: !2465)
!2465 = !{!2466, !864}
!2466 = !DISubrange(count: 10)
!2467 = !DIGlobalVariableExpression(var: !2468, expr: !DIExpression())
!2468 = distinct !DIGlobalVariable(name: "pmu_power_mode_init_setting_E2", scope: !2372, file: !2371, line: 72, type: !2464, isLocal: true, isDefinition: true)
!2469 = !{!2470, !2471, !2472}
!2470 = !DILocalVariable(name: "id_l", scope: !2370, file: !2371, line: 95, type: !74)
!2471 = !DILocalVariable(name: "id_h", scope: !2370, file: !2371, line: 95, type: !74)
!2472 = !DILocalVariable(name: "config", scope: !2370, file: !2371, line: 96, type: !2473)
!2473 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmic_i2c_config_t", file: !2375, line: 92, baseType: !2474)
!2474 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2375, line: 90, size: 32, elements: !2475)
!2475 = !{!2476}
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_frequency", scope: !2474, file: !2375, line: 91, baseType: !61, size: 32)
!2477 = !DIGlobalVariableExpression(var: !2478, expr: !DIExpression())
!2478 = distinct !DIGlobalVariable(name: "trim_gain_ch7", scope: !2479, file: !2480, line: 223, type: !7, isLocal: true, isDefinition: true)
!2479 = distinct !DISubprogram(name: "pmu_auxadc_get_isense", scope: !2480, file: !2480, line: 221, type: !2481, scopeLine: 222, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2483, retainedNodes: !2537)
!2480 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_pmu_auxadc.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/powerkey/GCC")
!2481 = !DISubroutineType(types: !2482)
!2482 = !{!16}
!2483 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2480, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2484, retainedTypes: !2503, globals: !2505, splitDebugInlining: false, nameTableKind: None)
!2484 = !{!2485}
!2485 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2486, line: 45, baseType: !16, size: 32, elements: !2487)
!2486 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_pmu_auxadc.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/powerkey/GCC")
!2487 = !{!2488, !2489, !2490, !2491, !2492, !2493, !2494, !2495, !2496, !2497, !2498, !2499, !2500, !2501, !2502}
!2488 = !DIEnumerator(name: "PMU_AUX_BATSNS", value: 0)
!2489 = !DIEnumerator(name: "PMU_AUX_ISENSE", value: 1)
!2490 = !DIEnumerator(name: "PMU_AUX_VCDT", value: 2)
!2491 = !DIEnumerator(name: "PMU_AUX_BATON", value: 3)
!2492 = !DIEnumerator(name: "PMU_AUX_CH4", value: 4)
!2493 = !DIEnumerator(name: "PMU_AUX_ACCDET", value: 5)
!2494 = !DIEnumerator(name: "PMU_AUX_CH6", value: 6)
!2495 = !DIEnumerator(name: "PMU_AUX_TSX", value: 7)
!2496 = !DIEnumerator(name: "PMU_AUX_CH8", value: 8)
!2497 = !DIEnumerator(name: "PMU_AUX_CH9", value: 9)
!2498 = !DIEnumerator(name: "PMU_AUX_CH10", value: 10)
!2499 = !DIEnumerator(name: "PMU_AUX_CH11", value: 11)
!2500 = !DIEnumerator(name: "PMU_AUX_CH12", value: 12)
!2501 = !DIEnumerator(name: "PMU_AUX_WAKEUP_PCHR", value: 13)
!2502 = !DIEnumerator(name: "PMU_AUX_MAX", value: 14)
!2503 = !{!76, !2504, !16, !7}
!2504 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!2505 = !{!2477, !2506, !2508, !2510, !2523, !2525, !2527, !2529}
!2506 = !DIGlobalVariableExpression(var: !2507, expr: !DIExpression())
!2507 = distinct !DIGlobalVariable(name: "trim_offset_ch7", scope: !2479, file: !2480, line: 223, type: !7, isLocal: true, isDefinition: true)
!2508 = !DIGlobalVariableExpression(var: !2509, expr: !DIExpression())
!2509 = distinct !DIGlobalVariable(name: "init", scope: !2479, file: !2480, line: 224, type: !82, isLocal: true, isDefinition: true)
!2510 = !DIGlobalVariableExpression(var: !2511, expr: !DIExpression())
!2511 = distinct !DIGlobalVariable(name: "init", scope: !2512, file: !2480, line: 265, type: !82, isLocal: true, isDefinition: true)
!2512 = distinct !DISubprogram(name: "pmu_get_auxadc_temperature", scope: !2480, file: !2480, line: 263, type: !2513, scopeLine: 264, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2483, retainedNodes: !2515)
!2513 = !DISubroutineType(types: !2514)
!2514 = !{!7}
!2515 = !{!2516, !2517, !2518, !2522}
!2516 = !DILocalVariable(name: "ftmp", scope: !2512, file: !2480, line: 268, type: !2504)
!2517 = !DILocalVariable(name: "result", scope: !2512, file: !2480, line: 269, type: !7)
!2518 = !DILocalVariable(name: "data", scope: !2519, file: !2480, line: 273, type: !2521)
!2519 = distinct !DILexicalBlock(scope: !2520, file: !2480, line: 271, column: 20)
!2520 = distinct !DILexicalBlock(scope: !2512, file: !2480, line: 271, column: 9)
!2521 = !DICompositeType(tag: DW_TAG_array_type, baseType: !76, size: 32, elements: !529)
!2522 = !DILocalVariable(name: "tmp", scope: !2519, file: !2480, line: 274, type: !16)
!2523 = !DIGlobalVariableExpression(var: !2524, expr: !DIExpression())
!2524 = distinct !DIGlobalVariable(name: "O_VTS", scope: !2512, file: !2480, line: 266, type: !7, isLocal: true, isDefinition: true)
!2525 = !DIGlobalVariableExpression(var: !2526, expr: !DIExpression())
!2526 = distinct !DIGlobalVariable(name: "O_SLOPE", scope: !2512, file: !2480, line: 267, type: !2504, isLocal: true, isDefinition: true)
!2527 = !DIGlobalVariableExpression(var: !2528, expr: !DIExpression())
!2528 = distinct !DIGlobalVariable(name: "DEGC_CALI", scope: !2512, file: !2480, line: 267, type: !2504, isLocal: true, isDefinition: true)
!2529 = !DIGlobalVariableExpression(var: !2530, expr: !DIExpression())
!2530 = distinct !DIGlobalVariable(name: "ADC_CALI_EN", scope: !2531, file: !2480, line: 330, type: !76, isLocal: true, isDefinition: true)
!2531 = distinct !DISubprogram(name: "pmu_get_thermal_status", scope: !2480, file: !2480, line: 328, type: !2532, scopeLine: 329, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2483, retainedNodes: !2534)
!2532 = !DISubroutineType(types: !2533)
!2533 = !{!76, !76, !76}
!2534 = !{!2535, !2536}
!2535 = !DILocalVariable(name: "mode", arg: 1, scope: !2531, file: !2480, line: 328, type: !76)
!2536 = !DILocalVariable(name: "data", arg: 2, scope: !2531, file: !2480, line: 328, type: !76)
!2537 = !{!2538, !2539, !2540, !2541, !2544, !2545}
!2538 = !DILocalVariable(name: "adc_result", scope: !2479, file: !2480, line: 225, type: !7)
!2539 = !DILocalVariable(name: "ch1_raw", scope: !2479, file: !2480, line: 226, type: !1043)
!2540 = !DILocalVariable(name: "adc_l", scope: !2479, file: !2480, line: 227, type: !76)
!2541 = !DILocalVariable(name: "sint_tmp", scope: !2542, file: !2480, line: 230, type: !1833)
!2542 = distinct !DILexicalBlock(scope: !2543, file: !2480, line: 229, column: 20)
!2543 = distinct !DILexicalBlock(scope: !2479, file: !2480, line: 229, column: 9)
!2544 = !DILocalVariable(name: "msb", scope: !2542, file: !2480, line: 230, type: !1833)
!2545 = !DILocalVariable(name: "lsb", scope: !2542, file: !2480, line: 230, type: !1833)
!2546 = !DIGlobalVariableExpression(var: !2509, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!2547 = !DIGlobalVariableExpression(var: !2511, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!2548 = !DIGlobalVariableExpression(var: !2530, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!2549 = !DIGlobalVariableExpression(var: !2550, expr: !DIExpression())
!2550 = distinct !DIGlobalVariable(name: "pmu_mtcmos_ldo_ctrl", scope: !2551, file: !2552, line: 54, type: !1043, isLocal: false, isDefinition: true)
!2551 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2552, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2553, retainedTypes: !2579, globals: !2581, splitDebugInlining: false, nameTableKind: None)
!2552 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_pmu_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/powerkey/GCC")
!2553 = !{!2392, !2409, !2419, !2379, !2384, !2425, !2430, !2554, !2564, !2574}
!2554 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2380, line: 91, baseType: !16, size: 32, elements: !2555)
!2555 = !{!2556, !2557, !2558, !2559, !2560, !2561, !2562, !2563}
!2556 = !DIEnumerator(name: "PMIC_VCORE_0P7V", value: 0)
!2557 = !DIEnumerator(name: "PMIC_VCORE_0P8V", value: 1)
!2558 = !DIEnumerator(name: "PMIC_VCORE_0P9V", value: 2)
!2559 = !DIEnumerator(name: "PMIC_VCORE_1P0V", value: 3)
!2560 = !DIEnumerator(name: "PMIC_VCORE_1P1V", value: 4)
!2561 = !DIEnumerator(name: "PMIC_VCORE_1P2V", value: 5)
!2562 = !DIEnumerator(name: "PMIC_VCORE_1P3V", value: 6)
!2563 = !DIEnumerator(name: "PMIC_VCORE_ERROR", value: 255)
!2564 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2380, line: 102, baseType: !16, size: 32, elements: !2565)
!2565 = !{!2566, !2567, !2568, !2569, !2570, !2571, !2572, !2573}
!2566 = !DIEnumerator(name: "PMIC_LDO_1P3V", value: 0)
!2567 = !DIEnumerator(name: "PMIC_LDO_1P5V", value: 1)
!2568 = !DIEnumerator(name: "PMIC_LDO_1P8V", value: 2)
!2569 = !DIEnumerator(name: "PMIC_LDO_2P0V", value: 3)
!2570 = !DIEnumerator(name: "PMIC_LDO_2P5V", value: 4)
!2571 = !DIEnumerator(name: "PMIC_LDO_2P8V", value: 5)
!2572 = !DIEnumerator(name: "PMIC_LDO_3P0V", value: 6)
!2573 = !DIEnumerator(name: "PMIC_LDO_3P3V", value: 7)
!2574 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2575, line: 106, baseType: !16, size: 32, elements: !2576)
!2575 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_pmu_wrap_interface.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/powerkey/GCC")
!2576 = !{!2577, !2578}
!2577 = !DIEnumerator(name: "PMIC_VCORE_UNLOCK", value: 0)
!2578 = !DIEnumerator(name: "PMIC_VCORE_LOCK", value: 1)
!2579 = !{!2580, !1434}
!2580 = !DIDerivedType(tag: DW_TAG_typedef, name: "PMIC_VCORE_VOSEL", file: !2380, line: 100, baseType: !2554)
!2581 = !{!2549, !2582, !2584, !2586, !2589, !2591, !2598, !2600, !2608, !2610, !2612, !2614, !2616, !2622}
!2582 = !DIGlobalVariableExpression(var: !2583, expr: !DIExpression())
!2583 = distinct !DIGlobalVariable(name: "pmu_mtcmos_ldo_en", scope: !2551, file: !2552, line: 55, type: !1043, isLocal: false, isDefinition: true)
!2584 = !DIGlobalVariableExpression(var: !2585, expr: !DIExpression())
!2585 = distinct !DIGlobalVariable(name: "pmu_mtcmos_vio28_pmod", scope: !2551, file: !2552, line: 56, type: !1043, isLocal: false, isDefinition: true)
!2586 = !DIGlobalVariableExpression(var: !2587, expr: !DIExpression())
!2587 = distinct !DIGlobalVariable(name: "local_flag", scope: !2588, file: !2552, line: 887, type: !1043, isLocal: true, isDefinition: true)
!2588 = distinct !DISubprogram(name: "pmu_control_mtcmos_mt6385", scope: !2552, file: !2552, line: 885, type: !260, scopeLine: 886, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2551, retainedNodes: !262)
!2589 = !DIGlobalVariableExpression(var: !2590, expr: !DIExpression())
!2590 = distinct !DIGlobalVariable(name: "mtcmos_flag", scope: !2588, file: !2552, line: 887, type: !1043, isLocal: true, isDefinition: true)
!2591 = !DIGlobalVariableExpression(var: !2592, expr: !DIExpression())
!2592 = distinct !DIGlobalVariable(name: "resoure_count", scope: !2593, file: !2552, line: 908, type: !16, isLocal: true, isDefinition: true)
!2593 = distinct !DISubprogram(name: "pmu_ctrl_va28_ldo_mt6385", scope: !2552, file: !2552, line: 906, type: !2594, scopeLine: 907, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2551, retainedNodes: !2596)
!2594 = !DISubroutineType(types: !2595)
!2595 = !{null, !76}
!2596 = !{!2597}
!2597 = !DILocalVariable(name: "enable", arg: 1, scope: !2593, file: !2552, line: 906, type: !76)
!2598 = !DIGlobalVariableExpression(var: !2599, expr: !DIExpression())
!2599 = distinct !DIGlobalVariable(name: "version", scope: !2593, file: !2552, line: 909, type: !76, isLocal: true, isDefinition: true)
!2600 = !DIGlobalVariableExpression(var: !2601, expr: !DIExpression())
!2601 = distinct !DIGlobalVariable(name: "Vcore_Resource_Ctrl", scope: !2602, file: !2552, line: 979, type: !2607, isLocal: true, isDefinition: true)
!2602 = distinct !DISubprogram(name: "pmu_set_vcore_voltage_mt6385", scope: !2552, file: !2552, line: 977, type: !2532, scopeLine: 978, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2551, retainedNodes: !2603)
!2603 = !{!2604, !2605, !2606}
!2604 = !DILocalVariable(name: "lock", arg: 1, scope: !2602, file: !2552, line: 977, type: !76)
!2605 = !DILocalVariable(name: "vcore_vosel", arg: 2, scope: !2602, file: !2552, line: 977, type: !76)
!2606 = !DILocalVariable(name: "vol_index", scope: !2602, file: !2552, line: 980, type: !7)
!2607 = !DICompositeType(tag: DW_TAG_array_type, baseType: !76, size: 56, elements: !669)
!2608 = !DIGlobalVariableExpression(var: !2609, expr: !DIExpression())
!2609 = distinct !DIGlobalVariable(name: "origin_voltage", scope: !2602, file: !2552, line: 979, type: !76, isLocal: true, isDefinition: true)
!2610 = !DIGlobalVariableExpression(var: !2611, expr: !DIExpression())
!2611 = distinct !DIGlobalVariable(name: "old_vcore", scope: !2602, file: !2552, line: 979, type: !76, isLocal: true, isDefinition: true)
!2612 = !DIGlobalVariableExpression(var: !2613, expr: !DIExpression())
!2613 = distinct !DIGlobalVariable(name: "old_vcore_lp", scope: !2602, file: !2552, line: 979, type: !76, isLocal: true, isDefinition: true)
!2614 = !DIGlobalVariableExpression(var: !2615, expr: !DIExpression())
!2615 = distinct !DIGlobalVariable(name: "init", scope: !2602, file: !2552, line: 979, type: !76, isLocal: true, isDefinition: true)
!2616 = !DIGlobalVariableExpression(var: !2617, expr: !DIExpression())
!2617 = distinct !DIGlobalVariable(name: "S1_setting", scope: !2618, file: !2552, line: 1062, type: !2580, isLocal: true, isDefinition: true)
!2618 = distinct !DISubprogram(name: "pmu_set_vcore_s1_buck_mt6385", scope: !2552, file: !2552, line: 1060, type: !260, scopeLine: 1061, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2551, retainedNodes: !2619)
!2619 = !{!2620}
!2620 = !DILocalVariable(name: "vcbuck_voval", scope: !2618, file: !2552, line: 1063, type: !2621)
!2621 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 224, elements: !669)
!2622 = !DIGlobalVariableExpression(var: !2623, expr: !DIExpression())
!2623 = distinct !DIGlobalVariable(name: "current_setting", scope: !2618, file: !2552, line: 1062, type: !2580, isLocal: true, isDefinition: true)
!2624 = !DIGlobalVariableExpression(var: !2615, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!2625 = !DIGlobalVariableExpression(var: !2626, expr: !DIExpression())
!2626 = distinct !DIGlobalVariable(name: "emi_settings", scope: !2627, file: !2628, line: 44, type: !2774, isLocal: false, isDefinition: true)
!2627 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2628, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2629, retainedTypes: !2635, globals: !2636, splitDebugInlining: false, nameTableKind: None)
!2628 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_emi.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/powerkey/GCC")
!2629 = !{!2630}
!2630 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "emi_clock_enum_t", file: !2631, line: 40, baseType: !16, size: 32, elements: !2632)
!2631 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_emi_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/powerkey/GCC")
!2632 = !{!2633, !2634}
!2633 = !DIEnumerator(name: "EMI_CLK_LOW_TO_HIGH", value: 0)
!2634 = !DIEnumerator(name: "EMI_CLK_HIGH_TO_LOW", value: 1)
!2635 = !{!1434}
!2636 = !{!2625, !2637, !2639, !2641, !2643, !2744, !2746, !2748, !2750, !2752, !2754, !2756, !2758, !2760, !2762, !2764, !2766, !2768, !2770, !2772}
!2637 = !DIGlobalVariableExpression(var: !2638, expr: !DIExpression())
!2638 = distinct !DIGlobalVariable(name: "__EMI_CurSR0", scope: !2627, file: !2628, line: 65, type: !61, isLocal: false, isDefinition: true)
!2639 = !DIGlobalVariableExpression(var: !2640, expr: !DIExpression())
!2640 = distinct !DIGlobalVariable(name: "__EMI_CurSR1", scope: !2627, file: !2628, line: 66, type: !61, isLocal: false, isDefinition: true)
!2641 = !DIGlobalVariableExpression(var: !2642, expr: !DIExpression())
!2642 = distinct !DIGlobalVariable(name: "__EMI_CurSR2", scope: !2627, file: !2628, line: 67, type: !61, isLocal: false, isDefinition: true)
!2643 = !DIGlobalVariableExpression(var: !2644, expr: !DIExpression())
!2644 = distinct !DIGlobalVariable(name: "emi_register", scope: !2627, file: !2628, line: 83, type: !2645, isLocal: false, isDefinition: true)
!2645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2646, size: 32)
!2646 = !DIDerivedType(tag: DW_TAG_typedef, name: "EMI_REGISTER_T", file: !154, line: 2524, baseType: !2647)
!2647 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !154, line: 2447, size: 6752, elements: !2648)
!2648 = !{!2649, !2653, !2654, !2655, !2656, !2660, !2661, !2663, !2664, !2668, !2669, !2670, !2671, !2672, !2673, !2674, !2675, !2676, !2677, !2678, !2679, !2680, !2681, !2685, !2686, !2687, !2688, !2689, !2690, !2691, !2692, !2693, !2694, !2695, !2696, !2697, !2698, !2699, !2700, !2701, !2702, !2703, !2704, !2705, !2706, !2710, !2711, !2712, !2713, !2714, !2715, !2716, !2717, !2718, !2719, !2720, !2721, !2722, !2723, !2724, !2725, !2726, !2727, !2728, !2729, !2733, !2734, !2735, !2736, !2737, !2738, !2739, !2740, !2741, !2742, !2743}
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2647, file: !154, line: 2448, baseType: !2650, size: 768)
!2650 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1292, size: 768, elements: !2651)
!2651 = !{!2652}
!2652 = !DISubrange(count: 96)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_CONM", scope: !2647, file: !154, line: 2449, baseType: !237, size: 32, offset: 768)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2647, file: !154, line: 2450, baseType: !1291, size: 96, offset: 800)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_GENA", scope: !2647, file: !154, line: 2451, baseType: !237, size: 32, offset: 896)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2647, file: !154, line: 2452, baseType: !2657, size: 160, offset: 928)
!2657 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1292, size: 160, elements: !2658)
!2658 = !{!2659}
!2659 = !DISubrange(count: 20)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_RDCT", scope: !2647, file: !154, line: 2453, baseType: !237, size: 32, offset: 1088)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2647, file: !154, line: 2454, baseType: !2662, size: 32, offset: 1120)
!2662 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1292, size: 32, elements: !529)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_DLLV", scope: !2647, file: !154, line: 2455, baseType: !237, size: 32, offset: 1152)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2647, file: !154, line: 2456, baseType: !2665, size: 480, offset: 1184)
!2665 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1292, size: 480, elements: !2666)
!2666 = !{!2667}
!2667 = !DISubrange(count: 60)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDLC", scope: !2647, file: !154, line: 2457, baseType: !237, size: 32, offset: 1664)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2647, file: !154, line: 2458, baseType: !2662, size: 32, offset: 1696)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDLD", scope: !2647, file: !154, line: 2459, baseType: !237, size: 32, offset: 1728)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2647, file: !154, line: 2460, baseType: !2662, size: 32, offset: 1760)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDLE", scope: !2647, file: !154, line: 2461, baseType: !237, size: 32, offset: 1792)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED8", scope: !2647, file: !154, line: 2462, baseType: !2657, size: 160, offset: 1824)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODLC", scope: !2647, file: !154, line: 2463, baseType: !237, size: 32, offset: 1984)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED9", scope: !2647, file: !154, line: 2464, baseType: !2662, size: 32, offset: 2016)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODLD", scope: !2647, file: !154, line: 2465, baseType: !237, size: 32, offset: 2048)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED10", scope: !2647, file: !154, line: 2466, baseType: !2662, size: 32, offset: 2080)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODLE", scope: !2647, file: !154, line: 2467, baseType: !237, size: 32, offset: 2112)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED11", scope: !2647, file: !154, line: 2468, baseType: !2662, size: 32, offset: 2144)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODLF", scope: !2647, file: !154, line: 2469, baseType: !237, size: 32, offset: 2176)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED12", scope: !2647, file: !154, line: 2470, baseType: !2682, size: 224, offset: 2208)
!2682 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1292, size: 224, elements: !2683)
!2683 = !{!2684}
!2684 = !DISubrange(count: 28)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IOA", scope: !2647, file: !154, line: 2471, baseType: !237, size: 32, offset: 2432)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED13", scope: !2647, file: !154, line: 2472, baseType: !2662, size: 32, offset: 2464)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IOB", scope: !2647, file: !154, line: 2473, baseType: !237, size: 32, offset: 2496)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED14", scope: !2647, file: !154, line: 2474, baseType: !1291, size: 96, offset: 2528)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_HFSLP", scope: !2647, file: !154, line: 2475, baseType: !237, size: 32, offset: 2624)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED15", scope: !2647, file: !154, line: 2476, baseType: !2662, size: 32, offset: 2656)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_DSRAM", scope: !2647, file: !154, line: 2477, baseType: !237, size: 32, offset: 2688)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED16", scope: !2647, file: !154, line: 2478, baseType: !2662, size: 32, offset: 2720)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MSRAM", scope: !2647, file: !154, line: 2479, baseType: !237, size: 32, offset: 2752)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED17", scope: !2647, file: !154, line: 2480, baseType: !2662, size: 32, offset: 2784)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MREG_RW", scope: !2647, file: !154, line: 2481, baseType: !237, size: 32, offset: 2816)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED18", scope: !2647, file: !154, line: 2482, baseType: !1291, size: 96, offset: 2848)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ARBA", scope: !2647, file: !154, line: 2483, baseType: !237, size: 32, offset: 2944)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED19", scope: !2647, file: !154, line: 2484, baseType: !2662, size: 32, offset: 2976)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ARBB", scope: !2647, file: !154, line: 2485, baseType: !237, size: 32, offset: 3008)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED20", scope: !2647, file: !154, line: 2486, baseType: !2662, size: 32, offset: 3040)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ARBC", scope: !2647, file: !154, line: 2487, baseType: !237, size: 32, offset: 3072)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED21", scope: !2647, file: !154, line: 2488, baseType: !2657, size: 160, offset: 3104)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_SLCT", scope: !2647, file: !154, line: 2489, baseType: !237, size: 32, offset: 3264)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED22", scope: !2647, file: !154, line: 2490, baseType: !2662, size: 32, offset: 3296)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ABCT", scope: !2647, file: !154, line: 2491, baseType: !237, size: 32, offset: 3328)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED23", scope: !2647, file: !154, line: 2492, baseType: !2707, size: 736, offset: 3360)
!2707 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1292, size: 736, elements: !2708)
!2708 = !{!2709}
!2709 = !DISubrange(count: 92)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_BMEN", scope: !2647, file: !154, line: 2493, baseType: !237, size: 32, offset: 4096)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED24", scope: !2647, file: !154, line: 2494, baseType: !2662, size: 32, offset: 4128)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_BCNT", scope: !2647, file: !154, line: 2495, baseType: !237, size: 32, offset: 4160)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED25", scope: !2647, file: !154, line: 2496, baseType: !2662, size: 32, offset: 4192)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_TACT", scope: !2647, file: !154, line: 2497, baseType: !237, size: 32, offset: 4224)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED26", scope: !2647, file: !154, line: 2498, baseType: !2662, size: 32, offset: 4256)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_TSCT", scope: !2647, file: !154, line: 2499, baseType: !237, size: 32, offset: 4288)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED27", scope: !2647, file: !154, line: 2500, baseType: !2662, size: 32, offset: 4320)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_WACT", scope: !2647, file: !154, line: 2501, baseType: !237, size: 32, offset: 4352)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED28", scope: !2647, file: !154, line: 2502, baseType: !2662, size: 32, offset: 4384)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_WSCT", scope: !2647, file: !154, line: 2503, baseType: !237, size: 32, offset: 4416)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED29", scope: !2647, file: !154, line: 2504, baseType: !2662, size: 32, offset: 4448)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_BACT", scope: !2647, file: !154, line: 2505, baseType: !237, size: 32, offset: 4480)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED30", scope: !2647, file: !154, line: 2506, baseType: !2662, size: 32, offset: 4512)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_BSCT0", scope: !2647, file: !154, line: 2507, baseType: !237, size: 32, offset: 4544)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED31", scope: !2647, file: !154, line: 2508, baseType: !2662, size: 32, offset: 4576)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_BSCT1", scope: !2647, file: !154, line: 2509, baseType: !237, size: 32, offset: 4608)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED32", scope: !2647, file: !154, line: 2510, baseType: !2665, size: 480, offset: 4640)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_TTYPE1", scope: !2647, file: !154, line: 2511, baseType: !237, size: 32, offset: 5120)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED33", scope: !2647, file: !154, line: 2512, baseType: !2730, size: 992, offset: 5152)
!2730 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1292, size: 992, elements: !2731)
!2731 = !{!2732}
!2732 = !DISubrange(count: 124)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MBISTA", scope: !2647, file: !154, line: 2513, baseType: !237, size: 32, offset: 6144)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED34", scope: !2647, file: !154, line: 2514, baseType: !2662, size: 32, offset: 6176)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MBISTB", scope: !2647, file: !154, line: 2515, baseType: !237, size: 32, offset: 6208)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED35", scope: !2647, file: !154, line: 2516, baseType: !2662, size: 32, offset: 6240)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MBISTC", scope: !2647, file: !154, line: 2517, baseType: !237, size: 32, offset: 6272)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED36", scope: !2647, file: !154, line: 2518, baseType: !2662, size: 32, offset: 6304)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MBISTD", scope: !2647, file: !154, line: 2519, baseType: !237, size: 32, offset: 6336)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED37", scope: !2647, file: !154, line: 2520, baseType: !2657, size: 160, offset: 6368)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_TEST", scope: !2647, file: !154, line: 2521, baseType: !237, size: 32, offset: 6528)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED38", scope: !2647, file: !154, line: 2522, baseType: !2657, size: 160, offset: 6560)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_VENDER_INFO", scope: !2647, file: !154, line: 2523, baseType: !237, size: 32, offset: 6720)
!2744 = !DIGlobalVariableExpression(var: !2745, expr: !DIExpression())
!2745 = distinct !DIGlobalVariable(name: "dvfs_dma_runing_status", scope: !2627, file: !2628, line: 485, type: !237, isLocal: false, isDefinition: true)
!2746 = !DIGlobalVariableExpression(var: !2747, expr: !DIExpression())
!2747 = distinct !DIGlobalVariable(name: "EMI_GENA_VAL", scope: !2627, file: !2628, line: 68, type: !61, isLocal: false, isDefinition: true)
!2748 = !DIGlobalVariableExpression(var: !2749, expr: !DIExpression())
!2749 = distinct !DIGlobalVariable(name: "EMI_RDCT_VAL", scope: !2627, file: !2628, line: 69, type: !61, isLocal: false, isDefinition: true)
!2750 = !DIGlobalVariableExpression(var: !2751, expr: !DIExpression())
!2751 = distinct !DIGlobalVariable(name: "EMI_DSRAM_VAL", scope: !2627, file: !2628, line: 70, type: !61, isLocal: false, isDefinition: true)
!2752 = !DIGlobalVariableExpression(var: !2753, expr: !DIExpression())
!2753 = distinct !DIGlobalVariable(name: "EMI_MSRAM_VAL", scope: !2627, file: !2628, line: 71, type: !61, isLocal: false, isDefinition: true)
!2754 = !DIGlobalVariableExpression(var: !2755, expr: !DIExpression())
!2755 = distinct !DIGlobalVariable(name: "EMI_IDL_C_VAL", scope: !2627, file: !2628, line: 72, type: !61, isLocal: false, isDefinition: true)
!2756 = !DIGlobalVariableExpression(var: !2757, expr: !DIExpression())
!2757 = distinct !DIGlobalVariable(name: "EMI_IDL_D_VAL", scope: !2627, file: !2628, line: 73, type: !61, isLocal: false, isDefinition: true)
!2758 = !DIGlobalVariableExpression(var: !2759, expr: !DIExpression())
!2759 = distinct !DIGlobalVariable(name: "EMI_IDL_E_VAL", scope: !2627, file: !2628, line: 74, type: !61, isLocal: false, isDefinition: true)
!2760 = !DIGlobalVariableExpression(var: !2761, expr: !DIExpression())
!2761 = distinct !DIGlobalVariable(name: "EMI_ODL_C_VAL", scope: !2627, file: !2628, line: 75, type: !61, isLocal: false, isDefinition: true)
!2762 = !DIGlobalVariableExpression(var: !2763, expr: !DIExpression())
!2763 = distinct !DIGlobalVariable(name: "EMI_ODL_D_VAL", scope: !2627, file: !2628, line: 76, type: !61, isLocal: false, isDefinition: true)
!2764 = !DIGlobalVariableExpression(var: !2765, expr: !DIExpression())
!2765 = distinct !DIGlobalVariable(name: "EMI_ODL_E_VAL", scope: !2627, file: !2628, line: 77, type: !61, isLocal: false, isDefinition: true)
!2766 = !DIGlobalVariableExpression(var: !2767, expr: !DIExpression())
!2767 = distinct !DIGlobalVariable(name: "EMI_ODL_F_VAL", scope: !2627, file: !2628, line: 78, type: !61, isLocal: false, isDefinition: true)
!2768 = !DIGlobalVariableExpression(var: !2769, expr: !DIExpression())
!2769 = distinct !DIGlobalVariable(name: "EMI_IO_A_VAL", scope: !2627, file: !2628, line: 79, type: !61, isLocal: false, isDefinition: true)
!2770 = !DIGlobalVariableExpression(var: !2771, expr: !DIExpression())
!2771 = distinct !DIGlobalVariable(name: "EMI_IO_B_VAL", scope: !2627, file: !2628, line: 80, type: !61, isLocal: false, isDefinition: true)
!2772 = !DIGlobalVariableExpression(var: !2773, expr: !DIExpression())
!2773 = distinct !DIGlobalVariable(name: "emi_register_backup", scope: !2627, file: !2628, line: 84, type: !2646, isLocal: false, isDefinition: true)
!2774 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2775, size: 416, elements: !2791)
!2775 = !DIDerivedType(tag: DW_TAG_typedef, name: "EMI_SETTINGS", file: !2631, line: 60, baseType: !2776)
!2776 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2631, line: 45, size: 416, elements: !2777)
!2777 = !{!2778, !2779, !2780, !2781, !2782, !2783, !2784, !2785, !2786, !2787, !2788, !2789, !2790}
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_GENA_VAL", scope: !2776, file: !2631, line: 46, baseType: !61, size: 32)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_RDCT_VAL", scope: !2776, file: !2631, line: 47, baseType: !61, size: 32, offset: 32)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_DSRAM_VAL", scope: !2776, file: !2631, line: 48, baseType: !61, size: 32, offset: 64)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MSRAM_VAL", scope: !2776, file: !2631, line: 49, baseType: !61, size: 32, offset: 96)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDL_C_VAL", scope: !2776, file: !2631, line: 50, baseType: !61, size: 32, offset: 128)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDL_D_VAL", scope: !2776, file: !2631, line: 51, baseType: !61, size: 32, offset: 160)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDL_E_VAL", scope: !2776, file: !2631, line: 52, baseType: !61, size: 32, offset: 192)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODL_C_VAL", scope: !2776, file: !2631, line: 53, baseType: !61, size: 32, offset: 224)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODL_D_VAL", scope: !2776, file: !2631, line: 54, baseType: !61, size: 32, offset: 256)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODL_E_VAL", scope: !2776, file: !2631, line: 55, baseType: !61, size: 32, offset: 288)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODL_F_VAL", scope: !2776, file: !2631, line: 56, baseType: !61, size: 32, offset: 320)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IO_A_VAL", scope: !2776, file: !2631, line: 57, baseType: !61, size: 32, offset: 352)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IO_B_VAL", scope: !2776, file: !2631, line: 58, baseType: !61, size: 32, offset: 384)
!2791 = !{!2792}
!2792 = !DISubrange(count: 1)
!2793 = !DIGlobalVariableExpression(var: !2794, expr: !DIExpression())
!2794 = distinct !DIGlobalVariable(name: "cm_freq_state", scope: !2795, file: !2796, line: 48, type: !2804, isLocal: false, isDefinition: true)
!2795 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2796, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2797, globals: !2803, splitDebugInlining: false, nameTableKind: None)
!2796 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_clock_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/powerkey/GCC")
!2797 = !{!2798}
!2798 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1379, line: 100, baseType: !16, size: 32, elements: !2799)
!2799 = !{!2800, !2801, !2802}
!2800 = !DIEnumerator(name: "CM_208M_STA", value: 0)
!2801 = !DIEnumerator(name: "CM_104M_STA", value: 1)
!2802 = !DIEnumerator(name: "CM_26M_STA", value: 2)
!2803 = !{!2793}
!2804 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_cm_freq_state_id", file: !1379, line: 104, baseType: !2798)
!2805 = !DIGlobalVariableExpression(var: !2806, expr: !DIExpression())
!2806 = distinct !DIGlobalVariable(name: "heap_end", scope: !2807, file: !2808, line: 69, type: !799, isLocal: true, isDefinition: true)
!2807 = distinct !DISubprogram(name: "_sbrk_r", scope: !2808, file: !2808, line: 66, type: !2809, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2997, retainedNodes: !3001)
!2808 = !DIFile(filename: "../../../../../project/mt2523_hdk/hal_examples/powerkey/GCC/syscalls.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/powerkey/GCC")
!2809 = !DISubroutineType(types: !2810)
!2810 = !{!2811, !2813, !2996}
!2811 = !DIDerivedType(tag: DW_TAG_typedef, name: "caddr_t", file: !2812, line: 123, baseType: !799)
!2812 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/types.h", directory: "/home/mjshen/RTOSExploration")
!2813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2814, size: 32)
!2814 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_reent", file: !2815, line: 377, size: 1920, elements: !2816)
!2815 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/reent.h", directory: "/home/mjshen/RTOSExploration")
!2816 = !{!2817, !2818, !2886, !2887, !2888, !2889, !2890, !2891, !2892, !2895, !2916, !2920, !2921, !2922, !2923, !2933, !2946, !2947, !2952, !2970, !2971, !2978, !2979, !2995}
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "_errno", scope: !2814, file: !2815, line: 381, baseType: !7, size: 32)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "_stdin", scope: !2814, file: !2815, line: 386, baseType: !2819, size: 32, offset: 32)
!2819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2820, size: 32)
!2820 = !DIDerivedType(tag: DW_TAG_typedef, name: "__FILE", file: !2815, line: 292, baseType: !2821)
!2821 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__sFILE", file: !2815, line: 186, size: 832, elements: !2822)
!2822 = !{!2823, !2825, !2826, !2827, !2828, !2829, !2834, !2835, !2836, !2837, !2841, !2845, !2852, !2856, !2857, !2858, !2859, !2861, !2863, !2864, !2865, !2867, !2873, !2885}
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "_p", scope: !2821, file: !2815, line: 187, baseType: !2824, size: 32)
!2824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !76, size: 32)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "_r", scope: !2821, file: !2815, line: 188, baseType: !7, size: 32, offset: 32)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "_w", scope: !2821, file: !2815, line: 189, baseType: !7, size: 32, offset: 64)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2821, file: !2815, line: 190, baseType: !1833, size: 16, offset: 96)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "_file", scope: !2821, file: !2815, line: 191, baseType: !1833, size: 16, offset: 112)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "_bf", scope: !2821, file: !2815, line: 192, baseType: !2830, size: 64, offset: 128)
!2830 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__sbuf", file: !2815, line: 122, size: 64, elements: !2831)
!2831 = !{!2832, !2833}
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "_base", scope: !2830, file: !2815, line: 123, baseType: !2824, size: 32)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "_size", scope: !2830, file: !2815, line: 124, baseType: !7, size: 32, offset: 32)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "_lbfsize", scope: !2821, file: !2815, line: 193, baseType: !7, size: 32, offset: 192)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "_data", scope: !2821, file: !2815, line: 196, baseType: !2813, size: 32, offset: 224)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "_cookie", scope: !2821, file: !2815, line: 200, baseType: !65, size: 32, offset: 256)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "_read", scope: !2821, file: !2815, line: 202, baseType: !2838, size: 32, offset: 288)
!2838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2839, size: 32)
!2839 = !DISubroutineType(types: !2840)
!2840 = !{!7, !2813, !65, !799, !7}
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "_write", scope: !2821, file: !2815, line: 204, baseType: !2842, size: 32, offset: 320)
!2842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2843, size: 32)
!2843 = !DISubroutineType(types: !2844)
!2844 = !{!7, !2813, !65, !80, !7}
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "_seek", scope: !2821, file: !2815, line: 207, baseType: !2846, size: 32, offset: 352)
!2846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2847, size: 32)
!2847 = !DISubroutineType(types: !2848)
!2848 = !{!2849, !2813, !65, !2849, !7}
!2849 = !DIDerivedType(tag: DW_TAG_typedef, name: "_fpos_t", file: !2850, line: 116, baseType: !2851)
!2850 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_types.h", directory: "/home/mjshen/RTOSExploration")
!2851 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "_close", scope: !2821, file: !2815, line: 208, baseType: !2853, size: 32, offset: 384)
!2853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2854, size: 32)
!2854 = !DISubroutineType(types: !2855)
!2855 = !{!7, !2813, !65}
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "_ub", scope: !2821, file: !2815, line: 211, baseType: !2830, size: 64, offset: 416)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "_up", scope: !2821, file: !2815, line: 212, baseType: !2824, size: 32, offset: 480)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "_ur", scope: !2821, file: !2815, line: 213, baseType: !7, size: 32, offset: 512)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "_ubuf", scope: !2821, file: !2815, line: 216, baseType: !2860, size: 24, offset: 544)
!2860 = !DICompositeType(tag: DW_TAG_array_type, baseType: !76, size: 24, elements: !1209)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "_nbuf", scope: !2821, file: !2815, line: 217, baseType: !2862, size: 8, offset: 568)
!2862 = !DICompositeType(tag: DW_TAG_array_type, baseType: !76, size: 8, elements: !2791)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "_lb", scope: !2821, file: !2815, line: 220, baseType: !2830, size: 64, offset: 576)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "_blksize", scope: !2821, file: !2815, line: 223, baseType: !7, size: 32, offset: 640)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2821, file: !2815, line: 224, baseType: !2866, size: 32, offset: 672)
!2866 = !DIDerivedType(tag: DW_TAG_typedef, name: "_off_t", file: !2850, line: 46, baseType: !2851)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2821, file: !2815, line: 231, baseType: !2868, size: 32, offset: 704)
!2868 = !DIDerivedType(tag: DW_TAG_typedef, name: "_flock_t", file: !2815, line: 35, baseType: !2869)
!2869 = !DIDerivedType(tag: DW_TAG_typedef, name: "_LOCK_T", file: !2870, line: 34, baseType: !2871)
!2870 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/lock.h", directory: "/home/mjshen/RTOSExploration")
!2871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2872, size: 32)
!2872 = !DICompositeType(tag: DW_TAG_structure_type, name: "__lock", file: !2870, line: 33, flags: DIFlagFwdDecl)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "_mbstate", scope: !2821, file: !2815, line: 233, baseType: !2874, size: 64, offset: 736)
!2874 = !DIDerivedType(tag: DW_TAG_typedef, name: "_mbstate_t", file: !2850, line: 170, baseType: !2875)
!2875 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2850, line: 162, size: 64, elements: !2876)
!2876 = !{!2877, !2878}
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !2875, file: !2850, line: 164, baseType: !7, size: 32)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !2875, file: !2850, line: 169, baseType: !2879, size: 32, offset: 32)
!2879 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2875, file: !2850, line: 165, size: 32, elements: !2880)
!2880 = !{!2881, !2884}
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !2879, file: !2850, line: 167, baseType: !2882, size: 32)
!2882 = !DIDerivedType(tag: DW_TAG_typedef, name: "wint_t", file: !2883, line: 116, baseType: !7)
!2883 = !DIFile(filename: "/usr/lib/llvm-14/lib/clang/14.0.6/include/stddef.h", directory: "")
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !2879, file: !2850, line: 168, baseType: !2521, size: 32)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2821, file: !2815, line: 234, baseType: !7, size: 32, offset: 800)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "_stdout", scope: !2814, file: !2815, line: 386, baseType: !2819, size: 32, offset: 64)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "_stderr", scope: !2814, file: !2815, line: 386, baseType: !2819, size: 32, offset: 96)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "_inc", scope: !2814, file: !2815, line: 388, baseType: !7, size: 32, offset: 128)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "_emergency", scope: !2814, file: !2815, line: 390, baseType: !799, size: 32, offset: 160)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "__sdidinit", scope: !2814, file: !2815, line: 392, baseType: !7, size: 32, offset: 192)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "_unspecified_locale_info", scope: !2814, file: !2815, line: 394, baseType: !7, size: 32, offset: 224)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "_locale", scope: !2814, file: !2815, line: 395, baseType: !2893, size: 32, offset: 256)
!2893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2894, size: 32)
!2894 = !DICompositeType(tag: DW_TAG_structure_type, name: "__locale_t", file: !2815, line: 45, flags: DIFlagFwdDecl)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "_mp", scope: !2814, file: !2815, line: 397, baseType: !2896, size: 32, offset: 288)
!2896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2897, size: 32)
!2897 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_mprec", file: !2815, line: 349, size: 128, elements: !2898)
!2898 = !{!2899, !2912, !2913, !2914}
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "_result", scope: !2897, file: !2815, line: 352, baseType: !2900, size: 32)
!2900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2901, size: 32)
!2901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Bigint", file: !2815, line: 52, size: 192, elements: !2902)
!2902 = !{!2903, !2904, !2905, !2906, !2907, !2908}
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !2901, file: !2815, line: 54, baseType: !2900, size: 32)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "_k", scope: !2901, file: !2815, line: 55, baseType: !7, size: 32, offset: 32)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "_maxwds", scope: !2901, file: !2815, line: 55, baseType: !7, size: 32, offset: 64)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "_sign", scope: !2901, file: !2815, line: 55, baseType: !7, size: 32, offset: 96)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "_wds", scope: !2901, file: !2815, line: 55, baseType: !7, size: 32, offset: 128)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "_x", scope: !2901, file: !2815, line: 56, baseType: !2909, size: 32, offset: 160)
!2909 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2910, size: 32, elements: !2791)
!2910 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ULong", file: !2815, line: 22, baseType: !2911)
!2911 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "_result_k", scope: !2897, file: !2815, line: 353, baseType: !7, size: 32, offset: 32)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "_p5s", scope: !2897, file: !2815, line: 354, baseType: !2900, size: 32, offset: 64)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "_freelist", scope: !2897, file: !2815, line: 355, baseType: !2915, size: 32, offset: 96)
!2915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2900, size: 32)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "__cleanup", scope: !2814, file: !2815, line: 399, baseType: !2917, size: 32, offset: 320)
!2917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2918, size: 32)
!2918 = !DISubroutineType(types: !2919)
!2919 = !{null, !2813}
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "_gamma_signgam", scope: !2814, file: !2815, line: 401, baseType: !7, size: 32, offset: 352)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "_cvtlen", scope: !2814, file: !2815, line: 404, baseType: !7, size: 32, offset: 384)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "_cvtbuf", scope: !2814, file: !2815, line: 405, baseType: !799, size: 32, offset: 416)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "_r48", scope: !2814, file: !2815, line: 407, baseType: !2924, size: 32, offset: 448)
!2924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2925, size: 32)
!2925 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rand48", file: !2815, line: 324, size: 192, elements: !2926)
!2926 = !{!2927, !2929, !2930, !2931}
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "_seed", scope: !2925, file: !2815, line: 325, baseType: !2928, size: 48)
!2928 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1043, size: 48, elements: !1209)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "_mult", scope: !2925, file: !2815, line: 326, baseType: !2928, size: 48, offset: 48)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "_add", scope: !2925, file: !2815, line: 327, baseType: !1043, size: 16, offset: 96)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "_rand_next", scope: !2925, file: !2815, line: 330, baseType: !2932, size: 64, offset: 128)
!2932 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "_localtime_buf", scope: !2814, file: !2815, line: 408, baseType: !2934, size: 32, offset: 480)
!2934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2935, size: 32)
!2935 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__tm", file: !2815, line: 60, size: 288, elements: !2936)
!2936 = !{!2937, !2938, !2939, !2940, !2941, !2942, !2943, !2944, !2945}
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_sec", scope: !2935, file: !2815, line: 62, baseType: !7, size: 32)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_min", scope: !2935, file: !2815, line: 63, baseType: !7, size: 32, offset: 32)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_hour", scope: !2935, file: !2815, line: 64, baseType: !7, size: 32, offset: 64)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_mday", scope: !2935, file: !2815, line: 65, baseType: !7, size: 32, offset: 96)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_mon", scope: !2935, file: !2815, line: 66, baseType: !7, size: 32, offset: 128)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_year", scope: !2935, file: !2815, line: 67, baseType: !7, size: 32, offset: 160)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_wday", scope: !2935, file: !2815, line: 68, baseType: !7, size: 32, offset: 192)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_yday", scope: !2935, file: !2815, line: 69, baseType: !7, size: 32, offset: 224)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_isdst", scope: !2935, file: !2815, line: 70, baseType: !7, size: 32, offset: 256)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "_asctime_buf", scope: !2814, file: !2815, line: 409, baseType: !799, size: 32, offset: 512)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "_sig_func", scope: !2814, file: !2815, line: 412, baseType: !2948, size: 32, offset: 544)
!2948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2949, size: 32)
!2949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2950, size: 32)
!2950 = !DISubroutineType(types: !2951)
!2951 = !{null, !7}
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "_atexit", scope: !2814, file: !2815, line: 416, baseType: !2953, size: 32, offset: 576)
!2953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2954, size: 32)
!2954 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_atexit", file: !2815, line: 90, size: 1120, elements: !2955)
!2955 = !{!2956, !2957, !2958, !2961}
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !2954, file: !2815, line: 91, baseType: !2953, size: 32)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "_ind", scope: !2954, file: !2815, line: 92, baseType: !7, size: 32, offset: 32)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "_fns", scope: !2954, file: !2815, line: 93, baseType: !2959, size: 1024, offset: 64)
!2959 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2960, size: 1024, elements: !294)
!2960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !260, size: 32)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "_on_exit_args_ptr", scope: !2954, file: !2815, line: 94, baseType: !2962, size: 32, offset: 1088)
!2962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2963, size: 32)
!2963 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_on_exit_args", file: !2815, line: 79, size: 2112, elements: !2964)
!2964 = !{!2965, !2967, !2968, !2969}
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "_fnargs", scope: !2963, file: !2815, line: 80, baseType: !2966, size: 1024)
!2966 = !DICompositeType(tag: DW_TAG_array_type, baseType: !65, size: 1024, elements: !294)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "_dso_handle", scope: !2963, file: !2815, line: 81, baseType: !2966, size: 1024, offset: 1024)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "_fntypes", scope: !2963, file: !2815, line: 83, baseType: !2910, size: 32, offset: 2048)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "_is_cxa", scope: !2963, file: !2815, line: 86, baseType: !2910, size: 32, offset: 2080)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "_atexit0", scope: !2814, file: !2815, line: 417, baseType: !2954, size: 1120, offset: 608)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "__sglue", scope: !2814, file: !2815, line: 420, baseType: !2972, size: 96, offset: 1728)
!2972 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_glue", file: !2815, line: 296, size: 96, elements: !2973)
!2973 = !{!2974, !2976, !2977}
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !2972, file: !2815, line: 298, baseType: !2975, size: 32)
!2975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2972, size: 32)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "_niobs", scope: !2972, file: !2815, line: 299, baseType: !7, size: 32, offset: 32)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "_iobs", scope: !2972, file: !2815, line: 300, baseType: !2819, size: 32, offset: 64)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "__sf", scope: !2814, file: !2815, line: 421, baseType: !2819, size: 32, offset: 1824)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "_misc", scope: !2814, file: !2815, line: 422, baseType: !2980, size: 32, offset: 1856)
!2980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2981, size: 32)
!2981 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_misc_reent", file: !2815, line: 359, size: 640, elements: !2982)
!2982 = !{!2983, !2984, !2985, !2986, !2987, !2989, !2990, !2991, !2992, !2993, !2994}
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "_strtok_last", scope: !2981, file: !2815, line: 362, baseType: !799, size: 32)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "_mblen_state", scope: !2981, file: !2815, line: 363, baseType: !2874, size: 64, offset: 32)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "_wctomb_state", scope: !2981, file: !2815, line: 364, baseType: !2874, size: 64, offset: 96)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "_mbtowc_state", scope: !2981, file: !2815, line: 365, baseType: !2874, size: 64, offset: 160)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "_l64a_buf", scope: !2981, file: !2815, line: 366, baseType: !2988, size: 64, offset: 224)
!2988 = !DICompositeType(tag: DW_TAG_array_type, baseType: !82, size: 64, elements: !863)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "_getdate_err", scope: !2981, file: !2815, line: 367, baseType: !7, size: 32, offset: 288)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "_mbrlen_state", scope: !2981, file: !2815, line: 368, baseType: !2874, size: 64, offset: 320)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "_mbrtowc_state", scope: !2981, file: !2815, line: 369, baseType: !2874, size: 64, offset: 384)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "_mbsrtowcs_state", scope: !2981, file: !2815, line: 370, baseType: !2874, size: 64, offset: 448)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "_wcrtomb_state", scope: !2981, file: !2815, line: 371, baseType: !2874, size: 64, offset: 512)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "_wcsrtombs_state", scope: !2981, file: !2815, line: 372, baseType: !2874, size: 64, offset: 576)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "_signal_buf", scope: !2814, file: !2815, line: 423, baseType: !799, size: 32, offset: 1888)
!2996 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !2883, line: 46, baseType: !16)
!2997 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2998, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2999, globals: !3000, splitDebugInlining: false, nameTableKind: None)
!2998 = !DIFile(filename: "syscalls.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/powerkey/GCC")
!2999 = !{!799, !2811}
!3000 = !{!2805}
!3001 = !{!3002, !3003, !3004, !3005}
!3002 = !DILocalVariable(name: "r", arg: 1, scope: !2807, file: !2808, line: 66, type: !2813)
!3003 = !DILocalVariable(name: "nbytes", arg: 2, scope: !2807, file: !2808, line: 66, type: !2996)
!3004 = !DILocalVariable(name: "prev_heap_end", scope: !2807, file: !2808, line: 70, type: !799)
!3005 = !DILocalVariable(name: "stack", scope: !2807, file: !2808, line: 71, type: !799)
!3006 = !DIGlobalVariableExpression(var: !3007, expr: !DIExpression())
!3007 = distinct !DIGlobalVariable(name: "System_Initialize_Done", scope: !3008, file: !3009, line: 52, type: !237, isLocal: true, isDefinition: true)
!3008 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3009, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3010, globals: !3120, splitDebugInlining: false, nameTableKind: None)
!3009 = !DIFile(filename: "../../../../../project/mt2523_hdk/hal_examples/powerkey/src/system_mt2523.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/powerkey/GCC")
!3010 = !{!3011, !3019, !61, !3064, !3069, !3094}
!3011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3012, size: 32)
!3012 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !1281, line: 656, baseType: !3013)
!3013 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1281, line: 650, size: 128, elements: !3014)
!3014 = !{!3015, !3016, !3017, !3018}
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !3013, file: !1281, line: 652, baseType: !237, size: 32)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !3013, file: !1281, line: 653, baseType: !237, size: 32, offset: 32)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !3013, file: !1281, line: 654, baseType: !237, size: 32, offset: 64)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !3013, file: !1281, line: 655, baseType: !241, size: 32, offset: 96)
!3019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3020, size: 32)
!3020 = !DIDerivedType(tag: DW_TAG_typedef, name: "CONFIGSYS_REGISTER_T", file: !154, line: 1952, baseType: !3021)
!3021 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !154, line: 1921, size: 8288, elements: !3022)
!3022 = !{!3023, !3024, !3025, !3026, !3027, !3028, !3029, !3030, !3031, !3033, !3034, !3038, !3039, !3041, !3042, !3046, !3047, !3048, !3049, !3050, !3051, !3052, !3053, !3054, !3055, !3056, !3057, !3061, !3062, !3063}
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDA", scope: !3021, file: !154, line: 1922, baseType: !237, size: 32)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDB", scope: !3021, file: !154, line: 1923, baseType: !237, size: 32, offset: 32)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDC", scope: !3021, file: !154, line: 1924, baseType: !237, size: 32, offset: 64)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDD", scope: !3021, file: !154, line: 1925, baseType: !237, size: 32, offset: 96)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "reserver1", scope: !3021, file: !154, line: 1926, baseType: !237, size: 32, offset: 128)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDF", scope: !3021, file: !154, line: 1927, baseType: !237, size: 32, offset: 160)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDG", scope: !3021, file: !154, line: 1928, baseType: !237, size: 32, offset: 192)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDH", scope: !3021, file: !154, line: 1929, baseType: !237, size: 32, offset: 224)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "reserver2", scope: !3021, file: !154, line: 1930, baseType: !3032, size: 768, offset: 256)
!3032 = !DICompositeType(tag: DW_TAG_array_type, baseType: !237, size: 768, elements: !1321)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_SOURCE_SEL", scope: !3021, file: !154, line: 1931, baseType: !237, size: 32, offset: 1024)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "reserver3", scope: !3021, file: !154, line: 1932, baseType: !3035, size: 992, offset: 1056)
!3035 = !DICompositeType(tag: DW_TAG_array_type, baseType: !237, size: 992, elements: !3036)
!3036 = !{!3037}
!3037 = !DISubrange(count: 31)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEP_COND", scope: !3021, file: !154, line: 1933, baseType: !237, size: 32, offset: 2048)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "reserver4", scope: !3021, file: !154, line: 1934, baseType: !3040, size: 416, offset: 2080)
!3040 = !DICompositeType(tag: DW_TAG_array_type, baseType: !237, size: 416, elements: !883)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "TOP_DEBUG", scope: !3021, file: !154, line: 1935, baseType: !237, size: 32, offset: 2496)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "reserver5", scope: !3021, file: !154, line: 1936, baseType: !3043, size: 1568, offset: 2528)
!3043 = !DICompositeType(tag: DW_TAG_array_type, baseType: !237, size: 1568, elements: !3044)
!3044 = !{!3045}
!3045 = !DISubrange(count: 49)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_COND0", scope: !3021, file: !154, line: 1937, baseType: !241, size: 32, offset: 4096)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_COND1", scope: !3021, file: !154, line: 1938, baseType: !241, size: 32, offset: 4128)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_COND2", scope: !3021, file: !154, line: 1939, baseType: !241, size: 32, offset: 4160)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "reserver6", scope: !3021, file: !154, line: 1940, baseType: !237, size: 32, offset: 4192)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_SETD0", scope: !3021, file: !154, line: 1941, baseType: !237, size: 32, offset: 4224)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_SETD1", scope: !3021, file: !154, line: 1942, baseType: !237, size: 32, offset: 4256)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_SETD2", scope: !3021, file: !154, line: 1943, baseType: !237, size: 32, offset: 4288)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "reserver7", scope: !3021, file: !154, line: 1944, baseType: !237, size: 32, offset: 4320)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_CLRD0", scope: !3021, file: !154, line: 1945, baseType: !237, size: 32, offset: 4352)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_CLRD1", scope: !3021, file: !154, line: 1946, baseType: !237, size: 32, offset: 4384)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_CLRD2", scope: !3021, file: !154, line: 1947, baseType: !237, size: 32, offset: 4416)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "reserver8", scope: !3021, file: !154, line: 1948, baseType: !3058, size: 3744, offset: 4448)
!3058 = !DICompositeType(tag: DW_TAG_array_type, baseType: !237, size: 3744, elements: !3059)
!3059 = !{!3060}
!3060 = !DISubrange(count: 117)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "LPM_CON", scope: !3021, file: !154, line: 1949, baseType: !237, size: 32, offset: 8192)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "reserver9", scope: !3021, file: !154, line: 1950, baseType: !237, size: 32, offset: 8224)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "LPM_L2H_CNT", scope: !3021, file: !154, line: 1951, baseType: !241, size: 32, offset: 8256)
!3064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3065, size: 32)
!3065 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFUSE_REGISTER_T", file: !154, line: 2158, baseType: !3066)
!3066 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !154, line: 2156, size: 32, elements: !3067)
!3067 = !{!3068}
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "EFUSE_CPU_104M", scope: !3066, file: !154, line: 2157, baseType: !237, size: 32)
!3069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3070, size: 32)
!3070 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1281, line: 418, baseType: !3071)
!3071 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1281, line: 395, size: 1120, elements: !3072)
!3072 = !{!3073, !3074, !3075, !3076, !3077, !3078, !3079, !3080, !3081, !3082, !3083, !3084, !3085, !3086, !3087, !3088, !3089, !3090, !3091, !3092, !3093}
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3071, file: !1281, line: 397, baseType: !241, size: 32)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3071, file: !1281, line: 398, baseType: !237, size: 32, offset: 32)
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3071, file: !1281, line: 399, baseType: !237, size: 32, offset: 64)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3071, file: !1281, line: 400, baseType: !237, size: 32, offset: 96)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3071, file: !1281, line: 401, baseType: !237, size: 32, offset: 128)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3071, file: !1281, line: 402, baseType: !237, size: 32, offset: 160)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3071, file: !1281, line: 403, baseType: !1291, size: 96, offset: 192)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3071, file: !1281, line: 404, baseType: !237, size: 32, offset: 288)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3071, file: !1281, line: 405, baseType: !237, size: 32, offset: 320)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3071, file: !1281, line: 406, baseType: !237, size: 32, offset: 352)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3071, file: !1281, line: 407, baseType: !237, size: 32, offset: 384)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3071, file: !1281, line: 408, baseType: !237, size: 32, offset: 416)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3071, file: !1281, line: 409, baseType: !237, size: 32, offset: 448)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3071, file: !1281, line: 410, baseType: !237, size: 32, offset: 480)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3071, file: !1281, line: 411, baseType: !1301, size: 64, offset: 512)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3071, file: !1281, line: 412, baseType: !241, size: 32, offset: 576)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3071, file: !1281, line: 413, baseType: !241, size: 32, offset: 608)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3071, file: !1281, line: 414, baseType: !1305, size: 128, offset: 640)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3071, file: !1281, line: 415, baseType: !1307, size: 160, offset: 768)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3071, file: !1281, line: 416, baseType: !1311, size: 160, offset: 928)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3071, file: !1281, line: 417, baseType: !237, size: 32, offset: 1088)
!3094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3095, size: 32)
!3095 = !DIDerivedType(tag: DW_TAG_typedef, name: "CACHE_REGISTER_T", file: !154, line: 276, baseType: !3096)
!3096 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !154, line: 260, size: 525312, elements: !3097)
!3097 = !{!3098, !3099, !3100, !3101, !3102, !3103, !3104, !3105, !3106, !3107, !3108, !3110, !3111, !3115, !3119}
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CON", scope: !3096, file: !154, line: 261, baseType: !237, size: 32)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_OP", scope: !3096, file: !154, line: 262, baseType: !237, size: 32, offset: 32)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0L", scope: !3096, file: !154, line: 263, baseType: !237, size: 32, offset: 64)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0U", scope: !3096, file: !154, line: 264, baseType: !237, size: 32, offset: 96)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0L", scope: !3096, file: !154, line: 265, baseType: !237, size: 32, offset: 128)
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0U", scope: !3096, file: !154, line: 266, baseType: !237, size: 32, offset: 160)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1L", scope: !3096, file: !154, line: 267, baseType: !237, size: 32, offset: 192)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1U", scope: !3096, file: !154, line: 268, baseType: !237, size: 32, offset: 224)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1L", scope: !3096, file: !154, line: 269, baseType: !237, size: 32, offset: 256)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1U", scope: !3096, file: !154, line: 270, baseType: !237, size: 32, offset: 288)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3096, file: !154, line: 271, baseType: !3109, size: 32, offset: 320)
!3109 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 32, elements: !2791)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_REGION_EN", scope: !3096, file: !154, line: 272, baseType: !237, size: 32, offset: 352)
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3096, file: !154, line: 273, baseType: !3112, size: 523904, offset: 384)
!3112 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 523904, elements: !3113)
!3113 = !{!3114}
!3114 = !DISubrange(count: 16372)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_ENTRY_N", scope: !3096, file: !154, line: 274, baseType: !3116, size: 512, offset: 524288)
!3116 = !DICompositeType(tag: DW_TAG_array_type, baseType: !237, size: 512, elements: !3117)
!3117 = !{!3118}
!3118 = !DISubrange(count: 16)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_END_ENTRY_N", scope: !3096, file: !154, line: 275, baseType: !3116, size: 512, offset: 524800)
!3120 = !{!3121, !3006}
!3121 = !DIGlobalVariableExpression(var: !3122, expr: !DIExpression())
!3122 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !3008, file: !3009, line: 50, type: !61, isLocal: false, isDefinition: true)
!3123 = !DIGlobalVariableExpression(var: !3124, expr: !DIExpression())
!3124 = distinct !DIGlobalVariable(name: "custom_key_data", scope: !3125, file: !3126, line: 47, type: !3146, isLocal: false, isDefinition: true)
!3125 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3126, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3127, retainedTypes: !1829, globals: !3137, splitDebugInlining: false, nameTableKind: None)
!3126 = !DIFile(filename: "../../../../../project/mt2523_hdk/hal_examples/powerkey/../../../../driver/board/mt25x3_hdk/keypad/src/keypad_custom.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/powerkey/GCC")
!3127 = !{!3128, !3132}
!3128 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !313, line: 299, baseType: !16, size: 32, elements: !3129)
!3129 = !{!3130, !3131}
!3130 = !DIEnumerator(name: "HAL_KEYPAD_MODE_SINGLE_KEY", value: 0)
!3131 = !DIEnumerator(name: "HAL_KEYPAD_MODE_DOUBLE_KEY", value: 1)
!3132 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !313, line: 305, baseType: !7, size: 32, elements: !3133)
!3133 = !{!3134, !3135, !3136}
!3134 = !DIEnumerator(name: "HAL_KEYPAD_STATUS_ERROR", value: -2)
!3135 = !DIEnumerator(name: "HAL_KEYPAD_INVALID_PARAMETER", value: -1)
!3136 = !DIEnumerator(name: "HAL_KEYPAD_STATUS_OK", value: 0)
!3137 = !{!3123, !3138, !3140, !3142}
!3138 = !DIGlobalVariableExpression(var: !3139, expr: !DIExpression())
!3139 = distinct !DIGlobalVariable(name: "custom_col_and_row_sel", scope: !3125, file: !3126, line: 48, type: !882, isLocal: false, isDefinition: true)
!3140 = !DIGlobalVariableExpression(var: !3141, expr: !DIExpression())
!3141 = distinct !DIGlobalVariable(name: "custom_powerkey_data", scope: !3125, file: !3126, line: 49, type: !882, isLocal: false, isDefinition: true)
!3142 = !DIGlobalVariableExpression(var: !3143, expr: !DIExpression())
!3143 = distinct !DIGlobalVariable(name: "keypad_mode", scope: !3125, file: !3126, line: 60, type: !3144, isLocal: false, isDefinition: true)
!3144 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3145)
!3145 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_keypad_mode_t", file: !313, line: 302, baseType: !3128)
!3146 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3147, size: 256, elements: !294)
!3147 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !74)
!3148 = !DIGlobalVariableExpression(var: !3149, expr: !DIExpression())
!3149 = distinct !DIGlobalVariable(name: "powerkey_context", scope: !3150, file: !3151, line: 45, type: !3172, isLocal: false, isDefinition: true)
!3150 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3151, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3152, retainedTypes: !3153, globals: !3154, splitDebugInlining: false, nameTableKind: None)
!3151 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_keypad.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/powerkey/GCC")
!3152 = !{!3132, !3128, !153, !312}
!3153 = !{!61, !65, !7}
!3154 = !{!3155, !3148}
!3155 = !DIGlobalVariableExpression(var: !3156, expr: !DIExpression())
!3156 = distinct !DIGlobalVariable(name: "keypad_context", scope: !3150, file: !3151, line: 43, type: !3157, isLocal: false, isDefinition: true)
!3157 = !DIDerivedType(tag: DW_TAG_typedef, name: "keypad_context_t", file: !3158, line: 92, baseType: !3159)
!3158 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_keypad_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/powerkey/GCC")
!3159 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3158, line: 85, size: 160, elements: !3160)
!3160 = !{!3161, !3162, !3163, !3170, !3171}
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "has_initilized", scope: !3159, file: !3158, line: 87, baseType: !263, size: 8)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "is_running", scope: !3159, file: !3158, line: 88, baseType: !263, size: 8, offset: 8)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "keypad_callback", scope: !3159, file: !3158, line: 89, baseType: !3164, size: 64, offset: 32)
!3164 = !DIDerivedType(tag: DW_TAG_typedef, name: "keypad_callback_context_t", file: !3158, line: 83, baseType: !3165)
!3165 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3158, line: 80, size: 64, elements: !3166)
!3166 = !{!3167, !3169}
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !3165, file: !3158, line: 81, baseType: !3168, size: 32)
!3168 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_keypad_callback_t", file: !313, line: 279, baseType: !67)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !3165, file: !3158, line: 82, baseType: !65, size: 32, offset: 32)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "longpress_time", scope: !3159, file: !3158, line: 90, baseType: !61, size: 32, offset: 96)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "repeat_time", scope: !3159, file: !3158, line: 91, baseType: !61, size: 32, offset: 128)
!3172 = !DIDerivedType(tag: DW_TAG_typedef, name: "powerkey_context_t", file: !321, line: 89, baseType: !3173)
!3173 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !321, line: 80, size: 256, elements: !3174)
!3174 = !{!3175, !3176, !3177, !3178, !3179, !3180, !3187, !3188}
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "registerd_data", scope: !3173, file: !321, line: 81, baseType: !61, size: 32)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "release_count", scope: !3173, file: !321, line: 82, baseType: !61, size: 32, offset: 32)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "timer_handle", scope: !3173, file: !321, line: 83, baseType: !61, size: 32, offset: 64)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "has_initilized", scope: !3173, file: !321, line: 84, baseType: !263, size: 8, offset: 96)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "is_pmu_init", scope: !3173, file: !321, line: 85, baseType: !263, size: 8, offset: 104)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "powerkey_callback", scope: !3173, file: !321, line: 86, baseType: !3181, size: 64, offset: 128)
!3181 = !DIDerivedType(tag: DW_TAG_typedef, name: "powerkey_callback_context_t", file: !321, line: 78, baseType: !3182)
!3182 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !321, line: 75, size: 64, elements: !3183)
!3183 = !{!3184, !3186}
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !3182, file: !321, line: 76, baseType: !3185, size: 32)
!3185 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_powerkey_callback_t", file: !313, line: 287, baseType: !67)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !3182, file: !321, line: 77, baseType: !65, size: 32, offset: 32)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "longpress_time", scope: !3173, file: !321, line: 87, baseType: !61, size: 32, offset: 192)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "repeat_time", scope: !3173, file: !321, line: 88, baseType: !61, size: 32, offset: 224)
!3189 = !DIGlobalVariableExpression(var: !3190, expr: !DIExpression())
!3190 = distinct !DIGlobalVariable(name: "build_date_time_str", scope: !3191, file: !3196, line: 4, type: !3202, isLocal: false, isDefinition: true)
!3191 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3192, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !3193, splitDebugInlining: false, nameTableKind: None)
!3192 = !DIFile(filename: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/powerkey/GCC/build/middleware/MTK/verno/verno.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/powerkey/GCC")
!3193 = !{!3189, !3194, !3200}
!3194 = !DIGlobalVariableExpression(var: !3195, expr: !DIExpression())
!3195 = distinct !DIGlobalVariable(name: "sw_verno_str", scope: !3191, file: !3196, line: 5, type: !3197, isLocal: false, isDefinition: true)
!3196 = !DIFile(filename: "build/middleware/MTK/verno/verno.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/powerkey/GCC")
!3197 = !DICompositeType(tag: DW_TAG_array_type, baseType: !82, size: 88, elements: !3198)
!3198 = !{!3199}
!3199 = !DISubrange(count: 11)
!3200 = !DIGlobalVariableExpression(var: !3201, expr: !DIExpression())
!3201 = distinct !DIGlobalVariable(name: "hw_verno_str", scope: !3191, file: !3196, line: 6, type: !3197, isLocal: false, isDefinition: true)
!3202 = !DICompositeType(tag: DW_TAG_array_type, baseType: !82, size: 248, elements: !3036)
!3203 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3204, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3205, retainedTypes: !3206, splitDebugInlining: false, nameTableKind: None)
!3204 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_uart_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/powerkey/GCC")
!3205 = !{!764, !770, !774, !897}
!3206 = !{!74}
!3207 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3208, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3209, retainedTypes: !3224, splitDebugInlining: false, nameTableKind: None)
!3208 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_i2c_pmic.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/powerkey/GCC")
!3209 = !{!3210, !2374, !3218, !1023, !1006}
!3210 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2375, line: 65, baseType: !7, size: 32, elements: !3211)
!3211 = !{!3212, !3213, !3214, !3215, !3216, !3217}
!3212 = !DIEnumerator(name: "PMIC_I2C_STATUS_ACK_ERROR", value: -105)
!3213 = !DIEnumerator(name: "PMIC_I2C_STATUS_NACK_ERROR", value: -104)
!3214 = !DIEnumerator(name: "PMIC_I2C_STATUS_ERROR", value: -103)
!3215 = !DIEnumerator(name: "PMIC_I2C_STATUS_INVALID_PORT_NUMBER", value: -102)
!3216 = !DIEnumerator(name: "PMIC_I2C_STATUS_INVALID_PARAMETER", value: -101)
!3217 = !DIEnumerator(name: "PMIC_I2C_STATUS_OK", value: 0)
!3218 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !15, line: 302, baseType: !16, size: 32, elements: !3219)
!3219 = !{!3220, !3221, !3222, !3223}
!3220 = !DIEnumerator(name: "HAL_I2C_MASTER_0", value: 0)
!3221 = !DIEnumerator(name: "HAL_I2C_MASTER_1", value: 1)
!3222 = !DIEnumerator(name: "HAL_I2C_MASTER_2", value: 2)
!3223 = !DIEnumerator(name: "HAL_I2C_MASTER_MAX", value: 3)
!3224 = !{!61, !65, !3225}
!3225 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmic_i2c_status_t", file: !2375, line: 72, baseType: !3210)
!3226 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3227, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3228, retainedTypes: !3229, splitDebugInlining: false, nameTableKind: None)
!3227 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_nvic_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/powerkey/GCC")
!3228 = !{!153, !786}
!3229 = !{!973, !3230, !61, !3255, !1343}
!3230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3231, size: 32)
!3231 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1281, line: 418, baseType: !3232)
!3232 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1281, line: 395, size: 1120, elements: !3233)
!3233 = !{!3234, !3235, !3236, !3237, !3238, !3239, !3240, !3241, !3242, !3243, !3244, !3245, !3246, !3247, !3248, !3249, !3250, !3251, !3252, !3253, !3254}
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3232, file: !1281, line: 397, baseType: !241, size: 32)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3232, file: !1281, line: 398, baseType: !237, size: 32, offset: 32)
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3232, file: !1281, line: 399, baseType: !237, size: 32, offset: 64)
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3232, file: !1281, line: 400, baseType: !237, size: 32, offset: 96)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3232, file: !1281, line: 401, baseType: !237, size: 32, offset: 128)
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3232, file: !1281, line: 402, baseType: !237, size: 32, offset: 160)
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3232, file: !1281, line: 403, baseType: !1291, size: 96, offset: 192)
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3232, file: !1281, line: 404, baseType: !237, size: 32, offset: 288)
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3232, file: !1281, line: 405, baseType: !237, size: 32, offset: 320)
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3232, file: !1281, line: 406, baseType: !237, size: 32, offset: 352)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3232, file: !1281, line: 407, baseType: !237, size: 32, offset: 384)
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3232, file: !1281, line: 408, baseType: !237, size: 32, offset: 416)
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3232, file: !1281, line: 409, baseType: !237, size: 32, offset: 448)
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3232, file: !1281, line: 410, baseType: !237, size: 32, offset: 480)
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3232, file: !1281, line: 411, baseType: !1301, size: 64, offset: 512)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3232, file: !1281, line: 412, baseType: !241, size: 32, offset: 576)
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3232, file: !1281, line: 413, baseType: !241, size: 32, offset: 608)
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3232, file: !1281, line: 414, baseType: !1305, size: 128, offset: 640)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3232, file: !1281, line: 415, baseType: !1307, size: 160, offset: 768)
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3232, file: !1281, line: 416, baseType: !1311, size: 160, offset: 928)
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3232, file: !1281, line: 417, baseType: !237, size: 32, offset: 1088)
!3255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3256, size: 32)
!3256 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !1281, line: 378, baseType: !3257)
!3257 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1281, line: 363, size: 28704, elements: !3258)
!3258 = !{!3259, !3260, !3261, !3262, !3263, !3264, !3265, !3266, !3267, !3268, !3269, !3270, !3271}
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !3257, file: !1281, line: 365, baseType: !1318, size: 256)
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3257, file: !1281, line: 366, baseType: !1320, size: 768, offset: 256)
!3261 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !3257, file: !1281, line: 367, baseType: !1318, size: 256, offset: 1024)
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "RSERVED1", scope: !3257, file: !1281, line: 368, baseType: !1320, size: 768, offset: 1280)
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !3257, file: !1281, line: 369, baseType: !1318, size: 256, offset: 2048)
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3257, file: !1281, line: 370, baseType: !1320, size: 768, offset: 2304)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !3257, file: !1281, line: 371, baseType: !1318, size: 256, offset: 3072)
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3257, file: !1281, line: 372, baseType: !1320, size: 768, offset: 3328)
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !3257, file: !1281, line: 373, baseType: !1318, size: 256, offset: 4096)
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3257, file: !1281, line: 374, baseType: !1331, size: 1792, offset: 4352)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !3257, file: !1281, line: 375, baseType: !1335, size: 1920, offset: 6144)
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3257, file: !1281, line: 376, baseType: !1339, size: 20608, offset: 8064)
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !3257, file: !1281, line: 377, baseType: !237, size: 32, offset: 28672)
!3272 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3273, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!3273 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_cfi.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/powerkey/GCC")
!3274 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3275, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3276, retainedTypes: !3277, globals: !3278, splitDebugInlining: false, nameTableKind: None)
!3275 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_pmu_wrap_interface.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/powerkey/GCC")
!3276 = !{!2392, !2430, !2409, !2554}
!3277 = !{!2438}
!3278 = !{!3279}
!3279 = !DIGlobalVariableExpression(var: !3280, expr: !DIExpression())
!3280 = distinct !DIGlobalVariable(name: "pmu_wrap_api", scope: !3274, file: !3275, line: 75, type: !3281, isLocal: true, isDefinition: true)
!3281 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmu_wrap_api_t", file: !2575, line: 55, baseType: !3282)
!3282 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2575, line: 41, size: 416, elements: !3283)
!3283 = !{!3284, !3285, !3289, !3293, !3294, !3298, !3300, !3301, !3305, !3306, !3307, !3308, !3309}
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !3282, file: !2575, line: 42, baseType: !2960, size: 32)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "set_reg_value", scope: !3282, file: !2575, line: 43, baseType: !3286, size: 32, offset: 32)
!3286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3287, size: 32)
!3287 = !DISubroutineType(types: !3288)
!3288 = !{!263, !1043, !1043, !1043, !1043}
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "get_reg_value", scope: !3282, file: !2575, line: 44, baseType: !3290, size: 32, offset: 64)
!3290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3291, size: 32)
!3291 = !DISubroutineType(types: !3292)
!3292 = !{!76, !1043, !1043, !1043}
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "ctrl_mtcmos", scope: !3282, file: !2575, line: 45, baseType: !2960, size: 32, offset: 96)
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "get_vcore_vol", scope: !3282, file: !2575, line: 46, baseType: !3295, size: 32, offset: 128)
!3295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3296, size: 32)
!3296 = !DISubroutineType(types: !3297)
!3297 = !{!76}
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "set_vcore_vol", scope: !3282, file: !2575, line: 47, baseType: !3299, size: 32, offset: 160)
!3299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2532, size: 32)
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "set_vcore_s1_buck", scope: !3282, file: !2575, line: 48, baseType: !2960, size: 32, offset: 192)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "ctrl_driver_power", scope: !3282, file: !2575, line: 49, baseType: !3302, size: 32, offset: 224)
!3302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3303, size: 32)
!3303 = !DISubroutineType(types: !3304)
!3304 = !{null, !76, !76}
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "audio_lock_voltage", scope: !3282, file: !2575, line: 50, baseType: !2960, size: 32, offset: 256)
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "audio_unlock_voltage", scope: !3282, file: !2575, line: 51, baseType: !2960, size: 32, offset: 288)
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "get_usb_input_status", scope: !3282, file: !2575, line: 52, baseType: !3295, size: 32, offset: 320)
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "enter_power_off", scope: !3282, file: !2575, line: 53, baseType: !2960, size: 32, offset: 352)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !3282, file: !2575, line: 54, baseType: !2960, size: 32, offset: 384)
!3310 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3311, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!3311 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_log.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/powerkey/GCC")
!3312 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3313, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3314, retainedTypes: !3315, splitDebugInlining: false, nameTableKind: None)
!3313 = !DIFile(filename: "../../../../../project/mt2523_hdk/hal_examples/powerkey/src/main.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/powerkey/GCC")
!3314 = !{!697, !748, !764, !770, !774, !417, !3132, !312}
!3315 = !{!3168, !65, !7, !799}
!3316 = !{!"Ubuntu clang version 14.0.6"}
!3317 = !{i32 7, !"Dwarf Version", i32 2}
!3318 = !{i32 2, !"Debug Info Version", i32 3}
!3319 = !{i32 1, !"wchar_size", i32 4}
!3320 = !{i32 1, !"min_enum_size", i32 4}
!3321 = !{i32 1, !"branch-target-enforcement", i32 0}
!3322 = !{i32 1, !"sign-return-address", i32 0}
!3323 = !{i32 1, !"sign-return-address-all", i32 0}
!3324 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3325 = !{i32 7, !"frame-pointer", i32 2}
!3326 = distinct !DISubprogram(name: "hal_gpt_init", scope: !3, file: !3, line: 95, type: !3327, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3331)
!3327 = !DISubroutineType(types: !3328)
!3328 = !{!3329, !3330}
!3329 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_status_t", file: !6, line: 393, baseType: !5)
!3330 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_port_t", file: !15, line: 854, baseType: !14)
!3331 = !{!3332}
!3332 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3326, file: !3, line: 95, type: !3330)
!3333 = !DILocation(line: 0, scope: !3326)
!3334 = !DILocation(line: 98, column: 9, scope: !3335)
!3335 = distinct !DILexicalBlock(scope: !3326, file: !3, line: 98, column: 9)
!3336 = !DILocation(line: 98, column: 9, scope: !3326)
!3337 = !DILocation(line: 102, column: 10, scope: !3338)
!3338 = distinct !DILexicalBlock(scope: !3326, file: !3, line: 102, column: 9)
!3339 = !DILocation(line: 102, column: 34, scope: !3338)
!3340 = !DILocation(line: 102, column: 49, scope: !3338)
!3341 = !DILocation(line: 102, column: 69, scope: !3338)
!3342 = !DILocation(line: 103, column: 38, scope: !3338)
!3343 = !{i8 0, i8 2}
!3344 = !DILocation(line: 102, column: 9, scope: !3326)
!3345 = !DILocation(line: 109, column: 12, scope: !3326)
!3346 = !DILocation(line: 109, column: 5, scope: !3326)
!3347 = !DILocation(line: 112, column: 5, scope: !3326)
!3348 = !DILocation(line: 115, column: 44, scope: !3326)
!3349 = !DILocation(line: 118, column: 5, scope: !3326)
!3350 = !DILocation(line: 118, column: 23, scope: !3326)
!3351 = !DILocation(line: 118, column: 35, scope: !3326)
!3352 = !DILocation(line: 121, column: 42, scope: !3326)
!3353 = !DILocation(line: 121, column: 38, scope: !3326)
!3354 = !DILocation(line: 121, column: 5, scope: !3326)
!3355 = !DILocation(line: 121, column: 17, scope: !3326)
!3356 = !DILocation(line: 121, column: 35, scope: !3326)
!3357 = !DILocation(line: 123, column: 5, scope: !3358)
!3358 = distinct !DILexicalBlock(scope: !3326, file: !3, line: 123, column: 5)
!3359 = !DILocation(line: 123, column: 5, scope: !3360)
!3360 = distinct !DILexicalBlock(scope: !3358, file: !3, line: 123, column: 5)
!3361 = !DILocation(line: 123, column: 5, scope: !3362)
!3362 = distinct !DILexicalBlock(scope: !3360, file: !3, line: 123, column: 5)
!3363 = !DILocation(line: 131, column: 1, scope: !3326)
!3364 = distinct !DISubprogram(name: "hal_gpt_is_port_valid", scope: !3, file: !3, line: 81, type: !3365, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3367)
!3365 = !DISubroutineType(types: !3366)
!3366 = !{!263, !3330}
!3367 = !{!3368}
!3368 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3364, file: !3, line: 81, type: !3330)
!3369 = !DILocation(line: 0, scope: !3364)
!3370 = !DILocation(line: 84, column: 25, scope: !3371)
!3371 = distinct !DILexicalBlock(scope: !3364, file: !3, line: 84, column: 9)
!3372 = !DILocation(line: 84, column: 35, scope: !3371)
!3373 = !DILocation(line: 84, column: 45, scope: !3371)
!3374 = !DILocation(line: 93, column: 1, scope: !3364)
!3375 = distinct !DISubprogram(name: "hal_gpt_deinit", scope: !3, file: !3, line: 133, type: !3327, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3376)
!3376 = !{!3377}
!3377 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3375, file: !3, line: 133, type: !3330)
!3378 = !DILocation(line: 0, scope: !3375)
!3379 = !DILocation(line: 136, column: 9, scope: !3380)
!3380 = distinct !DILexicalBlock(scope: !3375, file: !3, line: 136, column: 9)
!3381 = !DILocation(line: 136, column: 9, scope: !3375)
!3382 = !DILocation(line: 140, column: 9, scope: !3383)
!3383 = distinct !DILexicalBlock(scope: !3375, file: !3, line: 140, column: 9)
!3384 = !DILocation(line: 140, column: 33, scope: !3383)
!3385 = !DILocation(line: 140, column: 48, scope: !3383)
!3386 = !DILocation(line: 140, column: 9, scope: !3375)
!3387 = !DILocation(line: 146, column: 12, scope: !3375)
!3388 = !DILocation(line: 146, column: 5, scope: !3375)
!3389 = !DILocation(line: 149, column: 29, scope: !3375)
!3390 = !DILocation(line: 149, column: 44, scope: !3375)
!3391 = !DILocation(line: 151, column: 29, scope: !3375)
!3392 = !DILocation(line: 151, column: 5, scope: !3375)
!3393 = !DILocation(line: 153, column: 5, scope: !3394)
!3394 = distinct !DILexicalBlock(scope: !3375, file: !3, line: 153, column: 5)
!3395 = !DILocation(line: 159, column: 5, scope: !3375)
!3396 = !DILocation(line: 160, column: 1, scope: !3375)
!3397 = distinct !DISubprogram(name: "hal_gpt_get_free_run_count", scope: !3, file: !3, line: 163, type: !3398, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3401)
!3398 = !DISubroutineType(types: !3399)
!3399 = !{!3329, !3400, !1400}
!3400 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_clock_source_t", file: !15, line: 860, baseType: !29)
!3401 = !{!3402, !3403}
!3402 = !DILocalVariable(name: "clock_source", arg: 1, scope: !3397, file: !3, line: 163, type: !3400)
!3403 = !DILocalVariable(name: "count", arg: 2, scope: !3397, file: !3, line: 163, type: !1400)
!3404 = !DILocation(line: 0, scope: !3397)
!3405 = !DILocation(line: 166, column: 9, scope: !3397)
!3406 = !DILocation(line: 167, column: 44, scope: !3407)
!3407 = distinct !DILexicalBlock(scope: !3408, file: !3, line: 167, column: 13)
!3408 = distinct !DILexicalBlock(scope: !3409, file: !3, line: 166, column: 51)
!3409 = distinct !DILexicalBlock(scope: !3397, file: !3, line: 166, column: 9)
!3410 = !DILocation(line: 167, column: 59, scope: !3407)
!3411 = !DILocation(line: 167, column: 13, scope: !3408)
!3412 = !DILocation(line: 170, column: 38, scope: !3413)
!3413 = distinct !DILexicalBlock(scope: !3407, file: !3, line: 167, column: 79)
!3414 = !DILocation(line: 170, column: 13, scope: !3413)
!3415 = !DILocation(line: 172, column: 59, scope: !3413)
!3416 = !DILocation(line: 173, column: 9, scope: !3413)
!3417 = !DILocation(line: 175, column: 36, scope: !3408)
!3418 = !DILocation(line: 175, column: 18, scope: !3408)
!3419 = !DILocation(line: 177, column: 5, scope: !3408)
!3420 = !DILocation(line: 179, column: 44, scope: !3421)
!3421 = distinct !DILexicalBlock(scope: !3422, file: !3, line: 179, column: 13)
!3422 = distinct !DILexicalBlock(scope: !3423, file: !3, line: 178, column: 55)
!3423 = distinct !DILexicalBlock(scope: !3409, file: !3, line: 178, column: 14)
!3424 = !DILocation(line: 179, column: 59, scope: !3421)
!3425 = !DILocation(line: 179, column: 13, scope: !3422)
!3426 = !DILocation(line: 182, column: 38, scope: !3427)
!3427 = distinct !DILexicalBlock(scope: !3421, file: !3, line: 179, column: 79)
!3428 = !DILocation(line: 182, column: 13, scope: !3427)
!3429 = !DILocation(line: 184, column: 59, scope: !3427)
!3430 = !DILocation(line: 186, column: 9, scope: !3427)
!3431 = !DILocation(line: 188, column: 68, scope: !3422)
!3432 = !DILocation(line: 188, column: 50, scope: !3422)
!3433 = !DILocation(line: 188, column: 18, scope: !3422)
!3434 = !DILocation(line: 0, scope: !3409)
!3435 = !DILocation(line: 193, column: 5, scope: !3397)
!3436 = !DILocation(line: 194, column: 1, scope: !3397)
!3437 = distinct !DISubprogram(name: "hal_gpt_get_duration_count", scope: !3, file: !3, line: 196, type: !3438, scopeLine: 197, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3440)
!3438 = !DISubroutineType(types: !3439)
!3439 = !{!3329, !61, !61, !1400}
!3440 = !{!3441, !3442, !3443}
!3441 = !DILocalVariable(name: "start_count", arg: 1, scope: !3437, file: !3, line: 196, type: !61)
!3442 = !DILocalVariable(name: "end_count", arg: 2, scope: !3437, file: !3, line: 196, type: !61)
!3443 = !DILocalVariable(name: "duration_count", arg: 3, scope: !3437, file: !3, line: 196, type: !1400)
!3444 = !DILocation(line: 0, scope: !3437)
!3445 = !DILocation(line: 198, column: 24, scope: !3446)
!3446 = distinct !DILexicalBlock(scope: !3437, file: !3, line: 198, column: 9)
!3447 = !DILocation(line: 198, column: 9, scope: !3437)
!3448 = !DILocation(line: 0, scope: !3449)
!3449 = distinct !DILexicalBlock(scope: !3437, file: !3, line: 202, column: 9)
!3450 = !DILocation(line: 208, column: 5, scope: !3437)
!3451 = !DILocation(line: 209, column: 1, scope: !3437)
!3452 = distinct !DISubprogram(name: "hal_gpt_get_running_status", scope: !3, file: !3, line: 211, type: !3453, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3456)
!3453 = !DISubroutineType(types: !3454)
!3454 = !{!3329, !3330, !3455}
!3455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !271, size: 32)
!3456 = !{!3457, !3458}
!3457 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3452, file: !3, line: 211, type: !3330)
!3458 = !DILocalVariable(name: "running_status", arg: 2, scope: !3452, file: !3, line: 211, type: !3455)
!3459 = !DILocation(line: 0, scope: !3452)
!3460 = !DILocation(line: 213, column: 18, scope: !3461)
!3461 = distinct !DILexicalBlock(scope: !3452, file: !3, line: 213, column: 9)
!3462 = !DILocation(line: 213, column: 9, scope: !3452)
!3463 = !DILocation(line: 217, column: 47, scope: !3452)
!3464 = !DILocation(line: 217, column: 21, scope: !3452)
!3465 = !DILocation(line: 219, column: 5, scope: !3452)
!3466 = !DILocation(line: 220, column: 1, scope: !3452)
!3467 = distinct !DISubprogram(name: "hal_gpt_register_callback", scope: !3, file: !3, line: 222, type: !3468, scopeLine: 225, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3470)
!3468 = !DISubroutineType(types: !3469)
!3469 = !{!3329, !3330, !66, !65}
!3470 = !{!3471, !3472, !3473}
!3471 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3467, file: !3, line: 222, type: !3330)
!3472 = !DILocalVariable(name: "callback", arg: 2, scope: !3467, file: !3, line: 223, type: !66)
!3473 = !DILocalVariable(name: "user_data", arg: 3, scope: !3467, file: !3, line: 224, type: !65)
!3474 = !DILocation(line: 0, scope: !3467)
!3475 = !DILocation(line: 227, column: 9, scope: !3476)
!3476 = distinct !DILexicalBlock(scope: !3467, file: !3, line: 227, column: 9)
!3477 = !DILocation(line: 227, column: 9, scope: !3467)
!3478 = !DILocation(line: 231, column: 34, scope: !3479)
!3479 = distinct !DILexicalBlock(scope: !3467, file: !3, line: 231, column: 9)
!3480 = !DILocation(line: 231, column: 49, scope: !3479)
!3481 = !DILocation(line: 231, column: 69, scope: !3479)
!3482 = !DILocation(line: 232, column: 38, scope: !3479)
!3483 = !DILocation(line: 232, column: 53, scope: !3479)
!3484 = !DILocation(line: 231, column: 9, scope: !3467)
!3485 = !DILocation(line: 237, column: 18, scope: !3486)
!3486 = distinct !DILexicalBlock(scope: !3467, file: !3, line: 237, column: 9)
!3487 = !DILocation(line: 237, column: 9, scope: !3467)
!3488 = !DILocation(line: 245, column: 46, scope: !3467)
!3489 = !DILocation(line: 245, column: 56, scope: !3467)
!3490 = !DILocation(line: 246, column: 46, scope: !3467)
!3491 = !DILocation(line: 246, column: 56, scope: !3467)
!3492 = !DILocation(line: 248, column: 5, scope: !3467)
!3493 = !DILocation(line: 250, column: 5, scope: !3467)
!3494 = !DILocation(line: 252, column: 1, scope: !3467)
!3495 = distinct !DISubprogram(name: "hal_gpt_start_timer_ms", scope: !3, file: !3, line: 256, type: !3496, scopeLine: 257, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3499)
!3496 = !DISubroutineType(types: !3497)
!3497 = !{!3329, !3330, !61, !3498}
!3498 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_timer_type_t", file: !6, line: 383, baseType: !52)
!3499 = !{!3500, !3501, !3502, !3503}
!3500 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3495, file: !3, line: 256, type: !3330)
!3501 = !DILocalVariable(name: "timeout_time_ms", arg: 2, scope: !3495, file: !3, line: 256, type: !61)
!3502 = !DILocalVariable(name: "timer_type", arg: 3, scope: !3495, file: !3, line: 256, type: !3498)
!3503 = !DILocalVariable(name: "mask", scope: !3495, file: !3, line: 259, type: !237)
!3504 = !DILocation(line: 0, scope: !3495)
!3505 = !DILocation(line: 259, column: 5, scope: !3495)
!3506 = !DILocation(line: 259, column: 23, scope: !3495)
!3507 = !DILocation(line: 261, column: 9, scope: !3508)
!3508 = distinct !DILexicalBlock(scope: !3495, file: !3, line: 261, column: 9)
!3509 = !DILocation(line: 261, column: 9, scope: !3495)
!3510 = !DILocation(line: 265, column: 34, scope: !3511)
!3511 = distinct !DILexicalBlock(scope: !3495, file: !3, line: 265, column: 9)
!3512 = !DILocation(line: 265, column: 49, scope: !3511)
!3513 = !DILocation(line: 266, column: 13, scope: !3511)
!3514 = !DILocation(line: 266, column: 41, scope: !3511)
!3515 = !DILocation(line: 266, column: 56, scope: !3511)
!3516 = !DILocation(line: 265, column: 9, scope: !3495)
!3517 = !DILocation(line: 271, column: 25, scope: !3518)
!3518 = distinct !DILexicalBlock(scope: !3495, file: !3, line: 271, column: 9)
!3519 = !DILocation(line: 271, column: 9, scope: !3495)
!3520 = !DILocation(line: 282, column: 12, scope: !3495)
!3521 = !DILocation(line: 282, column: 10, scope: !3495)
!3522 = !DILocation(line: 284, column: 5, scope: !3495)
!3523 = !DILocation(line: 286, column: 5, scope: !3495)
!3524 = !DILocation(line: 286, column: 23, scope: !3495)
!3525 = !DILocation(line: 286, column: 34, scope: !3495)
!3526 = !DILocation(line: 287, column: 5, scope: !3495)
!3527 = !DILocation(line: 287, column: 23, scope: !3495)
!3528 = !DILocation(line: 287, column: 34, scope: !3495)
!3529 = !DILocation(line: 290, column: 5, scope: !3495)
!3530 = !DILocation(line: 290, column: 23, scope: !3495)
!3531 = !DILocation(line: 290, column: 37, scope: !3495)
!3532 = !DILocation(line: 291, column: 39, scope: !3495)
!3533 = !DILocation(line: 291, column: 5, scope: !3495)
!3534 = !DILocation(line: 291, column: 23, scope: !3495)
!3535 = !DILocation(line: 291, column: 37, scope: !3495)
!3536 = !DILocation(line: 292, column: 5, scope: !3495)
!3537 = !DILocation(line: 292, column: 23, scope: !3495)
!3538 = !DILocation(line: 292, column: 37, scope: !3495)
!3539 = !DILocation(line: 297, column: 47, scope: !3495)
!3540 = !DILocation(line: 298, column: 33, scope: !3495)
!3541 = !DILocation(line: 296, column: 5, scope: !3495)
!3542 = !DILocation(line: 296, column: 23, scope: !3495)
!3543 = !DILocation(line: 296, column: 31, scope: !3495)
!3544 = !DILocation(line: 300, column: 5, scope: !3495)
!3545 = !DILocation(line: 300, column: 29, scope: !3495)
!3546 = distinct !{!3546, !3544, !3547}
!3547 = !DILocation(line: 300, column: 39, scope: !3495)
!3548 = !DILocation(line: 301, column: 23, scope: !3495)
!3549 = !DILocation(line: 301, column: 33, scope: !3495)
!3550 = !DILocation(line: 302, column: 5, scope: !3495)
!3551 = !DILocation(line: 302, column: 23, scope: !3495)
!3552 = !DILocation(line: 302, column: 34, scope: !3495)
!3553 = !DILocation(line: 303, column: 44, scope: !3495)
!3554 = !DILocation(line: 305, column: 28, scope: !3495)
!3555 = !DILocation(line: 305, column: 5, scope: !3495)
!3556 = !DILocation(line: 306, column: 5, scope: !3495)
!3557 = !DILocation(line: 307, column: 1, scope: !3495)
!3558 = distinct !DISubprogram(name: "hal_gpt_delay_ms", scope: !3, file: !3, line: 310, type: !3559, scopeLine: 311, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3561)
!3559 = !DISubroutineType(types: !3560)
!3560 = !{!3329, !61}
!3561 = !{!3562}
!3562 = !DILocalVariable(name: "ms", arg: 1, scope: !3558, file: !3, line: 310, type: !61)
!3563 = !DILocation(line: 0, scope: !3558)
!3564 = !DILocation(line: 313, column: 40, scope: !3565)
!3565 = distinct !DILexicalBlock(scope: !3558, file: !3, line: 313, column: 9)
!3566 = !DILocation(line: 313, column: 55, scope: !3565)
!3567 = !DILocation(line: 313, column: 9, scope: !3558)
!3568 = !DILocation(line: 316, column: 34, scope: !3569)
!3569 = distinct !DILexicalBlock(scope: !3565, file: !3, line: 313, column: 75)
!3570 = !DILocation(line: 316, column: 9, scope: !3569)
!3571 = !DILocation(line: 317, column: 55, scope: !3569)
!3572 = !DILocation(line: 318, column: 5, scope: !3569)
!3573 = !DILocation(line: 320, column: 20, scope: !3558)
!3574 = !DILocation(line: 320, column: 45, scope: !3558)
!3575 = !DILocation(line: 320, column: 5, scope: !3558)
!3576 = !DILocation(line: 322, column: 5, scope: !3558)
!3577 = distinct !DISubprogram(name: "hal_gpt_start_timer_us", scope: !3, file: !3, line: 327, type: !3496, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3578)
!3578 = !{!3579, !3580, !3581, !3582}
!3579 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3577, file: !3, line: 327, type: !3330)
!3580 = !DILocalVariable(name: "timeout_time_us", arg: 2, scope: !3577, file: !3, line: 327, type: !61)
!3581 = !DILocalVariable(name: "timer_type", arg: 3, scope: !3577, file: !3, line: 327, type: !3498)
!3582 = !DILocalVariable(name: "mask", scope: !3577, file: !3, line: 329, type: !237)
!3583 = !DILocation(line: 0, scope: !3577)
!3584 = !DILocation(line: 329, column: 5, scope: !3577)
!3585 = !DILocation(line: 329, column: 23, scope: !3577)
!3586 = !DILocation(line: 331, column: 9, scope: !3587)
!3587 = distinct !DILexicalBlock(scope: !3577, file: !3, line: 331, column: 9)
!3588 = !DILocation(line: 331, column: 9, scope: !3577)
!3589 = !DILocation(line: 336, column: 34, scope: !3590)
!3590 = distinct !DILexicalBlock(scope: !3577, file: !3, line: 336, column: 9)
!3591 = !DILocation(line: 336, column: 49, scope: !3590)
!3592 = !DILocation(line: 337, column: 13, scope: !3590)
!3593 = !DILocation(line: 337, column: 41, scope: !3590)
!3594 = !DILocation(line: 337, column: 56, scope: !3590)
!3595 = !DILocation(line: 336, column: 9, scope: !3577)
!3596 = !DILocation(line: 348, column: 5, scope: !3597)
!3597 = distinct !DILexicalBlock(scope: !3577, file: !3, line: 348, column: 5)
!3598 = !DILocation(line: 349, column: 29, scope: !3577)
!3599 = !DILocation(line: 349, column: 49, scope: !3577)
!3600 = !DILocation(line: 351, column: 12, scope: !3577)
!3601 = !DILocation(line: 351, column: 10, scope: !3577)
!3602 = !DILocation(line: 353, column: 5, scope: !3577)
!3603 = !DILocation(line: 355, column: 5, scope: !3577)
!3604 = !DILocation(line: 355, column: 23, scope: !3577)
!3605 = !DILocation(line: 355, column: 34, scope: !3577)
!3606 = !DILocation(line: 356, column: 5, scope: !3577)
!3607 = !DILocation(line: 356, column: 23, scope: !3577)
!3608 = !DILocation(line: 356, column: 34, scope: !3577)
!3609 = !DILocation(line: 359, column: 5, scope: !3577)
!3610 = !DILocation(line: 359, column: 23, scope: !3577)
!3611 = !DILocation(line: 359, column: 37, scope: !3577)
!3612 = !DILocation(line: 360, column: 39, scope: !3577)
!3613 = !DILocation(line: 360, column: 5, scope: !3577)
!3614 = !DILocation(line: 360, column: 23, scope: !3577)
!3615 = !DILocation(line: 360, column: 37, scope: !3577)
!3616 = !DILocation(line: 361, column: 5, scope: !3577)
!3617 = !DILocation(line: 361, column: 23, scope: !3577)
!3618 = !DILocation(line: 361, column: 37, scope: !3577)
!3619 = !DILocation(line: 366, column: 47, scope: !3577)
!3620 = !DILocation(line: 367, column: 33, scope: !3577)
!3621 = !DILocation(line: 365, column: 5, scope: !3577)
!3622 = !DILocation(line: 365, column: 23, scope: !3577)
!3623 = !DILocation(line: 365, column: 31, scope: !3577)
!3624 = !DILocation(line: 369, column: 5, scope: !3577)
!3625 = !DILocation(line: 369, column: 29, scope: !3577)
!3626 = distinct !{!3626, !3624, !3627}
!3627 = !DILocation(line: 369, column: 39, scope: !3577)
!3628 = !DILocation(line: 370, column: 23, scope: !3577)
!3629 = !DILocation(line: 370, column: 33, scope: !3577)
!3630 = !DILocation(line: 371, column: 5, scope: !3577)
!3631 = !DILocation(line: 371, column: 23, scope: !3577)
!3632 = !DILocation(line: 371, column: 34, scope: !3577)
!3633 = !DILocation(line: 373, column: 28, scope: !3577)
!3634 = !DILocation(line: 373, column: 5, scope: !3577)
!3635 = !DILocation(line: 375, column: 44, scope: !3577)
!3636 = !DILocation(line: 377, column: 5, scope: !3577)
!3637 = !DILocation(line: 378, column: 1, scope: !3577)
!3638 = distinct !DISubprogram(name: "hal_gpt_delay_us", scope: !3, file: !3, line: 382, type: !3559, scopeLine: 383, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3639)
!3639 = !{!3640}
!3640 = !DILocalVariable(name: "us", arg: 1, scope: !3638, file: !3, line: 382, type: !61)
!3641 = !DILocation(line: 0, scope: !3638)
!3642 = !DILocation(line: 385, column: 40, scope: !3643)
!3643 = distinct !DILexicalBlock(scope: !3638, file: !3, line: 385, column: 9)
!3644 = !DILocation(line: 385, column: 55, scope: !3643)
!3645 = !DILocation(line: 385, column: 9, scope: !3638)
!3646 = !DILocation(line: 388, column: 34, scope: !3647)
!3647 = distinct !DILexicalBlock(scope: !3643, file: !3, line: 385, column: 75)
!3648 = !DILocation(line: 388, column: 9, scope: !3647)
!3649 = !DILocation(line: 390, column: 55, scope: !3647)
!3650 = !DILocation(line: 391, column: 5, scope: !3647)
!3651 = !DILocation(line: 392, column: 20, scope: !3638)
!3652 = !DILocation(line: 392, column: 45, scope: !3638)
!3653 = !DILocation(line: 392, column: 5, scope: !3638)
!3654 = !DILocation(line: 394, column: 5, scope: !3638)
!3655 = distinct !DISubprogram(name: "hal_gpt_stop_timer", scope: !3, file: !3, line: 398, type: !3327, scopeLine: 399, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3656)
!3656 = !{!3657, !3658}
!3657 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3655, file: !3, line: 398, type: !3330)
!3658 = !DILocalVariable(name: "mask", scope: !3655, file: !3, line: 400, type: !237)
!3659 = !DILocation(line: 0, scope: !3655)
!3660 = !DILocation(line: 400, column: 5, scope: !3655)
!3661 = !DILocation(line: 400, column: 23, scope: !3655)
!3662 = !DILocation(line: 402, column: 9, scope: !3663)
!3663 = distinct !DILexicalBlock(scope: !3655, file: !3, line: 402, column: 9)
!3664 = !DILocation(line: 402, column: 9, scope: !3655)
!3665 = !DILocation(line: 413, column: 12, scope: !3655)
!3666 = !DILocation(line: 413, column: 10, scope: !3655)
!3667 = !DILocation(line: 415, column: 5, scope: !3655)
!3668 = !DILocation(line: 415, column: 23, scope: !3655)
!3669 = !DILocation(line: 415, column: 34, scope: !3655)
!3670 = !DILocation(line: 418, column: 5, scope: !3655)
!3671 = !DILocation(line: 418, column: 23, scope: !3655)
!3672 = !DILocation(line: 418, column: 34, scope: !3655)
!3673 = !DILocation(line: 420, column: 5, scope: !3655)
!3674 = !DILocation(line: 420, column: 23, scope: !3655)
!3675 = !DILocation(line: 420, column: 35, scope: !3655)
!3676 = !DILocation(line: 422, column: 29, scope: !3655)
!3677 = !DILocation(line: 422, column: 44, scope: !3655)
!3678 = !DILocation(line: 423, column: 28, scope: !3655)
!3679 = !DILocation(line: 423, column: 5, scope: !3655)
!3680 = !DILocation(line: 425, column: 33, scope: !3681)
!3681 = distinct !DILexicalBlock(scope: !3655, file: !3, line: 425, column: 9)
!3682 = !DILocation(line: 425, column: 9, scope: !3655)
!3683 = !DILocation(line: 426, column: 9, scope: !3684)
!3684 = distinct !DILexicalBlock(scope: !3685, file: !3, line: 426, column: 9)
!3685 = distinct !DILexicalBlock(scope: !3681, file: !3, line: 425, column: 62)
!3686 = !DILocation(line: 427, column: 53, scope: !3685)
!3687 = !DILocation(line: 428, column: 5, scope: !3685)
!3688 = !DILocation(line: 430, column: 1, scope: !3655)
!3689 = distinct !DISubprogram(name: "hal_gpt_sw_get_timer", scope: !3, file: !3, line: 434, type: !3690, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3692)
!3690 = !DISubroutineType(types: !3691)
!3691 = !{!3329, !1400}
!3692 = !{!3693, !3694, !3695}
!3693 = !DILocalVariable(name: "handle", arg: 1, scope: !3689, file: !3, line: 434, type: !1400)
!3694 = !DILocalVariable(name: "timer", scope: !3689, file: !3, line: 436, type: !61)
!3695 = !DILocalVariable(name: "mask", scope: !3689, file: !3, line: 437, type: !61)
!3696 = !DILocation(line: 0, scope: !3689)
!3697 = !DILocation(line: 439, column: 24, scope: !3698)
!3698 = distinct !DILexicalBlock(scope: !3689, file: !3, line: 439, column: 9)
!3699 = !DILocation(line: 439, column: 41, scope: !3698)
!3700 = !DILocation(line: 439, column: 9, scope: !3689)
!3701 = !DILocation(line: 443, column: 16, scope: !3702)
!3702 = distinct !DILexicalBlock(scope: !3689, file: !3, line: 443, column: 9)
!3703 = !DILocation(line: 443, column: 9, scope: !3689)
!3704 = !DILocation(line: 448, column: 12, scope: !3689)
!3705 = !DILocation(line: 450, column: 15, scope: !3689)
!3706 = !DILocation(line: 451, column: 21, scope: !3689)
!3707 = !DILocation(line: 451, column: 13, scope: !3689)
!3708 = !DILocation(line: 452, column: 33, scope: !3689)
!3709 = !DILocation(line: 452, column: 41, scope: !3689)
!3710 = !DILocation(line: 453, column: 36, scope: !3689)
!3711 = !DILocation(line: 455, column: 5, scope: !3689)
!3712 = !DILocation(line: 456, column: 5, scope: !3689)
!3713 = !DILocation(line: 457, column: 1, scope: !3689)
!3714 = distinct !DISubprogram(name: "hal_gpt_sw_free_timer", scope: !3, file: !3, line: 459, type: !3559, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3715)
!3715 = !{!3716, !3717}
!3716 = !DILocalVariable(name: "handle", arg: 1, scope: !3714, file: !3, line: 459, type: !61)
!3717 = !DILocalVariable(name: "timer", scope: !3714, file: !3, line: 461, type: !237)
!3718 = !DILocation(line: 0, scope: !3714)
!3719 = !DILocation(line: 461, column: 5, scope: !3714)
!3720 = !DILocation(line: 461, column: 23, scope: !3714)
!3721 = !DILocation(line: 463, column: 17, scope: !3722)
!3722 = distinct !DILexicalBlock(scope: !3714, file: !3, line: 463, column: 9)
!3723 = !DILocation(line: 463, column: 37, scope: !3722)
!3724 = !DILocation(line: 463, column: 9, scope: !3714)
!3725 = !DILocation(line: 467, column: 20, scope: !3714)
!3726 = !DILocation(line: 467, column: 11, scope: !3714)
!3727 = !DILocation(line: 469, column: 24, scope: !3728)
!3728 = distinct !DILexicalBlock(scope: !3714, file: !3, line: 469, column: 9)
!3729 = !DILocation(line: 469, column: 41, scope: !3728)
!3730 = !DILocation(line: 469, column: 9, scope: !3714)
!3731 = !DILocation(line: 473, column: 30, scope: !3732)
!3732 = distinct !DILexicalBlock(scope: !3714, file: !3, line: 473, column: 9)
!3733 = !DILocation(line: 473, column: 37, scope: !3732)
!3734 = !DILocation(line: 473, column: 9, scope: !3714)
!3735 = !DILocation(line: 477, column: 30, scope: !3736)
!3736 = distinct !DILexicalBlock(scope: !3714, file: !3, line: 477, column: 9)
!3737 = !DILocation(line: 477, column: 37, scope: !3736)
!3738 = !DILocation(line: 477, column: 45, scope: !3736)
!3739 = !DILocation(line: 477, column: 9, scope: !3714)
!3740 = !DILocation(line: 481, column: 26, scope: !3714)
!3741 = !DILocation(line: 481, column: 33, scope: !3714)
!3742 = !DILocation(line: 481, column: 41, scope: !3714)
!3743 = !DILocation(line: 482, column: 36, scope: !3714)
!3744 = !DILocation(line: 484, column: 5, scope: !3714)
!3745 = !DILocation(line: 485, column: 1, scope: !3714)
!3746 = distinct !DISubprogram(name: "hal_gpt_sw_start_timer_ms", scope: !3, file: !3, line: 487, type: !3747, scopeLine: 488, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3749)
!3747 = !DISubroutineType(types: !3748)
!3748 = !{!3329, !61, !61, !66, !65}
!3749 = !{!3750, !3751, !3752, !3753, !3754, !3755, !3756}
!3750 = !DILocalVariable(name: "handle", arg: 1, scope: !3746, file: !3, line: 487, type: !61)
!3751 = !DILocalVariable(name: "timeout_time_ms", arg: 2, scope: !3746, file: !3, line: 487, type: !61)
!3752 = !DILocalVariable(name: "callback", arg: 3, scope: !3746, file: !3, line: 487, type: !66)
!3753 = !DILocalVariable(name: "user_data", arg: 4, scope: !3746, file: !3, line: 487, type: !65)
!3754 = !DILocalVariable(name: "current_time", scope: !3746, file: !3, line: 489, type: !61)
!3755 = !DILocalVariable(name: "mask", scope: !3746, file: !3, line: 490, type: !61)
!3756 = !DILocalVariable(name: "timer", scope: !3746, file: !3, line: 491, type: !61)
!3757 = !DILocation(line: 0, scope: !3746)
!3758 = !DILocation(line: 493, column: 17, scope: !3759)
!3759 = distinct !DILexicalBlock(scope: !3746, file: !3, line: 493, column: 9)
!3760 = !DILocation(line: 493, column: 37, scope: !3759)
!3761 = !DILocation(line: 493, column: 9, scope: !3746)
!3762 = !DILocation(line: 497, column: 20, scope: !3746)
!3763 = !DILocation(line: 503, column: 37, scope: !3764)
!3764 = distinct !DILexicalBlock(scope: !3746, file: !3, line: 503, column: 9)
!3765 = !DILocation(line: 503, column: 9, scope: !3746)
!3766 = !DILocation(line: 507, column: 37, scope: !3767)
!3767 = distinct !DILexicalBlock(scope: !3746, file: !3, line: 507, column: 9)
!3768 = !DILocation(line: 507, column: 45, scope: !3767)
!3769 = !DILocation(line: 507, column: 9, scope: !3746)
!3770 = !DILocation(line: 511, column: 25, scope: !3771)
!3771 = distinct !DILexicalBlock(scope: !3746, file: !3, line: 511, column: 9)
!3772 = !DILocation(line: 511, column: 9, scope: !3746)
!3773 = !DILocation(line: 516, column: 12, scope: !3746)
!3774 = !DILocation(line: 519, column: 30, scope: !3746)
!3775 = !DILocation(line: 521, column: 24, scope: !3776)
!3776 = distinct !DILexicalBlock(scope: !3746, file: !3, line: 521, column: 9)
!3777 = !DILocation(line: 521, column: 38, scope: !3776)
!3778 = !DILocation(line: 521, column: 9, scope: !3746)
!3779 = !DILocation(line: 522, column: 9, scope: !3780)
!3780 = distinct !DILexicalBlock(scope: !3776, file: !3, line: 521, column: 48)
!3781 = !DILocation(line: 523, column: 9, scope: !3780)
!3782 = !DILocation(line: 524, column: 38, scope: !3780)
!3783 = !DILocation(line: 525, column: 5, scope: !3780)
!3784 = !DILocation(line: 526, column: 5, scope: !3746)
!3785 = !DILocation(line: 528, column: 23, scope: !3786)
!3786 = distinct !DILexicalBlock(scope: !3746, file: !3, line: 528, column: 8)
!3787 = !DILocation(line: 528, column: 41, scope: !3786)
!3788 = !DILocation(line: 528, column: 8, scope: !3746)
!3789 = !DILocation(line: 529, column: 51, scope: !3790)
!3790 = distinct !DILexicalBlock(scope: !3786, file: !3, line: 528, column: 51)
!3791 = !DILocation(line: 529, column: 24, scope: !3790)
!3792 = !DILocation(line: 530, column: 5, scope: !3790)
!3793 = !DILocation(line: 0, scope: !3786)
!3794 = !DILocation(line: 534, column: 34, scope: !3746)
!3795 = !DILocation(line: 535, column: 39, scope: !3746)
!3796 = !DILocation(line: 537, column: 49, scope: !3746)
!3797 = !DILocation(line: 538, column: 80, scope: !3746)
!3798 = !DILocation(line: 538, column: 33, scope: !3746)
!3799 = !DILocation(line: 538, column: 49, scope: !3746)
!3800 = !DILocation(line: 539, column: 50, scope: !3746)
!3801 = !DILocation(line: 539, column: 61, scope: !3746)
!3802 = !DILocation(line: 540, column: 50, scope: !3746)
!3803 = !DILocation(line: 540, column: 61, scope: !3746)
!3804 = !DILocation(line: 542, column: 5, scope: !3746)
!3805 = !DILocation(line: 546, column: 30, scope: !3746)
!3806 = !DILocation(line: 548, column: 5, scope: !3746)
!3807 = !DILocation(line: 550, column: 5, scope: !3746)
!3808 = !DILocation(line: 551, column: 1, scope: !3746)
!3809 = distinct !DISubprogram(name: "hal_gpt_sw_stop_timer_ms", scope: !3, file: !3, line: 553, type: !3559, scopeLine: 554, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3810)
!3810 = !{!3811, !3812, !3813, !3814}
!3811 = !DILocalVariable(name: "handle", arg: 1, scope: !3809, file: !3, line: 553, type: !61)
!3812 = !DILocalVariable(name: "current_time", scope: !3809, file: !3, line: 555, type: !61)
!3813 = !DILocalVariable(name: "mask", scope: !3809, file: !3, line: 556, type: !61)
!3814 = !DILocalVariable(name: "timer", scope: !3809, file: !3, line: 557, type: !61)
!3815 = !DILocation(line: 0, scope: !3809)
!3816 = !DILocation(line: 559, column: 17, scope: !3817)
!3817 = distinct !DILexicalBlock(scope: !3809, file: !3, line: 559, column: 9)
!3818 = !DILocation(line: 559, column: 37, scope: !3817)
!3819 = !DILocation(line: 559, column: 9, scope: !3809)
!3820 = !DILocation(line: 563, column: 20, scope: !3809)
!3821 = !DILocation(line: 565, column: 37, scope: !3822)
!3822 = distinct !DILexicalBlock(scope: !3809, file: !3, line: 565, column: 9)
!3823 = !DILocation(line: 565, column: 48, scope: !3822)
!3824 = !DILocation(line: 565, column: 9, scope: !3809)
!3825 = !DILocation(line: 569, column: 37, scope: !3826)
!3826 = distinct !DILexicalBlock(scope: !3809, file: !3, line: 569, column: 9)
!3827 = !DILocation(line: 569, column: 45, scope: !3826)
!3828 = !DILocation(line: 569, column: 9, scope: !3809)
!3829 = !DILocation(line: 574, column: 12, scope: !3809)
!3830 = !DILocation(line: 577, column: 30, scope: !3809)
!3831 = !DILocation(line: 578, column: 5, scope: !3809)
!3832 = !DILocation(line: 579, column: 30, scope: !3809)
!3833 = !DILocation(line: 581, column: 23, scope: !3834)
!3834 = distinct !DILexicalBlock(scope: !3809, file: !3, line: 581, column: 8)
!3835 = !DILocation(line: 581, column: 41, scope: !3834)
!3836 = !DILocation(line: 581, column: 8, scope: !3809)
!3837 = !DILocation(line: 582, column: 51, scope: !3838)
!3838 = distinct !DILexicalBlock(scope: !3834, file: !3, line: 581, column: 51)
!3839 = !DILocation(line: 582, column: 24, scope: !3838)
!3840 = !DILocation(line: 583, column: 5, scope: !3838)
!3841 = !DILocation(line: 0, scope: !3834)
!3842 = !DILocation(line: 587, column: 34, scope: !3809)
!3843 = !DILocation(line: 588, column: 39, scope: !3809)
!3844 = !DILocation(line: 590, column: 44, scope: !3809)
!3845 = !DILocation(line: 592, column: 24, scope: !3846)
!3846 = distinct !DILexicalBlock(scope: !3809, file: !3, line: 592, column: 9)
!3847 = !DILocation(line: 592, column: 44, scope: !3846)
!3848 = !DILocation(line: 592, column: 9, scope: !3809)
!3849 = !DILocation(line: 593, column: 9, scope: !3850)
!3850 = distinct !DILexicalBlock(scope: !3846, file: !3, line: 592, column: 50)
!3851 = !DILocation(line: 594, column: 5, scope: !3850)
!3852 = !DILocation(line: 598, column: 30, scope: !3809)
!3853 = !DILocation(line: 599, column: 5, scope: !3809)
!3854 = !DILocation(line: 601, column: 5, scope: !3809)
!3855 = !DILocation(line: 603, column: 1, scope: !3809)
!3856 = distinct !DISubprogram(name: "hal_gpt_sw_get_remaining_time_ms", scope: !3, file: !3, line: 605, type: !3857, scopeLine: 606, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3859)
!3857 = !DISubroutineType(types: !3858)
!3858 = !{!3329, !61, !1400}
!3859 = !{!3860, !3861, !3862, !3863, !3864}
!3860 = !DILocalVariable(name: "handle", arg: 1, scope: !3856, file: !3, line: 605, type: !61)
!3861 = !DILocalVariable(name: "remaing_time", arg: 2, scope: !3856, file: !3, line: 605, type: !1400)
!3862 = !DILocalVariable(name: "current_time", scope: !3856, file: !3, line: 607, type: !61)
!3863 = !DILocalVariable(name: "mask", scope: !3856, file: !3, line: 608, type: !61)
!3864 = !DILocalVariable(name: "timer", scope: !3856, file: !3, line: 609, type: !61)
!3865 = !DILocation(line: 0, scope: !3856)
!3866 = !DILocation(line: 611, column: 17, scope: !3867)
!3867 = distinct !DILexicalBlock(scope: !3856, file: !3, line: 611, column: 9)
!3868 = !DILocation(line: 611, column: 37, scope: !3867)
!3869 = !DILocation(line: 611, column: 9, scope: !3856)
!3870 = !DILocation(line: 615, column: 20, scope: !3856)
!3871 = !DILocation(line: 617, column: 37, scope: !3872)
!3872 = distinct !DILexicalBlock(scope: !3856, file: !3, line: 617, column: 9)
!3873 = !DILocation(line: 617, column: 45, scope: !3872)
!3874 = !DILocation(line: 617, column: 9, scope: !3856)
!3875 = !DILocation(line: 622, column: 12, scope: !3856)
!3876 = !DILocation(line: 624, column: 35, scope: !3856)
!3877 = !DILocation(line: 624, column: 51, scope: !3856)
!3878 = !DILocation(line: 624, column: 76, scope: !3856)
!3879 = !DILocation(line: 624, column: 49, scope: !3856)
!3880 = !DILocation(line: 626, column: 37, scope: !3881)
!3881 = distinct !DILexicalBlock(scope: !3856, file: !3, line: 626, column: 9)
!3882 = !DILocation(line: 626, column: 9, scope: !3856)
!3883 = !DILocation(line: 0, scope: !3881)
!3884 = !DILocation(line: 632, column: 5, scope: !3856)
!3885 = !DILocation(line: 634, column: 5, scope: !3856)
!3886 = !DILocation(line: 636, column: 1, scope: !3856)
!3887 = distinct !DISubprogram(name: "gpt_calibrate_algorithm", scope: !86, file: !86, line: 56, type: !3888, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !85, retainedNodes: !3890)
!3888 = !DISubroutineType(types: !3889)
!3889 = !{!61, !61, !61, !61}
!3890 = !{!3891, !3892, !3893, !3894, !3896, !3897}
!3891 = !DILocalVariable(name: "mul1", arg: 1, scope: !3887, file: !86, line: 56, type: !61)
!3892 = !DILocalVariable(name: "mul2", arg: 2, scope: !3887, file: !86, line: 56, type: !61)
!3893 = !DILocalVariable(name: "div", arg: 3, scope: !3887, file: !86, line: 56, type: !61)
!3894 = !DILocalVariable(name: "data1", scope: !3887, file: !86, line: 58, type: !3895)
!3895 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 64, elements: !531)
!3896 = !DILocalVariable(name: "data2", scope: !3887, file: !86, line: 59, type: !3895)
!3897 = !DILocalVariable(name: "result", scope: !3887, file: !86, line: 60, type: !3895)
!3898 = !DILocation(line: 0, scope: !3887)
!3899 = !DILocation(line: 63, column: 22, scope: !3887)
!3900 = !DILocation(line: 63, column: 32, scope: !3887)
!3901 = !DILocation(line: 64, column: 23, scope: !3887)
!3902 = !DILocation(line: 64, column: 40, scope: !3887)
!3903 = !DILocation(line: 66, column: 27, scope: !3887)
!3904 = !DILocation(line: 67, column: 27, scope: !3887)
!3905 = !DILocation(line: 67, column: 44, scope: !3887)
!3906 = !DILocation(line: 69, column: 26, scope: !3887)
!3907 = !DILocation(line: 70, column: 36, scope: !3887)
!3908 = !DILocation(line: 70, column: 43, scope: !3887)
!3909 = !DILocation(line: 70, column: 55, scope: !3887)
!3910 = !DILocation(line: 72, column: 34, scope: !3887)
!3911 = !DILocation(line: 72, column: 41, scope: !3887)
!3912 = !DILocation(line: 72, column: 5, scope: !3887)
!3913 = distinct !DISubprogram(name: "gpt_current_count", scope: !86, file: !86, line: 75, type: !3914, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !85, retainedNodes: !3916)
!3914 = !DISubroutineType(types: !3915)
!3915 = !{!61, !232}
!3916 = !{!3917}
!3917 = !DILocalVariable(name: "gpt", arg: 1, scope: !3913, file: !86, line: 75, type: !232)
!3918 = !DILocation(line: 0, scope: !3913)
!3919 = !DILocation(line: 77, column: 17, scope: !3913)
!3920 = !DILocation(line: 77, column: 5, scope: !3913)
!3921 = distinct !DISubprogram(name: "gpt_convert_ms_to_32k_count", scope: !86, file: !86, line: 81, type: !3922, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !85, retainedNodes: !3924)
!3922 = !DISubroutineType(types: !3923)
!3923 = !{!61, !61}
!3924 = !{!3925}
!3925 = !DILocalVariable(name: "ms", arg: 1, scope: !3921, file: !86, line: 81, type: !61)
!3926 = !DILocation(line: 0, scope: !3921)
!3927 = !DILocation(line: 83, column: 27, scope: !3921)
!3928 = !DILocation(line: 83, column: 37, scope: !3921)
!3929 = !DILocation(line: 83, column: 43, scope: !3921)
!3930 = !DILocation(line: 83, column: 32, scope: !3921)
!3931 = !DILocation(line: 83, column: 53, scope: !3921)
!3932 = !DILocation(line: 83, column: 59, scope: !3921)
!3933 = !DILocation(line: 83, column: 48, scope: !3921)
!3934 = !DILocation(line: 83, column: 70, scope: !3921)
!3935 = !DILocation(line: 83, column: 76, scope: !3921)
!3936 = !DILocation(line: 83, column: 65, scope: !3921)
!3937 = !DILocation(line: 83, column: 5, scope: !3921)
!3938 = !DILocation(line: 90, column: 9, scope: !3939)
!3939 = distinct !DILexicalBlock(scope: !259, file: !86, line: 90, column: 9)
!3940 = !DILocation(line: 90, column: 9, scope: !259)
!3941 = !DILocation(line: 91, column: 13, scope: !3942)
!3942 = distinct !DILexicalBlock(scope: !3943, file: !86, line: 91, column: 13)
!3943 = distinct !DILexicalBlock(scope: !3939, file: !86, line: 90, column: 24)
!3944 = !DILocation(line: 91, column: 13, scope: !3943)
!3945 = !DILocation(line: 92, column: 32, scope: !3946)
!3946 = distinct !DILexicalBlock(scope: !3942, file: !86, line: 91, column: 41)
!3947 = !DILocation(line: 92, column: 30, scope: !3946)
!3948 = !DILocation(line: 93, column: 41, scope: !3949)
!3949 = distinct !DILexicalBlock(scope: !3946, file: !86, line: 93, column: 17)
!3950 = !DILocation(line: 0, scope: !3942)
!3951 = !DILocation(line: 105, column: 1, scope: !259)
!3952 = distinct !DISubprogram(name: "gpt_open_clock_source", scope: !86, file: !86, line: 107, type: !260, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !85, retainedNodes: !262)
!3953 = !DILocation(line: 109, column: 9, scope: !3954)
!3954 = distinct !DILexicalBlock(scope: !3952, file: !86, line: 109, column: 9)
!3955 = !DILocation(line: 109, column: 9, scope: !3952)
!3956 = !DILocation(line: 110, column: 9, scope: !3957)
!3957 = distinct !DILexicalBlock(scope: !3954, file: !86, line: 109, column: 61)
!3958 = !DILocation(line: 111, column: 5, scope: !3957)
!3959 = !DILocation(line: 112, column: 1, scope: !3952)
!3960 = distinct !DISubprogram(name: "gpt_clock_calibrate_us_to_count", scope: !86, file: !86, line: 114, type: !3922, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !85, retainedNodes: !3961)
!3961 = !{!3962}
!3962 = !DILocalVariable(name: "time_us", arg: 1, scope: !3960, file: !86, line: 114, type: !61)
!3963 = !DILocation(line: 0, scope: !3960)
!3964 = !DILocation(line: 116, column: 5, scope: !3960)
!3965 = !DILocation(line: 118, column: 9, scope: !3966)
!3966 = distinct !DILexicalBlock(scope: !3960, file: !86, line: 118, column: 9)
!3967 = !DILocation(line: 118, column: 9, scope: !3960)
!3968 = !DILocation(line: 120, column: 49, scope: !3969)
!3969 = distinct !DILexicalBlock(scope: !3966, file: !86, line: 118, column: 37)
!3970 = !DILocation(line: 120, column: 16, scope: !3969)
!3971 = !DILocation(line: 120, column: 9, scope: !3969)
!3972 = !DILocation(line: 0, scope: !3966)
!3973 = !DILocation(line: 125, column: 1, scope: !3960)
!3974 = distinct !DISubprogram(name: "gpt_clock_calibrate_count_to_us", scope: !86, file: !86, line: 127, type: !3922, scopeLine: 128, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !85, retainedNodes: !3975)
!3975 = !{!3976}
!3976 = !DILocalVariable(name: "count", arg: 1, scope: !3974, file: !86, line: 127, type: !61)
!3977 = !DILocation(line: 0, scope: !3974)
!3978 = !DILocation(line: 129, column: 5, scope: !3974)
!3979 = !DILocation(line: 131, column: 9, scope: !3980)
!3980 = distinct !DILexicalBlock(scope: !3974, file: !86, line: 131, column: 9)
!3981 = !DILocation(line: 131, column: 9, scope: !3974)
!3982 = !DILocation(line: 133, column: 69, scope: !3983)
!3983 = distinct !DILexicalBlock(scope: !3980, file: !86, line: 131, column: 37)
!3984 = !DILocation(line: 133, column: 16, scope: !3983)
!3985 = !DILocation(line: 133, column: 9, scope: !3983)
!3986 = !DILocation(line: 0, scope: !3980)
!3987 = !DILocation(line: 138, column: 1, scope: !3974)
!3988 = distinct !DISubprogram(name: "gpt_start_free_run_timer", scope: !86, file: !86, line: 141, type: !3989, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !85, retainedNodes: !3991)
!3989 = !DISubroutineType(types: !3990)
!3990 = !{null, !232, !61, !61}
!3991 = !{!3992, !3993, !3994}
!3992 = !DILocalVariable(name: "gpt", arg: 1, scope: !3988, file: !86, line: 141, type: !232)
!3993 = !DILocalVariable(name: "clock_source", arg: 2, scope: !3988, file: !86, line: 141, type: !61)
!3994 = !DILocalVariable(name: "divide", arg: 3, scope: !3988, file: !86, line: 141, type: !61)
!3995 = !DILocation(line: 0, scope: !3988)
!3996 = !DILocation(line: 143, column: 5, scope: !3988)
!3997 = !DILocation(line: 145, column: 33, scope: !3988)
!3998 = !DILocation(line: 145, column: 10, scope: !3988)
!3999 = !DILocation(line: 145, column: 18, scope: !3988)
!4000 = !DILocation(line: 148, column: 10, scope: !3988)
!4001 = !DILocation(line: 148, column: 18, scope: !3988)
!4002 = !DILocation(line: 149, column: 1, scope: !3988)
!4003 = distinct !DISubprogram(name: "gpt_delay_time", scope: !86, file: !86, line: 151, type: !4004, scopeLine: 152, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !85, retainedNodes: !4006)
!4004 = !DISubroutineType(types: !4005)
!4005 = !{null, !232, !882}
!4006 = !{!4007, !4008, !4009, !4010}
!4007 = !DILocalVariable(name: "gpt", arg: 1, scope: !4003, file: !86, line: 151, type: !232)
!4008 = !DILocalVariable(name: "count", arg: 2, scope: !4003, file: !86, line: 151, type: !882)
!4009 = !DILocalVariable(name: "end_count", scope: !4003, file: !86, line: 153, type: !61)
!4010 = !DILocalVariable(name: "current", scope: !4003, file: !86, line: 153, type: !61)
!4011 = !DILocation(line: 0, scope: !4003)
!4012 = !DILocation(line: 155, column: 17, scope: !4003)
!4013 = !DILocation(line: 156, column: 25, scope: !4003)
!4014 = !DILocation(line: 156, column: 33, scope: !4003)
!4015 = !DILocation(line: 159, column: 19, scope: !4016)
!4016 = distinct !DILexicalBlock(scope: !4003, file: !86, line: 159, column: 9)
!4017 = !DILocation(line: 159, column: 9, scope: !4003)
!4018 = !DILocation(line: 160, column: 16, scope: !4019)
!4019 = distinct !DILexicalBlock(scope: !4016, file: !86, line: 159, column: 30)
!4020 = !DILocation(line: 160, column: 39, scope: !4019)
!4021 = !DILocation(line: 160, column: 9, scope: !4019)
!4022 = distinct !{!4022, !4021, !4023}
!4023 = !DILocation(line: 160, column: 51, scope: !4019)
!4024 = !DILocation(line: 162, column: 16, scope: !4025)
!4025 = distinct !DILexicalBlock(scope: !4016, file: !86, line: 161, column: 12)
!4026 = !DILocation(line: 162, column: 39, scope: !4025)
!4027 = !DILocation(line: 162, column: 9, scope: !4025)
!4028 = distinct !{!4028, !4027, !4029}
!4029 = !DILocation(line: 162, column: 50, scope: !4025)
!4030 = !DILocation(line: 163, column: 16, scope: !4025)
!4031 = !DILocation(line: 163, column: 39, scope: !4025)
!4032 = !DILocation(line: 163, column: 9, scope: !4025)
!4033 = distinct !{!4033, !4032, !4034}
!4034 = !DILocation(line: 163, column: 51, scope: !4025)
!4035 = !DILocation(line: 165, column: 1, scope: !4003)
!4036 = distinct !DISubprogram(name: "gpt_reset_default_timer", scope: !86, file: !86, line: 166, type: !4037, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !85, retainedNodes: !4039)
!4037 = !DISubroutineType(types: !4038)
!4038 = !{null, !232}
!4039 = !{!4040}
!4040 = !DILocalVariable(name: "gpt", arg: 1, scope: !4036, file: !86, line: 166, type: !232)
!4041 = !DILocation(line: 0, scope: !4036)
!4042 = !DILocation(line: 168, column: 10, scope: !4036)
!4043 = !DILocation(line: 168, column: 22, scope: !4036)
!4044 = !DILocation(line: 169, column: 10, scope: !4036)
!4045 = !DILocation(line: 169, column: 22, scope: !4036)
!4046 = !DILocation(line: 170, column: 21, scope: !4036)
!4047 = !DILocation(line: 171, column: 5, scope: !4036)
!4048 = !DILocation(line: 171, column: 16, scope: !4036)
!4049 = distinct !{!4049, !4047, !4050}
!4050 = !DILocation(line: 171, column: 26, scope: !4036)
!4051 = !DILocation(line: 172, column: 10, scope: !4036)
!4052 = !DILocation(line: 172, column: 22, scope: !4036)
!4053 = !DILocation(line: 173, column: 10, scope: !4036)
!4054 = !DILocation(line: 173, column: 22, scope: !4036)
!4055 = !DILocation(line: 174, column: 10, scope: !4036)
!4056 = !DILocation(line: 174, column: 22, scope: !4036)
!4057 = !DILocation(line: 176, column: 13, scope: !4058)
!4058 = distinct !DILexicalBlock(scope: !4036, file: !86, line: 176, column: 9)
!4059 = !DILocation(line: 176, column: 9, scope: !4036)
!4060 = !DILocation(line: 177, column: 27, scope: !4061)
!4061 = distinct !DILexicalBlock(scope: !4058, file: !86, line: 176, column: 22)
!4062 = !DILocation(line: 178, column: 5, scope: !4061)
!4063 = !DILocation(line: 179, column: 1, scope: !4036)
!4064 = distinct !DISubprogram(name: "gpt_save_and_mask_interrupt", scope: !86, file: !86, line: 181, type: !3914, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !85, retainedNodes: !4065)
!4065 = !{!4066, !4067}
!4066 = !DILocalVariable(name: "gpt", arg: 1, scope: !4064, file: !86, line: 181, type: !232)
!4067 = !DILocalVariable(name: "mask", scope: !4064, file: !86, line: 183, type: !237)
!4068 = !DILocation(line: 0, scope: !4064)
!4069 = !DILocation(line: 183, column: 5, scope: !4064)
!4070 = !DILocation(line: 183, column: 23, scope: !4064)
!4071 = !DILocation(line: 185, column: 17, scope: !4064)
!4072 = !DILocation(line: 185, column: 10, scope: !4064)
!4073 = !DILocation(line: 187, column: 22, scope: !4064)
!4074 = !DILocation(line: 189, column: 12, scope: !4064)
!4075 = !DILocation(line: 190, column: 1, scope: !4064)
!4076 = !DILocation(line: 189, column: 5, scope: !4064)
!4077 = distinct !DISubprogram(name: "gpt_restore_interrupt", scope: !86, file: !86, line: 192, type: !4078, scopeLine: 193, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !85, retainedNodes: !4080)
!4078 = !DISubroutineType(types: !4079)
!4079 = !{null, !232, !61}
!4080 = !{!4081, !4082}
!4081 = !DILocalVariable(name: "gpt", arg: 1, scope: !4077, file: !86, line: 192, type: !232)
!4082 = !DILocalVariable(name: "mask", arg: 2, scope: !4077, file: !86, line: 192, type: !61)
!4083 = !DILocation(line: 0, scope: !4077)
!4084 = !DILocation(line: 194, column: 10, scope: !4077)
!4085 = !DILocation(line: 194, column: 21, scope: !4077)
!4086 = !DILocation(line: 195, column: 1, scope: !4077)
!4087 = distinct !DISubprogram(name: "gpt_interrupt_handler", scope: !86, file: !86, line: 197, type: !1167, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !85, retainedNodes: !4088)
!4088 = !{!4089, !4090, !4091, !4092, !4093}
!4089 = !DILocalVariable(name: "irq_number", arg: 1, scope: !4087, file: !86, line: 197, type: !973)
!4090 = !DILocalVariable(name: "i", scope: !4087, file: !86, line: 199, type: !61)
!4091 = !DILocalVariable(name: "mask", scope: !4087, file: !86, line: 200, type: !237)
!4092 = !DILocalVariable(name: "state", scope: !4087, file: !86, line: 201, type: !237)
!4093 = !DILocalVariable(name: "enable", scope: !4087, file: !86, line: 202, type: !237)
!4094 = !DILocation(line: 0, scope: !4087)
!4095 = !DILocation(line: 200, column: 5, scope: !4087)
!4096 = !DILocation(line: 200, column: 23, scope: !4087)
!4097 = !DILocation(line: 201, column: 5, scope: !4087)
!4098 = !DILocation(line: 201, column: 23, scope: !4087)
!4099 = !DILocation(line: 202, column: 5, scope: !4087)
!4100 = !DILocation(line: 202, column: 23, scope: !4087)
!4101 = !DILocation(line: 207, column: 5, scope: !4102)
!4102 = distinct !DILexicalBlock(scope: !4087, file: !86, line: 207, column: 5)
!4103 = !DILocation(line: 209, column: 18, scope: !4104)
!4104 = distinct !DILexicalBlock(scope: !4105, file: !86, line: 207, column: 44)
!4105 = distinct !DILexicalBlock(scope: !4102, file: !86, line: 207, column: 5)
!4106 = !DILocation(line: 209, column: 29, scope: !4104)
!4107 = !DILocation(line: 209, column: 16, scope: !4104)
!4108 = !DILocation(line: 210, column: 29, scope: !4104)
!4109 = !DILocation(line: 210, column: 16, scope: !4104)
!4110 = !DILocation(line: 212, column: 16, scope: !4104)
!4111 = !DILocation(line: 212, column: 14, scope: !4104)
!4112 = !DILocation(line: 214, column: 9, scope: !4104)
!4113 = !DILocation(line: 214, column: 20, scope: !4104)
!4114 = !DILocation(line: 214, column: 32, scope: !4104)
!4115 = !DILocation(line: 216, column: 14, scope: !4116)
!4116 = distinct !DILexicalBlock(scope: !4104, file: !86, line: 216, column: 13)
!4117 = !DILocation(line: 216, column: 20, scope: !4116)
!4118 = !DILocation(line: 216, column: 40, scope: !4116)
!4119 = !DILocation(line: 216, column: 44, scope: !4116)
!4120 = !DILocation(line: 216, column: 51, scope: !4116)
!4121 = !DILocation(line: 216, column: 13, scope: !4104)
!4122 = !DILocation(line: 224, column: 51, scope: !4123)
!4123 = distinct !DILexicalBlock(scope: !4124, file: !86, line: 224, column: 17)
!4124 = distinct !DILexicalBlock(scope: !4116, file: !86, line: 216, column: 70)
!4125 = !DILocation(line: 224, column: 60, scope: !4123)
!4126 = !DILocation(line: 224, column: 17, scope: !4124)
!4127 = !DILocation(line: 225, column: 94, scope: !4128)
!4128 = distinct !DILexicalBlock(scope: !4123, file: !86, line: 224, column: 69)
!4129 = !DILocation(line: 225, column: 17, scope: !4128)
!4130 = !DILocation(line: 226, column: 13, scope: !4128)
!4131 = !DILocation(line: 229, column: 31, scope: !4104)
!4132 = !DILocation(line: 229, column: 42, scope: !4104)
!4133 = !DILocation(line: 229, column: 9, scope: !4104)
!4134 = !DILocation(line: 207, column: 40, scope: !4105)
!4135 = !DILocation(line: 207, column: 19, scope: !4105)
!4136 = distinct !{!4136, !4101, !4137}
!4137 = !DILocation(line: 231, column: 5, scope: !4102)
!4138 = !DILocation(line: 233, column: 1, scope: !4087)
!4139 = distinct !DISubprogram(name: "gpt_nvic_register", scope: !86, file: !86, line: 236, type: !260, scopeLine: 237, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !85, retainedNodes: !262)
!4140 = !DILocation(line: 238, column: 5, scope: !4139)
!4141 = !DILocation(line: 239, column: 5, scope: !4139)
!4142 = !DILocation(line: 240, column: 5, scope: !4139)
!4143 = !DILocation(line: 241, column: 1, scope: !4139)
!4144 = distinct !DISubprogram(name: "gpt_sw_get_current_time_ms", scope: !86, file: !86, line: 242, type: !3914, scopeLine: 243, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !85, retainedNodes: !4145)
!4145 = !{!4146, !4147, !4148, !4149, !4150}
!4146 = !DILocalVariable(name: "gpt", arg: 1, scope: !4144, file: !86, line: 242, type: !232)
!4147 = !DILocalVariable(name: "time", scope: !4144, file: !86, line: 244, type: !237)
!4148 = !DILocalVariable(name: "count", scope: !4144, file: !86, line: 245, type: !61)
!4149 = !DILocalVariable(name: "time_s", scope: !4144, file: !86, line: 245, type: !61)
!4150 = !DILocalVariable(name: "time_ms", scope: !4144, file: !86, line: 245, type: !61)
!4151 = !DILocation(line: 0, scope: !4144)
!4152 = !DILocation(line: 244, column: 5, scope: !4144)
!4153 = !DILocation(line: 244, column: 23, scope: !4144)
!4154 = !DILocation(line: 247, column: 13, scope: !4144)
!4155 = !DILocation(line: 248, column: 20, scope: !4144)
!4156 = !DILocation(line: 249, column: 23, scope: !4144)
!4157 = !DILocation(line: 249, column: 32, scope: !4144)
!4158 = !DILocation(line: 249, column: 39, scope: !4144)
!4159 = !DILocation(line: 249, column: 48, scope: !4144)
!4160 = !DILocation(line: 250, column: 19, scope: !4144)
!4161 = !DILocation(line: 250, column: 26, scope: !4144)
!4162 = !DILocation(line: 250, column: 10, scope: !4144)
!4163 = !DILocation(line: 253, column: 5, scope: !4144)
!4164 = !DILocation(line: 253, column: 30, scope: !4144)
!4165 = !DILocation(line: 253, column: 38, scope: !4144)
!4166 = !DILocation(line: 254, column: 5, scope: !4144)
!4167 = !DILocation(line: 254, column: 36, scope: !4144)
!4168 = distinct !{!4168, !4166, !4169}
!4169 = !DILocation(line: 254, column: 46, scope: !4144)
!4170 = !DILocation(line: 255, column: 12, scope: !4144)
!4171 = !DILocation(line: 256, column: 1, scope: !4144)
!4172 = !DILocation(line: 255, column: 5, scope: !4144)
!4173 = distinct !DISubprogram(name: "gpt_sw_get_free_timer", scope: !86, file: !86, line: 258, type: !4174, scopeLine: 259, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !85, retainedNodes: !4176)
!4174 = !DISubroutineType(types: !4175)
!4175 = !{!61}
!4176 = !{!4177}
!4177 = !DILocalVariable(name: "i", scope: !4173, file: !86, line: 260, type: !61)
!4178 = !DILocation(line: 0, scope: !4173)
!4179 = !DILocation(line: 262, column: 5, scope: !4180)
!4180 = distinct !DILexicalBlock(scope: !4173, file: !86, line: 262, column: 5)
!4181 = !DILocation(line: 263, column: 37, scope: !4182)
!4182 = distinct !DILexicalBlock(scope: !4183, file: !86, line: 263, column: 13)
!4183 = distinct !DILexicalBlock(scope: !4184, file: !86, line: 262, column: 45)
!4184 = distinct !DILexicalBlock(scope: !4180, file: !86, line: 262, column: 5)
!4185 = !DILocation(line: 263, column: 45, scope: !4182)
!4186 = !DILocation(line: 263, column: 13, scope: !4183)
!4187 = !DILocation(line: 262, column: 41, scope: !4184)
!4188 = !DILocation(line: 262, column: 19, scope: !4184)
!4189 = distinct !{!4189, !4179, !4190}
!4190 = !DILocation(line: 266, column: 5, scope: !4180)
!4191 = !DILocation(line: 269, column: 1, scope: !4173)
!4192 = distinct !DISubprogram(name: "gpt_sw_start_timer", scope: !86, file: !86, line: 271, type: !260, scopeLine: 272, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !85, retainedNodes: !4193)
!4193 = !{!4194, !4195}
!4194 = !DILocalVariable(name: "minimum_time", scope: !4192, file: !86, line: 273, type: !61)
!4195 = !DILocalVariable(name: "current_timer", scope: !4192, file: !86, line: 273, type: !61)
!4196 = !DILocation(line: 273, column: 5, scope: !4192)
!4197 = !DILocation(line: 275, column: 24, scope: !4198)
!4198 = distinct !DILexicalBlock(scope: !4192, file: !86, line: 275, column: 9)
!4199 = !DILocation(line: 275, column: 9, scope: !4192)
!4200 = !DILocation(line: 0, scope: !4192)
!4201 = !DILocation(line: 279, column: 5, scope: !4192)
!4202 = !DILocation(line: 282, column: 56, scope: !4192)
!4203 = !DILocation(line: 282, column: 39, scope: !4192)
!4204 = !DILocation(line: 284, column: 30, scope: !4192)
!4205 = !DILocation(line: 285, column: 45, scope: !4192)
!4206 = !DILocation(line: 285, column: 5, scope: !4192)
!4207 = !DILocation(line: 286, column: 30, scope: !4192)
!4208 = !DILocation(line: 287, column: 1, scope: !4192)
!4209 = distinct !DISubprogram(name: "gpt_sw_get_minimum_left_time_ms", scope: !86, file: !86, line: 308, type: !4210, scopeLine: 309, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !85, retainedNodes: !4212)
!4210 = !DISubroutineType(types: !4211)
!4211 = !{null, !1400, !1400}
!4212 = !{!4213, !4214, !4215, !4216, !4217}
!4213 = !DILocalVariable(name: "minimum_time", arg: 1, scope: !4209, file: !86, line: 308, type: !1400)
!4214 = !DILocalVariable(name: "number", arg: 2, scope: !4209, file: !86, line: 308, type: !1400)
!4215 = !DILocalVariable(name: "i", scope: !4209, file: !86, line: 310, type: !61)
!4216 = !DILocalVariable(name: "minimum", scope: !4209, file: !86, line: 311, type: !61)
!4217 = !DILocalVariable(name: "data", scope: !4209, file: !86, line: 312, type: !61)
!4218 = !DILocation(line: 0, scope: !4209)
!4219 = !DILocation(line: 314, column: 5, scope: !4220)
!4220 = distinct !DILexicalBlock(scope: !4209, file: !86, line: 314, column: 5)
!4221 = !DILocation(line: 315, column: 37, scope: !4222)
!4222 = distinct !DILexicalBlock(scope: !4223, file: !86, line: 315, column: 13)
!4223 = distinct !DILexicalBlock(scope: !4224, file: !86, line: 314, column: 45)
!4224 = distinct !DILexicalBlock(scope: !4220, file: !86, line: 314, column: 5)
!4225 = !DILocation(line: 315, column: 13, scope: !4223)
!4226 = !DILocation(line: 316, column: 20, scope: !4227)
!4227 = distinct !DILexicalBlock(scope: !4222, file: !86, line: 315, column: 57)
!4228 = !DILocation(line: 318, column: 22, scope: !4229)
!4229 = distinct !DILexicalBlock(scope: !4227, file: !86, line: 318, column: 17)
!4230 = !DILocation(line: 318, column: 17, scope: !4227)
!4231 = !DILocation(line: 320, column: 25, scope: !4232)
!4232 = distinct !DILexicalBlock(scope: !4229, file: !86, line: 318, column: 33)
!4233 = !DILocation(line: 321, column: 13, scope: !4232)
!4234 = !DILocation(line: 314, column: 41, scope: !4224)
!4235 = !DILocation(line: 314, column: 19, scope: !4224)
!4236 = distinct !{!4236, !4219, !4237}
!4237 = !DILocation(line: 323, column: 5, scope: !4220)
!4238 = !DILocation(line: 325, column: 19, scope: !4209)
!4239 = !DILocation(line: 326, column: 1, scope: !4209)
!4240 = distinct !DISubprogram(name: "gpt_sw_absolute_value", scope: !86, file: !86, line: 289, type: !3922, scopeLine: 290, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !85, retainedNodes: !4241)
!4241 = !{!4242, !4243, !4244, !4245}
!4242 = !DILocalVariable(name: "timer_number", arg: 1, scope: !4240, file: !86, line: 289, type: !61)
!4243 = !DILocalVariable(name: "time_out_delta", scope: !4240, file: !86, line: 291, type: !61)
!4244 = !DILocalVariable(name: "current_delta", scope: !4240, file: !86, line: 292, type: !61)
!4245 = !DILocalVariable(name: "ret_value", scope: !4240, file: !86, line: 293, type: !61)
!4246 = !DILocation(line: 0, scope: !4240)
!4247 = !DILocation(line: 295, column: 22, scope: !4240)
!4248 = !DILocation(line: 296, column: 22, scope: !4240)
!4249 = !DILocation(line: 298, column: 24, scope: !4250)
!4250 = distinct !DILexicalBlock(scope: !4240, file: !86, line: 298, column: 9)
!4251 = !DILocation(line: 298, column: 9, scope: !4240)
!4252 = !DILocation(line: 306, column: 5, scope: !4240)
!4253 = distinct !DISubprogram(name: "gpt_sw_handler", scope: !86, file: !86, line: 329, type: !68, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !85, retainedNodes: !4254)
!4254 = !{!4255, !4256, !4257, !4258}
!4255 = !DILocalVariable(name: "parameter", arg: 1, scope: !4253, file: !86, line: 329, type: !65)
!4256 = !DILocalVariable(name: "i", scope: !4253, file: !86, line: 331, type: !61)
!4257 = !DILocalVariable(name: "time_ms", scope: !4253, file: !86, line: 332, type: !237)
!4258 = !DILocalVariable(name: "data", scope: !4253, file: !86, line: 333, type: !237)
!4259 = !DILocation(line: 0, scope: !4253)
!4260 = !DILocation(line: 332, column: 5, scope: !4253)
!4261 = !DILocation(line: 332, column: 23, scope: !4253)
!4262 = !DILocation(line: 333, column: 5, scope: !4253)
!4263 = !DILocation(line: 333, column: 23, scope: !4253)
!4264 = !DILocation(line: 336, column: 24, scope: !4265)
!4265 = distinct !DILexicalBlock(scope: !4253, file: !86, line: 336, column: 9)
!4266 = !DILocation(line: 336, column: 41, scope: !4265)
!4267 = !DILocation(line: 336, column: 9, scope: !4253)
!4268 = !DILocation(line: 338, column: 34, scope: !4269)
!4269 = distinct !DILexicalBlock(scope: !4265, file: !86, line: 336, column: 47)
!4270 = !DILocation(line: 339, column: 9, scope: !4269)
!4271 = !DILocation(line: 340, column: 34, scope: !4269)
!4272 = !DILocation(line: 342, column: 46, scope: !4269)
!4273 = !DILocation(line: 342, column: 19, scope: !4269)
!4274 = !DILocation(line: 342, column: 17, scope: !4269)
!4275 = !DILocation(line: 344, column: 41, scope: !4269)
!4276 = !DILocation(line: 344, column: 38, scope: !4269)
!4277 = !DILocation(line: 345, column: 42, scope: !4269)
!4278 = !DILocation(line: 347, column: 9, scope: !4279)
!4279 = distinct !DILexicalBlock(scope: !4269, file: !86, line: 347, column: 9)
!4280 = !DILocation(line: 348, column: 41, scope: !4281)
!4281 = distinct !DILexicalBlock(scope: !4282, file: !86, line: 348, column: 17)
!4282 = distinct !DILexicalBlock(scope: !4283, file: !86, line: 347, column: 49)
!4283 = distinct !DILexicalBlock(scope: !4279, file: !86, line: 347, column: 9)
!4284 = !DILocation(line: 348, column: 17, scope: !4282)
!4285 = !DILocation(line: 350, column: 24, scope: !4286)
!4286 = distinct !DILexicalBlock(scope: !4281, file: !86, line: 348, column: 61)
!4287 = !DILocation(line: 350, column: 22, scope: !4286)
!4288 = !DILocation(line: 352, column: 21, scope: !4289)
!4289 = distinct !DILexicalBlock(scope: !4286, file: !86, line: 352, column: 21)
!4290 = !DILocation(line: 352, column: 26, scope: !4289)
!4291 = !DILocation(line: 352, column: 21, scope: !4286)
!4292 = !DILocation(line: 353, column: 56, scope: !4293)
!4293 = distinct !DILexicalBlock(scope: !4289, file: !86, line: 352, column: 32)
!4294 = !DILocation(line: 354, column: 55, scope: !4293)
!4295 = !DILocation(line: 356, column: 62, scope: !4293)
!4296 = !DILocation(line: 356, column: 112, scope: !4293)
!4297 = !DILocation(line: 356, column: 21, scope: !4293)
!4298 = !DILocation(line: 357, column: 17, scope: !4293)
!4299 = !DILocation(line: 347, column: 45, scope: !4283)
!4300 = !DILocation(line: 347, column: 23, scope: !4283)
!4301 = distinct !{!4301, !4278, !4302}
!4302 = !DILocation(line: 360, column: 9, scope: !4279)
!4303 = !DILocation(line: 362, column: 42, scope: !4269)
!4304 = !DILocation(line: 364, column: 28, scope: !4305)
!4305 = distinct !DILexicalBlock(scope: !4269, file: !86, line: 364, column: 13)
!4306 = !DILocation(line: 364, column: 48, scope: !4305)
!4307 = !DILocation(line: 364, column: 13, scope: !4269)
!4308 = !DILocation(line: 365, column: 13, scope: !4309)
!4309 = distinct !DILexicalBlock(scope: !4305, file: !86, line: 364, column: 54)
!4310 = !DILocation(line: 366, column: 9, scope: !4309)
!4311 = !DILocation(line: 369, column: 1, scope: !4253)
!4312 = distinct !DISubprogram(name: "hal_keypad_init", scope: !3151, file: !3151, line: 47, type: !4313, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3150, retainedNodes: !4331)
!4313 = !DISubroutineType(types: !4314)
!4314 = !{!4315, !4316}
!4315 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_keypad_status_t", file: !313, line: 309, baseType: !3132)
!4316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4317, size: 32)
!4317 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4318)
!4318 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_keypad_config_t", file: !313, line: 341, baseType: !4319)
!4319 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !313, line: 335, size: 160, elements: !4320)
!4320 = !{!4321, !4322, !4328, !4329, !4330}
!4321 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4319, file: !313, line: 336, baseType: !3145, size: 32)
!4322 = !DIDerivedType(tag: DW_TAG_member, name: "key_map", scope: !4319, file: !313, line: 337, baseType: !4323, size: 16, offset: 32)
!4323 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_keypad_column_row_t", file: !313, line: 331, baseType: !4324)
!4324 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !313, line: 328, size: 16, elements: !4325)
!4325 = !{!4326, !4327}
!4326 = !DIDerivedType(tag: DW_TAG_member, name: "column_bitmap", scope: !4324, file: !313, line: 329, baseType: !74, size: 8)
!4327 = !DIDerivedType(tag: DW_TAG_member, name: "row_bitmap", scope: !4324, file: !313, line: 330, baseType: !74, size: 8, offset: 8)
!4328 = !DIDerivedType(tag: DW_TAG_member, name: "debounce", scope: !4319, file: !313, line: 338, baseType: !61, size: 32, offset: 64)
!4329 = !DIDerivedType(tag: DW_TAG_member, name: "repeat_time", scope: !4319, file: !313, line: 339, baseType: !61, size: 32, offset: 96)
!4330 = !DIDerivedType(tag: DW_TAG_member, name: "longpress_time", scope: !4319, file: !313, line: 340, baseType: !61, size: 32, offset: 128)
!4331 = !{!4332}
!4332 = !DILocalVariable(name: "keypad_config", arg: 1, scope: !4312, file: !3151, line: 47, type: !4316)
!4333 = !DILocation(line: 0, scope: !4312)
!4334 = !DILocation(line: 50, column: 24, scope: !4335)
!4335 = distinct !DILexicalBlock(scope: !4312, file: !3151, line: 50, column: 9)
!4336 = !DILocation(line: 50, column: 9, scope: !4312)
!4337 = !DILocation(line: 54, column: 5, scope: !4312)
!4338 = !DILocation(line: 55, column: 5, scope: !4312)
!4339 = !DILocation(line: 57, column: 5, scope: !4312)
!4340 = !DILocation(line: 58, column: 5, scope: !4312)
!4341 = !DILocation(line: 58, column: 13, scope: !4312)
!4342 = !DILocation(line: 58, column: 19, scope: !4312)
!4343 = !DILocation(line: 60, column: 24, scope: !4344)
!4344 = distinct !DILexicalBlock(scope: !4312, file: !3151, line: 60, column: 9)
!4345 = !DILocation(line: 60, column: 33, scope: !4344)
!4346 = !DILocation(line: 60, column: 9, scope: !4312)
!4347 = !DILocation(line: 0, scope: !4344)
!4348 = !DILocation(line: 67, column: 56, scope: !4312)
!4349 = !DILocation(line: 67, column: 33, scope: !4312)
!4350 = !DILocation(line: 67, column: 70, scope: !4312)
!4351 = !DILocation(line: 68, column: 56, scope: !4312)
!4352 = !DILocation(line: 68, column: 33, scope: !4312)
!4353 = !DILocation(line: 68, column: 67, scope: !4312)
!4354 = !DILocation(line: 69, column: 48, scope: !4312)
!4355 = !DILocation(line: 67, column: 99, scope: !4312)
!4356 = !DILocation(line: 68, column: 96, scope: !4312)
!4357 = !DILocation(line: 67, column: 13, scope: !4312)
!4358 = !DILocation(line: 67, column: 20, scope: !4312)
!4359 = !DILocation(line: 72, column: 24, scope: !4360)
!4360 = distinct !DILexicalBlock(scope: !4312, file: !3151, line: 72, column: 9)
!4361 = !DILocation(line: 72, column: 29, scope: !4360)
!4362 = !DILocation(line: 72, column: 9, scope: !4312)
!4363 = !DILocation(line: 73, column: 17, scope: !4364)
!4364 = distinct !DILexicalBlock(scope: !4360, file: !3151, line: 72, column: 60)
!4365 = !DILocation(line: 73, column: 33, scope: !4364)
!4366 = !DILocation(line: 74, column: 5, scope: !4364)
!4367 = !DILocation(line: 77, column: 43, scope: !4312)
!4368 = !DILocation(line: 78, column: 43, scope: !4312)
!4369 = !DILocation(line: 81, column: 24, scope: !4370)
!4370 = distinct !DILexicalBlock(scope: !4312, file: !3151, line: 81, column: 9)
!4371 = !DILocation(line: 81, column: 36, scope: !4370)
!4372 = !DILocation(line: 0, scope: !4370)
!4373 = !DILocation(line: 88, column: 24, scope: !4374)
!4374 = distinct !DILexicalBlock(scope: !4312, file: !3151, line: 88, column: 9)
!4375 = !DILocation(line: 88, column: 39, scope: !4374)
!4376 = !DILocation(line: 88, column: 9, scope: !4312)
!4377 = !DILocation(line: 0, scope: !4374)
!4378 = !DILocation(line: 94, column: 5, scope: !4312)
!4379 = !DILocation(line: 96, column: 35, scope: !4312)
!4380 = !DILocation(line: 98, column: 5, scope: !4312)
!4381 = !DILocation(line: 100, column: 1, scope: !4312)
!4382 = distinct !DISubprogram(name: "hal_keypad_deinit", scope: !3151, file: !3151, line: 102, type: !4383, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3150, retainedNodes: !262)
!4383 = !DISubroutineType(types: !4384)
!4384 = !{!4315}
!4385 = !DILocation(line: 104, column: 24, scope: !4386)
!4386 = distinct !DILexicalBlock(scope: !4382, file: !3151, line: 104, column: 9)
!4387 = !DILocation(line: 104, column: 39, scope: !4386)
!4388 = !DILocation(line: 104, column: 9, scope: !4382)
!4389 = !DILocation(line: 108, column: 9, scope: !4390)
!4390 = distinct !DILexicalBlock(scope: !4382, file: !3151, line: 108, column: 9)
!4391 = !DILocation(line: 108, column: 39, scope: !4390)
!4392 = !DILocation(line: 108, column: 9, scope: !4382)
!4393 = !DILocation(line: 117, column: 5, scope: !4382)
!4394 = !DILocation(line: 117, column: 13, scope: !4382)
!4395 = !DILocation(line: 117, column: 20, scope: !4382)
!4396 = !DILocation(line: 119, column: 35, scope: !4382)
!4397 = !DILocation(line: 121, column: 5, scope: !4382)
!4398 = !DILocation(line: 0, scope: !4382)
!4399 = !DILocation(line: 123, column: 1, scope: !4382)
!4400 = distinct !DISubprogram(name: "hal_keypad_enable", scope: !3151, file: !3151, line: 126, type: !4383, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3150, retainedNodes: !262)
!4401 = !DILocation(line: 128, column: 24, scope: !4402)
!4402 = distinct !DILexicalBlock(scope: !4400, file: !3151, line: 128, column: 9)
!4403 = !DILocation(line: 128, column: 39, scope: !4402)
!4404 = !DILocation(line: 128, column: 9, scope: !4400)
!4405 = !DILocation(line: 131, column: 5, scope: !4400)
!4406 = !DILocation(line: 131, column: 13, scope: !4400)
!4407 = !DILocation(line: 131, column: 19, scope: !4400)
!4408 = !DILocation(line: 133, column: 5, scope: !4400)
!4409 = !DILocation(line: 0, scope: !4400)
!4410 = !DILocation(line: 134, column: 1, scope: !4400)
!4411 = distinct !DISubprogram(name: "hal_keypad_disable", scope: !3151, file: !3151, line: 136, type: !4383, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3150, retainedNodes: !262)
!4412 = !DILocation(line: 138, column: 5, scope: !4411)
!4413 = !DILocation(line: 138, column: 13, scope: !4411)
!4414 = !DILocation(line: 138, column: 19, scope: !4411)
!4415 = !DILocation(line: 140, column: 5, scope: !4411)
!4416 = distinct !DISubprogram(name: "hal_keypad_set_scan_timing", scope: !3151, file: !3151, line: 144, type: !4417, scopeLine: 145, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3150, retainedNodes: !4428)
!4417 = !DISubroutineType(types: !4418)
!4418 = !{!4315, !4419}
!4419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4420, size: 32)
!4420 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4421)
!4421 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_keypad_scan_timing_t", file: !313, line: 350, baseType: !4422)
!4422 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !313, line: 345, size: 32, elements: !4423)
!4423 = !{!4424, !4425, !4426, !4427}
!4424 = !DIDerivedType(tag: DW_TAG_member, name: "column_high_pulse", scope: !4422, file: !313, line: 346, baseType: !74, size: 8)
!4425 = !DIDerivedType(tag: DW_TAG_member, name: "row_high_pulse", scope: !4422, file: !313, line: 347, baseType: !74, size: 8, offset: 8)
!4426 = !DIDerivedType(tag: DW_TAG_member, name: "column_scan_div", scope: !4422, file: !313, line: 348, baseType: !74, size: 8, offset: 16)
!4427 = !DIDerivedType(tag: DW_TAG_member, name: "row_scan_div", scope: !4422, file: !313, line: 349, baseType: !74, size: 8, offset: 24)
!4428 = !{!4429}
!4429 = !DILocalVariable(name: "keypad_scan_timing", arg: 1, scope: !4416, file: !3151, line: 144, type: !4419)
!4430 = !DILocation(line: 0, scope: !4416)
!4431 = !DILocation(line: 146, column: 28, scope: !4432)
!4432 = distinct !DILexicalBlock(scope: !4416, file: !3151, line: 146, column: 9)
!4433 = !DILocation(line: 146, column: 9, scope: !4416)
!4434 = !DILocation(line: 150, column: 29, scope: !4435)
!4435 = distinct !DILexicalBlock(scope: !4416, file: !3151, line: 150, column: 9)
!4436 = !DILocation(line: 150, column: 9, scope: !4435)
!4437 = !DILocation(line: 150, column: 68, scope: !4435)
!4438 = !DILocation(line: 150, column: 48, scope: !4435)
!4439 = !DILocation(line: 150, column: 45, scope: !4435)
!4440 = !DILocation(line: 150, column: 9, scope: !4416)
!4441 = !DILocation(line: 151, column: 9, scope: !4442)
!4442 = distinct !DILexicalBlock(scope: !4435, file: !3151, line: 150, column: 87)
!4443 = !DILocation(line: 154, column: 9, scope: !4442)
!4444 = !DILocation(line: 157, column: 29, scope: !4445)
!4445 = distinct !DILexicalBlock(scope: !4416, file: !3151, line: 157, column: 9)
!4446 = !DILocation(line: 157, column: 9, scope: !4445)
!4447 = !DILocation(line: 157, column: 65, scope: !4445)
!4448 = !DILocation(line: 157, column: 45, scope: !4445)
!4449 = !DILocation(line: 157, column: 42, scope: !4445)
!4450 = !DILocation(line: 157, column: 9, scope: !4416)
!4451 = !DILocation(line: 158, column: 9, scope: !4452)
!4452 = distinct !DILexicalBlock(scope: !4445, file: !3151, line: 157, column: 81)
!4453 = !DILocation(line: 161, column: 9, scope: !4452)
!4454 = !DILocation(line: 164, column: 79, scope: !4416)
!4455 = !DILocation(line: 165, column: 79, scope: !4416)
!4456 = !DILocation(line: 166, column: 79, scope: !4416)
!4457 = !DILocation(line: 164, column: 121, scope: !4416)
!4458 = !DILocation(line: 165, column: 121, scope: !4416)
!4459 = !DILocation(line: 166, column: 120, scope: !4416)
!4460 = !DILocation(line: 164, column: 5, scope: !4416)
!4461 = !DILocation(line: 164, column: 13, scope: !4416)
!4462 = !DILocation(line: 164, column: 28, scope: !4416)
!4463 = !DILocation(line: 169, column: 5, scope: !4416)
!4464 = !DILocation(line: 170, column: 1, scope: !4416)
!4465 = distinct !DISubprogram(name: "hal_keypad_get_scan_timing", scope: !3151, file: !3151, line: 173, type: !4466, scopeLine: 174, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3150, retainedNodes: !4469)
!4466 = !DISubroutineType(types: !4467)
!4467 = !{!4315, !4468}
!4468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4421, size: 32)
!4469 = !{!4470, !4471}
!4470 = !DILocalVariable(name: "keypad_scan_timing", arg: 1, scope: !4465, file: !3151, line: 173, type: !4468)
!4471 = !DILocalVariable(name: "temp_data", scope: !4465, file: !3151, line: 175, type: !61)
!4472 = !DILocation(line: 0, scope: !4465)
!4473 = !DILocation(line: 177, column: 28, scope: !4474)
!4474 = distinct !DILexicalBlock(scope: !4465, file: !3151, line: 177, column: 9)
!4475 = !DILocation(line: 177, column: 9, scope: !4465)
!4476 = !DILocation(line: 181, column: 17, scope: !4465)
!4477 = !DILocation(line: 181, column: 25, scope: !4465)
!4478 = !DILocation(line: 183, column: 56, scope: !4465)
!4479 = !DILocation(line: 183, column: 45, scope: !4465)
!4480 = !DILocation(line: 183, column: 25, scope: !4465)
!4481 = !DILocation(line: 183, column: 43, scope: !4465)
!4482 = !DILocation(line: 184, column: 56, scope: !4465)
!4483 = !DILocation(line: 184, column: 45, scope: !4465)
!4484 = !DILocation(line: 184, column: 25, scope: !4465)
!4485 = !DILocation(line: 184, column: 43, scope: !4465)
!4486 = !DILocation(line: 185, column: 45, scope: !4465)
!4487 = !DILocation(line: 185, column: 25, scope: !4465)
!4488 = !DILocation(line: 185, column: 43, scope: !4465)
!4489 = !DILocation(line: 186, column: 45, scope: !4465)
!4490 = !DILocation(line: 186, column: 25, scope: !4465)
!4491 = !DILocation(line: 186, column: 43, scope: !4465)
!4492 = !DILocation(line: 188, column: 5, scope: !4465)
!4493 = !DILocation(line: 189, column: 1, scope: !4465)
!4494 = distinct !DISubprogram(name: "hal_keypad_set_debounce", scope: !3151, file: !3151, line: 191, type: !4495, scopeLine: 192, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3150, retainedNodes: !4498)
!4495 = !DISubroutineType(types: !4496)
!4496 = !{!4315, !4497}
!4497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !882, size: 32)
!4498 = !{!4499}
!4499 = !DILocalVariable(name: "keypad_debounce", arg: 1, scope: !4494, file: !3151, line: 191, type: !4497)
!4500 = !DILocation(line: 0, scope: !4494)
!4501 = !DILocation(line: 193, column: 10, scope: !4502)
!4502 = distinct !DILexicalBlock(scope: !4494, file: !3151, line: 193, column: 9)
!4503 = !DILocation(line: 193, column: 27, scope: !4502)
!4504 = !DILocation(line: 193, column: 54, scope: !4502)
!4505 = !DILocation(line: 193, column: 9, scope: !4494)
!4506 = !DILocation(line: 197, column: 5, scope: !4494)
!4507 = !DILocation(line: 197, column: 13, scope: !4494)
!4508 = !DILocation(line: 197, column: 25, scope: !4494)
!4509 = !DILocation(line: 199, column: 5, scope: !4494)
!4510 = !DILocation(line: 200, column: 1, scope: !4494)
!4511 = distinct !DISubprogram(name: "hal_keypad_get_debounce", scope: !3151, file: !3151, line: 202, type: !4512, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3150, retainedNodes: !4514)
!4512 = !DISubroutineType(types: !4513)
!4513 = !{!4315, !1400}
!4514 = !{!4515}
!4515 = !DILocalVariable(name: "keypad_debounce", arg: 1, scope: !4511, file: !3151, line: 202, type: !1400)
!4516 = !DILocation(line: 0, scope: !4511)
!4517 = !DILocation(line: 204, column: 25, scope: !4511)
!4518 = !DILocation(line: 204, column: 33, scope: !4511)
!4519 = !DILocation(line: 204, column: 45, scope: !4511)
!4520 = !DILocation(line: 204, column: 22, scope: !4511)
!4521 = !DILocation(line: 205, column: 5, scope: !4511)
!4522 = distinct !DISubprogram(name: "hal_keypad_register_callback", scope: !3151, file: !3151, line: 208, type: !4523, scopeLine: 209, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3150, retainedNodes: !4525)
!4523 = !DISubroutineType(types: !4524)
!4524 = !{!4315, !3168, !65}
!4525 = !{!4526, !4527}
!4526 = !DILocalVariable(name: "callback", arg: 1, scope: !4522, file: !3151, line: 208, type: !3168)
!4527 = !DILocalVariable(name: "user_data", arg: 2, scope: !4522, file: !3151, line: 208, type: !65)
!4528 = !DILocation(line: 0, scope: !4522)
!4529 = !DILocation(line: 210, column: 24, scope: !4530)
!4530 = distinct !DILexicalBlock(scope: !4522, file: !3151, line: 210, column: 9)
!4531 = !DILocation(line: 210, column: 39, scope: !4530)
!4532 = !DILocation(line: 210, column: 9, scope: !4522)
!4533 = !DILocation(line: 218, column: 46, scope: !4522)
!4534 = !DILocation(line: 219, column: 46, scope: !4522)
!4535 = !DILocation(line: 221, column: 5, scope: !4522)
!4536 = !DILocation(line: 223, column: 5, scope: !4522)
!4537 = !DILocation(line: 224, column: 1, scope: !4522)
!4538 = distinct !DISubprogram(name: "hal_keypad_get_key", scope: !3151, file: !3151, line: 227, type: !4539, scopeLine: 228, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3150, retainedNodes: !4548)
!4539 = !DISubroutineType(types: !4540)
!4540 = !{!4315, !4541}
!4541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4542, size: 32)
!4542 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_keypad_event_t", file: !313, line: 357, baseType: !4543)
!4543 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !313, line: 353, size: 96, elements: !4544)
!4544 = !{!4545, !4546, !4547}
!4545 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4543, file: !313, line: 354, baseType: !395, size: 32)
!4546 = !DIDerivedType(tag: DW_TAG_member, name: "key_data", scope: !4543, file: !313, line: 355, baseType: !61, size: 32, offset: 32)
!4547 = !DIDerivedType(tag: DW_TAG_member, name: "time_stamp", scope: !4543, file: !313, line: 356, baseType: !61, size: 32, offset: 64)
!4548 = !{!4549}
!4549 = !DILocalVariable(name: "keypad_event", arg: 1, scope: !4538, file: !3151, line: 227, type: !4541)
!4550 = !DILocation(line: 0, scope: !4538)
!4551 = !DILocation(line: 229, column: 9, scope: !4552)
!4552 = distinct !DILexicalBlock(scope: !4538, file: !3151, line: 229, column: 9)
!4553 = !DILocation(line: 229, column: 39, scope: !4552)
!4554 = !DILocation(line: 229, column: 9, scope: !4538)
!4555 = !DILocation(line: 230, column: 9, scope: !4556)
!4556 = distinct !DILexicalBlock(scope: !4552, file: !3151, line: 229, column: 45)
!4557 = !DILocation(line: 231, column: 9, scope: !4556)
!4558 = !DILocation(line: 234, column: 5, scope: !4538)
!4559 = !DILocation(line: 235, column: 5, scope: !4538)
!4560 = !DILocation(line: 237, column: 5, scope: !4538)
!4561 = !DILocation(line: 238, column: 1, scope: !4538)
!4562 = distinct !DISubprogram(name: "hal_keypad_powerkey_init", scope: !3151, file: !3151, line: 242, type: !4563, scopeLine: 243, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3150, retainedNodes: !4565)
!4563 = !DISubroutineType(types: !4564)
!4564 = !{!4315, !61}
!4565 = !{!4566, !4567}
!4566 = !DILocalVariable(name: "powerkey_data", arg: 1, scope: !4562, file: !3151, line: 242, type: !61)
!4567 = !DILocalVariable(name: "state", scope: !4562, file: !3151, line: 244, type: !263)
!4568 = !DILocation(line: 0, scope: !4562)
!4569 = !DILocation(line: 246, column: 26, scope: !4570)
!4570 = distinct !DILexicalBlock(scope: !4562, file: !3151, line: 246, column: 9)
!4571 = !DILocation(line: 246, column: 9, scope: !4562)
!4572 = !DILocation(line: 250, column: 23, scope: !4573)
!4573 = distinct !DILexicalBlock(scope: !4562, file: !3151, line: 250, column: 9)
!4574 = !DILocation(line: 250, column: 9, scope: !4562)
!4575 = !DILocation(line: 251, column: 9, scope: !4576)
!4576 = distinct !DILexicalBlock(scope: !4573, file: !3151, line: 250, column: 44)
!4577 = !DILocation(line: 254, column: 30, scope: !4578)
!4578 = distinct !DILexicalBlock(scope: !4576, file: !3151, line: 254, column: 13)
!4579 = !DILocation(line: 254, column: 42, scope: !4578)
!4580 = !DILocation(line: 254, column: 13, scope: !4576)
!4581 = !DILocation(line: 255, column: 42, scope: !4582)
!4582 = distinct !DILexicalBlock(scope: !4578, file: !3151, line: 254, column: 48)
!4583 = !DILocation(line: 256, column: 9, scope: !4582)
!4584 = !DILocation(line: 259, column: 30, scope: !4585)
!4585 = distinct !DILexicalBlock(scope: !4576, file: !3151, line: 259, column: 13)
!4586 = !DILocation(line: 259, column: 45, scope: !4585)
!4587 = !DILocation(line: 259, column: 13, scope: !4576)
!4588 = !DILocation(line: 260, column: 45, scope: !4589)
!4589 = distinct !DILexicalBlock(scope: !4585, file: !3151, line: 259, column: 51)
!4590 = !DILocation(line: 261, column: 9, scope: !4589)
!4591 = !DILocation(line: 263, column: 41, scope: !4576)
!4592 = !DILocation(line: 264, column: 41, scope: !4576)
!4593 = !DILocation(line: 265, column: 5, scope: !4576)
!4594 = !DILocation(line: 267, column: 26, scope: !4595)
!4595 = distinct !DILexicalBlock(scope: !4562, file: !3151, line: 267, column: 9)
!4596 = !DILocation(line: 267, column: 38, scope: !4595)
!4597 = !DILocation(line: 267, column: 9, scope: !4562)
!4598 = !DILocation(line: 268, column: 17, scope: !4599)
!4599 = distinct !DILexicalBlock(scope: !4595, file: !3151, line: 267, column: 48)
!4600 = !DILocation(line: 269, column: 13, scope: !4599)
!4601 = !DILocation(line: 272, column: 38, scope: !4599)
!4602 = !DILocation(line: 273, column: 5, scope: !4599)
!4603 = !DILocation(line: 277, column: 1, scope: !4562)
!4604 = distinct !DISubprogram(name: "hal_keypad_powerkey_deinit", scope: !3151, file: !3151, line: 279, type: !4383, scopeLine: 280, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3150, retainedNodes: !262)
!4605 = !DILocation(line: 281, column: 26, scope: !4606)
!4606 = distinct !DILexicalBlock(scope: !4604, file: !3151, line: 281, column: 9)
!4607 = !DILocation(line: 281, column: 41, scope: !4606)
!4608 = !DILocation(line: 281, column: 9, scope: !4604)
!4609 = !DILocation(line: 285, column: 9, scope: !4610)
!4610 = distinct !DILexicalBlock(scope: !4604, file: !3151, line: 285, column: 9)
!4611 = !DILocation(line: 285, column: 41, scope: !4610)
!4612 = !DILocation(line: 285, column: 9, scope: !4604)
!4613 = !DILocation(line: 286, column: 9, scope: !4614)
!4614 = distinct !DILexicalBlock(scope: !4610, file: !3151, line: 285, column: 47)
!4615 = !DILocation(line: 287, column: 9, scope: !4614)
!4616 = !DILocation(line: 290, column: 37, scope: !4604)
!4617 = !DILocation(line: 292, column: 5, scope: !4604)
!4618 = !DILocation(line: 0, scope: !4604)
!4619 = !DILocation(line: 293, column: 1, scope: !4604)
!4620 = distinct !DISubprogram(name: "hal_keypad_powerkey_register_callback", scope: !3151, file: !3151, line: 295, type: !4621, scopeLine: 296, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3150, retainedNodes: !4623)
!4621 = !DISubroutineType(types: !4622)
!4622 = !{!4315, !3185, !65}
!4623 = !{!4624, !4625}
!4624 = !DILocalVariable(name: "callback", arg: 1, scope: !4620, file: !3151, line: 295, type: !3185)
!4625 = !DILocalVariable(name: "user_data", arg: 2, scope: !4620, file: !3151, line: 295, type: !65)
!4626 = !DILocation(line: 0, scope: !4620)
!4627 = !DILocation(line: 297, column: 26, scope: !4628)
!4628 = distinct !DILexicalBlock(scope: !4620, file: !3151, line: 297, column: 9)
!4629 = !DILocation(line: 297, column: 41, scope: !4628)
!4630 = !DILocation(line: 297, column: 9, scope: !4620)
!4631 = !DILocation(line: 301, column: 18, scope: !4632)
!4632 = distinct !DILexicalBlock(scope: !4620, file: !3151, line: 301, column: 9)
!4633 = !DILocation(line: 301, column: 9, scope: !4620)
!4634 = !DILocation(line: 305, column: 50, scope: !4620)
!4635 = !DILocation(line: 306, column: 50, scope: !4620)
!4636 = !DILocation(line: 308, column: 5, scope: !4620)
!4637 = !DILocation(line: 309, column: 1, scope: !4620)
!4638 = distinct !DISubprogram(name: "hal_keypad_powerkey_get_key", scope: !3151, file: !3151, line: 312, type: !4639, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3150, retainedNodes: !4648)
!4639 = !DISubroutineType(types: !4640)
!4640 = !{!4315, !4641}
!4641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4642, size: 32)
!4642 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_keypad_powerkey_event_t", file: !313, line: 365, baseType: !4643)
!4643 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !313, line: 361, size: 96, elements: !4644)
!4644 = !{!4645, !4646, !4647}
!4645 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4643, file: !313, line: 362, baseType: !395, size: 32)
!4646 = !DIDerivedType(tag: DW_TAG_member, name: "key_data", scope: !4643, file: !313, line: 363, baseType: !61, size: 32, offset: 32)
!4647 = !DIDerivedType(tag: DW_TAG_member, name: "time_stamp", scope: !4643, file: !313, line: 364, baseType: !61, size: 32, offset: 64)
!4648 = !{!4649}
!4649 = !DILocalVariable(name: "powerkey_event", arg: 1, scope: !4638, file: !3151, line: 312, type: !4641)
!4650 = !DILocation(line: 0, scope: !4638)
!4651 = !DILocation(line: 314, column: 9, scope: !4652)
!4652 = distinct !DILexicalBlock(scope: !4638, file: !3151, line: 314, column: 9)
!4653 = !DILocation(line: 314, column: 41, scope: !4652)
!4654 = !DILocation(line: 314, column: 9, scope: !4638)
!4655 = !DILocation(line: 315, column: 9, scope: !4656)
!4656 = distinct !DILexicalBlock(scope: !4652, file: !3151, line: 314, column: 47)
!4657 = !DILocation(line: 316, column: 9, scope: !4656)
!4658 = !DILocation(line: 319, column: 5, scope: !4638)
!4659 = !DILocation(line: 320, column: 5, scope: !4638)
!4660 = !DILocation(line: 322, column: 5, scope: !4638)
!4661 = !DILocation(line: 323, column: 1, scope: !4638)
!4662 = distinct !DISubprogram(name: "powerkey_push_one_key_to_buffer", scope: !310, file: !310, line: 87, type: !4663, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !309, retainedNodes: !4665)
!4663 = !DISubroutineType(types: !4664)
!4664 = !{null, !395, !61}
!4665 = !{!4666, !4667, !4668}
!4666 = !DILocalVariable(name: "state", arg: 1, scope: !4662, file: !310, line: 87, type: !395)
!4667 = !DILocalVariable(name: "data", arg: 2, scope: !4662, file: !310, line: 87, type: !61)
!4668 = !DILocalVariable(name: "time", scope: !4662, file: !310, line: 89, type: !61)
!4669 = !DILocation(line: 0, scope: !4662)
!4670 = !DILocation(line: 89, column: 5, scope: !4662)
!4671 = !DILocation(line: 91, column: 5, scope: !4662)
!4672 = !DILocation(line: 93, column: 42, scope: !4662)
!4673 = !DILocation(line: 93, column: 5, scope: !4662)
!4674 = !DILocation(line: 93, column: 55, scope: !4662)
!4675 = !DILocation(line: 93, column: 66, scope: !4662)
!4676 = !DILocation(line: 94, column: 42, scope: !4662)
!4677 = !DILocation(line: 94, column: 5, scope: !4662)
!4678 = !DILocation(line: 94, column: 55, scope: !4662)
!4679 = !DILocation(line: 94, column: 66, scope: !4662)
!4680 = !DILocation(line: 95, column: 68, scope: !4662)
!4681 = !DILocation(line: 95, column: 55, scope: !4662)
!4682 = !DILocation(line: 95, column: 66, scope: !4662)
!4683 = !DILocation(line: 97, column: 32, scope: !4662)
!4684 = !DILocation(line: 98, column: 33, scope: !4662)
!4685 = !DILocation(line: 99, column: 1, scope: !4662)
!4686 = distinct !DISubprogram(name: "powerkey_pop_one_key_from_buffer", scope: !310, file: !310, line: 101, type: !4687, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !309, retainedNodes: !4690)
!4687 = !DISubroutineType(types: !4688)
!4688 = !{null, !4689}
!4689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !403, size: 32)
!4690 = !{!4691}
!4691 = !DILocalVariable(name: "key_event", arg: 1, scope: !4686, file: !310, line: 101, type: !4689)
!4692 = !DILocation(line: 0, scope: !4686)
!4693 = !DILocation(line: 103, column: 66, scope: !4686)
!4694 = !DILocation(line: 103, column: 29, scope: !4686)
!4695 = !DILocation(line: 103, column: 78, scope: !4686)
!4696 = !DILocation(line: 103, column: 16, scope: !4686)
!4697 = !DILocation(line: 103, column: 27, scope: !4686)
!4698 = !DILocation(line: 104, column: 66, scope: !4686)
!4699 = !DILocation(line: 104, column: 29, scope: !4686)
!4700 = !DILocation(line: 104, column: 78, scope: !4686)
!4701 = !DILocation(line: 104, column: 16, scope: !4686)
!4702 = !DILocation(line: 104, column: 27, scope: !4686)
!4703 = !DILocation(line: 105, column: 66, scope: !4686)
!4704 = !DILocation(line: 105, column: 29, scope: !4686)
!4705 = !DILocation(line: 105, column: 78, scope: !4686)
!4706 = !DILocation(line: 105, column: 16, scope: !4686)
!4707 = !DILocation(line: 105, column: 27, scope: !4686)
!4708 = !DILocation(line: 106, column: 31, scope: !4686)
!4709 = !DILocation(line: 107, column: 32, scope: !4686)
!4710 = !DILocation(line: 108, column: 1, scope: !4686)
!4711 = distinct !DISubprogram(name: "powerkey_get_buffer_left_size", scope: !310, file: !310, line: 110, type: !4174, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !309, retainedNodes: !262)
!4712 = !DILocation(line: 112, column: 25, scope: !4713)
!4713 = distinct !DILexicalBlock(scope: !4711, file: !310, line: 112, column: 9)
!4714 = !DILocation(line: 112, column: 9, scope: !4713)
!4715 = !DILocation(line: 112, column: 56, scope: !4713)
!4716 = !DILocation(line: 112, column: 40, scope: !4713)
!4717 = !DILocation(line: 112, column: 37, scope: !4713)
!4718 = !DILocation(line: 112, column: 9, scope: !4711)
!4719 = !DILocation(line: 119, column: 1, scope: !4711)
!4720 = distinct !DISubprogram(name: "powerkey_get_buffer_data_size", scope: !310, file: !310, line: 121, type: !4174, scopeLine: 122, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !309, retainedNodes: !262)
!4721 = !DILocation(line: 123, column: 36, scope: !4720)
!4722 = !DILocation(line: 123, column: 34, scope: !4720)
!4723 = !DILocation(line: 123, column: 5, scope: !4720)
!4724 = distinct !DISubprogram(name: "powerkey_process_repeat_and_longpress", scope: !310, file: !310, line: 146, type: !4725, scopeLine: 147, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !309, retainedNodes: !4727)
!4725 = !DISubroutineType(types: !4726)
!4726 = !{null, !1400}
!4727 = !{!4728, !4729}
!4728 = !DILocalVariable(name: "powerkey_type", arg: 1, scope: !4724, file: !310, line: 146, type: !1400)
!4729 = !DILocalVariable(name: "ret_state", scope: !4724, file: !310, line: 148, type: !3329)
!4730 = !DILocation(line: 0, scope: !4724)
!4731 = !DILocation(line: 150, column: 5, scope: !4724)
!4732 = !DILocation(line: 152, column: 9, scope: !4733)
!4733 = distinct !DILexicalBlock(scope: !4724, file: !310, line: 152, column: 9)
!4734 = !DILocation(line: 152, column: 60, scope: !4733)
!4735 = !DILocation(line: 152, column: 44, scope: !4733)
!4736 = !DILocation(line: 152, column: 72, scope: !4733)
!4737 = !DILocation(line: 152, column: 41, scope: !4733)
!4738 = !DILocation(line: 152, column: 9, scope: !4724)
!4739 = !DILocation(line: 153, column: 28, scope: !4740)
!4740 = distinct !DILexicalBlock(scope: !4741, file: !310, line: 153, column: 13)
!4741 = distinct !DILexicalBlock(scope: !4733, file: !310, line: 152, column: 78)
!4742 = !DILocation(line: 153, column: 42, scope: !4740)
!4743 = !DILocation(line: 0, scope: !4740)
!4744 = !DILocation(line: 159, column: 9, scope: !4741)
!4745 = !DILocation(line: 163, column: 62, scope: !4741)
!4746 = !DILocation(line: 164, column: 64, scope: !4741)
!4747 = !DILocation(line: 162, column: 21, scope: !4741)
!4748 = !DILocation(line: 167, column: 23, scope: !4749)
!4749 = distinct !DILexicalBlock(scope: !4741, file: !310, line: 167, column: 13)
!4750 = !DILocation(line: 167, column: 13, scope: !4741)
!4751 = !DILocation(line: 168, column: 13, scope: !4752)
!4752 = distinct !DILexicalBlock(scope: !4749, file: !310, line: 167, column: 45)
!4753 = !DILocation(line: 169, column: 9, scope: !4752)
!4754 = !DILocation(line: 171, column: 9, scope: !4741)
!4755 = !DILocation(line: 172, column: 9, scope: !4741)
!4756 = !DILocation(line: 173, column: 5, scope: !4741)
!4757 = !DILocation(line: 175, column: 1, scope: !4724)
!4758 = distinct !DISubprogram(name: "powerkey_call_user_callback", scope: !310, file: !310, line: 126, type: !260, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !309, retainedNodes: !4759)
!4759 = !{!4760}
!4760 = !DILocalVariable(name: "context", scope: !4758, file: !310, line: 128, type: !4761)
!4761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4762, size: 32)
!4762 = !DIDerivedType(tag: DW_TAG_typedef, name: "powerkey_callback_context_t", file: !321, line: 78, baseType: !4763)
!4763 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !321, line: 75, size: 64, elements: !4764)
!4764 = !{!4765, !4766}
!4765 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !4763, file: !321, line: 76, baseType: !3185, size: 32)
!4766 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !4763, file: !321, line: 77, baseType: !65, size: 32, offset: 32)
!4767 = !DILocation(line: 132, column: 26, scope: !4768)
!4768 = distinct !DILexicalBlock(scope: !4758, file: !310, line: 132, column: 9)
!4769 = !DILocation(line: 132, column: 41, scope: !4768)
!4770 = !DILocation(line: 132, column: 9, scope: !4758)
!4771 = !DILocation(line: 136, column: 18, scope: !4772)
!4772 = distinct !DILexicalBlock(scope: !4758, file: !310, line: 136, column: 9)
!4773 = !DILocation(line: 136, column: 27, scope: !4772)
!4774 = !DILocation(line: 136, column: 9, scope: !4758)
!4775 = !DILocation(line: 137, column: 9, scope: !4776)
!4776 = distinct !DILexicalBlock(scope: !4772, file: !310, line: 136, column: 36)
!4777 = !DILocation(line: 138, column: 18, scope: !4776)
!4778 = !DILocation(line: 138, column: 36, scope: !4776)
!4779 = !DILocation(line: 138, column: 9, scope: !4776)
!4780 = !DILocation(line: 139, column: 5, scope: !4776)
!4781 = !DILocation(line: 140, column: 9, scope: !4782)
!4782 = distinct !DILexicalBlock(scope: !4772, file: !310, line: 139, column: 12)
!4783 = !DILocation(line: 143, column: 1, scope: !4758)
!4784 = distinct !DISubprogram(name: "powerkey_long_press_handler", scope: !310, file: !310, line: 282, type: !4785, scopeLine: 283, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !309, retainedNodes: !4799)
!4785 = !DISubroutineType(types: !4786)
!4786 = !{null, !74, !4787}
!4787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4788, size: 32)
!4788 = !DIDerivedType(tag: DW_TAG_typedef, name: "powerkey_context_t", file: !321, line: 89, baseType: !4789)
!4789 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !321, line: 80, size: 256, elements: !4790)
!4790 = !{!4791, !4792, !4793, !4794, !4795, !4796, !4797, !4798}
!4791 = !DIDerivedType(tag: DW_TAG_member, name: "registerd_data", scope: !4789, file: !321, line: 81, baseType: !61, size: 32)
!4792 = !DIDerivedType(tag: DW_TAG_member, name: "release_count", scope: !4789, file: !321, line: 82, baseType: !61, size: 32, offset: 32)
!4793 = !DIDerivedType(tag: DW_TAG_member, name: "timer_handle", scope: !4789, file: !321, line: 83, baseType: !61, size: 32, offset: 64)
!4794 = !DIDerivedType(tag: DW_TAG_member, name: "has_initilized", scope: !4789, file: !321, line: 84, baseType: !263, size: 8, offset: 96)
!4795 = !DIDerivedType(tag: DW_TAG_member, name: "is_pmu_init", scope: !4789, file: !321, line: 85, baseType: !263, size: 8, offset: 104)
!4796 = !DIDerivedType(tag: DW_TAG_member, name: "powerkey_callback", scope: !4789, file: !321, line: 86, baseType: !4762, size: 64, offset: 128)
!4797 = !DIDerivedType(tag: DW_TAG_member, name: "longpress_time", scope: !4789, file: !321, line: 87, baseType: !61, size: 32, offset: 192)
!4798 = !DIDerivedType(tag: DW_TAG_member, name: "repeat_time", scope: !4789, file: !321, line: 88, baseType: !61, size: 32, offset: 224)
!4799 = !{!4800, !4801}
!4800 = !DILocalVariable(name: "trigger_source", arg: 1, scope: !4784, file: !310, line: 282, type: !74)
!4801 = !DILocalVariable(name: "countext", arg: 2, scope: !4784, file: !310, line: 282, type: !4787)
!4802 = !DILocation(line: 0, scope: !4784)
!4803 = !DILocation(line: 284, column: 54, scope: !4784)
!4804 = !DILocation(line: 284, column: 5, scope: !4784)
!4805 = !DILocation(line: 286, column: 1, scope: !4784)
!4806 = distinct !DISubprogram(name: "powerkey_process_key", scope: !310, file: !310, line: 178, type: !4807, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !309, retainedNodes: !4810)
!4807 = !DISubroutineType(types: !4808)
!4808 = !{null, !4809, !61, !4787}
!4809 = !DIDerivedType(tag: DW_TAG_typedef, name: "powerkey_pmu_status_t", file: !321, line: 102, baseType: !320)
!4810 = !{!4811, !4812, !4813, !4814, !4816, !4817, !4818}
!4811 = !DILocalVariable(name: "pmu_state", arg: 1, scope: !4806, file: !310, line: 178, type: !4809)
!4812 = !DILocalVariable(name: "trigger_source", arg: 2, scope: !4806, file: !310, line: 178, type: !61)
!4813 = !DILocalVariable(name: "countext", arg: 3, scope: !4806, file: !310, line: 178, type: !4787)
!4814 = !DILocalVariable(name: "key_state", scope: !4806, file: !310, line: 180, type: !4815)
!4815 = !DICompositeType(tag: DW_TAG_array_type, baseType: !395, size: 64, elements: !531)
!4816 = !DILocalVariable(name: "pmu_key_flag", scope: !4806, file: !310, line: 181, type: !3895)
!4817 = !DILocalVariable(name: "status", scope: !4806, file: !310, line: 182, type: !61)
!4818 = !DILocalVariable(name: "ret_state", scope: !4806, file: !310, line: 183, type: !3329)
!4819 = !DILocation(line: 0, scope: !4806)
!4820 = !DILocation(line: 185, column: 26, scope: !4821)
!4821 = distinct !DILexicalBlock(scope: !4806, file: !310, line: 185, column: 9)
!4822 = !DILocation(line: 185, column: 38, scope: !4821)
!4823 = !DILocation(line: 185, column: 9, scope: !4806)
!4824 = !DILocation(line: 192, column: 20, scope: !4825)
!4825 = distinct !DILexicalBlock(scope: !4806, file: !310, line: 192, column: 9)
!4826 = !DILocation(line: 205, column: 17, scope: !4827)
!4827 = distinct !DILexicalBlock(scope: !4806, file: !310, line: 205, column: 9)
!4828 = !DILocation(line: 205, column: 36, scope: !4827)
!4829 = !DILocation(line: 205, column: 9, scope: !4806)
!4830 = !DILocation(line: 206, column: 9, scope: !4831)
!4831 = distinct !DILexicalBlock(scope: !4832, file: !310, line: 206, column: 9)
!4832 = distinct !DILexicalBlock(scope: !4827, file: !310, line: 205, column: 42)
!4833 = !DILocation(line: 207, column: 13, scope: !4834)
!4834 = distinct !DILexicalBlock(scope: !4832, file: !310, line: 207, column: 13)
!4835 = !DILocation(line: 207, column: 64, scope: !4834)
!4836 = !DILocation(line: 207, column: 48, scope: !4834)
!4837 = !DILocation(line: 207, column: 76, scope: !4834)
!4838 = !DILocation(line: 207, column: 45, scope: !4834)
!4839 = !DILocation(line: 207, column: 13, scope: !4832)
!4840 = !DILocation(line: 209, column: 42, scope: !4841)
!4841 = distinct !DILexicalBlock(scope: !4834, file: !310, line: 207, column: 82)
!4842 = !DILocation(line: 212, column: 17, scope: !4841)
!4843 = !DILocation(line: 215, column: 29, scope: !4844)
!4844 = distinct !DILexicalBlock(scope: !4845, file: !310, line: 212, column: 55)
!4845 = distinct !DILexicalBlock(scope: !4841, file: !310, line: 212, column: 17)
!4846 = !DILocation(line: 216, column: 31, scope: !4847)
!4847 = distinct !DILexicalBlock(scope: !4844, file: !310, line: 216, column: 21)
!4848 = !DILocation(line: 216, column: 21, scope: !4844)
!4849 = !DILocation(line: 217, column: 21, scope: !4850)
!4850 = distinct !DILexicalBlock(scope: !4847, file: !310, line: 216, column: 53)
!4851 = !DILocation(line: 220, column: 17, scope: !4850)
!4852 = !DILocation(line: 224, column: 70, scope: !4844)
!4853 = !DILocation(line: 225, column: 72, scope: !4844)
!4854 = !DILocation(line: 223, column: 29, scope: !4844)
!4855 = !DILocation(line: 228, column: 31, scope: !4856)
!4856 = distinct !DILexicalBlock(scope: !4844, file: !310, line: 228, column: 21)
!4857 = !DILocation(line: 228, column: 21, scope: !4844)
!4858 = !DILocation(line: 229, column: 21, scope: !4859)
!4859 = distinct !DILexicalBlock(scope: !4856, file: !310, line: 228, column: 53)
!4860 = !DILocation(line: 230, column: 17, scope: !4859)
!4861 = !DILocation(line: 233, column: 40, scope: !4841)
!4862 = !DILocation(line: 234, column: 44, scope: !4841)
!4863 = !DILocation(line: 235, column: 60, scope: !4841)
!4864 = !DILocation(line: 235, column: 92, scope: !4841)
!4865 = !DILocation(line: 235, column: 13, scope: !4841)
!4866 = !DILocation(line: 236, column: 13, scope: !4841)
!4867 = !DILocation(line: 237, column: 13, scope: !4841)
!4868 = !DILocation(line: 239, column: 9, scope: !4841)
!4869 = !DILocation(line: 243, column: 17, scope: !4870)
!4870 = distinct !DILexicalBlock(scope: !4806, file: !310, line: 243, column: 9)
!4871 = !DILocation(line: 243, column: 36, scope: !4870)
!4872 = !DILocation(line: 243, column: 9, scope: !4806)
!4873 = !DILocation(line: 244, column: 13, scope: !4874)
!4874 = distinct !DILexicalBlock(scope: !4875, file: !310, line: 244, column: 13)
!4875 = distinct !DILexicalBlock(scope: !4870, file: !310, line: 243, column: 42)
!4876 = !DILocation(line: 244, column: 45, scope: !4874)
!4877 = !DILocation(line: 244, column: 13, scope: !4875)
!4878 = !DILocation(line: 245, column: 33, scope: !4879)
!4879 = distinct !DILexicalBlock(scope: !4880, file: !310, line: 245, column: 17)
!4880 = distinct !DILexicalBlock(scope: !4874, file: !310, line: 244, column: 50)
!4881 = !DILocation(line: 245, column: 45, scope: !4879)
!4882 = !DILocation(line: 245, column: 17, scope: !4880)
!4883 = !DILocation(line: 246, column: 17, scope: !4884)
!4884 = distinct !DILexicalBlock(scope: !4879, file: !310, line: 245, column: 51)
!4885 = !DILocation(line: 247, column: 17, scope: !4884)
!4886 = !DILocation(line: 249, column: 43, scope: !4880)
!4887 = !DILocation(line: 251, column: 48, scope: !4888)
!4888 = distinct !DILexicalBlock(scope: !4880, file: !310, line: 251, column: 17)
!4889 = !DILocation(line: 251, column: 17, scope: !4880)
!4890 = !DILocation(line: 255, column: 42, scope: !4880)
!4891 = !DILocation(line: 257, column: 65, scope: !4880)
!4892 = !DILocation(line: 257, column: 25, scope: !4880)
!4893 = !DILocation(line: 258, column: 27, scope: !4894)
!4894 = distinct !DILexicalBlock(scope: !4880, file: !310, line: 258, column: 17)
!4895 = !DILocation(line: 258, column: 17, scope: !4880)
!4896 = !DILocation(line: 259, column: 17, scope: !4897)
!4897 = distinct !DILexicalBlock(scope: !4894, file: !310, line: 258, column: 49)
!4898 = !DILocation(line: 262, column: 13, scope: !4897)
!4899 = !DILocation(line: 265, column: 62, scope: !4880)
!4900 = !DILocation(line: 265, column: 25, scope: !4880)
!4901 = !DILocation(line: 266, column: 27, scope: !4902)
!4902 = distinct !DILexicalBlock(scope: !4880, file: !310, line: 266, column: 17)
!4903 = !DILocation(line: 266, column: 17, scope: !4880)
!4904 = !DILocation(line: 267, column: 17, scope: !4905)
!4905 = distinct !DILexicalBlock(scope: !4902, file: !310, line: 266, column: 49)
!4906 = !DILocation(line: 270, column: 13, scope: !4905)
!4907 = !DILocation(line: 272, column: 40, scope: !4880)
!4908 = !DILocation(line: 273, column: 60, scope: !4880)
!4909 = !DILocation(line: 273, column: 93, scope: !4880)
!4910 = !DILocation(line: 273, column: 13, scope: !4880)
!4911 = !DILocation(line: 274, column: 13, scope: !4880)
!4912 = !DILocation(line: 275, column: 13, scope: !4880)
!4913 = !DILocation(line: 276, column: 13, scope: !4914)
!4914 = distinct !DILexicalBlock(scope: !4880, file: !310, line: 276, column: 13)
!4915 = !DILocation(line: 277, column: 9, scope: !4880)
!4916 = !DILocation(line: 280, column: 1, scope: !4806)
!4917 = distinct !DISubprogram(name: "powerkey_press_handler", scope: !310, file: !310, line: 288, type: !4785, scopeLine: 289, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !309, retainedNodes: !4918)
!4918 = !{!4919, !4920}
!4919 = !DILocalVariable(name: "trigger_source", arg: 1, scope: !4917, file: !310, line: 288, type: !74)
!4920 = !DILocalVariable(name: "countext", arg: 2, scope: !4917, file: !310, line: 288, type: !4787)
!4921 = !DILocation(line: 0, scope: !4917)
!4922 = !DILocation(line: 290, column: 48, scope: !4917)
!4923 = !DILocation(line: 290, column: 5, scope: !4917)
!4924 = !DILocation(line: 291, column: 1, scope: !4917)
!4925 = distinct !DISubprogram(name: "powerkey_pmu_reisgter_callback", scope: !310, file: !310, line: 293, type: !382, scopeLine: 294, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !309, retainedNodes: !4926)
!4926 = !{!4927}
!4927 = !DILocalVariable(name: "ret", scope: !4925, file: !310, line: 295, type: !4928)
!4928 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmu_status_t", file: !326, line: 99, baseType: !325)
!4929 = !DILocation(line: 296, column: 5, scope: !4925)
!4930 = !DILocation(line: 298, column: 11, scope: !4925)
!4931 = !DILocation(line: 0, scope: !4925)
!4932 = !DILocation(line: 299, column: 13, scope: !4933)
!4933 = distinct !DILexicalBlock(scope: !4925, file: !310, line: 299, column: 9)
!4934 = !DILocation(line: 299, column: 9, scope: !4925)
!4935 = !DILocation(line: 300, column: 9, scope: !4936)
!4936 = distinct !DILexicalBlock(scope: !4933, file: !310, line: 299, column: 36)
!4937 = !DILocation(line: 301, column: 9, scope: !4936)
!4938 = !DILocation(line: 306, column: 11, scope: !4925)
!4939 = !DILocation(line: 307, column: 13, scope: !4940)
!4940 = distinct !DILexicalBlock(scope: !4925, file: !310, line: 307, column: 9)
!4941 = !DILocation(line: 307, column: 9, scope: !4925)
!4942 = !DILocation(line: 308, column: 9, scope: !4943)
!4943 = distinct !DILexicalBlock(scope: !4940, file: !310, line: 307, column: 36)
!4944 = !DILocation(line: 309, column: 9, scope: !4943)
!4945 = !DILocation(line: 311, column: 5, scope: !4925)
!4946 = !DILocation(line: 313, column: 5, scope: !4925)
!4947 = !DILocation(line: 314, column: 1, scope: !4925)
!4948 = distinct !DISubprogram(name: "powerkey_pmu_init", scope: !310, file: !310, line: 317, type: !382, scopeLine: 318, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !309, retainedNodes: !4949)
!4949 = !{!4950}
!4950 = !DILocalVariable(name: "ret", scope: !4948, file: !310, line: 319, type: !263)
!4951 = !DILocation(line: 321, column: 5, scope: !4952)
!4952 = distinct !DILexicalBlock(scope: !4948, file: !310, line: 321, column: 5)
!4953 = !DILocation(line: 321, column: 5, scope: !4954)
!4954 = distinct !DILexicalBlock(scope: !4952, file: !310, line: 321, column: 5)
!4955 = !DILocation(line: 321, column: 5, scope: !4956)
!4956 = distinct !DILexicalBlock(scope: !4954, file: !310, line: 321, column: 5)
!4957 = !DILocation(line: 323, column: 5, scope: !4948)
!4958 = !DILocation(line: 326, column: 5, scope: !4948)
!4959 = !DILocation(line: 327, column: 5, scope: !4948)
!4960 = !DILocation(line: 329, column: 5, scope: !4948)
!4961 = !DILocation(line: 331, column: 11, scope: !4948)
!4962 = !DILocation(line: 0, scope: !4948)
!4963 = !DILocation(line: 332, column: 9, scope: !4948)
!4964 = !DILocation(line: 333, column: 9, scope: !4965)
!4965 = distinct !DILexicalBlock(scope: !4966, file: !310, line: 332, column: 22)
!4966 = distinct !DILexicalBlock(scope: !4948, file: !310, line: 332, column: 9)
!4967 = !DILocation(line: 334, column: 9, scope: !4965)
!4968 = !DILocation(line: 338, column: 11, scope: !4948)
!4969 = !DILocation(line: 339, column: 9, scope: !4948)
!4970 = !DILocation(line: 340, column: 9, scope: !4971)
!4971 = distinct !DILexicalBlock(scope: !4972, file: !310, line: 339, column: 22)
!4972 = distinct !DILexicalBlock(scope: !4948, file: !310, line: 339, column: 9)
!4973 = !DILocation(line: 341, column: 9, scope: !4971)
!4974 = !DILocation(line: 344, column: 9, scope: !4975)
!4975 = distinct !DILexicalBlock(scope: !4948, file: !310, line: 344, column: 9)
!4976 = !DILocation(line: 344, column: 9, scope: !4948)
!4977 = !DILocation(line: 345, column: 9, scope: !4978)
!4978 = distinct !DILexicalBlock(scope: !4975, file: !310, line: 344, column: 51)
!4979 = !DILocation(line: 346, column: 9, scope: !4978)
!4980 = !DILocation(line: 350, column: 1, scope: !4948)
!4981 = !DILocation(line: 358, column: 21, scope: !381)
!4982 = !DILocation(line: 0, scope: !381)
!4983 = !DILocation(line: 360, column: 9, scope: !4984)
!4984 = distinct !DILexicalBlock(scope: !381, file: !310, line: 360, column: 9)
!4985 = !DILocation(line: 360, column: 20, scope: !4984)
!4986 = !DILocation(line: 360, column: 9, scope: !381)
!4987 = !DILocation(line: 361, column: 9, scope: !4988)
!4988 = distinct !DILexicalBlock(scope: !4984, file: !310, line: 360, column: 38)
!4989 = !DILocation(line: 362, column: 5, scope: !4988)
!4990 = !DILocation(line: 364, column: 16, scope: !381)
!4991 = !DILocation(line: 366, column: 23, scope: !4992)
!4992 = distinct !DILexicalBlock(scope: !381, file: !310, line: 366, column: 9)
!4993 = !DILocation(line: 372, column: 1, scope: !381)
!4994 = distinct !DISubprogram(name: "is_pin_with_pullsel", scope: !415, file: !415, line: 50, type: !4995, scopeLine: 51, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !4998)
!4995 = !DISubroutineType(types: !4996)
!4996 = !{!61, !4997}
!4997 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_pin_t", file: !15, line: 390, baseType: !417)
!4998 = !{!4999, !5000, !5001}
!4999 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4994, file: !415, line: 50, type: !4997)
!5000 = !DILocalVariable(name: "i", scope: !4994, file: !415, line: 52, type: !61)
!5001 = !DILocalVariable(name: "pin_number_with_pullsel", scope: !4994, file: !415, line: 53, type: !1311)
!5002 = !DILocation(line: 0, scope: !4994)
!5003 = !DILocation(line: 53, column: 14, scope: !4994)
!5004 = !DILocation(line: 55, column: 5, scope: !5005)
!5005 = distinct !DILexicalBlock(scope: !4994, file: !415, line: 55, column: 5)
!5006 = !DILocation(line: 55, column: 25, scope: !5007)
!5007 = distinct !DILexicalBlock(scope: !5005, file: !415, line: 55, column: 5)
!5008 = !DILocation(line: 55, column: 19, scope: !5007)
!5009 = distinct !{!5009, !5004, !5010}
!5010 = !DILocation(line: 59, column: 5, scope: !5005)
!5011 = !DILocation(line: 56, column: 13, scope: !5012)
!5012 = distinct !DILexicalBlock(scope: !5013, file: !415, line: 56, column: 13)
!5013 = distinct !DILexicalBlock(scope: !5007, file: !415, line: 55, column: 29)
!5014 = !DILocation(line: 56, column: 40, scope: !5012)
!5015 = !DILocation(line: 56, column: 13, scope: !5013)
!5016 = !DILocation(line: 61, column: 1, scope: !4994)
!5017 = distinct !DISubprogram(name: "hal_gpio_init", scope: !415, file: !415, line: 66, type: !5018, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !5021)
!5018 = !DISubroutineType(types: !5019)
!5019 = !{!5020, !4997}
!5020 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_status_t", file: !470, line: 229, baseType: !469)
!5021 = !{!5022}
!5022 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !5017, file: !415, line: 66, type: !4997)
!5023 = !DILocation(line: 0, scope: !5017)
!5024 = !DILocation(line: 68, column: 5, scope: !5017)
!5025 = distinct !DISubprogram(name: "hal_gpio_deinit", scope: !415, file: !415, line: 72, type: !5018, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !5026)
!5026 = !{!5027}
!5027 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !5025, file: !415, line: 72, type: !4997)
!5028 = !DILocation(line: 0, scope: !5025)
!5029 = !DILocation(line: 74, column: 5, scope: !5025)
!5030 = distinct !DISubprogram(name: "hal_gpio_set_direction", scope: !415, file: !415, line: 79, type: !5031, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !5033)
!5031 = !DISubroutineType(types: !5032)
!5032 = !{!5020, !4997, !511}
!5033 = !{!5034, !5035, !5036, !5037}
!5034 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !5030, file: !415, line: 79, type: !4997)
!5035 = !DILocalVariable(name: "gpio_direction", arg: 2, scope: !5030, file: !415, line: 79, type: !511)
!5036 = !DILocalVariable(name: "no", scope: !5030, file: !415, line: 81, type: !61)
!5037 = !DILocalVariable(name: "remainder", scope: !5030, file: !415, line: 82, type: !61)
!5038 = !DILocation(line: 0, scope: !5030)
!5039 = !DILocation(line: 84, column: 18, scope: !5040)
!5040 = distinct !DILexicalBlock(scope: !5030, file: !415, line: 84, column: 9)
!5041 = !DILocation(line: 84, column: 9, scope: !5030)
!5042 = !DILocation(line: 89, column: 19, scope: !5030)
!5043 = !DILocation(line: 92, column: 26, scope: !5030)
!5044 = !DILocation(line: 94, column: 24, scope: !5045)
!5045 = distinct !DILexicalBlock(scope: !5030, file: !415, line: 94, column: 9)
!5046 = !DILocation(line: 0, scope: !5045)
!5047 = !DILocation(line: 94, column: 9, scope: !5030)
!5048 = !DILocation(line: 101, column: 1, scope: !5030)
!5049 = distinct !DISubprogram(name: "hal_gpio_get_direction", scope: !415, file: !415, line: 105, type: !5050, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !5053)
!5050 = !DISubroutineType(types: !5051)
!5051 = !{!5020, !4997, !5052}
!5052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !511, size: 32)
!5053 = !{!5054, !5055, !5056, !5057, !5058}
!5054 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !5049, file: !415, line: 105, type: !4997)
!5055 = !DILocalVariable(name: "gpio_direction", arg: 2, scope: !5049, file: !415, line: 105, type: !5052)
!5056 = !DILocalVariable(name: "no", scope: !5049, file: !415, line: 107, type: !61)
!5057 = !DILocalVariable(name: "remainder", scope: !5049, file: !415, line: 108, type: !61)
!5058 = !DILocalVariable(name: "temp", scope: !5049, file: !415, line: 109, type: !61)
!5059 = !DILocation(line: 0, scope: !5049)
!5060 = !DILocation(line: 111, column: 18, scope: !5061)
!5061 = distinct !DILexicalBlock(scope: !5049, file: !415, line: 111, column: 9)
!5062 = !DILocation(line: 111, column: 9, scope: !5049)
!5063 = !DILocation(line: 115, column: 14, scope: !5064)
!5064 = distinct !DILexicalBlock(scope: !5049, file: !415, line: 115, column: 9)
!5065 = !DILocation(line: 115, column: 9, scope: !5049)
!5066 = !DILocation(line: 120, column: 19, scope: !5049)
!5067 = !DILocation(line: 123, column: 26, scope: !5049)
!5068 = !DILocation(line: 125, column: 12, scope: !5049)
!5069 = !DILocation(line: 125, column: 54, scope: !5049)
!5070 = !DILocation(line: 126, column: 45, scope: !5049)
!5071 = !DILocation(line: 126, column: 17, scope: !5049)
!5072 = !DILocation(line: 127, column: 51, scope: !5049)
!5073 = !DILocation(line: 127, column: 21, scope: !5049)
!5074 = !DILocation(line: 128, column: 5, scope: !5049)
!5075 = !DILocation(line: 130, column: 1, scope: !5049)
!5076 = distinct !DISubprogram(name: "hal_pinmux_set_function", scope: !415, file: !415, line: 134, type: !5077, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !5080)
!5077 = !DISubroutineType(types: !5078)
!5078 = !{!5079, !4997, !74}
!5079 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_pinmux_status_t", file: !470, line: 238, baseType: !480)
!5080 = !{!5081, !5082, !5083, !5084, !5085}
!5081 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !5076, file: !415, line: 134, type: !4997)
!5082 = !DILocalVariable(name: "function_index", arg: 2, scope: !5076, file: !415, line: 134, type: !74)
!5083 = !DILocalVariable(name: "no", scope: !5076, file: !415, line: 136, type: !61)
!5084 = !DILocalVariable(name: "remainder", scope: !5076, file: !415, line: 137, type: !61)
!5085 = !DILocalVariable(name: "irq_status", scope: !5076, file: !415, line: 138, type: !61)
!5086 = !DILocation(line: 0, scope: !5076)
!5087 = !DILocation(line: 140, column: 18, scope: !5088)
!5088 = distinct !DILexicalBlock(scope: !5076, file: !415, line: 140, column: 9)
!5089 = !DILocation(line: 140, column: 9, scope: !5076)
!5090 = !DILocation(line: 145, column: 24, scope: !5091)
!5091 = distinct !DILexicalBlock(scope: !5076, file: !415, line: 145, column: 9)
!5092 = !DILocation(line: 145, column: 9, scope: !5076)
!5093 = !DILocation(line: 145, column: 9, scope: !5091)
!5094 = !DILocation(line: 150, column: 19, scope: !5076)
!5095 = !DILocation(line: 156, column: 18, scope: !5076)
!5096 = !DILocation(line: 157, column: 105, scope: !5076)
!5097 = !DILocation(line: 157, column: 91, scope: !5076)
!5098 = !DILocation(line: 157, column: 5, scope: !5076)
!5099 = !DILocation(line: 157, column: 48, scope: !5076)
!5100 = !DILocation(line: 157, column: 62, scope: !5076)
!5101 = !DILocation(line: 158, column: 80, scope: !5076)
!5102 = !DILocation(line: 158, column: 5, scope: !5076)
!5103 = !DILocation(line: 158, column: 48, scope: !5076)
!5104 = !DILocation(line: 158, column: 62, scope: !5076)
!5105 = !DILocation(line: 159, column: 5, scope: !5076)
!5106 = !DILocation(line: 160, column: 5, scope: !5076)
!5107 = !DILocation(line: 162, column: 1, scope: !5076)
!5108 = distinct !DISubprogram(name: "hal_gpio_get_input", scope: !415, file: !415, line: 166, type: !5109, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !5112)
!5109 = !DISubroutineType(types: !5110)
!5110 = !{!5020, !4997, !5111}
!5111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !512, size: 32)
!5112 = !{!5113, !5114, !5115, !5116, !5117}
!5113 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !5108, file: !415, line: 166, type: !4997)
!5114 = !DILocalVariable(name: "gpio_data", arg: 2, scope: !5108, file: !415, line: 166, type: !5111)
!5115 = !DILocalVariable(name: "no", scope: !5108, file: !415, line: 168, type: !61)
!5116 = !DILocalVariable(name: "remainder", scope: !5108, file: !415, line: 169, type: !61)
!5117 = !DILocalVariable(name: "temp", scope: !5108, file: !415, line: 170, type: !61)
!5118 = !DILocation(line: 0, scope: !5108)
!5119 = !DILocation(line: 172, column: 18, scope: !5120)
!5120 = distinct !DILexicalBlock(scope: !5108, file: !415, line: 172, column: 9)
!5121 = !DILocation(line: 172, column: 9, scope: !5108)
!5122 = !DILocation(line: 176, column: 14, scope: !5123)
!5123 = distinct !DILexicalBlock(scope: !5108, file: !415, line: 176, column: 9)
!5124 = !DILocation(line: 176, column: 9, scope: !5108)
!5125 = !DILocation(line: 181, column: 19, scope: !5108)
!5126 = !DILocation(line: 184, column: 26, scope: !5108)
!5127 = !DILocation(line: 186, column: 12, scope: !5108)
!5128 = !DILocation(line: 186, column: 54, scope: !5108)
!5129 = !DILocation(line: 187, column: 45, scope: !5108)
!5130 = !DILocation(line: 187, column: 17, scope: !5108)
!5131 = !DILocation(line: 188, column: 41, scope: !5108)
!5132 = !DILocation(line: 188, column: 16, scope: !5108)
!5133 = !DILocation(line: 189, column: 5, scope: !5108)
!5134 = !DILocation(line: 191, column: 1, scope: !5108)
!5135 = distinct !DISubprogram(name: "hal_gpio_set_output", scope: !415, file: !415, line: 195, type: !5136, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !5138)
!5136 = !DISubroutineType(types: !5137)
!5137 = !{!5020, !4997, !512}
!5138 = !{!5139, !5140, !5141, !5142}
!5139 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !5135, file: !415, line: 195, type: !4997)
!5140 = !DILocalVariable(name: "gpio_data", arg: 2, scope: !5135, file: !415, line: 195, type: !512)
!5141 = !DILocalVariable(name: "no", scope: !5135, file: !415, line: 197, type: !61)
!5142 = !DILocalVariable(name: "remainder", scope: !5135, file: !415, line: 198, type: !61)
!5143 = !DILocation(line: 0, scope: !5135)
!5144 = !DILocation(line: 200, column: 18, scope: !5145)
!5145 = distinct !DILexicalBlock(scope: !5135, file: !415, line: 200, column: 9)
!5146 = !DILocation(line: 200, column: 9, scope: !5135)
!5147 = !DILocation(line: 205, column: 19, scope: !5135)
!5148 = !DILocation(line: 208, column: 26, scope: !5135)
!5149 = !DILocation(line: 210, column: 9, scope: !5150)
!5150 = distinct !DILexicalBlock(scope: !5135, file: !415, line: 210, column: 9)
!5151 = !DILocation(line: 0, scope: !5150)
!5152 = !DILocation(line: 210, column: 9, scope: !5135)
!5153 = !DILocation(line: 216, column: 1, scope: !5135)
!5154 = distinct !DISubprogram(name: "hal_gpio_get_output", scope: !415, file: !415, line: 220, type: !5109, scopeLine: 221, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !5155)
!5155 = !{!5156, !5157, !5158, !5159, !5160}
!5156 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !5154, file: !415, line: 220, type: !4997)
!5157 = !DILocalVariable(name: "gpio_data", arg: 2, scope: !5154, file: !415, line: 220, type: !5111)
!5158 = !DILocalVariable(name: "no", scope: !5154, file: !415, line: 222, type: !61)
!5159 = !DILocalVariable(name: "remainder", scope: !5154, file: !415, line: 223, type: !61)
!5160 = !DILocalVariable(name: "temp", scope: !5154, file: !415, line: 224, type: !61)
!5161 = !DILocation(line: 0, scope: !5154)
!5162 = !DILocation(line: 226, column: 18, scope: !5163)
!5163 = distinct !DILexicalBlock(scope: !5154, file: !415, line: 226, column: 9)
!5164 = !DILocation(line: 226, column: 9, scope: !5154)
!5165 = !DILocation(line: 230, column: 14, scope: !5166)
!5166 = distinct !DILexicalBlock(scope: !5154, file: !415, line: 230, column: 9)
!5167 = !DILocation(line: 230, column: 9, scope: !5154)
!5168 = !DILocation(line: 235, column: 19, scope: !5154)
!5169 = !DILocation(line: 238, column: 26, scope: !5154)
!5170 = !DILocation(line: 240, column: 12, scope: !5154)
!5171 = !DILocation(line: 240, column: 55, scope: !5154)
!5172 = !DILocation(line: 241, column: 45, scope: !5154)
!5173 = !DILocation(line: 241, column: 17, scope: !5154)
!5174 = !DILocation(line: 242, column: 41, scope: !5154)
!5175 = !DILocation(line: 242, column: 16, scope: !5154)
!5176 = !DILocation(line: 243, column: 5, scope: !5154)
!5177 = !DILocation(line: 245, column: 1, scope: !5154)
!5178 = distinct !DISubprogram(name: "hal_gpio_toggle_pin", scope: !415, file: !415, line: 249, type: !5018, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !5179)
!5179 = !{!5180, !5181, !5182, !5183}
!5180 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !5178, file: !415, line: 249, type: !4997)
!5181 = !DILocalVariable(name: "no", scope: !5178, file: !415, line: 251, type: !61)
!5182 = !DILocalVariable(name: "remainder", scope: !5178, file: !415, line: 252, type: !61)
!5183 = !DILocalVariable(name: "temp", scope: !5178, file: !415, line: 253, type: !61)
!5184 = !DILocation(line: 0, scope: !5178)
!5185 = !DILocation(line: 255, column: 18, scope: !5186)
!5186 = distinct !DILexicalBlock(scope: !5178, file: !415, line: 255, column: 9)
!5187 = !DILocation(line: 255, column: 9, scope: !5178)
!5188 = !DILocation(line: 260, column: 19, scope: !5178)
!5189 = !DILocation(line: 263, column: 26, scope: !5178)
!5190 = !DILocation(line: 265, column: 12, scope: !5178)
!5191 = !DILocation(line: 265, column: 55, scope: !5178)
!5192 = !DILocation(line: 266, column: 45, scope: !5178)
!5193 = !DILocation(line: 266, column: 17, scope: !5178)
!5194 = !DILocation(line: 267, column: 15, scope: !5195)
!5195 = distinct !DILexicalBlock(scope: !5178, file: !415, line: 267, column: 9)
!5196 = !DILocation(line: 267, column: 9, scope: !5178)
!5197 = !DILocation(line: 0, scope: !5195)
!5198 = !DILocation(line: 273, column: 1, scope: !5178)
!5199 = distinct !DISubprogram(name: "hal_gpio_enable_inversion", scope: !415, file: !415, line: 278, type: !5018, scopeLine: 279, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !5200)
!5200 = !{!5201, !5202, !5203}
!5201 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !5199, file: !415, line: 278, type: !4997)
!5202 = !DILocalVariable(name: "no", scope: !5199, file: !415, line: 280, type: !61)
!5203 = !DILocalVariable(name: "remainder", scope: !5199, file: !415, line: 281, type: !61)
!5204 = !DILocation(line: 0, scope: !5199)
!5205 = !DILocation(line: 283, column: 18, scope: !5206)
!5206 = distinct !DILexicalBlock(scope: !5199, file: !415, line: 283, column: 9)
!5207 = !DILocation(line: 283, column: 9, scope: !5199)
!5208 = !DILocation(line: 288, column: 19, scope: !5199)
!5209 = !DILocation(line: 291, column: 26, scope: !5199)
!5210 = !DILocation(line: 293, column: 90, scope: !5199)
!5211 = !DILocation(line: 293, column: 5, scope: !5199)
!5212 = !DILocation(line: 293, column: 48, scope: !5199)
!5213 = !DILocation(line: 293, column: 62, scope: !5199)
!5214 = !DILocation(line: 294, column: 5, scope: !5199)
!5215 = !DILocation(line: 295, column: 1, scope: !5199)
!5216 = distinct !DISubprogram(name: "hal_gpio_disable_inversion", scope: !415, file: !415, line: 299, type: !5018, scopeLine: 300, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !5217)
!5217 = !{!5218, !5219, !5220}
!5218 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !5216, file: !415, line: 299, type: !4997)
!5219 = !DILocalVariable(name: "no", scope: !5216, file: !415, line: 301, type: !61)
!5220 = !DILocalVariable(name: "remainder", scope: !5216, file: !415, line: 302, type: !61)
!5221 = !DILocation(line: 0, scope: !5216)
!5222 = !DILocation(line: 304, column: 18, scope: !5223)
!5223 = distinct !DILexicalBlock(scope: !5216, file: !415, line: 304, column: 9)
!5224 = !DILocation(line: 304, column: 9, scope: !5216)
!5225 = !DILocation(line: 309, column: 19, scope: !5216)
!5226 = !DILocation(line: 312, column: 26, scope: !5216)
!5227 = !DILocation(line: 314, column: 90, scope: !5216)
!5228 = !DILocation(line: 314, column: 5, scope: !5216)
!5229 = !DILocation(line: 314, column: 48, scope: !5216)
!5230 = !DILocation(line: 314, column: 62, scope: !5216)
!5231 = !DILocation(line: 315, column: 5, scope: !5216)
!5232 = !DILocation(line: 316, column: 1, scope: !5216)
!5233 = distinct !DISubprogram(name: "hal_gpio_pull_up", scope: !415, file: !415, line: 321, type: !5018, scopeLine: 322, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !5234)
!5234 = !{!5235, !5236, !5237}
!5235 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !5233, file: !415, line: 321, type: !4997)
!5236 = !DILocalVariable(name: "no", scope: !5233, file: !415, line: 323, type: !61)
!5237 = !DILocalVariable(name: "remainder", scope: !5233, file: !415, line: 324, type: !61)
!5238 = !DILocation(line: 0, scope: !5233)
!5239 = !DILocation(line: 326, column: 19, scope: !5240)
!5240 = distinct !DILexicalBlock(scope: !5233, file: !415, line: 326, column: 9)
!5241 = !DILocation(line: 326, column: 36, scope: !5240)
!5242 = !DILocation(line: 326, column: 41, scope: !5240)
!5243 = !DILocation(line: 326, column: 9, scope: !5233)
!5244 = !DILocation(line: 331, column: 19, scope: !5233)
!5245 = !DILocation(line: 334, column: 26, scope: !5233)
!5246 = !DILocation(line: 336, column: 94, scope: !5233)
!5247 = !DILocation(line: 336, column: 5, scope: !5233)
!5248 = !DILocation(line: 336, column: 50, scope: !5233)
!5249 = !DILocation(line: 336, column: 66, scope: !5233)
!5250 = !DILocation(line: 337, column: 5, scope: !5233)
!5251 = !DILocation(line: 337, column: 51, scope: !5233)
!5252 = !DILocation(line: 337, column: 68, scope: !5233)
!5253 = !DILocation(line: 338, column: 5, scope: !5233)
!5254 = !DILocation(line: 339, column: 1, scope: !5233)
!5255 = distinct !DISubprogram(name: "hal_gpio_pull_down", scope: !415, file: !415, line: 343, type: !5018, scopeLine: 344, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !5256)
!5256 = !{!5257, !5258, !5259}
!5257 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !5255, file: !415, line: 343, type: !4997)
!5258 = !DILocalVariable(name: "no", scope: !5255, file: !415, line: 345, type: !61)
!5259 = !DILocalVariable(name: "remainder", scope: !5255, file: !415, line: 346, type: !61)
!5260 = !DILocation(line: 0, scope: !5255)
!5261 = !DILocation(line: 348, column: 19, scope: !5262)
!5262 = distinct !DILexicalBlock(scope: !5255, file: !415, line: 348, column: 9)
!5263 = !DILocation(line: 348, column: 36, scope: !5262)
!5264 = !DILocation(line: 348, column: 41, scope: !5262)
!5265 = !DILocation(line: 348, column: 9, scope: !5255)
!5266 = !DILocation(line: 353, column: 19, scope: !5255)
!5267 = !DILocation(line: 356, column: 26, scope: !5255)
!5268 = !DILocation(line: 358, column: 94, scope: !5255)
!5269 = !DILocation(line: 358, column: 5, scope: !5255)
!5270 = !DILocation(line: 358, column: 50, scope: !5255)
!5271 = !DILocation(line: 358, column: 66, scope: !5255)
!5272 = !DILocation(line: 359, column: 5, scope: !5255)
!5273 = !DILocation(line: 359, column: 51, scope: !5255)
!5274 = !DILocation(line: 359, column: 68, scope: !5255)
!5275 = !DILocation(line: 360, column: 5, scope: !5255)
!5276 = !DILocation(line: 361, column: 1, scope: !5255)
!5277 = distinct !DISubprogram(name: "hal_gpio_disable_pull", scope: !415, file: !415, line: 365, type: !5018, scopeLine: 366, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !5278)
!5278 = !{!5279, !5280, !5281}
!5279 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !5277, file: !415, line: 365, type: !4997)
!5280 = !DILocalVariable(name: "no", scope: !5277, file: !415, line: 367, type: !61)
!5281 = !DILocalVariable(name: "remainder", scope: !5277, file: !415, line: 368, type: !61)
!5282 = !DILocation(line: 0, scope: !5277)
!5283 = !DILocation(line: 370, column: 19, scope: !5284)
!5284 = distinct !DILexicalBlock(scope: !5277, file: !415, line: 370, column: 9)
!5285 = !DILocation(line: 370, column: 36, scope: !5284)
!5286 = !DILocation(line: 370, column: 41, scope: !5284)
!5287 = !DILocation(line: 370, column: 9, scope: !5277)
!5288 = !DILocation(line: 375, column: 19, scope: !5277)
!5289 = !DILocation(line: 378, column: 26, scope: !5277)
!5290 = !DILocation(line: 380, column: 94, scope: !5277)
!5291 = !DILocation(line: 380, column: 5, scope: !5277)
!5292 = !DILocation(line: 380, column: 50, scope: !5277)
!5293 = !DILocation(line: 380, column: 66, scope: !5277)
!5294 = !DILocation(line: 381, column: 5, scope: !5277)
!5295 = !DILocation(line: 382, column: 1, scope: !5277)
!5296 = distinct !DISubprogram(name: "hal_gpio_set_clockout", scope: !415, file: !415, line: 387, type: !5297, scopeLine: 388, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !5301)
!5297 = !DISubroutineType(types: !5298)
!5298 = !{!5020, !5299, !5300}
!5299 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_clock_t", file: !15, line: 423, baseType: !490)
!5300 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_clock_mode_t", file: !15, line: 431, baseType: !499)
!5301 = !{!5302, !5303}
!5302 = !DILocalVariable(name: "gpio_clock_num", arg: 1, scope: !5296, file: !415, line: 387, type: !5299)
!5303 = !DILocalVariable(name: "clock_mode", arg: 2, scope: !5296, file: !415, line: 387, type: !5300)
!5304 = !DILocation(line: 0, scope: !5296)
!5305 = !DILocation(line: 390, column: 24, scope: !5306)
!5306 = distinct !DILexicalBlock(scope: !5296, file: !415, line: 390, column: 9)
!5307 = !DILocation(line: 390, column: 9, scope: !5296)
!5308 = !DILocation(line: 394, column: 5, scope: !5296)
!5309 = !DILocation(line: 394, column: 62, scope: !5296)
!5310 = !DILocation(line: 394, column: 74, scope: !5296)
!5311 = !DILocation(line: 395, column: 5, scope: !5296)
!5312 = !DILocation(line: 396, column: 1, scope: !5296)
!5313 = distinct !DISubprogram(name: "hal_gpio_set_pupd_register", scope: !415, file: !415, line: 403, type: !5314, scopeLine: 404, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !5316)
!5314 = !DISubroutineType(types: !5315)
!5315 = !{!5020, !4997, !74, !74, !74}
!5316 = !{!5317, !5318, !5319, !5320, !5321, !5322}
!5317 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !5313, file: !415, line: 403, type: !4997)
!5318 = !DILocalVariable(name: "gpio_pupd", arg: 2, scope: !5313, file: !415, line: 403, type: !74)
!5319 = !DILocalVariable(name: "gpio_r0", arg: 3, scope: !5313, file: !415, line: 403, type: !74)
!5320 = !DILocalVariable(name: "gpio_r1", arg: 4, scope: !5313, file: !415, line: 403, type: !74)
!5321 = !DILocalVariable(name: "no", scope: !5313, file: !415, line: 405, type: !61)
!5322 = !DILocalVariable(name: "remainder", scope: !5313, file: !415, line: 406, type: !61)
!5323 = !DILocation(line: 0, scope: !5313)
!5324 = !DILocation(line: 408, column: 19, scope: !5325)
!5325 = distinct !DILexicalBlock(scope: !5313, file: !415, line: 408, column: 9)
!5326 = !DILocation(line: 408, column: 36, scope: !5325)
!5327 = !DILocation(line: 408, column: 40, scope: !5325)
!5328 = !DILocation(line: 408, column: 9, scope: !5313)
!5329 = !DILocation(line: 413, column: 19, scope: !5313)
!5330 = !DILocation(line: 416, column: 26, scope: !5313)
!5331 = !DILocation(line: 418, column: 9, scope: !5332)
!5332 = distinct !DILexicalBlock(scope: !5313, file: !415, line: 418, column: 9)
!5333 = !DILocation(line: 0, scope: !5332)
!5334 = !DILocation(line: 418, column: 9, scope: !5313)
!5335 = !DILocation(line: 424, column: 9, scope: !5336)
!5336 = distinct !DILexicalBlock(scope: !5313, file: !415, line: 424, column: 9)
!5337 = !DILocation(line: 0, scope: !5336)
!5338 = !DILocation(line: 424, column: 9, scope: !5313)
!5339 = !DILocation(line: 430, column: 9, scope: !5340)
!5340 = distinct !DILexicalBlock(scope: !5313, file: !415, line: 430, column: 9)
!5341 = !DILocation(line: 0, scope: !5340)
!5342 = !DILocation(line: 430, column: 9, scope: !5313)
!5343 = !DILocation(line: 436, column: 1, scope: !5313)
!5344 = distinct !DISubprogram(name: "hal_gpio_set_high_impedance", scope: !415, file: !415, line: 441, type: !5018, scopeLine: 442, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !5345)
!5345 = !{!5346, !5347, !5348, !5349, !5350, !5351, !5352}
!5346 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !5344, file: !415, line: 441, type: !4997)
!5347 = !DILocalVariable(name: "no1", scope: !5344, file: !415, line: 443, type: !61)
!5348 = !DILocalVariable(name: "no2", scope: !5344, file: !415, line: 443, type: !61)
!5349 = !DILocalVariable(name: "no3", scope: !5344, file: !415, line: 443, type: !61)
!5350 = !DILocalVariable(name: "remainder1", scope: !5344, file: !415, line: 444, type: !61)
!5351 = !DILocalVariable(name: "remainder2", scope: !5344, file: !415, line: 444, type: !61)
!5352 = !DILocalVariable(name: "remainder3", scope: !5344, file: !415, line: 444, type: !61)
!5353 = !DILocation(line: 0, scope: !5344)
!5354 = !DILocation(line: 446, column: 18, scope: !5355)
!5355 = distinct !DILexicalBlock(scope: !5344, file: !415, line: 446, column: 9)
!5356 = !DILocation(line: 446, column: 9, scope: !5344)
!5357 = !DILocation(line: 451, column: 20, scope: !5344)
!5358 = !DILocation(line: 454, column: 27, scope: !5344)
!5359 = !DILocation(line: 457, column: 20, scope: !5344)
!5360 = !DILocation(line: 463, column: 20, scope: !5344)
!5361 = !DILocation(line: 469, column: 107, scope: !5344)
!5362 = !DILocation(line: 469, column: 92, scope: !5344)
!5363 = !DILocation(line: 469, column: 5, scope: !5344)
!5364 = !DILocation(line: 469, column: 49, scope: !5344)
!5365 = !DILocation(line: 469, column: 63, scope: !5344)
!5366 = !DILocation(line: 472, column: 89, scope: !5344)
!5367 = !DILocation(line: 472, column: 5, scope: !5344)
!5368 = !DILocation(line: 472, column: 48, scope: !5344)
!5369 = !DILocation(line: 472, column: 61, scope: !5344)
!5370 = !DILocation(line: 475, column: 5, scope: !5344)
!5371 = !DILocation(line: 475, column: 48, scope: !5344)
!5372 = !DILocation(line: 475, column: 61, scope: !5344)
!5373 = !DILocation(line: 478, column: 9, scope: !5374)
!5374 = distinct !DILexicalBlock(scope: !5344, file: !415, line: 478, column: 9)
!5375 = !DILocation(line: 0, scope: !5374)
!5376 = !DILocation(line: 478, column: 9, scope: !5344)
!5377 = !DILocation(line: 479, column: 55, scope: !5378)
!5378 = distinct !DILexicalBlock(scope: !5374, file: !415, line: 478, column: 40)
!5379 = !DILocation(line: 480, column: 5, scope: !5378)
!5380 = !DILocation(line: 483, column: 53, scope: !5381)
!5381 = distinct !DILexicalBlock(scope: !5374, file: !415, line: 482, column: 10)
!5382 = !DILocation(line: 483, column: 67, scope: !5381)
!5383 = !DILocation(line: 484, column: 9, scope: !5381)
!5384 = !DILocation(line: 484, column: 55, scope: !5381)
!5385 = !DILocation(line: 484, column: 71, scope: !5381)
!5386 = !DILocation(line: 485, column: 9, scope: !5381)
!5387 = !DILocation(line: 485, column: 55, scope: !5381)
!5388 = !DILocation(line: 490, column: 5, scope: !5344)
!5389 = !DILocation(line: 490, column: 48, scope: !5344)
!5390 = !DILocation(line: 490, column: 61, scope: !5344)
!5391 = !DILocation(line: 493, column: 5, scope: !5344)
!5392 = !DILocation(line: 493, column: 47, scope: !5344)
!5393 = !DILocation(line: 493, column: 59, scope: !5344)
!5394 = !DILocation(line: 496, column: 108, scope: !5344)
!5395 = !DILocation(line: 496, column: 93, scope: !5344)
!5396 = !DILocation(line: 496, column: 5, scope: !5344)
!5397 = !DILocation(line: 496, column: 50, scope: !5344)
!5398 = !DILocation(line: 496, column: 65, scope: !5344)
!5399 = !DILocation(line: 498, column: 5, scope: !5344)
!5400 = !DILocation(line: 499, column: 1, scope: !5344)
!5401 = distinct !DISubprogram(name: "hal_gpio_clear_high_impedance", scope: !415, file: !415, line: 502, type: !5018, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !5402)
!5402 = !{!5403, !5404, !5405, !5406, !5407}
!5403 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !5401, file: !415, line: 502, type: !4997)
!5404 = !DILocalVariable(name: "no1", scope: !5401, file: !415, line: 504, type: !61)
!5405 = !DILocalVariable(name: "no2", scope: !5401, file: !415, line: 504, type: !61)
!5406 = !DILocalVariable(name: "remainder1", scope: !5401, file: !415, line: 505, type: !61)
!5407 = !DILocalVariable(name: "remainder2", scope: !5401, file: !415, line: 505, type: !61)
!5408 = !DILocation(line: 0, scope: !5401)
!5409 = !DILocation(line: 507, column: 18, scope: !5410)
!5410 = distinct !DILexicalBlock(scope: !5401, file: !415, line: 507, column: 9)
!5411 = !DILocation(line: 507, column: 9, scope: !5401)
!5412 = !DILocation(line: 512, column: 20, scope: !5401)
!5413 = !DILocation(line: 515, column: 27, scope: !5401)
!5414 = !DILocation(line: 518, column: 20, scope: !5401)
!5415 = !DILocation(line: 524, column: 107, scope: !5401)
!5416 = !DILocation(line: 524, column: 92, scope: !5401)
!5417 = !DILocation(line: 524, column: 5, scope: !5401)
!5418 = !DILocation(line: 524, column: 49, scope: !5401)
!5419 = !DILocation(line: 524, column: 63, scope: !5401)
!5420 = !DILocation(line: 527, column: 89, scope: !5401)
!5421 = !DILocation(line: 527, column: 5, scope: !5401)
!5422 = !DILocation(line: 527, column: 48, scope: !5401)
!5423 = !DILocation(line: 527, column: 61, scope: !5401)
!5424 = !DILocation(line: 530, column: 9, scope: !5425)
!5425 = distinct !DILexicalBlock(scope: !5401, file: !415, line: 530, column: 9)
!5426 = !DILocation(line: 0, scope: !5425)
!5427 = !DILocation(line: 530, column: 9, scope: !5401)
!5428 = !DILocation(line: 531, column: 55, scope: !5429)
!5429 = distinct !DILexicalBlock(scope: !5425, file: !415, line: 530, column: 40)
!5430 = !DILocation(line: 531, column: 71, scope: !5429)
!5431 = !DILocation(line: 532, column: 9, scope: !5429)
!5432 = !DILocation(line: 532, column: 56, scope: !5429)
!5433 = !DILocation(line: 533, column: 5, scope: !5429)
!5434 = !DILocation(line: 536, column: 53, scope: !5435)
!5435 = distinct !DILexicalBlock(scope: !5425, file: !415, line: 535, column: 10)
!5436 = !DILocation(line: 536, column: 67, scope: !5435)
!5437 = !DILocation(line: 537, column: 9, scope: !5435)
!5438 = !DILocation(line: 537, column: 55, scope: !5435)
!5439 = !DILocation(line: 537, column: 71, scope: !5435)
!5440 = !DILocation(line: 538, column: 9, scope: !5435)
!5441 = !DILocation(line: 538, column: 55, scope: !5435)
!5442 = !DILocation(line: 543, column: 5, scope: !5401)
!5443 = !DILocation(line: 543, column: 48, scope: !5401)
!5444 = !DILocation(line: 543, column: 61, scope: !5401)
!5445 = !DILocation(line: 546, column: 5, scope: !5401)
!5446 = !DILocation(line: 546, column: 47, scope: !5401)
!5447 = !DILocation(line: 546, column: 59, scope: !5401)
!5448 = !DILocation(line: 549, column: 5, scope: !5401)
!5449 = !DILocation(line: 550, column: 1, scope: !5401)
!5450 = distinct !DISubprogram(name: "hal_gpio_set_driving_current", scope: !415, file: !415, line: 554, type: !5451, scopeLine: 555, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !5453)
!5451 = !DISubroutineType(types: !5452)
!5452 = !{!5020, !4997, !513}
!5453 = !{!5454, !5455, !5456, !5457}
!5454 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !5450, file: !415, line: 554, type: !4997)
!5455 = !DILocalVariable(name: "driving", arg: 2, scope: !5450, file: !415, line: 554, type: !513)
!5456 = !DILocalVariable(name: "no", scope: !5450, file: !415, line: 556, type: !61)
!5457 = !DILocalVariable(name: "remainder", scope: !5450, file: !415, line: 557, type: !61)
!5458 = !DILocation(line: 0, scope: !5450)
!5459 = !DILocation(line: 559, column: 19, scope: !5460)
!5460 = distinct !DILexicalBlock(scope: !5450, file: !415, line: 559, column: 9)
!5461 = !DILocation(line: 559, column: 9, scope: !5450)
!5462 = !DILocation(line: 564, column: 19, scope: !5450)
!5463 = !DILocation(line: 569, column: 102, scope: !5450)
!5464 = !DILocation(line: 569, column: 88, scope: !5450)
!5465 = !DILocation(line: 569, column: 5, scope: !5450)
!5466 = !DILocation(line: 569, column: 47, scope: !5450)
!5467 = !DILocation(line: 569, column: 60, scope: !5450)
!5468 = !DILocation(line: 570, column: 71, scope: !5450)
!5469 = !DILocation(line: 570, column: 5, scope: !5450)
!5470 = !DILocation(line: 570, column: 47, scope: !5450)
!5471 = !DILocation(line: 570, column: 60, scope: !5450)
!5472 = !DILocation(line: 571, column: 5, scope: !5450)
!5473 = !DILocation(line: 572, column: 1, scope: !5450)
!5474 = distinct !DISubprogram(name: "hal_gpio_get_driving_current", scope: !415, file: !415, line: 575, type: !5475, scopeLine: 576, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !5478)
!5475 = !DISubroutineType(types: !5476)
!5476 = !{!5020, !4997, !5477}
!5477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !513, size: 32)
!5478 = !{!5479, !5480, !5481, !5482, !5483}
!5479 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !5474, file: !415, line: 575, type: !4997)
!5480 = !DILocalVariable(name: "driving", arg: 2, scope: !5474, file: !415, line: 575, type: !5477)
!5481 = !DILocalVariable(name: "no", scope: !5474, file: !415, line: 577, type: !61)
!5482 = !DILocalVariable(name: "remainder", scope: !5474, file: !415, line: 578, type: !61)
!5483 = !DILocalVariable(name: "temp", scope: !5474, file: !415, line: 579, type: !61)
!5484 = !DILocation(line: 0, scope: !5474)
!5485 = !DILocation(line: 581, column: 19, scope: !5486)
!5486 = distinct !DILexicalBlock(scope: !5474, file: !415, line: 581, column: 9)
!5487 = !DILocation(line: 581, column: 9, scope: !5474)
!5488 = !DILocation(line: 585, column: 14, scope: !5489)
!5489 = distinct !DILexicalBlock(scope: !5474, file: !415, line: 585, column: 9)
!5490 = !DILocation(line: 585, column: 9, scope: !5474)
!5491 = !DILocation(line: 590, column: 19, scope: !5474)
!5492 = !DILocation(line: 595, column: 12, scope: !5474)
!5493 = !DILocation(line: 595, column: 54, scope: !5474)
!5494 = !DILocation(line: 596, column: 59, scope: !5474)
!5495 = !DILocation(line: 596, column: 45, scope: !5474)
!5496 = !DILocation(line: 596, column: 17, scope: !5474)
!5497 = !DILocation(line: 597, column: 18, scope: !5474)
!5498 = !DILocation(line: 600, column: 56, scope: !5474)
!5499 = !DILocation(line: 600, column: 14, scope: !5474)
!5500 = !DILocation(line: 602, column: 5, scope: !5474)
!5501 = !DILocation(line: 603, column: 1, scope: !5474)
!5502 = distinct !DISubprogram(name: "uart_receive_handler", scope: !695, file: !695, line: 146, type: !5503, scopeLine: 147, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !694, retainedNodes: !5505)
!5503 = !DISubroutineType(types: !5504)
!5504 = !{null, !807, !263}
!5505 = !{!5506, !5507, !5508, !5510, !5511, !5512, !5513, !5569}
!5506 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5502, file: !695, line: 146, type: !807)
!5507 = !DILocalVariable(name: "is_timeout", arg: 2, scope: !5502, file: !695, line: 146, type: !263)
!5508 = !DILocalVariable(name: "channel", scope: !5502, file: !695, line: 148, type: !5509)
!5509 = !DIDerivedType(tag: DW_TAG_typedef, name: "vdma_channel_t", file: !705, line: 203, baseType: !704)
!5510 = !DILocalVariable(name: "avail_bytes", scope: !5502, file: !695, line: 149, type: !61)
!5511 = !DILocalVariable(name: "callback", scope: !5502, file: !695, line: 150, type: !854)
!5512 = !DILocalVariable(name: "arg", scope: !5502, file: !695, line: 151, type: !65)
!5513 = !DILocalVariable(name: "uartx", scope: !5502, file: !695, line: 152, type: !5514)
!5514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5515, size: 32)
!5515 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_REGISTER_T", file: !154, line: 588, baseType: !5516)
!5516 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !154, line: 542, size: 800, elements: !5517)
!5517 = !{!5518, !5524, !5529, !5535, !5536, !5541, !5546, !5547, !5552, !5553, !5554, !5555, !5556, !5557, !5558, !5559, !5560, !5561, !5562, !5563, !5564, !5565, !5566, !5567, !5568}
!5518 = !DIDerivedType(tag: DW_TAG_member, name: "RBR_THR_DLL", scope: !5516, file: !154, line: 547, baseType: !5519, size: 32)
!5519 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5516, file: !154, line: 543, size: 32, elements: !5520)
!5520 = !{!5521, !5522, !5523}
!5521 = !DIDerivedType(tag: DW_TAG_member, name: "RBR", scope: !5519, file: !154, line: 544, baseType: !241, size: 32)
!5522 = !DIDerivedType(tag: DW_TAG_member, name: "THR", scope: !5519, file: !154, line: 545, baseType: !237, size: 32)
!5523 = !DIDerivedType(tag: DW_TAG_member, name: "DLL", scope: !5519, file: !154, line: 546, baseType: !237, size: 32)
!5524 = !DIDerivedType(tag: DW_TAG_member, name: "IER_DLM", scope: !5516, file: !154, line: 551, baseType: !5525, size: 32, offset: 32)
!5525 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5516, file: !154, line: 548, size: 32, elements: !5526)
!5526 = !{!5527, !5528}
!5527 = !DIDerivedType(tag: DW_TAG_member, name: "IER", scope: !5525, file: !154, line: 549, baseType: !237, size: 32)
!5528 = !DIDerivedType(tag: DW_TAG_member, name: "DLM", scope: !5525, file: !154, line: 550, baseType: !237, size: 32)
!5529 = !DIDerivedType(tag: DW_TAG_member, name: "IIR_FCR_EFR", scope: !5516, file: !154, line: 556, baseType: !5530, size: 32, offset: 64)
!5530 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5516, file: !154, line: 552, size: 32, elements: !5531)
!5531 = !{!5532, !5533, !5534}
!5532 = !DIDerivedType(tag: DW_TAG_member, name: "IIR", scope: !5530, file: !154, line: 553, baseType: !241, size: 32)
!5533 = !DIDerivedType(tag: DW_TAG_member, name: "FCR", scope: !5530, file: !154, line: 554, baseType: !237, size: 32)
!5534 = !DIDerivedType(tag: DW_TAG_member, name: "EFR", scope: !5530, file: !154, line: 555, baseType: !237, size: 32)
!5535 = !DIDerivedType(tag: DW_TAG_member, name: "LCR", scope: !5516, file: !154, line: 557, baseType: !237, size: 32, offset: 96)
!5536 = !DIDerivedType(tag: DW_TAG_member, name: "MCR_XON1", scope: !5516, file: !154, line: 561, baseType: !5537, size: 32, offset: 128)
!5537 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5516, file: !154, line: 558, size: 32, elements: !5538)
!5538 = !{!5539, !5540}
!5539 = !DIDerivedType(tag: DW_TAG_member, name: "MCR", scope: !5537, file: !154, line: 559, baseType: !237, size: 32)
!5540 = !DIDerivedType(tag: DW_TAG_member, name: "XON1", scope: !5537, file: !154, line: 560, baseType: !237, size: 32)
!5541 = !DIDerivedType(tag: DW_TAG_member, name: "LSR_XON2", scope: !5516, file: !154, line: 565, baseType: !5542, size: 32, offset: 160)
!5542 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5516, file: !154, line: 562, size: 32, elements: !5543)
!5543 = !{!5544, !5545}
!5544 = !DIDerivedType(tag: DW_TAG_member, name: "LSR", scope: !5542, file: !154, line: 563, baseType: !241, size: 32)
!5545 = !DIDerivedType(tag: DW_TAG_member, name: "XON2", scope: !5542, file: !154, line: 564, baseType: !237, size: 32)
!5546 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF1", scope: !5516, file: !154, line: 566, baseType: !237, size: 32, offset: 192)
!5547 = !DIDerivedType(tag: DW_TAG_member, name: "SCR_XOFF2", scope: !5516, file: !154, line: 570, baseType: !5548, size: 32, offset: 224)
!5548 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5516, file: !154, line: 567, size: 32, elements: !5549)
!5549 = !{!5550, !5551}
!5550 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !5548, file: !154, line: 568, baseType: !237, size: 32)
!5551 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF2", scope: !5548, file: !154, line: 569, baseType: !237, size: 32)
!5552 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_EN", scope: !5516, file: !154, line: 571, baseType: !237, size: 32, offset: 256)
!5553 = !DIDerivedType(tag: DW_TAG_member, name: "HIGHSPEED", scope: !5516, file: !154, line: 572, baseType: !237, size: 32, offset: 288)
!5554 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_COUNT", scope: !5516, file: !154, line: 573, baseType: !237, size: 32, offset: 320)
!5555 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_POINT", scope: !5516, file: !154, line: 574, baseType: !237, size: 32, offset: 352)
!5556 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_REG", scope: !5516, file: !154, line: 575, baseType: !241, size: 32, offset: 384)
!5557 = !DIDerivedType(tag: DW_TAG_member, name: "RATEFIX_AD", scope: !5516, file: !154, line: 576, baseType: !237, size: 32, offset: 416)
!5558 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUDSAMPLE", scope: !5516, file: !154, line: 577, baseType: !237, size: 32, offset: 448)
!5559 = !DIDerivedType(tag: DW_TAG_member, name: "GUARD", scope: !5516, file: !154, line: 578, baseType: !237, size: 32, offset: 480)
!5560 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_DAT", scope: !5516, file: !154, line: 579, baseType: !237, size: 32, offset: 512)
!5561 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_EN", scope: !5516, file: !154, line: 580, baseType: !237, size: 32, offset: 544)
!5562 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEP_EN", scope: !5516, file: !154, line: 581, baseType: !237, size: 32, offset: 576)
!5563 = !DIDerivedType(tag: DW_TAG_member, name: "DMA_EN", scope: !5516, file: !154, line: 582, baseType: !237, size: 32, offset: 608)
!5564 = !DIDerivedType(tag: DW_TAG_member, name: "RXTRI_AD", scope: !5516, file: !154, line: 583, baseType: !237, size: 32, offset: 640)
!5565 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_L", scope: !5516, file: !154, line: 584, baseType: !237, size: 32, offset: 672)
!5566 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_M", scope: !5516, file: !154, line: 585, baseType: !237, size: 32, offset: 704)
!5567 = !DIDerivedType(tag: DW_TAG_member, name: "FCR_RD", scope: !5516, file: !154, line: 586, baseType: !241, size: 32, offset: 736)
!5568 = !DIDerivedType(tag: DW_TAG_member, name: "TX_ACTIVE_EN", scope: !5516, file: !154, line: 587, baseType: !237, size: 32, offset: 768)
!5569 = !DILocalVariable(name: "status", scope: !5502, file: !695, line: 153, type: !5570)
!5570 = !DIDerivedType(tag: DW_TAG_typedef, name: "vdma_status_t", file: !705, line: 211, baseType: !725)
!5571 = !DILocation(line: 0, scope: !5502)
!5572 = !DILocation(line: 149, column: 5, scope: !5502)
!5573 = !DILocation(line: 155, column: 9, scope: !5574)
!5574 = distinct !DILexicalBlock(scope: !5502, file: !695, line: 155, column: 9)
!5575 = !DILocation(line: 155, column: 36, scope: !5574)
!5576 = !DILocation(line: 155, column: 9, scope: !5502)
!5577 = !DILocation(line: 156, column: 9, scope: !5578)
!5578 = distinct !DILexicalBlock(scope: !5574, file: !695, line: 155, column: 70)
!5579 = !DILocation(line: 160, column: 13, scope: !5502)
!5580 = !DILocation(line: 161, column: 15, scope: !5502)
!5581 = !DILocation(line: 163, column: 9, scope: !5502)
!5582 = !DILocation(line: 164, column: 9, scope: !5583)
!5583 = distinct !DILexicalBlock(scope: !5584, file: !695, line: 163, column: 29)
!5584 = distinct !DILexicalBlock(scope: !5502, file: !695, line: 163, column: 9)
!5585 = !DILocation(line: 165, column: 5, scope: !5583)
!5586 = !DILocation(line: 167, column: 14, scope: !5502)
!5587 = !DILocation(line: 168, column: 16, scope: !5588)
!5588 = distinct !DILexicalBlock(scope: !5502, file: !695, line: 168, column: 9)
!5589 = !DILocation(line: 168, column: 9, scope: !5502)
!5590 = !DILocation(line: 169, column: 9, scope: !5591)
!5591 = distinct !DILexicalBlock(scope: !5588, file: !695, line: 168, column: 28)
!5592 = !DILocation(line: 172, column: 9, scope: !5593)
!5593 = distinct !DILexicalBlock(scope: !5502, file: !695, line: 172, column: 9)
!5594 = !DILocation(line: 172, column: 21, scope: !5593)
!5595 = !DILocation(line: 172, column: 9, scope: !5502)
!5596 = !DILocation(line: 176, column: 43, scope: !5502)
!5597 = !DILocation(line: 178, column: 18, scope: !5598)
!5598 = distinct !DILexicalBlock(scope: !5502, file: !695, line: 178, column: 9)
!5599 = !DILocation(line: 178, column: 9, scope: !5502)
!5600 = !DILocation(line: 179, column: 9, scope: !5601)
!5601 = distinct !DILexicalBlock(scope: !5598, file: !695, line: 178, column: 27)
!5602 = !DILocation(line: 177, column: 38, scope: !5502)
!5603 = !DILocation(line: 183, column: 5, scope: !5502)
!5604 = !DILocation(line: 184, column: 5, scope: !5502)
!5605 = !DILocation(line: 185, column: 5, scope: !5502)
!5606 = !DILocation(line: 187, column: 14, scope: !5502)
!5607 = !DILocation(line: 188, column: 16, scope: !5608)
!5608 = distinct !DILexicalBlock(scope: !5502, file: !695, line: 188, column: 9)
!5609 = !DILocation(line: 188, column: 9, scope: !5502)
!5610 = !DILocation(line: 189, column: 9, scope: !5611)
!5611 = distinct !DILexicalBlock(scope: !5608, file: !695, line: 188, column: 28)
!5612 = !DILocation(line: 192, column: 9, scope: !5613)
!5613 = distinct !DILexicalBlock(scope: !5502, file: !695, line: 192, column: 9)
!5614 = !DILocation(line: 192, column: 53, scope: !5613)
!5615 = !DILocation(line: 192, column: 21, scope: !5613)
!5616 = !DILocation(line: 192, column: 9, scope: !5502)
!5617 = !DILocation(line: 193, column: 18, scope: !5618)
!5618 = distinct !DILexicalBlock(scope: !5613, file: !695, line: 192, column: 83)
!5619 = !DILocation(line: 194, column: 20, scope: !5620)
!5620 = distinct !DILexicalBlock(scope: !5618, file: !695, line: 194, column: 13)
!5621 = !DILocation(line: 194, column: 13, scope: !5618)
!5622 = !DILocation(line: 195, column: 13, scope: !5623)
!5623 = distinct !DILexicalBlock(scope: !5620, file: !695, line: 194, column: 32)
!5624 = !DILocation(line: 199, column: 1, scope: !5502)
!5625 = distinct !DISubprogram(name: "uart_send_handler", scope: !695, file: !695, line: 210, type: !5503, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !694, retainedNodes: !5626)
!5626 = !{!5627, !5628, !5629, !5630, !5631, !5632, !5633, !5634, !5635}
!5627 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5625, file: !695, line: 210, type: !807)
!5628 = !DILocalVariable(name: "is_send_complete_trigger", arg: 2, scope: !5625, file: !695, line: 210, type: !263)
!5629 = !DILocalVariable(name: "channel", scope: !5625, file: !695, line: 212, type: !5509)
!5630 = !DILocalVariable(name: "status", scope: !5625, file: !695, line: 213, type: !5570)
!5631 = !DILocalVariable(name: "compare_space", scope: !5625, file: !695, line: 214, type: !61)
!5632 = !DILocalVariable(name: "avail_space", scope: !5625, file: !695, line: 214, type: !61)
!5633 = !DILocalVariable(name: "callback", scope: !5625, file: !695, line: 215, type: !854)
!5634 = !DILocalVariable(name: "arg", scope: !5625, file: !695, line: 216, type: !65)
!5635 = !DILocalVariable(name: "irq_status", scope: !5625, file: !695, line: 218, type: !61)
!5636 = !DILocation(line: 0, scope: !5625)
!5637 = !DILocation(line: 214, column: 5, scope: !5625)
!5638 = !DILocation(line: 221, column: 9, scope: !5639)
!5639 = distinct !DILexicalBlock(scope: !5625, file: !695, line: 221, column: 9)
!5640 = !DILocation(line: 221, column: 36, scope: !5639)
!5641 = !DILocation(line: 221, column: 9, scope: !5625)
!5642 = !DILocation(line: 222, column: 9, scope: !5643)
!5643 = distinct !DILexicalBlock(scope: !5639, file: !695, line: 221, column: 70)
!5644 = !DILocation(line: 226, column: 15, scope: !5625)
!5645 = !DILocation(line: 228, column: 9, scope: !5625)
!5646 = !DILocation(line: 230, column: 13, scope: !5647)
!5647 = distinct !DILexicalBlock(scope: !5648, file: !695, line: 230, column: 13)
!5648 = distinct !DILexicalBlock(scope: !5649, file: !695, line: 228, column: 43)
!5649 = distinct !DILexicalBlock(scope: !5625, file: !695, line: 228, column: 9)
!5650 = !DILocation(line: 230, column: 61, scope: !5647)
!5651 = !DILocation(line: 230, column: 13, scope: !5648)
!5652 = !DILocation(line: 231, column: 26, scope: !5653)
!5653 = distinct !DILexicalBlock(scope: !5647, file: !695, line: 230, column: 71)
!5654 = !DILocation(line: 232, column: 22, scope: !5653)
!5655 = !DILocation(line: 233, column: 24, scope: !5656)
!5656 = distinct !DILexicalBlock(scope: !5653, file: !695, line: 233, column: 17)
!5657 = !DILocation(line: 233, column: 17, scope: !5653)
!5658 = !DILocation(line: 234, column: 17, scope: !5659)
!5659 = distinct !DILexicalBlock(scope: !5656, file: !695, line: 233, column: 36)
!5660 = !DILocation(line: 237, column: 46, scope: !5661)
!5661 = distinct !DILexicalBlock(scope: !5653, file: !695, line: 237, column: 17)
!5662 = !DILocation(line: 237, column: 71, scope: !5661)
!5663 = !DILocation(line: 237, column: 83, scope: !5661)
!5664 = !DILocation(line: 237, column: 17, scope: !5653)
!5665 = !DILocation(line: 238, column: 21, scope: !5666)
!5666 = distinct !DILexicalBlock(scope: !5667, file: !695, line: 238, column: 21)
!5667 = distinct !DILexicalBlock(scope: !5661, file: !695, line: 237, column: 89)
!5668 = !DILocation(line: 238, column: 21, scope: !5667)
!5669 = !DILocation(line: 240, column: 65, scope: !5670)
!5670 = distinct !DILexicalBlock(scope: !5671, file: !695, line: 240, column: 25)
!5671 = distinct !DILexicalBlock(scope: !5666, file: !695, line: 238, column: 65)
!5672 = !DILocation(line: 240, column: 25, scope: !5670)
!5673 = !DILocation(line: 240, column: 25, scope: !5671)
!5674 = !DILocation(line: 241, column: 56, scope: !5675)
!5675 = distinct !DILexicalBlock(scope: !5670, file: !695, line: 240, column: 107)
!5676 = !DILocation(line: 241, column: 25, scope: !5675)
!5677 = !DILocation(line: 242, column: 21, scope: !5675)
!5678 = !DILocation(line: 243, column: 56, scope: !5671)
!5679 = !DILocation(line: 244, column: 17, scope: !5671)
!5680 = !DILocation(line: 246, column: 13, scope: !5653)
!5681 = !DILocation(line: 247, column: 9, scope: !5653)
!5682 = !DILocation(line: 248, column: 61, scope: !5683)
!5683 = distinct !DILexicalBlock(scope: !5647, file: !695, line: 247, column: 16)
!5684 = !DILocation(line: 253, column: 47, scope: !5685)
!5685 = distinct !DILexicalBlock(scope: !5649, file: !695, line: 252, column: 12)
!5686 = !DILocation(line: 255, column: 22, scope: !5687)
!5687 = distinct !DILexicalBlock(scope: !5685, file: !695, line: 255, column: 13)
!5688 = !DILocation(line: 255, column: 13, scope: !5685)
!5689 = !DILocation(line: 256, column: 13, scope: !5690)
!5690 = distinct !DILexicalBlock(scope: !5687, file: !695, line: 255, column: 31)
!5691 = !DILocation(line: 254, column: 42, scope: !5685)
!5692 = !DILocation(line: 260, column: 9, scope: !5685)
!5693 = !DILocation(line: 261, column: 9, scope: !5685)
!5694 = !DILocation(line: 262, column: 9, scope: !5685)
!5695 = !DILocation(line: 264, column: 18, scope: !5685)
!5696 = !DILocation(line: 265, column: 20, scope: !5697)
!5697 = distinct !DILexicalBlock(scope: !5685, file: !695, line: 265, column: 13)
!5698 = !DILocation(line: 265, column: 13, scope: !5685)
!5699 = !DILocation(line: 266, column: 13, scope: !5700)
!5700 = distinct !DILexicalBlock(scope: !5697, file: !695, line: 265, column: 32)
!5701 = !DILocation(line: 269, column: 54, scope: !5685)
!5702 = !DILocation(line: 270, column: 56, scope: !5685)
!5703 = !DILocation(line: 270, column: 25, scope: !5685)
!5704 = !DILocation(line: 271, column: 13, scope: !5705)
!5705 = distinct !DILexicalBlock(scope: !5685, file: !695, line: 271, column: 13)
!5706 = !DILocation(line: 271, column: 25, scope: !5705)
!5707 = !DILocation(line: 271, column: 13, scope: !5685)
!5708 = !DILocation(line: 272, column: 22, scope: !5709)
!5709 = distinct !DILexicalBlock(scope: !5705, file: !695, line: 271, column: 43)
!5710 = !DILocation(line: 273, column: 24, scope: !5711)
!5711 = distinct !DILexicalBlock(scope: !5709, file: !695, line: 273, column: 17)
!5712 = !DILocation(line: 273, column: 17, scope: !5709)
!5713 = !DILocation(line: 274, column: 17, scope: !5714)
!5714 = distinct !DILexicalBlock(scope: !5711, file: !695, line: 273, column: 36)
!5715 = !DILocation(line: 279, column: 1, scope: !5625)
!5716 = distinct !DISubprogram(name: "uart_error_handler", scope: !695, file: !695, line: 282, type: !5717, scopeLine: 283, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !694, retainedNodes: !5719)
!5717 = !DISubroutineType(types: !5718)
!5718 = !{null, !807}
!5719 = !{!5720, !5721, !5722, !5723}
!5720 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5716, file: !695, line: 282, type: !807)
!5721 = !DILocalVariable(name: "uartx", scope: !5716, file: !695, line: 284, type: !5514)
!5722 = !DILocalVariable(name: "callback", scope: !5716, file: !695, line: 285, type: !854)
!5723 = !DILocalVariable(name: "arg", scope: !5716, file: !695, line: 286, type: !65)
!5724 = !DILocation(line: 0, scope: !5716)
!5725 = !DILocation(line: 288, column: 13, scope: !5716)
!5726 = !DILocation(line: 290, column: 10, scope: !5727)
!5727 = distinct !DILexicalBlock(scope: !5716, file: !695, line: 290, column: 9)
!5728 = !DILocation(line: 290, column: 9, scope: !5716)
!5729 = !DILocation(line: 291, column: 9, scope: !5730)
!5730 = distinct !DILexicalBlock(scope: !5727, file: !695, line: 290, column: 36)
!5731 = !DILocation(line: 292, column: 9, scope: !5730)
!5732 = !DILocation(line: 293, column: 47, scope: !5730)
!5733 = !DILocation(line: 295, column: 22, scope: !5734)
!5734 = distinct !DILexicalBlock(scope: !5730, file: !695, line: 295, column: 13)
!5735 = !DILocation(line: 295, column: 13, scope: !5730)
!5736 = !DILocation(line: 296, column: 13, scope: !5737)
!5737 = distinct !DILexicalBlock(scope: !5734, file: !695, line: 295, column: 31)
!5738 = !DILocation(line: 294, column: 42, scope: !5730)
!5739 = !DILocation(line: 299, column: 9, scope: !5730)
!5740 = !DILocation(line: 300, column: 5, scope: !5730)
!5741 = !DILocation(line: 301, column: 1, scope: !5716)
!5742 = distinct !DISubprogram(name: "uart_backup_all_registers", scope: !695, file: !695, line: 315, type: !260, scopeLine: 316, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !694, retainedNodes: !5743)
!5743 = !{!5744, !5745, !5746, !5747, !5748}
!5744 = !DILocalVariable(name: "uart_port", scope: !5742, file: !695, line: 317, type: !807)
!5745 = !DILocalVariable(name: "uart_hwstatus", scope: !5742, file: !695, line: 318, type: !889)
!5746 = !DILocalVariable(name: "uart_flowcontrol", scope: !5742, file: !695, line: 319, type: !821)
!5747 = !DILocalVariable(name: "uart_callback", scope: !5742, file: !695, line: 320, type: !854)
!5748 = !DILocalVariable(name: "uart_callback_arg", scope: !5742, file: !695, line: 321, type: !65)
!5749 = !DILocation(line: 0, scope: !5742)
!5750 = !DILocation(line: 329, column: 5, scope: !5751)
!5751 = distinct !DILexicalBlock(scope: !5742, file: !695, line: 329, column: 5)
!5752 = !DILocation(line: 330, column: 13, scope: !5753)
!5753 = distinct !DILexicalBlock(scope: !5754, file: !695, line: 330, column: 13)
!5754 = distinct !DILexicalBlock(scope: !5755, file: !695, line: 329, column: 73)
!5755 = distinct !DILexicalBlock(scope: !5751, file: !695, line: 329, column: 5)
!5756 = !DILocation(line: 330, column: 40, scope: !5753)
!5757 = !DILocation(line: 330, column: 13, scope: !5754)
!5758 = !DILocation(line: 331, column: 29, scope: !5759)
!5759 = distinct !DILexicalBlock(scope: !5753, file: !695, line: 330, column: 72)
!5760 = !DILocation(line: 332, column: 32, scope: !5759)
!5761 = !DILocation(line: 333, column: 56, scope: !5759)
!5762 = !DILocation(line: 334, column: 60, scope: !5759)
!5763 = !DILocation(line: 345, column: 13, scope: !5759)
!5764 = !DILocation(line: 346, column: 40, scope: !5759)
!5765 = !DILocation(line: 347, column: 50, scope: !5759)
!5766 = !DILocation(line: 348, column: 45, scope: !5759)
!5767 = !DILocation(line: 349, column: 44, scope: !5759)
!5768 = !DILocation(line: 350, column: 77, scope: !5759)
!5769 = !DILocation(line: 350, column: 52, scope: !5759)
!5770 = !DILocation(line: 350, column: 13, scope: !5759)
!5771 = !DILocation(line: 350, column: 50, scope: !5759)
!5772 = !DILocation(line: 358, column: 9, scope: !5759)
!5773 = !DILocation(line: 329, column: 69, scope: !5755)
!5774 = !DILocation(line: 329, column: 44, scope: !5755)
!5775 = distinct !{!5775, !5750, !5776}
!5776 = !DILocation(line: 359, column: 5, scope: !5751)
!5777 = !DILocation(line: 360, column: 1, scope: !5742)
!5778 = distinct !DISubprogram(name: "hal_uart_deinit", scope: !695, file: !695, line: 544, type: !5779, scopeLine: 545, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !694, retainedNodes: !5782)
!5779 = !DISubroutineType(types: !5780)
!5780 = !{!5781, !807}
!5781 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_status_t", file: !720, line: 351, baseType: !741)
!5782 = !{!5783, !5784, !5785, !5786, !5787, !5788, !5789}
!5783 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5778, file: !695, line: 544, type: !807)
!5784 = !DILocalVariable(name: "uartx", scope: !5778, file: !695, line: 546, type: !5514)
!5785 = !DILocalVariable(name: "tx_dma_channel", scope: !5778, file: !695, line: 547, type: !5509)
!5786 = !DILocalVariable(name: "rx_dma_channel", scope: !5778, file: !695, line: 547, type: !5509)
!5787 = !DILocalVariable(name: "irq_status", scope: !5778, file: !695, line: 548, type: !61)
!5788 = !DILocalVariable(name: "status", scope: !5778, file: !695, line: 549, type: !5570)
!5789 = !DILocalVariable(name: "clock_status", scope: !5778, file: !695, line: 550, type: !5790)
!5790 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_clock_status_t", file: !780, line: 106, baseType: !779)
!5791 = !DILocation(line: 0, scope: !5778)
!5792 = !DILocation(line: 552, column: 10, scope: !5793)
!5793 = distinct !DILexicalBlock(scope: !5778, file: !695, line: 552, column: 9)
!5794 = !DILocation(line: 552, column: 9, scope: !5778)
!5795 = !DILocation(line: 556, column: 18, scope: !5778)
!5796 = !DILocation(line: 557, column: 9, scope: !5797)
!5797 = distinct !DILexicalBlock(scope: !5778, file: !695, line: 557, column: 9)
!5798 = !DILocation(line: 557, column: 36, scope: !5797)
!5799 = !DILocation(line: 557, column: 9, scope: !5778)
!5800 = !DILocation(line: 562, column: 13, scope: !5778)
!5801 = !DILocation(line: 565, column: 5, scope: !5778)
!5802 = !DILocation(line: 568, column: 9, scope: !5803)
!5803 = distinct !DILexicalBlock(scope: !5778, file: !695, line: 568, column: 9)
!5804 = !DILocation(line: 568, column: 36, scope: !5803)
!5805 = !DILocation(line: 568, column: 9, scope: !5778)
!5806 = !DILocation(line: 569, column: 26, scope: !5807)
!5807 = distinct !DILexicalBlock(scope: !5803, file: !695, line: 568, column: 70)
!5808 = !DILocation(line: 570, column: 26, scope: !5807)
!5809 = !DILocation(line: 572, column: 18, scope: !5807)
!5810 = !DILocation(line: 573, column: 20, scope: !5811)
!5811 = distinct !DILexicalBlock(scope: !5807, file: !695, line: 573, column: 13)
!5812 = !DILocation(line: 573, column: 13, scope: !5807)
!5813 = !DILocation(line: 574, column: 13, scope: !5814)
!5814 = distinct !DILexicalBlock(scope: !5811, file: !695, line: 573, column: 32)
!5815 = !DILocation(line: 575, column: 13, scope: !5814)
!5816 = !DILocation(line: 578, column: 18, scope: !5807)
!5817 = !DILocation(line: 579, column: 20, scope: !5818)
!5818 = distinct !DILexicalBlock(scope: !5807, file: !695, line: 579, column: 13)
!5819 = !DILocation(line: 579, column: 13, scope: !5807)
!5820 = !DILocation(line: 580, column: 13, scope: !5821)
!5821 = distinct !DILexicalBlock(scope: !5818, file: !695, line: 579, column: 32)
!5822 = !DILocation(line: 581, column: 13, scope: !5821)
!5823 = !DILocation(line: 584, column: 18, scope: !5807)
!5824 = !DILocation(line: 585, column: 20, scope: !5825)
!5825 = distinct !DILexicalBlock(scope: !5807, file: !695, line: 585, column: 13)
!5826 = !DILocation(line: 585, column: 13, scope: !5807)
!5827 = !DILocation(line: 586, column: 13, scope: !5828)
!5828 = distinct !DILexicalBlock(scope: !5825, file: !695, line: 585, column: 32)
!5829 = !DILocation(line: 587, column: 13, scope: !5828)
!5830 = !DILocation(line: 590, column: 18, scope: !5807)
!5831 = !DILocation(line: 591, column: 20, scope: !5832)
!5832 = distinct !DILexicalBlock(scope: !5807, file: !695, line: 591, column: 13)
!5833 = !DILocation(line: 591, column: 13, scope: !5807)
!5834 = !DILocation(line: 592, column: 13, scope: !5835)
!5835 = distinct !DILexicalBlock(scope: !5832, file: !695, line: 591, column: 32)
!5836 = !DILocation(line: 593, column: 13, scope: !5835)
!5837 = !DILocation(line: 596, column: 18, scope: !5807)
!5838 = !DILocation(line: 597, column: 20, scope: !5839)
!5839 = distinct !DILexicalBlock(scope: !5807, file: !695, line: 597, column: 13)
!5840 = !DILocation(line: 597, column: 13, scope: !5807)
!5841 = !DILocation(line: 598, column: 13, scope: !5842)
!5842 = distinct !DILexicalBlock(scope: !5839, file: !695, line: 597, column: 32)
!5843 = !DILocation(line: 599, column: 13, scope: !5842)
!5844 = !DILocation(line: 602, column: 18, scope: !5807)
!5845 = !DILocation(line: 603, column: 20, scope: !5846)
!5846 = distinct !DILexicalBlock(scope: !5807, file: !695, line: 603, column: 13)
!5847 = !DILocation(line: 603, column: 13, scope: !5807)
!5848 = !DILocation(line: 604, column: 13, scope: !5849)
!5849 = distinct !DILexicalBlock(scope: !5846, file: !695, line: 603, column: 32)
!5850 = !DILocation(line: 605, column: 13, scope: !5849)
!5851 = !DILocation(line: 608, column: 30, scope: !5807)
!5852 = !DILocation(line: 608, column: 9, scope: !5807)
!5853 = !DILocation(line: 609, column: 5, scope: !5807)
!5854 = !DILocation(line: 610, column: 5, scope: !5778)
!5855 = !DILocation(line: 611, column: 38, scope: !5778)
!5856 = !DILocation(line: 611, column: 20, scope: !5778)
!5857 = !DILocation(line: 612, column: 22, scope: !5858)
!5858 = distinct !DILexicalBlock(scope: !5778, file: !695, line: 612, column: 9)
!5859 = !DILocation(line: 612, column: 9, scope: !5778)
!5860 = !DILocation(line: 613, column: 9, scope: !5861)
!5861 = distinct !DILexicalBlock(scope: !5858, file: !695, line: 612, column: 46)
!5862 = !DILocation(line: 614, column: 9, scope: !5861)
!5863 = !DILocation(line: 618, column: 32, scope: !5778)
!5864 = !DILocation(line: 618, column: 37, scope: !5778)
!5865 = !DILocation(line: 619, column: 32, scope: !5778)
!5866 = !DILocation(line: 619, column: 36, scope: !5778)
!5867 = !DILocation(line: 622, column: 5, scope: !5778)
!5868 = !DILocation(line: 622, column: 53, scope: !5778)
!5869 = !DILocation(line: 623, column: 5, scope: !5778)
!5870 = !DILocation(line: 623, column: 42, scope: !5778)
!5871 = !DILocation(line: 635, column: 32, scope: !5778)
!5872 = !DILocation(line: 639, column: 5, scope: !5778)
!5873 = !DILocation(line: 640, column: 1, scope: !5778)
!5874 = distinct !DISubprogram(name: "uart_port_is_valid", scope: !695, file: !695, line: 120, type: !5875, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !694, retainedNodes: !5877)
!5875 = !DISubroutineType(types: !5876)
!5876 = !{!263, !807}
!5877 = !{!5878}
!5878 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5874, file: !695, line: 120, type: !807)
!5879 = !DILocation(line: 0, scope: !5874)
!5880 = !DILocation(line: 122, column: 23, scope: !5874)
!5881 = !DILocation(line: 122, column: 5, scope: !5874)
!5882 = distinct !DISubprogram(name: "uart_restore_all_registers", scope: !695, file: !695, line: 362, type: !260, scopeLine: 363, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !694, retainedNodes: !5883)
!5883 = !{!5884, !5885, !5886, !5887, !5888}
!5884 = !DILocalVariable(name: "delay", scope: !5882, file: !695, line: 364, type: !61)
!5885 = !DILocalVariable(name: "uart_port", scope: !5882, file: !695, line: 365, type: !807)
!5886 = !DILocalVariable(name: "uartx", scope: !5882, file: !695, line: 366, type: !5514)
!5887 = !DILocalVariable(name: "uart_hwstatus", scope: !5882, file: !695, line: 367, type: !889)
!5888 = !DILocalVariable(name: "sleep_lock_status", scope: !5882, file: !695, line: 368, type: !263)
!5889 = !DILocation(line: 369, column: 25, scope: !5882)
!5890 = !DILocation(line: 0, scope: !5882)
!5891 = !DILocation(line: 371, column: 5, scope: !5892)
!5892 = distinct !DILexicalBlock(scope: !5882, file: !695, line: 371, column: 5)
!5893 = !DILocation(line: 372, column: 25, scope: !5894)
!5894 = distinct !DILexicalBlock(scope: !5895, file: !695, line: 371, column: 73)
!5895 = distinct !DILexicalBlock(scope: !5892, file: !695, line: 371, column: 5)
!5896 = !DILocation(line: 373, column: 27, scope: !5897)
!5897 = distinct !DILexicalBlock(scope: !5894, file: !695, line: 373, column: 13)
!5898 = !DILocation(line: 373, column: 13, scope: !5894)
!5899 = !DILocation(line: 374, column: 40, scope: !5900)
!5900 = distinct !DILexicalBlock(scope: !5897, file: !695, line: 373, column: 59)
!5901 = !DILocation(line: 375, column: 39, scope: !5900)
!5902 = !DILocation(line: 375, column: 13, scope: !5900)
!5903 = !DILocation(line: 376, column: 9, scope: !5900)
!5904 = !DILocation(line: 380, column: 13, scope: !5905)
!5905 = distinct !DILexicalBlock(scope: !5894, file: !695, line: 380, column: 13)
!5906 = !DILocation(line: 380, column: 13, scope: !5894)
!5907 = !DILocation(line: 381, column: 21, scope: !5908)
!5908 = distinct !DILexicalBlock(scope: !5905, file: !695, line: 380, column: 80)
!5909 = !DILocation(line: 382, column: 80, scope: !5908)
!5910 = !DILocation(line: 382, column: 13, scope: !5908)
!5911 = !DILocation(line: 384, column: 64, scope: !5908)
!5912 = !DILocation(line: 384, column: 37, scope: !5908)
!5913 = !DILocation(line: 384, column: 74, scope: !5908)
!5914 = !DILocation(line: 385, column: 13, scope: !5908)
!5915 = !DILocation(line: 387, column: 87, scope: !5908)
!5916 = !DILocation(line: 388, column: 87, scope: !5908)
!5917 = !DILocation(line: 389, column: 87, scope: !5908)
!5918 = !DILocation(line: 386, column: 13, scope: !5908)
!5919 = !DILocation(line: 390, column: 9, scope: !5908)
!5920 = !DILocation(line: 391, column: 13, scope: !5921)
!5921 = distinct !DILexicalBlock(scope: !5922, file: !695, line: 390, column: 87)
!5922 = distinct !DILexicalBlock(scope: !5905, file: !695, line: 390, column: 20)
!5923 = !DILocation(line: 392, column: 9, scope: !5921)
!5924 = !DILocation(line: 394, column: 27, scope: !5925)
!5925 = distinct !DILexicalBlock(scope: !5894, file: !695, line: 394, column: 13)
!5926 = !DILocation(line: 394, column: 13, scope: !5894)
!5927 = !DILocation(line: 395, column: 42, scope: !5928)
!5928 = distinct !DILexicalBlock(scope: !5925, file: !695, line: 394, column: 61)
!5929 = !DILocation(line: 395, column: 13, scope: !5928)
!5930 = !DILocation(line: 396, column: 78, scope: !5928)
!5931 = !DILocation(line: 396, column: 111, scope: !5928)
!5932 = !DILocation(line: 396, column: 13, scope: !5928)
!5933 = !DILocation(line: 397, column: 9, scope: !5928)
!5934 = !DILocation(line: 399, column: 69, scope: !5894)
!5935 = !DILocation(line: 399, column: 29, scope: !5894)
!5936 = !DILocation(line: 400, column: 41, scope: !5937)
!5937 = distinct !DILexicalBlock(scope: !5894, file: !695, line: 400, column: 13)
!5938 = !DILocation(line: 400, column: 45, scope: !5937)
!5939 = !DILocation(line: 400, column: 13, scope: !5894)
!5940 = !DILocation(line: 402, column: 44, scope: !5941)
!5941 = distinct !DILexicalBlock(scope: !5937, file: !695, line: 400, column: 89)
!5942 = !DILocation(line: 402, column: 13, scope: !5941)
!5943 = !DILocation(line: 403, column: 9, scope: !5941)
!5944 = !DILocation(line: 371, column: 69, scope: !5895)
!5945 = !DILocation(line: 371, column: 44, scope: !5895)
!5946 = distinct !{!5946, !5891, !5947}
!5947 = !DILocation(line: 411, column: 5, scope: !5892)
!5948 = !DILocation(line: 412, column: 25, scope: !5882)
!5949 = !DILocation(line: 413, column: 1, scope: !5882)
!5950 = distinct !DISubprogram(name: "hal_uart_init", scope: !695, file: !695, line: 476, type: !5951, scopeLine: 477, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !694, retainedNodes: !5954)
!5951 = !DISubroutineType(types: !5952)
!5952 = !{!5781, !807, !5953}
!5953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !834, size: 32)
!5954 = !{!5955, !5956, !5957, !5958, !5959, !5960, !5961}
!5955 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5950, file: !695, line: 476, type: !807)
!5956 = !DILocalVariable(name: "uart_config", arg: 2, scope: !5950, file: !695, line: 476, type: !5953)
!5957 = !DILocalVariable(name: "uartx", scope: !5950, file: !695, line: 478, type: !5514)
!5958 = !DILocalVariable(name: "i", scope: !5950, file: !695, line: 479, type: !61)
!5959 = !DILocalVariable(name: "actual_baudrate", scope: !5950, file: !695, line: 479, type: !61)
!5960 = !DILocalVariable(name: "irq_status", scope: !5950, file: !695, line: 479, type: !61)
!5961 = !DILocalVariable(name: "status", scope: !5950, file: !695, line: 480, type: !5790)
!5962 = !DILocation(line: 0, scope: !5950)
!5963 = !DILocation(line: 482, column: 11, scope: !5964)
!5964 = distinct !DILexicalBlock(scope: !5950, file: !695, line: 482, column: 9)
!5965 = !DILocation(line: 482, column: 42, scope: !5964)
!5966 = !DILocation(line: 483, column: 11, scope: !5964)
!5967 = !DILocation(line: 482, column: 9, scope: !5950)
!5968 = !DILocation(line: 487, column: 18, scope: !5950)
!5969 = !DILocation(line: 488, column: 9, scope: !5970)
!5970 = distinct !DILexicalBlock(scope: !5950, file: !695, line: 488, column: 9)
!5971 = !DILocation(line: 488, column: 36, scope: !5970)
!5972 = !DILocation(line: 488, column: 9, scope: !5950)
!5973 = !DILocation(line: 489, column: 9, scope: !5974)
!5974 = distinct !DILexicalBlock(scope: !5970, file: !695, line: 488, column: 68)
!5975 = !DILocation(line: 490, column: 9, scope: !5974)
!5976 = !DILocation(line: 497, column: 9, scope: !5977)
!5977 = distinct !DILexicalBlock(scope: !5950, file: !695, line: 497, column: 9)
!5978 = !DILocation(line: 497, column: 9, scope: !5950)
!5979 = !DILocation(line: 498, column: 86, scope: !5980)
!5980 = distinct !DILexicalBlock(scope: !5977, file: !695, line: 497, column: 39)
!5981 = !DILocation(line: 498, column: 43, scope: !5980)
!5982 = !DILocation(line: 498, column: 9, scope: !5980)
!5983 = !DILocation(line: 498, column: 41, scope: !5980)
!5984 = !DILocation(line: 499, column: 5, scope: !5980)
!5985 = !DILocation(line: 502, column: 9, scope: !5986)
!5986 = distinct !DILexicalBlock(scope: !5950, file: !695, line: 502, column: 9)
!5987 = !DILocation(line: 502, column: 9, scope: !5950)
!5988 = !DILocation(line: 504, column: 13, scope: !5989)
!5989 = distinct !DILexicalBlock(scope: !5990, file: !695, line: 503, column: 44)
!5990 = distinct !DILexicalBlock(scope: !5991, file: !695, line: 503, column: 9)
!5991 = distinct !DILexicalBlock(scope: !5992, file: !695, line: 503, column: 9)
!5992 = distinct !DILexicalBlock(scope: !5986, file: !695, line: 502, column: 50)
!5993 = !DILocation(line: 504, column: 32, scope: !5989)
!5994 = !DILocation(line: 506, column: 13, scope: !5989)
!5995 = !DILocation(line: 506, column: 42, scope: !5989)
!5996 = !DILocation(line: 507, column: 13, scope: !5989)
!5997 = !DILocation(line: 507, column: 53, scope: !5989)
!5998 = !DILocation(line: 508, column: 13, scope: !5989)
!5999 = !DILocation(line: 508, column: 40, scope: !5989)
!6000 = !DILocation(line: 510, column: 32, scope: !5989)
!6001 = !DILocation(line: 510, column: 36, scope: !5989)
!6002 = !DILocation(line: 511, column: 32, scope: !5989)
!6003 = !DILocation(line: 511, column: 37, scope: !5989)
!6004 = !DILocation(line: 503, column: 40, scope: !5990)
!6005 = !DILocation(line: 503, column: 23, scope: !5990)
!6006 = !DILocation(line: 503, column: 9, scope: !5991)
!6007 = distinct !{!6007, !6006, !6008}
!6008 = !DILocation(line: 512, column: 9, scope: !5991)
!6009 = !DILocation(line: 513, column: 40, scope: !5992)
!6010 = !DILocation(line: 514, column: 5, scope: !5992)
!6011 = !DILocation(line: 516, column: 54, scope: !5950)
!6012 = !DILocation(line: 516, column: 30, scope: !5950)
!6013 = !DILocation(line: 516, column: 39, scope: !5950)
!6014 = !DILocation(line: 517, column: 57, scope: !5950)
!6015 = !DILocation(line: 517, column: 30, scope: !5950)
!6016 = !DILocation(line: 517, column: 42, scope: !5950)
!6017 = !DILocation(line: 518, column: 54, scope: !5950)
!6018 = !DILocation(line: 518, column: 30, scope: !5950)
!6019 = !DILocation(line: 518, column: 39, scope: !5950)
!6020 = !DILocation(line: 519, column: 52, scope: !5950)
!6021 = !DILocation(line: 519, column: 30, scope: !5950)
!6022 = !DILocation(line: 519, column: 37, scope: !5950)
!6023 = !DILocation(line: 521, column: 32, scope: !5950)
!6024 = !DILocation(line: 522, column: 5, scope: !5950)
!6025 = !DILocation(line: 524, column: 31, scope: !5950)
!6026 = !DILocation(line: 524, column: 14, scope: !5950)
!6027 = !DILocation(line: 525, column: 16, scope: !6028)
!6028 = distinct !DILexicalBlock(scope: !5950, file: !695, line: 525, column: 9)
!6029 = !DILocation(line: 525, column: 9, scope: !5950)
!6030 = !DILocation(line: 526, column: 9, scope: !6031)
!6031 = distinct !DILexicalBlock(scope: !6028, file: !695, line: 525, column: 40)
!6032 = !DILocation(line: 530, column: 13, scope: !5950)
!6033 = !DILocation(line: 532, column: 5, scope: !5950)
!6034 = !DILocation(line: 533, column: 56, scope: !5950)
!6035 = !DILocation(line: 533, column: 23, scope: !5950)
!6036 = !DILocation(line: 534, column: 5, scope: !5950)
!6037 = !DILocation(line: 535, column: 41, scope: !5950)
!6038 = !DILocation(line: 535, column: 67, scope: !5950)
!6039 = !DILocation(line: 535, column: 90, scope: !5950)
!6040 = !DILocation(line: 535, column: 5, scope: !5950)
!6041 = !DILocation(line: 536, column: 5, scope: !5950)
!6042 = !DILocation(line: 538, column: 5, scope: !5950)
!6043 = !DILocation(line: 541, column: 5, scope: !5950)
!6044 = !DILocation(line: 542, column: 1, scope: !5950)
!6045 = distinct !DISubprogram(name: "hal_uart_set_software_flowcontrol", scope: !695, file: !695, line: 1018, type: !6046, scopeLine: 1022, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !694, retainedNodes: !6048)
!6046 = !DISubroutineType(types: !6047)
!6047 = !{!5781, !807, !74, !74, !74}
!6048 = !{!6049, !6050, !6051, !6052, !6053}
!6049 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6045, file: !695, line: 1018, type: !807)
!6050 = !DILocalVariable(name: "xon", arg: 2, scope: !6045, file: !695, line: 1019, type: !74)
!6051 = !DILocalVariable(name: "xoff", arg: 3, scope: !6045, file: !695, line: 1020, type: !74)
!6052 = !DILocalVariable(name: "escape_character", arg: 4, scope: !6045, file: !695, line: 1021, type: !74)
!6053 = !DILocalVariable(name: "uartx", scope: !6045, file: !695, line: 1023, type: !5514)
!6054 = !DILocation(line: 0, scope: !6045)
!6055 = !DILocation(line: 1025, column: 10, scope: !6056)
!6056 = distinct !DILexicalBlock(scope: !6045, file: !695, line: 1025, column: 9)
!6057 = !DILocation(line: 1025, column: 9, scope: !6045)
!6058 = !DILocation(line: 1029, column: 9, scope: !6059)
!6059 = distinct !DILexicalBlock(scope: !6045, file: !695, line: 1029, column: 9)
!6060 = !DILocation(line: 1029, column: 36, scope: !6059)
!6061 = !DILocation(line: 1029, column: 9, scope: !6045)
!6062 = !DILocation(line: 1033, column: 13, scope: !6045)
!6063 = !DILocation(line: 1035, column: 5, scope: !6045)
!6064 = !DILocation(line: 1038, column: 5, scope: !6045)
!6065 = !DILocation(line: 1038, column: 42, scope: !6045)
!6066 = !DILocation(line: 1039, column: 45, scope: !6045)
!6067 = !DILocation(line: 1039, column: 49, scope: !6045)
!6068 = !DILocation(line: 1040, column: 45, scope: !6045)
!6069 = !DILocation(line: 1040, column: 50, scope: !6045)
!6070 = !DILocation(line: 1041, column: 45, scope: !6045)
!6071 = !DILocation(line: 1041, column: 62, scope: !6045)
!6072 = !DILocation(line: 1044, column: 5, scope: !6045)
!6073 = !DILocation(line: 1045, column: 1, scope: !6045)
!6074 = distinct !DISubprogram(name: "hal_uart_set_hardware_flowcontrol", scope: !695, file: !695, line: 995, type: !5779, scopeLine: 996, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !694, retainedNodes: !6075)
!6075 = !{!6076, !6077}
!6076 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6074, file: !695, line: 995, type: !807)
!6077 = !DILocalVariable(name: "uartx", scope: !6074, file: !695, line: 997, type: !5514)
!6078 = !DILocation(line: 0, scope: !6074)
!6079 = !DILocation(line: 999, column: 10, scope: !6080)
!6080 = distinct !DILexicalBlock(scope: !6074, file: !695, line: 999, column: 9)
!6081 = !DILocation(line: 999, column: 9, scope: !6074)
!6082 = !DILocation(line: 1003, column: 9, scope: !6083)
!6083 = distinct !DILexicalBlock(scope: !6074, file: !695, line: 1003, column: 9)
!6084 = !DILocation(line: 1003, column: 36, scope: !6083)
!6085 = !DILocation(line: 1003, column: 9, scope: !6074)
!6086 = !DILocation(line: 1007, column: 13, scope: !6074)
!6087 = !DILocation(line: 1009, column: 5, scope: !6074)
!6088 = !DILocation(line: 1012, column: 5, scope: !6074)
!6089 = !DILocation(line: 1012, column: 42, scope: !6074)
!6090 = !DILocation(line: 1015, column: 5, scope: !6074)
!6091 = !DILocation(line: 1016, column: 1, scope: !6074)
!6092 = distinct !DISubprogram(name: "hal_uart_set_dma", scope: !695, file: !695, line: 1071, type: !6093, scopeLine: 1072, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !694, retainedNodes: !6097)
!6093 = !DISubroutineType(types: !6094)
!6094 = !{!5781, !807, !6095}
!6095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6096, size: 32)
!6096 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !868)
!6097 = !{!6098, !6099, !6100, !6101, !6107, !6108, !6109}
!6098 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6092, file: !695, line: 1071, type: !807)
!6099 = !DILocalVariable(name: "dma_config", arg: 2, scope: !6092, file: !695, line: 1071, type: !6095)
!6100 = !DILocalVariable(name: "irq_status", scope: !6092, file: !695, line: 1073, type: !61)
!6101 = !DILocalVariable(name: "internal_dma_config", scope: !6092, file: !695, line: 1074, type: !6102)
!6102 = !DIDerivedType(tag: DW_TAG_typedef, name: "vdma_config_t", file: !705, line: 283, baseType: !6103)
!6103 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !705, line: 280, size: 64, elements: !6104)
!6104 = !{!6105, !6106}
!6105 = !DIDerivedType(tag: DW_TAG_member, name: "base_address", scope: !6103, file: !705, line: 281, baseType: !61, size: 32)
!6106 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6103, file: !705, line: 282, baseType: !61, size: 32, offset: 32)
!6107 = !DILocalVariable(name: "tx_dma_channel", scope: !6092, file: !695, line: 1075, type: !5509)
!6108 = !DILocalVariable(name: "rx_dma_channel", scope: !6092, file: !695, line: 1075, type: !5509)
!6109 = !DILocalVariable(name: "status", scope: !6092, file: !695, line: 1076, type: !5570)
!6110 = !DILocation(line: 0, scope: !6092)
!6111 = !DILocation(line: 1074, column: 5, scope: !6092)
!6112 = !DILocation(line: 1074, column: 19, scope: !6092)
!6113 = !DILocation(line: 1078, column: 10, scope: !6114)
!6114 = distinct !DILexicalBlock(scope: !6092, file: !695, line: 1078, column: 9)
!6115 = !DILocation(line: 1078, column: 9, scope: !6092)
!6116 = !DILocation(line: 1081, column: 22, scope: !6117)
!6117 = distinct !DILexicalBlock(scope: !6092, file: !695, line: 1081, column: 9)
!6118 = !DILocation(line: 1081, column: 40, scope: !6117)
!6119 = !DILocation(line: 1081, column: 49, scope: !6117)
!6120 = !DILocation(line: 1082, column: 22, scope: !6117)
!6121 = !DILocation(line: 1082, column: 43, scope: !6117)
!6122 = !DILocation(line: 1081, column: 9, scope: !6092)
!6123 = !DILocation(line: 1085, column: 22, scope: !6124)
!6124 = distinct !DILexicalBlock(scope: !6092, file: !695, line: 1085, column: 9)
!6125 = !DILocation(line: 1085, column: 45, scope: !6124)
!6126 = !DILocation(line: 1085, column: 76, scope: !6124)
!6127 = !DILocation(line: 1086, column: 22, scope: !6124)
!6128 = !DILocation(line: 1086, column: 48, scope: !6124)
!6129 = !DILocation(line: 1086, column: 79, scope: !6124)
!6130 = !DILocation(line: 1090, column: 22, scope: !6131)
!6131 = distinct !DILexicalBlock(scope: !6092, file: !695, line: 1090, column: 9)
!6132 = !DILocation(line: 1090, column: 48, scope: !6131)
!6133 = !DILocation(line: 1090, column: 79, scope: !6131)
!6134 = !DILocation(line: 1091, column: 22, scope: !6131)
!6135 = !DILocation(line: 1091, column: 51, scope: !6131)
!6136 = !DILocation(line: 1091, column: 82, scope: !6131)
!6137 = !DILocation(line: 1092, column: 22, scope: !6131)
!6138 = !DILocation(line: 1092, column: 47, scope: !6131)
!6139 = !DILocation(line: 1092, column: 78, scope: !6131)
!6140 = !DILocation(line: 1098, column: 9, scope: !6141)
!6141 = distinct !DILexicalBlock(scope: !6092, file: !695, line: 1098, column: 9)
!6142 = !DILocation(line: 1098, column: 36, scope: !6141)
!6143 = !DILocation(line: 1098, column: 9, scope: !6092)
!6144 = !DILocation(line: 1102, column: 22, scope: !6092)
!6145 = !DILocation(line: 1103, column: 22, scope: !6092)
!6146 = !DILocation(line: 1105, column: 14, scope: !6092)
!6147 = !DILocation(line: 1106, column: 16, scope: !6148)
!6148 = distinct !DILexicalBlock(scope: !6092, file: !695, line: 1106, column: 9)
!6149 = !DILocation(line: 1106, column: 9, scope: !6092)
!6150 = !DILocation(line: 1107, column: 9, scope: !6151)
!6151 = distinct !DILexicalBlock(scope: !6148, file: !695, line: 1106, column: 28)
!6152 = !DILocation(line: 1110, column: 62, scope: !6092)
!6153 = !DILocation(line: 1110, column: 40, scope: !6092)
!6154 = !DILocation(line: 1110, column: 25, scope: !6092)
!6155 = !DILocation(line: 1110, column: 38, scope: !6092)
!6156 = !DILocation(line: 1111, column: 44, scope: !6092)
!6157 = !DILocation(line: 1111, column: 25, scope: !6092)
!6158 = !DILocation(line: 1111, column: 30, scope: !6092)
!6159 = !DILocation(line: 1112, column: 14, scope: !6092)
!6160 = !DILocation(line: 1113, column: 16, scope: !6161)
!6161 = distinct !DILexicalBlock(scope: !6092, file: !695, line: 1113, column: 9)
!6162 = !DILocation(line: 1113, column: 9, scope: !6092)
!6163 = !DILocation(line: 1114, column: 9, scope: !6164)
!6164 = distinct !DILexicalBlock(scope: !6161, file: !695, line: 1113, column: 28)
!6165 = !DILocation(line: 1117, column: 61, scope: !6092)
!6166 = !DILocation(line: 1117, column: 14, scope: !6092)
!6167 = !DILocation(line: 1118, column: 16, scope: !6168)
!6168 = distinct !DILexicalBlock(scope: !6092, file: !695, line: 1118, column: 9)
!6169 = !DILocation(line: 1118, column: 9, scope: !6092)
!6170 = !DILocation(line: 1119, column: 9, scope: !6171)
!6171 = distinct !DILexicalBlock(scope: !6168, file: !695, line: 1118, column: 28)
!6172 = !DILocation(line: 1123, column: 14, scope: !6092)
!6173 = !DILocation(line: 1124, column: 16, scope: !6174)
!6174 = distinct !DILexicalBlock(scope: !6092, file: !695, line: 1124, column: 9)
!6175 = !DILocation(line: 1124, column: 9, scope: !6092)
!6176 = !DILocation(line: 1125, column: 9, scope: !6177)
!6177 = distinct !DILexicalBlock(scope: !6174, file: !695, line: 1124, column: 28)
!6178 = !DILocation(line: 1128, column: 62, scope: !6092)
!6179 = !DILocation(line: 1128, column: 40, scope: !6092)
!6180 = !DILocation(line: 1128, column: 38, scope: !6092)
!6181 = !DILocation(line: 1129, column: 44, scope: !6092)
!6182 = !DILocation(line: 1129, column: 30, scope: !6092)
!6183 = !DILocation(line: 1130, column: 14, scope: !6092)
!6184 = !DILocation(line: 1131, column: 16, scope: !6185)
!6185 = distinct !DILexicalBlock(scope: !6092, file: !695, line: 1131, column: 9)
!6186 = !DILocation(line: 1131, column: 9, scope: !6092)
!6187 = !DILocation(line: 1132, column: 9, scope: !6188)
!6188 = distinct !DILexicalBlock(scope: !6185, file: !695, line: 1131, column: 28)
!6189 = !DILocation(line: 1135, column: 61, scope: !6092)
!6190 = !DILocation(line: 1135, column: 14, scope: !6092)
!6191 = !DILocation(line: 1136, column: 16, scope: !6192)
!6192 = distinct !DILexicalBlock(scope: !6092, file: !695, line: 1136, column: 9)
!6193 = !DILocation(line: 1136, column: 9, scope: !6092)
!6194 = !DILocation(line: 1137, column: 9, scope: !6195)
!6195 = distinct !DILexicalBlock(scope: !6192, file: !695, line: 1136, column: 28)
!6196 = !DILocation(line: 1140, column: 64, scope: !6092)
!6197 = !DILocation(line: 1140, column: 14, scope: !6092)
!6198 = !DILocation(line: 1141, column: 16, scope: !6199)
!6199 = distinct !DILexicalBlock(scope: !6092, file: !695, line: 1141, column: 9)
!6200 = !DILocation(line: 1141, column: 9, scope: !6092)
!6201 = !DILocation(line: 1142, column: 9, scope: !6202)
!6202 = distinct !DILexicalBlock(scope: !6199, file: !695, line: 1141, column: 28)
!6203 = !DILocation(line: 1146, column: 18, scope: !6092)
!6204 = !DILocation(line: 1147, column: 66, scope: !6092)
!6205 = !DILocation(line: 1147, column: 34, scope: !6092)
!6206 = !DILocation(line: 1147, column: 52, scope: !6092)
!6207 = !DILocation(line: 1148, column: 71, scope: !6092)
!6208 = !DILocation(line: 1148, column: 34, scope: !6092)
!6209 = !DILocation(line: 1148, column: 57, scope: !6092)
!6210 = !DILocation(line: 1149, column: 74, scope: !6092)
!6211 = !DILocation(line: 1149, column: 34, scope: !6092)
!6212 = !DILocation(line: 1149, column: 60, scope: !6092)
!6213 = !DILocation(line: 1150, column: 73, scope: !6092)
!6214 = !DILocation(line: 1150, column: 34, scope: !6092)
!6215 = !DILocation(line: 1150, column: 59, scope: !6092)
!6216 = !DILocation(line: 1151, column: 69, scope: !6092)
!6217 = !DILocation(line: 1151, column: 34, scope: !6092)
!6218 = !DILocation(line: 1151, column: 55, scope: !6092)
!6219 = !DILocation(line: 1152, column: 74, scope: !6092)
!6220 = !DILocation(line: 1152, column: 34, scope: !6092)
!6221 = !DILocation(line: 1152, column: 60, scope: !6092)
!6222 = !DILocation(line: 1153, column: 77, scope: !6092)
!6223 = !DILocation(line: 1153, column: 34, scope: !6092)
!6224 = !DILocation(line: 1153, column: 63, scope: !6092)
!6225 = !DILocation(line: 1154, column: 5, scope: !6092)
!6226 = !DILocation(line: 1156, column: 5, scope: !6092)
!6227 = !DILocation(line: 1157, column: 1, scope: !6092)
!6228 = distinct !DISubprogram(name: "hal_uart_register_callback", scope: !695, file: !695, line: 891, type: !6229, scopeLine: 894, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !694, retainedNodes: !6231)
!6229 = !DISubroutineType(types: !6230)
!6230 = !{!5781, !807, !854, !65}
!6231 = !{!6232, !6233, !6234, !6235, !6236, !6237, !6238, !6239}
!6232 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6228, file: !695, line: 891, type: !807)
!6233 = !DILocalVariable(name: "user_callback", arg: 2, scope: !6228, file: !695, line: 892, type: !854)
!6234 = !DILocalVariable(name: "user_data", arg: 3, scope: !6228, file: !695, line: 893, type: !65)
!6235 = !DILocalVariable(name: "tx_dma_channel", scope: !6228, file: !695, line: 895, type: !5509)
!6236 = !DILocalVariable(name: "rx_dma_channel", scope: !6228, file: !695, line: 895, type: !5509)
!6237 = !DILocalVariable(name: "irq_status", scope: !6228, file: !695, line: 896, type: !61)
!6238 = !DILocalVariable(name: "status", scope: !6228, file: !695, line: 897, type: !5570)
!6239 = !DILocalVariable(name: "nvic_status", scope: !6228, file: !695, line: 898, type: !1275)
!6240 = !DILocation(line: 0, scope: !6228)
!6241 = !DILocation(line: 900, column: 11, scope: !6242)
!6242 = distinct !DILexicalBlock(scope: !6228, file: !695, line: 900, column: 9)
!6243 = !DILocation(line: 900, column: 42, scope: !6242)
!6244 = !DILocation(line: 905, column: 18, scope: !6228)
!6245 = !DILocation(line: 906, column: 9, scope: !6246)
!6246 = distinct !DILexicalBlock(scope: !6228, file: !695, line: 906, column: 9)
!6247 = !DILocation(line: 906, column: 36, scope: !6246)
!6248 = !DILocation(line: 906, column: 9, scope: !6228)
!6249 = !DILocation(line: 911, column: 22, scope: !6228)
!6250 = !DILocation(line: 912, column: 22, scope: !6228)
!6251 = !DILocation(line: 914, column: 32, scope: !6228)
!6252 = !DILocation(line: 914, column: 37, scope: !6228)
!6253 = !DILocation(line: 915, column: 32, scope: !6228)
!6254 = !DILocation(line: 915, column: 36, scope: !6228)
!6255 = !DILocation(line: 917, column: 91, scope: !6228)
!6256 = !DILocation(line: 917, column: 56, scope: !6228)
!6257 = !DILocation(line: 917, column: 5, scope: !6228)
!6258 = !DILocation(line: 918, column: 80, scope: !6228)
!6259 = !DILocation(line: 918, column: 14, scope: !6228)
!6260 = !DILocation(line: 919, column: 16, scope: !6261)
!6261 = distinct !DILexicalBlock(scope: !6228, file: !695, line: 919, column: 9)
!6262 = !DILocation(line: 919, column: 9, scope: !6228)
!6263 = !DILocation(line: 920, column: 9, scope: !6264)
!6264 = distinct !DILexicalBlock(scope: !6261, file: !695, line: 919, column: 28)
!6265 = !DILocation(line: 921, column: 9, scope: !6264)
!6266 = !DILocation(line: 924, column: 97, scope: !6228)
!6267 = !DILocation(line: 924, column: 56, scope: !6228)
!6268 = !DILocation(line: 924, column: 5, scope: !6228)
!6269 = !DILocation(line: 925, column: 80, scope: !6228)
!6270 = !DILocation(line: 925, column: 14, scope: !6228)
!6271 = !DILocation(line: 926, column: 16, scope: !6272)
!6272 = distinct !DILexicalBlock(scope: !6228, file: !695, line: 926, column: 9)
!6273 = !DILocation(line: 926, column: 9, scope: !6228)
!6274 = !DILocation(line: 927, column: 9, scope: !6275)
!6275 = distinct !DILexicalBlock(scope: !6272, file: !695, line: 926, column: 28)
!6276 = !DILocation(line: 928, column: 9, scope: !6275)
!6277 = !DILocation(line: 931, column: 49, scope: !6228)
!6278 = !DILocation(line: 931, column: 19, scope: !6228)
!6279 = !DILocation(line: 932, column: 21, scope: !6280)
!6280 = distinct !DILexicalBlock(scope: !6228, file: !695, line: 932, column: 9)
!6281 = !DILocation(line: 932, column: 9, scope: !6228)
!6282 = !DILocation(line: 933, column: 9, scope: !6283)
!6283 = distinct !DILexicalBlock(scope: !6280, file: !695, line: 932, column: 44)
!6284 = !DILocation(line: 934, column: 9, scope: !6283)
!6285 = !DILocation(line: 938, column: 5, scope: !6228)
!6286 = !DILocation(line: 940, column: 32, scope: !6228)
!6287 = !DILocation(line: 944, column: 5, scope: !6228)
!6288 = !DILocation(line: 945, column: 1, scope: !6228)
!6289 = distinct !DISubprogram(name: "uart_dma_callback_handler", scope: !695, file: !695, line: 303, type: !6290, scopeLine: 304, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !694, retainedNodes: !6293)
!6290 = !DISubroutineType(types: !6291)
!6291 = !{null, !6292, !65}
!6292 = !DIDerivedType(tag: DW_TAG_typedef, name: "vdma_event_t", file: !705, line: 225, baseType: !794)
!6293 = !{!6294, !6295, !6296}
!6294 = !DILocalVariable(name: "event", arg: 1, scope: !6289, file: !695, line: 303, type: !6292)
!6295 = !DILocalVariable(name: "user_data", arg: 2, scope: !6289, file: !695, line: 303, type: !65)
!6296 = !DILocalVariable(name: "callback_data", scope: !6289, file: !695, line: 305, type: !800)
!6297 = !DILocation(line: 0, scope: !6289)
!6298 = !DILocation(line: 307, column: 24, scope: !6299)
!6299 = distinct !DILexicalBlock(scope: !6289, file: !695, line: 307, column: 9)
!6300 = !DILocation(line: 0, scope: !6299)
!6301 = !DILocation(line: 307, column: 9, scope: !6289)
!6302 = !DILocation(line: 308, column: 9, scope: !6303)
!6303 = distinct !DILexicalBlock(scope: !6299, file: !695, line: 307, column: 39)
!6304 = !DILocation(line: 309, column: 5, scope: !6303)
!6305 = !DILocation(line: 310, column: 9, scope: !6306)
!6306 = distinct !DILexicalBlock(scope: !6299, file: !695, line: 309, column: 12)
!6307 = !DILocation(line: 312, column: 1, scope: !6289)
!6308 = distinct !DISubprogram(name: "uart_start_dma_transmission", scope: !695, file: !695, line: 852, type: !5717, scopeLine: 853, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !694, retainedNodes: !6309)
!6309 = !{!6310, !6311, !6312, !6313, !6314}
!6310 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6308, file: !695, line: 852, type: !807)
!6311 = !DILocalVariable(name: "uartx", scope: !6308, file: !695, line: 854, type: !5514)
!6312 = !DILocalVariable(name: "tx_dma_channel", scope: !6308, file: !695, line: 855, type: !5509)
!6313 = !DILocalVariable(name: "rx_dma_channel", scope: !6308, file: !695, line: 855, type: !5509)
!6314 = !DILocalVariable(name: "status", scope: !6308, file: !695, line: 856, type: !5570)
!6315 = !DILocation(line: 0, scope: !6308)
!6316 = !DILocation(line: 858, column: 13, scope: !6308)
!6317 = !DILocation(line: 859, column: 22, scope: !6308)
!6318 = !DILocation(line: 860, column: 22, scope: !6308)
!6319 = !DILocation(line: 863, column: 5, scope: !6308)
!6320 = !DILocation(line: 864, column: 5, scope: !6308)
!6321 = !DILocation(line: 864, column: 53, scope: !6308)
!6322 = !DILocation(line: 866, column: 5, scope: !6308)
!6323 = !DILocation(line: 867, column: 25, scope: !6308)
!6324 = !DILocation(line: 867, column: 5, scope: !6308)
!6325 = !DILocation(line: 868, column: 14, scope: !6308)
!6326 = !DILocation(line: 869, column: 16, scope: !6327)
!6327 = distinct !DILexicalBlock(scope: !6308, file: !695, line: 869, column: 9)
!6328 = !DILocation(line: 869, column: 9, scope: !6308)
!6329 = !DILocation(line: 870, column: 9, scope: !6330)
!6330 = distinct !DILexicalBlock(scope: !6327, file: !695, line: 869, column: 28)
!6331 = !DILocation(line: 873, column: 14, scope: !6308)
!6332 = !DILocation(line: 874, column: 16, scope: !6333)
!6333 = distinct !DILexicalBlock(scope: !6308, file: !695, line: 874, column: 9)
!6334 = !DILocation(line: 874, column: 9, scope: !6308)
!6335 = !DILocation(line: 875, column: 9, scope: !6336)
!6336 = distinct !DILexicalBlock(scope: !6333, file: !695, line: 874, column: 28)
!6337 = !DILocation(line: 878, column: 14, scope: !6308)
!6338 = !DILocation(line: 879, column: 16, scope: !6339)
!6339 = distinct !DILexicalBlock(scope: !6308, file: !695, line: 879, column: 9)
!6340 = !DILocation(line: 879, column: 9, scope: !6308)
!6341 = !DILocation(line: 880, column: 9, scope: !6342)
!6342 = distinct !DILexicalBlock(scope: !6339, file: !695, line: 879, column: 28)
!6343 = !DILocation(line: 883, column: 14, scope: !6308)
!6344 = !DILocation(line: 884, column: 16, scope: !6345)
!6345 = distinct !DILexicalBlock(scope: !6308, file: !695, line: 884, column: 9)
!6346 = !DILocation(line: 884, column: 9, scope: !6308)
!6347 = !DILocation(line: 885, column: 9, scope: !6348)
!6348 = distinct !DILexicalBlock(scope: !6345, file: !695, line: 884, column: 28)
!6349 = !DILocation(line: 888, column: 5, scope: !6308)
!6350 = !DILocation(line: 889, column: 1, scope: !6308)
!6351 = distinct !DISubprogram(name: "uart_config_is_valid", scope: !695, file: !695, line: 130, type: !6352, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !694, retainedNodes: !6356)
!6352 = !DISubroutineType(types: !6353)
!6353 = !{!263, !6354}
!6354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6355, size: 32)
!6355 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !834)
!6356 = !{!6357}
!6357 = !DILocalVariable(name: "config", arg: 1, scope: !6351, file: !695, line: 130, type: !6354)
!6358 = !DILocation(line: 0, scope: !6351)
!6359 = !DILocation(line: 132, column: 22, scope: !6351)
!6360 = !DILocation(line: 132, column: 31, scope: !6351)
!6361 = !DILocation(line: 132, column: 56, scope: !6351)
!6362 = !DILocation(line: 133, column: 22, scope: !6351)
!6363 = !DILocation(line: 133, column: 34, scope: !6351)
!6364 = !DILocation(line: 133, column: 61, scope: !6351)
!6365 = !DILocation(line: 134, column: 22, scope: !6351)
!6366 = !DILocation(line: 134, column: 31, scope: !6351)
!6367 = !DILocation(line: 134, column: 55, scope: !6351)
!6368 = !DILocation(line: 135, column: 22, scope: !6351)
!6369 = !DILocation(line: 135, column: 29, scope: !6351)
!6370 = !DILocation(line: 132, column: 5, scope: !6351)
!6371 = distinct !DISubprogram(name: "hal_uart_set_baudrate", scope: !695, file: !695, line: 416, type: !6372, scopeLine: 417, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !694, retainedNodes: !6374)
!6372 = !DISubroutineType(types: !6373)
!6373 = !{!5781, !807, !838}
!6374 = !{!6375, !6376, !6377, !6378, !6379}
!6375 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6371, file: !695, line: 416, type: !807)
!6376 = !DILocalVariable(name: "baudrate", arg: 2, scope: !6371, file: !695, line: 416, type: !838)
!6377 = !DILocalVariable(name: "actual_baudrate", scope: !6371, file: !695, line: 418, type: !61)
!6378 = !DILocalVariable(name: "irq_status", scope: !6371, file: !695, line: 418, type: !61)
!6379 = !DILocalVariable(name: "uartx", scope: !6371, file: !695, line: 419, type: !5514)
!6380 = !DILocation(line: 0, scope: !6371)
!6381 = !DILocation(line: 421, column: 11, scope: !6382)
!6382 = distinct !DILexicalBlock(scope: !6371, file: !695, line: 421, column: 9)
!6383 = !DILocation(line: 421, column: 42, scope: !6382)
!6384 = !DILocation(line: 422, column: 11, scope: !6382)
!6385 = !DILocation(line: 421, column: 9, scope: !6371)
!6386 = !DILocation(line: 426, column: 9, scope: !6387)
!6387 = distinct !DILexicalBlock(scope: !6371, file: !695, line: 426, column: 9)
!6388 = !DILocation(line: 426, column: 36, scope: !6387)
!6389 = !DILocation(line: 426, column: 9, scope: !6371)
!6390 = !DILocation(line: 430, column: 18, scope: !6371)
!6391 = !DILocation(line: 432, column: 30, scope: !6371)
!6392 = !DILocation(line: 432, column: 39, scope: !6371)
!6393 = !DILocation(line: 434, column: 5, scope: !6371)
!6394 = !DILocation(line: 436, column: 13, scope: !6371)
!6395 = !DILocation(line: 437, column: 23, scope: !6371)
!6396 = !DILocation(line: 439, column: 5, scope: !6371)
!6397 = !DILocation(line: 441, column: 5, scope: !6371)
!6398 = !DILocation(line: 442, column: 1, scope: !6371)
!6399 = distinct !DISubprogram(name: "uart_baudrate_is_valid", scope: !695, file: !695, line: 125, type: !6400, scopeLine: 126, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !694, retainedNodes: !6402)
!6400 = !DISubroutineType(types: !6401)
!6401 = !{!263, !838}
!6402 = !{!6403}
!6403 = !DILocalVariable(name: "baudrate", arg: 1, scope: !6399, file: !695, line: 125, type: !838)
!6404 = !DILocation(line: 0, scope: !6399)
!6405 = !DILocation(line: 127, column: 22, scope: !6399)
!6406 = !DILocation(line: 127, column: 5, scope: !6399)
!6407 = distinct !DISubprogram(name: "hal_uart_set_format", scope: !695, file: !695, line: 444, type: !6408, scopeLine: 446, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !694, retainedNodes: !6410)
!6408 = !DISubroutineType(types: !6409)
!6409 = !{!5781, !807, !6354}
!6410 = !{!6411, !6412, !6413, !6414}
!6411 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6407, file: !695, line: 444, type: !807)
!6412 = !DILocalVariable(name: "config", arg: 2, scope: !6407, file: !695, line: 445, type: !6354)
!6413 = !DILocalVariable(name: "irq_status", scope: !6407, file: !695, line: 447, type: !61)
!6414 = !DILocalVariable(name: "uartx", scope: !6407, file: !695, line: 448, type: !5514)
!6415 = !DILocation(line: 0, scope: !6407)
!6416 = !DILocation(line: 450, column: 11, scope: !6417)
!6417 = distinct !DILexicalBlock(scope: !6407, file: !695, line: 450, column: 9)
!6418 = !DILocation(line: 450, column: 42, scope: !6417)
!6419 = !DILocation(line: 451, column: 11, scope: !6417)
!6420 = !DILocation(line: 450, column: 9, scope: !6407)
!6421 = !DILocation(line: 455, column: 9, scope: !6422)
!6422 = distinct !DILexicalBlock(scope: !6407, file: !695, line: 455, column: 9)
!6423 = !DILocation(line: 455, column: 36, scope: !6422)
!6424 = !DILocation(line: 455, column: 9, scope: !6407)
!6425 = !DILocation(line: 459, column: 18, scope: !6407)
!6426 = !DILocation(line: 461, column: 49, scope: !6407)
!6427 = !DILocation(line: 461, column: 30, scope: !6407)
!6428 = !DILocation(line: 461, column: 39, scope: !6407)
!6429 = !DILocation(line: 462, column: 52, scope: !6407)
!6430 = !DILocation(line: 462, column: 30, scope: !6407)
!6431 = !DILocation(line: 462, column: 42, scope: !6407)
!6432 = !DILocation(line: 463, column: 49, scope: !6407)
!6433 = !DILocation(line: 463, column: 30, scope: !6407)
!6434 = !DILocation(line: 463, column: 39, scope: !6407)
!6435 = !DILocation(line: 464, column: 47, scope: !6407)
!6436 = !DILocation(line: 464, column: 30, scope: !6407)
!6437 = !DILocation(line: 464, column: 37, scope: !6407)
!6438 = !DILocation(line: 466, column: 5, scope: !6407)
!6439 = !DILocation(line: 468, column: 13, scope: !6407)
!6440 = !DILocation(line: 470, column: 46, scope: !6407)
!6441 = !DILocation(line: 470, column: 5, scope: !6407)
!6442 = !DILocation(line: 471, column: 36, scope: !6407)
!6443 = !DILocation(line: 471, column: 57, scope: !6407)
!6444 = !DILocation(line: 471, column: 75, scope: !6407)
!6445 = !DILocation(line: 471, column: 5, scope: !6407)
!6446 = !DILocation(line: 473, column: 5, scope: !6407)
!6447 = !DILocation(line: 474, column: 1, scope: !6407)
!6448 = distinct !DISubprogram(name: "hal_uart_put_char", scope: !695, file: !695, line: 642, type: !6449, scopeLine: 643, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !694, retainedNodes: !6451)
!6449 = !DISubroutineType(types: !6450)
!6450 = !{null, !807, !82}
!6451 = !{!6452, !6453, !6454}
!6452 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6448, file: !695, line: 642, type: !807)
!6453 = !DILocalVariable(name: "byte", arg: 2, scope: !6448, file: !695, line: 642, type: !82)
!6454 = !DILocalVariable(name: "uartx", scope: !6448, file: !695, line: 644, type: !5514)
!6455 = !DILocation(line: 0, scope: !6448)
!6456 = !DILocation(line: 646, column: 10, scope: !6457)
!6457 = distinct !DILexicalBlock(scope: !6448, file: !695, line: 646, column: 9)
!6458 = !DILocation(line: 646, column: 9, scope: !6448)
!6459 = !DILocation(line: 650, column: 9, scope: !6460)
!6460 = distinct !DILexicalBlock(scope: !6448, file: !695, line: 650, column: 9)
!6461 = !DILocation(line: 650, column: 36, scope: !6460)
!6462 = !DILocation(line: 650, column: 9, scope: !6448)
!6463 = !DILocation(line: 654, column: 13, scope: !6448)
!6464 = !DILocation(line: 655, column: 5, scope: !6448)
!6465 = !DILocation(line: 656, column: 1, scope: !6448)
!6466 = distinct !DISubprogram(name: "hal_uart_send_polling", scope: !695, file: !695, line: 658, type: !6467, scopeLine: 659, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !694, retainedNodes: !6470)
!6467 = !DISubroutineType(types: !6468)
!6468 = !{!61, !807, !6469, !61}
!6469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3147, size: 32)
!6470 = !{!6471, !6472, !6473, !6474}
!6471 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6466, file: !695, line: 658, type: !807)
!6472 = !DILocalVariable(name: "data", arg: 2, scope: !6466, file: !695, line: 658, type: !6469)
!6473 = !DILocalVariable(name: "size", arg: 3, scope: !6466, file: !695, line: 658, type: !61)
!6474 = !DILocalVariable(name: "i", scope: !6466, file: !695, line: 660, type: !61)
!6475 = !DILocation(line: 0, scope: !6466)
!6476 = !DILocation(line: 662, column: 11, scope: !6477)
!6477 = distinct !DILexicalBlock(scope: !6466, file: !695, line: 662, column: 9)
!6478 = !DILocation(line: 662, column: 42, scope: !6477)
!6479 = !DILocation(line: 666, column: 9, scope: !6480)
!6480 = distinct !DILexicalBlock(scope: !6466, file: !695, line: 666, column: 9)
!6481 = !DILocation(line: 666, column: 36, scope: !6480)
!6482 = !DILocation(line: 666, column: 9, scope: !6466)
!6483 = !DILocation(line: 671, column: 38, scope: !6484)
!6484 = distinct !DILexicalBlock(scope: !6485, file: !695, line: 670, column: 32)
!6485 = distinct !DILexicalBlock(scope: !6486, file: !695, line: 670, column: 5)
!6486 = distinct !DILexicalBlock(scope: !6466, file: !695, line: 670, column: 5)
!6487 = !DILocation(line: 671, column: 9, scope: !6484)
!6488 = !DILocation(line: 672, column: 13, scope: !6484)
!6489 = !DILocation(line: 670, column: 28, scope: !6485)
!6490 = !DILocation(line: 670, column: 19, scope: !6485)
!6491 = !DILocation(line: 670, column: 5, scope: !6486)
!6492 = distinct !{!6492, !6491, !6493}
!6493 = !DILocation(line: 673, column: 5, scope: !6486)
!6494 = !DILocation(line: 676, column: 1, scope: !6466)
!6495 = distinct !DISubprogram(name: "hal_uart_send_dma", scope: !695, file: !695, line: 678, type: !6467, scopeLine: 679, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !694, retainedNodes: !6496)
!6496 = !{!6497, !6498, !6499, !6500, !6501, !6502, !6503, !6504, !6505}
!6497 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6495, file: !695, line: 678, type: !807)
!6498 = !DILocalVariable(name: "data", arg: 2, scope: !6495, file: !695, line: 678, type: !6469)
!6499 = !DILocalVariable(name: "size", arg: 3, scope: !6495, file: !695, line: 678, type: !61)
!6500 = !DILocalVariable(name: "channel", scope: !6495, file: !695, line: 680, type: !5509)
!6501 = !DILocalVariable(name: "i", scope: !6495, file: !695, line: 681, type: !61)
!6502 = !DILocalVariable(name: "real_count", scope: !6495, file: !695, line: 681, type: !61)
!6503 = !DILocalVariable(name: "avail_space", scope: !6495, file: !695, line: 681, type: !61)
!6504 = !DILocalVariable(name: "status", scope: !6495, file: !695, line: 682, type: !5570)
!6505 = !DILocalVariable(name: "irq_status", scope: !6495, file: !695, line: 684, type: !61)
!6506 = !DILocation(line: 0, scope: !6495)
!6507 = !DILocation(line: 681, column: 5, scope: !6495)
!6508 = !DILocation(line: 687, column: 11, scope: !6509)
!6509 = distinct !DILexicalBlock(scope: !6495, file: !695, line: 687, column: 9)
!6510 = !DILocation(line: 687, column: 42, scope: !6509)
!6511 = !DILocation(line: 691, column: 9, scope: !6512)
!6512 = distinct !DILexicalBlock(scope: !6495, file: !695, line: 691, column: 9)
!6513 = !DILocation(line: 691, column: 36, scope: !6512)
!6514 = !DILocation(line: 691, column: 9, scope: !6495)
!6515 = !DILocation(line: 696, column: 18, scope: !6495)
!6516 = !DILocation(line: 697, column: 9, scope: !6517)
!6517 = distinct !DILexicalBlock(scope: !6495, file: !695, line: 697, column: 9)
!6518 = !DILocation(line: 697, column: 44, scope: !6517)
!6519 = !DILocation(line: 697, column: 9, scope: !6495)
!6520 = !DILocation(line: 698, column: 38, scope: !6521)
!6521 = distinct !DILexicalBlock(scope: !6517, file: !695, line: 697, column: 54)
!6522 = !DILocation(line: 698, column: 9, scope: !6521)
!6523 = !DILocation(line: 699, column: 44, scope: !6521)
!6524 = !DILocation(line: 700, column: 5, scope: !6521)
!6525 = !DILocation(line: 701, column: 5, scope: !6495)
!6526 = !DILocation(line: 704, column: 15, scope: !6495)
!6527 = !DILocation(line: 706, column: 14, scope: !6495)
!6528 = !DILocation(line: 707, column: 16, scope: !6529)
!6529 = distinct !DILexicalBlock(scope: !6495, file: !695, line: 707, column: 9)
!6530 = !DILocation(line: 707, column: 9, scope: !6495)
!6531 = !DILocation(line: 708, column: 9, scope: !6532)
!6532 = distinct !DILexicalBlock(scope: !6529, file: !695, line: 707, column: 28)
!6533 = !DILocation(line: 712, column: 9, scope: !6534)
!6534 = distinct !DILexicalBlock(scope: !6495, file: !695, line: 712, column: 9)
!6535 = !DILocation(line: 712, column: 21, scope: !6534)
!6536 = !DILocation(line: 717, column: 19, scope: !6537)
!6537 = distinct !DILexicalBlock(scope: !6538, file: !695, line: 717, column: 5)
!6538 = distinct !DILexicalBlock(scope: !6495, file: !695, line: 717, column: 5)
!6539 = !DILocation(line: 717, column: 5, scope: !6538)
!6540 = distinct !{!6540, !6539, !6541}
!6541 = !DILocation(line: 723, column: 5, scope: !6538)
!6542 = !DILocation(line: 718, column: 42, scope: !6543)
!6543 = distinct !DILexicalBlock(scope: !6537, file: !695, line: 717, column: 38)
!6544 = !DILocation(line: 718, column: 18, scope: !6543)
!6545 = !DILocation(line: 719, column: 20, scope: !6546)
!6546 = distinct !DILexicalBlock(scope: !6543, file: !695, line: 719, column: 13)
!6547 = !DILocation(line: 717, column: 34, scope: !6537)
!6548 = !DILocation(line: 719, column: 13, scope: !6543)
!6549 = !DILocation(line: 720, column: 13, scope: !6550)
!6550 = distinct !DILexicalBlock(scope: !6546, file: !695, line: 719, column: 32)
!6551 = !DILocation(line: 728, column: 23, scope: !6552)
!6552 = distinct !DILexicalBlock(scope: !6495, file: !695, line: 728, column: 9)
!6553 = !DILocation(line: 728, column: 20, scope: !6552)
!6554 = !DILocation(line: 728, column: 9, scope: !6495)
!6555 = !DILocation(line: 729, column: 18, scope: !6556)
!6556 = distinct !DILexicalBlock(scope: !6552, file: !695, line: 728, column: 36)
!6557 = !DILocation(line: 730, column: 20, scope: !6558)
!6558 = distinct !DILexicalBlock(scope: !6556, file: !695, line: 730, column: 13)
!6559 = !DILocation(line: 730, column: 13, scope: !6556)
!6560 = !DILocation(line: 731, column: 13, scope: !6561)
!6561 = distinct !DILexicalBlock(scope: !6558, file: !695, line: 730, column: 32)
!6562 = !DILocation(line: 737, column: 1, scope: !6495)
!6563 = distinct !DISubprogram(name: "hal_uart_get_char", scope: !695, file: !695, line: 739, type: !6564, scopeLine: 740, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !694, retainedNodes: !6566)
!6564 = !DISubroutineType(types: !6565)
!6565 = !{!82, !807}
!6566 = !{!6567, !6568, !6569}
!6567 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6563, file: !695, line: 739, type: !807)
!6568 = !DILocalVariable(name: "data", scope: !6563, file: !695, line: 741, type: !82)
!6569 = !DILocalVariable(name: "uartx", scope: !6563, file: !695, line: 742, type: !5514)
!6570 = !DILocation(line: 0, scope: !6563)
!6571 = !DILocation(line: 744, column: 10, scope: !6572)
!6572 = distinct !DILexicalBlock(scope: !6563, file: !695, line: 744, column: 9)
!6573 = !DILocation(line: 744, column: 9, scope: !6563)
!6574 = !DILocation(line: 748, column: 9, scope: !6575)
!6575 = distinct !DILexicalBlock(scope: !6563, file: !695, line: 748, column: 9)
!6576 = !DILocation(line: 748, column: 36, scope: !6575)
!6577 = !DILocation(line: 748, column: 9, scope: !6563)
!6578 = !DILocation(line: 752, column: 13, scope: !6563)
!6579 = !DILocation(line: 754, column: 12, scope: !6563)
!6580 = !DILocation(line: 756, column: 5, scope: !6563)
!6581 = !DILocation(line: 757, column: 1, scope: !6563)
!6582 = distinct !DISubprogram(name: "hal_uart_get_char_unblocking", scope: !695, file: !695, line: 759, type: !6583, scopeLine: 760, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !694, retainedNodes: !6585)
!6583 = !DISubroutineType(types: !6584)
!6584 = !{!61, !807}
!6585 = !{!6586, !6587, !6588}
!6586 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6582, file: !695, line: 759, type: !807)
!6587 = !DILocalVariable(name: "data", scope: !6582, file: !695, line: 761, type: !61)
!6588 = !DILocalVariable(name: "uartx", scope: !6582, file: !695, line: 762, type: !5514)
!6589 = !DILocation(line: 0, scope: !6582)
!6590 = !DILocation(line: 764, column: 10, scope: !6591)
!6591 = distinct !DILexicalBlock(scope: !6582, file: !695, line: 764, column: 9)
!6592 = !DILocation(line: 764, column: 9, scope: !6582)
!6593 = !DILocation(line: 768, column: 9, scope: !6594)
!6594 = distinct !DILexicalBlock(scope: !6582, file: !695, line: 768, column: 9)
!6595 = !DILocation(line: 768, column: 36, scope: !6594)
!6596 = !DILocation(line: 768, column: 9, scope: !6582)
!6597 = !DILocation(line: 772, column: 13, scope: !6582)
!6598 = !DILocation(line: 774, column: 12, scope: !6582)
!6599 = !DILocation(line: 776, column: 5, scope: !6582)
!6600 = !DILocation(line: 777, column: 1, scope: !6582)
!6601 = distinct !DISubprogram(name: "hal_uart_receive_polling", scope: !695, file: !695, line: 779, type: !6602, scopeLine: 780, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !694, retainedNodes: !6604)
!6602 = !DISubroutineType(types: !6603)
!6603 = !{!61, !807, !872, !61}
!6604 = !{!6605, !6606, !6607, !6608, !6609}
!6605 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6601, file: !695, line: 779, type: !807)
!6606 = !DILocalVariable(name: "buffer", arg: 2, scope: !6601, file: !695, line: 779, type: !872)
!6607 = !DILocalVariable(name: "size", arg: 3, scope: !6601, file: !695, line: 779, type: !61)
!6608 = !DILocalVariable(name: "i", scope: !6601, file: !695, line: 781, type: !61)
!6609 = !DILocalVariable(name: "pbuf", scope: !6601, file: !695, line: 782, type: !872)
!6610 = !DILocation(line: 0, scope: !6601)
!6611 = !DILocation(line: 784, column: 11, scope: !6612)
!6612 = distinct !DILexicalBlock(scope: !6601, file: !695, line: 784, column: 9)
!6613 = !DILocation(line: 784, column: 42, scope: !6612)
!6614 = !DILocation(line: 789, column: 9, scope: !6615)
!6615 = distinct !DILexicalBlock(scope: !6601, file: !695, line: 789, column: 9)
!6616 = !DILocation(line: 789, column: 36, scope: !6615)
!6617 = !DILocation(line: 789, column: 9, scope: !6601)
!6618 = !DILocation(line: 794, column: 19, scope: !6619)
!6619 = distinct !DILexicalBlock(scope: !6620, file: !695, line: 793, column: 32)
!6620 = distinct !DILexicalBlock(scope: !6621, file: !695, line: 793, column: 5)
!6621 = distinct !DILexicalBlock(scope: !6601, file: !695, line: 793, column: 5)
!6622 = !DILocation(line: 794, column: 9, scope: !6619)
!6623 = !DILocation(line: 794, column: 17, scope: !6619)
!6624 = !DILocation(line: 793, column: 28, scope: !6620)
!6625 = !DILocation(line: 793, column: 19, scope: !6620)
!6626 = !DILocation(line: 793, column: 5, scope: !6621)
!6627 = distinct !{!6627, !6626, !6628}
!6628 = !DILocation(line: 795, column: 5, scope: !6621)
!6629 = !DILocation(line: 798, column: 1, scope: !6601)
!6630 = distinct !DISubprogram(name: "hal_uart_receive_dma", scope: !695, file: !695, line: 800, type: !6602, scopeLine: 801, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !694, retainedNodes: !6631)
!6631 = !{!6632, !6633, !6634, !6635, !6636, !6637, !6638, !6639}
!6632 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6630, file: !695, line: 800, type: !807)
!6633 = !DILocalVariable(name: "buffer", arg: 2, scope: !6630, file: !695, line: 800, type: !872)
!6634 = !DILocalVariable(name: "size", arg: 3, scope: !6630, file: !695, line: 800, type: !61)
!6635 = !DILocalVariable(name: "channel", scope: !6630, file: !695, line: 802, type: !5509)
!6636 = !DILocalVariable(name: "receive_count", scope: !6630, file: !695, line: 803, type: !61)
!6637 = !DILocalVariable(name: "avail_count", scope: !6630, file: !695, line: 803, type: !61)
!6638 = !DILocalVariable(name: "index", scope: !6630, file: !695, line: 804, type: !61)
!6639 = !DILocalVariable(name: "status", scope: !6630, file: !695, line: 805, type: !5570)
!6640 = !DILocation(line: 0, scope: !6630)
!6641 = !DILocation(line: 803, column: 5, scope: !6630)
!6642 = !DILocation(line: 807, column: 11, scope: !6643)
!6643 = distinct !DILexicalBlock(scope: !6630, file: !695, line: 807, column: 9)
!6644 = !DILocation(line: 807, column: 42, scope: !6643)
!6645 = !DILocation(line: 813, column: 9, scope: !6646)
!6646 = distinct !DILexicalBlock(scope: !6630, file: !695, line: 813, column: 9)
!6647 = !DILocation(line: 813, column: 36, scope: !6646)
!6648 = !DILocation(line: 813, column: 9, scope: !6630)
!6649 = !DILocation(line: 817, column: 15, scope: !6630)
!6650 = !DILocation(line: 819, column: 14, scope: !6630)
!6651 = !DILocation(line: 820, column: 16, scope: !6652)
!6652 = distinct !DILexicalBlock(scope: !6630, file: !695, line: 820, column: 9)
!6653 = !DILocation(line: 820, column: 9, scope: !6630)
!6654 = !DILocation(line: 821, column: 9, scope: !6655)
!6655 = distinct !DILexicalBlock(scope: !6652, file: !695, line: 820, column: 28)
!6656 = !DILocation(line: 825, column: 9, scope: !6657)
!6657 = distinct !DILexicalBlock(scope: !6630, file: !695, line: 825, column: 9)
!6658 = !DILocation(line: 825, column: 21, scope: !6657)
!6659 = !DILocation(line: 830, column: 27, scope: !6660)
!6660 = distinct !DILexicalBlock(scope: !6661, file: !695, line: 830, column: 5)
!6661 = distinct !DILexicalBlock(scope: !6630, file: !695, line: 830, column: 5)
!6662 = !DILocation(line: 830, column: 5, scope: !6661)
!6663 = distinct !{!6663, !6662, !6664}
!6664 = !DILocation(line: 836, column: 5, scope: !6661)
!6665 = !DILocation(line: 831, column: 42, scope: !6666)
!6666 = distinct !DILexicalBlock(scope: !6660, file: !695, line: 830, column: 53)
!6667 = !DILocation(line: 831, column: 18, scope: !6666)
!6668 = !DILocation(line: 832, column: 20, scope: !6669)
!6669 = distinct !DILexicalBlock(scope: !6666, file: !695, line: 832, column: 13)
!6670 = !DILocation(line: 830, column: 49, scope: !6660)
!6671 = !DILocation(line: 832, column: 13, scope: !6666)
!6672 = !DILocation(line: 833, column: 13, scope: !6673)
!6673 = distinct !DILexicalBlock(scope: !6669, file: !695, line: 832, column: 32)
!6674 = !DILocation(line: 841, column: 26, scope: !6675)
!6675 = distinct !DILexicalBlock(scope: !6630, file: !695, line: 841, column: 9)
!6676 = !DILocation(line: 841, column: 23, scope: !6675)
!6677 = !DILocation(line: 841, column: 9, scope: !6630)
!6678 = !DILocation(line: 842, column: 18, scope: !6679)
!6679 = distinct !DILexicalBlock(scope: !6675, file: !695, line: 841, column: 39)
!6680 = !DILocation(line: 843, column: 20, scope: !6681)
!6681 = distinct !DILexicalBlock(scope: !6679, file: !695, line: 843, column: 13)
!6682 = !DILocation(line: 843, column: 13, scope: !6679)
!6683 = !DILocation(line: 844, column: 13, scope: !6684)
!6684 = distinct !DILexicalBlock(scope: !6681, file: !695, line: 843, column: 32)
!6685 = !DILocation(line: 850, column: 1, scope: !6630)
!6686 = distinct !DISubprogram(name: "hal_uart_get_available_send_space", scope: !695, file: !695, line: 947, type: !6583, scopeLine: 948, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !694, retainedNodes: !6687)
!6687 = !{!6688, !6689, !6690, !6691}
!6688 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6686, file: !695, line: 947, type: !807)
!6689 = !DILocalVariable(name: "channel", scope: !6686, file: !695, line: 949, type: !5509)
!6690 = !DILocalVariable(name: "roomleft", scope: !6686, file: !695, line: 950, type: !61)
!6691 = !DILocalVariable(name: "status", scope: !6686, file: !695, line: 951, type: !5570)
!6692 = !DILocation(line: 0, scope: !6686)
!6693 = !DILocation(line: 950, column: 5, scope: !6686)
!6694 = !DILocation(line: 953, column: 10, scope: !6695)
!6695 = distinct !DILexicalBlock(scope: !6686, file: !695, line: 953, column: 9)
!6696 = !DILocation(line: 953, column: 9, scope: !6686)
!6697 = !DILocation(line: 957, column: 9, scope: !6698)
!6698 = distinct !DILexicalBlock(scope: !6686, file: !695, line: 957, column: 9)
!6699 = !DILocation(line: 957, column: 36, scope: !6698)
!6700 = !DILocation(line: 957, column: 9, scope: !6686)
!6701 = !DILocation(line: 961, column: 15, scope: !6686)
!6702 = !DILocation(line: 962, column: 14, scope: !6686)
!6703 = !DILocation(line: 963, column: 16, scope: !6704)
!6704 = distinct !DILexicalBlock(scope: !6686, file: !695, line: 963, column: 9)
!6705 = !DILocation(line: 963, column: 9, scope: !6686)
!6706 = !DILocation(line: 964, column: 9, scope: !6707)
!6707 = distinct !DILexicalBlock(scope: !6704, file: !695, line: 963, column: 28)
!6708 = !DILocation(line: 968, column: 12, scope: !6686)
!6709 = !DILocation(line: 968, column: 5, scope: !6686)
!6710 = !DILocation(line: 969, column: 1, scope: !6686)
!6711 = distinct !DISubprogram(name: "hal_uart_get_available_receive_bytes", scope: !695, file: !695, line: 971, type: !6583, scopeLine: 972, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !694, retainedNodes: !6712)
!6712 = !{!6713, !6714, !6715, !6716}
!6713 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6711, file: !695, line: 971, type: !807)
!6714 = !DILocalVariable(name: "channel", scope: !6711, file: !695, line: 973, type: !5509)
!6715 = !DILocalVariable(name: "avail", scope: !6711, file: !695, line: 974, type: !61)
!6716 = !DILocalVariable(name: "status", scope: !6711, file: !695, line: 975, type: !5570)
!6717 = !DILocation(line: 0, scope: !6711)
!6718 = !DILocation(line: 974, column: 5, scope: !6711)
!6719 = !DILocation(line: 977, column: 10, scope: !6720)
!6720 = distinct !DILexicalBlock(scope: !6711, file: !695, line: 977, column: 9)
!6721 = !DILocation(line: 977, column: 9, scope: !6711)
!6722 = !DILocation(line: 981, column: 9, scope: !6723)
!6723 = distinct !DILexicalBlock(scope: !6711, file: !695, line: 981, column: 9)
!6724 = !DILocation(line: 981, column: 36, scope: !6723)
!6725 = !DILocation(line: 981, column: 9, scope: !6711)
!6726 = !DILocation(line: 985, column: 15, scope: !6711)
!6727 = !DILocation(line: 986, column: 14, scope: !6711)
!6728 = !DILocation(line: 987, column: 16, scope: !6729)
!6729 = distinct !DILexicalBlock(scope: !6711, file: !695, line: 987, column: 9)
!6730 = !DILocation(line: 987, column: 9, scope: !6711)
!6731 = !DILocation(line: 988, column: 9, scope: !6732)
!6732 = distinct !DILexicalBlock(scope: !6729, file: !695, line: 987, column: 28)
!6733 = !DILocation(line: 992, column: 12, scope: !6711)
!6734 = !DILocation(line: 992, column: 5, scope: !6711)
!6735 = !DILocation(line: 993, column: 1, scope: !6711)
!6736 = distinct !DISubprogram(name: "hal_uart_disable_flowcontrol", scope: !695, file: !695, line: 1047, type: !5779, scopeLine: 1048, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !694, retainedNodes: !6737)
!6737 = !{!6738, !6739}
!6738 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6736, file: !695, line: 1047, type: !807)
!6739 = !DILocalVariable(name: "uartx", scope: !6736, file: !695, line: 1049, type: !5514)
!6740 = !DILocation(line: 0, scope: !6736)
!6741 = !DILocation(line: 1051, column: 10, scope: !6742)
!6742 = distinct !DILexicalBlock(scope: !6736, file: !695, line: 1051, column: 9)
!6743 = !DILocation(line: 1051, column: 9, scope: !6736)
!6744 = !DILocation(line: 1055, column: 9, scope: !6745)
!6745 = distinct !DILexicalBlock(scope: !6736, file: !695, line: 1055, column: 9)
!6746 = !DILocation(line: 1055, column: 36, scope: !6745)
!6747 = !DILocation(line: 1055, column: 9, scope: !6736)
!6748 = !DILocation(line: 1059, column: 13, scope: !6736)
!6749 = !DILocation(line: 1061, column: 5, scope: !6736)
!6750 = !DILocation(line: 1064, column: 5, scope: !6736)
!6751 = !DILocation(line: 1064, column: 42, scope: !6736)
!6752 = !DILocation(line: 1067, column: 5, scope: !6736)
!6753 = !DILocation(line: 1068, column: 1, scope: !6736)
!6754 = distinct !DISubprogram(name: "uart_set_baudrate", scope: !3204, file: !3204, line: 52, type: !6755, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3203, retainedNodes: !6812)
!6755 = !DISubroutineType(types: !6756)
!6756 = !{null, !6757, !61}
!6757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6758, size: 32)
!6758 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_REGISTER_T", file: !154, line: 588, baseType: !6759)
!6759 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !154, line: 542, size: 800, elements: !6760)
!6760 = !{!6761, !6767, !6772, !6778, !6779, !6784, !6789, !6790, !6795, !6796, !6797, !6798, !6799, !6800, !6801, !6802, !6803, !6804, !6805, !6806, !6807, !6808, !6809, !6810, !6811}
!6761 = !DIDerivedType(tag: DW_TAG_member, name: "RBR_THR_DLL", scope: !6759, file: !154, line: 547, baseType: !6762, size: 32)
!6762 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6759, file: !154, line: 543, size: 32, elements: !6763)
!6763 = !{!6764, !6765, !6766}
!6764 = !DIDerivedType(tag: DW_TAG_member, name: "RBR", scope: !6762, file: !154, line: 544, baseType: !241, size: 32)
!6765 = !DIDerivedType(tag: DW_TAG_member, name: "THR", scope: !6762, file: !154, line: 545, baseType: !237, size: 32)
!6766 = !DIDerivedType(tag: DW_TAG_member, name: "DLL", scope: !6762, file: !154, line: 546, baseType: !237, size: 32)
!6767 = !DIDerivedType(tag: DW_TAG_member, name: "IER_DLM", scope: !6759, file: !154, line: 551, baseType: !6768, size: 32, offset: 32)
!6768 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6759, file: !154, line: 548, size: 32, elements: !6769)
!6769 = !{!6770, !6771}
!6770 = !DIDerivedType(tag: DW_TAG_member, name: "IER", scope: !6768, file: !154, line: 549, baseType: !237, size: 32)
!6771 = !DIDerivedType(tag: DW_TAG_member, name: "DLM", scope: !6768, file: !154, line: 550, baseType: !237, size: 32)
!6772 = !DIDerivedType(tag: DW_TAG_member, name: "IIR_FCR_EFR", scope: !6759, file: !154, line: 556, baseType: !6773, size: 32, offset: 64)
!6773 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6759, file: !154, line: 552, size: 32, elements: !6774)
!6774 = !{!6775, !6776, !6777}
!6775 = !DIDerivedType(tag: DW_TAG_member, name: "IIR", scope: !6773, file: !154, line: 553, baseType: !241, size: 32)
!6776 = !DIDerivedType(tag: DW_TAG_member, name: "FCR", scope: !6773, file: !154, line: 554, baseType: !237, size: 32)
!6777 = !DIDerivedType(tag: DW_TAG_member, name: "EFR", scope: !6773, file: !154, line: 555, baseType: !237, size: 32)
!6778 = !DIDerivedType(tag: DW_TAG_member, name: "LCR", scope: !6759, file: !154, line: 557, baseType: !237, size: 32, offset: 96)
!6779 = !DIDerivedType(tag: DW_TAG_member, name: "MCR_XON1", scope: !6759, file: !154, line: 561, baseType: !6780, size: 32, offset: 128)
!6780 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6759, file: !154, line: 558, size: 32, elements: !6781)
!6781 = !{!6782, !6783}
!6782 = !DIDerivedType(tag: DW_TAG_member, name: "MCR", scope: !6780, file: !154, line: 559, baseType: !237, size: 32)
!6783 = !DIDerivedType(tag: DW_TAG_member, name: "XON1", scope: !6780, file: !154, line: 560, baseType: !237, size: 32)
!6784 = !DIDerivedType(tag: DW_TAG_member, name: "LSR_XON2", scope: !6759, file: !154, line: 565, baseType: !6785, size: 32, offset: 160)
!6785 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6759, file: !154, line: 562, size: 32, elements: !6786)
!6786 = !{!6787, !6788}
!6787 = !DIDerivedType(tag: DW_TAG_member, name: "LSR", scope: !6785, file: !154, line: 563, baseType: !241, size: 32)
!6788 = !DIDerivedType(tag: DW_TAG_member, name: "XON2", scope: !6785, file: !154, line: 564, baseType: !237, size: 32)
!6789 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF1", scope: !6759, file: !154, line: 566, baseType: !237, size: 32, offset: 192)
!6790 = !DIDerivedType(tag: DW_TAG_member, name: "SCR_XOFF2", scope: !6759, file: !154, line: 570, baseType: !6791, size: 32, offset: 224)
!6791 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6759, file: !154, line: 567, size: 32, elements: !6792)
!6792 = !{!6793, !6794}
!6793 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !6791, file: !154, line: 568, baseType: !237, size: 32)
!6794 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF2", scope: !6791, file: !154, line: 569, baseType: !237, size: 32)
!6795 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_EN", scope: !6759, file: !154, line: 571, baseType: !237, size: 32, offset: 256)
!6796 = !DIDerivedType(tag: DW_TAG_member, name: "HIGHSPEED", scope: !6759, file: !154, line: 572, baseType: !237, size: 32, offset: 288)
!6797 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_COUNT", scope: !6759, file: !154, line: 573, baseType: !237, size: 32, offset: 320)
!6798 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_POINT", scope: !6759, file: !154, line: 574, baseType: !237, size: 32, offset: 352)
!6799 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_REG", scope: !6759, file: !154, line: 575, baseType: !241, size: 32, offset: 384)
!6800 = !DIDerivedType(tag: DW_TAG_member, name: "RATEFIX_AD", scope: !6759, file: !154, line: 576, baseType: !237, size: 32, offset: 416)
!6801 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUDSAMPLE", scope: !6759, file: !154, line: 577, baseType: !237, size: 32, offset: 448)
!6802 = !DIDerivedType(tag: DW_TAG_member, name: "GUARD", scope: !6759, file: !154, line: 578, baseType: !237, size: 32, offset: 480)
!6803 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_DAT", scope: !6759, file: !154, line: 579, baseType: !237, size: 32, offset: 512)
!6804 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_EN", scope: !6759, file: !154, line: 580, baseType: !237, size: 32, offset: 544)
!6805 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEP_EN", scope: !6759, file: !154, line: 581, baseType: !237, size: 32, offset: 576)
!6806 = !DIDerivedType(tag: DW_TAG_member, name: "DMA_EN", scope: !6759, file: !154, line: 582, baseType: !237, size: 32, offset: 608)
!6807 = !DIDerivedType(tag: DW_TAG_member, name: "RXTRI_AD", scope: !6759, file: !154, line: 583, baseType: !237, size: 32, offset: 640)
!6808 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_L", scope: !6759, file: !154, line: 584, baseType: !237, size: 32, offset: 672)
!6809 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_M", scope: !6759, file: !154, line: 585, baseType: !237, size: 32, offset: 704)
!6810 = !DIDerivedType(tag: DW_TAG_member, name: "FCR_RD", scope: !6759, file: !154, line: 586, baseType: !241, size: 32, offset: 736)
!6811 = !DIDerivedType(tag: DW_TAG_member, name: "TX_ACTIVE_EN", scope: !6759, file: !154, line: 587, baseType: !237, size: 32, offset: 768)
!6812 = !{!6813, !6814, !6815, !6816, !6817, !6818, !6819, !6820, !6821, !6822, !6823, !6826}
!6813 = !DILocalVariable(name: "uartx", arg: 1, scope: !6754, file: !3204, line: 52, type: !6757)
!6814 = !DILocalVariable(name: "actual_baudrate", arg: 2, scope: !6754, file: !3204, line: 52, type: !61)
!6815 = !DILocalVariable(name: "uart_clock", scope: !6754, file: !3204, line: 54, type: !61)
!6816 = !DILocalVariable(name: "integer", scope: !6754, file: !3204, line: 54, type: !61)
!6817 = !DILocalVariable(name: "remainder", scope: !6754, file: !3204, line: 54, type: !61)
!6818 = !DILocalVariable(name: "fraction", scope: !6754, file: !3204, line: 54, type: !61)
!6819 = !DILocalVariable(name: "dll_dlm", scope: !6754, file: !3204, line: 55, type: !61)
!6820 = !DILocalVariable(name: "sample_count", scope: !6754, file: !3204, line: 55, type: !61)
!6821 = !DILocalVariable(name: "sample_point", scope: !6754, file: !3204, line: 55, type: !61)
!6822 = !DILocalVariable(name: "temp_lcr", scope: !6754, file: !3204, line: 55, type: !61)
!6823 = !DILocalVariable(name: "fraction_L_mapping", scope: !6754, file: !3204, line: 56, type: !6824)
!6824 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 320, elements: !6825)
!6825 = !{!2466}
!6826 = !DILocalVariable(name: "fraction_M_mapping", scope: !6754, file: !3204, line: 57, type: !6824)
!6827 = !DILocation(line: 0, scope: !6754)
!6828 = !DILocation(line: 56, column: 14, scope: !6754)
!6829 = !DILocation(line: 57, column: 5, scope: !6754)
!6830 = !DILocation(line: 57, column: 14, scope: !6754)
!6831 = !DILocation(line: 59, column: 12, scope: !6754)
!6832 = !DILocation(line: 59, column: 23, scope: !6754)
!6833 = !DILocation(line: 60, column: 12, scope: !6754)
!6834 = !DILocation(line: 60, column: 22, scope: !6754)
!6835 = !DILocation(line: 61, column: 12, scope: !6754)
!6836 = !DILocation(line: 61, column: 22, scope: !6754)
!6837 = !DILocation(line: 63, column: 9, scope: !6838)
!6838 = distinct !DILexicalBlock(scope: !6754, file: !3204, line: 63, column: 9)
!6839 = !DILocation(line: 63, column: 9, scope: !6754)
!6840 = !DILocation(line: 64, column: 22, scope: !6841)
!6841 = distinct !DILexicalBlock(scope: !6838, file: !3204, line: 63, column: 37)
!6842 = !DILocation(line: 64, column: 45, scope: !6841)
!6843 = !DILocation(line: 65, column: 5, scope: !6841)
!6844 = !DILocation(line: 0, scope: !6838)
!6845 = !DILocation(line: 69, column: 45, scope: !6754)
!6846 = !DILocation(line: 69, column: 26, scope: !6754)
!6847 = !DILocation(line: 70, column: 30, scope: !6754)
!6848 = !DILocation(line: 70, column: 36, scope: !6754)
!6849 = !DILocation(line: 70, column: 63, scope: !6754)
!6850 = !DILocation(line: 71, column: 20, scope: !6851)
!6851 = distinct !DILexicalBlock(scope: !6754, file: !3204, line: 71, column: 9)
!6852 = !DILocation(line: 71, column: 26, scope: !6851)
!6853 = !DILocation(line: 77, column: 5, scope: !6754)
!6854 = !DILocation(line: 77, column: 25, scope: !6754)
!6855 = !DILocation(line: 78, column: 16, scope: !6856)
!6856 = distinct !DILexicalBlock(scope: !6754, file: !3204, line: 77, column: 32)
!6857 = distinct !{!6857, !6853, !6858}
!6858 = !DILocation(line: 80, column: 5, scope: !6754)
!6859 = !DILocation(line: 82, column: 35, scope: !6754)
!6860 = !DILocation(line: 82, column: 66, scope: !6754)
!6861 = !DILocation(line: 84, column: 18, scope: !6754)
!6862 = !DILocation(line: 85, column: 34, scope: !6754)
!6863 = !DILocation(line: 85, column: 39, scope: !6754)
!6864 = !DILocation(line: 87, column: 12, scope: !6754)
!6865 = !DILocation(line: 87, column: 22, scope: !6754)
!6866 = !DILocation(line: 89, column: 23, scope: !6754)
!6867 = !DILocation(line: 90, column: 27, scope: !6754)
!6868 = !DILocation(line: 90, column: 16, scope: !6754)
!6869 = !DILocation(line: 91, column: 38, scope: !6754)
!6870 = !DILocation(line: 91, column: 24, scope: !6754)
!6871 = !DILocation(line: 91, column: 28, scope: !6754)
!6872 = !DILocation(line: 92, column: 35, scope: !6754)
!6873 = !DILocation(line: 92, column: 41, scope: !6754)
!6874 = !DILocation(line: 92, column: 20, scope: !6754)
!6875 = !DILocation(line: 92, column: 24, scope: !6754)
!6876 = !DILocation(line: 93, column: 16, scope: !6754)
!6877 = !DILocation(line: 95, column: 12, scope: !6754)
!6878 = !DILocation(line: 95, column: 25, scope: !6754)
!6879 = !DILocation(line: 96, column: 12, scope: !6754)
!6880 = !DILocation(line: 96, column: 25, scope: !6754)
!6881 = !DILocation(line: 98, column: 24, scope: !6754)
!6882 = !DILocation(line: 98, column: 22, scope: !6754)
!6883 = !DILocation(line: 99, column: 24, scope: !6754)
!6884 = !DILocation(line: 99, column: 22, scope: !6754)
!6885 = !DILocation(line: 101, column: 25, scope: !6886)
!6886 = distinct !DILexicalBlock(scope: !6754, file: !3204, line: 101, column: 9)
!6887 = !DILocation(line: 101, column: 9, scope: !6754)
!6888 = !DILocation(line: 102, column: 16, scope: !6889)
!6889 = distinct !DILexicalBlock(scope: !6886, file: !3204, line: 101, column: 37)
!6890 = !DILocation(line: 102, column: 22, scope: !6889)
!6891 = !DILocation(line: 103, column: 5, scope: !6889)
!6892 = !DILocation(line: 104, column: 1, scope: !6754)
!6893 = distinct !DISubprogram(name: "uart_set_format", scope: !3204, file: !3204, line: 106, type: !6894, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3203, retainedNodes: !6896)
!6894 = !DISubroutineType(types: !6895)
!6895 = !{null, !6757, !840, !842, !844}
!6896 = !{!6897, !6898, !6899, !6900, !6901}
!6897 = !DILocalVariable(name: "uartx", arg: 1, scope: !6893, file: !3204, line: 106, type: !6757)
!6898 = !DILocalVariable(name: "word_length", arg: 2, scope: !6893, file: !3204, line: 107, type: !840)
!6899 = !DILocalVariable(name: "stop_bit", arg: 3, scope: !6893, file: !3204, line: 108, type: !842)
!6900 = !DILocalVariable(name: "parity", arg: 4, scope: !6893, file: !3204, line: 109, type: !844)
!6901 = !DILocalVariable(name: "byte", scope: !6893, file: !3204, line: 111, type: !1041)
!6902 = !DILocation(line: 0, scope: !6893)
!6903 = !DILocation(line: 114, column: 19, scope: !6893)
!6904 = !DILocation(line: 115, column: 16, scope: !6893)
!6905 = !DILocation(line: 118, column: 10, scope: !6893)
!6906 = !DILocation(line: 119, column: 5, scope: !6893)
!6907 = !DILocation(line: 124, column: 18, scope: !6908)
!6908 = distinct !DILexicalBlock(scope: !6893, file: !3204, line: 119, column: 26)
!6909 = !DILocation(line: 125, column: 13, scope: !6908)
!6910 = !DILocation(line: 127, column: 18, scope: !6908)
!6911 = !DILocation(line: 128, column: 13, scope: !6908)
!6912 = !DILocation(line: 130, column: 18, scope: !6908)
!6913 = !DILocation(line: 131, column: 13, scope: !6908)
!6914 = !DILocation(line: 137, column: 10, scope: !6893)
!6915 = !DILocation(line: 138, column: 5, scope: !6893)
!6916 = !DILocation(line: 151, column: 5, scope: !6893)
!6917 = !DILocation(line: 166, column: 18, scope: !6893)
!6918 = !DILocation(line: 166, column: 16, scope: !6893)
!6919 = !DILocation(line: 167, column: 1, scope: !6893)
!6920 = distinct !DISubprogram(name: "uart_put_char_block", scope: !3204, file: !3204, line: 169, type: !6921, scopeLine: 170, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3203, retainedNodes: !6923)
!6921 = !DISubroutineType(types: !6922)
!6922 = !{null, !6757, !74}
!6923 = !{!6924, !6925, !6926}
!6924 = !DILocalVariable(name: "uartx", arg: 1, scope: !6920, file: !3204, line: 169, type: !6757)
!6925 = !DILocalVariable(name: "byte", arg: 2, scope: !6920, file: !3204, line: 169, type: !74)
!6926 = !DILocalVariable(name: "LSR", scope: !6920, file: !3204, line: 171, type: !1041)
!6927 = !DILocation(line: 0, scope: !6920)
!6928 = !DILocation(line: 173, column: 5, scope: !6920)
!6929 = !DILocation(line: 174, column: 31, scope: !6930)
!6930 = distinct !DILexicalBlock(scope: !6920, file: !3204, line: 173, column: 15)
!6931 = !DILocation(line: 175, column: 17, scope: !6932)
!6932 = distinct !DILexicalBlock(scope: !6930, file: !3204, line: 175, column: 13)
!6933 = !DILocation(line: 175, column: 13, scope: !6930)
!6934 = distinct !{!6934, !6928, !6935}
!6935 = !DILocation(line: 179, column: 5, scope: !6920)
!6936 = !DILocation(line: 176, column: 38, scope: !6937)
!6937 = distinct !DILexicalBlock(scope: !6932, file: !3204, line: 175, column: 39)
!6938 = !DILocation(line: 176, column: 32, scope: !6937)
!6939 = !DILocation(line: 176, column: 36, scope: !6937)
!6940 = !DILocation(line: 180, column: 1, scope: !6920)
!6941 = distinct !DISubprogram(name: "uart_get_char_block", scope: !3204, file: !3204, line: 182, type: !6942, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3203, retainedNodes: !6944)
!6942 = !DISubroutineType(types: !6943)
!6943 = !{!74, !6757}
!6944 = !{!6945, !6946, !6947}
!6945 = !DILocalVariable(name: "uartx", arg: 1, scope: !6941, file: !3204, line: 182, type: !6757)
!6946 = !DILocalVariable(name: "LSR", scope: !6941, file: !3204, line: 184, type: !1041)
!6947 = !DILocalVariable(name: "byte", scope: !6941, file: !3204, line: 185, type: !74)
!6948 = !DILocation(line: 0, scope: !6941)
!6949 = !DILocation(line: 187, column: 5, scope: !6941)
!6950 = !DILocation(line: 188, column: 31, scope: !6951)
!6951 = distinct !DILexicalBlock(scope: !6941, file: !3204, line: 187, column: 15)
!6952 = !DILocation(line: 189, column: 17, scope: !6953)
!6953 = distinct !DILexicalBlock(scope: !6951, file: !3204, line: 189, column: 13)
!6954 = !DILocation(line: 189, column: 13, scope: !6951)
!6955 = distinct !{!6955, !6949, !6956}
!6956 = !DILocation(line: 193, column: 5, scope: !6941)
!6957 = !DILocation(line: 190, column: 48, scope: !6958)
!6958 = distinct !DILexicalBlock(scope: !6953, file: !3204, line: 189, column: 37)
!6959 = !DILocation(line: 190, column: 20, scope: !6958)
!6960 = !DILocation(line: 195, column: 5, scope: !6941)
!6961 = distinct !DISubprogram(name: "uart_get_char_unblocking", scope: !3204, file: !3204, line: 198, type: !6962, scopeLine: 199, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3203, retainedNodes: !6964)
!6962 = !DISubroutineType(types: !6963)
!6963 = !{!61, !6757}
!6964 = !{!6965, !6966, !6967}
!6965 = !DILocalVariable(name: "uartx", arg: 1, scope: !6961, file: !3204, line: 198, type: !6757)
!6966 = !DILocalVariable(name: "LSR", scope: !6961, file: !3204, line: 200, type: !1041)
!6967 = !DILocalVariable(name: "value", scope: !6961, file: !3204, line: 201, type: !61)
!6968 = !DILocation(line: 0, scope: !6961)
!6969 = !DILocation(line: 203, column: 27, scope: !6961)
!6970 = !DILocation(line: 204, column: 13, scope: !6971)
!6971 = distinct !DILexicalBlock(scope: !6961, file: !3204, line: 204, column: 9)
!6972 = !DILocation(line: 204, column: 9, scope: !6961)
!6973 = !DILocation(line: 205, column: 36, scope: !6974)
!6974 = distinct !DILexicalBlock(scope: !6971, file: !3204, line: 204, column: 33)
!6975 = !DILocation(line: 206, column: 5, scope: !6974)
!6976 = !DILocation(line: 0, scope: !6971)
!6977 = !DILocation(line: 210, column: 5, scope: !6961)
!6978 = distinct !DISubprogram(name: "uart_set_hardware_flowcontrol", scope: !3204, file: !3204, line: 213, type: !6979, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3203, retainedNodes: !6981)
!6979 = !DISubroutineType(types: !6980)
!6980 = !{null, !6757}
!6981 = !{!6982, !6983, !6984}
!6982 = !DILocalVariable(name: "uartx", arg: 1, scope: !6978, file: !3204, line: 213, type: !6757)
!6983 = !DILocalVariable(name: "EFR", scope: !6978, file: !3204, line: 215, type: !1041)
!6984 = !DILocalVariable(name: "LCR", scope: !6978, file: !3204, line: 215, type: !1041)
!6985 = !DILocation(line: 0, scope: !6978)
!6986 = !DILocation(line: 217, column: 18, scope: !6978)
!6987 = !DILocation(line: 219, column: 16, scope: !6978)
!6988 = !DILocation(line: 220, column: 30, scope: !6978)
!6989 = !DILocation(line: 222, column: 30, scope: !6978)
!6990 = !DILocation(line: 222, column: 28, scope: !6978)
!6991 = !DILocation(line: 223, column: 12, scope: !6978)
!6992 = !DILocation(line: 223, column: 22, scope: !6978)
!6993 = !DILocation(line: 225, column: 16, scope: !6978)
!6994 = !DILocation(line: 226, column: 21, scope: !6978)
!6995 = !DILocation(line: 226, column: 25, scope: !6978)
!6996 = !DILocation(line: 228, column: 18, scope: !6978)
!6997 = !DILocation(line: 228, column: 16, scope: !6978)
!6998 = !DILocation(line: 229, column: 1, scope: !6978)
!6999 = distinct !DISubprogram(name: "uart_set_software_flowcontrol", scope: !3204, file: !3204, line: 231, type: !7000, scopeLine: 235, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3203, retainedNodes: !7002)
!7000 = !DISubroutineType(types: !7001)
!7001 = !{null, !6757, !74, !74, !74}
!7002 = !{!7003, !7004, !7005, !7006, !7007, !7008}
!7003 = !DILocalVariable(name: "uartx", arg: 1, scope: !6999, file: !3204, line: 231, type: !6757)
!7004 = !DILocalVariable(name: "xon", arg: 2, scope: !6999, file: !3204, line: 232, type: !74)
!7005 = !DILocalVariable(name: "xoff", arg: 3, scope: !6999, file: !3204, line: 233, type: !74)
!7006 = !DILocalVariable(name: "escape_character", arg: 4, scope: !6999, file: !3204, line: 234, type: !74)
!7007 = !DILocalVariable(name: "EFR", scope: !6999, file: !3204, line: 236, type: !1041)
!7008 = !DILocalVariable(name: "LCR", scope: !6999, file: !3204, line: 236, type: !1041)
!7009 = !DILocation(line: 0, scope: !6999)
!7010 = !DILocation(line: 238, column: 18, scope: !6999)
!7011 = !DILocation(line: 240, column: 16, scope: !6999)
!7012 = !DILocation(line: 241, column: 28, scope: !6999)
!7013 = !DILocation(line: 241, column: 21, scope: !6999)
!7014 = !DILocation(line: 241, column: 26, scope: !6999)
!7015 = !DILocation(line: 242, column: 20, scope: !6999)
!7016 = !DILocation(line: 242, column: 12, scope: !6999)
!7017 = !DILocation(line: 242, column: 18, scope: !6999)
!7018 = !DILocation(line: 243, column: 30, scope: !6999)
!7019 = !DILocation(line: 245, column: 30, scope: !6999)
!7020 = !DILocation(line: 245, column: 28, scope: !6999)
!7021 = !DILocation(line: 246, column: 25, scope: !6999)
!7022 = !DILocation(line: 246, column: 12, scope: !6999)
!7023 = !DILocation(line: 246, column: 23, scope: !6999)
!7024 = !DILocation(line: 247, column: 12, scope: !6999)
!7025 = !DILocation(line: 247, column: 22, scope: !6999)
!7026 = !DILocation(line: 249, column: 18, scope: !6999)
!7027 = !DILocation(line: 249, column: 16, scope: !6999)
!7028 = !DILocation(line: 250, column: 1, scope: !6999)
!7029 = distinct !DISubprogram(name: "uart_disable_flowcontrol", scope: !3204, file: !3204, line: 252, type: !6979, scopeLine: 253, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3203, retainedNodes: !7030)
!7030 = !{!7031, !7032}
!7031 = !DILocalVariable(name: "uartx", arg: 1, scope: !7029, file: !3204, line: 252, type: !6757)
!7032 = !DILocalVariable(name: "LCR", scope: !7029, file: !3204, line: 254, type: !1041)
!7033 = !DILocation(line: 0, scope: !7029)
!7034 = !DILocation(line: 256, column: 18, scope: !7029)
!7035 = !DILocation(line: 258, column: 16, scope: !7029)
!7036 = !DILocation(line: 259, column: 24, scope: !7029)
!7037 = !DILocation(line: 259, column: 28, scope: !7029)
!7038 = !DILocation(line: 261, column: 16, scope: !7029)
!7039 = !DILocation(line: 262, column: 18, scope: !7029)
!7040 = !DILocation(line: 262, column: 16, scope: !7029)
!7041 = !DILocation(line: 263, column: 1, scope: !7029)
!7042 = distinct !DISubprogram(name: "uart_set_fifo", scope: !3204, file: !3204, line: 265, type: !6979, scopeLine: 266, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3203, retainedNodes: !7043)
!7043 = !{!7044, !7045, !7046}
!7044 = !DILocalVariable(name: "uartx", arg: 1, scope: !7042, file: !3204, line: 265, type: !6757)
!7045 = !DILocalVariable(name: "EFR", scope: !7042, file: !3204, line: 267, type: !1041)
!7046 = !DILocalVariable(name: "LCR", scope: !7042, file: !3204, line: 267, type: !1041)
!7047 = !DILocation(line: 0, scope: !7042)
!7048 = !DILocation(line: 269, column: 18, scope: !7042)
!7049 = !DILocation(line: 271, column: 16, scope: !7042)
!7050 = !DILocation(line: 272, column: 30, scope: !7042)
!7051 = !DILocation(line: 274, column: 30, scope: !7042)
!7052 = !DILocation(line: 274, column: 28, scope: !7042)
!7053 = !DILocation(line: 276, column: 16, scope: !7042)
!7054 = !DILocation(line: 277, column: 28, scope: !7042)
!7055 = !DILocation(line: 283, column: 18, scope: !7042)
!7056 = !DILocation(line: 283, column: 16, scope: !7042)
!7057 = !DILocation(line: 284, column: 1, scope: !7042)
!7058 = distinct !DISubprogram(name: "uart_set_sleep_mode", scope: !3204, file: !3204, line: 287, type: !6979, scopeLine: 288, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3203, retainedNodes: !7059)
!7059 = !{!7060}
!7060 = !DILocalVariable(name: "uartx", arg: 1, scope: !7058, file: !3204, line: 287, type: !6757)
!7061 = !DILocation(line: 0, scope: !7058)
!7062 = !DILocation(line: 289, column: 12, scope: !7058)
!7063 = !DILocation(line: 289, column: 21, scope: !7058)
!7064 = !DILocation(line: 290, column: 1, scope: !7058)
!7065 = distinct !DISubprogram(name: "uart_unmask_send_interrupt", scope: !3204, file: !3204, line: 292, type: !6979, scopeLine: 293, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3203, retainedNodes: !7066)
!7066 = !{!7067, !7068, !7069}
!7067 = !DILocalVariable(name: "uartx", arg: 1, scope: !7065, file: !3204, line: 292, type: !6757)
!7068 = !DILocalVariable(name: "IER", scope: !7065, file: !3204, line: 294, type: !1041)
!7069 = !DILocalVariable(name: "LCR", scope: !7065, file: !3204, line: 294, type: !1041)
!7070 = !DILocation(line: 0, scope: !7065)
!7071 = !DILocation(line: 296, column: 18, scope: !7065)
!7072 = !DILocation(line: 298, column: 16, scope: !7065)
!7073 = !DILocation(line: 299, column: 26, scope: !7065)
!7074 = !DILocation(line: 301, column: 26, scope: !7065)
!7075 = !DILocation(line: 301, column: 24, scope: !7065)
!7076 = !DILocation(line: 303, column: 19, scope: !7065)
!7077 = !DILocation(line: 303, column: 16, scope: !7065)
!7078 = !DILocation(line: 304, column: 1, scope: !7065)
!7079 = distinct !DISubprogram(name: "uart_unmask_receive_interrupt", scope: !3204, file: !3204, line: 307, type: !6979, scopeLine: 308, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3203, retainedNodes: !7080)
!7080 = !{!7081, !7082, !7083}
!7081 = !DILocalVariable(name: "uartx", arg: 1, scope: !7079, file: !3204, line: 307, type: !6757)
!7082 = !DILocalVariable(name: "IER", scope: !7079, file: !3204, line: 309, type: !1041)
!7083 = !DILocalVariable(name: "LCR", scope: !7079, file: !3204, line: 309, type: !1041)
!7084 = !DILocation(line: 0, scope: !7079)
!7085 = !DILocation(line: 311, column: 18, scope: !7079)
!7086 = !DILocation(line: 313, column: 16, scope: !7079)
!7087 = !DILocation(line: 314, column: 26, scope: !7079)
!7088 = !DILocation(line: 316, column: 26, scope: !7079)
!7089 = !DILocation(line: 316, column: 24, scope: !7079)
!7090 = !DILocation(line: 318, column: 19, scope: !7079)
!7091 = !DILocation(line: 318, column: 16, scope: !7079)
!7092 = !DILocation(line: 319, column: 1, scope: !7079)
!7093 = distinct !DISubprogram(name: "uart_purge_fifo", scope: !3204, file: !3204, line: 321, type: !7094, scopeLine: 322, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3203, retainedNodes: !7096)
!7094 = !DISubroutineType(types: !7095)
!7095 = !{null, !6757, !1343}
!7096 = !{!7097, !7098, !7099}
!7097 = !DILocalVariable(name: "uartx", arg: 1, scope: !7093, file: !3204, line: 321, type: !6757)
!7098 = !DILocalVariable(name: "is_rx", arg: 2, scope: !7093, file: !3204, line: 321, type: !1343)
!7099 = !DILocalVariable(name: "FCR", scope: !7093, file: !3204, line: 323, type: !1041)
!7100 = !DILocation(line: 0, scope: !7093)
!7101 = !DILocation(line: 327, column: 9, scope: !7102)
!7102 = distinct !DILexicalBlock(scope: !7093, file: !3204, line: 327, column: 9)
!7103 = !DILocation(line: 333, column: 24, scope: !7093)
!7104 = !DILocation(line: 333, column: 28, scope: !7093)
!7105 = !DILocation(line: 334, column: 1, scope: !7093)
!7106 = distinct !DISubprogram(name: "uart_query_interrupt_type", scope: !3204, file: !3204, line: 336, type: !7107, scopeLine: 337, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3203, retainedNodes: !7110)
!7107 = !DISubroutineType(types: !7108)
!7108 = !{!7109, !6757}
!7109 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_interrupt_type_t", file: !802, line: 55, baseType: !897)
!7110 = !{!7111, !7112, !7113, !7114}
!7111 = !DILocalVariable(name: "uartx", arg: 1, scope: !7106, file: !3204, line: 336, type: !6757)
!7112 = !DILocalVariable(name: "IIR", scope: !7106, file: !3204, line: 338, type: !1041)
!7113 = !DILocalVariable(name: "LSR", scope: !7106, file: !3204, line: 338, type: !1041)
!7114 = !DILocalVariable(name: "type", scope: !7106, file: !3204, line: 339, type: !7109)
!7115 = !DILocation(line: 0, scope: !7106)
!7116 = !DILocation(line: 341, column: 30, scope: !7106)
!7117 = !DILocation(line: 342, column: 13, scope: !7118)
!7118 = distinct !DILexicalBlock(scope: !7106, file: !3204, line: 342, column: 9)
!7119 = !DILocation(line: 342, column: 9, scope: !7106)
!7120 = !DILocation(line: 346, column: 17, scope: !7106)
!7121 = !DILocation(line: 346, column: 5, scope: !7106)
!7122 = !DILocation(line: 350, column: 13, scope: !7123)
!7123 = distinct !DILexicalBlock(scope: !7106, file: !3204, line: 346, column: 37)
!7124 = !DILocation(line: 353, column: 35, scope: !7123)
!7125 = !DILocation(line: 354, column: 21, scope: !7126)
!7126 = distinct !DILexicalBlock(scope: !7123, file: !3204, line: 354, column: 17)
!7127 = !DILocation(line: 363, column: 13, scope: !7123)
!7128 = !DILocation(line: 369, column: 1, scope: !7106)
!7129 = distinct !DISubprogram(name: "uart_verify_error", scope: !3204, file: !3204, line: 371, type: !7130, scopeLine: 372, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3203, retainedNodes: !7132)
!7130 = !DISubroutineType(types: !7131)
!7131 = !{!1343, !6757}
!7132 = !{!7133, !7134, !7135}
!7133 = !DILocalVariable(name: "uartx", arg: 1, scope: !7129, file: !3204, line: 371, type: !6757)
!7134 = !DILocalVariable(name: "LSR", scope: !7129, file: !3204, line: 373, type: !1041)
!7135 = !DILocalVariable(name: "ret", scope: !7129, file: !3204, line: 374, type: !1343)
!7136 = !DILocation(line: 0, scope: !7129)
!7137 = !DILocation(line: 376, column: 27, scope: !7129)
!7138 = !DILocation(line: 377, column: 15, scope: !7139)
!7139 = distinct !DILexicalBlock(scope: !7129, file: !3204, line: 377, column: 9)
!7140 = !DILocation(line: 377, column: 9, scope: !7129)
!7141 = !DILocation(line: 381, column: 5, scope: !7129)
!7142 = distinct !DISubprogram(name: "uart_clear_timeout_interrupt", scope: !3204, file: !3204, line: 384, type: !6979, scopeLine: 385, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3203, retainedNodes: !7143)
!7143 = !{!7144, !7145}
!7144 = !DILocalVariable(name: "uartx", arg: 1, scope: !7142, file: !3204, line: 384, type: !6757)
!7145 = !DILocalVariable(name: "DMA_EN", scope: !7142, file: !3204, line: 386, type: !1041)
!7146 = !DILocation(line: 0, scope: !7142)
!7147 = !DILocation(line: 388, column: 21, scope: !7142)
!7148 = !DILocation(line: 390, column: 1, scope: !7142)
!7149 = distinct !DISubprogram(name: "uart_reset_default_value", scope: !3204, file: !3204, line: 392, type: !6979, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3203, retainedNodes: !7150)
!7150 = !{!7151}
!7151 = !DILocalVariable(name: "uartx", arg: 1, scope: !7149, file: !3204, line: 392, type: !6757)
!7152 = !DILocation(line: 0, scope: !7149)
!7153 = !DILocation(line: 394, column: 12, scope: !7149)
!7154 = !DILocation(line: 394, column: 16, scope: !7149)
!7155 = !DILocation(line: 395, column: 24, scope: !7149)
!7156 = !DILocation(line: 395, column: 28, scope: !7149)
!7157 = !DILocation(line: 396, column: 21, scope: !7149)
!7158 = !DILocation(line: 396, column: 26, scope: !7149)
!7159 = !DILocation(line: 397, column: 12, scope: !7149)
!7160 = !DILocation(line: 397, column: 18, scope: !7149)
!7161 = !DILocation(line: 399, column: 16, scope: !7149)
!7162 = !DILocation(line: 400, column: 24, scope: !7149)
!7163 = !DILocation(line: 400, column: 28, scope: !7149)
!7164 = !DILocation(line: 401, column: 20, scope: !7149)
!7165 = !DILocation(line: 401, column: 24, scope: !7149)
!7166 = !DILocation(line: 403, column: 16, scope: !7149)
!7167 = !DILocation(line: 404, column: 24, scope: !7149)
!7168 = !DILocation(line: 405, column: 28, scope: !7149)
!7169 = !DILocation(line: 407, column: 16, scope: !7149)
!7170 = !DILocation(line: 408, column: 28, scope: !7149)
!7171 = !DILocation(line: 409, column: 16, scope: !7149)
!7172 = !DILocation(line: 411, column: 25, scope: !7149)
!7173 = !DILocation(line: 412, column: 22, scope: !7149)
!7174 = !DILocation(line: 412, column: 26, scope: !7149)
!7175 = !DILocation(line: 413, column: 12, scope: !7149)
!7176 = !DILocation(line: 413, column: 24, scope: !7149)
!7177 = !DILocation(line: 414, column: 12, scope: !7149)
!7178 = !DILocation(line: 414, column: 22, scope: !7149)
!7179 = !DILocation(line: 415, column: 12, scope: !7149)
!7180 = !DILocation(line: 415, column: 25, scope: !7149)
!7181 = !DILocation(line: 416, column: 12, scope: !7149)
!7182 = !DILocation(line: 416, column: 25, scope: !7149)
!7183 = !DILocation(line: 417, column: 12, scope: !7149)
!7184 = !DILocation(line: 417, column: 23, scope: !7149)
!7185 = !DILocation(line: 418, column: 12, scope: !7149)
!7186 = !DILocation(line: 418, column: 27, scope: !7149)
!7187 = !DILocation(line: 419, column: 12, scope: !7149)
!7188 = !DILocation(line: 419, column: 18, scope: !7149)
!7189 = !DILocation(line: 420, column: 12, scope: !7149)
!7190 = !DILocation(line: 420, column: 23, scope: !7149)
!7191 = !DILocation(line: 421, column: 12, scope: !7149)
!7192 = !DILocation(line: 421, column: 22, scope: !7149)
!7193 = !DILocation(line: 422, column: 12, scope: !7149)
!7194 = !DILocation(line: 422, column: 21, scope: !7149)
!7195 = !DILocation(line: 423, column: 12, scope: !7149)
!7196 = !DILocation(line: 423, column: 19, scope: !7149)
!7197 = !DILocation(line: 424, column: 23, scope: !7149)
!7198 = !DILocation(line: 425, column: 12, scope: !7149)
!7199 = !DILocation(line: 425, column: 22, scope: !7149)
!7200 = !DILocation(line: 426, column: 12, scope: !7149)
!7201 = !DILocation(line: 426, column: 22, scope: !7149)
!7202 = !DILocation(line: 427, column: 1, scope: !7149)
!7203 = distinct !DISubprogram(name: "uart_query_empty", scope: !3204, file: !3204, line: 429, type: !6979, scopeLine: 430, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3203, retainedNodes: !7204)
!7204 = !{!7205}
!7205 = !DILocalVariable(name: "uartx", arg: 1, scope: !7203, file: !3204, line: 429, type: !6757)
!7206 = !DILocation(line: 0, scope: !7203)
!7207 = !DILocation(line: 431, column: 5, scope: !7203)
!7208 = !DILocation(line: 431, column: 31, scope: !7203)
!7209 = !DILocation(line: 431, column: 36, scope: !7203)
!7210 = !DILocation(line: 431, column: 12, scope: !7203)
!7211 = distinct !{!7211, !7207, !7212}
!7212 = !DILocation(line: 431, column: 44, scope: !7203)
!7213 = !DILocation(line: 432, column: 1, scope: !7203)
!7214 = distinct !DISubprogram(name: "uart_port_to_dma_channel", scope: !895, file: !895, line: 134, type: !7215, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !894, retainedNodes: !7217)
!7215 = !DISubroutineType(types: !7216)
!7216 = !{!5509, !807, !1343}
!7217 = !{!7218, !7219, !7220}
!7218 = !DILocalVariable(name: "uart_port", arg: 1, scope: !7214, file: !895, line: 134, type: !807)
!7219 = !DILocalVariable(name: "is_rx", arg: 2, scope: !7214, file: !895, line: 134, type: !1343)
!7220 = !DILocalVariable(name: "dma_channel", scope: !7214, file: !895, line: 136, type: !5509)
!7221 = !DILocation(line: 0, scope: !7214)
!7222 = !DILocation(line: 138, column: 5, scope: !7214)
!7223 = !DILocation(line: 140, column: 17, scope: !7224)
!7224 = distinct !DILexicalBlock(scope: !7225, file: !895, line: 140, column: 17)
!7225 = distinct !DILexicalBlock(scope: !7214, file: !895, line: 138, column: 24)
!7226 = !DILocation(line: 147, column: 17, scope: !7227)
!7227 = distinct !DILexicalBlock(scope: !7225, file: !895, line: 147, column: 17)
!7228 = !DILocation(line: 154, column: 17, scope: !7229)
!7229 = distinct !DILexicalBlock(scope: !7225, file: !895, line: 154, column: 17)
!7230 = !DILocation(line: 161, column: 17, scope: !7231)
!7231 = distinct !DILexicalBlock(scope: !7225, file: !895, line: 161, column: 17)
!7232 = !DILocation(line: 171, column: 5, scope: !7214)
!7233 = distinct !DISubprogram(name: "uart_dma_channel_to_callback_data", scope: !895, file: !895, line: 174, type: !7234, scopeLine: 175, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !894, retainedNodes: !7242)
!7234 = !DISubroutineType(types: !7235)
!7235 = !{null, !5509, !7236}
!7236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7237, size: 32)
!7237 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_dma_callback_data_t", file: !802, line: 96, baseType: !7238)
!7238 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !802, line: 93, size: 64, elements: !7239)
!7239 = !{!7240, !7241}
!7240 = !DIDerivedType(tag: DW_TAG_member, name: "is_rx", scope: !7238, file: !802, line: 94, baseType: !263, size: 8)
!7241 = !DIDerivedType(tag: DW_TAG_member, name: "uart_port", scope: !7238, file: !802, line: 95, baseType: !807, size: 32, offset: 32)
!7242 = !{!7243, !7244}
!7243 = !DILocalVariable(name: "dma_channel", arg: 1, scope: !7233, file: !895, line: 174, type: !5509)
!7244 = !DILocalVariable(name: "user_data", arg: 2, scope: !7233, file: !895, line: 174, type: !7236)
!7245 = !DILocation(line: 0, scope: !7233)
!7246 = !DILocation(line: 176, column: 5, scope: !7233)
!7247 = !DILocation(line: 0, scope: !7248)
!7248 = distinct !DILexicalBlock(scope: !7233, file: !895, line: 176, column: 26)
!7249 = !DILocation(line: 212, column: 1, scope: !7233)
!7250 = distinct !DISubprogram(name: "uart_enable_dma", scope: !895, file: !895, line: 214, type: !7251, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !894, retainedNodes: !7253)
!7251 = !DISubroutineType(types: !7252)
!7252 = !{null, !908}
!7253 = !{!7254}
!7254 = !DILocalVariable(name: "uartx", arg: 1, scope: !7250, file: !895, line: 214, type: !908)
!7255 = !DILocation(line: 0, scope: !7250)
!7256 = !DILocation(line: 216, column: 12, scope: !7250)
!7257 = !DILocation(line: 216, column: 19, scope: !7250)
!7258 = !DILocation(line: 217, column: 1, scope: !7250)
!7259 = distinct !DISubprogram(name: "uart_interrupt_handler", scope: !895, file: !895, line: 219, type: !1167, scopeLine: 220, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !894, retainedNodes: !7260)
!7260 = !{!7261, !7262, !7263, !7264}
!7261 = !DILocalVariable(name: "irq_number", arg: 1, scope: !7259, file: !895, line: 219, type: !973)
!7262 = !DILocalVariable(name: "uart_port", scope: !7259, file: !895, line: 221, type: !807)
!7263 = !DILocalVariable(name: "type", scope: !7259, file: !895, line: 222, type: !7109)
!7264 = !DILocalVariable(name: "uartx", scope: !7259, file: !895, line: 223, type: !908)
!7265 = !DILocation(line: 0, scope: !7259)
!7266 = !DILocation(line: 225, column: 5, scope: !7259)
!7267 = !DILocation(line: 242, column: 13, scope: !7259)
!7268 = !DILocation(line: 243, column: 12, scope: !7259)
!7269 = !DILocation(line: 245, column: 5, scope: !7259)
!7270 = !DILocation(line: 248, column: 13, scope: !7271)
!7271 = distinct !DILexicalBlock(scope: !7259, file: !895, line: 245, column: 19)
!7272 = !DILocation(line: 249, column: 13, scope: !7271)
!7273 = !DILocation(line: 252, column: 13, scope: !7271)
!7274 = !DILocation(line: 253, column: 13, scope: !7271)
!7275 = !DILocation(line: 263, column: 13, scope: !7271)
!7276 = !DILocation(line: 264, column: 13, scope: !7271)
!7277 = !DILocation(line: 268, column: 13, scope: !7271)
!7278 = !DILocation(line: 269, column: 13, scope: !7271)
!7279 = !DILocation(line: 276, column: 13, scope: !7271)
!7280 = !DILocation(line: 278, column: 1, scope: !7259)
!7281 = distinct !DISubprogram(name: "i2c_set_frequency", scope: !984, file: !984, line: 74, type: !7282, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !983, retainedNodes: !7284)
!7282 = !DISubroutineType(types: !7283)
!7283 = !{null, !61, !61}
!7284 = !{!7285, !7286, !7287, !7288, !7289, !7290, !7291, !7292}
!7285 = !DILocalVariable(name: "i2c_port", arg: 1, scope: !7281, file: !984, line: 74, type: !61)
!7286 = !DILocalVariable(name: "transfer_frequency", arg: 2, scope: !7281, file: !984, line: 74, type: !61)
!7287 = !DILocalVariable(name: "frequency", scope: !7281, file: !984, line: 76, type: !61)
!7288 = !DILocalVariable(name: "step_cnt_div", scope: !7281, file: !984, line: 77, type: !61)
!7289 = !DILocalVariable(name: "sample_cnt_div", scope: !7281, file: !984, line: 78, type: !61)
!7290 = !DILocalVariable(name: "orignal_register_value", scope: !7281, file: !984, line: 79, type: !61)
!7291 = !DILocalVariable(name: "register_value", scope: !7281, file: !984, line: 79, type: !61)
!7292 = !DILocalVariable(name: "temp", scope: !7281, file: !984, line: 80, type: !61)
!7293 = !DILocation(line: 0, scope: !7281)
!7294 = !DILocation(line: 83, column: 5, scope: !7281)
!7295 = !DILocation(line: 83, column: 36, scope: !7281)
!7296 = !DILocation(line: 83, column: 46, scope: !7281)
!7297 = !DILocation(line: 84, column: 5, scope: !7281)
!7298 = !DILocation(line: 87, column: 54, scope: !7299)
!7299 = distinct !DILexicalBlock(scope: !7281, file: !984, line: 84, column: 33)
!7300 = !DILocation(line: 89, column: 13, scope: !7299)
!7301 = !DILocation(line: 95, column: 13, scope: !7299)
!7302 = !DILocation(line: 98, column: 13, scope: !7299)
!7303 = !DILocation(line: 101, column: 13, scope: !7299)
!7304 = !DILocation(line: 104, column: 13, scope: !7299)
!7305 = !DILocation(line: 109, column: 13, scope: !7299)
!7306 = !DILocation(line: 117, column: 5, scope: !7307)
!7307 = distinct !DILexicalBlock(scope: !7281, file: !984, line: 117, column: 5)
!7308 = !DILocation(line: 119, column: 31, scope: !7309)
!7309 = distinct !DILexicalBlock(scope: !7310, file: !984, line: 117, column: 69)
!7310 = distinct !DILexicalBlock(scope: !7307, file: !984, line: 117, column: 5)
!7311 = !DILocation(line: 120, column: 60, scope: !7309)
!7312 = !DILocation(line: 120, column: 67, scope: !7309)
!7313 = !DILocation(line: 120, column: 72, scope: !7309)
!7314 = !DILocation(line: 122, column: 26, scope: !7315)
!7315 = distinct !DILexicalBlock(scope: !7309, file: !984, line: 122, column: 13)
!7316 = !DILocation(line: 122, column: 13, scope: !7309)
!7317 = !DILocation(line: 117, column: 65, scope: !7310)
!7318 = !DILocation(line: 117, column: 45, scope: !7310)
!7319 = distinct !{!7319, !7306, !7320}
!7320 = !DILocation(line: 125, column: 5, scope: !7307)
!7321 = !DILocation(line: 0, scope: !7307)
!7322 = !DILocation(line: 128, column: 17, scope: !7281)
!7323 = !DILocation(line: 131, column: 62, scope: !7281)
!7324 = !DILocation(line: 131, column: 70, scope: !7281)
!7325 = !DILocation(line: 132, column: 94, scope: !7281)
!7326 = !DILocation(line: 132, column: 76, scope: !7281)
!7327 = !DILocation(line: 132, column: 157, scope: !7281)
!7328 = !DILocation(line: 132, column: 45, scope: !7281)
!7329 = !DILocation(line: 133, column: 45, scope: !7281)
!7330 = !DILocation(line: 133, column: 43, scope: !7281)
!7331 = !DILocation(line: 134, column: 1, scope: !7281)
!7332 = distinct !DISubprogram(name: "i2c_config_hardware", scope: !984, file: !984, line: 143, type: !7333, scopeLine: 144, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !983, retainedNodes: !7345)
!7333 = !DISubroutineType(types: !7334)
!7334 = !{null, !61, !7335, !74, !7336}
!7335 = !DIDerivedType(tag: DW_TAG_typedef, name: "i2c_transaction_type_t", file: !997, line: 160, baseType: !1006)
!7336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7337, size: 32)
!7337 = !DIDerivedType(tag: DW_TAG_typedef, name: "i2c_transaction_size_t", file: !997, line: 176, baseType: !7338)
!7338 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !997, line: 170, size: 160, elements: !7339)
!7339 = !{!7340, !7341, !7342, !7343, !7344}
!7340 = !DIDerivedType(tag: DW_TAG_member, name: "send_size", scope: !7338, file: !997, line: 171, baseType: !61, size: 32)
!7341 = !DIDerivedType(tag: DW_TAG_member, name: "receive_size", scope: !7338, file: !997, line: 172, baseType: !61, size: 32, offset: 32)
!7342 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_length", scope: !7338, file: !997, line: 173, baseType: !61, size: 32, offset: 64)
!7343 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_length_aux", scope: !7338, file: !997, line: 174, baseType: !61, size: 32, offset: 96)
!7344 = !DIDerivedType(tag: DW_TAG_member, name: "transaction_length", scope: !7338, file: !997, line: 175, baseType: !61, size: 32, offset: 128)
!7345 = !{!7346, !7347, !7348, !7349}
!7346 = !DILocalVariable(name: "i2c_port", arg: 1, scope: !7332, file: !984, line: 143, type: !61)
!7347 = !DILocalVariable(name: "transaction_type", arg: 2, scope: !7332, file: !984, line: 143, type: !7335)
!7348 = !DILocalVariable(name: "slave_address", arg: 3, scope: !7332, file: !984, line: 143, type: !74)
!7349 = !DILocalVariable(name: "config_size", arg: 4, scope: !7332, file: !984, line: 143, type: !7336)
!7350 = !DILocation(line: 0, scope: !7332)
!7351 = !DILocation(line: 146, column: 49, scope: !7332)
!7352 = !DILocation(line: 146, column: 5, scope: !7332)
!7353 = !DILocation(line: 146, column: 36, scope: !7332)
!7354 = !DILocation(line: 146, column: 47, scope: !7332)
!7355 = !DILocation(line: 148, column: 5, scope: !7332)
!7356 = !DILocation(line: 150, column: 5, scope: !7332)
!7357 = !DILocation(line: 153, column: 5, scope: !7332)
!7358 = !DILocation(line: 0, scope: !7359)
!7359 = distinct !DILexicalBlock(scope: !7360, file: !984, line: 156, column: 17)
!7360 = distinct !DILexicalBlock(scope: !7332, file: !984, line: 153, column: 31)
!7361 = !DILocation(line: 164, column: 72, scope: !7360)
!7362 = !DILocation(line: 164, column: 59, scope: !7360)
!7363 = !DILocation(line: 164, column: 44, scope: !7360)
!7364 = !DILocation(line: 164, column: 57, scope: !7360)
!7365 = !DILocation(line: 165, column: 44, scope: !7360)
!7366 = !DILocation(line: 165, column: 56, scope: !7360)
!7367 = !DILocation(line: 167, column: 13, scope: !7360)
!7368 = !DILocation(line: 0, scope: !7369)
!7369 = distinct !DILexicalBlock(scope: !7360, file: !984, line: 170, column: 17)
!7370 = !DILocation(line: 177, column: 72, scope: !7360)
!7371 = !DILocation(line: 177, column: 59, scope: !7360)
!7372 = !DILocation(line: 177, column: 44, scope: !7360)
!7373 = !DILocation(line: 177, column: 57, scope: !7360)
!7374 = !DILocation(line: 178, column: 44, scope: !7360)
!7375 = !DILocation(line: 178, column: 56, scope: !7360)
!7376 = !DILocation(line: 180, column: 13, scope: !7360)
!7377 = !DILocation(line: 0, scope: !7378)
!7378 = distinct !DILexicalBlock(scope: !7360, file: !984, line: 183, column: 17)
!7379 = !DILocation(line: 190, column: 72, scope: !7360)
!7380 = !DILocation(line: 190, column: 59, scope: !7360)
!7381 = !DILocation(line: 190, column: 44, scope: !7360)
!7382 = !DILocation(line: 190, column: 57, scope: !7360)
!7383 = !DILocation(line: 191, column: 44, scope: !7360)
!7384 = !DILocation(line: 191, column: 56, scope: !7360)
!7385 = !DILocation(line: 193, column: 13, scope: !7360)
!7386 = !DILocation(line: 0, scope: !7387)
!7387 = distinct !DILexicalBlock(scope: !7360, file: !984, line: 196, column: 17)
!7388 = !DILocation(line: 203, column: 44, scope: !7360)
!7389 = !DILocation(line: 203, column: 57, scope: !7360)
!7390 = !DILocation(line: 204, column: 71, scope: !7360)
!7391 = !DILocation(line: 204, column: 58, scope: !7360)
!7392 = !DILocation(line: 204, column: 44, scope: !7360)
!7393 = !DILocation(line: 204, column: 56, scope: !7360)
!7394 = !DILocation(line: 206, column: 13, scope: !7360)
!7395 = !DILocation(line: 0, scope: !7396)
!7396 = distinct !DILexicalBlock(scope: !7360, file: !984, line: 209, column: 17)
!7397 = !DILocation(line: 216, column: 72, scope: !7360)
!7398 = !DILocation(line: 216, column: 59, scope: !7360)
!7399 = !DILocation(line: 216, column: 44, scope: !7360)
!7400 = !DILocation(line: 216, column: 57, scope: !7360)
!7401 = !DILocation(line: 217, column: 44, scope: !7360)
!7402 = !DILocation(line: 217, column: 56, scope: !7360)
!7403 = !DILocation(line: 218, column: 76, scope: !7360)
!7404 = !DILocation(line: 218, column: 63, scope: !7360)
!7405 = !DILocation(line: 219, column: 13, scope: !7360)
!7406 = !DILocation(line: 0, scope: !7407)
!7407 = distinct !DILexicalBlock(scope: !7360, file: !984, line: 222, column: 17)
!7408 = !DILocation(line: 229, column: 72, scope: !7360)
!7409 = !DILocation(line: 229, column: 59, scope: !7360)
!7410 = !DILocation(line: 229, column: 44, scope: !7360)
!7411 = !DILocation(line: 229, column: 57, scope: !7360)
!7412 = !DILocation(line: 230, column: 75, scope: !7360)
!7413 = !DILocation(line: 230, column: 58, scope: !7360)
!7414 = !DILocation(line: 230, column: 44, scope: !7360)
!7415 = !DILocation(line: 230, column: 56, scope: !7360)
!7416 = !DILocation(line: 232, column: 13, scope: !7360)
!7417 = !DILocation(line: 235, column: 44, scope: !7360)
!7418 = !DILocation(line: 235, column: 54, scope: !7360)
!7419 = !DILocation(line: 236, column: 44, scope: !7360)
!7420 = !DILocation(line: 236, column: 52, scope: !7360)
!7421 = !DILocation(line: 237, column: 72, scope: !7360)
!7422 = !DILocation(line: 237, column: 59, scope: !7360)
!7423 = !DILocation(line: 237, column: 44, scope: !7360)
!7424 = !DILocation(line: 237, column: 57, scope: !7360)
!7425 = !DILocation(line: 238, column: 71, scope: !7360)
!7426 = !DILocation(line: 238, column: 58, scope: !7360)
!7427 = !DILocation(line: 238, column: 44, scope: !7360)
!7428 = !DILocation(line: 238, column: 56, scope: !7360)
!7429 = !DILocation(line: 240, column: 13, scope: !7360)
!7430 = !DILocation(line: 242, column: 44, scope: !7360)
!7431 = !DILocation(line: 242, column: 54, scope: !7360)
!7432 = !DILocation(line: 243, column: 44, scope: !7360)
!7433 = !DILocation(line: 243, column: 52, scope: !7360)
!7434 = !DILocation(line: 244, column: 72, scope: !7360)
!7435 = !DILocation(line: 244, column: 59, scope: !7360)
!7436 = !DILocation(line: 244, column: 44, scope: !7360)
!7437 = !DILocation(line: 244, column: 57, scope: !7360)
!7438 = !DILocation(line: 245, column: 71, scope: !7360)
!7439 = !DILocation(line: 245, column: 58, scope: !7360)
!7440 = !DILocation(line: 245, column: 44, scope: !7360)
!7441 = !DILocation(line: 245, column: 56, scope: !7360)
!7442 = !DILocation(line: 248, column: 13, scope: !7360)
!7443 = !DILocation(line: 250, column: 44, scope: !7360)
!7444 = !DILocation(line: 250, column: 54, scope: !7360)
!7445 = !DILocation(line: 251, column: 44, scope: !7360)
!7446 = !DILocation(line: 251, column: 52, scope: !7360)
!7447 = !DILocation(line: 252, column: 72, scope: !7360)
!7448 = !DILocation(line: 252, column: 59, scope: !7360)
!7449 = !DILocation(line: 252, column: 44, scope: !7360)
!7450 = !DILocation(line: 252, column: 57, scope: !7360)
!7451 = !DILocation(line: 253, column: 71, scope: !7360)
!7452 = !DILocation(line: 253, column: 58, scope: !7360)
!7453 = !DILocation(line: 253, column: 44, scope: !7360)
!7454 = !DILocation(line: 253, column: 56, scope: !7360)
!7455 = !DILocation(line: 254, column: 76, scope: !7360)
!7456 = !DILocation(line: 254, column: 63, scope: !7360)
!7457 = !DILocation(line: 255, column: 13, scope: !7360)
!7458 = !DILocation(line: 0, scope: !7360)
!7459 = !DILocation(line: 261, column: 1, scope: !7332)
!7460 = distinct !DISubprogram(name: "i2c_write_fifo", scope: !984, file: !984, line: 266, type: !7461, scopeLine: 267, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !983, retainedNodes: !7463)
!7461 = !DISubroutineType(types: !7462)
!7462 = !{null, !61, !6469, !61}
!7463 = !{!7464, !7465, !7466, !7467}
!7464 = !DILocalVariable(name: "i2c_port", arg: 1, scope: !7460, file: !984, line: 266, type: !61)
!7465 = !DILocalVariable(name: "data", arg: 2, scope: !7460, file: !984, line: 266, type: !6469)
!7466 = !DILocalVariable(name: "size", arg: 3, scope: !7460, file: !984, line: 266, type: !61)
!7467 = !DILocalVariable(name: "i", scope: !7460, file: !984, line: 268, type: !61)
!7468 = !DILocation(line: 0, scope: !7460)
!7469 = !DILocation(line: 269, column: 19, scope: !7470)
!7470 = distinct !DILexicalBlock(scope: !7471, file: !984, line: 269, column: 5)
!7471 = distinct !DILexicalBlock(scope: !7460, file: !984, line: 269, column: 5)
!7472 = !DILocation(line: 269, column: 5, scope: !7471)
!7473 = !DILocation(line: 270, column: 59, scope: !7474)
!7474 = distinct !DILexicalBlock(scope: !7470, file: !984, line: 269, column: 32)
!7475 = !DILocation(line: 270, column: 52, scope: !7474)
!7476 = !DILocation(line: 270, column: 50, scope: !7474)
!7477 = !DILocation(line: 269, column: 28, scope: !7470)
!7478 = distinct !{!7478, !7472, !7479}
!7479 = !DILocation(line: 271, column: 5, scope: !7471)
!7480 = !DILocation(line: 272, column: 1, scope: !7460)
!7481 = distinct !DISubprogram(name: "i2c_read_fifo", scope: !984, file: !984, line: 274, type: !7482, scopeLine: 275, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !983, retainedNodes: !7484)
!7482 = !DISubroutineType(types: !7483)
!7483 = !{null, !61, !872, !61}
!7484 = !{!7485, !7486, !7487, !7488}
!7485 = !DILocalVariable(name: "i2c_port", arg: 1, scope: !7481, file: !984, line: 274, type: !61)
!7486 = !DILocalVariable(name: "buffer", arg: 2, scope: !7481, file: !984, line: 274, type: !872)
!7487 = !DILocalVariable(name: "size", arg: 3, scope: !7481, file: !984, line: 274, type: !61)
!7488 = !DILocalVariable(name: "i", scope: !7481, file: !984, line: 276, type: !61)
!7489 = !DILocation(line: 0, scope: !7481)
!7490 = !DILocation(line: 277, column: 19, scope: !7491)
!7491 = distinct !DILexicalBlock(scope: !7492, file: !984, line: 277, column: 5)
!7492 = distinct !DILexicalBlock(scope: !7481, file: !984, line: 277, column: 5)
!7493 = !DILocation(line: 277, column: 5, scope: !7492)
!7494 = !DILocation(line: 278, column: 56, scope: !7495)
!7495 = distinct !DILexicalBlock(scope: !7491, file: !984, line: 277, column: 32)
!7496 = !DILocation(line: 278, column: 25, scope: !7495)
!7497 = !DILocation(line: 278, column: 18, scope: !7495)
!7498 = !DILocation(line: 278, column: 23, scope: !7495)
!7499 = !DILocation(line: 277, column: 28, scope: !7491)
!7500 = distinct !{!7500, !7493, !7501}
!7501 = !DILocation(line: 279, column: 5, scope: !7492)
!7502 = !DILocation(line: 280, column: 1, scope: !7481)
!7503 = distinct !DISubprogram(name: "i2c_get_transaction_status", scope: !984, file: !984, line: 282, type: !7504, scopeLine: 283, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !983, retainedNodes: !7507)
!7504 = !DISubroutineType(types: !7505)
!7505 = !{!7506, !61}
!7506 = !DIDerivedType(tag: DW_TAG_typedef, name: "i2c_transaction_status_t", file: !997, line: 168, baseType: !1023)
!7507 = !{!7508, !7509, !7510}
!7508 = !DILocalVariable(name: "i2c_port", arg: 1, scope: !7503, file: !984, line: 282, type: !61)
!7509 = !DILocalVariable(name: "register_value", scope: !7503, file: !984, line: 284, type: !1041)
!7510 = !DILocalVariable(name: "return_status", scope: !7503, file: !984, line: 285, type: !7506)
!7511 = !DILocation(line: 0, scope: !7503)
!7512 = !DILocation(line: 287, column: 22, scope: !7503)
!7513 = !DILocation(line: 287, column: 53, scope: !7503)
!7514 = !DILocation(line: 289, column: 15, scope: !7515)
!7515 = distinct !DILexicalBlock(scope: !7503, file: !984, line: 289, column: 9)
!7516 = !DILocation(line: 289, column: 30, scope: !7515)
!7517 = !DILocation(line: 289, column: 11, scope: !7515)
!7518 = !DILocation(line: 289, column: 9, scope: !7503)
!7519 = !DILocation(line: 291, column: 37, scope: !7520)
!7520 = distinct !DILexicalBlock(scope: !7515, file: !984, line: 291, column: 16)
!7521 = !DILocation(line: 291, column: 18, scope: !7520)
!7522 = !DILocation(line: 291, column: 16, scope: !7515)
!7523 = !DILocation(line: 293, column: 37, scope: !7524)
!7524 = distinct !DILexicalBlock(scope: !7520, file: !984, line: 293, column: 16)
!7525 = !DILocation(line: 293, column: 18, scope: !7524)
!7526 = !DILocation(line: 293, column: 16, scope: !7520)
!7527 = !DILocation(line: 295, column: 20, scope: !7528)
!7528 = distinct !DILexicalBlock(scope: !7524, file: !984, line: 295, column: 16)
!7529 = !DILocation(line: 295, column: 16, scope: !7524)
!7530 = !DILocation(line: 318, column: 5, scope: !7503)
!7531 = !DILocation(line: 319, column: 5, scope: !7503)
!7532 = distinct !DISubprogram(name: "pmic_i2c_init", scope: !3208, file: !3208, line: 54, type: !7533, scopeLine: 55, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3207, retainedNodes: !7542)
!7533 = !DISubroutineType(types: !7534)
!7534 = !{!3225, !7535, !7536}
!7535 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmic_i2c_port_t", file: !2375, line: 61, baseType: !2374)
!7536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7537, size: 32)
!7537 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7538)
!7538 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmic_i2c_config_t", file: !2375, line: 92, baseType: !7539)
!7539 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2375, line: 90, size: 32, elements: !7540)
!7540 = !{!7541}
!7541 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_frequency", scope: !7539, file: !2375, line: 91, baseType: !61, size: 32)
!7542 = !{!7543, !7544}
!7543 = !DILocalVariable(name: "i2c_port", arg: 1, scope: !7532, file: !3208, line: 54, type: !7535)
!7544 = !DILocalVariable(name: "i2c_config", arg: 2, scope: !7532, file: !3208, line: 54, type: !7536)
!7545 = !DILocation(line: 0, scope: !7532)
!7546 = !DILocation(line: 57, column: 29, scope: !7547)
!7547 = distinct !DILexicalBlock(scope: !7532, file: !3208, line: 57, column: 9)
!7548 = !DILocation(line: 57, column: 9, scope: !7532)
!7549 = !DILocation(line: 62, column: 22, scope: !7532)
!7550 = !DILocation(line: 62, column: 5, scope: !7532)
!7551 = !DILocation(line: 66, column: 70, scope: !7532)
!7552 = !DILocation(line: 66, column: 5, scope: !7532)
!7553 = !DILocation(line: 69, column: 23, scope: !7532)
!7554 = !DILocation(line: 69, column: 5, scope: !7532)
!7555 = !DILocation(line: 72, column: 5, scope: !7532)
!7556 = !DILocation(line: 73, column: 1, scope: !7532)
!7557 = distinct !DISubprogram(name: "pmic_i2c_send_polling", scope: !3208, file: !3208, line: 76, type: !7558, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3207, retainedNodes: !7560)
!7558 = !DISubroutineType(types: !7559)
!7559 = !{!3225, !7535, !74, !6469, !61}
!7560 = !{!7561, !7562, !7563, !7564, !7565, !7566}
!7561 = !DILocalVariable(name: "i2c_port", arg: 1, scope: !7557, file: !3208, line: 76, type: !7535)
!7562 = !DILocalVariable(name: "slave_address", arg: 2, scope: !7557, file: !3208, line: 76, type: !74)
!7563 = !DILocalVariable(name: "data", arg: 3, scope: !7557, file: !3208, line: 76, type: !6469)
!7564 = !DILocalVariable(name: "size", arg: 4, scope: !7557, file: !3208, line: 76, type: !61)
!7565 = !DILocalVariable(name: "transaction_status", scope: !7557, file: !3208, line: 78, type: !7506)
!7566 = !DILocalVariable(name: "config_size", scope: !7557, file: !3208, line: 79, type: !7567)
!7567 = !DIDerivedType(tag: DW_TAG_typedef, name: "i2c_transaction_size_t", file: !997, line: 176, baseType: !7568)
!7568 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !997, line: 170, size: 160, elements: !7569)
!7569 = !{!7570, !7571, !7572, !7573, !7574}
!7570 = !DIDerivedType(tag: DW_TAG_member, name: "send_size", scope: !7568, file: !997, line: 171, baseType: !61, size: 32)
!7571 = !DIDerivedType(tag: DW_TAG_member, name: "receive_size", scope: !7568, file: !997, line: 172, baseType: !61, size: 32, offset: 32)
!7572 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_length", scope: !7568, file: !997, line: 173, baseType: !61, size: 32, offset: 64)
!7573 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_length_aux", scope: !7568, file: !997, line: 174, baseType: !61, size: 32, offset: 96)
!7574 = !DIDerivedType(tag: DW_TAG_member, name: "transaction_length", scope: !7568, file: !997, line: 175, baseType: !61, size: 32, offset: 128)
!7575 = !DILocation(line: 0, scope: !7557)
!7576 = !DILocation(line: 79, column: 5, scope: !7557)
!7577 = !DILocation(line: 79, column: 28, scope: !7557)
!7578 = !DILocation(line: 81, column: 29, scope: !7579)
!7579 = distinct !DILexicalBlock(scope: !7557, file: !3208, line: 81, column: 9)
!7580 = !DILocation(line: 81, column: 9, scope: !7557)
!7581 = !DILocation(line: 84, column: 14, scope: !7582)
!7582 = distinct !DILexicalBlock(scope: !7557, file: !3208, line: 84, column: 9)
!7583 = !DILocation(line: 84, column: 22, scope: !7582)
!7584 = !DILocation(line: 89, column: 22, scope: !7557)
!7585 = !DILocation(line: 89, column: 5, scope: !7557)
!7586 = !DILocation(line: 93, column: 5, scope: !7557)
!7587 = !DILocation(line: 96, column: 17, scope: !7557)
!7588 = !DILocation(line: 96, column: 27, scope: !7557)
!7589 = !DILocation(line: 97, column: 17, scope: !7557)
!7590 = !DILocation(line: 97, column: 30, scope: !7557)
!7591 = !DILocation(line: 104, column: 100, scope: !7557)
!7592 = !DILocation(line: 104, column: 5, scope: !7557)
!7593 = !DILocation(line: 108, column: 5, scope: !7557)
!7594 = !DILocation(line: 111, column: 5, scope: !7557)
!7595 = !DILocation(line: 114, column: 5, scope: !7557)
!7596 = !DILocation(line: 114, column: 17, scope: !7557)
!7597 = !DILocation(line: 114, column: 14, scope: !7557)
!7598 = distinct !{!7598, !7595, !7599}
!7599 = !DILocation(line: 115, column: 5, scope: !7557)
!7600 = !DILocation(line: 118, column: 26, scope: !7557)
!7601 = !DILocation(line: 121, column: 23, scope: !7557)
!7602 = !DILocation(line: 121, column: 5, scope: !7557)
!7603 = !DILocation(line: 124, column: 33, scope: !7604)
!7604 = distinct !DILexicalBlock(scope: !7557, file: !3208, line: 124, column: 9)
!7605 = !DILocation(line: 124, column: 9, scope: !7557)
!7606 = !DILocation(line: 126, column: 9, scope: !7607)
!7607 = distinct !DILexicalBlock(scope: !7604, file: !3208, line: 124, column: 56)
!7608 = !DILocation(line: 127, column: 9, scope: !7607)
!7609 = !DILocation(line: 131, column: 1, scope: !7557)
!7610 = distinct !DISubprogram(name: "pmic_i2c_receive_polling", scope: !3208, file: !3208, line: 134, type: !7611, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3207, retainedNodes: !7613)
!7611 = !DISubroutineType(types: !7612)
!7612 = !{!3225, !7535, !74, !872, !61}
!7613 = !{!7614, !7615, !7616, !7617, !7618, !7619}
!7614 = !DILocalVariable(name: "i2c_port", arg: 1, scope: !7610, file: !3208, line: 134, type: !7535)
!7615 = !DILocalVariable(name: "slave_address", arg: 2, scope: !7610, file: !3208, line: 134, type: !74)
!7616 = !DILocalVariable(name: "buffer", arg: 3, scope: !7610, file: !3208, line: 134, type: !872)
!7617 = !DILocalVariable(name: "size", arg: 4, scope: !7610, file: !3208, line: 134, type: !61)
!7618 = !DILocalVariable(name: "transaction_status", scope: !7610, file: !3208, line: 136, type: !7506)
!7619 = !DILocalVariable(name: "config_size", scope: !7610, file: !3208, line: 137, type: !7567)
!7620 = !DILocation(line: 0, scope: !7610)
!7621 = !DILocation(line: 137, column: 5, scope: !7610)
!7622 = !DILocation(line: 137, column: 28, scope: !7610)
!7623 = !DILocation(line: 139, column: 29, scope: !7624)
!7624 = distinct !DILexicalBlock(scope: !7610, file: !3208, line: 139, column: 9)
!7625 = !DILocation(line: 139, column: 9, scope: !7610)
!7626 = !DILocation(line: 142, column: 14, scope: !7627)
!7627 = distinct !DILexicalBlock(scope: !7610, file: !3208, line: 142, column: 9)
!7628 = !DILocation(line: 142, column: 24, scope: !7627)
!7629 = !DILocation(line: 147, column: 22, scope: !7610)
!7630 = !DILocation(line: 147, column: 5, scope: !7610)
!7631 = !DILocation(line: 151, column: 5, scope: !7610)
!7632 = !DILocation(line: 154, column: 17, scope: !7610)
!7633 = !DILocation(line: 154, column: 27, scope: !7610)
!7634 = !DILocation(line: 155, column: 17, scope: !7610)
!7635 = !DILocation(line: 155, column: 30, scope: !7610)
!7636 = !DILocation(line: 162, column: 103, scope: !7610)
!7637 = !DILocation(line: 162, column: 5, scope: !7610)
!7638 = !DILocation(line: 165, column: 5, scope: !7610)
!7639 = !DILocation(line: 168, column: 5, scope: !7610)
!7640 = !DILocation(line: 168, column: 17, scope: !7610)
!7641 = !DILocation(line: 168, column: 14, scope: !7610)
!7642 = distinct !{!7642, !7639, !7643}
!7643 = !DILocation(line: 169, column: 5, scope: !7610)
!7644 = !DILocation(line: 172, column: 26, scope: !7610)
!7645 = !DILocation(line: 175, column: 33, scope: !7646)
!7646 = distinct !DILexicalBlock(scope: !7610, file: !3208, line: 175, column: 9)
!7647 = !DILocation(line: 175, column: 9, scope: !7610)
!7648 = !DILocation(line: 183, column: 9, scope: !7649)
!7649 = distinct !DILexicalBlock(scope: !7646, file: !3208, line: 182, column: 12)
!7650 = !DILocation(line: 189, column: 9, scope: !7649)
!7651 = !DILocation(line: 0, scope: !7646)
!7652 = !DILocation(line: 191, column: 1, scope: !7610)
!7653 = distinct !DISubprogram(name: "pmic_i2c_send_to_receive_polling", scope: !3208, file: !3208, line: 194, type: !7654, scopeLine: 195, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3207, retainedNodes: !7665)
!7654 = !DISubroutineType(types: !7655)
!7655 = !{!3225, !7535, !7656}
!7656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7657, size: 32)
!7657 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmic_i2c_send_to_receive_config_t", file: !2375, line: 100, baseType: !7658)
!7658 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2375, line: 94, size: 160, elements: !7659)
!7659 = !{!7660, !7661, !7662, !7663, !7664}
!7660 = !DIDerivedType(tag: DW_TAG_member, name: "slave_address", scope: !7658, file: !2375, line: 95, baseType: !74, size: 8)
!7661 = !DIDerivedType(tag: DW_TAG_member, name: "send_data", scope: !7658, file: !2375, line: 96, baseType: !6469, size: 32, offset: 32)
!7662 = !DIDerivedType(tag: DW_TAG_member, name: "send_length", scope: !7658, file: !2375, line: 97, baseType: !61, size: 32, offset: 64)
!7663 = !DIDerivedType(tag: DW_TAG_member, name: "receive_buffer", scope: !7658, file: !2375, line: 98, baseType: !872, size: 32, offset: 96)
!7664 = !DIDerivedType(tag: DW_TAG_member, name: "receive_length", scope: !7658, file: !2375, line: 99, baseType: !61, size: 32, offset: 128)
!7665 = !{!7666, !7667, !7668, !7669}
!7666 = !DILocalVariable(name: "i2c_port", arg: 1, scope: !7653, file: !3208, line: 194, type: !7535)
!7667 = !DILocalVariable(name: "i2c_send_to_receive_config", arg: 2, scope: !7653, file: !3208, line: 194, type: !7656)
!7668 = !DILocalVariable(name: "transaction_status", scope: !7653, file: !3208, line: 196, type: !7506)
!7669 = !DILocalVariable(name: "config_size", scope: !7653, file: !3208, line: 197, type: !7567)
!7670 = !DILocation(line: 0, scope: !7653)
!7671 = !DILocation(line: 197, column: 5, scope: !7653)
!7672 = !DILocation(line: 197, column: 28, scope: !7653)
!7673 = !DILocation(line: 198, column: 29, scope: !7674)
!7674 = distinct !DILexicalBlock(scope: !7653, file: !3208, line: 198, column: 9)
!7675 = !DILocation(line: 198, column: 9, scope: !7653)
!7676 = !DILocation(line: 201, column: 45, scope: !7677)
!7677 = distinct !DILexicalBlock(scope: !7653, file: !3208, line: 201, column: 9)
!7678 = !DILocation(line: 201, column: 14, scope: !7677)
!7679 = !DILocation(line: 201, column: 55, scope: !7677)
!7680 = !DILocation(line: 201, column: 94, scope: !7677)
!7681 = !DILocation(line: 201, column: 63, scope: !7677)
!7682 = !DILocation(line: 201, column: 9, scope: !7653)
!7683 = !DILocation(line: 204, column: 37, scope: !7684)
!7684 = distinct !DILexicalBlock(scope: !7653, file: !3208, line: 204, column: 9)
!7685 = !DILocation(line: 204, column: 49, scope: !7684)
!7686 = !DILocation(line: 204, column: 66, scope: !7684)
!7687 = !DILocation(line: 204, column: 97, scope: !7684)
!7688 = !DILocation(line: 204, column: 112, scope: !7684)
!7689 = !DILocation(line: 204, column: 9, scope: !7653)
!7690 = !DILocation(line: 209, column: 22, scope: !7653)
!7691 = !DILocation(line: 209, column: 5, scope: !7653)
!7692 = !DILocation(line: 212, column: 5, scope: !7653)
!7693 = !DILocation(line: 213, column: 57, scope: !7653)
!7694 = !DILocation(line: 213, column: 17, scope: !7653)
!7695 = !DILocation(line: 213, column: 27, scope: !7653)
!7696 = !DILocation(line: 214, column: 60, scope: !7653)
!7697 = !DILocation(line: 214, column: 17, scope: !7653)
!7698 = !DILocation(line: 214, column: 30, scope: !7653)
!7699 = !DILocation(line: 218, column: 111, scope: !7653)
!7700 = !DILocation(line: 218, column: 5, scope: !7653)
!7701 = !DILocation(line: 220, column: 83, scope: !7653)
!7702 = !DILocation(line: 220, column: 122, scope: !7653)
!7703 = !DILocation(line: 220, column: 5, scope: !7653)
!7704 = !DILocation(line: 221, column: 5, scope: !7653)
!7705 = !DILocation(line: 222, column: 5, scope: !7653)
!7706 = !DILocation(line: 222, column: 17, scope: !7653)
!7707 = !DILocation(line: 222, column: 14, scope: !7653)
!7708 = distinct !{!7708, !7705, !7709}
!7709 = !DILocation(line: 223, column: 5, scope: !7653)
!7710 = !DILocation(line: 224, column: 26, scope: !7653)
!7711 = !DILocation(line: 225, column: 33, scope: !7712)
!7712 = distinct !DILexicalBlock(scope: !7653, file: !3208, line: 225, column: 9)
!7713 = !DILocation(line: 225, column: 9, scope: !7653)
!7714 = !DILocation(line: 227, column: 9, scope: !7715)
!7715 = distinct !DILexicalBlock(scope: !7712, file: !3208, line: 225, column: 56)
!7716 = !DILocation(line: 233, column: 9, scope: !7715)
!7717 = !DILocation(line: 235, column: 86, scope: !7718)
!7718 = distinct !DILexicalBlock(scope: !7712, file: !3208, line: 234, column: 12)
!7719 = !DILocation(line: 235, column: 130, scope: !7718)
!7720 = !DILocation(line: 235, column: 9, scope: !7718)
!7721 = !DILocation(line: 241, column: 9, scope: !7718)
!7722 = !DILocation(line: 0, scope: !7712)
!7723 = !DILocation(line: 243, column: 1, scope: !7653)
!7724 = distinct !DISubprogram(name: "eint_ack_interrupt", scope: !1108, file: !1108, line: 77, type: !7725, scopeLine: 78, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1107, retainedNodes: !7727)
!7725 = !DISubroutineType(types: !7726)
!7726 = !{null, !61}
!7727 = !{!7728}
!7728 = !DILocalVariable(name: "eint_number", arg: 1, scope: !7724, file: !1108, line: 77, type: !61)
!7729 = !DILocation(line: 0, scope: !7724)
!7730 = !DILocation(line: 79, column: 37, scope: !7724)
!7731 = !DILocation(line: 79, column: 5, scope: !7724)
!7732 = !DILocation(line: 79, column: 20, scope: !7724)
!7733 = !DILocation(line: 79, column: 32, scope: !7724)
!7734 = !DILocation(line: 80, column: 1, scope: !7724)
!7735 = !DILocation(line: 0, scope: !1173)
!7736 = !DILocation(line: 136, column: 9, scope: !7737)
!7737 = distinct !DILexicalBlock(scope: !1173, file: !1108, line: 136, column: 9)
!7738 = !DILocation(line: 136, column: 9, scope: !1173)
!7739 = !DILocation(line: 137, column: 9, scope: !7740)
!7740 = distinct !DILexicalBlock(scope: !7737, file: !1108, line: 136, column: 25)
!7741 = !DILocation(line: 138, column: 9, scope: !7740)
!7742 = !DILocation(line: 139, column: 19, scope: !7740)
!7743 = !DILocation(line: 140, column: 5, scope: !7740)
!7744 = !DILocation(line: 142, column: 21, scope: !7745)
!7745 = distinct !DILexicalBlock(scope: !1173, file: !1108, line: 142, column: 9)
!7746 = !DILocation(line: 142, column: 44, scope: !7745)
!7747 = !DILocation(line: 146, column: 12, scope: !1173)
!7748 = !DILocation(line: 147, column: 38, scope: !1173)
!7749 = !DILocation(line: 147, column: 52, scope: !1173)
!7750 = !DILocation(line: 148, column: 38, scope: !1173)
!7751 = !DILocation(line: 148, column: 48, scope: !1173)
!7752 = !DILocation(line: 150, column: 66, scope: !1173)
!7753 = !DILocation(line: 150, column: 14, scope: !1173)
!7754 = !DILocation(line: 151, column: 68, scope: !1173)
!7755 = !DILocation(line: 151, column: 15, scope: !1173)
!7756 = !DILocation(line: 151, column: 12, scope: !1173)
!7757 = !DILocation(line: 153, column: 5, scope: !1173)
!7758 = !DILocation(line: 155, column: 5, scope: !1173)
!7759 = !DILocation(line: 156, column: 5, scope: !1173)
!7760 = !DILocation(line: 157, column: 5, scope: !1173)
!7761 = !DILocation(line: 158, column: 1, scope: !1173)
!7762 = distinct !DISubprogram(name: "hal_eint_isr", scope: !1108, file: !1108, line: 404, type: !7725, scopeLine: 405, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1107, retainedNodes: !7763)
!7763 = !{!7764, !7765, !7766}
!7764 = !DILocalVariable(name: "index", arg: 1, scope: !7762, file: !1108, line: 404, type: !61)
!7765 = !DILocalVariable(name: "status", scope: !7762, file: !1108, line: 406, type: !61)
!7766 = !DILocalVariable(name: "eint_index", scope: !7762, file: !1108, line: 407, type: !61)
!7767 = !DILocation(line: 0, scope: !7762)
!7768 = !DILocation(line: 409, column: 14, scope: !7762)
!7769 = !DILocation(line: 410, column: 16, scope: !7770)
!7770 = distinct !DILexicalBlock(scope: !7762, file: !1108, line: 410, column: 9)
!7771 = !DILocation(line: 410, column: 9, scope: !7762)
!7772 = !DILocation(line: 415, column: 25, scope: !7773)
!7773 = distinct !DILexicalBlock(scope: !7774, file: !1108, line: 415, column: 13)
!7774 = distinct !DILexicalBlock(scope: !7775, file: !1108, line: 414, column: 74)
!7775 = distinct !DILexicalBlock(scope: !7776, file: !1108, line: 414, column: 5)
!7776 = distinct !DILexicalBlock(scope: !7762, file: !1108, line: 414, column: 5)
!7777 = !DILocation(line: 415, column: 20, scope: !7773)
!7778 = !DILocation(line: 415, column: 13, scope: !7774)
!7779 = !DILocation(line: 416, column: 13, scope: !7780)
!7780 = distinct !DILexicalBlock(scope: !7773, file: !1108, line: 415, column: 41)
!7781 = !DILocation(line: 417, column: 13, scope: !7780)
!7782 = !DILocation(line: 418, column: 49, scope: !7783)
!7783 = distinct !DILexicalBlock(scope: !7780, file: !1108, line: 418, column: 17)
!7784 = !DILocation(line: 418, column: 17, scope: !7783)
!7785 = !DILocation(line: 418, column: 17, scope: !7780)
!7786 = !DILocation(line: 419, column: 95, scope: !7787)
!7787 = distinct !DILexicalBlock(scope: !7783, file: !1108, line: 418, column: 64)
!7788 = !DILocation(line: 419, column: 17, scope: !7787)
!7789 = !DILocation(line: 420, column: 13, scope: !7787)
!7790 = !DILocation(line: 421, column: 17, scope: !7791)
!7791 = distinct !DILexicalBlock(scope: !7783, file: !1108, line: 420, column: 20)
!7792 = !DILocation(line: 414, column: 70, scope: !7775)
!7793 = !DILocation(line: 414, column: 37, scope: !7775)
!7794 = !DILocation(line: 414, column: 5, scope: !7776)
!7795 = distinct !{!7795, !7794, !7796}
!7796 = !DILocation(line: 424, column: 5, scope: !7776)
!7797 = !DILocation(line: 425, column: 1, scope: !7762)
!7798 = distinct !DISubprogram(name: "hal_eint_set_trigger_mode", scope: !1108, file: !1108, line: 204, type: !7799, scopeLine: 206, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1107, retainedNodes: !7801)
!7799 = !DISubroutineType(types: !7800)
!7800 = !{!1176, !1169, !1183}
!7801 = !{!7802, !7803, !7804}
!7802 = !DILocalVariable(name: "eint_number", arg: 1, scope: !7798, file: !1108, line: 204, type: !1169)
!7803 = !DILocalVariable(name: "trigger_mode", arg: 2, scope: !7798, file: !1108, line: 205, type: !1183)
!7804 = !DILocalVariable(name: "mask", scope: !7798, file: !1108, line: 207, type: !61)
!7805 = !DILocation(line: 0, scope: !7798)
!7806 = !DILocation(line: 209, column: 21, scope: !7807)
!7807 = distinct !DILexicalBlock(scope: !7798, file: !1108, line: 209, column: 9)
!7808 = !DILocation(line: 209, column: 9, scope: !7798)
!7809 = !DILocation(line: 213, column: 12, scope: !7798)
!7810 = !DILocation(line: 214, column: 9, scope: !7798)
!7811 = !DILocation(line: 215, column: 46, scope: !7812)
!7812 = distinct !DILexicalBlock(scope: !7813, file: !1108, line: 214, column: 45)
!7813 = distinct !DILexicalBlock(scope: !7798, file: !1108, line: 214, column: 9)
!7814 = !DILocation(line: 215, column: 10, scope: !7812)
!7815 = !DILocation(line: 215, column: 25, scope: !7812)
!7816 = !DILocation(line: 215, column: 40, scope: !7812)
!7817 = !DILocation(line: 216, column: 60, scope: !7812)
!7818 = !DILocation(line: 216, column: 72, scope: !7812)
!7819 = !DILocation(line: 217, column: 5, scope: !7812)
!7820 = !DILocation(line: 218, column: 46, scope: !7821)
!7821 = distinct !DILexicalBlock(scope: !7822, file: !1108, line: 217, column: 53)
!7822 = distinct !DILexicalBlock(scope: !7813, file: !1108, line: 217, column: 16)
!7823 = !DILocation(line: 218, column: 10, scope: !7821)
!7824 = !DILocation(line: 218, column: 25, scope: !7821)
!7825 = !DILocation(line: 218, column: 40, scope: !7821)
!7826 = !DILocation(line: 219, column: 60, scope: !7821)
!7827 = !DILocation(line: 219, column: 72, scope: !7821)
!7828 = !DILocation(line: 220, column: 5, scope: !7821)
!7829 = !DILocation(line: 221, column: 46, scope: !7830)
!7830 = distinct !DILexicalBlock(scope: !7831, file: !1108, line: 220, column: 55)
!7831 = distinct !DILexicalBlock(scope: !7822, file: !1108, line: 220, column: 16)
!7832 = !DILocation(line: 221, column: 10, scope: !7830)
!7833 = !DILocation(line: 221, column: 25, scope: !7830)
!7834 = !DILocation(line: 221, column: 40, scope: !7830)
!7835 = !DILocation(line: 222, column: 60, scope: !7830)
!7836 = !DILocation(line: 222, column: 72, scope: !7830)
!7837 = !DILocation(line: 223, column: 5, scope: !7830)
!7838 = !DILocation(line: 224, column: 46, scope: !7839)
!7839 = distinct !DILexicalBlock(scope: !7840, file: !1108, line: 223, column: 54)
!7840 = distinct !DILexicalBlock(scope: !7831, file: !1108, line: 223, column: 16)
!7841 = !DILocation(line: 224, column: 10, scope: !7839)
!7842 = !DILocation(line: 224, column: 25, scope: !7839)
!7843 = !DILocation(line: 224, column: 40, scope: !7839)
!7844 = !DILocation(line: 225, column: 60, scope: !7839)
!7845 = !DILocation(line: 225, column: 72, scope: !7839)
!7846 = !DILocation(line: 226, column: 5, scope: !7839)
!7847 = !DILocation(line: 228, column: 46, scope: !7848)
!7848 = distinct !DILexicalBlock(scope: !7849, file: !1108, line: 226, column: 66)
!7849 = distinct !DILexicalBlock(scope: !7840, file: !1108, line: 226, column: 16)
!7850 = !DILocation(line: 228, column: 10, scope: !7848)
!7851 = !DILocation(line: 228, column: 25, scope: !7848)
!7852 = !DILocation(line: 228, column: 40, scope: !7848)
!7853 = !DILocation(line: 229, column: 25, scope: !7848)
!7854 = !DILocation(line: 229, column: 49, scope: !7848)
!7855 = !DILocation(line: 237, column: 1, scope: !7798)
!7856 = distinct !DISubprogram(name: "hal_eint_set_debounce_time", scope: !1108, file: !1108, line: 239, type: !7857, scopeLine: 240, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1107, retainedNodes: !7859)
!7857 = !DISubroutineType(types: !7858)
!7858 = !{!1176, !1169, !61}
!7859 = !{!7860, !7861, !7862, !7863, !7864}
!7860 = !DILocalVariable(name: "eint_number", arg: 1, scope: !7856, file: !1108, line: 239, type: !1169)
!7861 = !DILocalVariable(name: "time_ms", arg: 2, scope: !7856, file: !1108, line: 239, type: !61)
!7862 = !DILocalVariable(name: "mask", scope: !7856, file: !1108, line: 241, type: !61)
!7863 = !DILocalVariable(name: "count", scope: !7856, file: !1108, line: 241, type: !61)
!7864 = !DILocalVariable(name: "eint_con", scope: !7856, file: !1108, line: 241, type: !61)
!7865 = !DILocation(line: 0, scope: !7856)
!7866 = !DILocation(line: 243, column: 21, scope: !7867)
!7867 = distinct !DILexicalBlock(scope: !7856, file: !1108, line: 243, column: 9)
!7868 = !DILocation(line: 243, column: 9, scope: !7856)
!7869 = !DILocation(line: 247, column: 13, scope: !7856)
!7870 = !DILocation(line: 248, column: 12, scope: !7856)
!7871 = !DILocation(line: 249, column: 16, scope: !7856)
!7872 = !DILocation(line: 249, column: 66, scope: !7856)
!7873 = !DILocation(line: 250, column: 14, scope: !7856)
!7874 = !DILocation(line: 251, column: 14, scope: !7856)
!7875 = !DILocation(line: 253, column: 17, scope: !7876)
!7876 = distinct !DILexicalBlock(scope: !7856, file: !1108, line: 253, column: 9)
!7877 = !DILocation(line: 253, column: 9, scope: !7856)
!7878 = !DILocation(line: 255, column: 18, scope: !7879)
!7879 = distinct !DILexicalBlock(scope: !7876, file: !1108, line: 253, column: 23)
!7880 = !DILocation(line: 256, column: 70, scope: !7879)
!7881 = !DILocation(line: 258, column: 5, scope: !7879)
!7882 = !DILocation(line: 260, column: 81, scope: !7883)
!7883 = distinct !DILexicalBlock(scope: !7876, file: !1108, line: 259, column: 10)
!7884 = !DILocation(line: 260, column: 70, scope: !7883)
!7885 = !DILocation(line: 261, column: 9, scope: !7883)
!7886 = !DILocation(line: 263, column: 9, scope: !7883)
!7887 = !DILocation(line: 263, column: 59, scope: !7883)
!7888 = !DILocation(line: 263, column: 70, scope: !7883)
!7889 = !DILocation(line: 264, column: 9, scope: !7883)
!7890 = !DILocation(line: 264, column: 59, scope: !7883)
!7891 = !DILocation(line: 264, column: 70, scope: !7883)
!7892 = !DILocation(line: 267, column: 5, scope: !7856)
!7893 = !DILocation(line: 269, column: 5, scope: !7856)
!7894 = !DILocation(line: 270, column: 1, scope: !7856)
!7895 = distinct !DISubprogram(name: "eint_enable_domain", scope: !1108, file: !1108, line: 63, type: !7896, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1107, retainedNodes: !7899)
!7896 = !DISubroutineType(types: !7897)
!7897 = !{null, !61, !7898}
!7898 = !DIDerivedType(tag: DW_TAG_typedef, name: "eint_domain_status_t", file: !1160, line: 62, baseType: !1159)
!7899 = !{!7900, !7901}
!7900 = !DILocalVariable(name: "eint_no", arg: 1, scope: !7895, file: !1108, line: 63, type: !61)
!7901 = !DILocalVariable(name: "enable", arg: 2, scope: !7895, file: !1108, line: 63, type: !7898)
!7902 = !DILocation(line: 0, scope: !7895)
!7903 = !DILocation(line: 68, column: 46, scope: !7904)
!7904 = distinct !DILexicalBlock(scope: !7905, file: !1108, line: 67, column: 12)
!7905 = distinct !DILexicalBlock(scope: !7895, file: !1108, line: 65, column: 9)
!7906 = !DILocation(line: 68, column: 9, scope: !7904)
!7907 = !DILocation(line: 68, column: 24, scope: !7904)
!7908 = !DILocation(line: 68, column: 35, scope: !7904)
!7909 = !DILocation(line: 70, column: 1, scope: !7895)
!7910 = distinct !DISubprogram(name: "eint_caculate_debounce_time", scope: !1108, file: !1108, line: 82, type: !3922, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1107, retainedNodes: !7911)
!7911 = !{!7912, !7913, !7914}
!7912 = !DILocalVariable(name: "ms", arg: 1, scope: !7910, file: !1108, line: 82, type: !61)
!7913 = !DILocalVariable(name: "prescaler", scope: !7910, file: !1108, line: 84, type: !61)
!7914 = !DILocalVariable(name: "count", scope: !7910, file: !1108, line: 85, type: !61)
!7915 = !DILocation(line: 0, scope: !7910)
!7916 = !DILocation(line: 87, column: 12, scope: !7917)
!7917 = distinct !DILexicalBlock(scope: !7910, file: !1108, line: 87, column: 9)
!7918 = !DILocation(line: 87, column: 9, scope: !7910)
!7919 = !DILocation(line: 91, column: 19, scope: !7920)
!7920 = distinct !DILexicalBlock(scope: !7917, file: !1108, line: 91, column: 16)
!7921 = !DILocation(line: 91, column: 16, scope: !7917)
!7922 = !DILocation(line: 93, column: 27, scope: !7923)
!7923 = distinct !DILexicalBlock(scope: !7920, file: !1108, line: 91, column: 26)
!7924 = !DILocation(line: 94, column: 5, scope: !7923)
!7925 = !DILocation(line: 94, column: 19, scope: !7926)
!7926 = distinct !DILexicalBlock(scope: !7920, file: !1108, line: 94, column: 16)
!7927 = !DILocation(line: 94, column: 16, scope: !7920)
!7928 = !DILocation(line: 96, column: 21, scope: !7929)
!7929 = distinct !DILexicalBlock(scope: !7926, file: !1108, line: 94, column: 27)
!7930 = !DILocation(line: 96, column: 33, scope: !7929)
!7931 = !DILocation(line: 97, column: 5, scope: !7929)
!7932 = !DILocation(line: 97, column: 19, scope: !7933)
!7933 = distinct !DILexicalBlock(scope: !7926, file: !1108, line: 97, column: 16)
!7934 = !DILocation(line: 97, column: 16, scope: !7926)
!7935 = !DILocation(line: 99, column: 21, scope: !7936)
!7936 = distinct !DILexicalBlock(scope: !7933, file: !1108, line: 97, column: 27)
!7937 = !DILocation(line: 99, column: 33, scope: !7936)
!7938 = !DILocation(line: 100, column: 5, scope: !7936)
!7939 = !DILocation(line: 100, column: 19, scope: !7940)
!7940 = distinct !DILexicalBlock(scope: !7933, file: !1108, line: 100, column: 16)
!7941 = !DILocation(line: 100, column: 16, scope: !7933)
!7942 = !DILocation(line: 102, column: 21, scope: !7943)
!7943 = distinct !DILexicalBlock(scope: !7940, file: !1108, line: 100, column: 27)
!7944 = !DILocation(line: 102, column: 33, scope: !7943)
!7945 = !DILocation(line: 103, column: 5, scope: !7943)
!7946 = !DILocation(line: 103, column: 19, scope: !7947)
!7947 = distinct !DILexicalBlock(scope: !7940, file: !1108, line: 103, column: 16)
!7948 = !DILocation(line: 103, column: 16, scope: !7940)
!7949 = !DILocation(line: 105, column: 21, scope: !7950)
!7950 = distinct !DILexicalBlock(scope: !7947, file: !1108, line: 103, column: 28)
!7951 = !DILocation(line: 105, column: 33, scope: !7950)
!7952 = !DILocation(line: 106, column: 5, scope: !7950)
!7953 = !DILocation(line: 106, column: 19, scope: !7954)
!7954 = distinct !DILexicalBlock(scope: !7947, file: !1108, line: 106, column: 16)
!7955 = !DILocation(line: 106, column: 16, scope: !7947)
!7956 = !DILocation(line: 108, column: 26, scope: !7957)
!7957 = distinct !DILexicalBlock(scope: !7954, file: !1108, line: 106, column: 28)
!7958 = !DILocation(line: 109, column: 5, scope: !7957)
!7959 = !DILocation(line: 109, column: 19, scope: !7960)
!7960 = distinct !DILexicalBlock(scope: !7954, file: !1108, line: 109, column: 16)
!7961 = !DILocation(line: 109, column: 16, scope: !7954)
!7962 = !DILocation(line: 111, column: 21, scope: !7963)
!7963 = distinct !DILexicalBlock(scope: !7960, file: !1108, line: 109, column: 28)
!7964 = !DILocation(line: 111, column: 33, scope: !7963)
!7965 = !DILocation(line: 112, column: 5, scope: !7963)
!7966 = !DILocation(line: 112, column: 19, scope: !7967)
!7967 = distinct !DILexicalBlock(scope: !7960, file: !1108, line: 112, column: 16)
!7968 = !DILocation(line: 112, column: 16, scope: !7960)
!7969 = !DILocation(line: 114, column: 21, scope: !7970)
!7970 = distinct !DILexicalBlock(scope: !7967, file: !1108, line: 112, column: 28)
!7971 = !DILocation(line: 114, column: 33, scope: !7970)
!7972 = !DILocation(line: 115, column: 5, scope: !7970)
!7973 = !DILocation(line: 0, scope: !7917)
!7974 = !DILocation(line: 0, scope: !7926)
!7975 = !DILocation(line: 121, column: 9, scope: !7910)
!7976 = !DILocation(line: 125, column: 43, scope: !7910)
!7977 = !DILocation(line: 127, column: 5, scope: !7910)
!7978 = distinct !DISubprogram(name: "eint_get_status", scope: !1108, file: !1108, line: 72, type: !4174, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1107, retainedNodes: !262)
!7979 = !DILocation(line: 74, column: 13, scope: !7978)
!7980 = !DILocation(line: 74, column: 28, scope: !7978)
!7981 = !DILocation(line: 74, column: 5, scope: !7978)
!7982 = distinct !DISubprogram(name: "hal_eint_mask", scope: !1108, file: !1108, line: 373, type: !7983, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1107, retainedNodes: !7985)
!7983 = !DISubroutineType(types: !7984)
!7984 = !{!1176, !1169}
!7985 = !{!7986, !7987}
!7986 = !DILocalVariable(name: "eint_number", arg: 1, scope: !7982, file: !1108, line: 373, type: !1169)
!7987 = !DILocalVariable(name: "mask", scope: !7982, file: !1108, line: 375, type: !61)
!7988 = !DILocation(line: 0, scope: !7982)
!7989 = !DILocation(line: 376, column: 21, scope: !7990)
!7990 = distinct !DILexicalBlock(scope: !7982, file: !1108, line: 376, column: 9)
!7991 = !DILocation(line: 376, column: 9, scope: !7982)
!7992 = !DILocation(line: 380, column: 12, scope: !7982)
!7993 = !DILocation(line: 381, column: 40, scope: !7982)
!7994 = !DILocation(line: 381, column: 5, scope: !7982)
!7995 = !DILocation(line: 381, column: 20, scope: !7982)
!7996 = !DILocation(line: 381, column: 34, scope: !7982)
!7997 = !DILocation(line: 382, column: 5, scope: !7982)
!7998 = !DILocation(line: 383, column: 5, scope: !7982)
!7999 = !DILocation(line: 384, column: 5, scope: !7982)
!8000 = !DILocation(line: 385, column: 1, scope: !7982)
!8001 = distinct !DISubprogram(name: "eint_mask_wakeup_source", scope: !1108, file: !1108, line: 344, type: !7983, scopeLine: 345, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1107, retainedNodes: !8002)
!8002 = !{!8003, !8004}
!8003 = !DILocalVariable(name: "eint_number", arg: 1, scope: !8001, file: !1108, line: 344, type: !1169)
!8004 = !DILocalVariable(name: "mask", scope: !8001, file: !1108, line: 346, type: !61)
!8005 = !DILocation(line: 0, scope: !8001)
!8006 = !DILocation(line: 347, column: 21, scope: !8007)
!8007 = distinct !DILexicalBlock(scope: !8001, file: !1108, line: 347, column: 9)
!8008 = !DILocation(line: 347, column: 9, scope: !8001)
!8009 = !DILocation(line: 351, column: 12, scope: !8001)
!8010 = !DILocation(line: 352, column: 47, scope: !8001)
!8011 = !DILocation(line: 352, column: 5, scope: !8001)
!8012 = !DILocation(line: 352, column: 20, scope: !8001)
!8013 = !DILocation(line: 352, column: 41, scope: !8001)
!8014 = !DILocation(line: 353, column: 5, scope: !8001)
!8015 = !DILocation(line: 354, column: 5, scope: !8001)
!8016 = !DILocation(line: 355, column: 1, scope: !8001)
!8017 = distinct !DISubprogram(name: "hal_eint_deinit", scope: !1108, file: !1108, line: 160, type: !7983, scopeLine: 161, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1107, retainedNodes: !8018)
!8018 = !{!8019, !8020}
!8019 = !DILocalVariable(name: "eint_number", arg: 1, scope: !8017, file: !1108, line: 160, type: !1169)
!8020 = !DILocalVariable(name: "mask", scope: !8017, file: !1108, line: 162, type: !61)
!8021 = !DILocation(line: 0, scope: !8017)
!8022 = !DILocation(line: 164, column: 21, scope: !8023)
!8023 = distinct !DILexicalBlock(scope: !8017, file: !1108, line: 164, column: 9)
!8024 = !DILocation(line: 164, column: 9, scope: !8017)
!8025 = !DILocation(line: 168, column: 12, scope: !8017)
!8026 = !DILocation(line: 169, column: 38, scope: !8017)
!8027 = !DILocation(line: 169, column: 52, scope: !8017)
!8028 = !DILocation(line: 170, column: 38, scope: !8017)
!8029 = !DILocation(line: 170, column: 48, scope: !8017)
!8030 = !DILocation(line: 172, column: 5, scope: !8017)
!8031 = !DILocation(line: 173, column: 5, scope: !8017)
!8032 = !DILocation(line: 174, column: 5, scope: !8017)
!8033 = !DILocation(line: 175, column: 5, scope: !8017)
!8034 = !DILocation(line: 176, column: 1, scope: !8017)
!8035 = distinct !DISubprogram(name: "hal_eint_register_callback", scope: !1108, file: !1108, line: 178, type: !8036, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1107, retainedNodes: !8039)
!8036 = !DISubroutineType(types: !8037)
!8037 = !{!1176, !1169, !8038, !65}
!8038 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_eint_callback_t", file: !1111, line: 241, baseType: !67)
!8039 = !{!8040, !8041, !8042, !8043}
!8040 = !DILocalVariable(name: "eint_number", arg: 1, scope: !8035, file: !1108, line: 178, type: !1169)
!8041 = !DILocalVariable(name: "eint_callback", arg: 2, scope: !8035, file: !1108, line: 179, type: !8038)
!8042 = !DILocalVariable(name: "user_data", arg: 3, scope: !8035, file: !1108, line: 180, type: !65)
!8043 = !DILocalVariable(name: "mask", scope: !8035, file: !1108, line: 182, type: !61)
!8044 = !DILocation(line: 0, scope: !8035)
!8045 = !DILocation(line: 184, column: 21, scope: !8046)
!8046 = distinct !DILexicalBlock(scope: !8035, file: !1108, line: 184, column: 9)
!8047 = !DILocation(line: 184, column: 44, scope: !8046)
!8048 = !DILocation(line: 188, column: 12, scope: !8035)
!8049 = !DILocation(line: 189, column: 38, scope: !8035)
!8050 = !DILocation(line: 189, column: 52, scope: !8035)
!8051 = !DILocation(line: 190, column: 38, scope: !8035)
!8052 = !DILocation(line: 190, column: 48, scope: !8035)
!8053 = !DILocation(line: 191, column: 5, scope: !8035)
!8054 = !DILocation(line: 192, column: 5, scope: !8035)
!8055 = !DILocation(line: 193, column: 1, scope: !8035)
!8056 = distinct !DISubprogram(name: "hal_eint_set_debounce_count", scope: !1108, file: !1108, line: 273, type: !7857, scopeLine: 274, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1107, retainedNodes: !8057)
!8057 = !{!8058, !8059, !8060, !8061, !8062}
!8058 = !DILocalVariable(name: "eint_number", arg: 1, scope: !8056, file: !1108, line: 273, type: !1169)
!8059 = !DILocalVariable(name: "count", arg: 2, scope: !8056, file: !1108, line: 273, type: !61)
!8060 = !DILocalVariable(name: "mask", scope: !8056, file: !1108, line: 275, type: !61)
!8061 = !DILocalVariable(name: "eint_con", scope: !8056, file: !1108, line: 275, type: !61)
!8062 = !DILocalVariable(name: "prescaler", scope: !8056, file: !1108, line: 276, type: !61)
!8063 = !DILocation(line: 0, scope: !8056)
!8064 = !DILocation(line: 278, column: 21, scope: !8065)
!8065 = distinct !DILexicalBlock(scope: !8056, file: !1108, line: 278, column: 9)
!8066 = !DILocation(line: 278, column: 9, scope: !8056)
!8067 = !DILocation(line: 289, column: 12, scope: !8056)
!8068 = !DILocation(line: 290, column: 16, scope: !8056)
!8069 = !DILocation(line: 290, column: 66, scope: !8056)
!8070 = !DILocation(line: 291, column: 14, scope: !8056)
!8071 = !DILocation(line: 292, column: 14, scope: !8056)
!8072 = !DILocation(line: 293, column: 5, scope: !8056)
!8073 = !DILocation(line: 295, column: 15, scope: !8074)
!8074 = distinct !DILexicalBlock(scope: !8056, file: !1108, line: 295, column: 9)
!8075 = !DILocation(line: 295, column: 9, scope: !8056)
!8076 = !DILocation(line: 297, column: 18, scope: !8077)
!8077 = distinct !DILexicalBlock(scope: !8074, file: !1108, line: 295, column: 21)
!8078 = !DILocation(line: 298, column: 9, scope: !8077)
!8079 = !DILocation(line: 298, column: 59, scope: !8077)
!8080 = !DILocation(line: 298, column: 70, scope: !8077)
!8081 = !DILocation(line: 300, column: 5, scope: !8077)
!8082 = !DILocation(line: 302, column: 81, scope: !8083)
!8083 = distinct !DILexicalBlock(scope: !8074, file: !1108, line: 300, column: 12)
!8084 = !DILocation(line: 302, column: 9, scope: !8083)
!8085 = !DILocation(line: 302, column: 59, scope: !8083)
!8086 = !DILocation(line: 302, column: 70, scope: !8083)
!8087 = !DILocation(line: 303, column: 9, scope: !8083)
!8088 = !DILocation(line: 306, column: 30, scope: !8083)
!8089 = !DILocation(line: 308, column: 9, scope: !8083)
!8090 = !DILocation(line: 308, column: 59, scope: !8083)
!8091 = !DILocation(line: 308, column: 70, scope: !8083)
!8092 = !DILocation(line: 309, column: 9, scope: !8083)
!8093 = !DILocation(line: 309, column: 59, scope: !8083)
!8094 = !DILocation(line: 309, column: 70, scope: !8083)
!8095 = !DILocation(line: 314, column: 1, scope: !8056)
!8096 = distinct !DISubprogram(name: "hal_eint_set_software_trigger", scope: !1108, file: !1108, line: 316, type: !7983, scopeLine: 317, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1107, retainedNodes: !8097)
!8097 = !{!8098, !8099}
!8098 = !DILocalVariable(name: "eint_number", arg: 1, scope: !8096, file: !1108, line: 316, type: !1169)
!8099 = !DILocalVariable(name: "mask", scope: !8096, file: !1108, line: 318, type: !61)
!8100 = !DILocation(line: 0, scope: !8096)
!8101 = !DILocation(line: 320, column: 21, scope: !8102)
!8102 = distinct !DILexicalBlock(scope: !8096, file: !1108, line: 320, column: 9)
!8103 = !DILocation(line: 320, column: 9, scope: !8096)
!8104 = !DILocation(line: 324, column: 12, scope: !8096)
!8105 = !DILocation(line: 325, column: 40, scope: !8096)
!8106 = !DILocation(line: 325, column: 5, scope: !8096)
!8107 = !DILocation(line: 325, column: 20, scope: !8096)
!8108 = !DILocation(line: 325, column: 34, scope: !8096)
!8109 = !DILocation(line: 326, column: 5, scope: !8096)
!8110 = !DILocation(line: 327, column: 5, scope: !8096)
!8111 = !DILocation(line: 328, column: 1, scope: !8096)
!8112 = distinct !DISubprogram(name: "hal_eint_clear_software_trigger", scope: !1108, file: !1108, line: 330, type: !7983, scopeLine: 331, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1107, retainedNodes: !8113)
!8113 = !{!8114, !8115}
!8114 = !DILocalVariable(name: "eint_number", arg: 1, scope: !8112, file: !1108, line: 330, type: !1169)
!8115 = !DILocalVariable(name: "mask", scope: !8112, file: !1108, line: 332, type: !61)
!8116 = !DILocation(line: 0, scope: !8112)
!8117 = !DILocation(line: 334, column: 21, scope: !8118)
!8118 = distinct !DILexicalBlock(scope: !8112, file: !1108, line: 334, column: 9)
!8119 = !DILocation(line: 334, column: 9, scope: !8112)
!8120 = !DILocation(line: 338, column: 12, scope: !8112)
!8121 = !DILocation(line: 339, column: 40, scope: !8112)
!8122 = !DILocation(line: 339, column: 5, scope: !8112)
!8123 = !DILocation(line: 339, column: 20, scope: !8112)
!8124 = !DILocation(line: 339, column: 34, scope: !8112)
!8125 = !DILocation(line: 340, column: 5, scope: !8112)
!8126 = !DILocation(line: 341, column: 5, scope: !8112)
!8127 = !DILocation(line: 342, column: 1, scope: !8112)
!8128 = distinct !DISubprogram(name: "eint_unmask_wakeup_source", scope: !1108, file: !1108, line: 357, type: !7983, scopeLine: 358, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1107, retainedNodes: !8129)
!8129 = !{!8130, !8131}
!8130 = !DILocalVariable(name: "eint_number", arg: 1, scope: !8128, file: !1108, line: 357, type: !1169)
!8131 = !DILocalVariable(name: "mask", scope: !8128, file: !1108, line: 359, type: !61)
!8132 = !DILocation(line: 0, scope: !8128)
!8133 = !DILocation(line: 361, column: 21, scope: !8134)
!8134 = distinct !DILexicalBlock(scope: !8128, file: !1108, line: 361, column: 9)
!8135 = !DILocation(line: 361, column: 9, scope: !8128)
!8136 = !DILocation(line: 365, column: 12, scope: !8128)
!8137 = !DILocation(line: 366, column: 47, scope: !8128)
!8138 = !DILocation(line: 366, column: 5, scope: !8128)
!8139 = !DILocation(line: 366, column: 20, scope: !8128)
!8140 = !DILocation(line: 366, column: 41, scope: !8128)
!8141 = !DILocation(line: 367, column: 5, scope: !8128)
!8142 = !DILocation(line: 368, column: 5, scope: !8128)
!8143 = !DILocation(line: 369, column: 1, scope: !8128)
!8144 = distinct !DISubprogram(name: "hal_eint_unmask", scope: !1108, file: !1108, line: 387, type: !7983, scopeLine: 388, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1107, retainedNodes: !8145)
!8145 = !{!8146, !8147}
!8146 = !DILocalVariable(name: "eint_number", arg: 1, scope: !8144, file: !1108, line: 387, type: !1169)
!8147 = !DILocalVariable(name: "mask", scope: !8144, file: !1108, line: 389, type: !61)
!8148 = !DILocation(line: 0, scope: !8144)
!8149 = !DILocation(line: 391, column: 21, scope: !8150)
!8150 = distinct !DILexicalBlock(scope: !8144, file: !1108, line: 391, column: 9)
!8151 = !DILocation(line: 391, column: 9, scope: !8144)
!8152 = !DILocation(line: 395, column: 12, scope: !8144)
!8153 = !DILocation(line: 396, column: 40, scope: !8144)
!8154 = !DILocation(line: 396, column: 5, scope: !8144)
!8155 = !DILocation(line: 396, column: 20, scope: !8144)
!8156 = !DILocation(line: 396, column: 34, scope: !8144)
!8157 = !DILocation(line: 397, column: 5, scope: !8144)
!8158 = !DILocation(line: 398, column: 5, scope: !8144)
!8159 = !DILocation(line: 399, column: 5, scope: !8144)
!8160 = !DILocation(line: 400, column: 1, scope: !8144)
!8161 = !DILocation(line: 131, column: 9, scope: !8162)
!8162 = distinct !DILexicalBlock(scope: !1271, file: !1272, line: 131, column: 9)
!8163 = !DILocation(line: 131, column: 9, scope: !1271)
!8164 = !DILocation(line: 0, scope: !1271)
!8165 = !DILocation(line: 134, column: 49, scope: !8166)
!8166 = distinct !DILexicalBlock(scope: !8167, file: !1272, line: 133, column: 46)
!8167 = distinct !DILexicalBlock(scope: !8168, file: !1272, line: 133, column: 9)
!8168 = distinct !DILexicalBlock(scope: !8169, file: !1272, line: 133, column: 9)
!8169 = distinct !DILexicalBlock(scope: !8162, file: !1272, line: 131, column: 28)
!8170 = !DILocation(line: 134, column: 13, scope: !8166)
!8171 = !DILocation(line: 133, column: 42, scope: !8167)
!8172 = !DILocation(line: 133, column: 23, scope: !8167)
!8173 = !DILocation(line: 133, column: 9, scope: !8168)
!8174 = distinct !{!8174, !8173, !8175}
!8175 = !DILocation(line: 135, column: 9, scope: !8168)
!8176 = !DILocation(line: 136, column: 22, scope: !8169)
!8177 = !DILocation(line: 137, column: 5, scope: !8169)
!8178 = !DILocation(line: 138, column: 5, scope: !1271)
!8179 = distinct !DISubprogram(name: "NVIC_SetPriority", scope: !1281, file: !1281, line: 1577, type: !8180, scopeLine: 1578, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1276, retainedNodes: !8182)
!8180 = !DISubroutineType(types: !8181)
!8181 = !{null, !974, !61}
!8182 = !{!8183, !8184}
!8183 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8179, file: !1281, line: 1577, type: !974)
!8184 = !DILocalVariable(name: "priority", arg: 2, scope: !8179, file: !1281, line: 1577, type: !61)
!8185 = !DILocation(line: 0, scope: !8179)
!8186 = !DILocation(line: 1582, column: 34, scope: !8187)
!8187 = distinct !DILexicalBlock(scope: !8188, file: !1281, line: 1581, column: 8)
!8188 = distinct !DILexicalBlock(scope: !8179, file: !1281, line: 1579, column: 6)
!8189 = !DILocation(line: 1582, column: 5, scope: !8187)
!8190 = !DILocation(line: 1582, column: 32, scope: !8187)
!8191 = !DILocation(line: 1583, column: 1, scope: !8179)
!8192 = distinct !DISubprogram(name: "hal_nvic_enable_irq", scope: !1272, file: !1272, line: 141, type: !8193, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1276, retainedNodes: !8195)
!8193 = !DISubroutineType(types: !8194)
!8194 = !{!1275, !973}
!8195 = !{!8196, !8197}
!8196 = !DILocalVariable(name: "irq_number", arg: 1, scope: !8192, file: !1272, line: 141, type: !973)
!8197 = !DILocalVariable(name: "status", scope: !8192, file: !1272, line: 143, type: !1275)
!8198 = !DILocation(line: 0, scope: !8192)
!8199 = !DILocation(line: 145, column: 40, scope: !8200)
!8200 = distinct !DILexicalBlock(scope: !8192, file: !1272, line: 145, column: 9)
!8201 = !DILocation(line: 149, column: 9, scope: !8202)
!8202 = distinct !DILexicalBlock(scope: !8200, file: !1272, line: 148, column: 12)
!8203 = !DILocation(line: 153, column: 5, scope: !8192)
!8204 = !DILocation(line: 154, column: 1, scope: !8192)
!8205 = distinct !DISubprogram(name: "NVIC_EnableIRQ", scope: !1281, file: !1281, line: 1494, type: !8206, scopeLine: 1495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1276, retainedNodes: !8208)
!8206 = !DISubroutineType(types: !8207)
!8207 = !{null, !974}
!8208 = !{!8209}
!8209 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8205, file: !1281, line: 1494, type: !974)
!8210 = !DILocation(line: 0, scope: !8205)
!8211 = !DILocation(line: 1497, column: 91, scope: !8205)
!8212 = !DILocation(line: 1497, column: 61, scope: !8205)
!8213 = !DILocation(line: 1497, column: 40, scope: !8205)
!8214 = !DILocation(line: 1497, column: 3, scope: !8205)
!8215 = !DILocation(line: 1497, column: 46, scope: !8205)
!8216 = !DILocation(line: 1498, column: 1, scope: !8205)
!8217 = distinct !DISubprogram(name: "hal_nvic_disable_irq", scope: !1272, file: !1272, line: 156, type: !8193, scopeLine: 157, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1276, retainedNodes: !8218)
!8218 = !{!8219, !8220}
!8219 = !DILocalVariable(name: "irq_number", arg: 1, scope: !8217, file: !1272, line: 156, type: !973)
!8220 = !DILocalVariable(name: "status", scope: !8217, file: !1272, line: 158, type: !1275)
!8221 = !DILocation(line: 0, scope: !8217)
!8222 = !DILocation(line: 160, column: 40, scope: !8223)
!8223 = distinct !DILexicalBlock(scope: !8217, file: !1272, line: 160, column: 9)
!8224 = !DILocation(line: 164, column: 9, scope: !8225)
!8225 = distinct !DILexicalBlock(scope: !8223, file: !1272, line: 163, column: 12)
!8226 = !DILocation(line: 168, column: 5, scope: !8217)
!8227 = !DILocation(line: 169, column: 1, scope: !8217)
!8228 = distinct !DISubprogram(name: "NVIC_DisableIRQ", scope: !1281, file: !1281, line: 1507, type: !8206, scopeLine: 1508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1276, retainedNodes: !8229)
!8229 = !{!8230}
!8230 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8228, file: !1281, line: 1507, type: !974)
!8231 = !DILocation(line: 0, scope: !8228)
!8232 = !DILocation(line: 1509, column: 65, scope: !8228)
!8233 = !DILocation(line: 1509, column: 44, scope: !8228)
!8234 = !DILocation(line: 1509, column: 32, scope: !8228)
!8235 = !DILocation(line: 1509, column: 3, scope: !8228)
!8236 = !DILocation(line: 1509, column: 39, scope: !8228)
!8237 = !DILocation(line: 1510, column: 1, scope: !8228)
!8238 = distinct !DISubprogram(name: "hal_nvic_get_pending_irq", scope: !1272, file: !1272, line: 171, type: !8239, scopeLine: 172, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1276, retainedNodes: !8241)
!8239 = !DISubroutineType(types: !8240)
!8240 = !{!61, !973}
!8241 = !{!8242, !8243}
!8242 = !DILocalVariable(name: "irq_number", arg: 1, scope: !8238, file: !1272, line: 171, type: !973)
!8243 = !DILocalVariable(name: "ret", scope: !8238, file: !1272, line: 173, type: !61)
!8244 = !DILocation(line: 0, scope: !8238)
!8245 = !DILocation(line: 175, column: 40, scope: !8246)
!8246 = distinct !DILexicalBlock(scope: !8238, file: !1272, line: 175, column: 9)
!8247 = !DILocation(line: 178, column: 15, scope: !8248)
!8248 = distinct !DILexicalBlock(scope: !8246, file: !1272, line: 177, column: 12)
!8249 = !DILocation(line: 181, column: 5, scope: !8238)
!8250 = !DILocation(line: 182, column: 1, scope: !8238)
!8251 = distinct !DISubprogram(name: "NVIC_GetPendingIRQ", scope: !1281, file: !1281, line: 1523, type: !8252, scopeLine: 1524, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1276, retainedNodes: !8254)
!8252 = !DISubroutineType(types: !8253)
!8253 = !{!61, !974}
!8254 = !{!8255}
!8255 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8251, file: !1281, line: 1523, type: !974)
!8256 = !DILocation(line: 0, scope: !8251)
!8257 = !DILocation(line: 1525, column: 51, scope: !8251)
!8258 = !DILocation(line: 1525, column: 23, scope: !8251)
!8259 = !DILocation(line: 1525, column: 83, scope: !8251)
!8260 = !DILocation(line: 1525, column: 22, scope: !8251)
!8261 = !DILocation(line: 1525, column: 3, scope: !8251)
!8262 = distinct !DISubprogram(name: "hal_nvic_set_pending_irq", scope: !1272, file: !1272, line: 184, type: !8193, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1276, retainedNodes: !8263)
!8263 = !{!8264, !8265}
!8264 = !DILocalVariable(name: "irq_number", arg: 1, scope: !8262, file: !1272, line: 184, type: !973)
!8265 = !DILocalVariable(name: "status", scope: !8262, file: !1272, line: 186, type: !1275)
!8266 = !DILocation(line: 0, scope: !8262)
!8267 = !DILocation(line: 188, column: 40, scope: !8268)
!8268 = distinct !DILexicalBlock(scope: !8262, file: !1272, line: 188, column: 9)
!8269 = !DILocation(line: 192, column: 9, scope: !8270)
!8270 = distinct !DILexicalBlock(scope: !8268, file: !1272, line: 191, column: 12)
!8271 = !DILocation(line: 196, column: 5, scope: !8262)
!8272 = !DILocation(line: 197, column: 1, scope: !8262)
!8273 = distinct !DISubprogram(name: "NVIC_SetPendingIRQ", scope: !1281, file: !1281, line: 1535, type: !8206, scopeLine: 1536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1276, retainedNodes: !8274)
!8274 = !{!8275}
!8275 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8273, file: !1281, line: 1535, type: !974)
!8276 = !DILocation(line: 0, scope: !8273)
!8277 = !DILocation(line: 1537, column: 65, scope: !8273)
!8278 = !DILocation(line: 1537, column: 44, scope: !8273)
!8279 = !DILocation(line: 1537, column: 32, scope: !8273)
!8280 = !DILocation(line: 1537, column: 3, scope: !8273)
!8281 = !DILocation(line: 1537, column: 39, scope: !8273)
!8282 = !DILocation(line: 1538, column: 1, scope: !8273)
!8283 = distinct !DISubprogram(name: "hal_nvic_clear_pending_irq", scope: !1272, file: !1272, line: 199, type: !8193, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1276, retainedNodes: !8284)
!8284 = !{!8285, !8286}
!8285 = !DILocalVariable(name: "irq_number", arg: 1, scope: !8283, file: !1272, line: 199, type: !973)
!8286 = !DILocalVariable(name: "status", scope: !8283, file: !1272, line: 201, type: !1275)
!8287 = !DILocation(line: 0, scope: !8283)
!8288 = !DILocation(line: 203, column: 40, scope: !8289)
!8289 = distinct !DILexicalBlock(scope: !8283, file: !1272, line: 203, column: 9)
!8290 = !DILocation(line: 207, column: 9, scope: !8291)
!8291 = distinct !DILexicalBlock(scope: !8289, file: !1272, line: 206, column: 12)
!8292 = !DILocation(line: 211, column: 5, scope: !8283)
!8293 = !DILocation(line: 212, column: 1, scope: !8283)
!8294 = distinct !DISubprogram(name: "NVIC_ClearPendingIRQ", scope: !1281, file: !1281, line: 1547, type: !8206, scopeLine: 1548, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1276, retainedNodes: !8295)
!8295 = !{!8296}
!8296 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8294, file: !1281, line: 1547, type: !974)
!8297 = !DILocation(line: 0, scope: !8294)
!8298 = !DILocation(line: 1549, column: 65, scope: !8294)
!8299 = !DILocation(line: 1549, column: 44, scope: !8294)
!8300 = !DILocation(line: 1549, column: 32, scope: !8294)
!8301 = !DILocation(line: 1549, column: 3, scope: !8294)
!8302 = !DILocation(line: 1549, column: 39, scope: !8294)
!8303 = !DILocation(line: 1550, column: 1, scope: !8294)
!8304 = distinct !DISubprogram(name: "hal_nvic_set_priority", scope: !1272, file: !1272, line: 214, type: !8305, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1276, retainedNodes: !8307)
!8305 = !DISubroutineType(types: !8306)
!8306 = !{!1275, !973, !61}
!8307 = !{!8308, !8309, !8310}
!8308 = !DILocalVariable(name: "irq_number", arg: 1, scope: !8304, file: !1272, line: 214, type: !973)
!8309 = !DILocalVariable(name: "priority", arg: 2, scope: !8304, file: !1272, line: 214, type: !61)
!8310 = !DILocalVariable(name: "status", scope: !8304, file: !1272, line: 216, type: !1275)
!8311 = !DILocation(line: 0, scope: !8304)
!8312 = !DILocation(line: 218, column: 40, scope: !8313)
!8313 = distinct !DILexicalBlock(scope: !8304, file: !1272, line: 218, column: 9)
!8314 = !DILocation(line: 222, column: 9, scope: !8315)
!8315 = distinct !DILexicalBlock(scope: !8313, file: !1272, line: 221, column: 12)
!8316 = !DILocation(line: 226, column: 5, scope: !8304)
!8317 = !DILocation(line: 227, column: 1, scope: !8304)
!8318 = distinct !DISubprogram(name: "hal_nvic_get_priority", scope: !1272, file: !1272, line: 229, type: !8239, scopeLine: 230, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1276, retainedNodes: !8319)
!8319 = !{!8320, !8321}
!8320 = !DILocalVariable(name: "irq_number", arg: 1, scope: !8318, file: !1272, line: 229, type: !973)
!8321 = !DILocalVariable(name: "ret", scope: !8318, file: !1272, line: 231, type: !61)
!8322 = !DILocation(line: 0, scope: !8318)
!8323 = !DILocation(line: 233, column: 40, scope: !8324)
!8324 = distinct !DILexicalBlock(scope: !8318, file: !1272, line: 233, column: 9)
!8325 = !DILocation(line: 236, column: 15, scope: !8326)
!8326 = distinct !DILexicalBlock(scope: !8324, file: !1272, line: 235, column: 12)
!8327 = !DILocation(line: 239, column: 5, scope: !8318)
!8328 = !DILocation(line: 240, column: 1, scope: !8318)
!8329 = distinct !DISubprogram(name: "NVIC_GetPriority", scope: !1281, file: !1281, line: 1597, type: !8252, scopeLine: 1598, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1276, retainedNodes: !8330)
!8330 = !{!8331}
!8331 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8329, file: !1281, line: 1597, type: !974)
!8332 = !DILocation(line: 0, scope: !8329)
!8333 = !DILocation(line: 1603, column: 23, scope: !8334)
!8334 = distinct !DILexicalBlock(scope: !8335, file: !1281, line: 1602, column: 8)
!8335 = distinct !DILexicalBlock(scope: !8329, file: !1281, line: 1600, column: 6)
!8336 = !DILocation(line: 1603, column: 60, scope: !8334)
!8337 = !DILocation(line: 1604, column: 1, scope: !8329)
!8338 = distinct !DISubprogram(name: "isrC_main", scope: !1272, file: !1272, line: 248, type: !1273, scopeLine: 249, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1276, retainedNodes: !8339)
!8339 = !{!8340, !8341}
!8340 = !DILocalVariable(name: "status", scope: !8338, file: !1272, line: 250, type: !1275)
!8341 = !DILocalVariable(name: "irq_number", scope: !8338, file: !1272, line: 251, type: !973)
!8342 = !DILocation(line: 0, scope: !8338)
!8343 = !DILocation(line: 253, column: 5, scope: !8338)
!8344 = !DILocation(line: 255, column: 35, scope: !8338)
!8345 = !DILocation(line: 256, column: 40, scope: !8346)
!8346 = distinct !DILexicalBlock(scope: !8338, file: !1272, line: 256, column: 9)
!8347 = !DILocation(line: 259, column: 48, scope: !8348)
!8348 = distinct !DILexicalBlock(scope: !8346, file: !1272, line: 259, column: 16)
!8349 = !DILocation(line: 259, column: 62, scope: !8348)
!8350 = !DILocation(line: 259, column: 16, scope: !8346)
!8351 = !DILocation(line: 261, column: 9, scope: !8352)
!8352 = distinct !DILexicalBlock(scope: !8348, file: !1272, line: 259, column: 71)
!8353 = !DILocation(line: 262, column: 9, scope: !8352)
!8354 = !DILocation(line: 264, column: 55, scope: !8355)
!8355 = distinct !DILexicalBlock(scope: !8348, file: !1272, line: 263, column: 12)
!8356 = !DILocation(line: 264, column: 41, scope: !8355)
!8357 = !DILocation(line: 264, column: 53, scope: !8355)
!8358 = !DILocation(line: 265, column: 41, scope: !8355)
!8359 = !DILocation(line: 265, column: 9, scope: !8355)
!8360 = !DILocation(line: 269, column: 5, scope: !8338)
!8361 = !DILocation(line: 270, column: 1, scope: !8338)
!8362 = distinct !DISubprogram(name: "get_current_irq", scope: !1272, file: !1272, line: 242, type: !4174, scopeLine: 243, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1276, retainedNodes: !8363)
!8363 = !{!8364}
!8364 = !DILocalVariable(name: "irq_num", scope: !8362, file: !1272, line: 244, type: !61)
!8365 = !DILocation(line: 244, column: 31, scope: !8362)
!8366 = !DILocation(line: 244, column: 36, scope: !8362)
!8367 = !DILocation(line: 0, scope: !8362)
!8368 = !DILocation(line: 245, column: 21, scope: !8362)
!8369 = !DILocation(line: 245, column: 5, scope: !8362)
!8370 = distinct !DISubprogram(name: "get_pending_irq", scope: !1272, file: !1272, line: 121, type: !4174, scopeLine: 122, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1276, retainedNodes: !262)
!8371 = !DILocation(line: 123, column: 19, scope: !8370)
!8372 = !DILocation(line: 123, column: 51, scope: !8370)
!8373 = !DILocation(line: 123, column: 5, scope: !8370)
!8374 = distinct !DISubprogram(name: "hal_nvic_register_isr_handler", scope: !1272, file: !1272, line: 272, type: !8375, scopeLine: 273, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1276, retainedNodes: !8377)
!8375 = !DISubroutineType(types: !8376)
!8376 = !{!1275, !973, !1165}
!8377 = !{!8378, !8379, !8380}
!8378 = !DILocalVariable(name: "irq_number", arg: 1, scope: !8374, file: !1272, line: 272, type: !973)
!8379 = !DILocalVariable(name: "callback", arg: 2, scope: !8374, file: !1272, line: 272, type: !1165)
!8380 = !DILocalVariable(name: "mask", scope: !8374, file: !1272, line: 274, type: !61)
!8381 = !DILocation(line: 0, scope: !8374)
!8382 = !DILocation(line: 276, column: 40, scope: !8383)
!8383 = distinct !DILexicalBlock(scope: !8374, file: !1272, line: 276, column: 9)
!8384 = !DILocation(line: 280, column: 12, scope: !8374)
!8385 = !DILocation(line: 281, column: 5, scope: !8374)
!8386 = !DILocation(line: 282, column: 37, scope: !8374)
!8387 = !DILocation(line: 282, column: 51, scope: !8374)
!8388 = !DILocation(line: 283, column: 37, scope: !8374)
!8389 = !DILocation(line: 283, column: 49, scope: !8374)
!8390 = !DILocation(line: 284, column: 5, scope: !8374)
!8391 = !DILocation(line: 286, column: 5, scope: !8374)
!8392 = !DILocation(line: 287, column: 1, scope: !8374)
!8393 = distinct !DISubprogram(name: "hal_nvic_save_and_set_interrupt_mask", scope: !1272, file: !1272, line: 289, type: !8394, scopeLine: 290, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1276, retainedNodes: !8396)
!8394 = !DISubroutineType(types: !8395)
!8395 = !{!1275, !1400}
!8396 = !{!8397}
!8397 = !DILocalVariable(name: "mask", arg: 1, scope: !8393, file: !1272, line: 289, type: !1400)
!8398 = !DILocation(line: 0, scope: !8393)
!8399 = !DILocation(line: 291, column: 13, scope: !8393)
!8400 = !DILocation(line: 291, column: 11, scope: !8393)
!8401 = !DILocation(line: 292, column: 5, scope: !8393)
!8402 = distinct !DISubprogram(name: "hal_nvic_restore_interrupt_mask", scope: !1272, file: !1272, line: 295, type: !8403, scopeLine: 296, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1276, retainedNodes: !8405)
!8403 = !DISubroutineType(types: !8404)
!8404 = !{!1275, !61}
!8405 = !{!8406}
!8406 = !DILocalVariable(name: "mask", arg: 1, scope: !8402, file: !1272, line: 295, type: !61)
!8407 = !DILocation(line: 0, scope: !8402)
!8408 = !DILocation(line: 297, column: 5, scope: !8402)
!8409 = !DILocation(line: 298, column: 5, scope: !8402)
!8410 = distinct !DISubprogram(name: "save_and_set_interrupt_mask", scope: !3227, file: !3227, line: 51, type: !4174, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !8411)
!8411 = !{!8412, !8413}
!8412 = !DILocalVariable(name: "mask", scope: !8410, file: !3227, line: 53, type: !61)
!8413 = !DILocalVariable(name: "priority", scope: !8410, file: !3227, line: 55, type: !61)
!8414 = !DILocation(line: 521, column: 3, scope: !8415, inlinedAt: !8419)
!8415 = distinct !DISubprogram(name: "__get_BASEPRI", scope: !8416, file: !8416, line: 517, type: !4174, scopeLine: 518, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !8417)
!8416 = !DIFile(filename: "../../../../../driver/CMSIS/Include/core_cmFunc.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/powerkey/GCC")
!8417 = !{!8418}
!8418 = !DILocalVariable(name: "result", scope: !8415, file: !8416, line: 519, type: !61)
!8419 = distinct !DILocation(line: 53, column: 21, scope: !8410)
!8420 = !{i64 457570}
!8421 = !DILocation(line: 0, scope: !8415, inlinedAt: !8419)
!8422 = !DILocation(line: 0, scope: !8410)
!8423 = !DILocalVariable(name: "value", arg: 1, scope: !8424, file: !8416, line: 532, type: !61)
!8424 = distinct !DISubprogram(name: "__set_BASEPRI", scope: !8416, file: !8416, line: 532, type: !7725, scopeLine: 533, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !8425)
!8425 = !{!8423}
!8426 = !DILocation(line: 0, scope: !8424, inlinedAt: !8427)
!8427 = distinct !DILocation(line: 56, column: 5, scope: !8410)
!8428 = !DILocation(line: 534, column: 3, scope: !8424, inlinedAt: !8427)
!8429 = !{i64 457903}
!8430 = !DILocation(line: 456, column: 3, scope: !8431, inlinedAt: !8433)
!8431 = distinct !DISubprogram(name: "__DMB", scope: !8432, file: !8432, line: 454, type: !260, scopeLine: 455, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !262)
!8432 = !DIFile(filename: "../../../../../driver/CMSIS/Include/core_cmInstr.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/powerkey/GCC")
!8433 = distinct !DILocation(line: 57, column: 5, scope: !8410)
!8434 = !{i64 430659}
!8435 = !DILocation(line: 434, column: 3, scope: !8436, inlinedAt: !8437)
!8436 = distinct !DISubprogram(name: "__ISB", scope: !8432, file: !8432, line: 432, type: !260, scopeLine: 433, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !262)
!8437 = distinct !DILocation(line: 58, column: 5, scope: !8410)
!8438 = !{i64 430074}
!8439 = !DILocation(line: 59, column: 5, scope: !8410)
!8440 = distinct !DISubprogram(name: "restore_interrupt_mask", scope: !3227, file: !3227, line: 62, type: !7725, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !8441)
!8441 = !{!8442}
!8442 = !DILocalVariable(name: "mask", arg: 1, scope: !8440, file: !3227, line: 62, type: !61)
!8443 = !DILocation(line: 0, scope: !8440)
!8444 = !DILocation(line: 0, scope: !8424, inlinedAt: !8445)
!8445 = distinct !DILocation(line: 64, column: 5, scope: !8440)
!8446 = !DILocation(line: 534, column: 3, scope: !8424, inlinedAt: !8445)
!8447 = !DILocation(line: 456, column: 3, scope: !8431, inlinedAt: !8448)
!8448 = distinct !DILocation(line: 65, column: 5, scope: !8440)
!8449 = !DILocation(line: 434, column: 3, scope: !8436, inlinedAt: !8450)
!8450 = distinct !DILocation(line: 66, column: 5, scope: !8440)
!8451 = !DILocation(line: 67, column: 1, scope: !8440)
!8452 = distinct !DISubprogram(name: "nvic_mask_all_interrupt", scope: !3227, file: !3227, line: 69, type: !260, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !8453)
!8453 = !{!8454, !8455}
!8454 = !DILocalVariable(name: "irq_number", scope: !8452, file: !3227, line: 71, type: !973)
!8455 = !DILocalVariable(name: "mask", scope: !8452, file: !3227, line: 72, type: !61)
!8456 = !DILocation(line: 72, column: 21, scope: !8452)
!8457 = !DILocation(line: 0, scope: !8452)
!8458 = !DILocation(line: 73, column: 5, scope: !8459)
!8459 = distinct !DILexicalBlock(scope: !8452, file: !3227, line: 73, column: 5)
!8460 = !DILocation(line: 74, column: 9, scope: !8461)
!8461 = distinct !DILexicalBlock(scope: !8462, file: !3227, line: 73, column: 85)
!8462 = distinct !DILexicalBlock(scope: !8459, file: !3227, line: 73, column: 5)
!8463 = !DILocation(line: 73, column: 81, scope: !8462)
!8464 = !DILocation(line: 73, column: 53, scope: !8462)
!8465 = distinct !{!8465, !8458, !8466}
!8466 = !DILocation(line: 75, column: 5, scope: !8459)
!8467 = !DILocation(line: 76, column: 5, scope: !8452)
!8468 = !DILocation(line: 77, column: 1, scope: !8452)
!8469 = distinct !DISubprogram(name: "NVIC_DisableIRQ", scope: !1281, file: !1281, line: 1507, type: !8206, scopeLine: 1508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !8470)
!8470 = !{!8471}
!8471 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8469, file: !1281, line: 1507, type: !974)
!8472 = !DILocation(line: 0, scope: !8469)
!8473 = !DILocation(line: 1509, column: 65, scope: !8469)
!8474 = !DILocation(line: 1509, column: 44, scope: !8469)
!8475 = !DILocation(line: 1509, column: 32, scope: !8469)
!8476 = !DILocation(line: 1509, column: 3, scope: !8469)
!8477 = !DILocation(line: 1509, column: 39, scope: !8469)
!8478 = !DILocation(line: 1510, column: 1, scope: !8469)
!8479 = distinct !DISubprogram(name: "nvic_unmask_all_interrupt", scope: !3227, file: !3227, line: 79, type: !260, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !8480)
!8480 = !{!8481, !8482}
!8481 = !DILocalVariable(name: "irq_number", scope: !8479, file: !3227, line: 81, type: !973)
!8482 = !DILocalVariable(name: "mask", scope: !8479, file: !3227, line: 82, type: !61)
!8483 = !DILocation(line: 82, column: 21, scope: !8479)
!8484 = !DILocation(line: 0, scope: !8479)
!8485 = !DILocation(line: 84, column: 5, scope: !8486)
!8486 = distinct !DILexicalBlock(scope: !8479, file: !3227, line: 84, column: 5)
!8487 = !DILocation(line: 85, column: 9, scope: !8488)
!8488 = distinct !DILexicalBlock(scope: !8489, file: !3227, line: 84, column: 85)
!8489 = distinct !DILexicalBlock(scope: !8486, file: !3227, line: 84, column: 5)
!8490 = !DILocation(line: 84, column: 81, scope: !8489)
!8491 = !DILocation(line: 84, column: 53, scope: !8489)
!8492 = distinct !{!8492, !8485, !8493}
!8493 = !DILocation(line: 86, column: 5, scope: !8486)
!8494 = !DILocation(line: 87, column: 5, scope: !8479)
!8495 = !DILocation(line: 88, column: 1, scope: !8479)
!8496 = distinct !DISubprogram(name: "NVIC_EnableIRQ", scope: !1281, file: !1281, line: 1494, type: !8206, scopeLine: 1495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !8497)
!8497 = !{!8498}
!8498 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8496, file: !1281, line: 1494, type: !974)
!8499 = !DILocation(line: 0, scope: !8496)
!8500 = !DILocation(line: 1497, column: 91, scope: !8496)
!8501 = !DILocation(line: 1497, column: 61, scope: !8496)
!8502 = !DILocation(line: 1497, column: 40, scope: !8496)
!8503 = !DILocation(line: 1497, column: 3, scope: !8496)
!8504 = !DILocation(line: 1497, column: 46, scope: !8496)
!8505 = !DILocation(line: 1498, column: 1, scope: !8496)
!8506 = distinct !DISubprogram(name: "nvic_clear_all_pending_interrupt", scope: !3227, file: !3227, line: 90, type: !260, scopeLine: 91, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !8507)
!8507 = !{!8508}
!8508 = !DILocalVariable(name: "irq_number", scope: !8506, file: !3227, line: 92, type: !973)
!8509 = !DILocation(line: 0, scope: !8506)
!8510 = !DILocation(line: 93, column: 5, scope: !8511)
!8511 = distinct !DILexicalBlock(scope: !8506, file: !3227, line: 93, column: 5)
!8512 = !DILocation(line: 94, column: 9, scope: !8513)
!8513 = distinct !DILexicalBlock(scope: !8514, file: !3227, line: 93, column: 85)
!8514 = distinct !DILexicalBlock(scope: !8511, file: !3227, line: 93, column: 5)
!8515 = !DILocation(line: 93, column: 81, scope: !8514)
!8516 = !DILocation(line: 93, column: 53, scope: !8514)
!8517 = distinct !{!8517, !8510, !8518}
!8518 = !DILocation(line: 95, column: 5, scope: !8511)
!8519 = !DILocation(line: 96, column: 1, scope: !8506)
!8520 = distinct !DISubprogram(name: "NVIC_ClearPendingIRQ", scope: !1281, file: !1281, line: 1547, type: !8206, scopeLine: 1548, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !8521)
!8521 = !{!8522}
!8522 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8520, file: !1281, line: 1547, type: !974)
!8523 = !DILocation(line: 0, scope: !8520)
!8524 = !DILocation(line: 1549, column: 65, scope: !8520)
!8525 = !DILocation(line: 1549, column: 44, scope: !8520)
!8526 = !DILocation(line: 1549, column: 32, scope: !8520)
!8527 = !DILocation(line: 1549, column: 3, scope: !8520)
!8528 = !DILocation(line: 1549, column: 39, scope: !8520)
!8529 = !DILocation(line: 1550, column: 1, scope: !8520)
!8530 = distinct !DISubprogram(name: "nvic_irq_software_trigger", scope: !3227, file: !3227, line: 98, type: !8193, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !8531)
!8531 = !{!8532}
!8532 = !DILocalVariable(name: "irq_number", arg: 1, scope: !8530, file: !3227, line: 98, type: !973)
!8533 = !DILocation(line: 0, scope: !8530)
!8534 = !DILocation(line: 100, column: 24, scope: !8535)
!8535 = distinct !DILexicalBlock(scope: !8530, file: !3227, line: 100, column: 9)
!8536 = !DILocation(line: 104, column: 5, scope: !8530)
!8537 = !DILocation(line: 105, column: 5, scope: !8530)
!8538 = !DILocation(line: 106, column: 1, scope: !8530)
!8539 = distinct !DISubprogram(name: "software_trigger_irq", scope: !3227, file: !3227, line: 45, type: !1167, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !8540)
!8540 = !{!8541}
!8541 = !DILocalVariable(name: "irq_number", arg: 1, scope: !8539, file: !3227, line: 45, type: !973)
!8542 = !DILocation(line: 0, scope: !8539)
!8543 = !DILocation(line: 47, column: 54, scope: !8539)
!8544 = !DILocation(line: 47, column: 16, scope: !8539)
!8545 = !DILocation(line: 445, column: 3, scope: !8546, inlinedAt: !8547)
!8546 = distinct !DISubprogram(name: "__DSB", scope: !8432, file: !8432, line: 443, type: !260, scopeLine: 444, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !262)
!8547 = distinct !DILocation(line: 48, column: 5, scope: !8539)
!8548 = !{i64 430370}
!8549 = !DILocation(line: 49, column: 1, scope: !8539)
!8550 = distinct !DISubprogram(name: "hal_nvic_query_exception_number", scope: !3227, file: !3227, line: 114, type: !4174, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !262)
!8551 = !DILocation(line: 116, column: 19, scope: !8550)
!8552 = !DILocation(line: 116, column: 24, scope: !8550)
!8553 = !DILocation(line: 116, column: 5, scope: !8550)
!8554 = distinct !DISubprogram(name: "SFI_BlankCheck", scope: !1363, file: !1363, line: 71, type: !8555, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1362, retainedNodes: !8557)
!8555 = !DISubroutineType(types: !8556)
!8556 = !{null, !65, !61}
!8557 = !{!8558, !8559, !8560, !8654, !8655, !8656}
!8558 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8554, file: !1363, line: 71, type: !65)
!8559 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !8554, file: !1363, line: 71, type: !61)
!8560 = !DILocalVariable(name: "D", scope: !8554, file: !1363, line: 73, type: !8561)
!8561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8562, size: 32)
!8562 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_Data", file: !1553, line: 193, baseType: !8563)
!8563 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1553, line: 134, size: 1824, elements: !8564)
!8564 = !{!8565, !8566, !8567, !8573, !8579, !8580, !8587, !8588, !8595, !8596, !8597, !8598, !8605, !8606, !8636, !8637, !8638, !8639, !8640, !8641, !8642, !8643, !8644, !8645, !8646, !8647, !8648, !8649, !8650, !8651, !8652, !8653}
!8565 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !8563, file: !1553, line: 136, baseType: !61, size: 32)
!8566 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !8563, file: !1553, line: 137, baseType: !872, size: 32, offset: 32)
!8567 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !8563, file: !1553, line: 138, baseType: !8568, size: 32, offset: 64)
!8568 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !1637, line: 56, baseType: !8569)
!8569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8570, size: 32)
!8570 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1637, line: 54, size: 8, elements: !8571)
!8571 = !{!8572}
!8572 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !8570, file: !1637, line: 55, baseType: !74, size: 8)
!8573 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !8563, file: !1553, line: 139, baseType: !8574, size: 32, offset: 96)
!8574 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !1637, line: 46, baseType: !8575)
!8575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8576, size: 32)
!8576 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1637, line: 44, size: 8, elements: !8577)
!8577 = !{!8578}
!8578 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !8576, file: !1637, line: 45, baseType: !74, size: 8)
!8579 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !8563, file: !1553, line: 140, baseType: !1649, size: 8, offset: 128)
!8580 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !8563, file: !1553, line: 143, baseType: !8581, size: 32, offset: 160)
!8581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8582, size: 32)
!8582 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !1655, line: 146, baseType: !8583)
!8583 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1655, line: 143, size: 64, elements: !8584)
!8584 = !{!8585, !8586}
!8585 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !8583, file: !1655, line: 144, baseType: !61, size: 32)
!8586 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !8583, file: !1655, line: 145, baseType: !61, size: 32, offset: 32)
!8587 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !8563, file: !1553, line: 144, baseType: !872, size: 32, offset: 192)
!8588 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !8563, file: !1553, line: 145, baseType: !8589, size: 32, offset: 224)
!8589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8590, size: 32)
!8590 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !1655, line: 152, baseType: !8591)
!8591 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1655, line: 149, size: 64, elements: !8592)
!8592 = !{!8593, !8594}
!8593 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !8591, file: !1655, line: 150, baseType: !61, size: 32)
!8594 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !8591, file: !1655, line: 151, baseType: !61, size: 32, offset: 32)
!8595 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !8563, file: !1553, line: 146, baseType: !872, size: 32, offset: 256)
!8596 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !8563, file: !1553, line: 147, baseType: !61, size: 32, offset: 288)
!8597 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !8563, file: !1553, line: 148, baseType: !872, size: 32, offset: 320)
!8598 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !8563, file: !1553, line: 151, baseType: !8599, size: 1024, offset: 352)
!8599 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8600, size: 1024, elements: !1678)
!8600 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !1655, line: 170, baseType: !8601)
!8601 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1655, line: 167, size: 64, elements: !8602)
!8602 = !{!8603, !8604}
!8603 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !8601, file: !1655, line: 168, baseType: !61, size: 32)
!8604 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !8601, file: !1655, line: 169, baseType: !61, size: 32, offset: 32)
!8605 = !DIDerivedType(tag: DW_TAG_member, name: "StatusMap", scope: !8563, file: !1553, line: 155, baseType: !1680, size: 32, offset: 1376)
!8606 = !DIDerivedType(tag: DW_TAG_member, name: "CMD", scope: !8563, file: !1553, line: 156, baseType: !8607, size: 32, offset: 1408)
!8607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8608, size: 32)
!8608 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_CMD", file: !1553, line: 124, baseType: !8609)
!8609 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1553, line: 90, size: 200, elements: !8610)
!8610 = !{!8611, !8612, !8613, !8614, !8615, !8616, !8617, !8618, !8619, !8620, !8621, !8622, !8623, !8624, !8625, !8626, !8627, !8628, !8629, !8630, !8631, !8632, !8633, !8634, !8635}
!8611 = !DIDerivedType(tag: DW_TAG_member, name: "PageProg", scope: !8609, file: !1553, line: 91, baseType: !74, size: 8)
!8612 = !DIDerivedType(tag: DW_TAG_member, name: "WriteEnable", scope: !8609, file: !1553, line: 92, baseType: !74, size: 8, offset: 8)
!8613 = !DIDerivedType(tag: DW_TAG_member, name: "Suspend", scope: !8609, file: !1553, line: 94, baseType: !74, size: 8, offset: 16)
!8614 = !DIDerivedType(tag: DW_TAG_member, name: "Resume", scope: !8609, file: !1553, line: 95, baseType: !74, size: 8, offset: 24)
!8615 = !DIDerivedType(tag: DW_TAG_member, name: "Read", scope: !8609, file: !1553, line: 96, baseType: !74, size: 8, offset: 32)
!8616 = !DIDerivedType(tag: DW_TAG_member, name: "Erase", scope: !8609, file: !1553, line: 98, baseType: !74, size: 8, offset: 40)
!8617 = !DIDerivedType(tag: DW_TAG_member, name: "Erase4K", scope: !8609, file: !1553, line: 99, baseType: !74, size: 8, offset: 48)
!8618 = !DIDerivedType(tag: DW_TAG_member, name: "Erase32K", scope: !8609, file: !1553, line: 100, baseType: !74, size: 8, offset: 56)
!8619 = !DIDerivedType(tag: DW_TAG_member, name: "Erase64K", scope: !8609, file: !1553, line: 101, baseType: !74, size: 8, offset: 64)
!8620 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_SPI", scope: !8609, file: !1553, line: 103, baseType: !74, size: 8, offset: 72)
!8621 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_QPI", scope: !8609, file: !1553, line: 104, baseType: !74, size: 8, offset: 80)
!8622 = !DIDerivedType(tag: DW_TAG_member, name: "ReadBPReg", scope: !8609, file: !1553, line: 106, baseType: !74, size: 8, offset: 88)
!8623 = !DIDerivedType(tag: DW_TAG_member, name: "WriteBPReg", scope: !8609, file: !1553, line: 107, baseType: !74, size: 8, offset: 96)
!8624 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSecurityReg", scope: !8609, file: !1553, line: 108, baseType: !74, size: 8, offset: 104)
!8625 = !DIDerivedType(tag: DW_TAG_member, name: "WriteSecurityReg", scope: !8609, file: !1553, line: 109, baseType: !74, size: 8, offset: 112)
!8626 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSuspendReg", scope: !8609, file: !1553, line: 110, baseType: !74, size: 8, offset: 120)
!8627 = !DIDerivedType(tag: DW_TAG_member, name: "ReadReadyReg", scope: !8609, file: !1553, line: 111, baseType: !74, size: 8, offset: 128)
!8628 = !DIDerivedType(tag: DW_TAG_member, name: "ReadFailReg", scope: !8609, file: !1553, line: 112, baseType: !74, size: 8, offset: 136)
!8629 = !DIDerivedType(tag: DW_TAG_member, name: "EnterDPD", scope: !8609, file: !1553, line: 114, baseType: !74, size: 8, offset: 144)
!8630 = !DIDerivedType(tag: DW_TAG_member, name: "LeaveDPD", scope: !8609, file: !1553, line: 115, baseType: !74, size: 8, offset: 152)
!8631 = !DIDerivedType(tag: DW_TAG_member, name: "OTPProg", scope: !8609, file: !1553, line: 118, baseType: !74, size: 8, offset: 160)
!8632 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !8609, file: !1553, line: 119, baseType: !74, size: 8, offset: 168)
!8633 = !DIDerivedType(tag: DW_TAG_member, name: "OTPEnter", scope: !8609, file: !1553, line: 120, baseType: !74, size: 8, offset: 176)
!8634 = !DIDerivedType(tag: DW_TAG_member, name: "OTPExit", scope: !8609, file: !1553, line: 121, baseType: !74, size: 8, offset: 184)
!8635 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !8609, file: !1553, line: 122, baseType: !74, size: 8, offset: 192)
!8636 = !DIDerivedType(tag: DW_TAG_member, name: "Flag", scope: !8563, file: !1553, line: 157, baseType: !61, size: 32, offset: 1440)
!8637 = !DIDerivedType(tag: DW_TAG_member, name: "BPRBitCount", scope: !8563, file: !1553, line: 158, baseType: !1041, size: 16, offset: 1472)
!8638 = !DIDerivedType(tag: DW_TAG_member, name: "UniformBlock", scope: !8563, file: !1553, line: 159, baseType: !1041, size: 16, offset: 1488)
!8639 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLength", scope: !8563, file: !1553, line: 163, baseType: !1041, size: 16, offset: 1504)
!8640 = !DIDerivedType(tag: DW_TAG_member, name: "OTPBase", scope: !8563, file: !1553, line: 164, baseType: !1041, size: 16, offset: 1520)
!8641 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendLatency", scope: !8563, file: !1553, line: 167, baseType: !74, size: 8, offset: 1536)
!8642 = !DIDerivedType(tag: DW_TAG_member, name: "FlashID", scope: !8563, file: !1553, line: 168, baseType: !1719, size: 24, offset: 1544)
!8643 = !DIDerivedType(tag: DW_TAG_member, name: "DriverStatus", scope: !8563, file: !1553, line: 169, baseType: !74, size: 8, offset: 1568)
!8644 = !DIDerivedType(tag: DW_TAG_member, name: "AddressCycle", scope: !8563, file: !1553, line: 170, baseType: !74, size: 8, offset: 1576)
!8645 = !DIDerivedType(tag: DW_TAG_member, name: "CS", scope: !8563, file: !1553, line: 173, baseType: !1041, size: 16, offset: 1584)
!8646 = !DIDerivedType(tag: DW_TAG_member, name: "sf_dal_fix", scope: !8563, file: !1553, line: 174, baseType: !61, size: 32, offset: 1600)
!8647 = !DIDerivedType(tag: DW_TAG_member, name: "CS_Size", scope: !8563, file: !1553, line: 175, baseType: !61, size: 32, offset: 1632)
!8648 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_BUSY", scope: !8563, file: !1553, line: 178, baseType: !263, size: 8, offset: 1664)
!8649 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_SUSPENDED", scope: !8563, file: !1553, line: 179, baseType: !263, size: 8, offset: 1672)
!8650 = !DIDerivedType(tag: DW_TAG_member, name: "UnlockBlock", scope: !8563, file: !1553, line: 182, baseType: !1728, size: 32, offset: 1696)
!8651 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !8563, file: !1553, line: 186, baseType: !1728, size: 32, offset: 1728)
!8652 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !8563, file: !1553, line: 187, baseType: !1733, size: 32, offset: 1760)
!8653 = !DIDerivedType(tag: DW_TAG_member, name: "OTPWrite", scope: !8563, file: !1553, line: 188, baseType: !1733, size: 32, offset: 1792)
!8654 = !DILocalVariable(name: "i", scope: !8554, file: !1363, line: 74, type: !61)
!8655 = !DILocalVariable(name: "data_cnt", scope: !8554, file: !1363, line: 74, type: !61)
!8656 = !DILocalVariable(name: "p_data", scope: !8554, file: !1363, line: 75, type: !1400)
!8657 = !DILocation(line: 0, scope: !8554)
!8658 = !DILocation(line: 77, column: 16, scope: !8554)
!8659 = !DILocation(line: 79, column: 53, scope: !8660)
!8660 = distinct !DILexicalBlock(scope: !8661, file: !1363, line: 79, column: 5)
!8661 = distinct !DILexicalBlock(scope: !8554, file: !1363, line: 79, column: 5)
!8662 = !DILocation(line: 79, column: 5, scope: !8661)
!8663 = !DILocation(line: 79, column: 41, scope: !8661)
!8664 = !DILocation(line: 77, column: 47, scope: !8554)
!8665 = !DILocation(line: 80, column: 13, scope: !8666)
!8666 = distinct !DILexicalBlock(scope: !8667, file: !1363, line: 80, column: 13)
!8667 = distinct !DILexicalBlock(scope: !8660, file: !1363, line: 79, column: 80)
!8668 = !DILocation(line: 80, column: 21, scope: !8666)
!8669 = !DILocation(line: 80, column: 13, scope: !8667)
!8670 = !DILocation(line: 81, column: 13, scope: !8671)
!8671 = distinct !DILexicalBlock(scope: !8672, file: !1363, line: 81, column: 13)
!8672 = distinct !DILexicalBlock(scope: !8673, file: !1363, line: 81, column: 13)
!8673 = distinct !DILexicalBlock(scope: !8674, file: !1363, line: 81, column: 13)
!8674 = distinct !DILexicalBlock(scope: !8666, file: !1363, line: 80, column: 36)
!8675 = !DILocation(line: 79, column: 65, scope: !8660)
!8676 = !DILocation(line: 79, column: 70, scope: !8660)
!8677 = distinct !{!8677, !8662, !8678}
!8678 = !DILocation(line: 84, column: 5, scope: !8661)
!8679 = !DILocation(line: 85, column: 1, scope: !8554)
!8680 = distinct !DISubprogram(name: "SFI_ReverseByteOrder", scope: !1363, file: !1363, line: 93, type: !3922, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1362, retainedNodes: !8681)
!8681 = !{!8682, !8683}
!8682 = !DILocalVariable(name: "num", arg: 1, scope: !8680, file: !1363, line: 93, type: !61)
!8683 = !DILocalVariable(name: "ret", scope: !8680, file: !1363, line: 95, type: !16)
!8684 = !DILocation(line: 0, scope: !8680)
!8685 = !DILocation(line: 100, column: 9, scope: !8680)
!8686 = !DILocation(line: 102, column: 5, scope: !8680)
!8687 = distinct !DISubprogram(name: "SFI_MacEnable", scope: !1363, file: !1363, line: 110, type: !8688, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1362, retainedNodes: !8691)
!8688 = !DISubroutineType(types: !8689)
!8689 = !{null, !8690}
!8690 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1041)
!8691 = !{!8692, !8693}
!8692 = !DILocalVariable(name: "CS", arg: 1, scope: !8687, file: !1363, line: 110, type: !8690)
!8693 = !DILocalVariable(name: "val", scope: !8687, file: !1363, line: 112, type: !61)
!8694 = !DILocation(line: 0, scope: !8687)
!8695 = !DILocation(line: 114, column: 5, scope: !8696)
!8696 = distinct !DILexicalBlock(scope: !8697, file: !1363, line: 114, column: 5)
!8697 = distinct !DILexicalBlock(scope: !8687, file: !1363, line: 114, column: 5)
!8698 = !DILocation(line: 116, column: 16, scope: !8687)
!8699 = !DILocation(line: 117, column: 9, scope: !8687)
!8700 = !DILocation(line: 122, column: 13, scope: !8701)
!8701 = distinct !DILexicalBlock(scope: !8702, file: !1363, line: 121, column: 27)
!8702 = distinct !DILexicalBlock(scope: !8703, file: !1363, line: 121, column: 16)
!8703 = distinct !DILexicalBlock(scope: !8687, file: !1363, line: 117, column: 9)
!8704 = !DILocation(line: 127, column: 9, scope: !8705)
!8705 = distinct !DILexicalBlock(scope: !8706, file: !1363, line: 127, column: 9)
!8706 = distinct !DILexicalBlock(scope: !8707, file: !1363, line: 127, column: 9)
!8707 = distinct !DILexicalBlock(scope: !8708, file: !1363, line: 127, column: 9)
!8708 = distinct !DILexicalBlock(scope: !8702, file: !1363, line: 125, column: 12)
!8709 = !DILocation(line: 0, scope: !8703)
!8710 = !DILocation(line: 134, column: 5, scope: !8687)
!8711 = !DILocation(line: 134, column: 19, scope: !8687)
!8712 = !DILocation(line: 134, column: 35, scope: !8687)
!8713 = !DILocation(line: 134, column: 12, scope: !8687)
!8714 = distinct !{!8714, !8710, !8715}
!8715 = !DILocation(line: 134, column: 57, scope: !8687)
!8716 = !DILocation(line: 135, column: 19, scope: !8687)
!8717 = !DILocation(line: 135, column: 34, scope: !8687)
!8718 = !DILocation(line: 135, column: 12, scope: !8687)
!8719 = !DILocation(line: 135, column: 5, scope: !8687)
!8720 = distinct !{!8720, !8719, !8721}
!8721 = !DILocation(line: 135, column: 50, scope: !8687)
!8722 = !DILocation(line: 130, column: 9, scope: !8687)
!8723 = !DILocation(line: 138, column: 24, scope: !8687)
!8724 = !DILocation(line: 139, column: 1, scope: !8687)
!8725 = distinct !DISubprogram(name: "SFI_MacLeave", scope: !1363, file: !1363, line: 148, type: !8688, scopeLine: 149, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1362, retainedNodes: !8726)
!8726 = !{!8727, !8728}
!8727 = !DILocalVariable(name: "CS", arg: 1, scope: !8725, file: !1363, line: 148, type: !8690)
!8728 = !DILocalVariable(name: "val", scope: !8725, file: !1363, line: 150, type: !61)
!8729 = !DILocation(line: 0, scope: !8725)
!8730 = !DILocation(line: 153, column: 16, scope: !8725)
!8731 = !DILocation(line: 154, column: 9, scope: !8725)
!8732 = !DILocation(line: 155, column: 24, scope: !8725)
!8733 = !DILocation(line: 158, column: 5, scope: !8725)
!8734 = !DILocation(line: 158, column: 18, scope: !8725)
!8735 = !DILocation(line: 158, column: 32, scope: !8725)
!8736 = distinct !{!8736, !8733, !8737}
!8737 = !DILocation(line: 158, column: 49, scope: !8725)
!8738 = !DILocation(line: 163, column: 16, scope: !8725)
!8739 = !DILocation(line: 164, column: 9, scope: !8725)
!8740 = !DILocation(line: 165, column: 24, scope: !8725)
!8741 = !DILocation(line: 168, column: 5, scope: !8725)
!8742 = !DILocation(line: 168, column: 18, scope: !8725)
!8743 = !DILocation(line: 168, column: 32, scope: !8725)
!8744 = distinct !{!8744, !8741, !8745}
!8745 = !DILocation(line: 168, column: 46, scope: !8725)
!8746 = !DILocation(line: 174, column: 10, scope: !8747)
!8747 = distinct !DILexicalBlock(scope: !8725, file: !1363, line: 174, column: 9)
!8748 = !DILocation(line: 174, column: 25, scope: !8747)
!8749 = !DILocation(line: 174, column: 9, scope: !8725)
!8750 = !DILocation(line: 175, column: 9, scope: !8751)
!8751 = distinct !DILexicalBlock(scope: !8752, file: !1363, line: 175, column: 9)
!8752 = distinct !DILexicalBlock(scope: !8753, file: !1363, line: 175, column: 9)
!8753 = distinct !DILexicalBlock(scope: !8747, file: !1363, line: 174, column: 36)
!8754 = !DILocation(line: 176, column: 5, scope: !8753)
!8755 = !DILocation(line: 179, column: 1, scope: !8725)
!8756 = distinct !DISubprogram(name: "SFI_MacTrigger", scope: !1363, file: !1363, line: 186, type: !8757, scopeLine: 187, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1362, retainedNodes: !8759)
!8757 = !DISubroutineType(types: !8758)
!8758 = !{!61, !8690}
!8759 = !{!8760, !8761, !8762}
!8760 = !DILocalVariable(name: "CS", arg: 1, scope: !8756, file: !1363, line: 186, type: !8690)
!8761 = !DILocalVariable(name: "val", scope: !8756, file: !1363, line: 188, type: !61)
!8762 = !DILocalVariable(name: "misc_ctl", scope: !8756, file: !1363, line: 189, type: !61)
!8763 = !DILocation(line: 0, scope: !8756)
!8764 = !DILocation(line: 204, column: 16, scope: !8756)
!8765 = !DILocation(line: 208, column: 12, scope: !8766)
!8766 = distinct !DILexicalBlock(scope: !8756, file: !1363, line: 208, column: 9)
!8767 = !DILocation(line: 208, column: 9, scope: !8756)
!8768 = !DILocation(line: 212, column: 20, scope: !8756)
!8769 = !DILocation(line: 215, column: 1, scope: !8756)
!8770 = !DILocation(line: 215, column: 15, scope: !8756)
!8771 = !DILocation(line: 215, column: 29, scope: !8756)
!8772 = !DILocation(line: 215, column: 8, scope: !8756)
!8773 = distinct !{!8773, !8769, !8774}
!8774 = !DILocation(line: 215, column: 46, scope: !8756)
!8775 = !DILocation(line: 216, column: 22, scope: !8756)
!8776 = !DILocation(line: 216, column: 36, scope: !8756)
!8777 = !DILocation(line: 216, column: 9, scope: !8756)
!8778 = distinct !{!8778, !8777, !8779}
!8779 = !DILocation(line: 216, column: 47, scope: !8756)
!8780 = !DILocation(line: 218, column: 13, scope: !8756)
!8781 = distinct !DISubprogram(name: "SFI_MacWaitReady", scope: !1363, file: !1363, line: 227, type: !8688, scopeLine: 228, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1362, retainedNodes: !8782)
!8782 = !{!8783}
!8783 = !DILocalVariable(name: "CS", arg: 1, scope: !8781, file: !1363, line: 227, type: !8690)
!8784 = !DILocation(line: 0, scope: !8781)
!8785 = !DILocation(line: 235, column: 5, scope: !8781)
!8786 = !DILocation(line: 236, column: 5, scope: !8781)
!8787 = !DILocation(line: 238, column: 1, scope: !8781)
!8788 = distinct !DISubprogram(name: "SFI_Dev_Command", scope: !1363, file: !1363, line: 249, type: !8789, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1362, retainedNodes: !8791)
!8789 = !DISubroutineType(types: !8790)
!8790 = !{null, !8690, !882}
!8791 = !{!8792, !8793, !8794, !8795, !8796}
!8792 = !DILocalVariable(name: "CS", arg: 1, scope: !8788, file: !1363, line: 249, type: !8690)
!8793 = !DILocalVariable(name: "cmd", arg: 2, scope: !8788, file: !1363, line: 249, type: !882)
!8794 = !DILocalVariable(name: "cmdi", scope: !8788, file: !1363, line: 251, type: !61)
!8795 = !DILocalVariable(name: "cmdo", scope: !8788, file: !1363, line: 251, type: !61)
!8796 = !DILocalVariable(name: "len", scope: !8788, file: !1363, line: 252, type: !74)
!8797 = !DILocation(line: 0, scope: !8788)
!8798 = !DILocation(line: 254, column: 46, scope: !8799)
!8799 = distinct !DILexicalBlock(scope: !8800, file: !1363, line: 254, column: 5)
!8800 = distinct !DILexicalBlock(scope: !8788, file: !1363, line: 254, column: 5)
!8801 = !DILocation(line: 254, column: 5, scope: !8800)
!8802 = !DILocation(line: 255, column: 22, scope: !8803)
!8803 = distinct !DILexicalBlock(scope: !8799, file: !1363, line: 254, column: 103)
!8804 = !DILocation(line: 255, column: 59, scope: !8803)
!8805 = !DILocation(line: 255, column: 51, scope: !8803)
!8806 = !DILocation(line: 254, column: 65, scope: !8799)
!8807 = !DILocation(line: 254, column: 97, scope: !8799)
!8808 = distinct !{!8808, !8801, !8809}
!8809 = !DILocation(line: 256, column: 5, scope: !8800)
!8810 = !DILocation(line: 258, column: 9, scope: !8811)
!8811 = distinct !DILexicalBlock(scope: !8788, file: !1363, line: 258, column: 9)
!8812 = !DILocation(line: 262, column: 5, scope: !8788)
!8813 = !DILocation(line: 263, column: 33, scope: !8788)
!8814 = !DILocation(line: 264, column: 25, scope: !8788)
!8815 = !DILocation(line: 265, column: 24, scope: !8788)
!8816 = !DILocation(line: 266, column: 5, scope: !8788)
!8817 = !DILocation(line: 268, column: 5, scope: !8788)
!8818 = !DILocation(line: 269, column: 1, scope: !8788)
!8819 = distinct !DISubprogram(name: "SFI_Dev_CommandAddress", scope: !1363, file: !1363, line: 281, type: !8820, scopeLine: 282, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1362, retainedNodes: !8822)
!8820 = !DISubroutineType(types: !8821)
!8821 = !{null, !8690, !3147, !882, !882}
!8822 = !{!8823, !8824, !8825, !8826, !8827, !8828}
!8823 = !DILocalVariable(name: "CS", arg: 1, scope: !8819, file: !1363, line: 281, type: !8690)
!8824 = !DILocalVariable(name: "cmd", arg: 2, scope: !8819, file: !1363, line: 281, type: !3147)
!8825 = !DILocalVariable(name: "address", arg: 3, scope: !8819, file: !1363, line: 281, type: !882)
!8826 = !DILocalVariable(name: "address_bytes", arg: 4, scope: !8819, file: !1363, line: 281, type: !882)
!8827 = !DILocalVariable(name: "cmd1", scope: !8819, file: !1363, line: 283, type: !61)
!8828 = !DILocalVariable(name: "cmd2", scope: !8819, file: !1363, line: 283, type: !61)
!8829 = !DILocation(line: 0, scope: !8819)
!8830 = !DILocation(line: 285, column: 12, scope: !8819)
!8831 = !DILocation(line: 287, column: 23, scope: !8832)
!8832 = distinct !DILexicalBlock(scope: !8819, file: !1363, line: 287, column: 9)
!8833 = !DILocation(line: 287, column: 9, scope: !8819)
!8834 = !DILocation(line: 288, column: 22, scope: !8835)
!8835 = distinct !DILexicalBlock(scope: !8832, file: !1363, line: 287, column: 31)
!8836 = !DILocation(line: 288, column: 55, scope: !8835)
!8837 = !DILocation(line: 288, column: 53, scope: !8835)
!8838 = !DILocation(line: 289, column: 5, scope: !8835)
!8839 = !DILocation(line: 290, column: 22, scope: !8840)
!8840 = distinct !DILexicalBlock(scope: !8832, file: !1363, line: 289, column: 12)
!8841 = !DILocation(line: 290, column: 53, scope: !8840)
!8842 = !DILocation(line: 290, column: 51, scope: !8840)
!8843 = !DILocation(line: 291, column: 21, scope: !8840)
!8844 = !DILocation(line: 0, scope: !8832)
!8845 = !DILocation(line: 294, column: 33, scope: !8819)
!8846 = !DILocation(line: 295, column: 38, scope: !8819)
!8847 = !DILocation(line: 296, column: 41, scope: !8819)
!8848 = !DILocation(line: 296, column: 25, scope: !8819)
!8849 = !DILocation(line: 297, column: 24, scope: !8819)
!8850 = !DILocation(line: 299, column: 5, scope: !8819)
!8851 = !DILocation(line: 300, column: 5, scope: !8819)
!8852 = !DILocation(line: 302, column: 1, scope: !8819)
!8853 = distinct !DISubprogram(name: "SFI_GPRAM_Write_C1A3", scope: !1363, file: !1363, line: 312, type: !8854, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1362, retainedNodes: !8856)
!8854 = !DISubroutineType(types: !8855)
!8855 = !{!61, !882, !882}
!8856 = !{!8857, !8858}
!8857 = !DILocalVariable(name: "cmd", arg: 1, scope: !8853, file: !1363, line: 312, type: !882)
!8858 = !DILocalVariable(name: "address", arg: 2, scope: !8853, file: !1363, line: 312, type: !882)
!8859 = !DILocation(line: 0, scope: !8853)
!8860 = !DILocation(line: 314, column: 14, scope: !8853)
!8861 = !DILocation(line: 314, column: 44, scope: !8853)
!8862 = !DILocation(line: 314, column: 82, scope: !8853)
!8863 = !DILocation(line: 314, column: 75, scope: !8853)
!8864 = !DILocation(line: 314, column: 5, scope: !8853)
!8865 = distinct !DISubprogram(name: "SFI_GPRAM_Write_C1A4", scope: !1363, file: !1363, line: 332, type: !8866, scopeLine: 333, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1362, retainedNodes: !8869)
!8866 = !DISubroutineType(types: !8867)
!8867 = !{!61, !882, !882, !8868, !1400}
!8868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !872, size: 32)
!8869 = !{!8870, !8871, !8872, !8873, !8874, !8882, !8883, !8884}
!8870 = !DILocalVariable(name: "cmd", arg: 1, scope: !8865, file: !1363, line: 332, type: !882)
!8871 = !DILocalVariable(name: "address", arg: 2, scope: !8865, file: !1363, line: 332, type: !882)
!8872 = !DILocalVariable(name: "p_data", arg: 3, scope: !8865, file: !1363, line: 332, type: !8868)
!8873 = !DILocalVariable(name: "length", arg: 4, scope: !8865, file: !1363, line: 332, type: !1400)
!8874 = !DILocalVariable(name: "tmp", scope: !8865, file: !1363, line: 334, type: !8875)
!8875 = !DIDerivedType(tag: DW_TAG_typedef, name: "sf_uint", file: !1553, line: 202, baseType: !8876)
!8876 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1553, line: 198, size: 32, elements: !8877)
!8877 = !{!8878, !8879, !8881}
!8878 = !DIDerivedType(tag: DW_TAG_member, name: "u32", scope: !8876, file: !1553, line: 199, baseType: !61, size: 32)
!8879 = !DIDerivedType(tag: DW_TAG_member, name: "u16", scope: !8876, file: !1553, line: 200, baseType: !8880, size: 32)
!8880 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1041, size: 32, elements: !531)
!8881 = !DIDerivedType(tag: DW_TAG_member, name: "u8", scope: !8876, file: !1553, line: 201, baseType: !528, size: 32)
!8882 = !DILocalVariable(name: "cmd1", scope: !8865, file: !1363, line: 335, type: !61)
!8883 = !DILocalVariable(name: "cmd2", scope: !8865, file: !1363, line: 335, type: !61)
!8884 = !DILocalVariable(name: "i", scope: !8865, file: !1363, line: 336, type: !61)
!8885 = !DILocation(line: 0, scope: !8865)
!8886 = !DILocation(line: 334, column: 5, scope: !8865)
!8887 = !DILocation(line: 334, column: 16, scope: !8865)
!8888 = !DILocation(line: 338, column: 12, scope: !8865)
!8889 = !DILocation(line: 340, column: 17, scope: !8865)
!8890 = !DILocation(line: 342, column: 17, scope: !8865)
!8891 = !DILocation(line: 342, column: 9, scope: !8865)
!8892 = !DILocation(line: 342, column: 15, scope: !8865)
!8893 = !DILocation(line: 344, column: 22, scope: !8894)
!8894 = distinct !DILexicalBlock(scope: !8895, file: !1363, line: 343, column: 29)
!8895 = distinct !DILexicalBlock(scope: !8896, file: !1363, line: 343, column: 5)
!8896 = distinct !DILexicalBlock(scope: !8865, file: !1363, line: 343, column: 5)
!8897 = !DILocation(line: 343, column: 5, scope: !8896)
!8898 = !DILocation(line: 344, column: 21, scope: !8894)
!8899 = !DILocation(line: 344, column: 9, scope: !8894)
!8900 = !DILocation(line: 344, column: 19, scope: !8894)
!8901 = !DILocation(line: 345, column: 18, scope: !8894)
!8902 = !DILocation(line: 343, column: 25, scope: !8895)
!8903 = !DILocation(line: 343, column: 19, scope: !8895)
!8904 = distinct !{!8904, !8897, !8905}
!8905 = !DILocation(line: 346, column: 5, scope: !8896)
!8906 = !DILocation(line: 347, column: 16, scope: !8865)
!8907 = !DILocation(line: 348, column: 16, scope: !8865)
!8908 = !DILocation(line: 348, column: 15, scope: !8865)
!8909 = !DILocation(line: 339, column: 17, scope: !8865)
!8910 = !DILocation(line: 339, column: 52, scope: !8865)
!8911 = !DILocation(line: 339, column: 45, scope: !8865)
!8912 = !DILocation(line: 348, column: 13, scope: !8865)
!8913 = !DILocation(line: 349, column: 38, scope: !8865)
!8914 = !DILocation(line: 351, column: 1, scope: !8865)
!8915 = !DILocation(line: 350, column: 5, scope: !8865)
!8916 = distinct !DISubprogram(name: "SFI_GPRAM_Write", scope: !1363, file: !1363, line: 367, type: !8917, scopeLine: 368, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1362, retainedNodes: !8919)
!8917 = !DISubroutineType(types: !8918)
!8918 = !{null, !61, !65, !1343}
!8919 = !{!8920, !8921, !8922, !8923, !8924, !8925}
!8920 = !DILocalVariable(name: "gpram_offset", arg: 1, scope: !8916, file: !1363, line: 367, type: !61)
!8921 = !DILocalVariable(name: "buff", arg: 2, scope: !8916, file: !1363, line: 367, type: !65)
!8922 = !DILocalVariable(name: "length", arg: 3, scope: !8916, file: !1363, line: 367, type: !1343)
!8923 = !DILocalVariable(name: "i", scope: !8916, file: !1363, line: 369, type: !61)
!8924 = !DILocalVariable(name: "p_data", scope: !8916, file: !1363, line: 370, type: !872)
!8925 = !DILocalVariable(name: "tmp", scope: !8916, file: !1363, line: 371, type: !8875)
!8926 = !DILocation(line: 0, scope: !8916)
!8927 = !DILocation(line: 371, column: 5, scope: !8916)
!8928 = !DILocation(line: 371, column: 13, scope: !8916)
!8929 = !DILocation(line: 373, column: 18, scope: !8916)
!8930 = !DILocation(line: 376, column: 15, scope: !8931)
!8931 = distinct !DILexicalBlock(scope: !8916, file: !1363, line: 376, column: 9)
!8932 = !DILocation(line: 376, column: 30, scope: !8931)
!8933 = !DILocation(line: 376, column: 11, scope: !8931)
!8934 = !DILocation(line: 376, column: 9, scope: !8916)
!8935 = !DILocation(line: 377, column: 23, scope: !8936)
!8936 = distinct !DILexicalBlock(scope: !8937, file: !1363, line: 377, column: 9)
!8937 = distinct !DILexicalBlock(scope: !8938, file: !1363, line: 377, column: 9)
!8938 = distinct !DILexicalBlock(scope: !8931, file: !1363, line: 376, column: 41)
!8939 = !DILocation(line: 377, column: 9, scope: !8937)
!8940 = !DILocation(line: 378, column: 13, scope: !8941)
!8941 = distinct !DILexicalBlock(scope: !8936, file: !1363, line: 377, column: 80)
!8942 = !DILocation(line: 377, column: 41, scope: !8936)
!8943 = !DILocation(line: 377, column: 54, scope: !8936)
!8944 = !DILocation(line: 377, column: 67, scope: !8936)
!8945 = distinct !{!8945, !8939, !8946}
!8946 = !DILocation(line: 379, column: 9, scope: !8937)
!8947 = !DILocation(line: 382, column: 37, scope: !8948)
!8948 = distinct !DILexicalBlock(scope: !8931, file: !1363, line: 382, column: 14)
!8949 = !DILocation(line: 382, column: 16, scope: !8948)
!8950 = !DILocation(line: 0, scope: !8948)
!8951 = !DILocation(line: 382, column: 14, scope: !8931)
!8952 = !DILocation(line: 391, column: 9, scope: !8953)
!8953 = distinct !DILexicalBlock(scope: !8954, file: !1363, line: 391, column: 9)
!8954 = distinct !DILexicalBlock(scope: !8948, file: !1363, line: 390, column: 13)
!8955 = !DILocation(line: 383, column: 9, scope: !8956)
!8956 = distinct !DILexicalBlock(scope: !8957, file: !1363, line: 383, column: 9)
!8957 = distinct !DILexicalBlock(scope: !8948, file: !1363, line: 382, column: 49)
!8958 = !DILocation(line: 384, column: 26, scope: !8959)
!8959 = distinct !DILexicalBlock(scope: !8960, file: !1363, line: 383, column: 80)
!8960 = distinct !DILexicalBlock(scope: !8956, file: !1363, line: 383, column: 9)
!8961 = !DILocation(line: 384, column: 24, scope: !8959)
!8962 = !DILocation(line: 385, column: 47, scope: !8959)
!8963 = !DILocation(line: 385, column: 26, scope: !8959)
!8964 = !DILocation(line: 385, column: 24, scope: !8959)
!8965 = !DILocation(line: 386, column: 13, scope: !8959)
!8966 = !DILocation(line: 383, column: 41, scope: !8960)
!8967 = !DILocation(line: 383, column: 54, scope: !8960)
!8968 = !DILocation(line: 383, column: 67, scope: !8960)
!8969 = !DILocation(line: 383, column: 23, scope: !8960)
!8970 = distinct !{!8970, !8955, !8971}
!8971 = !DILocation(line: 387, column: 9, scope: !8956)
!8972 = !DILocation(line: 392, column: 13, scope: !8973)
!8973 = distinct !DILexicalBlock(scope: !8974, file: !1363, line: 392, column: 13)
!8974 = distinct !DILexicalBlock(scope: !8975, file: !1363, line: 391, column: 61)
!8975 = distinct !DILexicalBlock(scope: !8953, file: !1363, line: 391, column: 9)
!8976 = !DILocation(line: 393, column: 36, scope: !8977)
!8977 = distinct !DILexicalBlock(scope: !8978, file: !1363, line: 392, column: 51)
!8978 = distinct !DILexicalBlock(scope: !8973, file: !1363, line: 392, column: 13)
!8979 = !DILocation(line: 393, column: 29, scope: !8977)
!8980 = !DILocation(line: 393, column: 17, scope: !8977)
!8981 = !DILocation(line: 393, column: 27, scope: !8977)
!8982 = !DILocation(line: 392, column: 47, scope: !8978)
!8983 = !DILocation(line: 392, column: 27, scope: !8978)
!8984 = !DILocation(line: 392, column: 31, scope: !8978)
!8985 = distinct !{!8985, !8972, !8986}
!8986 = !DILocation(line: 394, column: 13, scope: !8973)
!8987 = !DILocation(line: 395, column: 13, scope: !8974)
!8988 = !DILocation(line: 391, column: 41, scope: !8975)
!8989 = !DILocation(line: 391, column: 54, scope: !8975)
!8990 = !DILocation(line: 391, column: 23, scope: !8975)
!8991 = distinct !{!8991, !8952, !8992}
!8992 = !DILocation(line: 396, column: 9, scope: !8953)
!8993 = !DILocation(line: 398, column: 1, scope: !8916)
!8994 = distinct !DISubprogram(name: "SFI_Dev_Command_Ext", scope: !1363, file: !1363, line: 414, type: !8995, scopeLine: 415, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1362, retainedNodes: !8997)
!8995 = !DISubroutineType(types: !8996)
!8996 = !{null, !8690, !6469, !872, !8690, !8690}
!8997 = !{!8998, !8999, !9000, !9001, !9002, !9003, !9004, !9005, !9006, !9007}
!8998 = !DILocalVariable(name: "CS", arg: 1, scope: !8994, file: !1363, line: 414, type: !8690)
!8999 = !DILocalVariable(name: "cmd", arg: 2, scope: !8994, file: !1363, line: 414, type: !6469)
!9000 = !DILocalVariable(name: "data", arg: 3, scope: !8994, file: !1363, line: 414, type: !872)
!9001 = !DILocalVariable(name: "outl", arg: 4, scope: !8994, file: !1363, line: 414, type: !8690)
!9002 = !DILocalVariable(name: "inl", arg: 5, scope: !8994, file: !1363, line: 414, type: !8690)
!9003 = !DILocalVariable(name: "tmp", scope: !8994, file: !1363, line: 416, type: !61)
!9004 = !DILocalVariable(name: "i", scope: !8994, file: !1363, line: 417, type: !61)
!9005 = !DILocalVariable(name: "j", scope: !8994, file: !1363, line: 417, type: !61)
!9006 = !DILocalVariable(name: "p_data", scope: !8994, file: !1363, line: 418, type: !872)
!9007 = !DILocalVariable(name: "p_tmp", scope: !8994, file: !1363, line: 418, type: !872)
!9008 = !DILocation(line: 0, scope: !8994)
!9009 = !DILocation(line: 416, column: 5, scope: !8994)
!9010 = !DILocation(line: 422, column: 60, scope: !9011)
!9011 = distinct !DILexicalBlock(scope: !9012, file: !1363, line: 422, column: 5)
!9012 = distinct !DILexicalBlock(scope: !8994, file: !1363, line: 422, column: 5)
!9013 = !DILocation(line: 422, column: 5, scope: !9012)
!9014 = !DILocation(line: 423, column: 25, scope: !9015)
!9015 = distinct !DILexicalBlock(scope: !9016, file: !1363, line: 423, column: 9)
!9016 = distinct !DILexicalBlock(scope: !9011, file: !1363, line: 422, column: 83)
!9017 = !DILocation(line: 423, column: 32, scope: !9018)
!9018 = distinct !DILexicalBlock(scope: !9015, file: !1363, line: 423, column: 9)
!9019 = !DILocation(line: 423, column: 9, scope: !9015)
!9020 = !DILocation(line: 424, column: 24, scope: !9021)
!9021 = distinct !DILexicalBlock(scope: !9018, file: !1363, line: 423, column: 59)
!9022 = !DILocation(line: 424, column: 13, scope: !9021)
!9023 = !DILocation(line: 424, column: 22, scope: !9021)
!9024 = !DILocation(line: 423, column: 50, scope: !9018)
!9025 = !DILocation(line: 423, column: 55, scope: !9018)
!9026 = !DILocation(line: 423, column: 39, scope: !9018)
!9027 = distinct !{!9027, !9019, !9028}
!9028 = !DILocation(line: 425, column: 9, scope: !9015)
!9029 = !DILocation(line: 426, column: 9, scope: !9016)
!9030 = !DILocation(line: 0, scope: !9012)
!9031 = !DILocation(line: 422, column: 75, scope: !9011)
!9032 = distinct !{!9032, !9013, !9033}
!9033 = !DILocation(line: 427, column: 5, scope: !9012)
!9034 = !DILocation(line: 428, column: 25, scope: !8994)
!9035 = !DILocation(line: 429, column: 26, scope: !8994)
!9036 = !DILocation(line: 429, column: 24, scope: !8994)
!9037 = !DILocation(line: 430, column: 5, scope: !8994)
!9038 = !DILocation(line: 431, column: 5, scope: !8994)
!9039 = !DILocation(line: 433, column: 67, scope: !9040)
!9040 = distinct !DILexicalBlock(scope: !9041, file: !1363, line: 433, column: 5)
!9041 = distinct !DILexicalBlock(scope: !8994, file: !1363, line: 433, column: 5)
!9042 = !DILocation(line: 433, column: 5, scope: !9041)
!9043 = !DILocation(line: 433, column: 56, scope: !9041)
!9044 = !DILocation(line: 434, column: 17, scope: !9045)
!9045 = distinct !DILexicalBlock(scope: !9040, file: !1363, line: 433, column: 100)
!9046 = !DILocation(line: 434, column: 15, scope: !9045)
!9047 = !DILocation(line: 433, column: 74, scope: !9040)
!9048 = !DILocation(line: 433, column: 79, scope: !9040)
!9049 = !DILocation(line: 433, column: 87, scope: !9040)
!9050 = distinct !{!9050, !9042, !9051}
!9051 = !DILocation(line: 435, column: 5, scope: !9041)
!9052 = !DILocation(line: 437, column: 1, scope: !8994)
!9053 = distinct !DISubprogram(name: "SFI_Dev_Command_List", scope: !1363, file: !1363, line: 462, type: !9054, scopeLine: 463, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1362, retainedNodes: !9056)
!9054 = !DISubroutineType(types: !9055)
!9055 = !{null, !8690, !6469}
!9056 = !{!9057, !9058, !9059, !9060, !9061}
!9057 = !DILocalVariable(name: "CS", arg: 1, scope: !9053, file: !1363, line: 462, type: !8690)
!9058 = !DILocalVariable(name: "cmdlist", arg: 2, scope: !9053, file: !1363, line: 462, type: !6469)
!9059 = !DILocalVariable(name: "i", scope: !9053, file: !1363, line: 464, type: !61)
!9060 = !DILocalVariable(name: "val", scope: !9053, file: !1363, line: 465, type: !61)
!9061 = !DILocalVariable(name: "status", scope: !9062, file: !1363, line: 492, type: !74)
!9062 = distinct !DILexicalBlock(scope: !9063, file: !1363, line: 491, column: 47)
!9063 = distinct !DILexicalBlock(scope: !9064, file: !1363, line: 491, column: 13)
!9064 = distinct !DILexicalBlock(scope: !9053, file: !1363, line: 477, column: 17)
!9065 = !DILocation(line: 0, scope: !9053)
!9066 = !DILocation(line: 467, column: 17, scope: !9067)
!9067 = distinct !DILexicalBlock(scope: !9053, file: !1363, line: 467, column: 9)
!9068 = !DILocation(line: 467, column: 9, scope: !9053)
!9069 = !DILocation(line: 474, column: 11, scope: !9053)
!9070 = !DILocation(line: 477, column: 5, scope: !9053)
!9071 = !DILocation(line: 478, column: 17, scope: !9064)
!9072 = !DILocation(line: 478, column: 9, scope: !9064)
!9073 = !DILocation(line: 481, column: 17, scope: !9074)
!9074 = distinct !DILexicalBlock(scope: !9075, file: !1363, line: 481, column: 17)
!9075 = distinct !DILexicalBlock(scope: !9064, file: !1363, line: 478, column: 29)
!9076 = !DILocation(line: 481, column: 17, scope: !9077)
!9077 = distinct !DILexicalBlock(scope: !9078, file: !1363, line: 481, column: 17)
!9078 = distinct !DILexicalBlock(scope: !9079, file: !1363, line: 481, column: 17)
!9079 = distinct !DILexicalBlock(scope: !9074, file: !1363, line: 481, column: 17)
!9080 = !DILocation(line: 481, column: 17, scope: !9078)
!9081 = !DILocation(line: 481, column: 17, scope: !9082)
!9082 = distinct !DILexicalBlock(scope: !9083, file: !1363, line: 481, column: 17)
!9083 = distinct !DILexicalBlock(scope: !9079, file: !1363, line: 481, column: 17)
!9084 = !DILocation(line: 484, column: 17, scope: !9085)
!9085 = distinct !DILexicalBlock(scope: !9075, file: !1363, line: 484, column: 17)
!9086 = !DILocation(line: 484, column: 17, scope: !9087)
!9087 = distinct !DILexicalBlock(scope: !9088, file: !1363, line: 484, column: 17)
!9088 = distinct !DILexicalBlock(scope: !9089, file: !1363, line: 484, column: 17)
!9089 = distinct !DILexicalBlock(scope: !9085, file: !1363, line: 484, column: 17)
!9090 = !DILocation(line: 484, column: 17, scope: !9088)
!9091 = !DILocation(line: 484, column: 17, scope: !9092)
!9092 = distinct !DILexicalBlock(scope: !9093, file: !1363, line: 484, column: 17)
!9093 = distinct !DILexicalBlock(scope: !9089, file: !1363, line: 484, column: 17)
!9094 = !DILocation(line: 0, scope: !9095)
!9095 = distinct !DILexicalBlock(scope: !9096, file: !1363, line: 487, column: 17)
!9096 = distinct !DILexicalBlock(scope: !9075, file: !1363, line: 487, column: 17)
!9097 = !DILocation(line: 487, column: 17, scope: !9096)
!9098 = !DILocation(line: 487, column: 17, scope: !9099)
!9099 = distinct !DILexicalBlock(scope: !9100, file: !1363, line: 487, column: 17)
!9100 = distinct !DILexicalBlock(scope: !9095, file: !1363, line: 487, column: 17)
!9101 = !DILocation(line: 487, column: 17, scope: !9100)
!9102 = !DILocation(line: 487, column: 17, scope: !9103)
!9103 = distinct !DILexicalBlock(scope: !9104, file: !1363, line: 487, column: 17)
!9104 = distinct !DILexicalBlock(scope: !9095, file: !1363, line: 487, column: 17)
!9105 = !DILocation(line: 487, column: 17, scope: !9104)
!9106 = !DILocation(line: 491, column: 23, scope: !9063)
!9107 = !DILocation(line: 491, column: 13, scope: !9063)
!9108 = !DILocation(line: 491, column: 28, scope: !9063)
!9109 = !DILocation(line: 491, column: 13, scope: !9064)
!9110 = !DILocation(line: 492, column: 13, scope: !9062)
!9111 = !DILocation(line: 494, column: 13, scope: !9062)
!9112 = !DILocation(line: 0, scope: !9062)
!9113 = !DILocation(line: 495, column: 17, scope: !9114)
!9114 = distinct !DILexicalBlock(scope: !9062, file: !1363, line: 494, column: 16)
!9115 = !DILocation(line: 496, column: 22, scope: !9062)
!9116 = !DILocation(line: 496, column: 31, scope: !9062)
!9117 = !DILocation(line: 496, column: 29, scope: !9062)
!9118 = !DILocation(line: 496, column: 13, scope: !9114)
!9119 = distinct !{!9119, !9111, !9120}
!9120 = !DILocation(line: 496, column: 45, scope: !9062)
!9121 = !DILocation(line: 497, column: 9, scope: !9063)
!9122 = !DILocation(line: 503, column: 25, scope: !9064)
!9123 = !DILocation(line: 497, column: 9, scope: !9062)
!9124 = !DILocation(line: 500, column: 70, scope: !9125)
!9125 = distinct !DILexicalBlock(scope: !9063, file: !1363, line: 499, column: 14)
!9126 = !DILocation(line: 500, column: 60, scope: !9125)
!9127 = !DILocation(line: 500, column: 13, scope: !9125)
!9128 = !DILocation(line: 503, column: 15, scope: !9064)
!9129 = !DILocation(line: 503, column: 11, scope: !9064)
!9130 = distinct !{!9130, !9070, !9131}
!9131 = !DILocation(line: 504, column: 5, scope: !9053)
!9132 = !DILocation(line: 505, column: 1, scope: !9053)
!9133 = distinct !DISubprogram(name: "SFI_ReadDeviceID", scope: !1363, file: !1363, line: 514, type: !9134, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1362, retainedNodes: !9136)
!9134 = !DISubroutineType(types: !9135)
!9135 = !{null, !8690, !872, !74}
!9136 = !{!9137, !9138, !9139}
!9137 = !DILocalVariable(name: "CS", arg: 1, scope: !9133, file: !1363, line: 514, type: !8690)
!9138 = !DILocalVariable(name: "id", arg: 2, scope: !9133, file: !1363, line: 514, type: !872)
!9139 = !DILocalVariable(name: "cmd", arg: 3, scope: !9133, file: !1363, line: 514, type: !74)
!9140 = !DILocation(line: 0, scope: !9133)
!9141 = !DILocation(line: 517, column: 5, scope: !9133)
!9142 = !DILocation(line: 518, column: 1, scope: !9133)
!9143 = distinct !DISubprogram(name: "SFI_ReadDeviceID_SPI", scope: !1363, file: !1363, line: 521, type: !9144, scopeLine: 522, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1362, retainedNodes: !9146)
!9144 = !DISubroutineType(types: !9145)
!9145 = !{null, !8690, !872}
!9146 = !{!9147, !9148}
!9147 = !DILocalVariable(name: "CS", arg: 1, scope: !9143, file: !1363, line: 521, type: !8690)
!9148 = !DILocalVariable(name: "id", arg: 2, scope: !9143, file: !1363, line: 521, type: !872)
!9149 = !DILocation(line: 0, scope: !9143)
!9150 = !DILocation(line: 523, column: 5, scope: !9143)
!9151 = !DILocation(line: 524, column: 1, scope: !9143)
!9152 = distinct !DISubprogram(name: "SFI_Dev_WorkingFrequencyQuery", scope: !1363, file: !1363, line: 536, type: !9153, scopeLine: 537, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1362, retainedNodes: !262)
!9153 = !DISubroutineType(types: !9154)
!9154 = !{!9155}
!9155 = !DIDerivedType(tag: DW_TAG_typedef, name: "sfi_clock_enum", file: !1366, line: 57, baseType: !1365)
!9156 = !DILocation(line: 540, column: 5, scope: !9152)
!9157 = distinct !DISubprogram(name: "SFI_Dev_WorkingVoltageQuery", scope: !1363, file: !1363, line: 561, type: !9158, scopeLine: 562, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1362, retainedNodes: !262)
!9158 = !DISubroutineType(types: !9159)
!9159 = !{!9160}
!9160 = !DIDerivedType(tag: DW_TAG_typedef, name: "sfi_voltage_enum", file: !1366, line: 66, baseType: !1373)
!9161 = !DILocation(line: 564, column: 15, scope: !9162)
!9162 = distinct !DILexicalBlock(scope: !9157, file: !1363, line: 564, column: 9)
!9163 = !DILocation(line: 564, column: 31, scope: !9162)
!9164 = !DILocation(line: 564, column: 45, scope: !9162)
!9165 = !DILocation(line: 0, scope: !9162)
!9166 = !DILocation(line: 569, column: 1, scope: !9157)
!9167 = distinct !DISubprogram(name: "SFI_Dev_GetUniqueID", scope: !1363, file: !1363, line: 580, type: !9168, scopeLine: 581, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1362, retainedNodes: !9170)
!9168 = !DISubroutineType(types: !9169)
!9169 = !{!263, !872}
!9170 = !{!9171, !9172}
!9171 = !DILocalVariable(name: "buffer", arg: 1, scope: !9167, file: !1363, line: 580, type: !872)
!9172 = !DILocalVariable(name: "i", scope: !9167, file: !1363, line: 582, type: !7)
!9173 = !DILocation(line: 0, scope: !9167)
!9174 = !DILocation(line: 583, column: 5, scope: !9175)
!9175 = distinct !DILexicalBlock(scope: !9167, file: !1363, line: 583, column: 5)
!9176 = !DILocation(line: 584, column: 9, scope: !9177)
!9177 = distinct !DILexicalBlock(scope: !9178, file: !1363, line: 583, column: 29)
!9178 = distinct !DILexicalBlock(scope: !9175, file: !1363, line: 583, column: 5)
!9179 = !DILocation(line: 584, column: 19, scope: !9177)
!9180 = !DILocation(line: 583, column: 25, scope: !9178)
!9181 = !DILocation(line: 583, column: 19, scope: !9178)
!9182 = distinct !{!9182, !9174, !9183}
!9183 = !DILocation(line: 585, column: 5, scope: !9175)
!9184 = !DILocation(line: 586, column: 5, scope: !9167)
!9185 = distinct !DISubprogram(name: "SF_DAL_DEV_Enter_DPD", scope: !1363, file: !1363, line: 613, type: !260, scopeLine: 614, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1362, retainedNodes: !9186)
!9186 = !{!9187}
!9187 = !DILocalVariable(name: "D", scope: !9185, file: !1363, line: 615, type: !8561)
!9188 = !DILocation(line: 0, scope: !9185)
!9189 = !DILocation(line: 616, column: 32, scope: !9185)
!9190 = !DILocation(line: 616, column: 37, scope: !9185)
!9191 = !DILocation(line: 616, column: 27, scope: !9185)
!9192 = !DILocation(line: 617, column: 44, scope: !9185)
!9193 = !DILocation(line: 617, column: 31, scope: !9185)
!9194 = !DILocation(line: 617, column: 28, scope: !9185)
!9195 = !DILocation(line: 618, column: 32, scope: !9185)
!9196 = !DILocation(line: 618, column: 31, scope: !9185)
!9197 = !DILocation(line: 618, column: 29, scope: !9185)
!9198 = !DILocation(line: 621, column: 31, scope: !9185)
!9199 = !DILocation(line: 621, column: 24, scope: !9185)
!9200 = !DILocation(line: 622, column: 34, scope: !9185)
!9201 = !DILocation(line: 622, column: 27, scope: !9185)
!9202 = !DILocation(line: 623, column: 32, scope: !9185)
!9203 = !DILocation(line: 623, column: 25, scope: !9185)
!9204 = !DILocation(line: 624, column: 33, scope: !9185)
!9205 = !DILocation(line: 624, column: 26, scope: !9185)
!9206 = !DILocation(line: 625, column: 33, scope: !9185)
!9207 = !DILocation(line: 625, column: 26, scope: !9185)
!9208 = !DILocation(line: 629, column: 32, scope: !9185)
!9209 = !DILocation(line: 629, column: 47, scope: !9185)
!9210 = !DILocation(line: 629, column: 25, scope: !9185)
!9211 = !DILocation(line: 630, column: 32, scope: !9185)
!9212 = !DILocation(line: 630, column: 47, scope: !9185)
!9213 = !DILocation(line: 630, column: 25, scope: !9185)
!9214 = !DILocation(line: 633, column: 24, scope: !9185)
!9215 = !DILocation(line: 633, column: 31, scope: !9185)
!9216 = !DILocation(line: 633, column: 36, scope: !9185)
!9217 = !DILocation(line: 633, column: 28, scope: !9185)
!9218 = !DILocation(line: 633, column: 5, scope: !9185)
!9219 = !DILocation(line: 635, column: 5, scope: !9185)
!9220 = !DILocation(line: 636, column: 1, scope: !9185)
!9221 = distinct !DISubprogram(name: "SF_DAL_DEV_Leave_DPD", scope: !1363, file: !1363, line: 641, type: !260, scopeLine: 642, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1362, retainedNodes: !262)
!9222 = !DILocation(line: 644, column: 26, scope: !9221)
!9223 = !DILocation(line: 644, column: 24, scope: !9221)
!9224 = !DILocation(line: 645, column: 29, scope: !9221)
!9225 = !DILocation(line: 645, column: 27, scope: !9221)
!9226 = !DILocation(line: 646, column: 27, scope: !9221)
!9227 = !DILocation(line: 646, column: 25, scope: !9221)
!9228 = !DILocation(line: 647, column: 28, scope: !9221)
!9229 = !DILocation(line: 647, column: 26, scope: !9221)
!9230 = !DILocation(line: 648, column: 27, scope: !9221)
!9231 = !DILocation(line: 648, column: 25, scope: !9221)
!9232 = !DILocation(line: 652, column: 32, scope: !9221)
!9233 = !DILocation(line: 652, column: 47, scope: !9221)
!9234 = !DILocation(line: 652, column: 25, scope: !9221)
!9235 = !DILocation(line: 655, column: 24, scope: !9221)
!9236 = !DILocation(line: 655, column: 5, scope: !9221)
!9237 = !DILocation(line: 657, column: 5, scope: !9221)
!9238 = !DILocation(line: 660, column: 9, scope: !9239)
!9239 = distinct !DILexicalBlock(scope: !9221, file: !1363, line: 660, column: 9)
!9240 = !DILocation(line: 660, column: 59, scope: !9239)
!9241 = !DILocation(line: 660, column: 38, scope: !9239)
!9242 = !DILocation(line: 660, column: 37, scope: !9239)
!9243 = !DILocation(line: 660, column: 33, scope: !9239)
!9244 = !DILocation(line: 660, column: 9, scope: !9221)
!9245 = !DILocation(line: 661, column: 9, scope: !9239)
!9246 = distinct !{!9246, !9245, !9247}
!9247 = !DILocation(line: 661, column: 18, scope: !9239)
!9248 = !DILocation(line: 662, column: 1, scope: !9221)
!9249 = distinct !DISubprogram(name: "SF_DAL_DEV_SWITCH_TO_LOW_FQ", scope: !1363, file: !1363, line: 668, type: !260, scopeLine: 669, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1362, retainedNodes: !262)
!9250 = !DILocation(line: 671, column: 9, scope: !9251)
!9251 = distinct !DILexicalBlock(scope: !9249, file: !1363, line: 671, column: 9)
!9252 = !DILocation(line: 671, column: 40, scope: !9251)
!9253 = !DILocation(line: 671, column: 9, scope: !9249)
!9254 = !DILocation(line: 672, column: 47, scope: !9255)
!9255 = distinct !DILexicalBlock(scope: !9251, file: !1363, line: 671, column: 46)
!9256 = !DILocation(line: 672, column: 40, scope: !9255)
!9257 = !DILocation(line: 673, column: 5, scope: !9255)
!9258 = !DILocation(line: 674, column: 9, scope: !9259)
!9259 = distinct !DILexicalBlock(scope: !9249, file: !1363, line: 674, column: 9)
!9260 = !DILocation(line: 674, column: 41, scope: !9259)
!9261 = !DILocation(line: 674, column: 9, scope: !9249)
!9262 = !DILocation(line: 675, column: 48, scope: !9263)
!9263 = distinct !DILexicalBlock(scope: !9259, file: !1363, line: 674, column: 47)
!9264 = !DILocation(line: 675, column: 41, scope: !9263)
!9265 = !DILocation(line: 676, column: 5, scope: !9263)
!9266 = !DILocation(line: 679, column: 33, scope: !9249)
!9267 = !DILocation(line: 679, column: 48, scope: !9249)
!9268 = !DILocation(line: 679, column: 25, scope: !9249)
!9269 = !DILocation(line: 680, column: 25, scope: !9249)
!9270 = !DILocation(line: 686, column: 5, scope: !9249)
!9271 = !DILocation(line: 688, column: 1, scope: !9249)
!9272 = distinct !DISubprogram(name: "SF_DAL_DEV_SWITCH_TO_HIGH_FQ", scope: !1363, file: !1363, line: 689, type: !260, scopeLine: 690, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1362, retainedNodes: !262)
!9273 = !DILocation(line: 692, column: 9, scope: !9274)
!9274 = distinct !DILexicalBlock(scope: !9272, file: !1363, line: 692, column: 9)
!9275 = !DILocation(line: 692, column: 40, scope: !9274)
!9276 = !DILocation(line: 692, column: 9, scope: !9272)
!9277 = !DILocation(line: 693, column: 29, scope: !9278)
!9278 = distinct !DILexicalBlock(scope: !9274, file: !1363, line: 692, column: 46)
!9279 = !DILocation(line: 694, column: 5, scope: !9278)
!9280 = !DILocation(line: 695, column: 9, scope: !9281)
!9281 = distinct !DILexicalBlock(scope: !9272, file: !1363, line: 695, column: 9)
!9282 = !DILocation(line: 695, column: 41, scope: !9281)
!9283 = !DILocation(line: 695, column: 9, scope: !9272)
!9284 = !DILocation(line: 696, column: 29, scope: !9285)
!9285 = distinct !DILexicalBlock(scope: !9281, file: !1363, line: 695, column: 47)
!9286 = !DILocation(line: 697, column: 5, scope: !9285)
!9287 = !DILocation(line: 698, column: 5, scope: !9272)
!9288 = !DILocation(line: 699, column: 1, scope: !9272)
!9289 = distinct !DISubprogram(name: "ust_get_current_time", scope: !1459, file: !1459, line: 91, type: !4174, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !9290)
!9290 = !{!9291}
!9291 = !DILocalVariable(name: "counter", scope: !9289, file: !1459, line: 102, type: !61)
!9292 = !DILocation(line: 0, scope: !9289)
!9293 = !DILocation(line: 110, column: 5, scope: !9289)
!9294 = distinct !DISubprogram(name: "get_current_32K_counter", scope: !1459, file: !1459, line: 114, type: !4174, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !9295)
!9295 = !{!9296}
!9296 = !DILocalVariable(name: "counter", scope: !9294, file: !1459, line: 125, type: !61)
!9297 = !DILocation(line: 0, scope: !9294)
!9298 = !DILocation(line: 133, column: 5, scope: !9294)
!9299 = distinct !DISubprogram(name: "ust_busy_wait", scope: !1459, file: !1459, line: 137, type: !7725, scopeLine: 138, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !9300)
!9300 = !{!9301}
!9301 = !DILocalVariable(name: "delay_us", arg: 1, scope: !9299, file: !1459, line: 137, type: !61)
!9302 = !DILocation(line: 0, scope: !9299)
!9303 = !DILocation(line: 142, column: 5, scope: !9299)
!9304 = !DILocation(line: 144, column: 1, scope: !9299)
!9305 = distinct !DISubprogram(name: "SaveAndSetIRQMask", scope: !1459, file: !1459, line: 163, type: !4174, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !9306)
!9306 = !{!9307}
!9307 = !DILocalVariable(name: "mask", scope: !9305, file: !1459, line: 165, type: !61)
!9308 = !DILocation(line: 166, column: 12, scope: !9305)
!9309 = !DILocation(line: 0, scope: !9305)
!9310 = !DILocation(line: 167, column: 5, scope: !9305)
!9311 = distinct !DISubprogram(name: "RestoreIRQMask", scope: !1459, file: !1459, line: 171, type: !7725, scopeLine: 172, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !9312)
!9312 = !{!9313}
!9313 = !DILocalVariable(name: "mask", arg: 1, scope: !9311, file: !1459, line: 171, type: !61)
!9314 = !DILocation(line: 0, scope: !9311)
!9315 = !DILocation(line: 173, column: 5, scope: !9311)
!9316 = !DILocation(line: 174, column: 1, scope: !9311)
!9317 = distinct !DISubprogram(name: "SF_DAL_UnlockBlock_None", scope: !1459, file: !1459, line: 199, type: !1729, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !9318)
!9318 = !{!9319}
!9319 = !DILocalVariable(name: "MTDData", arg: 1, scope: !9317, file: !1459, line: 199, type: !65)
!9320 = !DILocation(line: 0, scope: !9317)
!9321 = !DILocation(line: 201, column: 5, scope: !9317)
!9322 = distinct !DISubprogram(name: "sfi_60qbit_test", scope: !1459, file: !1459, line: 388, type: !9323, scopeLine: 389, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !262)
!9323 = !DISubroutineType(types: !9324)
!9324 = !{!1343}
!9325 = !DILocation(line: 390, column: 5, scope: !9322)
!9326 = distinct !DISubprogram(name: "CompareData", scope: !1459, file: !1459, line: 872, type: !9327, scopeLine: 873, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !9329)
!9327 = !DISubroutineType(types: !9328)
!9328 = !{!263, !65, !65, !61}
!9329 = !{!9330, !9331, !9332, !9333, !9334, !9337, !9338, !9341, !9342, !9344}
!9330 = !DILocalVariable(name: "Address", arg: 1, scope: !9326, file: !1459, line: 872, type: !65)
!9331 = !DILocalVariable(name: "Data", arg: 2, scope: !9326, file: !1459, line: 872, type: !65)
!9332 = !DILocalVariable(name: "Length", arg: 3, scope: !9326, file: !1459, line: 872, type: !61)
!9333 = !DILocalVariable(name: "i", scope: !9326, file: !1459, line: 874, type: !61)
!9334 = !DILocalVariable(name: "Source", scope: !9335, file: !1459, line: 877, type: !1400)
!9335 = distinct !DILexicalBlock(scope: !9336, file: !1459, line: 876, column: 74)
!9336 = distinct !DILexicalBlock(scope: !9326, file: !1459, line: 876, column: 9)
!9337 = !DILocalVariable(name: "Dest", scope: !9335, file: !1459, line: 878, type: !1400)
!9338 = !DILocalVariable(name: "Source", scope: !9339, file: !1459, line: 885, type: !1431)
!9339 = distinct !DILexicalBlock(scope: !9340, file: !1459, line: 884, column: 79)
!9340 = distinct !DILexicalBlock(scope: !9336, file: !1459, line: 884, column: 16)
!9341 = !DILocalVariable(name: "Dest", scope: !9339, file: !1459, line: 886, type: !1431)
!9342 = !DILocalVariable(name: "Source", scope: !9343, file: !1459, line: 893, type: !872)
!9343 = distinct !DILexicalBlock(scope: !9340, file: !1459, line: 892, column: 12)
!9344 = !DILocalVariable(name: "Dest", scope: !9343, file: !1459, line: 894, type: !872)
!9345 = !DILocation(line: 0, scope: !9326)
!9346 = !DILocation(line: 876, column: 11, scope: !9336)
!9347 = !DILocation(line: 876, column: 42, scope: !9336)
!9348 = !DILocation(line: 877, column: 28, scope: !9335)
!9349 = !DILocation(line: 0, scope: !9335)
!9350 = !DILocation(line: 878, column: 26, scope: !9335)
!9351 = !DILocation(line: 879, column: 23, scope: !9352)
!9352 = distinct !DILexicalBlock(scope: !9353, file: !1459, line: 879, column: 9)
!9353 = distinct !DILexicalBlock(scope: !9335, file: !1459, line: 879, column: 9)
!9354 = !DILocation(line: 879, column: 9, scope: !9353)
!9355 = !DILocation(line: 880, column: 17, scope: !9356)
!9356 = distinct !DILexicalBlock(scope: !9357, file: !1459, line: 880, column: 17)
!9357 = distinct !DILexicalBlock(scope: !9352, file: !1459, line: 879, column: 68)
!9358 = !DILocation(line: 880, column: 30, scope: !9356)
!9359 = !DILocation(line: 880, column: 27, scope: !9356)
!9360 = !DILocation(line: 879, column: 64, scope: !9352)
!9361 = !DILocation(line: 880, column: 17, scope: !9357)
!9362 = distinct !{!9362, !9354, !9363}
!9363 = !DILocation(line: 883, column: 9, scope: !9353)
!9364 = !DILocation(line: 884, column: 47, scope: !9340)
!9365 = !DILocation(line: 895, column: 23, scope: !9366)
!9366 = distinct !DILexicalBlock(scope: !9367, file: !1459, line: 895, column: 9)
!9367 = distinct !DILexicalBlock(scope: !9343, file: !1459, line: 895, column: 9)
!9368 = !DILocation(line: 895, column: 9, scope: !9367)
!9369 = !DILocation(line: 885, column: 28, scope: !9339)
!9370 = !DILocation(line: 0, scope: !9339)
!9371 = !DILocation(line: 886, column: 26, scope: !9339)
!9372 = !DILocation(line: 887, column: 23, scope: !9373)
!9373 = distinct !DILexicalBlock(scope: !9374, file: !1459, line: 887, column: 9)
!9374 = distinct !DILexicalBlock(scope: !9339, file: !1459, line: 887, column: 9)
!9375 = !DILocation(line: 887, column: 9, scope: !9374)
!9376 = !DILocation(line: 888, column: 17, scope: !9377)
!9377 = distinct !DILexicalBlock(scope: !9378, file: !1459, line: 888, column: 17)
!9378 = distinct !DILexicalBlock(scope: !9373, file: !1459, line: 887, column: 68)
!9379 = !DILocation(line: 888, column: 30, scope: !9377)
!9380 = !DILocation(line: 888, column: 27, scope: !9377)
!9381 = !DILocation(line: 887, column: 64, scope: !9373)
!9382 = !DILocation(line: 888, column: 17, scope: !9378)
!9383 = distinct !{!9383, !9375, !9384}
!9384 = !DILocation(line: 891, column: 9, scope: !9374)
!9385 = !DILocation(line: 896, column: 17, scope: !9386)
!9386 = distinct !DILexicalBlock(scope: !9387, file: !1459, line: 896, column: 17)
!9387 = distinct !DILexicalBlock(scope: !9366, file: !1459, line: 895, column: 38)
!9388 = !DILocation(line: 896, column: 30, scope: !9386)
!9389 = !DILocation(line: 896, column: 27, scope: !9386)
!9390 = !DILocation(line: 895, column: 34, scope: !9366)
!9391 = !DILocation(line: 896, column: 17, scope: !9387)
!9392 = distinct !{!9392, !9368, !9393}
!9393 = !DILocation(line: 899, column: 9, scope: !9367)
!9394 = !DILocation(line: 902, column: 1, scope: !9326)
!9395 = distinct !DISubprogram(name: "Flash_ProgramData", scope: !1459, file: !1459, line: 919, type: !9396, scopeLine: 920, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !9398)
!9396 = !DISubroutineType(types: !9397)
!9397 = !{null, !65, !65, !61}
!9398 = !{!9399, !9400, !9401, !9402, !9403, !9404, !9405, !9406, !9407, !9408, !9409}
!9399 = !DILocalVariable(name: "Target", arg: 1, scope: !9395, file: !1459, line: 919, type: !65)
!9400 = !DILocalVariable(name: "Data", arg: 2, scope: !9395, file: !1459, line: 919, type: !65)
!9401 = !DILocalVariable(name: "Size", arg: 3, scope: !9395, file: !1459, line: 919, type: !61)
!9402 = !DILocalVariable(name: "D", scope: !9395, file: !1459, line: 921, type: !1629)
!9403 = !DILocalVariable(name: "address", scope: !9395, file: !1459, line: 922, type: !61)
!9404 = !DILocalVariable(name: "p_data", scope: !9395, file: !1459, line: 923, type: !872)
!9405 = !DILocalVariable(name: "cmd1", scope: !9395, file: !1459, line: 924, type: !61)
!9406 = !DILocalVariable(name: "length", scope: !9395, file: !1459, line: 924, type: !61)
!9407 = !DILocalVariable(name: "written", scope: !9395, file: !1459, line: 924, type: !61)
!9408 = !DILocalVariable(name: "status", scope: !9395, file: !1459, line: 925, type: !1681)
!9409 = !DILocalVariable(name: "savedMask", scope: !9395, file: !1459, line: 926, type: !61)
!9410 = !DILocation(line: 0, scope: !9395)
!9411 = !DILocation(line: 921, column: 60, scope: !9395)
!9412 = !DILocation(line: 923, column: 5, scope: !9395)
!9413 = !DILocation(line: 923, column: 19, scope: !9395)
!9414 = !DILocation(line: 924, column: 5, scope: !9395)
!9415 = !DILocation(line: 932, column: 9, scope: !9395)
!9416 = !DILocation(line: 933, column: 8, scope: !9395)
!9417 = !DILocation(line: 933, column: 21, scope: !9395)
!9418 = !DILocation(line: 935, column: 14, scope: !9395)
!9419 = !DILocation(line: 935, column: 5, scope: !9395)
!9420 = !DILocation(line: 922, column: 29, scope: !9395)
!9421 = !DILocation(line: 937, column: 18, scope: !9422)
!9422 = distinct !DILexicalBlock(scope: !9395, file: !1459, line: 935, column: 23)
!9423 = !DILocation(line: 937, column: 35, scope: !9422)
!9424 = !DILocation(line: 937, column: 74, scope: !9422)
!9425 = !DILocation(line: 937, column: 50, scope: !9422)
!9426 = !DILocation(line: 937, column: 39, scope: !9422)
!9427 = !DILocation(line: 940, column: 35, scope: !9422)
!9428 = !DILocation(line: 940, column: 29, scope: !9422)
!9429 = !DILocation(line: 940, column: 16, scope: !9422)
!9430 = !DILocation(line: 942, column: 18, scope: !9431)
!9431 = distinct !DILexicalBlock(scope: !9422, file: !1459, line: 942, column: 13)
!9432 = !DILocation(line: 942, column: 29, scope: !9431)
!9433 = !DILocation(line: 942, column: 13, scope: !9422)
!9434 = !DILocation(line: 943, column: 13, scope: !9435)
!9435 = distinct !DILexicalBlock(scope: !9431, file: !1459, line: 942, column: 55)
!9436 = !DILocation(line: 944, column: 9, scope: !9435)
!9437 = !DILocation(line: 947, column: 16, scope: !9438)
!9438 = distinct !DILexicalBlock(scope: !9422, file: !1459, line: 947, column: 13)
!9439 = !DILocation(line: 947, column: 29, scope: !9438)
!9440 = !DILocation(line: 0, scope: !9438)
!9441 = !DILocation(line: 947, column: 13, scope: !9422)
!9442 = !DILocation(line: 948, column: 20, scope: !9443)
!9443 = distinct !DILexicalBlock(scope: !9438, file: !1459, line: 947, column: 35)
!9444 = !DILocation(line: 949, column: 32, scope: !9443)
!9445 = !DILocation(line: 949, column: 40, scope: !9443)
!9446 = !DILocation(line: 949, column: 13, scope: !9443)
!9447 = !DILocation(line: 950, column: 9, scope: !9443)
!9448 = !DILocation(line: 953, column: 20, scope: !9449)
!9449 = distinct !DILexicalBlock(scope: !9438, file: !1459, line: 952, column: 9)
!9450 = !DILocation(line: 954, column: 32, scope: !9449)
!9451 = !DILocation(line: 954, column: 40, scope: !9449)
!9452 = !DILocation(line: 954, column: 13, scope: !9449)
!9453 = !DILocation(line: 957, column: 21, scope: !9422)
!9454 = !DILocation(line: 963, column: 45, scope: !9422)
!9455 = !DILocation(line: 963, column: 42, scope: !9422)
!9456 = !DILocation(line: 963, column: 40, scope: !9422)
!9457 = !DILocation(line: 963, column: 58, scope: !9422)
!9458 = !DILocation(line: 963, column: 29, scope: !9422)
!9459 = !DILocation(line: 964, column: 28, scope: !9422)
!9460 = !DILocation(line: 965, column: 37, scope: !9422)
!9461 = !DILocation(line: 966, column: 9, scope: !9422)
!9462 = !DILocation(line: 967, column: 26, scope: !9422)
!9463 = !DILocation(line: 967, column: 9, scope: !9422)
!9464 = !DILocation(line: 968, column: 29, scope: !9422)
!9465 = !DILocation(line: 968, column: 9, scope: !9422)
!9466 = !DILocation(line: 972, column: 9, scope: !9422)
!9467 = !DILocation(line: 978, column: 9, scope: !9422)
!9468 = !DILocation(line: 979, column: 50, scope: !9469)
!9469 = distinct !DILexicalBlock(scope: !9422, file: !1459, line: 978, column: 22)
!9470 = !DILocation(line: 979, column: 55, scope: !9469)
!9471 = !DILocation(line: 979, column: 22, scope: !9469)
!9472 = !DILocation(line: 980, column: 35, scope: !9473)
!9473 = distinct !DILexicalBlock(scope: !9469, file: !1459, line: 980, column: 17)
!9474 = !DILocation(line: 980, column: 32, scope: !9473)
!9475 = !DILocation(line: 980, column: 30, scope: !9473)
!9476 = !DILocation(line: 980, column: 19, scope: !9473)
!9477 = !DILocation(line: 980, column: 17, scope: !9469)
!9478 = distinct !{!9478, !9467, !9479}
!9479 = !DILocation(line: 983, column: 9, scope: !9422)
!9480 = !DILocation(line: 991, column: 9, scope: !9422)
!9481 = !DILocation(line: 993, column: 19, scope: !9422)
!9482 = !DILocation(line: 993, column: 16, scope: !9422)
!9483 = !DILocation(line: 994, column: 14, scope: !9422)
!9484 = !DILocation(line: 995, column: 17, scope: !9422)
!9485 = distinct !{!9485, !9419, !9486}
!9486 = !DILocation(line: 996, column: 5, scope: !9395)
!9487 = !DILocation(line: 998, column: 21, scope: !9395)
!9488 = !DILocation(line: 1005, column: 9, scope: !9395)
!9489 = !DILocation(line: 1008, column: 1, scope: !9395)
!9490 = distinct !DISubprogram(name: "SF_DAL_GetDevLock", scope: !1459, file: !1459, line: 1427, type: !9491, scopeLine: 1428, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !9493)
!9491 = !DISubroutineType(types: !9492)
!9492 = !{null, !1629}
!9493 = !{!9494, !9495}
!9494 = !DILocalVariable(name: "D", arg: 1, scope: !9490, file: !1459, line: 1427, type: !1629)
!9495 = !DILocalVariable(name: "Result", scope: !9490, file: !1459, line: 1429, type: !2293)
!9496 = !DILocation(line: 0, scope: !9490)
!9497 = !DILocation(line: 1430, column: 5, scope: !9490)
!9498 = !DILocation(line: 1431, column: 18, scope: !9499)
!9499 = distinct !DILexicalBlock(scope: !9490, file: !1459, line: 1430, column: 8)
!9500 = !DILocation(line: 1432, column: 21, scope: !9490)
!9501 = !DILocation(line: 1432, column: 5, scope: !9499)
!9502 = distinct !{!9502, !9497, !9503}
!9503 = !DILocation(line: 1432, column: 43, scope: !9490)
!9504 = !DILocation(line: 1433, column: 1, scope: !9490)
!9505 = distinct !DISubprogram(name: "SF_DAL_Dev_WriteEnable", scope: !1459, file: !1459, line: 3478, type: !9491, scopeLine: 3479, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !9506)
!9506 = !{!9507}
!9507 = !DILocalVariable(name: "D", arg: 1, scope: !9505, file: !1459, line: 3478, type: !1629)
!9508 = !DILocation(line: 0, scope: !9505)
!9509 = !DILocation(line: 3480, column: 30, scope: !9505)
!9510 = !DILocation(line: 3480, column: 35, scope: !9505)
!9511 = !DILocation(line: 3480, column: 27, scope: !9505)
!9512 = !DILocation(line: 3480, column: 5, scope: !9505)
!9513 = !DILocation(line: 3481, column: 1, scope: !9505)
!9514 = distinct !DISubprogram(name: "SF_DAL_FLAG_BUSY_SET", scope: !1459, file: !1459, line: 2382, type: !260, scopeLine: 2383, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !9515)
!9515 = !{!9516}
!9516 = !DILocalVariable(name: "savedMask", scope: !9514, file: !1459, line: 2384, type: !61)
!9517 = !DILocation(line: 2385, column: 17, scope: !9514)
!9518 = !DILocation(line: 0, scope: !9514)
!9519 = !DILocation(line: 2390, column: 20, scope: !9514)
!9520 = !DILocation(line: 2391, column: 5, scope: !9514)
!9521 = !DILocation(line: 2392, column: 1, scope: !9514)
!9522 = distinct !DISubprogram(name: "SF_DAL_Dev_ReadStatus", scope: !1459, file: !1459, line: 3536, type: !9523, scopeLine: 3537, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !9525)
!9523 = !DISubroutineType(types: !9524)
!9524 = !{!61, !1629, !74}
!9525 = !{!9526, !9527, !9528, !9529}
!9526 = !DILocalVariable(name: "D", arg: 1, scope: !9522, file: !1459, line: 3536, type: !1629)
!9527 = !DILocalVariable(name: "cmd", arg: 2, scope: !9522, file: !1459, line: 3536, type: !74)
!9528 = !DILocalVariable(name: "savedMask", scope: !9522, file: !1459, line: 3538, type: !61)
!9529 = !DILocalVariable(name: "result", scope: !9522, file: !1459, line: 3539, type: !61)
!9530 = !DILocation(line: 0, scope: !9522)
!9531 = !DILocation(line: 3541, column: 17, scope: !9522)
!9532 = !DILocation(line: 3542, column: 22, scope: !9522)
!9533 = !DILocation(line: 3542, column: 5, scope: !9522)
!9534 = !DILocation(line: 3543, column: 35, scope: !9522)
!9535 = !DILocation(line: 3543, column: 33, scope: !9522)
!9536 = !DILocation(line: 3544, column: 25, scope: !9522)
!9537 = !DILocation(line: 3545, column: 24, scope: !9522)
!9538 = !DILocation(line: 3546, column: 25, scope: !9522)
!9539 = !DILocation(line: 3546, column: 5, scope: !9522)
!9540 = !DILocation(line: 3547, column: 42, scope: !9522)
!9541 = !DILocation(line: 3547, column: 60, scope: !9522)
!9542 = !DILocation(line: 3547, column: 14, scope: !9522)
!9543 = !DILocation(line: 3548, column: 5, scope: !9522)
!9544 = !DILocation(line: 3550, column: 5, scope: !9522)
!9545 = distinct !DISubprogram(name: "SF_DAL_FLAG_BUSY_CLR", scope: !1459, file: !1459, line: 2393, type: !260, scopeLine: 2394, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !9546)
!9546 = !{!9547}
!9547 = !DILocalVariable(name: "savedMask", scope: !9545, file: !1459, line: 2395, type: !61)
!9548 = !DILocation(line: 2396, column: 17, scope: !9545)
!9549 = !DILocation(line: 0, scope: !9545)
!9550 = !DILocation(line: 2401, column: 20, scope: !9545)
!9551 = !DILocation(line: 2402, column: 5, scope: !9552)
!9552 = distinct !DILexicalBlock(scope: !9553, file: !1459, line: 2402, column: 5)
!9553 = distinct !DILexicalBlock(scope: !9545, file: !1459, line: 2402, column: 5)
!9554 = !DILocation(line: 2403, column: 5, scope: !9545)
!9555 = !DILocation(line: 2404, column: 1, scope: !9545)
!9556 = distinct !DISubprogram(name: "SF_DAL_FreeDevLock", scope: !1459, file: !1459, line: 1440, type: !9491, scopeLine: 1441, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !9557)
!9557 = !{!9558, !9559}
!9558 = !DILocalVariable(name: "D", arg: 1, scope: !9556, file: !1459, line: 1440, type: !1629)
!9559 = !DILocalVariable(name: "savedMask", scope: !9556, file: !1459, line: 1442, type: !1343)
!9560 = !DILocation(line: 0, scope: !9556)
!9561 = !DILocation(line: 1443, column: 17, scope: !9556)
!9562 = !DILocation(line: 1444, column: 9, scope: !9563)
!9563 = distinct !DILexicalBlock(scope: !9556, file: !1459, line: 1444, column: 9)
!9564 = !DILocation(line: 1444, column: 9, scope: !9556)
!9565 = !DILocation(line: 1445, column: 17, scope: !9566)
!9566 = distinct !DILexicalBlock(scope: !9563, file: !1459, line: 1444, column: 24)
!9567 = !DILocation(line: 1446, column: 9, scope: !9566)
!9568 = !DILocation(line: 1451, column: 1, scope: !9556)
!9569 = !DILocation(line: 1448, column: 9, scope: !9570)
!9570 = distinct !DILexicalBlock(scope: !9563, file: !1459, line: 1447, column: 12)
!9571 = !DILocation(line: 1449, column: 9, scope: !9572)
!9572 = distinct !DILexicalBlock(scope: !9573, file: !1459, line: 1449, column: 9)
!9573 = distinct !DILexicalBlock(scope: !9574, file: !1459, line: 1449, column: 9)
!9574 = distinct !DILexicalBlock(scope: !9570, file: !1459, line: 1449, column: 9)
!9575 = distinct !DISubprogram(name: "Flash_ReturnReady", scope: !1459, file: !1459, line: 1027, type: !260, scopeLine: 1028, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !9576)
!9576 = !{!9577, !9578, !9579, !9580}
!9577 = !DILocalVariable(name: "D", scope: !9575, file: !1459, line: 1029, type: !1629)
!9578 = !DILocalVariable(name: "status", scope: !9575, file: !1459, line: 1030, type: !1681)
!9579 = !DILocalVariable(name: "savedMask", scope: !9575, file: !1459, line: 1031, type: !61)
!9580 = !DILocalVariable(name: "duration", scope: !9581, file: !1459, line: 1231, type: !61)
!9581 = distinct !DILexicalBlock(scope: !9575, file: !1459, line: 1230, column: 5)
!9582 = !DILocation(line: 0, scope: !9575)
!9583 = !DILocation(line: 1033, column: 17, scope: !9575)
!9584 = !DILocation(line: 1034, column: 8, scope: !9585)
!9585 = distinct !DILexicalBlock(scope: !9575, file: !1459, line: 1034, column: 8)
!9586 = !DILocation(line: 1034, column: 30, scope: !9585)
!9587 = !DILocation(line: 1034, column: 8, scope: !9575)
!9588 = !DILocation(line: 1039, column: 27, scope: !9575)
!9589 = !DILocation(line: 1058, column: 48, scope: !9590)
!9590 = distinct !DILexicalBlock(scope: !9575, file: !1459, line: 1055, column: 5)
!9591 = !DILocation(line: 1069, column: 5, scope: !9592)
!9592 = distinct !DILexicalBlock(scope: !9593, file: !1459, line: 1069, column: 5)
!9593 = distinct !DILexicalBlock(scope: !9575, file: !1459, line: 1069, column: 5)
!9594 = !DILocation(line: 1069, column: 5, scope: !9593)
!9595 = !DILocation(line: 1069, column: 5, scope: !9596)
!9596 = distinct !DILexicalBlock(scope: !9592, file: !1459, line: 1069, column: 5)
!9597 = !DILocation(line: 1075, column: 10, scope: !9598)
!9598 = distinct !DILexicalBlock(scope: !9575, file: !1459, line: 1075, column: 9)
!9599 = !DILocation(line: 1075, column: 27, scope: !9598)
!9600 = !DILocation(line: 1075, column: 33, scope: !9598)
!9601 = !DILocation(line: 1075, column: 40, scope: !9598)
!9602 = !DILocation(line: 1075, column: 53, scope: !9598)
!9603 = !DILocation(line: 1075, column: 9, scope: !9575)
!9604 = !DILocation(line: 1084, column: 9, scope: !9605)
!9605 = distinct !DILexicalBlock(scope: !9598, file: !1459, line: 1083, column: 11)
!9606 = !DILocation(line: 1085, column: 50, scope: !9607)
!9607 = distinct !DILexicalBlock(scope: !9605, file: !1459, line: 1084, column: 21)
!9608 = !DILocation(line: 1085, column: 55, scope: !9607)
!9609 = !DILocation(line: 1085, column: 22, scope: !9607)
!9610 = !DILocation(line: 1086, column: 35, scope: !9611)
!9611 = distinct !DILexicalBlock(scope: !9607, file: !1459, line: 1086, column: 17)
!9612 = !DILocation(line: 1086, column: 32, scope: !9611)
!9613 = !DILocation(line: 1086, column: 30, scope: !9611)
!9614 = !DILocation(line: 1086, column: 19, scope: !9611)
!9615 = !DILocation(line: 1086, column: 17, scope: !9607)
!9616 = distinct !{!9616, !9604, !9617}
!9617 = !DILocation(line: 1089, column: 9, scope: !9605)
!9618 = !DILocation(line: 1107, column: 11, scope: !9619)
!9619 = distinct !DILexicalBlock(scope: !9575, file: !1459, line: 1107, column: 9)
!9620 = !DILocation(line: 1107, column: 30, scope: !9619)
!9621 = !DILocation(line: 1117, column: 46, scope: !9622)
!9622 = distinct !DILexicalBlock(scope: !9619, file: !1459, line: 1107, column: 53)
!9623 = !DILocation(line: 1117, column: 51, scope: !9622)
!9624 = !DILocation(line: 1117, column: 18, scope: !9622)
!9625 = !DILocation(line: 1120, column: 31, scope: !9626)
!9626 = distinct !DILexicalBlock(scope: !9622, file: !1459, line: 1120, column: 13)
!9627 = !DILocation(line: 1120, column: 28, scope: !9626)
!9628 = !DILocation(line: 1120, column: 26, scope: !9626)
!9629 = !DILocation(line: 1120, column: 15, scope: !9626)
!9630 = !DILocation(line: 1120, column: 13, scope: !9622)
!9631 = !DILocation(line: 1128, column: 13, scope: !9632)
!9632 = distinct !DILexicalBlock(scope: !9626, file: !1459, line: 1120, column: 55)
!9633 = !DILocation(line: 1131, column: 13, scope: !9632)
!9634 = !DILocation(line: 1132, column: 54, scope: !9635)
!9635 = distinct !DILexicalBlock(scope: !9632, file: !1459, line: 1131, column: 23)
!9636 = !DILocation(line: 1132, column: 59, scope: !9635)
!9637 = !DILocation(line: 1132, column: 26, scope: !9635)
!9638 = !DILocation(line: 1133, column: 39, scope: !9639)
!9639 = distinct !DILexicalBlock(scope: !9635, file: !1459, line: 1133, column: 21)
!9640 = !DILocation(line: 1133, column: 36, scope: !9639)
!9641 = !DILocation(line: 1133, column: 34, scope: !9639)
!9642 = !DILocation(line: 1133, column: 23, scope: !9639)
!9643 = !DILocation(line: 1133, column: 21, scope: !9635)
!9644 = distinct !{!9644, !9633, !9645}
!9645 = !DILocation(line: 1158, column: 13, scope: !9632)
!9646 = !DILocation(line: 1162, column: 21, scope: !9647)
!9647 = distinct !DILexicalBlock(scope: !9632, file: !1459, line: 1162, column: 17)
!9648 = !DILocation(line: 1162, column: 32, scope: !9647)
!9649 = !DILocation(line: 1162, column: 51, scope: !9647)
!9650 = !DILocation(line: 1162, column: 58, scope: !9647)
!9651 = !DILocation(line: 1162, column: 71, scope: !9647)
!9652 = !DILocation(line: 1162, column: 17, scope: !9632)
!9653 = !DILocation(line: 1164, column: 45, scope: !9654)
!9654 = distinct !DILexicalBlock(scope: !9647, file: !1459, line: 1162, column: 91)
!9655 = !DILocation(line: 1165, column: 36, scope: !9654)
!9656 = !DILocation(line: 1166, column: 37, scope: !9654)
!9657 = !DILocation(line: 1167, column: 34, scope: !9654)
!9658 = !DILocation(line: 1167, column: 17, scope: !9654)
!9659 = !DILocation(line: 1168, column: 37, scope: !9654)
!9660 = !DILocation(line: 1168, column: 17, scope: !9654)
!9661 = !DILocation(line: 1171, column: 50, scope: !9654)
!9662 = !DILocation(line: 1172, column: 37, scope: !9654)
!9663 = !DILocation(line: 1173, column: 45, scope: !9654)
!9664 = !DILocation(line: 1174, column: 34, scope: !9654)
!9665 = !DILocation(line: 1174, column: 17, scope: !9654)
!9666 = !DILocation(line: 1175, column: 37, scope: !9654)
!9667 = !DILocation(line: 1175, column: 17, scope: !9654)
!9668 = !DILocation(line: 1178, column: 17, scope: !9654)
!9669 = !DILocation(line: 1179, column: 49, scope: !9670)
!9670 = distinct !DILexicalBlock(scope: !9654, file: !1459, line: 1178, column: 20)
!9671 = !DILocation(line: 1180, column: 40, scope: !9670)
!9672 = !DILocation(line: 1181, column: 41, scope: !9670)
!9673 = !DILocation(line: 1182, column: 38, scope: !9670)
!9674 = !DILocation(line: 1182, column: 21, scope: !9670)
!9675 = !DILocation(line: 1183, column: 41, scope: !9670)
!9676 = !DILocation(line: 1183, column: 21, scope: !9670)
!9677 = !DILocation(line: 1184, column: 43, scope: !9670)
!9678 = !DILocation(line: 1185, column: 17, scope: !9670)
!9679 = distinct !{!9679, !9668, !9680}
!9680 = !DILocation(line: 1185, column: 32, scope: !9654)
!9681 = !DILocation(line: 1194, column: 13, scope: !9632)
!9682 = !DILocation(line: 1195, column: 9, scope: !9632)
!9683 = !DILocation(line: 1197, column: 21, scope: !9684)
!9684 = distinct !DILexicalBlock(scope: !9685, file: !1459, line: 1197, column: 17)
!9685 = distinct !DILexicalBlock(scope: !9626, file: !1459, line: 1195, column: 16)
!9686 = !DILocation(line: 1197, column: 32, scope: !9684)
!9687 = !DILocation(line: 1197, column: 53, scope: !9684)
!9688 = !DILocation(line: 1197, column: 60, scope: !9684)
!9689 = !DILocation(line: 1197, column: 76, scope: !9684)
!9690 = !DILocation(line: 1197, column: 17, scope: !9685)
!9691 = !DILocation(line: 1198, column: 54, scope: !9692)
!9692 = distinct !DILexicalBlock(scope: !9684, file: !1459, line: 1197, column: 98)
!9693 = !DILocation(line: 1198, column: 59, scope: !9692)
!9694 = !DILocation(line: 1198, column: 26, scope: !9692)
!9695 = !DILocation(line: 1199, column: 40, scope: !9696)
!9696 = distinct !DILexicalBlock(scope: !9692, file: !1459, line: 1199, column: 21)
!9697 = !DILocation(line: 1199, column: 37, scope: !9696)
!9698 = !DILocation(line: 1199, column: 35, scope: !9696)
!9699 = !DILocation(line: 1199, column: 24, scope: !9696)
!9700 = !DILocation(line: 1199, column: 63, scope: !9696)
!9701 = !DILocation(line: 1200, column: 41, scope: !9696)
!9702 = !DILocation(line: 1200, column: 39, scope: !9696)
!9703 = !DILocation(line: 1200, column: 28, scope: !9696)
!9704 = !DILocation(line: 1199, column: 21, scope: !9692)
!9705 = !DILocation(line: 1201, column: 40, scope: !9706)
!9706 = distinct !DILexicalBlock(scope: !9696, file: !1459, line: 1200, column: 68)
!9707 = !DILocation(line: 1201, column: 21, scope: !9706)
!9708 = !DILocation(line: 1202, column: 40, scope: !9706)
!9709 = !DILocation(line: 1202, column: 21, scope: !9706)
!9710 = !DILocation(line: 1203, column: 17, scope: !9706)
!9711 = !DILocation(line: 1206, column: 13, scope: !9685)
!9712 = !DILocation(line: 1228, column: 25, scope: !9575)
!9713 = !DILocation(line: 1231, column: 29, scope: !9581)
!9714 = !DILocation(line: 0, scope: !9581)
!9715 = !DILocation(line: 1232, column: 13, scope: !9716)
!9716 = distinct !DILexicalBlock(scope: !9581, file: !1459, line: 1232, column: 13)
!9717 = !DILocation(line: 1232, column: 43, scope: !9716)
!9718 = !DILocation(line: 1232, column: 13, scope: !9581)
!9719 = !DILocation(line: 1233, column: 43, scope: !9720)
!9720 = distinct !DILexicalBlock(scope: !9716, file: !1459, line: 1232, column: 55)
!9721 = !DILocation(line: 1234, column: 9, scope: !9720)
!9722 = !DILocation(line: 1237, column: 5, scope: !9723)
!9723 = distinct !DILexicalBlock(scope: !9724, file: !1459, line: 1237, column: 5)
!9724 = distinct !DILexicalBlock(scope: !9575, file: !1459, line: 1237, column: 5)
!9725 = !DILocation(line: 1240, column: 5, scope: !9575)
!9726 = !DILocation(line: 1241, column: 1, scope: !9575)
!9727 = distinct !DISubprogram(name: "SF_DAL_Dev_Suspend", scope: !1459, file: !1459, line: 3421, type: !9491, scopeLine: 3422, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !9728)
!9728 = !{!9729, !9730, !9731, !9732}
!9729 = !DILocalVariable(name: "D", arg: 1, scope: !9727, file: !1459, line: 3421, type: !1629)
!9730 = !DILocalVariable(name: "savedMask", scope: !9727, file: !1459, line: 3423, type: !61)
!9731 = !DILocalVariable(name: "currtime", scope: !9727, file: !1459, line: 3424, type: !61)
!9732 = !DILocalVariable(name: "difftime", scope: !9727, file: !1459, line: 3424, type: !61)
!9733 = !DILocation(line: 0, scope: !9727)
!9734 = !DILocation(line: 3427, column: 9, scope: !9735)
!9735 = distinct !DILexicalBlock(scope: !9727, file: !1459, line: 3427, column: 9)
!9736 = !DILocation(line: 3427, column: 28, scope: !9735)
!9737 = !DILocation(line: 3427, column: 9, scope: !9727)
!9738 = !DILocation(line: 3429, column: 20, scope: !9739)
!9739 = distinct !DILexicalBlock(scope: !9735, file: !1459, line: 3427, column: 59)
!9740 = !DILocation(line: 3430, column: 27, scope: !9741)
!9741 = distinct !DILexicalBlock(scope: !9739, file: !1459, line: 3430, column: 13)
!9742 = !DILocation(line: 3430, column: 24, scope: !9741)
!9743 = !DILocation(line: 3430, column: 22, scope: !9741)
!9744 = !DILocation(line: 3430, column: 13, scope: !9739)
!9745 = !DILocation(line: 3431, column: 47, scope: !9746)
!9746 = distinct !DILexicalBlock(scope: !9741, file: !1459, line: 3430, column: 46)
!9747 = !DILocation(line: 3431, column: 13, scope: !9746)
!9748 = !DILocation(line: 3432, column: 9, scope: !9746)
!9749 = !DILocation(line: 3435, column: 17, scope: !9727)
!9750 = !DILocation(line: 3436, column: 24, scope: !9727)
!9751 = !DILocation(line: 3436, column: 31, scope: !9727)
!9752 = !DILocation(line: 3436, column: 36, scope: !9727)
!9753 = !DILocation(line: 3436, column: 28, scope: !9727)
!9754 = !DILocation(line: 3436, column: 5, scope: !9727)
!9755 = !DILocation(line: 3442, column: 5, scope: !9727)
!9756 = !DILocation(line: 3443, column: 1, scope: !9727)
!9757 = distinct !DISubprogram(name: "SF_DAL_FLAG_SUS_SET", scope: !1459, file: !1459, line: 2405, type: !260, scopeLine: 2406, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !9758)
!9758 = !{!9759}
!9759 = !DILocalVariable(name: "savedMask", scope: !9757, file: !1459, line: 2407, type: !61)
!9760 = !DILocation(line: 2408, column: 17, scope: !9757)
!9761 = !DILocation(line: 0, scope: !9757)
!9762 = !DILocation(line: 2413, column: 25, scope: !9757)
!9763 = !DILocation(line: 2414, column: 5, scope: !9764)
!9764 = distinct !DILexicalBlock(scope: !9765, file: !1459, line: 2414, column: 5)
!9765 = distinct !DILexicalBlock(scope: !9757, file: !1459, line: 2414, column: 5)
!9766 = !DILocation(line: 2415, column: 5, scope: !9757)
!9767 = !DILocation(line: 2416, column: 1, scope: !9757)
!9768 = distinct !DISubprogram(name: "SF_DAL_Dev_Command", scope: !1459, file: !1459, line: 3561, type: !9769, scopeLine: 3562, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !9771)
!9769 = !DISubroutineType(types: !9770)
!9770 = !{null, !1629, !882, !74}
!9771 = !{!9772, !9773, !9774, !9775}
!9772 = !DILocalVariable(name: "D", arg: 1, scope: !9768, file: !1459, line: 3561, type: !1629)
!9773 = !DILocalVariable(name: "cmd", arg: 2, scope: !9768, file: !1459, line: 3561, type: !882)
!9774 = !DILocalVariable(name: "outlen", arg: 3, scope: !9768, file: !1459, line: 3561, type: !74)
!9775 = !DILocalVariable(name: "savedMask", scope: !9768, file: !1459, line: 3563, type: !61)
!9776 = !DILocation(line: 0, scope: !9768)
!9777 = !DILocation(line: 3565, column: 17, scope: !9768)
!9778 = !DILocation(line: 3566, column: 22, scope: !9768)
!9779 = !DILocation(line: 3566, column: 5, scope: !9768)
!9780 = !DILocation(line: 3567, column: 33, scope: !9768)
!9781 = !DILocation(line: 3568, column: 27, scope: !9768)
!9782 = !DILocation(line: 3568, column: 25, scope: !9768)
!9783 = !DILocation(line: 3569, column: 24, scope: !9768)
!9784 = !DILocation(line: 3570, column: 25, scope: !9768)
!9785 = !DILocation(line: 3570, column: 5, scope: !9768)
!9786 = !DILocation(line: 3571, column: 5, scope: !9768)
!9787 = !DILocation(line: 3573, column: 1, scope: !9768)
!9788 = distinct !DISubprogram(name: "retrieve_MTD_lock", scope: !1459, file: !1459, line: 1410, type: !9789, scopeLine: 1411, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !9791)
!9789 = !DISubroutineType(types: !9790)
!9790 = !{!2293}
!9791 = !{!9792}
!9792 = !DILocalVariable(name: "savedMask", scope: !9788, file: !1459, line: 1412, type: !1343)
!9793 = !DILocation(line: 1413, column: 17, scope: !9788)
!9794 = !DILocation(line: 0, scope: !9788)
!9795 = !DILocation(line: 1414, column: 9, scope: !9796)
!9796 = distinct !DILexicalBlock(scope: !9788, file: !1459, line: 1414, column: 9)
!9797 = !DILocation(line: 1414, column: 9, scope: !9788)
!9798 = !DILocation(line: 1415, column: 17, scope: !9799)
!9799 = distinct !DILexicalBlock(scope: !9796, file: !1459, line: 1414, column: 24)
!9800 = !DILocation(line: 1417, column: 9, scope: !9799)
!9801 = !DILocation(line: 0, scope: !9796)
!9802 = !DILocation(line: 1425, column: 1, scope: !9788)
!9803 = distinct !DISubprogram(name: "Flash_CheckReady", scope: !1459, file: !1459, line: 1257, type: !382, scopeLine: 1258, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !9804)
!9804 = !{!9805, !9806, !9807}
!9805 = !DILocalVariable(name: "D", scope: !9803, file: !1459, line: 1259, type: !1629)
!9806 = !DILocalVariable(name: "status", scope: !9803, file: !1459, line: 1260, type: !1681)
!9807 = !DILocalVariable(name: "result", scope: !9803, file: !1459, line: 1261, type: !263)
!9808 = !DILocation(line: 1259, column: 57, scope: !9803)
!9809 = !DILocation(line: 0, scope: !9803)
!9810 = !DILocation(line: 1263, column: 5, scope: !9811)
!9811 = distinct !DILexicalBlock(scope: !9812, file: !1459, line: 1263, column: 5)
!9812 = distinct !DILexicalBlock(scope: !9803, file: !1459, line: 1263, column: 5)
!9813 = !DILocation(line: 1263, column: 5, scope: !9812)
!9814 = !DILocation(line: 1263, column: 5, scope: !9815)
!9815 = distinct !DILexicalBlock(scope: !9811, file: !1459, line: 1263, column: 5)
!9816 = !DILocation(line: 1265, column: 5, scope: !9803)
!9817 = !DILocation(line: 1267, column: 42, scope: !9803)
!9818 = !DILocation(line: 1267, column: 47, scope: !9803)
!9819 = !DILocation(line: 1267, column: 14, scope: !9803)
!9820 = !DILocation(line: 1269, column: 27, scope: !9821)
!9821 = distinct !DILexicalBlock(scope: !9803, file: !1459, line: 1269, column: 9)
!9822 = !DILocation(line: 1269, column: 24, scope: !9821)
!9823 = !DILocation(line: 1269, column: 22, scope: !9821)
!9824 = !DILocation(line: 1269, column: 11, scope: !9821)
!9825 = !DILocation(line: 1269, column: 9, scope: !9803)
!9826 = !DILocation(line: 1270, column: 9, scope: !9827)
!9827 = distinct !DILexicalBlock(scope: !9821, file: !1459, line: 1269, column: 51)
!9828 = !DILocation(line: 1272, column: 5, scope: !9827)
!9829 = !DILocation(line: 1274, column: 5, scope: !9803)
!9830 = !DILocation(line: 1276, column: 5, scope: !9803)
!9831 = distinct !DISubprogram(name: "Flash_ResumeOperation", scope: !1459, file: !1459, line: 1289, type: !260, scopeLine: 1290, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !9832)
!9832 = !{!9833}
!9833 = !DILocalVariable(name: "D", scope: !9831, file: !1459, line: 1291, type: !1629)
!9834 = !DILocation(line: 0, scope: !9831)
!9835 = !DILocation(line: 1293, column: 5, scope: !9836)
!9836 = distinct !DILexicalBlock(scope: !9837, file: !1459, line: 1293, column: 5)
!9837 = distinct !DILexicalBlock(scope: !9831, file: !1459, line: 1293, column: 5)
!9838 = !DILocation(line: 1293, column: 5, scope: !9839)
!9839 = distinct !DILexicalBlock(scope: !9836, file: !1459, line: 1293, column: 5)
!9840 = !DILocation(line: 1293, column: 5, scope: !9841)
!9841 = distinct !DILexicalBlock(scope: !9842, file: !1459, line: 1293, column: 5)
!9842 = distinct !DILexicalBlock(scope: !9843, file: !1459, line: 1293, column: 5)
!9843 = distinct !DILexicalBlock(scope: !9839, file: !1459, line: 1293, column: 5)
!9844 = !DILocation(line: 1291, column: 60, scope: !9831)
!9845 = !DILocation(line: 1295, column: 5, scope: !9831)
!9846 = !DILocation(line: 1296, column: 1, scope: !9831)
!9847 = distinct !DISubprogram(name: "SF_DAL_Dev_Resume", scope: !1459, file: !1459, line: 3452, type: !9491, scopeLine: 3453, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !9848)
!9848 = !{!9849, !9850}
!9849 = !DILocalVariable(name: "D", arg: 1, scope: !9847, file: !1459, line: 3452, type: !1629)
!9850 = !DILocalVariable(name: "savedMask", scope: !9847, file: !1459, line: 3454, type: !61)
!9851 = !DILocation(line: 0, scope: !9847)
!9852 = !DILocation(line: 3456, column: 17, scope: !9847)
!9853 = !DILocation(line: 3462, column: 24, scope: !9847)
!9854 = !DILocation(line: 3462, column: 31, scope: !9847)
!9855 = !DILocation(line: 3462, column: 36, scope: !9847)
!9856 = !DILocation(line: 3462, column: 28, scope: !9847)
!9857 = !DILocation(line: 3462, column: 5, scope: !9847)
!9858 = !DILocation(line: 3463, column: 12, scope: !9859)
!9859 = distinct !DILexicalBlock(scope: !9847, file: !1459, line: 3463, column: 9)
!9860 = !DILocation(line: 3463, column: 27, scope: !9859)
!9861 = !DILocation(line: 3463, column: 9, scope: !9847)
!9862 = !DILocation(line: 3464, column: 28, scope: !9863)
!9863 = distinct !DILexicalBlock(scope: !9859, file: !1459, line: 3463, column: 33)
!9864 = !DILocation(line: 3465, column: 5, scope: !9863)
!9865 = !DILocation(line: 3467, column: 5, scope: !9847)
!9866 = !DILocation(line: 3468, column: 5, scope: !9847)
!9867 = !DILocation(line: 3469, column: 1, scope: !9847)
!9868 = distinct !DISubprogram(name: "SF_DAL_FLAG_SUS_CLR", scope: !1459, file: !1459, line: 2417, type: !260, scopeLine: 2418, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !9869)
!9869 = !{!9870}
!9870 = !DILocalVariable(name: "savedMask", scope: !9868, file: !1459, line: 2419, type: !61)
!9871 = !DILocation(line: 2420, column: 17, scope: !9868)
!9872 = !DILocation(line: 0, scope: !9868)
!9873 = !DILocation(line: 2425, column: 25, scope: !9868)
!9874 = !DILocation(line: 2426, column: 5, scope: !9868)
!9875 = !DILocation(line: 2427, column: 1, scope: !9868)
!9876 = distinct !DISubprogram(name: "Flash_SuspendOperation", scope: !1459, file: !1459, line: 1308, type: !260, scopeLine: 1309, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !9877)
!9877 = !{!9878, !9879}
!9878 = !DILocalVariable(name: "D", scope: !9876, file: !1459, line: 1310, type: !1629)
!9879 = !DILocalVariable(name: "status", scope: !9876, file: !1459, line: 1311, type: !1681)
!9880 = !DILocation(line: 1310, column: 60, scope: !9876)
!9881 = !DILocation(line: 0, scope: !9876)
!9882 = !DILocation(line: 1313, column: 5, scope: !9883)
!9883 = distinct !DILexicalBlock(scope: !9884, file: !1459, line: 1313, column: 5)
!9884 = distinct !DILexicalBlock(scope: !9876, file: !1459, line: 1313, column: 5)
!9885 = !DILocation(line: 1313, column: 5, scope: !9886)
!9886 = distinct !DILexicalBlock(scope: !9883, file: !1459, line: 1313, column: 5)
!9887 = !DILocation(line: 1313, column: 5, scope: !9888)
!9888 = distinct !DILexicalBlock(scope: !9889, file: !1459, line: 1313, column: 5)
!9889 = distinct !DILexicalBlock(scope: !9890, file: !1459, line: 1313, column: 5)
!9890 = distinct !DILexicalBlock(scope: !9886, file: !1459, line: 1313, column: 5)
!9891 = !DILocation(line: 1315, column: 5, scope: !9892)
!9892 = distinct !DILexicalBlock(scope: !9893, file: !1459, line: 1315, column: 5)
!9893 = distinct !DILexicalBlock(scope: !9876, file: !1459, line: 1315, column: 5)
!9894 = !DILocation(line: 1315, column: 5, scope: !9893)
!9895 = !DILocation(line: 1315, column: 5, scope: !9896)
!9896 = distinct !DILexicalBlock(scope: !9892, file: !1459, line: 1315, column: 5)
!9897 = !DILocation(line: 1317, column: 5, scope: !9876)
!9898 = !DILocation(line: 1319, column: 5, scope: !9876)
!9899 = !DILocation(line: 1320, column: 46, scope: !9900)
!9900 = distinct !DILexicalBlock(scope: !9876, file: !1459, line: 1319, column: 15)
!9901 = !DILocation(line: 1320, column: 51, scope: !9900)
!9902 = !DILocation(line: 1320, column: 18, scope: !9900)
!9903 = !DILocation(line: 1322, column: 31, scope: !9904)
!9904 = distinct !DILexicalBlock(scope: !9900, file: !1459, line: 1322, column: 13)
!9905 = !DILocation(line: 1322, column: 28, scope: !9904)
!9906 = !DILocation(line: 1322, column: 26, scope: !9904)
!9907 = !DILocation(line: 1322, column: 15, scope: !9904)
!9908 = !DILocation(line: 1322, column: 13, scope: !9900)
!9909 = distinct !{!9909, !9898, !9910}
!9910 = !DILocation(line: 1325, column: 5, scope: !9876)
!9911 = !DILocation(line: 1327, column: 5, scope: !9876)
!9912 = !DILocation(line: 1328, column: 1, scope: !9876)
!9913 = distinct !DISubprogram(name: "SF_DAL_CreateDevLock", scope: !1459, file: !1459, line: 1394, type: !9491, scopeLine: 1395, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !9914)
!9914 = !{!9915}
!9915 = !DILocalVariable(name: "D", arg: 1, scope: !9913, file: !1459, line: 1394, type: !1629)
!9916 = !DILocation(line: 0, scope: !9913)
!9917 = !DILocation(line: 1401, column: 1, scope: !9913)
!9918 = distinct !DISubprogram(name: "SF_DAL_Init_MXIC", scope: !1459, file: !1459, line: 1556, type: !9919, scopeLine: 1557, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !9940)
!9919 = !DISubroutineType(types: !9920)
!9920 = !{!1343, !9921, !1629}
!9921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9922, size: 32)
!9922 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_Driver", file: !1655, line: 121, baseType: !9923)
!9923 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1655, line: 105, size: 480, elements: !9924)
!9924 = !{!9925, !9926, !9927, !9928, !9929, !9930, !9931, !9932, !9933, !9934, !9935, !9936, !9937, !9938, !9939}
!9925 = !DIDerivedType(tag: DW_TAG_member, name: "MountDevice", scope: !9923, file: !1655, line: 106, baseType: !1925, size: 32)
!9926 = !DIDerivedType(tag: DW_TAG_member, name: "ShutDown", scope: !9923, file: !1655, line: 107, baseType: !1728, size: 32, offset: 32)
!9927 = !DIDerivedType(tag: DW_TAG_member, name: "MapWindow", scope: !9923, file: !1655, line: 108, baseType: !1930, size: 32, offset: 64)
!9928 = !DIDerivedType(tag: DW_TAG_member, name: "EraseBlock", scope: !9923, file: !1655, line: 109, baseType: !1934, size: 32, offset: 96)
!9929 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramData", scope: !9923, file: !1655, line: 110, baseType: !1938, size: 32, offset: 128)
!9930 = !DIDerivedType(tag: DW_TAG_member, name: "NonBlockEraseBlock", scope: !9923, file: !1655, line: 111, baseType: !1934, size: 32, offset: 160)
!9931 = !DIDerivedType(tag: DW_TAG_member, name: "CheckDeviceReady", scope: !9923, file: !1655, line: 112, baseType: !1943, size: 32, offset: 192)
!9932 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendErase", scope: !9923, file: !1655, line: 113, baseType: !1934, size: 32, offset: 224)
!9933 = !DIDerivedType(tag: DW_TAG_member, name: "ResumeErase", scope: !9923, file: !1655, line: 114, baseType: !1934, size: 32, offset: 256)
!9934 = !DIDerivedType(tag: DW_TAG_member, name: "BlankCheck", scope: !9923, file: !1655, line: 115, baseType: !1934, size: 32, offset: 288)
!9935 = !DIDerivedType(tag: DW_TAG_member, name: "OTPAccess", scope: !9923, file: !1655, line: 116, baseType: !1950, size: 32, offset: 320)
!9936 = !DIDerivedType(tag: DW_TAG_member, name: "OTPQueryLength", scope: !9923, file: !1655, line: 117, baseType: !1955, size: 32, offset: 352)
!9937 = !DIDerivedType(tag: DW_TAG_member, name: "LockEraseBlkAddr", scope: !9923, file: !1655, line: 118, baseType: !1960, size: 32, offset: 384)
!9938 = !DIDerivedType(tag: DW_TAG_member, name: "IsEraseSuspended", scope: !9923, file: !1655, line: 119, baseType: !1964, size: 32, offset: 416)
!9939 = !DIDerivedType(tag: DW_TAG_member, name: "IOCtrl", scope: !9923, file: !1655, line: 120, baseType: !1968, size: 32, offset: 448)
!9940 = !{!9941, !9942, !9943}
!9941 = !DILocalVariable(name: "driver", arg: 1, scope: !9918, file: !1459, line: 1556, type: !9921)
!9942 = !DILocalVariable(name: "D", arg: 2, scope: !9918, file: !1459, line: 1556, type: !1629)
!9943 = !DILocalVariable(name: "smap", scope: !9918, file: !1459, line: 1558, type: !1680)
!9944 = !DILocation(line: 0, scope: !9918)
!9945 = !DILocation(line: 1561, column: 15, scope: !9918)
!9946 = !DILocation(line: 1562, column: 22, scope: !9918)
!9947 = !DILocation(line: 1563, column: 5, scope: !9918)
!9948 = !DILocation(line: 1563, column: 22, scope: !9918)
!9949 = !DILocation(line: 1565, column: 5, scope: !9918)
!9950 = !DILocation(line: 1565, column: 22, scope: !9918)
!9951 = !DILocation(line: 1566, column: 5, scope: !9918)
!9952 = !DILocation(line: 1566, column: 22, scope: !9918)
!9953 = !DILocation(line: 1568, column: 5, scope: !9918)
!9954 = !DILocation(line: 1568, column: 22, scope: !9918)
!9955 = !DILocation(line: 1569, column: 5, scope: !9918)
!9956 = !DILocation(line: 1569, column: 22, scope: !9918)
!9957 = !DILocation(line: 1570, column: 5, scope: !9918)
!9958 = !DILocation(line: 1570, column: 22, scope: !9918)
!9959 = !DILocation(line: 1573, column: 8, scope: !9918)
!9960 = !DILocation(line: 1573, column: 13, scope: !9918)
!9961 = !DILocation(line: 1573, column: 28, scope: !9918)
!9962 = !DILocation(line: 1574, column: 8, scope: !9918)
!9963 = !DILocation(line: 1574, column: 13, scope: !9918)
!9964 = !DILocation(line: 1574, column: 29, scope: !9918)
!9965 = !DILocation(line: 1575, column: 8, scope: !9918)
!9966 = !DILocation(line: 1575, column: 13, scope: !9918)
!9967 = !DILocation(line: 1575, column: 30, scope: !9918)
!9968 = !DILocation(line: 1576, column: 8, scope: !9918)
!9969 = !DILocation(line: 1576, column: 13, scope: !9918)
!9970 = !DILocation(line: 1576, column: 23, scope: !9918)
!9971 = !DILocation(line: 1577, column: 8, scope: !9918)
!9972 = !DILocation(line: 1577, column: 13, scope: !9918)
!9973 = !DILocation(line: 1577, column: 24, scope: !9918)
!9974 = !DILocation(line: 1578, column: 8, scope: !9918)
!9975 = !DILocation(line: 1578, column: 13, scope: !9918)
!9976 = !DILocation(line: 1578, column: 25, scope: !9918)
!9977 = !DILocation(line: 1579, column: 8, scope: !9918)
!9978 = !DILocation(line: 1579, column: 23, scope: !9918)
!9979 = !DILocation(line: 1583, column: 10, scope: !9980)
!9980 = distinct !DILexicalBlock(scope: !9918, file: !1459, line: 1583, column: 9)
!9981 = !DILocation(line: 1583, column: 24, scope: !9980)
!9982 = !DILocation(line: 1583, column: 32, scope: !9980)
!9983 = !DILocation(line: 1583, column: 35, scope: !9980)
!9984 = !DILocation(line: 1583, column: 49, scope: !9980)
!9985 = !DILocation(line: 1583, column: 9, scope: !9918)
!9986 = !DILocation(line: 1586, column: 12, scope: !9987)
!9987 = distinct !DILexicalBlock(scope: !9980, file: !1459, line: 1583, column: 59)
!9988 = !DILocation(line: 1586, column: 17, scope: !9987)
!9989 = !DILocation(line: 1586, column: 25, scope: !9987)
!9990 = !DILocation(line: 1587, column: 12, scope: !9987)
!9991 = !DILocation(line: 1587, column: 17, scope: !9987)
!9992 = !DILocation(line: 1587, column: 24, scope: !9987)
!9993 = !DILocation(line: 1591, column: 10, scope: !9994)
!9994 = distinct !DILexicalBlock(scope: !9918, file: !1459, line: 1591, column: 9)
!9995 = !DILocation(line: 1589, column: 5, scope: !9987)
!9996 = !DILocation(line: 1600, column: 32, scope: !9997)
!9997 = distinct !DILexicalBlock(scope: !9918, file: !1459, line: 1600, column: 9)
!9998 = !DILocation(line: 1600, column: 35, scope: !9997)
!9999 = !DILocation(line: 1600, column: 49, scope: !9997)
!10000 = !DILocation(line: 1600, column: 9, scope: !9918)
!10001 = !DILocation(line: 1601, column: 12, scope: !10002)
!10002 = distinct !DILexicalBlock(scope: !9997, file: !1459, line: 1600, column: 59)
!10003 = !DILocation(line: 1601, column: 17, scope: !10002)
!10004 = !DILocation(line: 1601, column: 25, scope: !10002)
!10005 = !DILocation(line: 1602, column: 12, scope: !10002)
!10006 = !DILocation(line: 1602, column: 17, scope: !10002)
!10007 = !DILocation(line: 1602, column: 24, scope: !10002)
!10008 = !DILocation(line: 1603, column: 5, scope: !10002)
!10009 = !DILocation(line: 1607, column: 8, scope: !9918)
!10010 = !DILocation(line: 1607, column: 20, scope: !9918)
!10011 = !DILocation(line: 1622, column: 5, scope: !9918)
!10012 = distinct !DISubprogram(name: "SF_DAL_UnlockBlock_MXIC", scope: !1459, file: !1459, line: 4553, type: !1729, scopeLine: 4554, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !10013)
!10013 = !{!10014, !10015, !10016, !10017}
!10014 = !DILocalVariable(name: "MTDData", arg: 1, scope: !10012, file: !1459, line: 4553, type: !65)
!10015 = !DILocalVariable(name: "D", scope: !10012, file: !1459, line: 4555, type: !1629)
!10016 = !DILocalVariable(name: "unlock", scope: !10012, file: !1459, line: 4556, type: !61)
!10017 = !DILocalVariable(name: "cmd", scope: !10012, file: !1459, line: 4557, type: !74)
!10018 = !DILocation(line: 0, scope: !10012)
!10019 = !DILocation(line: 4555, column: 24, scope: !10012)
!10020 = !DILocation(line: 4557, column: 5, scope: !10012)
!10021 = !DILocation(line: 4558, column: 12, scope: !10022)
!10022 = distinct !DILexicalBlock(scope: !10012, file: !1459, line: 4558, column: 9)
!10023 = !DILocation(line: 4558, column: 9, scope: !10022)
!10024 = !DILocation(line: 4558, column: 23, scope: !10022)
!10025 = !DILocation(line: 4558, column: 31, scope: !10022)
!10026 = !DILocation(line: 4558, column: 34, scope: !10022)
!10027 = !DILocation(line: 4558, column: 48, scope: !10022)
!10028 = !DILocation(line: 4558, column: 56, scope: !10022)
!10029 = !DILocation(line: 4558, column: 59, scope: !10022)
!10030 = !DILocation(line: 4558, column: 73, scope: !10022)
!10031 = !DILocation(line: 4558, column: 9, scope: !10012)
!10032 = !DILocation(line: 4563, column: 24, scope: !10012)
!10033 = !DILocation(line: 4563, column: 31, scope: !10012)
!10034 = !DILocation(line: 4563, column: 36, scope: !10012)
!10035 = !DILocation(line: 4563, column: 28, scope: !10012)
!10036 = !DILocation(line: 4563, column: 5, scope: !10012)
!10037 = !DILocation(line: 4564, column: 5, scope: !10012)
!10038 = !DILocation(line: 4567, column: 28, scope: !10012)
!10039 = !DILocation(line: 4567, column: 36, scope: !10012)
!10040 = !DILocation(line: 4567, column: 41, scope: !10012)
!10041 = !DILocation(line: 4567, column: 5, scope: !10012)
!10042 = !DILocation(line: 4568, column: 17, scope: !10012)
!10043 = !DILocation(line: 4568, column: 22, scope: !10012)
!10044 = !DILocation(line: 4568, column: 14, scope: !10012)
!10045 = !DILocation(line: 4569, column: 22, scope: !10012)
!10046 = !DILocation(line: 4569, column: 54, scope: !10012)
!10047 = !DILocation(line: 4569, column: 65, scope: !10012)
!10048 = !DILocation(line: 4569, column: 62, scope: !10012)
!10049 = !DILocation(line: 4569, column: 87, scope: !10012)
!10050 = !DILocation(line: 4569, column: 85, scope: !10012)
!10051 = !DILocation(line: 4569, column: 60, scope: !10012)
!10052 = !DILocation(line: 4569, column: 58, scope: !10012)
!10053 = !DILocation(line: 4569, column: 51, scope: !10012)
!10054 = !DILocation(line: 4572, column: 24, scope: !10012)
!10055 = !DILocation(line: 4572, column: 5, scope: !10012)
!10056 = !DILocation(line: 4573, column: 5, scope: !10012)
!10057 = !DILocation(line: 4575, column: 5, scope: !10012)
!10058 = !DILocation(line: 4576, column: 1, scope: !10012)
!10059 = distinct !DISubprogram(name: "SF_DAL_Dev_WaitReady_EMIINIT", scope: !1459, file: !1459, line: 4488, type: !9491, scopeLine: 4489, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !10060)
!10060 = !{!10061, !10062}
!10061 = !DILocalVariable(name: "D", arg: 1, scope: !10059, file: !1459, line: 4488, type: !1629)
!10062 = !DILocalVariable(name: "status", scope: !10059, file: !1459, line: 4490, type: !1681)
!10063 = !DILocation(line: 0, scope: !10059)
!10064 = !DILocation(line: 4490, column: 5, scope: !10059)
!10065 = !DILocation(line: 4491, column: 5, scope: !10059)
!10066 = !DILocation(line: 4492, column: 32, scope: !10067)
!10067 = distinct !DILexicalBlock(scope: !10059, file: !1459, line: 4491, column: 10)
!10068 = !DILocation(line: 4492, column: 40, scope: !10067)
!10069 = !DILocation(line: 4492, column: 45, scope: !10067)
!10070 = !DILocation(line: 4492, column: 9, scope: !10067)
!10071 = !DILocation(line: 4493, column: 20, scope: !10059)
!10072 = !DILocation(line: 4493, column: 32, scope: !10059)
!10073 = !DILocation(line: 4493, column: 29, scope: !10059)
!10074 = !DILocation(line: 4493, column: 27, scope: !10059)
!10075 = !DILocation(line: 4493, column: 16, scope: !10059)
!10076 = !DILocation(line: 4493, column: 5, scope: !10067)
!10077 = distinct !{!10077, !10065, !10078}
!10078 = !DILocation(line: 4493, column: 54, scope: !10059)
!10079 = !DILocation(line: 4494, column: 1, scope: !10059)
!10080 = distinct !DISubprogram(name: "SF_DAL_Init_WINBOND", scope: !1459, file: !1459, line: 1742, type: !9919, scopeLine: 1743, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !10081)
!10081 = !{!10082, !10083, !10084}
!10082 = !DILocalVariable(name: "driver", arg: 1, scope: !10080, file: !1459, line: 1742, type: !9921)
!10083 = !DILocalVariable(name: "D", arg: 2, scope: !10080, file: !1459, line: 1742, type: !1629)
!10084 = !DILocalVariable(name: "smap", scope: !10080, file: !1459, line: 1744, type: !1680)
!10085 = !DILocation(line: 0, scope: !10080)
!10086 = !DILocation(line: 1747, column: 15, scope: !10080)
!10087 = !DILocation(line: 1748, column: 22, scope: !10080)
!10088 = !DILocation(line: 1749, column: 5, scope: !10080)
!10089 = !DILocation(line: 1749, column: 22, scope: !10080)
!10090 = !DILocation(line: 1750, column: 5, scope: !10080)
!10091 = !DILocation(line: 1750, column: 22, scope: !10080)
!10092 = !DILocation(line: 1751, column: 5, scope: !10080)
!10093 = !DILocation(line: 1751, column: 22, scope: !10080)
!10094 = !DILocation(line: 1752, column: 5, scope: !10080)
!10095 = !DILocation(line: 1752, column: 22, scope: !10080)
!10096 = !DILocation(line: 1753, column: 5, scope: !10080)
!10097 = !DILocation(line: 1753, column: 22, scope: !10080)
!10098 = !DILocation(line: 1756, column: 8, scope: !10080)
!10099 = !DILocation(line: 1756, column: 13, scope: !10080)
!10100 = !DILocation(line: 1756, column: 24, scope: !10080)
!10101 = !DILocation(line: 1758, column: 8, scope: !10080)
!10102 = !DILocation(line: 1758, column: 13, scope: !10080)
!10103 = !DILocation(line: 1758, column: 28, scope: !10080)
!10104 = !DILocation(line: 1759, column: 8, scope: !10080)
!10105 = !DILocation(line: 1759, column: 13, scope: !10080)
!10106 = !DILocation(line: 1759, column: 29, scope: !10080)
!10107 = !DILocation(line: 1760, column: 8, scope: !10080)
!10108 = !DILocation(line: 1760, column: 13, scope: !10080)
!10109 = !DILocation(line: 1760, column: 23, scope: !10080)
!10110 = !DILocation(line: 1761, column: 8, scope: !10080)
!10111 = !DILocation(line: 1761, column: 13, scope: !10080)
!10112 = !DILocation(line: 1761, column: 24, scope: !10080)
!10113 = !DILocation(line: 1762, column: 8, scope: !10080)
!10114 = !DILocation(line: 1762, column: 13, scope: !10080)
!10115 = !DILocation(line: 1762, column: 21, scope: !10080)
!10116 = !DILocation(line: 1763, column: 8, scope: !10080)
!10117 = !DILocation(line: 1763, column: 13, scope: !10080)
!10118 = !DILocation(line: 1763, column: 20, scope: !10080)
!10119 = !DILocation(line: 1764, column: 8, scope: !10080)
!10120 = !DILocation(line: 1764, column: 23, scope: !10080)
!10121 = !DILocation(line: 1768, column: 8, scope: !10080)
!10122 = !DILocation(line: 1768, column: 20, scope: !10080)
!10123 = !DILocation(line: 1770, column: 5, scope: !10080)
!10124 = distinct !DISubprogram(name: "SF_DAL_Init_WINBOND_OTP", scope: !1459, file: !1459, line: 1775, type: !9919, scopeLine: 1776, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !10125)
!10125 = !{!10126, !10127}
!10126 = !DILocalVariable(name: "driver", arg: 1, scope: !10124, file: !1459, line: 1775, type: !9921)
!10127 = !DILocalVariable(name: "D", arg: 2, scope: !10124, file: !1459, line: 1775, type: !1629)
!10128 = !DILocation(line: 0, scope: !10124)
!10129 = !DILocation(line: 1793, column: 5, scope: !10124)
!10130 = distinct !DISubprogram(name: "SF_DAL_Init_Common", scope: !1459, file: !1459, line: 1932, type: !9919, scopeLine: 1933, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !10131)
!10131 = !{!10132, !10133}
!10132 = !DILocalVariable(name: "driver", arg: 1, scope: !10130, file: !1459, line: 1932, type: !9921)
!10133 = !DILocalVariable(name: "D", arg: 2, scope: !10130, file: !1459, line: 1932, type: !1629)
!10134 = !DILocation(line: 0, scope: !10130)
!10135 = !DILocation(line: 1935, column: 13, scope: !10130)
!10136 = !DILocation(line: 1935, column: 25, scope: !10130)
!10137 = !DILocation(line: 1936, column: 13, scope: !10130)
!10138 = !DILocation(line: 1936, column: 22, scope: !10130)
!10139 = !DILocation(line: 1937, column: 13, scope: !10130)
!10140 = !DILocation(line: 1937, column: 23, scope: !10130)
!10141 = !DILocation(line: 1939, column: 13, scope: !10130)
!10142 = !DILocation(line: 1939, column: 24, scope: !10130)
!10143 = !DILocation(line: 1940, column: 13, scope: !10130)
!10144 = !DILocation(line: 1940, column: 25, scope: !10130)
!10145 = !DILocation(line: 1945, column: 13, scope: !10130)
!10146 = !DILocation(line: 1945, column: 32, scope: !10130)
!10147 = !DILocation(line: 1946, column: 13, scope: !10130)
!10148 = !DILocation(line: 1946, column: 30, scope: !10130)
!10149 = !DILocation(line: 1947, column: 13, scope: !10130)
!10150 = !DILocation(line: 1947, column: 26, scope: !10130)
!10151 = !DILocation(line: 1948, column: 13, scope: !10130)
!10152 = !DILocation(line: 1948, column: 25, scope: !10130)
!10153 = !DILocation(line: 1949, column: 13, scope: !10130)
!10154 = !DILocation(line: 1949, column: 24, scope: !10130)
!10155 = !DILocation(line: 1956, column: 13, scope: !10130)
!10156 = !DILocation(line: 1956, column: 23, scope: !10130)
!10157 = !DILocation(line: 1957, column: 13, scope: !10130)
!10158 = !DILocation(line: 1957, column: 28, scope: !10130)
!10159 = !DILocation(line: 1960, column: 13, scope: !10130)
!10160 = !DILocation(line: 1960, column: 30, scope: !10130)
!10161 = !DILocation(line: 1961, column: 13, scope: !10130)
!10162 = !DILocation(line: 1961, column: 30, scope: !10130)
!10163 = !DILocation(line: 1962, column: 13, scope: !10130)
!10164 = !DILocation(line: 1962, column: 20, scope: !10130)
!10165 = !DILocation(line: 1968, column: 9, scope: !10166)
!10166 = distinct !DILexicalBlock(scope: !10130, file: !1459, line: 1968, column: 9)
!10167 = !DILocation(line: 1968, column: 36, scope: !10166)
!10168 = !DILocation(line: 1968, column: 9, scope: !10130)
!10169 = !DILocation(line: 1971, column: 12, scope: !10170)
!10170 = distinct !DILexicalBlock(scope: !10166, file: !1459, line: 1970, column: 5)
!10171 = !DILocation(line: 1971, column: 25, scope: !10170)
!10172 = !DILocation(line: 1979, column: 8, scope: !10130)
!10173 = !DILocation(line: 1979, column: 13, scope: !10130)
!10174 = !DILocation(line: 1979, column: 25, scope: !10130)
!10175 = !DILocation(line: 1980, column: 8, scope: !10130)
!10176 = !DILocation(line: 1980, column: 13, scope: !10130)
!10177 = !DILocation(line: 1980, column: 24, scope: !10130)
!10178 = !DILocation(line: 1981, column: 8, scope: !10130)
!10179 = !DILocation(line: 1981, column: 13, scope: !10130)
!10180 = !DILocation(line: 1981, column: 24, scope: !10130)
!10181 = !DILocation(line: 1982, column: 8, scope: !10130)
!10182 = !DILocation(line: 1982, column: 13, scope: !10130)
!10183 = !DILocation(line: 1982, column: 22, scope: !10130)
!10184 = !DILocation(line: 1983, column: 8, scope: !10130)
!10185 = !DILocation(line: 1983, column: 13, scope: !10130)
!10186 = !DILocation(line: 1983, column: 21, scope: !10130)
!10187 = !DILocation(line: 1984, column: 8, scope: !10130)
!10188 = !DILocation(line: 1984, column: 13, scope: !10130)
!10189 = !DILocation(line: 1984, column: 22, scope: !10130)
!10190 = !DILocation(line: 1985, column: 8, scope: !10130)
!10191 = !DILocation(line: 1985, column: 13, scope: !10130)
!10192 = !DILocation(line: 1985, column: 22, scope: !10130)
!10193 = !DILocation(line: 1986, column: 8, scope: !10130)
!10194 = !DILocation(line: 1986, column: 13, scope: !10130)
!10195 = !DILocation(line: 1986, column: 21, scope: !10130)
!10196 = !DILocation(line: 1987, column: 8, scope: !10130)
!10197 = !DILocation(line: 1987, column: 13, scope: !10130)
!10198 = !DILocation(line: 1987, column: 20, scope: !10130)
!10199 = !DILocation(line: 1988, column: 8, scope: !10130)
!10200 = !DILocation(line: 1988, column: 13, scope: !10130)
!10201 = !DILocation(line: 1988, column: 25, scope: !10130)
!10202 = !DILocation(line: 1989, column: 8, scope: !10130)
!10203 = !DILocation(line: 1989, column: 13, scope: !10130)
!10204 = !DILocation(line: 1989, column: 22, scope: !10130)
!10205 = !DILocation(line: 1990, column: 8, scope: !10130)
!10206 = !DILocation(line: 1990, column: 13, scope: !10130)
!10207 = !DILocation(line: 1990, column: 22, scope: !10130)
!10208 = !DILocation(line: 1993, column: 8, scope: !10130)
!10209 = !DILocation(line: 1993, column: 13, scope: !10130)
!10210 = !DILocation(line: 1993, column: 26, scope: !10130)
!10211 = !DILocation(line: 1996, column: 8, scope: !10130)
!10212 = !DILocation(line: 1996, column: 20, scope: !10130)
!10213 = !DILocation(line: 1999, column: 8, scope: !10130)
!10214 = !DILocation(line: 1999, column: 24, scope: !10130)
!10215 = !DILocation(line: 2000, column: 8, scope: !10130)
!10216 = !DILocation(line: 2000, column: 19, scope: !10130)
!10217 = !DILocation(line: 2001, column: 8, scope: !10130)
!10218 = !DILocation(line: 2001, column: 24, scope: !10130)
!10219 = !DILocation(line: 2002, column: 8, scope: !10130)
!10220 = !DILocation(line: 2002, column: 23, scope: !10130)
!10221 = !DILocation(line: 2004, column: 5, scope: !10130)
!10222 = distinct !DISubprogram(name: "SF_DAL_MountDevice", scope: !1459, file: !1459, line: 2160, type: !1926, scopeLine: 2161, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !10223)
!10223 = !{!10224, !10225, !10226, !10239, !10240, !10241}
!10224 = !DILocalVariable(name: "MTDData", arg: 1, scope: !10222, file: !1459, line: 2160, type: !65)
!10225 = !DILocalVariable(name: "Info", arg: 2, scope: !10222, file: !1459, line: 2160, type: !65)
!10226 = !DILocalVariable(name: "FlashInfo", scope: !10222, file: !1459, line: 2162, type: !10227)
!10227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10228, size: 32)
!10228 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_FlashInfo", file: !1655, line: 99, baseType: !10229)
!10229 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1655, line: 90, size: 928, elements: !10230)
!10230 = !{!10231, !10232, !10233, !10234, !10235, !10236, !10237, !10238}
!10231 = !DIDerivedType(tag: DW_TAG_member, name: "TotalBlocks", scope: !10229, file: !1655, line: 91, baseType: !61, size: 32)
!10232 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !10229, file: !1655, line: 92, baseType: !1982, size: 256, offset: 32)
!10233 = !DIDerivedType(tag: DW_TAG_member, name: "AvailInRegion", scope: !10229, file: !1655, line: 93, baseType: !1982, size: 256, offset: 288)
!10234 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !10229, file: !1655, line: 94, baseType: !1982, size: 256, offset: 544)
!10235 = !DIDerivedType(tag: DW_TAG_member, name: "ActualRegionNum", scope: !10229, file: !1655, line: 95, baseType: !61, size: 32, offset: 800)
!10236 = !DIDerivedType(tag: DW_TAG_member, name: "PageSize", scope: !10229, file: !1655, line: 96, baseType: !1974, size: 16, offset: 832)
!10237 = !DIDerivedType(tag: DW_TAG_member, name: "baseUnlockBlock", scope: !10229, file: !1655, line: 97, baseType: !61, size: 32, offset: 864)
!10238 = !DIDerivedType(tag: DW_TAG_member, name: "endUnlockBlock", scope: !10229, file: !1655, line: 98, baseType: !61, size: 32, offset: 896)
!10239 = !DILocalVariable(name: "D", scope: !10222, file: !1459, line: 2163, type: !1629)
!10240 = !DILocalVariable(name: "i", scope: !10222, file: !1459, line: 2164, type: !61)
!10241 = !DILocalVariable(name: "result", scope: !10222, file: !1459, line: 2166, type: !1343)
!10242 = !DILocation(line: 0, scope: !10222)
!10243 = !DILocation(line: 2163, column: 37, scope: !10222)
!10244 = !DILocation(line: 2202, column: 16, scope: !10222)
!10245 = !DILocation(line: 2202, column: 28, scope: !10222)
!10246 = !DILocation(line: 2204, column: 15, scope: !10222)
!10247 = !DILocation(line: 2204, column: 29, scope: !10222)
!10248 = !DILocation(line: 2204, column: 39, scope: !10222)
!10249 = !DILocation(line: 2204, column: 5, scope: !10222)
!10250 = !DILocation(line: 2205, column: 9, scope: !10251)
!10251 = distinct !DILexicalBlock(scope: !10222, file: !1459, line: 2204, column: 45)
!10252 = !DILocation(line: 2205, column: 33, scope: !10251)
!10253 = !DILocation(line: 2206, column: 41, scope: !10251)
!10254 = !DILocation(line: 2206, column: 55, scope: !10251)
!10255 = !DILocation(line: 2206, column: 9, scope: !10251)
!10256 = !DILocation(line: 2206, column: 36, scope: !10251)
!10257 = !DILocation(line: 2207, column: 38, scope: !10251)
!10258 = !DILocation(line: 2207, column: 52, scope: !10251)
!10259 = !DILocation(line: 2207, column: 32, scope: !10251)
!10260 = !DILocation(line: 2209, column: 10, scope: !10251)
!10261 = distinct !{!10261, !10249, !10262}
!10262 = !DILocation(line: 2210, column: 5, scope: !10222)
!10263 = !DILocation(line: 2212, column: 16, scope: !10222)
!10264 = !DILocation(line: 2212, column: 32, scope: !10222)
!10265 = !DILocation(line: 2213, column: 16, scope: !10222)
!10266 = !DILocation(line: 2213, column: 25, scope: !10222)
!10267 = !DILocation(line: 2236, column: 5, scope: !10222)
!10268 = !DILocation(line: 2238, column: 5, scope: !10222)
!10269 = !DILocation(line: 2239, column: 18, scope: !10270)
!10270 = distinct !DILexicalBlock(scope: !10222, file: !1459, line: 2238, column: 10)
!10271 = !DILocation(line: 2240, column: 34, scope: !10222)
!10272 = !DILocation(line: 2240, column: 5, scope: !10270)
!10273 = distinct !{!10273, !10268, !10274}
!10274 = !DILocation(line: 2240, column: 43, scope: !10222)
!10275 = !DILocation(line: 2259, column: 5, scope: !10222)
!10276 = distinct !DISubprogram(name: "SF_DAL_ShutDown", scope: !1459, file: !1459, line: 2275, type: !1729, scopeLine: 2276, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !10277)
!10277 = !{!10278, !10279, !10280, !10281}
!10278 = !DILocalVariable(name: "MTDData", arg: 1, scope: !10276, file: !1459, line: 2275, type: !65)
!10279 = !DILocalVariable(name: "D", scope: !10276, file: !1459, line: 2278, type: !1629)
!10280 = !DILocalVariable(name: "status", scope: !10276, file: !1459, line: 2279, type: !1681)
!10281 = !DILocalVariable(name: "saved_mask", scope: !10276, file: !1459, line: 2280, type: !61)
!10282 = !DILocation(line: 0, scope: !10276)
!10283 = !DILocation(line: 2278, column: 33, scope: !10276)
!10284 = !DILocation(line: 2286, column: 5, scope: !10276)
!10285 = !DILocation(line: 2293, column: 9, scope: !10276)
!10286 = !DILocation(line: 2294, column: 26, scope: !10287)
!10287 = distinct !DILexicalBlock(scope: !10276, file: !1459, line: 2293, column: 19)
!10288 = !DILocation(line: 2297, column: 17, scope: !10289)
!10289 = distinct !DILexicalBlock(scope: !10287, file: !1459, line: 2297, column: 17)
!10290 = !DILocation(line: 2297, column: 17, scope: !10287)
!10291 = !DILocation(line: 2298, column: 17, scope: !10292)
!10292 = distinct !DILexicalBlock(scope: !10289, file: !1459, line: 2297, column: 36)
!10293 = !DILocation(line: 2299, column: 37, scope: !10292)
!10294 = !DILocation(line: 2300, column: 13, scope: !10292)
!10295 = !DILocation(line: 2303, column: 50, scope: !10287)
!10296 = !DILocation(line: 2303, column: 55, scope: !10287)
!10297 = !DILocation(line: 2303, column: 22, scope: !10287)
!10298 = !DILocation(line: 2306, column: 35, scope: !10299)
!10299 = distinct !DILexicalBlock(scope: !10287, file: !1459, line: 2306, column: 17)
!10300 = !DILocation(line: 2306, column: 32, scope: !10299)
!10301 = !DILocation(line: 2306, column: 30, scope: !10299)
!10302 = !DILocation(line: 2306, column: 19, scope: !10299)
!10303 = !DILocation(line: 2306, column: 17, scope: !10287)
!10304 = !DILocation(line: 2307, column: 17, scope: !10305)
!10305 = distinct !DILexicalBlock(scope: !10299, file: !1459, line: 2306, column: 59)
!10306 = !DILocation(line: 2308, column: 17, scope: !10305)
!10307 = !DILocation(line: 2315, column: 12, scope: !10276)
!10308 = !DILocation(line: 2315, column: 21, scope: !10276)
!10309 = !DILocation(line: 2325, column: 9, scope: !10276)
!10310 = !DILocation(line: 2326, column: 5, scope: !10276)
!10311 = !DILocation(line: 2311, column: 17, scope: !10312)
!10312 = distinct !DILexicalBlock(scope: !10299, file: !1459, line: 2310, column: 20)
!10313 = distinct !{!10313, !10285, !10314}
!10314 = !DILocation(line: 2313, column: 9, scope: !10276)
!10315 = distinct !DISubprogram(name: "SF_DAL_EraseBlock", scope: !1459, file: !1459, line: 2819, type: !1935, scopeLine: 2820, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !10316)
!10316 = !{!10317, !10318, !10319, !10320, !10321, !10322, !10323, !10324, !10325, !10326, !10329, !10330}
!10317 = !DILocalVariable(name: "MTDData", arg: 1, scope: !10315, file: !1459, line: 2819, type: !65)
!10318 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !10315, file: !1459, line: 2819, type: !61)
!10319 = !DILocalVariable(name: "result", scope: !10315, file: !1459, line: 2821, type: !1343)
!10320 = !DILocalVariable(name: "blocksize", scope: !10315, file: !1459, line: 2822, type: !61)
!10321 = !DILocalVariable(name: "eraseunit", scope: !10315, file: !1459, line: 2823, type: !61)
!10322 = !DILocalVariable(name: "eraseaddr", scope: !10315, file: !1459, line: 2824, type: !61)
!10323 = !DILocalVariable(name: "iteration", scope: !10315, file: !1459, line: 2825, type: !61)
!10324 = !DILocalVariable(name: "D", scope: !10315, file: !1459, line: 2826, type: !1629)
!10325 = !DILocalVariable(name: "erase_block", scope: !10315, file: !1459, line: 2827, type: !61)
!10326 = !DILocalVariable(name: "a", scope: !10327, file: !1459, line: 2853, type: !61)
!10327 = distinct !DILexicalBlock(scope: !10328, file: !1459, line: 2852, column: 56)
!10328 = distinct !DILexicalBlock(scope: !10315, file: !1459, line: 2852, column: 9)
!10329 = !DILocalVariable(name: "b", scope: !10327, file: !1459, line: 2853, type: !61)
!10330 = !DILocalVariable(name: "c", scope: !10327, file: !1459, line: 2853, type: !61)
!10331 = !DILocation(line: 0, scope: !10315)
!10332 = !DILocation(line: 2826, column: 30, scope: !10315)
!10333 = !DILocation(line: 2829, column: 5, scope: !10334)
!10334 = distinct !DILexicalBlock(scope: !10335, file: !1459, line: 2829, column: 5)
!10335 = distinct !DILexicalBlock(scope: !10315, file: !1459, line: 2829, column: 5)
!10336 = !DILocation(line: 2829, column: 5, scope: !10335)
!10337 = !DILocation(line: 2829, column: 5, scope: !10338)
!10338 = distinct !DILexicalBlock(scope: !10334, file: !1459, line: 2829, column: 5)
!10339 = !DILocation(line: 2836, column: 9, scope: !10315)
!10340 = !DILocation(line: 2838, column: 8, scope: !10315)
!10341 = !DILocation(line: 2838, column: 21, scope: !10315)
!10342 = !DILocation(line: 2847, column: 5, scope: !10315)
!10343 = !DILocation(line: 2848, column: 18, scope: !10344)
!10344 = distinct !DILexicalBlock(scope: !10315, file: !1459, line: 2847, column: 10)
!10345 = !DILocation(line: 2850, column: 34, scope: !10315)
!10346 = !DILocation(line: 2850, column: 5, scope: !10344)
!10347 = distinct !{!10347, !10342, !10348}
!10348 = !DILocation(line: 2850, column: 43, scope: !10315)
!10349 = !DILocation(line: 2839, column: 32, scope: !10315)
!10350 = !DILocation(line: 2861, column: 53, scope: !10327)
!10351 = !DILocation(line: 2861, column: 40, scope: !10327)
!10352 = !DILocation(line: 2861, column: 25, scope: !10327)
!10353 = !DILocation(line: 2874, column: 16, scope: !10327)
!10354 = !DILocation(line: 2874, column: 13, scope: !10327)
!10355 = !DILocation(line: 0, scope: !10327)
!10356 = !DILocation(line: 2875, column: 24, scope: !10327)
!10357 = !DILocation(line: 2877, column: 21, scope: !10358)
!10358 = distinct !DILexicalBlock(scope: !10327, file: !1459, line: 2877, column: 13)
!10359 = !DILocation(line: 2877, column: 13, scope: !10327)
!10360 = !DILocation(line: 2879, column: 23, scope: !10361)
!10361 = distinct !DILexicalBlock(scope: !10362, file: !1459, line: 2879, column: 21)
!10362 = distinct !DILexicalBlock(scope: !10363, file: !1459, line: 2878, column: 120)
!10363 = distinct !DILexicalBlock(scope: !10364, file: !1459, line: 2878, column: 13)
!10364 = distinct !DILexicalBlock(scope: !10365, file: !1459, line: 2878, column: 13)
!10365 = distinct !DILexicalBlock(scope: !10358, file: !1459, line: 2877, column: 27)
!10366 = !DILocation(line: 2879, column: 21, scope: !10362)
!10367 = !DILocation(line: 2878, column: 48, scope: !10363)
!10368 = !DILocation(line: 2878, column: 83, scope: !10363)
!10369 = !DILocation(line: 2878, column: 113, scope: !10363)
!10370 = !DILocation(line: 2878, column: 35, scope: !10363)
!10371 = !DILocation(line: 2878, column: 13, scope: !10364)
!10372 = distinct !{!10372, !10371, !10373}
!10373 = !DILocation(line: 2883, column: 13, scope: !10364)
!10374 = !DILocation(line: 2863, column: 19, scope: !10327)
!10375 = !DILocation(line: 2825, column: 24, scope: !10315)
!10376 = !DILocation(line: 2886, column: 9, scope: !10327)
!10377 = !DILocation(line: 2888, column: 36, scope: !10378)
!10378 = distinct !DILexicalBlock(scope: !10327, file: !1459, line: 2886, column: 31)
!10379 = !DILocation(line: 2888, column: 41, scope: !10378)
!10380 = !DILocation(line: 2889, column: 17, scope: !10378)
!10381 = !DILocation(line: 2891, column: 36, scope: !10378)
!10382 = !DILocation(line: 2891, column: 41, scope: !10378)
!10383 = !DILocation(line: 2892, column: 17, scope: !10378)
!10384 = !DILocation(line: 2894, column: 36, scope: !10378)
!10385 = !DILocation(line: 2894, column: 41, scope: !10378)
!10386 = !DILocation(line: 2895, column: 17, scope: !10378)
!10387 = !DILocation(line: 2897, column: 17, scope: !10388)
!10388 = distinct !DILexicalBlock(scope: !10389, file: !1459, line: 2897, column: 17)
!10389 = distinct !DILexicalBlock(scope: !10390, file: !1459, line: 2897, column: 17)
!10390 = distinct !DILexicalBlock(scope: !10378, file: !1459, line: 2897, column: 17)
!10391 = !DILocation(line: 0, scope: !10378)
!10392 = !DILocation(line: 2906, column: 5, scope: !10315)
!10393 = !DILocation(line: 2908, column: 32, scope: !10394)
!10394 = distinct !DILexicalBlock(scope: !10315, file: !1459, line: 2906, column: 27)
!10395 = !DILocation(line: 2908, column: 37, scope: !10394)
!10396 = !DILocation(line: 2909, column: 13, scope: !10394)
!10397 = !DILocation(line: 2911, column: 32, scope: !10394)
!10398 = !DILocation(line: 2911, column: 37, scope: !10394)
!10399 = !DILocation(line: 2912, column: 13, scope: !10394)
!10400 = !DILocation(line: 2914, column: 32, scope: !10394)
!10401 = !DILocation(line: 2914, column: 37, scope: !10394)
!10402 = !DILocation(line: 2915, column: 13, scope: !10394)
!10403 = !DILocation(line: 0, scope: !10394)
!10404 = !DILocation(line: 2921, column: 56, scope: !10405)
!10405 = distinct !DILexicalBlock(scope: !10406, file: !1459, line: 2921, column: 5)
!10406 = distinct !DILexicalBlock(scope: !10315, file: !1459, line: 2921, column: 5)
!10407 = !DILocation(line: 2921, column: 5, scope: !10406)
!10408 = !DILocation(line: 2921, column: 35, scope: !10406)
!10409 = !DILocation(line: 2921, column: 22, scope: !10406)
!10410 = !DILocation(line: 2922, column: 9, scope: !10411)
!10411 = distinct !DILexicalBlock(scope: !10405, file: !1459, line: 2921, column: 99)
!10412 = !DILocation(line: 2929, column: 9, scope: !10411)
!10413 = !DILocation(line: 2938, column: 26, scope: !10414)
!10414 = distinct !DILexicalBlock(scope: !10411, file: !1459, line: 2929, column: 26)
!10415 = !DILocation(line: 2939, column: 37, scope: !10416)
!10416 = distinct !DILexicalBlock(scope: !10414, file: !1459, line: 2939, column: 17)
!10417 = !DILocation(line: 2939, column: 17, scope: !10414)
!10418 = distinct !{!10418, !10412, !10419}
!10419 = !DILocation(line: 2943, column: 9, scope: !10411)
!10420 = !DILocation(line: 2921, column: 71, scope: !10405)
!10421 = !DILocation(line: 2921, column: 85, scope: !10405)
!10422 = distinct !{!10422, !10407, !10423}
!10423 = !DILocation(line: 2983, column: 5, scope: !10406)
!10424 = !DILocation(line: 2985, column: 21, scope: !10315)
!10425 = !DILocation(line: 2992, column: 9, scope: !10315)
!10426 = !DILocation(line: 3000, column: 5, scope: !10315)
!10427 = distinct !DISubprogram(name: "SF_DAL_ProgramData", scope: !1459, file: !1459, line: 2533, type: !1939, scopeLine: 2534, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !10428)
!10428 = !{!10429, !10430, !10431, !10432, !10433, !10434, !10435, !10436, !10437, !10438, !10439, !10440, !10441, !10442}
!10429 = !DILocalVariable(name: "MTDData", arg: 1, scope: !10427, file: !1459, line: 2533, type: !65)
!10430 = !DILocalVariable(name: "Address", arg: 2, scope: !10427, file: !1459, line: 2533, type: !65)
!10431 = !DILocalVariable(name: "Data", arg: 3, scope: !10427, file: !1459, line: 2533, type: !65)
!10432 = !DILocalVariable(name: "Length", arg: 4, scope: !10427, file: !1459, line: 2533, type: !61)
!10433 = !DILocalVariable(name: "D", scope: !10427, file: !1459, line: 2535, type: !1629)
!10434 = !DILocalVariable(name: "savedMask", scope: !10427, file: !1459, line: 2536, type: !61)
!10435 = !DILocalVariable(name: "address", scope: !10427, file: !1459, line: 2537, type: !61)
!10436 = !DILocalVariable(name: "p_data", scope: !10427, file: !1459, line: 2538, type: !872)
!10437 = !DILocalVariable(name: "p_data_first", scope: !10427, file: !1459, line: 2539, type: !872)
!10438 = !DILocalVariable(name: "result", scope: !10427, file: !1459, line: 2540, type: !1343)
!10439 = !DILocalVariable(name: "written", scope: !10427, file: !1459, line: 2541, type: !61)
!10440 = !DILocalVariable(name: "length", scope: !10427, file: !1459, line: 2542, type: !61)
!10441 = !DILocalVariable(name: "cmd1", scope: !10427, file: !1459, line: 2543, type: !61)
!10442 = !DILocalVariable(name: "j", scope: !10443, file: !1459, line: 2599, type: !61)
!10443 = distinct !DILexicalBlock(scope: !10444, file: !1459, line: 2597, column: 61)
!10444 = distinct !DILexicalBlock(scope: !10445, file: !1459, line: 2597, column: 13)
!10445 = distinct !DILexicalBlock(scope: !10427, file: !1459, line: 2583, column: 25)
!10446 = !DILocation(line: 0, scope: !10427)
!10447 = !DILocation(line: 2535, column: 26, scope: !10427)
!10448 = !DILocation(line: 2537, column: 37, scope: !10427)
!10449 = !DILocation(line: 2538, column: 5, scope: !10427)
!10450 = !DILocation(line: 2538, column: 19, scope: !10427)
!10451 = !DILocation(line: 2542, column: 5, scope: !10427)
!10452 = !DILocation(line: 2545, column: 5, scope: !10453)
!10453 = distinct !DILexicalBlock(scope: !10454, file: !1459, line: 2545, column: 5)
!10454 = distinct !DILexicalBlock(scope: !10427, file: !1459, line: 2545, column: 5)
!10455 = !DILocation(line: 2545, column: 5, scope: !10454)
!10456 = !DILocation(line: 2545, column: 5, scope: !10457)
!10457 = distinct !DILexicalBlock(scope: !10453, file: !1459, line: 2545, column: 5)
!10458 = !DILocation(line: 2567, column: 9, scope: !10427)
!10459 = !DILocation(line: 2569, column: 8, scope: !10427)
!10460 = !DILocation(line: 2569, column: 21, scope: !10427)
!10461 = !DILocation(line: 2576, column: 5, scope: !10427)
!10462 = !DILocation(line: 2577, column: 18, scope: !10463)
!10463 = distinct !DILexicalBlock(scope: !10427, file: !1459, line: 2576, column: 10)
!10464 = !DILocation(line: 2579, column: 34, scope: !10427)
!10465 = !DILocation(line: 2579, column: 5, scope: !10463)
!10466 = distinct !{!10466, !10461, !10467}
!10467 = !DILocation(line: 2579, column: 43, scope: !10427)
!10468 = !DILocation(line: 2583, column: 14, scope: !10427)
!10469 = !DILocation(line: 2583, column: 5, scope: !10427)
!10470 = !DILocation(line: 2584, column: 27, scope: !10445)
!10471 = !DILocation(line: 2592, column: 18, scope: !10445)
!10472 = !DILocation(line: 2592, column: 35, scope: !10445)
!10473 = !DILocation(line: 2592, column: 74, scope: !10445)
!10474 = !DILocation(line: 2592, column: 50, scope: !10445)
!10475 = !DILocation(line: 2592, column: 39, scope: !10445)
!10476 = !DILocation(line: 2595, column: 37, scope: !10445)
!10477 = !DILocation(line: 2595, column: 29, scope: !10445)
!10478 = !DILocation(line: 2595, column: 16, scope: !10445)
!10479 = !DILocation(line: 2597, column: 13, scope: !10444)
!10480 = !DILocation(line: 2597, column: 30, scope: !10444)
!10481 = !DILocation(line: 2597, column: 13, scope: !10445)
!10482 = !DILocation(line: 0, scope: !10443)
!10483 = !DILocation(line: 2600, column: 27, scope: !10484)
!10484 = distinct !DILexicalBlock(scope: !10485, file: !1459, line: 2600, column: 13)
!10485 = distinct !DILexicalBlock(scope: !10443, file: !1459, line: 2600, column: 13)
!10486 = !DILocation(line: 2600, column: 13, scope: !10485)
!10487 = !DILocation(line: 2601, column: 38, scope: !10488)
!10488 = distinct !DILexicalBlock(scope: !10484, file: !1459, line: 2600, column: 42)
!10489 = !DILocation(line: 2601, column: 17, scope: !10488)
!10490 = !DILocation(line: 2601, column: 36, scope: !10488)
!10491 = !DILocation(line: 2600, column: 38, scope: !10484)
!10492 = distinct !{!10492, !10486, !10493}
!10493 = !DILocation(line: 2602, column: 13, scope: !10485)
!10494 = !DILocation(line: 0, scope: !10445)
!10495 = !DILocation(line: 2606, column: 18, scope: !10496)
!10496 = distinct !DILexicalBlock(scope: !10445, file: !1459, line: 2606, column: 13)
!10497 = !DILocation(line: 2606, column: 29, scope: !10496)
!10498 = !DILocation(line: 2606, column: 13, scope: !10445)
!10499 = !DILocation(line: 2607, column: 13, scope: !10500)
!10500 = distinct !DILexicalBlock(scope: !10496, file: !1459, line: 2606, column: 55)
!10501 = !DILocation(line: 2608, column: 9, scope: !10500)
!10502 = !DILocation(line: 2613, column: 16, scope: !10503)
!10503 = distinct !DILexicalBlock(scope: !10445, file: !1459, line: 2613, column: 13)
!10504 = !DILocation(line: 2613, column: 29, scope: !10503)
!10505 = !DILocation(line: 0, scope: !10503)
!10506 = !DILocation(line: 2613, column: 13, scope: !10445)
!10507 = !DILocation(line: 2614, column: 20, scope: !10508)
!10508 = distinct !DILexicalBlock(scope: !10503, file: !1459, line: 2613, column: 35)
!10509 = !DILocation(line: 2615, column: 32, scope: !10508)
!10510 = !DILocation(line: 2615, column: 40, scope: !10508)
!10511 = !DILocation(line: 2615, column: 13, scope: !10508)
!10512 = !DILocation(line: 2616, column: 9, scope: !10508)
!10513 = !DILocation(line: 2619, column: 20, scope: !10514)
!10514 = distinct !DILexicalBlock(scope: !10503, file: !1459, line: 2618, column: 9)
!10515 = !DILocation(line: 2620, column: 32, scope: !10514)
!10516 = !DILocation(line: 2620, column: 40, scope: !10514)
!10517 = !DILocation(line: 2620, column: 13, scope: !10514)
!10518 = !DILocation(line: 2626, column: 21, scope: !10445)
!10519 = !DILocation(line: 2633, column: 37, scope: !10445)
!10520 = !DILocation(line: 2634, column: 45, scope: !10445)
!10521 = !DILocation(line: 2634, column: 42, scope: !10445)
!10522 = !DILocation(line: 2634, column: 40, scope: !10445)
!10523 = !DILocation(line: 2634, column: 58, scope: !10445)
!10524 = !DILocation(line: 2634, column: 29, scope: !10445)
!10525 = !DILocation(line: 2635, column: 28, scope: !10445)
!10526 = !DILocation(line: 2636, column: 9, scope: !10445)
!10527 = !DILocation(line: 2638, column: 26, scope: !10445)
!10528 = !DILocation(line: 2638, column: 9, scope: !10445)
!10529 = !DILocation(line: 2639, column: 29, scope: !10445)
!10530 = !DILocation(line: 2639, column: 9, scope: !10445)
!10531 = !DILocation(line: 2662, column: 9, scope: !10445)
!10532 = !DILocation(line: 2670, column: 9, scope: !10445)
!10533 = !DILocation(line: 2676, column: 89, scope: !10534)
!10534 = distinct !DILexicalBlock(scope: !10445, file: !1459, line: 2670, column: 13)
!10535 = !DILocation(line: 2676, column: 26, scope: !10534)
!10536 = !DILocation(line: 2678, column: 36, scope: !10445)
!10537 = !DILocation(line: 2678, column: 9, scope: !10534)
!10538 = distinct !{!10538, !10532, !10539}
!10539 = !DILocation(line: 2678, column: 45, scope: !10445)
!10540 = !DILocation(line: 2718, column: 19, scope: !10445)
!10541 = !DILocation(line: 2718, column: 16, scope: !10445)
!10542 = !DILocation(line: 2719, column: 16, scope: !10445)
!10543 = !DILocation(line: 2722, column: 31, scope: !10544)
!10544 = distinct !DILexicalBlock(scope: !10445, file: !1459, line: 2722, column: 13)
!10545 = !DILocation(line: 2722, column: 13, scope: !10445)
!10546 = distinct !{!10546, !10469, !10547}
!10547 = !DILocation(line: 2725, column: 5, scope: !10427)
!10548 = !DILocation(line: 2748, column: 21, scope: !10427)
!10549 = !DILocation(line: 2755, column: 9, scope: !10427)
!10550 = !DILocation(line: 2757, column: 16, scope: !10551)
!10551 = distinct !DILexicalBlock(scope: !10427, file: !1459, line: 2757, column: 9)
!10552 = !DILocation(line: 2761, column: 1, scope: !10427)
!10553 = distinct !DISubprogram(name: "SF_DAL_NonBlockEraseBlock", scope: !1459, file: !1459, line: 3019, type: !1935, scopeLine: 3020, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !10554)
!10554 = !{!10555, !10556}
!10555 = !DILocalVariable(name: "MTDData", arg: 1, scope: !10553, file: !1459, line: 3019, type: !65)
!10556 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !10553, file: !1459, line: 3019, type: !61)
!10557 = !DILocation(line: 0, scope: !10553)
!10558 = !DILocation(line: 3021, column: 5, scope: !10553)
!10559 = distinct !DISubprogram(name: "SF_DAL_CheckDeviceReady", scope: !1459, file: !1459, line: 3124, type: !1944, scopeLine: 3125, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !10560)
!10560 = !{!10561, !10562, !10563, !10564, !10565, !10566, !10567, !10568}
!10561 = !DILocalVariable(name: "MTDData", arg: 1, scope: !10559, file: !1459, line: 3124, type: !65)
!10562 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !10559, file: !1459, line: 3124, type: !61)
!10563 = !DILocalVariable(name: "result", scope: !10559, file: !1459, line: 3126, type: !1343)
!10564 = !DILocalVariable(name: "savedMask", scope: !10559, file: !1459, line: 3127, type: !61)
!10565 = !DILocalVariable(name: "D", scope: !10559, file: !1459, line: 3128, type: !1629)
!10566 = !DILocalVariable(name: "status_busy", scope: !10559, file: !1459, line: 3129, type: !1681)
!10567 = !DILocalVariable(name: "status_suspend", scope: !10559, file: !1459, line: 3129, type: !1681)
!10568 = !DILocalVariable(name: "check_status", scope: !10569, file: !1459, line: 3141, type: !1681)
!10569 = distinct !DILexicalBlock(scope: !10570, file: !1459, line: 3140, column: 56)
!10570 = distinct !DILexicalBlock(scope: !10559, file: !1459, line: 3140, column: 9)
!10571 = !DILocation(line: 0, scope: !10559)
!10572 = !DILocation(line: 3128, column: 47, scope: !10559)
!10573 = !DILocation(line: 3131, column: 5, scope: !10574)
!10574 = distinct !DILexicalBlock(scope: !10575, file: !1459, line: 3131, column: 5)
!10575 = distinct !DILexicalBlock(scope: !10559, file: !1459, line: 3131, column: 5)
!10576 = !DILocation(line: 3131, column: 5, scope: !10575)
!10577 = !DILocation(line: 3131, column: 5, scope: !10578)
!10578 = distinct !DILexicalBlock(scope: !10574, file: !1459, line: 3131, column: 5)
!10579 = !DILocation(line: 3134, column: 50, scope: !10559)
!10580 = !DILocation(line: 3134, column: 55, scope: !10559)
!10581 = !DILocation(line: 3134, column: 22, scope: !10559)
!10582 = !DILocation(line: 3135, column: 50, scope: !10559)
!10583 = !DILocation(line: 3135, column: 55, scope: !10559)
!10584 = !DILocation(line: 3135, column: 22, scope: !10559)
!10585 = !DILocation(line: 3138, column: 17, scope: !10559)
!10586 = !DILocation(line: 3140, column: 32, scope: !10570)
!10587 = !DILocation(line: 3140, column: 29, scope: !10570)
!10588 = !DILocation(line: 3140, column: 27, scope: !10570)
!10589 = !DILocation(line: 3140, column: 11, scope: !10570)
!10590 = !DILocation(line: 3140, column: 9, scope: !10559)
!10591 = !DILocation(line: 3141, column: 34, scope: !10569)
!10592 = !DILocation(line: 3141, column: 60, scope: !10569)
!10593 = !DILocation(line: 3141, column: 58, scope: !10569)
!10594 = !DILocation(line: 0, scope: !10569)
!10595 = !DILocation(line: 3144, column: 37, scope: !10596)
!10596 = distinct !DILexicalBlock(scope: !10569, file: !1459, line: 3144, column: 13)
!10597 = !DILocation(line: 3144, column: 35, scope: !10596)
!10598 = !DILocation(line: 3144, column: 16, scope: !10596)
!10599 = !DILocation(line: 3144, column: 52, scope: !10596)
!10600 = !DILocation(line: 3145, column: 21, scope: !10596)
!10601 = !DILocation(line: 3145, column: 38, scope: !10596)
!10602 = !DILocation(line: 3147, column: 13, scope: !10603)
!10603 = distinct !DILexicalBlock(scope: !10604, file: !1459, line: 3147, column: 13)
!10604 = distinct !DILexicalBlock(scope: !10605, file: !1459, line: 3147, column: 13)
!10605 = distinct !DILexicalBlock(scope: !10596, file: !1459, line: 3145, column: 61)
!10606 = !DILocation(line: 3147, column: 13, scope: !10604)
!10607 = !DILocation(line: 3147, column: 13, scope: !10608)
!10608 = distinct !DILexicalBlock(scope: !10603, file: !1459, line: 3147, column: 13)
!10609 = !DILocation(line: 3150, column: 13, scope: !10605)
!10610 = !DILocation(line: 3151, column: 33, scope: !10605)
!10611 = !DILocation(line: 3153, column: 9, scope: !10605)
!10612 = !DILocation(line: 3155, column: 20, scope: !10613)
!10613 = distinct !DILexicalBlock(scope: !10614, file: !1459, line: 3155, column: 17)
!10614 = distinct !DILexicalBlock(scope: !10596, file: !1459, line: 3153, column: 16)
!10615 = !DILocation(line: 3155, column: 31, scope: !10613)
!10616 = !DILocation(line: 3155, column: 17, scope: !10614)
!10617 = !DILocation(line: 3156, column: 36, scope: !10618)
!10618 = distinct !DILexicalBlock(scope: !10613, file: !1459, line: 3155, column: 54)
!10619 = !DILocation(line: 3156, column: 17, scope: !10618)
!10620 = !DILocation(line: 3157, column: 36, scope: !10618)
!10621 = !DILocation(line: 3157, column: 17, scope: !10618)
!10622 = !DILocation(line: 3158, column: 13, scope: !10618)
!10623 = !DILocation(line: 3191, column: 5, scope: !10559)
!10624 = !DILocation(line: 3193, column: 9, scope: !10559)
!10625 = !DILocation(line: 3160, column: 13, scope: !10614)
!10626 = !DILocation(line: 3173, column: 13, scope: !10614)
!10627 = !DILocation(line: 3194, column: 18, scope: !10628)
!10628 = distinct !DILexicalBlock(scope: !10629, file: !1459, line: 3193, column: 32)
!10629 = distinct !DILexicalBlock(scope: !10559, file: !1459, line: 3193, column: 9)
!10630 = !DILocation(line: 3195, column: 5, scope: !10628)
!10631 = !DILocation(line: 3197, column: 5, scope: !10559)
!10632 = distinct !DISubprogram(name: "SF_DAL_SuspendErase", scope: !1459, file: !1459, line: 3225, type: !1935, scopeLine: 3226, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !10633)
!10633 = !{!10634, !10635, !10636, !10637, !10638}
!10634 = !DILocalVariable(name: "MTDData", arg: 1, scope: !10632, file: !1459, line: 3225, type: !65)
!10635 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !10632, file: !1459, line: 3225, type: !61)
!10636 = !DILocalVariable(name: "D", scope: !10632, file: !1459, line: 3227, type: !1629)
!10637 = !DILocalVariable(name: "status", scope: !10632, file: !1459, line: 3228, type: !1681)
!10638 = !DILocalVariable(name: "savedMask", scope: !10632, file: !1459, line: 3229, type: !61)
!10639 = !DILocation(line: 0, scope: !10632)
!10640 = !DILocation(line: 3227, column: 30, scope: !10632)
!10641 = !DILocation(line: 3231, column: 17, scope: !10632)
!10642 = !DILocation(line: 3234, column: 5, scope: !10632)
!10643 = !DILocation(line: 3238, column: 5, scope: !10632)
!10644 = !DILocation(line: 3239, column: 46, scope: !10645)
!10645 = distinct !DILexicalBlock(scope: !10632, file: !1459, line: 3238, column: 15)
!10646 = !DILocation(line: 3239, column: 51, scope: !10645)
!10647 = !DILocation(line: 3239, column: 18, scope: !10645)
!10648 = !DILocation(line: 3241, column: 31, scope: !10649)
!10649 = distinct !DILexicalBlock(scope: !10645, file: !1459, line: 3241, column: 13)
!10650 = !DILocation(line: 3241, column: 28, scope: !10649)
!10651 = !DILocation(line: 3241, column: 26, scope: !10649)
!10652 = !DILocation(line: 3241, column: 15, scope: !10649)
!10653 = !DILocation(line: 3241, column: 13, scope: !10645)
!10654 = distinct !{!10654, !10643, !10655}
!10655 = !DILocation(line: 3244, column: 5, scope: !10632)
!10656 = !DILocation(line: 3246, column: 5, scope: !10632)
!10657 = !DILocation(line: 3248, column: 5, scope: !10632)
!10658 = !DILocation(line: 3250, column: 5, scope: !10632)
!10659 = distinct !DISubprogram(name: "SF_DAL_ResumeErase", scope: !1459, file: !1459, line: 3277, type: !1935, scopeLine: 3278, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !10660)
!10660 = !{!10661, !10662, !10663}
!10661 = !DILocalVariable(name: "MTDData", arg: 1, scope: !10659, file: !1459, line: 3277, type: !65)
!10662 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !10659, file: !1459, line: 3277, type: !61)
!10663 = !DILocalVariable(name: "D", scope: !10659, file: !1459, line: 3279, type: !1629)
!10664 = !DILocation(line: 0, scope: !10659)
!10665 = !DILocation(line: 3279, column: 29, scope: !10659)
!10666 = !DILocation(line: 3281, column: 5, scope: !10659)
!10667 = !DILocation(line: 3282, column: 5, scope: !10659)
!10668 = !DILocation(line: 3283, column: 5, scope: !10659)
!10669 = !DILocation(line: 3285, column: 5, scope: !10659)
!10670 = distinct !DISubprogram(name: "SF_DAL_LockEraseBlkAddr", scope: !1459, file: !1459, line: 3332, type: !1961, scopeLine: 3333, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !10671)
!10671 = !{!10672, !10673, !10674}
!10672 = !DILocalVariable(name: "MTDData", arg: 1, scope: !10670, file: !1459, line: 3332, type: !65)
!10673 = !DILocalVariable(name: "BlkAddr", arg: 2, scope: !10670, file: !1459, line: 3332, type: !65)
!10674 = !DILocalVariable(name: "ACTION", arg: 3, scope: !10670, file: !1459, line: 3332, type: !61)
!10675 = !DILocation(line: 0, scope: !10670)
!10676 = !DILocation(line: 3334, column: 5, scope: !10670)
!10677 = distinct !DISubprogram(name: "SF_DAL_IOCtrl", scope: !1459, file: !1459, line: 2350, type: !1969, scopeLine: 2351, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !10678)
!10678 = !{!10679, !10680, !10681, !10682}
!10679 = !DILocalVariable(name: "MTDData", arg: 1, scope: !10677, file: !1459, line: 2350, type: !65)
!10680 = !DILocalVariable(name: "CtrlAction", arg: 2, scope: !10677, file: !1459, line: 2350, type: !61)
!10681 = !DILocalVariable(name: "CtrlData", arg: 3, scope: !10677, file: !1459, line: 2350, type: !65)
!10682 = !DILocalVariable(name: "D", scope: !10677, file: !1459, line: 2352, type: !1629)
!10683 = !DILocation(line: 0, scope: !10677)
!10684 = !DILocation(line: 2353, column: 9, scope: !10677)
!10685 = !DILocation(line: 2354, column: 12, scope: !10686)
!10686 = distinct !DILexicalBlock(scope: !10687, file: !1459, line: 2353, column: 51)
!10687 = distinct !DILexicalBlock(scope: !10677, file: !1459, line: 2353, column: 9)
!10688 = !DILocation(line: 2354, column: 9, scope: !10686)
!10689 = !DILocation(line: 2355, column: 5, scope: !10686)
!10690 = !DILocation(line: 2356, column: 17, scope: !10691)
!10691 = distinct !DILexicalBlock(scope: !10692, file: !1459, line: 2356, column: 13)
!10692 = distinct !DILexicalBlock(scope: !10693, file: !1459, line: 2355, column: 71)
!10693 = distinct !DILexicalBlock(scope: !10687, file: !1459, line: 2355, column: 16)
!10694 = !DILocation(line: 2356, column: 14, scope: !10691)
!10695 = !DILocation(line: 2356, column: 28, scope: !10691)
!10696 = !DILocation(line: 2356, column: 49, scope: !10691)
!10697 = !DILocation(line: 2356, column: 56, scope: !10691)
!10698 = !DILocation(line: 2356, column: 70, scope: !10691)
!10699 = !DILocation(line: 2356, column: 80, scope: !10691)
!10700 = !DILocation(line: 2356, column: 13, scope: !10692)
!10701 = !DILocation(line: 2361, column: 9, scope: !10702)
!10702 = distinct !DILexicalBlock(scope: !10703, file: !1459, line: 2361, column: 9)
!10703 = distinct !DILexicalBlock(scope: !10704, file: !1459, line: 2361, column: 9)
!10704 = distinct !DILexicalBlock(scope: !10705, file: !1459, line: 2361, column: 9)
!10705 = distinct !DILexicalBlock(scope: !10693, file: !1459, line: 2359, column: 12)
!10706 = !DILocation(line: 2363, column: 5, scope: !10677)
!10707 = !DILocation(line: 2364, column: 1, scope: !10677)
!10708 = distinct !DISubprogram(name: "SF_DAL_FailCheck", scope: !1459, file: !1459, line: 3355, type: !1729, scopeLine: 3356, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !10709)
!10709 = !{!10710, !10711, !10712}
!10710 = !DILocalVariable(name: "MTDData", arg: 1, scope: !10708, file: !1459, line: 3355, type: !65)
!10711 = !DILocalVariable(name: "D", scope: !10708, file: !1459, line: 3357, type: !1629)
!10712 = !DILocalVariable(name: "status", scope: !10708, file: !1459, line: 3358, type: !1041)
!10713 = !DILocation(line: 0, scope: !10708)
!10714 = !DILocation(line: 3366, column: 12, scope: !10715)
!10715 = distinct !DILexicalBlock(scope: !10708, file: !1459, line: 3366, column: 9)
!10716 = !DILocation(line: 3366, column: 17, scope: !10715)
!10717 = !DILocation(line: 3366, column: 9, scope: !10715)
!10718 = !DILocation(line: 3366, column: 9, scope: !10708)
!10719 = !DILocation(line: 3357, column: 25, scope: !10708)
!10720 = !DILocation(line: 3367, column: 18, scope: !10721)
!10721 = distinct !DILexicalBlock(scope: !10715, file: !1459, line: 3366, column: 33)
!10722 = !DILocation(line: 3368, column: 25, scope: !10723)
!10723 = distinct !DILexicalBlock(scope: !10721, file: !1459, line: 3368, column: 13)
!10724 = !DILocation(line: 3368, column: 22, scope: !10723)
!10725 = !DILocation(line: 3368, column: 20, scope: !10723)
!10726 = !DILocation(line: 3368, column: 13, scope: !10721)
!10727 = !DILocation(line: 3373, column: 5, scope: !10708)
!10728 = !DILocation(line: 3374, column: 1, scope: !10708)
!10729 = distinct !DISubprogram(name: "SF_DAL_CheckReadyAndResume", scope: !1459, file: !1459, line: 3044, type: !10730, scopeLine: 3045, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !10732)
!10730 = !DISubroutineType(types: !10731)
!10731 = !{!1343, !65, !61, !74}
!10732 = !{!10733, !10734, !10735, !10736, !10737, !10738, !10739, !10740}
!10733 = !DILocalVariable(name: "MTDData", arg: 1, scope: !10729, file: !1459, line: 3044, type: !65)
!10734 = !DILocalVariable(name: "addr", arg: 2, scope: !10729, file: !1459, line: 3044, type: !61)
!10735 = !DILocalVariable(name: "data", arg: 3, scope: !10729, file: !1459, line: 3044, type: !74)
!10736 = !DILocalVariable(name: "savedMask", scope: !10729, file: !1459, line: 3046, type: !61)
!10737 = !DILocalVariable(name: "D", scope: !10729, file: !1459, line: 3047, type: !1629)
!10738 = !DILocalVariable(name: "result", scope: !10729, file: !1459, line: 3048, type: !1343)
!10739 = !DILocalVariable(name: "check_data", scope: !10729, file: !1459, line: 3049, type: !74)
!10740 = !DILocalVariable(name: "status_busy", scope: !10729, file: !1459, line: 3050, type: !1041)
!10741 = !DILocation(line: 0, scope: !10729)
!10742 = !DILocation(line: 3047, column: 43, scope: !10729)
!10743 = !DILocation(line: 3053, column: 47, scope: !10729)
!10744 = !DILocation(line: 3053, column: 52, scope: !10729)
!10745 = !DILocation(line: 3053, column: 19, scope: !10729)
!10746 = !DILocation(line: 3056, column: 9, scope: !10747)
!10747 = distinct !DILexicalBlock(scope: !10729, file: !1459, line: 3056, column: 9)
!10748 = !DILocation(line: 3056, column: 9, scope: !10729)
!10749 = !DILocation(line: 3058, column: 9, scope: !10750)
!10750 = distinct !DILexicalBlock(scope: !10751, file: !1459, line: 3058, column: 9)
!10751 = distinct !DILexicalBlock(scope: !10752, file: !1459, line: 3058, column: 9)
!10752 = distinct !DILexicalBlock(scope: !10747, file: !1459, line: 3056, column: 28)
!10753 = !DILocation(line: 3058, column: 9, scope: !10751)
!10754 = !DILocation(line: 3058, column: 9, scope: !10755)
!10755 = distinct !DILexicalBlock(scope: !10750, file: !1459, line: 3058, column: 9)
!10756 = !DILocation(line: 3060, column: 9, scope: !10752)
!10757 = !DILocation(line: 3062, column: 29, scope: !10752)
!10758 = !DILocation(line: 3063, column: 5, scope: !10752)
!10759 = !DILocation(line: 3065, column: 38, scope: !10760)
!10760 = distinct !DILexicalBlock(scope: !10747, file: !1459, line: 3065, column: 15)
!10761 = !DILocation(line: 3065, column: 35, scope: !10760)
!10762 = !DILocation(line: 3065, column: 33, scope: !10760)
!10763 = !DILocation(line: 3065, column: 17, scope: !10760)
!10764 = !DILocation(line: 3065, column: 15, scope: !10747)
!10765 = !DILocation(line: 3066, column: 21, scope: !10766)
!10766 = distinct !DILexicalBlock(scope: !10760, file: !1459, line: 3065, column: 62)
!10767 = !DILocation(line: 3068, column: 9, scope: !10766)
!10768 = !DILocation(line: 3071, column: 23, scope: !10766)
!10769 = !DILocation(line: 3071, column: 22, scope: !10766)
!10770 = !DILocation(line: 3073, column: 24, scope: !10771)
!10771 = distinct !DILexicalBlock(scope: !10766, file: !1459, line: 3073, column: 13)
!10772 = !DILocation(line: 3088, column: 9, scope: !10766)
!10773 = !DILocation(line: 3092, column: 13, scope: !10774)
!10774 = distinct !DILexicalBlock(scope: !10775, file: !1459, line: 3092, column: 13)
!10775 = distinct !DILexicalBlock(scope: !10729, file: !1459, line: 3091, column: 9)
!10776 = !DILocation(line: 3092, column: 33, scope: !10774)
!10777 = !DILocation(line: 3092, column: 13, scope: !10775)
!10778 = !DILocation(line: 3106, column: 5, scope: !10729)
!10779 = !DILocation(line: 3107, column: 1, scope: !10729)
!10780 = distinct !DISubprogram(name: "SF_DAL_Dev_EraseBlock", scope: !1459, file: !1459, line: 3497, type: !10781, scopeLine: 3498, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !10783)
!10781 = !DISubroutineType(types: !10782)
!10782 = !{null, !1629, !61}
!10783 = !{!10784, !10785, !10786}
!10784 = !DILocalVariable(name: "D", arg: 1, scope: !10780, file: !1459, line: 3497, type: !1629)
!10785 = !DILocalVariable(name: "addr", arg: 2, scope: !10780, file: !1459, line: 3497, type: !61)
!10786 = !DILocalVariable(name: "savedMask", scope: !10780, file: !1459, line: 3499, type: !61)
!10787 = !DILocation(line: 0, scope: !10780)
!10788 = !DILocation(line: 3501, column: 14, scope: !10789)
!10789 = distinct !DILexicalBlock(scope: !10780, file: !1459, line: 3501, column: 9)
!10790 = !DILocation(line: 3501, column: 25, scope: !10789)
!10791 = !DILocation(line: 3501, column: 9, scope: !10780)
!10792 = !DILocation(line: 3502, column: 9, scope: !10793)
!10793 = distinct !DILexicalBlock(scope: !10789, file: !1459, line: 3501, column: 51)
!10794 = !DILocation(line: 3503, column: 5, scope: !10793)
!10795 = !DILocation(line: 3507, column: 17, scope: !10780)
!10796 = !DILocation(line: 3516, column: 5, scope: !10780)
!10797 = !DILocation(line: 3517, column: 31, scope: !10780)
!10798 = !DILocation(line: 3517, column: 38, scope: !10780)
!10799 = !DILocation(line: 3517, column: 43, scope: !10780)
!10800 = !DILocation(line: 3517, column: 59, scope: !10780)
!10801 = !DILocation(line: 3517, column: 56, scope: !10780)
!10802 = !DILocation(line: 3517, column: 5, scope: !10780)
!10803 = !DILocation(line: 3523, column: 5, scope: !10780)
!10804 = !DILocation(line: 3524, column: 1, scope: !10780)
!10805 = distinct !DISubprogram(name: "SF_DAL_Init_Vendor", scope: !1459, file: !1459, line: 2018, type: !9919, scopeLine: 2019, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !10806)
!10806 = !{!10807, !10808, !10809}
!10807 = !DILocalVariable(name: "driver", arg: 1, scope: !10805, file: !1459, line: 2018, type: !9921)
!10808 = !DILocalVariable(name: "D", arg: 2, scope: !10805, file: !1459, line: 2018, type: !1629)
!10809 = !DILocalVariable(name: "result", scope: !10805, file: !1459, line: 2020, type: !1343)
!10810 = !DILocation(line: 0, scope: !10805)
!10811 = !DILocation(line: 2022, column: 13, scope: !10805)
!10812 = !DILocation(line: 2022, column: 5, scope: !10805)
!10813 = !DILocation(line: 2031, column: 16, scope: !10814)
!10814 = distinct !DILexicalBlock(scope: !10805, file: !1459, line: 2022, column: 31)
!10815 = !DILocation(line: 2031, column: 27, scope: !10814)
!10816 = !DILocation(line: 2033, column: 22, scope: !10814)
!10817 = !DILocation(line: 2034, column: 13, scope: !10814)
!10818 = !DILocation(line: 2049, column: 16, scope: !10814)
!10819 = !DILocation(line: 2049, column: 27, scope: !10814)
!10820 = !DILocation(line: 2051, column: 23, scope: !10814)
!10821 = !DILocation(line: 2053, column: 13, scope: !10814)
!10822 = !DILocation(line: 2058, column: 22, scope: !10814)
!10823 = !DILocation(line: 2059, column: 13, scope: !10814)
!10824 = !DILocation(line: 2079, column: 13, scope: !10825)
!10825 = distinct !DILexicalBlock(scope: !10826, file: !1459, line: 2079, column: 13)
!10826 = distinct !DILexicalBlock(scope: !10827, file: !1459, line: 2079, column: 13)
!10827 = distinct !DILexicalBlock(scope: !10814, file: !1459, line: 2079, column: 13)
!10828 = !DILocation(line: 2083, column: 5, scope: !10805)
!10829 = distinct !DISubprogram(name: "SF_DAL_Init_Driver", scope: !1459, file: !1459, line: 2100, type: !10830, scopeLine: 2101, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !10832)
!10830 = !DISubroutineType(types: !10831)
!10831 = !{!1343, !9921, !1629, !61, !61}
!10832 = !{!10833, !10834, !10835, !10836, !10837}
!10833 = !DILocalVariable(name: "driver", arg: 1, scope: !10829, file: !1459, line: 2100, type: !9921)
!10834 = !DILocalVariable(name: "D", arg: 2, scope: !10829, file: !1459, line: 2100, type: !1629)
!10835 = !DILocalVariable(name: "baseaddr", arg: 3, scope: !10829, file: !1459, line: 2100, type: !61)
!10836 = !DILocalVariable(name: "parameter", arg: 4, scope: !10829, file: !1459, line: 2100, type: !61)
!10837 = !DILocalVariable(name: "result", scope: !10829, file: !1459, line: 2102, type: !1343)
!10838 = !DILocation(line: 0, scope: !10829)
!10839 = !DILocation(line: 2105, column: 16, scope: !10840)
!10840 = distinct !DILexicalBlock(scope: !10829, file: !1459, line: 2105, column: 9)
!10841 = !DILocation(line: 2105, column: 24, scope: !10840)
!10842 = !DILocation(line: 2109, column: 12, scope: !10843)
!10843 = distinct !DILexicalBlock(scope: !10829, file: !1459, line: 2109, column: 9)
!10844 = !DILocation(line: 2109, column: 16, scope: !10843)
!10845 = !DILocation(line: 2109, column: 24, scope: !10843)
!10846 = !DILocation(line: 2109, column: 30, scope: !10843)
!10847 = !DILocation(line: 2109, column: 40, scope: !10843)
!10848 = !DILocation(line: 2109, column: 9, scope: !10829)
!10849 = !DILocation(line: 2118, column: 19, scope: !10829)
!10850 = !DILocation(line: 2118, column: 8, scope: !10829)
!10851 = !DILocation(line: 2118, column: 17, scope: !10829)
!10852 = !DILocation(line: 2119, column: 23, scope: !10829)
!10853 = !DILocation(line: 2119, column: 8, scope: !10829)
!10854 = !DILocation(line: 2119, column: 21, scope: !10829)
!10855 = !DILocation(line: 2122, column: 5, scope: !10829)
!10856 = !DILocation(line: 2125, column: 8, scope: !10829)
!10857 = !DILocation(line: 2125, column: 13, scope: !10829)
!10858 = !DILocation(line: 2125, column: 24, scope: !10829)
!10859 = !DILocation(line: 2126, column: 26, scope: !10829)
!10860 = !DILocation(line: 2126, column: 5, scope: !10829)
!10861 = !DILocation(line: 2128, column: 9, scope: !10862)
!10862 = distinct !DILexicalBlock(scope: !10829, file: !1459, line: 2128, column: 9)
!10863 = !DILocation(line: 2128, column: 31, scope: !10862)
!10864 = !DILocation(line: 2128, column: 60, scope: !10862)
!10865 = !DILocation(line: 2128, column: 9, scope: !10829)
!10866 = !DILocation(line: 2129, column: 12, scope: !10867)
!10867 = distinct !DILexicalBlock(scope: !10862, file: !1459, line: 2128, column: 110)
!10868 = !DILocation(line: 2129, column: 17, scope: !10867)
!10869 = !DILocation(line: 2129, column: 28, scope: !10867)
!10870 = !DILocation(line: 2130, column: 9, scope: !10867)
!10871 = !DILocation(line: 2131, column: 5, scope: !10867)
!10872 = !DILocation(line: 2134, column: 14, scope: !10829)
!10873 = !DILocation(line: 2136, column: 5, scope: !10829)
!10874 = !DILocation(line: 2137, column: 1, scope: !10829)
!10875 = distinct !DISubprogram(name: "SF_DAL_Dev_ReadID", scope: !1459, file: !1459, line: 3387, type: !10876, scopeLine: 3388, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !10878)
!10876 = !DISubroutineType(types: !10877)
!10877 = !{null, !1629, !872}
!10878 = !{!10879, !10880, !10881}
!10879 = !DILocalVariable(name: "D", arg: 1, scope: !10875, file: !1459, line: 3387, type: !1629)
!10880 = !DILocalVariable(name: "id", arg: 2, scope: !10875, file: !1459, line: 3387, type: !872)
!10881 = !DILocalVariable(name: "cmd", scope: !10875, file: !1459, line: 3389, type: !74)
!10882 = !DILocation(line: 0, scope: !10875)
!10883 = !DILocation(line: 3389, column: 5, scope: !10875)
!10884 = !DILocation(line: 3405, column: 9, scope: !10885)
!10885 = distinct !DILexicalBlock(scope: !10875, file: !1459, line: 3405, column: 9)
!10886 = !DILocation(line: 3405, column: 21, scope: !10885)
!10887 = !DILocation(line: 0, scope: !10885)
!10888 = !DILocation(line: 3405, column: 9, scope: !10875)
!10889 = !DILocation(line: 3411, column: 31, scope: !10875)
!10890 = !DILocation(line: 3411, column: 5, scope: !10875)
!10891 = !DILocation(line: 3412, column: 1, scope: !10875)
!10892 = distinct !DISubprogram(name: "SF_DAL_Dev_Command_Ext", scope: !1459, file: !1459, line: 3585, type: !10893, scopeLine: 3586, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1458, retainedNodes: !10895)
!10893 = !DISubroutineType(types: !10894)
!10894 = !{null, !8690, !872, !872, !8690, !8690}
!10895 = !{!10896, !10897, !10898, !10899, !10900, !10901}
!10896 = !DILocalVariable(name: "CS", arg: 1, scope: !10892, file: !1459, line: 3585, type: !8690)
!10897 = !DILocalVariable(name: "cmd", arg: 2, scope: !10892, file: !1459, line: 3585, type: !872)
!10898 = !DILocalVariable(name: "data", arg: 3, scope: !10892, file: !1459, line: 3585, type: !872)
!10899 = !DILocalVariable(name: "outl", arg: 4, scope: !10892, file: !1459, line: 3585, type: !8690)
!10900 = !DILocalVariable(name: "inl", arg: 5, scope: !10892, file: !1459, line: 3585, type: !8690)
!10901 = !DILocalVariable(name: "savedMask", scope: !10892, file: !1459, line: 3587, type: !61)
!10902 = !DILocation(line: 0, scope: !10892)
!10903 = !DILocation(line: 3589, column: 17, scope: !10892)
!10904 = !DILocation(line: 3590, column: 5, scope: !10892)
!10905 = !DILocation(line: 3591, column: 5, scope: !10892)
!10906 = !DILocation(line: 3593, column: 1, scope: !10892)
!10907 = distinct !DISubprogram(name: "CMEM_CheckValidDeviceID", scope: !1782, file: !1782, line: 110, type: !9168, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1781, retainedNodes: !10908)
!10908 = !{!10909, !10910, !10911, !10912}
!10909 = !DILocalVariable(name: "id", arg: 1, scope: !10907, file: !1782, line: 110, type: !872)
!10910 = !DILocalVariable(name: "i", scope: !10907, file: !1782, line: 114, type: !1343)
!10911 = !DILocalVariable(name: "j", scope: !10907, file: !1782, line: 114, type: !1343)
!10912 = !DILocalVariable(name: "id_list", scope: !10907, file: !1782, line: 115, type: !10913)
!10913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10914, size: 32)
!10914 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1860)
!10915 = !DILocation(line: 0, scope: !10907)
!10916 = !DILocation(line: 119, column: 5, scope: !10917)
!10917 = distinct !DILexicalBlock(scope: !10907, file: !1782, line: 119, column: 5)
!10918 = !DILocation(line: 119, column: 46, scope: !10919)
!10919 = distinct !DILexicalBlock(scope: !10917, file: !1782, line: 119, column: 5)
!10920 = !DILocation(line: 119, column: 19, scope: !10919)
!10921 = distinct !{!10921, !10916, !10922}
!10922 = !DILocation(line: 131, column: 5, scope: !10917)
!10923 = !DILocation(line: 121, column: 23, scope: !10924)
!10924 = distinct !DILexicalBlock(scope: !10925, file: !1782, line: 121, column: 9)
!10925 = distinct !DILexicalBlock(scope: !10926, file: !1782, line: 121, column: 9)
!10926 = distinct !DILexicalBlock(scope: !10919, file: !1782, line: 119, column: 50)
!10927 = !DILocation(line: 121, column: 9, scope: !10925)
!10928 = !DILocation(line: 122, column: 17, scope: !10929)
!10929 = distinct !DILexicalBlock(scope: !10930, file: !1782, line: 122, column: 17)
!10930 = distinct !DILexicalBlock(scope: !10924, file: !1782, line: 121, column: 51)
!10931 = !DILocation(line: 122, column: 37, scope: !10929)
!10932 = !DILocation(line: 122, column: 34, scope: !10929)
!10933 = !DILocation(line: 122, column: 17, scope: !10930)
!10934 = !DILocation(line: 121, column: 47, scope: !10924)
!10935 = distinct !{!10935, !10927, !10936}
!10936 = !DILocation(line: 125, column: 9, scope: !10925)
!10937 = !DILocation(line: 0, scope: !10925)
!10938 = !DILocation(line: 127, column: 15, scope: !10939)
!10939 = distinct !DILexicalBlock(scope: !10926, file: !1782, line: 127, column: 13)
!10940 = !DILocation(line: 127, column: 13, scope: !10926)
!10941 = !DILocation(line: 134, column: 1, scope: !10907)
!10942 = distinct !DISubprogram(name: "CMEM_Index", scope: !1782, file: !1782, line: 153, type: !9323, scopeLine: 155, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1781, retainedNodes: !10943)
!10943 = !{!10944, !10945, !10946, !10953}
!10944 = !DILocalVariable(name: "i", scope: !10942, file: !1782, line: 156, type: !1343)
!10945 = !DILocalVariable(name: "j", scope: !10942, file: !1782, line: 156, type: !1343)
!10946 = !DILocalVariable(name: "id", scope: !10942, file: !1782, line: 157, type: !10947)
!10947 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMFlashID", file: !1853, line: 89, baseType: !10948)
!10948 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1853, line: 86, size: 64, elements: !10949)
!10949 = !{!10950, !10951}
!10950 = !DIDerivedType(tag: DW_TAG_member, name: "NAND", scope: !10948, file: !1853, line: 87, baseType: !1866, size: 64)
!10951 = !DIDerivedType(tag: DW_TAG_member, name: "NOR", scope: !10948, file: !1853, line: 88, baseType: !10952, size: 64)
!10952 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1041, size: 64, elements: !529)
!10953 = !DILocalVariable(name: "id_list", scope: !10942, file: !1782, line: 158, type: !10913)
!10954 = !DILocation(line: 157, column: 5, scope: !10942)
!10955 = !DILocation(line: 157, column: 17, scope: !10942)
!10956 = !DILocation(line: 0, scope: !10942)
!10957 = !DILocation(line: 161, column: 9, scope: !10958)
!10958 = distinct !DILexicalBlock(scope: !10942, file: !1782, line: 161, column: 9)
!10959 = !DILocation(line: 161, column: 20, scope: !10958)
!10960 = !DILocation(line: 161, column: 9, scope: !10942)
!10961 = !DILocation(line: 172, column: 58, scope: !10942)
!10962 = !DILocation(line: 172, column: 5, scope: !10942)
!10963 = !DILocation(line: 178, column: 5, scope: !10964)
!10964 = distinct !DILexicalBlock(scope: !10942, file: !1782, line: 178, column: 5)
!10965 = !DILocation(line: 180, column: 23, scope: !10966)
!10966 = distinct !DILexicalBlock(scope: !10967, file: !1782, line: 180, column: 9)
!10967 = distinct !DILexicalBlock(scope: !10968, file: !1782, line: 180, column: 9)
!10968 = distinct !DILexicalBlock(scope: !10969, file: !1782, line: 178, column: 53)
!10969 = distinct !DILexicalBlock(scope: !10964, file: !1782, line: 178, column: 5)
!10970 = !DILocation(line: 180, column: 9, scope: !10967)
!10971 = !DILocation(line: 181, column: 17, scope: !10972)
!10972 = distinct !DILexicalBlock(scope: !10973, file: !1782, line: 181, column: 17)
!10973 = distinct !DILexicalBlock(scope: !10966, file: !1782, line: 180, column: 51)
!10974 = !DILocation(line: 181, column: 37, scope: !10972)
!10975 = !DILocation(line: 181, column: 34, scope: !10972)
!10976 = !DILocation(line: 181, column: 17, scope: !10973)
!10977 = !DILocation(line: 180, column: 47, scope: !10966)
!10978 = distinct !{!10978, !10970, !10979}
!10979 = !DILocation(line: 184, column: 9, scope: !10967)
!10980 = !DILocation(line: 0, scope: !10967)
!10981 = !DILocation(line: 186, column: 15, scope: !10982)
!10982 = distinct !DILexicalBlock(scope: !10968, file: !1782, line: 186, column: 13)
!10983 = !DILocation(line: 186, column: 13, scope: !10968)
!10984 = !DILocation(line: 188, column: 26, scope: !10985)
!10985 = distinct !DILexicalBlock(scope: !10982, file: !1782, line: 186, column: 41)
!10986 = !DILocation(line: 188, column: 24, scope: !10985)
!10987 = !DILocation(line: 189, column: 13, scope: !10985)
!10988 = !DILocation(line: 178, column: 46, scope: !10969)
!10989 = !DILocation(line: 178, column: 19, scope: !10969)
!10990 = distinct !{!10990, !10963, !10991}
!10991 = !DILocation(line: 191, column: 5, scope: !10964)
!10992 = !DILocation(line: 222, column: 12, scope: !10942)
!10993 = !DILocation(line: 223, column: 1, scope: !10942)
!10994 = distinct !DISubprogram(name: "CMEM_GetIDEntry", scope: !1782, file: !1782, line: 240, type: !10995, scopeLine: 241, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1781, retainedNodes: !10997)
!10995 = !DISubroutineType(types: !10996)
!10996 = !{!10913, !61}
!10997 = !{!10998}
!10998 = !DILocalVariable(name: "index", arg: 1, scope: !10994, file: !1782, line: 240, type: !61)
!10999 = !DILocation(line: 0, scope: !10994)
!11000 = !DILocation(line: 242, column: 13, scope: !10994)
!11001 = !DILocation(line: 242, column: 5, scope: !10994)
!11002 = distinct !DISubprogram(name: "CMEM_EMIINIT_ReadID", scope: !1782, file: !1782, line: 254, type: !11003, scopeLine: 255, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1781, retainedNodes: !11005)
!11003 = !DISubroutineType(types: !11004)
!11004 = !{null, !8690, !65, !1431}
!11005 = !{!11006, !11007, !11008, !11009, !11011, !11012}
!11006 = !DILocalVariable(name: "CS", arg: 1, scope: !11002, file: !1782, line: 254, type: !8690)
!11007 = !DILocalVariable(name: "BaseAddr", arg: 2, scope: !11002, file: !1782, line: 254, type: !65)
!11008 = !DILocalVariable(name: "flashid", arg: 3, scope: !11002, file: !1782, line: 254, type: !1431)
!11009 = !DILocalVariable(name: "cmd", scope: !11010, file: !1782, line: 258, type: !74)
!11010 = distinct !DILexicalBlock(scope: !11002, file: !1782, line: 257, column: 5)
!11011 = !DILocalVariable(name: "id", scope: !11010, file: !1782, line: 258, type: !1719)
!11012 = !DILocalVariable(name: "i", scope: !11010, file: !1782, line: 258, type: !74)
!11013 = !DILocation(line: 0, scope: !11002)
!11014 = !DILocation(line: 258, column: 9, scope: !11010)
!11015 = !DILocation(line: 258, column: 22, scope: !11010)
!11016 = !DILocation(line: 0, scope: !11010)
!11017 = !DILocation(line: 260, column: 13, scope: !11010)
!11018 = !DILocation(line: 261, column: 9, scope: !11010)
!11019 = !DILocation(line: 263, column: 13, scope: !11020)
!11020 = distinct !DILexicalBlock(scope: !11010, file: !1782, line: 263, column: 13)
!11021 = !DILocation(line: 263, column: 27, scope: !11020)
!11022 = !DILocation(line: 263, column: 48, scope: !11020)
!11023 = !DILocation(line: 263, column: 13, scope: !11010)
!11024 = !DILocation(line: 264, column: 17, scope: !11025)
!11025 = distinct !DILexicalBlock(scope: !11020, file: !1782, line: 263, column: 95)
!11026 = !DILocation(line: 265, column: 13, scope: !11025)
!11027 = !DILocation(line: 266, column: 9, scope: !11025)
!11028 = !DILocation(line: 268, column: 9, scope: !11029)
!11029 = distinct !DILexicalBlock(scope: !11010, file: !1782, line: 268, column: 9)
!11030 = !DILocation(line: 269, column: 26, scope: !11031)
!11031 = distinct !DILexicalBlock(scope: !11032, file: !1782, line: 268, column: 50)
!11032 = distinct !DILexicalBlock(scope: !11029, file: !1782, line: 268, column: 9)
!11033 = !DILocation(line: 269, column: 13, scope: !11031)
!11034 = !DILocation(line: 269, column: 24, scope: !11031)
!11035 = !DILocation(line: 268, column: 46, scope: !11032)
!11036 = !DILocation(line: 268, column: 23, scope: !11032)
!11037 = distinct !{!11037, !11028, !11038}
!11038 = !DILocation(line: 270, column: 9, scope: !11029)
!11039 = !DILocation(line: 271, column: 5, scope: !11002)
!11040 = !DILocation(line: 272, column: 5, scope: !11002)
!11041 = distinct !DISubprogram(name: "CMEM_EMIINIT_CheckValidDeviceID", scope: !1782, file: !1782, line: 285, type: !9168, scopeLine: 286, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1781, retainedNodes: !11042)
!11042 = !{!11043, !11044, !11045, !11046}
!11043 = !DILocalVariable(name: "id", arg: 1, scope: !11041, file: !1782, line: 285, type: !872)
!11044 = !DILocalVariable(name: "i", scope: !11041, file: !1782, line: 289, type: !1343)
!11045 = !DILocalVariable(name: "j", scope: !11041, file: !1782, line: 289, type: !1343)
!11046 = !DILocalVariable(name: "id_list", scope: !11041, file: !1782, line: 290, type: !10913)
!11047 = !DILocation(line: 0, scope: !11041)
!11048 = !DILocation(line: 294, column: 5, scope: !11049)
!11049 = distinct !DILexicalBlock(scope: !11041, file: !1782, line: 294, column: 5)
!11050 = !DILocation(line: 294, column: 46, scope: !11051)
!11051 = distinct !DILexicalBlock(scope: !11049, file: !1782, line: 294, column: 5)
!11052 = !DILocation(line: 294, column: 19, scope: !11051)
!11053 = distinct !{!11053, !11048, !11054}
!11054 = !DILocation(line: 306, column: 5, scope: !11049)
!11055 = !DILocation(line: 296, column: 23, scope: !11056)
!11056 = distinct !DILexicalBlock(scope: !11057, file: !1782, line: 296, column: 9)
!11057 = distinct !DILexicalBlock(scope: !11058, file: !1782, line: 296, column: 9)
!11058 = distinct !DILexicalBlock(scope: !11051, file: !1782, line: 294, column: 53)
!11059 = !DILocation(line: 296, column: 9, scope: !11057)
!11060 = !DILocation(line: 297, column: 17, scope: !11061)
!11061 = distinct !DILexicalBlock(scope: !11062, file: !1782, line: 297, column: 17)
!11062 = distinct !DILexicalBlock(scope: !11056, file: !1782, line: 296, column: 51)
!11063 = !DILocation(line: 297, column: 37, scope: !11061)
!11064 = !DILocation(line: 297, column: 34, scope: !11061)
!11065 = !DILocation(line: 297, column: 17, scope: !11062)
!11066 = !DILocation(line: 296, column: 47, scope: !11056)
!11067 = distinct !{!11067, !11059, !11068}
!11068 = !DILocation(line: 300, column: 9, scope: !11057)
!11069 = !DILocation(line: 0, scope: !11057)
!11070 = !DILocation(line: 302, column: 15, scope: !11071)
!11071 = distinct !DILexicalBlock(scope: !11058, file: !1782, line: 302, column: 13)
!11072 = !DILocation(line: 302, column: 13, scope: !11058)
!11073 = !DILocation(line: 310, column: 1, scope: !11041)
!11074 = distinct !DISubprogram(name: "CMEM_EMIINIT_Index", scope: !1782, file: !1782, line: 328, type: !9323, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1781, retainedNodes: !11075)
!11075 = !{!11076, !11077, !11078, !11079}
!11076 = !DILocalVariable(name: "i", scope: !11074, file: !1782, line: 331, type: !1343)
!11077 = !DILocalVariable(name: "j", scope: !11074, file: !1782, line: 331, type: !1343)
!11078 = !DILocalVariable(name: "id", scope: !11074, file: !1782, line: 332, type: !10947)
!11079 = !DILocalVariable(name: "id_list", scope: !11074, file: !1782, line: 333, type: !10913)
!11080 = !DILocation(line: 332, column: 5, scope: !11074)
!11081 = !DILocation(line: 332, column: 17, scope: !11074)
!11082 = !DILocation(line: 0, scope: !11074)
!11083 = !DILocation(line: 336, column: 9, scope: !11084)
!11084 = distinct !DILexicalBlock(scope: !11074, file: !1782, line: 336, column: 9)
!11085 = !DILocation(line: 336, column: 28, scope: !11084)
!11086 = !DILocation(line: 336, column: 9, scope: !11074)
!11087 = !DILocation(line: 344, column: 60, scope: !11074)
!11088 = !DILocation(line: 344, column: 5, scope: !11074)
!11089 = !DILocation(line: 350, column: 5, scope: !11090)
!11090 = distinct !DILexicalBlock(scope: !11074, file: !1782, line: 350, column: 5)
!11091 = !DILocation(line: 352, column: 23, scope: !11092)
!11092 = distinct !DILexicalBlock(scope: !11093, file: !1782, line: 352, column: 9)
!11093 = distinct !DILexicalBlock(scope: !11094, file: !1782, line: 352, column: 9)
!11094 = distinct !DILexicalBlock(scope: !11095, file: !1782, line: 350, column: 53)
!11095 = distinct !DILexicalBlock(scope: !11090, file: !1782, line: 350, column: 5)
!11096 = !DILocation(line: 352, column: 9, scope: !11093)
!11097 = !DILocation(line: 353, column: 17, scope: !11098)
!11098 = distinct !DILexicalBlock(scope: !11099, file: !1782, line: 353, column: 17)
!11099 = distinct !DILexicalBlock(scope: !11092, file: !1782, line: 352, column: 51)
!11100 = !DILocation(line: 353, column: 37, scope: !11098)
!11101 = !DILocation(line: 353, column: 34, scope: !11098)
!11102 = !DILocation(line: 353, column: 17, scope: !11099)
!11103 = !DILocation(line: 352, column: 47, scope: !11092)
!11104 = distinct !{!11104, !11096, !11105}
!11105 = !DILocation(line: 356, column: 9, scope: !11093)
!11106 = !DILocation(line: 0, scope: !11093)
!11107 = !DILocation(line: 358, column: 15, scope: !11108)
!11108 = distinct !DILexicalBlock(scope: !11094, file: !1782, line: 358, column: 13)
!11109 = !DILocation(line: 358, column: 13, scope: !11094)
!11110 = !DILocation(line: 360, column: 34, scope: !11111)
!11111 = distinct !DILexicalBlock(scope: !11108, file: !1782, line: 358, column: 41)
!11112 = !DILocation(line: 360, column: 32, scope: !11111)
!11113 = !DILocation(line: 361, column: 13, scope: !11111)
!11114 = !DILocation(line: 350, column: 46, scope: !11095)
!11115 = !DILocation(line: 350, column: 19, scope: !11095)
!11116 = distinct !{!11116, !11089, !11117}
!11117 = !DILocation(line: 363, column: 5, scope: !11090)
!11118 = !DILocation(line: 364, column: 12, scope: !11074)
!11119 = !DILocation(line: 365, column: 1, scope: !11074)
!11120 = distinct !DISubprogram(name: "NOR_ReadID", scope: !3273, file: !3273, line: 64, type: !11121, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3272, retainedNodes: !11127)
!11121 = !DISubroutineType(types: !11122)
!11122 = !{null, !8690, !11123, !1431}
!11123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11124, size: 32)
!11124 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !11125)
!11125 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_CELL", file: !11126, line: 158, baseType: !1041)
!11126 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_cfi_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/powerkey/GCC")
!11127 = !{!11128, !11129, !11130, !11131, !11132, !11134, !11135}
!11128 = !DILocalVariable(name: "CS", arg: 1, scope: !11120, file: !3273, line: 64, type: !8690)
!11129 = !DILocalVariable(name: "BaseAddr", arg: 2, scope: !11120, file: !3273, line: 64, type: !11123)
!11130 = !DILocalVariable(name: "flashid", arg: 3, scope: !11120, file: !3273, line: 64, type: !1431)
!11131 = !DILocalVariable(name: "savedMask", scope: !11120, file: !3273, line: 66, type: !61)
!11132 = !DILocalVariable(name: "cmd", scope: !11133, file: !3273, line: 70, type: !74)
!11133 = distinct !DILexicalBlock(scope: !11120, file: !3273, line: 69, column: 5)
!11134 = !DILocalVariable(name: "id", scope: !11133, file: !3273, line: 70, type: !1719)
!11135 = !DILocalVariable(name: "i", scope: !11133, file: !3273, line: 70, type: !74)
!11136 = !DILocation(line: 0, scope: !11120)
!11137 = !DILocation(line: 70, column: 9, scope: !11133)
!11138 = !DILocation(line: 70, column: 22, scope: !11133)
!11139 = !DILocation(line: 0, scope: !11133)
!11140 = !DILocation(line: 72, column: 13, scope: !11133)
!11141 = !DILocation(line: 73, column: 21, scope: !11133)
!11142 = !DILocation(line: 74, column: 9, scope: !11133)
!11143 = !DILocation(line: 75, column: 9, scope: !11133)
!11144 = !DILocation(line: 77, column: 13, scope: !11145)
!11145 = distinct !DILexicalBlock(scope: !11133, file: !3273, line: 77, column: 13)
!11146 = !DILocation(line: 77, column: 27, scope: !11145)
!11147 = !DILocation(line: 77, column: 48, scope: !11145)
!11148 = !DILocation(line: 77, column: 13, scope: !11133)
!11149 = !DILocation(line: 78, column: 17, scope: !11150)
!11150 = distinct !DILexicalBlock(scope: !11145, file: !3273, line: 77, column: 87)
!11151 = !DILocation(line: 79, column: 25, scope: !11150)
!11152 = !DILocation(line: 80, column: 13, scope: !11150)
!11153 = !DILocation(line: 81, column: 13, scope: !11150)
!11154 = !DILocation(line: 82, column: 9, scope: !11150)
!11155 = !DILocation(line: 84, column: 9, scope: !11156)
!11156 = distinct !DILexicalBlock(scope: !11133, file: !3273, line: 84, column: 9)
!11157 = !DILocation(line: 85, column: 26, scope: !11158)
!11158 = distinct !DILexicalBlock(scope: !11159, file: !3273, line: 84, column: 50)
!11159 = distinct !DILexicalBlock(scope: !11156, file: !3273, line: 84, column: 9)
!11160 = !DILocation(line: 85, column: 13, scope: !11158)
!11161 = !DILocation(line: 85, column: 24, scope: !11158)
!11162 = !DILocation(line: 84, column: 46, scope: !11159)
!11163 = !DILocation(line: 84, column: 23, scope: !11159)
!11164 = distinct !{!11164, !11155, !11165}
!11165 = !DILocation(line: 86, column: 9, scope: !11156)
!11166 = !DILocation(line: 87, column: 5, scope: !11120)
!11167 = !DILocation(line: 89, column: 1, scope: !11120)
!11168 = distinct !DISubprogram(name: "custom_get_NORFLASH_ROMSpace", scope: !1870, file: !1870, line: 248, type: !4174, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1869, retainedNodes: !262)
!11169 = !DILocation(line: 250, column: 5, scope: !11168)
!11170 = distinct !DISubprogram(name: "custom_get_NORFLASH_Size", scope: !1870, file: !1870, line: 270, type: !4174, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1869, retainedNodes: !262)
!11171 = !DILocation(line: 272, column: 5, scope: !11170)
!11172 = distinct !DISubprogram(name: "Initialize_FDD_tables", scope: !1870, file: !1870, line: 294, type: !260, scopeLine: 295, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1869, retainedNodes: !262)
!11173 = !DILocation(line: 296, column: 5, scope: !11172)
!11174 = !DILocation(line: 297, column: 5, scope: !11172)
!11175 = distinct !DISubprogram(name: "nor_sweep_device", scope: !1870, file: !1870, line: 304, type: !260, scopeLine: 305, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1869, retainedNodes: !262)
!11176 = !DILocation(line: 309, column: 5, scope: !11175)
!11177 = distinct !DISubprogram(name: "nor_manual_reclaim", scope: !1870, file: !1870, line: 312, type: !260, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1869, retainedNodes: !262)
!11178 = !DILocation(line: 317, column: 5, scope: !11177)
!11179 = distinct !DISubprogram(name: "custom_get_fat_addr", scope: !1870, file: !1870, line: 334, type: !4174, scopeLine: 335, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1869, retainedNodes: !262)
!11180 = !DILocation(line: 336, column: 5, scope: !11179)
!11181 = distinct !DISubprogram(name: "custom_get_fat_len", scope: !1870, file: !1870, line: 353, type: !4174, scopeLine: 354, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1869, retainedNodes: !262)
!11182 = !DILocation(line: 355, column: 5, scope: !11181)
!11183 = distinct !DISubprogram(name: "Custom_NOR_Init", scope: !1870, file: !1870, line: 374, type: !260, scopeLine: 375, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1869, retainedNodes: !262)
!11184 = !DILocation(line: 376, column: 5, scope: !11183)
!11185 = !DILocation(line: 377, column: 1, scope: !11183)
!11186 = distinct !DISubprogram(name: "custom_get_NORFLASH_Base", scope: !1870, file: !1870, line: 395, type: !4174, scopeLine: 396, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1869, retainedNodes: !262)
!11187 = !DILocation(line: 397, column: 5, scope: !11186)
!11188 = distinct !DISubprogram(name: "custom_get_FLASH_Size", scope: !1870, file: !1870, line: 416, type: !4174, scopeLine: 417, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1869, retainedNodes: !262)
!11189 = !DILocation(line: 418, column: 5, scope: !11188)
!11190 = distinct !DISubprogram(name: "INT_RetrieveFlashBaseAddr", scope: !1879, file: !1879, line: 254, type: !4174, scopeLine: 255, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1878, retainedNodes: !262)
!11191 = !DILocation(line: 256, column: 32, scope: !11190)
!11192 = !DILocation(line: 257, column: 5, scope: !11190)
!11193 = distinct !DISubprogram(name: "CMEM_Init_NOR_MTD_Common", scope: !1879, file: !1879, line: 269, type: !9323, scopeLine: 270, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1878, retainedNodes: !262)
!11194 = !DILocation(line: 275, column: 24, scope: !11193)
!11195 = !DILocation(line: 278, column: 24, scope: !11193)
!11196 = !DILocation(line: 278, column: 33, scope: !11193)
!11197 = !DILocation(line: 278, column: 49, scope: !11193)
!11198 = !DILocation(line: 278, column: 22, scope: !11193)
!11199 = !DILocation(line: 281, column: 5, scope: !11193)
!11200 = !DILocation(line: 283, column: 34, scope: !11193)
!11201 = !DILocation(line: 283, column: 23, scope: !11193)
!11202 = !DILocation(line: 286, column: 25, scope: !11193)
!11203 = !DILocation(line: 321, column: 5, scope: !11193)
!11204 = distinct !DISubprogram(name: "CMEM_Init_NOR_MTD_SF", scope: !1879, file: !1879, line: 332, type: !9323, scopeLine: 333, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1878, retainedNodes: !11205)
!11205 = !{!11206}
!11206 = !DILocalVariable(name: "result", scope: !11204, file: !1879, line: 334, type: !1343)
!11207 = !DILocation(line: 340, column: 30, scope: !11204)
!11208 = !DILocation(line: 343, column: 24, scope: !11204)
!11209 = !DILocation(line: 344, column: 18, scope: !11204)
!11210 = !DILocation(line: 348, column: 17, scope: !11204)
!11211 = !DILocation(line: 353, column: 19, scope: !11204)
!11212 = !DILocation(line: 354, column: 18, scope: !11204)
!11213 = !DILocation(line: 354, column: 27, scope: !11204)
!11214 = !DILocation(line: 354, column: 43, scope: !11204)
!11215 = !DILocation(line: 350, column: 14, scope: !11204)
!11216 = !DILocation(line: 0, scope: !11204)
!11217 = !DILocation(line: 356, column: 16, scope: !11218)
!11218 = distinct !DILexicalBlock(scope: !11204, file: !1879, line: 356, column: 9)
!11219 = !DILocation(line: 395, column: 1, scope: !11204)
!11220 = distinct !DISubprogram(name: "EMINIT_CMEM_GET_NOR_FLASH_COUNT", scope: !1879, file: !1879, line: 406, type: !11221, scopeLine: 407, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1878, retainedNodes: !262)
!11221 = !DISubroutineType(types: !3206)
!11222 = !DILocation(line: 408, column: 5, scope: !11220)
!11223 = distinct !DISubprogram(name: "EMINIT_CMEM_GET_NOR_FLASH_SIZE", scope: !1879, file: !1879, line: 420, type: !11224, scopeLine: 421, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1878, retainedNodes: !11226)
!11224 = !DISubroutineType(types: !11225)
!11225 = !{!61, !74}
!11226 = !{!11227, !11228, !11229}
!11227 = !DILocalVariable(name: "CS", arg: 1, scope: !11223, file: !1879, line: 420, type: !74)
!11228 = !DILocalVariable(name: "index", scope: !11223, file: !1879, line: 422, type: !61)
!11229 = !DILocalVariable(name: "list", scope: !11223, file: !1879, line: 423, type: !2196)
!11230 = !DILocation(line: 0, scope: !11223)
!11231 = !DILocation(line: 427, column: 13, scope: !11223)
!11232 = !DILocation(line: 430, column: 34, scope: !11223)
!11233 = !DILocation(line: 430, column: 5, scope: !11223)
!11234 = distinct !DISubprogram(name: "CMEM_BlockSize_Internal", scope: !1879, file: !1879, line: 442, type: !11235, scopeLine: 443, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1878, retainedNodes: !11237)
!11235 = !DISubroutineType(types: !11236)
!11236 = !{!61, !61, !2068}
!11237 = !{!11238, !11239, !11240}
!11238 = !DILocalVariable(name: "address", arg: 1, scope: !11234, file: !1879, line: 442, type: !61)
!11239 = !DILocalVariable(name: "blocklayout", arg: 2, scope: !11234, file: !1879, line: 442, type: !2068)
!11240 = !DILocalVariable(name: "i", scope: !11234, file: !1879, line: 444, type: !1041)
!11241 = !DILocation(line: 0, scope: !11234)
!11242 = !DILocation(line: 446, column: 23, scope: !11234)
!11243 = !DILocation(line: 448, column: 36, scope: !11244)
!11244 = distinct !DILexicalBlock(scope: !11245, file: !1879, line: 448, column: 5)
!11245 = distinct !DILexicalBlock(scope: !11234, file: !1879, line: 448, column: 5)
!11246 = !DILocation(line: 448, column: 41, scope: !11244)
!11247 = !DILocation(line: 448, column: 5, scope: !11245)
!11248 = !DILocation(line: 449, column: 39, scope: !11249)
!11249 = distinct !DILexicalBlock(scope: !11250, file: !1879, line: 449, column: 13)
!11250 = distinct !DILexicalBlock(scope: !11244, file: !1879, line: 448, column: 54)
!11251 = !DILocation(line: 449, column: 21, scope: !11249)
!11252 = !DILocation(line: 449, column: 46, scope: !11249)
!11253 = !DILocation(line: 450, column: 46, scope: !11249)
!11254 = !DILocation(line: 450, column: 25, scope: !11249)
!11255 = !DILocation(line: 449, column: 13, scope: !11250)
!11256 = !DILocation(line: 448, column: 48, scope: !11244)
!11257 = !DILocation(line: 448, column: 29, scope: !11244)
!11258 = !DILocation(line: 448, column: 31, scope: !11244)
!11259 = distinct !{!11259, !11247, !11260}
!11260 = !DILocation(line: 453, column: 5, scope: !11245)
!11261 = !DILocation(line: 454, column: 27, scope: !11234)
!11262 = !DILocation(line: 454, column: 5, scope: !11234)
!11263 = distinct !DISubprogram(name: "CMEM_BlockSize", scope: !1879, file: !1879, line: 462, type: !3922, scopeLine: 463, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1878, retainedNodes: !11264)
!11264 = !{!11265}
!11265 = !DILocalVariable(name: "address", arg: 1, scope: !11263, file: !1879, line: 462, type: !61)
!11266 = !DILocation(line: 0, scope: !11263)
!11267 = !DILocation(line: 464, column: 45, scope: !11263)
!11268 = !DILocation(line: 464, column: 12, scope: !11263)
!11269 = !DILocation(line: 464, column: 5, scope: !11263)
!11270 = distinct !DISubprogram(name: "EMIINIT_CMEM_BlockSize", scope: !1879, file: !1879, line: 487, type: !3922, scopeLine: 488, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1878, retainedNodes: !11271)
!11271 = !{!11272, !11273, !11274}
!11272 = !DILocalVariable(name: "address", arg: 1, scope: !11270, file: !1879, line: 487, type: !61)
!11273 = !DILocalVariable(name: "index", scope: !11270, file: !1879, line: 490, type: !61)
!11274 = !DILocalVariable(name: "list", scope: !11270, file: !1879, line: 491, type: !2196)
!11275 = !DILocation(line: 0, scope: !11270)
!11276 = !DILocation(line: 490, column: 22, scope: !11270)
!11277 = !DILocation(line: 495, column: 45, scope: !11270)
!11278 = !DILocation(line: 495, column: 12, scope: !11270)
!11279 = !DILocation(line: 495, column: 5, scope: !11270)
!11280 = distinct !DISubprogram(name: "NOR_Get_FlashSizeFromBankInfo", scope: !1879, file: !1879, line: 517, type: !11281, scopeLine: 518, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1878, retainedNodes: !11285)
!11281 = !DISubroutineType(types: !11282)
!11282 = !{!1343, !11283}
!11283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11284, size: 32)
!11284 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2082)
!11285 = !{!11286, !11287, !11288}
!11286 = !DILocalVariable(name: "bankinfo", arg: 1, scope: !11280, file: !1879, line: 517, type: !11283)
!11287 = !DILocalVariable(name: "result", scope: !11280, file: !1879, line: 519, type: !61)
!11288 = !DILocalVariable(name: "i", scope: !11280, file: !1879, line: 519, type: !61)
!11289 = !DILocation(line: 0, scope: !11280)
!11290 = !DILocation(line: 522, column: 29, scope: !11291)
!11291 = distinct !DILexicalBlock(scope: !11292, file: !1879, line: 522, column: 5)
!11292 = distinct !DILexicalBlock(scope: !11280, file: !1879, line: 522, column: 5)
!11293 = !DILocation(line: 522, column: 38, scope: !11291)
!11294 = !DILocation(line: 522, column: 5, scope: !11292)
!11295 = !DILocation(line: 523, column: 31, scope: !11296)
!11296 = distinct !DILexicalBlock(scope: !11291, file: !1879, line: 522, column: 51)
!11297 = !DILocation(line: 523, column: 37, scope: !11296)
!11298 = !DILocation(line: 523, column: 16, scope: !11296)
!11299 = !DILocation(line: 522, column: 45, scope: !11291)
!11300 = distinct !{!11300, !11294, !11301}
!11301 = !DILocation(line: 524, column: 5, scope: !11292)
!11302 = !DILocation(line: 525, column: 5, scope: !11280)
!11303 = distinct !DISubprogram(name: "CMEM_NOR_Construct_RegionInfo_Internal", scope: !1879, file: !1879, line: 535, type: !11304, scopeLine: 540, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1878, retainedNodes: !11306)
!11304 = !DISubroutineType(types: !11305)
!11305 = !{!61, !61, !61, !1894, !2068}
!11306 = !{!11307, !11308, !11309, !11310, !11311, !11312, !11313, !11314, !11315}
!11307 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !11303, file: !1879, line: 536, type: !61)
!11308 = !DILocalVariable(name: "length", arg: 2, scope: !11303, file: !1879, line: 537, type: !61)
!11309 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !11303, file: !1879, line: 538, type: !1894)
!11310 = !DILocalVariable(name: "blocklayout", arg: 4, scope: !11303, file: !1879, line: 539, type: !2068)
!11311 = !DILocalVariable(name: "addr", scope: !11303, file: !1879, line: 541, type: !61)
!11312 = !DILocalVariable(name: "ptr", scope: !11303, file: !1879, line: 541, type: !61)
!11313 = !DILocalVariable(name: "blksize", scope: !11303, file: !1879, line: 541, type: !61)
!11314 = !DILocalVariable(name: "total_blocks", scope: !11303, file: !1879, line: 541, type: !61)
!11315 = !DILocalVariable(name: "endaddr", scope: !11303, file: !1879, line: 542, type: !61)
!11316 = !DILocation(line: 0, scope: !11303)
!11317 = !DILocation(line: 542, column: 33, scope: !11303)
!11318 = !DILocation(line: 557, column: 59, scope: !11319)
!11319 = distinct !DILexicalBlock(scope: !11320, file: !1879, line: 557, column: 5)
!11320 = distinct !DILexicalBlock(scope: !11303, file: !1879, line: 557, column: 5)
!11321 = !DILocation(line: 557, column: 5, scope: !11320)
!11322 = !DILocation(line: 560, column: 19, scope: !11323)
!11323 = distinct !DILexicalBlock(scope: !11319, file: !1879, line: 559, column: 5)
!11324 = !DILocation(line: 562, column: 26, scope: !11325)
!11325 = distinct !DILexicalBlock(scope: !11323, file: !1879, line: 562, column: 13)
!11326 = !DILocation(line: 0, scope: !11325)
!11327 = !DILocation(line: 562, column: 13, scope: !11323)
!11328 = !DILocation(line: 563, column: 39, scope: !11329)
!11329 = distinct !DILexicalBlock(scope: !11325, file: !1879, line: 562, column: 34)
!11330 = !DILocation(line: 564, column: 29, scope: !11329)
!11331 = !DILocation(line: 564, column: 42, scope: !11329)
!11332 = !DILocation(line: 565, column: 9, scope: !11329)
!11333 = !DILocation(line: 567, column: 45, scope: !11334)
!11334 = distinct !DILexicalBlock(scope: !11325, file: !1879, line: 567, column: 18)
!11335 = !DILocation(line: 567, column: 26, scope: !11334)
!11336 = !DILocation(line: 567, column: 18, scope: !11325)
!11337 = !DILocation(line: 568, column: 29, scope: !11338)
!11338 = distinct !DILexicalBlock(scope: !11334, file: !1879, line: 567, column: 59)
!11339 = !DILocation(line: 568, column: 41, scope: !11338)
!11340 = !DILocation(line: 569, column: 9, scope: !11338)
!11341 = !DILocation(line: 572, column: 16, scope: !11342)
!11342 = distinct !DILexicalBlock(scope: !11334, file: !1879, line: 571, column: 14)
!11343 = !DILocation(line: 573, column: 21, scope: !11344)
!11344 = distinct !DILexicalBlock(scope: !11342, file: !1879, line: 573, column: 17)
!11345 = !DILocation(line: 573, column: 17, scope: !11342)
!11346 = !DILocation(line: 576, column: 29, scope: !11342)
!11347 = !DILocation(line: 576, column: 39, scope: !11342)
!11348 = !DILocation(line: 577, column: 29, scope: !11342)
!11349 = !DILocation(line: 577, column: 42, scope: !11342)
!11350 = !DILocation(line: 0, scope: !11320)
!11351 = !DILocation(line: 579, column: 14, scope: !11323)
!11352 = !DILocation(line: 580, column: 21, scope: !11323)
!11353 = distinct !{!11353, !11321, !11354}
!11354 = !DILocation(line: 581, column: 5, scope: !11320)
!11355 = !DILocation(line: 586, column: 1, scope: !11303)
!11356 = distinct !DISubprogram(name: "NOR_Construct_RegionInfo", scope: !1879, file: !1879, line: 593, type: !11357, scopeLine: 594, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1878, retainedNodes: !11359)
!11357 = !DISubroutineType(types: !11358)
!11358 = !{!1343, !61, !61, !1894}
!11359 = !{!11360, !11361, !11362}
!11360 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !11356, file: !1879, line: 593, type: !61)
!11361 = !DILocalVariable(name: "length", arg: 2, scope: !11356, file: !1879, line: 593, type: !61)
!11362 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !11356, file: !1879, line: 593, type: !1894)
!11363 = !DILocation(line: 0, scope: !11356)
!11364 = !DILocation(line: 595, column: 12, scope: !11356)
!11365 = !DILocation(line: 595, column: 5, scope: !11356)
!11366 = !DILocation(line: 597, column: 81, scope: !11356)
!11367 = !DILocation(line: 597, column: 12, scope: !11356)
!11368 = !DILocation(line: 597, column: 5, scope: !11356)
!11369 = distinct !DISubprogram(name: "NOR_Construct_DualRegionInfo", scope: !1879, file: !1879, line: 606, type: !11357, scopeLine: 607, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1878, retainedNodes: !11370)
!11370 = !{!11371, !11372, !11373}
!11371 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !11369, file: !1879, line: 606, type: !61)
!11372 = !DILocalVariable(name: "length", arg: 2, scope: !11369, file: !1879, line: 606, type: !61)
!11373 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !11369, file: !1879, line: 606, type: !1894)
!11374 = !DILocation(line: 0, scope: !11369)
!11375 = !DILocation(line: 624, column: 5, scope: !11369)
!11376 = distinct !DISubprogram(name: "EMIINIT_CMEM_NOR_Construct_RegionInfo", scope: !1879, file: !1879, line: 637, type: !11357, scopeLine: 638, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1878, retainedNodes: !11377)
!11377 = !{!11378, !11379, !11380, !11381, !11382}
!11378 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !11376, file: !1879, line: 637, type: !61)
!11379 = !DILocalVariable(name: "length", arg: 2, scope: !11376, file: !1879, line: 637, type: !61)
!11380 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !11376, file: !1879, line: 637, type: !1894)
!11381 = !DILocalVariable(name: "index", scope: !11376, file: !1879, line: 642, type: !61)
!11382 = !DILocalVariable(name: "list", scope: !11376, file: !1879, line: 644, type: !2196)
!11383 = !DILocation(line: 0, scope: !11376)
!11384 = !DILocation(line: 642, column: 22, scope: !11376)
!11385 = !DILocation(line: 648, column: 81, scope: !11376)
!11386 = !DILocation(line: 648, column: 12, scope: !11376)
!11387 = !DILocation(line: 648, column: 5, scope: !11376)
!11388 = distinct !DISubprogram(name: "EMIINIT_CMEM_NOR_Construct_DualRegionInfo", scope: !1879, file: !1879, line: 658, type: !11357, scopeLine: 659, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1878, retainedNodes: !11389)
!11389 = !{!11390, !11391, !11392}
!11390 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !11388, file: !1879, line: 658, type: !61)
!11391 = !DILocalVariable(name: "length", arg: 2, scope: !11388, file: !1879, line: 658, type: !61)
!11392 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !11388, file: !1879, line: 658, type: !1894)
!11393 = !DILocation(line: 0, scope: !11388)
!11394 = !DILocation(line: 688, column: 5, scope: !11388)
!11395 = distinct !DISubprogram(name: "EMIINIT_CMEM_NOR_GetUniformBlock", scope: !1879, file: !1879, line: 700, type: !8757, scopeLine: 701, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1878, retainedNodes: !11396)
!11396 = !{!11397, !11398, !11399}
!11397 = !DILocalVariable(name: "CS", arg: 1, scope: !11395, file: !1879, line: 700, type: !8690)
!11398 = !DILocalVariable(name: "index", scope: !11395, file: !1879, line: 705, type: !61)
!11399 = !DILocalVariable(name: "list", scope: !11395, file: !1879, line: 707, type: !2196)
!11400 = !DILocation(line: 0, scope: !11395)
!11401 = !DILocation(line: 705, column: 22, scope: !11395)
!11402 = !DILocation(line: 711, column: 24, scope: !11395)
!11403 = !DILocation(line: 711, column: 5, scope: !11395)
!11404 = distinct !DISubprogram(name: "CMEM_NOR_AddBankInfo", scope: !1879, file: !1879, line: 721, type: !11405, scopeLine: 722, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1878, retainedNodes: !11407)
!11405 = !DISubroutineType(types: !11406)
!11406 = !{null, !2114, !1400, !61}
!11407 = !{!11408, !11409, !11410}
!11408 = !DILocalVariable(name: "bankInfo", arg: 1, scope: !11404, file: !1879, line: 721, type: !2114)
!11409 = !DILocalVariable(name: "index", arg: 2, scope: !11404, file: !1879, line: 721, type: !1400)
!11410 = !DILocalVariable(name: "bankSize", arg: 3, scope: !11404, file: !1879, line: 721, type: !61)
!11411 = !DILocation(line: 0, scope: !11404)
!11412 = !DILocation(line: 723, column: 18, scope: !11413)
!11413 = distinct !DILexicalBlock(scope: !11404, file: !1879, line: 723, column: 9)
!11414 = !DILocation(line: 723, column: 26, scope: !11413)
!11415 = !DILocation(line: 723, column: 35, scope: !11413)
!11416 = !DILocation(line: 723, column: 9, scope: !11404)
!11417 = !DILocation(line: 724, column: 26, scope: !11418)
!11418 = distinct !DILexicalBlock(scope: !11413, file: !1879, line: 723, column: 48)
!11419 = !DILocation(line: 724, column: 32, scope: !11418)
!11420 = !DILocation(line: 725, column: 5, scope: !11418)
!11421 = !DILocation(line: 726, column: 18, scope: !11422)
!11422 = distinct !DILexicalBlock(scope: !11413, file: !1879, line: 725, column: 12)
!11423 = !DILocation(line: 727, column: 26, scope: !11422)
!11424 = !DILocation(line: 727, column: 32, scope: !11422)
!11425 = !DILocation(line: 728, column: 18, scope: !11422)
!11426 = !DILocation(line: 728, column: 26, scope: !11422)
!11427 = !DILocation(line: 728, column: 35, scope: !11422)
!11428 = !DILocation(line: 731, column: 1, scope: !11404)
!11429 = distinct !DISubprogram(name: "CMEM_NOR_Construct_BankInfo", scope: !1879, file: !1879, line: 739, type: !11430, scopeLine: 744, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1878, retainedNodes: !11432)
!11430 = !DISubroutineType(types: !11431)
!11431 = !{!61, !61, !61, !2114, !11283}
!11432 = !{!11433, !11434, !11435, !11436, !11437, !11438, !11439, !11440, !11441}
!11433 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !11429, file: !1879, line: 740, type: !61)
!11434 = !DILocalVariable(name: "length", arg: 2, scope: !11429, file: !1879, line: 741, type: !61)
!11435 = !DILocalVariable(name: "bankInfo", arg: 3, scope: !11429, file: !1879, line: 742, type: !2114)
!11436 = !DILocalVariable(name: "cmemBankInfo", arg: 4, scope: !11429, file: !1879, line: 743, type: !11283)
!11437 = !DILocalVariable(name: "Partition", scope: !11429, file: !1879, line: 745, type: !61)
!11438 = !DILocalVariable(name: "Index", scope: !11429, file: !1879, line: 746, type: !1343)
!11439 = !DILocalVariable(name: "bankSize", scope: !11429, file: !1879, line: 747, type: !61)
!11440 = !DILocalVariable(name: "NextBankAddr", scope: !11429, file: !1879, line: 748, type: !61)
!11441 = !DILocalVariable(name: "srcBankIdx", scope: !11429, file: !1879, line: 748, type: !61)
!11442 = !DILocation(line: 0, scope: !11429)
!11443 = !DILocation(line: 750, column: 12, scope: !11429)
!11444 = !DILocation(line: 750, column: 5, scope: !11429)
!11445 = !DILocation(line: 752, column: 51, scope: !11446)
!11446 = distinct !DILexicalBlock(scope: !11447, file: !1879, line: 752, column: 5)
!11447 = distinct !DILexicalBlock(scope: !11429, file: !1879, line: 752, column: 5)
!11448 = !DILocation(line: 752, column: 5, scope: !11447)
!11449 = !DILocation(line: 753, column: 51, scope: !11450)
!11450 = distinct !DILexicalBlock(scope: !11451, file: !1879, line: 753, column: 13)
!11451 = distinct !DILexicalBlock(scope: !11446, file: !1879, line: 752, column: 70)
!11452 = !DILocation(line: 753, column: 24, scope: !11450)
!11453 = !DILocation(line: 753, column: 13, scope: !11451)
!11454 = !DILocation(line: 758, column: 49, scope: !11451)
!11455 = !DILocation(line: 758, column: 22, scope: !11451)
!11456 = !DILocation(line: 760, column: 22, scope: !11457)
!11457 = distinct !DILexicalBlock(scope: !11451, file: !1879, line: 760, column: 13)
!11458 = !DILocation(line: 760, column: 13, scope: !11451)
!11459 = !DILocation(line: 761, column: 37, scope: !11460)
!11460 = distinct !DILexicalBlock(scope: !11457, file: !1879, line: 760, column: 39)
!11461 = !DILocation(line: 762, column: 24, scope: !11462)
!11462 = distinct !DILexicalBlock(scope: !11460, file: !1879, line: 762, column: 17)
!11463 = !DILocation(line: 762, column: 17, scope: !11460)
!11464 = !DILocation(line: 767, column: 33, scope: !11465)
!11465 = distinct !DILexicalBlock(scope: !11460, file: !1879, line: 767, column: 17)
!11466 = !DILocation(line: 767, column: 42, scope: !11465)
!11467 = !DILocation(line: 767, column: 17, scope: !11460)
!11468 = !DILocation(line: 768, column: 33, scope: !11469)
!11469 = distinct !DILexicalBlock(scope: !11465, file: !1879, line: 767, column: 55)
!11470 = !DILocation(line: 768, column: 39, scope: !11469)
!11471 = !DILocation(line: 769, column: 13, scope: !11469)
!11472 = !DILocation(line: 770, column: 46, scope: !11473)
!11473 = distinct !DILexicalBlock(scope: !11474, file: !1879, line: 770, column: 21)
!11474 = distinct !DILexicalBlock(scope: !11465, file: !1879, line: 769, column: 20)
!11475 = !DILocation(line: 770, column: 21, scope: !11474)
!11476 = !DILocation(line: 773, column: 33, scope: !11474)
!11477 = !DILocation(line: 773, column: 39, scope: !11474)
!11478 = !DILocation(line: 774, column: 33, scope: !11474)
!11479 = !DILocation(line: 774, column: 42, scope: !11474)
!11480 = !DILocation(line: 777, column: 22, scope: !11460)
!11481 = !DILocation(line: 778, column: 20, scope: !11460)
!11482 = !DILocation(line: 779, column: 9, scope: !11460)
!11483 = !DILocation(line: 746, column: 13, scope: !11429)
!11484 = !DILocation(line: 752, column: 66, scope: !11446)
!11485 = distinct !{!11485, !11448, !11486}
!11486 = !DILocation(line: 781, column: 5, scope: !11447)
!11487 = !DILocation(line: 784, column: 5, scope: !11429)
!11488 = distinct !DISubprogram(name: "CMEM_Init_NOR", scope: !1879, file: !1879, line: 796, type: !9323, scopeLine: 797, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1878, retainedNodes: !11489)
!11489 = !{!11490, !11491}
!11490 = !DILocalVariable(name: "result", scope: !11488, file: !1879, line: 798, type: !1343)
!11491 = !DILocalVariable(name: "i", scope: !11488, file: !1879, line: 799, type: !1343)
!11492 = !DILocation(line: 803, column: 19, scope: !11488)
!11493 = !DILocation(line: 803, column: 28, scope: !11488)
!11494 = !DILocation(line: 803, column: 17, scope: !11488)
!11495 = !DILocation(line: 822, column: 33, scope: !11488)
!11496 = !DILocation(line: 822, column: 56, scope: !11488)
!11497 = !DILocation(line: 822, column: 88, scope: !11488)
!11498 = !DILocation(line: 822, column: 97, scope: !11488)
!11499 = !DILocation(line: 822, column: 5, scope: !11488)
!11500 = !DILocation(line: 829, column: 39, scope: !11488)
!11501 = !DILocation(line: 829, column: 62, scope: !11488)
!11502 = !DILocation(line: 829, column: 14, scope: !11488)
!11503 = !DILocation(line: 0, scope: !11488)
!11504 = !DILocation(line: 834, column: 16, scope: !11505)
!11505 = distinct !DILexicalBlock(scope: !11488, file: !1879, line: 834, column: 9)
!11506 = !DILocation(line: 834, column: 9, scope: !11488)
!11507 = !DILocation(line: 838, column: 30, scope: !11508)
!11508 = distinct !DILexicalBlock(scope: !11488, file: !1879, line: 838, column: 5)
!11509 = !DILocation(line: 838, column: 58, scope: !11508)
!11510 = !DILocation(line: 838, column: 78, scope: !11511)
!11511 = distinct !DILexicalBlock(scope: !11508, file: !1879, line: 838, column: 5)
!11512 = !DILocation(line: 838, column: 88, scope: !11511)
!11513 = !DILocation(line: 838, column: 5, scope: !11508)
!11514 = !DILocation(line: 839, column: 39, scope: !11515)
!11515 = distinct !DILexicalBlock(scope: !11511, file: !1879, line: 838, column: 102)
!11516 = !DILocation(line: 839, column: 22, scope: !11515)
!11517 = !DILocation(line: 840, column: 37, scope: !11518)
!11518 = distinct !DILexicalBlock(scope: !11515, file: !1879, line: 840, column: 13)
!11519 = !DILocation(line: 840, column: 13, scope: !11515)
!11520 = !DILocation(line: 841, column: 36, scope: !11521)
!11521 = distinct !DILexicalBlock(scope: !11518, file: !1879, line: 840, column: 63)
!11522 = !DILocation(line: 842, column: 9, scope: !11521)
!11523 = !DILocation(line: 838, column: 95, scope: !11511)
!11524 = distinct !{!11524, !11513, !11525}
!11525 = !DILocation(line: 843, column: 5, scope: !11508)
!11526 = !DILocation(line: 871, column: 49, scope: !11488)
!11527 = !DILocation(line: 871, column: 72, scope: !11488)
!11528 = !DILocation(line: 871, column: 47, scope: !11488)
!11529 = !DILocation(line: 871, column: 97, scope: !11488)
!11530 = !DILocation(line: 871, column: 19, scope: !11488)
!11531 = !DILocation(line: 882, column: 14, scope: !11488)
!11532 = !DILocation(line: 887, column: 13, scope: !11488)
!11533 = !DILocation(line: 887, column: 22, scope: !11488)
!11534 = !DILocation(line: 887, column: 5, scope: !11488)
!11535 = !DILocation(line: 889, column: 22, scope: !11536)
!11536 = distinct !DILexicalBlock(scope: !11488, file: !1879, line: 887, column: 34)
!11537 = !DILocation(line: 890, column: 13, scope: !11536)
!11538 = !DILocation(line: 902, column: 1, scope: !11488)
!11539 = distinct !DISubprogram(name: "CMEM_Init_nor_list", scope: !1879, file: !1879, line: 912, type: !11540, scopeLine: 913, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1878, retainedNodes: !11542)
!11540 = !DISubroutineType(types: !11541)
!11541 = !{null, !882}
!11542 = !{!11543}
!11543 = !DILocalVariable(name: "CS", arg: 1, scope: !11539, file: !1879, line: 912, type: !882)
!11544 = !DILocation(line: 0, scope: !11539)
!11545 = !DILocation(line: 914, column: 12, scope: !11546)
!11546 = distinct !DILexicalBlock(scope: !11539, file: !1879, line: 914, column: 9)
!11547 = !DILocation(line: 914, column: 9, scope: !11539)
!11548 = !DILocation(line: 918, column: 26, scope: !11549)
!11549 = distinct !DILexicalBlock(scope: !11546, file: !1879, line: 914, column: 18)
!11550 = !DILocation(line: 918, column: 24, scope: !11549)
!11551 = !DILocation(line: 920, column: 28, scope: !11552)
!11552 = distinct !DILexicalBlock(scope: !11549, file: !1879, line: 920, column: 13)
!11553 = !DILocation(line: 920, column: 13, scope: !11549)
!11554 = !DILocation(line: 921, column: 13, scope: !11555)
!11555 = distinct !DILexicalBlock(scope: !11556, file: !1879, line: 921, column: 13)
!11556 = distinct !DILexicalBlock(scope: !11557, file: !1879, line: 921, column: 13)
!11557 = distinct !DILexicalBlock(scope: !11558, file: !1879, line: 921, column: 13)
!11558 = distinct !DILexicalBlock(scope: !11552, file: !1879, line: 920, column: 33)
!11559 = !DILocation(line: 923, column: 19, scope: !11549)
!11560 = !DILocation(line: 923, column: 17, scope: !11549)
!11561 = !DILocation(line: 924, column: 5, scope: !11549)
!11562 = !DILocation(line: 935, column: 14, scope: !11539)
!11563 = !DILocation(line: 936, column: 1, scope: !11539)
!11564 = distinct !DISubprogram(name: "ComboMem_Initialize", scope: !1879, file: !1879, line: 952, type: !9323, scopeLine: 953, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1878, retainedNodes: !262)
!11565 = !DILocation(line: 955, column: 5, scope: !11564)
!11566 = !DILocation(line: 956, column: 12, scope: !11564)
!11567 = !DILocation(line: 956, column: 5, scope: !11564)
!11568 = distinct !DISubprogram(name: "CMEM_Init_FullDriver", scope: !1879, file: !1879, line: 974, type: !9323, scopeLine: 975, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1878, retainedNodes: !11569)
!11569 = !{!11570}
!11570 = !DILocalVariable(name: "result", scope: !11568, file: !1879, line: 976, type: !1343)
!11571 = !DILocation(line: 981, column: 5, scope: !11568)
!11572 = !DILocation(line: 986, column: 24, scope: !11568)
!11573 = !DILocation(line: 986, column: 33, scope: !11568)
!11574 = !DILocation(line: 986, column: 49, scope: !11568)
!11575 = !DILocation(line: 986, column: 22, scope: !11568)
!11576 = !DILocation(line: 1002, column: 19, scope: !11568)
!11577 = !DILocation(line: 1002, column: 17, scope: !11568)
!11578 = !DILocation(line: 1014, column: 22, scope: !11568)
!11579 = !DILocation(line: 1014, column: 5, scope: !11568)
!11580 = !DILocation(line: 1024, column: 33, scope: !11568)
!11581 = !DILocation(line: 1026, column: 27, scope: !11568)
!11582 = !DILocation(line: 1027, column: 26, scope: !11568)
!11583 = !DILocation(line: 1042, column: 33, scope: !11568)
!11584 = !DILocation(line: 1044, column: 32, scope: !11568)
!11585 = !DILocation(line: 1052, column: 18, scope: !11568)
!11586 = !DILocation(line: 1052, column: 27, scope: !11568)
!11587 = !DILocation(line: 1052, column: 43, scope: !11568)
!11588 = !DILocation(line: 1048, column: 14, scope: !11568)
!11589 = !DILocation(line: 0, scope: !11568)
!11590 = !DILocation(line: 1063, column: 5, scope: !11591)
!11591 = distinct !DILexicalBlock(scope: !11592, file: !1879, line: 1063, column: 5)
!11592 = distinct !DILexicalBlock(scope: !11568, file: !1879, line: 1063, column: 5)
!11593 = !DILocation(line: 1063, column: 5, scope: !11592)
!11594 = !DILocation(line: 1063, column: 5, scope: !11595)
!11595 = distinct !DILexicalBlock(scope: !11591, file: !1879, line: 1063, column: 5)
!11596 = !DILocation(line: 1096, column: 36, scope: !11568)
!11597 = !DILocation(line: 1096, column: 34, scope: !11568)
!11598 = !DILocation(line: 1101, column: 5, scope: !11568)
!11599 = !DILocation(line: 1103, column: 34, scope: !11568)
!11600 = !DILocation(line: 1109, column: 35, scope: !11568)
!11601 = !DILocation(line: 1110, column: 33, scope: !11568)
!11602 = !DILocation(line: 1111, column: 34, scope: !11568)
!11603 = !DILocation(line: 1113, column: 5, scope: !11568)
!11604 = distinct !DISubprogram(name: "CreateFDMLock", scope: !2237, file: !2237, line: 84, type: !260, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2236, retainedNodes: !262)
!11605 = !DILocation(line: 86, column: 1, scope: !11604)
!11606 = distinct !DISubprogram(name: "GetFDMLock", scope: !2237, file: !2237, line: 87, type: !9789, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2236, retainedNodes: !11607)
!11607 = !{!11608}
!11608 = !DILocalVariable(name: "savedMask", scope: !11606, file: !2237, line: 89, type: !1343)
!11609 = !DILocation(line: 90, column: 17, scope: !11606)
!11610 = !DILocation(line: 0, scope: !11606)
!11611 = !DILocation(line: 91, column: 9, scope: !11612)
!11612 = distinct !DILexicalBlock(scope: !11606, file: !2237, line: 91, column: 9)
!11613 = !DILocation(line: 91, column: 9, scope: !11606)
!11614 = !DILocation(line: 92, column: 17, scope: !11615)
!11615 = distinct !DILexicalBlock(scope: !11612, file: !2237, line: 91, column: 24)
!11616 = !DILocation(line: 94, column: 9, scope: !11615)
!11617 = !DILocation(line: 0, scope: !11612)
!11618 = !DILocation(line: 102, column: 1, scope: !11606)
!11619 = distinct !DISubprogram(name: "FreeFDMLock", scope: !2237, file: !2237, line: 103, type: !260, scopeLine: 104, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2236, retainedNodes: !11620)
!11620 = !{!11621}
!11621 = !DILocalVariable(name: "savedMask", scope: !11619, file: !2237, line: 105, type: !1343)
!11622 = !DILocation(line: 106, column: 17, scope: !11619)
!11623 = !DILocation(line: 0, scope: !11619)
!11624 = !DILocation(line: 107, column: 9, scope: !11625)
!11625 = distinct !DILexicalBlock(scope: !11619, file: !2237, line: 107, column: 9)
!11626 = !DILocation(line: 107, column: 9, scope: !11619)
!11627 = !DILocation(line: 108, column: 17, scope: !11628)
!11628 = distinct !DILexicalBlock(scope: !11625, file: !2237, line: 107, column: 24)
!11629 = !DILocation(line: 109, column: 9, scope: !11628)
!11630 = !DILocation(line: 114, column: 1, scope: !11619)
!11631 = !DILocation(line: 111, column: 9, scope: !11632)
!11632 = distinct !DILexicalBlock(scope: !11625, file: !2237, line: 110, column: 12)
!11633 = !DILocation(line: 112, column: 9, scope: !11634)
!11634 = distinct !DILexicalBlock(scope: !11635, file: !2237, line: 112, column: 9)
!11635 = distinct !DILexicalBlock(scope: !11636, file: !2237, line: 112, column: 9)
!11636 = distinct !DILexicalBlock(scope: !11632, file: !2237, line: 112, column: 9)
!11637 = distinct !DISubprogram(name: "create_FDM_lock", scope: !2237, file: !2237, line: 119, type: !260, scopeLine: 120, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2236, retainedNodes: !262)
!11638 = !DILocation(line: 123, column: 1, scope: !11637)
!11639 = distinct !DISubprogram(name: "retrieve_FDM_lock", scope: !2237, file: !2237, line: 130, type: !260, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2236, retainedNodes: !11640)
!11640 = !{!11641}
!11641 = !DILocalVariable(name: "Result", scope: !11639, file: !2237, line: 132, type: !2293)
!11642 = !DILocation(line: 133, column: 5, scope: !11639)
!11643 = !DILocation(line: 134, column: 18, scope: !11644)
!11644 = distinct !DILexicalBlock(scope: !11639, file: !2237, line: 133, column: 8)
!11645 = !DILocation(line: 0, scope: !11639)
!11646 = !DILocation(line: 135, column: 21, scope: !11639)
!11647 = !DILocation(line: 135, column: 5, scope: !11644)
!11648 = distinct !{!11648, !11642, !11649}
!11649 = !DILocation(line: 135, column: 43, scope: !11639)
!11650 = !DILocation(line: 136, column: 1, scope: !11639)
!11651 = distinct !DISubprogram(name: "release_FDM_lock", scope: !2237, file: !2237, line: 143, type: !260, scopeLine: 144, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2236, retainedNodes: !262)
!11652 = !DILocation(line: 147, column: 5, scope: !11651)
!11653 = !DILocation(line: 148, column: 1, scope: !11651)
!11654 = distinct !DISubprogram(name: "readRawDiskData", scope: !2237, file: !2237, line: 216, type: !11655, scopeLine: 217, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2236, retainedNodes: !11696)
!11655 = !DISubroutineType(types: !11656)
!11656 = !{!1343, !11657, !61, !872, !61}
!11657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11658, size: 32)
!11658 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_FLASH_DISK_Data", file: !2184, line: 93, baseType: !11659)
!11659 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2184, line: 83, size: 1056, elements: !11660)
!11660 = !{!11661, !11662, !11682, !11683, !11695}
!11661 = !DIDerivedType(tag: DW_TAG_member, name: "DiskSize", scope: !11659, file: !2184, line: 84, baseType: !61, size: 32)
!11662 = !DIDerivedType(tag: DW_TAG_member, name: "MTDDriver", scope: !11659, file: !2184, line: 85, baseType: !11663, size: 32, offset: 32)
!11663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11664, size: 32)
!11664 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_Driver", file: !1655, line: 121, baseType: !11665)
!11665 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1655, line: 105, size: 480, elements: !11666)
!11666 = !{!11667, !11668, !11669, !11670, !11671, !11672, !11673, !11674, !11675, !11676, !11677, !11678, !11679, !11680, !11681}
!11667 = !DIDerivedType(tag: DW_TAG_member, name: "MountDevice", scope: !11665, file: !1655, line: 106, baseType: !1925, size: 32)
!11668 = !DIDerivedType(tag: DW_TAG_member, name: "ShutDown", scope: !11665, file: !1655, line: 107, baseType: !1728, size: 32, offset: 32)
!11669 = !DIDerivedType(tag: DW_TAG_member, name: "MapWindow", scope: !11665, file: !1655, line: 108, baseType: !1930, size: 32, offset: 64)
!11670 = !DIDerivedType(tag: DW_TAG_member, name: "EraseBlock", scope: !11665, file: !1655, line: 109, baseType: !1934, size: 32, offset: 96)
!11671 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramData", scope: !11665, file: !1655, line: 110, baseType: !1938, size: 32, offset: 128)
!11672 = !DIDerivedType(tag: DW_TAG_member, name: "NonBlockEraseBlock", scope: !11665, file: !1655, line: 111, baseType: !1934, size: 32, offset: 160)
!11673 = !DIDerivedType(tag: DW_TAG_member, name: "CheckDeviceReady", scope: !11665, file: !1655, line: 112, baseType: !1943, size: 32, offset: 192)
!11674 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendErase", scope: !11665, file: !1655, line: 113, baseType: !1934, size: 32, offset: 224)
!11675 = !DIDerivedType(tag: DW_TAG_member, name: "ResumeErase", scope: !11665, file: !1655, line: 114, baseType: !1934, size: 32, offset: 256)
!11676 = !DIDerivedType(tag: DW_TAG_member, name: "BlankCheck", scope: !11665, file: !1655, line: 115, baseType: !1934, size: 32, offset: 288)
!11677 = !DIDerivedType(tag: DW_TAG_member, name: "OTPAccess", scope: !11665, file: !1655, line: 116, baseType: !1950, size: 32, offset: 320)
!11678 = !DIDerivedType(tag: DW_TAG_member, name: "OTPQueryLength", scope: !11665, file: !1655, line: 117, baseType: !1955, size: 32, offset: 352)
!11679 = !DIDerivedType(tag: DW_TAG_member, name: "LockEraseBlkAddr", scope: !11665, file: !1655, line: 118, baseType: !1960, size: 32, offset: 384)
!11680 = !DIDerivedType(tag: DW_TAG_member, name: "IsEraseSuspended", scope: !11665, file: !1655, line: 119, baseType: !1964, size: 32, offset: 416)
!11681 = !DIDerivedType(tag: DW_TAG_member, name: "IOCtrl", scope: !11665, file: !1655, line: 120, baseType: !1968, size: 32, offset: 448)
!11682 = !DIDerivedType(tag: DW_TAG_member, name: "MTDData", scope: !11659, file: !2184, line: 86, baseType: !65, size: 32, offset: 64)
!11683 = !DIDerivedType(tag: DW_TAG_member, name: "FlashInfo", scope: !11659, file: !2184, line: 87, baseType: !11684, size: 928, offset: 96)
!11684 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_FlashInfo", file: !1655, line: 99, baseType: !11685)
!11685 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1655, line: 90, size: 928, elements: !11686)
!11686 = !{!11687, !11688, !11689, !11690, !11691, !11692, !11693, !11694}
!11687 = !DIDerivedType(tag: DW_TAG_member, name: "TotalBlocks", scope: !11685, file: !1655, line: 91, baseType: !61, size: 32)
!11688 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !11685, file: !1655, line: 92, baseType: !1982, size: 256, offset: 32)
!11689 = !DIDerivedType(tag: DW_TAG_member, name: "AvailInRegion", scope: !11685, file: !1655, line: 93, baseType: !1982, size: 256, offset: 288)
!11690 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !11685, file: !1655, line: 94, baseType: !1982, size: 256, offset: 544)
!11691 = !DIDerivedType(tag: DW_TAG_member, name: "ActualRegionNum", scope: !11685, file: !1655, line: 95, baseType: !61, size: 32, offset: 800)
!11692 = !DIDerivedType(tag: DW_TAG_member, name: "PageSize", scope: !11685, file: !1655, line: 96, baseType: !1974, size: 16, offset: 832)
!11693 = !DIDerivedType(tag: DW_TAG_member, name: "baseUnlockBlock", scope: !11685, file: !1655, line: 97, baseType: !61, size: 32, offset: 864)
!11694 = !DIDerivedType(tag: DW_TAG_member, name: "endUnlockBlock", scope: !11685, file: !1655, line: 98, baseType: !61, size: 32, offset: 896)
!11695 = !DIDerivedType(tag: DW_TAG_member, name: "is_mount", scope: !11659, file: !2184, line: 92, baseType: !263, size: 8, offset: 1024)
!11696 = !{!11697, !11698, !11699, !11700, !11701, !11702}
!11697 = !DILocalVariable(name: "D", arg: 1, scope: !11654, file: !2237, line: 216, type: !11657)
!11698 = !DILocalVariable(name: "addr", arg: 2, scope: !11654, file: !2237, line: 216, type: !61)
!11699 = !DILocalVariable(name: "data_ptr", arg: 3, scope: !11654, file: !2237, line: 216, type: !872)
!11700 = !DILocalVariable(name: "len", arg: 4, scope: !11654, file: !2237, line: 216, type: !61)
!11701 = !DILocalVariable(name: "phyAddr", scope: !11654, file: !2237, line: 219, type: !61)
!11702 = !DILocalVariable(name: "diskSize", scope: !11654, file: !2237, line: 220, type: !61)
!11703 = !DILocation(line: 0, scope: !11654)
!11704 = !DILocation(line: 220, column: 28, scope: !11654)
!11705 = !DILocation(line: 222, column: 14, scope: !11706)
!11706 = distinct !DILexicalBlock(scope: !11654, file: !2237, line: 222, column: 9)
!11707 = !DILocation(line: 222, column: 26, scope: !11706)
!11708 = !DILocation(line: 225, column: 51, scope: !11654)
!11709 = !DILocation(line: 225, column: 61, scope: !11654)
!11710 = !DILocation(line: 225, column: 15, scope: !11654)
!11711 = !DILocation(line: 225, column: 70, scope: !11654)
!11712 = !DILocation(line: 227, column: 13, scope: !11713)
!11713 = distinct !DILexicalBlock(scope: !11654, file: !2237, line: 227, column: 9)
!11714 = !DILocation(line: 227, column: 9, scope: !11654)
!11715 = !DILocation(line: 228, column: 9, scope: !11716)
!11716 = distinct !DILexicalBlock(scope: !11713, file: !2237, line: 227, column: 23)
!11717 = !DILocation(line: 229, column: 5, scope: !11716)
!11718 = !DILocation(line: 231, column: 5, scope: !11654)
!11719 = !DILocation(line: 233, column: 22, scope: !11654)
!11720 = !DILocation(line: 233, column: 5, scope: !11654)
!11721 = !DILocation(line: 235, column: 5, scope: !11654)
!11722 = !DILocation(line: 237, column: 5, scope: !11654)
!11723 = !DILocation(line: 238, column: 1, scope: !11654)
!11724 = distinct !DISubprogram(name: "MountDevice", scope: !2237, file: !2237, line: 165, type: !11725, scopeLine: 166, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2236, retainedNodes: !11727)
!11725 = !DISubroutineType(types: !11726)
!11726 = !{null, !11657}
!11727 = !{!11728, !11729}
!11728 = !DILocalVariable(name: "D", arg: 1, scope: !11724, file: !2237, line: 165, type: !11657)
!11729 = !DILocalVariable(name: "Result", scope: !11724, file: !2237, line: 167, type: !1343)
!11730 = !DILocation(line: 0, scope: !11724)
!11731 = !DILocation(line: 171, column: 12, scope: !11732)
!11732 = distinct !DILexicalBlock(scope: !11724, file: !2237, line: 171, column: 9)
!11733 = !DILocation(line: 171, column: 9, scope: !11724)
!11734 = !DILocation(line: 176, column: 5, scope: !11724)
!11735 = !DILocation(line: 186, column: 17, scope: !11724)
!11736 = !DILocation(line: 186, column: 28, scope: !11724)
!11737 = !DILocation(line: 186, column: 43, scope: !11724)
!11738 = !DILocation(line: 186, column: 64, scope: !11724)
!11739 = !DILocation(line: 186, column: 52, scope: !11724)
!11740 = !DILocation(line: 186, column: 14, scope: !11724)
!11741 = !DILocation(line: 188, column: 5, scope: !11724)
!11742 = !DILocation(line: 190, column: 16, scope: !11743)
!11743 = distinct !DILexicalBlock(scope: !11724, file: !2237, line: 190, column: 9)
!11744 = !DILocation(line: 190, column: 9, scope: !11724)
!11745 = !DILocation(line: 191, column: 9, scope: !11746)
!11746 = distinct !DILexicalBlock(scope: !11747, file: !2237, line: 191, column: 9)
!11747 = distinct !DILexicalBlock(scope: !11748, file: !2237, line: 191, column: 9)
!11748 = distinct !DILexicalBlock(scope: !11749, file: !2237, line: 191, column: 9)
!11749 = distinct !DILexicalBlock(scope: !11743, file: !2237, line: 190, column: 31)
!11750 = !DILocation(line: 194, column: 17, scope: !11724)
!11751 = !DILocation(line: 195, column: 1, scope: !11724)
!11752 = distinct !DISubprogram(name: "writeRawDiskData", scope: !2237, file: !2237, line: 277, type: !11655, scopeLine: 278, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2236, retainedNodes: !11753)
!11753 = !{!11754, !11755, !11756, !11757, !11758, !11759, !11760, !11761, !11762, !11763, !11767, !11768, !11769, !11774}
!11754 = !DILocalVariable(name: "D", arg: 1, scope: !11752, file: !2237, line: 277, type: !11657)
!11755 = !DILocalVariable(name: "addr", arg: 2, scope: !11752, file: !2237, line: 277, type: !61)
!11756 = !DILocalVariable(name: "data_ptr", arg: 3, scope: !11752, file: !2237, line: 277, type: !872)
!11757 = !DILocalVariable(name: "len", arg: 4, scope: !11752, file: !2237, line: 277, type: !61)
!11758 = !DILocalVariable(name: "dest", scope: !11752, file: !2237, line: 279, type: !61)
!11759 = !DILocalVariable(name: "src", scope: !11752, file: !2237, line: 279, type: !61)
!11760 = !DILocalVariable(name: "diskSize", scope: !11752, file: !2237, line: 280, type: !61)
!11761 = !DILocalVariable(name: "result", scope: !11752, file: !2237, line: 281, type: !1343)
!11762 = !DILocalVariable(name: "DoneLength", scope: !11752, file: !2237, line: 282, type: !61)
!11763 = !DILocalVariable(name: "blockSize", scope: !11764, file: !2237, line: 313, type: !61)
!11764 = distinct !DILexicalBlock(scope: !11765, file: !2237, line: 312, column: 14)
!11765 = distinct !DILexicalBlock(scope: !11766, file: !2237, line: 305, column: 13)
!11766 = distinct !DILexicalBlock(scope: !11752, file: !2237, line: 298, column: 30)
!11767 = !DILocalVariable(name: "programBytes", scope: !11764, file: !2237, line: 314, type: !61)
!11768 = !DILocalVariable(name: "nextBlkAddr", scope: !11764, file: !2237, line: 316, type: !61)
!11769 = !DILocalVariable(name: "Cell", scope: !11770, file: !2237, line: 346, type: !11772)
!11770 = distinct !DILexicalBlock(scope: !11771, file: !2237, line: 345, column: 83)
!11771 = distinct !DILexicalBlock(scope: !11764, file: !2237, line: 345, column: 17)
!11772 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_CELL", file: !11773, line: 76, baseType: !1041)
!11773 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_mtd_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/powerkey/GCC")
!11774 = !DILocalVariable(name: "b", scope: !11770, file: !2237, line: 347, type: !872)
!11775 = !DILocation(line: 0, scope: !11752)
!11776 = !DILocation(line: 280, column: 28, scope: !11752)
!11777 = !DILocation(line: 284, column: 14, scope: !11778)
!11778 = distinct !DILexicalBlock(scope: !11752, file: !2237, line: 284, column: 9)
!11779 = !DILocation(line: 284, column: 9, scope: !11752)
!11780 = !DILocation(line: 288, column: 14, scope: !11781)
!11781 = distinct !DILexicalBlock(scope: !11752, file: !2237, line: 288, column: 9)
!11782 = !DILocation(line: 288, column: 20, scope: !11781)
!11783 = !DILocation(line: 288, column: 9, scope: !11752)
!11784 = !DILocation(line: 292, column: 13, scope: !11785)
!11785 = distinct !DILexicalBlock(scope: !11752, file: !2237, line: 292, column: 9)
!11786 = !DILocation(line: 292, column: 9, scope: !11752)
!11787 = !DILocation(line: 293, column: 9, scope: !11788)
!11788 = distinct !DILexicalBlock(scope: !11785, file: !2237, line: 292, column: 23)
!11789 = !DILocation(line: 294, column: 5, scope: !11788)
!11790 = !DILocation(line: 296, column: 5, scope: !11752)
!11791 = !DILocation(line: 346, column: 17, scope: !11770)
!11792 = !DILocation(line: 298, column: 23, scope: !11752)
!11793 = !DILocation(line: 298, column: 5, scope: !11752)
!11794 = !DILocation(line: 299, column: 52, scope: !11766)
!11795 = !DILocation(line: 299, column: 62, scope: !11766)
!11796 = !DILocation(line: 299, column: 16, scope: !11766)
!11797 = !DILocation(line: 299, column: 71, scope: !11766)
!11798 = !DILocation(line: 299, column: 78, scope: !11766)
!11799 = !DILocation(line: 300, column: 34, scope: !11766)
!11800 = !DILocation(line: 302, column: 12, scope: !11766)
!11801 = !DILocation(line: 302, column: 23, scope: !11766)
!11802 = !DILocation(line: 302, column: 81, scope: !11766)
!11803 = !DILocation(line: 302, column: 45, scope: !11766)
!11804 = !DILocation(line: 302, column: 9, scope: !11766)
!11805 = !DILocation(line: 305, column: 29, scope: !11765)
!11806 = !DILocation(line: 305, column: 57, scope: !11765)
!11807 = !DILocation(line: 305, column: 66, scope: !11765)
!11808 = !DILocation(line: 305, column: 80, scope: !11765)
!11809 = !DILocation(line: 305, column: 13, scope: !11766)
!11810 = !DILocation(line: 306, column: 25, scope: !11811)
!11811 = distinct !DILexicalBlock(scope: !11765, file: !2237, line: 305, column: 87)
!11812 = !DILocation(line: 306, column: 36, scope: !11811)
!11813 = !DILocation(line: 306, column: 51, scope: !11811)
!11814 = !DILocation(line: 306, column: 60, scope: !11811)
!11815 = !DILocation(line: 306, column: 74, scope: !11811)
!11816 = !DILocation(line: 306, column: 22, scope: !11811)
!11817 = !DILocation(line: 307, column: 24, scope: !11818)
!11818 = distinct !DILexicalBlock(scope: !11811, file: !2237, line: 307, column: 17)
!11819 = !DILocation(line: 307, column: 17, scope: !11811)
!11820 = !DILocation(line: 310, column: 23, scope: !11811)
!11821 = !DILocation(line: 311, column: 9, scope: !11811)
!11822 = !DILocation(line: 313, column: 47, scope: !11764)
!11823 = !DILocation(line: 313, column: 56, scope: !11764)
!11824 = !DILocation(line: 313, column: 34, scope: !11764)
!11825 = !DILocation(line: 0, scope: !11764)
!11826 = !DILocation(line: 316, column: 42, scope: !11764)
!11827 = !DILocation(line: 316, column: 58, scope: !11764)
!11828 = !DILocation(line: 316, column: 55, scope: !11764)
!11829 = !DILocation(line: 326, column: 22, scope: !11830)
!11830 = distinct !DILexicalBlock(scope: !11764, file: !2237, line: 326, column: 17)
!11831 = !DILocation(line: 326, column: 37, scope: !11830)
!11832 = !DILocation(line: 326, column: 17, scope: !11764)
!11833 = !DILocation(line: 332, column: 43, scope: !11764)
!11834 = !DILocation(line: 345, column: 30, scope: !11771)
!11835 = !DILocation(line: 345, column: 52, scope: !11771)
!11836 = !DILocation(line: 0, scope: !11770)
!11837 = !DILocation(line: 348, column: 26, scope: !11770)
!11838 = !DILocation(line: 348, column: 24, scope: !11770)
!11839 = !DILocation(line: 348, column: 22, scope: !11770)
!11840 = !DILocation(line: 349, column: 41, scope: !11770)
!11841 = !DILocation(line: 349, column: 24, scope: !11770)
!11842 = !DILocation(line: 349, column: 22, scope: !11770)
!11843 = !DILocation(line: 350, column: 29, scope: !11770)
!11844 = !DILocation(line: 350, column: 40, scope: !11770)
!11845 = !DILocation(line: 350, column: 55, scope: !11770)
!11846 = !DILocation(line: 350, column: 64, scope: !11770)
!11847 = !DILocation(line: 350, column: 26, scope: !11770)
!11848 = !DILocation(line: 351, column: 28, scope: !11849)
!11849 = distinct !DILexicalBlock(scope: !11770, file: !2237, line: 351, column: 21)
!11850 = !DILocation(line: 354, column: 13, scope: !11771)
!11851 = !DILocation(line: 362, column: 33, scope: !11852)
!11852 = distinct !DILexicalBlock(scope: !11853, file: !2237, line: 361, column: 24)
!11853 = distinct !DILexicalBlock(scope: !11854, file: !2237, line: 355, column: 21)
!11854 = distinct !DILexicalBlock(scope: !11771, file: !2237, line: 354, column: 20)
!11855 = !DILocation(line: 362, column: 44, scope: !11852)
!11856 = !DILocation(line: 362, column: 59, scope: !11852)
!11857 = !DILocation(line: 362, column: 68, scope: !11852)
!11858 = !DILocation(line: 362, column: 82, scope: !11852)
!11859 = !DILocation(line: 362, column: 30, scope: !11852)
!11860 = !DILocation(line: 364, column: 28, scope: !11861)
!11861 = distinct !DILexicalBlock(scope: !11854, file: !2237, line: 364, column: 21)
!11862 = !DILocation(line: 364, column: 21, scope: !11854)
!11863 = !DILocation(line: 368, column: 24, scope: !11764)
!11864 = !DILocation(line: 0, scope: !11765)
!11865 = distinct !{!11865, !11793, !11866}
!11866 = !DILocation(line: 370, column: 5, scope: !11752)
!11867 = !DILocation(line: 372, column: 5, scope: !11752)
!11868 = !DILocation(line: 379, column: 1, scope: !11752)
!11869 = distinct !DISubprogram(name: "eraseRawDiskBlock", scope: !2237, file: !2237, line: 398, type: !11870, scopeLine: 399, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2236, retainedNodes: !11872)
!11870 = !DISubroutineType(types: !11871)
!11871 = !{!1343, !11657, !61}
!11872 = !{!11873, !11874, !11875, !11876}
!11873 = !DILocalVariable(name: "D", arg: 1, scope: !11869, file: !2237, line: 398, type: !11657)
!11874 = !DILocalVariable(name: "blkIdx", arg: 2, scope: !11869, file: !2237, line: 398, type: !61)
!11875 = !DILocalVariable(name: "result", scope: !11869, file: !2237, line: 401, type: !1343)
!11876 = !DILocalVariable(name: "block_index", scope: !11869, file: !2237, line: 402, type: !61)
!11877 = !DILocation(line: 0, scope: !11869)
!11878 = !DILocation(line: 402, column: 36, scope: !11869)
!11879 = !DILocation(line: 403, column: 13, scope: !11880)
!11880 = distinct !DILexicalBlock(scope: !11869, file: !2237, line: 403, column: 9)
!11881 = !DILocation(line: 403, column: 9, scope: !11869)
!11882 = !DILocation(line: 404, column: 9, scope: !11883)
!11883 = distinct !DILexicalBlock(scope: !11880, file: !2237, line: 403, column: 23)
!11884 = !DILocation(line: 405, column: 5, scope: !11883)
!11885 = !DILocation(line: 407, column: 37, scope: !11886)
!11886 = distinct !DILexicalBlock(scope: !11869, file: !2237, line: 407, column: 9)
!11887 = !DILocation(line: 407, column: 21, scope: !11886)
!11888 = !DILocation(line: 407, column: 9, scope: !11869)
!11889 = !DILocation(line: 412, column: 5, scope: !11869)
!11890 = !DILocation(line: 414, column: 8, scope: !11869)
!11891 = !DILocation(line: 414, column: 19, scope: !11869)
!11892 = !DILocation(line: 414, column: 32, scope: !11869)
!11893 = !DILocation(line: 414, column: 5, scope: !11869)
!11894 = !DILocation(line: 416, column: 17, scope: !11869)
!11895 = !DILocation(line: 416, column: 28, scope: !11869)
!11896 = !DILocation(line: 416, column: 42, scope: !11869)
!11897 = !DILocation(line: 416, column: 14, scope: !11869)
!11898 = !DILocation(line: 418, column: 5, scope: !11869)
!11899 = !DILocation(line: 420, column: 16, scope: !11900)
!11900 = distinct !DILexicalBlock(scope: !11869, file: !2237, line: 420, column: 9)
!11901 = !DILocation(line: 424, column: 1, scope: !11869)
!11902 = distinct !DISubprogram(name: "NOR_init", scope: !2237, file: !2237, line: 433, type: !9323, scopeLine: 434, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2236, retainedNodes: !262)
!11903 = !DILocation(line: 436, column: 9, scope: !11904)
!11904 = distinct !DILexicalBlock(scope: !11902, file: !2237, line: 436, column: 9)
!11905 = !DILocation(line: 436, column: 9, scope: !11902)
!11906 = !DILocation(line: 437, column: 9, scope: !11907)
!11907 = distinct !DILexicalBlock(scope: !11904, file: !2237, line: 436, column: 62)
!11908 = !DILocation(line: 438, column: 9, scope: !11907)
!11909 = !DILocation(line: 439, column: 27, scope: !11907)
!11910 = !DILocation(line: 440, column: 5, scope: !11907)
!11911 = !DILocation(line: 441, column: 5, scope: !11902)
!11912 = distinct !DISubprogram(name: "get_NOR_init_status", scope: !2237, file: !2237, line: 444, type: !9789, scopeLine: 445, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2236, retainedNodes: !262)
!11913 = !DILocation(line: 446, column: 12, scope: !11912)
!11914 = !DILocation(line: 446, column: 5, scope: !11912)
!11915 = distinct !DISubprogram(name: "NOR_ReadPhysicalPage", scope: !2237, file: !2237, line: 449, type: !11916, scopeLine: 450, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2236, retainedNodes: !11918)
!11916 = !DISubroutineType(types: !11917)
!11917 = !{!1343, !61, !61, !872}
!11918 = !{!11919, !11920, !11921, !11922, !11923, !11924, !11925}
!11919 = !DILocalVariable(name: "block_idx", arg: 1, scope: !11915, file: !2237, line: 449, type: !61)
!11920 = !DILocalVariable(name: "page_idx", arg: 2, scope: !11915, file: !2237, line: 449, type: !61)
!11921 = !DILocalVariable(name: "data_ptr", arg: 3, scope: !11915, file: !2237, line: 449, type: !872)
!11922 = !DILocalVariable(name: "D", scope: !11915, file: !2237, line: 451, type: !11657)
!11923 = !DILocalVariable(name: "mtdData", scope: !11915, file: !2237, line: 452, type: !2245)
!11924 = !DILocalVariable(name: "result", scope: !11915, file: !2237, line: 453, type: !1343)
!11925 = !DILocalVariable(name: "addr", scope: !11915, file: !2237, line: 455, type: !61)
!11926 = !DILocation(line: 0, scope: !11915)
!11927 = !DILocation(line: 452, column: 60, scope: !11915)
!11928 = !DILocation(line: 455, column: 32, scope: !11915)
!11929 = !DILocation(line: 455, column: 22, scope: !11915)
!11930 = !DILocation(line: 455, column: 95, scope: !11915)
!11931 = !DILocation(line: 455, column: 76, scope: !11915)
!11932 = !DILocation(line: 455, column: 118, scope: !11915)
!11933 = !DILocation(line: 455, column: 74, scope: !11915)
!11934 = !DILocation(line: 455, column: 106, scope: !11915)
!11935 = !DILocation(line: 457, column: 14, scope: !11915)
!11936 = !DILocation(line: 459, column: 16, scope: !11937)
!11937 = distinct !DILexicalBlock(scope: !11915, file: !2237, line: 459, column: 9)
!11938 = !DILocation(line: 463, column: 1, scope: !11915)
!11939 = distinct !DISubprogram(name: "NOR_ProgramPhysicalPage", scope: !2237, file: !2237, line: 466, type: !11916, scopeLine: 467, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2236, retainedNodes: !11940)
!11940 = !{!11941, !11942, !11943, !11944, !11945, !11946, !11947}
!11941 = !DILocalVariable(name: "block_idx", arg: 1, scope: !11939, file: !2237, line: 466, type: !61)
!11942 = !DILocalVariable(name: "page_idx", arg: 2, scope: !11939, file: !2237, line: 466, type: !61)
!11943 = !DILocalVariable(name: "data_ptr", arg: 3, scope: !11939, file: !2237, line: 466, type: !872)
!11944 = !DILocalVariable(name: "D", scope: !11939, file: !2237, line: 468, type: !11657)
!11945 = !DILocalVariable(name: "mtdData", scope: !11939, file: !2237, line: 469, type: !2245)
!11946 = !DILocalVariable(name: "result", scope: !11939, file: !2237, line: 470, type: !1343)
!11947 = !DILocalVariable(name: "addr", scope: !11939, file: !2237, line: 472, type: !61)
!11948 = !DILocation(line: 0, scope: !11939)
!11949 = !DILocation(line: 469, column: 60, scope: !11939)
!11950 = !DILocation(line: 472, column: 32, scope: !11939)
!11951 = !DILocation(line: 472, column: 22, scope: !11939)
!11952 = !DILocation(line: 472, column: 95, scope: !11939)
!11953 = !DILocation(line: 472, column: 76, scope: !11939)
!11954 = !DILocation(line: 472, column: 118, scope: !11939)
!11955 = !DILocation(line: 472, column: 74, scope: !11939)
!11956 = !DILocation(line: 472, column: 106, scope: !11939)
!11957 = !DILocation(line: 474, column: 14, scope: !11939)
!11958 = !DILocation(line: 475, column: 16, scope: !11959)
!11959 = distinct !DILexicalBlock(scope: !11939, file: !2237, line: 475, column: 9)
!11960 = !DILocation(line: 479, column: 1, scope: !11939)
!11961 = distinct !DISubprogram(name: "NOR_ErasePhysicalBlock", scope: !2237, file: !2237, line: 481, type: !11962, scopeLine: 482, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2236, retainedNodes: !11964)
!11962 = !DISubroutineType(types: !11963)
!11963 = !{!1343, !61}
!11964 = !{!11965, !11966}
!11965 = !DILocalVariable(name: "block_idx", arg: 1, scope: !11961, file: !2237, line: 481, type: !61)
!11966 = !DILocalVariable(name: "result", scope: !11961, file: !2237, line: 483, type: !1343)
!11967 = !DILocation(line: 0, scope: !11961)
!11968 = !DILocation(line: 484, column: 14, scope: !11961)
!11969 = !DILocation(line: 485, column: 16, scope: !11970)
!11970 = distinct !DILexicalBlock(scope: !11961, file: !2237, line: 485, column: 9)
!11971 = !DILocation(line: 489, column: 1, scope: !11961)
!11972 = distinct !DISubprogram(name: "NOR_BlockSize", scope: !2237, file: !2237, line: 492, type: !3922, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2236, retainedNodes: !11973)
!11973 = !{!11974, !11975, !11976}
!11974 = !DILocalVariable(name: "block_idx", arg: 1, scope: !11972, file: !2237, line: 492, type: !61)
!11975 = !DILocalVariable(name: "D", scope: !11972, file: !2237, line: 494, type: !11657)
!11976 = !DILocalVariable(name: "mtdData", scope: !11972, file: !2237, line: 495, type: !2245)
!11977 = !DILocation(line: 0, scope: !11972)
!11978 = !DILocation(line: 495, column: 60, scope: !11972)
!11979 = !DILocation(line: 496, column: 12, scope: !11972)
!11980 = !DILocation(line: 496, column: 5, scope: !11972)
!11981 = distinct !DISubprogram(name: "NOR_BlockIndex", scope: !2237, file: !2237, line: 499, type: !3922, scopeLine: 500, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2236, retainedNodes: !11982)
!11982 = !{!11983, !11984, !11985}
!11983 = !DILocalVariable(name: "block_addr", arg: 1, scope: !11981, file: !2237, line: 499, type: !61)
!11984 = !DILocalVariable(name: "D", scope: !11981, file: !2237, line: 501, type: !11657)
!11985 = !DILocalVariable(name: "mtdData", scope: !11981, file: !2237, line: 502, type: !2245)
!11986 = !DILocation(line: 0, scope: !11981)
!11987 = !DILocation(line: 502, column: 60, scope: !11981)
!11988 = !DILocation(line: 504, column: 12, scope: !11981)
!11989 = !DILocation(line: 504, column: 5, scope: !11981)
!11990 = distinct !DISubprogram(name: "NOR_Addr2BlockIndexOffset", scope: !2237, file: !2237, line: 510, type: !11991, scopeLine: 511, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2236, retainedNodes: !11993)
!11991 = !DISubroutineType(types: !11992)
!11992 = !{!1343, !61, !1400, !1400}
!11993 = !{!11994, !11995, !11996, !11997, !11998}
!11994 = !DILocalVariable(name: "block_addr", arg: 1, scope: !11990, file: !2237, line: 510, type: !61)
!11995 = !DILocalVariable(name: "block_index", arg: 2, scope: !11990, file: !2237, line: 510, type: !1400)
!11996 = !DILocalVariable(name: "offset", arg: 3, scope: !11990, file: !2237, line: 510, type: !1400)
!11997 = !DILocalVariable(name: "D", scope: !11990, file: !2237, line: 512, type: !11657)
!11998 = !DILocalVariable(name: "mtdData", scope: !11990, file: !2237, line: 513, type: !2245)
!11999 = !DILocation(line: 0, scope: !11990)
!12000 = !DILocation(line: 513, column: 60, scope: !11990)
!12001 = !DILocation(line: 519, column: 20, scope: !11990)
!12002 = !DILocation(line: 519, column: 18, scope: !11990)
!12003 = !DILocation(line: 520, column: 22, scope: !12004)
!12004 = distinct !DILexicalBlock(scope: !11990, file: !2237, line: 520, column: 9)
!12005 = !DILocation(line: 520, column: 9, scope: !11990)
!12006 = !DILocation(line: 524, column: 28, scope: !11990)
!12007 = !DILocation(line: 524, column: 26, scope: !11990)
!12008 = !DILocation(line: 524, column: 13, scope: !11990)
!12009 = !DILocation(line: 526, column: 5, scope: !11990)
!12010 = !DILocation(line: 527, column: 1, scope: !11990)
!12011 = distinct !DISubprogram(name: "NOR_BlockIndexOffset2Addr", scope: !2237, file: !2237, line: 532, type: !12012, scopeLine: 533, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2236, retainedNodes: !12014)
!12012 = !DISubroutineType(types: !12013)
!12013 = !{!1343, !61, !61, !1400}
!12014 = !{!12015, !12016, !12017, !12018, !12019}
!12015 = !DILocalVariable(name: "block_index", arg: 1, scope: !12011, file: !2237, line: 532, type: !61)
!12016 = !DILocalVariable(name: "offset", arg: 2, scope: !12011, file: !2237, line: 532, type: !61)
!12017 = !DILocalVariable(name: "addr", arg: 3, scope: !12011, file: !2237, line: 532, type: !1400)
!12018 = !DILocalVariable(name: "D", scope: !12011, file: !2237, line: 534, type: !11657)
!12019 = !DILocalVariable(name: "mtdData", scope: !12011, file: !2237, line: 535, type: !2245)
!12020 = !DILocation(line: 0, scope: !12011)
!12021 = !DILocation(line: 535, column: 60, scope: !12011)
!12022 = !DILocation(line: 537, column: 23, scope: !12011)
!12023 = !DILocation(line: 537, column: 13, scope: !12011)
!12024 = !DILocation(line: 537, column: 79, scope: !12011)
!12025 = !DILocation(line: 537, column: 60, scope: !12011)
!12026 = !DILocation(line: 537, column: 58, scope: !12011)
!12027 = !DILocation(line: 537, column: 88, scope: !12011)
!12028 = !DILocation(line: 537, column: 11, scope: !12011)
!12029 = !DILocation(line: 539, column: 5, scope: !12011)
!12030 = distinct !DISubprogram(name: "get_rawdisk_error_code", scope: !2237, file: !2237, line: 545, type: !12031, scopeLine: 546, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2236, retainedNodes: !12033)
!12031 = !DISubroutineType(types: !12032)
!12032 = !{!2293, !1343}
!12033 = !{!12034}
!12034 = !DILocalVariable(name: "ori_err_code", arg: 1, scope: !12030, file: !2237, line: 545, type: !1343)
!12035 = !DILocation(line: 0, scope: !12030)
!12036 = !DILocation(line: 547, column: 9, scope: !12030)
!12037 = !DILocation(line: 558, column: 9, scope: !12038)
!12038 = distinct !DILexicalBlock(scope: !12039, file: !2237, line: 558, column: 9)
!12039 = distinct !DILexicalBlock(scope: !12040, file: !2237, line: 558, column: 9)
!12040 = distinct !DILexicalBlock(scope: !12041, file: !2237, line: 558, column: 9)
!12041 = distinct !DILexicalBlock(scope: !12042, file: !2237, line: 557, column: 12)
!12042 = distinct !DILexicalBlock(scope: !12043, file: !2237, line: 555, column: 16)
!12043 = distinct !DILexicalBlock(scope: !12044, file: !2237, line: 553, column: 16)
!12044 = distinct !DILexicalBlock(scope: !12045, file: !2237, line: 551, column: 16)
!12045 = distinct !DILexicalBlock(scope: !12046, file: !2237, line: 549, column: 16)
!12046 = distinct !DILexicalBlock(scope: !12030, file: !2237, line: 547, column: 9)
!12047 = !DILocation(line: 560, column: 1, scope: !12030)
!12048 = distinct !DISubprogram(name: "get_block_size_from_address", scope: !2237, file: !2237, line: 561, type: !12049, scopeLine: 562, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2236, retainedNodes: !12052)
!12049 = !DISubroutineType(types: !12050)
!12050 = !{!12051, !61}
!12051 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_flash_block_t", file: !1578, line: 127, baseType: !2239)
!12052 = !{!12053, !12054, !12055}
!12053 = !DILocalVariable(name: "address", arg: 1, scope: !12048, file: !2237, line: 561, type: !61)
!12054 = !DILocalVariable(name: "block_size", scope: !12048, file: !2237, line: 563, type: !61)
!12055 = !DILocalVariable(name: "block_index", scope: !12048, file: !2237, line: 564, type: !61)
!12056 = !DILocation(line: 0, scope: !12048)
!12057 = !DILocation(line: 566, column: 19, scope: !12048)
!12058 = !DILocation(line: 567, column: 21, scope: !12059)
!12059 = distinct !DILexicalBlock(scope: !12048, file: !2237, line: 567, column: 9)
!12060 = !DILocation(line: 567, column: 9, scope: !12048)
!12061 = !DILocation(line: 568, column: 9, scope: !12062)
!12062 = distinct !DILexicalBlock(scope: !12063, file: !2237, line: 568, column: 9)
!12063 = distinct !DILexicalBlock(scope: !12064, file: !2237, line: 568, column: 9)
!12064 = distinct !DILexicalBlock(scope: !12065, file: !2237, line: 568, column: 9)
!12065 = distinct !DILexicalBlock(scope: !12059, file: !2237, line: 567, column: 45)
!12066 = !DILocation(line: 570, column: 18, scope: !12048)
!12067 = !DILocation(line: 571, column: 9, scope: !12048)
!12068 = !DILocation(line: 574, column: 9, scope: !12069)
!12069 = distinct !DILexicalBlock(scope: !12070, file: !2237, line: 573, column: 38)
!12070 = distinct !DILexicalBlock(scope: !12071, file: !2237, line: 573, column: 16)
!12071 = distinct !DILexicalBlock(scope: !12048, file: !2237, line: 571, column: 9)
!12072 = !DILocation(line: 576, column: 9, scope: !12073)
!12073 = distinct !DILexicalBlock(scope: !12074, file: !2237, line: 575, column: 39)
!12074 = distinct !DILexicalBlock(scope: !12070, file: !2237, line: 575, column: 16)
!12075 = !DILocation(line: 578, column: 9, scope: !12076)
!12076 = distinct !DILexicalBlock(scope: !12077, file: !2237, line: 578, column: 9)
!12077 = distinct !DILexicalBlock(scope: !12078, file: !2237, line: 578, column: 9)
!12078 = distinct !DILexicalBlock(scope: !12079, file: !2237, line: 578, column: 9)
!12079 = distinct !DILexicalBlock(scope: !12074, file: !2237, line: 577, column: 12)
!12080 = !DILocation(line: 0, scope: !12071)
!12081 = !DILocation(line: 580, column: 1, scope: !12048)
!12082 = distinct !DISubprogram(name: "hal_flash_init", scope: !2237, file: !2237, line: 583, type: !9789, scopeLine: 584, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2236, retainedNodes: !262)
!12083 = !DILocation(line: 585, column: 5, scope: !12082)
!12084 = !DILocation(line: 586, column: 5, scope: !12082)
!12085 = distinct !DISubprogram(name: "hal_flash_deinit", scope: !2237, file: !2237, line: 589, type: !9789, scopeLine: 590, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2236, retainedNodes: !262)
!12086 = !DILocation(line: 591, column: 5, scope: !12085)
!12087 = distinct !DISubprogram(name: "hal_flash_erase", scope: !2237, file: !2237, line: 595, type: !12088, scopeLine: 596, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2236, retainedNodes: !12090)
!12088 = !DISubroutineType(types: !12089)
!12089 = !{!2293, !61, !12051}
!12090 = !{!12091, !12092, !12093, !12094, !12095}
!12091 = !DILocalVariable(name: "start_address", arg: 1, scope: !12087, file: !2237, line: 595, type: !61)
!12092 = !DILocalVariable(name: "block", arg: 2, scope: !12087, file: !2237, line: 595, type: !12051)
!12093 = !DILocalVariable(name: "result", scope: !12087, file: !2237, line: 597, type: !1343)
!12094 = !DILocalVariable(name: "block_index", scope: !12087, file: !2237, line: 598, type: !61)
!12095 = !DILocalVariable(name: "erase_type", scope: !12087, file: !2237, line: 599, type: !61)
!12096 = !DILocation(line: 0, scope: !12087)
!12097 = !DILocation(line: 601, column: 9, scope: !12087)
!12098 = !DILocation(line: 602, column: 28, scope: !12099)
!12099 = distinct !DILexicalBlock(scope: !12100, file: !2237, line: 602, column: 13)
!12100 = distinct !DILexicalBlock(scope: !12101, file: !2237, line: 601, column: 38)
!12101 = distinct !DILexicalBlock(scope: !12087, file: !2237, line: 601, column: 9)
!12102 = !DILocation(line: 602, column: 37, scope: !12099)
!12103 = !DILocation(line: 602, column: 13, scope: !12100)
!12104 = !DILocation(line: 607, column: 28, scope: !12105)
!12105 = distinct !DILexicalBlock(scope: !12106, file: !2237, line: 607, column: 13)
!12106 = distinct !DILexicalBlock(scope: !12107, file: !2237, line: 606, column: 46)
!12107 = distinct !DILexicalBlock(scope: !12101, file: !2237, line: 606, column: 16)
!12108 = !DILocation(line: 607, column: 38, scope: !12105)
!12109 = !DILocation(line: 607, column: 13, scope: !12106)
!12110 = !DILocation(line: 612, column: 28, scope: !12111)
!12111 = distinct !DILexicalBlock(scope: !12112, file: !2237, line: 612, column: 13)
!12112 = distinct !DILexicalBlock(scope: !12113, file: !2237, line: 611, column: 46)
!12113 = distinct !DILexicalBlock(scope: !12107, file: !2237, line: 611, column: 16)
!12114 = !DILocation(line: 612, column: 38, scope: !12111)
!12115 = !DILocation(line: 612, column: 13, scope: !12112)
!12116 = !DILocation(line: 0, scope: !12101)
!12117 = !DILocation(line: 621, column: 19, scope: !12087)
!12118 = !DILocation(line: 622, column: 21, scope: !12119)
!12119 = distinct !DILexicalBlock(scope: !12087, file: !2237, line: 622, column: 9)
!12120 = !DILocation(line: 622, column: 9, scope: !12087)
!12121 = !DILocation(line: 626, column: 17, scope: !12087)
!12122 = !DILocation(line: 627, column: 14, scope: !12087)
!12123 = !DILocation(line: 628, column: 16, scope: !12124)
!12124 = distinct !DILexicalBlock(scope: !12087, file: !2237, line: 628, column: 9)
!12125 = !DILocation(line: 628, column: 9, scope: !12087)
!12126 = !DILocation(line: 629, column: 16, scope: !12127)
!12127 = distinct !DILexicalBlock(scope: !12124, file: !2237, line: 628, column: 38)
!12128 = !DILocation(line: 629, column: 9, scope: !12127)
!12129 = !DILocation(line: 632, column: 1, scope: !12087)
!12130 = distinct !DISubprogram(name: "hal_flash_read", scope: !2237, file: !2237, line: 634, type: !12131, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2236, retainedNodes: !12133)
!12131 = !DISubroutineType(types: !12132)
!12132 = !{!2293, !61, !872, !61}
!12133 = !{!12134, !12135, !12136, !12137, !12138}
!12134 = !DILocalVariable(name: "start_address", arg: 1, scope: !12130, file: !2237, line: 634, type: !61)
!12135 = !DILocalVariable(name: "buffer", arg: 2, scope: !12130, file: !2237, line: 634, type: !872)
!12136 = !DILocalVariable(name: "length", arg: 3, scope: !12130, file: !2237, line: 634, type: !61)
!12137 = !DILocalVariable(name: "D", scope: !12130, file: !2237, line: 636, type: !11657)
!12138 = !DILocalVariable(name: "result", scope: !12130, file: !2237, line: 637, type: !1343)
!12139 = !DILocation(line: 0, scope: !12130)
!12140 = !DILocation(line: 639, column: 14, scope: !12130)
!12141 = !DILocation(line: 641, column: 16, scope: !12142)
!12142 = distinct !DILexicalBlock(scope: !12130, file: !2237, line: 641, column: 9)
!12143 = !DILocation(line: 641, column: 9, scope: !12130)
!12144 = !DILocation(line: 642, column: 16, scope: !12145)
!12145 = distinct !DILexicalBlock(scope: !12142, file: !2237, line: 641, column: 38)
!12146 = !DILocation(line: 642, column: 9, scope: !12145)
!12147 = !DILocation(line: 645, column: 1, scope: !12130)
!12148 = distinct !DISubprogram(name: "hal_flash_write", scope: !2237, file: !2237, line: 647, type: !12149, scopeLine: 648, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2236, retainedNodes: !12151)
!12149 = !DISubroutineType(types: !12150)
!12150 = !{!2293, !61, !6469, !61}
!12151 = !{!12152, !12153, !12154, !12155, !12156}
!12152 = !DILocalVariable(name: "address", arg: 1, scope: !12148, file: !2237, line: 647, type: !61)
!12153 = !DILocalVariable(name: "data", arg: 2, scope: !12148, file: !2237, line: 647, type: !6469)
!12154 = !DILocalVariable(name: "length", arg: 3, scope: !12148, file: !2237, line: 647, type: !61)
!12155 = !DILocalVariable(name: "D", scope: !12148, file: !2237, line: 649, type: !11657)
!12156 = !DILocalVariable(name: "result", scope: !12148, file: !2237, line: 650, type: !1343)
!12157 = !DILocation(line: 0, scope: !12148)
!12158 = !DILocation(line: 652, column: 14, scope: !12148)
!12159 = !DILocation(line: 653, column: 16, scope: !12160)
!12160 = distinct !DILexicalBlock(scope: !12148, file: !2237, line: 653, column: 9)
!12161 = !DILocation(line: 653, column: 9, scope: !12148)
!12162 = !DILocation(line: 654, column: 16, scope: !12163)
!12163 = distinct !DILexicalBlock(scope: !12160, file: !2237, line: 653, column: 38)
!12164 = !DILocation(line: 654, column: 9, scope: !12163)
!12165 = !DILocation(line: 668, column: 1, scope: !12148)
!12166 = distinct !DISubprogram(name: "BlockAddress", scope: !2298, file: !2298, line: 111, type: !12167, scopeLine: 112, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2297, retainedNodes: !12169)
!12167 = !DISubroutineType(types: !12168)
!12168 = !{!65, !65, !61}
!12169 = !{!12170, !12171, !12172, !12173, !12174, !12175}
!12170 = !DILocalVariable(name: "DriverData", arg: 1, scope: !12166, file: !2298, line: 111, type: !65)
!12171 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !12166, file: !2298, line: 111, type: !61)
!12172 = !DILocalVariable(name: "D", scope: !12166, file: !2298, line: 113, type: !2319)
!12173 = !DILocalVariable(name: "addr", scope: !12166, file: !2298, line: 114, type: !61)
!12174 = !DILocalVariable(name: "region", scope: !12166, file: !2298, line: 115, type: !61)
!12175 = !DILocalVariable(name: "BlockUpperBound", scope: !12166, file: !2298, line: 115, type: !61)
!12176 = !DILocation(line: 0, scope: !12166)
!12177 = !DILocation(line: 117, column: 26, scope: !12166)
!12178 = !DILocation(line: 117, column: 40, scope: !12166)
!12179 = !DILocation(line: 118, column: 28, scope: !12166)
!12180 = !DILocation(line: 118, column: 5, scope: !12166)
!12181 = !DILocation(line: 119, column: 39, scope: !12182)
!12182 = distinct !DILexicalBlock(scope: !12166, file: !2298, line: 118, column: 43)
!12183 = !DILocation(line: 119, column: 76, scope: !12182)
!12184 = !DILocation(line: 119, column: 52, scope: !12182)
!12185 = !DILocation(line: 119, column: 14, scope: !12182)
!12186 = !DILocation(line: 120, column: 15, scope: !12182)
!12187 = !DILocation(line: 121, column: 50, scope: !12182)
!12188 = !DILocation(line: 121, column: 25, scope: !12182)
!12189 = distinct !{!12189, !12180, !12190}
!12190 = !DILocation(line: 122, column: 5, scope: !12166)
!12191 = !DILocation(line: 123, column: 68, scope: !12166)
!12192 = !DILocation(line: 123, column: 44, scope: !12166)
!12193 = !DILocation(line: 123, column: 25, scope: !12166)
!12194 = !DILocation(line: 123, column: 107, scope: !12166)
!12195 = !DILocation(line: 123, column: 83, scope: !12166)
!12196 = !DILocation(line: 123, column: 10, scope: !12166)
!12197 = !DILocation(line: 125, column: 16, scope: !12166)
!12198 = !DILocation(line: 125, column: 25, scope: !12166)
!12199 = !DILocation(line: 125, column: 5, scope: !12166)
!12200 = distinct !DISubprogram(name: "MapWindow", scope: !2298, file: !2298, line: 180, type: !1931, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2297, retainedNodes: !12201)
!12201 = !{!12202, !12203, !12204, !12205}
!12202 = !DILocalVariable(name: "DriveData", arg: 1, scope: !12200, file: !2298, line: 180, type: !65)
!12203 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !12200, file: !2298, line: 180, type: !61)
!12204 = !DILocalVariable(name: "WindowIndex", arg: 3, scope: !12200, file: !2298, line: 180, type: !61)
!12205 = !DILocalVariable(name: "D", scope: !12200, file: !2298, line: 182, type: !2319)
!12206 = !DILocation(line: 0, scope: !12200)
!12207 = !DILocation(line: 185, column: 5, scope: !12208)
!12208 = distinct !DILexicalBlock(scope: !12209, file: !2298, line: 185, column: 5)
!12209 = distinct !DILexicalBlock(scope: !12200, file: !2298, line: 185, column: 5)
!12210 = !DILocation(line: 185, column: 5, scope: !12209)
!12211 = !DILocation(line: 185, column: 5, scope: !12212)
!12212 = distinct !DILexicalBlock(scope: !12208, file: !2298, line: 185, column: 5)
!12213 = !DILocation(line: 186, column: 27, scope: !12200)
!12214 = !DILocation(line: 186, column: 19, scope: !12200)
!12215 = !DILocation(line: 186, column: 8, scope: !12200)
!12216 = !DILocation(line: 186, column: 17, scope: !12200)
!12217 = !DILocation(line: 188, column: 5, scope: !12200)
!12218 = !DILocation(line: 0, scope: !2312)
!12219 = !DILocation(line: 142, column: 12, scope: !12220)
!12220 = distinct !DILexicalBlock(scope: !2312, file: !2298, line: 142, column: 9)
!12221 = !DILocation(line: 142, column: 34, scope: !12220)
!12222 = !DILocation(line: 142, column: 64, scope: !12220)
!12223 = !DILocation(line: 142, column: 75, scope: !12220)
!12224 = !DILocation(line: 142, column: 9, scope: !2312)
!12225 = !DILocation(line: 143, column: 79, scope: !12226)
!12226 = distinct !DILexicalBlock(scope: !12227, file: !2298, line: 143, column: 13)
!12227 = distinct !DILexicalBlock(scope: !12220, file: !2298, line: 142, column: 99)
!12228 = !DILocation(line: 143, column: 13, scope: !12227)
!12229 = !DILocation(line: 144, column: 72, scope: !12230)
!12230 = distinct !DILexicalBlock(scope: !12231, file: !2298, line: 144, column: 17)
!12231 = distinct !DILexicalBlock(scope: !12226, file: !2298, line: 143, column: 94)
!12232 = !DILocation(line: 144, column: 83, scope: !12230)
!12233 = !DILocation(line: 144, column: 17, scope: !12231)
!12234 = !DILocation(line: 145, column: 87, scope: !12235)
!12235 = distinct !DILexicalBlock(scope: !12236, file: !2298, line: 145, column: 21)
!12236 = distinct !DILexicalBlock(scope: !12230, file: !2298, line: 144, column: 107)
!12237 = !DILocation(line: 145, column: 21, scope: !12236)
!12238 = !DILocation(line: 146, column: 33, scope: !12239)
!12239 = distinct !DILexicalBlock(scope: !12235, file: !2298, line: 145, column: 102)
!12240 = !DILocation(line: 147, column: 25, scope: !12241)
!12241 = distinct !DILexicalBlock(scope: !12239, file: !2298, line: 147, column: 25)
!12242 = !DILocation(line: 147, column: 62, scope: !12241)
!12243 = !DILocation(line: 147, column: 34, scope: !12241)
!12244 = !DILocation(line: 147, column: 25, scope: !12239)
!12245 = !DILocation(line: 148, column: 91, scope: !12246)
!12246 = distinct !DILexicalBlock(scope: !12241, file: !2298, line: 147, column: 106)
!12247 = !DILocation(line: 149, column: 111, scope: !12246)
!12248 = !DILocation(line: 149, column: 101, scope: !12246)
!12249 = !DILocation(line: 149, column: 87, scope: !12246)
!12250 = !DILocation(line: 149, column: 99, scope: !12246)
!12251 = !DILocation(line: 150, column: 37, scope: !12246)
!12252 = !DILocation(line: 150, column: 34, scope: !12246)
!12253 = !DILocation(line: 151, column: 21, scope: !12246)
!12254 = !DILocation(line: 152, column: 91, scope: !12255)
!12255 = distinct !DILexicalBlock(scope: !12241, file: !2298, line: 151, column: 28)
!12256 = !DILocation(line: 153, column: 111, scope: !12255)
!12257 = !DILocation(line: 153, column: 101, scope: !12255)
!12258 = !DILocation(line: 153, column: 87, scope: !12255)
!12259 = !DILocation(line: 153, column: 99, scope: !12255)
!12260 = !DILocation(line: 154, column: 34, scope: !12255)
!12261 = !DILocation(line: 157, column: 32, scope: !12262)
!12262 = distinct !DILexicalBlock(scope: !12235, file: !2298, line: 156, column: 24)
!12263 = !DILocation(line: 158, column: 83, scope: !12262)
!12264 = !DILocation(line: 159, column: 60, scope: !12262)
!12265 = !DILocation(line: 159, column: 33, scope: !12262)
!12266 = !DILocation(line: 159, column: 30, scope: !12262)
!12267 = !DILocation(line: 162, column: 29, scope: !12268)
!12268 = distinct !DILexicalBlock(scope: !12230, file: !2298, line: 161, column: 20)
!12269 = !DILocation(line: 163, column: 83, scope: !12268)
!12270 = !DILocation(line: 164, column: 103, scope: !12268)
!12271 = !DILocation(line: 164, column: 93, scope: !12268)
!12272 = !DILocation(line: 164, column: 79, scope: !12268)
!12273 = !DILocation(line: 164, column: 91, scope: !12268)
!12274 = !DILocation(line: 165, column: 56, scope: !12268)
!12275 = !DILocation(line: 165, column: 29, scope: !12268)
!12276 = !DILocation(line: 165, column: 26, scope: !12268)
!12277 = !DILocation(line: 168, column: 24, scope: !12278)
!12278 = distinct !DILexicalBlock(scope: !12226, file: !2298, line: 167, column: 16)
!12279 = !DILocation(line: 169, column: 75, scope: !12278)
!12280 = !DILocation(line: 170, column: 50, scope: !12278)
!12281 = !DILocation(line: 170, column: 22, scope: !12278)
!12282 = !DILocation(line: 173, column: 21, scope: !12283)
!12283 = distinct !DILexicalBlock(scope: !12220, file: !2298, line: 172, column: 12)
!12284 = !DILocation(line: 174, column: 75, scope: !12283)
!12285 = !DILocation(line: 175, column: 95, scope: !12283)
!12286 = !DILocation(line: 175, column: 85, scope: !12283)
!12287 = !DILocation(line: 175, column: 71, scope: !12283)
!12288 = !DILocation(line: 175, column: 83, scope: !12283)
!12289 = !DILocation(line: 176, column: 46, scope: !12283)
!12290 = !DILocation(line: 176, column: 18, scope: !12283)
!12291 = !DILocation(line: 0, scope: !12220)
!12292 = !DILocation(line: 178, column: 5, scope: !2312)
!12293 = distinct !DISubprogram(name: "BlockSize", scope: !2298, file: !2298, line: 191, type: !2313, scopeLine: 192, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2297, retainedNodes: !12294)
!12294 = !{!12295, !12296, !12297, !12298, !12299}
!12295 = !DILocalVariable(name: "DriveData", arg: 1, scope: !12293, file: !2298, line: 191, type: !65)
!12296 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !12293, file: !2298, line: 191, type: !61)
!12297 = !DILocalVariable(name: "D", scope: !12293, file: !2298, line: 193, type: !2319)
!12298 = !DILocalVariable(name: "region", scope: !12293, file: !2298, line: 194, type: !61)
!12299 = !DILocalVariable(name: "BlockUpperBound", scope: !12293, file: !2298, line: 194, type: !61)
!12300 = !DILocation(line: 0, scope: !12293)
!12301 = !DILocation(line: 196, column: 26, scope: !12293)
!12302 = !DILocation(line: 196, column: 45, scope: !12293)
!12303 = !DILocation(line: 197, column: 28, scope: !12293)
!12304 = !DILocation(line: 197, column: 5, scope: !12293)
!12305 = !DILocation(line: 198, column: 15, scope: !12306)
!12306 = distinct !DILexicalBlock(scope: !12293, file: !2298, line: 197, column: 43)
!12307 = !DILocation(line: 199, column: 50, scope: !12306)
!12308 = !DILocation(line: 199, column: 25, scope: !12306)
!12309 = distinct !{!12309, !12304, !12310}
!12310 = !DILocation(line: 200, column: 5, scope: !12293)
!12311 = !DILocation(line: 202, column: 35, scope: !12293)
!12312 = !DILocation(line: 202, column: 5, scope: !12293)
!12313 = distinct !DISubprogram(name: "BlockIndex", scope: !2298, file: !2298, line: 205, type: !2313, scopeLine: 206, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2297, retainedNodes: !12314)
!12314 = !{!12315, !12316, !12317, !12318, !12319, !12320}
!12315 = !DILocalVariable(name: "DriveData", arg: 1, scope: !12313, file: !2298, line: 205, type: !65)
!12316 = !DILocalVariable(name: "blk_addr", arg: 2, scope: !12313, file: !2298, line: 205, type: !61)
!12317 = !DILocalVariable(name: "D", scope: !12313, file: !2298, line: 207, type: !2319)
!12318 = !DILocalVariable(name: "region", scope: !12313, file: !2298, line: 208, type: !61)
!12319 = !DILocalVariable(name: "BlockUpperAddr", scope: !12313, file: !2298, line: 208, type: !61)
!12320 = !DILocalVariable(name: "blk_idx", scope: !12313, file: !2298, line: 209, type: !61)
!12321 = !DILocation(line: 0, scope: !12313)
!12322 = !DILocation(line: 211, column: 25, scope: !12313)
!12323 = !DILocation(line: 211, column: 44, scope: !12313)
!12324 = !DILocation(line: 211, column: 81, scope: !12313)
!12325 = !DILocation(line: 211, column: 57, scope: !12313)
!12326 = !DILocation(line: 213, column: 28, scope: !12313)
!12327 = !DILocation(line: 213, column: 40, scope: !12313)
!12328 = !DILocation(line: 213, column: 66, scope: !12313)
!12329 = !DILocation(line: 213, column: 5, scope: !12313)
!12330 = !DILocation(line: 214, column: 17, scope: !12331)
!12331 = distinct !DILexicalBlock(scope: !12313, file: !2298, line: 213, column: 78)
!12332 = !DILocation(line: 215, column: 18, scope: !12331)
!12333 = !DILocation(line: 216, column: 15, scope: !12331)
!12334 = !DILocation(line: 217, column: 48, scope: !12331)
!12335 = !DILocation(line: 217, column: 85, scope: !12331)
!12336 = !DILocation(line: 217, column: 61, scope: !12331)
!12337 = distinct !{!12337, !12329, !12338}
!12338 = !DILocation(line: 218, column: 5, scope: !12313)
!12339 = !DILocation(line: 221, column: 53, scope: !12340)
!12340 = distinct !DILexicalBlock(scope: !12341, file: !2298, line: 220, column: 37)
!12341 = distinct !DILexicalBlock(scope: !12313, file: !2298, line: 220, column: 9)
!12342 = !DILocation(line: 221, column: 29, scope: !12340)
!12343 = !DILocation(line: 221, column: 17, scope: !12340)
!12344 = !DILocation(line: 222, column: 5, scope: !12340)
!12345 = !DILocation(line: 0, scope: !12341)
!12346 = !DILocation(line: 225, column: 5, scope: !12313)
!12347 = distinct !DISubprogram(name: "get_ROM_BASE", scope: !2298, file: !2298, line: 232, type: !4174, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2297, retainedNodes: !262)
!12348 = !DILocation(line: 238, column: 5, scope: !12347)
!12349 = distinct !DISubprogram(name: "get_NOR_FLASH_BASE_ADDRESS", scope: !2298, file: !2298, line: 243, type: !4174, scopeLine: 244, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2297, retainedNodes: !262)
!12350 = !DILocation(line: 245, column: 5, scope: !12349)
!12351 = distinct !DISubprogram(name: "get_Dual_NOR_FLASH_SIZE", scope: !2298, file: !2298, line: 249, type: !4174, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2297, retainedNodes: !262)
!12352 = !DILocation(line: 254, column: 5, scope: !12351)
!12353 = distinct !DISubprogram(name: "get_NOR_ALLOCATED_FAT_SPACE", scope: !2298, file: !2298, line: 259, type: !4174, scopeLine: 260, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2297, retainedNodes: !262)
!12354 = !DILocation(line: 261, column: 5, scope: !12353)
!12355 = distinct !DISubprogram(name: "DelayAWhile_UST", scope: !2298, file: !2298, line: 271, type: !7725, scopeLine: 272, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2297, retainedNodes: !12356)
!12356 = !{!12357, !12358}
!12357 = !DILocalVariable(name: "delay", arg: 1, scope: !12355, file: !2298, line: 271, type: !61)
!12358 = !DILocalVariable(name: "ret", scope: !12355, file: !2298, line: 276, type: !3329)
!12359 = !DILocation(line: 0, scope: !12355)
!12360 = !DILocation(line: 277, column: 11, scope: !12355)
!12361 = !DILocation(line: 278, column: 13, scope: !12362)
!12362 = distinct !DILexicalBlock(scope: !12355, file: !2298, line: 278, column: 9)
!12363 = !DILocation(line: 278, column: 9, scope: !12355)
!12364 = !DILocation(line: 279, column: 9, scope: !12365)
!12365 = distinct !DILexicalBlock(scope: !12366, file: !2298, line: 279, column: 9)
!12366 = distinct !DILexicalBlock(scope: !12367, file: !2298, line: 279, column: 9)
!12367 = distinct !DILexicalBlock(scope: !12368, file: !2298, line: 279, column: 9)
!12368 = distinct !DILexicalBlock(scope: !12362, file: !2298, line: 278, column: 35)
!12369 = !DILocation(line: 282, column: 1, scope: !12355)
!12370 = !DILocation(line: 96, column: 5, scope: !2370)
!12371 = !DILocation(line: 96, column: 23, scope: !2370)
!12372 = !DILocation(line: 98, column: 9, scope: !12373)
!12373 = distinct !DILexicalBlock(scope: !2370, file: !2371, line: 98, column: 9)
!12374 = !DILocation(line: 98, column: 9, scope: !2370)
!12375 = !DILocation(line: 101, column: 10, scope: !2370)
!12376 = !DILocation(line: 103, column: 12, scope: !2370)
!12377 = !DILocation(line: 103, column: 31, scope: !2370)
!12378 = !DILocation(line: 104, column: 5, scope: !2370)
!12379 = !DILocation(line: 106, column: 5, scope: !2370)
!12380 = !DILocation(line: 108, column: 12, scope: !2370)
!12381 = !DILocation(line: 0, scope: !2370)
!12382 = !DILocation(line: 109, column: 12, scope: !2370)
!12383 = !DILocation(line: 110, column: 15, scope: !12384)
!12384 = distinct !DILexicalBlock(scope: !2370, file: !2371, line: 110, column: 9)
!12385 = !DILocation(line: 110, column: 24, scope: !12384)
!12386 = !DILocation(line: 111, column: 9, scope: !12387)
!12387 = distinct !DILexicalBlock(scope: !12384, file: !2371, line: 110, column: 43)
!12388 = !DILocation(line: 113, column: 24, scope: !12389)
!12389 = distinct !DILexicalBlock(scope: !2370, file: !2371, line: 113, column: 9)
!12390 = !DILocation(line: 113, column: 15, scope: !12389)
!12391 = !DILocation(line: 114, column: 9, scope: !12392)
!12392 = distinct !DILexicalBlock(scope: !12389, file: !2371, line: 113, column: 43)
!12393 = !DILocation(line: 115, column: 5, scope: !12392)
!12394 = !DILocation(line: 118, column: 9, scope: !2370)
!12395 = !DILocation(line: 119, column: 9, scope: !12396)
!12396 = distinct !DILexicalBlock(scope: !12397, file: !2371, line: 118, column: 23)
!12397 = distinct !DILexicalBlock(scope: !2370, file: !2371, line: 118, column: 9)
!12398 = !DILocation(line: 122, column: 9, scope: !12396)
!12399 = !DILocation(line: 128, column: 9, scope: !12396)
!12400 = !DILocation(line: 131, column: 9, scope: !12396)
!12401 = !DILocation(line: 134, column: 9, scope: !12396)
!12402 = !DILocation(line: 137, column: 9, scope: !12396)
!12403 = !DILocation(line: 140, column: 9, scope: !12396)
!12404 = !DILocation(line: 142, column: 9, scope: !12396)
!12405 = !DILocation(line: 143, column: 9, scope: !12396)
!12406 = !DILocation(line: 144, column: 9, scope: !12396)
!12407 = !DILocation(line: 147, column: 9, scope: !12396)
!12408 = !DILocation(line: 149, column: 9, scope: !12396)
!12409 = !DILocation(line: 150, column: 5, scope: !12396)
!12410 = !DILocation(line: 153, column: 9, scope: !2370)
!12411 = !DILocation(line: 155, column: 9, scope: !12412)
!12412 = distinct !DILexicalBlock(scope: !12413, file: !2371, line: 153, column: 23)
!12413 = distinct !DILexicalBlock(scope: !2370, file: !2371, line: 153, column: 9)
!12414 = !DILocation(line: 160, column: 9, scope: !12412)
!12415 = !DILocation(line: 162, column: 9, scope: !12412)
!12416 = !DILocation(line: 164, column: 9, scope: !12412)
!12417 = !DILocation(line: 166, column: 9, scope: !12412)
!12418 = !DILocation(line: 168, column: 9, scope: !12412)
!12419 = !DILocation(line: 170, column: 9, scope: !12412)
!12420 = !DILocation(line: 172, column: 9, scope: !12412)
!12421 = !DILocation(line: 174, column: 9, scope: !12412)
!12422 = !DILocation(line: 176, column: 9, scope: !12412)
!12423 = !DILocation(line: 179, column: 9, scope: !12412)
!12424 = !DILocation(line: 181, column: 9, scope: !12412)
!12425 = !DILocation(line: 183, column: 9, scope: !12412)
!12426 = !DILocation(line: 185, column: 9, scope: !12412)
!12427 = !DILocation(line: 186, column: 9, scope: !12412)
!12428 = !DILocation(line: 188, column: 9, scope: !12412)
!12429 = !DILocation(line: 189, column: 5, scope: !12412)
!12430 = !DILocation(line: 192, column: 5, scope: !2370)
!12431 = !DILocation(line: 195, column: 5, scope: !2370)
!12432 = !DILocation(line: 197, column: 5, scope: !2370)
!12433 = !DILocation(line: 199, column: 5, scope: !2370)
!12434 = !DILocation(line: 200, column: 1, scope: !2370)
!12435 = distinct !DISubprogram(name: "pmu_init_power_mode", scope: !2371, file: !2371, line: 650, type: !12436, scopeLine: 651, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2372, retainedNodes: !12440)
!12436 = !DISubroutineType(types: !12437)
!12437 = !{null, !12438}
!12438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12439, size: 32)
!12439 = !DICompositeType(tag: DW_TAG_array_type, baseType: !76, size: 64, elements: !863)
!12440 = !{!12441, !12442}
!12441 = !DILocalVariable(name: "power_mode_setting", arg: 1, scope: !12435, file: !2371, line: 650, type: !12438)
!12442 = !DILocalVariable(name: "i", scope: !12435, file: !2371, line: 652, type: !16)
!12443 = !DILocation(line: 0, scope: !12435)
!12444 = !DILocation(line: 655, column: 5, scope: !12445)
!12445 = distinct !DILexicalBlock(scope: !12435, file: !2371, line: 655, column: 5)
!12446 = !DILocation(line: 656, column: 70, scope: !12447)
!12447 = distinct !DILexicalBlock(scope: !12448, file: !2371, line: 655, column: 29)
!12448 = distinct !DILexicalBlock(scope: !12445, file: !2371, line: 655, column: 5)
!12449 = !DILocation(line: 656, column: 91, scope: !12447)
!12450 = !DILocation(line: 656, column: 76, scope: !12447)
!12451 = !DILocation(line: 656, column: 9, scope: !12447)
!12452 = !DILocation(line: 657, column: 91, scope: !12447)
!12453 = !DILocation(line: 657, column: 76, scope: !12447)
!12454 = !DILocation(line: 657, column: 9, scope: !12447)
!12455 = !DILocation(line: 658, column: 91, scope: !12447)
!12456 = !DILocation(line: 658, column: 76, scope: !12447)
!12457 = !DILocation(line: 658, column: 9, scope: !12447)
!12458 = !DILocation(line: 659, column: 91, scope: !12447)
!12459 = !DILocation(line: 659, column: 76, scope: !12447)
!12460 = !DILocation(line: 659, column: 9, scope: !12447)
!12461 = !DILocation(line: 660, column: 91, scope: !12447)
!12462 = !DILocation(line: 660, column: 76, scope: !12447)
!12463 = !DILocation(line: 660, column: 9, scope: !12447)
!12464 = !DILocation(line: 661, column: 91, scope: !12447)
!12465 = !DILocation(line: 661, column: 76, scope: !12447)
!12466 = !DILocation(line: 661, column: 9, scope: !12447)
!12467 = !DILocation(line: 662, column: 91, scope: !12447)
!12468 = !DILocation(line: 662, column: 76, scope: !12447)
!12469 = !DILocation(line: 662, column: 9, scope: !12447)
!12470 = !DILocation(line: 663, column: 91, scope: !12447)
!12471 = !DILocation(line: 663, column: 76, scope: !12447)
!12472 = !DILocation(line: 663, column: 9, scope: !12447)
!12473 = !DILocation(line: 664, column: 91, scope: !12447)
!12474 = !DILocation(line: 664, column: 76, scope: !12447)
!12475 = !DILocation(line: 664, column: 9, scope: !12447)
!12476 = !DILocation(line: 665, column: 91, scope: !12447)
!12477 = !DILocation(line: 665, column: 76, scope: !12447)
!12478 = !DILocation(line: 665, column: 9, scope: !12447)
!12479 = !DILocation(line: 655, column: 19, scope: !12448)
!12480 = distinct !{!12480, !12444, !12481}
!12481 = !DILocation(line: 666, column: 5, scope: !12445)
!12482 = !DILocation(line: 667, column: 5, scope: !12435)
!12483 = !DILocation(line: 668, column: 5, scope: !12435)
!12484 = !DILocation(line: 671, column: 5, scope: !12485)
!12485 = distinct !DILexicalBlock(scope: !12435, file: !2371, line: 671, column: 5)
!12486 = !DILocation(line: 672, column: 74, scope: !12487)
!12487 = distinct !DILexicalBlock(scope: !12488, file: !2371, line: 671, column: 29)
!12488 = distinct !DILexicalBlock(scope: !12485, file: !2371, line: 671, column: 5)
!12489 = !DILocation(line: 672, column: 100, scope: !12487)
!12490 = !DILocation(line: 672, column: 80, scope: !12487)
!12491 = !DILocation(line: 672, column: 155, scope: !12487)
!12492 = !DILocation(line: 672, column: 131, scope: !12487)
!12493 = !DILocation(line: 672, column: 126, scope: !12487)
!12494 = !DILocation(line: 672, column: 9, scope: !12487)
!12495 = !DILocation(line: 673, column: 100, scope: !12487)
!12496 = !DILocation(line: 673, column: 80, scope: !12487)
!12497 = !DILocation(line: 673, column: 131, scope: !12487)
!12498 = !DILocation(line: 673, column: 126, scope: !12487)
!12499 = !DILocation(line: 673, column: 9, scope: !12487)
!12500 = !DILocation(line: 674, column: 100, scope: !12487)
!12501 = !DILocation(line: 674, column: 80, scope: !12487)
!12502 = !DILocation(line: 674, column: 131, scope: !12487)
!12503 = !DILocation(line: 674, column: 126, scope: !12487)
!12504 = !DILocation(line: 674, column: 9, scope: !12487)
!12505 = !DILocation(line: 675, column: 100, scope: !12487)
!12506 = !DILocation(line: 675, column: 80, scope: !12487)
!12507 = !DILocation(line: 675, column: 131, scope: !12487)
!12508 = !DILocation(line: 675, column: 126, scope: !12487)
!12509 = !DILocation(line: 675, column: 9, scope: !12487)
!12510 = !DILocation(line: 676, column: 100, scope: !12487)
!12511 = !DILocation(line: 676, column: 80, scope: !12487)
!12512 = !DILocation(line: 676, column: 131, scope: !12487)
!12513 = !DILocation(line: 676, column: 126, scope: !12487)
!12514 = !DILocation(line: 676, column: 9, scope: !12487)
!12515 = !DILocation(line: 677, column: 100, scope: !12487)
!12516 = !DILocation(line: 677, column: 80, scope: !12487)
!12517 = !DILocation(line: 677, column: 131, scope: !12487)
!12518 = !DILocation(line: 677, column: 126, scope: !12487)
!12519 = !DILocation(line: 677, column: 9, scope: !12487)
!12520 = !DILocation(line: 678, column: 100, scope: !12487)
!12521 = !DILocation(line: 678, column: 80, scope: !12487)
!12522 = !DILocation(line: 678, column: 131, scope: !12487)
!12523 = !DILocation(line: 678, column: 126, scope: !12487)
!12524 = !DILocation(line: 678, column: 9, scope: !12487)
!12525 = distinct !{!12525, !12484, !12526}
!12526 = !DILocation(line: 679, column: 5, scope: !12485)
!12527 = !DILocation(line: 680, column: 5, scope: !12435)
!12528 = !DILocation(line: 681, column: 5, scope: !12435)
!12529 = !DILocation(line: 682, column: 5, scope: !12435)
!12530 = !DILocation(line: 683, column: 5, scope: !12435)
!12531 = !DILocation(line: 686, column: 48, scope: !12435)
!12532 = !DILocation(line: 686, column: 35, scope: !12435)
!12533 = !DILocation(line: 686, column: 5, scope: !12435)
!12534 = !DILocation(line: 687, column: 48, scope: !12435)
!12535 = !DILocation(line: 687, column: 35, scope: !12435)
!12536 = !DILocation(line: 687, column: 5, scope: !12435)
!12537 = !DILocation(line: 688, column: 48, scope: !12435)
!12538 = !DILocation(line: 688, column: 35, scope: !12435)
!12539 = !DILocation(line: 688, column: 5, scope: !12435)
!12540 = !DILocation(line: 689, column: 48, scope: !12435)
!12541 = !DILocation(line: 689, column: 35, scope: !12435)
!12542 = !DILocation(line: 689, column: 5, scope: !12435)
!12543 = !DILocation(line: 690, column: 48, scope: !12435)
!12544 = !DILocation(line: 690, column: 35, scope: !12435)
!12545 = !DILocation(line: 690, column: 5, scope: !12435)
!12546 = !DILocation(line: 691, column: 48, scope: !12435)
!12547 = !DILocation(line: 691, column: 35, scope: !12435)
!12548 = !DILocation(line: 691, column: 5, scope: !12435)
!12549 = !DILocation(line: 692, column: 48, scope: !12435)
!12550 = !DILocation(line: 692, column: 35, scope: !12435)
!12551 = !DILocation(line: 692, column: 5, scope: !12435)
!12552 = !DILocation(line: 693, column: 5, scope: !12435)
!12553 = !DILocation(line: 694, column: 5, scope: !12435)
!12554 = !DILocation(line: 695, column: 5, scope: !12435)
!12555 = !DILocation(line: 696, column: 5, scope: !12435)
!12556 = !DILocation(line: 697, column: 5, scope: !12435)
!12557 = !DILocation(line: 699, column: 5, scope: !12435)
!12558 = !DILocation(line: 700, column: 5, scope: !12435)
!12559 = !DILocation(line: 703, column: 5, scope: !12435)
!12560 = !DILocation(line: 705, column: 5, scope: !12435)
!12561 = !DILocation(line: 709, column: 5, scope: !12435)
!12562 = !DILocation(line: 710, column: 5, scope: !12435)
!12563 = !DILocation(line: 717, column: 5, scope: !12435)
!12564 = !DILocation(line: 718, column: 5, scope: !12435)
!12565 = !DILocation(line: 720, column: 5, scope: !12435)
!12566 = !DILocation(line: 721, column: 5, scope: !12435)
!12567 = !DILocation(line: 722, column: 1, scope: !12435)
!12568 = distinct !DISubprogram(name: "pmu_eint_init", scope: !2371, file: !2371, line: 278, type: !260, scopeLine: 279, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2372, retainedNodes: !12569)
!12569 = !{!12570}
!12570 = !DILocalVariable(name: "config", scope: !12568, file: !2371, line: 280, type: !12571)
!12571 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_eint_config_t", file: !1111, line: 225, baseType: !12572)
!12572 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1111, line: 222, size: 64, elements: !12573)
!12573 = !{!12574, !12575}
!12574 = !DIDerivedType(tag: DW_TAG_member, name: "trigger_mode", scope: !12572, file: !1111, line: 223, baseType: !1183, size: 32)
!12575 = !DIDerivedType(tag: DW_TAG_member, name: "debounce_time", scope: !12572, file: !1111, line: 224, baseType: !61, size: 32, offset: 32)
!12576 = !DILocation(line: 280, column: 5, scope: !12568)
!12577 = !DILocation(line: 280, column: 23, scope: !12568)
!12578 = !DILocation(line: 281, column: 12, scope: !12568)
!12579 = !DILocation(line: 281, column: 25, scope: !12568)
!12580 = !DILocation(line: 282, column: 12, scope: !12568)
!12581 = !DILocation(line: 282, column: 26, scope: !12568)
!12582 = !DILocation(line: 284, column: 5, scope: !12568)
!12583 = !DILocation(line: 285, column: 5, scope: !12568)
!12584 = !DILocation(line: 287, column: 5, scope: !12568)
!12585 = !DILocation(line: 288, column: 1, scope: !12568)
!12586 = !DILocation(line: 0, scope: !2443)
!12587 = !DILocation(line: 297, column: 5, scope: !2443)
!12588 = !DILocation(line: 298, column: 12, scope: !2443)
!12589 = !DILocation(line: 0, scope: !12590)
!12590 = distinct !DILexicalBlock(scope: !2443, file: !2371, line: 300, column: 5)
!12591 = !DILocation(line: 300, column: 5, scope: !12590)
!12592 = !DILocation(line: 0, scope: !12593)
!12593 = distinct !DILexicalBlock(scope: !2443, file: !2371, line: 305, column: 5)
!12594 = !DILocation(line: 306, column: 26, scope: !12595)
!12595 = distinct !DILexicalBlock(scope: !12596, file: !2371, line: 305, column: 41)
!12596 = distinct !DILexicalBlock(scope: !12593, file: !2371, line: 305, column: 5)
!12597 = !DILocation(line: 305, column: 5, scope: !12593)
!12598 = !DILocation(line: 301, column: 49, scope: !12599)
!12599 = distinct !DILexicalBlock(scope: !12600, file: !2371, line: 300, column: 41)
!12600 = distinct !DILexicalBlock(scope: !12590, file: !2371, line: 300, column: 5)
!12601 = !DILocation(line: 301, column: 26, scope: !12599)
!12602 = !DILocation(line: 301, column: 17, scope: !12599)
!12603 = !DILocation(line: 301, column: 9, scope: !12599)
!12604 = !DILocation(line: 301, column: 24, scope: !12599)
!12605 = !DILocation(line: 300, column: 37, scope: !12600)
!12606 = !DILocation(line: 300, column: 27, scope: !12600)
!12607 = distinct !{!12607, !12591, !12608}
!12608 = !DILocation(line: 302, column: 5, scope: !12590)
!12609 = !DILocation(line: 0, scope: !12610)
!12610 = distinct !DILexicalBlock(scope: !2443, file: !2371, line: 313, column: 5)
!12611 = !DILocation(line: 314, column: 26, scope: !12612)
!12612 = distinct !DILexicalBlock(scope: !12613, file: !2371, line: 313, column: 41)
!12613 = distinct !DILexicalBlock(scope: !12610, file: !2371, line: 313, column: 5)
!12614 = !DILocation(line: 313, column: 5, scope: !12610)
!12615 = !DILocation(line: 306, column: 47, scope: !12595)
!12616 = !DILocation(line: 306, column: 37, scope: !12595)
!12617 = !DILocation(line: 306, column: 53, scope: !12595)
!12618 = !DILocation(line: 307, column: 28, scope: !12619)
!12619 = distinct !DILexicalBlock(scope: !12595, file: !2371, line: 307, column: 13)
!12620 = !DILocation(line: 307, column: 34, scope: !12619)
!12621 = !DILocation(line: 307, column: 64, scope: !12619)
!12622 = !DILocation(line: 307, column: 13, scope: !12595)
!12623 = !DILocation(line: 308, column: 39, scope: !12624)
!12624 = distinct !DILexicalBlock(scope: !12619, file: !2371, line: 307, column: 90)
!12625 = !DILocation(line: 308, column: 52, scope: !12624)
!12626 = !DILocation(line: 308, column: 93, scope: !12624)
!12627 = !DILocation(line: 308, column: 13, scope: !12624)
!12628 = !DILocation(line: 305, column: 37, scope: !12596)
!12629 = !DILocation(line: 309, column: 9, scope: !12624)
!12630 = !DILocation(line: 305, column: 27, scope: !12596)
!12631 = distinct !{!12631, !12597, !12632}
!12632 = !DILocation(line: 310, column: 5, scope: !12593)
!12633 = !DILocation(line: 0, scope: !12634)
!12634 = distinct !DILexicalBlock(scope: !2443, file: !2371, line: 321, column: 5)
!12635 = !DILocation(line: 322, column: 26, scope: !12636)
!12636 = distinct !DILexicalBlock(scope: !12637, file: !2371, line: 321, column: 41)
!12637 = distinct !DILexicalBlock(scope: !12634, file: !2371, line: 321, column: 5)
!12638 = !DILocation(line: 321, column: 5, scope: !12634)
!12639 = !DILocation(line: 314, column: 47, scope: !12612)
!12640 = !DILocation(line: 314, column: 37, scope: !12612)
!12641 = !DILocation(line: 314, column: 53, scope: !12612)
!12642 = !DILocation(line: 315, column: 28, scope: !12643)
!12643 = distinct !DILexicalBlock(scope: !12612, file: !2371, line: 315, column: 13)
!12644 = !DILocation(line: 315, column: 34, scope: !12643)
!12645 = !DILocation(line: 315, column: 63, scope: !12643)
!12646 = !DILocation(line: 315, column: 68, scope: !12643)
!12647 = !DILocation(line: 315, column: 13, scope: !12612)
!12648 = !DILocation(line: 316, column: 43, scope: !12649)
!12649 = distinct !DILexicalBlock(scope: !12643, file: !2371, line: 315, column: 94)
!12650 = !DILocation(line: 316, column: 56, scope: !12649)
!12651 = !DILocation(line: 316, column: 101, scope: !12649)
!12652 = !DILocation(line: 316, column: 13, scope: !12649)
!12653 = !DILocation(line: 313, column: 37, scope: !12613)
!12654 = !DILocation(line: 317, column: 9, scope: !12649)
!12655 = !DILocation(line: 313, column: 27, scope: !12613)
!12656 = distinct !{!12656, !12614, !12657}
!12657 = !DILocation(line: 318, column: 5, scope: !12610)
!12658 = !DILocation(line: 0, scope: !12659)
!12659 = distinct !DILexicalBlock(scope: !2443, file: !2371, line: 329, column: 5)
!12660 = !DILocation(line: 330, column: 26, scope: !12661)
!12661 = distinct !DILexicalBlock(scope: !12662, file: !2371, line: 329, column: 41)
!12662 = distinct !DILexicalBlock(scope: !12659, file: !2371, line: 329, column: 5)
!12663 = !DILocation(line: 329, column: 5, scope: !12659)
!12664 = !DILocation(line: 322, column: 47, scope: !12636)
!12665 = !DILocation(line: 322, column: 37, scope: !12636)
!12666 = !DILocation(line: 322, column: 53, scope: !12636)
!12667 = !DILocation(line: 323, column: 28, scope: !12668)
!12668 = distinct !DILexicalBlock(scope: !12636, file: !2371, line: 323, column: 13)
!12669 = !DILocation(line: 323, column: 34, scope: !12668)
!12670 = !DILocation(line: 323, column: 63, scope: !12668)
!12671 = !DILocation(line: 323, column: 68, scope: !12668)
!12672 = !DILocation(line: 323, column: 13, scope: !12636)
!12673 = !DILocation(line: 324, column: 43, scope: !12674)
!12674 = distinct !DILexicalBlock(scope: !12668, file: !2371, line: 323, column: 94)
!12675 = !DILocation(line: 324, column: 56, scope: !12674)
!12676 = !DILocation(line: 324, column: 101, scope: !12674)
!12677 = !DILocation(line: 324, column: 13, scope: !12674)
!12678 = !DILocation(line: 321, column: 37, scope: !12637)
!12679 = !DILocation(line: 325, column: 9, scope: !12674)
!12680 = !DILocation(line: 321, column: 27, scope: !12637)
!12681 = distinct !{!12681, !12638, !12682}
!12682 = !DILocation(line: 326, column: 5, scope: !12634)
!12683 = !DILocation(line: 0, scope: !12684)
!12684 = distinct !DILexicalBlock(scope: !2443, file: !2371, line: 337, column: 5)
!12685 = !DILocation(line: 338, column: 26, scope: !12686)
!12686 = distinct !DILexicalBlock(scope: !12687, file: !2371, line: 337, column: 41)
!12687 = distinct !DILexicalBlock(scope: !12684, file: !2371, line: 337, column: 5)
!12688 = !DILocation(line: 337, column: 5, scope: !12684)
!12689 = !DILocation(line: 330, column: 47, scope: !12661)
!12690 = !DILocation(line: 330, column: 37, scope: !12661)
!12691 = !DILocation(line: 330, column: 53, scope: !12661)
!12692 = !DILocation(line: 331, column: 28, scope: !12693)
!12693 = distinct !DILexicalBlock(scope: !12661, file: !2371, line: 331, column: 13)
!12694 = !DILocation(line: 331, column: 34, scope: !12693)
!12695 = !DILocation(line: 331, column: 63, scope: !12693)
!12696 = !DILocation(line: 331, column: 69, scope: !12693)
!12697 = !DILocation(line: 331, column: 13, scope: !12661)
!12698 = !DILocation(line: 332, column: 44, scope: !12699)
!12699 = distinct !DILexicalBlock(scope: !12693, file: !2371, line: 331, column: 95)
!12700 = !DILocation(line: 332, column: 57, scope: !12699)
!12701 = !DILocation(line: 332, column: 103, scope: !12699)
!12702 = !DILocation(line: 332, column: 13, scope: !12699)
!12703 = !DILocation(line: 329, column: 37, scope: !12662)
!12704 = !DILocation(line: 333, column: 9, scope: !12699)
!12705 = !DILocation(line: 329, column: 27, scope: !12662)
!12706 = distinct !{!12706, !12663, !12707}
!12707 = !DILocation(line: 334, column: 5, scope: !12659)
!12708 = !DILocation(line: 0, scope: !12709)
!12709 = distinct !DILexicalBlock(scope: !2443, file: !2371, line: 345, column: 5)
!12710 = !DILocation(line: 346, column: 26, scope: !12711)
!12711 = distinct !DILexicalBlock(scope: !12712, file: !2371, line: 345, column: 41)
!12712 = distinct !DILexicalBlock(scope: !12709, file: !2371, line: 345, column: 5)
!12713 = !DILocation(line: 345, column: 5, scope: !12709)
!12714 = !DILocation(line: 338, column: 47, scope: !12686)
!12715 = !DILocation(line: 338, column: 37, scope: !12686)
!12716 = !DILocation(line: 338, column: 53, scope: !12686)
!12717 = !DILocation(line: 339, column: 28, scope: !12718)
!12718 = distinct !DILexicalBlock(scope: !12686, file: !2371, line: 339, column: 13)
!12719 = !DILocation(line: 339, column: 34, scope: !12718)
!12720 = !DILocation(line: 339, column: 63, scope: !12718)
!12721 = !DILocation(line: 339, column: 69, scope: !12718)
!12722 = !DILocation(line: 339, column: 13, scope: !12686)
!12723 = !DILocation(line: 340, column: 44, scope: !12724)
!12724 = distinct !DILexicalBlock(scope: !12718, file: !2371, line: 339, column: 95)
!12725 = !DILocation(line: 340, column: 57, scope: !12724)
!12726 = !DILocation(line: 340, column: 103, scope: !12724)
!12727 = !DILocation(line: 340, column: 13, scope: !12724)
!12728 = !DILocation(line: 337, column: 37, scope: !12687)
!12729 = !DILocation(line: 341, column: 9, scope: !12724)
!12730 = !DILocation(line: 337, column: 27, scope: !12687)
!12731 = distinct !{!12731, !12688, !12732}
!12732 = !DILocation(line: 342, column: 5, scope: !12684)
!12733 = !DILocation(line: 0, scope: !12734)
!12734 = distinct !DILexicalBlock(scope: !2443, file: !2371, line: 353, column: 5)
!12735 = !DILocation(line: 354, column: 26, scope: !12736)
!12736 = distinct !DILexicalBlock(scope: !12737, file: !2371, line: 353, column: 41)
!12737 = distinct !DILexicalBlock(scope: !12734, file: !2371, line: 353, column: 5)
!12738 = !DILocation(line: 353, column: 5, scope: !12734)
!12739 = !DILocation(line: 347, column: 28, scope: !12740)
!12740 = distinct !DILexicalBlock(scope: !12711, file: !2371, line: 347, column: 13)
!12741 = !DILocation(line: 347, column: 34, scope: !12740)
!12742 = !DILocation(line: 347, column: 63, scope: !12740)
!12743 = !DILocation(line: 347, column: 69, scope: !12740)
!12744 = !DILocation(line: 347, column: 13, scope: !12711)
!12745 = !DILocation(line: 348, column: 44, scope: !12746)
!12746 = distinct !DILexicalBlock(scope: !12740, file: !2371, line: 347, column: 95)
!12747 = !DILocation(line: 348, column: 103, scope: !12746)
!12748 = !DILocation(line: 348, column: 13, scope: !12746)
!12749 = !DILocation(line: 345, column: 37, scope: !12712)
!12750 = !DILocation(line: 349, column: 9, scope: !12746)
!12751 = !DILocation(line: 345, column: 27, scope: !12712)
!12752 = distinct !{!12752, !12713, !12753}
!12753 = !DILocation(line: 350, column: 5, scope: !12709)
!12754 = !DILocation(line: 0, scope: !12755)
!12755 = distinct !DILexicalBlock(scope: !2443, file: !2371, line: 360, column: 5)
!12756 = !DILocation(line: 360, column: 5, scope: !12755)
!12757 = !DILocation(line: 355, column: 28, scope: !12758)
!12758 = distinct !DILexicalBlock(scope: !12736, file: !2371, line: 355, column: 13)
!12759 = !DILocation(line: 355, column: 34, scope: !12758)
!12760 = !DILocation(line: 355, column: 63, scope: !12758)
!12761 = !DILocation(line: 355, column: 69, scope: !12758)
!12762 = !DILocation(line: 355, column: 13, scope: !12736)
!12763 = !DILocation(line: 356, column: 44, scope: !12764)
!12764 = distinct !DILexicalBlock(scope: !12758, file: !2371, line: 355, column: 95)
!12765 = !DILocation(line: 356, column: 103, scope: !12764)
!12766 = !DILocation(line: 356, column: 13, scope: !12764)
!12767 = !DILocation(line: 353, column: 37, scope: !12737)
!12768 = !DILocation(line: 357, column: 9, scope: !12764)
!12769 = !DILocation(line: 353, column: 27, scope: !12737)
!12770 = distinct !{!12770, !12738, !12771}
!12771 = !DILocation(line: 358, column: 5, scope: !12734)
!12772 = !DILocation(line: 0, scope: !12773)
!12773 = distinct !DILexicalBlock(scope: !2443, file: !2371, line: 363, column: 5)
!12774 = !DILocation(line: 363, column: 5, scope: !12773)
!12775 = !DILocation(line: 361, column: 32, scope: !12776)
!12776 = distinct !DILexicalBlock(scope: !12777, file: !2371, line: 360, column: 41)
!12777 = distinct !DILexicalBlock(scope: !12755, file: !2371, line: 360, column: 5)
!12778 = !DILocation(line: 361, column: 9, scope: !12776)
!12779 = !DILocation(line: 360, column: 37, scope: !12777)
!12780 = !DILocation(line: 360, column: 27, scope: !12777)
!12781 = distinct !{!12781, !12756, !12782}
!12782 = !DILocation(line: 362, column: 5, scope: !12755)
!12783 = !DILocation(line: 364, column: 49, scope: !12784)
!12784 = distinct !DILexicalBlock(scope: !12785, file: !2371, line: 363, column: 41)
!12785 = distinct !DILexicalBlock(scope: !12773, file: !2371, line: 363, column: 5)
!12786 = !DILocation(line: 364, column: 26, scope: !12784)
!12787 = !DILocation(line: 364, column: 17, scope: !12784)
!12788 = !DILocation(line: 364, column: 9, scope: !12784)
!12789 = !DILocation(line: 364, column: 24, scope: !12784)
!12790 = !DILocation(line: 365, column: 28, scope: !12791)
!12791 = distinct !DILexicalBlock(scope: !12784, file: !2371, line: 365, column: 13)
!12792 = !DILocation(line: 365, column: 13, scope: !12784)
!12793 = !DILocation(line: 366, column: 36, scope: !12794)
!12794 = distinct !DILexicalBlock(scope: !12791, file: !2371, line: 365, column: 34)
!12795 = !DILocation(line: 366, column: 13, scope: !12794)
!12796 = !DILocation(line: 363, column: 37, scope: !12785)
!12797 = !DILocation(line: 367, column: 9, scope: !12794)
!12798 = !DILocation(line: 363, column: 27, scope: !12785)
!12799 = distinct !{!12799, !12774, !12800}
!12800 = !DILocation(line: 368, column: 5, scope: !12773)
!12801 = !DILocation(line: 369, column: 5, scope: !2443)
!12802 = !DILocation(line: 370, column: 5, scope: !2443)
!12803 = !DILocation(line: 371, column: 1, scope: !2443)
!12804 = distinct !DISubprogram(name: "pmu_set_register_value_mt6385", scope: !2371, file: !2371, line: 202, type: !3287, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2372, retainedNodes: !12805)
!12805 = !{!12806, !12807, !12808, !12809, !12810, !12811, !12812}
!12806 = !DILocalVariable(name: "address", arg: 1, scope: !12804, file: !2371, line: 202, type: !1043)
!12807 = !DILocalVariable(name: "mask", arg: 2, scope: !12804, file: !2371, line: 202, type: !1043)
!12808 = !DILocalVariable(name: "shift", arg: 3, scope: !12804, file: !2371, line: 202, type: !1043)
!12809 = !DILocalVariable(name: "value", arg: 4, scope: !12804, file: !2371, line: 202, type: !1043)
!12810 = !DILocalVariable(name: "send_buffer", scope: !12804, file: !2371, line: 204, type: !2860)
!12811 = !DILocalVariable(name: "receive_buffer", scope: !12804, file: !2371, line: 204, type: !2862)
!12812 = !DILocalVariable(name: "mask_pri", scope: !12804, file: !2371, line: 205, type: !16)
!12813 = !DILocation(line: 0, scope: !12804)
!12814 = !DILocation(line: 204, column: 5, scope: !12804)
!12815 = !DILocation(line: 204, column: 19, scope: !12804)
!12816 = !DILocation(line: 204, column: 35, scope: !12804)
!12817 = !DILocation(line: 207, column: 22, scope: !12804)
!12818 = !DILocation(line: 207, column: 5, scope: !12804)
!12819 = !DILocation(line: 207, column: 20, scope: !12804)
!12820 = !DILocation(line: 208, column: 32, scope: !12804)
!12821 = !DILocation(line: 208, column: 22, scope: !12804)
!12822 = !DILocation(line: 208, column: 20, scope: !12804)
!12823 = !DILocation(line: 210, column: 16, scope: !12804)
!12824 = !DILocation(line: 212, column: 5, scope: !12804)
!12825 = !DILocation(line: 214, column: 29, scope: !12804)
!12826 = !DILocation(line: 214, column: 37, scope: !12804)
!12827 = !DILocation(line: 214, column: 34, scope: !12804)
!12828 = !DILocation(line: 214, column: 23, scope: !12804)
!12829 = !DILocation(line: 215, column: 43, scope: !12804)
!12830 = !DILocation(line: 215, column: 49, scope: !12804)
!12831 = !DILocation(line: 215, column: 22, scope: !12804)
!12832 = !DILocation(line: 215, column: 5, scope: !12804)
!12833 = !DILocation(line: 215, column: 20, scope: !12804)
!12834 = !DILocation(line: 217, column: 9, scope: !12835)
!12835 = distinct !DILexicalBlock(scope: !12804, file: !2371, line: 217, column: 9)
!12836 = !DILocation(line: 217, column: 41, scope: !12835)
!12837 = !DILocation(line: 0, scope: !12835)
!12838 = !DILocation(line: 224, column: 1, scope: !12804)
!12839 = distinct !DISubprogram(name: "Wrap_D2D_I2C_Read", scope: !2371, file: !2371, line: 257, type: !12840, scopeLine: 258, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2372, retainedNodes: !12842)
!12840 = !DISubroutineType(types: !12841)
!12841 = !{!76, !2824, !2824}
!12842 = !{!12843, !12844, !12845, !12854, !12855}
!12843 = !DILocalVariable(name: "ptr_send", arg: 1, scope: !12839, file: !2371, line: 257, type: !2824)
!12844 = !DILocalVariable(name: "ptr_read", arg: 2, scope: !12839, file: !2371, line: 257, type: !2824)
!12845 = !DILocalVariable(name: "config", scope: !12839, file: !2371, line: 259, type: !12846)
!12846 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmic_i2c_send_to_receive_config_t", file: !2375, line: 100, baseType: !12847)
!12847 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2375, line: 94, size: 160, elements: !12848)
!12848 = !{!12849, !12850, !12851, !12852, !12853}
!12849 = !DIDerivedType(tag: DW_TAG_member, name: "slave_address", scope: !12847, file: !2375, line: 95, baseType: !74, size: 8)
!12850 = !DIDerivedType(tag: DW_TAG_member, name: "send_data", scope: !12847, file: !2375, line: 96, baseType: !6469, size: 32, offset: 32)
!12851 = !DIDerivedType(tag: DW_TAG_member, name: "send_length", scope: !12847, file: !2375, line: 97, baseType: !61, size: 32, offset: 64)
!12852 = !DIDerivedType(tag: DW_TAG_member, name: "receive_buffer", scope: !12847, file: !2375, line: 98, baseType: !872, size: 32, offset: 96)
!12853 = !DIDerivedType(tag: DW_TAG_member, name: "receive_length", scope: !12847, file: !2375, line: 99, baseType: !61, size: 32, offset: 128)
!12854 = !DILocalVariable(name: "retry_cnt", scope: !12839, file: !2371, line: 260, type: !76)
!12855 = !DILocalVariable(name: "result_read", scope: !12839, file: !2371, line: 260, type: !76)
!12856 = !DILocation(line: 0, scope: !12839)
!12857 = !DILocation(line: 259, column: 5, scope: !12839)
!12858 = !DILocation(line: 259, column: 39, scope: !12839)
!12859 = !DILocation(line: 262, column: 19, scope: !12839)
!12860 = !DILocation(line: 262, column: 31, scope: !12839)
!12861 = !DILocation(line: 262, column: 17, scope: !12839)
!12862 = !DILocation(line: 263, column: 31, scope: !12839)
!12863 = !DILocation(line: 264, column: 12, scope: !12839)
!12864 = !DILocation(line: 264, column: 31, scope: !12839)
!12865 = !DILocation(line: 265, column: 12, scope: !12839)
!12866 = !DILocation(line: 265, column: 31, scope: !12839)
!12867 = !DILocation(line: 266, column: 12, scope: !12839)
!12868 = !DILocation(line: 266, column: 31, scope: !12839)
!12869 = !DILocation(line: 267, column: 12, scope: !12839)
!12870 = !DILocation(line: 267, column: 31, scope: !12839)
!12871 = !DILocation(line: 269, column: 5, scope: !12839)
!12872 = !DILocation(line: 270, column: 23, scope: !12873)
!12873 = distinct !DILexicalBlock(scope: !12839, file: !2371, line: 269, column: 8)
!12874 = !DILocation(line: 271, column: 18, scope: !12873)
!12875 = !DILocation(line: 272, column: 15, scope: !12839)
!12876 = !DILocation(line: 272, column: 27, scope: !12839)
!12877 = !DILocation(line: 272, column: 33, scope: !12839)
!12878 = !DILocation(line: 272, column: 5, scope: !12873)
!12879 = distinct !{!12879, !12871, !12880}
!12880 = !DILocation(line: 272, column: 53, scope: !12839)
!12881 = !DILocation(line: 276, column: 1, scope: !12839)
!12882 = !DILocation(line: 275, column: 5, scope: !12839)
!12883 = distinct !DISubprogram(name: "Wrap_D2D_I2C_Write", scope: !2371, file: !2371, line: 241, type: !12884, scopeLine: 242, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2372, retainedNodes: !12886)
!12884 = !DISubroutineType(types: !12885)
!12885 = !{!76, !2824}
!12886 = !{!12887, !12888, !12889}
!12887 = !DILocalVariable(name: "ptr_send", arg: 1, scope: !12883, file: !2371, line: 241, type: !2824)
!12888 = !DILocalVariable(name: "retry_cnt", scope: !12883, file: !2371, line: 243, type: !76)
!12889 = !DILocalVariable(name: "result_read", scope: !12883, file: !2371, line: 243, type: !76)
!12890 = !DILocation(line: 0, scope: !12883)
!12891 = !DILocation(line: 245, column: 19, scope: !12883)
!12892 = !DILocation(line: 245, column: 31, scope: !12883)
!12893 = !DILocation(line: 245, column: 17, scope: !12883)
!12894 = !DILocation(line: 247, column: 5, scope: !12883)
!12895 = !DILocation(line: 248, column: 23, scope: !12896)
!12896 = distinct !DILexicalBlock(scope: !12883, file: !2371, line: 247, column: 8)
!12897 = !DILocation(line: 249, column: 18, scope: !12896)
!12898 = !DILocation(line: 250, column: 15, scope: !12883)
!12899 = !DILocation(line: 250, column: 27, scope: !12883)
!12900 = !DILocation(line: 250, column: 33, scope: !12883)
!12901 = !DILocation(line: 250, column: 5, scope: !12896)
!12902 = distinct !{!12902, !12894, !12903}
!12903 = !DILocation(line: 250, column: 53, scope: !12883)
!12904 = !DILocation(line: 253, column: 5, scope: !12883)
!12905 = distinct !DISubprogram(name: "pmu_get_register_value_mt6385", scope: !2371, file: !2371, line: 226, type: !3291, scopeLine: 227, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2372, retainedNodes: !12906)
!12906 = !{!12907, !12908, !12909, !12910, !12912, !12913}
!12907 = !DILocalVariable(name: "address", arg: 1, scope: !12905, file: !2371, line: 226, type: !1043)
!12908 = !DILocalVariable(name: "mask", arg: 2, scope: !12905, file: !2371, line: 226, type: !1043)
!12909 = !DILocalVariable(name: "shift", arg: 3, scope: !12905, file: !2371, line: 226, type: !1043)
!12910 = !DILocalVariable(name: "send_buffer", scope: !12905, file: !2371, line: 228, type: !12911)
!12911 = !DICompositeType(tag: DW_TAG_array_type, baseType: !76, size: 16, elements: !531)
!12912 = !DILocalVariable(name: "receive_buffer", scope: !12905, file: !2371, line: 228, type: !2862)
!12913 = !DILocalVariable(name: "mask_pri", scope: !12905, file: !2371, line: 229, type: !16)
!12914 = !DILocation(line: 0, scope: !12905)
!12915 = !DILocation(line: 228, column: 5, scope: !12905)
!12916 = !DILocation(line: 228, column: 19, scope: !12905)
!12917 = !DILocation(line: 228, column: 35, scope: !12905)
!12918 = !DILocation(line: 231, column: 22, scope: !12905)
!12919 = !DILocation(line: 231, column: 5, scope: !12905)
!12920 = !DILocation(line: 231, column: 20, scope: !12905)
!12921 = !DILocation(line: 232, column: 32, scope: !12905)
!12922 = !DILocation(line: 232, column: 22, scope: !12905)
!12923 = !DILocation(line: 232, column: 20, scope: !12905)
!12924 = !DILocation(line: 234, column: 16, scope: !12905)
!12925 = !DILocation(line: 235, column: 5, scope: !12905)
!12926 = !DILocation(line: 236, column: 5, scope: !12905)
!12927 = !DILocation(line: 237, column: 14, scope: !12905)
!12928 = !DILocation(line: 237, column: 35, scope: !12905)
!12929 = !DILocation(line: 237, column: 32, scope: !12905)
!12930 = !DILocation(line: 237, column: 42, scope: !12905)
!12931 = !DILocation(line: 237, column: 41, scope: !12905)
!12932 = !DILocation(line: 237, column: 12, scope: !12905)
!12933 = !DILocation(line: 238, column: 1, scope: !12905)
!12934 = !DILocation(line: 237, column: 5, scope: !12905)
!12935 = distinct !DISubprogram(name: "pmu_register_callback", scope: !2371, file: !2371, line: 373, type: !12936, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2372, retainedNodes: !12940)
!12936 = !DISubroutineType(types: !12937)
!12937 = !{!4928, !12938, !12939, !374, !65}
!12938 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmu_int_ch_t", file: !326, line: 91, baseType: !332)
!12939 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmu_int_trigger_mode_t", file: !326, line: 50, baseType: !367)
!12940 = !{!12941, !12942, !12943, !12944, !12945, !12946}
!12941 = !DILocalVariable(name: "pmu_int_ch", arg: 1, scope: !12935, file: !2371, line: 373, type: !12938)
!12942 = !DILocalVariable(name: "trigger_mode", arg: 2, scope: !12935, file: !2371, line: 373, type: !12939)
!12943 = !DILocalVariable(name: "callback", arg: 3, scope: !12935, file: !2371, line: 373, type: !374)
!12944 = !DILocalVariable(name: "user_data", arg: 4, scope: !12935, file: !2371, line: 373, type: !65)
!12945 = !DILocalVariable(name: "status", scope: !12935, file: !2371, line: 375, type: !4928)
!12946 = !DILocalVariable(name: "mask", scope: !12935, file: !2371, line: 376, type: !16)
!12947 = !DILocation(line: 0, scope: !12935)
!12948 = !DILocation(line: 378, column: 20, scope: !12949)
!12949 = distinct !DILexicalBlock(scope: !12935, file: !2371, line: 378, column: 9)
!12950 = !DILocation(line: 378, column: 35, scope: !12949)
!12951 = !DILocation(line: 383, column: 12, scope: !12935)
!12952 = !DILocation(line: 385, column: 36, scope: !12935)
!12953 = !DILocation(line: 385, column: 49, scope: !12935)
!12954 = !DILocation(line: 386, column: 36, scope: !12935)
!12955 = !DILocation(line: 386, column: 46, scope: !12935)
!12956 = !DILocation(line: 387, column: 51, scope: !12935)
!12957 = !DILocation(line: 387, column: 36, scope: !12935)
!12958 = !DILocation(line: 387, column: 49, scope: !12935)
!12959 = !DILocation(line: 388, column: 36, scope: !12935)
!12960 = !DILocation(line: 388, column: 48, scope: !12935)
!12961 = !DILocation(line: 390, column: 5, scope: !12935)
!12962 = !DILocation(line: 392, column: 5, scope: !12935)
!12963 = !DILocation(line: 395, column: 5, scope: !12935)
!12964 = !DILocation(line: 396, column: 1, scope: !12935)
!12965 = distinct !DISubprogram(name: "pmu_enable_interrupt", scope: !2371, file: !2371, line: 414, type: !12966, scopeLine: 415, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2372, retainedNodes: !12968)
!12966 = !DISubroutineType(types: !12967)
!12967 = !{!4928, !12938, !12939, !76}
!12968 = !{!12969, !12970, !12971, !12972}
!12969 = !DILocalVariable(name: "int_ch", arg: 1, scope: !12965, file: !2371, line: 414, type: !12938)
!12970 = !DILocalVariable(name: "trigger_mode", arg: 2, scope: !12965, file: !2371, line: 414, type: !12939)
!12971 = !DILocalVariable(name: "enable", arg: 3, scope: !12965, file: !2371, line: 414, type: !76)
!12972 = !DILocalVariable(name: "Channel", scope: !12965, file: !2371, line: 416, type: !76)
!12973 = !DILocation(line: 0, scope: !12965)
!12974 = !DILocation(line: 418, column: 9, scope: !12975)
!12975 = distinct !DILexicalBlock(scope: !12965, file: !2371, line: 418, column: 9)
!12976 = !DILocation(line: 418, column: 17, scope: !12975)
!12977 = !DILocation(line: 418, column: 9, scope: !12965)
!12978 = !DILocation(line: 422, column: 5, scope: !12965)
!12979 = !DILocation(line: 424, column: 31, scope: !12980)
!12980 = distinct !DILexicalBlock(scope: !12981, file: !2371, line: 424, column: 17)
!12981 = distinct !DILexicalBlock(scope: !12965, file: !2371, line: 422, column: 22)
!12982 = !DILocation(line: 424, column: 39, scope: !12980)
!12983 = !DILocation(line: 424, column: 17, scope: !12981)
!12984 = !DILocation(line: 425, column: 94, scope: !12985)
!12985 = distinct !DILexicalBlock(scope: !12980, file: !2371, line: 424, column: 48)
!12986 = !DILocation(line: 425, column: 17, scope: !12985)
!12987 = !DILocation(line: 426, column: 13, scope: !12985)
!12988 = !DILocation(line: 427, column: 31, scope: !12989)
!12989 = distinct !DILexicalBlock(scope: !12981, file: !2371, line: 427, column: 17)
!12990 = !DILocation(line: 427, column: 39, scope: !12989)
!12991 = !DILocation(line: 427, column: 17, scope: !12981)
!12992 = !DILocation(line: 428, column: 94, scope: !12993)
!12993 = distinct !DILexicalBlock(scope: !12989, file: !2371, line: 427, column: 48)
!12994 = !DILocation(line: 428, column: 17, scope: !12993)
!12995 = !DILocation(line: 429, column: 13, scope: !12993)
!12996 = !DILocation(line: 433, column: 31, scope: !12997)
!12997 = distinct !DILexicalBlock(scope: !12981, file: !2371, line: 433, column: 17)
!12998 = !DILocation(line: 433, column: 39, scope: !12997)
!12999 = !DILocation(line: 433, column: 17, scope: !12981)
!13000 = !DILocation(line: 434, column: 94, scope: !13001)
!13001 = distinct !DILexicalBlock(scope: !12997, file: !2371, line: 433, column: 48)
!13002 = !DILocation(line: 434, column: 17, scope: !13001)
!13003 = !DILocation(line: 435, column: 13, scope: !13001)
!13004 = !DILocation(line: 436, column: 31, scope: !13005)
!13005 = distinct !DILexicalBlock(scope: !12981, file: !2371, line: 436, column: 17)
!13006 = !DILocation(line: 436, column: 39, scope: !13005)
!13007 = !DILocation(line: 436, column: 17, scope: !12981)
!13008 = !DILocation(line: 437, column: 94, scope: !13009)
!13009 = distinct !DILexicalBlock(scope: !13005, file: !2371, line: 436, column: 48)
!13010 = !DILocation(line: 437, column: 17, scope: !13009)
!13011 = !DILocation(line: 438, column: 13, scope: !13009)
!13012 = !DILocation(line: 442, column: 31, scope: !13013)
!13013 = distinct !DILexicalBlock(scope: !12981, file: !2371, line: 442, column: 17)
!13014 = !DILocation(line: 442, column: 39, scope: !13013)
!13015 = !DILocation(line: 442, column: 17, scope: !12981)
!13016 = !DILocation(line: 443, column: 94, scope: !13017)
!13017 = distinct !DILexicalBlock(scope: !13013, file: !2371, line: 442, column: 48)
!13018 = !DILocation(line: 443, column: 17, scope: !13017)
!13019 = !DILocation(line: 444, column: 13, scope: !13017)
!13020 = !DILocation(line: 445, column: 31, scope: !13021)
!13021 = distinct !DILexicalBlock(scope: !12981, file: !2371, line: 445, column: 17)
!13022 = !DILocation(line: 445, column: 39, scope: !13021)
!13023 = !DILocation(line: 445, column: 17, scope: !12981)
!13024 = !DILocation(line: 446, column: 94, scope: !13025)
!13025 = distinct !DILexicalBlock(scope: !13021, file: !2371, line: 445, column: 48)
!13026 = !DILocation(line: 446, column: 17, scope: !13025)
!13027 = !DILocation(line: 447, column: 13, scope: !13025)
!13028 = !DILocation(line: 451, column: 31, scope: !13029)
!13029 = distinct !DILexicalBlock(scope: !12981, file: !2371, line: 451, column: 17)
!13030 = !DILocation(line: 451, column: 39, scope: !13029)
!13031 = !DILocation(line: 451, column: 17, scope: !12981)
!13032 = !DILocation(line: 452, column: 94, scope: !13033)
!13033 = distinct !DILexicalBlock(scope: !13029, file: !2371, line: 451, column: 48)
!13034 = !DILocation(line: 452, column: 17, scope: !13033)
!13035 = !DILocation(line: 453, column: 13, scope: !13033)
!13036 = !DILocation(line: 454, column: 31, scope: !13037)
!13037 = distinct !DILexicalBlock(scope: !12981, file: !2371, line: 454, column: 17)
!13038 = !DILocation(line: 454, column: 39, scope: !13037)
!13039 = !DILocation(line: 454, column: 17, scope: !12981)
!13040 = !DILocation(line: 455, column: 94, scope: !13041)
!13041 = distinct !DILexicalBlock(scope: !13037, file: !2371, line: 454, column: 48)
!13042 = !DILocation(line: 455, column: 17, scope: !13041)
!13043 = !DILocation(line: 456, column: 13, scope: !13041)
!13044 = !DILocation(line: 460, column: 31, scope: !13045)
!13045 = distinct !DILexicalBlock(scope: !12981, file: !2371, line: 460, column: 17)
!13046 = !DILocation(line: 460, column: 39, scope: !13045)
!13047 = !DILocation(line: 460, column: 17, scope: !12981)
!13048 = !DILocation(line: 461, column: 100, scope: !13049)
!13049 = distinct !DILexicalBlock(scope: !13045, file: !2371, line: 460, column: 48)
!13050 = !DILocation(line: 461, column: 17, scope: !13049)
!13051 = !DILocation(line: 462, column: 13, scope: !13049)
!13052 = !DILocation(line: 463, column: 31, scope: !13053)
!13053 = distinct !DILexicalBlock(scope: !12981, file: !2371, line: 463, column: 17)
!13054 = !DILocation(line: 463, column: 39, scope: !13053)
!13055 = !DILocation(line: 463, column: 17, scope: !12981)
!13056 = !DILocation(line: 464, column: 100, scope: !13057)
!13057 = distinct !DILexicalBlock(scope: !13053, file: !2371, line: 463, column: 48)
!13058 = !DILocation(line: 464, column: 17, scope: !13057)
!13059 = !DILocation(line: 465, column: 13, scope: !13057)
!13060 = !DILocation(line: 469, column: 31, scope: !13061)
!13061 = distinct !DILexicalBlock(scope: !12981, file: !2371, line: 469, column: 17)
!13062 = !DILocation(line: 469, column: 39, scope: !13061)
!13063 = !DILocation(line: 469, column: 17, scope: !12981)
!13064 = !DILocation(line: 470, column: 96, scope: !13065)
!13065 = distinct !DILexicalBlock(scope: !13061, file: !2371, line: 469, column: 48)
!13066 = !DILocation(line: 470, column: 17, scope: !13065)
!13067 = !DILocation(line: 471, column: 13, scope: !13065)
!13068 = !DILocation(line: 472, column: 31, scope: !13069)
!13069 = distinct !DILexicalBlock(scope: !12981, file: !2371, line: 472, column: 17)
!13070 = !DILocation(line: 472, column: 39, scope: !13069)
!13071 = !DILocation(line: 472, column: 17, scope: !12981)
!13072 = !DILocation(line: 473, column: 96, scope: !13073)
!13073 = distinct !DILexicalBlock(scope: !13069, file: !2371, line: 472, column: 48)
!13074 = !DILocation(line: 473, column: 17, scope: !13073)
!13075 = !DILocation(line: 474, column: 13, scope: !13073)
!13076 = !DILocation(line: 478, column: 31, scope: !13077)
!13077 = distinct !DILexicalBlock(scope: !12981, file: !2371, line: 478, column: 17)
!13078 = !DILocation(line: 478, column: 39, scope: !13077)
!13079 = !DILocation(line: 478, column: 17, scope: !12981)
!13080 = !DILocation(line: 479, column: 98, scope: !13081)
!13081 = distinct !DILexicalBlock(scope: !13077, file: !2371, line: 478, column: 48)
!13082 = !DILocation(line: 479, column: 17, scope: !13081)
!13083 = !DILocation(line: 480, column: 13, scope: !13081)
!13084 = !DILocation(line: 481, column: 31, scope: !13085)
!13085 = distinct !DILexicalBlock(scope: !12981, file: !2371, line: 481, column: 17)
!13086 = !DILocation(line: 481, column: 39, scope: !13085)
!13087 = !DILocation(line: 481, column: 17, scope: !12981)
!13088 = !DILocation(line: 482, column: 98, scope: !13089)
!13089 = distinct !DILexicalBlock(scope: !13085, file: !2371, line: 481, column: 48)
!13090 = !DILocation(line: 482, column: 17, scope: !13089)
!13091 = !DILocation(line: 483, column: 13, scope: !13089)
!13092 = !DILocation(line: 487, column: 31, scope: !13093)
!13093 = distinct !DILexicalBlock(scope: !12981, file: !2371, line: 487, column: 17)
!13094 = !DILocation(line: 487, column: 39, scope: !13093)
!13095 = !DILocation(line: 487, column: 17, scope: !12981)
!13096 = !DILocation(line: 488, column: 92, scope: !13097)
!13097 = distinct !DILexicalBlock(scope: !13093, file: !2371, line: 487, column: 48)
!13098 = !DILocation(line: 488, column: 17, scope: !13097)
!13099 = !DILocation(line: 489, column: 13, scope: !13097)
!13100 = !DILocation(line: 490, column: 31, scope: !13101)
!13101 = distinct !DILexicalBlock(scope: !12981, file: !2371, line: 490, column: 17)
!13102 = !DILocation(line: 490, column: 39, scope: !13101)
!13103 = !DILocation(line: 490, column: 17, scope: !12981)
!13104 = !DILocation(line: 491, column: 92, scope: !13105)
!13105 = distinct !DILexicalBlock(scope: !13101, file: !2371, line: 490, column: 48)
!13106 = !DILocation(line: 491, column: 17, scope: !13105)
!13107 = !DILocation(line: 492, column: 13, scope: !13105)
!13108 = !DILocation(line: 496, column: 31, scope: !13109)
!13109 = distinct !DILexicalBlock(scope: !12981, file: !2371, line: 496, column: 17)
!13110 = !DILocation(line: 496, column: 39, scope: !13109)
!13111 = !DILocation(line: 496, column: 17, scope: !12981)
!13112 = !DILocation(line: 497, column: 88, scope: !13113)
!13113 = distinct !DILexicalBlock(scope: !13109, file: !2371, line: 496, column: 48)
!13114 = !DILocation(line: 497, column: 17, scope: !13113)
!13115 = !DILocation(line: 498, column: 13, scope: !13113)
!13116 = !DILocation(line: 499, column: 31, scope: !13117)
!13117 = distinct !DILexicalBlock(scope: !12981, file: !2371, line: 499, column: 17)
!13118 = !DILocation(line: 499, column: 39, scope: !13117)
!13119 = !DILocation(line: 499, column: 17, scope: !12981)
!13120 = !DILocation(line: 500, column: 88, scope: !13121)
!13121 = distinct !DILexicalBlock(scope: !13117, file: !2371, line: 499, column: 48)
!13122 = !DILocation(line: 500, column: 17, scope: !13121)
!13123 = !DILocation(line: 501, column: 13, scope: !13121)
!13124 = !DILocation(line: 505, column: 31, scope: !13125)
!13125 = distinct !DILexicalBlock(scope: !12981, file: !2371, line: 505, column: 17)
!13126 = !DILocation(line: 505, column: 39, scope: !13125)
!13127 = !DILocation(line: 505, column: 17, scope: !12981)
!13128 = !DILocation(line: 506, column: 88, scope: !13129)
!13129 = distinct !DILexicalBlock(scope: !13125, file: !2371, line: 505, column: 48)
!13130 = !DILocation(line: 506, column: 17, scope: !13129)
!13131 = !DILocation(line: 507, column: 13, scope: !13129)
!13132 = !DILocation(line: 508, column: 31, scope: !13133)
!13133 = distinct !DILexicalBlock(scope: !12981, file: !2371, line: 508, column: 17)
!13134 = !DILocation(line: 508, column: 39, scope: !13133)
!13135 = !DILocation(line: 508, column: 17, scope: !12981)
!13136 = !DILocation(line: 509, column: 88, scope: !13137)
!13137 = distinct !DILexicalBlock(scope: !13133, file: !2371, line: 508, column: 48)
!13138 = !DILocation(line: 509, column: 17, scope: !13137)
!13139 = !DILocation(line: 510, column: 13, scope: !13137)
!13140 = !DILocation(line: 514, column: 31, scope: !13141)
!13141 = distinct !DILexicalBlock(scope: !12981, file: !2371, line: 514, column: 17)
!13142 = !DILocation(line: 514, column: 39, scope: !13141)
!13143 = !DILocation(line: 514, column: 17, scope: !12981)
!13144 = !DILocation(line: 515, column: 92, scope: !13145)
!13145 = distinct !DILexicalBlock(scope: !13141, file: !2371, line: 514, column: 48)
!13146 = !DILocation(line: 515, column: 17, scope: !13145)
!13147 = !DILocation(line: 516, column: 13, scope: !13145)
!13148 = !DILocation(line: 517, column: 31, scope: !13149)
!13149 = distinct !DILexicalBlock(scope: !12981, file: !2371, line: 517, column: 17)
!13150 = !DILocation(line: 517, column: 39, scope: !13149)
!13151 = !DILocation(line: 517, column: 17, scope: !12981)
!13152 = !DILocation(line: 518, column: 92, scope: !13153)
!13153 = distinct !DILexicalBlock(scope: !13149, file: !2371, line: 517, column: 48)
!13154 = !DILocation(line: 518, column: 17, scope: !13153)
!13155 = !DILocation(line: 519, column: 13, scope: !13153)
!13156 = !DILocation(line: 523, column: 31, scope: !13157)
!13157 = distinct !DILexicalBlock(scope: !12981, file: !2371, line: 523, column: 17)
!13158 = !DILocation(line: 523, column: 39, scope: !13157)
!13159 = !DILocation(line: 523, column: 17, scope: !12981)
!13160 = !DILocation(line: 524, column: 92, scope: !13161)
!13161 = distinct !DILexicalBlock(scope: !13157, file: !2371, line: 523, column: 48)
!13162 = !DILocation(line: 524, column: 17, scope: !13161)
!13163 = !DILocation(line: 525, column: 13, scope: !13161)
!13164 = !DILocation(line: 526, column: 31, scope: !13165)
!13165 = distinct !DILexicalBlock(scope: !12981, file: !2371, line: 526, column: 17)
!13166 = !DILocation(line: 526, column: 39, scope: !13165)
!13167 = !DILocation(line: 526, column: 17, scope: !12981)
!13168 = !DILocation(line: 527, column: 92, scope: !13169)
!13169 = distinct !DILexicalBlock(scope: !13165, file: !2371, line: 526, column: 48)
!13170 = !DILocation(line: 527, column: 17, scope: !13169)
!13171 = !DILocation(line: 528, column: 13, scope: !13169)
!13172 = !DILocation(line: 532, column: 31, scope: !13173)
!13173 = distinct !DILexicalBlock(scope: !12981, file: !2371, line: 532, column: 17)
!13174 = !DILocation(line: 532, column: 39, scope: !13173)
!13175 = !DILocation(line: 532, column: 17, scope: !12981)
!13176 = !DILocation(line: 533, column: 90, scope: !13177)
!13177 = distinct !DILexicalBlock(scope: !13173, file: !2371, line: 532, column: 48)
!13178 = !DILocation(line: 533, column: 17, scope: !13177)
!13179 = !DILocation(line: 534, column: 13, scope: !13177)
!13180 = !DILocation(line: 535, column: 31, scope: !13181)
!13181 = distinct !DILexicalBlock(scope: !12981, file: !2371, line: 535, column: 17)
!13182 = !DILocation(line: 535, column: 39, scope: !13181)
!13183 = !DILocation(line: 535, column: 17, scope: !12981)
!13184 = !DILocation(line: 536, column: 90, scope: !13185)
!13185 = distinct !DILexicalBlock(scope: !13181, file: !2371, line: 535, column: 48)
!13186 = !DILocation(line: 536, column: 17, scope: !13185)
!13187 = !DILocation(line: 537, column: 13, scope: !13185)
!13188 = !DILocation(line: 541, column: 31, scope: !13189)
!13189 = distinct !DILexicalBlock(scope: !12981, file: !2371, line: 541, column: 17)
!13190 = !DILocation(line: 541, column: 39, scope: !13189)
!13191 = !DILocation(line: 541, column: 17, scope: !12981)
!13192 = !DILocation(line: 542, column: 92, scope: !13193)
!13193 = distinct !DILexicalBlock(scope: !13189, file: !2371, line: 541, column: 48)
!13194 = !DILocation(line: 542, column: 17, scope: !13193)
!13195 = !DILocation(line: 543, column: 13, scope: !13193)
!13196 = !DILocation(line: 544, column: 31, scope: !13197)
!13197 = distinct !DILexicalBlock(scope: !12981, file: !2371, line: 544, column: 17)
!13198 = !DILocation(line: 544, column: 39, scope: !13197)
!13199 = !DILocation(line: 544, column: 17, scope: !12981)
!13200 = !DILocation(line: 545, column: 92, scope: !13201)
!13201 = distinct !DILexicalBlock(scope: !13197, file: !2371, line: 544, column: 48)
!13202 = !DILocation(line: 545, column: 17, scope: !13201)
!13203 = !DILocation(line: 546, column: 13, scope: !13201)
!13204 = !DILocation(line: 550, column: 31, scope: !13205)
!13205 = distinct !DILexicalBlock(scope: !12981, file: !2371, line: 550, column: 17)
!13206 = !DILocation(line: 550, column: 39, scope: !13205)
!13207 = !DILocation(line: 550, column: 17, scope: !12981)
!13208 = !DILocation(line: 551, column: 90, scope: !13209)
!13209 = distinct !DILexicalBlock(scope: !13205, file: !2371, line: 550, column: 48)
!13210 = !DILocation(line: 551, column: 17, scope: !13209)
!13211 = !DILocation(line: 552, column: 13, scope: !13209)
!13212 = !DILocation(line: 553, column: 31, scope: !13213)
!13213 = distinct !DILexicalBlock(scope: !12981, file: !2371, line: 553, column: 17)
!13214 = !DILocation(line: 553, column: 39, scope: !13213)
!13215 = !DILocation(line: 553, column: 17, scope: !12981)
!13216 = !DILocation(line: 554, column: 90, scope: !13217)
!13217 = distinct !DILexicalBlock(scope: !13213, file: !2371, line: 553, column: 48)
!13218 = !DILocation(line: 554, column: 17, scope: !13217)
!13219 = !DILocation(line: 555, column: 13, scope: !13217)
!13220 = !DILocation(line: 559, column: 31, scope: !13221)
!13221 = distinct !DILexicalBlock(scope: !12981, file: !2371, line: 559, column: 17)
!13222 = !DILocation(line: 559, column: 39, scope: !13221)
!13223 = !DILocation(line: 559, column: 17, scope: !12981)
!13224 = !DILocation(line: 560, column: 90, scope: !13225)
!13225 = distinct !DILexicalBlock(scope: !13221, file: !2371, line: 559, column: 48)
!13226 = !DILocation(line: 560, column: 17, scope: !13225)
!13227 = !DILocation(line: 561, column: 13, scope: !13225)
!13228 = !DILocation(line: 562, column: 31, scope: !13229)
!13229 = distinct !DILexicalBlock(scope: !12981, file: !2371, line: 562, column: 17)
!13230 = !DILocation(line: 562, column: 39, scope: !13229)
!13231 = !DILocation(line: 562, column: 17, scope: !12981)
!13232 = !DILocation(line: 563, column: 90, scope: !13233)
!13233 = distinct !DILexicalBlock(scope: !13229, file: !2371, line: 562, column: 48)
!13234 = !DILocation(line: 563, column: 17, scope: !13233)
!13235 = !DILocation(line: 564, column: 13, scope: !13233)
!13236 = !DILocation(line: 568, column: 31, scope: !13237)
!13237 = distinct !DILexicalBlock(scope: !12981, file: !2371, line: 568, column: 17)
!13238 = !DILocation(line: 568, column: 39, scope: !13237)
!13239 = !DILocation(line: 568, column: 17, scope: !12981)
!13240 = !DILocation(line: 569, column: 94, scope: !13241)
!13241 = distinct !DILexicalBlock(scope: !13237, file: !2371, line: 568, column: 48)
!13242 = !DILocation(line: 569, column: 17, scope: !13241)
!13243 = !DILocation(line: 570, column: 13, scope: !13241)
!13244 = !DILocation(line: 571, column: 31, scope: !13245)
!13245 = distinct !DILexicalBlock(scope: !12981, file: !2371, line: 571, column: 17)
!13246 = !DILocation(line: 571, column: 39, scope: !13245)
!13247 = !DILocation(line: 571, column: 17, scope: !12981)
!13248 = !DILocation(line: 572, column: 94, scope: !13249)
!13249 = distinct !DILexicalBlock(scope: !13245, file: !2371, line: 571, column: 48)
!13250 = !DILocation(line: 572, column: 17, scope: !13249)
!13251 = !DILocation(line: 573, column: 13, scope: !13249)
!13252 = !DILocation(line: 577, column: 31, scope: !13253)
!13253 = distinct !DILexicalBlock(scope: !12981, file: !2371, line: 577, column: 17)
!13254 = !DILocation(line: 577, column: 39, scope: !13253)
!13255 = !DILocation(line: 577, column: 17, scope: !12981)
!13256 = !DILocation(line: 578, column: 92, scope: !13257)
!13257 = distinct !DILexicalBlock(scope: !13253, file: !2371, line: 577, column: 48)
!13258 = !DILocation(line: 578, column: 17, scope: !13257)
!13259 = !DILocation(line: 579, column: 13, scope: !13257)
!13260 = !DILocation(line: 580, column: 31, scope: !13261)
!13261 = distinct !DILexicalBlock(scope: !12981, file: !2371, line: 580, column: 17)
!13262 = !DILocation(line: 580, column: 39, scope: !13261)
!13263 = !DILocation(line: 580, column: 17, scope: !12981)
!13264 = !DILocation(line: 581, column: 92, scope: !13265)
!13265 = distinct !DILexicalBlock(scope: !13261, file: !2371, line: 580, column: 48)
!13266 = !DILocation(line: 581, column: 17, scope: !13265)
!13267 = !DILocation(line: 582, column: 13, scope: !13265)
!13268 = !DILocation(line: 586, column: 31, scope: !13269)
!13269 = distinct !DILexicalBlock(scope: !12981, file: !2371, line: 586, column: 17)
!13270 = !DILocation(line: 586, column: 39, scope: !13269)
!13271 = !DILocation(line: 586, column: 17, scope: !12981)
!13272 = !DILocation(line: 587, column: 92, scope: !13273)
!13273 = distinct !DILexicalBlock(scope: !13269, file: !2371, line: 586, column: 48)
!13274 = !DILocation(line: 587, column: 17, scope: !13273)
!13275 = !DILocation(line: 588, column: 13, scope: !13273)
!13276 = !DILocation(line: 589, column: 31, scope: !13277)
!13277 = distinct !DILexicalBlock(scope: !12981, file: !2371, line: 589, column: 17)
!13278 = !DILocation(line: 589, column: 39, scope: !13277)
!13279 = !DILocation(line: 589, column: 17, scope: !12981)
!13280 = !DILocation(line: 590, column: 92, scope: !13281)
!13281 = distinct !DILexicalBlock(scope: !13277, file: !2371, line: 589, column: 48)
!13282 = !DILocation(line: 590, column: 17, scope: !13281)
!13283 = !DILocation(line: 591, column: 13, scope: !13281)
!13284 = !DILocation(line: 595, column: 88, scope: !12981)
!13285 = !DILocation(line: 595, column: 13, scope: !12981)
!13286 = !DILocation(line: 596, column: 13, scope: !12981)
!13287 = !DILocation(line: 599, column: 88, scope: !12981)
!13288 = !DILocation(line: 599, column: 13, scope: !12981)
!13289 = !DILocation(line: 600, column: 13, scope: !12981)
!13290 = !DILocation(line: 603, column: 96, scope: !12981)
!13291 = !DILocation(line: 603, column: 13, scope: !12981)
!13292 = !DILocation(line: 604, column: 13, scope: !12981)
!13293 = !DILocation(line: 607, column: 98, scope: !12981)
!13294 = !DILocation(line: 607, column: 13, scope: !12981)
!13295 = !DILocation(line: 608, column: 13, scope: !12981)
!13296 = !DILocation(line: 611, column: 98, scope: !12981)
!13297 = !DILocation(line: 611, column: 13, scope: !12981)
!13298 = !DILocation(line: 612, column: 13, scope: !12981)
!13299 = !DILocation(line: 615, column: 90, scope: !12981)
!13300 = !DILocation(line: 615, column: 13, scope: !12981)
!13301 = !DILocation(line: 616, column: 13, scope: !12981)
!13302 = !DILocation(line: 619, column: 84, scope: !12981)
!13303 = !DILocation(line: 619, column: 13, scope: !12981)
!13304 = !DILocation(line: 620, column: 13, scope: !12981)
!13305 = !DILocation(line: 623, column: 86, scope: !12981)
!13306 = !DILocation(line: 623, column: 13, scope: !12981)
!13307 = !DILocation(line: 624, column: 13, scope: !12981)
!13308 = !DILocation(line: 627, column: 86, scope: !12981)
!13309 = !DILocation(line: 627, column: 13, scope: !12981)
!13310 = !DILocation(line: 628, column: 13, scope: !12981)
!13311 = !DILocation(line: 631, column: 86, scope: !12981)
!13312 = !DILocation(line: 631, column: 13, scope: !12981)
!13313 = !DILocation(line: 632, column: 13, scope: !12981)
!13314 = !DILocation(line: 635, column: 84, scope: !12981)
!13315 = !DILocation(line: 635, column: 13, scope: !12981)
!13316 = !DILocation(line: 636, column: 13, scope: !12981)
!13317 = !DILocation(line: 639, column: 88, scope: !12981)
!13318 = !DILocation(line: 639, column: 13, scope: !12981)
!13319 = !DILocation(line: 640, column: 13, scope: !12981)
!13320 = !DILocation(line: 643, column: 92, scope: !12981)
!13321 = !DILocation(line: 643, column: 13, scope: !12981)
!13322 = !DILocation(line: 644, column: 13, scope: !12981)
!13323 = !DILocation(line: 648, column: 1, scope: !12965)
!13324 = distinct !DISubprogram(name: "pmu_disable_interrupt", scope: !2371, file: !2371, line: 398, type: !13325, scopeLine: 399, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2372, retainedNodes: !13327)
!13325 = !DISubroutineType(types: !13326)
!13326 = !{!4928, !12938, !12939}
!13327 = !{!13328, !13329, !13330, !13331}
!13328 = !DILocalVariable(name: "int_ch", arg: 1, scope: !13324, file: !2371, line: 398, type: !12938)
!13329 = !DILocalVariable(name: "trigger_mode", arg: 2, scope: !13324, file: !2371, line: 398, type: !12939)
!13330 = !DILocalVariable(name: "status", scope: !13324, file: !2371, line: 400, type: !4928)
!13331 = !DILocalVariable(name: "mask", scope: !13324, file: !2371, line: 401, type: !16)
!13332 = !DILocation(line: 0, scope: !13324)
!13333 = !DILocation(line: 403, column: 12, scope: !13324)
!13334 = !DILocation(line: 405, column: 5, scope: !13324)
!13335 = !DILocation(line: 406, column: 32, scope: !13324)
!13336 = !DILocation(line: 406, column: 44, scope: !13324)
!13337 = !DILocation(line: 408, column: 5, scope: !13324)
!13338 = !DILocation(line: 411, column: 5, scope: !13324)
!13339 = distinct !DISubprogram(name: "pmu_auxadc_init", scope: !2480, file: !2480, line: 47, type: !260, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2483, retainedNodes: !13340)
!13340 = !{!13341, !13342}
!13341 = !DILocalVariable(name: "AUXADC_SW_GAIN_TRIM_MSB", scope: !13339, file: !2480, line: 49, type: !76)
!13342 = !DILocalVariable(name: "AUXADC_SW_OFFSET_TRIM_MSB", scope: !13339, file: !2480, line: 49, type: !76)
!13343 = !DILocation(line: 51, column: 31, scope: !13339)
!13344 = !DILocation(line: 0, scope: !13339)
!13345 = !DILocation(line: 52, column: 34, scope: !13346)
!13346 = distinct !DILexicalBlock(scope: !13339, file: !2480, line: 52, column: 9)
!13347 = !DILocation(line: 52, column: 42, scope: !13346)
!13348 = !DILocation(line: 52, column: 9, scope: !13339)
!13349 = !DILocation(line: 57, column: 138, scope: !13339)
!13350 = !DILocation(line: 57, column: 5, scope: !13339)
!13351 = !DILocation(line: 59, column: 33, scope: !13339)
!13352 = !DILocation(line: 60, column: 36, scope: !13353)
!13353 = distinct !DILexicalBlock(scope: !13339, file: !2480, line: 60, column: 9)
!13354 = !DILocation(line: 60, column: 43, scope: !13353)
!13355 = !DILocation(line: 60, column: 9, scope: !13339)
!13356 = !DILocation(line: 65, column: 144, scope: !13339)
!13357 = !DILocation(line: 65, column: 5, scope: !13339)
!13358 = !DILocation(line: 67, column: 1, scope: !13339)
!13359 = distinct !DISubprogram(name: "pmu_auxadc_get_channel_value", scope: !2480, file: !2480, line: 70, type: !13360, scopeLine: 71, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2483, retainedNodes: !13363)
!13360 = !DISubroutineType(types: !13361)
!13361 = !{!16, !13362, !7, !7}
!13362 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmu_adc_channel_t", file: !2486, line: 61, baseType: !2485)
!13363 = !{!13364, !13365, !13366, !13367, !13368, !13369, !13370, !13374}
!13364 = !DILocalVariable(name: "dwChannel", arg: 1, scope: !13359, file: !2480, line: 70, type: !13362)
!13365 = !DILocalVariable(name: "deCount", arg: 2, scope: !13359, file: !2480, line: 70, type: !7)
!13366 = !DILocalVariable(name: "trimd", arg: 3, scope: !13359, file: !2480, line: 70, type: !7)
!13367 = !DILocalVariable(name: "Channel", scope: !13359, file: !2480, line: 72, type: !76)
!13368 = !DILocalVariable(name: "adc_result", scope: !13359, file: !2480, line: 73, type: !1043)
!13369 = !DILocalVariable(name: "temperature", scope: !13359, file: !2480, line: 74, type: !7)
!13370 = !DILocalVariable(name: "adc_vol", scope: !13371, file: !2480, line: 170, type: !2504)
!13371 = distinct !DILexicalBlock(scope: !13372, file: !2480, line: 169, column: 20)
!13372 = distinct !DILexicalBlock(scope: !13373, file: !2480, line: 167, column: 17)
!13373 = distinct !DILexicalBlock(scope: !13359, file: !2480, line: 163, column: 24)
!13374 = !DILocalVariable(name: "calibrate", scope: !13371, file: !2480, line: 170, type: !2504)
!13375 = !DILocation(line: 0, scope: !13359)
!13376 = !DILocation(line: 76, column: 9, scope: !13377)
!13377 = distinct !DILexicalBlock(scope: !13359, file: !2480, line: 76, column: 9)
!13378 = !DILocation(line: 76, column: 17, scope: !13377)
!13379 = !DILocation(line: 76, column: 9, scope: !13359)
!13380 = !DILocation(line: 80, column: 5, scope: !13359)
!13381 = !DILocation(line: 82, column: 13, scope: !13382)
!13382 = distinct !DILexicalBlock(scope: !13359, file: !2480, line: 80, column: 22)
!13383 = !DILocation(line: 83, column: 13, scope: !13382)
!13384 = !DILocation(line: 84, column: 26, scope: !13382)
!13385 = !DILocation(line: 85, column: 13, scope: !13382)
!13386 = !DILocation(line: 88, column: 26, scope: !13382)
!13387 = !DILocation(line: 89, column: 13, scope: !13382)
!13388 = !DILocation(line: 92, column: 13, scope: !13382)
!13389 = !DILocation(line: 93, column: 13, scope: !13382)
!13390 = !DILocation(line: 94, column: 26, scope: !13382)
!13391 = !DILocation(line: 95, column: 13, scope: !13382)
!13392 = !DILocation(line: 98, column: 13, scope: !13382)
!13393 = !DILocation(line: 99, column: 13, scope: !13382)
!13394 = !DILocation(line: 100, column: 26, scope: !13382)
!13395 = !DILocation(line: 101, column: 13, scope: !13382)
!13396 = !DILocation(line: 104, column: 13, scope: !13382)
!13397 = !DILocation(line: 105, column: 13, scope: !13382)
!13398 = !DILocation(line: 106, column: 26, scope: !13382)
!13399 = !DILocation(line: 107, column: 13, scope: !13382)
!13400 = !DILocation(line: 110, column: 13, scope: !13382)
!13401 = !DILocation(line: 111, column: 13, scope: !13382)
!13402 = !DILocation(line: 112, column: 26, scope: !13382)
!13403 = !DILocation(line: 113, column: 13, scope: !13382)
!13404 = !DILocation(line: 116, column: 13, scope: !13382)
!13405 = !DILocation(line: 117, column: 13, scope: !13382)
!13406 = !DILocation(line: 118, column: 26, scope: !13382)
!13407 = !DILocation(line: 119, column: 13, scope: !13382)
!13408 = !DILocation(line: 122, column: 13, scope: !13382)
!13409 = !DILocation(line: 123, column: 13, scope: !13382)
!13410 = !DILocation(line: 124, column: 26, scope: !13382)
!13411 = !DILocation(line: 125, column: 13, scope: !13382)
!13412 = !DILocation(line: 128, column: 13, scope: !13382)
!13413 = !DILocation(line: 129, column: 13, scope: !13382)
!13414 = !DILocation(line: 130, column: 26, scope: !13382)
!13415 = !DILocation(line: 131, column: 13, scope: !13382)
!13416 = !DILocation(line: 134, column: 13, scope: !13382)
!13417 = !DILocation(line: 135, column: 13, scope: !13382)
!13418 = !DILocation(line: 136, column: 26, scope: !13382)
!13419 = !DILocation(line: 137, column: 13, scope: !13382)
!13420 = !DILocation(line: 140, column: 13, scope: !13382)
!13421 = !DILocation(line: 141, column: 13, scope: !13382)
!13422 = !DILocation(line: 142, column: 26, scope: !13382)
!13423 = !DILocation(line: 143, column: 13, scope: !13382)
!13424 = !DILocation(line: 146, column: 13, scope: !13382)
!13425 = !DILocation(line: 147, column: 13, scope: !13382)
!13426 = !DILocation(line: 148, column: 26, scope: !13382)
!13427 = !DILocation(line: 149, column: 13, scope: !13382)
!13428 = !DILocation(line: 152, column: 13, scope: !13382)
!13429 = !DILocation(line: 153, column: 13, scope: !13382)
!13430 = !DILocation(line: 154, column: 26, scope: !13382)
!13431 = !DILocation(line: 155, column: 13, scope: !13382)
!13432 = !DILocation(line: 158, column: 26, scope: !13382)
!13433 = !DILocation(line: 159, column: 13, scope: !13382)
!13434 = !DILocation(line: 163, column: 5, scope: !13359)
!13435 = !DILocation(line: 166, column: 27, scope: !13373)
!13436 = !DILocation(line: 167, column: 17, scope: !13372)
!13437 = !DILocation(line: 167, column: 46, scope: !13372)
!13438 = !DILocation(line: 167, column: 17, scope: !13373)
!13439 = !DILocation(line: 168, column: 31, scope: !13440)
!13440 = distinct !DILexicalBlock(scope: !13372, file: !2480, line: 167, column: 52)
!13441 = !DILocation(line: 168, column: 46, scope: !13440)
!13442 = !DILocation(line: 168, column: 68, scope: !13440)
!13443 = !DILocation(line: 169, column: 13, scope: !13440)
!13444 = !DILocation(line: 171, column: 29, scope: !13371)
!13445 = !DILocation(line: 171, column: 47, scope: !13371)
!13446 = !DILocation(line: 171, column: 54, scope: !13371)
!13447 = !DILocation(line: 171, column: 59, scope: !13371)
!13448 = !DILocation(line: 0, scope: !13371)
!13449 = !DILocation(line: 172, column: 41, scope: !13371)
!13450 = !DILocation(line: 172, column: 61, scope: !13371)
!13451 = !DILocation(line: 173, column: 53, scope: !13371)
!13452 = !DILocation(line: 173, column: 30, scope: !13371)
!13453 = !DILocation(line: 178, column: 27, scope: !13373)
!13454 = !DILocation(line: 178, column: 42, scope: !13373)
!13455 = !DILocation(line: 178, column: 64, scope: !13373)
!13456 = !DILocation(line: 179, column: 13, scope: !13373)
!13457 = !DILocation(line: 182, column: 27, scope: !13373)
!13458 = !DILocation(line: 182, column: 42, scope: !13373)
!13459 = !DILocation(line: 182, column: 64, scope: !13373)
!13460 = !DILocation(line: 183, column: 13, scope: !13373)
!13461 = !DILocation(line: 186, column: 27, scope: !13373)
!13462 = !DILocation(line: 186, column: 42, scope: !13373)
!13463 = !DILocation(line: 186, column: 64, scope: !13373)
!13464 = !DILocation(line: 187, column: 13, scope: !13373)
!13465 = !DILocation(line: 190, column: 27, scope: !13373)
!13466 = !DILocation(line: 190, column: 42, scope: !13373)
!13467 = !DILocation(line: 190, column: 64, scope: !13373)
!13468 = !DILocation(line: 191, column: 13, scope: !13373)
!13469 = !DILocation(line: 194, column: 12, scope: !13359)
!13470 = !DILocation(line: 194, column: 5, scope: !13359)
!13471 = !DILocation(line: 195, column: 1, scope: !13359)
!13472 = distinct !DISubprogram(name: "pmu_auxadc_delay", scope: !2480, file: !2480, line: 216, type: !13473, scopeLine: 217, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2483, retainedNodes: !13475)
!13473 = !DISubroutineType(types: !13474)
!13474 = !{null, !16}
!13475 = !{!13476}
!13476 = !DILocalVariable(name: "ms", arg: 1, scope: !13472, file: !2480, line: 216, type: !16)
!13477 = !DILocation(line: 0, scope: !13472)
!13478 = !DILocation(line: 218, column: 5, scope: !13472)
!13479 = !DILocation(line: 219, column: 1, scope: !13472)
!13480 = distinct !DISubprogram(name: "aux_get_adc_result", scope: !2480, file: !2480, line: 198, type: !13481, scopeLine: 199, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2483, retainedNodes: !13483)
!13481 = !DISubroutineType(types: !13482)
!13482 = !{!1043, !16}
!13483 = !{!13484, !13485, !13486, !13487}
!13484 = !DILocalVariable(name: "ADC_OUT_L_Addr", arg: 1, scope: !13480, file: !2480, line: 198, type: !16)
!13485 = !DILocalVariable(name: "count", scope: !13480, file: !2480, line: 200, type: !1043)
!13486 = !DILocalVariable(name: "adc_result", scope: !13480, file: !2480, line: 200, type: !1043)
!13487 = !DILocalVariable(name: "adc_l", scope: !13480, file: !2480, line: 201, type: !76)
!13488 = !DILocation(line: 0, scope: !13480)
!13489 = !DILocation(line: 202, column: 5, scope: !13480)
!13490 = !DILocation(line: 203, column: 22, scope: !13491)
!13491 = distinct !DILexicalBlock(scope: !13480, file: !2480, line: 202, column: 8)
!13492 = !DILocation(line: 204, column: 14, scope: !13493)
!13493 = distinct !DILexicalBlock(scope: !13491, file: !2480, line: 204, column: 13)
!13494 = !DILocation(line: 204, column: 25, scope: !13493)
!13495 = !DILocation(line: 204, column: 33, scope: !13493)
!13496 = !DILocation(line: 204, column: 13, scope: !13491)
!13497 = !DILocation(line: 205, column: 21, scope: !13498)
!13498 = distinct !DILexicalBlock(scope: !13493, file: !2480, line: 204, column: 42)
!13499 = !DILocation(line: 206, column: 39, scope: !13498)
!13500 = !DILocation(line: 206, column: 45, scope: !13498)
!13501 = !DILocation(line: 206, column: 57, scope: !13498)
!13502 = !DILocation(line: 206, column: 55, scope: !13498)
!13503 = !DILocation(line: 206, column: 26, scope: !13498)
!13504 = !DILocation(line: 207, column: 13, scope: !13498)
!13505 = !DILocation(line: 209, column: 9, scope: !13491)
!13506 = !DILocation(line: 210, column: 19, scope: !13480)
!13507 = !DILocation(line: 210, column: 22, scope: !13480)
!13508 = !DILocation(line: 210, column: 5, scope: !13491)
!13509 = distinct !{!13509, !13489, !13510}
!13510 = !DILocation(line: 210, column: 43, scope: !13480)
!13511 = !DILocation(line: 214, column: 1, scope: !13480)
!13512 = !DILocation(line: 229, column: 9, scope: !2543)
!13513 = !DILocation(line: 229, column: 9, scope: !2479)
!13514 = !DILocation(line: 231, column: 14, scope: !2542)
!13515 = !DILocation(line: 233, column: 15, scope: !2542)
!13516 = !DILocation(line: 0, scope: !2542)
!13517 = !DILocation(line: 234, column: 15, scope: !2542)
!13518 = !DILocation(line: 235, column: 26, scope: !2542)
!13519 = !DILocation(line: 235, column: 42, scope: !2542)
!13520 = !DILocation(line: 236, column: 33, scope: !13521)
!13521 = distinct !DILexicalBlock(scope: !2542, file: !2480, line: 236, column: 13)
!13522 = !DILocation(line: 236, column: 13, scope: !2542)
!13523 = !DILocation(line: 239, column: 25, scope: !2542)
!13524 = !DILocation(line: 239, column: 23, scope: !2542)
!13525 = !DILocation(line: 241, column: 15, scope: !2542)
!13526 = !DILocation(line: 242, column: 15, scope: !2542)
!13527 = !DILocation(line: 243, column: 26, scope: !2542)
!13528 = !DILocation(line: 243, column: 42, scope: !2542)
!13529 = !DILocation(line: 244, column: 33, scope: !13530)
!13530 = distinct !DILexicalBlock(scope: !2542, file: !2480, line: 244, column: 13)
!13531 = !DILocation(line: 244, column: 13, scope: !2542)
!13532 = !DILocation(line: 247, column: 27, scope: !2542)
!13533 = !DILocation(line: 247, column: 25, scope: !2542)
!13534 = !DILocation(line: 248, column: 5, scope: !2542)
!13535 = !DILocation(line: 250, column: 5, scope: !2479)
!13536 = !DILocation(line: 251, column: 5, scope: !2479)
!13537 = !DILocation(line: 252, column: 18, scope: !2479)
!13538 = !DILocation(line: 0, scope: !2479)
!13539 = !DILocation(line: 254, column: 15, scope: !2479)
!13540 = !DILocation(line: 255, column: 13, scope: !2479)
!13541 = !DILocation(line: 256, column: 17, scope: !2479)
!13542 = !DILocation(line: 256, column: 25, scope: !2479)
!13543 = !DILocation(line: 256, column: 31, scope: !2479)
!13544 = !DILocation(line: 256, column: 43, scope: !2479)
!13545 = !DILocation(line: 256, column: 41, scope: !2479)
!13546 = !DILocation(line: 258, column: 32, scope: !2479)
!13547 = !DILocation(line: 258, column: 64, scope: !2479)
!13548 = !DILocation(line: 258, column: 57, scope: !2479)
!13549 = !DILocation(line: 258, column: 79, scope: !2479)
!13550 = !DILocation(line: 258, column: 53, scope: !2479)
!13551 = !DILocation(line: 258, column: 48, scope: !2479)
!13552 = !DILocation(line: 258, column: 18, scope: !2479)
!13553 = !DILocation(line: 259, column: 31, scope: !2479)
!13554 = !DILocation(line: 259, column: 29, scope: !2479)
!13555 = !DILocation(line: 260, column: 5, scope: !2479)
!13556 = !DILocation(line: 271, column: 9, scope: !2520)
!13557 = !DILocation(line: 271, column: 9, scope: !2512)
!13558 = !DILocation(line: 272, column: 14, scope: !2519)
!13559 = !DILocation(line: 273, column: 9, scope: !2519)
!13560 = !DILocation(line: 273, column: 23, scope: !2519)
!13561 = !DILocation(line: 276, column: 40, scope: !2519)
!13562 = !DILocation(line: 276, column: 9, scope: !2519)
!13563 = !DILocation(line: 277, column: 30, scope: !2519)
!13564 = !DILocation(line: 277, column: 40, scope: !2519)
!13565 = !DILocation(line: 277, column: 9, scope: !2519)
!13566 = !DILocation(line: 279, column: 35, scope: !2519)
!13567 = !DILocation(line: 279, column: 9, scope: !2519)
!13568 = !DILocation(line: 281, column: 24, scope: !2519)
!13569 = !DILocation(line: 281, column: 30, scope: !2519)
!13570 = !DILocation(line: 0, scope: !2519)
!13571 = !DILocation(line: 282, column: 21, scope: !2519)
!13572 = !DILocation(line: 283, column: 30, scope: !13573)
!13573 = distinct !DILexicalBlock(scope: !2519, file: !2480, line: 283, column: 13)
!13574 = !DILocation(line: 286, column: 19, scope: !2519)
!13575 = !DILocation(line: 288, column: 17, scope: !2519)
!13576 = !DILocation(line: 289, column: 25, scope: !2519)
!13577 = !DILocation(line: 289, column: 31, scope: !2519)
!13578 = !DILocation(line: 289, column: 43, scope: !2519)
!13579 = !DILocation(line: 289, column: 41, scope: !2519)
!13580 = !DILocation(line: 289, column: 15, scope: !2519)
!13581 = !DILocation(line: 291, column: 16, scope: !2519)
!13582 = !DILocation(line: 291, column: 24, scope: !2519)
!13583 = !DILocation(line: 291, column: 30, scope: !2519)
!13584 = !DILocation(line: 292, column: 19, scope: !2519)
!13585 = !DILocation(line: 293, column: 22, scope: !13586)
!13586 = distinct !DILexicalBlock(scope: !2519, file: !2480, line: 293, column: 13)
!13587 = !DILocation(line: 293, column: 30, scope: !13586)
!13588 = !DILocation(line: 293, column: 13, scope: !2519)
!13589 = !DILocation(line: 297, column: 30, scope: !13590)
!13590 = distinct !DILexicalBlock(scope: !2519, file: !2480, line: 297, column: 13)
!13591 = !DILocation(line: 300, column: 41, scope: !2519)
!13592 = !DILocation(line: 300, column: 30, scope: !2519)
!13593 = !DILocation(line: 300, column: 54, scope: !2519)
!13594 = !DILocation(line: 300, column: 17, scope: !2519)
!13595 = !DILocation(line: 301, column: 5, scope: !2520)
!13596 = !DILocation(line: 301, column: 5, scope: !2519)
!13597 = !DILocation(line: 303, column: 5, scope: !2512)
!13598 = !DILocation(line: 304, column: 5, scope: !2512)
!13599 = !DILocation(line: 305, column: 19, scope: !2512)
!13600 = !DILocation(line: 305, column: 14, scope: !2512)
!13601 = !DILocation(line: 0, scope: !2512)
!13602 = !DILocation(line: 307, column: 29, scope: !2512)
!13603 = !DILocation(line: 307, column: 27, scope: !2512)
!13604 = !DILocation(line: 307, column: 12, scope: !2512)
!13605 = !DILocation(line: 308, column: 19, scope: !2512)
!13606 = !DILocation(line: 308, column: 29, scope: !2512)
!13607 = !DILocation(line: 309, column: 20, scope: !2512)
!13608 = !DILocation(line: 309, column: 42, scope: !2512)
!13609 = !DILocation(line: 309, column: 40, scope: !2512)
!13610 = !DILocation(line: 309, column: 30, scope: !2512)
!13611 = !DILocation(line: 309, column: 14, scope: !2512)
!13612 = !DILocation(line: 311, column: 5, scope: !2512)
!13613 = !DILocation(line: 0, scope: !2531)
!13614 = !DILocation(line: 331, column: 14, scope: !13615)
!13615 = distinct !DILexicalBlock(scope: !2531, file: !2480, line: 331, column: 9)
!13616 = !DILocation(line: 331, column: 9, scope: !2531)
!13617 = !DILocation(line: 339, column: 13, scope: !2531)
!13618 = !DILocation(line: 332, column: 19, scope: !13619)
!13619 = distinct !DILexicalBlock(scope: !13620, file: !2480, line: 332, column: 13)
!13620 = distinct !DILexicalBlock(scope: !13615, file: !2480, line: 331, column: 20)
!13621 = !DILocation(line: 332, column: 27, scope: !13619)
!13622 = !DILocation(line: 332, column: 13, scope: !13620)
!13623 = !DILocation(line: 333, column: 25, scope: !13624)
!13624 = distinct !DILexicalBlock(scope: !13619, file: !2480, line: 332, column: 33)
!13625 = !DILocation(line: 334, column: 9, scope: !13624)
!13626 = !DILocation(line: 335, column: 25, scope: !13627)
!13627 = distinct !DILexicalBlock(scope: !13619, file: !2480, line: 334, column: 16)
!13628 = !DILocation(line: 339, column: 5, scope: !2531)
!13629 = distinct !DISubprogram(name: "pmu_get_efuse", scope: !2480, file: !2480, line: 314, type: !13630, scopeLine: 315, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2483, retainedNodes: !13632)
!13630 = !DISubroutineType(types: !13631)
!13631 = !{null, !76, !2824, !2824}
!13632 = !{!13633, !13634, !13635}
!13633 = !DILocalVariable(name: "addr", arg: 1, scope: !13629, file: !2480, line: 314, type: !76)
!13634 = !DILocalVariable(name: "lowbyte", arg: 2, scope: !13629, file: !2480, line: 314, type: !2824)
!13635 = !DILocalVariable(name: "highbyte", arg: 3, scope: !13629, file: !2480, line: 314, type: !2824)
!13636 = !DILocation(line: 0, scope: !13629)
!13637 = !DILocation(line: 316, column: 5, scope: !13629)
!13638 = !DILocation(line: 317, column: 5, scope: !13629)
!13639 = !DILocation(line: 318, column: 5, scope: !13629)
!13640 = !DILocation(line: 319, column: 46, scope: !13629)
!13641 = !DILocation(line: 319, column: 5, scope: !13629)
!13642 = !DILocation(line: 320, column: 5, scope: !13629)
!13643 = !DILocation(line: 321, column: 5, scope: !13629)
!13644 = !DILocation(line: 323, column: 5, scope: !13629)
!13645 = !DILocation(line: 324, column: 17, scope: !13629)
!13646 = !DILocation(line: 324, column: 15, scope: !13629)
!13647 = !DILocation(line: 325, column: 17, scope: !13629)
!13648 = !DILocation(line: 325, column: 15, scope: !13629)
!13649 = !DILocation(line: 326, column: 1, scope: !13629)
!13650 = distinct !DISubprogram(name: "pmu_init", scope: !3275, file: !3275, line: 93, type: !260, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3274, retainedNodes: !262)
!13651 = !DILocation(line: 98, column: 5, scope: !13650)
!13652 = !DILocation(line: 100, column: 5, scope: !13650)
!13653 = !DILocation(line: 101, column: 1, scope: !13650)
!13654 = distinct !DISubprogram(name: "pmu_set_register_value", scope: !3275, file: !3275, line: 104, type: !3287, scopeLine: 105, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3274, retainedNodes: !13655)
!13655 = !{!13656, !13657, !13658, !13659}
!13656 = !DILocalVariable(name: "address", arg: 1, scope: !13654, file: !3275, line: 104, type: !1043)
!13657 = !DILocalVariable(name: "mask", arg: 2, scope: !13654, file: !3275, line: 104, type: !1043)
!13658 = !DILocalVariable(name: "shift", arg: 3, scope: !13654, file: !3275, line: 104, type: !1043)
!13659 = !DILocalVariable(name: "value", arg: 4, scope: !13654, file: !3275, line: 104, type: !1043)
!13660 = !DILocation(line: 0, scope: !13654)
!13661 = !DILocation(line: 106, column: 13, scope: !13654)
!13662 = !DILocation(line: 106, column: 5, scope: !13654)
!13663 = distinct !DISubprogram(name: "pmu_get_register_value", scope: !3275, file: !3275, line: 110, type: !3291, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3274, retainedNodes: !13664)
!13664 = !{!13665, !13666, !13667}
!13665 = !DILocalVariable(name: "address", arg: 1, scope: !13663, file: !3275, line: 110, type: !1043)
!13666 = !DILocalVariable(name: "mask", arg: 2, scope: !13663, file: !3275, line: 110, type: !1043)
!13667 = !DILocalVariable(name: "shift", arg: 3, scope: !13663, file: !3275, line: 110, type: !1043)
!13668 = !DILocation(line: 0, scope: !13663)
!13669 = !DILocation(line: 112, column: 13, scope: !13663)
!13670 = !DILocation(line: 112, column: 5, scope: !13663)
!13671 = distinct !DISubprogram(name: "pmu_control_mtcmos", scope: !3275, file: !3275, line: 116, type: !260, scopeLine: 117, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3274, retainedNodes: !262)
!13672 = !DILocation(line: 118, column: 5, scope: !13671)
!13673 = !DILocation(line: 119, column: 1, scope: !13671)
!13674 = distinct !DISubprogram(name: "pmu_get_vcore_voltage", scope: !3275, file: !3275, line: 123, type: !3296, scopeLine: 124, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3274, retainedNodes: !262)
!13675 = !DILocation(line: 125, column: 13, scope: !13674)
!13676 = !DILocation(line: 125, column: 5, scope: !13674)
!13677 = distinct !DISubprogram(name: "pmu_set_vcore_voltage", scope: !3275, file: !3275, line: 131, type: !2532, scopeLine: 132, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3274, retainedNodes: !13678)
!13678 = !{!13679, !13680}
!13679 = !DILocalVariable(name: "lock", arg: 1, scope: !13677, file: !3275, line: 131, type: !76)
!13680 = !DILocalVariable(name: "vcore", arg: 2, scope: !13677, file: !3275, line: 131, type: !76)
!13681 = !DILocation(line: 0, scope: !13677)
!13682 = !DILocation(line: 133, column: 13, scope: !13677)
!13683 = !DILocation(line: 133, column: 5, scope: !13677)
!13684 = distinct !DISubprogram(name: "pmu_set_vcore_s1_buck", scope: !3275, file: !3275, line: 137, type: !260, scopeLine: 138, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3274, retainedNodes: !262)
!13685 = !DILocation(line: 139, column: 5, scope: !13684)
!13686 = !DILocation(line: 140, column: 1, scope: !13684)
!13687 = distinct !DISubprogram(name: "pmu_ctrl_driver_power", scope: !3275, file: !3275, line: 143, type: !3303, scopeLine: 144, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3274, retainedNodes: !13688)
!13688 = !{!13689, !13690}
!13689 = !DILocalVariable(name: "driver_name", arg: 1, scope: !13687, file: !3275, line: 143, type: !76)
!13690 = !DILocalVariable(name: "enable", arg: 2, scope: !13687, file: !3275, line: 143, type: !76)
!13691 = !DILocation(line: 0, scope: !13687)
!13692 = !DILocation(line: 145, column: 5, scope: !13687)
!13693 = !DILocation(line: 146, column: 1, scope: !13687)
!13694 = distinct !DISubprogram(name: "internal_pmu_ctrl_power", scope: !3275, file: !3275, line: 189, type: !3303, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3274, retainedNodes: !13695)
!13695 = !{!13696, !13697}
!13696 = !DILocalVariable(name: "driver_name", arg: 1, scope: !13694, file: !3275, line: 189, type: !76)
!13697 = !DILocalVariable(name: "enable", arg: 2, scope: !13694, file: !3275, line: 189, type: !76)
!13698 = !DILocation(line: 0, scope: !13694)
!13699 = !DILocation(line: 191, column: 5, scope: !13694)
!13700 = !DILocation(line: 193, column: 13, scope: !13701)
!13701 = distinct !DILexicalBlock(scope: !13694, file: !3275, line: 191, column: 26)
!13702 = !DILocation(line: 194, column: 13, scope: !13701)
!13703 = !DILocation(line: 197, column: 13, scope: !13701)
!13704 = !DILocation(line: 198, column: 13, scope: !13701)
!13705 = !DILocation(line: 201, column: 40, scope: !13701)
!13706 = !DILocation(line: 201, column: 13, scope: !13701)
!13707 = !DILocation(line: 202, column: 13, scope: !13701)
!13708 = !DILocation(line: 205, column: 41, scope: !13701)
!13709 = !DILocation(line: 205, column: 13, scope: !13701)
!13710 = !DILocation(line: 206, column: 13, scope: !13701)
!13711 = !DILocation(line: 209, column: 39, scope: !13701)
!13712 = !DILocation(line: 209, column: 13, scope: !13701)
!13713 = !DILocation(line: 210, column: 13, scope: !13701)
!13714 = !DILocation(line: 213, column: 13, scope: !13701)
!13715 = !DILocation(line: 214, column: 13, scope: !13701)
!13716 = !DILocation(line: 217, column: 13, scope: !13701)
!13717 = !DILocation(line: 218, column: 13, scope: !13701)
!13718 = !DILocation(line: 221, column: 13, scope: !13701)
!13719 = !DILocation(line: 222, column: 13, scope: !13701)
!13720 = !DILocation(line: 225, column: 13, scope: !13701)
!13721 = !DILocation(line: 226, column: 13, scope: !13701)
!13722 = !DILocation(line: 228, column: 1, scope: !13694)
!13723 = distinct !DISubprogram(name: "pmu_audio_lock_voltage", scope: !3275, file: !3275, line: 149, type: !260, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3274, retainedNodes: !262)
!13724 = !DILocation(line: 151, column: 5, scope: !13723)
!13725 = !DILocation(line: 152, column: 1, scope: !13723)
!13726 = distinct !DISubprogram(name: "internal_pmu_audio_lock_voltage", scope: !3275, file: !3275, line: 230, type: !260, scopeLine: 231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3274, retainedNodes: !262)
!13727 = !DILocation(line: 232, column: 5, scope: !13726)
!13728 = !DILocation(line: 233, column: 5, scope: !13726)
!13729 = !DILocation(line: 234, column: 1, scope: !13726)
!13730 = distinct !DISubprogram(name: "pmu_audio_unlock_voltage", scope: !3275, file: !3275, line: 155, type: !260, scopeLine: 156, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3274, retainedNodes: !262)
!13731 = !DILocation(line: 158, column: 1, scope: !13730)
!13732 = distinct !DISubprogram(name: "pmu_get_usb_input_status", scope: !3275, file: !3275, line: 161, type: !3296, scopeLine: 162, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3274, retainedNodes: !262)
!13733 = !DILocation(line: 163, column: 13, scope: !13732)
!13734 = !DILocation(line: 163, column: 5, scope: !13732)
!13735 = distinct !DISubprogram(name: "pmu_enter_power_off", scope: !3275, file: !3275, line: 167, type: !260, scopeLine: 168, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3274, retainedNodes: !262)
!13736 = !DILocation(line: 169, column: 5, scope: !13735)
!13737 = !DILocation(line: 170, column: 1, scope: !13735)
!13738 = distinct !DISubprogram(name: "pmu_reset", scope: !3275, file: !3275, line: 173, type: !260, scopeLine: 174, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3274, retainedNodes: !262)
!13739 = !DILocation(line: 175, column: 5, scope: !13738)
!13740 = !DILocation(line: 176, column: 1, scope: !13738)
!13741 = distinct !DISubprogram(name: "pmu_get_type", scope: !3275, file: !3275, line: 178, type: !2481, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3274, retainedNodes: !262)
!13742 = !DILocation(line: 183, column: 5, scope: !13741)
!13743 = distinct !DISubprogram(name: "null_pmu_set_register_value", scope: !3275, file: !3275, line: 238, type: !3287, scopeLine: 239, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3274, retainedNodes: !13744)
!13744 = !{!13745, !13746, !13747, !13748}
!13745 = !DILocalVariable(name: "address", arg: 1, scope: !13743, file: !3275, line: 238, type: !1043)
!13746 = !DILocalVariable(name: "mask", arg: 2, scope: !13743, file: !3275, line: 238, type: !1043)
!13747 = !DILocalVariable(name: "shift", arg: 3, scope: !13743, file: !3275, line: 238, type: !1043)
!13748 = !DILocalVariable(name: "value", arg: 4, scope: !13743, file: !3275, line: 238, type: !1043)
!13749 = !DILocation(line: 0, scope: !13743)
!13750 = !DILocation(line: 240, column: 5, scope: !13743)
!13751 = distinct !DISubprogram(name: "null_pmu_get_register_value", scope: !3275, file: !3275, line: 244, type: !3291, scopeLine: 245, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3274, retainedNodes: !13752)
!13752 = !{!13753, !13754, !13755}
!13753 = !DILocalVariable(name: "address", arg: 1, scope: !13751, file: !3275, line: 244, type: !1043)
!13754 = !DILocalVariable(name: "mask", arg: 2, scope: !13751, file: !3275, line: 244, type: !1043)
!13755 = !DILocalVariable(name: "shift", arg: 3, scope: !13751, file: !3275, line: 244, type: !1043)
!13756 = !DILocation(line: 0, scope: !13751)
!13757 = !DILocation(line: 246, column: 5, scope: !13751)
!13758 = distinct !DISubprogram(name: "null_function", scope: !3275, file: !3275, line: 250, type: !260, scopeLine: 251, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3274, retainedNodes: !262)
!13759 = !DILocation(line: 252, column: 1, scope: !13758)
!13760 = distinct !DISubprogram(name: "log_hal_error_internal", scope: !3311, file: !3311, line: 58, type: !13761, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3310, retainedNodes: !13763)
!13761 = !DISubroutineType(types: !13762)
!13762 = !{null, !80, !7, !80, null}
!13763 = !{!13764, !13765, !13766, !13767, !13776}
!13764 = !DILocalVariable(name: "func", arg: 1, scope: !13760, file: !3311, line: 58, type: !80)
!13765 = !DILocalVariable(name: "line", arg: 2, scope: !13760, file: !3311, line: 58, type: !7)
!13766 = !DILocalVariable(name: "message", arg: 3, scope: !13760, file: !3311, line: 58, type: !80)
!13767 = !DILocalVariable(name: "ap", scope: !13760, file: !3311, line: 60, type: !13768)
!13768 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !13769, line: 46, baseType: !13770)
!13769 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/stdio.h", directory: "/home/mjshen/RTOSExploration")
!13770 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !13771, line: 32, baseType: !13772)
!13771 = !DIFile(filename: "/usr/lib/llvm-14/lib/clang/14.0.6/include/stdarg.h", directory: "")
!13772 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !3311, baseType: !13773)
!13773 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !13774)
!13774 = !{!13775}
!13775 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !13773, file: !3311, line: 60, baseType: !65, size: 32)
!13776 = !DILocalVariable(name: "mask", scope: !13760, file: !3311, line: 62, type: !61)
!13777 = !DILocation(line: 0, scope: !13760)
!13778 = !DILocation(line: 60, column: 5, scope: !13760)
!13779 = !DILocation(line: 60, column: 13, scope: !13760)
!13780 = !DILocation(line: 62, column: 5, scope: !13760)
!13781 = !DILocation(line: 63, column: 5, scope: !13760)
!13782 = !DILocation(line: 65, column: 5, scope: !13760)
!13783 = !DILocation(line: 66, column: 5, scope: !13760)
!13784 = !DILocation(line: 67, column: 5, scope: !13760)
!13785 = !DILocation(line: 69, column: 37, scope: !13760)
!13786 = !DILocation(line: 69, column: 5, scope: !13760)
!13787 = !DILocation(line: 71, column: 1, scope: !13760)
!13788 = distinct !DISubprogram(name: "log_hal_warning_internal", scope: !3311, file: !3311, line: 72, type: !13761, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3310, retainedNodes: !13789)
!13789 = !{!13790, !13791, !13792, !13793, !13794}
!13790 = !DILocalVariable(name: "func", arg: 1, scope: !13788, file: !3311, line: 72, type: !80)
!13791 = !DILocalVariable(name: "line", arg: 2, scope: !13788, file: !3311, line: 72, type: !7)
!13792 = !DILocalVariable(name: "message", arg: 3, scope: !13788, file: !3311, line: 72, type: !80)
!13793 = !DILocalVariable(name: "ap", scope: !13788, file: !3311, line: 74, type: !13768)
!13794 = !DILocalVariable(name: "mask", scope: !13788, file: !3311, line: 76, type: !61)
!13795 = !DILocation(line: 0, scope: !13788)
!13796 = !DILocation(line: 74, column: 5, scope: !13788)
!13797 = !DILocation(line: 74, column: 13, scope: !13788)
!13798 = !DILocation(line: 76, column: 5, scope: !13788)
!13799 = !DILocation(line: 77, column: 5, scope: !13788)
!13800 = !DILocation(line: 79, column: 5, scope: !13788)
!13801 = !DILocation(line: 80, column: 5, scope: !13788)
!13802 = !DILocation(line: 81, column: 5, scope: !13788)
!13803 = !DILocation(line: 83, column: 37, scope: !13788)
!13804 = !DILocation(line: 83, column: 5, scope: !13788)
!13805 = !DILocation(line: 85, column: 1, scope: !13788)
!13806 = distinct !DISubprogram(name: "log_hal_info_internal", scope: !3311, file: !3311, line: 86, type: !13761, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3310, retainedNodes: !13807)
!13807 = !{!13808, !13809, !13810, !13811, !13812}
!13808 = !DILocalVariable(name: "func", arg: 1, scope: !13806, file: !3311, line: 86, type: !80)
!13809 = !DILocalVariable(name: "line", arg: 2, scope: !13806, file: !3311, line: 86, type: !7)
!13810 = !DILocalVariable(name: "message", arg: 3, scope: !13806, file: !3311, line: 86, type: !80)
!13811 = !DILocalVariable(name: "ap", scope: !13806, file: !3311, line: 88, type: !13768)
!13812 = !DILocalVariable(name: "mask", scope: !13806, file: !3311, line: 90, type: !61)
!13813 = !DILocation(line: 0, scope: !13806)
!13814 = !DILocation(line: 88, column: 5, scope: !13806)
!13815 = !DILocation(line: 88, column: 13, scope: !13806)
!13816 = !DILocation(line: 90, column: 5, scope: !13806)
!13817 = !DILocation(line: 91, column: 5, scope: !13806)
!13818 = !DILocation(line: 93, column: 5, scope: !13806)
!13819 = !DILocation(line: 94, column: 5, scope: !13806)
!13820 = !DILocation(line: 95, column: 5, scope: !13806)
!13821 = !DILocation(line: 97, column: 37, scope: !13806)
!13822 = !DILocation(line: 97, column: 5, scope: !13806)
!13823 = !DILocation(line: 99, column: 1, scope: !13806)
!13824 = distinct !DISubprogram(name: "log_hal_dump_internal", scope: !3311, file: !3311, line: 101, type: !13825, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3310, retainedNodes: !13829)
!13825 = !DISubroutineType(types: !13826)
!13826 = !{null, !80, !7, !80, !13827, !7, null}
!13827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13828, size: 32)
!13828 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!13829 = !{!13830, !13831, !13832, !13833, !13834}
!13830 = !DILocalVariable(name: "func", arg: 1, scope: !13824, file: !3311, line: 101, type: !80)
!13831 = !DILocalVariable(name: "line", arg: 2, scope: !13824, file: !3311, line: 101, type: !7)
!13832 = !DILocalVariable(name: "message", arg: 3, scope: !13824, file: !3311, line: 101, type: !80)
!13833 = !DILocalVariable(name: "data", arg: 4, scope: !13824, file: !3311, line: 101, type: !13827)
!13834 = !DILocalVariable(name: "length", arg: 5, scope: !13824, file: !3311, line: 101, type: !7)
!13835 = !DILocation(line: 0, scope: !13824)
!13836 = !DILocation(line: 103, column: 1, scope: !13824)
!13837 = distinct !DISubprogram(name: "PMIC_VR_PSI_PMOD_CONFIG", scope: !2552, file: !2552, line: 58, type: !13838, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2551, retainedNodes: !13841)
!13838 = !DISubroutineType(types: !13839)
!13839 = !{null, !13840, !2435, !2436}
!13840 = !DIDerivedType(tag: DW_TAG_typedef, name: "PMIC_VR", file: !2380, line: 60, baseType: !2392)
!13841 = !{!13842, !13843, !13844, !13845}
!13842 = !DILocalVariable(name: "vr_name", arg: 1, scope: !13837, file: !2552, line: 58, type: !13840)
!13843 = !DILocalVariable(name: "psi_mode", arg: 2, scope: !13837, file: !2552, line: 58, type: !2435)
!13844 = !DILocalVariable(name: "pmod", arg: 3, scope: !13837, file: !2552, line: 58, type: !2436)
!13845 = !DILocalVariable(name: "hwid", scope: !13837, file: !2552, line: 60, type: !76)
!13846 = !DILocation(line: 0, scope: !13837)
!13847 = !DILocation(line: 63, column: 5, scope: !13837)
!13848 = !DILocation(line: 64, column: 5, scope: !13837)
!13849 = !DILocation(line: 66, column: 5, scope: !13837)
!13850 = !DILocation(line: 68, column: 13, scope: !13851)
!13851 = distinct !DILexicalBlock(scope: !13837, file: !2552, line: 66, column: 22)
!13852 = !DILocation(line: 70, column: 142, scope: !13853)
!13853 = distinct !DILexicalBlock(scope: !13851, file: !2552, line: 68, column: 31)
!13854 = !DILocation(line: 70, column: 21, scope: !13853)
!13855 = !DILocation(line: 71, column: 21, scope: !13853)
!13856 = !DILocation(line: 73, column: 142, scope: !13853)
!13857 = !DILocation(line: 73, column: 21, scope: !13853)
!13858 = !DILocation(line: 74, column: 21, scope: !13853)
!13859 = !DILocation(line: 76, column: 142, scope: !13853)
!13860 = !DILocation(line: 76, column: 21, scope: !13853)
!13861 = !DILocation(line: 77, column: 21, scope: !13853)
!13862 = !DILocation(line: 79, column: 142, scope: !13853)
!13863 = !DILocation(line: 79, column: 21, scope: !13853)
!13864 = !DILocation(line: 80, column: 21, scope: !13853)
!13865 = !DILocation(line: 82, column: 142, scope: !13853)
!13866 = !DILocation(line: 82, column: 21, scope: !13853)
!13867 = !DILocation(line: 83, column: 21, scope: !13853)
!13868 = !DILocation(line: 85, column: 21, scope: !13853)
!13869 = !DILocation(line: 86, column: 21, scope: !13853)
!13870 = !DILocation(line: 91, column: 13, scope: !13851)
!13871 = !DILocation(line: 93, column: 142, scope: !13872)
!13872 = distinct !DILexicalBlock(scope: !13851, file: !2552, line: 91, column: 31)
!13873 = !DILocation(line: 93, column: 21, scope: !13872)
!13874 = !DILocation(line: 94, column: 21, scope: !13872)
!13875 = !DILocation(line: 96, column: 142, scope: !13872)
!13876 = !DILocation(line: 96, column: 21, scope: !13872)
!13877 = !DILocation(line: 97, column: 21, scope: !13872)
!13878 = !DILocation(line: 99, column: 142, scope: !13872)
!13879 = !DILocation(line: 99, column: 21, scope: !13872)
!13880 = !DILocation(line: 100, column: 21, scope: !13872)
!13881 = !DILocation(line: 102, column: 142, scope: !13872)
!13882 = !DILocation(line: 102, column: 21, scope: !13872)
!13883 = !DILocation(line: 103, column: 21, scope: !13872)
!13884 = !DILocation(line: 105, column: 142, scope: !13872)
!13885 = !DILocation(line: 105, column: 21, scope: !13872)
!13886 = !DILocation(line: 106, column: 21, scope: !13872)
!13887 = !DILocation(line: 108, column: 21, scope: !13872)
!13888 = !DILocation(line: 109, column: 21, scope: !13872)
!13889 = !DILocation(line: 114, column: 13, scope: !13851)
!13890 = !DILocation(line: 116, column: 142, scope: !13891)
!13891 = distinct !DILexicalBlock(scope: !13851, file: !2552, line: 114, column: 31)
!13892 = !DILocation(line: 116, column: 21, scope: !13891)
!13893 = !DILocation(line: 117, column: 21, scope: !13891)
!13894 = !DILocation(line: 119, column: 142, scope: !13891)
!13895 = !DILocation(line: 119, column: 21, scope: !13891)
!13896 = !DILocation(line: 120, column: 21, scope: !13891)
!13897 = !DILocation(line: 122, column: 142, scope: !13891)
!13898 = !DILocation(line: 122, column: 21, scope: !13891)
!13899 = !DILocation(line: 123, column: 21, scope: !13891)
!13900 = !DILocation(line: 125, column: 142, scope: !13891)
!13901 = !DILocation(line: 125, column: 21, scope: !13891)
!13902 = !DILocation(line: 126, column: 21, scope: !13891)
!13903 = !DILocation(line: 128, column: 142, scope: !13891)
!13904 = !DILocation(line: 128, column: 21, scope: !13891)
!13905 = !DILocation(line: 129, column: 21, scope: !13891)
!13906 = !DILocation(line: 131, column: 21, scope: !13891)
!13907 = !DILocation(line: 132, column: 21, scope: !13891)
!13908 = !DILocation(line: 137, column: 13, scope: !13851)
!13909 = !DILocation(line: 138, column: 13, scope: !13851)
!13910 = !DILocation(line: 140, column: 20, scope: !13851)
!13911 = !DILocation(line: 142, column: 17, scope: !13851)
!13912 = !DILocation(line: 143, column: 17, scope: !13913)
!13913 = distinct !DILexicalBlock(scope: !13914, file: !2552, line: 142, column: 31)
!13914 = distinct !DILexicalBlock(scope: !13851, file: !2552, line: 142, column: 17)
!13915 = !DILocation(line: 145, column: 146, scope: !13916)
!13916 = distinct !DILexicalBlock(scope: !13913, file: !2552, line: 143, column: 35)
!13917 = !DILocation(line: 145, column: 25, scope: !13916)
!13918 = !DILocation(line: 146, column: 25, scope: !13916)
!13919 = !DILocation(line: 148, column: 146, scope: !13916)
!13920 = !DILocation(line: 148, column: 25, scope: !13916)
!13921 = !DILocation(line: 149, column: 25, scope: !13916)
!13922 = !DILocation(line: 151, column: 146, scope: !13916)
!13923 = !DILocation(line: 151, column: 25, scope: !13916)
!13924 = !DILocation(line: 152, column: 25, scope: !13916)
!13925 = !DILocation(line: 154, column: 146, scope: !13916)
!13926 = !DILocation(line: 154, column: 25, scope: !13916)
!13927 = !DILocation(line: 155, column: 60, scope: !13928)
!13928 = distinct !DILexicalBlock(scope: !13916, file: !2552, line: 155, column: 29)
!13929 = !DILocation(line: 0, scope: !13928)
!13930 = !DILocation(line: 156, column: 51, scope: !13931)
!13931 = distinct !DILexicalBlock(scope: !13928, file: !2552, line: 155, column: 93)
!13932 = !DILocation(line: 157, column: 25, scope: !13931)
!13933 = !DILocation(line: 158, column: 51, scope: !13934)
!13934 = distinct !DILexicalBlock(scope: !13928, file: !2552, line: 157, column: 32)
!13935 = !DILocation(line: 162, column: 146, scope: !13916)
!13936 = !DILocation(line: 162, column: 25, scope: !13916)
!13937 = !DILocation(line: 163, column: 60, scope: !13938)
!13938 = distinct !DILexicalBlock(scope: !13916, file: !2552, line: 163, column: 29)
!13939 = !DILocation(line: 0, scope: !13938)
!13940 = !DILocation(line: 164, column: 51, scope: !13941)
!13941 = distinct !DILexicalBlock(scope: !13938, file: !2552, line: 163, column: 93)
!13942 = !DILocation(line: 165, column: 25, scope: !13941)
!13943 = !DILocation(line: 166, column: 51, scope: !13944)
!13944 = distinct !DILexicalBlock(scope: !13938, file: !2552, line: 165, column: 32)
!13945 = !DILocation(line: 170, column: 25, scope: !13916)
!13946 = !DILocation(line: 171, column: 25, scope: !13916)
!13947 = !DILocation(line: 176, column: 17, scope: !13948)
!13948 = distinct !DILexicalBlock(scope: !13949, file: !2552, line: 175, column: 31)
!13949 = distinct !DILexicalBlock(scope: !13851, file: !2552, line: 175, column: 17)
!13950 = !DILocation(line: 178, column: 146, scope: !13951)
!13951 = distinct !DILexicalBlock(scope: !13948, file: !2552, line: 176, column: 35)
!13952 = !DILocation(line: 178, column: 25, scope: !13951)
!13953 = !DILocation(line: 179, column: 25, scope: !13951)
!13954 = !DILocation(line: 181, column: 146, scope: !13951)
!13955 = !DILocation(line: 181, column: 25, scope: !13951)
!13956 = !DILocation(line: 182, column: 25, scope: !13951)
!13957 = !DILocation(line: 184, column: 146, scope: !13951)
!13958 = !DILocation(line: 184, column: 25, scope: !13951)
!13959 = !DILocation(line: 185, column: 25, scope: !13951)
!13960 = !DILocation(line: 187, column: 146, scope: !13951)
!13961 = !DILocation(line: 187, column: 25, scope: !13951)
!13962 = !DILocation(line: 188, column: 60, scope: !13963)
!13963 = distinct !DILexicalBlock(scope: !13951, file: !2552, line: 188, column: 29)
!13964 = !DILocation(line: 0, scope: !13963)
!13965 = !DILocation(line: 189, column: 51, scope: !13966)
!13966 = distinct !DILexicalBlock(scope: !13963, file: !2552, line: 188, column: 93)
!13967 = !DILocation(line: 190, column: 25, scope: !13966)
!13968 = !DILocation(line: 191, column: 51, scope: !13969)
!13969 = distinct !DILexicalBlock(scope: !13963, file: !2552, line: 190, column: 32)
!13970 = !DILocation(line: 195, column: 146, scope: !13951)
!13971 = !DILocation(line: 195, column: 25, scope: !13951)
!13972 = !DILocation(line: 196, column: 60, scope: !13973)
!13973 = distinct !DILexicalBlock(scope: !13951, file: !2552, line: 196, column: 29)
!13974 = !DILocation(line: 0, scope: !13973)
!13975 = !DILocation(line: 197, column: 51, scope: !13976)
!13976 = distinct !DILexicalBlock(scope: !13973, file: !2552, line: 196, column: 93)
!13977 = !DILocation(line: 198, column: 25, scope: !13976)
!13978 = !DILocation(line: 199, column: 51, scope: !13979)
!13979 = distinct !DILexicalBlock(scope: !13973, file: !2552, line: 198, column: 32)
!13980 = !DILocation(line: 203, column: 25, scope: !13951)
!13981 = !DILocation(line: 204, column: 25, scope: !13951)
!13982 = !DILocation(line: 208, column: 13, scope: !13851)
!13983 = !DILocation(line: 209, column: 13, scope: !13851)
!13984 = !DILocation(line: 210, column: 13, scope: !13851)
!13985 = !DILocation(line: 213, column: 13, scope: !13851)
!13986 = !DILocation(line: 215, column: 142, scope: !13987)
!13987 = distinct !DILexicalBlock(scope: !13851, file: !2552, line: 213, column: 31)
!13988 = !DILocation(line: 215, column: 21, scope: !13987)
!13989 = !DILocation(line: 216, column: 21, scope: !13987)
!13990 = !DILocation(line: 218, column: 142, scope: !13987)
!13991 = !DILocation(line: 218, column: 21, scope: !13987)
!13992 = !DILocation(line: 219, column: 21, scope: !13987)
!13993 = !DILocation(line: 221, column: 142, scope: !13987)
!13994 = !DILocation(line: 221, column: 21, scope: !13987)
!13995 = !DILocation(line: 222, column: 21, scope: !13987)
!13996 = !DILocation(line: 224, column: 142, scope: !13987)
!13997 = !DILocation(line: 224, column: 21, scope: !13987)
!13998 = !DILocation(line: 225, column: 21, scope: !13987)
!13999 = !DILocation(line: 227, column: 142, scope: !13987)
!14000 = !DILocation(line: 227, column: 21, scope: !13987)
!14001 = !DILocation(line: 228, column: 21, scope: !13987)
!14002 = !DILocation(line: 230, column: 142, scope: !13987)
!14003 = !DILocation(line: 230, column: 21, scope: !13987)
!14004 = !DILocation(line: 231, column: 21, scope: !13987)
!14005 = !DILocation(line: 233, column: 142, scope: !13987)
!14006 = !DILocation(line: 233, column: 21, scope: !13987)
!14007 = !DILocation(line: 234, column: 21, scope: !13987)
!14008 = !DILocation(line: 236, column: 142, scope: !13987)
!14009 = !DILocation(line: 236, column: 21, scope: !13987)
!14010 = !DILocation(line: 237, column: 21, scope: !13987)
!14011 = !DILocation(line: 239, column: 21, scope: !13987)
!14012 = !DILocation(line: 240, column: 21, scope: !13987)
!14013 = !DILocation(line: 245, column: 13, scope: !13851)
!14014 = !DILocation(line: 247, column: 142, scope: !14015)
!14015 = distinct !DILexicalBlock(scope: !13851, file: !2552, line: 245, column: 31)
!14016 = !DILocation(line: 247, column: 21, scope: !14015)
!14017 = !DILocation(line: 248, column: 21, scope: !14015)
!14018 = !DILocation(line: 250, column: 142, scope: !14015)
!14019 = !DILocation(line: 250, column: 21, scope: !14015)
!14020 = !DILocation(line: 251, column: 21, scope: !14015)
!14021 = !DILocation(line: 253, column: 142, scope: !14015)
!14022 = !DILocation(line: 253, column: 21, scope: !14015)
!14023 = !DILocation(line: 254, column: 21, scope: !14015)
!14024 = !DILocation(line: 256, column: 142, scope: !14015)
!14025 = !DILocation(line: 256, column: 21, scope: !14015)
!14026 = !DILocation(line: 257, column: 21, scope: !14015)
!14027 = !DILocation(line: 259, column: 142, scope: !14015)
!14028 = !DILocation(line: 259, column: 21, scope: !14015)
!14029 = !DILocation(line: 260, column: 21, scope: !14015)
!14030 = !DILocation(line: 262, column: 142, scope: !14015)
!14031 = !DILocation(line: 262, column: 21, scope: !14015)
!14032 = !DILocation(line: 263, column: 21, scope: !14015)
!14033 = !DILocation(line: 265, column: 21, scope: !14015)
!14034 = !DILocation(line: 266, column: 21, scope: !14015)
!14035 = !DILocation(line: 271, column: 13, scope: !13851)
!14036 = !DILocation(line: 273, column: 142, scope: !14037)
!14037 = distinct !DILexicalBlock(scope: !13851, file: !2552, line: 271, column: 31)
!14038 = !DILocation(line: 273, column: 21, scope: !14037)
!14039 = !DILocation(line: 274, column: 21, scope: !14037)
!14040 = !DILocation(line: 276, column: 142, scope: !14037)
!14041 = !DILocation(line: 276, column: 21, scope: !14037)
!14042 = !DILocation(line: 277, column: 21, scope: !14037)
!14043 = !DILocation(line: 279, column: 142, scope: !14037)
!14044 = !DILocation(line: 279, column: 21, scope: !14037)
!14045 = !DILocation(line: 280, column: 21, scope: !14037)
!14046 = !DILocation(line: 282, column: 142, scope: !14037)
!14047 = !DILocation(line: 282, column: 21, scope: !14037)
!14048 = !DILocation(line: 283, column: 21, scope: !14037)
!14049 = !DILocation(line: 285, column: 142, scope: !14037)
!14050 = !DILocation(line: 285, column: 21, scope: !14037)
!14051 = !DILocation(line: 286, column: 21, scope: !14037)
!14052 = !DILocation(line: 288, column: 21, scope: !14037)
!14053 = !DILocation(line: 289, column: 21, scope: !14037)
!14054 = !DILocation(line: 294, column: 13, scope: !13851)
!14055 = !DILocation(line: 296, column: 142, scope: !14056)
!14056 = distinct !DILexicalBlock(scope: !13851, file: !2552, line: 294, column: 31)
!14057 = !DILocation(line: 296, column: 21, scope: !14056)
!14058 = !DILocation(line: 297, column: 21, scope: !14056)
!14059 = !DILocation(line: 299, column: 142, scope: !14056)
!14060 = !DILocation(line: 299, column: 21, scope: !14056)
!14061 = !DILocation(line: 300, column: 21, scope: !14056)
!14062 = !DILocation(line: 302, column: 142, scope: !14056)
!14063 = !DILocation(line: 302, column: 21, scope: !14056)
!14064 = !DILocation(line: 303, column: 21, scope: !14056)
!14065 = !DILocation(line: 305, column: 142, scope: !14056)
!14066 = !DILocation(line: 305, column: 21, scope: !14056)
!14067 = !DILocation(line: 306, column: 21, scope: !14056)
!14068 = !DILocation(line: 308, column: 142, scope: !14056)
!14069 = !DILocation(line: 308, column: 21, scope: !14056)
!14070 = !DILocation(line: 309, column: 21, scope: !14056)
!14071 = !DILocation(line: 311, column: 21, scope: !14056)
!14072 = !DILocation(line: 312, column: 21, scope: !14056)
!14073 = !DILocation(line: 317, column: 13, scope: !13851)
!14074 = !DILocation(line: 319, column: 142, scope: !14075)
!14075 = distinct !DILexicalBlock(scope: !13851, file: !2552, line: 317, column: 31)
!14076 = !DILocation(line: 319, column: 21, scope: !14075)
!14077 = !DILocation(line: 320, column: 21, scope: !14075)
!14078 = !DILocation(line: 322, column: 142, scope: !14075)
!14079 = !DILocation(line: 322, column: 21, scope: !14075)
!14080 = !DILocation(line: 323, column: 21, scope: !14075)
!14081 = !DILocation(line: 325, column: 142, scope: !14075)
!14082 = !DILocation(line: 325, column: 21, scope: !14075)
!14083 = !DILocation(line: 326, column: 21, scope: !14075)
!14084 = !DILocation(line: 328, column: 142, scope: !14075)
!14085 = !DILocation(line: 328, column: 21, scope: !14075)
!14086 = !DILocation(line: 329, column: 21, scope: !14075)
!14087 = !DILocation(line: 331, column: 142, scope: !14075)
!14088 = !DILocation(line: 331, column: 21, scope: !14075)
!14089 = !DILocation(line: 332, column: 21, scope: !14075)
!14090 = !DILocation(line: 334, column: 21, scope: !14075)
!14091 = !DILocation(line: 335, column: 21, scope: !14075)
!14092 = !DILocation(line: 340, column: 13, scope: !13851)
!14093 = !DILocation(line: 342, column: 142, scope: !14094)
!14094 = distinct !DILexicalBlock(scope: !13851, file: !2552, line: 340, column: 31)
!14095 = !DILocation(line: 342, column: 21, scope: !14094)
!14096 = !DILocation(line: 343, column: 21, scope: !14094)
!14097 = !DILocation(line: 345, column: 142, scope: !14094)
!14098 = !DILocation(line: 345, column: 21, scope: !14094)
!14099 = !DILocation(line: 346, column: 21, scope: !14094)
!14100 = !DILocation(line: 348, column: 142, scope: !14094)
!14101 = !DILocation(line: 348, column: 21, scope: !14094)
!14102 = !DILocation(line: 349, column: 21, scope: !14094)
!14103 = !DILocation(line: 351, column: 142, scope: !14094)
!14104 = !DILocation(line: 351, column: 21, scope: !14094)
!14105 = !DILocation(line: 352, column: 21, scope: !14094)
!14106 = !DILocation(line: 354, column: 142, scope: !14094)
!14107 = !DILocation(line: 354, column: 21, scope: !14094)
!14108 = !DILocation(line: 355, column: 21, scope: !14094)
!14109 = !DILocation(line: 357, column: 21, scope: !14094)
!14110 = !DILocation(line: 358, column: 21, scope: !14094)
!14111 = !DILocation(line: 363, column: 135, scope: !13851)
!14112 = !DILocation(line: 363, column: 13, scope: !13851)
!14113 = !DILocation(line: 364, column: 13, scope: !13851)
!14114 = !DILocation(line: 367, column: 135, scope: !13851)
!14115 = !DILocation(line: 367, column: 13, scope: !13851)
!14116 = !DILocation(line: 368, column: 13, scope: !13851)
!14117 = !DILocation(line: 371, column: 13, scope: !13851)
!14118 = !DILocation(line: 372, column: 13, scope: !13851)
!14119 = !DILocation(line: 374, column: 5, scope: !13837)
!14120 = !DILocation(line: 376, column: 5, scope: !13837)
!14121 = !DILocation(line: 377, column: 1, scope: !13837)
!14122 = distinct !DISubprogram(name: "pmu_set_vrc_key_mt6385", scope: !2552, file: !2552, line: 1119, type: !14123, scopeLine: 1120, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2551, retainedNodes: !14126)
!14123 = !DISubroutineType(types: !14124)
!14124 = !{null, !14125}
!14125 = !DIDerivedType(tag: DW_TAG_typedef, name: "PMIC_SET_KEY", file: !2380, line: 121, baseType: !2379)
!14126 = !{!14127}
!14127 = !DILocalVariable(name: "mode", arg: 1, scope: !14122, file: !2552, line: 1119, type: !14125)
!14128 = !DILocation(line: 0, scope: !14122)
!14129 = !DILocation(line: 1121, column: 13, scope: !14130)
!14130 = distinct !DILexicalBlock(scope: !14122, file: !2552, line: 1121, column: 8)
!14131 = !DILocation(line: 0, scope: !14130)
!14132 = !DILocation(line: 1128, column: 1, scope: !14122)
!14133 = distinct !DISubprogram(name: "pmu_set_ovr_mode_mt6385", scope: !2552, file: !2552, line: 1109, type: !14134, scopeLine: 1110, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2551, retainedNodes: !14137)
!14134 = !DISubroutineType(types: !14135)
!14135 = !{null, !14136}
!14136 = !DIDerivedType(tag: DW_TAG_typedef, name: "PMIC_SET_OVR_MODE", file: !2380, line: 116, baseType: !2384)
!14137 = !{!14138}
!14138 = !DILocalVariable(name: "mode", arg: 1, scope: !14133, file: !2552, line: 1109, type: !14136)
!14139 = !DILocation(line: 0, scope: !14133)
!14140 = !DILocation(line: 1111, column: 13, scope: !14141)
!14141 = distinct !DILexicalBlock(scope: !14133, file: !2552, line: 1111, column: 8)
!14142 = !DILocation(line: 1111, column: 8, scope: !14133)
!14143 = !DILocation(line: 1112, column: 9, scope: !14144)
!14144 = distinct !DILexicalBlock(scope: !14141, file: !2552, line: 1111, column: 37)
!14145 = !DILocation(line: 1114, column: 5, scope: !14144)
!14146 = !DILocation(line: 0, scope: !14141)
!14147 = !DILocation(line: 1117, column: 1, scope: !14133)
!14148 = distinct !DISubprogram(name: "PMIC_VR_SLEEP_WKUP_CONFIG", scope: !2552, file: !2552, line: 380, type: !14149, scopeLine: 381, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2551, retainedNodes: !14151)
!14149 = !DISubroutineType(types: !14150)
!14150 = !{null, !13840, !2435, !2437, !7}
!14151 = !{!14152, !14153, !14154, !14155, !14156, !14157}
!14152 = !DILocalVariable(name: "vr_name", arg: 1, scope: !14148, file: !2552, line: 380, type: !13840)
!14153 = !DILocalVariable(name: "psi_mode", arg: 2, scope: !14148, file: !2552, line: 380, type: !2435)
!14154 = !DILocalVariable(name: "ctl_mode", arg: 3, scope: !14148, file: !2552, line: 380, type: !2437)
!14155 = !DILocalVariable(name: "wk_slot", arg: 4, scope: !14148, file: !2552, line: 380, type: !7)
!14156 = !DILocalVariable(name: "wk_seq_len", scope: !14148, file: !2552, line: 388, type: !7)
!14157 = !DILocalVariable(name: "wk_slot_final", scope: !14148, file: !2552, line: 389, type: !7)
!14158 = !DILocation(line: 0, scope: !14148)
!14159 = !DILocation(line: 392, column: 5, scope: !14148)
!14160 = !DILocation(line: 394, column: 26, scope: !14161)
!14161 = distinct !DILexicalBlock(scope: !14148, file: !2552, line: 392, column: 23)
!14162 = !DILocation(line: 395, column: 13, scope: !14161)
!14163 = !DILocation(line: 397, column: 26, scope: !14161)
!14164 = !DILocation(line: 398, column: 13, scope: !14161)
!14165 = !DILocation(line: 400, column: 13, scope: !14161)
!14166 = !DILocation(line: 401, column: 13, scope: !14161)
!14167 = !DILocation(line: 404, column: 17, scope: !14168)
!14168 = distinct !DILexicalBlock(scope: !14148, file: !2552, line: 404, column: 9)
!14169 = !DILocation(line: 404, column: 9, scope: !14148)
!14170 = !DILocation(line: 405, column: 9, scope: !14171)
!14171 = distinct !DILexicalBlock(scope: !14168, file: !2552, line: 404, column: 31)
!14172 = !DILocation(line: 406, column: 5, scope: !14171)
!14173 = !DILocation(line: 408, column: 5, scope: !14148)
!14174 = !DILocation(line: 414, column: 13, scope: !14175)
!14175 = distinct !DILexicalBlock(scope: !14148, file: !2552, line: 408, column: 23)
!14176 = !DILocation(line: 417, column: 13, scope: !14175)
!14177 = !DILocation(line: 419, column: 13, scope: !14175)
!14178 = !DILocation(line: 420, column: 13, scope: !14175)
!14179 = !DILocation(line: 426, column: 5, scope: !14148)
!14180 = !DILocation(line: 427, column: 5, scope: !14148)
!14181 = !DILocation(line: 429, column: 5, scope: !14148)
!14182 = !DILocation(line: 431, column: 13, scope: !14183)
!14183 = distinct !DILexicalBlock(scope: !14148, file: !2552, line: 429, column: 22)
!14184 = !DILocation(line: 432, column: 13, scope: !14183)
!14185 = !DILocation(line: 435, column: 13, scope: !14183)
!14186 = !DILocation(line: 436, column: 13, scope: !14183)
!14187 = !DILocation(line: 439, column: 13, scope: !14183)
!14188 = !DILocation(line: 441, column: 119, scope: !14189)
!14189 = distinct !DILexicalBlock(scope: !14183, file: !2552, line: 439, column: 31)
!14190 = !DILocation(line: 441, column: 21, scope: !14189)
!14191 = !DILocation(line: 442, column: 21, scope: !14189)
!14192 = !DILocation(line: 444, column: 119, scope: !14189)
!14193 = !DILocation(line: 444, column: 21, scope: !14189)
!14194 = !DILocation(line: 445, column: 21, scope: !14189)
!14195 = !DILocation(line: 447, column: 21, scope: !14189)
!14196 = !DILocation(line: 448, column: 21, scope: !14189)
!14197 = !DILocation(line: 453, column: 31, scope: !14198)
!14198 = distinct !DILexicalBlock(scope: !14183, file: !2552, line: 453, column: 17)
!14199 = !DILocation(line: 453, column: 17, scope: !14183)
!14200 = !DILocation(line: 0, scope: !14198)
!14201 = !DILocation(line: 458, column: 13, scope: !14183)
!14202 = !DILocation(line: 460, column: 131, scope: !14203)
!14203 = distinct !DILexicalBlock(scope: !14183, file: !2552, line: 458, column: 31)
!14204 = !DILocation(line: 460, column: 21, scope: !14203)
!14205 = !DILocation(line: 461, column: 21, scope: !14203)
!14206 = !DILocation(line: 463, column: 131, scope: !14203)
!14207 = !DILocation(line: 463, column: 21, scope: !14203)
!14208 = !DILocation(line: 464, column: 21, scope: !14203)
!14209 = !DILocation(line: 466, column: 21, scope: !14203)
!14210 = !DILocation(line: 467, column: 21, scope: !14203)
!14211 = !DILocation(line: 472, column: 13, scope: !14183)
!14212 = !DILocation(line: 473, column: 13, scope: !14183)
!14213 = !DILocation(line: 476, column: 49, scope: !14214)
!14214 = distinct !DILexicalBlock(scope: !14183, file: !2552, line: 476, column: 17)
!14215 = !DILocation(line: 478, column: 17, scope: !14216)
!14216 = distinct !DILexicalBlock(scope: !14214, file: !2552, line: 476, column: 88)
!14217 = !DILocation(line: 479, column: 17, scope: !14216)
!14218 = !DILocation(line: 480, column: 17, scope: !14216)
!14219 = !DILocation(line: 482, column: 25, scope: !14220)
!14220 = distinct !DILexicalBlock(scope: !14216, file: !2552, line: 480, column: 35)
!14221 = !DILocation(line: 483, column: 25, scope: !14220)
!14222 = !DILocation(line: 485, column: 25, scope: !14220)
!14223 = !DILocation(line: 486, column: 25, scope: !14220)
!14224 = !DILocation(line: 488, column: 25, scope: !14220)
!14225 = !DILocation(line: 489, column: 25, scope: !14220)
!14226 = !DILocation(line: 492, column: 17, scope: !14216)
!14227 = !DILocation(line: 493, column: 17, scope: !14216)
!14228 = !DILocation(line: 494, column: 13, scope: !14216)
!14229 = !DILocation(line: 498, column: 13, scope: !14183)
!14230 = !DILocation(line: 500, column: 131, scope: !14231)
!14231 = distinct !DILexicalBlock(scope: !14183, file: !2552, line: 498, column: 31)
!14232 = !DILocation(line: 500, column: 21, scope: !14231)
!14233 = !DILocation(line: 501, column: 21, scope: !14231)
!14234 = !DILocation(line: 503, column: 131, scope: !14231)
!14235 = !DILocation(line: 503, column: 21, scope: !14231)
!14236 = !DILocation(line: 504, column: 21, scope: !14231)
!14237 = !DILocation(line: 506, column: 21, scope: !14231)
!14238 = !DILocation(line: 507, column: 21, scope: !14231)
!14239 = !DILocation(line: 512, column: 31, scope: !14240)
!14240 = distinct !DILexicalBlock(scope: !14183, file: !2552, line: 512, column: 17)
!14241 = !DILocation(line: 512, column: 17, scope: !14183)
!14242 = !DILocation(line: 0, scope: !14240)
!14243 = !DILocation(line: 517, column: 31, scope: !14244)
!14244 = distinct !DILexicalBlock(scope: !14183, file: !2552, line: 517, column: 17)
!14245 = !DILocation(line: 517, column: 17, scope: !14183)
!14246 = !DILocation(line: 519, column: 17, scope: !14247)
!14247 = distinct !DILexicalBlock(scope: !14244, file: !2552, line: 517, column: 37)
!14248 = !DILocation(line: 520, column: 13, scope: !14247)
!14249 = !DILocation(line: 521, column: 13, scope: !14183)
!14250 = !DILocation(line: 523, column: 131, scope: !14251)
!14251 = distinct !DILexicalBlock(scope: !14183, file: !2552, line: 521, column: 31)
!14252 = !DILocation(line: 523, column: 21, scope: !14251)
!14253 = !DILocation(line: 524, column: 21, scope: !14251)
!14254 = !DILocation(line: 526, column: 131, scope: !14251)
!14255 = !DILocation(line: 526, column: 21, scope: !14251)
!14256 = !DILocation(line: 527, column: 21, scope: !14251)
!14257 = !DILocation(line: 529, column: 21, scope: !14251)
!14258 = !DILocation(line: 530, column: 21, scope: !14251)
!14259 = !DILocation(line: 535, column: 31, scope: !14260)
!14260 = distinct !DILexicalBlock(scope: !14183, file: !2552, line: 535, column: 17)
!14261 = !DILocation(line: 535, column: 17, scope: !14183)
!14262 = !DILocation(line: 0, scope: !14260)
!14263 = !DILocation(line: 540, column: 31, scope: !14264)
!14264 = distinct !DILexicalBlock(scope: !14183, file: !2552, line: 540, column: 17)
!14265 = !DILocation(line: 540, column: 17, scope: !14183)
!14266 = !DILocation(line: 542, column: 17, scope: !14267)
!14267 = distinct !DILexicalBlock(scope: !14264, file: !2552, line: 540, column: 37)
!14268 = !DILocation(line: 543, column: 13, scope: !14267)
!14269 = !DILocation(line: 544, column: 13, scope: !14183)
!14270 = !DILocation(line: 546, column: 131, scope: !14271)
!14271 = distinct !DILexicalBlock(scope: !14183, file: !2552, line: 544, column: 31)
!14272 = !DILocation(line: 546, column: 21, scope: !14271)
!14273 = !DILocation(line: 547, column: 21, scope: !14271)
!14274 = !DILocation(line: 549, column: 131, scope: !14271)
!14275 = !DILocation(line: 549, column: 21, scope: !14271)
!14276 = !DILocation(line: 550, column: 21, scope: !14271)
!14277 = !DILocation(line: 552, column: 21, scope: !14271)
!14278 = !DILocation(line: 553, column: 21, scope: !14271)
!14279 = !DILocation(line: 558, column: 31, scope: !14280)
!14280 = distinct !DILexicalBlock(scope: !14183, file: !2552, line: 558, column: 17)
!14281 = !DILocation(line: 558, column: 17, scope: !14183)
!14282 = !DILocation(line: 0, scope: !14280)
!14283 = !DILocation(line: 563, column: 31, scope: !14284)
!14284 = distinct !DILexicalBlock(scope: !14183, file: !2552, line: 563, column: 17)
!14285 = !DILocation(line: 563, column: 17, scope: !14183)
!14286 = !DILocation(line: 565, column: 17, scope: !14287)
!14287 = distinct !DILexicalBlock(scope: !14284, file: !2552, line: 563, column: 37)
!14288 = !DILocation(line: 566, column: 13, scope: !14287)
!14289 = !DILocation(line: 567, column: 13, scope: !14183)
!14290 = !DILocation(line: 569, column: 127, scope: !14291)
!14291 = distinct !DILexicalBlock(scope: !14183, file: !2552, line: 567, column: 31)
!14292 = !DILocation(line: 569, column: 21, scope: !14291)
!14293 = !DILocation(line: 570, column: 21, scope: !14291)
!14294 = !DILocation(line: 572, column: 127, scope: !14291)
!14295 = !DILocation(line: 572, column: 21, scope: !14291)
!14296 = !DILocation(line: 573, column: 21, scope: !14291)
!14297 = !DILocation(line: 575, column: 21, scope: !14291)
!14298 = !DILocation(line: 576, column: 21, scope: !14291)
!14299 = !DILocation(line: 581, column: 13, scope: !14183)
!14300 = !DILocation(line: 582, column: 13, scope: !14183)
!14301 = !DILocation(line: 585, column: 13, scope: !14183)
!14302 = !DILocation(line: 586, column: 13, scope: !14183)
!14303 = !DILocation(line: 589, column: 31, scope: !14304)
!14304 = distinct !DILexicalBlock(scope: !14183, file: !2552, line: 589, column: 17)
!14305 = !DILocation(line: 589, column: 17, scope: !14183)
!14306 = !DILocation(line: 0, scope: !14304)
!14307 = !DILocation(line: 594, column: 31, scope: !14308)
!14308 = distinct !DILexicalBlock(scope: !14183, file: !2552, line: 594, column: 17)
!14309 = !DILocation(line: 594, column: 17, scope: !14183)
!14310 = !DILocation(line: 596, column: 17, scope: !14311)
!14311 = distinct !DILexicalBlock(scope: !14308, file: !2552, line: 594, column: 37)
!14312 = !DILocation(line: 597, column: 13, scope: !14311)
!14313 = !DILocation(line: 598, column: 13, scope: !14183)
!14314 = !DILocation(line: 600, column: 127, scope: !14315)
!14315 = distinct !DILexicalBlock(scope: !14183, file: !2552, line: 598, column: 31)
!14316 = !DILocation(line: 600, column: 21, scope: !14315)
!14317 = !DILocation(line: 601, column: 21, scope: !14315)
!14318 = !DILocation(line: 603, column: 127, scope: !14315)
!14319 = !DILocation(line: 603, column: 21, scope: !14315)
!14320 = !DILocation(line: 604, column: 21, scope: !14315)
!14321 = !DILocation(line: 606, column: 21, scope: !14315)
!14322 = !DILocation(line: 607, column: 21, scope: !14315)
!14323 = !DILocation(line: 612, column: 31, scope: !14324)
!14324 = distinct !DILexicalBlock(scope: !14183, file: !2552, line: 612, column: 17)
!14325 = !DILocation(line: 612, column: 17, scope: !14183)
!14326 = !DILocation(line: 0, scope: !14324)
!14327 = !DILocation(line: 617, column: 31, scope: !14328)
!14328 = distinct !DILexicalBlock(scope: !14183, file: !2552, line: 617, column: 17)
!14329 = !DILocation(line: 617, column: 17, scope: !14183)
!14330 = !DILocation(line: 619, column: 17, scope: !14331)
!14331 = distinct !DILexicalBlock(scope: !14328, file: !2552, line: 617, column: 37)
!14332 = !DILocation(line: 620, column: 13, scope: !14331)
!14333 = !DILocation(line: 621, column: 13, scope: !14183)
!14334 = !DILocation(line: 623, column: 127, scope: !14335)
!14335 = distinct !DILexicalBlock(scope: !14183, file: !2552, line: 621, column: 31)
!14336 = !DILocation(line: 623, column: 21, scope: !14335)
!14337 = !DILocation(line: 624, column: 21, scope: !14335)
!14338 = !DILocation(line: 626, column: 127, scope: !14335)
!14339 = !DILocation(line: 626, column: 21, scope: !14335)
!14340 = !DILocation(line: 627, column: 21, scope: !14335)
!14341 = !DILocation(line: 629, column: 21, scope: !14335)
!14342 = !DILocation(line: 630, column: 21, scope: !14335)
!14343 = !DILocation(line: 635, column: 13, scope: !14183)
!14344 = !DILocation(line: 636, column: 13, scope: !14183)
!14345 = !DILocation(line: 639, column: 13, scope: !14183)
!14346 = !DILocation(line: 640, column: 13, scope: !14183)
!14347 = !DILocation(line: 644, column: 5, scope: !14148)
!14348 = !DILocation(line: 645, column: 5, scope: !14148)
!14349 = !DILocation(line: 646, column: 1, scope: !14148)
!14350 = distinct !DISubprogram(name: "PMIC_VR_CONTROL", scope: !2552, file: !2552, line: 648, type: !14351, scopeLine: 649, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2551, retainedNodes: !14353)
!14351 = !DISubroutineType(types: !14352)
!14352 = !{null, !13840, !2438}
!14353 = !{!14354, !14355, !14356}
!14354 = !DILocalVariable(name: "vr_name", arg: 1, scope: !14350, file: !2552, line: 648, type: !13840)
!14355 = !DILocalVariable(name: "enable", arg: 2, scope: !14350, file: !2552, line: 648, type: !2438)
!14356 = !DILocalVariable(name: "poll_stb_b", scope: !14350, file: !2552, line: 650, type: !7)
!14357 = !DILocation(line: 0, scope: !14350)
!14358 = !DILocation(line: 652, column: 9, scope: !14359)
!14359 = distinct !DILexicalBlock(scope: !14350, file: !2552, line: 652, column: 9)
!14360 = !DILocation(line: 657, column: 5, scope: !14350)
!14361 = !DILocation(line: 658, column: 5, scope: !14350)
!14362 = !DILocation(line: 660, column: 5, scope: !14350)
!14363 = !DILocation(line: 662, column: 13, scope: !14364)
!14364 = distinct !DILexicalBlock(scope: !14350, file: !2552, line: 660, column: 22)
!14365 = !DILocation(line: 663, column: 13, scope: !14364)
!14366 = !DILocation(line: 666, column: 13, scope: !14364)
!14367 = !DILocation(line: 667, column: 13, scope: !14364)
!14368 = !DILocation(line: 670, column: 109, scope: !14364)
!14369 = !DILocation(line: 670, column: 13, scope: !14364)
!14370 = !DILocation(line: 671, column: 13, scope: !14364)
!14371 = !DILocation(line: 672, column: 30, scope: !14372)
!14372 = distinct !DILexicalBlock(scope: !14364, file: !2552, line: 671, column: 37)
!14373 = !DILocation(line: 671, column: 31, scope: !14364)
!14374 = distinct !{!14374, !14370, !14375}
!14375 = !DILocation(line: 673, column: 13, scope: !14364)
!14376 = !DILocation(line: 677, column: 24, scope: !14377)
!14377 = distinct !DILexicalBlock(scope: !14364, file: !2552, line: 677, column: 17)
!14378 = !DILocation(line: 677, column: 17, scope: !14364)
!14379 = !DILocation(line: 0, scope: !14377)
!14380 = !DILocation(line: 682, column: 109, scope: !14364)
!14381 = !DILocation(line: 682, column: 13, scope: !14364)
!14382 = !DILocation(line: 683, column: 13, scope: !14364)
!14383 = !DILocation(line: 684, column: 30, scope: !14384)
!14384 = distinct !DILexicalBlock(scope: !14364, file: !2552, line: 683, column: 37)
!14385 = !DILocation(line: 683, column: 31, scope: !14364)
!14386 = distinct !{!14386, !14382, !14387}
!14387 = !DILocation(line: 685, column: 13, scope: !14364)
!14388 = !DILocation(line: 689, column: 13, scope: !14364)
!14389 = !DILocation(line: 690, column: 13, scope: !14364)
!14390 = !DILocation(line: 693, column: 109, scope: !14364)
!14391 = !DILocation(line: 693, column: 13, scope: !14364)
!14392 = !DILocation(line: 694, column: 13, scope: !14364)
!14393 = !DILocation(line: 697, column: 109, scope: !14364)
!14394 = !DILocation(line: 697, column: 13, scope: !14364)
!14395 = !DILocation(line: 698, column: 13, scope: !14364)
!14396 = !DILocation(line: 699, column: 30, scope: !14397)
!14397 = distinct !DILexicalBlock(scope: !14364, file: !2552, line: 698, column: 37)
!14398 = !DILocation(line: 698, column: 31, scope: !14364)
!14399 = distinct !{!14399, !14395, !14400}
!14400 = !DILocation(line: 700, column: 13, scope: !14364)
!14401 = !DILocation(line: 704, column: 24, scope: !14402)
!14402 = distinct !DILexicalBlock(scope: !14364, file: !2552, line: 704, column: 17)
!14403 = !DILocation(line: 704, column: 17, scope: !14364)
!14404 = !DILocation(line: 0, scope: !14402)
!14405 = !DILocation(line: 709, column: 109, scope: !14364)
!14406 = !DILocation(line: 709, column: 13, scope: !14364)
!14407 = !DILocation(line: 710, column: 13, scope: !14364)
!14408 = !DILocation(line: 711, column: 30, scope: !14409)
!14409 = distinct !DILexicalBlock(scope: !14364, file: !2552, line: 710, column: 37)
!14410 = !DILocation(line: 710, column: 31, scope: !14364)
!14411 = distinct !{!14411, !14407, !14412}
!14412 = !DILocation(line: 712, column: 13, scope: !14364)
!14413 = !DILocation(line: 716, column: 24, scope: !14414)
!14414 = distinct !DILexicalBlock(scope: !14364, file: !2552, line: 716, column: 17)
!14415 = !DILocation(line: 716, column: 17, scope: !14364)
!14416 = !DILocation(line: 0, scope: !14414)
!14417 = !DILocation(line: 721, column: 109, scope: !14364)
!14418 = !DILocation(line: 721, column: 13, scope: !14364)
!14419 = !DILocation(line: 722, column: 13, scope: !14364)
!14420 = !DILocation(line: 723, column: 30, scope: !14421)
!14421 = distinct !DILexicalBlock(scope: !14364, file: !2552, line: 722, column: 37)
!14422 = !DILocation(line: 722, column: 31, scope: !14364)
!14423 = distinct !{!14423, !14419, !14424}
!14424 = !DILocation(line: 724, column: 13, scope: !14364)
!14425 = !DILocation(line: 728, column: 24, scope: !14426)
!14426 = distinct !DILexicalBlock(scope: !14364, file: !2552, line: 728, column: 17)
!14427 = !DILocation(line: 728, column: 17, scope: !14364)
!14428 = !DILocation(line: 0, scope: !14426)
!14429 = !DILocation(line: 733, column: 109, scope: !14364)
!14430 = !DILocation(line: 733, column: 13, scope: !14364)
!14431 = !DILocation(line: 734, column: 13, scope: !14364)
!14432 = !DILocation(line: 735, column: 30, scope: !14433)
!14433 = distinct !DILexicalBlock(scope: !14364, file: !2552, line: 734, column: 37)
!14434 = !DILocation(line: 734, column: 31, scope: !14364)
!14435 = distinct !{!14435, !14431, !14436}
!14436 = !DILocation(line: 736, column: 13, scope: !14364)
!14437 = !DILocation(line: 740, column: 24, scope: !14438)
!14438 = distinct !DILexicalBlock(scope: !14364, file: !2552, line: 740, column: 17)
!14439 = !DILocation(line: 740, column: 17, scope: !14364)
!14440 = !DILocation(line: 0, scope: !14438)
!14441 = !DILocation(line: 745, column: 109, scope: !14364)
!14442 = !DILocation(line: 745, column: 13, scope: !14364)
!14443 = !DILocation(line: 746, column: 13, scope: !14364)
!14444 = !DILocation(line: 747, column: 30, scope: !14445)
!14445 = distinct !DILexicalBlock(scope: !14364, file: !2552, line: 746, column: 37)
!14446 = !DILocation(line: 746, column: 31, scope: !14364)
!14447 = distinct !{!14447, !14443, !14448}
!14448 = !DILocation(line: 748, column: 13, scope: !14364)
!14449 = !DILocation(line: 752, column: 24, scope: !14450)
!14450 = distinct !DILexicalBlock(scope: !14364, file: !2552, line: 752, column: 17)
!14451 = !DILocation(line: 752, column: 17, scope: !14364)
!14452 = !DILocation(line: 0, scope: !14450)
!14453 = !DILocation(line: 757, column: 109, scope: !14364)
!14454 = !DILocation(line: 757, column: 13, scope: !14364)
!14455 = !DILocation(line: 758, column: 13, scope: !14364)
!14456 = !DILocation(line: 759, column: 30, scope: !14457)
!14457 = distinct !DILexicalBlock(scope: !14364, file: !2552, line: 758, column: 37)
!14458 = !DILocation(line: 758, column: 31, scope: !14364)
!14459 = distinct !{!14459, !14455, !14460}
!14460 = !DILocation(line: 760, column: 13, scope: !14364)
!14461 = !DILocation(line: 764, column: 24, scope: !14462)
!14462 = distinct !DILexicalBlock(scope: !14364, file: !2552, line: 764, column: 17)
!14463 = !DILocation(line: 764, column: 17, scope: !14364)
!14464 = !DILocation(line: 0, scope: !14462)
!14465 = !DILocation(line: 769, column: 106, scope: !14364)
!14466 = !DILocation(line: 769, column: 13, scope: !14364)
!14467 = !DILocation(line: 770, column: 13, scope: !14364)
!14468 = !DILocation(line: 773, column: 24, scope: !14469)
!14469 = distinct !DILexicalBlock(scope: !14364, file: !2552, line: 773, column: 17)
!14470 = !DILocation(line: 773, column: 17, scope: !14364)
!14471 = !DILocation(line: 0, scope: !14469)
!14472 = !DILocation(line: 778, column: 109, scope: !14364)
!14473 = !DILocation(line: 778, column: 13, scope: !14364)
!14474 = !DILocation(line: 779, column: 13, scope: !14364)
!14475 = !DILocation(line: 782, column: 24, scope: !14476)
!14476 = distinct !DILexicalBlock(scope: !14364, file: !2552, line: 782, column: 17)
!14477 = !DILocation(line: 782, column: 17, scope: !14364)
!14478 = !DILocation(line: 0, scope: !14476)
!14479 = !DILocation(line: 787, column: 109, scope: !14364)
!14480 = !DILocation(line: 787, column: 13, scope: !14364)
!14481 = !DILocation(line: 788, column: 13, scope: !14364)
!14482 = !DILocation(line: 791, column: 13, scope: !14364)
!14483 = !DILocation(line: 792, column: 13, scope: !14364)
!14484 = !DILocation(line: 796, column: 5, scope: !14350)
!14485 = !DILocation(line: 797, column: 5, scope: !14350)
!14486 = !DILocation(line: 798, column: 1, scope: !14350)
!14487 = distinct !DISubprogram(name: "PMIC_VCORE_VOSEL_CONFIG", scope: !2552, file: !2552, line: 800, type: !14488, scopeLine: 801, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2551, retainedNodes: !14490)
!14488 = !DISubroutineType(types: !14489)
!14489 = !{null, !2435, !2580}
!14490 = !{!14491, !14492, !14493, !14494}
!14491 = !DILocalVariable(name: "psi_mode", arg: 1, scope: !14487, file: !2552, line: 800, type: !2435)
!14492 = !DILocalVariable(name: "vcore_vosel", arg: 2, scope: !14487, file: !2552, line: 800, type: !2580)
!14493 = !DILocalVariable(name: "vcbuck_voval", scope: !14487, file: !2552, line: 803, type: !2621)
!14494 = !DILocalVariable(name: "vc_ldo_vosel", scope: !14487, file: !2552, line: 804, type: !2621)
!14495 = !DILocation(line: 0, scope: !14487)
!14496 = !DILocation(line: 803, column: 9, scope: !14487)
!14497 = !DILocation(line: 804, column: 9, scope: !14487)
!14498 = !DILocation(line: 806, column: 5, scope: !14487)
!14499 = !DILocation(line: 807, column: 5, scope: !14487)
!14500 = !DILocation(line: 808, column: 5, scope: !14487)
!14501 = !DILocation(line: 809, column: 5, scope: !14487)
!14502 = !DILocation(line: 811, column: 137, scope: !14503)
!14503 = distinct !DILexicalBlock(scope: !14487, file: !2552, line: 809, column: 23)
!14504 = !DILocation(line: 811, column: 13, scope: !14503)
!14505 = !DILocation(line: 812, column: 137, scope: !14503)
!14506 = !DILocation(line: 812, column: 13, scope: !14503)
!14507 = !DILocation(line: 813, column: 13, scope: !14503)
!14508 = !DILocation(line: 816, column: 137, scope: !14503)
!14509 = !DILocation(line: 816, column: 13, scope: !14503)
!14510 = !DILocation(line: 817, column: 137, scope: !14503)
!14511 = !DILocation(line: 817, column: 13, scope: !14503)
!14512 = !DILocation(line: 818, column: 13, scope: !14503)
!14513 = !DILocation(line: 821, column: 137, scope: !14503)
!14514 = !DILocation(line: 821, column: 13, scope: !14503)
!14515 = !DILocation(line: 822, column: 137, scope: !14503)
!14516 = !DILocation(line: 822, column: 13, scope: !14503)
!14517 = !DILocation(line: 823, column: 13, scope: !14503)
!14518 = !DILocation(line: 826, column: 137, scope: !14503)
!14519 = !DILocation(line: 826, column: 13, scope: !14503)
!14520 = !DILocation(line: 827, column: 13, scope: !14503)
!14521 = !DILocation(line: 830, column: 13, scope: !14503)
!14522 = !DILocation(line: 831, column: 13, scope: !14503)
!14523 = !DILocation(line: 833, column: 5, scope: !14487)
!14524 = !DILocation(line: 834, column: 5, scope: !14487)
!14525 = !DILocation(line: 835, column: 5, scope: !14487)
!14526 = !DILocation(line: 836, column: 1, scope: !14487)
!14527 = distinct !DISubprogram(name: "PMIC_VR_VOSEL_INIT_CONFIG", scope: !2552, file: !2552, line: 838, type: !14528, scopeLine: 839, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2551, retainedNodes: !14531)
!14528 = !DISubroutineType(types: !14529)
!14529 = !{null, !13840, !14530}
!14530 = !DIDerivedType(tag: DW_TAG_typedef, name: "PMIC_LDO_VOSEL", file: !2380, line: 111, baseType: !2564)
!14531 = !{!14532, !14533, !14534}
!14532 = !DILocalVariable(name: "vr_name", arg: 1, scope: !14527, file: !2552, line: 838, type: !13840)
!14533 = !DILocalVariable(name: "ldo_vosel", arg: 2, scope: !14527, file: !2552, line: 838, type: !14530)
!14534 = !DILocalVariable(name: "viber_vosel", scope: !14527, file: !2552, line: 840, type: !14535)
!14535 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 256, elements: !863)
!14536 = !DILocation(line: 0, scope: !14527)
!14537 = !DILocation(line: 840, column: 9, scope: !14527)
!14538 = !DILocation(line: 843, column: 5, scope: !14527)
!14539 = !DILocation(line: 844, column: 5, scope: !14527)
!14540 = !DILocation(line: 846, column: 5, scope: !14527)
!14541 = !DILocation(line: 848, column: 13, scope: !14542)
!14542 = distinct !DILexicalBlock(scope: !14527, file: !2552, line: 846, column: 22)
!14543 = !DILocation(line: 850, column: 21, scope: !14544)
!14544 = distinct !DILexicalBlock(scope: !14542, file: !2552, line: 848, column: 32)
!14545 = !DILocation(line: 851, column: 21, scope: !14544)
!14546 = !DILocation(line: 854, column: 21, scope: !14544)
!14547 = !DILocation(line: 855, column: 21, scope: !14544)
!14548 = !DILocation(line: 858, column: 21, scope: !14544)
!14549 = !DILocation(line: 859, column: 21, scope: !14544)
!14550 = !DILocation(line: 862, column: 21, scope: !14544)
!14551 = !DILocation(line: 863, column: 21, scope: !14544)
!14552 = !DILocation(line: 866, column: 21, scope: !14544)
!14553 = !DILocation(line: 867, column: 21, scope: !14544)
!14554 = !DILocation(line: 872, column: 117, scope: !14542)
!14555 = !DILocation(line: 872, column: 13, scope: !14542)
!14556 = !DILocation(line: 873, column: 13, scope: !14542)
!14557 = !DILocation(line: 876, column: 13, scope: !14542)
!14558 = !DILocation(line: 877, column: 13, scope: !14542)
!14559 = !DILocation(line: 881, column: 5, scope: !14527)
!14560 = !DILocation(line: 882, column: 5, scope: !14527)
!14561 = !DILocation(line: 883, column: 1, scope: !14527)
!14562 = !DILocation(line: 889, column: 20, scope: !2588)
!14563 = !DILocation(line: 889, column: 42, scope: !2588)
!14564 = !DILocation(line: 889, column: 40, scope: !2588)
!14565 = !DILocation(line: 889, column: 63, scope: !2588)
!14566 = !DILocation(line: 889, column: 61, scope: !2588)
!14567 = !DILocation(line: 889, column: 17, scope: !2588)
!14568 = !DILocation(line: 894, column: 9, scope: !14569)
!14569 = distinct !DILexicalBlock(scope: !2588, file: !2552, line: 894, column: 9)
!14570 = !DILocation(line: 894, column: 20, scope: !14569)
!14571 = !DILocation(line: 894, column: 9, scope: !2588)
!14572 = !DILocation(line: 895, column: 25, scope: !14573)
!14573 = distinct !DILexicalBlock(scope: !14574, file: !2552, line: 895, column: 13)
!14574 = distinct !DILexicalBlock(scope: !14569, file: !2552, line: 894, column: 36)
!14575 = !DILocation(line: 0, scope: !14573)
!14576 = !DILocation(line: 902, column: 22, scope: !14574)
!14577 = !DILocation(line: 902, column: 20, scope: !14574)
!14578 = !DILocation(line: 903, column: 5, scope: !14574)
!14579 = !DILocation(line: 904, column: 1, scope: !2588)
!14580 = distinct !DISubprogram(name: "pmu_set_mtcmos_mt6385", scope: !2552, file: !2552, line: 950, type: !2594, scopeLine: 951, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2551, retainedNodes: !14581)
!14581 = !{!14582}
!14582 = !DILocalVariable(name: "setting", arg: 1, scope: !14580, file: !2552, line: 950, type: !76)
!14583 = !DILocation(line: 0, scope: !14580)
!14584 = !DILocation(line: 953, column: 5, scope: !14580)
!14585 = !DILocation(line: 954, column: 5, scope: !14580)
!14586 = !DILocation(line: 956, column: 60, scope: !14580)
!14587 = !DILocation(line: 956, column: 5, scope: !14580)
!14588 = !DILocation(line: 959, column: 5, scope: !14580)
!14589 = !DILocation(line: 960, column: 5, scope: !14580)
!14590 = !DILocation(line: 961, column: 1, scope: !14580)
!14591 = !DILocation(line: 0, scope: !2593)
!14592 = !DILocation(line: 912, column: 9, scope: !14593)
!14593 = distinct !DILexicalBlock(scope: !2593, file: !2552, line: 912, column: 9)
!14594 = !DILocation(line: 912, column: 9, scope: !2593)
!14595 = !DILocation(line: 917, column: 19, scope: !14596)
!14596 = distinct !DILexicalBlock(scope: !14597, file: !2552, line: 916, column: 23)
!14597 = distinct !DILexicalBlock(scope: !2593, file: !2552, line: 916, column: 9)
!14598 = !DILocation(line: 917, column: 17, scope: !14596)
!14599 = !DILocation(line: 918, column: 5, scope: !14596)
!14600 = !DILocation(line: 920, column: 16, scope: !14601)
!14601 = distinct !DILexicalBlock(scope: !2593, file: !2552, line: 920, column: 9)
!14602 = !DILocation(line: 0, scope: !14601)
!14603 = !DILocation(line: 920, column: 9, scope: !2593)
!14604 = !DILocation(line: 921, column: 27, scope: !14605)
!14605 = distinct !DILexicalBlock(scope: !14606, file: !2552, line: 921, column: 13)
!14606 = distinct !DILexicalBlock(scope: !14601, file: !2552, line: 920, column: 22)
!14607 = !DILocation(line: 921, column: 13, scope: !14606)
!14608 = !DILocation(line: 922, column: 13, scope: !14609)
!14609 = distinct !DILexicalBlock(scope: !14605, file: !2552, line: 921, column: 33)
!14610 = !DILocation(line: 923, column: 13, scope: !14609)
!14611 = !DILocation(line: 925, column: 22, scope: !14606)
!14612 = !DILocation(line: 924, column: 9, scope: !14609)
!14613 = !DILocation(line: 926, column: 5, scope: !14606)
!14614 = !DILocation(line: 927, column: 27, scope: !14615)
!14615 = distinct !DILexicalBlock(scope: !14616, file: !2552, line: 927, column: 13)
!14616 = distinct !DILexicalBlock(scope: !14601, file: !2552, line: 926, column: 12)
!14617 = !DILocation(line: 927, column: 13, scope: !14616)
!14618 = !DILocation(line: 928, column: 13, scope: !14619)
!14619 = distinct !DILexicalBlock(scope: !14615, file: !2552, line: 927, column: 33)
!14620 = !DILocation(line: 929, column: 13, scope: !14619)
!14621 = !DILocation(line: 931, column: 9, scope: !14619)
!14622 = !DILocation(line: 932, column: 26, scope: !14623)
!14623 = distinct !DILexicalBlock(scope: !14615, file: !2552, line: 931, column: 16)
!14624 = !DILocation(line: 935, column: 1, scope: !2593)
!14625 = distinct !DISubprogram(name: "pmu_ctrl_vbt_ldo_mt6385", scope: !2552, file: !2552, line: 937, type: !2594, scopeLine: 938, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2551, retainedNodes: !14626)
!14626 = !{!14627}
!14627 = !DILocalVariable(name: "enable", arg: 1, scope: !14625, file: !2552, line: 937, type: !76)
!14628 = !DILocation(line: 0, scope: !14625)
!14629 = !DILocation(line: 939, column: 16, scope: !14630)
!14630 = distinct !DILexicalBlock(scope: !14625, file: !2552, line: 939, column: 9)
!14631 = !DILocation(line: 0, scope: !14630)
!14632 = !DILocation(line: 948, column: 1, scope: !14625)
!14633 = distinct !DISubprogram(name: "pmu_get_vcore_setting_index", scope: !2552, file: !2552, line: 963, type: !14634, scopeLine: 964, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2551, retainedNodes: !14636)
!14634 = !DISubroutineType(types: !14635)
!14635 = !{!2580, !76}
!14636 = !{!14637, !14638, !14639}
!14637 = !DILocalVariable(name: "buck_vaval", arg: 1, scope: !14633, file: !2552, line: 963, type: !76)
!14638 = !DILocalVariable(name: "vcbuck_voval", scope: !14633, file: !2552, line: 965, type: !2607)
!14639 = !DILocalVariable(name: "vosel", scope: !14633, file: !2552, line: 966, type: !16)
!14640 = !DILocation(line: 0, scope: !14633)
!14641 = !DILocation(line: 965, column: 19, scope: !14633)
!14642 = !DILocation(line: 968, column: 5, scope: !14643)
!14643 = distinct !DILexicalBlock(scope: !14633, file: !2552, line: 968, column: 5)
!14644 = !DILocation(line: 969, column: 27, scope: !14645)
!14645 = distinct !DILexicalBlock(scope: !14646, file: !2552, line: 969, column: 13)
!14646 = distinct !DILexicalBlock(scope: !14647, file: !2552, line: 968, column: 41)
!14647 = distinct !DILexicalBlock(scope: !14643, file: !2552, line: 968, column: 5)
!14648 = !DILocation(line: 969, column: 24, scope: !14645)
!14649 = !DILocation(line: 969, column: 13, scope: !14646)
!14650 = !DILocation(line: 968, column: 37, scope: !14647)
!14651 = !DILocation(line: 968, column: 27, scope: !14647)
!14652 = distinct !{!14652, !14642, !14653}
!14653 = !DILocation(line: 972, column: 5, scope: !14643)
!14654 = !DILocation(line: 974, column: 1, scope: !14633)
!14655 = !DILocation(line: 0, scope: !2602)
!14656 = !DILocation(line: 982, column: 9, scope: !14657)
!14657 = distinct !DILexicalBlock(scope: !2602, file: !2552, line: 982, column: 9)
!14658 = !DILocation(line: 982, column: 9, scope: !2602)
!14659 = !DILocation(line: 983, column: 24, scope: !14660)
!14660 = distinct !DILexicalBlock(scope: !14657, file: !2552, line: 982, column: 20)
!14661 = !DILocation(line: 984, column: 24, scope: !14660)
!14662 = !DILocation(line: 984, column: 22, scope: !14660)
!14663 = !DILocation(line: 985, column: 24, scope: !14660)
!14664 = !DILocation(line: 986, column: 24, scope: !14660)
!14665 = !DILocation(line: 988, column: 13, scope: !14666)
!14666 = distinct !DILexicalBlock(scope: !14660, file: !2552, line: 988, column: 13)
!14667 = !DILocation(line: 988, column: 32, scope: !14666)
!14668 = !DILocation(line: 0, scope: !14666)
!14669 = !DILocation(line: 995, column: 19, scope: !14660)
!14670 = !DILocation(line: 996, column: 14, scope: !14660)
!14671 = !DILocation(line: 997, column: 5, scope: !14660)
!14672 = !DILocation(line: 999, column: 41, scope: !14673)
!14673 = distinct !DILexicalBlock(scope: !2602, file: !2552, line: 999, column: 9)
!14674 = !DILocation(line: 999, column: 10, scope: !14673)
!14675 = !DILocation(line: 1003, column: 14, scope: !14676)
!14676 = distinct !DILexicalBlock(scope: !2602, file: !2552, line: 1003, column: 9)
!14677 = !DILocation(line: 0, scope: !14676)
!14678 = !DILocation(line: 1003, column: 9, scope: !2602)
!14679 = !DILocation(line: 1006, column: 46, scope: !14680)
!14680 = distinct !DILexicalBlock(scope: !14681, file: !2552, line: 1006, column: 13)
!14681 = distinct !DILexicalBlock(scope: !14676, file: !2552, line: 1005, column: 12)
!14682 = !DILocation(line: 1006, column: 13, scope: !14681)
!14683 = !DILocation(line: 1011, column: 5, scope: !14684)
!14684 = distinct !DILexicalBlock(scope: !2602, file: !2552, line: 1011, column: 5)
!14685 = !DILocation(line: 1012, column: 13, scope: !14686)
!14686 = distinct !DILexicalBlock(scope: !14687, file: !2552, line: 1012, column: 13)
!14687 = distinct !DILexicalBlock(scope: !14688, file: !2552, line: 1011, column: 54)
!14688 = distinct !DILexicalBlock(scope: !14684, file: !2552, line: 1011, column: 5)
!14689 = !DILocation(line: 1012, column: 44, scope: !14686)
!14690 = !DILocation(line: 1012, column: 13, scope: !14687)
!14691 = !DILocation(line: 1011, column: 50, scope: !14688)
!14692 = !DILocation(line: 1011, column: 35, scope: !14688)
!14693 = distinct !{!14693, !14683, !14694}
!14694 = !DILocation(line: 1015, column: 5, scope: !14684)
!14695 = !DILocation(line: 1016, column: 19, scope: !14696)
!14696 = distinct !DILexicalBlock(scope: !2602, file: !2552, line: 1016, column: 9)
!14697 = !DILocation(line: 1016, column: 9, scope: !2602)
!14698 = !DILocation(line: 1021, column: 22, scope: !14699)
!14699 = distinct !DILexicalBlock(scope: !2602, file: !2552, line: 1021, column: 9)
!14700 = !DILocation(line: 1021, column: 19, scope: !14699)
!14701 = !DILocation(line: 1021, column: 9, scope: !2602)
!14702 = !DILocation(line: 1022, column: 19, scope: !14703)
!14703 = distinct !DILexicalBlock(scope: !14699, file: !2552, line: 1021, column: 33)
!14704 = !DILocation(line: 1024, column: 23, scope: !14705)
!14705 = distinct !DILexicalBlock(scope: !14703, file: !2552, line: 1024, column: 13)
!14706 = !DILocation(line: 1024, column: 13, scope: !14703)
!14707 = !DILocation(line: 1025, column: 17, scope: !14708)
!14708 = distinct !DILexicalBlock(scope: !14709, file: !2552, line: 1025, column: 17)
!14709 = distinct !DILexicalBlock(scope: !14705, file: !2552, line: 1024, column: 43)
!14710 = !DILocation(line: 1025, column: 36, scope: !14708)
!14711 = !DILocation(line: 1025, column: 17, scope: !14709)
!14712 = !DILocation(line: 1026, column: 17, scope: !14713)
!14713 = distinct !DILexicalBlock(scope: !14708, file: !2552, line: 1025, column: 42)
!14714 = !DILocation(line: 1027, column: 13, scope: !14713)
!14715 = !DILocation(line: 1029, column: 30, scope: !14716)
!14716 = distinct !DILexicalBlock(scope: !14717, file: !2552, line: 1029, column: 17)
!14717 = distinct !DILexicalBlock(scope: !14705, file: !2552, line: 1028, column: 16)
!14718 = !DILocation(line: 1029, column: 27, scope: !14716)
!14719 = !DILocation(line: 1029, column: 17, scope: !14717)
!14720 = !DILocation(line: 1030, column: 30, scope: !14721)
!14721 = distinct !DILexicalBlock(scope: !14716, file: !2552, line: 1029, column: 44)
!14722 = !DILocation(line: 1031, column: 17, scope: !14721)
!14723 = !DILocation(line: 1032, column: 13, scope: !14721)
!14724 = !DILocation(line: 1033, column: 17, scope: !14725)
!14725 = distinct !DILexicalBlock(scope: !14717, file: !2552, line: 1033, column: 17)
!14726 = !DILocation(line: 1033, column: 36, scope: !14725)
!14727 = !DILocation(line: 1033, column: 17, scope: !14717)
!14728 = !DILocation(line: 1034, column: 17, scope: !14729)
!14729 = distinct !DILexicalBlock(scope: !14725, file: !2552, line: 1033, column: 42)
!14730 = !DILocation(line: 1035, column: 13, scope: !14729)
!14731 = !DILocation(line: 1039, column: 1, scope: !2602)
!14732 = distinct !DISubprogram(name: "pmu_get_vcore_voltage_mt6385", scope: !2552, file: !2552, line: 1041, type: !3296, scopeLine: 1042, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2551, retainedNodes: !14733)
!14733 = !{!14734, !14735}
!14734 = !DILocalVariable(name: "psi_status", scope: !14732, file: !2552, line: 1044, type: !76)
!14735 = !DILocalVariable(name: "vcore", scope: !14732, file: !2552, line: 1044, type: !76)
!14736 = !DILocation(line: 1046, column: 18, scope: !14732)
!14737 = !DILocation(line: 0, scope: !14732)
!14738 = !DILocation(line: 1048, column: 20, scope: !14739)
!14739 = distinct !DILexicalBlock(scope: !14732, file: !2552, line: 1048, column: 9)
!14740 = !DILocation(line: 0, scope: !14739)
!14741 = !DILocation(line: 1057, column: 5, scope: !14732)
!14742 = !DILocation(line: 1063, column: 9, scope: !2618)
!14743 = !DILocation(line: 1065, column: 41, scope: !2618)
!14744 = !DILocation(line: 1065, column: 23, scope: !2618)
!14745 = !DILocation(line: 1067, column: 28, scope: !14746)
!14746 = distinct !DILexicalBlock(scope: !2618, file: !2552, line: 1067, column: 9)
!14747 = !DILocation(line: 1067, column: 25, scope: !14746)
!14748 = !DILocation(line: 1067, column: 9, scope: !2618)
!14749 = !DILocation(line: 1068, column: 20, scope: !14750)
!14750 = distinct !DILexicalBlock(scope: !14746, file: !2552, line: 1067, column: 40)
!14751 = !DILocation(line: 1069, column: 9, scope: !14750)
!14752 = !DILocation(line: 1070, column: 9, scope: !14750)
!14753 = !DILocation(line: 1071, column: 146, scope: !14750)
!14754 = !DILocation(line: 1071, column: 133, scope: !14750)
!14755 = !DILocation(line: 1071, column: 9, scope: !14750)
!14756 = !DILocation(line: 1072, column: 9, scope: !14750)
!14757 = !DILocation(line: 1073, column: 9, scope: !14750)
!14758 = !DILocation(line: 1074, column: 5, scope: !14750)
!14759 = !DILocation(line: 1075, column: 1, scope: !2618)
!14760 = distinct !DISubprogram(name: "pmu_get_usb_input_status_mt6385", scope: !2552, file: !2552, line: 1077, type: !3296, scopeLine: 1078, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2551, retainedNodes: !14761)
!14761 = !{!14762}
!14762 = !DILocalVariable(name: "ret", scope: !14760, file: !2552, line: 1079, type: !82)
!14763 = !DILocation(line: 1080, column: 5, scope: !14760)
!14764 = !DILocation(line: 1081, column: 5, scope: !14760)
!14765 = !DILocation(line: 1083, column: 11, scope: !14760)
!14766 = !DILocation(line: 0, scope: !14760)
!14767 = !DILocation(line: 1086, column: 5, scope: !14760)
!14768 = !DILocation(line: 1087, column: 5, scope: !14760)
!14769 = !DILocation(line: 1088, column: 5, scope: !14760)
!14770 = distinct !DISubprogram(name: "pmu_enter_power_off_mt6385", scope: !2552, file: !2552, line: 1091, type: !260, scopeLine: 1092, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2551, retainedNodes: !262)
!14771 = !DILocation(line: 1093, column: 5, scope: !14770)
!14772 = !DILocation(line: 1094, column: 1, scope: !14770)
!14773 = distinct !DISubprogram(name: "pmu_reset_mt6385", scope: !2552, file: !2552, line: 1096, type: !260, scopeLine: 1097, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2551, retainedNodes: !262)
!14774 = !DILocation(line: 1099, column: 5, scope: !14773)
!14775 = !DILocation(line: 1100, column: 5, scope: !14773)
!14776 = !DILocation(line: 1102, column: 5, scope: !14773)
!14777 = !DILocation(line: 1105, column: 5, scope: !14773)
!14778 = !DILocation(line: 1106, column: 5, scope: !14773)
!14779 = !DILocation(line: 1107, column: 1, scope: !14773)
!14780 = distinct !DISubprogram(name: "__EMI_GetSR", scope: !2628, file: !2628, line: 87, type: !3922, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2627, retainedNodes: !14781)
!14781 = !{!14782, !14783}
!14782 = !DILocalVariable(name: "bank_no", arg: 1, scope: !14780, file: !2628, line: 87, type: !61)
!14783 = !DILocalVariable(name: "value", scope: !14780, file: !2628, line: 89, type: !61)
!14784 = !DILocation(line: 0, scope: !14780)
!14785 = !DILocation(line: 91, column: 41, scope: !14780)
!14786 = !DILocation(line: 91, column: 5, scope: !14780)
!14787 = !DILocation(line: 91, column: 19, scope: !14780)
!14788 = !DILocation(line: 91, column: 31, scope: !14780)
!14789 = !DILocation(line: 92, column: 77, scope: !14780)
!14790 = !DILocation(line: 92, column: 60, scope: !14780)
!14791 = !DILocation(line: 92, column: 31, scope: !14780)
!14792 = !DILocation(line: 94, column: 5, scope: !14780)
!14793 = !DILocation(line: 94, column: 27, scope: !14780)
!14794 = !DILocation(line: 94, column: 39, scope: !14780)
!14795 = !DILocation(line: 94, column: 65, scope: !14780)
!14796 = distinct !{!14796, !14792, !14797}
!14797 = !DILocation(line: 94, column: 70, scope: !14780)
!14798 = !DILocation(line: 96, column: 29, scope: !14780)
!14799 = !DILocation(line: 96, column: 64, scope: !14780)
!14800 = !DILocation(line: 98, column: 5, scope: !14780)
!14801 = distinct !DISubprogram(name: "__EMI_SetSR", scope: !2628, file: !2628, line: 102, type: !7282, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2627, retainedNodes: !14802)
!14802 = !{!14803, !14804}
!14803 = !DILocalVariable(name: "bank_no", arg: 1, scope: !14801, file: !2628, line: 102, type: !61)
!14804 = !DILocalVariable(name: "value", arg: 2, scope: !14801, file: !2628, line: 102, type: !61)
!14805 = !DILocation(line: 0, scope: !14801)
!14806 = !DILocation(line: 106, column: 40, scope: !14801)
!14807 = !DILocation(line: 106, column: 77, scope: !14801)
!14808 = !DILocation(line: 106, column: 102, scope: !14801)
!14809 = !DILocation(line: 106, column: 5, scope: !14801)
!14810 = !DILocation(line: 106, column: 19, scope: !14801)
!14811 = !DILocation(line: 106, column: 31, scope: !14801)
!14812 = !DILocation(line: 107, column: 77, scope: !14801)
!14813 = !DILocation(line: 107, column: 60, scope: !14801)
!14814 = !DILocation(line: 107, column: 31, scope: !14801)
!14815 = !DILocation(line: 109, column: 5, scope: !14801)
!14816 = !DILocation(line: 109, column: 27, scope: !14801)
!14817 = !DILocation(line: 109, column: 39, scope: !14801)
!14818 = !DILocation(line: 109, column: 65, scope: !14801)
!14819 = distinct !{!14819, !14815, !14820}
!14820 = !DILocation(line: 109, column: 70, scope: !14801)
!14821 = !DILocation(line: 111, column: 5, scope: !14801)
!14822 = distinct !DISubprogram(name: "__EMI_SetRegValfromCMCP", scope: !2628, file: !2628, line: 114, type: !260, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2627, retainedNodes: !262)
!14823 = !DILocation(line: 117, column: 36, scope: !14822)
!14824 = !DILocation(line: 117, column: 18, scope: !14822)
!14825 = !DILocation(line: 118, column: 37, scope: !14822)
!14826 = !DILocation(line: 118, column: 18, scope: !14822)
!14827 = !DILocation(line: 119, column: 37, scope: !14822)
!14828 = !DILocation(line: 119, column: 19, scope: !14822)
!14829 = !DILocation(line: 120, column: 37, scope: !14822)
!14830 = !DILocation(line: 120, column: 19, scope: !14822)
!14831 = !DILocation(line: 121, column: 37, scope: !14822)
!14832 = !DILocation(line: 121, column: 19, scope: !14822)
!14833 = !DILocation(line: 122, column: 37, scope: !14822)
!14834 = !DILocation(line: 122, column: 19, scope: !14822)
!14835 = !DILocation(line: 123, column: 37, scope: !14822)
!14836 = !DILocation(line: 123, column: 19, scope: !14822)
!14837 = !DILocation(line: 125, column: 37, scope: !14822)
!14838 = !DILocation(line: 125, column: 19, scope: !14822)
!14839 = !DILocation(line: 126, column: 37, scope: !14822)
!14840 = !DILocation(line: 126, column: 19, scope: !14822)
!14841 = !DILocation(line: 127, column: 37, scope: !14822)
!14842 = !DILocation(line: 127, column: 19, scope: !14822)
!14843 = !DILocation(line: 128, column: 37, scope: !14822)
!14844 = !DILocation(line: 128, column: 19, scope: !14822)
!14845 = !DILocation(line: 130, column: 36, scope: !14822)
!14846 = !DILocation(line: 130, column: 18, scope: !14822)
!14847 = !DILocation(line: 131, column: 36, scope: !14822)
!14848 = !DILocation(line: 131, column: 18, scope: !14822)
!14849 = !DILocation(line: 133, column: 5, scope: !14822)
!14850 = distinct !DISubprogram(name: "__EMI_EnableBandwidthLimiter", scope: !2628, file: !2628, line: 140, type: !2513, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2627, retainedNodes: !262)
!14851 = !DILocation(line: 144, column: 5, scope: !14850)
!14852 = !DILocation(line: 144, column: 19, scope: !14850)
!14853 = !DILocation(line: 144, column: 28, scope: !14850)
!14854 = !DILocation(line: 147, column: 19, scope: !14850)
!14855 = !DILocation(line: 147, column: 28, scope: !14850)
!14856 = !DILocation(line: 150, column: 19, scope: !14850)
!14857 = !DILocation(line: 150, column: 28, scope: !14850)
!14858 = !DILocation(line: 152, column: 5, scope: !14850)
!14859 = distinct !DISubprogram(name: "TestCase_MBIST", scope: !2628, file: !2628, line: 157, type: !9323, scopeLine: 158, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2627, retainedNodes: !14860)
!14860 = !{!14861, !14862, !14863, !14864, !14865, !14866}
!14861 = !DILocalVariable(name: "mbist_src", scope: !14859, file: !2628, line: 159, type: !61)
!14862 = !DILocalVariable(name: "mbist_len", scope: !14859, file: !2628, line: 159, type: !61)
!14863 = !DILocalVariable(name: "mbist_data", scope: !14859, file: !2628, line: 159, type: !3895)
!14864 = !DILocalVariable(name: "i", scope: !14859, file: !2628, line: 160, type: !61)
!14865 = !DILocalVariable(name: "bist_data_inv", scope: !14859, file: !2628, line: 160, type: !61)
!14866 = !DILocalVariable(name: "bist_data_random", scope: !14859, file: !2628, line: 160, type: !61)
!14867 = !DILocation(line: 159, column: 36, scope: !14859)
!14868 = !DILocation(line: 0, scope: !14859)
!14869 = !DILocation(line: 165, column: 5, scope: !14859)
!14870 = !DILocation(line: 165, column: 19, scope: !14859)
!14871 = !DILocation(line: 165, column: 30, scope: !14859)
!14872 = !DILocation(line: 166, column: 5, scope: !14873)
!14873 = distinct !DILexicalBlock(scope: !14859, file: !2628, line: 166, column: 5)
!14874 = !DILocation(line: 167, column: 9, scope: !14875)
!14875 = distinct !DILexicalBlock(scope: !14876, file: !2628, line: 167, column: 9)
!14876 = distinct !DILexicalBlock(scope: !14877, file: !2628, line: 166, column: 66)
!14877 = distinct !DILexicalBlock(scope: !14873, file: !2628, line: 166, column: 5)
!14878 = !DILocation(line: 168, column: 13, scope: !14879)
!14879 = distinct !DILexicalBlock(scope: !14880, file: !2628, line: 168, column: 13)
!14880 = distinct !DILexicalBlock(scope: !14881, file: !2628, line: 167, column: 34)
!14881 = distinct !DILexicalBlock(scope: !14875, file: !2628, line: 167, column: 9)
!14882 = !DILocation(line: 168, column: 57, scope: !14883)
!14883 = distinct !DILexicalBlock(scope: !14879, file: !2628, line: 168, column: 13)
!14884 = distinct !{!14884, !14878, !14885}
!14885 = !DILocation(line: 183, column: 13, scope: !14879)
!14886 = !DILocation(line: 170, column: 42, scope: !14887)
!14887 = distinct !DILexicalBlock(scope: !14883, file: !2628, line: 168, column: 83)
!14888 = !DILocation(line: 172, column: 42, scope: !14887)
!14889 = !DILocation(line: 174, column: 45, scope: !14887)
!14890 = !DILocation(line: 174, column: 59, scope: !14887)
!14891 = !DILocation(line: 174, column: 154, scope: !14887)
!14892 = !DILocation(line: 174, column: 87, scope: !14887)
!14893 = !DILocation(line: 174, column: 134, scope: !14887)
!14894 = !DILocation(line: 174, column: 42, scope: !14887)
!14895 = !DILocation(line: 175, column: 42, scope: !14887)
!14896 = !DILocation(line: 177, column: 17, scope: !14887)
!14897 = !DILocation(line: 177, column: 39, scope: !14887)
!14898 = !DILocation(line: 177, column: 50, scope: !14887)
!14899 = !DILocation(line: 177, column: 71, scope: !14887)
!14900 = distinct !{!14900, !14896, !14901}
!14901 = !DILocation(line: 177, column: 78, scope: !14887)
!14902 = !DILocation(line: 179, column: 36, scope: !14903)
!14903 = distinct !DILexicalBlock(scope: !14887, file: !2628, line: 179, column: 21)
!14904 = !DILocation(line: 179, column: 47, scope: !14903)
!14905 = !DILocation(line: 179, column: 69, scope: !14903)
!14906 = !DILocation(line: 168, column: 79, scope: !14883)
!14907 = !DILocation(line: 179, column: 21, scope: !14887)
!14908 = !DILocation(line: 167, column: 30, scope: !14881)
!14909 = !DILocation(line: 167, column: 23, scope: !14881)
!14910 = distinct !{!14910, !14874, !14911}
!14911 = !DILocation(line: 184, column: 9, scope: !14875)
!14912 = !DILocation(line: 166, column: 62, scope: !14877)
!14913 = !DILocation(line: 166, column: 43, scope: !14877)
!14914 = distinct !{!14914, !14872, !14915}
!14915 = !DILocation(line: 185, column: 5, scope: !14873)
!14916 = !DILocation(line: 189, column: 1, scope: !14859)
!14917 = distinct !DISubprogram(name: "__EMI_DataAutoTrackingMbistTest", scope: !2628, file: !2628, line: 190, type: !9323, scopeLine: 191, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2627, retainedNodes: !262)
!14918 = !DILocation(line: 192, column: 9, scope: !14919)
!14919 = distinct !DILexicalBlock(scope: !14917, file: !2628, line: 192, column: 9)
!14920 = !DILocation(line: 192, column: 26, scope: !14919)
!14921 = !DILocation(line: 0, scope: !14917)
!14922 = !DILocation(line: 197, column: 1, scope: !14917)
!14923 = distinct !DISubprogram(name: "__EMI_EnableDataAutoTracking", scope: !2628, file: !2628, line: 201, type: !260, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2627, retainedNodes: !14924)
!14924 = !{!14925, !14926}
!14925 = !DILocalVariable(name: "dqy_in_del", scope: !14923, file: !2628, line: 203, type: !1343)
!14926 = !DILocalVariable(name: "dqs_in_del", scope: !14923, file: !2628, line: 204, type: !1343)
!14927 = !DILocation(line: 0, scope: !14923)
!14928 = !DILocation(line: 206, column: 5, scope: !14923)
!14929 = !DILocation(line: 206, column: 19, scope: !14923)
!14930 = !DILocation(line: 206, column: 28, scope: !14923)
!14931 = !DILocation(line: 207, column: 19, scope: !14923)
!14932 = !DILocation(line: 207, column: 28, scope: !14923)
!14933 = !DILocation(line: 208, column: 19, scope: !14923)
!14934 = !DILocation(line: 208, column: 28, scope: !14923)
!14935 = !DILocation(line: 209, column: 19, scope: !14923)
!14936 = !DILocation(line: 209, column: 28, scope: !14923)
!14937 = !DILocation(line: 212, column: 23, scope: !14938)
!14938 = distinct !DILexicalBlock(scope: !14939, file: !2628, line: 211, column: 78)
!14939 = distinct !DILexicalBlock(scope: !14940, file: !2628, line: 211, column: 5)
!14940 = distinct !DILexicalBlock(scope: !14923, file: !2628, line: 211, column: 5)
!14941 = !DILocation(line: 212, column: 32, scope: !14938)
!14942 = !DILocation(line: 213, column: 23, scope: !14938)
!14943 = !DILocation(line: 213, column: 32, scope: !14938)
!14944 = !DILocation(line: 215, column: 19, scope: !14945)
!14945 = distinct !DILexicalBlock(scope: !14938, file: !2628, line: 215, column: 13)
!14946 = !DILocation(line: 215, column: 15, scope: !14945)
!14947 = !DILocation(line: 215, column: 13, scope: !14938)
!14948 = !DILocation(line: 211, column: 40, scope: !14939)
!14949 = !DILocation(line: 211, column: 5, scope: !14940)
!14950 = distinct !{!14950, !14949, !14951}
!14951 = !DILocation(line: 218, column: 5, scope: !14940)
!14952 = !DILocation(line: 211, column: 57, scope: !14939)
!14953 = !DILocation(line: 212, column: 9, scope: !14938)
!14954 = !DILocation(line: 212, column: 45, scope: !14938)
!14955 = !DILocation(line: 212, column: 83, scope: !14938)
!14956 = !DILocation(line: 212, column: 121, scope: !14938)
!14957 = !DILocation(line: 212, column: 70, scope: !14938)
!14958 = !DILocation(line: 212, column: 108, scope: !14938)
!14959 = !DILocation(line: 212, column: 146, scope: !14938)
!14960 = !DILocation(line: 222, column: 49, scope: !14961)
!14961 = distinct !DILexicalBlock(scope: !14962, file: !2628, line: 221, column: 84)
!14962 = distinct !DILexicalBlock(scope: !14963, file: !2628, line: 221, column: 9)
!14963 = distinct !DILexicalBlock(scope: !14964, file: !2628, line: 221, column: 9)
!14964 = distinct !DILexicalBlock(scope: !14965, file: !2628, line: 220, column: 25)
!14965 = distinct !DILexicalBlock(scope: !14923, file: !2628, line: 220, column: 9)
!14966 = !DILocation(line: 222, column: 13, scope: !14961)
!14967 = !DILocation(line: 222, column: 27, scope: !14961)
!14968 = !DILocation(line: 222, column: 36, scope: !14961)
!14969 = !DILocation(line: 224, column: 23, scope: !14970)
!14970 = distinct !DILexicalBlock(scope: !14961, file: !2628, line: 224, column: 17)
!14971 = !DILocation(line: 224, column: 19, scope: !14970)
!14972 = !DILocation(line: 224, column: 17, scope: !14961)
!14973 = distinct !{!14973, !14974, !14975}
!14974 = !DILocation(line: 221, column: 9, scope: !14963)
!14975 = !DILocation(line: 227, column: 9, scope: !14963)
!14976 = !DILocation(line: 230, column: 1, scope: !14923)
!14977 = distinct !DISubprogram(name: "EMI_PowerOn_Init", scope: !2628, file: !2628, line: 253, type: !260, scopeLine: 254, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2627, retainedNodes: !262)
!14978 = !DILocation(line: 257, column: 26, scope: !14977)
!14979 = !DILocation(line: 259, column: 5, scope: !14977)
!14980 = !DILocation(line: 259, column: 19, scope: !14977)
!14981 = !DILocation(line: 259, column: 29, scope: !14977)
!14982 = !DILocation(line: 260, column: 5, scope: !14977)
!14983 = !DILocation(line: 260, column: 27, scope: !14977)
!14984 = !DILocation(line: 260, column: 93, scope: !14977)
!14985 = distinct !{!14985, !14982, !14986}
!14986 = !DILocation(line: 260, column: 98, scope: !14977)
!14987 = !DILocation(line: 261, column: 29, scope: !14977)
!14988 = !DILocation(line: 262, column: 5, scope: !14977)
!14989 = !DILocation(line: 262, column: 27, scope: !14977)
!14990 = !DILocation(line: 262, column: 93, scope: !14977)
!14991 = distinct !{!14991, !14988, !14992}
!14992 = !DILocation(line: 262, column: 98, scope: !14977)
!14993 = !DILocation(line: 264, column: 42, scope: !14977)
!14994 = !DILocation(line: 265, column: 48, scope: !14977)
!14995 = !DILocation(line: 267, column: 5, scope: !14977)
!14996 = !DILocation(line: 267, column: 27, scope: !14977)
!14997 = !DILocation(line: 267, column: 39, scope: !14977)
!14998 = !DILocation(line: 267, column: 65, scope: !14977)
!14999 = distinct !{!14999, !14995, !15000}
!15000 = !DILocation(line: 267, column: 70, scope: !14977)
!15001 = !DILocation(line: 269, column: 5, scope: !14977)
!15002 = !DILocation(line: 273, column: 8, scope: !14977)
!15003 = !DILocation(line: 275, column: 5, scope: !14977)
!15004 = !DILocation(line: 275, column: 27, scope: !14977)
!15005 = !DILocation(line: 275, column: 39, scope: !14977)
!15006 = !DILocation(line: 275, column: 65, scope: !14977)
!15007 = distinct !{!15007, !15003, !15008}
!15008 = !DILocation(line: 275, column: 70, scope: !14977)
!15009 = !DILocation(line: 278, column: 9, scope: !15010)
!15010 = distinct !DILexicalBlock(scope: !14977, file: !2628, line: 278, column: 9)
!15011 = !DILocation(line: 278, column: 44, scope: !15010)
!15012 = !DILocation(line: 278, column: 9, scope: !14977)
!15013 = !DILocation(line: 279, column: 13, scope: !15014)
!15014 = distinct !DILexicalBlock(scope: !15015, file: !2628, line: 279, column: 12)
!15015 = distinct !DILexicalBlock(scope: !15010, file: !2628, line: 278, column: 55)
!15016 = !DILocation(line: 279, column: 48, scope: !15014)
!15017 = !DILocation(line: 279, column: 56, scope: !15014)
!15018 = !DILocation(line: 0, scope: !15014)
!15019 = !DILocation(line: 288, column: 1, scope: !14977)
!15020 = distinct !DISubprogram(name: "custom_setEMI", scope: !2628, file: !2628, line: 294, type: !15021, scopeLine: 295, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2627, retainedNodes: !262)
!15021 = !DISubroutineType(types: !15022)
!15022 = !{!1649}
!15023 = !DILocation(line: 298, column: 5, scope: !15020)
!15024 = !DILocation(line: 300, column: 5, scope: !15020)
!15025 = !DILocation(line: 302, column: 20, scope: !15020)
!15026 = !DILocation(line: 302, column: 18, scope: !15020)
!15027 = !DILocation(line: 303, column: 20, scope: !15020)
!15028 = !DILocation(line: 303, column: 18, scope: !15020)
!15029 = !DILocation(line: 304, column: 20, scope: !15020)
!15030 = !DILocation(line: 304, column: 18, scope: !15020)
!15031 = !DILocation(line: 307, column: 5, scope: !15020)
!15032 = distinct !DISubprogram(name: "custom_setAdvEMI", scope: !2628, file: !2628, line: 312, type: !15021, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2627, retainedNodes: !262)
!15033 = !DILocation(line: 319, column: 29, scope: !15032)
!15034 = !DILocation(line: 319, column: 5, scope: !15032)
!15035 = !DILocation(line: 319, column: 19, scope: !15032)
!15036 = !DILocation(line: 319, column: 27, scope: !15032)
!15037 = !DILocation(line: 320, column: 29, scope: !15032)
!15038 = !DILocation(line: 320, column: 19, scope: !15032)
!15039 = !DILocation(line: 320, column: 27, scope: !15032)
!15040 = !DILocation(line: 322, column: 30, scope: !15032)
!15041 = !DILocation(line: 322, column: 19, scope: !15032)
!15042 = !DILocation(line: 322, column: 28, scope: !15032)
!15043 = !DILocation(line: 324, column: 30, scope: !15032)
!15044 = !DILocation(line: 324, column: 19, scope: !15032)
!15045 = !DILocation(line: 324, column: 28, scope: !15032)
!15046 = !DILocation(line: 326, column: 31, scope: !15032)
!15047 = !DILocation(line: 326, column: 19, scope: !15032)
!15048 = !DILocation(line: 326, column: 29, scope: !15032)
!15049 = !DILocation(line: 327, column: 31, scope: !15032)
!15050 = !DILocation(line: 327, column: 19, scope: !15032)
!15051 = !DILocation(line: 327, column: 29, scope: !15032)
!15052 = !DILocation(line: 332, column: 30, scope: !15032)
!15053 = !DILocation(line: 332, column: 19, scope: !15032)
!15054 = !DILocation(line: 332, column: 28, scope: !15032)
!15055 = !DILocation(line: 333, column: 30, scope: !15032)
!15056 = !DILocation(line: 333, column: 19, scope: !15032)
!15057 = !DILocation(line: 333, column: 28, scope: !15032)
!15058 = !DILocation(line: 334, column: 30, scope: !15032)
!15059 = !DILocation(line: 334, column: 19, scope: !15032)
!15060 = !DILocation(line: 334, column: 28, scope: !15032)
!15061 = !DILocation(line: 336, column: 30, scope: !15032)
!15062 = !DILocation(line: 336, column: 19, scope: !15032)
!15063 = !DILocation(line: 336, column: 28, scope: !15032)
!15064 = !DILocation(line: 337, column: 30, scope: !15032)
!15065 = !DILocation(line: 337, column: 19, scope: !15032)
!15066 = !DILocation(line: 337, column: 28, scope: !15032)
!15067 = !DILocation(line: 338, column: 30, scope: !15032)
!15068 = !DILocation(line: 338, column: 19, scope: !15032)
!15069 = !DILocation(line: 338, column: 28, scope: !15032)
!15070 = !DILocation(line: 339, column: 30, scope: !15032)
!15071 = !DILocation(line: 339, column: 19, scope: !15032)
!15072 = !DILocation(line: 339, column: 28, scope: !15032)
!15073 = !DILocation(line: 341, column: 5, scope: !15032)
!15074 = !DILocation(line: 345, column: 5, scope: !15032)
!15075 = !DILocation(line: 345, column: 19, scope: !15032)
!15076 = !DILocation(line: 345, column: 28, scope: !15032)
!15077 = !DILocation(line: 346, column: 5, scope: !15032)
!15078 = !DILocation(line: 346, column: 28, scope: !15032)
!15079 = !DILocation(line: 346, column: 82, scope: !15032)
!15080 = distinct !{!15080, !15077, !15081}
!15081 = !DILocation(line: 346, column: 87, scope: !15032)
!15082 = !DILocation(line: 347, column: 28, scope: !15032)
!15083 = !DILocation(line: 348, column: 5, scope: !15032)
!15084 = !DILocation(line: 348, column: 28, scope: !15032)
!15085 = !DILocation(line: 348, column: 82, scope: !15032)
!15086 = distinct !{!15086, !15083, !15087}
!15087 = !DILocation(line: 348, column: 87, scope: !15032)
!15088 = !DILocation(line: 349, column: 28, scope: !15032)
!15089 = !DILocation(line: 351, column: 5, scope: !15032)
!15090 = !DILocation(line: 353, column: 5, scope: !15032)
!15091 = distinct !DISubprogram(name: "EMI_Setting_Save", scope: !2628, file: !2628, line: 358, type: !260, scopeLine: 359, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2627, retainedNodes: !262)
!15092 = !DILocation(line: 361, column: 36, scope: !15091)
!15093 = !DILocation(line: 361, column: 50, scope: !15091)
!15094 = !DILocation(line: 361, column: 34, scope: !15091)
!15095 = !DILocation(line: 362, column: 50, scope: !15091)
!15096 = !DILocation(line: 362, column: 34, scope: !15091)
!15097 = !DILocation(line: 363, column: 50, scope: !15091)
!15098 = !DILocation(line: 363, column: 34, scope: !15091)
!15099 = !DILocation(line: 364, column: 50, scope: !15091)
!15100 = !DILocation(line: 364, column: 34, scope: !15091)
!15101 = !DILocation(line: 365, column: 50, scope: !15091)
!15102 = !DILocation(line: 365, column: 34, scope: !15091)
!15103 = !DILocation(line: 366, column: 50, scope: !15091)
!15104 = !DILocation(line: 366, column: 34, scope: !15091)
!15105 = !DILocation(line: 367, column: 50, scope: !15091)
!15106 = !DILocation(line: 367, column: 34, scope: !15091)
!15107 = !DILocation(line: 368, column: 50, scope: !15091)
!15108 = !DILocation(line: 368, column: 34, scope: !15091)
!15109 = !DILocation(line: 369, column: 50, scope: !15091)
!15110 = !DILocation(line: 369, column: 34, scope: !15091)
!15111 = !DILocation(line: 370, column: 50, scope: !15091)
!15112 = !DILocation(line: 370, column: 34, scope: !15091)
!15113 = !DILocation(line: 371, column: 50, scope: !15091)
!15114 = !DILocation(line: 371, column: 34, scope: !15091)
!15115 = !DILocation(line: 372, column: 50, scope: !15091)
!15116 = !DILocation(line: 372, column: 34, scope: !15091)
!15117 = !DILocation(line: 373, column: 51, scope: !15091)
!15118 = !DILocation(line: 373, column: 35, scope: !15091)
!15119 = !DILocation(line: 374, column: 51, scope: !15091)
!15120 = !DILocation(line: 374, column: 35, scope: !15091)
!15121 = !DILocation(line: 375, column: 50, scope: !15091)
!15122 = !DILocation(line: 375, column: 34, scope: !15091)
!15123 = !DILocation(line: 376, column: 50, scope: !15091)
!15124 = !DILocation(line: 376, column: 34, scope: !15091)
!15125 = !DILocation(line: 377, column: 50, scope: !15091)
!15126 = !DILocation(line: 377, column: 34, scope: !15091)
!15127 = !DILocation(line: 378, column: 50, scope: !15091)
!15128 = !DILocation(line: 378, column: 34, scope: !15091)
!15129 = !DILocation(line: 379, column: 50, scope: !15091)
!15130 = !DILocation(line: 379, column: 34, scope: !15091)
!15131 = !DILocation(line: 380, column: 50, scope: !15091)
!15132 = !DILocation(line: 380, column: 34, scope: !15091)
!15133 = !DILocation(line: 382, column: 1, scope: !15091)
!15134 = distinct !DISubprogram(name: "EMI_Setting_restore", scope: !2628, file: !2628, line: 384, type: !260, scopeLine: 385, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2627, retainedNodes: !262)
!15135 = !DILocation(line: 387, column: 5, scope: !15134)
!15136 = !DILocation(line: 387, column: 27, scope: !15134)
!15137 = !DILocation(line: 387, column: 36, scope: !15134)
!15138 = !DILocation(line: 387, column: 76, scope: !15134)
!15139 = distinct !{!15139, !15135, !15140}
!15140 = !DILocation(line: 387, column: 84, scope: !15134)
!15141 = !DILocation(line: 388, column: 50, scope: !15134)
!15142 = !DILocation(line: 388, column: 19, scope: !15134)
!15143 = !DILocation(line: 388, column: 28, scope: !15134)
!15144 = !DILocation(line: 389, column: 50, scope: !15134)
!15145 = !DILocation(line: 389, column: 19, scope: !15134)
!15146 = !DILocation(line: 389, column: 28, scope: !15134)
!15147 = !DILocation(line: 390, column: 50, scope: !15134)
!15148 = !DILocation(line: 390, column: 19, scope: !15134)
!15149 = !DILocation(line: 390, column: 28, scope: !15134)
!15150 = !DILocation(line: 391, column: 50, scope: !15134)
!15151 = !DILocation(line: 391, column: 19, scope: !15134)
!15152 = !DILocation(line: 391, column: 28, scope: !15134)
!15153 = !DILocation(line: 392, column: 50, scope: !15134)
!15154 = !DILocation(line: 392, column: 19, scope: !15134)
!15155 = !DILocation(line: 392, column: 28, scope: !15134)
!15156 = !DILocation(line: 393, column: 50, scope: !15134)
!15157 = !DILocation(line: 393, column: 19, scope: !15134)
!15158 = !DILocation(line: 393, column: 28, scope: !15134)
!15159 = !DILocation(line: 394, column: 51, scope: !15134)
!15160 = !DILocation(line: 394, column: 19, scope: !15134)
!15161 = !DILocation(line: 394, column: 29, scope: !15134)
!15162 = !DILocation(line: 395, column: 51, scope: !15134)
!15163 = !DILocation(line: 395, column: 19, scope: !15134)
!15164 = !DILocation(line: 395, column: 29, scope: !15134)
!15165 = !DILocation(line: 396, column: 50, scope: !15134)
!15166 = !DILocation(line: 396, column: 19, scope: !15134)
!15167 = !DILocation(line: 396, column: 28, scope: !15134)
!15168 = !DILocation(line: 397, column: 50, scope: !15134)
!15169 = !DILocation(line: 397, column: 19, scope: !15134)
!15170 = !DILocation(line: 397, column: 28, scope: !15134)
!15171 = !DILocation(line: 398, column: 50, scope: !15134)
!15172 = !DILocation(line: 398, column: 19, scope: !15134)
!15173 = !DILocation(line: 398, column: 28, scope: !15134)
!15174 = !DILocation(line: 399, column: 50, scope: !15134)
!15175 = !DILocation(line: 399, column: 19, scope: !15134)
!15176 = !DILocation(line: 399, column: 28, scope: !15134)
!15177 = !DILocation(line: 400, column: 50, scope: !15134)
!15178 = !DILocation(line: 400, column: 19, scope: !15134)
!15179 = !DILocation(line: 400, column: 28, scope: !15134)
!15180 = !DILocation(line: 401, column: 50, scope: !15134)
!15181 = !DILocation(line: 401, column: 19, scope: !15134)
!15182 = !DILocation(line: 401, column: 28, scope: !15134)
!15183 = !DILocation(line: 402, column: 50, scope: !15134)
!15184 = !DILocation(line: 402, column: 19, scope: !15134)
!15185 = !DILocation(line: 402, column: 28, scope: !15134)
!15186 = !DILocation(line: 403, column: 50, scope: !15134)
!15187 = !DILocation(line: 403, column: 19, scope: !15134)
!15188 = !DILocation(line: 403, column: 28, scope: !15134)
!15189 = !DILocation(line: 404, column: 50, scope: !15134)
!15190 = !DILocation(line: 404, column: 19, scope: !15134)
!15191 = !DILocation(line: 404, column: 28, scope: !15134)
!15192 = !DILocation(line: 405, column: 50, scope: !15134)
!15193 = !DILocation(line: 405, column: 19, scope: !15134)
!15194 = !DILocation(line: 405, column: 28, scope: !15134)
!15195 = !DILocation(line: 406, column: 50, scope: !15134)
!15196 = !DILocation(line: 406, column: 19, scope: !15134)
!15197 = !DILocation(line: 406, column: 28, scope: !15134)
!15198 = !DILocation(line: 408, column: 1, scope: !15134)
!15199 = distinct !DISubprogram(name: "mtk_psram_half_sleep_exit", scope: !2628, file: !2628, line: 410, type: !260, scopeLine: 411, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2627, retainedNodes: !262)
!15200 = !DILocation(line: 413, column: 29, scope: !15199)
!15201 = !DILocation(line: 413, column: 43, scope: !15199)
!15202 = !DILocation(line: 413, column: 51, scope: !15199)
!15203 = !DILocation(line: 413, column: 27, scope: !15199)
!15204 = !DILocation(line: 416, column: 19, scope: !15199)
!15205 = !DILocation(line: 416, column: 29, scope: !15199)
!15206 = !DILocation(line: 417, column: 5, scope: !15199)
!15207 = !DILocation(line: 417, column: 27, scope: !15199)
!15208 = !DILocation(line: 417, column: 93, scope: !15199)
!15209 = distinct !{!15209, !15206, !15210}
!15210 = !DILocation(line: 417, column: 98, scope: !15199)
!15211 = !DILocation(line: 418, column: 29, scope: !15199)
!15212 = !DILocation(line: 419, column: 5, scope: !15199)
!15213 = !DILocation(line: 419, column: 27, scope: !15199)
!15214 = !DILocation(line: 419, column: 93, scope: !15199)
!15215 = distinct !{!15215, !15212, !15216}
!15216 = !DILocation(line: 419, column: 98, scope: !15199)
!15217 = !DILocation(line: 421, column: 5, scope: !15199)
!15218 = !DILocation(line: 422, column: 5, scope: !15199)
!15219 = !DILocation(line: 422, column: 19, scope: !15199)
!15220 = !DILocation(line: 422, column: 28, scope: !15199)
!15221 = !DILocation(line: 423, column: 5, scope: !15199)
!15222 = !DILocation(line: 423, column: 28, scope: !15199)
!15223 = !DILocation(line: 423, column: 82, scope: !15199)
!15224 = distinct !{!15224, !15221, !15225}
!15225 = !DILocation(line: 423, column: 87, scope: !15199)
!15226 = !DILocation(line: 424, column: 28, scope: !15199)
!15227 = !DILocation(line: 425, column: 5, scope: !15199)
!15228 = !DILocation(line: 425, column: 28, scope: !15199)
!15229 = !DILocation(line: 425, column: 82, scope: !15199)
!15230 = distinct !{!15230, !15227, !15231}
!15231 = !DILocation(line: 425, column: 87, scope: !15199)
!15232 = !DILocation(line: 426, column: 28, scope: !15199)
!15233 = !DILocation(line: 428, column: 50, scope: !15199)
!15234 = !DILocation(line: 428, column: 19, scope: !15199)
!15235 = !DILocation(line: 428, column: 28, scope: !15199)
!15236 = !DILocation(line: 432, column: 1, scope: !15199)
!15237 = distinct !DISubprogram(name: "mtk_psram_half_sleep_enter", scope: !2628, file: !2628, line: 434, type: !260, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2627, retainedNodes: !262)
!15238 = !DILocation(line: 437, column: 5, scope: !15237)
!15239 = !DILocation(line: 440, column: 5, scope: !15237)
!15240 = !DILocation(line: 440, column: 27, scope: !15237)
!15241 = !DILocation(line: 440, column: 36, scope: !15237)
!15242 = !DILocation(line: 440, column: 76, scope: !15237)
!15243 = distinct !{!15243, !15239, !15244}
!15244 = !DILocation(line: 440, column: 84, scope: !15237)
!15245 = !DILocation(line: 441, column: 45, scope: !15237)
!15246 = !DILocation(line: 441, column: 54, scope: !15237)
!15247 = !DILocation(line: 441, column: 28, scope: !15237)
!15248 = !DILocation(line: 442, column: 19, scope: !15237)
!15249 = !DILocation(line: 442, column: 31, scope: !15237)
!15250 = !DILocation(line: 443, column: 5, scope: !15237)
!15251 = !DILocation(line: 443, column: 27, scope: !15237)
!15252 = !DILocation(line: 443, column: 39, scope: !15237)
!15253 = !DILocation(line: 443, column: 65, scope: !15237)
!15254 = distinct !{!15254, !15250, !15255}
!15255 = !DILocation(line: 443, column: 70, scope: !15237)
!15256 = !DILocation(line: 444, column: 19, scope: !15237)
!15257 = !DILocation(line: 444, column: 28, scope: !15237)
!15258 = !DILocation(line: 445, column: 5, scope: !15237)
!15259 = !DILocation(line: 445, column: 27, scope: !15237)
!15260 = !DILocation(line: 445, column: 91, scope: !15237)
!15261 = distinct !{!15261, !15258, !15262}
!15262 = !DILocation(line: 445, column: 96, scope: !15237)
!15263 = !DILocation(line: 447, column: 43, scope: !15237)
!15264 = !DILocation(line: 447, column: 51, scope: !15237)
!15265 = !DILocation(line: 447, column: 27, scope: !15237)
!15266 = !DILocation(line: 450, column: 1, scope: !15237)
!15267 = distinct !DISubprogram(name: "EMI_DynamicClockSwitch", scope: !2628, file: !2628, line: 452, type: !15268, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2627, retainedNodes: !15271)
!15268 = !DISubroutineType(types: !15269)
!15269 = !{!1343, !15270}
!15270 = !DIDerivedType(tag: DW_TAG_typedef, name: "emi_clock", file: !2631, line: 43, baseType: !2630)
!15271 = !{!15272, !15273}
!15272 = !DILocalVariable(name: "clock", arg: 1, scope: !15267, file: !2628, line: 452, type: !15270)
!15273 = !DILocalVariable(name: "delay", scope: !15267, file: !2628, line: 457, type: !237)
!15274 = !DILocation(line: 0, scope: !15267)
!15275 = !DILocation(line: 457, column: 5, scope: !15267)
!15276 = !DILocation(line: 457, column: 23, scope: !15267)
!15277 = !DILocation(line: 458, column: 9, scope: !15267)
!15278 = !DILocation(line: 465, column: 9, scope: !15279)
!15279 = distinct !DILexicalBlock(scope: !15280, file: !2628, line: 458, column: 39)
!15280 = distinct !DILexicalBlock(scope: !15267, file: !2628, line: 458, column: 9)
!15281 = !DILocation(line: 465, column: 23, scope: !15279)
!15282 = !DILocation(line: 465, column: 32, scope: !15279)
!15283 = !DILocation(line: 466, column: 32, scope: !15279)
!15284 = !DILocation(line: 467, column: 9, scope: !15279)
!15285 = !DILocation(line: 467, column: 32, scope: !15279)
!15286 = !DILocation(line: 467, column: 86, scope: !15279)
!15287 = distinct !{!15287, !15284, !15288}
!15288 = !DILocation(line: 467, column: 91, scope: !15279)
!15289 = !DILocation(line: 468, column: 32, scope: !15279)
!15290 = !DILocation(line: 469, column: 9, scope: !15279)
!15291 = !DILocation(line: 469, column: 32, scope: !15279)
!15292 = !DILocation(line: 469, column: 86, scope: !15279)
!15293 = distinct !{!15293, !15290, !15294}
!15294 = !DILocation(line: 469, column: 91, scope: !15279)
!15295 = !DILocation(line: 470, column: 32, scope: !15279)
!15296 = !DILocation(line: 472, column: 20, scope: !15297)
!15297 = distinct !DILexicalBlock(scope: !15279, file: !2628, line: 472, column: 9)
!15298 = !DILocation(line: 472, column: 25, scope: !15299)
!15299 = distinct !DILexicalBlock(scope: !15297, file: !2628, line: 472, column: 9)
!15300 = !DILocation(line: 472, column: 31, scope: !15299)
!15301 = !DILocation(line: 472, column: 9, scope: !15297)
!15302 = !DILocation(line: 472, column: 44, scope: !15299)
!15303 = distinct !{!15303, !15301, !15304}
!15304 = !DILocation(line: 472, column: 47, scope: !15297)
!15305 = !DILocation(line: 478, column: 9, scope: !15306)
!15306 = distinct !DILexicalBlock(scope: !15307, file: !2628, line: 477, column: 12)
!15307 = distinct !DILexicalBlock(scope: !15280, file: !2628, line: 475, column: 16)
!15308 = !DILocation(line: 483, column: 1, scope: !15267)
!15309 = distinct !DISubprogram(name: "emi_mask_master", scope: !2628, file: !2628, line: 487, type: !260, scopeLine: 488, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2627, retainedNodes: !262)
!15310 = !DILocation(line: 490, column: 30, scope: !15309)
!15311 = !DILocation(line: 490, column: 44, scope: !15309)
!15312 = !DILocation(line: 490, column: 53, scope: !15309)
!15313 = !DILocation(line: 490, column: 28, scope: !15309)
!15314 = !DILocation(line: 492, column: 1, scope: !15309)
!15315 = distinct !DISubprogram(name: "emi_unmask_master", scope: !2628, file: !2628, line: 494, type: !260, scopeLine: 495, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2627, retainedNodes: !262)
!15316 = !DILocation(line: 497, column: 30, scope: !15315)
!15317 = !DILocation(line: 497, column: 44, scope: !15315)
!15318 = !DILocation(line: 497, column: 53, scope: !15315)
!15319 = !DILocation(line: 497, column: 28, scope: !15315)
!15320 = !DILocation(line: 500, column: 1, scope: !15315)
!15321 = distinct !DISubprogram(name: "is_clk_use_lfosc", scope: !2796, file: !2796, line: 56, type: !382, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2795, retainedNodes: !262)
!15322 = !DILocation(line: 61, column: 5, scope: !15321)
!15323 = distinct !DISubprogram(name: "is_clk_use_mpll", scope: !2796, file: !2796, line: 65, type: !382, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2795, retainedNodes: !262)
!15324 = !DILocation(line: 70, column: 5, scope: !15323)
!15325 = distinct !DISubprogram(name: "cm_bus_clk_208m", scope: !2796, file: !2796, line: 74, type: !260, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2795, retainedNodes: !262)
!15326 = !DILocation(line: 79, column: 9, scope: !15327)
!15327 = distinct !DILexicalBlock(scope: !15328, file: !2796, line: 78, column: 12)
!15328 = distinct !DILexicalBlock(scope: !15325, file: !2796, line: 76, column: 9)
!15329 = !DILocation(line: 81, column: 1, scope: !15325)
!15330 = distinct !DISubprogram(name: "cm_bus_clk_104m", scope: !2796, file: !2796, line: 83, type: !260, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2795, retainedNodes: !262)
!15331 = !DILocation(line: 88, column: 9, scope: !15332)
!15332 = distinct !DILexicalBlock(scope: !15333, file: !2796, line: 87, column: 12)
!15333 = distinct !DILexicalBlock(scope: !15330, file: !2796, line: 85, column: 9)
!15334 = !DILocation(line: 90, column: 1, scope: !15330)
!15335 = distinct !DISubprogram(name: "cm_bus_clk_26m", scope: !2796, file: !2796, line: 92, type: !260, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2795, retainedNodes: !262)
!15336 = !DILocation(line: 97, column: 9, scope: !15337)
!15337 = distinct !DILexicalBlock(scope: !15338, file: !2796, line: 96, column: 12)
!15338 = distinct !DILexicalBlock(scope: !15335, file: !2796, line: 94, column: 9)
!15339 = !DILocation(line: 99, column: 1, scope: !15335)
!15340 = distinct !DISubprogram(name: "peri_clk_26m", scope: !2796, file: !2796, line: 101, type: !260, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2795, retainedNodes: !262)
!15341 = !DILocation(line: 106, column: 9, scope: !15342)
!15342 = distinct !DILexicalBlock(scope: !15343, file: !2796, line: 105, column: 12)
!15343 = distinct !DILexicalBlock(scope: !15340, file: !2796, line: 103, column: 9)
!15344 = !DILocation(line: 108, column: 1, scope: !15340)
!15345 = distinct !DISubprogram(name: "__io_putchar", scope: !3313, file: !3313, line: 54, type: !15346, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3312, retainedNodes: !15348)
!15346 = !DISubroutineType(types: !15347)
!15347 = !{!7, !7}
!15348 = !{!15349}
!15349 = !DILocalVariable(name: "ch", arg: 1, scope: !15345, file: !3313, line: 54, type: !7)
!15350 = !DILocation(line: 0, scope: !15345)
!15351 = !DILocation(line: 61, column: 35, scope: !15345)
!15352 = !DILocation(line: 61, column: 5, scope: !15345)
!15353 = !DILocation(line: 62, column: 5, scope: !15345)
!15354 = distinct !DISubprogram(name: "main", scope: !3313, file: !3313, line: 159, type: !2513, scopeLine: 160, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3312, retainedNodes: !262)
!15355 = !DILocation(line: 162, column: 5, scope: !15354)
!15356 = !DILocation(line: 164, column: 5, scope: !15354)
!15357 = !DILocation(line: 167, column: 5, scope: !15354)
!15358 = !DILocation(line: 319, column: 3, scope: !15359, inlinedAt: !15360)
!15359 = distinct !DISubprogram(name: "__enable_irq", scope: !8416, file: !8416, line: 317, type: !260, scopeLine: 318, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3312, retainedNodes: !262)
!15360 = distinct !DILocation(line: 170, column: 5, scope: !15354)
!15361 = !{i64 646688}
!15362 = !DILocation(line: 496, column: 3, scope: !15363, inlinedAt: !15364)
!15363 = distinct !DISubprogram(name: "__enable_fault_irq", scope: !8416, file: !8416, line: 494, type: !260, scopeLine: 495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3312, retainedNodes: !262)
!15364 = distinct !DILocation(line: 171, column: 5, scope: !15354)
!15365 = !{i64 650963}
!15366 = !DILocation(line: 173, column: 5, scope: !15354)
!15367 = !DILocation(line: 174, column: 5, scope: !15354)
!15368 = !DILocation(line: 175, column: 5, scope: !15354)
!15369 = !DILocation(line: 177, column: 5, scope: !15354)
!15370 = !DILocation(line: 179, column: 5, scope: !15354)
!15371 = distinct !{!15371, !15370, !15372}
!15372 = !DILocation(line: 179, column: 14, scope: !15354)
!15373 = distinct !DISubprogram(name: "SystemClock_Config", scope: !3313, file: !3313, line: 92, type: !260, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3312, retainedNodes: !262)
!15374 = !DILocation(line: 94, column: 5, scope: !15373)
!15375 = !DILocation(line: 95, column: 1, scope: !15373)
!15376 = distinct !DISubprogram(name: "prvSetupHardware", scope: !3313, file: !3313, line: 102, type: !260, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3312, retainedNodes: !262)
!15377 = !DILocation(line: 105, column: 5, scope: !15376)
!15378 = !DILocation(line: 106, column: 5, scope: !15376)
!15379 = !DILocation(line: 107, column: 5, scope: !15376)
!15380 = !DILocation(line: 108, column: 1, scope: !15376)
!15381 = distinct !DISubprogram(name: "hal_powerkey_example", scope: !3313, file: !3313, line: 139, type: !260, scopeLine: 140, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3312, retainedNodes: !15382)
!15382 = !{!15383, !15384}
!15383 = !DILocalVariable(name: "ret_bool", scope: !15381, file: !3313, line: 141, type: !263)
!15384 = !DILocalVariable(name: "ret_state", scope: !15381, file: !3313, line: 142, type: !4315)
!15385 = !DILocation(line: 146, column: 16, scope: !15381)
!15386 = !DILocation(line: 0, scope: !15381)
!15387 = !DILocation(line: 147, column: 9, scope: !15381)
!15388 = !DILocation(line: 148, column: 9, scope: !15389)
!15389 = distinct !DILexicalBlock(scope: !15390, file: !3313, line: 147, column: 28)
!15390 = distinct !DILexicalBlock(scope: !15381, file: !3313, line: 147, column: 9)
!15391 = !DILocation(line: 149, column: 9, scope: !15389)
!15392 = !DILocation(line: 152, column: 17, scope: !15381)
!15393 = !DILocation(line: 153, column: 19, scope: !15394)
!15394 = distinct !DILexicalBlock(scope: !15381, file: !3313, line: 153, column: 9)
!15395 = !DILocation(line: 153, column: 9, scope: !15381)
!15396 = !DILocation(line: 154, column: 9, scope: !15397)
!15397 = distinct !DILexicalBlock(scope: !15394, file: !3313, line: 153, column: 44)
!15398 = !DILocation(line: 155, column: 5, scope: !15397)
!15399 = !DILocation(line: 156, column: 1, scope: !15381)
!15400 = distinct !DISubprogram(name: "keypad_user_powerkey_handler", scope: !3313, file: !3313, line: 115, type: !260, scopeLine: 116, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3312, retainedNodes: !15401)
!15401 = !{!15402, !15403, !15410}
!15402 = !DILocalVariable(name: "ret", scope: !15400, file: !3313, line: 117, type: !4315)
!15403 = !DILocalVariable(name: "powekey_event", scope: !15400, file: !3313, line: 118, type: !15404)
!15404 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_keypad_powerkey_event_t", file: !313, line: 365, baseType: !15405)
!15405 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !313, line: 361, size: 96, elements: !15406)
!15406 = !{!15407, !15408, !15409}
!15407 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !15405, file: !313, line: 362, baseType: !395, size: 32)
!15408 = !DIDerivedType(tag: DW_TAG_member, name: "key_data", scope: !15405, file: !313, line: 363, baseType: !61, size: 32, offset: 32)
!15409 = !DIDerivedType(tag: DW_TAG_member, name: "time_stamp", scope: !15405, file: !313, line: 364, baseType: !61, size: 32, offset: 64)
!15410 = !DILocalVariable(name: "string", scope: !15400, file: !3313, line: 119, type: !15411)
!15411 = !DICompositeType(tag: DW_TAG_array_type, baseType: !799, size: 160, elements: !1308)
!15412 = !DILocation(line: 118, column: 5, scope: !15400)
!15413 = !DILocation(line: 118, column: 33, scope: !15400)
!15414 = !DILocation(line: 119, column: 11, scope: !15400)
!15415 = !DILocation(line: 122, column: 15, scope: !15416)
!15416 = distinct !DILexicalBlock(scope: !15400, file: !3313, line: 121, column: 15)
!15417 = !DILocation(line: 0, scope: !15400)
!15418 = !DILocation(line: 125, column: 17, scope: !15419)
!15419 = distinct !DILexicalBlock(scope: !15416, file: !3313, line: 125, column: 13)
!15420 = !DILocation(line: 125, column: 13, scope: !15416)
!15421 = !DILocation(line: 126, column: 13, scope: !15422)
!15422 = distinct !DILexicalBlock(scope: !15419, file: !3313, line: 125, column: 45)
!15423 = !DILocation(line: 132, column: 1, scope: !15400)
!15424 = !DILocation(line: 130, column: 87, scope: !15416)
!15425 = !DILocation(line: 130, column: 126, scope: !15416)
!15426 = !DILocation(line: 130, column: 105, scope: !15416)
!15427 = !DILocation(line: 130, column: 9, scope: !15416)
!15428 = distinct !{!15428, !15429, !15430}
!15429 = !DILocation(line: 121, column: 5, scope: !15400)
!15430 = !DILocation(line: 131, column: 5, scope: !15400)
!15431 = distinct !DISubprogram(name: "log_uart_init", scope: !3313, file: !3313, line: 70, type: !260, scopeLine: 71, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3312, retainedNodes: !15432)
!15432 = !{!15433}
!15433 = !DILocalVariable(name: "uart_config", scope: !15431, file: !3313, line: 72, type: !15434)
!15434 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_config_t", file: !720, line: 378, baseType: !15435)
!15435 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !720, line: 373, size: 128, elements: !15436)
!15436 = !{!15437, !15438, !15439, !15440}
!15437 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !15435, file: !720, line: 374, baseType: !838, size: 32)
!15438 = !DIDerivedType(tag: DW_TAG_member, name: "word_length", scope: !15435, file: !720, line: 375, baseType: !840, size: 32, offset: 32)
!15439 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bit", scope: !15435, file: !720, line: 376, baseType: !842, size: 32, offset: 64)
!15440 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !15435, file: !720, line: 377, baseType: !844, size: 32, offset: 96)
!15441 = !DILocation(line: 72, column: 5, scope: !15431)
!15442 = !DILocation(line: 72, column: 23, scope: !15431)
!15443 = !DILocation(line: 74, column: 5, scope: !15431)
!15444 = !DILocation(line: 75, column: 5, scope: !15431)
!15445 = !DILocation(line: 76, column: 5, scope: !15431)
!15446 = !DILocation(line: 77, column: 5, scope: !15431)
!15447 = !DILocation(line: 81, column: 17, scope: !15431)
!15448 = !DILocation(line: 81, column: 26, scope: !15431)
!15449 = !DILocation(line: 82, column: 17, scope: !15431)
!15450 = !DILocation(line: 82, column: 29, scope: !15431)
!15451 = !DILocation(line: 83, column: 17, scope: !15431)
!15452 = !DILocation(line: 83, column: 26, scope: !15431)
!15453 = !DILocation(line: 84, column: 17, scope: !15431)
!15454 = !DILocation(line: 84, column: 24, scope: !15431)
!15455 = !DILocation(line: 85, column: 5, scope: !15431)
!15456 = !DILocation(line: 86, column: 1, scope: !15431)
!15457 = distinct !DISubprogram(name: "_close", scope: !2808, file: !2808, line: 5, type: !15346, scopeLine: 6, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2997, retainedNodes: !15458)
!15458 = !{!15459}
!15459 = !DILocalVariable(name: "file", arg: 1, scope: !15457, file: !2808, line: 5, type: !7)
!15460 = !DILocation(line: 0, scope: !15457)
!15461 = !DILocation(line: 7, column: 5, scope: !15457)
!15462 = distinct !DISubprogram(name: "_fstat", scope: !2808, file: !2808, line: 10, type: !15463, scopeLine: 11, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2997, retainedNodes: !15511)
!15463 = !DISubroutineType(types: !15464)
!15464 = !{!7, !7, !15465}
!15465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15466, size: 32)
!15466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !15467, line: 27, size: 704, elements: !15468)
!15467 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/stat.h", directory: "/home/mjshen/RTOSExploration")
!15468 = !{!15469, !15472, !15475, !15478, !15481, !15484, !15487, !15488, !15491, !15501, !15502, !15503, !15506, !15509}
!15469 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !15466, file: !15467, line: 29, baseType: !15470, size: 16)
!15470 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !2812, line: 161, baseType: !15471)
!15471 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !2850, line: 56, baseType: !1833)
!15472 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !15466, file: !15467, line: 30, baseType: !15473, size: 16, offset: 16)
!15473 = !DIDerivedType(tag: DW_TAG_typedef, name: "ino_t", file: !2812, line: 139, baseType: !15474)
!15474 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !2850, line: 75, baseType: !1043)
!15475 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !15466, file: !15467, line: 31, baseType: !15476, size: 32, offset: 32)
!15476 = !DIDerivedType(tag: DW_TAG_typedef, name: "mode_t", file: !2812, line: 189, baseType: !15477)
!15477 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !2850, line: 90, baseType: !63)
!15478 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !15466, file: !15467, line: 32, baseType: !15479, size: 16, offset: 64)
!15479 = !DIDerivedType(tag: DW_TAG_typedef, name: "nlink_t", file: !2812, line: 194, baseType: !15480)
!15480 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !2850, line: 209, baseType: !1043)
!15481 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !15466, file: !15467, line: 33, baseType: !15482, size: 16, offset: 80)
!15482 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !2812, line: 165, baseType: !15483)
!15483 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !2850, line: 60, baseType: !1043)
!15484 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !15466, file: !15467, line: 34, baseType: !15485, size: 16, offset: 96)
!15485 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !2812, line: 169, baseType: !15486)
!15486 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !2850, line: 63, baseType: !1043)
!15487 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !15466, file: !15467, line: 35, baseType: !15470, size: 16, offset: 112)
!15488 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !15466, file: !15467, line: 36, baseType: !15489, size: 32, offset: 128)
!15489 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !2812, line: 157, baseType: !15490)
!15490 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !2850, line: 102, baseType: !2866)
!15491 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !15466, file: !15467, line: 42, baseType: !15492, size: 128, offset: 192)
!15492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !15493, line: 47, size: 128, elements: !15494)
!15493 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_timespec.h", directory: "/home/mjshen/RTOSExploration")
!15494 = !{!15495, !15500}
!15495 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !15492, file: !15493, line: 48, baseType: !15496, size: 64)
!15496 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !15497, line: 42, baseType: !15498)
!15497 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_timeval.h", directory: "/home/mjshen/RTOSExploration")
!15498 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int_least64_t", file: !64, line: 200, baseType: !15499)
!15499 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!15500 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !15492, file: !15493, line: 49, baseType: !2851, size: 32, offset: 64)
!15501 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !15466, file: !15467, line: 43, baseType: !15492, size: 128, offset: 320)
!15502 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !15466, file: !15467, line: 44, baseType: !15492, size: 128, offset: 448)
!15503 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !15466, file: !15467, line: 45, baseType: !15504, size: 32, offset: 576)
!15504 = !DIDerivedType(tag: DW_TAG_typedef, name: "blksize_t", file: !2812, line: 102, baseType: !15505)
!15505 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !2850, line: 34, baseType: !2851)
!15506 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !15466, file: !15467, line: 46, baseType: !15507, size: 32, offset: 608)
!15507 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !2812, line: 97, baseType: !15508)
!15508 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !2850, line: 30, baseType: !2851)
!15509 = !DIDerivedType(tag: DW_TAG_member, name: "st_spare4", scope: !15466, file: !15467, line: 48, baseType: !15510, size: 64, offset: 640)
!15510 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2851, size: 64, elements: !531)
!15511 = !{!15512, !15513}
!15512 = !DILocalVariable(name: "file", arg: 1, scope: !15462, file: !2808, line: 10, type: !7)
!15513 = !DILocalVariable(name: "st", arg: 2, scope: !15462, file: !2808, line: 10, type: !15465)
!15514 = !DILocation(line: 0, scope: !15462)
!15515 = !DILocation(line: 12, column: 5, scope: !15462)
!15516 = distinct !DISubprogram(name: "_isatty", scope: !2808, file: !2808, line: 15, type: !15346, scopeLine: 16, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2997, retainedNodes: !15517)
!15517 = !{!15518}
!15518 = !DILocalVariable(name: "file", arg: 1, scope: !15516, file: !2808, line: 15, type: !7)
!15519 = !DILocation(line: 0, scope: !15516)
!15520 = !DILocation(line: 17, column: 5, scope: !15516)
!15521 = distinct !DISubprogram(name: "_lseek", scope: !2808, file: !2808, line: 20, type: !15522, scopeLine: 21, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2997, retainedNodes: !15524)
!15522 = !DISubroutineType(types: !15523)
!15523 = !{!7, !7, !7, !7}
!15524 = !{!15525, !15526, !15527}
!15525 = !DILocalVariable(name: "file", arg: 1, scope: !15521, file: !2808, line: 20, type: !7)
!15526 = !DILocalVariable(name: "ptr", arg: 2, scope: !15521, file: !2808, line: 20, type: !7)
!15527 = !DILocalVariable(name: "dir", arg: 3, scope: !15521, file: !2808, line: 20, type: !7)
!15528 = !DILocation(line: 0, scope: !15521)
!15529 = !DILocation(line: 22, column: 5, scope: !15521)
!15530 = distinct !DISubprogram(name: "_open", scope: !2808, file: !2808, line: 25, type: !15531, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2997, retainedNodes: !15533)
!15531 = !DISubroutineType(types: !15532)
!15532 = !{!7, !80, !7, !7}
!15533 = !{!15534, !15535, !15536}
!15534 = !DILocalVariable(name: "name", arg: 1, scope: !15530, file: !2808, line: 25, type: !80)
!15535 = !DILocalVariable(name: "flags", arg: 2, scope: !15530, file: !2808, line: 25, type: !7)
!15536 = !DILocalVariable(name: "mode", arg: 3, scope: !15530, file: !2808, line: 25, type: !7)
!15537 = !DILocation(line: 0, scope: !15530)
!15538 = !DILocation(line: 27, column: 5, scope: !15530)
!15539 = distinct !DISubprogram(name: "_read", scope: !2808, file: !2808, line: 30, type: !15540, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2997, retainedNodes: !15542)
!15540 = !DISubroutineType(types: !15541)
!15541 = !{!7, !7, !799, !7}
!15542 = !{!15543, !15544, !15545}
!15543 = !DILocalVariable(name: "file", arg: 1, scope: !15539, file: !2808, line: 30, type: !7)
!15544 = !DILocalVariable(name: "ptr", arg: 2, scope: !15539, file: !2808, line: 30, type: !799)
!15545 = !DILocalVariable(name: "len", arg: 3, scope: !15539, file: !2808, line: 30, type: !7)
!15546 = !DILocation(line: 0, scope: !15539)
!15547 = !DILocation(line: 32, column: 5, scope: !15539)
!15548 = distinct !DISubprogram(name: "_getpid", scope: !2808, file: !2808, line: 48, type: !2513, scopeLine: 49, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2997, retainedNodes: !262)
!15549 = !DILocation(line: 50, column: 5, scope: !15548)
!15550 = distinct !DISubprogram(name: "_kill", scope: !2808, file: !2808, line: 56, type: !15551, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2997, retainedNodes: !15553)
!15551 = !DISubroutineType(types: !15552)
!15552 = !{!7, !7, !7}
!15553 = !{!15554, !15555}
!15554 = !DILocalVariable(name: "pid", arg: 1, scope: !15550, file: !2808, line: 56, type: !7)
!15555 = !DILocalVariable(name: "sig", arg: 2, scope: !15550, file: !2808, line: 56, type: !7)
!15556 = !DILocation(line: 0, scope: !15550)
!15557 = !DILocation(line: 58, column: 5, scope: !15550)
!15558 = distinct !DISubprogram(name: "_exit", scope: !2808, file: !2808, line: 61, type: !15346, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2997, retainedNodes: !15559)
!15559 = !{!15560}
!15560 = !DILocalVariable(name: "val", arg: 1, scope: !15558, file: !2808, line: 61, type: !7)
!15561 = !DILocation(line: 0, scope: !15558)
!15562 = !DILocation(line: 63, column: 5, scope: !15558)
!15563 = !DILocation(line: 0, scope: !2807)
!15564 = !DILocation(line: 73, column: 5, scope: !2807)
!15565 = !{i64 1127}
!15566 = !DILocation(line: 75, column: 14, scope: !15567)
!15567 = distinct !DILexicalBlock(scope: !2807, file: !2808, line: 75, column: 9)
!15568 = !DILocation(line: 75, column: 11, scope: !15567)
!15569 = !DILocation(line: 75, column: 9, scope: !2807)
!15570 = !DILocation(line: 81, column: 32, scope: !15571)
!15571 = distinct !DILexicalBlock(scope: !2807, file: !2808, line: 81, column: 9)
!15572 = !DILocation(line: 81, column: 15, scope: !15571)
!15573 = !DILocation(line: 92, column: 1, scope: !2807)
!15574 = !DILocation(line: 81, column: 9, scope: !2807)
!15575 = distinct !DISubprogram(name: "_write", scope: !2808, file: !2808, line: 94, type: !15540, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2997, retainedNodes: !15576)
!15576 = !{!15577, !15578, !15579, !15580}
!15577 = !DILocalVariable(name: "file", arg: 1, scope: !15575, file: !2808, line: 94, type: !7)
!15578 = !DILocalVariable(name: "ptr", arg: 2, scope: !15575, file: !2808, line: 94, type: !799)
!15579 = !DILocalVariable(name: "len", arg: 3, scope: !15575, file: !2808, line: 94, type: !7)
!15580 = !DILocalVariable(name: "DataIdx", scope: !15575, file: !2808, line: 96, type: !7)
!15581 = !DILocation(line: 0, scope: !15575)
!15582 = !DILocation(line: 98, column: 31, scope: !15583)
!15583 = distinct !DILexicalBlock(scope: !15584, file: !2808, line: 98, column: 5)
!15584 = distinct !DILexicalBlock(scope: !15575, file: !2808, line: 98, column: 5)
!15585 = !DILocation(line: 98, column: 5, scope: !15584)
!15586 = !DILocation(line: 99, column: 26, scope: !15587)
!15587 = distinct !DILexicalBlock(scope: !15583, file: !2808, line: 98, column: 49)
!15588 = !DILocation(line: 99, column: 22, scope: !15587)
!15589 = !DILocation(line: 99, column: 9, scope: !15587)
!15590 = !DILocation(line: 98, column: 45, scope: !15583)
!15591 = distinct !{!15591, !15585, !15592}
!15592 = !DILocation(line: 100, column: 5, scope: !15584)
!15593 = !DILocation(line: 101, column: 5, scope: !15575)
!15594 = distinct !DISubprogram(name: "SysTick_Set", scope: !3009, file: !3009, line: 62, type: !3922, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3008, retainedNodes: !15595)
!15595 = !{!15596, !15597}
!15596 = !DILocalVariable(name: "ticks", arg: 1, scope: !15594, file: !3009, line: 62, type: !61)
!15597 = !DILocalVariable(name: "val", scope: !15594, file: !3009, line: 64, type: !61)
!15598 = !DILocation(line: 0, scope: !15594)
!15599 = !DILocation(line: 67, column: 16, scope: !15600)
!15600 = distinct !DILexicalBlock(scope: !15594, file: !3009, line: 67, column: 9)
!15601 = !DILocation(line: 67, column: 21, scope: !15600)
!15602 = !DILocation(line: 67, column: 9, scope: !15594)
!15603 = !DILocation(line: 72, column: 20, scope: !15594)
!15604 = !DILocation(line: 75, column: 19, scope: !15594)
!15605 = !DILocation(line: 79, column: 20, scope: !15594)
!15606 = !DILocation(line: 80, column: 20, scope: !15594)
!15607 = !DILocation(line: 83, column: 19, scope: !15594)
!15608 = !DILocation(line: 85, column: 5, scope: !15594)
!15609 = !DILocation(line: 86, column: 1, scope: !15594)
!15610 = distinct !DISubprogram(name: "SysInitStatus_Set", scope: !3009, file: !3009, line: 95, type: !260, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3008, retainedNodes: !262)
!15611 = !DILocation(line: 97, column: 28, scope: !15610)
!15612 = !DILocation(line: 98, column: 1, scope: !15610)
!15613 = distinct !DISubprogram(name: "SysInitStatus_Query", scope: !3009, file: !3009, line: 107, type: !4174, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3008, retainedNodes: !262)
!15614 = !DILocation(line: 109, column: 12, scope: !15613)
!15615 = !DILocation(line: 109, column: 5, scope: !15613)
!15616 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !3009, file: !3009, line: 119, type: !260, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3008, retainedNodes: !15617)
!15617 = !{!15618}
!15618 = !DILocalVariable(name: "cm_mux_sel", scope: !15616, file: !3009, line: 121, type: !74)
!15619 = !DILocation(line: 121, column: 38, scope: !15616)
!15620 = !DILocation(line: 121, column: 26, scope: !15616)
!15621 = !DILocation(line: 0, scope: !15616)
!15622 = !DILocation(line: 123, column: 5, scope: !15616)
!15623 = !DILocation(line: 132, column: 13, scope: !15624)
!15624 = distinct !DILexicalBlock(scope: !15616, file: !3009, line: 123, column: 25)
!15625 = !DILocation(line: 140, column: 13, scope: !15624)
!15626 = !DILocation(line: 0, scope: !15624)
!15627 = !DILocation(line: 146, column: 26, scope: !15628)
!15628 = distinct !DILexicalBlock(scope: !15616, file: !3009, line: 146, column: 9)
!15629 = !DILocation(line: 146, column: 50, scope: !15628)
!15630 = !DILocation(line: 146, column: 41, scope: !15628)
!15631 = !DILocation(line: 148, column: 25, scope: !15632)
!15632 = distinct !DILexicalBlock(scope: !15628, file: !3009, line: 147, column: 52)
!15633 = !DILocation(line: 149, column: 5, scope: !15632)
!15634 = !DILocation(line: 150, column: 1, scope: !15616)
!15635 = distinct !DISubprogram(name: "SystemInit", scope: !3009, file: !3009, line: 158, type: !260, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3008, retainedNodes: !262)
!15636 = !DILocation(line: 162, column: 16, scope: !15635)
!15637 = !DILocation(line: 166, column: 16, scope: !15635)
!15638 = !DILocation(line: 169, column: 16, scope: !15635)
!15639 = !DILocation(line: 172, column: 1, scope: !15635)
!15640 = distinct !DISubprogram(name: "CachePreInit", scope: !3009, file: !3009, line: 180, type: !260, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3008, retainedNodes: !262)
!15641 = !DILocation(line: 183, column: 22, scope: !15640)
!15642 = !DILocation(line: 186, column: 21, scope: !15640)
!15643 = !DILocation(line: 189, column: 21, scope: !15640)
!15644 = !DILocation(line: 192, column: 29, scope: !15640)
!15645 = !DILocation(line: 193, column: 33, scope: !15640)
!15646 = !DILocation(line: 195, column: 28, scope: !15640)
!15647 = !DILocation(line: 200, column: 30, scope: !15640)
!15648 = !DILocation(line: 214, column: 1, scope: !15640)
!15649 = distinct !DISubprogram(name: "keypad_custom_normal_init", scope: !3126, file: !3126, line: 65, type: !382, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3125, retainedNodes: !15650)
!15650 = !{!15651, !15652}
!15651 = !DILocalVariable(name: "ret", scope: !15649, file: !3126, line: 68, type: !4315)
!15652 = !DILocalVariable(name: "keypad_config", scope: !15649, file: !3126, line: 69, type: !15653)
!15653 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_keypad_config_t", file: !313, line: 341, baseType: !15654)
!15654 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !313, line: 335, size: 160, elements: !15655)
!15655 = !{!15656, !15657, !15663, !15664, !15665}
!15656 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !15654, file: !313, line: 336, baseType: !3145, size: 32)
!15657 = !DIDerivedType(tag: DW_TAG_member, name: "key_map", scope: !15654, file: !313, line: 337, baseType: !15658, size: 16, offset: 32)
!15658 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_keypad_column_row_t", file: !313, line: 331, baseType: !15659)
!15659 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !313, line: 328, size: 16, elements: !15660)
!15660 = !{!15661, !15662}
!15661 = !DIDerivedType(tag: DW_TAG_member, name: "column_bitmap", scope: !15659, file: !313, line: 329, baseType: !74, size: 8)
!15662 = !DIDerivedType(tag: DW_TAG_member, name: "row_bitmap", scope: !15659, file: !313, line: 330, baseType: !74, size: 8, offset: 8)
!15663 = !DIDerivedType(tag: DW_TAG_member, name: "debounce", scope: !15654, file: !313, line: 338, baseType: !61, size: 32, offset: 64)
!15664 = !DIDerivedType(tag: DW_TAG_member, name: "repeat_time", scope: !15654, file: !313, line: 339, baseType: !61, size: 32, offset: 96)
!15665 = !DIDerivedType(tag: DW_TAG_member, name: "longpress_time", scope: !15654, file: !313, line: 340, baseType: !61, size: 32, offset: 128)
!15666 = !DILocation(line: 69, column: 5, scope: !15649)
!15667 = !DILocation(line: 69, column: 25, scope: !15649)
!15668 = !DILocation(line: 71, column: 19, scope: !15649)
!15669 = !DILocation(line: 71, column: 41, scope: !15649)
!15670 = !DILocation(line: 72, column: 27, scope: !15649)
!15671 = !DILocation(line: 72, column: 41, scope: !15649)
!15672 = !DILocation(line: 73, column: 27, scope: !15649)
!15673 = !DILocation(line: 73, column: 41, scope: !15649)
!15674 = !DILocation(line: 74, column: 19, scope: !15649)
!15675 = !DILocation(line: 74, column: 41, scope: !15649)
!15676 = !DILocation(line: 75, column: 19, scope: !15649)
!15677 = !DILocation(line: 75, column: 41, scope: !15649)
!15678 = !DILocation(line: 76, column: 19, scope: !15649)
!15679 = !DILocation(line: 76, column: 41, scope: !15649)
!15680 = !DILocation(line: 78, column: 11, scope: !15649)
!15681 = !DILocation(line: 0, scope: !15649)
!15682 = !DILocation(line: 79, column: 13, scope: !15683)
!15683 = distinct !DILexicalBlock(scope: !15649, file: !3126, line: 79, column: 9)
!15684 = !DILocation(line: 79, column: 9, scope: !15649)
!15685 = !DILocation(line: 80, column: 9, scope: !15686)
!15686 = distinct !DILexicalBlock(scope: !15683, file: !3126, line: 79, column: 38)
!15687 = !DILocation(line: 81, column: 9, scope: !15686)
!15688 = !DILocation(line: 85, column: 1, scope: !15649)
!15689 = distinct !DISubprogram(name: "keypad_custom_powerkey_init", scope: !3126, file: !3126, line: 88, type: !382, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3125, retainedNodes: !15690)
!15690 = !{!15691, !15692}
!15691 = !DILocalVariable(name: "ret", scope: !15689, file: !3126, line: 90, type: !4315)
!15692 = !DILocalVariable(name: "powerkey_data", scope: !15689, file: !3126, line: 91, type: !61)
!15693 = !DILocation(line: 0, scope: !15689)
!15694 = !DILocation(line: 96, column: 38, scope: !15689)
!15695 = !DILocation(line: 97, column: 38, scope: !15689)
!15696 = !DILocation(line: 101, column: 12, scope: !15689)
!15697 = !DILocation(line: 103, column: 13, scope: !15698)
!15698 = distinct !DILexicalBlock(scope: !15689, file: !3126, line: 103, column: 9)
!15699 = !DILocation(line: 103, column: 9, scope: !15689)
!15700 = !DILocation(line: 104, column: 9, scope: !15701)
!15701 = distinct !DILexicalBlock(scope: !15698, file: !3126, line: 103, column: 38)
!15702 = !DILocation(line: 105, column: 9, scope: !15701)
!15703 = !DILocation(line: 111, column: 1, scope: !15689)
!15704 = distinct !DISubprogram(name: "keypad_custom_init", scope: !3126, file: !3126, line: 114, type: !382, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3125, retainedNodes: !262)
!15705 = !DILocation(line: 116, column: 9, scope: !15706)
!15706 = distinct !DILexicalBlock(scope: !15704, file: !3126, line: 116, column: 9)
!15707 = !DILocation(line: 116, column: 9, scope: !15704)
!15708 = !DILocation(line: 121, column: 9, scope: !15709)
!15709 = distinct !DILexicalBlock(scope: !15704, file: !3126, line: 121, column: 9)
!15710 = !DILocation(line: 0, scope: !15704)
!15711 = !DILocation(line: 127, column: 1, scope: !15704)
!15712 = distinct !DISubprogram(name: "keypad_custom_deinit", scope: !3126, file: !3126, line: 130, type: !382, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3125, retainedNodes: !262)
!15713 = !DILocation(line: 132, column: 9, scope: !15714)
!15714 = distinct !DILexicalBlock(scope: !15712, file: !3126, line: 132, column: 9)
!15715 = !DILocation(line: 132, column: 29, scope: !15714)
!15716 = !DILocation(line: 132, column: 9, scope: !15712)
!15717 = !DILocation(line: 137, column: 9, scope: !15718)
!15718 = distinct !DILexicalBlock(scope: !15712, file: !3126, line: 137, column: 9)
!15719 = !DILocation(line: 137, column: 38, scope: !15718)
!15720 = !DILocation(line: 0, scope: !15712)
!15721 = !DILocation(line: 143, column: 1, scope: !15712)
!15722 = distinct !DISubprogram(name: "keypad_custom_set_event_time", scope: !3126, file: !3126, line: 145, type: !15723, scopeLine: 146, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3125, retainedNodes: !15732)
!15723 = !DISubroutineType(types: !15724)
!15724 = !{!263, !15725}
!15725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15726, size: 32)
!15726 = !DIDerivedType(tag: DW_TAG_typedef, name: "keypad_custom_event_time_t", file: !15727, line: 49, baseType: !15728)
!15727 = !DIFile(filename: "../../../../../driver/board/mt25x3_hdk/keypad/inc/keypad_custom.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/powerkey/GCC")
!15728 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !15727, line: 46, size: 64, elements: !15729)
!15729 = !{!15730, !15731}
!15730 = !DIDerivedType(tag: DW_TAG_member, name: "longpress_time", scope: !15728, file: !15727, line: 47, baseType: !61, size: 32)
!15731 = !DIDerivedType(tag: DW_TAG_member, name: "repet_time", scope: !15728, file: !15727, line: 48, baseType: !61, size: 32, offset: 32)
!15732 = !{!15733}
!15733 = !DILocalVariable(name: "event_time", arg: 1, scope: !15722, file: !3126, line: 145, type: !15725)
!15734 = !DILocation(line: 0, scope: !15722)
!15735 = !DILocation(line: 147, column: 20, scope: !15736)
!15736 = distinct !DILexicalBlock(scope: !15722, file: !3126, line: 147, column: 9)
!15737 = !DILocation(line: 147, column: 9, scope: !15722)
!15738 = !DILocation(line: 151, column: 51, scope: !15722)
!15739 = !DILocation(line: 151, column: 37, scope: !15722)
!15740 = !DILocation(line: 152, column: 51, scope: !15722)
!15741 = !DILocation(line: 152, column: 37, scope: !15722)
!15742 = !DILocation(line: 155, column: 51, scope: !15722)
!15743 = !DILocation(line: 155, column: 37, scope: !15722)
!15744 = !DILocation(line: 156, column: 51, scope: !15722)
!15745 = !DILocation(line: 156, column: 37, scope: !15722)
!15746 = !DILocation(line: 158, column: 5, scope: !15722)
!15747 = !DILocation(line: 159, column: 1, scope: !15722)
!15748 = distinct !DISubprogram(name: "keypad_custom_translate_keydata", scope: !3126, file: !3126, line: 162, type: !15749, scopeLine: 163, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3125, retainedNodes: !15751)
!15749 = !DISubroutineType(types: !15750)
!15750 = !{!74, !74}
!15751 = !{!15752}
!15752 = !DILocalVariable(name: "key_position", arg: 1, scope: !15748, file: !3126, line: 162, type: !74)
!15753 = !DILocation(line: 0, scope: !15748)
!15754 = !DILocation(line: 164, column: 13, scope: !15748)
!15755 = !DILocation(line: 164, column: 5, scope: !15748)
