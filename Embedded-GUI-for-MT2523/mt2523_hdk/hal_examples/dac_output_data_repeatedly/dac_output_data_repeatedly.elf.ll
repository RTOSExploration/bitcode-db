; ModuleID = './build/dac_output_data_repeatedly.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabihf"

%struct.GPT_REGISTER_T = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.GPT_REGISTER_GLOABL_T = type { i32, i32, i32 }
%struct.gpt_context_t = type { i32, %struct.gpt_callback_context_t, i8, i8 }
%struct.gpt_callback_context_t = type { void (i8*)*, i8* }
%struct.gpt_sw_context_t = type { [32 x %struct.gpt_sw_timer_t], i32, i32, i32, i32, i8, i8, i8 }
%struct.gpt_sw_timer_t = type { %struct.gpt_callback_context_t, i32, i8, i8 }
%struct.GPIO_REGISTER_T = type { [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIN_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [4 x %struct.GPIO_DIR_REGISTER_T], [192 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [2 x %struct.GPIO_DIR_REGISTER_T], [192 x i8], [7 x %struct.GPIO_DIR_REGISTER_T], [144 x i8], [4 x %struct.GPIO_DIR_REGISTER_T], [192 x i8], [6 x %struct.GPIO_DIN_REGISTER_T] }
%struct.GPIO_DIN_REGISTER_T = type { i32, [12 x i8] }
%struct.GPIO_DIR_REGISTER_T = type { i32, i32, i32, [4 x i8] }
%struct.uart_callback_t = type { void (i32, i8*)*, i8* }
%struct.hal_uart_dma_config_t = type { i8*, i32, i32, i8*, i32, i32, i32 }
%struct.hal_uart_config_t = type { i32, i32, i32, i32 }
%struct.uart_sw_flowcontrol_config_t = type { i8, i8, i8 }
%struct.uart_dma_callback_data_t = type { i8, i32 }
%struct.UART_REGISTER_T = type { %union.anon, %union.anon, %union.anon, i32, %union.anon, %union.anon, i32, %union.anon, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%union.anon = type { i32 }
%struct.I2C_REGISTER_T = type { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, [2 x i16], i16, i16, i16, i16, i16, i16, i16, i16, [2 x i16], i16, i16, [2 x i16], i16, i16, [2 x i16], i16, i16, [6 x i16], i16, i16, i16, i16, i16, i16, i16, i16, [2 x i16], i16, i16 }
%struct.nvic_function_t = type { void (i32)*, i32 }
%struct.GFH_CMEM_ID_INFO_v1 = type { %struct.GFH_Header, %struct.CMEMEntryIDList }
%struct.GFH_Header = type { i32, i16, i32 }
%struct.CMEMEntryIDList = type { i32, i32, [5 x %struct.CMEMEntryID] }
%struct.CMEMEntryID = type { i8, i8, [8 x i8] }
%struct.anon = type { i8 }
%struct.SF_MTD_Data = type { i32, i8*, %struct.anon*, %struct.anon*, i8, %struct.vdma_config_t*, i8*, %struct.vdma_config_t*, i8*, i32, i8*, [8 x [2 x %struct.vdma_config_t]], i8*, %struct.SF_MTD_CMD*, i32, i16, i16, i16, i16, i8, [3 x i8], i8, i8, i16, i32, i32, i8, i8, i32 (i8*)*, i32 (i8*)*, i32 (i8*, i32, i8*, i32)*, i32 (i8*, i32, i8*, i32)* }
%struct.vdma_config_t = type { i32, i32 }
%struct.SF_MTD_CMD = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.CMEMEntryNOR = type { i16, i16, i32, [8 x %struct.vdma_config_t], [8 x %struct.vdma_config_t] }
%struct.NOR_MTD_Driver = type { i32 (i8*, i8*)*, i32 (i8*)*, i8* (i8*, i32, i32)*, i32 (i8*, i32)*, i32 (i8*, i8*, i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32, i32, i8*, i32)*, i32 (i8*, i32*)*, i32 (i8*, i8*, i32)*, i1 (i8*, i32)*, i32 (i8*, i32, i8*)* }
%struct.NOR_FLASH_DRV_Data = type { i32, %struct.NOR_MTD_Driver*, i8*, i16*, i16*, %struct.NOR_MTD_FlashInfo, [8 x i32], [8 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.vdma_config_t*, i8*, i8*, void (%struct.NOR_FLASH_DRV_Data*)*, i32, void (%struct.NOR_FLASH_DRV_Data*)*, void (%struct.NOR_FLASH_DRV_Data*)*, i32, i32 (%struct.NOR_FLASH_DRV_Data*)*, i32 (%struct.NOR_FLASH_DRV_Data*, i32, i32)*, %struct.vdma_config_t*, i32, i32, i32, i16, i16, i8, i8 }
%struct.NOR_MTD_FlashInfo = type { i32, [8 x i32], [8 x i32], [8 x i32], i32, i16, i32, i32 }
%struct.GFH_CMEM_NOR_INFO_v1 = type { %struct.GFH_Header, %struct.CMEMEntryNORList }
%struct.CMEMEntryNORList = type { i32, i32, [5 x %struct.CMEMEntryNOR] }
%struct.NOR_FLASH_DISK_Data = type { i32, %struct.NOR_MTD_Driver*, i8*, %struct.NOR_MTD_FlashInfo, i8 }
%struct.pmu_function_t = type { void (i8, i8*)*, i8*, i8, i8 }
%struct.EMI_SETTINGS = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.EMI_REGISTER_T = type { [96 x i8], i32, [12 x i8], i32, [20 x i8], i32, [4 x i8], i32, [60 x i8], i32, [4 x i8], i32, [4 x i8], i32, [20 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [28 x i8], i32, [4 x i8], i32, [12 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [12 x i8], i32, [4 x i8], i32, [4 x i8], i32, [20 x i8], i32, [4 x i8], i32, [92 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [60 x i8], i32, [124 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [20 x i8], i32, [20 x i8], i32 }
%struct.i2c_transaction_size_t = type { i32, i32, i32, i32, i32 }
%struct.pmic_i2c_send_to_receive_config_t = type { i8, i8*, i32, i8*, i32 }
%union.CMEMFlashID = type { [4 x i16] }
%struct.NOR_Flash_MTD_Data = type { i32, i8*, %struct.anon*, %struct.anon*, i8, %struct.vdma_config_t*, i8*, %struct.vdma_config_t*, i8*, i32, i8*, [8 x [2 x %struct.vdma_config_t]] }
%struct.__va_list = type { i8* }
%struct.stat = type { i16, i16, i32, i16, i16, i16, i16, i32, %struct.timespec, %struct.timespec, %struct.timespec, i32, i32, [2 x i32] }
%struct.timespec = type { i64, i32 }
%struct._reent = type { i32, %struct.__sFILE*, %struct.__sFILE*, %struct.__sFILE*, i32, i8*, i32, i32, %struct.__locale_t*, %struct._mprec*, void (%struct._reent*)*, i32, i32, i8*, %struct._rand48*, %struct.GPT_REGISTER_T*, i8*, void (i32)**, %struct._atexit*, %struct._atexit, %struct._glue, %struct.__sFILE*, %struct._misc_reent*, i8* }
%struct.__locale_t = type opaque
%struct._mprec = type { %struct._Bigint*, i32, %struct._Bigint*, %struct._Bigint** }
%struct._Bigint = type { %struct._Bigint*, i32, i32, i32, i32, [1 x i32] }
%struct._rand48 = type { [3 x i16], [3 x i16], i16, i64 }
%struct._atexit = type { %struct._atexit*, i32, [32 x void ()*], %struct._on_exit_args* }
%struct._on_exit_args = type { [32 x i8*], [32 x i8*], i32, i32 }
%struct._glue = type { %struct._glue*, i32, %struct.__sFILE* }
%struct.__sFILE = type { i8*, i32, i32, i16, i16, %struct.__sbuf, i32, %struct._reent*, i8*, i32 (%struct._reent*, i8*, i8*, i32)*, i32 (%struct._reent*, i8*, i8*, i32)*, i32 (%struct._reent*, i8*, i32, i32)*, i32 (%struct._reent*, i8*)*, %struct.__sbuf, i8*, i32, [3 x i8], [1 x i8], %struct.__sbuf, i32, i32, %struct.__lock*, %struct._mbstate_t, i32 }
%struct.__sbuf = type { i8*, i32 }
%struct.__lock = type opaque
%struct._mbstate_t = type { i32, %union.anon }
%struct._misc_reent = type { i8*, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t, [8 x i8], i32, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t }

@g_dac_status = dso_local global i8 0, align 1, !dbg !0
@__FUNCTION__.hal_dac_init = private unnamed_addr constant [13 x i8] c"hal_dac_init\00", align 1
@.str = private unnamed_addr constant [25 x i8] c"\0D\0A [DAC] Module is busy!\00", align 1
@.str.1 = private unnamed_addr constant [30 x i8] c"\0D\0A [DAC] Clock enable failed!\00", align 1
@__FUNCTION__.hal_dac_deinit = private unnamed_addr constant [15 x i8] c"hal_dac_deinit\00", align 1
@.str.2 = private unnamed_addr constant [31 x i8] c"\0D\0A [DAC] Clock disable failed!\00", align 1
@__FUNCTION__.hal_dac_write_data = private unnamed_addr constant [19 x i8] c"hal_dac_write_data\00", align 1
@.str.3 = private unnamed_addr constant [28 x i8] c"\0D\0A [DAC] Invalid parameter.\00", align 1
@__FUNCTION__.hal_dac_configure_output = private unnamed_addr constant [25 x i8] c"hal_dac_configure_output\00", align 1
@.str.4 = private unnamed_addr constant [23 x i8] c"\0D\0A [DAC] Invalid mode.\00", align 1
@gpt_lock_sleep_name = internal unnamed_addr constant [6 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.6, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.7, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.8, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4.9, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.10, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i32 0, i32 0)], align 4, !dbg !130
@gpt_lock_sleep_handle = internal unnamed_addr global [6 x i8] zeroinitializer, align 1, !dbg !193
@__FUNCTION__.hal_gpt_init = private unnamed_addr constant [13 x i8] c"hal_gpt_init\00", align 1
@.str.5 = private unnamed_addr constant [40 x i8] c"[GPT%d][init]:get sleep handle failed\0D\0A\00", align 1
@.str.1.6 = private unnamed_addr constant [5 x i8] c"GPT0\00", align 1
@.str.2.7 = private unnamed_addr constant [5 x i8] c"GPT1\00", align 1
@.str.3.8 = private unnamed_addr constant [5 x i8] c"GPT2\00", align 1
@.str.4.9 = private unnamed_addr constant [5 x i8] c"GPT3\00", align 1
@.str.5.10 = private unnamed_addr constant [5 x i8] c"GPT4\00", align 1
@.str.6 = private unnamed_addr constant [5 x i8] c"GPT5\00", align 1
@gp_gpt = dso_local local_unnamed_addr global [6 x %struct.GPT_REGISTER_T*] [%struct.GPT_REGISTER_T* inttoptr (i32 -1575747568 to %struct.GPT_REGISTER_T*), %struct.GPT_REGISTER_T* inttoptr (i32 -1575747520 to %struct.GPT_REGISTER_T*), %struct.GPT_REGISTER_T* inttoptr (i32 -1575747472 to %struct.GPT_REGISTER_T*), %struct.GPT_REGISTER_T* inttoptr (i32 -1575747424 to %struct.GPT_REGISTER_T*), %struct.GPT_REGISTER_T* inttoptr (i32 -1575747376 to %struct.GPT_REGISTER_T*), %struct.GPT_REGISTER_T* inttoptr (i32 -1575747328 to %struct.GPT_REGISTER_T*)], section ".tcm_rwdata", align 4, !dbg !202
@gp_gpt_glb = dso_local local_unnamed_addr global %struct.GPT_REGISTER_GLOABL_T* inttoptr (i32 -1575747584 to %struct.GPT_REGISTER_GLOABL_T*), align 4, !dbg !306
@gpt_get_lfosc_clock.flag = internal unnamed_addr global i1 false, section ".tcm_rwdata", align 1, !dbg !364
@gpt_clock_source = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !361
@g_gpt_context = dso_local global [6 x %struct.gpt_context_t] zeroinitializer, section ".tcm_zidata", align 4, !dbg !322
@gpt_sw_context = dso_local local_unnamed_addr global %struct.gpt_sw_context_t zeroinitializer, align 4, !dbg !338
@__const.is_pin_with_pullsel.pin_number_with_pullsel = private unnamed_addr constant [5 x i32] [i32 0, i32 1, i32 2, i32 3, i32 10], align 4
@gpio_register_base = dso_local local_unnamed_addr global %struct.GPIO_REGISTER_T* inttoptr (i32 -1576927232 to %struct.GPIO_REGISTER_T*), align 4, !dbg !365
@g_uart_hwstatus = internal global [4 x i32] zeroinitializer, align 4, !dbg !645
@.str.45 = private unnamed_addr constant [49 x i8] c"../../../../../driver/chip/mt2523/src/hal_uart.c\00", align 1
@__func__.uart_receive_handler = private unnamed_addr constant [21 x i8] c"uart_receive_handler\00", align 1
@.str.1.46 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@g_uart_callback = internal unnamed_addr global [4 x %struct.uart_callback_t] zeroinitializer, align 4, !dbg !793
@g_uart_dma_config = internal global [4 x %struct.hal_uart_dma_config_t] zeroinitializer, align 4, !dbg !811
@__func__.uart_send_handler = private unnamed_addr constant [18 x i8] c"uart_send_handler\00", align 1
@g_uart_frist_send_complete_interrupt = internal unnamed_addr global [4 x i8] zeroinitializer, align 1, !dbg !755
@g_uart_send_lock_status = internal unnamed_addr global [4 x i8] zeroinitializer, align 1, !dbg !760
@g_uart_sleep_handler = internal unnamed_addr global [4 x i8] zeroinitializer, align 1, !dbg !762
@__func__.uart_error_handler = private unnamed_addr constant [19 x i8] c"uart_error_handler\00", align 1
@g_uart_flowcontrol_status = internal unnamed_addr global [4 x i32] zeroinitializer, align 4, !dbg !764
@g_uart_irq_pending_status = internal unnamed_addr global [4 x i8] zeroinitializer, align 1, !dbg !791
@g_uart_restore_init = internal unnamed_addr global i1 false, align 1, !dbg !836
@g_uart_config = internal global [4 x %struct.hal_uart_config_t] zeroinitializer, align 4, !dbg !777
@g_uart_sw_flowcontrol_config = internal unnamed_addr global [4 x %struct.uart_sw_flowcontrol_config_t] zeroinitializer, align 1, !dbg !768
@g_uart_baudrate_map = internal unnamed_addr constant [13 x i32] [i32 110, i32 300, i32 1200, i32 2400, i32 4800, i32 9600, i32 19200, i32 38400, i32 57600, i32 115200, i32 230400, i32 460800, i32 921600], align 4, !dbg !825
@g_uart_global_data_initialized = internal unnamed_addr global i1 false, align 1, !dbg !837
@__func__.hal_uart_init = private unnamed_addr constant [14 x i8] c"hal_uart_init\00", align 1
@__func__.hal_uart_deinit = private unnamed_addr constant [16 x i8] c"hal_uart_deinit\00", align 1
@__func__.hal_uart_send_dma = private unnamed_addr constant [18 x i8] c"hal_uart_send_dma\00", align 1
@__func__.hal_uart_receive_dma = private unnamed_addr constant [21 x i8] c"hal_uart_receive_dma\00", align 1
@g_uart_dma_callback_data = internal global [8 x %struct.uart_dma_callback_data_t] zeroinitializer, align 4, !dbg !806
@__func__.hal_uart_register_callback = private unnamed_addr constant [27 x i8] c"hal_uart_register_callback\00", align 1
@__func__.hal_uart_get_available_send_space = private unnamed_addr constant [34 x i8] c"hal_uart_get_available_send_space\00", align 1
@__func__.hal_uart_get_available_receive_bytes = private unnamed_addr constant [37 x i8] c"hal_uart_get_available_receive_bytes\00", align 1
@__func__.hal_uart_set_dma = private unnamed_addr constant [17 x i8] c"hal_uart_set_dma\00", align 1
@__func__.uart_start_dma_transmission = private unnamed_addr constant [28 x i8] c"uart_start_dma_transmission\00", align 1
@__const.uart_set_baudrate.fraction_L_mapping = private unnamed_addr constant [10 x i32] [i32 0, i32 0, i32 32, i32 144, i32 168, i32 84, i32 108, i32 186, i32 246, i32 254], align 4
@g_uart_regbase = dso_local local_unnamed_addr constant [4 x %struct.UART_REGISTER_T*] [%struct.UART_REGISTER_T* inttoptr (i32 -1609760768 to %struct.UART_REGISTER_T*), %struct.UART_REGISTER_T* inttoptr (i32 -1609695232 to %struct.UART_REGISTER_T*), %struct.UART_REGISTER_T* inttoptr (i32 -1609629696 to %struct.UART_REGISTER_T*), %struct.UART_REGISTER_T* inttoptr (i32 -1609564160 to %struct.UART_REGISTER_T*)], align 4, !dbg !838
@g_uart_port_to_pdn = dso_local local_unnamed_addr constant [4 x i32] [i32 45, i32 46, i32 47, i32 48], align 4, !dbg !910
@g_uart_port_to_irq_num = dso_local local_unnamed_addr constant [4 x i32] [i32 29, i32 30, i32 31, i32 32], align 4, !dbg !915
@.str.89 = private unnamed_addr constant [6 x i8] c"uart0\00", align 1
@.str.1.90 = private unnamed_addr constant [6 x i8] c"uart1\00", align 1
@.str.2.91 = private unnamed_addr constant [6 x i8] c"uart2\00", align 1
@.str.3.92 = private unnamed_addr constant [6 x i8] c"uart3\00", align 1
@g_uart_sleep_handler_name = dso_local local_unnamed_addr constant [4 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.89, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.90, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2.91, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3.92, i32 0, i32 0)], align 4, !dbg !921
@.str.4.101 = private unnamed_addr constant [67 x i8] c"../../../../../driver/chip/mt2523/src/hal_uart_internal_platform.c\00", align 1
@__func__.uart_interrupt_handler = private unnamed_addr constant [23 x i8] c"uart_interrupt_handler\00", align 1
@.str.5.102 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@switch.table.uart_dma_channel_to_callback_data = private unnamed_addr constant [8 x i8] c"\00\01\00\01\00\01\00\01", align 1
@switch.table.uart_dma_channel_to_callback_data.6 = private unnamed_addr constant [8 x i32] [i32 1, i32 1, i32 2, i32 2, i32 3, i32 3, i32 0, i32 0], align 4
@g_i2c_tx_dma_channel = dso_local local_unnamed_addr constant [4 x i32] [i32 3, i32 5, i32 7, i32 7], align 4, !dbg !927
@g_i2c_rx_dma_channel = dso_local local_unnamed_addr constant [4 x i32] [i32 4, i32 6, i32 7, i32 7], align 4, !dbg !1041
@g_i2c_source_clock_table = dso_local local_unnamed_addr global [4 x i32] [i32 26000, i32 26000, i32 62400, i32 62400], align 4, !dbg !1048
@g_i2c_pdn_table = dso_local local_unnamed_addr constant [4 x i32] [i32 138, i32 137, i32 39, i32 38], align 4, !dbg !1046
@i2c_master_register = dso_local local_unnamed_addr constant [4 x %struct.I2C_REGISTER_T*] [%struct.I2C_REGISTER_T* inttoptr (i32 -1608450048 to %struct.I2C_REGISTER_T*), %struct.I2C_REGISTER_T* inttoptr (i32 -1608384512 to %struct.I2C_REGISTER_T*), %struct.I2C_REGISTER_T* inttoptr (i32 -1608843264 to %struct.I2C_REGISTER_T*), %struct.I2C_REGISTER_T* inttoptr (i32 -1575682048 to %struct.I2C_REGISTER_T*)], align 4, !dbg !977
@__FUNCTION__.pmic_i2c_send_polling = private unnamed_addr constant [22 x i8] c"pmic_i2c_send_polling\00", align 1
@.str.103 = private unnamed_addr constant [25 x i8] c"i2c pmic send error:%d\0D\0A\00", align 1
@__FUNCTION__.pmic_i2c_send_to_receive_polling = private unnamed_addr constant [33 x i8] c"pmic_i2c_send_to_receive_polling\00", align 1
@.str.1.104 = private unnamed_addr constant [33 x i8] c"i2c pmic send_to_read error:%d\0D\0A\00", align 1
@hal_nvic_init.priority_set = internal unnamed_addr global i1 false, align 4, !dbg !1051
@defualt_irq_priority = internal unnamed_addr constant [64 x i32] [i32 5, i32 68, i32 7, i32 8, i32 68, i32 68, i32 68, i32 68, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 68, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 40, i32 68, i32 68, i32 43, i32 44, i32 26, i32 46, i32 47, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68], align 4, !dbg !1141
@nvic_function_table = dso_local local_unnamed_addr global [64 x %struct.nvic_function_t] zeroinitializer, align 4, !dbg !1128
@__FUNCTION__.isrC_main = private unnamed_addr constant [10 x i8] c"isrC_main\00", align 1
@.str.111 = private unnamed_addr constant [25 x i8] c"ERROR: no IRQ handler! \0A\00", align 1
@DelayResume = dso_local local_unnamed_addr global i8 0, align 1, !dbg !1146
@.str.121 = private unnamed_addr constant [61 x i8] c"../../../../../driver/chip/mt2523/src/hal_flash_mtd_common.c\00", align 1
@__func__.SFI_BlankCheck = private unnamed_addr constant [15 x i8] c"SFI_BlankCheck\00", align 1
@.str.1.122 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@__func__.SFI_MacEnable = private unnamed_addr constant [14 x i8] c"SFI_MacEnable\00", align 1
@NOR_FLASH_LeaveDPDCmd = dso_local local_unnamed_addr global i8 0, section ".tcm_rwdata", align 1, !dbg !1222
@NOR_FLASH_FATStartAddr = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1224
@NOR_FLASH_FATStartValue = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1226
@SFI_MAC_CTL_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1228
@SFI_DIRECT_CTL_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1230
@SFI_MISC_CTL_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1232
@SFI_MISC_CTL2_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1234
@SFI_DLY_CTL_3_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1236
@SFI_CLK_SWITCH_MISC_CTL_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1238
@SFI_CLK_SWITCH_DLY_CTL_3_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1240
@sf_dal_brbusy_wait = dso_local local_unnamed_addr global i8 0, align 1, !dbg !1242
@sf_dal_resume_time = dso_local local_unnamed_addr global i32 -1, align 4, !dbg !1555
@sf_dal_flash_return_ready_max = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1557
@.str.125 = private unnamed_addr constant [58 x i8] c"../../../../../driver/chip/mt2523/src/hal_flash_mtd_dal.c\00", align 1
@__func__.Flash_ReturnReady = private unnamed_addr constant [18 x i8] c"Flash_ReturnReady\00", align 1
@.str.1.126 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@__func__.Flash_CheckReady = private unnamed_addr constant [17 x i8] c"Flash_CheckReady\00", align 1
@__func__.Flash_ResumeOperation = private unnamed_addr constant [22 x i8] c"Flash_ResumeOperation\00", align 1
@__func__.Flash_SuspendOperation = private unnamed_addr constant [23 x i8] c"Flash_SuspendOperation\00", align 1
@MTDMutex = internal unnamed_addr global i1 false, align 4, !dbg !1566
@__func__.SF_DAL_FreeDevLock = private unnamed_addr constant [19 x i8] c"SF_DAL_FreeDevLock\00", align 1
@__func__.SF_DAL_Init_Vendor = private unnamed_addr constant [19 x i8] c"SF_DAL_Init_Vendor\00", align 1
@__func__.SF_DAL_IOCtrl = private unnamed_addr constant [14 x i8] c"SF_DAL_IOCtrl\00", align 1
@__func__.SF_DAL_ProgramData = private unnamed_addr constant [19 x i8] c"SF_DAL_ProgramData\00", align 1
@tmp_data_buffer = internal unnamed_addr global [128 x i8] zeroinitializer, align 1, !dbg !1559
@__func__.SF_DAL_EraseBlock = private unnamed_addr constant [18 x i8] c"SF_DAL_EraseBlock\00", align 1
@__func__.SF_DAL_CheckReadyAndResume = private unnamed_addr constant [27 x i8] c"SF_DAL_CheckReadyAndResume\00", align 1
@__func__.SF_DAL_CheckDeviceReady = private unnamed_addr constant [24 x i8] c"SF_DAL_CheckDeviceReady\00", align 1
@combo_mem_id_list = dso_local constant %struct.GFH_CMEM_ID_INFO_v1 { %struct.GFH_Header { i32 21843277, i16 72, i32 258 }, %struct.CMEMEntryIDList { i32 1, i32 5, [5 x %struct.CMEMEntryID] [%struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\C2(\16\00\00\00\00\00" }, %struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\C2(\15\00\00\00\00\00" }, %struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\EFp\16\00\00\00\00\00" }, %struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\C2%8\00\00\00\00\00" }, %struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\EF@\18\00\00\00\00\00" }] } }, align 4, !dbg !1567
@cmem_index = internal unnamed_addr global i16 -1, align 2, !dbg !1619
@cmem_emiinit_index = internal unnamed_addr global i16 -1, align 2, !dbg !1622
@FLASH_ID = dso_local local_unnamed_addr constant [19 x i8] c"{0xC2, 0x28, 0x16}\00", align 1, !dbg !1655
@nor_egid = dso_local local_unnamed_addr global %struct.anon* null, align 4, !dbg !1664
@EntireDiskMtdData = dso_local global %struct.SF_MTD_Data zeroinitializer, align 4, !dbg !1980
@RegionInfo = internal global [8 x %struct.vdma_config_t] zeroinitializer, align 4, !dbg !1851
@mtdflash = dso_local global %struct.SF_MTD_Data zeroinitializer, align 4, !dbg !1879
@nor_list = internal unnamed_addr global %struct.CMEMEntryNOR* null, align 4, !dbg !1982
@cmem_nor_index = internal unnamed_addr global i32 0, align 4, !dbg !1689
@PAGE_BUFFER_SIZE = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1875
@NORFlashMtd = dso_local global %struct.NOR_MTD_Driver zeroinitializer, align 4, !dbg !1877
@FlashDriveData = dso_local local_unnamed_addr global %struct.NOR_FLASH_DRV_Data zeroinitializer, align 4, !dbg !1701
@StatusMap = dso_local global [8 x i8] zeroinitializer, align 1, !dbg !1962
@sf_dal_data_cmd = dso_local global %struct.SF_MTD_CMD zeroinitializer, align 1, !dbg !1965
@combo_mem_sw_list = internal constant %struct.GFH_CMEM_NOR_INFO_v1 { %struct.GFH_Header { i32 21843277, i16 700, i32 259 }, %struct.CMEMEntryNORList { i32 2, i32 5, [5 x %struct.CMEMEntryNOR] [%struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.vdma_config_t] [%struct.vdma_config_t { i32 0, i32 4096 }, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer], [8 x %struct.vdma_config_t] [%struct.vdma_config_t { i32 4194304, i32 1 }, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer] }, %struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.vdma_config_t] [%struct.vdma_config_t { i32 0, i32 4096 }, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer], [8 x %struct.vdma_config_t] [%struct.vdma_config_t { i32 4194304, i32 1 }, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer] }, %struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.vdma_config_t] [%struct.vdma_config_t { i32 0, i32 4096 }, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer], [8 x %struct.vdma_config_t] [%struct.vdma_config_t { i32 4194304, i32 1 }, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer] }, %struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.vdma_config_t] [%struct.vdma_config_t { i32 0, i32 4096 }, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer], [8 x %struct.vdma_config_t] [%struct.vdma_config_t { i32 4194304, i32 1 }, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer] }, %struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.vdma_config_t] [%struct.vdma_config_t { i32 0, i32 4096 }, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer], [8 x %struct.vdma_config_t] [%struct.vdma_config_t { i32 4194304, i32 1 }, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer] }] } }, align 4, !dbg !1995
@BlockLayout = internal unnamed_addr global %struct.vdma_config_t* null, align 4, !dbg !1854
@BankInfo = internal global [8 x %struct.vdma_config_t] zeroinitializer, align 4, !dbg !1867
@TOTAL_BLOCKS = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1838
@NOR_LARGEST_BLOCK_SIZE = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1842
@TOTAL_SECTORS = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1840
@cmem_id = dso_local local_unnamed_addr global %struct.CMEMEntryID* null, align 4, !dbg !1691
@.str.141 = private unnamed_addr constant [60 x i8] c"../../../../../driver/chip/mt2523/src/hal_flash_combo_nor.c\00", align 1
@__func__.CMEM_Init_nor_list = private unnamed_addr constant [19 x i8] c"CMEM_Init_nor_list\00", align 1
@.str.1.142 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@EntireDiskRegionInfo = internal global [8 x %struct.vdma_config_t] zeroinitializer, align 4, !dbg !1967
@__func__.CMEM_Init_FullDriver = private unnamed_addr constant [21 x i8] c"CMEM_Init_FullDriver\00", align 1
@FDMBuffer = dso_local local_unnamed_addr global [512 x i8] zeroinitializer, align 1, !dbg !1846
@CS0_SIZE = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1863
@CS1_SIZE = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1865
@FDMMutex = internal unnamed_addr global i1 false, align 4, !dbg !2022
@.str.147 = private unnamed_addr constant [55 x i8] c"../../../../../driver/chip/mt2523/src/hal_flash_disk.c\00", align 1
@.str.1.148 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@__func__.FreeFDMLock = private unnamed_addr constant [12 x i8] c"FreeFDMLock\00", align 1
@flash_init_status = internal unnamed_addr global i1 false, section ".tcm_rwdata", align 4, !dbg !2082
@EntireDiskDriveData = dso_local global %struct.NOR_FLASH_DISK_Data zeroinitializer, align 4, !dbg !1969
@__func__.get_rawdisk_error_code = private unnamed_addr constant [23 x i8] c"get_rawdisk_error_code\00", align 1
@__func__.get_block_size_from_address = private unnamed_addr constant [28 x i8] c"get_block_size_from_address\00", align 1
@__func__.MountDevice = private unnamed_addr constant [12 x i8] c"MountDevice\00", align 1
@switch.table.get_rawdisk_error_code = private unnamed_addr constant [9 x i32] [i32 -7, i32 -3, i32 -3, i32 -3, i32 -3, i32 -4, i32 -3, i32 -6, i32 -7], align 4
@gNOR_ReturnReadyBegin = dso_local local_unnamed_addr global i32 0, align 4, !dbg !2083
@gNOR_ReturnReadyEnd = dso_local local_unnamed_addr global i32 -1, align 4, !dbg !2090
@NOR_Flash_Base_Address = dso_local local_unnamed_addr global i32 0, align 4, !dbg !2092
@NOR_FLASH_BUSY = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2094
@NOR_FLASH_SUSPENDED = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2096
@.str.163 = private unnamed_addr constant [54 x i8] c"../../../../../driver/chip/mt2523/src/hal_flash_mtd.c\00", align 1
@__func__.MapWindow = private unnamed_addr constant [10 x i8] c"MapWindow\00", align 1
@.str.1.164 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@__func__.DelayAWhile_UST = private unnamed_addr constant [16 x i8] c"DelayAWhile_UST\00", align 1
@LookupAddress.replaced = internal unnamed_addr global i32 0, align 4, !dbg !2098
@LookupAddress.look_up_hit = internal unnamed_addr global i32 0, align 4, !dbg !2152
@LookupAddress.look_up_miss = internal unnamed_addr global i32 0, align 4, !dbg !2154
@pmu_init_mt6385.init = internal unnamed_addr global i1 false, align 1, !dbg !2156
@__FUNCTION__.pmu_init_mt6385 = private unnamed_addr constant [16 x i8] c"pmu_init_mt6385\00", align 1
@.str.171 = private unnamed_addr constant [21 x i8] c"\0A\0DPMU Version : E1\0A\0D\00", align 1
@.str.1.172 = private unnamed_addr constant [21 x i8] c"\0A\0DPMU Version : E2\0A\0D\00", align 1
@pmu_power_mode_init_setting_E1 = internal global [10 x [8 x i8]] [[8 x i8] c"\01\00\00\02\02\00\00\00", [8 x i8] c"\01\00\00\03\02\00\00\00", [8 x i8] c"\01\00\00\03\03\01\00\00", [8 x i8] c"\01\00\00\02\02\01\06\06", [8 x i8] c"\01\02\02\02\02\00\00\00", [8 x i8] c"\01\00\00\02\02\00\00\00", [8 x i8] c"\01\00\00\02\02\00\04\04", [8 x i8] c"\00\00\00\02\02\00\03\03", [8 x i8] c"\01\00\00\02\02\00\02\02", [8 x i8] c"\01\00\00\02\02\01\01\01"], align 1, !dbg !2344
@pmu_power_mode_init_setting_E2 = internal global [10 x [8 x i8]] [[8 x i8] c"\01\00\00\02\02\00\00\00", [8 x i8] c"\01\00\00\02\02\00\00\00", [8 x i8] c"\01\00\00\03\03\01\00\00", [8 x i8] c"\01\00\00\02\02\01\00\00", [8 x i8] c"\01\02\02\02\02\00\00\00", [8 x i8] c"\01\00\00\02\02\00\00\00", [8 x i8] c"\00\00\00\02\02\01\00\00", [8 x i8] c"\00\00\00\02\02\01\01\01", [8 x i8] c"\00\00\00\02\02\01\00\00", [8 x i8] c"\00\00\00\02\02\01\00\00"], align 1, !dbg !2348
@pmu_eint_handler.index = internal unnamed_addr global i32 0, align 4, !dbg !2320
@pmu_eint_handler.int_sts = internal unnamed_addr global [7 x i32] zeroinitializer, align 4, !dbg !2326
@pmu_function_table = dso_local local_unnamed_addr global [32 x %struct.pmu_function_t] zeroinitializer, align 4, !dbg !2331
@__FUNCTION__.pmu_init = private unnamed_addr constant [9 x i8] c"pmu_init\00", align 1
@.str.173 = private unnamed_addr constant [23 x i8] c"\0A\0Duse internal pmic \0A\0D\00", align 1
@__FUNCTION__.internal_pmu_ctrl_power = private unnamed_addr constant [24 x i8] c"internal_pmu_ctrl_power\00", align 1
@.str.1.180 = private unnamed_addr constant [48 x i8] c"EXTERNAL PMU ERROR: No matching Power Control!\0A\00", align 1
@pmu_mtcmos_ldo_ctrl = dso_local local_unnamed_addr global i16 448, align 2, !dbg !2358
@pmu_mtcmos_ldo_en = dso_local local_unnamed_addr global i16 0, align 2, !dbg !2390
@pmu_mtcmos_vio28_pmod = dso_local local_unnamed_addr global i16 0, align 2, !dbg !2392
@__FUNCTION__.PMIC_VR_PSI_PMOD_CONFIG = private unnamed_addr constant [24 x i8] c"PMIC_VR_PSI_PMOD_CONFIG\00", align 1
@.str.191 = private unnamed_addr constant [30 x i8] c"PMU ERROR: Illegal PSI Mode!\0A\00", align 1
@.str.1.192 = private unnamed_addr constant [29 x i8] c"PMU ERROR: Illegal PSI Mode\0A\00", align 1
@.str.2.193 = private unnamed_addr constant [29 x i8] c"PMU ERROR: No matching LDO!\0A\00", align 1
@__FUNCTION__.PMIC_VR_SLEEP_WKUP_CONFIG = private unnamed_addr constant [26 x i8] c"PMIC_VR_SLEEP_WKUP_CONFIG\00", align 1
@.str.3.196 = private unnamed_addr constant [30 x i8] c"PMU ERROR: Illegal PSI mode!\0A\00", align 1
@.str.4.197 = private unnamed_addr constant [52 x i8] c"PMU ERROR: wk_slot > Wake sequence length setting!\0A\00", align 1
@.str.5.198 = private unnamed_addr constant [40 x i8] c"PMU ERROR: Undefined control mode =%d!\0A\00", align 1
@.str.6.199 = private unnamed_addr constant [52 x i8] c"PMU ERROR: No sleep wake up setting for VCORE LDO!\0A\00", align 1
@.str.7 = private unnamed_addr constant [52 x i8] c"PMU ERROR: No sleep wake up setting for VIO18 LDO!\0A\00", align 1
@.str.8 = private unnamed_addr constant [31 x i8] c"PMU ERROR: Illeagal PSI mode!\0A\00", align 1
@.str.9 = private unnamed_addr constant [52 x i8] c"PMU ERROR: No sleep wake up setting for VDIG18 LDO!\00", align 1
@.str.10 = private unnamed_addr constant [43 x i8] c"PMU ERROR: wk_slot should greater than 0!\0A\00", align 1
@.str.11 = private unnamed_addr constant [52 x i8] c"PMU ERROR: No sleep wake up setting for VCAMA LDO!\0A\00", align 1
@.str.12 = private unnamed_addr constant [51 x i8] c"PMU ERROR: No sleep wake up setting for VIBR! LDO\0A\00", align 1
@.str.13 = private unnamed_addr constant [51 x i8] c"PMU ERROR: No sleep wake up setting for SWMP! LDO\0A\00", align 1
@.str.14 = private unnamed_addr constant [28 x i8] c"PMU ERROR: No matching LDO!\00", align 1
@__FUNCTION__.PMIC_VR_CONTROL = private unnamed_addr constant [16 x i8] c"PMIC_VR_CONTROL\00", align 1
@.str.15 = private unnamed_addr constant [44 x i8] c"PMU ERROR: VCORE LDO cannot be turned off!\0A\00", align 1
@.str.16 = private unnamed_addr constant [44 x i8] c"PMU ERROR: VIO18 LDO cannot be turned off!\0A\00", align 1
@.str.17 = private unnamed_addr constant [28 x i8] c"PMU ERROR: No matching VR!\0A\00", align 1
@__const.PMIC_VCORE_VOSEL_CONFIG.vc_ldo_vosel = private unnamed_addr constant [7 x i32] [i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12], align 4
@__FUNCTION__.PMIC_VCORE_VOSEL_CONFIG = private unnamed_addr constant [24 x i8] c"PMIC_VCORE_VOSEL_CONFIG\00", align 1
@.str.18 = private unnamed_addr constant [56 x i8] c"PMU ERROR: Illegal PSI mode for setting VCORE voltage!\0A\00", align 1
@__const.PMIC_VR_VOSEL_INIT_CONFIG.viber_vosel = private unnamed_addr constant [8 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7], align 4
@__FUNCTION__.PMIC_VR_VOSEL_INIT_CONFIG = private unnamed_addr constant [26 x i8] c"PMIC_VR_VOSEL_INIT_CONFIG\00", align 1
@.str.19 = private unnamed_addr constant [32 x i8] c"PMU ERROR: No support voltage!\0A\00", align 1
@pmu_control_mtcmos_mt6385.local_flag = internal unnamed_addr global i16 0, align 2, !dbg !2394
@pmu_control_mtcmos_mt6385.mtcmos_flag = internal unnamed_addr global i16 0, align 2, !dbg !2397
@pmu_ctrl_va28_ldo_mt6385.resoure_count = internal unnamed_addr global i32 0, align 4, !dbg !2399
@pmu_ctrl_va28_ldo_mt6385.version = internal unnamed_addr global i8 0, align 1, !dbg !2406
@__const.pmu_get_vcore_setting_index.vcbuck_voval = private unnamed_addr constant [7 x i8] c"\02\04\06\08\0A\0C\0E", align 1
@pmu_set_vcore_voltage_mt6385.Vcore_Resource_Ctrl = internal unnamed_addr global [7 x i8] zeroinitializer, align 1, !dbg !2408
@pmu_set_vcore_voltage_mt6385.origin_voltage = internal unnamed_addr global i8 0, align 1, !dbg !2418
@pmu_set_vcore_voltage_mt6385.old_vcore = internal unnamed_addr global i8 0, align 1, !dbg !2420
@pmu_set_vcore_voltage_mt6385.old_vcore_lp = internal unnamed_addr global i8 0, align 1, !dbg !2422
@pmu_set_vcore_voltage_mt6385.init = internal unnamed_addr global i1 false, align 1, !dbg !2434
@pmu_set_vcore_s1_buck_mt6385.S1_setting = internal unnamed_addr global i32 255, align 4, !dbg !2426
@__const.pmu_set_vcore_s1_buck_mt6385.vcbuck_voval = private unnamed_addr constant [7 x i32] [i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14], align 4
@emi_settings = dso_local local_unnamed_addr global [1 x %struct.EMI_SETTINGS] [%struct.EMI_SETTINGS { i32 16, i32 0, i32 16384, i32 -1608118272, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 131074, i32 131074 }], section ".tcm_rwdata", align 4, !dbg !2435
@__EMI_CurSR0 = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !2447
@__EMI_CurSR1 = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !2449
@__EMI_CurSR2 = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !2451
@emi_register = dso_local local_unnamed_addr global %struct.EMI_REGISTER_T* inttoptr (i32 -1610285056 to %struct.EMI_REGISTER_T*), section ".tcm_rwdata", align 4, !dbg !2453
@EMI_GENA_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2556
@EMI_RDCT_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2558
@EMI_DSRAM_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2560
@EMI_MSRAM_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2562
@EMI_IDL_C_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2564
@EMI_IDL_D_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2566
@EMI_IDL_E_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2568
@EMI_ODL_C_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2570
@EMI_ODL_D_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2572
@EMI_ODL_E_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2574
@EMI_ODL_F_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2576
@EMI_IO_A_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2578
@EMI_IO_B_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2580
@__const.TestCase_MBIST.mbist_data = private unnamed_addr constant [2 x i32] [i32 23205, i32 65535], align 4
@emi_register_backup = dso_local global %struct.EMI_REGISTER_T zeroinitializer, section ".tcm_zidata", align 4, !dbg !2582
@dvfs_dma_runing_status = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !2554
@cm_freq_state = dso_local local_unnamed_addr global i32 1, section ".tcm_rwdata", align 4, !dbg !2603
@.str.224 = private unnamed_addr constant [5 x i8] c"\0D\0A\0D\0A\00", align 1
@.str.1.225 = private unnamed_addr constant [20 x i8] c"welcome to main()\0D\0A\00", align 1
@__const.dac_output_data_repeatedly_example.dac_data = private unnamed_addr constant [4 x i32] [i32 1023, i32 511, i32 0, i32 511], align 4
@.str.2.226 = private unnamed_addr constant [29 x i8] c"\0D\0A ---dac_example begin---\0D\0A\00", align 1
@.str.3.227 = private unnamed_addr constant [35 x i8] c"\0D\0A ---dac_example--- finished!!!\0D\0A\00", align 1
@_sbrk_r.heap_end = internal unnamed_addr global i8* null, align 4, !dbg !2615
@end = external dso_local global i8, align 1
@System_Initialize_Done = internal global i32 0, align 4, !dbg !2817
@SystemCoreClock = dso_local local_unnamed_addr global i32 0, align 4, !dbg !2932
@build_date_time_str = dso_local local_unnamed_addr global [31 x i8] c"2022/12/13 08:01:24 GMT +00:00\00", align 1, !dbg !2934
@sw_verno_str = dso_local local_unnamed_addr global [11 x i8] c"SDK_V4.6.1\00", align 1, !dbg !2939
@hw_verno_str = dso_local local_unnamed_addr global [11 x i8] c"mt2523_hdk\00", align 1, !dbg !2945

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_dac_init() local_unnamed_addr #0 !dbg !3070 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !3076
  call void @llvm.dbg.value(metadata i32 %1, metadata !3075, metadata !DIExpression()), !dbg !3077
  %2 = load volatile i8, i8* @g_dac_status, align 1, !dbg !3078
  %3 = icmp eq i8 %2, 1, !dbg !3080
  br i1 %3, label %4, label %5, !dbg !3081

4:                                                ; preds = %0
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @__FUNCTION__.hal_dac_init, i32 0, i32 0), i32 noundef 66, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i32 0, i32 0)) #21, !dbg !3082
  tail call void @restore_interrupt_mask(i32 noundef %1) #21, !dbg !3084
  br label %16, !dbg !3085

5:                                                ; preds = %0
  store volatile i8 1, i8* @g_dac_status, align 1, !dbg !3086
  tail call void @restore_interrupt_mask(i32 noundef %1) #21, !dbg !3088
  tail call void @pmu_ctrl_driver_power(i8 noundef zeroext 9, i8 noundef zeroext 1) #21, !dbg !3089
  %6 = tail call i32 @hal_clock_enable(i32 noundef 134) #21, !dbg !3090
  %7 = icmp eq i32 %6, 0, !dbg !3092
  br i1 %7, label %9, label %8, !dbg !3093

8:                                                ; preds = %5
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @__FUNCTION__.hal_dac_init, i32 0, i32 0), i32 noundef 82, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i32 0, i32 0)) #21, !dbg !3094
  br label %16, !dbg !3096

9:                                                ; preds = %5
  %10 = load volatile i32, i32* inttoptr (i32 -1575288808 to i32*), align 8, !dbg !3097
  %11 = or i32 %10, 1, !dbg !3097
  store volatile i32 %11, i32* inttoptr (i32 -1575288808 to i32*), align 8, !dbg !3097
  %12 = load volatile i32, i32* inttoptr (i32 -1575288808 to i32*), align 8, !dbg !3098
  %13 = and i32 %12, -2, !dbg !3098
  store volatile i32 %13, i32* inttoptr (i32 -1575288808 to i32*), align 8, !dbg !3098
  %14 = load volatile i32, i32* inttoptr (i32 -1575288812 to i32*), align 4, !dbg !3099
  %15 = or i32 %14, 1, !dbg !3099
  store volatile i32 %15, i32* inttoptr (i32 -1575288812 to i32*), align 4, !dbg !3099
  br label %16, !dbg !3100

16:                                               ; preds = %9, %8, %4
  %17 = phi i32 [ -2, %4 ], [ -1, %8 ], [ 0, %9 ], !dbg !3077
  ret i32 %17, !dbg !3101
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

; Function Attrs: optsize
declare dso_local i32 @hal_clock_enable(i32 noundef) local_unnamed_addr #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_dac_deinit() local_unnamed_addr #0 !dbg !3102 {
  %1 = load volatile i32, i32* inttoptr (i32 -1575288812 to i32*), align 4, !dbg !3103
  %2 = and i32 %1, -2, !dbg !3103
  store volatile i32 %2, i32* inttoptr (i32 -1575288812 to i32*), align 4, !dbg !3103
  %3 = load volatile i32, i32* inttoptr (i32 -1575288752 to i32*), align 16, !dbg !3104
  %4 = and i32 %3, -9, !dbg !3104
  store volatile i32 %4, i32* inttoptr (i32 -1575288752 to i32*), align 16, !dbg !3104
  %5 = load volatile i32, i32* inttoptr (i32 -1575288752 to i32*), align 16, !dbg !3105
  %6 = or i32 %5, 4, !dbg !3105
  store volatile i32 %6, i32* inttoptr (i32 -1575288752 to i32*), align 16, !dbg !3105
  %7 = tail call i32 @hal_clock_disable(i32 noundef 134) #21, !dbg !3106
  %8 = icmp eq i32 %7, 0, !dbg !3108
  br i1 %8, label %10, label %9, !dbg !3109

9:                                                ; preds = %0
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__FUNCTION__.hal_dac_deinit, i32 0, i32 0), i32 noundef 107, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.2, i32 0, i32 0)) #21, !dbg !3110
  br label %11, !dbg !3112

10:                                               ; preds = %0
  tail call void @pmu_ctrl_driver_power(i8 noundef zeroext 9, i8 noundef zeroext 0) #21, !dbg !3113
  store volatile i8 0, i8* @g_dac_status, align 1, !dbg !3114
  br label %11, !dbg !3115

11:                                               ; preds = %10, %9
  %12 = phi i32 [ -1, %9 ], [ 0, %10 ], !dbg !3116
  ret i32 %12, !dbg !3117
}

; Function Attrs: optsize
declare dso_local i32 @hal_clock_disable(i32 noundef) local_unnamed_addr #2

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_dac_start_output() local_unnamed_addr #3 !dbg !3118 {
  %1 = load volatile i32, i32* inttoptr (i32 -1575288804 to i32*), align 4, !dbg !3119
  %2 = or i32 %1, 17, !dbg !3119
  store volatile i32 %2, i32* inttoptr (i32 -1575288804 to i32*), align 4, !dbg !3119
  ret i32 0, !dbg !3120
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_dac_stop_output() local_unnamed_addr #3 !dbg !3121 {
  %1 = load volatile i32, i32* inttoptr (i32 -1575288804 to i32*), align 4, !dbg !3122
  %2 = and i32 %1, -18, !dbg !3122
  store volatile i32 %2, i32* inttoptr (i32 -1575288804 to i32*), align 4, !dbg !3122
  ret i32 0, !dbg !3123
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_dac_write_data(i32 noundef %0, i32* noundef readonly %1, i32 noundef %2) local_unnamed_addr #0 !dbg !3124 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3129, metadata !DIExpression()), !dbg !3134
  call void @llvm.dbg.value(metadata i32* %1, metadata !3130, metadata !DIExpression()), !dbg !3134
  call void @llvm.dbg.value(metadata i32 %2, metadata !3131, metadata !DIExpression()), !dbg !3134
  %4 = add i32 %0, 255, !dbg !3135
  %5 = add i32 %4, %2, !dbg !3136
  call void @llvm.dbg.value(metadata i32 undef, metadata !3132, metadata !DIExpression(DW_OP_plus_uconst, 255, DW_OP_stack_value)), !dbg !3134
  %6 = and i32 %5, 128, !dbg !3137
  %7 = icmp eq i32 %6, 0, !dbg !3137
  br i1 %7, label %8, label %22, !dbg !3139

8:                                                ; preds = %3
  %9 = icmp eq i32* %1, null, !dbg !3140
  br i1 %9, label %22, label %10, !dbg !3142

10:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 0, metadata !3133, metadata !DIExpression()), !dbg !3134
  %11 = icmp eq i32 %2, 0, !dbg !3143
  br i1 %11, label %24, label %12, !dbg !3146

12:                                               ; preds = %10, %12
  %13 = phi i32 [ %20, %12 ], [ 0, %10 ]
  call void @llvm.dbg.value(metadata i32 %13, metadata !3133, metadata !DIExpression()), !dbg !3134
  %14 = add i32 %13, %0, !dbg !3147
  %15 = getelementptr inbounds i32, i32* %1, i32 %13, !dbg !3149
  %16 = load i32, i32* %15, align 4, !dbg !3149
  %17 = shl i32 %16, 8, !dbg !3150
  %18 = and i32 %17, 261888, !dbg !3150
  %19 = or i32 %18, %14, !dbg !3151
  store volatile i32 %19, i32* inttoptr (i32 -1575288796 to i32*), align 4, !dbg !3152
  %20 = add nuw i32 %13, 1, !dbg !3153
  call void @llvm.dbg.value(metadata i32 %20, metadata !3133, metadata !DIExpression()), !dbg !3134
  %21 = icmp eq i32 %20, %2, !dbg !3143
  br i1 %21, label %24, label %12, !dbg !3146, !llvm.loop !3154

22:                                               ; preds = %8, %3
  %23 = phi i32 [ 145, %3 ], [ 151, %8 ]
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__FUNCTION__.hal_dac_write_data, i32 0, i32 0), i32 noundef %23, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.3, i32 0, i32 0)) #21, !dbg !3134
  br label %24, !dbg !3156

24:                                               ; preds = %12, %22, %10
  %25 = phi i32 [ 0, %10 ], [ -3, %22 ], [ 0, %12 ], !dbg !3134
  ret i32 %25, !dbg !3156
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_dac_configure_output(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !3157 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3162, metadata !DIExpression()), !dbg !3165
  call void @llvm.dbg.value(metadata i32 %1, metadata !3163, metadata !DIExpression()), !dbg !3165
  call void @llvm.dbg.value(metadata i32 %2, metadata !3164, metadata !DIExpression()), !dbg !3165
  %4 = or i32 %2, %1, !dbg !3166
  %5 = and i32 %4, 128, !dbg !3168
  %6 = icmp eq i32 %5, 0, !dbg !3168
  br i1 %6, label %8, label %7, !dbg !3169

7:                                                ; preds = %3
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @__FUNCTION__.hal_dac_configure_output, i32 0, i32 0), i32 noundef 167, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.3, i32 0, i32 0)) #21, !dbg !3170
  br label %16, !dbg !3172

8:                                                ; preds = %3
  %9 = icmp eq i32 %0, 0, !dbg !3173
  br i1 %9, label %10, label %15, !dbg !3175

10:                                               ; preds = %8
  %11 = load volatile i32, i32* inttoptr (i32 -1575288804 to i32*), align 4, !dbg !3176
  %12 = or i32 %11, 16, !dbg !3176
  store volatile i32 %12, i32* inttoptr (i32 -1575288804 to i32*), align 4, !dbg !3176
  %13 = shl i32 %2, 8, !dbg !3178
  %14 = or i32 %13, %1, !dbg !3179
  store volatile i32 %14, i32* inttoptr (i32 -1575288800 to i32*), align 32, !dbg !3180
  br label %16, !dbg !3181

15:                                               ; preds = %8
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @__FUNCTION__.hal_dac_configure_output, i32 0, i32 0), i32 noundef 175, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i32 0, i32 0)) #21, !dbg !3182
  br label %16, !dbg !3184

16:                                               ; preds = %10, %15, %7
  %17 = phi i32 [ -3, %7 ], [ 0, %10 ], [ -1, %15 ], !dbg !3165
  ret i32 %17, !dbg !3185
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_init(i32 noundef %0) local_unnamed_addr #0 !dbg !3186 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3192, metadata !DIExpression()), !dbg !3193
  %2 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #22, !dbg !3194
  br i1 %2, label %3, label %32, !dbg !3196

3:                                                ; preds = %1
  %4 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, !dbg !3197
  %5 = getelementptr inbounds %struct.gpt_context_t, %struct.gpt_context_t* %4, i32 0, i32 0, !dbg !3199
  %6 = load i32, i32* %5, align 4, !dbg !3199
  %7 = icmp eq i32 %6, 1, !dbg !3200
  br i1 %7, label %32, label %8, !dbg !3201

8:                                                ; preds = %3
  %9 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !3202
  %10 = load i8, i8* %9, align 4, !dbg !3202, !range !3203
  %11 = icmp eq i8 %10, 0, !dbg !3202
  br i1 %11, label %12, label %32, !dbg !3204

12:                                               ; preds = %8
  %13 = bitcast %struct.gpt_context_t* %4 to i8*, !dbg !3205
  %14 = tail call i8* @memset(i8* noundef nonnull %13, i32 noundef 0, i32 noundef 16) #21, !dbg !3206
  tail call void @gpt_open_clock_source() #21, !dbg !3207
  store i8 1, i8* %9, align 4, !dbg !3208
  %15 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %0, !dbg !3209
  %16 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %15, align 4, !dbg !3209
  %17 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %16, i32 0, i32 2, !dbg !3210
  %18 = load volatile i32, i32* %17, align 4, !dbg !3211
  %19 = and i32 %18, -2, !dbg !3211
  store volatile i32 %19, i32* %17, align 4, !dbg !3211
  %20 = shl nuw i32 1, %0, !dbg !3212
  %21 = xor i32 %20, -1, !dbg !3213
  %22 = load %struct.GPT_REGISTER_GLOABL_T*, %struct.GPT_REGISTER_GLOABL_T** @gp_gpt_glb, align 4, !dbg !3214
  %23 = getelementptr inbounds %struct.GPT_REGISTER_GLOABL_T, %struct.GPT_REGISTER_GLOABL_T* %22, i32 0, i32 2, !dbg !3215
  %24 = load volatile i32, i32* %23, align 4, !dbg !3216
  %25 = and i32 %24, %21, !dbg !3216
  store volatile i32 %25, i32* %23, align 4, !dbg !3216
  %26 = getelementptr inbounds [6 x i8*], [6 x i8*]* @gpt_lock_sleep_name, i32 0, i32 %0, !dbg !3217
  %27 = load i8*, i8** %26, align 4, !dbg !3217
  %28 = tail call zeroext i8 @hal_sleep_manager_set_sleep_handle(i8* noundef %27) #21, !dbg !3217
  %29 = getelementptr inbounds [6 x i8], [6 x i8]* @gpt_lock_sleep_handle, i32 0, i32 %0, !dbg !3217
  store i8 %28, i8* %29, align 1, !dbg !3217
  %30 = icmp eq i8 %28, -1, !dbg !3219
  br i1 %30, label %31, label %32, !dbg !3217

31:                                               ; preds = %12
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @__FUNCTION__.hal_gpt_init, i32 0, i32 0), i32 noundef 123, i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.5, i32 0, i32 0), i32 noundef %0) #21, !dbg !3221
  br label %32, !dbg !3221

32:                                               ; preds = %12, %3, %8, %1, %31
  %33 = phi i32 [ -3, %31 ], [ -2, %1 ], [ -4, %8 ], [ -4, %3 ], [ 0, %12 ], !dbg !3193
  ret i32 %33, !dbg !3223
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) unnamed_addr #4 !dbg !3224 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3228, metadata !DIExpression()), !dbg !3229
  %2 = load i8, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3230, !range !3203
  %3 = icmp ne i8 %2, 0, !dbg !3232
  %4 = icmp ne i32 %0, 3
  %5 = icmp ult i32 %0, 4
  %6 = or i1 %4, %3, !dbg !3233
  %7 = and i1 %5, %6, !dbg !3233
  ret i1 %7, !dbg !3234
}

; Function Attrs: optsize
declare dso_local i8* @memset(i8* noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: optsize
declare dso_local zeroext i8 @hal_sleep_manager_set_sleep_handle(i8* noundef) local_unnamed_addr #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_deinit(i32 noundef %0) local_unnamed_addr #0 !dbg !3235 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3237, metadata !DIExpression()), !dbg !3238
  %2 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #22, !dbg !3239
  br i1 %2, label %3, label %17, !dbg !3241

3:                                                ; preds = %1
  %4 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, !dbg !3242
  %5 = getelementptr inbounds %struct.gpt_context_t, %struct.gpt_context_t* %4, i32 0, i32 0, !dbg !3244
  %6 = load i32, i32* %5, align 4, !dbg !3244
  %7 = icmp eq i32 %6, 1, !dbg !3245
  br i1 %7, label %17, label %8, !dbg !3246

8:                                                ; preds = %3
  %9 = bitcast %struct.gpt_context_t* %4 to i8*, !dbg !3247
  %10 = tail call i8* @memset(i8* noundef nonnull %9, i32 noundef 0, i32 noundef 16) #21, !dbg !3248
  %11 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !3249
  store i8 0, i8* %11, align 4, !dbg !3250
  %12 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %0, !dbg !3251
  %13 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %12, align 4, !dbg !3251
  tail call void @gpt_reset_default_timer(%struct.GPT_REGISTER_T* noundef %13) #21, !dbg !3252
  %14 = getelementptr inbounds [6 x i8], [6 x i8]* @gpt_lock_sleep_handle, i32 0, i32 %0, !dbg !3253
  %15 = load i8, i8* %14, align 1, !dbg !3253
  %16 = tail call i32 @hal_sleep_manager_release_sleep_handle(i8 noundef zeroext %15) #21, !dbg !3253
  br label %17, !dbg !3255

17:                                               ; preds = %3, %1, %8
  %18 = phi i32 [ 0, %8 ], [ -2, %1 ], [ -3, %3 ], !dbg !3238
  ret i32 %18, !dbg !3256
}

; Function Attrs: optsize
declare dso_local i32 @hal_sleep_manager_release_sleep_handle(i8 noundef zeroext) local_unnamed_addr #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_get_free_run_count(i32 noundef %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #0 section ".tcm_code" !dbg !3257 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3262, metadata !DIExpression()), !dbg !3264
  call void @llvm.dbg.value(metadata i32* %1, metadata !3263, metadata !DIExpression()), !dbg !3264
  switch i32 %0, label %22 [
    i32 0, label %3
    i32 1, label %11
  ], !dbg !3265

3:                                                ; preds = %2
  %4 = load i32, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 5, i32 0), align 4, !dbg !3266
  %5 = icmp eq i32 %4, 1, !dbg !3270
  br i1 %5, label %8, label %6, !dbg !3271

6:                                                ; preds = %3
  %7 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 5), align 4, !dbg !3272
  tail call void @gpt_start_free_run_timer(%struct.GPT_REGISTER_T* noundef %7, i32 noundef 16, i32 noundef 0) #21, !dbg !3274
  store i32 1, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 5, i32 0), align 4, !dbg !3275
  br label %8, !dbg !3276

8:                                                ; preds = %6, %3
  %9 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 5), align 4, !dbg !3277
  %10 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %9) #21, !dbg !3278
  br label %20, !dbg !3279

11:                                               ; preds = %2
  %12 = load i32, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !3280
  %13 = icmp eq i32 %12, 1, !dbg !3284
  br i1 %13, label %16, label %14, !dbg !3285

14:                                               ; preds = %11
  %15 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 4), align 4, !dbg !3286
  tail call void @gpt_start_free_run_timer(%struct.GPT_REGISTER_T* noundef %15, i32 noundef 0, i32 noundef 12) #21, !dbg !3288
  store i32 1, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !3289
  br label %16, !dbg !3290

16:                                               ; preds = %14, %11
  %17 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 4), align 4, !dbg !3291
  %18 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %17) #21, !dbg !3292
  %19 = tail call i32 @gpt_clock_calibrate_count_to_us(i32 noundef %18) #21, !dbg !3293
  br label %20

20:                                               ; preds = %16, %8
  %21 = phi i32 [ %19, %16 ], [ %10, %8 ], !dbg !3294
  store i32 %21, i32* %1, align 4, !dbg !3294
  br label %22, !dbg !3295

22:                                               ; preds = %2, %20
  %23 = phi i32 [ 0, %20 ], [ -1, %2 ], !dbg !3264
  ret i32 %23, !dbg !3296
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @hal_gpt_get_duration_count(i32 noundef %0, i32 noundef %1, i32* noundef writeonly %2) local_unnamed_addr #5 section ".tcm_code" !dbg !3297 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3301, metadata !DIExpression()), !dbg !3304
  call void @llvm.dbg.value(metadata i32 %1, metadata !3302, metadata !DIExpression()), !dbg !3304
  call void @llvm.dbg.value(metadata i32* %2, metadata !3303, metadata !DIExpression()), !dbg !3304
  %4 = icmp eq i32* %2, null, !dbg !3305
  br i1 %4, label %7, label %5, !dbg !3307

5:                                                ; preds = %3
  %6 = sub i32 %1, %0, !dbg !3308
  store i32 %6, i32* %2, align 4, !dbg !3308
  br label %7, !dbg !3310

7:                                                ; preds = %3, %5
  %8 = phi i32 [ 0, %5 ], [ -1, %3 ], !dbg !3304
  ret i32 %8, !dbg !3311
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @hal_gpt_get_running_status(i32 noundef %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #6 !dbg !3312 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3317, metadata !DIExpression()), !dbg !3319
  call void @llvm.dbg.value(metadata i32* %1, metadata !3318, metadata !DIExpression()), !dbg !3319
  %3 = icmp ugt i32 %0, 5, !dbg !3320
  br i1 %3, label %7, label %4, !dbg !3322

4:                                                ; preds = %2
  %5 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !3323
  %6 = load i32, i32* %5, align 4, !dbg !3323
  store i32 %6, i32* %1, align 4, !dbg !3324
  br label %7, !dbg !3325

7:                                                ; preds = %2, %4
  %8 = phi i32 [ 0, %4 ], [ -2, %2 ], !dbg !3319
  ret i32 %8, !dbg !3326
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_register_callback(i32 noundef %0, void (i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !3327 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3331, metadata !DIExpression()), !dbg !3334
  call void @llvm.dbg.value(metadata void (i8*)* %1, metadata !3332, metadata !DIExpression()), !dbg !3334
  call void @llvm.dbg.value(metadata i8* %2, metadata !3333, metadata !DIExpression()), !dbg !3334
  %4 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #22, !dbg !3335
  br i1 %4, label %5, label %18, !dbg !3337

5:                                                ; preds = %3
  %6 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !3338
  %7 = load i32, i32* %6, align 4, !dbg !3338
  %8 = icmp eq i32 %7, 1, !dbg !3340
  br i1 %8, label %18, label %9, !dbg !3341

9:                                                ; preds = %5
  %10 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !3342
  %11 = load i8, i8* %10, align 4, !dbg !3342, !range !3203
  %12 = icmp eq i8 %11, 1, !dbg !3343
  br i1 %12, label %13, label %18, !dbg !3344

13:                                               ; preds = %9
  %14 = icmp eq void (i8*)* %1, null, !dbg !3345
  br i1 %14, label %18, label %15, !dbg !3347

15:                                               ; preds = %13
  %16 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 1, i32 0, !dbg !3348
  store void (i8*)* %1, void (i8*)** %16, align 4, !dbg !3349
  %17 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 1, i32 1, !dbg !3350
  store i8* %2, i8** %17, align 4, !dbg !3351
  tail call void @gpt_nvic_register() #21, !dbg !3352
  br label %18, !dbg !3353

18:                                               ; preds = %13, %5, %9, %3, %15
  %19 = phi i32 [ 0, %15 ], [ -2, %3 ], [ -3, %9 ], [ -3, %5 ], [ -1, %13 ], !dbg !3334
  ret i32 %19, !dbg !3354
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_start_timer_ms(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !3355 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !3360, metadata !DIExpression()), !dbg !3364
  call void @llvm.dbg.value(metadata i32 %1, metadata !3361, metadata !DIExpression()), !dbg !3364
  call void @llvm.dbg.value(metadata i32 %2, metadata !3362, metadata !DIExpression()), !dbg !3364
  %5 = bitcast i32* %4 to i8*, !dbg !3365
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5), !dbg !3365
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3363, metadata !DIExpression()), !dbg !3366
  %6 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #22, !dbg !3367
  br i1 %6, label %7, label %51, !dbg !3369

7:                                                ; preds = %3
  %8 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !3370
  %9 = load i32, i32* %8, align 4, !dbg !3370
  %10 = icmp eq i32 %9, 1, !dbg !3372
  br i1 %10, label %51, label %11, !dbg !3373

11:                                               ; preds = %7
  %12 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !3374
  %13 = load i8, i8* %12, align 4, !dbg !3374, !range !3203
  %14 = icmp eq i8 %13, 1, !dbg !3375
  br i1 %14, label %15, label %51, !dbg !3376

15:                                               ; preds = %11
  %16 = icmp ugt i32 %1, 130150523, !dbg !3377
  br i1 %16, label %51, label %17, !dbg !3379

17:                                               ; preds = %15
  %18 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !3380
  store volatile i32 %18, i32* %4, align 4, !dbg !3381
  tail call void @gpt_open_clock_source() #21, !dbg !3382
  %19 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %0, !dbg !3383
  %20 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3383
  %21 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %20, i32 0, i32 2, !dbg !3384
  %22 = load volatile i32, i32* %21, align 4, !dbg !3385
  %23 = and i32 %22, -2, !dbg !3385
  store volatile i32 %23, i32* %21, align 4, !dbg !3385
  %24 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3386
  %25 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %24, i32 0, i32 0, !dbg !3387
  %26 = load volatile i32, i32* %25, align 4, !dbg !3388
  %27 = and i32 %26, -2, !dbg !3388
  store volatile i32 %27, i32* %25, align 4, !dbg !3388
  %28 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3389
  %29 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %28, i32 0, i32 1, !dbg !3390
  store volatile i32 16, i32* %29, align 4, !dbg !3391
  %30 = tail call i32 @gpt_convert_ms_to_32k_count(i32 noundef %1) #21, !dbg !3392
  %31 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3393
  %32 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %31, i32 0, i32 6, !dbg !3394
  store volatile i32 %30, i32* %32, align 4, !dbg !3395
  %33 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3396
  %34 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %33, i32 0, i32 4, !dbg !3397
  store volatile i32 1, i32* %34, align 4, !dbg !3398
  %35 = shl i32 %2, 4, !dbg !3399
  %36 = or i32 %35, 2, !dbg !3400
  %37 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3401
  %38 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %37, i32 0, i32 0, !dbg !3402
  store volatile i32 %36, i32* %38, align 4, !dbg !3403
  %39 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4
  %40 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %39, i32 0, i32 5
  br label %41, !dbg !3404

41:                                               ; preds = %41, %17
  %42 = load volatile i32, i32* %40, align 4, !dbg !3405
  %43 = icmp eq i32 %42, 0, !dbg !3404
  br i1 %43, label %44, label %41, !dbg !3404, !llvm.loop !3406

44:                                               ; preds = %41
  %45 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %39, i32 0, i32 0, !dbg !3408
  %46 = load volatile i32, i32* %45, align 4, !dbg !3409
  %47 = or i32 %46, 1, !dbg !3409
  store volatile i32 %47, i32* %45, align 4, !dbg !3409
  %48 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3410
  %49 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %48, i32 0, i32 2, !dbg !3411
  store volatile i32 1, i32* %49, align 4, !dbg !3412
  store i32 1, i32* %8, align 4, !dbg !3413
  %50 = load volatile i32, i32* %4, align 4, !dbg !3414
  tail call void @restore_interrupt_mask(i32 noundef %50) #21, !dbg !3415
  br label %51, !dbg !3416

51:                                               ; preds = %15, %7, %11, %3, %44
  %52 = phi i32 [ 0, %44 ], [ -2, %3 ], [ -4, %11 ], [ -4, %7 ], [ -1, %15 ], !dbg !3364
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !3417
  ret i32 %52, !dbg !3417
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #7

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #7

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_delay_ms(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !3418 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3422, metadata !DIExpression()), !dbg !3423
  %2 = load i32, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 5, i32 0), align 4, !dbg !3424
  %3 = icmp eq i32 %2, 1, !dbg !3426
  br i1 %3, label %6, label %4, !dbg !3427

4:                                                ; preds = %1
  %5 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 5), align 4, !dbg !3428
  tail call void @gpt_start_free_run_timer(%struct.GPT_REGISTER_T* noundef %5, i32 noundef 16, i32 noundef 0) #21, !dbg !3430
  store i32 1, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 5, i32 0), align 4, !dbg !3431
  br label %6, !dbg !3432

6:                                                ; preds = %4, %1
  %7 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 5), align 4, !dbg !3433
  %8 = tail call i32 @gpt_convert_ms_to_32k_count(i32 noundef %0) #21, !dbg !3434
  tail call void @gpt_delay_time(%struct.GPT_REGISTER_T* noundef %7, i32 noundef %8) #21, !dbg !3435
  ret i32 0, !dbg !3436
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_start_timer_us(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !3437 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !3439, metadata !DIExpression()), !dbg !3443
  call void @llvm.dbg.value(metadata i32 %1, metadata !3440, metadata !DIExpression()), !dbg !3443
  call void @llvm.dbg.value(metadata i32 %2, metadata !3441, metadata !DIExpression()), !dbg !3443
  %5 = bitcast i32* %4 to i8*, !dbg !3444
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5), !dbg !3444
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3442, metadata !DIExpression()), !dbg !3445
  %6 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #22, !dbg !3446
  br i1 %6, label %7, label %53, !dbg !3448

7:                                                ; preds = %3
  %8 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !3449
  %9 = load i32, i32* %8, align 4, !dbg !3449
  %10 = icmp eq i32 %9, 1, !dbg !3451
  br i1 %10, label %53, label %11, !dbg !3452

11:                                               ; preds = %7
  %12 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !3453
  %13 = load i8, i8* %12, align 4, !dbg !3453, !range !3203
  %14 = icmp eq i8 %13, 1, !dbg !3454
  br i1 %14, label %15, label %53, !dbg !3455

15:                                               ; preds = %11
  %16 = getelementptr inbounds [6 x i8], [6 x i8]* @gpt_lock_sleep_handle, i32 0, i32 %0, !dbg !3456
  %17 = load i8, i8* %16, align 1, !dbg !3456
  %18 = tail call i32 @hal_sleep_manager_lock_sleep(i8 noundef zeroext %17) #21, !dbg !3456
  %19 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 3, !dbg !3458
  store i8 1, i8* %19, align 1, !dbg !3459
  %20 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !3460
  store volatile i32 %20, i32* %4, align 4, !dbg !3461
  tail call void @gpt_open_clock_source() #21, !dbg !3462
  %21 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %0, !dbg !3463
  %22 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %21, align 4, !dbg !3463
  %23 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %22, i32 0, i32 2, !dbg !3464
  %24 = load volatile i32, i32* %23, align 4, !dbg !3465
  %25 = and i32 %24, -2, !dbg !3465
  store volatile i32 %25, i32* %23, align 4, !dbg !3465
  %26 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %21, align 4, !dbg !3466
  %27 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %26, i32 0, i32 0, !dbg !3467
  %28 = load volatile i32, i32* %27, align 4, !dbg !3468
  %29 = and i32 %28, -2, !dbg !3468
  store volatile i32 %29, i32* %27, align 4, !dbg !3468
  %30 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %21, align 4, !dbg !3469
  %31 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %30, i32 0, i32 1, !dbg !3470
  store volatile i32 12, i32* %31, align 4, !dbg !3471
  %32 = tail call i32 @gpt_clock_calibrate_us_to_count(i32 noundef %1) #21, !dbg !3472
  %33 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %21, align 4, !dbg !3473
  %34 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %33, i32 0, i32 6, !dbg !3474
  store volatile i32 %32, i32* %34, align 4, !dbg !3475
  %35 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %21, align 4, !dbg !3476
  %36 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %35, i32 0, i32 4, !dbg !3477
  store volatile i32 1, i32* %36, align 4, !dbg !3478
  %37 = shl i32 %2, 4, !dbg !3479
  %38 = or i32 %37, 2, !dbg !3480
  %39 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %21, align 4, !dbg !3481
  %40 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %39, i32 0, i32 0, !dbg !3482
  store volatile i32 %38, i32* %40, align 4, !dbg !3483
  %41 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %21, align 4
  %42 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %41, i32 0, i32 5
  br label %43, !dbg !3484

43:                                               ; preds = %43, %15
  %44 = load volatile i32, i32* %42, align 4, !dbg !3485
  %45 = icmp eq i32 %44, 0, !dbg !3484
  br i1 %45, label %46, label %43, !dbg !3484, !llvm.loop !3486

46:                                               ; preds = %43
  %47 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %41, i32 0, i32 0, !dbg !3488
  %48 = load volatile i32, i32* %47, align 4, !dbg !3489
  %49 = or i32 %48, 1, !dbg !3489
  store volatile i32 %49, i32* %47, align 4, !dbg !3489
  %50 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %21, align 4, !dbg !3490
  %51 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %50, i32 0, i32 2, !dbg !3491
  store volatile i32 1, i32* %51, align 4, !dbg !3492
  %52 = load volatile i32, i32* %4, align 4, !dbg !3493
  tail call void @restore_interrupt_mask(i32 noundef %52) #21, !dbg !3494
  store i32 1, i32* %8, align 4, !dbg !3495
  br label %53, !dbg !3496

53:                                               ; preds = %7, %11, %3, %46
  %54 = phi i32 [ 0, %46 ], [ -2, %3 ], [ -4, %11 ], [ -4, %7 ], !dbg !3443
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !3497
  ret i32 %54, !dbg !3497
}

; Function Attrs: optsize
declare dso_local i32 @hal_sleep_manager_lock_sleep(i8 noundef zeroext) local_unnamed_addr #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_delay_us(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !3498 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3500, metadata !DIExpression()), !dbg !3501
  %2 = load i32, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !3502
  %3 = icmp eq i32 %2, 1, !dbg !3504
  br i1 %3, label %6, label %4, !dbg !3505

4:                                                ; preds = %1
  %5 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 4), align 4, !dbg !3506
  tail call void @gpt_start_free_run_timer(%struct.GPT_REGISTER_T* noundef %5, i32 noundef 0, i32 noundef 12) #21, !dbg !3508
  store i32 1, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !3509
  br label %6, !dbg !3510

6:                                                ; preds = %4, %1
  %7 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 4), align 4, !dbg !3511
  %8 = tail call i32 @gpt_clock_calibrate_us_to_count(i32 noundef %0) #21, !dbg !3512
  tail call void @gpt_delay_time(%struct.GPT_REGISTER_T* noundef %7, i32 noundef %8) #21, !dbg !3513
  ret i32 0, !dbg !3514
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_stop_timer(i32 noundef %0) local_unnamed_addr #0 !dbg !3515 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !3517, metadata !DIExpression()), !dbg !3519
  %3 = bitcast i32* %2 to i8*, !dbg !3520
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !3520
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3518, metadata !DIExpression()), !dbg !3521
  %4 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #22, !dbg !3522
  br i1 %4, label %5, label %27, !dbg !3524

5:                                                ; preds = %1
  %6 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !3525
  store volatile i32 %6, i32* %2, align 4, !dbg !3526
  %7 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %0, !dbg !3527
  %8 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %7, align 4, !dbg !3527
  %9 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %8, i32 0, i32 2, !dbg !3528
  %10 = load volatile i32, i32* %9, align 4, !dbg !3529
  %11 = and i32 %10, -2, !dbg !3529
  store volatile i32 %11, i32* %9, align 4, !dbg !3529
  %12 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %7, align 4, !dbg !3530
  %13 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %12, i32 0, i32 0, !dbg !3531
  %14 = load volatile i32, i32* %13, align 4, !dbg !3532
  %15 = and i32 %14, -2, !dbg !3532
  store volatile i32 %15, i32* %13, align 4, !dbg !3532
  %16 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %7, align 4, !dbg !3533
  %17 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %16, i32 0, i32 4, !dbg !3534
  store volatile i32 1, i32* %17, align 4, !dbg !3535
  %18 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !3536
  store i32 0, i32* %18, align 4, !dbg !3537
  %19 = load volatile i32, i32* %2, align 4, !dbg !3538
  tail call void @restore_interrupt_mask(i32 noundef %19) #21, !dbg !3539
  %20 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 3, !dbg !3540
  %21 = load i8, i8* %20, align 1, !dbg !3540, !range !3203
  %22 = icmp eq i8 %21, 0, !dbg !3540
  br i1 %22, label %27, label %23, !dbg !3542

23:                                               ; preds = %5
  %24 = getelementptr inbounds [6 x i8], [6 x i8]* @gpt_lock_sleep_handle, i32 0, i32 %0, !dbg !3543
  %25 = load i8, i8* %24, align 1, !dbg !3543
  %26 = tail call i32 @hal_sleep_manager_unlock_sleep(i8 noundef zeroext %25) #21, !dbg !3543
  store i8 0, i8* %20, align 1, !dbg !3546
  br label %27, !dbg !3547

27:                                               ; preds = %5, %23, %1
  %28 = phi i32 [ -2, %1 ], [ 0, %23 ], [ 0, %5 ], !dbg !3519
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !3548
  ret i32 %28, !dbg !3548
}

; Function Attrs: optsize
declare dso_local i32 @hal_sleep_manager_unlock_sleep(i8 noundef zeroext) local_unnamed_addr #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_sw_get_timer(i32* noundef writeonly %0) local_unnamed_addr #0 !dbg !3549 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !3553, metadata !DIExpression()), !dbg !3556
  %2 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !3557
  %3 = icmp ugt i32 %2, 31, !dbg !3559
  br i1 %3, label %13, label %4, !dbg !3560

4:                                                ; preds = %1
  %5 = icmp eq i32* %0, null, !dbg !3561
  br i1 %5, label %13, label %6, !dbg !3563

6:                                                ; preds = %4
  %7 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !3564
  call void @llvm.dbg.value(metadata i32 %7, metadata !3555, metadata !DIExpression()), !dbg !3556
  %8 = tail call i32 @gpt_sw_get_free_timer() #21, !dbg !3565
  call void @llvm.dbg.value(metadata i32 %8, metadata !3554, metadata !DIExpression()), !dbg !3556
  %9 = or i32 %8, -559087616, !dbg !3566
  store i32 %9, i32* %0, align 4, !dbg !3567
  %10 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %8, i32 2, !dbg !3568
  store i8 1, i8* %10, align 4, !dbg !3569
  %11 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !3570
  %12 = add i32 %11, 1, !dbg !3570
  store i32 %12, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !3570
  tail call void @restore_interrupt_mask(i32 noundef %7) #21, !dbg !3571
  br label %13, !dbg !3572

13:                                               ; preds = %4, %1, %6
  %14 = phi i32 [ 0, %6 ], [ -3, %1 ], [ -1, %4 ], !dbg !3556
  ret i32 %14, !dbg !3573
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @hal_gpt_sw_free_timer(i32 noundef %0) local_unnamed_addr #8 !dbg !3574 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !3576, metadata !DIExpression()), !dbg !3578
  %3 = bitcast i32* %2 to i8*, !dbg !3579
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !3579
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3577, metadata !DIExpression()), !dbg !3580
  %4 = and i32 %0, -559087616, !dbg !3581
  %5 = icmp eq i32 %4, -559087616, !dbg !3583
  br i1 %5, label %6, label %24, !dbg !3584

6:                                                ; preds = %1
  %7 = and i32 %0, 65535, !dbg !3585
  store volatile i32 %7, i32* %2, align 4, !dbg !3586
  %8 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !3587
  %9 = icmp eq i32 %8, 0, !dbg !3589
  br i1 %9, label %24, label %10, !dbg !3590

10:                                               ; preds = %6
  %11 = load volatile i32, i32* %2, align 4, !dbg !3591
  %12 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %11, i32 3, !dbg !3593
  %13 = load i8, i8* %12, align 1, !dbg !3593, !range !3203
  %14 = icmp eq i8 %13, 0, !dbg !3593
  br i1 %14, label %15, label %24, !dbg !3594

15:                                               ; preds = %10
  %16 = load volatile i32, i32* %2, align 4, !dbg !3595
  %17 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %16, i32 2, !dbg !3597
  %18 = load i8, i8* %17, align 4, !dbg !3597, !range !3203
  %19 = icmp eq i8 %18, 1, !dbg !3598
  br i1 %19, label %20, label %24, !dbg !3599

20:                                               ; preds = %15
  %21 = load volatile i32, i32* %2, align 4, !dbg !3600
  %22 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %21, i32 2, !dbg !3601
  store i8 0, i8* %22, align 4, !dbg !3602
  %23 = add i32 %8, -1, !dbg !3603
  store i32 %23, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !3603
  br label %24, !dbg !3604

24:                                               ; preds = %15, %10, %6, %1, %20
  %25 = phi i32 [ 0, %20 ], [ -1, %1 ], [ -3, %6 ], [ -3, %10 ], [ -3, %15 ], !dbg !3578
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !3605
  ret i32 %25, !dbg !3605
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_sw_start_timer_ms(i32 noundef %0, i32 noundef %1, void (i8*)* noundef %2, i8* noundef %3) local_unnamed_addr #0 !dbg !3606 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3610, metadata !DIExpression()), !dbg !3617
  call void @llvm.dbg.value(metadata i32 %1, metadata !3611, metadata !DIExpression()), !dbg !3617
  call void @llvm.dbg.value(metadata void (i8*)* %2, metadata !3612, metadata !DIExpression()), !dbg !3617
  call void @llvm.dbg.value(metadata i8* %3, metadata !3613, metadata !DIExpression()), !dbg !3617
  %5 = and i32 %0, -559087616, !dbg !3618
  %6 = icmp ne i32 %5, -559087616, !dbg !3620
  %7 = icmp eq void (i8*)* %2, null
  %8 = or i1 %6, %7, !dbg !3621
  call void @llvm.dbg.value(metadata i32 %0, metadata !3616, metadata !DIExpression(DW_OP_constu, 65535, DW_OP_and, DW_OP_stack_value)), !dbg !3617
  br i1 %8, label %44, label %9, !dbg !3621

9:                                                ; preds = %4
  %10 = and i32 %0, 65535, !dbg !3622
  call void @llvm.dbg.value(metadata i32 %10, metadata !3616, metadata !DIExpression()), !dbg !3617
  %11 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %10, i32 3, !dbg !3623
  %12 = load i8, i8* %11, align 1, !dbg !3623, !range !3203
  %13 = icmp eq i8 %12, 0, !dbg !3623
  br i1 %13, label %14, label %44, !dbg !3625

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %10, i32 2, !dbg !3626
  %16 = load i8, i8* %15, align 4, !dbg !3626, !range !3203
  %17 = icmp eq i8 %16, 1, !dbg !3628
  br i1 %17, label %18, label %44, !dbg !3629

18:                                               ; preds = %14
  %19 = icmp ugt i32 %1, 130150523, !dbg !3630
  br i1 %19, label %44, label %20, !dbg !3632

20:                                               ; preds = %18
  %21 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !3633
  call void @llvm.dbg.value(metadata i32 %21, metadata !3615, metadata !DIExpression()), !dbg !3617
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3634
  %22 = load i8, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 5), align 4, !dbg !3635, !range !3203
  %23 = icmp eq i8 %22, 0, !dbg !3637
  br i1 %23, label %24, label %27, !dbg !3638

24:                                               ; preds = %20
  %25 = tail call i32 @hal_gpt_init(i32 noundef 3) #22, !dbg !3639
  %26 = tail call i32 @hal_gpt_register_callback(i32 noundef 3, void (i8*)* noundef nonnull @gpt_sw_handler, i8* noundef null) #22, !dbg !3641
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 5), align 4, !dbg !3642
  br label %27, !dbg !3643

27:                                               ; preds = %24, %20
  %28 = tail call i32 @hal_gpt_stop_timer(i32 noundef 3) #22, !dbg !3644
  %29 = load i8, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 6), align 1, !dbg !3645, !range !3203
  %30 = icmp eq i8 %29, 0, !dbg !3647
  br i1 %30, label %31, label %34, !dbg !3648

31:                                               ; preds = %27
  %32 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4, !dbg !3649
  %33 = tail call i32 @gpt_sw_get_current_time_ms(%struct.GPT_REGISTER_T* noundef %32) #21, !dbg !3651
  call void @llvm.dbg.value(metadata i32 %33, metadata !3614, metadata !DIExpression()), !dbg !3617
  br label %34, !dbg !3652

34:                                               ; preds = %27, %31
  %35 = phi i32 [ %33, %31 ], [ 0, %27 ], !dbg !3653
  call void @llvm.dbg.value(metadata i32 %35, metadata !3614, metadata !DIExpression()), !dbg !3617
  %36 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3654
  %37 = add i32 %36, %35, !dbg !3654
  store i32 %37, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3654
  %38 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3655
  %39 = add i32 %38, 1, !dbg !3655
  store i32 %39, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3655
  store i8 1, i8* %11, align 1, !dbg !3656
  %40 = add i32 %37, %1, !dbg !3657
  %41 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %10, i32 1, !dbg !3658
  store i32 %40, i32* %41, align 4, !dbg !3659
  %42 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %10, i32 0, i32 0, !dbg !3660
  store void (i8*)* %2, void (i8*)** %42, align 4, !dbg !3661
  %43 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %10, i32 0, i32 1, !dbg !3662
  store i8* %3, i8** %43, align 4, !dbg !3663
  tail call void @gpt_sw_start_timer() #21, !dbg !3664
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3665
  tail call void @restore_interrupt_mask(i32 noundef %21) #21, !dbg !3666
  br label %44, !dbg !3667

44:                                               ; preds = %18, %14, %9, %4, %34
  %45 = phi i32 [ 0, %34 ], [ -1, %4 ], [ -3, %9 ], [ -3, %14 ], [ -1, %18 ], !dbg !3617
  ret i32 %45, !dbg !3668
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_sw_stop_timer_ms(i32 noundef %0) local_unnamed_addr #0 !dbg !3669 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3671, metadata !DIExpression()), !dbg !3675
  %2 = and i32 %0, -559087616, !dbg !3676
  %3 = icmp eq i32 %2, -559087616, !dbg !3678
  br i1 %3, label %4, label %31, !dbg !3679

4:                                                ; preds = %1
  %5 = and i32 %0, 65535, !dbg !3680
  call void @llvm.dbg.value(metadata i32 %5, metadata !3674, metadata !DIExpression()), !dbg !3675
  %6 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %5, i32 3, !dbg !3681
  %7 = load i8, i8* %6, align 1, !dbg !3681, !range !3203
  %8 = icmp eq i8 %7, 1, !dbg !3683
  br i1 %8, label %9, label %31, !dbg !3684

9:                                                ; preds = %4
  %10 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %5, i32 2, !dbg !3685
  %11 = load i8, i8* %10, align 4, !dbg !3685, !range !3203
  %12 = icmp eq i8 %11, 1, !dbg !3687
  br i1 %12, label %13, label %31, !dbg !3688

13:                                               ; preds = %9
  %14 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !3689
  call void @llvm.dbg.value(metadata i32 %14, metadata !3673, metadata !DIExpression()), !dbg !3675
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3690
  %15 = tail call i32 @hal_gpt_stop_timer(i32 noundef 3) #22, !dbg !3691
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3692
  %16 = load i8, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 6), align 1, !dbg !3693, !range !3203
  %17 = icmp eq i8 %16, 0, !dbg !3695
  br i1 %17, label %18, label %21, !dbg !3696

18:                                               ; preds = %13
  %19 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4, !dbg !3697
  %20 = tail call i32 @gpt_sw_get_current_time_ms(%struct.GPT_REGISTER_T* noundef %19) #21, !dbg !3699
  call void @llvm.dbg.value(metadata i32 %20, metadata !3672, metadata !DIExpression()), !dbg !3675
  br label %21, !dbg !3700

21:                                               ; preds = %13, %18
  %22 = phi i32 [ %20, %18 ], [ 0, %13 ], !dbg !3701
  call void @llvm.dbg.value(metadata i32 %22, metadata !3672, metadata !DIExpression()), !dbg !3675
  %23 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3702
  %24 = add i32 %23, %22, !dbg !3702
  store i32 %24, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3702
  %25 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3703
  %26 = add i32 %25, -1, !dbg !3703
  store i32 %26, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3703
  store i8 0, i8* %6, align 1, !dbg !3704
  %27 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3705
  %28 = icmp eq i32 %27, 0, !dbg !3707
  br i1 %28, label %30, label %29, !dbg !3708

29:                                               ; preds = %21
  tail call void @gpt_sw_start_timer() #21, !dbg !3709
  br label %30, !dbg !3711

30:                                               ; preds = %21, %29
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3712
  tail call void @restore_interrupt_mask(i32 noundef %14) #21, !dbg !3713
  br label %31, !dbg !3714

31:                                               ; preds = %9, %4, %1, %30
  %32 = phi i32 [ 0, %30 ], [ -1, %1 ], [ -3, %4 ], [ -3, %9 ], !dbg !3675
  ret i32 %32, !dbg !3715
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_sw_get_remaining_time_ms(i32 noundef %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #0 !dbg !3716 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3720, metadata !DIExpression()), !dbg !3725
  call void @llvm.dbg.value(metadata i32* %1, metadata !3721, metadata !DIExpression()), !dbg !3725
  %3 = and i32 %0, -559087616, !dbg !3726
  %4 = icmp eq i32 %3, -559087616, !dbg !3728
  br i1 %4, label %5, label %20, !dbg !3729

5:                                                ; preds = %2
  %6 = and i32 %0, 65535, !dbg !3730
  call void @llvm.dbg.value(metadata i32 %6, metadata !3724, metadata !DIExpression()), !dbg !3725
  %7 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %6, i32 2, !dbg !3731
  %8 = load i8, i8* %7, align 4, !dbg !3731, !range !3203
  %9 = icmp eq i8 %8, 1, !dbg !3733
  br i1 %9, label %10, label %20, !dbg !3734

10:                                               ; preds = %5
  %11 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !3735
  call void @llvm.dbg.value(metadata i32 %11, metadata !3723, metadata !DIExpression()), !dbg !3725
  %12 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3736
  %13 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4, !dbg !3737
  %14 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %13, i32 0, i32 5, !dbg !3738
  %15 = load volatile i32, i32* %14, align 4, !dbg !3738
  %16 = add i32 %15, %12, !dbg !3739
  call void @llvm.dbg.value(metadata i32 %16, metadata !3722, metadata !DIExpression()), !dbg !3725
  %17 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %6, i32 1, !dbg !3740
  %18 = load i32, i32* %17, align 4, !dbg !3740
  %19 = tail call i32 @llvm.usub.sat.i32(i32 %18, i32 %16), !dbg !3742
  store i32 %19, i32* %1, align 4, !dbg !3743
  tail call void @restore_interrupt_mask(i32 noundef %11) #21, !dbg !3744
  br label %20, !dbg !3745

20:                                               ; preds = %5, %2, %10
  %21 = phi i32 [ 0, %10 ], [ -1, %2 ], [ -3, %5 ], !dbg !3725
  ret i32 %21, !dbg !3746
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.usub.sat.i32(i32, i32) #1

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @gpt_calibrate_algorithm(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #9 section ".tcm_code" !dbg !3747 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3751, metadata !DIExpression()), !dbg !3758
  call void @llvm.dbg.value(metadata i32 %1, metadata !3752, metadata !DIExpression()), !dbg !3758
  call void @llvm.dbg.value(metadata i32 %2, metadata !3753, metadata !DIExpression()), !dbg !3758
  %4 = and i32 %0, 65535, !dbg !3759
  %5 = mul i32 %4, %1, !dbg !3760
  call void @llvm.dbg.value(metadata i32 %5, metadata !3754, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !3758
  %6 = lshr i32 %0, 16, !dbg !3761
  %7 = mul i32 %6, %1, !dbg !3762
  call void @llvm.dbg.value(metadata i32 %7, metadata !3754, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !3758
  %8 = and i32 %5, 65535, !dbg !3763
  call void @llvm.dbg.value(metadata i32 %8, metadata !3756, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !3758
  %9 = lshr i32 %5, 16, !dbg !3764
  %10 = add i32 %9, %7, !dbg !3765
  call void @llvm.dbg.value(metadata i32 %10, metadata !3756, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !3758
  %11 = udiv i32 %10, %2, !dbg !3766
  call void @llvm.dbg.value(metadata i32 %11, metadata !3757, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !3758
  %12 = mul i32 %11, %2
  %13 = sub i32 %10, %12
  %14 = shl i32 %13, 16, !dbg !3767
  %15 = or i32 %14, %8, !dbg !3768
  %16 = udiv i32 %15, %2, !dbg !3769
  call void @llvm.dbg.value(metadata i32 %16, metadata !3757, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !3758
  %17 = shl i32 %11, 16, !dbg !3770
  %18 = add i32 %16, %17, !dbg !3771
  ret i32 %18, !dbg !3772
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) local_unnamed_addr #10 section ".tcm_code" !dbg !3773 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3777, metadata !DIExpression()), !dbg !3778
  %2 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 5, !dbg !3779
  %3 = load volatile i32, i32* %2, align 4, !dbg !3779
  ret i32 %3, !dbg !3780
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @gpt_convert_ms_to_32k_count(i32 noundef %0) local_unnamed_addr #9 section ".tcm_code" !dbg !3781 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3785, metadata !DIExpression()), !dbg !3786
  %2 = shl i32 %0, 5, !dbg !3787
  %3 = mul i32 %0, 7, !dbg !3788
  %4 = udiv i32 %3, 10, !dbg !3789
  %5 = add i32 %4, %2, !dbg !3790
  %6 = mul i32 %0, 6, !dbg !3791
  %7 = udiv i32 %6, 100, !dbg !3792
  %8 = add i32 %5, %7, !dbg !3793
  %9 = shl i32 %0, 3, !dbg !3794
  %10 = udiv i32 %9, 1000, !dbg !3795
  %11 = add i32 %8, %10, !dbg !3796
  ret i32 %11, !dbg !3797
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_get_lfosc_clock() local_unnamed_addr #0 section ".tcm_code" !dbg !317 {
  %1 = load i1, i1* @gpt_get_lfosc_clock.flag, align 1, !dbg !3798
  br i1 %1, label %10, label %2, !dbg !3800

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @is_clk_use_lfosc() #21, !dbg !3801
  br i1 %3, label %4, label %6, !dbg !3804

4:                                                ; preds = %2
  %5 = tail call i32 @clock_get_freq_lfosc() #21, !dbg !3805
  store i32 %5, i32* @gpt_clock_source, align 4, !dbg !3807
  switch i32 %5, label %8 [
    i32 26000, label %6
    i32 0, label %6
  ], !dbg !3808

6:                                                ; preds = %2, %4, %4
  %7 = phi i1 [ false, %4 ], [ false, %4 ], [ true, %2 ]
  store i32 26000, i32* @gpt_clock_source, align 4, !dbg !3810
  br label %8, !dbg !3810

8:                                                ; preds = %6, %4
  %9 = phi i1 [ true, %4 ], [ %7, %6 ]
  store i1 %9, i1* @gpt_get_lfosc_clock.flag, align 1, !dbg !3810
  br label %10, !dbg !3811

10:                                               ; preds = %8, %0
  ret void, !dbg !3811
}

; Function Attrs: optsize
declare dso_local i32 @clock_get_freq_lfosc() local_unnamed_addr #2

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_open_clock_source() local_unnamed_addr #0 section ".tcm_code" !dbg !3812 {
  %1 = tail call zeroext i1 @hal_clock_is_enabled(i32 noundef 66) #21, !dbg !3813
  br i1 %1, label %4, label %2, !dbg !3815

2:                                                ; preds = %0
  %3 = tail call i32 @hal_clock_enable(i32 noundef 66) #21, !dbg !3816
  br label %4, !dbg !3818

4:                                                ; preds = %2, %0
  ret void, !dbg !3819
}

; Function Attrs: optsize
declare dso_local zeroext i1 @hal_clock_is_enabled(i32 noundef) local_unnamed_addr #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpt_clock_calibrate_us_to_count(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !3820 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3822, metadata !DIExpression()), !dbg !3823
  tail call void @gpt_get_lfosc_clock() #22, !dbg !3824
  %2 = tail call zeroext i1 @is_clk_use_lfosc() #21, !dbg !3825
  br i1 %2, label %3, label %6, !dbg !3827

3:                                                ; preds = %1
  %4 = load i32, i32* @gpt_clock_source, align 4, !dbg !3828
  %5 = tail call i32 @gpt_calibrate_algorithm(i32 noundef %0, i32 noundef %4, i32 noundef 26000) #22, !dbg !3830
  br label %6, !dbg !3831

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ %0, %1 ], !dbg !3832
  ret i32 %7, !dbg !3833
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpt_clock_calibrate_count_to_us(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !3834 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3836, metadata !DIExpression()), !dbg !3837
  tail call void @gpt_get_lfosc_clock() #22, !dbg !3838
  %2 = tail call zeroext i1 @is_clk_use_lfosc() #21, !dbg !3839
  br i1 %2, label %3, label %6, !dbg !3841

3:                                                ; preds = %1
  %4 = load i32, i32* @gpt_clock_source, align 4, !dbg !3842
  %5 = tail call i32 @gpt_calibrate_algorithm(i32 noundef %0, i32 noundef 26000, i32 noundef %4) #22, !dbg !3844
  br label %6, !dbg !3845

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ %0, %1 ], !dbg !3846
  ret i32 %7, !dbg !3847
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_start_free_run_timer(%struct.GPT_REGISTER_T* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 section ".tcm_code" !dbg !3848 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3852, metadata !DIExpression()), !dbg !3855
  call void @llvm.dbg.value(metadata i32 %1, metadata !3853, metadata !DIExpression()), !dbg !3855
  call void @llvm.dbg.value(metadata i32 %2, metadata !3854, metadata !DIExpression()), !dbg !3855
  tail call void @gpt_open_clock_source() #22, !dbg !3856
  %4 = or i32 %2, %1, !dbg !3857
  %5 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 1, !dbg !3858
  store volatile i32 %4, i32* %5, align 4, !dbg !3859
  %6 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 0, !dbg !3860
  store volatile i32 49, i32* %6, align 4, !dbg !3861
  ret void, !dbg !3862
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gpt_delay_time(%struct.GPT_REGISTER_T* noundef %0, i32 noundef %1) local_unnamed_addr #3 section ".tcm_code" !dbg !3863 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3867, metadata !DIExpression()), !dbg !3871
  call void @llvm.dbg.value(metadata i32 %1, metadata !3868, metadata !DIExpression()), !dbg !3871
  call void @llvm.dbg.value(metadata i32 0, metadata !3869, metadata !DIExpression()), !dbg !3871
  call void @llvm.dbg.value(metadata i32 0, metadata !3870, metadata !DIExpression()), !dbg !3871
  %3 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) #22, !dbg !3872
  call void @llvm.dbg.value(metadata i32 %3, metadata !3870, metadata !DIExpression()), !dbg !3871
  %4 = add i32 %1, 1, !dbg !3873
  %5 = add i32 %4, %3, !dbg !3874
  call void @llvm.dbg.value(metadata i32 %5, metadata !3869, metadata !DIExpression()), !dbg !3871
  %6 = icmp ugt i32 %5, %3, !dbg !3875
  br i1 %6, label %7, label %10, !dbg !3877

7:                                                ; preds = %2, %7
  %8 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) #22, !dbg !3878
  %9 = icmp ult i32 %8, %5, !dbg !3880
  br i1 %9, label %7, label %16, !dbg !3881, !llvm.loop !3882

10:                                               ; preds = %2, %10
  %11 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) #22, !dbg !3884
  %12 = icmp ult i32 %11, %3, !dbg !3886
  br i1 %12, label %13, label %10, !dbg !3887, !llvm.loop !3888

13:                                               ; preds = %10, %13
  %14 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) #22, !dbg !3890
  %15 = icmp ult i32 %14, %5, !dbg !3891
  br i1 %15, label %13, label %16, !dbg !3892, !llvm.loop !3893

16:                                               ; preds = %13, %7
  ret void, !dbg !3895
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gpt_reset_default_timer(%struct.GPT_REGISTER_T* noundef %0) local_unnamed_addr #3 !dbg !3896 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3900, metadata !DIExpression()), !dbg !3901
  %2 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 2, !dbg !3902
  store volatile i32 0, i32* %2, align 4, !dbg !3903
  %3 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 0, !dbg !3904
  store volatile i32 0, i32* %3, align 4, !dbg !3905
  %4 = load volatile i32, i32* %3, align 4, !dbg !3906
  %5 = or i32 %4, 2, !dbg !3906
  store volatile i32 %5, i32* %3, align 4, !dbg !3906
  %6 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 5
  br label %7, !dbg !3907

7:                                                ; preds = %7, %1
  %8 = load volatile i32, i32* %6, align 4, !dbg !3908
  %9 = icmp eq i32 %8, 0, !dbg !3907
  br i1 %9, label %10, label %7, !dbg !3907, !llvm.loop !3909

10:                                               ; preds = %7
  %11 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 1, !dbg !3911
  store volatile i32 16, i32* %11, align 4, !dbg !3912
  %12 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 4, !dbg !3913
  store volatile i32 1, i32* %12, align 4, !dbg !3914
  %13 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 6, !dbg !3915
  store volatile i32 -1, i32* %13, align 4, !dbg !3916
  %14 = icmp eq %struct.GPT_REGISTER_T* %0, inttoptr (i32 -1575747328 to %struct.GPT_REGISTER_T*), !dbg !3917
  br i1 %14, label %15, label %16, !dbg !3919

15:                                               ; preds = %10
  store volatile i32 0, i32* inttoptr (i32 -1575747296 to i32*), align 32, !dbg !3920
  br label %16, !dbg !3922

16:                                               ; preds = %15, %10
  ret void, !dbg !3923
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @gpt_save_and_mask_interrupt(%struct.GPT_REGISTER_T* noundef %0) local_unnamed_addr #8 !dbg !3924 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3926, metadata !DIExpression()), !dbg !3928
  %3 = bitcast i32* %2 to i8*, !dbg !3929
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !3929
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3927, metadata !DIExpression()), !dbg !3930
  %4 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 2, !dbg !3931
  %5 = load volatile i32, i32* %4, align 4, !dbg !3931
  store volatile i32 %5, i32* %2, align 4, !dbg !3932
  %6 = load volatile i32, i32* %4, align 4, !dbg !3933
  %7 = and i32 %6, -2, !dbg !3933
  store volatile i32 %7, i32* %4, align 4, !dbg !3933
  %8 = load volatile i32, i32* %2, align 4, !dbg !3934
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !3935
  ret i32 %8, !dbg !3936
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gpt_restore_interrupt(%struct.GPT_REGISTER_T* noundef %0, i32 noundef %1) local_unnamed_addr #3 !dbg !3937 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3941, metadata !DIExpression()), !dbg !3943
  call void @llvm.dbg.value(metadata i32 %1, metadata !3942, metadata !DIExpression()), !dbg !3943
  %3 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 2, !dbg !3944
  store volatile i32 %1, i32* %3, align 4, !dbg !3945
  ret void, !dbg !3946
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_interrupt_handler(i32 %0) #0 !dbg !3947 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !3949, metadata !DIExpression()), !dbg !3954
  %5 = bitcast i32* %2 to i8*, !dbg !3955
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5), !dbg !3955
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3951, metadata !DIExpression()), !dbg !3956
  %6 = bitcast i32* %3 to i8*, !dbg !3957
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6), !dbg !3957
  call void @llvm.dbg.declare(metadata i32* %3, metadata !3952, metadata !DIExpression()), !dbg !3958
  %7 = bitcast i32* %4 to i8*, !dbg !3959
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7), !dbg !3959
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3953, metadata !DIExpression()), !dbg !3960
  call void @llvm.dbg.value(metadata i32 undef, metadata !3949, metadata !DIExpression()), !dbg !3954
  call void @llvm.dbg.value(metadata i32 0, metadata !3950, metadata !DIExpression()), !dbg !3954
  br label %8, !dbg !3961

8:                                                ; preds = %1, %33
  %9 = phi i32 [ 0, %1 ], [ %36, %33 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !3950, metadata !DIExpression()), !dbg !3954
  %10 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %9, !dbg !3963
  %11 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %10, align 4, !dbg !3963
  %12 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %11, i32 0, i32 3, !dbg !3966
  %13 = load volatile i32, i32* %12, align 4, !dbg !3966
  store volatile i32 %13, i32* %3, align 4, !dbg !3967
  %14 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %11, i32 0, i32 2, !dbg !3968
  %15 = load volatile i32, i32* %14, align 4, !dbg !3968
  store volatile i32 %15, i32* %4, align 4, !dbg !3969
  %16 = tail call i32 @gpt_save_and_mask_interrupt(%struct.GPT_REGISTER_T* noundef %11) #22, !dbg !3970
  store volatile i32 %16, i32* %2, align 4, !dbg !3971
  %17 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %10, align 4, !dbg !3972
  %18 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %17, i32 0, i32 4, !dbg !3973
  store volatile i32 1, i32* %18, align 4, !dbg !3974
  %19 = load volatile i32, i32* %3, align 4, !dbg !3975
  %20 = and i32 %19, 1, !dbg !3977
  %21 = icmp eq i32 %20, 0, !dbg !3977
  br i1 %21, label %33, label %22, !dbg !3978

22:                                               ; preds = %8
  %23 = load volatile i32, i32* %4, align 4, !dbg !3979
  %24 = and i32 %23, 1, !dbg !3980
  %25 = icmp eq i32 %24, 0, !dbg !3980
  br i1 %25, label %33, label %26, !dbg !3981

26:                                               ; preds = %22
  %27 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %9, i32 1, i32 0, !dbg !3982
  %28 = load void (i8*)*, void (i8*)** %27, align 4, !dbg !3982
  %29 = icmp eq void (i8*)* %28, null, !dbg !3985
  br i1 %29, label %33, label %30, !dbg !3986

30:                                               ; preds = %26
  %31 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %9, i32 1, i32 1, !dbg !3987
  %32 = load i8*, i8** %31, align 4, !dbg !3987
  tail call void %28(i8* noundef %32) #21, !dbg !3989
  br label %33, !dbg !3990

33:                                               ; preds = %26, %30, %22, %8
  %34 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %10, align 4, !dbg !3991
  %35 = load volatile i32, i32* %2, align 4, !dbg !3992
  tail call void @gpt_restore_interrupt(%struct.GPT_REGISTER_T* noundef %34, i32 noundef %35) #22, !dbg !3993
  %36 = add nuw nsw i32 %9, 1, !dbg !3994
  call void @llvm.dbg.value(metadata i32 %36, metadata !3950, metadata !DIExpression()), !dbg !3954
  %37 = icmp eq i32 %36, 6, !dbg !3995
  br i1 %37, label %38, label %8, !dbg !3961, !llvm.loop !3996

38:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7), !dbg !3998
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6), !dbg !3998
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !3998
  ret void, !dbg !3998
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_nvic_register() local_unnamed_addr #0 !dbg !3999 {
  %1 = tail call i32 @hal_nvic_disable_irq(i32 noundef 11) #21, !dbg !4000
  %2 = tail call i32 @hal_nvic_register_isr_handler(i32 noundef 11, void (i32)* noundef nonnull @gpt_interrupt_handler) #21, !dbg !4001
  %3 = tail call i32 @hal_nvic_enable_irq(i32 noundef 11) #21, !dbg !4002
  ret void, !dbg !4003
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @gpt_sw_get_current_time_ms(%struct.GPT_REGISTER_T* noundef %0) local_unnamed_addr #8 !dbg !4004 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !4006, metadata !DIExpression()), !dbg !4011
  %3 = bitcast i32* %2 to i8*, !dbg !4012
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !4012
  call void @llvm.dbg.declare(metadata i32* %2, metadata !4007, metadata !DIExpression()), !dbg !4013
  %4 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) #22, !dbg !4014
  call void @llvm.dbg.value(metadata i32 %4, metadata !4008, metadata !DIExpression()), !dbg !4011
  %5 = lshr i32 %4, 15, !dbg !4015
  call void @llvm.dbg.value(metadata i32 %5, metadata !4009, metadata !DIExpression()), !dbg !4011
  %6 = and i32 %4, 32767, !dbg !4016
  %7 = mul nuw nsw i32 %6, 1000, !dbg !4017
  %8 = add nuw nsw i32 %7, 16384, !dbg !4018
  %9 = lshr i32 %8, 15, !dbg !4019
  call void @llvm.dbg.value(metadata i32 %9, metadata !4010, metadata !DIExpression()), !dbg !4011
  %10 = mul nuw nsw i32 %5, 1000, !dbg !4020
  %11 = add nuw nsw i32 %9, %10, !dbg !4021
  store volatile i32 %11, i32* %2, align 4, !dbg !4022
  %12 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4, !dbg !4023
  %13 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %12, i32 0, i32 0, !dbg !4024
  %14 = load volatile i32, i32* %13, align 4, !dbg !4025
  %15 = or i32 %14, 2, !dbg !4025
  store volatile i32 %15, i32* %13, align 4, !dbg !4025
  %16 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4
  %17 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %16, i32 0, i32 5
  br label %18, !dbg !4026

18:                                               ; preds = %18, %1
  %19 = load volatile i32, i32* %17, align 4, !dbg !4027
  %20 = icmp eq i32 %19, 0, !dbg !4026
  br i1 %20, label %21, label %18, !dbg !4026, !llvm.loop !4028

21:                                               ; preds = %18
  %22 = load volatile i32, i32* %2, align 4, !dbg !4030
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !4031
  ret i32 %22, !dbg !4032
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @gpt_sw_get_free_timer() local_unnamed_addr #11 !dbg !4033 {
  call void @llvm.dbg.value(metadata i32 0, metadata !4037, metadata !DIExpression()), !dbg !4038
  br label %1, !dbg !4039

1:                                                ; preds = %0, %6
  %2 = phi i32 [ 0, %0 ], [ %7, %6 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !4037, metadata !DIExpression()), !dbg !4038
  %3 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %2, i32 2, !dbg !4041
  %4 = load i8, i8* %3, align 4, !dbg !4041, !range !3203
  %5 = icmp eq i8 %4, 1, !dbg !4045
  br i1 %5, label %6, label %9, !dbg !4046

6:                                                ; preds = %1
  %7 = add nuw nsw i32 %2, 1, !dbg !4047
  call void @llvm.dbg.value(metadata i32 %7, metadata !4037, metadata !DIExpression()), !dbg !4038
  %8 = icmp eq i32 %7, 32, !dbg !4048
  br i1 %8, label %9, label %1, !dbg !4039, !llvm.loop !4049

9:                                                ; preds = %6, %1
  %10 = phi i32 [ %2, %1 ], [ 32, %6 ], !dbg !4038
  ret i32 %10, !dbg !4051
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_sw_start_timer() local_unnamed_addr #0 !dbg !4052 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = bitcast i32* %1 to i8*, !dbg !4056
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !4056
  %4 = bitcast i32* %2 to i8*, !dbg !4056
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #23, !dbg !4056
  %5 = load i8, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 6), align 1, !dbg !4057, !range !3203
  %6 = icmp eq i8 %5, 0, !dbg !4057
  br i1 %6, label %7, label %11, !dbg !4059

7:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32* %1, metadata !4054, metadata !DIExpression(DW_OP_deref)), !dbg !4060
  call void @llvm.dbg.value(metadata i32* %2, metadata !4055, metadata !DIExpression(DW_OP_deref)), !dbg !4060
  call void @gpt_sw_get_minimum_left_time_ms(i32* noundef nonnull %1, i32* noundef nonnull %2) #22, !dbg !4061
  %8 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !4062
  store i32 %8, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 2), align 4, !dbg !4063
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !4064
  %9 = load i32, i32* %1, align 4, !dbg !4065
  call void @llvm.dbg.value(metadata i32 %9, metadata !4054, metadata !DIExpression()), !dbg !4060
  %10 = tail call i32 @hal_gpt_start_timer_ms(i32 noundef 3, i32 noundef %9, i32 noundef 0) #21, !dbg !4066
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !4067
  br label %11, !dbg !4068

11:                                               ; preds = %0, %7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #23, !dbg !4068
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !4068
  ret void, !dbg !4068
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local void @gpt_sw_get_minimum_left_time_ms(i32* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #12 !dbg !4069 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !4073, metadata !DIExpression()), !dbg !4078
  call void @llvm.dbg.value(metadata i32* %1, metadata !4074, metadata !DIExpression()), !dbg !4078
  call void @llvm.dbg.value(metadata i32 -1, metadata !4076, metadata !DIExpression()), !dbg !4078
  call void @llvm.dbg.value(metadata i32 0, metadata !4075, metadata !DIExpression()), !dbg !4078
  br label %3, !dbg !4079

3:                                                ; preds = %2, %13
  %4 = phi i32 [ 0, %2 ], [ %15, %13 ]
  %5 = phi i32 [ -1, %2 ], [ %14, %13 ]
  call void @llvm.dbg.value(metadata i32 %4, metadata !4075, metadata !DIExpression()), !dbg !4078
  call void @llvm.dbg.value(metadata i32 %5, metadata !4076, metadata !DIExpression()), !dbg !4078
  %6 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %4, i32 3, !dbg !4081
  %7 = load i8, i8* %6, align 1, !dbg !4081, !range !3203
  %8 = icmp eq i8 %7, 0, !dbg !4081
  br i1 %8, label %13, label %9, !dbg !4085

9:                                                ; preds = %3
  %10 = tail call i32 @gpt_sw_absolute_value(i32 noundef %4) #22, !dbg !4086
  call void @llvm.dbg.value(metadata i32 %10, metadata !4077, metadata !DIExpression()), !dbg !4078
  %11 = icmp ult i32 %10, %5, !dbg !4088
  br i1 %11, label %12, label %13, !dbg !4090

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %10, metadata !4076, metadata !DIExpression()), !dbg !4078
  store i32 %4, i32* %1, align 4, !dbg !4091
  br label %13, !dbg !4093

13:                                               ; preds = %3, %12, %9
  %14 = phi i32 [ %10, %12 ], [ %5, %9 ], [ %5, %3 ], !dbg !4078
  call void @llvm.dbg.value(metadata i32 %14, metadata !4076, metadata !DIExpression()), !dbg !4078
  %15 = add nuw nsw i32 %4, 1, !dbg !4094
  call void @llvm.dbg.value(metadata i32 %15, metadata !4075, metadata !DIExpression()), !dbg !4078
  %16 = icmp eq i32 %15, 32, !dbg !4095
  br i1 %16, label %17, label %3, !dbg !4079, !llvm.loop !4096

17:                                               ; preds = %13
  store i32 %14, i32* %0, align 4, !dbg !4098
  ret void, !dbg !4099
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @gpt_sw_absolute_value(i32 noundef %0) local_unnamed_addr #4 !dbg !4100 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4102, metadata !DIExpression()), !dbg !4106
  %2 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %0, i32 1, !dbg !4107
  %3 = load i32, i32* %2, align 4, !dbg !4107
  %4 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 2), align 4, !dbg !4107
  %5 = sub i32 %3, %4, !dbg !4107
  call void @llvm.dbg.value(metadata i32 %5, metadata !4103, metadata !DIExpression()), !dbg !4106
  %6 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !4108
  %7 = sub i32 %6, %4, !dbg !4108
  call void @llvm.dbg.value(metadata i32 %7, metadata !4104, metadata !DIExpression()), !dbg !4106
  %8 = icmp ugt i32 %5, %7, !dbg !4109
  %9 = sub i32 %3, %6
  %10 = select i1 %8, i32 %9, i32 0, !dbg !4111
  call void @llvm.dbg.value(metadata i32 %10, metadata !4105, metadata !DIExpression()), !dbg !4106
  ret i32 %10, !dbg !4112
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_sw_handler(i8* nocapture noundef readnone %0) #0 !dbg !4113 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4115, metadata !DIExpression()), !dbg !4119
  %4 = bitcast i32* %2 to i8*, !dbg !4120
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4), !dbg !4120
  call void @llvm.dbg.declare(metadata i32* %2, metadata !4117, metadata !DIExpression()), !dbg !4121
  %5 = bitcast i32* %3 to i8*, !dbg !4122
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5), !dbg !4122
  call void @llvm.dbg.declare(metadata i32* %3, metadata !4118, metadata !DIExpression()), !dbg !4123
  %6 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !4124
  %7 = icmp eq i32 %6, 0, !dbg !4126
  br i1 %7, label %38, label %8, !dbg !4127

8:                                                ; preds = %1
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !4128
  %9 = tail call i32 @hal_gpt_stop_timer(i32 noundef 3) #21, !dbg !4130
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !4131
  %10 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4, !dbg !4132
  %11 = tail call i32 @gpt_sw_get_current_time_ms(%struct.GPT_REGISTER_T* noundef %10) #22, !dbg !4133
  store volatile i32 %11, i32* %2, align 4, !dbg !4134
  %12 = load volatile i32, i32* %2, align 4, !dbg !4135
  %13 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !4136
  %14 = add i32 %13, %12, !dbg !4136
  store i32 %14, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !4136
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 6), align 1, !dbg !4137
  call void @llvm.dbg.value(metadata i32 0, metadata !4116, metadata !DIExpression()), !dbg !4119
  br label %15, !dbg !4138

15:                                               ; preds = %8, %31
  %16 = phi i32 [ 0, %8 ], [ %32, %31 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !4116, metadata !DIExpression()), !dbg !4119
  %17 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %16, i32 3, !dbg !4140
  %18 = load i8, i8* %17, align 1, !dbg !4140, !range !3203
  %19 = icmp eq i8 %18, 0, !dbg !4140
  br i1 %19, label %31, label %20, !dbg !4144

20:                                               ; preds = %15
  %21 = tail call i32 @gpt_sw_absolute_value(i32 noundef %16) #22, !dbg !4145
  store volatile i32 %21, i32* %3, align 4, !dbg !4147
  %22 = load volatile i32, i32* %3, align 4, !dbg !4148
  %23 = icmp eq i32 %22, 0, !dbg !4150
  br i1 %23, label %24, label %31, !dbg !4151

24:                                               ; preds = %20
  store i8 0, i8* %17, align 1, !dbg !4152
  %25 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !4154
  %26 = add i32 %25, -1, !dbg !4154
  store i32 %26, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !4154
  %27 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %16, i32 0, i32 0, !dbg !4155
  %28 = load void (i8*)*, void (i8*)** %27, align 4, !dbg !4155
  %29 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %16, i32 0, i32 1, !dbg !4156
  %30 = load i8*, i8** %29, align 4, !dbg !4156
  tail call void %28(i8* noundef %30) #21, !dbg !4157
  br label %31, !dbg !4158

31:                                               ; preds = %15, %24, %20
  %32 = add nuw nsw i32 %16, 1, !dbg !4159
  call void @llvm.dbg.value(metadata i32 %32, metadata !4116, metadata !DIExpression()), !dbg !4119
  %33 = icmp eq i32 %32, 32, !dbg !4160
  br i1 %33, label %34, label %15, !dbg !4138, !llvm.loop !4161

34:                                               ; preds = %31
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 6), align 1, !dbg !4163
  %35 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !4164
  %36 = icmp eq i32 %35, 0, !dbg !4166
  br i1 %36, label %38, label %37, !dbg !4167

37:                                               ; preds = %34
  tail call void @gpt_sw_start_timer() #22, !dbg !4168
  br label %38, !dbg !4170

38:                                               ; preds = %34, %37, %1
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !4171
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4), !dbg !4171
  ret void, !dbg !4171
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local i32 @is_pin_with_pullsel(i32 noundef %0) local_unnamed_addr #13 !dbg !4172 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4177, metadata !DIExpression()), !dbg !4180
  call void @llvm.dbg.declare(metadata [5 x i32]* @__const.is_pin_with_pullsel.pin_number_with_pullsel, metadata !4179, metadata !DIExpression()), !dbg !4181
  call void @llvm.dbg.value(metadata i32 0, metadata !4178, metadata !DIExpression()), !dbg !4180
  br label %5, !dbg !4182

2:                                                ; preds = %5
  %3 = add nuw nsw i32 %6, 1, !dbg !4184
  call void @llvm.dbg.value(metadata i32 %3, metadata !4178, metadata !DIExpression()), !dbg !4180
  call void @llvm.dbg.value(metadata i32 %6, metadata !4178, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4180
  %4 = icmp eq i32 %3, 5, !dbg !4186
  br i1 %4, label %10, label %5, !dbg !4182, !llvm.loop !4187

5:                                                ; preds = %1, %2
  %6 = phi i32 [ 0, %1 ], [ %3, %2 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !4178, metadata !DIExpression()), !dbg !4180
  %7 = getelementptr inbounds [5 x i32], [5 x i32]* @__const.is_pin_with_pullsel.pin_number_with_pullsel, i32 0, i32 %6, !dbg !4189
  %8 = load i32, i32* %7, align 4, !dbg !4189
  %9 = icmp eq i32 %8, %0, !dbg !4192
  call void @llvm.dbg.value(metadata i32 %6, metadata !4178, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4180
  br i1 %9, label %10, label %2, !dbg !4193

10:                                               ; preds = %2, %5
  %11 = phi i32 [ 1, %5 ], [ 0, %2 ], !dbg !4180
  ret i32 %11, !dbg !4194
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @hal_gpio_init(i32 noundef %0) local_unnamed_addr #9 !dbg !4195 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4200, metadata !DIExpression()), !dbg !4201
  ret i32 0, !dbg !4202
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @hal_gpio_deinit(i32 noundef %0) local_unnamed_addr #9 !dbg !4203 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4205, metadata !DIExpression()), !dbg !4206
  ret i32 0, !dbg !4207
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_direction(i32 noundef %0, i32 noundef %1) local_unnamed_addr #3 !dbg !4208 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4212, metadata !DIExpression()), !dbg !4216
  call void @llvm.dbg.value(metadata i32 %1, metadata !4213, metadata !DIExpression()), !dbg !4216
  %3 = icmp ugt i32 %0, 48, !dbg !4217
  br i1 %3, label %13, label %4, !dbg !4219

4:                                                ; preds = %2
  %5 = lshr i32 %0, 5, !dbg !4220
  call void @llvm.dbg.value(metadata i32 %5, metadata !4214, metadata !DIExpression()), !dbg !4216
  %6 = and i32 %0, 31, !dbg !4221
  call void @llvm.dbg.value(metadata i32 %6, metadata !4215, metadata !DIExpression()), !dbg !4216
  %7 = icmp eq i32 %1, 0, !dbg !4222
  %8 = shl nuw i32 1, %6, !dbg !4224
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4224
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 0, i32 %5, i32 2, !dbg !4225
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 0, i32 %5, i32 1, !dbg !4225
  %12 = select i1 %7, i32* %10, i32* %11, !dbg !4225
  store volatile i32 %8, i32* %12, align 4, !dbg !4224
  br label %13, !dbg !4226

13:                                               ; preds = %4, %2
  %14 = phi i32 [ -2, %2 ], [ 0, %4 ], !dbg !4216
  ret i32 %14, !dbg !4226
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_gpio_get_direction(i32 noundef %0, i32* noundef writeonly %1) local_unnamed_addr #10 !dbg !4227 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4232, metadata !DIExpression()), !dbg !4237
  call void @llvm.dbg.value(metadata i32* %1, metadata !4233, metadata !DIExpression()), !dbg !4237
  %3 = icmp ugt i32 %0, 48, !dbg !4238
  br i1 %3, label %15, label %4, !dbg !4240

4:                                                ; preds = %2
  %5 = icmp eq i32* %1, null, !dbg !4241
  br i1 %5, label %15, label %6, !dbg !4243

6:                                                ; preds = %4
  %7 = lshr i32 %0, 5, !dbg !4244
  call void @llvm.dbg.value(metadata i32 %7, metadata !4234, metadata !DIExpression()), !dbg !4237
  %8 = and i32 %0, 31, !dbg !4245
  call void @llvm.dbg.value(metadata i32 %8, metadata !4235, metadata !DIExpression()), !dbg !4237
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4246
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 0, i32 %7, i32 0, !dbg !4247
  %11 = load volatile i32, i32* %10, align 4, !dbg !4247
  call void @llvm.dbg.value(metadata i32 %11, metadata !4236, metadata !DIExpression()), !dbg !4237
  %12 = shl nuw i32 1, %8, !dbg !4248
  %13 = and i32 %11, %12, !dbg !4249
  call void @llvm.dbg.value(metadata i32 %13, metadata !4236, metadata !DIExpression()), !dbg !4237
  %14 = lshr i32 %13, %8, !dbg !4250
  store i32 %14, i32* %1, align 4, !dbg !4251
  br label %15, !dbg !4252

15:                                               ; preds = %4, %2, %6
  %16 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !4237
  ret i32 %16, !dbg !4253
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_pinmux_set_function(i32 noundef %0, i8 noundef zeroext %1) local_unnamed_addr #0 !dbg !4254 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4259, metadata !DIExpression()), !dbg !4264
  call void @llvm.dbg.value(metadata i8 %1, metadata !4260, metadata !DIExpression()), !dbg !4264
  %3 = icmp ugt i32 %0, 48, !dbg !4265
  br i1 %3, label %18, label %4, !dbg !4267

4:                                                ; preds = %2
  %5 = icmp ugt i8 %1, 15, !dbg !4268
  br i1 %5, label %18, label %6, !dbg !4270

6:                                                ; preds = %4
  %7 = zext i8 %1 to i32, !dbg !4271
  %8 = lshr i32 %0, 3, !dbg !4272
  call void @llvm.dbg.value(metadata i32 %8, metadata !4261, metadata !DIExpression()), !dbg !4264
  call void @llvm.dbg.value(metadata i32 %0, metadata !4262, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_stack_value)), !dbg !4264
  %9 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !4273
  call void @llvm.dbg.value(metadata i32 %9, metadata !4263, metadata !DIExpression()), !dbg !4264
  %10 = shl nuw nsw i32 %0, 2, !dbg !4274
  %11 = and i32 %10, 28, !dbg !4274
  %12 = shl nuw i32 15, %11, !dbg !4275
  %13 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4276
  %14 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %13, i32 0, i32 25, i32 %8, i32 2, !dbg !4277
  store volatile i32 %12, i32* %14, align 4, !dbg !4278
  %15 = shl nuw i32 %7, %11, !dbg !4279
  %16 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4280
  %17 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %16, i32 0, i32 25, i32 %8, i32 1, !dbg !4281
  store volatile i32 %15, i32* %17, align 4, !dbg !4282
  tail call void @restore_interrupt_mask(i32 noundef %9) #21, !dbg !4283
  br label %18, !dbg !4284

18:                                               ; preds = %4, %2, %6
  %19 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !4264
  ret i32 %19, !dbg !4285
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_gpio_get_input(i32 noundef %0, i32* noundef writeonly %1) local_unnamed_addr #10 !dbg !4286 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4291, metadata !DIExpression()), !dbg !4296
  call void @llvm.dbg.value(metadata i32* %1, metadata !4292, metadata !DIExpression()), !dbg !4296
  %3 = icmp ugt i32 %0, 48, !dbg !4297
  br i1 %3, label %15, label %4, !dbg !4299

4:                                                ; preds = %2
  %5 = icmp eq i32* %1, null, !dbg !4300
  br i1 %5, label %15, label %6, !dbg !4302

6:                                                ; preds = %4
  %7 = lshr i32 %0, 5, !dbg !4303
  call void @llvm.dbg.value(metadata i32 %7, metadata !4293, metadata !DIExpression()), !dbg !4296
  %8 = and i32 %0, 31, !dbg !4304
  call void @llvm.dbg.value(metadata i32 %8, metadata !4294, metadata !DIExpression()), !dbg !4296
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4305
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 8, i32 %7, i32 0, !dbg !4306
  %11 = load volatile i32, i32* %10, align 4, !dbg !4306
  call void @llvm.dbg.value(metadata i32 %11, metadata !4295, metadata !DIExpression()), !dbg !4296
  %12 = shl nuw i32 1, %8, !dbg !4307
  %13 = and i32 %11, %12, !dbg !4308
  call void @llvm.dbg.value(metadata i32 %13, metadata !4295, metadata !DIExpression()), !dbg !4296
  %14 = lshr i32 %13, %8, !dbg !4309
  store i32 %14, i32* %1, align 4, !dbg !4310
  br label %15, !dbg !4311

15:                                               ; preds = %4, %2, %6
  %16 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !4296
  ret i32 %16, !dbg !4312
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_output(i32 noundef %0, i32 noundef %1) local_unnamed_addr #3 !dbg !4313 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4317, metadata !DIExpression()), !dbg !4321
  call void @llvm.dbg.value(metadata i32 %1, metadata !4318, metadata !DIExpression()), !dbg !4321
  %3 = icmp ugt i32 %0, 48, !dbg !4322
  br i1 %3, label %13, label %4, !dbg !4324

4:                                                ; preds = %2
  %5 = lshr i32 %0, 5, !dbg !4325
  call void @llvm.dbg.value(metadata i32 %5, metadata !4319, metadata !DIExpression()), !dbg !4321
  %6 = and i32 %0, 31, !dbg !4326
  call void @llvm.dbg.value(metadata i32 %6, metadata !4320, metadata !DIExpression()), !dbg !4321
  %7 = icmp eq i32 %1, 0, !dbg !4327
  %8 = shl nuw i32 1, %6, !dbg !4329
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4329
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 6, i32 %5, i32 1, !dbg !4330
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 6, i32 %5, i32 2, !dbg !4330
  %12 = select i1 %7, i32* %11, i32* %10, !dbg !4330
  store volatile i32 %8, i32* %12, align 4, !dbg !4329
  br label %13, !dbg !4331

13:                                               ; preds = %4, %2
  %14 = phi i32 [ -2, %2 ], [ 0, %4 ], !dbg !4321
  ret i32 %14, !dbg !4331
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_gpio_get_output(i32 noundef %0, i32* noundef writeonly %1) local_unnamed_addr #10 !dbg !4332 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4334, metadata !DIExpression()), !dbg !4339
  call void @llvm.dbg.value(metadata i32* %1, metadata !4335, metadata !DIExpression()), !dbg !4339
  %3 = icmp ugt i32 %0, 48, !dbg !4340
  br i1 %3, label %15, label %4, !dbg !4342

4:                                                ; preds = %2
  %5 = icmp eq i32* %1, null, !dbg !4343
  br i1 %5, label %15, label %6, !dbg !4345

6:                                                ; preds = %4
  %7 = lshr i32 %0, 5, !dbg !4346
  call void @llvm.dbg.value(metadata i32 %7, metadata !4336, metadata !DIExpression()), !dbg !4339
  %8 = and i32 %0, 31, !dbg !4347
  call void @llvm.dbg.value(metadata i32 %8, metadata !4337, metadata !DIExpression()), !dbg !4339
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4348
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 6, i32 %7, i32 0, !dbg !4349
  %11 = load volatile i32, i32* %10, align 4, !dbg !4349
  call void @llvm.dbg.value(metadata i32 %11, metadata !4338, metadata !DIExpression()), !dbg !4339
  %12 = shl nuw i32 1, %8, !dbg !4350
  %13 = and i32 %11, %12, !dbg !4351
  call void @llvm.dbg.value(metadata i32 %13, metadata !4338, metadata !DIExpression()), !dbg !4339
  %14 = lshr i32 %13, %8, !dbg !4352
  store i32 %14, i32* %1, align 4, !dbg !4353
  br label %15, !dbg !4354

15:                                               ; preds = %4, %2, %6
  %16 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !4339
  ret i32 %16, !dbg !4355
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_toggle_pin(i32 noundef %0) local_unnamed_addr #3 !dbg !4356 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4358, metadata !DIExpression()), !dbg !4362
  %2 = icmp ugt i32 %0, 48, !dbg !4363
  br i1 %2, label %16, label %3, !dbg !4365

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !4366
  call void @llvm.dbg.value(metadata i32 %4, metadata !4359, metadata !DIExpression()), !dbg !4362
  %5 = and i32 %0, 31, !dbg !4367
  call void @llvm.dbg.value(metadata i32 %5, metadata !4360, metadata !DIExpression()), !dbg !4362
  %6 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4368
  %7 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %6, i32 0, i32 6, i32 %4, i32 0, !dbg !4369
  %8 = load volatile i32, i32* %7, align 4, !dbg !4369
  call void @llvm.dbg.value(metadata i32 %8, metadata !4361, metadata !DIExpression()), !dbg !4362
  %9 = shl nuw i32 1, %5, !dbg !4370
  %10 = and i32 %8, %9, !dbg !4371
  call void @llvm.dbg.value(metadata i32 %10, metadata !4361, metadata !DIExpression()), !dbg !4362
  %11 = lshr i32 %10, %5, !dbg !4372
  %12 = icmp eq i32 %11, 0, !dbg !4372
  %13 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %6, i32 0, i32 6, i32 %4, i32 2, !dbg !4374
  %14 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %6, i32 0, i32 6, i32 %4, i32 1, !dbg !4374
  %15 = select i1 %12, i32* %14, i32* %13, !dbg !4374
  store volatile i32 %9, i32* %15, align 4, !dbg !4375
  br label %16, !dbg !4376

16:                                               ; preds = %3, %1
  %17 = phi i32 [ -2, %1 ], [ 0, %3 ], !dbg !4362
  ret i32 %17, !dbg !4376
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_enable_inversion(i32 noundef %0) local_unnamed_addr #3 !dbg !4377 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4379, metadata !DIExpression()), !dbg !4382
  %2 = icmp ugt i32 %0, 48, !dbg !4383
  br i1 %2, label %9, label %3, !dbg !4385

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !4386
  call void @llvm.dbg.value(metadata i32 %4, metadata !4380, metadata !DIExpression()), !dbg !4382
  %5 = and i32 %0, 31, !dbg !4387
  call void @llvm.dbg.value(metadata i32 %5, metadata !4381, metadata !DIExpression()), !dbg !4382
  %6 = shl nuw i32 1, %5, !dbg !4388
  %7 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4389
  %8 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %7, i32 0, i32 4, i32 %4, i32 1, !dbg !4390
  store volatile i32 %6, i32* %8, align 4, !dbg !4391
  br label %9, !dbg !4392

9:                                                ; preds = %1, %3
  %10 = phi i32 [ 0, %3 ], [ -2, %1 ], !dbg !4382
  ret i32 %10, !dbg !4393
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_disable_inversion(i32 noundef %0) local_unnamed_addr #3 !dbg !4394 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4396, metadata !DIExpression()), !dbg !4399
  %2 = icmp ugt i32 %0, 48, !dbg !4400
  br i1 %2, label %9, label %3, !dbg !4402

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !4403
  call void @llvm.dbg.value(metadata i32 %4, metadata !4397, metadata !DIExpression()), !dbg !4399
  %5 = and i32 %0, 31, !dbg !4404
  call void @llvm.dbg.value(metadata i32 %5, metadata !4398, metadata !DIExpression()), !dbg !4399
  %6 = shl nuw i32 1, %5, !dbg !4405
  %7 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4406
  %8 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %7, i32 0, i32 4, i32 %4, i32 2, !dbg !4407
  store volatile i32 %6, i32* %8, align 4, !dbg !4408
  br label %9, !dbg !4409

9:                                                ; preds = %1, %3
  %10 = phi i32 [ 0, %3 ], [ -2, %1 ], !dbg !4399
  ret i32 %10, !dbg !4410
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_pull_up(i32 noundef %0) local_unnamed_addr #3 !dbg !4411 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4413, metadata !DIExpression()), !dbg !4416
  %2 = icmp ugt i32 %0, 48, !dbg !4417
  br i1 %2, label %14, label %3, !dbg !4419

3:                                                ; preds = %1
  %4 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #22, !dbg !4420
  %5 = icmp eq i32 %4, 0, !dbg !4420
  br i1 %5, label %14, label %6, !dbg !4421

6:                                                ; preds = %3
  %7 = lshr i32 %0, 5, !dbg !4422
  call void @llvm.dbg.value(metadata i32 %7, metadata !4414, metadata !DIExpression()), !dbg !4416
  %8 = and i32 %0, 31, !dbg !4423
  call void @llvm.dbg.value(metadata i32 %8, metadata !4415, metadata !DIExpression()), !dbg !4416
  %9 = shl nuw i32 1, %8, !dbg !4424
  %10 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4425
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %10, i32 0, i32 2, i32 %7, i32 1, !dbg !4426
  store volatile i32 %9, i32* %11, align 4, !dbg !4427
  %12 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4428
  %13 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %12, i32 0, i32 10, i32 %7, i32 1, !dbg !4429
  store volatile i32 %9, i32* %13, align 4, !dbg !4430
  br label %14, !dbg !4431

14:                                               ; preds = %1, %3, %6
  %15 = phi i32 [ 0, %6 ], [ -2, %3 ], [ -2, %1 ], !dbg !4416
  ret i32 %15, !dbg !4432
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_pull_down(i32 noundef %0) local_unnamed_addr #3 !dbg !4433 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4435, metadata !DIExpression()), !dbg !4438
  %2 = icmp ugt i32 %0, 48, !dbg !4439
  br i1 %2, label %14, label %3, !dbg !4441

3:                                                ; preds = %1
  %4 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #22, !dbg !4442
  %5 = icmp eq i32 %4, 0, !dbg !4442
  br i1 %5, label %14, label %6, !dbg !4443

6:                                                ; preds = %3
  %7 = lshr i32 %0, 5, !dbg !4444
  call void @llvm.dbg.value(metadata i32 %7, metadata !4436, metadata !DIExpression()), !dbg !4438
  %8 = and i32 %0, 31, !dbg !4445
  call void @llvm.dbg.value(metadata i32 %8, metadata !4437, metadata !DIExpression()), !dbg !4438
  %9 = shl nuw i32 1, %8, !dbg !4446
  %10 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4447
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %10, i32 0, i32 2, i32 %7, i32 1, !dbg !4448
  store volatile i32 %9, i32* %11, align 4, !dbg !4449
  %12 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4450
  %13 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %12, i32 0, i32 10, i32 %7, i32 2, !dbg !4451
  store volatile i32 %9, i32* %13, align 4, !dbg !4452
  br label %14, !dbg !4453

14:                                               ; preds = %1, %3, %6
  %15 = phi i32 [ 0, %6 ], [ -2, %3 ], [ -2, %1 ], !dbg !4438
  ret i32 %15, !dbg !4454
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_disable_pull(i32 noundef %0) local_unnamed_addr #3 !dbg !4455 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4457, metadata !DIExpression()), !dbg !4460
  %2 = icmp ugt i32 %0, 48, !dbg !4461
  br i1 %2, label %12, label %3, !dbg !4463

3:                                                ; preds = %1
  %4 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #22, !dbg !4464
  %5 = icmp eq i32 %4, 0, !dbg !4464
  br i1 %5, label %12, label %6, !dbg !4465

6:                                                ; preds = %3
  %7 = lshr i32 %0, 5, !dbg !4466
  call void @llvm.dbg.value(metadata i32 %7, metadata !4458, metadata !DIExpression()), !dbg !4460
  %8 = and i32 %0, 31, !dbg !4467
  call void @llvm.dbg.value(metadata i32 %8, metadata !4459, metadata !DIExpression()), !dbg !4460
  %9 = shl nuw i32 1, %8, !dbg !4468
  %10 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4469
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %10, i32 0, i32 2, i32 %7, i32 2, !dbg !4470
  store volatile i32 %9, i32* %11, align 4, !dbg !4471
  br label %12, !dbg !4472

12:                                               ; preds = %1, %3, %6
  %13 = phi i32 [ 0, %6 ], [ -2, %3 ], [ -2, %1 ], !dbg !4460
  ret i32 %13, !dbg !4473
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_clockout(i32 noundef %0, i32 noundef %1) local_unnamed_addr #3 !dbg !4474 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4480, metadata !DIExpression()), !dbg !4482
  call void @llvm.dbg.value(metadata i32 %1, metadata !4481, metadata !DIExpression()), !dbg !4482
  %3 = icmp ugt i32 %0, 5, !dbg !4483
  br i1 %3, label %7, label %4, !dbg !4485

4:                                                ; preds = %2
  %5 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4486
  %6 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %5, i32 0, i32 29, i32 %0, i32 0, !dbg !4487
  store volatile i32 %1, i32* %6, align 4, !dbg !4488
  br label %7, !dbg !4489

7:                                                ; preds = %2, %4
  %8 = phi i32 [ 0, %4 ], [ -1, %2 ], !dbg !4482
  ret i32 %8, !dbg !4490
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_pupd_register(i32 noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) local_unnamed_addr #3 !dbg !4491 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4495, metadata !DIExpression()), !dbg !4501
  call void @llvm.dbg.value(metadata i8 %1, metadata !4496, metadata !DIExpression()), !dbg !4501
  call void @llvm.dbg.value(metadata i8 %2, metadata !4497, metadata !DIExpression()), !dbg !4501
  call void @llvm.dbg.value(metadata i8 %3, metadata !4498, metadata !DIExpression()), !dbg !4501
  %5 = icmp ugt i32 %0, 48, !dbg !4502
  br i1 %5, label %30, label %6, !dbg !4504

6:                                                ; preds = %4
  %7 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #22, !dbg !4505
  %8 = icmp eq i32 %7, 0, !dbg !4505
  br i1 %8, label %9, label %30, !dbg !4506

9:                                                ; preds = %6
  %10 = lshr i32 %0, 5, !dbg !4507
  call void @llvm.dbg.value(metadata i32 %10, metadata !4499, metadata !DIExpression()), !dbg !4501
  %11 = and i32 %0, 31, !dbg !4508
  call void @llvm.dbg.value(metadata i32 %11, metadata !4500, metadata !DIExpression()), !dbg !4501
  %12 = icmp eq i8 %1, 0, !dbg !4509
  %13 = shl nuw i32 1, %11, !dbg !4511
  %14 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4511
  %15 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %14, i32 0, i32 20, i32 %10, i32 2, !dbg !4512
  %16 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %14, i32 0, i32 20, i32 %10, i32 1, !dbg !4512
  %17 = select i1 %12, i32* %15, i32* %16, !dbg !4512
  store volatile i32 %13, i32* %17, align 4, !dbg !4511
  %18 = icmp eq i8 %2, 0, !dbg !4513
  %19 = shl nuw i32 1, %11, !dbg !4515
  %20 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4515
  %21 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %20, i32 0, i32 22, i32 %10, i32 2, !dbg !4516
  %22 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %20, i32 0, i32 22, i32 %10, i32 1, !dbg !4516
  %23 = select i1 %18, i32* %21, i32* %22, !dbg !4516
  store volatile i32 %19, i32* %23, align 4, !dbg !4515
  %24 = icmp eq i8 %3, 0, !dbg !4517
  %25 = shl nuw i32 1, %11, !dbg !4519
  %26 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4519
  %27 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %26, i32 0, i32 23, i32 %10, i32 1, !dbg !4520
  %28 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %26, i32 0, i32 23, i32 %10, i32 2, !dbg !4520
  %29 = select i1 %24, i32* %28, i32* %27, !dbg !4520
  store volatile i32 %25, i32* %29, align 4, !dbg !4519
  br label %30, !dbg !4521

30:                                               ; preds = %9, %4, %6
  %31 = phi i32 [ -2, %6 ], [ -2, %4 ], [ 0, %9 ], !dbg !4501
  ret i32 %31, !dbg !4521
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_high_impedance(i32 noundef %0) local_unnamed_addr #3 !dbg !4522 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4524, metadata !DIExpression()), !dbg !4531
  %2 = icmp ugt i32 %0, 48, !dbg !4532
  br i1 %2, label %40, label %3, !dbg !4534

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !4535
  call void @llvm.dbg.value(metadata i32 %4, metadata !4525, metadata !DIExpression()), !dbg !4531
  %5 = and i32 %0, 31, !dbg !4536
  call void @llvm.dbg.value(metadata i32 %5, metadata !4528, metadata !DIExpression()), !dbg !4531
  %6 = lshr i32 %0, 4, !dbg !4537
  call void @llvm.dbg.value(metadata i32 %6, metadata !4526, metadata !DIExpression()), !dbg !4531
  call void @llvm.dbg.value(metadata i32 %0, metadata !4529, metadata !DIExpression(DW_OP_constu, 15, DW_OP_and, DW_OP_stack_value)), !dbg !4531
  %7 = lshr i32 %0, 3, !dbg !4538
  call void @llvm.dbg.value(metadata i32 %7, metadata !4527, metadata !DIExpression()), !dbg !4531
  call void @llvm.dbg.value(metadata i32 %0, metadata !4530, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_stack_value)), !dbg !4531
  %8 = shl nuw nsw i32 %0, 2, !dbg !4539
  %9 = and i32 %8, 28, !dbg !4539
  %10 = shl nuw i32 15, %9, !dbg !4540
  %11 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4541
  %12 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %11, i32 0, i32 25, i32 %7, i32 2, !dbg !4542
  store volatile i32 %10, i32* %12, align 4, !dbg !4543
  %13 = shl nuw i32 1, %5, !dbg !4544
  %14 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4545
  %15 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %14, i32 0, i32 0, i32 %4, i32 2, !dbg !4546
  store volatile i32 %13, i32* %15, align 4, !dbg !4547
  %16 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4548
  %17 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %16, i32 0, i32 18, i32 %4, i32 2, !dbg !4549
  store volatile i32 %13, i32* %17, align 4, !dbg !4550
  %18 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #22, !dbg !4551
  %19 = icmp eq i32 %18, 0, !dbg !4551
  %20 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4553
  br i1 %19, label %23, label %21, !dbg !4554

21:                                               ; preds = %3
  %22 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %20, i32 0, i32 2, i32 %4, i32 2, !dbg !4555
  br label %29, !dbg !4557

23:                                               ; preds = %3
  %24 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %20, i32 0, i32 20, i32 %4, i32 2, !dbg !4558
  store volatile i32 %13, i32* %24, align 4, !dbg !4560
  %25 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4561
  %26 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %25, i32 0, i32 22, i32 %4, i32 2, !dbg !4562
  store volatile i32 %13, i32* %26, align 4, !dbg !4563
  %27 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4564
  %28 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %27, i32 0, i32 23, i32 %4, i32 2, !dbg !4565
  br label %29

29:                                               ; preds = %23, %21
  %30 = phi i32* [ %28, %23 ], [ %22, %21 ]
  store volatile i32 %13, i32* %30, align 4, !dbg !4553
  %31 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4566
  %32 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %31, i32 0, i32 12, i32 %4, i32 2, !dbg !4567
  store volatile i32 %13, i32* %32, align 4, !dbg !4568
  %33 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4569
  %34 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %33, i32 0, i32 14, i32 %4, i32 2, !dbg !4570
  store volatile i32 %13, i32* %34, align 4, !dbg !4571
  %35 = shl nuw nsw i32 %0, 1, !dbg !4572
  %36 = and i32 %35, 30, !dbg !4572
  %37 = shl nuw i32 3, %36, !dbg !4573
  %38 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4574
  %39 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %38, i32 0, i32 27, i32 %6, i32 2, !dbg !4575
  store volatile i32 %37, i32* %39, align 4, !dbg !4576
  br label %40, !dbg !4577

40:                                               ; preds = %1, %29
  %41 = phi i32 [ 0, %29 ], [ -2, %1 ], !dbg !4531
  ret i32 %41, !dbg !4578
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_clear_high_impedance(i32 noundef %0) local_unnamed_addr #3 !dbg !4579 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4581, metadata !DIExpression()), !dbg !4586
  %2 = icmp ugt i32 %0, 48, !dbg !4587
  br i1 %2, label %34, label %3, !dbg !4589

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !4590
  call void @llvm.dbg.value(metadata i32 %4, metadata !4582, metadata !DIExpression()), !dbg !4586
  %5 = and i32 %0, 31, !dbg !4591
  call void @llvm.dbg.value(metadata i32 %5, metadata !4584, metadata !DIExpression()), !dbg !4586
  %6 = lshr i32 %0, 3, !dbg !4592
  call void @llvm.dbg.value(metadata i32 %6, metadata !4583, metadata !DIExpression()), !dbg !4586
  call void @llvm.dbg.value(metadata i32 %0, metadata !4585, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_stack_value)), !dbg !4586
  %7 = shl nuw nsw i32 %0, 2, !dbg !4593
  %8 = and i32 %7, 28, !dbg !4593
  %9 = shl nuw i32 15, %8, !dbg !4594
  %10 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4595
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %10, i32 0, i32 25, i32 %6, i32 2, !dbg !4596
  store volatile i32 %9, i32* %11, align 4, !dbg !4597
  %12 = shl nuw i32 1, %5, !dbg !4598
  %13 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4599
  %14 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %13, i32 0, i32 0, i32 %4, i32 2, !dbg !4600
  store volatile i32 %12, i32* %14, align 4, !dbg !4601
  %15 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #22, !dbg !4602
  %16 = icmp eq i32 %15, 0, !dbg !4602
  %17 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4604
  br i1 %16, label %22, label %18, !dbg !4605

18:                                               ; preds = %3
  %19 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %17, i32 0, i32 2, i32 %4, i32 1, !dbg !4606
  store volatile i32 %12, i32* %19, align 4, !dbg !4608
  %20 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4609
  %21 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %20, i32 0, i32 10, i32 %4, i32 2, !dbg !4610
  br label %28, !dbg !4611

22:                                               ; preds = %3
  %23 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %17, i32 0, i32 20, i32 %4, i32 1, !dbg !4612
  store volatile i32 %12, i32* %23, align 4, !dbg !4614
  %24 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4615
  %25 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %24, i32 0, i32 22, i32 %4, i32 1, !dbg !4616
  store volatile i32 %12, i32* %25, align 4, !dbg !4617
  %26 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4618
  %27 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %26, i32 0, i32 23, i32 %4, i32 1, !dbg !4619
  br label %28

28:                                               ; preds = %22, %18
  %29 = phi i32* [ %27, %22 ], [ %21, %18 ]
  store volatile i32 %12, i32* %29, align 4, !dbg !4604
  %30 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4620
  %31 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %30, i32 0, i32 18, i32 %4, i32 1, !dbg !4621
  store volatile i32 %12, i32* %31, align 4, !dbg !4622
  %32 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4623
  %33 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %32, i32 0, i32 14, i32 %4, i32 1, !dbg !4624
  store volatile i32 %12, i32* %33, align 4, !dbg !4625
  br label %34, !dbg !4626

34:                                               ; preds = %1, %28
  %35 = phi i32 [ 0, %28 ], [ -2, %1 ], !dbg !4586
  ret i32 %35, !dbg !4627
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_driving_current(i32 noundef %0, i32 noundef %1) local_unnamed_addr #3 !dbg !4628 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4632, metadata !DIExpression()), !dbg !4636
  call void @llvm.dbg.value(metadata i32 %1, metadata !4633, metadata !DIExpression()), !dbg !4636
  %3 = icmp ugt i32 %0, 48, !dbg !4637
  br i1 %3, label %14, label %4, !dbg !4639

4:                                                ; preds = %2
  %5 = lshr i32 %0, 4, !dbg !4640
  call void @llvm.dbg.value(metadata i32 %5, metadata !4634, metadata !DIExpression()), !dbg !4636
  call void @llvm.dbg.value(metadata i32 %0, metadata !4635, metadata !DIExpression(DW_OP_constu, 15, DW_OP_and, DW_OP_stack_value)), !dbg !4636
  %6 = shl nuw nsw i32 %0, 1, !dbg !4641
  %7 = and i32 %6, 30, !dbg !4641
  %8 = shl nuw i32 3, %7, !dbg !4642
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4643
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 16, i32 %5, i32 2, !dbg !4644
  store volatile i32 %8, i32* %10, align 4, !dbg !4645
  %11 = shl i32 %1, %7, !dbg !4646
  %12 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4647
  %13 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %12, i32 0, i32 16, i32 %5, i32 1, !dbg !4648
  store volatile i32 %11, i32* %13, align 4, !dbg !4649
  br label %14, !dbg !4650

14:                                               ; preds = %2, %4
  %15 = phi i32 [ 0, %4 ], [ -2, %2 ], !dbg !4636
  ret i32 %15, !dbg !4651
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_gpio_get_driving_current(i32 noundef %0, i32* noundef writeonly %1) local_unnamed_addr #10 !dbg !4652 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4657, metadata !DIExpression()), !dbg !4662
  call void @llvm.dbg.value(metadata i32* %1, metadata !4658, metadata !DIExpression()), !dbg !4662
  %3 = icmp ugt i32 %0, 48, !dbg !4663
  br i1 %3, label %18, label %4, !dbg !4665

4:                                                ; preds = %2
  %5 = icmp eq i32* %1, null, !dbg !4666
  br i1 %5, label %18, label %6, !dbg !4668

6:                                                ; preds = %4
  %7 = lshr i32 %0, 4, !dbg !4669
  call void @llvm.dbg.value(metadata i32 %7, metadata !4659, metadata !DIExpression()), !dbg !4662
  call void @llvm.dbg.value(metadata i32 %0, metadata !4660, metadata !DIExpression(DW_OP_constu, 15, DW_OP_and, DW_OP_stack_value)), !dbg !4662
  %8 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4670
  %9 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %8, i32 0, i32 16, i32 %7, i32 0, !dbg !4671
  %10 = load volatile i32, i32* %9, align 4, !dbg !4671
  call void @llvm.dbg.value(metadata i32 %10, metadata !4661, metadata !DIExpression()), !dbg !4662
  %11 = shl nuw nsw i32 %0, 1, !dbg !4672
  %12 = and i32 %11, 30, !dbg !4672
  %13 = shl nuw i32 3, %12, !dbg !4673
  %14 = and i32 %10, %13, !dbg !4674
  call void @llvm.dbg.value(metadata i32 %14, metadata !4661, metadata !DIExpression()), !dbg !4662
  %15 = lshr i32 %14, %12, !dbg !4675
  call void @llvm.dbg.value(metadata i32 %15, metadata !4661, metadata !DIExpression()), !dbg !4662
  %16 = shl i32 %15, 2, !dbg !4676
  %17 = add i32 %16, 4, !dbg !4676
  store i32 %17, i32* %1, align 4, !dbg !4677
  br label %18, !dbg !4678

18:                                               ; preds = %4, %2, %6
  %19 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !4662
  ret i32 %19, !dbg !4679
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_receive_handler(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #0 !dbg !4680 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !4684, metadata !DIExpression()), !dbg !4749
  call void @llvm.dbg.value(metadata i1 %1, metadata !4685, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4749
  %4 = bitcast i32* %3 to i8*, !dbg !4750
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #23, !dbg !4750
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4751
  %6 = load volatile i32, i32* %5, align 4, !dbg !4751
  %7 = icmp eq i32 %6, 2, !dbg !4753
  br i1 %7, label %9, label %8, !dbg !4754

8:                                                ; preds = %2
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.45, i32 0, i32 0), i32 noundef 156, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.uart_receive_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.46, i32 0, i32 0)) #24, !dbg !4755
  unreachable, !dbg !4755

9:                                                ; preds = %2
  %10 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !4757
  %11 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %10, align 4, !dbg !4757
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %11, metadata !4691, metadata !DIExpression()), !dbg !4749
  %12 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #21, !dbg !4758
  call void @llvm.dbg.value(metadata i32 %12, metadata !4686, metadata !DIExpression()), !dbg !4749
  br i1 %1, label %13, label %14, !dbg !4759

13:                                               ; preds = %9
  tail call void @uart_clear_timeout_interrupt(%struct.UART_REGISTER_T* noundef %11) #21, !dbg !4760
  br label %14, !dbg !4763

14:                                               ; preds = %13, %9
  call void @llvm.dbg.value(metadata i32* %3, metadata !4688, metadata !DIExpression(DW_OP_deref)), !dbg !4749
  %15 = call i32 @vdma_get_available_receive_bytes(i32 noundef %12, i32* noundef nonnull %3) #21, !dbg !4764
  call void @llvm.dbg.value(metadata i32 %15, metadata !4747, metadata !DIExpression()), !dbg !4749
  %16 = icmp eq i32 %15, 0, !dbg !4765
  br i1 %16, label %18, label %17, !dbg !4767

17:                                               ; preds = %14
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.45, i32 0, i32 0), i32 noundef 169, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.uart_receive_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.46, i32 0, i32 0)) #24, !dbg !4768
  unreachable, !dbg !4768

18:                                               ; preds = %14
  %19 = load i32, i32* %3, align 4, !dbg !4770
  call void @llvm.dbg.value(metadata i32 %19, metadata !4688, metadata !DIExpression()), !dbg !4749
  %20 = icmp eq i32 %19, 0, !dbg !4772
  br i1 %20, label %43, label %21, !dbg !4773

21:                                               ; preds = %18
  %22 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 0, !dbg !4774
  %23 = load void (i32, i8*)*, void (i32, i8*)** %22, align 4, !dbg !4774
  call void @llvm.dbg.value(metadata void (i32, i8*)* %23, metadata !4689, metadata !DIExpression()), !dbg !4749
  call void @llvm.dbg.value(metadata i8* undef, metadata !4690, metadata !DIExpression()), !dbg !4749
  %24 = icmp eq void (i32, i8*)* %23, null, !dbg !4775
  br i1 %24, label %25, label %26, !dbg !4777

25:                                               ; preds = %21
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.45, i32 0, i32 0), i32 noundef 179, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.uart_receive_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.46, i32 0, i32 0)) #24, !dbg !4778
  unreachable, !dbg !4778

26:                                               ; preds = %21
  %27 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 1, !dbg !4780
  %28 = load i8*, i8** %27, align 4, !dbg !4780
  call void @llvm.dbg.value(metadata i8* %28, metadata !4690, metadata !DIExpression()), !dbg !4749
  %29 = call i32 @vdma_disable_interrupt(i32 noundef %12) #21, !dbg !4781
  call void %23(i32 noundef 1, i8* noundef %28) #21, !dbg !4782
  %30 = call i32 @vdma_enable_interrupt(i32 noundef %12) #21, !dbg !4783
  call void @llvm.dbg.value(metadata i32* %3, metadata !4688, metadata !DIExpression(DW_OP_deref)), !dbg !4749
  %31 = call i32 @vdma_get_available_receive_bytes(i32 noundef %12, i32* noundef nonnull %3) #21, !dbg !4784
  call void @llvm.dbg.value(metadata i32 %31, metadata !4747, metadata !DIExpression()), !dbg !4749
  %32 = icmp eq i32 %31, 0, !dbg !4785
  br i1 %32, label %34, label %33, !dbg !4787

33:                                               ; preds = %26
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.45, i32 0, i32 0), i32 noundef 189, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.uart_receive_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.46, i32 0, i32 0)) #24, !dbg !4788
  unreachable, !dbg !4788

34:                                               ; preds = %26
  %35 = load i32, i32* %3, align 4, !dbg !4790
  call void @llvm.dbg.value(metadata i32 %35, metadata !4688, metadata !DIExpression()), !dbg !4749
  %36 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 5, !dbg !4792
  %37 = load i32, i32* %36, align 4, !dbg !4792
  %38 = icmp ult i32 %35, %37, !dbg !4793
  br i1 %38, label %43, label %39, !dbg !4794

39:                                               ; preds = %34
  %40 = call i32 @vdma_disable_interrupt(i32 noundef %12) #21, !dbg !4795
  call void @llvm.dbg.value(metadata i32 %40, metadata !4747, metadata !DIExpression()), !dbg !4749
  %41 = icmp eq i32 %40, 0, !dbg !4797
  br i1 %41, label %43, label %42, !dbg !4799

42:                                               ; preds = %39
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.45, i32 0, i32 0), i32 noundef 195, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.uart_receive_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.46, i32 0, i32 0)) #24, !dbg !4800
  unreachable, !dbg !4800

43:                                               ; preds = %34, %39, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #23, !dbg !4802
  ret void, !dbg !4802
}

; Function Attrs: noreturn optsize
declare dso_local void @__assert_func(i8* noundef, i32 noundef, i8* noundef, i8* noundef) local_unnamed_addr #14

; Function Attrs: optsize
declare dso_local i32 @vdma_get_available_receive_bytes(i32 noundef, i32* noundef) local_unnamed_addr #2

; Function Attrs: optsize
declare dso_local i32 @vdma_disable_interrupt(i32 noundef) local_unnamed_addr #2

; Function Attrs: optsize
declare dso_local i32 @vdma_enable_interrupt(i32 noundef) local_unnamed_addr #2

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_send_handler(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #0 !dbg !4803 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !4805, metadata !DIExpression()), !dbg !4814
  call void @llvm.dbg.value(metadata i1 %1, metadata !4806, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4814
  %4 = bitcast i32* %3 to i8*, !dbg !4815
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #23, !dbg !4815
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4816
  %6 = load volatile i32, i32* %5, align 4, !dbg !4816
  %7 = icmp eq i32 %6, 2, !dbg !4818
  br i1 %7, label %9, label %8, !dbg !4819

8:                                                ; preds = %2
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.45, i32 0, i32 0), i32 noundef 222, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.uart_send_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.46, i32 0, i32 0)) #24, !dbg !4820
  unreachable, !dbg !4820

9:                                                ; preds = %2
  %10 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #21, !dbg !4822
  call void @llvm.dbg.value(metadata i32 %10, metadata !4807, metadata !DIExpression()), !dbg !4814
  br i1 %1, label %11, label %39, !dbg !4823

11:                                               ; preds = %9
  %12 = getelementptr inbounds [4 x i8], [4 x i8]* @g_uart_frist_send_complete_interrupt, i32 0, i32 %0, !dbg !4824
  %13 = load i8, i8* %12, align 1, !dbg !4824, !range !3203
  %14 = icmp eq i8 %13, 0, !dbg !4828
  br i1 %14, label %15, label %38, !dbg !4829

15:                                               ; preds = %11
  %16 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !4830
  call void @llvm.dbg.value(metadata i32 %16, metadata !4813, metadata !DIExpression()), !dbg !4814
  call void @llvm.dbg.value(metadata i32* %3, metadata !4810, metadata !DIExpression(DW_OP_deref)), !dbg !4814
  %17 = call i32 @vdma_get_available_send_space(i32 noundef %10, i32* noundef nonnull %3) #21, !dbg !4832
  call void @llvm.dbg.value(metadata i32 %17, metadata !4808, metadata !DIExpression()), !dbg !4814
  %18 = icmp eq i32 %17, 0, !dbg !4833
  br i1 %18, label %20, label %19, !dbg !4835

19:                                               ; preds = %15
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.45, i32 0, i32 0), i32 noundef 234, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.uart_send_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.46, i32 0, i32 0)) #24, !dbg !4836
  unreachable, !dbg !4836

20:                                               ; preds = %15
  %21 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 1, !dbg !4838
  %22 = load i32, i32* %21, align 4, !dbg !4838
  %23 = load i32, i32* %3, align 4, !dbg !4840
  call void @llvm.dbg.value(metadata i32 %23, metadata !4810, metadata !DIExpression()), !dbg !4814
  %24 = icmp eq i32 %22, %23, !dbg !4841
  br i1 %24, label %25, label %37, !dbg !4842

25:                                               ; preds = %20
  %26 = getelementptr inbounds [4 x i8], [4 x i8]* @g_uart_send_lock_status, i32 0, i32 %0, !dbg !4843
  %27 = load i8, i8* %26, align 1, !dbg !4843, !range !3203
  %28 = icmp eq i8 %27, 0, !dbg !4843
  br i1 %28, label %37, label %29, !dbg !4846

29:                                               ; preds = %25
  %30 = getelementptr inbounds [4 x i8], [4 x i8]* @g_uart_sleep_handler, i32 0, i32 %0, !dbg !4847
  %31 = load i8, i8* %30, align 1, !dbg !4847
  %32 = call zeroext i1 @hal_sleep_manager_is_sleep_handle_alive(i8 noundef zeroext %31) #21, !dbg !4850
  br i1 %32, label %33, label %36, !dbg !4851

33:                                               ; preds = %29
  %34 = load i8, i8* %30, align 1, !dbg !4852
  %35 = call i32 @hal_sleep_manager_unlock_sleep(i8 noundef zeroext %34) #21, !dbg !4854
  br label %36, !dbg !4855

36:                                               ; preds = %33, %29
  store i8 0, i8* %26, align 1, !dbg !4856
  br label %37, !dbg !4857

37:                                               ; preds = %25, %36, %20
  call void @restore_interrupt_mask(i32 noundef %16) #21, !dbg !4858
  br label %64, !dbg !4859

38:                                               ; preds = %11
  store i8 0, i8* %12, align 1, !dbg !4860
  br label %64

39:                                               ; preds = %9
  %40 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 0, !dbg !4862
  %41 = load void (i32, i8*)*, void (i32, i8*)** %40, align 4, !dbg !4862
  call void @llvm.dbg.value(metadata void (i32, i8*)* %41, metadata !4811, metadata !DIExpression()), !dbg !4814
  call void @llvm.dbg.value(metadata i8* undef, metadata !4812, metadata !DIExpression()), !dbg !4814
  %42 = icmp eq void (i32, i8*)* %41, null, !dbg !4864
  br i1 %42, label %43, label %44, !dbg !4866

43:                                               ; preds = %39
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.45, i32 0, i32 0), i32 noundef 256, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.uart_send_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.46, i32 0, i32 0)) #24, !dbg !4867
  unreachable, !dbg !4867

44:                                               ; preds = %39
  %45 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 1, !dbg !4869
  %46 = load i8*, i8** %45, align 4, !dbg !4869
  call void @llvm.dbg.value(metadata i8* %46, metadata !4812, metadata !DIExpression()), !dbg !4814
  %47 = tail call i32 @vdma_disable_interrupt(i32 noundef %10) #21, !dbg !4870
  tail call void %41(i32 noundef 2, i8* noundef %46) #21, !dbg !4871
  %48 = tail call i32 @vdma_enable_interrupt(i32 noundef %10) #21, !dbg !4872
  call void @llvm.dbg.value(metadata i32* %3, metadata !4810, metadata !DIExpression(DW_OP_deref)), !dbg !4814
  %49 = call i32 @vdma_get_available_send_space(i32 noundef %10, i32* noundef nonnull %3) #21, !dbg !4873
  call void @llvm.dbg.value(metadata i32 %49, metadata !4808, metadata !DIExpression()), !dbg !4814
  %50 = icmp eq i32 %49, 0, !dbg !4874
  br i1 %50, label %52, label %51, !dbg !4876

51:                                               ; preds = %44
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.45, i32 0, i32 0), i32 noundef 266, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.uart_send_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.46, i32 0, i32 0)) #24, !dbg !4877
  unreachable, !dbg !4877

52:                                               ; preds = %44
  %53 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 1, !dbg !4879
  %54 = load i32, i32* %53, align 4, !dbg !4879
  %55 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 2, !dbg !4880
  %56 = load i32, i32* %55, align 4, !dbg !4880
  %57 = sub i32 %54, %56, !dbg !4881
  call void @llvm.dbg.value(metadata i32 %57, metadata !4809, metadata !DIExpression()), !dbg !4814
  %58 = load i32, i32* %3, align 4, !dbg !4882
  call void @llvm.dbg.value(metadata i32 %58, metadata !4810, metadata !DIExpression()), !dbg !4814
  %59 = icmp ult i32 %58, %57, !dbg !4884
  br i1 %59, label %64, label %60, !dbg !4885

60:                                               ; preds = %52
  %61 = call i32 @vdma_disable_interrupt(i32 noundef %10) #21, !dbg !4886
  call void @llvm.dbg.value(metadata i32 %61, metadata !4808, metadata !DIExpression()), !dbg !4814
  %62 = icmp eq i32 %61, 0, !dbg !4888
  br i1 %62, label %64, label %63, !dbg !4890

63:                                               ; preds = %60
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.45, i32 0, i32 0), i32 noundef 274, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.uart_send_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.46, i32 0, i32 0)) #24, !dbg !4891
  unreachable, !dbg !4891

64:                                               ; preds = %60, %52, %37, %38
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #23, !dbg !4893
  ret void, !dbg !4893
}

; Function Attrs: optsize
declare dso_local i32 @vdma_get_available_send_space(i32 noundef, i32* noundef) local_unnamed_addr #2

; Function Attrs: optsize
declare dso_local zeroext i1 @hal_sleep_manager_is_sleep_handle_alive(i8 noundef zeroext) local_unnamed_addr #2

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_error_handler(i32 noundef %0) local_unnamed_addr #0 !dbg !4894 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4898, metadata !DIExpression()), !dbg !4902
  %2 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !4903
  %3 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %2, align 4, !dbg !4903
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %3, metadata !4899, metadata !DIExpression()), !dbg !4902
  %4 = tail call i32 @uart_verify_error(%struct.UART_REGISTER_T* noundef %3) #21, !dbg !4904
  %5 = icmp eq i32 %4, 0, !dbg !4904
  br i1 %5, label %6, label %14, !dbg !4906

6:                                                ; preds = %1
  tail call void @uart_purge_fifo(%struct.UART_REGISTER_T* noundef %3, i32 noundef 1) #21, !dbg !4907
  tail call void @uart_purge_fifo(%struct.UART_REGISTER_T* noundef %3, i32 noundef 0) #21, !dbg !4909
  %7 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 0, !dbg !4910
  %8 = load void (i32, i8*)*, void (i32, i8*)** %7, align 4, !dbg !4910
  call void @llvm.dbg.value(metadata void (i32, i8*)* %8, metadata !4900, metadata !DIExpression()), !dbg !4902
  call void @llvm.dbg.value(metadata i8* undef, metadata !4901, metadata !DIExpression()), !dbg !4902
  %9 = icmp eq void (i32, i8*)* %8, null, !dbg !4911
  br i1 %9, label %10, label %11, !dbg !4913

10:                                               ; preds = %6
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.45, i32 0, i32 0), i32 noundef 296, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.uart_error_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.46, i32 0, i32 0)) #24, !dbg !4914
  unreachable, !dbg !4914

11:                                               ; preds = %6
  %12 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 1, !dbg !4916
  %13 = load i8*, i8** %12, align 4, !dbg !4916
  call void @llvm.dbg.value(metadata i8* %13, metadata !4901, metadata !DIExpression()), !dbg !4902
  tail call void %8(i32 noundef -1, i8* noundef %13) #21, !dbg !4917
  br label %14, !dbg !4918

14:                                               ; preds = %11, %1
  ret void, !dbg !4919
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_backup_all_registers() local_unnamed_addr #0 !dbg !4920 {
  call void @llvm.dbg.value(metadata i32 0, metadata !4922, metadata !DIExpression()), !dbg !4927
  br label %1, !dbg !4928

1:                                                ; preds = %0, %21
  %2 = phi i32 [ 0, %0 ], [ %22, %21 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !4922, metadata !DIExpression()), !dbg !4927
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %2, !dbg !4930
  %4 = load volatile i32, i32* %3, align 4, !dbg !4930
  %5 = icmp eq i32 %4, 0, !dbg !4934
  br i1 %5, label %21, label %6, !dbg !4935

6:                                                ; preds = %1
  %7 = load volatile i32, i32* %3, align 4, !dbg !4936
  call void @llvm.dbg.value(metadata i32 %7, metadata !4923, metadata !DIExpression()), !dbg !4927
  %8 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_flowcontrol_status, i32 0, i32 %2, !dbg !4938
  %9 = load i32, i32* %8, align 4, !dbg !4938
  call void @llvm.dbg.value(metadata i32 %9, metadata !4924, metadata !DIExpression()), !dbg !4927
  %10 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %2, i32 0, !dbg !4939
  %11 = load void (i32, i8*)*, void (i32, i8*)** %10, align 4, !dbg !4939
  call void @llvm.dbg.value(metadata void (i32, i8*)* %11, metadata !4925, metadata !DIExpression()), !dbg !4927
  %12 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %2, i32 1, !dbg !4940
  %13 = load i8*, i8** %12, align 4, !dbg !4940
  call void @llvm.dbg.value(metadata i8* %13, metadata !4926, metadata !DIExpression()), !dbg !4927
  %14 = tail call i32 @hal_uart_deinit(i32 noundef %2) #22, !dbg !4941
  store volatile i32 %7, i32* %3, align 4, !dbg !4942
  store i32 %9, i32* %8, align 4, !dbg !4943
  store void (i32, i8*)* %11, void (i32, i8*)** %10, align 4, !dbg !4944
  store i8* %13, i8** %12, align 4, !dbg !4945
  %15 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_irq_num to [0 x i32]*), i32 0, i32 %2, !dbg !4946
  %16 = load i32, i32* %15, align 4, !dbg !4946
  %17 = tail call i32 @hal_nvic_get_pending_irq(i32 noundef %16) #21, !dbg !4947
  %18 = icmp ne i32 %17, 0, !dbg !4947
  %19 = getelementptr inbounds [4 x i8], [4 x i8]* @g_uart_irq_pending_status, i32 0, i32 %2, !dbg !4948
  %20 = zext i1 %18 to i8, !dbg !4949
  store i8 %20, i8* %19, align 1, !dbg !4949
  br label %21, !dbg !4950

21:                                               ; preds = %1, %6
  %22 = add nuw nsw i32 %2, 1, !dbg !4951
  call void @llvm.dbg.value(metadata i32 %22, metadata !4922, metadata !DIExpression()), !dbg !4927
  %23 = icmp eq i32 %22, 4, !dbg !4952
  br i1 %23, label %24, label %1, !dbg !4928, !llvm.loop !4953

24:                                               ; preds = %21
  ret void, !dbg !4955
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_deinit(i32 noundef %0) local_unnamed_addr #0 !dbg !4956 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4961, metadata !DIExpression()), !dbg !4969
  %2 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #22, !dbg !4970
  br i1 %2, label %3, label %56, !dbg !4972

3:                                                ; preds = %1
  %4 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !4973
  call void @llvm.dbg.value(metadata i32 %4, metadata !4965, metadata !DIExpression()), !dbg !4969
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4974
  %6 = load volatile i32, i32* %5, align 4, !dbg !4974
  %7 = icmp eq i32 %6, 0, !dbg !4976
  br i1 %7, label %54, label %8, !dbg !4977

8:                                                ; preds = %3
  %9 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !4978
  %10 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %9, align 4, !dbg !4978
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %10, metadata !4962, metadata !DIExpression()), !dbg !4969
  tail call void @uart_query_empty(%struct.UART_REGISTER_T* noundef %10) #21, !dbg !4979
  %11 = load volatile i32, i32* %5, align 4, !dbg !4980
  %12 = icmp eq i32 %11, 2, !dbg !4982
  br i1 %12, label %13, label %43, !dbg !4983

13:                                               ; preds = %8
  %14 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #21, !dbg !4984
  call void @llvm.dbg.value(metadata i32 %14, metadata !4963, metadata !DIExpression()), !dbg !4969
  %15 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #21, !dbg !4986
  call void @llvm.dbg.value(metadata i32 %15, metadata !4964, metadata !DIExpression()), !dbg !4969
  %16 = tail call i32 @vdma_disable_interrupt(i32 noundef %14) #21, !dbg !4987
  call void @llvm.dbg.value(metadata i32 %16, metadata !4966, metadata !DIExpression()), !dbg !4969
  %17 = icmp eq i32 %16, 0, !dbg !4988
  br i1 %17, label %19, label %18, !dbg !4990

18:                                               ; preds = %13
  tail call void @restore_interrupt_mask(i32 noundef %4) #21, !dbg !4991
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.45, i32 0, i32 0), i32 noundef 575, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.46, i32 0, i32 0)) #24, !dbg !4993
  unreachable, !dbg !4993

19:                                               ; preds = %13
  %20 = tail call i32 @vdma_disable_interrupt(i32 noundef %15) #21, !dbg !4994
  call void @llvm.dbg.value(metadata i32 %20, metadata !4966, metadata !DIExpression()), !dbg !4969
  %21 = icmp eq i32 %20, 0, !dbg !4995
  br i1 %21, label %23, label %22, !dbg !4997

22:                                               ; preds = %19
  tail call void @restore_interrupt_mask(i32 noundef %4) #21, !dbg !4998
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.45, i32 0, i32 0), i32 noundef 581, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.46, i32 0, i32 0)) #24, !dbg !5000
  unreachable, !dbg !5000

23:                                               ; preds = %19
  %24 = tail call i32 @vdma_stop(i32 noundef %14) #21, !dbg !5001
  call void @llvm.dbg.value(metadata i32 %24, metadata !4966, metadata !DIExpression()), !dbg !4969
  %25 = icmp eq i32 %24, 0, !dbg !5002
  br i1 %25, label %27, label %26, !dbg !5004

26:                                               ; preds = %23
  tail call void @restore_interrupt_mask(i32 noundef %4) #21, !dbg !5005
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.45, i32 0, i32 0), i32 noundef 587, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.46, i32 0, i32 0)) #24, !dbg !5007
  unreachable, !dbg !5007

27:                                               ; preds = %23
  %28 = tail call i32 @vdma_stop(i32 noundef %15) #21, !dbg !5008
  call void @llvm.dbg.value(metadata i32 %28, metadata !4966, metadata !DIExpression()), !dbg !4969
  %29 = icmp eq i32 %28, 0, !dbg !5009
  br i1 %29, label %31, label %30, !dbg !5011

30:                                               ; preds = %27
  tail call void @restore_interrupt_mask(i32 noundef %4) #21, !dbg !5012
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.45, i32 0, i32 0), i32 noundef 593, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.46, i32 0, i32 0)) #24, !dbg !5014
  unreachable, !dbg !5014

31:                                               ; preds = %27
  %32 = tail call i32 @vdma_deinit(i32 noundef %14) #21, !dbg !5015
  call void @llvm.dbg.value(metadata i32 %32, metadata !4966, metadata !DIExpression()), !dbg !4969
  %33 = icmp eq i32 %32, 0, !dbg !5016
  br i1 %33, label %35, label %34, !dbg !5018

34:                                               ; preds = %31
  tail call void @restore_interrupt_mask(i32 noundef %4) #21, !dbg !5019
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.45, i32 0, i32 0), i32 noundef 599, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.46, i32 0, i32 0)) #24, !dbg !5021
  unreachable, !dbg !5021

35:                                               ; preds = %31
  %36 = tail call i32 @vdma_deinit(i32 noundef %15) #21, !dbg !5022
  call void @llvm.dbg.value(metadata i32 %36, metadata !4966, metadata !DIExpression()), !dbg !4969
  %37 = icmp eq i32 %36, 0, !dbg !5023
  br i1 %37, label %39, label %38, !dbg !5025

38:                                               ; preds = %35
  tail call void @restore_interrupt_mask(i32 noundef %4) #21, !dbg !5026
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.45, i32 0, i32 0), i32 noundef 605, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.46, i32 0, i32 0)) #24, !dbg !5028
  unreachable, !dbg !5028

39:                                               ; preds = %35
  %40 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_irq_num to [0 x i32]*), i32 0, i32 %0, !dbg !5029
  %41 = load i32, i32* %40, align 4, !dbg !5029
  %42 = tail call i32 @hal_nvic_disable_irq(i32 noundef %41) #21, !dbg !5030
  br label %43, !dbg !5031

43:                                               ; preds = %39, %8
  tail call void @uart_reset_default_value(%struct.UART_REGISTER_T* noundef %10) #21, !dbg !5032
  %44 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_pdn to [0 x i32]*), i32 0, i32 %0, !dbg !5033
  %45 = load i32, i32* %44, align 4, !dbg !5033
  %46 = tail call i32 @hal_clock_disable(i32 noundef %45) #21, !dbg !5034
  call void @llvm.dbg.value(metadata i32 %46, metadata !4967, metadata !DIExpression()), !dbg !4969
  %47 = icmp eq i32 %46, 0, !dbg !5035
  br i1 %47, label %49, label %48, !dbg !5037

48:                                               ; preds = %43
  tail call void @restore_interrupt_mask(i32 noundef %4) #21, !dbg !5038
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.45, i32 0, i32 0), i32 noundef 614, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.46, i32 0, i32 0)) #24, !dbg !5040
  unreachable, !dbg !5040

49:                                               ; preds = %43
  %50 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 0, !dbg !5041
  store void (i32, i8*)* null, void (i32, i8*)** %50, align 4, !dbg !5042
  %51 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 1, !dbg !5043
  store i8* null, i8** %51, align 4, !dbg !5044
  %52 = getelementptr inbounds [4 x i8], [4 x i8]* @g_uart_frist_send_complete_interrupt, i32 0, i32 %0, !dbg !5045
  store i8 0, i8* %52, align 1, !dbg !5046
  %53 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_flowcontrol_status, i32 0, i32 %0, !dbg !5047
  store i32 0, i32* %53, align 4, !dbg !5048
  store volatile i32 0, i32* %5, align 4, !dbg !5049
  br label %54, !dbg !5050

54:                                               ; preds = %3, %49
  %55 = phi i32 [ 0, %49 ], [ -2, %3 ]
  tail call void @restore_interrupt_mask(i32 noundef %4) #21, !dbg !4969
  br label %56, !dbg !5051

56:                                               ; preds = %54, %1
  %57 = phi i32 [ -4, %1 ], [ %55, %54 ], !dbg !4969
  ret i32 %57, !dbg !5051
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) unnamed_addr #9 !dbg !5052 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5056, metadata !DIExpression()), !dbg !5057
  %2 = icmp ult i32 %0, 4, !dbg !5058
  ret i1 %2, !dbg !5059
}

; Function Attrs: optsize
declare dso_local i32 @vdma_stop(i32 noundef) local_unnamed_addr #2

; Function Attrs: optsize
declare dso_local i32 @vdma_deinit(i32 noundef) local_unnamed_addr #2

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_restore_all_registers() local_unnamed_addr #0 !dbg !5060 {
  store i1 true, i1* @g_uart_restore_init, align 1, !dbg !5067
  call void @llvm.dbg.value(metadata i32 0, metadata !5063, metadata !DIExpression()), !dbg !5068
  br label %1, !dbg !5069

1:                                                ; preds = %0, %51
  %2 = phi i32 [ 0, %0 ], [ %52, %51 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !5063, metadata !DIExpression()), !dbg !5068
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %2, !dbg !5071
  %4 = load volatile i32, i32* %3, align 4, !dbg !5071
  call void @llvm.dbg.value(metadata i32 %4, metadata !5065, metadata !DIExpression()), !dbg !5068
  %5 = icmp eq i32 %4, 0, !dbg !5074
  br i1 %5, label %9, label %6, !dbg !5076

6:                                                ; preds = %1
  store volatile i32 0, i32* %3, align 4, !dbg !5077
  %7 = getelementptr inbounds [4 x %struct.hal_uart_config_t], [4 x %struct.hal_uart_config_t]* @g_uart_config, i32 0, i32 %2, !dbg !5079
  %8 = tail call i32 @hal_uart_init(i32 noundef %2, %struct.hal_uart_config_t* noundef nonnull %7) #22, !dbg !5080
  br label %9, !dbg !5081

9:                                                ; preds = %6, %1
  %10 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_flowcontrol_status, i32 0, i32 %2, !dbg !5082
  %11 = load i32, i32* %10, align 4, !dbg !5082
  switch i32 %11, label %30 [
    i32 1, label %12
    i32 2, label %28
  ], !dbg !5084

12:                                               ; preds = %9
  %13 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %2, !dbg !5085
  %14 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %13, align 4, !dbg !5085
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %14, metadata !5064, metadata !DIExpression()), !dbg !5068
  %15 = getelementptr inbounds [4 x %struct.uart_sw_flowcontrol_config_t], [4 x %struct.uart_sw_flowcontrol_config_t]* @g_uart_sw_flowcontrol_config, i32 0, i32 %2, i32 0, !dbg !5087
  %16 = load i8, i8* %15, align 1, !dbg !5087
  tail call void @uart_put_char_block(%struct.UART_REGISTER_T* noundef %14, i8 noundef zeroext %16) #21, !dbg !5088
  %17 = getelementptr inbounds [4 x %struct.hal_uart_config_t], [4 x %struct.hal_uart_config_t]* @g_uart_config, i32 0, i32 %2, i32 0, !dbg !5089
  %18 = load i32, i32* %17, align 4, !dbg !5089
  %19 = udiv i32 12000000, %18, !dbg !5090
  %20 = add nuw nsw i32 %19, 1, !dbg !5091
  call void @llvm.dbg.value(metadata i32 %20, metadata !5062, metadata !DIExpression()), !dbg !5068
  %21 = tail call i32 @hal_gpt_delay_us(i32 noundef %20) #21, !dbg !5092
  %22 = load i8, i8* %15, align 1, !dbg !5093
  %23 = getelementptr inbounds [4 x %struct.uart_sw_flowcontrol_config_t], [4 x %struct.uart_sw_flowcontrol_config_t]* @g_uart_sw_flowcontrol_config, i32 0, i32 %2, i32 1, !dbg !5094
  %24 = load i8, i8* %23, align 1, !dbg !5094
  %25 = getelementptr inbounds [4 x %struct.uart_sw_flowcontrol_config_t], [4 x %struct.uart_sw_flowcontrol_config_t]* @g_uart_sw_flowcontrol_config, i32 0, i32 %2, i32 2, !dbg !5095
  %26 = load i8, i8* %25, align 1, !dbg !5095
  %27 = tail call i32 @hal_uart_set_software_flowcontrol(i32 noundef %2, i8 noundef zeroext %22, i8 noundef zeroext %24, i8 noundef zeroext %26) #22, !dbg !5096
  br label %30, !dbg !5097

28:                                               ; preds = %9
  %29 = tail call i32 @hal_uart_set_hardware_flowcontrol(i32 noundef %2) #22, !dbg !5098
  br label %30, !dbg !5101

30:                                               ; preds = %9, %28, %12
  %31 = icmp eq i32 %4, 2, !dbg !5102
  br i1 %31, label %32, label %40, !dbg !5104

32:                                               ; preds = %30
  %33 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %2, !dbg !5105
  %34 = tail call i32 @hal_uart_set_dma(i32 noundef %2, %struct.hal_uart_dma_config_t* noundef nonnull %33) #22, !dbg !5107
  %35 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %2, i32 0, !dbg !5108
  %36 = load void (i32, i8*)*, void (i32, i8*)** %35, align 4, !dbg !5108
  %37 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %2, i32 1, !dbg !5109
  %38 = load i8*, i8** %37, align 4, !dbg !5109
  %39 = tail call i32 @hal_uart_register_callback(i32 noundef %2, void (i32, i8*)* noundef %36, i8* noundef %38) #22, !dbg !5110
  br label %40, !dbg !5111

40:                                               ; preds = %32, %30
  %41 = getelementptr inbounds [4 x i8], [4 x i8]* @g_uart_sleep_handler, i32 0, i32 %2, !dbg !5112
  %42 = load i8, i8* %41, align 1, !dbg !5112
  %43 = tail call zeroext i1 @hal_sleep_manager_is_sleep_handle_alive(i8 noundef zeroext %42) #21, !dbg !5113
  call void @llvm.dbg.value(metadata i1 %43, metadata !5066, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5068
  br i1 %43, label %44, label %51, !dbg !5114

44:                                               ; preds = %40
  %45 = getelementptr inbounds [4 x i8], [4 x i8]* @g_uart_irq_pending_status, i32 0, i32 %2, !dbg !5116
  %46 = load i8, i8* %45, align 1, !dbg !5116, !range !3203
  %47 = icmp eq i8 %46, 0, !dbg !5116
  br i1 %47, label %51, label %48, !dbg !5117

48:                                               ; preds = %44
  %49 = load i8, i8* %41, align 1, !dbg !5118
  %50 = tail call i32 @hal_sleep_manager_unlock_sleep(i8 noundef zeroext %49) #21, !dbg !5120
  br label %51, !dbg !5121

51:                                               ; preds = %40, %44, %48
  %52 = add nuw nsw i32 %2, 1, !dbg !5122
  call void @llvm.dbg.value(metadata i32 %52, metadata !5063, metadata !DIExpression()), !dbg !5068
  %53 = icmp eq i32 %52, 4, !dbg !5123
  br i1 %53, label %54, label %1, !dbg !5069, !llvm.loop !5124

54:                                               ; preds = %51
  store i1 false, i1* @g_uart_restore_init, align 1, !dbg !5126
  ret void, !dbg !5127
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_init(i32 noundef %0, %struct.hal_uart_config_t* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !5128 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5133, metadata !DIExpression()), !dbg !5140
  call void @llvm.dbg.value(metadata %struct.hal_uart_config_t* %1, metadata !5134, metadata !DIExpression()), !dbg !5140
  %3 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #22, !dbg !5141
  br i1 %3, label %4, label %59, !dbg !5143

4:                                                ; preds = %2
  %5 = tail call fastcc zeroext i1 @uart_config_is_valid(%struct.hal_uart_config_t* noundef %1) #22, !dbg !5144
  br i1 %5, label %6, label %59, !dbg !5145

6:                                                ; preds = %4
  %7 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !5146
  call void @llvm.dbg.value(metadata i32 %7, metadata !5138, metadata !DIExpression()), !dbg !5140
  %8 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5147
  %9 = load volatile i32, i32* %8, align 4, !dbg !5147
  %10 = icmp eq i32 %9, 0, !dbg !5149
  br i1 %10, label %12, label %11, !dbg !5150

11:                                               ; preds = %6
  tail call void @restore_interrupt_mask(i32 noundef %7) #21, !dbg !5151
  br label %59, !dbg !5153

12:                                               ; preds = %6
  %13 = load i1, i1* @g_uart_restore_init, align 1, !dbg !5154
  br i1 %13, label %19, label %14, !dbg !5156

14:                                               ; preds = %12
  %15 = getelementptr inbounds [0 x i8*], [0 x i8*]* bitcast ([4 x i8*]* @g_uart_sleep_handler_name to [0 x i8*]*), i32 0, i32 %0, !dbg !5157
  %16 = load i8*, i8** %15, align 4, !dbg !5157
  %17 = tail call zeroext i8 @hal_sleep_manager_set_sleep_handle(i8* noundef %16) #21, !dbg !5159
  %18 = getelementptr inbounds [4 x i8], [4 x i8]* @g_uart_sleep_handler, i32 0, i32 %0, !dbg !5160
  store i8 %17, i8* %18, align 1, !dbg !5161
  br label %19, !dbg !5162

19:                                               ; preds = %14, %12
  %20 = load i1, i1* @g_uart_global_data_initialized, align 1, !dbg !5163
  br i1 %20, label %32, label %21, !dbg !5165

21:                                               ; preds = %19, %21
  %22 = phi i32 [ %29, %21 ], [ 0, %19 ]
  call void @llvm.dbg.value(metadata i32 %22, metadata !5136, metadata !DIExpression()), !dbg !5140
  %23 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %22, !dbg !5166
  store volatile i32 0, i32* %23, align 4, !dbg !5171
  %24 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_flowcontrol_status, i32 0, i32 %22, !dbg !5172
  store i32 0, i32* %24, align 4, !dbg !5173
  %25 = getelementptr inbounds [4 x i8], [4 x i8]* @g_uart_frist_send_complete_interrupt, i32 0, i32 %22, !dbg !5174
  store i8 0, i8* %25, align 1, !dbg !5175
  %26 = getelementptr inbounds [4 x i8], [4 x i8]* @g_uart_send_lock_status, i32 0, i32 %22, !dbg !5176
  store i8 0, i8* %26, align 1, !dbg !5177
  %27 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %22, i32 1, !dbg !5178
  store i8* null, i8** %27, align 4, !dbg !5179
  %28 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %22, i32 0, !dbg !5180
  store void (i32, i8*)* null, void (i32, i8*)** %28, align 4, !dbg !5181
  %29 = add nuw nsw i32 %22, 1, !dbg !5182
  call void @llvm.dbg.value(metadata i32 %29, metadata !5136, metadata !DIExpression()), !dbg !5140
  %30 = icmp eq i32 %29, 4, !dbg !5183
  br i1 %30, label %31, label %21, !dbg !5184, !llvm.loop !5185

31:                                               ; preds = %21
  store i1 true, i1* @g_uart_global_data_initialized, align 1, !dbg !5187
  br label %32, !dbg !5188

32:                                               ; preds = %31, %19
  %33 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 0, !dbg !5189
  %34 = load i32, i32* %33, align 4, !dbg !5189
  %35 = getelementptr inbounds [4 x %struct.hal_uart_config_t], [4 x %struct.hal_uart_config_t]* @g_uart_config, i32 0, i32 %0, i32 0, !dbg !5190
  store i32 %34, i32* %35, align 4, !dbg !5191
  %36 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 1, !dbg !5192
  %37 = load i32, i32* %36, align 4, !dbg !5192
  %38 = getelementptr inbounds [4 x %struct.hal_uart_config_t], [4 x %struct.hal_uart_config_t]* @g_uart_config, i32 0, i32 %0, i32 1, !dbg !5193
  store i32 %37, i32* %38, align 4, !dbg !5194
  %39 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 2, !dbg !5195
  %40 = load i32, i32* %39, align 4, !dbg !5195
  %41 = getelementptr inbounds [4 x %struct.hal_uart_config_t], [4 x %struct.hal_uart_config_t]* @g_uart_config, i32 0, i32 %0, i32 2, !dbg !5196
  store i32 %40, i32* %41, align 4, !dbg !5197
  %42 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 3, !dbg !5198
  %43 = load i32, i32* %42, align 4, !dbg !5198
  %44 = getelementptr inbounds [4 x %struct.hal_uart_config_t], [4 x %struct.hal_uart_config_t]* @g_uart_config, i32 0, i32 %0, i32 3, !dbg !5199
  store i32 %43, i32* %44, align 4, !dbg !5200
  store volatile i32 1, i32* %8, align 4, !dbg !5201
  tail call void @restore_interrupt_mask(i32 noundef %7) #21, !dbg !5202
  %45 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_pdn to [0 x i32]*), i32 0, i32 %0, !dbg !5203
  %46 = load i32, i32* %45, align 4, !dbg !5203
  %47 = tail call i32 @hal_clock_enable(i32 noundef %46) #21, !dbg !5204
  call void @llvm.dbg.value(metadata i32 %47, metadata !5139, metadata !DIExpression()), !dbg !5140
  %48 = icmp eq i32 %47, 0, !dbg !5205
  br i1 %48, label %50, label %49, !dbg !5207

49:                                               ; preds = %32
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.45, i32 0, i32 0), i32 noundef 526, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.hal_uart_init, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.46, i32 0, i32 0)) #24, !dbg !5208
  unreachable, !dbg !5208

50:                                               ; preds = %32
  %51 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !5210
  %52 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %51, align 4, !dbg !5210
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %52, metadata !5135, metadata !DIExpression()), !dbg !5140
  tail call void @uart_reset_default_value(%struct.UART_REGISTER_T* noundef %52) #21, !dbg !5211
  %53 = load i32, i32* %33, align 4, !dbg !5212
  %54 = getelementptr inbounds [13 x i32], [13 x i32]* @g_uart_baudrate_map, i32 0, i32 %53, !dbg !5213
  %55 = load i32, i32* %54, align 4, !dbg !5213
  call void @llvm.dbg.value(metadata i32 %55, metadata !5137, metadata !DIExpression()), !dbg !5140
  tail call void @uart_set_baudrate(%struct.UART_REGISTER_T* noundef %52, i32 noundef %55) #21, !dbg !5214
  %56 = load i32, i32* %36, align 4, !dbg !5215
  %57 = load i32, i32* %39, align 4, !dbg !5216
  %58 = load i32, i32* %42, align 4, !dbg !5217
  tail call void @uart_set_format(%struct.UART_REGISTER_T* noundef %52, i32 noundef %56, i32 noundef %57, i32 noundef %58) #21, !dbg !5218
  tail call void @uart_set_fifo(%struct.UART_REGISTER_T* noundef %52) #21, !dbg !5219
  tail call void @uart_set_sleep_mode(%struct.UART_REGISTER_T* noundef %52) #21, !dbg !5220
  br label %59, !dbg !5221

59:                                               ; preds = %2, %4, %50, %11
  %60 = phi i32 [ -3, %11 ], [ 0, %50 ], [ -4, %4 ], [ -4, %2 ], !dbg !5140
  ret i32 %60, !dbg !5222
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_software_flowcontrol(i32 noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) local_unnamed_addr #0 !dbg !5223 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5227, metadata !DIExpression()), !dbg !5232
  call void @llvm.dbg.value(metadata i8 %1, metadata !5228, metadata !DIExpression()), !dbg !5232
  call void @llvm.dbg.value(metadata i8 %2, metadata !5229, metadata !DIExpression()), !dbg !5232
  call void @llvm.dbg.value(metadata i8 %3, metadata !5230, metadata !DIExpression()), !dbg !5232
  %5 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #22, !dbg !5233
  br i1 %5, label %6, label %17, !dbg !5235

6:                                                ; preds = %4
  %7 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5236
  %8 = load volatile i32, i32* %7, align 4, !dbg !5236
  %9 = icmp eq i32 %8, 0, !dbg !5238
  br i1 %9, label %17, label %10, !dbg !5239

10:                                               ; preds = %6
  %11 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !5240
  %12 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %11, align 4, !dbg !5240
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %12, metadata !5231, metadata !DIExpression()), !dbg !5232
  tail call void @uart_set_software_flowcontrol(%struct.UART_REGISTER_T* noundef %12, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) #21, !dbg !5241
  %13 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_flowcontrol_status, i32 0, i32 %0, !dbg !5242
  store i32 1, i32* %13, align 4, !dbg !5243
  %14 = getelementptr inbounds [4 x %struct.uart_sw_flowcontrol_config_t], [4 x %struct.uart_sw_flowcontrol_config_t]* @g_uart_sw_flowcontrol_config, i32 0, i32 %0, i32 0, !dbg !5244
  store i8 %1, i8* %14, align 1, !dbg !5245
  %15 = getelementptr inbounds [4 x %struct.uart_sw_flowcontrol_config_t], [4 x %struct.uart_sw_flowcontrol_config_t]* @g_uart_sw_flowcontrol_config, i32 0, i32 %0, i32 1, !dbg !5246
  store i8 %2, i8* %15, align 1, !dbg !5247
  %16 = getelementptr inbounds [4 x %struct.uart_sw_flowcontrol_config_t], [4 x %struct.uart_sw_flowcontrol_config_t]* @g_uart_sw_flowcontrol_config, i32 0, i32 %0, i32 2, !dbg !5248
  store i8 %3, i8* %16, align 1, !dbg !5249
  br label %17, !dbg !5250

17:                                               ; preds = %6, %4, %10
  %18 = phi i32 [ 0, %10 ], [ -4, %4 ], [ -2, %6 ], !dbg !5232
  ret i32 %18, !dbg !5251
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_hardware_flowcontrol(i32 noundef %0) local_unnamed_addr #0 !dbg !5252 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5254, metadata !DIExpression()), !dbg !5256
  %2 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #22, !dbg !5257
  br i1 %2, label %3, label %11, !dbg !5259

3:                                                ; preds = %1
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5260
  %5 = load volatile i32, i32* %4, align 4, !dbg !5260
  %6 = icmp eq i32 %5, 0, !dbg !5262
  br i1 %6, label %11, label %7, !dbg !5263

7:                                                ; preds = %3
  %8 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !5264
  %9 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %8, align 4, !dbg !5264
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %9, metadata !5255, metadata !DIExpression()), !dbg !5256
  tail call void @uart_set_hardware_flowcontrol(%struct.UART_REGISTER_T* noundef %9) #21, !dbg !5265
  %10 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_flowcontrol_status, i32 0, i32 %0, !dbg !5266
  store i32 2, i32* %10, align 4, !dbg !5267
  br label %11, !dbg !5268

11:                                               ; preds = %3, %1, %7
  %12 = phi i32 [ 0, %7 ], [ -4, %1 ], [ -2, %3 ], !dbg !5256
  ret i32 %12, !dbg !5269
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_dma(i32 noundef %0, %struct.hal_uart_dma_config_t* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !5270 {
  %3 = alloca %struct.vdma_config_t, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !5276, metadata !DIExpression()), !dbg !5288
  call void @llvm.dbg.value(metadata %struct.hal_uart_dma_config_t* %1, metadata !5277, metadata !DIExpression()), !dbg !5288
  %4 = bitcast %struct.vdma_config_t* %3 to i8*, !dbg !5289
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #23, !dbg !5289
  call void @llvm.dbg.declare(metadata %struct.vdma_config_t* %3, metadata !5279, metadata !DIExpression()), !dbg !5290
  %5 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #22, !dbg !5291
  br i1 %5, label %6, label %101, !dbg !5293

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 0, !dbg !5294
  %8 = load i8*, i8** %7, align 4, !dbg !5294
  %9 = icmp eq i8* %8, null, !dbg !5296
  br i1 %9, label %101, label %10, !dbg !5297

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 3, !dbg !5298
  %12 = load i8*, i8** %11, align 4, !dbg !5298
  %13 = icmp eq i8* %12, null, !dbg !5299
  br i1 %13, label %101, label %14, !dbg !5300

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 1, !dbg !5301
  %16 = load i32, i32* %15, align 4, !dbg !5301
  %17 = icmp ugt i32 %16, 131071, !dbg !5303
  br i1 %17, label %101, label %18, !dbg !5304

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 2, !dbg !5305
  %20 = load i32, i32* %19, align 4, !dbg !5305
  %21 = icmp ugt i32 %20, 131071, !dbg !5306
  %22 = icmp ugt i32 %20, %16
  %23 = select i1 %21, i1 true, i1 %22, !dbg !5307
  br i1 %23, label %101, label %24, !dbg !5307

24:                                               ; preds = %18
  %25 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 4, !dbg !5308
  %26 = load i32, i32* %25, align 4, !dbg !5308
  %27 = icmp ugt i32 %26, 131071, !dbg !5310
  br i1 %27, label %101, label %28, !dbg !5311

28:                                               ; preds = %24
  %29 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 5, !dbg !5312
  %30 = load i32, i32* %29, align 4, !dbg !5312
  %31 = icmp ugt i32 %30, 131071, !dbg !5313
  br i1 %31, label %101, label %32, !dbg !5314

32:                                               ; preds = %28
  %33 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 6, !dbg !5315
  %34 = load i32, i32* %33, align 4, !dbg !5315
  %35 = icmp ugt i32 %34, 131071, !dbg !5316
  %36 = icmp ugt i32 %30, %26
  %37 = select i1 %35, i1 true, i1 %36, !dbg !5317
  %38 = icmp ugt i32 %34, %26
  %39 = select i1 %37, i1 true, i1 %38, !dbg !5317
  br i1 %39, label %101, label %40, !dbg !5317

40:                                               ; preds = %32
  %41 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5318
  %42 = load volatile i32, i32* %41, align 4, !dbg !5318
  %43 = icmp eq i32 %42, 1, !dbg !5320
  br i1 %43, label %44, label %101, !dbg !5321

44:                                               ; preds = %40
  %45 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #21, !dbg !5322
  call void @llvm.dbg.value(metadata i32 %45, metadata !5285, metadata !DIExpression()), !dbg !5288
  %46 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #21, !dbg !5323
  call void @llvm.dbg.value(metadata i32 %46, metadata !5286, metadata !DIExpression()), !dbg !5288
  %47 = tail call i32 @vdma_init(i32 noundef %45) #21, !dbg !5324
  call void @llvm.dbg.value(metadata i32 %47, metadata !5287, metadata !DIExpression()), !dbg !5288
  %48 = icmp eq i32 %47, 0, !dbg !5325
  br i1 %48, label %50, label %49, !dbg !5327

49:                                               ; preds = %44
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.45, i32 0, i32 0), i32 noundef 1107, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.46, i32 0, i32 0)) #24, !dbg !5328
  unreachable, !dbg !5328

50:                                               ; preds = %44
  %51 = load i8*, i8** %7, align 4, !dbg !5330
  %52 = ptrtoint i8* %51 to i32, !dbg !5331
  %53 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %3, i32 0, i32 0, !dbg !5332
  store i32 %52, i32* %53, align 4, !dbg !5333
  %54 = load i32, i32* %15, align 4, !dbg !5334
  %55 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %3, i32 0, i32 1, !dbg !5335
  store i32 %54, i32* %55, align 4, !dbg !5336
  %56 = call i32 @vdma_configure(i32 noundef %45, %struct.vdma_config_t* noundef nonnull %3) #21, !dbg !5337
  call void @llvm.dbg.value(metadata i32 %56, metadata !5287, metadata !DIExpression()), !dbg !5288
  %57 = icmp eq i32 %56, 0, !dbg !5338
  br i1 %57, label %59, label %58, !dbg !5340

58:                                               ; preds = %50
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.45, i32 0, i32 0), i32 noundef 1114, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.46, i32 0, i32 0)) #24, !dbg !5341
  unreachable, !dbg !5341

59:                                               ; preds = %50
  %60 = load i32, i32* %19, align 4, !dbg !5343
  %61 = call i32 @vdma_set_threshold(i32 noundef %45, i32 noundef %60) #21, !dbg !5344
  call void @llvm.dbg.value(metadata i32 %61, metadata !5287, metadata !DIExpression()), !dbg !5288
  %62 = icmp eq i32 %61, 0, !dbg !5345
  br i1 %62, label %64, label %63, !dbg !5347

63:                                               ; preds = %59
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.45, i32 0, i32 0), i32 noundef 1119, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.46, i32 0, i32 0)) #24, !dbg !5348
  unreachable, !dbg !5348

64:                                               ; preds = %59
  %65 = call i32 @vdma_init(i32 noundef %46) #21, !dbg !5350
  call void @llvm.dbg.value(metadata i32 %65, metadata !5287, metadata !DIExpression()), !dbg !5288
  %66 = icmp eq i32 %65, 0, !dbg !5351
  br i1 %66, label %68, label %67, !dbg !5353

67:                                               ; preds = %64
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.45, i32 0, i32 0), i32 noundef 1125, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.46, i32 0, i32 0)) #24, !dbg !5354
  unreachable, !dbg !5354

68:                                               ; preds = %64
  %69 = load i8*, i8** %11, align 4, !dbg !5356
  %70 = ptrtoint i8* %69 to i32, !dbg !5357
  store i32 %70, i32* %53, align 4, !dbg !5358
  %71 = load i32, i32* %25, align 4, !dbg !5359
  store i32 %71, i32* %55, align 4, !dbg !5360
  %72 = call i32 @vdma_configure(i32 noundef %46, %struct.vdma_config_t* noundef nonnull %3) #21, !dbg !5361
  call void @llvm.dbg.value(metadata i32 %72, metadata !5287, metadata !DIExpression()), !dbg !5288
  %73 = icmp eq i32 %72, 0, !dbg !5362
  br i1 %73, label %75, label %74, !dbg !5364

74:                                               ; preds = %68
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.45, i32 0, i32 0), i32 noundef 1132, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.46, i32 0, i32 0)) #24, !dbg !5365
  unreachable, !dbg !5365

75:                                               ; preds = %68
  %76 = load i32, i32* %29, align 4, !dbg !5367
  %77 = call i32 @vdma_set_threshold(i32 noundef %46, i32 noundef %76) #21, !dbg !5368
  call void @llvm.dbg.value(metadata i32 %77, metadata !5287, metadata !DIExpression()), !dbg !5288
  %78 = icmp eq i32 %77, 0, !dbg !5369
  br i1 %78, label %80, label %79, !dbg !5371

79:                                               ; preds = %75
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.45, i32 0, i32 0), i32 noundef 1137, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.46, i32 0, i32 0)) #24, !dbg !5372
  unreachable, !dbg !5372

80:                                               ; preds = %75
  %81 = load i32, i32* %33, align 4, !dbg !5374
  %82 = call i32 @vdma_set_alert_length(i32 noundef %46, i32 noundef %81) #21, !dbg !5375
  call void @llvm.dbg.value(metadata i32 %82, metadata !5287, metadata !DIExpression()), !dbg !5288
  %83 = icmp eq i32 %82, 0, !dbg !5376
  br i1 %83, label %85, label %84, !dbg !5378

84:                                               ; preds = %80
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.45, i32 0, i32 0), i32 noundef 1142, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.46, i32 0, i32 0)) #24, !dbg !5379
  unreachable, !dbg !5379

85:                                               ; preds = %80
  %86 = call i32 @save_and_set_interrupt_mask() #21, !dbg !5381
  call void @llvm.dbg.value(metadata i32 %86, metadata !5278, metadata !DIExpression()), !dbg !5288
  %87 = load i8*, i8** %7, align 4, !dbg !5382
  %88 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 0, !dbg !5383
  store i8* %87, i8** %88, align 4, !dbg !5384
  %89 = load i32, i32* %15, align 4, !dbg !5385
  %90 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 1, !dbg !5386
  store i32 %89, i32* %90, align 4, !dbg !5387
  %91 = load i32, i32* %19, align 4, !dbg !5388
  %92 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 2, !dbg !5389
  store i32 %91, i32* %92, align 4, !dbg !5390
  %93 = load i32, i32* %33, align 4, !dbg !5391
  %94 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 6, !dbg !5392
  store i32 %93, i32* %94, align 4, !dbg !5393
  %95 = load i8*, i8** %11, align 4, !dbg !5394
  %96 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 3, !dbg !5395
  store i8* %95, i8** %96, align 4, !dbg !5396
  %97 = load i32, i32* %25, align 4, !dbg !5397
  %98 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 4, !dbg !5398
  store i32 %97, i32* %98, align 4, !dbg !5399
  %99 = load i32, i32* %29, align 4, !dbg !5400
  %100 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 5, !dbg !5401
  store i32 %99, i32* %100, align 4, !dbg !5402
  call void @restore_interrupt_mask(i32 noundef %86) #21, !dbg !5403
  br label %101, !dbg !5404

101:                                              ; preds = %40, %24, %28, %32, %14, %18, %6, %10, %2, %85
  %102 = phi i32 [ 0, %85 ], [ -4, %2 ], [ -4, %10 ], [ -4, %6 ], [ -4, %18 ], [ -4, %14 ], [ -4, %32 ], [ -4, %28 ], [ -4, %24 ], [ -2, %40 ], !dbg !5288
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #23, !dbg !5405
  ret i32 %102, !dbg !5405
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_register_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !5406 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5410, metadata !DIExpression()), !dbg !5418
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !5411, metadata !DIExpression()), !dbg !5418
  call void @llvm.dbg.value(metadata i8* %2, metadata !5412, metadata !DIExpression()), !dbg !5418
  %4 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #22, !dbg !5419
  %5 = icmp ne void (i32, i8*)* %1, null
  %6 = and i1 %5, %4, !dbg !5421
  br i1 %6, label %7, label %39, !dbg !5421

7:                                                ; preds = %3
  %8 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !5422
  call void @llvm.dbg.value(metadata i32 %8, metadata !5415, metadata !DIExpression()), !dbg !5418
  %9 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5423
  %10 = load volatile i32, i32* %9, align 4, !dbg !5423
  %11 = icmp eq i32 %10, 1, !dbg !5425
  br i1 %11, label %12, label %37, !dbg !5426

12:                                               ; preds = %7
  %13 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #21, !dbg !5427
  call void @llvm.dbg.value(metadata i32 %13, metadata !5413, metadata !DIExpression()), !dbg !5418
  %14 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #21, !dbg !5428
  call void @llvm.dbg.value(metadata i32 %14, metadata !5414, metadata !DIExpression()), !dbg !5418
  %15 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 0, !dbg !5429
  store void (i32, i8*)* %1, void (i32, i8*)** %15, align 4, !dbg !5430
  %16 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 1, !dbg !5431
  store i8* %2, i8** %16, align 4, !dbg !5432
  %17 = shl i32 %0, 1, !dbg !5433
  %18 = getelementptr inbounds [8 x %struct.uart_dma_callback_data_t], [8 x %struct.uart_dma_callback_data_t]* @g_uart_dma_callback_data, i32 0, i32 %17, !dbg !5434
  tail call void @uart_dma_channel_to_callback_data(i32 noundef %13, %struct.uart_dma_callback_data_t* noundef nonnull %18) #21, !dbg !5435
  %19 = getelementptr %struct.uart_dma_callback_data_t, %struct.uart_dma_callback_data_t* %18, i32 0, i32 0, !dbg !5436
  %20 = tail call i32 @vdma_register_callback(i32 noundef %13, void (i32, i8*)* noundef nonnull @uart_dma_callback_handler, i8* noundef nonnull %19) #21, !dbg !5437
  call void @llvm.dbg.value(metadata i32 %20, metadata !5416, metadata !DIExpression()), !dbg !5418
  %21 = icmp eq i32 %20, 0, !dbg !5438
  br i1 %21, label %23, label %22, !dbg !5440

22:                                               ; preds = %12
  tail call void @restore_interrupt_mask(i32 noundef %8) #21, !dbg !5441
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.45, i32 0, i32 0), i32 noundef 921, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.hal_uart_register_callback, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.46, i32 0, i32 0)) #24, !dbg !5443
  unreachable, !dbg !5443

23:                                               ; preds = %12
  %24 = or i32 %17, 1, !dbg !5444
  %25 = getelementptr inbounds [8 x %struct.uart_dma_callback_data_t], [8 x %struct.uart_dma_callback_data_t]* @g_uart_dma_callback_data, i32 0, i32 %24, !dbg !5445
  tail call void @uart_dma_channel_to_callback_data(i32 noundef %14, %struct.uart_dma_callback_data_t* noundef nonnull %25) #21, !dbg !5446
  %26 = getelementptr %struct.uart_dma_callback_data_t, %struct.uart_dma_callback_data_t* %25, i32 0, i32 0, !dbg !5447
  %27 = tail call i32 @vdma_register_callback(i32 noundef %14, void (i32, i8*)* noundef nonnull @uart_dma_callback_handler, i8* noundef nonnull %26) #21, !dbg !5448
  call void @llvm.dbg.value(metadata i32 %27, metadata !5416, metadata !DIExpression()), !dbg !5418
  %28 = icmp eq i32 %27, 0, !dbg !5449
  br i1 %28, label %30, label %29, !dbg !5451

29:                                               ; preds = %23
  tail call void @restore_interrupt_mask(i32 noundef %8) #21, !dbg !5452
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.45, i32 0, i32 0), i32 noundef 928, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.hal_uart_register_callback, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.46, i32 0, i32 0)) #24, !dbg !5454
  unreachable, !dbg !5454

30:                                               ; preds = %23
  %31 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_irq_num to [0 x i32]*), i32 0, i32 %0, !dbg !5455
  %32 = load i32, i32* %31, align 4, !dbg !5455
  %33 = tail call i32 @hal_nvic_register_isr_handler(i32 noundef %32, void (i32)* noundef nonnull @uart_interrupt_handler) #21, !dbg !5456
  call void @llvm.dbg.value(metadata i32 %33, metadata !5417, metadata !DIExpression()), !dbg !5418
  %34 = icmp eq i32 %33, 0, !dbg !5457
  br i1 %34, label %36, label %35, !dbg !5459

35:                                               ; preds = %30
  tail call void @restore_interrupt_mask(i32 noundef %8) #21, !dbg !5460
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.45, i32 0, i32 0), i32 noundef 934, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.hal_uart_register_callback, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.46, i32 0, i32 0)) #24, !dbg !5462
  unreachable, !dbg !5462

36:                                               ; preds = %30
  tail call fastcc void @uart_start_dma_transmission(i32 noundef %0) #22, !dbg !5463
  store volatile i32 2, i32* %9, align 4, !dbg !5464
  br label %37, !dbg !5465

37:                                               ; preds = %7, %36
  %38 = phi i32 [ 0, %36 ], [ -2, %7 ]
  tail call void @restore_interrupt_mask(i32 noundef %8) #21, !dbg !5418
  br label %39, !dbg !5466

39:                                               ; preds = %37, %3
  %40 = phi i32 [ -4, %3 ], [ %38, %37 ], !dbg !5418
  ret i32 %40, !dbg !5466
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_dma_callback_handler(i32 noundef %0, i8* nocapture noundef readonly %1) #0 !dbg !5467 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5472, metadata !DIExpression()), !dbg !5475
  call void @llvm.dbg.value(metadata i8* %1, metadata !5473, metadata !DIExpression()), !dbg !5475
  call void @llvm.dbg.value(metadata i8* %1, metadata !5474, metadata !DIExpression()), !dbg !5475
  %3 = load i8, i8* %1, align 4, !dbg !5476, !range !3203
  %4 = icmp eq i8 %3, 0, !dbg !5476
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !5478
  %6 = bitcast i8* %5 to i32*, !dbg !5478
  %7 = load i32, i32* %6, align 4, !dbg !5478
  br i1 %4, label %9, label %8, !dbg !5479

8:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5474, metadata !DIExpression()), !dbg !5475
  tail call void @uart_receive_handler(i32 noundef %7, i1 noundef zeroext false) #22, !dbg !5480
  br label %10, !dbg !5482

9:                                                ; preds = %2
  tail call void @uart_send_handler(i32 noundef %7, i1 noundef zeroext false) #22, !dbg !5483
  br label %10

10:                                               ; preds = %9, %8
  ret void, !dbg !5485
}

; Function Attrs: optsize
declare dso_local i32 @vdma_register_callback(i32 noundef, void (i32, i8*)* noundef, i8* noundef) local_unnamed_addr #2

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_start_dma_transmission(i32 noundef %0) unnamed_addr #0 !dbg !5486 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5488, metadata !DIExpression()), !dbg !5493
  %2 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !5494
  %3 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %2, align 4, !dbg !5494
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %3, metadata !5489, metadata !DIExpression()), !dbg !5493
  %4 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #21, !dbg !5495
  call void @llvm.dbg.value(metadata i32 %4, metadata !5490, metadata !DIExpression()), !dbg !5493
  %5 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #21, !dbg !5496
  call void @llvm.dbg.value(metadata i32 %5, metadata !5491, metadata !DIExpression()), !dbg !5493
  tail call void @uart_unmask_send_interrupt(%struct.UART_REGISTER_T* noundef %3) #21, !dbg !5497
  %6 = getelementptr inbounds [4 x i8], [4 x i8]* @g_uart_frist_send_complete_interrupt, i32 0, i32 %0, !dbg !5498
  store i8 1, i8* %6, align 1, !dbg !5499
  tail call void @uart_unmask_receive_interrupt(%struct.UART_REGISTER_T* noundef %3) #21, !dbg !5500
  %7 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_irq_num to [0 x i32]*), i32 0, i32 %0, !dbg !5501
  %8 = load i32, i32* %7, align 4, !dbg !5501
  %9 = tail call i32 @hal_nvic_enable_irq(i32 noundef %8) #21, !dbg !5502
  %10 = tail call i32 @vdma_enable_interrupt(i32 noundef %4) #21, !dbg !5503
  call void @llvm.dbg.value(metadata i32 %10, metadata !5492, metadata !DIExpression()), !dbg !5493
  %11 = icmp eq i32 %10, 0, !dbg !5504
  br i1 %11, label %13, label %12, !dbg !5506

12:                                               ; preds = %1
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.45, i32 0, i32 0), i32 noundef 870, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.uart_start_dma_transmission, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.46, i32 0, i32 0)) #24, !dbg !5507
  unreachable, !dbg !5507

13:                                               ; preds = %1
  %14 = tail call i32 @vdma_enable_interrupt(i32 noundef %5) #21, !dbg !5509
  call void @llvm.dbg.value(metadata i32 %14, metadata !5492, metadata !DIExpression()), !dbg !5493
  %15 = icmp eq i32 %14, 0, !dbg !5510
  br i1 %15, label %17, label %16, !dbg !5512

16:                                               ; preds = %13
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.45, i32 0, i32 0), i32 noundef 875, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.uart_start_dma_transmission, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.46, i32 0, i32 0)) #24, !dbg !5513
  unreachable, !dbg !5513

17:                                               ; preds = %13
  %18 = tail call i32 @vdma_start(i32 noundef %4) #21, !dbg !5515
  call void @llvm.dbg.value(metadata i32 %18, metadata !5492, metadata !DIExpression()), !dbg !5493
  %19 = icmp eq i32 %18, 0, !dbg !5516
  br i1 %19, label %21, label %20, !dbg !5518

20:                                               ; preds = %17
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.45, i32 0, i32 0), i32 noundef 880, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.uart_start_dma_transmission, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.46, i32 0, i32 0)) #24, !dbg !5519
  unreachable, !dbg !5519

21:                                               ; preds = %17
  %22 = tail call i32 @vdma_start(i32 noundef %5) #21, !dbg !5521
  call void @llvm.dbg.value(metadata i32 %22, metadata !5492, metadata !DIExpression()), !dbg !5493
  %23 = icmp eq i32 %22, 0, !dbg !5522
  br i1 %23, label %25, label %24, !dbg !5524

24:                                               ; preds = %21
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.45, i32 0, i32 0), i32 noundef 885, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.uart_start_dma_transmission, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.46, i32 0, i32 0)) #24, !dbg !5525
  unreachable, !dbg !5525

25:                                               ; preds = %21
  tail call void @uart_enable_dma(%struct.UART_REGISTER_T* noundef %3) #21, !dbg !5527
  ret void, !dbg !5528
}

; Function Attrs: optsize
declare dso_local i32 @vdma_start(i32 noundef) local_unnamed_addr #2

; Function Attrs: optsize
declare dso_local i32 @vdma_init(i32 noundef) local_unnamed_addr #2

; Function Attrs: optsize
declare dso_local i32 @vdma_configure(i32 noundef, %struct.vdma_config_t* noundef) local_unnamed_addr #2

; Function Attrs: optsize
declare dso_local i32 @vdma_set_threshold(i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: optsize
declare dso_local i32 @vdma_set_alert_length(i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @uart_config_is_valid(%struct.hal_uart_config_t* nocapture noundef readonly %0) unnamed_addr #4 !dbg !5529 {
  call void @llvm.dbg.value(metadata %struct.hal_uart_config_t* %0, metadata !5535, metadata !DIExpression()), !dbg !5536
  %2 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %0, i32 0, i32 0, !dbg !5537
  %3 = load i32, i32* %2, align 4, !dbg !5537
  %4 = icmp ult i32 %3, 13, !dbg !5538
  br i1 %4, label %5, label %17, !dbg !5539

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %0, i32 0, i32 1, !dbg !5540
  %7 = load i32, i32* %6, align 4, !dbg !5540
  %8 = icmp ult i32 %7, 4, !dbg !5541
  br i1 %8, label %9, label %17, !dbg !5542

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %0, i32 0, i32 2, !dbg !5543
  %11 = load i32, i32* %10, align 4, !dbg !5543
  %12 = icmp ult i32 %11, 2, !dbg !5544
  br i1 %12, label %13, label %17, !dbg !5545

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %0, i32 0, i32 3, !dbg !5546
  %15 = load i32, i32* %14, align 4, !dbg !5546
  %16 = icmp ult i32 %15, 3, !dbg !5547
  br label %17

17:                                               ; preds = %13, %9, %5, %1
  %18 = phi i1 [ false, %9 ], [ false, %5 ], [ false, %1 ], [ %16, %13 ], !dbg !5536
  ret i1 %18, !dbg !5548
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_baudrate(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !5549 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5553, metadata !DIExpression()), !dbg !5558
  call void @llvm.dbg.value(metadata i32 %1, metadata !5554, metadata !DIExpression()), !dbg !5558
  %3 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #22, !dbg !5559
  br i1 %3, label %4, label %17, !dbg !5561

4:                                                ; preds = %2
  %5 = tail call fastcc zeroext i1 @uart_baudrate_is_valid(i32 noundef %1) #22, !dbg !5562
  br i1 %5, label %6, label %17, !dbg !5563

6:                                                ; preds = %4
  %7 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5564
  %8 = load volatile i32, i32* %7, align 4, !dbg !5564
  %9 = icmp eq i32 %8, 0, !dbg !5566
  br i1 %9, label %17, label %10, !dbg !5567

10:                                               ; preds = %6
  %11 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !5568
  call void @llvm.dbg.value(metadata i32 %11, metadata !5556, metadata !DIExpression()), !dbg !5558
  %12 = getelementptr inbounds [4 x %struct.hal_uart_config_t], [4 x %struct.hal_uart_config_t]* @g_uart_config, i32 0, i32 %0, i32 0, !dbg !5569
  store i32 %1, i32* %12, align 4, !dbg !5570
  tail call void @restore_interrupt_mask(i32 noundef %11) #21, !dbg !5571
  %13 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !5572
  %14 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %13, align 4, !dbg !5572
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %14, metadata !5557, metadata !DIExpression()), !dbg !5558
  %15 = getelementptr inbounds [13 x i32], [13 x i32]* @g_uart_baudrate_map, i32 0, i32 %1, !dbg !5573
  %16 = load i32, i32* %15, align 4, !dbg !5573
  call void @llvm.dbg.value(metadata i32 %16, metadata !5555, metadata !DIExpression()), !dbg !5558
  tail call void @uart_set_baudrate(%struct.UART_REGISTER_T* noundef %14, i32 noundef %16) #21, !dbg !5574
  br label %17, !dbg !5575

17:                                               ; preds = %6, %2, %4, %10
  %18 = phi i32 [ 0, %10 ], [ -4, %4 ], [ -4, %2 ], [ -2, %6 ], !dbg !5558
  ret i32 %18, !dbg !5576
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @uart_baudrate_is_valid(i32 noundef %0) unnamed_addr #9 !dbg !5577 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5581, metadata !DIExpression()), !dbg !5582
  %2 = icmp ult i32 %0, 13, !dbg !5583
  ret i1 %2, !dbg !5584
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_format(i32 noundef %0, %struct.hal_uart_config_t* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !5585 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5589, metadata !DIExpression()), !dbg !5593
  call void @llvm.dbg.value(metadata %struct.hal_uart_config_t* %1, metadata !5590, metadata !DIExpression()), !dbg !5593
  %3 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #22, !dbg !5594
  br i1 %3, label %4, label %31, !dbg !5596

4:                                                ; preds = %2
  %5 = tail call fastcc zeroext i1 @uart_config_is_valid(%struct.hal_uart_config_t* noundef %1) #22, !dbg !5597
  br i1 %5, label %6, label %31, !dbg !5598

6:                                                ; preds = %4
  %7 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5599
  %8 = load volatile i32, i32* %7, align 4, !dbg !5599
  %9 = icmp eq i32 %8, 0, !dbg !5601
  br i1 %9, label %31, label %10, !dbg !5602

10:                                               ; preds = %6
  %11 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !5603
  call void @llvm.dbg.value(metadata i32 %11, metadata !5591, metadata !DIExpression()), !dbg !5593
  %12 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 0, !dbg !5604
  %13 = load i32, i32* %12, align 4, !dbg !5604
  %14 = getelementptr inbounds [4 x %struct.hal_uart_config_t], [4 x %struct.hal_uart_config_t]* @g_uart_config, i32 0, i32 %0, i32 0, !dbg !5605
  store i32 %13, i32* %14, align 4, !dbg !5606
  %15 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 1, !dbg !5607
  %16 = load i32, i32* %15, align 4, !dbg !5607
  %17 = getelementptr inbounds [4 x %struct.hal_uart_config_t], [4 x %struct.hal_uart_config_t]* @g_uart_config, i32 0, i32 %0, i32 1, !dbg !5608
  store i32 %16, i32* %17, align 4, !dbg !5609
  %18 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 2, !dbg !5610
  %19 = load i32, i32* %18, align 4, !dbg !5610
  %20 = getelementptr inbounds [4 x %struct.hal_uart_config_t], [4 x %struct.hal_uart_config_t]* @g_uart_config, i32 0, i32 %0, i32 2, !dbg !5611
  store i32 %19, i32* %20, align 4, !dbg !5612
  %21 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 3, !dbg !5613
  %22 = load i32, i32* %21, align 4, !dbg !5613
  %23 = getelementptr inbounds [4 x %struct.hal_uart_config_t], [4 x %struct.hal_uart_config_t]* @g_uart_config, i32 0, i32 %0, i32 3, !dbg !5614
  store i32 %22, i32* %23, align 4, !dbg !5615
  tail call void @restore_interrupt_mask(i32 noundef %11) #21, !dbg !5616
  %24 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !5617
  %25 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %24, align 4, !dbg !5617
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %25, metadata !5592, metadata !DIExpression()), !dbg !5593
  %26 = load i32, i32* %12, align 4, !dbg !5618
  %27 = tail call i32 @hal_uart_set_baudrate(i32 noundef %0, i32 noundef %26) #22, !dbg !5619
  %28 = load i32, i32* %15, align 4, !dbg !5620
  %29 = load i32, i32* %18, align 4, !dbg !5621
  %30 = load i32, i32* %21, align 4, !dbg !5622
  tail call void @uart_set_format(%struct.UART_REGISTER_T* noundef %25, i32 noundef %28, i32 noundef %29, i32 noundef %30) #21, !dbg !5623
  br label %31, !dbg !5624

31:                                               ; preds = %6, %2, %4, %10
  %32 = phi i32 [ 0, %10 ], [ -4, %4 ], [ -4, %2 ], [ -2, %6 ], !dbg !5593
  ret i32 %32, !dbg !5625
}

; Function Attrs: noinline nounwind optsize
define dso_local void @hal_uart_put_char(i32 noundef %0, i8 noundef zeroext %1) local_unnamed_addr #0 !dbg !5626 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5630, metadata !DIExpression()), !dbg !5633
  call void @llvm.dbg.value(metadata i8 %1, metadata !5631, metadata !DIExpression()), !dbg !5633
  %3 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #22, !dbg !5634
  br i1 %3, label %4, label %11, !dbg !5636

4:                                                ; preds = %2
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5637
  %6 = load volatile i32, i32* %5, align 4, !dbg !5637
  %7 = icmp eq i32 %6, 1, !dbg !5639
  br i1 %7, label %8, label %11, !dbg !5640

8:                                                ; preds = %4
  %9 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !5641
  %10 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %9, align 4, !dbg !5641
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %10, metadata !5632, metadata !DIExpression()), !dbg !5633
  tail call void @uart_put_char_block(%struct.UART_REGISTER_T* noundef %10, i8 noundef zeroext %1) #21, !dbg !5642
  br label %11, !dbg !5643

11:                                               ; preds = %4, %2, %8
  ret void, !dbg !5643
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_send_polling(i32 noundef %0, i8* noundef readonly %1, i32 noundef %2) local_unnamed_addr #0 !dbg !5644 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5650, metadata !DIExpression()), !dbg !5654
  call void @llvm.dbg.value(metadata i8* %1, metadata !5651, metadata !DIExpression()), !dbg !5654
  call void @llvm.dbg.value(metadata i32 %2, metadata !5652, metadata !DIExpression()), !dbg !5654
  call void @llvm.dbg.value(metadata i32 0, metadata !5653, metadata !DIExpression()), !dbg !5654
  %4 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #22, !dbg !5655
  %5 = icmp ne i8* %1, null
  %6 = and i1 %5, %4, !dbg !5657
  br i1 %6, label %7, label %20, !dbg !5657

7:                                                ; preds = %3
  %8 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5658
  %9 = load volatile i32, i32* %8, align 4, !dbg !5658
  %10 = icmp ne i32 %9, 1, !dbg !5660
  %11 = icmp eq i32 %2, 0
  %12 = or i1 %10, %11, !dbg !5661
  call void @llvm.dbg.value(metadata i32 0, metadata !5653, metadata !DIExpression()), !dbg !5654
  call void @llvm.dbg.value(metadata i8* %1, metadata !5651, metadata !DIExpression()), !dbg !5654
  br i1 %12, label %20, label %13, !dbg !5661

13:                                               ; preds = %7, %13
  %14 = phi i32 [ %18, %13 ], [ 0, %7 ]
  %15 = phi i8* [ %17, %13 ], [ %1, %7 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !5653, metadata !DIExpression()), !dbg !5654
  call void @llvm.dbg.value(metadata i8* %15, metadata !5651, metadata !DIExpression()), !dbg !5654
  %16 = load i8, i8* %15, align 1, !dbg !5662
  tail call void @hal_uart_put_char(i32 noundef %0, i8 noundef zeroext %16) #22, !dbg !5666
  %17 = getelementptr inbounds i8, i8* %15, i32 1, !dbg !5667
  call void @llvm.dbg.value(metadata i8* %17, metadata !5651, metadata !DIExpression()), !dbg !5654
  %18 = add nuw i32 %14, 1, !dbg !5668
  call void @llvm.dbg.value(metadata i32 %18, metadata !5653, metadata !DIExpression()), !dbg !5654
  %19 = icmp eq i32 %18, %2, !dbg !5669
  br i1 %19, label %20, label %13, !dbg !5670, !llvm.loop !5671

20:                                               ; preds = %13, %7, %3
  %21 = phi i32 [ 0, %3 ], [ 0, %7 ], [ %2, %13 ], !dbg !5654
  ret i32 %21, !dbg !5673
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_send_dma(i32 noundef %0, i8* noundef readonly %1, i32 noundef %2) local_unnamed_addr #0 !dbg !5674 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !5676, metadata !DIExpression()), !dbg !5685
  call void @llvm.dbg.value(metadata i8* %1, metadata !5677, metadata !DIExpression()), !dbg !5685
  call void @llvm.dbg.value(metadata i32 %2, metadata !5678, metadata !DIExpression()), !dbg !5685
  %5 = bitcast i32* %4 to i8*, !dbg !5686
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !5686
  %6 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #22, !dbg !5687
  %7 = xor i1 %6, true, !dbg !5689
  %8 = icmp eq i8* %1, null
  %9 = or i1 %8, %7, !dbg !5689
  %10 = icmp eq i32 %2, 0
  %11 = or i1 %10, %9, !dbg !5689
  br i1 %11, label %54, label %12, !dbg !5689

12:                                               ; preds = %3
  %13 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5690
  %14 = load volatile i32, i32* %13, align 4, !dbg !5690
  %15 = icmp eq i32 %14, 2, !dbg !5692
  br i1 %15, label %16, label %54, !dbg !5693

16:                                               ; preds = %12
  %17 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !5694
  call void @llvm.dbg.value(metadata i32 %17, metadata !5684, metadata !DIExpression()), !dbg !5685
  %18 = getelementptr inbounds [4 x i8], [4 x i8]* @g_uart_send_lock_status, i32 0, i32 %0, !dbg !5695
  %19 = load i8, i8* %18, align 1, !dbg !5695, !range !3203
  %20 = icmp eq i8 %19, 0, !dbg !5697
  br i1 %20, label %21, label %25, !dbg !5698

21:                                               ; preds = %16
  %22 = getelementptr inbounds [4 x i8], [4 x i8]* @g_uart_sleep_handler, i32 0, i32 %0, !dbg !5699
  %23 = load i8, i8* %22, align 1, !dbg !5699
  %24 = tail call i32 @hal_sleep_manager_lock_sleep(i8 noundef zeroext %23) #21, !dbg !5701
  store i8 1, i8* %18, align 1, !dbg !5702
  br label %25, !dbg !5703

25:                                               ; preds = %21, %16
  tail call void @restore_interrupt_mask(i32 noundef %17) #21, !dbg !5704
  %26 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #21, !dbg !5705
  call void @llvm.dbg.value(metadata i32 %26, metadata !5679, metadata !DIExpression()), !dbg !5685
  call void @llvm.dbg.value(metadata i32* %4, metadata !5682, metadata !DIExpression(DW_OP_deref)), !dbg !5685
  %27 = call i32 @vdma_get_available_send_space(i32 noundef %26, i32* noundef nonnull %4) #21, !dbg !5706
  call void @llvm.dbg.value(metadata i32 %27, metadata !5683, metadata !DIExpression()), !dbg !5685
  %28 = icmp eq i32 %27, 0, !dbg !5707
  br i1 %28, label %30, label %29, !dbg !5709

29:                                               ; preds = %25
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.45, i32 0, i32 0), i32 noundef 708, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.hal_uart_send_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.46, i32 0, i32 0)) #24, !dbg !5710
  unreachable, !dbg !5710

30:                                               ; preds = %25
  %31 = load i32, i32* %4, align 4, !dbg !5712
  call void @llvm.dbg.value(metadata i32 %31, metadata !5682, metadata !DIExpression()), !dbg !5685
  %32 = icmp ult i32 %31, %2, !dbg !5714
  %33 = select i1 %32, i32 %31, i32 %2
  call void @llvm.dbg.value(metadata i32 %33, metadata !5681, metadata !DIExpression()), !dbg !5685
  call void @llvm.dbg.value(metadata i32 0, metadata !5680, metadata !DIExpression()), !dbg !5685
  %34 = icmp eq i32 %33, 0, !dbg !5715
  br i1 %34, label %47, label %37, !dbg !5718

35:                                               ; preds = %37
  call void @llvm.dbg.value(metadata i32 %43, metadata !5680, metadata !DIExpression()), !dbg !5685
  %36 = icmp eq i32 %43, %33, !dbg !5715
  br i1 %36, label %45, label %37, !dbg !5718, !llvm.loop !5719

37:                                               ; preds = %30, %35
  %38 = phi i32 [ %43, %35 ], [ 0, %30 ]
  call void @llvm.dbg.value(metadata i32 %38, metadata !5680, metadata !DIExpression()), !dbg !5685
  %39 = getelementptr inbounds i8, i8* %1, i32 %38, !dbg !5721
  %40 = load i8, i8* %39, align 1, !dbg !5721
  %41 = call i32 @vdma_push_data(i32 noundef %26, i8 noundef zeroext %40) #21, !dbg !5723
  call void @llvm.dbg.value(metadata i32 %41, metadata !5683, metadata !DIExpression()), !dbg !5685
  %42 = icmp eq i32 %41, 0, !dbg !5724
  %43 = add nuw i32 %38, 1, !dbg !5726
  call void @llvm.dbg.value(metadata i32 %43, metadata !5680, metadata !DIExpression()), !dbg !5685
  br i1 %42, label %35, label %44, !dbg !5727

44:                                               ; preds = %37
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.45, i32 0, i32 0), i32 noundef 720, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.hal_uart_send_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.46, i32 0, i32 0)) #24, !dbg !5728
  unreachable, !dbg !5728

45:                                               ; preds = %35
  %46 = load i32, i32* %4, align 4, !dbg !5730
  br label %47, !dbg !5730

47:                                               ; preds = %45, %30
  %48 = phi i32 [ %46, %45 ], [ %31, %30 ], !dbg !5730
  call void @llvm.dbg.value(metadata i32 %48, metadata !5682, metadata !DIExpression()), !dbg !5685
  %49 = icmp eq i32 %33, %48, !dbg !5732
  br i1 %49, label %50, label %54, !dbg !5733

50:                                               ; preds = %47
  %51 = call i32 @vdma_enable_interrupt(i32 noundef %26) #21, !dbg !5734
  call void @llvm.dbg.value(metadata i32 %51, metadata !5683, metadata !DIExpression()), !dbg !5685
  %52 = icmp eq i32 %51, 0, !dbg !5736
  br i1 %52, label %54, label %53, !dbg !5738

53:                                               ; preds = %50
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.45, i32 0, i32 0), i32 noundef 731, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.hal_uart_send_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.46, i32 0, i32 0)) #24, !dbg !5739
  unreachable, !dbg !5739

54:                                               ; preds = %47, %50, %12, %3
  %55 = phi i32 [ 0, %3 ], [ 0, %12 ], [ %33, %50 ], [ %33, %47 ], !dbg !5685
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !5741
  ret i32 %55, !dbg !5741
}

; Function Attrs: optsize
declare dso_local i32 @vdma_push_data(i32 noundef, i8 noundef zeroext) local_unnamed_addr #2

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i8 @hal_uart_get_char(i32 noundef %0) local_unnamed_addr #0 !dbg !5742 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5746, metadata !DIExpression()), !dbg !5749
  %2 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #22, !dbg !5750
  br i1 %2, label %3, label %11, !dbg !5752

3:                                                ; preds = %1
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5753
  %5 = load volatile i32, i32* %4, align 4, !dbg !5753
  %6 = icmp eq i32 %5, 1, !dbg !5755
  br i1 %6, label %7, label %11, !dbg !5756

7:                                                ; preds = %3
  %8 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !5757
  %9 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %8, align 4, !dbg !5757
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %9, metadata !5748, metadata !DIExpression()), !dbg !5749
  %10 = tail call zeroext i8 @uart_get_char_block(%struct.UART_REGISTER_T* noundef %9) #21, !dbg !5758
  call void @llvm.dbg.value(metadata i8 %10, metadata !5747, metadata !DIExpression()), !dbg !5749
  br label %11, !dbg !5759

11:                                               ; preds = %3, %1, %7
  %12 = phi i8 [ %10, %7 ], [ 0, %1 ], [ 0, %3 ], !dbg !5749
  ret i8 %12, !dbg !5760
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_get_char_unblocking(i32 noundef %0) local_unnamed_addr #0 !dbg !5761 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5765, metadata !DIExpression()), !dbg !5768
  %2 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #22, !dbg !5769
  br i1 %2, label %3, label %11, !dbg !5771

3:                                                ; preds = %1
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5772
  %5 = load volatile i32, i32* %4, align 4, !dbg !5772
  %6 = icmp eq i32 %5, 1, !dbg !5774
  br i1 %6, label %7, label %11, !dbg !5775

7:                                                ; preds = %3
  %8 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !5776
  %9 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %8, align 4, !dbg !5776
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %9, metadata !5767, metadata !DIExpression()), !dbg !5768
  %10 = tail call i32 @uart_get_char_unblocking(%struct.UART_REGISTER_T* noundef %9) #21, !dbg !5777
  call void @llvm.dbg.value(metadata i32 %10, metadata !5766, metadata !DIExpression()), !dbg !5768
  br label %11, !dbg !5778

11:                                               ; preds = %3, %1, %7
  %12 = phi i32 [ %10, %7 ], [ 0, %1 ], [ 0, %3 ], !dbg !5768
  ret i32 %12, !dbg !5779
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_receive_polling(i32 noundef %0, i8* noundef writeonly %1, i32 noundef %2) local_unnamed_addr #0 !dbg !5780 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5784, metadata !DIExpression()), !dbg !5789
  call void @llvm.dbg.value(metadata i8* %1, metadata !5785, metadata !DIExpression()), !dbg !5789
  call void @llvm.dbg.value(metadata i32 %2, metadata !5786, metadata !DIExpression()), !dbg !5789
  call void @llvm.dbg.value(metadata i8* %1, metadata !5788, metadata !DIExpression()), !dbg !5789
  %4 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #22, !dbg !5790
  %5 = icmp ne i8* %1, null
  %6 = and i1 %5, %4, !dbg !5792
  br i1 %6, label %7, label %19, !dbg !5792

7:                                                ; preds = %3
  %8 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5793
  %9 = load volatile i32, i32* %8, align 4, !dbg !5793
  %10 = icmp ne i32 %9, 1, !dbg !5795
  %11 = icmp eq i32 %2, 0
  %12 = or i1 %10, %11, !dbg !5796
  call void @llvm.dbg.value(metadata i32 0, metadata !5787, metadata !DIExpression()), !dbg !5789
  br i1 %12, label %19, label %13, !dbg !5796

13:                                               ; preds = %7, %13
  %14 = phi i32 [ %17, %13 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !5787, metadata !DIExpression()), !dbg !5789
  %15 = tail call zeroext i8 @hal_uart_get_char(i32 noundef %0) #22, !dbg !5797
  %16 = getelementptr inbounds i8, i8* %1, i32 %14, !dbg !5801
  store i8 %15, i8* %16, align 1, !dbg !5802
  %17 = add nuw i32 %14, 1, !dbg !5803
  call void @llvm.dbg.value(metadata i32 %17, metadata !5787, metadata !DIExpression()), !dbg !5789
  %18 = icmp eq i32 %17, %2, !dbg !5804
  br i1 %18, label %19, label %13, !dbg !5805, !llvm.loop !5806

19:                                               ; preds = %13, %7, %3
  %20 = phi i32 [ 0, %3 ], [ 0, %7 ], [ %2, %13 ], !dbg !5789
  ret i32 %20, !dbg !5808
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_receive_dma(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !5809 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !5811, metadata !DIExpression()), !dbg !5819
  call void @llvm.dbg.value(metadata i8* %1, metadata !5812, metadata !DIExpression()), !dbg !5819
  call void @llvm.dbg.value(metadata i32 %2, metadata !5813, metadata !DIExpression()), !dbg !5819
  %5 = bitcast i32* %4 to i8*, !dbg !5820
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !5820
  %6 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #22, !dbg !5821
  %7 = xor i1 %6, true, !dbg !5823
  %8 = icmp eq i8* %1, null
  %9 = or i1 %8, %7, !dbg !5823
  %10 = icmp eq i32 %2, 0
  %11 = or i1 %10, %9, !dbg !5823
  br i1 %11, label %44, label %12, !dbg !5823

12:                                               ; preds = %3
  %13 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5824
  %14 = load volatile i32, i32* %13, align 4, !dbg !5824
  %15 = icmp eq i32 %14, 2, !dbg !5826
  br i1 %15, label %16, label %44, !dbg !5827

16:                                               ; preds = %12
  %17 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #21, !dbg !5828
  call void @llvm.dbg.value(metadata i32 %17, metadata !5814, metadata !DIExpression()), !dbg !5819
  call void @llvm.dbg.value(metadata i32* %4, metadata !5816, metadata !DIExpression(DW_OP_deref)), !dbg !5819
  %18 = call i32 @vdma_get_available_receive_bytes(i32 noundef %17, i32* noundef nonnull %4) #21, !dbg !5829
  call void @llvm.dbg.value(metadata i32 %18, metadata !5818, metadata !DIExpression()), !dbg !5819
  %19 = icmp eq i32 %18, 0, !dbg !5830
  br i1 %19, label %21, label %20, !dbg !5832

20:                                               ; preds = %16
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.45, i32 0, i32 0), i32 noundef 821, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.hal_uart_receive_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.46, i32 0, i32 0)) #24, !dbg !5833
  unreachable, !dbg !5833

21:                                               ; preds = %16
  %22 = load i32, i32* %4, align 4, !dbg !5835
  call void @llvm.dbg.value(metadata i32 %22, metadata !5816, metadata !DIExpression()), !dbg !5819
  %23 = icmp ult i32 %22, %2, !dbg !5837
  %24 = select i1 %23, i32 %22, i32 %2
  call void @llvm.dbg.value(metadata i32 %24, metadata !5815, metadata !DIExpression()), !dbg !5819
  call void @llvm.dbg.value(metadata i32 0, metadata !5817, metadata !DIExpression()), !dbg !5819
  %25 = icmp eq i32 %24, 0, !dbg !5838
  br i1 %25, label %37, label %28, !dbg !5841

26:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %33, metadata !5817, metadata !DIExpression()), !dbg !5819
  %27 = icmp eq i32 %33, %24, !dbg !5838
  br i1 %27, label %35, label %28, !dbg !5841, !llvm.loop !5842

28:                                               ; preds = %21, %26
  %29 = phi i32 [ %33, %26 ], [ 0, %21 ]
  call void @llvm.dbg.value(metadata i32 %29, metadata !5817, metadata !DIExpression()), !dbg !5819
  %30 = getelementptr inbounds i8, i8* %1, i32 %29, !dbg !5844
  %31 = call i32 @vdma_pop_data(i32 noundef %17, i8* noundef %30) #21, !dbg !5846
  call void @llvm.dbg.value(metadata i32 %31, metadata !5818, metadata !DIExpression()), !dbg !5819
  %32 = icmp eq i32 %31, 0, !dbg !5847
  %33 = add nuw i32 %29, 1, !dbg !5849
  call void @llvm.dbg.value(metadata i32 %33, metadata !5817, metadata !DIExpression()), !dbg !5819
  br i1 %32, label %26, label %34, !dbg !5850

34:                                               ; preds = %28
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.45, i32 0, i32 0), i32 noundef 833, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.hal_uart_receive_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.46, i32 0, i32 0)) #24, !dbg !5851
  unreachable, !dbg !5851

35:                                               ; preds = %26
  %36 = load i32, i32* %4, align 4, !dbg !5853
  br label %37, !dbg !5853

37:                                               ; preds = %35, %21
  %38 = phi i32 [ %36, %35 ], [ %22, %21 ], !dbg !5853
  call void @llvm.dbg.value(metadata i32 %38, metadata !5816, metadata !DIExpression()), !dbg !5819
  %39 = icmp eq i32 %24, %38, !dbg !5855
  br i1 %39, label %40, label %44, !dbg !5856

40:                                               ; preds = %37
  %41 = call i32 @vdma_enable_interrupt(i32 noundef %17) #21, !dbg !5857
  call void @llvm.dbg.value(metadata i32 %41, metadata !5818, metadata !DIExpression()), !dbg !5819
  %42 = icmp eq i32 %41, 0, !dbg !5859
  br i1 %42, label %44, label %43, !dbg !5861

43:                                               ; preds = %40
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.45, i32 0, i32 0), i32 noundef 844, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.hal_uart_receive_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.46, i32 0, i32 0)) #24, !dbg !5862
  unreachable, !dbg !5862

44:                                               ; preds = %37, %40, %12, %3
  %45 = phi i32 [ 0, %3 ], [ 0, %12 ], [ %24, %40 ], [ %24, %37 ], !dbg !5819
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !5864
  ret i32 %45, !dbg !5864
}

; Function Attrs: optsize
declare dso_local i32 @vdma_pop_data(i32 noundef, i8* noundef) local_unnamed_addr #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_get_available_send_space(i32 noundef %0) local_unnamed_addr #0 !dbg !5865 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !5867, metadata !DIExpression()), !dbg !5871
  %3 = bitcast i32* %2 to i8*, !dbg !5872
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5872
  %4 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #22, !dbg !5873
  br i1 %4, label %5, label %16, !dbg !5875

5:                                                ; preds = %1
  %6 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5876
  %7 = load volatile i32, i32* %6, align 4, !dbg !5876
  %8 = icmp eq i32 %7, 2, !dbg !5878
  br i1 %8, label %9, label %16, !dbg !5879

9:                                                ; preds = %5
  %10 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #21, !dbg !5880
  call void @llvm.dbg.value(metadata i32 %10, metadata !5868, metadata !DIExpression()), !dbg !5871
  call void @llvm.dbg.value(metadata i32* %2, metadata !5869, metadata !DIExpression(DW_OP_deref)), !dbg !5871
  %11 = call i32 @vdma_get_available_send_space(i32 noundef %10, i32* noundef nonnull %2) #21, !dbg !5881
  call void @llvm.dbg.value(metadata i32 %11, metadata !5870, metadata !DIExpression()), !dbg !5871
  %12 = icmp eq i32 %11, 0, !dbg !5882
  br i1 %12, label %14, label %13, !dbg !5884

13:                                               ; preds = %9
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.45, i32 0, i32 0), i32 noundef 964, i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @__func__.hal_uart_get_available_send_space, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.46, i32 0, i32 0)) #24, !dbg !5885
  unreachable, !dbg !5885

14:                                               ; preds = %9
  %15 = load i32, i32* %2, align 4, !dbg !5887
  call void @llvm.dbg.value(metadata i32 %15, metadata !5869, metadata !DIExpression()), !dbg !5871
  br label %16, !dbg !5888

16:                                               ; preds = %5, %1, %14
  %17 = phi i32 [ %15, %14 ], [ 0, %1 ], [ 0, %5 ], !dbg !5871
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5889
  ret i32 %17, !dbg !5889
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_get_available_receive_bytes(i32 noundef %0) local_unnamed_addr #0 !dbg !5890 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !5892, metadata !DIExpression()), !dbg !5896
  %3 = bitcast i32* %2 to i8*, !dbg !5897
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5897
  %4 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #22, !dbg !5898
  br i1 %4, label %5, label %16, !dbg !5900

5:                                                ; preds = %1
  %6 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5901
  %7 = load volatile i32, i32* %6, align 4, !dbg !5901
  %8 = icmp eq i32 %7, 2, !dbg !5903
  br i1 %8, label %9, label %16, !dbg !5904

9:                                                ; preds = %5
  %10 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #21, !dbg !5905
  call void @llvm.dbg.value(metadata i32 %10, metadata !5893, metadata !DIExpression()), !dbg !5896
  call void @llvm.dbg.value(metadata i32* %2, metadata !5894, metadata !DIExpression(DW_OP_deref)), !dbg !5896
  %11 = call i32 @vdma_get_available_receive_bytes(i32 noundef %10, i32* noundef nonnull %2) #21, !dbg !5906
  call void @llvm.dbg.value(metadata i32 %11, metadata !5895, metadata !DIExpression()), !dbg !5896
  %12 = icmp eq i32 %11, 0, !dbg !5907
  br i1 %12, label %14, label %13, !dbg !5909

13:                                               ; preds = %9
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.45, i32 0, i32 0), i32 noundef 988, i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @__func__.hal_uart_get_available_receive_bytes, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.46, i32 0, i32 0)) #24, !dbg !5910
  unreachable, !dbg !5910

14:                                               ; preds = %9
  %15 = load i32, i32* %2, align 4, !dbg !5912
  call void @llvm.dbg.value(metadata i32 %15, metadata !5894, metadata !DIExpression()), !dbg !5896
  br label %16, !dbg !5913

16:                                               ; preds = %5, %1, %14
  %17 = phi i32 [ %15, %14 ], [ 0, %1 ], [ 0, %5 ], !dbg !5896
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5914
  ret i32 %17, !dbg !5914
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_disable_flowcontrol(i32 noundef %0) local_unnamed_addr #0 !dbg !5915 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5917, metadata !DIExpression()), !dbg !5919
  %2 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #22, !dbg !5920
  br i1 %2, label %3, label %11, !dbg !5922

3:                                                ; preds = %1
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5923
  %5 = load volatile i32, i32* %4, align 4, !dbg !5923
  %6 = icmp eq i32 %5, 0, !dbg !5925
  br i1 %6, label %11, label %7, !dbg !5926

7:                                                ; preds = %3
  %8 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !5927
  %9 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %8, align 4, !dbg !5927
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %9, metadata !5918, metadata !DIExpression()), !dbg !5919
  tail call void @uart_disable_flowcontrol(%struct.UART_REGISTER_T* noundef %9) #21, !dbg !5928
  %10 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_flowcontrol_status, i32 0, i32 %0, !dbg !5929
  store i32 0, i32* %10, align 4, !dbg !5930
  br label %11, !dbg !5931

11:                                               ; preds = %3, %1, %7
  %12 = phi i32 [ 0, %7 ], [ -4, %1 ], [ -2, %3 ], !dbg !5919
  ret i32 %12, !dbg !5932
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_set_baudrate(%struct.UART_REGISTER_T* noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !5933 {
  %3 = alloca [10 x i32], align 4
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5992, metadata !DIExpression()), !dbg !6004
  call void @llvm.dbg.value(metadata i32 %1, metadata !5993, metadata !DIExpression()), !dbg !6004
  call void @llvm.dbg.declare(metadata [10 x i32]* @__const.uart_set_baudrate.fraction_L_mapping, metadata !6002, metadata !DIExpression()), !dbg !6005
  %4 = bitcast [10 x i32]* %3 to i8*, !dbg !6006
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %4) #23, !dbg !6006
  call void @llvm.dbg.declare(metadata [10 x i32]* %3, metadata !6003, metadata !DIExpression()), !dbg !6007
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(40) %4, i8 0, i32 20, i1 false), !dbg !6007
  %5 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 5, !dbg !6007
  store i32 1, i32* %5, align 4, !dbg !6007
  %6 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 6, !dbg !6007
  store i32 1, i32* %6, align 4, !dbg !6007
  %7 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 7, !dbg !6007
  store i32 1, i32* %7, align 4, !dbg !6007
  %8 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 8, !dbg !6007
  store i32 1, i32* %8, align 4, !dbg !6007
  %9 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 9, !dbg !6007
  store i32 1, i32* %9, align 4, !dbg !6007
  %10 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 13, !dbg !6008
  store volatile i32 0, i32* %10, align 4, !dbg !6009
  %11 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 21, !dbg !6010
  store volatile i32 0, i32* %11, align 4, !dbg !6011
  %12 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 22, !dbg !6012
  store volatile i32 0, i32* %12, align 4, !dbg !6013
  %13 = tail call zeroext i1 @is_clk_use_lfosc() #21, !dbg !6014
  br i1 %13, label %14, label %17, !dbg !6016

14:                                               ; preds = %2
  %15 = tail call i32 @clock_get_freq_lfosc() #21, !dbg !6017
  %16 = mul i32 %15, 1000, !dbg !6019
  call void @llvm.dbg.value(metadata i32 %16, metadata !5994, metadata !DIExpression()), !dbg !6004
  br label %17, !dbg !6020

17:                                               ; preds = %2, %14
  %18 = phi i32 [ %16, %14 ], [ 26000000, %2 ], !dbg !6021
  call void @llvm.dbg.value(metadata i32 %18, metadata !5994, metadata !DIExpression()), !dbg !6004
  %19 = shl i32 %1, 8, !dbg !6022
  %20 = udiv i32 %18, %19, !dbg !6023
  call void @llvm.dbg.value(metadata i32 %20, metadata !5995, metadata !DIExpression()), !dbg !6004
  %21 = mul i32 %18, 10, !dbg !6024
  %22 = udiv i32 %21, %19, !dbg !6025
  %23 = urem i32 %22, 10, !dbg !6026
  call void @llvm.dbg.value(metadata i32 %23, metadata !5996, metadata !DIExpression()), !dbg !6004
  %24 = icmp ne i32 %23, 0, !dbg !6027
  %25 = icmp ugt i32 %19, %18
  %26 = select i1 %24, i1 true, i1 %25, !dbg !6029
  %27 = zext i1 %26 to i32, !dbg !6029
  %28 = add i32 %20, %27, !dbg !6029
  call void @llvm.dbg.value(metadata i32 %28, metadata !5995, metadata !DIExpression()), !dbg !6004
  call void @llvm.dbg.value(metadata i32 %28, metadata !5998, metadata !DIExpression()), !dbg !6004
  call void @llvm.dbg.value(metadata i32 undef, metadata !5999, metadata !DIExpression()), !dbg !6004
  br label %29, !dbg !6030

29:                                               ; preds = %29, %17
  %30 = phi i32 [ %28, %17 ], [ %34, %29 ], !dbg !6004
  %31 = mul i32 %30, %1, !dbg !6004
  %32 = udiv i32 %18, %31, !dbg !6004
  call void @llvm.dbg.value(metadata i32 %32, metadata !5999, metadata !DIExpression()), !dbg !6004
  call void @llvm.dbg.value(metadata i32 %30, metadata !5998, metadata !DIExpression()), !dbg !6004
  %33 = icmp ugt i32 %32, 256, !dbg !6031
  %34 = add i32 %30, 1, !dbg !6032
  call void @llvm.dbg.value(metadata i32 %34, metadata !5998, metadata !DIExpression()), !dbg !6004
  call void @llvm.dbg.value(metadata i32 undef, metadata !5999, metadata !DIExpression()), !dbg !6004
  br i1 %33, label %29, label %35, !dbg !6030, !llvm.loop !6034

35:                                               ; preds = %29
  %36 = udiv i32 %21, %31, !dbg !6036
  %37 = urem i32 %36, 10, !dbg !6037
  call void @llvm.dbg.value(metadata i32 %37, metadata !5997, metadata !DIExpression()), !dbg !6004
  %38 = add nsw i32 %32, -1, !dbg !6038
  call void @llvm.dbg.value(metadata i32 %38, metadata !5999, metadata !DIExpression()), !dbg !6004
  %39 = add nsw i32 %32, -2, !dbg !6039
  %40 = lshr i32 %39, 1, !dbg !6040
  call void @llvm.dbg.value(metadata i32 %40, metadata !6000, metadata !DIExpression()), !dbg !6004
  %41 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 9, !dbg !6041
  store volatile i32 3, i32* %41, align 4, !dbg !6042
  %42 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !6043
  %43 = load volatile i32, i32* %42, align 4, !dbg !6043
  call void @llvm.dbg.value(metadata i32 %43, metadata !6001, metadata !DIExpression()), !dbg !6004
  %44 = or i32 %43, 128, !dbg !6044
  store volatile i32 %44, i32* %42, align 4, !dbg !6045
  %45 = and i32 %30, 255, !dbg !6046
  %46 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 0, i32 0, !dbg !6047
  store volatile i32 %45, i32* %46, align 4, !dbg !6048
  %47 = lshr i32 %30, 8, !dbg !6049
  %48 = and i32 %47, 255, !dbg !6050
  %49 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 1, i32 0, !dbg !6051
  store volatile i32 %48, i32* %49, align 4, !dbg !6052
  store volatile i32 %43, i32* %42, align 4, !dbg !6053
  %50 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 10, !dbg !6054
  store volatile i32 %38, i32* %50, align 4, !dbg !6055
  %51 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 11, !dbg !6056
  store volatile i32 %40, i32* %51, align 4, !dbg !6057
  %52 = getelementptr inbounds [10 x i32], [10 x i32]* @__const.uart_set_baudrate.fraction_L_mapping, i32 0, i32 %37, !dbg !6058
  %53 = load i32, i32* %52, align 4, !dbg !6058
  store volatile i32 %53, i32* %11, align 4, !dbg !6059
  %54 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 %37, !dbg !6060
  %55 = load i32, i32* %54, align 4, !dbg !6060
  store volatile i32 %55, i32* %12, align 4, !dbg !6061
  %56 = icmp ugt i32 %1, 2999999, !dbg !6062
  br i1 %56, label %57, label %59, !dbg !6064

57:                                               ; preds = %35
  %58 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 15, !dbg !6065
  store volatile i32 18, i32* %58, align 4, !dbg !6067
  br label %59, !dbg !6068

59:                                               ; preds = %57, %35
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %4) #23, !dbg !6069
  ret void, !dbg !6069
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #15

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_format(%struct.UART_REGISTER_T* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #3 !dbg !6070 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6074, metadata !DIExpression()), !dbg !6079
  call void @llvm.dbg.value(metadata i32 %1, metadata !6075, metadata !DIExpression()), !dbg !6079
  call void @llvm.dbg.value(metadata i32 %2, metadata !6076, metadata !DIExpression()), !dbg !6079
  call void @llvm.dbg.value(metadata i32 %3, metadata !6077, metadata !DIExpression()), !dbg !6079
  %5 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !6080
  %6 = load volatile i32, i32* %5, align 4, !dbg !6080
  call void @llvm.dbg.value(metadata i32 %6, metadata !6078, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6079
  store volatile i32 128, i32* %5, align 4, !dbg !6081
  %7 = trunc i32 %6 to i16, !dbg !6082
  %8 = and i16 %7, -4, !dbg !6082
  call void @llvm.dbg.value(metadata i16 %7, metadata !6078, metadata !DIExpression(DW_OP_constu, 18446744073709551612, DW_OP_and, DW_OP_stack_value)), !dbg !6079
  switch i32 %1, label %15 [
    i32 3, label %13
    i32 1, label %9
    i32 2, label %11
  ], !dbg !6083

9:                                                ; preds = %4
  %10 = or i16 %8, 1, !dbg !6084
  call void @llvm.dbg.value(metadata i16 %10, metadata !6078, metadata !DIExpression()), !dbg !6079
  br label %15, !dbg !6086

11:                                               ; preds = %4
  %12 = or i16 %8, 2, !dbg !6087
  call void @llvm.dbg.value(metadata i16 %12, metadata !6078, metadata !DIExpression()), !dbg !6079
  br label %15, !dbg !6088

13:                                               ; preds = %4
  %14 = or i16 %7, 3, !dbg !6089
  call void @llvm.dbg.value(metadata i16 %14, metadata !6078, metadata !DIExpression()), !dbg !6079
  br label %15, !dbg !6090

15:                                               ; preds = %4, %13, %11, %9
  %16 = phi i16 [ %14, %13 ], [ %12, %11 ], [ %10, %9 ], [ %8, %4 ], !dbg !6079
  call void @llvm.dbg.value(metadata i16 %16, metadata !6078, metadata !DIExpression()), !dbg !6079
  %17 = and i16 %16, -61, !dbg !6091
  call void @llvm.dbg.value(metadata i16 %16, metadata !6078, metadata !DIExpression(DW_OP_constu, 18446744073709551611, DW_OP_and, DW_OP_stack_value)), !dbg !6079
  %18 = icmp eq i32 %2, 1, !dbg !6092
  %19 = select i1 %18, i16 4, i16 0, !dbg !6092
  %20 = or i16 %17, %19, !dbg !6092
  call void @llvm.dbg.value(metadata !DIArgList(i16 %17, i16 %19), metadata !6078, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !6079
  call void @llvm.dbg.value(metadata i16 %20, metadata !6078, metadata !DIExpression()), !dbg !6079
  %21 = icmp eq i32 %3, 2, !dbg !6093
  %22 = or i16 %20, 16, !dbg !6093
  %23 = select i1 %21, i16 %22, i16 %20, !dbg !6093
  call void @llvm.dbg.value(metadata i16 %23, metadata !6078, metadata !DIExpression()), !dbg !6079
  %24 = zext i16 %23 to i32, !dbg !6094
  store volatile i32 %24, i32* %5, align 4, !dbg !6095
  ret void, !dbg !6096
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_put_char_block(%struct.UART_REGISTER_T* noundef %0, i8 noundef zeroext %1) local_unnamed_addr #3 !dbg !6097 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6101, metadata !DIExpression()), !dbg !6104
  call void @llvm.dbg.value(metadata i8 %1, metadata !6102, metadata !DIExpression()), !dbg !6104
  %3 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0
  br label %4, !dbg !6105

4:                                                ; preds = %4, %2
  %5 = load volatile i32, i32* %3, align 4, !dbg !6106
  call void @llvm.dbg.value(metadata i32 %5, metadata !6103, metadata !DIExpression()), !dbg !6104
  %6 = and i32 %5, 32, !dbg !6108
  %7 = icmp eq i32 %6, 0, !dbg !6108
  br i1 %7, label %4, label %8, !dbg !6110, !llvm.loop !6111

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !6113
  %10 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 0, i32 0, !dbg !6115
  store volatile i32 %9, i32* %10, align 4, !dbg !6116
  ret void, !dbg !6117
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local zeroext i8 @uart_get_char_block(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #3 !dbg !6118 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6122, metadata !DIExpression()), !dbg !6125
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0
  br label %3, !dbg !6126

3:                                                ; preds = %3, %1
  %4 = load volatile i32, i32* %2, align 4, !dbg !6127
  call void @llvm.dbg.value(metadata i32 %4, metadata !6123, metadata !DIExpression()), !dbg !6125
  %5 = and i32 %4, 1, !dbg !6129
  %6 = icmp eq i32 %5, 0, !dbg !6129
  br i1 %6, label %3, label %7, !dbg !6131, !llvm.loop !6132

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 0, i32 0, !dbg !6134
  %9 = load volatile i32, i32* %8, align 4, !dbg !6134
  %10 = trunc i32 %9 to i8, !dbg !6136
  call void @llvm.dbg.value(metadata i8 %10, metadata !6124, metadata !DIExpression()), !dbg !6125
  ret i8 %10, !dbg !6137
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @uart_get_char_unblocking(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #10 !dbg !6138 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6142, metadata !DIExpression()), !dbg !6145
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0, !dbg !6146
  %3 = load volatile i32, i32* %2, align 4, !dbg !6146
  call void @llvm.dbg.value(metadata i32 %3, metadata !6143, metadata !DIExpression()), !dbg !6145
  %4 = and i32 %3, 1, !dbg !6147
  %5 = icmp eq i32 %4, 0, !dbg !6147
  br i1 %5, label %9, label %6, !dbg !6149

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 0, i32 0, !dbg !6150
  %8 = load volatile i32, i32* %7, align 4, !dbg !6150
  call void @llvm.dbg.value(metadata i32 %8, metadata !6144, metadata !DIExpression()), !dbg !6145
  br label %9, !dbg !6152

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %1 ], !dbg !6153
  call void @llvm.dbg.value(metadata i32 %10, metadata !6144, metadata !DIExpression()), !dbg !6145
  ret i32 %10, !dbg !6154
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_hardware_flowcontrol(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #3 !dbg !6155 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6159, metadata !DIExpression()), !dbg !6162
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !6163
  %3 = load volatile i32, i32* %2, align 4, !dbg !6163
  call void @llvm.dbg.value(metadata i32 %3, metadata !6161, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6162
  store volatile i32 191, i32* %2, align 4, !dbg !6164
  %4 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !6165
  %5 = load volatile i32, i32* %4, align 4, !dbg !6165
  call void @llvm.dbg.value(metadata i32 %5, metadata !6160, metadata !DIExpression()), !dbg !6162
  %6 = and i32 %5, 65343, !dbg !6166
  %7 = or i32 %6, 192, !dbg !6166
  call void @llvm.dbg.value(metadata i32 %5, metadata !6160, metadata !DIExpression(DW_OP_constu, 192, DW_OP_or, DW_OP_stack_value)), !dbg !6162
  store volatile i32 %7, i32* %4, align 4, !dbg !6167
  %8 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 17, !dbg !6168
  store volatile i32 0, i32* %8, align 4, !dbg !6169
  store volatile i32 0, i32* %2, align 4, !dbg !6170
  %9 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 4, i32 0, !dbg !6171
  store volatile i32 2, i32* %9, align 4, !dbg !6172
  %10 = and i32 %3, 65535, !dbg !6173
  store volatile i32 %10, i32* %2, align 4, !dbg !6174
  ret void, !dbg !6175
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_software_flowcontrol(%struct.UART_REGISTER_T* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) local_unnamed_addr #3 !dbg !6176 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6180, metadata !DIExpression()), !dbg !6186
  call void @llvm.dbg.value(metadata i8 %1, metadata !6181, metadata !DIExpression()), !dbg !6186
  call void @llvm.dbg.value(metadata i8 %2, metadata !6182, metadata !DIExpression()), !dbg !6186
  call void @llvm.dbg.value(metadata i8 %3, metadata !6183, metadata !DIExpression()), !dbg !6186
  %5 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !6187
  %6 = load volatile i32, i32* %5, align 4, !dbg !6187
  call void @llvm.dbg.value(metadata i32 %6, metadata !6185, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6186
  store volatile i32 191, i32* %5, align 4, !dbg !6188
  %7 = zext i8 %1 to i32, !dbg !6189
  %8 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 4, i32 0, !dbg !6190
  store volatile i32 %7, i32* %8, align 4, !dbg !6191
  %9 = zext i8 %2 to i32, !dbg !6192
  %10 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 6, !dbg !6193
  store volatile i32 %9, i32* %10, align 4, !dbg !6194
  %11 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !6195
  %12 = load volatile i32, i32* %11, align 4, !dbg !6195
  call void @llvm.dbg.value(metadata i32 %12, metadata !6184, metadata !DIExpression()), !dbg !6186
  %13 = and i32 %12, 65509, !dbg !6196
  %14 = or i32 %13, 26, !dbg !6196
  call void @llvm.dbg.value(metadata i32 %12, metadata !6184, metadata !DIExpression(DW_OP_constu, 26, DW_OP_or, DW_OP_stack_value)), !dbg !6186
  store volatile i32 %14, i32* %11, align 4, !dbg !6197
  %15 = zext i8 %3 to i32, !dbg !6198
  %16 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 16, !dbg !6199
  store volatile i32 %15, i32* %16, align 4, !dbg !6200
  %17 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 17, !dbg !6201
  store volatile i32 1, i32* %17, align 4, !dbg !6202
  %18 = and i32 %6, 65535, !dbg !6203
  store volatile i32 %18, i32* %5, align 4, !dbg !6204
  ret void, !dbg !6205
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_disable_flowcontrol(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #3 !dbg !6206 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6208, metadata !DIExpression()), !dbg !6210
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !6211
  %3 = load volatile i32, i32* %2, align 4, !dbg !6211
  call void @llvm.dbg.value(metadata i32 %3, metadata !6209, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6210
  store volatile i32 191, i32* %2, align 4, !dbg !6212
  %4 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !6213
  store volatile i32 0, i32* %4, align 4, !dbg !6214
  store volatile i32 0, i32* %2, align 4, !dbg !6215
  %5 = and i32 %3, 65535, !dbg !6216
  store volatile i32 %5, i32* %2, align 4, !dbg !6217
  ret void, !dbg !6218
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_fifo(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #3 !dbg !6219 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6221, metadata !DIExpression()), !dbg !6224
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !6225
  %3 = load volatile i32, i32* %2, align 4, !dbg !6225
  call void @llvm.dbg.value(metadata i32 %3, metadata !6223, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6224
  store volatile i32 191, i32* %2, align 4, !dbg !6226
  %4 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !6227
  %5 = load volatile i32, i32* %4, align 4, !dbg !6227
  call void @llvm.dbg.value(metadata i32 %5, metadata !6222, metadata !DIExpression()), !dbg !6224
  %6 = and i32 %5, 65519, !dbg !6228
  %7 = or i32 %6, 16, !dbg !6228
  call void @llvm.dbg.value(metadata i32 %5, metadata !6222, metadata !DIExpression(DW_OP_constu, 16, DW_OP_or, DW_OP_stack_value)), !dbg !6224
  store volatile i32 %7, i32* %4, align 4, !dbg !6229
  store volatile i32 0, i32* %2, align 4, !dbg !6230
  store volatile i32 135, i32* %4, align 4, !dbg !6231
  %8 = and i32 %3, 65535, !dbg !6232
  store volatile i32 %8, i32* %2, align 4, !dbg !6233
  ret void, !dbg !6234
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_sleep_mode(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #3 !dbg !6235 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6237, metadata !DIExpression()), !dbg !6238
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 18, !dbg !6239
  store volatile i32 1, i32* %2, align 4, !dbg !6240
  ret void, !dbg !6241
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_unmask_send_interrupt(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #3 !dbg !6242 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6244, metadata !DIExpression()), !dbg !6247
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !6248
  %3 = load volatile i32, i32* %2, align 4, !dbg !6248
  call void @llvm.dbg.value(metadata i32 %3, metadata !6246, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6247
  %4 = load volatile i32, i32* %2, align 4, !dbg !6249
  %5 = and i32 %4, -129, !dbg !6249
  store volatile i32 %5, i32* %2, align 4, !dbg !6249
  %6 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 1, i32 0, !dbg !6250
  %7 = load volatile i32, i32* %6, align 4, !dbg !6250
  call void @llvm.dbg.value(metadata i32 %7, metadata !6245, metadata !DIExpression()), !dbg !6247
  %8 = and i32 %7, 65533, !dbg !6251
  %9 = or i32 %8, 2, !dbg !6251
  call void @llvm.dbg.value(metadata i32 %7, metadata !6245, metadata !DIExpression(DW_OP_constu, 2, DW_OP_or, DW_OP_stack_value)), !dbg !6247
  store volatile i32 %9, i32* %6, align 4, !dbg !6252
  %10 = and i32 %3, 65535, !dbg !6253
  %11 = load volatile i32, i32* %2, align 4, !dbg !6254
  %12 = and i32 %10, %11, !dbg !6254
  store volatile i32 %12, i32* %2, align 4, !dbg !6254
  ret void, !dbg !6255
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_unmask_receive_interrupt(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #3 !dbg !6256 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6258, metadata !DIExpression()), !dbg !6261
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !6262
  %3 = load volatile i32, i32* %2, align 4, !dbg !6262
  call void @llvm.dbg.value(metadata i32 %3, metadata !6260, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6261
  %4 = load volatile i32, i32* %2, align 4, !dbg !6263
  %5 = and i32 %4, -129, !dbg !6263
  store volatile i32 %5, i32* %2, align 4, !dbg !6263
  %6 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 1, i32 0, !dbg !6264
  %7 = load volatile i32, i32* %6, align 4, !dbg !6264
  call void @llvm.dbg.value(metadata i32 %7, metadata !6259, metadata !DIExpression()), !dbg !6261
  %8 = and i32 %7, 65530, !dbg !6265
  %9 = or i32 %8, 5, !dbg !6265
  call void @llvm.dbg.value(metadata i32 %7, metadata !6259, metadata !DIExpression(DW_OP_constu, 5, DW_OP_or, DW_OP_stack_value)), !dbg !6261
  store volatile i32 %9, i32* %6, align 4, !dbg !6266
  %10 = and i32 %3, 65535, !dbg !6267
  %11 = load volatile i32, i32* %2, align 4, !dbg !6268
  %12 = and i32 %10, %11, !dbg !6268
  store volatile i32 %12, i32* %2, align 4, !dbg !6268
  ret void, !dbg !6269
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_purge_fifo(%struct.UART_REGISTER_T* noundef %0, i32 noundef %1) local_unnamed_addr #3 !dbg !6270 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6274, metadata !DIExpression()), !dbg !6277
  call void @llvm.dbg.value(metadata i32 %1, metadata !6275, metadata !DIExpression()), !dbg !6277
  call void @llvm.dbg.value(metadata i16 145, metadata !6276, metadata !DIExpression()), !dbg !6277
  %3 = icmp eq i32 %1, 0, !dbg !6278
  %4 = select i1 %3, i32 149, i32 147
  call void @llvm.dbg.value(metadata i16 undef, metadata !6276, metadata !DIExpression()), !dbg !6277
  %5 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !6280
  store volatile i32 %4, i32* %5, align 4, !dbg !6281
  ret void, !dbg !6282
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @uart_query_interrupt_type(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #10 !dbg !6283 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6288, metadata !DIExpression()), !dbg !6292
  call void @llvm.dbg.value(metadata i32 0, metadata !6291, metadata !DIExpression()), !dbg !6292
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !6293
  %3 = load volatile i32, i32* %2, align 4, !dbg !6293
  call void @llvm.dbg.value(metadata i32 %3, metadata !6289, metadata !DIExpression()), !dbg !6292
  %4 = and i32 %3, 1, !dbg !6294
  %5 = icmp eq i32 %4, 0, !dbg !6294
  br i1 %5, label %6, label %16, !dbg !6296

6:                                                ; preds = %1
  %7 = and i32 %3, 63, !dbg !6297
  switch i32 %7, label %16 [
    i32 12, label %8
    i32 6, label %9
    i32 2, label %15
  ], !dbg !6298

8:                                                ; preds = %6
  call void @llvm.dbg.value(metadata i32 2, metadata !6291, metadata !DIExpression()), !dbg !6292
  br label %16, !dbg !6299

9:                                                ; preds = %6
  %10 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0, !dbg !6301
  %11 = load volatile i32, i32* %10, align 4, !dbg !6301
  call void @llvm.dbg.value(metadata i32 %11, metadata !6290, metadata !DIExpression()), !dbg !6292
  %12 = and i32 %11, 16, !dbg !6302
  %13 = icmp eq i32 %12, 0, !dbg !6302
  %14 = select i1 %13, i32 1, i32 3
  br label %16

15:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i32 5, metadata !6291, metadata !DIExpression()), !dbg !6292
  br label %16, !dbg !6304

16:                                               ; preds = %8, %15, %6, %9, %1
  %17 = phi i32 [ 0, %1 ], [ 0, %6 ], [ 5, %15 ], [ 2, %8 ], [ %14, %9 ], !dbg !6292
  ret i32 %17, !dbg !6305
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @uart_verify_error(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #10 !dbg !6306 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6310, metadata !DIExpression()), !dbg !6313
  call void @llvm.dbg.value(metadata i32 0, metadata !6312, metadata !DIExpression()), !dbg !6313
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0, !dbg !6314
  %3 = load volatile i32, i32* %2, align 4, !dbg !6314
  call void @llvm.dbg.value(metadata i32 %3, metadata !6311, metadata !DIExpression()), !dbg !6313
  %4 = and i32 %3, 14, !dbg !6315
  %5 = icmp eq i32 %4, 0, !dbg !6315
  %6 = sext i1 %5 to i32, !dbg !6317
  call void @llvm.dbg.value(metadata i32 %6, metadata !6312, metadata !DIExpression()), !dbg !6313
  ret i32 %6, !dbg !6318
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @uart_clear_timeout_interrupt(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #10 !dbg !6319 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6321, metadata !DIExpression()), !dbg !6323
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 19, !dbg !6324
  %3 = load volatile i32, i32* %2, align 4, !dbg !6324
  call void @llvm.dbg.value(metadata i32 %3, metadata !6322, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6323
  call void @llvm.dbg.value(metadata i32 %3, metadata !6322, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6323
  ret void, !dbg !6325
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_reset_default_value(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #3 !dbg !6326 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6328, metadata !DIExpression()), !dbg !6329
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !6330
  store volatile i32 191, i32* %2, align 4, !dbg !6331
  %3 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !6332
  store volatile i32 16, i32* %3, align 4, !dbg !6333
  %4 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 4, i32 0, !dbg !6334
  store volatile i32 0, i32* %4, align 4, !dbg !6335
  %5 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 6, !dbg !6336
  store volatile i32 0, i32* %5, align 4, !dbg !6337
  store volatile i32 128, i32* %2, align 4, !dbg !6338
  %6 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 0, i32 0, !dbg !6339
  store volatile i32 0, i32* %6, align 4, !dbg !6340
  %7 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 1, i32 0, !dbg !6341
  store volatile i32 0, i32* %7, align 4, !dbg !6342
  store volatile i32 0, i32* %2, align 4, !dbg !6343
  store volatile i32 0, i32* %7, align 4, !dbg !6344
  store volatile i32 0, i32* %3, align 4, !dbg !6345
  store volatile i32 191, i32* %2, align 4, !dbg !6346
  store volatile i32 0, i32* %3, align 4, !dbg !6347
  store volatile i32 0, i32* %2, align 4, !dbg !6348
  store volatile i32 0, i32* %4, align 4, !dbg !6349
  %8 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 7, i32 0, !dbg !6350
  store volatile i32 0, i32* %8, align 4, !dbg !6351
  %9 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 8, !dbg !6352
  store volatile i32 0, i32* %9, align 4, !dbg !6353
  %10 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 9, !dbg !6354
  store volatile i32 0, i32* %10, align 4, !dbg !6355
  %11 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 10, !dbg !6356
  store volatile i32 0, i32* %11, align 4, !dbg !6357
  %12 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 11, !dbg !6358
  store volatile i32 0, i32* %12, align 4, !dbg !6359
  %13 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 13, !dbg !6360
  store volatile i32 0, i32* %13, align 4, !dbg !6361
  %14 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 14, !dbg !6362
  store volatile i32 0, i32* %14, align 4, !dbg !6363
  %15 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 15, !dbg !6364
  store volatile i32 0, i32* %15, align 4, !dbg !6365
  %16 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 16, !dbg !6366
  store volatile i32 0, i32* %16, align 4, !dbg !6367
  %17 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 17, !dbg !6368
  store volatile i32 0, i32* %17, align 4, !dbg !6369
  %18 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 18, !dbg !6370
  store volatile i32 0, i32* %18, align 4, !dbg !6371
  %19 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 19, !dbg !6372
  store volatile i32 0, i32* %19, align 4, !dbg !6373
  store volatile i32 0, i32* %13, align 4, !dbg !6374
  %20 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 21, !dbg !6375
  store volatile i32 0, i32* %20, align 4, !dbg !6376
  %21 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 22, !dbg !6377
  store volatile i32 0, i32* %21, align 4, !dbg !6378
  ret void, !dbg !6379
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_query_empty(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #3 !dbg !6380 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6382, metadata !DIExpression()), !dbg !6383
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0
  br label %3, !dbg !6384

3:                                                ; preds = %3, %1
  %4 = load volatile i32, i32* %2, align 4, !dbg !6385
  %5 = and i32 %4, 64, !dbg !6386
  %6 = icmp eq i32 %5, 0, !dbg !6387
  br i1 %6, label %3, label %7, !dbg !6384, !llvm.loop !6388

7:                                                ; preds = %3
  ret void, !dbg !6390
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef %1) local_unnamed_addr #9 !dbg !6391 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6395, metadata !DIExpression()), !dbg !6398
  call void @llvm.dbg.value(metadata i32 %1, metadata !6396, metadata !DIExpression()), !dbg !6398
  call void @llvm.dbg.value(metadata i32 15, metadata !6397, metadata !DIExpression()), !dbg !6398
  switch i32 %0, label %15 [
    i32 0, label %3
    i32 1, label %6
    i32 2, label %9
    i32 3, label %12
  ], !dbg !6399

3:                                                ; preds = %2
  %4 = icmp eq i32 %1, 0, !dbg !6400
  %5 = select i1 %4, i32 14, i32 15
  br label %15

6:                                                ; preds = %2
  %7 = icmp eq i32 %1, 0, !dbg !6403
  %8 = select i1 %7, i32 8, i32 9
  br label %15

9:                                                ; preds = %2
  %10 = icmp eq i32 %1, 0, !dbg !6405
  %11 = select i1 %10, i32 10, i32 11
  br label %15

12:                                               ; preds = %2
  %13 = icmp eq i32 %1, 0, !dbg !6407
  %14 = select i1 %13, i32 12, i32 13
  br label %15

15:                                               ; preds = %12, %9, %6, %3, %2
  %16 = phi i32 [ 15, %2 ], [ %5, %3 ], [ %8, %6 ], [ %11, %9 ], [ %14, %12 ], !dbg !6398
  call void @llvm.dbg.value(metadata i32 %16, metadata !6397, metadata !DIExpression()), !dbg !6398
  ret i32 %16, !dbg !6409
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @uart_dma_channel_to_callback_data(i32 noundef %0, %struct.uart_dma_callback_data_t* nocapture noundef writeonly %1) local_unnamed_addr #5 !dbg !6410 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6420, metadata !DIExpression()), !dbg !6422
  call void @llvm.dbg.value(metadata %struct.uart_dma_callback_data_t* %1, metadata !6421, metadata !DIExpression()), !dbg !6422
  %3 = add i32 %0, -8, !dbg !6423
  %4 = icmp ult i32 %3, 8, !dbg !6423
  br i1 %4, label %5, label %12, !dbg !6423

5:                                                ; preds = %2
  %6 = getelementptr inbounds [8 x i8], [8 x i8]* @switch.table.uart_dma_channel_to_callback_data, i32 0, i32 %3, !dbg !6423
  %7 = load i8, i8* %6, align 1, !dbg !6423
  %8 = getelementptr inbounds [8 x i32], [8 x i32]* @switch.table.uart_dma_channel_to_callback_data.6, i32 0, i32 %3, !dbg !6423
  %9 = load i32, i32* %8, align 4, !dbg !6423
  %10 = getelementptr inbounds %struct.uart_dma_callback_data_t, %struct.uart_dma_callback_data_t* %1, i32 0, i32 0, !dbg !6424
  store i8 %7, i8* %10, align 4, !dbg !6424
  %11 = getelementptr inbounds %struct.uart_dma_callback_data_t, %struct.uart_dma_callback_data_t* %1, i32 0, i32 1, !dbg !6424
  store i32 %9, i32* %11, align 4, !dbg !6424
  br label %12, !dbg !6426

12:                                               ; preds = %2, %5
  ret void, !dbg !6426
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_enable_dma(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #3 !dbg !6427 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6431, metadata !DIExpression()), !dbg !6432
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 19, !dbg !6433
  store volatile i32 3, i32* %2, align 4, !dbg !6434
  ret void, !dbg !6435
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_interrupt_handler(i32 noundef %0) #0 !dbg !6436 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6438, metadata !DIExpression()), !dbg !6442
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* inttoptr (i32 -1609760768 to %struct.UART_REGISTER_T*), metadata !6441, metadata !DIExpression()), !dbg !6442
  %2 = add i32 %0, -30, !dbg !6443
  %3 = icmp ult i32 %2, 3, !dbg !6443
  %4 = add i32 %0, -29
  %5 = select i1 %3, i32 %4, i32 0, !dbg !6443
  call void @llvm.dbg.value(metadata i32 %5, metadata !6439, metadata !DIExpression()), !dbg !6442
  %6 = getelementptr inbounds [4 x %struct.UART_REGISTER_T*], [4 x %struct.UART_REGISTER_T*]* @g_uart_regbase, i32 0, i32 %5, !dbg !6444
  %7 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %6, align 4, !dbg !6444
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %7, metadata !6441, metadata !DIExpression()), !dbg !6442
  %8 = tail call i32 @uart_query_interrupt_type(%struct.UART_REGISTER_T* noundef %7) #21, !dbg !6445
  call void @llvm.dbg.value(metadata i32 %8, metadata !6440, metadata !DIExpression()), !dbg !6442
  switch i32 %8, label %13 [
    i32 2, label %9
    i32 1, label %10
    i32 4, label %14
    i32 0, label %14
    i32 3, label %11
    i32 5, label %12
  ], !dbg !6446

9:                                                ; preds = %1
  tail call void @uart_receive_handler(i32 noundef %5, i1 noundef zeroext true) #21, !dbg !6447
  br label %14, !dbg !6449

10:                                               ; preds = %1
  tail call void @uart_error_handler(i32 noundef %5) #21, !dbg !6450
  br label %14, !dbg !6451

11:                                               ; preds = %1
  tail call void @uart_purge_fifo(%struct.UART_REGISTER_T* noundef %7, i32 noundef 1) #21, !dbg !6452
  br label %14, !dbg !6453

12:                                               ; preds = %1
  tail call void @uart_send_handler(i32 noundef %5, i1 noundef zeroext true) #21, !dbg !6454
  br label %14, !dbg !6455

13:                                               ; preds = %1
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.4.101, i32 0, i32 0), i32 noundef 276, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.uart_interrupt_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.102, i32 0, i32 0)) #24, !dbg !6456
  unreachable, !dbg !6456

14:                                               ; preds = %12, %11, %1, %1, %10, %9
  ret void, !dbg !6457
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @i2c_set_frequency(i32 noundef %0, i32 noundef %1) local_unnamed_addr #3 !dbg !6458 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6462, metadata !DIExpression()), !dbg !6470
  call void @llvm.dbg.value(metadata i32 %1, metadata !6463, metadata !DIExpression()), !dbg !6470
  call void @llvm.dbg.value(metadata i32 0, metadata !6464, metadata !DIExpression()), !dbg !6470
  %3 = getelementptr inbounds [4 x %struct.I2C_REGISTER_T*], [4 x %struct.I2C_REGISTER_T*]* @i2c_master_register, i32 0, i32 %0, !dbg !6471
  %4 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %3, align 4, !dbg !6471
  %5 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %4, i32 0, i32 21, !dbg !6472
  store volatile i16 0, i16* %5, align 2, !dbg !6473
  switch i32 %1, label %11 [
    i32 0, label %6
    i32 1, label %13
    i32 2, label %7
    i32 3, label %8
    i32 4, label %9
    i32 5, label %10
  ], !dbg !6474

6:                                                ; preds = %2
  store volatile i16 1, i16* %5, align 2, !dbg !6475
  call void @llvm.dbg.value(metadata i32 100, metadata !6464, metadata !DIExpression()), !dbg !6470
  br label %13, !dbg !6477

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 200, metadata !6464, metadata !DIExpression()), !dbg !6470
  br label %13, !dbg !6478

8:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 300, metadata !6464, metadata !DIExpression()), !dbg !6470
  br label %13, !dbg !6479

9:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 400, metadata !6464, metadata !DIExpression()), !dbg !6470
  br label %13, !dbg !6480

10:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 1000, metadata !6464, metadata !DIExpression()), !dbg !6470
  br label %13, !dbg !6481

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 %1, metadata !6464, metadata !DIExpression()), !dbg !6470
  %12 = shl i32 %1, 1, !dbg !6482
  br label %13, !dbg !6482

13:                                               ; preds = %2, %11, %10, %9, %8, %7, %6
  %14 = phi i32 [ %12, %11 ], [ 2000, %10 ], [ 800, %9 ], [ 600, %8 ], [ 400, %7 ], [ 200, %6 ], [ 200, %2 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !6464, metadata !DIExpression()), !dbg !6470
  call void @llvm.dbg.value(metadata i32 1, metadata !6466, metadata !DIExpression()), !dbg !6470
  call void @llvm.dbg.value(metadata i32 undef, metadata !6465, metadata !DIExpression()), !dbg !6470
  %15 = getelementptr inbounds [4 x i32], [4 x i32]* @g_i2c_source_clock_table, i32 0, i32 %0
  %16 = load i32, i32* %15, align 4
  br label %17, !dbg !6483

17:                                               ; preds = %13, %24
  %18 = phi i32 [ 1, %13 ], [ %25, %24 ]
  call void @llvm.dbg.value(metadata i32 %18, metadata !6466, metadata !DIExpression()), !dbg !6470
  %19 = mul i32 %18, %14, !dbg !6485
  call void @llvm.dbg.value(metadata i32 %19, metadata !6469, metadata !DIExpression()), !dbg !6470
  %20 = add i32 %19, -1, !dbg !6488
  %21 = add i32 %20, %16, !dbg !6489
  %22 = udiv i32 %21, %19, !dbg !6490
  call void @llvm.dbg.value(metadata i32 %22, metadata !6465, metadata !DIExpression()), !dbg !6470
  %23 = icmp ult i32 %22, 65, !dbg !6491
  br i1 %23, label %27, label %24, !dbg !6493

24:                                               ; preds = %17
  %25 = add nuw nsw i32 %18, 1, !dbg !6494
  call void @llvm.dbg.value(metadata i32 %22, metadata !6465, metadata !DIExpression()), !dbg !6470
  call void @llvm.dbg.value(metadata i32 %25, metadata !6466, metadata !DIExpression()), !dbg !6470
  %26 = icmp eq i32 %25, 9, !dbg !6495
  br i1 %26, label %27, label %17, !dbg !6483, !llvm.loop !6496

27:                                               ; preds = %17, %24
  %28 = phi i32 [ %18, %17 ], [ 9, %24 ], !dbg !6498
  call void @llvm.dbg.value(metadata i32 %22, metadata !6465, metadata !DIExpression()), !dbg !6470
  call void @llvm.dbg.value(metadata i32 %28, metadata !6466, metadata !DIExpression(DW_OP_plus_uconst, 16777215, DW_OP_stack_value)), !dbg !6470
  %29 = add i32 %22, 63, !dbg !6499
  call void @llvm.dbg.value(metadata i32 %22, metadata !6465, metadata !DIExpression(DW_OP_plus_uconst, 63, DW_OP_stack_value)), !dbg !6470
  %30 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %4, i32 0, i32 16, !dbg !6500
  %31 = load volatile i16, i16* %30, align 2, !dbg !6500
  %32 = and i16 %31, -1856, !dbg !6501
  call void @llvm.dbg.value(metadata i16 %32, metadata !6467, metadata !DIExpression(DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6470
  %33 = shl i32 %28, 8, !dbg !6502
  %34 = add i32 %33, 1792, !dbg !6502
  %35 = and i32 %34, 1792, !dbg !6503
  %36 = and i32 %29, 63, !dbg !6504
  %37 = or i32 %36, %35, !dbg !6505
  call void @llvm.dbg.value(metadata !DIArgList(i32 %37, i16 %32), metadata !6468, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !6470
  %38 = trunc i32 %37 to i16, !dbg !6506
  %39 = or i16 %32, %38, !dbg !6506
  store volatile i16 %39, i16* %30, align 2, !dbg !6507
  ret void, !dbg !6508
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @i2c_config_hardware(i32 noundef %0, i32 noundef %1, i8 noundef zeroext %2, %struct.i2c_transaction_size_t* nocapture noundef readonly %3) local_unnamed_addr #3 !dbg !6509 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6523, metadata !DIExpression()), !dbg !6527
  call void @llvm.dbg.value(metadata i32 %1, metadata !6524, metadata !DIExpression()), !dbg !6527
  call void @llvm.dbg.value(metadata i8 %2, metadata !6525, metadata !DIExpression()), !dbg !6527
  call void @llvm.dbg.value(metadata %struct.i2c_transaction_size_t* %3, metadata !6526, metadata !DIExpression()), !dbg !6527
  %5 = zext i8 %2 to i16, !dbg !6528
  %6 = getelementptr inbounds [4 x %struct.I2C_REGISTER_T*], [4 x %struct.I2C_REGISTER_T*]* @i2c_master_register, i32 0, i32 %0, !dbg !6529
  %7 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %6, align 4, !dbg !6529
  %8 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 2, !dbg !6530
  store volatile i16 %5, i16* %8, align 2, !dbg !6531
  %9 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 27, !dbg !6532
  store volatile i16 1, i16* %9, align 2, !dbg !6532
  %10 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 6, !dbg !6533
  store volatile i16 31, i16* %10, align 2, !dbg !6533
  switch i32 %1, label %117 [
    i32 14, label %100
    i32 13, label %89
    i32 6, label %11
    i32 0, label %12
    i32 7, label %21
    i32 1, label %22
    i32 8, label %31
    i32 2, label %32
    i32 9, label %41
    i32 3, label %42
    i32 10, label %51
    i32 4, label %52
    i32 12, label %78
    i32 5, label %65
    i32 11, label %64
  ], !dbg !6534

11:                                               ; preds = %4
  br label %12

12:                                               ; preds = %4, %11
  %13 = phi i16 [ 3, %11 ], [ 0, %4 ]
  %14 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 30, !dbg !6535
  store volatile i16 %13, i16* %14, align 2, !dbg !6535
  %15 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 8, !dbg !6535
  store volatile i16 32, i16* %15, align 2, !dbg !6535
  %16 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 0, !dbg !6538
  %17 = load i32, i32* %16, align 4, !dbg !6538
  %18 = trunc i32 %17 to i16, !dbg !6539
  %19 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 10, !dbg !6540
  store volatile i16 %18, i16* %19, align 2, !dbg !6541
  %20 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 12, !dbg !6542
  store volatile i16 1, i16* %20, align 2, !dbg !6543
  br label %114, !dbg !6544

21:                                               ; preds = %4
  br label %22

22:                                               ; preds = %4, %21
  %23 = phi i16 [ 3, %21 ], [ 0, %4 ]
  %24 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 30, !dbg !6545
  store volatile i16 %23, i16* %24, align 2, !dbg !6545
  %25 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 8, !dbg !6545
  store volatile i16 36, i16* %25, align 2, !dbg !6545
  %26 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 0, !dbg !6547
  %27 = load i32, i32* %26, align 4, !dbg !6547
  %28 = trunc i32 %27 to i16, !dbg !6548
  %29 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 10, !dbg !6549
  store volatile i16 %28, i16* %29, align 2, !dbg !6550
  %30 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 12, !dbg !6551
  store volatile i16 1, i16* %30, align 2, !dbg !6552
  br label %114, !dbg !6553

31:                                               ; preds = %4
  br label %32

32:                                               ; preds = %4, %31
  %33 = phi i16 [ 3, %31 ], [ 0, %4 ]
  %34 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 30, !dbg !6554
  store volatile i16 %33, i16* %34, align 2, !dbg !6554
  %35 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 8, !dbg !6554
  store volatile i16 32, i16* %35, align 2, !dbg !6554
  %36 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 1, !dbg !6556
  %37 = load i32, i32* %36, align 4, !dbg !6556
  %38 = trunc i32 %37 to i16, !dbg !6557
  %39 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 10, !dbg !6558
  store volatile i16 %38, i16* %39, align 2, !dbg !6559
  %40 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 12, !dbg !6560
  store volatile i16 1, i16* %40, align 2, !dbg !6561
  br label %114, !dbg !6562

41:                                               ; preds = %4
  br label %42

42:                                               ; preds = %4, %41
  %43 = phi i16 [ 3, %41 ], [ 0, %4 ]
  %44 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 30, !dbg !6563
  store volatile i16 %43, i16* %44, align 2, !dbg !6563
  %45 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 8, !dbg !6563
  store volatile i16 36, i16* %45, align 2, !dbg !6563
  %46 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 10, !dbg !6565
  store volatile i16 1, i16* %46, align 2, !dbg !6566
  %47 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 1, !dbg !6567
  %48 = load i32, i32* %47, align 4, !dbg !6567
  %49 = trunc i32 %48 to i16, !dbg !6568
  %50 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 12, !dbg !6569
  store volatile i16 %49, i16* %50, align 2, !dbg !6570
  br label %114, !dbg !6571

51:                                               ; preds = %4
  br label %52

52:                                               ; preds = %4, %51
  %53 = phi i16 [ 3, %51 ], [ 0, %4 ]
  %54 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 30, !dbg !6572
  store volatile i16 %53, i16* %54, align 2, !dbg !6572
  %55 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 8, !dbg !6572
  store volatile i16 114, i16* %55, align 2, !dbg !6572
  %56 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 0, !dbg !6574
  %57 = load i32, i32* %56, align 4, !dbg !6574
  %58 = trunc i32 %57 to i16, !dbg !6575
  %59 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 10, !dbg !6576
  store volatile i16 %58, i16* %59, align 2, !dbg !6577
  %60 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 12, !dbg !6578
  store volatile i16 2, i16* %60, align 2, !dbg !6579
  %61 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 1, !dbg !6580
  %62 = load i32, i32* %61, align 4, !dbg !6580
  %63 = trunc i32 %62 to i16, !dbg !6581
  br label %114, !dbg !6582

64:                                               ; preds = %4
  br label %65

65:                                               ; preds = %4, %64
  %66 = phi i16 [ 3, %64 ], [ 0, %4 ]
  %67 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 30, !dbg !6583
  store volatile i16 %66, i16* %67, align 2, !dbg !6583
  %68 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 8, !dbg !6583
  store volatile i16 118, i16* %68, align 2, !dbg !6583
  %69 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 0, !dbg !6585
  %70 = load i32, i32* %69, align 4, !dbg !6585
  %71 = trunc i32 %70 to i16, !dbg !6586
  %72 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 10, !dbg !6587
  store volatile i16 %71, i16* %72, align 2, !dbg !6588
  %73 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 1, !dbg !6589
  %74 = load i32, i32* %73, align 4, !dbg !6589
  %75 = trunc i32 %74 to i16, !dbg !6590
  %76 = add i16 %75, 1, !dbg !6590
  %77 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 12, !dbg !6591
  store volatile i16 %76, i16* %77, align 2, !dbg !6592
  br label %114, !dbg !6593

78:                                               ; preds = %4
  %79 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 30, !dbg !6594
  store volatile i16 3, i16* %79, align 2, !dbg !6595
  %80 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 8, !dbg !6596
  store volatile i16 38, i16* %80, align 2, !dbg !6597
  %81 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 2, !dbg !6598
  %82 = load i32, i32* %81, align 4, !dbg !6598
  %83 = trunc i32 %82 to i16, !dbg !6599
  %84 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 10, !dbg !6600
  store volatile i16 %83, i16* %84, align 2, !dbg !6601
  %85 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 4, !dbg !6602
  %86 = load i32, i32* %85, align 4, !dbg !6602
  %87 = trunc i32 %86 to i16, !dbg !6603
  %88 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 12, !dbg !6604
  store volatile i16 %87, i16* %88, align 2, !dbg !6605
  br label %114, !dbg !6606

89:                                               ; preds = %4
  %90 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 30, !dbg !6607
  store volatile i16 3, i16* %90, align 2, !dbg !6608
  %91 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 8, !dbg !6609
  store volatile i16 38, i16* %91, align 2, !dbg !6610
  %92 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 2, !dbg !6611
  %93 = load i32, i32* %92, align 4, !dbg !6611
  %94 = trunc i32 %93 to i16, !dbg !6612
  %95 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 10, !dbg !6613
  store volatile i16 %94, i16* %95, align 2, !dbg !6614
  %96 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 4, !dbg !6615
  %97 = load i32, i32* %96, align 4, !dbg !6615
  %98 = trunc i32 %97 to i16, !dbg !6616
  %99 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 12, !dbg !6617
  store volatile i16 %98, i16* %99, align 2, !dbg !6618
  br label %114, !dbg !6619

100:                                              ; preds = %4
  %101 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 30, !dbg !6620
  store volatile i16 3, i16* %101, align 2, !dbg !6621
  %102 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 8, !dbg !6622
  store volatile i16 118, i16* %102, align 2, !dbg !6623
  %103 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 2, !dbg !6624
  %104 = load i32, i32* %103, align 4, !dbg !6624
  %105 = trunc i32 %104 to i16, !dbg !6625
  %106 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 10, !dbg !6626
  store volatile i16 %105, i16* %106, align 2, !dbg !6627
  %107 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 4, !dbg !6628
  %108 = load i32, i32* %107, align 4, !dbg !6628
  %109 = trunc i32 %108 to i16, !dbg !6629
  %110 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 12, !dbg !6630
  store volatile i16 %109, i16* %110, align 2, !dbg !6631
  %111 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 3, !dbg !6632
  %112 = load i32, i32* %111, align 4, !dbg !6632
  %113 = trunc i32 %112 to i16, !dbg !6633
  br label %114, !dbg !6634

114:                                              ; preds = %12, %22, %32, %42, %52, %65, %78, %89, %100
  %115 = phi i16 [ %113, %100 ], [ 1, %89 ], [ 1, %78 ], [ 1, %65 ], [ %63, %52 ], [ 1, %42 ], [ 1, %32 ], [ 1, %22 ], [ 1, %12 ]
  %116 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 45, !dbg !6635
  store volatile i16 %115, i16* %116, align 2, !dbg !6635
  br label %117, !dbg !6636

117:                                              ; preds = %114, %4
  ret void, !dbg !6636
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @i2c_write_fifo(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #3 !dbg !6637 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6641, metadata !DIExpression()), !dbg !6645
  call void @llvm.dbg.value(metadata i8* %1, metadata !6642, metadata !DIExpression()), !dbg !6645
  call void @llvm.dbg.value(metadata i32 %2, metadata !6643, metadata !DIExpression()), !dbg !6645
  call void @llvm.dbg.value(metadata i32 0, metadata !6644, metadata !DIExpression()), !dbg !6645
  %4 = icmp eq i32 %2, 0, !dbg !6646
  br i1 %4, label %16, label %5, !dbg !6649

5:                                                ; preds = %3
  %6 = getelementptr inbounds [4 x %struct.I2C_REGISTER_T*], [4 x %struct.I2C_REGISTER_T*]* @i2c_master_register, i32 0, i32 %0
  %7 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %6, align 4
  %8 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 0
  br label %9, !dbg !6649

9:                                                ; preds = %5, %9
  %10 = phi i32 [ 0, %5 ], [ %14, %9 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !6644, metadata !DIExpression()), !dbg !6645
  %11 = getelementptr inbounds i8, i8* %1, i32 %10, !dbg !6650
  %12 = load i8, i8* %11, align 1, !dbg !6652
  %13 = zext i8 %12 to i16, !dbg !6652
  store volatile i16 %13, i16* %8, align 2, !dbg !6653
  %14 = add nuw i32 %10, 1, !dbg !6654
  call void @llvm.dbg.value(metadata i32 %14, metadata !6644, metadata !DIExpression()), !dbg !6645
  %15 = icmp eq i32 %14, %2, !dbg !6646
  br i1 %15, label %16, label %9, !dbg !6649, !llvm.loop !6655

16:                                               ; preds = %9, %3
  ret void, !dbg !6657
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @i2c_read_fifo(i32 noundef %0, i8* nocapture noundef writeonly %1, i32 noundef %2) local_unnamed_addr #3 !dbg !6658 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6662, metadata !DIExpression()), !dbg !6666
  call void @llvm.dbg.value(metadata i8* %1, metadata !6663, metadata !DIExpression()), !dbg !6666
  call void @llvm.dbg.value(metadata i32 %2, metadata !6664, metadata !DIExpression()), !dbg !6666
  call void @llvm.dbg.value(metadata i32 0, metadata !6665, metadata !DIExpression()), !dbg !6666
  %4 = icmp eq i32 %2, 0, !dbg !6667
  br i1 %4, label %16, label %5, !dbg !6670

5:                                                ; preds = %3
  %6 = getelementptr inbounds [4 x %struct.I2C_REGISTER_T*], [4 x %struct.I2C_REGISTER_T*]* @i2c_master_register, i32 0, i32 %0
  %7 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %6, align 4
  %8 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 0
  br label %9, !dbg !6670

9:                                                ; preds = %5, %9
  %10 = phi i32 [ 0, %5 ], [ %14, %9 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !6665, metadata !DIExpression()), !dbg !6666
  %11 = load volatile i16, i16* %8, align 2, !dbg !6671
  %12 = trunc i16 %11 to i8, !dbg !6673
  %13 = getelementptr inbounds i8, i8* %1, i32 %10, !dbg !6674
  store i8 %12, i8* %13, align 1, !dbg !6675
  %14 = add nuw i32 %10, 1, !dbg !6676
  call void @llvm.dbg.value(metadata i32 %14, metadata !6665, metadata !DIExpression()), !dbg !6666
  %15 = icmp eq i32 %14, %2, !dbg !6667
  br i1 %15, label %16, label %9, !dbg !6670, !llvm.loop !6677

16:                                               ; preds = %9, %3
  ret void, !dbg !6679
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @i2c_get_transaction_status(i32 noundef %0) local_unnamed_addr #3 !dbg !6680 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6685, metadata !DIExpression()), !dbg !6688
  call void @llvm.dbg.value(metadata i32 -4, metadata !6687, metadata !DIExpression()), !dbg !6688
  %2 = getelementptr inbounds [4 x %struct.I2C_REGISTER_T*], [4 x %struct.I2C_REGISTER_T*]* @i2c_master_register, i32 0, i32 %0, !dbg !6689
  %3 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %2, align 4, !dbg !6689
  %4 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %3, i32 0, i32 6, !dbg !6690
  %5 = load volatile i16, i16* %4, align 2, !dbg !6690
  call void @llvm.dbg.value(metadata i16 %5, metadata !6686, metadata !DIExpression()), !dbg !6688
  %6 = zext i16 %5 to i32, !dbg !6691
  %7 = and i32 %6, 2, !dbg !6693
  %8 = icmp eq i32 %7, 0, !dbg !6694
  br i1 %8, label %9, label %18, !dbg !6695

9:                                                ; preds = %1
  %10 = and i32 %6, 4, !dbg !6696
  %11 = icmp eq i32 %10, 0, !dbg !6698
  br i1 %11, label %12, label %18, !dbg !6699

12:                                               ; preds = %9
  %13 = and i32 %6, 16, !dbg !6700
  %14 = icmp eq i32 %13, 0, !dbg !6702
  br i1 %14, label %15, label %18, !dbg !6703

15:                                               ; preds = %12
  %16 = icmp eq i16 %5, 1, !dbg !6704
  %17 = select i1 %16, i32 0, i32 -4, !dbg !6706
  br label %18, !dbg !6706

18:                                               ; preds = %15, %12, %9, %1
  %19 = phi i32 [ -3, %1 ], [ -2, %9 ], [ -1, %12 ], [ %17, %15 ], !dbg !6688
  call void @llvm.dbg.value(metadata i32 %19, metadata !6687, metadata !DIExpression()), !dbg !6688
  store volatile i16 31, i16* %4, align 2, !dbg !6707
  ret i32 %19, !dbg !6708
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pmic_i2c_init(i32 noundef %0, %union.anon* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !6709 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6720, metadata !DIExpression()), !dbg !6722
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !6721, metadata !DIExpression()), !dbg !6722
  %3 = icmp eq i32 %0, 0, !dbg !6723
  br i1 %3, label %4, label %11, !dbg !6725

4:                                                ; preds = %2
  %5 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @g_i2c_pdn_table, i32 0, i32 3), align 4, !dbg !6726
  %6 = tail call i32 @hal_clock_enable(i32 noundef %5) #21, !dbg !6727
  %7 = getelementptr inbounds %union.anon, %union.anon* %1, i32 0, i32 0, !dbg !6728
  %8 = load i32, i32* %7, align 4, !dbg !6728
  tail call void @i2c_set_frequency(i32 noundef 3, i32 noundef %8) #21, !dbg !6729
  %9 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @g_i2c_pdn_table, i32 0, i32 3), align 4, !dbg !6730
  %10 = tail call i32 @hal_clock_disable(i32 noundef %9) #21, !dbg !6731
  br label %11, !dbg !6732

11:                                               ; preds = %2, %4
  %12 = phi i32 [ 0, %4 ], [ -102, %2 ], !dbg !6722
  ret i32 %12, !dbg !6733
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pmic_i2c_send_polling(i32 noundef %0, i8 noundef zeroext %1, i8* noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !6734 {
  %5 = alloca %struct.i2c_transaction_size_t, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6738, metadata !DIExpression()), !dbg !6752
  call void @llvm.dbg.value(metadata i8 %1, metadata !6739, metadata !DIExpression()), !dbg !6752
  call void @llvm.dbg.value(metadata i8* %2, metadata !6740, metadata !DIExpression()), !dbg !6752
  call void @llvm.dbg.value(metadata i32 %3, metadata !6741, metadata !DIExpression()), !dbg !6752
  %6 = bitcast %struct.i2c_transaction_size_t* %5 to i8*, !dbg !6753
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %6) #23, !dbg !6753
  call void @llvm.dbg.declare(metadata %struct.i2c_transaction_size_t* %5, metadata !6743, metadata !DIExpression()), !dbg !6754
  %7 = icmp eq i32 %0, 0, !dbg !6755
  br i1 %7, label %8, label %32, !dbg !6757

8:                                                ; preds = %4
  %9 = icmp eq i8* %2, null, !dbg !6758
  %10 = icmp ugt i32 %3, 8
  %11 = or i1 %9, %10, !dbg !6760
  br i1 %11, label %32, label %12, !dbg !6760

12:                                               ; preds = %8
  %13 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @g_i2c_pdn_table, i32 0, i32 3), align 4, !dbg !6761
  %14 = tail call i32 @hal_clock_enable(i32 noundef %13) #21, !dbg !6762
  %15 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** getelementptr inbounds ([4 x %struct.I2C_REGISTER_T*], [4 x %struct.I2C_REGISTER_T*]* @i2c_master_register, i32 0, i32 3), align 4, !dbg !6763
  %16 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %15, i32 0, i32 4, !dbg !6763
  store volatile i16 0, i16* %16, align 2, !dbg !6763
  %17 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %5, i32 0, i32 0, !dbg !6764
  store i32 %3, i32* %17, align 4, !dbg !6765
  %18 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %5, i32 0, i32 1, !dbg !6766
  store i32 0, i32* %18, align 4, !dbg !6767
  %19 = shl i8 %1, 1, !dbg !6768
  call void @i2c_config_hardware(i32 noundef 3, i32 noundef 0, i8 noundef zeroext %19, %struct.i2c_transaction_size_t* noundef nonnull %5) #21, !dbg !6769
  call void @i2c_write_fifo(i32 noundef 3, i8* noundef nonnull %2, i32 noundef %3) #21, !dbg !6770
  %20 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** getelementptr inbounds ([4 x %struct.I2C_REGISTER_T*], [4 x %struct.I2C_REGISTER_T*]* @i2c_master_register, i32 0, i32 3), align 4, !dbg !6771
  %21 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %20, i32 0, i32 18, !dbg !6771
  store volatile i16 1, i16* %21, align 2, !dbg !6771
  %22 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %20, i32 0, i32 6
  br label %23, !dbg !6772

23:                                               ; preds = %23, %12
  %24 = load volatile i16, i16* %22, align 2, !dbg !6773
  %25 = icmp eq i16 %24, 0, !dbg !6774
  br i1 %25, label %23, label %26, !dbg !6772, !llvm.loop !6775

26:                                               ; preds = %23
  %27 = call i32 @i2c_get_transaction_status(i32 noundef 3) #21, !dbg !6777
  call void @llvm.dbg.value(metadata i32 %27, metadata !6742, metadata !DIExpression()), !dbg !6752
  %28 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @g_i2c_pdn_table, i32 0, i32 3), align 4, !dbg !6778
  %29 = call i32 @hal_clock_disable(i32 noundef %28) #21, !dbg !6779
  %30 = icmp eq i32 %27, 0, !dbg !6780
  br i1 %30, label %32, label %31, !dbg !6782

31:                                               ; preds = %26
  call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @__FUNCTION__.pmic_i2c_send_polling, i32 0, i32 0), i32 noundef 126, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.103, i32 0, i32 0), i32 noundef %27) #21, !dbg !6783
  br label %32, !dbg !6785

32:                                               ; preds = %26, %8, %4, %31
  %33 = phi i32 [ %27, %31 ], [ -102, %4 ], [ -101, %8 ], [ 0, %26 ], !dbg !6752
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %6) #23, !dbg !6786
  ret i32 %33, !dbg !6786
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pmic_i2c_receive_polling(i32 noundef %0, i8 noundef zeroext %1, i8* noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !6787 {
  %5 = alloca %struct.i2c_transaction_size_t, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6791, metadata !DIExpression()), !dbg !6797
  call void @llvm.dbg.value(metadata i8 %1, metadata !6792, metadata !DIExpression()), !dbg !6797
  call void @llvm.dbg.value(metadata i8* %2, metadata !6793, metadata !DIExpression()), !dbg !6797
  call void @llvm.dbg.value(metadata i32 %3, metadata !6794, metadata !DIExpression()), !dbg !6797
  %6 = bitcast %struct.i2c_transaction_size_t* %5 to i8*, !dbg !6798
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %6) #23, !dbg !6798
  call void @llvm.dbg.declare(metadata %struct.i2c_transaction_size_t* %5, metadata !6796, metadata !DIExpression()), !dbg !6799
  %7 = icmp eq i32 %0, 0, !dbg !6800
  br i1 %7, label %8, label %35, !dbg !6802

8:                                                ; preds = %4
  %9 = icmp eq i8* %2, null, !dbg !6803
  %10 = icmp ugt i32 %3, 8
  %11 = or i1 %9, %10, !dbg !6805
  br i1 %11, label %35, label %12, !dbg !6805

12:                                               ; preds = %8
  %13 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @g_i2c_pdn_table, i32 0, i32 3), align 4, !dbg !6806
  %14 = tail call i32 @hal_clock_enable(i32 noundef %13) #21, !dbg !6807
  %15 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** getelementptr inbounds ([4 x %struct.I2C_REGISTER_T*], [4 x %struct.I2C_REGISTER_T*]* @i2c_master_register, i32 0, i32 3), align 4, !dbg !6808
  %16 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %15, i32 0, i32 4, !dbg !6808
  store volatile i16 0, i16* %16, align 2, !dbg !6808
  %17 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %5, i32 0, i32 0, !dbg !6809
  store i32 0, i32* %17, align 4, !dbg !6810
  %18 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %5, i32 0, i32 1, !dbg !6811
  store i32 %3, i32* %18, align 4, !dbg !6812
  %19 = shl i8 %1, 1, !dbg !6813
  %20 = or i8 %19, 1, !dbg !6813
  call void @i2c_config_hardware(i32 noundef 3, i32 noundef 2, i8 noundef zeroext %20, %struct.i2c_transaction_size_t* noundef nonnull %5) #21, !dbg !6814
  %21 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** getelementptr inbounds ([4 x %struct.I2C_REGISTER_T*], [4 x %struct.I2C_REGISTER_T*]* @i2c_master_register, i32 0, i32 3), align 4, !dbg !6815
  %22 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %21, i32 0, i32 18, !dbg !6815
  store volatile i16 1, i16* %22, align 2, !dbg !6815
  %23 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %21, i32 0, i32 6
  br label %24, !dbg !6816

24:                                               ; preds = %24, %12
  %25 = load volatile i16, i16* %23, align 2, !dbg !6817
  %26 = icmp eq i16 %25, 0, !dbg !6818
  br i1 %26, label %24, label %27, !dbg !6816, !llvm.loop !6819

27:                                               ; preds = %24
  %28 = call i32 @i2c_get_transaction_status(i32 noundef 3) #21, !dbg !6821
  call void @llvm.dbg.value(metadata i32 %28, metadata !6795, metadata !DIExpression()), !dbg !6797
  %29 = icmp eq i32 %28, 0, !dbg !6822
  br i1 %29, label %30, label %31, !dbg !6824

30:                                               ; preds = %27
  call void @i2c_read_fifo(i32 noundef 3, i8* noundef %2, i32 noundef %3) #21, !dbg !6825
  br label %31, !dbg !6827

31:                                               ; preds = %27, %30
  %32 = phi i32 [ 0, %30 ], [ %28, %27 ]
  %33 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @g_i2c_pdn_table, i32 0, i32 3), align 4, !dbg !6828
  %34 = call i32 @hal_clock_disable(i32 noundef %33) #21, !dbg !6828
  br label %35, !dbg !6829

35:                                               ; preds = %31, %8, %4
  %36 = phi i32 [ -102, %4 ], [ -101, %8 ], [ %32, %31 ], !dbg !6797
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %6) #23, !dbg !6829
  ret i32 %36, !dbg !6829
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pmic_i2c_send_to_receive_polling(i32 noundef %0, %struct.pmic_i2c_send_to_receive_config_t* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !6830 {
  %3 = alloca %struct.i2c_transaction_size_t, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6843, metadata !DIExpression()), !dbg !6847
  call void @llvm.dbg.value(metadata %struct.pmic_i2c_send_to_receive_config_t* %1, metadata !6844, metadata !DIExpression()), !dbg !6847
  %4 = bitcast %struct.i2c_transaction_size_t* %3 to i8*, !dbg !6848
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %4) #23, !dbg !6848
  call void @llvm.dbg.declare(metadata %struct.i2c_transaction_size_t* %3, metadata !6846, metadata !DIExpression()), !dbg !6849
  %5 = icmp eq i32 %0, 0, !dbg !6850
  br i1 %5, label %6, label %53, !dbg !6852

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.pmic_i2c_send_to_receive_config_t, %struct.pmic_i2c_send_to_receive_config_t* %1, i32 0, i32 1, !dbg !6853
  %8 = load i8*, i8** %7, align 4, !dbg !6853
  %9 = icmp eq i8* %8, null, !dbg !6855
  br i1 %9, label %53, label %10, !dbg !6856

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.pmic_i2c_send_to_receive_config_t, %struct.pmic_i2c_send_to_receive_config_t* %1, i32 0, i32 3, !dbg !6857
  %12 = load i8*, i8** %11, align 4, !dbg !6857
  %13 = icmp eq i8* %12, null, !dbg !6858
  br i1 %13, label %53, label %14, !dbg !6859

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.pmic_i2c_send_to_receive_config_t, %struct.pmic_i2c_send_to_receive_config_t* %1, i32 0, i32 2, !dbg !6860
  %16 = load i32, i32* %15, align 4, !dbg !6860
  %17 = icmp ugt i32 %16, 8, !dbg !6862
  br i1 %17, label %53, label %18, !dbg !6863

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.pmic_i2c_send_to_receive_config_t, %struct.pmic_i2c_send_to_receive_config_t* %1, i32 0, i32 4, !dbg !6864
  %20 = load i32, i32* %19, align 4, !dbg !6864
  %21 = icmp ugt i32 %20, 8, !dbg !6865
  br i1 %21, label %53, label %22, !dbg !6866

22:                                               ; preds = %18
  %23 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @g_i2c_pdn_table, i32 0, i32 3), align 4, !dbg !6867
  %24 = tail call i32 @hal_clock_enable(i32 noundef %23) #21, !dbg !6868
  %25 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** getelementptr inbounds ([4 x %struct.I2C_REGISTER_T*], [4 x %struct.I2C_REGISTER_T*]* @i2c_master_register, i32 0, i32 3), align 4, !dbg !6869
  %26 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %25, i32 0, i32 4, !dbg !6869
  store volatile i16 0, i16* %26, align 2, !dbg !6869
  %27 = load i32, i32* %15, align 4, !dbg !6870
  %28 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 0, !dbg !6871
  store i32 %27, i32* %28, align 4, !dbg !6872
  %29 = load i32, i32* %19, align 4, !dbg !6873
  %30 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 1, !dbg !6874
  store i32 %29, i32* %30, align 4, !dbg !6875
  %31 = getelementptr inbounds %struct.pmic_i2c_send_to_receive_config_t, %struct.pmic_i2c_send_to_receive_config_t* %1, i32 0, i32 0, !dbg !6876
  %32 = load i8, i8* %31, align 4, !dbg !6876
  %33 = shl i8 %32, 1, !dbg !6876
  call void @i2c_config_hardware(i32 noundef 3, i32 noundef 4, i8 noundef zeroext %33, %struct.i2c_transaction_size_t* noundef nonnull %3) #21, !dbg !6877
  %34 = load i8*, i8** %7, align 4, !dbg !6878
  %35 = load i32, i32* %15, align 4, !dbg !6879
  call void @i2c_write_fifo(i32 noundef 3, i8* noundef %34, i32 noundef %35) #21, !dbg !6880
  %36 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** getelementptr inbounds ([4 x %struct.I2C_REGISTER_T*], [4 x %struct.I2C_REGISTER_T*]* @i2c_master_register, i32 0, i32 3), align 4, !dbg !6881
  %37 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %36, i32 0, i32 18, !dbg !6881
  store volatile i16 1, i16* %37, align 2, !dbg !6881
  %38 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %36, i32 0, i32 6
  br label %39, !dbg !6882

39:                                               ; preds = %39, %22
  %40 = load volatile i16, i16* %38, align 2, !dbg !6883
  %41 = icmp eq i16 %40, 0, !dbg !6884
  br i1 %41, label %39, label %42, !dbg !6882, !llvm.loop !6885

42:                                               ; preds = %39
  %43 = call i32 @i2c_get_transaction_status(i32 noundef 3) #21, !dbg !6887
  call void @llvm.dbg.value(metadata i32 %43, metadata !6845, metadata !DIExpression()), !dbg !6847
  %44 = icmp eq i32 %43, 0, !dbg !6888
  br i1 %44, label %46, label %45, !dbg !6890

45:                                               ; preds = %42
  call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @__FUNCTION__.pmic_i2c_send_to_receive_polling, i32 0, i32 0), i32 noundef 227, i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1.104, i32 0, i32 0), i32 noundef %43) #21, !dbg !6891
  br label %49, !dbg !6893

46:                                               ; preds = %42
  %47 = load i8*, i8** %11, align 4, !dbg !6894
  %48 = load i32, i32* %19, align 4, !dbg !6896
  call void @i2c_read_fifo(i32 noundef 3, i8* noundef %47, i32 noundef %48) #21, !dbg !6897
  br label %49, !dbg !6898

49:                                               ; preds = %45, %46
  %50 = phi i32 [ 0, %46 ], [ %43, %45 ]
  %51 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @g_i2c_pdn_table, i32 0, i32 3), align 4, !dbg !6899
  %52 = call i32 @hal_clock_disable(i32 noundef %51) #21, !dbg !6899
  br label %53, !dbg !6900

53:                                               ; preds = %49, %14, %18, %6, %10, %2
  %54 = phi i32 [ -102, %2 ], [ -101, %10 ], [ -101, %6 ], [ -101, %18 ], [ -101, %14 ], [ %50, %49 ], !dbg !6847
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %4) #23, !dbg !6900
  ret i32 %54, !dbg !6900
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_init() local_unnamed_addr #3 !dbg !1053 {
  %1 = load i1, i1* @hal_nvic_init.priority_set, align 4, !dbg !6901
  br i1 %1, label %9, label %2, !dbg !6903

2:                                                ; preds = %0, %2
  %3 = phi i32 [ %6, %2 ], [ 0, %0 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !1145, metadata !DIExpression()), !dbg !6904
  %4 = getelementptr inbounds [64 x i32], [64 x i32]* @defualt_irq_priority, i32 0, i32 %3, !dbg !6905
  %5 = load i32, i32* %4, align 4, !dbg !6905
  tail call fastcc void @NVIC_SetPriority(i32 noundef %3, i32 noundef %5) #22, !dbg !6910
  %6 = add nuw nsw i32 %3, 1, !dbg !6911
  call void @llvm.dbg.value(metadata i32 %6, metadata !1145, metadata !DIExpression()), !dbg !6904
  %7 = icmp eq i32 %6, 64, !dbg !6912
  br i1 %7, label %8, label %2, !dbg !6913, !llvm.loop !6914

8:                                                ; preds = %2
  store i1 true, i1* @hal_nvic_init.priority_set, align 4, !dbg !6916
  br label %9, !dbg !6917

9:                                                ; preds = %8, %0
  ret i32 0, !dbg !6918
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !6919 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6923, metadata !DIExpression()), !dbg !6925
  call void @llvm.dbg.value(metadata i32 %1, metadata !6924, metadata !DIExpression()), !dbg !6925
  %3 = trunc i32 %1 to i8, !dbg !6926
  %4 = shl i8 %3, 2, !dbg !6926
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6929
  store volatile i8 %4, i8* %5, align 1, !dbg !6930
  ret void, !dbg !6931
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_enable_irq(i32 noundef %0) local_unnamed_addr #3 !dbg !6932 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6936, metadata !DIExpression()), !dbg !6938
  call void @llvm.dbg.value(metadata i32 -1, metadata !6937, metadata !DIExpression()), !dbg !6938
  %2 = icmp ugt i32 %0, 63, !dbg !6939
  br i1 %2, label %4, label %3, !dbg !6939

3:                                                ; preds = %1
  tail call fastcc void @NVIC_EnableIRQ(i32 noundef %0) #22, !dbg !6941
  call void @llvm.dbg.value(metadata i32 0, metadata !6937, metadata !DIExpression()), !dbg !6938
  br label %4, !dbg !6943

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !6938
  ret i32 %5, !dbg !6944
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #3 !dbg !6945 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6949, metadata !DIExpression()), !dbg !6950
  %2 = and i32 %0, 31, !dbg !6951
  %3 = shl nuw i32 1, %2, !dbg !6952
  %4 = lshr i32 %0, 5, !dbg !6953
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %4, !dbg !6954
  store volatile i32 %3, i32* %5, align 4, !dbg !6955
  ret void, !dbg !6956
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_disable_irq(i32 noundef %0) local_unnamed_addr #3 !dbg !6957 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6959, metadata !DIExpression()), !dbg !6961
  call void @llvm.dbg.value(metadata i32 -1, metadata !6960, metadata !DIExpression()), !dbg !6961
  %2 = icmp ugt i32 %0, 63, !dbg !6962
  br i1 %2, label %4, label %3, !dbg !6962

3:                                                ; preds = %1
  tail call fastcc void @NVIC_DisableIRQ(i32 noundef %0) #22, !dbg !6964
  call void @llvm.dbg.value(metadata i32 0, metadata !6960, metadata !DIExpression()), !dbg !6961
  br label %4, !dbg !6966

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !6961
  ret i32 %5, !dbg !6967
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #3 !dbg !6968 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6970, metadata !DIExpression()), !dbg !6971
  %2 = and i32 %0, 31, !dbg !6972
  %3 = shl nuw i32 1, %2, !dbg !6973
  %4 = lshr i32 %0, 5, !dbg !6974
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %4, !dbg !6975
  store volatile i32 %3, i32* %5, align 4, !dbg !6976
  ret void, !dbg !6977
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_nvic_get_pending_irq(i32 noundef %0) local_unnamed_addr #10 !dbg !6978 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6982, metadata !DIExpression()), !dbg !6984
  call void @llvm.dbg.value(metadata i32 255, metadata !6983, metadata !DIExpression()), !dbg !6984
  %2 = icmp ugt i32 %0, 63, !dbg !6985
  br i1 %2, label %5, label %3, !dbg !6985

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @NVIC_GetPendingIRQ(i32 noundef %0) #22, !dbg !6987
  call void @llvm.dbg.value(metadata i32 %4, metadata !6983, metadata !DIExpression()), !dbg !6984
  br label %5, !dbg !6989

5:                                                ; preds = %1, %3
  %6 = phi i32 [ %4, %3 ], [ 255, %1 ], !dbg !6984
  ret i32 %6, !dbg !6990
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @NVIC_GetPendingIRQ(i32 noundef %0) unnamed_addr #10 !dbg !6991 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6995, metadata !DIExpression()), !dbg !6996
  %2 = lshr i32 %0, 5, !dbg !6997
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813056 to [8 x i32]*), i32 0, i32 %2, !dbg !6998
  %4 = load volatile i32, i32* %3, align 4, !dbg !6998
  %5 = and i32 %0, 31, !dbg !6999
  %6 = lshr i32 %4, %5, !dbg !7000
  %7 = and i32 %6, 1, !dbg !7000
  ret i32 %7, !dbg !7001
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_set_pending_irq(i32 noundef %0) local_unnamed_addr #3 !dbg !7002 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7004, metadata !DIExpression()), !dbg !7006
  call void @llvm.dbg.value(metadata i32 -1, metadata !7005, metadata !DIExpression()), !dbg !7006
  %2 = icmp ugt i32 %0, 63, !dbg !7007
  br i1 %2, label %4, label %3, !dbg !7007

3:                                                ; preds = %1
  tail call fastcc void @NVIC_SetPendingIRQ(i32 noundef %0) #22, !dbg !7009
  call void @llvm.dbg.value(metadata i32 0, metadata !7005, metadata !DIExpression()), !dbg !7006
  br label %4, !dbg !7011

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !7006
  ret i32 %5, !dbg !7012
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_SetPendingIRQ(i32 noundef %0) unnamed_addr #3 !dbg !7013 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7015, metadata !DIExpression()), !dbg !7016
  %2 = and i32 %0, 31, !dbg !7017
  %3 = shl nuw i32 1, %2, !dbg !7018
  %4 = lshr i32 %0, 5, !dbg !7019
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813056 to [8 x i32]*), i32 0, i32 %4, !dbg !7020
  store volatile i32 %3, i32* %5, align 4, !dbg !7021
  ret void, !dbg !7022
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_clear_pending_irq(i32 noundef %0) local_unnamed_addr #3 !dbg !7023 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7025, metadata !DIExpression()), !dbg !7027
  call void @llvm.dbg.value(metadata i32 -1, metadata !7026, metadata !DIExpression()), !dbg !7027
  %2 = icmp ugt i32 %0, 63, !dbg !7028
  br i1 %2, label %4, label %3, !dbg !7028

3:                                                ; preds = %1
  tail call fastcc void @NVIC_ClearPendingIRQ(i32 noundef %0) #22, !dbg !7030
  call void @llvm.dbg.value(metadata i32 0, metadata !7026, metadata !DIExpression()), !dbg !7027
  br label %4, !dbg !7032

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !7027
  ret i32 %5, !dbg !7033
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_ClearPendingIRQ(i32 noundef %0) unnamed_addr #3 !dbg !7034 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7036, metadata !DIExpression()), !dbg !7037
  %2 = and i32 %0, 31, !dbg !7038
  %3 = shl nuw i32 1, %2, !dbg !7039
  %4 = lshr i32 %0, 5, !dbg !7040
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536812928 to [8 x i32]*), i32 0, i32 %4, !dbg !7041
  store volatile i32 %3, i32* %5, align 4, !dbg !7042
  ret void, !dbg !7043
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_set_priority(i32 noundef %0, i32 noundef %1) local_unnamed_addr #3 !dbg !7044 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7048, metadata !DIExpression()), !dbg !7051
  call void @llvm.dbg.value(metadata i32 %1, metadata !7049, metadata !DIExpression()), !dbg !7051
  call void @llvm.dbg.value(metadata i32 -1, metadata !7050, metadata !DIExpression()), !dbg !7051
  %3 = icmp ugt i32 %0, 63, !dbg !7052
  br i1 %3, label %5, label %4, !dbg !7052

4:                                                ; preds = %2
  tail call fastcc void @NVIC_SetPriority(i32 noundef %0, i32 noundef %1) #22, !dbg !7054
  call void @llvm.dbg.value(metadata i32 0, metadata !7050, metadata !DIExpression()), !dbg !7051
  br label %5, !dbg !7056

5:                                                ; preds = %2, %4
  %6 = phi i32 [ 0, %4 ], [ -3, %2 ], !dbg !7051
  ret i32 %6, !dbg !7057
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_nvic_get_priority(i32 noundef %0) local_unnamed_addr #10 !dbg !7058 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7060, metadata !DIExpression()), !dbg !7062
  call void @llvm.dbg.value(metadata i32 68, metadata !7061, metadata !DIExpression()), !dbg !7062
  %2 = icmp ugt i32 %0, 63, !dbg !7063
  br i1 %2, label %5, label %3, !dbg !7063

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @NVIC_GetPriority(i32 noundef %0) #22, !dbg !7065
  call void @llvm.dbg.value(metadata i32 %4, metadata !7061, metadata !DIExpression()), !dbg !7062
  br label %5, !dbg !7067

5:                                                ; preds = %1, %3
  %6 = phi i32 [ %4, %3 ], [ 68, %1 ], !dbg !7062
  ret i32 %6, !dbg !7068
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @NVIC_GetPriority(i32 noundef %0) unnamed_addr #10 !dbg !7069 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7071, metadata !DIExpression()), !dbg !7072
  %2 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7073
  %3 = load volatile i8, i8* %2, align 1, !dbg !7073
  %4 = lshr i8 %3, 2, !dbg !7076
  %5 = zext i8 %4 to i32, !dbg !7076
  ret i32 %5, !dbg !7077
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @isrC_main() local_unnamed_addr #0 section ".tcm_code" !dbg !7078 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !7080, metadata !DIExpression()), !dbg !7082
  tail call void @Flash_ReturnReady() #21, !dbg !7083
  %1 = tail call fastcc i32 @get_current_irq() #22, !dbg !7084
  call void @llvm.dbg.value(metadata i32 %1, metadata !7081, metadata !DIExpression()), !dbg !7082
  %2 = icmp ugt i32 %1, 63, !dbg !7085
  br i1 %2, label %12, label %3, !dbg !7085

3:                                                ; preds = %0
  %4 = getelementptr inbounds [64 x %struct.nvic_function_t], [64 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %1, i32 0, !dbg !7087
  %5 = load void (i32)*, void (i32)** %4, align 4, !dbg !7087
  %6 = icmp eq void (i32)* %5, null, !dbg !7089
  br i1 %6, label %7, label %8, !dbg !7090

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 -4, metadata !7080, metadata !DIExpression()), !dbg !7082
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @__FUNCTION__.isrC_main, i32 0, i32 0), i32 noundef 261, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.111, i32 0, i32 0)) #21, !dbg !7091
  br label %12, !dbg !7093

8:                                                ; preds = %3
  %9 = tail call fastcc i32 @get_pending_irq() #22, !dbg !7094
  %10 = getelementptr inbounds [64 x %struct.nvic_function_t], [64 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %1, i32 1, !dbg !7096
  store i32 %9, i32* %10, align 4, !dbg !7097
  %11 = load void (i32)*, void (i32)** %4, align 4, !dbg !7098
  tail call void %11(i32 noundef %1) #21, !dbg !7099
  call void @llvm.dbg.value(metadata i32 0, metadata !7080, metadata !DIExpression()), !dbg !7082
  br label %12, !dbg !7100

12:                                               ; preds = %0, %8, %7
  %13 = phi i32 [ -4, %7 ], [ 0, %8 ], [ -3, %0 ], !dbg !7082
  ret i32 %13, !dbg !7101
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @get_current_irq() unnamed_addr #10 !dbg !7102 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7105
  %2 = and i32 %1, 511, !dbg !7106
  call void @llvm.dbg.value(metadata i32 %2, metadata !7104, metadata !DIExpression()), !dbg !7107
  %3 = add nsw i32 %2, -16, !dbg !7108
  ret i32 %3, !dbg !7109
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @get_pending_irq() unnamed_addr #10 !dbg !7110 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7111
  %2 = lshr i32 %1, 22, !dbg !7112
  %3 = and i32 %2, 1, !dbg !7112
  ret i32 %3, !dbg !7113
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_nvic_register_isr_handler(i32 noundef %0, void (i32)* noundef %1) local_unnamed_addr #0 !dbg !7114 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7119, metadata !DIExpression()), !dbg !7122
  call void @llvm.dbg.value(metadata void (i32)* %1, metadata !7120, metadata !DIExpression()), !dbg !7122
  %3 = icmp ugt i32 %0, 63, !dbg !7123
  %4 = icmp eq void (i32)* %1, null
  %5 = or i1 %3, %4, !dbg !7123
  br i1 %5, label %10, label %6, !dbg !7123

6:                                                ; preds = %2
  %7 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !7125
  call void @llvm.dbg.value(metadata i32 %7, metadata !7121, metadata !DIExpression()), !dbg !7122
  tail call fastcc void @NVIC_ClearPendingIRQ(i32 noundef %0) #22, !dbg !7126
  %8 = getelementptr inbounds [64 x %struct.nvic_function_t], [64 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %0, i32 0, !dbg !7127
  store void (i32)* %1, void (i32)** %8, align 4, !dbg !7128
  %9 = getelementptr inbounds [64 x %struct.nvic_function_t], [64 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %0, i32 1, !dbg !7129
  store i32 0, i32* %9, align 4, !dbg !7130
  tail call void @restore_interrupt_mask(i32 noundef %7) #21, !dbg !7131
  br label %10, !dbg !7132

10:                                               ; preds = %2, %6
  %11 = phi i32 [ 0, %6 ], [ -2, %2 ], !dbg !7122
  ret i32 %11, !dbg !7133
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_nvic_save_and_set_interrupt_mask(i32* nocapture noundef writeonly %0) local_unnamed_addr #0 !dbg !7134 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !7138, metadata !DIExpression()), !dbg !7139
  %2 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !7140
  store i32 %2, i32* %0, align 4, !dbg !7141
  ret i32 0, !dbg !7142
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_nvic_restore_interrupt_mask(i32 noundef %0) local_unnamed_addr #0 !dbg !7143 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7147, metadata !DIExpression()), !dbg !7148
  tail call void @restore_interrupt_mask(i32 noundef %0) #21, !dbg !7149
  ret i32 0, !dbg !7150
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @save_and_set_interrupt_mask() local_unnamed_addr #0 section ".tcm_code" !dbg !7151 {
  %1 = tail call i32 asm sideeffect "MRS $0, basepri_max", "=r"() #23, !dbg !7155, !srcloc !7161
  call void @llvm.dbg.value(metadata i32 %1, metadata !7159, metadata !DIExpression()) #23, !dbg !7162
  call void @llvm.dbg.value(metadata i32 %1, metadata !7153, metadata !DIExpression()), !dbg !7163
  call void @llvm.dbg.value(metadata i32 1, metadata !7154, metadata !DIExpression()), !dbg !7163
  call void @llvm.dbg.value(metadata i32 4, metadata !7164, metadata !DIExpression()) #23, !dbg !7169
  tail call void asm sideeffect "MSR basepri, $0", "r,~{memory}"(i32 4) #23, !dbg !7171, !srcloc !7172
  tail call void asm sideeffect "dmb", ""() #23, !dbg !7173, !srcloc !7177
  tail call void asm sideeffect "isb", ""() #23, !dbg !7178, !srcloc !7181
  ret i32 %1, !dbg !7182
}

; Function Attrs: noinline nounwind optsize
define dso_local void @restore_interrupt_mask(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !7183 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7185, metadata !DIExpression()), !dbg !7186
  call void @llvm.dbg.value(metadata i32 %0, metadata !7164, metadata !DIExpression()) #23, !dbg !7187
  tail call void asm sideeffect "MSR basepri, $0", "r,~{memory}"(i32 %0) #23, !dbg !7189, !srcloc !7172
  tail call void asm sideeffect "dmb", ""() #23, !dbg !7190, !srcloc !7177
  tail call void asm sideeffect "isb", ""() #23, !dbg !7192, !srcloc !7181
  ret void, !dbg !7194
}

; Function Attrs: noinline nounwind optsize
define dso_local void @nvic_mask_all_interrupt() local_unnamed_addr #0 !dbg !7195 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #22, !dbg !7199
  call void @llvm.dbg.value(metadata i32 %1, metadata !7198, metadata !DIExpression()), !dbg !7200
  call void @llvm.dbg.value(metadata i32 0, metadata !7197, metadata !DIExpression()), !dbg !7200
  br label %2, !dbg !7201

2:                                                ; preds = %0, %2
  %3 = phi i32 [ 0, %0 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !7197, metadata !DIExpression()), !dbg !7200
  tail call fastcc void @NVIC_DisableIRQ.118(i32 noundef %3) #22, !dbg !7203
  %4 = add nuw nsw i32 %3, 1, !dbg !7206
  call void @llvm.dbg.value(metadata i32 %4, metadata !7197, metadata !DIExpression()), !dbg !7200
  %5 = icmp eq i32 %4, 64, !dbg !7207
  br i1 %5, label %6, label %2, !dbg !7201, !llvm.loop !7208

6:                                                ; preds = %2
  tail call void @restore_interrupt_mask(i32 noundef %1) #22, !dbg !7210
  ret void, !dbg !7211
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_DisableIRQ.118(i32 noundef %0) unnamed_addr #3 !dbg !7212 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7214, metadata !DIExpression()), !dbg !7215
  %2 = and i32 %0, 31, !dbg !7216
  %3 = shl nuw i32 1, %2, !dbg !7217
  %4 = lshr i32 %0, 5, !dbg !7218
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %4, !dbg !7219
  store volatile i32 %3, i32* %5, align 4, !dbg !7220
  ret void, !dbg !7221
}

; Function Attrs: noinline nounwind optsize
define dso_local void @nvic_unmask_all_interrupt() local_unnamed_addr #0 !dbg !7222 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #22, !dbg !7226
  call void @llvm.dbg.value(metadata i32 %1, metadata !7225, metadata !DIExpression()), !dbg !7227
  call void @llvm.dbg.value(metadata i32 0, metadata !7224, metadata !DIExpression()), !dbg !7227
  br label %2, !dbg !7228

2:                                                ; preds = %0, %2
  %3 = phi i32 [ 0, %0 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !7224, metadata !DIExpression()), !dbg !7227
  tail call fastcc void @NVIC_EnableIRQ.119(i32 noundef %3) #22, !dbg !7230
  %4 = add nuw nsw i32 %3, 1, !dbg !7233
  call void @llvm.dbg.value(metadata i32 %4, metadata !7224, metadata !DIExpression()), !dbg !7227
  %5 = icmp eq i32 %4, 64, !dbg !7234
  br i1 %5, label %6, label %2, !dbg !7228, !llvm.loop !7235

6:                                                ; preds = %2
  tail call void @restore_interrupt_mask(i32 noundef %1) #22, !dbg !7237
  ret void, !dbg !7238
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_EnableIRQ.119(i32 noundef %0) unnamed_addr #3 !dbg !7239 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7241, metadata !DIExpression()), !dbg !7242
  %2 = and i32 %0, 31, !dbg !7243
  %3 = shl nuw i32 1, %2, !dbg !7244
  %4 = lshr i32 %0, 5, !dbg !7245
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %4, !dbg !7246
  store volatile i32 %3, i32* %5, align 4, !dbg !7247
  ret void, !dbg !7248
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @nvic_clear_all_pending_interrupt() local_unnamed_addr #3 !dbg !7249 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7251, metadata !DIExpression()), !dbg !7252
  br label %1, !dbg !7253

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !7251, metadata !DIExpression()), !dbg !7252
  tail call fastcc void @NVIC_ClearPendingIRQ.120(i32 noundef %2) #22, !dbg !7255
  %3 = add nuw nsw i32 %2, 1, !dbg !7258
  call void @llvm.dbg.value(metadata i32 %3, metadata !7251, metadata !DIExpression()), !dbg !7252
  %4 = icmp eq i32 %3, 64, !dbg !7259
  br i1 %4, label %5, label %1, !dbg !7253, !llvm.loop !7260

5:                                                ; preds = %1
  ret void, !dbg !7262
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_ClearPendingIRQ.120(i32 noundef %0) unnamed_addr #3 !dbg !7263 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7265, metadata !DIExpression()), !dbg !7266
  %2 = and i32 %0, 31, !dbg !7267
  %3 = shl nuw i32 1, %2, !dbg !7268
  %4 = lshr i32 %0, 5, !dbg !7269
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536812928 to [8 x i32]*), i32 0, i32 %4, !dbg !7270
  store volatile i32 %3, i32* %5, align 4, !dbg !7271
  ret void, !dbg !7272
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @nvic_irq_software_trigger(i32 noundef %0) local_unnamed_addr #0 !dbg !7273 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7275, metadata !DIExpression()), !dbg !7276
  %2 = icmp ugt i32 %0, 63, !dbg !7277
  br i1 %2, label %4, label %3, !dbg !7277

3:                                                ; preds = %1
  tail call fastcc void @software_trigger_irq(i32 noundef %0) #22, !dbg !7279
  br label %4, !dbg !7280

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -2, %1 ], !dbg !7276
  ret i32 %5, !dbg !7281
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @software_trigger_irq(i32 noundef %0) unnamed_addr #0 !dbg !7282 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7284, metadata !DIExpression()), !dbg !7285
  %2 = and i32 %0, 511, !dbg !7286
  store volatile i32 %2, i32* inttoptr (i32 -536809728 to i32*), align 256, !dbg !7287
  tail call void asm sideeffect "dsb", ""() #23, !dbg !7288, !srcloc !7291
  ret void, !dbg !7292
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_nvic_query_exception_number() local_unnamed_addr #10 !dbg !7293 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7294
  %2 = and i32 %1, 511, !dbg !7295
  ret i32 %2, !dbg !7296
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_BlankCheck(i8* noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".ram_code" !dbg !7297 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7301, metadata !DIExpression()), !dbg !7400
  call void @llvm.dbg.value(metadata i32 %1, metadata !7302, metadata !DIExpression()), !dbg !7400
  call void @llvm.dbg.value(metadata i8* %0, metadata !7303, metadata !DIExpression()), !dbg !7400
  %3 = tail call i32 @BlockSize(i8* noundef %0, i32 noundef %1) #21, !dbg !7401
  call void @llvm.dbg.value(metadata i32 %3, metadata !7398, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shr, DW_OP_stack_value)), !dbg !7400
  call void @llvm.dbg.value(metadata i32 0, metadata !7397, metadata !DIExpression()), !dbg !7400
  call void @llvm.dbg.value(metadata i32* undef, metadata !7399, metadata !DIExpression()), !dbg !7400
  call void @llvm.dbg.value(metadata i32 0, metadata !7397, metadata !DIExpression()), !dbg !7400
  %4 = icmp ult i32 %3, 4, !dbg !7402
  br i1 %4, label %20, label %5, !dbg !7405

5:                                                ; preds = %2
  %6 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !7406
  %7 = bitcast i8* %6 to i32**, !dbg !7406
  %8 = load i32*, i32** %7, align 4, !dbg !7406
  call void @llvm.dbg.value(metadata i32* %8, metadata !7399, metadata !DIExpression()), !dbg !7400
  %9 = lshr i32 %3, 2, !dbg !7407
  call void @llvm.dbg.value(metadata i32 %9, metadata !7398, metadata !DIExpression()), !dbg !7400
  br label %10, !dbg !7405

10:                                               ; preds = %5, %16
  %11 = phi i32* [ %18, %16 ], [ %8, %5 ]
  %12 = phi i32 [ %17, %16 ], [ 0, %5 ]
  call void @llvm.dbg.value(metadata i32* %11, metadata !7399, metadata !DIExpression()), !dbg !7400
  call void @llvm.dbg.value(metadata i32 %12, metadata !7397, metadata !DIExpression()), !dbg !7400
  %13 = load i32, i32* %11, align 4, !dbg !7408
  %14 = icmp eq i32 %13, -1, !dbg !7411
  br i1 %14, label %16, label %15, !dbg !7412

15:                                               ; preds = %10
  tail call void @Flash_ReturnReady() #21, !dbg !7413
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.121, i32 0, i32 0), i32 noundef 81, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.SFI_BlankCheck, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.122, i32 0, i32 0)) #24, !dbg !7413
  unreachable, !dbg !7413

16:                                               ; preds = %10
  %17 = add nuw nsw i32 %12, 1, !dbg !7418
  call void @llvm.dbg.value(metadata i32 %17, metadata !7397, metadata !DIExpression()), !dbg !7400
  %18 = getelementptr inbounds i32, i32* %11, i32 1, !dbg !7419
  call void @llvm.dbg.value(metadata i32* %18, metadata !7399, metadata !DIExpression()), !dbg !7400
  %19 = icmp eq i32 %17, %9, !dbg !7402
  br i1 %19, label %20, label %10, !dbg !7405, !llvm.loop !7420

20:                                               ; preds = %16, %2
  ret void, !dbg !7422
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define dso_local i32 @SFI_ReverseByteOrder(i32 noundef %0) local_unnamed_addr #16 section ".ram_code" !dbg !7423 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7425, metadata !DIExpression()), !dbg !7427
  call void @llvm.dbg.value(metadata i32 0, metadata !7426, metadata !DIExpression()), !dbg !7427
  call void @llvm.dbg.value(metadata i32 %0, metadata !7426, metadata !DIExpression(DW_OP_constu, 24, DW_OP_shr, DW_OP_stack_value)), !dbg !7427
  call void @llvm.dbg.value(metadata !DIArgList(i32 %0, i32 %0), metadata !7426, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 24, DW_OP_shr, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_shr, DW_OP_constu, 65280, DW_OP_and, DW_OP_or, DW_OP_stack_value)), !dbg !7427
  call void @llvm.dbg.value(metadata !DIArgList(i32 %0, i32 %0, i32 %0), metadata !7426, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 24, DW_OP_shr, DW_OP_LLVM_arg, 2, DW_OP_constu, 8, DW_OP_shr, DW_OP_constu, 65280, DW_OP_and, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_shl, DW_OP_constu, 16711680, DW_OP_and, DW_OP_or, DW_OP_stack_value)), !dbg !7427
  %2 = tail call i32 @llvm.bswap.i32(i32 %0), !dbg !7428
  call void @llvm.dbg.value(metadata i32 %2, metadata !7426, metadata !DIExpression()), !dbg !7427
  ret i32 %2, !dbg !7429
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_MacEnable(i16 noundef zeroext %0) local_unnamed_addr #0 section ".tcm_code" !dbg !7430 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !7435, metadata !DIExpression()), !dbg !7437
  %2 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !7438
  %3 = or i32 %2, 512, !dbg !7438
  store volatile i32 %3, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !7438
  %4 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !7441
  call void @llvm.dbg.value(metadata i32 %4, metadata !7436, metadata !DIExpression()), !dbg !7437
  switch i16 %0, label %6 [
    i16 0, label %7
    i16 1, label %5
  ], !dbg !7442

5:                                                ; preds = %1
  br label %7, !dbg !7443

6:                                                ; preds = %1
  tail call void @Flash_ReturnReady() #21, !dbg !7447
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.121, i32 0, i32 0), i32 noundef 127, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.SFI_MacEnable, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.122, i32 0, i32 0)) #24, !dbg !7447
  unreachable, !dbg !7447

7:                                                ; preds = %1, %5
  %8 = phi i32* [ inttoptr (i32 -1610350528 to i32*), %5 ], [ inttoptr (i32 -1610350588 to i32*), %1 ]
  %9 = load volatile i32, i32* %8, align 4, !dbg !7452
  call void @llvm.dbg.value(metadata !DIArgList(i32 %9, i32 %4), metadata !7436, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 4, DW_OP_shl, DW_OP_constu, 16, DW_OP_and, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !7437
  call void @llvm.dbg.value(metadata !DIArgList(i32 %9, i32 %4), metadata !7436, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 4, DW_OP_shl, DW_OP_constu, 16, DW_OP_and, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_constu, 8, DW_OP_or, DW_OP_stack_value)), !dbg !7437
  br label %10, !dbg !7453

10:                                               ; preds = %10, %7
  %11 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !7454
  %12 = and i32 %11, 8192, !dbg !7455
  %13 = icmp eq i32 %12, 0, !dbg !7456
  br i1 %13, label %10, label %14, !dbg !7453, !llvm.loop !7457

14:                                               ; preds = %10, %14
  %15 = load volatile i32, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !7459
  %16 = and i32 %15, 256, !dbg !7460
  %17 = icmp eq i32 %16, 0, !dbg !7461
  br i1 %17, label %14, label %18, !dbg !7462, !llvm.loop !7463

18:                                               ; preds = %14
  %19 = shl i32 %9, 4, !dbg !7452
  call void @llvm.dbg.value(metadata !DIArgList(i32 %19, i32 %4), metadata !7436, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 16, DW_OP_and, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_constu, 8, DW_OP_or, DW_OP_stack_value)), !dbg !7437
  %20 = and i32 %19, 16, !dbg !7452
  call void @llvm.dbg.value(metadata !DIArgList(i32 %20, i32 %4), metadata !7436, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_constu, 8, DW_OP_or, DW_OP_stack_value)), !dbg !7437
  call void @llvm.dbg.value(metadata i32 undef, metadata !7436, metadata !DIExpression(DW_OP_constu, 8, DW_OP_or, DW_OP_stack_value)), !dbg !7437
  %21 = or i32 %4, %20, !dbg !7465
  %22 = or i32 %21, 8, !dbg !7465
  call void @llvm.dbg.value(metadata i32 %22, metadata !7436, metadata !DIExpression()), !dbg !7437
  store volatile i32 %22, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !7466
  ret void, !dbg !7467
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SFI_MacLeave(i16 zeroext %0) local_unnamed_addr #3 section ".tcm_code" !dbg !7468 {
  call void @llvm.dbg.value(metadata i16 undef, metadata !7470, metadata !DIExpression()), !dbg !7472
  %2 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !7473
  call void @llvm.dbg.value(metadata i32 %2, metadata !7471, metadata !DIExpression()), !dbg !7472
  %3 = and i32 %2, -268435477, !dbg !7474
  call void @llvm.dbg.value(metadata i32 %3, metadata !7471, metadata !DIExpression()), !dbg !7472
  store volatile i32 %3, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !7475
  br label %4, !dbg !7476

4:                                                ; preds = %4, %1
  %5 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !7477
  %6 = and i32 %5, 2, !dbg !7478
  %7 = icmp eq i32 %6, 0, !dbg !7476
  br i1 %7, label %8, label %4, !dbg !7476, !llvm.loop !7479

8:                                                ; preds = %4
  %9 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !7481
  call void @llvm.dbg.value(metadata i32 %9, metadata !7471, metadata !DIExpression()), !dbg !7472
  %10 = and i32 %9, -9, !dbg !7482
  call void @llvm.dbg.value(metadata i32 %10, metadata !7471, metadata !DIExpression()), !dbg !7472
  store volatile i32 %10, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !7483
  br label %11, !dbg !7484

11:                                               ; preds = %11, %8
  %12 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !7485
  %13 = and i32 %12, 8, !dbg !7486
  %14 = icmp eq i32 %13, 0, !dbg !7484
  br i1 %14, label %15, label %11, !dbg !7484, !llvm.loop !7487

15:                                               ; preds = %11
  %16 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !7489, !range !3203
  %17 = icmp eq i8 %16, 0, !dbg !7491
  br i1 %17, label %18, label %21, !dbg !7492

18:                                               ; preds = %15
  %19 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !7493
  %20 = and i32 %19, -513, !dbg !7493
  store volatile i32 %20, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !7493
  br label %21, !dbg !7497

21:                                               ; preds = %18, %15
  ret void, !dbg !7498
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @SFI_MacTrigger(i16 noundef zeroext %0) local_unnamed_addr #3 section ".tcm_code" !dbg !7499 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !7503, metadata !DIExpression()), !dbg !7506
  call void @llvm.dbg.value(metadata i32 0, metadata !7504, metadata !DIExpression()), !dbg !7506
  call void @llvm.dbg.value(metadata i32 0, metadata !7505, metadata !DIExpression()), !dbg !7506
  %2 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !7507
  call void @llvm.dbg.value(metadata i32 %2, metadata !7504, metadata !DIExpression()), !dbg !7506
  call void @llvm.dbg.value(metadata i32 %2, metadata !7504, metadata !DIExpression(DW_OP_constu, 12, DW_OP_or, DW_OP_stack_value)), !dbg !7506
  %3 = icmp eq i16 %0, 1, !dbg !7508
  %4 = select i1 %3, i32 268435468, i32 12, !dbg !7510
  %5 = or i32 %2, %4, !dbg !7510
  call void @llvm.dbg.value(metadata i32 %5, metadata !7504, metadata !DIExpression()), !dbg !7506
  store volatile i32 %5, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !7511
  br label %6, !dbg !7512

6:                                                ; preds = %6, %1
  %7 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !7513
  %8 = and i32 %7, 2, !dbg !7514
  %9 = icmp eq i32 %8, 0, !dbg !7515
  br i1 %9, label %6, label %10, !dbg !7512, !llvm.loop !7516

10:                                               ; preds = %6, %10
  %11 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !7518
  %12 = and i32 %11, 1, !dbg !7519
  %13 = icmp eq i32 %12, 0, !dbg !7520
  br i1 %13, label %14, label %10, !dbg !7520, !llvm.loop !7521

14:                                               ; preds = %10
  ret i32 0, !dbg !7523
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SFI_MacWaitReady(i16 noundef zeroext %0) local_unnamed_addr #3 section ".tcm_code" !dbg !7524 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !7526, metadata !DIExpression()), !dbg !7527
  %2 = tail call i32 @SFI_MacTrigger(i16 noundef zeroext %0) #22, !dbg !7528
  tail call void @SFI_MacLeave(i16 zeroext undef) #22, !dbg !7529
  ret void, !dbg !7530
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_Dev_Command(i16 noundef zeroext %0, i32 noundef %1) local_unnamed_addr #0 section ".tcm_code" !dbg !7531 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !7535, metadata !DIExpression()), !dbg !7540
  call void @llvm.dbg.value(metadata i32 %1, metadata !7536, metadata !DIExpression()), !dbg !7540
  call void @llvm.dbg.value(metadata i32 %1, metadata !7537, metadata !DIExpression()), !dbg !7540
  call void @llvm.dbg.value(metadata i8 0, metadata !7539, metadata !DIExpression()), !dbg !7540
  call void @llvm.dbg.value(metadata i32 0, metadata !7538, metadata !DIExpression()), !dbg !7540
  %3 = icmp eq i32 %1, 0, !dbg !7541
  br i1 %3, label %16, label %4, !dbg !7544

4:                                                ; preds = %2, %4
  %5 = phi i8 [ %12, %4 ], [ 0, %2 ]
  %6 = phi i32 [ %10, %4 ], [ 0, %2 ]
  %7 = phi i32 [ %11, %4 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8 %5, metadata !7539, metadata !DIExpression()), !dbg !7540
  call void @llvm.dbg.value(metadata i32 %6, metadata !7538, metadata !DIExpression()), !dbg !7540
  call void @llvm.dbg.value(metadata i32 %7, metadata !7537, metadata !DIExpression()), !dbg !7540
  %8 = shl i32 %6, 8, !dbg !7545
  %9 = and i32 %7, 255, !dbg !7547
  %10 = or i32 %8, %9, !dbg !7548
  call void @llvm.dbg.value(metadata i32 %10, metadata !7538, metadata !DIExpression()), !dbg !7540
  %11 = lshr i32 %7, 8, !dbg !7549
  call void @llvm.dbg.value(metadata i32 %11, metadata !7537, metadata !DIExpression()), !dbg !7540
  %12 = add nuw nsw i8 %5, 1, !dbg !7550
  call void @llvm.dbg.value(metadata i8 %12, metadata !7539, metadata !DIExpression()), !dbg !7540
  %13 = icmp ult i32 %7, 256, !dbg !7541
  br i1 %13, label %14, label %4, !dbg !7544, !llvm.loop !7551

14:                                               ; preds = %4
  %15 = zext i8 %12 to i32, !dbg !7553
  tail call void @SFI_MacEnable(i16 noundef zeroext %0) #22, !dbg !7555
  store volatile i32 %10, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !7556
  store volatile i32 %15, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !7557
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !7558
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %0) #22, !dbg !7559
  br label %16, !dbg !7560

16:                                               ; preds = %2, %14
  ret void, !dbg !7561
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_Dev_CommandAddress(i16 noundef zeroext %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #0 section ".ram_code" !dbg !7562 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !7566, metadata !DIExpression()), !dbg !7572
  call void @llvm.dbg.value(metadata i8 %1, metadata !7567, metadata !DIExpression()), !dbg !7572
  call void @llvm.dbg.value(metadata i32 %2, metadata !7568, metadata !DIExpression()), !dbg !7572
  call void @llvm.dbg.value(metadata i32 %3, metadata !7569, metadata !DIExpression()), !dbg !7572
  %5 = tail call i32 @SFI_ReverseByteOrder(i32 noundef %2) #22, !dbg !7573
  call void @llvm.dbg.value(metadata i32 %5, metadata !7571, metadata !DIExpression()), !dbg !7572
  %6 = icmp eq i32 %3, 3, !dbg !7574
  br i1 %6, label %7, label %11, !dbg !7576

7:                                                ; preds = %4
  %8 = and i32 %5, -256, !dbg !7577
  %9 = zext i8 %1 to i32, !dbg !7579
  %10 = or i32 %8, %9, !dbg !7580
  call void @llvm.dbg.value(metadata i32 %10, metadata !7570, metadata !DIExpression()), !dbg !7572
  br label %16, !dbg !7581

11:                                               ; preds = %4
  %12 = shl i32 %5, 8, !dbg !7582
  %13 = zext i8 %1 to i32, !dbg !7584
  %14 = or i32 %12, %13, !dbg !7585
  call void @llvm.dbg.value(metadata i32 %14, metadata !7570, metadata !DIExpression()), !dbg !7572
  %15 = lshr i32 %5, 24, !dbg !7586
  call void @llvm.dbg.value(metadata i32 %15, metadata !7571, metadata !DIExpression()), !dbg !7572
  br label %16

16:                                               ; preds = %11, %7
  %17 = phi i32 [ %10, %7 ], [ %14, %11 ], !dbg !7587
  %18 = phi i32 [ %5, %7 ], [ %15, %11 ], !dbg !7572
  call void @llvm.dbg.value(metadata i32 %18, metadata !7571, metadata !DIExpression()), !dbg !7572
  call void @llvm.dbg.value(metadata i32 %17, metadata !7570, metadata !DIExpression()), !dbg !7572
  store volatile i32 %17, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !7588
  store volatile i32 %18, i32* inttoptr (i32 -1610348540 to i32*), align 4, !dbg !7589
  %19 = add i32 %3, 1, !dbg !7590
  store volatile i32 %19, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !7591
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !7592
  tail call void @SFI_MacEnable(i16 noundef zeroext %0) #22, !dbg !7593
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %0) #22, !dbg !7594
  ret void, !dbg !7595
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define dso_local i32 @SFI_GPRAM_Write_C1A3(i32 noundef %0, i32 noundef %1) local_unnamed_addr #16 section ".ram_code" !dbg !7596 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7600, metadata !DIExpression()), !dbg !7602
  call void @llvm.dbg.value(metadata i32 %1, metadata !7601, metadata !DIExpression()), !dbg !7602
  %3 = tail call i32 @SFI_ReverseByteOrder(i32 noundef %1) #22, !dbg !7603
  %4 = and i32 %3, -256, !dbg !7604
  %5 = and i32 %0, 255, !dbg !7605
  %6 = or i32 %4, %5, !dbg !7606
  ret i32 %6, !dbg !7607
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @SFI_GPRAM_Write_C1A4(i32 noundef %0, i32 noundef %1, i8** nocapture noundef %2, i32* nocapture noundef %3) local_unnamed_addr #8 section ".ram_code" !dbg !7608 {
  %5 = alloca %union.anon, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !7613, metadata !DIExpression()), !dbg !7628
  call void @llvm.dbg.value(metadata i32 %1, metadata !7614, metadata !DIExpression()), !dbg !7628
  call void @llvm.dbg.value(metadata i8** %2, metadata !7615, metadata !DIExpression()), !dbg !7628
  call void @llvm.dbg.value(metadata i32* %3, metadata !7616, metadata !DIExpression()), !dbg !7628
  %6 = bitcast %union.anon* %5 to i8*, !dbg !7629
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #23, !dbg !7629
  call void @llvm.dbg.declare(metadata %union.anon* %5, metadata !7617, metadata !DIExpression()), !dbg !7630
  %7 = tail call i32 @SFI_ReverseByteOrder(i32 noundef %1) #22, !dbg !7631
  call void @llvm.dbg.value(metadata i32 %7, metadata !7626, metadata !DIExpression()), !dbg !7628
  call void @llvm.dbg.value(metadata !DIArgList(i32 %7, i32 %0), metadata !7625, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 8, DW_OP_shl, DW_OP_LLVM_arg, 1, DW_OP_constu, 255, DW_OP_and, DW_OP_or, DW_OP_stack_value)), !dbg !7628
  %8 = lshr i32 %7, 24, !dbg !7632
  call void @llvm.dbg.value(metadata i32 %8, metadata !7626, metadata !DIExpression()), !dbg !7628
  %9 = trunc i32 %8 to i8, !dbg !7633
  %10 = bitcast %union.anon* %5 to [4 x i8]*, !dbg !7634
  store i8 %9, i8* %6, align 4, !dbg !7635
  call void @llvm.dbg.value(metadata i32 1, metadata !7627, metadata !DIExpression()), !dbg !7628
  %11 = load i8*, i8** %2, align 4, !dbg !7636
  br label %12, !dbg !7640

12:                                               ; preds = %4, %12
  %13 = phi i8* [ %11, %4 ], [ %17, %12 ], !dbg !7636
  %14 = phi i32 [ 1, %4 ], [ %18, %12 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !7627, metadata !DIExpression()), !dbg !7628
  %15 = load i8, i8* %13, align 1, !dbg !7641
  %16 = getelementptr inbounds [4 x i8], [4 x i8]* %10, i32 0, i32 %14, !dbg !7642
  store i8 %15, i8* %16, align 1, !dbg !7643
  %17 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7644
  store i8* %17, i8** %2, align 4, !dbg !7644
  %18 = add nuw nsw i32 %14, 1, !dbg !7645
  call void @llvm.dbg.value(metadata i32 %18, metadata !7627, metadata !DIExpression()), !dbg !7628
  %19 = icmp eq i32 %18, 4, !dbg !7646
  br i1 %19, label %20, label %12, !dbg !7640, !llvm.loop !7647

20:                                               ; preds = %12
  %21 = getelementptr inbounds %union.anon, %union.anon* %5, i32 0, i32 0, !dbg !7649
  %22 = load i32, i32* %21, align 4, !dbg !7649
  call void @llvm.dbg.value(metadata i32 %22, metadata !7626, metadata !DIExpression()), !dbg !7628
  %23 = load i32, i32* %3, align 4, !dbg !7650
  %24 = tail call i32 @llvm.usub.sat.i32(i32 %23, i32 3), !dbg !7651
  %25 = shl i32 %7, 8, !dbg !7652
  call void @llvm.dbg.value(metadata !DIArgList(i32 %25, i32 %0), metadata !7625, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 255, DW_OP_and, DW_OP_or, DW_OP_stack_value)), !dbg !7628
  %26 = and i32 %0, 255, !dbg !7653
  call void @llvm.dbg.value(metadata !DIArgList(i32 %7, i32 %26), metadata !7625, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 8, DW_OP_shl, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !7628
  %27 = or i32 %25, %26, !dbg !7654
  call void @llvm.dbg.value(metadata i32 %27, metadata !7625, metadata !DIExpression()), !dbg !7628
  store i32 %24, i32* %3, align 4, !dbg !7655
  store volatile i32 %22, i32* inttoptr (i32 -1610348540 to i32*), align 4, !dbg !7656
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #23, !dbg !7657
  ret i32 %27, !dbg !7658
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @SFI_GPRAM_Write(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #8 section ".ram_code" !dbg !7659 {
  %4 = alloca %union.anon, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !7663, metadata !DIExpression()), !dbg !7669
  call void @llvm.dbg.value(metadata i8* %1, metadata !7664, metadata !DIExpression()), !dbg !7669
  call void @llvm.dbg.value(metadata i32 %2, metadata !7665, metadata !DIExpression()), !dbg !7669
  call void @llvm.dbg.value(metadata i8* %1, metadata !7667, metadata !DIExpression()), !dbg !7669
  %5 = bitcast %union.anon* %4 to i8*, !dbg !7670
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !7670
  call void @llvm.dbg.declare(metadata %union.anon* %4, metadata !7668, metadata !DIExpression()), !dbg !7671
  %6 = add i32 %0, -1610348544, !dbg !7672
  call void @llvm.dbg.value(metadata i32 %6, metadata !7663, metadata !DIExpression()), !dbg !7669
  %7 = ptrtoint i8* %1 to i32, !dbg !7673
  %8 = and i32 %7, 3, !dbg !7675
  %9 = icmp eq i32 %8, 0, !dbg !7676
  br i1 %9, label %10, label %23, !dbg !7677

10:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7667, metadata !DIExpression()), !dbg !7669
  call void @llvm.dbg.value(metadata i32 %2, metadata !7665, metadata !DIExpression()), !dbg !7669
  call void @llvm.dbg.value(metadata i32 %6, metadata !7663, metadata !DIExpression()), !dbg !7669
  %11 = icmp sgt i32 %2, 0, !dbg !7678
  br i1 %11, label %12, label %72, !dbg !7682

12:                                               ; preds = %10, %12
  %13 = phi i8* [ %20, %12 ], [ %1, %10 ]
  %14 = phi i32 [ %21, %12 ], [ %2, %10 ]
  %15 = phi i32 [ %19, %12 ], [ %6, %10 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7667, metadata !DIExpression()), !dbg !7669
  call void @llvm.dbg.value(metadata i32 %14, metadata !7665, metadata !DIExpression()), !dbg !7669
  call void @llvm.dbg.value(metadata i32 %15, metadata !7663, metadata !DIExpression()), !dbg !7669
  %16 = bitcast i8* %13 to i32*, !dbg !7683
  %17 = load i32, i32* %16, align 4, !dbg !7683
  %18 = inttoptr i32 %15 to i32*, !dbg !7683
  store volatile i32 %17, i32* %18, align 4, !dbg !7683
  %19 = add i32 %15, 4, !dbg !7685
  call void @llvm.dbg.value(metadata i32 %19, metadata !7663, metadata !DIExpression()), !dbg !7669
  %20 = getelementptr inbounds i8, i8* %13, i32 4, !dbg !7686
  call void @llvm.dbg.value(metadata i8* %20, metadata !7667, metadata !DIExpression()), !dbg !7669
  %21 = add nsw i32 %14, -4, !dbg !7687
  call void @llvm.dbg.value(metadata i32 %21, metadata !7665, metadata !DIExpression()), !dbg !7669
  %22 = icmp ugt i32 %14, 4, !dbg !7678
  br i1 %22, label %12, label %72, !dbg !7682, !llvm.loop !7688

23:                                               ; preds = %3
  %24 = and i32 %7, 1, !dbg !7690
  %25 = icmp eq i32 %24, 0, !dbg !7692
  call void @llvm.dbg.value(metadata i8* %1, metadata !7667, metadata !DIExpression()), !dbg !7669
  call void @llvm.dbg.value(metadata i8* %1, metadata !7667, metadata !DIExpression()), !dbg !7669
  call void @llvm.dbg.value(metadata i32 %2, metadata !7665, metadata !DIExpression()), !dbg !7669
  call void @llvm.dbg.value(metadata i32 %2, metadata !7665, metadata !DIExpression()), !dbg !7669
  call void @llvm.dbg.value(metadata i32 %6, metadata !7663, metadata !DIExpression()), !dbg !7669
  call void @llvm.dbg.value(metadata i32 %6, metadata !7663, metadata !DIExpression()), !dbg !7669
  %26 = icmp sgt i32 %2, 0, !dbg !7693
  br i1 %25, label %31, label %27, !dbg !7694

27:                                               ; preds = %23
  br i1 %26, label %28, label %72, !dbg !7695

28:                                               ; preds = %27
  %29 = bitcast %union.anon* %4 to [4 x i8]*
  %30 = getelementptr inbounds %union.anon, %union.anon* %4, i32 0, i32 0
  br label %52, !dbg !7695

31:                                               ; preds = %23
  br i1 %26, label %32, label %72, !dbg !7698

32:                                               ; preds = %31
  %33 = bitcast %union.anon* %4 to [2 x i16]*
  %34 = bitcast %union.anon* %4 to i16*
  %35 = getelementptr inbounds [2 x i16], [2 x i16]* %33, i32 0, i32 1
  %36 = getelementptr inbounds %union.anon, %union.anon* %4, i32 0, i32 0
  br label %37, !dbg !7698

37:                                               ; preds = %32, %37
  %38 = phi i8* [ %1, %32 ], [ %49, %37 ]
  %39 = phi i32 [ %2, %32 ], [ %50, %37 ]
  %40 = phi i32 [ %6, %32 ], [ %48, %37 ]
  call void @llvm.dbg.value(metadata i8* %38, metadata !7667, metadata !DIExpression()), !dbg !7669
  call void @llvm.dbg.value(metadata i32 %39, metadata !7665, metadata !DIExpression()), !dbg !7669
  call void @llvm.dbg.value(metadata i32 %40, metadata !7663, metadata !DIExpression()), !dbg !7669
  %41 = bitcast i8* %38 to i16*, !dbg !7701
  %42 = load i16, i16* %41, align 2, !dbg !7701
  store i16 %42, i16* %34, align 4, !dbg !7704
  %43 = getelementptr inbounds i8, i8* %38, i32 2, !dbg !7705
  %44 = bitcast i8* %43 to i16*, !dbg !7705
  %45 = load i16, i16* %44, align 2, !dbg !7706
  store i16 %45, i16* %35, align 2, !dbg !7707
  %46 = load i32, i32* %36, align 4, !dbg !7708
  %47 = inttoptr i32 %40 to i32*, !dbg !7708
  store volatile i32 %46, i32* %47, align 4, !dbg !7708
  %48 = add i32 %40, 4, !dbg !7709
  call void @llvm.dbg.value(metadata i32 %48, metadata !7663, metadata !DIExpression()), !dbg !7669
  %49 = getelementptr inbounds i8, i8* %38, i32 4, !dbg !7710
  call void @llvm.dbg.value(metadata i8* %49, metadata !7667, metadata !DIExpression()), !dbg !7669
  %50 = add nsw i32 %39, -4, !dbg !7711
  call void @llvm.dbg.value(metadata i32 %50, metadata !7665, metadata !DIExpression()), !dbg !7669
  %51 = icmp ugt i32 %39, 4, !dbg !7712
  br i1 %51, label %37, label %72, !dbg !7698, !llvm.loop !7713

52:                                               ; preds = %28, %66
  %53 = phi i8* [ %1, %28 ], [ %59, %66 ]
  %54 = phi i32 [ %2, %28 ], [ %70, %66 ]
  %55 = phi i32 [ %6, %28 ], [ %69, %66 ]
  call void @llvm.dbg.value(metadata i8* %53, metadata !7667, metadata !DIExpression()), !dbg !7669
  call void @llvm.dbg.value(metadata i32 %54, metadata !7665, metadata !DIExpression()), !dbg !7669
  call void @llvm.dbg.value(metadata i32 %55, metadata !7663, metadata !DIExpression()), !dbg !7669
  call void @llvm.dbg.value(metadata i8* %53, metadata !7667, metadata !DIExpression()), !dbg !7669
  call void @llvm.dbg.value(metadata i32 0, metadata !7666, metadata !DIExpression()), !dbg !7669
  br label %56, !dbg !7715

56:                                               ; preds = %52, %56
  %57 = phi i8* [ %53, %52 ], [ %59, %56 ]
  %58 = phi i32 [ 0, %52 ], [ %62, %56 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !7667, metadata !DIExpression()), !dbg !7669
  call void @llvm.dbg.value(metadata i32 %58, metadata !7666, metadata !DIExpression()), !dbg !7669
  %59 = getelementptr inbounds i8, i8* %57, i32 1, !dbg !7719
  call void @llvm.dbg.value(metadata i8* %59, metadata !7667, metadata !DIExpression()), !dbg !7669
  %60 = load i8, i8* %57, align 1, !dbg !7722
  %61 = getelementptr inbounds [4 x i8], [4 x i8]* %29, i32 0, i32 %58, !dbg !7723
  store i8 %60, i8* %61, align 1, !dbg !7724
  %62 = add nuw nsw i32 %58, 1, !dbg !7725
  call void @llvm.dbg.value(metadata i32 %62, metadata !7666, metadata !DIExpression()), !dbg !7669
  %63 = icmp ult i32 %58, 3, !dbg !7726
  %64 = icmp ult i32 %62, %54, !dbg !7727
  %65 = select i1 %63, i1 %64, i1 false, !dbg !7727
  br i1 %65, label %56, label %66, !dbg !7715, !llvm.loop !7728

66:                                               ; preds = %56
  %67 = load i32, i32* %30, align 4, !dbg !7730
  %68 = inttoptr i32 %55 to i32*, !dbg !7730
  store volatile i32 %67, i32* %68, align 4, !dbg !7730
  %69 = add i32 %55, 4, !dbg !7731
  call void @llvm.dbg.value(metadata i32 %69, metadata !7663, metadata !DIExpression()), !dbg !7669
  %70 = add nsw i32 %54, -4, !dbg !7732
  call void @llvm.dbg.value(metadata i8* %59, metadata !7667, metadata !DIExpression()), !dbg !7669
  call void @llvm.dbg.value(metadata i32 %70, metadata !7665, metadata !DIExpression()), !dbg !7669
  %71 = icmp sgt i32 %54, 4, !dbg !7733
  br i1 %71, label %52, label %72, !dbg !7695, !llvm.loop !7734

72:                                               ; preds = %66, %37, %12, %27, %31, %10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !7736
  ret void, !dbg !7736
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* nocapture noundef readonly %1, i8* nocapture noundef writeonly %2, i16 noundef zeroext %3, i16 noundef zeroext %4) local_unnamed_addr #0 section ".ram_code" !dbg !7737 {
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i16 %0, metadata !7741, metadata !DIExpression()), !dbg !7751
  call void @llvm.dbg.value(metadata i8* %1, metadata !7742, metadata !DIExpression()), !dbg !7751
  call void @llvm.dbg.value(metadata i8* %2, metadata !7743, metadata !DIExpression()), !dbg !7751
  call void @llvm.dbg.value(metadata i16 %3, metadata !7744, metadata !DIExpression()), !dbg !7751
  call void @llvm.dbg.value(metadata i16 %4, metadata !7745, metadata !DIExpression()), !dbg !7751
  %7 = bitcast i32* %6 to i8*, !dbg !7752
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #23, !dbg !7752
  call void @llvm.dbg.value(metadata i8* %7, metadata !7750, metadata !DIExpression()), !dbg !7751
  call void @llvm.dbg.value(metadata i32 0, metadata !7747, metadata !DIExpression()), !dbg !7751
  call void @llvm.dbg.value(metadata i8* inttoptr (i32 -1610348544 to i8*), metadata !7749, metadata !DIExpression()), !dbg !7751
  %8 = zext i16 %3 to i32
  call void @llvm.dbg.value(metadata i8* inttoptr (i32 -1610348544 to i8*), metadata !7749, metadata !DIExpression()), !dbg !7751
  call void @llvm.dbg.value(metadata i32 0, metadata !7747, metadata !DIExpression()), !dbg !7751
  %9 = icmp eq i16 %3, 0, !dbg !7753
  br i1 %9, label %33, label %10, !dbg !7756

10:                                               ; preds = %5, %27
  %11 = phi i8* [ %31, %27 ], [ inttoptr (i32 -1610348544 to i8*), %5 ]
  %12 = phi i32 [ %29, %27 ], [ 0, %5 ]
  call void @llvm.dbg.value(metadata i8* %11, metadata !7749, metadata !DIExpression()), !dbg !7751
  call void @llvm.dbg.value(metadata i32 %12, metadata !7747, metadata !DIExpression()), !dbg !7751
  call void @llvm.dbg.value(metadata i32 0, metadata !7748, metadata !DIExpression()), !dbg !7751
  call void @llvm.dbg.value(metadata i32 0, metadata !7746, metadata !DIExpression()), !dbg !7751
  store i32 0, i32* %6, align 4, !dbg !7757
  call void @llvm.dbg.value(metadata i32 0, metadata !7748, metadata !DIExpression()), !dbg !7751
  call void @llvm.dbg.value(metadata i32 %12, metadata !7747, metadata !DIExpression()), !dbg !7751
  %13 = icmp ult i32 %12, %8, !dbg !7760
  br i1 %13, label %14, label %27, !dbg !7762

14:                                               ; preds = %10, %14
  %15 = phi i32 [ %21, %14 ], [ 0, %10 ]
  %16 = phi i32 [ %20, %14 ], [ %12, %10 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !7748, metadata !DIExpression()), !dbg !7751
  call void @llvm.dbg.value(metadata i32 %16, metadata !7747, metadata !DIExpression()), !dbg !7751
  %17 = getelementptr inbounds i8, i8* %1, i32 %16, !dbg !7763
  %18 = load i8, i8* %17, align 1, !dbg !7763
  %19 = getelementptr inbounds i8, i8* %7, i32 %15, !dbg !7765
  store i8 %18, i8* %19, align 1, !dbg !7766
  %20 = add nuw nsw i32 %16, 1, !dbg !7767
  call void @llvm.dbg.value(metadata i32 %20, metadata !7747, metadata !DIExpression()), !dbg !7751
  %21 = add nuw nsw i32 %15, 1, !dbg !7768
  call void @llvm.dbg.value(metadata i32 %21, metadata !7748, metadata !DIExpression()), !dbg !7751
  %22 = icmp ult i32 %20, %8, !dbg !7760
  %23 = icmp ult i32 %15, 3, !dbg !7769
  %24 = select i1 %22, i1 %23, i1 false, !dbg !7769
  br i1 %24, label %14, label %25, !dbg !7762, !llvm.loop !7770

25:                                               ; preds = %14
  %26 = load i32, i32* %6, align 4, !dbg !7772
  br label %27, !dbg !7772

27:                                               ; preds = %25, %10
  %28 = phi i32 [ 0, %10 ], [ %26, %25 ], !dbg !7772
  %29 = phi i32 [ %12, %10 ], [ %20, %25 ], !dbg !7773
  call void @llvm.dbg.value(metadata i32 %28, metadata !7746, metadata !DIExpression()), !dbg !7751
  %30 = bitcast i8* %11 to i32*, !dbg !7772
  store volatile i32 %28, i32* %30, align 4, !dbg !7772
  %31 = getelementptr inbounds i8, i8* %11, i32 4, !dbg !7774
  call void @llvm.dbg.value(metadata i8* %31, metadata !7749, metadata !DIExpression()), !dbg !7751
  call void @llvm.dbg.value(metadata i32 %29, metadata !7747, metadata !DIExpression()), !dbg !7751
  %32 = icmp ult i32 %29, %8, !dbg !7753
  br i1 %32, label %10, label %33, !dbg !7756, !llvm.loop !7775

33:                                               ; preds = %27, %5
  store volatile i32 %8, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !7777
  %34 = zext i16 %4 to i32, !dbg !7778
  store volatile i32 %34, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !7779
  tail call void @SFI_MacEnable(i16 noundef zeroext %0) #22, !dbg !7780
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %0) #22, !dbg !7781
  call void @llvm.dbg.value(metadata !DIArgList(i8* inttoptr (i32 -1610348544 to i8*), i32 %8), metadata !7749, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !7751
  call void @llvm.dbg.value(metadata i8* %2, metadata !7743, metadata !DIExpression()), !dbg !7751
  call void @llvm.dbg.value(metadata i32 0, metadata !7747, metadata !DIExpression()), !dbg !7751
  %35 = icmp eq i16 %4, 0, !dbg !7782
  br i1 %35, label %47, label %36, !dbg !7785

36:                                               ; preds = %33
  %37 = getelementptr inbounds i8, i8* inttoptr (i32 -1610348544 to i8*), i32 %8, !dbg !7786
  call void @llvm.dbg.value(metadata i8* %37, metadata !7749, metadata !DIExpression()), !dbg !7751
  br label %38, !dbg !7785

38:                                               ; preds = %36, %38
  %39 = phi i8* [ %44, %38 ], [ %2, %36 ]
  %40 = phi i8* [ %45, %38 ], [ %37, %36 ]
  %41 = phi i32 [ %43, %38 ], [ 0, %36 ]
  call void @llvm.dbg.value(metadata i8* %39, metadata !7743, metadata !DIExpression()), !dbg !7751
  call void @llvm.dbg.value(metadata i8* %40, metadata !7749, metadata !DIExpression()), !dbg !7751
  call void @llvm.dbg.value(metadata i32 %41, metadata !7747, metadata !DIExpression()), !dbg !7751
  %42 = load volatile i8, i8* %40, align 1, !dbg !7787
  store i8 %42, i8* %39, align 1, !dbg !7789
  %43 = add nuw nsw i32 %41, 1, !dbg !7790
  call void @llvm.dbg.value(metadata i32 %43, metadata !7747, metadata !DIExpression()), !dbg !7751
  %44 = getelementptr inbounds i8, i8* %39, i32 1, !dbg !7791
  call void @llvm.dbg.value(metadata i8* %44, metadata !7743, metadata !DIExpression()), !dbg !7751
  %45 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !7792
  call void @llvm.dbg.value(metadata i8* %45, metadata !7749, metadata !DIExpression()), !dbg !7751
  %46 = icmp eq i32 %43, %34, !dbg !7782
  br i1 %46, label %47, label %38, !dbg !7785, !llvm.loop !7793

47:                                               ; preds = %38, %33
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #23, !dbg !7795
  ret void, !dbg !7795
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_Dev_Command_List(i16 noundef zeroext %0, i8* noundef readonly %1) local_unnamed_addr #0 section ".ram_code" !dbg !7796 {
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i16 %0, metadata !7800, metadata !DIExpression()), !dbg !7808
  call void @llvm.dbg.value(metadata i8* %1, metadata !7801, metadata !DIExpression()), !dbg !7808
  call void @llvm.dbg.value(metadata i32 0, metadata !7802, metadata !DIExpression()), !dbg !7808
  %4 = icmp eq i8* %1, null, !dbg !7809
  br i1 %4, label %67, label %5, !dbg !7811

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !7812
  call void @llvm.dbg.value(metadata i32 %27, metadata !7803, metadata !DIExpression()), !dbg !7808
  %7 = icmp eq i16 %0, 0
  br label %8, !dbg !7813

8:                                                ; preds = %61, %5
  %9 = phi i32 [ 0, %5 ], [ %66, %61 ], !dbg !7808
  call void @llvm.dbg.value(metadata i32 %9, metadata !7802, metadata !DIExpression()), !dbg !7808
  %10 = getelementptr inbounds i8, i8* %1, i32 %9, !dbg !7814
  %11 = load i8, i8* %10, align 1, !dbg !7814
  switch i8 %11, label %26 [
    i8 1, label %12
    i8 2, label %12
    i8 3, label %19
  ], !dbg !7815

12:                                               ; preds = %8, %8
  br i1 %7, label %13, label %16, !dbg !7816

13:                                               ; preds = %12
  %14 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !7819
  %15 = and i32 %14, -2, !dbg !7819
  store volatile i32 %15, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !7819
  br label %41, !dbg !7823

16:                                               ; preds = %12
  %17 = load volatile i32, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !7824
  %18 = and i32 %17, -2, !dbg !7824
  store volatile i32 %18, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !7824
  br label %41

19:                                               ; preds = %8
  br i1 %7, label %20, label %23, !dbg !7827

20:                                               ; preds = %19
  %21 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !7829
  %22 = or i32 %21, 1, !dbg !7829
  store volatile i32 %22, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !7829
  br label %41, !dbg !7833

23:                                               ; preds = %19
  %24 = load volatile i32, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !7834
  %25 = or i32 %24, 1, !dbg !7834
  store volatile i32 %25, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !7834
  br label %41

26:                                               ; preds = %8
  %27 = and i32 %6, 1, !dbg !7812
  %28 = icmp eq i32 %27, 0, !dbg !7837
  br i1 %7, label %29, label %35, !dbg !7840

29:                                               ; preds = %26
  %30 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !7841
  br i1 %28, label %33, label %31, !dbg !7844

31:                                               ; preds = %29
  %32 = or i32 %30, 1, !dbg !7841
  store volatile i32 %32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !7841
  br label %67, !dbg !7841

33:                                               ; preds = %29
  %34 = and i32 %30, -2, !dbg !7841
  store volatile i32 %34, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !7841
  br label %67

35:                                               ; preds = %26
  %36 = load volatile i32, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !7845
  br i1 %28, label %39, label %37, !dbg !7848

37:                                               ; preds = %35
  %38 = or i32 %36, 1, !dbg !7845
  store volatile i32 %38, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !7845
  br label %67, !dbg !7845

39:                                               ; preds = %35
  %40 = and i32 %36, -2, !dbg !7845
  store volatile i32 %40, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !7845
  br label %67

41:                                               ; preds = %20, %23, %13, %16
  %42 = add i32 %9, 2, !dbg !7849
  %43 = getelementptr inbounds i8, i8* %1, i32 %42, !dbg !7850
  %44 = load i8, i8* %43, align 1, !dbg !7850
  %45 = icmp eq i8 %44, 5, !dbg !7851
  br i1 %45, label %46, label %56, !dbg !7852

46:                                               ; preds = %41
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #23, !dbg !7853
  %47 = add i32 %9, 3
  %48 = getelementptr inbounds i8, i8* %1, i32 %47
  br label %49, !dbg !7854

49:                                               ; preds = %49, %46
  call void @llvm.dbg.value(metadata i8* %3, metadata !7804, metadata !DIExpression(DW_OP_deref)), !dbg !7855
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %43, i8* noundef nonnull %3, i16 noundef zeroext 1, i16 noundef zeroext 1) #22, !dbg !7856
  %50 = load i8, i8* %3, align 1, !dbg !7858
  call void @llvm.dbg.value(metadata i8 %50, metadata !7804, metadata !DIExpression()), !dbg !7855
  %51 = load i8, i8* %48, align 1, !dbg !7859
  %52 = and i8 %51, %50, !dbg !7860
  %53 = icmp eq i8 %52, 0, !dbg !7861
  br i1 %53, label %54, label %49, !dbg !7861, !llvm.loop !7862

54:                                               ; preds = %49
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #23, !dbg !7864
  %55 = add i32 %9, 1, !dbg !7865
  br label %61, !dbg !7866

56:                                               ; preds = %41
  %57 = add i32 %9, 1, !dbg !7867
  %58 = getelementptr inbounds i8, i8* %1, i32 %57, !dbg !7869
  %59 = load i8, i8* %58, align 1, !dbg !7869
  %60 = zext i8 %59 to i16, !dbg !7869
  tail call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %43, i8* noundef null, i16 noundef zeroext %60, i16 noundef zeroext 0) #22, !dbg !7870
  br label %61

61:                                               ; preds = %56, %54
  %62 = phi i32 [ %57, %56 ], [ %55, %54 ], !dbg !7865
  %63 = getelementptr inbounds i8, i8* %1, i32 %62, !dbg !7871
  %64 = load i8, i8* %63, align 1, !dbg !7871
  %65 = zext i8 %64 to i32, !dbg !7871
  %66 = add i32 %42, %65, !dbg !7872
  call void @llvm.dbg.value(metadata i32 %66, metadata !7802, metadata !DIExpression()), !dbg !7808
  br label %8, !dbg !7813, !llvm.loop !7873

67:                                               ; preds = %33, %31, %39, %37, %2
  ret void, !dbg !7875
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_ReadDeviceID(i16 noundef zeroext %0, i8* nocapture noundef writeonly %1, i8 noundef zeroext %2) local_unnamed_addr #0 section ".ram_code" !dbg !7876 {
  %4 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i16 %0, metadata !7880, metadata !DIExpression()), !dbg !7883
  call void @llvm.dbg.value(metadata i8* %1, metadata !7881, metadata !DIExpression()), !dbg !7883
  call void @llvm.dbg.value(metadata i8 %2, metadata !7882, metadata !DIExpression()), !dbg !7883
  store i8 %2, i8* %4, align 1
  call void @llvm.dbg.value(metadata i8* %4, metadata !7882, metadata !DIExpression(DW_OP_deref)), !dbg !7883
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef %1, i16 noundef zeroext 1, i16 noundef zeroext 3) #22, !dbg !7884
  ret void, !dbg !7885
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_ReadDeviceID_SPI(i16 noundef zeroext %0, i8* nocapture noundef writeonly %1) local_unnamed_addr #0 section ".ram_code" !dbg !7886 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !7890, metadata !DIExpression()), !dbg !7892
  call void @llvm.dbg.value(metadata i8* %1, metadata !7891, metadata !DIExpression()), !dbg !7892
  tail call void @SFI_ReadDeviceID(i16 noundef zeroext %0, i8* noundef %1, i8 noundef zeroext -97) #22, !dbg !7893
  ret void, !dbg !7894
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SFI_Dev_WorkingFrequencyQuery() local_unnamed_addr #9 section ".ram_code" !dbg !7895 {
  ret i32 78, !dbg !7899
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @SFI_Dev_WorkingVoltageQuery() local_unnamed_addr #10 section ".ram_code" !dbg !7900 {
  %1 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !7904
  %2 = and i32 %1, 7340032, !dbg !7906
  %3 = icmp ult i32 %2, 2097153, !dbg !7907
  %4 = select i1 %3, i32 30, i32 18, !dbg !7908
  ret i32 %4, !dbg !7909
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local zeroext i1 @SFI_Dev_GetUniqueID(i8* nocapture noundef writeonly %0) local_unnamed_addr #17 section ".ram_code" !dbg !7910 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7914, metadata !DIExpression()), !dbg !7916
  call void @llvm.dbg.value(metadata i32 0, metadata !7915, metadata !DIExpression()), !dbg !7916
  call void @llvm.dbg.value(metadata i32 0, metadata !7915, metadata !DIExpression()), !dbg !7916
  br label %2, !dbg !7917

2:                                                ; preds = %1, %2
  %3 = phi i32 [ 0, %1 ], [ %5, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !7915, metadata !DIExpression()), !dbg !7916
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !7919
  store i8 -1, i8* %4, align 1, !dbg !7922
  %5 = add nuw nsw i32 %3, 1, !dbg !7923
  call void @llvm.dbg.value(metadata i32 %5, metadata !7915, metadata !DIExpression()), !dbg !7916
  %6 = icmp eq i32 %5, 8, !dbg !7924
  br i1 %6, label %7, label %2, !dbg !7917, !llvm.loop !7925

7:                                                ; preds = %2
  ret i1 true, !dbg !7927
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_DEV_Enter_DPD() local_unnamed_addr #0 section ".ram_code" !dbg !7928 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* @EntireDiskMtdData, metadata !7930, metadata !DIExpression()), !dbg !7931
  %1 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 13), align 4, !dbg !7932
  %2 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %1, i32 0, i32 19, !dbg !7933
  %3 = load i8, i8* %2, align 1, !dbg !7933
  store i8 %3, i8* @NOR_FLASH_LeaveDPDCmd, align 1, !dbg !7934
  %4 = load i8*, i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 1), align 4, !dbg !7935
  %5 = ptrtoint i8* %4 to i32, !dbg !7936
  store i32 %5, i32* @NOR_FLASH_FATStartAddr, align 4, !dbg !7937
  %6 = bitcast i8* %4 to i32*, !dbg !7938
  %7 = load volatile i32, i32* %6, align 4, !dbg !7939
  store i32 %7, i32* @NOR_FLASH_FATStartValue, align 4, !dbg !7940
  %8 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !7941
  store i32 %8, i32* @SFI_MAC_CTL_BACKUP, align 4, !dbg !7942
  %9 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !7943
  store i32 %9, i32* @SFI_DIRECT_CTL_BACKUP, align 4, !dbg !7944
  %10 = load volatile i32, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !7945
  store i32 %10, i32* @SFI_MISC_CTL_BACKUP, align 4, !dbg !7946
  %11 = load volatile i32, i32* inttoptr (i32 -1610350580 to i32*), align 4, !dbg !7947
  store i32 %11, i32* @SFI_MISC_CTL2_BACKUP, align 4, !dbg !7948
  %12 = load volatile i32, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !7949
  store i32 %12, i32* @SFI_DLY_CTL_3_BACKUP, align 4, !dbg !7950
  %13 = load volatile i32, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !7951
  %14 = or i32 %13, 986880, !dbg !7952
  store volatile i32 %14, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !7953
  %15 = load volatile i32, i32* inttoptr (i32 -1610350560 to i32*), align 32, !dbg !7954
  %16 = or i32 %15, 252645135, !dbg !7955
  store volatile i32 %16, i32* inttoptr (i32 -1610350560 to i32*), align 32, !dbg !7956
  %17 = load i16, i16* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 23), align 2, !dbg !7957
  %18 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 13), align 4, !dbg !7958
  %19 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %18, i32 0, i32 18, !dbg !7959
  %20 = load i8, i8* %19, align 1, !dbg !7959
  %21 = zext i8 %20 to i32, !dbg !7960
  tail call void @SFI_Dev_Command(i16 noundef zeroext %17, i32 noundef %21) #22, !dbg !7961
  %22 = tail call i32 @hal_gpt_delay_us(i32 noundef 100) #21, !dbg !7962
  ret void, !dbg !7963
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_DEV_Leave_DPD() local_unnamed_addr #0 section ".tcm_code" !dbg !7964 {
  %1 = load i32, i32* @SFI_MAC_CTL_BACKUP, align 4, !dbg !7965
  store volatile i32 %1, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !7966
  %2 = load i32, i32* @SFI_DIRECT_CTL_BACKUP, align 4, !dbg !7967
  store volatile i32 %2, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !7968
  %3 = load i32, i32* @SFI_MISC_CTL_BACKUP, align 4, !dbg !7969
  store volatile i32 %3, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !7970
  %4 = load i32, i32* @SFI_MISC_CTL2_BACKUP, align 4, !dbg !7971
  store volatile i32 %4, i32* inttoptr (i32 -1610350580 to i32*), align 4, !dbg !7972
  %5 = load i32, i32* @SFI_DLY_CTL_3_BACKUP, align 4, !dbg !7973
  store volatile i32 %5, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !7974
  %6 = load volatile i32, i32* inttoptr (i32 -1610350560 to i32*), align 32, !dbg !7975
  %7 = and i32 %6, -252645136, !dbg !7976
  store volatile i32 %7, i32* inttoptr (i32 -1610350560 to i32*), align 32, !dbg !7977
  %8 = load i8, i8* @NOR_FLASH_LeaveDPDCmd, align 1, !dbg !7978
  %9 = zext i8 %8 to i32, !dbg !7978
  tail call void @SFI_Dev_Command(i16 noundef zeroext 0, i32 noundef %9) #22, !dbg !7979
  %10 = tail call i32 @hal_gpt_delay_us(i32 noundef 100) #21, !dbg !7980
  %11 = load i32, i32* @NOR_FLASH_FATStartValue, align 4, !dbg !7981
  %12 = load i32, i32* @NOR_FLASH_FATStartAddr, align 4, !dbg !7983
  %13 = inttoptr i32 %12 to i32*, !dbg !7984
  %14 = load volatile i32, i32* %13, align 4, !dbg !7985
  %15 = icmp eq i32 %11, %14, !dbg !7986
  br i1 %15, label %17, label %16, !dbg !7987

16:                                               ; preds = %0, %16
  br label %16, !dbg !7988, !llvm.loop !7989

17:                                               ; preds = %0
  ret void, !dbg !7991
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_DEV_SWITCH_TO_LOW_FQ() local_unnamed_addr #0 section ".tcm_code" !dbg !7992 {
  %1 = load i32, i32* @SFI_CLK_SWITCH_MISC_CTL_BACKUP, align 4, !dbg !7993
  %2 = icmp eq i32 %1, 0, !dbg !7995
  br i1 %2, label %3, label %5, !dbg !7996

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !7997
  store i32 %4, i32* @SFI_CLK_SWITCH_MISC_CTL_BACKUP, align 4, !dbg !7999
  br label %5, !dbg !8000

5:                                                ; preds = %3, %0
  %6 = load i32, i32* @SFI_CLK_SWITCH_DLY_CTL_3_BACKUP, align 4, !dbg !8001
  %7 = icmp eq i32 %6, 0, !dbg !8003
  br i1 %7, label %8, label %10, !dbg !8004

8:                                                ; preds = %5
  %9 = load volatile i32, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !8005
  store i32 %9, i32* @SFI_CLK_SWITCH_DLY_CTL_3_BACKUP, align 4, !dbg !8007
  br label %10, !dbg !8008

10:                                               ; preds = %8, %5
  %11 = load volatile i32, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !8009
  %12 = and i32 %11, -256, !dbg !8010
  store volatile i32 %12, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !8011
  store volatile i32 0, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !8012
  %13 = tail call i32 @clock_mux_sel(i32 noundef 2, i32 noundef 0) #21, !dbg !8013
  ret void, !dbg !8014
}

; Function Attrs: optsize
declare dso_local i32 @clock_mux_sel(i32 noundef, i32 noundef) local_unnamed_addr #2 section ".tcm_code"

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_DEV_SWITCH_TO_HIGH_FQ() local_unnamed_addr #0 section ".tcm_code" !dbg !8015 {
  %1 = load i32, i32* @SFI_CLK_SWITCH_MISC_CTL_BACKUP, align 4, !dbg !8016
  %2 = icmp eq i32 %1, 0, !dbg !8018
  br i1 %2, label %4, label %3, !dbg !8019

3:                                                ; preds = %0
  store volatile i32 %1, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !8020
  br label %4, !dbg !8022

4:                                                ; preds = %3, %0
  %5 = load i32, i32* @SFI_CLK_SWITCH_DLY_CTL_3_BACKUP, align 4, !dbg !8023
  %6 = icmp eq i32 %5, 0, !dbg !8025
  br i1 %6, label %8, label %7, !dbg !8026

7:                                                ; preds = %4
  store volatile i32 %5, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !8027
  br label %8, !dbg !8029

8:                                                ; preds = %7, %4
  %9 = tail call i32 @clock_mux_sel(i32 noundef 2, i32 noundef 7) #21, !dbg !8030
  ret void, !dbg !8031
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @ust_get_current_time() local_unnamed_addr #9 section ".tcm_code" !dbg !8032 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8034, metadata !DIExpression()), !dbg !8035
  ret i32 0, !dbg !8036
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_current_32K_counter() local_unnamed_addr #9 section ".ram_code" !dbg !8037 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8039, metadata !DIExpression()), !dbg !8040
  ret i32 0, !dbg !8041
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ust_busy_wait(i32 noundef %0) local_unnamed_addr #0 section ".ram_code" !dbg !8042 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8044, metadata !DIExpression()), !dbg !8045
  %2 = tail call i32 @hal_gpt_delay_us(i32 noundef %0) #21, !dbg !8046
  ret void, !dbg !8047
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SaveAndSetIRQMask() local_unnamed_addr #0 section ".ram_code" !dbg !8048 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !8051
  call void @llvm.dbg.value(metadata i32 %1, metadata !8050, metadata !DIExpression()), !dbg !8052
  ret i32 %1, !dbg !8053
}

; Function Attrs: noinline nounwind optsize
define dso_local void @RestoreIRQMask(i32 noundef %0) local_unnamed_addr #0 section ".ram_code" !dbg !8054 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8056, metadata !DIExpression()), !dbg !8057
  tail call void @restore_interrupt_mask(i32 noundef %0) #21, !dbg !8058
  ret void, !dbg !8059
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SF_DAL_UnlockBlock_None(i8* nocapture readnone %0) #9 section ".ram_code" !dbg !8060 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !8062, metadata !DIExpression()), !dbg !8063
  ret i32 0, !dbg !8064
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @sfi_60qbit_test() local_unnamed_addr #9 section ".ram_code" !dbg !8065 {
  ret i32 0, !dbg !8068
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @CompareData(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #11 section ".ram_code" !dbg !8069 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8073, metadata !DIExpression()), !dbg !8088
  call void @llvm.dbg.value(metadata i8* %1, metadata !8074, metadata !DIExpression()), !dbg !8088
  call void @llvm.dbg.value(metadata i32 %2, metadata !8075, metadata !DIExpression()), !dbg !8088
  %4 = ptrtoint i8* %0 to i32, !dbg !8089
  %5 = ptrtoint i8* %1 to i32
  %6 = or i32 %5, %4, !dbg !8090
  %7 = and i32 %6, 3, !dbg !8090
  %8 = icmp eq i32 %7, 0, !dbg !8090
  br i1 %8, label %9, label %26, !dbg !8090

9:                                                ; preds = %3
  %10 = bitcast i8* %0 to i32*, !dbg !8091
  call void @llvm.dbg.value(metadata i32* %10, metadata !8077, metadata !DIExpression()), !dbg !8092
  %11 = bitcast i8* %1 to i32*, !dbg !8093
  call void @llvm.dbg.value(metadata i32* %11, metadata !8080, metadata !DIExpression()), !dbg !8092
  call void @llvm.dbg.value(metadata i32 0, metadata !8076, metadata !DIExpression()), !dbg !8088
  call void @llvm.dbg.value(metadata i32 0, metadata !8076, metadata !DIExpression()), !dbg !8088
  %12 = icmp ult i32 %2, 4, !dbg !8094
  br i1 %12, label %65, label %13, !dbg !8097

13:                                               ; preds = %9
  %14 = lshr i32 %2, 2
  br label %15, !dbg !8097

15:                                               ; preds = %15, %13
  %16 = phi i32 [ 0, %13 ], [ %22, %15 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !8076, metadata !DIExpression()), !dbg !8088
  %17 = getelementptr inbounds i32, i32* %10, i32 %16, !dbg !8098
  %18 = load i32, i32* %17, align 4, !dbg !8098
  %19 = getelementptr inbounds i32, i32* %11, i32 %16, !dbg !8101
  %20 = load i32, i32* %19, align 4, !dbg !8101
  %21 = icmp eq i32 %18, %20, !dbg !8102
  %22 = add nuw nsw i32 %16, 1, !dbg !8103
  call void @llvm.dbg.value(metadata i32 %22, metadata !8076, metadata !DIExpression()), !dbg !8088
  %23 = xor i1 %21, true, !dbg !8104
  %24 = icmp eq i32 %22, %14
  %25 = select i1 %23, i1 true, i1 %24, !dbg !8104
  call void @llvm.dbg.value(metadata i32 %22, metadata !8076, metadata !DIExpression()), !dbg !8088
  br i1 %25, label %59, label %15, !dbg !8104, !llvm.loop !8105

26:                                               ; preds = %3
  %27 = and i32 %6, 1, !dbg !8107
  %28 = icmp eq i32 %27, 0, !dbg !8107
  br i1 %28, label %31, label %29, !dbg !8107

29:                                               ; preds = %26
  call void @llvm.dbg.value(metadata i32 0, metadata !8076, metadata !DIExpression()), !dbg !8088
  %30 = icmp eq i32 %2, 0, !dbg !8108
  br i1 %30, label %65, label %48, !dbg !8111

31:                                               ; preds = %26
  %32 = bitcast i8* %0 to i16*, !dbg !8112
  call void @llvm.dbg.value(metadata i16* %32, metadata !8081, metadata !DIExpression()), !dbg !8113
  %33 = bitcast i8* %1 to i16*, !dbg !8114
  call void @llvm.dbg.value(metadata i16* %33, metadata !8084, metadata !DIExpression()), !dbg !8113
  call void @llvm.dbg.value(metadata i32 0, metadata !8076, metadata !DIExpression()), !dbg !8088
  call void @llvm.dbg.value(metadata i32 0, metadata !8076, metadata !DIExpression()), !dbg !8088
  %34 = icmp ult i32 %2, 2, !dbg !8115
  br i1 %34, label %65, label %35, !dbg !8118

35:                                               ; preds = %31
  %36 = lshr i32 %2, 1
  br label %37, !dbg !8118

37:                                               ; preds = %37, %35
  %38 = phi i32 [ 0, %35 ], [ %44, %37 ]
  call void @llvm.dbg.value(metadata i32 %38, metadata !8076, metadata !DIExpression()), !dbg !8088
  %39 = getelementptr inbounds i16, i16* %32, i32 %38, !dbg !8119
  %40 = load i16, i16* %39, align 2, !dbg !8119
  %41 = getelementptr inbounds i16, i16* %33, i32 %38, !dbg !8122
  %42 = load i16, i16* %41, align 2, !dbg !8122
  %43 = icmp eq i16 %40, %42, !dbg !8123
  %44 = add nuw nsw i32 %38, 1, !dbg !8124
  call void @llvm.dbg.value(metadata i32 %44, metadata !8076, metadata !DIExpression()), !dbg !8088
  %45 = xor i1 %43, true, !dbg !8125
  %46 = icmp eq i32 %44, %36
  %47 = select i1 %45, i1 true, i1 %46, !dbg !8125
  call void @llvm.dbg.value(metadata i32 %44, metadata !8076, metadata !DIExpression()), !dbg !8088
  br i1 %47, label %61, label %37, !dbg !8125, !llvm.loop !8126

48:                                               ; preds = %29, %48
  %49 = phi i32 [ %55, %48 ], [ 0, %29 ]
  call void @llvm.dbg.value(metadata i32 %49, metadata !8076, metadata !DIExpression()), !dbg !8088
  %50 = getelementptr inbounds i8, i8* %0, i32 %49, !dbg !8128
  %51 = load i8, i8* %50, align 1, !dbg !8128
  %52 = getelementptr inbounds i8, i8* %1, i32 %49, !dbg !8131
  %53 = load i8, i8* %52, align 1, !dbg !8131
  %54 = icmp eq i8 %51, %53, !dbg !8132
  %55 = add nuw i32 %49, 1, !dbg !8133
  call void @llvm.dbg.value(metadata i32 %55, metadata !8076, metadata !DIExpression()), !dbg !8088
  %56 = xor i1 %54, true, !dbg !8134
  %57 = icmp eq i32 %55, %2
  %58 = select i1 %56, i1 true, i1 %57, !dbg !8134
  call void @llvm.dbg.value(metadata i32 %55, metadata !8076, metadata !DIExpression()), !dbg !8088
  br i1 %58, label %63, label %48, !dbg !8134, !llvm.loop !8135

59:                                               ; preds = %15
  %60 = xor i1 %21, true, !dbg !8137
  br label %65, !dbg !8137

61:                                               ; preds = %37
  %62 = xor i1 %43, true, !dbg !8137
  br label %65, !dbg !8137

63:                                               ; preds = %48
  %64 = xor i1 %54, true, !dbg !8137
  br label %65, !dbg !8137

65:                                               ; preds = %63, %61, %59, %29, %31, %9
  %66 = phi i1 [ false, %9 ], [ false, %31 ], [ false, %29 ], [ %60, %59 ], [ %62, %61 ], [ %64, %63 ], !dbg !8088
  ret i1 %66, !dbg !8137
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Flash_ProgramData(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 section ".ram_code" !dbg !8138 {
  %4 = alloca i8*, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !8142, metadata !DIExpression()), !dbg !8153
  call void @llvm.dbg.value(metadata i8* %1, metadata !8143, metadata !DIExpression()), !dbg !8153
  call void @llvm.dbg.value(metadata i32 %2, metadata !8144, metadata !DIExpression()), !dbg !8153
  %6 = load %struct.SF_MTD_Data*, %struct.SF_MTD_Data** bitcast (i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2) to %struct.SF_MTD_Data**), align 4, !dbg !8154
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %6, metadata !8145, metadata !DIExpression()), !dbg !8153
  call void @llvm.dbg.value(metadata i8* %0, metadata !8146, metadata !DIExpression()), !dbg !8153
  %7 = bitcast i8** %4 to i8*, !dbg !8155
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #23, !dbg !8155
  call void @llvm.dbg.value(metadata i8* %1, metadata !8147, metadata !DIExpression()), !dbg !8153
  store i8* %1, i8** %4, align 4, !dbg !8156
  call void @llvm.dbg.value(metadata i32 0, metadata !8148, metadata !DIExpression()), !dbg !8153
  %8 = bitcast i32* %5 to i8*, !dbg !8157
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #23, !dbg !8157
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #22, !dbg !8158
  %9 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 21, !dbg !8159
  store i8 1, i8* %9, align 4, !dbg !8160
  call void @llvm.dbg.value(metadata i32 %2, metadata !8144, metadata !DIExpression()), !dbg !8153
  call void @llvm.dbg.value(metadata i8* %0, metadata !8146, metadata !DIExpression()), !dbg !8153
  %10 = icmp eq i32 %2, 0, !dbg !8161
  br i1 %10, label %73, label %11, !dbg !8162

11:                                               ; preds = %3
  %12 = ptrtoint i8* %0 to i32, !dbg !8163
  call void @llvm.dbg.value(metadata i32 %12, metadata !8146, metadata !DIExpression()), !dbg !8153
  %13 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 24
  %14 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 22
  %15 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 13
  %16 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 23
  %17 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 12
  br label %18, !dbg !8162

18:                                               ; preds = %11, %66
  %19 = phi i32 [ %2, %11 ], [ %70, %66 ]
  %20 = phi i32 [ %12, %11 ], [ %71, %66 ]
  call void @llvm.dbg.value(metadata i32 %19, metadata !8144, metadata !DIExpression()), !dbg !8153
  call void @llvm.dbg.value(metadata i32 %20, metadata !8146, metadata !DIExpression()), !dbg !8153
  %21 = load i32, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !8164
  %22 = shl i32 %21, 1, !dbg !8166
  %23 = add i32 %22, -1, !dbg !8167
  %24 = and i32 %23, %20, !dbg !8168
  %25 = sub i32 %22, %24, !dbg !8169
  %26 = icmp ugt i32 %19, %25, !dbg !8170
  %27 = select i1 %26, i32 %25, i32 %19, !dbg !8171
  call void @llvm.dbg.value(metadata i32 %27, metadata !8150, metadata !DIExpression()), !dbg !8153
  call void @llvm.dbg.value(metadata i32 %27, metadata !8149, metadata !DIExpression()), !dbg !8153
  store i32 %27, i32* %5, align 4, !dbg !8172
  %28 = load i32, i32* %13, align 4, !dbg !8173
  %29 = and i32 %28, 16, !dbg !8175
  %30 = icmp eq i32 %29, 0, !dbg !8175
  br i1 %30, label %31, label %32, !dbg !8176

31:                                               ; preds = %18
  call void @SF_DAL_Dev_WriteEnable(%struct.SF_MTD_Data* noundef nonnull %6) #22, !dbg !8177
  br label %32, !dbg !8179

32:                                               ; preds = %31, %18
  %33 = load i8, i8* %14, align 1, !dbg !8180
  %34 = icmp eq i8 %33, 4, !dbg !8182
  %35 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %15, align 4, !dbg !8183
  %36 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %35, i32 0, i32 0, !dbg !8183
  %37 = load i8, i8* %36, align 1, !dbg !8183
  %38 = zext i8 %37 to i32, !dbg !8183
  br i1 %34, label %39, label %43, !dbg !8184

39:                                               ; preds = %32
  call void @llvm.dbg.value(metadata i8** %4, metadata !8147, metadata !DIExpression(DW_OP_deref)), !dbg !8153
  call void @llvm.dbg.value(metadata i32* %5, metadata !8149, metadata !DIExpression(DW_OP_deref)), !dbg !8153
  %40 = call i32 @SFI_GPRAM_Write_C1A4(i32 noundef %38, i32 noundef %20, i8** noundef nonnull %4, i32* noundef nonnull %5) #21, !dbg !8185
  call void @llvm.dbg.value(metadata i32 %40, metadata !8148, metadata !DIExpression()), !dbg !8153
  %41 = load i8*, i8** %4, align 4, !dbg !8187
  call void @llvm.dbg.value(metadata i8* %41, metadata !8147, metadata !DIExpression()), !dbg !8153
  %42 = load i32, i32* %5, align 4, !dbg !8188
  call void @llvm.dbg.value(metadata i32 %42, metadata !8149, metadata !DIExpression()), !dbg !8153
  call void @SFI_GPRAM_Write(i32 noundef 8, i8* noundef %41, i32 noundef %42) #21, !dbg !8189
  br label %47, !dbg !8190

43:                                               ; preds = %32
  %44 = call i32 @SFI_GPRAM_Write_C1A3(i32 noundef %38, i32 noundef %20) #21, !dbg !8191
  call void @llvm.dbg.value(metadata i32 %44, metadata !8148, metadata !DIExpression()), !dbg !8153
  %45 = load i8*, i8** %4, align 4, !dbg !8193
  call void @llvm.dbg.value(metadata i8* %45, metadata !8147, metadata !DIExpression()), !dbg !8153
  %46 = load i32, i32* %5, align 4, !dbg !8194
  call void @llvm.dbg.value(metadata i32 %46, metadata !8149, metadata !DIExpression()), !dbg !8153
  call void @SFI_GPRAM_Write(i32 noundef 4, i8* noundef %45, i32 noundef %46) #21, !dbg !8195
  br label %47

47:                                               ; preds = %43, %39
  %48 = phi i32 [ %40, %39 ], [ %44, %43 ], !dbg !8183
  call void @llvm.dbg.value(metadata i32 %48, metadata !8148, metadata !DIExpression()), !dbg !8153
  %49 = call i32 @SaveAndSetIRQMask() #22, !dbg !8196
  call void @llvm.dbg.value(metadata i32 %49, metadata !8152, metadata !DIExpression()), !dbg !8153
  %50 = load i8, i8* %14, align 1, !dbg !8197
  %51 = zext i8 %50 to i32, !dbg !8198
  %52 = add i32 %27, 1, !dbg !8199
  %53 = add i32 %52, %51, !dbg !8200
  store volatile i32 %53, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !8201
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !8202
  store volatile i32 %48, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !8203
  call void @SF_DAL_FLAG_BUSY_SET() #22, !dbg !8204
  %54 = load i16, i16* %16, align 2, !dbg !8205
  call void @SFI_MacEnable(i16 noundef zeroext %54) #21, !dbg !8206
  %55 = load i16, i16* %16, align 2, !dbg !8207
  call void @SFI_MacWaitReady(i16 noundef zeroext %55) #21, !dbg !8208
  call void @RestoreIRQMask(i32 noundef %49) #22, !dbg !8209
  br label %56, !dbg !8210

56:                                               ; preds = %56, %47
  %57 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %15, align 4, !dbg !8211
  %58 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %57, i32 0, i32 16, !dbg !8213
  %59 = load i8, i8* %58, align 1, !dbg !8213
  %60 = call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %6, i8 noundef zeroext %59) #22, !dbg !8214
  call void @llvm.dbg.value(metadata i32 %60, metadata !8151, metadata !DIExpression()), !dbg !8153
  %61 = load i8*, i8** %17, align 4, !dbg !8215
  %62 = load i8, i8* %61, align 1, !dbg !8217
  %63 = zext i8 %62 to i32, !dbg !8217
  %64 = and i32 %60, %63, !dbg !8218
  %65 = icmp eq i32 %64, 0, !dbg !8219
  br i1 %65, label %66, label %56, !dbg !8220, !llvm.loop !8221

66:                                               ; preds = %56
  call void @SF_DAL_FLAG_BUSY_CLR() #22, !dbg !8223
  %67 = load i32, i32* %5, align 4, !dbg !8224
  call void @llvm.dbg.value(metadata i32 %67, metadata !8149, metadata !DIExpression()), !dbg !8153
  %68 = load i8*, i8** %4, align 4, !dbg !8225
  call void @llvm.dbg.value(metadata i8* %68, metadata !8147, metadata !DIExpression()), !dbg !8153
  %69 = getelementptr inbounds i8, i8* %68, i32 %67, !dbg !8225
  call void @llvm.dbg.value(metadata i8* %69, metadata !8147, metadata !DIExpression()), !dbg !8153
  store i8* %69, i8** %4, align 4, !dbg !8225
  %70 = sub i32 %19, %27, !dbg !8226
  call void @llvm.dbg.value(metadata i32 %70, metadata !8144, metadata !DIExpression()), !dbg !8153
  %71 = add i32 %27, %20, !dbg !8227
  call void @llvm.dbg.value(metadata i32 %71, metadata !8146, metadata !DIExpression()), !dbg !8153
  %72 = icmp eq i32 %70, 0, !dbg !8161
  br i1 %72, label %73, label %18, !dbg !8162, !llvm.loop !8228

73:                                               ; preds = %66, %3
  store i8 0, i8* %9, align 4, !dbg !8230
  call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #22, !dbg !8231
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #23, !dbg !8232
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #23, !dbg !8232
  ret void, !dbg !8232
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* nocapture readnone %0) local_unnamed_addr #0 section ".ram_code" !dbg !8233 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !8237, metadata !DIExpression()), !dbg !8239
  br label %2, !dbg !8240

2:                                                ; preds = %2, %1
  %3 = tail call i32 @retrieve_MTD_lock() #22, !dbg !8241
  call void @llvm.dbg.value(metadata i32 %3, metadata !8238, metadata !DIExpression()), !dbg !8239
  %4 = icmp eq i32 %3, 0, !dbg !8243
  br i1 %4, label %5, label %2, !dbg !8244, !llvm.loop !8245

5:                                                ; preds = %2
  ret void, !dbg !8247
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_WriteEnable(%struct.SF_MTD_Data* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !8248 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !8250, metadata !DIExpression()), !dbg !8251
  %2 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !8252
  %3 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %2, align 4, !dbg !8252
  %4 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %3, i32 0, i32 1, !dbg !8253
  %5 = load i8, i8* %4, align 1, !dbg !8253
  %6 = zext i8 %5 to i32, !dbg !8254
  tail call void @SF_DAL_Dev_Command(%struct.SF_MTD_Data* noundef %0, i32 noundef %6, i8 noundef zeroext 1) #22, !dbg !8255
  ret void, !dbg !8256
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_FLAG_BUSY_SET() local_unnamed_addr #0 section ".ram_code" !dbg !8257 {
  %1 = tail call i32 @SaveAndSetIRQMask() #22, !dbg !8260
  call void @llvm.dbg.value(metadata i32 %1, metadata !8259, metadata !DIExpression()), !dbg !8261
  store i8 1, i8* @NOR_FLASH_BUSY, align 1, !dbg !8262
  tail call void @RestoreIRQMask(i32 noundef %1) #22, !dbg !8263
  ret void, !dbg !8264
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #0 section ".ram_code" !dbg !8265 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !8269, metadata !DIExpression()), !dbg !8273
  call void @llvm.dbg.value(metadata i8 %1, metadata !8270, metadata !DIExpression()), !dbg !8273
  %3 = tail call i32 @SaveAndSetIRQMask() #22, !dbg !8274
  call void @llvm.dbg.value(metadata i32 %3, metadata !8271, metadata !DIExpression()), !dbg !8273
  %4 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !8275
  %5 = load i16, i16* %4, align 2, !dbg !8275
  tail call void @SFI_MacEnable(i16 noundef zeroext %5) #21, !dbg !8276
  %6 = zext i8 %1 to i32, !dbg !8277
  store volatile i32 %6, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !8278
  store volatile i32 1, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !8279
  store volatile i32 1, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !8280
  %7 = load i16, i16* %4, align 2, !dbg !8281
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %7) #21, !dbg !8282
  %8 = load volatile i32, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !8283
  %9 = lshr i32 %8, 8, !dbg !8284
  %10 = and i32 %9, 255, !dbg !8285
  call void @llvm.dbg.value(metadata i32 %10, metadata !8272, metadata !DIExpression()), !dbg !8273
  tail call void @RestoreIRQMask(i32 noundef %3) #22, !dbg !8286
  ret i32 %10, !dbg !8287
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_FLAG_BUSY_CLR() local_unnamed_addr #0 section ".ram_code" !dbg !8288 {
  %1 = tail call i32 @SaveAndSetIRQMask() #22, !dbg !8291
  call void @llvm.dbg.value(metadata i32 %1, metadata !8290, metadata !DIExpression()), !dbg !8292
  store i8 0, i8* @NOR_FLASH_BUSY, align 1, !dbg !8293
  %2 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !8294
  %3 = and i32 %2, -513, !dbg !8294
  store volatile i32 %3, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !8294
  tail call void @RestoreIRQMask(i32 noundef %1) #22, !dbg !8297
  ret void, !dbg !8298
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* nocapture readnone %0) local_unnamed_addr #0 section ".ram_code" !dbg !8299 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !8301, metadata !DIExpression()), !dbg !8303
  %2 = tail call i32 @SaveAndSetIRQMask() #22, !dbg !8304
  call void @llvm.dbg.value(metadata i32 %2, metadata !8302, metadata !DIExpression()), !dbg !8303
  %3 = load i1, i1* @MTDMutex, align 4, !dbg !8305
  br i1 %3, label %4, label %5, !dbg !8307

4:                                                ; preds = %1
  store i1 false, i1* @MTDMutex, align 4, !dbg !8308
  tail call void @RestoreIRQMask(i32 noundef %2) #22, !dbg !8310
  ret void, !dbg !8311

5:                                                ; preds = %1
  tail call void @RestoreIRQMask(i32 noundef %2) #22, !dbg !8312
  tail call void @Flash_ReturnReady() #22, !dbg !8314
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.125, i32 0, i32 0), i32 noundef 1449, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.SF_DAL_FreeDevLock, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.126, i32 0, i32 0)) #24, !dbg !8314
  unreachable, !dbg !8314
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Flash_ReturnReady() local_unnamed_addr #0 section ".ram_code" !dbg !8318 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* null, metadata !8320, metadata !DIExpression()), !dbg !8325
  %1 = tail call i32 @SaveAndSetIRQMask() #22, !dbg !8326
  call void @llvm.dbg.value(metadata i32 %1, metadata !8322, metadata !DIExpression()), !dbg !8325
  %2 = tail call i32 @get_NOR_init_status() #21, !dbg !8327
  %3 = icmp eq i32 %2, 0, !dbg !8329
  br i1 %3, label %4, label %125, !dbg !8330

4:                                                ; preds = %0
  store i32 0, i32* @gNOR_ReturnReadyBegin, align 4, !dbg !8331
  %5 = load %struct.SF_MTD_Data*, %struct.SF_MTD_Data** bitcast (i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2) to %struct.SF_MTD_Data**), align 4, !dbg !8332
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %5, metadata !8320, metadata !DIExpression()), !dbg !8325
  %6 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 0, !dbg !8334
  %7 = load i32, i32* %6, align 4, !dbg !8334
  %8 = xor i32 %7, -1, !dbg !8334
  %9 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 5, !dbg !8334
  %10 = load %struct.vdma_config_t*, %struct.vdma_config_t** %9, align 4, !dbg !8334
  %11 = ptrtoint %struct.vdma_config_t* %10 to i32, !dbg !8334
  %12 = icmp eq i32 %8, %11, !dbg !8334
  br i1 %12, label %14, label %13, !dbg !8337

13:                                               ; preds = %4
  tail call void @Flash_ReturnReady() #22, !dbg !8338
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.125, i32 0, i32 0), i32 noundef 1069, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.Flash_ReturnReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.126, i32 0, i32 0)) #24, !dbg !8338
  unreachable, !dbg !8338

14:                                               ; preds = %4
  %15 = load i32, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !8340
  %16 = icmp ult i32 %15, 16, !dbg !8342
  br i1 %16, label %17, label %34, !dbg !8343

17:                                               ; preds = %14
  %18 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 21, !dbg !8344
  %19 = load i8, i8* %18, align 4, !dbg !8344
  %20 = icmp eq i8 %19, 1, !dbg !8345
  br i1 %20, label %21, label %34, !dbg !8346

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 13
  %23 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 12
  br label %24, !dbg !8347

24:                                               ; preds = %21, %24
  %25 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !8349
  %26 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %25, i32 0, i32 16, !dbg !8351
  %27 = load i8, i8* %26, align 1, !dbg !8351
  %28 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %5, i8 noundef zeroext %27) #22, !dbg !8352
  call void @llvm.dbg.value(metadata i32 %28, metadata !8321, metadata !DIExpression()), !dbg !8325
  %29 = load i8*, i8** %23, align 4, !dbg !8353
  %30 = load i8, i8* %29, align 1, !dbg !8355
  %31 = zext i8 %30 to i32, !dbg !8355
  %32 = and i32 %28, %31, !dbg !8356
  %33 = icmp eq i32 %32, 0, !dbg !8357
  br i1 %33, label %34, label %24, !dbg !8358, !llvm.loop !8359

34:                                               ; preds = %24, %17, %14
  %35 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !8361, !range !3203
  %36 = icmp ne i8 %35, 0, !dbg !8361
  %37 = load i8, i8* @NOR_FLASH_BUSY, align 1
  %38 = icmp eq i8 %37, 0
  %39 = select i1 %36, i1 true, i1 %38, !dbg !8363
  br i1 %39, label %116, label %40, !dbg !8363

40:                                               ; preds = %34
  %41 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 13, !dbg !8364
  %42 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %41, align 4, !dbg !8364
  %43 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %42, i32 0, i32 16, !dbg !8366
  %44 = load i8, i8* %43, align 1, !dbg !8366
  %45 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %5, i8 noundef zeroext %44) #22, !dbg !8367
  call void @llvm.dbg.value(metadata i32 %45, metadata !8321, metadata !DIExpression()), !dbg !8325
  %46 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 12, !dbg !8368
  %47 = load i8*, i8** %46, align 4, !dbg !8368
  %48 = load i8, i8* %47, align 1, !dbg !8370
  %49 = zext i8 %48 to i32, !dbg !8370
  %50 = and i32 %45, %49, !dbg !8371
  %51 = icmp eq i32 %50, 0, !dbg !8372
  br i1 %51, label %85, label %52, !dbg !8373

52:                                               ; preds = %40
  tail call void @SF_DAL_Dev_Suspend(%struct.SF_MTD_Data* noundef nonnull %5) #22, !dbg !8374
  br label %53, !dbg !8376

53:                                               ; preds = %53, %52
  %54 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %41, align 4, !dbg !8377
  %55 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %54, i32 0, i32 16, !dbg !8379
  %56 = load i8, i8* %55, align 1, !dbg !8379
  %57 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %5, i8 noundef zeroext %56) #22, !dbg !8380
  call void @llvm.dbg.value(metadata i32 %57, metadata !8321, metadata !DIExpression()), !dbg !8325
  %58 = load i8*, i8** %46, align 4, !dbg !8381
  %59 = load i8, i8* %58, align 1, !dbg !8383
  %60 = zext i8 %59 to i32, !dbg !8383
  %61 = and i32 %57, %60, !dbg !8384
  %62 = icmp eq i32 %61, 0, !dbg !8385
  br i1 %62, label %63, label %53, !dbg !8386, !llvm.loop !8387

63:                                               ; preds = %53
  %64 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 24, !dbg !8389
  %65 = load i32, i32* %64, align 4, !dbg !8389
  %66 = and i32 %65, 4, !dbg !8391
  %67 = icmp eq i32 %66, 0, !dbg !8391
  br i1 %67, label %84, label %68, !dbg !8392

68:                                               ; preds = %63
  %69 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 21, !dbg !8393
  %70 = load i8, i8* %69, align 4, !dbg !8393
  %71 = icmp eq i8 %70, 2, !dbg !8394
  br i1 %71, label %72, label %84, !dbg !8395

72:                                               ; preds = %68
  store volatile i32 6, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !8396
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !8398
  store volatile i32 1, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !8399
  %73 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 23, !dbg !8400
  %74 = load i16, i16* %73, align 2, !dbg !8400
  tail call void @SFI_MacEnable(i16 noundef zeroext %74) #21, !dbg !8401
  %75 = load i16, i16* %73, align 2, !dbg !8402
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %75) #21, !dbg !8403
  store volatile i32 -1, i32* inttoptr (i32 -1610348540 to i32*), align 4, !dbg !8404
  store volatile i32 6, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !8405
  store volatile i32 2, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !8406
  %76 = load i16, i16* %73, align 2, !dbg !8407
  tail call void @SFI_MacEnable(i16 noundef zeroext %76) #21, !dbg !8408
  %77 = load i16, i16* %73, align 2, !dbg !8409
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %77) #21, !dbg !8410
  br label %78, !dbg !8411

78:                                               ; preds = %78, %72
  store volatile i32 5, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !8412
  store volatile i32 1, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !8414
  store volatile i32 1, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !8415
  %79 = load i16, i16* %73, align 2, !dbg !8416
  tail call void @SFI_MacEnable(i16 noundef zeroext %79) #21, !dbg !8417
  %80 = load i16, i16* %73, align 2, !dbg !8418
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %80) #21, !dbg !8419
  %81 = load volatile i32, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !8420
  call void @llvm.dbg.value(metadata i32 %81, metadata !8321, metadata !DIExpression(DW_OP_constu, 8, DW_OP_shr, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !8325
  %82 = and i32 %81, 256, !dbg !8421
  %83 = icmp eq i32 %82, 0, !dbg !8421
  br i1 %83, label %84, label %78, !dbg !8421, !llvm.loop !8422

84:                                               ; preds = %78, %68, %63
  tail call void @SF_DAL_FLAG_SUS_SET() #22, !dbg !8424
  br label %116, !dbg !8425

85:                                               ; preds = %40
  %86 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 24, !dbg !8426
  %87 = load i32, i32* %86, align 4, !dbg !8426
  %88 = and i32 %87, 2, !dbg !8429
  %89 = icmp eq i32 %88, 0, !dbg !8429
  br i1 %89, label %115, label %90, !dbg !8430

90:                                               ; preds = %85
  %91 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 3, !dbg !8431
  %92 = load %struct.anon*, %struct.anon** %91, align 4, !dbg !8431
  %93 = icmp eq %struct.anon* %92, null, !dbg !8432
  br i1 %93, label %94, label %115, !dbg !8433

94:                                               ; preds = %90
  %95 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %41, align 4, !dbg !8434
  %96 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %95, i32 0, i32 15, !dbg !8436
  %97 = load i8, i8* %96, align 1, !dbg !8436
  %98 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %5, i8 noundef zeroext %97) #22, !dbg !8437
  call void @llvm.dbg.value(metadata i32 %98, metadata !8321, metadata !DIExpression()), !dbg !8325
  %99 = load i8*, i8** %46, align 4, !dbg !8438
  %100 = getelementptr inbounds i8, i8* %99, i32 2, !dbg !8440
  %101 = load i8, i8* %100, align 1, !dbg !8440
  %102 = zext i8 %101 to i32, !dbg !8440
  %103 = and i32 %98, %102, !dbg !8441
  %104 = icmp eq i32 %103, 0, !dbg !8442
  br i1 %104, label %105, label %115, !dbg !8443

105:                                              ; preds = %94
  %106 = getelementptr inbounds i8, i8* %99, i32 3, !dbg !8444
  %107 = load i8, i8* %106, align 1, !dbg !8444
  %108 = zext i8 %107 to i32, !dbg !8444
  %109 = and i32 %98, %108, !dbg !8445
  %110 = icmp eq i32 %109, 0, !dbg !8446
  br i1 %110, label %111, label %115, !dbg !8447

111:                                              ; preds = %105
  %112 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 23, !dbg !8448
  %113 = load i16, i16* %112, align 2, !dbg !8448
  tail call void @SFI_Dev_Command(i16 noundef zeroext %113, i32 noundef 122) #21, !dbg !8450
  %114 = load i16, i16* %112, align 2, !dbg !8451
  tail call void @SFI_Dev_Command(i16 noundef zeroext %114, i32 noundef 122) #21, !dbg !8452
  br label %115, !dbg !8453

115:                                              ; preds = %94, %105, %111, %90, %85
  tail call void @SF_DAL_FLAG_BUSY_CLR() #22, !dbg !8454
  br label %116

116:                                              ; preds = %84, %115, %34
  store i32 0, i32* @gNOR_ReturnReadyEnd, align 4, !dbg !8455
  %117 = load i32, i32* @gNOR_ReturnReadyBegin, align 4, !dbg !8456
  %118 = sub i32 0, %117, !dbg !8456
  call void @llvm.dbg.value(metadata i32 %118, metadata !8323, metadata !DIExpression()), !dbg !8457
  %119 = load i32, i32* @sf_dal_flash_return_ready_max, align 4, !dbg !8458
  %120 = icmp ult i32 %119, %118, !dbg !8460
  br i1 %120, label %121, label %122, !dbg !8461

121:                                              ; preds = %116
  store i32 %118, i32* @sf_dal_flash_return_ready_max, align 4, !dbg !8462
  br label %122, !dbg !8464

122:                                              ; preds = %121, %116
  %123 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !8465
  %124 = and i32 %123, -513, !dbg !8465
  store volatile i32 %124, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !8465
  br label %125, !dbg !8468

125:                                              ; preds = %0, %122
  tail call void @RestoreIRQMask(i32 noundef %1) #22, !dbg !8325
  ret void, !dbg !8469
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_Suspend(%struct.SF_MTD_Data* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !8470 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !8472, metadata !DIExpression()), !dbg !8476
  %2 = load i32, i32* @sf_dal_resume_time, align 4, !dbg !8477
  %3 = icmp eq i32 %2, -1, !dbg !8479
  br i1 %3, label %12, label %4, !dbg !8480

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 0, metadata !8474, metadata !DIExpression()), !dbg !8476
  %5 = sub i32 0, %2, !dbg !8481
  call void @llvm.dbg.value(metadata i32 %5, metadata !8475, metadata !DIExpression()), !dbg !8476
  %6 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 19, !dbg !8483
  %7 = load i8, i8* %6, align 4, !dbg !8483
  %8 = zext i8 %7 to i32, !dbg !8485
  %9 = icmp ugt i32 %8, %5, !dbg !8486
  br i1 %9, label %10, label %12, !dbg !8487

10:                                               ; preds = %4
  %11 = add i32 %2, %8, !dbg !8488
  tail call void @DelayAWhile_UST(i32 noundef %11) #21, !dbg !8490
  br label %12, !dbg !8491

12:                                               ; preds = %4, %10, %1
  %13 = tail call i32 @SaveAndSetIRQMask() #22, !dbg !8492
  call void @llvm.dbg.value(metadata i32 %13, metadata !8473, metadata !DIExpression()), !dbg !8476
  %14 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !8493
  %15 = load i16, i16* %14, align 2, !dbg !8493
  %16 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !8494
  %17 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %16, align 4, !dbg !8494
  %18 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %17, i32 0, i32 2, !dbg !8495
  %19 = load i8, i8* %18, align 1, !dbg !8495
  %20 = zext i8 %19 to i32, !dbg !8496
  tail call void @SFI_Dev_Command(i16 noundef zeroext %15, i32 noundef %20) #21, !dbg !8497
  tail call void @RestoreIRQMask(i32 noundef %13) #22, !dbg !8498
  ret void, !dbg !8499
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_FLAG_SUS_SET() local_unnamed_addr #0 section ".ram_code" !dbg !8500 {
  %1 = tail call i32 @SaveAndSetIRQMask() #22, !dbg !8503
  call void @llvm.dbg.value(metadata i32 %1, metadata !8502, metadata !DIExpression()), !dbg !8504
  store i8 1, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !8505
  %2 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !8506
  %3 = and i32 %2, -513, !dbg !8506
  store volatile i32 %3, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !8506
  tail call void @RestoreIRQMask(i32 noundef %1) #22, !dbg !8509
  ret void, !dbg !8510
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_Command(%struct.SF_MTD_Data* nocapture noundef readonly %0, i32 noundef %1, i8 noundef zeroext %2) local_unnamed_addr #0 section ".ram_code" !dbg !8511 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !8515, metadata !DIExpression()), !dbg !8519
  call void @llvm.dbg.value(metadata i32 %1, metadata !8516, metadata !DIExpression()), !dbg !8519
  call void @llvm.dbg.value(metadata i8 %2, metadata !8517, metadata !DIExpression()), !dbg !8519
  %4 = tail call i32 @SaveAndSetIRQMask() #22, !dbg !8520
  call void @llvm.dbg.value(metadata i32 %4, metadata !8518, metadata !DIExpression()), !dbg !8519
  %5 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !8521
  %6 = load i16, i16* %5, align 2, !dbg !8521
  tail call void @SFI_MacEnable(i16 noundef zeroext %6) #21, !dbg !8522
  store volatile i32 %1, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !8523
  %7 = zext i8 %2 to i32, !dbg !8524
  store volatile i32 %7, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !8525
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !8526
  %8 = load i16, i16* %5, align 2, !dbg !8527
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %8) #21, !dbg !8528
  tail call void @RestoreIRQMask(i32 noundef %4) #22, !dbg !8529
  ret void, !dbg !8530
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @retrieve_MTD_lock() local_unnamed_addr #0 section ".ram_code" !dbg !8531 {
  %1 = tail call i32 @SaveAndSetIRQMask() #22, !dbg !8536
  call void @llvm.dbg.value(metadata i32 %1, metadata !8535, metadata !DIExpression()), !dbg !8537
  %2 = load i1, i1* @MTDMutex, align 4, !dbg !8538
  br i1 %2, label %4, label %3, !dbg !8540

3:                                                ; preds = %0
  store i1 true, i1* @MTDMutex, align 4, !dbg !8541
  br label %4, !dbg !8543

4:                                                ; preds = %0, %3
  %5 = phi i32 [ 0, %3 ], [ -2, %0 ], !dbg !8544
  tail call void @RestoreIRQMask(i32 noundef %1) #22, !dbg !8544
  ret i32 %5, !dbg !8545
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @Flash_CheckReady() local_unnamed_addr #0 section ".ram_code" !dbg !8546 {
  %1 = load %struct.SF_MTD_Data*, %struct.SF_MTD_Data** bitcast (i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2) to %struct.SF_MTD_Data**), align 4, !dbg !8553
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !8550, metadata !DIExpression()), !dbg !8554
  call void @llvm.dbg.value(metadata i8 0, metadata !8552, metadata !DIExpression()), !dbg !8554
  %2 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 0, !dbg !8555
  %3 = load i32, i32* %2, align 4, !dbg !8555
  %4 = xor i32 %3, -1, !dbg !8555
  %5 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 5, !dbg !8555
  %6 = load %struct.vdma_config_t*, %struct.vdma_config_t** %5, align 4, !dbg !8555
  %7 = ptrtoint %struct.vdma_config_t* %6 to i32, !dbg !8555
  %8 = icmp eq i32 %4, %7, !dbg !8555
  br i1 %8, label %10, label %9, !dbg !8558

9:                                                ; preds = %0
  tail call void @Flash_ReturnReady() #22, !dbg !8559
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.125, i32 0, i32 0), i32 noundef 1263, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.Flash_CheckReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.126, i32 0, i32 0)) #24, !dbg !8559
  unreachable, !dbg !8559

10:                                               ; preds = %0
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #22, !dbg !8561
  %11 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !8562
  %12 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !8562
  %13 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %12, i32 0, i32 16, !dbg !8563
  %14 = load i8, i8* %13, align 1, !dbg !8563
  %15 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %1, i8 noundef zeroext %14) #22, !dbg !8564
  call void @llvm.dbg.value(metadata i32 %15, metadata !8551, metadata !DIExpression()), !dbg !8554
  %16 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12, !dbg !8565
  %17 = load i8*, i8** %16, align 4, !dbg !8565
  %18 = load i8, i8* %17, align 1, !dbg !8567
  %19 = zext i8 %18 to i32, !dbg !8567
  %20 = and i32 %15, %19, !dbg !8568
  %21 = icmp eq i32 %20, 0, !dbg !8569
  br i1 %21, label %22, label %23, !dbg !8570

22:                                               ; preds = %10
  tail call void @SF_DAL_FLAG_BUSY_CLR() #22, !dbg !8571
  call void @llvm.dbg.value(metadata i8 1, metadata !8552, metadata !DIExpression()), !dbg !8554
  br label %23, !dbg !8573

23:                                               ; preds = %22, %10
  call void @llvm.dbg.value(metadata i8 poison, metadata !8552, metadata !DIExpression()), !dbg !8554
  tail call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #22, !dbg !8574
  ret i1 %21, !dbg !8575
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Flash_ResumeOperation() local_unnamed_addr #0 section ".ram_code" !dbg !8576 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !8578, metadata !DIExpression()), !dbg !8579
  %1 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !8580, !range !3203
  %2 = icmp eq i8 %1, 0, !dbg !8580
  %3 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !8580
  %4 = icmp eq i8 %3, 0, !dbg !8580
  %5 = select i1 %2, i1 true, i1 %4, !dbg !8580
  br i1 %5, label %6, label %7, !dbg !8580

6:                                                ; preds = %0
  tail call void @Flash_ReturnReady() #22, !dbg !8583
  tail call void @Flash_ReturnReady() #22, !dbg !8585
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.125, i32 0, i32 0), i32 noundef 1293, i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.Flash_ResumeOperation, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.126, i32 0, i32 0)) #24, !dbg !8585
  unreachable, !dbg !8585

7:                                                ; preds = %0
  %8 = load %struct.SF_MTD_Data*, %struct.SF_MTD_Data** bitcast (i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2) to %struct.SF_MTD_Data**), align 4, !dbg !8589
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %8, metadata !8578, metadata !DIExpression()), !dbg !8579
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef %8) #22, !dbg !8590
  ret void, !dbg !8591
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !8592 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !8594, metadata !DIExpression()), !dbg !8596
  %2 = tail call i32 @SaveAndSetIRQMask() #22, !dbg !8597
  call void @llvm.dbg.value(metadata i32 %2, metadata !8595, metadata !DIExpression()), !dbg !8596
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !8598
  %4 = load i16, i16* %3, align 2, !dbg !8598
  %5 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !8599
  %6 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %5, align 4, !dbg !8599
  %7 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %6, i32 0, i32 3, !dbg !8600
  %8 = load i8, i8* %7, align 1, !dbg !8600
  %9 = zext i8 %8 to i32, !dbg !8601
  tail call void @SFI_Dev_Command(i16 noundef zeroext %4, i32 noundef %9) #21, !dbg !8602
  %10 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 19, !dbg !8603
  %11 = load i8, i8* %10, align 4, !dbg !8603
  %12 = icmp eq i8 %11, 0, !dbg !8605
  br i1 %12, label %14, label %13, !dbg !8606

13:                                               ; preds = %1
  store i32 0, i32* @sf_dal_resume_time, align 4, !dbg !8607
  br label %14, !dbg !8609

14:                                               ; preds = %13, %1
  tail call void @SF_DAL_FLAG_SUS_CLR() #22, !dbg !8610
  tail call void @RestoreIRQMask(i32 noundef %2) #22, !dbg !8611
  ret void, !dbg !8612
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_FLAG_SUS_CLR() local_unnamed_addr #0 section ".ram_code" !dbg !8613 {
  %1 = tail call i32 @SaveAndSetIRQMask() #22, !dbg !8616
  call void @llvm.dbg.value(metadata i32 %1, metadata !8615, metadata !DIExpression()), !dbg !8617
  store i8 0, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !8618
  tail call void @RestoreIRQMask(i32 noundef %1) #22, !dbg !8619
  ret void, !dbg !8620
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Flash_SuspendOperation() local_unnamed_addr #0 section ".ram_code" !dbg !8621 {
  %1 = load %struct.SF_MTD_Data*, %struct.SF_MTD_Data** bitcast (i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2) to %struct.SF_MTD_Data**), align 4, !dbg !8625
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !8623, metadata !DIExpression()), !dbg !8626
  %2 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !8627, !range !3203
  %3 = icmp ne i8 %2, 0, !dbg !8627
  %4 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !8627
  %5 = icmp eq i8 %4, 0, !dbg !8627
  %6 = select i1 %3, i1 %5, i1 false, !dbg !8627
  br i1 %6, label %8, label %7, !dbg !8627

7:                                                ; preds = %0
  tail call void @Flash_ReturnReady() #22, !dbg !8630
  tail call void @Flash_ReturnReady() #22, !dbg !8632
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.125, i32 0, i32 0), i32 noundef 1313, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.Flash_SuspendOperation, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.126, i32 0, i32 0)) #24, !dbg !8632
  unreachable, !dbg !8632

8:                                                ; preds = %0
  %9 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 0, !dbg !8636
  %10 = load i32, i32* %9, align 4, !dbg !8636
  %11 = xor i32 %10, -1, !dbg !8636
  %12 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 5, !dbg !8636
  %13 = load %struct.vdma_config_t*, %struct.vdma_config_t** %12, align 4, !dbg !8636
  %14 = ptrtoint %struct.vdma_config_t* %13 to i32, !dbg !8636
  %15 = icmp eq i32 %11, %14, !dbg !8636
  br i1 %15, label %17, label %16, !dbg !8639

16:                                               ; preds = %8
  tail call void @Flash_ReturnReady() #22, !dbg !8640
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.125, i32 0, i32 0), i32 noundef 1315, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.Flash_SuspendOperation, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.126, i32 0, i32 0)) #24, !dbg !8640
  unreachable, !dbg !8640

17:                                               ; preds = %8
  tail call void @SF_DAL_Dev_Suspend(%struct.SF_MTD_Data* noundef nonnull %1) #22, !dbg !8642
  %18 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13
  %19 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12
  br label %20, !dbg !8643

20:                                               ; preds = %20, %17
  %21 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %18, align 4, !dbg !8644
  %22 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %21, i32 0, i32 16, !dbg !8646
  %23 = load i8, i8* %22, align 1, !dbg !8646
  %24 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %1, i8 noundef zeroext %23) #22, !dbg !8647
  call void @llvm.dbg.value(metadata i32 %24, metadata !8624, metadata !DIExpression()), !dbg !8626
  %25 = load i8*, i8** %19, align 4, !dbg !8648
  %26 = load i8, i8* %25, align 1, !dbg !8650
  %27 = zext i8 %26 to i32, !dbg !8650
  %28 = and i32 %24, %27, !dbg !8651
  %29 = icmp eq i32 %28, 0, !dbg !8652
  br i1 %29, label %30, label %20, !dbg !8653, !llvm.loop !8654

30:                                               ; preds = %20
  tail call void @SF_DAL_FLAG_SUS_SET() #22, !dbg !8656
  ret void, !dbg !8657
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SF_DAL_CreateDevLock(%struct.SF_MTD_Data* nocapture %0) local_unnamed_addr #9 section ".ram_code" !dbg !8658 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !8660, metadata !DIExpression()), !dbg !8661
  ret void, !dbg !8662
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @SF_DAL_Init_MXIC(%struct.NOR_MTD_Driver* nocapture readnone %0, %struct.SF_MTD_Data* nocapture noundef %1) local_unnamed_addr #6 !dbg !8663 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* undef, metadata !8686, metadata !DIExpression()), !dbg !8689
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !8687, metadata !DIExpression()), !dbg !8689
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12, !dbg !8690
  %4 = load i8*, i8** %3, align 4, !dbg !8690
  call void @llvm.dbg.value(metadata i8* %4, metadata !8688, metadata !DIExpression()), !dbg !8689
  store i8 1, i8* %4, align 1, !dbg !8691
  %5 = getelementptr inbounds i8, i8* %4, i32 1, !dbg !8692
  store i8 2, i8* %5, align 1, !dbg !8693
  %6 = getelementptr inbounds i8, i8* %4, i32 2, !dbg !8694
  store i8 8, i8* %6, align 1, !dbg !8695
  %7 = getelementptr inbounds i8, i8* %4, i32 3, !dbg !8696
  store i8 4, i8* %7, align 1, !dbg !8697
  %8 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !8698
  store i8 60, i8* %8, align 1, !dbg !8699
  %9 = getelementptr inbounds i8, i8* %4, i32 5, !dbg !8700
  store i8 -128, i8* %9, align 1, !dbg !8701
  %10 = getelementptr inbounds i8, i8* %4, i32 7, !dbg !8702
  store i8 96, i8* %10, align 1, !dbg !8703
  %11 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !8704
  %12 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !8704
  %13 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %12, i32 0, i32 15, !dbg !8705
  store i8 43, i8* %13, align 1, !dbg !8706
  %14 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !8707
  %15 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %14, i32 0, i32 13, !dbg !8708
  store i8 43, i8* %15, align 1, !dbg !8709
  %16 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !8710
  %17 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %16, i32 0, i32 14, !dbg !8711
  store i8 47, i8* %17, align 1, !dbg !8712
  %18 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !8713
  %19 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %18, i32 0, i32 11, !dbg !8714
  store i8 5, i8* %19, align 1, !dbg !8715
  %20 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !8716
  %21 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %20, i32 0, i32 12, !dbg !8717
  store i8 1, i8* %21, align 1, !dbg !8718
  %22 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !8719
  %23 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %22, i32 0, i32 17, !dbg !8720
  store i8 43, i8* %23, align 1, !dbg !8721
  %24 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 19, !dbg !8722
  store i8 22, i8* %24, align 4, !dbg !8723
  %25 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 20, i32 1, !dbg !8724
  %26 = load i8, i8* %25, align 1, !dbg !8724
  %27 = icmp eq i8 %26, 32, !dbg !8726
  br i1 %27, label %28, label %49, !dbg !8727

28:                                               ; preds = %2
  %29 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 20, i32 2, !dbg !8728
  %30 = load i8, i8* %29, align 1, !dbg !8728
  %31 = icmp eq i8 %30, 24, !dbg !8729
  br i1 %31, label %32, label %41, !dbg !8730

32:                                               ; preds = %28
  %33 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !8731
  %34 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %33, i32 0, i32 2, !dbg !8733
  store i8 117, i8* %34, align 1, !dbg !8734
  %35 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !8735
  %36 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %35, i32 0, i32 3, !dbg !8736
  store i8 122, i8* %36, align 1, !dbg !8737
  %37 = load i8, i8* %25, align 1, !dbg !8738
  %38 = icmp eq i8 %37, 32, !dbg !8740
  br i1 %38, label %39, label %49, !dbg !8741

39:                                               ; preds = %32
  %40 = load i8, i8* %29, align 1, !dbg !8743
  br label %41, !dbg !8743

41:                                               ; preds = %28, %39
  %42 = phi i8 [ %40, %39 ], [ %30, %28 ], !dbg !8743
  %43 = icmp eq i8 %42, 22, !dbg !8744
  br i1 %43, label %44, label %49, !dbg !8745

44:                                               ; preds = %41
  %45 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !8746
  %46 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %45, i32 0, i32 2, !dbg !8748
  store i8 117, i8* %46, align 1, !dbg !8749
  %47 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !8750
  %48 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %47, i32 0, i32 3, !dbg !8751
  store i8 122, i8* %48, align 1, !dbg !8752
  br label %49, !dbg !8753

49:                                               ; preds = %2, %44, %41, %32
  %50 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 28, !dbg !8754
  store i32 (i8*)* @SF_DAL_UnlockBlock_MXIC, i32 (i8*)** %50, align 4, !dbg !8755
  ret i32 0, !dbg !8756
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_UnlockBlock_MXIC(i8* nocapture noundef readonly %0) #0 section ".ram_code" !dbg !8757 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !8759, metadata !DIExpression()), !dbg !8763
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !8764
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !8760, metadata !DIExpression()), !dbg !8763
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #23, !dbg !8765
  %4 = getelementptr inbounds i8, i8* %0, i32 193, !dbg !8766
  %5 = load i8, i8* %4, align 1, !dbg !8768
  %6 = icmp eq i8 %5, -62, !dbg !8769
  br i1 %6, label %7, label %15, !dbg !8770

7:                                                ; preds = %1
  %8 = getelementptr inbounds i8, i8* %0, i32 194, !dbg !8771
  %9 = load i8, i8* %8, align 1, !dbg !8771
  %10 = icmp eq i8 %9, 32, !dbg !8772
  br i1 %10, label %11, label %15, !dbg !8773

11:                                               ; preds = %7
  %12 = getelementptr inbounds i8, i8* %0, i32 195, !dbg !8774
  %13 = load i8, i8* %12, align 1, !dbg !8774
  %14 = icmp eq i8 %13, 22, !dbg !8775
  br i1 %14, label %48, label %15, !dbg !8776

15:                                               ; preds = %11, %7, %1
  %16 = getelementptr inbounds i8, i8* %0, i32 198, !dbg !8777
  %17 = bitcast i8* %16 to i16*, !dbg !8777
  %18 = load i16, i16* %17, align 2, !dbg !8777
  %19 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !8778
  %20 = bitcast i8* %19 to %struct.SF_MTD_CMD**, !dbg !8778
  %21 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %20, align 4, !dbg !8778
  %22 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %21, i32 0, i32 1, !dbg !8779
  %23 = load i8, i8* %22, align 1, !dbg !8779
  %24 = zext i8 %23 to i32, !dbg !8780
  tail call void @SFI_Dev_Command(i16 noundef zeroext %18, i32 noundef %24) #21, !dbg !8781
  tail call void @SF_DAL_Dev_WaitReady_EMIINIT(%struct.SF_MTD_Data* noundef nonnull %3) #22, !dbg !8782
  %25 = load i16, i16* %17, align 2, !dbg !8783
  %26 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %20, align 4, !dbg !8784
  %27 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %26, i32 0, i32 11, !dbg !8785
  call void @llvm.dbg.value(metadata i8* %2, metadata !8762, metadata !DIExpression(DW_OP_deref)), !dbg !8763
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %25, i8* noundef nonnull %27, i8* noundef nonnull %2, i16 noundef zeroext 1, i16 noundef zeroext 1) #21, !dbg !8786
  %28 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %20, align 4, !dbg !8787
  %29 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %28, i32 0, i32 12, !dbg !8788
  %30 = load i8, i8* %29, align 1, !dbg !8788
  %31 = zext i8 %30 to i32, !dbg !8789
  call void @llvm.dbg.value(metadata i32 %31, metadata !8761, metadata !DIExpression()), !dbg !8763
  %32 = shl nuw nsw i32 %31, 8, !dbg !8790
  %33 = load i8, i8* %2, align 1, !dbg !8791
  call void @llvm.dbg.value(metadata i8 %33, metadata !8762, metadata !DIExpression()), !dbg !8763
  %34 = zext i8 %33 to i32, !dbg !8791
  %35 = getelementptr inbounds i8, i8* %0, i32 172, !dbg !8792
  %36 = bitcast i8* %35 to i8**, !dbg !8792
  %37 = load i8*, i8** %36, align 4, !dbg !8792
  %38 = getelementptr inbounds i8, i8* %37, i32 4, !dbg !8793
  %39 = load i8, i8* %38, align 1, !dbg !8793
  %40 = getelementptr inbounds i8, i8* %37, i32 5, !dbg !8794
  %41 = load i8, i8* %40, align 1, !dbg !8794
  %42 = or i8 %41, %39, !dbg !8795
  %43 = zext i8 %42 to i32, !dbg !8795
  %44 = xor i32 %43, -1, !dbg !8796
  %45 = and i32 %44, %34, !dbg !8797
  %46 = or i32 %45, %32, !dbg !8798
  call void @llvm.dbg.value(metadata i32 %46, metadata !8761, metadata !DIExpression()), !dbg !8763
  %47 = load i16, i16* %17, align 2, !dbg !8799
  call void @SFI_Dev_Command(i16 noundef zeroext %47, i32 noundef %46) #21, !dbg !8800
  call void @SF_DAL_Dev_WaitReady_EMIINIT(%struct.SF_MTD_Data* noundef nonnull %3) #22, !dbg !8801
  br label %48, !dbg !8802

48:                                               ; preds = %11, %15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #23, !dbg !8803
  ret i32 0, !dbg !8803
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_WaitReady_EMIINIT(%struct.SF_MTD_Data* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !8804 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !8806, metadata !DIExpression()), !dbg !8808
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #23, !dbg !8809
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23
  %4 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13
  %5 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 12
  br label %6, !dbg !8810

6:                                                ; preds = %6, %1
  %7 = load i16, i16* %3, align 2, !dbg !8811
  %8 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %4, align 4, !dbg !8813
  %9 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %8, i32 0, i32 16, !dbg !8814
  call void @llvm.dbg.value(metadata i8* %2, metadata !8807, metadata !DIExpression(DW_OP_deref)), !dbg !8808
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %7, i8* noundef nonnull %9, i8* noundef nonnull %2, i16 noundef zeroext 1, i16 noundef zeroext 1) #21, !dbg !8815
  %10 = load i8, i8* %2, align 1, !dbg !8816
  call void @llvm.dbg.value(metadata i8 %10, metadata !8807, metadata !DIExpression()), !dbg !8808
  %11 = load i8*, i8** %5, align 4, !dbg !8817
  %12 = load i8, i8* %11, align 1, !dbg !8818
  %13 = and i8 %12, %10, !dbg !8819
  %14 = icmp eq i8 %13, 0, !dbg !8820
  br i1 %14, label %15, label %6, !dbg !8821, !llvm.loop !8822

15:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #23, !dbg !8824
  ret void, !dbg !8824
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @SF_DAL_Init_WINBOND(%struct.NOR_MTD_Driver* nocapture readnone %0, %struct.SF_MTD_Data* nocapture noundef %1) local_unnamed_addr #6 !dbg !8825 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* undef, metadata !8827, metadata !DIExpression()), !dbg !8830
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !8828, metadata !DIExpression()), !dbg !8830
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12, !dbg !8831
  %4 = load i8*, i8** %3, align 4, !dbg !8831
  call void @llvm.dbg.value(metadata i8* %4, metadata !8829, metadata !DIExpression()), !dbg !8830
  store i8 1, i8* %4, align 1, !dbg !8832
  %5 = getelementptr inbounds i8, i8* %4, i32 1, !dbg !8833
  store i8 2, i8* %5, align 1, !dbg !8834
  %6 = getelementptr inbounds i8, i8* %4, i32 2, !dbg !8835
  store i8 -128, i8* %6, align 1, !dbg !8836
  %7 = getelementptr inbounds i8, i8* %4, i32 3, !dbg !8837
  store i8 -128, i8* %7, align 1, !dbg !8838
  %8 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !8839
  store i8 60, i8* %8, align 1, !dbg !8840
  %9 = getelementptr inbounds i8, i8* %4, i32 5, !dbg !8841
  store i8 -128, i8* %9, align 1, !dbg !8842
  %10 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !8843
  %11 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !8843
  %12 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %11, i32 0, i32 10, !dbg !8844
  store i8 -97, i8* %12, align 1, !dbg !8845
  %13 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !8846
  %14 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %13, i32 0, i32 15, !dbg !8847
  store i8 53, i8* %14, align 1, !dbg !8848
  %15 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !8849
  %16 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %15, i32 0, i32 13, !dbg !8850
  store i8 53, i8* %16, align 1, !dbg !8851
  %17 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !8852
  %18 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %17, i32 0, i32 11, !dbg !8853
  store i8 5, i8* %18, align 1, !dbg !8854
  %19 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !8855
  %20 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %19, i32 0, i32 12, !dbg !8856
  store i8 1, i8* %20, align 1, !dbg !8857
  %21 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !8858
  %22 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %21, i32 0, i32 2, !dbg !8859
  store i8 117, i8* %22, align 1, !dbg !8860
  %23 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !8861
  %24 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %23, i32 0, i32 3, !dbg !8862
  store i8 122, i8* %24, align 1, !dbg !8863
  %25 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 19, !dbg !8864
  store i8 22, i8* %25, align 4, !dbg !8865
  %26 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 28, !dbg !8866
  store i32 (i8*)* @SF_DAL_UnlockBlock_None, i32 (i8*)** %26, align 4, !dbg !8867
  ret i32 0, !dbg !8868
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SF_DAL_Init_WINBOND_OTP(%struct.NOR_MTD_Driver* nocapture readnone %0, %struct.SF_MTD_Data* nocapture readnone %1) local_unnamed_addr #9 !dbg !8869 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* undef, metadata !8871, metadata !DIExpression()), !dbg !8873
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !8872, metadata !DIExpression()), !dbg !8873
  ret i32 0, !dbg !8874
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_Init_Common(%struct.NOR_MTD_Driver* nocapture noundef writeonly %0, %struct.SF_MTD_Data* nocapture noundef %1) local_unnamed_addr #0 !dbg !8875 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* %0, metadata !8877, metadata !DIExpression()), !dbg !8879
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !8878, metadata !DIExpression()), !dbg !8879
  %3 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 0, !dbg !8880
  store i32 (i8*, i8*)* @SF_DAL_MountDevice, i32 (i8*, i8*)** %3, align 4, !dbg !8881
  %4 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 1, !dbg !8882
  store i32 (i8*)* @SF_DAL_ShutDown, i32 (i8*)** %4, align 4, !dbg !8883
  %5 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 2, !dbg !8884
  store i8* (i8*, i32, i32)* @MapWindow, i8* (i8*, i32, i32)** %5, align 4, !dbg !8885
  %6 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 3, !dbg !8886
  store i32 (i8*, i32)* @SF_DAL_EraseBlock, i32 (i8*, i32)** %6, align 4, !dbg !8887
  %7 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 4, !dbg !8888
  store i32 (i8*, i8*, i8*, i32)* @SF_DAL_ProgramData, i32 (i8*, i8*, i8*, i32)** %7, align 4, !dbg !8889
  %8 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 5, !dbg !8890
  store i32 (i8*, i32)* @SF_DAL_NonBlockEraseBlock, i32 (i8*, i32)** %8, align 4, !dbg !8891
  %9 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 6, !dbg !8892
  store i32 (i8*, i32)* @SF_DAL_CheckDeviceReady, i32 (i8*, i32)** %9, align 4, !dbg !8893
  %10 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 7, !dbg !8894
  store i32 (i8*, i32)* @SF_DAL_SuspendErase, i32 (i8*, i32)** %10, align 4, !dbg !8895
  %11 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 8, !dbg !8896
  store i32 (i8*, i32)* @SF_DAL_ResumeErase, i32 (i8*, i32)** %11, align 4, !dbg !8897
  %12 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 9, !dbg !8898
  store i32 (i8*, i32)* null, i32 (i8*, i32)** %12, align 4, !dbg !8899
  %13 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 10, !dbg !8900
  store i32 (i8*, i32, i32, i8*, i32)* null, i32 (i8*, i32, i32, i8*, i32)** %13, align 4, !dbg !8901
  %14 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 11, !dbg !8902
  store i32 (i8*, i32*)* null, i32 (i8*, i32*)** %14, align 4, !dbg !8903
  %15 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 12, !dbg !8904
  store i32 (i8*, i8*, i32)* @SF_DAL_LockEraseBlkAddr, i32 (i8*, i8*, i32)** %15, align 4, !dbg !8905
  %16 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 13, !dbg !8906
  store i1 (i8*, i32)* null, i1 (i8*, i32)** %16, align 4, !dbg !8907
  %17 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 14, !dbg !8908
  store i32 (i8*, i32, i8*)* @SF_DAL_IOCtrl, i32 (i8*, i32, i8*)** %17, align 4, !dbg !8909
  %18 = tail call i32 @custom_get_NORFLASH_Size() #21, !dbg !8910
  %19 = icmp ugt i32 %18, 16777216, !dbg !8912
  %20 = select i1 %19, i8 4, i8 3, !dbg !8913
  %21 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 22, !dbg !8914
  store i8 %20, i8* %21, align 1, !dbg !8916
  %22 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !8917
  %23 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !8917
  %24 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %23, i32 0, i32 17, !dbg !8918
  store i8 0, i8* %24, align 1, !dbg !8919
  %25 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !8920
  %26 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %25, i32 0, i32 10, !dbg !8921
  store i8 -81, i8* %26, align 1, !dbg !8922
  %27 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !8923
  %28 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %27, i32 0, i32 9, !dbg !8924
  store i8 -97, i8* %28, align 1, !dbg !8925
  %29 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !8926
  %30 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %29, i32 0, i32 0, !dbg !8927
  store i8 2, i8* %30, align 1, !dbg !8928
  %31 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !8929
  %32 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %31, i32 0, i32 6, !dbg !8930
  store i8 32, i8* %32, align 1, !dbg !8931
  %33 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !8932
  %34 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %33, i32 0, i32 7, !dbg !8933
  store i8 82, i8* %34, align 1, !dbg !8934
  %35 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !8935
  %36 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %35, i32 0, i32 8, !dbg !8936
  store i8 -40, i8* %36, align 1, !dbg !8937
  %37 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !8938
  %38 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %37, i32 0, i32 2, !dbg !8939
  store i8 -80, i8* %38, align 1, !dbg !8940
  %39 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !8941
  %40 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %39, i32 0, i32 3, !dbg !8942
  store i8 48, i8* %40, align 1, !dbg !8943
  %41 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !8944
  %42 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %41, i32 0, i32 1, !dbg !8945
  store i8 6, i8* %42, align 1, !dbg !8946
  %43 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !8947
  %44 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %43, i32 0, i32 18, !dbg !8948
  store i8 -71, i8* %44, align 1, !dbg !8949
  %45 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !8950
  %46 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %45, i32 0, i32 19, !dbg !8951
  store i8 -85, i8* %46, align 1, !dbg !8952
  %47 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !8953
  %48 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %47, i32 0, i32 16, !dbg !8954
  store i8 5, i8* %48, align 1, !dbg !8955
  %49 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 15, !dbg !8956
  store i16 0, i16* %49, align 4, !dbg !8957
  %50 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 3, !dbg !8958
  store %struct.anon* null, %struct.anon** %50, align 4, !dbg !8959
  %51 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 2, !dbg !8960
  store %struct.anon* null, %struct.anon** %51, align 4, !dbg !8961
  %52 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 4, !dbg !8962
  store i8 0, i8* %52, align 4, !dbg !8963
  %53 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 19, !dbg !8964
  store i8 5, i8* %53, align 4, !dbg !8965
  ret i32 0, !dbg !8966
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_MountDevice(i8* nocapture noundef readonly %0, i8* nocapture noundef %1) #0 section ".ram_code" !dbg !8967 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8969, metadata !DIExpression()), !dbg !8987
  call void @llvm.dbg.value(metadata i8* %1, metadata !8970, metadata !DIExpression()), !dbg !8987
  call void @llvm.dbg.value(metadata i8* %1, metadata !8971, metadata !DIExpression()), !dbg !8987
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !8988
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !8984, metadata !DIExpression()), !dbg !8987
  call void @llvm.dbg.value(metadata i32 0, metadata !8985, metadata !DIExpression()), !dbg !8987
  %4 = bitcast i8* %1 to i32*, !dbg !8989
  store i32 0, i32* %4, align 4, !dbg !8990
  %5 = getelementptr inbounds i8, i8* %0, i32 20
  %6 = bitcast i8* %5 to %struct.vdma_config_t**
  call void @llvm.dbg.value(metadata i32 0, metadata !8985, metadata !DIExpression()), !dbg !8987
  %7 = load %struct.vdma_config_t*, %struct.vdma_config_t** %6, align 4, !dbg !8991
  %8 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %7, i32 0, i32 0, !dbg !8992
  %9 = load i32, i32* %8, align 4, !dbg !8992
  %10 = icmp eq i32 %9, 0, !dbg !8993
  br i1 %10, label %34, label %11, !dbg !8994

11:                                               ; preds = %2
  %12 = getelementptr inbounds i8, i8* %1, i32 4
  %13 = bitcast i8* %12 to [8 x i32]*
  %14 = getelementptr inbounds i8, i8* %1, i32 68
  %15 = bitcast i8* %14 to [8 x i32]*
  br label %16, !dbg !8994

16:                                               ; preds = %11, %16
  %17 = phi i32 [ %9, %11 ], [ %32, %16 ]
  %18 = phi i32 [ 0, %11 ], [ %29, %16 ]
  call void @llvm.dbg.value(metadata i32 %18, metadata !8985, metadata !DIExpression()), !dbg !8987
  %19 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i32 0, i32 %18, !dbg !8995
  store i32 %17, i32* %19, align 4, !dbg !8997
  %20 = load %struct.vdma_config_t*, %struct.vdma_config_t** %6, align 4, !dbg !8998
  %21 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %20, i32 %18, i32 1, !dbg !8999
  %22 = load i32, i32* %21, align 4, !dbg !8999
  %23 = getelementptr inbounds [8 x i32], [8 x i32]* %15, i32 0, i32 %18, !dbg !9000
  store i32 %22, i32* %23, align 4, !dbg !9001
  %24 = load %struct.vdma_config_t*, %struct.vdma_config_t** %6, align 4, !dbg !9002
  %25 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %24, i32 %18, i32 1, !dbg !9003
  %26 = load i32, i32* %25, align 4, !dbg !9003
  %27 = load i32, i32* %4, align 4, !dbg !9004
  %28 = add i32 %27, %26, !dbg !9004
  store i32 %28, i32* %4, align 4, !dbg !9004
  %29 = add i32 %18, 1, !dbg !9005
  call void @llvm.dbg.value(metadata i32 %29, metadata !8985, metadata !DIExpression()), !dbg !8987
  %30 = load %struct.vdma_config_t*, %struct.vdma_config_t** %6, align 4, !dbg !8991
  %31 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %30, i32 %29, i32 0, !dbg !8992
  %32 = load i32, i32* %31, align 4, !dbg !8992
  %33 = icmp eq i32 %32, 0, !dbg !8993
  br i1 %33, label %34, label %16, !dbg !8994, !llvm.loop !9006

34:                                               ; preds = %16, %2
  %35 = phi i32 [ 0, %2 ], [ %29, %16 ], !dbg !8987
  %36 = getelementptr inbounds i8, i8* %1, i32 100, !dbg !9008
  %37 = bitcast i8* %36 to i32*, !dbg !9008
  store i32 %35, i32* %37, align 4, !dbg !9009
  %38 = getelementptr inbounds i8, i8* %1, i32 104, !dbg !9010
  %39 = bitcast i8* %38 to i16*, !dbg !9010
  store i16 512, i16* %39, align 4, !dbg !9011
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef nonnull %3) #22, !dbg !9012
  br label %40, !dbg !9013

40:                                               ; preds = %40, %34
  %41 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef %0, i32 undef) #22, !dbg !9014
  call void @llvm.dbg.value(metadata i32 %41, metadata !8986, metadata !DIExpression()), !dbg !8987
  %42 = icmp eq i32 %41, -121, !dbg !9016
  br i1 %42, label %40, label %43, !dbg !9017, !llvm.loop !9018

43:                                               ; preds = %40
  ret i32 0, !dbg !9020
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_ShutDown(i8* nocapture noundef %0) #0 section ".ram_code" !dbg !9021 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9023, metadata !DIExpression()), !dbg !9027
  %2 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !9028
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %2, metadata !9024, metadata !DIExpression()), !dbg !9027
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #22, !dbg !9029
  %3 = getelementptr inbounds i8, i8* %0, i32 176
  %4 = bitcast i8* %3 to %struct.SF_MTD_CMD**
  %5 = getelementptr inbounds i8, i8* %0, i32 172
  %6 = bitcast i8* %5 to i8**
  br label %7, !dbg !9030

7:                                                ; preds = %25, %1
  %8 = tail call i32 @SaveAndSetIRQMask() #22, !dbg !9031
  call void @llvm.dbg.value(metadata i32 %8, metadata !9026, metadata !DIExpression()), !dbg !9027
  %9 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !9033, !range !3203
  %10 = icmp eq i8 %9, 0, !dbg !9033
  br i1 %10, label %12, label %11, !dbg !9035

11:                                               ; preds = %7
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef %2) #22, !dbg !9036
  store i32 -1, i32* @gNOR_ReturnReadyEnd, align 4, !dbg !9038
  br label %12, !dbg !9039

12:                                               ; preds = %11, %7
  %13 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %4, align 4, !dbg !9040
  %14 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %13, i32 0, i32 16, !dbg !9041
  %15 = load i8, i8* %14, align 1, !dbg !9041
  %16 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef %2, i8 noundef zeroext %15) #22, !dbg !9042
  call void @llvm.dbg.value(metadata i32 %16, metadata !9025, metadata !DIExpression()), !dbg !9027
  %17 = load i8*, i8** %6, align 4, !dbg !9043
  %18 = load i8, i8* %17, align 1, !dbg !9045
  %19 = zext i8 %18 to i32, !dbg !9045
  %20 = and i32 %16, %19, !dbg !9046
  %21 = icmp eq i32 %20, 0, !dbg !9047
  br i1 %21, label %22, label %25, !dbg !9048

22:                                               ; preds = %12
  tail call void @SF_DAL_FLAG_BUSY_CLR() #22, !dbg !9049
  tail call void @RestoreIRQMask(i32 noundef %8) #22, !dbg !9051
  %23 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !9052
  %24 = bitcast i8* %23 to i8**, !dbg !9052
  store i8* null, i8** %24, align 4, !dbg !9053
  tail call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #22, !dbg !9054
  ret i32 0, !dbg !9055

25:                                               ; preds = %12
  tail call void @RestoreIRQMask(i32 noundef %8) #22, !dbg !9056
  br label %7, !dbg !9030, !llvm.loop !9058
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_EraseBlock(i8* nocapture noundef %0, i32 noundef %1) #0 section ".ram_code" !dbg !9060 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9062, metadata !DIExpression()), !dbg !9076
  call void @llvm.dbg.value(metadata i32 %1, metadata !9063, metadata !DIExpression()), !dbg !9076
  call void @llvm.dbg.value(metadata i32 0, metadata !9064, metadata !DIExpression()), !dbg !9076
  call void @llvm.dbg.value(metadata i32 1, metadata !9068, metadata !DIExpression()), !dbg !9076
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !9077
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !9069, metadata !DIExpression()), !dbg !9076
  call void @llvm.dbg.value(metadata i32 0, metadata !9070, metadata !DIExpression()), !dbg !9076
  %4 = bitcast i8* %0 to i32*, !dbg !9078
  %5 = load i32, i32* %4, align 4, !dbg !9078
  %6 = xor i32 %5, -1, !dbg !9078
  %7 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !9078
  %8 = bitcast i8* %7 to %struct.vdma_config_t**, !dbg !9078
  %9 = load %struct.vdma_config_t*, %struct.vdma_config_t** %8, align 4, !dbg !9078
  %10 = ptrtoint %struct.vdma_config_t* %9 to i32, !dbg !9078
  %11 = icmp eq i32 %6, %10, !dbg !9078
  br i1 %11, label %13, label %12, !dbg !9081

12:                                               ; preds = %2
  tail call void @Flash_ReturnReady() #22, !dbg !9082
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.125, i32 0, i32 0), i32 noundef 2829, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.SF_DAL_EraseBlock, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.126, i32 0, i32 0)) #24, !dbg !9082
  unreachable, !dbg !9082

13:                                               ; preds = %2
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #22, !dbg !9084
  %14 = getelementptr inbounds i8, i8* %0, i32 196, !dbg !9085
  store i8 2, i8* %14, align 4, !dbg !9086
  call void @llvm.dbg.value(metadata i32 %19, metadata !9070, metadata !DIExpression()), !dbg !9076
  call void @llvm.dbg.value(metadata i32 %1, metadata !9063, metadata !DIExpression(DW_OP_constu, 16777215, DW_OP_and, DW_OP_stack_value)), !dbg !9076
  br label %15, !dbg !9087

15:                                               ; preds = %15, %13
  %16 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef %0, i32 undef) #22, !dbg !9088
  call void @llvm.dbg.value(metadata i32 %16, metadata !9064, metadata !DIExpression()), !dbg !9076
  %17 = icmp eq i32 %16, -121, !dbg !9090
  br i1 %17, label %15, label %18, !dbg !9091, !llvm.loop !9092

18:                                               ; preds = %15
  %19 = lshr i32 %1, 24, !dbg !9094
  %20 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !9095
  %21 = bitcast i8* %20 to i8**, !dbg !9095
  %22 = load i8*, i8** %21, align 4, !dbg !9095
  %23 = ptrtoint i8* %22 to i32, !dbg !9096
  %24 = tail call i32 @CMEM_BlockSize(i32 noundef %23) #21, !dbg !9097
  call void @llvm.dbg.value(metadata i32 %24, metadata !9065, metadata !DIExpression()), !dbg !9076
  call void @llvm.dbg.value(metadata i32 %24, metadata !9066, metadata !DIExpression()), !dbg !9076
  %25 = getelementptr inbounds i8, i8* %0, i32 186, !dbg !9098
  %26 = bitcast i8* %25 to i16*, !dbg !9098
  %27 = load i16, i16* %26, align 2, !dbg !9098
  %28 = zext i16 %27 to i32, !dbg !9099
  call void @llvm.dbg.value(metadata i32 %28, metadata !9071, metadata !DIExpression()), !dbg !9100
  %29 = lshr i32 %24, 10, !dbg !9101
  call void @llvm.dbg.value(metadata i32 %29, metadata !9074, metadata !DIExpression()), !dbg !9100
  %30 = and i32 %29, %28, !dbg !9102
  %31 = and i32 %24, 1024
  %32 = or i32 %30, %31, !dbg !9104
  %33 = icmp eq i32 %32, 0, !dbg !9104
  call void @llvm.dbg.value(metadata i32 0, metadata !9075, metadata !DIExpression()), !dbg !9100
  call void @llvm.dbg.value(metadata i32 %29, metadata !9074, metadata !DIExpression()), !dbg !9100
  call void @llvm.dbg.value(metadata i32 %28, metadata !9071, metadata !DIExpression()), !dbg !9100
  call void @llvm.dbg.value(metadata i32 1, metadata !9068, metadata !DIExpression()), !dbg !9076
  call void @llvm.dbg.value(metadata i32 %24, metadata !9066, metadata !DIExpression()), !dbg !9076
  br i1 %33, label %34, label %51, !dbg !9104

34:                                               ; preds = %18, %34
  %35 = phi i32 [ %48, %34 ], [ 0, %18 ]
  %36 = phi i32 [ %47, %34 ], [ %29, %18 ]
  %37 = phi i32 [ %46, %34 ], [ %28, %18 ]
  %38 = phi i32 [ %45, %34 ], [ 1, %18 ]
  %39 = phi i32 [ %44, %34 ], [ %24, %18 ]
  call void @llvm.dbg.value(metadata i32 %35, metadata !9075, metadata !DIExpression()), !dbg !9100
  call void @llvm.dbg.value(metadata i32 %36, metadata !9074, metadata !DIExpression()), !dbg !9100
  call void @llvm.dbg.value(metadata i32 %37, metadata !9071, metadata !DIExpression()), !dbg !9100
  call void @llvm.dbg.value(metadata i32 %38, metadata !9068, metadata !DIExpression()), !dbg !9076
  call void @llvm.dbg.value(metadata i32 %39, metadata !9066, metadata !DIExpression()), !dbg !9076
  %40 = and i32 %37, 1, !dbg !9105
  %41 = icmp eq i32 %40, 0, !dbg !9105
  %42 = add i32 %35, 10, !dbg !9111
  %43 = shl nuw i32 1, %42, !dbg !9111
  %44 = select i1 %41, i32 %39, i32 %43, !dbg !9111
  %45 = select i1 %41, i32 %38, i32 %36, !dbg !9111
  call void @llvm.dbg.value(metadata i32 %45, metadata !9068, metadata !DIExpression()), !dbg !9076
  call void @llvm.dbg.value(metadata i32 %44, metadata !9066, metadata !DIExpression()), !dbg !9076
  %46 = lshr i32 %37, 1, !dbg !9112
  call void @llvm.dbg.value(metadata i32 %46, metadata !9071, metadata !DIExpression()), !dbg !9100
  %47 = lshr i32 %36, 1, !dbg !9113
  call void @llvm.dbg.value(metadata i32 %47, metadata !9074, metadata !DIExpression()), !dbg !9100
  %48 = add i32 %35, 1, !dbg !9114
  call void @llvm.dbg.value(metadata i32 %48, metadata !9075, metadata !DIExpression()), !dbg !9100
  %49 = and i32 %36, 2, !dbg !9115
  %50 = icmp eq i32 %49, 0, !dbg !9115
  br i1 %50, label %34, label %51, !dbg !9116, !llvm.loop !9117

51:                                               ; preds = %34, %18
  %52 = phi i32 [ %24, %18 ], [ %44, %34 ], !dbg !9119
  %53 = phi i32 [ 1, %18 ], [ %45, %34 ], !dbg !9120
  call void @llvm.dbg.value(metadata i32 %53, metadata !9068, metadata !DIExpression()), !dbg !9076
  call void @llvm.dbg.value(metadata i32 %52, metadata !9066, metadata !DIExpression()), !dbg !9076
  switch i32 %52, label %69 [
    i32 4096, label %54
    i32 32768, label %59
    i32 65536, label %64
  ], !dbg !9121

54:                                               ; preds = %51
  %55 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !9122
  %56 = bitcast i8* %55 to %struct.SF_MTD_CMD**, !dbg !9122
  %57 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %56, align 4, !dbg !9122
  %58 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %57, i32 0, i32 6, !dbg !9124
  br label %70, !dbg !9125

59:                                               ; preds = %51
  %60 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !9126
  %61 = bitcast i8* %60 to %struct.SF_MTD_CMD**, !dbg !9126
  %62 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %61, align 4, !dbg !9126
  %63 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %62, i32 0, i32 7, !dbg !9127
  br label %70, !dbg !9128

64:                                               ; preds = %51
  %65 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !9129
  %66 = bitcast i8* %65 to %struct.SF_MTD_CMD**, !dbg !9129
  %67 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %66, align 4, !dbg !9129
  %68 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %67, i32 0, i32 8, !dbg !9130
  br label %70, !dbg !9131

69:                                               ; preds = %51
  tail call void @Flash_ReturnReady() #22, !dbg !9132
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.125, i32 0, i32 0), i32 noundef 2897, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.SF_DAL_EraseBlock, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.126, i32 0, i32 0)) #24, !dbg !9132
  unreachable, !dbg !9132

70:                                               ; preds = %54, %59, %64
  %71 = phi i8* [ %58, %54 ], [ %63, %59 ], [ %68, %64 ]
  %72 = phi %struct.SF_MTD_CMD* [ %57, %54 ], [ %62, %59 ], [ %67, %64 ]
  %73 = load i8, i8* %71, align 1, !dbg !9136
  %74 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %72, i32 0, i32 5, !dbg !9136
  store i8 %73, i8* %74, align 1, !dbg !9136
  call void @llvm.dbg.value(metadata i32 %53, metadata !9068, metadata !DIExpression()), !dbg !9076
  call void @llvm.dbg.value(metadata i32 %52, metadata !9066, metadata !DIExpression()), !dbg !9076
  %75 = trunc i32 %19 to i8, !dbg !9137
  switch i8 %75, label %96 [
    i8 -6, label %76
    i8 -5, label %81
    i8 -4, label %86
  ], !dbg !9137

76:                                               ; preds = %70
  %77 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !9138
  %78 = bitcast i8* %77 to %struct.SF_MTD_CMD**, !dbg !9138
  %79 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %78, align 4, !dbg !9138
  %80 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %79, i32 0, i32 6, !dbg !9140
  br label %91, !dbg !9141

81:                                               ; preds = %70
  %82 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !9142
  %83 = bitcast i8* %82 to %struct.SF_MTD_CMD**, !dbg !9142
  %84 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %83, align 4, !dbg !9142
  %85 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %84, i32 0, i32 7, !dbg !9143
  br label %91, !dbg !9144

86:                                               ; preds = %70
  %87 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !9145
  %88 = bitcast i8* %87 to %struct.SF_MTD_CMD**, !dbg !9145
  %89 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %88, align 4, !dbg !9145
  %90 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %89, i32 0, i32 8, !dbg !9146
  br label %91, !dbg !9147

91:                                               ; preds = %76, %81, %86
  %92 = phi i8* [ %90, %86 ], [ %85, %81 ], [ %80, %76 ]
  %93 = phi %struct.SF_MTD_CMD* [ %89, %86 ], [ %84, %81 ], [ %79, %76 ]
  %94 = load i8, i8* %92, align 1, !dbg !9148
  %95 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %93, i32 0, i32 5, !dbg !9148
  store i8 %94, i8* %95, align 1, !dbg !9148
  br label %96, !dbg !9149

96:                                               ; preds = %91, %70
  call void @llvm.dbg.value(metadata i8* undef, metadata !9067, metadata !DIExpression()), !dbg !9076
  call void @llvm.dbg.value(metadata i32 %53, metadata !9068, metadata !DIExpression()), !dbg !9076
  call void @llvm.dbg.value(metadata i32 %16, metadata !9064, metadata !DIExpression()), !dbg !9076
  %97 = icmp eq i32 %53, 0, !dbg !9149
  br i1 %97, label %111, label %98, !dbg !9152

98:                                               ; preds = %96
  %99 = load i8*, i8** %21, align 4, !dbg !9153
  call void @llvm.dbg.value(metadata i8* %99, metadata !9067, metadata !DIExpression()), !dbg !9076
  %100 = ptrtoint i8* %99 to i32, !dbg !9154
  call void @llvm.dbg.value(metadata i32 %100, metadata !9067, metadata !DIExpression()), !dbg !9076
  br label %101, !dbg !9152

101:                                              ; preds = %98, %107
  %102 = phi i32 [ %108, %107 ], [ %53, %98 ]
  %103 = phi i32 [ %109, %107 ], [ %100, %98 ]
  call void @llvm.dbg.value(metadata i32 %102, metadata !9068, metadata !DIExpression()), !dbg !9076
  call void @llvm.dbg.value(metadata i32 %103, metadata !9067, metadata !DIExpression()), !dbg !9076
  tail call void @SF_DAL_Dev_EraseBlock(%struct.SF_MTD_Data* noundef %3, i32 noundef %103) #22, !dbg !9155
  br label %104, !dbg !9157

104:                                              ; preds = %104, %101
  %105 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef %0, i32 undef) #22, !dbg !9158
  call void @llvm.dbg.value(metadata i32 %105, metadata !9064, metadata !DIExpression()), !dbg !9076
  %106 = icmp eq i32 %105, -121, !dbg !9160
  br i1 %106, label %104, label %107, !dbg !9162, !llvm.loop !9163

107:                                              ; preds = %104
  %108 = add i32 %102, -1, !dbg !9165
  call void @llvm.dbg.value(metadata i32 %108, metadata !9068, metadata !DIExpression()), !dbg !9076
  %109 = add i32 %103, %52, !dbg !9166
  call void @llvm.dbg.value(metadata i32 %109, metadata !9067, metadata !DIExpression()), !dbg !9076
  call void @llvm.dbg.value(metadata i32 %105, metadata !9064, metadata !DIExpression()), !dbg !9076
  %110 = icmp eq i32 %108, 0, !dbg !9149
  br i1 %110, label %111, label %101, !dbg !9152, !llvm.loop !9167

111:                                              ; preds = %107, %96
  %112 = phi i32 [ %16, %96 ], [ %105, %107 ], !dbg !9076
  store i8 0, i8* %14, align 4, !dbg !9169
  tail call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #22, !dbg !9170
  ret i32 %112, !dbg !9171
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_ProgramData(i8* nocapture noundef %0, i8* noundef %1, i8* noundef %2, i32 noundef %3) #0 section ".ram_code" !dbg !9172 {
  %5 = alloca i8*, align 4
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !9174, metadata !DIExpression()), !dbg !9191
  call void @llvm.dbg.value(metadata i8* %1, metadata !9175, metadata !DIExpression()), !dbg !9191
  call void @llvm.dbg.value(metadata i8* %2, metadata !9176, metadata !DIExpression()), !dbg !9191
  call void @llvm.dbg.value(metadata i32 %3, metadata !9177, metadata !DIExpression()), !dbg !9191
  %7 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !9192
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %7, metadata !9178, metadata !DIExpression()), !dbg !9191
  %8 = ptrtoint i8* %1 to i32, !dbg !9193
  call void @llvm.dbg.value(metadata i32 %8, metadata !9180, metadata !DIExpression()), !dbg !9191
  %9 = bitcast i8** %5 to i8*, !dbg !9194
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #23, !dbg !9194
  call void @llvm.dbg.value(metadata i8* %2, metadata !9181, metadata !DIExpression()), !dbg !9191
  store i8* %2, i8** %5, align 4, !dbg !9195
  call void @llvm.dbg.value(metadata i32 0, metadata !9183, metadata !DIExpression()), !dbg !9191
  %10 = bitcast i32* %6 to i8*, !dbg !9196
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #23, !dbg !9196
  %11 = bitcast i8* %0 to i32*, !dbg !9197
  %12 = load i32, i32* %11, align 4, !dbg !9197
  %13 = xor i32 %12, -1, !dbg !9197
  %14 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !9197
  %15 = bitcast i8* %14 to %struct.vdma_config_t**, !dbg !9197
  %16 = load %struct.vdma_config_t*, %struct.vdma_config_t** %15, align 4, !dbg !9197
  %17 = ptrtoint %struct.vdma_config_t* %16 to i32, !dbg !9197
  %18 = icmp eq i32 %13, %17, !dbg !9197
  br i1 %18, label %20, label %19, !dbg !9200

19:                                               ; preds = %4
  tail call void @Flash_ReturnReady() #22, !dbg !9201
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.125, i32 0, i32 0), i32 noundef 2545, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.SF_DAL_ProgramData, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.126, i32 0, i32 0)) #24, !dbg !9201
  unreachable, !dbg !9201

20:                                               ; preds = %4
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #22, !dbg !9203
  %21 = getelementptr inbounds i8, i8* %0, i32 196, !dbg !9204
  store i8 1, i8* %21, align 4, !dbg !9205
  br label %22, !dbg !9206

22:                                               ; preds = %22, %20
  %23 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef %0, i32 undef) #22, !dbg !9207
  call void @llvm.dbg.value(metadata i32 %23, metadata !9183, metadata !DIExpression()), !dbg !9191
  %24 = icmp eq i32 %23, -121, !dbg !9209
  br i1 %24, label %22, label %25, !dbg !9210, !llvm.loop !9211

25:                                               ; preds = %22
  %26 = icmp eq i32 %3, 0, !dbg !9213
  br i1 %26, label %104, label %27, !dbg !9214

27:                                               ; preds = %25
  %28 = getelementptr inbounds i8, i8* %0, i32 200
  %29 = bitcast i8* %28 to i32*
  %30 = getelementptr inbounds i8, i8* %0, i32 197
  %31 = getelementptr inbounds i8, i8* %0, i32 176
  %32 = bitcast i8* %31 to %struct.SF_MTD_CMD**
  %33 = getelementptr inbounds i8, i8* %0, i32 198
  %34 = bitcast i8* %33 to i16*
  br label %35, !dbg !9214

35:                                               ; preds = %27, %96
  %36 = phi i8* [ %99, %96 ], [ %2, %27 ], !dbg !9215
  %37 = phi i32 [ %100, %96 ], [ %3, %27 ]
  %38 = phi i32 [ %88, %96 ], [ %8, %27 ], !dbg !9191
  call void @llvm.dbg.value(metadata i32 %38, metadata !9180, metadata !DIExpression()), !dbg !9191
  call void @llvm.dbg.value(metadata i32 %37, metadata !9177, metadata !DIExpression()), !dbg !9191
  call void @llvm.dbg.value(metadata i8* %36, metadata !9181, metadata !DIExpression()), !dbg !9191
  call void @llvm.dbg.value(metadata i8* %36, metadata !9182, metadata !DIExpression()), !dbg !9191
  %39 = load i32, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !9216
  %40 = shl i32 %39, 1, !dbg !9217
  %41 = add i32 %40, -1, !dbg !9218
  %42 = and i32 %41, %38, !dbg !9219
  %43 = sub i32 %40, %42, !dbg !9220
  %44 = icmp ugt i32 %37, %43, !dbg !9221
  %45 = select i1 %44, i32 %43, i32 %37, !dbg !9222
  call void @llvm.dbg.value(metadata i32 %45, metadata !9184, metadata !DIExpression()), !dbg !9191
  call void @llvm.dbg.value(metadata i32 %45, metadata !9185, metadata !DIExpression()), !dbg !9191
  store i32 %45, i32* %6, align 4, !dbg !9223
  call void @llvm.dbg.value(metadata i8* %36, metadata !9181, metadata !DIExpression()), !dbg !9191
  %46 = ptrtoint i8* %36 to i32, !dbg !9224
  %47 = and i32 %46, 134217728, !dbg !9225
  %48 = icmp eq i32 %47, 0, !dbg !9225
  br i1 %48, label %58, label %49, !dbg !9226

49:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 0, metadata !9187, metadata !DIExpression()), !dbg !9227
  call void @llvm.dbg.value(metadata i32 %45, metadata !9185, metadata !DIExpression()), !dbg !9191
  %50 = icmp eq i32 %45, 0, !dbg !9228
  br i1 %50, label %58, label %51, !dbg !9231

51:                                               ; preds = %49, %51
  %52 = phi i32 [ %56, %51 ], [ 0, %49 ]
  call void @llvm.dbg.value(metadata i32 %52, metadata !9187, metadata !DIExpression()), !dbg !9227
  call void @llvm.dbg.value(metadata i8* %36, metadata !9181, metadata !DIExpression()), !dbg !9191
  %53 = getelementptr inbounds i8, i8* %36, i32 %52, !dbg !9232
  %54 = load i8, i8* %53, align 1, !dbg !9232
  %55 = getelementptr inbounds [128 x i8], [128 x i8]* @tmp_data_buffer, i32 0, i32 %52, !dbg !9234
  store i8 %54, i8* %55, align 1, !dbg !9235
  %56 = add nuw i32 %52, 1, !dbg !9236
  call void @llvm.dbg.value(metadata i32 %56, metadata !9187, metadata !DIExpression()), !dbg !9227
  call void @llvm.dbg.value(metadata i32 %45, metadata !9185, metadata !DIExpression()), !dbg !9191
  %57 = icmp eq i32 %56, %45, !dbg !9228
  br i1 %57, label %58, label %51, !dbg !9231, !llvm.loop !9237

58:                                               ; preds = %51, %49, %35
  %59 = phi i8* [ %36, %35 ], [ getelementptr inbounds ([128 x i8], [128 x i8]* @tmp_data_buffer, i32 0, i32 0), %49 ], [ getelementptr inbounds ([128 x i8], [128 x i8]* @tmp_data_buffer, i32 0, i32 0), %51 ], !dbg !9239
  call void @llvm.dbg.value(metadata i8* %59, metadata !9182, metadata !DIExpression()), !dbg !9191
  %60 = load i32, i32* %29, align 4, !dbg !9240
  %61 = and i32 %60, 16, !dbg !9242
  %62 = icmp eq i32 %61, 0, !dbg !9242
  br i1 %62, label %63, label %64, !dbg !9243

63:                                               ; preds = %58
  call void @SF_DAL_Dev_WriteEnable(%struct.SF_MTD_Data* noundef nonnull %7) #22, !dbg !9244
  br label %64, !dbg !9246

64:                                               ; preds = %63, %58
  %65 = load i8, i8* %30, align 1, !dbg !9247
  %66 = icmp eq i8 %65, 4, !dbg !9249
  %67 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %32, align 4, !dbg !9250
  %68 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %67, i32 0, i32 0, !dbg !9250
  %69 = load i8, i8* %68, align 1, !dbg !9250
  %70 = zext i8 %69 to i32, !dbg !9250
  br i1 %66, label %71, label %75, !dbg !9251

71:                                               ; preds = %64
  call void @llvm.dbg.value(metadata i8** %5, metadata !9181, metadata !DIExpression(DW_OP_deref)), !dbg !9191
  call void @llvm.dbg.value(metadata i32* %6, metadata !9185, metadata !DIExpression(DW_OP_deref)), !dbg !9191
  %72 = call i32 @SFI_GPRAM_Write_C1A4(i32 noundef %70, i32 noundef %38, i8** noundef nonnull %5, i32* noundef nonnull %6) #21, !dbg !9252
  call void @llvm.dbg.value(metadata i32 %72, metadata !9186, metadata !DIExpression()), !dbg !9191
  %73 = load i8*, i8** %5, align 4, !dbg !9254
  call void @llvm.dbg.value(metadata i8* %73, metadata !9181, metadata !DIExpression()), !dbg !9191
  %74 = load i32, i32* %6, align 4, !dbg !9255
  call void @llvm.dbg.value(metadata i32 %74, metadata !9185, metadata !DIExpression()), !dbg !9191
  call void @SFI_GPRAM_Write(i32 noundef 8, i8* noundef %73, i32 noundef %74) #21, !dbg !9256
  br label %79, !dbg !9257

75:                                               ; preds = %64
  %76 = call i32 @SFI_GPRAM_Write_C1A3(i32 noundef %70, i32 noundef %38) #21, !dbg !9258
  call void @llvm.dbg.value(metadata i32 %76, metadata !9186, metadata !DIExpression()), !dbg !9191
  %77 = load i8*, i8** %5, align 4, !dbg !9260
  call void @llvm.dbg.value(metadata i8* %77, metadata !9181, metadata !DIExpression()), !dbg !9191
  %78 = load i32, i32* %6, align 4, !dbg !9261
  call void @llvm.dbg.value(metadata i32 %78, metadata !9185, metadata !DIExpression()), !dbg !9191
  call void @SFI_GPRAM_Write(i32 noundef 4, i8* noundef %77, i32 noundef %78) #21, !dbg !9262
  br label %79

79:                                               ; preds = %75, %71
  %80 = phi i32 [ %72, %71 ], [ %76, %75 ], !dbg !9250
  call void @llvm.dbg.value(metadata i32 %80, metadata !9186, metadata !DIExpression()), !dbg !9191
  %81 = call i32 @SaveAndSetIRQMask() #22, !dbg !9263
  call void @llvm.dbg.value(metadata i32 %81, metadata !9179, metadata !DIExpression()), !dbg !9191
  store volatile i32 %80, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !9264
  %82 = load i8, i8* %30, align 1, !dbg !9265
  %83 = zext i8 %82 to i32, !dbg !9266
  %84 = add i32 %45, 1, !dbg !9267
  %85 = add i32 %84, %83, !dbg !9268
  store volatile i32 %85, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !9269
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !9270
  call void @SF_DAL_FLAG_BUSY_SET() #22, !dbg !9271
  %86 = load i16, i16* %34, align 2, !dbg !9272
  call void @SFI_MacEnable(i16 noundef zeroext %86) #21, !dbg !9273
  %87 = load i16, i16* %34, align 2, !dbg !9274
  call void @SFI_MacWaitReady(i16 noundef zeroext %87) #21, !dbg !9275
  call void @RestoreIRQMask(i32 noundef %81) #22, !dbg !9276
  %88 = add i32 %45, %38
  %89 = add i32 %88, -1
  %90 = getelementptr inbounds i8, i8* %59, i32 -1
  %91 = getelementptr inbounds i8, i8* %90, i32 %45
  br label %92, !dbg !9277

92:                                               ; preds = %92, %79
  %93 = load i8, i8* %91, align 1, !dbg !9278
  %94 = call i32 @SF_DAL_CheckReadyAndResume(i8* noundef %0, i32 noundef %89, i8 noundef zeroext %93) #22, !dbg !9280
  call void @llvm.dbg.value(metadata i32 %94, metadata !9183, metadata !DIExpression()), !dbg !9191
  %95 = icmp eq i32 %94, 0, !dbg !9281
  br i1 %95, label %92, label %96, !dbg !9282, !llvm.loop !9283

96:                                               ; preds = %92
  %97 = load i32, i32* %6, align 4, !dbg !9285
  call void @llvm.dbg.value(metadata i32 %97, metadata !9185, metadata !DIExpression()), !dbg !9191
  %98 = load i8*, i8** %5, align 4, !dbg !9286
  call void @llvm.dbg.value(metadata i8* %98, metadata !9181, metadata !DIExpression()), !dbg !9191
  %99 = getelementptr inbounds i8, i8* %98, i32 %97, !dbg !9286
  call void @llvm.dbg.value(metadata i8* %99, metadata !9181, metadata !DIExpression()), !dbg !9191
  store i8* %99, i8** %5, align 4, !dbg !9286
  %100 = sub i32 %37, %45, !dbg !9287
  call void @llvm.dbg.value(metadata i32 %100, metadata !9177, metadata !DIExpression()), !dbg !9191
  call void @llvm.dbg.value(metadata i32 undef, metadata !9180, metadata !DIExpression()), !dbg !9191
  %101 = icmp eq i32 %94, 1, !dbg !9288
  %102 = icmp ne i32 %100, 0
  %103 = select i1 %101, i1 %102, i1 false, !dbg !9290
  br i1 %103, label %35, label %104, !dbg !9290, !llvm.loop !9291

104:                                              ; preds = %96, %25
  %105 = phi i32 [ %23, %25 ], [ %94, %96 ], !dbg !9191
  call void @llvm.dbg.value(metadata i32 %105, metadata !9183, metadata !DIExpression()), !dbg !9191
  store i8 0, i8* %21, align 4, !dbg !9293
  call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #22, !dbg !9294
  %106 = icmp eq i32 %105, 1, !dbg !9295
  %107 = select i1 %106, i32 0, i32 %105, !dbg !9191
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #23, !dbg !9297
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #23, !dbg !9297
  ret i32 %107, !dbg !9297
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SF_DAL_NonBlockEraseBlock(i8* nocapture readnone %0, i32 %1) #9 section ".ram_code" !dbg !9298 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !9300, metadata !DIExpression()), !dbg !9302
  call void @llvm.dbg.value(metadata i32 undef, metadata !9301, metadata !DIExpression()), !dbg !9302
  ret i32 -12, !dbg !9303
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_CheckDeviceReady(i8* nocapture noundef readonly %0, i32 %1) #0 section ".ram_code" !dbg !9304 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9306, metadata !DIExpression()), !dbg !9316
  call void @llvm.dbg.value(metadata i32 undef, metadata !9307, metadata !DIExpression()), !dbg !9316
  call void @llvm.dbg.value(metadata i32 0, metadata !9309, metadata !DIExpression()), !dbg !9316
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !9317
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !9310, metadata !DIExpression()), !dbg !9316
  %4 = bitcast i8* %0 to i32*, !dbg !9318
  %5 = load i32, i32* %4, align 4, !dbg !9318
  %6 = xor i32 %5, -1, !dbg !9318
  %7 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !9318
  %8 = bitcast i8* %7 to %struct.vdma_config_t**, !dbg !9318
  %9 = load %struct.vdma_config_t*, %struct.vdma_config_t** %8, align 4, !dbg !9318
  %10 = ptrtoint %struct.vdma_config_t* %9 to i32, !dbg !9318
  %11 = icmp eq i32 %6, %10, !dbg !9318
  br i1 %11, label %13, label %12, !dbg !9321

12:                                               ; preds = %2
  tail call void @Flash_ReturnReady() #22, !dbg !9322
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.125, i32 0, i32 0), i32 noundef 3131, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.SF_DAL_CheckDeviceReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.126, i32 0, i32 0)) #24, !dbg !9322
  unreachable, !dbg !9322

13:                                               ; preds = %2
  %14 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !9324
  %15 = bitcast i8* %14 to %struct.SF_MTD_CMD**, !dbg !9324
  %16 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %15, align 4, !dbg !9324
  %17 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %16, i32 0, i32 16, !dbg !9325
  %18 = load i8, i8* %17, align 1, !dbg !9325
  %19 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %3, i8 noundef zeroext %18) #22, !dbg !9326
  call void @llvm.dbg.value(metadata i32 %19, metadata !9311, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9316
  %20 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %15, align 4, !dbg !9327
  %21 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %20, i32 0, i32 15, !dbg !9328
  %22 = load i8, i8* %21, align 1, !dbg !9328
  %23 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %3, i8 noundef zeroext %22) #22, !dbg !9329
  call void @llvm.dbg.value(metadata i32 %23, metadata !9312, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9316
  %24 = tail call i32 @SaveAndSetIRQMask() #22, !dbg !9330
  call void @llvm.dbg.value(metadata i32 %24, metadata !9309, metadata !DIExpression()), !dbg !9316
  %25 = getelementptr inbounds i8, i8* %0, i32 172, !dbg !9331
  %26 = bitcast i8* %25 to i8**, !dbg !9331
  %27 = load i8*, i8** %26, align 4, !dbg !9331
  %28 = load i8, i8* %27, align 1, !dbg !9332
  %29 = zext i8 %28 to i32, !dbg !9332
  %30 = and i32 %19, %29, !dbg !9333
  %31 = icmp eq i32 %30, 0, !dbg !9334
  br i1 %31, label %32, label %62, !dbg !9335

32:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32 %23, metadata !9312, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9316
  %33 = getelementptr inbounds i8, i8* %27, i32 2, !dbg !9336
  %34 = load i8, i8* %33, align 1, !dbg !9336
  %35 = getelementptr inbounds i8, i8* %27, i32 3, !dbg !9337
  %36 = load i8, i8* %35, align 1, !dbg !9337
  %37 = or i8 %36, %34, !dbg !9338
  call void @llvm.dbg.value(metadata i8 %37, metadata !9313, metadata !DIExpression()), !dbg !9339
  %38 = zext i8 %37 to i32, !dbg !9340
  %39 = and i32 %23, %38, !dbg !9342
  %40 = icmp eq i32 %39, 0, !dbg !9343
  br i1 %40, label %41, label %46, !dbg !9344

41:                                               ; preds = %32
  %42 = icmp ne i8 %37, 0, !dbg !9345
  %43 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1
  %44 = icmp eq i8 %43, 0
  %45 = select i1 %42, i1 true, i1 %44, !dbg !9346
  br i1 %45, label %51, label %46, !dbg !9346

46:                                               ; preds = %41, %32
  %47 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !9347, !range !3203
  %48 = icmp eq i8 %47, 0, !dbg !9347
  br i1 %48, label %49, label %50, !dbg !9351

49:                                               ; preds = %46
  tail call void @Flash_ReturnReady() #22, !dbg !9352
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.125, i32 0, i32 0), i32 noundef 3147, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.SF_DAL_CheckDeviceReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.126, i32 0, i32 0)) #24, !dbg !9352
  unreachable, !dbg !9352

50:                                               ; preds = %46
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef nonnull %3) #22, !dbg !9354
  store i32 -1, i32* @gNOR_ReturnReadyEnd, align 4, !dbg !9355
  call void @llvm.dbg.value(metadata i32 -121, metadata !9308, metadata !DIExpression()), !dbg !9316
  br label %62, !dbg !9356

51:                                               ; preds = %41
  %52 = getelementptr inbounds i8, i8* %0, i32 200, !dbg !9357
  %53 = bitcast i8* %52 to i32*, !dbg !9357
  %54 = load i32, i32* %53, align 4, !dbg !9357
  %55 = and i32 %54, 2, !dbg !9360
  %56 = icmp eq i32 %55, 0, !dbg !9360
  br i1 %56, label %63, label %57, !dbg !9361

57:                                               ; preds = %51
  %58 = getelementptr inbounds i8, i8* %0, i32 198, !dbg !9362
  %59 = bitcast i8* %58 to i16*, !dbg !9362
  %60 = load i16, i16* %59, align 2, !dbg !9362
  tail call void @SFI_Dev_Command(i16 noundef zeroext %60, i32 noundef 122) #21, !dbg !9364
  %61 = load i16, i16* %59, align 2, !dbg !9365
  tail call void @SFI_Dev_Command(i16 noundef zeroext %61, i32 noundef 122) #21, !dbg !9366
  br label %63, !dbg !9367

62:                                               ; preds = %50, %13
  call void @llvm.dbg.value(metadata i32 0, metadata !9308, metadata !DIExpression()), !dbg !9316
  tail call void @RestoreIRQMask(i32 noundef %24) #22, !dbg !9368
  br label %65, !dbg !9369

63:                                               ; preds = %57, %51
  tail call void @SF_DAL_FLAG_BUSY_CLR() #22, !dbg !9370
  tail call void @SF_DAL_FLAG_SUS_CLR() #22, !dbg !9371
  call void @llvm.dbg.value(metadata i32 0, metadata !9308, metadata !DIExpression()), !dbg !9316
  tail call void @RestoreIRQMask(i32 noundef %24) #22, !dbg !9368
  %64 = tail call i32 @SF_DAL_FailCheck(i8* noundef nonnull %0) #22, !dbg !9372
  call void @llvm.dbg.value(metadata i32 %64, metadata !9308, metadata !DIExpression()), !dbg !9316
  br label %65, !dbg !9375

65:                                               ; preds = %62, %63
  %66 = phi i32 [ %64, %63 ], [ -121, %62 ], !dbg !9316
  call void @llvm.dbg.value(metadata i32 %66, metadata !9308, metadata !DIExpression()), !dbg !9316
  ret i32 %66, !dbg !9376
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_SuspendErase(i8* nocapture noundef readonly %0, i32 %1) #0 section ".ram_code" !dbg !9377 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9379, metadata !DIExpression()), !dbg !9384
  call void @llvm.dbg.value(metadata i32 undef, metadata !9380, metadata !DIExpression()), !dbg !9384
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !9385
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !9381, metadata !DIExpression()), !dbg !9384
  %4 = tail call i32 @SaveAndSetIRQMask() #22, !dbg !9386
  call void @llvm.dbg.value(metadata i32 %4, metadata !9383, metadata !DIExpression()), !dbg !9384
  tail call void @SF_DAL_Dev_Suspend(%struct.SF_MTD_Data* noundef %3) #22, !dbg !9387
  %5 = getelementptr inbounds i8, i8* %0, i32 176
  %6 = bitcast i8* %5 to %struct.SF_MTD_CMD**
  %7 = getelementptr inbounds i8, i8* %0, i32 172
  %8 = bitcast i8* %7 to i8**
  br label %9, !dbg !9388

9:                                                ; preds = %9, %2
  %10 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %6, align 4, !dbg !9389
  %11 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %10, i32 0, i32 16, !dbg !9391
  %12 = load i8, i8* %11, align 1, !dbg !9391
  %13 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef %3, i8 noundef zeroext %12) #22, !dbg !9392
  call void @llvm.dbg.value(metadata i32 %13, metadata !9382, metadata !DIExpression()), !dbg !9384
  %14 = load i8*, i8** %8, align 4, !dbg !9393
  %15 = load i8, i8* %14, align 1, !dbg !9395
  %16 = zext i8 %15 to i32, !dbg !9395
  %17 = and i32 %13, %16, !dbg !9396
  %18 = icmp eq i32 %17, 0, !dbg !9397
  br i1 %18, label %19, label %9, !dbg !9398, !llvm.loop !9399

19:                                               ; preds = %9
  tail call void @SF_DAL_FLAG_SUS_SET() #22, !dbg !9401
  tail call void @RestoreIRQMask(i32 noundef %4) #22, !dbg !9402
  ret i32 0, !dbg !9403
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_ResumeErase(i8* nocapture noundef readonly %0, i32 %1) #0 section ".ram_code" !dbg !9404 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9406, metadata !DIExpression()), !dbg !9409
  call void @llvm.dbg.value(metadata i32 undef, metadata !9407, metadata !DIExpression()), !dbg !9409
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !9410
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !9408, metadata !DIExpression()), !dbg !9409
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #22, !dbg !9411
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef %3) #22, !dbg !9412
  tail call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #22, !dbg !9413
  ret i32 0, !dbg !9414
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SF_DAL_LockEraseBlkAddr(i8* nocapture readnone %0, i8* nocapture readnone %1, i32 %2) #9 section ".ram_code" !dbg !9415 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !9417, metadata !DIExpression()), !dbg !9420
  call void @llvm.dbg.value(metadata i8* undef, metadata !9418, metadata !DIExpression()), !dbg !9420
  call void @llvm.dbg.value(metadata i32 undef, metadata !9419, metadata !DIExpression()), !dbg !9420
  ret i32 0, !dbg !9421
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_IOCtrl(i8* noundef %0, i32 noundef %1, i8* nocapture readnone %2) #0 !dbg !9422 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9424, metadata !DIExpression()), !dbg !9428
  call void @llvm.dbg.value(metadata i32 %1, metadata !9425, metadata !DIExpression()), !dbg !9428
  call void @llvm.dbg.value(metadata i8* undef, metadata !9426, metadata !DIExpression()), !dbg !9428
  call void @llvm.dbg.value(metadata i8* %0, metadata !9427, metadata !DIExpression()), !dbg !9428
  switch i32 %1, label %20 [
    i32 0, label %4
    i32 1, label %9
  ], !dbg !9429

4:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %0, metadata !9427, metadata !DIExpression()), !dbg !9428
  %5 = getelementptr inbounds i8, i8* %0, i32 212, !dbg !9430
  %6 = bitcast i8* %5 to i32 (i8*)**, !dbg !9430
  %7 = load i32 (i8*)*, i32 (i8*)** %6, align 4, !dbg !9430
  %8 = tail call i32 %7(i8* noundef %0) #21, !dbg !9433
  br label %21, !dbg !9434

9:                                                ; preds = %3
  %10 = getelementptr inbounds i8, i8* %0, i32 193, !dbg !9435
  %11 = load i8, i8* %10, align 1, !dbg !9439
  %12 = icmp eq i8 %11, -62, !dbg !9440
  br i1 %12, label %13, label %21, !dbg !9441

13:                                               ; preds = %9
  %14 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !9442
  %15 = bitcast i8* %14 to %struct.vdma_config_t**, !dbg !9442
  %16 = load %struct.vdma_config_t*, %struct.vdma_config_t** %15, align 4, !dbg !9442
  %17 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %16, i32 0, i32 0, !dbg !9443
  %18 = load i32, i32* %17, align 4, !dbg !9443
  %19 = icmp eq i32 %18, 262144, !dbg !9444
  br i1 %19, label %22, label %21, !dbg !9445

20:                                               ; preds = %3
  tail call void @Flash_ReturnReady() #22, !dbg !9446
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.125, i32 0, i32 0), i32 noundef 2361, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.SF_DAL_IOCtrl, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.126, i32 0, i32 0)) #24, !dbg !9446
  unreachable, !dbg !9446

21:                                               ; preds = %13, %9, %4
  br label %22, !dbg !9451

22:                                               ; preds = %13, %21
  %23 = phi i32 [ 0, %21 ], [ 194, %13 ], !dbg !9428
  ret i32 %23, !dbg !9452
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_FailCheck(i8* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !9453 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9455, metadata !DIExpression()), !dbg !9458
  call void @llvm.dbg.value(metadata i8* %0, metadata !9456, metadata !DIExpression()), !dbg !9458
  %2 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !9459
  %3 = bitcast i8* %2 to %struct.SF_MTD_CMD**, !dbg !9459
  %4 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %3, align 4, !dbg !9459
  %5 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %4, i32 0, i32 17, !dbg !9461
  %6 = load i8, i8* %5, align 1, !dbg !9461
  %7 = icmp eq i8 %6, 0, !dbg !9462
  br i1 %7, label %19, label %8, !dbg !9463

8:                                                ; preds = %1
  %9 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !9464
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %9, metadata !9456, metadata !DIExpression()), !dbg !9458
  %10 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef %9, i8 noundef zeroext %6) #22, !dbg !9465
  call void @llvm.dbg.value(metadata i32 %10, metadata !9457, metadata !DIExpression()), !dbg !9458
  %11 = getelementptr inbounds i8, i8* %0, i32 172, !dbg !9467
  %12 = bitcast i8* %11 to i8**, !dbg !9467
  %13 = load i8*, i8** %12, align 4, !dbg !9467
  %14 = getelementptr inbounds i8, i8* %13, i32 7, !dbg !9469
  %15 = load i8, i8* %14, align 1, !dbg !9469
  %16 = zext i8 %15 to i32, !dbg !9469
  %17 = and i32 %10, %16, !dbg !9470
  %18 = icmp eq i32 %17, 0, !dbg !9470
  br i1 %18, label %19, label %20, !dbg !9471

19:                                               ; preds = %8, %1
  br label %20, !dbg !9472

20:                                               ; preds = %8, %19
  %21 = phi i32 [ 0, %19 ], [ -1, %8 ], !dbg !9458
  ret i32 %21, !dbg !9473
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_CheckReadyAndResume(i8* nocapture noundef readonly %0, i32 noundef %1, i8 noundef zeroext %2) local_unnamed_addr #0 section ".ram_code" !dbg !9474 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9478, metadata !DIExpression()), !dbg !9486
  call void @llvm.dbg.value(metadata i32 %1, metadata !9479, metadata !DIExpression()), !dbg !9486
  call void @llvm.dbg.value(metadata i8 %2, metadata !9480, metadata !DIExpression()), !dbg !9486
  %4 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !9487
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %4, metadata !9482, metadata !DIExpression()), !dbg !9486
  call void @llvm.dbg.value(metadata i32 0, metadata !9483, metadata !DIExpression()), !dbg !9486
  %5 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !9488
  %6 = bitcast i8* %5 to %struct.SF_MTD_CMD**, !dbg !9488
  %7 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %6, align 4, !dbg !9488
  %8 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %7, i32 0, i32 16, !dbg !9489
  %9 = load i8, i8* %8, align 1, !dbg !9489
  %10 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef %4, i8 noundef zeroext %9) #22, !dbg !9490
  call void @llvm.dbg.value(metadata i32 %10, metadata !9485, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9486
  %11 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !9491, !range !3203
  %12 = icmp eq i8 %11, 0, !dbg !9491
  br i1 %12, label %18, label %13, !dbg !9493

13:                                               ; preds = %3
  %14 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !9494, !range !3203
  %15 = icmp eq i8 %14, 0, !dbg !9494
  br i1 %15, label %16, label %17, !dbg !9498

16:                                               ; preds = %13
  tail call void @Flash_ReturnReady() #22, !dbg !9499
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.125, i32 0, i32 0), i32 noundef 3058, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.SF_DAL_CheckReadyAndResume, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.126, i32 0, i32 0)) #24, !dbg !9499
  unreachable, !dbg !9499

17:                                               ; preds = %13
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef nonnull %4) #22, !dbg !9501
  store i32 -1, i32* @gNOR_ReturnReadyEnd, align 4, !dbg !9502
  br label %34, !dbg !9503

18:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 %10, metadata !9485, metadata !DIExpression()), !dbg !9486
  %19 = getelementptr inbounds i8, i8* %0, i32 172, !dbg !9504
  %20 = bitcast i8* %19 to i8**, !dbg !9504
  %21 = load i8*, i8** %20, align 4, !dbg !9504
  %22 = load i8, i8* %21, align 1, !dbg !9506
  %23 = zext i8 %22 to i32, !dbg !9506
  %24 = and i32 %10, %23, !dbg !9507
  %25 = icmp eq i32 %24, 0, !dbg !9508
  br i1 %25, label %26, label %34, !dbg !9509

26:                                               ; preds = %18
  %27 = tail call i32 @SaveAndSetIRQMask() #22, !dbg !9510
  call void @llvm.dbg.value(metadata i32 %27, metadata !9481, metadata !DIExpression()), !dbg !9486
  tail call void @SF_DAL_FLAG_BUSY_CLR() #22, !dbg !9512
  %28 = inttoptr i32 %1 to i8*, !dbg !9513
  %29 = load volatile i8, i8* %28, align 1, !dbg !9514
  call void @llvm.dbg.value(metadata i8 %29, metadata !9484, metadata !DIExpression()), !dbg !9486
  %30 = icmp eq i8 %29, %2, !dbg !9515
  call void @llvm.dbg.value(metadata i32 undef, metadata !9483, metadata !DIExpression()), !dbg !9486
  tail call void @RestoreIRQMask(i32 noundef %27) #22, !dbg !9517
  br i1 %30, label %31, label %34

31:                                               ; preds = %26
  call void @llvm.dbg.value(metadata i32 1, metadata !9483, metadata !DIExpression()), !dbg !9486
  %32 = tail call i32 @SF_DAL_FailCheck(i8* noundef nonnull %0) #22, !dbg !9518
  %33 = icmp eq i32 %32, 0, !dbg !9521
  br i1 %33, label %34, label %36, !dbg !9522

34:                                               ; preds = %18, %26, %17, %31
  %35 = phi i32 [ 1, %31 ], [ 0, %18 ], [ -1, %26 ], [ 0, %17 ]
  br label %36, !dbg !9523

36:                                               ; preds = %31, %34
  %37 = phi i32 [ %35, %34 ], [ -1, %31 ], !dbg !9486
  ret i32 %37, !dbg !9524
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_EraseBlock(%struct.SF_MTD_Data* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #0 section ".ram_code" !dbg !9525 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !9529, metadata !DIExpression()), !dbg !9532
  call void @llvm.dbg.value(metadata i32 %1, metadata !9530, metadata !DIExpression()), !dbg !9532
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 24, !dbg !9533
  %4 = load i32, i32* %3, align 4, !dbg !9533
  %5 = and i32 %4, 16, !dbg !9535
  %6 = icmp eq i32 %5, 0, !dbg !9535
  br i1 %6, label %7, label %8, !dbg !9536

7:                                                ; preds = %2
  tail call void @SF_DAL_Dev_WriteEnable(%struct.SF_MTD_Data* noundef nonnull %0) #22, !dbg !9537
  br label %8, !dbg !9539

8:                                                ; preds = %7, %2
  %9 = tail call i32 @SaveAndSetIRQMask() #22, !dbg !9540
  call void @llvm.dbg.value(metadata i32 %9, metadata !9531, metadata !DIExpression()), !dbg !9532
  tail call void @SF_DAL_FLAG_BUSY_SET() #22, !dbg !9541
  %10 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !9542
  %11 = load i16, i16* %10, align 2, !dbg !9542
  %12 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !9543
  %13 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %12, align 4, !dbg !9543
  %14 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %13, i32 0, i32 5, !dbg !9544
  %15 = load i8, i8* %14, align 1, !dbg !9544
  %16 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 22, !dbg !9545
  %17 = load i8, i8* %16, align 1, !dbg !9545
  %18 = zext i8 %17 to i32, !dbg !9546
  tail call void @SFI_Dev_CommandAddress(i16 noundef zeroext %11, i8 noundef zeroext %15, i32 noundef %1, i32 noundef %18) #21, !dbg !9547
  tail call void @RestoreIRQMask(i32 noundef %9) #22, !dbg !9548
  ret void, !dbg !9549
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_Init_Vendor(%struct.NOR_MTD_Driver* nocapture readnone %0, %struct.SF_MTD_Data* nocapture noundef %1) local_unnamed_addr #0 !dbg !9550 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* undef, metadata !9552, metadata !DIExpression()), !dbg !9555
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !9553, metadata !DIExpression()), !dbg !9555
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 20, i32 0, !dbg !9556
  %4 = load i8, i8* %3, align 1, !dbg !9556
  switch i8 %4, label %17 [
    i8 -62, label %5
    i8 -17, label %10
    i8 -8, label %15
  ], !dbg !9557

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 24, !dbg !9558
  %7 = load i32, i32* %6, align 4, !dbg !9560
  %8 = or i32 %7, 4, !dbg !9560
  store i32 %8, i32* %6, align 4, !dbg !9560
  %9 = tail call i32 @SF_DAL_Init_MXIC(%struct.NOR_MTD_Driver* undef, %struct.SF_MTD_Data* noundef nonnull %1) #22, !dbg !9561
  call void @llvm.dbg.value(metadata i32 0, metadata !9554, metadata !DIExpression()), !dbg !9555
  br label %18, !dbg !9562

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 24, !dbg !9563
  %12 = load i32, i32* %11, align 4, !dbg !9564
  %13 = or i32 %12, 2, !dbg !9564
  store i32 %13, i32* %11, align 4, !dbg !9564
  %14 = tail call i32 @SF_DAL_Init_WINBOND(%struct.NOR_MTD_Driver* undef, %struct.SF_MTD_Data* noundef nonnull %1) #22, !dbg !9565
  call void @llvm.dbg.value(metadata i32 0, metadata !9554, metadata !DIExpression()), !dbg !9555
  call void @llvm.dbg.value(metadata i32 0, metadata !9554, metadata !DIExpression()), !dbg !9555
  br label %18, !dbg !9566

15:                                               ; preds = %2
  %16 = tail call i32 @SF_DAL_Init_WINBOND(%struct.NOR_MTD_Driver* undef, %struct.SF_MTD_Data* noundef nonnull %1) #22, !dbg !9567
  call void @llvm.dbg.value(metadata i32 0, metadata !9554, metadata !DIExpression()), !dbg !9555
  br label %18, !dbg !9568

17:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 -120, metadata !9554, metadata !DIExpression()), !dbg !9555
  tail call void @Flash_ReturnReady() #22, !dbg !9569
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.125, i32 0, i32 0), i32 noundef 2079, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.SF_DAL_Init_Vendor, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.126, i32 0, i32 0)) #24, !dbg !9569
  unreachable, !dbg !9569

18:                                               ; preds = %15, %10, %5
  call void @llvm.dbg.value(metadata i32 0, metadata !9554, metadata !DIExpression()), !dbg !9555
  ret i32 0, !dbg !9573
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_Init_Driver(%struct.NOR_MTD_Driver* noundef writeonly %0, %struct.SF_MTD_Data* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !9574 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* %0, metadata !9578, metadata !DIExpression()), !dbg !9583
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !9579, metadata !DIExpression()), !dbg !9583
  call void @llvm.dbg.value(metadata i32 %2, metadata !9580, metadata !DIExpression()), !dbg !9583
  call void @llvm.dbg.value(metadata i32 %3, metadata !9581, metadata !DIExpression()), !dbg !9583
  %5 = icmp eq %struct.NOR_MTD_Driver* %0, null, !dbg !9584
  %6 = icmp eq %struct.SF_MTD_Data* %1, null
  %7 = or i1 %5, %6, !dbg !9586
  br i1 %7, label %33, label %8, !dbg !9586

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !9587
  %10 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %9, align 4, !dbg !9587
  %11 = icmp eq %struct.SF_MTD_CMD* %10, null, !dbg !9589
  br i1 %11, label %33, label %12, !dbg !9590

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12, !dbg !9591
  %14 = load i8*, i8** %13, align 4, !dbg !9591
  %15 = icmp eq i8* %14, null, !dbg !9592
  br i1 %15, label %33, label %16, !dbg !9593

16:                                               ; preds = %12
  %17 = inttoptr i32 %2 to i8*, !dbg !9594
  %18 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 1, !dbg !9595
  store i8* %17, i8** %18, align 4, !dbg !9596
  %19 = trunc i32 %3 to i16, !dbg !9597
  %20 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 16, !dbg !9598
  store i16 %19, i16* %20, align 2, !dbg !9599
  %21 = tail call i32 @SF_DAL_Init_Common(%struct.NOR_MTD_Driver* noundef nonnull %0, %struct.SF_MTD_Data* noundef nonnull %1) #22, !dbg !9600
  %22 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %9, align 4, !dbg !9601
  %23 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %22, i32 0, i32 10, !dbg !9602
  store i8 -81, i8* %23, align 1, !dbg !9603
  %24 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 20, i32 0, !dbg !9604
  tail call void @SF_DAL_Dev_ReadID(%struct.SF_MTD_Data* noundef nonnull %1, i8* noundef nonnull %24) #22, !dbg !9605
  %25 = load i8, i8* %24, align 1, !dbg !9606
  switch i8 %25, label %26 [
    i8 -1, label %28
    i8 0, label %28
  ], !dbg !9608

26:                                               ; preds = %16
  %27 = tail call zeroext i1 @CMEM_CheckValidDeviceID(i8* noundef nonnull %24) #21, !dbg !9609
  br i1 %27, label %31, label %28, !dbg !9610

28:                                               ; preds = %16, %16, %26
  %29 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %9, align 4, !dbg !9611
  %30 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %29, i32 0, i32 10, !dbg !9613
  store i8 -97, i8* %30, align 1, !dbg !9614
  tail call void @SF_DAL_Dev_ReadID(%struct.SF_MTD_Data* noundef nonnull %1, i8* noundef nonnull %24) #22, !dbg !9615
  br label %31, !dbg !9616

31:                                               ; preds = %28, %26
  %32 = tail call i32 @SF_DAL_Init_Vendor(%struct.NOR_MTD_Driver* undef, %struct.SF_MTD_Data* noundef nonnull %1) #22, !dbg !9617
  call void @llvm.dbg.value(metadata i32 0, metadata !9582, metadata !DIExpression()), !dbg !9583
  br label %33, !dbg !9618

33:                                               ; preds = %8, %12, %4, %31
  %34 = phi i32 [ 0, %31 ], [ -120, %4 ], [ -120, %12 ], [ -120, %8 ], !dbg !9583
  ret i32 %34, !dbg !9619
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_ReadID(%struct.SF_MTD_Data* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #0 section ".ram_code" !dbg !9620 {
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !9624, metadata !DIExpression()), !dbg !9627
  call void @llvm.dbg.value(metadata i8* %1, metadata !9625, metadata !DIExpression()), !dbg !9627
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #23, !dbg !9628
  %4 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !9629
  %5 = and i32 %4, 1, !dbg !9629
  %6 = icmp eq i32 %5, 0, !dbg !9631
  %7 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !9632
  %8 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %7, align 4, !dbg !9632
  %9 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %8, i32 0, i32 9, !dbg !9633
  %10 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %8, i32 0, i32 10, !dbg !9633
  %11 = select i1 %6, i8* %9, i8* %10, !dbg !9633
  %12 = load i8, i8* %11, align 1, !dbg !9632
  store i8 %12, i8* %3, align 1, !dbg !9632
  %13 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !9634
  %14 = load i16, i16* %13, align 2, !dbg !9634
  call void @llvm.dbg.value(metadata i8* %3, metadata !9626, metadata !DIExpression(DW_OP_deref)), !dbg !9627
  call void @SF_DAL_Dev_Command_Ext(i16 noundef zeroext %14, i8* noundef nonnull %3, i8* noundef %1, i16 noundef zeroext 1, i16 noundef zeroext 3) #22, !dbg !9635
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #23, !dbg !9636
  ret void, !dbg !9636
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3, i16 noundef zeroext %4) local_unnamed_addr #0 section ".ram_code" !dbg !9637 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !9641, metadata !DIExpression()), !dbg !9647
  call void @llvm.dbg.value(metadata i8* %1, metadata !9642, metadata !DIExpression()), !dbg !9647
  call void @llvm.dbg.value(metadata i8* %2, metadata !9643, metadata !DIExpression()), !dbg !9647
  call void @llvm.dbg.value(metadata i16 %3, metadata !9644, metadata !DIExpression()), !dbg !9647
  call void @llvm.dbg.value(metadata i16 %4, metadata !9645, metadata !DIExpression()), !dbg !9647
  %6 = tail call i32 @SaveAndSetIRQMask() #22, !dbg !9648
  call void @llvm.dbg.value(metadata i32 %6, metadata !9646, metadata !DIExpression()), !dbg !9647
  tail call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3, i16 noundef zeroext %4) #21, !dbg !9649
  tail call void @RestoreIRQMask(i32 noundef %6) #22, !dbg !9650
  ret void, !dbg !9651
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @CMEM_CheckValidDeviceID(i8* nocapture noundef readonly %0) local_unnamed_addr #11 !dbg !9652 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9654, metadata !DIExpression()), !dbg !9660
  call void @llvm.dbg.value(metadata %struct.CMEMEntryID* null, metadata !9657, metadata !DIExpression()), !dbg !9660
  call void @llvm.dbg.value(metadata i32 0, metadata !9655, metadata !DIExpression()), !dbg !9660
  br label %6, !dbg !9661

2:                                                ; preds = %23
  %3 = add nuw nsw i32 %8, 1, !dbg !9663
  call void @llvm.dbg.value(metadata i32 %3, metadata !9655, metadata !DIExpression()), !dbg !9660
  call void @llvm.dbg.value(metadata i32 %8, metadata !9655, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9660
  %4 = icmp ult i32 %8, 4, !dbg !9665
  %5 = icmp eq i32 %3, 5, !dbg !9665
  br i1 %5, label %26, label %6, !dbg !9661, !llvm.loop !9666

6:                                                ; preds = %1, %2
  %7 = phi i1 [ true, %1 ], [ %4, %2 ]
  %8 = phi i32 [ 0, %1 ], [ %3, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !9655, metadata !DIExpression()), !dbg !9660
  %9 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  call void @llvm.dbg.value(metadata i32 0, metadata !9656, metadata !DIExpression()), !dbg !9660
  %12 = icmp eq i8 %10, 0, !dbg !9668
  br i1 %12, label %23, label %13, !dbg !9672

13:                                               ; preds = %6, %20
  %14 = phi i32 [ %21, %20 ], [ 0, %6 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !9656, metadata !DIExpression()), !dbg !9660
  %15 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 2, i32 %14, !dbg !9673
  %16 = load i8, i8* %15, align 1, !dbg !9673
  %17 = getelementptr inbounds i8, i8* %0, i32 %14, !dbg !9676
  %18 = load i8, i8* %17, align 1, !dbg !9676
  %19 = icmp eq i8 %16, %18, !dbg !9677
  br i1 %19, label %20, label %23, !dbg !9678

20:                                               ; preds = %13
  %21 = add nuw nsw i32 %14, 1, !dbg !9679
  call void @llvm.dbg.value(metadata i32 %21, metadata !9656, metadata !DIExpression()), !dbg !9660
  %22 = icmp eq i32 %21, %11, !dbg !9668
  br i1 %22, label %26, label %13, !dbg !9672, !llvm.loop !9680

23:                                               ; preds = %13, %6
  %24 = phi i32 [ 0, %6 ], [ %14, %13 ], !dbg !9682
  %25 = icmp eq i32 %24, %11, !dbg !9683
  call void @llvm.dbg.value(metadata i32 %8, metadata !9655, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9660
  br i1 %25, label %26, label %2, !dbg !9685

26:                                               ; preds = %2, %23, %20
  %27 = phi i1 [ %7, %20 ], [ %7, %23 ], [ %4, %2 ], !dbg !9665
  ret i1 %27, !dbg !9686
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Index() local_unnamed_addr #0 !dbg !9687 {
  %1 = alloca %union.CMEMFlashID, align 2
  %2 = bitcast %union.CMEMFlashID* %1 to i8*, !dbg !9699
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #23, !dbg !9699
  call void @llvm.dbg.declare(metadata %union.CMEMFlashID* %1, metadata !9691, metadata !DIExpression()), !dbg !9700
  call void @llvm.dbg.value(metadata %struct.CMEMEntryID* null, metadata !9698, metadata !DIExpression()), !dbg !9701
  %3 = load i16, i16* @cmem_index, align 2, !dbg !9702
  %4 = icmp sgt i16 %3, -1, !dbg !9704
  br i1 %4, label %34, label %5, !dbg !9705

5:                                                ; preds = %0
  %6 = getelementptr inbounds %union.CMEMFlashID, %union.CMEMFlashID* %1, i32 0, i32 0, i32 0, !dbg !9706
  call void @NOR_ReadID(i16 noundef zeroext 0, i16* noundef nonnull inttoptr (i32 134217728 to i16*), i16* noundef nonnull %6) #21, !dbg !9707
  call void @llvm.dbg.value(metadata i32 0, metadata !9689, metadata !DIExpression()), !dbg !9701
  br label %7, !dbg !9708

7:                                                ; preds = %5, %29
  %8 = phi i32 [ 0, %5 ], [ %30, %29 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !9689, metadata !DIExpression()), !dbg !9701
  %9 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  call void @llvm.dbg.value(metadata i32 0, metadata !9690, metadata !DIExpression()), !dbg !9701
  %12 = icmp eq i8 %10, 0, !dbg !9710
  br i1 %12, label %24, label %13, !dbg !9715

13:                                               ; preds = %7, %21
  %14 = phi i32 [ %22, %21 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !9690, metadata !DIExpression()), !dbg !9701
  %15 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 2, i32 %14, !dbg !9716
  %16 = load i8, i8* %15, align 1, !dbg !9716
  %17 = getelementptr inbounds %union.CMEMFlashID, %union.CMEMFlashID* %1, i32 0, i32 0, i32 %14, !dbg !9719
  %18 = load i16, i16* %17, align 2, !dbg !9719
  %19 = zext i8 %16 to i16, !dbg !9720
  %20 = icmp eq i16 %18, %19, !dbg !9720
  br i1 %20, label %21, label %24, !dbg !9721

21:                                               ; preds = %13
  %22 = add nuw nsw i32 %14, 1, !dbg !9722
  call void @llvm.dbg.value(metadata i32 %22, metadata !9690, metadata !DIExpression()), !dbg !9701
  %23 = icmp eq i32 %22, %11, !dbg !9710
  br i1 %23, label %27, label %13, !dbg !9715, !llvm.loop !9723

24:                                               ; preds = %13, %7
  %25 = phi i32 [ 0, %7 ], [ %14, %13 ], !dbg !9725
  %26 = icmp eq i32 %25, %11, !dbg !9726
  br i1 %26, label %27, label %29, !dbg !9728

27:                                               ; preds = %24, %21
  %28 = trunc i32 %8 to i16, !dbg !9729
  store i16 %28, i16* @cmem_index, align 2, !dbg !9731
  br label %34, !dbg !9732

29:                                               ; preds = %24
  %30 = add nuw nsw i32 %8, 1, !dbg !9733
  call void @llvm.dbg.value(metadata i32 %30, metadata !9689, metadata !DIExpression()), !dbg !9701
  %31 = icmp eq i32 %30, 5, !dbg !9734
  br i1 %31, label %32, label %7, !dbg !9708, !llvm.loop !9735

32:                                               ; preds = %29
  %33 = load i16, i16* @cmem_index, align 2, !dbg !9737
  br label %34, !dbg !9737

34:                                               ; preds = %27, %32, %0
  %35 = phi i16 [ %3, %0 ], [ %33, %32 ], [ %28, %27 ]
  %36 = sext i16 %35 to i32, !dbg !9701
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #23, !dbg !9738
  ret i32 %36, !dbg !9738
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local nonnull %struct.CMEMEntryID* @CMEM_GetIDEntry(i32 noundef %0) local_unnamed_addr #9 !dbg !9739 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9743, metadata !DIExpression()), !dbg !9744
  %2 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %0, !dbg !9745
  ret %struct.CMEMEntryID* %2, !dbg !9746
}

; Function Attrs: noinline nounwind optsize
define dso_local void @CMEM_EMIINIT_ReadID(i16 noundef zeroext %0, i8* nocapture readnone %1, i16* nocapture noundef writeonly %2) local_unnamed_addr #0 section ".ram_code" !dbg !9747 {
  %4 = alloca i8, align 1
  %5 = alloca [3 x i8], align 1
  call void @llvm.dbg.value(metadata i16 %0, metadata !9751, metadata !DIExpression()), !dbg !9758
  call void @llvm.dbg.value(metadata i8* undef, metadata !9752, metadata !DIExpression()), !dbg !9758
  call void @llvm.dbg.value(metadata i16* %2, metadata !9753, metadata !DIExpression()), !dbg !9758
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #23, !dbg !9759
  %6 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i32 0, i32 0, !dbg !9759
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %6) #23, !dbg !9759
  call void @llvm.dbg.declare(metadata [3 x i8]* %5, metadata !9756, metadata !DIExpression()), !dbg !9760
  call void @llvm.dbg.value(metadata i8 -81, metadata !9754, metadata !DIExpression()), !dbg !9761
  store i8 -81, i8* %4, align 1, !dbg !9762
  call void @llvm.dbg.value(metadata i8* %4, metadata !9754, metadata !DIExpression(DW_OP_deref)), !dbg !9761
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef nonnull %6, i16 noundef zeroext 1, i16 noundef zeroext 3) #21, !dbg !9763
  %7 = load i8, i8* %6, align 1, !dbg !9764
  %8 = add i8 %7, 1, !dbg !9766
  %9 = icmp ult i8 %8, 2, !dbg !9766
  br i1 %9, label %12, label %10, !dbg !9766

10:                                               ; preds = %3
  %11 = call zeroext i1 @CMEM_EMIINIT_CheckValidDeviceID(i8* noundef nonnull %6) #22, !dbg !9767
  br i1 %11, label %13, label %12, !dbg !9768

12:                                               ; preds = %10, %3
  call void @llvm.dbg.value(metadata i8 -97, metadata !9754, metadata !DIExpression()), !dbg !9761
  store i8 -97, i8* %4, align 1, !dbg !9769
  call void @llvm.dbg.value(metadata i8* %4, metadata !9754, metadata !DIExpression(DW_OP_deref)), !dbg !9761
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef nonnull %6, i16 noundef zeroext 1, i16 noundef zeroext 3) #21, !dbg !9771
  br label %13, !dbg !9772

13:                                               ; preds = %12, %10
  br label %14, !dbg !9773

14:                                               ; preds = %13, %14
  %15 = phi i32 [ %20, %14 ], [ 0, %13 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !9757, metadata !DIExpression()), !dbg !9761
  %16 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i32 0, i32 %15, !dbg !9775
  %17 = load i8, i8* %16, align 1, !dbg !9775
  %18 = zext i8 %17 to i16, !dbg !9775
  %19 = getelementptr inbounds i16, i16* %2, i32 %15, !dbg !9778
  store i16 %18, i16* %19, align 2, !dbg !9779
  %20 = add nuw nsw i32 %15, 1, !dbg !9780
  call void @llvm.dbg.value(metadata i32 %20, metadata !9757, metadata !DIExpression()), !dbg !9761
  %21 = icmp eq i32 %20, 3, !dbg !9781
  br i1 %21, label %22, label %14, !dbg !9773, !llvm.loop !9782

22:                                               ; preds = %14
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %6) #23, !dbg !9784
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #23, !dbg !9784
  ret void, !dbg !9785
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @CMEM_EMIINIT_CheckValidDeviceID(i8* nocapture noundef readonly %0) local_unnamed_addr #11 section ".ram_code" !dbg !9786 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9788, metadata !DIExpression()), !dbg !9792
  call void @llvm.dbg.value(metadata %struct.CMEMEntryID* null, metadata !9791, metadata !DIExpression()), !dbg !9792
  call void @llvm.dbg.value(metadata i32 0, metadata !9789, metadata !DIExpression()), !dbg !9792
  br label %6, !dbg !9793

2:                                                ; preds = %23
  %3 = add nuw nsw i32 %8, 1, !dbg !9795
  call void @llvm.dbg.value(metadata i32 %3, metadata !9789, metadata !DIExpression()), !dbg !9792
  call void @llvm.dbg.value(metadata i32 %8, metadata !9789, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9792
  %4 = icmp ult i32 %8, 4, !dbg !9797
  %5 = icmp eq i32 %3, 5, !dbg !9797
  br i1 %5, label %26, label %6, !dbg !9793, !llvm.loop !9798

6:                                                ; preds = %1, %2
  %7 = phi i1 [ true, %1 ], [ %4, %2 ]
  %8 = phi i32 [ 0, %1 ], [ %3, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !9789, metadata !DIExpression()), !dbg !9792
  %9 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  call void @llvm.dbg.value(metadata i32 0, metadata !9790, metadata !DIExpression()), !dbg !9792
  %12 = icmp eq i8 %10, 0, !dbg !9800
  br i1 %12, label %23, label %13, !dbg !9804

13:                                               ; preds = %6, %20
  %14 = phi i32 [ %21, %20 ], [ 0, %6 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !9790, metadata !DIExpression()), !dbg !9792
  %15 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 2, i32 %14, !dbg !9805
  %16 = load i8, i8* %15, align 1, !dbg !9805
  %17 = getelementptr inbounds i8, i8* %0, i32 %14, !dbg !9808
  %18 = load i8, i8* %17, align 1, !dbg !9808
  %19 = icmp eq i8 %16, %18, !dbg !9809
  br i1 %19, label %20, label %23, !dbg !9810

20:                                               ; preds = %13
  %21 = add nuw nsw i32 %14, 1, !dbg !9811
  call void @llvm.dbg.value(metadata i32 %21, metadata !9790, metadata !DIExpression()), !dbg !9792
  %22 = icmp eq i32 %21, %11, !dbg !9800
  br i1 %22, label %26, label %13, !dbg !9804, !llvm.loop !9812

23:                                               ; preds = %13, %6
  %24 = phi i32 [ 0, %6 ], [ %14, %13 ], !dbg !9814
  %25 = icmp eq i32 %24, %11, !dbg !9815
  call void @llvm.dbg.value(metadata i32 %8, metadata !9789, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9792
  br i1 %25, label %26, label %2, !dbg !9817

26:                                               ; preds = %2, %23, %20
  %27 = phi i1 [ %7, %20 ], [ %7, %23 ], [ %4, %2 ], !dbg !9797
  ret i1 %27, !dbg !9818
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_EMIINIT_Index() local_unnamed_addr #0 section ".ram_code" !dbg !9819 {
  %1 = alloca %union.CMEMFlashID, align 2
  %2 = bitcast %union.CMEMFlashID* %1 to i8*, !dbg !9825
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #23, !dbg !9825
  call void @llvm.dbg.declare(metadata %union.CMEMFlashID* %1, metadata !9823, metadata !DIExpression()), !dbg !9826
  call void @llvm.dbg.value(metadata %struct.CMEMEntryID* null, metadata !9824, metadata !DIExpression()), !dbg !9827
  %3 = load i16, i16* @cmem_emiinit_index, align 2, !dbg !9828
  %4 = icmp sgt i16 %3, -1, !dbg !9830
  br i1 %4, label %34, label %5, !dbg !9831

5:                                                ; preds = %0
  %6 = getelementptr inbounds %union.CMEMFlashID, %union.CMEMFlashID* %1, i32 0, i32 0, i32 0, !dbg !9832
  call void @CMEM_EMIINIT_ReadID(i16 noundef zeroext 0, i8* undef, i16* noundef nonnull %6) #22, !dbg !9833
  call void @llvm.dbg.value(metadata i32 0, metadata !9821, metadata !DIExpression()), !dbg !9827
  br label %7, !dbg !9834

7:                                                ; preds = %5, %29
  %8 = phi i32 [ 0, %5 ], [ %30, %29 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !9821, metadata !DIExpression()), !dbg !9827
  %9 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  call void @llvm.dbg.value(metadata i32 0, metadata !9822, metadata !DIExpression()), !dbg !9827
  %12 = icmp eq i8 %10, 0, !dbg !9836
  br i1 %12, label %24, label %13, !dbg !9841

13:                                               ; preds = %7, %21
  %14 = phi i32 [ %22, %21 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !9822, metadata !DIExpression()), !dbg !9827
  %15 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 2, i32 %14, !dbg !9842
  %16 = load i8, i8* %15, align 1, !dbg !9842
  %17 = getelementptr inbounds %union.CMEMFlashID, %union.CMEMFlashID* %1, i32 0, i32 0, i32 %14, !dbg !9845
  %18 = load i16, i16* %17, align 2, !dbg !9845
  %19 = zext i8 %16 to i16, !dbg !9846
  %20 = icmp eq i16 %18, %19, !dbg !9846
  br i1 %20, label %21, label %24, !dbg !9847

21:                                               ; preds = %13
  %22 = add nuw nsw i32 %14, 1, !dbg !9848
  call void @llvm.dbg.value(metadata i32 %22, metadata !9822, metadata !DIExpression()), !dbg !9827
  %23 = icmp eq i32 %22, %11, !dbg !9836
  br i1 %23, label %27, label %13, !dbg !9841, !llvm.loop !9849

24:                                               ; preds = %13, %7
  %25 = phi i32 [ 0, %7 ], [ %14, %13 ], !dbg !9851
  %26 = icmp eq i32 %25, %11, !dbg !9852
  br i1 %26, label %27, label %29, !dbg !9854

27:                                               ; preds = %24, %21
  %28 = trunc i32 %8 to i16, !dbg !9855
  store i16 %28, i16* @cmem_emiinit_index, align 2, !dbg !9857
  br label %34, !dbg !9858

29:                                               ; preds = %24
  %30 = add nuw nsw i32 %8, 1, !dbg !9859
  call void @llvm.dbg.value(metadata i32 %30, metadata !9821, metadata !DIExpression()), !dbg !9827
  %31 = icmp eq i32 %30, 5, !dbg !9860
  br i1 %31, label %32, label %7, !dbg !9834, !llvm.loop !9861

32:                                               ; preds = %29
  %33 = load i16, i16* @cmem_emiinit_index, align 2, !dbg !9863
  br label %34, !dbg !9863

34:                                               ; preds = %27, %32, %0
  %35 = phi i16 [ %3, %0 ], [ %33, %32 ], [ %28, %27 ]
  %36 = sext i16 %35 to i32, !dbg !9827
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #23, !dbg !9864
  ret i32 %36, !dbg !9864
}

; Function Attrs: noinline nounwind optsize
define dso_local void @NOR_ReadID(i16 noundef zeroext %0, i16* nocapture noundef readnone %1, i16* nocapture noundef writeonly %2) local_unnamed_addr #0 section ".ram_code" !dbg !9865 {
  %4 = alloca i8, align 1
  %5 = alloca [3 x i8], align 1
  call void @llvm.dbg.value(metadata i16 %0, metadata !9873, metadata !DIExpression()), !dbg !9881
  call void @llvm.dbg.value(metadata i16* %1, metadata !9874, metadata !DIExpression()), !dbg !9881
  call void @llvm.dbg.value(metadata i16* %2, metadata !9875, metadata !DIExpression()), !dbg !9881
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #23, !dbg !9882
  %6 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i32 0, i32 0, !dbg !9882
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %6) #23, !dbg !9882
  call void @llvm.dbg.declare(metadata [3 x i8]* %5, metadata !9879, metadata !DIExpression()), !dbg !9883
  call void @llvm.dbg.value(metadata i8 -81, metadata !9877, metadata !DIExpression()), !dbg !9884
  store i8 -81, i8* %4, align 1, !dbg !9885
  %7 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !9886
  call void @llvm.dbg.value(metadata i32 %7, metadata !9876, metadata !DIExpression()), !dbg !9881
  call void @llvm.dbg.value(metadata i8* %4, metadata !9877, metadata !DIExpression(DW_OP_deref)), !dbg !9884
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef nonnull %6, i16 noundef zeroext 1, i16 noundef zeroext 3) #21, !dbg !9887
  call void @RestoreIRQMask(i32 noundef %7) #21, !dbg !9888
  %8 = load i8, i8* %6, align 1, !dbg !9889
  %9 = add i8 %8, 1, !dbg !9891
  %10 = icmp ult i8 %9, 2, !dbg !9891
  br i1 %10, label %13, label %11, !dbg !9891

11:                                               ; preds = %3
  %12 = call zeroext i1 @CMEM_CheckValidDeviceID(i8* noundef nonnull %6) #21, !dbg !9892
  br i1 %12, label %15, label %13, !dbg !9893

13:                                               ; preds = %11, %3
  call void @llvm.dbg.value(metadata i8 -97, metadata !9877, metadata !DIExpression()), !dbg !9884
  store i8 -97, i8* %4, align 1, !dbg !9894
  %14 = call i32 @SaveAndSetIRQMask() #21, !dbg !9896
  call void @llvm.dbg.value(metadata i32 %14, metadata !9876, metadata !DIExpression()), !dbg !9881
  call void @llvm.dbg.value(metadata i8* %4, metadata !9877, metadata !DIExpression(DW_OP_deref)), !dbg !9884
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef nonnull %6, i16 noundef zeroext 1, i16 noundef zeroext 3) #21, !dbg !9897
  call void @RestoreIRQMask(i32 noundef %14) #21, !dbg !9898
  br label %15, !dbg !9899

15:                                               ; preds = %13, %11
  br label %16, !dbg !9900

16:                                               ; preds = %15, %16
  %17 = phi i32 [ %22, %16 ], [ 0, %15 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !9880, metadata !DIExpression()), !dbg !9884
  %18 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i32 0, i32 %17, !dbg !9902
  %19 = load i8, i8* %18, align 1, !dbg !9902
  %20 = zext i8 %19 to i16, !dbg !9902
  %21 = getelementptr inbounds i16, i16* %2, i32 %17, !dbg !9905
  store i16 %20, i16* %21, align 2, !dbg !9906
  %22 = add nuw nsw i32 %17, 1, !dbg !9907
  call void @llvm.dbg.value(metadata i32 %22, metadata !9880, metadata !DIExpression()), !dbg !9884
  %23 = icmp eq i32 %22, 3, !dbg !9908
  br i1 %23, label %24, label %16, !dbg !9900, !llvm.loop !9909

24:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %6) #23, !dbg !9911
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #23, !dbg !9911
  ret void, !dbg !9912
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_NORFLASH_ROMSpace() local_unnamed_addr #9 !dbg !9913 {
  ret i32 3932160, !dbg !9914
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_NORFLASH_Size() local_unnamed_addr #9 !dbg !9915 {
  ret i32 4194304, !dbg !9916
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Initialize_FDD_tables() local_unnamed_addr #0 !dbg !9917 {
  %1 = tail call i32 @ComboMem_Initialize() #21, !dbg !9918
  ret void, !dbg !9919
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @nor_sweep_device() local_unnamed_addr #9 !dbg !9920 {
  ret void, !dbg !9921
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @nor_manual_reclaim() local_unnamed_addr #9 !dbg !9922 {
  ret void, !dbg !9923
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_fat_addr() local_unnamed_addr #9 !dbg !9924 {
  ret i32 3932160, !dbg !9925
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_fat_len() local_unnamed_addr #9 !dbg !9926 {
  ret i32 262144, !dbg !9927
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Custom_NOR_Init() local_unnamed_addr #0 !dbg !9928 {
  %1 = tail call i32 @CMEM_Init_FullDriver() #21, !dbg !9929
  ret void, !dbg !9930
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_NORFLASH_Base() local_unnamed_addr #9 !dbg !9931 {
  ret i32 134217728, !dbg !9932
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_FLASH_Size() local_unnamed_addr #9 !dbg !9933 {
  ret i32 4194304, !dbg !9934
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @INT_RetrieveFlashBaseAddr() local_unnamed_addr #5 !dbg !9935 {
  store i8* inttoptr (i32 134217728 to i8*), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 1), align 4, !dbg !9936
  ret i32 134217728, !dbg !9937
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Init_NOR_MTD_Common() local_unnamed_addr #0 !dbg !9938 {
  store i32 xor (i32 ptrtoint ([8 x %struct.vdma_config_t]* @RegionInfo to i32), i32 -1), i32* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 0), align 4, !dbg !9939
  %1 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !9940
  %2 = load i32, i32* @cmem_nor_index, align 4, !dbg !9941
  %3 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 1, !dbg !9942
  %4 = load i16, i16* %3, align 2, !dbg !9942
  %5 = zext i16 %4 to i32, !dbg !9940
  store i32 %5, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !9943
  %6 = tail call i8* @memset(i8* noundef bitcast ([2 x %struct.vdma_config_t]* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 11, i32 0) to i8*), i32 noundef 255, i32 noundef 128) #21, !dbg !9944
  %7 = tail call i32 @INT_RetrieveFlashBaseAddr() #22, !dbg !9945
  store i8* inttoptr (i32 138149888 to i8*), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 1), align 4, !dbg !9946
  store %struct.vdma_config_t* getelementptr inbounds ([8 x %struct.vdma_config_t], [8 x %struct.vdma_config_t]* @RegionInfo, i32 0, i32 0), %struct.vdma_config_t** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 5), align 4, !dbg !9947
  ret i32 0, !dbg !9948
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Init_NOR_MTD_SF() local_unnamed_addr #0 !dbg !9949 {
  store %struct.NOR_MTD_Driver* @NORFlashMtd, %struct.NOR_MTD_Driver** getelementptr inbounds (%struct.NOR_FLASH_DRV_Data, %struct.NOR_FLASH_DRV_Data* @FlashDriveData, i32 0, i32 1), align 4, !dbg !9952
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @StatusMap, i32 0, i32 0), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 12), align 4, !dbg !9953
  store %struct.SF_MTD_CMD* @sf_dal_data_cmd, %struct.SF_MTD_CMD** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 13), align 4, !dbg !9954
  store i16 0, i16* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 23), align 2, !dbg !9955
  %1 = tail call i32 @INT_RetrieveFlashBaseAddr() #22, !dbg !9956
  %2 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !9957
  %3 = load i32, i32* @cmem_nor_index, align 4, !dbg !9958
  %4 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %2, i32 %3, i32 2, !dbg !9959
  %5 = load i32, i32* %4, align 4, !dbg !9959
  %6 = tail call i32 @SF_DAL_Init_Driver(%struct.NOR_MTD_Driver* noundef nonnull @NORFlashMtd, %struct.SF_MTD_Data* noundef nonnull @mtdflash, i32 noundef 138149888, i32 noundef %5) #21, !dbg !9960
  call void @llvm.dbg.value(metadata i32 %6, metadata !9951, metadata !DIExpression()), !dbg !9961
  %7 = icmp eq i32 %6, -120, !dbg !9962
  %8 = select i1 %7, i32 5, i32 0, !dbg !9961
  ret i32 %8, !dbg !9964
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i8 @EMINIT_CMEM_GET_NOR_FLASH_COUNT() local_unnamed_addr #9 !dbg !9965 {
  ret i8 1, !dbg !9967
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @EMINIT_CMEM_GET_NOR_FLASH_SIZE(i8 noundef zeroext %0) local_unnamed_addr #0 !dbg !9968 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !9972, metadata !DIExpression()), !dbg !9975
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* null, metadata !9974, metadata !DIExpression()), !dbg !9975
  %2 = tail call i32 @CMEM_EMIINIT_Index() #21, !dbg !9976
  call void @llvm.dbg.value(metadata i32 %2, metadata !9973, metadata !DIExpression()), !dbg !9975
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), metadata !9974, metadata !DIExpression()), !dbg !9975
  %3 = getelementptr inbounds %struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 %2, i32 4, i32 0, i32 0, !dbg !9977
  %4 = load i32, i32* %3, align 4, !dbg !9977
  ret i32 %4, !dbg !9978
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @CMEM_BlockSize_Internal(i32 noundef %0, %struct.vdma_config_t* nocapture noundef readonly %1) local_unnamed_addr #11 !dbg !9979 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9983, metadata !DIExpression()), !dbg !9986
  call void @llvm.dbg.value(metadata %struct.vdma_config_t* %1, metadata !9984, metadata !DIExpression()), !dbg !9986
  %3 = and i32 %0, 134217727, !dbg !9987
  call void @llvm.dbg.value(metadata i32 %3, metadata !9983, metadata !DIExpression()), !dbg !9986
  call void @llvm.dbg.value(metadata i16 0, metadata !9985, metadata !DIExpression()), !dbg !9986
  %4 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %1, i32 1, i32 1, !dbg !9988
  %5 = load i32, i32* %4, align 4, !dbg !9988
  %6 = icmp eq i32 %5, 0, !dbg !9991
  br i1 %6, label %25, label %7, !dbg !9992

7:                                                ; preds = %2, %18
  %8 = phi i32 [ %21, %18 ], [ 1, %2 ]
  %9 = phi i32 [ %20, %18 ], [ 0, %2 ]
  %10 = phi i16 [ %19, %18 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i16 %10, metadata !9985, metadata !DIExpression()), !dbg !9986
  %11 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %1, i32 %9, i32 0, !dbg !9993
  %12 = load i32, i32* %11, align 4, !dbg !9993
  %13 = icmp ult i32 %3, %12, !dbg !9996
  br i1 %13, label %18, label %14, !dbg !9997

14:                                               ; preds = %7
  %15 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %1, i32 %8, i32 0, !dbg !9998
  %16 = load i32, i32* %15, align 4, !dbg !9998
  %17 = icmp ult i32 %3, %16, !dbg !9999
  br i1 %17, label %25, label %18, !dbg !10000

18:                                               ; preds = %7, %14
  %19 = add i16 %10, 1, !dbg !10001
  call void @llvm.dbg.value(metadata i16 %19, metadata !9985, metadata !DIExpression()), !dbg !9986
  %20 = zext i16 %19 to i32, !dbg !10002
  %21 = add nuw nsw i32 %20, 1, !dbg !10003
  %22 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %1, i32 %21, i32 1, !dbg !9988
  %23 = load i32, i32* %22, align 4, !dbg !9988
  %24 = icmp eq i32 %23, 0, !dbg !9991
  br i1 %24, label %25, label %7, !dbg !9992, !llvm.loop !10004

25:                                               ; preds = %18, %14, %2
  %26 = phi i32 [ 0, %2 ], [ %9, %14 ], [ %20, %18 ], !dbg !10002
  %27 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %1, i32 %26, i32 1, !dbg !10006
  %28 = load i32, i32* %27, align 4, !dbg !10006
  ret i32 %28, !dbg !10007
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @CMEM_BlockSize(i32 noundef %0) local_unnamed_addr #11 !dbg !10008 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10010, metadata !DIExpression()), !dbg !10011
  %2 = load %struct.vdma_config_t*, %struct.vdma_config_t** @BlockLayout, align 4, !dbg !10012
  %3 = tail call i32 @CMEM_BlockSize_Internal(i32 noundef %0, %struct.vdma_config_t* noundef %2) #22, !dbg !10013
  ret i32 %3, !dbg !10014
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @EMIINIT_CMEM_BlockSize(i32 noundef %0) local_unnamed_addr #0 !dbg !10015 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10017, metadata !DIExpression()), !dbg !10020
  %2 = tail call i32 @CMEM_EMIINIT_Index() #21, !dbg !10021
  call void @llvm.dbg.value(metadata i32 %2, metadata !10018, metadata !DIExpression()), !dbg !10020
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* null, metadata !10019, metadata !DIExpression()), !dbg !10020
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), metadata !10019, metadata !DIExpression()), !dbg !10020
  %3 = getelementptr inbounds %struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 %2, i32 3, i32 0, !dbg !10022
  %4 = tail call i32 @CMEM_BlockSize_Internal(i32 noundef %0, %struct.vdma_config_t* noundef nonnull %3) #22, !dbg !10023
  ret i32 %4, !dbg !10024
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @NOR_Get_FlashSizeFromBankInfo(%struct.vdma_config_t* nocapture noundef readonly %0) local_unnamed_addr #11 !dbg !10025 {
  call void @llvm.dbg.value(metadata %struct.vdma_config_t* %0, metadata !10031, metadata !DIExpression()), !dbg !10034
  call void @llvm.dbg.value(metadata i32 0, metadata !10032, metadata !DIExpression()), !dbg !10034
  call void @llvm.dbg.value(metadata i32 0, metadata !10033, metadata !DIExpression()), !dbg !10034
  %2 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %0, i32 0, i32 0, !dbg !10035
  %3 = load i32, i32* %2, align 4, !dbg !10035
  %4 = icmp eq i32 %3, 0, !dbg !10038
  br i1 %4, label %17, label %5, !dbg !10039

5:                                                ; preds = %1, %5
  %6 = phi i32 [ %15, %5 ], [ %3, %1 ]
  %7 = phi i32 [ %13, %5 ], [ 0, %1 ]
  %8 = phi i32 [ %12, %5 ], [ 0, %1 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !10033, metadata !DIExpression()), !dbg !10034
  call void @llvm.dbg.value(metadata i32 %8, metadata !10032, metadata !DIExpression()), !dbg !10034
  %9 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %0, i32 %7, i32 1, !dbg !10040
  %10 = load i32, i32* %9, align 4, !dbg !10040
  %11 = mul i32 %10, %6, !dbg !10042
  %12 = add i32 %11, %8, !dbg !10043
  call void @llvm.dbg.value(metadata i32 %12, metadata !10032, metadata !DIExpression()), !dbg !10034
  %13 = add i32 %7, 1, !dbg !10044
  call void @llvm.dbg.value(metadata i32 %13, metadata !10033, metadata !DIExpression()), !dbg !10034
  %14 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %0, i32 %13, i32 0, !dbg !10035
  %15 = load i32, i32* %14, align 4, !dbg !10035
  %16 = icmp eq i32 %15, 0, !dbg !10038
  br i1 %16, label %17, label %5, !dbg !10039, !llvm.loop !10045

17:                                               ; preds = %5, %1
  %18 = phi i32 [ 0, %1 ], [ %12, %5 ], !dbg !10034
  ret i32 %18, !dbg !10047
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @CMEM_NOR_Construct_RegionInfo_Internal(i32 noundef %0, i32 noundef %1, %struct.vdma_config_t* nocapture noundef %2, %struct.vdma_config_t* nocapture noundef readonly %3) local_unnamed_addr #12 !dbg !10048 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10052, metadata !DIExpression()), !dbg !10061
  call void @llvm.dbg.value(metadata i32 %1, metadata !10053, metadata !DIExpression()), !dbg !10061
  call void @llvm.dbg.value(metadata %struct.vdma_config_t* %2, metadata !10054, metadata !DIExpression()), !dbg !10061
  call void @llvm.dbg.value(metadata %struct.vdma_config_t* %3, metadata !10055, metadata !DIExpression()), !dbg !10061
  %5 = add i32 %1, %0, !dbg !10062
  call void @llvm.dbg.value(metadata i32 %5, metadata !10060, metadata !DIExpression()), !dbg !10061
  call void @llvm.dbg.value(metadata i32 %0, metadata !10056, metadata !DIExpression()), !dbg !10061
  call void @llvm.dbg.value(metadata i32 0, metadata !10057, metadata !DIExpression()), !dbg !10061
  call void @llvm.dbg.value(metadata i32 0, metadata !10059, metadata !DIExpression()), !dbg !10061
  %6 = icmp ugt i32 %5, %0, !dbg !10063
  br i1 %6, label %7, label %34, !dbg !10066

7:                                                ; preds = %4, %29
  %8 = phi i32 [ %32, %29 ], [ 0, %4 ]
  %9 = phi i32 [ %31, %29 ], [ %0, %4 ]
  %10 = phi i32 [ %30, %29 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !10059, metadata !DIExpression()), !dbg !10061
  call void @llvm.dbg.value(metadata i32 %9, metadata !10056, metadata !DIExpression()), !dbg !10061
  call void @llvm.dbg.value(metadata i32 %10, metadata !10057, metadata !DIExpression()), !dbg !10061
  %11 = tail call i32 @CMEM_BlockSize_Internal(i32 noundef %9, %struct.vdma_config_t* noundef %3) #22, !dbg !10067
  call void @llvm.dbg.value(metadata i32 %11, metadata !10058, metadata !DIExpression()), !dbg !10061
  %12 = icmp eq i32 %8, 0, !dbg !10069
  %13 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %2, i32 %10, i32 0, !dbg !10071
  br i1 %12, label %14, label %16, !dbg !10072

14:                                               ; preds = %7
  store i32 %11, i32* %13, align 4, !dbg !10073
  %15 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %2, i32 %10, i32 1, !dbg !10075
  store i32 1, i32* %15, align 4, !dbg !10076
  br label %29, !dbg !10077

16:                                               ; preds = %7
  %17 = load i32, i32* %13, align 4, !dbg !10078
  %18 = icmp eq i32 %11, %17, !dbg !10080
  br i1 %18, label %19, label %23, !dbg !10081

19:                                               ; preds = %16
  %20 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %2, i32 %10, i32 1, !dbg !10082
  %21 = load i32, i32* %20, align 4, !dbg !10084
  %22 = add i32 %21, 1, !dbg !10084
  store i32 %22, i32* %20, align 4, !dbg !10084
  br label %29, !dbg !10085

23:                                               ; preds = %16
  %24 = add i32 %10, 1, !dbg !10086
  call void @llvm.dbg.value(metadata i32 %24, metadata !10057, metadata !DIExpression()), !dbg !10061
  %25 = icmp eq i32 %24, 9, !dbg !10088
  br i1 %25, label %34, label %26, !dbg !10090

26:                                               ; preds = %23
  %27 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %2, i32 %24, i32 0, !dbg !10091
  store i32 %11, i32* %27, align 4, !dbg !10092
  %28 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %2, i32 %24, i32 1, !dbg !10093
  store i32 1, i32* %28, align 4, !dbg !10094
  br label %29

29:                                               ; preds = %19, %26, %14
  %30 = phi i32 [ %10, %14 ], [ %10, %19 ], [ %24, %26 ], !dbg !10095
  call void @llvm.dbg.value(metadata i32 %30, metadata !10057, metadata !DIExpression()), !dbg !10061
  %31 = add i32 %11, %9, !dbg !10096
  call void @llvm.dbg.value(metadata i32 %31, metadata !10056, metadata !DIExpression()), !dbg !10061
  %32 = add i32 %8, 1, !dbg !10097
  call void @llvm.dbg.value(metadata i32 %32, metadata !10059, metadata !DIExpression()), !dbg !10061
  %33 = icmp ult i32 %31, %5, !dbg !10063
  br i1 %33, label %7, label %34, !dbg !10066, !llvm.loop !10098

34:                                               ; preds = %23, %29, %4
  %35 = phi i32 [ 0, %4 ], [ 0, %29 ], [ 6, %23 ], !dbg !10061
  ret i32 %35, !dbg !10100
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_Construct_RegionInfo(i32 noundef %0, i32 noundef %1, %struct.vdma_config_t* noundef %2) local_unnamed_addr #0 !dbg !10101 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10105, metadata !DIExpression()), !dbg !10108
  call void @llvm.dbg.value(metadata i32 %1, metadata !10106, metadata !DIExpression()), !dbg !10108
  call void @llvm.dbg.value(metadata %struct.vdma_config_t* %2, metadata !10107, metadata !DIExpression()), !dbg !10108
  %4 = bitcast %struct.vdma_config_t* %2 to i8*, !dbg !10109
  %5 = tail call i8* @memset(i8* noundef %4, i32 noundef 0, i32 noundef 64) #21, !dbg !10110
  %6 = load %struct.vdma_config_t*, %struct.vdma_config_t** @BlockLayout, align 4, !dbg !10111
  %7 = tail call i32 @CMEM_NOR_Construct_RegionInfo_Internal(i32 noundef %0, i32 noundef %1, %struct.vdma_config_t* noundef %2, %struct.vdma_config_t* noundef %6) #22, !dbg !10112
  ret i32 %7, !dbg !10113
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @NOR_Construct_DualRegionInfo(i32 noundef %0, i32 noundef %1, %struct.vdma_config_t* nocapture noundef readnone %2) local_unnamed_addr #9 !dbg !10114 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10116, metadata !DIExpression()), !dbg !10119
  call void @llvm.dbg.value(metadata i32 %1, metadata !10117, metadata !DIExpression()), !dbg !10119
  call void @llvm.dbg.value(metadata %struct.vdma_config_t* %2, metadata !10118, metadata !DIExpression()), !dbg !10119
  ret i32 0, !dbg !10120
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @EMIINIT_CMEM_NOR_Construct_RegionInfo(i32 noundef %0, i32 noundef %1, %struct.vdma_config_t* nocapture noundef %2) local_unnamed_addr #0 !dbg !10121 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10123, metadata !DIExpression()), !dbg !10128
  call void @llvm.dbg.value(metadata i32 %1, metadata !10124, metadata !DIExpression()), !dbg !10128
  call void @llvm.dbg.value(metadata %struct.vdma_config_t* %2, metadata !10125, metadata !DIExpression()), !dbg !10128
  %4 = tail call i32 @CMEM_EMIINIT_Index() #21, !dbg !10129
  call void @llvm.dbg.value(metadata i32 %4, metadata !10126, metadata !DIExpression()), !dbg !10128
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* null, metadata !10127, metadata !DIExpression()), !dbg !10128
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), metadata !10127, metadata !DIExpression()), !dbg !10128
  %5 = getelementptr inbounds %struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 %4, i32 3, i32 0, !dbg !10130
  %6 = tail call i32 @CMEM_NOR_Construct_RegionInfo_Internal(i32 noundef %0, i32 noundef %1, %struct.vdma_config_t* noundef %2, %struct.vdma_config_t* noundef nonnull %5) #22, !dbg !10131
  ret i32 %6, !dbg !10132
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @EMIINIT_CMEM_NOR_Construct_DualRegionInfo(i32 noundef %0, i32 noundef %1, %struct.vdma_config_t* nocapture noundef readnone %2) local_unnamed_addr #9 !dbg !10133 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10135, metadata !DIExpression()), !dbg !10138
  call void @llvm.dbg.value(metadata i32 %1, metadata !10136, metadata !DIExpression()), !dbg !10138
  call void @llvm.dbg.value(metadata %struct.vdma_config_t* %2, metadata !10137, metadata !DIExpression()), !dbg !10138
  ret i32 0, !dbg !10139
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @EMIINIT_CMEM_NOR_GetUniformBlock(i16 noundef zeroext %0) local_unnamed_addr #0 !dbg !10140 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !10142, metadata !DIExpression()), !dbg !10145
  %2 = tail call i32 @CMEM_EMIINIT_Index() #21, !dbg !10146
  call void @llvm.dbg.value(metadata i32 %2, metadata !10143, metadata !DIExpression()), !dbg !10145
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* null, metadata !10144, metadata !DIExpression()), !dbg !10145
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), metadata !10144, metadata !DIExpression()), !dbg !10145
  %3 = getelementptr inbounds %struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 %2, i32 2, !dbg !10147
  %4 = load i32, i32* %3, align 4, !dbg !10147
  ret i32 %4, !dbg !10148
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @CMEM_NOR_AddBankInfo(%struct.vdma_config_t* nocapture noundef %0, i32* nocapture noundef %1, i32 noundef %2) local_unnamed_addr #6 !dbg !10149 {
  call void @llvm.dbg.value(metadata %struct.vdma_config_t* %0, metadata !10153, metadata !DIExpression()), !dbg !10156
  call void @llvm.dbg.value(metadata i32* %1, metadata !10154, metadata !DIExpression()), !dbg !10156
  call void @llvm.dbg.value(metadata i32 %2, metadata !10155, metadata !DIExpression()), !dbg !10156
  %4 = load i32, i32* %1, align 4, !dbg !10157
  %5 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %0, i32 %4, i32 0, !dbg !10159
  %6 = load i32, i32* %5, align 4, !dbg !10159
  %7 = icmp eq i32 %6, %2, !dbg !10160
  br i1 %7, label %8, label %12, !dbg !10161

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %0, i32 %4, i32 1, !dbg !10162
  %10 = load i32, i32* %9, align 4, !dbg !10164
  %11 = add i32 %10, 1, !dbg !10164
  store i32 %11, i32* %9, align 4, !dbg !10164
  br label %17, !dbg !10165

12:                                               ; preds = %3
  %13 = add i32 %4, 1, !dbg !10166
  store i32 %13, i32* %1, align 4, !dbg !10166
  %14 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %0, i32 %13, i32 1, !dbg !10168
  store i32 1, i32* %14, align 4, !dbg !10169
  %15 = load i32, i32* %1, align 4, !dbg !10170
  %16 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %0, i32 %15, i32 0, !dbg !10171
  store i32 %2, i32* %16, align 4, !dbg !10172
  br label %17

17:                                               ; preds = %12, %8
  ret void, !dbg !10173
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_NOR_Construct_BankInfo(i32 noundef %0, i32 noundef %1, %struct.vdma_config_t* noundef %2, %struct.vdma_config_t* nocapture noundef readonly %3) local_unnamed_addr #0 !dbg !10174 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10178, metadata !DIExpression()), !dbg !10187
  call void @llvm.dbg.value(metadata i32 %1, metadata !10179, metadata !DIExpression()), !dbg !10187
  call void @llvm.dbg.value(metadata %struct.vdma_config_t* %2, metadata !10180, metadata !DIExpression()), !dbg !10187
  call void @llvm.dbg.value(metadata %struct.vdma_config_t* %3, metadata !10181, metadata !DIExpression()), !dbg !10187
  call void @llvm.dbg.value(metadata i32 0, metadata !10182, metadata !DIExpression()), !dbg !10187
  call void @llvm.dbg.value(metadata i32 0, metadata !10183, metadata !DIExpression()), !dbg !10187
  %5 = bitcast %struct.vdma_config_t* %2 to i8*, !dbg !10188
  %6 = tail call i8* @memset(i8* noundef %5, i32 noundef 0, i32 noundef 64) #21, !dbg !10189
  call void @llvm.dbg.value(metadata i32 0, metadata !10186, metadata !DIExpression()), !dbg !10187
  call void @llvm.dbg.value(metadata i32 0, metadata !10185, metadata !DIExpression()), !dbg !10187
  call void @llvm.dbg.value(metadata i32 0, metadata !10183, metadata !DIExpression()), !dbg !10187
  call void @llvm.dbg.value(metadata i32 0, metadata !10182, metadata !DIExpression()), !dbg !10187
  call void @llvm.dbg.value(metadata i32 %0, metadata !10178, metadata !DIExpression()), !dbg !10187
  call void @llvm.dbg.value(metadata i32 %1, metadata !10179, metadata !DIExpression()), !dbg !10187
  %7 = icmp eq i32 %1, 0, !dbg !10190
  br i1 %7, label %53, label %8, !dbg !10193

8:                                                ; preds = %4, %46
  %9 = phi i32 [ %51, %46 ], [ 0, %4 ]
  %10 = phi i32 [ %23, %46 ], [ 0, %4 ]
  %11 = phi i32 [ %49, %46 ], [ 0, %4 ]
  %12 = phi i32 [ %20, %46 ], [ 0, %4 ]
  %13 = phi i32 [ %48, %46 ], [ %0, %4 ]
  %14 = phi i32 [ %47, %46 ], [ %1, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !10186, metadata !DIExpression()), !dbg !10187
  call void @llvm.dbg.value(metadata i32 %10, metadata !10185, metadata !DIExpression()), !dbg !10187
  call void @llvm.dbg.value(metadata i32 %11, metadata !10183, metadata !DIExpression()), !dbg !10187
  call void @llvm.dbg.value(metadata i32 %12, metadata !10182, metadata !DIExpression()), !dbg !10187
  call void @llvm.dbg.value(metadata i32 %13, metadata !10178, metadata !DIExpression()), !dbg !10187
  call void @llvm.dbg.value(metadata i32 %14, metadata !10179, metadata !DIExpression()), !dbg !10187
  %15 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %3, i32 %12, i32 1, !dbg !10194
  %16 = load i32, i32* %15, align 4, !dbg !10194
  %17 = icmp ult i32 %9, %16, !dbg !10197
  %18 = xor i1 %17, true, !dbg !10198
  %19 = zext i1 %18 to i32, !dbg !10198
  %20 = add i32 %12, %19, !dbg !10198
  call void @llvm.dbg.value(metadata i32 undef, metadata !10186, metadata !DIExpression()), !dbg !10187
  call void @llvm.dbg.value(metadata i32 %20, metadata !10182, metadata !DIExpression()), !dbg !10187
  %21 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %3, i32 %20, i32 0, !dbg !10199
  %22 = load i32, i32* %21, align 4, !dbg !10199
  %23 = add i32 %22, %10, !dbg !10200
  call void @llvm.dbg.value(metadata i32 %23, metadata !10185, metadata !DIExpression()), !dbg !10187
  %24 = icmp ult i32 %23, %13, !dbg !10201
  br i1 %24, label %46, label %25, !dbg !10203

25:                                               ; preds = %8
  %26 = sub i32 %23, %13, !dbg !10204
  call void @llvm.dbg.value(metadata i32 %26, metadata !10184, metadata !DIExpression()), !dbg !10187
  %27 = icmp ult i32 %14, %26, !dbg !10206
  %28 = select i1 %27, i32 %14, i32 %26, !dbg !10208
  call void @llvm.dbg.value(metadata i32 %28, metadata !10184, metadata !DIExpression()), !dbg !10187
  %29 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %2, i32 %11, i32 0, !dbg !10209
  %30 = load i32, i32* %29, align 4, !dbg !10209
  %31 = icmp eq i32 %30, %28, !dbg !10211
  br i1 %31, label %32, label %36, !dbg !10212

32:                                               ; preds = %25
  %33 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %2, i32 %11, i32 1, !dbg !10213
  %34 = load i32, i32* %33, align 4, !dbg !10215
  %35 = add i32 %34, 1, !dbg !10215
  store i32 %35, i32* %33, align 4, !dbg !10215
  br label %42, !dbg !10216

36:                                               ; preds = %25
  %37 = icmp ne i32 %30, 0, !dbg !10217
  %38 = zext i1 %37 to i32, !dbg !10220
  %39 = add nsw i32 %11, %38, !dbg !10220
  call void @llvm.dbg.value(metadata i32 %39, metadata !10183, metadata !DIExpression()), !dbg !10187
  %40 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %2, i32 %39, i32 1, !dbg !10221
  store i32 1, i32* %40, align 4, !dbg !10222
  %41 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %2, i32 %39, i32 0, !dbg !10223
  store i32 %28, i32* %41, align 4, !dbg !10224
  br label %42

42:                                               ; preds = %36, %32
  %43 = phi i32 [ %11, %32 ], [ %39, %36 ], !dbg !10187
  call void @llvm.dbg.value(metadata i32 %43, metadata !10183, metadata !DIExpression()), !dbg !10187
  %44 = add i32 %28, %13, !dbg !10225
  call void @llvm.dbg.value(metadata i32 %44, metadata !10178, metadata !DIExpression()), !dbg !10187
  %45 = sub i32 %14, %28, !dbg !10226
  call void @llvm.dbg.value(metadata i32 %45, metadata !10179, metadata !DIExpression()), !dbg !10187
  br label %46, !dbg !10227

46:                                               ; preds = %8, %42
  %47 = phi i32 [ %45, %42 ], [ %14, %8 ]
  %48 = phi i32 [ %44, %42 ], [ %13, %8 ]
  %49 = phi i32 [ %43, %42 ], [ %11, %8 ], !dbg !10228
  call void @llvm.dbg.value(metadata i32 %49, metadata !10183, metadata !DIExpression()), !dbg !10187
  call void @llvm.dbg.value(metadata i32 %48, metadata !10178, metadata !DIExpression()), !dbg !10187
  call void @llvm.dbg.value(metadata i32 %47, metadata !10179, metadata !DIExpression()), !dbg !10187
  %50 = add nuw i32 %9, 1, !dbg !10229
  %51 = select i1 %17, i32 %50, i32 1, !dbg !10229
  call void @llvm.dbg.value(metadata i32 %51, metadata !10186, metadata !DIExpression()), !dbg !10187
  call void @llvm.dbg.value(metadata i32 %23, metadata !10185, metadata !DIExpression()), !dbg !10187
  call void @llvm.dbg.value(metadata i32 %20, metadata !10182, metadata !DIExpression()), !dbg !10187
  %52 = icmp eq i32 %47, 0, !dbg !10190
  br i1 %52, label %53, label %8, !dbg !10193, !llvm.loop !10230

53:                                               ; preds = %46, %4
  ret i32 0, !dbg !10232
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Init_NOR() local_unnamed_addr #0 !dbg !10233 {
  %1 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !10237
  %2 = load i32, i32* @cmem_nor_index, align 4, !dbg !10238
  %3 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 3, i32 0, !dbg !10237
  store %struct.vdma_config_t* %3, %struct.vdma_config_t** @BlockLayout, align 4, !dbg !10239
  %4 = tail call i32 @custom_get_fat_addr() #21, !dbg !10240
  %5 = tail call i32 @custom_get_fat_len() #21, !dbg !10241
  %6 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !10242
  %7 = load i32, i32* @cmem_nor_index, align 4, !dbg !10243
  %8 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %6, i32 %7, i32 4, i32 0, !dbg !10242
  %9 = tail call i32 @CMEM_NOR_Construct_BankInfo(i32 noundef %4, i32 noundef %5, %struct.vdma_config_t* noundef getelementptr inbounds ([8 x %struct.vdma_config_t], [8 x %struct.vdma_config_t]* @BankInfo, i32 0, i32 0), %struct.vdma_config_t* noundef nonnull %8) #22, !dbg !10244
  %10 = tail call i32 @custom_get_fat_addr() #21, !dbg !10245
  %11 = tail call i32 @custom_get_fat_len() #21, !dbg !10246
  %12 = tail call i32 @NOR_Construct_RegionInfo(i32 noundef %10, i32 noundef %11, %struct.vdma_config_t* noundef getelementptr inbounds ([8 x %struct.vdma_config_t], [8 x %struct.vdma_config_t]* @RegionInfo, i32 0, i32 0)) #22, !dbg !10247
  call void @llvm.dbg.value(metadata i32 %12, metadata !10235, metadata !DIExpression()), !dbg !10248
  %13 = icmp eq i32 %12, 0, !dbg !10249
  br i1 %13, label %14, label %46, !dbg !10251

14:                                               ; preds = %0
  call void @llvm.dbg.value(metadata i32 0, metadata !10236, metadata !DIExpression()), !dbg !10248
  store i32 0, i32* @TOTAL_BLOCKS, align 4, !dbg !10252
  store i32 0, i32* @NOR_LARGEST_BLOCK_SIZE, align 4, !dbg !10254
  call void @llvm.dbg.value(metadata i32 0, metadata !10236, metadata !DIExpression()), !dbg !10248
  %15 = load i32, i32* getelementptr inbounds ([8 x %struct.vdma_config_t], [8 x %struct.vdma_config_t]* @RegionInfo, i32 0, i32 0, i32 0), align 4, !dbg !10255
  %16 = icmp eq i32 %15, 0, !dbg !10257
  br i1 %16, label %34, label %17, !dbg !10258

17:                                               ; preds = %14, %27
  %18 = phi i32 [ %31, %27 ], [ %15, %14 ]
  %19 = phi i32 [ %29, %27 ], [ 0, %14 ]
  %20 = phi i32 [ %24, %27 ], [ 0, %14 ]
  %21 = phi i32 [ %28, %27 ], [ 0, %14 ]
  call void @llvm.dbg.value(metadata i32 %19, metadata !10236, metadata !DIExpression()), !dbg !10248
  %22 = getelementptr inbounds [8 x %struct.vdma_config_t], [8 x %struct.vdma_config_t]* @RegionInfo, i32 0, i32 %19, i32 1, !dbg !10259
  %23 = load i32, i32* %22, align 4, !dbg !10259
  %24 = add i32 %20, %23, !dbg !10261
  %25 = icmp ugt i32 %18, %21, !dbg !10262
  br i1 %25, label %26, label %27, !dbg !10264

26:                                               ; preds = %17
  store i32 %18, i32* @NOR_LARGEST_BLOCK_SIZE, align 4, !dbg !10265
  br label %27, !dbg !10267

27:                                               ; preds = %17, %26
  %28 = phi i32 [ %21, %17 ], [ %18, %26 ]
  %29 = add nuw nsw i32 %19, 1, !dbg !10268
  call void @llvm.dbg.value(metadata i32 %29, metadata !10236, metadata !DIExpression()), !dbg !10248
  %30 = getelementptr inbounds [8 x %struct.vdma_config_t], [8 x %struct.vdma_config_t]* @RegionInfo, i32 0, i32 %29, i32 0, !dbg !10255
  %31 = load i32, i32* %30, align 4, !dbg !10255
  %32 = icmp eq i32 %31, 0, !dbg !10257
  br i1 %32, label %33, label %17, !dbg !10258, !llvm.loop !10269

33:                                               ; preds = %27
  store i32 %24, i32* @TOTAL_BLOCKS, align 4, !dbg !10261
  br label %34, !dbg !10258

34:                                               ; preds = %33, %14
  %35 = phi i32 [ %28, %33 ], [ 0, %14 ], !dbg !10271
  %36 = mul i32 %35, -5, !dbg !10272
  %37 = add i32 %36, 262144, !dbg !10273
  %38 = lshr i32 %37, 9, !dbg !10274
  store i32 %38, i32* @TOTAL_SECTORS, align 4, !dbg !10275
  %39 = tail call i32 @CMEM_Init_NOR_MTD_Common() #22, !dbg !10276
  call void @llvm.dbg.value(metadata i32 0, metadata !10235, metadata !DIExpression()), !dbg !10248
  %40 = load %struct.CMEMEntryID*, %struct.CMEMEntryID** @cmem_id, align 4, !dbg !10277
  %41 = getelementptr inbounds %struct.CMEMEntryID, %struct.CMEMEntryID* %40, i32 0, i32 0, !dbg !10278
  %42 = load i8, i8* %41, align 1, !dbg !10278
  %43 = icmp eq i8 %42, 3, !dbg !10279
  br i1 %43, label %44, label %46, !dbg !10279

44:                                               ; preds = %34
  %45 = tail call i32 @CMEM_Init_NOR_MTD_SF() #22, !dbg !10280
  call void @llvm.dbg.value(metadata i32 %45, metadata !10235, metadata !DIExpression()), !dbg !10248
  br label %46, !dbg !10282

46:                                               ; preds = %44, %34, %0
  %47 = phi i32 [ %12, %0 ], [ %45, %44 ], [ 3, %34 ], !dbg !10248
  ret i32 %47, !dbg !10283
}

; Function Attrs: noinline nounwind optsize
define dso_local void @CMEM_Init_nor_list(i32 noundef %0) local_unnamed_addr #0 !dbg !10284 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10288, metadata !DIExpression()), !dbg !10289
  %2 = icmp eq i32 %0, 0, !dbg !10290
  br i1 %2, label %3, label %9, !dbg !10292

3:                                                ; preds = %1
  %4 = tail call i32 @CMEM_Index() #21, !dbg !10293
  store i32 %4, i32* @cmem_nor_index, align 4, !dbg !10295
  %5 = icmp slt i32 %4, 0, !dbg !10296
  br i1 %5, label %6, label %7, !dbg !10298

6:                                                ; preds = %3
  tail call void @Flash_ReturnReady() #21, !dbg !10299
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.141, i32 0, i32 0), i32 noundef 921, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.CMEM_Init_nor_list, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.142, i32 0, i32 0)) #24, !dbg !10299
  unreachable, !dbg !10299

7:                                                ; preds = %3
  %8 = tail call %struct.CMEMEntryID* @CMEM_GetIDEntry(i32 noundef %4) #21, !dbg !10304
  store %struct.CMEMEntryID* %8, %struct.CMEMEntryID** @cmem_id, align 4, !dbg !10305
  br label %9, !dbg !10306

9:                                                ; preds = %7, %1
  store %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !10307
  ret void, !dbg !10308
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @ComboMem_Initialize() local_unnamed_addr #0 !dbg !10309 {
  tail call void @CMEM_Init_nor_list(i32 noundef 0) #22, !dbg !10310
  %1 = tail call i32 @CMEM_Init_NOR() #22, !dbg !10311
  ret i32 %1, !dbg !10312
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Init_FullDriver() local_unnamed_addr #0 !dbg !10313 {
  tail call void @CMEM_Init_nor_list(i32 noundef 0) #22, !dbg !10316
  %1 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !10317
  %2 = load i32, i32* @cmem_nor_index, align 4, !dbg !10318
  %3 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 1, !dbg !10319
  %4 = load i16, i16* %3, align 2, !dbg !10319
  %5 = zext i16 %4 to i32, !dbg !10317
  store i32 %5, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !10320
  %6 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 3, i32 0, !dbg !10321
  store %struct.vdma_config_t* %6, %struct.vdma_config_t** @BlockLayout, align 4, !dbg !10322
  %7 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 4, i32 0, !dbg !10323
  %8 = bitcast %struct.vdma_config_t* %7 to i8*, !dbg !10323
  %9 = tail call i8* @memcpy(i8* noundef bitcast ([8 x %struct.vdma_config_t]* @BankInfo to i8*), i8* noundef nonnull %8, i32 noundef 64) #21, !dbg !10324
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @StatusMap, i32 0, i32 0), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 12), align 4, !dbg !10325
  store %struct.SF_MTD_CMD* @sf_dal_data_cmd, %struct.SF_MTD_CMD** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 13), align 4, !dbg !10326
  store i16 0, i16* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 23), align 2, !dbg !10327
  store i32 xor (i32 ptrtoint ([8 x %struct.vdma_config_t]* @EntireDiskRegionInfo to i32), i32 -1), i32* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 0), align 4, !dbg !10328
  store i8* inttoptr (i32 134217728 to i8*), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 1), align 4, !dbg !10329
  %10 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !10330
  %11 = load i32, i32* @cmem_nor_index, align 4, !dbg !10331
  %12 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %10, i32 %11, i32 2, !dbg !10332
  %13 = load i32, i32* %12, align 4, !dbg !10332
  %14 = tail call i32 @SF_DAL_Init_Driver(%struct.NOR_MTD_Driver* noundef nonnull @NORFlashMtd, %struct.SF_MTD_Data* noundef nonnull @EntireDiskMtdData, i32 noundef 134217728, i32 noundef %13) #21, !dbg !10333
  call void @llvm.dbg.value(metadata i32 %14, metadata !10315, metadata !DIExpression()), !dbg !10334
  %15 = icmp eq i32 %14, -120, !dbg !10335
  br i1 %15, label %16, label %17, !dbg !10338

16:                                               ; preds = %0
  tail call void @Flash_ReturnReady() #21, !dbg !10339
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.141, i32 0, i32 0), i32 noundef 1063, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.CMEM_Init_FullDriver, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.142, i32 0, i32 0)) #24, !dbg !10339
  unreachable, !dbg !10339

17:                                               ; preds = %0
  %18 = tail call i32 @NOR_Get_FlashSizeFromBankInfo(%struct.vdma_config_t* noundef getelementptr inbounds ([8 x %struct.vdma_config_t], [8 x %struct.vdma_config_t]* @BankInfo, i32 0, i32 0)) #22, !dbg !10341
  store i32 %18, i32* getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 0), align 4, !dbg !10342
  %19 = tail call i32 @NOR_Construct_RegionInfo(i32 noundef 0, i32 noundef %18, %struct.vdma_config_t* noundef getelementptr inbounds ([8 x %struct.vdma_config_t], [8 x %struct.vdma_config_t]* @EntireDiskRegionInfo, i32 0, i32 0)) #22, !dbg !10343
  store %struct.vdma_config_t* getelementptr inbounds ([8 x %struct.vdma_config_t], [8 x %struct.vdma_config_t]* @EntireDiskRegionInfo, i32 0, i32 0), %struct.vdma_config_t** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 5), align 4, !dbg !10344
  store %struct.NOR_MTD_Driver* @NORFlashMtd, %struct.NOR_MTD_Driver** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 1), align 4, !dbg !10345
  store i8* bitcast (%struct.SF_MTD_Data* @EntireDiskMtdData to i8*), i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !10346
  store i8 0, i8* getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 4), align 4, !dbg !10347
  ret i32 0, !dbg !10348
}

; Function Attrs: optsize
declare dso_local i8* @memcpy(i8* noundef, i8* noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @CreateFDMLock() local_unnamed_addr #9 !dbg !10349 {
  ret void, !dbg !10350
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @GetFDMLock() local_unnamed_addr #0 !dbg !10351 {
  %1 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !10354
  call void @llvm.dbg.value(metadata i32 %1, metadata !10353, metadata !DIExpression()), !dbg !10355
  %2 = load i1, i1* @FDMMutex, align 4, !dbg !10356
  br i1 %2, label %4, label %3, !dbg !10358

3:                                                ; preds = %0
  store i1 true, i1* @FDMMutex, align 4, !dbg !10359
  br label %4, !dbg !10361

4:                                                ; preds = %0, %3
  %5 = phi i32 [ 0, %3 ], [ -2, %0 ], !dbg !10362
  tail call void @RestoreIRQMask(i32 noundef %1) #21, !dbg !10362
  ret i32 %5, !dbg !10363
}

; Function Attrs: noinline nounwind optsize
define dso_local void @FreeFDMLock() local_unnamed_addr #0 !dbg !10364 {
  %1 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !10367
  call void @llvm.dbg.value(metadata i32 %1, metadata !10366, metadata !DIExpression()), !dbg !10368
  %2 = load i1, i1* @FDMMutex, align 4, !dbg !10369
  br i1 %2, label %3, label %4, !dbg !10371

3:                                                ; preds = %0
  store i1 false, i1* @FDMMutex, align 4, !dbg !10372
  tail call void @RestoreIRQMask(i32 noundef %1) #21, !dbg !10374
  ret void, !dbg !10375

4:                                                ; preds = %0
  tail call void @RestoreIRQMask(i32 noundef %1) #21, !dbg !10376
  tail call void @Flash_ReturnReady() #21, !dbg !10378
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.147, i32 0, i32 0), i32 noundef 112, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.FreeFDMLock, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.148, i32 0, i32 0)) #24, !dbg !10378
  unreachable, !dbg !10378
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @create_FDM_lock() local_unnamed_addr #9 !dbg !10382 {
  ret void, !dbg !10383
}

; Function Attrs: noinline nounwind optsize
define dso_local void @retrieve_FDM_lock() local_unnamed_addr #0 !dbg !10384 {
  br label %1, !dbg !10387

1:                                                ; preds = %1, %0
  %2 = tail call i32 @GetFDMLock() #22, !dbg !10388
  call void @llvm.dbg.value(metadata i32 %2, metadata !10386, metadata !DIExpression()), !dbg !10390
  %3 = icmp eq i32 %2, 0, !dbg !10391
  br i1 %3, label %4, label %1, !dbg !10392, !llvm.loop !10393

4:                                                ; preds = %1
  ret void, !dbg !10395
}

; Function Attrs: noinline nounwind optsize
define dso_local void @release_FDM_lock() local_unnamed_addr #0 !dbg !10396 {
  tail call void @FreeFDMLock() #22, !dbg !10397
  ret void, !dbg !10398
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @readRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !10399 {
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* %0, metadata !10442, metadata !DIExpression()), !dbg !10448
  call void @llvm.dbg.value(metadata i32 %1, metadata !10443, metadata !DIExpression()), !dbg !10448
  call void @llvm.dbg.value(metadata i8* %2, metadata !10444, metadata !DIExpression()), !dbg !10448
  call void @llvm.dbg.value(metadata i32 %3, metadata !10445, metadata !DIExpression()), !dbg !10448
  %5 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 0, !dbg !10449
  %6 = load i32, i32* %5, align 4, !dbg !10449
  call void @llvm.dbg.value(metadata i32 %6, metadata !10447, metadata !DIExpression()), !dbg !10448
  %7 = icmp ule i32 %6, %1, !dbg !10450
  %8 = add i32 %3, %1
  %9 = icmp ugt i32 %8, %6
  %10 = or i1 %7, %9, !dbg !10452
  br i1 %10, label %26, label %11, !dbg !10452

11:                                               ; preds = %4
  %12 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 2, !dbg !10453
  %13 = bitcast i8** %12 to %struct.NOR_Flash_MTD_Data**, !dbg !10453
  %14 = load %struct.NOR_Flash_MTD_Data*, %struct.NOR_Flash_MTD_Data** %13, align 4, !dbg !10453
  %15 = getelementptr inbounds %struct.NOR_Flash_MTD_Data, %struct.NOR_Flash_MTD_Data* %14, i32 0, i32 1, !dbg !10454
  %16 = load i8*, i8** %15, align 4, !dbg !10454
  %17 = ptrtoint i8* %16 to i32, !dbg !10455
  %18 = add i32 %17, %1, !dbg !10456
  call void @llvm.dbg.value(metadata i32 %18, metadata !10446, metadata !DIExpression()), !dbg !10448
  %19 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 4, !dbg !10457
  %20 = load i8, i8* %19, align 4, !dbg !10457, !range !3203
  %21 = icmp eq i8 %20, 0, !dbg !10457
  br i1 %21, label %22, label %23, !dbg !10459

22:                                               ; preds = %11
  tail call fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef nonnull %0) #22, !dbg !10460
  br label %23, !dbg !10462

23:                                               ; preds = %22, %11
  tail call void @retrieve_FDM_lock() #22, !dbg !10463
  %24 = inttoptr i32 %18 to i8*, !dbg !10464
  %25 = tail call i8* @memcpy(i8* noundef %2, i8* noundef %24, i32 noundef %3) #21, !dbg !10465
  tail call void @release_FDM_lock() #22, !dbg !10466
  br label %26, !dbg !10467

26:                                               ; preds = %4, %23
  %27 = phi i32 [ 0, %23 ], [ 2, %4 ], !dbg !10448
  ret i32 %27, !dbg !10468
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef %0) unnamed_addr #0 !dbg !10469 {
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* %0, metadata !10473, metadata !DIExpression()), !dbg !10475
  %2 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 4, !dbg !10476
  %3 = load i8, i8* %2, align 4, !dbg !10476, !range !3203
  %4 = icmp eq i8 %3, 0, !dbg !10476
  br i1 %4, label %5, label %18, !dbg !10478

5:                                                ; preds = %1
  tail call void @retrieve_FDM_lock() #22, !dbg !10479
  %6 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 1, !dbg !10480
  %7 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %6, align 4, !dbg !10480
  %8 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %7, i32 0, i32 0, !dbg !10481
  %9 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %8, align 4, !dbg !10481
  %10 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 2, !dbg !10482
  %11 = load i8*, i8** %10, align 4, !dbg !10482
  %12 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 3, !dbg !10483
  %13 = bitcast %struct.NOR_MTD_FlashInfo* %12 to i8*, !dbg !10484
  %14 = tail call i32 %9(i8* noundef %11, i8* noundef nonnull %13) #21, !dbg !10485
  call void @llvm.dbg.value(metadata i32 %14, metadata !10474, metadata !DIExpression()), !dbg !10475
  tail call void @release_FDM_lock() #22, !dbg !10486
  %15 = icmp slt i32 %14, 0, !dbg !10487
  br i1 %15, label %16, label %17, !dbg !10489

16:                                               ; preds = %5
  tail call void @Flash_ReturnReady() #21, !dbg !10490
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.147, i32 0, i32 0), i32 noundef 191, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.MountDevice, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.148, i32 0, i32 0)) #24, !dbg !10490
  unreachable, !dbg !10490

17:                                               ; preds = %5
  store i8 1, i8* %2, align 4, !dbg !10495
  br label %18, !dbg !10496

18:                                               ; preds = %1, %17
  ret void, !dbg !10496
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @writeRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !10497 {
  %5 = alloca i16, align 2
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* %0, metadata !10499, metadata !DIExpression()), !dbg !10520
  call void @llvm.dbg.value(metadata i32 %1, metadata !10500, metadata !DIExpression()), !dbg !10520
  call void @llvm.dbg.value(metadata i8* %2, metadata !10501, metadata !DIExpression()), !dbg !10520
  call void @llvm.dbg.value(metadata i32 %3, metadata !10502, metadata !DIExpression()), !dbg !10520
  %6 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 0, !dbg !10521
  %7 = load i32, i32* %6, align 4, !dbg !10521
  call void @llvm.dbg.value(metadata i32 %7, metadata !10505, metadata !DIExpression()), !dbg !10520
  call void @llvm.dbg.value(metadata i32 0, metadata !10506, metadata !DIExpression()), !dbg !10520
  call void @llvm.dbg.value(metadata i32 0, metadata !10507, metadata !DIExpression()), !dbg !10520
  %8 = icmp ugt i32 %7, %1, !dbg !10522
  br i1 %8, label %9, label %101, !dbg !10524

9:                                                ; preds = %4
  %10 = add i32 %3, %1, !dbg !10525
  %11 = icmp ugt i32 %10, %7, !dbg !10527
  br i1 %11, label %101, label %12, !dbg !10528

12:                                               ; preds = %9
  %13 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 4, !dbg !10529
  %14 = load i8, i8* %13, align 4, !dbg !10529, !range !3203
  %15 = icmp eq i8 %14, 0, !dbg !10529
  br i1 %15, label %16, label %17, !dbg !10531

16:                                               ; preds = %12
  tail call fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef nonnull %0) #22, !dbg !10532
  br label %17, !dbg !10534

17:                                               ; preds = %16, %12
  tail call void @retrieve_FDM_lock() #22, !dbg !10535
  %18 = bitcast i16* %5 to i8*, !dbg !10536
  call void @llvm.dbg.value(metadata i32 0, metadata !10506, metadata !DIExpression()), !dbg !10520
  call void @llvm.dbg.value(metadata i32 0, metadata !10507, metadata !DIExpression()), !dbg !10520
  %19 = icmp eq i32 %3, 0, !dbg !10537
  br i1 %19, label %99, label %20, !dbg !10538

20:                                               ; preds = %17
  %21 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 2
  %22 = ptrtoint i8* %2 to i32
  %23 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 1
  %24 = getelementptr inbounds i8, i8* %18, i32 1
  br label %25, !dbg !10538

25:                                               ; preds = %20, %96
  %26 = phi i32 [ 0, %20 ], [ %97, %96 ]
  call void @llvm.dbg.value(metadata i32 %26, metadata !10507, metadata !DIExpression()), !dbg !10520
  %27 = load i8*, i8** %21, align 4, !dbg !10539
  %28 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !10540
  %29 = bitcast i8* %28 to i8**, !dbg !10540
  %30 = load i8*, i8** %29, align 4, !dbg !10540
  %31 = ptrtoint i8* %30 to i32, !dbg !10541
  %32 = add i32 %31, %1, !dbg !10542
  %33 = add i32 %32, %26, !dbg !10543
  call void @llvm.dbg.value(metadata i32 %33, metadata !10503, metadata !DIExpression()), !dbg !10520
  %34 = add i32 %26, %22, !dbg !10544
  call void @llvm.dbg.value(metadata i32 %34, metadata !10504, metadata !DIExpression()), !dbg !10520
  %35 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %23, align 4, !dbg !10545
  %36 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %35, i32 0, i32 2, !dbg !10546
  %37 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %36, align 4, !dbg !10546
  %38 = add i32 %26, %1, !dbg !10547
  %39 = call i32 @BlockIndex(i8* noundef %27, i32 noundef %38) #21, !dbg !10548
  %40 = call i8* %37(i8* noundef %27, i32 noundef %39, i32 noundef 0) #21, !dbg !10549
  %41 = and i32 %33, 1, !dbg !10550
  %42 = icmp eq i32 %41, 0, !dbg !10550
  br i1 %42, label %43, label %46, !dbg !10551

43:                                               ; preds = %25
  %44 = sub i32 %3, %26, !dbg !10552
  %45 = icmp eq i32 %44, 1, !dbg !10553
  br i1 %45, label %46, label %57, !dbg !10554

46:                                               ; preds = %43, %25
  %47 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %23, align 4, !dbg !10555
  %48 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %47, i32 0, i32 4, !dbg !10557
  %49 = load i32 (i8*, i8*, i8*, i32)*, i32 (i8*, i8*, i8*, i32)** %48, align 4, !dbg !10557
  %50 = load i8*, i8** %21, align 4, !dbg !10558
  %51 = inttoptr i32 %33 to i8*, !dbg !10559
  %52 = inttoptr i32 %34 to i8*, !dbg !10560
  %53 = call i32 %49(i8* noundef %50, i8* noundef %51, i8* noundef %52, i32 noundef 1) #21, !dbg !10561
  call void @llvm.dbg.value(metadata i32 %53, metadata !10506, metadata !DIExpression()), !dbg !10520
  %54 = icmp eq i32 %53, 0, !dbg !10562
  br i1 %54, label %55, label %99, !dbg !10564

55:                                               ; preds = %46
  %56 = add i32 %26, 1, !dbg !10565
  call void @llvm.dbg.value(metadata i32 %56, metadata !10507, metadata !DIExpression()), !dbg !10520
  br label %96, !dbg !10566

57:                                               ; preds = %43
  %58 = load i8*, i8** %21, align 4, !dbg !10567
  %59 = call i32 @BlockIndex(i8* noundef %58, i32 noundef %38) #21, !dbg !10568
  %60 = call i32 @BlockSize(i8* noundef %58, i32 noundef %59) #21, !dbg !10569
  call void @llvm.dbg.value(metadata i32 %60, metadata !10508, metadata !DIExpression()), !dbg !10570
  call void @llvm.dbg.value(metadata i32 %44, metadata !10512, metadata !DIExpression()), !dbg !10570
  %61 = add i32 %60, %33, !dbg !10571
  %62 = sub i32 0, %60, !dbg !10572
  %63 = and i32 %61, %62, !dbg !10573
  call void @llvm.dbg.value(metadata i32 %63, metadata !10513, metadata !DIExpression()), !dbg !10570
  %64 = add i32 %32, %3, !dbg !10574
  %65 = icmp ugt i32 %64, %63, !dbg !10576
  %66 = sub i32 %63, %33
  %67 = select i1 %65, i32 %66, i32 %44, !dbg !10577
  call void @llvm.dbg.value(metadata i32 %67, metadata !10512, metadata !DIExpression()), !dbg !10570
  %68 = and i32 %67, -2, !dbg !10578
  call void @llvm.dbg.value(metadata i32 %68, metadata !10512, metadata !DIExpression()), !dbg !10570
  %69 = icmp ne i32 %68, 2, !dbg !10579
  %70 = and i32 %34, 1
  %71 = icmp eq i32 %70, 0
  %72 = select i1 %69, i1 true, i1 %71, !dbg !10580
  br i1 %72, label %85, label %73, !dbg !10580

73:                                               ; preds = %57
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %18) #23, !dbg !10536
  call void @llvm.dbg.value(metadata i8* %18, metadata !10519, metadata !DIExpression()), !dbg !10581
  %74 = inttoptr i32 %34 to i8*, !dbg !10582
  %75 = load i8, i8* %74, align 1, !dbg !10583
  call void @llvm.dbg.value(metadata i8 undef, metadata !10514, metadata !DIExpression()), !dbg !10581
  store i8 %75, i8* %18, align 2, !dbg !10584
  %76 = getelementptr inbounds i8, i8* %74, i32 1, !dbg !10585
  %77 = load i8, i8* %76, align 1, !dbg !10586
  store i8 %77, i8* %24, align 1, !dbg !10587
  %78 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %23, align 4, !dbg !10588
  %79 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %78, i32 0, i32 4, !dbg !10589
  %80 = load i32 (i8*, i8*, i8*, i32)*, i32 (i8*, i8*, i8*, i32)** %79, align 4, !dbg !10589
  %81 = load i8*, i8** %21, align 4, !dbg !10590
  %82 = inttoptr i32 %33 to i8*, !dbg !10591
  call void @llvm.dbg.value(metadata i16* %5, metadata !10514, metadata !DIExpression(DW_OP_deref)), !dbg !10581
  %83 = call i32 %80(i8* noundef %81, i8* noundef %82, i8* noundef nonnull %18, i32 noundef 2) #21, !dbg !10592
  call void @llvm.dbg.value(metadata i32 %83, metadata !10506, metadata !DIExpression()), !dbg !10520
  %84 = icmp eq i32 %83, 0, !dbg !10593
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %18) #23, !dbg !10595
  br i1 %84, label %94, label %99

85:                                               ; preds = %57
  %86 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %23, align 4, !dbg !10596
  %87 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %86, i32 0, i32 4, !dbg !10600
  %88 = load i32 (i8*, i8*, i8*, i32)*, i32 (i8*, i8*, i8*, i32)** %87, align 4, !dbg !10600
  %89 = load i8*, i8** %21, align 4, !dbg !10601
  %90 = inttoptr i32 %33 to i8*, !dbg !10602
  %91 = inttoptr i32 %34 to i8*, !dbg !10603
  %92 = call i32 %88(i8* noundef %89, i8* noundef %90, i8* noundef %91, i32 noundef %68) #21, !dbg !10604
  call void @llvm.dbg.value(metadata i32 %92, metadata !10506, metadata !DIExpression()), !dbg !10520
  %93 = icmp eq i32 %92, 0, !dbg !10605
  br i1 %93, label %94, label %99, !dbg !10607

94:                                               ; preds = %73, %85
  call void @llvm.dbg.value(metadata i32 0, metadata !10506, metadata !DIExpression()), !dbg !10520
  %95 = add i32 %68, %26, !dbg !10608
  call void @llvm.dbg.value(metadata i32 %83, metadata !10506, metadata !DIExpression()), !dbg !10520
  call void @llvm.dbg.value(metadata i32 %26, metadata !10507, metadata !DIExpression()), !dbg !10520
  br label %96

96:                                               ; preds = %94, %55
  %97 = phi i32 [ %56, %55 ], [ %95, %94 ], !dbg !10609
  call void @llvm.dbg.value(metadata i32 0, metadata !10506, metadata !DIExpression()), !dbg !10520
  call void @llvm.dbg.value(metadata i32 %97, metadata !10507, metadata !DIExpression()), !dbg !10520
  %98 = icmp ult i32 %97, %3, !dbg !10537
  br i1 %98, label %25, label %99, !dbg !10538, !llvm.loop !10610

99:                                               ; preds = %96, %73, %85, %46, %17
  %100 = phi i32 [ 0, %17 ], [ 5, %46 ], [ 5, %85 ], [ 5, %73 ], [ 0, %96 ]
  call void @release_FDM_lock() #22, !dbg !10612
  br label %101, !dbg !10613

101:                                              ; preds = %99, %9, %4
  %102 = phi i32 [ 2, %4 ], [ 3, %9 ], [ %100, %99 ], !dbg !10520
  ret i32 %102, !dbg !10613
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @eraseRawDiskBlock(%struct.NOR_FLASH_DISK_Data* noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !10614 {
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* %0, metadata !10618, metadata !DIExpression()), !dbg !10622
  call void @llvm.dbg.value(metadata i32 %1, metadata !10619, metadata !DIExpression()), !dbg !10622
  %3 = and i32 %1, 16777215, !dbg !10623
  call void @llvm.dbg.value(metadata i32 %3, metadata !10621, metadata !DIExpression()), !dbg !10622
  %4 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 4, !dbg !10624
  %5 = load i8, i8* %4, align 4, !dbg !10624, !range !3203
  %6 = icmp eq i8 %5, 0, !dbg !10624
  br i1 %6, label %7, label %8, !dbg !10626

7:                                                ; preds = %2
  tail call fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef nonnull %0) #22, !dbg !10627
  br label %8, !dbg !10629

8:                                                ; preds = %7, %2
  %9 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 3, i32 0, !dbg !10630
  %10 = load i32, i32* %9, align 4, !dbg !10630
  %11 = icmp ult i32 %3, %10, !dbg !10632
  br i1 %11, label %12, label %27, !dbg !10633

12:                                               ; preds = %8
  tail call void @retrieve_FDM_lock() #22, !dbg !10634
  %13 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 1, !dbg !10635
  %14 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %13, align 4, !dbg !10635
  %15 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %14, i32 0, i32 2, !dbg !10636
  %16 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %15, align 4, !dbg !10636
  %17 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 2, !dbg !10637
  %18 = load i8*, i8** %17, align 4, !dbg !10637
  %19 = tail call i8* %16(i8* noundef %18, i32 noundef %3, i32 noundef 0) #21, !dbg !10638
  %20 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %13, align 4, !dbg !10639
  %21 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %20, i32 0, i32 3, !dbg !10640
  %22 = load i32 (i8*, i32)*, i32 (i8*, i32)** %21, align 4, !dbg !10640
  %23 = load i8*, i8** %17, align 4, !dbg !10641
  %24 = tail call i32 %22(i8* noundef %23, i32 noundef %1) #21, !dbg !10642
  call void @llvm.dbg.value(metadata i32 %24, metadata !10620, metadata !DIExpression()), !dbg !10622
  tail call void @release_FDM_lock() #22, !dbg !10643
  %25 = icmp eq i32 %24, 0, !dbg !10644
  %26 = select i1 %25, i32 0, i32 6, !dbg !10622
  br label %27, !dbg !10622

27:                                               ; preds = %12, %8
  %28 = phi i32 [ 2, %8 ], [ %26, %12 ], !dbg !10622
  ret i32 %28, !dbg !10646
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_init() local_unnamed_addr #0 !dbg !10647 {
  %1 = load i1, i1* @flash_init_status, align 4, !dbg !10648
  br i1 %1, label %3, label %2, !dbg !10650

2:                                                ; preds = %0
  tail call void @Custom_NOR_Init() #21, !dbg !10651
  tail call fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData) #22, !dbg !10653
  store i1 true, i1* @flash_init_status, align 4, !dbg !10654
  br label %3, !dbg !10655

3:                                                ; preds = %2, %0
  ret i32 0, !dbg !10656
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @get_NOR_init_status() local_unnamed_addr #4 section ".ram_code" !dbg !10657 {
  %1 = load i1, i1* @flash_init_status, align 4, !dbg !10658
  %2 = select i1 %1, i32 0, i32 -5, !dbg !10658
  ret i32 %2, !dbg !10659
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_ReadPhysicalPage(i32 noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !10660 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10664, metadata !DIExpression()), !dbg !10671
  call void @llvm.dbg.value(metadata i32 %1, metadata !10665, metadata !DIExpression()), !dbg !10671
  call void @llvm.dbg.value(metadata i8* %2, metadata !10666, metadata !DIExpression()), !dbg !10671
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !10667, metadata !DIExpression()), !dbg !10671
  %4 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !10672
  call void @llvm.dbg.value(metadata i8* %4, metadata !10668, metadata !DIExpression()), !dbg !10671
  %5 = tail call i8* @BlockAddress(i8* noundef %4, i32 noundef %0) #21, !dbg !10673
  %6 = ptrtoint i8* %5 to i32, !dbg !10674
  %7 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !10675
  %8 = bitcast i8* %7 to i8**, !dbg !10675
  %9 = load i8*, i8** %8, align 4, !dbg !10675
  %10 = ptrtoint i8* %9 to i32, !dbg !10676
  %11 = shl i32 %1, 9, !dbg !10677
  %12 = add i32 %11, %6, !dbg !10678
  %13 = sub i32 %12, %10, !dbg !10679
  call void @llvm.dbg.value(metadata i32 %13, metadata !10670, metadata !DIExpression()), !dbg !10671
  %14 = tail call i32 @readRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %13, i8* noundef %2, i32 noundef 512) #22, !dbg !10680
  call void @llvm.dbg.value(metadata i32 %14, metadata !10669, metadata !DIExpression()), !dbg !10671
  %15 = icmp eq i32 %14, 0, !dbg !10681
  %16 = select i1 %15, i32 0, i32 -13, !dbg !10671
  ret i32 %16, !dbg !10683
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_ProgramPhysicalPage(i32 noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !10684 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10686, metadata !DIExpression()), !dbg !10693
  call void @llvm.dbg.value(metadata i32 %1, metadata !10687, metadata !DIExpression()), !dbg !10693
  call void @llvm.dbg.value(metadata i8* %2, metadata !10688, metadata !DIExpression()), !dbg !10693
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !10689, metadata !DIExpression()), !dbg !10693
  %4 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !10694
  call void @llvm.dbg.value(metadata i8* %4, metadata !10690, metadata !DIExpression()), !dbg !10693
  %5 = tail call i8* @BlockAddress(i8* noundef %4, i32 noundef %0) #21, !dbg !10695
  %6 = ptrtoint i8* %5 to i32, !dbg !10696
  %7 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !10697
  %8 = bitcast i8* %7 to i8**, !dbg !10697
  %9 = load i8*, i8** %8, align 4, !dbg !10697
  %10 = ptrtoint i8* %9 to i32, !dbg !10698
  %11 = shl i32 %1, 9, !dbg !10699
  %12 = add i32 %11, %6, !dbg !10700
  %13 = sub i32 %12, %10, !dbg !10701
  call void @llvm.dbg.value(metadata i32 %13, metadata !10692, metadata !DIExpression()), !dbg !10693
  %14 = tail call i32 @writeRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %13, i8* noundef %2, i32 noundef 512) #22, !dbg !10702
  call void @llvm.dbg.value(metadata i32 %14, metadata !10691, metadata !DIExpression()), !dbg !10693
  %15 = icmp eq i32 %14, 0, !dbg !10703
  %16 = select i1 %15, i32 0, i32 -14, !dbg !10693
  ret i32 %16, !dbg !10705
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_ErasePhysicalBlock(i32 noundef %0) local_unnamed_addr #0 !dbg !10706 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10710, metadata !DIExpression()), !dbg !10712
  %2 = tail call i32 @eraseRawDiskBlock(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %0) #22, !dbg !10713
  call void @llvm.dbg.value(metadata i32 %2, metadata !10711, metadata !DIExpression()), !dbg !10712
  %3 = icmp eq i32 %2, 0, !dbg !10714
  %4 = select i1 %3, i32 0, i32 -15, !dbg !10712
  ret i32 %4, !dbg !10716
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_BlockSize(i32 noundef %0) local_unnamed_addr #0 !dbg !10717 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10719, metadata !DIExpression()), !dbg !10722
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !10720, metadata !DIExpression()), !dbg !10722
  %2 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !10723
  call void @llvm.dbg.value(metadata i8* %2, metadata !10721, metadata !DIExpression()), !dbg !10722
  %3 = tail call i32 @BlockSize(i8* noundef %2, i32 noundef %0) #21, !dbg !10724
  ret i32 %3, !dbg !10725
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_BlockIndex(i32 noundef %0) local_unnamed_addr #0 !dbg !10726 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10728, metadata !DIExpression()), !dbg !10731
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !10729, metadata !DIExpression()), !dbg !10731
  %2 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !10732
  call void @llvm.dbg.value(metadata i8* %2, metadata !10730, metadata !DIExpression()), !dbg !10731
  %3 = tail call i32 @BlockIndex(i8* noundef %2, i32 noundef %0) #21, !dbg !10733
  ret i32 %3, !dbg !10734
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_Addr2BlockIndexOffset(i32 noundef %0, i32* nocapture noundef writeonly %1, i32* nocapture noundef writeonly %2) local_unnamed_addr #0 !dbg !10735 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10739, metadata !DIExpression()), !dbg !10744
  call void @llvm.dbg.value(metadata i32* %1, metadata !10740, metadata !DIExpression()), !dbg !10744
  call void @llvm.dbg.value(metadata i32* %2, metadata !10741, metadata !DIExpression()), !dbg !10744
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !10742, metadata !DIExpression()), !dbg !10744
  %4 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !10745
  call void @llvm.dbg.value(metadata i8* %4, metadata !10743, metadata !DIExpression()), !dbg !10744
  %5 = tail call i32 @BlockIndex(i8* noundef %4, i32 noundef %0) #21, !dbg !10746
  store i32 %5, i32* %1, align 4, !dbg !10747
  %6 = icmp eq i32 %5, -1, !dbg !10748
  br i1 %6, label %10, label %7, !dbg !10750

7:                                                ; preds = %3
  %8 = tail call i32 @BlockSize(i8* noundef %4, i32 noundef %5) #21, !dbg !10751
  %9 = urem i32 %0, %8, !dbg !10752
  store i32 %9, i32* %2, align 4, !dbg !10753
  br label %10, !dbg !10754

10:                                               ; preds = %3, %7
  %11 = phi i32 [ 0, %7 ], [ -1, %3 ], !dbg !10744
  ret i32 %11, !dbg !10755
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_BlockIndexOffset2Addr(i32 noundef %0, i32 noundef %1, i32* nocapture noundef writeonly %2) local_unnamed_addr #0 !dbg !10756 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10760, metadata !DIExpression()), !dbg !10765
  call void @llvm.dbg.value(metadata i32 %1, metadata !10761, metadata !DIExpression()), !dbg !10765
  call void @llvm.dbg.value(metadata i32* %2, metadata !10762, metadata !DIExpression()), !dbg !10765
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !10763, metadata !DIExpression()), !dbg !10765
  %4 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !10766
  call void @llvm.dbg.value(metadata i8* %4, metadata !10764, metadata !DIExpression()), !dbg !10765
  %5 = tail call i8* @BlockAddress(i8* noundef %4, i32 noundef %0) #21, !dbg !10767
  %6 = ptrtoint i8* %5 to i32, !dbg !10768
  %7 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !10769
  %8 = bitcast i8* %7 to i8**, !dbg !10769
  %9 = load i8*, i8** %8, align 4, !dbg !10769
  %10 = ptrtoint i8* %9 to i32, !dbg !10770
  %11 = add i32 %6, %1, !dbg !10771
  %12 = sub i32 %11, %10, !dbg !10772
  store i32 %12, i32* %2, align 4, !dbg !10773
  ret i32 0, !dbg !10774
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_rawdisk_error_code(i32 noundef %0) local_unnamed_addr #0 !dbg !10775 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10779, metadata !DIExpression()), !dbg !10780
  %2 = add i32 %0, 2, !dbg !10781
  %3 = icmp ult i32 %2, 9, !dbg !10781
  br i1 %3, label %5, label %4, !dbg !10781

4:                                                ; preds = %5, %1
  tail call void @Flash_ReturnReady() #21, !dbg !10782
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.147, i32 0, i32 0), i32 noundef 558, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.get_rawdisk_error_code, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.148, i32 0, i32 0)) #24, !dbg !10782
  unreachable, !dbg !10782

5:                                                ; preds = %1
  %6 = trunc i32 %2 to i16, !dbg !10781
  %7 = lshr i16 433, %6, !dbg !10781
  %8 = and i16 %7, 1, !dbg !10781
  %9 = icmp eq i16 %8, 0, !dbg !10781
  br i1 %9, label %4, label %10, !dbg !10781

10:                                               ; preds = %5
  %11 = getelementptr inbounds [9 x i32], [9 x i32]* @switch.table.get_rawdisk_error_code, i32 0, i32 %2, !dbg !10781
  %12 = load i32, i32* %11, align 4, !dbg !10781
  ret i32 %12, !dbg !10792
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_block_size_from_address(i32 noundef %0) local_unnamed_addr #0 !dbg !10793 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10798, metadata !DIExpression()), !dbg !10801
  %2 = tail call i32 @NOR_BlockIndex(i32 noundef %0) #22, !dbg !10802
  call void @llvm.dbg.value(metadata i32 %2, metadata !10800, metadata !DIExpression()), !dbg !10801
  %3 = icmp eq i32 %2, -1, !dbg !10803
  br i1 %3, label %4, label %5, !dbg !10805

4:                                                ; preds = %1
  tail call void @Flash_ReturnReady() #21, !dbg !10806
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.147, i32 0, i32 0), i32 noundef 568, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.get_block_size_from_address, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.148, i32 0, i32 0)) #24, !dbg !10806
  unreachable, !dbg !10806

5:                                                ; preds = %1
  %6 = tail call i32 @NOR_BlockSize(i32 noundef %2) #22, !dbg !10811
  call void @llvm.dbg.value(metadata i32 %6, metadata !10799, metadata !DIExpression()), !dbg !10801
  switch i32 %6, label %9 [
    i32 4096, label %10
    i32 32768, label %7
    i32 65536, label %8
  ], !dbg !10812

7:                                                ; preds = %5
  br label %10, !dbg !10813

8:                                                ; preds = %5
  br label %10, !dbg !10817

9:                                                ; preds = %5
  tail call void @Flash_ReturnReady() #21, !dbg !10820
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.147, i32 0, i32 0), i32 noundef 578, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.get_block_size_from_address, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.148, i32 0, i32 0)) #24, !dbg !10820
  unreachable, !dbg !10820

10:                                               ; preds = %5, %8, %7
  %11 = phi i32 [ 1, %7 ], [ 2, %8 ], [ 0, %5 ], !dbg !10825
  ret i32 %11, !dbg !10826
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_init() local_unnamed_addr #0 !dbg !10827 {
  %1 = tail call i32 @NOR_init() #22, !dbg !10828
  ret i32 0, !dbg !10829
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @hal_flash_deinit() local_unnamed_addr #9 !dbg !10830 {
  ret i32 0, !dbg !10831
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_erase(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !10832 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10836, metadata !DIExpression()), !dbg !10841
  call void @llvm.dbg.value(metadata i32 %1, metadata !10837, metadata !DIExpression()), !dbg !10841
  call void @llvm.dbg.value(metadata i32 0, metadata !10840, metadata !DIExpression()), !dbg !10841
  switch i32 %1, label %22 [
    i32 0, label %3
    i32 1, label %6
    i32 2, label %9
  ], !dbg !10842

3:                                                ; preds = %2
  %4 = and i32 %0, 4095, !dbg !10843
  %5 = icmp eq i32 %4, 0, !dbg !10847
  br i1 %5, label %12, label %22, !dbg !10848

6:                                                ; preds = %2
  %7 = and i32 %0, 32767, !dbg !10849
  %8 = icmp eq i32 %7, 0, !dbg !10853
  br i1 %8, label %12, label %22, !dbg !10854

9:                                                ; preds = %2
  %10 = and i32 %0, 65535, !dbg !10855
  %11 = icmp eq i32 %10, 0, !dbg !10859
  br i1 %11, label %12, label %22, !dbg !10860

12:                                               ; preds = %9, %6, %3
  %13 = phi i32 [ -100663296, %3 ], [ -83886080, %6 ], [ -67108864, %9 ], !dbg !10861
  call void @llvm.dbg.value(metadata i32 %13, metadata !10840, metadata !DIExpression()), !dbg !10841
  %14 = tail call i32 @NOR_BlockIndex(i32 noundef %0) #22, !dbg !10862
  call void @llvm.dbg.value(metadata i32 %14, metadata !10839, metadata !DIExpression()), !dbg !10841
  %15 = icmp eq i32 %14, -1, !dbg !10863
  br i1 %15, label %22, label %16, !dbg !10865

16:                                               ; preds = %12
  %17 = or i32 %14, %13, !dbg !10866
  call void @llvm.dbg.value(metadata i32 %17, metadata !10839, metadata !DIExpression()), !dbg !10841
  %18 = tail call i32 @eraseRawDiskBlock(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %17) #22, !dbg !10867
  call void @llvm.dbg.value(metadata i32 %18, metadata !10838, metadata !DIExpression()), !dbg !10841
  %19 = icmp eq i32 %18, 0, !dbg !10868
  br i1 %19, label %22, label %20, !dbg !10870

20:                                               ; preds = %16
  %21 = tail call i32 @get_rawdisk_error_code(i32 noundef %18) #22, !dbg !10871
  br label %22, !dbg !10873

22:                                               ; preds = %16, %12, %2, %9, %6, %3, %20
  %23 = phi i32 [ %21, %20 ], [ -3, %3 ], [ -3, %6 ], [ -3, %9 ], [ -3, %2 ], [ -3, %12 ], [ 0, %16 ], !dbg !10841
  ret i32 %23, !dbg !10874
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_read(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !10875 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10879, metadata !DIExpression()), !dbg !10884
  call void @llvm.dbg.value(metadata i8* %1, metadata !10880, metadata !DIExpression()), !dbg !10884
  call void @llvm.dbg.value(metadata i32 %2, metadata !10881, metadata !DIExpression()), !dbg !10884
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !10882, metadata !DIExpression()), !dbg !10884
  %4 = tail call i32 @readRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %0, i8* noundef %1, i32 noundef %2) #22, !dbg !10885
  call void @llvm.dbg.value(metadata i32 %4, metadata !10883, metadata !DIExpression()), !dbg !10884
  %5 = icmp eq i32 %4, 0, !dbg !10886
  br i1 %5, label %8, label %6, !dbg !10888

6:                                                ; preds = %3
  %7 = tail call i32 @get_rawdisk_error_code(i32 noundef %4) #22, !dbg !10889
  br label %8, !dbg !10891

8:                                                ; preds = %3, %6
  %9 = phi i32 [ %7, %6 ], [ 0, %3 ], !dbg !10884
  ret i32 %9, !dbg !10892
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_write(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !10893 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10897, metadata !DIExpression()), !dbg !10902
  call void @llvm.dbg.value(metadata i8* %1, metadata !10898, metadata !DIExpression()), !dbg !10902
  call void @llvm.dbg.value(metadata i32 %2, metadata !10899, metadata !DIExpression()), !dbg !10902
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !10900, metadata !DIExpression()), !dbg !10902
  %4 = tail call i32 @writeRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %0, i8* noundef %1, i32 noundef %2) #22, !dbg !10903
  call void @llvm.dbg.value(metadata i32 %4, metadata !10901, metadata !DIExpression()), !dbg !10902
  %5 = icmp eq i32 %4, 0, !dbg !10904
  br i1 %5, label %8, label %6, !dbg !10906

6:                                                ; preds = %3
  %7 = tail call i32 @get_rawdisk_error_code(i32 noundef %4) #22, !dbg !10907
  br label %8, !dbg !10909

8:                                                ; preds = %3, %6
  %9 = phi i32 [ %7, %6 ], [ 0, %3 ], !dbg !10902
  ret i32 %9, !dbg !10910
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @BlockAddress(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #11 section ".ram_code" !dbg !10911 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10915, metadata !DIExpression()), !dbg !10921
  call void @llvm.dbg.value(metadata i32 %1, metadata !10916, metadata !DIExpression()), !dbg !10921
  call void @llvm.dbg.value(metadata i8* %0, metadata !10917, metadata !DIExpression()), !dbg !10921
  call void @llvm.dbg.value(metadata i32 0, metadata !10918, metadata !DIExpression()), !dbg !10921
  call void @llvm.dbg.value(metadata i32 0, metadata !10919, metadata !DIExpression()), !dbg !10921
  call void @llvm.dbg.value(metadata i32 0, metadata !10920, metadata !DIExpression()), !dbg !10921
  %3 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !10922
  %4 = bitcast i8* %3 to %struct.vdma_config_t**, !dbg !10922
  %5 = load %struct.vdma_config_t*, %struct.vdma_config_t** %4, align 4, !dbg !10922
  %6 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %5, i32 0, i32 1, !dbg !10923
  %7 = load i32, i32* %6, align 4, !dbg !10923
  call void @llvm.dbg.value(metadata i32 %7, metadata !10920, metadata !DIExpression()), !dbg !10921
  call void @llvm.dbg.value(metadata i32 0, metadata !10919, metadata !DIExpression()), !dbg !10921
  call void @llvm.dbg.value(metadata i32 0, metadata !10918, metadata !DIExpression()), !dbg !10921
  %8 = icmp ugt i32 %7, %1, !dbg !10924
  br i1 %8, label %23, label %9, !dbg !10925

9:                                                ; preds = %2, %9
  %10 = phi i32 [ %20, %9 ], [ %7, %2 ], !dbg !10926
  %11 = phi i32 [ %21, %9 ], [ %7, %2 ]
  %12 = phi i32 [ %18, %9 ], [ 0, %2 ]
  %13 = phi i32 [ %17, %9 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !10920, metadata !DIExpression()), !dbg !10921
  call void @llvm.dbg.value(metadata i32 %12, metadata !10919, metadata !DIExpression()), !dbg !10921
  call void @llvm.dbg.value(metadata i32 %13, metadata !10918, metadata !DIExpression()), !dbg !10921
  %14 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %5, i32 %12, i32 0, !dbg !10928
  %15 = load i32, i32* %14, align 4, !dbg !10928
  %16 = mul i32 %15, %10, !dbg !10929
  %17 = add i32 %16, %13, !dbg !10930
  call void @llvm.dbg.value(metadata i32 %17, metadata !10918, metadata !DIExpression()), !dbg !10921
  %18 = add i32 %12, 1, !dbg !10931
  call void @llvm.dbg.value(metadata i32 %18, metadata !10919, metadata !DIExpression()), !dbg !10921
  %19 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %5, i32 %18, i32 1, !dbg !10932
  %20 = load i32, i32* %19, align 4, !dbg !10932
  %21 = add i32 %20, %11, !dbg !10933
  call void @llvm.dbg.value(metadata i32 %21, metadata !10920, metadata !DIExpression()), !dbg !10921
  %22 = icmp ugt i32 %21, %1, !dbg !10924
  br i1 %22, label %23, label %9, !dbg !10925, !llvm.loop !10934

23:                                               ; preds = %9, %2
  %24 = phi i32 [ %7, %2 ], [ %20, %9 ], !dbg !10936
  %25 = phi i32 [ 0, %2 ], [ %17, %9 ], !dbg !10921
  %26 = phi i32 [ 0, %2 ], [ %18, %9 ], !dbg !10921
  %27 = phi i32 [ %7, %2 ], [ %21, %9 ], !dbg !10921
  call void @llvm.dbg.value(metadata i8* %0, metadata !10917, metadata !DIExpression()), !dbg !10921
  %28 = sub i32 %1, %27, !dbg !10937
  %29 = add i32 %28, %24, !dbg !10938
  %30 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %5, i32 %26, i32 0, !dbg !10939
  %31 = load i32, i32* %30, align 4, !dbg !10939
  %32 = mul i32 %29, %31, !dbg !10940
  %33 = add i32 %32, %25, !dbg !10941
  call void @llvm.dbg.value(metadata i32 %33, metadata !10918, metadata !DIExpression()), !dbg !10921
  %34 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !10942
  %35 = bitcast i8* %34 to i8**, !dbg !10942
  %36 = load i8*, i8** %35, align 4, !dbg !10942
  %37 = getelementptr inbounds i8, i8* %36, i32 %33, !dbg !10943
  ret i8* %37, !dbg !10944
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @MapWindow(i8* nocapture noundef %0, i32 noundef %1, i32 noundef %2) #0 section ".ram_code" !dbg !10945 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10947, metadata !DIExpression()), !dbg !10951
  call void @llvm.dbg.value(metadata i32 %1, metadata !10948, metadata !DIExpression()), !dbg !10951
  call void @llvm.dbg.value(metadata i32 %2, metadata !10949, metadata !DIExpression()), !dbg !10951
  call void @llvm.dbg.value(metadata i8* %0, metadata !10950, metadata !DIExpression()), !dbg !10951
  %4 = icmp eq i32 %2, 0, !dbg !10952
  br i1 %4, label %6, label %5, !dbg !10955

5:                                                ; preds = %3
  tail call void @Flash_ReturnReady() #21, !dbg !10956
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.163, i32 0, i32 0), i32 noundef 185, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @__func__.MapWindow, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.164, i32 0, i32 0)) #24, !dbg !10956
  unreachable, !dbg !10956

6:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %0, metadata !10950, metadata !DIExpression()), !dbg !10951
  %7 = tail call fastcc i32 @LookupAddress(i8* noundef %0, i32 noundef %1) #22, !dbg !10958
  %8 = inttoptr i32 %7 to i8*, !dbg !10959
  %9 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !10960
  %10 = bitcast i8* %9 to i8**, !dbg !10960
  store i8* %8, i8** %10, align 4, !dbg !10961
  ret i8* %8, !dbg !10962
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @LookupAddress(i8* nocapture noundef %0, i32 noundef %1) unnamed_addr #12 section ".ram_code" !dbg !2100 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !2104, metadata !DIExpression()), !dbg !10963
  call void @llvm.dbg.value(metadata i32 %1, metadata !2105, metadata !DIExpression()), !dbg !10963
  call void @llvm.dbg.value(metadata i8* %0, metadata !2106, metadata !DIExpression()), !dbg !10963
  call void @llvm.dbg.value(metadata i32 0, metadata !2151, metadata !DIExpression()), !dbg !10963
  %3 = getelementptr inbounds i8, i8* %0, i32 44, !dbg !10964
  %4 = bitcast i8* %3 to [8 x [2 x %struct.vdma_config_t]]*, !dbg !10964
  %5 = and i32 %1, 7, !dbg !10966
  %6 = getelementptr inbounds [8 x [2 x %struct.vdma_config_t]], [8 x [2 x %struct.vdma_config_t]]* %4, i32 0, i32 %5, i32 0, i32 0, !dbg !10967
  %7 = load i32, i32* %6, align 4, !dbg !10967
  %8 = icmp eq i32 %7, -1, !dbg !10968
  br i1 %8, label %62, label %9, !dbg !10969

9:                                                ; preds = %2
  %10 = icmp eq i32 %7, %1, !dbg !10970
  br i1 %10, label %54, label %11, !dbg !10973

11:                                               ; preds = %9
  %12 = getelementptr inbounds [8 x [2 x %struct.vdma_config_t]], [8 x [2 x %struct.vdma_config_t]]* %4, i32 0, i32 %5, i32 1, i32 0, !dbg !10974
  %13 = load i32, i32* %12, align 4, !dbg !10974
  %14 = icmp eq i32 %13, -1, !dbg !10977
  br i1 %14, label %44, label %15, !dbg !10978

15:                                               ; preds = %11
  %16 = icmp eq i32 %13, %1, !dbg !10979
  br i1 %16, label %35, label %17, !dbg !10982

17:                                               ; preds = %15
  %18 = load i32, i32* @LookupAddress.look_up_miss, align 4, !dbg !10983
  %19 = add i32 %18, 1, !dbg !10983
  store i32 %19, i32* @LookupAddress.look_up_miss, align 4, !dbg !10983
  %20 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !10985
  %21 = shl nuw nsw i32 1, %5, !dbg !10987
  %22 = and i32 %20, %21, !dbg !10988
  %23 = icmp eq i32 %22, 0, !dbg !10988
  br i1 %23, label %30, label %24, !dbg !10989

24:                                               ; preds = %17
  store i32 %1, i32* %12, align 4, !dbg !10990
  %25 = tail call i8* @BlockAddress(i8* noundef nonnull %0, i32 noundef %1) #22, !dbg !10992
  %26 = ptrtoint i8* %25 to i32, !dbg !10993
  %27 = getelementptr inbounds [8 x [2 x %struct.vdma_config_t]], [8 x [2 x %struct.vdma_config_t]]* %4, i32 0, i32 %5, i32 1, i32 1, !dbg !10994
  store i32 %26, i32* %27, align 4, !dbg !10995
  call void @llvm.dbg.value(metadata i32 %26, metadata !2151, metadata !DIExpression()), !dbg !10963
  %28 = xor i32 %21, -1, !dbg !10996
  %29 = and i32 %20, %28, !dbg !10997
  br label %71, !dbg !10998

30:                                               ; preds = %17
  store i32 %1, i32* %6, align 4, !dbg !10999
  %31 = tail call i8* @BlockAddress(i8* noundef nonnull %0, i32 noundef %1) #22, !dbg !11001
  %32 = ptrtoint i8* %31 to i32, !dbg !11002
  %33 = getelementptr inbounds [8 x [2 x %struct.vdma_config_t]], [8 x [2 x %struct.vdma_config_t]]* %4, i32 0, i32 %5, i32 0, i32 1, !dbg !11003
  store i32 %32, i32* %33, align 4, !dbg !11004
  call void @llvm.dbg.value(metadata i32 %32, metadata !2151, metadata !DIExpression()), !dbg !10963
  %34 = or i32 %20, %21, !dbg !11005
  br label %71

35:                                               ; preds = %15
  %36 = load i32, i32* @LookupAddress.look_up_hit, align 4, !dbg !11006
  %37 = add i32 %36, 1, !dbg !11006
  store i32 %37, i32* @LookupAddress.look_up_hit, align 4, !dbg !11006
  %38 = getelementptr inbounds [8 x [2 x %struct.vdma_config_t]], [8 x [2 x %struct.vdma_config_t]]* %4, i32 0, i32 %5, i32 1, i32 1, !dbg !11008
  %39 = load i32, i32* %38, align 4, !dbg !11008
  call void @llvm.dbg.value(metadata i32 %39, metadata !2151, metadata !DIExpression()), !dbg !10963
  %40 = shl nuw nsw i32 1, %5, !dbg !11009
  %41 = xor i32 %40, -1, !dbg !11010
  %42 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !11011
  %43 = and i32 %42, %41, !dbg !11011
  br label %71

44:                                               ; preds = %11
  %45 = load i32, i32* @LookupAddress.look_up_miss, align 4, !dbg !11012
  %46 = add i32 %45, 1, !dbg !11012
  store i32 %46, i32* @LookupAddress.look_up_miss, align 4, !dbg !11012
  store i32 %1, i32* %12, align 4, !dbg !11014
  %47 = tail call i8* @BlockAddress(i8* noundef nonnull %0, i32 noundef %1) #22, !dbg !11015
  %48 = ptrtoint i8* %47 to i32, !dbg !11016
  %49 = getelementptr inbounds [8 x [2 x %struct.vdma_config_t]], [8 x [2 x %struct.vdma_config_t]]* %4, i32 0, i32 %5, i32 1, i32 1, !dbg !11017
  store i32 %48, i32* %49, align 4, !dbg !11018
  call void @llvm.dbg.value(metadata i32 %48, metadata !2151, metadata !DIExpression()), !dbg !10963
  %50 = shl nuw nsw i32 1, %5, !dbg !11019
  %51 = xor i32 %50, -1, !dbg !11020
  %52 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !11021
  %53 = and i32 %52, %51, !dbg !11021
  br label %71

54:                                               ; preds = %9
  %55 = load i32, i32* @LookupAddress.look_up_hit, align 4, !dbg !11022
  %56 = add i32 %55, 1, !dbg !11022
  store i32 %56, i32* @LookupAddress.look_up_hit, align 4, !dbg !11022
  %57 = getelementptr inbounds [8 x [2 x %struct.vdma_config_t]], [8 x [2 x %struct.vdma_config_t]]* %4, i32 0, i32 %5, i32 0, i32 1, !dbg !11024
  %58 = load i32, i32* %57, align 4, !dbg !11024
  call void @llvm.dbg.value(metadata i32 %58, metadata !2151, metadata !DIExpression()), !dbg !10963
  %59 = shl nuw nsw i32 1, %5, !dbg !11025
  %60 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !11026
  %61 = or i32 %60, %59, !dbg !11026
  br label %71

62:                                               ; preds = %2
  %63 = load i32, i32* @LookupAddress.look_up_miss, align 4, !dbg !11027
  %64 = add i32 %63, 1, !dbg !11027
  store i32 %64, i32* @LookupAddress.look_up_miss, align 4, !dbg !11027
  store i32 %1, i32* %6, align 4, !dbg !11029
  %65 = tail call i8* @BlockAddress(i8* noundef nonnull %0, i32 noundef %1) #22, !dbg !11030
  %66 = ptrtoint i8* %65 to i32, !dbg !11031
  %67 = getelementptr inbounds [8 x [2 x %struct.vdma_config_t]], [8 x [2 x %struct.vdma_config_t]]* %4, i32 0, i32 %5, i32 0, i32 1, !dbg !11032
  store i32 %66, i32* %67, align 4, !dbg !11033
  call void @llvm.dbg.value(metadata i32 %66, metadata !2151, metadata !DIExpression()), !dbg !10963
  %68 = shl nuw nsw i32 1, %5, !dbg !11034
  %69 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !11035
  %70 = or i32 %69, %68, !dbg !11035
  br label %71

71:                                               ; preds = %54, %35, %30, %24, %44, %62
  %72 = phi i32 [ %61, %54 ], [ %43, %35 ], [ %34, %30 ], [ %29, %24 ], [ %53, %44 ], [ %70, %62 ]
  %73 = phi i32 [ %58, %54 ], [ %39, %35 ], [ %32, %30 ], [ %26, %24 ], [ %48, %44 ], [ %66, %62 ], !dbg !11036
  store i32 %72, i32* @LookupAddress.replaced, align 4, !dbg !11036
  call void @llvm.dbg.value(metadata i32 %73, metadata !2151, metadata !DIExpression()), !dbg !10963
  ret i32 %73, !dbg !11037
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @BlockSize(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #11 section ".ram_code" !dbg !11038 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11040, metadata !DIExpression()), !dbg !11045
  call void @llvm.dbg.value(metadata i32 %1, metadata !11041, metadata !DIExpression()), !dbg !11045
  call void @llvm.dbg.value(metadata i8* %0, metadata !11042, metadata !DIExpression()), !dbg !11045
  call void @llvm.dbg.value(metadata i32 0, metadata !11043, metadata !DIExpression()), !dbg !11045
  call void @llvm.dbg.value(metadata i32 0, metadata !11044, metadata !DIExpression()), !dbg !11045
  %3 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !11046
  %4 = bitcast i8* %3 to %struct.vdma_config_t**, !dbg !11046
  %5 = load %struct.vdma_config_t*, %struct.vdma_config_t** %4, align 4, !dbg !11046
  %6 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %5, i32 0, i32 1, !dbg !11047
  %7 = load i32, i32* %6, align 4, !dbg !11047
  call void @llvm.dbg.value(metadata i32 %7, metadata !11044, metadata !DIExpression()), !dbg !11045
  call void @llvm.dbg.value(metadata i32 0, metadata !11043, metadata !DIExpression()), !dbg !11045
  %8 = icmp ugt i32 %7, %1, !dbg !11048
  br i1 %8, label %17, label %9, !dbg !11049

9:                                                ; preds = %2, %9
  %10 = phi i32 [ %15, %9 ], [ %7, %2 ]
  %11 = phi i32 [ %12, %9 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !11044, metadata !DIExpression()), !dbg !11045
  call void @llvm.dbg.value(metadata i32 %11, metadata !11043, metadata !DIExpression()), !dbg !11045
  %12 = add i32 %11, 1, !dbg !11050
  call void @llvm.dbg.value(metadata i32 %12, metadata !11043, metadata !DIExpression()), !dbg !11045
  %13 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %5, i32 %12, i32 1, !dbg !11052
  %14 = load i32, i32* %13, align 4, !dbg !11052
  %15 = add i32 %14, %10, !dbg !11053
  call void @llvm.dbg.value(metadata i32 %15, metadata !11044, metadata !DIExpression()), !dbg !11045
  %16 = icmp ugt i32 %15, %1, !dbg !11048
  br i1 %16, label %17, label %9, !dbg !11049, !llvm.loop !11054

17:                                               ; preds = %9, %2
  %18 = phi i32 [ 0, %2 ], [ %12, %9 ], !dbg !11045
  %19 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %5, i32 %18, i32 0, !dbg !11056
  %20 = load i32, i32* %19, align 4, !dbg !11056
  ret i32 %20, !dbg !11057
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @BlockIndex(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #11 section ".ram_code" !dbg !11058 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11060, metadata !DIExpression()), !dbg !11066
  call void @llvm.dbg.value(metadata i32 %1, metadata !11061, metadata !DIExpression()), !dbg !11066
  call void @llvm.dbg.value(metadata i8* %0, metadata !11062, metadata !DIExpression()), !dbg !11066
  call void @llvm.dbg.value(metadata i32 0, metadata !11063, metadata !DIExpression()), !dbg !11066
  call void @llvm.dbg.value(metadata i32 0, metadata !11064, metadata !DIExpression()), !dbg !11066
  call void @llvm.dbg.value(metadata i32 0, metadata !11065, metadata !DIExpression()), !dbg !11066
  %3 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !11067
  %4 = bitcast i8* %3 to %struct.vdma_config_t**, !dbg !11067
  %5 = load %struct.vdma_config_t*, %struct.vdma_config_t** %4, align 4, !dbg !11067
  %6 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %5, i32 0, i32 1, !dbg !11068
  %7 = load i32, i32* %6, align 4, !dbg !11068
  %8 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %5, i32 0, i32 0, !dbg !11069
  %9 = load i32, i32* %8, align 4, !dbg !11069
  %10 = mul i32 %9, %7, !dbg !11070
  call void @llvm.dbg.value(metadata i32 %10, metadata !11064, metadata !DIExpression()), !dbg !11066
  call void @llvm.dbg.value(metadata i32 0, metadata !11065, metadata !DIExpression()), !dbg !11066
  call void @llvm.dbg.value(metadata i32 0, metadata !11063, metadata !DIExpression()), !dbg !11066
  call void @llvm.dbg.value(metadata i32 %1, metadata !11061, metadata !DIExpression()), !dbg !11066
  %11 = icmp ult i32 %10, %1, !dbg !11071
  br i1 %11, label %12, label %30, !dbg !11072

12:                                               ; preds = %2, %20
  %13 = phi i32 [ %25, %20 ], [ %7, %2 ]
  %14 = phi i32 [ %27, %20 ], [ %9, %2 ], !dbg !11073
  %15 = phi i32 [ %21, %20 ], [ 0, %2 ]
  %16 = phi i32 [ %28, %20 ], [ %10, %2 ]
  %17 = phi i32 [ %23, %20 ], [ 0, %2 ]
  %18 = phi i32 [ %22, %20 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !11065, metadata !DIExpression()), !dbg !11066
  call void @llvm.dbg.value(metadata i32 %16, metadata !11064, metadata !DIExpression()), !dbg !11066
  call void @llvm.dbg.value(metadata i32 %17, metadata !11063, metadata !DIExpression()), !dbg !11066
  call void @llvm.dbg.value(metadata i32 %18, metadata !11061, metadata !DIExpression()), !dbg !11066
  %19 = icmp eq i32 %14, 0, !dbg !11072
  br i1 %19, label %36, label %20, !dbg !11074

20:                                               ; preds = %12
  %21 = add i32 %13, %15, !dbg !11075
  call void @llvm.dbg.value(metadata i32 %21, metadata !11065, metadata !DIExpression()), !dbg !11066
  %22 = sub i32 %18, %16, !dbg !11077
  call void @llvm.dbg.value(metadata i32 %22, metadata !11061, metadata !DIExpression()), !dbg !11066
  %23 = add i32 %17, 1, !dbg !11078
  call void @llvm.dbg.value(metadata i32 %23, metadata !11063, metadata !DIExpression()), !dbg !11066
  %24 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %5, i32 %23, i32 1, !dbg !11079
  %25 = load i32, i32* %24, align 4, !dbg !11079
  %26 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %5, i32 %23, i32 0, !dbg !11080
  %27 = load i32, i32* %26, align 4, !dbg !11080
  %28 = mul i32 %27, %25, !dbg !11081
  call void @llvm.dbg.value(metadata i32 %28, metadata !11064, metadata !DIExpression()), !dbg !11066
  %29 = icmp ugt i32 %22, %28, !dbg !11071
  br i1 %29, label %12, label %30, !dbg !11072, !llvm.loop !11082

30:                                               ; preds = %20, %2
  %31 = phi i32 [ %9, %2 ], [ %27, %20 ], !dbg !11084
  %32 = phi i32 [ %1, %2 ], [ %22, %20 ]
  %33 = phi i32 [ 0, %2 ], [ %21, %20 ], !dbg !11066
  %34 = udiv i32 %32, %31, !dbg !11087
  %35 = add i32 %34, %33, !dbg !11088
  call void @llvm.dbg.value(metadata i32 %35, metadata !11065, metadata !DIExpression()), !dbg !11066
  br label %36, !dbg !11089

36:                                               ; preds = %12, %30
  %37 = phi i32 [ %35, %30 ], [ -1, %12 ], !dbg !11090
  call void @llvm.dbg.value(metadata i32 %37, metadata !11065, metadata !DIExpression()), !dbg !11066
  ret i32 %37, !dbg !11091
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_ROM_BASE() local_unnamed_addr #9 !dbg !11092 {
  ret i32 134217728, !dbg !11093
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_NOR_FLASH_BASE_ADDRESS() local_unnamed_addr #9 !dbg !11094 {
  ret i32 3932160, !dbg !11095
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_Dual_NOR_FLASH_SIZE() local_unnamed_addr #9 !dbg !11096 {
  ret i32 0, !dbg !11097
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_NOR_ALLOCATED_FAT_SPACE() local_unnamed_addr #9 !dbg !11098 {
  ret i32 262144, !dbg !11099
}

; Function Attrs: noinline nounwind optsize
define dso_local void @DelayAWhile_UST(i32 noundef %0) local_unnamed_addr #0 section ".ram_code" !dbg !11100 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11102, metadata !DIExpression()), !dbg !11104
  %2 = tail call i32 @hal_gpt_delay_us(i32 noundef %0) #21, !dbg !11105
  call void @llvm.dbg.value(metadata i32 %2, metadata !11103, metadata !DIExpression()), !dbg !11104
  %3 = icmp eq i32 %2, 0, !dbg !11106
  br i1 %3, label %5, label %4, !dbg !11108

4:                                                ; preds = %1
  tail call void @Flash_ReturnReady() #21, !dbg !11109
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.163, i32 0, i32 0), i32 noundef 279, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.DelayAWhile_UST, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.164, i32 0, i32 0)) #24, !dbg !11109
  unreachable, !dbg !11109

5:                                                ; preds = %1
  ret void, !dbg !11114
}

; Function Attrs: noinline nounwind optsize
define dso_local void @pmu_init_mt6385() local_unnamed_addr #0 !dbg !2158 {
  %1 = alloca %union.anon, align 4
  %2 = bitcast %union.anon* %1 to i8*, !dbg !11115
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #23, !dbg !11115
  call void @llvm.dbg.declare(metadata %union.anon* %1, metadata !2353, metadata !DIExpression()), !dbg !11116
  %3 = load i1, i1* @pmu_init_mt6385.init, align 1, !dbg !11117
  br i1 %3, label %47, label %4, !dbg !11119

4:                                                ; preds = %0
  store i1 true, i1* @pmu_init_mt6385.init, align 1, !dbg !11120
  %5 = getelementptr inbounds %union.anon, %union.anon* %1, i32 0, i32 0, !dbg !11121
  store i32 2500, i32* %5, align 4, !dbg !11122
  %6 = call i32 @pmic_i2c_init(i32 noundef 0, %union.anon* noundef nonnull %1) #21, !dbg !11123
  %7 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 25, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext 1) #21, !dbg !11124
  %8 = call zeroext i8 @pmu_get_register_value(i16 noundef zeroext 0, i16 noundef zeroext 255, i16 noundef zeroext 0) #21, !dbg !11125
  call void @llvm.dbg.value(metadata i8 %8, metadata !2351, metadata !DIExpression()), !dbg !11126
  %9 = call zeroext i8 @pmu_get_register_value(i16 noundef zeroext 1, i16 noundef zeroext 255, i16 noundef zeroext 0) #21, !dbg !11127
  call void @llvm.dbg.value(metadata i8 %9, metadata !2352, metadata !DIExpression()), !dbg !11126
  %10 = icmp eq i8 %8, 16, !dbg !11128
  %11 = icmp eq i8 %9, -123
  %12 = select i1 %10, i1 %11, i1 false, !dbg !11130
  br i1 %12, label %13, label %14, !dbg !11130

13:                                               ; preds = %4
  call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__FUNCTION__.pmu_init_mt6385, i32 0, i32 0), i32 noundef 111, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.171, i32 0, i32 0)) #21, !dbg !11131
  br label %18, !dbg !11133

14:                                               ; preds = %4
  %15 = icmp eq i8 %8, 17, !dbg !11135
  %16 = select i1 %15, i1 %11, i1 false, !dbg !11133
  br i1 %16, label %17, label %18, !dbg !11133

17:                                               ; preds = %14
  call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__FUNCTION__.pmu_init_mt6385, i32 0, i32 0), i32 noundef 114, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.172, i32 0, i32 0)) #21, !dbg !11136
  br label %18, !dbg !11138

18:                                               ; preds = %13, %17, %14
  %19 = phi i1 [ false, %13 ], [ true, %17 ], [ %15, %14 ]
  br i1 %10, label %20, label %30, !dbg !11139

20:                                               ; preds = %18
  %21 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 77, i16 noundef zeroext 1, i16 noundef zeroext 5, i16 noundef zeroext 0) #21, !dbg !11140
  %22 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 74, i16 noundef zeroext 1, i16 noundef zeroext 3, i16 noundef zeroext 1) #21, !dbg !11143
  %23 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 87, i16 noundef zeroext 1, i16 noundef zeroext 4, i16 noundef zeroext 0) #21, !dbg !11144
  %24 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 203, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext 0) #21, !dbg !11145
  %25 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 602, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 131) #21, !dbg !11146
  %26 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 611, i16 noundef zeroext 3, i16 noundef zeroext 0, i16 noundef zeroext 1) #21, !dbg !11147
  call void @pmu_set_vrc_key_mt6385(i32 noundef 0) #21, !dbg !11148
  %27 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 75, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext 1) #21, !dbg !11149
  %28 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 67, i16 noundef zeroext 3, i16 noundef zeroext 0, i16 noundef zeroext 2) #21, !dbg !11150
  call void @pmu_set_ovr_mode_mt6385(i32 noundef 0) #21, !dbg !11151
  %29 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 619, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 12) #21, !dbg !11152
  call void @pmu_init_power_mode([8 x i8]* noundef getelementptr inbounds ([10 x [8 x i8]], [10 x [8 x i8]]* @pmu_power_mode_init_setting_E1, i32 0, i32 0)) #22, !dbg !11153
  br label %30, !dbg !11154

30:                                               ; preds = %20, %18
  br i1 %19, label %31, label %44, !dbg !11155

31:                                               ; preds = %30
  %32 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 77, i16 noundef zeroext 1, i16 noundef zeroext 5, i16 noundef zeroext 1) #21, !dbg !11156
  %33 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 25, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext 1) #21, !dbg !11159
  %34 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 70, i16 noundef zeroext 1, i16 noundef zeroext 4, i16 noundef zeroext 1) #21, !dbg !11160
  %35 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 74, i16 noundef zeroext 1, i16 noundef zeroext 3, i16 noundef zeroext 1) #21, !dbg !11161
  %36 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 87, i16 noundef zeroext 1, i16 noundef zeroext 4, i16 noundef zeroext 0) #21, !dbg !11162
  %37 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 300, i16 noundef zeroext 7, i16 noundef zeroext 3, i16 noundef zeroext 1) #21, !dbg !11163
  %38 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 599, i16 noundef zeroext 1, i16 noundef zeroext 7, i16 noundef zeroext 0) #21, !dbg !11164
  %39 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 602, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 131) #21, !dbg !11165
  %40 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 603, i16 noundef zeroext 1, i16 noundef zeroext 7, i16 noundef zeroext 1) #21, !dbg !11166
  %41 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 611, i16 noundef zeroext 3, i16 noundef zeroext 0, i16 noundef zeroext 1) #21, !dbg !11167
  %42 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 619, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 12) #21, !dbg !11168
  call void @pmu_init_power_mode([8 x i8]* noundef getelementptr inbounds ([10 x [8 x i8]], [10 x [8 x i8]]* @pmu_power_mode_init_setting_E2, i32 0, i32 0)) #22, !dbg !11169
  call void @pmu_set_vrc_key_mt6385(i32 noundef 0) #21, !dbg !11170
  %43 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 75, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext 1) #21, !dbg !11171
  call void @pmu_set_ovr_mode_mt6385(i32 noundef 0) #21, !dbg !11172
  call void @pmu_set_vrc_key_mt6385(i32 noundef 1) #21, !dbg !11173
  br label %44, !dbg !11174

44:                                               ; preds = %31, %30
  %45 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 129, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext 0) #21, !dbg !11175
  %46 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 68, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 0) #21, !dbg !11176
  call void @pmu_auxadc_init() #21, !dbg !11177
  call void @pmu_eint_init() #22, !dbg !11178
  br label %47, !dbg !11179

47:                                               ; preds = %0, %44
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #23, !dbg !11179
  ret void, !dbg !11179
}

; Function Attrs: noinline nounwind optsize
define dso_local void @pmu_init_power_mode([8 x i8]* noundef readonly %0) local_unnamed_addr #0 !dbg !11180 {
  call void @llvm.dbg.value(metadata [8 x i8]* %0, metadata !11186, metadata !DIExpression()), !dbg !11188
  call void @llvm.dbg.value(metadata i32 0, metadata !11187, metadata !DIExpression()), !dbg !11188
  br label %2, !dbg !11189

2:                                                ; preds = %1, %2
  %3 = phi i32 [ 0, %1 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !11187, metadata !DIExpression()), !dbg !11188
  %4 = add nuw nsw i32 %3, 1, !dbg !11191
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 0, i32 %4, !dbg !11194
  %6 = load i8, i8* %5, align 1, !dbg !11194
  %7 = zext i8 %6 to i32, !dbg !11195
  tail call void @PMIC_VR_PSI_PMOD_CONFIG(i32 noundef 0, i32 noundef %4, i32 noundef %7) #21, !dbg !11196
  %8 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 1, i32 %4, !dbg !11197
  %9 = load i8, i8* %8, align 1, !dbg !11197
  %10 = zext i8 %9 to i32, !dbg !11198
  tail call void @PMIC_VR_PSI_PMOD_CONFIG(i32 noundef 1, i32 noundef %4, i32 noundef %10) #21, !dbg !11199
  %11 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 2, i32 %4, !dbg !11200
  %12 = load i8, i8* %11, align 1, !dbg !11200
  %13 = zext i8 %12 to i32, !dbg !11201
  tail call void @PMIC_VR_PSI_PMOD_CONFIG(i32 noundef 2, i32 noundef %4, i32 noundef %13) #21, !dbg !11202
  %14 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 3, i32 %4, !dbg !11203
  %15 = load i8, i8* %14, align 1, !dbg !11203
  %16 = zext i8 %15 to i32, !dbg !11204
  tail call void @PMIC_VR_PSI_PMOD_CONFIG(i32 noundef 3, i32 noundef %4, i32 noundef %16) #21, !dbg !11205
  %17 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 4, i32 %4, !dbg !11206
  %18 = load i8, i8* %17, align 1, !dbg !11206
  %19 = zext i8 %18 to i32, !dbg !11207
  tail call void @PMIC_VR_PSI_PMOD_CONFIG(i32 noundef 4, i32 noundef %4, i32 noundef %19) #21, !dbg !11208
  %20 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 5, i32 %4, !dbg !11209
  %21 = load i8, i8* %20, align 1, !dbg !11209
  %22 = zext i8 %21 to i32, !dbg !11210
  tail call void @PMIC_VR_PSI_PMOD_CONFIG(i32 noundef 5, i32 noundef %4, i32 noundef %22) #21, !dbg !11211
  %23 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 6, i32 %4, !dbg !11212
  %24 = load i8, i8* %23, align 1, !dbg !11212
  %25 = zext i8 %24 to i32, !dbg !11213
  tail call void @PMIC_VR_PSI_PMOD_CONFIG(i32 noundef 6, i32 noundef %4, i32 noundef %25) #21, !dbg !11214
  %26 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 7, i32 %4, !dbg !11215
  %27 = load i8, i8* %26, align 1, !dbg !11215
  %28 = zext i8 %27 to i32, !dbg !11216
  tail call void @PMIC_VR_PSI_PMOD_CONFIG(i32 noundef 7, i32 noundef %4, i32 noundef %28) #21, !dbg !11217
  %29 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 8, i32 %4, !dbg !11218
  %30 = load i8, i8* %29, align 1, !dbg !11218
  %31 = zext i8 %30 to i32, !dbg !11219
  tail call void @PMIC_VR_PSI_PMOD_CONFIG(i32 noundef 8, i32 noundef %4, i32 noundef %31) #21, !dbg !11220
  %32 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 9, i32 %4, !dbg !11221
  %33 = load i8, i8* %32, align 1, !dbg !11221
  %34 = zext i8 %33 to i32, !dbg !11222
  tail call void @PMIC_VR_PSI_PMOD_CONFIG(i32 noundef 9, i32 noundef %4, i32 noundef %34) #21, !dbg !11223
  call void @llvm.dbg.value(metadata i32 %4, metadata !11187, metadata !DIExpression()), !dbg !11188
  %35 = icmp eq i32 %4, 4, !dbg !11224
  br i1 %35, label %36, label %2, !dbg !11189, !llvm.loop !11225

36:                                               ; preds = %2
  tail call void @PMIC_VR_PSI_PMOD_CONFIG(i32 noundef 10, i32 noundef 1, i32 noundef 0) #21, !dbg !11227
  tail call void @PMIC_VR_PSI_PMOD_CONFIG(i32 noundef 11, i32 noundef 1, i32 noundef 0) #21, !dbg !11228
  call void @llvm.dbg.value(metadata i32 0, metadata !11187, metadata !DIExpression()), !dbg !11188
  %37 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 2, i32 5
  call void @llvm.dbg.value(metadata i32 0, metadata !11187, metadata !DIExpression()), !dbg !11188
  %38 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 3, i32 5
  %39 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 5, i32 5
  %40 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 6, i32 5
  %41 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 7, i32 5
  %42 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 8, i32 5
  %43 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 9, i32 5
  br label %44, !dbg !11229

44:                                               ; preds = %36, %44
  %45 = phi i1 [ true, %36 ], [ false, %44 ]
  %46 = phi i32 [ 0, %36 ], [ 1, %44 ]
  call void @llvm.dbg.value(metadata i32 %46, metadata !11187, metadata !DIExpression()), !dbg !11188
  %47 = add nuw nsw i32 %46, 3, !dbg !11231
  %48 = load i8, i8* %37, align 1, !dbg !11234
  %49 = zext i8 %48 to i32, !dbg !11235
  %50 = or i32 %46, 6, !dbg !11236
  %51 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 2, i32 %50, !dbg !11237
  %52 = load i8, i8* %51, align 1, !dbg !11237
  %53 = zext i8 %52 to i32, !dbg !11238
  tail call void @PMIC_VR_SLEEP_WKUP_CONFIG(i32 noundef 2, i32 noundef %47, i32 noundef %49, i32 noundef %53) #21, !dbg !11239
  %54 = load i8, i8* %38, align 1, !dbg !11240
  %55 = zext i8 %54 to i32, !dbg !11241
  %56 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 3, i32 %50, !dbg !11242
  %57 = load i8, i8* %56, align 1, !dbg !11242
  %58 = zext i8 %57 to i32, !dbg !11243
  tail call void @PMIC_VR_SLEEP_WKUP_CONFIG(i32 noundef 3, i32 noundef %47, i32 noundef %55, i32 noundef %58) #21, !dbg !11244
  %59 = load i8, i8* %39, align 1, !dbg !11245
  %60 = zext i8 %59 to i32, !dbg !11246
  %61 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 5, i32 %50, !dbg !11247
  %62 = load i8, i8* %61, align 1, !dbg !11247
  %63 = zext i8 %62 to i32, !dbg !11248
  tail call void @PMIC_VR_SLEEP_WKUP_CONFIG(i32 noundef 5, i32 noundef %47, i32 noundef %60, i32 noundef %63) #21, !dbg !11249
  %64 = load i8, i8* %40, align 1, !dbg !11250
  %65 = zext i8 %64 to i32, !dbg !11251
  %66 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 6, i32 %50, !dbg !11252
  %67 = load i8, i8* %66, align 1, !dbg !11252
  %68 = zext i8 %67 to i32, !dbg !11253
  tail call void @PMIC_VR_SLEEP_WKUP_CONFIG(i32 noundef 6, i32 noundef %47, i32 noundef %65, i32 noundef %68) #21, !dbg !11254
  %69 = load i8, i8* %41, align 1, !dbg !11255
  %70 = zext i8 %69 to i32, !dbg !11256
  %71 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 7, i32 %50, !dbg !11257
  %72 = load i8, i8* %71, align 1, !dbg !11257
  %73 = zext i8 %72 to i32, !dbg !11258
  tail call void @PMIC_VR_SLEEP_WKUP_CONFIG(i32 noundef 7, i32 noundef %47, i32 noundef %70, i32 noundef %73) #21, !dbg !11259
  %74 = load i8, i8* %42, align 1, !dbg !11260
  %75 = zext i8 %74 to i32, !dbg !11261
  %76 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 8, i32 %50, !dbg !11262
  %77 = load i8, i8* %76, align 1, !dbg !11262
  %78 = zext i8 %77 to i32, !dbg !11263
  tail call void @PMIC_VR_SLEEP_WKUP_CONFIG(i32 noundef 8, i32 noundef %47, i32 noundef %75, i32 noundef %78) #21, !dbg !11264
  %79 = load i8, i8* %43, align 1, !dbg !11265
  %80 = zext i8 %79 to i32, !dbg !11266
  %81 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 9, i32 %50, !dbg !11267
  %82 = load i8, i8* %81, align 1, !dbg !11267
  %83 = zext i8 %82 to i32, !dbg !11268
  tail call void @PMIC_VR_SLEEP_WKUP_CONFIG(i32 noundef 9, i32 noundef %47, i32 noundef %80, i32 noundef %83) #21, !dbg !11269
  call void @llvm.dbg.value(metadata i32 %46, metadata !11187, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !11188
  br i1 %45, label %44, label %84, !dbg !11229, !llvm.loop !11270

84:                                               ; preds = %44
  tail call void @PMIC_VR_SLEEP_WKUP_CONFIG(i32 noundef 12, i32 noundef 3, i32 noundef 1, i32 noundef 1) #21, !dbg !11272
  tail call void @PMIC_VR_SLEEP_WKUP_CONFIG(i32 noundef 13, i32 noundef 3, i32 noundef 1, i32 noundef 1) #21, !dbg !11273
  tail call void @PMIC_VR_SLEEP_WKUP_CONFIG(i32 noundef 12, i32 noundef 4, i32 noundef 1, i32 noundef 1) #21, !dbg !11274
  tail call void @PMIC_VR_SLEEP_WKUP_CONFIG(i32 noundef 13, i32 noundef 4, i32 noundef 1, i32 noundef 1) #21, !dbg !11275
  %85 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 2, i32 0, !dbg !11276
  %86 = load i8, i8* %85, align 1, !dbg !11276
  %87 = zext i8 %86 to i32, !dbg !11277
  tail call void @PMIC_VR_CONTROL(i32 noundef 2, i32 noundef %87) #21, !dbg !11278
  %88 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 3, i32 0, !dbg !11279
  %89 = load i8, i8* %88, align 1, !dbg !11279
  %90 = zext i8 %89 to i32, !dbg !11280
  tail call void @PMIC_VR_CONTROL(i32 noundef 3, i32 noundef %90) #21, !dbg !11281
  %91 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 5, i32 0, !dbg !11282
  %92 = load i8, i8* %91, align 1, !dbg !11282
  %93 = zext i8 %92 to i32, !dbg !11283
  tail call void @PMIC_VR_CONTROL(i32 noundef 5, i32 noundef %93) #21, !dbg !11284
  %94 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 6, i32 0, !dbg !11285
  %95 = load i8, i8* %94, align 1, !dbg !11285
  %96 = zext i8 %95 to i32, !dbg !11286
  tail call void @PMIC_VR_CONTROL(i32 noundef 6, i32 noundef %96) #21, !dbg !11287
  %97 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 7, i32 0, !dbg !11288
  %98 = load i8, i8* %97, align 1, !dbg !11288
  %99 = zext i8 %98 to i32, !dbg !11289
  tail call void @PMIC_VR_CONTROL(i32 noundef 7, i32 noundef %99) #21, !dbg !11290
  %100 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 8, i32 0, !dbg !11291
  %101 = load i8, i8* %100, align 1, !dbg !11291
  %102 = zext i8 %101 to i32, !dbg !11292
  tail call void @PMIC_VR_CONTROL(i32 noundef 8, i32 noundef %102) #21, !dbg !11293
  %103 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 9, i32 0, !dbg !11294
  %104 = load i8, i8* %103, align 1, !dbg !11294
  %105 = zext i8 %104 to i32, !dbg !11295
  tail call void @PMIC_VR_CONTROL(i32 noundef 9, i32 noundef %105) #21, !dbg !11296
  tail call void @PMIC_VR_CONTROL(i32 noundef 10, i32 noundef 0) #21, !dbg !11297
  tail call void @PMIC_VR_CONTROL(i32 noundef 11, i32 noundef 0) #21, !dbg !11298
  tail call void @PMIC_VR_CONTROL(i32 noundef 12, i32 noundef 0) #21, !dbg !11299
  tail call void @PMIC_VR_CONTROL(i32 noundef 13, i32 noundef 0) #21, !dbg !11300
  tail call void @PMIC_VR_CONTROL(i32 noundef 14, i32 noundef 0) #21, !dbg !11301
  tail call void @pmu_set_vrc_key_mt6385(i32 noundef 0) #21, !dbg !11302
  tail call void @pmu_set_ovr_mode_mt6385(i32 noundef 1) #21, !dbg !11303
  %106 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 66, i16 noundef zeroext 1, i16 noundef zeroext 2, i16 noundef zeroext 1) #21, !dbg !11304
  %107 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 66, i16 noundef zeroext 1, i16 noundef zeroext 3, i16 noundef zeroext 1) #21, !dbg !11305
  %108 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 66, i16 noundef zeroext 1, i16 noundef zeroext 5, i16 noundef zeroext 0) #21, !dbg !11306
  %109 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 66, i16 noundef zeroext 1, i16 noundef zeroext 4, i16 noundef zeroext 0) #21, !dbg !11307
  tail call void @pmu_set_ovr_mode_mt6385(i32 noundef 0) #21, !dbg !11308
  tail call void @pmu_set_vrc_key_mt6385(i32 noundef 1) #21, !dbg !11309
  tail call void @PMIC_VR_SLEEP_WKUP_CONFIG(i32 noundef 2, i32 noundef 3, i32 noundef 2, i32 noundef 0) #21, !dbg !11310
  tail call void @PMIC_VR_SLEEP_WKUP_CONFIG(i32 noundef 2, i32 noundef 4, i32 noundef 2, i32 noundef 0) #21, !dbg !11311
  ret void, !dbg !11312
}

; Function Attrs: optsize
declare dso_local void @pmu_auxadc_init() local_unnamed_addr #2

; Function Attrs: noinline nounwind optsize
define dso_local void @pmu_eint_init() local_unnamed_addr #0 !dbg !11313 {
  %1 = alloca %struct.vdma_config_t, align 4
  %2 = bitcast %struct.vdma_config_t* %1 to i8*, !dbg !11322
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #23, !dbg !11322
  call void @llvm.dbg.declare(metadata %struct.vdma_config_t* %1, metadata !11315, metadata !DIExpression()), !dbg !11323
  %3 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %1, i32 0, i32 0, !dbg !11324
  store i32 2, i32* %3, align 4, !dbg !11325
  %4 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %1, i32 0, i32 1, !dbg !11326
  store i32 1, i32* %4, align 4, !dbg !11327
  %5 = call i32 @hal_eint_init(i32 noundef 30, %struct.vdma_config_t* noundef nonnull %1) #21, !dbg !11328
  %6 = call i32 @hal_eint_register_callback(i32 noundef 30, void (i8*)* noundef nonnull @pmu_eint_handler, i8* noundef null) #21, !dbg !11329
  %7 = call i32 @hal_eint_unmask(i32 noundef 30) #21, !dbg !11330
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #23, !dbg !11331
  ret void, !dbg !11331
}

; Function Attrs: optsize
declare dso_local i32 @hal_eint_init(i32 noundef, %struct.vdma_config_t* noundef) local_unnamed_addr #2

; Function Attrs: noinline nounwind optsize
define dso_local void @pmu_eint_handler(i8* nocapture readnone %0) #0 !dbg !2322 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !2324, metadata !DIExpression()), !dbg !11332
  %2 = tail call i32 @hal_eint_mask(i32 noundef 30) #21, !dbg !11333
  %3 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !11334
  call void @llvm.dbg.value(metadata i32 %3, metadata !2325, metadata !DIExpression()), !dbg !11332
  store i32 0, i32* @pmu_eint_handler.index, align 4, !dbg !11335
  br label %6, !dbg !11337

4:                                                ; preds = %6
  store i32 0, i32* @pmu_eint_handler.index, align 4, !dbg !11338
  %5 = load i32, i32* getelementptr inbounds ([7 x i32], [7 x i32]* @pmu_eint_handler.int_sts, i32 0, i32 0), align 4, !dbg !11340
  br label %18, !dbg !11343

6:                                                ; preds = %1, %6
  %7 = phi i32 [ 0, %1 ], [ %14, %6 ]
  %8 = trunc i32 %7 to i16, !dbg !11344
  %9 = add nuw nsw i16 %8, 30, !dbg !11344
  %10 = tail call zeroext i8 @pmu_get_register_value(i16 noundef zeroext %9, i16 noundef zeroext 255, i16 noundef zeroext 0) #21, !dbg !11347
  %11 = zext i8 %10 to i32, !dbg !11347
  %12 = load i32, i32* @pmu_eint_handler.index, align 4, !dbg !11348
  %13 = getelementptr inbounds [7 x i32], [7 x i32]* @pmu_eint_handler.int_sts, i32 0, i32 %12, !dbg !11349
  store i32 %11, i32* %13, align 4, !dbg !11350
  %14 = add i32 %12, 1, !dbg !11351
  store i32 %14, i32* @pmu_eint_handler.index, align 4, !dbg !11335
  %15 = icmp ult i32 %14, 7, !dbg !11352
  br i1 %15, label %6, label %4, !dbg !11337, !llvm.loop !11353

16:                                               ; preds = %37
  store i32 0, i32* @pmu_eint_handler.index, align 4, !dbg !11355
  %17 = load i32, i32* getelementptr inbounds ([7 x i32], [7 x i32]* @pmu_eint_handler.int_sts, i32 0, i32 1), align 4, !dbg !11357
  br label %44, !dbg !11360

18:                                               ; preds = %4, %37
  %19 = phi i32 [ %5, %4 ], [ %39, %37 ], !dbg !11340
  %20 = phi i32 [ 0, %4 ], [ %40, %37 ]
  %21 = shl nuw nsw i32 %20, 1, !dbg !11361
  %22 = lshr i32 %19, %21, !dbg !11362
  %23 = and i32 %22, 3, !dbg !11363
  %24 = icmp eq i32 %23, 0, !dbg !11364
  br i1 %24, label %37, label %25, !dbg !11366

25:                                               ; preds = %18
  %26 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %20, i32 3, !dbg !11367
  %27 = load i8, i8* %26, align 1, !dbg !11367, !range !3203
  %28 = icmp eq i8 %27, 0, !dbg !11367
  br i1 %28, label %37, label %29, !dbg !11368

29:                                               ; preds = %25
  %30 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %20, i32 0, !dbg !11369
  %31 = load void (i8, i8*)*, void (i8, i8*)** %30, align 4, !dbg !11369
  %32 = trunc i32 %23 to i8, !dbg !11371
  %33 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %20, i32 1, !dbg !11372
  %34 = load i8*, i8** %33, align 4, !dbg !11372
  tail call void %31(i8 noundef zeroext %32, i8* noundef %34) #21, !dbg !11373
  %35 = load i32, i32* getelementptr inbounds ([7 x i32], [7 x i32]* @pmu_eint_handler.int_sts, i32 0, i32 0), align 4, !dbg !11340
  %36 = load i32, i32* @pmu_eint_handler.index, align 4, !dbg !11374
  br label %37, !dbg !11375

37:                                               ; preds = %18, %25, %29
  %38 = phi i32 [ %20, %18 ], [ %20, %25 ], [ %36, %29 ], !dbg !11374
  %39 = phi i32 [ %19, %18 ], [ %19, %25 ], [ %35, %29 ]
  %40 = add i32 %38, 1, !dbg !11374
  store i32 %40, i32* @pmu_eint_handler.index, align 4, !dbg !11338
  %41 = icmp ult i32 %40, 4, !dbg !11376
  br i1 %41, label %18, label %16, !dbg !11343, !llvm.loop !11377

42:                                               ; preds = %64
  store i32 0, i32* @pmu_eint_handler.index, align 4, !dbg !11379
  %43 = load i32, i32* getelementptr inbounds ([7 x i32], [7 x i32]* @pmu_eint_handler.int_sts, i32 0, i32 2), align 4, !dbg !11381
  br label %71, !dbg !11384

44:                                               ; preds = %16, %64
  %45 = phi i32 [ %17, %16 ], [ %66, %64 ], !dbg !11357
  %46 = phi i32 [ 0, %16 ], [ %67, %64 ]
  %47 = shl nuw nsw i32 %46, 1, !dbg !11385
  %48 = lshr i32 %45, %47, !dbg !11386
  %49 = and i32 %48, 3, !dbg !11387
  %50 = icmp eq i32 %49, 0, !dbg !11388
  br i1 %50, label %64, label %51, !dbg !11390

51:                                               ; preds = %44
  %52 = add nuw nsw i32 %46, 4, !dbg !11391
  %53 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %52, i32 3, !dbg !11392
  %54 = load i8, i8* %53, align 1, !dbg !11392, !range !3203
  %55 = icmp eq i8 %54, 0, !dbg !11392
  br i1 %55, label %64, label %56, !dbg !11393

56:                                               ; preds = %51
  %57 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %52, i32 0, !dbg !11394
  %58 = load void (i8, i8*)*, void (i8, i8*)** %57, align 4, !dbg !11394
  %59 = trunc i32 %49 to i8, !dbg !11396
  %60 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %52, i32 1, !dbg !11397
  %61 = load i8*, i8** %60, align 4, !dbg !11397
  tail call void %58(i8 noundef zeroext %59, i8* noundef %61) #21, !dbg !11398
  %62 = load i32, i32* getelementptr inbounds ([7 x i32], [7 x i32]* @pmu_eint_handler.int_sts, i32 0, i32 1), align 4, !dbg !11357
  %63 = load i32, i32* @pmu_eint_handler.index, align 4, !dbg !11399
  br label %64, !dbg !11400

64:                                               ; preds = %44, %51, %56
  %65 = phi i32 [ %46, %44 ], [ %46, %51 ], [ %63, %56 ], !dbg !11399
  %66 = phi i32 [ %45, %44 ], [ %45, %51 ], [ %62, %56 ]
  %67 = add i32 %65, 1, !dbg !11399
  store i32 %67, i32* @pmu_eint_handler.index, align 4, !dbg !11355
  %68 = icmp ult i32 %67, 4, !dbg !11401
  br i1 %68, label %44, label %42, !dbg !11360, !llvm.loop !11402

69:                                               ; preds = %91
  store i32 0, i32* @pmu_eint_handler.index, align 4, !dbg !11404
  %70 = load i32, i32* getelementptr inbounds ([7 x i32], [7 x i32]* @pmu_eint_handler.int_sts, i32 0, i32 3), align 4, !dbg !11406
  br label %98, !dbg !11409

71:                                               ; preds = %42, %91
  %72 = phi i32 [ %43, %42 ], [ %93, %91 ], !dbg !11381
  %73 = phi i32 [ 0, %42 ], [ %94, %91 ]
  %74 = shl nuw nsw i32 %73, 1, !dbg !11410
  %75 = lshr i32 %72, %74, !dbg !11411
  %76 = and i32 %75, 3, !dbg !11412
  %77 = icmp eq i32 %76, 0, !dbg !11413
  br i1 %77, label %91, label %78, !dbg !11415

78:                                               ; preds = %71
  %79 = add nuw nsw i32 %73, 8, !dbg !11416
  %80 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %79, i32 3, !dbg !11417
  %81 = load i8, i8* %80, align 1, !dbg !11417, !range !3203
  %82 = icmp eq i8 %81, 0, !dbg !11417
  br i1 %82, label %91, label %83, !dbg !11418

83:                                               ; preds = %78
  %84 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %79, i32 0, !dbg !11419
  %85 = load void (i8, i8*)*, void (i8, i8*)** %84, align 4, !dbg !11419
  %86 = trunc i32 %76 to i8, !dbg !11421
  %87 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %79, i32 1, !dbg !11422
  %88 = load i8*, i8** %87, align 4, !dbg !11422
  tail call void %85(i8 noundef zeroext %86, i8* noundef %88) #21, !dbg !11423
  %89 = load i32, i32* getelementptr inbounds ([7 x i32], [7 x i32]* @pmu_eint_handler.int_sts, i32 0, i32 2), align 4, !dbg !11381
  %90 = load i32, i32* @pmu_eint_handler.index, align 4, !dbg !11424
  br label %91, !dbg !11425

91:                                               ; preds = %71, %78, %83
  %92 = phi i32 [ %73, %71 ], [ %73, %78 ], [ %90, %83 ], !dbg !11424
  %93 = phi i32 [ %72, %71 ], [ %72, %78 ], [ %89, %83 ]
  %94 = add i32 %92, 1, !dbg !11424
  store i32 %94, i32* @pmu_eint_handler.index, align 4, !dbg !11379
  %95 = icmp ult i32 %94, 4, !dbg !11426
  br i1 %95, label %71, label %69, !dbg !11384, !llvm.loop !11427

96:                                               ; preds = %118
  store i32 0, i32* @pmu_eint_handler.index, align 4, !dbg !11429
  %97 = load i32, i32* getelementptr inbounds ([7 x i32], [7 x i32]* @pmu_eint_handler.int_sts, i32 0, i32 4), align 4, !dbg !11431
  br label %125, !dbg !11434

98:                                               ; preds = %69, %118
  %99 = phi i32 [ %70, %69 ], [ %120, %118 ], !dbg !11406
  %100 = phi i32 [ 0, %69 ], [ %121, %118 ]
  %101 = shl nuw nsw i32 %100, 1, !dbg !11435
  %102 = lshr i32 %99, %101, !dbg !11436
  %103 = and i32 %102, 3, !dbg !11437
  %104 = icmp eq i32 %103, 0, !dbg !11438
  br i1 %104, label %118, label %105, !dbg !11440

105:                                              ; preds = %98
  %106 = add nuw nsw i32 %100, 12, !dbg !11441
  %107 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %106, i32 3, !dbg !11442
  %108 = load i8, i8* %107, align 1, !dbg !11442, !range !3203
  %109 = icmp eq i8 %108, 0, !dbg !11442
  br i1 %109, label %118, label %110, !dbg !11443

110:                                              ; preds = %105
  %111 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %106, i32 0, !dbg !11444
  %112 = load void (i8, i8*)*, void (i8, i8*)** %111, align 4, !dbg !11444
  %113 = trunc i32 %103 to i8, !dbg !11446
  %114 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %106, i32 1, !dbg !11447
  %115 = load i8*, i8** %114, align 4, !dbg !11447
  tail call void %112(i8 noundef zeroext %113, i8* noundef %115) #21, !dbg !11448
  %116 = load i32, i32* getelementptr inbounds ([7 x i32], [7 x i32]* @pmu_eint_handler.int_sts, i32 0, i32 3), align 4, !dbg !11406
  %117 = load i32, i32* @pmu_eint_handler.index, align 4, !dbg !11449
  br label %118, !dbg !11450

118:                                              ; preds = %98, %105, %110
  %119 = phi i32 [ %100, %98 ], [ %100, %105 ], [ %117, %110 ], !dbg !11449
  %120 = phi i32 [ %99, %98 ], [ %99, %105 ], [ %116, %110 ]
  %121 = add i32 %119, 1, !dbg !11449
  store i32 %121, i32* @pmu_eint_handler.index, align 4, !dbg !11404
  %122 = icmp ult i32 %121, 4, !dbg !11451
  br i1 %122, label %98, label %96, !dbg !11409, !llvm.loop !11452

123:                                              ; preds = %145
  store i32 0, i32* @pmu_eint_handler.index, align 4, !dbg !11454
  %124 = load i32, i32* getelementptr inbounds ([7 x i32], [7 x i32]* @pmu_eint_handler.int_sts, i32 0, i32 5), align 4, !dbg !11456
  br label %152, !dbg !11459

125:                                              ; preds = %96, %145
  %126 = phi i32 [ %97, %96 ], [ %147, %145 ], !dbg !11431
  %127 = phi i32 [ 0, %96 ], [ %148, %145 ]
  %128 = shl nuw nsw i32 %127, 1, !dbg !11460
  %129 = lshr i32 %126, %128, !dbg !11461
  %130 = and i32 %129, 3, !dbg !11462
  %131 = icmp eq i32 %130, 0, !dbg !11463
  br i1 %131, label %145, label %132, !dbg !11465

132:                                              ; preds = %125
  %133 = add nuw nsw i32 %127, 16, !dbg !11466
  %134 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %133, i32 3, !dbg !11467
  %135 = load i8, i8* %134, align 1, !dbg !11467, !range !3203
  %136 = icmp eq i8 %135, 0, !dbg !11467
  br i1 %136, label %145, label %137, !dbg !11468

137:                                              ; preds = %132
  %138 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %133, i32 0, !dbg !11469
  %139 = load void (i8, i8*)*, void (i8, i8*)** %138, align 4, !dbg !11469
  %140 = trunc i32 %130 to i8, !dbg !11471
  %141 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %133, i32 1, !dbg !11472
  %142 = load i8*, i8** %141, align 4, !dbg !11472
  tail call void %139(i8 noundef zeroext %140, i8* noundef %142) #21, !dbg !11473
  %143 = load i32, i32* getelementptr inbounds ([7 x i32], [7 x i32]* @pmu_eint_handler.int_sts, i32 0, i32 4), align 4, !dbg !11431
  %144 = load i32, i32* @pmu_eint_handler.index, align 4, !dbg !11474
  br label %145, !dbg !11475

145:                                              ; preds = %125, %132, %137
  %146 = phi i32 [ %127, %125 ], [ %127, %132 ], [ %144, %137 ], !dbg !11474
  %147 = phi i32 [ %126, %125 ], [ %126, %132 ], [ %143, %137 ]
  %148 = add i32 %146, 1, !dbg !11474
  store i32 %148, i32* @pmu_eint_handler.index, align 4, !dbg !11429
  %149 = icmp ult i32 %148, 3, !dbg !11476
  br i1 %149, label %125, label %123, !dbg !11434, !llvm.loop !11477

150:                                              ; preds = %170
  store i32 0, i32* @pmu_eint_handler.index, align 4, !dbg !11479
  %151 = load i32, i32* getelementptr inbounds ([7 x i32], [7 x i32]* @pmu_eint_handler.int_sts, i32 0, i32 6), align 4, !dbg !11481
  br label %176, !dbg !11484

152:                                              ; preds = %123, %170
  %153 = phi i32 [ %124, %123 ], [ %172, %170 ], !dbg !11456
  %154 = phi i32 [ 0, %123 ], [ %173, %170 ]
  %155 = shl nuw nsw i32 1, %154, !dbg !11485
  %156 = and i32 %153, %155, !dbg !11485
  %157 = icmp eq i32 %156, 0, !dbg !11485
  br i1 %157, label %170, label %158, !dbg !11487

158:                                              ; preds = %152
  %159 = add nuw nsw i32 %154, 19, !dbg !11488
  %160 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %159, i32 3, !dbg !11489
  %161 = load i8, i8* %160, align 1, !dbg !11489, !range !3203
  %162 = icmp eq i8 %161, 0, !dbg !11489
  br i1 %162, label %170, label %163, !dbg !11490

163:                                              ; preds = %158
  %164 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %159, i32 0, !dbg !11491
  %165 = load void (i8, i8*)*, void (i8, i8*)** %164, align 4, !dbg !11491
  %166 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %159, i32 1, !dbg !11493
  %167 = load i8*, i8** %166, align 4, !dbg !11493
  tail call void %165(i8 noundef zeroext 1, i8* noundef %167) #21, !dbg !11494
  %168 = load i32, i32* getelementptr inbounds ([7 x i32], [7 x i32]* @pmu_eint_handler.int_sts, i32 0, i32 5), align 4, !dbg !11456
  %169 = load i32, i32* @pmu_eint_handler.index, align 4, !dbg !11495
  br label %170, !dbg !11496

170:                                              ; preds = %152, %158, %163
  %171 = phi i32 [ %154, %152 ], [ %154, %158 ], [ %169, %163 ], !dbg !11495
  %172 = phi i32 [ %153, %152 ], [ %153, %158 ], [ %168, %163 ]
  %173 = add i32 %171, 1, !dbg !11495
  store i32 %173, i32* @pmu_eint_handler.index, align 4, !dbg !11454
  %174 = icmp ult i32 %173, 8, !dbg !11497
  br i1 %174, label %152, label %150, !dbg !11459, !llvm.loop !11498

175:                                              ; preds = %194
  store i32 0, i32* @pmu_eint_handler.index, align 4, !dbg !11500
  br label %200, !dbg !11502

176:                                              ; preds = %150, %194
  %177 = phi i32 [ %151, %150 ], [ %196, %194 ], !dbg !11481
  %178 = phi i32 [ 0, %150 ], [ %197, %194 ]
  %179 = shl nuw nsw i32 1, %178, !dbg !11503
  %180 = and i32 %177, %179, !dbg !11503
  %181 = icmp eq i32 %180, 0, !dbg !11503
  br i1 %181, label %194, label %182, !dbg !11505

182:                                              ; preds = %176
  %183 = add nuw nsw i32 %178, 27, !dbg !11506
  %184 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %183, i32 3, !dbg !11507
  %185 = load i8, i8* %184, align 1, !dbg !11507, !range !3203
  %186 = icmp eq i8 %185, 0, !dbg !11507
  br i1 %186, label %194, label %187, !dbg !11508

187:                                              ; preds = %182
  %188 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %183, i32 0, !dbg !11509
  %189 = load void (i8, i8*)*, void (i8, i8*)** %188, align 4, !dbg !11509
  %190 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %183, i32 1, !dbg !11511
  %191 = load i8*, i8** %190, align 4, !dbg !11511
  tail call void %189(i8 noundef zeroext 1, i8* noundef %191) #21, !dbg !11512
  %192 = load i32, i32* getelementptr inbounds ([7 x i32], [7 x i32]* @pmu_eint_handler.int_sts, i32 0, i32 6), align 4, !dbg !11481
  %193 = load i32, i32* @pmu_eint_handler.index, align 4, !dbg !11513
  br label %194, !dbg !11514

194:                                              ; preds = %176, %182, %187
  %195 = phi i32 [ %178, %176 ], [ %178, %182 ], [ %193, %187 ], !dbg !11513
  %196 = phi i32 [ %177, %176 ], [ %177, %182 ], [ %192, %187 ]
  %197 = add i32 %195, 1, !dbg !11513
  store i32 %197, i32* @pmu_eint_handler.index, align 4, !dbg !11479
  %198 = icmp ult i32 %197, 5, !dbg !11515
  br i1 %198, label %176, label %175, !dbg !11484, !llvm.loop !11516

199:                                              ; preds = %200
  store i32 0, i32* @pmu_eint_handler.index, align 4, !dbg !11518
  br label %208, !dbg !11520

200:                                              ; preds = %175, %200
  %201 = phi i32 [ 0, %175 ], [ %206, %200 ]
  %202 = trunc i32 %201 to i16, !dbg !11521
  %203 = add nuw nsw i16 %202, 30, !dbg !11521
  %204 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext %203, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 255) #21, !dbg !11524
  %205 = load i32, i32* @pmu_eint_handler.index, align 4, !dbg !11525
  %206 = add i32 %205, 1, !dbg !11525
  store i32 %206, i32* @pmu_eint_handler.index, align 4, !dbg !11500
  %207 = icmp ult i32 %206, 7, !dbg !11526
  br i1 %207, label %200, label %199, !dbg !11502, !llvm.loop !11527

208:                                              ; preds = %199, %222
  %209 = phi i32 [ 0, %199 ], [ %224, %222 ]
  %210 = trunc i32 %209 to i16, !dbg !11529
  %211 = add nuw nsw i16 %210, 30, !dbg !11529
  %212 = tail call zeroext i8 @pmu_get_register_value(i16 noundef zeroext %211, i16 noundef zeroext 255, i16 noundef zeroext 0) #21, !dbg !11532
  %213 = zext i8 %212 to i32, !dbg !11532
  %214 = load i32, i32* @pmu_eint_handler.index, align 4, !dbg !11533
  %215 = getelementptr inbounds [7 x i32], [7 x i32]* @pmu_eint_handler.int_sts, i32 0, i32 %214, !dbg !11534
  store i32 %213, i32* %215, align 4, !dbg !11535
  %216 = icmp eq i8 %212, 0, !dbg !11536
  br i1 %216, label %222, label %217, !dbg !11538

217:                                              ; preds = %208
  %218 = trunc i32 %214 to i16, !dbg !11539
  %219 = add i16 %218, 30, !dbg !11539
  %220 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext %219, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 255) #21, !dbg !11541
  %221 = load i32, i32* @pmu_eint_handler.index, align 4, !dbg !11542
  br label %222, !dbg !11543

222:                                              ; preds = %208, %217
  %223 = phi i32 [ %214, %208 ], [ %221, %217 ], !dbg !11542
  %224 = add i32 %223, 1, !dbg !11542
  store i32 %224, i32* @pmu_eint_handler.index, align 4, !dbg !11518
  %225 = icmp ult i32 %224, 7, !dbg !11544
  br i1 %225, label %208, label %226, !dbg !11520, !llvm.loop !11545

226:                                              ; preds = %222
  tail call void @restore_interrupt_mask(i32 noundef %3) #21, !dbg !11547
  %227 = tail call i32 @hal_eint_unmask(i32 noundef 30) #21, !dbg !11548
  ret void, !dbg !11549
}

; Function Attrs: optsize
declare dso_local i32 @hal_eint_register_callback(i32 noundef, void (i8*)* noundef, i8* noundef) local_unnamed_addr #2

; Function Attrs: optsize
declare dso_local i32 @hal_eint_unmask(i32 noundef) local_unnamed_addr #2

; Function Attrs: optsize
declare dso_local i32 @hal_eint_mask(i32 noundef) local_unnamed_addr #2

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @pmu_set_register_value_mt6385(i16 noundef zeroext %0, i16 noundef zeroext %1, i16 noundef zeroext %2, i16 noundef zeroext %3) local_unnamed_addr #0 !dbg !11550 {
  %5 = alloca [3 x i8], align 1
  %6 = alloca [1 x i8], align 1
  call void @llvm.dbg.value(metadata i16 %0, metadata !11552, metadata !DIExpression()), !dbg !11559
  call void @llvm.dbg.value(metadata i16 %1, metadata !11553, metadata !DIExpression()), !dbg !11559
  call void @llvm.dbg.value(metadata i16 %2, metadata !11554, metadata !DIExpression()), !dbg !11559
  call void @llvm.dbg.value(metadata i16 %3, metadata !11555, metadata !DIExpression()), !dbg !11559
  %7 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i32 0, i32 0, !dbg !11560
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %7) #23, !dbg !11560
  call void @llvm.dbg.declare(metadata [3 x i8]* %5, metadata !11556, metadata !DIExpression()), !dbg !11561
  %8 = getelementptr inbounds [1 x i8], [1 x i8]* %6, i32 0, i32 0, !dbg !11560
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %8) #23, !dbg !11560
  call void @llvm.dbg.declare(metadata [1 x i8]* %6, metadata !11557, metadata !DIExpression()), !dbg !11562
  %9 = trunc i16 %0 to i8, !dbg !11563
  %10 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i32 0, i32 1, !dbg !11564
  store i8 %9, i8* %10, align 1, !dbg !11565
  %11 = lshr i16 %0, 8, !dbg !11566
  %12 = trunc i16 %11 to i8, !dbg !11567
  %13 = or i8 %12, 64, !dbg !11567
  store i8 %13, i8* %7, align 1, !dbg !11568
  %14 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !11569
  call void @llvm.dbg.value(metadata i32 %14, metadata !11558, metadata !DIExpression()), !dbg !11559
  %15 = call zeroext i8 @Wrap_D2D_I2C_Read(i8* noundef nonnull %7, i8* noundef nonnull %8) #22, !dbg !11570
  %16 = zext i16 %1 to i32, !dbg !11571
  %17 = zext i16 %2 to i32, !dbg !11572
  %18 = shl i32 %16, %17, !dbg !11573
  %19 = load i8, i8* %8, align 1, !dbg !11574
  %20 = trunc i32 %18 to i8, !dbg !11574
  %21 = xor i8 %20, -1, !dbg !11574
  %22 = and i8 %19, %21, !dbg !11574
  store i8 %22, i8* %8, align 1, !dbg !11574
  %23 = zext i16 %3 to i32, !dbg !11575
  %24 = shl i32 %23, %17, !dbg !11576
  %25 = trunc i32 %24 to i8, !dbg !11577
  %26 = or i8 %22, %25, !dbg !11577
  %27 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i32 0, i32 2, !dbg !11578
  store i8 %26, i8* %27, align 1, !dbg !11579
  %28 = call zeroext i8 @Wrap_D2D_I2C_Write(i8* noundef nonnull %7) #22, !dbg !11580
  %29 = icmp eq i8 %28, 0, !dbg !11582
  call void @restore_interrupt_mask(i32 noundef %14) #21, !dbg !11583
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #23, !dbg !11584
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %7) #23, !dbg !11584
  ret i1 %29, !dbg !11584
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i8 @Wrap_D2D_I2C_Read(i8* noundef %0, i8* noundef %1) local_unnamed_addr #0 !dbg !11585 {
  %3 = alloca %struct.pmic_i2c_send_to_receive_config_t, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !11589, metadata !DIExpression()), !dbg !11602
  call void @llvm.dbg.value(metadata i8* %1, metadata !11590, metadata !DIExpression()), !dbg !11602
  %4 = getelementptr inbounds %struct.pmic_i2c_send_to_receive_config_t, %struct.pmic_i2c_send_to_receive_config_t* %3, i32 0, i32 0, !dbg !11603
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %4) #23, !dbg !11603
  call void @llvm.dbg.declare(metadata %struct.pmic_i2c_send_to_receive_config_t* %3, metadata !11591, metadata !DIExpression()), !dbg !11604
  call void @llvm.dbg.value(metadata i8 0, metadata !11600, metadata !DIExpression()), !dbg !11602
  %5 = load i8, i8* %0, align 1, !dbg !11605
  %6 = or i8 %5, 64, !dbg !11606
  store i8 %6, i8* %0, align 1, !dbg !11607
  store i8 107, i8* %4, align 4, !dbg !11608
  %7 = getelementptr inbounds %struct.pmic_i2c_send_to_receive_config_t, %struct.pmic_i2c_send_to_receive_config_t* %3, i32 0, i32 1, !dbg !11609
  store i8* %0, i8** %7, align 4, !dbg !11610
  %8 = getelementptr inbounds %struct.pmic_i2c_send_to_receive_config_t, %struct.pmic_i2c_send_to_receive_config_t* %3, i32 0, i32 2, !dbg !11611
  store i32 2, i32* %8, align 4, !dbg !11612
  %9 = getelementptr inbounds %struct.pmic_i2c_send_to_receive_config_t, %struct.pmic_i2c_send_to_receive_config_t* %3, i32 0, i32 3, !dbg !11613
  store i8* %1, i8** %9, align 4, !dbg !11614
  %10 = getelementptr inbounds %struct.pmic_i2c_send_to_receive_config_t, %struct.pmic_i2c_send_to_receive_config_t* %3, i32 0, i32 4, !dbg !11615
  store i32 1, i32* %10, align 4, !dbg !11616
  br label %11, !dbg !11617

11:                                               ; preds = %11, %2
  %12 = phi i8 [ 0, %2 ], [ %14, %11 ], !dbg !11602
  call void @llvm.dbg.value(metadata i8 %12, metadata !11600, metadata !DIExpression()), !dbg !11602
  %13 = call i32 @pmic_i2c_send_to_receive_polling(i32 noundef 0, %struct.pmic_i2c_send_to_receive_config_t* noundef nonnull %3) #21, !dbg !11618
  call void @llvm.dbg.value(metadata i32 %13, metadata !11601, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11602
  %14 = add nuw nsw i8 %12, 1, !dbg !11620
  call void @llvm.dbg.value(metadata i8 %14, metadata !11600, metadata !DIExpression()), !dbg !11602
  %15 = and i32 %13, 255, !dbg !11621
  %16 = icmp ne i32 %15, 0, !dbg !11622
  %17 = icmp ult i8 %12, 60, !dbg !11623
  %18 = select i1 %16, i1 %17, i1 false, !dbg !11623
  br i1 %18, label %11, label %19, !dbg !11624, !llvm.loop !11625

19:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8 %12, metadata !11600, metadata !DIExpression()), !dbg !11602
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %4) #23, !dbg !11627
  ret i8 %12, !dbg !11628
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i8 @Wrap_D2D_I2C_Write(i8* noundef %0) local_unnamed_addr #0 !dbg !11629 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11633, metadata !DIExpression()), !dbg !11636
  call void @llvm.dbg.value(metadata i8 0, metadata !11634, metadata !DIExpression()), !dbg !11636
  %2 = load i8, i8* %0, align 1, !dbg !11637
  %3 = or i8 %2, 64, !dbg !11638
  store i8 %3, i8* %0, align 1, !dbg !11639
  br label %4, !dbg !11640

4:                                                ; preds = %4, %1
  %5 = phi i8 [ 0, %1 ], [ %7, %4 ], !dbg !11636
  call void @llvm.dbg.value(metadata i8 %5, metadata !11634, metadata !DIExpression()), !dbg !11636
  %6 = tail call i32 @pmic_i2c_send_polling(i32 noundef 0, i8 noundef zeroext 107, i8* noundef nonnull %0, i32 noundef 3) #21, !dbg !11641
  call void @llvm.dbg.value(metadata i32 %6, metadata !11635, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11636
  %7 = add nuw nsw i8 %5, 1, !dbg !11643
  call void @llvm.dbg.value(metadata i8 %7, metadata !11634, metadata !DIExpression()), !dbg !11636
  %8 = and i32 %6, 255, !dbg !11644
  %9 = icmp ne i32 %8, 0, !dbg !11645
  %10 = icmp ult i8 %5, 60, !dbg !11646
  %11 = select i1 %9, i1 %10, i1 false, !dbg !11646
  br i1 %11, label %4, label %12, !dbg !11647, !llvm.loop !11648

12:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 %5, metadata !11634, metadata !DIExpression()), !dbg !11636
  ret i8 %5, !dbg !11650
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i8 @pmu_get_register_value_mt6385(i16 noundef zeroext %0, i16 noundef zeroext %1, i16 noundef zeroext %2) local_unnamed_addr #0 !dbg !11651 {
  %4 = alloca [2 x i8], align 1
  %5 = alloca [1 x i8], align 1
  call void @llvm.dbg.value(metadata i16 %0, metadata !11653, metadata !DIExpression()), !dbg !11660
  call void @llvm.dbg.value(metadata i16 %1, metadata !11654, metadata !DIExpression()), !dbg !11660
  call void @llvm.dbg.value(metadata i16 %2, metadata !11655, metadata !DIExpression()), !dbg !11660
  %6 = getelementptr inbounds [2 x i8], [2 x i8]* %4, i32 0, i32 0, !dbg !11661
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %6) #23, !dbg !11661
  call void @llvm.dbg.declare(metadata [2 x i8]* %4, metadata !11656, metadata !DIExpression()), !dbg !11662
  %7 = getelementptr inbounds [1 x i8], [1 x i8]* %5, i32 0, i32 0, !dbg !11661
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #23, !dbg !11661
  call void @llvm.dbg.declare(metadata [1 x i8]* %5, metadata !11658, metadata !DIExpression()), !dbg !11663
  %8 = trunc i16 %0 to i8, !dbg !11664
  %9 = getelementptr inbounds [2 x i8], [2 x i8]* %4, i32 0, i32 1, !dbg !11665
  store i8 %8, i8* %9, align 1, !dbg !11666
  %10 = lshr i16 %0, 8, !dbg !11667
  %11 = trunc i16 %10 to i8, !dbg !11668
  %12 = or i8 %11, 64, !dbg !11668
  store i8 %12, i8* %6, align 1, !dbg !11669
  %13 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !11670
  call void @llvm.dbg.value(metadata i32 %13, metadata !11659, metadata !DIExpression()), !dbg !11660
  %14 = call zeroext i8 @Wrap_D2D_I2C_Read(i8* noundef nonnull %6, i8* noundef nonnull %7) #22, !dbg !11671
  call void @restore_interrupt_mask(i32 noundef %13) #21, !dbg !11672
  %15 = load i8, i8* %7, align 1, !dbg !11673
  %16 = zext i8 %15 to i32, !dbg !11673
  %17 = zext i16 %2 to i32, !dbg !11674
  %18 = lshr i32 %16, %17, !dbg !11675
  %19 = zext i16 %1 to i32, !dbg !11676
  %20 = and i32 %18, %19, !dbg !11677
  %21 = trunc i32 %20 to i8, !dbg !11678
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #23, !dbg !11679
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %6) #23, !dbg !11679
  ret i8 %21, !dbg !11680
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pmu_register_callback(i32 noundef %0, i32 noundef %1, void (i8, i8*)* noundef %2, i8* noundef %3) local_unnamed_addr #0 !dbg !11681 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11689, metadata !DIExpression()), !dbg !11695
  call void @llvm.dbg.value(metadata i32 %1, metadata !11690, metadata !DIExpression()), !dbg !11695
  call void @llvm.dbg.value(metadata void (i8, i8*)* %2, metadata !11691, metadata !DIExpression()), !dbg !11695
  call void @llvm.dbg.value(metadata i8* %3, metadata !11692, metadata !DIExpression()), !dbg !11695
  call void @llvm.dbg.value(metadata i32 -1, metadata !11693, metadata !DIExpression()), !dbg !11695
  %5 = icmp ugt i32 %0, 31, !dbg !11696
  %6 = icmp eq void (i8, i8*)* %2, null
  %7 = or i1 %5, %6, !dbg !11698
  br i1 %7, label %16, label %8, !dbg !11698

8:                                                ; preds = %4
  %9 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !11699
  call void @llvm.dbg.value(metadata i32 %9, metadata !11694, metadata !DIExpression()), !dbg !11695
  %10 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %0, i32 0, !dbg !11700
  store void (i8, i8*)* %2, void (i8, i8*)** %10, align 4, !dbg !11701
  %11 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %0, i32 1, !dbg !11702
  store i8* %3, i8** %11, align 4, !dbg !11703
  %12 = trunc i32 %1 to i8, !dbg !11704
  %13 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %0, i32 2, !dbg !11705
  store i8 %12, i8* %13, align 4, !dbg !11706
  %14 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %0, i32 3, !dbg !11707
  store i8 1, i8* %14, align 1, !dbg !11708
  %15 = tail call i32 @pmu_enable_interrupt(i32 noundef %0, i32 noundef %1, i8 noundef zeroext 1) #22, !dbg !11709
  tail call void @restore_interrupt_mask(i32 noundef %9) #21, !dbg !11710
  call void @llvm.dbg.value(metadata i32 0, metadata !11693, metadata !DIExpression()), !dbg !11695
  br label %16, !dbg !11711

16:                                               ; preds = %4, %8
  %17 = phi i32 [ 0, %8 ], [ -2, %4 ], !dbg !11695
  ret i32 %17, !dbg !11712
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pmu_enable_interrupt(i32 noundef %0, i32 noundef %1, i8 noundef zeroext %2) local_unnamed_addr #0 !dbg !11713 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11717, metadata !DIExpression()), !dbg !11721
  call void @llvm.dbg.value(metadata i32 %1, metadata !11718, metadata !DIExpression()), !dbg !11721
  call void @llvm.dbg.value(metadata i8 %2, metadata !11719, metadata !DIExpression()), !dbg !11721
  call void @llvm.dbg.value(metadata i32 %0, metadata !11720, metadata !DIExpression()), !dbg !11721
  %4 = and i32 %0, 224, !dbg !11722
  %5 = icmp eq i32 %4, 0, !dbg !11724
  br i1 %5, label %6, label %275, !dbg !11725

6:                                                ; preds = %3
  %7 = trunc i32 %0 to i8, !dbg !11726
  switch i8 %7, label %275 [
    i8 0, label %8
    i8 1, label %20
    i8 2, label %32
    i8 3, label %44
    i8 4, label %56
    i8 5, label %68
    i8 6, label %80
    i8 7, label %92
    i8 8, label %104
    i8 9, label %116
    i8 10, label %128
    i8 11, label %140
    i8 12, label %152
    i8 13, label %164
    i8 14, label %176
    i8 15, label %188
    i8 16, label %200
    i8 17, label %212
    i8 18, label %224
    i8 19, label %236
    i8 20, label %239
    i8 21, label %242
    i8 22, label %245
    i8 23, label %248
    i8 24, label %251
    i8 25, label %254
    i8 26, label %257
    i8 27, label %260
    i8 28, label %263
    i8 29, label %266
    i8 30, label %269
    i8 31, label %272
  ], !dbg !11726

8:                                                ; preds = %6
  %9 = and i32 %1, 1, !dbg !11727
  %10 = icmp eq i32 %9, 0, !dbg !11730
  br i1 %10, label %14, label %11, !dbg !11731

11:                                               ; preds = %8
  %12 = zext i8 %2 to i16, !dbg !11732
  %13 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 37, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext %12) #21, !dbg !11734
  br label %14, !dbg !11735

14:                                               ; preds = %11, %8
  %15 = and i32 %1, 2, !dbg !11736
  %16 = icmp eq i32 %15, 0, !dbg !11738
  br i1 %16, label %275, label %17, !dbg !11739

17:                                               ; preds = %14
  %18 = zext i8 %2 to i16, !dbg !11740
  %19 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 37, i16 noundef zeroext 1, i16 noundef zeroext 1, i16 noundef zeroext %18) #21, !dbg !11742
  br label %275, !dbg !11743

20:                                               ; preds = %6
  %21 = and i32 %1, 1, !dbg !11744
  %22 = icmp eq i32 %21, 0, !dbg !11746
  br i1 %22, label %26, label %23, !dbg !11747

23:                                               ; preds = %20
  %24 = zext i8 %2 to i16, !dbg !11748
  %25 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 37, i16 noundef zeroext 1, i16 noundef zeroext 2, i16 noundef zeroext %24) #21, !dbg !11750
  br label %26, !dbg !11751

26:                                               ; preds = %23, %20
  %27 = and i32 %1, 2, !dbg !11752
  %28 = icmp eq i32 %27, 0, !dbg !11754
  br i1 %28, label %275, label %29, !dbg !11755

29:                                               ; preds = %26
  %30 = zext i8 %2 to i16, !dbg !11756
  %31 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 37, i16 noundef zeroext 1, i16 noundef zeroext 3, i16 noundef zeroext %30) #21, !dbg !11758
  br label %275, !dbg !11759

32:                                               ; preds = %6
  %33 = and i32 %1, 1, !dbg !11760
  %34 = icmp eq i32 %33, 0, !dbg !11762
  br i1 %34, label %38, label %35, !dbg !11763

35:                                               ; preds = %32
  %36 = zext i8 %2 to i16, !dbg !11764
  %37 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 37, i16 noundef zeroext 1, i16 noundef zeroext 4, i16 noundef zeroext %36) #21, !dbg !11766
  br label %38, !dbg !11767

38:                                               ; preds = %35, %32
  %39 = and i32 %1, 2, !dbg !11768
  %40 = icmp eq i32 %39, 0, !dbg !11770
  br i1 %40, label %275, label %41, !dbg !11771

41:                                               ; preds = %38
  %42 = zext i8 %2 to i16, !dbg !11772
  %43 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 37, i16 noundef zeroext 1, i16 noundef zeroext 5, i16 noundef zeroext %42) #21, !dbg !11774
  br label %275, !dbg !11775

44:                                               ; preds = %6
  %45 = and i32 %1, 1, !dbg !11776
  %46 = icmp eq i32 %45, 0, !dbg !11778
  br i1 %46, label %50, label %47, !dbg !11779

47:                                               ; preds = %44
  %48 = zext i8 %2 to i16, !dbg !11780
  %49 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 37, i16 noundef zeroext 1, i16 noundef zeroext 6, i16 noundef zeroext %48) #21, !dbg !11782
  br label %50, !dbg !11783

50:                                               ; preds = %47, %44
  %51 = and i32 %1, 2, !dbg !11784
  %52 = icmp eq i32 %51, 0, !dbg !11786
  br i1 %52, label %275, label %53, !dbg !11787

53:                                               ; preds = %50
  %54 = zext i8 %2 to i16, !dbg !11788
  %55 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 37, i16 noundef zeroext 1, i16 noundef zeroext 7, i16 noundef zeroext %54) #21, !dbg !11790
  br label %275, !dbg !11791

56:                                               ; preds = %6
  %57 = and i32 %1, 1, !dbg !11792
  %58 = icmp eq i32 %57, 0, !dbg !11794
  br i1 %58, label %62, label %59, !dbg !11795

59:                                               ; preds = %56
  %60 = zext i8 %2 to i16, !dbg !11796
  %61 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 38, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext %60) #21, !dbg !11798
  br label %62, !dbg !11799

62:                                               ; preds = %59, %56
  %63 = and i32 %1, 2, !dbg !11800
  %64 = icmp eq i32 %63, 0, !dbg !11802
  br i1 %64, label %275, label %65, !dbg !11803

65:                                               ; preds = %62
  %66 = zext i8 %2 to i16, !dbg !11804
  %67 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 38, i16 noundef zeroext 1, i16 noundef zeroext 1, i16 noundef zeroext %66) #21, !dbg !11806
  br label %275, !dbg !11807

68:                                               ; preds = %6
  %69 = and i32 %1, 1, !dbg !11808
  %70 = icmp eq i32 %69, 0, !dbg !11810
  br i1 %70, label %74, label %71, !dbg !11811

71:                                               ; preds = %68
  %72 = zext i8 %2 to i16, !dbg !11812
  %73 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 38, i16 noundef zeroext 1, i16 noundef zeroext 2, i16 noundef zeroext %72) #21, !dbg !11814
  br label %74, !dbg !11815

74:                                               ; preds = %71, %68
  %75 = and i32 %1, 2, !dbg !11816
  %76 = icmp eq i32 %75, 0, !dbg !11818
  br i1 %76, label %275, label %77, !dbg !11819

77:                                               ; preds = %74
  %78 = zext i8 %2 to i16, !dbg !11820
  %79 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 38, i16 noundef zeroext 1, i16 noundef zeroext 3, i16 noundef zeroext %78) #21, !dbg !11822
  br label %275, !dbg !11823

80:                                               ; preds = %6
  %81 = and i32 %1, 1, !dbg !11824
  %82 = icmp eq i32 %81, 0, !dbg !11826
  br i1 %82, label %86, label %83, !dbg !11827

83:                                               ; preds = %80
  %84 = zext i8 %2 to i16, !dbg !11828
  %85 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 38, i16 noundef zeroext 1, i16 noundef zeroext 4, i16 noundef zeroext %84) #21, !dbg !11830
  br label %86, !dbg !11831

86:                                               ; preds = %83, %80
  %87 = and i32 %1, 2, !dbg !11832
  %88 = icmp eq i32 %87, 0, !dbg !11834
  br i1 %88, label %275, label %89, !dbg !11835

89:                                               ; preds = %86
  %90 = zext i8 %2 to i16, !dbg !11836
  %91 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 38, i16 noundef zeroext 1, i16 noundef zeroext 5, i16 noundef zeroext %90) #21, !dbg !11838
  br label %275, !dbg !11839

92:                                               ; preds = %6
  %93 = and i32 %1, 1, !dbg !11840
  %94 = icmp eq i32 %93, 0, !dbg !11842
  br i1 %94, label %98, label %95, !dbg !11843

95:                                               ; preds = %92
  %96 = zext i8 %2 to i16, !dbg !11844
  %97 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 38, i16 noundef zeroext 1, i16 noundef zeroext 6, i16 noundef zeroext %96) #21, !dbg !11846
  br label %98, !dbg !11847

98:                                               ; preds = %95, %92
  %99 = and i32 %1, 2, !dbg !11848
  %100 = icmp eq i32 %99, 0, !dbg !11850
  br i1 %100, label %275, label %101, !dbg !11851

101:                                              ; preds = %98
  %102 = zext i8 %2 to i16, !dbg !11852
  %103 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 38, i16 noundef zeroext 1, i16 noundef zeroext 7, i16 noundef zeroext %102) #21, !dbg !11854
  br label %275, !dbg !11855

104:                                              ; preds = %6
  %105 = and i32 %1, 1, !dbg !11856
  %106 = icmp eq i32 %105, 0, !dbg !11858
  br i1 %106, label %110, label %107, !dbg !11859

107:                                              ; preds = %104
  %108 = zext i8 %2 to i16, !dbg !11860
  %109 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 39, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext %108) #21, !dbg !11862
  br label %110, !dbg !11863

110:                                              ; preds = %107, %104
  %111 = and i32 %1, 2, !dbg !11864
  %112 = icmp eq i32 %111, 0, !dbg !11866
  br i1 %112, label %275, label %113, !dbg !11867

113:                                              ; preds = %110
  %114 = zext i8 %2 to i16, !dbg !11868
  %115 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 39, i16 noundef zeroext 1, i16 noundef zeroext 1, i16 noundef zeroext %114) #21, !dbg !11870
  br label %275, !dbg !11871

116:                                              ; preds = %6
  %117 = and i32 %1, 1, !dbg !11872
  %118 = icmp eq i32 %117, 0, !dbg !11874
  br i1 %118, label %122, label %119, !dbg !11875

119:                                              ; preds = %116
  %120 = zext i8 %2 to i16, !dbg !11876
  %121 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 39, i16 noundef zeroext 1, i16 noundef zeroext 2, i16 noundef zeroext %120) #21, !dbg !11878
  br label %122, !dbg !11879

122:                                              ; preds = %119, %116
  %123 = and i32 %1, 2, !dbg !11880
  %124 = icmp eq i32 %123, 0, !dbg !11882
  br i1 %124, label %275, label %125, !dbg !11883

125:                                              ; preds = %122
  %126 = zext i8 %2 to i16, !dbg !11884
  %127 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 39, i16 noundef zeroext 1, i16 noundef zeroext 3, i16 noundef zeroext %126) #21, !dbg !11886
  br label %275, !dbg !11887

128:                                              ; preds = %6
  %129 = and i32 %1, 1, !dbg !11888
  %130 = icmp eq i32 %129, 0, !dbg !11890
  br i1 %130, label %134, label %131, !dbg !11891

131:                                              ; preds = %128
  %132 = zext i8 %2 to i16, !dbg !11892
  %133 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 39, i16 noundef zeroext 1, i16 noundef zeroext 4, i16 noundef zeroext %132) #21, !dbg !11894
  br label %134, !dbg !11895

134:                                              ; preds = %131, %128
  %135 = and i32 %1, 2, !dbg !11896
  %136 = icmp eq i32 %135, 0, !dbg !11898
  br i1 %136, label %275, label %137, !dbg !11899

137:                                              ; preds = %134
  %138 = zext i8 %2 to i16, !dbg !11900
  %139 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 39, i16 noundef zeroext 1, i16 noundef zeroext 5, i16 noundef zeroext %138) #21, !dbg !11902
  br label %275, !dbg !11903

140:                                              ; preds = %6
  %141 = and i32 %1, 1, !dbg !11904
  %142 = icmp eq i32 %141, 0, !dbg !11906
  br i1 %142, label %146, label %143, !dbg !11907

143:                                              ; preds = %140
  %144 = zext i8 %2 to i16, !dbg !11908
  %145 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 39, i16 noundef zeroext 1, i16 noundef zeroext 6, i16 noundef zeroext %144) #21, !dbg !11910
  br label %146, !dbg !11911

146:                                              ; preds = %143, %140
  %147 = and i32 %1, 2, !dbg !11912
  %148 = icmp eq i32 %147, 0, !dbg !11914
  br i1 %148, label %275, label %149, !dbg !11915

149:                                              ; preds = %146
  %150 = zext i8 %2 to i16, !dbg !11916
  %151 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 39, i16 noundef zeroext 1, i16 noundef zeroext 7, i16 noundef zeroext %150) #21, !dbg !11918
  br label %275, !dbg !11919

152:                                              ; preds = %6
  %153 = and i32 %1, 1, !dbg !11920
  %154 = icmp eq i32 %153, 0, !dbg !11922
  br i1 %154, label %158, label %155, !dbg !11923

155:                                              ; preds = %152
  %156 = zext i8 %2 to i16, !dbg !11924
  %157 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 40, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext %156) #21, !dbg !11926
  br label %158, !dbg !11927

158:                                              ; preds = %155, %152
  %159 = and i32 %1, 2, !dbg !11928
  %160 = icmp eq i32 %159, 0, !dbg !11930
  br i1 %160, label %275, label %161, !dbg !11931

161:                                              ; preds = %158
  %162 = zext i8 %2 to i16, !dbg !11932
  %163 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 40, i16 noundef zeroext 1, i16 noundef zeroext 1, i16 noundef zeroext %162) #21, !dbg !11934
  br label %275, !dbg !11935

164:                                              ; preds = %6
  %165 = and i32 %1, 1, !dbg !11936
  %166 = icmp eq i32 %165, 0, !dbg !11938
  br i1 %166, label %170, label %167, !dbg !11939

167:                                              ; preds = %164
  %168 = zext i8 %2 to i16, !dbg !11940
  %169 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 40, i16 noundef zeroext 1, i16 noundef zeroext 2, i16 noundef zeroext %168) #21, !dbg !11942
  br label %170, !dbg !11943

170:                                              ; preds = %167, %164
  %171 = and i32 %1, 2, !dbg !11944
  %172 = icmp eq i32 %171, 0, !dbg !11946
  br i1 %172, label %275, label %173, !dbg !11947

173:                                              ; preds = %170
  %174 = zext i8 %2 to i16, !dbg !11948
  %175 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 40, i16 noundef zeroext 1, i16 noundef zeroext 3, i16 noundef zeroext %174) #21, !dbg !11950
  br label %275, !dbg !11951

176:                                              ; preds = %6
  %177 = and i32 %1, 1, !dbg !11952
  %178 = icmp eq i32 %177, 0, !dbg !11954
  br i1 %178, label %182, label %179, !dbg !11955

179:                                              ; preds = %176
  %180 = zext i8 %2 to i16, !dbg !11956
  %181 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 40, i16 noundef zeroext 1, i16 noundef zeroext 4, i16 noundef zeroext %180) #21, !dbg !11958
  br label %182, !dbg !11959

182:                                              ; preds = %179, %176
  %183 = and i32 %1, 2, !dbg !11960
  %184 = icmp eq i32 %183, 0, !dbg !11962
  br i1 %184, label %275, label %185, !dbg !11963

185:                                              ; preds = %182
  %186 = zext i8 %2 to i16, !dbg !11964
  %187 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 40, i16 noundef zeroext 1, i16 noundef zeroext 5, i16 noundef zeroext %186) #21, !dbg !11966
  br label %275, !dbg !11967

188:                                              ; preds = %6
  %189 = and i32 %1, 1, !dbg !11968
  %190 = icmp eq i32 %189, 0, !dbg !11970
  br i1 %190, label %194, label %191, !dbg !11971

191:                                              ; preds = %188
  %192 = zext i8 %2 to i16, !dbg !11972
  %193 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 40, i16 noundef zeroext 1, i16 noundef zeroext 6, i16 noundef zeroext %192) #21, !dbg !11974
  br label %194, !dbg !11975

194:                                              ; preds = %191, %188
  %195 = and i32 %1, 2, !dbg !11976
  %196 = icmp eq i32 %195, 0, !dbg !11978
  br i1 %196, label %275, label %197, !dbg !11979

197:                                              ; preds = %194
  %198 = zext i8 %2 to i16, !dbg !11980
  %199 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 40, i16 noundef zeroext 1, i16 noundef zeroext 7, i16 noundef zeroext %198) #21, !dbg !11982
  br label %275, !dbg !11983

200:                                              ; preds = %6
  %201 = and i32 %1, 1, !dbg !11984
  %202 = icmp eq i32 %201, 0, !dbg !11986
  br i1 %202, label %206, label %203, !dbg !11987

203:                                              ; preds = %200
  %204 = zext i8 %2 to i16, !dbg !11988
  %205 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 41, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext %204) #21, !dbg !11990
  br label %206, !dbg !11991

206:                                              ; preds = %203, %200
  %207 = and i32 %1, 2, !dbg !11992
  %208 = icmp eq i32 %207, 0, !dbg !11994
  br i1 %208, label %275, label %209, !dbg !11995

209:                                              ; preds = %206
  %210 = zext i8 %2 to i16, !dbg !11996
  %211 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 41, i16 noundef zeroext 1, i16 noundef zeroext 1, i16 noundef zeroext %210) #21, !dbg !11998
  br label %275, !dbg !11999

212:                                              ; preds = %6
  %213 = and i32 %1, 1, !dbg !12000
  %214 = icmp eq i32 %213, 0, !dbg !12002
  br i1 %214, label %218, label %215, !dbg !12003

215:                                              ; preds = %212
  %216 = zext i8 %2 to i16, !dbg !12004
  %217 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 41, i16 noundef zeroext 1, i16 noundef zeroext 2, i16 noundef zeroext %216) #21, !dbg !12006
  br label %218, !dbg !12007

218:                                              ; preds = %215, %212
  %219 = and i32 %1, 2, !dbg !12008
  %220 = icmp eq i32 %219, 0, !dbg !12010
  br i1 %220, label %275, label %221, !dbg !12011

221:                                              ; preds = %218
  %222 = zext i8 %2 to i16, !dbg !12012
  %223 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 41, i16 noundef zeroext 1, i16 noundef zeroext 3, i16 noundef zeroext %222) #21, !dbg !12014
  br label %275, !dbg !12015

224:                                              ; preds = %6
  %225 = and i32 %1, 1, !dbg !12016
  %226 = icmp eq i32 %225, 0, !dbg !12018
  br i1 %226, label %230, label %227, !dbg !12019

227:                                              ; preds = %224
  %228 = zext i8 %2 to i16, !dbg !12020
  %229 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 41, i16 noundef zeroext 1, i16 noundef zeroext 4, i16 noundef zeroext %228) #21, !dbg !12022
  br label %230, !dbg !12023

230:                                              ; preds = %227, %224
  %231 = and i32 %1, 2, !dbg !12024
  %232 = icmp eq i32 %231, 0, !dbg !12026
  br i1 %232, label %275, label %233, !dbg !12027

233:                                              ; preds = %230
  %234 = zext i8 %2 to i16, !dbg !12028
  %235 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 41, i16 noundef zeroext 1, i16 noundef zeroext 5, i16 noundef zeroext %234) #21, !dbg !12030
  br label %275, !dbg !12031

236:                                              ; preds = %6
  %237 = zext i8 %2 to i16, !dbg !12032
  %238 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 42, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext %237) #21, !dbg !12033
  br label %275, !dbg !12034

239:                                              ; preds = %6
  %240 = zext i8 %2 to i16, !dbg !12035
  %241 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 42, i16 noundef zeroext 1, i16 noundef zeroext 1, i16 noundef zeroext %240) #21, !dbg !12036
  br label %275, !dbg !12037

242:                                              ; preds = %6
  %243 = zext i8 %2 to i16, !dbg !12038
  %244 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 42, i16 noundef zeroext 1, i16 noundef zeroext 2, i16 noundef zeroext %243) #21, !dbg !12039
  br label %275, !dbg !12040

245:                                              ; preds = %6
  %246 = zext i8 %2 to i16, !dbg !12041
  %247 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 42, i16 noundef zeroext 1, i16 noundef zeroext 3, i16 noundef zeroext %246) #21, !dbg !12042
  br label %275, !dbg !12043

248:                                              ; preds = %6
  %249 = zext i8 %2 to i16, !dbg !12044
  %250 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 42, i16 noundef zeroext 1, i16 noundef zeroext 4, i16 noundef zeroext %249) #21, !dbg !12045
  br label %275, !dbg !12046

251:                                              ; preds = %6
  %252 = zext i8 %2 to i16, !dbg !12047
  %253 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 42, i16 noundef zeroext 1, i16 noundef zeroext 5, i16 noundef zeroext %252) #21, !dbg !12048
  br label %275, !dbg !12049

254:                                              ; preds = %6
  %255 = zext i8 %2 to i16, !dbg !12050
  %256 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 42, i16 noundef zeroext 1, i16 noundef zeroext 6, i16 noundef zeroext %255) #21, !dbg !12051
  br label %275, !dbg !12052

257:                                              ; preds = %6
  %258 = zext i8 %2 to i16, !dbg !12053
  %259 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 42, i16 noundef zeroext 1, i16 noundef zeroext 7, i16 noundef zeroext %258) #21, !dbg !12054
  br label %275, !dbg !12055

260:                                              ; preds = %6
  %261 = zext i8 %2 to i16, !dbg !12056
  %262 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 43, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext %261) #21, !dbg !12057
  br label %275, !dbg !12058

263:                                              ; preds = %6
  %264 = zext i8 %2 to i16, !dbg !12059
  %265 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 43, i16 noundef zeroext 1, i16 noundef zeroext 1, i16 noundef zeroext %264) #21, !dbg !12060
  br label %275, !dbg !12061

266:                                              ; preds = %6
  %267 = zext i8 %2 to i16, !dbg !12062
  %268 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 43, i16 noundef zeroext 1, i16 noundef zeroext 2, i16 noundef zeroext %267) #21, !dbg !12063
  br label %275, !dbg !12064

269:                                              ; preds = %6
  %270 = zext i8 %2 to i16, !dbg !12065
  %271 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 43, i16 noundef zeroext 1, i16 noundef zeroext 3, i16 noundef zeroext %270) #21, !dbg !12066
  br label %275, !dbg !12067

272:                                              ; preds = %6
  %273 = zext i8 %2 to i16, !dbg !12068
  %274 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 43, i16 noundef zeroext 1, i16 noundef zeroext 4, i16 noundef zeroext %273) #21, !dbg !12069
  br label %275, !dbg !12070

275:                                              ; preds = %236, %239, %242, %245, %248, %251, %254, %257, %260, %263, %266, %269, %272, %6, %17, %14, %29, %26, %41, %38, %53, %50, %65, %62, %77, %74, %89, %86, %101, %98, %113, %110, %125, %122, %137, %134, %149, %146, %161, %158, %173, %170, %185, %182, %197, %194, %209, %206, %221, %218, %233, %230, %3
  %276 = phi i32 [ -1, %3 ], [ 0, %230 ], [ 0, %233 ], [ 0, %218 ], [ 0, %221 ], [ 0, %206 ], [ 0, %209 ], [ 0, %194 ], [ 0, %197 ], [ 0, %182 ], [ 0, %185 ], [ 0, %170 ], [ 0, %173 ], [ 0, %158 ], [ 0, %161 ], [ 0, %146 ], [ 0, %149 ], [ 0, %134 ], [ 0, %137 ], [ 0, %122 ], [ 0, %125 ], [ 0, %110 ], [ 0, %113 ], [ 0, %98 ], [ 0, %101 ], [ 0, %86 ], [ 0, %89 ], [ 0, %74 ], [ 0, %77 ], [ 0, %62 ], [ 0, %65 ], [ 0, %50 ], [ 0, %53 ], [ 0, %38 ], [ 0, %41 ], [ 0, %26 ], [ 0, %29 ], [ 0, %14 ], [ 0, %17 ], [ 0, %6 ], [ 0, %272 ], [ 0, %269 ], [ 0, %266 ], [ 0, %263 ], [ 0, %260 ], [ 0, %257 ], [ 0, %254 ], [ 0, %251 ], [ 0, %248 ], [ 0, %245 ], [ 0, %242 ], [ 0, %239 ], [ 0, %236 ], !dbg !11721
  ret i32 %276, !dbg !12071
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pmu_disable_interrupt(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !12072 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12076, metadata !DIExpression()), !dbg !12080
  call void @llvm.dbg.value(metadata i32 %1, metadata !12077, metadata !DIExpression()), !dbg !12080
  call void @llvm.dbg.value(metadata i32 -1, metadata !12078, metadata !DIExpression()), !dbg !12080
  %3 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !12081
  call void @llvm.dbg.value(metadata i32 %3, metadata !12079, metadata !DIExpression()), !dbg !12080
  %4 = tail call i32 @pmu_enable_interrupt(i32 noundef %0, i32 noundef %1, i8 noundef zeroext 0) #22, !dbg !12082
  %5 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %0, i32 3, !dbg !12083
  store i8 1, i8* %5, align 1, !dbg !12084
  tail call void @restore_interrupt_mask(i32 noundef %3) #21, !dbg !12085
  call void @llvm.dbg.value(metadata i32 0, metadata !12078, metadata !DIExpression()), !dbg !12080
  ret i32 0, !dbg !12086
}

; Function Attrs: noinline nounwind optsize
define dso_local void @pmu_init() local_unnamed_addr #0 !dbg !12087 {
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.pmu_init, i32 0, i32 0), i32 noundef 98, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.173, i32 0, i32 0)) #21, !dbg !12088
  tail call void @pmu_init_mt6385() #21, !dbg !12089
  ret void, !dbg !12090
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @pmu_set_register_value(i16 noundef zeroext %0, i16 noundef zeroext %1, i16 noundef zeroext %2, i16 noundef zeroext %3) local_unnamed_addr #0 !dbg !12091 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !12093, metadata !DIExpression()), !dbg !12097
  call void @llvm.dbg.value(metadata i16 %1, metadata !12094, metadata !DIExpression()), !dbg !12097
  call void @llvm.dbg.value(metadata i16 %2, metadata !12095, metadata !DIExpression()), !dbg !12097
  call void @llvm.dbg.value(metadata i16 %3, metadata !12096, metadata !DIExpression()), !dbg !12097
  %5 = tail call zeroext i1 @pmu_set_register_value_mt6385(i16 noundef zeroext %0, i16 noundef zeroext %1, i16 noundef zeroext %2, i16 noundef zeroext %3) #21, !dbg !12098
  ret i1 %5, !dbg !12099
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i8 @pmu_get_register_value(i16 noundef zeroext %0, i16 noundef zeroext %1, i16 noundef zeroext %2) local_unnamed_addr #0 !dbg !12100 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !12102, metadata !DIExpression()), !dbg !12105
  call void @llvm.dbg.value(metadata i16 %1, metadata !12103, metadata !DIExpression()), !dbg !12105
  call void @llvm.dbg.value(metadata i16 %2, metadata !12104, metadata !DIExpression()), !dbg !12105
  %4 = tail call zeroext i8 @pmu_get_register_value_mt6385(i16 noundef zeroext %0, i16 noundef zeroext %1, i16 noundef zeroext %2) #21, !dbg !12106
  ret i8 %4, !dbg !12107
}

; Function Attrs: noinline nounwind optsize
define dso_local void @pmu_control_mtcmos() local_unnamed_addr #0 !dbg !12108 {
  tail call void @pmu_control_mtcmos_mt6385() #21, !dbg !12109
  ret void, !dbg !12110
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i8 @pmu_get_vcore_voltage() local_unnamed_addr #0 !dbg !12111 {
  %1 = tail call zeroext i8 @pmu_get_vcore_voltage_mt6385() #21, !dbg !12112
  ret i8 %1, !dbg !12113
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i8 @pmu_set_vcore_voltage(i8 noundef zeroext %0, i8 noundef zeroext %1) local_unnamed_addr #0 !dbg !12114 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !12116, metadata !DIExpression()), !dbg !12118
  call void @llvm.dbg.value(metadata i8 %1, metadata !12117, metadata !DIExpression()), !dbg !12118
  %3 = tail call zeroext i8 @pmu_set_vcore_voltage_mt6385(i8 noundef zeroext %0, i8 noundef zeroext %1) #21, !dbg !12119
  ret i8 %3, !dbg !12120
}

; Function Attrs: noinline nounwind optsize
define dso_local void @pmu_set_vcore_s1_buck() local_unnamed_addr #0 !dbg !12121 {
  tail call void @pmu_set_vcore_s1_buck_mt6385() #21, !dbg !12122
  ret void, !dbg !12123
}

; Function Attrs: noinline nounwind optsize
define dso_local void @pmu_ctrl_driver_power(i8 noundef zeroext %0, i8 noundef zeroext %1) local_unnamed_addr #0 !dbg !12124 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !12126, metadata !DIExpression()), !dbg !12128
  call void @llvm.dbg.value(metadata i8 %1, metadata !12127, metadata !DIExpression()), !dbg !12128
  tail call fastcc void @internal_pmu_ctrl_power(i8 noundef zeroext %0, i8 noundef zeroext %1) #22, !dbg !12129
  ret void, !dbg !12130
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @internal_pmu_ctrl_power(i8 noundef zeroext %0, i8 noundef zeroext %1) unnamed_addr #0 !dbg !12131 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !12133, metadata !DIExpression()), !dbg !12135
  call void @llvm.dbg.value(metadata i8 %1, metadata !12134, metadata !DIExpression()), !dbg !12135
  switch i8 %0, label %14 [
    i8 1, label %3
    i8 2, label %4
    i8 3, label %5
    i8 4, label %7
    i8 5, label %9
    i8 7, label %11
    i8 8, label %12
    i8 9, label %13
  ], !dbg !12136

3:                                                ; preds = %2
  tail call void @pmu_ctrl_vbt_ldo_mt6385(i8 noundef zeroext %1) #21, !dbg !12137
  br label %15, !dbg !12139

4:                                                ; preds = %2
  tail call void @pmu_ctrl_va28_ldo_mt6385(i8 noundef zeroext %1) #21, !dbg !12140
  br label %15, !dbg !12141

5:                                                ; preds = %2
  %6 = zext i8 %1 to i32, !dbg !12142
  tail call void @PMIC_VR_CONTROL(i32 noundef 6, i32 noundef %6) #21, !dbg !12143
  br label %15, !dbg !12144

7:                                                ; preds = %2
  %8 = zext i8 %1 to i32, !dbg !12145
  tail call void @PMIC_VR_CONTROL(i32 noundef 10, i32 noundef %8) #21, !dbg !12146
  br label %15, !dbg !12147

9:                                                ; preds = %2
  %10 = zext i8 %1 to i32, !dbg !12148
  tail call void @PMIC_VR_CONTROL(i32 noundef 9, i32 noundef %10) #21, !dbg !12149
  br label %15, !dbg !12150

11:                                               ; preds = %2
  tail call void @pmu_ctrl_va28_ldo_mt6385(i8 noundef zeroext %1) #21, !dbg !12151
  br label %15, !dbg !12152

12:                                               ; preds = %2
  tail call void @pmu_ctrl_va28_ldo_mt6385(i8 noundef zeroext %1) #21, !dbg !12153
  br label %15, !dbg !12154

13:                                               ; preds = %2
  tail call void @pmu_ctrl_va28_ldo_mt6385(i8 noundef zeroext %1) #21, !dbg !12155
  br label %15, !dbg !12156

14:                                               ; preds = %2
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__FUNCTION__.internal_pmu_ctrl_power, i32 0, i32 0), i32 noundef 225, i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.1.180, i32 0, i32 0)) #21, !dbg !12157
  br label %15, !dbg !12158

15:                                               ; preds = %14, %13, %12, %11, %9, %7, %5, %4, %3
  ret void, !dbg !12159
}

; Function Attrs: noinline nounwind optsize
define dso_local void @pmu_audio_lock_voltage() local_unnamed_addr #0 !dbg !12160 {
  tail call fastcc void @internal_pmu_audio_lock_voltage() #22, !dbg !12161
  ret void, !dbg !12162
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @internal_pmu_audio_lock_voltage() unnamed_addr #0 !dbg !12163 {
  tail call void @PMIC_VCORE_VOSEL_CONFIG(i32 noundef 2, i32 noundef 4) #21, !dbg !12164
  tail call void @PMIC_VCORE_VOSEL_CONFIG(i32 noundef 4, i32 noundef 2) #21, !dbg !12165
  ret void, !dbg !12166
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @pmu_audio_unlock_voltage() local_unnamed_addr #9 !dbg !12167 {
  ret void, !dbg !12168
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i8 @pmu_get_usb_input_status() local_unnamed_addr #0 !dbg !12169 {
  %1 = tail call zeroext i8 @pmu_get_usb_input_status_mt6385() #21, !dbg !12170
  ret i8 %1, !dbg !12171
}

; Function Attrs: noinline nounwind optsize
define dso_local void @pmu_enter_power_off() local_unnamed_addr #0 !dbg !12172 {
  tail call void @pmu_enter_power_off_mt6385() #21, !dbg !12173
  ret void, !dbg !12174
}

; Function Attrs: noinline nounwind optsize
define dso_local void @pmu_reset() local_unnamed_addr #0 !dbg !12175 {
  tail call void @pmu_reset_mt6385() #21, !dbg !12176
  ret void, !dbg !12177
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @pmu_get_type() local_unnamed_addr #9 !dbg !12178 {
  ret i32 1, !dbg !12181
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i1 @null_pmu_set_register_value(i16 noundef zeroext %0, i16 noundef zeroext %1, i16 noundef zeroext %2, i16 noundef zeroext %3) local_unnamed_addr #9 !dbg !12182 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !12184, metadata !DIExpression()), !dbg !12188
  call void @llvm.dbg.value(metadata i16 %1, metadata !12185, metadata !DIExpression()), !dbg !12188
  call void @llvm.dbg.value(metadata i16 %2, metadata !12186, metadata !DIExpression()), !dbg !12188
  call void @llvm.dbg.value(metadata i16 %3, metadata !12187, metadata !DIExpression()), !dbg !12188
  ret i1 true, !dbg !12189
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i8 @null_pmu_get_register_value(i16 noundef zeroext %0, i16 noundef zeroext %1, i16 noundef zeroext %2) local_unnamed_addr #9 !dbg !12190 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !12192, metadata !DIExpression()), !dbg !12195
  call void @llvm.dbg.value(metadata i16 %1, metadata !12193, metadata !DIExpression()), !dbg !12195
  call void @llvm.dbg.value(metadata i16 %2, metadata !12194, metadata !DIExpression()), !dbg !12195
  ret i8 0, !dbg !12196
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @null_function() local_unnamed_addr #9 !dbg !12197 {
  ret void, !dbg !12198
}

; Function Attrs: noinline nounwind optsize
define dso_local void @log_hal_error_internal(i8* nocapture noundef readnone %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #0 !dbg !12199 {
  %4 = alloca %struct.__va_list, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !12203, metadata !DIExpression()), !dbg !12216
  call void @llvm.dbg.value(metadata i32 %1, metadata !12204, metadata !DIExpression()), !dbg !12216
  call void @llvm.dbg.value(metadata i8* %2, metadata !12205, metadata !DIExpression()), !dbg !12216
  %6 = bitcast %struct.__va_list* %4 to i8*, !dbg !12217
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #23, !dbg !12217
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !12206, metadata !DIExpression()), !dbg !12218
  %7 = bitcast i32* %5 to i8*, !dbg !12219
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #23, !dbg !12219
  call void @llvm.dbg.value(metadata i32* %5, metadata !12215, metadata !DIExpression(DW_OP_deref)), !dbg !12216
  %8 = call i32 @hal_nvic_save_and_set_interrupt_mask(i32* noundef nonnull %5) #21, !dbg !12220
  call void @llvm.va_start(i8* nonnull %6), !dbg !12221
  %9 = bitcast %struct.__va_list* %4 to i32*, !dbg !12222
  %10 = load i32, i32* %9, align 4, !dbg !12222
  %11 = insertvalue [1 x i32] poison, i32 %10, 0, !dbg !12222
  %12 = call i32 @vprintf(i8* noundef %2, [1 x i32] %11) #21, !dbg !12222
  call void @llvm.va_end(i8* nonnull %6), !dbg !12223
  %13 = load i32, i32* %5, align 4, !dbg !12224
  call void @llvm.dbg.value(metadata i32 %13, metadata !12215, metadata !DIExpression()), !dbg !12216
  %14 = call i32 @hal_nvic_restore_interrupt_mask(i32 noundef %13) #21, !dbg !12225
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #23, !dbg !12226
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #23, !dbg !12226
  ret void, !dbg !12226
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #18

; Function Attrs: optsize
declare dso_local i32 @vprintf(i8* noundef, [1 x i32]) local_unnamed_addr #2

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #18

; Function Attrs: noinline nounwind optsize
define dso_local void @log_hal_warning_internal(i8* nocapture noundef readnone %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #0 !dbg !12227 {
  %4 = alloca %struct.__va_list, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !12229, metadata !DIExpression()), !dbg !12234
  call void @llvm.dbg.value(metadata i32 %1, metadata !12230, metadata !DIExpression()), !dbg !12234
  call void @llvm.dbg.value(metadata i8* %2, metadata !12231, metadata !DIExpression()), !dbg !12234
  %6 = bitcast %struct.__va_list* %4 to i8*, !dbg !12235
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #23, !dbg !12235
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !12232, metadata !DIExpression()), !dbg !12236
  %7 = bitcast i32* %5 to i8*, !dbg !12237
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #23, !dbg !12237
  call void @llvm.dbg.value(metadata i32* %5, metadata !12233, metadata !DIExpression(DW_OP_deref)), !dbg !12234
  %8 = call i32 @hal_nvic_save_and_set_interrupt_mask(i32* noundef nonnull %5) #21, !dbg !12238
  call void @llvm.va_start(i8* nonnull %6), !dbg !12239
  %9 = bitcast %struct.__va_list* %4 to i32*, !dbg !12240
  %10 = load i32, i32* %9, align 4, !dbg !12240
  %11 = insertvalue [1 x i32] poison, i32 %10, 0, !dbg !12240
  %12 = call i32 @vprintf(i8* noundef %2, [1 x i32] %11) #21, !dbg !12240
  call void @llvm.va_end(i8* nonnull %6), !dbg !12241
  %13 = load i32, i32* %5, align 4, !dbg !12242
  call void @llvm.dbg.value(metadata i32 %13, metadata !12233, metadata !DIExpression()), !dbg !12234
  %14 = call i32 @hal_nvic_restore_interrupt_mask(i32 noundef %13) #21, !dbg !12243
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #23, !dbg !12244
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #23, !dbg !12244
  ret void, !dbg !12244
}

; Function Attrs: noinline nounwind optsize
define dso_local void @log_hal_info_internal(i8* nocapture noundef readnone %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #0 !dbg !12245 {
  %4 = alloca %struct.__va_list, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !12247, metadata !DIExpression()), !dbg !12252
  call void @llvm.dbg.value(metadata i32 %1, metadata !12248, metadata !DIExpression()), !dbg !12252
  call void @llvm.dbg.value(metadata i8* %2, metadata !12249, metadata !DIExpression()), !dbg !12252
  %6 = bitcast %struct.__va_list* %4 to i8*, !dbg !12253
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #23, !dbg !12253
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !12250, metadata !DIExpression()), !dbg !12254
  %7 = bitcast i32* %5 to i8*, !dbg !12255
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #23, !dbg !12255
  call void @llvm.dbg.value(metadata i32* %5, metadata !12251, metadata !DIExpression(DW_OP_deref)), !dbg !12252
  %8 = call i32 @hal_nvic_save_and_set_interrupt_mask(i32* noundef nonnull %5) #21, !dbg !12256
  call void @llvm.va_start(i8* nonnull %6), !dbg !12257
  %9 = bitcast %struct.__va_list* %4 to i32*, !dbg !12258
  %10 = load i32, i32* %9, align 4, !dbg !12258
  %11 = insertvalue [1 x i32] poison, i32 %10, 0, !dbg !12258
  %12 = call i32 @vprintf(i8* noundef %2, [1 x i32] %11) #21, !dbg !12258
  call void @llvm.va_end(i8* nonnull %6), !dbg !12259
  %13 = load i32, i32* %5, align 4, !dbg !12260
  call void @llvm.dbg.value(metadata i32 %13, metadata !12251, metadata !DIExpression()), !dbg !12252
  %14 = call i32 @hal_nvic_restore_interrupt_mask(i32 noundef %13) #21, !dbg !12261
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #23, !dbg !12262
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #23, !dbg !12262
  ret void, !dbg !12262
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @log_hal_dump_internal(i8* nocapture noundef %0, i32 noundef %1, i8* nocapture noundef %2, i8* nocapture noundef %3, i32 noundef %4, ...) local_unnamed_addr #9 !dbg !12263 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12269, metadata !DIExpression()), !dbg !12274
  call void @llvm.dbg.value(metadata i32 %1, metadata !12270, metadata !DIExpression()), !dbg !12274
  call void @llvm.dbg.value(metadata i8* %2, metadata !12271, metadata !DIExpression()), !dbg !12274
  call void @llvm.dbg.value(metadata i8* %3, metadata !12272, metadata !DIExpression()), !dbg !12274
  call void @llvm.dbg.value(metadata i32 %4, metadata !12273, metadata !DIExpression()), !dbg !12274
  ret void, !dbg !12275
}

; Function Attrs: noinline nounwind optsize
define dso_local void @PMIC_VR_PSI_PMOD_CONFIG(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !12276 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12281, metadata !DIExpression()), !dbg !12285
  call void @llvm.dbg.value(metadata i32 %1, metadata !12282, metadata !DIExpression()), !dbg !12285
  call void @llvm.dbg.value(metadata i32 %2, metadata !12283, metadata !DIExpression()), !dbg !12285
  tail call void @pmu_set_vrc_key_mt6385(i32 noundef 0) #22, !dbg !12286
  tail call void @pmu_set_ovr_mode_mt6385(i32 noundef 1) #22, !dbg !12287
  switch i32 %0, label %240 [
    i32 0, label %4
    i32 1, label %21
    i32 2, label %38
    i32 3, label %55
    i32 4, label %120
    i32 5, label %146
    i32 6, label %166
    i32 7, label %183
    i32 8, label %200
    i32 9, label %217
    i32 10, label %234
    i32 11, label %237
  ], !dbg !12288

4:                                                ; preds = %3
  switch i32 %1, label %20 [
    i32 0, label %5
    i32 1, label %8
    i32 2, label %11
    i32 3, label %14
    i32 4, label %17
  ], !dbg !12289

5:                                                ; preds = %4
  %6 = trunc i32 %2 to i16, !dbg !12291
  %7 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 230, i16 noundef zeroext 3, i16 noundef zeroext 2, i16 noundef zeroext %6) #21, !dbg !12293
  br label %241, !dbg !12294

8:                                                ; preds = %4
  %9 = trunc i32 %2 to i16, !dbg !12295
  %10 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 259, i16 noundef zeroext 3, i16 noundef zeroext 1, i16 noundef zeroext %9) #21, !dbg !12296
  br label %241, !dbg !12297

11:                                               ; preds = %4
  %12 = trunc i32 %2 to i16, !dbg !12298
  %13 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 261, i16 noundef zeroext 3, i16 noundef zeroext 1, i16 noundef zeroext %12) #21, !dbg !12299
  br label %241, !dbg !12300

14:                                               ; preds = %4
  %15 = trunc i32 %2 to i16, !dbg !12301
  %16 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 263, i16 noundef zeroext 3, i16 noundef zeroext 1, i16 noundef zeroext %15) #21, !dbg !12302
  br label %241, !dbg !12303

17:                                               ; preds = %4
  %18 = trunc i32 %2 to i16, !dbg !12304
  %19 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 264, i16 noundef zeroext 3, i16 noundef zeroext 1, i16 noundef zeroext %18) #21, !dbg !12305
  br label %241, !dbg !12306

20:                                               ; preds = %4
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__FUNCTION__.PMIC_VR_PSI_PMOD_CONFIG, i32 0, i32 0), i32 noundef 85, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.191, i32 0, i32 0)) #21, !dbg !12307
  br label %241, !dbg !12308

21:                                               ; preds = %3
  switch i32 %1, label %37 [
    i32 0, label %22
    i32 1, label %25
    i32 2, label %28
    i32 3, label %31
    i32 4, label %34
  ], !dbg !12309

22:                                               ; preds = %21
  %23 = trunc i32 %2 to i16, !dbg !12310
  %24 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 233, i16 noundef zeroext 3, i16 noundef zeroext 2, i16 noundef zeroext %23) #21, !dbg !12312
  br label %241, !dbg !12313

25:                                               ; preds = %21
  %26 = trunc i32 %2 to i16, !dbg !12314
  %27 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 272, i16 noundef zeroext 3, i16 noundef zeroext 1, i16 noundef zeroext %26) #21, !dbg !12315
  br label %241, !dbg !12316

28:                                               ; preds = %21
  %29 = trunc i32 %2 to i16, !dbg !12317
  %30 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 272, i16 noundef zeroext 3, i16 noundef zeroext 5, i16 noundef zeroext %29) #21, !dbg !12318
  br label %241, !dbg !12319

31:                                               ; preds = %21
  %32 = trunc i32 %2 to i16, !dbg !12320
  %33 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 273, i16 noundef zeroext 3, i16 noundef zeroext 1, i16 noundef zeroext %32) #21, !dbg !12321
  br label %241, !dbg !12322

34:                                               ; preds = %21
  %35 = trunc i32 %2 to i16, !dbg !12323
  %36 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 273, i16 noundef zeroext 3, i16 noundef zeroext 5, i16 noundef zeroext %35) #21, !dbg !12324
  br label %241, !dbg !12325

37:                                               ; preds = %21
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__FUNCTION__.PMIC_VR_PSI_PMOD_CONFIG, i32 0, i32 0), i32 noundef 108, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.191, i32 0, i32 0)) #21, !dbg !12326
  br label %241, !dbg !12327

38:                                               ; preds = %3
  switch i32 %1, label %54 [
    i32 0, label %39
    i32 1, label %42
    i32 2, label %45
    i32 3, label %48
    i32 4, label %51
  ], !dbg !12328

39:                                               ; preds = %38
  %40 = trunc i32 %2 to i16, !dbg !12329
  %41 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 234, i16 noundef zeroext 3, i16 noundef zeroext 2, i16 noundef zeroext %40) #21, !dbg !12331
  br label %241, !dbg !12332

42:                                               ; preds = %38
  %43 = trunc i32 %2 to i16, !dbg !12333
  %44 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 281, i16 noundef zeroext 3, i16 noundef zeroext 1, i16 noundef zeroext %43) #21, !dbg !12334
  br label %241, !dbg !12335

45:                                               ; preds = %38
  %46 = trunc i32 %2 to i16, !dbg !12336
  %47 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 281, i16 noundef zeroext 3, i16 noundef zeroext 5, i16 noundef zeroext %46) #21, !dbg !12337
  br label %241, !dbg !12338

48:                                               ; preds = %38
  %49 = trunc i32 %2 to i16, !dbg !12339
  %50 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 282, i16 noundef zeroext 3, i16 noundef zeroext 1, i16 noundef zeroext %49) #21, !dbg !12340
  br label %241, !dbg !12341

51:                                               ; preds = %38
  %52 = trunc i32 %2 to i16, !dbg !12342
  %53 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 282, i16 noundef zeroext 3, i16 noundef zeroext 5, i16 noundef zeroext %52) #21, !dbg !12343
  br label %241, !dbg !12344

54:                                               ; preds = %38
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__FUNCTION__.PMIC_VR_PSI_PMOD_CONFIG, i32 0, i32 0), i32 noundef 131, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.191, i32 0, i32 0)) #21, !dbg !12345
  br label %241, !dbg !12346

55:                                               ; preds = %3
  %56 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 88, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 41) #21, !dbg !12347
  %57 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 89, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 71) #21, !dbg !12348
  %58 = tail call zeroext i8 @pmu_get_register_value(i16 noundef zeroext 0, i16 noundef zeroext 255, i16 noundef zeroext 0) #21, !dbg !12349
  call void @llvm.dbg.value(metadata i8 %58, metadata !12284, metadata !DIExpression()), !dbg !12285
  switch i8 %58, label %117 [
    i8 16, label %59
    i8 17, label %88
  ], !dbg !12350

59:                                               ; preds = %55
  switch i32 %1, label %87 [
    i32 0, label %60
    i32 1, label %63
    i32 2, label %66
    i32 3, label %69
    i32 4, label %78
  ], !dbg !12351

60:                                               ; preds = %59
  %61 = trunc i32 %2 to i16, !dbg !12354
  %62 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 235, i16 noundef zeroext 3, i16 noundef zeroext 2, i16 noundef zeroext %61) #21, !dbg !12356
  br label %117, !dbg !12357

63:                                               ; preds = %59
  %64 = trunc i32 %2 to i16, !dbg !12358
  %65 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 793, i16 noundef zeroext 3, i16 noundef zeroext 1, i16 noundef zeroext %64) #21, !dbg !12359
  br label %117, !dbg !12360

66:                                               ; preds = %59
  %67 = trunc i32 %2 to i16, !dbg !12361
  %68 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 793, i16 noundef zeroext 3, i16 noundef zeroext 5, i16 noundef zeroext %67) #21, !dbg !12362
  br label %117, !dbg !12363

69:                                               ; preds = %59
  %70 = trunc i32 %2 to i16, !dbg !12364
  %71 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 794, i16 noundef zeroext 3, i16 noundef zeroext 1, i16 noundef zeroext %70) #21, !dbg !12365
  %72 = icmp ult i32 %2, 2, !dbg !12366
  %73 = load i16, i16* @pmu_mtcmos_vio28_pmod, align 2, !dbg !12368
  br i1 %72, label %74, label %76, !dbg !12366

74:                                               ; preds = %69
  %75 = or i16 %73, 1, !dbg !12369
  store i16 %75, i16* @pmu_mtcmos_vio28_pmod, align 2, !dbg !12369
  br label %117, !dbg !12371

76:                                               ; preds = %69
  %77 = and i16 %73, -2, !dbg !12372
  store i16 %77, i16* @pmu_mtcmos_vio28_pmod, align 2, !dbg !12372
  br label %117

78:                                               ; preds = %59
  %79 = trunc i32 %2 to i16, !dbg !12374
  %80 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 794, i16 noundef zeroext 3, i16 noundef zeroext 5, i16 noundef zeroext %79) #21, !dbg !12375
  %81 = icmp ult i32 %2, 2, !dbg !12376
  %82 = load i16, i16* @pmu_mtcmos_vio28_pmod, align 2, !dbg !12378
  br i1 %81, label %83, label %85, !dbg !12376

83:                                               ; preds = %78
  %84 = or i16 %82, 2, !dbg !12379
  store i16 %84, i16* @pmu_mtcmos_vio28_pmod, align 2, !dbg !12379
  br label %117, !dbg !12381

85:                                               ; preds = %78
  %86 = and i16 %82, 2, !dbg !12382
  store i16 %86, i16* @pmu_mtcmos_vio28_pmod, align 2, !dbg !12382
  br label %117

87:                                               ; preds = %59
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__FUNCTION__.PMIC_VR_PSI_PMOD_CONFIG, i32 0, i32 0), i32 noundef 170, i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.192, i32 0, i32 0)) #21, !dbg !12384
  br label %117, !dbg !12385

88:                                               ; preds = %55
  switch i32 %1, label %116 [
    i32 0, label %89
    i32 1, label %92
    i32 2, label %95
    i32 3, label %98
    i32 4, label %107
  ], !dbg !12386

89:                                               ; preds = %88
  %90 = trunc i32 %2 to i16, !dbg !12389
  %91 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 235, i16 noundef zeroext 3, i16 noundef zeroext 2, i16 noundef zeroext %90) #21, !dbg !12391
  br label %117, !dbg !12392

92:                                               ; preds = %88
  %93 = trunc i32 %2 to i16, !dbg !12393
  %94 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 99, i16 noundef zeroext 3, i16 noundef zeroext 0, i16 noundef zeroext %93) #21, !dbg !12394
  br label %117, !dbg !12395

95:                                               ; preds = %88
  %96 = trunc i32 %2 to i16, !dbg !12396
  %97 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 99, i16 noundef zeroext 3, i16 noundef zeroext 4, i16 noundef zeroext %96) #21, !dbg !12397
  br label %117, !dbg !12398

98:                                               ; preds = %88
  %99 = trunc i32 %2 to i16, !dbg !12399
  %100 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 101, i16 noundef zeroext 3, i16 noundef zeroext 4, i16 noundef zeroext %99) #21, !dbg !12400
  %101 = icmp ult i32 %2, 2, !dbg !12401
  %102 = load i16, i16* @pmu_mtcmos_vio28_pmod, align 2, !dbg !12403
  br i1 %101, label %103, label %105, !dbg !12401

103:                                              ; preds = %98
  %104 = or i16 %102, 1, !dbg !12404
  store i16 %104, i16* @pmu_mtcmos_vio28_pmod, align 2, !dbg !12404
  br label %117, !dbg !12406

105:                                              ; preds = %98
  %106 = and i16 %102, -2, !dbg !12407
  store i16 %106, i16* @pmu_mtcmos_vio28_pmod, align 2, !dbg !12407
  br label %117

107:                                              ; preds = %88
  %108 = trunc i32 %2 to i16, !dbg !12409
  %109 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 100, i16 noundef zeroext 3, i16 noundef zeroext 0, i16 noundef zeroext %108) #21, !dbg !12410
  %110 = icmp ult i32 %2, 2, !dbg !12411
  %111 = load i16, i16* @pmu_mtcmos_vio28_pmod, align 2, !dbg !12413
  br i1 %110, label %112, label %114, !dbg !12411

112:                                              ; preds = %107
  %113 = or i16 %111, 2, !dbg !12414
  store i16 %113, i16* @pmu_mtcmos_vio28_pmod, align 2, !dbg !12414
  br label %117, !dbg !12416

114:                                              ; preds = %107
  %115 = and i16 %111, 2, !dbg !12417
  store i16 %115, i16* @pmu_mtcmos_vio28_pmod, align 2, !dbg !12417
  br label %117

116:                                              ; preds = %88
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__FUNCTION__.PMIC_VR_PSI_PMOD_CONFIG, i32 0, i32 0), i32 noundef 203, i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.192, i32 0, i32 0)) #21, !dbg !12419
  br label %117, !dbg !12420

117:                                              ; preds = %83, %85, %74, %76, %87, %66, %63, %60, %55, %89, %92, %95, %116, %105, %103, %114, %112
  %118 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 88, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 0) #21, !dbg !12421
  %119 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 89, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 0) #21, !dbg !12422
  br label %241, !dbg !12423

120:                                              ; preds = %3
  switch i32 %1, label %145 [
    i32 0, label %121
    i32 1, label %124
    i32 2, label %127
    i32 3, label %130
    i32 4, label %133
    i32 5, label %136
    i32 6, label %139
    i32 7, label %142
  ], !dbg !12424

121:                                              ; preds = %120
  %122 = trunc i32 %2 to i16, !dbg !12425
  %123 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 67, i16 noundef zeroext 3, i16 noundef zeroext 2, i16 noundef zeroext %122) #21, !dbg !12427
  br label %241, !dbg !12428

124:                                              ; preds = %120
  %125 = trunc i32 %2 to i16, !dbg !12429
  %126 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 67, i16 noundef zeroext 3, i16 noundef zeroext 2, i16 noundef zeroext %125) #21, !dbg !12430
  br label %241, !dbg !12431

127:                                              ; preds = %120
  %128 = trunc i32 %2 to i16, !dbg !12432
  %129 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 67, i16 noundef zeroext 3, i16 noundef zeroext 2, i16 noundef zeroext %128) #21, !dbg !12433
  br label %241, !dbg !12434

130:                                              ; preds = %120
  %131 = trunc i32 %2 to i16, !dbg !12435
  %132 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 67, i16 noundef zeroext 3, i16 noundef zeroext 4, i16 noundef zeroext %131) #21, !dbg !12436
  br label %241, !dbg !12437

133:                                              ; preds = %120
  %134 = trunc i32 %2 to i16, !dbg !12438
  %135 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 67, i16 noundef zeroext 3, i16 noundef zeroext 4, i16 noundef zeroext %134) #21, !dbg !12439
  br label %241, !dbg !12440

136:                                              ; preds = %120
  %137 = trunc i32 %2 to i16, !dbg !12441
  %138 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 67, i16 noundef zeroext 3, i16 noundef zeroext 0, i16 noundef zeroext %137) #21, !dbg !12442
  br label %241, !dbg !12443

139:                                              ; preds = %120
  %140 = trunc i32 %2 to i16, !dbg !12444
  %141 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 67, i16 noundef zeroext 3, i16 noundef zeroext 4, i16 noundef zeroext %140) #21, !dbg !12445
  br label %241, !dbg !12446

142:                                              ; preds = %120
  %143 = trunc i32 %2 to i16, !dbg !12447
  %144 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 67, i16 noundef zeroext 3, i16 noundef zeroext 2, i16 noundef zeroext %143) #21, !dbg !12448
  br label %241, !dbg !12449

145:                                              ; preds = %120
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__FUNCTION__.PMIC_VR_PSI_PMOD_CONFIG, i32 0, i32 0), i32 noundef 239, i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.192, i32 0, i32 0)) #21, !dbg !12450
  br label %241, !dbg !12451

146:                                              ; preds = %3
  switch i32 %1, label %165 [
    i32 0, label %147
    i32 1, label %150
    i32 2, label %153
    i32 3, label %156
    i32 4, label %159
    i32 5, label %162
  ], !dbg !12452

147:                                              ; preds = %146
  %148 = trunc i32 %2 to i16, !dbg !12453
  %149 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 218, i16 noundef zeroext 1, i16 noundef zeroext 2, i16 noundef zeroext %148) #21, !dbg !12455
  br label %241, !dbg !12456

150:                                              ; preds = %146
  %151 = trunc i32 %2 to i16, !dbg !12457
  %152 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 226, i16 noundef zeroext 1, i16 noundef zeroext 1, i16 noundef zeroext %151) #21, !dbg !12458
  br label %241, !dbg !12459

153:                                              ; preds = %146
  %154 = trunc i32 %2 to i16, !dbg !12460
  %155 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 226, i16 noundef zeroext 1, i16 noundef zeroext 5, i16 noundef zeroext %154) #21, !dbg !12461
  br label %241, !dbg !12462

156:                                              ; preds = %146
  %157 = trunc i32 %2 to i16, !dbg !12463
  %158 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 227, i16 noundef zeroext 1, i16 noundef zeroext 1, i16 noundef zeroext %157) #21, !dbg !12464
  br label %241, !dbg !12465

159:                                              ; preds = %146
  %160 = trunc i32 %2 to i16, !dbg !12466
  %161 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 227, i16 noundef zeroext 1, i16 noundef zeroext 5, i16 noundef zeroext %160) #21, !dbg !12467
  br label %241, !dbg !12468

162:                                              ; preds = %146
  %163 = trunc i32 %2 to i16, !dbg !12469
  %164 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 219, i16 noundef zeroext 1, i16 noundef zeroext 2, i16 noundef zeroext %163) #21, !dbg !12470
  br label %241, !dbg !12471

165:                                              ; preds = %146
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__FUNCTION__.PMIC_VR_PSI_PMOD_CONFIG, i32 0, i32 0), i32 noundef 265, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.191, i32 0, i32 0)) #21, !dbg !12472
  br label %241, !dbg !12473

166:                                              ; preds = %3
  switch i32 %1, label %182 [
    i32 0, label %167
    i32 1, label %170
    i32 2, label %173
    i32 3, label %176
    i32 4, label %179
  ], !dbg !12474

167:                                              ; preds = %166
  %168 = trunc i32 %2 to i16, !dbg !12475
  %169 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 237, i16 noundef zeroext 3, i16 noundef zeroext 2, i16 noundef zeroext %168) #21, !dbg !12477
  br label %241, !dbg !12478

170:                                              ; preds = %166
  %171 = trunc i32 %2 to i16, !dbg !12479
  %172 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 245, i16 noundef zeroext 3, i16 noundef zeroext 1, i16 noundef zeroext %171) #21, !dbg !12480
  br label %241, !dbg !12481

173:                                              ; preds = %166
  %174 = trunc i32 %2 to i16, !dbg !12482
  %175 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 245, i16 noundef zeroext 3, i16 noundef zeroext 5, i16 noundef zeroext %174) #21, !dbg !12483
  br label %241, !dbg !12484

176:                                              ; preds = %166
  %177 = trunc i32 %2 to i16, !dbg !12485
  %178 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 246, i16 noundef zeroext 3, i16 noundef zeroext 1, i16 noundef zeroext %177) #21, !dbg !12486
  br label %241, !dbg !12487

179:                                              ; preds = %166
  %180 = trunc i32 %2 to i16, !dbg !12488
  %181 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 246, i16 noundef zeroext 3, i16 noundef zeroext 5, i16 noundef zeroext %180) #21, !dbg !12489
  br label %241, !dbg !12490

182:                                              ; preds = %166
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__FUNCTION__.PMIC_VR_PSI_PMOD_CONFIG, i32 0, i32 0), i32 noundef 288, i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.192, i32 0, i32 0)) #21, !dbg !12491
  br label %241, !dbg !12492

183:                                              ; preds = %3
  switch i32 %1, label %199 [
    i32 0, label %184
    i32 1, label %187
    i32 2, label %190
    i32 3, label %193
    i32 4, label %196
  ], !dbg !12493

184:                                              ; preds = %183
  %185 = trunc i32 %2 to i16, !dbg !12494
  %186 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 228, i16 noundef zeroext 3, i16 noundef zeroext 2, i16 noundef zeroext %185) #21, !dbg !12496
  br label %241, !dbg !12497

187:                                              ; preds = %183
  %188 = trunc i32 %2 to i16, !dbg !12498
  %189 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 757, i16 noundef zeroext 3, i16 noundef zeroext 1, i16 noundef zeroext %188) #21, !dbg !12499
  br label %241, !dbg !12500

190:                                              ; preds = %183
  %191 = trunc i32 %2 to i16, !dbg !12501
  %192 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 757, i16 noundef zeroext 3, i16 noundef zeroext 5, i16 noundef zeroext %191) #21, !dbg !12502
  br label %241, !dbg !12503

193:                                              ; preds = %183
  %194 = trunc i32 %2 to i16, !dbg !12504
  %195 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 758, i16 noundef zeroext 3, i16 noundef zeroext 1, i16 noundef zeroext %194) #21, !dbg !12505
  br label %241, !dbg !12506

196:                                              ; preds = %183
  %197 = trunc i32 %2 to i16, !dbg !12507
  %198 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 758, i16 noundef zeroext 3, i16 noundef zeroext 5, i16 noundef zeroext %197) #21, !dbg !12508
  br label %241, !dbg !12509

199:                                              ; preds = %183
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__FUNCTION__.PMIC_VR_PSI_PMOD_CONFIG, i32 0, i32 0), i32 noundef 311, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.191, i32 0, i32 0)) #21, !dbg !12510
  br label %241, !dbg !12511

200:                                              ; preds = %3
  switch i32 %1, label %216 [
    i32 0, label %201
    i32 1, label %204
    i32 2, label %207
    i32 3, label %210
    i32 4, label %213
  ], !dbg !12512

201:                                              ; preds = %200
  %202 = trunc i32 %2 to i16, !dbg !12513
  %203 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 229, i16 noundef zeroext 3, i16 noundef zeroext 2, i16 noundef zeroext %202) #21, !dbg !12515
  br label %241, !dbg !12516

204:                                              ; preds = %200
  %205 = trunc i32 %2 to i16, !dbg !12517
  %206 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 766, i16 noundef zeroext 3, i16 noundef zeroext 1, i16 noundef zeroext %205) #21, !dbg !12518
  br label %241, !dbg !12519

207:                                              ; preds = %200
  %208 = trunc i32 %2 to i16, !dbg !12520
  %209 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 766, i16 noundef zeroext 3, i16 noundef zeroext 5, i16 noundef zeroext %208) #21, !dbg !12521
  br label %241, !dbg !12522

210:                                              ; preds = %200
  %211 = trunc i32 %2 to i16, !dbg !12523
  %212 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 767, i16 noundef zeroext 3, i16 noundef zeroext 1, i16 noundef zeroext %211) #21, !dbg !12524
  br label %241, !dbg !12525

213:                                              ; preds = %200
  %214 = trunc i32 %2 to i16, !dbg !12526
  %215 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 767, i16 noundef zeroext 3, i16 noundef zeroext 5, i16 noundef zeroext %214) #21, !dbg !12527
  br label %241, !dbg !12528

216:                                              ; preds = %200
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__FUNCTION__.PMIC_VR_PSI_PMOD_CONFIG, i32 0, i32 0), i32 noundef 334, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.191, i32 0, i32 0)) #21, !dbg !12529
  br label %241, !dbg !12530

217:                                              ; preds = %3
  switch i32 %1, label %233 [
    i32 0, label %218
    i32 1, label %221
    i32 2, label %224
    i32 3, label %227
    i32 4, label %230
  ], !dbg !12531

218:                                              ; preds = %217
  %219 = trunc i32 %2 to i16, !dbg !12532
  %220 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 236, i16 noundef zeroext 3, i16 noundef zeroext 2, i16 noundef zeroext %219) #21, !dbg !12534
  br label %241, !dbg !12535

221:                                              ; preds = %217
  %222 = trunc i32 %2 to i16, !dbg !12536
  %223 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 802, i16 noundef zeroext 3, i16 noundef zeroext 1, i16 noundef zeroext %222) #21, !dbg !12537
  br label %241, !dbg !12538

224:                                              ; preds = %217
  %225 = trunc i32 %2 to i16, !dbg !12539
  %226 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 802, i16 noundef zeroext 3, i16 noundef zeroext 5, i16 noundef zeroext %225) #21, !dbg !12540
  br label %241, !dbg !12541

227:                                              ; preds = %217
  %228 = trunc i32 %2 to i16, !dbg !12542
  %229 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 803, i16 noundef zeroext 3, i16 noundef zeroext 1, i16 noundef zeroext %228) #21, !dbg !12543
  br label %241, !dbg !12544

230:                                              ; preds = %217
  %231 = trunc i32 %2 to i16, !dbg !12545
  %232 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 803, i16 noundef zeroext 3, i16 noundef zeroext 5, i16 noundef zeroext %231) #21, !dbg !12546
  br label %241, !dbg !12547

233:                                              ; preds = %217
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__FUNCTION__.PMIC_VR_PSI_PMOD_CONFIG, i32 0, i32 0), i32 noundef 357, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.191, i32 0, i32 0)) #21, !dbg !12548
  br label %241, !dbg !12549

234:                                              ; preds = %3
  %235 = trunc i32 %2 to i16, !dbg !12550
  %236 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 768, i16 noundef zeroext 3, i16 noundef zeroext 2, i16 noundef zeroext %235) #21, !dbg !12551
  br label %241, !dbg !12552

237:                                              ; preds = %3
  %238 = trunc i32 %2 to i16, !dbg !12553
  %239 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 804, i16 noundef zeroext 3, i16 noundef zeroext 2, i16 noundef zeroext %238) #21, !dbg !12554
  br label %241, !dbg !12555

240:                                              ; preds = %3
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__FUNCTION__.PMIC_VR_PSI_PMOD_CONFIG, i32 0, i32 0), i32 noundef 371, i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.193, i32 0, i32 0)) #21, !dbg !12556
  br label %241, !dbg !12557

241:                                              ; preds = %218, %221, %224, %227, %230, %233, %201, %204, %207, %210, %213, %216, %184, %187, %190, %193, %196, %199, %167, %170, %173, %176, %179, %182, %147, %150, %153, %156, %159, %162, %165, %121, %124, %127, %130, %133, %136, %139, %142, %145, %39, %42, %45, %48, %51, %54, %22, %25, %28, %31, %34, %37, %5, %8, %11, %14, %17, %20, %240, %237, %234, %117
  tail call void @pmu_set_ovr_mode_mt6385(i32 noundef 0) #22, !dbg !12558
  tail call void @pmu_set_vrc_key_mt6385(i32 noundef 1) #22, !dbg !12559
  ret void, !dbg !12560
}

; Function Attrs: noinline nounwind optsize
define dso_local void @pmu_set_vrc_key_mt6385(i32 noundef %0) local_unnamed_addr #0 !dbg !12561 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12566, metadata !DIExpression()), !dbg !12567
  %2 = icmp eq i32 %0, 1, !dbg !12568
  %3 = select i1 %2, i16 0, i16 252
  %4 = select i1 %2, i16 0, i16 218
  %5 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 62, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext %3) #21, !dbg !12570
  %6 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 63, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext %4) #21, !dbg !12570
  ret void, !dbg !12571
}

; Function Attrs: noinline nounwind optsize
define dso_local void @pmu_set_ovr_mode_mt6385(i32 noundef %0) local_unnamed_addr #0 !dbg !12572 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12577, metadata !DIExpression()), !dbg !12578
  %2 = icmp eq i32 %0, 0, !dbg !12579
  br i1 %2, label %3, label %5, !dbg !12581

3:                                                ; preds = %1
  %4 = tail call i32 @hal_gpt_delay_us(i32 noundef 500) #21, !dbg !12582
  br label %5, !dbg !12584

5:                                                ; preds = %1, %3
  %6 = phi i16 [ 0, %3 ], [ 1, %1 ]
  %7 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 64, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext %6) #21, !dbg !12585
  ret void, !dbg !12586
}

; Function Attrs: noinline nounwind optsize
define dso_local void @PMIC_VR_SLEEP_WKUP_CONFIG(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !12587 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12591, metadata !DIExpression()), !dbg !12597
  call void @llvm.dbg.value(metadata i32 %1, metadata !12592, metadata !DIExpression()), !dbg !12597
  call void @llvm.dbg.value(metadata i32 %2, metadata !12593, metadata !DIExpression()), !dbg !12597
  call void @llvm.dbg.value(metadata i32 %3, metadata !12594, metadata !DIExpression()), !dbg !12597
  call void @llvm.dbg.value(metadata i32 0, metadata !12595, metadata !DIExpression()), !dbg !12597
  call void @llvm.dbg.value(metadata i32 14, metadata !12596, metadata !DIExpression()), !dbg !12597
  switch i32 %1, label %9 [
    i32 3, label %5
    i32 4, label %7
  ], !dbg !12598

5:                                                ; preds = %4
  %6 = tail call zeroext i8 @pmu_get_register_value(i16 noundef zeroext 117, i16 noundef zeroext 15, i16 noundef zeroext 0) #21, !dbg !12599
  call void @llvm.dbg.value(metadata i8 %6, metadata !12595, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12597
  br label %10, !dbg !12601

7:                                                ; preds = %4
  %8 = tail call zeroext i8 @pmu_get_register_value(i16 noundef zeroext 117, i16 noundef zeroext 15, i16 noundef zeroext 4) #21, !dbg !12602
  call void @llvm.dbg.value(metadata i8 %8, metadata !12595, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12597
  br label %10, !dbg !12603

9:                                                ; preds = %4
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.PMIC_VR_SLEEP_WKUP_CONFIG, i32 0, i32 0), i32 noundef 400, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.3.196, i32 0, i32 0)) #21, !dbg !12604
  br label %10, !dbg !12605

10:                                               ; preds = %9, %7, %5
  %11 = phi i8 [ 0, %9 ], [ %8, %7 ], [ %6, %5 ]
  %12 = zext i8 %11 to i32, !dbg !12597
  call void @llvm.dbg.value(metadata i32 %12, metadata !12595, metadata !DIExpression()), !dbg !12597
  %13 = icmp slt i32 %12, %3, !dbg !12606
  br i1 %13, label %14, label %15, !dbg !12608

14:                                               ; preds = %10
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.PMIC_VR_SLEEP_WKUP_CONFIG, i32 0, i32 0), i32 noundef 405, i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.4.197, i32 0, i32 0)) #21, !dbg !12609
  br label %15, !dbg !12611

15:                                               ; preds = %14, %10
  switch i32 %2, label %18 [
    i32 0, label %19
    i32 1, label %16
    i32 2, label %17
  ], !dbg !12612

16:                                               ; preds = %15
  call void @llvm.dbg.value(metadata i32 15, metadata !12596, metadata !DIExpression()), !dbg !12597
  br label %19, !dbg !12613

17:                                               ; preds = %15
  call void @llvm.dbg.value(metadata i32 15, metadata !12596, metadata !DIExpression()), !dbg !12597
  br label %19, !dbg !12615

18:                                               ; preds = %15
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.PMIC_VR_SLEEP_WKUP_CONFIG, i32 0, i32 0), i32 noundef 419, i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.5.198, i32 0, i32 0), i32 noundef %2) #21, !dbg !12616
  br label %19, !dbg !12617

19:                                               ; preds = %15, %18, %17, %16
  %20 = phi i32 [ 14, %18 ], [ 15, %17 ], [ 15, %16 ], [ %3, %15 ], !dbg !12597
  call void @llvm.dbg.value(metadata i32 %20, metadata !12596, metadata !DIExpression()), !dbg !12597
  %21 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 88, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 41) #21, !dbg !12618
  %22 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 89, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 71) #21, !dbg !12619
  switch i32 %0, label %148 [
    i32 0, label %23
    i32 1, label %24
    i32 2, label %25
    i32 3, label %33
    i32 4, label %46
    i32 5, label %47
    i32 6, label %57
    i32 7, label %65
    i32 8, label %81
    i32 9, label %97
    i32 10, label %113
    i32 11, label %114
    i32 12, label %115
    i32 13, label %131
    i32 14, label %147
  ], !dbg !12620

23:                                               ; preds = %19
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.PMIC_VR_SLEEP_WKUP_CONFIG, i32 0, i32 0), i32 noundef 431, i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.6.199, i32 0, i32 0)) #21, !dbg !12621
  br label %149, !dbg !12623

24:                                               ; preds = %19
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.PMIC_VR_SLEEP_WKUP_CONFIG, i32 0, i32 0), i32 noundef 435, i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.7, i32 0, i32 0)) #21, !dbg !12624
  br label %149, !dbg !12625

25:                                               ; preds = %19
  switch i32 %1, label %32 [
    i32 3, label %26
    i32 4, label %29
  ], !dbg !12626

26:                                               ; preds = %25
  %27 = trunc i32 %20 to i16, !dbg !12627
  %28 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 120, i16 noundef zeroext 15, i16 noundef zeroext 4, i16 noundef zeroext %27) #21, !dbg !12629
  br label %149, !dbg !12630

29:                                               ; preds = %25
  %30 = trunc i32 %20 to i16, !dbg !12631
  %31 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 125, i16 noundef zeroext 15, i16 noundef zeroext 4, i16 noundef zeroext %30) #21, !dbg !12632
  br label %149, !dbg !12633

32:                                               ; preds = %25
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.PMIC_VR_SLEEP_WKUP_CONFIG, i32 0, i32 0), i32 noundef 447, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.8, i32 0, i32 0)) #21, !dbg !12634
  br label %149, !dbg !12635

33:                                               ; preds = %19
  %34 = icmp eq i32 %20, 15, !dbg !12636
  %35 = load i16, i16* @pmu_mtcmos_ldo_ctrl, align 2, !dbg !12638
  %36 = and i16 %35, -2, !dbg !12638
  %37 = zext i1 %34 to i16, !dbg !12638
  %38 = or i16 %36, %37, !dbg !12638
  store i16 %38, i16* @pmu_mtcmos_ldo_ctrl, align 2, !dbg !12639
  switch i32 %1, label %45 [
    i32 3, label %39
    i32 4, label %42
  ], !dbg !12640

39:                                               ; preds = %33
  %40 = trunc i32 %20 to i16, !dbg !12641
  %41 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 121, i16 noundef zeroext 15, i16 noundef zeroext 0, i16 noundef zeroext %40) #21, !dbg !12643
  br label %149, !dbg !12644

42:                                               ; preds = %33
  %43 = trunc i32 %20 to i16, !dbg !12645
  %44 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 126, i16 noundef zeroext 15, i16 noundef zeroext 0, i16 noundef zeroext %43) #21, !dbg !12646
  br label %149, !dbg !12647

45:                                               ; preds = %33
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.PMIC_VR_SLEEP_WKUP_CONFIG, i32 0, i32 0), i32 noundef 466, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.8, i32 0, i32 0)) #21, !dbg !12648
  br label %149, !dbg !12649

46:                                               ; preds = %19
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.PMIC_VR_SLEEP_WKUP_CONFIG, i32 0, i32 0), i32 noundef 472, i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.9, i32 0, i32 0)) #21, !dbg !12650
  br label %149, !dbg !12651

47:                                               ; preds = %19
  %48 = add i32 %2, -1, !dbg !12652
  %49 = icmp ult i32 %48, 2, !dbg !12652
  br i1 %49, label %50, label %149, !dbg !12652

50:                                               ; preds = %47
  tail call void @pmu_set_vrc_key_mt6385(i32 noundef 0) #22, !dbg !12654
  tail call void @pmu_set_ovr_mode_mt6385(i32 noundef 1) #22, !dbg !12656
  switch i32 %1, label %55 [
    i32 3, label %51
    i32 4, label %53
  ], !dbg !12657

51:                                               ; preds = %50
  %52 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 227, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext 1) #21, !dbg !12658
  br label %56, !dbg !12660

53:                                               ; preds = %50
  %54 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 227, i16 noundef zeroext 1, i16 noundef zeroext 4, i16 noundef zeroext 1) #21, !dbg !12661
  br label %56, !dbg !12662

55:                                               ; preds = %50
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.PMIC_VR_SLEEP_WKUP_CONFIG, i32 0, i32 0), i32 noundef 488, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.8, i32 0, i32 0)) #21, !dbg !12663
  br label %56, !dbg !12664

56:                                               ; preds = %55, %53, %51
  tail call void @pmu_set_ovr_mode_mt6385(i32 noundef 0) #22, !dbg !12665
  tail call void @pmu_set_vrc_key_mt6385(i32 noundef 1) #22, !dbg !12666
  br label %149, !dbg !12667

57:                                               ; preds = %19
  switch i32 %1, label %64 [
    i32 3, label %58
    i32 4, label %61
  ], !dbg !12668

58:                                               ; preds = %57
  %59 = trunc i32 %20 to i16, !dbg !12669
  %60 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 122, i16 noundef zeroext 15, i16 noundef zeroext 0, i16 noundef zeroext %59) #21, !dbg !12671
  br label %149, !dbg !12672

61:                                               ; preds = %57
  %62 = trunc i32 %20 to i16, !dbg !12673
  %63 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 127, i16 noundef zeroext 15, i16 noundef zeroext 0, i16 noundef zeroext %62) #21, !dbg !12674
  br label %149, !dbg !12675

64:                                               ; preds = %57
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.PMIC_VR_SLEEP_WKUP_CONFIG, i32 0, i32 0), i32 noundef 506, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.8, i32 0, i32 0)) #21, !dbg !12676
  br label %149, !dbg !12677

65:                                               ; preds = %19
  %66 = icmp eq i32 %20, 15, !dbg !12678
  %67 = load i16, i16* @pmu_mtcmos_ldo_ctrl, align 2, !dbg !12680
  %68 = and i16 %67, -3, !dbg !12680
  %69 = select i1 %66, i16 2, i16 0, !dbg !12680
  %70 = or i16 %68, %69, !dbg !12680
  store i16 %70, i16* @pmu_mtcmos_ldo_ctrl, align 2, !dbg !12681
  %71 = icmp eq i32 %20, 0, !dbg !12682
  br i1 %71, label %72, label %73, !dbg !12684

72:                                               ; preds = %65
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.PMIC_VR_SLEEP_WKUP_CONFIG, i32 0, i32 0), i32 noundef 519, i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.10, i32 0, i32 0)) #21, !dbg !12685
  br label %73, !dbg !12687

73:                                               ; preds = %72, %65
  switch i32 %1, label %80 [
    i32 3, label %74
    i32 4, label %77
  ], !dbg !12688

74:                                               ; preds = %73
  %75 = trunc i32 %20 to i16, !dbg !12689
  %76 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 118, i16 noundef zeroext 15, i16 noundef zeroext 0, i16 noundef zeroext %75) #21, !dbg !12691
  br label %149, !dbg !12692

77:                                               ; preds = %73
  %78 = trunc i32 %20 to i16, !dbg !12693
  %79 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 123, i16 noundef zeroext 15, i16 noundef zeroext 0, i16 noundef zeroext %78) #21, !dbg !12694
  br label %149, !dbg !12695

80:                                               ; preds = %73
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.PMIC_VR_SLEEP_WKUP_CONFIG, i32 0, i32 0), i32 noundef 529, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.8, i32 0, i32 0)) #21, !dbg !12696
  br label %149, !dbg !12697

81:                                               ; preds = %19
  %82 = icmp eq i32 %20, 15, !dbg !12698
  %83 = load i16, i16* @pmu_mtcmos_ldo_ctrl, align 2, !dbg !12700
  %84 = and i16 %83, -5, !dbg !12700
  %85 = select i1 %82, i16 4, i16 0, !dbg !12700
  %86 = or i16 %84, %85, !dbg !12700
  store i16 %86, i16* @pmu_mtcmos_ldo_ctrl, align 2, !dbg !12701
  %87 = icmp eq i32 %20, 0, !dbg !12702
  br i1 %87, label %88, label %89, !dbg !12704

88:                                               ; preds = %81
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.PMIC_VR_SLEEP_WKUP_CONFIG, i32 0, i32 0), i32 noundef 542, i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.10, i32 0, i32 0)) #21, !dbg !12705
  br label %89, !dbg !12707

89:                                               ; preds = %88, %81
  switch i32 %1, label %96 [
    i32 3, label %90
    i32 4, label %93
  ], !dbg !12708

90:                                               ; preds = %89
  %91 = trunc i32 %20 to i16, !dbg !12709
  %92 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 118, i16 noundef zeroext 15, i16 noundef zeroext 4, i16 noundef zeroext %91) #21, !dbg !12711
  br label %149, !dbg !12712

93:                                               ; preds = %89
  %94 = trunc i32 %20 to i16, !dbg !12713
  %95 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 123, i16 noundef zeroext 15, i16 noundef zeroext 4, i16 noundef zeroext %94) #21, !dbg !12714
  br label %149, !dbg !12715

96:                                               ; preds = %89
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.PMIC_VR_SLEEP_WKUP_CONFIG, i32 0, i32 0), i32 noundef 552, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.8, i32 0, i32 0)) #21, !dbg !12716
  br label %149, !dbg !12717

97:                                               ; preds = %19
  %98 = icmp eq i32 %20, 15, !dbg !12718
  %99 = load i16, i16* @pmu_mtcmos_ldo_ctrl, align 2, !dbg !12720
  %100 = and i16 %99, -33, !dbg !12720
  %101 = select i1 %98, i16 32, i16 0, !dbg !12720
  %102 = or i16 %100, %101, !dbg !12720
  store i16 %102, i16* @pmu_mtcmos_ldo_ctrl, align 2, !dbg !12721
  %103 = icmp eq i32 %20, 0, !dbg !12722
  br i1 %103, label %104, label %105, !dbg !12724

104:                                              ; preds = %97
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.PMIC_VR_SLEEP_WKUP_CONFIG, i32 0, i32 0), i32 noundef 565, i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.10, i32 0, i32 0)) #21, !dbg !12725
  br label %105, !dbg !12727

105:                                              ; preds = %104, %97
  switch i32 %1, label %112 [
    i32 3, label %106
    i32 4, label %109
  ], !dbg !12728

106:                                              ; preds = %105
  %107 = trunc i32 %20 to i16, !dbg !12729
  %108 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 121, i16 noundef zeroext 15, i16 noundef zeroext 4, i16 noundef zeroext %107) #21, !dbg !12731
  br label %149, !dbg !12732

109:                                              ; preds = %105
  %110 = trunc i32 %20 to i16, !dbg !12733
  %111 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 126, i16 noundef zeroext 15, i16 noundef zeroext 4, i16 noundef zeroext %110) #21, !dbg !12734
  br label %149, !dbg !12735

112:                                              ; preds = %105
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.PMIC_VR_SLEEP_WKUP_CONFIG, i32 0, i32 0), i32 noundef 575, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.8, i32 0, i32 0)) #21, !dbg !12736
  br label %149, !dbg !12737

113:                                              ; preds = %19
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.PMIC_VR_SLEEP_WKUP_CONFIG, i32 0, i32 0), i32 noundef 581, i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.11, i32 0, i32 0)) #21, !dbg !12738
  br label %149, !dbg !12739

114:                                              ; preds = %19
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.PMIC_VR_SLEEP_WKUP_CONFIG, i32 0, i32 0), i32 noundef 585, i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.12, i32 0, i32 0)) #21, !dbg !12740
  br label %149, !dbg !12741

115:                                              ; preds = %19
  %116 = icmp eq i32 %20, 15, !dbg !12742
  %117 = load i16, i16* @pmu_mtcmos_ldo_ctrl, align 2, !dbg !12744
  %118 = and i16 %117, -9, !dbg !12744
  %119 = select i1 %116, i16 8, i16 0, !dbg !12744
  %120 = or i16 %118, %119, !dbg !12744
  store i16 %120, i16* @pmu_mtcmos_ldo_ctrl, align 2, !dbg !12745
  %121 = icmp eq i32 %20, 0, !dbg !12746
  br i1 %121, label %122, label %123, !dbg !12748

122:                                              ; preds = %115
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.PMIC_VR_SLEEP_WKUP_CONFIG, i32 0, i32 0), i32 noundef 596, i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.10, i32 0, i32 0)) #21, !dbg !12749
  br label %123, !dbg !12751

123:                                              ; preds = %122, %115
  switch i32 %1, label %130 [
    i32 3, label %124
    i32 4, label %127
  ], !dbg !12752

124:                                              ; preds = %123
  %125 = trunc i32 %20 to i16, !dbg !12753
  %126 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 119, i16 noundef zeroext 15, i16 noundef zeroext 4, i16 noundef zeroext %125) #21, !dbg !12755
  br label %149, !dbg !12756

127:                                              ; preds = %123
  %128 = trunc i32 %20 to i16, !dbg !12757
  %129 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 124, i16 noundef zeroext 15, i16 noundef zeroext 4, i16 noundef zeroext %128) #21, !dbg !12758
  br label %149, !dbg !12759

130:                                              ; preds = %123
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.PMIC_VR_SLEEP_WKUP_CONFIG, i32 0, i32 0), i32 noundef 606, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.8, i32 0, i32 0)) #21, !dbg !12760
  br label %149, !dbg !12761

131:                                              ; preds = %19
  %132 = icmp eq i32 %20, 15, !dbg !12762
  %133 = load i16, i16* @pmu_mtcmos_ldo_ctrl, align 2, !dbg !12764
  %134 = and i16 %133, -17, !dbg !12764
  %135 = select i1 %132, i16 16, i16 0, !dbg !12764
  %136 = or i16 %134, %135, !dbg !12764
  store i16 %136, i16* @pmu_mtcmos_ldo_ctrl, align 2, !dbg !12765
  %137 = icmp eq i32 %20, 0, !dbg !12766
  br i1 %137, label %138, label %139, !dbg !12768

138:                                              ; preds = %131
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.PMIC_VR_SLEEP_WKUP_CONFIG, i32 0, i32 0), i32 noundef 619, i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.10, i32 0, i32 0)) #21, !dbg !12769
  br label %139, !dbg !12771

139:                                              ; preds = %138, %131
  switch i32 %1, label %146 [
    i32 3, label %140
    i32 4, label %143
  ], !dbg !12772

140:                                              ; preds = %139
  %141 = trunc i32 %20 to i16, !dbg !12773
  %142 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 120, i16 noundef zeroext 15, i16 noundef zeroext 0, i16 noundef zeroext %141) #21, !dbg !12775
  br label %149, !dbg !12776

143:                                              ; preds = %139
  %144 = trunc i32 %20 to i16, !dbg !12777
  %145 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 125, i16 noundef zeroext 15, i16 noundef zeroext 0, i16 noundef zeroext %144) #21, !dbg !12778
  br label %149, !dbg !12779

146:                                              ; preds = %139
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.PMIC_VR_SLEEP_WKUP_CONFIG, i32 0, i32 0), i32 noundef 629, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.8, i32 0, i32 0)) #21, !dbg !12780
  br label %149, !dbg !12781

147:                                              ; preds = %19
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.PMIC_VR_SLEEP_WKUP_CONFIG, i32 0, i32 0), i32 noundef 635, i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.13, i32 0, i32 0)) #21, !dbg !12782
  br label %149, !dbg !12783

148:                                              ; preds = %19
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.PMIC_VR_SLEEP_WKUP_CONFIG, i32 0, i32 0), i32 noundef 639, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.14, i32 0, i32 0)) #21, !dbg !12784
  br label %149, !dbg !12785

149:                                              ; preds = %140, %143, %146, %124, %127, %130, %106, %109, %112, %90, %93, %96, %74, %77, %80, %58, %61, %64, %56, %47, %39, %42, %45, %26, %29, %32, %148, %147, %114, %113, %46, %24, %23
  %150 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 88, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 0) #21, !dbg !12786
  %151 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 89, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 0) #21, !dbg !12787
  ret void, !dbg !12788
}

; Function Attrs: noinline nounwind optsize
define dso_local void @PMIC_VR_CONTROL(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !12789 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12793, metadata !DIExpression()), !dbg !12796
  call void @llvm.dbg.value(metadata i32 %1, metadata !12794, metadata !DIExpression()), !dbg !12796
  call void @llvm.dbg.value(metadata i32 1, metadata !12795, metadata !DIExpression()), !dbg !12796
  %3 = icmp eq i32 %1, 0, !dbg !12797
  call void @llvm.dbg.value(metadata i1 %3, metadata !12795, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12796
  %4 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 62, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 252) #21, !dbg !12799
  %5 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 63, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 218) #21, !dbg !12800
  switch i32 %0, label %114 [
    i32 0, label %6
    i32 1, label %7
    i32 2, label %8
    i32 3, label %14
    i32 4, label %25
    i32 5, label %26
    i32 6, label %29
    i32 7, label %35
    i32 8, label %46
    i32 9, label %57
    i32 10, label %68
    i32 11, label %79
    i32 12, label %90
    i32 13, label %98
    i32 14, label %106
  ], !dbg !12801

6:                                                ; preds = %2
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__FUNCTION__.PMIC_VR_CONTROL, i32 0, i32 0), i32 noundef 662, i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.15, i32 0, i32 0)) #21, !dbg !12802
  br label %115, !dbg !12804

7:                                                ; preds = %2
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__FUNCTION__.PMIC_VR_CONTROL, i32 0, i32 0), i32 noundef 666, i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.16, i32 0, i32 0)) #21, !dbg !12805
  br label %115, !dbg !12806

8:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i1 %3, metadata !12795, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12796
  %9 = trunc i32 %1 to i16, !dbg !12807
  %10 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 234, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext %9) #21, !dbg !12808
  call void @llvm.dbg.value(metadata i1 %3, metadata !12795, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12796
  br i1 %3, label %115, label %11, !dbg !12809

11:                                               ; preds = %8, %11
  %12 = tail call zeroext i8 @pmu_get_register_value(i16 noundef zeroext 234, i16 noundef zeroext 1, i16 noundef zeroext 6) #21, !dbg !12810
  call void @llvm.dbg.value(metadata i8 %12, metadata !12795, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12796
  %13 = icmp eq i8 %12, 0, !dbg !12812
  br i1 %13, label %11, label %115, !dbg !12809, !llvm.loop !12813

14:                                               ; preds = %2
  %15 = icmp eq i32 %1, 1, !dbg !12815
  %16 = load i16, i16* @pmu_mtcmos_ldo_en, align 2, !dbg !12817
  %17 = and i16 %16, -2, !dbg !12817
  %18 = zext i1 %15 to i16, !dbg !12817
  %19 = or i16 %17, %18, !dbg !12817
  store i16 %19, i16* @pmu_mtcmos_ldo_en, align 2, !dbg !12818
  %20 = trunc i32 %1 to i16, !dbg !12819
  %21 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 235, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext %20) #21, !dbg !12820
  call void @llvm.dbg.value(metadata i1 %3, metadata !12795, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12796
  br i1 %3, label %115, label %22, !dbg !12821

22:                                               ; preds = %14, %22
  %23 = tail call zeroext i8 @pmu_get_register_value(i16 noundef zeroext 235, i16 noundef zeroext 1, i16 noundef zeroext 6) #21, !dbg !12822
  call void @llvm.dbg.value(metadata i8 %23, metadata !12795, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12796
  %24 = icmp eq i8 %23, 0, !dbg !12824
  br i1 %24, label %22, label %115, !dbg !12821, !llvm.loop !12825

25:                                               ; preds = %2
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__FUNCTION__.PMIC_VR_CONTROL, i32 0, i32 0), i32 noundef 689, i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.16, i32 0, i32 0)) #21, !dbg !12827
  br label %115, !dbg !12828

26:                                               ; preds = %2
  %27 = trunc i32 %1 to i16, !dbg !12829
  %28 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 218, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext %27) #21, !dbg !12830
  br label %115, !dbg !12831

29:                                               ; preds = %2
  %30 = trunc i32 %1 to i16, !dbg !12832
  %31 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 237, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext %30) #21, !dbg !12833
  call void @llvm.dbg.value(metadata i1 %3, metadata !12795, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12796
  br i1 %3, label %115, label %32, !dbg !12834

32:                                               ; preds = %29, %32
  %33 = tail call zeroext i8 @pmu_get_register_value(i16 noundef zeroext 237, i16 noundef zeroext 1, i16 noundef zeroext 6) #21, !dbg !12835
  call void @llvm.dbg.value(metadata i8 %33, metadata !12795, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12796
  %34 = icmp eq i8 %33, 0, !dbg !12837
  br i1 %34, label %32, label %115, !dbg !12834, !llvm.loop !12838

35:                                               ; preds = %2
  %36 = icmp eq i32 %1, 1, !dbg !12840
  %37 = load i16, i16* @pmu_mtcmos_ldo_en, align 2, !dbg !12842
  %38 = and i16 %37, -3, !dbg !12842
  %39 = select i1 %36, i16 2, i16 0, !dbg !12842
  %40 = or i16 %38, %39, !dbg !12842
  store i16 %40, i16* @pmu_mtcmos_ldo_en, align 2, !dbg !12843
  %41 = trunc i32 %1 to i16, !dbg !12844
  %42 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 228, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext %41) #21, !dbg !12845
  call void @llvm.dbg.value(metadata i1 %3, metadata !12795, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12796
  br i1 %3, label %115, label %43, !dbg !12846

43:                                               ; preds = %35, %43
  %44 = tail call zeroext i8 @pmu_get_register_value(i16 noundef zeroext 228, i16 noundef zeroext 1, i16 noundef zeroext 6) #21, !dbg !12847
  call void @llvm.dbg.value(metadata i8 %44, metadata !12795, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12796
  %45 = icmp eq i8 %44, 0, !dbg !12849
  br i1 %45, label %43, label %115, !dbg !12846, !llvm.loop !12850

46:                                               ; preds = %2
  %47 = icmp eq i32 %1, 1, !dbg !12852
  %48 = load i16, i16* @pmu_mtcmos_ldo_en, align 2, !dbg !12854
  %49 = and i16 %48, -5, !dbg !12854
  %50 = select i1 %47, i16 4, i16 0, !dbg !12854
  %51 = or i16 %49, %50, !dbg !12854
  store i16 %51, i16* @pmu_mtcmos_ldo_en, align 2, !dbg !12855
  %52 = trunc i32 %1 to i16, !dbg !12856
  %53 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 229, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext %52) #21, !dbg !12857
  call void @llvm.dbg.value(metadata i1 %3, metadata !12795, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12796
  br i1 %3, label %115, label %54, !dbg !12858

54:                                               ; preds = %46, %54
  %55 = tail call zeroext i8 @pmu_get_register_value(i16 noundef zeroext 229, i16 noundef zeroext 1, i16 noundef zeroext 6) #21, !dbg !12859
  call void @llvm.dbg.value(metadata i8 %55, metadata !12795, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12796
  %56 = icmp eq i8 %55, 0, !dbg !12861
  br i1 %56, label %54, label %115, !dbg !12858, !llvm.loop !12862

57:                                               ; preds = %2
  %58 = icmp eq i32 %1, 1, !dbg !12864
  %59 = load i16, i16* @pmu_mtcmos_ldo_en, align 2, !dbg !12866
  %60 = and i16 %59, -33, !dbg !12866
  %61 = select i1 %58, i16 32, i16 0, !dbg !12866
  %62 = or i16 %60, %61, !dbg !12866
  store i16 %62, i16* @pmu_mtcmos_ldo_en, align 2, !dbg !12867
  %63 = trunc i32 %1 to i16, !dbg !12868
  %64 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 236, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext %63) #21, !dbg !12869
  call void @llvm.dbg.value(metadata i1 %3, metadata !12795, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12796
  br i1 %3, label %115, label %65, !dbg !12870

65:                                               ; preds = %57, %65
  %66 = tail call zeroext i8 @pmu_get_register_value(i16 noundef zeroext 236, i16 noundef zeroext 1, i16 noundef zeroext 6) #21, !dbg !12871
  call void @llvm.dbg.value(metadata i8 %66, metadata !12795, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12796
  %67 = icmp eq i8 %66, 0, !dbg !12873
  br i1 %67, label %65, label %115, !dbg !12870, !llvm.loop !12874

68:                                               ; preds = %2
  %69 = icmp eq i32 %1, 1, !dbg !12876
  %70 = load i16, i16* @pmu_mtcmos_ldo_en, align 2, !dbg !12878
  %71 = and i16 %70, -65, !dbg !12878
  %72 = select i1 %69, i16 64, i16 0, !dbg !12878
  %73 = or i16 %71, %72, !dbg !12878
  store i16 %73, i16* @pmu_mtcmos_ldo_en, align 2, !dbg !12879
  %74 = trunc i32 %1 to i16, !dbg !12880
  %75 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 768, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext %74) #21, !dbg !12881
  call void @llvm.dbg.value(metadata i1 %3, metadata !12795, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12796
  br i1 %3, label %115, label %76, !dbg !12882

76:                                               ; preds = %68, %76
  %77 = tail call zeroext i8 @pmu_get_register_value(i16 noundef zeroext 768, i16 noundef zeroext 1, i16 noundef zeroext 6) #21, !dbg !12883
  call void @llvm.dbg.value(metadata i8 %77, metadata !12795, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12796
  %78 = icmp eq i8 %77, 0, !dbg !12885
  br i1 %78, label %76, label %115, !dbg !12882, !llvm.loop !12886

79:                                               ; preds = %2
  %80 = icmp eq i32 %1, 1, !dbg !12888
  %81 = load i16, i16* @pmu_mtcmos_ldo_en, align 2, !dbg !12890
  %82 = and i16 %81, -129, !dbg !12890
  %83 = select i1 %80, i16 128, i16 0, !dbg !12890
  %84 = or i16 %82, %83, !dbg !12890
  store i16 %84, i16* @pmu_mtcmos_ldo_en, align 2, !dbg !12891
  %85 = trunc i32 %1 to i16, !dbg !12892
  %86 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 804, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext %85) #21, !dbg !12893
  call void @llvm.dbg.value(metadata i1 %3, metadata !12795, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12796
  br i1 %3, label %115, label %87, !dbg !12894

87:                                               ; preds = %79, %87
  %88 = tail call zeroext i8 @pmu_get_register_value(i16 noundef zeroext 804, i16 noundef zeroext 1, i16 noundef zeroext 6) #21, !dbg !12895
  call void @llvm.dbg.value(metadata i8 %88, metadata !12795, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12796
  %89 = icmp eq i8 %88, 0, !dbg !12897
  br i1 %89, label %87, label %115, !dbg !12894, !llvm.loop !12898

90:                                               ; preds = %2
  %91 = icmp eq i32 %1, 1, !dbg !12900
  %92 = load i16, i16* @pmu_mtcmos_ldo_en, align 2, !dbg !12902
  %93 = and i16 %92, -9, !dbg !12902
  %94 = select i1 %91, i16 8, i16 0, !dbg !12902
  %95 = or i16 %93, %94, !dbg !12902
  store i16 %95, i16* @pmu_mtcmos_ldo_en, align 2, !dbg !12903
  %96 = trunc i32 %1 to i16, !dbg !12904
  %97 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 778, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext %96) #21, !dbg !12905
  br label %115, !dbg !12906

98:                                               ; preds = %2
  %99 = icmp eq i32 %1, 1, !dbg !12907
  %100 = load i16, i16* @pmu_mtcmos_ldo_en, align 2, !dbg !12909
  %101 = and i16 %100, -17, !dbg !12909
  %102 = select i1 %99, i16 16, i16 0, !dbg !12909
  %103 = or i16 %101, %102, !dbg !12909
  store i16 %103, i16* @pmu_mtcmos_ldo_en, align 2, !dbg !12910
  %104 = trunc i32 %1 to i16, !dbg !12911
  %105 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 778, i16 noundef zeroext 1, i16 noundef zeroext 1, i16 noundef zeroext %104) #21, !dbg !12912
  br label %115, !dbg !12913

106:                                              ; preds = %2
  %107 = icmp eq i32 %1, 1, !dbg !12914
  %108 = load i16, i16* @pmu_mtcmos_ldo_en, align 2, !dbg !12916
  %109 = and i16 %108, -257, !dbg !12916
  %110 = select i1 %107, i16 256, i16 0, !dbg !12916
  %111 = or i16 %109, %110, !dbg !12916
  store i16 %111, i16* @pmu_mtcmos_ldo_en, align 2, !dbg !12917
  %112 = trunc i32 %1 to i16, !dbg !12918
  %113 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 778, i16 noundef zeroext 1, i16 noundef zeroext 2, i16 noundef zeroext %112) #21, !dbg !12919
  br label %115, !dbg !12920

114:                                              ; preds = %2
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__FUNCTION__.PMIC_VR_CONTROL, i32 0, i32 0), i32 noundef 791, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.17, i32 0, i32 0)) #21, !dbg !12921
  br label %115, !dbg !12922

115:                                              ; preds = %87, %76, %65, %54, %43, %32, %22, %11, %79, %68, %57, %46, %35, %29, %14, %8, %114, %106, %98, %90, %26, %25, %7, %6
  %116 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 62, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 0) #21, !dbg !12923
  %117 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 63, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 0) #21, !dbg !12924
  ret void, !dbg !12925
}

; Function Attrs: noinline nounwind optsize
define dso_local void @PMIC_VCORE_VOSEL_CONFIG(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !12926 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12930, metadata !DIExpression()), !dbg !12934
  call void @llvm.dbg.value(metadata i32 %1, metadata !12931, metadata !DIExpression()), !dbg !12934
  call void @llvm.dbg.declare(metadata [7 x i32]* @__const.pmu_set_vcore_s1_buck_mt6385.vcbuck_voval, metadata !12932, metadata !DIExpression()), !dbg !12935
  call void @llvm.dbg.declare(metadata [7 x i32]* @__const.PMIC_VCORE_VOSEL_CONFIG.vc_ldo_vosel, metadata !12933, metadata !DIExpression()), !dbg !12936
  tail call void @pmu_set_vrc_key_mt6385(i32 noundef 0) #22, !dbg !12937
  tail call void @pmu_set_ovr_mode_mt6385(i32 noundef 1) #22, !dbg !12938
  %3 = tail call i32 @hal_gpt_delay_us(i32 noundef 350) #21, !dbg !12939
  switch i32 %0, label %36 [
    i32 0, label %4
    i32 1, label %13
    i32 2, label %22
    i32 4, label %31
  ], !dbg !12940

4:                                                ; preds = %2
  %5 = getelementptr inbounds [7 x i32], [7 x i32]* @__const.pmu_set_vcore_s1_buck_mt6385.vcbuck_voval, i32 0, i32 %1, !dbg !12941
  %6 = load i32, i32* %5, align 4, !dbg !12941
  %7 = trunc i32 %6 to i16, !dbg !12941
  %8 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 316, i16 noundef zeroext 15, i16 noundef zeroext 4, i16 noundef zeroext %7) #21, !dbg !12943
  %9 = getelementptr inbounds [7 x i32], [7 x i32]* @__const.PMIC_VCORE_VOSEL_CONFIG.vc_ldo_vosel, i32 0, i32 %1, !dbg !12944
  %10 = load i32, i32* %9, align 4, !dbg !12944
  %11 = trunc i32 %10 to i16, !dbg !12944
  %12 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 254, i16 noundef zeroext 15, i16 noundef zeroext 0, i16 noundef zeroext %11) #21, !dbg !12945
  br label %37, !dbg !12946

13:                                               ; preds = %2
  %14 = getelementptr inbounds [7 x i32], [7 x i32]* @__const.pmu_set_vcore_s1_buck_mt6385.vcbuck_voval, i32 0, i32 %1, !dbg !12947
  %15 = load i32, i32* %14, align 4, !dbg !12947
  %16 = trunc i32 %15 to i16, !dbg !12947
  %17 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 318, i16 noundef zeroext 15, i16 noundef zeroext 4, i16 noundef zeroext %16) #21, !dbg !12948
  %18 = getelementptr inbounds [7 x i32], [7 x i32]* @__const.PMIC_VCORE_VOSEL_CONFIG.vc_ldo_vosel, i32 0, i32 %1, !dbg !12949
  %19 = load i32, i32* %18, align 4, !dbg !12949
  %20 = trunc i32 %19 to i16, !dbg !12949
  %21 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 259, i16 noundef zeroext 15, i16 noundef zeroext 4, i16 noundef zeroext %20) #21, !dbg !12950
  br label %37, !dbg !12951

22:                                               ; preds = %2
  %23 = getelementptr inbounds [7 x i32], [7 x i32]* @__const.pmu_set_vcore_s1_buck_mt6385.vcbuck_voval, i32 0, i32 %1, !dbg !12952
  %24 = load i32, i32* %23, align 4, !dbg !12952
  %25 = trunc i32 %24 to i16, !dbg !12952
  %26 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 319, i16 noundef zeroext 15, i16 noundef zeroext 4, i16 noundef zeroext %25) #21, !dbg !12953
  %27 = getelementptr inbounds [7 x i32], [7 x i32]* @__const.PMIC_VCORE_VOSEL_CONFIG.vc_ldo_vosel, i32 0, i32 %1, !dbg !12954
  %28 = load i32, i32* %27, align 4, !dbg !12954
  %29 = trunc i32 %28 to i16, !dbg !12954
  %30 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 261, i16 noundef zeroext 15, i16 noundef zeroext 4, i16 noundef zeroext %29) #21, !dbg !12955
  br label %37, !dbg !12956

31:                                               ; preds = %2
  %32 = getelementptr inbounds [7 x i32], [7 x i32]* @__const.PMIC_VCORE_VOSEL_CONFIG.vc_ldo_vosel, i32 0, i32 %1, !dbg !12957
  %33 = load i32, i32* %32, align 4, !dbg !12957
  %34 = trunc i32 %33 to i16, !dbg !12957
  %35 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 264, i16 noundef zeroext 15, i16 noundef zeroext 4, i16 noundef zeroext %34) #21, !dbg !12958
  br label %37, !dbg !12959

36:                                               ; preds = %2
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__FUNCTION__.PMIC_VCORE_VOSEL_CONFIG, i32 0, i32 0), i32 noundef 830, i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.18, i32 0, i32 0)) #21, !dbg !12960
  br label %37, !dbg !12961

37:                                               ; preds = %36, %31, %22, %13, %4
  tail call void @pmu_set_ovr_mode_mt6385(i32 noundef 0) #22, !dbg !12962
  %38 = tail call i32 @hal_gpt_delay_us(i32 noundef 250) #21, !dbg !12963
  tail call void @pmu_set_vrc_key_mt6385(i32 noundef 1) #22, !dbg !12964
  ret void, !dbg !12965
}

; Function Attrs: noinline nounwind optsize
define dso_local void @PMIC_VR_VOSEL_INIT_CONFIG(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !12966 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12971, metadata !DIExpression()), !dbg !12975
  call void @llvm.dbg.value(metadata i32 %1, metadata !12972, metadata !DIExpression()), !dbg !12975
  call void @llvm.dbg.declare(metadata [8 x i32]* @__const.PMIC_VR_VOSEL_INIT_CONFIG.viber_vosel, metadata !12973, metadata !DIExpression()), !dbg !12976
  %3 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 62, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 252) #21, !dbg !12977
  %4 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 63, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 218) #21, !dbg !12978
  switch i32 %0, label %20 [
    i32 10, label %5
    i32 11, label %15
  ], !dbg !12979

5:                                                ; preds = %2
  switch i32 %1, label %14 [
    i32 1, label %6
    i32 2, label %8
    i32 4, label %10
    i32 5, label %12
  ], !dbg !12980

6:                                                ; preds = %5
  %7 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 771, i16 noundef zeroext 7, i16 noundef zeroext 0, i16 noundef zeroext 0) #21, !dbg !12982
  br label %21, !dbg !12984

8:                                                ; preds = %5
  %9 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 771, i16 noundef zeroext 7, i16 noundef zeroext 0, i16 noundef zeroext 1) #21, !dbg !12985
  br label %21, !dbg !12986

10:                                               ; preds = %5
  %11 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 771, i16 noundef zeroext 7, i16 noundef zeroext 0, i16 noundef zeroext 2) #21, !dbg !12987
  br label %21, !dbg !12988

12:                                               ; preds = %5
  %13 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 771, i16 noundef zeroext 7, i16 noundef zeroext 0, i16 noundef zeroext 3) #21, !dbg !12989
  br label %21, !dbg !12990

14:                                               ; preds = %5
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.PMIC_VR_VOSEL_INIT_CONFIG, i32 0, i32 0), i32 noundef 866, i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.19, i32 0, i32 0)) #21, !dbg !12991
  br label %21, !dbg !12992

15:                                               ; preds = %2
  %16 = getelementptr inbounds [8 x i32], [8 x i32]* @__const.PMIC_VR_VOSEL_INIT_CONFIG.viber_vosel, i32 0, i32 %1, !dbg !12993
  %17 = load i32, i32* %16, align 4, !dbg !12993
  %18 = trunc i32 %17 to i16, !dbg !12993
  %19 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 807, i16 noundef zeroext 7, i16 noundef zeroext 0, i16 noundef zeroext %18) #21, !dbg !12994
  br label %21, !dbg !12995

20:                                               ; preds = %2
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.PMIC_VR_VOSEL_INIT_CONFIG, i32 0, i32 0), i32 noundef 876, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.17, i32 0, i32 0)) #21, !dbg !12996
  br label %21, !dbg !12997

21:                                               ; preds = %6, %8, %10, %12, %14, %20, %15
  %22 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 62, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 0) #21, !dbg !12998
  %23 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 63, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 0) #21, !dbg !12999
  ret void, !dbg !13000
}

; Function Attrs: noinline nounwind optsize
define dso_local void @pmu_control_mtcmos_mt6385() local_unnamed_addr #0 !dbg !2396 {
  %1 = load i16, i16* @pmu_mtcmos_ldo_ctrl, align 2, !dbg !13001
  %2 = load i16, i16* @pmu_mtcmos_ldo_en, align 2, !dbg !13002
  %3 = and i16 %2, %1, !dbg !13003
  %4 = load i16, i16* @pmu_mtcmos_vio28_pmod, align 2, !dbg !13004
  %5 = or i16 %3, %4, !dbg !13005
  store i16 %5, i16* @pmu_control_mtcmos_mt6385.mtcmos_flag, align 2, !dbg !13006
  %6 = load i16, i16* @pmu_control_mtcmos_mt6385.local_flag, align 2, !dbg !13007
  %7 = icmp eq i16 %6, %5, !dbg !13009
  br i1 %7, label %12, label %8, !dbg !13010

8:                                                ; preds = %0
  %9 = icmp eq i16 %5, 0, !dbg !13011
  %10 = select i1 %9, i8 0, i8 3
  tail call void @pmu_set_mtcmos_mt6385(i8 noundef zeroext %10) #22, !dbg !13014
  %11 = load i16, i16* @pmu_control_mtcmos_mt6385.mtcmos_flag, align 2, !dbg !13015
  store i16 %11, i16* @pmu_control_mtcmos_mt6385.local_flag, align 2, !dbg !13016
  br label %12, !dbg !13017

12:                                               ; preds = %8, %0
  ret void, !dbg !13018
}

; Function Attrs: noinline nounwind optsize
define dso_local void @pmu_set_mtcmos_mt6385(i8 noundef zeroext %0) local_unnamed_addr #0 !dbg !13019 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !13021, metadata !DIExpression()), !dbg !13022
  %2 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 62, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 252) #21, !dbg !13023
  %3 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 63, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 218) #21, !dbg !13024
  %4 = zext i8 %0 to i16, !dbg !13025
  %5 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 130, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext %4) #21, !dbg !13026
  %6 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 62, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 0) #21, !dbg !13027
  %7 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 63, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 0) #21, !dbg !13028
  ret void, !dbg !13029
}

; Function Attrs: noinline nounwind optsize
define dso_local void @pmu_ctrl_va28_ldo_mt6385(i8 noundef zeroext %0) local_unnamed_addr #0 !dbg !2401 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !2405, metadata !DIExpression()), !dbg !13030
  %2 = load i8, i8* @pmu_ctrl_va28_ldo_mt6385.version, align 1, !dbg !13031
  switch i8 %2, label %5 [
    i8 17, label %22
    i8 0, label %3
  ], !dbg !13033

3:                                                ; preds = %1
  %4 = tail call zeroext i8 @pmu_get_register_value(i16 noundef zeroext 0, i16 noundef zeroext 255, i16 noundef zeroext 0) #21, !dbg !13034
  store i8 %4, i8* @pmu_ctrl_va28_ldo_mt6385.version, align 1, !dbg !13037
  br label %5, !dbg !13038

5:                                                ; preds = %1, %3
  %6 = icmp eq i8 %0, 1, !dbg !13039
  %7 = load i32, i32* @pmu_ctrl_va28_ldo_mt6385.resoure_count, align 4, !dbg !13041
  br i1 %6, label %8, label %15, !dbg !13042

8:                                                ; preds = %5
  %9 = icmp eq i32 %7, 0, !dbg !13043
  br i1 %9, label %10, label %12, !dbg !13046

10:                                               ; preds = %8
  tail call void @PMIC_VR_SLEEP_WKUP_CONFIG(i32 noundef 8, i32 noundef 3, i32 noundef 1, i32 noundef 0) #22, !dbg !13047
  tail call void @PMIC_VR_SLEEP_WKUP_CONFIG(i32 noundef 8, i32 noundef 4, i32 noundef 1, i32 noundef 0) #22, !dbg !13049
  %11 = load i32, i32* @pmu_ctrl_va28_ldo_mt6385.resoure_count, align 4, !dbg !13050
  br label %12, !dbg !13051

12:                                               ; preds = %10, %8
  %13 = phi i32 [ %11, %10 ], [ %7, %8 ], !dbg !13050
  %14 = add i32 %13, 1, !dbg !13050
  br label %20, !dbg !13052

15:                                               ; preds = %5
  %16 = icmp ult i32 %7, 2, !dbg !13053
  br i1 %16, label %17, label %18, !dbg !13056

17:                                               ; preds = %15
  tail call void @PMIC_VR_SLEEP_WKUP_CONFIG(i32 noundef 8, i32 noundef 3, i32 noundef 0, i32 noundef 0) #22, !dbg !13057
  tail call void @PMIC_VR_SLEEP_WKUP_CONFIG(i32 noundef 8, i32 noundef 4, i32 noundef 0, i32 noundef 0) #22, !dbg !13059
  br label %20, !dbg !13060

18:                                               ; preds = %15
  %19 = add i32 %7, -1, !dbg !13061
  br label %20

20:                                               ; preds = %12, %18, %17
  %21 = phi i32 [ 0, %17 ], [ %19, %18 ], [ %14, %12 ]
  store i32 %21, i32* @pmu_ctrl_va28_ldo_mt6385.resoure_count, align 4, !dbg !13041
  br label %22, !dbg !13063

22:                                               ; preds = %20, %1
  ret void, !dbg !13063
}

; Function Attrs: noinline nounwind optsize
define dso_local void @pmu_ctrl_vbt_ldo_mt6385(i8 noundef zeroext %0) local_unnamed_addr #0 !dbg !13064 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !13066, metadata !DIExpression()), !dbg !13067
  %2 = icmp eq i8 %0, 1, !dbg !13068
  %3 = xor i1 %2, true
  %4 = zext i1 %3 to i32
  %5 = zext i1 %2 to i32
  tail call void @PMIC_VR_SLEEP_WKUP_CONFIG(i32 noundef 7, i32 noundef 3, i32 noundef %4, i32 noundef 2) #22, !dbg !13070
  tail call void @PMIC_VR_SLEEP_WKUP_CONFIG(i32 noundef 7, i32 noundef 4, i32 noundef %4, i32 noundef 2) #22, !dbg !13070
  tail call void @PMIC_VR_CONTROL(i32 noundef 7, i32 noundef %5) #22, !dbg !13070
  ret void, !dbg !13071
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local i32 @pmu_get_vcore_setting_index(i8 noundef zeroext %0) local_unnamed_addr #13 !dbg !13072 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !13076, metadata !DIExpression()), !dbg !13079
  call void @llvm.dbg.declare(metadata [7 x i8]* @__const.pmu_get_vcore_setting_index.vcbuck_voval, metadata !13077, metadata !DIExpression()), !dbg !13080
  call void @llvm.dbg.value(metadata i32 0, metadata !13078, metadata !DIExpression()), !dbg !13079
  br label %2, !dbg !13081

2:                                                ; preds = %1, %7
  %3 = phi i32 [ 0, %1 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !13078, metadata !DIExpression()), !dbg !13079
  %4 = getelementptr inbounds [7 x i8], [7 x i8]* @__const.pmu_get_vcore_setting_index.vcbuck_voval, i32 0, i32 %3, !dbg !13083
  %5 = load i8, i8* %4, align 1, !dbg !13083
  %6 = icmp eq i8 %5, %0, !dbg !13087
  br i1 %6, label %10, label %7, !dbg !13088

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %3, 1, !dbg !13089
  call void @llvm.dbg.value(metadata i32 %8, metadata !13078, metadata !DIExpression()), !dbg !13079
  %9 = icmp eq i32 %8, 7, !dbg !13090
  br i1 %9, label %10, label %2, !dbg !13081, !llvm.loop !13091

10:                                               ; preds = %7, %2
  %11 = phi i32 [ %3, %2 ], [ 255, %7 ], !dbg !13079
  ret i32 %11, !dbg !13093
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i8 @pmu_set_vcore_voltage_mt6385(i8 noundef zeroext %0, i8 noundef zeroext %1) local_unnamed_addr #0 !dbg !2410 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !2414, metadata !DIExpression()), !dbg !13094
  call void @llvm.dbg.value(metadata i8 %1, metadata !2415, metadata !DIExpression()), !dbg !13094
  %3 = load i1, i1* @pmu_set_vcore_voltage_mt6385.init, align 1, !dbg !13095
  br i1 %3, label %15, label %4, !dbg !13097

4:                                                ; preds = %2
  %5 = tail call zeroext i8 @pmu_get_register_value(i16 noundef zeroext 319, i16 noundef zeroext 15, i16 noundef zeroext 4) #21, !dbg !13098
  %6 = tail call i32 @pmu_get_vcore_setting_index(i8 noundef zeroext %5) #22, !dbg !13100
  %7 = trunc i32 %6 to i8, !dbg !13100
  store i8 %7, i8* @pmu_set_vcore_voltage_mt6385.old_vcore_lp, align 1, !dbg !13101
  %8 = tail call zeroext i8 @pmu_get_register_value(i16 noundef zeroext 318, i16 noundef zeroext 15, i16 noundef zeroext 4) #21, !dbg !13102
  %9 = tail call i32 @pmu_get_vcore_setting_index(i8 noundef zeroext %8) #22, !dbg !13103
  %10 = trunc i32 %9 to i8, !dbg !13103
  %11 = load volatile i32, i32* inttoptr (i32 -1576271820 to i32*), align 4, !dbg !13104
  %12 = icmp eq i32 %11, 0, !dbg !13106
  %13 = load i8, i8* @pmu_set_vcore_voltage_mt6385.old_vcore_lp, align 1, !dbg !13107
  %14 = select i1 %12, i8 %13, i8 %10, !dbg !13107
  store i8 %14, i8* @pmu_set_vcore_voltage_mt6385.origin_voltage, align 1, !dbg !13107
  store i8 %14, i8* @pmu_set_vcore_voltage_mt6385.old_vcore, align 1, !dbg !13108
  store i1 true, i1* @pmu_set_vcore_voltage_mt6385.init, align 1, !dbg !13109
  br label %15, !dbg !13110

15:                                               ; preds = %4, %2
  %16 = add i8 %1, -7, !dbg !13111
  %17 = icmp ult i8 %16, -5, !dbg !13111
  br i1 %17, label %63, label %18, !dbg !13111

18:                                               ; preds = %15
  %19 = zext i8 %1 to i32, !dbg !13113
  %20 = icmp eq i8 %0, 1, !dbg !13114
  %21 = getelementptr inbounds [7 x i8], [7 x i8]* @pmu_set_vcore_voltage_mt6385.Vcore_Resource_Ctrl, i32 0, i32 %19, !dbg !13116
  %22 = load i8, i8* %21, align 1, !dbg !13116
  br i1 %20, label %25, label %23, !dbg !13117

23:                                               ; preds = %18
  %24 = icmp eq i8 %22, 0, !dbg !13118
  br i1 %24, label %28, label %25, !dbg !13121

25:                                               ; preds = %23, %18
  %26 = phi i8 [ 1, %18 ], [ -1, %23 ]
  %27 = add i8 %22, %26, !dbg !13116
  store i8 %27, i8* %21, align 1, !dbg !13116
  br label %28, !dbg !13122

28:                                               ; preds = %25, %23
  br label %29, !dbg !13122

29:                                               ; preds = %28, %34
  %30 = phi i32 [ %35, %34 ], [ 6, %28 ]
  call void @llvm.dbg.value(metadata i32 %30, metadata !2416, metadata !DIExpression()), !dbg !13094
  %31 = getelementptr inbounds [7 x i8], [7 x i8]* @pmu_set_vcore_voltage_mt6385.Vcore_Resource_Ctrl, i32 0, i32 %30, !dbg !13124
  %32 = load i8, i8* %31, align 1, !dbg !13124
  %33 = icmp eq i8 %32, 0, !dbg !13128
  br i1 %33, label %34, label %37, !dbg !13129

34:                                               ; preds = %29
  %35 = add nsw i32 %30, -1, !dbg !13130
  call void @llvm.dbg.value(metadata i32 %35, metadata !2416, metadata !DIExpression()), !dbg !13094
  %36 = icmp eq i32 %30, 0, !dbg !13131
  br i1 %36, label %39, label %29, !dbg !13122, !llvm.loop !13132

37:                                               ; preds = %29
  %38 = icmp slt i32 %30, 0, !dbg !13134
  br i1 %38, label %39, label %42, !dbg !13136

39:                                               ; preds = %34, %37
  %40 = load i8, i8* @pmu_set_vcore_voltage_mt6385.origin_voltage, align 1, !dbg !13136
  %41 = zext i8 %40 to i32, !dbg !13136
  br label %42, !dbg !13136

42:                                               ; preds = %37, %39
  %43 = phi i32 [ %41, %39 ], [ %30, %37 ]
  call void @llvm.dbg.value(metadata i32 %43, metadata !2416, metadata !DIExpression()), !dbg !13094
  %44 = load i8, i8* @pmu_set_vcore_voltage_mt6385.old_vcore, align 1, !dbg !13137
  %45 = zext i8 %44 to i32, !dbg !13137
  %46 = icmp eq i32 %43, %45, !dbg !13139
  %47 = trunc i32 %43 to i8, !dbg !13094
  br i1 %46, label %63, label %48, !dbg !13140

48:                                               ; preds = %42
  store i8 %47, i8* @pmu_set_vcore_voltage_mt6385.old_vcore, align 1, !dbg !13141
  %49 = icmp eq i32 %43, 6, !dbg !13143
  br i1 %49, label %50, label %54, !dbg !13145

50:                                               ; preds = %48
  %51 = load volatile i32, i32* inttoptr (i32 -1576271820 to i32*), align 4, !dbg !13146
  %52 = icmp eq i32 %51, 0, !dbg !13149
  br i1 %52, label %53, label %63, !dbg !13150

53:                                               ; preds = %50
  tail call void @PSI_LP_RUN_AT_HP(i32 noundef 1) #21, !dbg !13151
  br label %63, !dbg !13153

54:                                               ; preds = %48
  %55 = load i8, i8* @pmu_set_vcore_voltage_mt6385.old_vcore_lp, align 1, !dbg !13154
  %56 = zext i8 %55 to i32, !dbg !13154
  %57 = icmp eq i32 %43, %56, !dbg !13157
  br i1 %57, label %59, label %58, !dbg !13158

58:                                               ; preds = %54
  store i8 %47, i8* @pmu_set_vcore_voltage_mt6385.old_vcore_lp, align 1, !dbg !13159
  tail call void @PMIC_VCORE_VOSEL_CONFIG(i32 noundef 2, i32 noundef %43) #22, !dbg !13161
  br label %59, !dbg !13162

59:                                               ; preds = %58, %54
  %60 = load volatile i32, i32* inttoptr (i32 -1576271820 to i32*), align 4, !dbg !13163
  %61 = icmp eq i32 %60, 1, !dbg !13165
  br i1 %61, label %62, label %63, !dbg !13166

62:                                               ; preds = %59
  tail call void @PSI_HP_RUN_AT_LP(i32 noundef 1) #21, !dbg !13167
  br label %63, !dbg !13169

63:                                               ; preds = %42, %59, %62, %50, %53, %15
  %64 = phi i8 [ -1, %15 ], [ 6, %53 ], [ 6, %50 ], [ %47, %62 ], [ %47, %59 ], [ %47, %42 ], !dbg !13094
  ret i8 %64, !dbg !13170
}

; Function Attrs: optsize
declare dso_local void @PSI_LP_RUN_AT_HP(i32 noundef) local_unnamed_addr #2

; Function Attrs: optsize
declare dso_local void @PSI_HP_RUN_AT_LP(i32 noundef) local_unnamed_addr #2

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i8 @pmu_get_vcore_voltage_mt6385() local_unnamed_addr #0 !dbg !13171 {
  %1 = tail call zeroext i8 @pmu_get_register_value(i16 noundef zeroext 65, i16 noundef zeroext 3, i16 noundef zeroext 6) #21, !dbg !13175
  call void @llvm.dbg.value(metadata i8 %1, metadata !13173, metadata !DIExpression()), !dbg !13176
  %2 = icmp eq i8 %1, 3, !dbg !13177
  %3 = select i1 %2, i16 319, i16 318
  %4 = tail call zeroext i8 @pmu_get_register_value(i16 noundef zeroext %3, i16 noundef zeroext 15, i16 noundef zeroext 4) #21, !dbg !13179
  %5 = tail call i32 @pmu_get_vcore_setting_index(i8 noundef zeroext %4) #22, !dbg !13179
  %6 = trunc i32 %5 to i8, !dbg !13179
  call void @llvm.dbg.value(metadata i8 %6, metadata !13174, metadata !DIExpression()), !dbg !13176
  ret i8 %6, !dbg !13180
}

; Function Attrs: noinline nounwind optsize
define dso_local void @pmu_set_vcore_s1_buck_mt6385() local_unnamed_addr #0 !dbg !2428 {
  call void @llvm.dbg.declare(metadata [7 x i32]* @__const.pmu_set_vcore_s1_buck_mt6385.vcbuck_voval, metadata !2430, metadata !DIExpression()), !dbg !13181
  %1 = tail call zeroext i8 @pmu_get_vcore_voltage() #21, !dbg !13182
  %2 = zext i8 %1 to i32, !dbg !13183
  %3 = load i32, i32* @pmu_set_vcore_s1_buck_mt6385.S1_setting, align 4, !dbg !13184
  %4 = icmp eq i32 %3, %2, !dbg !13186
  br i1 %4, label %11, label %5, !dbg !13187

5:                                                ; preds = %0
  store i32 %2, i32* @pmu_set_vcore_s1_buck_mt6385.S1_setting, align 4, !dbg !13188
  tail call void @pmu_set_vrc_key_mt6385(i32 noundef 0) #22, !dbg !13190
  tail call void @pmu_set_ovr_mode_mt6385(i32 noundef 1) #22, !dbg !13191
  %6 = load i32, i32* @pmu_set_vcore_s1_buck_mt6385.S1_setting, align 4, !dbg !13192
  %7 = getelementptr inbounds [7 x i32], [7 x i32]* @__const.pmu_set_vcore_s1_buck_mt6385.vcbuck_voval, i32 0, i32 %6, !dbg !13193
  %8 = load i32, i32* %7, align 4, !dbg !13193
  %9 = trunc i32 %8 to i16, !dbg !13193
  %10 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 320, i16 noundef zeroext 15, i16 noundef zeroext 4, i16 noundef zeroext %9) #21, !dbg !13194
  tail call void @pmu_set_ovr_mode_mt6385(i32 noundef 0) #22, !dbg !13195
  tail call void @pmu_set_vrc_key_mt6385(i32 noundef 1) #22, !dbg !13196
  br label %11, !dbg !13197

11:                                               ; preds = %5, %0
  ret void, !dbg !13198
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i8 @pmu_get_usb_input_status_mt6385() local_unnamed_addr #0 !dbg !13199 {
  %1 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 62, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 252) #21, !dbg !13202
  %2 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 63, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 218) #21, !dbg !13203
  %3 = tail call zeroext i8 @pmu_get_register_value(i16 noundef zeroext 135, i16 noundef zeroext 1, i16 noundef zeroext 5) #21, !dbg !13204
  call void @llvm.dbg.value(metadata i8 %3, metadata !13201, metadata !DIExpression()), !dbg !13205
  %4 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 62, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 0) #21, !dbg !13206
  %5 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 63, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 0) #21, !dbg !13207
  ret i8 %3, !dbg !13208
}

; Function Attrs: noinline nounwind optsize
define dso_local void @pmu_enter_power_off_mt6385() local_unnamed_addr #0 !dbg !13209 {
  %1 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 75, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext 0) #21, !dbg !13210
  ret void, !dbg !13211
}

; Function Attrs: noinline nounwind optsize
define dso_local void @pmu_reset_mt6385() local_unnamed_addr #0 !dbg !13212 {
  %1 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 62, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 252) #21, !dbg !13213
  %2 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 63, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 218) #21, !dbg !13214
  %3 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 75, i16 noundef zeroext 1, i16 noundef zeroext 5, i16 noundef zeroext 1) #21, !dbg !13215
  %4 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 62, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 0) #21, !dbg !13216
  %5 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 63, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 0) #21, !dbg !13217
  ret void, !dbg !13218
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @__EMI_GetSR(i32 noundef %0) local_unnamed_addr #3 section ".tcm_code" !dbg !13219 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13221, metadata !DIExpression()), !dbg !13223
  %2 = shl i32 %0, 20, !dbg !13224
  %3 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !13225
  %4 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %3, i32 0, i32 33, !dbg !13226
  store volatile i32 %2, i32* %4, align 4, !dbg !13227
  %5 = load volatile i32, i32* %4, align 4, !dbg !13228
  %6 = or i32 %5, 65536, !dbg !13229
  store volatile i32 %6, i32* %4, align 4, !dbg !13230
  br label %7, !dbg !13231

7:                                                ; preds = %7, %1
  %8 = load volatile i32, i32* %4, align 4, !dbg !13232
  %9 = and i32 %8, 1, !dbg !13233
  %10 = icmp eq i32 %9, 0, !dbg !13234
  br i1 %10, label %7, label %11, !dbg !13231, !llvm.loop !13235

11:                                               ; preds = %7
  %12 = load volatile i32, i32* %4, align 4, !dbg !13237
  %13 = lshr i32 %12, 8, !dbg !13238
  %14 = and i32 %13, 255, !dbg !13238
  call void @llvm.dbg.value(metadata i32 %14, metadata !13222, metadata !DIExpression()), !dbg !13223
  ret i32 %14, !dbg !13239
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @__EMI_SetSR(i32 noundef %0, i32 noundef %1) local_unnamed_addr #3 section ".tcm_code" !dbg !13240 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13242, metadata !DIExpression()), !dbg !13244
  call void @llvm.dbg.value(metadata i32 %1, metadata !13243, metadata !DIExpression()), !dbg !13244
  call void @llvm.dbg.value(metadata i32 %1, metadata !13243, metadata !DIExpression(DW_OP_constu, 255, DW_OP_and, DW_OP_stack_value)), !dbg !13244
  %3 = shl i32 %1, 24, !dbg !13245
  %4 = shl i32 %0, 20, !dbg !13246
  %5 = or i32 %4, %3, !dbg !13247
  %6 = or i32 %5, 131072, !dbg !13247
  %7 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !13248
  %8 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %7, i32 0, i32 33, !dbg !13249
  store volatile i32 %6, i32* %8, align 4, !dbg !13250
  %9 = load volatile i32, i32* %8, align 4, !dbg !13251
  %10 = or i32 %9, 65536, !dbg !13252
  store volatile i32 %10, i32* %8, align 4, !dbg !13253
  br label %11, !dbg !13254

11:                                               ; preds = %11, %2
  %12 = load volatile i32, i32* %8, align 4, !dbg !13255
  %13 = and i32 %12, 1, !dbg !13256
  %14 = icmp eq i32 %13, 0, !dbg !13257
  br i1 %14, label %11, label %15, !dbg !13254, !llvm.loop !13258

15:                                               ; preds = %11
  ret void, !dbg !13260
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @__EMI_SetRegValfromCMCP() local_unnamed_addr #6 section ".tcm_code" !dbg !13261 {
  %1 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 0), align 4, !dbg !13262
  store i32 %1, i32* @EMI_GENA_VAL, align 4, !dbg !13263
  %2 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 1), align 4, !dbg !13264
  store i32 %2, i32* @EMI_RDCT_VAL, align 4, !dbg !13265
  %3 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 2), align 4, !dbg !13266
  store i32 %3, i32* @EMI_DSRAM_VAL, align 4, !dbg !13267
  %4 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 3), align 4, !dbg !13268
  store i32 %4, i32* @EMI_MSRAM_VAL, align 4, !dbg !13269
  %5 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 4), align 4, !dbg !13270
  store i32 %5, i32* @EMI_IDL_C_VAL, align 4, !dbg !13271
  %6 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 5), align 4, !dbg !13272
  store i32 %6, i32* @EMI_IDL_D_VAL, align 4, !dbg !13273
  %7 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 6), align 4, !dbg !13274
  store i32 %7, i32* @EMI_IDL_E_VAL, align 4, !dbg !13275
  %8 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 7), align 4, !dbg !13276
  store i32 %8, i32* @EMI_ODL_C_VAL, align 4, !dbg !13277
  %9 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 8), align 4, !dbg !13278
  store i32 %9, i32* @EMI_ODL_D_VAL, align 4, !dbg !13279
  %10 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 9), align 4, !dbg !13280
  store i32 %10, i32* @EMI_ODL_E_VAL, align 4, !dbg !13281
  %11 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 10), align 4, !dbg !13282
  store i32 %11, i32* @EMI_ODL_F_VAL, align 4, !dbg !13283
  %12 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 11), align 4, !dbg !13284
  store i32 %12, i32* @EMI_IO_A_VAL, align 4, !dbg !13285
  %13 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 12), align 4, !dbg !13286
  store i32 %13, i32* @EMI_IO_B_VAL, align 4, !dbg !13287
  ret void, !dbg !13288
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @__EMI_EnableBandwidthLimiter() local_unnamed_addr #3 section ".tcm_code" !dbg !13289 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !13292
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 35, !dbg !13293
  store volatile i32 21553, i32* %2, align 4, !dbg !13294
  %3 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 37, !dbg !13295
  store volatile i32 20489, i32* %3, align 4, !dbg !13296
  %4 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 39, !dbg !13297
  store volatile i32 20550, i32* %4, align 4, !dbg !13298
  ret i32 0, !dbg !13299
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @TestCase_MBIST() local_unnamed_addr #3 section ".tcm_code" !dbg !13300 {
  call void @llvm.dbg.declare(metadata [2 x i32]* @__const.TestCase_MBIST.mbist_data, metadata !13304, metadata !DIExpression()), !dbg !13308
  call void @llvm.dbg.value(metadata i32 0, metadata !13302, metadata !DIExpression()), !dbg !13309
  call void @llvm.dbg.value(metadata i32 16384, metadata !13303, metadata !DIExpression()), !dbg !13309
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !13310
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 65, !dbg !13311
  store volatile i32 0, i32* %2, align 4, !dbg !13312
  call void @llvm.dbg.value(metadata i32 0, metadata !13306, metadata !DIExpression()), !dbg !13309
  %3 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 67
  %4 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 71
  call void @llvm.dbg.value(metadata i32 0, metadata !13306, metadata !DIExpression()), !dbg !13309
  br label %5, !dbg !13313

5:                                                ; preds = %0, %34
  %6 = phi i32 [ 0, %0 ], [ %35, %34 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !13306, metadata !DIExpression()), !dbg !13309
  %7 = shl i32 %6, 12
  call void @llvm.dbg.value(metadata i32 0, metadata !13305, metadata !DIExpression()), !dbg !13309
  br label %8, !dbg !13315

8:                                                ; preds = %5, %31
  %9 = phi i32 [ 0, %5 ], [ %32, %31 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !13305, metadata !DIExpression()), !dbg !13309
  call void @llvm.dbg.value(metadata i32 0, metadata !13307, metadata !DIExpression()), !dbg !13309
  %10 = getelementptr inbounds [2 x i32], [2 x i32]* @__const.TestCase_MBIST.mbist_data, i32 0, i32 %9
  br label %13, !dbg !13319

11:                                               ; preds = %26
  call void @llvm.dbg.value(metadata i32 undef, metadata !13307, metadata !DIExpression()), !dbg !13309
  %12 = icmp eq i32 %30, 2, !dbg !13323
  br i1 %12, label %31, label %13, !dbg !13319, !llvm.loop !13325

13:                                               ; preds = %8, %11
  %14 = phi i32 [ 0, %8 ], [ %30, %11 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !13307, metadata !DIExpression()), !dbg !13309
  store volatile i32 0, i32* %2, align 4, !dbg !13327
  store volatile i32 63, i32* %3, align 4, !dbg !13329
  %15 = load i32, i32* %10, align 4, !dbg !13330
  %16 = shl i32 %15, 16, !dbg !13331
  %17 = shl nuw nsw i32 %14, 13, !dbg !13332
  %18 = or i32 %17, %7, !dbg !13333
  %19 = or i32 %18, %16, !dbg !13334
  store volatile i32 %19, i32* %2, align 4, !dbg !13335
  %20 = load volatile i32, i32* %2, align 4, !dbg !13336
  %21 = or i32 %20, 805, !dbg !13336
  store volatile i32 %21, i32* %2, align 4, !dbg !13336
  br label %22, !dbg !13337

22:                                               ; preds = %22, %13
  %23 = load volatile i32, i32* %4, align 4, !dbg !13338
  %24 = and i32 %23, 2, !dbg !13339
  %25 = icmp eq i32 %24, 0, !dbg !13340
  br i1 %25, label %22, label %26, !dbg !13337, !llvm.loop !13341

26:                                               ; preds = %22
  %27 = load volatile i32, i32* %4, align 4, !dbg !13343
  %28 = and i32 %27, 1, !dbg !13345
  %29 = icmp eq i32 %28, 0, !dbg !13346
  %30 = add nuw nsw i32 %14, 1, !dbg !13347
  call void @llvm.dbg.value(metadata i32 %30, metadata !13307, metadata !DIExpression()), !dbg !13309
  br i1 %29, label %11, label %37, !dbg !13348

31:                                               ; preds = %11
  %32 = add nuw nsw i32 %9, 1, !dbg !13349
  call void @llvm.dbg.value(metadata i32 %32, metadata !13305, metadata !DIExpression()), !dbg !13309
  %33 = icmp eq i32 %32, 2, !dbg !13350
  br i1 %33, label %34, label %8, !dbg !13315, !llvm.loop !13351

34:                                               ; preds = %31
  %35 = add nuw nsw i32 %6, 1, !dbg !13353
  call void @llvm.dbg.value(metadata i32 %35, metadata !13306, metadata !DIExpression()), !dbg !13309
  %36 = icmp eq i32 %35, 2, !dbg !13354
  br i1 %36, label %37, label %5, !dbg !13313, !llvm.loop !13355

37:                                               ; preds = %34, %26
  %38 = phi i32 [ -1, %26 ], [ 0, %34 ], !dbg !13309
  store volatile i32 0, i32* %2, align 4, !dbg !13309
  ret i32 %38, !dbg !13357
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @__EMI_DataAutoTrackingMbistTest() local_unnamed_addr #3 section ".tcm_code" !dbg !13358 {
  %1 = tail call i32 @TestCase_MBIST() #22, !dbg !13359
  %2 = icmp ne i32 %1, 0, !dbg !13361
  %3 = sext i1 %2 to i32, !dbg !13362
  ret i32 %3, !dbg !13363
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @__EMI_EnableDataAutoTracking() local_unnamed_addr #3 section ".tcm_code" !dbg !13364 {
  call void @llvm.dbg.value(metadata i32 31, metadata !13366, metadata !DIExpression()), !dbg !13368
  call void @llvm.dbg.value(metadata i32 0, metadata !13367, metadata !DIExpression()), !dbg !13368
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !13369
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 7, !dbg !13370
  store volatile i32 0, i32* %2, align 4, !dbg !13371
  %3 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 9, !dbg !13372
  store volatile i32 0, i32* %3, align 4, !dbg !13373
  %4 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 11, !dbg !13374
  store volatile i32 0, i32* %4, align 4, !dbg !13375
  %5 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 13, !dbg !13376
  store volatile i32 0, i32* %5, align 4, !dbg !13377
  call void @llvm.dbg.value(metadata i32 31, metadata !13366, metadata !DIExpression()), !dbg !13368
  %6 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 9, !dbg !13378
  store volatile i32 522133279, i32* %6, align 4, !dbg !13382
  %7 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 11, !dbg !13383
  store volatile i32 522133279, i32* %7, align 4, !dbg !13384
  %8 = tail call i32 @__EMI_DataAutoTrackingMbistTest() #22, !dbg !13385
  %9 = icmp eq i32 %8, 0, !dbg !13387
  call void @llvm.dbg.value(metadata i32 31, metadata !13366, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !13368
  br i1 %9, label %36, label %10, !dbg !13388

10:                                               ; preds = %0, %13
  %11 = phi i32 [ %14, %13 ], [ 31, %0 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !13366, metadata !DIExpression()), !dbg !13368
  call void @llvm.dbg.value(metadata i32 %11, metadata !13366, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !13368
  call void @llvm.dbg.value(metadata i32 %11, metadata !13366, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !13368
  %12 = icmp eq i32 %11, 0, !dbg !13389
  br i1 %12, label %26, label %13, !dbg !13390, !llvm.loop !13391

13:                                               ; preds = %10
  %14 = add nsw i32 %11, -1, !dbg !13393
  call void @llvm.dbg.value(metadata i32 %14, metadata !13366, metadata !DIExpression()), !dbg !13368
  %15 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !13394
  %16 = shl i32 %14, 24, !dbg !13395
  %17 = shl i32 %14, 16, !dbg !13396
  %18 = shl i32 %14, 8, !dbg !13397
  %19 = or i32 %17, %14, !dbg !13398
  %20 = or i32 %19, %16, !dbg !13399
  %21 = or i32 %20, %18, !dbg !13400
  %22 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %15, i32 0, i32 9, !dbg !13378
  store volatile i32 %21, i32* %22, align 4, !dbg !13382
  %23 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %15, i32 0, i32 11, !dbg !13383
  store volatile i32 %21, i32* %23, align 4, !dbg !13384
  %24 = tail call i32 @__EMI_DataAutoTrackingMbistTest() #22, !dbg !13385
  %25 = icmp eq i32 %24, 0, !dbg !13387
  call void @llvm.dbg.value(metadata i32 %14, metadata !13366, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !13368
  br i1 %25, label %36, label %10, !dbg !13388

26:                                               ; preds = %10, %26
  %27 = phi i32 [ %33, %26 ], [ 1, %10 ]
  call void @llvm.dbg.value(metadata i32 %27, metadata !13367, metadata !DIExpression()), !dbg !13368
  %28 = shl nuw nsw i32 %27, 16, !dbg !13401
  %29 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !13407
  %30 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %29, i32 0, i32 13, !dbg !13408
  store volatile i32 %28, i32* %30, align 4, !dbg !13409
  %31 = tail call i32 @__EMI_DataAutoTrackingMbistTest() #22, !dbg !13410
  %32 = icmp eq i32 %31, 0, !dbg !13412
  call void @llvm.dbg.value(metadata i32 %27, metadata !13367, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !13368
  %33 = add nuw nsw i32 %27, 1
  %34 = icmp eq i32 %33, 32
  %35 = select i1 %32, i1 true, i1 %34, !dbg !13413
  call void @llvm.dbg.value(metadata i32 %33, metadata !13367, metadata !DIExpression()), !dbg !13368
  call void @llvm.dbg.value(metadata i32 %27, metadata !13367, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !13368
  br i1 %35, label %36, label %26, !dbg !13413, !llvm.loop !13414

36:                                               ; preds = %13, %26, %0
  ret void, !dbg !13417
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @EMI_PowerOn_Init() local_unnamed_addr #3 section ".tcm_code" !dbg !13418 {
  store volatile i32 0, i32* inttoptr (i32 -1575944184 to i32*), align 8, !dbg !13419
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !13420
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 27, !dbg !13421
  store volatile i32 1, i32* %2, align 4, !dbg !13422
  br label %3, !dbg !13423

3:                                                ; preds = %3, %0
  %4 = load volatile i32, i32* %2, align 4, !dbg !13424
  %5 = and i32 %4, 2, !dbg !13425
  %6 = icmp eq i32 %5, 0, !dbg !13425
  br i1 %6, label %3, label %7, !dbg !13423, !llvm.loop !13426

7:                                                ; preds = %3
  store volatile i32 0, i32* %2, align 4, !dbg !13428
  br label %8, !dbg !13429

8:                                                ; preds = %8, %7
  %9 = load volatile i32, i32* %2, align 4, !dbg !13430
  %10 = and i32 %9, 2, !dbg !13431
  %11 = icmp eq i32 %10, 0, !dbg !13431
  br i1 %11, label %12, label %8, !dbg !13429, !llvm.loop !13432

12:                                               ; preds = %8
  store volatile i32 1515870810, i32* null, align 2147483648, !dbg !13434
  store volatile i32 1515870810, i32* inttoptr (i32 4 to i32*), align 4, !dbg !13435
  %13 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4
  %14 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %13, i32 0, i32 33
  br label %15, !dbg !13436

15:                                               ; preds = %15, %12
  %16 = load volatile i32, i32* %14, align 4, !dbg !13437
  %17 = and i32 %16, 1, !dbg !13438
  %18 = icmp eq i32 %17, 0, !dbg !13439
  br i1 %18, label %15, label %19, !dbg !13436, !llvm.loop !13440

19:                                               ; preds = %15
  tail call void @__EMI_SetSR(i32 noundef 0, i32 noundef 15) #22, !dbg !13442
  tail call void @__EMI_SetSR(i32 noundef 4, i32 noundef 8) #22, !dbg !13443
  %20 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4
  %21 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %20, i32 0, i32 33
  br label %22, !dbg !13444

22:                                               ; preds = %22, %19
  %23 = load volatile i32, i32* %21, align 4, !dbg !13445
  %24 = and i32 %23, 1, !dbg !13446
  %25 = icmp eq i32 %24, 0, !dbg !13447
  br i1 %25, label %22, label %26, !dbg !13444, !llvm.loop !13448

26:                                               ; preds = %22
  %27 = load volatile i32, i32* inttoptr (i32 -1577058296 to i32*), align 8, !dbg !13450
  %28 = icmp eq i32 %27, 9507, !dbg !13452
  br i1 %28, label %29, label %37, !dbg !13453

29:                                               ; preds = %26
  %30 = load volatile i32, i32* inttoptr (i32 -1576664700 to i32*), align 4, !dbg !13454
  %31 = and i32 %30, 15, !dbg !13457
  %32 = icmp eq i32 %31, 2, !dbg !13458
  %33 = load volatile i32, i32* inttoptr (i32 -1602224060 to i32*), align 4, !dbg !13459
  %34 = and i32 %33, -128, !dbg !13459
  %35 = select i1 %32, i32 1, i32 7
  %36 = or i32 %34, %35, !dbg !13459
  store volatile i32 %36, i32* inttoptr (i32 -1602224060 to i32*), align 4, !dbg !13459
  br label %37, !dbg !13460

37:                                               ; preds = %29, %26
  ret void, !dbg !13460
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local signext i8 @custom_setEMI() local_unnamed_addr #3 section ".tcm_code" !dbg !13461 {
  tail call void @EMI_PowerOn_Init() #22, !dbg !13464
  tail call void @__EMI_SetRegValfromCMCP() #22, !dbg !13465
  %1 = tail call i32 @__EMI_GetSR(i32 noundef 0) #22, !dbg !13466
  store i32 %1, i32* @__EMI_CurSR0, align 4, !dbg !13467
  %2 = tail call i32 @__EMI_GetSR(i32 noundef 1) #22, !dbg !13468
  store i32 %2, i32* @__EMI_CurSR1, align 4, !dbg !13469
  %3 = tail call i32 @__EMI_GetSR(i32 noundef 2) #22, !dbg !13470
  store i32 %3, i32* @__EMI_CurSR2, align 4, !dbg !13471
  ret i8 0, !dbg !13472
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local signext i8 @custom_setAdvEMI() local_unnamed_addr #3 section ".tcm_code" !dbg !13473 {
  %1 = load i32, i32* @EMI_IO_A_VAL, align 4, !dbg !13474
  %2 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !13475
  %3 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 23, !dbg !13476
  store volatile i32 %1, i32* %3, align 4, !dbg !13477
  %4 = load i32, i32* @EMI_IO_B_VAL, align 4, !dbg !13478
  %5 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 25, !dbg !13479
  store volatile i32 %4, i32* %5, align 4, !dbg !13480
  %6 = load i32, i32* @EMI_GENA_VAL, align 4, !dbg !13481
  %7 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 3, !dbg !13482
  store volatile i32 %6, i32* %7, align 4, !dbg !13483
  %8 = load i32, i32* @EMI_RDCT_VAL, align 4, !dbg !13484
  %9 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 5, !dbg !13485
  store volatile i32 %8, i32* %9, align 4, !dbg !13486
  %10 = load i32, i32* @EMI_DSRAM_VAL, align 4, !dbg !13487
  %11 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 29, !dbg !13488
  store volatile i32 %10, i32* %11, align 4, !dbg !13489
  %12 = load i32, i32* @EMI_MSRAM_VAL, align 4, !dbg !13490
  %13 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 31, !dbg !13491
  store volatile i32 %12, i32* %13, align 4, !dbg !13492
  %14 = load i32, i32* @EMI_IDL_C_VAL, align 4, !dbg !13493
  %15 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 9, !dbg !13494
  store volatile i32 %14, i32* %15, align 4, !dbg !13495
  %16 = load i32, i32* @EMI_IDL_D_VAL, align 4, !dbg !13496
  %17 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 11, !dbg !13497
  store volatile i32 %16, i32* %17, align 4, !dbg !13498
  %18 = load i32, i32* @EMI_IDL_E_VAL, align 4, !dbg !13499
  %19 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 13, !dbg !13500
  store volatile i32 %18, i32* %19, align 4, !dbg !13501
  %20 = load i32, i32* @EMI_ODL_C_VAL, align 4, !dbg !13502
  %21 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 15, !dbg !13503
  store volatile i32 %20, i32* %21, align 4, !dbg !13504
  %22 = load i32, i32* @EMI_ODL_D_VAL, align 4, !dbg !13505
  %23 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 17, !dbg !13506
  store volatile i32 %22, i32* %23, align 4, !dbg !13507
  %24 = load i32, i32* @EMI_ODL_E_VAL, align 4, !dbg !13508
  %25 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 19, !dbg !13509
  store volatile i32 %24, i32* %25, align 4, !dbg !13510
  %26 = load i32, i32* @EMI_ODL_F_VAL, align 4, !dbg !13511
  %27 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 21, !dbg !13512
  store volatile i32 %26, i32* %27, align 4, !dbg !13513
  tail call void @__EMI_EnableDataAutoTracking() #22, !dbg !13514
  %28 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !13515
  %29 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %28, i32 0, i32 7, !dbg !13516
  store volatile i32 806289408, i32* %29, align 4, !dbg !13517
  br label %30, !dbg !13518

30:                                               ; preds = %30, %0
  %31 = load volatile i32, i32* %29, align 4, !dbg !13519
  %32 = and i32 %31, 128, !dbg !13520
  %33 = icmp eq i32 %32, 0, !dbg !13520
  br i1 %33, label %30, label %34, !dbg !13518, !llvm.loop !13521

34:                                               ; preds = %30
  store volatile i32 1880031232, i32* %29, align 4, !dbg !13523
  br label %35, !dbg !13524

35:                                               ; preds = %35, %34
  %36 = load volatile i32, i32* %29, align 4, !dbg !13525
  %37 = and i32 %36, 128, !dbg !13526
  %38 = icmp eq i32 %37, 0, !dbg !13526
  br i1 %38, label %39, label %35, !dbg !13524, !llvm.loop !13527

39:                                               ; preds = %35
  store volatile i32 269418496, i32* %29, align 4, !dbg !13529
  %40 = tail call i32 @__EMI_EnableBandwidthLimiter() #22, !dbg !13530
  ret i8 0, !dbg !13531
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @EMI_Setting_Save() local_unnamed_addr #3 section ".tcm_code" !dbg !13532 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !13533
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 1, !dbg !13534
  %3 = load volatile i32, i32* %2, align 4, !dbg !13534
  store volatile i32 %3, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 1), align 4, !dbg !13535
  %4 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 3, !dbg !13536
  %5 = load volatile i32, i32* %4, align 4, !dbg !13536
  store volatile i32 %5, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 3), align 4, !dbg !13537
  %6 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 5, !dbg !13538
  %7 = load volatile i32, i32* %6, align 4, !dbg !13538
  store volatile i32 %7, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 5), align 4, !dbg !13539
  %8 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 9, !dbg !13540
  %9 = load volatile i32, i32* %8, align 4, !dbg !13540
  store volatile i32 %9, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 9), align 4, !dbg !13541
  %10 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 11, !dbg !13542
  %11 = load volatile i32, i32* %10, align 4, !dbg !13542
  store volatile i32 %11, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 11), align 4, !dbg !13543
  %12 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 13, !dbg !13544
  %13 = load volatile i32, i32* %12, align 4, !dbg !13544
  store volatile i32 %13, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 13), align 4, !dbg !13545
  %14 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 15, !dbg !13546
  %15 = load volatile i32, i32* %14, align 4, !dbg !13546
  store volatile i32 %15, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 15), align 4, !dbg !13547
  %16 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 17, !dbg !13548
  %17 = load volatile i32, i32* %16, align 4, !dbg !13548
  store volatile i32 %17, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 17), align 4, !dbg !13549
  %18 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 19, !dbg !13550
  %19 = load volatile i32, i32* %18, align 4, !dbg !13550
  store volatile i32 %19, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 19), align 4, !dbg !13551
  %20 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 21, !dbg !13552
  %21 = load volatile i32, i32* %20, align 4, !dbg !13552
  store volatile i32 %21, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 21), align 4, !dbg !13553
  %22 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 23, !dbg !13554
  %23 = load volatile i32, i32* %22, align 4, !dbg !13554
  store volatile i32 %23, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 23), align 4, !dbg !13555
  %24 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 25, !dbg !13556
  %25 = load volatile i32, i32* %24, align 4, !dbg !13556
  store volatile i32 %25, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 25), align 4, !dbg !13557
  %26 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 29, !dbg !13558
  %27 = load volatile i32, i32* %26, align 4, !dbg !13558
  store volatile i32 %27, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 29), align 4, !dbg !13559
  %28 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 31, !dbg !13560
  %29 = load volatile i32, i32* %28, align 4, !dbg !13560
  store volatile i32 %29, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 31), align 4, !dbg !13561
  %30 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 35, !dbg !13562
  %31 = load volatile i32, i32* %30, align 4, !dbg !13562
  store volatile i32 %31, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 35), align 4, !dbg !13563
  %32 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 37, !dbg !13564
  %33 = load volatile i32, i32* %32, align 4, !dbg !13564
  store volatile i32 %33, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 37), align 4, !dbg !13565
  %34 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 39, !dbg !13566
  %35 = load volatile i32, i32* %34, align 4, !dbg !13566
  store volatile i32 %35, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 39), align 4, !dbg !13567
  %36 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 41, !dbg !13568
  %37 = load volatile i32, i32* %36, align 4, !dbg !13568
  store volatile i32 %37, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 41), align 4, !dbg !13569
  %38 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 43, !dbg !13570
  %39 = load volatile i32, i32* %38, align 4, !dbg !13570
  store volatile i32 %39, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 43), align 4, !dbg !13571
  %40 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 45, !dbg !13572
  %41 = load volatile i32, i32* %40, align 4, !dbg !13572
  store volatile i32 %41, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 45), align 4, !dbg !13573
  ret void, !dbg !13574
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @EMI_Setting_restore() local_unnamed_addr #3 section ".tcm_code" !dbg !13575 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 1
  br label %3, !dbg !13576

3:                                                ; preds = %3, %0
  %4 = load volatile i32, i32* %2, align 4, !dbg !13577
  %5 = and i32 %4, 17, !dbg !13578
  %6 = icmp eq i32 %5, 17, !dbg !13579
  br i1 %6, label %7, label %3, !dbg !13576, !llvm.loop !13580

7:                                                ; preds = %3
  %8 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 45), align 4, !dbg !13582
  %9 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 45, !dbg !13583
  store volatile i32 %8, i32* %9, align 4, !dbg !13584
  %10 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 43), align 4, !dbg !13585
  %11 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 43, !dbg !13586
  store volatile i32 %10, i32* %11, align 4, !dbg !13587
  %12 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 41), align 4, !dbg !13588
  %13 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 41, !dbg !13589
  store volatile i32 %12, i32* %13, align 4, !dbg !13590
  %14 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 39), align 4, !dbg !13591
  %15 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 39, !dbg !13592
  store volatile i32 %14, i32* %15, align 4, !dbg !13593
  %16 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 37), align 4, !dbg !13594
  %17 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 37, !dbg !13595
  store volatile i32 %16, i32* %17, align 4, !dbg !13596
  %18 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 35), align 4, !dbg !13597
  %19 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 35, !dbg !13598
  store volatile i32 %18, i32* %19, align 4, !dbg !13599
  %20 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 31), align 4, !dbg !13600
  %21 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 31, !dbg !13601
  store volatile i32 %20, i32* %21, align 4, !dbg !13602
  %22 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 29), align 4, !dbg !13603
  %23 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 29, !dbg !13604
  store volatile i32 %22, i32* %23, align 4, !dbg !13605
  %24 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 25), align 4, !dbg !13606
  %25 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 25, !dbg !13607
  store volatile i32 %24, i32* %25, align 4, !dbg !13608
  %26 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 23), align 4, !dbg !13609
  %27 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 23, !dbg !13610
  store volatile i32 %26, i32* %27, align 4, !dbg !13611
  %28 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 21), align 4, !dbg !13612
  %29 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 21, !dbg !13613
  store volatile i32 %28, i32* %29, align 4, !dbg !13614
  %30 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 19), align 4, !dbg !13615
  %31 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 19, !dbg !13616
  store volatile i32 %30, i32* %31, align 4, !dbg !13617
  %32 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 17), align 4, !dbg !13618
  %33 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 17, !dbg !13619
  store volatile i32 %32, i32* %33, align 4, !dbg !13620
  %34 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 15), align 4, !dbg !13621
  %35 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 15, !dbg !13622
  store volatile i32 %34, i32* %35, align 4, !dbg !13623
  %36 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 13), align 4, !dbg !13624
  %37 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 13, !dbg !13625
  store volatile i32 %36, i32* %37, align 4, !dbg !13626
  %38 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 11), align 4, !dbg !13627
  %39 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 11, !dbg !13628
  store volatile i32 %38, i32* %39, align 4, !dbg !13629
  %40 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 9), align 4, !dbg !13630
  %41 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 9, !dbg !13631
  store volatile i32 %40, i32* %41, align 4, !dbg !13632
  %42 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 5), align 4, !dbg !13633
  %43 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 5, !dbg !13634
  store volatile i32 %42, i32* %43, align 4, !dbg !13635
  %44 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 3), align 4, !dbg !13636
  %45 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 3, !dbg !13637
  store volatile i32 %44, i32* %45, align 4, !dbg !13638
  ret void, !dbg !13639
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @mtk_psram_half_sleep_exit() local_unnamed_addr #3 section ".tcm_code" !dbg !13640 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !13641
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 25, !dbg !13642
  %3 = load volatile i32, i32* %2, align 4, !dbg !13642
  %4 = and i32 %3, -2097185, !dbg !13643
  store volatile i32 %4, i32* %2, align 4, !dbg !13644
  %5 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 27, !dbg !13645
  store volatile i32 1, i32* %5, align 4, !dbg !13646
  br label %6, !dbg !13647

6:                                                ; preds = %6, %0
  %7 = load volatile i32, i32* %5, align 4, !dbg !13648
  %8 = and i32 %7, 2, !dbg !13649
  %9 = icmp eq i32 %8, 0, !dbg !13649
  br i1 %9, label %6, label %10, !dbg !13647, !llvm.loop !13650

10:                                               ; preds = %6
  store volatile i32 0, i32* %5, align 4, !dbg !13652
  br label %11, !dbg !13653

11:                                               ; preds = %11, %10
  %12 = load volatile i32, i32* %5, align 4, !dbg !13654
  %13 = and i32 %12, 2, !dbg !13655
  %14 = icmp eq i32 %13, 0, !dbg !13655
  br i1 %14, label %15, label %11, !dbg !13653, !llvm.loop !13656

15:                                               ; preds = %11
  tail call void @EMI_Setting_restore() #22, !dbg !13658
  %16 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !13659
  %17 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %16, i32 0, i32 7, !dbg !13660
  store volatile i32 806289408, i32* %17, align 4, !dbg !13661
  br label %18, !dbg !13662

18:                                               ; preds = %18, %15
  %19 = load volatile i32, i32* %17, align 4, !dbg !13663
  %20 = and i32 %19, 128, !dbg !13664
  %21 = icmp eq i32 %20, 0, !dbg !13664
  br i1 %21, label %18, label %22, !dbg !13662, !llvm.loop !13665

22:                                               ; preds = %18
  store volatile i32 1880031232, i32* %17, align 4, !dbg !13667
  br label %23, !dbg !13668

23:                                               ; preds = %23, %22
  %24 = load volatile i32, i32* %17, align 4, !dbg !13669
  %25 = and i32 %24, 128, !dbg !13670
  %26 = icmp eq i32 %25, 0, !dbg !13670
  br i1 %26, label %27, label %23, !dbg !13668, !llvm.loop !13671

27:                                               ; preds = %23
  store volatile i32 269418496, i32* %17, align 4, !dbg !13673
  %28 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 1), align 4, !dbg !13674
  %29 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %16, i32 0, i32 1, !dbg !13675
  store volatile i32 %28, i32* %29, align 4, !dbg !13676
  ret void, !dbg !13677
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @mtk_psram_half_sleep_enter() local_unnamed_addr #3 section ".tcm_code" !dbg !13678 {
  tail call void @EMI_Setting_Save() #22, !dbg !13679
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 1
  br label %3, !dbg !13680

3:                                                ; preds = %3, %0
  %4 = load volatile i32, i32* %2, align 4, !dbg !13681
  %5 = and i32 %4, 17, !dbg !13682
  %6 = icmp eq i32 %5, 17, !dbg !13683
  br i1 %6, label %7, label %3, !dbg !13680, !llvm.loop !13684

7:                                                ; preds = %3
  %8 = load volatile i32, i32* %2, align 4, !dbg !13686
  %9 = or i32 %8, 1792, !dbg !13687
  store volatile i32 %9, i32* %2, align 4, !dbg !13688
  %10 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 33, !dbg !13689
  store volatile i32 -261685248, i32* %10, align 4, !dbg !13690
  br label %11, !dbg !13691

11:                                               ; preds = %11, %7
  %12 = load volatile i32, i32* %10, align 4, !dbg !13692
  %13 = and i32 %12, 1, !dbg !13693
  %14 = icmp eq i32 %13, 0, !dbg !13694
  br i1 %14, label %11, label %15, !dbg !13691, !llvm.loop !13695

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 7, !dbg !13697
  store volatile i32 0, i32* %16, align 4, !dbg !13698
  %17 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 27
  br label %18, !dbg !13699

18:                                               ; preds = %18, %15
  %19 = load volatile i32, i32* %17, align 4, !dbg !13700
  %20 = and i32 %19, 16, !dbg !13701
  %21 = icmp eq i32 %20, 0, !dbg !13701
  br i1 %21, label %18, label %22, !dbg !13699, !llvm.loop !13702

22:                                               ; preds = %18
  %23 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 25, !dbg !13704
  %24 = load volatile i32, i32* %23, align 4, !dbg !13704
  %25 = or i32 %24, 2097184, !dbg !13705
  store volatile i32 %25, i32* %23, align 4, !dbg !13706
  ret void, !dbg !13707
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @EMI_DynamicClockSwitch(i32 noundef %0) local_unnamed_addr #8 section ".tcm_code" !dbg !13708 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !13713, metadata !DIExpression()), !dbg !13715
  %3 = bitcast i32* %2 to i8*, !dbg !13716
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !13716
  call void @llvm.dbg.declare(metadata i32* %2, metadata !13714, metadata !DIExpression()), !dbg !13717
  switch i32 %0, label %24 [
    i32 0, label %4
    i32 1, label %25
  ], !dbg !13718

4:                                                ; preds = %1
  %5 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !13719
  %6 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %5, i32 0, i32 7, !dbg !13722
  store volatile i32 0, i32* %6, align 4, !dbg !13723
  store volatile i32 806289408, i32* %6, align 4, !dbg !13724
  br label %7, !dbg !13725

7:                                                ; preds = %7, %4
  %8 = load volatile i32, i32* %6, align 4, !dbg !13726
  %9 = and i32 %8, 128, !dbg !13727
  %10 = icmp eq i32 %9, 0, !dbg !13727
  br i1 %10, label %7, label %11, !dbg !13725, !llvm.loop !13728

11:                                               ; preds = %7
  store volatile i32 1880031232, i32* %6, align 4, !dbg !13730
  br label %12, !dbg !13731

12:                                               ; preds = %12, %11
  %13 = load volatile i32, i32* %6, align 4, !dbg !13732
  %14 = and i32 %13, 128, !dbg !13733
  %15 = icmp eq i32 %14, 0, !dbg !13733
  br i1 %15, label %16, label %12, !dbg !13731, !llvm.loop !13734

16:                                               ; preds = %12
  store volatile i32 269418496, i32* %6, align 4, !dbg !13736
  store volatile i32 0, i32* %2, align 4, !dbg !13737
  %17 = load volatile i32, i32* %2, align 4, !dbg !13739
  %18 = icmp ult i32 %17, 255, !dbg !13741
  br i1 %18, label %19, label %25, !dbg !13742

19:                                               ; preds = %16, %19
  %20 = load volatile i32, i32* %2, align 4, !dbg !13743
  %21 = add i32 %20, 1, !dbg !13743
  store volatile i32 %21, i32* %2, align 4, !dbg !13743
  %22 = load volatile i32, i32* %2, align 4, !dbg !13739
  %23 = icmp ult i32 %22, 255, !dbg !13741
  br i1 %23, label %19, label %25, !dbg !13742, !llvm.loop !13744

24:                                               ; preds = %1
  br label %25, !dbg !13746

25:                                               ; preds = %19, %16, %1, %24
  %26 = phi i32 [ -1, %24 ], [ 0, %1 ], [ 0, %16 ], [ 0, %19 ], !dbg !13715
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !13749
  ret i32 %26, !dbg !13749
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @emi_mask_master() local_unnamed_addr #3 section ".tcm_code" !dbg !13750 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !13751
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 1, !dbg !13752
  %3 = load volatile i32, i32* %2, align 4, !dbg !13752
  %4 = or i32 %3, 1792, !dbg !13753
  store volatile i32 %4, i32* %2, align 4, !dbg !13754
  ret void, !dbg !13755
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @emi_unmask_master() local_unnamed_addr #3 section ".tcm_code" !dbg !13756 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !13757
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 1, !dbg !13758
  %3 = load volatile i32, i32* %2, align 4, !dbg !13758
  %4 = and i32 %3, -1793, !dbg !13759
  store volatile i32 %4, i32* %2, align 4, !dbg !13760
  ret void, !dbg !13761
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i1 @is_clk_use_lfosc() local_unnamed_addr #9 section ".tcm_code" !dbg !13762 {
  ret i1 false, !dbg !13763
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i1 @is_clk_use_mpll() local_unnamed_addr #9 section ".tcm_code" !dbg !13764 {
  ret i1 false, !dbg !13765
}

; Function Attrs: noinline nounwind optsize
define dso_local void @cm_bus_clk_208m() local_unnamed_addr #0 section ".tcm_code" !dbg !13766 {
  tail call void @cm_bus_clk_208m_mpll_hfosc() #21, !dbg !13767
  ret void, !dbg !13770
}

; Function Attrs: optsize
declare dso_local void @cm_bus_clk_208m_mpll_hfosc() local_unnamed_addr #2 section ".tcm_code"

; Function Attrs: noinline nounwind optsize
define dso_local void @cm_bus_clk_104m() local_unnamed_addr #0 section ".tcm_code" !dbg !13771 {
  tail call void @cm_bus_clk_104m_hfosc_hfosc() #21, !dbg !13772
  ret void, !dbg !13775
}

; Function Attrs: optsize
declare dso_local void @cm_bus_clk_104m_hfosc_hfosc() local_unnamed_addr #2 section ".tcm_code"

; Function Attrs: noinline nounwind optsize
define dso_local void @cm_bus_clk_26m() local_unnamed_addr #0 section ".tcm_code" !dbg !13776 {
  tail call void @cm_bus_clk_26m_dcxo_dcxo() #21, !dbg !13777
  ret void, !dbg !13780
}

; Function Attrs: optsize
declare dso_local void @cm_bus_clk_26m_dcxo_dcxo() local_unnamed_addr #2 section ".tcm_code"

; Function Attrs: noinline nounwind optsize
define dso_local void @peri_clk_26m() local_unnamed_addr #0 section ".tcm_code" !dbg !13781 {
  tail call void @peri_26m_dcxo() #21, !dbg !13782
  ret void, !dbg !13785
}

; Function Attrs: optsize
declare dso_local void @peri_26m_dcxo() local_unnamed_addr #2 section ".tcm_code"

; Function Attrs: noinline nounwind optsize
define dso_local i32 @__io_putchar(i32 noundef returned %0) local_unnamed_addr #0 !dbg !13786 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13790, metadata !DIExpression()), !dbg !13791
  %2 = trunc i32 %0 to i8, !dbg !13792
  tail call void @hal_uart_put_char(i32 noundef 2, i8 noundef zeroext %2) #21, !dbg !13793
  ret i32 %0, !dbg !13794
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local i32 @main() local_unnamed_addr #19 !dbg !13795 {
  tail call fastcc void @SystemClock_Config() #22, !dbg !13796
  tail call void @SystemCoreClockUpdate() #21, !dbg !13797
  tail call fastcc void @prvSetupHardware() #22, !dbg !13798
  tail call void asm sideeffect "cpsie i", "~{memory}"() #23, !dbg !13799, !srcloc !13802
  tail call void asm sideeffect "cpsie f", "~{memory}"() #23, !dbg !13803, !srcloc !13806
  %1 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.224, i32 0, i32 0)) #21, !dbg !13807
  %2 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1.225, i32 0, i32 0)) #21, !dbg !13808
  %3 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.224, i32 0, i32 0)) #21, !dbg !13809
  tail call fastcc void @dac_output_data_repeatedly_example() #22, !dbg !13810
  br label %4, !dbg !13811

4:                                                ; preds = %0, %4
  br label %4, !dbg !13811, !llvm.loop !13812
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @SystemClock_Config() unnamed_addr #0 !dbg !13814 {
  %1 = tail call i32 @hal_clock_init() #21, !dbg !13815
  ret void, !dbg !13816
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvSetupHardware() unnamed_addr #0 !dbg !13817 {
  tail call fastcc void @plain_log_uart_init() #22, !dbg !13818
  %1 = tail call i32 @hal_flash_init() #21, !dbg !13819
  %2 = tail call i32 @hal_nvic_init() #21, !dbg !13820
  ret void, !dbg !13821
}

; Function Attrs: optsize
declare dso_local i32 @printf(i8* noundef, ...) local_unnamed_addr #2

; Function Attrs: noinline nounwind optsize
define internal fastcc void @dac_output_data_repeatedly_example() unnamed_addr #0 !dbg !13822 {
  %1 = alloca [4 x i32], align 4
  %2 = bitcast [4 x i32]* %1 to i8*, !dbg !13825
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #23, !dbg !13825
  call void @llvm.dbg.declare(metadata [4 x i32]* %1, metadata !13824, metadata !DIExpression()), !dbg !13826
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(16) %2, i8* noundef nonnull align 4 dereferenceable(16) bitcast ([4 x i32]* @__const.dac_output_data_repeatedly_example.dac_data to i8*), i32 16, i1 false), !dbg !13826
  %3 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.226, i32 0, i32 0)) #21, !dbg !13827
  %4 = tail call i32 @hal_dac_init() #21, !dbg !13828
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* %1, i32 0, i32 0, !dbg !13829
  %6 = call i32 @hal_dac_write_data(i32 noundef 0, i32* noundef nonnull %5, i32 noundef 4) #21, !dbg !13830
  %7 = call i32 @hal_dac_configure_output(i32 noundef 0, i32 noundef 0, i32 noundef 3) #21, !dbg !13831
  %8 = call i32 @hal_dac_start_output() #21, !dbg !13832
  %9 = call i32 @hal_gpt_delay_ms(i32 noundef 10000) #21, !dbg !13833
  %10 = call i32 @hal_dac_stop_output() #21, !dbg !13834
  %11 = call i32 @hal_dac_deinit() #21, !dbg !13835
  %12 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.3.227, i32 0, i32 0)) #21, !dbg !13836
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #23, !dbg !13837
  ret void, !dbg !13837
}

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i32(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i32, i1 immarg) #20

; Function Attrs: noinline nounwind optsize
define internal fastcc void @plain_log_uart_init() unnamed_addr #0 !dbg !13838 {
  %1 = alloca %struct.hal_uart_config_t, align 4
  %2 = bitcast %struct.hal_uart_config_t* %1 to i8*, !dbg !13848
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #23, !dbg !13848
  call void @llvm.dbg.declare(metadata %struct.hal_uart_config_t* %1, metadata !13840, metadata !DIExpression()), !dbg !13849
  %3 = tail call i32 @hal_gpio_init(i32 noundef 0) #21, !dbg !13850
  %4 = tail call i32 @hal_gpio_init(i32 noundef 1) #21, !dbg !13851
  %5 = tail call i32 @hal_pinmux_set_function(i32 noundef 0, i8 noundef zeroext 3) #21, !dbg !13852
  %6 = tail call i32 @hal_pinmux_set_function(i32 noundef 1, i8 noundef zeroext 3) #21, !dbg !13853
  %7 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 0, !dbg !13854
  store i32 9, i32* %7, align 4, !dbg !13855
  %8 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 1, !dbg !13856
  store i32 3, i32* %8, align 4, !dbg !13857
  %9 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 2, !dbg !13858
  store i32 0, i32* %9, align 4, !dbg !13859
  %10 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 3, !dbg !13860
  store i32 0, i32* %10, align 4, !dbg !13861
  %11 = call i32 @hal_uart_init(i32 noundef 2, %struct.hal_uart_config_t* noundef nonnull %1) #21, !dbg !13862
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #23, !dbg !13863
  ret void, !dbg !13863
}

; Function Attrs: optsize
declare dso_local i32 @hal_clock_init() local_unnamed_addr #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_close(i32 noundef %0) local_unnamed_addr #9 !dbg !13864 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13866, metadata !DIExpression()), !dbg !13867
  ret i32 0, !dbg !13868
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_fstat(i32 noundef %0, %struct.stat* nocapture noundef readnone %1) local_unnamed_addr #9 !dbg !13869 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13919, metadata !DIExpression()), !dbg !13921
  call void @llvm.dbg.value(metadata %struct.stat* %1, metadata !13920, metadata !DIExpression()), !dbg !13921
  ret i32 0, !dbg !13922
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_isatty(i32 noundef %0) local_unnamed_addr #9 !dbg !13923 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13925, metadata !DIExpression()), !dbg !13926
  ret i32 1, !dbg !13927
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_lseek(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #9 !dbg !13928 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13932, metadata !DIExpression()), !dbg !13935
  call void @llvm.dbg.value(metadata i32 %1, metadata !13933, metadata !DIExpression()), !dbg !13935
  call void @llvm.dbg.value(metadata i32 %2, metadata !13934, metadata !DIExpression()), !dbg !13935
  ret i32 0, !dbg !13936
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_open(i8* nocapture noundef readnone %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #9 !dbg !13937 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13941, metadata !DIExpression()), !dbg !13944
  call void @llvm.dbg.value(metadata i32 %1, metadata !13942, metadata !DIExpression()), !dbg !13944
  call void @llvm.dbg.value(metadata i32 %2, metadata !13943, metadata !DIExpression()), !dbg !13944
  ret i32 -1, !dbg !13945
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_read(i32 noundef %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #9 !dbg !13946 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13950, metadata !DIExpression()), !dbg !13953
  call void @llvm.dbg.value(metadata i8* %1, metadata !13951, metadata !DIExpression()), !dbg !13953
  call void @llvm.dbg.value(metadata i32 %2, metadata !13952, metadata !DIExpression()), !dbg !13953
  ret i32 0, !dbg !13954
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_getpid() local_unnamed_addr #9 !dbg !13955 {
  ret i32 1, !dbg !13956
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_kill(i32 noundef %0, i32 noundef %1) local_unnamed_addr #9 !dbg !13957 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13961, metadata !DIExpression()), !dbg !13963
  call void @llvm.dbg.value(metadata i32 %1, metadata !13962, metadata !DIExpression()), !dbg !13963
  ret i32 -1, !dbg !13964
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_exit(i32 noundef %0) local_unnamed_addr #9 !dbg !13965 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13967, metadata !DIExpression()), !dbg !13968
  ret i32 -1, !dbg !13969
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @_sbrk_r(%struct._reent* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #0 !dbg !2617 {
  call void @llvm.dbg.value(metadata %struct._reent* %0, metadata !2813, metadata !DIExpression()), !dbg !13970
  call void @llvm.dbg.value(metadata i32 %1, metadata !2814, metadata !DIExpression()), !dbg !13970
  %3 = tail call i8* asm sideeffect "MRS $0, msp\0A", "=r"() #23, !dbg !13971, !srcloc !13972
  call void @llvm.dbg.value(metadata i8* %3, metadata !2816, metadata !DIExpression()), !dbg !13970
  %4 = load i8*, i8** @_sbrk_r.heap_end, align 4, !dbg !13973
  %5 = icmp eq i8* %4, null, !dbg !13975
  %6 = select i1 %5, i8* @end, i8* %4, !dbg !13976
  call void @llvm.dbg.value(metadata i8* %6, metadata !2815, metadata !DIExpression()), !dbg !13970
  %7 = getelementptr inbounds i8, i8* %6, i32 %1, !dbg !13977
  %8 = icmp ult i8* %3, %7, !dbg !13979
  %9 = xor i1 %8, true, !dbg !13980
  %10 = or i1 %5, %9, !dbg !13980
  br i1 %10, label %11, label %13, !dbg !13980

11:                                               ; preds = %2
  %12 = select i1 %8, i8* %6, i8* %7, !dbg !13981
  store i8* %12, i8** @_sbrk_r.heap_end, align 4, !dbg !13980
  br label %13, !dbg !13980

13:                                               ; preds = %2, %11
  %14 = select i1 %8, i8* inttoptr (i32 -1 to i8*), i8* %6, !dbg !13981
  ret i8* %14, !dbg !13980
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @_write(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef returned %2) local_unnamed_addr #0 !dbg !13982 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13984, metadata !DIExpression()), !dbg !13988
  call void @llvm.dbg.value(metadata i8* %1, metadata !13985, metadata !DIExpression()), !dbg !13988
  call void @llvm.dbg.value(metadata i32 %2, metadata !13986, metadata !DIExpression()), !dbg !13988
  call void @llvm.dbg.value(metadata i32 0, metadata !13987, metadata !DIExpression()), !dbg !13988
  %4 = icmp sgt i32 %2, 0, !dbg !13989
  br i1 %4, label %5, label %14, !dbg !13992

5:                                                ; preds = %3, %5
  %6 = phi i32 [ %12, %5 ], [ 0, %3 ]
  %7 = phi i8* [ %8, %5 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !13987, metadata !DIExpression()), !dbg !13988
  call void @llvm.dbg.value(metadata i8* %7, metadata !13985, metadata !DIExpression()), !dbg !13988
  %8 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !13993
  call void @llvm.dbg.value(metadata i8* %8, metadata !13985, metadata !DIExpression()), !dbg !13988
  %9 = load i8, i8* %7, align 1, !dbg !13995
  %10 = zext i8 %9 to i32, !dbg !13995
  %11 = tail call i32 @__io_putchar(i32 noundef %10) #21, !dbg !13996
  %12 = add nuw nsw i32 %6, 1, !dbg !13997
  call void @llvm.dbg.value(metadata i32 %12, metadata !13987, metadata !DIExpression()), !dbg !13988
  %13 = icmp eq i32 %12, %2, !dbg !13989
  br i1 %13, label %14, label %5, !dbg !13992, !llvm.loop !13998

14:                                               ; preds = %5, %3
  ret i32 %2, !dbg !14000
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @SysTick_Set(i32 noundef %0) local_unnamed_addr #3 !dbg !14001 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14003, metadata !DIExpression()), !dbg !14005
  %2 = add i32 %0, -1, !dbg !14006
  %3 = icmp ugt i32 %2, 16777215, !dbg !14008
  br i1 %3, label %8, label %4, !dbg !14009

4:                                                ; preds = %1
  %5 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !14010
  call void @llvm.dbg.value(metadata i32 %5, metadata !14004, metadata !DIExpression()), !dbg !14005
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !14011
  %7 = and i32 %6, -4, !dbg !14011
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !14011
  store volatile i32 %2, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !14012
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !14013
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !14014
  br label %8, !dbg !14015

8:                                                ; preds = %1, %4
  %9 = phi i32 [ 0, %4 ], [ 1, %1 ], !dbg !14005
  ret i32 %9, !dbg !14016
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SysInitStatus_Set() local_unnamed_addr #3 !dbg !14017 {
  store volatile i32 1, i32* @System_Initialize_Done, align 4, !dbg !14018
  ret void, !dbg !14019
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @SysInitStatus_Query() local_unnamed_addr #10 !dbg !14020 {
  %1 = load volatile i32, i32* @System_Initialize_Done, align 4, !dbg !14021
  ret i32 %1, !dbg !14022
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #10 !dbg !14023 {
  %1 = load volatile i32, i32* inttoptr (i32 -1576992508 to i32*), align 4, !dbg !14026
  %2 = lshr i32 %1, 3, !dbg !14027
  %3 = and i32 %2, 15, !dbg !14027
  call void @llvm.dbg.value(metadata i32 %3, metadata !14025, metadata !DIExpression()), !dbg !14028
  switch i32 %3, label %6 [
    i32 8, label %5
    i32 6, label %5
    i32 2, label %4
    i32 3, label %4
    i32 4, label %4
    i32 5, label %9
    i32 7, label %9
  ], !dbg !14029

4:                                                ; preds = %0, %0, %0
  br label %6, !dbg !14030

5:                                                ; preds = %0, %0
  br label %9, !dbg !14032

6:                                                ; preds = %0, %4
  %7 = phi i32 [ 104000000, %4 ], [ 26000000, %0 ]
  store i32 %7, i32* @SystemCoreClock, align 4, !dbg !14033
  %8 = load volatile i32, i32* inttoptr (i32 -1576665024 to i32*), align 64, !dbg !14034
  br label %15, !dbg !14036

9:                                                ; preds = %0, %0, %5
  %10 = phi i32 [ 156000000, %5 ], [ 208000000, %0 ], [ 208000000, %0 ]
  store i32 %10, i32* @SystemCoreClock, align 4, !dbg !14033
  %11 = load volatile i32, i32* inttoptr (i32 -1576665024 to i32*), align 64, !dbg !14034
  %12 = and i32 %11, 1024, !dbg !14037
  %13 = icmp eq i32 %12, 0, !dbg !14037
  br i1 %13, label %15, label %14, !dbg !14036

14:                                               ; preds = %9
  store i32 104000000, i32* @SystemCoreClock, align 4, !dbg !14038
  br label %15, !dbg !14040

15:                                               ; preds = %6, %14, %9
  ret void, !dbg !14041
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SystemInit() local_unnamed_addr #3 !dbg !14042 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !14043
  %2 = or i32 %1, 15728640, !dbg !14043
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !14043
  store volatile i32 0, i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !14044
  %3 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !14045
  %4 = or i32 %3, 458752, !dbg !14045
  store volatile i32 %4, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !14045
  ret void, !dbg !14046
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @CachePreInit() local_unnamed_addr #3 !dbg !14047 {
  store volatile i32 0, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !14048
  store volatile i32 19, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !14049
  store volatile i32 3, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !14050
  store volatile i32 134283520, i32* inttoptr (i32 -1601634304 to i32*), align 65536, !dbg !14051
  store volatile i32 138280960, i32* inttoptr (i32 -1601634240 to i32*), align 64, !dbg !14052
  store volatile i32 1, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !14053
  store volatile i32 781, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !14054
  ret void, !dbg !14055
}

attributes #0 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #1 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #2 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #3 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #5 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #6 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #7 = { argmemonly nofree nosync nounwind willreturn }
attributes #8 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #9 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #10 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #11 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #12 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #13 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #14 = { noreturn optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #15 = { argmemonly nofree nounwind willreturn writeonly }
attributes #16 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #17 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #18 = { nofree nosync nounwind willreturn }
attributes #19 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #20 = { argmemonly nofree nounwind willreturn }
attributes #21 = { nobuiltin nounwind optsize "no-builtins" }
attributes #22 = { nobuiltin optsize "no-builtins" }
attributes #23 = { nounwind }
attributes #24 = { nobuiltin noreturn nounwind optsize "no-builtins" }

!llvm.dbg.cu = !{!2, !132, !204, !367, !647, !2948, !840, !929, !2952, !1058, !2971, !1148, !1244, !1569, !3017, !1657, !1666, !2024, !2085, !2160, !3019, !3055, !2360, !2437, !2605, !3057, !2808, !2819, !2936}
!llvm.ident = !{!3060, !3060, !3060, !3060, !3060, !3060, !3060, !3060, !3060, !3060, !3060, !3060, !3060, !3060, !3060, !3060, !3060, !3060, !3060, !3060, !3060, !3060, !3060, !3060, !3060, !3060, !3060, !3060, !3060}
!llvm.module.flags = !{!3061, !3062, !3063, !3064, !3065, !3066, !3067, !3068, !3069}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "g_dac_status", scope: !2, file: !3, line: 55, type: !126, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !97, globals: !125, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_dac.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/dac_output_data_repeatedly/GCC")
!4 = !{!5, !13, !27, !34, !94}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 109, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "../../../../../driver/chip/inc/hal_dac.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/dac_output_data_repeatedly/GCC")
!7 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!8 = !{!9, !10, !11, !12}
!9 = !DIEnumerator(name: "HAL_DAC_STATUS_INVALID_PARAMETER", value: -3)
!10 = !DIEnumerator(name: "HAL_DAC_STATUS_ERROR_BUSY", value: -2)
!11 = !DIEnumerator(name: "HAL_DAC_STATUS_ERROR", value: -1)
!12 = !DIEnumerator(name: "HAL_DAC_STATUS_OK", value: 0)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !14, line: 88, baseType: !15, size: 32, elements: !16)
!14 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_pmu_wrap_interface.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/dac_output_data_repeatedly/GCC")
!15 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!16 = !{!17, !18, !19, !20, !21, !22, !23, !24, !25, !26}
!17 = !DIEnumerator(name: "DRIVER_DVFS", value: 0)
!18 = !DIEnumerator(name: "DRIVER_BT", value: 1)
!19 = !DIEnumerator(name: "DRIVER_AUDIO", value: 2)
!20 = !DIEnumerator(name: "DRIVER_USB", value: 3)
!21 = !DIEnumerator(name: "DRIVER_CAMERA", value: 4)
!22 = !DIEnumerator(name: "DRIVER_MSDC", value: 5)
!23 = !DIEnumerator(name: "DRIVER_VIBR", value: 6)
!24 = !DIEnumerator(name: "DRIVER_ACCDET", value: 7)
!25 = !DIEnumerator(name: "DRIVER_ADC", value: 8)
!26 = !DIEnumerator(name: "DRIVER_DAC", value: 9)
!27 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !28, line: 101, baseType: !7, size: 32, elements: !29)
!28 = !DIFile(filename: "../../../../../driver/chip/inc/hal_clock.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/dac_output_data_repeatedly/GCC")
!29 = !{!30, !31, !32, !33}
!30 = !DIEnumerator(name: "HAL_CLOCK_STATUS_UNINITIALIZED", value: -3)
!31 = !DIEnumerator(name: "HAL_CLOCK_STATUS_INVALID_PARAMETER", value: -2)
!32 = !DIEnumerator(name: "HAL_CLOCK_STATUS_ERROR", value: -1)
!33 = !DIEnumerator(name: "HAL_CLOCK_STATUS_OK", value: 0)
!34 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !35, line: 1170, baseType: !15, size: 32, elements: !36)
!35 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_platform.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/dac_output_data_repeatedly/GCC")
!36 = !{!37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93}
!37 = !DIEnumerator(name: "HAL_CLOCK_CG_BT_26M", value: 9)
!38 = !DIEnumerator(name: "HAL_CLOCK_CG_CAMINF48M", value: 10)
!39 = !DIEnumerator(name: "HAL_CLOCK_CG_BT_BUSCK", value: 13)
!40 = !DIEnumerator(name: "HAL_CLOCK_CG_BT_N9", value: 15)
!41 = !DIEnumerator(name: "HAL_CLOCK_CG_BUS", value: 20)
!42 = !DIEnumerator(name: "HAL_CLOCK_CG_CM", value: 21)
!43 = !DIEnumerator(name: "HAL_CLOCK_CG_BSI", value: 23)
!44 = !DIEnumerator(name: "HAL_CLOCK_CG_SEJ", value: 32)
!45 = !DIEnumerator(name: "HAL_CLOCK_CG_DMA", value: 33)
!46 = !DIEnumerator(name: "HAL_CLOCK_CG_USB48M", value: 34)
!47 = !DIEnumerator(name: "HAL_CLOCK_CG_MSDC0", value: 35)
!48 = !DIEnumerator(name: "HAL_CLOCK_CG_I2C_D2D", value: 38)
!49 = !DIEnumerator(name: "HAL_CLOCK_CG_I2C2", value: 39)
!50 = !DIEnumerator(name: "HAL_CLOCK_CG_CM4_OSTIMER", value: 42)
!51 = !DIEnumerator(name: "HAL_CLOCK_CG_DMA_AO", value: 44)
!52 = !DIEnumerator(name: "HAL_CLOCK_CG_UART0", value: 45)
!53 = !DIEnumerator(name: "HAL_CLOCK_CG_UART1", value: 46)
!54 = !DIEnumerator(name: "HAL_CLOCK_CG_UART2", value: 47)
!55 = !DIEnumerator(name: "HAL_CLOCK_CG_UART3", value: 48)
!56 = !DIEnumerator(name: "HAL_CLOCK_CG_SPISLV", value: 51)
!57 = !DIEnumerator(name: "HAL_CLOCK_CG_SPI0", value: 52)
!58 = !DIEnumerator(name: "HAL_CLOCK_CG_SPI1", value: 53)
!59 = !DIEnumerator(name: "HAL_CLOCK_CG_SPI2", value: 54)
!60 = !DIEnumerator(name: "HAL_CLOCK_CG_SPI3", value: 55)
!61 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM0", value: 64)
!62 = !DIEnumerator(name: "HAL_CLOCK_CG_BTIF", value: 65)
!63 = !DIEnumerator(name: "HAL_CLOCK_CG_GPTIMER", value: 66)
!64 = !DIEnumerator(name: "HAL_CLOCK_CG_GPCOUNTER", value: 67)
!65 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM1", value: 68)
!66 = !DIEnumerator(name: "HAL_CLOCK_CG_EFUSE", value: 70)
!67 = !DIEnumerator(name: "HAL_CLOCK_CG_LPM", value: 71)
!68 = !DIEnumerator(name: "HAL_CLOCK_CG_CM_SYSROM", value: 72)
!69 = !DIEnumerator(name: "HAL_CLOCK_CG_SFC", value: 73)
!70 = !DIEnumerator(name: "HAL_CLOCK_CG_MSDC1", value: 74)
!71 = !DIEnumerator(name: "HAL_CLOCK_CG_USB_DMA", value: 76)
!72 = !DIEnumerator(name: "HAL_CLOCK_CG_USB_BUS", value: 77)
!73 = !DIEnumerator(name: "HAL_CLOCK_CG_DISP_PWM", value: 78)
!74 = !DIEnumerator(name: "HAL_CLOCK_CG_TRNG", value: 80)
!75 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM2", value: 83)
!76 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM3", value: 84)
!77 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM4", value: 85)
!78 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM5", value: 86)
!79 = !DIEnumerator(name: "HAL_CLOCK_CG_LCD", value: 96)
!80 = !DIEnumerator(name: "HAL_CLOCK_CG_RESEIZER", value: 97)
!81 = !DIEnumerator(name: "HAL_CLOCK_CG_ROTDMA", value: 98)
!82 = !DIEnumerator(name: "HAL_CLOCK_CG_CAM_BCLK", value: 99)
!83 = !DIEnumerator(name: "HAL_CLOCK_CG_PAD2CAM", value: 100)
!84 = !DIEnumerator(name: "HAL_CLOCK_CG_G2D", value: 101)
!85 = !DIEnumerator(name: "HAL_CLOCK_CG_MM_COLOR", value: 102)
!86 = !DIEnumerator(name: "HAL_CLOCK_CG_AAL", value: 103)
!87 = !DIEnumerator(name: "HAL_CLOCK_CG_DSI0", value: 104)
!88 = !DIEnumerator(name: "HAL_CLOCK_CG_LCD_APB", value: 105)
!89 = !DIEnumerator(name: "HAL_CLOCK_CG_AUXADC", value: 130)
!90 = !DIEnumerator(name: "HAL_CLOCK_CG_GPDAC", value: 134)
!91 = !DIEnumerator(name: "HAL_CLOCK_CG_SENSOR_DMA", value: 136)
!92 = !DIEnumerator(name: "HAL_CLOCK_CG_I2C1", value: 137)
!93 = !DIEnumerator(name: "HAL_CLOCK_CG_I2C0", value: 138)
!94 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 118, baseType: !15, size: 32, elements: !95)
!95 = !{!96}
!96 = !DIEnumerator(name: "HAL_DAC_REPEAT_MODE", value: 0)
!97 = !{!98, !124}
!98 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !99, size: 32)
!99 = !DIDerivedType(tag: DW_TAG_typedef, name: "DAC_REGISTER_T", file: !100, line: 403, baseType: !101)
!100 = !DIFile(filename: "../../../../../driver/CMSIS/Device/MTK/mt2523/Include/mt2523.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/dac_output_data_repeatedly/GCC")
!101 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !100, line: 389, size: 704, elements: !102)
!102 = !{!103, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !122, !123}
!103 = !DIDerivedType(tag: DW_TAG_member, name: "GPDAC_TGSEL", scope: !101, file: !100, line: 390, baseType: !104, size: 32)
!104 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !105)
!105 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !106, line: 48, baseType: !107)
!106 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_stdint.h", directory: "/home/mjshen/RTOSExploration")
!107 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !108, line: 79, baseType: !15)
!108 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/machine/_default_types.h", directory: "/home/mjshen/RTOSExploration")
!109 = !DIDerivedType(tag: DW_TAG_member, name: "GPDAC_TEST", scope: !101, file: !100, line: 391, baseType: !104, size: 32, offset: 32)
!110 = !DIDerivedType(tag: DW_TAG_member, name: "GPDACLDO_CAL", scope: !101, file: !100, line: 392, baseType: !104, size: 32, offset: 64)
!111 = !DIDerivedType(tag: DW_TAG_member, name: "GPDACLDO_TRIM", scope: !101, file: !100, line: 393, baseType: !104, size: 32, offset: 96)
!112 = !DIDerivedType(tag: DW_TAG_member, name: "GPDAC_CAL", scope: !101, file: !100, line: 394, baseType: !104, size: 32, offset: 128)
!113 = !DIDerivedType(tag: DW_TAG_member, name: "GPDAC_PDN", scope: !101, file: !100, line: 395, baseType: !104, size: 32, offset: 160)
!114 = !DIDerivedType(tag: DW_TAG_member, name: "SWRST", scope: !101, file: !100, line: 396, baseType: !104, size: 32, offset: 192)
!115 = !DIDerivedType(tag: DW_TAG_member, name: "OUTPUT_COMMAND", scope: !101, file: !100, line: 397, baseType: !104, size: 32, offset: 224)
!116 = !DIDerivedType(tag: DW_TAG_member, name: "OUTPUT_REGION", scope: !101, file: !100, line: 398, baseType: !104, size: 32, offset: 256)
!117 = !DIDerivedType(tag: DW_TAG_member, name: "WRITE_COMMAND", scope: !101, file: !100, line: 399, baseType: !104, size: 32, offset: 288)
!118 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !101, file: !100, line: 400, baseType: !119, size: 320, offset: 320)
!119 = !DICompositeType(tag: DW_TAG_array_type, baseType: !105, size: 320, elements: !120)
!120 = !{!121}
!121 = !DISubrange(count: 10)
!122 = !DIDerivedType(tag: DW_TAG_member, name: "GPDAC_SRAM_PWR", scope: !101, file: !100, line: 401, baseType: !104, size: 32, offset: 640)
!123 = !DIDerivedType(tag: DW_TAG_member, name: "GPDAC_DEBUG", scope: !101, file: !100, line: 402, baseType: !104, size: 32, offset: 672)
!124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!125 = !{!0}
!126 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !127)
!127 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !106, line: 24, baseType: !128)
!128 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint8_t", file: !108, line: 43, baseType: !129)
!129 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!130 = !DIGlobalVariableExpression(var: !131, expr: !DIExpression())
!131 = distinct !DIGlobalVariable(name: "gpt_lock_sleep_name", scope: !132, file: !133, line: 46, type: !198, isLocal: true, isDefinition: true)
!132 = distinct !DICompileUnit(language: DW_LANG_C99, file: !133, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !134, retainedTypes: !187, globals: !192, splitDebugInlining: false, nameTableKind: None)
!133 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_gpt.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/dac_output_data_repeatedly/GCC")
!134 = !{!135, !143, !152, !156, !160, !179, !183}
!135 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !136, line: 387, baseType: !7, size: 32, elements: !137)
!136 = !DIFile(filename: "../../../../../driver/chip/inc/hal_gpt.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/dac_output_data_repeatedly/GCC")
!137 = !{!138, !139, !140, !141, !142}
!138 = !DIEnumerator(name: "HAL_GPT_STATUS_ERROR_PORT_USED", value: -4)
!139 = !DIEnumerator(name: "HAL_GPT_STATUS_ERROR", value: -3)
!140 = !DIEnumerator(name: "HAL_GPT_STATUS_ERROR_PORT", value: -2)
!141 = !DIEnumerator(name: "HAL_GPT_STATUS_INVALID_PARAMETER", value: -1)
!142 = !DIEnumerator(name: "HAL_GPT_STATUS_OK", value: 0)
!143 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !35, line: 846, baseType: !15, size: 32, elements: !144)
!144 = !{!145, !146, !147, !148, !149, !150, !151}
!145 = !DIEnumerator(name: "HAL_GPT_0", value: 0)
!146 = !DIEnumerator(name: "HAL_GPT_1", value: 1)
!147 = !DIEnumerator(name: "HAL_GPT_2", value: 2)
!148 = !DIEnumerator(name: "HAL_GPT_3", value: 3)
!149 = !DIEnumerator(name: "HAL_GPT_4", value: 4)
!150 = !DIEnumerator(name: "HAL_GPT_5", value: 5)
!151 = !DIEnumerator(name: "HAL_GPT_MAX_PORT", value: 6)
!152 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !136, line: 397, baseType: !15, size: 32, elements: !153)
!153 = !{!154, !155}
!154 = !DIEnumerator(name: "HAL_GPT_STOPPED", value: 0)
!155 = !DIEnumerator(name: "HAL_GPT_RUNNING", value: 1)
!156 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !35, line: 857, baseType: !15, size: 32, elements: !157)
!157 = !{!158, !159}
!158 = !DIEnumerator(name: "HAL_GPT_CLOCK_SOURCE_32K", value: 0)
!159 = !DIEnumerator(name: "HAL_GPT_CLOCK_SOURCE_1M", value: 1)
!160 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !161, line: 87, baseType: !15, size: 32, elements: !162)
!161 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_gpt_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/dac_output_data_repeatedly/GCC")
!162 = !{!163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178}
!163 = !DIEnumerator(name: "GPT_DIVIDE_1", value: 0)
!164 = !DIEnumerator(name: "GPT_DIVIDE_2", value: 1)
!165 = !DIEnumerator(name: "GPT_DIVIDE_3", value: 2)
!166 = !DIEnumerator(name: "GPT_DIVIDE_4", value: 3)
!167 = !DIEnumerator(name: "GPT_DIVIDE_5", value: 4)
!168 = !DIEnumerator(name: "GPT_DIVIDE_6", value: 5)
!169 = !DIEnumerator(name: "GPT_DIVIDE_7", value: 6)
!170 = !DIEnumerator(name: "GPT_DIVIDE_8", value: 7)
!171 = !DIEnumerator(name: "GPT_DIVIDE_9", value: 8)
!172 = !DIEnumerator(name: "GPT_DIVIDE_10", value: 9)
!173 = !DIEnumerator(name: "GPT_DIVIDE_11", value: 10)
!174 = !DIEnumerator(name: "GPT_DIVIDE_12", value: 11)
!175 = !DIEnumerator(name: "GPT_DIVIDE_13", value: 12)
!176 = !DIEnumerator(name: "GPT_DIVIDE_16", value: 13)
!177 = !DIEnumerator(name: "GPT_DIVIDE_32", value: 14)
!178 = !DIEnumerator(name: "GPT_DIVIDE_64", value: 15)
!179 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !136, line: 380, baseType: !15, size: 32, elements: !180)
!180 = !{!181, !182}
!181 = !DIEnumerator(name: "HAL_GPT_TIMER_TYPE_ONE_SHOT", value: 0)
!182 = !DIEnumerator(name: "HAL_GPT_TIMER_TYPE_REPEAT", value: 1)
!183 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !161, line: 82, baseType: !15, size: 32, elements: !184)
!184 = !{!185, !186}
!185 = !DIEnumerator(name: "GPT_CLOCK_UNGATE", value: 0)
!186 = !DIEnumerator(name: "GPT_CLOCK_GATE", value: 64)
!187 = !{!105, !124, !188}
!188 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_callback_t", file: !136, line: 371, baseType: !189)
!189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !190, size: 32)
!190 = !DISubroutineType(types: !191)
!191 = !{null, !124}
!192 = !{!193, !130}
!193 = !DIGlobalVariableExpression(var: !194, expr: !DIExpression())
!194 = distinct !DIGlobalVariable(name: "gpt_lock_sleep_handle", scope: !132, file: !133, line: 47, type: !195, isLocal: true, isDefinition: true)
!195 = !DICompositeType(tag: DW_TAG_array_type, baseType: !127, size: 48, elements: !196)
!196 = !{!197}
!197 = !DISubrange(count: 6)
!198 = !DICompositeType(tag: DW_TAG_array_type, baseType: !199, size: 192, elements: !196)
!199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !200, size: 32)
!200 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !201)
!201 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!202 = !DIGlobalVariableExpression(var: !203, expr: !DIExpression())
!203 = distinct !DIGlobalVariable(name: "gp_gpt", scope: !204, file: !205, line: 48, type: !363, isLocal: false, isDefinition: true)
!204 = distinct !DICompileUnit(language: DW_LANG_C99, file: !205, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !206, retainedTypes: !290, globals: !305, splitDebugInlining: false, nameTableKind: None)
!205 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_gpt_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/dac_output_data_repeatedly/GCC")
!206 = !{!34, !183, !207, !213, !143, !179, !152}
!207 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !161, line: 75, baseType: !15, size: 32, elements: !208)
!208 = !{!209, !210, !211, !212}
!209 = !DIEnumerator(name: "GPT_MODE_ONE_SHOT", value: 0)
!210 = !DIEnumerator(name: "GPT_MODE_REPEAT", value: 16)
!211 = !DIEnumerator(name: "GPT_MODE_KEEP_GO", value: 32)
!212 = !DIEnumerator(name: "GPT_MODE_FREE_RUN", value: 48)
!213 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "IRQn", file: !100, line: 44, baseType: !7, size: 32, elements: !214)
!214 = !{!215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289}
!215 = !DIEnumerator(name: "Reset_IRQn", value: -15)
!216 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!217 = !DIEnumerator(name: "HardFault_IRQn", value: -13)
!218 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!219 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!220 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!221 = !DIEnumerator(name: "SVC_IRQn", value: -5)
!222 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!223 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!224 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!225 = !DIEnumerator(name: "OSTimer_IRQn", value: 0)
!226 = !DIEnumerator(name: "Reserved1_IRQn", value: 1)
!227 = !DIEnumerator(name: "MD_TOPSM_IRQn", value: 2)
!228 = !DIEnumerator(name: "CM4_TOPSM_IRQn", value: 3)
!229 = !DIEnumerator(name: "Reserved2_IRQn", value: 4)
!230 = !DIEnumerator(name: "Reserved3_IRQn", value: 5)
!231 = !DIEnumerator(name: "Reserved4_IRQn", value: 6)
!232 = !DIEnumerator(name: "Reserved5_IRQn", value: 7)
!233 = !DIEnumerator(name: "ACCDET_IRQn", value: 8)
!234 = !DIEnumerator(name: "RTC_IRQn", value: 9)
!235 = !DIEnumerator(name: "KP_IRQn", value: 10)
!236 = !DIEnumerator(name: "GPTimer_IRQn", value: 11)
!237 = !DIEnumerator(name: "EINT_IRQn", value: 12)
!238 = !DIEnumerator(name: "LCD_IRQn", value: 13)
!239 = !DIEnumerator(name: "LCD_AAL_IRQn", value: 14)
!240 = !DIEnumerator(name: "DSI_IRQn", value: 15)
!241 = !DIEnumerator(name: "RESIZE_IRQn", value: 16)
!242 = !DIEnumerator(name: "G2D_IRQn", value: 17)
!243 = !DIEnumerator(name: "CAM_IRQn", value: 18)
!244 = !DIEnumerator(name: "ROT_DMA_IRQn", value: 19)
!245 = !DIEnumerator(name: "SCAM_IRQn", value: 20)
!246 = !DIEnumerator(name: "DMA_IRQn", value: 21)
!247 = !DIEnumerator(name: "DMA_AO_IRQn", value: 22)
!248 = !DIEnumerator(name: "I2C_DUAL_IRQn", value: 23)
!249 = !DIEnumerator(name: "I2C0_IRQn", value: 24)
!250 = !DIEnumerator(name: "I2C1_IRQn", value: 25)
!251 = !DIEnumerator(name: "I2C2_IRQn", value: 26)
!252 = !DIEnumerator(name: "Reserved6_IRQn", value: 27)
!253 = !DIEnumerator(name: "GPCounter_IRQn", value: 28)
!254 = !DIEnumerator(name: "UART0_IRQn", value: 29)
!255 = !DIEnumerator(name: "UART1_IRQn", value: 30)
!256 = !DIEnumerator(name: "UART2_IRQn", value: 31)
!257 = !DIEnumerator(name: "UART3_IRQn", value: 32)
!258 = !DIEnumerator(name: "USB20_IRQn", value: 33)
!259 = !DIEnumerator(name: "MSDC0_IRQn", value: 34)
!260 = !DIEnumerator(name: "MSDC1_IRQn", value: 35)
!261 = !DIEnumerator(name: "Reserved7_IRQn", value: 36)
!262 = !DIEnumerator(name: "Reserved8_IRQn", value: 37)
!263 = !DIEnumerator(name: "SF_IRQn", value: 38)
!264 = !DIEnumerator(name: "DSP22CPU_IRQn", value: 39)
!265 = !DIEnumerator(name: "SensorDMA_IRQn", value: 40)
!266 = !DIEnumerator(name: "RGU_IRQn", value: 41)
!267 = !DIEnumerator(name: "SPI_SLV_IRQn", value: 42)
!268 = !DIEnumerator(name: "SPI_MST0_IRQn", value: 43)
!269 = !DIEnumerator(name: "SPI_MST1_IRQn", value: 44)
!270 = !DIEnumerator(name: "SPI_MST2_IRQn", value: 45)
!271 = !DIEnumerator(name: "SPI_MST3_IRQn", value: 46)
!272 = !DIEnumerator(name: "TRNG_IRQn", value: 47)
!273 = !DIEnumerator(name: "BT_TIMCON_IRQn", value: 48)
!274 = !DIEnumerator(name: "BTIF_IRQn", value: 49)
!275 = !DIEnumerator(name: "Reserved9_IRQn", value: 50)
!276 = !DIEnumerator(name: "Reserved10_IRQn", value: 51)
!277 = !DIEnumerator(name: "LISR0_IRQn", value: 52)
!278 = !DIEnumerator(name: "LISR1_IRQn", value: 53)
!279 = !DIEnumerator(name: "LISR2_IRQn", value: 54)
!280 = !DIEnumerator(name: "LISR3_IRQn", value: 55)
!281 = !DIEnumerator(name: "PSI_RISE_IRQn", value: 56)
!282 = !DIEnumerator(name: "PSI_FALL_IRQn", value: 57)
!283 = !DIEnumerator(name: "Reserved11_IRQn", value: 58)
!284 = !DIEnumerator(name: "Reserved12_IRQn", value: 59)
!285 = !DIEnumerator(name: "Reserved13_IRQn", value: 60)
!286 = !DIEnumerator(name: "Reserved14_IRQn", value: 61)
!287 = !DIEnumerator(name: "Reserved15_IRQn", value: 62)
!288 = !DIEnumerator(name: "Reserved16_IRQn", value: 63)
!289 = !DIEnumerator(name: "IRQ_NUMBER_MAX", value: 64)
!290 = !{!105, !291, !124}
!291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !292, size: 32)
!292 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPT_REGISTER_T", file: !100, line: 1272, baseType: !293)
!293 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !100, line: 1262, size: 288, elements: !294)
!294 = !{!295, !296, !297, !298, !300, !301, !302, !303, !304}
!295 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_CON", scope: !293, file: !100, line: 1263, baseType: !104, size: 32)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_CLK", scope: !293, file: !100, line: 1264, baseType: !104, size: 32, offset: 32)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQ_EN", scope: !293, file: !100, line: 1265, baseType: !104, size: 32, offset: 64)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQ_STA", scope: !293, file: !100, line: 1266, baseType: !299, size: 32, offset: 96)
!299 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !104)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQ_ACK", scope: !293, file: !100, line: 1267, baseType: !104, size: 32, offset: 128)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_COUNT", scope: !293, file: !100, line: 1268, baseType: !104, size: 32, offset: 160)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_COMPARE", scope: !293, file: !100, line: 1269, baseType: !104, size: 32, offset: 192)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_COUNTH", scope: !293, file: !100, line: 1270, baseType: !104, size: 32, offset: 224)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_COMPAREH", scope: !293, file: !100, line: 1271, baseType: !104, size: 32, offset: 256)
!305 = !{!202, !306, !315, !322, !338, !361}
!306 = !DIGlobalVariableExpression(var: !307, expr: !DIExpression())
!307 = distinct !DIGlobalVariable(name: "gp_gpt_glb", scope: !204, file: !205, line: 49, type: !308, isLocal: false, isDefinition: true)
!308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !309, size: 32)
!309 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPT_REGISTER_GLOABL_T", file: !100, line: 1260, baseType: !310)
!310 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !100, line: 1256, size: 96, elements: !311)
!311 = !{!312, !313, !314}
!312 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQSTA", scope: !310, file: !100, line: 1257, baseType: !299, size: 32)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQMSK0", scope: !310, file: !100, line: 1258, baseType: !104, size: 32, offset: 32)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQMSK1", scope: !310, file: !100, line: 1259, baseType: !104, size: 32, offset: 64)
!315 = !DIGlobalVariableExpression(var: !316, expr: !DIExpression())
!316 = distinct !DIGlobalVariable(name: "flag", scope: !317, file: !205, line: 88, type: !321, isLocal: true, isDefinition: true)
!317 = distinct !DISubprogram(name: "gpt_get_lfosc_clock", scope: !205, file: !205, line: 86, type: !318, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !204, retainedNodes: !320)
!318 = !DISubroutineType(types: !319)
!319 = !{null}
!320 = !{}
!321 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!322 = !DIGlobalVariableExpression(var: !323, expr: !DIExpression())
!323 = distinct !DIGlobalVariable(name: "g_gpt_context", scope: !204, file: !205, line: 51, type: !324, isLocal: false, isDefinition: true)
!324 = !DICompositeType(tag: DW_TAG_array_type, baseType: !325, size: 768, elements: !196)
!325 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpt_context_t", file: !161, line: 116, baseType: !326)
!326 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !161, line: 111, size: 128, elements: !327)
!327 = !{!328, !330, !336, !337}
!328 = !DIDerivedType(tag: DW_TAG_member, name: "running_status", scope: !326, file: !161, line: 112, baseType: !329, size: 32)
!329 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_running_status_t", file: !136, line: 400, baseType: !152)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "callback_context", scope: !326, file: !161, line: 113, baseType: !331, size: 64, offset: 32)
!331 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpt_callback_context_t", file: !161, line: 109, baseType: !332)
!332 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !161, line: 106, size: 64, elements: !333)
!333 = !{!334, !335}
!334 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !332, file: !161, line: 107, baseType: !188, size: 32)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !332, file: !161, line: 108, baseType: !124, size: 32, offset: 32)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "has_initilized", scope: !326, file: !161, line: 114, baseType: !321, size: 8, offset: 96)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "is_gpt_locked_sleep", scope: !326, file: !161, line: 115, baseType: !321, size: 8, offset: 104)
!338 = !DIGlobalVariableExpression(var: !339, expr: !DIExpression())
!339 = distinct !DIGlobalVariable(name: "gpt_sw_context", scope: !204, file: !205, line: 52, type: !340, isLocal: false, isDefinition: true)
!340 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpt_sw_context_t", file: !161, line: 134, baseType: !341)
!341 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !161, line: 125, size: 4256, elements: !342)
!342 = !{!343, !354, !355, !356, !357, !358, !359, !360}
!343 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !341, file: !161, line: 126, baseType: !344, size: 4096)
!344 = !DICompositeType(tag: DW_TAG_array_type, baseType: !345, size: 4096, elements: !352)
!345 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpt_sw_timer_t", file: !161, line: 123, baseType: !346)
!346 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !161, line: 118, size: 128, elements: !347)
!347 = !{!348, !349, !350, !351}
!348 = !DIDerivedType(tag: DW_TAG_member, name: "callback_context", scope: !346, file: !161, line: 119, baseType: !331, size: 64)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "time_out_ms", scope: !346, file: !161, line: 120, baseType: !105, size: 32, offset: 64)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "is_used", scope: !346, file: !161, line: 121, baseType: !321, size: 8, offset: 96)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "is_running", scope: !346, file: !161, line: 122, baseType: !321, size: 8, offset: 104)
!352 = !{!353}
!353 = !DISubrange(count: 32)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "absolute_time", scope: !341, file: !161, line: 127, baseType: !105, size: 32, offset: 4096)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "last_absolute_time", scope: !341, file: !161, line: 128, baseType: !105, size: 32, offset: 4128)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "used_timer_count", scope: !341, file: !161, line: 129, baseType: !105, size: 32, offset: 4160)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "running_timer_count", scope: !341, file: !161, line: 130, baseType: !105, size: 32, offset: 4192)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "is_first_init", scope: !341, file: !161, line: 131, baseType: !321, size: 8, offset: 4224)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "is_start_from_isr", scope: !341, file: !161, line: 132, baseType: !321, size: 8, offset: 4232)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "is_sw_gpt", scope: !341, file: !161, line: 133, baseType: !321, size: 8, offset: 4240)
!361 = !DIGlobalVariableExpression(var: !362, expr: !DIExpression())
!362 = distinct !DIGlobalVariable(name: "gpt_clock_source", scope: !204, file: !205, line: 53, type: !105, isLocal: false, isDefinition: true)
!363 = !DICompositeType(tag: DW_TAG_array_type, baseType: !291, size: 192, elements: !196)
!364 = !DIGlobalVariableExpression(var: !316, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!365 = !DIGlobalVariableExpression(var: !366, expr: !DIExpression())
!366 = distinct !DIGlobalVariable(name: "gpio_register_base", scope: !367, file: !368, line: 64, type: !468, isLocal: false, isDefinition: true)
!367 = distinct !DICompileUnit(language: DW_LANG_C99, file: !368, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !369, retainedTypes: !463, globals: !467, splitDebugInlining: false, nameTableKind: None)
!368 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_gpio.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/dac_output_data_repeatedly/GCC")
!369 = !{!370, !422, !429, !433, !439, !443, !452, !457}
!370 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !35, line: 339, baseType: !15, size: 32, elements: !371)
!371 = !{!372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421}
!372 = !DIEnumerator(name: "HAL_GPIO_0", value: 0)
!373 = !DIEnumerator(name: "HAL_GPIO_1", value: 1)
!374 = !DIEnumerator(name: "HAL_GPIO_2", value: 2)
!375 = !DIEnumerator(name: "HAL_GPIO_3", value: 3)
!376 = !DIEnumerator(name: "HAL_GPIO_4", value: 4)
!377 = !DIEnumerator(name: "HAL_GPIO_5", value: 5)
!378 = !DIEnumerator(name: "HAL_GPIO_6", value: 6)
!379 = !DIEnumerator(name: "HAL_GPIO_7", value: 7)
!380 = !DIEnumerator(name: "HAL_GPIO_8", value: 8)
!381 = !DIEnumerator(name: "HAL_GPIO_9", value: 9)
!382 = !DIEnumerator(name: "HAL_GPIO_10", value: 10)
!383 = !DIEnumerator(name: "HAL_GPIO_11", value: 11)
!384 = !DIEnumerator(name: "HAL_GPIO_12", value: 12)
!385 = !DIEnumerator(name: "HAL_GPIO_13", value: 13)
!386 = !DIEnumerator(name: "HAL_GPIO_14", value: 14)
!387 = !DIEnumerator(name: "HAL_GPIO_15", value: 15)
!388 = !DIEnumerator(name: "HAL_GPIO_16", value: 16)
!389 = !DIEnumerator(name: "HAL_GPIO_17", value: 17)
!390 = !DIEnumerator(name: "HAL_GPIO_18", value: 18)
!391 = !DIEnumerator(name: "HAL_GPIO_19", value: 19)
!392 = !DIEnumerator(name: "HAL_GPIO_20", value: 20)
!393 = !DIEnumerator(name: "HAL_GPIO_21", value: 21)
!394 = !DIEnumerator(name: "HAL_GPIO_22", value: 22)
!395 = !DIEnumerator(name: "HAL_GPIO_23", value: 23)
!396 = !DIEnumerator(name: "HAL_GPIO_24", value: 24)
!397 = !DIEnumerator(name: "HAL_GPIO_25", value: 25)
!398 = !DIEnumerator(name: "HAL_GPIO_26", value: 26)
!399 = !DIEnumerator(name: "HAL_GPIO_27", value: 27)
!400 = !DIEnumerator(name: "HAL_GPIO_28", value: 28)
!401 = !DIEnumerator(name: "HAL_GPIO_29", value: 29)
!402 = !DIEnumerator(name: "HAL_GPIO_30", value: 30)
!403 = !DIEnumerator(name: "HAL_GPIO_31", value: 31)
!404 = !DIEnumerator(name: "HAL_GPIO_32", value: 32)
!405 = !DIEnumerator(name: "HAL_GPIO_33", value: 33)
!406 = !DIEnumerator(name: "HAL_GPIO_34", value: 34)
!407 = !DIEnumerator(name: "HAL_GPIO_35", value: 35)
!408 = !DIEnumerator(name: "HAL_GPIO_36", value: 36)
!409 = !DIEnumerator(name: "HAL_GPIO_37", value: 37)
!410 = !DIEnumerator(name: "HAL_GPIO_38", value: 38)
!411 = !DIEnumerator(name: "HAL_GPIO_39", value: 39)
!412 = !DIEnumerator(name: "HAL_GPIO_40", value: 40)
!413 = !DIEnumerator(name: "HAL_GPIO_41", value: 41)
!414 = !DIEnumerator(name: "HAL_GPIO_42", value: 42)
!415 = !DIEnumerator(name: "HAL_GPIO_43", value: 43)
!416 = !DIEnumerator(name: "HAL_GPIO_44", value: 44)
!417 = !DIEnumerator(name: "HAL_GPIO_45", value: 45)
!418 = !DIEnumerator(name: "HAL_GPIO_46", value: 46)
!419 = !DIEnumerator(name: "HAL_GPIO_47", value: 47)
!420 = !DIEnumerator(name: "HAL_GPIO_48", value: 48)
!421 = !DIEnumerator(name: "HAL_GPIO_MAX", value: 49)
!422 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !423, line: 224, baseType: !7, size: 32, elements: !424)
!423 = !DIFile(filename: "../../../../../driver/chip/inc/hal_gpio.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/dac_output_data_repeatedly/GCC")
!424 = !{!425, !426, !427, !428}
!425 = !DIEnumerator(name: "HAL_GPIO_STATUS_ERROR", value: -3)
!426 = !DIEnumerator(name: "HAL_GPIO_STATUS_ERROR_PIN", value: -2)
!427 = !DIEnumerator(name: "HAL_GPIO_STATUS_INVALID_PARAMETER", value: -1)
!428 = !DIEnumerator(name: "HAL_GPIO_STATUS_OK", value: 0)
!429 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !423, line: 210, baseType: !15, size: 32, elements: !430)
!430 = !{!431, !432}
!431 = !DIEnumerator(name: "HAL_GPIO_DIRECTION_INPUT", value: 0)
!432 = !DIEnumerator(name: "HAL_GPIO_DIRECTION_OUTPUT", value: 1)
!433 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !423, line: 233, baseType: !7, size: 32, elements: !434)
!434 = !{!435, !436, !437, !438}
!435 = !DIEnumerator(name: "HAL_PINMUX_STATUS_ERROR", value: -3)
!436 = !DIEnumerator(name: "HAL_PINMUX_STATUS_ERROR_PORT", value: -2)
!437 = !DIEnumerator(name: "HAL_PINMUX_STATUS_INVALID_FUNCTION", value: -1)
!438 = !DIEnumerator(name: "HAL_PINMUX_STATUS_OK", value: 0)
!439 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !423, line: 217, baseType: !15, size: 32, elements: !440)
!440 = !{!441, !442}
!441 = !DIEnumerator(name: "HAL_GPIO_DATA_LOW", value: 0)
!442 = !DIEnumerator(name: "HAL_GPIO_DATA_HIGH", value: 1)
!443 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !35, line: 415, baseType: !15, size: 32, elements: !444)
!444 = !{!445, !446, !447, !448, !449, !450, !451}
!445 = !DIEnumerator(name: "HAL_GPIO_CLOCK_0", value: 0)
!446 = !DIEnumerator(name: "HAL_GPIO_CLOCK_1", value: 1)
!447 = !DIEnumerator(name: "HAL_GPIO_CLOCK_2", value: 2)
!448 = !DIEnumerator(name: "HAL_GPIO_CLOCK_3", value: 3)
!449 = !DIEnumerator(name: "HAL_GPIO_CLOCK_4", value: 4)
!450 = !DIEnumerator(name: "HAL_GPIO_CLOCK_5", value: 5)
!451 = !DIEnumerator(name: "HAL_GPIO_CLOCK_MAX", value: 6)
!452 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !35, line: 427, baseType: !15, size: 32, elements: !453)
!453 = !{!454, !455, !456}
!454 = !DIEnumerator(name: "HAL_GPIO_CLOCK_MODE_26M", value: 1)
!455 = !DIEnumerator(name: "HAL_GPIO_CLOCK_MODE_32K", value: 4)
!456 = !DIEnumerator(name: "HAL_GPIO_CLOCK_MODE_MAX", value: 5)
!457 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !423, line: 242, baseType: !15, size: 32, elements: !458)
!458 = !{!459, !460, !461, !462}
!459 = !DIEnumerator(name: "HAL_GPIO_DRIVING_CURRENT_4MA", value: 0)
!460 = !DIEnumerator(name: "HAL_GPIO_DRIVING_CURRENT_8MA", value: 1)
!461 = !DIEnumerator(name: "HAL_GPIO_DRIVING_CURRENT_12MA", value: 2)
!462 = !DIEnumerator(name: "HAL_GPIO_DRIVING_CURRENT_16MA", value: 3)
!463 = !{!124, !464, !465, !466}
!464 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_direction_t", file: !423, line: 213, baseType: !429)
!465 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_data_t", file: !423, line: 220, baseType: !439)
!466 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_driving_current_t", file: !423, line: 247, baseType: !457)
!467 = !{!365}
!468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !469, size: 32)
!469 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_REGISTER_T", file: !100, line: 1554, baseType: !470)
!470 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !100, line: 1522, size: 29440, elements: !471)
!471 = !{!472, !486, !490, !499, !500, !509, !510, !519, !520, !530, !531, !540, !541, !550, !551, !560, !561, !570, !574, !583, !584, !593, !594, !603, !612, !613, !624, !628, !637, !638}
!472 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIR_REGISTER", scope: !470, file: !100, line: 1523, baseType: !473, size: 256)
!473 = !DICompositeType(tag: DW_TAG_array_type, baseType: !474, size: 256, elements: !484)
!474 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_DIR_REGISTER_T", file: !100, line: 1400, baseType: !475)
!475 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !100, line: 1395, size: 128, elements: !476)
!476 = !{!477, !478, !479, !480}
!477 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIR", scope: !475, file: !100, line: 1396, baseType: !104, size: 32)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIR_SET", scope: !475, file: !100, line: 1397, baseType: !104, size: 32, offset: 32)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIR_CLR", scope: !475, file: !100, line: 1398, baseType: !104, size: 32, offset: 64)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !475, file: !100, line: 1399, baseType: !481, size: 32, offset: 96)
!481 = !DICompositeType(tag: DW_TAG_array_type, baseType: !127, size: 32, elements: !482)
!482 = !{!483}
!483 = !DISubrange(count: 4)
!484 = !{!485}
!485 = !DISubrange(count: 2)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET1", scope: !470, file: !100, line: 1524, baseType: !487, size: 1792, offset: 256)
!487 = !DICompositeType(tag: DW_TAG_array_type, baseType: !127, size: 1792, elements: !488)
!488 = !{!489}
!489 = !DISubrange(count: 224)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLEN_REGISTER", scope: !470, file: !100, line: 1525, baseType: !491, size: 256, offset: 2048)
!491 = !DICompositeType(tag: DW_TAG_array_type, baseType: !492, size: 256, elements: !484)
!492 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_PULLEN_REGISTER_T", file: !100, line: 1409, baseType: !493)
!493 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !100, line: 1404, size: 128, elements: !494)
!494 = !{!495, !496, !497, !498}
!495 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLEN", scope: !493, file: !100, line: 1405, baseType: !104, size: 32)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLEN_SET", scope: !493, file: !100, line: 1406, baseType: !104, size: 32, offset: 32)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLEN_CLR", scope: !493, file: !100, line: 1407, baseType: !104, size: 32, offset: 64)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !493, file: !100, line: 1408, baseType: !481, size: 32, offset: 96)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET2", scope: !470, file: !100, line: 1526, baseType: !487, size: 1792, offset: 2304)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DINV_REGISTER", scope: !470, file: !100, line: 1527, baseType: !501, size: 256, offset: 4096)
!501 = !DICompositeType(tag: DW_TAG_array_type, baseType: !502, size: 256, elements: !484)
!502 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_DINV_REGISTER_T", file: !100, line: 1417, baseType: !503)
!503 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !100, line: 1412, size: 128, elements: !504)
!504 = !{!505, !506, !507, !508}
!505 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DINV", scope: !503, file: !100, line: 1413, baseType: !104, size: 32)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DINV_SET", scope: !503, file: !100, line: 1414, baseType: !104, size: 32, offset: 32)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DINV_CLR", scope: !503, file: !100, line: 1415, baseType: !104, size: 32, offset: 64)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !503, file: !100, line: 1416, baseType: !481, size: 32, offset: 96)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET3", scope: !470, file: !100, line: 1528, baseType: !487, size: 1792, offset: 4352)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DOUT_REGISTER", scope: !470, file: !100, line: 1529, baseType: !511, size: 256, offset: 6144)
!511 = !DICompositeType(tag: DW_TAG_array_type, baseType: !512, size: 256, elements: !484)
!512 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_DOUT_REGISTER_T", file: !100, line: 1426, baseType: !513)
!513 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !100, line: 1421, size: 128, elements: !514)
!514 = !{!515, !516, !517, !518}
!515 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DOUT", scope: !513, file: !100, line: 1422, baseType: !104, size: 32)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DOUT_SET", scope: !513, file: !100, line: 1423, baseType: !104, size: 32, offset: 32)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DOUT_CLR", scope: !513, file: !100, line: 1424, baseType: !104, size: 32, offset: 64)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !513, file: !100, line: 1425, baseType: !481, size: 32, offset: 96)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET4", scope: !470, file: !100, line: 1530, baseType: !487, size: 1792, offset: 6400)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIN_REGISTER", scope: !470, file: !100, line: 1531, baseType: !521, size: 256, offset: 8192)
!521 = !DICompositeType(tag: DW_TAG_array_type, baseType: !522, size: 256, elements: !484)
!522 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_DIN_REGISTER_T", file: !100, line: 1432, baseType: !523)
!523 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !100, line: 1429, size: 128, elements: !524)
!524 = !{!525, !526}
!525 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIN", scope: !523, file: !100, line: 1430, baseType: !104, size: 32)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !523, file: !100, line: 1431, baseType: !527, size: 96, offset: 32)
!527 = !DICompositeType(tag: DW_TAG_array_type, baseType: !127, size: 96, elements: !528)
!528 = !{!529}
!529 = !DISubrange(count: 12)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET5", scope: !470, file: !100, line: 1532, baseType: !487, size: 1792, offset: 8448)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLSEL_REGISTER", scope: !470, file: !100, line: 1533, baseType: !532, size: 256, offset: 10240)
!532 = !DICompositeType(tag: DW_TAG_array_type, baseType: !533, size: 256, elements: !484)
!533 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_PULLSEL_REGISTER_T", file: !100, line: 1440, baseType: !534)
!534 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !100, line: 1435, size: 128, elements: !535)
!535 = !{!536, !537, !538, !539}
!536 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLSEL", scope: !534, file: !100, line: 1436, baseType: !104, size: 32)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLSEL_SET", scope: !534, file: !100, line: 1437, baseType: !104, size: 32, offset: 32)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLSEL_CLR", scope: !534, file: !100, line: 1438, baseType: !104, size: 32, offset: 64)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !534, file: !100, line: 1439, baseType: !481, size: 32, offset: 96)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET6", scope: !470, file: !100, line: 1534, baseType: !487, size: 1792, offset: 10496)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SMT_REGISTER", scope: !470, file: !100, line: 1535, baseType: !542, size: 256, offset: 12288)
!542 = !DICompositeType(tag: DW_TAG_array_type, baseType: !543, size: 256, elements: !484)
!543 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_SMT_REGISTER_T", file: !100, line: 1448, baseType: !544)
!544 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !100, line: 1443, size: 128, elements: !545)
!545 = !{!546, !547, !548, !549}
!546 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SMT", scope: !544, file: !100, line: 1444, baseType: !104, size: 32)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SMT_SET", scope: !544, file: !100, line: 1445, baseType: !104, size: 32, offset: 32)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SMT_CLR", scope: !544, file: !100, line: 1446, baseType: !104, size: 32, offset: 64)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !544, file: !100, line: 1447, baseType: !481, size: 32, offset: 96)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET7", scope: !470, file: !100, line: 1536, baseType: !487, size: 1792, offset: 12544)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SR_REGISTER", scope: !470, file: !100, line: 1537, baseType: !552, size: 256, offset: 14336)
!552 = !DICompositeType(tag: DW_TAG_array_type, baseType: !553, size: 256, elements: !484)
!553 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_SR_REGISTER_T", file: !100, line: 1455, baseType: !554)
!554 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !100, line: 1450, size: 128, elements: !555)
!555 = !{!556, !557, !558, !559}
!556 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SR", scope: !554, file: !100, line: 1451, baseType: !104, size: 32)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SR_SET", scope: !554, file: !100, line: 1452, baseType: !104, size: 32, offset: 32)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SR_CLR", scope: !554, file: !100, line: 1453, baseType: !104, size: 32, offset: 64)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !554, file: !100, line: 1454, baseType: !481, size: 32, offset: 96)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET8", scope: !470, file: !100, line: 1538, baseType: !487, size: 1792, offset: 14592)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DRV_REGISTER", scope: !470, file: !100, line: 1539, baseType: !562, size: 512, offset: 16384)
!562 = !DICompositeType(tag: DW_TAG_array_type, baseType: !563, size: 512, elements: !482)
!563 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_DRV_REGISTER_T", file: !100, line: 1463, baseType: !564)
!564 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !100, line: 1458, size: 128, elements: !565)
!565 = !{!566, !567, !568, !569}
!566 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DRV", scope: !564, file: !100, line: 1459, baseType: !104, size: 32)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DRV_SET", scope: !564, file: !100, line: 1460, baseType: !104, size: 32, offset: 32)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DRV_CLR", scope: !564, file: !100, line: 1461, baseType: !104, size: 32, offset: 64)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !564, file: !100, line: 1462, baseType: !481, size: 32, offset: 96)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET9", scope: !470, file: !100, line: 1540, baseType: !571, size: 1536, offset: 16896)
!571 = !DICompositeType(tag: DW_TAG_array_type, baseType: !127, size: 1536, elements: !572)
!572 = !{!573}
!573 = !DISubrange(count: 192)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_IES_REGISTER", scope: !470, file: !100, line: 1541, baseType: !575, size: 256, offset: 18432)
!575 = !DICompositeType(tag: DW_TAG_array_type, baseType: !576, size: 256, elements: !484)
!576 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_IES_REGISTER_T", file: !100, line: 1471, baseType: !577)
!577 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !100, line: 1466, size: 128, elements: !578)
!578 = !{!579, !580, !581, !582}
!579 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_IES", scope: !577, file: !100, line: 1467, baseType: !104, size: 32)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_IES_SET", scope: !577, file: !100, line: 1468, baseType: !104, size: 32, offset: 32)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_IES_CLR", scope: !577, file: !100, line: 1469, baseType: !104, size: 32, offset: 64)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !577, file: !100, line: 1470, baseType: !481, size: 32, offset: 96)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET10", scope: !470, file: !100, line: 1542, baseType: !487, size: 1792, offset: 18688)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PUPD_REGISTER", scope: !470, file: !100, line: 1543, baseType: !585, size: 256, offset: 20480)
!585 = !DICompositeType(tag: DW_TAG_array_type, baseType: !586, size: 256, elements: !484)
!586 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_PUPD_REGISTER_T", file: !100, line: 1480, baseType: !587)
!587 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !100, line: 1475, size: 128, elements: !588)
!588 = !{!589, !590, !591, !592}
!589 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PUPD", scope: !587, file: !100, line: 1476, baseType: !104, size: 32)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PUPD_SET", scope: !587, file: !100, line: 1477, baseType: !104, size: 32, offset: 32)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PUPD_CLR", scope: !587, file: !100, line: 1478, baseType: !104, size: 32, offset: 64)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !587, file: !100, line: 1479, baseType: !481, size: 32, offset: 96)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET11", scope: !470, file: !100, line: 1544, baseType: !487, size: 1792, offset: 20736)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN0_REGISTER", scope: !470, file: !100, line: 1545, baseType: !595, size: 256, offset: 22528)
!595 = !DICompositeType(tag: DW_TAG_array_type, baseType: !596, size: 256, elements: !484)
!596 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_RESEN0_REGISTER_T", file: !100, line: 1489, baseType: !597)
!597 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !100, line: 1484, size: 128, elements: !598)
!598 = !{!599, !600, !601, !602}
!599 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN0", scope: !597, file: !100, line: 1485, baseType: !104, size: 32)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN0_SET", scope: !597, file: !100, line: 1486, baseType: !104, size: 32, offset: 32)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN0_CLR", scope: !597, file: !100, line: 1487, baseType: !104, size: 32, offset: 64)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !597, file: !100, line: 1488, baseType: !481, size: 32, offset: 96)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN1_REGISTER", scope: !470, file: !100, line: 1546, baseType: !604, size: 256, offset: 22784)
!604 = !DICompositeType(tag: DW_TAG_array_type, baseType: !605, size: 256, elements: !484)
!605 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_RESEN1_REGISTER_T", file: !100, line: 1497, baseType: !606)
!606 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !100, line: 1492, size: 128, elements: !607)
!607 = !{!608, !609, !610, !611}
!608 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN1", scope: !606, file: !100, line: 1493, baseType: !104, size: 32)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN1_SET", scope: !606, file: !100, line: 1494, baseType: !104, size: 32, offset: 32)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN1_CLR", scope: !606, file: !100, line: 1495, baseType: !104, size: 32, offset: 64)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !606, file: !100, line: 1496, baseType: !481, size: 32, offset: 96)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET12", scope: !470, file: !100, line: 1547, baseType: !571, size: 1536, offset: 23040)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_MODE_REGISTER", scope: !470, file: !100, line: 1548, baseType: !614, size: 896, offset: 24576)
!614 = !DICompositeType(tag: DW_TAG_array_type, baseType: !615, size: 896, elements: !622)
!615 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_MODE_REGISTER_T", file: !100, line: 1505, baseType: !616)
!616 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !100, line: 1500, size: 128, elements: !617)
!617 = !{!618, !619, !620, !621}
!618 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_MODE", scope: !616, file: !100, line: 1501, baseType: !104, size: 32)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_MODE_SET", scope: !616, file: !100, line: 1502, baseType: !104, size: 32, offset: 32)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_MODE_CLR", scope: !616, file: !100, line: 1503, baseType: !104, size: 32, offset: 64)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !616, file: !100, line: 1504, baseType: !481, size: 32, offset: 96)
!622 = !{!623}
!623 = !DISubrange(count: 7)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET13", scope: !470, file: !100, line: 1549, baseType: !625, size: 1152, offset: 25472)
!625 = !DICompositeType(tag: DW_TAG_array_type, baseType: !127, size: 1152, elements: !626)
!626 = !{!627}
!627 = !DISubrange(count: 144)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_TDSEL_REGISTER", scope: !470, file: !100, line: 1550, baseType: !629, size: 512, offset: 26624)
!629 = !DICompositeType(tag: DW_TAG_array_type, baseType: !630, size: 512, elements: !482)
!630 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TDSEL_REGISTER_T", file: !100, line: 1513, baseType: !631)
!631 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !100, line: 1508, size: 128, elements: !632)
!632 = !{!633, !634, !635, !636}
!633 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_TDSEL", scope: !631, file: !100, line: 1509, baseType: !104, size: 32)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_TDSEL_SET", scope: !631, file: !100, line: 1510, baseType: !104, size: 32, offset: 32)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_TDSEL_CLR", scope: !631, file: !100, line: 1511, baseType: !104, size: 32, offset: 64)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !631, file: !100, line: 1512, baseType: !481, size: 32, offset: 96)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET14", scope: !470, file: !100, line: 1551, baseType: !571, size: 1536, offset: 27136)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_CLKOUT_REGISTER", scope: !470, file: !100, line: 1552, baseType: !639, size: 768, offset: 28672)
!639 = !DICompositeType(tag: DW_TAG_array_type, baseType: !640, size: 768, elements: !196)
!640 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_CLKOUT_REGISTER_T", file: !100, line: 1519, baseType: !641)
!641 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !100, line: 1516, size: 128, elements: !642)
!642 = !{!643, !644}
!643 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_CLKOUT", scope: !641, file: !100, line: 1517, baseType: !104, size: 32)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !641, file: !100, line: 1518, baseType: !527, size: 96, offset: 32)
!645 = !DIGlobalVariableExpression(var: !646, expr: !DIExpression())
!646 = distinct !DIGlobalVariable(name: "g_uart_hwstatus", scope: !647, file: !648, line: 101, type: !833, isLocal: true, isDefinition: true)
!647 = distinct !DICompileUnit(language: DW_LANG_C99, file: !648, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !649, retainedTypes: !744, globals: !754, splitDebugInlining: false, nameTableKind: None)
!648 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_uart.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/dac_output_data_repeatedly/GCC")
!649 = !{!650, !657, !672, !678, !684, !689, !694, !701, !717, !723, !727, !27, !732, !740}
!650 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !35, line: 180, baseType: !15, size: 32, elements: !651)
!651 = !{!652, !653, !654, !655, !656}
!652 = !DIEnumerator(name: "HAL_UART_0", value: 0)
!653 = !DIEnumerator(name: "HAL_UART_1", value: 1)
!654 = !DIEnumerator(name: "HAL_UART_2", value: 2)
!655 = !DIEnumerator(name: "HAL_UART_3", value: 3)
!656 = !DIEnumerator(name: "HAL_UART_MAX", value: 4)
!657 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !658, line: 189, baseType: !15, size: 32, elements: !659)
!658 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_pdma_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/dac_output_data_repeatedly/GCC")
!659 = !{!660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671}
!660 = !DIEnumerator(name: "VDMA_START_CHANNEL", value: 8)
!661 = !DIEnumerator(name: "VDMA_UART1TX", value: 8)
!662 = !DIEnumerator(name: "VDMA_UART1RX", value: 9)
!663 = !DIEnumerator(name: "VDMA_UART2TX", value: 10)
!664 = !DIEnumerator(name: "VDMA_UART2RX", value: 11)
!665 = !DIEnumerator(name: "VDMA_UART3TX", value: 12)
!666 = !DIEnumerator(name: "VDMA_UART3RX", value: 13)
!667 = !DIEnumerator(name: "VDMA_UART0TX", value: 14)
!668 = !DIEnumerator(name: "VDMA_UART0RX", value: 15)
!669 = !DIEnumerator(name: "VDMA_BTIFTX", value: 16)
!670 = !DIEnumerator(name: "VDMA_BTIFRX", value: 17)
!671 = !DIEnumerator(name: "VDMA_END_CHANNEL", value: 18)
!672 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !673, line: 355, baseType: !7, size: 32, elements: !674)
!673 = !DIFile(filename: "../../../../../driver/chip/inc/hal_uart.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/dac_output_data_repeatedly/GCC")
!674 = !{!675, !676, !677}
!675 = !DIEnumerator(name: "HAL_UART_EVENT_TRANSACTION_ERROR", value: -1)
!676 = !DIEnumerator(name: "HAL_UART_EVENT_READY_TO_READ", value: 1)
!677 = !DIEnumerator(name: "HAL_UART_EVENT_READY_TO_WRITE", value: 2)
!678 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !658, line: 206, baseType: !7, size: 32, elements: !679)
!679 = !{!680, !681, !682, !683}
!680 = !DIEnumerator(name: "VDMA_ERROR", value: -3)
!681 = !DIEnumerator(name: "VDMA_ERROR_CHANNEL", value: -2)
!682 = !DIEnumerator(name: "VDMA_INVALID_PARAMETER", value: -1)
!683 = !DIEnumerator(name: "VDMA_OK", value: 0)
!684 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !648, line: 65, baseType: !15, size: 32, elements: !685)
!685 = !{!686, !687, !688}
!686 = !DIEnumerator(name: "UART_HWSTATUS_UNINITIALIZED", value: 0)
!687 = !DIEnumerator(name: "UART_HWSTATUS_POLL_INITIALIZED", value: 1)
!688 = !DIEnumerator(name: "UART_HWSTATUS_DMA_INITIALIZED", value: 2)
!689 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !648, line: 77, baseType: !15, size: 32, elements: !690)
!690 = !{!691, !692, !693}
!691 = !DIEnumerator(name: "UART_FLOWCONTROL_NONE", value: 0)
!692 = !DIEnumerator(name: "UART_FLOWCONTROL_SOFTWARE", value: 1)
!693 = !DIEnumerator(name: "UART_FLOWCONTROL_HARDWARE", value: 2)
!694 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !673, line: 345, baseType: !7, size: 32, elements: !695)
!695 = !{!696, !697, !698, !699, !700}
!696 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR_PARAMETER", value: -4)
!697 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR_BUSY", value: -3)
!698 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR_UNINITIALIZED", value: -2)
!699 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR", value: -1)
!700 = !DIEnumerator(name: "HAL_UART_STATUS_OK", value: 0)
!701 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !673, line: 302, baseType: !15, size: 32, elements: !702)
!702 = !{!703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716}
!703 = !DIEnumerator(name: "HAL_UART_BAUDRATE_110", value: 0)
!704 = !DIEnumerator(name: "HAL_UART_BAUDRATE_300", value: 1)
!705 = !DIEnumerator(name: "HAL_UART_BAUDRATE_1200", value: 2)
!706 = !DIEnumerator(name: "HAL_UART_BAUDRATE_2400", value: 3)
!707 = !DIEnumerator(name: "HAL_UART_BAUDRATE_4800", value: 4)
!708 = !DIEnumerator(name: "HAL_UART_BAUDRATE_9600", value: 5)
!709 = !DIEnumerator(name: "HAL_UART_BAUDRATE_19200", value: 6)
!710 = !DIEnumerator(name: "HAL_UART_BAUDRATE_38400", value: 7)
!711 = !DIEnumerator(name: "HAL_UART_BAUDRATE_57600", value: 8)
!712 = !DIEnumerator(name: "HAL_UART_BAUDRATE_115200", value: 9)
!713 = !DIEnumerator(name: "HAL_UART_BAUDRATE_230400", value: 10)
!714 = !DIEnumerator(name: "HAL_UART_BAUDRATE_460800", value: 11)
!715 = !DIEnumerator(name: "HAL_UART_BAUDRATE_921600", value: 12)
!716 = !DIEnumerator(name: "HAL_UART_BAUDRATE_MAX", value: 13)
!717 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !673, line: 321, baseType: !15, size: 32, elements: !718)
!718 = !{!719, !720, !721, !722}
!719 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_5", value: 0)
!720 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_6", value: 1)
!721 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_7", value: 2)
!722 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_8", value: 3)
!723 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !673, line: 330, baseType: !15, size: 32, elements: !724)
!724 = !{!725, !726}
!725 = !DIEnumerator(name: "HAL_UART_STOP_BIT_1", value: 0)
!726 = !DIEnumerator(name: "HAL_UART_STOP_BIT_2", value: 1)
!727 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !673, line: 337, baseType: !15, size: 32, elements: !728)
!728 = !{!729, !730, !731}
!729 = !DIEnumerator(name: "HAL_UART_PARITY_NONE", value: 0)
!730 = !DIEnumerator(name: "HAL_UART_PARITY_ODD", value: 1)
!731 = !DIEnumerator(name: "HAL_UART_PARITY_EVEN", value: 2)
!732 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !733, line: 152, baseType: !7, size: 32, elements: !734)
!733 = !DIFile(filename: "../../../../../driver/chip/inc/hal_nvic.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/dac_output_data_repeatedly/GCC")
!734 = !{!735, !736, !737, !738, !739}
!735 = !DIEnumerator(name: "HAL_NVIC_STATUS_ERROR_NO_ISR", value: -4)
!736 = !DIEnumerator(name: "HAL_NVIC_STATUS_ERROR_IRQ_NUMBER", value: -3)
!737 = !DIEnumerator(name: "HAL_NVIC_STATUS_INVALID_PARAMETER", value: -2)
!738 = !DIEnumerator(name: "HAL_NVIC_STATUS_ERROR", value: -1)
!739 = !DIEnumerator(name: "HAL_NVIC_STATUS_OK", value: 0)
!740 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !658, line: 222, baseType: !7, size: 32, elements: !741)
!741 = !{!742, !743}
!742 = !DIEnumerator(name: "VDMA_EVENT_TRANSACTION_ERROR", value: -1)
!743 = !DIEnumerator(name: "VDMA_EVENT_TRANSACTION_SUCCESS", value: 0)
!744 = !{!124, !745, !105, !746}
!745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !201, size: 32)
!746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !747, size: 32)
!747 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_dma_callback_data_t", file: !748, line: 96, baseType: !749)
!748 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_uart_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/dac_output_data_repeatedly/GCC")
!749 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !748, line: 93, size: 64, elements: !750)
!750 = !{!751, !752}
!751 = !DIDerivedType(tag: DW_TAG_member, name: "is_rx", scope: !749, file: !748, line: 94, baseType: !321, size: 8)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "uart_port", scope: !749, file: !748, line: 95, baseType: !753, size: 32, offset: 32)
!753 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_port_t", file: !35, line: 186, baseType: !650)
!754 = !{!755, !758, !760, !762, !764, !768, !777, !791, !645, !793, !806, !811, !825, !831}
!755 = !DIGlobalVariableExpression(var: !756, expr: !DIExpression())
!756 = distinct !DIGlobalVariable(name: "g_uart_frist_send_complete_interrupt", scope: !647, file: !648, line: 92, type: !757, isLocal: true, isDefinition: true)
!757 = !DICompositeType(tag: DW_TAG_array_type, baseType: !321, size: 32, elements: !482)
!758 = !DIGlobalVariableExpression(var: !759, expr: !DIExpression())
!759 = distinct !DIGlobalVariable(name: "g_uart_restore_init", scope: !647, file: !648, line: 93, type: !321, isLocal: true, isDefinition: true)
!760 = !DIGlobalVariableExpression(var: !761, expr: !DIExpression())
!761 = distinct !DIGlobalVariable(name: "g_uart_send_lock_status", scope: !647, file: !648, line: 94, type: !757, isLocal: true, isDefinition: true)
!762 = !DIGlobalVariableExpression(var: !763, expr: !DIExpression())
!763 = distinct !DIGlobalVariable(name: "g_uart_sleep_handler", scope: !647, file: !648, line: 95, type: !481, isLocal: true, isDefinition: true)
!764 = !DIGlobalVariableExpression(var: !765, expr: !DIExpression())
!765 = distinct !DIGlobalVariable(name: "g_uart_flowcontrol_status", scope: !647, file: !648, line: 96, type: !766, isLocal: true, isDefinition: true)
!766 = !DICompositeType(tag: DW_TAG_array_type, baseType: !767, size: 128, elements: !482)
!767 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_flowcontrol_t", file: !648, line: 81, baseType: !689)
!768 = !DIGlobalVariableExpression(var: !769, expr: !DIExpression())
!769 = distinct !DIGlobalVariable(name: "g_uart_sw_flowcontrol_config", scope: !647, file: !648, line: 97, type: !770, isLocal: true, isDefinition: true)
!770 = !DICompositeType(tag: DW_TAG_array_type, baseType: !771, size: 96, elements: !482)
!771 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_sw_flowcontrol_config_t", file: !648, line: 87, baseType: !772)
!772 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !648, line: 83, size: 24, elements: !773)
!773 = !{!774, !775, !776}
!774 = !DIDerivedType(tag: DW_TAG_member, name: "xon", scope: !772, file: !648, line: 84, baseType: !127, size: 8)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "xoff", scope: !772, file: !648, line: 85, baseType: !127, size: 8, offset: 8)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "escape_character", scope: !772, file: !648, line: 86, baseType: !127, size: 8, offset: 16)
!777 = !DIGlobalVariableExpression(var: !778, expr: !DIExpression())
!778 = distinct !DIGlobalVariable(name: "g_uart_config", scope: !647, file: !648, line: 98, type: !779, isLocal: true, isDefinition: true)
!779 = !DICompositeType(tag: DW_TAG_array_type, baseType: !780, size: 512, elements: !482)
!780 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_config_t", file: !673, line: 378, baseType: !781)
!781 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !673, line: 373, size: 128, elements: !782)
!782 = !{!783, !785, !787, !789}
!783 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !781, file: !673, line: 374, baseType: !784, size: 32)
!784 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_baudrate_t", file: !673, line: 317, baseType: !701)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "word_length", scope: !781, file: !673, line: 375, baseType: !786, size: 32, offset: 32)
!786 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_word_length_t", file: !673, line: 326, baseType: !717)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bit", scope: !781, file: !673, line: 376, baseType: !788, size: 32, offset: 64)
!788 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_stop_bit_t", file: !673, line: 333, baseType: !723)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !781, file: !673, line: 377, baseType: !790, size: 32, offset: 96)
!790 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_parity_t", file: !673, line: 341, baseType: !727)
!791 = !DIGlobalVariableExpression(var: !792, expr: !DIExpression())
!792 = distinct !DIGlobalVariable(name: "g_uart_irq_pending_status", scope: !647, file: !648, line: 99, type: !757, isLocal: true, isDefinition: true)
!793 = !DIGlobalVariableExpression(var: !794, expr: !DIExpression())
!794 = distinct !DIGlobalVariable(name: "g_uart_callback", scope: !647, file: !648, line: 102, type: !795, isLocal: true, isDefinition: true)
!795 = !DICompositeType(tag: DW_TAG_array_type, baseType: !796, size: 256, elements: !482)
!796 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_callback_t", file: !648, line: 74, baseType: !797)
!797 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !648, line: 71, size: 64, elements: !798)
!798 = !{!799, !805}
!799 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !797, file: !648, line: 72, baseType: !800, size: 32)
!800 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_callback_t", file: !673, line: 410, baseType: !801)
!801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !802, size: 32)
!802 = !DISubroutineType(types: !803)
!803 = !{null, !804, !124}
!804 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_callback_event_t", file: !673, line: 359, baseType: !672)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !797, file: !648, line: 73, baseType: !124, size: 32, offset: 32)
!806 = !DIGlobalVariableExpression(var: !807, expr: !DIExpression())
!807 = distinct !DIGlobalVariable(name: "g_uart_dma_callback_data", scope: !647, file: !648, line: 103, type: !808, isLocal: true, isDefinition: true)
!808 = !DICompositeType(tag: DW_TAG_array_type, baseType: !747, size: 512, elements: !809)
!809 = !{!810}
!810 = !DISubrange(count: 8)
!811 = !DIGlobalVariableExpression(var: !812, expr: !DIExpression())
!812 = distinct !DIGlobalVariable(name: "g_uart_dma_config", scope: !647, file: !648, line: 104, type: !813, isLocal: true, isDefinition: true)
!813 = !DICompositeType(tag: DW_TAG_array_type, baseType: !814, size: 896, elements: !482)
!814 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_dma_config_t", file: !673, line: 390, baseType: !815)
!815 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !673, line: 382, size: 224, elements: !816)
!816 = !{!817, !819, !820, !821, !822, !823, !824}
!817 = !DIDerivedType(tag: DW_TAG_member, name: "send_vfifo_buffer", scope: !815, file: !673, line: 383, baseType: !818, size: 32)
!818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !127, size: 32)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "send_vfifo_buffer_size", scope: !815, file: !673, line: 384, baseType: !105, size: 32, offset: 32)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "send_vfifo_threshold_size", scope: !815, file: !673, line: 385, baseType: !105, size: 32, offset: 64)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_buffer", scope: !815, file: !673, line: 386, baseType: !818, size: 32, offset: 96)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_buffer_size", scope: !815, file: !673, line: 387, baseType: !105, size: 32, offset: 128)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_threshold_size", scope: !815, file: !673, line: 388, baseType: !105, size: 32, offset: 160)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_alert_size", scope: !815, file: !673, line: 389, baseType: !105, size: 32, offset: 192)
!825 = !DIGlobalVariableExpression(var: !826, expr: !DIExpression())
!826 = distinct !DIGlobalVariable(name: "g_uart_baudrate_map", scope: !647, file: !648, line: 105, type: !827, isLocal: true, isDefinition: true)
!827 = !DICompositeType(tag: DW_TAG_array_type, baseType: !828, size: 416, elements: !829)
!828 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !105)
!829 = !{!830}
!830 = !DISubrange(count: 13)
!831 = !DIGlobalVariableExpression(var: !832, expr: !DIExpression())
!832 = distinct !DIGlobalVariable(name: "g_uart_global_data_initialized", scope: !647, file: !648, line: 90, type: !321, isLocal: true, isDefinition: true)
!833 = !DICompositeType(tag: DW_TAG_array_type, baseType: !834, size: 128, elements: !482)
!834 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !835)
!835 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_hwstatus_t", file: !648, line: 69, baseType: !684)
!836 = !DIGlobalVariableExpression(var: !759, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!837 = !DIGlobalVariableExpression(var: !832, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!838 = !DIGlobalVariableExpression(var: !839, expr: !DIExpression())
!839 = distinct !DIGlobalVariable(name: "g_uart_regbase", scope: !840, file: !841, line: 53, type: !925, isLocal: false, isDefinition: true)
!840 = distinct !DICompileUnit(language: DW_LANG_C99, file: !841, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !842, retainedTypes: !853, globals: !909, splitDebugInlining: false, nameTableKind: None)
!841 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_uart_internal_platform.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/dac_output_data_repeatedly/GCC")
!842 = !{!34, !213, !657, !650, !843}
!843 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !748, line: 46, baseType: !15, size: 32, elements: !844)
!844 = !{!845, !846, !847, !848, !849, !850, !851, !852}
!845 = !DIEnumerator(name: "UART_INTERRUPT_NONE", value: 0)
!846 = !DIEnumerator(name: "UART_INTERRUPT_RECEIVE_ERROR", value: 1)
!847 = !DIEnumerator(name: "UART_INTERRUPT_RECEIVE_TIMEOUT", value: 2)
!848 = !DIEnumerator(name: "UART_INTERRUPT_RECEIVE_BREAK", value: 3)
!849 = !DIEnumerator(name: "UART_INTERRUPT_RECEIVE_AVAILABLE", value: 4)
!850 = !DIEnumerator(name: "UART_INTERRUPT_SEND_AVAILABLE", value: 5)
!851 = !DIEnumerator(name: "UART_INTERRUPT_SOFTWARE_FLOWCONTROL", value: 6)
!852 = !DIEnumerator(name: "UART_INTERRUPT_HARDWARE_FLOWCONTROL", value: 7)
!853 = !{!854}
!854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !855, size: 32)
!855 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_REGISTER_T", file: !100, line: 588, baseType: !856)
!856 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !100, line: 542, size: 800, elements: !857)
!857 = !{!858, !864, !869, !875, !876, !881, !886, !887, !892, !893, !894, !895, !896, !897, !898, !899, !900, !901, !902, !903, !904, !905, !906, !907, !908}
!858 = !DIDerivedType(tag: DW_TAG_member, name: "RBR_THR_DLL", scope: !856, file: !100, line: 547, baseType: !859, size: 32)
!859 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !856, file: !100, line: 543, size: 32, elements: !860)
!860 = !{!861, !862, !863}
!861 = !DIDerivedType(tag: DW_TAG_member, name: "RBR", scope: !859, file: !100, line: 544, baseType: !299, size: 32)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "THR", scope: !859, file: !100, line: 545, baseType: !104, size: 32)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "DLL", scope: !859, file: !100, line: 546, baseType: !104, size: 32)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "IER_DLM", scope: !856, file: !100, line: 551, baseType: !865, size: 32, offset: 32)
!865 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !856, file: !100, line: 548, size: 32, elements: !866)
!866 = !{!867, !868}
!867 = !DIDerivedType(tag: DW_TAG_member, name: "IER", scope: !865, file: !100, line: 549, baseType: !104, size: 32)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "DLM", scope: !865, file: !100, line: 550, baseType: !104, size: 32)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "IIR_FCR_EFR", scope: !856, file: !100, line: 556, baseType: !870, size: 32, offset: 64)
!870 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !856, file: !100, line: 552, size: 32, elements: !871)
!871 = !{!872, !873, !874}
!872 = !DIDerivedType(tag: DW_TAG_member, name: "IIR", scope: !870, file: !100, line: 553, baseType: !299, size: 32)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "FCR", scope: !870, file: !100, line: 554, baseType: !104, size: 32)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "EFR", scope: !870, file: !100, line: 555, baseType: !104, size: 32)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "LCR", scope: !856, file: !100, line: 557, baseType: !104, size: 32, offset: 96)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "MCR_XON1", scope: !856, file: !100, line: 561, baseType: !877, size: 32, offset: 128)
!877 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !856, file: !100, line: 558, size: 32, elements: !878)
!878 = !{!879, !880}
!879 = !DIDerivedType(tag: DW_TAG_member, name: "MCR", scope: !877, file: !100, line: 559, baseType: !104, size: 32)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "XON1", scope: !877, file: !100, line: 560, baseType: !104, size: 32)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "LSR_XON2", scope: !856, file: !100, line: 565, baseType: !882, size: 32, offset: 160)
!882 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !856, file: !100, line: 562, size: 32, elements: !883)
!883 = !{!884, !885}
!884 = !DIDerivedType(tag: DW_TAG_member, name: "LSR", scope: !882, file: !100, line: 563, baseType: !299, size: 32)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "XON2", scope: !882, file: !100, line: 564, baseType: !104, size: 32)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF1", scope: !856, file: !100, line: 566, baseType: !104, size: 32, offset: 192)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "SCR_XOFF2", scope: !856, file: !100, line: 570, baseType: !888, size: 32, offset: 224)
!888 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !856, file: !100, line: 567, size: 32, elements: !889)
!889 = !{!890, !891}
!890 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !888, file: !100, line: 568, baseType: !104, size: 32)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF2", scope: !888, file: !100, line: 569, baseType: !104, size: 32)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_EN", scope: !856, file: !100, line: 571, baseType: !104, size: 32, offset: 256)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "HIGHSPEED", scope: !856, file: !100, line: 572, baseType: !104, size: 32, offset: 288)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_COUNT", scope: !856, file: !100, line: 573, baseType: !104, size: 32, offset: 320)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_POINT", scope: !856, file: !100, line: 574, baseType: !104, size: 32, offset: 352)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_REG", scope: !856, file: !100, line: 575, baseType: !299, size: 32, offset: 384)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "RATEFIX_AD", scope: !856, file: !100, line: 576, baseType: !104, size: 32, offset: 416)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUDSAMPLE", scope: !856, file: !100, line: 577, baseType: !104, size: 32, offset: 448)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "GUARD", scope: !856, file: !100, line: 578, baseType: !104, size: 32, offset: 480)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_DAT", scope: !856, file: !100, line: 579, baseType: !104, size: 32, offset: 512)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_EN", scope: !856, file: !100, line: 580, baseType: !104, size: 32, offset: 544)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEP_EN", scope: !856, file: !100, line: 581, baseType: !104, size: 32, offset: 576)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "DMA_EN", scope: !856, file: !100, line: 582, baseType: !104, size: 32, offset: 608)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "RXTRI_AD", scope: !856, file: !100, line: 583, baseType: !104, size: 32, offset: 640)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_L", scope: !856, file: !100, line: 584, baseType: !104, size: 32, offset: 672)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_M", scope: !856, file: !100, line: 585, baseType: !104, size: 32, offset: 704)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "FCR_RD", scope: !856, file: !100, line: 586, baseType: !299, size: 32, offset: 736)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "TX_ACTIVE_EN", scope: !856, file: !100, line: 587, baseType: !104, size: 32, offset: 768)
!909 = !{!838, !910, !915, !921}
!910 = !DIGlobalVariableExpression(var: !911, expr: !DIExpression())
!911 = distinct !DIGlobalVariable(name: "g_uart_port_to_pdn", scope: !840, file: !841, line: 54, type: !912, isLocal: false, isDefinition: true)
!912 = !DICompositeType(tag: DW_TAG_array_type, baseType: !913, size: 128, elements: !482)
!913 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !914)
!914 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_clock_cg_id", file: !35, line: 1237, baseType: !34)
!915 = !DIGlobalVariableExpression(var: !916, expr: !DIExpression())
!916 = distinct !DIGlobalVariable(name: "g_uart_port_to_irq_num", scope: !840, file: !841, line: 55, type: !917, isLocal: false, isDefinition: true)
!917 = !DICompositeType(tag: DW_TAG_array_type, baseType: !918, size: 128, elements: !482)
!918 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !919)
!919 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_nvic_irq_t", file: !100, line: 125, baseType: !920)
!920 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !100, line: 123, baseType: !213)
!921 = !DIGlobalVariableExpression(var: !922, expr: !DIExpression())
!922 = distinct !DIGlobalVariable(name: "g_uart_sleep_handler_name", scope: !840, file: !841, line: 57, type: !923, isLocal: false, isDefinition: true)
!923 = !DICompositeType(tag: DW_TAG_array_type, baseType: !924, size: 128, elements: !482)
!924 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !199)
!925 = !DICompositeType(tag: DW_TAG_array_type, baseType: !926, size: 128, elements: !482)
!926 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !854)
!927 = !DIGlobalVariableExpression(var: !928, expr: !DIExpression())
!928 = distinct !DIGlobalVariable(name: "g_i2c_tx_dma_channel", scope: !929, file: !930, line: 47, type: !1043, isLocal: false, isDefinition: true)
!929 = distinct !DICompileUnit(language: DW_LANG_C99, file: !930, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !931, globals: !976, splitDebugInlining: false, nameTableKind: None)
!930 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_i2c_master_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/dac_output_data_repeatedly/GCC")
!931 = !{!932, !34, !942, !952, !969}
!932 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !658, line: 137, baseType: !15, size: 32, elements: !933)
!933 = !{!934, !935, !936, !937, !938, !939, !940, !941}
!934 = !DIEnumerator(name: "PDMA_START_CHANNEL", value: 1)
!935 = !DIEnumerator(name: "PDMA_MSDC1", value: 1)
!936 = !DIEnumerator(name: "PDMA_MSDC2", value: 2)
!937 = !DIEnumerator(name: "PDMA_I2C0_TX", value: 3)
!938 = !DIEnumerator(name: "PDMA_I2C0_RX", value: 4)
!939 = !DIEnumerator(name: "PDMA_I2C1_TX", value: 5)
!940 = !DIEnumerator(name: "PDMA_I2C1_RX", value: 6)
!941 = !DIEnumerator(name: "PDMA_END_CHANNEL", value: 7)
!942 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !943, line: 132, baseType: !15, size: 32, elements: !944)
!943 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_i2c_master_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/dac_output_data_repeatedly/GCC")
!944 = !{!945, !946, !947, !948, !949, !950, !951}
!945 = !DIEnumerator(name: "I2C_FREQUENCY_50K", value: 50)
!946 = !DIEnumerator(name: "I2C_FREQUENCY_100K", value: 100)
!947 = !DIEnumerator(name: "I2C_FREQUENCY_200K", value: 200)
!948 = !DIEnumerator(name: "I2C_FREQUENCY_300K", value: 300)
!949 = !DIEnumerator(name: "I2C_FREQUENCY_400K", value: 400)
!950 = !DIEnumerator(name: "I2C_FREQUENCY_1M", value: 1000)
!951 = !DIEnumerator(name: "I2C_FREQUENCY_MAX", value: 1001)
!952 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !943, line: 142, baseType: !15, size: 32, elements: !953)
!953 = !{!954, !955, !956, !957, !958, !959, !960, !961, !962, !963, !964, !965, !966, !967, !968}
!954 = !DIEnumerator(name: "I2C_TRANSACTION_PUSH_PULL_SEND_POLLING", value: 0)
!955 = !DIEnumerator(name: "I2C_TRANSACTION_PUSH_PULL_SEND_DMA", value: 1)
!956 = !DIEnumerator(name: "I2C_TRANSACTION_PUSH_PULL_RECEIVE_POLLING", value: 2)
!957 = !DIEnumerator(name: "I2C_TRANSACTION_PUSH_PULL_RECEIVE_DMA", value: 3)
!958 = !DIEnumerator(name: "I2C_TRANSACTION_PUSH_PULL_SEND_TO_RECEIVE_POLLING", value: 4)
!959 = !DIEnumerator(name: "I2C_TRANSACTION_PUSH_PULL_SEND_TO_RECEIVE_DMA", value: 5)
!960 = !DIEnumerator(name: "I2C_TRANSACTION_OPEN_DRAIN_SEND_POLLING", value: 6)
!961 = !DIEnumerator(name: "I2C_TRANSACTION_OPEN_DRAIN_SEND_DMA", value: 7)
!962 = !DIEnumerator(name: "I2C_TRANSACTION_OPEN_DRAIN_RECEIVE_POLLING", value: 8)
!963 = !DIEnumerator(name: "I2C_TRANSACTION_OPEN_DRAIN_RECEIVE_DMA", value: 9)
!964 = !DIEnumerator(name: "I2C_TRANSACTION_OPEN_DRAIN_SEND_TO_RECEIVE_POLLING", value: 10)
!965 = !DIEnumerator(name: "I2C_TRANSACTION_OPEN_DRAIN_SEND_TO_RECEIVE_DMA", value: 11)
!966 = !DIEnumerator(name: "I2C_TRANSACTION_OPEN_DRAIN_SEND_DMA_EXTEND", value: 12)
!967 = !DIEnumerator(name: "I2C_TRANSACTION_OPEN_DRAIN_RECEIVE_DMA_EXTEND", value: 13)
!968 = !DIEnumerator(name: "I2C_TRANSACTION_OPEN_DRAIN_SEND_TO_RECEIVE_DMA_EXTEND", value: 14)
!969 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !943, line: 162, baseType: !7, size: 32, elements: !970)
!970 = !{!971, !972, !973, !974, !975}
!971 = !DIEnumerator(name: "I2C_TRANSACTION_UNKNOWN_ERROR", value: -4)
!972 = !DIEnumerator(name: "I2C_TRANSACTION_ACK_ERROR", value: -3)
!973 = !DIEnumerator(name: "I2C_TRANSACTION_NACK_ERROR", value: -2)
!974 = !DIEnumerator(name: "I2C_TRANSACTION_TIMEOUT_ERROR", value: -1)
!975 = !DIEnumerator(name: "I2C_TRANSACTION_SUCCESS", value: 0)
!976 = !{!977, !927, !1041, !1046, !1048}
!977 = !DIGlobalVariableExpression(var: !978, expr: !DIExpression())
!978 = distinct !DIGlobalVariable(name: "i2c_master_register", scope: !929, file: !930, line: 46, type: !979, isLocal: false, isDefinition: true)
!979 = !DICompositeType(tag: DW_TAG_array_type, baseType: !980, size: 128, elements: !482)
!980 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !981)
!981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !982, size: 32)
!982 = !DIDerivedType(tag: DW_TAG_typedef, name: "I2C_REGISTER_T", file: !100, line: 1885, baseType: !983)
!983 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !100, line: 1833, size: 960, elements: !984)
!984 = !{!985, !990, !991, !992, !993, !994, !995, !996, !997, !998, !999, !1000, !1001, !1002, !1003, !1004, !1005, !1006, !1007, !1008, !1009, !1011, !1012, !1013, !1014, !1015, !1016, !1017, !1018, !1019, !1020, !1021, !1022, !1023, !1024, !1025, !1026, !1027, !1028, !1030, !1031, !1032, !1033, !1034, !1035, !1036, !1037, !1038, !1039, !1040}
!985 = !DIDerivedType(tag: DW_TAG_member, name: "DATA_PORT", scope: !983, file: !100, line: 1834, baseType: !986, size: 16)
!986 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !987)
!987 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !106, line: 36, baseType: !988)
!988 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint16_t", file: !108, line: 57, baseType: !989)
!989 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !983, file: !100, line: 1835, baseType: !986, size: 16, offset: 16)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "SLAVE_ADDR", scope: !983, file: !100, line: 1836, baseType: !986, size: 16, offset: 32)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !983, file: !100, line: 1837, baseType: !986, size: 16, offset: 48)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "INTR_MASK", scope: !983, file: !100, line: 1838, baseType: !986, size: 16, offset: 64)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !983, file: !100, line: 1839, baseType: !986, size: 16, offset: 80)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "INTR_STAT", scope: !983, file: !100, line: 1840, baseType: !986, size: 16, offset: 96)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !983, file: !100, line: 1841, baseType: !986, size: 16, offset: 112)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "CONTROL", scope: !983, file: !100, line: 1842, baseType: !986, size: 16, offset: 128)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !983, file: !100, line: 1843, baseType: !986, size: 16, offset: 144)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "TRANSFER_LEN", scope: !983, file: !100, line: 1844, baseType: !986, size: 16, offset: 160)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !983, file: !100, line: 1845, baseType: !986, size: 16, offset: 176)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "TRANSAC_LEN", scope: !983, file: !100, line: 1846, baseType: !986, size: 16, offset: 192)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !983, file: !100, line: 1847, baseType: !986, size: 16, offset: 208)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "DELAY_LEN", scope: !983, file: !100, line: 1848, baseType: !986, size: 16, offset: 224)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED8", scope: !983, file: !100, line: 1849, baseType: !986, size: 16, offset: 240)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "TIMING", scope: !983, file: !100, line: 1850, baseType: !986, size: 16, offset: 256)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED9", scope: !983, file: !100, line: 1851, baseType: !986, size: 16, offset: 272)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "START", scope: !983, file: !100, line: 1852, baseType: !986, size: 16, offset: 288)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED10", scope: !983, file: !100, line: 1853, baseType: !986, size: 16, offset: 304)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED11", scope: !983, file: !100, line: 1854, baseType: !1010, size: 32, offset: 320)
!1010 = !DICompositeType(tag: DW_TAG_array_type, baseType: !986, size: 32, elements: !484)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "CLOCK_DIV", scope: !983, file: !100, line: 1855, baseType: !986, size: 16, offset: 352)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED12", scope: !983, file: !100, line: 1856, baseType: !986, size: 16, offset: 368)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "FIFO_STAT", scope: !983, file: !100, line: 1857, baseType: !986, size: 16, offset: 384)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED13", scope: !983, file: !100, line: 1858, baseType: !986, size: 16, offset: 400)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "FIFO_THRESH", scope: !983, file: !100, line: 1859, baseType: !986, size: 16, offset: 416)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED14", scope: !983, file: !100, line: 1860, baseType: !986, size: 16, offset: 432)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "FIFO_ADDR_CLR", scope: !983, file: !100, line: 1861, baseType: !986, size: 16, offset: 448)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED15", scope: !983, file: !100, line: 1862, baseType: !986, size: 16, offset: 464)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED16", scope: !983, file: !100, line: 1863, baseType: !1010, size: 32, offset: 480)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "IO_CONFIG", scope: !983, file: !100, line: 1864, baseType: !986, size: 16, offset: 512)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED17", scope: !983, file: !100, line: 1865, baseType: !986, size: 16, offset: 528)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED18", scope: !983, file: !100, line: 1866, baseType: !1010, size: 32, offset: 544)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "HS", scope: !983, file: !100, line: 1867, baseType: !986, size: 16, offset: 576)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED19", scope: !983, file: !100, line: 1868, baseType: !986, size: 16, offset: 592)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED20", scope: !983, file: !100, line: 1869, baseType: !1010, size: 32, offset: 608)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "SOFTRESET", scope: !983, file: !100, line: 1870, baseType: !986, size: 16, offset: 640)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED21", scope: !983, file: !100, line: 1871, baseType: !986, size: 16, offset: 656)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED22", scope: !983, file: !100, line: 1872, baseType: !1029, size: 96, offset: 672)
!1029 = !DICompositeType(tag: DW_TAG_array_type, baseType: !986, size: 96, elements: !196)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "SPARE", scope: !983, file: !100, line: 1873, baseType: !986, size: 16, offset: 768)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED23", scope: !983, file: !100, line: 1874, baseType: !986, size: 16, offset: 784)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "DEBUGSTAT", scope: !983, file: !100, line: 1875, baseType: !986, size: 16, offset: 800)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED24", scope: !983, file: !100, line: 1876, baseType: !986, size: 16, offset: 816)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "DEBUGCTRL", scope: !983, file: !100, line: 1877, baseType: !986, size: 16, offset: 832)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED25", scope: !983, file: !100, line: 1878, baseType: !986, size: 16, offset: 848)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "TRANSFER_LEN_AUX", scope: !983, file: !100, line: 1879, baseType: !986, size: 16, offset: 864)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED26", scope: !983, file: !100, line: 1880, baseType: !986, size: 16, offset: 880)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED27", scope: !983, file: !100, line: 1881, baseType: !1010, size: 32, offset: 896)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "TIMEOUT", scope: !983, file: !100, line: 1882, baseType: !986, size: 16, offset: 928)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED28", scope: !983, file: !100, line: 1883, baseType: !986, size: 16, offset: 944)
!1041 = !DIGlobalVariableExpression(var: !1042, expr: !DIExpression())
!1042 = distinct !DIGlobalVariable(name: "g_i2c_rx_dma_channel", scope: !929, file: !930, line: 48, type: !1043, isLocal: false, isDefinition: true)
!1043 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1044, size: 128, elements: !482)
!1044 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1045)
!1045 = !DIDerivedType(tag: DW_TAG_typedef, name: "pdma_channel_t", file: !658, line: 147, baseType: !932)
!1046 = !DIGlobalVariableExpression(var: !1047, expr: !DIExpression())
!1047 = distinct !DIGlobalVariable(name: "g_i2c_pdn_table", scope: !929, file: !930, line: 49, type: !912, isLocal: false, isDefinition: true)
!1048 = !DIGlobalVariableExpression(var: !1049, expr: !DIExpression())
!1049 = distinct !DIGlobalVariable(name: "g_i2c_source_clock_table", scope: !929, file: !930, line: 52, type: !1050, isLocal: false, isDefinition: true)
!1050 = !DICompositeType(tag: DW_TAG_array_type, baseType: !105, size: 128, elements: !482)
!1051 = !DIGlobalVariableExpression(var: !1052, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!1052 = distinct !DIGlobalVariable(name: "priority_set", scope: !1053, file: !1054, line: 128, type: !105, isLocal: true, isDefinition: true)
!1053 = distinct !DISubprogram(name: "hal_nvic_init", scope: !1054, file: !1054, line: 126, type: !1055, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1058, retainedNodes: !1144)
!1054 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_nvic.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/dac_output_data_repeatedly/GCC")
!1055 = !DISubroutineType(types: !1056)
!1056 = !{!1057}
!1057 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_nvic_status_t", file: !733, line: 158, baseType: !732)
!1058 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1054, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1059, retainedTypes: !1060, globals: !1126, splitDebugInlining: false, nameTableKind: None)
!1059 = !{!732, !213}
!1060 = !{!919, !1061, !105, !1094, !1124}
!1061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1062, size: 32)
!1062 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1063, line: 418, baseType: !1064)
!1063 = !DIFile(filename: "../../../../../driver/CMSIS/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/dac_output_data_repeatedly/GCC")
!1064 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1063, line: 395, size: 1120, elements: !1065)
!1065 = !{!1066, !1067, !1068, !1069, !1070, !1071, !1072, !1074, !1075, !1076, !1077, !1078, !1079, !1080, !1081, !1083, !1084, !1085, !1087, !1091, !1093}
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1064, file: !1063, line: 397, baseType: !299, size: 32)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1064, file: !1063, line: 398, baseType: !104, size: 32, offset: 32)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1064, file: !1063, line: 399, baseType: !104, size: 32, offset: 64)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1064, file: !1063, line: 400, baseType: !104, size: 32, offset: 96)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1064, file: !1063, line: 401, baseType: !104, size: 32, offset: 128)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1064, file: !1063, line: 402, baseType: !104, size: 32, offset: 160)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1064, file: !1063, line: 403, baseType: !1073, size: 96, offset: 192)
!1073 = !DICompositeType(tag: DW_TAG_array_type, baseType: !126, size: 96, elements: !528)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1064, file: !1063, line: 404, baseType: !104, size: 32, offset: 288)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1064, file: !1063, line: 405, baseType: !104, size: 32, offset: 320)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1064, file: !1063, line: 406, baseType: !104, size: 32, offset: 352)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1064, file: !1063, line: 407, baseType: !104, size: 32, offset: 384)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1064, file: !1063, line: 408, baseType: !104, size: 32, offset: 416)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1064, file: !1063, line: 409, baseType: !104, size: 32, offset: 448)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1064, file: !1063, line: 410, baseType: !104, size: 32, offset: 480)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1064, file: !1063, line: 411, baseType: !1082, size: 64, offset: 512)
!1082 = !DICompositeType(tag: DW_TAG_array_type, baseType: !299, size: 64, elements: !484)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1064, file: !1063, line: 412, baseType: !299, size: 32, offset: 576)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1064, file: !1063, line: 413, baseType: !299, size: 32, offset: 608)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1064, file: !1063, line: 414, baseType: !1086, size: 128, offset: 640)
!1086 = !DICompositeType(tag: DW_TAG_array_type, baseType: !299, size: 128, elements: !482)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1064, file: !1063, line: 415, baseType: !1088, size: 160, offset: 768)
!1088 = !DICompositeType(tag: DW_TAG_array_type, baseType: !299, size: 160, elements: !1089)
!1089 = !{!1090}
!1090 = !DISubrange(count: 5)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1064, file: !1063, line: 416, baseType: !1092, size: 160, offset: 928)
!1092 = !DICompositeType(tag: DW_TAG_array_type, baseType: !105, size: 160, elements: !1089)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1064, file: !1063, line: 417, baseType: !104, size: 32, offset: 1088)
!1094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1095, size: 32)
!1095 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !1063, line: 378, baseType: !1096)
!1096 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1063, line: 363, size: 28704, elements: !1097)
!1097 = !{!1098, !1100, !1104, !1105, !1106, !1107, !1108, !1109, !1110, !1111, !1115, !1119, !1123}
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1096, file: !1063, line: 365, baseType: !1099, size: 256)
!1099 = !DICompositeType(tag: DW_TAG_array_type, baseType: !104, size: 256, elements: !809)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1096, file: !1063, line: 366, baseType: !1101, size: 768, offset: 256)
!1101 = !DICompositeType(tag: DW_TAG_array_type, baseType: !105, size: 768, elements: !1102)
!1102 = !{!1103}
!1103 = !DISubrange(count: 24)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1096, file: !1063, line: 367, baseType: !1099, size: 256, offset: 1024)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "RSERVED1", scope: !1096, file: !1063, line: 368, baseType: !1101, size: 768, offset: 1280)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1096, file: !1063, line: 369, baseType: !1099, size: 256, offset: 2048)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1096, file: !1063, line: 370, baseType: !1101, size: 768, offset: 2304)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1096, file: !1063, line: 371, baseType: !1099, size: 256, offset: 3072)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1096, file: !1063, line: 372, baseType: !1101, size: 768, offset: 3328)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1096, file: !1063, line: 373, baseType: !1099, size: 256, offset: 4096)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1096, file: !1063, line: 374, baseType: !1112, size: 1792, offset: 4352)
!1112 = !DICompositeType(tag: DW_TAG_array_type, baseType: !105, size: 1792, elements: !1113)
!1113 = !{!1114}
!1114 = !DISubrange(count: 56)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1096, file: !1063, line: 375, baseType: !1116, size: 1920, offset: 6144)
!1116 = !DICompositeType(tag: DW_TAG_array_type, baseType: !126, size: 1920, elements: !1117)
!1117 = !{!1118}
!1118 = !DISubrange(count: 240)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1096, file: !1063, line: 376, baseType: !1120, size: 20608, offset: 8064)
!1120 = !DICompositeType(tag: DW_TAG_array_type, baseType: !105, size: 20608, elements: !1121)
!1121 = !{!1122}
!1122 = !DISubrange(count: 644)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1096, file: !1063, line: 377, baseType: !104, size: 32, offset: 28672)
!1124 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !106, line: 44, baseType: !1125)
!1125 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int32_t", file: !108, line: 77, baseType: !7)
!1126 = !{!1127, !1128, !1141}
!1127 = !DIGlobalVariableExpression(var: !1052, expr: !DIExpression())
!1128 = !DIGlobalVariableExpression(var: !1129, expr: !DIExpression())
!1129 = distinct !DIGlobalVariable(name: "nvic_function_table", scope: !1058, file: !1054, line: 119, type: !1130, isLocal: false, isDefinition: true)
!1130 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1131, size: 4096, elements: !1139)
!1131 = !DIDerivedType(tag: DW_TAG_typedef, name: "nvic_function_t", file: !1054, line: 50, baseType: !1132)
!1132 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1054, line: 47, size: 64, elements: !1133)
!1133 = !{!1134, !1138}
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "nvic_callback", scope: !1132, file: !1054, line: 48, baseType: !1135, size: 32)
!1135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1136, size: 32)
!1136 = !DISubroutineType(types: !1137)
!1137 = !{null, !919}
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "irq_pending", scope: !1132, file: !1054, line: 49, baseType: !105, size: 32, offset: 32)
!1139 = !{!1140}
!1140 = !DISubrange(count: 64)
!1141 = !DIGlobalVariableExpression(var: !1142, expr: !DIExpression())
!1142 = distinct !DIGlobalVariable(name: "defualt_irq_priority", scope: !1058, file: !1054, line: 52, type: !1143, isLocal: true, isDefinition: true)
!1143 = !DICompositeType(tag: DW_TAG_array_type, baseType: !828, size: 2048, elements: !1139)
!1144 = !{!1145}
!1145 = !DILocalVariable(name: "i", scope: !1053, file: !1054, line: 129, type: !105)
!1146 = !DIGlobalVariableExpression(var: !1147, expr: !DIExpression())
!1147 = distinct !DIGlobalVariable(name: "DelayResume", scope: !1148, file: !1149, line: 55, type: !321, isLocal: false, isDefinition: true)
!1148 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1149, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1150, retainedTypes: !1185, globals: !1221, splitDebugInlining: false, nameTableKind: None)
!1149 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_mtd_common.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/dac_output_data_repeatedly/GCC")
!1150 = !{!1151, !1159, !1164}
!1151 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "sfi_clock_enum_t", file: !1152, line: 51, baseType: !15, size: 32, elements: !1153)
!1152 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_sfi_release.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/dac_output_data_repeatedly/GCC")
!1153 = !{!1154, !1155, !1156, !1157, !1158}
!1154 = !DIEnumerator(name: "SFI_CLK_UNKNOWN", value: 0)
!1155 = !DIEnumerator(name: "SFI_CLK_78MHZ", value: 78)
!1156 = !DIEnumerator(name: "SFI_CLK_104MHZ", value: 104)
!1157 = !DIEnumerator(name: "SFI_CLK_130MHZ", value: 130)
!1158 = !DIEnumerator(name: "SFI_CLK_166MHZ", value: 166)
!1159 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "sfi_voltage_enum_t", file: !1152, line: 62, baseType: !15, size: 32, elements: !1160)
!1160 = !{!1161, !1162, !1163}
!1161 = !DIEnumerator(name: "SFI_Voltage_UNKNOWN", value: 0)
!1162 = !DIEnumerator(name: "SFI_Voltage_18", value: 18)
!1163 = !DIEnumerator(name: "SFI_Voltage_30", value: 30)
!1164 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1165, line: 228, baseType: !15, size: 32, elements: !1166)
!1165 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_clock_platform_mt2523.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/dac_output_data_repeatedly/GCC")
!1166 = !{!1167, !1168, !1169, !1170, !1171, !1172, !1173, !1174, !1175, !1176, !1177, !1178, !1179, !1180, !1181, !1182, !1183, !1184}
!1167 = !DIEnumerator(name: "BUS_MUX_SEL", value: 0)
!1168 = !DIEnumerator(name: "CM_MUX_SEL", value: 1)
!1169 = !DIEnumerator(name: "SFC_MUX_SEL", value: 2)
!1170 = !DIEnumerator(name: "SLCD_MUX_SEL", value: 3)
!1171 = !DIEnumerator(name: "BSI_MUX_SEL", value: 4)
!1172 = !DIEnumerator(name: "DSP_MUX_SEL", value: 5)
!1173 = !DIEnumerator(name: "CAM_MUX_SEL", value: 6)
!1174 = !DIEnumerator(name: "USB_MUX_SEL", value: 7)
!1175 = !DIEnumerator(name: "DISP_PWM_MUX_SEL", value: 8)
!1176 = !DIEnumerator(name: "MSDC0_MUX_SEL", value: 9)
!1177 = !DIEnumerator(name: "MSDC1_MUX_SEL", value: 10)
!1178 = !DIEnumerator(name: "LP_CLKSQ_MUX_SEL", value: 11)
!1179 = !DIEnumerator(name: "LP_LFOSC_MUX_SEL", value: 12)
!1180 = !DIEnumerator(name: "RG_SLCD_CK_SEL", value: 13)
!1181 = !DIEnumerator(name: "GP_F26M_GFMUX_SEL", value: 14)
!1182 = !DIEnumerator(name: "LP_F26M_GFMUX_SEL", value: 15)
!1183 = !DIEnumerator(name: "NR_MUXS", value: 16)
!1184 = !DIEnumerator(name: "CLK_MUX_SEL_NONE", value: 17)
!1185 = !{!1186, !1187, !1209, !818, !105, !15, !1215, !1217, !1218, !1220}
!1186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !105, size: 32)
!1187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1188, size: 32)
!1188 = !DIDerivedType(tag: DW_TAG_typedef, name: "SFC_REGISTER_T", file: !100, line: 2777, baseType: !1189)
!1189 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !100, line: 2758, size: 576, elements: !1190)
!1190 = !{!1191, !1192, !1193, !1194, !1195, !1196, !1197, !1198, !1199, !1200, !1201, !1202, !1203, !1204, !1205, !1206, !1207, !1208}
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_CTL", scope: !1189, file: !100, line: 2759, baseType: !104, size: 32)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DIRECT_CTL", scope: !1189, file: !100, line: 2760, baseType: !104, size: 32, offset: 32)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL", scope: !1189, file: !100, line: 2761, baseType: !104, size: 32, offset: 64)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL2", scope: !1189, file: !100, line: 2762, baseType: !104, size: 32, offset: 96)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_OUTL", scope: !1189, file: !100, line: 2763, baseType: !104, size: 32, offset: 128)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_INL", scope: !1189, file: !100, line: 2764, baseType: !104, size: 32, offset: 160)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_RESET_CTL", scope: !1189, file: !100, line: 2765, baseType: !104, size: 32, offset: 192)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_STA2_CTL", scope: !1189, file: !100, line: 2766, baseType: !104, size: 32, offset: 224)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL1", scope: !1189, file: !100, line: 2767, baseType: !104, size: 32, offset: 256)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL2", scope: !1189, file: !100, line: 2768, baseType: !104, size: 32, offset: 288)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL3", scope: !1189, file: !100, line: 2769, baseType: !104, size: 32, offset: 320)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DUMMY1", scope: !1189, file: !100, line: 2770, baseType: !104, size: 32, offset: 352)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL4", scope: !1189, file: !100, line: 2771, baseType: !104, size: 32, offset: 384)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL5", scope: !1189, file: !100, line: 2772, baseType: !104, size: 32, offset: 416)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL6", scope: !1189, file: !100, line: 2773, baseType: !104, size: 32, offset: 448)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DUMMY2", scope: !1189, file: !100, line: 2774, baseType: !104, size: 32, offset: 480)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DIRECT_CTL2", scope: !1189, file: !100, line: 2775, baseType: !104, size: 32, offset: 512)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL3", scope: !1189, file: !100, line: 2776, baseType: !104, size: 32, offset: 544)
!1209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1210, size: 32)
!1210 = !DIDerivedType(tag: DW_TAG_typedef, name: "SFC_GPRAM_REGISTER_T", file: !100, line: 2801, baseType: !1211)
!1211 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !100, line: 2798, size: 64, elements: !1212)
!1212 = !{!1213, !1214}
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_GPRAM_DATA", scope: !1211, file: !100, line: 2799, baseType: !104, size: 32)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_GPRAM_DATA_OF_4", scope: !1211, file: !100, line: 2800, baseType: !104, size: 32, offset: 32)
!1215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1216, size: 32)
!1216 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !15)
!1217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !987, size: 32)
!1218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1219, size: 32)
!1219 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !129)
!1220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !104, size: 32)
!1221 = !{!1146, !1222, !1224, !1226, !1228, !1230, !1232, !1234, !1236, !1238, !1240}
!1222 = !DIGlobalVariableExpression(var: !1223, expr: !DIExpression())
!1223 = distinct !DIGlobalVariable(name: "NOR_FLASH_LeaveDPDCmd", scope: !1148, file: !1149, line: 604, type: !127, isLocal: false, isDefinition: true)
!1224 = !DIGlobalVariableExpression(var: !1225, expr: !DIExpression())
!1225 = distinct !DIGlobalVariable(name: "NOR_FLASH_FATStartAddr", scope: !1148, file: !1149, line: 605, type: !105, isLocal: false, isDefinition: true)
!1226 = !DIGlobalVariableExpression(var: !1227, expr: !DIExpression())
!1227 = distinct !DIGlobalVariable(name: "NOR_FLASH_FATStartValue", scope: !1148, file: !1149, line: 606, type: !105, isLocal: false, isDefinition: true)
!1228 = !DIGlobalVariableExpression(var: !1229, expr: !DIExpression())
!1229 = distinct !DIGlobalVariable(name: "SFI_MAC_CTL_BACKUP", scope: !1148, file: !1149, line: 607, type: !105, isLocal: false, isDefinition: true)
!1230 = !DIGlobalVariableExpression(var: !1231, expr: !DIExpression())
!1231 = distinct !DIGlobalVariable(name: "SFI_DIRECT_CTL_BACKUP", scope: !1148, file: !1149, line: 608, type: !105, isLocal: false, isDefinition: true)
!1232 = !DIGlobalVariableExpression(var: !1233, expr: !DIExpression())
!1233 = distinct !DIGlobalVariable(name: "SFI_MISC_CTL_BACKUP", scope: !1148, file: !1149, line: 609, type: !105, isLocal: false, isDefinition: true)
!1234 = !DIGlobalVariableExpression(var: !1235, expr: !DIExpression())
!1235 = distinct !DIGlobalVariable(name: "SFI_MISC_CTL2_BACKUP", scope: !1148, file: !1149, line: 610, type: !105, isLocal: false, isDefinition: true)
!1236 = !DIGlobalVariableExpression(var: !1237, expr: !DIExpression())
!1237 = distinct !DIGlobalVariable(name: "SFI_DLY_CTL_3_BACKUP", scope: !1148, file: !1149, line: 611, type: !105, isLocal: false, isDefinition: true)
!1238 = !DIGlobalVariableExpression(var: !1239, expr: !DIExpression())
!1239 = distinct !DIGlobalVariable(name: "SFI_CLK_SWITCH_MISC_CTL_BACKUP", scope: !1148, file: !1149, line: 665, type: !105, isLocal: false, isDefinition: true)
!1240 = !DIGlobalVariableExpression(var: !1241, expr: !DIExpression())
!1241 = distinct !DIGlobalVariable(name: "SFI_CLK_SWITCH_DLY_CTL_3_BACKUP", scope: !1148, file: !1149, line: 666, type: !105, isLocal: false, isDefinition: true)
!1242 = !DIGlobalVariableExpression(var: !1243, expr: !DIExpression())
!1243 = distinct !DIGlobalVariable(name: "sf_dal_brbusy_wait", scope: !1244, file: !1245, line: 334, type: !321, isLocal: false, isDefinition: true)
!1244 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1245, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1246, retainedTypes: !1414, globals: !1554, splitDebugInlining: false, nameTableKind: None)
!1245 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_mtd_dal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/dac_output_data_repeatedly/GCC")
!1246 = !{!1247, !1338, !1344, !1351, !1363, !1374, !1383, !1392, !1396, !1400}
!1247 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1248, line: 58, baseType: !7, size: 32, elements: !1249)
!1248 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_fs_type.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/dac_output_data_repeatedly/GCC")
!1249 = !{!1250, !1251, !1252, !1253, !1254, !1255, !1256, !1257, !1258, !1259, !1260, !1261, !1262, !1263, !1264, !1265, !1266, !1267, !1268, !1269, !1270, !1271, !1272, !1273, !1274, !1275, !1276, !1277, !1278, !1279, !1280, !1281, !1282, !1283, !1284, !1285, !1286, !1287, !1288, !1289, !1290, !1291, !1292, !1293, !1294, !1295, !1296, !1297, !1298, !1299, !1300, !1301, !1302, !1303, !1304, !1305, !1306, !1307, !1308, !1309, !1310, !1311, !1312, !1313, !1314, !1315, !1316, !1317, !1318, !1319, !1320, !1321, !1322, !1323, !1324, !1325, !1326, !1327, !1328, !1329, !1330, !1331, !1332, !1333, !1334, !1335, !1336, !1337}
!1250 = !DIEnumerator(name: "FS_NO_ERROR", value: 0)
!1251 = !DIEnumerator(name: "FS_ERROR_RESERVED", value: -1)
!1252 = !DIEnumerator(name: "FS_PARAM_ERROR", value: -2)
!1253 = !DIEnumerator(name: "FS_INVALID_FILENAME", value: -3)
!1254 = !DIEnumerator(name: "FS_DRIVE_NOT_FOUND", value: -4)
!1255 = !DIEnumerator(name: "FS_TOO_MANY_FILES", value: -5)
!1256 = !DIEnumerator(name: "FS_NO_MORE_FILES", value: -6)
!1257 = !DIEnumerator(name: "FS_WRONG_MEDIA", value: -7)
!1258 = !DIEnumerator(name: "FS_INVALID_FILE_SYSTEM", value: -8)
!1259 = !DIEnumerator(name: "FS_FILE_NOT_FOUND", value: -9)
!1260 = !DIEnumerator(name: "FS_INVALID_FILE_HANDLE", value: -10)
!1261 = !DIEnumerator(name: "FS_UNSUPPORTED_DEVICE", value: -11)
!1262 = !DIEnumerator(name: "FS_UNSUPPORTED_DRIVER_FUNCTION", value: -12)
!1263 = !DIEnumerator(name: "FS_CORRUPTED_PARTITION_TABLE", value: -13)
!1264 = !DIEnumerator(name: "FS_TOO_MANY_DRIVES", value: -14)
!1265 = !DIEnumerator(name: "FS_INVALID_FILE_POS", value: -15)
!1266 = !DIEnumerator(name: "FS_ACCESS_DENIED", value: -16)
!1267 = !DIEnumerator(name: "FS_STRING_BUFFER_TOO_SMALL", value: -17)
!1268 = !DIEnumerator(name: "FS_GENERAL_FAILURE", value: -18)
!1269 = !DIEnumerator(name: "FS_PATH_NOT_FOUND", value: -19)
!1270 = !DIEnumerator(name: "FS_FAT_ALLOC_ERROR", value: -20)
!1271 = !DIEnumerator(name: "FS_ROOT_DIR_FULL", value: -21)
!1272 = !DIEnumerator(name: "FS_DISK_FULL", value: -22)
!1273 = !DIEnumerator(name: "FS_TIMEOUT", value: -23)
!1274 = !DIEnumerator(name: "FS_BAD_SECTOR", value: -24)
!1275 = !DIEnumerator(name: "FS_DATA_ERROR", value: -25)
!1276 = !DIEnumerator(name: "FS_MEDIA_CHANGED", value: -26)
!1277 = !DIEnumerator(name: "FS_SECTOR_NOT_FOUND", value: -27)
!1278 = !DIEnumerator(name: "FS_ADDRESS_MARK_NOT_FOUND", value: -28)
!1279 = !DIEnumerator(name: "FS_DRIVE_NOT_READY", value: -29)
!1280 = !DIEnumerator(name: "FS_WRITE_PROTECTION", value: -30)
!1281 = !DIEnumerator(name: "FS_DMA_OVERRUN", value: -31)
!1282 = !DIEnumerator(name: "FS_CRC_ERROR", value: -32)
!1283 = !DIEnumerator(name: "FS_DEVICE_RESOURCE_ERROR", value: -33)
!1284 = !DIEnumerator(name: "FS_INVALID_SECTOR_SIZE", value: -34)
!1285 = !DIEnumerator(name: "FS_OUT_OF_BUFFERS", value: -35)
!1286 = !DIEnumerator(name: "FS_FILE_EXISTS", value: -36)
!1287 = !DIEnumerator(name: "FS_LONG_FILE_POS", value: -37)
!1288 = !DIEnumerator(name: "FS_FILE_TOO_LARGE", value: -38)
!1289 = !DIEnumerator(name: "FS_BAD_DIR_ENTRY", value: -39)
!1290 = !DIEnumerator(name: "FS_ATTR_CONFLICT", value: -40)
!1291 = !DIEnumerator(name: "FS_CHECKDISK_RETRY", value: -41)
!1292 = !DIEnumerator(name: "FS_LACK_OF_PROTECTION_SPACE", value: -42)
!1293 = !DIEnumerator(name: "FS_SYSTEM_CRASH", value: -43)
!1294 = !DIEnumerator(name: "FS_FAIL_GET_MEM", value: -44)
!1295 = !DIEnumerator(name: "FS_READ_ONLY_ERROR", value: -45)
!1296 = !DIEnumerator(name: "FS_DEVICE_BUSY", value: -46)
!1297 = !DIEnumerator(name: "FS_ABORTED_ERROR", value: -47)
!1298 = !DIEnumerator(name: "FS_QUOTA_OVER_DISK_SPACE", value: -48)
!1299 = !DIEnumerator(name: "FS_PATH_OVER_LEN_ERROR", value: -49)
!1300 = !DIEnumerator(name: "FS_APP_QUOTA_FULL", value: -50)
!1301 = !DIEnumerator(name: "FS_VF_MAP_ERROR", value: -51)
!1302 = !DIEnumerator(name: "FS_DEVICE_EXPORTED_ERROR", value: -52)
!1303 = !DIEnumerator(name: "FS_DISK_FRAGMENT", value: -53)
!1304 = !DIEnumerator(name: "FS_DIRCACHE_EXPIRED", value: -54)
!1305 = !DIEnumerator(name: "FS_QUOTA_USAGE_WARNING", value: -55)
!1306 = !DIEnumerator(name: "FS_ERR_DIRDATA_LOCKED", value: -56)
!1307 = !DIEnumerator(name: "FS_INVALID_OPERATION", value: -57)
!1308 = !DIEnumerator(name: "FS_ERR_VF_PARENT_CLOSED", value: -58)
!1309 = !DIEnumerator(name: "FS_ERR_UNSUPPORTED_SERVICE", value: -59)
!1310 = !DIEnumerator(name: "FS_ERR_INVALID_JOB_ID", value: -81)
!1311 = !DIEnumerator(name: "FS_ERR_ASYNC_JOB_NOT_FOUND", value: -82)
!1312 = !DIEnumerator(name: "FS_MSDC_MOUNT_ERROR", value: -100)
!1313 = !DIEnumerator(name: "FS_MSDC_READ_SECTOR_ERROR", value: -101)
!1314 = !DIEnumerator(name: "FS_MSDC_WRITE_SECTOR_ERROR", value: -102)
!1315 = !DIEnumerator(name: "FS_MSDC_DISCARD_SECTOR_ERROR", value: -103)
!1316 = !DIEnumerator(name: "FS_MSDC_PRESNET_NOT_READY", value: -104)
!1317 = !DIEnumerator(name: "FS_MSDC_NOT_PRESENT", value: -105)
!1318 = !DIEnumerator(name: "FS_EXTERNAL_DEVICE_NOT_PRESENT", value: -106)
!1319 = !DIEnumerator(name: "FS_HIGH_LEVEL_FORMAT_ERROR", value: -107)
!1320 = !DIEnumerator(name: "FS_CARD_BATCHCOUNT_NOT_PRESENT", value: -110)
!1321 = !DIEnumerator(name: "FS_FLASH_MOUNT_ERROR", value: -120)
!1322 = !DIEnumerator(name: "FS_FLASH_ERASE_BUSY", value: -121)
!1323 = !DIEnumerator(name: "FS_NAND_DEVICE_NOT_SUPPORTED", value: -122)
!1324 = !DIEnumerator(name: "FS_FLASH_OTP_UNKNOWERR", value: -123)
!1325 = !DIEnumerator(name: "FS_FLASH_OTP_OVERSCOPE", value: -124)
!1326 = !DIEnumerator(name: "FS_FLASH_OTP_WRITEFAIL", value: -125)
!1327 = !DIEnumerator(name: "FS_FDM_VERSION_MISMATCH", value: -126)
!1328 = !DIEnumerator(name: "FS_FLASH_OTP_LOCK_ALREADY", value: -127)
!1329 = !DIEnumerator(name: "FS_FDM_FORMAT_ERROR", value: -128)
!1330 = !DIEnumerator(name: "FS_FDM_USER_DRIVE_BROKEN", value: -129)
!1331 = !DIEnumerator(name: "FS_FDM_SYS_DRIVE_BROKEN", value: -130)
!1332 = !DIEnumerator(name: "FS_FDM_MULTIPLE_BROKEN", value: -131)
!1333 = !DIEnumerator(name: "FS_LOCK_MUTEX_FAIL", value: -141)
!1334 = !DIEnumerator(name: "FS_NO_NONBLOCKMODE", value: -142)
!1335 = !DIEnumerator(name: "FS_NO_PROTECTIONMODE", value: -143)
!1336 = !DIEnumerator(name: "FS_DISK_SIZE_TOO_LARGE", value: -100)
!1337 = !DIEnumerator(name: "FS_MINIMUM_ERROR_CODE", value: -65536)
!1338 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1339, line: 81, baseType: !15, size: 32, elements: !1340)
!1339 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_mtd_sf_dal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/dac_output_data_repeatedly/GCC")
!1340 = !{!1341, !1342, !1343}
!1341 = !DIEnumerator(name: "SFDRV_READY", value: 0)
!1342 = !DIEnumerator(name: "SFDRV_PROGRAMMING", value: 1)
!1343 = !DIEnumerator(name: "SFDRV_ERASING", value: 2)
!1344 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1245, line: 298, baseType: !15, size: 32, elements: !1345)
!1345 = !{!1346, !1347, !1348, !1349, !1350}
!1346 = !DIEnumerator(name: "sf_fix_winbond_cv", value: 1)
!1347 = !DIEnumerator(name: "sf_fix_winbond_dw", value: 2)
!1348 = !DIEnumerator(name: "sf_fix_mxic_35e", value: 4)
!1349 = !DIEnumerator(name: "sf_fix_fidelix_q32a", value: 8)
!1350 = !DIEnumerator(name: "sf_fix_gigadevice_b", value: 16)
!1351 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1352, line: 51, baseType: !15, size: 32, elements: !1353)
!1352 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_sf.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/dac_output_data_repeatedly/GCC")
!1353 = !{!1354, !1355, !1356, !1357, !1358, !1359, !1360, !1361, !1362}
!1354 = !DIEnumerator(name: "SF_SR_BUSY", value: 0)
!1355 = !DIEnumerator(name: "SF_SR_WEL", value: 1)
!1356 = !DIEnumerator(name: "SF_SR_WSE", value: 2)
!1357 = !DIEnumerator(name: "SF_SR_WSP", value: 3)
!1358 = !DIEnumerator(name: "SF_SR_BP", value: 4)
!1359 = !DIEnumerator(name: "SF_SR_SRWD", value: 5)
!1360 = !DIEnumerator(name: "SF_SR_OTPLOCK", value: 6)
!1361 = !DIEnumerator(name: "SF_SR_FAIL", value: 7)
!1362 = !DIEnumerator(name: "SF_SR_COUNT", value: 8)
!1363 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1364, line: 110, baseType: !7, size: 32, elements: !1365)
!1364 = !DIFile(filename: "../../../../../driver/chip/inc/hal_flash.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/dac_output_data_repeatedly/GCC")
!1365 = !{!1366, !1367, !1368, !1369, !1370, !1371, !1372, !1373}
!1366 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_ERASE_FAIL", value: -7)
!1367 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_PROG_FAIL", value: -6)
!1368 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_NO_INIT", value: -5)
!1369 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_NO_SPACE", value: -4)
!1370 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_WRONG_ADDRESS", value: -3)
!1371 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_LOCKED", value: -2)
!1372 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR", value: -1)
!1373 = !DIEnumerator(name: "HAL_FLASH_STATUS_OK", value: 0)
!1374 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1352, line: 73, baseType: !15, size: 32, elements: !1375)
!1375 = !{!1376, !1377, !1378, !1379, !1380, !1381, !1382}
!1376 = !DIEnumerator(name: "SF_MXIC_SR_BUSY", value: 1)
!1377 = !DIEnumerator(name: "SF_MXIC_SR_WEL", value: 2)
!1378 = !DIEnumerator(name: "SF_MXIC_SR_WSE", value: 8)
!1379 = !DIEnumerator(name: "SF_MXIC_SR_WSP", value: 4)
!1380 = !DIEnumerator(name: "SF_MXIC_SR_BP", value: 60)
!1381 = !DIEnumerator(name: "SF_MXIC_SR_SRWD", value: 128)
!1382 = !DIEnumerator(name: "SF_MXIC_SR_ALL", value: 255)
!1383 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1352, line: 83, baseType: !15, size: 32, elements: !1384)
!1384 = !{!1385, !1386, !1387, !1388, !1389, !1390, !1391}
!1385 = !DIEnumerator(name: "SF_MXIC_SSR_OTP", value: 1)
!1386 = !DIEnumerator(name: "SF_MXIC_SSR_LDSO", value: 2)
!1387 = !DIEnumerator(name: "SF_MXIC_SSR_WSP", value: 4)
!1388 = !DIEnumerator(name: "SF_MXIC_SSR_WSE", value: 8)
!1389 = !DIEnumerator(name: "SF_MXIC_SSR_PFAIL", value: 32)
!1390 = !DIEnumerator(name: "SF_MXIC_SSR_EFAIL", value: 64)
!1391 = !DIEnumerator(name: "SF_MXIC_SSR_WPSEL", value: 128)
!1392 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1352, line: 98, baseType: !15, size: 32, elements: !1393)
!1393 = !{!1394, !1395}
!1394 = !DIEnumerator(name: "SF_WINBOND_SSR_SUS", value: 128)
!1395 = !DIEnumerator(name: "SF_WINBOND_SSR_OTP", value: 60)
!1396 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1339, line: 76, baseType: !15, size: 32, elements: !1397)
!1397 = !{!1398, !1399}
!1398 = !DIEnumerator(name: "SF_IOCTRL_UNLOCK_BLOCK", value: 0)
!1399 = !DIEnumerator(name: "SF_IOCTRL_GET_PROGRAM_FAIL_HANDLE_TYPE", value: 1)
!1400 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1339, line: 208, baseType: !15, size: 32, elements: !1401)
!1401 = !{!1402, !1403, !1404, !1405, !1406, !1407, !1408, !1409, !1410, !1411, !1412, !1413}
!1402 = !DIEnumerator(name: "SF_DAL_TYPE_NONE", value: 0)
!1403 = !DIEnumerator(name: "SF_DAL_TYPE_NUMONYX", value: 32)
!1404 = !DIEnumerator(name: "SF_DAL_TYPE_NUMONYX_W", value: 44)
!1405 = !DIEnumerator(name: "SF_DAL_TYPE_EON", value: 28)
!1406 = !DIEnumerator(name: "SF_DAL_TYPE_SST", value: 191)
!1407 = !DIEnumerator(name: "SF_DAL_TYPE_MXIC", value: 194)
!1408 = !DIEnumerator(name: "SF_DAL_TYPE_GIGADEVICE", value: 200)
!1409 = !DIEnumerator(name: "SF_DAL_TYPE_GIGADEVICE_MD", value: 81)
!1410 = !DIEnumerator(name: "SF_DAL_TYPE_WINBOND", value: 239)
!1411 = !DIEnumerator(name: "SF_DAL_TYPE_FIDELIX", value: 248)
!1412 = !DIEnumerator(name: "SF_DAL_TYPE_ESMT", value: 140)
!1413 = !DIEnumerator(name: "SF_DAL_TYPE_COUNT", value: 141)
!1414 = !{!105, !1186, !1217, !818, !1415, !1525, !1547, !124, !1553, !129}
!1415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1416, size: 32)
!1416 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_Data", file: !1339, line: 193, baseType: !1417)
!1417 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1339, line: 134, size: 1824, elements: !1418)
!1418 = !{!1419, !1420, !1421, !1428, !1434, !1438, !1446, !1447, !1454, !1455, !1456, !1457, !1465, !1468, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1519, !1520, !1524}
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !1417, file: !1339, line: 136, baseType: !105, size: 32)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !1417, file: !1339, line: 137, baseType: !818, size: 32, offset: 32)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !1417, file: !1339, line: 138, baseType: !1422, size: 32, offset: 64)
!1422 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !1423, line: 56, baseType: !1424)
!1423 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_kal_public_defs.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/dac_output_data_repeatedly/GCC")
!1424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1425, size: 32)
!1425 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1423, line: 54, size: 8, elements: !1426)
!1426 = !{!1427}
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1425, file: !1423, line: 55, baseType: !127, size: 8)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !1417, file: !1339, line: 139, baseType: !1429, size: 32, offset: 96)
!1429 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !1423, line: 46, baseType: !1430)
!1430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1431, size: 32)
!1431 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1423, line: 44, size: 8, elements: !1432)
!1432 = !{!1433}
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1431, file: !1423, line: 45, baseType: !127, size: 8)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !1417, file: !1339, line: 140, baseType: !1435, size: 8, offset: 128)
!1435 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !106, line: 20, baseType: !1436)
!1436 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int8_t", file: !108, line: 41, baseType: !1437)
!1437 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !1417, file: !1339, line: 143, baseType: !1439, size: 32, offset: 160)
!1439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1440, size: 32)
!1440 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !1441, line: 146, baseType: !1442)
!1441 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_drvflash.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/dac_output_data_repeatedly/GCC")
!1442 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1441, line: 143, size: 64, elements: !1443)
!1443 = !{!1444, !1445}
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !1442, file: !1441, line: 144, baseType: !105, size: 32)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !1442, file: !1441, line: 145, baseType: !105, size: 32, offset: 32)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !1417, file: !1339, line: 144, baseType: !818, size: 32, offset: 192)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !1417, file: !1339, line: 145, baseType: !1448, size: 32, offset: 224)
!1448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1449, size: 32)
!1449 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !1441, line: 152, baseType: !1450)
!1450 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1441, line: 149, size: 64, elements: !1451)
!1451 = !{!1452, !1453}
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !1450, file: !1441, line: 150, baseType: !105, size: 32)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !1450, file: !1441, line: 151, baseType: !105, size: 32, offset: 32)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !1417, file: !1339, line: 146, baseType: !818, size: 32, offset: 256)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !1417, file: !1339, line: 147, baseType: !105, size: 32, offset: 288)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !1417, file: !1339, line: 148, baseType: !818, size: 32, offset: 320)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !1417, file: !1339, line: 151, baseType: !1458, size: 1024, offset: 352)
!1458 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1459, size: 1024, elements: !1464)
!1459 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !1441, line: 170, baseType: !1460)
!1460 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1441, line: 167, size: 64, elements: !1461)
!1461 = !{!1462, !1463}
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !1460, file: !1441, line: 168, baseType: !105, size: 32)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !1460, file: !1441, line: 169, baseType: !105, size: 32, offset: 32)
!1464 = !{!810, !485}
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "StatusMap", scope: !1417, file: !1339, line: 155, baseType: !1466, size: 32, offset: 1376)
!1466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1467, size: 32)
!1467 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_Status", file: !1352, line: 120, baseType: !127)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "CMD", scope: !1417, file: !1339, line: 156, baseType: !1469, size: 32, offset: 1408)
!1469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1470, size: 32)
!1470 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_CMD", file: !1339, line: 124, baseType: !1471)
!1471 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1339, line: 90, size: 200, elements: !1472)
!1472 = !{!1473, !1474, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1495, !1496, !1497}
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "PageProg", scope: !1471, file: !1339, line: 91, baseType: !127, size: 8)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "WriteEnable", scope: !1471, file: !1339, line: 92, baseType: !127, size: 8, offset: 8)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "Suspend", scope: !1471, file: !1339, line: 94, baseType: !127, size: 8, offset: 16)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "Resume", scope: !1471, file: !1339, line: 95, baseType: !127, size: 8, offset: 24)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "Read", scope: !1471, file: !1339, line: 96, baseType: !127, size: 8, offset: 32)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "Erase", scope: !1471, file: !1339, line: 98, baseType: !127, size: 8, offset: 40)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "Erase4K", scope: !1471, file: !1339, line: 99, baseType: !127, size: 8, offset: 48)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "Erase32K", scope: !1471, file: !1339, line: 100, baseType: !127, size: 8, offset: 56)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "Erase64K", scope: !1471, file: !1339, line: 101, baseType: !127, size: 8, offset: 64)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_SPI", scope: !1471, file: !1339, line: 103, baseType: !127, size: 8, offset: 72)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_QPI", scope: !1471, file: !1339, line: 104, baseType: !127, size: 8, offset: 80)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "ReadBPReg", scope: !1471, file: !1339, line: 106, baseType: !127, size: 8, offset: 88)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "WriteBPReg", scope: !1471, file: !1339, line: 107, baseType: !127, size: 8, offset: 96)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSecurityReg", scope: !1471, file: !1339, line: 108, baseType: !127, size: 8, offset: 104)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "WriteSecurityReg", scope: !1471, file: !1339, line: 109, baseType: !127, size: 8, offset: 112)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSuspendReg", scope: !1471, file: !1339, line: 110, baseType: !127, size: 8, offset: 120)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "ReadReadyReg", scope: !1471, file: !1339, line: 111, baseType: !127, size: 8, offset: 128)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "ReadFailReg", scope: !1471, file: !1339, line: 112, baseType: !127, size: 8, offset: 136)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "EnterDPD", scope: !1471, file: !1339, line: 114, baseType: !127, size: 8, offset: 144)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "LeaveDPD", scope: !1471, file: !1339, line: 115, baseType: !127, size: 8, offset: 152)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "OTPProg", scope: !1471, file: !1339, line: 118, baseType: !127, size: 8, offset: 160)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !1471, file: !1339, line: 119, baseType: !127, size: 8, offset: 168)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "OTPEnter", scope: !1471, file: !1339, line: 120, baseType: !127, size: 8, offset: 176)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "OTPExit", scope: !1471, file: !1339, line: 121, baseType: !127, size: 8, offset: 184)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !1471, file: !1339, line: 122, baseType: !127, size: 8, offset: 192)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "Flag", scope: !1417, file: !1339, line: 157, baseType: !105, size: 32, offset: 1440)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "BPRBitCount", scope: !1417, file: !1339, line: 158, baseType: !987, size: 16, offset: 1472)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "UniformBlock", scope: !1417, file: !1339, line: 159, baseType: !987, size: 16, offset: 1488)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLength", scope: !1417, file: !1339, line: 163, baseType: !987, size: 16, offset: 1504)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "OTPBase", scope: !1417, file: !1339, line: 164, baseType: !987, size: 16, offset: 1520)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendLatency", scope: !1417, file: !1339, line: 167, baseType: !127, size: 8, offset: 1536)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "FlashID", scope: !1417, file: !1339, line: 168, baseType: !1505, size: 24, offset: 1544)
!1505 = !DICompositeType(tag: DW_TAG_array_type, baseType: !127, size: 24, elements: !1506)
!1506 = !{!1507}
!1507 = !DISubrange(count: 3)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "DriverStatus", scope: !1417, file: !1339, line: 169, baseType: !127, size: 8, offset: 1568)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "AddressCycle", scope: !1417, file: !1339, line: 170, baseType: !127, size: 8, offset: 1576)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "CS", scope: !1417, file: !1339, line: 173, baseType: !987, size: 16, offset: 1584)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "sf_dal_fix", scope: !1417, file: !1339, line: 174, baseType: !105, size: 32, offset: 1600)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "CS_Size", scope: !1417, file: !1339, line: 175, baseType: !105, size: 32, offset: 1632)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_BUSY", scope: !1417, file: !1339, line: 178, baseType: !321, size: 8, offset: 1664)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_SUSPENDED", scope: !1417, file: !1339, line: 179, baseType: !321, size: 8, offset: 1672)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "UnlockBlock", scope: !1417, file: !1339, line: 182, baseType: !1516, size: 32, offset: 1696)
!1516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1517, size: 32)
!1517 = !DISubroutineType(types: !1518)
!1518 = !{!7, !124}
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !1417, file: !1339, line: 186, baseType: !1516, size: 32, offset: 1728)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !1417, file: !1339, line: 187, baseType: !1521, size: 32, offset: 1760)
!1521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1522, size: 32)
!1522 = !DISubroutineType(types: !1523)
!1523 = !{!7, !124, !105, !124, !105}
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "OTPWrite", scope: !1417, file: !1339, line: 188, baseType: !1521, size: 32, offset: 1792)
!1525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1526, size: 32)
!1526 = !DIDerivedType(tag: DW_TAG_typedef, name: "SFC_REGISTER_T", file: !100, line: 2777, baseType: !1527)
!1527 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !100, line: 2758, size: 576, elements: !1528)
!1528 = !{!1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546}
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_CTL", scope: !1527, file: !100, line: 2759, baseType: !104, size: 32)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DIRECT_CTL", scope: !1527, file: !100, line: 2760, baseType: !104, size: 32, offset: 32)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL", scope: !1527, file: !100, line: 2761, baseType: !104, size: 32, offset: 64)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL2", scope: !1527, file: !100, line: 2762, baseType: !104, size: 32, offset: 96)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_OUTL", scope: !1527, file: !100, line: 2763, baseType: !104, size: 32, offset: 128)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_INL", scope: !1527, file: !100, line: 2764, baseType: !104, size: 32, offset: 160)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_RESET_CTL", scope: !1527, file: !100, line: 2765, baseType: !104, size: 32, offset: 192)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_STA2_CTL", scope: !1527, file: !100, line: 2766, baseType: !104, size: 32, offset: 224)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL1", scope: !1527, file: !100, line: 2767, baseType: !104, size: 32, offset: 256)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL2", scope: !1527, file: !100, line: 2768, baseType: !104, size: 32, offset: 288)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL3", scope: !1527, file: !100, line: 2769, baseType: !104, size: 32, offset: 320)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DUMMY1", scope: !1527, file: !100, line: 2770, baseType: !104, size: 32, offset: 352)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL4", scope: !1527, file: !100, line: 2771, baseType: !104, size: 32, offset: 384)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL5", scope: !1527, file: !100, line: 2772, baseType: !104, size: 32, offset: 416)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL6", scope: !1527, file: !100, line: 2773, baseType: !104, size: 32, offset: 448)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DUMMY2", scope: !1527, file: !100, line: 2774, baseType: !104, size: 32, offset: 480)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DIRECT_CTL2", scope: !1527, file: !100, line: 2775, baseType: !104, size: 32, offset: 512)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL3", scope: !1527, file: !100, line: 2776, baseType: !104, size: 32, offset: 544)
!1547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1548, size: 32)
!1548 = !DIDerivedType(tag: DW_TAG_typedef, name: "SFC_GPRAM_REGISTER_T", file: !100, line: 2801, baseType: !1549)
!1549 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !100, line: 2798, size: 64, elements: !1550)
!1550 = !{!1551, !1552}
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_GPRAM_DATA", scope: !1549, file: !100, line: 2799, baseType: !104, size: 32)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_GPRAM_DATA_OF_4", scope: !1549, file: !100, line: 2800, baseType: !104, size: 32, offset: 32)
!1553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !126, size: 32)
!1554 = !{!1242, !1555, !1557, !1559, !1564}
!1555 = !DIGlobalVariableExpression(var: !1556, expr: !DIExpression())
!1556 = distinct !DIGlobalVariable(name: "sf_dal_resume_time", scope: !1244, file: !1245, line: 382, type: !105, isLocal: false, isDefinition: true)
!1557 = !DIGlobalVariableExpression(var: !1558, expr: !DIExpression())
!1558 = distinct !DIGlobalVariable(name: "sf_dal_flash_return_ready_max", scope: !1244, file: !1245, line: 383, type: !105, isLocal: false, isDefinition: true)
!1559 = !DIGlobalVariableExpression(var: !1560, expr: !DIExpression())
!1560 = distinct !DIGlobalVariable(name: "tmp_data_buffer", scope: !1244, file: !1245, line: 369, type: !1561, isLocal: true, isDefinition: true)
!1561 = !DICompositeType(tag: DW_TAG_array_type, baseType: !127, size: 1024, elements: !1562)
!1562 = !{!1563}
!1563 = !DISubrange(count: 128)
!1564 = !DIGlobalVariableExpression(var: !1565, expr: !DIExpression())
!1565 = distinct !DIGlobalVariable(name: "MTDMutex", scope: !1244, file: !1245, line: 1409, type: !7, isLocal: true, isDefinition: true)
!1566 = !DIGlobalVariableExpression(var: !1565, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 18446744073709551615, DW_OP_mul, DW_OP_constu, 1, DW_OP_plus, DW_OP_stack_value))
!1567 = !DIGlobalVariableExpression(var: !1568, expr: !DIExpression())
!1568 = distinct !DIGlobalVariable(name: "combo_mem_id_list", scope: !1569, file: !1624, line: 35, type: !1625, isLocal: false, isDefinition: true)
!1569 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1570, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1571, retainedTypes: !1617, globals: !1618, splitDebugInlining: false, nameTableKind: None)
!1570 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_combo_init.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/dac_output_data_repeatedly/GCC")
!1571 = !{!1572}
!1572 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1573, line: 77, baseType: !15, size: 32, elements: !1574)
!1573 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_general_types.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/dac_output_data_repeatedly/GCC")
!1574 = !{!1575, !1576, !1577, !1578, !1579, !1580, !1581, !1582, !1583, !1584, !1585, !1586, !1587, !1588, !1589, !1590, !1591, !1592, !1593, !1594, !1595, !1596, !1597, !1598, !1599, !1600, !1601, !1602, !1603, !1604, !1605, !1606, !1607, !1608, !1609, !1610, !1611, !1612, !1613, !1614, !1615, !1616}
!1575 = !DIEnumerator(name: "GFH_FILE_INFO", value: 0)
!1576 = !DIEnumerator(name: "GFH_BL_INFO", value: 1)
!1577 = !DIEnumerator(name: "GFH_ANTI_CLONE", value: 2)
!1578 = !DIEnumerator(name: "GFH_BL_SEC_KEY", value: 3)
!1579 = !DIEnumerator(name: "GFH_SCTRL_CERT", value: 4)
!1580 = !DIEnumerator(name: "GFH_TOOL_AUTH", value: 5)
!1581 = !DIEnumerator(name: "GFH_MTK_RESERVED1", value: 6)
!1582 = !DIEnumerator(name: "GFH_BROM_CFG", value: 7)
!1583 = !DIEnumerator(name: "GFH_BROM_SEC_CFG", value: 8)
!1584 = !DIEnumerator(name: "GFH_MTK_RESERVED2", value: 9)
!1585 = !DIEnumerator(name: "GFH_MTK_RESERVED3", value: 10)
!1586 = !DIEnumerator(name: "GFH_ROOT_CERT", value: 11)
!1587 = !DIEnumerator(name: "GFH_EXP_CHK", value: 12)
!1588 = !DIEnumerator(name: "GFH_EPP_PARAM", value: 13)
!1589 = !DIEnumerator(name: "GFH_CHIP_VER", value: 14)
!1590 = !DIEnumerator(name: "GFH_MTK_RESERVED4", value: 15)
!1591 = !DIEnumerator(name: "GFH_MD_SEC_CFG", value: 16)
!1592 = !DIEnumerator(name: "GFH_EPP_INFO", value: 256)
!1593 = !DIEnumerator(name: "GFH_EMI_LIST", value: 257)
!1594 = !DIEnumerator(name: "GFH_CMEM_ID_INFO", value: 258)
!1595 = !DIEnumerator(name: "GFH_CMEM_NOR_INFO", value: 259)
!1596 = !DIEnumerator(name: "GFH_DSP_INFO", value: 260)
!1597 = !DIEnumerator(name: "GFH_MAUI_INFO", value: 512)
!1598 = !DIEnumerator(name: "GFH_MAUI_SEC", value: 513)
!1599 = !DIEnumerator(name: "GFH_MAUI_CODE_KEY", value: 514)
!1600 = !DIEnumerator(name: "GFH_MAUI_SECURE_RO_KEY", value: 515)
!1601 = !DIEnumerator(name: "GFH_MAUI_RESOURCE_KEY", value: 516)
!1602 = !DIEnumerator(name: "GFH_SECURE_RO_INFO", value: 517)
!1603 = !DIEnumerator(name: "GFH_DL_PACKAGE_INFO", value: 518)
!1604 = !DIEnumerator(name: "GFH_FLASH_INFO", value: 519)
!1605 = !DIEnumerator(name: "GFH_MACR_INFO", value: 520)
!1606 = !DIEnumerator(name: "GFH_ARM_BL_INFO", value: 521)
!1607 = !DIEnumerator(name: "GFH_EMMC_BOOTING_INFO", value: 522)
!1608 = !DIEnumerator(name: "GFH_FOTA_INFO", value: 523)
!1609 = !DIEnumerator(name: "GFH_CBR_RECORD_INFO", value: 524)
!1610 = !DIEnumerator(name: "GFH_CONFIDENTIAL_BIN_INFO", value: 525)
!1611 = !DIEnumerator(name: "GFH_CBR_INFO", value: 526)
!1612 = !DIEnumerator(name: "GFH_MBA_INFO", value: 527)
!1613 = !DIEnumerator(name: "GFH_BINARY_LOCATION", value: 528)
!1614 = !DIEnumerator(name: "GFH_BOOT_CERT_CTRL_CONTENT", value: 768)
!1615 = !DIEnumerator(name: "GFH_TYPE_NUM", value: 769)
!1616 = !DIEnumerator(name: "GFH_TYPE_END", value: 65535)
!1617 = !{!124}
!1618 = !{!1567, !1619, !1622}
!1619 = !DIGlobalVariableExpression(var: !1620, expr: !DIExpression())
!1620 = distinct !DIGlobalVariable(name: "cmem_index", scope: !1569, file: !1570, line: 96, type: !1621, isLocal: true, isDefinition: true)
!1621 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1622 = !DIGlobalVariableExpression(var: !1623, expr: !DIExpression())
!1623 = distinct !DIGlobalVariable(name: "cmem_emiinit_index", scope: !1569, file: !1570, line: 94, type: !1621, isLocal: true, isDefinition: true)
!1624 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_combo_id.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/dac_output_data_repeatedly/GCC")
!1625 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1626)
!1626 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_CMEM_ID_INFO_v1", file: !1570, line: 54, baseType: !1627)
!1627 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1570, line: 51, size: 576, elements: !1628)
!1628 = !{!1629, !1639}
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "m_gfh_hdr", scope: !1627, file: !1570, line: 52, baseType: !1630, size: 96)
!1630 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_Header", file: !1573, line: 152, baseType: !1631)
!1631 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GFH_Header", file: !1573, line: 144, size: 96, elements: !1632)
!1632 = !{!1633, !1635, !1637}
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "m_magic_ver", scope: !1631, file: !1573, line: 145, baseType: !1634, size: 32)
!1634 = !DIDerivedType(tag: DW_TAG_typedef, name: "U32", file: !1573, line: 61, baseType: !15)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "m_size", scope: !1631, file: !1573, line: 146, baseType: !1636, size: 16, offset: 32)
!1636 = !DIDerivedType(tag: DW_TAG_typedef, name: "U16", file: !1573, line: 62, baseType: !989)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "m_type", scope: !1631, file: !1573, line: 150, baseType: !1638, size: 32, offset: 64)
!1638 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_TYPE", file: !1573, line: 127, baseType: !1572)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "m_data", scope: !1627, file: !1570, line: 53, baseType: !1640, size: 480, offset: 96)
!1640 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryIDList", file: !1641, line: 107, baseType: !1642)
!1641 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_combo_defs.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/dac_output_data_repeatedly/GCC")
!1642 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1641, line: 103, size: 480, elements: !1643)
!1643 = !{!1644, !1645, !1646}
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "m_ver", scope: !1642, file: !1641, line: 104, baseType: !15, size: 32)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "Count", scope: !1642, file: !1641, line: 105, baseType: !15, size: 32, offset: 32)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "List", scope: !1642, file: !1641, line: 106, baseType: !1647, size: 400, offset: 64)
!1647 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1648, size: 400, elements: !1089)
!1648 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryID", file: !1641, line: 100, baseType: !1649)
!1649 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1641, line: 92, size: 80, elements: !1650)
!1650 = !{!1651, !1652, !1653}
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceType", scope: !1649, file: !1641, line: 93, baseType: !127, size: 8)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "IDLength", scope: !1649, file: !1641, line: 94, baseType: !127, size: 8, offset: 8)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "ID", scope: !1649, file: !1641, line: 96, baseType: !1654, size: 64, offset: 16)
!1654 = !DICompositeType(tag: DW_TAG_array_type, baseType: !127, size: 64, elements: !809)
!1655 = !DIGlobalVariableExpression(var: !1656, expr: !DIExpression())
!1656 = distinct !DIGlobalVariable(name: "FLASH_ID", scope: !1657, file: !1660, line: 96, type: !1661, isLocal: false, isDefinition: true)
!1657 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1658, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !1659, splitDebugInlining: false, nameTableKind: None)
!1658 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_custom.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/dac_output_data_repeatedly/GCC")
!1659 = !{!1655}
!1660 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_custom.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/dac_output_data_repeatedly/GCC")
!1661 = !DICompositeType(tag: DW_TAG_array_type, baseType: !200, size: 152, elements: !1662)
!1662 = !{!1663}
!1663 = !DISubrange(count: 19)
!1664 = !DIGlobalVariableExpression(var: !1665, expr: !DIExpression())
!1665 = distinct !DIGlobalVariable(name: "nor_egid", scope: !1666, file: !1667, line: 168, type: !2017, isLocal: false, isDefinition: true)
!1666 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1667, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1668, retainedTypes: !1679, globals: !1688, splitDebugInlining: false, nameTableKind: None)
!1667 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_combo_nor.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/dac_output_data_repeatedly/GCC")
!1668 = !{!1669, !1247, !1572}
!1669 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1670, line: 49, baseType: !15, size: 32, elements: !1671)
!1670 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_combo_init.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/dac_output_data_repeatedly/GCC")
!1671 = !{!1672, !1673, !1674, !1675, !1676, !1677, !1678}
!1672 = !DIEnumerator(name: "CMEM_NO_ERROR", value: 0)
!1673 = !DIEnumerator(name: "CMEM_ERR_ID_NOT_FOUND", value: 1)
!1674 = !DIEnumerator(name: "CMEM_ERR_FDM_MISMATCH", value: 2)
!1675 = !DIEnumerator(name: "CMEM_ERR_MTD_MISMATCH", value: 3)
!1676 = !DIEnumerator(name: "CMEM_ERR_FDM_INIT_FAIL", value: 4)
!1677 = !DIEnumerator(name: "CMEM_ERR_MTD_INIT_FAIL", value: 5)
!1678 = !DIEnumerator(name: "CMEM_ERR_FDM_REGION_INFO_OVERFLOW", value: 6)
!1679 = !{!1680, !105, !1682}
!1680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1681, size: 32)
!1681 = !DIDerivedType(tag: DW_TAG_typedef, name: "BYTE", file: !1248, line: 47, baseType: !129)
!1682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1683, size: 32)
!1683 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !1441, line: 146, baseType: !1684)
!1684 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1441, line: 143, size: 64, elements: !1685)
!1685 = !{!1686, !1687}
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !1684, file: !1441, line: 144, baseType: !105, size: 32)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !1684, file: !1441, line: 145, baseType: !105, size: 32, offset: 32)
!1688 = !{!1664, !1689, !1691, !1701, !1838, !1840, !1842, !1844, !1846, !1851, !1854, !1863, !1865, !1867, !1875, !1877, !1879, !1962, !1965, !1967, !1969, !1980, !1982, !1995}
!1689 = !DIGlobalVariableExpression(var: !1690, expr: !DIExpression())
!1690 = distinct !DIGlobalVariable(name: "cmem_nor_index", scope: !1666, file: !1667, line: 94, type: !1124, isLocal: true, isDefinition: true)
!1691 = !DIGlobalVariableExpression(var: !1692, expr: !DIExpression())
!1692 = distinct !DIGlobalVariable(name: "cmem_id", scope: !1666, file: !1667, line: 95, type: !1693, isLocal: false, isDefinition: true)
!1693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1694, size: 32)
!1694 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1695)
!1695 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryID", file: !1641, line: 100, baseType: !1696)
!1696 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1641, line: 92, size: 80, elements: !1697)
!1697 = !{!1698, !1699, !1700}
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceType", scope: !1696, file: !1641, line: 93, baseType: !127, size: 8)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "IDLength", scope: !1696, file: !1641, line: 94, baseType: !127, size: 8, offset: 8)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "ID", scope: !1696, file: !1641, line: 96, baseType: !1654, size: 64, offset: 16)
!1701 = !DIGlobalVariableExpression(var: !1702, expr: !DIExpression())
!1702 = distinct !DIGlobalVariable(name: "FlashDriveData", scope: !1666, file: !1667, line: 127, type: !1703, isLocal: false, isDefinition: true)
!1703 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_FLASH_DRV_Data", file: !1441, line: 317, baseType: !1704)
!1704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "NOR_FLASH_DRV_Data", file: !1441, line: 237, size: 2720, elements: !1705)
!1705 = !{!1706, !1707, !1759, !1760, !1763, !1764, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1805, !1806, !1807, !1812, !1813, !1814, !1815, !1816, !1820, !1824, !1831, !1832, !1833, !1834, !1835, !1836, !1837}
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "TotalFATSectors", scope: !1704, file: !1441, line: 238, baseType: !105, size: 32)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "MTDDriver", scope: !1704, file: !1441, line: 239, baseType: !1708, size: 32, offset: 32)
!1708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1709, size: 32)
!1709 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_Driver", file: !1441, line: 121, baseType: !1710)
!1710 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1441, line: 105, size: 480, elements: !1711)
!1711 = !{!1712, !1716, !1717, !1721, !1725, !1729, !1730, !1734, !1735, !1736, !1737, !1742, !1747, !1751, !1755}
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "MountDevice", scope: !1710, file: !1441, line: 106, baseType: !1713, size: 32)
!1713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1714, size: 32)
!1714 = !DISubroutineType(types: !1715)
!1715 = !{!7, !124, !124}
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "ShutDown", scope: !1710, file: !1441, line: 107, baseType: !1516, size: 32, offset: 32)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "MapWindow", scope: !1710, file: !1441, line: 108, baseType: !1718, size: 32, offset: 64)
!1718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1719, size: 32)
!1719 = !DISubroutineType(types: !1720)
!1720 = !{!124, !124, !105, !105}
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "EraseBlock", scope: !1710, file: !1441, line: 109, baseType: !1722, size: 32, offset: 96)
!1722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1723, size: 32)
!1723 = !DISubroutineType(types: !1724)
!1724 = !{!7, !124, !105}
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramData", scope: !1710, file: !1441, line: 110, baseType: !1726, size: 32, offset: 128)
!1726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1727, size: 32)
!1727 = !DISubroutineType(types: !1728)
!1728 = !{!7, !124, !124, !124, !105}
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "NonBlockEraseBlock", scope: !1710, file: !1441, line: 111, baseType: !1722, size: 32, offset: 160)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "CheckDeviceReady", scope: !1710, file: !1441, line: 112, baseType: !1731, size: 32, offset: 192)
!1731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1732, size: 32)
!1732 = !DISubroutineType(types: !1733)
!1733 = !{!1124, !124, !105}
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendErase", scope: !1710, file: !1441, line: 113, baseType: !1722, size: 32, offset: 224)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "ResumeErase", scope: !1710, file: !1441, line: 114, baseType: !1722, size: 32, offset: 256)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "BlankCheck", scope: !1710, file: !1441, line: 115, baseType: !1722, size: 32, offset: 288)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "OTPAccess", scope: !1710, file: !1441, line: 116, baseType: !1738, size: 32, offset: 320)
!1738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1739, size: 32)
!1739 = !DISubroutineType(types: !1740)
!1740 = !{!7, !124, !7, !1741, !124, !1741}
!1741 = !DIDerivedType(tag: DW_TAG_typedef, name: "UINT", file: !1248, line: 50, baseType: !15)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "OTPQueryLength", scope: !1710, file: !1441, line: 117, baseType: !1743, size: 32, offset: 352)
!1743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1744, size: 32)
!1744 = !DISubroutineType(types: !1745)
!1745 = !{!7, !124, !1746}
!1746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1741, size: 32)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "LockEraseBlkAddr", scope: !1710, file: !1441, line: 118, baseType: !1748, size: 32, offset: 384)
!1748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1749, size: 32)
!1749 = !DISubroutineType(types: !1750)
!1750 = !{!7, !124, !124, !105}
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "IsEraseSuspended", scope: !1710, file: !1441, line: 119, baseType: !1752, size: 32, offset: 416)
!1752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1753, size: 32)
!1753 = !DISubroutineType(types: !1754)
!1754 = !{!321, !124, !105}
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "IOCtrl", scope: !1710, file: !1441, line: 120, baseType: !1756, size: 32, offset: 448)
!1756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1757, size: 32)
!1757 = !DISubroutineType(types: !1758)
!1758 = !{!7, !124, !105, !124}
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "MTDData", scope: !1704, file: !1441, line: 240, baseType: !124, size: 32, offset: 64)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "AvailSectorsInBlock", scope: !1704, file: !1441, line: 241, baseType: !1761, size: 32, offset: 96)
!1761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1762, size: 32)
!1762 = !DIDerivedType(tag: DW_TAG_typedef, name: "WORD", file: !1248, line: 46, baseType: !989)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "ValidSectorsInBlock", scope: !1704, file: !1441, line: 242, baseType: !1761, size: 32, offset: 128)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "FlashInfo", scope: !1704, file: !1441, line: 243, baseType: !1765, size: 928, offset: 160)
!1765 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_FlashInfo", file: !1441, line: 99, baseType: !1766)
!1766 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1441, line: 90, size: 928, elements: !1767)
!1767 = !{!1768, !1769, !1771, !1772, !1773, !1774, !1775, !1776}
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "TotalBlocks", scope: !1766, file: !1441, line: 91, baseType: !105, size: 32)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !1766, file: !1441, line: 92, baseType: !1770, size: 256, offset: 32)
!1770 = !DICompositeType(tag: DW_TAG_array_type, baseType: !105, size: 256, elements: !809)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "AvailInRegion", scope: !1766, file: !1441, line: 93, baseType: !1770, size: 256, offset: 288)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !1766, file: !1441, line: 94, baseType: !1770, size: 256, offset: 544)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "ActualRegionNum", scope: !1766, file: !1441, line: 95, baseType: !105, size: 32, offset: 800)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "PageSize", scope: !1766, file: !1441, line: 96, baseType: !1762, size: 16, offset: 832)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "baseUnlockBlock", scope: !1766, file: !1441, line: 97, baseType: !105, size: 32, offset: 864)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "endUnlockBlock", scope: !1766, file: !1441, line: 98, baseType: !105, size: 32, offset: 896)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "HeaderSize", scope: !1704, file: !1441, line: 244, baseType: !1770, size: 256, offset: 1088)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "SectorsPerBlock", scope: !1704, file: !1441, line: 245, baseType: !1770, size: 256, offset: 1344)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "ActiveBlock", scope: !1704, file: !1441, line: 246, baseType: !105, size: 32, offset: 1600)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "ReclaimEraseCount", scope: !1704, file: !1441, line: 247, baseType: !105, size: 32, offset: 1632)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "ReclaimBlockID", scope: !1704, file: !1441, line: 248, baseType: !105, size: 32, offset: 1664)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "TotalPhysicalSectors", scope: !1704, file: !1441, line: 249, baseType: !105, size: 32, offset: 1696)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "PartitionSectors", scope: !1704, file: !1441, line: 250, baseType: !105, size: 32, offset: 1728)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "GCBlockSectors", scope: !1704, file: !1441, line: 252, baseType: !105, size: 32, offset: 1760)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "GCHighThreshold", scope: !1704, file: !1441, line: 255, baseType: !105, size: 32, offset: 1792)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "GCMiddleThreshold", scope: !1704, file: !1441, line: 256, baseType: !105, size: 32, offset: 1824)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "GCLowThreshold", scope: !1704, file: !1441, line: 257, baseType: !105, size: 32, offset: 1856)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "AvailSectors", scope: !1704, file: !1441, line: 261, baseType: !105, size: 32, offset: 1888)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "DeletedSectors", scope: !1704, file: !1441, line: 262, baseType: !105, size: 32, offset: 1920)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "StartSector", scope: !1704, file: !1441, line: 263, baseType: !105, size: 32, offset: 1952)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "Sectors", scope: !1704, file: !1441, line: 264, baseType: !105, size: 32, offset: 1984)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "SectorsLeft", scope: !1704, file: !1441, line: 265, baseType: !105, size: 32, offset: 2016)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "BLOCKID_OFFSET", scope: !1704, file: !1441, line: 266, baseType: !105, size: 32, offset: 2048)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "SECTORIDX_MASK", scope: !1704, file: !1441, line: 267, baseType: !105, size: 32, offset: 2080)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "PHY_SECTOR_OFFSET", scope: !1704, file: !1441, line: 268, baseType: !105, size: 32, offset: 2112)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "MSTABLE_ENTRY_NUM", scope: !1704, file: !1441, line: 270, baseType: !105, size: 32, offset: 2144)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "MS_count", scope: !1704, file: !1441, line: 271, baseType: !105, size: 32, offset: 2176)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "MSEntryTable", scope: !1704, file: !1441, line: 272, baseType: !1799, size: 32, offset: 2208)
!1799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1800, size: 32)
!1800 = !DIDerivedType(tag: DW_TAG_typedef, name: "MS_ENTRY", file: !1441, line: 229, baseType: !1801)
!1801 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1441, line: 226, size: 64, elements: !1802)
!1802 = !{!1803, !1804}
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "LogicalSectorID", scope: !1801, file: !1441, line: 227, baseType: !105, size: 32)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "PysicalSectorID_new", scope: !1801, file: !1441, line: 228, baseType: !105, size: 32, offset: 32)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "SectorMap", scope: !1704, file: !1441, line: 273, baseType: !1680, size: 32, offset: 2240)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "Buffer", scope: !1704, file: !1441, line: 274, baseType: !1680, size: 32, offset: 2272)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "CompleteErase", scope: !1704, file: !1441, line: 276, baseType: !1808, size: 32, offset: 2304)
!1808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1809, size: 32)
!1809 = !DISubroutineType(types: !1810)
!1810 = !{null, !1811}
!1811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1704, size: 32)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "RegionMaxBlock", scope: !1704, file: !1441, line: 278, baseType: !105, size: 32, offset: 2336)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramFailHandle", scope: !1704, file: !1441, line: 280, baseType: !1808, size: 32, offset: 2368)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "ReclaimBlock_post", scope: !1704, file: !1441, line: 281, baseType: !1808, size: 32, offset: 2400)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "IdleReclaimBlockID", scope: !1704, file: !1441, line: 283, baseType: !105, size: 32, offset: 2432)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "SelectReclaimTarget", scope: !1704, file: !1441, line: 284, baseType: !1817, size: 32, offset: 2464)
!1817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1818, size: 32)
!1818 = !DISubroutineType(types: !1819)
!1819 = !{!105, !1811}
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "ReclaimOneSector", scope: !1704, file: !1441, line: 285, baseType: !1821, size: 32, offset: 2496)
!1821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1822, size: 32)
!1822 = !DISubroutineType(types: !1823)
!1823 = !{!105, !1811, !105, !105}
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "EraseQueue", scope: !1704, file: !1441, line: 293, baseType: !1825, size: 32, offset: 2528)
!1825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1826, size: 32)
!1826 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_EraseInfo", file: !1441, line: 162, baseType: !1827)
!1827 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1441, line: 159, size: 64, elements: !1828)
!1828 = !{!1829, !1830}
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !1827, file: !1441, line: 160, baseType: !105, size: 32)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "EraseCount", scope: !1827, file: !1441, line: 161, baseType: !105, size: 32, offset: 32)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "processedBankAddr", scope: !1704, file: !1441, line: 295, baseType: !105, size: 32, offset: 2560)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "processedBlock", scope: !1704, file: !1441, line: 296, baseType: !105, size: 32, offset: 2592)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "processedEraseCount", scope: !1704, file: !1441, line: 297, baseType: !105, size: 32, offset: 2624)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "eraseItems", scope: !1704, file: !1441, line: 298, baseType: !1762, size: 16, offset: 2656)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "queueSize", scope: !1704, file: !1441, line: 302, baseType: !1762, size: 16, offset: 2672)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramFailRetry", scope: !1704, file: !1441, line: 310, baseType: !321, size: 8, offset: 2688)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "IsEraseSuspended", scope: !1704, file: !1441, line: 313, baseType: !321, size: 8, offset: 2696)
!1838 = !DIGlobalVariableExpression(var: !1839, expr: !DIExpression())
!1839 = distinct !DIGlobalVariable(name: "TOTAL_BLOCKS", scope: !1666, file: !1667, line: 129, type: !105, isLocal: false, isDefinition: true)
!1840 = !DIGlobalVariableExpression(var: !1841, expr: !DIExpression())
!1841 = distinct !DIGlobalVariable(name: "TOTAL_SECTORS", scope: !1666, file: !1667, line: 130, type: !105, isLocal: false, isDefinition: true)
!1842 = !DIGlobalVariableExpression(var: !1843, expr: !DIExpression())
!1843 = distinct !DIGlobalVariable(name: "NOR_LARGEST_BLOCK_SIZE", scope: !1666, file: !1667, line: 131, type: !105, isLocal: false, isDefinition: true)
!1844 = !DIGlobalVariableExpression(var: !1845, expr: !DIExpression())
!1845 = distinct !DIGlobalVariable(name: "PAGE_SIZE", scope: !1666, file: !1667, line: 132, type: !987, isLocal: true, isDefinition: true)
!1846 = !DIGlobalVariableExpression(var: !1847, expr: !DIExpression())
!1847 = distinct !DIGlobalVariable(name: "FDMBuffer", scope: !1666, file: !1667, line: 136, type: !1848, isLocal: false, isDefinition: true)
!1848 = !DICompositeType(tag: DW_TAG_array_type, baseType: !127, size: 4096, elements: !1849)
!1849 = !{!1850}
!1850 = !DISubrange(count: 512)
!1851 = !DIGlobalVariableExpression(var: !1852, expr: !DIExpression())
!1852 = distinct !DIGlobalVariable(name: "RegionInfo", scope: !1666, file: !1667, line: 146, type: !1853, isLocal: true, isDefinition: true)
!1853 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1683, size: 512, elements: !809)
!1854 = !DIGlobalVariableExpression(var: !1855, expr: !DIExpression())
!1855 = distinct !DIGlobalVariable(name: "BlockLayout", scope: !1666, file: !1667, line: 152, type: !1856, isLocal: true, isDefinition: true)
!1856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1857, size: 32)
!1857 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1858)
!1858 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBlockLayout", file: !1641, line: 116, baseType: !1859)
!1859 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1641, line: 113, size: 64, elements: !1860)
!1860 = !{!1861, !1862}
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "Offset", scope: !1859, file: !1641, line: 114, baseType: !105, size: 32)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "Size", scope: !1859, file: !1641, line: 115, baseType: !105, size: 32, offset: 32)
!1863 = !DIGlobalVariableExpression(var: !1864, expr: !DIExpression())
!1864 = distinct !DIGlobalVariable(name: "CS0_SIZE", scope: !1666, file: !1667, line: 156, type: !105, isLocal: false, isDefinition: true)
!1865 = !DIGlobalVariableExpression(var: !1866, expr: !DIExpression())
!1866 = distinct !DIGlobalVariable(name: "CS1_SIZE", scope: !1666, file: !1667, line: 157, type: !105, isLocal: false, isDefinition: true)
!1867 = !DIGlobalVariableExpression(var: !1868, expr: !DIExpression())
!1868 = distinct !DIGlobalVariable(name: "BankInfo", scope: !1666, file: !1667, line: 160, type: !1869, isLocal: true, isDefinition: true)
!1869 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1870, size: 512, elements: !809)
!1870 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !1441, line: 152, baseType: !1871)
!1871 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1441, line: 149, size: 64, elements: !1872)
!1872 = !{!1873, !1874}
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !1871, file: !1441, line: 150, baseType: !105, size: 32)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !1871, file: !1441, line: 151, baseType: !105, size: 32, offset: 32)
!1875 = !DIGlobalVariableExpression(var: !1876, expr: !DIExpression())
!1876 = distinct !DIGlobalVariable(name: "PAGE_BUFFER_SIZE", scope: !1666, file: !1667, line: 173, type: !105, isLocal: false, isDefinition: true)
!1877 = !DIGlobalVariableExpression(var: !1878, expr: !DIExpression())
!1878 = distinct !DIGlobalVariable(name: "NORFlashMtd", scope: !1666, file: !1667, line: 176, type: !1709, isLocal: false, isDefinition: true)
!1879 = !DIGlobalVariableExpression(var: !1880, expr: !DIExpression())
!1880 = distinct !DIGlobalVariable(name: "mtdflash", scope: !1666, file: !1667, line: 177, type: !1881, isLocal: false, isDefinition: true)
!1881 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_Data", file: !1339, line: 193, baseType: !1882)
!1882 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1339, line: 134, size: 1824, elements: !1883)
!1883 = !{!1884, !1885, !1886, !1892, !1898, !1899, !1900, !1901, !1903, !1904, !1905, !1906, !1913, !1914, !1944, !1945, !1946, !1947, !1948, !1949, !1950, !1951, !1952, !1953, !1954, !1955, !1956, !1957, !1958, !1959, !1960, !1961}
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !1882, file: !1339, line: 136, baseType: !105, size: 32)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !1882, file: !1339, line: 137, baseType: !818, size: 32, offset: 32)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !1882, file: !1339, line: 138, baseType: !1887, size: 32, offset: 64)
!1887 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !1423, line: 56, baseType: !1888)
!1888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1889, size: 32)
!1889 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1423, line: 54, size: 8, elements: !1890)
!1890 = !{!1891}
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1889, file: !1423, line: 55, baseType: !127, size: 8)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !1882, file: !1339, line: 139, baseType: !1893, size: 32, offset: 96)
!1893 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !1423, line: 46, baseType: !1894)
!1894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1895, size: 32)
!1895 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1423, line: 44, size: 8, elements: !1896)
!1896 = !{!1897}
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1895, file: !1423, line: 45, baseType: !127, size: 8)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !1882, file: !1339, line: 140, baseType: !1435, size: 8, offset: 128)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !1882, file: !1339, line: 143, baseType: !1682, size: 32, offset: 160)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !1882, file: !1339, line: 144, baseType: !818, size: 32, offset: 192)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !1882, file: !1339, line: 145, baseType: !1902, size: 32, offset: 224)
!1902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1870, size: 32)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !1882, file: !1339, line: 146, baseType: !818, size: 32, offset: 256)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !1882, file: !1339, line: 147, baseType: !105, size: 32, offset: 288)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !1882, file: !1339, line: 148, baseType: !818, size: 32, offset: 320)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !1882, file: !1339, line: 151, baseType: !1907, size: 1024, offset: 352)
!1907 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1908, size: 1024, elements: !1464)
!1908 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !1441, line: 170, baseType: !1909)
!1909 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1441, line: 167, size: 64, elements: !1910)
!1910 = !{!1911, !1912}
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !1909, file: !1441, line: 168, baseType: !105, size: 32)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !1909, file: !1441, line: 169, baseType: !105, size: 32, offset: 32)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "StatusMap", scope: !1882, file: !1339, line: 155, baseType: !1466, size: 32, offset: 1376)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "CMD", scope: !1882, file: !1339, line: 156, baseType: !1915, size: 32, offset: 1408)
!1915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1916, size: 32)
!1916 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_CMD", file: !1339, line: 124, baseType: !1917)
!1917 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1339, line: 90, size: 200, elements: !1918)
!1918 = !{!1919, !1920, !1921, !1922, !1923, !1924, !1925, !1926, !1927, !1928, !1929, !1930, !1931, !1932, !1933, !1934, !1935, !1936, !1937, !1938, !1939, !1940, !1941, !1942, !1943}
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "PageProg", scope: !1917, file: !1339, line: 91, baseType: !127, size: 8)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "WriteEnable", scope: !1917, file: !1339, line: 92, baseType: !127, size: 8, offset: 8)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "Suspend", scope: !1917, file: !1339, line: 94, baseType: !127, size: 8, offset: 16)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "Resume", scope: !1917, file: !1339, line: 95, baseType: !127, size: 8, offset: 24)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "Read", scope: !1917, file: !1339, line: 96, baseType: !127, size: 8, offset: 32)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "Erase", scope: !1917, file: !1339, line: 98, baseType: !127, size: 8, offset: 40)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "Erase4K", scope: !1917, file: !1339, line: 99, baseType: !127, size: 8, offset: 48)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "Erase32K", scope: !1917, file: !1339, line: 100, baseType: !127, size: 8, offset: 56)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "Erase64K", scope: !1917, file: !1339, line: 101, baseType: !127, size: 8, offset: 64)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_SPI", scope: !1917, file: !1339, line: 103, baseType: !127, size: 8, offset: 72)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_QPI", scope: !1917, file: !1339, line: 104, baseType: !127, size: 8, offset: 80)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "ReadBPReg", scope: !1917, file: !1339, line: 106, baseType: !127, size: 8, offset: 88)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "WriteBPReg", scope: !1917, file: !1339, line: 107, baseType: !127, size: 8, offset: 96)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSecurityReg", scope: !1917, file: !1339, line: 108, baseType: !127, size: 8, offset: 104)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "WriteSecurityReg", scope: !1917, file: !1339, line: 109, baseType: !127, size: 8, offset: 112)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSuspendReg", scope: !1917, file: !1339, line: 110, baseType: !127, size: 8, offset: 120)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "ReadReadyReg", scope: !1917, file: !1339, line: 111, baseType: !127, size: 8, offset: 128)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "ReadFailReg", scope: !1917, file: !1339, line: 112, baseType: !127, size: 8, offset: 136)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "EnterDPD", scope: !1917, file: !1339, line: 114, baseType: !127, size: 8, offset: 144)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "LeaveDPD", scope: !1917, file: !1339, line: 115, baseType: !127, size: 8, offset: 152)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "OTPProg", scope: !1917, file: !1339, line: 118, baseType: !127, size: 8, offset: 160)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !1917, file: !1339, line: 119, baseType: !127, size: 8, offset: 168)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "OTPEnter", scope: !1917, file: !1339, line: 120, baseType: !127, size: 8, offset: 176)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "OTPExit", scope: !1917, file: !1339, line: 121, baseType: !127, size: 8, offset: 184)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !1917, file: !1339, line: 122, baseType: !127, size: 8, offset: 192)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "Flag", scope: !1882, file: !1339, line: 157, baseType: !105, size: 32, offset: 1440)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "BPRBitCount", scope: !1882, file: !1339, line: 158, baseType: !987, size: 16, offset: 1472)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "UniformBlock", scope: !1882, file: !1339, line: 159, baseType: !987, size: 16, offset: 1488)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLength", scope: !1882, file: !1339, line: 163, baseType: !987, size: 16, offset: 1504)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "OTPBase", scope: !1882, file: !1339, line: 164, baseType: !987, size: 16, offset: 1520)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendLatency", scope: !1882, file: !1339, line: 167, baseType: !127, size: 8, offset: 1536)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "FlashID", scope: !1882, file: !1339, line: 168, baseType: !1505, size: 24, offset: 1544)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "DriverStatus", scope: !1882, file: !1339, line: 169, baseType: !127, size: 8, offset: 1568)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "AddressCycle", scope: !1882, file: !1339, line: 170, baseType: !127, size: 8, offset: 1576)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "CS", scope: !1882, file: !1339, line: 173, baseType: !987, size: 16, offset: 1584)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "sf_dal_fix", scope: !1882, file: !1339, line: 174, baseType: !105, size: 32, offset: 1600)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "CS_Size", scope: !1882, file: !1339, line: 175, baseType: !105, size: 32, offset: 1632)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_BUSY", scope: !1882, file: !1339, line: 178, baseType: !321, size: 8, offset: 1664)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_SUSPENDED", scope: !1882, file: !1339, line: 179, baseType: !321, size: 8, offset: 1672)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "UnlockBlock", scope: !1882, file: !1339, line: 182, baseType: !1516, size: 32, offset: 1696)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !1882, file: !1339, line: 186, baseType: !1516, size: 32, offset: 1728)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !1882, file: !1339, line: 187, baseType: !1521, size: 32, offset: 1760)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "OTPWrite", scope: !1882, file: !1339, line: 188, baseType: !1521, size: 32, offset: 1792)
!1962 = !DIGlobalVariableExpression(var: !1963, expr: !DIExpression())
!1963 = distinct !DIGlobalVariable(name: "StatusMap", scope: !1666, file: !1667, line: 178, type: !1964, isLocal: false, isDefinition: true)
!1964 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1467, size: 64, elements: !809)
!1965 = !DIGlobalVariableExpression(var: !1966, expr: !DIExpression())
!1966 = distinct !DIGlobalVariable(name: "sf_dal_data_cmd", scope: !1666, file: !1667, line: 179, type: !1916, isLocal: false, isDefinition: true)
!1967 = !DIGlobalVariableExpression(var: !1968, expr: !DIExpression())
!1968 = distinct !DIGlobalVariable(name: "EntireDiskRegionInfo", scope: !1666, file: !1667, line: 204, type: !1853, isLocal: true, isDefinition: true)
!1969 = !DIGlobalVariableExpression(var: !1970, expr: !DIExpression())
!1970 = distinct !DIGlobalVariable(name: "EntireDiskDriveData", scope: !1666, file: !1667, line: 205, type: !1971, isLocal: false, isDefinition: true)
!1971 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_FLASH_DISK_Data", file: !1972, line: 93, baseType: !1973)
!1972 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_disk_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/dac_output_data_repeatedly/GCC")
!1973 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1972, line: 83, size: 1056, elements: !1974)
!1974 = !{!1975, !1976, !1977, !1978, !1979}
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "DiskSize", scope: !1973, file: !1972, line: 84, baseType: !105, size: 32)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "MTDDriver", scope: !1973, file: !1972, line: 85, baseType: !1708, size: 32, offset: 32)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "MTDData", scope: !1973, file: !1972, line: 86, baseType: !124, size: 32, offset: 64)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "FlashInfo", scope: !1973, file: !1972, line: 87, baseType: !1765, size: 928, offset: 96)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "is_mount", scope: !1973, file: !1972, line: 92, baseType: !321, size: 8, offset: 1024)
!1980 = !DIGlobalVariableExpression(var: !1981, expr: !DIExpression())
!1981 = distinct !DIGlobalVariable(name: "EntireDiskMtdData", scope: !1666, file: !1667, line: 208, type: !1881, isLocal: false, isDefinition: true)
!1982 = !DIGlobalVariableExpression(var: !1983, expr: !DIExpression())
!1983 = distinct !DIGlobalVariable(name: "nor_list", scope: !1666, file: !1667, line: 114, type: !1984, isLocal: true, isDefinition: true)
!1984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1985, size: 32)
!1985 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1986)
!1986 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryNOR", file: !1641, line: 125, baseType: !1987)
!1987 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1641, line: 119, size: 1088, elements: !1988)
!1988 = !{!1989, !1990, !1991, !1992, !1994}
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "FDMType", scope: !1987, file: !1641, line: 120, baseType: !987, size: 16)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "PageBufferSize", scope: !1987, file: !1641, line: 121, baseType: !987, size: 16, offset: 16)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "UniformBlocks", scope: !1987, file: !1641, line: 122, baseType: !105, size: 32, offset: 32)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "BlockLayout", scope: !1987, file: !1641, line: 123, baseType: !1993, size: 512, offset: 64)
!1993 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1858, size: 512, elements: !809)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !1987, file: !1641, line: 124, baseType: !1869, size: 512, offset: 576)
!1995 = !DIGlobalVariableExpression(var: !1996, expr: !DIExpression())
!1996 = distinct !DIGlobalVariable(name: "combo_mem_sw_list", scope: !1666, file: !1997, line: 42, type: !1998, isLocal: true, isDefinition: true)
!1997 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_combo_config.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/dac_output_data_repeatedly/GCC")
!1998 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1999)
!1999 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_CMEM_NOR_INFO_v1", file: !1667, line: 66, baseType: !2000)
!2000 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1667, line: 63, size: 5600, elements: !2001)
!2001 = !{!2002, !2009}
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "m_gfh_hdr", scope: !2000, file: !1667, line: 64, baseType: !2003, size: 96)
!2003 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_Header", file: !1573, line: 152, baseType: !2004)
!2004 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GFH_Header", file: !1573, line: 144, size: 96, elements: !2005)
!2005 = !{!2006, !2007, !2008}
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "m_magic_ver", scope: !2004, file: !1573, line: 145, baseType: !1634, size: 32)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "m_size", scope: !2004, file: !1573, line: 146, baseType: !1636, size: 16, offset: 32)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "m_type", scope: !2004, file: !1573, line: 150, baseType: !1638, size: 32, offset: 64)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "m_data", scope: !2000, file: !1667, line: 65, baseType: !2010, size: 5504, offset: 96)
!2010 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryNORList", file: !1641, line: 132, baseType: !2011)
!2011 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1641, line: 128, size: 5504, elements: !2012)
!2012 = !{!2013, !2014, !2015}
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "m_ver", scope: !2011, file: !1641, line: 129, baseType: !15, size: 32)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "Count", scope: !2011, file: !1641, line: 130, baseType: !15, size: 32, offset: 32)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "List", scope: !2011, file: !1641, line: 131, baseType: !2016, size: 5440, offset: 64)
!2016 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1986, size: 5440, elements: !1089)
!2017 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_eventgrpid", file: !1423, line: 79, baseType: !2018)
!2018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2019, size: 32)
!2019 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1423, line: 77, size: 8, elements: !2020)
!2020 = !{!2021}
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !2019, file: !1423, line: 78, baseType: !127, size: 8)
!2022 = !DIGlobalVariableExpression(var: !2023, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 18446744073709551615, DW_OP_mul, DW_OP_constu, 1, DW_OP_plus, DW_OP_stack_value))
!2023 = distinct !DIGlobalVariable(name: "FDMMutex", scope: !2024, file: !2025, line: 82, type: !7, isLocal: true, isDefinition: true)
!2024 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2025, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2026, retainedTypes: !2032, globals: !2077, splitDebugInlining: false, nameTableKind: None)
!2025 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_disk.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/dac_output_data_repeatedly/GCC")
!2026 = !{!1363, !1247, !2027}
!2027 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1364, line: 123, baseType: !15, size: 32, elements: !2028)
!2028 = !{!2029, !2030, !2031}
!2029 = !DIEnumerator(name: "HAL_FLASH_BLOCK_4K", value: 0)
!2030 = !DIEnumerator(name: "HAL_FLASH_BLOCK_32K", value: 1)
!2031 = !DIEnumerator(name: "HAL_FLASH_BLOCK_64K", value: 2)
!2032 = !{!105, !2033, !124, !818}
!2033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2034, size: 32)
!2034 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_Flash_MTD_Data", file: !1441, line: 190, baseType: !2035)
!2035 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1441, line: 173, size: 1376, elements: !2036)
!2036 = !{!2037, !2038, !2039, !2045, !2051, !2052, !2059, !2060, !2067, !2068, !2069, !2070}
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !2035, file: !1441, line: 174, baseType: !105, size: 32)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !2035, file: !1441, line: 175, baseType: !1680, size: 32, offset: 32)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !2035, file: !1441, line: 176, baseType: !2040, size: 32, offset: 64)
!2040 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !1423, line: 56, baseType: !2041)
!2041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2042, size: 32)
!2042 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1423, line: 54, size: 8, elements: !2043)
!2043 = !{!2044}
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !2042, file: !1423, line: 55, baseType: !127, size: 8)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !2035, file: !1441, line: 177, baseType: !2046, size: 32, offset: 96)
!2046 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !1423, line: 46, baseType: !2047)
!2047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2048, size: 32)
!2048 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1423, line: 44, size: 8, elements: !2049)
!2049 = !{!2050}
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !2048, file: !1423, line: 45, baseType: !127, size: 8)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !2035, file: !1441, line: 178, baseType: !1435, size: 8, offset: 128)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !2035, file: !1441, line: 180, baseType: !2053, size: 32, offset: 160)
!2053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2054, size: 32)
!2054 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !1441, line: 146, baseType: !2055)
!2055 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1441, line: 143, size: 64, elements: !2056)
!2056 = !{!2057, !2058}
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !2055, file: !1441, line: 144, baseType: !105, size: 32)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !2055, file: !1441, line: 145, baseType: !105, size: 32, offset: 32)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !2035, file: !1441, line: 181, baseType: !1680, size: 32, offset: 192)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !2035, file: !1441, line: 182, baseType: !2061, size: 32, offset: 224)
!2061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2062, size: 32)
!2062 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !1441, line: 152, baseType: !2063)
!2063 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1441, line: 149, size: 64, elements: !2064)
!2064 = !{!2065, !2066}
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !2063, file: !1441, line: 150, baseType: !105, size: 32)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !2063, file: !1441, line: 151, baseType: !105, size: 32, offset: 32)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !2035, file: !1441, line: 183, baseType: !1680, size: 32, offset: 256)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !2035, file: !1441, line: 184, baseType: !105, size: 32, offset: 288)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !2035, file: !1441, line: 185, baseType: !1680, size: 32, offset: 320)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !2035, file: !1441, line: 188, baseType: !2071, size: 1024, offset: 352)
!2071 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2072, size: 1024, elements: !1464)
!2072 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !1441, line: 170, baseType: !2073)
!2073 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1441, line: 167, size: 64, elements: !2074)
!2074 = !{!2075, !2076}
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !2073, file: !1441, line: 168, baseType: !105, size: 32)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !2073, file: !1441, line: 169, baseType: !105, size: 32, offset: 32)
!2077 = !{!2078, !2079}
!2078 = !DIGlobalVariableExpression(var: !2023, expr: !DIExpression())
!2079 = !DIGlobalVariableExpression(var: !2080, expr: !DIExpression())
!2080 = distinct !DIGlobalVariable(name: "flash_init_status", scope: !2024, file: !2025, line: 432, type: !2081, isLocal: true, isDefinition: true)
!2081 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_flash_status_t", file: !1364, line: 119, baseType: !1363)
!2082 = !DIGlobalVariableExpression(var: !2080, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 18446744069414584325, DW_OP_mul, DW_OP_constu, 4294967291, DW_OP_plus, DW_OP_stack_value))
!2083 = !DIGlobalVariableExpression(var: !2084, expr: !DIExpression())
!2084 = distinct !DIGlobalVariable(name: "gNOR_ReturnReadyBegin", scope: !2085, file: !2086, line: 60, type: !105, isLocal: false, isDefinition: true)
!2085 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2086, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2087, retainedTypes: !2088, globals: !2089, splitDebugInlining: false, nameTableKind: None)
!2086 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_mtd.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/dac_output_data_repeatedly/GCC")
!2087 = !{!135}
!2088 = !{!124, !105}
!2089 = !{!2083, !2090, !2092, !2094, !2096, !2098, !2152, !2154}
!2090 = !DIGlobalVariableExpression(var: !2091, expr: !DIExpression())
!2091 = distinct !DIGlobalVariable(name: "gNOR_ReturnReadyEnd", scope: !2085, file: !2086, line: 61, type: !105, isLocal: false, isDefinition: true)
!2092 = !DIGlobalVariableExpression(var: !2093, expr: !DIExpression())
!2093 = distinct !DIGlobalVariable(name: "NOR_Flash_Base_Address", scope: !2085, file: !2086, line: 107, type: !105, isLocal: false, isDefinition: true)
!2094 = !DIGlobalVariableExpression(var: !2095, expr: !DIExpression())
!2095 = distinct !DIGlobalVariable(name: "NOR_FLASH_BUSY", scope: !2085, file: !2086, line: 132, type: !321, isLocal: false, isDefinition: true)
!2096 = !DIGlobalVariableExpression(var: !2097, expr: !DIExpression())
!2097 = distinct !DIGlobalVariable(name: "NOR_FLASH_SUSPENDED", scope: !2085, file: !2086, line: 133, type: !321, isLocal: false, isDefinition: true)
!2098 = !DIGlobalVariableExpression(var: !2099, expr: !DIExpression())
!2099 = distinct !DIGlobalVariable(name: "replaced", scope: !2100, file: !2086, line: 139, type: !105, isLocal: true, isDefinition: true)
!2100 = distinct !DISubprogram(name: "LookupAddress", scope: !2086, file: !2086, line: 135, type: !2101, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2085, retainedNodes: !2103)
!2101 = !DISubroutineType(types: !2102)
!2102 = !{!105, !124, !105}
!2103 = !{!2104, !2105, !2106, !2151}
!2104 = !DILocalVariable(name: "DriveData", arg: 1, scope: !2100, file: !2086, line: 135, type: !124)
!2105 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !2100, file: !2086, line: 135, type: !105)
!2106 = !DILocalVariable(name: "D", scope: !2100, file: !2086, line: 137, type: !2107)
!2107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2108, size: 32)
!2108 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_Flash_MTD_Data", file: !1441, line: 190, baseType: !2109)
!2109 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1441, line: 173, size: 1376, elements: !2110)
!2110 = !{!2111, !2112, !2113, !2119, !2125, !2126, !2133, !2134, !2141, !2142, !2143, !2144}
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !2109, file: !1441, line: 174, baseType: !105, size: 32)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !2109, file: !1441, line: 175, baseType: !1680, size: 32, offset: 32)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !2109, file: !1441, line: 176, baseType: !2114, size: 32, offset: 64)
!2114 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !1423, line: 56, baseType: !2115)
!2115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2116, size: 32)
!2116 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1423, line: 54, size: 8, elements: !2117)
!2117 = !{!2118}
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !2116, file: !1423, line: 55, baseType: !127, size: 8)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !2109, file: !1441, line: 177, baseType: !2120, size: 32, offset: 96)
!2120 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !1423, line: 46, baseType: !2121)
!2121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2122, size: 32)
!2122 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1423, line: 44, size: 8, elements: !2123)
!2123 = !{!2124}
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !2122, file: !1423, line: 45, baseType: !127, size: 8)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !2109, file: !1441, line: 178, baseType: !1435, size: 8, offset: 128)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !2109, file: !1441, line: 180, baseType: !2127, size: 32, offset: 160)
!2127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2128, size: 32)
!2128 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !1441, line: 146, baseType: !2129)
!2129 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1441, line: 143, size: 64, elements: !2130)
!2130 = !{!2131, !2132}
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !2129, file: !1441, line: 144, baseType: !105, size: 32)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !2129, file: !1441, line: 145, baseType: !105, size: 32, offset: 32)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !2109, file: !1441, line: 181, baseType: !1680, size: 32, offset: 192)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !2109, file: !1441, line: 182, baseType: !2135, size: 32, offset: 224)
!2135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2136, size: 32)
!2136 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !1441, line: 152, baseType: !2137)
!2137 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1441, line: 149, size: 64, elements: !2138)
!2138 = !{!2139, !2140}
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !2137, file: !1441, line: 150, baseType: !105, size: 32)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !2137, file: !1441, line: 151, baseType: !105, size: 32, offset: 32)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !2109, file: !1441, line: 183, baseType: !1680, size: 32, offset: 256)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !2109, file: !1441, line: 184, baseType: !105, size: 32, offset: 288)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !2109, file: !1441, line: 185, baseType: !1680, size: 32, offset: 320)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !2109, file: !1441, line: 188, baseType: !2145, size: 1024, offset: 352)
!2145 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2146, size: 1024, elements: !1464)
!2146 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !1441, line: 170, baseType: !2147)
!2147 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1441, line: 167, size: 64, elements: !2148)
!2148 = !{!2149, !2150}
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !2147, file: !1441, line: 168, baseType: !105, size: 32)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !2147, file: !1441, line: 169, baseType: !105, size: 32, offset: 32)
!2151 = !DILocalVariable(name: "addr", scope: !2100, file: !2086, line: 138, type: !105)
!2152 = !DIGlobalVariableExpression(var: !2153, expr: !DIExpression())
!2153 = distinct !DIGlobalVariable(name: "look_up_hit", scope: !2100, file: !2086, line: 140, type: !105, isLocal: true, isDefinition: true)
!2154 = !DIGlobalVariableExpression(var: !2155, expr: !DIExpression())
!2155 = distinct !DIGlobalVariable(name: "look_up_miss", scope: !2100, file: !2086, line: 141, type: !105, isLocal: true, isDefinition: true)
!2156 = !DIGlobalVariableExpression(var: !2157, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!2157 = distinct !DIGlobalVariable(name: "init", scope: !2158, file: !2159, line: 94, type: !129, isLocal: true, isDefinition: true)
!2158 = distinct !DISubprogram(name: "pmu_init_mt6385", scope: !2159, file: !2159, line: 92, type: !318, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !2350)
!2159 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_pmu.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/dac_output_data_repeatedly/GCC")
!2160 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2159, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2161, retainedTypes: !2313, globals: !2318, splitDebugInlining: false, nameTableKind: None)
!2161 = !{!2162, !2167, !2172, !2176, !2184, !2219, !2224, !2230, !2265, !2271, !2288, !2298, !2304, !2309}
!2162 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2163, line: 58, baseType: !15, size: 32, elements: !2164)
!2163 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_i2c_pmic.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/dac_output_data_repeatedly/GCC")
!2164 = !{!2165, !2166}
!2165 = !DIEnumerator(name: "PMIC_I2C_MASTER", value: 0)
!2166 = !DIEnumerator(name: "PMIC_I2C_MASTER_MAX", value: 1)
!2167 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2168, line: 118, baseType: !15, size: 32, elements: !2169)
!2168 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_pmu_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/dac_output_data_repeatedly/GCC")
!2169 = !{!2170, !2171}
!2170 = !DIEnumerator(name: "PMIC_UNLOCK_KEY", value: 0)
!2171 = !DIEnumerator(name: "PMIC_LOCK_KEY", value: 1)
!2172 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2168, line: 113, baseType: !15, size: 32, elements: !2173)
!2173 = !{!2174, !2175}
!2174 = !DIEnumerator(name: "PMIC_LEAVE_OVR_MODE", value: 0)
!2175 = !DIEnumerator(name: "PMIC_ENTER_OVR_MODE", value: 1)
!2176 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2177, line: 194, baseType: !15, size: 32, elements: !2178)
!2177 = !DIFile(filename: "../../../../../driver/chip/inc/hal_eint.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/dac_output_data_repeatedly/GCC")
!2178 = !{!2179, !2180, !2181, !2182, !2183}
!2179 = !DIEnumerator(name: "HAL_EINT_LEVEL_LOW", value: 0)
!2180 = !DIEnumerator(name: "HAL_EINT_LEVEL_HIGH", value: 1)
!2181 = !DIEnumerator(name: "HAL_EINT_EDGE_FALLING", value: 2)
!2182 = !DIEnumerator(name: "HAL_EINT_EDGE_RISING", value: 3)
!2183 = !DIEnumerator(name: "HAL_EINT_EDGE_FALLING_AND_RISING", value: 4)
!2184 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !35, line: 787, baseType: !15, size: 32, elements: !2185)
!2185 = !{!2186, !2187, !2188, !2189, !2190, !2191, !2192, !2193, !2194, !2195, !2196, !2197, !2198, !2199, !2200, !2201, !2202, !2203, !2204, !2205, !2206, !2207, !2208, !2209, !2210, !2211, !2212, !2213, !2214, !2215, !2216, !2217, !2218}
!2186 = !DIEnumerator(name: "HAL_EINT_NUMBER_0", value: 0)
!2187 = !DIEnumerator(name: "HAL_EINT_NUMBER_1", value: 1)
!2188 = !DIEnumerator(name: "HAL_EINT_NUMBER_2", value: 2)
!2189 = !DIEnumerator(name: "HAL_EINT_NUMBER_3", value: 3)
!2190 = !DIEnumerator(name: "HAL_EINT_NUMBER_4", value: 4)
!2191 = !DIEnumerator(name: "HAL_EINT_NUMBER_5", value: 5)
!2192 = !DIEnumerator(name: "HAL_EINT_NUMBER_6", value: 6)
!2193 = !DIEnumerator(name: "HAL_EINT_NUMBER_7", value: 7)
!2194 = !DIEnumerator(name: "HAL_EINT_NUMBER_8", value: 8)
!2195 = !DIEnumerator(name: "HAL_EINT_NUMBER_9", value: 9)
!2196 = !DIEnumerator(name: "HAL_EINT_NUMBER_10", value: 10)
!2197 = !DIEnumerator(name: "HAL_EINT_NUMBER_11", value: 11)
!2198 = !DIEnumerator(name: "HAL_EINT_NUMBER_12", value: 12)
!2199 = !DIEnumerator(name: "HAL_EINT_NUMBER_13", value: 13)
!2200 = !DIEnumerator(name: "HAL_EINT_NUMBER_14", value: 14)
!2201 = !DIEnumerator(name: "HAL_EINT_NUMBER_15", value: 15)
!2202 = !DIEnumerator(name: "HAL_EINT_NUMBER_16", value: 16)
!2203 = !DIEnumerator(name: "HAL_EINT_NUMBER_17", value: 17)
!2204 = !DIEnumerator(name: "HAL_EINT_NUMBER_18", value: 18)
!2205 = !DIEnumerator(name: "HAL_EINT_NUMBER_19", value: 19)
!2206 = !DIEnumerator(name: "HAL_EINT_KEYPAD", value: 20)
!2207 = !DIEnumerator(name: "HAL_EINT_UART_0_RX", value: 21)
!2208 = !DIEnumerator(name: "HAL_EINT_UART_1_RX", value: 22)
!2209 = !DIEnumerator(name: "HAL_EINT_UART_2_RX", value: 23)
!2210 = !DIEnumerator(name: "HAL_EINT_UART_3_RX", value: 24)
!2211 = !DIEnumerator(name: "HAL_EINT_BTSYS", value: 25)
!2212 = !DIEnumerator(name: "HAL_EINT_BTSYS_BTIF", value: 26)
!2213 = !DIEnumerator(name: "HAL_EINT_USB", value: 27)
!2214 = !DIEnumerator(name: "HAL_EINT_ACCDET", value: 28)
!2215 = !DIEnumerator(name: "HAL_EINT_RTC", value: 29)
!2216 = !DIEnumerator(name: "HAL_EINT_PMIC", value: 30)
!2217 = !DIEnumerator(name: "HAL_EINT_GPCOUNTER", value: 31)
!2218 = !DIEnumerator(name: "HAL_EINT_NUMBER_MAX", value: 32)
!2219 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2220, line: 52, baseType: !15, size: 32, elements: !2221)
!2220 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_pmu.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/dac_output_data_repeatedly/GCC")
!2221 = !{!2222, !2223}
!2222 = !DIEnumerator(name: "PMU_NOT_INIT", value: 0)
!2223 = !DIEnumerator(name: "PMU_INIT", value: 1)
!2224 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2220, line: 94, baseType: !7, size: 32, elements: !2225)
!2225 = !{!2226, !2227, !2228, !2229}
!2226 = !DIEnumerator(name: "PMU_STATUS_ERROR_EINT_NUMBER", value: -3)
!2227 = !DIEnumerator(name: "PMU_STATUS_INVALID_PARAMETER", value: -2)
!2228 = !DIEnumerator(name: "PMU_STATUS_ERROR", value: -1)
!2229 = !DIEnumerator(name: "PMU_STATUS_SUCCESS", value: 0)
!2230 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2220, line: 57, baseType: !15, size: 32, elements: !2231)
!2231 = !{!2232, !2233, !2234, !2235, !2236, !2237, !2238, !2239, !2240, !2241, !2242, !2243, !2244, !2245, !2246, !2247, !2248, !2249, !2250, !2251, !2252, !2253, !2254, !2255, !2256, !2257, !2258, !2259, !2260, !2261, !2262, !2263, !2264}
!2232 = !DIEnumerator(name: "PMU_INT_ALDO_OC", value: 0)
!2233 = !DIEnumerator(name: "PMU_INT_ALDO_PG", value: 1)
!2234 = !DIEnumerator(name: "PMU_INT_DLDO_OC", value: 2)
!2235 = !DIEnumerator(name: "PMU_INT_DLDO_PG", value: 3)
!2236 = !DIEnumerator(name: "PMU_INT_VC_BUCK_OC", value: 4)
!2237 = !DIEnumerator(name: "PMU_INT_VCORE_PG", value: 5)
!2238 = !DIEnumerator(name: "PMU_INT_VC_LDO_OC", value: 6)
!2239 = !DIEnumerator(name: "PMU_INT_PKEYLP", value: 7)
!2240 = !DIEnumerator(name: "PMU_INT_THM1", value: 8)
!2241 = !DIEnumerator(name: "PMU_INT_THM2", value: 9)
!2242 = !DIEnumerator(name: "PMU_INT_AXPKEY", value: 10)
!2243 = !DIEnumerator(name: "PMU_INT_PWRKEY", value: 11)
!2244 = !DIEnumerator(name: "PMU_INT_CHGOV", value: 12)
!2245 = !DIEnumerator(name: "PMU_INT_CHRDET", value: 13)
!2246 = !DIEnumerator(name: "PMU_INT_THR_H", value: 14)
!2247 = !DIEnumerator(name: "PMU_INT_THR_L", value: 15)
!2248 = !DIEnumerator(name: "PMU_INT_OVER110", value: 16)
!2249 = !DIEnumerator(name: "PMU_INT_OVER40", value: 17)
!2250 = !DIEnumerator(name: "PMU_INT_PSW_PG", value: 18)
!2251 = !DIEnumerator(name: "PMU_INT_BAT_H", value: 19)
!2252 = !DIEnumerator(name: "PMU_INT_BAT_L", value: 20)
!2253 = !DIEnumerator(name: "PMU_INT_VBATON_HV_LV", value: 21)
!2254 = !DIEnumerator(name: "PMU_INT_VBAT_UNDET_LV", value: 22)
!2255 = !DIEnumerator(name: "PMU_INT_BVALID_DET_LV", value: 23)
!2256 = !DIEnumerator(name: "PMU_INT_CHRWDT_LV", value: 24)
!2257 = !DIEnumerator(name: "PMU_INT_HOT_LV", value: 25)
!2258 = !DIEnumerator(name: "PMU_INT_WARM_LV", value: 26)
!2259 = !DIEnumerator(name: "PMU_INT_COOL_LV", value: 27)
!2260 = !DIEnumerator(name: "PMU_INT_COLD_LV", value: 28)
!2261 = !DIEnumerator(name: "PMU_INT_IMP_LV", value: 29)
!2262 = !DIEnumerator(name: "PMU_INT_NAG_C_LV", value: 30)
!2263 = !DIEnumerator(name: "PMU_INT_AD_LBAT_LV", value: 31)
!2264 = !DIEnumerator(name: "PMU_INT_MAX", value: 32)
!2265 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2220, line: 45, baseType: !15, size: 32, elements: !2266)
!2266 = !{!2267, !2268, !2269, !2270}
!2267 = !DIEnumerator(name: "PMU_NONE", value: 0)
!2268 = !DIEnumerator(name: "PMU_EDGE_RISING", value: 1)
!2269 = !DIEnumerator(name: "PMU_EDGE_FALLING", value: 2)
!2270 = !DIEnumerator(name: "PMU_EDGE_FALLING_AND_RISING", value: 3)
!2271 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2168, line: 44, baseType: !15, size: 32, elements: !2272)
!2272 = !{!2273, !2274, !2275, !2276, !2277, !2278, !2279, !2280, !2281, !2282, !2283, !2284, !2285, !2286, !2287}
!2273 = !DIEnumerator(name: "PMIC_VCLDO", value: 0)
!2274 = !DIEnumerator(name: "PMIC_VIO18", value: 1)
!2275 = !DIEnumerator(name: "PMIC_VSF", value: 2)
!2276 = !DIEnumerator(name: "PMIC_VIO28", value: 3)
!2277 = !DIEnumerator(name: "PMIC_VDIG18", value: 4)
!2278 = !DIEnumerator(name: "PMIC_VA18", value: 5)
!2279 = !DIEnumerator(name: "PMIC_VUSB", value: 6)
!2280 = !DIEnumerator(name: "PMIC_VBT", value: 7)
!2281 = !DIEnumerator(name: "PMIC_VA28", value: 8)
!2282 = !DIEnumerator(name: "PMIC_VMC", value: 9)
!2283 = !DIEnumerator(name: "PMIC_VCAMA", value: 10)
!2284 = !DIEnumerator(name: "PMIC_VIBR", value: 11)
!2285 = !DIEnumerator(name: "PMIC_SWXM", value: 12)
!2286 = !DIEnumerator(name: "PMIC_SWDP", value: 13)
!2287 = !DIEnumerator(name: "PMIC_SWMP", value: 14)
!2288 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2168, line: 62, baseType: !15, size: 32, elements: !2289)
!2289 = !{!2290, !2291, !2292, !2293, !2294, !2295, !2296, !2297}
!2290 = !DIEnumerator(name: "PMIC_PSI_OVR", value: 0)
!2291 = !DIEnumerator(name: "PMIC_PSI_HP", value: 1)
!2292 = !DIEnumerator(name: "PMIC_PSI_LP", value: 2)
!2293 = !DIEnumerator(name: "PMIC_PSI_S0", value: 3)
!2294 = !DIEnumerator(name: "PMIC_PSI_S1", value: 4)
!2295 = !DIEnumerator(name: "PMIC_PSI_OFF", value: 5)
!2296 = !DIEnumerator(name: "PMIC_PSI_SLP", value: 6)
!2297 = !DIEnumerator(name: "PMIC_PSI_ACT", value: 7)
!2298 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2168, line: 73, baseType: !15, size: 32, elements: !2299)
!2299 = !{!2300, !2301, !2302, !2303}
!2300 = !DIEnumerator(name: "PMIC_LDO_PMOD_NORMAL", value: 0)
!2301 = !DIEnumerator(name: "PMIC_LDO_PMOD_LITE", value: 1)
!2302 = !DIEnumerator(name: "PMIC_LDO_PMOD_LP", value: 2)
!2303 = !DIEnumerator(name: "PMIC_LDO_PMOD_ULP", value: 3)
!2304 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2168, line: 80, baseType: !15, size: 32, elements: !2305)
!2305 = !{!2306, !2307, !2308}
!2306 = !DIEnumerator(name: "PMIC_SLP_WKUP_HW_CTL", value: 0)
!2307 = !DIEnumerator(name: "PMIC_SLP_WKUP_SW_CTL", value: 1)
!2308 = !DIEnumerator(name: "PMIC_SLP_WKUP_AON", value: 2)
!2309 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2168, line: 86, baseType: !15, size: 32, elements: !2310)
!2310 = !{!2311, !2312}
!2311 = !DIEnumerator(name: "PMIC_VR_CTL_DISABLE", value: 0)
!2312 = !DIEnumerator(name: "PMIC_VR_CTL_ENABLE", value: 1)
!2313 = !{!124, !129, !2314, !2315, !2316, !7, !2317}
!2314 = !DIDerivedType(tag: DW_TAG_typedef, name: "PMIC_PSI", file: !2168, line: 71, baseType: !2288)
!2315 = !DIDerivedType(tag: DW_TAG_typedef, name: "PMIC_LDO_PMOD", file: !2168, line: 78, baseType: !2298)
!2316 = !DIDerivedType(tag: DW_TAG_typedef, name: "PMIC_SLP_WKUP_MODE", file: !2168, line: 84, baseType: !2304)
!2317 = !DIDerivedType(tag: DW_TAG_typedef, name: "PMIC_VR_CTL", file: !2168, line: 89, baseType: !2309)
!2318 = !{!2319, !2320, !2326, !2329, !2331, !2344, !2348}
!2319 = !DIGlobalVariableExpression(var: !2157, expr: !DIExpression())
!2320 = !DIGlobalVariableExpression(var: !2321, expr: !DIExpression())
!2321 = distinct !DIGlobalVariable(name: "index", scope: !2322, file: !2159, line: 293, type: !15, isLocal: true, isDefinition: true)
!2322 = distinct !DISubprogram(name: "pmu_eint_handler", scope: !2159, file: !2159, line: 291, type: !190, scopeLine: 292, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !2323)
!2323 = !{!2324, !2325}
!2324 = !DILocalVariable(name: "parameter", arg: 1, scope: !2322, file: !2159, line: 291, type: !124)
!2325 = !DILocalVariable(name: "mask", scope: !2322, file: !2159, line: 295, type: !15)
!2326 = !DIGlobalVariableExpression(var: !2327, expr: !DIExpression())
!2327 = distinct !DIGlobalVariable(name: "int_sts", scope: !2322, file: !2159, line: 294, type: !2328, isLocal: true, isDefinition: true)
!2328 = !DICompositeType(tag: DW_TAG_array_type, baseType: !15, size: 224, elements: !622)
!2329 = !DIGlobalVariableExpression(var: !2330, expr: !DIExpression())
!2330 = distinct !DIGlobalVariable(name: "trigger_staus", scope: !2322, file: !2159, line: 294, type: !15, isLocal: true, isDefinition: true)
!2331 = !DIGlobalVariableExpression(var: !2332, expr: !DIExpression())
!2332 = distinct !DIGlobalVariable(name: "pmu_function_table", scope: !2160, file: !2159, line: 90, type: !2333, isLocal: false, isDefinition: true)
!2333 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2334, size: 3072, elements: !352)
!2334 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmu_function_t", file: !2220, line: 106, baseType: !2335)
!2335 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2220, line: 101, size: 96, elements: !2336)
!2336 = !{!2337, !2341, !2342, !2343}
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "pmu_callback", scope: !2335, file: !2220, line: 102, baseType: !2338, size: 32)
!2338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2339, size: 32)
!2339 = !DISubroutineType(types: !2340)
!2340 = !{null, !127, !124}
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !2335, file: !2220, line: 103, baseType: !124, size: 32, offset: 32)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "trigger_mode", scope: !2335, file: !2220, line: 104, baseType: !127, size: 8, offset: 64)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "init_status", scope: !2335, file: !2220, line: 105, baseType: !321, size: 8, offset: 72)
!2344 = !DIGlobalVariableExpression(var: !2345, expr: !DIExpression())
!2345 = distinct !DIGlobalVariable(name: "pmu_power_mode_init_setting_E1", scope: !2160, file: !2159, line: 59, type: !2346, isLocal: true, isDefinition: true)
!2346 = !DICompositeType(tag: DW_TAG_array_type, baseType: !129, size: 640, elements: !2347)
!2347 = !{!121, !810}
!2348 = !DIGlobalVariableExpression(var: !2349, expr: !DIExpression())
!2349 = distinct !DIGlobalVariable(name: "pmu_power_mode_init_setting_E2", scope: !2160, file: !2159, line: 72, type: !2346, isLocal: true, isDefinition: true)
!2350 = !{!2351, !2352, !2353}
!2351 = !DILocalVariable(name: "id_l", scope: !2158, file: !2159, line: 95, type: !127)
!2352 = !DILocalVariable(name: "id_h", scope: !2158, file: !2159, line: 95, type: !127)
!2353 = !DILocalVariable(name: "config", scope: !2158, file: !2159, line: 96, type: !2354)
!2354 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmic_i2c_config_t", file: !2163, line: 92, baseType: !2355)
!2355 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2163, line: 90, size: 32, elements: !2356)
!2356 = !{!2357}
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_frequency", scope: !2355, file: !2163, line: 91, baseType: !105, size: 32)
!2358 = !DIGlobalVariableExpression(var: !2359, expr: !DIExpression())
!2359 = distinct !DIGlobalVariable(name: "pmu_mtcmos_ldo_ctrl", scope: !2360, file: !2361, line: 54, type: !989, isLocal: false, isDefinition: true)
!2360 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2361, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2362, retainedTypes: !2387, globals: !2389, splitDebugInlining: false, nameTableKind: None)
!2361 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_pmu_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/dac_output_data_repeatedly/GCC")
!2362 = !{!2271, !2288, !2298, !2167, !2172, !2304, !2309, !2363, !2373, !2383}
!2363 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2168, line: 91, baseType: !15, size: 32, elements: !2364)
!2364 = !{!2365, !2366, !2367, !2368, !2369, !2370, !2371, !2372}
!2365 = !DIEnumerator(name: "PMIC_VCORE_0P7V", value: 0)
!2366 = !DIEnumerator(name: "PMIC_VCORE_0P8V", value: 1)
!2367 = !DIEnumerator(name: "PMIC_VCORE_0P9V", value: 2)
!2368 = !DIEnumerator(name: "PMIC_VCORE_1P0V", value: 3)
!2369 = !DIEnumerator(name: "PMIC_VCORE_1P1V", value: 4)
!2370 = !DIEnumerator(name: "PMIC_VCORE_1P2V", value: 5)
!2371 = !DIEnumerator(name: "PMIC_VCORE_1P3V", value: 6)
!2372 = !DIEnumerator(name: "PMIC_VCORE_ERROR", value: 255)
!2373 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2168, line: 102, baseType: !15, size: 32, elements: !2374)
!2374 = !{!2375, !2376, !2377, !2378, !2379, !2380, !2381, !2382}
!2375 = !DIEnumerator(name: "PMIC_LDO_1P3V", value: 0)
!2376 = !DIEnumerator(name: "PMIC_LDO_1P5V", value: 1)
!2377 = !DIEnumerator(name: "PMIC_LDO_1P8V", value: 2)
!2378 = !DIEnumerator(name: "PMIC_LDO_2P0V", value: 3)
!2379 = !DIEnumerator(name: "PMIC_LDO_2P5V", value: 4)
!2380 = !DIEnumerator(name: "PMIC_LDO_2P8V", value: 5)
!2381 = !DIEnumerator(name: "PMIC_LDO_3P0V", value: 6)
!2382 = !DIEnumerator(name: "PMIC_LDO_3P3V", value: 7)
!2383 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !14, line: 106, baseType: !15, size: 32, elements: !2384)
!2384 = !{!2385, !2386}
!2385 = !DIEnumerator(name: "PMIC_VCORE_UNLOCK", value: 0)
!2386 = !DIEnumerator(name: "PMIC_VCORE_LOCK", value: 1)
!2387 = !{!2388, !1220}
!2388 = !DIDerivedType(tag: DW_TAG_typedef, name: "PMIC_VCORE_VOSEL", file: !2168, line: 100, baseType: !2363)
!2389 = !{!2358, !2390, !2392, !2394, !2397, !2399, !2406, !2408, !2418, !2420, !2422, !2424, !2426, !2432}
!2390 = !DIGlobalVariableExpression(var: !2391, expr: !DIExpression())
!2391 = distinct !DIGlobalVariable(name: "pmu_mtcmos_ldo_en", scope: !2360, file: !2361, line: 55, type: !989, isLocal: false, isDefinition: true)
!2392 = !DIGlobalVariableExpression(var: !2393, expr: !DIExpression())
!2393 = distinct !DIGlobalVariable(name: "pmu_mtcmos_vio28_pmod", scope: !2360, file: !2361, line: 56, type: !989, isLocal: false, isDefinition: true)
!2394 = !DIGlobalVariableExpression(var: !2395, expr: !DIExpression())
!2395 = distinct !DIGlobalVariable(name: "local_flag", scope: !2396, file: !2361, line: 887, type: !989, isLocal: true, isDefinition: true)
!2396 = distinct !DISubprogram(name: "pmu_control_mtcmos_mt6385", scope: !2361, file: !2361, line: 885, type: !318, scopeLine: 886, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2360, retainedNodes: !320)
!2397 = !DIGlobalVariableExpression(var: !2398, expr: !DIExpression())
!2398 = distinct !DIGlobalVariable(name: "mtcmos_flag", scope: !2396, file: !2361, line: 887, type: !989, isLocal: true, isDefinition: true)
!2399 = !DIGlobalVariableExpression(var: !2400, expr: !DIExpression())
!2400 = distinct !DIGlobalVariable(name: "resoure_count", scope: !2401, file: !2361, line: 908, type: !15, isLocal: true, isDefinition: true)
!2401 = distinct !DISubprogram(name: "pmu_ctrl_va28_ldo_mt6385", scope: !2361, file: !2361, line: 906, type: !2402, scopeLine: 907, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2360, retainedNodes: !2404)
!2402 = !DISubroutineType(types: !2403)
!2403 = !{null, !129}
!2404 = !{!2405}
!2405 = !DILocalVariable(name: "enable", arg: 1, scope: !2401, file: !2361, line: 906, type: !129)
!2406 = !DIGlobalVariableExpression(var: !2407, expr: !DIExpression())
!2407 = distinct !DIGlobalVariable(name: "version", scope: !2401, file: !2361, line: 909, type: !129, isLocal: true, isDefinition: true)
!2408 = !DIGlobalVariableExpression(var: !2409, expr: !DIExpression())
!2409 = distinct !DIGlobalVariable(name: "Vcore_Resource_Ctrl", scope: !2410, file: !2361, line: 979, type: !2417, isLocal: true, isDefinition: true)
!2410 = distinct !DISubprogram(name: "pmu_set_vcore_voltage_mt6385", scope: !2361, file: !2361, line: 977, type: !2411, scopeLine: 978, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2360, retainedNodes: !2413)
!2411 = !DISubroutineType(types: !2412)
!2412 = !{!129, !129, !129}
!2413 = !{!2414, !2415, !2416}
!2414 = !DILocalVariable(name: "lock", arg: 1, scope: !2410, file: !2361, line: 977, type: !129)
!2415 = !DILocalVariable(name: "vcore_vosel", arg: 2, scope: !2410, file: !2361, line: 977, type: !129)
!2416 = !DILocalVariable(name: "vol_index", scope: !2410, file: !2361, line: 980, type: !7)
!2417 = !DICompositeType(tag: DW_TAG_array_type, baseType: !129, size: 56, elements: !622)
!2418 = !DIGlobalVariableExpression(var: !2419, expr: !DIExpression())
!2419 = distinct !DIGlobalVariable(name: "origin_voltage", scope: !2410, file: !2361, line: 979, type: !129, isLocal: true, isDefinition: true)
!2420 = !DIGlobalVariableExpression(var: !2421, expr: !DIExpression())
!2421 = distinct !DIGlobalVariable(name: "old_vcore", scope: !2410, file: !2361, line: 979, type: !129, isLocal: true, isDefinition: true)
!2422 = !DIGlobalVariableExpression(var: !2423, expr: !DIExpression())
!2423 = distinct !DIGlobalVariable(name: "old_vcore_lp", scope: !2410, file: !2361, line: 979, type: !129, isLocal: true, isDefinition: true)
!2424 = !DIGlobalVariableExpression(var: !2425, expr: !DIExpression())
!2425 = distinct !DIGlobalVariable(name: "init", scope: !2410, file: !2361, line: 979, type: !129, isLocal: true, isDefinition: true)
!2426 = !DIGlobalVariableExpression(var: !2427, expr: !DIExpression())
!2427 = distinct !DIGlobalVariable(name: "S1_setting", scope: !2428, file: !2361, line: 1062, type: !2388, isLocal: true, isDefinition: true)
!2428 = distinct !DISubprogram(name: "pmu_set_vcore_s1_buck_mt6385", scope: !2361, file: !2361, line: 1060, type: !318, scopeLine: 1061, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2360, retainedNodes: !2429)
!2429 = !{!2430}
!2430 = !DILocalVariable(name: "vcbuck_voval", scope: !2428, file: !2361, line: 1063, type: !2431)
!2431 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 224, elements: !622)
!2432 = !DIGlobalVariableExpression(var: !2433, expr: !DIExpression())
!2433 = distinct !DIGlobalVariable(name: "current_setting", scope: !2428, file: !2361, line: 1062, type: !2388, isLocal: true, isDefinition: true)
!2434 = !DIGlobalVariableExpression(var: !2425, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!2435 = !DIGlobalVariableExpression(var: !2436, expr: !DIExpression())
!2436 = distinct !DIGlobalVariable(name: "emi_settings", scope: !2437, file: !2438, line: 44, type: !2584, isLocal: false, isDefinition: true)
!2437 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2438, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2439, retainedTypes: !2445, globals: !2446, splitDebugInlining: false, nameTableKind: None)
!2438 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_emi.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/dac_output_data_repeatedly/GCC")
!2439 = !{!2440}
!2440 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "emi_clock_enum_t", file: !2441, line: 40, baseType: !15, size: 32, elements: !2442)
!2441 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_emi_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/dac_output_data_repeatedly/GCC")
!2442 = !{!2443, !2444}
!2443 = !DIEnumerator(name: "EMI_CLK_LOW_TO_HIGH", value: 0)
!2444 = !DIEnumerator(name: "EMI_CLK_HIGH_TO_LOW", value: 1)
!2445 = !{!1220}
!2446 = !{!2435, !2447, !2449, !2451, !2453, !2554, !2556, !2558, !2560, !2562, !2564, !2566, !2568, !2570, !2572, !2574, !2576, !2578, !2580, !2582}
!2447 = !DIGlobalVariableExpression(var: !2448, expr: !DIExpression())
!2448 = distinct !DIGlobalVariable(name: "__EMI_CurSR0", scope: !2437, file: !2438, line: 65, type: !105, isLocal: false, isDefinition: true)
!2449 = !DIGlobalVariableExpression(var: !2450, expr: !DIExpression())
!2450 = distinct !DIGlobalVariable(name: "__EMI_CurSR1", scope: !2437, file: !2438, line: 66, type: !105, isLocal: false, isDefinition: true)
!2451 = !DIGlobalVariableExpression(var: !2452, expr: !DIExpression())
!2452 = distinct !DIGlobalVariable(name: "__EMI_CurSR2", scope: !2437, file: !2438, line: 67, type: !105, isLocal: false, isDefinition: true)
!2453 = !DIGlobalVariableExpression(var: !2454, expr: !DIExpression())
!2454 = distinct !DIGlobalVariable(name: "emi_register", scope: !2437, file: !2438, line: 83, type: !2455, isLocal: false, isDefinition: true)
!2455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2456, size: 32)
!2456 = !DIDerivedType(tag: DW_TAG_typedef, name: "EMI_REGISTER_T", file: !100, line: 2524, baseType: !2457)
!2457 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !100, line: 2447, size: 6752, elements: !2458)
!2458 = !{!2459, !2463, !2464, !2465, !2466, !2470, !2471, !2473, !2474, !2478, !2479, !2480, !2481, !2482, !2483, !2484, !2485, !2486, !2487, !2488, !2489, !2490, !2491, !2495, !2496, !2497, !2498, !2499, !2500, !2501, !2502, !2503, !2504, !2505, !2506, !2507, !2508, !2509, !2510, !2511, !2512, !2513, !2514, !2515, !2516, !2520, !2521, !2522, !2523, !2524, !2525, !2526, !2527, !2528, !2529, !2530, !2531, !2532, !2533, !2534, !2535, !2536, !2537, !2538, !2539, !2543, !2544, !2545, !2546, !2547, !2548, !2549, !2550, !2551, !2552, !2553}
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2457, file: !100, line: 2448, baseType: !2460, size: 768)
!2460 = !DICompositeType(tag: DW_TAG_array_type, baseType: !126, size: 768, elements: !2461)
!2461 = !{!2462}
!2462 = !DISubrange(count: 96)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_CONM", scope: !2457, file: !100, line: 2449, baseType: !104, size: 32, offset: 768)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2457, file: !100, line: 2450, baseType: !1073, size: 96, offset: 800)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_GENA", scope: !2457, file: !100, line: 2451, baseType: !104, size: 32, offset: 896)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2457, file: !100, line: 2452, baseType: !2467, size: 160, offset: 928)
!2467 = !DICompositeType(tag: DW_TAG_array_type, baseType: !126, size: 160, elements: !2468)
!2468 = !{!2469}
!2469 = !DISubrange(count: 20)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_RDCT", scope: !2457, file: !100, line: 2453, baseType: !104, size: 32, offset: 1088)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2457, file: !100, line: 2454, baseType: !2472, size: 32, offset: 1120)
!2472 = !DICompositeType(tag: DW_TAG_array_type, baseType: !126, size: 32, elements: !482)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_DLLV", scope: !2457, file: !100, line: 2455, baseType: !104, size: 32, offset: 1152)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2457, file: !100, line: 2456, baseType: !2475, size: 480, offset: 1184)
!2475 = !DICompositeType(tag: DW_TAG_array_type, baseType: !126, size: 480, elements: !2476)
!2476 = !{!2477}
!2477 = !DISubrange(count: 60)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDLC", scope: !2457, file: !100, line: 2457, baseType: !104, size: 32, offset: 1664)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2457, file: !100, line: 2458, baseType: !2472, size: 32, offset: 1696)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDLD", scope: !2457, file: !100, line: 2459, baseType: !104, size: 32, offset: 1728)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2457, file: !100, line: 2460, baseType: !2472, size: 32, offset: 1760)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDLE", scope: !2457, file: !100, line: 2461, baseType: !104, size: 32, offset: 1792)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED8", scope: !2457, file: !100, line: 2462, baseType: !2467, size: 160, offset: 1824)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODLC", scope: !2457, file: !100, line: 2463, baseType: !104, size: 32, offset: 1984)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED9", scope: !2457, file: !100, line: 2464, baseType: !2472, size: 32, offset: 2016)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODLD", scope: !2457, file: !100, line: 2465, baseType: !104, size: 32, offset: 2048)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED10", scope: !2457, file: !100, line: 2466, baseType: !2472, size: 32, offset: 2080)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODLE", scope: !2457, file: !100, line: 2467, baseType: !104, size: 32, offset: 2112)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED11", scope: !2457, file: !100, line: 2468, baseType: !2472, size: 32, offset: 2144)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODLF", scope: !2457, file: !100, line: 2469, baseType: !104, size: 32, offset: 2176)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED12", scope: !2457, file: !100, line: 2470, baseType: !2492, size: 224, offset: 2208)
!2492 = !DICompositeType(tag: DW_TAG_array_type, baseType: !126, size: 224, elements: !2493)
!2493 = !{!2494}
!2494 = !DISubrange(count: 28)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IOA", scope: !2457, file: !100, line: 2471, baseType: !104, size: 32, offset: 2432)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED13", scope: !2457, file: !100, line: 2472, baseType: !2472, size: 32, offset: 2464)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IOB", scope: !2457, file: !100, line: 2473, baseType: !104, size: 32, offset: 2496)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED14", scope: !2457, file: !100, line: 2474, baseType: !1073, size: 96, offset: 2528)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_HFSLP", scope: !2457, file: !100, line: 2475, baseType: !104, size: 32, offset: 2624)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED15", scope: !2457, file: !100, line: 2476, baseType: !2472, size: 32, offset: 2656)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_DSRAM", scope: !2457, file: !100, line: 2477, baseType: !104, size: 32, offset: 2688)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED16", scope: !2457, file: !100, line: 2478, baseType: !2472, size: 32, offset: 2720)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MSRAM", scope: !2457, file: !100, line: 2479, baseType: !104, size: 32, offset: 2752)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED17", scope: !2457, file: !100, line: 2480, baseType: !2472, size: 32, offset: 2784)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MREG_RW", scope: !2457, file: !100, line: 2481, baseType: !104, size: 32, offset: 2816)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED18", scope: !2457, file: !100, line: 2482, baseType: !1073, size: 96, offset: 2848)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ARBA", scope: !2457, file: !100, line: 2483, baseType: !104, size: 32, offset: 2944)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED19", scope: !2457, file: !100, line: 2484, baseType: !2472, size: 32, offset: 2976)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ARBB", scope: !2457, file: !100, line: 2485, baseType: !104, size: 32, offset: 3008)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED20", scope: !2457, file: !100, line: 2486, baseType: !2472, size: 32, offset: 3040)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ARBC", scope: !2457, file: !100, line: 2487, baseType: !104, size: 32, offset: 3072)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED21", scope: !2457, file: !100, line: 2488, baseType: !2467, size: 160, offset: 3104)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_SLCT", scope: !2457, file: !100, line: 2489, baseType: !104, size: 32, offset: 3264)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED22", scope: !2457, file: !100, line: 2490, baseType: !2472, size: 32, offset: 3296)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ABCT", scope: !2457, file: !100, line: 2491, baseType: !104, size: 32, offset: 3328)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED23", scope: !2457, file: !100, line: 2492, baseType: !2517, size: 736, offset: 3360)
!2517 = !DICompositeType(tag: DW_TAG_array_type, baseType: !126, size: 736, elements: !2518)
!2518 = !{!2519}
!2519 = !DISubrange(count: 92)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_BMEN", scope: !2457, file: !100, line: 2493, baseType: !104, size: 32, offset: 4096)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED24", scope: !2457, file: !100, line: 2494, baseType: !2472, size: 32, offset: 4128)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_BCNT", scope: !2457, file: !100, line: 2495, baseType: !104, size: 32, offset: 4160)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED25", scope: !2457, file: !100, line: 2496, baseType: !2472, size: 32, offset: 4192)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_TACT", scope: !2457, file: !100, line: 2497, baseType: !104, size: 32, offset: 4224)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED26", scope: !2457, file: !100, line: 2498, baseType: !2472, size: 32, offset: 4256)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_TSCT", scope: !2457, file: !100, line: 2499, baseType: !104, size: 32, offset: 4288)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED27", scope: !2457, file: !100, line: 2500, baseType: !2472, size: 32, offset: 4320)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_WACT", scope: !2457, file: !100, line: 2501, baseType: !104, size: 32, offset: 4352)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED28", scope: !2457, file: !100, line: 2502, baseType: !2472, size: 32, offset: 4384)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_WSCT", scope: !2457, file: !100, line: 2503, baseType: !104, size: 32, offset: 4416)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED29", scope: !2457, file: !100, line: 2504, baseType: !2472, size: 32, offset: 4448)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_BACT", scope: !2457, file: !100, line: 2505, baseType: !104, size: 32, offset: 4480)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED30", scope: !2457, file: !100, line: 2506, baseType: !2472, size: 32, offset: 4512)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_BSCT0", scope: !2457, file: !100, line: 2507, baseType: !104, size: 32, offset: 4544)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED31", scope: !2457, file: !100, line: 2508, baseType: !2472, size: 32, offset: 4576)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_BSCT1", scope: !2457, file: !100, line: 2509, baseType: !104, size: 32, offset: 4608)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED32", scope: !2457, file: !100, line: 2510, baseType: !2475, size: 480, offset: 4640)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_TTYPE1", scope: !2457, file: !100, line: 2511, baseType: !104, size: 32, offset: 5120)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED33", scope: !2457, file: !100, line: 2512, baseType: !2540, size: 992, offset: 5152)
!2540 = !DICompositeType(tag: DW_TAG_array_type, baseType: !126, size: 992, elements: !2541)
!2541 = !{!2542}
!2542 = !DISubrange(count: 124)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MBISTA", scope: !2457, file: !100, line: 2513, baseType: !104, size: 32, offset: 6144)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED34", scope: !2457, file: !100, line: 2514, baseType: !2472, size: 32, offset: 6176)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MBISTB", scope: !2457, file: !100, line: 2515, baseType: !104, size: 32, offset: 6208)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED35", scope: !2457, file: !100, line: 2516, baseType: !2472, size: 32, offset: 6240)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MBISTC", scope: !2457, file: !100, line: 2517, baseType: !104, size: 32, offset: 6272)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED36", scope: !2457, file: !100, line: 2518, baseType: !2472, size: 32, offset: 6304)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MBISTD", scope: !2457, file: !100, line: 2519, baseType: !104, size: 32, offset: 6336)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED37", scope: !2457, file: !100, line: 2520, baseType: !2467, size: 160, offset: 6368)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_TEST", scope: !2457, file: !100, line: 2521, baseType: !104, size: 32, offset: 6528)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED38", scope: !2457, file: !100, line: 2522, baseType: !2467, size: 160, offset: 6560)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_VENDER_INFO", scope: !2457, file: !100, line: 2523, baseType: !104, size: 32, offset: 6720)
!2554 = !DIGlobalVariableExpression(var: !2555, expr: !DIExpression())
!2555 = distinct !DIGlobalVariable(name: "dvfs_dma_runing_status", scope: !2437, file: !2438, line: 485, type: !104, isLocal: false, isDefinition: true)
!2556 = !DIGlobalVariableExpression(var: !2557, expr: !DIExpression())
!2557 = distinct !DIGlobalVariable(name: "EMI_GENA_VAL", scope: !2437, file: !2438, line: 68, type: !105, isLocal: false, isDefinition: true)
!2558 = !DIGlobalVariableExpression(var: !2559, expr: !DIExpression())
!2559 = distinct !DIGlobalVariable(name: "EMI_RDCT_VAL", scope: !2437, file: !2438, line: 69, type: !105, isLocal: false, isDefinition: true)
!2560 = !DIGlobalVariableExpression(var: !2561, expr: !DIExpression())
!2561 = distinct !DIGlobalVariable(name: "EMI_DSRAM_VAL", scope: !2437, file: !2438, line: 70, type: !105, isLocal: false, isDefinition: true)
!2562 = !DIGlobalVariableExpression(var: !2563, expr: !DIExpression())
!2563 = distinct !DIGlobalVariable(name: "EMI_MSRAM_VAL", scope: !2437, file: !2438, line: 71, type: !105, isLocal: false, isDefinition: true)
!2564 = !DIGlobalVariableExpression(var: !2565, expr: !DIExpression())
!2565 = distinct !DIGlobalVariable(name: "EMI_IDL_C_VAL", scope: !2437, file: !2438, line: 72, type: !105, isLocal: false, isDefinition: true)
!2566 = !DIGlobalVariableExpression(var: !2567, expr: !DIExpression())
!2567 = distinct !DIGlobalVariable(name: "EMI_IDL_D_VAL", scope: !2437, file: !2438, line: 73, type: !105, isLocal: false, isDefinition: true)
!2568 = !DIGlobalVariableExpression(var: !2569, expr: !DIExpression())
!2569 = distinct !DIGlobalVariable(name: "EMI_IDL_E_VAL", scope: !2437, file: !2438, line: 74, type: !105, isLocal: false, isDefinition: true)
!2570 = !DIGlobalVariableExpression(var: !2571, expr: !DIExpression())
!2571 = distinct !DIGlobalVariable(name: "EMI_ODL_C_VAL", scope: !2437, file: !2438, line: 75, type: !105, isLocal: false, isDefinition: true)
!2572 = !DIGlobalVariableExpression(var: !2573, expr: !DIExpression())
!2573 = distinct !DIGlobalVariable(name: "EMI_ODL_D_VAL", scope: !2437, file: !2438, line: 76, type: !105, isLocal: false, isDefinition: true)
!2574 = !DIGlobalVariableExpression(var: !2575, expr: !DIExpression())
!2575 = distinct !DIGlobalVariable(name: "EMI_ODL_E_VAL", scope: !2437, file: !2438, line: 77, type: !105, isLocal: false, isDefinition: true)
!2576 = !DIGlobalVariableExpression(var: !2577, expr: !DIExpression())
!2577 = distinct !DIGlobalVariable(name: "EMI_ODL_F_VAL", scope: !2437, file: !2438, line: 78, type: !105, isLocal: false, isDefinition: true)
!2578 = !DIGlobalVariableExpression(var: !2579, expr: !DIExpression())
!2579 = distinct !DIGlobalVariable(name: "EMI_IO_A_VAL", scope: !2437, file: !2438, line: 79, type: !105, isLocal: false, isDefinition: true)
!2580 = !DIGlobalVariableExpression(var: !2581, expr: !DIExpression())
!2581 = distinct !DIGlobalVariable(name: "EMI_IO_B_VAL", scope: !2437, file: !2438, line: 80, type: !105, isLocal: false, isDefinition: true)
!2582 = !DIGlobalVariableExpression(var: !2583, expr: !DIExpression())
!2583 = distinct !DIGlobalVariable(name: "emi_register_backup", scope: !2437, file: !2438, line: 84, type: !2456, isLocal: false, isDefinition: true)
!2584 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2585, size: 416, elements: !2601)
!2585 = !DIDerivedType(tag: DW_TAG_typedef, name: "EMI_SETTINGS", file: !2441, line: 60, baseType: !2586)
!2586 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2441, line: 45, size: 416, elements: !2587)
!2587 = !{!2588, !2589, !2590, !2591, !2592, !2593, !2594, !2595, !2596, !2597, !2598, !2599, !2600}
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_GENA_VAL", scope: !2586, file: !2441, line: 46, baseType: !105, size: 32)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_RDCT_VAL", scope: !2586, file: !2441, line: 47, baseType: !105, size: 32, offset: 32)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_DSRAM_VAL", scope: !2586, file: !2441, line: 48, baseType: !105, size: 32, offset: 64)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MSRAM_VAL", scope: !2586, file: !2441, line: 49, baseType: !105, size: 32, offset: 96)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDL_C_VAL", scope: !2586, file: !2441, line: 50, baseType: !105, size: 32, offset: 128)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDL_D_VAL", scope: !2586, file: !2441, line: 51, baseType: !105, size: 32, offset: 160)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDL_E_VAL", scope: !2586, file: !2441, line: 52, baseType: !105, size: 32, offset: 192)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODL_C_VAL", scope: !2586, file: !2441, line: 53, baseType: !105, size: 32, offset: 224)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODL_D_VAL", scope: !2586, file: !2441, line: 54, baseType: !105, size: 32, offset: 256)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODL_E_VAL", scope: !2586, file: !2441, line: 55, baseType: !105, size: 32, offset: 288)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODL_F_VAL", scope: !2586, file: !2441, line: 56, baseType: !105, size: 32, offset: 320)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IO_A_VAL", scope: !2586, file: !2441, line: 57, baseType: !105, size: 32, offset: 352)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IO_B_VAL", scope: !2586, file: !2441, line: 58, baseType: !105, size: 32, offset: 384)
!2601 = !{!2602}
!2602 = !DISubrange(count: 1)
!2603 = !DIGlobalVariableExpression(var: !2604, expr: !DIExpression())
!2604 = distinct !DIGlobalVariable(name: "cm_freq_state", scope: !2605, file: !2606, line: 48, type: !2614, isLocal: false, isDefinition: true)
!2605 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2606, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2607, globals: !2613, splitDebugInlining: false, nameTableKind: None)
!2606 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_clock_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/dac_output_data_repeatedly/GCC")
!2607 = !{!2608}
!2608 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1165, line: 100, baseType: !15, size: 32, elements: !2609)
!2609 = !{!2610, !2611, !2612}
!2610 = !DIEnumerator(name: "CM_208M_STA", value: 0)
!2611 = !DIEnumerator(name: "CM_104M_STA", value: 1)
!2612 = !DIEnumerator(name: "CM_26M_STA", value: 2)
!2613 = !{!2603}
!2614 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_cm_freq_state_id", file: !1165, line: 104, baseType: !2608)
!2615 = !DIGlobalVariableExpression(var: !2616, expr: !DIExpression())
!2616 = distinct !DIGlobalVariable(name: "heap_end", scope: !2617, file: !2618, line: 69, type: !745, isLocal: true, isDefinition: true)
!2617 = distinct !DISubprogram(name: "_sbrk_r", scope: !2618, file: !2618, line: 66, type: !2619, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !2812)
!2618 = !DIFile(filename: "../../../../../project/mt2523_hdk/hal_examples/dac_output_data_repeatedly/GCC/syscalls.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/dac_output_data_repeatedly/GCC")
!2619 = !DISubroutineType(types: !2620)
!2620 = !{!2621, !2623, !2807}
!2621 = !DIDerivedType(tag: DW_TAG_typedef, name: "caddr_t", file: !2622, line: 123, baseType: !745)
!2622 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/types.h", directory: "/home/mjshen/RTOSExploration")
!2623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2624, size: 32)
!2624 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_reent", file: !2625, line: 377, size: 1920, elements: !2626)
!2625 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/reent.h", directory: "/home/mjshen/RTOSExploration")
!2626 = !{!2627, !2628, !2697, !2698, !2699, !2700, !2701, !2702, !2703, !2706, !2727, !2731, !2732, !2733, !2734, !2744, !2757, !2758, !2763, !2781, !2782, !2789, !2790, !2806}
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "_errno", scope: !2624, file: !2625, line: 381, baseType: !7, size: 32)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "_stdin", scope: !2624, file: !2625, line: 386, baseType: !2629, size: 32, offset: 32)
!2629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2630, size: 32)
!2630 = !DIDerivedType(tag: DW_TAG_typedef, name: "__FILE", file: !2625, line: 292, baseType: !2631)
!2631 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__sFILE", file: !2625, line: 186, size: 832, elements: !2632)
!2632 = !{!2633, !2635, !2636, !2637, !2638, !2639, !2644, !2645, !2646, !2647, !2651, !2655, !2662, !2666, !2667, !2668, !2669, !2671, !2673, !2674, !2675, !2677, !2683, !2696}
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "_p", scope: !2631, file: !2625, line: 187, baseType: !2634, size: 32)
!2634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !129, size: 32)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "_r", scope: !2631, file: !2625, line: 188, baseType: !7, size: 32, offset: 32)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "_w", scope: !2631, file: !2625, line: 189, baseType: !7, size: 32, offset: 64)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2631, file: !2625, line: 190, baseType: !1621, size: 16, offset: 96)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "_file", scope: !2631, file: !2625, line: 191, baseType: !1621, size: 16, offset: 112)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "_bf", scope: !2631, file: !2625, line: 192, baseType: !2640, size: 64, offset: 128)
!2640 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__sbuf", file: !2625, line: 122, size: 64, elements: !2641)
!2641 = !{!2642, !2643}
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "_base", scope: !2640, file: !2625, line: 123, baseType: !2634, size: 32)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "_size", scope: !2640, file: !2625, line: 124, baseType: !7, size: 32, offset: 32)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "_lbfsize", scope: !2631, file: !2625, line: 193, baseType: !7, size: 32, offset: 192)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "_data", scope: !2631, file: !2625, line: 196, baseType: !2623, size: 32, offset: 224)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "_cookie", scope: !2631, file: !2625, line: 200, baseType: !124, size: 32, offset: 256)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "_read", scope: !2631, file: !2625, line: 202, baseType: !2648, size: 32, offset: 288)
!2648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2649, size: 32)
!2649 = !DISubroutineType(types: !2650)
!2650 = !{!7, !2623, !124, !745, !7}
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "_write", scope: !2631, file: !2625, line: 204, baseType: !2652, size: 32, offset: 320)
!2652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2653, size: 32)
!2653 = !DISubroutineType(types: !2654)
!2654 = !{!7, !2623, !124, !199, !7}
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "_seek", scope: !2631, file: !2625, line: 207, baseType: !2656, size: 32, offset: 352)
!2656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2657, size: 32)
!2657 = !DISubroutineType(types: !2658)
!2658 = !{!2659, !2623, !124, !2659, !7}
!2659 = !DIDerivedType(tag: DW_TAG_typedef, name: "_fpos_t", file: !2660, line: 116, baseType: !2661)
!2660 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_types.h", directory: "/home/mjshen/RTOSExploration")
!2661 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "_close", scope: !2631, file: !2625, line: 208, baseType: !2663, size: 32, offset: 384)
!2663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2664, size: 32)
!2664 = !DISubroutineType(types: !2665)
!2665 = !{!7, !2623, !124}
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "_ub", scope: !2631, file: !2625, line: 211, baseType: !2640, size: 64, offset: 416)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "_up", scope: !2631, file: !2625, line: 212, baseType: !2634, size: 32, offset: 480)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "_ur", scope: !2631, file: !2625, line: 213, baseType: !7, size: 32, offset: 512)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "_ubuf", scope: !2631, file: !2625, line: 216, baseType: !2670, size: 24, offset: 544)
!2670 = !DICompositeType(tag: DW_TAG_array_type, baseType: !129, size: 24, elements: !1506)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "_nbuf", scope: !2631, file: !2625, line: 217, baseType: !2672, size: 8, offset: 568)
!2672 = !DICompositeType(tag: DW_TAG_array_type, baseType: !129, size: 8, elements: !2601)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "_lb", scope: !2631, file: !2625, line: 220, baseType: !2640, size: 64, offset: 576)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "_blksize", scope: !2631, file: !2625, line: 223, baseType: !7, size: 32, offset: 640)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2631, file: !2625, line: 224, baseType: !2676, size: 32, offset: 672)
!2676 = !DIDerivedType(tag: DW_TAG_typedef, name: "_off_t", file: !2660, line: 46, baseType: !2661)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2631, file: !2625, line: 231, baseType: !2678, size: 32, offset: 704)
!2678 = !DIDerivedType(tag: DW_TAG_typedef, name: "_flock_t", file: !2625, line: 35, baseType: !2679)
!2679 = !DIDerivedType(tag: DW_TAG_typedef, name: "_LOCK_T", file: !2680, line: 34, baseType: !2681)
!2680 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/lock.h", directory: "/home/mjshen/RTOSExploration")
!2681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2682, size: 32)
!2682 = !DICompositeType(tag: DW_TAG_structure_type, name: "__lock", file: !2680, line: 33, flags: DIFlagFwdDecl)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "_mbstate", scope: !2631, file: !2625, line: 233, baseType: !2684, size: 64, offset: 736)
!2684 = !DIDerivedType(tag: DW_TAG_typedef, name: "_mbstate_t", file: !2660, line: 170, baseType: !2685)
!2685 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2660, line: 162, size: 64, elements: !2686)
!2686 = !{!2687, !2688}
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !2685, file: !2660, line: 164, baseType: !7, size: 32)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !2685, file: !2660, line: 169, baseType: !2689, size: 32, offset: 32)
!2689 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2685, file: !2660, line: 165, size: 32, elements: !2690)
!2690 = !{!2691, !2694}
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !2689, file: !2660, line: 167, baseType: !2692, size: 32)
!2692 = !DIDerivedType(tag: DW_TAG_typedef, name: "wint_t", file: !2693, line: 116, baseType: !7)
!2693 = !DIFile(filename: "/usr/lib/llvm-14/lib/clang/14.0.6/include/stddef.h", directory: "")
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !2689, file: !2660, line: 168, baseType: !2695, size: 32)
!2695 = !DICompositeType(tag: DW_TAG_array_type, baseType: !129, size: 32, elements: !482)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2631, file: !2625, line: 234, baseType: !7, size: 32, offset: 800)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "_stdout", scope: !2624, file: !2625, line: 386, baseType: !2629, size: 32, offset: 64)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "_stderr", scope: !2624, file: !2625, line: 386, baseType: !2629, size: 32, offset: 96)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "_inc", scope: !2624, file: !2625, line: 388, baseType: !7, size: 32, offset: 128)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "_emergency", scope: !2624, file: !2625, line: 390, baseType: !745, size: 32, offset: 160)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "__sdidinit", scope: !2624, file: !2625, line: 392, baseType: !7, size: 32, offset: 192)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "_unspecified_locale_info", scope: !2624, file: !2625, line: 394, baseType: !7, size: 32, offset: 224)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "_locale", scope: !2624, file: !2625, line: 395, baseType: !2704, size: 32, offset: 256)
!2704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2705, size: 32)
!2705 = !DICompositeType(tag: DW_TAG_structure_type, name: "__locale_t", file: !2625, line: 45, flags: DIFlagFwdDecl)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "_mp", scope: !2624, file: !2625, line: 397, baseType: !2707, size: 32, offset: 288)
!2707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2708, size: 32)
!2708 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_mprec", file: !2625, line: 349, size: 128, elements: !2709)
!2709 = !{!2710, !2723, !2724, !2725}
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "_result", scope: !2708, file: !2625, line: 352, baseType: !2711, size: 32)
!2711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2712, size: 32)
!2712 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Bigint", file: !2625, line: 52, size: 192, elements: !2713)
!2713 = !{!2714, !2715, !2716, !2717, !2718, !2719}
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !2712, file: !2625, line: 54, baseType: !2711, size: 32)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "_k", scope: !2712, file: !2625, line: 55, baseType: !7, size: 32, offset: 32)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "_maxwds", scope: !2712, file: !2625, line: 55, baseType: !7, size: 32, offset: 64)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "_sign", scope: !2712, file: !2625, line: 55, baseType: !7, size: 32, offset: 96)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "_wds", scope: !2712, file: !2625, line: 55, baseType: !7, size: 32, offset: 128)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "_x", scope: !2712, file: !2625, line: 56, baseType: !2720, size: 32, offset: 160)
!2720 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2721, size: 32, elements: !2601)
!2721 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ULong", file: !2625, line: 22, baseType: !2722)
!2722 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "_result_k", scope: !2708, file: !2625, line: 353, baseType: !7, size: 32, offset: 32)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "_p5s", scope: !2708, file: !2625, line: 354, baseType: !2711, size: 32, offset: 64)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "_freelist", scope: !2708, file: !2625, line: 355, baseType: !2726, size: 32, offset: 96)
!2726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2711, size: 32)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "__cleanup", scope: !2624, file: !2625, line: 399, baseType: !2728, size: 32, offset: 320)
!2728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2729, size: 32)
!2729 = !DISubroutineType(types: !2730)
!2730 = !{null, !2623}
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "_gamma_signgam", scope: !2624, file: !2625, line: 401, baseType: !7, size: 32, offset: 352)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "_cvtlen", scope: !2624, file: !2625, line: 404, baseType: !7, size: 32, offset: 384)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "_cvtbuf", scope: !2624, file: !2625, line: 405, baseType: !745, size: 32, offset: 416)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "_r48", scope: !2624, file: !2625, line: 407, baseType: !2735, size: 32, offset: 448)
!2735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2736, size: 32)
!2736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rand48", file: !2625, line: 324, size: 192, elements: !2737)
!2737 = !{!2738, !2740, !2741, !2742}
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "_seed", scope: !2736, file: !2625, line: 325, baseType: !2739, size: 48)
!2739 = !DICompositeType(tag: DW_TAG_array_type, baseType: !989, size: 48, elements: !1506)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "_mult", scope: !2736, file: !2625, line: 326, baseType: !2739, size: 48, offset: 48)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "_add", scope: !2736, file: !2625, line: 327, baseType: !989, size: 16, offset: 96)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "_rand_next", scope: !2736, file: !2625, line: 330, baseType: !2743, size: 64, offset: 128)
!2743 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "_localtime_buf", scope: !2624, file: !2625, line: 408, baseType: !2745, size: 32, offset: 480)
!2745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2746, size: 32)
!2746 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__tm", file: !2625, line: 60, size: 288, elements: !2747)
!2747 = !{!2748, !2749, !2750, !2751, !2752, !2753, !2754, !2755, !2756}
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_sec", scope: !2746, file: !2625, line: 62, baseType: !7, size: 32)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_min", scope: !2746, file: !2625, line: 63, baseType: !7, size: 32, offset: 32)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_hour", scope: !2746, file: !2625, line: 64, baseType: !7, size: 32, offset: 64)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_mday", scope: !2746, file: !2625, line: 65, baseType: !7, size: 32, offset: 96)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_mon", scope: !2746, file: !2625, line: 66, baseType: !7, size: 32, offset: 128)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_year", scope: !2746, file: !2625, line: 67, baseType: !7, size: 32, offset: 160)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_wday", scope: !2746, file: !2625, line: 68, baseType: !7, size: 32, offset: 192)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_yday", scope: !2746, file: !2625, line: 69, baseType: !7, size: 32, offset: 224)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_isdst", scope: !2746, file: !2625, line: 70, baseType: !7, size: 32, offset: 256)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "_asctime_buf", scope: !2624, file: !2625, line: 409, baseType: !745, size: 32, offset: 512)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "_sig_func", scope: !2624, file: !2625, line: 412, baseType: !2759, size: 32, offset: 544)
!2759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2760, size: 32)
!2760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2761, size: 32)
!2761 = !DISubroutineType(types: !2762)
!2762 = !{null, !7}
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "_atexit", scope: !2624, file: !2625, line: 416, baseType: !2764, size: 32, offset: 576)
!2764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2765, size: 32)
!2765 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_atexit", file: !2625, line: 90, size: 1120, elements: !2766)
!2766 = !{!2767, !2768, !2769, !2772}
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !2765, file: !2625, line: 91, baseType: !2764, size: 32)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "_ind", scope: !2765, file: !2625, line: 92, baseType: !7, size: 32, offset: 32)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "_fns", scope: !2765, file: !2625, line: 93, baseType: !2770, size: 1024, offset: 64)
!2770 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2771, size: 1024, elements: !352)
!2771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !318, size: 32)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "_on_exit_args_ptr", scope: !2765, file: !2625, line: 94, baseType: !2773, size: 32, offset: 1088)
!2773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2774, size: 32)
!2774 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_on_exit_args", file: !2625, line: 79, size: 2112, elements: !2775)
!2775 = !{!2776, !2778, !2779, !2780}
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "_fnargs", scope: !2774, file: !2625, line: 80, baseType: !2777, size: 1024)
!2777 = !DICompositeType(tag: DW_TAG_array_type, baseType: !124, size: 1024, elements: !352)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "_dso_handle", scope: !2774, file: !2625, line: 81, baseType: !2777, size: 1024, offset: 1024)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "_fntypes", scope: !2774, file: !2625, line: 83, baseType: !2721, size: 32, offset: 2048)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "_is_cxa", scope: !2774, file: !2625, line: 86, baseType: !2721, size: 32, offset: 2080)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "_atexit0", scope: !2624, file: !2625, line: 417, baseType: !2765, size: 1120, offset: 608)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "__sglue", scope: !2624, file: !2625, line: 420, baseType: !2783, size: 96, offset: 1728)
!2783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_glue", file: !2625, line: 296, size: 96, elements: !2784)
!2784 = !{!2785, !2787, !2788}
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !2783, file: !2625, line: 298, baseType: !2786, size: 32)
!2786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2783, size: 32)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "_niobs", scope: !2783, file: !2625, line: 299, baseType: !7, size: 32, offset: 32)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "_iobs", scope: !2783, file: !2625, line: 300, baseType: !2629, size: 32, offset: 64)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "__sf", scope: !2624, file: !2625, line: 421, baseType: !2629, size: 32, offset: 1824)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "_misc", scope: !2624, file: !2625, line: 422, baseType: !2791, size: 32, offset: 1856)
!2791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2792, size: 32)
!2792 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_misc_reent", file: !2625, line: 359, size: 640, elements: !2793)
!2793 = !{!2794, !2795, !2796, !2797, !2798, !2800, !2801, !2802, !2803, !2804, !2805}
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "_strtok_last", scope: !2792, file: !2625, line: 362, baseType: !745, size: 32)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "_mblen_state", scope: !2792, file: !2625, line: 363, baseType: !2684, size: 64, offset: 32)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "_wctomb_state", scope: !2792, file: !2625, line: 364, baseType: !2684, size: 64, offset: 96)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "_mbtowc_state", scope: !2792, file: !2625, line: 365, baseType: !2684, size: 64, offset: 160)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "_l64a_buf", scope: !2792, file: !2625, line: 366, baseType: !2799, size: 64, offset: 224)
!2799 = !DICompositeType(tag: DW_TAG_array_type, baseType: !201, size: 64, elements: !809)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "_getdate_err", scope: !2792, file: !2625, line: 367, baseType: !7, size: 32, offset: 288)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "_mbrlen_state", scope: !2792, file: !2625, line: 368, baseType: !2684, size: 64, offset: 320)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "_mbrtowc_state", scope: !2792, file: !2625, line: 369, baseType: !2684, size: 64, offset: 384)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "_mbsrtowcs_state", scope: !2792, file: !2625, line: 370, baseType: !2684, size: 64, offset: 448)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "_wcrtomb_state", scope: !2792, file: !2625, line: 371, baseType: !2684, size: 64, offset: 512)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "_wcsrtombs_state", scope: !2792, file: !2625, line: 372, baseType: !2684, size: 64, offset: 576)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "_signal_buf", scope: !2624, file: !2625, line: 423, baseType: !745, size: 32, offset: 1888)
!2807 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !2693, line: 46, baseType: !15)
!2808 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2809, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2810, globals: !2811, splitDebugInlining: false, nameTableKind: None)
!2809 = !DIFile(filename: "syscalls.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/dac_output_data_repeatedly/GCC")
!2810 = !{!745, !2621}
!2811 = !{!2615}
!2812 = !{!2813, !2814, !2815, !2816}
!2813 = !DILocalVariable(name: "r", arg: 1, scope: !2617, file: !2618, line: 66, type: !2623)
!2814 = !DILocalVariable(name: "nbytes", arg: 2, scope: !2617, file: !2618, line: 66, type: !2807)
!2815 = !DILocalVariable(name: "prev_heap_end", scope: !2617, file: !2618, line: 70, type: !745)
!2816 = !DILocalVariable(name: "stack", scope: !2617, file: !2618, line: 71, type: !745)
!2817 = !DIGlobalVariableExpression(var: !2818, expr: !DIExpression())
!2818 = distinct !DIGlobalVariable(name: "System_Initialize_Done", scope: !2819, file: !2820, line: 52, type: !104, isLocal: true, isDefinition: true)
!2819 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2820, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2821, globals: !2931, splitDebugInlining: false, nameTableKind: None)
!2820 = !DIFile(filename: "../../../../../project/mt2523_hdk/hal_examples/dac_output_data_repeatedly/src/system_mt2523.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/dac_output_data_repeatedly/GCC")
!2821 = !{!2822, !2830, !105, !2875, !2880, !2905}
!2822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2823, size: 32)
!2823 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !1063, line: 656, baseType: !2824)
!2824 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1063, line: 650, size: 128, elements: !2825)
!2825 = !{!2826, !2827, !2828, !2829}
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !2824, file: !1063, line: 652, baseType: !104, size: 32)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !2824, file: !1063, line: 653, baseType: !104, size: 32, offset: 32)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !2824, file: !1063, line: 654, baseType: !104, size: 32, offset: 64)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !2824, file: !1063, line: 655, baseType: !299, size: 32, offset: 96)
!2830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2831, size: 32)
!2831 = !DIDerivedType(tag: DW_TAG_typedef, name: "CONFIGSYS_REGISTER_T", file: !100, line: 1952, baseType: !2832)
!2832 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !100, line: 1921, size: 8288, elements: !2833)
!2833 = !{!2834, !2835, !2836, !2837, !2838, !2839, !2840, !2841, !2842, !2844, !2845, !2849, !2850, !2852, !2853, !2857, !2858, !2859, !2860, !2861, !2862, !2863, !2864, !2865, !2866, !2867, !2868, !2872, !2873, !2874}
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDA", scope: !2832, file: !100, line: 1922, baseType: !104, size: 32)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDB", scope: !2832, file: !100, line: 1923, baseType: !104, size: 32, offset: 32)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDC", scope: !2832, file: !100, line: 1924, baseType: !104, size: 32, offset: 64)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDD", scope: !2832, file: !100, line: 1925, baseType: !104, size: 32, offset: 96)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "reserver1", scope: !2832, file: !100, line: 1926, baseType: !104, size: 32, offset: 128)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDF", scope: !2832, file: !100, line: 1927, baseType: !104, size: 32, offset: 160)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDG", scope: !2832, file: !100, line: 1928, baseType: !104, size: 32, offset: 192)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDH", scope: !2832, file: !100, line: 1929, baseType: !104, size: 32, offset: 224)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "reserver2", scope: !2832, file: !100, line: 1930, baseType: !2843, size: 768, offset: 256)
!2843 = !DICompositeType(tag: DW_TAG_array_type, baseType: !104, size: 768, elements: !1102)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_SOURCE_SEL", scope: !2832, file: !100, line: 1931, baseType: !104, size: 32, offset: 1024)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "reserver3", scope: !2832, file: !100, line: 1932, baseType: !2846, size: 992, offset: 1056)
!2846 = !DICompositeType(tag: DW_TAG_array_type, baseType: !104, size: 992, elements: !2847)
!2847 = !{!2848}
!2848 = !DISubrange(count: 31)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEP_COND", scope: !2832, file: !100, line: 1933, baseType: !104, size: 32, offset: 2048)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "reserver4", scope: !2832, file: !100, line: 1934, baseType: !2851, size: 416, offset: 2080)
!2851 = !DICompositeType(tag: DW_TAG_array_type, baseType: !104, size: 416, elements: !829)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "TOP_DEBUG", scope: !2832, file: !100, line: 1935, baseType: !104, size: 32, offset: 2496)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "reserver5", scope: !2832, file: !100, line: 1936, baseType: !2854, size: 1568, offset: 2528)
!2854 = !DICompositeType(tag: DW_TAG_array_type, baseType: !104, size: 1568, elements: !2855)
!2855 = !{!2856}
!2856 = !DISubrange(count: 49)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_COND0", scope: !2832, file: !100, line: 1937, baseType: !299, size: 32, offset: 4096)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_COND1", scope: !2832, file: !100, line: 1938, baseType: !299, size: 32, offset: 4128)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_COND2", scope: !2832, file: !100, line: 1939, baseType: !299, size: 32, offset: 4160)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "reserver6", scope: !2832, file: !100, line: 1940, baseType: !104, size: 32, offset: 4192)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_SETD0", scope: !2832, file: !100, line: 1941, baseType: !104, size: 32, offset: 4224)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_SETD1", scope: !2832, file: !100, line: 1942, baseType: !104, size: 32, offset: 4256)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_SETD2", scope: !2832, file: !100, line: 1943, baseType: !104, size: 32, offset: 4288)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "reserver7", scope: !2832, file: !100, line: 1944, baseType: !104, size: 32, offset: 4320)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_CLRD0", scope: !2832, file: !100, line: 1945, baseType: !104, size: 32, offset: 4352)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_CLRD1", scope: !2832, file: !100, line: 1946, baseType: !104, size: 32, offset: 4384)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_CLRD2", scope: !2832, file: !100, line: 1947, baseType: !104, size: 32, offset: 4416)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "reserver8", scope: !2832, file: !100, line: 1948, baseType: !2869, size: 3744, offset: 4448)
!2869 = !DICompositeType(tag: DW_TAG_array_type, baseType: !104, size: 3744, elements: !2870)
!2870 = !{!2871}
!2871 = !DISubrange(count: 117)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "LPM_CON", scope: !2832, file: !100, line: 1949, baseType: !104, size: 32, offset: 8192)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "reserver9", scope: !2832, file: !100, line: 1950, baseType: !104, size: 32, offset: 8224)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "LPM_L2H_CNT", scope: !2832, file: !100, line: 1951, baseType: !299, size: 32, offset: 8256)
!2875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2876, size: 32)
!2876 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFUSE_REGISTER_T", file: !100, line: 2158, baseType: !2877)
!2877 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !100, line: 2156, size: 32, elements: !2878)
!2878 = !{!2879}
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "EFUSE_CPU_104M", scope: !2877, file: !100, line: 2157, baseType: !104, size: 32)
!2880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2881, size: 32)
!2881 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1063, line: 418, baseType: !2882)
!2882 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1063, line: 395, size: 1120, elements: !2883)
!2883 = !{!2884, !2885, !2886, !2887, !2888, !2889, !2890, !2891, !2892, !2893, !2894, !2895, !2896, !2897, !2898, !2899, !2900, !2901, !2902, !2903, !2904}
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2882, file: !1063, line: 397, baseType: !299, size: 32)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2882, file: !1063, line: 398, baseType: !104, size: 32, offset: 32)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2882, file: !1063, line: 399, baseType: !104, size: 32, offset: 64)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2882, file: !1063, line: 400, baseType: !104, size: 32, offset: 96)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2882, file: !1063, line: 401, baseType: !104, size: 32, offset: 128)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2882, file: !1063, line: 402, baseType: !104, size: 32, offset: 160)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2882, file: !1063, line: 403, baseType: !1073, size: 96, offset: 192)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2882, file: !1063, line: 404, baseType: !104, size: 32, offset: 288)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2882, file: !1063, line: 405, baseType: !104, size: 32, offset: 320)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2882, file: !1063, line: 406, baseType: !104, size: 32, offset: 352)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2882, file: !1063, line: 407, baseType: !104, size: 32, offset: 384)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2882, file: !1063, line: 408, baseType: !104, size: 32, offset: 416)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2882, file: !1063, line: 409, baseType: !104, size: 32, offset: 448)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2882, file: !1063, line: 410, baseType: !104, size: 32, offset: 480)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2882, file: !1063, line: 411, baseType: !1082, size: 64, offset: 512)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2882, file: !1063, line: 412, baseType: !299, size: 32, offset: 576)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2882, file: !1063, line: 413, baseType: !299, size: 32, offset: 608)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2882, file: !1063, line: 414, baseType: !1086, size: 128, offset: 640)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2882, file: !1063, line: 415, baseType: !1088, size: 160, offset: 768)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2882, file: !1063, line: 416, baseType: !1092, size: 160, offset: 928)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2882, file: !1063, line: 417, baseType: !104, size: 32, offset: 1088)
!2905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2906, size: 32)
!2906 = !DIDerivedType(tag: DW_TAG_typedef, name: "CACHE_REGISTER_T", file: !100, line: 276, baseType: !2907)
!2907 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !100, line: 260, size: 525312, elements: !2908)
!2908 = !{!2909, !2910, !2911, !2912, !2913, !2914, !2915, !2916, !2917, !2918, !2919, !2921, !2922, !2926, !2930}
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CON", scope: !2907, file: !100, line: 261, baseType: !104, size: 32)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_OP", scope: !2907, file: !100, line: 262, baseType: !104, size: 32, offset: 32)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0L", scope: !2907, file: !100, line: 263, baseType: !104, size: 32, offset: 64)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0U", scope: !2907, file: !100, line: 264, baseType: !104, size: 32, offset: 96)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0L", scope: !2907, file: !100, line: 265, baseType: !104, size: 32, offset: 128)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0U", scope: !2907, file: !100, line: 266, baseType: !104, size: 32, offset: 160)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1L", scope: !2907, file: !100, line: 267, baseType: !104, size: 32, offset: 192)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1U", scope: !2907, file: !100, line: 268, baseType: !104, size: 32, offset: 224)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1L", scope: !2907, file: !100, line: 269, baseType: !104, size: 32, offset: 256)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1U", scope: !2907, file: !100, line: 270, baseType: !104, size: 32, offset: 288)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2907, file: !100, line: 271, baseType: !2920, size: 32, offset: 320)
!2920 = !DICompositeType(tag: DW_TAG_array_type, baseType: !105, size: 32, elements: !2601)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_REGION_EN", scope: !2907, file: !100, line: 272, baseType: !104, size: 32, offset: 352)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2907, file: !100, line: 273, baseType: !2923, size: 523904, offset: 384)
!2923 = !DICompositeType(tag: DW_TAG_array_type, baseType: !105, size: 523904, elements: !2924)
!2924 = !{!2925}
!2925 = !DISubrange(count: 16372)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_ENTRY_N", scope: !2907, file: !100, line: 274, baseType: !2927, size: 512, offset: 524288)
!2927 = !DICompositeType(tag: DW_TAG_array_type, baseType: !104, size: 512, elements: !2928)
!2928 = !{!2929}
!2929 = !DISubrange(count: 16)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_END_ENTRY_N", scope: !2907, file: !100, line: 275, baseType: !2927, size: 512, offset: 524800)
!2931 = !{!2932, !2817}
!2932 = !DIGlobalVariableExpression(var: !2933, expr: !DIExpression())
!2933 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !2819, file: !2820, line: 50, type: !105, isLocal: false, isDefinition: true)
!2934 = !DIGlobalVariableExpression(var: !2935, expr: !DIExpression())
!2935 = distinct !DIGlobalVariable(name: "build_date_time_str", scope: !2936, file: !2941, line: 4, type: !2947, isLocal: false, isDefinition: true)
!2936 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2937, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !2938, splitDebugInlining: false, nameTableKind: None)
!2937 = !DIFile(filename: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/dac_output_data_repeatedly/GCC/build/middleware/MTK/verno/verno.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/dac_output_data_repeatedly/GCC")
!2938 = !{!2934, !2939, !2945}
!2939 = !DIGlobalVariableExpression(var: !2940, expr: !DIExpression())
!2940 = distinct !DIGlobalVariable(name: "sw_verno_str", scope: !2936, file: !2941, line: 5, type: !2942, isLocal: false, isDefinition: true)
!2941 = !DIFile(filename: "build/middleware/MTK/verno/verno.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/dac_output_data_repeatedly/GCC")
!2942 = !DICompositeType(tag: DW_TAG_array_type, baseType: !201, size: 88, elements: !2943)
!2943 = !{!2944}
!2944 = !DISubrange(count: 11)
!2945 = !DIGlobalVariableExpression(var: !2946, expr: !DIExpression())
!2946 = distinct !DIGlobalVariable(name: "hw_verno_str", scope: !2936, file: !2941, line: 6, type: !2942, isLocal: false, isDefinition: true)
!2947 = !DICompositeType(tag: DW_TAG_array_type, baseType: !201, size: 248, elements: !2847)
!2948 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2949, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2950, retainedTypes: !2951, splitDebugInlining: false, nameTableKind: None)
!2949 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_uart_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/dac_output_data_repeatedly/GCC")
!2950 = !{!717, !723, !727, !843}
!2951 = !{!127}
!2952 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2953, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2954, retainedTypes: !2969, splitDebugInlining: false, nameTableKind: None)
!2953 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_i2c_pmic.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/dac_output_data_repeatedly/GCC")
!2954 = !{!2955, !2162, !2963, !969, !952}
!2955 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2163, line: 65, baseType: !7, size: 32, elements: !2956)
!2956 = !{!2957, !2958, !2959, !2960, !2961, !2962}
!2957 = !DIEnumerator(name: "PMIC_I2C_STATUS_ACK_ERROR", value: -105)
!2958 = !DIEnumerator(name: "PMIC_I2C_STATUS_NACK_ERROR", value: -104)
!2959 = !DIEnumerator(name: "PMIC_I2C_STATUS_ERROR", value: -103)
!2960 = !DIEnumerator(name: "PMIC_I2C_STATUS_INVALID_PORT_NUMBER", value: -102)
!2961 = !DIEnumerator(name: "PMIC_I2C_STATUS_INVALID_PARAMETER", value: -101)
!2962 = !DIEnumerator(name: "PMIC_I2C_STATUS_OK", value: 0)
!2963 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !35, line: 302, baseType: !15, size: 32, elements: !2964)
!2964 = !{!2965, !2966, !2967, !2968}
!2965 = !DIEnumerator(name: "HAL_I2C_MASTER_0", value: 0)
!2966 = !DIEnumerator(name: "HAL_I2C_MASTER_1", value: 1)
!2967 = !DIEnumerator(name: "HAL_I2C_MASTER_2", value: 2)
!2968 = !DIEnumerator(name: "HAL_I2C_MASTER_MAX", value: 3)
!2969 = !{!105, !124, !2970}
!2970 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmic_i2c_status_t", file: !2163, line: 72, baseType: !2955)
!2971 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2972, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2973, retainedTypes: !2974, splitDebugInlining: false, nameTableKind: None)
!2972 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_nvic_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/dac_output_data_repeatedly/GCC")
!2973 = !{!213, !732}
!2974 = !{!919, !2975, !105, !3000, !1124}
!2975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2976, size: 32)
!2976 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1063, line: 418, baseType: !2977)
!2977 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1063, line: 395, size: 1120, elements: !2978)
!2978 = !{!2979, !2980, !2981, !2982, !2983, !2984, !2985, !2986, !2987, !2988, !2989, !2990, !2991, !2992, !2993, !2994, !2995, !2996, !2997, !2998, !2999}
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2977, file: !1063, line: 397, baseType: !299, size: 32)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2977, file: !1063, line: 398, baseType: !104, size: 32, offset: 32)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2977, file: !1063, line: 399, baseType: !104, size: 32, offset: 64)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2977, file: !1063, line: 400, baseType: !104, size: 32, offset: 96)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2977, file: !1063, line: 401, baseType: !104, size: 32, offset: 128)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2977, file: !1063, line: 402, baseType: !104, size: 32, offset: 160)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2977, file: !1063, line: 403, baseType: !1073, size: 96, offset: 192)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2977, file: !1063, line: 404, baseType: !104, size: 32, offset: 288)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2977, file: !1063, line: 405, baseType: !104, size: 32, offset: 320)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2977, file: !1063, line: 406, baseType: !104, size: 32, offset: 352)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2977, file: !1063, line: 407, baseType: !104, size: 32, offset: 384)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2977, file: !1063, line: 408, baseType: !104, size: 32, offset: 416)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2977, file: !1063, line: 409, baseType: !104, size: 32, offset: 448)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2977, file: !1063, line: 410, baseType: !104, size: 32, offset: 480)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2977, file: !1063, line: 411, baseType: !1082, size: 64, offset: 512)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2977, file: !1063, line: 412, baseType: !299, size: 32, offset: 576)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2977, file: !1063, line: 413, baseType: !299, size: 32, offset: 608)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2977, file: !1063, line: 414, baseType: !1086, size: 128, offset: 640)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2977, file: !1063, line: 415, baseType: !1088, size: 160, offset: 768)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2977, file: !1063, line: 416, baseType: !1092, size: 160, offset: 928)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2977, file: !1063, line: 417, baseType: !104, size: 32, offset: 1088)
!3000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3001, size: 32)
!3001 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !1063, line: 378, baseType: !3002)
!3002 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1063, line: 363, size: 28704, elements: !3003)
!3003 = !{!3004, !3005, !3006, !3007, !3008, !3009, !3010, !3011, !3012, !3013, !3014, !3015, !3016}
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !3002, file: !1063, line: 365, baseType: !1099, size: 256)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3002, file: !1063, line: 366, baseType: !1101, size: 768, offset: 256)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !3002, file: !1063, line: 367, baseType: !1099, size: 256, offset: 1024)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "RSERVED1", scope: !3002, file: !1063, line: 368, baseType: !1101, size: 768, offset: 1280)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !3002, file: !1063, line: 369, baseType: !1099, size: 256, offset: 2048)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3002, file: !1063, line: 370, baseType: !1101, size: 768, offset: 2304)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !3002, file: !1063, line: 371, baseType: !1099, size: 256, offset: 3072)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3002, file: !1063, line: 372, baseType: !1101, size: 768, offset: 3328)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !3002, file: !1063, line: 373, baseType: !1099, size: 256, offset: 4096)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3002, file: !1063, line: 374, baseType: !1112, size: 1792, offset: 4352)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !3002, file: !1063, line: 375, baseType: !1116, size: 1920, offset: 6144)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3002, file: !1063, line: 376, baseType: !1120, size: 20608, offset: 8064)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !3002, file: !1063, line: 377, baseType: !104, size: 32, offset: 28672)
!3017 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3018, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!3018 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_cfi.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/dac_output_data_repeatedly/GCC")
!3019 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3020, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3021, retainedTypes: !3022, globals: !3023, splitDebugInlining: false, nameTableKind: None)
!3020 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_pmu_wrap_interface.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/dac_output_data_repeatedly/GCC")
!3021 = !{!2271, !2309, !2288, !2363}
!3022 = !{!2317}
!3023 = !{!3024}
!3024 = !DIGlobalVariableExpression(var: !3025, expr: !DIExpression())
!3025 = distinct !DIGlobalVariable(name: "pmu_wrap_api", scope: !3019, file: !3020, line: 75, type: !3026, isLocal: true, isDefinition: true)
!3026 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmu_wrap_api_t", file: !14, line: 55, baseType: !3027)
!3027 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !14, line: 41, size: 416, elements: !3028)
!3028 = !{!3029, !3030, !3034, !3038, !3039, !3043, !3045, !3046, !3050, !3051, !3052, !3053, !3054}
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !3027, file: !14, line: 42, baseType: !2771, size: 32)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "set_reg_value", scope: !3027, file: !14, line: 43, baseType: !3031, size: 32, offset: 32)
!3031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3032, size: 32)
!3032 = !DISubroutineType(types: !3033)
!3033 = !{!321, !989, !989, !989, !989}
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "get_reg_value", scope: !3027, file: !14, line: 44, baseType: !3035, size: 32, offset: 64)
!3035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3036, size: 32)
!3036 = !DISubroutineType(types: !3037)
!3037 = !{!129, !989, !989, !989}
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "ctrl_mtcmos", scope: !3027, file: !14, line: 45, baseType: !2771, size: 32, offset: 96)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "get_vcore_vol", scope: !3027, file: !14, line: 46, baseType: !3040, size: 32, offset: 128)
!3040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3041, size: 32)
!3041 = !DISubroutineType(types: !3042)
!3042 = !{!129}
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "set_vcore_vol", scope: !3027, file: !14, line: 47, baseType: !3044, size: 32, offset: 160)
!3044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2411, size: 32)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "set_vcore_s1_buck", scope: !3027, file: !14, line: 48, baseType: !2771, size: 32, offset: 192)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "ctrl_driver_power", scope: !3027, file: !14, line: 49, baseType: !3047, size: 32, offset: 224)
!3047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3048, size: 32)
!3048 = !DISubroutineType(types: !3049)
!3049 = !{null, !129, !129}
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "audio_lock_voltage", scope: !3027, file: !14, line: 50, baseType: !2771, size: 32, offset: 256)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "audio_unlock_voltage", scope: !3027, file: !14, line: 51, baseType: !2771, size: 32, offset: 288)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "get_usb_input_status", scope: !3027, file: !14, line: 52, baseType: !3040, size: 32, offset: 320)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "enter_power_off", scope: !3027, file: !14, line: 53, baseType: !2771, size: 32, offset: 352)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !3027, file: !14, line: 54, baseType: !2771, size: 32, offset: 384)
!3055 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3056, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!3056 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_log.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/dac_output_data_repeatedly/GCC")
!3057 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3058, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3059, splitDebugInlining: false, nameTableKind: None)
!3058 = !DIFile(filename: "../../../../../project/mt2523_hdk/hal_examples/dac_output_data_repeatedly/src/main.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/dac_output_data_repeatedly/GCC")
!3059 = !{!650, !701, !717, !723, !727, !370, !94}
!3060 = !{!"Ubuntu clang version 14.0.6"}
!3061 = !{i32 7, !"Dwarf Version", i32 2}
!3062 = !{i32 2, !"Debug Info Version", i32 3}
!3063 = !{i32 1, !"wchar_size", i32 4}
!3064 = !{i32 1, !"min_enum_size", i32 4}
!3065 = !{i32 1, !"branch-target-enforcement", i32 0}
!3066 = !{i32 1, !"sign-return-address", i32 0}
!3067 = !{i32 1, !"sign-return-address-all", i32 0}
!3068 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3069 = !{i32 7, !"frame-pointer", i32 2}
!3070 = distinct !DISubprogram(name: "hal_dac_init", scope: !3, file: !3, line: 57, type: !3071, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3074)
!3071 = !DISubroutineType(types: !3072)
!3072 = !{!3073}
!3073 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_dac_status_t", file: !6, line: 114, baseType: !5)
!3074 = !{!3075}
!3075 = !DILocalVariable(name: "irq_flag", scope: !3070, file: !3, line: 59, type: !105)
!3076 = !DILocation(line: 62, column: 16, scope: !3070)
!3077 = !DILocation(line: 0, scope: !3070)
!3078 = !DILocation(line: 65, column: 9, scope: !3079)
!3079 = distinct !DILexicalBlock(scope: !3070, file: !3, line: 65, column: 9)
!3080 = !DILocation(line: 65, column: 22, scope: !3079)
!3081 = !DILocation(line: 65, column: 9, scope: !3070)
!3082 = !DILocation(line: 66, column: 9, scope: !3083)
!3083 = distinct !DILexicalBlock(scope: !3079, file: !3, line: 65, column: 35)
!3084 = !DILocation(line: 69, column: 9, scope: !3083)
!3085 = !DILocation(line: 71, column: 9, scope: !3083)
!3086 = !DILocation(line: 73, column: 22, scope: !3087)
!3087 = distinct !DILexicalBlock(scope: !3079, file: !3, line: 72, column: 12)
!3088 = !DILocation(line: 74, column: 9, scope: !3087)
!3089 = !DILocation(line: 78, column: 5, scope: !3070)
!3090 = !DILocation(line: 81, column: 32, scope: !3091)
!3091 = distinct !DILexicalBlock(scope: !3070, file: !3, line: 81, column: 9)
!3092 = !DILocation(line: 81, column: 29, scope: !3091)
!3093 = !DILocation(line: 81, column: 9, scope: !3070)
!3094 = !DILocation(line: 82, column: 9, scope: !3095)
!3095 = distinct !DILexicalBlock(scope: !3091, file: !3, line: 81, column: 70)
!3096 = !DILocation(line: 83, column: 9, scope: !3095)
!3097 = !DILocation(line: 87, column: 16, scope: !3070)
!3098 = !DILocation(line: 88, column: 16, scope: !3070)
!3099 = !DILocation(line: 91, column: 20, scope: !3070)
!3100 = !DILocation(line: 93, column: 5, scope: !3070)
!3101 = !DILocation(line: 94, column: 1, scope: !3070)
!3102 = distinct !DISubprogram(name: "hal_dac_deinit", scope: !3, file: !3, line: 96, type: !3071, scopeLine: 97, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !320)
!3103 = !DILocation(line: 99, column: 20, scope: !3102)
!3104 = !DILocation(line: 102, column: 25, scope: !3102)
!3105 = !DILocation(line: 103, column: 25, scope: !3102)
!3106 = !DILocation(line: 106, column: 32, scope: !3107)
!3107 = distinct !DILexicalBlock(scope: !3102, file: !3, line: 106, column: 9)
!3108 = !DILocation(line: 106, column: 29, scope: !3107)
!3109 = !DILocation(line: 106, column: 9, scope: !3102)
!3110 = !DILocation(line: 107, column: 9, scope: !3111)
!3111 = distinct !DILexicalBlock(scope: !3107, file: !3, line: 106, column: 71)
!3112 = !DILocation(line: 108, column: 9, scope: !3111)
!3113 = !DILocation(line: 112, column: 5, scope: !3102)
!3114 = !DILocation(line: 115, column: 18, scope: !3102)
!3115 = !DILocation(line: 117, column: 5, scope: !3102)
!3116 = !DILocation(line: 0, scope: !3102)
!3117 = !DILocation(line: 118, column: 1, scope: !3102)
!3118 = distinct !DISubprogram(name: "hal_dac_start_output", scope: !3, file: !3, line: 120, type: !3071, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !320)
!3119 = !DILocation(line: 123, column: 25, scope: !3118)
!3120 = !DILocation(line: 125, column: 5, scope: !3118)
!3121 = distinct !DISubprogram(name: "hal_dac_stop_output", scope: !3, file: !3, line: 128, type: !3071, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !320)
!3122 = !DILocation(line: 131, column: 25, scope: !3121)
!3123 = !DILocation(line: 133, column: 5, scope: !3121)
!3124 = distinct !DISubprogram(name: "hal_dac_write_data", scope: !3, file: !3, line: 136, type: !3125, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3128)
!3125 = !DISubroutineType(types: !3126)
!3126 = !{!3073, !105, !3127, !105}
!3127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !828, size: 32)
!3128 = !{!3129, !3130, !3131, !3132, !3133}
!3129 = !DILocalVariable(name: "start_address", arg: 1, scope: !3124, file: !3, line: 136, type: !105)
!3130 = !DILocalVariable(name: "data", arg: 2, scope: !3124, file: !3, line: 136, type: !3127)
!3131 = !DILocalVariable(name: "length", arg: 3, scope: !3124, file: !3, line: 136, type: !105)
!3132 = !DILocalVariable(name: "end_address", scope: !3124, file: !3, line: 138, type: !105)
!3133 = !DILocalVariable(name: "index", scope: !3124, file: !3, line: 139, type: !105)
!3134 = !DILocation(line: 0, scope: !3124)
!3135 = !DILocation(line: 141, column: 33, scope: !3124)
!3136 = !DILocation(line: 141, column: 42, scope: !3124)
!3137 = !DILocation(line: 144, column: 21, scope: !3138)
!3138 = distinct !DILexicalBlock(scope: !3124, file: !3, line: 144, column: 9)
!3139 = !DILocation(line: 144, column: 9, scope: !3124)
!3140 = !DILocation(line: 150, column: 14, scope: !3141)
!3141 = distinct !DILexicalBlock(scope: !3124, file: !3, line: 150, column: 9)
!3142 = !DILocation(line: 150, column: 9, scope: !3124)
!3143 = !DILocation(line: 156, column: 27, scope: !3144)
!3144 = distinct !DILexicalBlock(scope: !3145, file: !3, line: 156, column: 5)
!3145 = distinct !DILexicalBlock(scope: !3124, file: !3, line: 156, column: 5)
!3146 = !DILocation(line: 156, column: 5, scope: !3145)
!3147 = !DILocation(line: 157, column: 46, scope: !3148)
!3148 = distinct !DILexicalBlock(scope: !3144, file: !3, line: 156, column: 46)
!3149 = !DILocation(line: 157, column: 59, scope: !3148)
!3150 = !DILocation(line: 157, column: 92, scope: !3148)
!3151 = !DILocation(line: 157, column: 55, scope: !3148)
!3152 = !DILocation(line: 157, column: 28, scope: !3148)
!3153 = !DILocation(line: 156, column: 42, scope: !3144)
!3154 = distinct !{!3154, !3146, !3155}
!3155 = !DILocation(line: 158, column: 5, scope: !3145)
!3156 = !DILocation(line: 161, column: 1, scope: !3124)
!3157 = distinct !DISubprogram(name: "hal_dac_configure_output", scope: !3, file: !3, line: 163, type: !3158, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3161)
!3158 = !DISubroutineType(types: !3159)
!3159 = !{!3073, !3160, !105, !105}
!3160 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_dac_mode_t", file: !6, line: 120, baseType: !94)
!3161 = !{!3162, !3163, !3164}
!3162 = !DILocalVariable(name: "mode", arg: 1, scope: !3157, file: !3, line: 163, type: !3160)
!3163 = !DILocalVariable(name: "start_address", arg: 2, scope: !3157, file: !3, line: 163, type: !105)
!3164 = !DILocalVariable(name: "end_address", arg: 3, scope: !3157, file: !3, line: 163, type: !105)
!3165 = !DILocation(line: 0, scope: !3157)
!3166 = !DILocation(line: 166, column: 24, scope: !3167)
!3167 = distinct !DILexicalBlock(scope: !3157, file: !3, line: 166, column: 9)
!3168 = !DILocation(line: 166, column: 39, scope: !3167)
!3169 = !DILocation(line: 166, column: 9, scope: !3157)
!3170 = !DILocation(line: 167, column: 9, scope: !3171)
!3171 = distinct !DILexicalBlock(scope: !3167, file: !3, line: 166, column: 63)
!3172 = !DILocation(line: 168, column: 9, scope: !3171)
!3173 = !DILocation(line: 172, column: 14, scope: !3174)
!3174 = distinct !DILexicalBlock(scope: !3157, file: !3, line: 172, column: 9)
!3175 = !DILocation(line: 172, column: 9, scope: !3157)
!3176 = !DILocation(line: 173, column: 29, scope: !3177)
!3177 = distinct !DILexicalBlock(scope: !3174, file: !3, line: 172, column: 38)
!3178 = !DILocation(line: 180, column: 56, scope: !3157)
!3179 = !DILocation(line: 180, column: 41, scope: !3157)
!3180 = !DILocation(line: 180, column: 24, scope: !3157)
!3181 = !DILocation(line: 182, column: 5, scope: !3157)
!3182 = !DILocation(line: 175, column: 9, scope: !3183)
!3183 = distinct !DILexicalBlock(scope: !3174, file: !3, line: 174, column: 12)
!3184 = !DILocation(line: 176, column: 9, scope: !3183)
!3185 = !DILocation(line: 183, column: 1, scope: !3157)
!3186 = distinct !DISubprogram(name: "hal_gpt_init", scope: !133, file: !133, line: 95, type: !3187, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !132, retainedNodes: !3191)
!3187 = !DISubroutineType(types: !3188)
!3188 = !{!3189, !3190}
!3189 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_status_t", file: !136, line: 393, baseType: !135)
!3190 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_port_t", file: !35, line: 854, baseType: !143)
!3191 = !{!3192}
!3192 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3186, file: !133, line: 95, type: !3190)
!3193 = !DILocation(line: 0, scope: !3186)
!3194 = !DILocation(line: 98, column: 9, scope: !3195)
!3195 = distinct !DILexicalBlock(scope: !3186, file: !133, line: 98, column: 9)
!3196 = !DILocation(line: 98, column: 9, scope: !3186)
!3197 = !DILocation(line: 102, column: 10, scope: !3198)
!3198 = distinct !DILexicalBlock(scope: !3186, file: !133, line: 102, column: 9)
!3199 = !DILocation(line: 102, column: 34, scope: !3198)
!3200 = !DILocation(line: 102, column: 49, scope: !3198)
!3201 = !DILocation(line: 102, column: 69, scope: !3198)
!3202 = !DILocation(line: 103, column: 38, scope: !3198)
!3203 = !{i8 0, i8 2}
!3204 = !DILocation(line: 102, column: 9, scope: !3186)
!3205 = !DILocation(line: 109, column: 12, scope: !3186)
!3206 = !DILocation(line: 109, column: 5, scope: !3186)
!3207 = !DILocation(line: 112, column: 5, scope: !3186)
!3208 = !DILocation(line: 115, column: 44, scope: !3186)
!3209 = !DILocation(line: 118, column: 5, scope: !3186)
!3210 = !DILocation(line: 118, column: 23, scope: !3186)
!3211 = !DILocation(line: 118, column: 35, scope: !3186)
!3212 = !DILocation(line: 121, column: 42, scope: !3186)
!3213 = !DILocation(line: 121, column: 38, scope: !3186)
!3214 = !DILocation(line: 121, column: 5, scope: !3186)
!3215 = !DILocation(line: 121, column: 17, scope: !3186)
!3216 = !DILocation(line: 121, column: 35, scope: !3186)
!3217 = !DILocation(line: 123, column: 5, scope: !3218)
!3218 = distinct !DILexicalBlock(scope: !3186, file: !133, line: 123, column: 5)
!3219 = !DILocation(line: 123, column: 5, scope: !3220)
!3220 = distinct !DILexicalBlock(scope: !3218, file: !133, line: 123, column: 5)
!3221 = !DILocation(line: 123, column: 5, scope: !3222)
!3222 = distinct !DILexicalBlock(scope: !3220, file: !133, line: 123, column: 5)
!3223 = !DILocation(line: 131, column: 1, scope: !3186)
!3224 = distinct !DISubprogram(name: "hal_gpt_is_port_valid", scope: !133, file: !133, line: 81, type: !3225, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !132, retainedNodes: !3227)
!3225 = !DISubroutineType(types: !3226)
!3226 = !{!321, !3190}
!3227 = !{!3228}
!3228 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3224, file: !133, line: 81, type: !3190)
!3229 = !DILocation(line: 0, scope: !3224)
!3230 = !DILocation(line: 84, column: 25, scope: !3231)
!3231 = distinct !DILexicalBlock(scope: !3224, file: !133, line: 84, column: 9)
!3232 = !DILocation(line: 84, column: 35, scope: !3231)
!3233 = !DILocation(line: 84, column: 45, scope: !3231)
!3234 = !DILocation(line: 93, column: 1, scope: !3224)
!3235 = distinct !DISubprogram(name: "hal_gpt_deinit", scope: !133, file: !133, line: 133, type: !3187, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !132, retainedNodes: !3236)
!3236 = !{!3237}
!3237 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3235, file: !133, line: 133, type: !3190)
!3238 = !DILocation(line: 0, scope: !3235)
!3239 = !DILocation(line: 136, column: 9, scope: !3240)
!3240 = distinct !DILexicalBlock(scope: !3235, file: !133, line: 136, column: 9)
!3241 = !DILocation(line: 136, column: 9, scope: !3235)
!3242 = !DILocation(line: 140, column: 9, scope: !3243)
!3243 = distinct !DILexicalBlock(scope: !3235, file: !133, line: 140, column: 9)
!3244 = !DILocation(line: 140, column: 33, scope: !3243)
!3245 = !DILocation(line: 140, column: 48, scope: !3243)
!3246 = !DILocation(line: 140, column: 9, scope: !3235)
!3247 = !DILocation(line: 146, column: 12, scope: !3235)
!3248 = !DILocation(line: 146, column: 5, scope: !3235)
!3249 = !DILocation(line: 149, column: 29, scope: !3235)
!3250 = !DILocation(line: 149, column: 44, scope: !3235)
!3251 = !DILocation(line: 151, column: 29, scope: !3235)
!3252 = !DILocation(line: 151, column: 5, scope: !3235)
!3253 = !DILocation(line: 153, column: 5, scope: !3254)
!3254 = distinct !DILexicalBlock(scope: !3235, file: !133, line: 153, column: 5)
!3255 = !DILocation(line: 159, column: 5, scope: !3235)
!3256 = !DILocation(line: 160, column: 1, scope: !3235)
!3257 = distinct !DISubprogram(name: "hal_gpt_get_free_run_count", scope: !133, file: !133, line: 163, type: !3258, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !132, retainedNodes: !3261)
!3258 = !DISubroutineType(types: !3259)
!3259 = !{!3189, !3260, !1186}
!3260 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_clock_source_t", file: !35, line: 860, baseType: !156)
!3261 = !{!3262, !3263}
!3262 = !DILocalVariable(name: "clock_source", arg: 1, scope: !3257, file: !133, line: 163, type: !3260)
!3263 = !DILocalVariable(name: "count", arg: 2, scope: !3257, file: !133, line: 163, type: !1186)
!3264 = !DILocation(line: 0, scope: !3257)
!3265 = !DILocation(line: 166, column: 9, scope: !3257)
!3266 = !DILocation(line: 167, column: 44, scope: !3267)
!3267 = distinct !DILexicalBlock(scope: !3268, file: !133, line: 167, column: 13)
!3268 = distinct !DILexicalBlock(scope: !3269, file: !133, line: 166, column: 51)
!3269 = distinct !DILexicalBlock(scope: !3257, file: !133, line: 166, column: 9)
!3270 = !DILocation(line: 167, column: 59, scope: !3267)
!3271 = !DILocation(line: 167, column: 13, scope: !3268)
!3272 = !DILocation(line: 170, column: 38, scope: !3273)
!3273 = distinct !DILexicalBlock(scope: !3267, file: !133, line: 167, column: 79)
!3274 = !DILocation(line: 170, column: 13, scope: !3273)
!3275 = !DILocation(line: 172, column: 59, scope: !3273)
!3276 = !DILocation(line: 173, column: 9, scope: !3273)
!3277 = !DILocation(line: 175, column: 36, scope: !3268)
!3278 = !DILocation(line: 175, column: 18, scope: !3268)
!3279 = !DILocation(line: 177, column: 5, scope: !3268)
!3280 = !DILocation(line: 179, column: 44, scope: !3281)
!3281 = distinct !DILexicalBlock(scope: !3282, file: !133, line: 179, column: 13)
!3282 = distinct !DILexicalBlock(scope: !3283, file: !133, line: 178, column: 55)
!3283 = distinct !DILexicalBlock(scope: !3269, file: !133, line: 178, column: 14)
!3284 = !DILocation(line: 179, column: 59, scope: !3281)
!3285 = !DILocation(line: 179, column: 13, scope: !3282)
!3286 = !DILocation(line: 182, column: 38, scope: !3287)
!3287 = distinct !DILexicalBlock(scope: !3281, file: !133, line: 179, column: 79)
!3288 = !DILocation(line: 182, column: 13, scope: !3287)
!3289 = !DILocation(line: 184, column: 59, scope: !3287)
!3290 = !DILocation(line: 186, column: 9, scope: !3287)
!3291 = !DILocation(line: 188, column: 68, scope: !3282)
!3292 = !DILocation(line: 188, column: 50, scope: !3282)
!3293 = !DILocation(line: 188, column: 18, scope: !3282)
!3294 = !DILocation(line: 0, scope: !3269)
!3295 = !DILocation(line: 193, column: 5, scope: !3257)
!3296 = !DILocation(line: 194, column: 1, scope: !3257)
!3297 = distinct !DISubprogram(name: "hal_gpt_get_duration_count", scope: !133, file: !133, line: 196, type: !3298, scopeLine: 197, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !132, retainedNodes: !3300)
!3298 = !DISubroutineType(types: !3299)
!3299 = !{!3189, !105, !105, !1186}
!3300 = !{!3301, !3302, !3303}
!3301 = !DILocalVariable(name: "start_count", arg: 1, scope: !3297, file: !133, line: 196, type: !105)
!3302 = !DILocalVariable(name: "end_count", arg: 2, scope: !3297, file: !133, line: 196, type: !105)
!3303 = !DILocalVariable(name: "duration_count", arg: 3, scope: !3297, file: !133, line: 196, type: !1186)
!3304 = !DILocation(line: 0, scope: !3297)
!3305 = !DILocation(line: 198, column: 24, scope: !3306)
!3306 = distinct !DILexicalBlock(scope: !3297, file: !133, line: 198, column: 9)
!3307 = !DILocation(line: 198, column: 9, scope: !3297)
!3308 = !DILocation(line: 0, scope: !3309)
!3309 = distinct !DILexicalBlock(scope: !3297, file: !133, line: 202, column: 9)
!3310 = !DILocation(line: 208, column: 5, scope: !3297)
!3311 = !DILocation(line: 209, column: 1, scope: !3297)
!3312 = distinct !DISubprogram(name: "hal_gpt_get_running_status", scope: !133, file: !133, line: 211, type: !3313, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !132, retainedNodes: !3316)
!3313 = !DISubroutineType(types: !3314)
!3314 = !{!3189, !3190, !3315}
!3315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !329, size: 32)
!3316 = !{!3317, !3318}
!3317 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3312, file: !133, line: 211, type: !3190)
!3318 = !DILocalVariable(name: "running_status", arg: 2, scope: !3312, file: !133, line: 211, type: !3315)
!3319 = !DILocation(line: 0, scope: !3312)
!3320 = !DILocation(line: 213, column: 18, scope: !3321)
!3321 = distinct !DILexicalBlock(scope: !3312, file: !133, line: 213, column: 9)
!3322 = !DILocation(line: 213, column: 9, scope: !3312)
!3323 = !DILocation(line: 217, column: 47, scope: !3312)
!3324 = !DILocation(line: 217, column: 21, scope: !3312)
!3325 = !DILocation(line: 219, column: 5, scope: !3312)
!3326 = !DILocation(line: 220, column: 1, scope: !3312)
!3327 = distinct !DISubprogram(name: "hal_gpt_register_callback", scope: !133, file: !133, line: 222, type: !3328, scopeLine: 225, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !132, retainedNodes: !3330)
!3328 = !DISubroutineType(types: !3329)
!3329 = !{!3189, !3190, !188, !124}
!3330 = !{!3331, !3332, !3333}
!3331 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3327, file: !133, line: 222, type: !3190)
!3332 = !DILocalVariable(name: "callback", arg: 2, scope: !3327, file: !133, line: 223, type: !188)
!3333 = !DILocalVariable(name: "user_data", arg: 3, scope: !3327, file: !133, line: 224, type: !124)
!3334 = !DILocation(line: 0, scope: !3327)
!3335 = !DILocation(line: 227, column: 9, scope: !3336)
!3336 = distinct !DILexicalBlock(scope: !3327, file: !133, line: 227, column: 9)
!3337 = !DILocation(line: 227, column: 9, scope: !3327)
!3338 = !DILocation(line: 231, column: 34, scope: !3339)
!3339 = distinct !DILexicalBlock(scope: !3327, file: !133, line: 231, column: 9)
!3340 = !DILocation(line: 231, column: 49, scope: !3339)
!3341 = !DILocation(line: 231, column: 69, scope: !3339)
!3342 = !DILocation(line: 232, column: 38, scope: !3339)
!3343 = !DILocation(line: 232, column: 53, scope: !3339)
!3344 = !DILocation(line: 231, column: 9, scope: !3327)
!3345 = !DILocation(line: 237, column: 18, scope: !3346)
!3346 = distinct !DILexicalBlock(scope: !3327, file: !133, line: 237, column: 9)
!3347 = !DILocation(line: 237, column: 9, scope: !3327)
!3348 = !DILocation(line: 245, column: 46, scope: !3327)
!3349 = !DILocation(line: 245, column: 56, scope: !3327)
!3350 = !DILocation(line: 246, column: 46, scope: !3327)
!3351 = !DILocation(line: 246, column: 56, scope: !3327)
!3352 = !DILocation(line: 248, column: 5, scope: !3327)
!3353 = !DILocation(line: 250, column: 5, scope: !3327)
!3354 = !DILocation(line: 252, column: 1, scope: !3327)
!3355 = distinct !DISubprogram(name: "hal_gpt_start_timer_ms", scope: !133, file: !133, line: 256, type: !3356, scopeLine: 257, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !132, retainedNodes: !3359)
!3356 = !DISubroutineType(types: !3357)
!3357 = !{!3189, !3190, !105, !3358}
!3358 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_timer_type_t", file: !136, line: 383, baseType: !179)
!3359 = !{!3360, !3361, !3362, !3363}
!3360 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3355, file: !133, line: 256, type: !3190)
!3361 = !DILocalVariable(name: "timeout_time_ms", arg: 2, scope: !3355, file: !133, line: 256, type: !105)
!3362 = !DILocalVariable(name: "timer_type", arg: 3, scope: !3355, file: !133, line: 256, type: !3358)
!3363 = !DILocalVariable(name: "mask", scope: !3355, file: !133, line: 259, type: !104)
!3364 = !DILocation(line: 0, scope: !3355)
!3365 = !DILocation(line: 259, column: 5, scope: !3355)
!3366 = !DILocation(line: 259, column: 23, scope: !3355)
!3367 = !DILocation(line: 261, column: 9, scope: !3368)
!3368 = distinct !DILexicalBlock(scope: !3355, file: !133, line: 261, column: 9)
!3369 = !DILocation(line: 261, column: 9, scope: !3355)
!3370 = !DILocation(line: 265, column: 34, scope: !3371)
!3371 = distinct !DILexicalBlock(scope: !3355, file: !133, line: 265, column: 9)
!3372 = !DILocation(line: 265, column: 49, scope: !3371)
!3373 = !DILocation(line: 266, column: 13, scope: !3371)
!3374 = !DILocation(line: 266, column: 41, scope: !3371)
!3375 = !DILocation(line: 266, column: 56, scope: !3371)
!3376 = !DILocation(line: 265, column: 9, scope: !3355)
!3377 = !DILocation(line: 271, column: 25, scope: !3378)
!3378 = distinct !DILexicalBlock(scope: !3355, file: !133, line: 271, column: 9)
!3379 = !DILocation(line: 271, column: 9, scope: !3355)
!3380 = !DILocation(line: 282, column: 12, scope: !3355)
!3381 = !DILocation(line: 282, column: 10, scope: !3355)
!3382 = !DILocation(line: 284, column: 5, scope: !3355)
!3383 = !DILocation(line: 286, column: 5, scope: !3355)
!3384 = !DILocation(line: 286, column: 23, scope: !3355)
!3385 = !DILocation(line: 286, column: 34, scope: !3355)
!3386 = !DILocation(line: 287, column: 5, scope: !3355)
!3387 = !DILocation(line: 287, column: 23, scope: !3355)
!3388 = !DILocation(line: 287, column: 34, scope: !3355)
!3389 = !DILocation(line: 290, column: 5, scope: !3355)
!3390 = !DILocation(line: 290, column: 23, scope: !3355)
!3391 = !DILocation(line: 290, column: 37, scope: !3355)
!3392 = !DILocation(line: 291, column: 39, scope: !3355)
!3393 = !DILocation(line: 291, column: 5, scope: !3355)
!3394 = !DILocation(line: 291, column: 23, scope: !3355)
!3395 = !DILocation(line: 291, column: 37, scope: !3355)
!3396 = !DILocation(line: 292, column: 5, scope: !3355)
!3397 = !DILocation(line: 292, column: 23, scope: !3355)
!3398 = !DILocation(line: 292, column: 37, scope: !3355)
!3399 = !DILocation(line: 297, column: 47, scope: !3355)
!3400 = !DILocation(line: 298, column: 33, scope: !3355)
!3401 = !DILocation(line: 296, column: 5, scope: !3355)
!3402 = !DILocation(line: 296, column: 23, scope: !3355)
!3403 = !DILocation(line: 296, column: 31, scope: !3355)
!3404 = !DILocation(line: 300, column: 5, scope: !3355)
!3405 = !DILocation(line: 300, column: 29, scope: !3355)
!3406 = distinct !{!3406, !3404, !3407}
!3407 = !DILocation(line: 300, column: 39, scope: !3355)
!3408 = !DILocation(line: 301, column: 23, scope: !3355)
!3409 = !DILocation(line: 301, column: 33, scope: !3355)
!3410 = !DILocation(line: 302, column: 5, scope: !3355)
!3411 = !DILocation(line: 302, column: 23, scope: !3355)
!3412 = !DILocation(line: 302, column: 34, scope: !3355)
!3413 = !DILocation(line: 303, column: 44, scope: !3355)
!3414 = !DILocation(line: 305, column: 28, scope: !3355)
!3415 = !DILocation(line: 305, column: 5, scope: !3355)
!3416 = !DILocation(line: 306, column: 5, scope: !3355)
!3417 = !DILocation(line: 307, column: 1, scope: !3355)
!3418 = distinct !DISubprogram(name: "hal_gpt_delay_ms", scope: !133, file: !133, line: 310, type: !3419, scopeLine: 311, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !132, retainedNodes: !3421)
!3419 = !DISubroutineType(types: !3420)
!3420 = !{!3189, !105}
!3421 = !{!3422}
!3422 = !DILocalVariable(name: "ms", arg: 1, scope: !3418, file: !133, line: 310, type: !105)
!3423 = !DILocation(line: 0, scope: !3418)
!3424 = !DILocation(line: 313, column: 40, scope: !3425)
!3425 = distinct !DILexicalBlock(scope: !3418, file: !133, line: 313, column: 9)
!3426 = !DILocation(line: 313, column: 55, scope: !3425)
!3427 = !DILocation(line: 313, column: 9, scope: !3418)
!3428 = !DILocation(line: 316, column: 34, scope: !3429)
!3429 = distinct !DILexicalBlock(scope: !3425, file: !133, line: 313, column: 75)
!3430 = !DILocation(line: 316, column: 9, scope: !3429)
!3431 = !DILocation(line: 317, column: 55, scope: !3429)
!3432 = !DILocation(line: 318, column: 5, scope: !3429)
!3433 = !DILocation(line: 320, column: 20, scope: !3418)
!3434 = !DILocation(line: 320, column: 45, scope: !3418)
!3435 = !DILocation(line: 320, column: 5, scope: !3418)
!3436 = !DILocation(line: 322, column: 5, scope: !3418)
!3437 = distinct !DISubprogram(name: "hal_gpt_start_timer_us", scope: !133, file: !133, line: 327, type: !3356, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !132, retainedNodes: !3438)
!3438 = !{!3439, !3440, !3441, !3442}
!3439 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3437, file: !133, line: 327, type: !3190)
!3440 = !DILocalVariable(name: "timeout_time_us", arg: 2, scope: !3437, file: !133, line: 327, type: !105)
!3441 = !DILocalVariable(name: "timer_type", arg: 3, scope: !3437, file: !133, line: 327, type: !3358)
!3442 = !DILocalVariable(name: "mask", scope: !3437, file: !133, line: 329, type: !104)
!3443 = !DILocation(line: 0, scope: !3437)
!3444 = !DILocation(line: 329, column: 5, scope: !3437)
!3445 = !DILocation(line: 329, column: 23, scope: !3437)
!3446 = !DILocation(line: 331, column: 9, scope: !3447)
!3447 = distinct !DILexicalBlock(scope: !3437, file: !133, line: 331, column: 9)
!3448 = !DILocation(line: 331, column: 9, scope: !3437)
!3449 = !DILocation(line: 336, column: 34, scope: !3450)
!3450 = distinct !DILexicalBlock(scope: !3437, file: !133, line: 336, column: 9)
!3451 = !DILocation(line: 336, column: 49, scope: !3450)
!3452 = !DILocation(line: 337, column: 13, scope: !3450)
!3453 = !DILocation(line: 337, column: 41, scope: !3450)
!3454 = !DILocation(line: 337, column: 56, scope: !3450)
!3455 = !DILocation(line: 336, column: 9, scope: !3437)
!3456 = !DILocation(line: 348, column: 5, scope: !3457)
!3457 = distinct !DILexicalBlock(scope: !3437, file: !133, line: 348, column: 5)
!3458 = !DILocation(line: 349, column: 29, scope: !3437)
!3459 = !DILocation(line: 349, column: 49, scope: !3437)
!3460 = !DILocation(line: 351, column: 12, scope: !3437)
!3461 = !DILocation(line: 351, column: 10, scope: !3437)
!3462 = !DILocation(line: 353, column: 5, scope: !3437)
!3463 = !DILocation(line: 355, column: 5, scope: !3437)
!3464 = !DILocation(line: 355, column: 23, scope: !3437)
!3465 = !DILocation(line: 355, column: 34, scope: !3437)
!3466 = !DILocation(line: 356, column: 5, scope: !3437)
!3467 = !DILocation(line: 356, column: 23, scope: !3437)
!3468 = !DILocation(line: 356, column: 34, scope: !3437)
!3469 = !DILocation(line: 359, column: 5, scope: !3437)
!3470 = !DILocation(line: 359, column: 23, scope: !3437)
!3471 = !DILocation(line: 359, column: 37, scope: !3437)
!3472 = !DILocation(line: 360, column: 39, scope: !3437)
!3473 = !DILocation(line: 360, column: 5, scope: !3437)
!3474 = !DILocation(line: 360, column: 23, scope: !3437)
!3475 = !DILocation(line: 360, column: 37, scope: !3437)
!3476 = !DILocation(line: 361, column: 5, scope: !3437)
!3477 = !DILocation(line: 361, column: 23, scope: !3437)
!3478 = !DILocation(line: 361, column: 37, scope: !3437)
!3479 = !DILocation(line: 366, column: 47, scope: !3437)
!3480 = !DILocation(line: 367, column: 33, scope: !3437)
!3481 = !DILocation(line: 365, column: 5, scope: !3437)
!3482 = !DILocation(line: 365, column: 23, scope: !3437)
!3483 = !DILocation(line: 365, column: 31, scope: !3437)
!3484 = !DILocation(line: 369, column: 5, scope: !3437)
!3485 = !DILocation(line: 369, column: 29, scope: !3437)
!3486 = distinct !{!3486, !3484, !3487}
!3487 = !DILocation(line: 369, column: 39, scope: !3437)
!3488 = !DILocation(line: 370, column: 23, scope: !3437)
!3489 = !DILocation(line: 370, column: 33, scope: !3437)
!3490 = !DILocation(line: 371, column: 5, scope: !3437)
!3491 = !DILocation(line: 371, column: 23, scope: !3437)
!3492 = !DILocation(line: 371, column: 34, scope: !3437)
!3493 = !DILocation(line: 373, column: 28, scope: !3437)
!3494 = !DILocation(line: 373, column: 5, scope: !3437)
!3495 = !DILocation(line: 375, column: 44, scope: !3437)
!3496 = !DILocation(line: 377, column: 5, scope: !3437)
!3497 = !DILocation(line: 378, column: 1, scope: !3437)
!3498 = distinct !DISubprogram(name: "hal_gpt_delay_us", scope: !133, file: !133, line: 382, type: !3419, scopeLine: 383, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !132, retainedNodes: !3499)
!3499 = !{!3500}
!3500 = !DILocalVariable(name: "us", arg: 1, scope: !3498, file: !133, line: 382, type: !105)
!3501 = !DILocation(line: 0, scope: !3498)
!3502 = !DILocation(line: 385, column: 40, scope: !3503)
!3503 = distinct !DILexicalBlock(scope: !3498, file: !133, line: 385, column: 9)
!3504 = !DILocation(line: 385, column: 55, scope: !3503)
!3505 = !DILocation(line: 385, column: 9, scope: !3498)
!3506 = !DILocation(line: 388, column: 34, scope: !3507)
!3507 = distinct !DILexicalBlock(scope: !3503, file: !133, line: 385, column: 75)
!3508 = !DILocation(line: 388, column: 9, scope: !3507)
!3509 = !DILocation(line: 390, column: 55, scope: !3507)
!3510 = !DILocation(line: 391, column: 5, scope: !3507)
!3511 = !DILocation(line: 392, column: 20, scope: !3498)
!3512 = !DILocation(line: 392, column: 45, scope: !3498)
!3513 = !DILocation(line: 392, column: 5, scope: !3498)
!3514 = !DILocation(line: 394, column: 5, scope: !3498)
!3515 = distinct !DISubprogram(name: "hal_gpt_stop_timer", scope: !133, file: !133, line: 398, type: !3187, scopeLine: 399, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !132, retainedNodes: !3516)
!3516 = !{!3517, !3518}
!3517 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3515, file: !133, line: 398, type: !3190)
!3518 = !DILocalVariable(name: "mask", scope: !3515, file: !133, line: 400, type: !104)
!3519 = !DILocation(line: 0, scope: !3515)
!3520 = !DILocation(line: 400, column: 5, scope: !3515)
!3521 = !DILocation(line: 400, column: 23, scope: !3515)
!3522 = !DILocation(line: 402, column: 9, scope: !3523)
!3523 = distinct !DILexicalBlock(scope: !3515, file: !133, line: 402, column: 9)
!3524 = !DILocation(line: 402, column: 9, scope: !3515)
!3525 = !DILocation(line: 413, column: 12, scope: !3515)
!3526 = !DILocation(line: 413, column: 10, scope: !3515)
!3527 = !DILocation(line: 415, column: 5, scope: !3515)
!3528 = !DILocation(line: 415, column: 23, scope: !3515)
!3529 = !DILocation(line: 415, column: 34, scope: !3515)
!3530 = !DILocation(line: 418, column: 5, scope: !3515)
!3531 = !DILocation(line: 418, column: 23, scope: !3515)
!3532 = !DILocation(line: 418, column: 34, scope: !3515)
!3533 = !DILocation(line: 420, column: 5, scope: !3515)
!3534 = !DILocation(line: 420, column: 23, scope: !3515)
!3535 = !DILocation(line: 420, column: 35, scope: !3515)
!3536 = !DILocation(line: 422, column: 29, scope: !3515)
!3537 = !DILocation(line: 422, column: 44, scope: !3515)
!3538 = !DILocation(line: 423, column: 28, scope: !3515)
!3539 = !DILocation(line: 423, column: 5, scope: !3515)
!3540 = !DILocation(line: 425, column: 33, scope: !3541)
!3541 = distinct !DILexicalBlock(scope: !3515, file: !133, line: 425, column: 9)
!3542 = !DILocation(line: 425, column: 9, scope: !3515)
!3543 = !DILocation(line: 426, column: 9, scope: !3544)
!3544 = distinct !DILexicalBlock(scope: !3545, file: !133, line: 426, column: 9)
!3545 = distinct !DILexicalBlock(scope: !3541, file: !133, line: 425, column: 62)
!3546 = !DILocation(line: 427, column: 53, scope: !3545)
!3547 = !DILocation(line: 428, column: 5, scope: !3545)
!3548 = !DILocation(line: 430, column: 1, scope: !3515)
!3549 = distinct !DISubprogram(name: "hal_gpt_sw_get_timer", scope: !133, file: !133, line: 434, type: !3550, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !132, retainedNodes: !3552)
!3550 = !DISubroutineType(types: !3551)
!3551 = !{!3189, !1186}
!3552 = !{!3553, !3554, !3555}
!3553 = !DILocalVariable(name: "handle", arg: 1, scope: !3549, file: !133, line: 434, type: !1186)
!3554 = !DILocalVariable(name: "timer", scope: !3549, file: !133, line: 436, type: !105)
!3555 = !DILocalVariable(name: "mask", scope: !3549, file: !133, line: 437, type: !105)
!3556 = !DILocation(line: 0, scope: !3549)
!3557 = !DILocation(line: 439, column: 24, scope: !3558)
!3558 = distinct !DILexicalBlock(scope: !3549, file: !133, line: 439, column: 9)
!3559 = !DILocation(line: 439, column: 41, scope: !3558)
!3560 = !DILocation(line: 439, column: 9, scope: !3549)
!3561 = !DILocation(line: 443, column: 16, scope: !3562)
!3562 = distinct !DILexicalBlock(scope: !3549, file: !133, line: 443, column: 9)
!3563 = !DILocation(line: 443, column: 9, scope: !3549)
!3564 = !DILocation(line: 448, column: 12, scope: !3549)
!3565 = !DILocation(line: 450, column: 15, scope: !3549)
!3566 = !DILocation(line: 451, column: 21, scope: !3549)
!3567 = !DILocation(line: 451, column: 13, scope: !3549)
!3568 = !DILocation(line: 452, column: 33, scope: !3549)
!3569 = !DILocation(line: 452, column: 41, scope: !3549)
!3570 = !DILocation(line: 453, column: 36, scope: !3549)
!3571 = !DILocation(line: 455, column: 5, scope: !3549)
!3572 = !DILocation(line: 456, column: 5, scope: !3549)
!3573 = !DILocation(line: 457, column: 1, scope: !3549)
!3574 = distinct !DISubprogram(name: "hal_gpt_sw_free_timer", scope: !133, file: !133, line: 459, type: !3419, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !132, retainedNodes: !3575)
!3575 = !{!3576, !3577}
!3576 = !DILocalVariable(name: "handle", arg: 1, scope: !3574, file: !133, line: 459, type: !105)
!3577 = !DILocalVariable(name: "timer", scope: !3574, file: !133, line: 461, type: !104)
!3578 = !DILocation(line: 0, scope: !3574)
!3579 = !DILocation(line: 461, column: 5, scope: !3574)
!3580 = !DILocation(line: 461, column: 23, scope: !3574)
!3581 = !DILocation(line: 463, column: 17, scope: !3582)
!3582 = distinct !DILexicalBlock(scope: !3574, file: !133, line: 463, column: 9)
!3583 = !DILocation(line: 463, column: 37, scope: !3582)
!3584 = !DILocation(line: 463, column: 9, scope: !3574)
!3585 = !DILocation(line: 467, column: 20, scope: !3574)
!3586 = !DILocation(line: 467, column: 11, scope: !3574)
!3587 = !DILocation(line: 469, column: 24, scope: !3588)
!3588 = distinct !DILexicalBlock(scope: !3574, file: !133, line: 469, column: 9)
!3589 = !DILocation(line: 469, column: 41, scope: !3588)
!3590 = !DILocation(line: 469, column: 9, scope: !3574)
!3591 = !DILocation(line: 473, column: 30, scope: !3592)
!3592 = distinct !DILexicalBlock(scope: !3574, file: !133, line: 473, column: 9)
!3593 = !DILocation(line: 473, column: 37, scope: !3592)
!3594 = !DILocation(line: 473, column: 9, scope: !3574)
!3595 = !DILocation(line: 477, column: 30, scope: !3596)
!3596 = distinct !DILexicalBlock(scope: !3574, file: !133, line: 477, column: 9)
!3597 = !DILocation(line: 477, column: 37, scope: !3596)
!3598 = !DILocation(line: 477, column: 45, scope: !3596)
!3599 = !DILocation(line: 477, column: 9, scope: !3574)
!3600 = !DILocation(line: 481, column: 26, scope: !3574)
!3601 = !DILocation(line: 481, column: 33, scope: !3574)
!3602 = !DILocation(line: 481, column: 41, scope: !3574)
!3603 = !DILocation(line: 482, column: 36, scope: !3574)
!3604 = !DILocation(line: 484, column: 5, scope: !3574)
!3605 = !DILocation(line: 485, column: 1, scope: !3574)
!3606 = distinct !DISubprogram(name: "hal_gpt_sw_start_timer_ms", scope: !133, file: !133, line: 487, type: !3607, scopeLine: 488, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !132, retainedNodes: !3609)
!3607 = !DISubroutineType(types: !3608)
!3608 = !{!3189, !105, !105, !188, !124}
!3609 = !{!3610, !3611, !3612, !3613, !3614, !3615, !3616}
!3610 = !DILocalVariable(name: "handle", arg: 1, scope: !3606, file: !133, line: 487, type: !105)
!3611 = !DILocalVariable(name: "timeout_time_ms", arg: 2, scope: !3606, file: !133, line: 487, type: !105)
!3612 = !DILocalVariable(name: "callback", arg: 3, scope: !3606, file: !133, line: 487, type: !188)
!3613 = !DILocalVariable(name: "user_data", arg: 4, scope: !3606, file: !133, line: 487, type: !124)
!3614 = !DILocalVariable(name: "current_time", scope: !3606, file: !133, line: 489, type: !105)
!3615 = !DILocalVariable(name: "mask", scope: !3606, file: !133, line: 490, type: !105)
!3616 = !DILocalVariable(name: "timer", scope: !3606, file: !133, line: 491, type: !105)
!3617 = !DILocation(line: 0, scope: !3606)
!3618 = !DILocation(line: 493, column: 17, scope: !3619)
!3619 = distinct !DILexicalBlock(scope: !3606, file: !133, line: 493, column: 9)
!3620 = !DILocation(line: 493, column: 37, scope: !3619)
!3621 = !DILocation(line: 493, column: 9, scope: !3606)
!3622 = !DILocation(line: 497, column: 20, scope: !3606)
!3623 = !DILocation(line: 503, column: 37, scope: !3624)
!3624 = distinct !DILexicalBlock(scope: !3606, file: !133, line: 503, column: 9)
!3625 = !DILocation(line: 503, column: 9, scope: !3606)
!3626 = !DILocation(line: 507, column: 37, scope: !3627)
!3627 = distinct !DILexicalBlock(scope: !3606, file: !133, line: 507, column: 9)
!3628 = !DILocation(line: 507, column: 45, scope: !3627)
!3629 = !DILocation(line: 507, column: 9, scope: !3606)
!3630 = !DILocation(line: 511, column: 25, scope: !3631)
!3631 = distinct !DILexicalBlock(scope: !3606, file: !133, line: 511, column: 9)
!3632 = !DILocation(line: 511, column: 9, scope: !3606)
!3633 = !DILocation(line: 516, column: 12, scope: !3606)
!3634 = !DILocation(line: 519, column: 30, scope: !3606)
!3635 = !DILocation(line: 521, column: 24, scope: !3636)
!3636 = distinct !DILexicalBlock(scope: !3606, file: !133, line: 521, column: 9)
!3637 = !DILocation(line: 521, column: 38, scope: !3636)
!3638 = !DILocation(line: 521, column: 9, scope: !3606)
!3639 = !DILocation(line: 522, column: 9, scope: !3640)
!3640 = distinct !DILexicalBlock(scope: !3636, file: !133, line: 521, column: 48)
!3641 = !DILocation(line: 523, column: 9, scope: !3640)
!3642 = !DILocation(line: 524, column: 38, scope: !3640)
!3643 = !DILocation(line: 525, column: 5, scope: !3640)
!3644 = !DILocation(line: 526, column: 5, scope: !3606)
!3645 = !DILocation(line: 528, column: 23, scope: !3646)
!3646 = distinct !DILexicalBlock(scope: !3606, file: !133, line: 528, column: 8)
!3647 = !DILocation(line: 528, column: 41, scope: !3646)
!3648 = !DILocation(line: 528, column: 8, scope: !3606)
!3649 = !DILocation(line: 529, column: 51, scope: !3650)
!3650 = distinct !DILexicalBlock(scope: !3646, file: !133, line: 528, column: 51)
!3651 = !DILocation(line: 529, column: 24, scope: !3650)
!3652 = !DILocation(line: 530, column: 5, scope: !3650)
!3653 = !DILocation(line: 0, scope: !3646)
!3654 = !DILocation(line: 534, column: 34, scope: !3606)
!3655 = !DILocation(line: 535, column: 39, scope: !3606)
!3656 = !DILocation(line: 537, column: 49, scope: !3606)
!3657 = !DILocation(line: 538, column: 80, scope: !3606)
!3658 = !DILocation(line: 538, column: 33, scope: !3606)
!3659 = !DILocation(line: 538, column: 49, scope: !3606)
!3660 = !DILocation(line: 539, column: 50, scope: !3606)
!3661 = !DILocation(line: 539, column: 61, scope: !3606)
!3662 = !DILocation(line: 540, column: 50, scope: !3606)
!3663 = !DILocation(line: 540, column: 61, scope: !3606)
!3664 = !DILocation(line: 542, column: 5, scope: !3606)
!3665 = !DILocation(line: 546, column: 30, scope: !3606)
!3666 = !DILocation(line: 548, column: 5, scope: !3606)
!3667 = !DILocation(line: 550, column: 5, scope: !3606)
!3668 = !DILocation(line: 551, column: 1, scope: !3606)
!3669 = distinct !DISubprogram(name: "hal_gpt_sw_stop_timer_ms", scope: !133, file: !133, line: 553, type: !3419, scopeLine: 554, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !132, retainedNodes: !3670)
!3670 = !{!3671, !3672, !3673, !3674}
!3671 = !DILocalVariable(name: "handle", arg: 1, scope: !3669, file: !133, line: 553, type: !105)
!3672 = !DILocalVariable(name: "current_time", scope: !3669, file: !133, line: 555, type: !105)
!3673 = !DILocalVariable(name: "mask", scope: !3669, file: !133, line: 556, type: !105)
!3674 = !DILocalVariable(name: "timer", scope: !3669, file: !133, line: 557, type: !105)
!3675 = !DILocation(line: 0, scope: !3669)
!3676 = !DILocation(line: 559, column: 17, scope: !3677)
!3677 = distinct !DILexicalBlock(scope: !3669, file: !133, line: 559, column: 9)
!3678 = !DILocation(line: 559, column: 37, scope: !3677)
!3679 = !DILocation(line: 559, column: 9, scope: !3669)
!3680 = !DILocation(line: 563, column: 20, scope: !3669)
!3681 = !DILocation(line: 565, column: 37, scope: !3682)
!3682 = distinct !DILexicalBlock(scope: !3669, file: !133, line: 565, column: 9)
!3683 = !DILocation(line: 565, column: 48, scope: !3682)
!3684 = !DILocation(line: 565, column: 9, scope: !3669)
!3685 = !DILocation(line: 569, column: 37, scope: !3686)
!3686 = distinct !DILexicalBlock(scope: !3669, file: !133, line: 569, column: 9)
!3687 = !DILocation(line: 569, column: 45, scope: !3686)
!3688 = !DILocation(line: 569, column: 9, scope: !3669)
!3689 = !DILocation(line: 574, column: 12, scope: !3669)
!3690 = !DILocation(line: 577, column: 30, scope: !3669)
!3691 = !DILocation(line: 578, column: 5, scope: !3669)
!3692 = !DILocation(line: 579, column: 30, scope: !3669)
!3693 = !DILocation(line: 581, column: 23, scope: !3694)
!3694 = distinct !DILexicalBlock(scope: !3669, file: !133, line: 581, column: 8)
!3695 = !DILocation(line: 581, column: 41, scope: !3694)
!3696 = !DILocation(line: 581, column: 8, scope: !3669)
!3697 = !DILocation(line: 582, column: 51, scope: !3698)
!3698 = distinct !DILexicalBlock(scope: !3694, file: !133, line: 581, column: 51)
!3699 = !DILocation(line: 582, column: 24, scope: !3698)
!3700 = !DILocation(line: 583, column: 5, scope: !3698)
!3701 = !DILocation(line: 0, scope: !3694)
!3702 = !DILocation(line: 587, column: 34, scope: !3669)
!3703 = !DILocation(line: 588, column: 39, scope: !3669)
!3704 = !DILocation(line: 590, column: 44, scope: !3669)
!3705 = !DILocation(line: 592, column: 24, scope: !3706)
!3706 = distinct !DILexicalBlock(scope: !3669, file: !133, line: 592, column: 9)
!3707 = !DILocation(line: 592, column: 44, scope: !3706)
!3708 = !DILocation(line: 592, column: 9, scope: !3669)
!3709 = !DILocation(line: 593, column: 9, scope: !3710)
!3710 = distinct !DILexicalBlock(scope: !3706, file: !133, line: 592, column: 50)
!3711 = !DILocation(line: 594, column: 5, scope: !3710)
!3712 = !DILocation(line: 598, column: 30, scope: !3669)
!3713 = !DILocation(line: 599, column: 5, scope: !3669)
!3714 = !DILocation(line: 601, column: 5, scope: !3669)
!3715 = !DILocation(line: 603, column: 1, scope: !3669)
!3716 = distinct !DISubprogram(name: "hal_gpt_sw_get_remaining_time_ms", scope: !133, file: !133, line: 605, type: !3717, scopeLine: 606, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !132, retainedNodes: !3719)
!3717 = !DISubroutineType(types: !3718)
!3718 = !{!3189, !105, !1186}
!3719 = !{!3720, !3721, !3722, !3723, !3724}
!3720 = !DILocalVariable(name: "handle", arg: 1, scope: !3716, file: !133, line: 605, type: !105)
!3721 = !DILocalVariable(name: "remaing_time", arg: 2, scope: !3716, file: !133, line: 605, type: !1186)
!3722 = !DILocalVariable(name: "current_time", scope: !3716, file: !133, line: 607, type: !105)
!3723 = !DILocalVariable(name: "mask", scope: !3716, file: !133, line: 608, type: !105)
!3724 = !DILocalVariable(name: "timer", scope: !3716, file: !133, line: 609, type: !105)
!3725 = !DILocation(line: 0, scope: !3716)
!3726 = !DILocation(line: 611, column: 17, scope: !3727)
!3727 = distinct !DILexicalBlock(scope: !3716, file: !133, line: 611, column: 9)
!3728 = !DILocation(line: 611, column: 37, scope: !3727)
!3729 = !DILocation(line: 611, column: 9, scope: !3716)
!3730 = !DILocation(line: 615, column: 20, scope: !3716)
!3731 = !DILocation(line: 617, column: 37, scope: !3732)
!3732 = distinct !DILexicalBlock(scope: !3716, file: !133, line: 617, column: 9)
!3733 = !DILocation(line: 617, column: 45, scope: !3732)
!3734 = !DILocation(line: 617, column: 9, scope: !3716)
!3735 = !DILocation(line: 622, column: 12, scope: !3716)
!3736 = !DILocation(line: 624, column: 35, scope: !3716)
!3737 = !DILocation(line: 624, column: 51, scope: !3716)
!3738 = !DILocation(line: 624, column: 76, scope: !3716)
!3739 = !DILocation(line: 624, column: 49, scope: !3716)
!3740 = !DILocation(line: 626, column: 37, scope: !3741)
!3741 = distinct !DILexicalBlock(scope: !3716, file: !133, line: 626, column: 9)
!3742 = !DILocation(line: 626, column: 9, scope: !3716)
!3743 = !DILocation(line: 0, scope: !3741)
!3744 = !DILocation(line: 632, column: 5, scope: !3716)
!3745 = !DILocation(line: 634, column: 5, scope: !3716)
!3746 = !DILocation(line: 636, column: 1, scope: !3716)
!3747 = distinct !DISubprogram(name: "gpt_calibrate_algorithm", scope: !205, file: !205, line: 56, type: !3748, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !204, retainedNodes: !3750)
!3748 = !DISubroutineType(types: !3749)
!3749 = !{!105, !105, !105, !105}
!3750 = !{!3751, !3752, !3753, !3754, !3756, !3757}
!3751 = !DILocalVariable(name: "mul1", arg: 1, scope: !3747, file: !205, line: 56, type: !105)
!3752 = !DILocalVariable(name: "mul2", arg: 2, scope: !3747, file: !205, line: 56, type: !105)
!3753 = !DILocalVariable(name: "div", arg: 3, scope: !3747, file: !205, line: 56, type: !105)
!3754 = !DILocalVariable(name: "data1", scope: !3747, file: !205, line: 58, type: !3755)
!3755 = !DICompositeType(tag: DW_TAG_array_type, baseType: !105, size: 64, elements: !484)
!3756 = !DILocalVariable(name: "data2", scope: !3747, file: !205, line: 59, type: !3755)
!3757 = !DILocalVariable(name: "result", scope: !3747, file: !205, line: 60, type: !3755)
!3758 = !DILocation(line: 0, scope: !3747)
!3759 = !DILocation(line: 63, column: 22, scope: !3747)
!3760 = !DILocation(line: 63, column: 32, scope: !3747)
!3761 = !DILocation(line: 64, column: 23, scope: !3747)
!3762 = !DILocation(line: 64, column: 40, scope: !3747)
!3763 = !DILocation(line: 66, column: 27, scope: !3747)
!3764 = !DILocation(line: 67, column: 27, scope: !3747)
!3765 = !DILocation(line: 67, column: 44, scope: !3747)
!3766 = !DILocation(line: 69, column: 26, scope: !3747)
!3767 = !DILocation(line: 70, column: 36, scope: !3747)
!3768 = !DILocation(line: 70, column: 43, scope: !3747)
!3769 = !DILocation(line: 70, column: 55, scope: !3747)
!3770 = !DILocation(line: 72, column: 34, scope: !3747)
!3771 = !DILocation(line: 72, column: 41, scope: !3747)
!3772 = !DILocation(line: 72, column: 5, scope: !3747)
!3773 = distinct !DISubprogram(name: "gpt_current_count", scope: !205, file: !205, line: 75, type: !3774, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !204, retainedNodes: !3776)
!3774 = !DISubroutineType(types: !3775)
!3775 = !{!105, !291}
!3776 = !{!3777}
!3777 = !DILocalVariable(name: "gpt", arg: 1, scope: !3773, file: !205, line: 75, type: !291)
!3778 = !DILocation(line: 0, scope: !3773)
!3779 = !DILocation(line: 77, column: 17, scope: !3773)
!3780 = !DILocation(line: 77, column: 5, scope: !3773)
!3781 = distinct !DISubprogram(name: "gpt_convert_ms_to_32k_count", scope: !205, file: !205, line: 81, type: !3782, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !204, retainedNodes: !3784)
!3782 = !DISubroutineType(types: !3783)
!3783 = !{!105, !105}
!3784 = !{!3785}
!3785 = !DILocalVariable(name: "ms", arg: 1, scope: !3781, file: !205, line: 81, type: !105)
!3786 = !DILocation(line: 0, scope: !3781)
!3787 = !DILocation(line: 83, column: 27, scope: !3781)
!3788 = !DILocation(line: 83, column: 37, scope: !3781)
!3789 = !DILocation(line: 83, column: 43, scope: !3781)
!3790 = !DILocation(line: 83, column: 32, scope: !3781)
!3791 = !DILocation(line: 83, column: 53, scope: !3781)
!3792 = !DILocation(line: 83, column: 59, scope: !3781)
!3793 = !DILocation(line: 83, column: 48, scope: !3781)
!3794 = !DILocation(line: 83, column: 70, scope: !3781)
!3795 = !DILocation(line: 83, column: 76, scope: !3781)
!3796 = !DILocation(line: 83, column: 65, scope: !3781)
!3797 = !DILocation(line: 83, column: 5, scope: !3781)
!3798 = !DILocation(line: 90, column: 9, scope: !3799)
!3799 = distinct !DILexicalBlock(scope: !317, file: !205, line: 90, column: 9)
!3800 = !DILocation(line: 90, column: 9, scope: !317)
!3801 = !DILocation(line: 91, column: 13, scope: !3802)
!3802 = distinct !DILexicalBlock(scope: !3803, file: !205, line: 91, column: 13)
!3803 = distinct !DILexicalBlock(scope: !3799, file: !205, line: 90, column: 24)
!3804 = !DILocation(line: 91, column: 13, scope: !3803)
!3805 = !DILocation(line: 92, column: 32, scope: !3806)
!3806 = distinct !DILexicalBlock(scope: !3802, file: !205, line: 91, column: 41)
!3807 = !DILocation(line: 92, column: 30, scope: !3806)
!3808 = !DILocation(line: 93, column: 41, scope: !3809)
!3809 = distinct !DILexicalBlock(scope: !3806, file: !205, line: 93, column: 17)
!3810 = !DILocation(line: 0, scope: !3802)
!3811 = !DILocation(line: 105, column: 1, scope: !317)
!3812 = distinct !DISubprogram(name: "gpt_open_clock_source", scope: !205, file: !205, line: 107, type: !318, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !204, retainedNodes: !320)
!3813 = !DILocation(line: 109, column: 9, scope: !3814)
!3814 = distinct !DILexicalBlock(scope: !3812, file: !205, line: 109, column: 9)
!3815 = !DILocation(line: 109, column: 9, scope: !3812)
!3816 = !DILocation(line: 110, column: 9, scope: !3817)
!3817 = distinct !DILexicalBlock(scope: !3814, file: !205, line: 109, column: 61)
!3818 = !DILocation(line: 111, column: 5, scope: !3817)
!3819 = !DILocation(line: 112, column: 1, scope: !3812)
!3820 = distinct !DISubprogram(name: "gpt_clock_calibrate_us_to_count", scope: !205, file: !205, line: 114, type: !3782, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !204, retainedNodes: !3821)
!3821 = !{!3822}
!3822 = !DILocalVariable(name: "time_us", arg: 1, scope: !3820, file: !205, line: 114, type: !105)
!3823 = !DILocation(line: 0, scope: !3820)
!3824 = !DILocation(line: 116, column: 5, scope: !3820)
!3825 = !DILocation(line: 118, column: 9, scope: !3826)
!3826 = distinct !DILexicalBlock(scope: !3820, file: !205, line: 118, column: 9)
!3827 = !DILocation(line: 118, column: 9, scope: !3820)
!3828 = !DILocation(line: 120, column: 49, scope: !3829)
!3829 = distinct !DILexicalBlock(scope: !3826, file: !205, line: 118, column: 37)
!3830 = !DILocation(line: 120, column: 16, scope: !3829)
!3831 = !DILocation(line: 120, column: 9, scope: !3829)
!3832 = !DILocation(line: 0, scope: !3826)
!3833 = !DILocation(line: 125, column: 1, scope: !3820)
!3834 = distinct !DISubprogram(name: "gpt_clock_calibrate_count_to_us", scope: !205, file: !205, line: 127, type: !3782, scopeLine: 128, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !204, retainedNodes: !3835)
!3835 = !{!3836}
!3836 = !DILocalVariable(name: "count", arg: 1, scope: !3834, file: !205, line: 127, type: !105)
!3837 = !DILocation(line: 0, scope: !3834)
!3838 = !DILocation(line: 129, column: 5, scope: !3834)
!3839 = !DILocation(line: 131, column: 9, scope: !3840)
!3840 = distinct !DILexicalBlock(scope: !3834, file: !205, line: 131, column: 9)
!3841 = !DILocation(line: 131, column: 9, scope: !3834)
!3842 = !DILocation(line: 133, column: 69, scope: !3843)
!3843 = distinct !DILexicalBlock(scope: !3840, file: !205, line: 131, column: 37)
!3844 = !DILocation(line: 133, column: 16, scope: !3843)
!3845 = !DILocation(line: 133, column: 9, scope: !3843)
!3846 = !DILocation(line: 0, scope: !3840)
!3847 = !DILocation(line: 138, column: 1, scope: !3834)
!3848 = distinct !DISubprogram(name: "gpt_start_free_run_timer", scope: !205, file: !205, line: 141, type: !3849, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !204, retainedNodes: !3851)
!3849 = !DISubroutineType(types: !3850)
!3850 = !{null, !291, !105, !105}
!3851 = !{!3852, !3853, !3854}
!3852 = !DILocalVariable(name: "gpt", arg: 1, scope: !3848, file: !205, line: 141, type: !291)
!3853 = !DILocalVariable(name: "clock_source", arg: 2, scope: !3848, file: !205, line: 141, type: !105)
!3854 = !DILocalVariable(name: "divide", arg: 3, scope: !3848, file: !205, line: 141, type: !105)
!3855 = !DILocation(line: 0, scope: !3848)
!3856 = !DILocation(line: 143, column: 5, scope: !3848)
!3857 = !DILocation(line: 145, column: 33, scope: !3848)
!3858 = !DILocation(line: 145, column: 10, scope: !3848)
!3859 = !DILocation(line: 145, column: 18, scope: !3848)
!3860 = !DILocation(line: 148, column: 10, scope: !3848)
!3861 = !DILocation(line: 148, column: 18, scope: !3848)
!3862 = !DILocation(line: 149, column: 1, scope: !3848)
!3863 = distinct !DISubprogram(name: "gpt_delay_time", scope: !205, file: !205, line: 151, type: !3864, scopeLine: 152, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !204, retainedNodes: !3866)
!3864 = !DISubroutineType(types: !3865)
!3865 = !{null, !291, !828}
!3866 = !{!3867, !3868, !3869, !3870}
!3867 = !DILocalVariable(name: "gpt", arg: 1, scope: !3863, file: !205, line: 151, type: !291)
!3868 = !DILocalVariable(name: "count", arg: 2, scope: !3863, file: !205, line: 151, type: !828)
!3869 = !DILocalVariable(name: "end_count", scope: !3863, file: !205, line: 153, type: !105)
!3870 = !DILocalVariable(name: "current", scope: !3863, file: !205, line: 153, type: !105)
!3871 = !DILocation(line: 0, scope: !3863)
!3872 = !DILocation(line: 155, column: 17, scope: !3863)
!3873 = !DILocation(line: 156, column: 25, scope: !3863)
!3874 = !DILocation(line: 156, column: 33, scope: !3863)
!3875 = !DILocation(line: 159, column: 19, scope: !3876)
!3876 = distinct !DILexicalBlock(scope: !3863, file: !205, line: 159, column: 9)
!3877 = !DILocation(line: 159, column: 9, scope: !3863)
!3878 = !DILocation(line: 160, column: 16, scope: !3879)
!3879 = distinct !DILexicalBlock(scope: !3876, file: !205, line: 159, column: 30)
!3880 = !DILocation(line: 160, column: 39, scope: !3879)
!3881 = !DILocation(line: 160, column: 9, scope: !3879)
!3882 = distinct !{!3882, !3881, !3883}
!3883 = !DILocation(line: 160, column: 51, scope: !3879)
!3884 = !DILocation(line: 162, column: 16, scope: !3885)
!3885 = distinct !DILexicalBlock(scope: !3876, file: !205, line: 161, column: 12)
!3886 = !DILocation(line: 162, column: 39, scope: !3885)
!3887 = !DILocation(line: 162, column: 9, scope: !3885)
!3888 = distinct !{!3888, !3887, !3889}
!3889 = !DILocation(line: 162, column: 50, scope: !3885)
!3890 = !DILocation(line: 163, column: 16, scope: !3885)
!3891 = !DILocation(line: 163, column: 39, scope: !3885)
!3892 = !DILocation(line: 163, column: 9, scope: !3885)
!3893 = distinct !{!3893, !3892, !3894}
!3894 = !DILocation(line: 163, column: 51, scope: !3885)
!3895 = !DILocation(line: 165, column: 1, scope: !3863)
!3896 = distinct !DISubprogram(name: "gpt_reset_default_timer", scope: !205, file: !205, line: 166, type: !3897, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !204, retainedNodes: !3899)
!3897 = !DISubroutineType(types: !3898)
!3898 = !{null, !291}
!3899 = !{!3900}
!3900 = !DILocalVariable(name: "gpt", arg: 1, scope: !3896, file: !205, line: 166, type: !291)
!3901 = !DILocation(line: 0, scope: !3896)
!3902 = !DILocation(line: 168, column: 10, scope: !3896)
!3903 = !DILocation(line: 168, column: 22, scope: !3896)
!3904 = !DILocation(line: 169, column: 10, scope: !3896)
!3905 = !DILocation(line: 169, column: 22, scope: !3896)
!3906 = !DILocation(line: 170, column: 21, scope: !3896)
!3907 = !DILocation(line: 171, column: 5, scope: !3896)
!3908 = !DILocation(line: 171, column: 16, scope: !3896)
!3909 = distinct !{!3909, !3907, !3910}
!3910 = !DILocation(line: 171, column: 26, scope: !3896)
!3911 = !DILocation(line: 172, column: 10, scope: !3896)
!3912 = !DILocation(line: 172, column: 22, scope: !3896)
!3913 = !DILocation(line: 173, column: 10, scope: !3896)
!3914 = !DILocation(line: 173, column: 22, scope: !3896)
!3915 = !DILocation(line: 174, column: 10, scope: !3896)
!3916 = !DILocation(line: 174, column: 22, scope: !3896)
!3917 = !DILocation(line: 176, column: 13, scope: !3918)
!3918 = distinct !DILexicalBlock(scope: !3896, file: !205, line: 176, column: 9)
!3919 = !DILocation(line: 176, column: 9, scope: !3896)
!3920 = !DILocation(line: 177, column: 27, scope: !3921)
!3921 = distinct !DILexicalBlock(scope: !3918, file: !205, line: 176, column: 22)
!3922 = !DILocation(line: 178, column: 5, scope: !3921)
!3923 = !DILocation(line: 179, column: 1, scope: !3896)
!3924 = distinct !DISubprogram(name: "gpt_save_and_mask_interrupt", scope: !205, file: !205, line: 181, type: !3774, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !204, retainedNodes: !3925)
!3925 = !{!3926, !3927}
!3926 = !DILocalVariable(name: "gpt", arg: 1, scope: !3924, file: !205, line: 181, type: !291)
!3927 = !DILocalVariable(name: "mask", scope: !3924, file: !205, line: 183, type: !104)
!3928 = !DILocation(line: 0, scope: !3924)
!3929 = !DILocation(line: 183, column: 5, scope: !3924)
!3930 = !DILocation(line: 183, column: 23, scope: !3924)
!3931 = !DILocation(line: 185, column: 17, scope: !3924)
!3932 = !DILocation(line: 185, column: 10, scope: !3924)
!3933 = !DILocation(line: 187, column: 22, scope: !3924)
!3934 = !DILocation(line: 189, column: 12, scope: !3924)
!3935 = !DILocation(line: 190, column: 1, scope: !3924)
!3936 = !DILocation(line: 189, column: 5, scope: !3924)
!3937 = distinct !DISubprogram(name: "gpt_restore_interrupt", scope: !205, file: !205, line: 192, type: !3938, scopeLine: 193, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !204, retainedNodes: !3940)
!3938 = !DISubroutineType(types: !3939)
!3939 = !{null, !291, !105}
!3940 = !{!3941, !3942}
!3941 = !DILocalVariable(name: "gpt", arg: 1, scope: !3937, file: !205, line: 192, type: !291)
!3942 = !DILocalVariable(name: "mask", arg: 2, scope: !3937, file: !205, line: 192, type: !105)
!3943 = !DILocation(line: 0, scope: !3937)
!3944 = !DILocation(line: 194, column: 10, scope: !3937)
!3945 = !DILocation(line: 194, column: 21, scope: !3937)
!3946 = !DILocation(line: 195, column: 1, scope: !3937)
!3947 = distinct !DISubprogram(name: "gpt_interrupt_handler", scope: !205, file: !205, line: 197, type: !1136, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !204, retainedNodes: !3948)
!3948 = !{!3949, !3950, !3951, !3952, !3953}
!3949 = !DILocalVariable(name: "irq_number", arg: 1, scope: !3947, file: !205, line: 197, type: !919)
!3950 = !DILocalVariable(name: "i", scope: !3947, file: !205, line: 199, type: !105)
!3951 = !DILocalVariable(name: "mask", scope: !3947, file: !205, line: 200, type: !104)
!3952 = !DILocalVariable(name: "state", scope: !3947, file: !205, line: 201, type: !104)
!3953 = !DILocalVariable(name: "enable", scope: !3947, file: !205, line: 202, type: !104)
!3954 = !DILocation(line: 0, scope: !3947)
!3955 = !DILocation(line: 200, column: 5, scope: !3947)
!3956 = !DILocation(line: 200, column: 23, scope: !3947)
!3957 = !DILocation(line: 201, column: 5, scope: !3947)
!3958 = !DILocation(line: 201, column: 23, scope: !3947)
!3959 = !DILocation(line: 202, column: 5, scope: !3947)
!3960 = !DILocation(line: 202, column: 23, scope: !3947)
!3961 = !DILocation(line: 207, column: 5, scope: !3962)
!3962 = distinct !DILexicalBlock(scope: !3947, file: !205, line: 207, column: 5)
!3963 = !DILocation(line: 209, column: 18, scope: !3964)
!3964 = distinct !DILexicalBlock(scope: !3965, file: !205, line: 207, column: 44)
!3965 = distinct !DILexicalBlock(scope: !3962, file: !205, line: 207, column: 5)
!3966 = !DILocation(line: 209, column: 29, scope: !3964)
!3967 = !DILocation(line: 209, column: 16, scope: !3964)
!3968 = !DILocation(line: 210, column: 29, scope: !3964)
!3969 = !DILocation(line: 210, column: 16, scope: !3964)
!3970 = !DILocation(line: 212, column: 16, scope: !3964)
!3971 = !DILocation(line: 212, column: 14, scope: !3964)
!3972 = !DILocation(line: 214, column: 9, scope: !3964)
!3973 = !DILocation(line: 214, column: 20, scope: !3964)
!3974 = !DILocation(line: 214, column: 32, scope: !3964)
!3975 = !DILocation(line: 216, column: 14, scope: !3976)
!3976 = distinct !DILexicalBlock(scope: !3964, file: !205, line: 216, column: 13)
!3977 = !DILocation(line: 216, column: 20, scope: !3976)
!3978 = !DILocation(line: 216, column: 40, scope: !3976)
!3979 = !DILocation(line: 216, column: 44, scope: !3976)
!3980 = !DILocation(line: 216, column: 51, scope: !3976)
!3981 = !DILocation(line: 216, column: 13, scope: !3964)
!3982 = !DILocation(line: 224, column: 51, scope: !3983)
!3983 = distinct !DILexicalBlock(scope: !3984, file: !205, line: 224, column: 17)
!3984 = distinct !DILexicalBlock(scope: !3976, file: !205, line: 216, column: 70)
!3985 = !DILocation(line: 224, column: 60, scope: !3983)
!3986 = !DILocation(line: 224, column: 17, scope: !3984)
!3987 = !DILocation(line: 225, column: 94, scope: !3988)
!3988 = distinct !DILexicalBlock(scope: !3983, file: !205, line: 224, column: 69)
!3989 = !DILocation(line: 225, column: 17, scope: !3988)
!3990 = !DILocation(line: 226, column: 13, scope: !3988)
!3991 = !DILocation(line: 229, column: 31, scope: !3964)
!3992 = !DILocation(line: 229, column: 42, scope: !3964)
!3993 = !DILocation(line: 229, column: 9, scope: !3964)
!3994 = !DILocation(line: 207, column: 40, scope: !3965)
!3995 = !DILocation(line: 207, column: 19, scope: !3965)
!3996 = distinct !{!3996, !3961, !3997}
!3997 = !DILocation(line: 231, column: 5, scope: !3962)
!3998 = !DILocation(line: 233, column: 1, scope: !3947)
!3999 = distinct !DISubprogram(name: "gpt_nvic_register", scope: !205, file: !205, line: 236, type: !318, scopeLine: 237, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !204, retainedNodes: !320)
!4000 = !DILocation(line: 238, column: 5, scope: !3999)
!4001 = !DILocation(line: 239, column: 5, scope: !3999)
!4002 = !DILocation(line: 240, column: 5, scope: !3999)
!4003 = !DILocation(line: 241, column: 1, scope: !3999)
!4004 = distinct !DISubprogram(name: "gpt_sw_get_current_time_ms", scope: !205, file: !205, line: 242, type: !3774, scopeLine: 243, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !204, retainedNodes: !4005)
!4005 = !{!4006, !4007, !4008, !4009, !4010}
!4006 = !DILocalVariable(name: "gpt", arg: 1, scope: !4004, file: !205, line: 242, type: !291)
!4007 = !DILocalVariable(name: "time", scope: !4004, file: !205, line: 244, type: !104)
!4008 = !DILocalVariable(name: "count", scope: !4004, file: !205, line: 245, type: !105)
!4009 = !DILocalVariable(name: "time_s", scope: !4004, file: !205, line: 245, type: !105)
!4010 = !DILocalVariable(name: "time_ms", scope: !4004, file: !205, line: 245, type: !105)
!4011 = !DILocation(line: 0, scope: !4004)
!4012 = !DILocation(line: 244, column: 5, scope: !4004)
!4013 = !DILocation(line: 244, column: 23, scope: !4004)
!4014 = !DILocation(line: 247, column: 13, scope: !4004)
!4015 = !DILocation(line: 248, column: 20, scope: !4004)
!4016 = !DILocation(line: 249, column: 23, scope: !4004)
!4017 = !DILocation(line: 249, column: 32, scope: !4004)
!4018 = !DILocation(line: 249, column: 39, scope: !4004)
!4019 = !DILocation(line: 249, column: 48, scope: !4004)
!4020 = !DILocation(line: 250, column: 19, scope: !4004)
!4021 = !DILocation(line: 250, column: 26, scope: !4004)
!4022 = !DILocation(line: 250, column: 10, scope: !4004)
!4023 = !DILocation(line: 253, column: 5, scope: !4004)
!4024 = !DILocation(line: 253, column: 30, scope: !4004)
!4025 = !DILocation(line: 253, column: 38, scope: !4004)
!4026 = !DILocation(line: 254, column: 5, scope: !4004)
!4027 = !DILocation(line: 254, column: 36, scope: !4004)
!4028 = distinct !{!4028, !4026, !4029}
!4029 = !DILocation(line: 254, column: 46, scope: !4004)
!4030 = !DILocation(line: 255, column: 12, scope: !4004)
!4031 = !DILocation(line: 256, column: 1, scope: !4004)
!4032 = !DILocation(line: 255, column: 5, scope: !4004)
!4033 = distinct !DISubprogram(name: "gpt_sw_get_free_timer", scope: !205, file: !205, line: 258, type: !4034, scopeLine: 259, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !204, retainedNodes: !4036)
!4034 = !DISubroutineType(types: !4035)
!4035 = !{!105}
!4036 = !{!4037}
!4037 = !DILocalVariable(name: "i", scope: !4033, file: !205, line: 260, type: !105)
!4038 = !DILocation(line: 0, scope: !4033)
!4039 = !DILocation(line: 262, column: 5, scope: !4040)
!4040 = distinct !DILexicalBlock(scope: !4033, file: !205, line: 262, column: 5)
!4041 = !DILocation(line: 263, column: 37, scope: !4042)
!4042 = distinct !DILexicalBlock(scope: !4043, file: !205, line: 263, column: 13)
!4043 = distinct !DILexicalBlock(scope: !4044, file: !205, line: 262, column: 45)
!4044 = distinct !DILexicalBlock(scope: !4040, file: !205, line: 262, column: 5)
!4045 = !DILocation(line: 263, column: 45, scope: !4042)
!4046 = !DILocation(line: 263, column: 13, scope: !4043)
!4047 = !DILocation(line: 262, column: 41, scope: !4044)
!4048 = !DILocation(line: 262, column: 19, scope: !4044)
!4049 = distinct !{!4049, !4039, !4050}
!4050 = !DILocation(line: 266, column: 5, scope: !4040)
!4051 = !DILocation(line: 269, column: 1, scope: !4033)
!4052 = distinct !DISubprogram(name: "gpt_sw_start_timer", scope: !205, file: !205, line: 271, type: !318, scopeLine: 272, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !204, retainedNodes: !4053)
!4053 = !{!4054, !4055}
!4054 = !DILocalVariable(name: "minimum_time", scope: !4052, file: !205, line: 273, type: !105)
!4055 = !DILocalVariable(name: "current_timer", scope: !4052, file: !205, line: 273, type: !105)
!4056 = !DILocation(line: 273, column: 5, scope: !4052)
!4057 = !DILocation(line: 275, column: 24, scope: !4058)
!4058 = distinct !DILexicalBlock(scope: !4052, file: !205, line: 275, column: 9)
!4059 = !DILocation(line: 275, column: 9, scope: !4052)
!4060 = !DILocation(line: 0, scope: !4052)
!4061 = !DILocation(line: 279, column: 5, scope: !4052)
!4062 = !DILocation(line: 282, column: 56, scope: !4052)
!4063 = !DILocation(line: 282, column: 39, scope: !4052)
!4064 = !DILocation(line: 284, column: 30, scope: !4052)
!4065 = !DILocation(line: 285, column: 45, scope: !4052)
!4066 = !DILocation(line: 285, column: 5, scope: !4052)
!4067 = !DILocation(line: 286, column: 30, scope: !4052)
!4068 = !DILocation(line: 287, column: 1, scope: !4052)
!4069 = distinct !DISubprogram(name: "gpt_sw_get_minimum_left_time_ms", scope: !205, file: !205, line: 308, type: !4070, scopeLine: 309, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !204, retainedNodes: !4072)
!4070 = !DISubroutineType(types: !4071)
!4071 = !{null, !1186, !1186}
!4072 = !{!4073, !4074, !4075, !4076, !4077}
!4073 = !DILocalVariable(name: "minimum_time", arg: 1, scope: !4069, file: !205, line: 308, type: !1186)
!4074 = !DILocalVariable(name: "number", arg: 2, scope: !4069, file: !205, line: 308, type: !1186)
!4075 = !DILocalVariable(name: "i", scope: !4069, file: !205, line: 310, type: !105)
!4076 = !DILocalVariable(name: "minimum", scope: !4069, file: !205, line: 311, type: !105)
!4077 = !DILocalVariable(name: "data", scope: !4069, file: !205, line: 312, type: !105)
!4078 = !DILocation(line: 0, scope: !4069)
!4079 = !DILocation(line: 314, column: 5, scope: !4080)
!4080 = distinct !DILexicalBlock(scope: !4069, file: !205, line: 314, column: 5)
!4081 = !DILocation(line: 315, column: 37, scope: !4082)
!4082 = distinct !DILexicalBlock(scope: !4083, file: !205, line: 315, column: 13)
!4083 = distinct !DILexicalBlock(scope: !4084, file: !205, line: 314, column: 45)
!4084 = distinct !DILexicalBlock(scope: !4080, file: !205, line: 314, column: 5)
!4085 = !DILocation(line: 315, column: 13, scope: !4083)
!4086 = !DILocation(line: 316, column: 20, scope: !4087)
!4087 = distinct !DILexicalBlock(scope: !4082, file: !205, line: 315, column: 57)
!4088 = !DILocation(line: 318, column: 22, scope: !4089)
!4089 = distinct !DILexicalBlock(scope: !4087, file: !205, line: 318, column: 17)
!4090 = !DILocation(line: 318, column: 17, scope: !4087)
!4091 = !DILocation(line: 320, column: 25, scope: !4092)
!4092 = distinct !DILexicalBlock(scope: !4089, file: !205, line: 318, column: 33)
!4093 = !DILocation(line: 321, column: 13, scope: !4092)
!4094 = !DILocation(line: 314, column: 41, scope: !4084)
!4095 = !DILocation(line: 314, column: 19, scope: !4084)
!4096 = distinct !{!4096, !4079, !4097}
!4097 = !DILocation(line: 323, column: 5, scope: !4080)
!4098 = !DILocation(line: 325, column: 19, scope: !4069)
!4099 = !DILocation(line: 326, column: 1, scope: !4069)
!4100 = distinct !DISubprogram(name: "gpt_sw_absolute_value", scope: !205, file: !205, line: 289, type: !3782, scopeLine: 290, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !204, retainedNodes: !4101)
!4101 = !{!4102, !4103, !4104, !4105}
!4102 = !DILocalVariable(name: "timer_number", arg: 1, scope: !4100, file: !205, line: 289, type: !105)
!4103 = !DILocalVariable(name: "time_out_delta", scope: !4100, file: !205, line: 291, type: !105)
!4104 = !DILocalVariable(name: "current_delta", scope: !4100, file: !205, line: 292, type: !105)
!4105 = !DILocalVariable(name: "ret_value", scope: !4100, file: !205, line: 293, type: !105)
!4106 = !DILocation(line: 0, scope: !4100)
!4107 = !DILocation(line: 295, column: 22, scope: !4100)
!4108 = !DILocation(line: 296, column: 22, scope: !4100)
!4109 = !DILocation(line: 298, column: 24, scope: !4110)
!4110 = distinct !DILexicalBlock(scope: !4100, file: !205, line: 298, column: 9)
!4111 = !DILocation(line: 298, column: 9, scope: !4100)
!4112 = !DILocation(line: 306, column: 5, scope: !4100)
!4113 = distinct !DISubprogram(name: "gpt_sw_handler", scope: !205, file: !205, line: 329, type: !190, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !204, retainedNodes: !4114)
!4114 = !{!4115, !4116, !4117, !4118}
!4115 = !DILocalVariable(name: "parameter", arg: 1, scope: !4113, file: !205, line: 329, type: !124)
!4116 = !DILocalVariable(name: "i", scope: !4113, file: !205, line: 331, type: !105)
!4117 = !DILocalVariable(name: "time_ms", scope: !4113, file: !205, line: 332, type: !104)
!4118 = !DILocalVariable(name: "data", scope: !4113, file: !205, line: 333, type: !104)
!4119 = !DILocation(line: 0, scope: !4113)
!4120 = !DILocation(line: 332, column: 5, scope: !4113)
!4121 = !DILocation(line: 332, column: 23, scope: !4113)
!4122 = !DILocation(line: 333, column: 5, scope: !4113)
!4123 = !DILocation(line: 333, column: 23, scope: !4113)
!4124 = !DILocation(line: 336, column: 24, scope: !4125)
!4125 = distinct !DILexicalBlock(scope: !4113, file: !205, line: 336, column: 9)
!4126 = !DILocation(line: 336, column: 41, scope: !4125)
!4127 = !DILocation(line: 336, column: 9, scope: !4113)
!4128 = !DILocation(line: 338, column: 34, scope: !4129)
!4129 = distinct !DILexicalBlock(scope: !4125, file: !205, line: 336, column: 47)
!4130 = !DILocation(line: 339, column: 9, scope: !4129)
!4131 = !DILocation(line: 340, column: 34, scope: !4129)
!4132 = !DILocation(line: 342, column: 46, scope: !4129)
!4133 = !DILocation(line: 342, column: 19, scope: !4129)
!4134 = !DILocation(line: 342, column: 17, scope: !4129)
!4135 = !DILocation(line: 344, column: 41, scope: !4129)
!4136 = !DILocation(line: 344, column: 38, scope: !4129)
!4137 = !DILocation(line: 345, column: 42, scope: !4129)
!4138 = !DILocation(line: 347, column: 9, scope: !4139)
!4139 = distinct !DILexicalBlock(scope: !4129, file: !205, line: 347, column: 9)
!4140 = !DILocation(line: 348, column: 41, scope: !4141)
!4141 = distinct !DILexicalBlock(scope: !4142, file: !205, line: 348, column: 17)
!4142 = distinct !DILexicalBlock(scope: !4143, file: !205, line: 347, column: 49)
!4143 = distinct !DILexicalBlock(scope: !4139, file: !205, line: 347, column: 9)
!4144 = !DILocation(line: 348, column: 17, scope: !4142)
!4145 = !DILocation(line: 350, column: 24, scope: !4146)
!4146 = distinct !DILexicalBlock(scope: !4141, file: !205, line: 348, column: 61)
!4147 = !DILocation(line: 350, column: 22, scope: !4146)
!4148 = !DILocation(line: 352, column: 21, scope: !4149)
!4149 = distinct !DILexicalBlock(scope: !4146, file: !205, line: 352, column: 21)
!4150 = !DILocation(line: 352, column: 26, scope: !4149)
!4151 = !DILocation(line: 352, column: 21, scope: !4146)
!4152 = !DILocation(line: 353, column: 56, scope: !4153)
!4153 = distinct !DILexicalBlock(scope: !4149, file: !205, line: 352, column: 32)
!4154 = !DILocation(line: 354, column: 55, scope: !4153)
!4155 = !DILocation(line: 356, column: 62, scope: !4153)
!4156 = !DILocation(line: 356, column: 112, scope: !4153)
!4157 = !DILocation(line: 356, column: 21, scope: !4153)
!4158 = !DILocation(line: 357, column: 17, scope: !4153)
!4159 = !DILocation(line: 347, column: 45, scope: !4143)
!4160 = !DILocation(line: 347, column: 23, scope: !4143)
!4161 = distinct !{!4161, !4138, !4162}
!4162 = !DILocation(line: 360, column: 9, scope: !4139)
!4163 = !DILocation(line: 362, column: 42, scope: !4129)
!4164 = !DILocation(line: 364, column: 28, scope: !4165)
!4165 = distinct !DILexicalBlock(scope: !4129, file: !205, line: 364, column: 13)
!4166 = !DILocation(line: 364, column: 48, scope: !4165)
!4167 = !DILocation(line: 364, column: 13, scope: !4129)
!4168 = !DILocation(line: 365, column: 13, scope: !4169)
!4169 = distinct !DILexicalBlock(scope: !4165, file: !205, line: 364, column: 54)
!4170 = !DILocation(line: 366, column: 9, scope: !4169)
!4171 = !DILocation(line: 369, column: 1, scope: !4113)
!4172 = distinct !DISubprogram(name: "is_pin_with_pullsel", scope: !368, file: !368, line: 50, type: !4173, scopeLine: 51, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !367, retainedNodes: !4176)
!4173 = !DISubroutineType(types: !4174)
!4174 = !{!105, !4175}
!4175 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_pin_t", file: !35, line: 390, baseType: !370)
!4176 = !{!4177, !4178, !4179}
!4177 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4172, file: !368, line: 50, type: !4175)
!4178 = !DILocalVariable(name: "i", scope: !4172, file: !368, line: 52, type: !105)
!4179 = !DILocalVariable(name: "pin_number_with_pullsel", scope: !4172, file: !368, line: 53, type: !1092)
!4180 = !DILocation(line: 0, scope: !4172)
!4181 = !DILocation(line: 53, column: 14, scope: !4172)
!4182 = !DILocation(line: 55, column: 5, scope: !4183)
!4183 = distinct !DILexicalBlock(scope: !4172, file: !368, line: 55, column: 5)
!4184 = !DILocation(line: 55, column: 25, scope: !4185)
!4185 = distinct !DILexicalBlock(scope: !4183, file: !368, line: 55, column: 5)
!4186 = !DILocation(line: 55, column: 19, scope: !4185)
!4187 = distinct !{!4187, !4182, !4188}
!4188 = !DILocation(line: 59, column: 5, scope: !4183)
!4189 = !DILocation(line: 56, column: 13, scope: !4190)
!4190 = distinct !DILexicalBlock(scope: !4191, file: !368, line: 56, column: 13)
!4191 = distinct !DILexicalBlock(scope: !4185, file: !368, line: 55, column: 29)
!4192 = !DILocation(line: 56, column: 40, scope: !4190)
!4193 = !DILocation(line: 56, column: 13, scope: !4191)
!4194 = !DILocation(line: 61, column: 1, scope: !4172)
!4195 = distinct !DISubprogram(name: "hal_gpio_init", scope: !368, file: !368, line: 66, type: !4196, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !367, retainedNodes: !4199)
!4196 = !DISubroutineType(types: !4197)
!4197 = !{!4198, !4175}
!4198 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_status_t", file: !423, line: 229, baseType: !422)
!4199 = !{!4200}
!4200 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4195, file: !368, line: 66, type: !4175)
!4201 = !DILocation(line: 0, scope: !4195)
!4202 = !DILocation(line: 68, column: 5, scope: !4195)
!4203 = distinct !DISubprogram(name: "hal_gpio_deinit", scope: !368, file: !368, line: 72, type: !4196, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !367, retainedNodes: !4204)
!4204 = !{!4205}
!4205 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4203, file: !368, line: 72, type: !4175)
!4206 = !DILocation(line: 0, scope: !4203)
!4207 = !DILocation(line: 74, column: 5, scope: !4203)
!4208 = distinct !DISubprogram(name: "hal_gpio_set_direction", scope: !368, file: !368, line: 79, type: !4209, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !367, retainedNodes: !4211)
!4209 = !DISubroutineType(types: !4210)
!4210 = !{!4198, !4175, !464}
!4211 = !{!4212, !4213, !4214, !4215}
!4212 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4208, file: !368, line: 79, type: !4175)
!4213 = !DILocalVariable(name: "gpio_direction", arg: 2, scope: !4208, file: !368, line: 79, type: !464)
!4214 = !DILocalVariable(name: "no", scope: !4208, file: !368, line: 81, type: !105)
!4215 = !DILocalVariable(name: "remainder", scope: !4208, file: !368, line: 82, type: !105)
!4216 = !DILocation(line: 0, scope: !4208)
!4217 = !DILocation(line: 84, column: 18, scope: !4218)
!4218 = distinct !DILexicalBlock(scope: !4208, file: !368, line: 84, column: 9)
!4219 = !DILocation(line: 84, column: 9, scope: !4208)
!4220 = !DILocation(line: 89, column: 19, scope: !4208)
!4221 = !DILocation(line: 92, column: 26, scope: !4208)
!4222 = !DILocation(line: 94, column: 24, scope: !4223)
!4223 = distinct !DILexicalBlock(scope: !4208, file: !368, line: 94, column: 9)
!4224 = !DILocation(line: 0, scope: !4223)
!4225 = !DILocation(line: 94, column: 9, scope: !4208)
!4226 = !DILocation(line: 101, column: 1, scope: !4208)
!4227 = distinct !DISubprogram(name: "hal_gpio_get_direction", scope: !368, file: !368, line: 105, type: !4228, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !367, retainedNodes: !4231)
!4228 = !DISubroutineType(types: !4229)
!4229 = !{!4198, !4175, !4230}
!4230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !464, size: 32)
!4231 = !{!4232, !4233, !4234, !4235, !4236}
!4232 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4227, file: !368, line: 105, type: !4175)
!4233 = !DILocalVariable(name: "gpio_direction", arg: 2, scope: !4227, file: !368, line: 105, type: !4230)
!4234 = !DILocalVariable(name: "no", scope: !4227, file: !368, line: 107, type: !105)
!4235 = !DILocalVariable(name: "remainder", scope: !4227, file: !368, line: 108, type: !105)
!4236 = !DILocalVariable(name: "temp", scope: !4227, file: !368, line: 109, type: !105)
!4237 = !DILocation(line: 0, scope: !4227)
!4238 = !DILocation(line: 111, column: 18, scope: !4239)
!4239 = distinct !DILexicalBlock(scope: !4227, file: !368, line: 111, column: 9)
!4240 = !DILocation(line: 111, column: 9, scope: !4227)
!4241 = !DILocation(line: 115, column: 14, scope: !4242)
!4242 = distinct !DILexicalBlock(scope: !4227, file: !368, line: 115, column: 9)
!4243 = !DILocation(line: 115, column: 9, scope: !4227)
!4244 = !DILocation(line: 120, column: 19, scope: !4227)
!4245 = !DILocation(line: 123, column: 26, scope: !4227)
!4246 = !DILocation(line: 125, column: 12, scope: !4227)
!4247 = !DILocation(line: 125, column: 54, scope: !4227)
!4248 = !DILocation(line: 126, column: 45, scope: !4227)
!4249 = !DILocation(line: 126, column: 17, scope: !4227)
!4250 = !DILocation(line: 127, column: 51, scope: !4227)
!4251 = !DILocation(line: 127, column: 21, scope: !4227)
!4252 = !DILocation(line: 128, column: 5, scope: !4227)
!4253 = !DILocation(line: 130, column: 1, scope: !4227)
!4254 = distinct !DISubprogram(name: "hal_pinmux_set_function", scope: !368, file: !368, line: 134, type: !4255, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !367, retainedNodes: !4258)
!4255 = !DISubroutineType(types: !4256)
!4256 = !{!4257, !4175, !127}
!4257 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_pinmux_status_t", file: !423, line: 238, baseType: !433)
!4258 = !{!4259, !4260, !4261, !4262, !4263}
!4259 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4254, file: !368, line: 134, type: !4175)
!4260 = !DILocalVariable(name: "function_index", arg: 2, scope: !4254, file: !368, line: 134, type: !127)
!4261 = !DILocalVariable(name: "no", scope: !4254, file: !368, line: 136, type: !105)
!4262 = !DILocalVariable(name: "remainder", scope: !4254, file: !368, line: 137, type: !105)
!4263 = !DILocalVariable(name: "irq_status", scope: !4254, file: !368, line: 138, type: !105)
!4264 = !DILocation(line: 0, scope: !4254)
!4265 = !DILocation(line: 140, column: 18, scope: !4266)
!4266 = distinct !DILexicalBlock(scope: !4254, file: !368, line: 140, column: 9)
!4267 = !DILocation(line: 140, column: 9, scope: !4254)
!4268 = !DILocation(line: 145, column: 24, scope: !4269)
!4269 = distinct !DILexicalBlock(scope: !4254, file: !368, line: 145, column: 9)
!4270 = !DILocation(line: 145, column: 9, scope: !4254)
!4271 = !DILocation(line: 145, column: 9, scope: !4269)
!4272 = !DILocation(line: 150, column: 19, scope: !4254)
!4273 = !DILocation(line: 156, column: 18, scope: !4254)
!4274 = !DILocation(line: 157, column: 105, scope: !4254)
!4275 = !DILocation(line: 157, column: 91, scope: !4254)
!4276 = !DILocation(line: 157, column: 5, scope: !4254)
!4277 = !DILocation(line: 157, column: 48, scope: !4254)
!4278 = !DILocation(line: 157, column: 62, scope: !4254)
!4279 = !DILocation(line: 158, column: 80, scope: !4254)
!4280 = !DILocation(line: 158, column: 5, scope: !4254)
!4281 = !DILocation(line: 158, column: 48, scope: !4254)
!4282 = !DILocation(line: 158, column: 62, scope: !4254)
!4283 = !DILocation(line: 159, column: 5, scope: !4254)
!4284 = !DILocation(line: 160, column: 5, scope: !4254)
!4285 = !DILocation(line: 162, column: 1, scope: !4254)
!4286 = distinct !DISubprogram(name: "hal_gpio_get_input", scope: !368, file: !368, line: 166, type: !4287, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !367, retainedNodes: !4290)
!4287 = !DISubroutineType(types: !4288)
!4288 = !{!4198, !4175, !4289}
!4289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !465, size: 32)
!4290 = !{!4291, !4292, !4293, !4294, !4295}
!4291 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4286, file: !368, line: 166, type: !4175)
!4292 = !DILocalVariable(name: "gpio_data", arg: 2, scope: !4286, file: !368, line: 166, type: !4289)
!4293 = !DILocalVariable(name: "no", scope: !4286, file: !368, line: 168, type: !105)
!4294 = !DILocalVariable(name: "remainder", scope: !4286, file: !368, line: 169, type: !105)
!4295 = !DILocalVariable(name: "temp", scope: !4286, file: !368, line: 170, type: !105)
!4296 = !DILocation(line: 0, scope: !4286)
!4297 = !DILocation(line: 172, column: 18, scope: !4298)
!4298 = distinct !DILexicalBlock(scope: !4286, file: !368, line: 172, column: 9)
!4299 = !DILocation(line: 172, column: 9, scope: !4286)
!4300 = !DILocation(line: 176, column: 14, scope: !4301)
!4301 = distinct !DILexicalBlock(scope: !4286, file: !368, line: 176, column: 9)
!4302 = !DILocation(line: 176, column: 9, scope: !4286)
!4303 = !DILocation(line: 181, column: 19, scope: !4286)
!4304 = !DILocation(line: 184, column: 26, scope: !4286)
!4305 = !DILocation(line: 186, column: 12, scope: !4286)
!4306 = !DILocation(line: 186, column: 54, scope: !4286)
!4307 = !DILocation(line: 187, column: 45, scope: !4286)
!4308 = !DILocation(line: 187, column: 17, scope: !4286)
!4309 = !DILocation(line: 188, column: 41, scope: !4286)
!4310 = !DILocation(line: 188, column: 16, scope: !4286)
!4311 = !DILocation(line: 189, column: 5, scope: !4286)
!4312 = !DILocation(line: 191, column: 1, scope: !4286)
!4313 = distinct !DISubprogram(name: "hal_gpio_set_output", scope: !368, file: !368, line: 195, type: !4314, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !367, retainedNodes: !4316)
!4314 = !DISubroutineType(types: !4315)
!4315 = !{!4198, !4175, !465}
!4316 = !{!4317, !4318, !4319, !4320}
!4317 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4313, file: !368, line: 195, type: !4175)
!4318 = !DILocalVariable(name: "gpio_data", arg: 2, scope: !4313, file: !368, line: 195, type: !465)
!4319 = !DILocalVariable(name: "no", scope: !4313, file: !368, line: 197, type: !105)
!4320 = !DILocalVariable(name: "remainder", scope: !4313, file: !368, line: 198, type: !105)
!4321 = !DILocation(line: 0, scope: !4313)
!4322 = !DILocation(line: 200, column: 18, scope: !4323)
!4323 = distinct !DILexicalBlock(scope: !4313, file: !368, line: 200, column: 9)
!4324 = !DILocation(line: 200, column: 9, scope: !4313)
!4325 = !DILocation(line: 205, column: 19, scope: !4313)
!4326 = !DILocation(line: 208, column: 26, scope: !4313)
!4327 = !DILocation(line: 210, column: 9, scope: !4328)
!4328 = distinct !DILexicalBlock(scope: !4313, file: !368, line: 210, column: 9)
!4329 = !DILocation(line: 0, scope: !4328)
!4330 = !DILocation(line: 210, column: 9, scope: !4313)
!4331 = !DILocation(line: 216, column: 1, scope: !4313)
!4332 = distinct !DISubprogram(name: "hal_gpio_get_output", scope: !368, file: !368, line: 220, type: !4287, scopeLine: 221, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !367, retainedNodes: !4333)
!4333 = !{!4334, !4335, !4336, !4337, !4338}
!4334 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4332, file: !368, line: 220, type: !4175)
!4335 = !DILocalVariable(name: "gpio_data", arg: 2, scope: !4332, file: !368, line: 220, type: !4289)
!4336 = !DILocalVariable(name: "no", scope: !4332, file: !368, line: 222, type: !105)
!4337 = !DILocalVariable(name: "remainder", scope: !4332, file: !368, line: 223, type: !105)
!4338 = !DILocalVariable(name: "temp", scope: !4332, file: !368, line: 224, type: !105)
!4339 = !DILocation(line: 0, scope: !4332)
!4340 = !DILocation(line: 226, column: 18, scope: !4341)
!4341 = distinct !DILexicalBlock(scope: !4332, file: !368, line: 226, column: 9)
!4342 = !DILocation(line: 226, column: 9, scope: !4332)
!4343 = !DILocation(line: 230, column: 14, scope: !4344)
!4344 = distinct !DILexicalBlock(scope: !4332, file: !368, line: 230, column: 9)
!4345 = !DILocation(line: 230, column: 9, scope: !4332)
!4346 = !DILocation(line: 235, column: 19, scope: !4332)
!4347 = !DILocation(line: 238, column: 26, scope: !4332)
!4348 = !DILocation(line: 240, column: 12, scope: !4332)
!4349 = !DILocation(line: 240, column: 55, scope: !4332)
!4350 = !DILocation(line: 241, column: 45, scope: !4332)
!4351 = !DILocation(line: 241, column: 17, scope: !4332)
!4352 = !DILocation(line: 242, column: 41, scope: !4332)
!4353 = !DILocation(line: 242, column: 16, scope: !4332)
!4354 = !DILocation(line: 243, column: 5, scope: !4332)
!4355 = !DILocation(line: 245, column: 1, scope: !4332)
!4356 = distinct !DISubprogram(name: "hal_gpio_toggle_pin", scope: !368, file: !368, line: 249, type: !4196, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !367, retainedNodes: !4357)
!4357 = !{!4358, !4359, !4360, !4361}
!4358 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4356, file: !368, line: 249, type: !4175)
!4359 = !DILocalVariable(name: "no", scope: !4356, file: !368, line: 251, type: !105)
!4360 = !DILocalVariable(name: "remainder", scope: !4356, file: !368, line: 252, type: !105)
!4361 = !DILocalVariable(name: "temp", scope: !4356, file: !368, line: 253, type: !105)
!4362 = !DILocation(line: 0, scope: !4356)
!4363 = !DILocation(line: 255, column: 18, scope: !4364)
!4364 = distinct !DILexicalBlock(scope: !4356, file: !368, line: 255, column: 9)
!4365 = !DILocation(line: 255, column: 9, scope: !4356)
!4366 = !DILocation(line: 260, column: 19, scope: !4356)
!4367 = !DILocation(line: 263, column: 26, scope: !4356)
!4368 = !DILocation(line: 265, column: 12, scope: !4356)
!4369 = !DILocation(line: 265, column: 55, scope: !4356)
!4370 = !DILocation(line: 266, column: 45, scope: !4356)
!4371 = !DILocation(line: 266, column: 17, scope: !4356)
!4372 = !DILocation(line: 267, column: 15, scope: !4373)
!4373 = distinct !DILexicalBlock(scope: !4356, file: !368, line: 267, column: 9)
!4374 = !DILocation(line: 267, column: 9, scope: !4356)
!4375 = !DILocation(line: 0, scope: !4373)
!4376 = !DILocation(line: 273, column: 1, scope: !4356)
!4377 = distinct !DISubprogram(name: "hal_gpio_enable_inversion", scope: !368, file: !368, line: 278, type: !4196, scopeLine: 279, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !367, retainedNodes: !4378)
!4378 = !{!4379, !4380, !4381}
!4379 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4377, file: !368, line: 278, type: !4175)
!4380 = !DILocalVariable(name: "no", scope: !4377, file: !368, line: 280, type: !105)
!4381 = !DILocalVariable(name: "remainder", scope: !4377, file: !368, line: 281, type: !105)
!4382 = !DILocation(line: 0, scope: !4377)
!4383 = !DILocation(line: 283, column: 18, scope: !4384)
!4384 = distinct !DILexicalBlock(scope: !4377, file: !368, line: 283, column: 9)
!4385 = !DILocation(line: 283, column: 9, scope: !4377)
!4386 = !DILocation(line: 288, column: 19, scope: !4377)
!4387 = !DILocation(line: 291, column: 26, scope: !4377)
!4388 = !DILocation(line: 293, column: 90, scope: !4377)
!4389 = !DILocation(line: 293, column: 5, scope: !4377)
!4390 = !DILocation(line: 293, column: 48, scope: !4377)
!4391 = !DILocation(line: 293, column: 62, scope: !4377)
!4392 = !DILocation(line: 294, column: 5, scope: !4377)
!4393 = !DILocation(line: 295, column: 1, scope: !4377)
!4394 = distinct !DISubprogram(name: "hal_gpio_disable_inversion", scope: !368, file: !368, line: 299, type: !4196, scopeLine: 300, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !367, retainedNodes: !4395)
!4395 = !{!4396, !4397, !4398}
!4396 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4394, file: !368, line: 299, type: !4175)
!4397 = !DILocalVariable(name: "no", scope: !4394, file: !368, line: 301, type: !105)
!4398 = !DILocalVariable(name: "remainder", scope: !4394, file: !368, line: 302, type: !105)
!4399 = !DILocation(line: 0, scope: !4394)
!4400 = !DILocation(line: 304, column: 18, scope: !4401)
!4401 = distinct !DILexicalBlock(scope: !4394, file: !368, line: 304, column: 9)
!4402 = !DILocation(line: 304, column: 9, scope: !4394)
!4403 = !DILocation(line: 309, column: 19, scope: !4394)
!4404 = !DILocation(line: 312, column: 26, scope: !4394)
!4405 = !DILocation(line: 314, column: 90, scope: !4394)
!4406 = !DILocation(line: 314, column: 5, scope: !4394)
!4407 = !DILocation(line: 314, column: 48, scope: !4394)
!4408 = !DILocation(line: 314, column: 62, scope: !4394)
!4409 = !DILocation(line: 315, column: 5, scope: !4394)
!4410 = !DILocation(line: 316, column: 1, scope: !4394)
!4411 = distinct !DISubprogram(name: "hal_gpio_pull_up", scope: !368, file: !368, line: 321, type: !4196, scopeLine: 322, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !367, retainedNodes: !4412)
!4412 = !{!4413, !4414, !4415}
!4413 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4411, file: !368, line: 321, type: !4175)
!4414 = !DILocalVariable(name: "no", scope: !4411, file: !368, line: 323, type: !105)
!4415 = !DILocalVariable(name: "remainder", scope: !4411, file: !368, line: 324, type: !105)
!4416 = !DILocation(line: 0, scope: !4411)
!4417 = !DILocation(line: 326, column: 19, scope: !4418)
!4418 = distinct !DILexicalBlock(scope: !4411, file: !368, line: 326, column: 9)
!4419 = !DILocation(line: 326, column: 36, scope: !4418)
!4420 = !DILocation(line: 326, column: 41, scope: !4418)
!4421 = !DILocation(line: 326, column: 9, scope: !4411)
!4422 = !DILocation(line: 331, column: 19, scope: !4411)
!4423 = !DILocation(line: 334, column: 26, scope: !4411)
!4424 = !DILocation(line: 336, column: 94, scope: !4411)
!4425 = !DILocation(line: 336, column: 5, scope: !4411)
!4426 = !DILocation(line: 336, column: 50, scope: !4411)
!4427 = !DILocation(line: 336, column: 66, scope: !4411)
!4428 = !DILocation(line: 337, column: 5, scope: !4411)
!4429 = !DILocation(line: 337, column: 51, scope: !4411)
!4430 = !DILocation(line: 337, column: 68, scope: !4411)
!4431 = !DILocation(line: 338, column: 5, scope: !4411)
!4432 = !DILocation(line: 339, column: 1, scope: !4411)
!4433 = distinct !DISubprogram(name: "hal_gpio_pull_down", scope: !368, file: !368, line: 343, type: !4196, scopeLine: 344, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !367, retainedNodes: !4434)
!4434 = !{!4435, !4436, !4437}
!4435 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4433, file: !368, line: 343, type: !4175)
!4436 = !DILocalVariable(name: "no", scope: !4433, file: !368, line: 345, type: !105)
!4437 = !DILocalVariable(name: "remainder", scope: !4433, file: !368, line: 346, type: !105)
!4438 = !DILocation(line: 0, scope: !4433)
!4439 = !DILocation(line: 348, column: 19, scope: !4440)
!4440 = distinct !DILexicalBlock(scope: !4433, file: !368, line: 348, column: 9)
!4441 = !DILocation(line: 348, column: 36, scope: !4440)
!4442 = !DILocation(line: 348, column: 41, scope: !4440)
!4443 = !DILocation(line: 348, column: 9, scope: !4433)
!4444 = !DILocation(line: 353, column: 19, scope: !4433)
!4445 = !DILocation(line: 356, column: 26, scope: !4433)
!4446 = !DILocation(line: 358, column: 94, scope: !4433)
!4447 = !DILocation(line: 358, column: 5, scope: !4433)
!4448 = !DILocation(line: 358, column: 50, scope: !4433)
!4449 = !DILocation(line: 358, column: 66, scope: !4433)
!4450 = !DILocation(line: 359, column: 5, scope: !4433)
!4451 = !DILocation(line: 359, column: 51, scope: !4433)
!4452 = !DILocation(line: 359, column: 68, scope: !4433)
!4453 = !DILocation(line: 360, column: 5, scope: !4433)
!4454 = !DILocation(line: 361, column: 1, scope: !4433)
!4455 = distinct !DISubprogram(name: "hal_gpio_disable_pull", scope: !368, file: !368, line: 365, type: !4196, scopeLine: 366, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !367, retainedNodes: !4456)
!4456 = !{!4457, !4458, !4459}
!4457 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4455, file: !368, line: 365, type: !4175)
!4458 = !DILocalVariable(name: "no", scope: !4455, file: !368, line: 367, type: !105)
!4459 = !DILocalVariable(name: "remainder", scope: !4455, file: !368, line: 368, type: !105)
!4460 = !DILocation(line: 0, scope: !4455)
!4461 = !DILocation(line: 370, column: 19, scope: !4462)
!4462 = distinct !DILexicalBlock(scope: !4455, file: !368, line: 370, column: 9)
!4463 = !DILocation(line: 370, column: 36, scope: !4462)
!4464 = !DILocation(line: 370, column: 41, scope: !4462)
!4465 = !DILocation(line: 370, column: 9, scope: !4455)
!4466 = !DILocation(line: 375, column: 19, scope: !4455)
!4467 = !DILocation(line: 378, column: 26, scope: !4455)
!4468 = !DILocation(line: 380, column: 94, scope: !4455)
!4469 = !DILocation(line: 380, column: 5, scope: !4455)
!4470 = !DILocation(line: 380, column: 50, scope: !4455)
!4471 = !DILocation(line: 380, column: 66, scope: !4455)
!4472 = !DILocation(line: 381, column: 5, scope: !4455)
!4473 = !DILocation(line: 382, column: 1, scope: !4455)
!4474 = distinct !DISubprogram(name: "hal_gpio_set_clockout", scope: !368, file: !368, line: 387, type: !4475, scopeLine: 388, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !367, retainedNodes: !4479)
!4475 = !DISubroutineType(types: !4476)
!4476 = !{!4198, !4477, !4478}
!4477 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_clock_t", file: !35, line: 423, baseType: !443)
!4478 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_clock_mode_t", file: !35, line: 431, baseType: !452)
!4479 = !{!4480, !4481}
!4480 = !DILocalVariable(name: "gpio_clock_num", arg: 1, scope: !4474, file: !368, line: 387, type: !4477)
!4481 = !DILocalVariable(name: "clock_mode", arg: 2, scope: !4474, file: !368, line: 387, type: !4478)
!4482 = !DILocation(line: 0, scope: !4474)
!4483 = !DILocation(line: 390, column: 24, scope: !4484)
!4484 = distinct !DILexicalBlock(scope: !4474, file: !368, line: 390, column: 9)
!4485 = !DILocation(line: 390, column: 9, scope: !4474)
!4486 = !DILocation(line: 394, column: 5, scope: !4474)
!4487 = !DILocation(line: 394, column: 62, scope: !4474)
!4488 = !DILocation(line: 394, column: 74, scope: !4474)
!4489 = !DILocation(line: 395, column: 5, scope: !4474)
!4490 = !DILocation(line: 396, column: 1, scope: !4474)
!4491 = distinct !DISubprogram(name: "hal_gpio_set_pupd_register", scope: !368, file: !368, line: 403, type: !4492, scopeLine: 404, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !367, retainedNodes: !4494)
!4492 = !DISubroutineType(types: !4493)
!4493 = !{!4198, !4175, !127, !127, !127}
!4494 = !{!4495, !4496, !4497, !4498, !4499, !4500}
!4495 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4491, file: !368, line: 403, type: !4175)
!4496 = !DILocalVariable(name: "gpio_pupd", arg: 2, scope: !4491, file: !368, line: 403, type: !127)
!4497 = !DILocalVariable(name: "gpio_r0", arg: 3, scope: !4491, file: !368, line: 403, type: !127)
!4498 = !DILocalVariable(name: "gpio_r1", arg: 4, scope: !4491, file: !368, line: 403, type: !127)
!4499 = !DILocalVariable(name: "no", scope: !4491, file: !368, line: 405, type: !105)
!4500 = !DILocalVariable(name: "remainder", scope: !4491, file: !368, line: 406, type: !105)
!4501 = !DILocation(line: 0, scope: !4491)
!4502 = !DILocation(line: 408, column: 19, scope: !4503)
!4503 = distinct !DILexicalBlock(scope: !4491, file: !368, line: 408, column: 9)
!4504 = !DILocation(line: 408, column: 36, scope: !4503)
!4505 = !DILocation(line: 408, column: 40, scope: !4503)
!4506 = !DILocation(line: 408, column: 9, scope: !4491)
!4507 = !DILocation(line: 413, column: 19, scope: !4491)
!4508 = !DILocation(line: 416, column: 26, scope: !4491)
!4509 = !DILocation(line: 418, column: 9, scope: !4510)
!4510 = distinct !DILexicalBlock(scope: !4491, file: !368, line: 418, column: 9)
!4511 = !DILocation(line: 0, scope: !4510)
!4512 = !DILocation(line: 418, column: 9, scope: !4491)
!4513 = !DILocation(line: 424, column: 9, scope: !4514)
!4514 = distinct !DILexicalBlock(scope: !4491, file: !368, line: 424, column: 9)
!4515 = !DILocation(line: 0, scope: !4514)
!4516 = !DILocation(line: 424, column: 9, scope: !4491)
!4517 = !DILocation(line: 430, column: 9, scope: !4518)
!4518 = distinct !DILexicalBlock(scope: !4491, file: !368, line: 430, column: 9)
!4519 = !DILocation(line: 0, scope: !4518)
!4520 = !DILocation(line: 430, column: 9, scope: !4491)
!4521 = !DILocation(line: 436, column: 1, scope: !4491)
!4522 = distinct !DISubprogram(name: "hal_gpio_set_high_impedance", scope: !368, file: !368, line: 441, type: !4196, scopeLine: 442, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !367, retainedNodes: !4523)
!4523 = !{!4524, !4525, !4526, !4527, !4528, !4529, !4530}
!4524 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4522, file: !368, line: 441, type: !4175)
!4525 = !DILocalVariable(name: "no1", scope: !4522, file: !368, line: 443, type: !105)
!4526 = !DILocalVariable(name: "no2", scope: !4522, file: !368, line: 443, type: !105)
!4527 = !DILocalVariable(name: "no3", scope: !4522, file: !368, line: 443, type: !105)
!4528 = !DILocalVariable(name: "remainder1", scope: !4522, file: !368, line: 444, type: !105)
!4529 = !DILocalVariable(name: "remainder2", scope: !4522, file: !368, line: 444, type: !105)
!4530 = !DILocalVariable(name: "remainder3", scope: !4522, file: !368, line: 444, type: !105)
!4531 = !DILocation(line: 0, scope: !4522)
!4532 = !DILocation(line: 446, column: 18, scope: !4533)
!4533 = distinct !DILexicalBlock(scope: !4522, file: !368, line: 446, column: 9)
!4534 = !DILocation(line: 446, column: 9, scope: !4522)
!4535 = !DILocation(line: 451, column: 20, scope: !4522)
!4536 = !DILocation(line: 454, column: 27, scope: !4522)
!4537 = !DILocation(line: 457, column: 20, scope: !4522)
!4538 = !DILocation(line: 463, column: 20, scope: !4522)
!4539 = !DILocation(line: 469, column: 107, scope: !4522)
!4540 = !DILocation(line: 469, column: 92, scope: !4522)
!4541 = !DILocation(line: 469, column: 5, scope: !4522)
!4542 = !DILocation(line: 469, column: 49, scope: !4522)
!4543 = !DILocation(line: 469, column: 63, scope: !4522)
!4544 = !DILocation(line: 472, column: 89, scope: !4522)
!4545 = !DILocation(line: 472, column: 5, scope: !4522)
!4546 = !DILocation(line: 472, column: 48, scope: !4522)
!4547 = !DILocation(line: 472, column: 61, scope: !4522)
!4548 = !DILocation(line: 475, column: 5, scope: !4522)
!4549 = !DILocation(line: 475, column: 48, scope: !4522)
!4550 = !DILocation(line: 475, column: 61, scope: !4522)
!4551 = !DILocation(line: 478, column: 9, scope: !4552)
!4552 = distinct !DILexicalBlock(scope: !4522, file: !368, line: 478, column: 9)
!4553 = !DILocation(line: 0, scope: !4552)
!4554 = !DILocation(line: 478, column: 9, scope: !4522)
!4555 = !DILocation(line: 479, column: 55, scope: !4556)
!4556 = distinct !DILexicalBlock(scope: !4552, file: !368, line: 478, column: 40)
!4557 = !DILocation(line: 480, column: 5, scope: !4556)
!4558 = !DILocation(line: 483, column: 53, scope: !4559)
!4559 = distinct !DILexicalBlock(scope: !4552, file: !368, line: 482, column: 10)
!4560 = !DILocation(line: 483, column: 67, scope: !4559)
!4561 = !DILocation(line: 484, column: 9, scope: !4559)
!4562 = !DILocation(line: 484, column: 55, scope: !4559)
!4563 = !DILocation(line: 484, column: 71, scope: !4559)
!4564 = !DILocation(line: 485, column: 9, scope: !4559)
!4565 = !DILocation(line: 485, column: 55, scope: !4559)
!4566 = !DILocation(line: 490, column: 5, scope: !4522)
!4567 = !DILocation(line: 490, column: 48, scope: !4522)
!4568 = !DILocation(line: 490, column: 61, scope: !4522)
!4569 = !DILocation(line: 493, column: 5, scope: !4522)
!4570 = !DILocation(line: 493, column: 47, scope: !4522)
!4571 = !DILocation(line: 493, column: 59, scope: !4522)
!4572 = !DILocation(line: 496, column: 108, scope: !4522)
!4573 = !DILocation(line: 496, column: 93, scope: !4522)
!4574 = !DILocation(line: 496, column: 5, scope: !4522)
!4575 = !DILocation(line: 496, column: 50, scope: !4522)
!4576 = !DILocation(line: 496, column: 65, scope: !4522)
!4577 = !DILocation(line: 498, column: 5, scope: !4522)
!4578 = !DILocation(line: 499, column: 1, scope: !4522)
!4579 = distinct !DISubprogram(name: "hal_gpio_clear_high_impedance", scope: !368, file: !368, line: 502, type: !4196, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !367, retainedNodes: !4580)
!4580 = !{!4581, !4582, !4583, !4584, !4585}
!4581 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4579, file: !368, line: 502, type: !4175)
!4582 = !DILocalVariable(name: "no1", scope: !4579, file: !368, line: 504, type: !105)
!4583 = !DILocalVariable(name: "no2", scope: !4579, file: !368, line: 504, type: !105)
!4584 = !DILocalVariable(name: "remainder1", scope: !4579, file: !368, line: 505, type: !105)
!4585 = !DILocalVariable(name: "remainder2", scope: !4579, file: !368, line: 505, type: !105)
!4586 = !DILocation(line: 0, scope: !4579)
!4587 = !DILocation(line: 507, column: 18, scope: !4588)
!4588 = distinct !DILexicalBlock(scope: !4579, file: !368, line: 507, column: 9)
!4589 = !DILocation(line: 507, column: 9, scope: !4579)
!4590 = !DILocation(line: 512, column: 20, scope: !4579)
!4591 = !DILocation(line: 515, column: 27, scope: !4579)
!4592 = !DILocation(line: 518, column: 20, scope: !4579)
!4593 = !DILocation(line: 524, column: 107, scope: !4579)
!4594 = !DILocation(line: 524, column: 92, scope: !4579)
!4595 = !DILocation(line: 524, column: 5, scope: !4579)
!4596 = !DILocation(line: 524, column: 49, scope: !4579)
!4597 = !DILocation(line: 524, column: 63, scope: !4579)
!4598 = !DILocation(line: 527, column: 89, scope: !4579)
!4599 = !DILocation(line: 527, column: 5, scope: !4579)
!4600 = !DILocation(line: 527, column: 48, scope: !4579)
!4601 = !DILocation(line: 527, column: 61, scope: !4579)
!4602 = !DILocation(line: 530, column: 9, scope: !4603)
!4603 = distinct !DILexicalBlock(scope: !4579, file: !368, line: 530, column: 9)
!4604 = !DILocation(line: 0, scope: !4603)
!4605 = !DILocation(line: 530, column: 9, scope: !4579)
!4606 = !DILocation(line: 531, column: 55, scope: !4607)
!4607 = distinct !DILexicalBlock(scope: !4603, file: !368, line: 530, column: 40)
!4608 = !DILocation(line: 531, column: 71, scope: !4607)
!4609 = !DILocation(line: 532, column: 9, scope: !4607)
!4610 = !DILocation(line: 532, column: 56, scope: !4607)
!4611 = !DILocation(line: 533, column: 5, scope: !4607)
!4612 = !DILocation(line: 536, column: 53, scope: !4613)
!4613 = distinct !DILexicalBlock(scope: !4603, file: !368, line: 535, column: 10)
!4614 = !DILocation(line: 536, column: 67, scope: !4613)
!4615 = !DILocation(line: 537, column: 9, scope: !4613)
!4616 = !DILocation(line: 537, column: 55, scope: !4613)
!4617 = !DILocation(line: 537, column: 71, scope: !4613)
!4618 = !DILocation(line: 538, column: 9, scope: !4613)
!4619 = !DILocation(line: 538, column: 55, scope: !4613)
!4620 = !DILocation(line: 543, column: 5, scope: !4579)
!4621 = !DILocation(line: 543, column: 48, scope: !4579)
!4622 = !DILocation(line: 543, column: 61, scope: !4579)
!4623 = !DILocation(line: 546, column: 5, scope: !4579)
!4624 = !DILocation(line: 546, column: 47, scope: !4579)
!4625 = !DILocation(line: 546, column: 59, scope: !4579)
!4626 = !DILocation(line: 549, column: 5, scope: !4579)
!4627 = !DILocation(line: 550, column: 1, scope: !4579)
!4628 = distinct !DISubprogram(name: "hal_gpio_set_driving_current", scope: !368, file: !368, line: 554, type: !4629, scopeLine: 555, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !367, retainedNodes: !4631)
!4629 = !DISubroutineType(types: !4630)
!4630 = !{!4198, !4175, !466}
!4631 = !{!4632, !4633, !4634, !4635}
!4632 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4628, file: !368, line: 554, type: !4175)
!4633 = !DILocalVariable(name: "driving", arg: 2, scope: !4628, file: !368, line: 554, type: !466)
!4634 = !DILocalVariable(name: "no", scope: !4628, file: !368, line: 556, type: !105)
!4635 = !DILocalVariable(name: "remainder", scope: !4628, file: !368, line: 557, type: !105)
!4636 = !DILocation(line: 0, scope: !4628)
!4637 = !DILocation(line: 559, column: 19, scope: !4638)
!4638 = distinct !DILexicalBlock(scope: !4628, file: !368, line: 559, column: 9)
!4639 = !DILocation(line: 559, column: 9, scope: !4628)
!4640 = !DILocation(line: 564, column: 19, scope: !4628)
!4641 = !DILocation(line: 569, column: 102, scope: !4628)
!4642 = !DILocation(line: 569, column: 88, scope: !4628)
!4643 = !DILocation(line: 569, column: 5, scope: !4628)
!4644 = !DILocation(line: 569, column: 47, scope: !4628)
!4645 = !DILocation(line: 569, column: 60, scope: !4628)
!4646 = !DILocation(line: 570, column: 71, scope: !4628)
!4647 = !DILocation(line: 570, column: 5, scope: !4628)
!4648 = !DILocation(line: 570, column: 47, scope: !4628)
!4649 = !DILocation(line: 570, column: 60, scope: !4628)
!4650 = !DILocation(line: 571, column: 5, scope: !4628)
!4651 = !DILocation(line: 572, column: 1, scope: !4628)
!4652 = distinct !DISubprogram(name: "hal_gpio_get_driving_current", scope: !368, file: !368, line: 575, type: !4653, scopeLine: 576, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !367, retainedNodes: !4656)
!4653 = !DISubroutineType(types: !4654)
!4654 = !{!4198, !4175, !4655}
!4655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !466, size: 32)
!4656 = !{!4657, !4658, !4659, !4660, !4661}
!4657 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4652, file: !368, line: 575, type: !4175)
!4658 = !DILocalVariable(name: "driving", arg: 2, scope: !4652, file: !368, line: 575, type: !4655)
!4659 = !DILocalVariable(name: "no", scope: !4652, file: !368, line: 577, type: !105)
!4660 = !DILocalVariable(name: "remainder", scope: !4652, file: !368, line: 578, type: !105)
!4661 = !DILocalVariable(name: "temp", scope: !4652, file: !368, line: 579, type: !105)
!4662 = !DILocation(line: 0, scope: !4652)
!4663 = !DILocation(line: 581, column: 19, scope: !4664)
!4664 = distinct !DILexicalBlock(scope: !4652, file: !368, line: 581, column: 9)
!4665 = !DILocation(line: 581, column: 9, scope: !4652)
!4666 = !DILocation(line: 585, column: 14, scope: !4667)
!4667 = distinct !DILexicalBlock(scope: !4652, file: !368, line: 585, column: 9)
!4668 = !DILocation(line: 585, column: 9, scope: !4652)
!4669 = !DILocation(line: 590, column: 19, scope: !4652)
!4670 = !DILocation(line: 595, column: 12, scope: !4652)
!4671 = !DILocation(line: 595, column: 54, scope: !4652)
!4672 = !DILocation(line: 596, column: 59, scope: !4652)
!4673 = !DILocation(line: 596, column: 45, scope: !4652)
!4674 = !DILocation(line: 596, column: 17, scope: !4652)
!4675 = !DILocation(line: 597, column: 18, scope: !4652)
!4676 = !DILocation(line: 600, column: 56, scope: !4652)
!4677 = !DILocation(line: 600, column: 14, scope: !4652)
!4678 = !DILocation(line: 602, column: 5, scope: !4652)
!4679 = !DILocation(line: 603, column: 1, scope: !4652)
!4680 = distinct !DISubprogram(name: "uart_receive_handler", scope: !648, file: !648, line: 146, type: !4681, scopeLine: 147, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !647, retainedNodes: !4683)
!4681 = !DISubroutineType(types: !4682)
!4682 = !{null, !753, !321}
!4683 = !{!4684, !4685, !4686, !4688, !4689, !4690, !4691, !4747}
!4684 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4680, file: !648, line: 146, type: !753)
!4685 = !DILocalVariable(name: "is_timeout", arg: 2, scope: !4680, file: !648, line: 146, type: !321)
!4686 = !DILocalVariable(name: "channel", scope: !4680, file: !648, line: 148, type: !4687)
!4687 = !DIDerivedType(tag: DW_TAG_typedef, name: "vdma_channel_t", file: !658, line: 203, baseType: !657)
!4688 = !DILocalVariable(name: "avail_bytes", scope: !4680, file: !648, line: 149, type: !105)
!4689 = !DILocalVariable(name: "callback", scope: !4680, file: !648, line: 150, type: !800)
!4690 = !DILocalVariable(name: "arg", scope: !4680, file: !648, line: 151, type: !124)
!4691 = !DILocalVariable(name: "uartx", scope: !4680, file: !648, line: 152, type: !4692)
!4692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4693, size: 32)
!4693 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_REGISTER_T", file: !100, line: 588, baseType: !4694)
!4694 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !100, line: 542, size: 800, elements: !4695)
!4695 = !{!4696, !4702, !4707, !4713, !4714, !4719, !4724, !4725, !4730, !4731, !4732, !4733, !4734, !4735, !4736, !4737, !4738, !4739, !4740, !4741, !4742, !4743, !4744, !4745, !4746}
!4696 = !DIDerivedType(tag: DW_TAG_member, name: "RBR_THR_DLL", scope: !4694, file: !100, line: 547, baseType: !4697, size: 32)
!4697 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4694, file: !100, line: 543, size: 32, elements: !4698)
!4698 = !{!4699, !4700, !4701}
!4699 = !DIDerivedType(tag: DW_TAG_member, name: "RBR", scope: !4697, file: !100, line: 544, baseType: !299, size: 32)
!4700 = !DIDerivedType(tag: DW_TAG_member, name: "THR", scope: !4697, file: !100, line: 545, baseType: !104, size: 32)
!4701 = !DIDerivedType(tag: DW_TAG_member, name: "DLL", scope: !4697, file: !100, line: 546, baseType: !104, size: 32)
!4702 = !DIDerivedType(tag: DW_TAG_member, name: "IER_DLM", scope: !4694, file: !100, line: 551, baseType: !4703, size: 32, offset: 32)
!4703 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4694, file: !100, line: 548, size: 32, elements: !4704)
!4704 = !{!4705, !4706}
!4705 = !DIDerivedType(tag: DW_TAG_member, name: "IER", scope: !4703, file: !100, line: 549, baseType: !104, size: 32)
!4706 = !DIDerivedType(tag: DW_TAG_member, name: "DLM", scope: !4703, file: !100, line: 550, baseType: !104, size: 32)
!4707 = !DIDerivedType(tag: DW_TAG_member, name: "IIR_FCR_EFR", scope: !4694, file: !100, line: 556, baseType: !4708, size: 32, offset: 64)
!4708 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4694, file: !100, line: 552, size: 32, elements: !4709)
!4709 = !{!4710, !4711, !4712}
!4710 = !DIDerivedType(tag: DW_TAG_member, name: "IIR", scope: !4708, file: !100, line: 553, baseType: !299, size: 32)
!4711 = !DIDerivedType(tag: DW_TAG_member, name: "FCR", scope: !4708, file: !100, line: 554, baseType: !104, size: 32)
!4712 = !DIDerivedType(tag: DW_TAG_member, name: "EFR", scope: !4708, file: !100, line: 555, baseType: !104, size: 32)
!4713 = !DIDerivedType(tag: DW_TAG_member, name: "LCR", scope: !4694, file: !100, line: 557, baseType: !104, size: 32, offset: 96)
!4714 = !DIDerivedType(tag: DW_TAG_member, name: "MCR_XON1", scope: !4694, file: !100, line: 561, baseType: !4715, size: 32, offset: 128)
!4715 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4694, file: !100, line: 558, size: 32, elements: !4716)
!4716 = !{!4717, !4718}
!4717 = !DIDerivedType(tag: DW_TAG_member, name: "MCR", scope: !4715, file: !100, line: 559, baseType: !104, size: 32)
!4718 = !DIDerivedType(tag: DW_TAG_member, name: "XON1", scope: !4715, file: !100, line: 560, baseType: !104, size: 32)
!4719 = !DIDerivedType(tag: DW_TAG_member, name: "LSR_XON2", scope: !4694, file: !100, line: 565, baseType: !4720, size: 32, offset: 160)
!4720 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4694, file: !100, line: 562, size: 32, elements: !4721)
!4721 = !{!4722, !4723}
!4722 = !DIDerivedType(tag: DW_TAG_member, name: "LSR", scope: !4720, file: !100, line: 563, baseType: !299, size: 32)
!4723 = !DIDerivedType(tag: DW_TAG_member, name: "XON2", scope: !4720, file: !100, line: 564, baseType: !104, size: 32)
!4724 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF1", scope: !4694, file: !100, line: 566, baseType: !104, size: 32, offset: 192)
!4725 = !DIDerivedType(tag: DW_TAG_member, name: "SCR_XOFF2", scope: !4694, file: !100, line: 570, baseType: !4726, size: 32, offset: 224)
!4726 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4694, file: !100, line: 567, size: 32, elements: !4727)
!4727 = !{!4728, !4729}
!4728 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !4726, file: !100, line: 568, baseType: !104, size: 32)
!4729 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF2", scope: !4726, file: !100, line: 569, baseType: !104, size: 32)
!4730 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_EN", scope: !4694, file: !100, line: 571, baseType: !104, size: 32, offset: 256)
!4731 = !DIDerivedType(tag: DW_TAG_member, name: "HIGHSPEED", scope: !4694, file: !100, line: 572, baseType: !104, size: 32, offset: 288)
!4732 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_COUNT", scope: !4694, file: !100, line: 573, baseType: !104, size: 32, offset: 320)
!4733 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_POINT", scope: !4694, file: !100, line: 574, baseType: !104, size: 32, offset: 352)
!4734 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_REG", scope: !4694, file: !100, line: 575, baseType: !299, size: 32, offset: 384)
!4735 = !DIDerivedType(tag: DW_TAG_member, name: "RATEFIX_AD", scope: !4694, file: !100, line: 576, baseType: !104, size: 32, offset: 416)
!4736 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUDSAMPLE", scope: !4694, file: !100, line: 577, baseType: !104, size: 32, offset: 448)
!4737 = !DIDerivedType(tag: DW_TAG_member, name: "GUARD", scope: !4694, file: !100, line: 578, baseType: !104, size: 32, offset: 480)
!4738 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_DAT", scope: !4694, file: !100, line: 579, baseType: !104, size: 32, offset: 512)
!4739 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_EN", scope: !4694, file: !100, line: 580, baseType: !104, size: 32, offset: 544)
!4740 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEP_EN", scope: !4694, file: !100, line: 581, baseType: !104, size: 32, offset: 576)
!4741 = !DIDerivedType(tag: DW_TAG_member, name: "DMA_EN", scope: !4694, file: !100, line: 582, baseType: !104, size: 32, offset: 608)
!4742 = !DIDerivedType(tag: DW_TAG_member, name: "RXTRI_AD", scope: !4694, file: !100, line: 583, baseType: !104, size: 32, offset: 640)
!4743 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_L", scope: !4694, file: !100, line: 584, baseType: !104, size: 32, offset: 672)
!4744 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_M", scope: !4694, file: !100, line: 585, baseType: !104, size: 32, offset: 704)
!4745 = !DIDerivedType(tag: DW_TAG_member, name: "FCR_RD", scope: !4694, file: !100, line: 586, baseType: !299, size: 32, offset: 736)
!4746 = !DIDerivedType(tag: DW_TAG_member, name: "TX_ACTIVE_EN", scope: !4694, file: !100, line: 587, baseType: !104, size: 32, offset: 768)
!4747 = !DILocalVariable(name: "status", scope: !4680, file: !648, line: 153, type: !4748)
!4748 = !DIDerivedType(tag: DW_TAG_typedef, name: "vdma_status_t", file: !658, line: 211, baseType: !678)
!4749 = !DILocation(line: 0, scope: !4680)
!4750 = !DILocation(line: 149, column: 5, scope: !4680)
!4751 = !DILocation(line: 155, column: 9, scope: !4752)
!4752 = distinct !DILexicalBlock(scope: !4680, file: !648, line: 155, column: 9)
!4753 = !DILocation(line: 155, column: 36, scope: !4752)
!4754 = !DILocation(line: 155, column: 9, scope: !4680)
!4755 = !DILocation(line: 156, column: 9, scope: !4756)
!4756 = distinct !DILexicalBlock(scope: !4752, file: !648, line: 155, column: 70)
!4757 = !DILocation(line: 160, column: 13, scope: !4680)
!4758 = !DILocation(line: 161, column: 15, scope: !4680)
!4759 = !DILocation(line: 163, column: 9, scope: !4680)
!4760 = !DILocation(line: 164, column: 9, scope: !4761)
!4761 = distinct !DILexicalBlock(scope: !4762, file: !648, line: 163, column: 29)
!4762 = distinct !DILexicalBlock(scope: !4680, file: !648, line: 163, column: 9)
!4763 = !DILocation(line: 165, column: 5, scope: !4761)
!4764 = !DILocation(line: 167, column: 14, scope: !4680)
!4765 = !DILocation(line: 168, column: 16, scope: !4766)
!4766 = distinct !DILexicalBlock(scope: !4680, file: !648, line: 168, column: 9)
!4767 = !DILocation(line: 168, column: 9, scope: !4680)
!4768 = !DILocation(line: 169, column: 9, scope: !4769)
!4769 = distinct !DILexicalBlock(scope: !4766, file: !648, line: 168, column: 28)
!4770 = !DILocation(line: 172, column: 9, scope: !4771)
!4771 = distinct !DILexicalBlock(scope: !4680, file: !648, line: 172, column: 9)
!4772 = !DILocation(line: 172, column: 21, scope: !4771)
!4773 = !DILocation(line: 172, column: 9, scope: !4680)
!4774 = !DILocation(line: 176, column: 43, scope: !4680)
!4775 = !DILocation(line: 178, column: 18, scope: !4776)
!4776 = distinct !DILexicalBlock(scope: !4680, file: !648, line: 178, column: 9)
!4777 = !DILocation(line: 178, column: 9, scope: !4680)
!4778 = !DILocation(line: 179, column: 9, scope: !4779)
!4779 = distinct !DILexicalBlock(scope: !4776, file: !648, line: 178, column: 27)
!4780 = !DILocation(line: 177, column: 38, scope: !4680)
!4781 = !DILocation(line: 183, column: 5, scope: !4680)
!4782 = !DILocation(line: 184, column: 5, scope: !4680)
!4783 = !DILocation(line: 185, column: 5, scope: !4680)
!4784 = !DILocation(line: 187, column: 14, scope: !4680)
!4785 = !DILocation(line: 188, column: 16, scope: !4786)
!4786 = distinct !DILexicalBlock(scope: !4680, file: !648, line: 188, column: 9)
!4787 = !DILocation(line: 188, column: 9, scope: !4680)
!4788 = !DILocation(line: 189, column: 9, scope: !4789)
!4789 = distinct !DILexicalBlock(scope: !4786, file: !648, line: 188, column: 28)
!4790 = !DILocation(line: 192, column: 9, scope: !4791)
!4791 = distinct !DILexicalBlock(scope: !4680, file: !648, line: 192, column: 9)
!4792 = !DILocation(line: 192, column: 53, scope: !4791)
!4793 = !DILocation(line: 192, column: 21, scope: !4791)
!4794 = !DILocation(line: 192, column: 9, scope: !4680)
!4795 = !DILocation(line: 193, column: 18, scope: !4796)
!4796 = distinct !DILexicalBlock(scope: !4791, file: !648, line: 192, column: 83)
!4797 = !DILocation(line: 194, column: 20, scope: !4798)
!4798 = distinct !DILexicalBlock(scope: !4796, file: !648, line: 194, column: 13)
!4799 = !DILocation(line: 194, column: 13, scope: !4796)
!4800 = !DILocation(line: 195, column: 13, scope: !4801)
!4801 = distinct !DILexicalBlock(scope: !4798, file: !648, line: 194, column: 32)
!4802 = !DILocation(line: 199, column: 1, scope: !4680)
!4803 = distinct !DISubprogram(name: "uart_send_handler", scope: !648, file: !648, line: 210, type: !4681, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !647, retainedNodes: !4804)
!4804 = !{!4805, !4806, !4807, !4808, !4809, !4810, !4811, !4812, !4813}
!4805 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4803, file: !648, line: 210, type: !753)
!4806 = !DILocalVariable(name: "is_send_complete_trigger", arg: 2, scope: !4803, file: !648, line: 210, type: !321)
!4807 = !DILocalVariable(name: "channel", scope: !4803, file: !648, line: 212, type: !4687)
!4808 = !DILocalVariable(name: "status", scope: !4803, file: !648, line: 213, type: !4748)
!4809 = !DILocalVariable(name: "compare_space", scope: !4803, file: !648, line: 214, type: !105)
!4810 = !DILocalVariable(name: "avail_space", scope: !4803, file: !648, line: 214, type: !105)
!4811 = !DILocalVariable(name: "callback", scope: !4803, file: !648, line: 215, type: !800)
!4812 = !DILocalVariable(name: "arg", scope: !4803, file: !648, line: 216, type: !124)
!4813 = !DILocalVariable(name: "irq_status", scope: !4803, file: !648, line: 218, type: !105)
!4814 = !DILocation(line: 0, scope: !4803)
!4815 = !DILocation(line: 214, column: 5, scope: !4803)
!4816 = !DILocation(line: 221, column: 9, scope: !4817)
!4817 = distinct !DILexicalBlock(scope: !4803, file: !648, line: 221, column: 9)
!4818 = !DILocation(line: 221, column: 36, scope: !4817)
!4819 = !DILocation(line: 221, column: 9, scope: !4803)
!4820 = !DILocation(line: 222, column: 9, scope: !4821)
!4821 = distinct !DILexicalBlock(scope: !4817, file: !648, line: 221, column: 70)
!4822 = !DILocation(line: 226, column: 15, scope: !4803)
!4823 = !DILocation(line: 228, column: 9, scope: !4803)
!4824 = !DILocation(line: 230, column: 13, scope: !4825)
!4825 = distinct !DILexicalBlock(scope: !4826, file: !648, line: 230, column: 13)
!4826 = distinct !DILexicalBlock(scope: !4827, file: !648, line: 228, column: 43)
!4827 = distinct !DILexicalBlock(scope: !4803, file: !648, line: 228, column: 9)
!4828 = !DILocation(line: 230, column: 61, scope: !4825)
!4829 = !DILocation(line: 230, column: 13, scope: !4826)
!4830 = !DILocation(line: 231, column: 26, scope: !4831)
!4831 = distinct !DILexicalBlock(scope: !4825, file: !648, line: 230, column: 71)
!4832 = !DILocation(line: 232, column: 22, scope: !4831)
!4833 = !DILocation(line: 233, column: 24, scope: !4834)
!4834 = distinct !DILexicalBlock(scope: !4831, file: !648, line: 233, column: 17)
!4835 = !DILocation(line: 233, column: 17, scope: !4831)
!4836 = !DILocation(line: 234, column: 17, scope: !4837)
!4837 = distinct !DILexicalBlock(scope: !4834, file: !648, line: 233, column: 36)
!4838 = !DILocation(line: 237, column: 46, scope: !4839)
!4839 = distinct !DILexicalBlock(scope: !4831, file: !648, line: 237, column: 17)
!4840 = !DILocation(line: 237, column: 71, scope: !4839)
!4841 = !DILocation(line: 237, column: 83, scope: !4839)
!4842 = !DILocation(line: 237, column: 17, scope: !4831)
!4843 = !DILocation(line: 238, column: 21, scope: !4844)
!4844 = distinct !DILexicalBlock(scope: !4845, file: !648, line: 238, column: 21)
!4845 = distinct !DILexicalBlock(scope: !4839, file: !648, line: 237, column: 89)
!4846 = !DILocation(line: 238, column: 21, scope: !4845)
!4847 = !DILocation(line: 240, column: 65, scope: !4848)
!4848 = distinct !DILexicalBlock(scope: !4849, file: !648, line: 240, column: 25)
!4849 = distinct !DILexicalBlock(scope: !4844, file: !648, line: 238, column: 65)
!4850 = !DILocation(line: 240, column: 25, scope: !4848)
!4851 = !DILocation(line: 240, column: 25, scope: !4849)
!4852 = !DILocation(line: 241, column: 56, scope: !4853)
!4853 = distinct !DILexicalBlock(scope: !4848, file: !648, line: 240, column: 107)
!4854 = !DILocation(line: 241, column: 25, scope: !4853)
!4855 = !DILocation(line: 242, column: 21, scope: !4853)
!4856 = !DILocation(line: 243, column: 56, scope: !4849)
!4857 = !DILocation(line: 244, column: 17, scope: !4849)
!4858 = !DILocation(line: 246, column: 13, scope: !4831)
!4859 = !DILocation(line: 247, column: 9, scope: !4831)
!4860 = !DILocation(line: 248, column: 61, scope: !4861)
!4861 = distinct !DILexicalBlock(scope: !4825, file: !648, line: 247, column: 16)
!4862 = !DILocation(line: 253, column: 47, scope: !4863)
!4863 = distinct !DILexicalBlock(scope: !4827, file: !648, line: 252, column: 12)
!4864 = !DILocation(line: 255, column: 22, scope: !4865)
!4865 = distinct !DILexicalBlock(scope: !4863, file: !648, line: 255, column: 13)
!4866 = !DILocation(line: 255, column: 13, scope: !4863)
!4867 = !DILocation(line: 256, column: 13, scope: !4868)
!4868 = distinct !DILexicalBlock(scope: !4865, file: !648, line: 255, column: 31)
!4869 = !DILocation(line: 254, column: 42, scope: !4863)
!4870 = !DILocation(line: 260, column: 9, scope: !4863)
!4871 = !DILocation(line: 261, column: 9, scope: !4863)
!4872 = !DILocation(line: 262, column: 9, scope: !4863)
!4873 = !DILocation(line: 264, column: 18, scope: !4863)
!4874 = !DILocation(line: 265, column: 20, scope: !4875)
!4875 = distinct !DILexicalBlock(scope: !4863, file: !648, line: 265, column: 13)
!4876 = !DILocation(line: 265, column: 13, scope: !4863)
!4877 = !DILocation(line: 266, column: 13, scope: !4878)
!4878 = distinct !DILexicalBlock(scope: !4875, file: !648, line: 265, column: 32)
!4879 = !DILocation(line: 269, column: 54, scope: !4863)
!4880 = !DILocation(line: 270, column: 56, scope: !4863)
!4881 = !DILocation(line: 270, column: 25, scope: !4863)
!4882 = !DILocation(line: 271, column: 13, scope: !4883)
!4883 = distinct !DILexicalBlock(scope: !4863, file: !648, line: 271, column: 13)
!4884 = !DILocation(line: 271, column: 25, scope: !4883)
!4885 = !DILocation(line: 271, column: 13, scope: !4863)
!4886 = !DILocation(line: 272, column: 22, scope: !4887)
!4887 = distinct !DILexicalBlock(scope: !4883, file: !648, line: 271, column: 43)
!4888 = !DILocation(line: 273, column: 24, scope: !4889)
!4889 = distinct !DILexicalBlock(scope: !4887, file: !648, line: 273, column: 17)
!4890 = !DILocation(line: 273, column: 17, scope: !4887)
!4891 = !DILocation(line: 274, column: 17, scope: !4892)
!4892 = distinct !DILexicalBlock(scope: !4889, file: !648, line: 273, column: 36)
!4893 = !DILocation(line: 279, column: 1, scope: !4803)
!4894 = distinct !DISubprogram(name: "uart_error_handler", scope: !648, file: !648, line: 282, type: !4895, scopeLine: 283, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !647, retainedNodes: !4897)
!4895 = !DISubroutineType(types: !4896)
!4896 = !{null, !753}
!4897 = !{!4898, !4899, !4900, !4901}
!4898 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4894, file: !648, line: 282, type: !753)
!4899 = !DILocalVariable(name: "uartx", scope: !4894, file: !648, line: 284, type: !4692)
!4900 = !DILocalVariable(name: "callback", scope: !4894, file: !648, line: 285, type: !800)
!4901 = !DILocalVariable(name: "arg", scope: !4894, file: !648, line: 286, type: !124)
!4902 = !DILocation(line: 0, scope: !4894)
!4903 = !DILocation(line: 288, column: 13, scope: !4894)
!4904 = !DILocation(line: 290, column: 10, scope: !4905)
!4905 = distinct !DILexicalBlock(scope: !4894, file: !648, line: 290, column: 9)
!4906 = !DILocation(line: 290, column: 9, scope: !4894)
!4907 = !DILocation(line: 291, column: 9, scope: !4908)
!4908 = distinct !DILexicalBlock(scope: !4905, file: !648, line: 290, column: 36)
!4909 = !DILocation(line: 292, column: 9, scope: !4908)
!4910 = !DILocation(line: 293, column: 47, scope: !4908)
!4911 = !DILocation(line: 295, column: 22, scope: !4912)
!4912 = distinct !DILexicalBlock(scope: !4908, file: !648, line: 295, column: 13)
!4913 = !DILocation(line: 295, column: 13, scope: !4908)
!4914 = !DILocation(line: 296, column: 13, scope: !4915)
!4915 = distinct !DILexicalBlock(scope: !4912, file: !648, line: 295, column: 31)
!4916 = !DILocation(line: 294, column: 42, scope: !4908)
!4917 = !DILocation(line: 299, column: 9, scope: !4908)
!4918 = !DILocation(line: 300, column: 5, scope: !4908)
!4919 = !DILocation(line: 301, column: 1, scope: !4894)
!4920 = distinct !DISubprogram(name: "uart_backup_all_registers", scope: !648, file: !648, line: 315, type: !318, scopeLine: 316, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !647, retainedNodes: !4921)
!4921 = !{!4922, !4923, !4924, !4925, !4926}
!4922 = !DILocalVariable(name: "uart_port", scope: !4920, file: !648, line: 317, type: !753)
!4923 = !DILocalVariable(name: "uart_hwstatus", scope: !4920, file: !648, line: 318, type: !835)
!4924 = !DILocalVariable(name: "uart_flowcontrol", scope: !4920, file: !648, line: 319, type: !767)
!4925 = !DILocalVariable(name: "uart_callback", scope: !4920, file: !648, line: 320, type: !800)
!4926 = !DILocalVariable(name: "uart_callback_arg", scope: !4920, file: !648, line: 321, type: !124)
!4927 = !DILocation(line: 0, scope: !4920)
!4928 = !DILocation(line: 329, column: 5, scope: !4929)
!4929 = distinct !DILexicalBlock(scope: !4920, file: !648, line: 329, column: 5)
!4930 = !DILocation(line: 330, column: 13, scope: !4931)
!4931 = distinct !DILexicalBlock(scope: !4932, file: !648, line: 330, column: 13)
!4932 = distinct !DILexicalBlock(scope: !4933, file: !648, line: 329, column: 73)
!4933 = distinct !DILexicalBlock(scope: !4929, file: !648, line: 329, column: 5)
!4934 = !DILocation(line: 330, column: 40, scope: !4931)
!4935 = !DILocation(line: 330, column: 13, scope: !4932)
!4936 = !DILocation(line: 331, column: 29, scope: !4937)
!4937 = distinct !DILexicalBlock(scope: !4931, file: !648, line: 330, column: 72)
!4938 = !DILocation(line: 332, column: 32, scope: !4937)
!4939 = !DILocation(line: 333, column: 56, scope: !4937)
!4940 = !DILocation(line: 334, column: 60, scope: !4937)
!4941 = !DILocation(line: 345, column: 13, scope: !4937)
!4942 = !DILocation(line: 346, column: 40, scope: !4937)
!4943 = !DILocation(line: 347, column: 50, scope: !4937)
!4944 = !DILocation(line: 348, column: 45, scope: !4937)
!4945 = !DILocation(line: 349, column: 44, scope: !4937)
!4946 = !DILocation(line: 350, column: 77, scope: !4937)
!4947 = !DILocation(line: 350, column: 52, scope: !4937)
!4948 = !DILocation(line: 350, column: 13, scope: !4937)
!4949 = !DILocation(line: 350, column: 50, scope: !4937)
!4950 = !DILocation(line: 358, column: 9, scope: !4937)
!4951 = !DILocation(line: 329, column: 69, scope: !4933)
!4952 = !DILocation(line: 329, column: 44, scope: !4933)
!4953 = distinct !{!4953, !4928, !4954}
!4954 = !DILocation(line: 359, column: 5, scope: !4929)
!4955 = !DILocation(line: 360, column: 1, scope: !4920)
!4956 = distinct !DISubprogram(name: "hal_uart_deinit", scope: !648, file: !648, line: 544, type: !4957, scopeLine: 545, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !647, retainedNodes: !4960)
!4957 = !DISubroutineType(types: !4958)
!4958 = !{!4959, !753}
!4959 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_status_t", file: !673, line: 351, baseType: !694)
!4960 = !{!4961, !4962, !4963, !4964, !4965, !4966, !4967}
!4961 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4956, file: !648, line: 544, type: !753)
!4962 = !DILocalVariable(name: "uartx", scope: !4956, file: !648, line: 546, type: !4692)
!4963 = !DILocalVariable(name: "tx_dma_channel", scope: !4956, file: !648, line: 547, type: !4687)
!4964 = !DILocalVariable(name: "rx_dma_channel", scope: !4956, file: !648, line: 547, type: !4687)
!4965 = !DILocalVariable(name: "irq_status", scope: !4956, file: !648, line: 548, type: !105)
!4966 = !DILocalVariable(name: "status", scope: !4956, file: !648, line: 549, type: !4748)
!4967 = !DILocalVariable(name: "clock_status", scope: !4956, file: !648, line: 550, type: !4968)
!4968 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_clock_status_t", file: !28, line: 106, baseType: !27)
!4969 = !DILocation(line: 0, scope: !4956)
!4970 = !DILocation(line: 552, column: 10, scope: !4971)
!4971 = distinct !DILexicalBlock(scope: !4956, file: !648, line: 552, column: 9)
!4972 = !DILocation(line: 552, column: 9, scope: !4956)
!4973 = !DILocation(line: 556, column: 18, scope: !4956)
!4974 = !DILocation(line: 557, column: 9, scope: !4975)
!4975 = distinct !DILexicalBlock(scope: !4956, file: !648, line: 557, column: 9)
!4976 = !DILocation(line: 557, column: 36, scope: !4975)
!4977 = !DILocation(line: 557, column: 9, scope: !4956)
!4978 = !DILocation(line: 562, column: 13, scope: !4956)
!4979 = !DILocation(line: 565, column: 5, scope: !4956)
!4980 = !DILocation(line: 568, column: 9, scope: !4981)
!4981 = distinct !DILexicalBlock(scope: !4956, file: !648, line: 568, column: 9)
!4982 = !DILocation(line: 568, column: 36, scope: !4981)
!4983 = !DILocation(line: 568, column: 9, scope: !4956)
!4984 = !DILocation(line: 569, column: 26, scope: !4985)
!4985 = distinct !DILexicalBlock(scope: !4981, file: !648, line: 568, column: 70)
!4986 = !DILocation(line: 570, column: 26, scope: !4985)
!4987 = !DILocation(line: 572, column: 18, scope: !4985)
!4988 = !DILocation(line: 573, column: 20, scope: !4989)
!4989 = distinct !DILexicalBlock(scope: !4985, file: !648, line: 573, column: 13)
!4990 = !DILocation(line: 573, column: 13, scope: !4985)
!4991 = !DILocation(line: 574, column: 13, scope: !4992)
!4992 = distinct !DILexicalBlock(scope: !4989, file: !648, line: 573, column: 32)
!4993 = !DILocation(line: 575, column: 13, scope: !4992)
!4994 = !DILocation(line: 578, column: 18, scope: !4985)
!4995 = !DILocation(line: 579, column: 20, scope: !4996)
!4996 = distinct !DILexicalBlock(scope: !4985, file: !648, line: 579, column: 13)
!4997 = !DILocation(line: 579, column: 13, scope: !4985)
!4998 = !DILocation(line: 580, column: 13, scope: !4999)
!4999 = distinct !DILexicalBlock(scope: !4996, file: !648, line: 579, column: 32)
!5000 = !DILocation(line: 581, column: 13, scope: !4999)
!5001 = !DILocation(line: 584, column: 18, scope: !4985)
!5002 = !DILocation(line: 585, column: 20, scope: !5003)
!5003 = distinct !DILexicalBlock(scope: !4985, file: !648, line: 585, column: 13)
!5004 = !DILocation(line: 585, column: 13, scope: !4985)
!5005 = !DILocation(line: 586, column: 13, scope: !5006)
!5006 = distinct !DILexicalBlock(scope: !5003, file: !648, line: 585, column: 32)
!5007 = !DILocation(line: 587, column: 13, scope: !5006)
!5008 = !DILocation(line: 590, column: 18, scope: !4985)
!5009 = !DILocation(line: 591, column: 20, scope: !5010)
!5010 = distinct !DILexicalBlock(scope: !4985, file: !648, line: 591, column: 13)
!5011 = !DILocation(line: 591, column: 13, scope: !4985)
!5012 = !DILocation(line: 592, column: 13, scope: !5013)
!5013 = distinct !DILexicalBlock(scope: !5010, file: !648, line: 591, column: 32)
!5014 = !DILocation(line: 593, column: 13, scope: !5013)
!5015 = !DILocation(line: 596, column: 18, scope: !4985)
!5016 = !DILocation(line: 597, column: 20, scope: !5017)
!5017 = distinct !DILexicalBlock(scope: !4985, file: !648, line: 597, column: 13)
!5018 = !DILocation(line: 597, column: 13, scope: !4985)
!5019 = !DILocation(line: 598, column: 13, scope: !5020)
!5020 = distinct !DILexicalBlock(scope: !5017, file: !648, line: 597, column: 32)
!5021 = !DILocation(line: 599, column: 13, scope: !5020)
!5022 = !DILocation(line: 602, column: 18, scope: !4985)
!5023 = !DILocation(line: 603, column: 20, scope: !5024)
!5024 = distinct !DILexicalBlock(scope: !4985, file: !648, line: 603, column: 13)
!5025 = !DILocation(line: 603, column: 13, scope: !4985)
!5026 = !DILocation(line: 604, column: 13, scope: !5027)
!5027 = distinct !DILexicalBlock(scope: !5024, file: !648, line: 603, column: 32)
!5028 = !DILocation(line: 605, column: 13, scope: !5027)
!5029 = !DILocation(line: 608, column: 30, scope: !4985)
!5030 = !DILocation(line: 608, column: 9, scope: !4985)
!5031 = !DILocation(line: 609, column: 5, scope: !4985)
!5032 = !DILocation(line: 610, column: 5, scope: !4956)
!5033 = !DILocation(line: 611, column: 38, scope: !4956)
!5034 = !DILocation(line: 611, column: 20, scope: !4956)
!5035 = !DILocation(line: 612, column: 22, scope: !5036)
!5036 = distinct !DILexicalBlock(scope: !4956, file: !648, line: 612, column: 9)
!5037 = !DILocation(line: 612, column: 9, scope: !4956)
!5038 = !DILocation(line: 613, column: 9, scope: !5039)
!5039 = distinct !DILexicalBlock(scope: !5036, file: !648, line: 612, column: 46)
!5040 = !DILocation(line: 614, column: 9, scope: !5039)
!5041 = !DILocation(line: 618, column: 32, scope: !4956)
!5042 = !DILocation(line: 618, column: 37, scope: !4956)
!5043 = !DILocation(line: 619, column: 32, scope: !4956)
!5044 = !DILocation(line: 619, column: 36, scope: !4956)
!5045 = !DILocation(line: 622, column: 5, scope: !4956)
!5046 = !DILocation(line: 622, column: 53, scope: !4956)
!5047 = !DILocation(line: 623, column: 5, scope: !4956)
!5048 = !DILocation(line: 623, column: 42, scope: !4956)
!5049 = !DILocation(line: 635, column: 32, scope: !4956)
!5050 = !DILocation(line: 639, column: 5, scope: !4956)
!5051 = !DILocation(line: 640, column: 1, scope: !4956)
!5052 = distinct !DISubprogram(name: "uart_port_is_valid", scope: !648, file: !648, line: 120, type: !5053, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !647, retainedNodes: !5055)
!5053 = !DISubroutineType(types: !5054)
!5054 = !{!321, !753}
!5055 = !{!5056}
!5056 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5052, file: !648, line: 120, type: !753)
!5057 = !DILocation(line: 0, scope: !5052)
!5058 = !DILocation(line: 122, column: 23, scope: !5052)
!5059 = !DILocation(line: 122, column: 5, scope: !5052)
!5060 = distinct !DISubprogram(name: "uart_restore_all_registers", scope: !648, file: !648, line: 362, type: !318, scopeLine: 363, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !647, retainedNodes: !5061)
!5061 = !{!5062, !5063, !5064, !5065, !5066}
!5062 = !DILocalVariable(name: "delay", scope: !5060, file: !648, line: 364, type: !105)
!5063 = !DILocalVariable(name: "uart_port", scope: !5060, file: !648, line: 365, type: !753)
!5064 = !DILocalVariable(name: "uartx", scope: !5060, file: !648, line: 366, type: !4692)
!5065 = !DILocalVariable(name: "uart_hwstatus", scope: !5060, file: !648, line: 367, type: !835)
!5066 = !DILocalVariable(name: "sleep_lock_status", scope: !5060, file: !648, line: 368, type: !321)
!5067 = !DILocation(line: 369, column: 25, scope: !5060)
!5068 = !DILocation(line: 0, scope: !5060)
!5069 = !DILocation(line: 371, column: 5, scope: !5070)
!5070 = distinct !DILexicalBlock(scope: !5060, file: !648, line: 371, column: 5)
!5071 = !DILocation(line: 372, column: 25, scope: !5072)
!5072 = distinct !DILexicalBlock(scope: !5073, file: !648, line: 371, column: 73)
!5073 = distinct !DILexicalBlock(scope: !5070, file: !648, line: 371, column: 5)
!5074 = !DILocation(line: 373, column: 27, scope: !5075)
!5075 = distinct !DILexicalBlock(scope: !5072, file: !648, line: 373, column: 13)
!5076 = !DILocation(line: 373, column: 13, scope: !5072)
!5077 = !DILocation(line: 374, column: 40, scope: !5078)
!5078 = distinct !DILexicalBlock(scope: !5075, file: !648, line: 373, column: 59)
!5079 = !DILocation(line: 375, column: 39, scope: !5078)
!5080 = !DILocation(line: 375, column: 13, scope: !5078)
!5081 = !DILocation(line: 376, column: 9, scope: !5078)
!5082 = !DILocation(line: 380, column: 13, scope: !5083)
!5083 = distinct !DILexicalBlock(scope: !5072, file: !648, line: 380, column: 13)
!5084 = !DILocation(line: 380, column: 13, scope: !5072)
!5085 = !DILocation(line: 381, column: 21, scope: !5086)
!5086 = distinct !DILexicalBlock(scope: !5083, file: !648, line: 380, column: 80)
!5087 = !DILocation(line: 382, column: 80, scope: !5086)
!5088 = !DILocation(line: 382, column: 13, scope: !5086)
!5089 = !DILocation(line: 384, column: 64, scope: !5086)
!5090 = !DILocation(line: 384, column: 37, scope: !5086)
!5091 = !DILocation(line: 384, column: 74, scope: !5086)
!5092 = !DILocation(line: 385, column: 13, scope: !5086)
!5093 = !DILocation(line: 387, column: 87, scope: !5086)
!5094 = !DILocation(line: 388, column: 87, scope: !5086)
!5095 = !DILocation(line: 389, column: 87, scope: !5086)
!5096 = !DILocation(line: 386, column: 13, scope: !5086)
!5097 = !DILocation(line: 390, column: 9, scope: !5086)
!5098 = !DILocation(line: 391, column: 13, scope: !5099)
!5099 = distinct !DILexicalBlock(scope: !5100, file: !648, line: 390, column: 87)
!5100 = distinct !DILexicalBlock(scope: !5083, file: !648, line: 390, column: 20)
!5101 = !DILocation(line: 392, column: 9, scope: !5099)
!5102 = !DILocation(line: 394, column: 27, scope: !5103)
!5103 = distinct !DILexicalBlock(scope: !5072, file: !648, line: 394, column: 13)
!5104 = !DILocation(line: 394, column: 13, scope: !5072)
!5105 = !DILocation(line: 395, column: 42, scope: !5106)
!5106 = distinct !DILexicalBlock(scope: !5103, file: !648, line: 394, column: 61)
!5107 = !DILocation(line: 395, column: 13, scope: !5106)
!5108 = !DILocation(line: 396, column: 78, scope: !5106)
!5109 = !DILocation(line: 396, column: 111, scope: !5106)
!5110 = !DILocation(line: 396, column: 13, scope: !5106)
!5111 = !DILocation(line: 397, column: 9, scope: !5106)
!5112 = !DILocation(line: 399, column: 69, scope: !5072)
!5113 = !DILocation(line: 399, column: 29, scope: !5072)
!5114 = !DILocation(line: 400, column: 41, scope: !5115)
!5115 = distinct !DILexicalBlock(scope: !5072, file: !648, line: 400, column: 13)
!5116 = !DILocation(line: 400, column: 45, scope: !5115)
!5117 = !DILocation(line: 400, column: 13, scope: !5072)
!5118 = !DILocation(line: 402, column: 44, scope: !5119)
!5119 = distinct !DILexicalBlock(scope: !5115, file: !648, line: 400, column: 89)
!5120 = !DILocation(line: 402, column: 13, scope: !5119)
!5121 = !DILocation(line: 403, column: 9, scope: !5119)
!5122 = !DILocation(line: 371, column: 69, scope: !5073)
!5123 = !DILocation(line: 371, column: 44, scope: !5073)
!5124 = distinct !{!5124, !5069, !5125}
!5125 = !DILocation(line: 411, column: 5, scope: !5070)
!5126 = !DILocation(line: 412, column: 25, scope: !5060)
!5127 = !DILocation(line: 413, column: 1, scope: !5060)
!5128 = distinct !DISubprogram(name: "hal_uart_init", scope: !648, file: !648, line: 476, type: !5129, scopeLine: 477, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !647, retainedNodes: !5132)
!5129 = !DISubroutineType(types: !5130)
!5130 = !{!4959, !753, !5131}
!5131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !780, size: 32)
!5132 = !{!5133, !5134, !5135, !5136, !5137, !5138, !5139}
!5133 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5128, file: !648, line: 476, type: !753)
!5134 = !DILocalVariable(name: "uart_config", arg: 2, scope: !5128, file: !648, line: 476, type: !5131)
!5135 = !DILocalVariable(name: "uartx", scope: !5128, file: !648, line: 478, type: !4692)
!5136 = !DILocalVariable(name: "i", scope: !5128, file: !648, line: 479, type: !105)
!5137 = !DILocalVariable(name: "actual_baudrate", scope: !5128, file: !648, line: 479, type: !105)
!5138 = !DILocalVariable(name: "irq_status", scope: !5128, file: !648, line: 479, type: !105)
!5139 = !DILocalVariable(name: "status", scope: !5128, file: !648, line: 480, type: !4968)
!5140 = !DILocation(line: 0, scope: !5128)
!5141 = !DILocation(line: 482, column: 11, scope: !5142)
!5142 = distinct !DILexicalBlock(scope: !5128, file: !648, line: 482, column: 9)
!5143 = !DILocation(line: 482, column: 42, scope: !5142)
!5144 = !DILocation(line: 483, column: 11, scope: !5142)
!5145 = !DILocation(line: 482, column: 9, scope: !5128)
!5146 = !DILocation(line: 487, column: 18, scope: !5128)
!5147 = !DILocation(line: 488, column: 9, scope: !5148)
!5148 = distinct !DILexicalBlock(scope: !5128, file: !648, line: 488, column: 9)
!5149 = !DILocation(line: 488, column: 36, scope: !5148)
!5150 = !DILocation(line: 488, column: 9, scope: !5128)
!5151 = !DILocation(line: 489, column: 9, scope: !5152)
!5152 = distinct !DILexicalBlock(scope: !5148, file: !648, line: 488, column: 68)
!5153 = !DILocation(line: 490, column: 9, scope: !5152)
!5154 = !DILocation(line: 497, column: 9, scope: !5155)
!5155 = distinct !DILexicalBlock(scope: !5128, file: !648, line: 497, column: 9)
!5156 = !DILocation(line: 497, column: 9, scope: !5128)
!5157 = !DILocation(line: 498, column: 86, scope: !5158)
!5158 = distinct !DILexicalBlock(scope: !5155, file: !648, line: 497, column: 39)
!5159 = !DILocation(line: 498, column: 43, scope: !5158)
!5160 = !DILocation(line: 498, column: 9, scope: !5158)
!5161 = !DILocation(line: 498, column: 41, scope: !5158)
!5162 = !DILocation(line: 499, column: 5, scope: !5158)
!5163 = !DILocation(line: 502, column: 9, scope: !5164)
!5164 = distinct !DILexicalBlock(scope: !5128, file: !648, line: 502, column: 9)
!5165 = !DILocation(line: 502, column: 9, scope: !5128)
!5166 = !DILocation(line: 504, column: 13, scope: !5167)
!5167 = distinct !DILexicalBlock(scope: !5168, file: !648, line: 503, column: 44)
!5168 = distinct !DILexicalBlock(scope: !5169, file: !648, line: 503, column: 9)
!5169 = distinct !DILexicalBlock(scope: !5170, file: !648, line: 503, column: 9)
!5170 = distinct !DILexicalBlock(scope: !5164, file: !648, line: 502, column: 50)
!5171 = !DILocation(line: 504, column: 32, scope: !5167)
!5172 = !DILocation(line: 506, column: 13, scope: !5167)
!5173 = !DILocation(line: 506, column: 42, scope: !5167)
!5174 = !DILocation(line: 507, column: 13, scope: !5167)
!5175 = !DILocation(line: 507, column: 53, scope: !5167)
!5176 = !DILocation(line: 508, column: 13, scope: !5167)
!5177 = !DILocation(line: 508, column: 40, scope: !5167)
!5178 = !DILocation(line: 510, column: 32, scope: !5167)
!5179 = !DILocation(line: 510, column: 36, scope: !5167)
!5180 = !DILocation(line: 511, column: 32, scope: !5167)
!5181 = !DILocation(line: 511, column: 37, scope: !5167)
!5182 = !DILocation(line: 503, column: 40, scope: !5168)
!5183 = !DILocation(line: 503, column: 23, scope: !5168)
!5184 = !DILocation(line: 503, column: 9, scope: !5169)
!5185 = distinct !{!5185, !5184, !5186}
!5186 = !DILocation(line: 512, column: 9, scope: !5169)
!5187 = !DILocation(line: 513, column: 40, scope: !5170)
!5188 = !DILocation(line: 514, column: 5, scope: !5170)
!5189 = !DILocation(line: 516, column: 54, scope: !5128)
!5190 = !DILocation(line: 516, column: 30, scope: !5128)
!5191 = !DILocation(line: 516, column: 39, scope: !5128)
!5192 = !DILocation(line: 517, column: 57, scope: !5128)
!5193 = !DILocation(line: 517, column: 30, scope: !5128)
!5194 = !DILocation(line: 517, column: 42, scope: !5128)
!5195 = !DILocation(line: 518, column: 54, scope: !5128)
!5196 = !DILocation(line: 518, column: 30, scope: !5128)
!5197 = !DILocation(line: 518, column: 39, scope: !5128)
!5198 = !DILocation(line: 519, column: 52, scope: !5128)
!5199 = !DILocation(line: 519, column: 30, scope: !5128)
!5200 = !DILocation(line: 519, column: 37, scope: !5128)
!5201 = !DILocation(line: 521, column: 32, scope: !5128)
!5202 = !DILocation(line: 522, column: 5, scope: !5128)
!5203 = !DILocation(line: 524, column: 31, scope: !5128)
!5204 = !DILocation(line: 524, column: 14, scope: !5128)
!5205 = !DILocation(line: 525, column: 16, scope: !5206)
!5206 = distinct !DILexicalBlock(scope: !5128, file: !648, line: 525, column: 9)
!5207 = !DILocation(line: 525, column: 9, scope: !5128)
!5208 = !DILocation(line: 526, column: 9, scope: !5209)
!5209 = distinct !DILexicalBlock(scope: !5206, file: !648, line: 525, column: 40)
!5210 = !DILocation(line: 530, column: 13, scope: !5128)
!5211 = !DILocation(line: 532, column: 5, scope: !5128)
!5212 = !DILocation(line: 533, column: 56, scope: !5128)
!5213 = !DILocation(line: 533, column: 23, scope: !5128)
!5214 = !DILocation(line: 534, column: 5, scope: !5128)
!5215 = !DILocation(line: 535, column: 41, scope: !5128)
!5216 = !DILocation(line: 535, column: 67, scope: !5128)
!5217 = !DILocation(line: 535, column: 90, scope: !5128)
!5218 = !DILocation(line: 535, column: 5, scope: !5128)
!5219 = !DILocation(line: 536, column: 5, scope: !5128)
!5220 = !DILocation(line: 538, column: 5, scope: !5128)
!5221 = !DILocation(line: 541, column: 5, scope: !5128)
!5222 = !DILocation(line: 542, column: 1, scope: !5128)
!5223 = distinct !DISubprogram(name: "hal_uart_set_software_flowcontrol", scope: !648, file: !648, line: 1018, type: !5224, scopeLine: 1022, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !647, retainedNodes: !5226)
!5224 = !DISubroutineType(types: !5225)
!5225 = !{!4959, !753, !127, !127, !127}
!5226 = !{!5227, !5228, !5229, !5230, !5231}
!5227 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5223, file: !648, line: 1018, type: !753)
!5228 = !DILocalVariable(name: "xon", arg: 2, scope: !5223, file: !648, line: 1019, type: !127)
!5229 = !DILocalVariable(name: "xoff", arg: 3, scope: !5223, file: !648, line: 1020, type: !127)
!5230 = !DILocalVariable(name: "escape_character", arg: 4, scope: !5223, file: !648, line: 1021, type: !127)
!5231 = !DILocalVariable(name: "uartx", scope: !5223, file: !648, line: 1023, type: !4692)
!5232 = !DILocation(line: 0, scope: !5223)
!5233 = !DILocation(line: 1025, column: 10, scope: !5234)
!5234 = distinct !DILexicalBlock(scope: !5223, file: !648, line: 1025, column: 9)
!5235 = !DILocation(line: 1025, column: 9, scope: !5223)
!5236 = !DILocation(line: 1029, column: 9, scope: !5237)
!5237 = distinct !DILexicalBlock(scope: !5223, file: !648, line: 1029, column: 9)
!5238 = !DILocation(line: 1029, column: 36, scope: !5237)
!5239 = !DILocation(line: 1029, column: 9, scope: !5223)
!5240 = !DILocation(line: 1033, column: 13, scope: !5223)
!5241 = !DILocation(line: 1035, column: 5, scope: !5223)
!5242 = !DILocation(line: 1038, column: 5, scope: !5223)
!5243 = !DILocation(line: 1038, column: 42, scope: !5223)
!5244 = !DILocation(line: 1039, column: 45, scope: !5223)
!5245 = !DILocation(line: 1039, column: 49, scope: !5223)
!5246 = !DILocation(line: 1040, column: 45, scope: !5223)
!5247 = !DILocation(line: 1040, column: 50, scope: !5223)
!5248 = !DILocation(line: 1041, column: 45, scope: !5223)
!5249 = !DILocation(line: 1041, column: 62, scope: !5223)
!5250 = !DILocation(line: 1044, column: 5, scope: !5223)
!5251 = !DILocation(line: 1045, column: 1, scope: !5223)
!5252 = distinct !DISubprogram(name: "hal_uart_set_hardware_flowcontrol", scope: !648, file: !648, line: 995, type: !4957, scopeLine: 996, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !647, retainedNodes: !5253)
!5253 = !{!5254, !5255}
!5254 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5252, file: !648, line: 995, type: !753)
!5255 = !DILocalVariable(name: "uartx", scope: !5252, file: !648, line: 997, type: !4692)
!5256 = !DILocation(line: 0, scope: !5252)
!5257 = !DILocation(line: 999, column: 10, scope: !5258)
!5258 = distinct !DILexicalBlock(scope: !5252, file: !648, line: 999, column: 9)
!5259 = !DILocation(line: 999, column: 9, scope: !5252)
!5260 = !DILocation(line: 1003, column: 9, scope: !5261)
!5261 = distinct !DILexicalBlock(scope: !5252, file: !648, line: 1003, column: 9)
!5262 = !DILocation(line: 1003, column: 36, scope: !5261)
!5263 = !DILocation(line: 1003, column: 9, scope: !5252)
!5264 = !DILocation(line: 1007, column: 13, scope: !5252)
!5265 = !DILocation(line: 1009, column: 5, scope: !5252)
!5266 = !DILocation(line: 1012, column: 5, scope: !5252)
!5267 = !DILocation(line: 1012, column: 42, scope: !5252)
!5268 = !DILocation(line: 1015, column: 5, scope: !5252)
!5269 = !DILocation(line: 1016, column: 1, scope: !5252)
!5270 = distinct !DISubprogram(name: "hal_uart_set_dma", scope: !648, file: !648, line: 1071, type: !5271, scopeLine: 1072, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !647, retainedNodes: !5275)
!5271 = !DISubroutineType(types: !5272)
!5272 = !{!4959, !753, !5273}
!5273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5274, size: 32)
!5274 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !814)
!5275 = !{!5276, !5277, !5278, !5279, !5285, !5286, !5287}
!5276 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5270, file: !648, line: 1071, type: !753)
!5277 = !DILocalVariable(name: "dma_config", arg: 2, scope: !5270, file: !648, line: 1071, type: !5273)
!5278 = !DILocalVariable(name: "irq_status", scope: !5270, file: !648, line: 1073, type: !105)
!5279 = !DILocalVariable(name: "internal_dma_config", scope: !5270, file: !648, line: 1074, type: !5280)
!5280 = !DIDerivedType(tag: DW_TAG_typedef, name: "vdma_config_t", file: !658, line: 283, baseType: !5281)
!5281 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !658, line: 280, size: 64, elements: !5282)
!5282 = !{!5283, !5284}
!5283 = !DIDerivedType(tag: DW_TAG_member, name: "base_address", scope: !5281, file: !658, line: 281, baseType: !105, size: 32)
!5284 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5281, file: !658, line: 282, baseType: !105, size: 32, offset: 32)
!5285 = !DILocalVariable(name: "tx_dma_channel", scope: !5270, file: !648, line: 1075, type: !4687)
!5286 = !DILocalVariable(name: "rx_dma_channel", scope: !5270, file: !648, line: 1075, type: !4687)
!5287 = !DILocalVariable(name: "status", scope: !5270, file: !648, line: 1076, type: !4748)
!5288 = !DILocation(line: 0, scope: !5270)
!5289 = !DILocation(line: 1074, column: 5, scope: !5270)
!5290 = !DILocation(line: 1074, column: 19, scope: !5270)
!5291 = !DILocation(line: 1078, column: 10, scope: !5292)
!5292 = distinct !DILexicalBlock(scope: !5270, file: !648, line: 1078, column: 9)
!5293 = !DILocation(line: 1078, column: 9, scope: !5270)
!5294 = !DILocation(line: 1081, column: 22, scope: !5295)
!5295 = distinct !DILexicalBlock(scope: !5270, file: !648, line: 1081, column: 9)
!5296 = !DILocation(line: 1081, column: 40, scope: !5295)
!5297 = !DILocation(line: 1081, column: 49, scope: !5295)
!5298 = !DILocation(line: 1082, column: 22, scope: !5295)
!5299 = !DILocation(line: 1082, column: 43, scope: !5295)
!5300 = !DILocation(line: 1081, column: 9, scope: !5270)
!5301 = !DILocation(line: 1085, column: 22, scope: !5302)
!5302 = distinct !DILexicalBlock(scope: !5270, file: !648, line: 1085, column: 9)
!5303 = !DILocation(line: 1085, column: 45, scope: !5302)
!5304 = !DILocation(line: 1085, column: 76, scope: !5302)
!5305 = !DILocation(line: 1086, column: 22, scope: !5302)
!5306 = !DILocation(line: 1086, column: 48, scope: !5302)
!5307 = !DILocation(line: 1086, column: 79, scope: !5302)
!5308 = !DILocation(line: 1090, column: 22, scope: !5309)
!5309 = distinct !DILexicalBlock(scope: !5270, file: !648, line: 1090, column: 9)
!5310 = !DILocation(line: 1090, column: 48, scope: !5309)
!5311 = !DILocation(line: 1090, column: 79, scope: !5309)
!5312 = !DILocation(line: 1091, column: 22, scope: !5309)
!5313 = !DILocation(line: 1091, column: 51, scope: !5309)
!5314 = !DILocation(line: 1091, column: 82, scope: !5309)
!5315 = !DILocation(line: 1092, column: 22, scope: !5309)
!5316 = !DILocation(line: 1092, column: 47, scope: !5309)
!5317 = !DILocation(line: 1092, column: 78, scope: !5309)
!5318 = !DILocation(line: 1098, column: 9, scope: !5319)
!5319 = distinct !DILexicalBlock(scope: !5270, file: !648, line: 1098, column: 9)
!5320 = !DILocation(line: 1098, column: 36, scope: !5319)
!5321 = !DILocation(line: 1098, column: 9, scope: !5270)
!5322 = !DILocation(line: 1102, column: 22, scope: !5270)
!5323 = !DILocation(line: 1103, column: 22, scope: !5270)
!5324 = !DILocation(line: 1105, column: 14, scope: !5270)
!5325 = !DILocation(line: 1106, column: 16, scope: !5326)
!5326 = distinct !DILexicalBlock(scope: !5270, file: !648, line: 1106, column: 9)
!5327 = !DILocation(line: 1106, column: 9, scope: !5270)
!5328 = !DILocation(line: 1107, column: 9, scope: !5329)
!5329 = distinct !DILexicalBlock(scope: !5326, file: !648, line: 1106, column: 28)
!5330 = !DILocation(line: 1110, column: 62, scope: !5270)
!5331 = !DILocation(line: 1110, column: 40, scope: !5270)
!5332 = !DILocation(line: 1110, column: 25, scope: !5270)
!5333 = !DILocation(line: 1110, column: 38, scope: !5270)
!5334 = !DILocation(line: 1111, column: 44, scope: !5270)
!5335 = !DILocation(line: 1111, column: 25, scope: !5270)
!5336 = !DILocation(line: 1111, column: 30, scope: !5270)
!5337 = !DILocation(line: 1112, column: 14, scope: !5270)
!5338 = !DILocation(line: 1113, column: 16, scope: !5339)
!5339 = distinct !DILexicalBlock(scope: !5270, file: !648, line: 1113, column: 9)
!5340 = !DILocation(line: 1113, column: 9, scope: !5270)
!5341 = !DILocation(line: 1114, column: 9, scope: !5342)
!5342 = distinct !DILexicalBlock(scope: !5339, file: !648, line: 1113, column: 28)
!5343 = !DILocation(line: 1117, column: 61, scope: !5270)
!5344 = !DILocation(line: 1117, column: 14, scope: !5270)
!5345 = !DILocation(line: 1118, column: 16, scope: !5346)
!5346 = distinct !DILexicalBlock(scope: !5270, file: !648, line: 1118, column: 9)
!5347 = !DILocation(line: 1118, column: 9, scope: !5270)
!5348 = !DILocation(line: 1119, column: 9, scope: !5349)
!5349 = distinct !DILexicalBlock(scope: !5346, file: !648, line: 1118, column: 28)
!5350 = !DILocation(line: 1123, column: 14, scope: !5270)
!5351 = !DILocation(line: 1124, column: 16, scope: !5352)
!5352 = distinct !DILexicalBlock(scope: !5270, file: !648, line: 1124, column: 9)
!5353 = !DILocation(line: 1124, column: 9, scope: !5270)
!5354 = !DILocation(line: 1125, column: 9, scope: !5355)
!5355 = distinct !DILexicalBlock(scope: !5352, file: !648, line: 1124, column: 28)
!5356 = !DILocation(line: 1128, column: 62, scope: !5270)
!5357 = !DILocation(line: 1128, column: 40, scope: !5270)
!5358 = !DILocation(line: 1128, column: 38, scope: !5270)
!5359 = !DILocation(line: 1129, column: 44, scope: !5270)
!5360 = !DILocation(line: 1129, column: 30, scope: !5270)
!5361 = !DILocation(line: 1130, column: 14, scope: !5270)
!5362 = !DILocation(line: 1131, column: 16, scope: !5363)
!5363 = distinct !DILexicalBlock(scope: !5270, file: !648, line: 1131, column: 9)
!5364 = !DILocation(line: 1131, column: 9, scope: !5270)
!5365 = !DILocation(line: 1132, column: 9, scope: !5366)
!5366 = distinct !DILexicalBlock(scope: !5363, file: !648, line: 1131, column: 28)
!5367 = !DILocation(line: 1135, column: 61, scope: !5270)
!5368 = !DILocation(line: 1135, column: 14, scope: !5270)
!5369 = !DILocation(line: 1136, column: 16, scope: !5370)
!5370 = distinct !DILexicalBlock(scope: !5270, file: !648, line: 1136, column: 9)
!5371 = !DILocation(line: 1136, column: 9, scope: !5270)
!5372 = !DILocation(line: 1137, column: 9, scope: !5373)
!5373 = distinct !DILexicalBlock(scope: !5370, file: !648, line: 1136, column: 28)
!5374 = !DILocation(line: 1140, column: 64, scope: !5270)
!5375 = !DILocation(line: 1140, column: 14, scope: !5270)
!5376 = !DILocation(line: 1141, column: 16, scope: !5377)
!5377 = distinct !DILexicalBlock(scope: !5270, file: !648, line: 1141, column: 9)
!5378 = !DILocation(line: 1141, column: 9, scope: !5270)
!5379 = !DILocation(line: 1142, column: 9, scope: !5380)
!5380 = distinct !DILexicalBlock(scope: !5377, file: !648, line: 1141, column: 28)
!5381 = !DILocation(line: 1146, column: 18, scope: !5270)
!5382 = !DILocation(line: 1147, column: 66, scope: !5270)
!5383 = !DILocation(line: 1147, column: 34, scope: !5270)
!5384 = !DILocation(line: 1147, column: 52, scope: !5270)
!5385 = !DILocation(line: 1148, column: 71, scope: !5270)
!5386 = !DILocation(line: 1148, column: 34, scope: !5270)
!5387 = !DILocation(line: 1148, column: 57, scope: !5270)
!5388 = !DILocation(line: 1149, column: 74, scope: !5270)
!5389 = !DILocation(line: 1149, column: 34, scope: !5270)
!5390 = !DILocation(line: 1149, column: 60, scope: !5270)
!5391 = !DILocation(line: 1150, column: 73, scope: !5270)
!5392 = !DILocation(line: 1150, column: 34, scope: !5270)
!5393 = !DILocation(line: 1150, column: 59, scope: !5270)
!5394 = !DILocation(line: 1151, column: 69, scope: !5270)
!5395 = !DILocation(line: 1151, column: 34, scope: !5270)
!5396 = !DILocation(line: 1151, column: 55, scope: !5270)
!5397 = !DILocation(line: 1152, column: 74, scope: !5270)
!5398 = !DILocation(line: 1152, column: 34, scope: !5270)
!5399 = !DILocation(line: 1152, column: 60, scope: !5270)
!5400 = !DILocation(line: 1153, column: 77, scope: !5270)
!5401 = !DILocation(line: 1153, column: 34, scope: !5270)
!5402 = !DILocation(line: 1153, column: 63, scope: !5270)
!5403 = !DILocation(line: 1154, column: 5, scope: !5270)
!5404 = !DILocation(line: 1156, column: 5, scope: !5270)
!5405 = !DILocation(line: 1157, column: 1, scope: !5270)
!5406 = distinct !DISubprogram(name: "hal_uart_register_callback", scope: !648, file: !648, line: 891, type: !5407, scopeLine: 894, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !647, retainedNodes: !5409)
!5407 = !DISubroutineType(types: !5408)
!5408 = !{!4959, !753, !800, !124}
!5409 = !{!5410, !5411, !5412, !5413, !5414, !5415, !5416, !5417}
!5410 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5406, file: !648, line: 891, type: !753)
!5411 = !DILocalVariable(name: "user_callback", arg: 2, scope: !5406, file: !648, line: 892, type: !800)
!5412 = !DILocalVariable(name: "user_data", arg: 3, scope: !5406, file: !648, line: 893, type: !124)
!5413 = !DILocalVariable(name: "tx_dma_channel", scope: !5406, file: !648, line: 895, type: !4687)
!5414 = !DILocalVariable(name: "rx_dma_channel", scope: !5406, file: !648, line: 895, type: !4687)
!5415 = !DILocalVariable(name: "irq_status", scope: !5406, file: !648, line: 896, type: !105)
!5416 = !DILocalVariable(name: "status", scope: !5406, file: !648, line: 897, type: !4748)
!5417 = !DILocalVariable(name: "nvic_status", scope: !5406, file: !648, line: 898, type: !1057)
!5418 = !DILocation(line: 0, scope: !5406)
!5419 = !DILocation(line: 900, column: 11, scope: !5420)
!5420 = distinct !DILexicalBlock(scope: !5406, file: !648, line: 900, column: 9)
!5421 = !DILocation(line: 900, column: 42, scope: !5420)
!5422 = !DILocation(line: 905, column: 18, scope: !5406)
!5423 = !DILocation(line: 906, column: 9, scope: !5424)
!5424 = distinct !DILexicalBlock(scope: !5406, file: !648, line: 906, column: 9)
!5425 = !DILocation(line: 906, column: 36, scope: !5424)
!5426 = !DILocation(line: 906, column: 9, scope: !5406)
!5427 = !DILocation(line: 911, column: 22, scope: !5406)
!5428 = !DILocation(line: 912, column: 22, scope: !5406)
!5429 = !DILocation(line: 914, column: 32, scope: !5406)
!5430 = !DILocation(line: 914, column: 37, scope: !5406)
!5431 = !DILocation(line: 915, column: 32, scope: !5406)
!5432 = !DILocation(line: 915, column: 36, scope: !5406)
!5433 = !DILocation(line: 917, column: 91, scope: !5406)
!5434 = !DILocation(line: 917, column: 56, scope: !5406)
!5435 = !DILocation(line: 917, column: 5, scope: !5406)
!5436 = !DILocation(line: 918, column: 80, scope: !5406)
!5437 = !DILocation(line: 918, column: 14, scope: !5406)
!5438 = !DILocation(line: 919, column: 16, scope: !5439)
!5439 = distinct !DILexicalBlock(scope: !5406, file: !648, line: 919, column: 9)
!5440 = !DILocation(line: 919, column: 9, scope: !5406)
!5441 = !DILocation(line: 920, column: 9, scope: !5442)
!5442 = distinct !DILexicalBlock(scope: !5439, file: !648, line: 919, column: 28)
!5443 = !DILocation(line: 921, column: 9, scope: !5442)
!5444 = !DILocation(line: 924, column: 97, scope: !5406)
!5445 = !DILocation(line: 924, column: 56, scope: !5406)
!5446 = !DILocation(line: 924, column: 5, scope: !5406)
!5447 = !DILocation(line: 925, column: 80, scope: !5406)
!5448 = !DILocation(line: 925, column: 14, scope: !5406)
!5449 = !DILocation(line: 926, column: 16, scope: !5450)
!5450 = distinct !DILexicalBlock(scope: !5406, file: !648, line: 926, column: 9)
!5451 = !DILocation(line: 926, column: 9, scope: !5406)
!5452 = !DILocation(line: 927, column: 9, scope: !5453)
!5453 = distinct !DILexicalBlock(scope: !5450, file: !648, line: 926, column: 28)
!5454 = !DILocation(line: 928, column: 9, scope: !5453)
!5455 = !DILocation(line: 931, column: 49, scope: !5406)
!5456 = !DILocation(line: 931, column: 19, scope: !5406)
!5457 = !DILocation(line: 932, column: 21, scope: !5458)
!5458 = distinct !DILexicalBlock(scope: !5406, file: !648, line: 932, column: 9)
!5459 = !DILocation(line: 932, column: 9, scope: !5406)
!5460 = !DILocation(line: 933, column: 9, scope: !5461)
!5461 = distinct !DILexicalBlock(scope: !5458, file: !648, line: 932, column: 44)
!5462 = !DILocation(line: 934, column: 9, scope: !5461)
!5463 = !DILocation(line: 938, column: 5, scope: !5406)
!5464 = !DILocation(line: 940, column: 32, scope: !5406)
!5465 = !DILocation(line: 944, column: 5, scope: !5406)
!5466 = !DILocation(line: 945, column: 1, scope: !5406)
!5467 = distinct !DISubprogram(name: "uart_dma_callback_handler", scope: !648, file: !648, line: 303, type: !5468, scopeLine: 304, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !647, retainedNodes: !5471)
!5468 = !DISubroutineType(types: !5469)
!5469 = !{null, !5470, !124}
!5470 = !DIDerivedType(tag: DW_TAG_typedef, name: "vdma_event_t", file: !658, line: 225, baseType: !740)
!5471 = !{!5472, !5473, !5474}
!5472 = !DILocalVariable(name: "event", arg: 1, scope: !5467, file: !648, line: 303, type: !5470)
!5473 = !DILocalVariable(name: "user_data", arg: 2, scope: !5467, file: !648, line: 303, type: !124)
!5474 = !DILocalVariable(name: "callback_data", scope: !5467, file: !648, line: 305, type: !746)
!5475 = !DILocation(line: 0, scope: !5467)
!5476 = !DILocation(line: 307, column: 24, scope: !5477)
!5477 = distinct !DILexicalBlock(scope: !5467, file: !648, line: 307, column: 9)
!5478 = !DILocation(line: 0, scope: !5477)
!5479 = !DILocation(line: 307, column: 9, scope: !5467)
!5480 = !DILocation(line: 308, column: 9, scope: !5481)
!5481 = distinct !DILexicalBlock(scope: !5477, file: !648, line: 307, column: 39)
!5482 = !DILocation(line: 309, column: 5, scope: !5481)
!5483 = !DILocation(line: 310, column: 9, scope: !5484)
!5484 = distinct !DILexicalBlock(scope: !5477, file: !648, line: 309, column: 12)
!5485 = !DILocation(line: 312, column: 1, scope: !5467)
!5486 = distinct !DISubprogram(name: "uart_start_dma_transmission", scope: !648, file: !648, line: 852, type: !4895, scopeLine: 853, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !647, retainedNodes: !5487)
!5487 = !{!5488, !5489, !5490, !5491, !5492}
!5488 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5486, file: !648, line: 852, type: !753)
!5489 = !DILocalVariable(name: "uartx", scope: !5486, file: !648, line: 854, type: !4692)
!5490 = !DILocalVariable(name: "tx_dma_channel", scope: !5486, file: !648, line: 855, type: !4687)
!5491 = !DILocalVariable(name: "rx_dma_channel", scope: !5486, file: !648, line: 855, type: !4687)
!5492 = !DILocalVariable(name: "status", scope: !5486, file: !648, line: 856, type: !4748)
!5493 = !DILocation(line: 0, scope: !5486)
!5494 = !DILocation(line: 858, column: 13, scope: !5486)
!5495 = !DILocation(line: 859, column: 22, scope: !5486)
!5496 = !DILocation(line: 860, column: 22, scope: !5486)
!5497 = !DILocation(line: 863, column: 5, scope: !5486)
!5498 = !DILocation(line: 864, column: 5, scope: !5486)
!5499 = !DILocation(line: 864, column: 53, scope: !5486)
!5500 = !DILocation(line: 866, column: 5, scope: !5486)
!5501 = !DILocation(line: 867, column: 25, scope: !5486)
!5502 = !DILocation(line: 867, column: 5, scope: !5486)
!5503 = !DILocation(line: 868, column: 14, scope: !5486)
!5504 = !DILocation(line: 869, column: 16, scope: !5505)
!5505 = distinct !DILexicalBlock(scope: !5486, file: !648, line: 869, column: 9)
!5506 = !DILocation(line: 869, column: 9, scope: !5486)
!5507 = !DILocation(line: 870, column: 9, scope: !5508)
!5508 = distinct !DILexicalBlock(scope: !5505, file: !648, line: 869, column: 28)
!5509 = !DILocation(line: 873, column: 14, scope: !5486)
!5510 = !DILocation(line: 874, column: 16, scope: !5511)
!5511 = distinct !DILexicalBlock(scope: !5486, file: !648, line: 874, column: 9)
!5512 = !DILocation(line: 874, column: 9, scope: !5486)
!5513 = !DILocation(line: 875, column: 9, scope: !5514)
!5514 = distinct !DILexicalBlock(scope: !5511, file: !648, line: 874, column: 28)
!5515 = !DILocation(line: 878, column: 14, scope: !5486)
!5516 = !DILocation(line: 879, column: 16, scope: !5517)
!5517 = distinct !DILexicalBlock(scope: !5486, file: !648, line: 879, column: 9)
!5518 = !DILocation(line: 879, column: 9, scope: !5486)
!5519 = !DILocation(line: 880, column: 9, scope: !5520)
!5520 = distinct !DILexicalBlock(scope: !5517, file: !648, line: 879, column: 28)
!5521 = !DILocation(line: 883, column: 14, scope: !5486)
!5522 = !DILocation(line: 884, column: 16, scope: !5523)
!5523 = distinct !DILexicalBlock(scope: !5486, file: !648, line: 884, column: 9)
!5524 = !DILocation(line: 884, column: 9, scope: !5486)
!5525 = !DILocation(line: 885, column: 9, scope: !5526)
!5526 = distinct !DILexicalBlock(scope: !5523, file: !648, line: 884, column: 28)
!5527 = !DILocation(line: 888, column: 5, scope: !5486)
!5528 = !DILocation(line: 889, column: 1, scope: !5486)
!5529 = distinct !DISubprogram(name: "uart_config_is_valid", scope: !648, file: !648, line: 130, type: !5530, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !647, retainedNodes: !5534)
!5530 = !DISubroutineType(types: !5531)
!5531 = !{!321, !5532}
!5532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5533, size: 32)
!5533 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !780)
!5534 = !{!5535}
!5535 = !DILocalVariable(name: "config", arg: 1, scope: !5529, file: !648, line: 130, type: !5532)
!5536 = !DILocation(line: 0, scope: !5529)
!5537 = !DILocation(line: 132, column: 22, scope: !5529)
!5538 = !DILocation(line: 132, column: 31, scope: !5529)
!5539 = !DILocation(line: 132, column: 56, scope: !5529)
!5540 = !DILocation(line: 133, column: 22, scope: !5529)
!5541 = !DILocation(line: 133, column: 34, scope: !5529)
!5542 = !DILocation(line: 133, column: 61, scope: !5529)
!5543 = !DILocation(line: 134, column: 22, scope: !5529)
!5544 = !DILocation(line: 134, column: 31, scope: !5529)
!5545 = !DILocation(line: 134, column: 55, scope: !5529)
!5546 = !DILocation(line: 135, column: 22, scope: !5529)
!5547 = !DILocation(line: 135, column: 29, scope: !5529)
!5548 = !DILocation(line: 132, column: 5, scope: !5529)
!5549 = distinct !DISubprogram(name: "hal_uart_set_baudrate", scope: !648, file: !648, line: 416, type: !5550, scopeLine: 417, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !647, retainedNodes: !5552)
!5550 = !DISubroutineType(types: !5551)
!5551 = !{!4959, !753, !784}
!5552 = !{!5553, !5554, !5555, !5556, !5557}
!5553 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5549, file: !648, line: 416, type: !753)
!5554 = !DILocalVariable(name: "baudrate", arg: 2, scope: !5549, file: !648, line: 416, type: !784)
!5555 = !DILocalVariable(name: "actual_baudrate", scope: !5549, file: !648, line: 418, type: !105)
!5556 = !DILocalVariable(name: "irq_status", scope: !5549, file: !648, line: 418, type: !105)
!5557 = !DILocalVariable(name: "uartx", scope: !5549, file: !648, line: 419, type: !4692)
!5558 = !DILocation(line: 0, scope: !5549)
!5559 = !DILocation(line: 421, column: 11, scope: !5560)
!5560 = distinct !DILexicalBlock(scope: !5549, file: !648, line: 421, column: 9)
!5561 = !DILocation(line: 421, column: 42, scope: !5560)
!5562 = !DILocation(line: 422, column: 11, scope: !5560)
!5563 = !DILocation(line: 421, column: 9, scope: !5549)
!5564 = !DILocation(line: 426, column: 9, scope: !5565)
!5565 = distinct !DILexicalBlock(scope: !5549, file: !648, line: 426, column: 9)
!5566 = !DILocation(line: 426, column: 36, scope: !5565)
!5567 = !DILocation(line: 426, column: 9, scope: !5549)
!5568 = !DILocation(line: 430, column: 18, scope: !5549)
!5569 = !DILocation(line: 432, column: 30, scope: !5549)
!5570 = !DILocation(line: 432, column: 39, scope: !5549)
!5571 = !DILocation(line: 434, column: 5, scope: !5549)
!5572 = !DILocation(line: 436, column: 13, scope: !5549)
!5573 = !DILocation(line: 437, column: 23, scope: !5549)
!5574 = !DILocation(line: 439, column: 5, scope: !5549)
!5575 = !DILocation(line: 441, column: 5, scope: !5549)
!5576 = !DILocation(line: 442, column: 1, scope: !5549)
!5577 = distinct !DISubprogram(name: "uart_baudrate_is_valid", scope: !648, file: !648, line: 125, type: !5578, scopeLine: 126, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !647, retainedNodes: !5580)
!5578 = !DISubroutineType(types: !5579)
!5579 = !{!321, !784}
!5580 = !{!5581}
!5581 = !DILocalVariable(name: "baudrate", arg: 1, scope: !5577, file: !648, line: 125, type: !784)
!5582 = !DILocation(line: 0, scope: !5577)
!5583 = !DILocation(line: 127, column: 22, scope: !5577)
!5584 = !DILocation(line: 127, column: 5, scope: !5577)
!5585 = distinct !DISubprogram(name: "hal_uart_set_format", scope: !648, file: !648, line: 444, type: !5586, scopeLine: 446, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !647, retainedNodes: !5588)
!5586 = !DISubroutineType(types: !5587)
!5587 = !{!4959, !753, !5532}
!5588 = !{!5589, !5590, !5591, !5592}
!5589 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5585, file: !648, line: 444, type: !753)
!5590 = !DILocalVariable(name: "config", arg: 2, scope: !5585, file: !648, line: 445, type: !5532)
!5591 = !DILocalVariable(name: "irq_status", scope: !5585, file: !648, line: 447, type: !105)
!5592 = !DILocalVariable(name: "uartx", scope: !5585, file: !648, line: 448, type: !4692)
!5593 = !DILocation(line: 0, scope: !5585)
!5594 = !DILocation(line: 450, column: 11, scope: !5595)
!5595 = distinct !DILexicalBlock(scope: !5585, file: !648, line: 450, column: 9)
!5596 = !DILocation(line: 450, column: 42, scope: !5595)
!5597 = !DILocation(line: 451, column: 11, scope: !5595)
!5598 = !DILocation(line: 450, column: 9, scope: !5585)
!5599 = !DILocation(line: 455, column: 9, scope: !5600)
!5600 = distinct !DILexicalBlock(scope: !5585, file: !648, line: 455, column: 9)
!5601 = !DILocation(line: 455, column: 36, scope: !5600)
!5602 = !DILocation(line: 455, column: 9, scope: !5585)
!5603 = !DILocation(line: 459, column: 18, scope: !5585)
!5604 = !DILocation(line: 461, column: 49, scope: !5585)
!5605 = !DILocation(line: 461, column: 30, scope: !5585)
!5606 = !DILocation(line: 461, column: 39, scope: !5585)
!5607 = !DILocation(line: 462, column: 52, scope: !5585)
!5608 = !DILocation(line: 462, column: 30, scope: !5585)
!5609 = !DILocation(line: 462, column: 42, scope: !5585)
!5610 = !DILocation(line: 463, column: 49, scope: !5585)
!5611 = !DILocation(line: 463, column: 30, scope: !5585)
!5612 = !DILocation(line: 463, column: 39, scope: !5585)
!5613 = !DILocation(line: 464, column: 47, scope: !5585)
!5614 = !DILocation(line: 464, column: 30, scope: !5585)
!5615 = !DILocation(line: 464, column: 37, scope: !5585)
!5616 = !DILocation(line: 466, column: 5, scope: !5585)
!5617 = !DILocation(line: 468, column: 13, scope: !5585)
!5618 = !DILocation(line: 470, column: 46, scope: !5585)
!5619 = !DILocation(line: 470, column: 5, scope: !5585)
!5620 = !DILocation(line: 471, column: 36, scope: !5585)
!5621 = !DILocation(line: 471, column: 57, scope: !5585)
!5622 = !DILocation(line: 471, column: 75, scope: !5585)
!5623 = !DILocation(line: 471, column: 5, scope: !5585)
!5624 = !DILocation(line: 473, column: 5, scope: !5585)
!5625 = !DILocation(line: 474, column: 1, scope: !5585)
!5626 = distinct !DISubprogram(name: "hal_uart_put_char", scope: !648, file: !648, line: 642, type: !5627, scopeLine: 643, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !647, retainedNodes: !5629)
!5627 = !DISubroutineType(types: !5628)
!5628 = !{null, !753, !201}
!5629 = !{!5630, !5631, !5632}
!5630 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5626, file: !648, line: 642, type: !753)
!5631 = !DILocalVariable(name: "byte", arg: 2, scope: !5626, file: !648, line: 642, type: !201)
!5632 = !DILocalVariable(name: "uartx", scope: !5626, file: !648, line: 644, type: !4692)
!5633 = !DILocation(line: 0, scope: !5626)
!5634 = !DILocation(line: 646, column: 10, scope: !5635)
!5635 = distinct !DILexicalBlock(scope: !5626, file: !648, line: 646, column: 9)
!5636 = !DILocation(line: 646, column: 9, scope: !5626)
!5637 = !DILocation(line: 650, column: 9, scope: !5638)
!5638 = distinct !DILexicalBlock(scope: !5626, file: !648, line: 650, column: 9)
!5639 = !DILocation(line: 650, column: 36, scope: !5638)
!5640 = !DILocation(line: 650, column: 9, scope: !5626)
!5641 = !DILocation(line: 654, column: 13, scope: !5626)
!5642 = !DILocation(line: 655, column: 5, scope: !5626)
!5643 = !DILocation(line: 656, column: 1, scope: !5626)
!5644 = distinct !DISubprogram(name: "hal_uart_send_polling", scope: !648, file: !648, line: 658, type: !5645, scopeLine: 659, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !647, retainedNodes: !5649)
!5645 = !DISubroutineType(types: !5646)
!5646 = !{!105, !753, !5647, !105}
!5647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5648, size: 32)
!5648 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !127)
!5649 = !{!5650, !5651, !5652, !5653}
!5650 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5644, file: !648, line: 658, type: !753)
!5651 = !DILocalVariable(name: "data", arg: 2, scope: !5644, file: !648, line: 658, type: !5647)
!5652 = !DILocalVariable(name: "size", arg: 3, scope: !5644, file: !648, line: 658, type: !105)
!5653 = !DILocalVariable(name: "i", scope: !5644, file: !648, line: 660, type: !105)
!5654 = !DILocation(line: 0, scope: !5644)
!5655 = !DILocation(line: 662, column: 11, scope: !5656)
!5656 = distinct !DILexicalBlock(scope: !5644, file: !648, line: 662, column: 9)
!5657 = !DILocation(line: 662, column: 42, scope: !5656)
!5658 = !DILocation(line: 666, column: 9, scope: !5659)
!5659 = distinct !DILexicalBlock(scope: !5644, file: !648, line: 666, column: 9)
!5660 = !DILocation(line: 666, column: 36, scope: !5659)
!5661 = !DILocation(line: 666, column: 9, scope: !5644)
!5662 = !DILocation(line: 671, column: 38, scope: !5663)
!5663 = distinct !DILexicalBlock(scope: !5664, file: !648, line: 670, column: 32)
!5664 = distinct !DILexicalBlock(scope: !5665, file: !648, line: 670, column: 5)
!5665 = distinct !DILexicalBlock(scope: !5644, file: !648, line: 670, column: 5)
!5666 = !DILocation(line: 671, column: 9, scope: !5663)
!5667 = !DILocation(line: 672, column: 13, scope: !5663)
!5668 = !DILocation(line: 670, column: 28, scope: !5664)
!5669 = !DILocation(line: 670, column: 19, scope: !5664)
!5670 = !DILocation(line: 670, column: 5, scope: !5665)
!5671 = distinct !{!5671, !5670, !5672}
!5672 = !DILocation(line: 673, column: 5, scope: !5665)
!5673 = !DILocation(line: 676, column: 1, scope: !5644)
!5674 = distinct !DISubprogram(name: "hal_uart_send_dma", scope: !648, file: !648, line: 678, type: !5645, scopeLine: 679, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !647, retainedNodes: !5675)
!5675 = !{!5676, !5677, !5678, !5679, !5680, !5681, !5682, !5683, !5684}
!5676 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5674, file: !648, line: 678, type: !753)
!5677 = !DILocalVariable(name: "data", arg: 2, scope: !5674, file: !648, line: 678, type: !5647)
!5678 = !DILocalVariable(name: "size", arg: 3, scope: !5674, file: !648, line: 678, type: !105)
!5679 = !DILocalVariable(name: "channel", scope: !5674, file: !648, line: 680, type: !4687)
!5680 = !DILocalVariable(name: "i", scope: !5674, file: !648, line: 681, type: !105)
!5681 = !DILocalVariable(name: "real_count", scope: !5674, file: !648, line: 681, type: !105)
!5682 = !DILocalVariable(name: "avail_space", scope: !5674, file: !648, line: 681, type: !105)
!5683 = !DILocalVariable(name: "status", scope: !5674, file: !648, line: 682, type: !4748)
!5684 = !DILocalVariable(name: "irq_status", scope: !5674, file: !648, line: 684, type: !105)
!5685 = !DILocation(line: 0, scope: !5674)
!5686 = !DILocation(line: 681, column: 5, scope: !5674)
!5687 = !DILocation(line: 687, column: 11, scope: !5688)
!5688 = distinct !DILexicalBlock(scope: !5674, file: !648, line: 687, column: 9)
!5689 = !DILocation(line: 687, column: 42, scope: !5688)
!5690 = !DILocation(line: 691, column: 9, scope: !5691)
!5691 = distinct !DILexicalBlock(scope: !5674, file: !648, line: 691, column: 9)
!5692 = !DILocation(line: 691, column: 36, scope: !5691)
!5693 = !DILocation(line: 691, column: 9, scope: !5674)
!5694 = !DILocation(line: 696, column: 18, scope: !5674)
!5695 = !DILocation(line: 697, column: 9, scope: !5696)
!5696 = distinct !DILexicalBlock(scope: !5674, file: !648, line: 697, column: 9)
!5697 = !DILocation(line: 697, column: 44, scope: !5696)
!5698 = !DILocation(line: 697, column: 9, scope: !5674)
!5699 = !DILocation(line: 698, column: 38, scope: !5700)
!5700 = distinct !DILexicalBlock(scope: !5696, file: !648, line: 697, column: 54)
!5701 = !DILocation(line: 698, column: 9, scope: !5700)
!5702 = !DILocation(line: 699, column: 44, scope: !5700)
!5703 = !DILocation(line: 700, column: 5, scope: !5700)
!5704 = !DILocation(line: 701, column: 5, scope: !5674)
!5705 = !DILocation(line: 704, column: 15, scope: !5674)
!5706 = !DILocation(line: 706, column: 14, scope: !5674)
!5707 = !DILocation(line: 707, column: 16, scope: !5708)
!5708 = distinct !DILexicalBlock(scope: !5674, file: !648, line: 707, column: 9)
!5709 = !DILocation(line: 707, column: 9, scope: !5674)
!5710 = !DILocation(line: 708, column: 9, scope: !5711)
!5711 = distinct !DILexicalBlock(scope: !5708, file: !648, line: 707, column: 28)
!5712 = !DILocation(line: 712, column: 9, scope: !5713)
!5713 = distinct !DILexicalBlock(scope: !5674, file: !648, line: 712, column: 9)
!5714 = !DILocation(line: 712, column: 21, scope: !5713)
!5715 = !DILocation(line: 717, column: 19, scope: !5716)
!5716 = distinct !DILexicalBlock(scope: !5717, file: !648, line: 717, column: 5)
!5717 = distinct !DILexicalBlock(scope: !5674, file: !648, line: 717, column: 5)
!5718 = !DILocation(line: 717, column: 5, scope: !5717)
!5719 = distinct !{!5719, !5718, !5720}
!5720 = !DILocation(line: 723, column: 5, scope: !5717)
!5721 = !DILocation(line: 718, column: 42, scope: !5722)
!5722 = distinct !DILexicalBlock(scope: !5716, file: !648, line: 717, column: 38)
!5723 = !DILocation(line: 718, column: 18, scope: !5722)
!5724 = !DILocation(line: 719, column: 20, scope: !5725)
!5725 = distinct !DILexicalBlock(scope: !5722, file: !648, line: 719, column: 13)
!5726 = !DILocation(line: 717, column: 34, scope: !5716)
!5727 = !DILocation(line: 719, column: 13, scope: !5722)
!5728 = !DILocation(line: 720, column: 13, scope: !5729)
!5729 = distinct !DILexicalBlock(scope: !5725, file: !648, line: 719, column: 32)
!5730 = !DILocation(line: 728, column: 23, scope: !5731)
!5731 = distinct !DILexicalBlock(scope: !5674, file: !648, line: 728, column: 9)
!5732 = !DILocation(line: 728, column: 20, scope: !5731)
!5733 = !DILocation(line: 728, column: 9, scope: !5674)
!5734 = !DILocation(line: 729, column: 18, scope: !5735)
!5735 = distinct !DILexicalBlock(scope: !5731, file: !648, line: 728, column: 36)
!5736 = !DILocation(line: 730, column: 20, scope: !5737)
!5737 = distinct !DILexicalBlock(scope: !5735, file: !648, line: 730, column: 13)
!5738 = !DILocation(line: 730, column: 13, scope: !5735)
!5739 = !DILocation(line: 731, column: 13, scope: !5740)
!5740 = distinct !DILexicalBlock(scope: !5737, file: !648, line: 730, column: 32)
!5741 = !DILocation(line: 737, column: 1, scope: !5674)
!5742 = distinct !DISubprogram(name: "hal_uart_get_char", scope: !648, file: !648, line: 739, type: !5743, scopeLine: 740, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !647, retainedNodes: !5745)
!5743 = !DISubroutineType(types: !5744)
!5744 = !{!201, !753}
!5745 = !{!5746, !5747, !5748}
!5746 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5742, file: !648, line: 739, type: !753)
!5747 = !DILocalVariable(name: "data", scope: !5742, file: !648, line: 741, type: !201)
!5748 = !DILocalVariable(name: "uartx", scope: !5742, file: !648, line: 742, type: !4692)
!5749 = !DILocation(line: 0, scope: !5742)
!5750 = !DILocation(line: 744, column: 10, scope: !5751)
!5751 = distinct !DILexicalBlock(scope: !5742, file: !648, line: 744, column: 9)
!5752 = !DILocation(line: 744, column: 9, scope: !5742)
!5753 = !DILocation(line: 748, column: 9, scope: !5754)
!5754 = distinct !DILexicalBlock(scope: !5742, file: !648, line: 748, column: 9)
!5755 = !DILocation(line: 748, column: 36, scope: !5754)
!5756 = !DILocation(line: 748, column: 9, scope: !5742)
!5757 = !DILocation(line: 752, column: 13, scope: !5742)
!5758 = !DILocation(line: 754, column: 12, scope: !5742)
!5759 = !DILocation(line: 756, column: 5, scope: !5742)
!5760 = !DILocation(line: 757, column: 1, scope: !5742)
!5761 = distinct !DISubprogram(name: "hal_uart_get_char_unblocking", scope: !648, file: !648, line: 759, type: !5762, scopeLine: 760, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !647, retainedNodes: !5764)
!5762 = !DISubroutineType(types: !5763)
!5763 = !{!105, !753}
!5764 = !{!5765, !5766, !5767}
!5765 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5761, file: !648, line: 759, type: !753)
!5766 = !DILocalVariable(name: "data", scope: !5761, file: !648, line: 761, type: !105)
!5767 = !DILocalVariable(name: "uartx", scope: !5761, file: !648, line: 762, type: !4692)
!5768 = !DILocation(line: 0, scope: !5761)
!5769 = !DILocation(line: 764, column: 10, scope: !5770)
!5770 = distinct !DILexicalBlock(scope: !5761, file: !648, line: 764, column: 9)
!5771 = !DILocation(line: 764, column: 9, scope: !5761)
!5772 = !DILocation(line: 768, column: 9, scope: !5773)
!5773 = distinct !DILexicalBlock(scope: !5761, file: !648, line: 768, column: 9)
!5774 = !DILocation(line: 768, column: 36, scope: !5773)
!5775 = !DILocation(line: 768, column: 9, scope: !5761)
!5776 = !DILocation(line: 772, column: 13, scope: !5761)
!5777 = !DILocation(line: 774, column: 12, scope: !5761)
!5778 = !DILocation(line: 776, column: 5, scope: !5761)
!5779 = !DILocation(line: 777, column: 1, scope: !5761)
!5780 = distinct !DISubprogram(name: "hal_uart_receive_polling", scope: !648, file: !648, line: 779, type: !5781, scopeLine: 780, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !647, retainedNodes: !5783)
!5781 = !DISubroutineType(types: !5782)
!5782 = !{!105, !753, !818, !105}
!5783 = !{!5784, !5785, !5786, !5787, !5788}
!5784 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5780, file: !648, line: 779, type: !753)
!5785 = !DILocalVariable(name: "buffer", arg: 2, scope: !5780, file: !648, line: 779, type: !818)
!5786 = !DILocalVariable(name: "size", arg: 3, scope: !5780, file: !648, line: 779, type: !105)
!5787 = !DILocalVariable(name: "i", scope: !5780, file: !648, line: 781, type: !105)
!5788 = !DILocalVariable(name: "pbuf", scope: !5780, file: !648, line: 782, type: !818)
!5789 = !DILocation(line: 0, scope: !5780)
!5790 = !DILocation(line: 784, column: 11, scope: !5791)
!5791 = distinct !DILexicalBlock(scope: !5780, file: !648, line: 784, column: 9)
!5792 = !DILocation(line: 784, column: 42, scope: !5791)
!5793 = !DILocation(line: 789, column: 9, scope: !5794)
!5794 = distinct !DILexicalBlock(scope: !5780, file: !648, line: 789, column: 9)
!5795 = !DILocation(line: 789, column: 36, scope: !5794)
!5796 = !DILocation(line: 789, column: 9, scope: !5780)
!5797 = !DILocation(line: 794, column: 19, scope: !5798)
!5798 = distinct !DILexicalBlock(scope: !5799, file: !648, line: 793, column: 32)
!5799 = distinct !DILexicalBlock(scope: !5800, file: !648, line: 793, column: 5)
!5800 = distinct !DILexicalBlock(scope: !5780, file: !648, line: 793, column: 5)
!5801 = !DILocation(line: 794, column: 9, scope: !5798)
!5802 = !DILocation(line: 794, column: 17, scope: !5798)
!5803 = !DILocation(line: 793, column: 28, scope: !5799)
!5804 = !DILocation(line: 793, column: 19, scope: !5799)
!5805 = !DILocation(line: 793, column: 5, scope: !5800)
!5806 = distinct !{!5806, !5805, !5807}
!5807 = !DILocation(line: 795, column: 5, scope: !5800)
!5808 = !DILocation(line: 798, column: 1, scope: !5780)
!5809 = distinct !DISubprogram(name: "hal_uart_receive_dma", scope: !648, file: !648, line: 800, type: !5781, scopeLine: 801, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !647, retainedNodes: !5810)
!5810 = !{!5811, !5812, !5813, !5814, !5815, !5816, !5817, !5818}
!5811 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5809, file: !648, line: 800, type: !753)
!5812 = !DILocalVariable(name: "buffer", arg: 2, scope: !5809, file: !648, line: 800, type: !818)
!5813 = !DILocalVariable(name: "size", arg: 3, scope: !5809, file: !648, line: 800, type: !105)
!5814 = !DILocalVariable(name: "channel", scope: !5809, file: !648, line: 802, type: !4687)
!5815 = !DILocalVariable(name: "receive_count", scope: !5809, file: !648, line: 803, type: !105)
!5816 = !DILocalVariable(name: "avail_count", scope: !5809, file: !648, line: 803, type: !105)
!5817 = !DILocalVariable(name: "index", scope: !5809, file: !648, line: 804, type: !105)
!5818 = !DILocalVariable(name: "status", scope: !5809, file: !648, line: 805, type: !4748)
!5819 = !DILocation(line: 0, scope: !5809)
!5820 = !DILocation(line: 803, column: 5, scope: !5809)
!5821 = !DILocation(line: 807, column: 11, scope: !5822)
!5822 = distinct !DILexicalBlock(scope: !5809, file: !648, line: 807, column: 9)
!5823 = !DILocation(line: 807, column: 42, scope: !5822)
!5824 = !DILocation(line: 813, column: 9, scope: !5825)
!5825 = distinct !DILexicalBlock(scope: !5809, file: !648, line: 813, column: 9)
!5826 = !DILocation(line: 813, column: 36, scope: !5825)
!5827 = !DILocation(line: 813, column: 9, scope: !5809)
!5828 = !DILocation(line: 817, column: 15, scope: !5809)
!5829 = !DILocation(line: 819, column: 14, scope: !5809)
!5830 = !DILocation(line: 820, column: 16, scope: !5831)
!5831 = distinct !DILexicalBlock(scope: !5809, file: !648, line: 820, column: 9)
!5832 = !DILocation(line: 820, column: 9, scope: !5809)
!5833 = !DILocation(line: 821, column: 9, scope: !5834)
!5834 = distinct !DILexicalBlock(scope: !5831, file: !648, line: 820, column: 28)
!5835 = !DILocation(line: 825, column: 9, scope: !5836)
!5836 = distinct !DILexicalBlock(scope: !5809, file: !648, line: 825, column: 9)
!5837 = !DILocation(line: 825, column: 21, scope: !5836)
!5838 = !DILocation(line: 830, column: 27, scope: !5839)
!5839 = distinct !DILexicalBlock(scope: !5840, file: !648, line: 830, column: 5)
!5840 = distinct !DILexicalBlock(scope: !5809, file: !648, line: 830, column: 5)
!5841 = !DILocation(line: 830, column: 5, scope: !5840)
!5842 = distinct !{!5842, !5841, !5843}
!5843 = !DILocation(line: 836, column: 5, scope: !5840)
!5844 = !DILocation(line: 831, column: 42, scope: !5845)
!5845 = distinct !DILexicalBlock(scope: !5839, file: !648, line: 830, column: 53)
!5846 = !DILocation(line: 831, column: 18, scope: !5845)
!5847 = !DILocation(line: 832, column: 20, scope: !5848)
!5848 = distinct !DILexicalBlock(scope: !5845, file: !648, line: 832, column: 13)
!5849 = !DILocation(line: 830, column: 49, scope: !5839)
!5850 = !DILocation(line: 832, column: 13, scope: !5845)
!5851 = !DILocation(line: 833, column: 13, scope: !5852)
!5852 = distinct !DILexicalBlock(scope: !5848, file: !648, line: 832, column: 32)
!5853 = !DILocation(line: 841, column: 26, scope: !5854)
!5854 = distinct !DILexicalBlock(scope: !5809, file: !648, line: 841, column: 9)
!5855 = !DILocation(line: 841, column: 23, scope: !5854)
!5856 = !DILocation(line: 841, column: 9, scope: !5809)
!5857 = !DILocation(line: 842, column: 18, scope: !5858)
!5858 = distinct !DILexicalBlock(scope: !5854, file: !648, line: 841, column: 39)
!5859 = !DILocation(line: 843, column: 20, scope: !5860)
!5860 = distinct !DILexicalBlock(scope: !5858, file: !648, line: 843, column: 13)
!5861 = !DILocation(line: 843, column: 13, scope: !5858)
!5862 = !DILocation(line: 844, column: 13, scope: !5863)
!5863 = distinct !DILexicalBlock(scope: !5860, file: !648, line: 843, column: 32)
!5864 = !DILocation(line: 850, column: 1, scope: !5809)
!5865 = distinct !DISubprogram(name: "hal_uart_get_available_send_space", scope: !648, file: !648, line: 947, type: !5762, scopeLine: 948, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !647, retainedNodes: !5866)
!5866 = !{!5867, !5868, !5869, !5870}
!5867 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5865, file: !648, line: 947, type: !753)
!5868 = !DILocalVariable(name: "channel", scope: !5865, file: !648, line: 949, type: !4687)
!5869 = !DILocalVariable(name: "roomleft", scope: !5865, file: !648, line: 950, type: !105)
!5870 = !DILocalVariable(name: "status", scope: !5865, file: !648, line: 951, type: !4748)
!5871 = !DILocation(line: 0, scope: !5865)
!5872 = !DILocation(line: 950, column: 5, scope: !5865)
!5873 = !DILocation(line: 953, column: 10, scope: !5874)
!5874 = distinct !DILexicalBlock(scope: !5865, file: !648, line: 953, column: 9)
!5875 = !DILocation(line: 953, column: 9, scope: !5865)
!5876 = !DILocation(line: 957, column: 9, scope: !5877)
!5877 = distinct !DILexicalBlock(scope: !5865, file: !648, line: 957, column: 9)
!5878 = !DILocation(line: 957, column: 36, scope: !5877)
!5879 = !DILocation(line: 957, column: 9, scope: !5865)
!5880 = !DILocation(line: 961, column: 15, scope: !5865)
!5881 = !DILocation(line: 962, column: 14, scope: !5865)
!5882 = !DILocation(line: 963, column: 16, scope: !5883)
!5883 = distinct !DILexicalBlock(scope: !5865, file: !648, line: 963, column: 9)
!5884 = !DILocation(line: 963, column: 9, scope: !5865)
!5885 = !DILocation(line: 964, column: 9, scope: !5886)
!5886 = distinct !DILexicalBlock(scope: !5883, file: !648, line: 963, column: 28)
!5887 = !DILocation(line: 968, column: 12, scope: !5865)
!5888 = !DILocation(line: 968, column: 5, scope: !5865)
!5889 = !DILocation(line: 969, column: 1, scope: !5865)
!5890 = distinct !DISubprogram(name: "hal_uart_get_available_receive_bytes", scope: !648, file: !648, line: 971, type: !5762, scopeLine: 972, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !647, retainedNodes: !5891)
!5891 = !{!5892, !5893, !5894, !5895}
!5892 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5890, file: !648, line: 971, type: !753)
!5893 = !DILocalVariable(name: "channel", scope: !5890, file: !648, line: 973, type: !4687)
!5894 = !DILocalVariable(name: "avail", scope: !5890, file: !648, line: 974, type: !105)
!5895 = !DILocalVariable(name: "status", scope: !5890, file: !648, line: 975, type: !4748)
!5896 = !DILocation(line: 0, scope: !5890)
!5897 = !DILocation(line: 974, column: 5, scope: !5890)
!5898 = !DILocation(line: 977, column: 10, scope: !5899)
!5899 = distinct !DILexicalBlock(scope: !5890, file: !648, line: 977, column: 9)
!5900 = !DILocation(line: 977, column: 9, scope: !5890)
!5901 = !DILocation(line: 981, column: 9, scope: !5902)
!5902 = distinct !DILexicalBlock(scope: !5890, file: !648, line: 981, column: 9)
!5903 = !DILocation(line: 981, column: 36, scope: !5902)
!5904 = !DILocation(line: 981, column: 9, scope: !5890)
!5905 = !DILocation(line: 985, column: 15, scope: !5890)
!5906 = !DILocation(line: 986, column: 14, scope: !5890)
!5907 = !DILocation(line: 987, column: 16, scope: !5908)
!5908 = distinct !DILexicalBlock(scope: !5890, file: !648, line: 987, column: 9)
!5909 = !DILocation(line: 987, column: 9, scope: !5890)
!5910 = !DILocation(line: 988, column: 9, scope: !5911)
!5911 = distinct !DILexicalBlock(scope: !5908, file: !648, line: 987, column: 28)
!5912 = !DILocation(line: 992, column: 12, scope: !5890)
!5913 = !DILocation(line: 992, column: 5, scope: !5890)
!5914 = !DILocation(line: 993, column: 1, scope: !5890)
!5915 = distinct !DISubprogram(name: "hal_uart_disable_flowcontrol", scope: !648, file: !648, line: 1047, type: !4957, scopeLine: 1048, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !647, retainedNodes: !5916)
!5916 = !{!5917, !5918}
!5917 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5915, file: !648, line: 1047, type: !753)
!5918 = !DILocalVariable(name: "uartx", scope: !5915, file: !648, line: 1049, type: !4692)
!5919 = !DILocation(line: 0, scope: !5915)
!5920 = !DILocation(line: 1051, column: 10, scope: !5921)
!5921 = distinct !DILexicalBlock(scope: !5915, file: !648, line: 1051, column: 9)
!5922 = !DILocation(line: 1051, column: 9, scope: !5915)
!5923 = !DILocation(line: 1055, column: 9, scope: !5924)
!5924 = distinct !DILexicalBlock(scope: !5915, file: !648, line: 1055, column: 9)
!5925 = !DILocation(line: 1055, column: 36, scope: !5924)
!5926 = !DILocation(line: 1055, column: 9, scope: !5915)
!5927 = !DILocation(line: 1059, column: 13, scope: !5915)
!5928 = !DILocation(line: 1061, column: 5, scope: !5915)
!5929 = !DILocation(line: 1064, column: 5, scope: !5915)
!5930 = !DILocation(line: 1064, column: 42, scope: !5915)
!5931 = !DILocation(line: 1067, column: 5, scope: !5915)
!5932 = !DILocation(line: 1068, column: 1, scope: !5915)
!5933 = distinct !DISubprogram(name: "uart_set_baudrate", scope: !2949, file: !2949, line: 52, type: !5934, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2948, retainedNodes: !5991)
!5934 = !DISubroutineType(types: !5935)
!5935 = !{null, !5936, !105}
!5936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5937, size: 32)
!5937 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_REGISTER_T", file: !100, line: 588, baseType: !5938)
!5938 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !100, line: 542, size: 800, elements: !5939)
!5939 = !{!5940, !5946, !5951, !5957, !5958, !5963, !5968, !5969, !5974, !5975, !5976, !5977, !5978, !5979, !5980, !5981, !5982, !5983, !5984, !5985, !5986, !5987, !5988, !5989, !5990}
!5940 = !DIDerivedType(tag: DW_TAG_member, name: "RBR_THR_DLL", scope: !5938, file: !100, line: 547, baseType: !5941, size: 32)
!5941 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5938, file: !100, line: 543, size: 32, elements: !5942)
!5942 = !{!5943, !5944, !5945}
!5943 = !DIDerivedType(tag: DW_TAG_member, name: "RBR", scope: !5941, file: !100, line: 544, baseType: !299, size: 32)
!5944 = !DIDerivedType(tag: DW_TAG_member, name: "THR", scope: !5941, file: !100, line: 545, baseType: !104, size: 32)
!5945 = !DIDerivedType(tag: DW_TAG_member, name: "DLL", scope: !5941, file: !100, line: 546, baseType: !104, size: 32)
!5946 = !DIDerivedType(tag: DW_TAG_member, name: "IER_DLM", scope: !5938, file: !100, line: 551, baseType: !5947, size: 32, offset: 32)
!5947 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5938, file: !100, line: 548, size: 32, elements: !5948)
!5948 = !{!5949, !5950}
!5949 = !DIDerivedType(tag: DW_TAG_member, name: "IER", scope: !5947, file: !100, line: 549, baseType: !104, size: 32)
!5950 = !DIDerivedType(tag: DW_TAG_member, name: "DLM", scope: !5947, file: !100, line: 550, baseType: !104, size: 32)
!5951 = !DIDerivedType(tag: DW_TAG_member, name: "IIR_FCR_EFR", scope: !5938, file: !100, line: 556, baseType: !5952, size: 32, offset: 64)
!5952 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5938, file: !100, line: 552, size: 32, elements: !5953)
!5953 = !{!5954, !5955, !5956}
!5954 = !DIDerivedType(tag: DW_TAG_member, name: "IIR", scope: !5952, file: !100, line: 553, baseType: !299, size: 32)
!5955 = !DIDerivedType(tag: DW_TAG_member, name: "FCR", scope: !5952, file: !100, line: 554, baseType: !104, size: 32)
!5956 = !DIDerivedType(tag: DW_TAG_member, name: "EFR", scope: !5952, file: !100, line: 555, baseType: !104, size: 32)
!5957 = !DIDerivedType(tag: DW_TAG_member, name: "LCR", scope: !5938, file: !100, line: 557, baseType: !104, size: 32, offset: 96)
!5958 = !DIDerivedType(tag: DW_TAG_member, name: "MCR_XON1", scope: !5938, file: !100, line: 561, baseType: !5959, size: 32, offset: 128)
!5959 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5938, file: !100, line: 558, size: 32, elements: !5960)
!5960 = !{!5961, !5962}
!5961 = !DIDerivedType(tag: DW_TAG_member, name: "MCR", scope: !5959, file: !100, line: 559, baseType: !104, size: 32)
!5962 = !DIDerivedType(tag: DW_TAG_member, name: "XON1", scope: !5959, file: !100, line: 560, baseType: !104, size: 32)
!5963 = !DIDerivedType(tag: DW_TAG_member, name: "LSR_XON2", scope: !5938, file: !100, line: 565, baseType: !5964, size: 32, offset: 160)
!5964 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5938, file: !100, line: 562, size: 32, elements: !5965)
!5965 = !{!5966, !5967}
!5966 = !DIDerivedType(tag: DW_TAG_member, name: "LSR", scope: !5964, file: !100, line: 563, baseType: !299, size: 32)
!5967 = !DIDerivedType(tag: DW_TAG_member, name: "XON2", scope: !5964, file: !100, line: 564, baseType: !104, size: 32)
!5968 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF1", scope: !5938, file: !100, line: 566, baseType: !104, size: 32, offset: 192)
!5969 = !DIDerivedType(tag: DW_TAG_member, name: "SCR_XOFF2", scope: !5938, file: !100, line: 570, baseType: !5970, size: 32, offset: 224)
!5970 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5938, file: !100, line: 567, size: 32, elements: !5971)
!5971 = !{!5972, !5973}
!5972 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !5970, file: !100, line: 568, baseType: !104, size: 32)
!5973 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF2", scope: !5970, file: !100, line: 569, baseType: !104, size: 32)
!5974 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_EN", scope: !5938, file: !100, line: 571, baseType: !104, size: 32, offset: 256)
!5975 = !DIDerivedType(tag: DW_TAG_member, name: "HIGHSPEED", scope: !5938, file: !100, line: 572, baseType: !104, size: 32, offset: 288)
!5976 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_COUNT", scope: !5938, file: !100, line: 573, baseType: !104, size: 32, offset: 320)
!5977 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_POINT", scope: !5938, file: !100, line: 574, baseType: !104, size: 32, offset: 352)
!5978 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_REG", scope: !5938, file: !100, line: 575, baseType: !299, size: 32, offset: 384)
!5979 = !DIDerivedType(tag: DW_TAG_member, name: "RATEFIX_AD", scope: !5938, file: !100, line: 576, baseType: !104, size: 32, offset: 416)
!5980 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUDSAMPLE", scope: !5938, file: !100, line: 577, baseType: !104, size: 32, offset: 448)
!5981 = !DIDerivedType(tag: DW_TAG_member, name: "GUARD", scope: !5938, file: !100, line: 578, baseType: !104, size: 32, offset: 480)
!5982 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_DAT", scope: !5938, file: !100, line: 579, baseType: !104, size: 32, offset: 512)
!5983 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_EN", scope: !5938, file: !100, line: 580, baseType: !104, size: 32, offset: 544)
!5984 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEP_EN", scope: !5938, file: !100, line: 581, baseType: !104, size: 32, offset: 576)
!5985 = !DIDerivedType(tag: DW_TAG_member, name: "DMA_EN", scope: !5938, file: !100, line: 582, baseType: !104, size: 32, offset: 608)
!5986 = !DIDerivedType(tag: DW_TAG_member, name: "RXTRI_AD", scope: !5938, file: !100, line: 583, baseType: !104, size: 32, offset: 640)
!5987 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_L", scope: !5938, file: !100, line: 584, baseType: !104, size: 32, offset: 672)
!5988 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_M", scope: !5938, file: !100, line: 585, baseType: !104, size: 32, offset: 704)
!5989 = !DIDerivedType(tag: DW_TAG_member, name: "FCR_RD", scope: !5938, file: !100, line: 586, baseType: !299, size: 32, offset: 736)
!5990 = !DIDerivedType(tag: DW_TAG_member, name: "TX_ACTIVE_EN", scope: !5938, file: !100, line: 587, baseType: !104, size: 32, offset: 768)
!5991 = !{!5992, !5993, !5994, !5995, !5996, !5997, !5998, !5999, !6000, !6001, !6002, !6003}
!5992 = !DILocalVariable(name: "uartx", arg: 1, scope: !5933, file: !2949, line: 52, type: !5936)
!5993 = !DILocalVariable(name: "actual_baudrate", arg: 2, scope: !5933, file: !2949, line: 52, type: !105)
!5994 = !DILocalVariable(name: "uart_clock", scope: !5933, file: !2949, line: 54, type: !105)
!5995 = !DILocalVariable(name: "integer", scope: !5933, file: !2949, line: 54, type: !105)
!5996 = !DILocalVariable(name: "remainder", scope: !5933, file: !2949, line: 54, type: !105)
!5997 = !DILocalVariable(name: "fraction", scope: !5933, file: !2949, line: 54, type: !105)
!5998 = !DILocalVariable(name: "dll_dlm", scope: !5933, file: !2949, line: 55, type: !105)
!5999 = !DILocalVariable(name: "sample_count", scope: !5933, file: !2949, line: 55, type: !105)
!6000 = !DILocalVariable(name: "sample_point", scope: !5933, file: !2949, line: 55, type: !105)
!6001 = !DILocalVariable(name: "temp_lcr", scope: !5933, file: !2949, line: 55, type: !105)
!6002 = !DILocalVariable(name: "fraction_L_mapping", scope: !5933, file: !2949, line: 56, type: !119)
!6003 = !DILocalVariable(name: "fraction_M_mapping", scope: !5933, file: !2949, line: 57, type: !119)
!6004 = !DILocation(line: 0, scope: !5933)
!6005 = !DILocation(line: 56, column: 14, scope: !5933)
!6006 = !DILocation(line: 57, column: 5, scope: !5933)
!6007 = !DILocation(line: 57, column: 14, scope: !5933)
!6008 = !DILocation(line: 59, column: 12, scope: !5933)
!6009 = !DILocation(line: 59, column: 23, scope: !5933)
!6010 = !DILocation(line: 60, column: 12, scope: !5933)
!6011 = !DILocation(line: 60, column: 22, scope: !5933)
!6012 = !DILocation(line: 61, column: 12, scope: !5933)
!6013 = !DILocation(line: 61, column: 22, scope: !5933)
!6014 = !DILocation(line: 63, column: 9, scope: !6015)
!6015 = distinct !DILexicalBlock(scope: !5933, file: !2949, line: 63, column: 9)
!6016 = !DILocation(line: 63, column: 9, scope: !5933)
!6017 = !DILocation(line: 64, column: 22, scope: !6018)
!6018 = distinct !DILexicalBlock(scope: !6015, file: !2949, line: 63, column: 37)
!6019 = !DILocation(line: 64, column: 45, scope: !6018)
!6020 = !DILocation(line: 65, column: 5, scope: !6018)
!6021 = !DILocation(line: 0, scope: !6015)
!6022 = !DILocation(line: 69, column: 45, scope: !5933)
!6023 = !DILocation(line: 69, column: 26, scope: !5933)
!6024 = !DILocation(line: 70, column: 30, scope: !5933)
!6025 = !DILocation(line: 70, column: 36, scope: !5933)
!6026 = !DILocation(line: 70, column: 63, scope: !5933)
!6027 = !DILocation(line: 71, column: 20, scope: !6028)
!6028 = distinct !DILexicalBlock(scope: !5933, file: !2949, line: 71, column: 9)
!6029 = !DILocation(line: 71, column: 26, scope: !6028)
!6030 = !DILocation(line: 77, column: 5, scope: !5933)
!6031 = !DILocation(line: 77, column: 25, scope: !5933)
!6032 = !DILocation(line: 78, column: 16, scope: !6033)
!6033 = distinct !DILexicalBlock(scope: !5933, file: !2949, line: 77, column: 32)
!6034 = distinct !{!6034, !6030, !6035}
!6035 = !DILocation(line: 80, column: 5, scope: !5933)
!6036 = !DILocation(line: 82, column: 35, scope: !5933)
!6037 = !DILocation(line: 82, column: 66, scope: !5933)
!6038 = !DILocation(line: 84, column: 18, scope: !5933)
!6039 = !DILocation(line: 85, column: 34, scope: !5933)
!6040 = !DILocation(line: 85, column: 39, scope: !5933)
!6041 = !DILocation(line: 87, column: 12, scope: !5933)
!6042 = !DILocation(line: 87, column: 22, scope: !5933)
!6043 = !DILocation(line: 89, column: 23, scope: !5933)
!6044 = !DILocation(line: 90, column: 27, scope: !5933)
!6045 = !DILocation(line: 90, column: 16, scope: !5933)
!6046 = !DILocation(line: 91, column: 38, scope: !5933)
!6047 = !DILocation(line: 91, column: 24, scope: !5933)
!6048 = !DILocation(line: 91, column: 28, scope: !5933)
!6049 = !DILocation(line: 92, column: 35, scope: !5933)
!6050 = !DILocation(line: 92, column: 41, scope: !5933)
!6051 = !DILocation(line: 92, column: 20, scope: !5933)
!6052 = !DILocation(line: 92, column: 24, scope: !5933)
!6053 = !DILocation(line: 93, column: 16, scope: !5933)
!6054 = !DILocation(line: 95, column: 12, scope: !5933)
!6055 = !DILocation(line: 95, column: 25, scope: !5933)
!6056 = !DILocation(line: 96, column: 12, scope: !5933)
!6057 = !DILocation(line: 96, column: 25, scope: !5933)
!6058 = !DILocation(line: 98, column: 24, scope: !5933)
!6059 = !DILocation(line: 98, column: 22, scope: !5933)
!6060 = !DILocation(line: 99, column: 24, scope: !5933)
!6061 = !DILocation(line: 99, column: 22, scope: !5933)
!6062 = !DILocation(line: 101, column: 25, scope: !6063)
!6063 = distinct !DILexicalBlock(scope: !5933, file: !2949, line: 101, column: 9)
!6064 = !DILocation(line: 101, column: 9, scope: !5933)
!6065 = !DILocation(line: 102, column: 16, scope: !6066)
!6066 = distinct !DILexicalBlock(scope: !6063, file: !2949, line: 101, column: 37)
!6067 = !DILocation(line: 102, column: 22, scope: !6066)
!6068 = !DILocation(line: 103, column: 5, scope: !6066)
!6069 = !DILocation(line: 104, column: 1, scope: !5933)
!6070 = distinct !DISubprogram(name: "uart_set_format", scope: !2949, file: !2949, line: 106, type: !6071, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2948, retainedNodes: !6073)
!6071 = !DISubroutineType(types: !6072)
!6072 = !{null, !5936, !786, !788, !790}
!6073 = !{!6074, !6075, !6076, !6077, !6078}
!6074 = !DILocalVariable(name: "uartx", arg: 1, scope: !6070, file: !2949, line: 106, type: !5936)
!6075 = !DILocalVariable(name: "word_length", arg: 2, scope: !6070, file: !2949, line: 107, type: !786)
!6076 = !DILocalVariable(name: "stop_bit", arg: 3, scope: !6070, file: !2949, line: 108, type: !788)
!6077 = !DILocalVariable(name: "parity", arg: 4, scope: !6070, file: !2949, line: 109, type: !790)
!6078 = !DILocalVariable(name: "byte", scope: !6070, file: !2949, line: 111, type: !987)
!6079 = !DILocation(line: 0, scope: !6070)
!6080 = !DILocation(line: 114, column: 19, scope: !6070)
!6081 = !DILocation(line: 115, column: 16, scope: !6070)
!6082 = !DILocation(line: 118, column: 10, scope: !6070)
!6083 = !DILocation(line: 119, column: 5, scope: !6070)
!6084 = !DILocation(line: 124, column: 18, scope: !6085)
!6085 = distinct !DILexicalBlock(scope: !6070, file: !2949, line: 119, column: 26)
!6086 = !DILocation(line: 125, column: 13, scope: !6085)
!6087 = !DILocation(line: 127, column: 18, scope: !6085)
!6088 = !DILocation(line: 128, column: 13, scope: !6085)
!6089 = !DILocation(line: 130, column: 18, scope: !6085)
!6090 = !DILocation(line: 131, column: 13, scope: !6085)
!6091 = !DILocation(line: 137, column: 10, scope: !6070)
!6092 = !DILocation(line: 138, column: 5, scope: !6070)
!6093 = !DILocation(line: 151, column: 5, scope: !6070)
!6094 = !DILocation(line: 166, column: 18, scope: !6070)
!6095 = !DILocation(line: 166, column: 16, scope: !6070)
!6096 = !DILocation(line: 167, column: 1, scope: !6070)
!6097 = distinct !DISubprogram(name: "uart_put_char_block", scope: !2949, file: !2949, line: 169, type: !6098, scopeLine: 170, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2948, retainedNodes: !6100)
!6098 = !DISubroutineType(types: !6099)
!6099 = !{null, !5936, !127}
!6100 = !{!6101, !6102, !6103}
!6101 = !DILocalVariable(name: "uartx", arg: 1, scope: !6097, file: !2949, line: 169, type: !5936)
!6102 = !DILocalVariable(name: "byte", arg: 2, scope: !6097, file: !2949, line: 169, type: !127)
!6103 = !DILocalVariable(name: "LSR", scope: !6097, file: !2949, line: 171, type: !987)
!6104 = !DILocation(line: 0, scope: !6097)
!6105 = !DILocation(line: 173, column: 5, scope: !6097)
!6106 = !DILocation(line: 174, column: 31, scope: !6107)
!6107 = distinct !DILexicalBlock(scope: !6097, file: !2949, line: 173, column: 15)
!6108 = !DILocation(line: 175, column: 17, scope: !6109)
!6109 = distinct !DILexicalBlock(scope: !6107, file: !2949, line: 175, column: 13)
!6110 = !DILocation(line: 175, column: 13, scope: !6107)
!6111 = distinct !{!6111, !6105, !6112}
!6112 = !DILocation(line: 179, column: 5, scope: !6097)
!6113 = !DILocation(line: 176, column: 38, scope: !6114)
!6114 = distinct !DILexicalBlock(scope: !6109, file: !2949, line: 175, column: 39)
!6115 = !DILocation(line: 176, column: 32, scope: !6114)
!6116 = !DILocation(line: 176, column: 36, scope: !6114)
!6117 = !DILocation(line: 180, column: 1, scope: !6097)
!6118 = distinct !DISubprogram(name: "uart_get_char_block", scope: !2949, file: !2949, line: 182, type: !6119, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2948, retainedNodes: !6121)
!6119 = !DISubroutineType(types: !6120)
!6120 = !{!127, !5936}
!6121 = !{!6122, !6123, !6124}
!6122 = !DILocalVariable(name: "uartx", arg: 1, scope: !6118, file: !2949, line: 182, type: !5936)
!6123 = !DILocalVariable(name: "LSR", scope: !6118, file: !2949, line: 184, type: !987)
!6124 = !DILocalVariable(name: "byte", scope: !6118, file: !2949, line: 185, type: !127)
!6125 = !DILocation(line: 0, scope: !6118)
!6126 = !DILocation(line: 187, column: 5, scope: !6118)
!6127 = !DILocation(line: 188, column: 31, scope: !6128)
!6128 = distinct !DILexicalBlock(scope: !6118, file: !2949, line: 187, column: 15)
!6129 = !DILocation(line: 189, column: 17, scope: !6130)
!6130 = distinct !DILexicalBlock(scope: !6128, file: !2949, line: 189, column: 13)
!6131 = !DILocation(line: 189, column: 13, scope: !6128)
!6132 = distinct !{!6132, !6126, !6133}
!6133 = !DILocation(line: 193, column: 5, scope: !6118)
!6134 = !DILocation(line: 190, column: 48, scope: !6135)
!6135 = distinct !DILexicalBlock(scope: !6130, file: !2949, line: 189, column: 37)
!6136 = !DILocation(line: 190, column: 20, scope: !6135)
!6137 = !DILocation(line: 195, column: 5, scope: !6118)
!6138 = distinct !DISubprogram(name: "uart_get_char_unblocking", scope: !2949, file: !2949, line: 198, type: !6139, scopeLine: 199, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2948, retainedNodes: !6141)
!6139 = !DISubroutineType(types: !6140)
!6140 = !{!105, !5936}
!6141 = !{!6142, !6143, !6144}
!6142 = !DILocalVariable(name: "uartx", arg: 1, scope: !6138, file: !2949, line: 198, type: !5936)
!6143 = !DILocalVariable(name: "LSR", scope: !6138, file: !2949, line: 200, type: !987)
!6144 = !DILocalVariable(name: "value", scope: !6138, file: !2949, line: 201, type: !105)
!6145 = !DILocation(line: 0, scope: !6138)
!6146 = !DILocation(line: 203, column: 27, scope: !6138)
!6147 = !DILocation(line: 204, column: 13, scope: !6148)
!6148 = distinct !DILexicalBlock(scope: !6138, file: !2949, line: 204, column: 9)
!6149 = !DILocation(line: 204, column: 9, scope: !6138)
!6150 = !DILocation(line: 205, column: 36, scope: !6151)
!6151 = distinct !DILexicalBlock(scope: !6148, file: !2949, line: 204, column: 33)
!6152 = !DILocation(line: 206, column: 5, scope: !6151)
!6153 = !DILocation(line: 0, scope: !6148)
!6154 = !DILocation(line: 210, column: 5, scope: !6138)
!6155 = distinct !DISubprogram(name: "uart_set_hardware_flowcontrol", scope: !2949, file: !2949, line: 213, type: !6156, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2948, retainedNodes: !6158)
!6156 = !DISubroutineType(types: !6157)
!6157 = !{null, !5936}
!6158 = !{!6159, !6160, !6161}
!6159 = !DILocalVariable(name: "uartx", arg: 1, scope: !6155, file: !2949, line: 213, type: !5936)
!6160 = !DILocalVariable(name: "EFR", scope: !6155, file: !2949, line: 215, type: !987)
!6161 = !DILocalVariable(name: "LCR", scope: !6155, file: !2949, line: 215, type: !987)
!6162 = !DILocation(line: 0, scope: !6155)
!6163 = !DILocation(line: 217, column: 18, scope: !6155)
!6164 = !DILocation(line: 219, column: 16, scope: !6155)
!6165 = !DILocation(line: 220, column: 30, scope: !6155)
!6166 = !DILocation(line: 222, column: 30, scope: !6155)
!6167 = !DILocation(line: 222, column: 28, scope: !6155)
!6168 = !DILocation(line: 223, column: 12, scope: !6155)
!6169 = !DILocation(line: 223, column: 22, scope: !6155)
!6170 = !DILocation(line: 225, column: 16, scope: !6155)
!6171 = !DILocation(line: 226, column: 21, scope: !6155)
!6172 = !DILocation(line: 226, column: 25, scope: !6155)
!6173 = !DILocation(line: 228, column: 18, scope: !6155)
!6174 = !DILocation(line: 228, column: 16, scope: !6155)
!6175 = !DILocation(line: 229, column: 1, scope: !6155)
!6176 = distinct !DISubprogram(name: "uart_set_software_flowcontrol", scope: !2949, file: !2949, line: 231, type: !6177, scopeLine: 235, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2948, retainedNodes: !6179)
!6177 = !DISubroutineType(types: !6178)
!6178 = !{null, !5936, !127, !127, !127}
!6179 = !{!6180, !6181, !6182, !6183, !6184, !6185}
!6180 = !DILocalVariable(name: "uartx", arg: 1, scope: !6176, file: !2949, line: 231, type: !5936)
!6181 = !DILocalVariable(name: "xon", arg: 2, scope: !6176, file: !2949, line: 232, type: !127)
!6182 = !DILocalVariable(name: "xoff", arg: 3, scope: !6176, file: !2949, line: 233, type: !127)
!6183 = !DILocalVariable(name: "escape_character", arg: 4, scope: !6176, file: !2949, line: 234, type: !127)
!6184 = !DILocalVariable(name: "EFR", scope: !6176, file: !2949, line: 236, type: !987)
!6185 = !DILocalVariable(name: "LCR", scope: !6176, file: !2949, line: 236, type: !987)
!6186 = !DILocation(line: 0, scope: !6176)
!6187 = !DILocation(line: 238, column: 18, scope: !6176)
!6188 = !DILocation(line: 240, column: 16, scope: !6176)
!6189 = !DILocation(line: 241, column: 28, scope: !6176)
!6190 = !DILocation(line: 241, column: 21, scope: !6176)
!6191 = !DILocation(line: 241, column: 26, scope: !6176)
!6192 = !DILocation(line: 242, column: 20, scope: !6176)
!6193 = !DILocation(line: 242, column: 12, scope: !6176)
!6194 = !DILocation(line: 242, column: 18, scope: !6176)
!6195 = !DILocation(line: 243, column: 30, scope: !6176)
!6196 = !DILocation(line: 245, column: 30, scope: !6176)
!6197 = !DILocation(line: 245, column: 28, scope: !6176)
!6198 = !DILocation(line: 246, column: 25, scope: !6176)
!6199 = !DILocation(line: 246, column: 12, scope: !6176)
!6200 = !DILocation(line: 246, column: 23, scope: !6176)
!6201 = !DILocation(line: 247, column: 12, scope: !6176)
!6202 = !DILocation(line: 247, column: 22, scope: !6176)
!6203 = !DILocation(line: 249, column: 18, scope: !6176)
!6204 = !DILocation(line: 249, column: 16, scope: !6176)
!6205 = !DILocation(line: 250, column: 1, scope: !6176)
!6206 = distinct !DISubprogram(name: "uart_disable_flowcontrol", scope: !2949, file: !2949, line: 252, type: !6156, scopeLine: 253, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2948, retainedNodes: !6207)
!6207 = !{!6208, !6209}
!6208 = !DILocalVariable(name: "uartx", arg: 1, scope: !6206, file: !2949, line: 252, type: !5936)
!6209 = !DILocalVariable(name: "LCR", scope: !6206, file: !2949, line: 254, type: !987)
!6210 = !DILocation(line: 0, scope: !6206)
!6211 = !DILocation(line: 256, column: 18, scope: !6206)
!6212 = !DILocation(line: 258, column: 16, scope: !6206)
!6213 = !DILocation(line: 259, column: 24, scope: !6206)
!6214 = !DILocation(line: 259, column: 28, scope: !6206)
!6215 = !DILocation(line: 261, column: 16, scope: !6206)
!6216 = !DILocation(line: 262, column: 18, scope: !6206)
!6217 = !DILocation(line: 262, column: 16, scope: !6206)
!6218 = !DILocation(line: 263, column: 1, scope: !6206)
!6219 = distinct !DISubprogram(name: "uart_set_fifo", scope: !2949, file: !2949, line: 265, type: !6156, scopeLine: 266, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2948, retainedNodes: !6220)
!6220 = !{!6221, !6222, !6223}
!6221 = !DILocalVariable(name: "uartx", arg: 1, scope: !6219, file: !2949, line: 265, type: !5936)
!6222 = !DILocalVariable(name: "EFR", scope: !6219, file: !2949, line: 267, type: !987)
!6223 = !DILocalVariable(name: "LCR", scope: !6219, file: !2949, line: 267, type: !987)
!6224 = !DILocation(line: 0, scope: !6219)
!6225 = !DILocation(line: 269, column: 18, scope: !6219)
!6226 = !DILocation(line: 271, column: 16, scope: !6219)
!6227 = !DILocation(line: 272, column: 30, scope: !6219)
!6228 = !DILocation(line: 274, column: 30, scope: !6219)
!6229 = !DILocation(line: 274, column: 28, scope: !6219)
!6230 = !DILocation(line: 276, column: 16, scope: !6219)
!6231 = !DILocation(line: 277, column: 28, scope: !6219)
!6232 = !DILocation(line: 283, column: 18, scope: !6219)
!6233 = !DILocation(line: 283, column: 16, scope: !6219)
!6234 = !DILocation(line: 284, column: 1, scope: !6219)
!6235 = distinct !DISubprogram(name: "uart_set_sleep_mode", scope: !2949, file: !2949, line: 287, type: !6156, scopeLine: 288, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2948, retainedNodes: !6236)
!6236 = !{!6237}
!6237 = !DILocalVariable(name: "uartx", arg: 1, scope: !6235, file: !2949, line: 287, type: !5936)
!6238 = !DILocation(line: 0, scope: !6235)
!6239 = !DILocation(line: 289, column: 12, scope: !6235)
!6240 = !DILocation(line: 289, column: 21, scope: !6235)
!6241 = !DILocation(line: 290, column: 1, scope: !6235)
!6242 = distinct !DISubprogram(name: "uart_unmask_send_interrupt", scope: !2949, file: !2949, line: 292, type: !6156, scopeLine: 293, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2948, retainedNodes: !6243)
!6243 = !{!6244, !6245, !6246}
!6244 = !DILocalVariable(name: "uartx", arg: 1, scope: !6242, file: !2949, line: 292, type: !5936)
!6245 = !DILocalVariable(name: "IER", scope: !6242, file: !2949, line: 294, type: !987)
!6246 = !DILocalVariable(name: "LCR", scope: !6242, file: !2949, line: 294, type: !987)
!6247 = !DILocation(line: 0, scope: !6242)
!6248 = !DILocation(line: 296, column: 18, scope: !6242)
!6249 = !DILocation(line: 298, column: 16, scope: !6242)
!6250 = !DILocation(line: 299, column: 26, scope: !6242)
!6251 = !DILocation(line: 301, column: 26, scope: !6242)
!6252 = !DILocation(line: 301, column: 24, scope: !6242)
!6253 = !DILocation(line: 303, column: 19, scope: !6242)
!6254 = !DILocation(line: 303, column: 16, scope: !6242)
!6255 = !DILocation(line: 304, column: 1, scope: !6242)
!6256 = distinct !DISubprogram(name: "uart_unmask_receive_interrupt", scope: !2949, file: !2949, line: 307, type: !6156, scopeLine: 308, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2948, retainedNodes: !6257)
!6257 = !{!6258, !6259, !6260}
!6258 = !DILocalVariable(name: "uartx", arg: 1, scope: !6256, file: !2949, line: 307, type: !5936)
!6259 = !DILocalVariable(name: "IER", scope: !6256, file: !2949, line: 309, type: !987)
!6260 = !DILocalVariable(name: "LCR", scope: !6256, file: !2949, line: 309, type: !987)
!6261 = !DILocation(line: 0, scope: !6256)
!6262 = !DILocation(line: 311, column: 18, scope: !6256)
!6263 = !DILocation(line: 313, column: 16, scope: !6256)
!6264 = !DILocation(line: 314, column: 26, scope: !6256)
!6265 = !DILocation(line: 316, column: 26, scope: !6256)
!6266 = !DILocation(line: 316, column: 24, scope: !6256)
!6267 = !DILocation(line: 318, column: 19, scope: !6256)
!6268 = !DILocation(line: 318, column: 16, scope: !6256)
!6269 = !DILocation(line: 319, column: 1, scope: !6256)
!6270 = distinct !DISubprogram(name: "uart_purge_fifo", scope: !2949, file: !2949, line: 321, type: !6271, scopeLine: 322, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2948, retainedNodes: !6273)
!6271 = !DISubroutineType(types: !6272)
!6272 = !{null, !5936, !1124}
!6273 = !{!6274, !6275, !6276}
!6274 = !DILocalVariable(name: "uartx", arg: 1, scope: !6270, file: !2949, line: 321, type: !5936)
!6275 = !DILocalVariable(name: "is_rx", arg: 2, scope: !6270, file: !2949, line: 321, type: !1124)
!6276 = !DILocalVariable(name: "FCR", scope: !6270, file: !2949, line: 323, type: !987)
!6277 = !DILocation(line: 0, scope: !6270)
!6278 = !DILocation(line: 327, column: 9, scope: !6279)
!6279 = distinct !DILexicalBlock(scope: !6270, file: !2949, line: 327, column: 9)
!6280 = !DILocation(line: 333, column: 24, scope: !6270)
!6281 = !DILocation(line: 333, column: 28, scope: !6270)
!6282 = !DILocation(line: 334, column: 1, scope: !6270)
!6283 = distinct !DISubprogram(name: "uart_query_interrupt_type", scope: !2949, file: !2949, line: 336, type: !6284, scopeLine: 337, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2948, retainedNodes: !6287)
!6284 = !DISubroutineType(types: !6285)
!6285 = !{!6286, !5936}
!6286 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_interrupt_type_t", file: !748, line: 55, baseType: !843)
!6287 = !{!6288, !6289, !6290, !6291}
!6288 = !DILocalVariable(name: "uartx", arg: 1, scope: !6283, file: !2949, line: 336, type: !5936)
!6289 = !DILocalVariable(name: "IIR", scope: !6283, file: !2949, line: 338, type: !987)
!6290 = !DILocalVariable(name: "LSR", scope: !6283, file: !2949, line: 338, type: !987)
!6291 = !DILocalVariable(name: "type", scope: !6283, file: !2949, line: 339, type: !6286)
!6292 = !DILocation(line: 0, scope: !6283)
!6293 = !DILocation(line: 341, column: 30, scope: !6283)
!6294 = !DILocation(line: 342, column: 13, scope: !6295)
!6295 = distinct !DILexicalBlock(scope: !6283, file: !2949, line: 342, column: 9)
!6296 = !DILocation(line: 342, column: 9, scope: !6283)
!6297 = !DILocation(line: 346, column: 17, scope: !6283)
!6298 = !DILocation(line: 346, column: 5, scope: !6283)
!6299 = !DILocation(line: 350, column: 13, scope: !6300)
!6300 = distinct !DILexicalBlock(scope: !6283, file: !2949, line: 346, column: 37)
!6301 = !DILocation(line: 353, column: 35, scope: !6300)
!6302 = !DILocation(line: 354, column: 21, scope: !6303)
!6303 = distinct !DILexicalBlock(scope: !6300, file: !2949, line: 354, column: 17)
!6304 = !DILocation(line: 363, column: 13, scope: !6300)
!6305 = !DILocation(line: 369, column: 1, scope: !6283)
!6306 = distinct !DISubprogram(name: "uart_verify_error", scope: !2949, file: !2949, line: 371, type: !6307, scopeLine: 372, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2948, retainedNodes: !6309)
!6307 = !DISubroutineType(types: !6308)
!6308 = !{!1124, !5936}
!6309 = !{!6310, !6311, !6312}
!6310 = !DILocalVariable(name: "uartx", arg: 1, scope: !6306, file: !2949, line: 371, type: !5936)
!6311 = !DILocalVariable(name: "LSR", scope: !6306, file: !2949, line: 373, type: !987)
!6312 = !DILocalVariable(name: "ret", scope: !6306, file: !2949, line: 374, type: !1124)
!6313 = !DILocation(line: 0, scope: !6306)
!6314 = !DILocation(line: 376, column: 27, scope: !6306)
!6315 = !DILocation(line: 377, column: 15, scope: !6316)
!6316 = distinct !DILexicalBlock(scope: !6306, file: !2949, line: 377, column: 9)
!6317 = !DILocation(line: 377, column: 9, scope: !6306)
!6318 = !DILocation(line: 381, column: 5, scope: !6306)
!6319 = distinct !DISubprogram(name: "uart_clear_timeout_interrupt", scope: !2949, file: !2949, line: 384, type: !6156, scopeLine: 385, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2948, retainedNodes: !6320)
!6320 = !{!6321, !6322}
!6321 = !DILocalVariable(name: "uartx", arg: 1, scope: !6319, file: !2949, line: 384, type: !5936)
!6322 = !DILocalVariable(name: "DMA_EN", scope: !6319, file: !2949, line: 386, type: !987)
!6323 = !DILocation(line: 0, scope: !6319)
!6324 = !DILocation(line: 388, column: 21, scope: !6319)
!6325 = !DILocation(line: 390, column: 1, scope: !6319)
!6326 = distinct !DISubprogram(name: "uart_reset_default_value", scope: !2949, file: !2949, line: 392, type: !6156, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2948, retainedNodes: !6327)
!6327 = !{!6328}
!6328 = !DILocalVariable(name: "uartx", arg: 1, scope: !6326, file: !2949, line: 392, type: !5936)
!6329 = !DILocation(line: 0, scope: !6326)
!6330 = !DILocation(line: 394, column: 12, scope: !6326)
!6331 = !DILocation(line: 394, column: 16, scope: !6326)
!6332 = !DILocation(line: 395, column: 24, scope: !6326)
!6333 = !DILocation(line: 395, column: 28, scope: !6326)
!6334 = !DILocation(line: 396, column: 21, scope: !6326)
!6335 = !DILocation(line: 396, column: 26, scope: !6326)
!6336 = !DILocation(line: 397, column: 12, scope: !6326)
!6337 = !DILocation(line: 397, column: 18, scope: !6326)
!6338 = !DILocation(line: 399, column: 16, scope: !6326)
!6339 = !DILocation(line: 400, column: 24, scope: !6326)
!6340 = !DILocation(line: 400, column: 28, scope: !6326)
!6341 = !DILocation(line: 401, column: 20, scope: !6326)
!6342 = !DILocation(line: 401, column: 24, scope: !6326)
!6343 = !DILocation(line: 403, column: 16, scope: !6326)
!6344 = !DILocation(line: 404, column: 24, scope: !6326)
!6345 = !DILocation(line: 405, column: 28, scope: !6326)
!6346 = !DILocation(line: 407, column: 16, scope: !6326)
!6347 = !DILocation(line: 408, column: 28, scope: !6326)
!6348 = !DILocation(line: 409, column: 16, scope: !6326)
!6349 = !DILocation(line: 411, column: 25, scope: !6326)
!6350 = !DILocation(line: 412, column: 22, scope: !6326)
!6351 = !DILocation(line: 412, column: 26, scope: !6326)
!6352 = !DILocation(line: 413, column: 12, scope: !6326)
!6353 = !DILocation(line: 413, column: 24, scope: !6326)
!6354 = !DILocation(line: 414, column: 12, scope: !6326)
!6355 = !DILocation(line: 414, column: 22, scope: !6326)
!6356 = !DILocation(line: 415, column: 12, scope: !6326)
!6357 = !DILocation(line: 415, column: 25, scope: !6326)
!6358 = !DILocation(line: 416, column: 12, scope: !6326)
!6359 = !DILocation(line: 416, column: 25, scope: !6326)
!6360 = !DILocation(line: 417, column: 12, scope: !6326)
!6361 = !DILocation(line: 417, column: 23, scope: !6326)
!6362 = !DILocation(line: 418, column: 12, scope: !6326)
!6363 = !DILocation(line: 418, column: 27, scope: !6326)
!6364 = !DILocation(line: 419, column: 12, scope: !6326)
!6365 = !DILocation(line: 419, column: 18, scope: !6326)
!6366 = !DILocation(line: 420, column: 12, scope: !6326)
!6367 = !DILocation(line: 420, column: 23, scope: !6326)
!6368 = !DILocation(line: 421, column: 12, scope: !6326)
!6369 = !DILocation(line: 421, column: 22, scope: !6326)
!6370 = !DILocation(line: 422, column: 12, scope: !6326)
!6371 = !DILocation(line: 422, column: 21, scope: !6326)
!6372 = !DILocation(line: 423, column: 12, scope: !6326)
!6373 = !DILocation(line: 423, column: 19, scope: !6326)
!6374 = !DILocation(line: 424, column: 23, scope: !6326)
!6375 = !DILocation(line: 425, column: 12, scope: !6326)
!6376 = !DILocation(line: 425, column: 22, scope: !6326)
!6377 = !DILocation(line: 426, column: 12, scope: !6326)
!6378 = !DILocation(line: 426, column: 22, scope: !6326)
!6379 = !DILocation(line: 427, column: 1, scope: !6326)
!6380 = distinct !DISubprogram(name: "uart_query_empty", scope: !2949, file: !2949, line: 429, type: !6156, scopeLine: 430, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2948, retainedNodes: !6381)
!6381 = !{!6382}
!6382 = !DILocalVariable(name: "uartx", arg: 1, scope: !6380, file: !2949, line: 429, type: !5936)
!6383 = !DILocation(line: 0, scope: !6380)
!6384 = !DILocation(line: 431, column: 5, scope: !6380)
!6385 = !DILocation(line: 431, column: 31, scope: !6380)
!6386 = !DILocation(line: 431, column: 36, scope: !6380)
!6387 = !DILocation(line: 431, column: 12, scope: !6380)
!6388 = distinct !{!6388, !6384, !6389}
!6389 = !DILocation(line: 431, column: 44, scope: !6380)
!6390 = !DILocation(line: 432, column: 1, scope: !6380)
!6391 = distinct !DISubprogram(name: "uart_port_to_dma_channel", scope: !841, file: !841, line: 134, type: !6392, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !840, retainedNodes: !6394)
!6392 = !DISubroutineType(types: !6393)
!6393 = !{!4687, !753, !1124}
!6394 = !{!6395, !6396, !6397}
!6395 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6391, file: !841, line: 134, type: !753)
!6396 = !DILocalVariable(name: "is_rx", arg: 2, scope: !6391, file: !841, line: 134, type: !1124)
!6397 = !DILocalVariable(name: "dma_channel", scope: !6391, file: !841, line: 136, type: !4687)
!6398 = !DILocation(line: 0, scope: !6391)
!6399 = !DILocation(line: 138, column: 5, scope: !6391)
!6400 = !DILocation(line: 140, column: 17, scope: !6401)
!6401 = distinct !DILexicalBlock(scope: !6402, file: !841, line: 140, column: 17)
!6402 = distinct !DILexicalBlock(scope: !6391, file: !841, line: 138, column: 24)
!6403 = !DILocation(line: 147, column: 17, scope: !6404)
!6404 = distinct !DILexicalBlock(scope: !6402, file: !841, line: 147, column: 17)
!6405 = !DILocation(line: 154, column: 17, scope: !6406)
!6406 = distinct !DILexicalBlock(scope: !6402, file: !841, line: 154, column: 17)
!6407 = !DILocation(line: 161, column: 17, scope: !6408)
!6408 = distinct !DILexicalBlock(scope: !6402, file: !841, line: 161, column: 17)
!6409 = !DILocation(line: 171, column: 5, scope: !6391)
!6410 = distinct !DISubprogram(name: "uart_dma_channel_to_callback_data", scope: !841, file: !841, line: 174, type: !6411, scopeLine: 175, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !840, retainedNodes: !6419)
!6411 = !DISubroutineType(types: !6412)
!6412 = !{null, !4687, !6413}
!6413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6414, size: 32)
!6414 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_dma_callback_data_t", file: !748, line: 96, baseType: !6415)
!6415 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !748, line: 93, size: 64, elements: !6416)
!6416 = !{!6417, !6418}
!6417 = !DIDerivedType(tag: DW_TAG_member, name: "is_rx", scope: !6415, file: !748, line: 94, baseType: !321, size: 8)
!6418 = !DIDerivedType(tag: DW_TAG_member, name: "uart_port", scope: !6415, file: !748, line: 95, baseType: !753, size: 32, offset: 32)
!6419 = !{!6420, !6421}
!6420 = !DILocalVariable(name: "dma_channel", arg: 1, scope: !6410, file: !841, line: 174, type: !4687)
!6421 = !DILocalVariable(name: "user_data", arg: 2, scope: !6410, file: !841, line: 174, type: !6413)
!6422 = !DILocation(line: 0, scope: !6410)
!6423 = !DILocation(line: 176, column: 5, scope: !6410)
!6424 = !DILocation(line: 0, scope: !6425)
!6425 = distinct !DILexicalBlock(scope: !6410, file: !841, line: 176, column: 26)
!6426 = !DILocation(line: 212, column: 1, scope: !6410)
!6427 = distinct !DISubprogram(name: "uart_enable_dma", scope: !841, file: !841, line: 214, type: !6428, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !840, retainedNodes: !6430)
!6428 = !DISubroutineType(types: !6429)
!6429 = !{null, !854}
!6430 = !{!6431}
!6431 = !DILocalVariable(name: "uartx", arg: 1, scope: !6427, file: !841, line: 214, type: !854)
!6432 = !DILocation(line: 0, scope: !6427)
!6433 = !DILocation(line: 216, column: 12, scope: !6427)
!6434 = !DILocation(line: 216, column: 19, scope: !6427)
!6435 = !DILocation(line: 217, column: 1, scope: !6427)
!6436 = distinct !DISubprogram(name: "uart_interrupt_handler", scope: !841, file: !841, line: 219, type: !1136, scopeLine: 220, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !840, retainedNodes: !6437)
!6437 = !{!6438, !6439, !6440, !6441}
!6438 = !DILocalVariable(name: "irq_number", arg: 1, scope: !6436, file: !841, line: 219, type: !919)
!6439 = !DILocalVariable(name: "uart_port", scope: !6436, file: !841, line: 221, type: !753)
!6440 = !DILocalVariable(name: "type", scope: !6436, file: !841, line: 222, type: !6286)
!6441 = !DILocalVariable(name: "uartx", scope: !6436, file: !841, line: 223, type: !854)
!6442 = !DILocation(line: 0, scope: !6436)
!6443 = !DILocation(line: 225, column: 5, scope: !6436)
!6444 = !DILocation(line: 242, column: 13, scope: !6436)
!6445 = !DILocation(line: 243, column: 12, scope: !6436)
!6446 = !DILocation(line: 245, column: 5, scope: !6436)
!6447 = !DILocation(line: 248, column: 13, scope: !6448)
!6448 = distinct !DILexicalBlock(scope: !6436, file: !841, line: 245, column: 19)
!6449 = !DILocation(line: 249, column: 13, scope: !6448)
!6450 = !DILocation(line: 252, column: 13, scope: !6448)
!6451 = !DILocation(line: 253, column: 13, scope: !6448)
!6452 = !DILocation(line: 263, column: 13, scope: !6448)
!6453 = !DILocation(line: 264, column: 13, scope: !6448)
!6454 = !DILocation(line: 268, column: 13, scope: !6448)
!6455 = !DILocation(line: 269, column: 13, scope: !6448)
!6456 = !DILocation(line: 276, column: 13, scope: !6448)
!6457 = !DILocation(line: 278, column: 1, scope: !6436)
!6458 = distinct !DISubprogram(name: "i2c_set_frequency", scope: !930, file: !930, line: 74, type: !6459, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !929, retainedNodes: !6461)
!6459 = !DISubroutineType(types: !6460)
!6460 = !{null, !105, !105}
!6461 = !{!6462, !6463, !6464, !6465, !6466, !6467, !6468, !6469}
!6462 = !DILocalVariable(name: "i2c_port", arg: 1, scope: !6458, file: !930, line: 74, type: !105)
!6463 = !DILocalVariable(name: "transfer_frequency", arg: 2, scope: !6458, file: !930, line: 74, type: !105)
!6464 = !DILocalVariable(name: "frequency", scope: !6458, file: !930, line: 76, type: !105)
!6465 = !DILocalVariable(name: "step_cnt_div", scope: !6458, file: !930, line: 77, type: !105)
!6466 = !DILocalVariable(name: "sample_cnt_div", scope: !6458, file: !930, line: 78, type: !105)
!6467 = !DILocalVariable(name: "orignal_register_value", scope: !6458, file: !930, line: 79, type: !105)
!6468 = !DILocalVariable(name: "register_value", scope: !6458, file: !930, line: 79, type: !105)
!6469 = !DILocalVariable(name: "temp", scope: !6458, file: !930, line: 80, type: !105)
!6470 = !DILocation(line: 0, scope: !6458)
!6471 = !DILocation(line: 83, column: 5, scope: !6458)
!6472 = !DILocation(line: 83, column: 36, scope: !6458)
!6473 = !DILocation(line: 83, column: 46, scope: !6458)
!6474 = !DILocation(line: 84, column: 5, scope: !6458)
!6475 = !DILocation(line: 87, column: 54, scope: !6476)
!6476 = distinct !DILexicalBlock(scope: !6458, file: !930, line: 84, column: 33)
!6477 = !DILocation(line: 89, column: 13, scope: !6476)
!6478 = !DILocation(line: 95, column: 13, scope: !6476)
!6479 = !DILocation(line: 98, column: 13, scope: !6476)
!6480 = !DILocation(line: 101, column: 13, scope: !6476)
!6481 = !DILocation(line: 104, column: 13, scope: !6476)
!6482 = !DILocation(line: 109, column: 13, scope: !6476)
!6483 = !DILocation(line: 117, column: 5, scope: !6484)
!6484 = distinct !DILexicalBlock(scope: !6458, file: !930, line: 117, column: 5)
!6485 = !DILocation(line: 119, column: 31, scope: !6486)
!6486 = distinct !DILexicalBlock(scope: !6487, file: !930, line: 117, column: 69)
!6487 = distinct !DILexicalBlock(scope: !6484, file: !930, line: 117, column: 5)
!6488 = !DILocation(line: 120, column: 60, scope: !6486)
!6489 = !DILocation(line: 120, column: 67, scope: !6486)
!6490 = !DILocation(line: 120, column: 72, scope: !6486)
!6491 = !DILocation(line: 122, column: 26, scope: !6492)
!6492 = distinct !DILexicalBlock(scope: !6486, file: !930, line: 122, column: 13)
!6493 = !DILocation(line: 122, column: 13, scope: !6486)
!6494 = !DILocation(line: 117, column: 65, scope: !6487)
!6495 = !DILocation(line: 117, column: 45, scope: !6487)
!6496 = distinct !{!6496, !6483, !6497}
!6497 = !DILocation(line: 125, column: 5, scope: !6484)
!6498 = !DILocation(line: 0, scope: !6484)
!6499 = !DILocation(line: 128, column: 17, scope: !6458)
!6500 = !DILocation(line: 131, column: 62, scope: !6458)
!6501 = !DILocation(line: 131, column: 70, scope: !6458)
!6502 = !DILocation(line: 132, column: 94, scope: !6458)
!6503 = !DILocation(line: 132, column: 76, scope: !6458)
!6504 = !DILocation(line: 132, column: 157, scope: !6458)
!6505 = !DILocation(line: 132, column: 45, scope: !6458)
!6506 = !DILocation(line: 133, column: 45, scope: !6458)
!6507 = !DILocation(line: 133, column: 43, scope: !6458)
!6508 = !DILocation(line: 134, column: 1, scope: !6458)
!6509 = distinct !DISubprogram(name: "i2c_config_hardware", scope: !930, file: !930, line: 143, type: !6510, scopeLine: 144, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !929, retainedNodes: !6522)
!6510 = !DISubroutineType(types: !6511)
!6511 = !{null, !105, !6512, !127, !6513}
!6512 = !DIDerivedType(tag: DW_TAG_typedef, name: "i2c_transaction_type_t", file: !943, line: 160, baseType: !952)
!6513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6514, size: 32)
!6514 = !DIDerivedType(tag: DW_TAG_typedef, name: "i2c_transaction_size_t", file: !943, line: 176, baseType: !6515)
!6515 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !943, line: 170, size: 160, elements: !6516)
!6516 = !{!6517, !6518, !6519, !6520, !6521}
!6517 = !DIDerivedType(tag: DW_TAG_member, name: "send_size", scope: !6515, file: !943, line: 171, baseType: !105, size: 32)
!6518 = !DIDerivedType(tag: DW_TAG_member, name: "receive_size", scope: !6515, file: !943, line: 172, baseType: !105, size: 32, offset: 32)
!6519 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_length", scope: !6515, file: !943, line: 173, baseType: !105, size: 32, offset: 64)
!6520 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_length_aux", scope: !6515, file: !943, line: 174, baseType: !105, size: 32, offset: 96)
!6521 = !DIDerivedType(tag: DW_TAG_member, name: "transaction_length", scope: !6515, file: !943, line: 175, baseType: !105, size: 32, offset: 128)
!6522 = !{!6523, !6524, !6525, !6526}
!6523 = !DILocalVariable(name: "i2c_port", arg: 1, scope: !6509, file: !930, line: 143, type: !105)
!6524 = !DILocalVariable(name: "transaction_type", arg: 2, scope: !6509, file: !930, line: 143, type: !6512)
!6525 = !DILocalVariable(name: "slave_address", arg: 3, scope: !6509, file: !930, line: 143, type: !127)
!6526 = !DILocalVariable(name: "config_size", arg: 4, scope: !6509, file: !930, line: 143, type: !6513)
!6527 = !DILocation(line: 0, scope: !6509)
!6528 = !DILocation(line: 146, column: 49, scope: !6509)
!6529 = !DILocation(line: 146, column: 5, scope: !6509)
!6530 = !DILocation(line: 146, column: 36, scope: !6509)
!6531 = !DILocation(line: 146, column: 47, scope: !6509)
!6532 = !DILocation(line: 148, column: 5, scope: !6509)
!6533 = !DILocation(line: 150, column: 5, scope: !6509)
!6534 = !DILocation(line: 153, column: 5, scope: !6509)
!6535 = !DILocation(line: 0, scope: !6536)
!6536 = distinct !DILexicalBlock(scope: !6537, file: !930, line: 156, column: 17)
!6537 = distinct !DILexicalBlock(scope: !6509, file: !930, line: 153, column: 31)
!6538 = !DILocation(line: 164, column: 72, scope: !6537)
!6539 = !DILocation(line: 164, column: 59, scope: !6537)
!6540 = !DILocation(line: 164, column: 44, scope: !6537)
!6541 = !DILocation(line: 164, column: 57, scope: !6537)
!6542 = !DILocation(line: 165, column: 44, scope: !6537)
!6543 = !DILocation(line: 165, column: 56, scope: !6537)
!6544 = !DILocation(line: 167, column: 13, scope: !6537)
!6545 = !DILocation(line: 0, scope: !6546)
!6546 = distinct !DILexicalBlock(scope: !6537, file: !930, line: 170, column: 17)
!6547 = !DILocation(line: 177, column: 72, scope: !6537)
!6548 = !DILocation(line: 177, column: 59, scope: !6537)
!6549 = !DILocation(line: 177, column: 44, scope: !6537)
!6550 = !DILocation(line: 177, column: 57, scope: !6537)
!6551 = !DILocation(line: 178, column: 44, scope: !6537)
!6552 = !DILocation(line: 178, column: 56, scope: !6537)
!6553 = !DILocation(line: 180, column: 13, scope: !6537)
!6554 = !DILocation(line: 0, scope: !6555)
!6555 = distinct !DILexicalBlock(scope: !6537, file: !930, line: 183, column: 17)
!6556 = !DILocation(line: 190, column: 72, scope: !6537)
!6557 = !DILocation(line: 190, column: 59, scope: !6537)
!6558 = !DILocation(line: 190, column: 44, scope: !6537)
!6559 = !DILocation(line: 190, column: 57, scope: !6537)
!6560 = !DILocation(line: 191, column: 44, scope: !6537)
!6561 = !DILocation(line: 191, column: 56, scope: !6537)
!6562 = !DILocation(line: 193, column: 13, scope: !6537)
!6563 = !DILocation(line: 0, scope: !6564)
!6564 = distinct !DILexicalBlock(scope: !6537, file: !930, line: 196, column: 17)
!6565 = !DILocation(line: 203, column: 44, scope: !6537)
!6566 = !DILocation(line: 203, column: 57, scope: !6537)
!6567 = !DILocation(line: 204, column: 71, scope: !6537)
!6568 = !DILocation(line: 204, column: 58, scope: !6537)
!6569 = !DILocation(line: 204, column: 44, scope: !6537)
!6570 = !DILocation(line: 204, column: 56, scope: !6537)
!6571 = !DILocation(line: 206, column: 13, scope: !6537)
!6572 = !DILocation(line: 0, scope: !6573)
!6573 = distinct !DILexicalBlock(scope: !6537, file: !930, line: 209, column: 17)
!6574 = !DILocation(line: 216, column: 72, scope: !6537)
!6575 = !DILocation(line: 216, column: 59, scope: !6537)
!6576 = !DILocation(line: 216, column: 44, scope: !6537)
!6577 = !DILocation(line: 216, column: 57, scope: !6537)
!6578 = !DILocation(line: 217, column: 44, scope: !6537)
!6579 = !DILocation(line: 217, column: 56, scope: !6537)
!6580 = !DILocation(line: 218, column: 76, scope: !6537)
!6581 = !DILocation(line: 218, column: 63, scope: !6537)
!6582 = !DILocation(line: 219, column: 13, scope: !6537)
!6583 = !DILocation(line: 0, scope: !6584)
!6584 = distinct !DILexicalBlock(scope: !6537, file: !930, line: 222, column: 17)
!6585 = !DILocation(line: 229, column: 72, scope: !6537)
!6586 = !DILocation(line: 229, column: 59, scope: !6537)
!6587 = !DILocation(line: 229, column: 44, scope: !6537)
!6588 = !DILocation(line: 229, column: 57, scope: !6537)
!6589 = !DILocation(line: 230, column: 75, scope: !6537)
!6590 = !DILocation(line: 230, column: 58, scope: !6537)
!6591 = !DILocation(line: 230, column: 44, scope: !6537)
!6592 = !DILocation(line: 230, column: 56, scope: !6537)
!6593 = !DILocation(line: 232, column: 13, scope: !6537)
!6594 = !DILocation(line: 235, column: 44, scope: !6537)
!6595 = !DILocation(line: 235, column: 54, scope: !6537)
!6596 = !DILocation(line: 236, column: 44, scope: !6537)
!6597 = !DILocation(line: 236, column: 52, scope: !6537)
!6598 = !DILocation(line: 237, column: 72, scope: !6537)
!6599 = !DILocation(line: 237, column: 59, scope: !6537)
!6600 = !DILocation(line: 237, column: 44, scope: !6537)
!6601 = !DILocation(line: 237, column: 57, scope: !6537)
!6602 = !DILocation(line: 238, column: 71, scope: !6537)
!6603 = !DILocation(line: 238, column: 58, scope: !6537)
!6604 = !DILocation(line: 238, column: 44, scope: !6537)
!6605 = !DILocation(line: 238, column: 56, scope: !6537)
!6606 = !DILocation(line: 240, column: 13, scope: !6537)
!6607 = !DILocation(line: 242, column: 44, scope: !6537)
!6608 = !DILocation(line: 242, column: 54, scope: !6537)
!6609 = !DILocation(line: 243, column: 44, scope: !6537)
!6610 = !DILocation(line: 243, column: 52, scope: !6537)
!6611 = !DILocation(line: 244, column: 72, scope: !6537)
!6612 = !DILocation(line: 244, column: 59, scope: !6537)
!6613 = !DILocation(line: 244, column: 44, scope: !6537)
!6614 = !DILocation(line: 244, column: 57, scope: !6537)
!6615 = !DILocation(line: 245, column: 71, scope: !6537)
!6616 = !DILocation(line: 245, column: 58, scope: !6537)
!6617 = !DILocation(line: 245, column: 44, scope: !6537)
!6618 = !DILocation(line: 245, column: 56, scope: !6537)
!6619 = !DILocation(line: 248, column: 13, scope: !6537)
!6620 = !DILocation(line: 250, column: 44, scope: !6537)
!6621 = !DILocation(line: 250, column: 54, scope: !6537)
!6622 = !DILocation(line: 251, column: 44, scope: !6537)
!6623 = !DILocation(line: 251, column: 52, scope: !6537)
!6624 = !DILocation(line: 252, column: 72, scope: !6537)
!6625 = !DILocation(line: 252, column: 59, scope: !6537)
!6626 = !DILocation(line: 252, column: 44, scope: !6537)
!6627 = !DILocation(line: 252, column: 57, scope: !6537)
!6628 = !DILocation(line: 253, column: 71, scope: !6537)
!6629 = !DILocation(line: 253, column: 58, scope: !6537)
!6630 = !DILocation(line: 253, column: 44, scope: !6537)
!6631 = !DILocation(line: 253, column: 56, scope: !6537)
!6632 = !DILocation(line: 254, column: 76, scope: !6537)
!6633 = !DILocation(line: 254, column: 63, scope: !6537)
!6634 = !DILocation(line: 255, column: 13, scope: !6537)
!6635 = !DILocation(line: 0, scope: !6537)
!6636 = !DILocation(line: 261, column: 1, scope: !6509)
!6637 = distinct !DISubprogram(name: "i2c_write_fifo", scope: !930, file: !930, line: 266, type: !6638, scopeLine: 267, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !929, retainedNodes: !6640)
!6638 = !DISubroutineType(types: !6639)
!6639 = !{null, !105, !5647, !105}
!6640 = !{!6641, !6642, !6643, !6644}
!6641 = !DILocalVariable(name: "i2c_port", arg: 1, scope: !6637, file: !930, line: 266, type: !105)
!6642 = !DILocalVariable(name: "data", arg: 2, scope: !6637, file: !930, line: 266, type: !5647)
!6643 = !DILocalVariable(name: "size", arg: 3, scope: !6637, file: !930, line: 266, type: !105)
!6644 = !DILocalVariable(name: "i", scope: !6637, file: !930, line: 268, type: !105)
!6645 = !DILocation(line: 0, scope: !6637)
!6646 = !DILocation(line: 269, column: 19, scope: !6647)
!6647 = distinct !DILexicalBlock(scope: !6648, file: !930, line: 269, column: 5)
!6648 = distinct !DILexicalBlock(scope: !6637, file: !930, line: 269, column: 5)
!6649 = !DILocation(line: 269, column: 5, scope: !6648)
!6650 = !DILocation(line: 270, column: 59, scope: !6651)
!6651 = distinct !DILexicalBlock(scope: !6647, file: !930, line: 269, column: 32)
!6652 = !DILocation(line: 270, column: 52, scope: !6651)
!6653 = !DILocation(line: 270, column: 50, scope: !6651)
!6654 = !DILocation(line: 269, column: 28, scope: !6647)
!6655 = distinct !{!6655, !6649, !6656}
!6656 = !DILocation(line: 271, column: 5, scope: !6648)
!6657 = !DILocation(line: 272, column: 1, scope: !6637)
!6658 = distinct !DISubprogram(name: "i2c_read_fifo", scope: !930, file: !930, line: 274, type: !6659, scopeLine: 275, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !929, retainedNodes: !6661)
!6659 = !DISubroutineType(types: !6660)
!6660 = !{null, !105, !818, !105}
!6661 = !{!6662, !6663, !6664, !6665}
!6662 = !DILocalVariable(name: "i2c_port", arg: 1, scope: !6658, file: !930, line: 274, type: !105)
!6663 = !DILocalVariable(name: "buffer", arg: 2, scope: !6658, file: !930, line: 274, type: !818)
!6664 = !DILocalVariable(name: "size", arg: 3, scope: !6658, file: !930, line: 274, type: !105)
!6665 = !DILocalVariable(name: "i", scope: !6658, file: !930, line: 276, type: !105)
!6666 = !DILocation(line: 0, scope: !6658)
!6667 = !DILocation(line: 277, column: 19, scope: !6668)
!6668 = distinct !DILexicalBlock(scope: !6669, file: !930, line: 277, column: 5)
!6669 = distinct !DILexicalBlock(scope: !6658, file: !930, line: 277, column: 5)
!6670 = !DILocation(line: 277, column: 5, scope: !6669)
!6671 = !DILocation(line: 278, column: 56, scope: !6672)
!6672 = distinct !DILexicalBlock(scope: !6668, file: !930, line: 277, column: 32)
!6673 = !DILocation(line: 278, column: 25, scope: !6672)
!6674 = !DILocation(line: 278, column: 18, scope: !6672)
!6675 = !DILocation(line: 278, column: 23, scope: !6672)
!6676 = !DILocation(line: 277, column: 28, scope: !6668)
!6677 = distinct !{!6677, !6670, !6678}
!6678 = !DILocation(line: 279, column: 5, scope: !6669)
!6679 = !DILocation(line: 280, column: 1, scope: !6658)
!6680 = distinct !DISubprogram(name: "i2c_get_transaction_status", scope: !930, file: !930, line: 282, type: !6681, scopeLine: 283, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !929, retainedNodes: !6684)
!6681 = !DISubroutineType(types: !6682)
!6682 = !{!6683, !105}
!6683 = !DIDerivedType(tag: DW_TAG_typedef, name: "i2c_transaction_status_t", file: !943, line: 168, baseType: !969)
!6684 = !{!6685, !6686, !6687}
!6685 = !DILocalVariable(name: "i2c_port", arg: 1, scope: !6680, file: !930, line: 282, type: !105)
!6686 = !DILocalVariable(name: "register_value", scope: !6680, file: !930, line: 284, type: !987)
!6687 = !DILocalVariable(name: "return_status", scope: !6680, file: !930, line: 285, type: !6683)
!6688 = !DILocation(line: 0, scope: !6680)
!6689 = !DILocation(line: 287, column: 22, scope: !6680)
!6690 = !DILocation(line: 287, column: 53, scope: !6680)
!6691 = !DILocation(line: 289, column: 15, scope: !6692)
!6692 = distinct !DILexicalBlock(scope: !6680, file: !930, line: 289, column: 9)
!6693 = !DILocation(line: 289, column: 30, scope: !6692)
!6694 = !DILocation(line: 289, column: 11, scope: !6692)
!6695 = !DILocation(line: 289, column: 9, scope: !6680)
!6696 = !DILocation(line: 291, column: 37, scope: !6697)
!6697 = distinct !DILexicalBlock(scope: !6692, file: !930, line: 291, column: 16)
!6698 = !DILocation(line: 291, column: 18, scope: !6697)
!6699 = !DILocation(line: 291, column: 16, scope: !6692)
!6700 = !DILocation(line: 293, column: 37, scope: !6701)
!6701 = distinct !DILexicalBlock(scope: !6697, file: !930, line: 293, column: 16)
!6702 = !DILocation(line: 293, column: 18, scope: !6701)
!6703 = !DILocation(line: 293, column: 16, scope: !6697)
!6704 = !DILocation(line: 295, column: 20, scope: !6705)
!6705 = distinct !DILexicalBlock(scope: !6701, file: !930, line: 295, column: 16)
!6706 = !DILocation(line: 295, column: 16, scope: !6701)
!6707 = !DILocation(line: 318, column: 5, scope: !6680)
!6708 = !DILocation(line: 319, column: 5, scope: !6680)
!6709 = distinct !DISubprogram(name: "pmic_i2c_init", scope: !2953, file: !2953, line: 54, type: !6710, scopeLine: 55, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2952, retainedNodes: !6719)
!6710 = !DISubroutineType(types: !6711)
!6711 = !{!2970, !6712, !6713}
!6712 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmic_i2c_port_t", file: !2163, line: 61, baseType: !2162)
!6713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6714, size: 32)
!6714 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6715)
!6715 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmic_i2c_config_t", file: !2163, line: 92, baseType: !6716)
!6716 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2163, line: 90, size: 32, elements: !6717)
!6717 = !{!6718}
!6718 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_frequency", scope: !6716, file: !2163, line: 91, baseType: !105, size: 32)
!6719 = !{!6720, !6721}
!6720 = !DILocalVariable(name: "i2c_port", arg: 1, scope: !6709, file: !2953, line: 54, type: !6712)
!6721 = !DILocalVariable(name: "i2c_config", arg: 2, scope: !6709, file: !2953, line: 54, type: !6713)
!6722 = !DILocation(line: 0, scope: !6709)
!6723 = !DILocation(line: 57, column: 29, scope: !6724)
!6724 = distinct !DILexicalBlock(scope: !6709, file: !2953, line: 57, column: 9)
!6725 = !DILocation(line: 57, column: 9, scope: !6709)
!6726 = !DILocation(line: 62, column: 22, scope: !6709)
!6727 = !DILocation(line: 62, column: 5, scope: !6709)
!6728 = !DILocation(line: 66, column: 70, scope: !6709)
!6729 = !DILocation(line: 66, column: 5, scope: !6709)
!6730 = !DILocation(line: 69, column: 23, scope: !6709)
!6731 = !DILocation(line: 69, column: 5, scope: !6709)
!6732 = !DILocation(line: 72, column: 5, scope: !6709)
!6733 = !DILocation(line: 73, column: 1, scope: !6709)
!6734 = distinct !DISubprogram(name: "pmic_i2c_send_polling", scope: !2953, file: !2953, line: 76, type: !6735, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2952, retainedNodes: !6737)
!6735 = !DISubroutineType(types: !6736)
!6736 = !{!2970, !6712, !127, !5647, !105}
!6737 = !{!6738, !6739, !6740, !6741, !6742, !6743}
!6738 = !DILocalVariable(name: "i2c_port", arg: 1, scope: !6734, file: !2953, line: 76, type: !6712)
!6739 = !DILocalVariable(name: "slave_address", arg: 2, scope: !6734, file: !2953, line: 76, type: !127)
!6740 = !DILocalVariable(name: "data", arg: 3, scope: !6734, file: !2953, line: 76, type: !5647)
!6741 = !DILocalVariable(name: "size", arg: 4, scope: !6734, file: !2953, line: 76, type: !105)
!6742 = !DILocalVariable(name: "transaction_status", scope: !6734, file: !2953, line: 78, type: !6683)
!6743 = !DILocalVariable(name: "config_size", scope: !6734, file: !2953, line: 79, type: !6744)
!6744 = !DIDerivedType(tag: DW_TAG_typedef, name: "i2c_transaction_size_t", file: !943, line: 176, baseType: !6745)
!6745 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !943, line: 170, size: 160, elements: !6746)
!6746 = !{!6747, !6748, !6749, !6750, !6751}
!6747 = !DIDerivedType(tag: DW_TAG_member, name: "send_size", scope: !6745, file: !943, line: 171, baseType: !105, size: 32)
!6748 = !DIDerivedType(tag: DW_TAG_member, name: "receive_size", scope: !6745, file: !943, line: 172, baseType: !105, size: 32, offset: 32)
!6749 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_length", scope: !6745, file: !943, line: 173, baseType: !105, size: 32, offset: 64)
!6750 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_length_aux", scope: !6745, file: !943, line: 174, baseType: !105, size: 32, offset: 96)
!6751 = !DIDerivedType(tag: DW_TAG_member, name: "transaction_length", scope: !6745, file: !943, line: 175, baseType: !105, size: 32, offset: 128)
!6752 = !DILocation(line: 0, scope: !6734)
!6753 = !DILocation(line: 79, column: 5, scope: !6734)
!6754 = !DILocation(line: 79, column: 28, scope: !6734)
!6755 = !DILocation(line: 81, column: 29, scope: !6756)
!6756 = distinct !DILexicalBlock(scope: !6734, file: !2953, line: 81, column: 9)
!6757 = !DILocation(line: 81, column: 9, scope: !6734)
!6758 = !DILocation(line: 84, column: 14, scope: !6759)
!6759 = distinct !DILexicalBlock(scope: !6734, file: !2953, line: 84, column: 9)
!6760 = !DILocation(line: 84, column: 22, scope: !6759)
!6761 = !DILocation(line: 89, column: 22, scope: !6734)
!6762 = !DILocation(line: 89, column: 5, scope: !6734)
!6763 = !DILocation(line: 93, column: 5, scope: !6734)
!6764 = !DILocation(line: 96, column: 17, scope: !6734)
!6765 = !DILocation(line: 96, column: 27, scope: !6734)
!6766 = !DILocation(line: 97, column: 17, scope: !6734)
!6767 = !DILocation(line: 97, column: 30, scope: !6734)
!6768 = !DILocation(line: 104, column: 100, scope: !6734)
!6769 = !DILocation(line: 104, column: 5, scope: !6734)
!6770 = !DILocation(line: 108, column: 5, scope: !6734)
!6771 = !DILocation(line: 111, column: 5, scope: !6734)
!6772 = !DILocation(line: 114, column: 5, scope: !6734)
!6773 = !DILocation(line: 114, column: 17, scope: !6734)
!6774 = !DILocation(line: 114, column: 14, scope: !6734)
!6775 = distinct !{!6775, !6772, !6776}
!6776 = !DILocation(line: 115, column: 5, scope: !6734)
!6777 = !DILocation(line: 118, column: 26, scope: !6734)
!6778 = !DILocation(line: 121, column: 23, scope: !6734)
!6779 = !DILocation(line: 121, column: 5, scope: !6734)
!6780 = !DILocation(line: 124, column: 33, scope: !6781)
!6781 = distinct !DILexicalBlock(scope: !6734, file: !2953, line: 124, column: 9)
!6782 = !DILocation(line: 124, column: 9, scope: !6734)
!6783 = !DILocation(line: 126, column: 9, scope: !6784)
!6784 = distinct !DILexicalBlock(scope: !6781, file: !2953, line: 124, column: 56)
!6785 = !DILocation(line: 127, column: 9, scope: !6784)
!6786 = !DILocation(line: 131, column: 1, scope: !6734)
!6787 = distinct !DISubprogram(name: "pmic_i2c_receive_polling", scope: !2953, file: !2953, line: 134, type: !6788, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2952, retainedNodes: !6790)
!6788 = !DISubroutineType(types: !6789)
!6789 = !{!2970, !6712, !127, !818, !105}
!6790 = !{!6791, !6792, !6793, !6794, !6795, !6796}
!6791 = !DILocalVariable(name: "i2c_port", arg: 1, scope: !6787, file: !2953, line: 134, type: !6712)
!6792 = !DILocalVariable(name: "slave_address", arg: 2, scope: !6787, file: !2953, line: 134, type: !127)
!6793 = !DILocalVariable(name: "buffer", arg: 3, scope: !6787, file: !2953, line: 134, type: !818)
!6794 = !DILocalVariable(name: "size", arg: 4, scope: !6787, file: !2953, line: 134, type: !105)
!6795 = !DILocalVariable(name: "transaction_status", scope: !6787, file: !2953, line: 136, type: !6683)
!6796 = !DILocalVariable(name: "config_size", scope: !6787, file: !2953, line: 137, type: !6744)
!6797 = !DILocation(line: 0, scope: !6787)
!6798 = !DILocation(line: 137, column: 5, scope: !6787)
!6799 = !DILocation(line: 137, column: 28, scope: !6787)
!6800 = !DILocation(line: 139, column: 29, scope: !6801)
!6801 = distinct !DILexicalBlock(scope: !6787, file: !2953, line: 139, column: 9)
!6802 = !DILocation(line: 139, column: 9, scope: !6787)
!6803 = !DILocation(line: 142, column: 14, scope: !6804)
!6804 = distinct !DILexicalBlock(scope: !6787, file: !2953, line: 142, column: 9)
!6805 = !DILocation(line: 142, column: 24, scope: !6804)
!6806 = !DILocation(line: 147, column: 22, scope: !6787)
!6807 = !DILocation(line: 147, column: 5, scope: !6787)
!6808 = !DILocation(line: 151, column: 5, scope: !6787)
!6809 = !DILocation(line: 154, column: 17, scope: !6787)
!6810 = !DILocation(line: 154, column: 27, scope: !6787)
!6811 = !DILocation(line: 155, column: 17, scope: !6787)
!6812 = !DILocation(line: 155, column: 30, scope: !6787)
!6813 = !DILocation(line: 162, column: 103, scope: !6787)
!6814 = !DILocation(line: 162, column: 5, scope: !6787)
!6815 = !DILocation(line: 165, column: 5, scope: !6787)
!6816 = !DILocation(line: 168, column: 5, scope: !6787)
!6817 = !DILocation(line: 168, column: 17, scope: !6787)
!6818 = !DILocation(line: 168, column: 14, scope: !6787)
!6819 = distinct !{!6819, !6816, !6820}
!6820 = !DILocation(line: 169, column: 5, scope: !6787)
!6821 = !DILocation(line: 172, column: 26, scope: !6787)
!6822 = !DILocation(line: 175, column: 33, scope: !6823)
!6823 = distinct !DILexicalBlock(scope: !6787, file: !2953, line: 175, column: 9)
!6824 = !DILocation(line: 175, column: 9, scope: !6787)
!6825 = !DILocation(line: 183, column: 9, scope: !6826)
!6826 = distinct !DILexicalBlock(scope: !6823, file: !2953, line: 182, column: 12)
!6827 = !DILocation(line: 189, column: 9, scope: !6826)
!6828 = !DILocation(line: 0, scope: !6823)
!6829 = !DILocation(line: 191, column: 1, scope: !6787)
!6830 = distinct !DISubprogram(name: "pmic_i2c_send_to_receive_polling", scope: !2953, file: !2953, line: 194, type: !6831, scopeLine: 195, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2952, retainedNodes: !6842)
!6831 = !DISubroutineType(types: !6832)
!6832 = !{!2970, !6712, !6833}
!6833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6834, size: 32)
!6834 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmic_i2c_send_to_receive_config_t", file: !2163, line: 100, baseType: !6835)
!6835 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2163, line: 94, size: 160, elements: !6836)
!6836 = !{!6837, !6838, !6839, !6840, !6841}
!6837 = !DIDerivedType(tag: DW_TAG_member, name: "slave_address", scope: !6835, file: !2163, line: 95, baseType: !127, size: 8)
!6838 = !DIDerivedType(tag: DW_TAG_member, name: "send_data", scope: !6835, file: !2163, line: 96, baseType: !5647, size: 32, offset: 32)
!6839 = !DIDerivedType(tag: DW_TAG_member, name: "send_length", scope: !6835, file: !2163, line: 97, baseType: !105, size: 32, offset: 64)
!6840 = !DIDerivedType(tag: DW_TAG_member, name: "receive_buffer", scope: !6835, file: !2163, line: 98, baseType: !818, size: 32, offset: 96)
!6841 = !DIDerivedType(tag: DW_TAG_member, name: "receive_length", scope: !6835, file: !2163, line: 99, baseType: !105, size: 32, offset: 128)
!6842 = !{!6843, !6844, !6845, !6846}
!6843 = !DILocalVariable(name: "i2c_port", arg: 1, scope: !6830, file: !2953, line: 194, type: !6712)
!6844 = !DILocalVariable(name: "i2c_send_to_receive_config", arg: 2, scope: !6830, file: !2953, line: 194, type: !6833)
!6845 = !DILocalVariable(name: "transaction_status", scope: !6830, file: !2953, line: 196, type: !6683)
!6846 = !DILocalVariable(name: "config_size", scope: !6830, file: !2953, line: 197, type: !6744)
!6847 = !DILocation(line: 0, scope: !6830)
!6848 = !DILocation(line: 197, column: 5, scope: !6830)
!6849 = !DILocation(line: 197, column: 28, scope: !6830)
!6850 = !DILocation(line: 198, column: 29, scope: !6851)
!6851 = distinct !DILexicalBlock(scope: !6830, file: !2953, line: 198, column: 9)
!6852 = !DILocation(line: 198, column: 9, scope: !6830)
!6853 = !DILocation(line: 201, column: 45, scope: !6854)
!6854 = distinct !DILexicalBlock(scope: !6830, file: !2953, line: 201, column: 9)
!6855 = !DILocation(line: 201, column: 14, scope: !6854)
!6856 = !DILocation(line: 201, column: 55, scope: !6854)
!6857 = !DILocation(line: 201, column: 94, scope: !6854)
!6858 = !DILocation(line: 201, column: 63, scope: !6854)
!6859 = !DILocation(line: 201, column: 9, scope: !6830)
!6860 = !DILocation(line: 204, column: 37, scope: !6861)
!6861 = distinct !DILexicalBlock(scope: !6830, file: !2953, line: 204, column: 9)
!6862 = !DILocation(line: 204, column: 49, scope: !6861)
!6863 = !DILocation(line: 204, column: 66, scope: !6861)
!6864 = !DILocation(line: 204, column: 97, scope: !6861)
!6865 = !DILocation(line: 204, column: 112, scope: !6861)
!6866 = !DILocation(line: 204, column: 9, scope: !6830)
!6867 = !DILocation(line: 209, column: 22, scope: !6830)
!6868 = !DILocation(line: 209, column: 5, scope: !6830)
!6869 = !DILocation(line: 212, column: 5, scope: !6830)
!6870 = !DILocation(line: 213, column: 57, scope: !6830)
!6871 = !DILocation(line: 213, column: 17, scope: !6830)
!6872 = !DILocation(line: 213, column: 27, scope: !6830)
!6873 = !DILocation(line: 214, column: 60, scope: !6830)
!6874 = !DILocation(line: 214, column: 17, scope: !6830)
!6875 = !DILocation(line: 214, column: 30, scope: !6830)
!6876 = !DILocation(line: 218, column: 111, scope: !6830)
!6877 = !DILocation(line: 218, column: 5, scope: !6830)
!6878 = !DILocation(line: 220, column: 83, scope: !6830)
!6879 = !DILocation(line: 220, column: 122, scope: !6830)
!6880 = !DILocation(line: 220, column: 5, scope: !6830)
!6881 = !DILocation(line: 221, column: 5, scope: !6830)
!6882 = !DILocation(line: 222, column: 5, scope: !6830)
!6883 = !DILocation(line: 222, column: 17, scope: !6830)
!6884 = !DILocation(line: 222, column: 14, scope: !6830)
!6885 = distinct !{!6885, !6882, !6886}
!6886 = !DILocation(line: 223, column: 5, scope: !6830)
!6887 = !DILocation(line: 224, column: 26, scope: !6830)
!6888 = !DILocation(line: 225, column: 33, scope: !6889)
!6889 = distinct !DILexicalBlock(scope: !6830, file: !2953, line: 225, column: 9)
!6890 = !DILocation(line: 225, column: 9, scope: !6830)
!6891 = !DILocation(line: 227, column: 9, scope: !6892)
!6892 = distinct !DILexicalBlock(scope: !6889, file: !2953, line: 225, column: 56)
!6893 = !DILocation(line: 233, column: 9, scope: !6892)
!6894 = !DILocation(line: 235, column: 86, scope: !6895)
!6895 = distinct !DILexicalBlock(scope: !6889, file: !2953, line: 234, column: 12)
!6896 = !DILocation(line: 235, column: 130, scope: !6895)
!6897 = !DILocation(line: 235, column: 9, scope: !6895)
!6898 = !DILocation(line: 241, column: 9, scope: !6895)
!6899 = !DILocation(line: 0, scope: !6889)
!6900 = !DILocation(line: 243, column: 1, scope: !6830)
!6901 = !DILocation(line: 131, column: 9, scope: !6902)
!6902 = distinct !DILexicalBlock(scope: !1053, file: !1054, line: 131, column: 9)
!6903 = !DILocation(line: 131, column: 9, scope: !1053)
!6904 = !DILocation(line: 0, scope: !1053)
!6905 = !DILocation(line: 134, column: 49, scope: !6906)
!6906 = distinct !DILexicalBlock(scope: !6907, file: !1054, line: 133, column: 46)
!6907 = distinct !DILexicalBlock(scope: !6908, file: !1054, line: 133, column: 9)
!6908 = distinct !DILexicalBlock(scope: !6909, file: !1054, line: 133, column: 9)
!6909 = distinct !DILexicalBlock(scope: !6902, file: !1054, line: 131, column: 28)
!6910 = !DILocation(line: 134, column: 13, scope: !6906)
!6911 = !DILocation(line: 133, column: 42, scope: !6907)
!6912 = !DILocation(line: 133, column: 23, scope: !6907)
!6913 = !DILocation(line: 133, column: 9, scope: !6908)
!6914 = distinct !{!6914, !6913, !6915}
!6915 = !DILocation(line: 135, column: 9, scope: !6908)
!6916 = !DILocation(line: 136, column: 22, scope: !6909)
!6917 = !DILocation(line: 137, column: 5, scope: !6909)
!6918 = !DILocation(line: 138, column: 5, scope: !1053)
!6919 = distinct !DISubprogram(name: "NVIC_SetPriority", scope: !1063, file: !1063, line: 1577, type: !6920, scopeLine: 1578, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1058, retainedNodes: !6922)
!6920 = !DISubroutineType(types: !6921)
!6921 = !{null, !920, !105}
!6922 = !{!6923, !6924}
!6923 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6919, file: !1063, line: 1577, type: !920)
!6924 = !DILocalVariable(name: "priority", arg: 2, scope: !6919, file: !1063, line: 1577, type: !105)
!6925 = !DILocation(line: 0, scope: !6919)
!6926 = !DILocation(line: 1582, column: 34, scope: !6927)
!6927 = distinct !DILexicalBlock(scope: !6928, file: !1063, line: 1581, column: 8)
!6928 = distinct !DILexicalBlock(scope: !6919, file: !1063, line: 1579, column: 6)
!6929 = !DILocation(line: 1582, column: 5, scope: !6927)
!6930 = !DILocation(line: 1582, column: 32, scope: !6927)
!6931 = !DILocation(line: 1583, column: 1, scope: !6919)
!6932 = distinct !DISubprogram(name: "hal_nvic_enable_irq", scope: !1054, file: !1054, line: 141, type: !6933, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1058, retainedNodes: !6935)
!6933 = !DISubroutineType(types: !6934)
!6934 = !{!1057, !919}
!6935 = !{!6936, !6937}
!6936 = !DILocalVariable(name: "irq_number", arg: 1, scope: !6932, file: !1054, line: 141, type: !919)
!6937 = !DILocalVariable(name: "status", scope: !6932, file: !1054, line: 143, type: !1057)
!6938 = !DILocation(line: 0, scope: !6932)
!6939 = !DILocation(line: 145, column: 40, scope: !6940)
!6940 = distinct !DILexicalBlock(scope: !6932, file: !1054, line: 145, column: 9)
!6941 = !DILocation(line: 149, column: 9, scope: !6942)
!6942 = distinct !DILexicalBlock(scope: !6940, file: !1054, line: 148, column: 12)
!6943 = !DILocation(line: 153, column: 5, scope: !6932)
!6944 = !DILocation(line: 154, column: 1, scope: !6932)
!6945 = distinct !DISubprogram(name: "NVIC_EnableIRQ", scope: !1063, file: !1063, line: 1494, type: !6946, scopeLine: 1495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1058, retainedNodes: !6948)
!6946 = !DISubroutineType(types: !6947)
!6947 = !{null, !920}
!6948 = !{!6949}
!6949 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6945, file: !1063, line: 1494, type: !920)
!6950 = !DILocation(line: 0, scope: !6945)
!6951 = !DILocation(line: 1497, column: 91, scope: !6945)
!6952 = !DILocation(line: 1497, column: 61, scope: !6945)
!6953 = !DILocation(line: 1497, column: 40, scope: !6945)
!6954 = !DILocation(line: 1497, column: 3, scope: !6945)
!6955 = !DILocation(line: 1497, column: 46, scope: !6945)
!6956 = !DILocation(line: 1498, column: 1, scope: !6945)
!6957 = distinct !DISubprogram(name: "hal_nvic_disable_irq", scope: !1054, file: !1054, line: 156, type: !6933, scopeLine: 157, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1058, retainedNodes: !6958)
!6958 = !{!6959, !6960}
!6959 = !DILocalVariable(name: "irq_number", arg: 1, scope: !6957, file: !1054, line: 156, type: !919)
!6960 = !DILocalVariable(name: "status", scope: !6957, file: !1054, line: 158, type: !1057)
!6961 = !DILocation(line: 0, scope: !6957)
!6962 = !DILocation(line: 160, column: 40, scope: !6963)
!6963 = distinct !DILexicalBlock(scope: !6957, file: !1054, line: 160, column: 9)
!6964 = !DILocation(line: 164, column: 9, scope: !6965)
!6965 = distinct !DILexicalBlock(scope: !6963, file: !1054, line: 163, column: 12)
!6966 = !DILocation(line: 168, column: 5, scope: !6957)
!6967 = !DILocation(line: 169, column: 1, scope: !6957)
!6968 = distinct !DISubprogram(name: "NVIC_DisableIRQ", scope: !1063, file: !1063, line: 1507, type: !6946, scopeLine: 1508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1058, retainedNodes: !6969)
!6969 = !{!6970}
!6970 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6968, file: !1063, line: 1507, type: !920)
!6971 = !DILocation(line: 0, scope: !6968)
!6972 = !DILocation(line: 1509, column: 65, scope: !6968)
!6973 = !DILocation(line: 1509, column: 44, scope: !6968)
!6974 = !DILocation(line: 1509, column: 32, scope: !6968)
!6975 = !DILocation(line: 1509, column: 3, scope: !6968)
!6976 = !DILocation(line: 1509, column: 39, scope: !6968)
!6977 = !DILocation(line: 1510, column: 1, scope: !6968)
!6978 = distinct !DISubprogram(name: "hal_nvic_get_pending_irq", scope: !1054, file: !1054, line: 171, type: !6979, scopeLine: 172, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1058, retainedNodes: !6981)
!6979 = !DISubroutineType(types: !6980)
!6980 = !{!105, !919}
!6981 = !{!6982, !6983}
!6982 = !DILocalVariable(name: "irq_number", arg: 1, scope: !6978, file: !1054, line: 171, type: !919)
!6983 = !DILocalVariable(name: "ret", scope: !6978, file: !1054, line: 173, type: !105)
!6984 = !DILocation(line: 0, scope: !6978)
!6985 = !DILocation(line: 175, column: 40, scope: !6986)
!6986 = distinct !DILexicalBlock(scope: !6978, file: !1054, line: 175, column: 9)
!6987 = !DILocation(line: 178, column: 15, scope: !6988)
!6988 = distinct !DILexicalBlock(scope: !6986, file: !1054, line: 177, column: 12)
!6989 = !DILocation(line: 181, column: 5, scope: !6978)
!6990 = !DILocation(line: 182, column: 1, scope: !6978)
!6991 = distinct !DISubprogram(name: "NVIC_GetPendingIRQ", scope: !1063, file: !1063, line: 1523, type: !6992, scopeLine: 1524, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1058, retainedNodes: !6994)
!6992 = !DISubroutineType(types: !6993)
!6993 = !{!105, !920}
!6994 = !{!6995}
!6995 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6991, file: !1063, line: 1523, type: !920)
!6996 = !DILocation(line: 0, scope: !6991)
!6997 = !DILocation(line: 1525, column: 51, scope: !6991)
!6998 = !DILocation(line: 1525, column: 23, scope: !6991)
!6999 = !DILocation(line: 1525, column: 83, scope: !6991)
!7000 = !DILocation(line: 1525, column: 22, scope: !6991)
!7001 = !DILocation(line: 1525, column: 3, scope: !6991)
!7002 = distinct !DISubprogram(name: "hal_nvic_set_pending_irq", scope: !1054, file: !1054, line: 184, type: !6933, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1058, retainedNodes: !7003)
!7003 = !{!7004, !7005}
!7004 = !DILocalVariable(name: "irq_number", arg: 1, scope: !7002, file: !1054, line: 184, type: !919)
!7005 = !DILocalVariable(name: "status", scope: !7002, file: !1054, line: 186, type: !1057)
!7006 = !DILocation(line: 0, scope: !7002)
!7007 = !DILocation(line: 188, column: 40, scope: !7008)
!7008 = distinct !DILexicalBlock(scope: !7002, file: !1054, line: 188, column: 9)
!7009 = !DILocation(line: 192, column: 9, scope: !7010)
!7010 = distinct !DILexicalBlock(scope: !7008, file: !1054, line: 191, column: 12)
!7011 = !DILocation(line: 196, column: 5, scope: !7002)
!7012 = !DILocation(line: 197, column: 1, scope: !7002)
!7013 = distinct !DISubprogram(name: "NVIC_SetPendingIRQ", scope: !1063, file: !1063, line: 1535, type: !6946, scopeLine: 1536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1058, retainedNodes: !7014)
!7014 = !{!7015}
!7015 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7013, file: !1063, line: 1535, type: !920)
!7016 = !DILocation(line: 0, scope: !7013)
!7017 = !DILocation(line: 1537, column: 65, scope: !7013)
!7018 = !DILocation(line: 1537, column: 44, scope: !7013)
!7019 = !DILocation(line: 1537, column: 32, scope: !7013)
!7020 = !DILocation(line: 1537, column: 3, scope: !7013)
!7021 = !DILocation(line: 1537, column: 39, scope: !7013)
!7022 = !DILocation(line: 1538, column: 1, scope: !7013)
!7023 = distinct !DISubprogram(name: "hal_nvic_clear_pending_irq", scope: !1054, file: !1054, line: 199, type: !6933, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1058, retainedNodes: !7024)
!7024 = !{!7025, !7026}
!7025 = !DILocalVariable(name: "irq_number", arg: 1, scope: !7023, file: !1054, line: 199, type: !919)
!7026 = !DILocalVariable(name: "status", scope: !7023, file: !1054, line: 201, type: !1057)
!7027 = !DILocation(line: 0, scope: !7023)
!7028 = !DILocation(line: 203, column: 40, scope: !7029)
!7029 = distinct !DILexicalBlock(scope: !7023, file: !1054, line: 203, column: 9)
!7030 = !DILocation(line: 207, column: 9, scope: !7031)
!7031 = distinct !DILexicalBlock(scope: !7029, file: !1054, line: 206, column: 12)
!7032 = !DILocation(line: 211, column: 5, scope: !7023)
!7033 = !DILocation(line: 212, column: 1, scope: !7023)
!7034 = distinct !DISubprogram(name: "NVIC_ClearPendingIRQ", scope: !1063, file: !1063, line: 1547, type: !6946, scopeLine: 1548, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1058, retainedNodes: !7035)
!7035 = !{!7036}
!7036 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7034, file: !1063, line: 1547, type: !920)
!7037 = !DILocation(line: 0, scope: !7034)
!7038 = !DILocation(line: 1549, column: 65, scope: !7034)
!7039 = !DILocation(line: 1549, column: 44, scope: !7034)
!7040 = !DILocation(line: 1549, column: 32, scope: !7034)
!7041 = !DILocation(line: 1549, column: 3, scope: !7034)
!7042 = !DILocation(line: 1549, column: 39, scope: !7034)
!7043 = !DILocation(line: 1550, column: 1, scope: !7034)
!7044 = distinct !DISubprogram(name: "hal_nvic_set_priority", scope: !1054, file: !1054, line: 214, type: !7045, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1058, retainedNodes: !7047)
!7045 = !DISubroutineType(types: !7046)
!7046 = !{!1057, !919, !105}
!7047 = !{!7048, !7049, !7050}
!7048 = !DILocalVariable(name: "irq_number", arg: 1, scope: !7044, file: !1054, line: 214, type: !919)
!7049 = !DILocalVariable(name: "priority", arg: 2, scope: !7044, file: !1054, line: 214, type: !105)
!7050 = !DILocalVariable(name: "status", scope: !7044, file: !1054, line: 216, type: !1057)
!7051 = !DILocation(line: 0, scope: !7044)
!7052 = !DILocation(line: 218, column: 40, scope: !7053)
!7053 = distinct !DILexicalBlock(scope: !7044, file: !1054, line: 218, column: 9)
!7054 = !DILocation(line: 222, column: 9, scope: !7055)
!7055 = distinct !DILexicalBlock(scope: !7053, file: !1054, line: 221, column: 12)
!7056 = !DILocation(line: 226, column: 5, scope: !7044)
!7057 = !DILocation(line: 227, column: 1, scope: !7044)
!7058 = distinct !DISubprogram(name: "hal_nvic_get_priority", scope: !1054, file: !1054, line: 229, type: !6979, scopeLine: 230, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1058, retainedNodes: !7059)
!7059 = !{!7060, !7061}
!7060 = !DILocalVariable(name: "irq_number", arg: 1, scope: !7058, file: !1054, line: 229, type: !919)
!7061 = !DILocalVariable(name: "ret", scope: !7058, file: !1054, line: 231, type: !105)
!7062 = !DILocation(line: 0, scope: !7058)
!7063 = !DILocation(line: 233, column: 40, scope: !7064)
!7064 = distinct !DILexicalBlock(scope: !7058, file: !1054, line: 233, column: 9)
!7065 = !DILocation(line: 236, column: 15, scope: !7066)
!7066 = distinct !DILexicalBlock(scope: !7064, file: !1054, line: 235, column: 12)
!7067 = !DILocation(line: 239, column: 5, scope: !7058)
!7068 = !DILocation(line: 240, column: 1, scope: !7058)
!7069 = distinct !DISubprogram(name: "NVIC_GetPriority", scope: !1063, file: !1063, line: 1597, type: !6992, scopeLine: 1598, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1058, retainedNodes: !7070)
!7070 = !{!7071}
!7071 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7069, file: !1063, line: 1597, type: !920)
!7072 = !DILocation(line: 0, scope: !7069)
!7073 = !DILocation(line: 1603, column: 23, scope: !7074)
!7074 = distinct !DILexicalBlock(scope: !7075, file: !1063, line: 1602, column: 8)
!7075 = distinct !DILexicalBlock(scope: !7069, file: !1063, line: 1600, column: 6)
!7076 = !DILocation(line: 1603, column: 60, scope: !7074)
!7077 = !DILocation(line: 1604, column: 1, scope: !7069)
!7078 = distinct !DISubprogram(name: "isrC_main", scope: !1054, file: !1054, line: 248, type: !1055, scopeLine: 249, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1058, retainedNodes: !7079)
!7079 = !{!7080, !7081}
!7080 = !DILocalVariable(name: "status", scope: !7078, file: !1054, line: 250, type: !1057)
!7081 = !DILocalVariable(name: "irq_number", scope: !7078, file: !1054, line: 251, type: !919)
!7082 = !DILocation(line: 0, scope: !7078)
!7083 = !DILocation(line: 253, column: 5, scope: !7078)
!7084 = !DILocation(line: 255, column: 35, scope: !7078)
!7085 = !DILocation(line: 256, column: 40, scope: !7086)
!7086 = distinct !DILexicalBlock(scope: !7078, file: !1054, line: 256, column: 9)
!7087 = !DILocation(line: 259, column: 48, scope: !7088)
!7088 = distinct !DILexicalBlock(scope: !7086, file: !1054, line: 259, column: 16)
!7089 = !DILocation(line: 259, column: 62, scope: !7088)
!7090 = !DILocation(line: 259, column: 16, scope: !7086)
!7091 = !DILocation(line: 261, column: 9, scope: !7092)
!7092 = distinct !DILexicalBlock(scope: !7088, file: !1054, line: 259, column: 71)
!7093 = !DILocation(line: 262, column: 9, scope: !7092)
!7094 = !DILocation(line: 264, column: 55, scope: !7095)
!7095 = distinct !DILexicalBlock(scope: !7088, file: !1054, line: 263, column: 12)
!7096 = !DILocation(line: 264, column: 41, scope: !7095)
!7097 = !DILocation(line: 264, column: 53, scope: !7095)
!7098 = !DILocation(line: 265, column: 41, scope: !7095)
!7099 = !DILocation(line: 265, column: 9, scope: !7095)
!7100 = !DILocation(line: 269, column: 5, scope: !7078)
!7101 = !DILocation(line: 270, column: 1, scope: !7078)
!7102 = distinct !DISubprogram(name: "get_current_irq", scope: !1054, file: !1054, line: 242, type: !4034, scopeLine: 243, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1058, retainedNodes: !7103)
!7103 = !{!7104}
!7104 = !DILocalVariable(name: "irq_num", scope: !7102, file: !1054, line: 244, type: !105)
!7105 = !DILocation(line: 244, column: 31, scope: !7102)
!7106 = !DILocation(line: 244, column: 36, scope: !7102)
!7107 = !DILocation(line: 0, scope: !7102)
!7108 = !DILocation(line: 245, column: 21, scope: !7102)
!7109 = !DILocation(line: 245, column: 5, scope: !7102)
!7110 = distinct !DISubprogram(name: "get_pending_irq", scope: !1054, file: !1054, line: 121, type: !4034, scopeLine: 122, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1058, retainedNodes: !320)
!7111 = !DILocation(line: 123, column: 19, scope: !7110)
!7112 = !DILocation(line: 123, column: 51, scope: !7110)
!7113 = !DILocation(line: 123, column: 5, scope: !7110)
!7114 = distinct !DISubprogram(name: "hal_nvic_register_isr_handler", scope: !1054, file: !1054, line: 272, type: !7115, scopeLine: 273, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1058, retainedNodes: !7118)
!7115 = !DISubroutineType(types: !7116)
!7116 = !{!1057, !919, !7117}
!7117 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_nvic_isr_t", file: !733, line: 175, baseType: !1135)
!7118 = !{!7119, !7120, !7121}
!7119 = !DILocalVariable(name: "irq_number", arg: 1, scope: !7114, file: !1054, line: 272, type: !919)
!7120 = !DILocalVariable(name: "callback", arg: 2, scope: !7114, file: !1054, line: 272, type: !7117)
!7121 = !DILocalVariable(name: "mask", scope: !7114, file: !1054, line: 274, type: !105)
!7122 = !DILocation(line: 0, scope: !7114)
!7123 = !DILocation(line: 276, column: 40, scope: !7124)
!7124 = distinct !DILexicalBlock(scope: !7114, file: !1054, line: 276, column: 9)
!7125 = !DILocation(line: 280, column: 12, scope: !7114)
!7126 = !DILocation(line: 281, column: 5, scope: !7114)
!7127 = !DILocation(line: 282, column: 37, scope: !7114)
!7128 = !DILocation(line: 282, column: 51, scope: !7114)
!7129 = !DILocation(line: 283, column: 37, scope: !7114)
!7130 = !DILocation(line: 283, column: 49, scope: !7114)
!7131 = !DILocation(line: 284, column: 5, scope: !7114)
!7132 = !DILocation(line: 286, column: 5, scope: !7114)
!7133 = !DILocation(line: 287, column: 1, scope: !7114)
!7134 = distinct !DISubprogram(name: "hal_nvic_save_and_set_interrupt_mask", scope: !1054, file: !1054, line: 289, type: !7135, scopeLine: 290, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1058, retainedNodes: !7137)
!7135 = !DISubroutineType(types: !7136)
!7136 = !{!1057, !1186}
!7137 = !{!7138}
!7138 = !DILocalVariable(name: "mask", arg: 1, scope: !7134, file: !1054, line: 289, type: !1186)
!7139 = !DILocation(line: 0, scope: !7134)
!7140 = !DILocation(line: 291, column: 13, scope: !7134)
!7141 = !DILocation(line: 291, column: 11, scope: !7134)
!7142 = !DILocation(line: 292, column: 5, scope: !7134)
!7143 = distinct !DISubprogram(name: "hal_nvic_restore_interrupt_mask", scope: !1054, file: !1054, line: 295, type: !7144, scopeLine: 296, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1058, retainedNodes: !7146)
!7144 = !DISubroutineType(types: !7145)
!7145 = !{!1057, !105}
!7146 = !{!7147}
!7147 = !DILocalVariable(name: "mask", arg: 1, scope: !7143, file: !1054, line: 295, type: !105)
!7148 = !DILocation(line: 0, scope: !7143)
!7149 = !DILocation(line: 297, column: 5, scope: !7143)
!7150 = !DILocation(line: 298, column: 5, scope: !7143)
!7151 = distinct !DISubprogram(name: "save_and_set_interrupt_mask", scope: !2972, file: !2972, line: 51, type: !4034, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2971, retainedNodes: !7152)
!7152 = !{!7153, !7154}
!7153 = !DILocalVariable(name: "mask", scope: !7151, file: !2972, line: 53, type: !105)
!7154 = !DILocalVariable(name: "priority", scope: !7151, file: !2972, line: 55, type: !105)
!7155 = !DILocation(line: 521, column: 3, scope: !7156, inlinedAt: !7160)
!7156 = distinct !DISubprogram(name: "__get_BASEPRI", scope: !7157, file: !7157, line: 517, type: !4034, scopeLine: 518, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2971, retainedNodes: !7158)
!7157 = !DIFile(filename: "../../../../../driver/CMSIS/Include/core_cmFunc.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/dac_output_data_repeatedly/GCC")
!7158 = !{!7159}
!7159 = !DILocalVariable(name: "result", scope: !7156, file: !7157, line: 519, type: !105)
!7160 = distinct !DILocation(line: 53, column: 21, scope: !7151)
!7161 = !{i64 457570}
!7162 = !DILocation(line: 0, scope: !7156, inlinedAt: !7160)
!7163 = !DILocation(line: 0, scope: !7151)
!7164 = !DILocalVariable(name: "value", arg: 1, scope: !7165, file: !7157, line: 532, type: !105)
!7165 = distinct !DISubprogram(name: "__set_BASEPRI", scope: !7157, file: !7157, line: 532, type: !7166, scopeLine: 533, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2971, retainedNodes: !7168)
!7166 = !DISubroutineType(types: !7167)
!7167 = !{null, !105}
!7168 = !{!7164}
!7169 = !DILocation(line: 0, scope: !7165, inlinedAt: !7170)
!7170 = distinct !DILocation(line: 56, column: 5, scope: !7151)
!7171 = !DILocation(line: 534, column: 3, scope: !7165, inlinedAt: !7170)
!7172 = !{i64 457903}
!7173 = !DILocation(line: 456, column: 3, scope: !7174, inlinedAt: !7176)
!7174 = distinct !DISubprogram(name: "__DMB", scope: !7175, file: !7175, line: 454, type: !318, scopeLine: 455, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2971, retainedNodes: !320)
!7175 = !DIFile(filename: "../../../../../driver/CMSIS/Include/core_cmInstr.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/dac_output_data_repeatedly/GCC")
!7176 = distinct !DILocation(line: 57, column: 5, scope: !7151)
!7177 = !{i64 430659}
!7178 = !DILocation(line: 434, column: 3, scope: !7179, inlinedAt: !7180)
!7179 = distinct !DISubprogram(name: "__ISB", scope: !7175, file: !7175, line: 432, type: !318, scopeLine: 433, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2971, retainedNodes: !320)
!7180 = distinct !DILocation(line: 58, column: 5, scope: !7151)
!7181 = !{i64 430074}
!7182 = !DILocation(line: 59, column: 5, scope: !7151)
!7183 = distinct !DISubprogram(name: "restore_interrupt_mask", scope: !2972, file: !2972, line: 62, type: !7166, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2971, retainedNodes: !7184)
!7184 = !{!7185}
!7185 = !DILocalVariable(name: "mask", arg: 1, scope: !7183, file: !2972, line: 62, type: !105)
!7186 = !DILocation(line: 0, scope: !7183)
!7187 = !DILocation(line: 0, scope: !7165, inlinedAt: !7188)
!7188 = distinct !DILocation(line: 64, column: 5, scope: !7183)
!7189 = !DILocation(line: 534, column: 3, scope: !7165, inlinedAt: !7188)
!7190 = !DILocation(line: 456, column: 3, scope: !7174, inlinedAt: !7191)
!7191 = distinct !DILocation(line: 65, column: 5, scope: !7183)
!7192 = !DILocation(line: 434, column: 3, scope: !7179, inlinedAt: !7193)
!7193 = distinct !DILocation(line: 66, column: 5, scope: !7183)
!7194 = !DILocation(line: 67, column: 1, scope: !7183)
!7195 = distinct !DISubprogram(name: "nvic_mask_all_interrupt", scope: !2972, file: !2972, line: 69, type: !318, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2971, retainedNodes: !7196)
!7196 = !{!7197, !7198}
!7197 = !DILocalVariable(name: "irq_number", scope: !7195, file: !2972, line: 71, type: !919)
!7198 = !DILocalVariable(name: "mask", scope: !7195, file: !2972, line: 72, type: !105)
!7199 = !DILocation(line: 72, column: 21, scope: !7195)
!7200 = !DILocation(line: 0, scope: !7195)
!7201 = !DILocation(line: 73, column: 5, scope: !7202)
!7202 = distinct !DILexicalBlock(scope: !7195, file: !2972, line: 73, column: 5)
!7203 = !DILocation(line: 74, column: 9, scope: !7204)
!7204 = distinct !DILexicalBlock(scope: !7205, file: !2972, line: 73, column: 85)
!7205 = distinct !DILexicalBlock(scope: !7202, file: !2972, line: 73, column: 5)
!7206 = !DILocation(line: 73, column: 81, scope: !7205)
!7207 = !DILocation(line: 73, column: 53, scope: !7205)
!7208 = distinct !{!7208, !7201, !7209}
!7209 = !DILocation(line: 75, column: 5, scope: !7202)
!7210 = !DILocation(line: 76, column: 5, scope: !7195)
!7211 = !DILocation(line: 77, column: 1, scope: !7195)
!7212 = distinct !DISubprogram(name: "NVIC_DisableIRQ", scope: !1063, file: !1063, line: 1507, type: !6946, scopeLine: 1508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2971, retainedNodes: !7213)
!7213 = !{!7214}
!7214 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7212, file: !1063, line: 1507, type: !920)
!7215 = !DILocation(line: 0, scope: !7212)
!7216 = !DILocation(line: 1509, column: 65, scope: !7212)
!7217 = !DILocation(line: 1509, column: 44, scope: !7212)
!7218 = !DILocation(line: 1509, column: 32, scope: !7212)
!7219 = !DILocation(line: 1509, column: 3, scope: !7212)
!7220 = !DILocation(line: 1509, column: 39, scope: !7212)
!7221 = !DILocation(line: 1510, column: 1, scope: !7212)
!7222 = distinct !DISubprogram(name: "nvic_unmask_all_interrupt", scope: !2972, file: !2972, line: 79, type: !318, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2971, retainedNodes: !7223)
!7223 = !{!7224, !7225}
!7224 = !DILocalVariable(name: "irq_number", scope: !7222, file: !2972, line: 81, type: !919)
!7225 = !DILocalVariable(name: "mask", scope: !7222, file: !2972, line: 82, type: !105)
!7226 = !DILocation(line: 82, column: 21, scope: !7222)
!7227 = !DILocation(line: 0, scope: !7222)
!7228 = !DILocation(line: 84, column: 5, scope: !7229)
!7229 = distinct !DILexicalBlock(scope: !7222, file: !2972, line: 84, column: 5)
!7230 = !DILocation(line: 85, column: 9, scope: !7231)
!7231 = distinct !DILexicalBlock(scope: !7232, file: !2972, line: 84, column: 85)
!7232 = distinct !DILexicalBlock(scope: !7229, file: !2972, line: 84, column: 5)
!7233 = !DILocation(line: 84, column: 81, scope: !7232)
!7234 = !DILocation(line: 84, column: 53, scope: !7232)
!7235 = distinct !{!7235, !7228, !7236}
!7236 = !DILocation(line: 86, column: 5, scope: !7229)
!7237 = !DILocation(line: 87, column: 5, scope: !7222)
!7238 = !DILocation(line: 88, column: 1, scope: !7222)
!7239 = distinct !DISubprogram(name: "NVIC_EnableIRQ", scope: !1063, file: !1063, line: 1494, type: !6946, scopeLine: 1495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2971, retainedNodes: !7240)
!7240 = !{!7241}
!7241 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7239, file: !1063, line: 1494, type: !920)
!7242 = !DILocation(line: 0, scope: !7239)
!7243 = !DILocation(line: 1497, column: 91, scope: !7239)
!7244 = !DILocation(line: 1497, column: 61, scope: !7239)
!7245 = !DILocation(line: 1497, column: 40, scope: !7239)
!7246 = !DILocation(line: 1497, column: 3, scope: !7239)
!7247 = !DILocation(line: 1497, column: 46, scope: !7239)
!7248 = !DILocation(line: 1498, column: 1, scope: !7239)
!7249 = distinct !DISubprogram(name: "nvic_clear_all_pending_interrupt", scope: !2972, file: !2972, line: 90, type: !318, scopeLine: 91, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2971, retainedNodes: !7250)
!7250 = !{!7251}
!7251 = !DILocalVariable(name: "irq_number", scope: !7249, file: !2972, line: 92, type: !919)
!7252 = !DILocation(line: 0, scope: !7249)
!7253 = !DILocation(line: 93, column: 5, scope: !7254)
!7254 = distinct !DILexicalBlock(scope: !7249, file: !2972, line: 93, column: 5)
!7255 = !DILocation(line: 94, column: 9, scope: !7256)
!7256 = distinct !DILexicalBlock(scope: !7257, file: !2972, line: 93, column: 85)
!7257 = distinct !DILexicalBlock(scope: !7254, file: !2972, line: 93, column: 5)
!7258 = !DILocation(line: 93, column: 81, scope: !7257)
!7259 = !DILocation(line: 93, column: 53, scope: !7257)
!7260 = distinct !{!7260, !7253, !7261}
!7261 = !DILocation(line: 95, column: 5, scope: !7254)
!7262 = !DILocation(line: 96, column: 1, scope: !7249)
!7263 = distinct !DISubprogram(name: "NVIC_ClearPendingIRQ", scope: !1063, file: !1063, line: 1547, type: !6946, scopeLine: 1548, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2971, retainedNodes: !7264)
!7264 = !{!7265}
!7265 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7263, file: !1063, line: 1547, type: !920)
!7266 = !DILocation(line: 0, scope: !7263)
!7267 = !DILocation(line: 1549, column: 65, scope: !7263)
!7268 = !DILocation(line: 1549, column: 44, scope: !7263)
!7269 = !DILocation(line: 1549, column: 32, scope: !7263)
!7270 = !DILocation(line: 1549, column: 3, scope: !7263)
!7271 = !DILocation(line: 1549, column: 39, scope: !7263)
!7272 = !DILocation(line: 1550, column: 1, scope: !7263)
!7273 = distinct !DISubprogram(name: "nvic_irq_software_trigger", scope: !2972, file: !2972, line: 98, type: !6933, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2971, retainedNodes: !7274)
!7274 = !{!7275}
!7275 = !DILocalVariable(name: "irq_number", arg: 1, scope: !7273, file: !2972, line: 98, type: !919)
!7276 = !DILocation(line: 0, scope: !7273)
!7277 = !DILocation(line: 100, column: 24, scope: !7278)
!7278 = distinct !DILexicalBlock(scope: !7273, file: !2972, line: 100, column: 9)
!7279 = !DILocation(line: 104, column: 5, scope: !7273)
!7280 = !DILocation(line: 105, column: 5, scope: !7273)
!7281 = !DILocation(line: 106, column: 1, scope: !7273)
!7282 = distinct !DISubprogram(name: "software_trigger_irq", scope: !2972, file: !2972, line: 45, type: !1136, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2971, retainedNodes: !7283)
!7283 = !{!7284}
!7284 = !DILocalVariable(name: "irq_number", arg: 1, scope: !7282, file: !2972, line: 45, type: !919)
!7285 = !DILocation(line: 0, scope: !7282)
!7286 = !DILocation(line: 47, column: 54, scope: !7282)
!7287 = !DILocation(line: 47, column: 16, scope: !7282)
!7288 = !DILocation(line: 445, column: 3, scope: !7289, inlinedAt: !7290)
!7289 = distinct !DISubprogram(name: "__DSB", scope: !7175, file: !7175, line: 443, type: !318, scopeLine: 444, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2971, retainedNodes: !320)
!7290 = distinct !DILocation(line: 48, column: 5, scope: !7282)
!7291 = !{i64 430370}
!7292 = !DILocation(line: 49, column: 1, scope: !7282)
!7293 = distinct !DISubprogram(name: "hal_nvic_query_exception_number", scope: !2972, file: !2972, line: 114, type: !4034, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2971, retainedNodes: !320)
!7294 = !DILocation(line: 116, column: 19, scope: !7293)
!7295 = !DILocation(line: 116, column: 24, scope: !7293)
!7296 = !DILocation(line: 116, column: 5, scope: !7293)
!7297 = distinct !DISubprogram(name: "SFI_BlankCheck", scope: !1149, file: !1149, line: 71, type: !7298, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !7300)
!7298 = !DISubroutineType(types: !7299)
!7299 = !{null, !124, !105}
!7300 = !{!7301, !7302, !7303, !7397, !7398, !7399}
!7301 = !DILocalVariable(name: "MTDData", arg: 1, scope: !7297, file: !1149, line: 71, type: !124)
!7302 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !7297, file: !1149, line: 71, type: !105)
!7303 = !DILocalVariable(name: "D", scope: !7297, file: !1149, line: 73, type: !7304)
!7304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7305, size: 32)
!7305 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_Data", file: !1339, line: 193, baseType: !7306)
!7306 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1339, line: 134, size: 1824, elements: !7307)
!7307 = !{!7308, !7309, !7310, !7316, !7322, !7323, !7330, !7331, !7338, !7339, !7340, !7341, !7348, !7349, !7379, !7380, !7381, !7382, !7383, !7384, !7385, !7386, !7387, !7388, !7389, !7390, !7391, !7392, !7393, !7394, !7395, !7396}
!7308 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !7306, file: !1339, line: 136, baseType: !105, size: 32)
!7309 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !7306, file: !1339, line: 137, baseType: !818, size: 32, offset: 32)
!7310 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !7306, file: !1339, line: 138, baseType: !7311, size: 32, offset: 64)
!7311 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !1423, line: 56, baseType: !7312)
!7312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7313, size: 32)
!7313 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1423, line: 54, size: 8, elements: !7314)
!7314 = !{!7315}
!7315 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !7313, file: !1423, line: 55, baseType: !127, size: 8)
!7316 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !7306, file: !1339, line: 139, baseType: !7317, size: 32, offset: 96)
!7317 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !1423, line: 46, baseType: !7318)
!7318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7319, size: 32)
!7319 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1423, line: 44, size: 8, elements: !7320)
!7320 = !{!7321}
!7321 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !7319, file: !1423, line: 45, baseType: !127, size: 8)
!7322 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !7306, file: !1339, line: 140, baseType: !1435, size: 8, offset: 128)
!7323 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !7306, file: !1339, line: 143, baseType: !7324, size: 32, offset: 160)
!7324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7325, size: 32)
!7325 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !1441, line: 146, baseType: !7326)
!7326 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1441, line: 143, size: 64, elements: !7327)
!7327 = !{!7328, !7329}
!7328 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !7326, file: !1441, line: 144, baseType: !105, size: 32)
!7329 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !7326, file: !1441, line: 145, baseType: !105, size: 32, offset: 32)
!7330 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !7306, file: !1339, line: 144, baseType: !818, size: 32, offset: 192)
!7331 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !7306, file: !1339, line: 145, baseType: !7332, size: 32, offset: 224)
!7332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7333, size: 32)
!7333 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !1441, line: 152, baseType: !7334)
!7334 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1441, line: 149, size: 64, elements: !7335)
!7335 = !{!7336, !7337}
!7336 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !7334, file: !1441, line: 150, baseType: !105, size: 32)
!7337 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !7334, file: !1441, line: 151, baseType: !105, size: 32, offset: 32)
!7338 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !7306, file: !1339, line: 146, baseType: !818, size: 32, offset: 256)
!7339 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !7306, file: !1339, line: 147, baseType: !105, size: 32, offset: 288)
!7340 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !7306, file: !1339, line: 148, baseType: !818, size: 32, offset: 320)
!7341 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !7306, file: !1339, line: 151, baseType: !7342, size: 1024, offset: 352)
!7342 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7343, size: 1024, elements: !1464)
!7343 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !1441, line: 170, baseType: !7344)
!7344 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1441, line: 167, size: 64, elements: !7345)
!7345 = !{!7346, !7347}
!7346 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !7344, file: !1441, line: 168, baseType: !105, size: 32)
!7347 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !7344, file: !1441, line: 169, baseType: !105, size: 32, offset: 32)
!7348 = !DIDerivedType(tag: DW_TAG_member, name: "StatusMap", scope: !7306, file: !1339, line: 155, baseType: !1466, size: 32, offset: 1376)
!7349 = !DIDerivedType(tag: DW_TAG_member, name: "CMD", scope: !7306, file: !1339, line: 156, baseType: !7350, size: 32, offset: 1408)
!7350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7351, size: 32)
!7351 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_CMD", file: !1339, line: 124, baseType: !7352)
!7352 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1339, line: 90, size: 200, elements: !7353)
!7353 = !{!7354, !7355, !7356, !7357, !7358, !7359, !7360, !7361, !7362, !7363, !7364, !7365, !7366, !7367, !7368, !7369, !7370, !7371, !7372, !7373, !7374, !7375, !7376, !7377, !7378}
!7354 = !DIDerivedType(tag: DW_TAG_member, name: "PageProg", scope: !7352, file: !1339, line: 91, baseType: !127, size: 8)
!7355 = !DIDerivedType(tag: DW_TAG_member, name: "WriteEnable", scope: !7352, file: !1339, line: 92, baseType: !127, size: 8, offset: 8)
!7356 = !DIDerivedType(tag: DW_TAG_member, name: "Suspend", scope: !7352, file: !1339, line: 94, baseType: !127, size: 8, offset: 16)
!7357 = !DIDerivedType(tag: DW_TAG_member, name: "Resume", scope: !7352, file: !1339, line: 95, baseType: !127, size: 8, offset: 24)
!7358 = !DIDerivedType(tag: DW_TAG_member, name: "Read", scope: !7352, file: !1339, line: 96, baseType: !127, size: 8, offset: 32)
!7359 = !DIDerivedType(tag: DW_TAG_member, name: "Erase", scope: !7352, file: !1339, line: 98, baseType: !127, size: 8, offset: 40)
!7360 = !DIDerivedType(tag: DW_TAG_member, name: "Erase4K", scope: !7352, file: !1339, line: 99, baseType: !127, size: 8, offset: 48)
!7361 = !DIDerivedType(tag: DW_TAG_member, name: "Erase32K", scope: !7352, file: !1339, line: 100, baseType: !127, size: 8, offset: 56)
!7362 = !DIDerivedType(tag: DW_TAG_member, name: "Erase64K", scope: !7352, file: !1339, line: 101, baseType: !127, size: 8, offset: 64)
!7363 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_SPI", scope: !7352, file: !1339, line: 103, baseType: !127, size: 8, offset: 72)
!7364 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_QPI", scope: !7352, file: !1339, line: 104, baseType: !127, size: 8, offset: 80)
!7365 = !DIDerivedType(tag: DW_TAG_member, name: "ReadBPReg", scope: !7352, file: !1339, line: 106, baseType: !127, size: 8, offset: 88)
!7366 = !DIDerivedType(tag: DW_TAG_member, name: "WriteBPReg", scope: !7352, file: !1339, line: 107, baseType: !127, size: 8, offset: 96)
!7367 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSecurityReg", scope: !7352, file: !1339, line: 108, baseType: !127, size: 8, offset: 104)
!7368 = !DIDerivedType(tag: DW_TAG_member, name: "WriteSecurityReg", scope: !7352, file: !1339, line: 109, baseType: !127, size: 8, offset: 112)
!7369 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSuspendReg", scope: !7352, file: !1339, line: 110, baseType: !127, size: 8, offset: 120)
!7370 = !DIDerivedType(tag: DW_TAG_member, name: "ReadReadyReg", scope: !7352, file: !1339, line: 111, baseType: !127, size: 8, offset: 128)
!7371 = !DIDerivedType(tag: DW_TAG_member, name: "ReadFailReg", scope: !7352, file: !1339, line: 112, baseType: !127, size: 8, offset: 136)
!7372 = !DIDerivedType(tag: DW_TAG_member, name: "EnterDPD", scope: !7352, file: !1339, line: 114, baseType: !127, size: 8, offset: 144)
!7373 = !DIDerivedType(tag: DW_TAG_member, name: "LeaveDPD", scope: !7352, file: !1339, line: 115, baseType: !127, size: 8, offset: 152)
!7374 = !DIDerivedType(tag: DW_TAG_member, name: "OTPProg", scope: !7352, file: !1339, line: 118, baseType: !127, size: 8, offset: 160)
!7375 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !7352, file: !1339, line: 119, baseType: !127, size: 8, offset: 168)
!7376 = !DIDerivedType(tag: DW_TAG_member, name: "OTPEnter", scope: !7352, file: !1339, line: 120, baseType: !127, size: 8, offset: 176)
!7377 = !DIDerivedType(tag: DW_TAG_member, name: "OTPExit", scope: !7352, file: !1339, line: 121, baseType: !127, size: 8, offset: 184)
!7378 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !7352, file: !1339, line: 122, baseType: !127, size: 8, offset: 192)
!7379 = !DIDerivedType(tag: DW_TAG_member, name: "Flag", scope: !7306, file: !1339, line: 157, baseType: !105, size: 32, offset: 1440)
!7380 = !DIDerivedType(tag: DW_TAG_member, name: "BPRBitCount", scope: !7306, file: !1339, line: 158, baseType: !987, size: 16, offset: 1472)
!7381 = !DIDerivedType(tag: DW_TAG_member, name: "UniformBlock", scope: !7306, file: !1339, line: 159, baseType: !987, size: 16, offset: 1488)
!7382 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLength", scope: !7306, file: !1339, line: 163, baseType: !987, size: 16, offset: 1504)
!7383 = !DIDerivedType(tag: DW_TAG_member, name: "OTPBase", scope: !7306, file: !1339, line: 164, baseType: !987, size: 16, offset: 1520)
!7384 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendLatency", scope: !7306, file: !1339, line: 167, baseType: !127, size: 8, offset: 1536)
!7385 = !DIDerivedType(tag: DW_TAG_member, name: "FlashID", scope: !7306, file: !1339, line: 168, baseType: !1505, size: 24, offset: 1544)
!7386 = !DIDerivedType(tag: DW_TAG_member, name: "DriverStatus", scope: !7306, file: !1339, line: 169, baseType: !127, size: 8, offset: 1568)
!7387 = !DIDerivedType(tag: DW_TAG_member, name: "AddressCycle", scope: !7306, file: !1339, line: 170, baseType: !127, size: 8, offset: 1576)
!7388 = !DIDerivedType(tag: DW_TAG_member, name: "CS", scope: !7306, file: !1339, line: 173, baseType: !987, size: 16, offset: 1584)
!7389 = !DIDerivedType(tag: DW_TAG_member, name: "sf_dal_fix", scope: !7306, file: !1339, line: 174, baseType: !105, size: 32, offset: 1600)
!7390 = !DIDerivedType(tag: DW_TAG_member, name: "CS_Size", scope: !7306, file: !1339, line: 175, baseType: !105, size: 32, offset: 1632)
!7391 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_BUSY", scope: !7306, file: !1339, line: 178, baseType: !321, size: 8, offset: 1664)
!7392 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_SUSPENDED", scope: !7306, file: !1339, line: 179, baseType: !321, size: 8, offset: 1672)
!7393 = !DIDerivedType(tag: DW_TAG_member, name: "UnlockBlock", scope: !7306, file: !1339, line: 182, baseType: !1516, size: 32, offset: 1696)
!7394 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !7306, file: !1339, line: 186, baseType: !1516, size: 32, offset: 1728)
!7395 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !7306, file: !1339, line: 187, baseType: !1521, size: 32, offset: 1760)
!7396 = !DIDerivedType(tag: DW_TAG_member, name: "OTPWrite", scope: !7306, file: !1339, line: 188, baseType: !1521, size: 32, offset: 1792)
!7397 = !DILocalVariable(name: "i", scope: !7297, file: !1149, line: 74, type: !105)
!7398 = !DILocalVariable(name: "data_cnt", scope: !7297, file: !1149, line: 74, type: !105)
!7399 = !DILocalVariable(name: "p_data", scope: !7297, file: !1149, line: 75, type: !1186)
!7400 = !DILocation(line: 0, scope: !7297)
!7401 = !DILocation(line: 77, column: 16, scope: !7297)
!7402 = !DILocation(line: 79, column: 53, scope: !7403)
!7403 = distinct !DILexicalBlock(scope: !7404, file: !1149, line: 79, column: 5)
!7404 = distinct !DILexicalBlock(scope: !7297, file: !1149, line: 79, column: 5)
!7405 = !DILocation(line: 79, column: 5, scope: !7404)
!7406 = !DILocation(line: 79, column: 41, scope: !7404)
!7407 = !DILocation(line: 77, column: 47, scope: !7297)
!7408 = !DILocation(line: 80, column: 13, scope: !7409)
!7409 = distinct !DILexicalBlock(scope: !7410, file: !1149, line: 80, column: 13)
!7410 = distinct !DILexicalBlock(scope: !7403, file: !1149, line: 79, column: 80)
!7411 = !DILocation(line: 80, column: 21, scope: !7409)
!7412 = !DILocation(line: 80, column: 13, scope: !7410)
!7413 = !DILocation(line: 81, column: 13, scope: !7414)
!7414 = distinct !DILexicalBlock(scope: !7415, file: !1149, line: 81, column: 13)
!7415 = distinct !DILexicalBlock(scope: !7416, file: !1149, line: 81, column: 13)
!7416 = distinct !DILexicalBlock(scope: !7417, file: !1149, line: 81, column: 13)
!7417 = distinct !DILexicalBlock(scope: !7409, file: !1149, line: 80, column: 36)
!7418 = !DILocation(line: 79, column: 65, scope: !7403)
!7419 = !DILocation(line: 79, column: 70, scope: !7403)
!7420 = distinct !{!7420, !7405, !7421}
!7421 = !DILocation(line: 84, column: 5, scope: !7404)
!7422 = !DILocation(line: 85, column: 1, scope: !7297)
!7423 = distinct !DISubprogram(name: "SFI_ReverseByteOrder", scope: !1149, file: !1149, line: 93, type: !3782, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !7424)
!7424 = !{!7425, !7426}
!7425 = !DILocalVariable(name: "num", arg: 1, scope: !7423, file: !1149, line: 93, type: !105)
!7426 = !DILocalVariable(name: "ret", scope: !7423, file: !1149, line: 95, type: !15)
!7427 = !DILocation(line: 0, scope: !7423)
!7428 = !DILocation(line: 100, column: 9, scope: !7423)
!7429 = !DILocation(line: 102, column: 5, scope: !7423)
!7430 = distinct !DISubprogram(name: "SFI_MacEnable", scope: !1149, file: !1149, line: 110, type: !7431, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !7434)
!7431 = !DISubroutineType(types: !7432)
!7432 = !{null, !7433}
!7433 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !987)
!7434 = !{!7435, !7436}
!7435 = !DILocalVariable(name: "CS", arg: 1, scope: !7430, file: !1149, line: 110, type: !7433)
!7436 = !DILocalVariable(name: "val", scope: !7430, file: !1149, line: 112, type: !105)
!7437 = !DILocation(line: 0, scope: !7430)
!7438 = !DILocation(line: 114, column: 5, scope: !7439)
!7439 = distinct !DILexicalBlock(scope: !7440, file: !1149, line: 114, column: 5)
!7440 = distinct !DILexicalBlock(scope: !7430, file: !1149, line: 114, column: 5)
!7441 = !DILocation(line: 116, column: 16, scope: !7430)
!7442 = !DILocation(line: 117, column: 9, scope: !7430)
!7443 = !DILocation(line: 122, column: 13, scope: !7444)
!7444 = distinct !DILexicalBlock(scope: !7445, file: !1149, line: 121, column: 27)
!7445 = distinct !DILexicalBlock(scope: !7446, file: !1149, line: 121, column: 16)
!7446 = distinct !DILexicalBlock(scope: !7430, file: !1149, line: 117, column: 9)
!7447 = !DILocation(line: 127, column: 9, scope: !7448)
!7448 = distinct !DILexicalBlock(scope: !7449, file: !1149, line: 127, column: 9)
!7449 = distinct !DILexicalBlock(scope: !7450, file: !1149, line: 127, column: 9)
!7450 = distinct !DILexicalBlock(scope: !7451, file: !1149, line: 127, column: 9)
!7451 = distinct !DILexicalBlock(scope: !7445, file: !1149, line: 125, column: 12)
!7452 = !DILocation(line: 0, scope: !7446)
!7453 = !DILocation(line: 134, column: 5, scope: !7430)
!7454 = !DILocation(line: 134, column: 19, scope: !7430)
!7455 = !DILocation(line: 134, column: 35, scope: !7430)
!7456 = !DILocation(line: 134, column: 12, scope: !7430)
!7457 = distinct !{!7457, !7453, !7458}
!7458 = !DILocation(line: 134, column: 57, scope: !7430)
!7459 = !DILocation(line: 135, column: 19, scope: !7430)
!7460 = !DILocation(line: 135, column: 34, scope: !7430)
!7461 = !DILocation(line: 135, column: 12, scope: !7430)
!7462 = !DILocation(line: 135, column: 5, scope: !7430)
!7463 = distinct !{!7463, !7462, !7464}
!7464 = !DILocation(line: 135, column: 50, scope: !7430)
!7465 = !DILocation(line: 130, column: 9, scope: !7430)
!7466 = !DILocation(line: 138, column: 24, scope: !7430)
!7467 = !DILocation(line: 139, column: 1, scope: !7430)
!7468 = distinct !DISubprogram(name: "SFI_MacLeave", scope: !1149, file: !1149, line: 148, type: !7431, scopeLine: 149, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !7469)
!7469 = !{!7470, !7471}
!7470 = !DILocalVariable(name: "CS", arg: 1, scope: !7468, file: !1149, line: 148, type: !7433)
!7471 = !DILocalVariable(name: "val", scope: !7468, file: !1149, line: 150, type: !105)
!7472 = !DILocation(line: 0, scope: !7468)
!7473 = !DILocation(line: 153, column: 16, scope: !7468)
!7474 = !DILocation(line: 154, column: 9, scope: !7468)
!7475 = !DILocation(line: 155, column: 24, scope: !7468)
!7476 = !DILocation(line: 158, column: 5, scope: !7468)
!7477 = !DILocation(line: 158, column: 18, scope: !7468)
!7478 = !DILocation(line: 158, column: 32, scope: !7468)
!7479 = distinct !{!7479, !7476, !7480}
!7480 = !DILocation(line: 158, column: 49, scope: !7468)
!7481 = !DILocation(line: 163, column: 16, scope: !7468)
!7482 = !DILocation(line: 164, column: 9, scope: !7468)
!7483 = !DILocation(line: 165, column: 24, scope: !7468)
!7484 = !DILocation(line: 168, column: 5, scope: !7468)
!7485 = !DILocation(line: 168, column: 18, scope: !7468)
!7486 = !DILocation(line: 168, column: 32, scope: !7468)
!7487 = distinct !{!7487, !7484, !7488}
!7488 = !DILocation(line: 168, column: 46, scope: !7468)
!7489 = !DILocation(line: 174, column: 10, scope: !7490)
!7490 = distinct !DILexicalBlock(scope: !7468, file: !1149, line: 174, column: 9)
!7491 = !DILocation(line: 174, column: 25, scope: !7490)
!7492 = !DILocation(line: 174, column: 9, scope: !7468)
!7493 = !DILocation(line: 175, column: 9, scope: !7494)
!7494 = distinct !DILexicalBlock(scope: !7495, file: !1149, line: 175, column: 9)
!7495 = distinct !DILexicalBlock(scope: !7496, file: !1149, line: 175, column: 9)
!7496 = distinct !DILexicalBlock(scope: !7490, file: !1149, line: 174, column: 36)
!7497 = !DILocation(line: 176, column: 5, scope: !7496)
!7498 = !DILocation(line: 179, column: 1, scope: !7468)
!7499 = distinct !DISubprogram(name: "SFI_MacTrigger", scope: !1149, file: !1149, line: 186, type: !7500, scopeLine: 187, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !7502)
!7500 = !DISubroutineType(types: !7501)
!7501 = !{!105, !7433}
!7502 = !{!7503, !7504, !7505}
!7503 = !DILocalVariable(name: "CS", arg: 1, scope: !7499, file: !1149, line: 186, type: !7433)
!7504 = !DILocalVariable(name: "val", scope: !7499, file: !1149, line: 188, type: !105)
!7505 = !DILocalVariable(name: "misc_ctl", scope: !7499, file: !1149, line: 189, type: !105)
!7506 = !DILocation(line: 0, scope: !7499)
!7507 = !DILocation(line: 204, column: 16, scope: !7499)
!7508 = !DILocation(line: 208, column: 12, scope: !7509)
!7509 = distinct !DILexicalBlock(scope: !7499, file: !1149, line: 208, column: 9)
!7510 = !DILocation(line: 208, column: 9, scope: !7499)
!7511 = !DILocation(line: 212, column: 20, scope: !7499)
!7512 = !DILocation(line: 215, column: 1, scope: !7499)
!7513 = !DILocation(line: 215, column: 15, scope: !7499)
!7514 = !DILocation(line: 215, column: 29, scope: !7499)
!7515 = !DILocation(line: 215, column: 8, scope: !7499)
!7516 = distinct !{!7516, !7512, !7517}
!7517 = !DILocation(line: 215, column: 46, scope: !7499)
!7518 = !DILocation(line: 216, column: 22, scope: !7499)
!7519 = !DILocation(line: 216, column: 36, scope: !7499)
!7520 = !DILocation(line: 216, column: 9, scope: !7499)
!7521 = distinct !{!7521, !7520, !7522}
!7522 = !DILocation(line: 216, column: 47, scope: !7499)
!7523 = !DILocation(line: 218, column: 13, scope: !7499)
!7524 = distinct !DISubprogram(name: "SFI_MacWaitReady", scope: !1149, file: !1149, line: 227, type: !7431, scopeLine: 228, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !7525)
!7525 = !{!7526}
!7526 = !DILocalVariable(name: "CS", arg: 1, scope: !7524, file: !1149, line: 227, type: !7433)
!7527 = !DILocation(line: 0, scope: !7524)
!7528 = !DILocation(line: 235, column: 5, scope: !7524)
!7529 = !DILocation(line: 236, column: 5, scope: !7524)
!7530 = !DILocation(line: 238, column: 1, scope: !7524)
!7531 = distinct !DISubprogram(name: "SFI_Dev_Command", scope: !1149, file: !1149, line: 249, type: !7532, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !7534)
!7532 = !DISubroutineType(types: !7533)
!7533 = !{null, !7433, !828}
!7534 = !{!7535, !7536, !7537, !7538, !7539}
!7535 = !DILocalVariable(name: "CS", arg: 1, scope: !7531, file: !1149, line: 249, type: !7433)
!7536 = !DILocalVariable(name: "cmd", arg: 2, scope: !7531, file: !1149, line: 249, type: !828)
!7537 = !DILocalVariable(name: "cmdi", scope: !7531, file: !1149, line: 251, type: !105)
!7538 = !DILocalVariable(name: "cmdo", scope: !7531, file: !1149, line: 251, type: !105)
!7539 = !DILocalVariable(name: "len", scope: !7531, file: !1149, line: 252, type: !127)
!7540 = !DILocation(line: 0, scope: !7531)
!7541 = !DILocation(line: 254, column: 46, scope: !7542)
!7542 = distinct !DILexicalBlock(scope: !7543, file: !1149, line: 254, column: 5)
!7543 = distinct !DILexicalBlock(scope: !7531, file: !1149, line: 254, column: 5)
!7544 = !DILocation(line: 254, column: 5, scope: !7543)
!7545 = !DILocation(line: 255, column: 22, scope: !7546)
!7546 = distinct !DILexicalBlock(scope: !7542, file: !1149, line: 254, column: 103)
!7547 = !DILocation(line: 255, column: 59, scope: !7546)
!7548 = !DILocation(line: 255, column: 51, scope: !7546)
!7549 = !DILocation(line: 254, column: 65, scope: !7542)
!7550 = !DILocation(line: 254, column: 97, scope: !7542)
!7551 = distinct !{!7551, !7544, !7552}
!7552 = !DILocation(line: 256, column: 5, scope: !7543)
!7553 = !DILocation(line: 258, column: 9, scope: !7554)
!7554 = distinct !DILexicalBlock(scope: !7531, file: !1149, line: 258, column: 9)
!7555 = !DILocation(line: 262, column: 5, scope: !7531)
!7556 = !DILocation(line: 263, column: 33, scope: !7531)
!7557 = !DILocation(line: 264, column: 25, scope: !7531)
!7558 = !DILocation(line: 265, column: 24, scope: !7531)
!7559 = !DILocation(line: 266, column: 5, scope: !7531)
!7560 = !DILocation(line: 268, column: 5, scope: !7531)
!7561 = !DILocation(line: 269, column: 1, scope: !7531)
!7562 = distinct !DISubprogram(name: "SFI_Dev_CommandAddress", scope: !1149, file: !1149, line: 281, type: !7563, scopeLine: 282, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !7565)
!7563 = !DISubroutineType(types: !7564)
!7564 = !{null, !7433, !5648, !828, !828}
!7565 = !{!7566, !7567, !7568, !7569, !7570, !7571}
!7566 = !DILocalVariable(name: "CS", arg: 1, scope: !7562, file: !1149, line: 281, type: !7433)
!7567 = !DILocalVariable(name: "cmd", arg: 2, scope: !7562, file: !1149, line: 281, type: !5648)
!7568 = !DILocalVariable(name: "address", arg: 3, scope: !7562, file: !1149, line: 281, type: !828)
!7569 = !DILocalVariable(name: "address_bytes", arg: 4, scope: !7562, file: !1149, line: 281, type: !828)
!7570 = !DILocalVariable(name: "cmd1", scope: !7562, file: !1149, line: 283, type: !105)
!7571 = !DILocalVariable(name: "cmd2", scope: !7562, file: !1149, line: 283, type: !105)
!7572 = !DILocation(line: 0, scope: !7562)
!7573 = !DILocation(line: 285, column: 12, scope: !7562)
!7574 = !DILocation(line: 287, column: 23, scope: !7575)
!7575 = distinct !DILexicalBlock(scope: !7562, file: !1149, line: 287, column: 9)
!7576 = !DILocation(line: 287, column: 9, scope: !7562)
!7577 = !DILocation(line: 288, column: 22, scope: !7578)
!7578 = distinct !DILexicalBlock(scope: !7575, file: !1149, line: 287, column: 31)
!7579 = !DILocation(line: 288, column: 55, scope: !7578)
!7580 = !DILocation(line: 288, column: 53, scope: !7578)
!7581 = !DILocation(line: 289, column: 5, scope: !7578)
!7582 = !DILocation(line: 290, column: 22, scope: !7583)
!7583 = distinct !DILexicalBlock(scope: !7575, file: !1149, line: 289, column: 12)
!7584 = !DILocation(line: 290, column: 53, scope: !7583)
!7585 = !DILocation(line: 290, column: 51, scope: !7583)
!7586 = !DILocation(line: 291, column: 21, scope: !7583)
!7587 = !DILocation(line: 0, scope: !7575)
!7588 = !DILocation(line: 294, column: 33, scope: !7562)
!7589 = !DILocation(line: 295, column: 38, scope: !7562)
!7590 = !DILocation(line: 296, column: 41, scope: !7562)
!7591 = !DILocation(line: 296, column: 25, scope: !7562)
!7592 = !DILocation(line: 297, column: 24, scope: !7562)
!7593 = !DILocation(line: 299, column: 5, scope: !7562)
!7594 = !DILocation(line: 300, column: 5, scope: !7562)
!7595 = !DILocation(line: 302, column: 1, scope: !7562)
!7596 = distinct !DISubprogram(name: "SFI_GPRAM_Write_C1A3", scope: !1149, file: !1149, line: 312, type: !7597, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !7599)
!7597 = !DISubroutineType(types: !7598)
!7598 = !{!105, !828, !828}
!7599 = !{!7600, !7601}
!7600 = !DILocalVariable(name: "cmd", arg: 1, scope: !7596, file: !1149, line: 312, type: !828)
!7601 = !DILocalVariable(name: "address", arg: 2, scope: !7596, file: !1149, line: 312, type: !828)
!7602 = !DILocation(line: 0, scope: !7596)
!7603 = !DILocation(line: 314, column: 14, scope: !7596)
!7604 = !DILocation(line: 314, column: 44, scope: !7596)
!7605 = !DILocation(line: 314, column: 82, scope: !7596)
!7606 = !DILocation(line: 314, column: 75, scope: !7596)
!7607 = !DILocation(line: 314, column: 5, scope: !7596)
!7608 = distinct !DISubprogram(name: "SFI_GPRAM_Write_C1A4", scope: !1149, file: !1149, line: 332, type: !7609, scopeLine: 333, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !7612)
!7609 = !DISubroutineType(types: !7610)
!7610 = !{!105, !828, !828, !7611, !1186}
!7611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !818, size: 32)
!7612 = !{!7613, !7614, !7615, !7616, !7617, !7625, !7626, !7627}
!7613 = !DILocalVariable(name: "cmd", arg: 1, scope: !7608, file: !1149, line: 332, type: !828)
!7614 = !DILocalVariable(name: "address", arg: 2, scope: !7608, file: !1149, line: 332, type: !828)
!7615 = !DILocalVariable(name: "p_data", arg: 3, scope: !7608, file: !1149, line: 332, type: !7611)
!7616 = !DILocalVariable(name: "length", arg: 4, scope: !7608, file: !1149, line: 332, type: !1186)
!7617 = !DILocalVariable(name: "tmp", scope: !7608, file: !1149, line: 334, type: !7618)
!7618 = !DIDerivedType(tag: DW_TAG_typedef, name: "sf_uint", file: !1339, line: 202, baseType: !7619)
!7619 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1339, line: 198, size: 32, elements: !7620)
!7620 = !{!7621, !7622, !7624}
!7621 = !DIDerivedType(tag: DW_TAG_member, name: "u32", scope: !7619, file: !1339, line: 199, baseType: !105, size: 32)
!7622 = !DIDerivedType(tag: DW_TAG_member, name: "u16", scope: !7619, file: !1339, line: 200, baseType: !7623, size: 32)
!7623 = !DICompositeType(tag: DW_TAG_array_type, baseType: !987, size: 32, elements: !484)
!7624 = !DIDerivedType(tag: DW_TAG_member, name: "u8", scope: !7619, file: !1339, line: 201, baseType: !481, size: 32)
!7625 = !DILocalVariable(name: "cmd1", scope: !7608, file: !1149, line: 335, type: !105)
!7626 = !DILocalVariable(name: "cmd2", scope: !7608, file: !1149, line: 335, type: !105)
!7627 = !DILocalVariable(name: "i", scope: !7608, file: !1149, line: 336, type: !105)
!7628 = !DILocation(line: 0, scope: !7608)
!7629 = !DILocation(line: 334, column: 5, scope: !7608)
!7630 = !DILocation(line: 334, column: 16, scope: !7608)
!7631 = !DILocation(line: 338, column: 12, scope: !7608)
!7632 = !DILocation(line: 340, column: 17, scope: !7608)
!7633 = !DILocation(line: 342, column: 17, scope: !7608)
!7634 = !DILocation(line: 342, column: 9, scope: !7608)
!7635 = !DILocation(line: 342, column: 15, scope: !7608)
!7636 = !DILocation(line: 344, column: 22, scope: !7637)
!7637 = distinct !DILexicalBlock(scope: !7638, file: !1149, line: 343, column: 29)
!7638 = distinct !DILexicalBlock(scope: !7639, file: !1149, line: 343, column: 5)
!7639 = distinct !DILexicalBlock(scope: !7608, file: !1149, line: 343, column: 5)
!7640 = !DILocation(line: 343, column: 5, scope: !7639)
!7641 = !DILocation(line: 344, column: 21, scope: !7637)
!7642 = !DILocation(line: 344, column: 9, scope: !7637)
!7643 = !DILocation(line: 344, column: 19, scope: !7637)
!7644 = !DILocation(line: 345, column: 18, scope: !7637)
!7645 = !DILocation(line: 343, column: 25, scope: !7638)
!7646 = !DILocation(line: 343, column: 19, scope: !7638)
!7647 = distinct !{!7647, !7640, !7648}
!7648 = !DILocation(line: 346, column: 5, scope: !7639)
!7649 = !DILocation(line: 347, column: 16, scope: !7608)
!7650 = !DILocation(line: 348, column: 16, scope: !7608)
!7651 = !DILocation(line: 348, column: 15, scope: !7608)
!7652 = !DILocation(line: 339, column: 17, scope: !7608)
!7653 = !DILocation(line: 339, column: 52, scope: !7608)
!7654 = !DILocation(line: 339, column: 45, scope: !7608)
!7655 = !DILocation(line: 348, column: 13, scope: !7608)
!7656 = !DILocation(line: 349, column: 38, scope: !7608)
!7657 = !DILocation(line: 351, column: 1, scope: !7608)
!7658 = !DILocation(line: 350, column: 5, scope: !7608)
!7659 = distinct !DISubprogram(name: "SFI_GPRAM_Write", scope: !1149, file: !1149, line: 367, type: !7660, scopeLine: 368, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !7662)
!7660 = !DISubroutineType(types: !7661)
!7661 = !{null, !105, !124, !1124}
!7662 = !{!7663, !7664, !7665, !7666, !7667, !7668}
!7663 = !DILocalVariable(name: "gpram_offset", arg: 1, scope: !7659, file: !1149, line: 367, type: !105)
!7664 = !DILocalVariable(name: "buff", arg: 2, scope: !7659, file: !1149, line: 367, type: !124)
!7665 = !DILocalVariable(name: "length", arg: 3, scope: !7659, file: !1149, line: 367, type: !1124)
!7666 = !DILocalVariable(name: "i", scope: !7659, file: !1149, line: 369, type: !105)
!7667 = !DILocalVariable(name: "p_data", scope: !7659, file: !1149, line: 370, type: !818)
!7668 = !DILocalVariable(name: "tmp", scope: !7659, file: !1149, line: 371, type: !7618)
!7669 = !DILocation(line: 0, scope: !7659)
!7670 = !DILocation(line: 371, column: 5, scope: !7659)
!7671 = !DILocation(line: 371, column: 13, scope: !7659)
!7672 = !DILocation(line: 373, column: 18, scope: !7659)
!7673 = !DILocation(line: 376, column: 15, scope: !7674)
!7674 = distinct !DILexicalBlock(scope: !7659, file: !1149, line: 376, column: 9)
!7675 = !DILocation(line: 376, column: 30, scope: !7674)
!7676 = !DILocation(line: 376, column: 11, scope: !7674)
!7677 = !DILocation(line: 376, column: 9, scope: !7659)
!7678 = !DILocation(line: 377, column: 23, scope: !7679)
!7679 = distinct !DILexicalBlock(scope: !7680, file: !1149, line: 377, column: 9)
!7680 = distinct !DILexicalBlock(scope: !7681, file: !1149, line: 377, column: 9)
!7681 = distinct !DILexicalBlock(scope: !7674, file: !1149, line: 376, column: 41)
!7682 = !DILocation(line: 377, column: 9, scope: !7680)
!7683 = !DILocation(line: 378, column: 13, scope: !7684)
!7684 = distinct !DILexicalBlock(scope: !7679, file: !1149, line: 377, column: 80)
!7685 = !DILocation(line: 377, column: 41, scope: !7679)
!7686 = !DILocation(line: 377, column: 54, scope: !7679)
!7687 = !DILocation(line: 377, column: 67, scope: !7679)
!7688 = distinct !{!7688, !7682, !7689}
!7689 = !DILocation(line: 379, column: 9, scope: !7680)
!7690 = !DILocation(line: 382, column: 37, scope: !7691)
!7691 = distinct !DILexicalBlock(scope: !7674, file: !1149, line: 382, column: 14)
!7692 = !DILocation(line: 382, column: 16, scope: !7691)
!7693 = !DILocation(line: 0, scope: !7691)
!7694 = !DILocation(line: 382, column: 14, scope: !7674)
!7695 = !DILocation(line: 391, column: 9, scope: !7696)
!7696 = distinct !DILexicalBlock(scope: !7697, file: !1149, line: 391, column: 9)
!7697 = distinct !DILexicalBlock(scope: !7691, file: !1149, line: 390, column: 13)
!7698 = !DILocation(line: 383, column: 9, scope: !7699)
!7699 = distinct !DILexicalBlock(scope: !7700, file: !1149, line: 383, column: 9)
!7700 = distinct !DILexicalBlock(scope: !7691, file: !1149, line: 382, column: 49)
!7701 = !DILocation(line: 384, column: 26, scope: !7702)
!7702 = distinct !DILexicalBlock(scope: !7703, file: !1149, line: 383, column: 80)
!7703 = distinct !DILexicalBlock(scope: !7699, file: !1149, line: 383, column: 9)
!7704 = !DILocation(line: 384, column: 24, scope: !7702)
!7705 = !DILocation(line: 385, column: 47, scope: !7702)
!7706 = !DILocation(line: 385, column: 26, scope: !7702)
!7707 = !DILocation(line: 385, column: 24, scope: !7702)
!7708 = !DILocation(line: 386, column: 13, scope: !7702)
!7709 = !DILocation(line: 383, column: 41, scope: !7703)
!7710 = !DILocation(line: 383, column: 54, scope: !7703)
!7711 = !DILocation(line: 383, column: 67, scope: !7703)
!7712 = !DILocation(line: 383, column: 23, scope: !7703)
!7713 = distinct !{!7713, !7698, !7714}
!7714 = !DILocation(line: 387, column: 9, scope: !7699)
!7715 = !DILocation(line: 392, column: 13, scope: !7716)
!7716 = distinct !DILexicalBlock(scope: !7717, file: !1149, line: 392, column: 13)
!7717 = distinct !DILexicalBlock(scope: !7718, file: !1149, line: 391, column: 61)
!7718 = distinct !DILexicalBlock(scope: !7696, file: !1149, line: 391, column: 9)
!7719 = !DILocation(line: 393, column: 36, scope: !7720)
!7720 = distinct !DILexicalBlock(scope: !7721, file: !1149, line: 392, column: 51)
!7721 = distinct !DILexicalBlock(scope: !7716, file: !1149, line: 392, column: 13)
!7722 = !DILocation(line: 393, column: 29, scope: !7720)
!7723 = !DILocation(line: 393, column: 17, scope: !7720)
!7724 = !DILocation(line: 393, column: 27, scope: !7720)
!7725 = !DILocation(line: 392, column: 47, scope: !7721)
!7726 = !DILocation(line: 392, column: 27, scope: !7721)
!7727 = !DILocation(line: 392, column: 31, scope: !7721)
!7728 = distinct !{!7728, !7715, !7729}
!7729 = !DILocation(line: 394, column: 13, scope: !7716)
!7730 = !DILocation(line: 395, column: 13, scope: !7717)
!7731 = !DILocation(line: 391, column: 41, scope: !7718)
!7732 = !DILocation(line: 391, column: 54, scope: !7718)
!7733 = !DILocation(line: 391, column: 23, scope: !7718)
!7734 = distinct !{!7734, !7695, !7735}
!7735 = !DILocation(line: 396, column: 9, scope: !7696)
!7736 = !DILocation(line: 398, column: 1, scope: !7659)
!7737 = distinct !DISubprogram(name: "SFI_Dev_Command_Ext", scope: !1149, file: !1149, line: 414, type: !7738, scopeLine: 415, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !7740)
!7738 = !DISubroutineType(types: !7739)
!7739 = !{null, !7433, !5647, !818, !7433, !7433}
!7740 = !{!7741, !7742, !7743, !7744, !7745, !7746, !7747, !7748, !7749, !7750}
!7741 = !DILocalVariable(name: "CS", arg: 1, scope: !7737, file: !1149, line: 414, type: !7433)
!7742 = !DILocalVariable(name: "cmd", arg: 2, scope: !7737, file: !1149, line: 414, type: !5647)
!7743 = !DILocalVariable(name: "data", arg: 3, scope: !7737, file: !1149, line: 414, type: !818)
!7744 = !DILocalVariable(name: "outl", arg: 4, scope: !7737, file: !1149, line: 414, type: !7433)
!7745 = !DILocalVariable(name: "inl", arg: 5, scope: !7737, file: !1149, line: 414, type: !7433)
!7746 = !DILocalVariable(name: "tmp", scope: !7737, file: !1149, line: 416, type: !105)
!7747 = !DILocalVariable(name: "i", scope: !7737, file: !1149, line: 417, type: !105)
!7748 = !DILocalVariable(name: "j", scope: !7737, file: !1149, line: 417, type: !105)
!7749 = !DILocalVariable(name: "p_data", scope: !7737, file: !1149, line: 418, type: !818)
!7750 = !DILocalVariable(name: "p_tmp", scope: !7737, file: !1149, line: 418, type: !818)
!7751 = !DILocation(line: 0, scope: !7737)
!7752 = !DILocation(line: 416, column: 5, scope: !7737)
!7753 = !DILocation(line: 422, column: 60, scope: !7754)
!7754 = distinct !DILexicalBlock(scope: !7755, file: !1149, line: 422, column: 5)
!7755 = distinct !DILexicalBlock(scope: !7737, file: !1149, line: 422, column: 5)
!7756 = !DILocation(line: 422, column: 5, scope: !7755)
!7757 = !DILocation(line: 423, column: 25, scope: !7758)
!7758 = distinct !DILexicalBlock(scope: !7759, file: !1149, line: 423, column: 9)
!7759 = distinct !DILexicalBlock(scope: !7754, file: !1149, line: 422, column: 83)
!7760 = !DILocation(line: 423, column: 32, scope: !7761)
!7761 = distinct !DILexicalBlock(scope: !7758, file: !1149, line: 423, column: 9)
!7762 = !DILocation(line: 423, column: 9, scope: !7758)
!7763 = !DILocation(line: 424, column: 24, scope: !7764)
!7764 = distinct !DILexicalBlock(scope: !7761, file: !1149, line: 423, column: 59)
!7765 = !DILocation(line: 424, column: 13, scope: !7764)
!7766 = !DILocation(line: 424, column: 22, scope: !7764)
!7767 = !DILocation(line: 423, column: 50, scope: !7761)
!7768 = !DILocation(line: 423, column: 55, scope: !7761)
!7769 = !DILocation(line: 423, column: 39, scope: !7761)
!7770 = distinct !{!7770, !7762, !7771}
!7771 = !DILocation(line: 425, column: 9, scope: !7758)
!7772 = !DILocation(line: 426, column: 9, scope: !7759)
!7773 = !DILocation(line: 0, scope: !7755)
!7774 = !DILocation(line: 422, column: 75, scope: !7754)
!7775 = distinct !{!7775, !7756, !7776}
!7776 = !DILocation(line: 427, column: 5, scope: !7755)
!7777 = !DILocation(line: 428, column: 25, scope: !7737)
!7778 = !DILocation(line: 429, column: 26, scope: !7737)
!7779 = !DILocation(line: 429, column: 24, scope: !7737)
!7780 = !DILocation(line: 430, column: 5, scope: !7737)
!7781 = !DILocation(line: 431, column: 5, scope: !7737)
!7782 = !DILocation(line: 433, column: 67, scope: !7783)
!7783 = distinct !DILexicalBlock(scope: !7784, file: !1149, line: 433, column: 5)
!7784 = distinct !DILexicalBlock(scope: !7737, file: !1149, line: 433, column: 5)
!7785 = !DILocation(line: 433, column: 5, scope: !7784)
!7786 = !DILocation(line: 433, column: 56, scope: !7784)
!7787 = !DILocation(line: 434, column: 17, scope: !7788)
!7788 = distinct !DILexicalBlock(scope: !7783, file: !1149, line: 433, column: 100)
!7789 = !DILocation(line: 434, column: 15, scope: !7788)
!7790 = !DILocation(line: 433, column: 74, scope: !7783)
!7791 = !DILocation(line: 433, column: 79, scope: !7783)
!7792 = !DILocation(line: 433, column: 87, scope: !7783)
!7793 = distinct !{!7793, !7785, !7794}
!7794 = !DILocation(line: 435, column: 5, scope: !7784)
!7795 = !DILocation(line: 437, column: 1, scope: !7737)
!7796 = distinct !DISubprogram(name: "SFI_Dev_Command_List", scope: !1149, file: !1149, line: 462, type: !7797, scopeLine: 463, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !7799)
!7797 = !DISubroutineType(types: !7798)
!7798 = !{null, !7433, !5647}
!7799 = !{!7800, !7801, !7802, !7803, !7804}
!7800 = !DILocalVariable(name: "CS", arg: 1, scope: !7796, file: !1149, line: 462, type: !7433)
!7801 = !DILocalVariable(name: "cmdlist", arg: 2, scope: !7796, file: !1149, line: 462, type: !5647)
!7802 = !DILocalVariable(name: "i", scope: !7796, file: !1149, line: 464, type: !105)
!7803 = !DILocalVariable(name: "val", scope: !7796, file: !1149, line: 465, type: !105)
!7804 = !DILocalVariable(name: "status", scope: !7805, file: !1149, line: 492, type: !127)
!7805 = distinct !DILexicalBlock(scope: !7806, file: !1149, line: 491, column: 47)
!7806 = distinct !DILexicalBlock(scope: !7807, file: !1149, line: 491, column: 13)
!7807 = distinct !DILexicalBlock(scope: !7796, file: !1149, line: 477, column: 17)
!7808 = !DILocation(line: 0, scope: !7796)
!7809 = !DILocation(line: 467, column: 17, scope: !7810)
!7810 = distinct !DILexicalBlock(scope: !7796, file: !1149, line: 467, column: 9)
!7811 = !DILocation(line: 467, column: 9, scope: !7796)
!7812 = !DILocation(line: 474, column: 11, scope: !7796)
!7813 = !DILocation(line: 477, column: 5, scope: !7796)
!7814 = !DILocation(line: 478, column: 17, scope: !7807)
!7815 = !DILocation(line: 478, column: 9, scope: !7807)
!7816 = !DILocation(line: 481, column: 17, scope: !7817)
!7817 = distinct !DILexicalBlock(scope: !7818, file: !1149, line: 481, column: 17)
!7818 = distinct !DILexicalBlock(scope: !7807, file: !1149, line: 478, column: 29)
!7819 = !DILocation(line: 481, column: 17, scope: !7820)
!7820 = distinct !DILexicalBlock(scope: !7821, file: !1149, line: 481, column: 17)
!7821 = distinct !DILexicalBlock(scope: !7822, file: !1149, line: 481, column: 17)
!7822 = distinct !DILexicalBlock(scope: !7817, file: !1149, line: 481, column: 17)
!7823 = !DILocation(line: 481, column: 17, scope: !7821)
!7824 = !DILocation(line: 481, column: 17, scope: !7825)
!7825 = distinct !DILexicalBlock(scope: !7826, file: !1149, line: 481, column: 17)
!7826 = distinct !DILexicalBlock(scope: !7822, file: !1149, line: 481, column: 17)
!7827 = !DILocation(line: 484, column: 17, scope: !7828)
!7828 = distinct !DILexicalBlock(scope: !7818, file: !1149, line: 484, column: 17)
!7829 = !DILocation(line: 484, column: 17, scope: !7830)
!7830 = distinct !DILexicalBlock(scope: !7831, file: !1149, line: 484, column: 17)
!7831 = distinct !DILexicalBlock(scope: !7832, file: !1149, line: 484, column: 17)
!7832 = distinct !DILexicalBlock(scope: !7828, file: !1149, line: 484, column: 17)
!7833 = !DILocation(line: 484, column: 17, scope: !7831)
!7834 = !DILocation(line: 484, column: 17, scope: !7835)
!7835 = distinct !DILexicalBlock(scope: !7836, file: !1149, line: 484, column: 17)
!7836 = distinct !DILexicalBlock(scope: !7832, file: !1149, line: 484, column: 17)
!7837 = !DILocation(line: 0, scope: !7838)
!7838 = distinct !DILexicalBlock(scope: !7839, file: !1149, line: 487, column: 17)
!7839 = distinct !DILexicalBlock(scope: !7818, file: !1149, line: 487, column: 17)
!7840 = !DILocation(line: 487, column: 17, scope: !7839)
!7841 = !DILocation(line: 487, column: 17, scope: !7842)
!7842 = distinct !DILexicalBlock(scope: !7843, file: !1149, line: 487, column: 17)
!7843 = distinct !DILexicalBlock(scope: !7838, file: !1149, line: 487, column: 17)
!7844 = !DILocation(line: 487, column: 17, scope: !7843)
!7845 = !DILocation(line: 487, column: 17, scope: !7846)
!7846 = distinct !DILexicalBlock(scope: !7847, file: !1149, line: 487, column: 17)
!7847 = distinct !DILexicalBlock(scope: !7838, file: !1149, line: 487, column: 17)
!7848 = !DILocation(line: 487, column: 17, scope: !7847)
!7849 = !DILocation(line: 491, column: 23, scope: !7806)
!7850 = !DILocation(line: 491, column: 13, scope: !7806)
!7851 = !DILocation(line: 491, column: 28, scope: !7806)
!7852 = !DILocation(line: 491, column: 13, scope: !7807)
!7853 = !DILocation(line: 492, column: 13, scope: !7805)
!7854 = !DILocation(line: 494, column: 13, scope: !7805)
!7855 = !DILocation(line: 0, scope: !7805)
!7856 = !DILocation(line: 495, column: 17, scope: !7857)
!7857 = distinct !DILexicalBlock(scope: !7805, file: !1149, line: 494, column: 16)
!7858 = !DILocation(line: 496, column: 22, scope: !7805)
!7859 = !DILocation(line: 496, column: 31, scope: !7805)
!7860 = !DILocation(line: 496, column: 29, scope: !7805)
!7861 = !DILocation(line: 496, column: 13, scope: !7857)
!7862 = distinct !{!7862, !7854, !7863}
!7863 = !DILocation(line: 496, column: 45, scope: !7805)
!7864 = !DILocation(line: 497, column: 9, scope: !7806)
!7865 = !DILocation(line: 503, column: 25, scope: !7807)
!7866 = !DILocation(line: 497, column: 9, scope: !7805)
!7867 = !DILocation(line: 500, column: 70, scope: !7868)
!7868 = distinct !DILexicalBlock(scope: !7806, file: !1149, line: 499, column: 14)
!7869 = !DILocation(line: 500, column: 60, scope: !7868)
!7870 = !DILocation(line: 500, column: 13, scope: !7868)
!7871 = !DILocation(line: 503, column: 15, scope: !7807)
!7872 = !DILocation(line: 503, column: 11, scope: !7807)
!7873 = distinct !{!7873, !7813, !7874}
!7874 = !DILocation(line: 504, column: 5, scope: !7796)
!7875 = !DILocation(line: 505, column: 1, scope: !7796)
!7876 = distinct !DISubprogram(name: "SFI_ReadDeviceID", scope: !1149, file: !1149, line: 514, type: !7877, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !7879)
!7877 = !DISubroutineType(types: !7878)
!7878 = !{null, !7433, !818, !127}
!7879 = !{!7880, !7881, !7882}
!7880 = !DILocalVariable(name: "CS", arg: 1, scope: !7876, file: !1149, line: 514, type: !7433)
!7881 = !DILocalVariable(name: "id", arg: 2, scope: !7876, file: !1149, line: 514, type: !818)
!7882 = !DILocalVariable(name: "cmd", arg: 3, scope: !7876, file: !1149, line: 514, type: !127)
!7883 = !DILocation(line: 0, scope: !7876)
!7884 = !DILocation(line: 517, column: 5, scope: !7876)
!7885 = !DILocation(line: 518, column: 1, scope: !7876)
!7886 = distinct !DISubprogram(name: "SFI_ReadDeviceID_SPI", scope: !1149, file: !1149, line: 521, type: !7887, scopeLine: 522, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !7889)
!7887 = !DISubroutineType(types: !7888)
!7888 = !{null, !7433, !818}
!7889 = !{!7890, !7891}
!7890 = !DILocalVariable(name: "CS", arg: 1, scope: !7886, file: !1149, line: 521, type: !7433)
!7891 = !DILocalVariable(name: "id", arg: 2, scope: !7886, file: !1149, line: 521, type: !818)
!7892 = !DILocation(line: 0, scope: !7886)
!7893 = !DILocation(line: 523, column: 5, scope: !7886)
!7894 = !DILocation(line: 524, column: 1, scope: !7886)
!7895 = distinct !DISubprogram(name: "SFI_Dev_WorkingFrequencyQuery", scope: !1149, file: !1149, line: 536, type: !7896, scopeLine: 537, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !320)
!7896 = !DISubroutineType(types: !7897)
!7897 = !{!7898}
!7898 = !DIDerivedType(tag: DW_TAG_typedef, name: "sfi_clock_enum", file: !1152, line: 57, baseType: !1151)
!7899 = !DILocation(line: 540, column: 5, scope: !7895)
!7900 = distinct !DISubprogram(name: "SFI_Dev_WorkingVoltageQuery", scope: !1149, file: !1149, line: 561, type: !7901, scopeLine: 562, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !320)
!7901 = !DISubroutineType(types: !7902)
!7902 = !{!7903}
!7903 = !DIDerivedType(tag: DW_TAG_typedef, name: "sfi_voltage_enum", file: !1152, line: 66, baseType: !1159)
!7904 = !DILocation(line: 564, column: 15, scope: !7905)
!7905 = distinct !DILexicalBlock(scope: !7900, file: !1149, line: 564, column: 9)
!7906 = !DILocation(line: 564, column: 31, scope: !7905)
!7907 = !DILocation(line: 564, column: 45, scope: !7905)
!7908 = !DILocation(line: 0, scope: !7905)
!7909 = !DILocation(line: 569, column: 1, scope: !7900)
!7910 = distinct !DISubprogram(name: "SFI_Dev_GetUniqueID", scope: !1149, file: !1149, line: 580, type: !7911, scopeLine: 581, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !7913)
!7911 = !DISubroutineType(types: !7912)
!7912 = !{!321, !818}
!7913 = !{!7914, !7915}
!7914 = !DILocalVariable(name: "buffer", arg: 1, scope: !7910, file: !1149, line: 580, type: !818)
!7915 = !DILocalVariable(name: "i", scope: !7910, file: !1149, line: 582, type: !7)
!7916 = !DILocation(line: 0, scope: !7910)
!7917 = !DILocation(line: 583, column: 5, scope: !7918)
!7918 = distinct !DILexicalBlock(scope: !7910, file: !1149, line: 583, column: 5)
!7919 = !DILocation(line: 584, column: 9, scope: !7920)
!7920 = distinct !DILexicalBlock(scope: !7921, file: !1149, line: 583, column: 29)
!7921 = distinct !DILexicalBlock(scope: !7918, file: !1149, line: 583, column: 5)
!7922 = !DILocation(line: 584, column: 19, scope: !7920)
!7923 = !DILocation(line: 583, column: 25, scope: !7921)
!7924 = !DILocation(line: 583, column: 19, scope: !7921)
!7925 = distinct !{!7925, !7917, !7926}
!7926 = !DILocation(line: 585, column: 5, scope: !7918)
!7927 = !DILocation(line: 586, column: 5, scope: !7910)
!7928 = distinct !DISubprogram(name: "SF_DAL_DEV_Enter_DPD", scope: !1149, file: !1149, line: 613, type: !318, scopeLine: 614, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !7929)
!7929 = !{!7930}
!7930 = !DILocalVariable(name: "D", scope: !7928, file: !1149, line: 615, type: !7304)
!7931 = !DILocation(line: 0, scope: !7928)
!7932 = !DILocation(line: 616, column: 32, scope: !7928)
!7933 = !DILocation(line: 616, column: 37, scope: !7928)
!7934 = !DILocation(line: 616, column: 27, scope: !7928)
!7935 = !DILocation(line: 617, column: 44, scope: !7928)
!7936 = !DILocation(line: 617, column: 31, scope: !7928)
!7937 = !DILocation(line: 617, column: 28, scope: !7928)
!7938 = !DILocation(line: 618, column: 32, scope: !7928)
!7939 = !DILocation(line: 618, column: 31, scope: !7928)
!7940 = !DILocation(line: 618, column: 29, scope: !7928)
!7941 = !DILocation(line: 621, column: 31, scope: !7928)
!7942 = !DILocation(line: 621, column: 24, scope: !7928)
!7943 = !DILocation(line: 622, column: 34, scope: !7928)
!7944 = !DILocation(line: 622, column: 27, scope: !7928)
!7945 = !DILocation(line: 623, column: 32, scope: !7928)
!7946 = !DILocation(line: 623, column: 25, scope: !7928)
!7947 = !DILocation(line: 624, column: 33, scope: !7928)
!7948 = !DILocation(line: 624, column: 26, scope: !7928)
!7949 = !DILocation(line: 625, column: 33, scope: !7928)
!7950 = !DILocation(line: 625, column: 26, scope: !7928)
!7951 = !DILocation(line: 629, column: 32, scope: !7928)
!7952 = !DILocation(line: 629, column: 47, scope: !7928)
!7953 = !DILocation(line: 629, column: 25, scope: !7928)
!7954 = !DILocation(line: 630, column: 32, scope: !7928)
!7955 = !DILocation(line: 630, column: 47, scope: !7928)
!7956 = !DILocation(line: 630, column: 25, scope: !7928)
!7957 = !DILocation(line: 633, column: 24, scope: !7928)
!7958 = !DILocation(line: 633, column: 31, scope: !7928)
!7959 = !DILocation(line: 633, column: 36, scope: !7928)
!7960 = !DILocation(line: 633, column: 28, scope: !7928)
!7961 = !DILocation(line: 633, column: 5, scope: !7928)
!7962 = !DILocation(line: 635, column: 5, scope: !7928)
!7963 = !DILocation(line: 636, column: 1, scope: !7928)
!7964 = distinct !DISubprogram(name: "SF_DAL_DEV_Leave_DPD", scope: !1149, file: !1149, line: 641, type: !318, scopeLine: 642, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !320)
!7965 = !DILocation(line: 644, column: 26, scope: !7964)
!7966 = !DILocation(line: 644, column: 24, scope: !7964)
!7967 = !DILocation(line: 645, column: 29, scope: !7964)
!7968 = !DILocation(line: 645, column: 27, scope: !7964)
!7969 = !DILocation(line: 646, column: 27, scope: !7964)
!7970 = !DILocation(line: 646, column: 25, scope: !7964)
!7971 = !DILocation(line: 647, column: 28, scope: !7964)
!7972 = !DILocation(line: 647, column: 26, scope: !7964)
!7973 = !DILocation(line: 648, column: 27, scope: !7964)
!7974 = !DILocation(line: 648, column: 25, scope: !7964)
!7975 = !DILocation(line: 652, column: 32, scope: !7964)
!7976 = !DILocation(line: 652, column: 47, scope: !7964)
!7977 = !DILocation(line: 652, column: 25, scope: !7964)
!7978 = !DILocation(line: 655, column: 24, scope: !7964)
!7979 = !DILocation(line: 655, column: 5, scope: !7964)
!7980 = !DILocation(line: 657, column: 5, scope: !7964)
!7981 = !DILocation(line: 660, column: 9, scope: !7982)
!7982 = distinct !DILexicalBlock(scope: !7964, file: !1149, line: 660, column: 9)
!7983 = !DILocation(line: 660, column: 59, scope: !7982)
!7984 = !DILocation(line: 660, column: 38, scope: !7982)
!7985 = !DILocation(line: 660, column: 37, scope: !7982)
!7986 = !DILocation(line: 660, column: 33, scope: !7982)
!7987 = !DILocation(line: 660, column: 9, scope: !7964)
!7988 = !DILocation(line: 661, column: 9, scope: !7982)
!7989 = distinct !{!7989, !7988, !7990}
!7990 = !DILocation(line: 661, column: 18, scope: !7982)
!7991 = !DILocation(line: 662, column: 1, scope: !7964)
!7992 = distinct !DISubprogram(name: "SF_DAL_DEV_SWITCH_TO_LOW_FQ", scope: !1149, file: !1149, line: 668, type: !318, scopeLine: 669, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !320)
!7993 = !DILocation(line: 671, column: 9, scope: !7994)
!7994 = distinct !DILexicalBlock(scope: !7992, file: !1149, line: 671, column: 9)
!7995 = !DILocation(line: 671, column: 40, scope: !7994)
!7996 = !DILocation(line: 671, column: 9, scope: !7992)
!7997 = !DILocation(line: 672, column: 47, scope: !7998)
!7998 = distinct !DILexicalBlock(scope: !7994, file: !1149, line: 671, column: 46)
!7999 = !DILocation(line: 672, column: 40, scope: !7998)
!8000 = !DILocation(line: 673, column: 5, scope: !7998)
!8001 = !DILocation(line: 674, column: 9, scope: !8002)
!8002 = distinct !DILexicalBlock(scope: !7992, file: !1149, line: 674, column: 9)
!8003 = !DILocation(line: 674, column: 41, scope: !8002)
!8004 = !DILocation(line: 674, column: 9, scope: !7992)
!8005 = !DILocation(line: 675, column: 48, scope: !8006)
!8006 = distinct !DILexicalBlock(scope: !8002, file: !1149, line: 674, column: 47)
!8007 = !DILocation(line: 675, column: 41, scope: !8006)
!8008 = !DILocation(line: 676, column: 5, scope: !8006)
!8009 = !DILocation(line: 679, column: 33, scope: !7992)
!8010 = !DILocation(line: 679, column: 48, scope: !7992)
!8011 = !DILocation(line: 679, column: 25, scope: !7992)
!8012 = !DILocation(line: 680, column: 25, scope: !7992)
!8013 = !DILocation(line: 686, column: 5, scope: !7992)
!8014 = !DILocation(line: 688, column: 1, scope: !7992)
!8015 = distinct !DISubprogram(name: "SF_DAL_DEV_SWITCH_TO_HIGH_FQ", scope: !1149, file: !1149, line: 689, type: !318, scopeLine: 690, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !320)
!8016 = !DILocation(line: 692, column: 9, scope: !8017)
!8017 = distinct !DILexicalBlock(scope: !8015, file: !1149, line: 692, column: 9)
!8018 = !DILocation(line: 692, column: 40, scope: !8017)
!8019 = !DILocation(line: 692, column: 9, scope: !8015)
!8020 = !DILocation(line: 693, column: 29, scope: !8021)
!8021 = distinct !DILexicalBlock(scope: !8017, file: !1149, line: 692, column: 46)
!8022 = !DILocation(line: 694, column: 5, scope: !8021)
!8023 = !DILocation(line: 695, column: 9, scope: !8024)
!8024 = distinct !DILexicalBlock(scope: !8015, file: !1149, line: 695, column: 9)
!8025 = !DILocation(line: 695, column: 41, scope: !8024)
!8026 = !DILocation(line: 695, column: 9, scope: !8015)
!8027 = !DILocation(line: 696, column: 29, scope: !8028)
!8028 = distinct !DILexicalBlock(scope: !8024, file: !1149, line: 695, column: 47)
!8029 = !DILocation(line: 697, column: 5, scope: !8028)
!8030 = !DILocation(line: 698, column: 5, scope: !8015)
!8031 = !DILocation(line: 699, column: 1, scope: !8015)
!8032 = distinct !DISubprogram(name: "ust_get_current_time", scope: !1245, file: !1245, line: 91, type: !4034, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !8033)
!8033 = !{!8034}
!8034 = !DILocalVariable(name: "counter", scope: !8032, file: !1245, line: 102, type: !105)
!8035 = !DILocation(line: 0, scope: !8032)
!8036 = !DILocation(line: 110, column: 5, scope: !8032)
!8037 = distinct !DISubprogram(name: "get_current_32K_counter", scope: !1245, file: !1245, line: 114, type: !4034, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !8038)
!8038 = !{!8039}
!8039 = !DILocalVariable(name: "counter", scope: !8037, file: !1245, line: 125, type: !105)
!8040 = !DILocation(line: 0, scope: !8037)
!8041 = !DILocation(line: 133, column: 5, scope: !8037)
!8042 = distinct !DISubprogram(name: "ust_busy_wait", scope: !1245, file: !1245, line: 137, type: !7166, scopeLine: 138, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !8043)
!8043 = !{!8044}
!8044 = !DILocalVariable(name: "delay_us", arg: 1, scope: !8042, file: !1245, line: 137, type: !105)
!8045 = !DILocation(line: 0, scope: !8042)
!8046 = !DILocation(line: 142, column: 5, scope: !8042)
!8047 = !DILocation(line: 144, column: 1, scope: !8042)
!8048 = distinct !DISubprogram(name: "SaveAndSetIRQMask", scope: !1245, file: !1245, line: 163, type: !4034, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !8049)
!8049 = !{!8050}
!8050 = !DILocalVariable(name: "mask", scope: !8048, file: !1245, line: 165, type: !105)
!8051 = !DILocation(line: 166, column: 12, scope: !8048)
!8052 = !DILocation(line: 0, scope: !8048)
!8053 = !DILocation(line: 167, column: 5, scope: !8048)
!8054 = distinct !DISubprogram(name: "RestoreIRQMask", scope: !1245, file: !1245, line: 171, type: !7166, scopeLine: 172, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !8055)
!8055 = !{!8056}
!8056 = !DILocalVariable(name: "mask", arg: 1, scope: !8054, file: !1245, line: 171, type: !105)
!8057 = !DILocation(line: 0, scope: !8054)
!8058 = !DILocation(line: 173, column: 5, scope: !8054)
!8059 = !DILocation(line: 174, column: 1, scope: !8054)
!8060 = distinct !DISubprogram(name: "SF_DAL_UnlockBlock_None", scope: !1245, file: !1245, line: 199, type: !1517, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !8061)
!8061 = !{!8062}
!8062 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8060, file: !1245, line: 199, type: !124)
!8063 = !DILocation(line: 0, scope: !8060)
!8064 = !DILocation(line: 201, column: 5, scope: !8060)
!8065 = distinct !DISubprogram(name: "sfi_60qbit_test", scope: !1245, file: !1245, line: 388, type: !8066, scopeLine: 389, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !320)
!8066 = !DISubroutineType(types: !8067)
!8067 = !{!1124}
!8068 = !DILocation(line: 390, column: 5, scope: !8065)
!8069 = distinct !DISubprogram(name: "CompareData", scope: !1245, file: !1245, line: 872, type: !8070, scopeLine: 873, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !8072)
!8070 = !DISubroutineType(types: !8071)
!8071 = !{!321, !124, !124, !105}
!8072 = !{!8073, !8074, !8075, !8076, !8077, !8080, !8081, !8084, !8085, !8087}
!8073 = !DILocalVariable(name: "Address", arg: 1, scope: !8069, file: !1245, line: 872, type: !124)
!8074 = !DILocalVariable(name: "Data", arg: 2, scope: !8069, file: !1245, line: 872, type: !124)
!8075 = !DILocalVariable(name: "Length", arg: 3, scope: !8069, file: !1245, line: 872, type: !105)
!8076 = !DILocalVariable(name: "i", scope: !8069, file: !1245, line: 874, type: !105)
!8077 = !DILocalVariable(name: "Source", scope: !8078, file: !1245, line: 877, type: !1186)
!8078 = distinct !DILexicalBlock(scope: !8079, file: !1245, line: 876, column: 74)
!8079 = distinct !DILexicalBlock(scope: !8069, file: !1245, line: 876, column: 9)
!8080 = !DILocalVariable(name: "Dest", scope: !8078, file: !1245, line: 878, type: !1186)
!8081 = !DILocalVariable(name: "Source", scope: !8082, file: !1245, line: 885, type: !1217)
!8082 = distinct !DILexicalBlock(scope: !8083, file: !1245, line: 884, column: 79)
!8083 = distinct !DILexicalBlock(scope: !8079, file: !1245, line: 884, column: 16)
!8084 = !DILocalVariable(name: "Dest", scope: !8082, file: !1245, line: 886, type: !1217)
!8085 = !DILocalVariable(name: "Source", scope: !8086, file: !1245, line: 893, type: !818)
!8086 = distinct !DILexicalBlock(scope: !8083, file: !1245, line: 892, column: 12)
!8087 = !DILocalVariable(name: "Dest", scope: !8086, file: !1245, line: 894, type: !818)
!8088 = !DILocation(line: 0, scope: !8069)
!8089 = !DILocation(line: 876, column: 11, scope: !8079)
!8090 = !DILocation(line: 876, column: 42, scope: !8079)
!8091 = !DILocation(line: 877, column: 28, scope: !8078)
!8092 = !DILocation(line: 0, scope: !8078)
!8093 = !DILocation(line: 878, column: 26, scope: !8078)
!8094 = !DILocation(line: 879, column: 23, scope: !8095)
!8095 = distinct !DILexicalBlock(scope: !8096, file: !1245, line: 879, column: 9)
!8096 = distinct !DILexicalBlock(scope: !8078, file: !1245, line: 879, column: 9)
!8097 = !DILocation(line: 879, column: 9, scope: !8096)
!8098 = !DILocation(line: 880, column: 17, scope: !8099)
!8099 = distinct !DILexicalBlock(scope: !8100, file: !1245, line: 880, column: 17)
!8100 = distinct !DILexicalBlock(scope: !8095, file: !1245, line: 879, column: 68)
!8101 = !DILocation(line: 880, column: 30, scope: !8099)
!8102 = !DILocation(line: 880, column: 27, scope: !8099)
!8103 = !DILocation(line: 879, column: 64, scope: !8095)
!8104 = !DILocation(line: 880, column: 17, scope: !8100)
!8105 = distinct !{!8105, !8097, !8106}
!8106 = !DILocation(line: 883, column: 9, scope: !8096)
!8107 = !DILocation(line: 884, column: 47, scope: !8083)
!8108 = !DILocation(line: 895, column: 23, scope: !8109)
!8109 = distinct !DILexicalBlock(scope: !8110, file: !1245, line: 895, column: 9)
!8110 = distinct !DILexicalBlock(scope: !8086, file: !1245, line: 895, column: 9)
!8111 = !DILocation(line: 895, column: 9, scope: !8110)
!8112 = !DILocation(line: 885, column: 28, scope: !8082)
!8113 = !DILocation(line: 0, scope: !8082)
!8114 = !DILocation(line: 886, column: 26, scope: !8082)
!8115 = !DILocation(line: 887, column: 23, scope: !8116)
!8116 = distinct !DILexicalBlock(scope: !8117, file: !1245, line: 887, column: 9)
!8117 = distinct !DILexicalBlock(scope: !8082, file: !1245, line: 887, column: 9)
!8118 = !DILocation(line: 887, column: 9, scope: !8117)
!8119 = !DILocation(line: 888, column: 17, scope: !8120)
!8120 = distinct !DILexicalBlock(scope: !8121, file: !1245, line: 888, column: 17)
!8121 = distinct !DILexicalBlock(scope: !8116, file: !1245, line: 887, column: 68)
!8122 = !DILocation(line: 888, column: 30, scope: !8120)
!8123 = !DILocation(line: 888, column: 27, scope: !8120)
!8124 = !DILocation(line: 887, column: 64, scope: !8116)
!8125 = !DILocation(line: 888, column: 17, scope: !8121)
!8126 = distinct !{!8126, !8118, !8127}
!8127 = !DILocation(line: 891, column: 9, scope: !8117)
!8128 = !DILocation(line: 896, column: 17, scope: !8129)
!8129 = distinct !DILexicalBlock(scope: !8130, file: !1245, line: 896, column: 17)
!8130 = distinct !DILexicalBlock(scope: !8109, file: !1245, line: 895, column: 38)
!8131 = !DILocation(line: 896, column: 30, scope: !8129)
!8132 = !DILocation(line: 896, column: 27, scope: !8129)
!8133 = !DILocation(line: 895, column: 34, scope: !8109)
!8134 = !DILocation(line: 896, column: 17, scope: !8130)
!8135 = distinct !{!8135, !8111, !8136}
!8136 = !DILocation(line: 899, column: 9, scope: !8110)
!8137 = !DILocation(line: 902, column: 1, scope: !8069)
!8138 = distinct !DISubprogram(name: "Flash_ProgramData", scope: !1245, file: !1245, line: 919, type: !8139, scopeLine: 920, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !8141)
!8139 = !DISubroutineType(types: !8140)
!8140 = !{null, !124, !124, !105}
!8141 = !{!8142, !8143, !8144, !8145, !8146, !8147, !8148, !8149, !8150, !8151, !8152}
!8142 = !DILocalVariable(name: "Target", arg: 1, scope: !8138, file: !1245, line: 919, type: !124)
!8143 = !DILocalVariable(name: "Data", arg: 2, scope: !8138, file: !1245, line: 919, type: !124)
!8144 = !DILocalVariable(name: "Size", arg: 3, scope: !8138, file: !1245, line: 919, type: !105)
!8145 = !DILocalVariable(name: "D", scope: !8138, file: !1245, line: 921, type: !1415)
!8146 = !DILocalVariable(name: "address", scope: !8138, file: !1245, line: 922, type: !105)
!8147 = !DILocalVariable(name: "p_data", scope: !8138, file: !1245, line: 923, type: !818)
!8148 = !DILocalVariable(name: "cmd1", scope: !8138, file: !1245, line: 924, type: !105)
!8149 = !DILocalVariable(name: "length", scope: !8138, file: !1245, line: 924, type: !105)
!8150 = !DILocalVariable(name: "written", scope: !8138, file: !1245, line: 924, type: !105)
!8151 = !DILocalVariable(name: "status", scope: !8138, file: !1245, line: 925, type: !1467)
!8152 = !DILocalVariable(name: "savedMask", scope: !8138, file: !1245, line: 926, type: !105)
!8153 = !DILocation(line: 0, scope: !8138)
!8154 = !DILocation(line: 921, column: 60, scope: !8138)
!8155 = !DILocation(line: 923, column: 5, scope: !8138)
!8156 = !DILocation(line: 923, column: 19, scope: !8138)
!8157 = !DILocation(line: 924, column: 5, scope: !8138)
!8158 = !DILocation(line: 932, column: 9, scope: !8138)
!8159 = !DILocation(line: 933, column: 8, scope: !8138)
!8160 = !DILocation(line: 933, column: 21, scope: !8138)
!8161 = !DILocation(line: 935, column: 14, scope: !8138)
!8162 = !DILocation(line: 935, column: 5, scope: !8138)
!8163 = !DILocation(line: 922, column: 29, scope: !8138)
!8164 = !DILocation(line: 937, column: 18, scope: !8165)
!8165 = distinct !DILexicalBlock(scope: !8138, file: !1245, line: 935, column: 23)
!8166 = !DILocation(line: 937, column: 35, scope: !8165)
!8167 = !DILocation(line: 937, column: 74, scope: !8165)
!8168 = !DILocation(line: 937, column: 50, scope: !8165)
!8169 = !DILocation(line: 937, column: 39, scope: !8165)
!8170 = !DILocation(line: 940, column: 35, scope: !8165)
!8171 = !DILocation(line: 940, column: 29, scope: !8165)
!8172 = !DILocation(line: 940, column: 16, scope: !8165)
!8173 = !DILocation(line: 942, column: 18, scope: !8174)
!8174 = distinct !DILexicalBlock(scope: !8165, file: !1245, line: 942, column: 13)
!8175 = !DILocation(line: 942, column: 29, scope: !8174)
!8176 = !DILocation(line: 942, column: 13, scope: !8165)
!8177 = !DILocation(line: 943, column: 13, scope: !8178)
!8178 = distinct !DILexicalBlock(scope: !8174, file: !1245, line: 942, column: 55)
!8179 = !DILocation(line: 944, column: 9, scope: !8178)
!8180 = !DILocation(line: 947, column: 16, scope: !8181)
!8181 = distinct !DILexicalBlock(scope: !8165, file: !1245, line: 947, column: 13)
!8182 = !DILocation(line: 947, column: 29, scope: !8181)
!8183 = !DILocation(line: 0, scope: !8181)
!8184 = !DILocation(line: 947, column: 13, scope: !8165)
!8185 = !DILocation(line: 948, column: 20, scope: !8186)
!8186 = distinct !DILexicalBlock(scope: !8181, file: !1245, line: 947, column: 35)
!8187 = !DILocation(line: 949, column: 32, scope: !8186)
!8188 = !DILocation(line: 949, column: 40, scope: !8186)
!8189 = !DILocation(line: 949, column: 13, scope: !8186)
!8190 = !DILocation(line: 950, column: 9, scope: !8186)
!8191 = !DILocation(line: 953, column: 20, scope: !8192)
!8192 = distinct !DILexicalBlock(scope: !8181, file: !1245, line: 952, column: 9)
!8193 = !DILocation(line: 954, column: 32, scope: !8192)
!8194 = !DILocation(line: 954, column: 40, scope: !8192)
!8195 = !DILocation(line: 954, column: 13, scope: !8192)
!8196 = !DILocation(line: 957, column: 21, scope: !8165)
!8197 = !DILocation(line: 963, column: 45, scope: !8165)
!8198 = !DILocation(line: 963, column: 42, scope: !8165)
!8199 = !DILocation(line: 963, column: 40, scope: !8165)
!8200 = !DILocation(line: 963, column: 58, scope: !8165)
!8201 = !DILocation(line: 963, column: 29, scope: !8165)
!8202 = !DILocation(line: 964, column: 28, scope: !8165)
!8203 = !DILocation(line: 965, column: 37, scope: !8165)
!8204 = !DILocation(line: 966, column: 9, scope: !8165)
!8205 = !DILocation(line: 967, column: 26, scope: !8165)
!8206 = !DILocation(line: 967, column: 9, scope: !8165)
!8207 = !DILocation(line: 968, column: 29, scope: !8165)
!8208 = !DILocation(line: 968, column: 9, scope: !8165)
!8209 = !DILocation(line: 972, column: 9, scope: !8165)
!8210 = !DILocation(line: 978, column: 9, scope: !8165)
!8211 = !DILocation(line: 979, column: 50, scope: !8212)
!8212 = distinct !DILexicalBlock(scope: !8165, file: !1245, line: 978, column: 22)
!8213 = !DILocation(line: 979, column: 55, scope: !8212)
!8214 = !DILocation(line: 979, column: 22, scope: !8212)
!8215 = !DILocation(line: 980, column: 35, scope: !8216)
!8216 = distinct !DILexicalBlock(scope: !8212, file: !1245, line: 980, column: 17)
!8217 = !DILocation(line: 980, column: 32, scope: !8216)
!8218 = !DILocation(line: 980, column: 30, scope: !8216)
!8219 = !DILocation(line: 980, column: 19, scope: !8216)
!8220 = !DILocation(line: 980, column: 17, scope: !8212)
!8221 = distinct !{!8221, !8210, !8222}
!8222 = !DILocation(line: 983, column: 9, scope: !8165)
!8223 = !DILocation(line: 991, column: 9, scope: !8165)
!8224 = !DILocation(line: 993, column: 19, scope: !8165)
!8225 = !DILocation(line: 993, column: 16, scope: !8165)
!8226 = !DILocation(line: 994, column: 14, scope: !8165)
!8227 = !DILocation(line: 995, column: 17, scope: !8165)
!8228 = distinct !{!8228, !8162, !8229}
!8229 = !DILocation(line: 996, column: 5, scope: !8138)
!8230 = !DILocation(line: 998, column: 21, scope: !8138)
!8231 = !DILocation(line: 1005, column: 9, scope: !8138)
!8232 = !DILocation(line: 1008, column: 1, scope: !8138)
!8233 = distinct !DISubprogram(name: "SF_DAL_GetDevLock", scope: !1245, file: !1245, line: 1427, type: !8234, scopeLine: 1428, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !8236)
!8234 = !DISubroutineType(types: !8235)
!8235 = !{null, !1415}
!8236 = !{!8237, !8238}
!8237 = !DILocalVariable(name: "D", arg: 1, scope: !8233, file: !1245, line: 1427, type: !1415)
!8238 = !DILocalVariable(name: "Result", scope: !8233, file: !1245, line: 1429, type: !2081)
!8239 = !DILocation(line: 0, scope: !8233)
!8240 = !DILocation(line: 1430, column: 5, scope: !8233)
!8241 = !DILocation(line: 1431, column: 18, scope: !8242)
!8242 = distinct !DILexicalBlock(scope: !8233, file: !1245, line: 1430, column: 8)
!8243 = !DILocation(line: 1432, column: 21, scope: !8233)
!8244 = !DILocation(line: 1432, column: 5, scope: !8242)
!8245 = distinct !{!8245, !8240, !8246}
!8246 = !DILocation(line: 1432, column: 43, scope: !8233)
!8247 = !DILocation(line: 1433, column: 1, scope: !8233)
!8248 = distinct !DISubprogram(name: "SF_DAL_Dev_WriteEnable", scope: !1245, file: !1245, line: 3478, type: !8234, scopeLine: 3479, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !8249)
!8249 = !{!8250}
!8250 = !DILocalVariable(name: "D", arg: 1, scope: !8248, file: !1245, line: 3478, type: !1415)
!8251 = !DILocation(line: 0, scope: !8248)
!8252 = !DILocation(line: 3480, column: 30, scope: !8248)
!8253 = !DILocation(line: 3480, column: 35, scope: !8248)
!8254 = !DILocation(line: 3480, column: 27, scope: !8248)
!8255 = !DILocation(line: 3480, column: 5, scope: !8248)
!8256 = !DILocation(line: 3481, column: 1, scope: !8248)
!8257 = distinct !DISubprogram(name: "SF_DAL_FLAG_BUSY_SET", scope: !1245, file: !1245, line: 2382, type: !318, scopeLine: 2383, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !8258)
!8258 = !{!8259}
!8259 = !DILocalVariable(name: "savedMask", scope: !8257, file: !1245, line: 2384, type: !105)
!8260 = !DILocation(line: 2385, column: 17, scope: !8257)
!8261 = !DILocation(line: 0, scope: !8257)
!8262 = !DILocation(line: 2390, column: 20, scope: !8257)
!8263 = !DILocation(line: 2391, column: 5, scope: !8257)
!8264 = !DILocation(line: 2392, column: 1, scope: !8257)
!8265 = distinct !DISubprogram(name: "SF_DAL_Dev_ReadStatus", scope: !1245, file: !1245, line: 3536, type: !8266, scopeLine: 3537, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !8268)
!8266 = !DISubroutineType(types: !8267)
!8267 = !{!105, !1415, !127}
!8268 = !{!8269, !8270, !8271, !8272}
!8269 = !DILocalVariable(name: "D", arg: 1, scope: !8265, file: !1245, line: 3536, type: !1415)
!8270 = !DILocalVariable(name: "cmd", arg: 2, scope: !8265, file: !1245, line: 3536, type: !127)
!8271 = !DILocalVariable(name: "savedMask", scope: !8265, file: !1245, line: 3538, type: !105)
!8272 = !DILocalVariable(name: "result", scope: !8265, file: !1245, line: 3539, type: !105)
!8273 = !DILocation(line: 0, scope: !8265)
!8274 = !DILocation(line: 3541, column: 17, scope: !8265)
!8275 = !DILocation(line: 3542, column: 22, scope: !8265)
!8276 = !DILocation(line: 3542, column: 5, scope: !8265)
!8277 = !DILocation(line: 3543, column: 35, scope: !8265)
!8278 = !DILocation(line: 3543, column: 33, scope: !8265)
!8279 = !DILocation(line: 3544, column: 25, scope: !8265)
!8280 = !DILocation(line: 3545, column: 24, scope: !8265)
!8281 = !DILocation(line: 3546, column: 25, scope: !8265)
!8282 = !DILocation(line: 3546, column: 5, scope: !8265)
!8283 = !DILocation(line: 3547, column: 42, scope: !8265)
!8284 = !DILocation(line: 3547, column: 60, scope: !8265)
!8285 = !DILocation(line: 3547, column: 14, scope: !8265)
!8286 = !DILocation(line: 3548, column: 5, scope: !8265)
!8287 = !DILocation(line: 3550, column: 5, scope: !8265)
!8288 = distinct !DISubprogram(name: "SF_DAL_FLAG_BUSY_CLR", scope: !1245, file: !1245, line: 2393, type: !318, scopeLine: 2394, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !8289)
!8289 = !{!8290}
!8290 = !DILocalVariable(name: "savedMask", scope: !8288, file: !1245, line: 2395, type: !105)
!8291 = !DILocation(line: 2396, column: 17, scope: !8288)
!8292 = !DILocation(line: 0, scope: !8288)
!8293 = !DILocation(line: 2401, column: 20, scope: !8288)
!8294 = !DILocation(line: 2402, column: 5, scope: !8295)
!8295 = distinct !DILexicalBlock(scope: !8296, file: !1245, line: 2402, column: 5)
!8296 = distinct !DILexicalBlock(scope: !8288, file: !1245, line: 2402, column: 5)
!8297 = !DILocation(line: 2403, column: 5, scope: !8288)
!8298 = !DILocation(line: 2404, column: 1, scope: !8288)
!8299 = distinct !DISubprogram(name: "SF_DAL_FreeDevLock", scope: !1245, file: !1245, line: 1440, type: !8234, scopeLine: 1441, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !8300)
!8300 = !{!8301, !8302}
!8301 = !DILocalVariable(name: "D", arg: 1, scope: !8299, file: !1245, line: 1440, type: !1415)
!8302 = !DILocalVariable(name: "savedMask", scope: !8299, file: !1245, line: 1442, type: !1124)
!8303 = !DILocation(line: 0, scope: !8299)
!8304 = !DILocation(line: 1443, column: 17, scope: !8299)
!8305 = !DILocation(line: 1444, column: 9, scope: !8306)
!8306 = distinct !DILexicalBlock(scope: !8299, file: !1245, line: 1444, column: 9)
!8307 = !DILocation(line: 1444, column: 9, scope: !8299)
!8308 = !DILocation(line: 1445, column: 17, scope: !8309)
!8309 = distinct !DILexicalBlock(scope: !8306, file: !1245, line: 1444, column: 24)
!8310 = !DILocation(line: 1446, column: 9, scope: !8309)
!8311 = !DILocation(line: 1451, column: 1, scope: !8299)
!8312 = !DILocation(line: 1448, column: 9, scope: !8313)
!8313 = distinct !DILexicalBlock(scope: !8306, file: !1245, line: 1447, column: 12)
!8314 = !DILocation(line: 1449, column: 9, scope: !8315)
!8315 = distinct !DILexicalBlock(scope: !8316, file: !1245, line: 1449, column: 9)
!8316 = distinct !DILexicalBlock(scope: !8317, file: !1245, line: 1449, column: 9)
!8317 = distinct !DILexicalBlock(scope: !8313, file: !1245, line: 1449, column: 9)
!8318 = distinct !DISubprogram(name: "Flash_ReturnReady", scope: !1245, file: !1245, line: 1027, type: !318, scopeLine: 1028, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !8319)
!8319 = !{!8320, !8321, !8322, !8323}
!8320 = !DILocalVariable(name: "D", scope: !8318, file: !1245, line: 1029, type: !1415)
!8321 = !DILocalVariable(name: "status", scope: !8318, file: !1245, line: 1030, type: !1467)
!8322 = !DILocalVariable(name: "savedMask", scope: !8318, file: !1245, line: 1031, type: !105)
!8323 = !DILocalVariable(name: "duration", scope: !8324, file: !1245, line: 1231, type: !105)
!8324 = distinct !DILexicalBlock(scope: !8318, file: !1245, line: 1230, column: 5)
!8325 = !DILocation(line: 0, scope: !8318)
!8326 = !DILocation(line: 1033, column: 17, scope: !8318)
!8327 = !DILocation(line: 1034, column: 8, scope: !8328)
!8328 = distinct !DILexicalBlock(scope: !8318, file: !1245, line: 1034, column: 8)
!8329 = !DILocation(line: 1034, column: 30, scope: !8328)
!8330 = !DILocation(line: 1034, column: 8, scope: !8318)
!8331 = !DILocation(line: 1039, column: 27, scope: !8318)
!8332 = !DILocation(line: 1058, column: 48, scope: !8333)
!8333 = distinct !DILexicalBlock(scope: !8318, file: !1245, line: 1055, column: 5)
!8334 = !DILocation(line: 1069, column: 5, scope: !8335)
!8335 = distinct !DILexicalBlock(scope: !8336, file: !1245, line: 1069, column: 5)
!8336 = distinct !DILexicalBlock(scope: !8318, file: !1245, line: 1069, column: 5)
!8337 = !DILocation(line: 1069, column: 5, scope: !8336)
!8338 = !DILocation(line: 1069, column: 5, scope: !8339)
!8339 = distinct !DILexicalBlock(scope: !8335, file: !1245, line: 1069, column: 5)
!8340 = !DILocation(line: 1075, column: 10, scope: !8341)
!8341 = distinct !DILexicalBlock(scope: !8318, file: !1245, line: 1075, column: 9)
!8342 = !DILocation(line: 1075, column: 27, scope: !8341)
!8343 = !DILocation(line: 1075, column: 33, scope: !8341)
!8344 = !DILocation(line: 1075, column: 40, scope: !8341)
!8345 = !DILocation(line: 1075, column: 53, scope: !8341)
!8346 = !DILocation(line: 1075, column: 9, scope: !8318)
!8347 = !DILocation(line: 1084, column: 9, scope: !8348)
!8348 = distinct !DILexicalBlock(scope: !8341, file: !1245, line: 1083, column: 11)
!8349 = !DILocation(line: 1085, column: 50, scope: !8350)
!8350 = distinct !DILexicalBlock(scope: !8348, file: !1245, line: 1084, column: 21)
!8351 = !DILocation(line: 1085, column: 55, scope: !8350)
!8352 = !DILocation(line: 1085, column: 22, scope: !8350)
!8353 = !DILocation(line: 1086, column: 35, scope: !8354)
!8354 = distinct !DILexicalBlock(scope: !8350, file: !1245, line: 1086, column: 17)
!8355 = !DILocation(line: 1086, column: 32, scope: !8354)
!8356 = !DILocation(line: 1086, column: 30, scope: !8354)
!8357 = !DILocation(line: 1086, column: 19, scope: !8354)
!8358 = !DILocation(line: 1086, column: 17, scope: !8350)
!8359 = distinct !{!8359, !8347, !8360}
!8360 = !DILocation(line: 1089, column: 9, scope: !8348)
!8361 = !DILocation(line: 1107, column: 11, scope: !8362)
!8362 = distinct !DILexicalBlock(scope: !8318, file: !1245, line: 1107, column: 9)
!8363 = !DILocation(line: 1107, column: 30, scope: !8362)
!8364 = !DILocation(line: 1117, column: 46, scope: !8365)
!8365 = distinct !DILexicalBlock(scope: !8362, file: !1245, line: 1107, column: 53)
!8366 = !DILocation(line: 1117, column: 51, scope: !8365)
!8367 = !DILocation(line: 1117, column: 18, scope: !8365)
!8368 = !DILocation(line: 1120, column: 31, scope: !8369)
!8369 = distinct !DILexicalBlock(scope: !8365, file: !1245, line: 1120, column: 13)
!8370 = !DILocation(line: 1120, column: 28, scope: !8369)
!8371 = !DILocation(line: 1120, column: 26, scope: !8369)
!8372 = !DILocation(line: 1120, column: 15, scope: !8369)
!8373 = !DILocation(line: 1120, column: 13, scope: !8365)
!8374 = !DILocation(line: 1128, column: 13, scope: !8375)
!8375 = distinct !DILexicalBlock(scope: !8369, file: !1245, line: 1120, column: 55)
!8376 = !DILocation(line: 1131, column: 13, scope: !8375)
!8377 = !DILocation(line: 1132, column: 54, scope: !8378)
!8378 = distinct !DILexicalBlock(scope: !8375, file: !1245, line: 1131, column: 23)
!8379 = !DILocation(line: 1132, column: 59, scope: !8378)
!8380 = !DILocation(line: 1132, column: 26, scope: !8378)
!8381 = !DILocation(line: 1133, column: 39, scope: !8382)
!8382 = distinct !DILexicalBlock(scope: !8378, file: !1245, line: 1133, column: 21)
!8383 = !DILocation(line: 1133, column: 36, scope: !8382)
!8384 = !DILocation(line: 1133, column: 34, scope: !8382)
!8385 = !DILocation(line: 1133, column: 23, scope: !8382)
!8386 = !DILocation(line: 1133, column: 21, scope: !8378)
!8387 = distinct !{!8387, !8376, !8388}
!8388 = !DILocation(line: 1158, column: 13, scope: !8375)
!8389 = !DILocation(line: 1162, column: 21, scope: !8390)
!8390 = distinct !DILexicalBlock(scope: !8375, file: !1245, line: 1162, column: 17)
!8391 = !DILocation(line: 1162, column: 32, scope: !8390)
!8392 = !DILocation(line: 1162, column: 51, scope: !8390)
!8393 = !DILocation(line: 1162, column: 58, scope: !8390)
!8394 = !DILocation(line: 1162, column: 71, scope: !8390)
!8395 = !DILocation(line: 1162, column: 17, scope: !8375)
!8396 = !DILocation(line: 1164, column: 45, scope: !8397)
!8397 = distinct !DILexicalBlock(scope: !8390, file: !1245, line: 1162, column: 91)
!8398 = !DILocation(line: 1165, column: 36, scope: !8397)
!8399 = !DILocation(line: 1166, column: 37, scope: !8397)
!8400 = !DILocation(line: 1167, column: 34, scope: !8397)
!8401 = !DILocation(line: 1167, column: 17, scope: !8397)
!8402 = !DILocation(line: 1168, column: 37, scope: !8397)
!8403 = !DILocation(line: 1168, column: 17, scope: !8397)
!8404 = !DILocation(line: 1171, column: 50, scope: !8397)
!8405 = !DILocation(line: 1172, column: 37, scope: !8397)
!8406 = !DILocation(line: 1173, column: 45, scope: !8397)
!8407 = !DILocation(line: 1174, column: 34, scope: !8397)
!8408 = !DILocation(line: 1174, column: 17, scope: !8397)
!8409 = !DILocation(line: 1175, column: 37, scope: !8397)
!8410 = !DILocation(line: 1175, column: 17, scope: !8397)
!8411 = !DILocation(line: 1178, column: 17, scope: !8397)
!8412 = !DILocation(line: 1179, column: 49, scope: !8413)
!8413 = distinct !DILexicalBlock(scope: !8397, file: !1245, line: 1178, column: 20)
!8414 = !DILocation(line: 1180, column: 40, scope: !8413)
!8415 = !DILocation(line: 1181, column: 41, scope: !8413)
!8416 = !DILocation(line: 1182, column: 38, scope: !8413)
!8417 = !DILocation(line: 1182, column: 21, scope: !8413)
!8418 = !DILocation(line: 1183, column: 41, scope: !8413)
!8419 = !DILocation(line: 1183, column: 21, scope: !8413)
!8420 = !DILocation(line: 1184, column: 43, scope: !8413)
!8421 = !DILocation(line: 1185, column: 17, scope: !8413)
!8422 = distinct !{!8422, !8411, !8423}
!8423 = !DILocation(line: 1185, column: 32, scope: !8397)
!8424 = !DILocation(line: 1194, column: 13, scope: !8375)
!8425 = !DILocation(line: 1195, column: 9, scope: !8375)
!8426 = !DILocation(line: 1197, column: 21, scope: !8427)
!8427 = distinct !DILexicalBlock(scope: !8428, file: !1245, line: 1197, column: 17)
!8428 = distinct !DILexicalBlock(scope: !8369, file: !1245, line: 1195, column: 16)
!8429 = !DILocation(line: 1197, column: 32, scope: !8427)
!8430 = !DILocation(line: 1197, column: 53, scope: !8427)
!8431 = !DILocation(line: 1197, column: 60, scope: !8427)
!8432 = !DILocation(line: 1197, column: 76, scope: !8427)
!8433 = !DILocation(line: 1197, column: 17, scope: !8428)
!8434 = !DILocation(line: 1198, column: 54, scope: !8435)
!8435 = distinct !DILexicalBlock(scope: !8427, file: !1245, line: 1197, column: 98)
!8436 = !DILocation(line: 1198, column: 59, scope: !8435)
!8437 = !DILocation(line: 1198, column: 26, scope: !8435)
!8438 = !DILocation(line: 1199, column: 40, scope: !8439)
!8439 = distinct !DILexicalBlock(scope: !8435, file: !1245, line: 1199, column: 21)
!8440 = !DILocation(line: 1199, column: 37, scope: !8439)
!8441 = !DILocation(line: 1199, column: 35, scope: !8439)
!8442 = !DILocation(line: 1199, column: 24, scope: !8439)
!8443 = !DILocation(line: 1199, column: 63, scope: !8439)
!8444 = !DILocation(line: 1200, column: 41, scope: !8439)
!8445 = !DILocation(line: 1200, column: 39, scope: !8439)
!8446 = !DILocation(line: 1200, column: 28, scope: !8439)
!8447 = !DILocation(line: 1199, column: 21, scope: !8435)
!8448 = !DILocation(line: 1201, column: 40, scope: !8449)
!8449 = distinct !DILexicalBlock(scope: !8439, file: !1245, line: 1200, column: 68)
!8450 = !DILocation(line: 1201, column: 21, scope: !8449)
!8451 = !DILocation(line: 1202, column: 40, scope: !8449)
!8452 = !DILocation(line: 1202, column: 21, scope: !8449)
!8453 = !DILocation(line: 1203, column: 17, scope: !8449)
!8454 = !DILocation(line: 1206, column: 13, scope: !8428)
!8455 = !DILocation(line: 1228, column: 25, scope: !8318)
!8456 = !DILocation(line: 1231, column: 29, scope: !8324)
!8457 = !DILocation(line: 0, scope: !8324)
!8458 = !DILocation(line: 1232, column: 13, scope: !8459)
!8459 = distinct !DILexicalBlock(scope: !8324, file: !1245, line: 1232, column: 13)
!8460 = !DILocation(line: 1232, column: 43, scope: !8459)
!8461 = !DILocation(line: 1232, column: 13, scope: !8324)
!8462 = !DILocation(line: 1233, column: 43, scope: !8463)
!8463 = distinct !DILexicalBlock(scope: !8459, file: !1245, line: 1232, column: 55)
!8464 = !DILocation(line: 1234, column: 9, scope: !8463)
!8465 = !DILocation(line: 1237, column: 5, scope: !8466)
!8466 = distinct !DILexicalBlock(scope: !8467, file: !1245, line: 1237, column: 5)
!8467 = distinct !DILexicalBlock(scope: !8318, file: !1245, line: 1237, column: 5)
!8468 = !DILocation(line: 1240, column: 5, scope: !8318)
!8469 = !DILocation(line: 1241, column: 1, scope: !8318)
!8470 = distinct !DISubprogram(name: "SF_DAL_Dev_Suspend", scope: !1245, file: !1245, line: 3421, type: !8234, scopeLine: 3422, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !8471)
!8471 = !{!8472, !8473, !8474, !8475}
!8472 = !DILocalVariable(name: "D", arg: 1, scope: !8470, file: !1245, line: 3421, type: !1415)
!8473 = !DILocalVariable(name: "savedMask", scope: !8470, file: !1245, line: 3423, type: !105)
!8474 = !DILocalVariable(name: "currtime", scope: !8470, file: !1245, line: 3424, type: !105)
!8475 = !DILocalVariable(name: "difftime", scope: !8470, file: !1245, line: 3424, type: !105)
!8476 = !DILocation(line: 0, scope: !8470)
!8477 = !DILocation(line: 3427, column: 9, scope: !8478)
!8478 = distinct !DILexicalBlock(scope: !8470, file: !1245, line: 3427, column: 9)
!8479 = !DILocation(line: 3427, column: 28, scope: !8478)
!8480 = !DILocation(line: 3427, column: 9, scope: !8470)
!8481 = !DILocation(line: 3429, column: 20, scope: !8482)
!8482 = distinct !DILexicalBlock(scope: !8478, file: !1245, line: 3427, column: 59)
!8483 = !DILocation(line: 3430, column: 27, scope: !8484)
!8484 = distinct !DILexicalBlock(scope: !8482, file: !1245, line: 3430, column: 13)
!8485 = !DILocation(line: 3430, column: 24, scope: !8484)
!8486 = !DILocation(line: 3430, column: 22, scope: !8484)
!8487 = !DILocation(line: 3430, column: 13, scope: !8482)
!8488 = !DILocation(line: 3431, column: 47, scope: !8489)
!8489 = distinct !DILexicalBlock(scope: !8484, file: !1245, line: 3430, column: 46)
!8490 = !DILocation(line: 3431, column: 13, scope: !8489)
!8491 = !DILocation(line: 3432, column: 9, scope: !8489)
!8492 = !DILocation(line: 3435, column: 17, scope: !8470)
!8493 = !DILocation(line: 3436, column: 24, scope: !8470)
!8494 = !DILocation(line: 3436, column: 31, scope: !8470)
!8495 = !DILocation(line: 3436, column: 36, scope: !8470)
!8496 = !DILocation(line: 3436, column: 28, scope: !8470)
!8497 = !DILocation(line: 3436, column: 5, scope: !8470)
!8498 = !DILocation(line: 3442, column: 5, scope: !8470)
!8499 = !DILocation(line: 3443, column: 1, scope: !8470)
!8500 = distinct !DISubprogram(name: "SF_DAL_FLAG_SUS_SET", scope: !1245, file: !1245, line: 2405, type: !318, scopeLine: 2406, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !8501)
!8501 = !{!8502}
!8502 = !DILocalVariable(name: "savedMask", scope: !8500, file: !1245, line: 2407, type: !105)
!8503 = !DILocation(line: 2408, column: 17, scope: !8500)
!8504 = !DILocation(line: 0, scope: !8500)
!8505 = !DILocation(line: 2413, column: 25, scope: !8500)
!8506 = !DILocation(line: 2414, column: 5, scope: !8507)
!8507 = distinct !DILexicalBlock(scope: !8508, file: !1245, line: 2414, column: 5)
!8508 = distinct !DILexicalBlock(scope: !8500, file: !1245, line: 2414, column: 5)
!8509 = !DILocation(line: 2415, column: 5, scope: !8500)
!8510 = !DILocation(line: 2416, column: 1, scope: !8500)
!8511 = distinct !DISubprogram(name: "SF_DAL_Dev_Command", scope: !1245, file: !1245, line: 3561, type: !8512, scopeLine: 3562, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !8514)
!8512 = !DISubroutineType(types: !8513)
!8513 = !{null, !1415, !828, !127}
!8514 = !{!8515, !8516, !8517, !8518}
!8515 = !DILocalVariable(name: "D", arg: 1, scope: !8511, file: !1245, line: 3561, type: !1415)
!8516 = !DILocalVariable(name: "cmd", arg: 2, scope: !8511, file: !1245, line: 3561, type: !828)
!8517 = !DILocalVariable(name: "outlen", arg: 3, scope: !8511, file: !1245, line: 3561, type: !127)
!8518 = !DILocalVariable(name: "savedMask", scope: !8511, file: !1245, line: 3563, type: !105)
!8519 = !DILocation(line: 0, scope: !8511)
!8520 = !DILocation(line: 3565, column: 17, scope: !8511)
!8521 = !DILocation(line: 3566, column: 22, scope: !8511)
!8522 = !DILocation(line: 3566, column: 5, scope: !8511)
!8523 = !DILocation(line: 3567, column: 33, scope: !8511)
!8524 = !DILocation(line: 3568, column: 27, scope: !8511)
!8525 = !DILocation(line: 3568, column: 25, scope: !8511)
!8526 = !DILocation(line: 3569, column: 24, scope: !8511)
!8527 = !DILocation(line: 3570, column: 25, scope: !8511)
!8528 = !DILocation(line: 3570, column: 5, scope: !8511)
!8529 = !DILocation(line: 3571, column: 5, scope: !8511)
!8530 = !DILocation(line: 3573, column: 1, scope: !8511)
!8531 = distinct !DISubprogram(name: "retrieve_MTD_lock", scope: !1245, file: !1245, line: 1410, type: !8532, scopeLine: 1411, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !8534)
!8532 = !DISubroutineType(types: !8533)
!8533 = !{!2081}
!8534 = !{!8535}
!8535 = !DILocalVariable(name: "savedMask", scope: !8531, file: !1245, line: 1412, type: !1124)
!8536 = !DILocation(line: 1413, column: 17, scope: !8531)
!8537 = !DILocation(line: 0, scope: !8531)
!8538 = !DILocation(line: 1414, column: 9, scope: !8539)
!8539 = distinct !DILexicalBlock(scope: !8531, file: !1245, line: 1414, column: 9)
!8540 = !DILocation(line: 1414, column: 9, scope: !8531)
!8541 = !DILocation(line: 1415, column: 17, scope: !8542)
!8542 = distinct !DILexicalBlock(scope: !8539, file: !1245, line: 1414, column: 24)
!8543 = !DILocation(line: 1417, column: 9, scope: !8542)
!8544 = !DILocation(line: 0, scope: !8539)
!8545 = !DILocation(line: 1425, column: 1, scope: !8531)
!8546 = distinct !DISubprogram(name: "Flash_CheckReady", scope: !1245, file: !1245, line: 1257, type: !8547, scopeLine: 1258, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !8549)
!8547 = !DISubroutineType(types: !8548)
!8548 = !{!321}
!8549 = !{!8550, !8551, !8552}
!8550 = !DILocalVariable(name: "D", scope: !8546, file: !1245, line: 1259, type: !1415)
!8551 = !DILocalVariable(name: "status", scope: !8546, file: !1245, line: 1260, type: !1467)
!8552 = !DILocalVariable(name: "result", scope: !8546, file: !1245, line: 1261, type: !321)
!8553 = !DILocation(line: 1259, column: 57, scope: !8546)
!8554 = !DILocation(line: 0, scope: !8546)
!8555 = !DILocation(line: 1263, column: 5, scope: !8556)
!8556 = distinct !DILexicalBlock(scope: !8557, file: !1245, line: 1263, column: 5)
!8557 = distinct !DILexicalBlock(scope: !8546, file: !1245, line: 1263, column: 5)
!8558 = !DILocation(line: 1263, column: 5, scope: !8557)
!8559 = !DILocation(line: 1263, column: 5, scope: !8560)
!8560 = distinct !DILexicalBlock(scope: !8556, file: !1245, line: 1263, column: 5)
!8561 = !DILocation(line: 1265, column: 5, scope: !8546)
!8562 = !DILocation(line: 1267, column: 42, scope: !8546)
!8563 = !DILocation(line: 1267, column: 47, scope: !8546)
!8564 = !DILocation(line: 1267, column: 14, scope: !8546)
!8565 = !DILocation(line: 1269, column: 27, scope: !8566)
!8566 = distinct !DILexicalBlock(scope: !8546, file: !1245, line: 1269, column: 9)
!8567 = !DILocation(line: 1269, column: 24, scope: !8566)
!8568 = !DILocation(line: 1269, column: 22, scope: !8566)
!8569 = !DILocation(line: 1269, column: 11, scope: !8566)
!8570 = !DILocation(line: 1269, column: 9, scope: !8546)
!8571 = !DILocation(line: 1270, column: 9, scope: !8572)
!8572 = distinct !DILexicalBlock(scope: !8566, file: !1245, line: 1269, column: 51)
!8573 = !DILocation(line: 1272, column: 5, scope: !8572)
!8574 = !DILocation(line: 1274, column: 5, scope: !8546)
!8575 = !DILocation(line: 1276, column: 5, scope: !8546)
!8576 = distinct !DISubprogram(name: "Flash_ResumeOperation", scope: !1245, file: !1245, line: 1289, type: !318, scopeLine: 1290, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !8577)
!8577 = !{!8578}
!8578 = !DILocalVariable(name: "D", scope: !8576, file: !1245, line: 1291, type: !1415)
!8579 = !DILocation(line: 0, scope: !8576)
!8580 = !DILocation(line: 1293, column: 5, scope: !8581)
!8581 = distinct !DILexicalBlock(scope: !8582, file: !1245, line: 1293, column: 5)
!8582 = distinct !DILexicalBlock(scope: !8576, file: !1245, line: 1293, column: 5)
!8583 = !DILocation(line: 1293, column: 5, scope: !8584)
!8584 = distinct !DILexicalBlock(scope: !8581, file: !1245, line: 1293, column: 5)
!8585 = !DILocation(line: 1293, column: 5, scope: !8586)
!8586 = distinct !DILexicalBlock(scope: !8587, file: !1245, line: 1293, column: 5)
!8587 = distinct !DILexicalBlock(scope: !8588, file: !1245, line: 1293, column: 5)
!8588 = distinct !DILexicalBlock(scope: !8584, file: !1245, line: 1293, column: 5)
!8589 = !DILocation(line: 1291, column: 60, scope: !8576)
!8590 = !DILocation(line: 1295, column: 5, scope: !8576)
!8591 = !DILocation(line: 1296, column: 1, scope: !8576)
!8592 = distinct !DISubprogram(name: "SF_DAL_Dev_Resume", scope: !1245, file: !1245, line: 3452, type: !8234, scopeLine: 3453, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !8593)
!8593 = !{!8594, !8595}
!8594 = !DILocalVariable(name: "D", arg: 1, scope: !8592, file: !1245, line: 3452, type: !1415)
!8595 = !DILocalVariable(name: "savedMask", scope: !8592, file: !1245, line: 3454, type: !105)
!8596 = !DILocation(line: 0, scope: !8592)
!8597 = !DILocation(line: 3456, column: 17, scope: !8592)
!8598 = !DILocation(line: 3462, column: 24, scope: !8592)
!8599 = !DILocation(line: 3462, column: 31, scope: !8592)
!8600 = !DILocation(line: 3462, column: 36, scope: !8592)
!8601 = !DILocation(line: 3462, column: 28, scope: !8592)
!8602 = !DILocation(line: 3462, column: 5, scope: !8592)
!8603 = !DILocation(line: 3463, column: 12, scope: !8604)
!8604 = distinct !DILexicalBlock(scope: !8592, file: !1245, line: 3463, column: 9)
!8605 = !DILocation(line: 3463, column: 27, scope: !8604)
!8606 = !DILocation(line: 3463, column: 9, scope: !8592)
!8607 = !DILocation(line: 3464, column: 28, scope: !8608)
!8608 = distinct !DILexicalBlock(scope: !8604, file: !1245, line: 3463, column: 33)
!8609 = !DILocation(line: 3465, column: 5, scope: !8608)
!8610 = !DILocation(line: 3467, column: 5, scope: !8592)
!8611 = !DILocation(line: 3468, column: 5, scope: !8592)
!8612 = !DILocation(line: 3469, column: 1, scope: !8592)
!8613 = distinct !DISubprogram(name: "SF_DAL_FLAG_SUS_CLR", scope: !1245, file: !1245, line: 2417, type: !318, scopeLine: 2418, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !8614)
!8614 = !{!8615}
!8615 = !DILocalVariable(name: "savedMask", scope: !8613, file: !1245, line: 2419, type: !105)
!8616 = !DILocation(line: 2420, column: 17, scope: !8613)
!8617 = !DILocation(line: 0, scope: !8613)
!8618 = !DILocation(line: 2425, column: 25, scope: !8613)
!8619 = !DILocation(line: 2426, column: 5, scope: !8613)
!8620 = !DILocation(line: 2427, column: 1, scope: !8613)
!8621 = distinct !DISubprogram(name: "Flash_SuspendOperation", scope: !1245, file: !1245, line: 1308, type: !318, scopeLine: 1309, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !8622)
!8622 = !{!8623, !8624}
!8623 = !DILocalVariable(name: "D", scope: !8621, file: !1245, line: 1310, type: !1415)
!8624 = !DILocalVariable(name: "status", scope: !8621, file: !1245, line: 1311, type: !1467)
!8625 = !DILocation(line: 1310, column: 60, scope: !8621)
!8626 = !DILocation(line: 0, scope: !8621)
!8627 = !DILocation(line: 1313, column: 5, scope: !8628)
!8628 = distinct !DILexicalBlock(scope: !8629, file: !1245, line: 1313, column: 5)
!8629 = distinct !DILexicalBlock(scope: !8621, file: !1245, line: 1313, column: 5)
!8630 = !DILocation(line: 1313, column: 5, scope: !8631)
!8631 = distinct !DILexicalBlock(scope: !8628, file: !1245, line: 1313, column: 5)
!8632 = !DILocation(line: 1313, column: 5, scope: !8633)
!8633 = distinct !DILexicalBlock(scope: !8634, file: !1245, line: 1313, column: 5)
!8634 = distinct !DILexicalBlock(scope: !8635, file: !1245, line: 1313, column: 5)
!8635 = distinct !DILexicalBlock(scope: !8631, file: !1245, line: 1313, column: 5)
!8636 = !DILocation(line: 1315, column: 5, scope: !8637)
!8637 = distinct !DILexicalBlock(scope: !8638, file: !1245, line: 1315, column: 5)
!8638 = distinct !DILexicalBlock(scope: !8621, file: !1245, line: 1315, column: 5)
!8639 = !DILocation(line: 1315, column: 5, scope: !8638)
!8640 = !DILocation(line: 1315, column: 5, scope: !8641)
!8641 = distinct !DILexicalBlock(scope: !8637, file: !1245, line: 1315, column: 5)
!8642 = !DILocation(line: 1317, column: 5, scope: !8621)
!8643 = !DILocation(line: 1319, column: 5, scope: !8621)
!8644 = !DILocation(line: 1320, column: 46, scope: !8645)
!8645 = distinct !DILexicalBlock(scope: !8621, file: !1245, line: 1319, column: 15)
!8646 = !DILocation(line: 1320, column: 51, scope: !8645)
!8647 = !DILocation(line: 1320, column: 18, scope: !8645)
!8648 = !DILocation(line: 1322, column: 31, scope: !8649)
!8649 = distinct !DILexicalBlock(scope: !8645, file: !1245, line: 1322, column: 13)
!8650 = !DILocation(line: 1322, column: 28, scope: !8649)
!8651 = !DILocation(line: 1322, column: 26, scope: !8649)
!8652 = !DILocation(line: 1322, column: 15, scope: !8649)
!8653 = !DILocation(line: 1322, column: 13, scope: !8645)
!8654 = distinct !{!8654, !8643, !8655}
!8655 = !DILocation(line: 1325, column: 5, scope: !8621)
!8656 = !DILocation(line: 1327, column: 5, scope: !8621)
!8657 = !DILocation(line: 1328, column: 1, scope: !8621)
!8658 = distinct !DISubprogram(name: "SF_DAL_CreateDevLock", scope: !1245, file: !1245, line: 1394, type: !8234, scopeLine: 1395, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !8659)
!8659 = !{!8660}
!8660 = !DILocalVariable(name: "D", arg: 1, scope: !8658, file: !1245, line: 1394, type: !1415)
!8661 = !DILocation(line: 0, scope: !8658)
!8662 = !DILocation(line: 1401, column: 1, scope: !8658)
!8663 = distinct !DISubprogram(name: "SF_DAL_Init_MXIC", scope: !1245, file: !1245, line: 1556, type: !8664, scopeLine: 1557, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !8685)
!8664 = !DISubroutineType(types: !8665)
!8665 = !{!1124, !8666, !1415}
!8666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8667, size: 32)
!8667 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_Driver", file: !1441, line: 121, baseType: !8668)
!8668 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1441, line: 105, size: 480, elements: !8669)
!8669 = !{!8670, !8671, !8672, !8673, !8674, !8675, !8676, !8677, !8678, !8679, !8680, !8681, !8682, !8683, !8684}
!8670 = !DIDerivedType(tag: DW_TAG_member, name: "MountDevice", scope: !8668, file: !1441, line: 106, baseType: !1713, size: 32)
!8671 = !DIDerivedType(tag: DW_TAG_member, name: "ShutDown", scope: !8668, file: !1441, line: 107, baseType: !1516, size: 32, offset: 32)
!8672 = !DIDerivedType(tag: DW_TAG_member, name: "MapWindow", scope: !8668, file: !1441, line: 108, baseType: !1718, size: 32, offset: 64)
!8673 = !DIDerivedType(tag: DW_TAG_member, name: "EraseBlock", scope: !8668, file: !1441, line: 109, baseType: !1722, size: 32, offset: 96)
!8674 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramData", scope: !8668, file: !1441, line: 110, baseType: !1726, size: 32, offset: 128)
!8675 = !DIDerivedType(tag: DW_TAG_member, name: "NonBlockEraseBlock", scope: !8668, file: !1441, line: 111, baseType: !1722, size: 32, offset: 160)
!8676 = !DIDerivedType(tag: DW_TAG_member, name: "CheckDeviceReady", scope: !8668, file: !1441, line: 112, baseType: !1731, size: 32, offset: 192)
!8677 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendErase", scope: !8668, file: !1441, line: 113, baseType: !1722, size: 32, offset: 224)
!8678 = !DIDerivedType(tag: DW_TAG_member, name: "ResumeErase", scope: !8668, file: !1441, line: 114, baseType: !1722, size: 32, offset: 256)
!8679 = !DIDerivedType(tag: DW_TAG_member, name: "BlankCheck", scope: !8668, file: !1441, line: 115, baseType: !1722, size: 32, offset: 288)
!8680 = !DIDerivedType(tag: DW_TAG_member, name: "OTPAccess", scope: !8668, file: !1441, line: 116, baseType: !1738, size: 32, offset: 320)
!8681 = !DIDerivedType(tag: DW_TAG_member, name: "OTPQueryLength", scope: !8668, file: !1441, line: 117, baseType: !1743, size: 32, offset: 352)
!8682 = !DIDerivedType(tag: DW_TAG_member, name: "LockEraseBlkAddr", scope: !8668, file: !1441, line: 118, baseType: !1748, size: 32, offset: 384)
!8683 = !DIDerivedType(tag: DW_TAG_member, name: "IsEraseSuspended", scope: !8668, file: !1441, line: 119, baseType: !1752, size: 32, offset: 416)
!8684 = !DIDerivedType(tag: DW_TAG_member, name: "IOCtrl", scope: !8668, file: !1441, line: 120, baseType: !1756, size: 32, offset: 448)
!8685 = !{!8686, !8687, !8688}
!8686 = !DILocalVariable(name: "driver", arg: 1, scope: !8663, file: !1245, line: 1556, type: !8666)
!8687 = !DILocalVariable(name: "D", arg: 2, scope: !8663, file: !1245, line: 1556, type: !1415)
!8688 = !DILocalVariable(name: "smap", scope: !8663, file: !1245, line: 1558, type: !1466)
!8689 = !DILocation(line: 0, scope: !8663)
!8690 = !DILocation(line: 1561, column: 15, scope: !8663)
!8691 = !DILocation(line: 1562, column: 22, scope: !8663)
!8692 = !DILocation(line: 1563, column: 5, scope: !8663)
!8693 = !DILocation(line: 1563, column: 22, scope: !8663)
!8694 = !DILocation(line: 1565, column: 5, scope: !8663)
!8695 = !DILocation(line: 1565, column: 22, scope: !8663)
!8696 = !DILocation(line: 1566, column: 5, scope: !8663)
!8697 = !DILocation(line: 1566, column: 22, scope: !8663)
!8698 = !DILocation(line: 1568, column: 5, scope: !8663)
!8699 = !DILocation(line: 1568, column: 22, scope: !8663)
!8700 = !DILocation(line: 1569, column: 5, scope: !8663)
!8701 = !DILocation(line: 1569, column: 22, scope: !8663)
!8702 = !DILocation(line: 1570, column: 5, scope: !8663)
!8703 = !DILocation(line: 1570, column: 22, scope: !8663)
!8704 = !DILocation(line: 1573, column: 8, scope: !8663)
!8705 = !DILocation(line: 1573, column: 13, scope: !8663)
!8706 = !DILocation(line: 1573, column: 28, scope: !8663)
!8707 = !DILocation(line: 1574, column: 8, scope: !8663)
!8708 = !DILocation(line: 1574, column: 13, scope: !8663)
!8709 = !DILocation(line: 1574, column: 29, scope: !8663)
!8710 = !DILocation(line: 1575, column: 8, scope: !8663)
!8711 = !DILocation(line: 1575, column: 13, scope: !8663)
!8712 = !DILocation(line: 1575, column: 30, scope: !8663)
!8713 = !DILocation(line: 1576, column: 8, scope: !8663)
!8714 = !DILocation(line: 1576, column: 13, scope: !8663)
!8715 = !DILocation(line: 1576, column: 23, scope: !8663)
!8716 = !DILocation(line: 1577, column: 8, scope: !8663)
!8717 = !DILocation(line: 1577, column: 13, scope: !8663)
!8718 = !DILocation(line: 1577, column: 24, scope: !8663)
!8719 = !DILocation(line: 1578, column: 8, scope: !8663)
!8720 = !DILocation(line: 1578, column: 13, scope: !8663)
!8721 = !DILocation(line: 1578, column: 25, scope: !8663)
!8722 = !DILocation(line: 1579, column: 8, scope: !8663)
!8723 = !DILocation(line: 1579, column: 23, scope: !8663)
!8724 = !DILocation(line: 1583, column: 10, scope: !8725)
!8725 = distinct !DILexicalBlock(scope: !8663, file: !1245, line: 1583, column: 9)
!8726 = !DILocation(line: 1583, column: 24, scope: !8725)
!8727 = !DILocation(line: 1583, column: 32, scope: !8725)
!8728 = !DILocation(line: 1583, column: 35, scope: !8725)
!8729 = !DILocation(line: 1583, column: 49, scope: !8725)
!8730 = !DILocation(line: 1583, column: 9, scope: !8663)
!8731 = !DILocation(line: 1586, column: 12, scope: !8732)
!8732 = distinct !DILexicalBlock(scope: !8725, file: !1245, line: 1583, column: 59)
!8733 = !DILocation(line: 1586, column: 17, scope: !8732)
!8734 = !DILocation(line: 1586, column: 25, scope: !8732)
!8735 = !DILocation(line: 1587, column: 12, scope: !8732)
!8736 = !DILocation(line: 1587, column: 17, scope: !8732)
!8737 = !DILocation(line: 1587, column: 24, scope: !8732)
!8738 = !DILocation(line: 1591, column: 10, scope: !8739)
!8739 = distinct !DILexicalBlock(scope: !8663, file: !1245, line: 1591, column: 9)
!8740 = !DILocation(line: 1589, column: 5, scope: !8732)
!8741 = !DILocation(line: 1600, column: 32, scope: !8742)
!8742 = distinct !DILexicalBlock(scope: !8663, file: !1245, line: 1600, column: 9)
!8743 = !DILocation(line: 1600, column: 35, scope: !8742)
!8744 = !DILocation(line: 1600, column: 49, scope: !8742)
!8745 = !DILocation(line: 1600, column: 9, scope: !8663)
!8746 = !DILocation(line: 1601, column: 12, scope: !8747)
!8747 = distinct !DILexicalBlock(scope: !8742, file: !1245, line: 1600, column: 59)
!8748 = !DILocation(line: 1601, column: 17, scope: !8747)
!8749 = !DILocation(line: 1601, column: 25, scope: !8747)
!8750 = !DILocation(line: 1602, column: 12, scope: !8747)
!8751 = !DILocation(line: 1602, column: 17, scope: !8747)
!8752 = !DILocation(line: 1602, column: 24, scope: !8747)
!8753 = !DILocation(line: 1603, column: 5, scope: !8747)
!8754 = !DILocation(line: 1607, column: 8, scope: !8663)
!8755 = !DILocation(line: 1607, column: 20, scope: !8663)
!8756 = !DILocation(line: 1622, column: 5, scope: !8663)
!8757 = distinct !DISubprogram(name: "SF_DAL_UnlockBlock_MXIC", scope: !1245, file: !1245, line: 4553, type: !1517, scopeLine: 4554, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !8758)
!8758 = !{!8759, !8760, !8761, !8762}
!8759 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8757, file: !1245, line: 4553, type: !124)
!8760 = !DILocalVariable(name: "D", scope: !8757, file: !1245, line: 4555, type: !1415)
!8761 = !DILocalVariable(name: "unlock", scope: !8757, file: !1245, line: 4556, type: !105)
!8762 = !DILocalVariable(name: "cmd", scope: !8757, file: !1245, line: 4557, type: !127)
!8763 = !DILocation(line: 0, scope: !8757)
!8764 = !DILocation(line: 4555, column: 24, scope: !8757)
!8765 = !DILocation(line: 4557, column: 5, scope: !8757)
!8766 = !DILocation(line: 4558, column: 12, scope: !8767)
!8767 = distinct !DILexicalBlock(scope: !8757, file: !1245, line: 4558, column: 9)
!8768 = !DILocation(line: 4558, column: 9, scope: !8767)
!8769 = !DILocation(line: 4558, column: 23, scope: !8767)
!8770 = !DILocation(line: 4558, column: 31, scope: !8767)
!8771 = !DILocation(line: 4558, column: 34, scope: !8767)
!8772 = !DILocation(line: 4558, column: 48, scope: !8767)
!8773 = !DILocation(line: 4558, column: 56, scope: !8767)
!8774 = !DILocation(line: 4558, column: 59, scope: !8767)
!8775 = !DILocation(line: 4558, column: 73, scope: !8767)
!8776 = !DILocation(line: 4558, column: 9, scope: !8757)
!8777 = !DILocation(line: 4563, column: 24, scope: !8757)
!8778 = !DILocation(line: 4563, column: 31, scope: !8757)
!8779 = !DILocation(line: 4563, column: 36, scope: !8757)
!8780 = !DILocation(line: 4563, column: 28, scope: !8757)
!8781 = !DILocation(line: 4563, column: 5, scope: !8757)
!8782 = !DILocation(line: 4564, column: 5, scope: !8757)
!8783 = !DILocation(line: 4567, column: 28, scope: !8757)
!8784 = !DILocation(line: 4567, column: 36, scope: !8757)
!8785 = !DILocation(line: 4567, column: 41, scope: !8757)
!8786 = !DILocation(line: 4567, column: 5, scope: !8757)
!8787 = !DILocation(line: 4568, column: 17, scope: !8757)
!8788 = !DILocation(line: 4568, column: 22, scope: !8757)
!8789 = !DILocation(line: 4568, column: 14, scope: !8757)
!8790 = !DILocation(line: 4569, column: 22, scope: !8757)
!8791 = !DILocation(line: 4569, column: 54, scope: !8757)
!8792 = !DILocation(line: 4569, column: 65, scope: !8757)
!8793 = !DILocation(line: 4569, column: 62, scope: !8757)
!8794 = !DILocation(line: 4569, column: 87, scope: !8757)
!8795 = !DILocation(line: 4569, column: 85, scope: !8757)
!8796 = !DILocation(line: 4569, column: 60, scope: !8757)
!8797 = !DILocation(line: 4569, column: 58, scope: !8757)
!8798 = !DILocation(line: 4569, column: 51, scope: !8757)
!8799 = !DILocation(line: 4572, column: 24, scope: !8757)
!8800 = !DILocation(line: 4572, column: 5, scope: !8757)
!8801 = !DILocation(line: 4573, column: 5, scope: !8757)
!8802 = !DILocation(line: 4575, column: 5, scope: !8757)
!8803 = !DILocation(line: 4576, column: 1, scope: !8757)
!8804 = distinct !DISubprogram(name: "SF_DAL_Dev_WaitReady_EMIINIT", scope: !1245, file: !1245, line: 4488, type: !8234, scopeLine: 4489, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !8805)
!8805 = !{!8806, !8807}
!8806 = !DILocalVariable(name: "D", arg: 1, scope: !8804, file: !1245, line: 4488, type: !1415)
!8807 = !DILocalVariable(name: "status", scope: !8804, file: !1245, line: 4490, type: !1467)
!8808 = !DILocation(line: 0, scope: !8804)
!8809 = !DILocation(line: 4490, column: 5, scope: !8804)
!8810 = !DILocation(line: 4491, column: 5, scope: !8804)
!8811 = !DILocation(line: 4492, column: 32, scope: !8812)
!8812 = distinct !DILexicalBlock(scope: !8804, file: !1245, line: 4491, column: 10)
!8813 = !DILocation(line: 4492, column: 40, scope: !8812)
!8814 = !DILocation(line: 4492, column: 45, scope: !8812)
!8815 = !DILocation(line: 4492, column: 9, scope: !8812)
!8816 = !DILocation(line: 4493, column: 20, scope: !8804)
!8817 = !DILocation(line: 4493, column: 32, scope: !8804)
!8818 = !DILocation(line: 4493, column: 29, scope: !8804)
!8819 = !DILocation(line: 4493, column: 27, scope: !8804)
!8820 = !DILocation(line: 4493, column: 16, scope: !8804)
!8821 = !DILocation(line: 4493, column: 5, scope: !8812)
!8822 = distinct !{!8822, !8810, !8823}
!8823 = !DILocation(line: 4493, column: 54, scope: !8804)
!8824 = !DILocation(line: 4494, column: 1, scope: !8804)
!8825 = distinct !DISubprogram(name: "SF_DAL_Init_WINBOND", scope: !1245, file: !1245, line: 1742, type: !8664, scopeLine: 1743, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !8826)
!8826 = !{!8827, !8828, !8829}
!8827 = !DILocalVariable(name: "driver", arg: 1, scope: !8825, file: !1245, line: 1742, type: !8666)
!8828 = !DILocalVariable(name: "D", arg: 2, scope: !8825, file: !1245, line: 1742, type: !1415)
!8829 = !DILocalVariable(name: "smap", scope: !8825, file: !1245, line: 1744, type: !1466)
!8830 = !DILocation(line: 0, scope: !8825)
!8831 = !DILocation(line: 1747, column: 15, scope: !8825)
!8832 = !DILocation(line: 1748, column: 22, scope: !8825)
!8833 = !DILocation(line: 1749, column: 5, scope: !8825)
!8834 = !DILocation(line: 1749, column: 22, scope: !8825)
!8835 = !DILocation(line: 1750, column: 5, scope: !8825)
!8836 = !DILocation(line: 1750, column: 22, scope: !8825)
!8837 = !DILocation(line: 1751, column: 5, scope: !8825)
!8838 = !DILocation(line: 1751, column: 22, scope: !8825)
!8839 = !DILocation(line: 1752, column: 5, scope: !8825)
!8840 = !DILocation(line: 1752, column: 22, scope: !8825)
!8841 = !DILocation(line: 1753, column: 5, scope: !8825)
!8842 = !DILocation(line: 1753, column: 22, scope: !8825)
!8843 = !DILocation(line: 1756, column: 8, scope: !8825)
!8844 = !DILocation(line: 1756, column: 13, scope: !8825)
!8845 = !DILocation(line: 1756, column: 24, scope: !8825)
!8846 = !DILocation(line: 1758, column: 8, scope: !8825)
!8847 = !DILocation(line: 1758, column: 13, scope: !8825)
!8848 = !DILocation(line: 1758, column: 28, scope: !8825)
!8849 = !DILocation(line: 1759, column: 8, scope: !8825)
!8850 = !DILocation(line: 1759, column: 13, scope: !8825)
!8851 = !DILocation(line: 1759, column: 29, scope: !8825)
!8852 = !DILocation(line: 1760, column: 8, scope: !8825)
!8853 = !DILocation(line: 1760, column: 13, scope: !8825)
!8854 = !DILocation(line: 1760, column: 23, scope: !8825)
!8855 = !DILocation(line: 1761, column: 8, scope: !8825)
!8856 = !DILocation(line: 1761, column: 13, scope: !8825)
!8857 = !DILocation(line: 1761, column: 24, scope: !8825)
!8858 = !DILocation(line: 1762, column: 8, scope: !8825)
!8859 = !DILocation(line: 1762, column: 13, scope: !8825)
!8860 = !DILocation(line: 1762, column: 21, scope: !8825)
!8861 = !DILocation(line: 1763, column: 8, scope: !8825)
!8862 = !DILocation(line: 1763, column: 13, scope: !8825)
!8863 = !DILocation(line: 1763, column: 20, scope: !8825)
!8864 = !DILocation(line: 1764, column: 8, scope: !8825)
!8865 = !DILocation(line: 1764, column: 23, scope: !8825)
!8866 = !DILocation(line: 1768, column: 8, scope: !8825)
!8867 = !DILocation(line: 1768, column: 20, scope: !8825)
!8868 = !DILocation(line: 1770, column: 5, scope: !8825)
!8869 = distinct !DISubprogram(name: "SF_DAL_Init_WINBOND_OTP", scope: !1245, file: !1245, line: 1775, type: !8664, scopeLine: 1776, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !8870)
!8870 = !{!8871, !8872}
!8871 = !DILocalVariable(name: "driver", arg: 1, scope: !8869, file: !1245, line: 1775, type: !8666)
!8872 = !DILocalVariable(name: "D", arg: 2, scope: !8869, file: !1245, line: 1775, type: !1415)
!8873 = !DILocation(line: 0, scope: !8869)
!8874 = !DILocation(line: 1793, column: 5, scope: !8869)
!8875 = distinct !DISubprogram(name: "SF_DAL_Init_Common", scope: !1245, file: !1245, line: 1932, type: !8664, scopeLine: 1933, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !8876)
!8876 = !{!8877, !8878}
!8877 = !DILocalVariable(name: "driver", arg: 1, scope: !8875, file: !1245, line: 1932, type: !8666)
!8878 = !DILocalVariable(name: "D", arg: 2, scope: !8875, file: !1245, line: 1932, type: !1415)
!8879 = !DILocation(line: 0, scope: !8875)
!8880 = !DILocation(line: 1935, column: 13, scope: !8875)
!8881 = !DILocation(line: 1935, column: 25, scope: !8875)
!8882 = !DILocation(line: 1936, column: 13, scope: !8875)
!8883 = !DILocation(line: 1936, column: 22, scope: !8875)
!8884 = !DILocation(line: 1937, column: 13, scope: !8875)
!8885 = !DILocation(line: 1937, column: 23, scope: !8875)
!8886 = !DILocation(line: 1939, column: 13, scope: !8875)
!8887 = !DILocation(line: 1939, column: 24, scope: !8875)
!8888 = !DILocation(line: 1940, column: 13, scope: !8875)
!8889 = !DILocation(line: 1940, column: 25, scope: !8875)
!8890 = !DILocation(line: 1945, column: 13, scope: !8875)
!8891 = !DILocation(line: 1945, column: 32, scope: !8875)
!8892 = !DILocation(line: 1946, column: 13, scope: !8875)
!8893 = !DILocation(line: 1946, column: 30, scope: !8875)
!8894 = !DILocation(line: 1947, column: 13, scope: !8875)
!8895 = !DILocation(line: 1947, column: 26, scope: !8875)
!8896 = !DILocation(line: 1948, column: 13, scope: !8875)
!8897 = !DILocation(line: 1948, column: 25, scope: !8875)
!8898 = !DILocation(line: 1949, column: 13, scope: !8875)
!8899 = !DILocation(line: 1949, column: 24, scope: !8875)
!8900 = !DILocation(line: 1956, column: 13, scope: !8875)
!8901 = !DILocation(line: 1956, column: 23, scope: !8875)
!8902 = !DILocation(line: 1957, column: 13, scope: !8875)
!8903 = !DILocation(line: 1957, column: 28, scope: !8875)
!8904 = !DILocation(line: 1960, column: 13, scope: !8875)
!8905 = !DILocation(line: 1960, column: 30, scope: !8875)
!8906 = !DILocation(line: 1961, column: 13, scope: !8875)
!8907 = !DILocation(line: 1961, column: 30, scope: !8875)
!8908 = !DILocation(line: 1962, column: 13, scope: !8875)
!8909 = !DILocation(line: 1962, column: 20, scope: !8875)
!8910 = !DILocation(line: 1968, column: 9, scope: !8911)
!8911 = distinct !DILexicalBlock(scope: !8875, file: !1245, line: 1968, column: 9)
!8912 = !DILocation(line: 1968, column: 36, scope: !8911)
!8913 = !DILocation(line: 1968, column: 9, scope: !8875)
!8914 = !DILocation(line: 1971, column: 12, scope: !8915)
!8915 = distinct !DILexicalBlock(scope: !8911, file: !1245, line: 1970, column: 5)
!8916 = !DILocation(line: 1971, column: 25, scope: !8915)
!8917 = !DILocation(line: 1979, column: 8, scope: !8875)
!8918 = !DILocation(line: 1979, column: 13, scope: !8875)
!8919 = !DILocation(line: 1979, column: 25, scope: !8875)
!8920 = !DILocation(line: 1980, column: 8, scope: !8875)
!8921 = !DILocation(line: 1980, column: 13, scope: !8875)
!8922 = !DILocation(line: 1980, column: 24, scope: !8875)
!8923 = !DILocation(line: 1981, column: 8, scope: !8875)
!8924 = !DILocation(line: 1981, column: 13, scope: !8875)
!8925 = !DILocation(line: 1981, column: 24, scope: !8875)
!8926 = !DILocation(line: 1982, column: 8, scope: !8875)
!8927 = !DILocation(line: 1982, column: 13, scope: !8875)
!8928 = !DILocation(line: 1982, column: 22, scope: !8875)
!8929 = !DILocation(line: 1983, column: 8, scope: !8875)
!8930 = !DILocation(line: 1983, column: 13, scope: !8875)
!8931 = !DILocation(line: 1983, column: 21, scope: !8875)
!8932 = !DILocation(line: 1984, column: 8, scope: !8875)
!8933 = !DILocation(line: 1984, column: 13, scope: !8875)
!8934 = !DILocation(line: 1984, column: 22, scope: !8875)
!8935 = !DILocation(line: 1985, column: 8, scope: !8875)
!8936 = !DILocation(line: 1985, column: 13, scope: !8875)
!8937 = !DILocation(line: 1985, column: 22, scope: !8875)
!8938 = !DILocation(line: 1986, column: 8, scope: !8875)
!8939 = !DILocation(line: 1986, column: 13, scope: !8875)
!8940 = !DILocation(line: 1986, column: 21, scope: !8875)
!8941 = !DILocation(line: 1987, column: 8, scope: !8875)
!8942 = !DILocation(line: 1987, column: 13, scope: !8875)
!8943 = !DILocation(line: 1987, column: 20, scope: !8875)
!8944 = !DILocation(line: 1988, column: 8, scope: !8875)
!8945 = !DILocation(line: 1988, column: 13, scope: !8875)
!8946 = !DILocation(line: 1988, column: 25, scope: !8875)
!8947 = !DILocation(line: 1989, column: 8, scope: !8875)
!8948 = !DILocation(line: 1989, column: 13, scope: !8875)
!8949 = !DILocation(line: 1989, column: 22, scope: !8875)
!8950 = !DILocation(line: 1990, column: 8, scope: !8875)
!8951 = !DILocation(line: 1990, column: 13, scope: !8875)
!8952 = !DILocation(line: 1990, column: 22, scope: !8875)
!8953 = !DILocation(line: 1993, column: 8, scope: !8875)
!8954 = !DILocation(line: 1993, column: 13, scope: !8875)
!8955 = !DILocation(line: 1993, column: 26, scope: !8875)
!8956 = !DILocation(line: 1996, column: 8, scope: !8875)
!8957 = !DILocation(line: 1996, column: 20, scope: !8875)
!8958 = !DILocation(line: 1999, column: 8, scope: !8875)
!8959 = !DILocation(line: 1999, column: 24, scope: !8875)
!8960 = !DILocation(line: 2000, column: 8, scope: !8875)
!8961 = !DILocation(line: 2000, column: 19, scope: !8875)
!8962 = !DILocation(line: 2001, column: 8, scope: !8875)
!8963 = !DILocation(line: 2001, column: 24, scope: !8875)
!8964 = !DILocation(line: 2002, column: 8, scope: !8875)
!8965 = !DILocation(line: 2002, column: 23, scope: !8875)
!8966 = !DILocation(line: 2004, column: 5, scope: !8875)
!8967 = distinct !DISubprogram(name: "SF_DAL_MountDevice", scope: !1245, file: !1245, line: 2160, type: !1714, scopeLine: 2161, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !8968)
!8968 = !{!8969, !8970, !8971, !8984, !8985, !8986}
!8969 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8967, file: !1245, line: 2160, type: !124)
!8970 = !DILocalVariable(name: "Info", arg: 2, scope: !8967, file: !1245, line: 2160, type: !124)
!8971 = !DILocalVariable(name: "FlashInfo", scope: !8967, file: !1245, line: 2162, type: !8972)
!8972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8973, size: 32)
!8973 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_FlashInfo", file: !1441, line: 99, baseType: !8974)
!8974 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1441, line: 90, size: 928, elements: !8975)
!8975 = !{!8976, !8977, !8978, !8979, !8980, !8981, !8982, !8983}
!8976 = !DIDerivedType(tag: DW_TAG_member, name: "TotalBlocks", scope: !8974, file: !1441, line: 91, baseType: !105, size: 32)
!8977 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !8974, file: !1441, line: 92, baseType: !1770, size: 256, offset: 32)
!8978 = !DIDerivedType(tag: DW_TAG_member, name: "AvailInRegion", scope: !8974, file: !1441, line: 93, baseType: !1770, size: 256, offset: 288)
!8979 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !8974, file: !1441, line: 94, baseType: !1770, size: 256, offset: 544)
!8980 = !DIDerivedType(tag: DW_TAG_member, name: "ActualRegionNum", scope: !8974, file: !1441, line: 95, baseType: !105, size: 32, offset: 800)
!8981 = !DIDerivedType(tag: DW_TAG_member, name: "PageSize", scope: !8974, file: !1441, line: 96, baseType: !1762, size: 16, offset: 832)
!8982 = !DIDerivedType(tag: DW_TAG_member, name: "baseUnlockBlock", scope: !8974, file: !1441, line: 97, baseType: !105, size: 32, offset: 864)
!8983 = !DIDerivedType(tag: DW_TAG_member, name: "endUnlockBlock", scope: !8974, file: !1441, line: 98, baseType: !105, size: 32, offset: 896)
!8984 = !DILocalVariable(name: "D", scope: !8967, file: !1245, line: 2163, type: !1415)
!8985 = !DILocalVariable(name: "i", scope: !8967, file: !1245, line: 2164, type: !105)
!8986 = !DILocalVariable(name: "result", scope: !8967, file: !1245, line: 2166, type: !1124)
!8987 = !DILocation(line: 0, scope: !8967)
!8988 = !DILocation(line: 2163, column: 37, scope: !8967)
!8989 = !DILocation(line: 2202, column: 16, scope: !8967)
!8990 = !DILocation(line: 2202, column: 28, scope: !8967)
!8991 = !DILocation(line: 2204, column: 15, scope: !8967)
!8992 = !DILocation(line: 2204, column: 29, scope: !8967)
!8993 = !DILocation(line: 2204, column: 39, scope: !8967)
!8994 = !DILocation(line: 2204, column: 5, scope: !8967)
!8995 = !DILocation(line: 2205, column: 9, scope: !8996)
!8996 = distinct !DILexicalBlock(scope: !8967, file: !1245, line: 2204, column: 45)
!8997 = !DILocation(line: 2205, column: 33, scope: !8996)
!8998 = !DILocation(line: 2206, column: 41, scope: !8996)
!8999 = !DILocation(line: 2206, column: 55, scope: !8996)
!9000 = !DILocation(line: 2206, column: 9, scope: !8996)
!9001 = !DILocation(line: 2206, column: 36, scope: !8996)
!9002 = !DILocation(line: 2207, column: 38, scope: !8996)
!9003 = !DILocation(line: 2207, column: 52, scope: !8996)
!9004 = !DILocation(line: 2207, column: 32, scope: !8996)
!9005 = !DILocation(line: 2209, column: 10, scope: !8996)
!9006 = distinct !{!9006, !8994, !9007}
!9007 = !DILocation(line: 2210, column: 5, scope: !8967)
!9008 = !DILocation(line: 2212, column: 16, scope: !8967)
!9009 = !DILocation(line: 2212, column: 32, scope: !8967)
!9010 = !DILocation(line: 2213, column: 16, scope: !8967)
!9011 = !DILocation(line: 2213, column: 25, scope: !8967)
!9012 = !DILocation(line: 2236, column: 5, scope: !8967)
!9013 = !DILocation(line: 2238, column: 5, scope: !8967)
!9014 = !DILocation(line: 2239, column: 18, scope: !9015)
!9015 = distinct !DILexicalBlock(scope: !8967, file: !1245, line: 2238, column: 10)
!9016 = !DILocation(line: 2240, column: 34, scope: !8967)
!9017 = !DILocation(line: 2240, column: 5, scope: !9015)
!9018 = distinct !{!9018, !9013, !9019}
!9019 = !DILocation(line: 2240, column: 43, scope: !8967)
!9020 = !DILocation(line: 2259, column: 5, scope: !8967)
!9021 = distinct !DISubprogram(name: "SF_DAL_ShutDown", scope: !1245, file: !1245, line: 2275, type: !1517, scopeLine: 2276, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !9022)
!9022 = !{!9023, !9024, !9025, !9026}
!9023 = !DILocalVariable(name: "MTDData", arg: 1, scope: !9021, file: !1245, line: 2275, type: !124)
!9024 = !DILocalVariable(name: "D", scope: !9021, file: !1245, line: 2278, type: !1415)
!9025 = !DILocalVariable(name: "status", scope: !9021, file: !1245, line: 2279, type: !1467)
!9026 = !DILocalVariable(name: "saved_mask", scope: !9021, file: !1245, line: 2280, type: !105)
!9027 = !DILocation(line: 0, scope: !9021)
!9028 = !DILocation(line: 2278, column: 33, scope: !9021)
!9029 = !DILocation(line: 2286, column: 5, scope: !9021)
!9030 = !DILocation(line: 2293, column: 9, scope: !9021)
!9031 = !DILocation(line: 2294, column: 26, scope: !9032)
!9032 = distinct !DILexicalBlock(scope: !9021, file: !1245, line: 2293, column: 19)
!9033 = !DILocation(line: 2297, column: 17, scope: !9034)
!9034 = distinct !DILexicalBlock(scope: !9032, file: !1245, line: 2297, column: 17)
!9035 = !DILocation(line: 2297, column: 17, scope: !9032)
!9036 = !DILocation(line: 2298, column: 17, scope: !9037)
!9037 = distinct !DILexicalBlock(scope: !9034, file: !1245, line: 2297, column: 36)
!9038 = !DILocation(line: 2299, column: 37, scope: !9037)
!9039 = !DILocation(line: 2300, column: 13, scope: !9037)
!9040 = !DILocation(line: 2303, column: 50, scope: !9032)
!9041 = !DILocation(line: 2303, column: 55, scope: !9032)
!9042 = !DILocation(line: 2303, column: 22, scope: !9032)
!9043 = !DILocation(line: 2306, column: 35, scope: !9044)
!9044 = distinct !DILexicalBlock(scope: !9032, file: !1245, line: 2306, column: 17)
!9045 = !DILocation(line: 2306, column: 32, scope: !9044)
!9046 = !DILocation(line: 2306, column: 30, scope: !9044)
!9047 = !DILocation(line: 2306, column: 19, scope: !9044)
!9048 = !DILocation(line: 2306, column: 17, scope: !9032)
!9049 = !DILocation(line: 2307, column: 17, scope: !9050)
!9050 = distinct !DILexicalBlock(scope: !9044, file: !1245, line: 2306, column: 59)
!9051 = !DILocation(line: 2308, column: 17, scope: !9050)
!9052 = !DILocation(line: 2315, column: 12, scope: !9021)
!9053 = !DILocation(line: 2315, column: 21, scope: !9021)
!9054 = !DILocation(line: 2325, column: 9, scope: !9021)
!9055 = !DILocation(line: 2326, column: 5, scope: !9021)
!9056 = !DILocation(line: 2311, column: 17, scope: !9057)
!9057 = distinct !DILexicalBlock(scope: !9044, file: !1245, line: 2310, column: 20)
!9058 = distinct !{!9058, !9030, !9059}
!9059 = !DILocation(line: 2313, column: 9, scope: !9021)
!9060 = distinct !DISubprogram(name: "SF_DAL_EraseBlock", scope: !1245, file: !1245, line: 2819, type: !1723, scopeLine: 2820, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !9061)
!9061 = !{!9062, !9063, !9064, !9065, !9066, !9067, !9068, !9069, !9070, !9071, !9074, !9075}
!9062 = !DILocalVariable(name: "MTDData", arg: 1, scope: !9060, file: !1245, line: 2819, type: !124)
!9063 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !9060, file: !1245, line: 2819, type: !105)
!9064 = !DILocalVariable(name: "result", scope: !9060, file: !1245, line: 2821, type: !1124)
!9065 = !DILocalVariable(name: "blocksize", scope: !9060, file: !1245, line: 2822, type: !105)
!9066 = !DILocalVariable(name: "eraseunit", scope: !9060, file: !1245, line: 2823, type: !105)
!9067 = !DILocalVariable(name: "eraseaddr", scope: !9060, file: !1245, line: 2824, type: !105)
!9068 = !DILocalVariable(name: "iteration", scope: !9060, file: !1245, line: 2825, type: !105)
!9069 = !DILocalVariable(name: "D", scope: !9060, file: !1245, line: 2826, type: !1415)
!9070 = !DILocalVariable(name: "erase_block", scope: !9060, file: !1245, line: 2827, type: !105)
!9071 = !DILocalVariable(name: "a", scope: !9072, file: !1245, line: 2853, type: !105)
!9072 = distinct !DILexicalBlock(scope: !9073, file: !1245, line: 2852, column: 56)
!9073 = distinct !DILexicalBlock(scope: !9060, file: !1245, line: 2852, column: 9)
!9074 = !DILocalVariable(name: "b", scope: !9072, file: !1245, line: 2853, type: !105)
!9075 = !DILocalVariable(name: "c", scope: !9072, file: !1245, line: 2853, type: !105)
!9076 = !DILocation(line: 0, scope: !9060)
!9077 = !DILocation(line: 2826, column: 30, scope: !9060)
!9078 = !DILocation(line: 2829, column: 5, scope: !9079)
!9079 = distinct !DILexicalBlock(scope: !9080, file: !1245, line: 2829, column: 5)
!9080 = distinct !DILexicalBlock(scope: !9060, file: !1245, line: 2829, column: 5)
!9081 = !DILocation(line: 2829, column: 5, scope: !9080)
!9082 = !DILocation(line: 2829, column: 5, scope: !9083)
!9083 = distinct !DILexicalBlock(scope: !9079, file: !1245, line: 2829, column: 5)
!9084 = !DILocation(line: 2836, column: 9, scope: !9060)
!9085 = !DILocation(line: 2838, column: 8, scope: !9060)
!9086 = !DILocation(line: 2838, column: 21, scope: !9060)
!9087 = !DILocation(line: 2847, column: 5, scope: !9060)
!9088 = !DILocation(line: 2848, column: 18, scope: !9089)
!9089 = distinct !DILexicalBlock(scope: !9060, file: !1245, line: 2847, column: 10)
!9090 = !DILocation(line: 2850, column: 34, scope: !9060)
!9091 = !DILocation(line: 2850, column: 5, scope: !9089)
!9092 = distinct !{!9092, !9087, !9093}
!9093 = !DILocation(line: 2850, column: 43, scope: !9060)
!9094 = !DILocation(line: 2839, column: 32, scope: !9060)
!9095 = !DILocation(line: 2861, column: 53, scope: !9072)
!9096 = !DILocation(line: 2861, column: 40, scope: !9072)
!9097 = !DILocation(line: 2861, column: 25, scope: !9072)
!9098 = !DILocation(line: 2874, column: 16, scope: !9072)
!9099 = !DILocation(line: 2874, column: 13, scope: !9072)
!9100 = !DILocation(line: 0, scope: !9072)
!9101 = !DILocation(line: 2875, column: 24, scope: !9072)
!9102 = !DILocation(line: 2877, column: 21, scope: !9103)
!9103 = distinct !DILexicalBlock(scope: !9072, file: !1245, line: 2877, column: 13)
!9104 = !DILocation(line: 2877, column: 13, scope: !9072)
!9105 = !DILocation(line: 2879, column: 23, scope: !9106)
!9106 = distinct !DILexicalBlock(scope: !9107, file: !1245, line: 2879, column: 21)
!9107 = distinct !DILexicalBlock(scope: !9108, file: !1245, line: 2878, column: 120)
!9108 = distinct !DILexicalBlock(scope: !9109, file: !1245, line: 2878, column: 13)
!9109 = distinct !DILexicalBlock(scope: !9110, file: !1245, line: 2878, column: 13)
!9110 = distinct !DILexicalBlock(scope: !9103, file: !1245, line: 2877, column: 27)
!9111 = !DILocation(line: 2879, column: 21, scope: !9107)
!9112 = !DILocation(line: 2878, column: 48, scope: !9108)
!9113 = !DILocation(line: 2878, column: 83, scope: !9108)
!9114 = !DILocation(line: 2878, column: 113, scope: !9108)
!9115 = !DILocation(line: 2878, column: 35, scope: !9108)
!9116 = !DILocation(line: 2878, column: 13, scope: !9109)
!9117 = distinct !{!9117, !9116, !9118}
!9118 = !DILocation(line: 2883, column: 13, scope: !9109)
!9119 = !DILocation(line: 2863, column: 19, scope: !9072)
!9120 = !DILocation(line: 2825, column: 24, scope: !9060)
!9121 = !DILocation(line: 2886, column: 9, scope: !9072)
!9122 = !DILocation(line: 2888, column: 36, scope: !9123)
!9123 = distinct !DILexicalBlock(scope: !9072, file: !1245, line: 2886, column: 31)
!9124 = !DILocation(line: 2888, column: 41, scope: !9123)
!9125 = !DILocation(line: 2889, column: 17, scope: !9123)
!9126 = !DILocation(line: 2891, column: 36, scope: !9123)
!9127 = !DILocation(line: 2891, column: 41, scope: !9123)
!9128 = !DILocation(line: 2892, column: 17, scope: !9123)
!9129 = !DILocation(line: 2894, column: 36, scope: !9123)
!9130 = !DILocation(line: 2894, column: 41, scope: !9123)
!9131 = !DILocation(line: 2895, column: 17, scope: !9123)
!9132 = !DILocation(line: 2897, column: 17, scope: !9133)
!9133 = distinct !DILexicalBlock(scope: !9134, file: !1245, line: 2897, column: 17)
!9134 = distinct !DILexicalBlock(scope: !9135, file: !1245, line: 2897, column: 17)
!9135 = distinct !DILexicalBlock(scope: !9123, file: !1245, line: 2897, column: 17)
!9136 = !DILocation(line: 0, scope: !9123)
!9137 = !DILocation(line: 2906, column: 5, scope: !9060)
!9138 = !DILocation(line: 2908, column: 32, scope: !9139)
!9139 = distinct !DILexicalBlock(scope: !9060, file: !1245, line: 2906, column: 27)
!9140 = !DILocation(line: 2908, column: 37, scope: !9139)
!9141 = !DILocation(line: 2909, column: 13, scope: !9139)
!9142 = !DILocation(line: 2911, column: 32, scope: !9139)
!9143 = !DILocation(line: 2911, column: 37, scope: !9139)
!9144 = !DILocation(line: 2912, column: 13, scope: !9139)
!9145 = !DILocation(line: 2914, column: 32, scope: !9139)
!9146 = !DILocation(line: 2914, column: 37, scope: !9139)
!9147 = !DILocation(line: 2915, column: 13, scope: !9139)
!9148 = !DILocation(line: 0, scope: !9139)
!9149 = !DILocation(line: 2921, column: 56, scope: !9150)
!9150 = distinct !DILexicalBlock(scope: !9151, file: !1245, line: 2921, column: 5)
!9151 = distinct !DILexicalBlock(scope: !9060, file: !1245, line: 2921, column: 5)
!9152 = !DILocation(line: 2921, column: 5, scope: !9151)
!9153 = !DILocation(line: 2921, column: 35, scope: !9151)
!9154 = !DILocation(line: 2921, column: 22, scope: !9151)
!9155 = !DILocation(line: 2922, column: 9, scope: !9156)
!9156 = distinct !DILexicalBlock(scope: !9150, file: !1245, line: 2921, column: 99)
!9157 = !DILocation(line: 2929, column: 9, scope: !9156)
!9158 = !DILocation(line: 2938, column: 26, scope: !9159)
!9159 = distinct !DILexicalBlock(scope: !9156, file: !1245, line: 2929, column: 26)
!9160 = !DILocation(line: 2939, column: 37, scope: !9161)
!9161 = distinct !DILexicalBlock(scope: !9159, file: !1245, line: 2939, column: 17)
!9162 = !DILocation(line: 2939, column: 17, scope: !9159)
!9163 = distinct !{!9163, !9157, !9164}
!9164 = !DILocation(line: 2943, column: 9, scope: !9156)
!9165 = !DILocation(line: 2921, column: 71, scope: !9150)
!9166 = !DILocation(line: 2921, column: 85, scope: !9150)
!9167 = distinct !{!9167, !9152, !9168}
!9168 = !DILocation(line: 2983, column: 5, scope: !9151)
!9169 = !DILocation(line: 2985, column: 21, scope: !9060)
!9170 = !DILocation(line: 2992, column: 9, scope: !9060)
!9171 = !DILocation(line: 3000, column: 5, scope: !9060)
!9172 = distinct !DISubprogram(name: "SF_DAL_ProgramData", scope: !1245, file: !1245, line: 2533, type: !1727, scopeLine: 2534, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !9173)
!9173 = !{!9174, !9175, !9176, !9177, !9178, !9179, !9180, !9181, !9182, !9183, !9184, !9185, !9186, !9187}
!9174 = !DILocalVariable(name: "MTDData", arg: 1, scope: !9172, file: !1245, line: 2533, type: !124)
!9175 = !DILocalVariable(name: "Address", arg: 2, scope: !9172, file: !1245, line: 2533, type: !124)
!9176 = !DILocalVariable(name: "Data", arg: 3, scope: !9172, file: !1245, line: 2533, type: !124)
!9177 = !DILocalVariable(name: "Length", arg: 4, scope: !9172, file: !1245, line: 2533, type: !105)
!9178 = !DILocalVariable(name: "D", scope: !9172, file: !1245, line: 2535, type: !1415)
!9179 = !DILocalVariable(name: "savedMask", scope: !9172, file: !1245, line: 2536, type: !105)
!9180 = !DILocalVariable(name: "address", scope: !9172, file: !1245, line: 2537, type: !105)
!9181 = !DILocalVariable(name: "p_data", scope: !9172, file: !1245, line: 2538, type: !818)
!9182 = !DILocalVariable(name: "p_data_first", scope: !9172, file: !1245, line: 2539, type: !818)
!9183 = !DILocalVariable(name: "result", scope: !9172, file: !1245, line: 2540, type: !1124)
!9184 = !DILocalVariable(name: "written", scope: !9172, file: !1245, line: 2541, type: !105)
!9185 = !DILocalVariable(name: "length", scope: !9172, file: !1245, line: 2542, type: !105)
!9186 = !DILocalVariable(name: "cmd1", scope: !9172, file: !1245, line: 2543, type: !105)
!9187 = !DILocalVariable(name: "j", scope: !9188, file: !1245, line: 2599, type: !105)
!9188 = distinct !DILexicalBlock(scope: !9189, file: !1245, line: 2597, column: 61)
!9189 = distinct !DILexicalBlock(scope: !9190, file: !1245, line: 2597, column: 13)
!9190 = distinct !DILexicalBlock(scope: !9172, file: !1245, line: 2583, column: 25)
!9191 = !DILocation(line: 0, scope: !9172)
!9192 = !DILocation(line: 2535, column: 26, scope: !9172)
!9193 = !DILocation(line: 2537, column: 37, scope: !9172)
!9194 = !DILocation(line: 2538, column: 5, scope: !9172)
!9195 = !DILocation(line: 2538, column: 19, scope: !9172)
!9196 = !DILocation(line: 2542, column: 5, scope: !9172)
!9197 = !DILocation(line: 2545, column: 5, scope: !9198)
!9198 = distinct !DILexicalBlock(scope: !9199, file: !1245, line: 2545, column: 5)
!9199 = distinct !DILexicalBlock(scope: !9172, file: !1245, line: 2545, column: 5)
!9200 = !DILocation(line: 2545, column: 5, scope: !9199)
!9201 = !DILocation(line: 2545, column: 5, scope: !9202)
!9202 = distinct !DILexicalBlock(scope: !9198, file: !1245, line: 2545, column: 5)
!9203 = !DILocation(line: 2567, column: 9, scope: !9172)
!9204 = !DILocation(line: 2569, column: 8, scope: !9172)
!9205 = !DILocation(line: 2569, column: 21, scope: !9172)
!9206 = !DILocation(line: 2576, column: 5, scope: !9172)
!9207 = !DILocation(line: 2577, column: 18, scope: !9208)
!9208 = distinct !DILexicalBlock(scope: !9172, file: !1245, line: 2576, column: 10)
!9209 = !DILocation(line: 2579, column: 34, scope: !9172)
!9210 = !DILocation(line: 2579, column: 5, scope: !9208)
!9211 = distinct !{!9211, !9206, !9212}
!9212 = !DILocation(line: 2579, column: 43, scope: !9172)
!9213 = !DILocation(line: 2583, column: 14, scope: !9172)
!9214 = !DILocation(line: 2583, column: 5, scope: !9172)
!9215 = !DILocation(line: 2584, column: 27, scope: !9190)
!9216 = !DILocation(line: 2592, column: 18, scope: !9190)
!9217 = !DILocation(line: 2592, column: 35, scope: !9190)
!9218 = !DILocation(line: 2592, column: 74, scope: !9190)
!9219 = !DILocation(line: 2592, column: 50, scope: !9190)
!9220 = !DILocation(line: 2592, column: 39, scope: !9190)
!9221 = !DILocation(line: 2595, column: 37, scope: !9190)
!9222 = !DILocation(line: 2595, column: 29, scope: !9190)
!9223 = !DILocation(line: 2595, column: 16, scope: !9190)
!9224 = !DILocation(line: 2597, column: 13, scope: !9189)
!9225 = !DILocation(line: 2597, column: 30, scope: !9189)
!9226 = !DILocation(line: 2597, column: 13, scope: !9190)
!9227 = !DILocation(line: 0, scope: !9188)
!9228 = !DILocation(line: 2600, column: 27, scope: !9229)
!9229 = distinct !DILexicalBlock(scope: !9230, file: !1245, line: 2600, column: 13)
!9230 = distinct !DILexicalBlock(scope: !9188, file: !1245, line: 2600, column: 13)
!9231 = !DILocation(line: 2600, column: 13, scope: !9230)
!9232 = !DILocation(line: 2601, column: 38, scope: !9233)
!9233 = distinct !DILexicalBlock(scope: !9229, file: !1245, line: 2600, column: 42)
!9234 = !DILocation(line: 2601, column: 17, scope: !9233)
!9235 = !DILocation(line: 2601, column: 36, scope: !9233)
!9236 = !DILocation(line: 2600, column: 38, scope: !9229)
!9237 = distinct !{!9237, !9231, !9238}
!9238 = !DILocation(line: 2602, column: 13, scope: !9230)
!9239 = !DILocation(line: 0, scope: !9190)
!9240 = !DILocation(line: 2606, column: 18, scope: !9241)
!9241 = distinct !DILexicalBlock(scope: !9190, file: !1245, line: 2606, column: 13)
!9242 = !DILocation(line: 2606, column: 29, scope: !9241)
!9243 = !DILocation(line: 2606, column: 13, scope: !9190)
!9244 = !DILocation(line: 2607, column: 13, scope: !9245)
!9245 = distinct !DILexicalBlock(scope: !9241, file: !1245, line: 2606, column: 55)
!9246 = !DILocation(line: 2608, column: 9, scope: !9245)
!9247 = !DILocation(line: 2613, column: 16, scope: !9248)
!9248 = distinct !DILexicalBlock(scope: !9190, file: !1245, line: 2613, column: 13)
!9249 = !DILocation(line: 2613, column: 29, scope: !9248)
!9250 = !DILocation(line: 0, scope: !9248)
!9251 = !DILocation(line: 2613, column: 13, scope: !9190)
!9252 = !DILocation(line: 2614, column: 20, scope: !9253)
!9253 = distinct !DILexicalBlock(scope: !9248, file: !1245, line: 2613, column: 35)
!9254 = !DILocation(line: 2615, column: 32, scope: !9253)
!9255 = !DILocation(line: 2615, column: 40, scope: !9253)
!9256 = !DILocation(line: 2615, column: 13, scope: !9253)
!9257 = !DILocation(line: 2616, column: 9, scope: !9253)
!9258 = !DILocation(line: 2619, column: 20, scope: !9259)
!9259 = distinct !DILexicalBlock(scope: !9248, file: !1245, line: 2618, column: 9)
!9260 = !DILocation(line: 2620, column: 32, scope: !9259)
!9261 = !DILocation(line: 2620, column: 40, scope: !9259)
!9262 = !DILocation(line: 2620, column: 13, scope: !9259)
!9263 = !DILocation(line: 2626, column: 21, scope: !9190)
!9264 = !DILocation(line: 2633, column: 37, scope: !9190)
!9265 = !DILocation(line: 2634, column: 45, scope: !9190)
!9266 = !DILocation(line: 2634, column: 42, scope: !9190)
!9267 = !DILocation(line: 2634, column: 40, scope: !9190)
!9268 = !DILocation(line: 2634, column: 58, scope: !9190)
!9269 = !DILocation(line: 2634, column: 29, scope: !9190)
!9270 = !DILocation(line: 2635, column: 28, scope: !9190)
!9271 = !DILocation(line: 2636, column: 9, scope: !9190)
!9272 = !DILocation(line: 2638, column: 26, scope: !9190)
!9273 = !DILocation(line: 2638, column: 9, scope: !9190)
!9274 = !DILocation(line: 2639, column: 29, scope: !9190)
!9275 = !DILocation(line: 2639, column: 9, scope: !9190)
!9276 = !DILocation(line: 2662, column: 9, scope: !9190)
!9277 = !DILocation(line: 2670, column: 9, scope: !9190)
!9278 = !DILocation(line: 2676, column: 89, scope: !9279)
!9279 = distinct !DILexicalBlock(scope: !9190, file: !1245, line: 2670, column: 13)
!9280 = !DILocation(line: 2676, column: 26, scope: !9279)
!9281 = !DILocation(line: 2678, column: 36, scope: !9190)
!9282 = !DILocation(line: 2678, column: 9, scope: !9279)
!9283 = distinct !{!9283, !9277, !9284}
!9284 = !DILocation(line: 2678, column: 45, scope: !9190)
!9285 = !DILocation(line: 2718, column: 19, scope: !9190)
!9286 = !DILocation(line: 2718, column: 16, scope: !9190)
!9287 = !DILocation(line: 2719, column: 16, scope: !9190)
!9288 = !DILocation(line: 2722, column: 31, scope: !9289)
!9289 = distinct !DILexicalBlock(scope: !9190, file: !1245, line: 2722, column: 13)
!9290 = !DILocation(line: 2722, column: 13, scope: !9190)
!9291 = distinct !{!9291, !9214, !9292}
!9292 = !DILocation(line: 2725, column: 5, scope: !9172)
!9293 = !DILocation(line: 2748, column: 21, scope: !9172)
!9294 = !DILocation(line: 2755, column: 9, scope: !9172)
!9295 = !DILocation(line: 2757, column: 16, scope: !9296)
!9296 = distinct !DILexicalBlock(scope: !9172, file: !1245, line: 2757, column: 9)
!9297 = !DILocation(line: 2761, column: 1, scope: !9172)
!9298 = distinct !DISubprogram(name: "SF_DAL_NonBlockEraseBlock", scope: !1245, file: !1245, line: 3019, type: !1723, scopeLine: 3020, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !9299)
!9299 = !{!9300, !9301}
!9300 = !DILocalVariable(name: "MTDData", arg: 1, scope: !9298, file: !1245, line: 3019, type: !124)
!9301 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !9298, file: !1245, line: 3019, type: !105)
!9302 = !DILocation(line: 0, scope: !9298)
!9303 = !DILocation(line: 3021, column: 5, scope: !9298)
!9304 = distinct !DISubprogram(name: "SF_DAL_CheckDeviceReady", scope: !1245, file: !1245, line: 3124, type: !1732, scopeLine: 3125, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !9305)
!9305 = !{!9306, !9307, !9308, !9309, !9310, !9311, !9312, !9313}
!9306 = !DILocalVariable(name: "MTDData", arg: 1, scope: !9304, file: !1245, line: 3124, type: !124)
!9307 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !9304, file: !1245, line: 3124, type: !105)
!9308 = !DILocalVariable(name: "result", scope: !9304, file: !1245, line: 3126, type: !1124)
!9309 = !DILocalVariable(name: "savedMask", scope: !9304, file: !1245, line: 3127, type: !105)
!9310 = !DILocalVariable(name: "D", scope: !9304, file: !1245, line: 3128, type: !1415)
!9311 = !DILocalVariable(name: "status_busy", scope: !9304, file: !1245, line: 3129, type: !1467)
!9312 = !DILocalVariable(name: "status_suspend", scope: !9304, file: !1245, line: 3129, type: !1467)
!9313 = !DILocalVariable(name: "check_status", scope: !9314, file: !1245, line: 3141, type: !1467)
!9314 = distinct !DILexicalBlock(scope: !9315, file: !1245, line: 3140, column: 56)
!9315 = distinct !DILexicalBlock(scope: !9304, file: !1245, line: 3140, column: 9)
!9316 = !DILocation(line: 0, scope: !9304)
!9317 = !DILocation(line: 3128, column: 47, scope: !9304)
!9318 = !DILocation(line: 3131, column: 5, scope: !9319)
!9319 = distinct !DILexicalBlock(scope: !9320, file: !1245, line: 3131, column: 5)
!9320 = distinct !DILexicalBlock(scope: !9304, file: !1245, line: 3131, column: 5)
!9321 = !DILocation(line: 3131, column: 5, scope: !9320)
!9322 = !DILocation(line: 3131, column: 5, scope: !9323)
!9323 = distinct !DILexicalBlock(scope: !9319, file: !1245, line: 3131, column: 5)
!9324 = !DILocation(line: 3134, column: 50, scope: !9304)
!9325 = !DILocation(line: 3134, column: 55, scope: !9304)
!9326 = !DILocation(line: 3134, column: 22, scope: !9304)
!9327 = !DILocation(line: 3135, column: 50, scope: !9304)
!9328 = !DILocation(line: 3135, column: 55, scope: !9304)
!9329 = !DILocation(line: 3135, column: 22, scope: !9304)
!9330 = !DILocation(line: 3138, column: 17, scope: !9304)
!9331 = !DILocation(line: 3140, column: 32, scope: !9315)
!9332 = !DILocation(line: 3140, column: 29, scope: !9315)
!9333 = !DILocation(line: 3140, column: 27, scope: !9315)
!9334 = !DILocation(line: 3140, column: 11, scope: !9315)
!9335 = !DILocation(line: 3140, column: 9, scope: !9304)
!9336 = !DILocation(line: 3141, column: 34, scope: !9314)
!9337 = !DILocation(line: 3141, column: 60, scope: !9314)
!9338 = !DILocation(line: 3141, column: 58, scope: !9314)
!9339 = !DILocation(line: 0, scope: !9314)
!9340 = !DILocation(line: 3144, column: 37, scope: !9341)
!9341 = distinct !DILexicalBlock(scope: !9314, file: !1245, line: 3144, column: 13)
!9342 = !DILocation(line: 3144, column: 35, scope: !9341)
!9343 = !DILocation(line: 3144, column: 16, scope: !9341)
!9344 = !DILocation(line: 3144, column: 52, scope: !9341)
!9345 = !DILocation(line: 3145, column: 21, scope: !9341)
!9346 = !DILocation(line: 3145, column: 38, scope: !9341)
!9347 = !DILocation(line: 3147, column: 13, scope: !9348)
!9348 = distinct !DILexicalBlock(scope: !9349, file: !1245, line: 3147, column: 13)
!9349 = distinct !DILexicalBlock(scope: !9350, file: !1245, line: 3147, column: 13)
!9350 = distinct !DILexicalBlock(scope: !9341, file: !1245, line: 3145, column: 61)
!9351 = !DILocation(line: 3147, column: 13, scope: !9349)
!9352 = !DILocation(line: 3147, column: 13, scope: !9353)
!9353 = distinct !DILexicalBlock(scope: !9348, file: !1245, line: 3147, column: 13)
!9354 = !DILocation(line: 3150, column: 13, scope: !9350)
!9355 = !DILocation(line: 3151, column: 33, scope: !9350)
!9356 = !DILocation(line: 3153, column: 9, scope: !9350)
!9357 = !DILocation(line: 3155, column: 20, scope: !9358)
!9358 = distinct !DILexicalBlock(scope: !9359, file: !1245, line: 3155, column: 17)
!9359 = distinct !DILexicalBlock(scope: !9341, file: !1245, line: 3153, column: 16)
!9360 = !DILocation(line: 3155, column: 31, scope: !9358)
!9361 = !DILocation(line: 3155, column: 17, scope: !9359)
!9362 = !DILocation(line: 3156, column: 36, scope: !9363)
!9363 = distinct !DILexicalBlock(scope: !9358, file: !1245, line: 3155, column: 54)
!9364 = !DILocation(line: 3156, column: 17, scope: !9363)
!9365 = !DILocation(line: 3157, column: 36, scope: !9363)
!9366 = !DILocation(line: 3157, column: 17, scope: !9363)
!9367 = !DILocation(line: 3158, column: 13, scope: !9363)
!9368 = !DILocation(line: 3191, column: 5, scope: !9304)
!9369 = !DILocation(line: 3193, column: 9, scope: !9304)
!9370 = !DILocation(line: 3160, column: 13, scope: !9359)
!9371 = !DILocation(line: 3173, column: 13, scope: !9359)
!9372 = !DILocation(line: 3194, column: 18, scope: !9373)
!9373 = distinct !DILexicalBlock(scope: !9374, file: !1245, line: 3193, column: 32)
!9374 = distinct !DILexicalBlock(scope: !9304, file: !1245, line: 3193, column: 9)
!9375 = !DILocation(line: 3195, column: 5, scope: !9373)
!9376 = !DILocation(line: 3197, column: 5, scope: !9304)
!9377 = distinct !DISubprogram(name: "SF_DAL_SuspendErase", scope: !1245, file: !1245, line: 3225, type: !1723, scopeLine: 3226, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !9378)
!9378 = !{!9379, !9380, !9381, !9382, !9383}
!9379 = !DILocalVariable(name: "MTDData", arg: 1, scope: !9377, file: !1245, line: 3225, type: !124)
!9380 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !9377, file: !1245, line: 3225, type: !105)
!9381 = !DILocalVariable(name: "D", scope: !9377, file: !1245, line: 3227, type: !1415)
!9382 = !DILocalVariable(name: "status", scope: !9377, file: !1245, line: 3228, type: !1467)
!9383 = !DILocalVariable(name: "savedMask", scope: !9377, file: !1245, line: 3229, type: !105)
!9384 = !DILocation(line: 0, scope: !9377)
!9385 = !DILocation(line: 3227, column: 30, scope: !9377)
!9386 = !DILocation(line: 3231, column: 17, scope: !9377)
!9387 = !DILocation(line: 3234, column: 5, scope: !9377)
!9388 = !DILocation(line: 3238, column: 5, scope: !9377)
!9389 = !DILocation(line: 3239, column: 46, scope: !9390)
!9390 = distinct !DILexicalBlock(scope: !9377, file: !1245, line: 3238, column: 15)
!9391 = !DILocation(line: 3239, column: 51, scope: !9390)
!9392 = !DILocation(line: 3239, column: 18, scope: !9390)
!9393 = !DILocation(line: 3241, column: 31, scope: !9394)
!9394 = distinct !DILexicalBlock(scope: !9390, file: !1245, line: 3241, column: 13)
!9395 = !DILocation(line: 3241, column: 28, scope: !9394)
!9396 = !DILocation(line: 3241, column: 26, scope: !9394)
!9397 = !DILocation(line: 3241, column: 15, scope: !9394)
!9398 = !DILocation(line: 3241, column: 13, scope: !9390)
!9399 = distinct !{!9399, !9388, !9400}
!9400 = !DILocation(line: 3244, column: 5, scope: !9377)
!9401 = !DILocation(line: 3246, column: 5, scope: !9377)
!9402 = !DILocation(line: 3248, column: 5, scope: !9377)
!9403 = !DILocation(line: 3250, column: 5, scope: !9377)
!9404 = distinct !DISubprogram(name: "SF_DAL_ResumeErase", scope: !1245, file: !1245, line: 3277, type: !1723, scopeLine: 3278, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !9405)
!9405 = !{!9406, !9407, !9408}
!9406 = !DILocalVariable(name: "MTDData", arg: 1, scope: !9404, file: !1245, line: 3277, type: !124)
!9407 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !9404, file: !1245, line: 3277, type: !105)
!9408 = !DILocalVariable(name: "D", scope: !9404, file: !1245, line: 3279, type: !1415)
!9409 = !DILocation(line: 0, scope: !9404)
!9410 = !DILocation(line: 3279, column: 29, scope: !9404)
!9411 = !DILocation(line: 3281, column: 5, scope: !9404)
!9412 = !DILocation(line: 3282, column: 5, scope: !9404)
!9413 = !DILocation(line: 3283, column: 5, scope: !9404)
!9414 = !DILocation(line: 3285, column: 5, scope: !9404)
!9415 = distinct !DISubprogram(name: "SF_DAL_LockEraseBlkAddr", scope: !1245, file: !1245, line: 3332, type: !1749, scopeLine: 3333, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !9416)
!9416 = !{!9417, !9418, !9419}
!9417 = !DILocalVariable(name: "MTDData", arg: 1, scope: !9415, file: !1245, line: 3332, type: !124)
!9418 = !DILocalVariable(name: "BlkAddr", arg: 2, scope: !9415, file: !1245, line: 3332, type: !124)
!9419 = !DILocalVariable(name: "ACTION", arg: 3, scope: !9415, file: !1245, line: 3332, type: !105)
!9420 = !DILocation(line: 0, scope: !9415)
!9421 = !DILocation(line: 3334, column: 5, scope: !9415)
!9422 = distinct !DISubprogram(name: "SF_DAL_IOCtrl", scope: !1245, file: !1245, line: 2350, type: !1757, scopeLine: 2351, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !9423)
!9423 = !{!9424, !9425, !9426, !9427}
!9424 = !DILocalVariable(name: "MTDData", arg: 1, scope: !9422, file: !1245, line: 2350, type: !124)
!9425 = !DILocalVariable(name: "CtrlAction", arg: 2, scope: !9422, file: !1245, line: 2350, type: !105)
!9426 = !DILocalVariable(name: "CtrlData", arg: 3, scope: !9422, file: !1245, line: 2350, type: !124)
!9427 = !DILocalVariable(name: "D", scope: !9422, file: !1245, line: 2352, type: !1415)
!9428 = !DILocation(line: 0, scope: !9422)
!9429 = !DILocation(line: 2353, column: 9, scope: !9422)
!9430 = !DILocation(line: 2354, column: 12, scope: !9431)
!9431 = distinct !DILexicalBlock(scope: !9432, file: !1245, line: 2353, column: 51)
!9432 = distinct !DILexicalBlock(scope: !9422, file: !1245, line: 2353, column: 9)
!9433 = !DILocation(line: 2354, column: 9, scope: !9431)
!9434 = !DILocation(line: 2355, column: 5, scope: !9431)
!9435 = !DILocation(line: 2356, column: 17, scope: !9436)
!9436 = distinct !DILexicalBlock(scope: !9437, file: !1245, line: 2356, column: 13)
!9437 = distinct !DILexicalBlock(scope: !9438, file: !1245, line: 2355, column: 71)
!9438 = distinct !DILexicalBlock(scope: !9432, file: !1245, line: 2355, column: 16)
!9439 = !DILocation(line: 2356, column: 14, scope: !9436)
!9440 = !DILocation(line: 2356, column: 28, scope: !9436)
!9441 = !DILocation(line: 2356, column: 49, scope: !9436)
!9442 = !DILocation(line: 2356, column: 56, scope: !9436)
!9443 = !DILocation(line: 2356, column: 70, scope: !9436)
!9444 = !DILocation(line: 2356, column: 80, scope: !9436)
!9445 = !DILocation(line: 2356, column: 13, scope: !9437)
!9446 = !DILocation(line: 2361, column: 9, scope: !9447)
!9447 = distinct !DILexicalBlock(scope: !9448, file: !1245, line: 2361, column: 9)
!9448 = distinct !DILexicalBlock(scope: !9449, file: !1245, line: 2361, column: 9)
!9449 = distinct !DILexicalBlock(scope: !9450, file: !1245, line: 2361, column: 9)
!9450 = distinct !DILexicalBlock(scope: !9438, file: !1245, line: 2359, column: 12)
!9451 = !DILocation(line: 2363, column: 5, scope: !9422)
!9452 = !DILocation(line: 2364, column: 1, scope: !9422)
!9453 = distinct !DISubprogram(name: "SF_DAL_FailCheck", scope: !1245, file: !1245, line: 3355, type: !1517, scopeLine: 3356, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !9454)
!9454 = !{!9455, !9456, !9457}
!9455 = !DILocalVariable(name: "MTDData", arg: 1, scope: !9453, file: !1245, line: 3355, type: !124)
!9456 = !DILocalVariable(name: "D", scope: !9453, file: !1245, line: 3357, type: !1415)
!9457 = !DILocalVariable(name: "status", scope: !9453, file: !1245, line: 3358, type: !987)
!9458 = !DILocation(line: 0, scope: !9453)
!9459 = !DILocation(line: 3366, column: 12, scope: !9460)
!9460 = distinct !DILexicalBlock(scope: !9453, file: !1245, line: 3366, column: 9)
!9461 = !DILocation(line: 3366, column: 17, scope: !9460)
!9462 = !DILocation(line: 3366, column: 9, scope: !9460)
!9463 = !DILocation(line: 3366, column: 9, scope: !9453)
!9464 = !DILocation(line: 3357, column: 25, scope: !9453)
!9465 = !DILocation(line: 3367, column: 18, scope: !9466)
!9466 = distinct !DILexicalBlock(scope: !9460, file: !1245, line: 3366, column: 33)
!9467 = !DILocation(line: 3368, column: 25, scope: !9468)
!9468 = distinct !DILexicalBlock(scope: !9466, file: !1245, line: 3368, column: 13)
!9469 = !DILocation(line: 3368, column: 22, scope: !9468)
!9470 = !DILocation(line: 3368, column: 20, scope: !9468)
!9471 = !DILocation(line: 3368, column: 13, scope: !9466)
!9472 = !DILocation(line: 3373, column: 5, scope: !9453)
!9473 = !DILocation(line: 3374, column: 1, scope: !9453)
!9474 = distinct !DISubprogram(name: "SF_DAL_CheckReadyAndResume", scope: !1245, file: !1245, line: 3044, type: !9475, scopeLine: 3045, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !9477)
!9475 = !DISubroutineType(types: !9476)
!9476 = !{!1124, !124, !105, !127}
!9477 = !{!9478, !9479, !9480, !9481, !9482, !9483, !9484, !9485}
!9478 = !DILocalVariable(name: "MTDData", arg: 1, scope: !9474, file: !1245, line: 3044, type: !124)
!9479 = !DILocalVariable(name: "addr", arg: 2, scope: !9474, file: !1245, line: 3044, type: !105)
!9480 = !DILocalVariable(name: "data", arg: 3, scope: !9474, file: !1245, line: 3044, type: !127)
!9481 = !DILocalVariable(name: "savedMask", scope: !9474, file: !1245, line: 3046, type: !105)
!9482 = !DILocalVariable(name: "D", scope: !9474, file: !1245, line: 3047, type: !1415)
!9483 = !DILocalVariable(name: "result", scope: !9474, file: !1245, line: 3048, type: !1124)
!9484 = !DILocalVariable(name: "check_data", scope: !9474, file: !1245, line: 3049, type: !127)
!9485 = !DILocalVariable(name: "status_busy", scope: !9474, file: !1245, line: 3050, type: !987)
!9486 = !DILocation(line: 0, scope: !9474)
!9487 = !DILocation(line: 3047, column: 43, scope: !9474)
!9488 = !DILocation(line: 3053, column: 47, scope: !9474)
!9489 = !DILocation(line: 3053, column: 52, scope: !9474)
!9490 = !DILocation(line: 3053, column: 19, scope: !9474)
!9491 = !DILocation(line: 3056, column: 9, scope: !9492)
!9492 = distinct !DILexicalBlock(scope: !9474, file: !1245, line: 3056, column: 9)
!9493 = !DILocation(line: 3056, column: 9, scope: !9474)
!9494 = !DILocation(line: 3058, column: 9, scope: !9495)
!9495 = distinct !DILexicalBlock(scope: !9496, file: !1245, line: 3058, column: 9)
!9496 = distinct !DILexicalBlock(scope: !9497, file: !1245, line: 3058, column: 9)
!9497 = distinct !DILexicalBlock(scope: !9492, file: !1245, line: 3056, column: 28)
!9498 = !DILocation(line: 3058, column: 9, scope: !9496)
!9499 = !DILocation(line: 3058, column: 9, scope: !9500)
!9500 = distinct !DILexicalBlock(scope: !9495, file: !1245, line: 3058, column: 9)
!9501 = !DILocation(line: 3060, column: 9, scope: !9497)
!9502 = !DILocation(line: 3062, column: 29, scope: !9497)
!9503 = !DILocation(line: 3063, column: 5, scope: !9497)
!9504 = !DILocation(line: 3065, column: 38, scope: !9505)
!9505 = distinct !DILexicalBlock(scope: !9492, file: !1245, line: 3065, column: 15)
!9506 = !DILocation(line: 3065, column: 35, scope: !9505)
!9507 = !DILocation(line: 3065, column: 33, scope: !9505)
!9508 = !DILocation(line: 3065, column: 17, scope: !9505)
!9509 = !DILocation(line: 3065, column: 15, scope: !9492)
!9510 = !DILocation(line: 3066, column: 21, scope: !9511)
!9511 = distinct !DILexicalBlock(scope: !9505, file: !1245, line: 3065, column: 62)
!9512 = !DILocation(line: 3068, column: 9, scope: !9511)
!9513 = !DILocation(line: 3071, column: 23, scope: !9511)
!9514 = !DILocation(line: 3071, column: 22, scope: !9511)
!9515 = !DILocation(line: 3073, column: 24, scope: !9516)
!9516 = distinct !DILexicalBlock(scope: !9511, file: !1245, line: 3073, column: 13)
!9517 = !DILocation(line: 3088, column: 9, scope: !9511)
!9518 = !DILocation(line: 3092, column: 13, scope: !9519)
!9519 = distinct !DILexicalBlock(scope: !9520, file: !1245, line: 3092, column: 13)
!9520 = distinct !DILexicalBlock(scope: !9474, file: !1245, line: 3091, column: 9)
!9521 = !DILocation(line: 3092, column: 33, scope: !9519)
!9522 = !DILocation(line: 3092, column: 13, scope: !9520)
!9523 = !DILocation(line: 3106, column: 5, scope: !9474)
!9524 = !DILocation(line: 3107, column: 1, scope: !9474)
!9525 = distinct !DISubprogram(name: "SF_DAL_Dev_EraseBlock", scope: !1245, file: !1245, line: 3497, type: !9526, scopeLine: 3498, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !9528)
!9526 = !DISubroutineType(types: !9527)
!9527 = !{null, !1415, !105}
!9528 = !{!9529, !9530, !9531}
!9529 = !DILocalVariable(name: "D", arg: 1, scope: !9525, file: !1245, line: 3497, type: !1415)
!9530 = !DILocalVariable(name: "addr", arg: 2, scope: !9525, file: !1245, line: 3497, type: !105)
!9531 = !DILocalVariable(name: "savedMask", scope: !9525, file: !1245, line: 3499, type: !105)
!9532 = !DILocation(line: 0, scope: !9525)
!9533 = !DILocation(line: 3501, column: 14, scope: !9534)
!9534 = distinct !DILexicalBlock(scope: !9525, file: !1245, line: 3501, column: 9)
!9535 = !DILocation(line: 3501, column: 25, scope: !9534)
!9536 = !DILocation(line: 3501, column: 9, scope: !9525)
!9537 = !DILocation(line: 3502, column: 9, scope: !9538)
!9538 = distinct !DILexicalBlock(scope: !9534, file: !1245, line: 3501, column: 51)
!9539 = !DILocation(line: 3503, column: 5, scope: !9538)
!9540 = !DILocation(line: 3507, column: 17, scope: !9525)
!9541 = !DILocation(line: 3516, column: 5, scope: !9525)
!9542 = !DILocation(line: 3517, column: 31, scope: !9525)
!9543 = !DILocation(line: 3517, column: 38, scope: !9525)
!9544 = !DILocation(line: 3517, column: 43, scope: !9525)
!9545 = !DILocation(line: 3517, column: 59, scope: !9525)
!9546 = !DILocation(line: 3517, column: 56, scope: !9525)
!9547 = !DILocation(line: 3517, column: 5, scope: !9525)
!9548 = !DILocation(line: 3523, column: 5, scope: !9525)
!9549 = !DILocation(line: 3524, column: 1, scope: !9525)
!9550 = distinct !DISubprogram(name: "SF_DAL_Init_Vendor", scope: !1245, file: !1245, line: 2018, type: !8664, scopeLine: 2019, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !9551)
!9551 = !{!9552, !9553, !9554}
!9552 = !DILocalVariable(name: "driver", arg: 1, scope: !9550, file: !1245, line: 2018, type: !8666)
!9553 = !DILocalVariable(name: "D", arg: 2, scope: !9550, file: !1245, line: 2018, type: !1415)
!9554 = !DILocalVariable(name: "result", scope: !9550, file: !1245, line: 2020, type: !1124)
!9555 = !DILocation(line: 0, scope: !9550)
!9556 = !DILocation(line: 2022, column: 13, scope: !9550)
!9557 = !DILocation(line: 2022, column: 5, scope: !9550)
!9558 = !DILocation(line: 2031, column: 16, scope: !9559)
!9559 = distinct !DILexicalBlock(scope: !9550, file: !1245, line: 2022, column: 31)
!9560 = !DILocation(line: 2031, column: 27, scope: !9559)
!9561 = !DILocation(line: 2033, column: 22, scope: !9559)
!9562 = !DILocation(line: 2034, column: 13, scope: !9559)
!9563 = !DILocation(line: 2049, column: 16, scope: !9559)
!9564 = !DILocation(line: 2049, column: 27, scope: !9559)
!9565 = !DILocation(line: 2051, column: 23, scope: !9559)
!9566 = !DILocation(line: 2053, column: 13, scope: !9559)
!9567 = !DILocation(line: 2058, column: 22, scope: !9559)
!9568 = !DILocation(line: 2059, column: 13, scope: !9559)
!9569 = !DILocation(line: 2079, column: 13, scope: !9570)
!9570 = distinct !DILexicalBlock(scope: !9571, file: !1245, line: 2079, column: 13)
!9571 = distinct !DILexicalBlock(scope: !9572, file: !1245, line: 2079, column: 13)
!9572 = distinct !DILexicalBlock(scope: !9559, file: !1245, line: 2079, column: 13)
!9573 = !DILocation(line: 2083, column: 5, scope: !9550)
!9574 = distinct !DISubprogram(name: "SF_DAL_Init_Driver", scope: !1245, file: !1245, line: 2100, type: !9575, scopeLine: 2101, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !9577)
!9575 = !DISubroutineType(types: !9576)
!9576 = !{!1124, !8666, !1415, !105, !105}
!9577 = !{!9578, !9579, !9580, !9581, !9582}
!9578 = !DILocalVariable(name: "driver", arg: 1, scope: !9574, file: !1245, line: 2100, type: !8666)
!9579 = !DILocalVariable(name: "D", arg: 2, scope: !9574, file: !1245, line: 2100, type: !1415)
!9580 = !DILocalVariable(name: "baseaddr", arg: 3, scope: !9574, file: !1245, line: 2100, type: !105)
!9581 = !DILocalVariable(name: "parameter", arg: 4, scope: !9574, file: !1245, line: 2100, type: !105)
!9582 = !DILocalVariable(name: "result", scope: !9574, file: !1245, line: 2102, type: !1124)
!9583 = !DILocation(line: 0, scope: !9574)
!9584 = !DILocation(line: 2105, column: 16, scope: !9585)
!9585 = distinct !DILexicalBlock(scope: !9574, file: !1245, line: 2105, column: 9)
!9586 = !DILocation(line: 2105, column: 24, scope: !9585)
!9587 = !DILocation(line: 2109, column: 12, scope: !9588)
!9588 = distinct !DILexicalBlock(scope: !9574, file: !1245, line: 2109, column: 9)
!9589 = !DILocation(line: 2109, column: 16, scope: !9588)
!9590 = !DILocation(line: 2109, column: 24, scope: !9588)
!9591 = !DILocation(line: 2109, column: 30, scope: !9588)
!9592 = !DILocation(line: 2109, column: 40, scope: !9588)
!9593 = !DILocation(line: 2109, column: 9, scope: !9574)
!9594 = !DILocation(line: 2118, column: 19, scope: !9574)
!9595 = !DILocation(line: 2118, column: 8, scope: !9574)
!9596 = !DILocation(line: 2118, column: 17, scope: !9574)
!9597 = !DILocation(line: 2119, column: 23, scope: !9574)
!9598 = !DILocation(line: 2119, column: 8, scope: !9574)
!9599 = !DILocation(line: 2119, column: 21, scope: !9574)
!9600 = !DILocation(line: 2122, column: 5, scope: !9574)
!9601 = !DILocation(line: 2125, column: 8, scope: !9574)
!9602 = !DILocation(line: 2125, column: 13, scope: !9574)
!9603 = !DILocation(line: 2125, column: 24, scope: !9574)
!9604 = !DILocation(line: 2126, column: 26, scope: !9574)
!9605 = !DILocation(line: 2126, column: 5, scope: !9574)
!9606 = !DILocation(line: 2128, column: 9, scope: !9607)
!9607 = distinct !DILexicalBlock(scope: !9574, file: !1245, line: 2128, column: 9)
!9608 = !DILocation(line: 2128, column: 31, scope: !9607)
!9609 = !DILocation(line: 2128, column: 60, scope: !9607)
!9610 = !DILocation(line: 2128, column: 9, scope: !9574)
!9611 = !DILocation(line: 2129, column: 12, scope: !9612)
!9612 = distinct !DILexicalBlock(scope: !9607, file: !1245, line: 2128, column: 110)
!9613 = !DILocation(line: 2129, column: 17, scope: !9612)
!9614 = !DILocation(line: 2129, column: 28, scope: !9612)
!9615 = !DILocation(line: 2130, column: 9, scope: !9612)
!9616 = !DILocation(line: 2131, column: 5, scope: !9612)
!9617 = !DILocation(line: 2134, column: 14, scope: !9574)
!9618 = !DILocation(line: 2136, column: 5, scope: !9574)
!9619 = !DILocation(line: 2137, column: 1, scope: !9574)
!9620 = distinct !DISubprogram(name: "SF_DAL_Dev_ReadID", scope: !1245, file: !1245, line: 3387, type: !9621, scopeLine: 3388, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !9623)
!9621 = !DISubroutineType(types: !9622)
!9622 = !{null, !1415, !818}
!9623 = !{!9624, !9625, !9626}
!9624 = !DILocalVariable(name: "D", arg: 1, scope: !9620, file: !1245, line: 3387, type: !1415)
!9625 = !DILocalVariable(name: "id", arg: 2, scope: !9620, file: !1245, line: 3387, type: !818)
!9626 = !DILocalVariable(name: "cmd", scope: !9620, file: !1245, line: 3389, type: !127)
!9627 = !DILocation(line: 0, scope: !9620)
!9628 = !DILocation(line: 3389, column: 5, scope: !9620)
!9629 = !DILocation(line: 3405, column: 9, scope: !9630)
!9630 = distinct !DILexicalBlock(scope: !9620, file: !1245, line: 3405, column: 9)
!9631 = !DILocation(line: 3405, column: 21, scope: !9630)
!9632 = !DILocation(line: 0, scope: !9630)
!9633 = !DILocation(line: 3405, column: 9, scope: !9620)
!9634 = !DILocation(line: 3411, column: 31, scope: !9620)
!9635 = !DILocation(line: 3411, column: 5, scope: !9620)
!9636 = !DILocation(line: 3412, column: 1, scope: !9620)
!9637 = distinct !DISubprogram(name: "SF_DAL_Dev_Command_Ext", scope: !1245, file: !1245, line: 3585, type: !9638, scopeLine: 3586, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1244, retainedNodes: !9640)
!9638 = !DISubroutineType(types: !9639)
!9639 = !{null, !7433, !818, !818, !7433, !7433}
!9640 = !{!9641, !9642, !9643, !9644, !9645, !9646}
!9641 = !DILocalVariable(name: "CS", arg: 1, scope: !9637, file: !1245, line: 3585, type: !7433)
!9642 = !DILocalVariable(name: "cmd", arg: 2, scope: !9637, file: !1245, line: 3585, type: !818)
!9643 = !DILocalVariable(name: "data", arg: 3, scope: !9637, file: !1245, line: 3585, type: !818)
!9644 = !DILocalVariable(name: "outl", arg: 4, scope: !9637, file: !1245, line: 3585, type: !7433)
!9645 = !DILocalVariable(name: "inl", arg: 5, scope: !9637, file: !1245, line: 3585, type: !7433)
!9646 = !DILocalVariable(name: "savedMask", scope: !9637, file: !1245, line: 3587, type: !105)
!9647 = !DILocation(line: 0, scope: !9637)
!9648 = !DILocation(line: 3589, column: 17, scope: !9637)
!9649 = !DILocation(line: 3590, column: 5, scope: !9637)
!9650 = !DILocation(line: 3591, column: 5, scope: !9637)
!9651 = !DILocation(line: 3593, column: 1, scope: !9637)
!9652 = distinct !DISubprogram(name: "CMEM_CheckValidDeviceID", scope: !1570, file: !1570, line: 110, type: !7911, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1569, retainedNodes: !9653)
!9653 = !{!9654, !9655, !9656, !9657}
!9654 = !DILocalVariable(name: "id", arg: 1, scope: !9652, file: !1570, line: 110, type: !818)
!9655 = !DILocalVariable(name: "i", scope: !9652, file: !1570, line: 114, type: !1124)
!9656 = !DILocalVariable(name: "j", scope: !9652, file: !1570, line: 114, type: !1124)
!9657 = !DILocalVariable(name: "id_list", scope: !9652, file: !1570, line: 115, type: !9658)
!9658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9659, size: 32)
!9659 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1648)
!9660 = !DILocation(line: 0, scope: !9652)
!9661 = !DILocation(line: 119, column: 5, scope: !9662)
!9662 = distinct !DILexicalBlock(scope: !9652, file: !1570, line: 119, column: 5)
!9663 = !DILocation(line: 119, column: 46, scope: !9664)
!9664 = distinct !DILexicalBlock(scope: !9662, file: !1570, line: 119, column: 5)
!9665 = !DILocation(line: 119, column: 19, scope: !9664)
!9666 = distinct !{!9666, !9661, !9667}
!9667 = !DILocation(line: 131, column: 5, scope: !9662)
!9668 = !DILocation(line: 121, column: 23, scope: !9669)
!9669 = distinct !DILexicalBlock(scope: !9670, file: !1570, line: 121, column: 9)
!9670 = distinct !DILexicalBlock(scope: !9671, file: !1570, line: 121, column: 9)
!9671 = distinct !DILexicalBlock(scope: !9664, file: !1570, line: 119, column: 50)
!9672 = !DILocation(line: 121, column: 9, scope: !9670)
!9673 = !DILocation(line: 122, column: 17, scope: !9674)
!9674 = distinct !DILexicalBlock(scope: !9675, file: !1570, line: 122, column: 17)
!9675 = distinct !DILexicalBlock(scope: !9669, file: !1570, line: 121, column: 51)
!9676 = !DILocation(line: 122, column: 37, scope: !9674)
!9677 = !DILocation(line: 122, column: 34, scope: !9674)
!9678 = !DILocation(line: 122, column: 17, scope: !9675)
!9679 = !DILocation(line: 121, column: 47, scope: !9669)
!9680 = distinct !{!9680, !9672, !9681}
!9681 = !DILocation(line: 125, column: 9, scope: !9670)
!9682 = !DILocation(line: 0, scope: !9670)
!9683 = !DILocation(line: 127, column: 15, scope: !9684)
!9684 = distinct !DILexicalBlock(scope: !9671, file: !1570, line: 127, column: 13)
!9685 = !DILocation(line: 127, column: 13, scope: !9671)
!9686 = !DILocation(line: 134, column: 1, scope: !9652)
!9687 = distinct !DISubprogram(name: "CMEM_Index", scope: !1570, file: !1570, line: 153, type: !8066, scopeLine: 155, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1569, retainedNodes: !9688)
!9688 = !{!9689, !9690, !9691, !9698}
!9689 = !DILocalVariable(name: "i", scope: !9687, file: !1570, line: 156, type: !1124)
!9690 = !DILocalVariable(name: "j", scope: !9687, file: !1570, line: 156, type: !1124)
!9691 = !DILocalVariable(name: "id", scope: !9687, file: !1570, line: 157, type: !9692)
!9692 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMFlashID", file: !1641, line: 89, baseType: !9693)
!9693 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1641, line: 86, size: 64, elements: !9694)
!9694 = !{!9695, !9696}
!9695 = !DIDerivedType(tag: DW_TAG_member, name: "NAND", scope: !9693, file: !1641, line: 87, baseType: !1654, size: 64)
!9696 = !DIDerivedType(tag: DW_TAG_member, name: "NOR", scope: !9693, file: !1641, line: 88, baseType: !9697, size: 64)
!9697 = !DICompositeType(tag: DW_TAG_array_type, baseType: !987, size: 64, elements: !482)
!9698 = !DILocalVariable(name: "id_list", scope: !9687, file: !1570, line: 158, type: !9658)
!9699 = !DILocation(line: 157, column: 5, scope: !9687)
!9700 = !DILocation(line: 157, column: 17, scope: !9687)
!9701 = !DILocation(line: 0, scope: !9687)
!9702 = !DILocation(line: 161, column: 9, scope: !9703)
!9703 = distinct !DILexicalBlock(scope: !9687, file: !1570, line: 161, column: 9)
!9704 = !DILocation(line: 161, column: 20, scope: !9703)
!9705 = !DILocation(line: 161, column: 9, scope: !9687)
!9706 = !DILocation(line: 172, column: 58, scope: !9687)
!9707 = !DILocation(line: 172, column: 5, scope: !9687)
!9708 = !DILocation(line: 178, column: 5, scope: !9709)
!9709 = distinct !DILexicalBlock(scope: !9687, file: !1570, line: 178, column: 5)
!9710 = !DILocation(line: 180, column: 23, scope: !9711)
!9711 = distinct !DILexicalBlock(scope: !9712, file: !1570, line: 180, column: 9)
!9712 = distinct !DILexicalBlock(scope: !9713, file: !1570, line: 180, column: 9)
!9713 = distinct !DILexicalBlock(scope: !9714, file: !1570, line: 178, column: 53)
!9714 = distinct !DILexicalBlock(scope: !9709, file: !1570, line: 178, column: 5)
!9715 = !DILocation(line: 180, column: 9, scope: !9712)
!9716 = !DILocation(line: 181, column: 17, scope: !9717)
!9717 = distinct !DILexicalBlock(scope: !9718, file: !1570, line: 181, column: 17)
!9718 = distinct !DILexicalBlock(scope: !9711, file: !1570, line: 180, column: 51)
!9719 = !DILocation(line: 181, column: 37, scope: !9717)
!9720 = !DILocation(line: 181, column: 34, scope: !9717)
!9721 = !DILocation(line: 181, column: 17, scope: !9718)
!9722 = !DILocation(line: 180, column: 47, scope: !9711)
!9723 = distinct !{!9723, !9715, !9724}
!9724 = !DILocation(line: 184, column: 9, scope: !9712)
!9725 = !DILocation(line: 0, scope: !9712)
!9726 = !DILocation(line: 186, column: 15, scope: !9727)
!9727 = distinct !DILexicalBlock(scope: !9713, file: !1570, line: 186, column: 13)
!9728 = !DILocation(line: 186, column: 13, scope: !9713)
!9729 = !DILocation(line: 188, column: 26, scope: !9730)
!9730 = distinct !DILexicalBlock(scope: !9727, file: !1570, line: 186, column: 41)
!9731 = !DILocation(line: 188, column: 24, scope: !9730)
!9732 = !DILocation(line: 189, column: 13, scope: !9730)
!9733 = !DILocation(line: 178, column: 46, scope: !9714)
!9734 = !DILocation(line: 178, column: 19, scope: !9714)
!9735 = distinct !{!9735, !9708, !9736}
!9736 = !DILocation(line: 191, column: 5, scope: !9709)
!9737 = !DILocation(line: 222, column: 12, scope: !9687)
!9738 = !DILocation(line: 223, column: 1, scope: !9687)
!9739 = distinct !DISubprogram(name: "CMEM_GetIDEntry", scope: !1570, file: !1570, line: 240, type: !9740, scopeLine: 241, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1569, retainedNodes: !9742)
!9740 = !DISubroutineType(types: !9741)
!9741 = !{!9658, !105}
!9742 = !{!9743}
!9743 = !DILocalVariable(name: "index", arg: 1, scope: !9739, file: !1570, line: 240, type: !105)
!9744 = !DILocation(line: 0, scope: !9739)
!9745 = !DILocation(line: 242, column: 13, scope: !9739)
!9746 = !DILocation(line: 242, column: 5, scope: !9739)
!9747 = distinct !DISubprogram(name: "CMEM_EMIINIT_ReadID", scope: !1570, file: !1570, line: 254, type: !9748, scopeLine: 255, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1569, retainedNodes: !9750)
!9748 = !DISubroutineType(types: !9749)
!9749 = !{null, !7433, !124, !1217}
!9750 = !{!9751, !9752, !9753, !9754, !9756, !9757}
!9751 = !DILocalVariable(name: "CS", arg: 1, scope: !9747, file: !1570, line: 254, type: !7433)
!9752 = !DILocalVariable(name: "BaseAddr", arg: 2, scope: !9747, file: !1570, line: 254, type: !124)
!9753 = !DILocalVariable(name: "flashid", arg: 3, scope: !9747, file: !1570, line: 254, type: !1217)
!9754 = !DILocalVariable(name: "cmd", scope: !9755, file: !1570, line: 258, type: !127)
!9755 = distinct !DILexicalBlock(scope: !9747, file: !1570, line: 257, column: 5)
!9756 = !DILocalVariable(name: "id", scope: !9755, file: !1570, line: 258, type: !1505)
!9757 = !DILocalVariable(name: "i", scope: !9755, file: !1570, line: 258, type: !127)
!9758 = !DILocation(line: 0, scope: !9747)
!9759 = !DILocation(line: 258, column: 9, scope: !9755)
!9760 = !DILocation(line: 258, column: 22, scope: !9755)
!9761 = !DILocation(line: 0, scope: !9755)
!9762 = !DILocation(line: 260, column: 13, scope: !9755)
!9763 = !DILocation(line: 261, column: 9, scope: !9755)
!9764 = !DILocation(line: 263, column: 13, scope: !9765)
!9765 = distinct !DILexicalBlock(scope: !9755, file: !1570, line: 263, column: 13)
!9766 = !DILocation(line: 263, column: 27, scope: !9765)
!9767 = !DILocation(line: 263, column: 48, scope: !9765)
!9768 = !DILocation(line: 263, column: 13, scope: !9755)
!9769 = !DILocation(line: 264, column: 17, scope: !9770)
!9770 = distinct !DILexicalBlock(scope: !9765, file: !1570, line: 263, column: 95)
!9771 = !DILocation(line: 265, column: 13, scope: !9770)
!9772 = !DILocation(line: 266, column: 9, scope: !9770)
!9773 = !DILocation(line: 268, column: 9, scope: !9774)
!9774 = distinct !DILexicalBlock(scope: !9755, file: !1570, line: 268, column: 9)
!9775 = !DILocation(line: 269, column: 26, scope: !9776)
!9776 = distinct !DILexicalBlock(scope: !9777, file: !1570, line: 268, column: 50)
!9777 = distinct !DILexicalBlock(scope: !9774, file: !1570, line: 268, column: 9)
!9778 = !DILocation(line: 269, column: 13, scope: !9776)
!9779 = !DILocation(line: 269, column: 24, scope: !9776)
!9780 = !DILocation(line: 268, column: 46, scope: !9777)
!9781 = !DILocation(line: 268, column: 23, scope: !9777)
!9782 = distinct !{!9782, !9773, !9783}
!9783 = !DILocation(line: 270, column: 9, scope: !9774)
!9784 = !DILocation(line: 271, column: 5, scope: !9747)
!9785 = !DILocation(line: 272, column: 5, scope: !9747)
!9786 = distinct !DISubprogram(name: "CMEM_EMIINIT_CheckValidDeviceID", scope: !1570, file: !1570, line: 285, type: !7911, scopeLine: 286, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1569, retainedNodes: !9787)
!9787 = !{!9788, !9789, !9790, !9791}
!9788 = !DILocalVariable(name: "id", arg: 1, scope: !9786, file: !1570, line: 285, type: !818)
!9789 = !DILocalVariable(name: "i", scope: !9786, file: !1570, line: 289, type: !1124)
!9790 = !DILocalVariable(name: "j", scope: !9786, file: !1570, line: 289, type: !1124)
!9791 = !DILocalVariable(name: "id_list", scope: !9786, file: !1570, line: 290, type: !9658)
!9792 = !DILocation(line: 0, scope: !9786)
!9793 = !DILocation(line: 294, column: 5, scope: !9794)
!9794 = distinct !DILexicalBlock(scope: !9786, file: !1570, line: 294, column: 5)
!9795 = !DILocation(line: 294, column: 46, scope: !9796)
!9796 = distinct !DILexicalBlock(scope: !9794, file: !1570, line: 294, column: 5)
!9797 = !DILocation(line: 294, column: 19, scope: !9796)
!9798 = distinct !{!9798, !9793, !9799}
!9799 = !DILocation(line: 306, column: 5, scope: !9794)
!9800 = !DILocation(line: 296, column: 23, scope: !9801)
!9801 = distinct !DILexicalBlock(scope: !9802, file: !1570, line: 296, column: 9)
!9802 = distinct !DILexicalBlock(scope: !9803, file: !1570, line: 296, column: 9)
!9803 = distinct !DILexicalBlock(scope: !9796, file: !1570, line: 294, column: 53)
!9804 = !DILocation(line: 296, column: 9, scope: !9802)
!9805 = !DILocation(line: 297, column: 17, scope: !9806)
!9806 = distinct !DILexicalBlock(scope: !9807, file: !1570, line: 297, column: 17)
!9807 = distinct !DILexicalBlock(scope: !9801, file: !1570, line: 296, column: 51)
!9808 = !DILocation(line: 297, column: 37, scope: !9806)
!9809 = !DILocation(line: 297, column: 34, scope: !9806)
!9810 = !DILocation(line: 297, column: 17, scope: !9807)
!9811 = !DILocation(line: 296, column: 47, scope: !9801)
!9812 = distinct !{!9812, !9804, !9813}
!9813 = !DILocation(line: 300, column: 9, scope: !9802)
!9814 = !DILocation(line: 0, scope: !9802)
!9815 = !DILocation(line: 302, column: 15, scope: !9816)
!9816 = distinct !DILexicalBlock(scope: !9803, file: !1570, line: 302, column: 13)
!9817 = !DILocation(line: 302, column: 13, scope: !9803)
!9818 = !DILocation(line: 310, column: 1, scope: !9786)
!9819 = distinct !DISubprogram(name: "CMEM_EMIINIT_Index", scope: !1570, file: !1570, line: 328, type: !8066, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1569, retainedNodes: !9820)
!9820 = !{!9821, !9822, !9823, !9824}
!9821 = !DILocalVariable(name: "i", scope: !9819, file: !1570, line: 331, type: !1124)
!9822 = !DILocalVariable(name: "j", scope: !9819, file: !1570, line: 331, type: !1124)
!9823 = !DILocalVariable(name: "id", scope: !9819, file: !1570, line: 332, type: !9692)
!9824 = !DILocalVariable(name: "id_list", scope: !9819, file: !1570, line: 333, type: !9658)
!9825 = !DILocation(line: 332, column: 5, scope: !9819)
!9826 = !DILocation(line: 332, column: 17, scope: !9819)
!9827 = !DILocation(line: 0, scope: !9819)
!9828 = !DILocation(line: 336, column: 9, scope: !9829)
!9829 = distinct !DILexicalBlock(scope: !9819, file: !1570, line: 336, column: 9)
!9830 = !DILocation(line: 336, column: 28, scope: !9829)
!9831 = !DILocation(line: 336, column: 9, scope: !9819)
!9832 = !DILocation(line: 344, column: 60, scope: !9819)
!9833 = !DILocation(line: 344, column: 5, scope: !9819)
!9834 = !DILocation(line: 350, column: 5, scope: !9835)
!9835 = distinct !DILexicalBlock(scope: !9819, file: !1570, line: 350, column: 5)
!9836 = !DILocation(line: 352, column: 23, scope: !9837)
!9837 = distinct !DILexicalBlock(scope: !9838, file: !1570, line: 352, column: 9)
!9838 = distinct !DILexicalBlock(scope: !9839, file: !1570, line: 352, column: 9)
!9839 = distinct !DILexicalBlock(scope: !9840, file: !1570, line: 350, column: 53)
!9840 = distinct !DILexicalBlock(scope: !9835, file: !1570, line: 350, column: 5)
!9841 = !DILocation(line: 352, column: 9, scope: !9838)
!9842 = !DILocation(line: 353, column: 17, scope: !9843)
!9843 = distinct !DILexicalBlock(scope: !9844, file: !1570, line: 353, column: 17)
!9844 = distinct !DILexicalBlock(scope: !9837, file: !1570, line: 352, column: 51)
!9845 = !DILocation(line: 353, column: 37, scope: !9843)
!9846 = !DILocation(line: 353, column: 34, scope: !9843)
!9847 = !DILocation(line: 353, column: 17, scope: !9844)
!9848 = !DILocation(line: 352, column: 47, scope: !9837)
!9849 = distinct !{!9849, !9841, !9850}
!9850 = !DILocation(line: 356, column: 9, scope: !9838)
!9851 = !DILocation(line: 0, scope: !9838)
!9852 = !DILocation(line: 358, column: 15, scope: !9853)
!9853 = distinct !DILexicalBlock(scope: !9839, file: !1570, line: 358, column: 13)
!9854 = !DILocation(line: 358, column: 13, scope: !9839)
!9855 = !DILocation(line: 360, column: 34, scope: !9856)
!9856 = distinct !DILexicalBlock(scope: !9853, file: !1570, line: 358, column: 41)
!9857 = !DILocation(line: 360, column: 32, scope: !9856)
!9858 = !DILocation(line: 361, column: 13, scope: !9856)
!9859 = !DILocation(line: 350, column: 46, scope: !9840)
!9860 = !DILocation(line: 350, column: 19, scope: !9840)
!9861 = distinct !{!9861, !9834, !9862}
!9862 = !DILocation(line: 363, column: 5, scope: !9835)
!9863 = !DILocation(line: 364, column: 12, scope: !9819)
!9864 = !DILocation(line: 365, column: 1, scope: !9819)
!9865 = distinct !DISubprogram(name: "NOR_ReadID", scope: !3018, file: !3018, line: 64, type: !9866, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3017, retainedNodes: !9872)
!9866 = !DISubroutineType(types: !9867)
!9867 = !{null, !7433, !9868, !1217}
!9868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9869, size: 32)
!9869 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !9870)
!9870 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_CELL", file: !9871, line: 158, baseType: !987)
!9871 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_cfi_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/dac_output_data_repeatedly/GCC")
!9872 = !{!9873, !9874, !9875, !9876, !9877, !9879, !9880}
!9873 = !DILocalVariable(name: "CS", arg: 1, scope: !9865, file: !3018, line: 64, type: !7433)
!9874 = !DILocalVariable(name: "BaseAddr", arg: 2, scope: !9865, file: !3018, line: 64, type: !9868)
!9875 = !DILocalVariable(name: "flashid", arg: 3, scope: !9865, file: !3018, line: 64, type: !1217)
!9876 = !DILocalVariable(name: "savedMask", scope: !9865, file: !3018, line: 66, type: !105)
!9877 = !DILocalVariable(name: "cmd", scope: !9878, file: !3018, line: 70, type: !127)
!9878 = distinct !DILexicalBlock(scope: !9865, file: !3018, line: 69, column: 5)
!9879 = !DILocalVariable(name: "id", scope: !9878, file: !3018, line: 70, type: !1505)
!9880 = !DILocalVariable(name: "i", scope: !9878, file: !3018, line: 70, type: !127)
!9881 = !DILocation(line: 0, scope: !9865)
!9882 = !DILocation(line: 70, column: 9, scope: !9878)
!9883 = !DILocation(line: 70, column: 22, scope: !9878)
!9884 = !DILocation(line: 0, scope: !9878)
!9885 = !DILocation(line: 72, column: 13, scope: !9878)
!9886 = !DILocation(line: 73, column: 21, scope: !9878)
!9887 = !DILocation(line: 74, column: 9, scope: !9878)
!9888 = !DILocation(line: 75, column: 9, scope: !9878)
!9889 = !DILocation(line: 77, column: 13, scope: !9890)
!9890 = distinct !DILexicalBlock(scope: !9878, file: !3018, line: 77, column: 13)
!9891 = !DILocation(line: 77, column: 27, scope: !9890)
!9892 = !DILocation(line: 77, column: 48, scope: !9890)
!9893 = !DILocation(line: 77, column: 13, scope: !9878)
!9894 = !DILocation(line: 78, column: 17, scope: !9895)
!9895 = distinct !DILexicalBlock(scope: !9890, file: !3018, line: 77, column: 87)
!9896 = !DILocation(line: 79, column: 25, scope: !9895)
!9897 = !DILocation(line: 80, column: 13, scope: !9895)
!9898 = !DILocation(line: 81, column: 13, scope: !9895)
!9899 = !DILocation(line: 82, column: 9, scope: !9895)
!9900 = !DILocation(line: 84, column: 9, scope: !9901)
!9901 = distinct !DILexicalBlock(scope: !9878, file: !3018, line: 84, column: 9)
!9902 = !DILocation(line: 85, column: 26, scope: !9903)
!9903 = distinct !DILexicalBlock(scope: !9904, file: !3018, line: 84, column: 50)
!9904 = distinct !DILexicalBlock(scope: !9901, file: !3018, line: 84, column: 9)
!9905 = !DILocation(line: 85, column: 13, scope: !9903)
!9906 = !DILocation(line: 85, column: 24, scope: !9903)
!9907 = !DILocation(line: 84, column: 46, scope: !9904)
!9908 = !DILocation(line: 84, column: 23, scope: !9904)
!9909 = distinct !{!9909, !9900, !9910}
!9910 = !DILocation(line: 86, column: 9, scope: !9901)
!9911 = !DILocation(line: 87, column: 5, scope: !9865)
!9912 = !DILocation(line: 89, column: 1, scope: !9865)
!9913 = distinct !DISubprogram(name: "custom_get_NORFLASH_ROMSpace", scope: !1658, file: !1658, line: 248, type: !4034, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1657, retainedNodes: !320)
!9914 = !DILocation(line: 250, column: 5, scope: !9913)
!9915 = distinct !DISubprogram(name: "custom_get_NORFLASH_Size", scope: !1658, file: !1658, line: 270, type: !4034, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1657, retainedNodes: !320)
!9916 = !DILocation(line: 272, column: 5, scope: !9915)
!9917 = distinct !DISubprogram(name: "Initialize_FDD_tables", scope: !1658, file: !1658, line: 294, type: !318, scopeLine: 295, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1657, retainedNodes: !320)
!9918 = !DILocation(line: 296, column: 5, scope: !9917)
!9919 = !DILocation(line: 297, column: 5, scope: !9917)
!9920 = distinct !DISubprogram(name: "nor_sweep_device", scope: !1658, file: !1658, line: 304, type: !318, scopeLine: 305, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1657, retainedNodes: !320)
!9921 = !DILocation(line: 309, column: 5, scope: !9920)
!9922 = distinct !DISubprogram(name: "nor_manual_reclaim", scope: !1658, file: !1658, line: 312, type: !318, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1657, retainedNodes: !320)
!9923 = !DILocation(line: 317, column: 5, scope: !9922)
!9924 = distinct !DISubprogram(name: "custom_get_fat_addr", scope: !1658, file: !1658, line: 334, type: !4034, scopeLine: 335, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1657, retainedNodes: !320)
!9925 = !DILocation(line: 336, column: 5, scope: !9924)
!9926 = distinct !DISubprogram(name: "custom_get_fat_len", scope: !1658, file: !1658, line: 353, type: !4034, scopeLine: 354, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1657, retainedNodes: !320)
!9927 = !DILocation(line: 355, column: 5, scope: !9926)
!9928 = distinct !DISubprogram(name: "Custom_NOR_Init", scope: !1658, file: !1658, line: 374, type: !318, scopeLine: 375, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1657, retainedNodes: !320)
!9929 = !DILocation(line: 376, column: 5, scope: !9928)
!9930 = !DILocation(line: 377, column: 1, scope: !9928)
!9931 = distinct !DISubprogram(name: "custom_get_NORFLASH_Base", scope: !1658, file: !1658, line: 395, type: !4034, scopeLine: 396, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1657, retainedNodes: !320)
!9932 = !DILocation(line: 397, column: 5, scope: !9931)
!9933 = distinct !DISubprogram(name: "custom_get_FLASH_Size", scope: !1658, file: !1658, line: 416, type: !4034, scopeLine: 417, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1657, retainedNodes: !320)
!9934 = !DILocation(line: 418, column: 5, scope: !9933)
!9935 = distinct !DISubprogram(name: "INT_RetrieveFlashBaseAddr", scope: !1667, file: !1667, line: 254, type: !4034, scopeLine: 255, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1666, retainedNodes: !320)
!9936 = !DILocation(line: 256, column: 32, scope: !9935)
!9937 = !DILocation(line: 257, column: 5, scope: !9935)
!9938 = distinct !DISubprogram(name: "CMEM_Init_NOR_MTD_Common", scope: !1667, file: !1667, line: 269, type: !8066, scopeLine: 270, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1666, retainedNodes: !320)
!9939 = !DILocation(line: 275, column: 24, scope: !9938)
!9940 = !DILocation(line: 278, column: 24, scope: !9938)
!9941 = !DILocation(line: 278, column: 33, scope: !9938)
!9942 = !DILocation(line: 278, column: 49, scope: !9938)
!9943 = !DILocation(line: 278, column: 22, scope: !9938)
!9944 = !DILocation(line: 281, column: 5, scope: !9938)
!9945 = !DILocation(line: 283, column: 34, scope: !9938)
!9946 = !DILocation(line: 283, column: 23, scope: !9938)
!9947 = !DILocation(line: 286, column: 25, scope: !9938)
!9948 = !DILocation(line: 321, column: 5, scope: !9938)
!9949 = distinct !DISubprogram(name: "CMEM_Init_NOR_MTD_SF", scope: !1667, file: !1667, line: 332, type: !8066, scopeLine: 333, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1666, retainedNodes: !9950)
!9950 = !{!9951}
!9951 = !DILocalVariable(name: "result", scope: !9949, file: !1667, line: 334, type: !1124)
!9952 = !DILocation(line: 340, column: 30, scope: !9949)
!9953 = !DILocation(line: 343, column: 24, scope: !9949)
!9954 = !DILocation(line: 344, column: 18, scope: !9949)
!9955 = !DILocation(line: 348, column: 17, scope: !9949)
!9956 = !DILocation(line: 353, column: 19, scope: !9949)
!9957 = !DILocation(line: 354, column: 18, scope: !9949)
!9958 = !DILocation(line: 354, column: 27, scope: !9949)
!9959 = !DILocation(line: 354, column: 43, scope: !9949)
!9960 = !DILocation(line: 350, column: 14, scope: !9949)
!9961 = !DILocation(line: 0, scope: !9949)
!9962 = !DILocation(line: 356, column: 16, scope: !9963)
!9963 = distinct !DILexicalBlock(scope: !9949, file: !1667, line: 356, column: 9)
!9964 = !DILocation(line: 395, column: 1, scope: !9949)
!9965 = distinct !DISubprogram(name: "EMINIT_CMEM_GET_NOR_FLASH_COUNT", scope: !1667, file: !1667, line: 406, type: !9966, scopeLine: 407, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1666, retainedNodes: !320)
!9966 = !DISubroutineType(types: !2951)
!9967 = !DILocation(line: 408, column: 5, scope: !9965)
!9968 = distinct !DISubprogram(name: "EMINIT_CMEM_GET_NOR_FLASH_SIZE", scope: !1667, file: !1667, line: 420, type: !9969, scopeLine: 421, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1666, retainedNodes: !9971)
!9969 = !DISubroutineType(types: !9970)
!9970 = !{!105, !127}
!9971 = !{!9972, !9973, !9974}
!9972 = !DILocalVariable(name: "CS", arg: 1, scope: !9968, file: !1667, line: 420, type: !127)
!9973 = !DILocalVariable(name: "index", scope: !9968, file: !1667, line: 422, type: !105)
!9974 = !DILocalVariable(name: "list", scope: !9968, file: !1667, line: 423, type: !1984)
!9975 = !DILocation(line: 0, scope: !9968)
!9976 = !DILocation(line: 427, column: 13, scope: !9968)
!9977 = !DILocation(line: 430, column: 34, scope: !9968)
!9978 = !DILocation(line: 430, column: 5, scope: !9968)
!9979 = distinct !DISubprogram(name: "CMEM_BlockSize_Internal", scope: !1667, file: !1667, line: 442, type: !9980, scopeLine: 443, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1666, retainedNodes: !9982)
!9980 = !DISubroutineType(types: !9981)
!9981 = !{!105, !105, !1856}
!9982 = !{!9983, !9984, !9985}
!9983 = !DILocalVariable(name: "address", arg: 1, scope: !9979, file: !1667, line: 442, type: !105)
!9984 = !DILocalVariable(name: "blocklayout", arg: 2, scope: !9979, file: !1667, line: 442, type: !1856)
!9985 = !DILocalVariable(name: "i", scope: !9979, file: !1667, line: 444, type: !987)
!9986 = !DILocation(line: 0, scope: !9979)
!9987 = !DILocation(line: 446, column: 23, scope: !9979)
!9988 = !DILocation(line: 448, column: 36, scope: !9989)
!9989 = distinct !DILexicalBlock(scope: !9990, file: !1667, line: 448, column: 5)
!9990 = distinct !DILexicalBlock(scope: !9979, file: !1667, line: 448, column: 5)
!9991 = !DILocation(line: 448, column: 41, scope: !9989)
!9992 = !DILocation(line: 448, column: 5, scope: !9990)
!9993 = !DILocation(line: 449, column: 39, scope: !9994)
!9994 = distinct !DILexicalBlock(scope: !9995, file: !1667, line: 449, column: 13)
!9995 = distinct !DILexicalBlock(scope: !9989, file: !1667, line: 448, column: 54)
!9996 = !DILocation(line: 449, column: 21, scope: !9994)
!9997 = !DILocation(line: 449, column: 46, scope: !9994)
!9998 = !DILocation(line: 450, column: 46, scope: !9994)
!9999 = !DILocation(line: 450, column: 25, scope: !9994)
!10000 = !DILocation(line: 449, column: 13, scope: !9995)
!10001 = !DILocation(line: 448, column: 48, scope: !9989)
!10002 = !DILocation(line: 448, column: 29, scope: !9989)
!10003 = !DILocation(line: 448, column: 31, scope: !9989)
!10004 = distinct !{!10004, !9992, !10005}
!10005 = !DILocation(line: 453, column: 5, scope: !9990)
!10006 = !DILocation(line: 454, column: 27, scope: !9979)
!10007 = !DILocation(line: 454, column: 5, scope: !9979)
!10008 = distinct !DISubprogram(name: "CMEM_BlockSize", scope: !1667, file: !1667, line: 462, type: !3782, scopeLine: 463, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1666, retainedNodes: !10009)
!10009 = !{!10010}
!10010 = !DILocalVariable(name: "address", arg: 1, scope: !10008, file: !1667, line: 462, type: !105)
!10011 = !DILocation(line: 0, scope: !10008)
!10012 = !DILocation(line: 464, column: 45, scope: !10008)
!10013 = !DILocation(line: 464, column: 12, scope: !10008)
!10014 = !DILocation(line: 464, column: 5, scope: !10008)
!10015 = distinct !DISubprogram(name: "EMIINIT_CMEM_BlockSize", scope: !1667, file: !1667, line: 487, type: !3782, scopeLine: 488, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1666, retainedNodes: !10016)
!10016 = !{!10017, !10018, !10019}
!10017 = !DILocalVariable(name: "address", arg: 1, scope: !10015, file: !1667, line: 487, type: !105)
!10018 = !DILocalVariable(name: "index", scope: !10015, file: !1667, line: 490, type: !105)
!10019 = !DILocalVariable(name: "list", scope: !10015, file: !1667, line: 491, type: !1984)
!10020 = !DILocation(line: 0, scope: !10015)
!10021 = !DILocation(line: 490, column: 22, scope: !10015)
!10022 = !DILocation(line: 495, column: 45, scope: !10015)
!10023 = !DILocation(line: 495, column: 12, scope: !10015)
!10024 = !DILocation(line: 495, column: 5, scope: !10015)
!10025 = distinct !DISubprogram(name: "NOR_Get_FlashSizeFromBankInfo", scope: !1667, file: !1667, line: 517, type: !10026, scopeLine: 518, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1666, retainedNodes: !10030)
!10026 = !DISubroutineType(types: !10027)
!10027 = !{!1124, !10028}
!10028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10029, size: 32)
!10029 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1870)
!10030 = !{!10031, !10032, !10033}
!10031 = !DILocalVariable(name: "bankinfo", arg: 1, scope: !10025, file: !1667, line: 517, type: !10028)
!10032 = !DILocalVariable(name: "result", scope: !10025, file: !1667, line: 519, type: !105)
!10033 = !DILocalVariable(name: "i", scope: !10025, file: !1667, line: 519, type: !105)
!10034 = !DILocation(line: 0, scope: !10025)
!10035 = !DILocation(line: 522, column: 29, scope: !10036)
!10036 = distinct !DILexicalBlock(scope: !10037, file: !1667, line: 522, column: 5)
!10037 = distinct !DILexicalBlock(scope: !10025, file: !1667, line: 522, column: 5)
!10038 = !DILocation(line: 522, column: 38, scope: !10036)
!10039 = !DILocation(line: 522, column: 5, scope: !10037)
!10040 = !DILocation(line: 523, column: 31, scope: !10041)
!10041 = distinct !DILexicalBlock(scope: !10036, file: !1667, line: 522, column: 51)
!10042 = !DILocation(line: 523, column: 37, scope: !10041)
!10043 = !DILocation(line: 523, column: 16, scope: !10041)
!10044 = !DILocation(line: 522, column: 45, scope: !10036)
!10045 = distinct !{!10045, !10039, !10046}
!10046 = !DILocation(line: 524, column: 5, scope: !10037)
!10047 = !DILocation(line: 525, column: 5, scope: !10025)
!10048 = distinct !DISubprogram(name: "CMEM_NOR_Construct_RegionInfo_Internal", scope: !1667, file: !1667, line: 535, type: !10049, scopeLine: 540, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1666, retainedNodes: !10051)
!10049 = !DISubroutineType(types: !10050)
!10050 = !{!105, !105, !105, !1682, !1856}
!10051 = !{!10052, !10053, !10054, !10055, !10056, !10057, !10058, !10059, !10060}
!10052 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !10048, file: !1667, line: 536, type: !105)
!10053 = !DILocalVariable(name: "length", arg: 2, scope: !10048, file: !1667, line: 537, type: !105)
!10054 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !10048, file: !1667, line: 538, type: !1682)
!10055 = !DILocalVariable(name: "blocklayout", arg: 4, scope: !10048, file: !1667, line: 539, type: !1856)
!10056 = !DILocalVariable(name: "addr", scope: !10048, file: !1667, line: 541, type: !105)
!10057 = !DILocalVariable(name: "ptr", scope: !10048, file: !1667, line: 541, type: !105)
!10058 = !DILocalVariable(name: "blksize", scope: !10048, file: !1667, line: 541, type: !105)
!10059 = !DILocalVariable(name: "total_blocks", scope: !10048, file: !1667, line: 541, type: !105)
!10060 = !DILocalVariable(name: "endaddr", scope: !10048, file: !1667, line: 542, type: !105)
!10061 = !DILocation(line: 0, scope: !10048)
!10062 = !DILocation(line: 542, column: 33, scope: !10048)
!10063 = !DILocation(line: 557, column: 59, scope: !10064)
!10064 = distinct !DILexicalBlock(scope: !10065, file: !1667, line: 557, column: 5)
!10065 = distinct !DILexicalBlock(scope: !10048, file: !1667, line: 557, column: 5)
!10066 = !DILocation(line: 557, column: 5, scope: !10065)
!10067 = !DILocation(line: 560, column: 19, scope: !10068)
!10068 = distinct !DILexicalBlock(scope: !10064, file: !1667, line: 559, column: 5)
!10069 = !DILocation(line: 562, column: 26, scope: !10070)
!10070 = distinct !DILexicalBlock(scope: !10068, file: !1667, line: 562, column: 13)
!10071 = !DILocation(line: 0, scope: !10070)
!10072 = !DILocation(line: 562, column: 13, scope: !10068)
!10073 = !DILocation(line: 563, column: 39, scope: !10074)
!10074 = distinct !DILexicalBlock(scope: !10070, file: !1667, line: 562, column: 34)
!10075 = !DILocation(line: 564, column: 29, scope: !10074)
!10076 = !DILocation(line: 564, column: 42, scope: !10074)
!10077 = !DILocation(line: 565, column: 9, scope: !10074)
!10078 = !DILocation(line: 567, column: 45, scope: !10079)
!10079 = distinct !DILexicalBlock(scope: !10070, file: !1667, line: 567, column: 18)
!10080 = !DILocation(line: 567, column: 26, scope: !10079)
!10081 = !DILocation(line: 567, column: 18, scope: !10070)
!10082 = !DILocation(line: 568, column: 29, scope: !10083)
!10083 = distinct !DILexicalBlock(scope: !10079, file: !1667, line: 567, column: 59)
!10084 = !DILocation(line: 568, column: 41, scope: !10083)
!10085 = !DILocation(line: 569, column: 9, scope: !10083)
!10086 = !DILocation(line: 572, column: 16, scope: !10087)
!10087 = distinct !DILexicalBlock(scope: !10079, file: !1667, line: 571, column: 14)
!10088 = !DILocation(line: 573, column: 21, scope: !10089)
!10089 = distinct !DILexicalBlock(scope: !10087, file: !1667, line: 573, column: 17)
!10090 = !DILocation(line: 573, column: 17, scope: !10087)
!10091 = !DILocation(line: 576, column: 29, scope: !10087)
!10092 = !DILocation(line: 576, column: 39, scope: !10087)
!10093 = !DILocation(line: 577, column: 29, scope: !10087)
!10094 = !DILocation(line: 577, column: 42, scope: !10087)
!10095 = !DILocation(line: 0, scope: !10065)
!10096 = !DILocation(line: 579, column: 14, scope: !10068)
!10097 = !DILocation(line: 580, column: 21, scope: !10068)
!10098 = distinct !{!10098, !10066, !10099}
!10099 = !DILocation(line: 581, column: 5, scope: !10065)
!10100 = !DILocation(line: 586, column: 1, scope: !10048)
!10101 = distinct !DISubprogram(name: "NOR_Construct_RegionInfo", scope: !1667, file: !1667, line: 593, type: !10102, scopeLine: 594, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1666, retainedNodes: !10104)
!10102 = !DISubroutineType(types: !10103)
!10103 = !{!1124, !105, !105, !1682}
!10104 = !{!10105, !10106, !10107}
!10105 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !10101, file: !1667, line: 593, type: !105)
!10106 = !DILocalVariable(name: "length", arg: 2, scope: !10101, file: !1667, line: 593, type: !105)
!10107 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !10101, file: !1667, line: 593, type: !1682)
!10108 = !DILocation(line: 0, scope: !10101)
!10109 = !DILocation(line: 595, column: 12, scope: !10101)
!10110 = !DILocation(line: 595, column: 5, scope: !10101)
!10111 = !DILocation(line: 597, column: 81, scope: !10101)
!10112 = !DILocation(line: 597, column: 12, scope: !10101)
!10113 = !DILocation(line: 597, column: 5, scope: !10101)
!10114 = distinct !DISubprogram(name: "NOR_Construct_DualRegionInfo", scope: !1667, file: !1667, line: 606, type: !10102, scopeLine: 607, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1666, retainedNodes: !10115)
!10115 = !{!10116, !10117, !10118}
!10116 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !10114, file: !1667, line: 606, type: !105)
!10117 = !DILocalVariable(name: "length", arg: 2, scope: !10114, file: !1667, line: 606, type: !105)
!10118 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !10114, file: !1667, line: 606, type: !1682)
!10119 = !DILocation(line: 0, scope: !10114)
!10120 = !DILocation(line: 624, column: 5, scope: !10114)
!10121 = distinct !DISubprogram(name: "EMIINIT_CMEM_NOR_Construct_RegionInfo", scope: !1667, file: !1667, line: 637, type: !10102, scopeLine: 638, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1666, retainedNodes: !10122)
!10122 = !{!10123, !10124, !10125, !10126, !10127}
!10123 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !10121, file: !1667, line: 637, type: !105)
!10124 = !DILocalVariable(name: "length", arg: 2, scope: !10121, file: !1667, line: 637, type: !105)
!10125 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !10121, file: !1667, line: 637, type: !1682)
!10126 = !DILocalVariable(name: "index", scope: !10121, file: !1667, line: 642, type: !105)
!10127 = !DILocalVariable(name: "list", scope: !10121, file: !1667, line: 644, type: !1984)
!10128 = !DILocation(line: 0, scope: !10121)
!10129 = !DILocation(line: 642, column: 22, scope: !10121)
!10130 = !DILocation(line: 648, column: 81, scope: !10121)
!10131 = !DILocation(line: 648, column: 12, scope: !10121)
!10132 = !DILocation(line: 648, column: 5, scope: !10121)
!10133 = distinct !DISubprogram(name: "EMIINIT_CMEM_NOR_Construct_DualRegionInfo", scope: !1667, file: !1667, line: 658, type: !10102, scopeLine: 659, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1666, retainedNodes: !10134)
!10134 = !{!10135, !10136, !10137}
!10135 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !10133, file: !1667, line: 658, type: !105)
!10136 = !DILocalVariable(name: "length", arg: 2, scope: !10133, file: !1667, line: 658, type: !105)
!10137 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !10133, file: !1667, line: 658, type: !1682)
!10138 = !DILocation(line: 0, scope: !10133)
!10139 = !DILocation(line: 688, column: 5, scope: !10133)
!10140 = distinct !DISubprogram(name: "EMIINIT_CMEM_NOR_GetUniformBlock", scope: !1667, file: !1667, line: 700, type: !7500, scopeLine: 701, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1666, retainedNodes: !10141)
!10141 = !{!10142, !10143, !10144}
!10142 = !DILocalVariable(name: "CS", arg: 1, scope: !10140, file: !1667, line: 700, type: !7433)
!10143 = !DILocalVariable(name: "index", scope: !10140, file: !1667, line: 705, type: !105)
!10144 = !DILocalVariable(name: "list", scope: !10140, file: !1667, line: 707, type: !1984)
!10145 = !DILocation(line: 0, scope: !10140)
!10146 = !DILocation(line: 705, column: 22, scope: !10140)
!10147 = !DILocation(line: 711, column: 24, scope: !10140)
!10148 = !DILocation(line: 711, column: 5, scope: !10140)
!10149 = distinct !DISubprogram(name: "CMEM_NOR_AddBankInfo", scope: !1667, file: !1667, line: 721, type: !10150, scopeLine: 722, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1666, retainedNodes: !10152)
!10150 = !DISubroutineType(types: !10151)
!10151 = !{null, !1902, !1186, !105}
!10152 = !{!10153, !10154, !10155}
!10153 = !DILocalVariable(name: "bankInfo", arg: 1, scope: !10149, file: !1667, line: 721, type: !1902)
!10154 = !DILocalVariable(name: "index", arg: 2, scope: !10149, file: !1667, line: 721, type: !1186)
!10155 = !DILocalVariable(name: "bankSize", arg: 3, scope: !10149, file: !1667, line: 721, type: !105)
!10156 = !DILocation(line: 0, scope: !10149)
!10157 = !DILocation(line: 723, column: 18, scope: !10158)
!10158 = distinct !DILexicalBlock(scope: !10149, file: !1667, line: 723, column: 9)
!10159 = !DILocation(line: 723, column: 26, scope: !10158)
!10160 = !DILocation(line: 723, column: 35, scope: !10158)
!10161 = !DILocation(line: 723, column: 9, scope: !10149)
!10162 = !DILocation(line: 724, column: 26, scope: !10163)
!10163 = distinct !DILexicalBlock(scope: !10158, file: !1667, line: 723, column: 48)
!10164 = !DILocation(line: 724, column: 32, scope: !10163)
!10165 = !DILocation(line: 725, column: 5, scope: !10163)
!10166 = !DILocation(line: 726, column: 18, scope: !10167)
!10167 = distinct !DILexicalBlock(scope: !10158, file: !1667, line: 725, column: 12)
!10168 = !DILocation(line: 727, column: 26, scope: !10167)
!10169 = !DILocation(line: 727, column: 32, scope: !10167)
!10170 = !DILocation(line: 728, column: 18, scope: !10167)
!10171 = !DILocation(line: 728, column: 26, scope: !10167)
!10172 = !DILocation(line: 728, column: 35, scope: !10167)
!10173 = !DILocation(line: 731, column: 1, scope: !10149)
!10174 = distinct !DISubprogram(name: "CMEM_NOR_Construct_BankInfo", scope: !1667, file: !1667, line: 739, type: !10175, scopeLine: 744, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1666, retainedNodes: !10177)
!10175 = !DISubroutineType(types: !10176)
!10176 = !{!105, !105, !105, !1902, !10028}
!10177 = !{!10178, !10179, !10180, !10181, !10182, !10183, !10184, !10185, !10186}
!10178 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !10174, file: !1667, line: 740, type: !105)
!10179 = !DILocalVariable(name: "length", arg: 2, scope: !10174, file: !1667, line: 741, type: !105)
!10180 = !DILocalVariable(name: "bankInfo", arg: 3, scope: !10174, file: !1667, line: 742, type: !1902)
!10181 = !DILocalVariable(name: "cmemBankInfo", arg: 4, scope: !10174, file: !1667, line: 743, type: !10028)
!10182 = !DILocalVariable(name: "Partition", scope: !10174, file: !1667, line: 745, type: !105)
!10183 = !DILocalVariable(name: "Index", scope: !10174, file: !1667, line: 746, type: !1124)
!10184 = !DILocalVariable(name: "bankSize", scope: !10174, file: !1667, line: 747, type: !105)
!10185 = !DILocalVariable(name: "NextBankAddr", scope: !10174, file: !1667, line: 748, type: !105)
!10186 = !DILocalVariable(name: "srcBankIdx", scope: !10174, file: !1667, line: 748, type: !105)
!10187 = !DILocation(line: 0, scope: !10174)
!10188 = !DILocation(line: 750, column: 12, scope: !10174)
!10189 = !DILocation(line: 750, column: 5, scope: !10174)
!10190 = !DILocation(line: 752, column: 51, scope: !10191)
!10191 = distinct !DILexicalBlock(scope: !10192, file: !1667, line: 752, column: 5)
!10192 = distinct !DILexicalBlock(scope: !10174, file: !1667, line: 752, column: 5)
!10193 = !DILocation(line: 752, column: 5, scope: !10192)
!10194 = !DILocation(line: 753, column: 51, scope: !10195)
!10195 = distinct !DILexicalBlock(scope: !10196, file: !1667, line: 753, column: 13)
!10196 = distinct !DILexicalBlock(scope: !10191, file: !1667, line: 752, column: 70)
!10197 = !DILocation(line: 753, column: 24, scope: !10195)
!10198 = !DILocation(line: 753, column: 13, scope: !10196)
!10199 = !DILocation(line: 758, column: 49, scope: !10196)
!10200 = !DILocation(line: 758, column: 22, scope: !10196)
!10201 = !DILocation(line: 760, column: 22, scope: !10202)
!10202 = distinct !DILexicalBlock(scope: !10196, file: !1667, line: 760, column: 13)
!10203 = !DILocation(line: 760, column: 13, scope: !10196)
!10204 = !DILocation(line: 761, column: 37, scope: !10205)
!10205 = distinct !DILexicalBlock(scope: !10202, file: !1667, line: 760, column: 39)
!10206 = !DILocation(line: 762, column: 24, scope: !10207)
!10207 = distinct !DILexicalBlock(scope: !10205, file: !1667, line: 762, column: 17)
!10208 = !DILocation(line: 762, column: 17, scope: !10205)
!10209 = !DILocation(line: 767, column: 33, scope: !10210)
!10210 = distinct !DILexicalBlock(scope: !10205, file: !1667, line: 767, column: 17)
!10211 = !DILocation(line: 767, column: 42, scope: !10210)
!10212 = !DILocation(line: 767, column: 17, scope: !10205)
!10213 = !DILocation(line: 768, column: 33, scope: !10214)
!10214 = distinct !DILexicalBlock(scope: !10210, file: !1667, line: 767, column: 55)
!10215 = !DILocation(line: 768, column: 39, scope: !10214)
!10216 = !DILocation(line: 769, column: 13, scope: !10214)
!10217 = !DILocation(line: 770, column: 46, scope: !10218)
!10218 = distinct !DILexicalBlock(scope: !10219, file: !1667, line: 770, column: 21)
!10219 = distinct !DILexicalBlock(scope: !10210, file: !1667, line: 769, column: 20)
!10220 = !DILocation(line: 770, column: 21, scope: !10219)
!10221 = !DILocation(line: 773, column: 33, scope: !10219)
!10222 = !DILocation(line: 773, column: 39, scope: !10219)
!10223 = !DILocation(line: 774, column: 33, scope: !10219)
!10224 = !DILocation(line: 774, column: 42, scope: !10219)
!10225 = !DILocation(line: 777, column: 22, scope: !10205)
!10226 = !DILocation(line: 778, column: 20, scope: !10205)
!10227 = !DILocation(line: 779, column: 9, scope: !10205)
!10228 = !DILocation(line: 746, column: 13, scope: !10174)
!10229 = !DILocation(line: 752, column: 66, scope: !10191)
!10230 = distinct !{!10230, !10193, !10231}
!10231 = !DILocation(line: 781, column: 5, scope: !10192)
!10232 = !DILocation(line: 784, column: 5, scope: !10174)
!10233 = distinct !DISubprogram(name: "CMEM_Init_NOR", scope: !1667, file: !1667, line: 796, type: !8066, scopeLine: 797, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1666, retainedNodes: !10234)
!10234 = !{!10235, !10236}
!10235 = !DILocalVariable(name: "result", scope: !10233, file: !1667, line: 798, type: !1124)
!10236 = !DILocalVariable(name: "i", scope: !10233, file: !1667, line: 799, type: !1124)
!10237 = !DILocation(line: 803, column: 19, scope: !10233)
!10238 = !DILocation(line: 803, column: 28, scope: !10233)
!10239 = !DILocation(line: 803, column: 17, scope: !10233)
!10240 = !DILocation(line: 822, column: 33, scope: !10233)
!10241 = !DILocation(line: 822, column: 56, scope: !10233)
!10242 = !DILocation(line: 822, column: 88, scope: !10233)
!10243 = !DILocation(line: 822, column: 97, scope: !10233)
!10244 = !DILocation(line: 822, column: 5, scope: !10233)
!10245 = !DILocation(line: 829, column: 39, scope: !10233)
!10246 = !DILocation(line: 829, column: 62, scope: !10233)
!10247 = !DILocation(line: 829, column: 14, scope: !10233)
!10248 = !DILocation(line: 0, scope: !10233)
!10249 = !DILocation(line: 834, column: 16, scope: !10250)
!10250 = distinct !DILexicalBlock(scope: !10233, file: !1667, line: 834, column: 9)
!10251 = !DILocation(line: 834, column: 9, scope: !10233)
!10252 = !DILocation(line: 838, column: 30, scope: !10253)
!10253 = distinct !DILexicalBlock(scope: !10233, file: !1667, line: 838, column: 5)
!10254 = !DILocation(line: 838, column: 58, scope: !10253)
!10255 = !DILocation(line: 838, column: 78, scope: !10256)
!10256 = distinct !DILexicalBlock(scope: !10253, file: !1667, line: 838, column: 5)
!10257 = !DILocation(line: 838, column: 88, scope: !10256)
!10258 = !DILocation(line: 838, column: 5, scope: !10253)
!10259 = !DILocation(line: 839, column: 39, scope: !10260)
!10260 = distinct !DILexicalBlock(scope: !10256, file: !1667, line: 838, column: 102)
!10261 = !DILocation(line: 839, column: 22, scope: !10260)
!10262 = !DILocation(line: 840, column: 37, scope: !10263)
!10263 = distinct !DILexicalBlock(scope: !10260, file: !1667, line: 840, column: 13)
!10264 = !DILocation(line: 840, column: 13, scope: !10260)
!10265 = !DILocation(line: 841, column: 36, scope: !10266)
!10266 = distinct !DILexicalBlock(scope: !10263, file: !1667, line: 840, column: 63)
!10267 = !DILocation(line: 842, column: 9, scope: !10266)
!10268 = !DILocation(line: 838, column: 95, scope: !10256)
!10269 = distinct !{!10269, !10258, !10270}
!10270 = !DILocation(line: 843, column: 5, scope: !10253)
!10271 = !DILocation(line: 871, column: 49, scope: !10233)
!10272 = !DILocation(line: 871, column: 72, scope: !10233)
!10273 = !DILocation(line: 871, column: 47, scope: !10233)
!10274 = !DILocation(line: 871, column: 97, scope: !10233)
!10275 = !DILocation(line: 871, column: 19, scope: !10233)
!10276 = !DILocation(line: 882, column: 14, scope: !10233)
!10277 = !DILocation(line: 887, column: 13, scope: !10233)
!10278 = !DILocation(line: 887, column: 22, scope: !10233)
!10279 = !DILocation(line: 887, column: 5, scope: !10233)
!10280 = !DILocation(line: 889, column: 22, scope: !10281)
!10281 = distinct !DILexicalBlock(scope: !10233, file: !1667, line: 887, column: 34)
!10282 = !DILocation(line: 890, column: 13, scope: !10281)
!10283 = !DILocation(line: 902, column: 1, scope: !10233)
!10284 = distinct !DISubprogram(name: "CMEM_Init_nor_list", scope: !1667, file: !1667, line: 912, type: !10285, scopeLine: 913, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1666, retainedNodes: !10287)
!10285 = !DISubroutineType(types: !10286)
!10286 = !{null, !828}
!10287 = !{!10288}
!10288 = !DILocalVariable(name: "CS", arg: 1, scope: !10284, file: !1667, line: 912, type: !828)
!10289 = !DILocation(line: 0, scope: !10284)
!10290 = !DILocation(line: 914, column: 12, scope: !10291)
!10291 = distinct !DILexicalBlock(scope: !10284, file: !1667, line: 914, column: 9)
!10292 = !DILocation(line: 914, column: 9, scope: !10284)
!10293 = !DILocation(line: 918, column: 26, scope: !10294)
!10294 = distinct !DILexicalBlock(scope: !10291, file: !1667, line: 914, column: 18)
!10295 = !DILocation(line: 918, column: 24, scope: !10294)
!10296 = !DILocation(line: 920, column: 28, scope: !10297)
!10297 = distinct !DILexicalBlock(scope: !10294, file: !1667, line: 920, column: 13)
!10298 = !DILocation(line: 920, column: 13, scope: !10294)
!10299 = !DILocation(line: 921, column: 13, scope: !10300)
!10300 = distinct !DILexicalBlock(scope: !10301, file: !1667, line: 921, column: 13)
!10301 = distinct !DILexicalBlock(scope: !10302, file: !1667, line: 921, column: 13)
!10302 = distinct !DILexicalBlock(scope: !10303, file: !1667, line: 921, column: 13)
!10303 = distinct !DILexicalBlock(scope: !10297, file: !1667, line: 920, column: 33)
!10304 = !DILocation(line: 923, column: 19, scope: !10294)
!10305 = !DILocation(line: 923, column: 17, scope: !10294)
!10306 = !DILocation(line: 924, column: 5, scope: !10294)
!10307 = !DILocation(line: 935, column: 14, scope: !10284)
!10308 = !DILocation(line: 936, column: 1, scope: !10284)
!10309 = distinct !DISubprogram(name: "ComboMem_Initialize", scope: !1667, file: !1667, line: 952, type: !8066, scopeLine: 953, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1666, retainedNodes: !320)
!10310 = !DILocation(line: 955, column: 5, scope: !10309)
!10311 = !DILocation(line: 956, column: 12, scope: !10309)
!10312 = !DILocation(line: 956, column: 5, scope: !10309)
!10313 = distinct !DISubprogram(name: "CMEM_Init_FullDriver", scope: !1667, file: !1667, line: 974, type: !8066, scopeLine: 975, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1666, retainedNodes: !10314)
!10314 = !{!10315}
!10315 = !DILocalVariable(name: "result", scope: !10313, file: !1667, line: 976, type: !1124)
!10316 = !DILocation(line: 981, column: 5, scope: !10313)
!10317 = !DILocation(line: 986, column: 24, scope: !10313)
!10318 = !DILocation(line: 986, column: 33, scope: !10313)
!10319 = !DILocation(line: 986, column: 49, scope: !10313)
!10320 = !DILocation(line: 986, column: 22, scope: !10313)
!10321 = !DILocation(line: 1002, column: 19, scope: !10313)
!10322 = !DILocation(line: 1002, column: 17, scope: !10313)
!10323 = !DILocation(line: 1014, column: 22, scope: !10313)
!10324 = !DILocation(line: 1014, column: 5, scope: !10313)
!10325 = !DILocation(line: 1024, column: 33, scope: !10313)
!10326 = !DILocation(line: 1026, column: 27, scope: !10313)
!10327 = !DILocation(line: 1027, column: 26, scope: !10313)
!10328 = !DILocation(line: 1042, column: 33, scope: !10313)
!10329 = !DILocation(line: 1044, column: 32, scope: !10313)
!10330 = !DILocation(line: 1052, column: 18, scope: !10313)
!10331 = !DILocation(line: 1052, column: 27, scope: !10313)
!10332 = !DILocation(line: 1052, column: 43, scope: !10313)
!10333 = !DILocation(line: 1048, column: 14, scope: !10313)
!10334 = !DILocation(line: 0, scope: !10313)
!10335 = !DILocation(line: 1063, column: 5, scope: !10336)
!10336 = distinct !DILexicalBlock(scope: !10337, file: !1667, line: 1063, column: 5)
!10337 = distinct !DILexicalBlock(scope: !10313, file: !1667, line: 1063, column: 5)
!10338 = !DILocation(line: 1063, column: 5, scope: !10337)
!10339 = !DILocation(line: 1063, column: 5, scope: !10340)
!10340 = distinct !DILexicalBlock(scope: !10336, file: !1667, line: 1063, column: 5)
!10341 = !DILocation(line: 1096, column: 36, scope: !10313)
!10342 = !DILocation(line: 1096, column: 34, scope: !10313)
!10343 = !DILocation(line: 1101, column: 5, scope: !10313)
!10344 = !DILocation(line: 1103, column: 34, scope: !10313)
!10345 = !DILocation(line: 1109, column: 35, scope: !10313)
!10346 = !DILocation(line: 1110, column: 33, scope: !10313)
!10347 = !DILocation(line: 1111, column: 34, scope: !10313)
!10348 = !DILocation(line: 1113, column: 5, scope: !10313)
!10349 = distinct !DISubprogram(name: "CreateFDMLock", scope: !2025, file: !2025, line: 84, type: !318, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2024, retainedNodes: !320)
!10350 = !DILocation(line: 86, column: 1, scope: !10349)
!10351 = distinct !DISubprogram(name: "GetFDMLock", scope: !2025, file: !2025, line: 87, type: !8532, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2024, retainedNodes: !10352)
!10352 = !{!10353}
!10353 = !DILocalVariable(name: "savedMask", scope: !10351, file: !2025, line: 89, type: !1124)
!10354 = !DILocation(line: 90, column: 17, scope: !10351)
!10355 = !DILocation(line: 0, scope: !10351)
!10356 = !DILocation(line: 91, column: 9, scope: !10357)
!10357 = distinct !DILexicalBlock(scope: !10351, file: !2025, line: 91, column: 9)
!10358 = !DILocation(line: 91, column: 9, scope: !10351)
!10359 = !DILocation(line: 92, column: 17, scope: !10360)
!10360 = distinct !DILexicalBlock(scope: !10357, file: !2025, line: 91, column: 24)
!10361 = !DILocation(line: 94, column: 9, scope: !10360)
!10362 = !DILocation(line: 0, scope: !10357)
!10363 = !DILocation(line: 102, column: 1, scope: !10351)
!10364 = distinct !DISubprogram(name: "FreeFDMLock", scope: !2025, file: !2025, line: 103, type: !318, scopeLine: 104, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2024, retainedNodes: !10365)
!10365 = !{!10366}
!10366 = !DILocalVariable(name: "savedMask", scope: !10364, file: !2025, line: 105, type: !1124)
!10367 = !DILocation(line: 106, column: 17, scope: !10364)
!10368 = !DILocation(line: 0, scope: !10364)
!10369 = !DILocation(line: 107, column: 9, scope: !10370)
!10370 = distinct !DILexicalBlock(scope: !10364, file: !2025, line: 107, column: 9)
!10371 = !DILocation(line: 107, column: 9, scope: !10364)
!10372 = !DILocation(line: 108, column: 17, scope: !10373)
!10373 = distinct !DILexicalBlock(scope: !10370, file: !2025, line: 107, column: 24)
!10374 = !DILocation(line: 109, column: 9, scope: !10373)
!10375 = !DILocation(line: 114, column: 1, scope: !10364)
!10376 = !DILocation(line: 111, column: 9, scope: !10377)
!10377 = distinct !DILexicalBlock(scope: !10370, file: !2025, line: 110, column: 12)
!10378 = !DILocation(line: 112, column: 9, scope: !10379)
!10379 = distinct !DILexicalBlock(scope: !10380, file: !2025, line: 112, column: 9)
!10380 = distinct !DILexicalBlock(scope: !10381, file: !2025, line: 112, column: 9)
!10381 = distinct !DILexicalBlock(scope: !10377, file: !2025, line: 112, column: 9)
!10382 = distinct !DISubprogram(name: "create_FDM_lock", scope: !2025, file: !2025, line: 119, type: !318, scopeLine: 120, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2024, retainedNodes: !320)
!10383 = !DILocation(line: 123, column: 1, scope: !10382)
!10384 = distinct !DISubprogram(name: "retrieve_FDM_lock", scope: !2025, file: !2025, line: 130, type: !318, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2024, retainedNodes: !10385)
!10385 = !{!10386}
!10386 = !DILocalVariable(name: "Result", scope: !10384, file: !2025, line: 132, type: !2081)
!10387 = !DILocation(line: 133, column: 5, scope: !10384)
!10388 = !DILocation(line: 134, column: 18, scope: !10389)
!10389 = distinct !DILexicalBlock(scope: !10384, file: !2025, line: 133, column: 8)
!10390 = !DILocation(line: 0, scope: !10384)
!10391 = !DILocation(line: 135, column: 21, scope: !10384)
!10392 = !DILocation(line: 135, column: 5, scope: !10389)
!10393 = distinct !{!10393, !10387, !10394}
!10394 = !DILocation(line: 135, column: 43, scope: !10384)
!10395 = !DILocation(line: 136, column: 1, scope: !10384)
!10396 = distinct !DISubprogram(name: "release_FDM_lock", scope: !2025, file: !2025, line: 143, type: !318, scopeLine: 144, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2024, retainedNodes: !320)
!10397 = !DILocation(line: 147, column: 5, scope: !10396)
!10398 = !DILocation(line: 148, column: 1, scope: !10396)
!10399 = distinct !DISubprogram(name: "readRawDiskData", scope: !2025, file: !2025, line: 216, type: !10400, scopeLine: 217, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2024, retainedNodes: !10441)
!10400 = !DISubroutineType(types: !10401)
!10401 = !{!1124, !10402, !105, !818, !105}
!10402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10403, size: 32)
!10403 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_FLASH_DISK_Data", file: !1972, line: 93, baseType: !10404)
!10404 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1972, line: 83, size: 1056, elements: !10405)
!10405 = !{!10406, !10407, !10427, !10428, !10440}
!10406 = !DIDerivedType(tag: DW_TAG_member, name: "DiskSize", scope: !10404, file: !1972, line: 84, baseType: !105, size: 32)
!10407 = !DIDerivedType(tag: DW_TAG_member, name: "MTDDriver", scope: !10404, file: !1972, line: 85, baseType: !10408, size: 32, offset: 32)
!10408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10409, size: 32)
!10409 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_Driver", file: !1441, line: 121, baseType: !10410)
!10410 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1441, line: 105, size: 480, elements: !10411)
!10411 = !{!10412, !10413, !10414, !10415, !10416, !10417, !10418, !10419, !10420, !10421, !10422, !10423, !10424, !10425, !10426}
!10412 = !DIDerivedType(tag: DW_TAG_member, name: "MountDevice", scope: !10410, file: !1441, line: 106, baseType: !1713, size: 32)
!10413 = !DIDerivedType(tag: DW_TAG_member, name: "ShutDown", scope: !10410, file: !1441, line: 107, baseType: !1516, size: 32, offset: 32)
!10414 = !DIDerivedType(tag: DW_TAG_member, name: "MapWindow", scope: !10410, file: !1441, line: 108, baseType: !1718, size: 32, offset: 64)
!10415 = !DIDerivedType(tag: DW_TAG_member, name: "EraseBlock", scope: !10410, file: !1441, line: 109, baseType: !1722, size: 32, offset: 96)
!10416 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramData", scope: !10410, file: !1441, line: 110, baseType: !1726, size: 32, offset: 128)
!10417 = !DIDerivedType(tag: DW_TAG_member, name: "NonBlockEraseBlock", scope: !10410, file: !1441, line: 111, baseType: !1722, size: 32, offset: 160)
!10418 = !DIDerivedType(tag: DW_TAG_member, name: "CheckDeviceReady", scope: !10410, file: !1441, line: 112, baseType: !1731, size: 32, offset: 192)
!10419 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendErase", scope: !10410, file: !1441, line: 113, baseType: !1722, size: 32, offset: 224)
!10420 = !DIDerivedType(tag: DW_TAG_member, name: "ResumeErase", scope: !10410, file: !1441, line: 114, baseType: !1722, size: 32, offset: 256)
!10421 = !DIDerivedType(tag: DW_TAG_member, name: "BlankCheck", scope: !10410, file: !1441, line: 115, baseType: !1722, size: 32, offset: 288)
!10422 = !DIDerivedType(tag: DW_TAG_member, name: "OTPAccess", scope: !10410, file: !1441, line: 116, baseType: !1738, size: 32, offset: 320)
!10423 = !DIDerivedType(tag: DW_TAG_member, name: "OTPQueryLength", scope: !10410, file: !1441, line: 117, baseType: !1743, size: 32, offset: 352)
!10424 = !DIDerivedType(tag: DW_TAG_member, name: "LockEraseBlkAddr", scope: !10410, file: !1441, line: 118, baseType: !1748, size: 32, offset: 384)
!10425 = !DIDerivedType(tag: DW_TAG_member, name: "IsEraseSuspended", scope: !10410, file: !1441, line: 119, baseType: !1752, size: 32, offset: 416)
!10426 = !DIDerivedType(tag: DW_TAG_member, name: "IOCtrl", scope: !10410, file: !1441, line: 120, baseType: !1756, size: 32, offset: 448)
!10427 = !DIDerivedType(tag: DW_TAG_member, name: "MTDData", scope: !10404, file: !1972, line: 86, baseType: !124, size: 32, offset: 64)
!10428 = !DIDerivedType(tag: DW_TAG_member, name: "FlashInfo", scope: !10404, file: !1972, line: 87, baseType: !10429, size: 928, offset: 96)
!10429 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_FlashInfo", file: !1441, line: 99, baseType: !10430)
!10430 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1441, line: 90, size: 928, elements: !10431)
!10431 = !{!10432, !10433, !10434, !10435, !10436, !10437, !10438, !10439}
!10432 = !DIDerivedType(tag: DW_TAG_member, name: "TotalBlocks", scope: !10430, file: !1441, line: 91, baseType: !105, size: 32)
!10433 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !10430, file: !1441, line: 92, baseType: !1770, size: 256, offset: 32)
!10434 = !DIDerivedType(tag: DW_TAG_member, name: "AvailInRegion", scope: !10430, file: !1441, line: 93, baseType: !1770, size: 256, offset: 288)
!10435 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !10430, file: !1441, line: 94, baseType: !1770, size: 256, offset: 544)
!10436 = !DIDerivedType(tag: DW_TAG_member, name: "ActualRegionNum", scope: !10430, file: !1441, line: 95, baseType: !105, size: 32, offset: 800)
!10437 = !DIDerivedType(tag: DW_TAG_member, name: "PageSize", scope: !10430, file: !1441, line: 96, baseType: !1762, size: 16, offset: 832)
!10438 = !DIDerivedType(tag: DW_TAG_member, name: "baseUnlockBlock", scope: !10430, file: !1441, line: 97, baseType: !105, size: 32, offset: 864)
!10439 = !DIDerivedType(tag: DW_TAG_member, name: "endUnlockBlock", scope: !10430, file: !1441, line: 98, baseType: !105, size: 32, offset: 896)
!10440 = !DIDerivedType(tag: DW_TAG_member, name: "is_mount", scope: !10404, file: !1972, line: 92, baseType: !321, size: 8, offset: 1024)
!10441 = !{!10442, !10443, !10444, !10445, !10446, !10447}
!10442 = !DILocalVariable(name: "D", arg: 1, scope: !10399, file: !2025, line: 216, type: !10402)
!10443 = !DILocalVariable(name: "addr", arg: 2, scope: !10399, file: !2025, line: 216, type: !105)
!10444 = !DILocalVariable(name: "data_ptr", arg: 3, scope: !10399, file: !2025, line: 216, type: !818)
!10445 = !DILocalVariable(name: "len", arg: 4, scope: !10399, file: !2025, line: 216, type: !105)
!10446 = !DILocalVariable(name: "phyAddr", scope: !10399, file: !2025, line: 219, type: !105)
!10447 = !DILocalVariable(name: "diskSize", scope: !10399, file: !2025, line: 220, type: !105)
!10448 = !DILocation(line: 0, scope: !10399)
!10449 = !DILocation(line: 220, column: 28, scope: !10399)
!10450 = !DILocation(line: 222, column: 14, scope: !10451)
!10451 = distinct !DILexicalBlock(scope: !10399, file: !2025, line: 222, column: 9)
!10452 = !DILocation(line: 222, column: 26, scope: !10451)
!10453 = !DILocation(line: 225, column: 51, scope: !10399)
!10454 = !DILocation(line: 225, column: 61, scope: !10399)
!10455 = !DILocation(line: 225, column: 15, scope: !10399)
!10456 = !DILocation(line: 225, column: 70, scope: !10399)
!10457 = !DILocation(line: 227, column: 13, scope: !10458)
!10458 = distinct !DILexicalBlock(scope: !10399, file: !2025, line: 227, column: 9)
!10459 = !DILocation(line: 227, column: 9, scope: !10399)
!10460 = !DILocation(line: 228, column: 9, scope: !10461)
!10461 = distinct !DILexicalBlock(scope: !10458, file: !2025, line: 227, column: 23)
!10462 = !DILocation(line: 229, column: 5, scope: !10461)
!10463 = !DILocation(line: 231, column: 5, scope: !10399)
!10464 = !DILocation(line: 233, column: 22, scope: !10399)
!10465 = !DILocation(line: 233, column: 5, scope: !10399)
!10466 = !DILocation(line: 235, column: 5, scope: !10399)
!10467 = !DILocation(line: 237, column: 5, scope: !10399)
!10468 = !DILocation(line: 238, column: 1, scope: !10399)
!10469 = distinct !DISubprogram(name: "MountDevice", scope: !2025, file: !2025, line: 165, type: !10470, scopeLine: 166, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2024, retainedNodes: !10472)
!10470 = !DISubroutineType(types: !10471)
!10471 = !{null, !10402}
!10472 = !{!10473, !10474}
!10473 = !DILocalVariable(name: "D", arg: 1, scope: !10469, file: !2025, line: 165, type: !10402)
!10474 = !DILocalVariable(name: "Result", scope: !10469, file: !2025, line: 167, type: !1124)
!10475 = !DILocation(line: 0, scope: !10469)
!10476 = !DILocation(line: 171, column: 12, scope: !10477)
!10477 = distinct !DILexicalBlock(scope: !10469, file: !2025, line: 171, column: 9)
!10478 = !DILocation(line: 171, column: 9, scope: !10469)
!10479 = !DILocation(line: 176, column: 5, scope: !10469)
!10480 = !DILocation(line: 186, column: 17, scope: !10469)
!10481 = !DILocation(line: 186, column: 28, scope: !10469)
!10482 = !DILocation(line: 186, column: 43, scope: !10469)
!10483 = !DILocation(line: 186, column: 64, scope: !10469)
!10484 = !DILocation(line: 186, column: 52, scope: !10469)
!10485 = !DILocation(line: 186, column: 14, scope: !10469)
!10486 = !DILocation(line: 188, column: 5, scope: !10469)
!10487 = !DILocation(line: 190, column: 16, scope: !10488)
!10488 = distinct !DILexicalBlock(scope: !10469, file: !2025, line: 190, column: 9)
!10489 = !DILocation(line: 190, column: 9, scope: !10469)
!10490 = !DILocation(line: 191, column: 9, scope: !10491)
!10491 = distinct !DILexicalBlock(scope: !10492, file: !2025, line: 191, column: 9)
!10492 = distinct !DILexicalBlock(scope: !10493, file: !2025, line: 191, column: 9)
!10493 = distinct !DILexicalBlock(scope: !10494, file: !2025, line: 191, column: 9)
!10494 = distinct !DILexicalBlock(scope: !10488, file: !2025, line: 190, column: 31)
!10495 = !DILocation(line: 194, column: 17, scope: !10469)
!10496 = !DILocation(line: 195, column: 1, scope: !10469)
!10497 = distinct !DISubprogram(name: "writeRawDiskData", scope: !2025, file: !2025, line: 277, type: !10400, scopeLine: 278, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2024, retainedNodes: !10498)
!10498 = !{!10499, !10500, !10501, !10502, !10503, !10504, !10505, !10506, !10507, !10508, !10512, !10513, !10514, !10519}
!10499 = !DILocalVariable(name: "D", arg: 1, scope: !10497, file: !2025, line: 277, type: !10402)
!10500 = !DILocalVariable(name: "addr", arg: 2, scope: !10497, file: !2025, line: 277, type: !105)
!10501 = !DILocalVariable(name: "data_ptr", arg: 3, scope: !10497, file: !2025, line: 277, type: !818)
!10502 = !DILocalVariable(name: "len", arg: 4, scope: !10497, file: !2025, line: 277, type: !105)
!10503 = !DILocalVariable(name: "dest", scope: !10497, file: !2025, line: 279, type: !105)
!10504 = !DILocalVariable(name: "src", scope: !10497, file: !2025, line: 279, type: !105)
!10505 = !DILocalVariable(name: "diskSize", scope: !10497, file: !2025, line: 280, type: !105)
!10506 = !DILocalVariable(name: "result", scope: !10497, file: !2025, line: 281, type: !1124)
!10507 = !DILocalVariable(name: "DoneLength", scope: !10497, file: !2025, line: 282, type: !105)
!10508 = !DILocalVariable(name: "blockSize", scope: !10509, file: !2025, line: 313, type: !105)
!10509 = distinct !DILexicalBlock(scope: !10510, file: !2025, line: 312, column: 14)
!10510 = distinct !DILexicalBlock(scope: !10511, file: !2025, line: 305, column: 13)
!10511 = distinct !DILexicalBlock(scope: !10497, file: !2025, line: 298, column: 30)
!10512 = !DILocalVariable(name: "programBytes", scope: !10509, file: !2025, line: 314, type: !105)
!10513 = !DILocalVariable(name: "nextBlkAddr", scope: !10509, file: !2025, line: 316, type: !105)
!10514 = !DILocalVariable(name: "Cell", scope: !10515, file: !2025, line: 346, type: !10517)
!10515 = distinct !DILexicalBlock(scope: !10516, file: !2025, line: 345, column: 83)
!10516 = distinct !DILexicalBlock(scope: !10509, file: !2025, line: 345, column: 17)
!10517 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_CELL", file: !10518, line: 76, baseType: !987)
!10518 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_mtd_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/dac_output_data_repeatedly/GCC")
!10519 = !DILocalVariable(name: "b", scope: !10515, file: !2025, line: 347, type: !818)
!10520 = !DILocation(line: 0, scope: !10497)
!10521 = !DILocation(line: 280, column: 28, scope: !10497)
!10522 = !DILocation(line: 284, column: 14, scope: !10523)
!10523 = distinct !DILexicalBlock(scope: !10497, file: !2025, line: 284, column: 9)
!10524 = !DILocation(line: 284, column: 9, scope: !10497)
!10525 = !DILocation(line: 288, column: 14, scope: !10526)
!10526 = distinct !DILexicalBlock(scope: !10497, file: !2025, line: 288, column: 9)
!10527 = !DILocation(line: 288, column: 20, scope: !10526)
!10528 = !DILocation(line: 288, column: 9, scope: !10497)
!10529 = !DILocation(line: 292, column: 13, scope: !10530)
!10530 = distinct !DILexicalBlock(scope: !10497, file: !2025, line: 292, column: 9)
!10531 = !DILocation(line: 292, column: 9, scope: !10497)
!10532 = !DILocation(line: 293, column: 9, scope: !10533)
!10533 = distinct !DILexicalBlock(scope: !10530, file: !2025, line: 292, column: 23)
!10534 = !DILocation(line: 294, column: 5, scope: !10533)
!10535 = !DILocation(line: 296, column: 5, scope: !10497)
!10536 = !DILocation(line: 346, column: 17, scope: !10515)
!10537 = !DILocation(line: 298, column: 23, scope: !10497)
!10538 = !DILocation(line: 298, column: 5, scope: !10497)
!10539 = !DILocation(line: 299, column: 52, scope: !10511)
!10540 = !DILocation(line: 299, column: 62, scope: !10511)
!10541 = !DILocation(line: 299, column: 16, scope: !10511)
!10542 = !DILocation(line: 299, column: 71, scope: !10511)
!10543 = !DILocation(line: 299, column: 78, scope: !10511)
!10544 = !DILocation(line: 300, column: 34, scope: !10511)
!10545 = !DILocation(line: 302, column: 12, scope: !10511)
!10546 = !DILocation(line: 302, column: 23, scope: !10511)
!10547 = !DILocation(line: 302, column: 81, scope: !10511)
!10548 = !DILocation(line: 302, column: 45, scope: !10511)
!10549 = !DILocation(line: 302, column: 9, scope: !10511)
!10550 = !DILocation(line: 305, column: 29, scope: !10510)
!10551 = !DILocation(line: 305, column: 57, scope: !10510)
!10552 = !DILocation(line: 305, column: 66, scope: !10510)
!10553 = !DILocation(line: 305, column: 80, scope: !10510)
!10554 = !DILocation(line: 305, column: 13, scope: !10511)
!10555 = !DILocation(line: 306, column: 25, scope: !10556)
!10556 = distinct !DILexicalBlock(scope: !10510, file: !2025, line: 305, column: 87)
!10557 = !DILocation(line: 306, column: 36, scope: !10556)
!10558 = !DILocation(line: 306, column: 51, scope: !10556)
!10559 = !DILocation(line: 306, column: 60, scope: !10556)
!10560 = !DILocation(line: 306, column: 74, scope: !10556)
!10561 = !DILocation(line: 306, column: 22, scope: !10556)
!10562 = !DILocation(line: 307, column: 24, scope: !10563)
!10563 = distinct !DILexicalBlock(scope: !10556, file: !2025, line: 307, column: 17)
!10564 = !DILocation(line: 307, column: 17, scope: !10556)
!10565 = !DILocation(line: 310, column: 23, scope: !10556)
!10566 = !DILocation(line: 311, column: 9, scope: !10556)
!10567 = !DILocation(line: 313, column: 47, scope: !10509)
!10568 = !DILocation(line: 313, column: 56, scope: !10509)
!10569 = !DILocation(line: 313, column: 34, scope: !10509)
!10570 = !DILocation(line: 0, scope: !10509)
!10571 = !DILocation(line: 316, column: 42, scope: !10509)
!10572 = !DILocation(line: 316, column: 58, scope: !10509)
!10573 = !DILocation(line: 316, column: 55, scope: !10509)
!10574 = !DILocation(line: 326, column: 22, scope: !10575)
!10575 = distinct !DILexicalBlock(scope: !10509, file: !2025, line: 326, column: 17)
!10576 = !DILocation(line: 326, column: 37, scope: !10575)
!10577 = !DILocation(line: 326, column: 17, scope: !10509)
!10578 = !DILocation(line: 332, column: 43, scope: !10509)
!10579 = !DILocation(line: 345, column: 30, scope: !10516)
!10580 = !DILocation(line: 345, column: 52, scope: !10516)
!10581 = !DILocation(line: 0, scope: !10515)
!10582 = !DILocation(line: 348, column: 26, scope: !10515)
!10583 = !DILocation(line: 348, column: 24, scope: !10515)
!10584 = !DILocation(line: 348, column: 22, scope: !10515)
!10585 = !DILocation(line: 349, column: 41, scope: !10515)
!10586 = !DILocation(line: 349, column: 24, scope: !10515)
!10587 = !DILocation(line: 349, column: 22, scope: !10515)
!10588 = !DILocation(line: 350, column: 29, scope: !10515)
!10589 = !DILocation(line: 350, column: 40, scope: !10515)
!10590 = !DILocation(line: 350, column: 55, scope: !10515)
!10591 = !DILocation(line: 350, column: 64, scope: !10515)
!10592 = !DILocation(line: 350, column: 26, scope: !10515)
!10593 = !DILocation(line: 351, column: 28, scope: !10594)
!10594 = distinct !DILexicalBlock(scope: !10515, file: !2025, line: 351, column: 21)
!10595 = !DILocation(line: 354, column: 13, scope: !10516)
!10596 = !DILocation(line: 362, column: 33, scope: !10597)
!10597 = distinct !DILexicalBlock(scope: !10598, file: !2025, line: 361, column: 24)
!10598 = distinct !DILexicalBlock(scope: !10599, file: !2025, line: 355, column: 21)
!10599 = distinct !DILexicalBlock(scope: !10516, file: !2025, line: 354, column: 20)
!10600 = !DILocation(line: 362, column: 44, scope: !10597)
!10601 = !DILocation(line: 362, column: 59, scope: !10597)
!10602 = !DILocation(line: 362, column: 68, scope: !10597)
!10603 = !DILocation(line: 362, column: 82, scope: !10597)
!10604 = !DILocation(line: 362, column: 30, scope: !10597)
!10605 = !DILocation(line: 364, column: 28, scope: !10606)
!10606 = distinct !DILexicalBlock(scope: !10599, file: !2025, line: 364, column: 21)
!10607 = !DILocation(line: 364, column: 21, scope: !10599)
!10608 = !DILocation(line: 368, column: 24, scope: !10509)
!10609 = !DILocation(line: 0, scope: !10510)
!10610 = distinct !{!10610, !10538, !10611}
!10611 = !DILocation(line: 370, column: 5, scope: !10497)
!10612 = !DILocation(line: 372, column: 5, scope: !10497)
!10613 = !DILocation(line: 379, column: 1, scope: !10497)
!10614 = distinct !DISubprogram(name: "eraseRawDiskBlock", scope: !2025, file: !2025, line: 398, type: !10615, scopeLine: 399, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2024, retainedNodes: !10617)
!10615 = !DISubroutineType(types: !10616)
!10616 = !{!1124, !10402, !105}
!10617 = !{!10618, !10619, !10620, !10621}
!10618 = !DILocalVariable(name: "D", arg: 1, scope: !10614, file: !2025, line: 398, type: !10402)
!10619 = !DILocalVariable(name: "blkIdx", arg: 2, scope: !10614, file: !2025, line: 398, type: !105)
!10620 = !DILocalVariable(name: "result", scope: !10614, file: !2025, line: 401, type: !1124)
!10621 = !DILocalVariable(name: "block_index", scope: !10614, file: !2025, line: 402, type: !105)
!10622 = !DILocation(line: 0, scope: !10614)
!10623 = !DILocation(line: 402, column: 36, scope: !10614)
!10624 = !DILocation(line: 403, column: 13, scope: !10625)
!10625 = distinct !DILexicalBlock(scope: !10614, file: !2025, line: 403, column: 9)
!10626 = !DILocation(line: 403, column: 9, scope: !10614)
!10627 = !DILocation(line: 404, column: 9, scope: !10628)
!10628 = distinct !DILexicalBlock(scope: !10625, file: !2025, line: 403, column: 23)
!10629 = !DILocation(line: 405, column: 5, scope: !10628)
!10630 = !DILocation(line: 407, column: 37, scope: !10631)
!10631 = distinct !DILexicalBlock(scope: !10614, file: !2025, line: 407, column: 9)
!10632 = !DILocation(line: 407, column: 21, scope: !10631)
!10633 = !DILocation(line: 407, column: 9, scope: !10614)
!10634 = !DILocation(line: 412, column: 5, scope: !10614)
!10635 = !DILocation(line: 414, column: 8, scope: !10614)
!10636 = !DILocation(line: 414, column: 19, scope: !10614)
!10637 = !DILocation(line: 414, column: 32, scope: !10614)
!10638 = !DILocation(line: 414, column: 5, scope: !10614)
!10639 = !DILocation(line: 416, column: 17, scope: !10614)
!10640 = !DILocation(line: 416, column: 28, scope: !10614)
!10641 = !DILocation(line: 416, column: 42, scope: !10614)
!10642 = !DILocation(line: 416, column: 14, scope: !10614)
!10643 = !DILocation(line: 418, column: 5, scope: !10614)
!10644 = !DILocation(line: 420, column: 16, scope: !10645)
!10645 = distinct !DILexicalBlock(scope: !10614, file: !2025, line: 420, column: 9)
!10646 = !DILocation(line: 424, column: 1, scope: !10614)
!10647 = distinct !DISubprogram(name: "NOR_init", scope: !2025, file: !2025, line: 433, type: !8066, scopeLine: 434, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2024, retainedNodes: !320)
!10648 = !DILocation(line: 436, column: 9, scope: !10649)
!10649 = distinct !DILexicalBlock(scope: !10647, file: !2025, line: 436, column: 9)
!10650 = !DILocation(line: 436, column: 9, scope: !10647)
!10651 = !DILocation(line: 437, column: 9, scope: !10652)
!10652 = distinct !DILexicalBlock(scope: !10649, file: !2025, line: 436, column: 62)
!10653 = !DILocation(line: 438, column: 9, scope: !10652)
!10654 = !DILocation(line: 439, column: 27, scope: !10652)
!10655 = !DILocation(line: 440, column: 5, scope: !10652)
!10656 = !DILocation(line: 441, column: 5, scope: !10647)
!10657 = distinct !DISubprogram(name: "get_NOR_init_status", scope: !2025, file: !2025, line: 444, type: !8532, scopeLine: 445, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2024, retainedNodes: !320)
!10658 = !DILocation(line: 446, column: 12, scope: !10657)
!10659 = !DILocation(line: 446, column: 5, scope: !10657)
!10660 = distinct !DISubprogram(name: "NOR_ReadPhysicalPage", scope: !2025, file: !2025, line: 449, type: !10661, scopeLine: 450, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2024, retainedNodes: !10663)
!10661 = !DISubroutineType(types: !10662)
!10662 = !{!1124, !105, !105, !818}
!10663 = !{!10664, !10665, !10666, !10667, !10668, !10669, !10670}
!10664 = !DILocalVariable(name: "block_idx", arg: 1, scope: !10660, file: !2025, line: 449, type: !105)
!10665 = !DILocalVariable(name: "page_idx", arg: 2, scope: !10660, file: !2025, line: 449, type: !105)
!10666 = !DILocalVariable(name: "data_ptr", arg: 3, scope: !10660, file: !2025, line: 449, type: !818)
!10667 = !DILocalVariable(name: "D", scope: !10660, file: !2025, line: 451, type: !10402)
!10668 = !DILocalVariable(name: "mtdData", scope: !10660, file: !2025, line: 452, type: !2033)
!10669 = !DILocalVariable(name: "result", scope: !10660, file: !2025, line: 453, type: !1124)
!10670 = !DILocalVariable(name: "addr", scope: !10660, file: !2025, line: 455, type: !105)
!10671 = !DILocation(line: 0, scope: !10660)
!10672 = !DILocation(line: 452, column: 60, scope: !10660)
!10673 = !DILocation(line: 455, column: 32, scope: !10660)
!10674 = !DILocation(line: 455, column: 22, scope: !10660)
!10675 = !DILocation(line: 455, column: 95, scope: !10660)
!10676 = !DILocation(line: 455, column: 76, scope: !10660)
!10677 = !DILocation(line: 455, column: 118, scope: !10660)
!10678 = !DILocation(line: 455, column: 74, scope: !10660)
!10679 = !DILocation(line: 455, column: 106, scope: !10660)
!10680 = !DILocation(line: 457, column: 14, scope: !10660)
!10681 = !DILocation(line: 459, column: 16, scope: !10682)
!10682 = distinct !DILexicalBlock(scope: !10660, file: !2025, line: 459, column: 9)
!10683 = !DILocation(line: 463, column: 1, scope: !10660)
!10684 = distinct !DISubprogram(name: "NOR_ProgramPhysicalPage", scope: !2025, file: !2025, line: 466, type: !10661, scopeLine: 467, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2024, retainedNodes: !10685)
!10685 = !{!10686, !10687, !10688, !10689, !10690, !10691, !10692}
!10686 = !DILocalVariable(name: "block_idx", arg: 1, scope: !10684, file: !2025, line: 466, type: !105)
!10687 = !DILocalVariable(name: "page_idx", arg: 2, scope: !10684, file: !2025, line: 466, type: !105)
!10688 = !DILocalVariable(name: "data_ptr", arg: 3, scope: !10684, file: !2025, line: 466, type: !818)
!10689 = !DILocalVariable(name: "D", scope: !10684, file: !2025, line: 468, type: !10402)
!10690 = !DILocalVariable(name: "mtdData", scope: !10684, file: !2025, line: 469, type: !2033)
!10691 = !DILocalVariable(name: "result", scope: !10684, file: !2025, line: 470, type: !1124)
!10692 = !DILocalVariable(name: "addr", scope: !10684, file: !2025, line: 472, type: !105)
!10693 = !DILocation(line: 0, scope: !10684)
!10694 = !DILocation(line: 469, column: 60, scope: !10684)
!10695 = !DILocation(line: 472, column: 32, scope: !10684)
!10696 = !DILocation(line: 472, column: 22, scope: !10684)
!10697 = !DILocation(line: 472, column: 95, scope: !10684)
!10698 = !DILocation(line: 472, column: 76, scope: !10684)
!10699 = !DILocation(line: 472, column: 118, scope: !10684)
!10700 = !DILocation(line: 472, column: 74, scope: !10684)
!10701 = !DILocation(line: 472, column: 106, scope: !10684)
!10702 = !DILocation(line: 474, column: 14, scope: !10684)
!10703 = !DILocation(line: 475, column: 16, scope: !10704)
!10704 = distinct !DILexicalBlock(scope: !10684, file: !2025, line: 475, column: 9)
!10705 = !DILocation(line: 479, column: 1, scope: !10684)
!10706 = distinct !DISubprogram(name: "NOR_ErasePhysicalBlock", scope: !2025, file: !2025, line: 481, type: !10707, scopeLine: 482, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2024, retainedNodes: !10709)
!10707 = !DISubroutineType(types: !10708)
!10708 = !{!1124, !105}
!10709 = !{!10710, !10711}
!10710 = !DILocalVariable(name: "block_idx", arg: 1, scope: !10706, file: !2025, line: 481, type: !105)
!10711 = !DILocalVariable(name: "result", scope: !10706, file: !2025, line: 483, type: !1124)
!10712 = !DILocation(line: 0, scope: !10706)
!10713 = !DILocation(line: 484, column: 14, scope: !10706)
!10714 = !DILocation(line: 485, column: 16, scope: !10715)
!10715 = distinct !DILexicalBlock(scope: !10706, file: !2025, line: 485, column: 9)
!10716 = !DILocation(line: 489, column: 1, scope: !10706)
!10717 = distinct !DISubprogram(name: "NOR_BlockSize", scope: !2025, file: !2025, line: 492, type: !3782, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2024, retainedNodes: !10718)
!10718 = !{!10719, !10720, !10721}
!10719 = !DILocalVariable(name: "block_idx", arg: 1, scope: !10717, file: !2025, line: 492, type: !105)
!10720 = !DILocalVariable(name: "D", scope: !10717, file: !2025, line: 494, type: !10402)
!10721 = !DILocalVariable(name: "mtdData", scope: !10717, file: !2025, line: 495, type: !2033)
!10722 = !DILocation(line: 0, scope: !10717)
!10723 = !DILocation(line: 495, column: 60, scope: !10717)
!10724 = !DILocation(line: 496, column: 12, scope: !10717)
!10725 = !DILocation(line: 496, column: 5, scope: !10717)
!10726 = distinct !DISubprogram(name: "NOR_BlockIndex", scope: !2025, file: !2025, line: 499, type: !3782, scopeLine: 500, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2024, retainedNodes: !10727)
!10727 = !{!10728, !10729, !10730}
!10728 = !DILocalVariable(name: "block_addr", arg: 1, scope: !10726, file: !2025, line: 499, type: !105)
!10729 = !DILocalVariable(name: "D", scope: !10726, file: !2025, line: 501, type: !10402)
!10730 = !DILocalVariable(name: "mtdData", scope: !10726, file: !2025, line: 502, type: !2033)
!10731 = !DILocation(line: 0, scope: !10726)
!10732 = !DILocation(line: 502, column: 60, scope: !10726)
!10733 = !DILocation(line: 504, column: 12, scope: !10726)
!10734 = !DILocation(line: 504, column: 5, scope: !10726)
!10735 = distinct !DISubprogram(name: "NOR_Addr2BlockIndexOffset", scope: !2025, file: !2025, line: 510, type: !10736, scopeLine: 511, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2024, retainedNodes: !10738)
!10736 = !DISubroutineType(types: !10737)
!10737 = !{!1124, !105, !1186, !1186}
!10738 = !{!10739, !10740, !10741, !10742, !10743}
!10739 = !DILocalVariable(name: "block_addr", arg: 1, scope: !10735, file: !2025, line: 510, type: !105)
!10740 = !DILocalVariable(name: "block_index", arg: 2, scope: !10735, file: !2025, line: 510, type: !1186)
!10741 = !DILocalVariable(name: "offset", arg: 3, scope: !10735, file: !2025, line: 510, type: !1186)
!10742 = !DILocalVariable(name: "D", scope: !10735, file: !2025, line: 512, type: !10402)
!10743 = !DILocalVariable(name: "mtdData", scope: !10735, file: !2025, line: 513, type: !2033)
!10744 = !DILocation(line: 0, scope: !10735)
!10745 = !DILocation(line: 513, column: 60, scope: !10735)
!10746 = !DILocation(line: 519, column: 20, scope: !10735)
!10747 = !DILocation(line: 519, column: 18, scope: !10735)
!10748 = !DILocation(line: 520, column: 22, scope: !10749)
!10749 = distinct !DILexicalBlock(scope: !10735, file: !2025, line: 520, column: 9)
!10750 = !DILocation(line: 520, column: 9, scope: !10735)
!10751 = !DILocation(line: 524, column: 28, scope: !10735)
!10752 = !DILocation(line: 524, column: 26, scope: !10735)
!10753 = !DILocation(line: 524, column: 13, scope: !10735)
!10754 = !DILocation(line: 526, column: 5, scope: !10735)
!10755 = !DILocation(line: 527, column: 1, scope: !10735)
!10756 = distinct !DISubprogram(name: "NOR_BlockIndexOffset2Addr", scope: !2025, file: !2025, line: 532, type: !10757, scopeLine: 533, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2024, retainedNodes: !10759)
!10757 = !DISubroutineType(types: !10758)
!10758 = !{!1124, !105, !105, !1186}
!10759 = !{!10760, !10761, !10762, !10763, !10764}
!10760 = !DILocalVariable(name: "block_index", arg: 1, scope: !10756, file: !2025, line: 532, type: !105)
!10761 = !DILocalVariable(name: "offset", arg: 2, scope: !10756, file: !2025, line: 532, type: !105)
!10762 = !DILocalVariable(name: "addr", arg: 3, scope: !10756, file: !2025, line: 532, type: !1186)
!10763 = !DILocalVariable(name: "D", scope: !10756, file: !2025, line: 534, type: !10402)
!10764 = !DILocalVariable(name: "mtdData", scope: !10756, file: !2025, line: 535, type: !2033)
!10765 = !DILocation(line: 0, scope: !10756)
!10766 = !DILocation(line: 535, column: 60, scope: !10756)
!10767 = !DILocation(line: 537, column: 23, scope: !10756)
!10768 = !DILocation(line: 537, column: 13, scope: !10756)
!10769 = !DILocation(line: 537, column: 79, scope: !10756)
!10770 = !DILocation(line: 537, column: 60, scope: !10756)
!10771 = !DILocation(line: 537, column: 58, scope: !10756)
!10772 = !DILocation(line: 537, column: 88, scope: !10756)
!10773 = !DILocation(line: 537, column: 11, scope: !10756)
!10774 = !DILocation(line: 539, column: 5, scope: !10756)
!10775 = distinct !DISubprogram(name: "get_rawdisk_error_code", scope: !2025, file: !2025, line: 545, type: !10776, scopeLine: 546, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2024, retainedNodes: !10778)
!10776 = !DISubroutineType(types: !10777)
!10777 = !{!2081, !1124}
!10778 = !{!10779}
!10779 = !DILocalVariable(name: "ori_err_code", arg: 1, scope: !10775, file: !2025, line: 545, type: !1124)
!10780 = !DILocation(line: 0, scope: !10775)
!10781 = !DILocation(line: 547, column: 9, scope: !10775)
!10782 = !DILocation(line: 558, column: 9, scope: !10783)
!10783 = distinct !DILexicalBlock(scope: !10784, file: !2025, line: 558, column: 9)
!10784 = distinct !DILexicalBlock(scope: !10785, file: !2025, line: 558, column: 9)
!10785 = distinct !DILexicalBlock(scope: !10786, file: !2025, line: 558, column: 9)
!10786 = distinct !DILexicalBlock(scope: !10787, file: !2025, line: 557, column: 12)
!10787 = distinct !DILexicalBlock(scope: !10788, file: !2025, line: 555, column: 16)
!10788 = distinct !DILexicalBlock(scope: !10789, file: !2025, line: 553, column: 16)
!10789 = distinct !DILexicalBlock(scope: !10790, file: !2025, line: 551, column: 16)
!10790 = distinct !DILexicalBlock(scope: !10791, file: !2025, line: 549, column: 16)
!10791 = distinct !DILexicalBlock(scope: !10775, file: !2025, line: 547, column: 9)
!10792 = !DILocation(line: 560, column: 1, scope: !10775)
!10793 = distinct !DISubprogram(name: "get_block_size_from_address", scope: !2025, file: !2025, line: 561, type: !10794, scopeLine: 562, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2024, retainedNodes: !10797)
!10794 = !DISubroutineType(types: !10795)
!10795 = !{!10796, !105}
!10796 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_flash_block_t", file: !1364, line: 127, baseType: !2027)
!10797 = !{!10798, !10799, !10800}
!10798 = !DILocalVariable(name: "address", arg: 1, scope: !10793, file: !2025, line: 561, type: !105)
!10799 = !DILocalVariable(name: "block_size", scope: !10793, file: !2025, line: 563, type: !105)
!10800 = !DILocalVariable(name: "block_index", scope: !10793, file: !2025, line: 564, type: !105)
!10801 = !DILocation(line: 0, scope: !10793)
!10802 = !DILocation(line: 566, column: 19, scope: !10793)
!10803 = !DILocation(line: 567, column: 21, scope: !10804)
!10804 = distinct !DILexicalBlock(scope: !10793, file: !2025, line: 567, column: 9)
!10805 = !DILocation(line: 567, column: 9, scope: !10793)
!10806 = !DILocation(line: 568, column: 9, scope: !10807)
!10807 = distinct !DILexicalBlock(scope: !10808, file: !2025, line: 568, column: 9)
!10808 = distinct !DILexicalBlock(scope: !10809, file: !2025, line: 568, column: 9)
!10809 = distinct !DILexicalBlock(scope: !10810, file: !2025, line: 568, column: 9)
!10810 = distinct !DILexicalBlock(scope: !10804, file: !2025, line: 567, column: 45)
!10811 = !DILocation(line: 570, column: 18, scope: !10793)
!10812 = !DILocation(line: 571, column: 9, scope: !10793)
!10813 = !DILocation(line: 574, column: 9, scope: !10814)
!10814 = distinct !DILexicalBlock(scope: !10815, file: !2025, line: 573, column: 38)
!10815 = distinct !DILexicalBlock(scope: !10816, file: !2025, line: 573, column: 16)
!10816 = distinct !DILexicalBlock(scope: !10793, file: !2025, line: 571, column: 9)
!10817 = !DILocation(line: 576, column: 9, scope: !10818)
!10818 = distinct !DILexicalBlock(scope: !10819, file: !2025, line: 575, column: 39)
!10819 = distinct !DILexicalBlock(scope: !10815, file: !2025, line: 575, column: 16)
!10820 = !DILocation(line: 578, column: 9, scope: !10821)
!10821 = distinct !DILexicalBlock(scope: !10822, file: !2025, line: 578, column: 9)
!10822 = distinct !DILexicalBlock(scope: !10823, file: !2025, line: 578, column: 9)
!10823 = distinct !DILexicalBlock(scope: !10824, file: !2025, line: 578, column: 9)
!10824 = distinct !DILexicalBlock(scope: !10819, file: !2025, line: 577, column: 12)
!10825 = !DILocation(line: 0, scope: !10816)
!10826 = !DILocation(line: 580, column: 1, scope: !10793)
!10827 = distinct !DISubprogram(name: "hal_flash_init", scope: !2025, file: !2025, line: 583, type: !8532, scopeLine: 584, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2024, retainedNodes: !320)
!10828 = !DILocation(line: 585, column: 5, scope: !10827)
!10829 = !DILocation(line: 586, column: 5, scope: !10827)
!10830 = distinct !DISubprogram(name: "hal_flash_deinit", scope: !2025, file: !2025, line: 589, type: !8532, scopeLine: 590, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2024, retainedNodes: !320)
!10831 = !DILocation(line: 591, column: 5, scope: !10830)
!10832 = distinct !DISubprogram(name: "hal_flash_erase", scope: !2025, file: !2025, line: 595, type: !10833, scopeLine: 596, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2024, retainedNodes: !10835)
!10833 = !DISubroutineType(types: !10834)
!10834 = !{!2081, !105, !10796}
!10835 = !{!10836, !10837, !10838, !10839, !10840}
!10836 = !DILocalVariable(name: "start_address", arg: 1, scope: !10832, file: !2025, line: 595, type: !105)
!10837 = !DILocalVariable(name: "block", arg: 2, scope: !10832, file: !2025, line: 595, type: !10796)
!10838 = !DILocalVariable(name: "result", scope: !10832, file: !2025, line: 597, type: !1124)
!10839 = !DILocalVariable(name: "block_index", scope: !10832, file: !2025, line: 598, type: !105)
!10840 = !DILocalVariable(name: "erase_type", scope: !10832, file: !2025, line: 599, type: !105)
!10841 = !DILocation(line: 0, scope: !10832)
!10842 = !DILocation(line: 601, column: 9, scope: !10832)
!10843 = !DILocation(line: 602, column: 28, scope: !10844)
!10844 = distinct !DILexicalBlock(scope: !10845, file: !2025, line: 602, column: 13)
!10845 = distinct !DILexicalBlock(scope: !10846, file: !2025, line: 601, column: 38)
!10846 = distinct !DILexicalBlock(scope: !10832, file: !2025, line: 601, column: 9)
!10847 = !DILocation(line: 602, column: 37, scope: !10844)
!10848 = !DILocation(line: 602, column: 13, scope: !10845)
!10849 = !DILocation(line: 607, column: 28, scope: !10850)
!10850 = distinct !DILexicalBlock(scope: !10851, file: !2025, line: 607, column: 13)
!10851 = distinct !DILexicalBlock(scope: !10852, file: !2025, line: 606, column: 46)
!10852 = distinct !DILexicalBlock(scope: !10846, file: !2025, line: 606, column: 16)
!10853 = !DILocation(line: 607, column: 38, scope: !10850)
!10854 = !DILocation(line: 607, column: 13, scope: !10851)
!10855 = !DILocation(line: 612, column: 28, scope: !10856)
!10856 = distinct !DILexicalBlock(scope: !10857, file: !2025, line: 612, column: 13)
!10857 = distinct !DILexicalBlock(scope: !10858, file: !2025, line: 611, column: 46)
!10858 = distinct !DILexicalBlock(scope: !10852, file: !2025, line: 611, column: 16)
!10859 = !DILocation(line: 612, column: 38, scope: !10856)
!10860 = !DILocation(line: 612, column: 13, scope: !10857)
!10861 = !DILocation(line: 0, scope: !10846)
!10862 = !DILocation(line: 621, column: 19, scope: !10832)
!10863 = !DILocation(line: 622, column: 21, scope: !10864)
!10864 = distinct !DILexicalBlock(scope: !10832, file: !2025, line: 622, column: 9)
!10865 = !DILocation(line: 622, column: 9, scope: !10832)
!10866 = !DILocation(line: 626, column: 17, scope: !10832)
!10867 = !DILocation(line: 627, column: 14, scope: !10832)
!10868 = !DILocation(line: 628, column: 16, scope: !10869)
!10869 = distinct !DILexicalBlock(scope: !10832, file: !2025, line: 628, column: 9)
!10870 = !DILocation(line: 628, column: 9, scope: !10832)
!10871 = !DILocation(line: 629, column: 16, scope: !10872)
!10872 = distinct !DILexicalBlock(scope: !10869, file: !2025, line: 628, column: 38)
!10873 = !DILocation(line: 629, column: 9, scope: !10872)
!10874 = !DILocation(line: 632, column: 1, scope: !10832)
!10875 = distinct !DISubprogram(name: "hal_flash_read", scope: !2025, file: !2025, line: 634, type: !10876, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2024, retainedNodes: !10878)
!10876 = !DISubroutineType(types: !10877)
!10877 = !{!2081, !105, !818, !105}
!10878 = !{!10879, !10880, !10881, !10882, !10883}
!10879 = !DILocalVariable(name: "start_address", arg: 1, scope: !10875, file: !2025, line: 634, type: !105)
!10880 = !DILocalVariable(name: "buffer", arg: 2, scope: !10875, file: !2025, line: 634, type: !818)
!10881 = !DILocalVariable(name: "length", arg: 3, scope: !10875, file: !2025, line: 634, type: !105)
!10882 = !DILocalVariable(name: "D", scope: !10875, file: !2025, line: 636, type: !10402)
!10883 = !DILocalVariable(name: "result", scope: !10875, file: !2025, line: 637, type: !1124)
!10884 = !DILocation(line: 0, scope: !10875)
!10885 = !DILocation(line: 639, column: 14, scope: !10875)
!10886 = !DILocation(line: 641, column: 16, scope: !10887)
!10887 = distinct !DILexicalBlock(scope: !10875, file: !2025, line: 641, column: 9)
!10888 = !DILocation(line: 641, column: 9, scope: !10875)
!10889 = !DILocation(line: 642, column: 16, scope: !10890)
!10890 = distinct !DILexicalBlock(scope: !10887, file: !2025, line: 641, column: 38)
!10891 = !DILocation(line: 642, column: 9, scope: !10890)
!10892 = !DILocation(line: 645, column: 1, scope: !10875)
!10893 = distinct !DISubprogram(name: "hal_flash_write", scope: !2025, file: !2025, line: 647, type: !10894, scopeLine: 648, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2024, retainedNodes: !10896)
!10894 = !DISubroutineType(types: !10895)
!10895 = !{!2081, !105, !5647, !105}
!10896 = !{!10897, !10898, !10899, !10900, !10901}
!10897 = !DILocalVariable(name: "address", arg: 1, scope: !10893, file: !2025, line: 647, type: !105)
!10898 = !DILocalVariable(name: "data", arg: 2, scope: !10893, file: !2025, line: 647, type: !5647)
!10899 = !DILocalVariable(name: "length", arg: 3, scope: !10893, file: !2025, line: 647, type: !105)
!10900 = !DILocalVariable(name: "D", scope: !10893, file: !2025, line: 649, type: !10402)
!10901 = !DILocalVariable(name: "result", scope: !10893, file: !2025, line: 650, type: !1124)
!10902 = !DILocation(line: 0, scope: !10893)
!10903 = !DILocation(line: 652, column: 14, scope: !10893)
!10904 = !DILocation(line: 653, column: 16, scope: !10905)
!10905 = distinct !DILexicalBlock(scope: !10893, file: !2025, line: 653, column: 9)
!10906 = !DILocation(line: 653, column: 9, scope: !10893)
!10907 = !DILocation(line: 654, column: 16, scope: !10908)
!10908 = distinct !DILexicalBlock(scope: !10905, file: !2025, line: 653, column: 38)
!10909 = !DILocation(line: 654, column: 9, scope: !10908)
!10910 = !DILocation(line: 668, column: 1, scope: !10893)
!10911 = distinct !DISubprogram(name: "BlockAddress", scope: !2086, file: !2086, line: 111, type: !10912, scopeLine: 112, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2085, retainedNodes: !10914)
!10912 = !DISubroutineType(types: !10913)
!10913 = !{!124, !124, !105}
!10914 = !{!10915, !10916, !10917, !10918, !10919, !10920}
!10915 = !DILocalVariable(name: "DriverData", arg: 1, scope: !10911, file: !2086, line: 111, type: !124)
!10916 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !10911, file: !2086, line: 111, type: !105)
!10917 = !DILocalVariable(name: "D", scope: !10911, file: !2086, line: 113, type: !2107)
!10918 = !DILocalVariable(name: "addr", scope: !10911, file: !2086, line: 114, type: !105)
!10919 = !DILocalVariable(name: "region", scope: !10911, file: !2086, line: 115, type: !105)
!10920 = !DILocalVariable(name: "BlockUpperBound", scope: !10911, file: !2086, line: 115, type: !105)
!10921 = !DILocation(line: 0, scope: !10911)
!10922 = !DILocation(line: 117, column: 26, scope: !10911)
!10923 = !DILocation(line: 117, column: 40, scope: !10911)
!10924 = !DILocation(line: 118, column: 28, scope: !10911)
!10925 = !DILocation(line: 118, column: 5, scope: !10911)
!10926 = !DILocation(line: 119, column: 39, scope: !10927)
!10927 = distinct !DILexicalBlock(scope: !10911, file: !2086, line: 118, column: 43)
!10928 = !DILocation(line: 119, column: 76, scope: !10927)
!10929 = !DILocation(line: 119, column: 52, scope: !10927)
!10930 = !DILocation(line: 119, column: 14, scope: !10927)
!10931 = !DILocation(line: 120, column: 15, scope: !10927)
!10932 = !DILocation(line: 121, column: 50, scope: !10927)
!10933 = !DILocation(line: 121, column: 25, scope: !10927)
!10934 = distinct !{!10934, !10925, !10935}
!10935 = !DILocation(line: 122, column: 5, scope: !10911)
!10936 = !DILocation(line: 123, column: 68, scope: !10911)
!10937 = !DILocation(line: 123, column: 44, scope: !10911)
!10938 = !DILocation(line: 123, column: 25, scope: !10911)
!10939 = !DILocation(line: 123, column: 107, scope: !10911)
!10940 = !DILocation(line: 123, column: 83, scope: !10911)
!10941 = !DILocation(line: 123, column: 10, scope: !10911)
!10942 = !DILocation(line: 125, column: 16, scope: !10911)
!10943 = !DILocation(line: 125, column: 25, scope: !10911)
!10944 = !DILocation(line: 125, column: 5, scope: !10911)
!10945 = distinct !DISubprogram(name: "MapWindow", scope: !2086, file: !2086, line: 180, type: !1719, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2085, retainedNodes: !10946)
!10946 = !{!10947, !10948, !10949, !10950}
!10947 = !DILocalVariable(name: "DriveData", arg: 1, scope: !10945, file: !2086, line: 180, type: !124)
!10948 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !10945, file: !2086, line: 180, type: !105)
!10949 = !DILocalVariable(name: "WindowIndex", arg: 3, scope: !10945, file: !2086, line: 180, type: !105)
!10950 = !DILocalVariable(name: "D", scope: !10945, file: !2086, line: 182, type: !2107)
!10951 = !DILocation(line: 0, scope: !10945)
!10952 = !DILocation(line: 185, column: 5, scope: !10953)
!10953 = distinct !DILexicalBlock(scope: !10954, file: !2086, line: 185, column: 5)
!10954 = distinct !DILexicalBlock(scope: !10945, file: !2086, line: 185, column: 5)
!10955 = !DILocation(line: 185, column: 5, scope: !10954)
!10956 = !DILocation(line: 185, column: 5, scope: !10957)
!10957 = distinct !DILexicalBlock(scope: !10953, file: !2086, line: 185, column: 5)
!10958 = !DILocation(line: 186, column: 27, scope: !10945)
!10959 = !DILocation(line: 186, column: 19, scope: !10945)
!10960 = !DILocation(line: 186, column: 8, scope: !10945)
!10961 = !DILocation(line: 186, column: 17, scope: !10945)
!10962 = !DILocation(line: 188, column: 5, scope: !10945)
!10963 = !DILocation(line: 0, scope: !2100)
!10964 = !DILocation(line: 142, column: 12, scope: !10965)
!10965 = distinct !DILexicalBlock(scope: !2100, file: !2086, line: 142, column: 9)
!10966 = !DILocation(line: 142, column: 34, scope: !10965)
!10967 = !DILocation(line: 142, column: 64, scope: !10965)
!10968 = !DILocation(line: 142, column: 75, scope: !10965)
!10969 = !DILocation(line: 142, column: 9, scope: !2100)
!10970 = !DILocation(line: 143, column: 79, scope: !10971)
!10971 = distinct !DILexicalBlock(scope: !10972, file: !2086, line: 143, column: 13)
!10972 = distinct !DILexicalBlock(scope: !10965, file: !2086, line: 142, column: 99)
!10973 = !DILocation(line: 143, column: 13, scope: !10972)
!10974 = !DILocation(line: 144, column: 72, scope: !10975)
!10975 = distinct !DILexicalBlock(scope: !10976, file: !2086, line: 144, column: 17)
!10976 = distinct !DILexicalBlock(scope: !10971, file: !2086, line: 143, column: 94)
!10977 = !DILocation(line: 144, column: 83, scope: !10975)
!10978 = !DILocation(line: 144, column: 17, scope: !10976)
!10979 = !DILocation(line: 145, column: 87, scope: !10980)
!10980 = distinct !DILexicalBlock(scope: !10981, file: !2086, line: 145, column: 21)
!10981 = distinct !DILexicalBlock(scope: !10975, file: !2086, line: 144, column: 107)
!10982 = !DILocation(line: 145, column: 21, scope: !10981)
!10983 = !DILocation(line: 146, column: 33, scope: !10984)
!10984 = distinct !DILexicalBlock(scope: !10980, file: !2086, line: 145, column: 102)
!10985 = !DILocation(line: 147, column: 25, scope: !10986)
!10986 = distinct !DILexicalBlock(scope: !10984, file: !2086, line: 147, column: 25)
!10987 = !DILocation(line: 147, column: 62, scope: !10986)
!10988 = !DILocation(line: 147, column: 34, scope: !10986)
!10989 = !DILocation(line: 147, column: 25, scope: !10984)
!10990 = !DILocation(line: 148, column: 91, scope: !10991)
!10991 = distinct !DILexicalBlock(scope: !10986, file: !2086, line: 147, column: 106)
!10992 = !DILocation(line: 149, column: 111, scope: !10991)
!10993 = !DILocation(line: 149, column: 101, scope: !10991)
!10994 = !DILocation(line: 149, column: 87, scope: !10991)
!10995 = !DILocation(line: 149, column: 99, scope: !10991)
!10996 = !DILocation(line: 150, column: 37, scope: !10991)
!10997 = !DILocation(line: 150, column: 34, scope: !10991)
!10998 = !DILocation(line: 151, column: 21, scope: !10991)
!10999 = !DILocation(line: 152, column: 91, scope: !11000)
!11000 = distinct !DILexicalBlock(scope: !10986, file: !2086, line: 151, column: 28)
!11001 = !DILocation(line: 153, column: 111, scope: !11000)
!11002 = !DILocation(line: 153, column: 101, scope: !11000)
!11003 = !DILocation(line: 153, column: 87, scope: !11000)
!11004 = !DILocation(line: 153, column: 99, scope: !11000)
!11005 = !DILocation(line: 154, column: 34, scope: !11000)
!11006 = !DILocation(line: 157, column: 32, scope: !11007)
!11007 = distinct !DILexicalBlock(scope: !10980, file: !2086, line: 156, column: 24)
!11008 = !DILocation(line: 158, column: 83, scope: !11007)
!11009 = !DILocation(line: 159, column: 60, scope: !11007)
!11010 = !DILocation(line: 159, column: 33, scope: !11007)
!11011 = !DILocation(line: 159, column: 30, scope: !11007)
!11012 = !DILocation(line: 162, column: 29, scope: !11013)
!11013 = distinct !DILexicalBlock(scope: !10975, file: !2086, line: 161, column: 20)
!11014 = !DILocation(line: 163, column: 83, scope: !11013)
!11015 = !DILocation(line: 164, column: 103, scope: !11013)
!11016 = !DILocation(line: 164, column: 93, scope: !11013)
!11017 = !DILocation(line: 164, column: 79, scope: !11013)
!11018 = !DILocation(line: 164, column: 91, scope: !11013)
!11019 = !DILocation(line: 165, column: 56, scope: !11013)
!11020 = !DILocation(line: 165, column: 29, scope: !11013)
!11021 = !DILocation(line: 165, column: 26, scope: !11013)
!11022 = !DILocation(line: 168, column: 24, scope: !11023)
!11023 = distinct !DILexicalBlock(scope: !10971, file: !2086, line: 167, column: 16)
!11024 = !DILocation(line: 169, column: 75, scope: !11023)
!11025 = !DILocation(line: 170, column: 50, scope: !11023)
!11026 = !DILocation(line: 170, column: 22, scope: !11023)
!11027 = !DILocation(line: 173, column: 21, scope: !11028)
!11028 = distinct !DILexicalBlock(scope: !10965, file: !2086, line: 172, column: 12)
!11029 = !DILocation(line: 174, column: 75, scope: !11028)
!11030 = !DILocation(line: 175, column: 95, scope: !11028)
!11031 = !DILocation(line: 175, column: 85, scope: !11028)
!11032 = !DILocation(line: 175, column: 71, scope: !11028)
!11033 = !DILocation(line: 175, column: 83, scope: !11028)
!11034 = !DILocation(line: 176, column: 46, scope: !11028)
!11035 = !DILocation(line: 176, column: 18, scope: !11028)
!11036 = !DILocation(line: 0, scope: !10965)
!11037 = !DILocation(line: 178, column: 5, scope: !2100)
!11038 = distinct !DISubprogram(name: "BlockSize", scope: !2086, file: !2086, line: 191, type: !2101, scopeLine: 192, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2085, retainedNodes: !11039)
!11039 = !{!11040, !11041, !11042, !11043, !11044}
!11040 = !DILocalVariable(name: "DriveData", arg: 1, scope: !11038, file: !2086, line: 191, type: !124)
!11041 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !11038, file: !2086, line: 191, type: !105)
!11042 = !DILocalVariable(name: "D", scope: !11038, file: !2086, line: 193, type: !2107)
!11043 = !DILocalVariable(name: "region", scope: !11038, file: !2086, line: 194, type: !105)
!11044 = !DILocalVariable(name: "BlockUpperBound", scope: !11038, file: !2086, line: 194, type: !105)
!11045 = !DILocation(line: 0, scope: !11038)
!11046 = !DILocation(line: 196, column: 26, scope: !11038)
!11047 = !DILocation(line: 196, column: 45, scope: !11038)
!11048 = !DILocation(line: 197, column: 28, scope: !11038)
!11049 = !DILocation(line: 197, column: 5, scope: !11038)
!11050 = !DILocation(line: 198, column: 15, scope: !11051)
!11051 = distinct !DILexicalBlock(scope: !11038, file: !2086, line: 197, column: 43)
!11052 = !DILocation(line: 199, column: 50, scope: !11051)
!11053 = !DILocation(line: 199, column: 25, scope: !11051)
!11054 = distinct !{!11054, !11049, !11055}
!11055 = !DILocation(line: 200, column: 5, scope: !11038)
!11056 = !DILocation(line: 202, column: 35, scope: !11038)
!11057 = !DILocation(line: 202, column: 5, scope: !11038)
!11058 = distinct !DISubprogram(name: "BlockIndex", scope: !2086, file: !2086, line: 205, type: !2101, scopeLine: 206, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2085, retainedNodes: !11059)
!11059 = !{!11060, !11061, !11062, !11063, !11064, !11065}
!11060 = !DILocalVariable(name: "DriveData", arg: 1, scope: !11058, file: !2086, line: 205, type: !124)
!11061 = !DILocalVariable(name: "blk_addr", arg: 2, scope: !11058, file: !2086, line: 205, type: !105)
!11062 = !DILocalVariable(name: "D", scope: !11058, file: !2086, line: 207, type: !2107)
!11063 = !DILocalVariable(name: "region", scope: !11058, file: !2086, line: 208, type: !105)
!11064 = !DILocalVariable(name: "BlockUpperAddr", scope: !11058, file: !2086, line: 208, type: !105)
!11065 = !DILocalVariable(name: "blk_idx", scope: !11058, file: !2086, line: 209, type: !105)
!11066 = !DILocation(line: 0, scope: !11058)
!11067 = !DILocation(line: 211, column: 25, scope: !11058)
!11068 = !DILocation(line: 211, column: 44, scope: !11058)
!11069 = !DILocation(line: 211, column: 81, scope: !11058)
!11070 = !DILocation(line: 211, column: 57, scope: !11058)
!11071 = !DILocation(line: 213, column: 28, scope: !11058)
!11072 = !DILocation(line: 213, column: 40, scope: !11058)
!11073 = !DILocation(line: 213, column: 66, scope: !11058)
!11074 = !DILocation(line: 213, column: 5, scope: !11058)
!11075 = !DILocation(line: 214, column: 17, scope: !11076)
!11076 = distinct !DILexicalBlock(scope: !11058, file: !2086, line: 213, column: 78)
!11077 = !DILocation(line: 215, column: 18, scope: !11076)
!11078 = !DILocation(line: 216, column: 15, scope: !11076)
!11079 = !DILocation(line: 217, column: 48, scope: !11076)
!11080 = !DILocation(line: 217, column: 85, scope: !11076)
!11081 = !DILocation(line: 217, column: 61, scope: !11076)
!11082 = distinct !{!11082, !11074, !11083}
!11083 = !DILocation(line: 218, column: 5, scope: !11058)
!11084 = !DILocation(line: 221, column: 53, scope: !11085)
!11085 = distinct !DILexicalBlock(scope: !11086, file: !2086, line: 220, column: 37)
!11086 = distinct !DILexicalBlock(scope: !11058, file: !2086, line: 220, column: 9)
!11087 = !DILocation(line: 221, column: 29, scope: !11085)
!11088 = !DILocation(line: 221, column: 17, scope: !11085)
!11089 = !DILocation(line: 222, column: 5, scope: !11085)
!11090 = !DILocation(line: 0, scope: !11086)
!11091 = !DILocation(line: 225, column: 5, scope: !11058)
!11092 = distinct !DISubprogram(name: "get_ROM_BASE", scope: !2086, file: !2086, line: 232, type: !4034, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2085, retainedNodes: !320)
!11093 = !DILocation(line: 238, column: 5, scope: !11092)
!11094 = distinct !DISubprogram(name: "get_NOR_FLASH_BASE_ADDRESS", scope: !2086, file: !2086, line: 243, type: !4034, scopeLine: 244, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2085, retainedNodes: !320)
!11095 = !DILocation(line: 245, column: 5, scope: !11094)
!11096 = distinct !DISubprogram(name: "get_Dual_NOR_FLASH_SIZE", scope: !2086, file: !2086, line: 249, type: !4034, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2085, retainedNodes: !320)
!11097 = !DILocation(line: 254, column: 5, scope: !11096)
!11098 = distinct !DISubprogram(name: "get_NOR_ALLOCATED_FAT_SPACE", scope: !2086, file: !2086, line: 259, type: !4034, scopeLine: 260, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2085, retainedNodes: !320)
!11099 = !DILocation(line: 261, column: 5, scope: !11098)
!11100 = distinct !DISubprogram(name: "DelayAWhile_UST", scope: !2086, file: !2086, line: 271, type: !7166, scopeLine: 272, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2085, retainedNodes: !11101)
!11101 = !{!11102, !11103}
!11102 = !DILocalVariable(name: "delay", arg: 1, scope: !11100, file: !2086, line: 271, type: !105)
!11103 = !DILocalVariable(name: "ret", scope: !11100, file: !2086, line: 276, type: !3189)
!11104 = !DILocation(line: 0, scope: !11100)
!11105 = !DILocation(line: 277, column: 11, scope: !11100)
!11106 = !DILocation(line: 278, column: 13, scope: !11107)
!11107 = distinct !DILexicalBlock(scope: !11100, file: !2086, line: 278, column: 9)
!11108 = !DILocation(line: 278, column: 9, scope: !11100)
!11109 = !DILocation(line: 279, column: 9, scope: !11110)
!11110 = distinct !DILexicalBlock(scope: !11111, file: !2086, line: 279, column: 9)
!11111 = distinct !DILexicalBlock(scope: !11112, file: !2086, line: 279, column: 9)
!11112 = distinct !DILexicalBlock(scope: !11113, file: !2086, line: 279, column: 9)
!11113 = distinct !DILexicalBlock(scope: !11107, file: !2086, line: 278, column: 35)
!11114 = !DILocation(line: 282, column: 1, scope: !11100)
!11115 = !DILocation(line: 96, column: 5, scope: !2158)
!11116 = !DILocation(line: 96, column: 23, scope: !2158)
!11117 = !DILocation(line: 98, column: 9, scope: !11118)
!11118 = distinct !DILexicalBlock(scope: !2158, file: !2159, line: 98, column: 9)
!11119 = !DILocation(line: 98, column: 9, scope: !2158)
!11120 = !DILocation(line: 101, column: 10, scope: !2158)
!11121 = !DILocation(line: 103, column: 12, scope: !2158)
!11122 = !DILocation(line: 103, column: 31, scope: !2158)
!11123 = !DILocation(line: 104, column: 5, scope: !2158)
!11124 = !DILocation(line: 106, column: 5, scope: !2158)
!11125 = !DILocation(line: 108, column: 12, scope: !2158)
!11126 = !DILocation(line: 0, scope: !2158)
!11127 = !DILocation(line: 109, column: 12, scope: !2158)
!11128 = !DILocation(line: 110, column: 15, scope: !11129)
!11129 = distinct !DILexicalBlock(scope: !2158, file: !2159, line: 110, column: 9)
!11130 = !DILocation(line: 110, column: 24, scope: !11129)
!11131 = !DILocation(line: 111, column: 9, scope: !11132)
!11132 = distinct !DILexicalBlock(scope: !11129, file: !2159, line: 110, column: 43)
!11133 = !DILocation(line: 113, column: 24, scope: !11134)
!11134 = distinct !DILexicalBlock(scope: !2158, file: !2159, line: 113, column: 9)
!11135 = !DILocation(line: 113, column: 15, scope: !11134)
!11136 = !DILocation(line: 114, column: 9, scope: !11137)
!11137 = distinct !DILexicalBlock(scope: !11134, file: !2159, line: 113, column: 43)
!11138 = !DILocation(line: 115, column: 5, scope: !11137)
!11139 = !DILocation(line: 118, column: 9, scope: !2158)
!11140 = !DILocation(line: 119, column: 9, scope: !11141)
!11141 = distinct !DILexicalBlock(scope: !11142, file: !2159, line: 118, column: 23)
!11142 = distinct !DILexicalBlock(scope: !2158, file: !2159, line: 118, column: 9)
!11143 = !DILocation(line: 122, column: 9, scope: !11141)
!11144 = !DILocation(line: 128, column: 9, scope: !11141)
!11145 = !DILocation(line: 131, column: 9, scope: !11141)
!11146 = !DILocation(line: 134, column: 9, scope: !11141)
!11147 = !DILocation(line: 137, column: 9, scope: !11141)
!11148 = !DILocation(line: 140, column: 9, scope: !11141)
!11149 = !DILocation(line: 142, column: 9, scope: !11141)
!11150 = !DILocation(line: 143, column: 9, scope: !11141)
!11151 = !DILocation(line: 144, column: 9, scope: !11141)
!11152 = !DILocation(line: 147, column: 9, scope: !11141)
!11153 = !DILocation(line: 149, column: 9, scope: !11141)
!11154 = !DILocation(line: 150, column: 5, scope: !11141)
!11155 = !DILocation(line: 153, column: 9, scope: !2158)
!11156 = !DILocation(line: 155, column: 9, scope: !11157)
!11157 = distinct !DILexicalBlock(scope: !11158, file: !2159, line: 153, column: 23)
!11158 = distinct !DILexicalBlock(scope: !2158, file: !2159, line: 153, column: 9)
!11159 = !DILocation(line: 160, column: 9, scope: !11157)
!11160 = !DILocation(line: 162, column: 9, scope: !11157)
!11161 = !DILocation(line: 164, column: 9, scope: !11157)
!11162 = !DILocation(line: 166, column: 9, scope: !11157)
!11163 = !DILocation(line: 168, column: 9, scope: !11157)
!11164 = !DILocation(line: 170, column: 9, scope: !11157)
!11165 = !DILocation(line: 172, column: 9, scope: !11157)
!11166 = !DILocation(line: 174, column: 9, scope: !11157)
!11167 = !DILocation(line: 176, column: 9, scope: !11157)
!11168 = !DILocation(line: 179, column: 9, scope: !11157)
!11169 = !DILocation(line: 181, column: 9, scope: !11157)
!11170 = !DILocation(line: 183, column: 9, scope: !11157)
!11171 = !DILocation(line: 185, column: 9, scope: !11157)
!11172 = !DILocation(line: 186, column: 9, scope: !11157)
!11173 = !DILocation(line: 188, column: 9, scope: !11157)
!11174 = !DILocation(line: 189, column: 5, scope: !11157)
!11175 = !DILocation(line: 192, column: 5, scope: !2158)
!11176 = !DILocation(line: 195, column: 5, scope: !2158)
!11177 = !DILocation(line: 197, column: 5, scope: !2158)
!11178 = !DILocation(line: 199, column: 5, scope: !2158)
!11179 = !DILocation(line: 200, column: 1, scope: !2158)
!11180 = distinct !DISubprogram(name: "pmu_init_power_mode", scope: !2159, file: !2159, line: 650, type: !11181, scopeLine: 651, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !11185)
!11181 = !DISubroutineType(types: !11182)
!11182 = !{null, !11183}
!11183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11184, size: 32)
!11184 = !DICompositeType(tag: DW_TAG_array_type, baseType: !129, size: 64, elements: !809)
!11185 = !{!11186, !11187}
!11186 = !DILocalVariable(name: "power_mode_setting", arg: 1, scope: !11180, file: !2159, line: 650, type: !11183)
!11187 = !DILocalVariable(name: "i", scope: !11180, file: !2159, line: 652, type: !15)
!11188 = !DILocation(line: 0, scope: !11180)
!11189 = !DILocation(line: 655, column: 5, scope: !11190)
!11190 = distinct !DILexicalBlock(scope: !11180, file: !2159, line: 655, column: 5)
!11191 = !DILocation(line: 656, column: 70, scope: !11192)
!11192 = distinct !DILexicalBlock(scope: !11193, file: !2159, line: 655, column: 29)
!11193 = distinct !DILexicalBlock(scope: !11190, file: !2159, line: 655, column: 5)
!11194 = !DILocation(line: 656, column: 91, scope: !11192)
!11195 = !DILocation(line: 656, column: 76, scope: !11192)
!11196 = !DILocation(line: 656, column: 9, scope: !11192)
!11197 = !DILocation(line: 657, column: 91, scope: !11192)
!11198 = !DILocation(line: 657, column: 76, scope: !11192)
!11199 = !DILocation(line: 657, column: 9, scope: !11192)
!11200 = !DILocation(line: 658, column: 91, scope: !11192)
!11201 = !DILocation(line: 658, column: 76, scope: !11192)
!11202 = !DILocation(line: 658, column: 9, scope: !11192)
!11203 = !DILocation(line: 659, column: 91, scope: !11192)
!11204 = !DILocation(line: 659, column: 76, scope: !11192)
!11205 = !DILocation(line: 659, column: 9, scope: !11192)
!11206 = !DILocation(line: 660, column: 91, scope: !11192)
!11207 = !DILocation(line: 660, column: 76, scope: !11192)
!11208 = !DILocation(line: 660, column: 9, scope: !11192)
!11209 = !DILocation(line: 661, column: 91, scope: !11192)
!11210 = !DILocation(line: 661, column: 76, scope: !11192)
!11211 = !DILocation(line: 661, column: 9, scope: !11192)
!11212 = !DILocation(line: 662, column: 91, scope: !11192)
!11213 = !DILocation(line: 662, column: 76, scope: !11192)
!11214 = !DILocation(line: 662, column: 9, scope: !11192)
!11215 = !DILocation(line: 663, column: 91, scope: !11192)
!11216 = !DILocation(line: 663, column: 76, scope: !11192)
!11217 = !DILocation(line: 663, column: 9, scope: !11192)
!11218 = !DILocation(line: 664, column: 91, scope: !11192)
!11219 = !DILocation(line: 664, column: 76, scope: !11192)
!11220 = !DILocation(line: 664, column: 9, scope: !11192)
!11221 = !DILocation(line: 665, column: 91, scope: !11192)
!11222 = !DILocation(line: 665, column: 76, scope: !11192)
!11223 = !DILocation(line: 665, column: 9, scope: !11192)
!11224 = !DILocation(line: 655, column: 19, scope: !11193)
!11225 = distinct !{!11225, !11189, !11226}
!11226 = !DILocation(line: 666, column: 5, scope: !11190)
!11227 = !DILocation(line: 667, column: 5, scope: !11180)
!11228 = !DILocation(line: 668, column: 5, scope: !11180)
!11229 = !DILocation(line: 671, column: 5, scope: !11230)
!11230 = distinct !DILexicalBlock(scope: !11180, file: !2159, line: 671, column: 5)
!11231 = !DILocation(line: 672, column: 74, scope: !11232)
!11232 = distinct !DILexicalBlock(scope: !11233, file: !2159, line: 671, column: 29)
!11233 = distinct !DILexicalBlock(scope: !11230, file: !2159, line: 671, column: 5)
!11234 = !DILocation(line: 672, column: 100, scope: !11232)
!11235 = !DILocation(line: 672, column: 80, scope: !11232)
!11236 = !DILocation(line: 672, column: 155, scope: !11232)
!11237 = !DILocation(line: 672, column: 131, scope: !11232)
!11238 = !DILocation(line: 672, column: 126, scope: !11232)
!11239 = !DILocation(line: 672, column: 9, scope: !11232)
!11240 = !DILocation(line: 673, column: 100, scope: !11232)
!11241 = !DILocation(line: 673, column: 80, scope: !11232)
!11242 = !DILocation(line: 673, column: 131, scope: !11232)
!11243 = !DILocation(line: 673, column: 126, scope: !11232)
!11244 = !DILocation(line: 673, column: 9, scope: !11232)
!11245 = !DILocation(line: 674, column: 100, scope: !11232)
!11246 = !DILocation(line: 674, column: 80, scope: !11232)
!11247 = !DILocation(line: 674, column: 131, scope: !11232)
!11248 = !DILocation(line: 674, column: 126, scope: !11232)
!11249 = !DILocation(line: 674, column: 9, scope: !11232)
!11250 = !DILocation(line: 675, column: 100, scope: !11232)
!11251 = !DILocation(line: 675, column: 80, scope: !11232)
!11252 = !DILocation(line: 675, column: 131, scope: !11232)
!11253 = !DILocation(line: 675, column: 126, scope: !11232)
!11254 = !DILocation(line: 675, column: 9, scope: !11232)
!11255 = !DILocation(line: 676, column: 100, scope: !11232)
!11256 = !DILocation(line: 676, column: 80, scope: !11232)
!11257 = !DILocation(line: 676, column: 131, scope: !11232)
!11258 = !DILocation(line: 676, column: 126, scope: !11232)
!11259 = !DILocation(line: 676, column: 9, scope: !11232)
!11260 = !DILocation(line: 677, column: 100, scope: !11232)
!11261 = !DILocation(line: 677, column: 80, scope: !11232)
!11262 = !DILocation(line: 677, column: 131, scope: !11232)
!11263 = !DILocation(line: 677, column: 126, scope: !11232)
!11264 = !DILocation(line: 677, column: 9, scope: !11232)
!11265 = !DILocation(line: 678, column: 100, scope: !11232)
!11266 = !DILocation(line: 678, column: 80, scope: !11232)
!11267 = !DILocation(line: 678, column: 131, scope: !11232)
!11268 = !DILocation(line: 678, column: 126, scope: !11232)
!11269 = !DILocation(line: 678, column: 9, scope: !11232)
!11270 = distinct !{!11270, !11229, !11271}
!11271 = !DILocation(line: 679, column: 5, scope: !11230)
!11272 = !DILocation(line: 680, column: 5, scope: !11180)
!11273 = !DILocation(line: 681, column: 5, scope: !11180)
!11274 = !DILocation(line: 682, column: 5, scope: !11180)
!11275 = !DILocation(line: 683, column: 5, scope: !11180)
!11276 = !DILocation(line: 686, column: 48, scope: !11180)
!11277 = !DILocation(line: 686, column: 35, scope: !11180)
!11278 = !DILocation(line: 686, column: 5, scope: !11180)
!11279 = !DILocation(line: 687, column: 48, scope: !11180)
!11280 = !DILocation(line: 687, column: 35, scope: !11180)
!11281 = !DILocation(line: 687, column: 5, scope: !11180)
!11282 = !DILocation(line: 688, column: 48, scope: !11180)
!11283 = !DILocation(line: 688, column: 35, scope: !11180)
!11284 = !DILocation(line: 688, column: 5, scope: !11180)
!11285 = !DILocation(line: 689, column: 48, scope: !11180)
!11286 = !DILocation(line: 689, column: 35, scope: !11180)
!11287 = !DILocation(line: 689, column: 5, scope: !11180)
!11288 = !DILocation(line: 690, column: 48, scope: !11180)
!11289 = !DILocation(line: 690, column: 35, scope: !11180)
!11290 = !DILocation(line: 690, column: 5, scope: !11180)
!11291 = !DILocation(line: 691, column: 48, scope: !11180)
!11292 = !DILocation(line: 691, column: 35, scope: !11180)
!11293 = !DILocation(line: 691, column: 5, scope: !11180)
!11294 = !DILocation(line: 692, column: 48, scope: !11180)
!11295 = !DILocation(line: 692, column: 35, scope: !11180)
!11296 = !DILocation(line: 692, column: 5, scope: !11180)
!11297 = !DILocation(line: 693, column: 5, scope: !11180)
!11298 = !DILocation(line: 694, column: 5, scope: !11180)
!11299 = !DILocation(line: 695, column: 5, scope: !11180)
!11300 = !DILocation(line: 696, column: 5, scope: !11180)
!11301 = !DILocation(line: 697, column: 5, scope: !11180)
!11302 = !DILocation(line: 699, column: 5, scope: !11180)
!11303 = !DILocation(line: 700, column: 5, scope: !11180)
!11304 = !DILocation(line: 703, column: 5, scope: !11180)
!11305 = !DILocation(line: 705, column: 5, scope: !11180)
!11306 = !DILocation(line: 709, column: 5, scope: !11180)
!11307 = !DILocation(line: 710, column: 5, scope: !11180)
!11308 = !DILocation(line: 717, column: 5, scope: !11180)
!11309 = !DILocation(line: 718, column: 5, scope: !11180)
!11310 = !DILocation(line: 720, column: 5, scope: !11180)
!11311 = !DILocation(line: 721, column: 5, scope: !11180)
!11312 = !DILocation(line: 722, column: 1, scope: !11180)
!11313 = distinct !DISubprogram(name: "pmu_eint_init", scope: !2159, file: !2159, line: 278, type: !318, scopeLine: 279, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !11314)
!11314 = !{!11315}
!11315 = !DILocalVariable(name: "config", scope: !11313, file: !2159, line: 280, type: !11316)
!11316 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_eint_config_t", file: !2177, line: 225, baseType: !11317)
!11317 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2177, line: 222, size: 64, elements: !11318)
!11318 = !{!11319, !11321}
!11319 = !DIDerivedType(tag: DW_TAG_member, name: "trigger_mode", scope: !11317, file: !2177, line: 223, baseType: !11320, size: 32)
!11320 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_eint_trigger_mode_t", file: !2177, line: 200, baseType: !2176)
!11321 = !DIDerivedType(tag: DW_TAG_member, name: "debounce_time", scope: !11317, file: !2177, line: 224, baseType: !105, size: 32, offset: 32)
!11322 = !DILocation(line: 280, column: 5, scope: !11313)
!11323 = !DILocation(line: 280, column: 23, scope: !11313)
!11324 = !DILocation(line: 281, column: 12, scope: !11313)
!11325 = !DILocation(line: 281, column: 25, scope: !11313)
!11326 = !DILocation(line: 282, column: 12, scope: !11313)
!11327 = !DILocation(line: 282, column: 26, scope: !11313)
!11328 = !DILocation(line: 284, column: 5, scope: !11313)
!11329 = !DILocation(line: 285, column: 5, scope: !11313)
!11330 = !DILocation(line: 287, column: 5, scope: !11313)
!11331 = !DILocation(line: 288, column: 1, scope: !11313)
!11332 = !DILocation(line: 0, scope: !2322)
!11333 = !DILocation(line: 297, column: 5, scope: !2322)
!11334 = !DILocation(line: 298, column: 12, scope: !2322)
!11335 = !DILocation(line: 0, scope: !11336)
!11336 = distinct !DILexicalBlock(scope: !2322, file: !2159, line: 300, column: 5)
!11337 = !DILocation(line: 300, column: 5, scope: !11336)
!11338 = !DILocation(line: 0, scope: !11339)
!11339 = distinct !DILexicalBlock(scope: !2322, file: !2159, line: 305, column: 5)
!11340 = !DILocation(line: 306, column: 26, scope: !11341)
!11341 = distinct !DILexicalBlock(scope: !11342, file: !2159, line: 305, column: 41)
!11342 = distinct !DILexicalBlock(scope: !11339, file: !2159, line: 305, column: 5)
!11343 = !DILocation(line: 305, column: 5, scope: !11339)
!11344 = !DILocation(line: 301, column: 49, scope: !11345)
!11345 = distinct !DILexicalBlock(scope: !11346, file: !2159, line: 300, column: 41)
!11346 = distinct !DILexicalBlock(scope: !11336, file: !2159, line: 300, column: 5)
!11347 = !DILocation(line: 301, column: 26, scope: !11345)
!11348 = !DILocation(line: 301, column: 17, scope: !11345)
!11349 = !DILocation(line: 301, column: 9, scope: !11345)
!11350 = !DILocation(line: 301, column: 24, scope: !11345)
!11351 = !DILocation(line: 300, column: 37, scope: !11346)
!11352 = !DILocation(line: 300, column: 27, scope: !11346)
!11353 = distinct !{!11353, !11337, !11354}
!11354 = !DILocation(line: 302, column: 5, scope: !11336)
!11355 = !DILocation(line: 0, scope: !11356)
!11356 = distinct !DILexicalBlock(scope: !2322, file: !2159, line: 313, column: 5)
!11357 = !DILocation(line: 314, column: 26, scope: !11358)
!11358 = distinct !DILexicalBlock(scope: !11359, file: !2159, line: 313, column: 41)
!11359 = distinct !DILexicalBlock(scope: !11356, file: !2159, line: 313, column: 5)
!11360 = !DILocation(line: 313, column: 5, scope: !11356)
!11361 = !DILocation(line: 306, column: 47, scope: !11341)
!11362 = !DILocation(line: 306, column: 37, scope: !11341)
!11363 = !DILocation(line: 306, column: 53, scope: !11341)
!11364 = !DILocation(line: 307, column: 28, scope: !11365)
!11365 = distinct !DILexicalBlock(scope: !11341, file: !2159, line: 307, column: 13)
!11366 = !DILocation(line: 307, column: 34, scope: !11365)
!11367 = !DILocation(line: 307, column: 64, scope: !11365)
!11368 = !DILocation(line: 307, column: 13, scope: !11341)
!11369 = !DILocation(line: 308, column: 39, scope: !11370)
!11370 = distinct !DILexicalBlock(scope: !11365, file: !2159, line: 307, column: 90)
!11371 = !DILocation(line: 308, column: 52, scope: !11370)
!11372 = !DILocation(line: 308, column: 93, scope: !11370)
!11373 = !DILocation(line: 308, column: 13, scope: !11370)
!11374 = !DILocation(line: 305, column: 37, scope: !11342)
!11375 = !DILocation(line: 309, column: 9, scope: !11370)
!11376 = !DILocation(line: 305, column: 27, scope: !11342)
!11377 = distinct !{!11377, !11343, !11378}
!11378 = !DILocation(line: 310, column: 5, scope: !11339)
!11379 = !DILocation(line: 0, scope: !11380)
!11380 = distinct !DILexicalBlock(scope: !2322, file: !2159, line: 321, column: 5)
!11381 = !DILocation(line: 322, column: 26, scope: !11382)
!11382 = distinct !DILexicalBlock(scope: !11383, file: !2159, line: 321, column: 41)
!11383 = distinct !DILexicalBlock(scope: !11380, file: !2159, line: 321, column: 5)
!11384 = !DILocation(line: 321, column: 5, scope: !11380)
!11385 = !DILocation(line: 314, column: 47, scope: !11358)
!11386 = !DILocation(line: 314, column: 37, scope: !11358)
!11387 = !DILocation(line: 314, column: 53, scope: !11358)
!11388 = !DILocation(line: 315, column: 28, scope: !11389)
!11389 = distinct !DILexicalBlock(scope: !11358, file: !2159, line: 315, column: 13)
!11390 = !DILocation(line: 315, column: 34, scope: !11389)
!11391 = !DILocation(line: 315, column: 63, scope: !11389)
!11392 = !DILocation(line: 315, column: 68, scope: !11389)
!11393 = !DILocation(line: 315, column: 13, scope: !11358)
!11394 = !DILocation(line: 316, column: 43, scope: !11395)
!11395 = distinct !DILexicalBlock(scope: !11389, file: !2159, line: 315, column: 94)
!11396 = !DILocation(line: 316, column: 56, scope: !11395)
!11397 = !DILocation(line: 316, column: 101, scope: !11395)
!11398 = !DILocation(line: 316, column: 13, scope: !11395)
!11399 = !DILocation(line: 313, column: 37, scope: !11359)
!11400 = !DILocation(line: 317, column: 9, scope: !11395)
!11401 = !DILocation(line: 313, column: 27, scope: !11359)
!11402 = distinct !{!11402, !11360, !11403}
!11403 = !DILocation(line: 318, column: 5, scope: !11356)
!11404 = !DILocation(line: 0, scope: !11405)
!11405 = distinct !DILexicalBlock(scope: !2322, file: !2159, line: 329, column: 5)
!11406 = !DILocation(line: 330, column: 26, scope: !11407)
!11407 = distinct !DILexicalBlock(scope: !11408, file: !2159, line: 329, column: 41)
!11408 = distinct !DILexicalBlock(scope: !11405, file: !2159, line: 329, column: 5)
!11409 = !DILocation(line: 329, column: 5, scope: !11405)
!11410 = !DILocation(line: 322, column: 47, scope: !11382)
!11411 = !DILocation(line: 322, column: 37, scope: !11382)
!11412 = !DILocation(line: 322, column: 53, scope: !11382)
!11413 = !DILocation(line: 323, column: 28, scope: !11414)
!11414 = distinct !DILexicalBlock(scope: !11382, file: !2159, line: 323, column: 13)
!11415 = !DILocation(line: 323, column: 34, scope: !11414)
!11416 = !DILocation(line: 323, column: 63, scope: !11414)
!11417 = !DILocation(line: 323, column: 68, scope: !11414)
!11418 = !DILocation(line: 323, column: 13, scope: !11382)
!11419 = !DILocation(line: 324, column: 43, scope: !11420)
!11420 = distinct !DILexicalBlock(scope: !11414, file: !2159, line: 323, column: 94)
!11421 = !DILocation(line: 324, column: 56, scope: !11420)
!11422 = !DILocation(line: 324, column: 101, scope: !11420)
!11423 = !DILocation(line: 324, column: 13, scope: !11420)
!11424 = !DILocation(line: 321, column: 37, scope: !11383)
!11425 = !DILocation(line: 325, column: 9, scope: !11420)
!11426 = !DILocation(line: 321, column: 27, scope: !11383)
!11427 = distinct !{!11427, !11384, !11428}
!11428 = !DILocation(line: 326, column: 5, scope: !11380)
!11429 = !DILocation(line: 0, scope: !11430)
!11430 = distinct !DILexicalBlock(scope: !2322, file: !2159, line: 337, column: 5)
!11431 = !DILocation(line: 338, column: 26, scope: !11432)
!11432 = distinct !DILexicalBlock(scope: !11433, file: !2159, line: 337, column: 41)
!11433 = distinct !DILexicalBlock(scope: !11430, file: !2159, line: 337, column: 5)
!11434 = !DILocation(line: 337, column: 5, scope: !11430)
!11435 = !DILocation(line: 330, column: 47, scope: !11407)
!11436 = !DILocation(line: 330, column: 37, scope: !11407)
!11437 = !DILocation(line: 330, column: 53, scope: !11407)
!11438 = !DILocation(line: 331, column: 28, scope: !11439)
!11439 = distinct !DILexicalBlock(scope: !11407, file: !2159, line: 331, column: 13)
!11440 = !DILocation(line: 331, column: 34, scope: !11439)
!11441 = !DILocation(line: 331, column: 63, scope: !11439)
!11442 = !DILocation(line: 331, column: 69, scope: !11439)
!11443 = !DILocation(line: 331, column: 13, scope: !11407)
!11444 = !DILocation(line: 332, column: 44, scope: !11445)
!11445 = distinct !DILexicalBlock(scope: !11439, file: !2159, line: 331, column: 95)
!11446 = !DILocation(line: 332, column: 57, scope: !11445)
!11447 = !DILocation(line: 332, column: 103, scope: !11445)
!11448 = !DILocation(line: 332, column: 13, scope: !11445)
!11449 = !DILocation(line: 329, column: 37, scope: !11408)
!11450 = !DILocation(line: 333, column: 9, scope: !11445)
!11451 = !DILocation(line: 329, column: 27, scope: !11408)
!11452 = distinct !{!11452, !11409, !11453}
!11453 = !DILocation(line: 334, column: 5, scope: !11405)
!11454 = !DILocation(line: 0, scope: !11455)
!11455 = distinct !DILexicalBlock(scope: !2322, file: !2159, line: 345, column: 5)
!11456 = !DILocation(line: 346, column: 26, scope: !11457)
!11457 = distinct !DILexicalBlock(scope: !11458, file: !2159, line: 345, column: 41)
!11458 = distinct !DILexicalBlock(scope: !11455, file: !2159, line: 345, column: 5)
!11459 = !DILocation(line: 345, column: 5, scope: !11455)
!11460 = !DILocation(line: 338, column: 47, scope: !11432)
!11461 = !DILocation(line: 338, column: 37, scope: !11432)
!11462 = !DILocation(line: 338, column: 53, scope: !11432)
!11463 = !DILocation(line: 339, column: 28, scope: !11464)
!11464 = distinct !DILexicalBlock(scope: !11432, file: !2159, line: 339, column: 13)
!11465 = !DILocation(line: 339, column: 34, scope: !11464)
!11466 = !DILocation(line: 339, column: 63, scope: !11464)
!11467 = !DILocation(line: 339, column: 69, scope: !11464)
!11468 = !DILocation(line: 339, column: 13, scope: !11432)
!11469 = !DILocation(line: 340, column: 44, scope: !11470)
!11470 = distinct !DILexicalBlock(scope: !11464, file: !2159, line: 339, column: 95)
!11471 = !DILocation(line: 340, column: 57, scope: !11470)
!11472 = !DILocation(line: 340, column: 103, scope: !11470)
!11473 = !DILocation(line: 340, column: 13, scope: !11470)
!11474 = !DILocation(line: 337, column: 37, scope: !11433)
!11475 = !DILocation(line: 341, column: 9, scope: !11470)
!11476 = !DILocation(line: 337, column: 27, scope: !11433)
!11477 = distinct !{!11477, !11434, !11478}
!11478 = !DILocation(line: 342, column: 5, scope: !11430)
!11479 = !DILocation(line: 0, scope: !11480)
!11480 = distinct !DILexicalBlock(scope: !2322, file: !2159, line: 353, column: 5)
!11481 = !DILocation(line: 354, column: 26, scope: !11482)
!11482 = distinct !DILexicalBlock(scope: !11483, file: !2159, line: 353, column: 41)
!11483 = distinct !DILexicalBlock(scope: !11480, file: !2159, line: 353, column: 5)
!11484 = !DILocation(line: 353, column: 5, scope: !11480)
!11485 = !DILocation(line: 347, column: 28, scope: !11486)
!11486 = distinct !DILexicalBlock(scope: !11457, file: !2159, line: 347, column: 13)
!11487 = !DILocation(line: 347, column: 34, scope: !11486)
!11488 = !DILocation(line: 347, column: 63, scope: !11486)
!11489 = !DILocation(line: 347, column: 69, scope: !11486)
!11490 = !DILocation(line: 347, column: 13, scope: !11457)
!11491 = !DILocation(line: 348, column: 44, scope: !11492)
!11492 = distinct !DILexicalBlock(scope: !11486, file: !2159, line: 347, column: 95)
!11493 = !DILocation(line: 348, column: 103, scope: !11492)
!11494 = !DILocation(line: 348, column: 13, scope: !11492)
!11495 = !DILocation(line: 345, column: 37, scope: !11458)
!11496 = !DILocation(line: 349, column: 9, scope: !11492)
!11497 = !DILocation(line: 345, column: 27, scope: !11458)
!11498 = distinct !{!11498, !11459, !11499}
!11499 = !DILocation(line: 350, column: 5, scope: !11455)
!11500 = !DILocation(line: 0, scope: !11501)
!11501 = distinct !DILexicalBlock(scope: !2322, file: !2159, line: 360, column: 5)
!11502 = !DILocation(line: 360, column: 5, scope: !11501)
!11503 = !DILocation(line: 355, column: 28, scope: !11504)
!11504 = distinct !DILexicalBlock(scope: !11482, file: !2159, line: 355, column: 13)
!11505 = !DILocation(line: 355, column: 34, scope: !11504)
!11506 = !DILocation(line: 355, column: 63, scope: !11504)
!11507 = !DILocation(line: 355, column: 69, scope: !11504)
!11508 = !DILocation(line: 355, column: 13, scope: !11482)
!11509 = !DILocation(line: 356, column: 44, scope: !11510)
!11510 = distinct !DILexicalBlock(scope: !11504, file: !2159, line: 355, column: 95)
!11511 = !DILocation(line: 356, column: 103, scope: !11510)
!11512 = !DILocation(line: 356, column: 13, scope: !11510)
!11513 = !DILocation(line: 353, column: 37, scope: !11483)
!11514 = !DILocation(line: 357, column: 9, scope: !11510)
!11515 = !DILocation(line: 353, column: 27, scope: !11483)
!11516 = distinct !{!11516, !11484, !11517}
!11517 = !DILocation(line: 358, column: 5, scope: !11480)
!11518 = !DILocation(line: 0, scope: !11519)
!11519 = distinct !DILexicalBlock(scope: !2322, file: !2159, line: 363, column: 5)
!11520 = !DILocation(line: 363, column: 5, scope: !11519)
!11521 = !DILocation(line: 361, column: 32, scope: !11522)
!11522 = distinct !DILexicalBlock(scope: !11523, file: !2159, line: 360, column: 41)
!11523 = distinct !DILexicalBlock(scope: !11501, file: !2159, line: 360, column: 5)
!11524 = !DILocation(line: 361, column: 9, scope: !11522)
!11525 = !DILocation(line: 360, column: 37, scope: !11523)
!11526 = !DILocation(line: 360, column: 27, scope: !11523)
!11527 = distinct !{!11527, !11502, !11528}
!11528 = !DILocation(line: 362, column: 5, scope: !11501)
!11529 = !DILocation(line: 364, column: 49, scope: !11530)
!11530 = distinct !DILexicalBlock(scope: !11531, file: !2159, line: 363, column: 41)
!11531 = distinct !DILexicalBlock(scope: !11519, file: !2159, line: 363, column: 5)
!11532 = !DILocation(line: 364, column: 26, scope: !11530)
!11533 = !DILocation(line: 364, column: 17, scope: !11530)
!11534 = !DILocation(line: 364, column: 9, scope: !11530)
!11535 = !DILocation(line: 364, column: 24, scope: !11530)
!11536 = !DILocation(line: 365, column: 28, scope: !11537)
!11537 = distinct !DILexicalBlock(scope: !11530, file: !2159, line: 365, column: 13)
!11538 = !DILocation(line: 365, column: 13, scope: !11530)
!11539 = !DILocation(line: 366, column: 36, scope: !11540)
!11540 = distinct !DILexicalBlock(scope: !11537, file: !2159, line: 365, column: 34)
!11541 = !DILocation(line: 366, column: 13, scope: !11540)
!11542 = !DILocation(line: 363, column: 37, scope: !11531)
!11543 = !DILocation(line: 367, column: 9, scope: !11540)
!11544 = !DILocation(line: 363, column: 27, scope: !11531)
!11545 = distinct !{!11545, !11520, !11546}
!11546 = !DILocation(line: 368, column: 5, scope: !11519)
!11547 = !DILocation(line: 369, column: 5, scope: !2322)
!11548 = !DILocation(line: 370, column: 5, scope: !2322)
!11549 = !DILocation(line: 371, column: 1, scope: !2322)
!11550 = distinct !DISubprogram(name: "pmu_set_register_value_mt6385", scope: !2159, file: !2159, line: 202, type: !3032, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !11551)
!11551 = !{!11552, !11553, !11554, !11555, !11556, !11557, !11558}
!11552 = !DILocalVariable(name: "address", arg: 1, scope: !11550, file: !2159, line: 202, type: !989)
!11553 = !DILocalVariable(name: "mask", arg: 2, scope: !11550, file: !2159, line: 202, type: !989)
!11554 = !DILocalVariable(name: "shift", arg: 3, scope: !11550, file: !2159, line: 202, type: !989)
!11555 = !DILocalVariable(name: "value", arg: 4, scope: !11550, file: !2159, line: 202, type: !989)
!11556 = !DILocalVariable(name: "send_buffer", scope: !11550, file: !2159, line: 204, type: !2670)
!11557 = !DILocalVariable(name: "receive_buffer", scope: !11550, file: !2159, line: 204, type: !2672)
!11558 = !DILocalVariable(name: "mask_pri", scope: !11550, file: !2159, line: 205, type: !15)
!11559 = !DILocation(line: 0, scope: !11550)
!11560 = !DILocation(line: 204, column: 5, scope: !11550)
!11561 = !DILocation(line: 204, column: 19, scope: !11550)
!11562 = !DILocation(line: 204, column: 35, scope: !11550)
!11563 = !DILocation(line: 207, column: 22, scope: !11550)
!11564 = !DILocation(line: 207, column: 5, scope: !11550)
!11565 = !DILocation(line: 207, column: 20, scope: !11550)
!11566 = !DILocation(line: 208, column: 32, scope: !11550)
!11567 = !DILocation(line: 208, column: 22, scope: !11550)
!11568 = !DILocation(line: 208, column: 20, scope: !11550)
!11569 = !DILocation(line: 210, column: 16, scope: !11550)
!11570 = !DILocation(line: 212, column: 5, scope: !11550)
!11571 = !DILocation(line: 214, column: 29, scope: !11550)
!11572 = !DILocation(line: 214, column: 37, scope: !11550)
!11573 = !DILocation(line: 214, column: 34, scope: !11550)
!11574 = !DILocation(line: 214, column: 23, scope: !11550)
!11575 = !DILocation(line: 215, column: 43, scope: !11550)
!11576 = !DILocation(line: 215, column: 49, scope: !11550)
!11577 = !DILocation(line: 215, column: 22, scope: !11550)
!11578 = !DILocation(line: 215, column: 5, scope: !11550)
!11579 = !DILocation(line: 215, column: 20, scope: !11550)
!11580 = !DILocation(line: 217, column: 9, scope: !11581)
!11581 = distinct !DILexicalBlock(scope: !11550, file: !2159, line: 217, column: 9)
!11582 = !DILocation(line: 217, column: 41, scope: !11581)
!11583 = !DILocation(line: 0, scope: !11581)
!11584 = !DILocation(line: 224, column: 1, scope: !11550)
!11585 = distinct !DISubprogram(name: "Wrap_D2D_I2C_Read", scope: !2159, file: !2159, line: 257, type: !11586, scopeLine: 258, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !11588)
!11586 = !DISubroutineType(types: !11587)
!11587 = !{!129, !2634, !2634}
!11588 = !{!11589, !11590, !11591, !11600, !11601}
!11589 = !DILocalVariable(name: "ptr_send", arg: 1, scope: !11585, file: !2159, line: 257, type: !2634)
!11590 = !DILocalVariable(name: "ptr_read", arg: 2, scope: !11585, file: !2159, line: 257, type: !2634)
!11591 = !DILocalVariable(name: "config", scope: !11585, file: !2159, line: 259, type: !11592)
!11592 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmic_i2c_send_to_receive_config_t", file: !2163, line: 100, baseType: !11593)
!11593 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2163, line: 94, size: 160, elements: !11594)
!11594 = !{!11595, !11596, !11597, !11598, !11599}
!11595 = !DIDerivedType(tag: DW_TAG_member, name: "slave_address", scope: !11593, file: !2163, line: 95, baseType: !127, size: 8)
!11596 = !DIDerivedType(tag: DW_TAG_member, name: "send_data", scope: !11593, file: !2163, line: 96, baseType: !5647, size: 32, offset: 32)
!11597 = !DIDerivedType(tag: DW_TAG_member, name: "send_length", scope: !11593, file: !2163, line: 97, baseType: !105, size: 32, offset: 64)
!11598 = !DIDerivedType(tag: DW_TAG_member, name: "receive_buffer", scope: !11593, file: !2163, line: 98, baseType: !818, size: 32, offset: 96)
!11599 = !DIDerivedType(tag: DW_TAG_member, name: "receive_length", scope: !11593, file: !2163, line: 99, baseType: !105, size: 32, offset: 128)
!11600 = !DILocalVariable(name: "retry_cnt", scope: !11585, file: !2159, line: 260, type: !129)
!11601 = !DILocalVariable(name: "result_read", scope: !11585, file: !2159, line: 260, type: !129)
!11602 = !DILocation(line: 0, scope: !11585)
!11603 = !DILocation(line: 259, column: 5, scope: !11585)
!11604 = !DILocation(line: 259, column: 39, scope: !11585)
!11605 = !DILocation(line: 262, column: 19, scope: !11585)
!11606 = !DILocation(line: 262, column: 31, scope: !11585)
!11607 = !DILocation(line: 262, column: 17, scope: !11585)
!11608 = !DILocation(line: 263, column: 31, scope: !11585)
!11609 = !DILocation(line: 264, column: 12, scope: !11585)
!11610 = !DILocation(line: 264, column: 31, scope: !11585)
!11611 = !DILocation(line: 265, column: 12, scope: !11585)
!11612 = !DILocation(line: 265, column: 31, scope: !11585)
!11613 = !DILocation(line: 266, column: 12, scope: !11585)
!11614 = !DILocation(line: 266, column: 31, scope: !11585)
!11615 = !DILocation(line: 267, column: 12, scope: !11585)
!11616 = !DILocation(line: 267, column: 31, scope: !11585)
!11617 = !DILocation(line: 269, column: 5, scope: !11585)
!11618 = !DILocation(line: 270, column: 23, scope: !11619)
!11619 = distinct !DILexicalBlock(scope: !11585, file: !2159, line: 269, column: 8)
!11620 = !DILocation(line: 271, column: 18, scope: !11619)
!11621 = !DILocation(line: 272, column: 15, scope: !11585)
!11622 = !DILocation(line: 272, column: 27, scope: !11585)
!11623 = !DILocation(line: 272, column: 33, scope: !11585)
!11624 = !DILocation(line: 272, column: 5, scope: !11619)
!11625 = distinct !{!11625, !11617, !11626}
!11626 = !DILocation(line: 272, column: 53, scope: !11585)
!11627 = !DILocation(line: 276, column: 1, scope: !11585)
!11628 = !DILocation(line: 275, column: 5, scope: !11585)
!11629 = distinct !DISubprogram(name: "Wrap_D2D_I2C_Write", scope: !2159, file: !2159, line: 241, type: !11630, scopeLine: 242, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !11632)
!11630 = !DISubroutineType(types: !11631)
!11631 = !{!129, !2634}
!11632 = !{!11633, !11634, !11635}
!11633 = !DILocalVariable(name: "ptr_send", arg: 1, scope: !11629, file: !2159, line: 241, type: !2634)
!11634 = !DILocalVariable(name: "retry_cnt", scope: !11629, file: !2159, line: 243, type: !129)
!11635 = !DILocalVariable(name: "result_read", scope: !11629, file: !2159, line: 243, type: !129)
!11636 = !DILocation(line: 0, scope: !11629)
!11637 = !DILocation(line: 245, column: 19, scope: !11629)
!11638 = !DILocation(line: 245, column: 31, scope: !11629)
!11639 = !DILocation(line: 245, column: 17, scope: !11629)
!11640 = !DILocation(line: 247, column: 5, scope: !11629)
!11641 = !DILocation(line: 248, column: 23, scope: !11642)
!11642 = distinct !DILexicalBlock(scope: !11629, file: !2159, line: 247, column: 8)
!11643 = !DILocation(line: 249, column: 18, scope: !11642)
!11644 = !DILocation(line: 250, column: 15, scope: !11629)
!11645 = !DILocation(line: 250, column: 27, scope: !11629)
!11646 = !DILocation(line: 250, column: 33, scope: !11629)
!11647 = !DILocation(line: 250, column: 5, scope: !11642)
!11648 = distinct !{!11648, !11640, !11649}
!11649 = !DILocation(line: 250, column: 53, scope: !11629)
!11650 = !DILocation(line: 253, column: 5, scope: !11629)
!11651 = distinct !DISubprogram(name: "pmu_get_register_value_mt6385", scope: !2159, file: !2159, line: 226, type: !3036, scopeLine: 227, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !11652)
!11652 = !{!11653, !11654, !11655, !11656, !11658, !11659}
!11653 = !DILocalVariable(name: "address", arg: 1, scope: !11651, file: !2159, line: 226, type: !989)
!11654 = !DILocalVariable(name: "mask", arg: 2, scope: !11651, file: !2159, line: 226, type: !989)
!11655 = !DILocalVariable(name: "shift", arg: 3, scope: !11651, file: !2159, line: 226, type: !989)
!11656 = !DILocalVariable(name: "send_buffer", scope: !11651, file: !2159, line: 228, type: !11657)
!11657 = !DICompositeType(tag: DW_TAG_array_type, baseType: !129, size: 16, elements: !484)
!11658 = !DILocalVariable(name: "receive_buffer", scope: !11651, file: !2159, line: 228, type: !2672)
!11659 = !DILocalVariable(name: "mask_pri", scope: !11651, file: !2159, line: 229, type: !15)
!11660 = !DILocation(line: 0, scope: !11651)
!11661 = !DILocation(line: 228, column: 5, scope: !11651)
!11662 = !DILocation(line: 228, column: 19, scope: !11651)
!11663 = !DILocation(line: 228, column: 35, scope: !11651)
!11664 = !DILocation(line: 231, column: 22, scope: !11651)
!11665 = !DILocation(line: 231, column: 5, scope: !11651)
!11666 = !DILocation(line: 231, column: 20, scope: !11651)
!11667 = !DILocation(line: 232, column: 32, scope: !11651)
!11668 = !DILocation(line: 232, column: 22, scope: !11651)
!11669 = !DILocation(line: 232, column: 20, scope: !11651)
!11670 = !DILocation(line: 234, column: 16, scope: !11651)
!11671 = !DILocation(line: 235, column: 5, scope: !11651)
!11672 = !DILocation(line: 236, column: 5, scope: !11651)
!11673 = !DILocation(line: 237, column: 14, scope: !11651)
!11674 = !DILocation(line: 237, column: 35, scope: !11651)
!11675 = !DILocation(line: 237, column: 32, scope: !11651)
!11676 = !DILocation(line: 237, column: 42, scope: !11651)
!11677 = !DILocation(line: 237, column: 41, scope: !11651)
!11678 = !DILocation(line: 237, column: 12, scope: !11651)
!11679 = !DILocation(line: 238, column: 1, scope: !11651)
!11680 = !DILocation(line: 237, column: 5, scope: !11651)
!11681 = distinct !DISubprogram(name: "pmu_register_callback", scope: !2159, file: !2159, line: 373, type: !11682, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !11688)
!11682 = !DISubroutineType(types: !11683)
!11683 = !{!11684, !11685, !11686, !11687, !124}
!11684 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmu_status_t", file: !2220, line: 99, baseType: !2224)
!11685 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmu_int_ch_t", file: !2220, line: 91, baseType: !2230)
!11686 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmu_int_trigger_mode_t", file: !2220, line: 50, baseType: !2265)
!11687 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmu_callback_t", file: !2220, line: 108, baseType: !2338)
!11688 = !{!11689, !11690, !11691, !11692, !11693, !11694}
!11689 = !DILocalVariable(name: "pmu_int_ch", arg: 1, scope: !11681, file: !2159, line: 373, type: !11685)
!11690 = !DILocalVariable(name: "trigger_mode", arg: 2, scope: !11681, file: !2159, line: 373, type: !11686)
!11691 = !DILocalVariable(name: "callback", arg: 3, scope: !11681, file: !2159, line: 373, type: !11687)
!11692 = !DILocalVariable(name: "user_data", arg: 4, scope: !11681, file: !2159, line: 373, type: !124)
!11693 = !DILocalVariable(name: "status", scope: !11681, file: !2159, line: 375, type: !11684)
!11694 = !DILocalVariable(name: "mask", scope: !11681, file: !2159, line: 376, type: !15)
!11695 = !DILocation(line: 0, scope: !11681)
!11696 = !DILocation(line: 378, column: 20, scope: !11697)
!11697 = distinct !DILexicalBlock(scope: !11681, file: !2159, line: 378, column: 9)
!11698 = !DILocation(line: 378, column: 35, scope: !11697)
!11699 = !DILocation(line: 383, column: 12, scope: !11681)
!11700 = !DILocation(line: 385, column: 36, scope: !11681)
!11701 = !DILocation(line: 385, column: 49, scope: !11681)
!11702 = !DILocation(line: 386, column: 36, scope: !11681)
!11703 = !DILocation(line: 386, column: 46, scope: !11681)
!11704 = !DILocation(line: 387, column: 51, scope: !11681)
!11705 = !DILocation(line: 387, column: 36, scope: !11681)
!11706 = !DILocation(line: 387, column: 49, scope: !11681)
!11707 = !DILocation(line: 388, column: 36, scope: !11681)
!11708 = !DILocation(line: 388, column: 48, scope: !11681)
!11709 = !DILocation(line: 390, column: 5, scope: !11681)
!11710 = !DILocation(line: 392, column: 5, scope: !11681)
!11711 = !DILocation(line: 395, column: 5, scope: !11681)
!11712 = !DILocation(line: 396, column: 1, scope: !11681)
!11713 = distinct !DISubprogram(name: "pmu_enable_interrupt", scope: !2159, file: !2159, line: 414, type: !11714, scopeLine: 415, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !11716)
!11714 = !DISubroutineType(types: !11715)
!11715 = !{!11684, !11685, !11686, !129}
!11716 = !{!11717, !11718, !11719, !11720}
!11717 = !DILocalVariable(name: "int_ch", arg: 1, scope: !11713, file: !2159, line: 414, type: !11685)
!11718 = !DILocalVariable(name: "trigger_mode", arg: 2, scope: !11713, file: !2159, line: 414, type: !11686)
!11719 = !DILocalVariable(name: "enable", arg: 3, scope: !11713, file: !2159, line: 414, type: !129)
!11720 = !DILocalVariable(name: "Channel", scope: !11713, file: !2159, line: 416, type: !129)
!11721 = !DILocation(line: 0, scope: !11713)
!11722 = !DILocation(line: 418, column: 9, scope: !11723)
!11723 = distinct !DILexicalBlock(scope: !11713, file: !2159, line: 418, column: 9)
!11724 = !DILocation(line: 418, column: 17, scope: !11723)
!11725 = !DILocation(line: 418, column: 9, scope: !11713)
!11726 = !DILocation(line: 422, column: 5, scope: !11713)
!11727 = !DILocation(line: 424, column: 31, scope: !11728)
!11728 = distinct !DILexicalBlock(scope: !11729, file: !2159, line: 424, column: 17)
!11729 = distinct !DILexicalBlock(scope: !11713, file: !2159, line: 422, column: 22)
!11730 = !DILocation(line: 424, column: 39, scope: !11728)
!11731 = !DILocation(line: 424, column: 17, scope: !11729)
!11732 = !DILocation(line: 425, column: 94, scope: !11733)
!11733 = distinct !DILexicalBlock(scope: !11728, file: !2159, line: 424, column: 48)
!11734 = !DILocation(line: 425, column: 17, scope: !11733)
!11735 = !DILocation(line: 426, column: 13, scope: !11733)
!11736 = !DILocation(line: 427, column: 31, scope: !11737)
!11737 = distinct !DILexicalBlock(scope: !11729, file: !2159, line: 427, column: 17)
!11738 = !DILocation(line: 427, column: 39, scope: !11737)
!11739 = !DILocation(line: 427, column: 17, scope: !11729)
!11740 = !DILocation(line: 428, column: 94, scope: !11741)
!11741 = distinct !DILexicalBlock(scope: !11737, file: !2159, line: 427, column: 48)
!11742 = !DILocation(line: 428, column: 17, scope: !11741)
!11743 = !DILocation(line: 429, column: 13, scope: !11741)
!11744 = !DILocation(line: 433, column: 31, scope: !11745)
!11745 = distinct !DILexicalBlock(scope: !11729, file: !2159, line: 433, column: 17)
!11746 = !DILocation(line: 433, column: 39, scope: !11745)
!11747 = !DILocation(line: 433, column: 17, scope: !11729)
!11748 = !DILocation(line: 434, column: 94, scope: !11749)
!11749 = distinct !DILexicalBlock(scope: !11745, file: !2159, line: 433, column: 48)
!11750 = !DILocation(line: 434, column: 17, scope: !11749)
!11751 = !DILocation(line: 435, column: 13, scope: !11749)
!11752 = !DILocation(line: 436, column: 31, scope: !11753)
!11753 = distinct !DILexicalBlock(scope: !11729, file: !2159, line: 436, column: 17)
!11754 = !DILocation(line: 436, column: 39, scope: !11753)
!11755 = !DILocation(line: 436, column: 17, scope: !11729)
!11756 = !DILocation(line: 437, column: 94, scope: !11757)
!11757 = distinct !DILexicalBlock(scope: !11753, file: !2159, line: 436, column: 48)
!11758 = !DILocation(line: 437, column: 17, scope: !11757)
!11759 = !DILocation(line: 438, column: 13, scope: !11757)
!11760 = !DILocation(line: 442, column: 31, scope: !11761)
!11761 = distinct !DILexicalBlock(scope: !11729, file: !2159, line: 442, column: 17)
!11762 = !DILocation(line: 442, column: 39, scope: !11761)
!11763 = !DILocation(line: 442, column: 17, scope: !11729)
!11764 = !DILocation(line: 443, column: 94, scope: !11765)
!11765 = distinct !DILexicalBlock(scope: !11761, file: !2159, line: 442, column: 48)
!11766 = !DILocation(line: 443, column: 17, scope: !11765)
!11767 = !DILocation(line: 444, column: 13, scope: !11765)
!11768 = !DILocation(line: 445, column: 31, scope: !11769)
!11769 = distinct !DILexicalBlock(scope: !11729, file: !2159, line: 445, column: 17)
!11770 = !DILocation(line: 445, column: 39, scope: !11769)
!11771 = !DILocation(line: 445, column: 17, scope: !11729)
!11772 = !DILocation(line: 446, column: 94, scope: !11773)
!11773 = distinct !DILexicalBlock(scope: !11769, file: !2159, line: 445, column: 48)
!11774 = !DILocation(line: 446, column: 17, scope: !11773)
!11775 = !DILocation(line: 447, column: 13, scope: !11773)
!11776 = !DILocation(line: 451, column: 31, scope: !11777)
!11777 = distinct !DILexicalBlock(scope: !11729, file: !2159, line: 451, column: 17)
!11778 = !DILocation(line: 451, column: 39, scope: !11777)
!11779 = !DILocation(line: 451, column: 17, scope: !11729)
!11780 = !DILocation(line: 452, column: 94, scope: !11781)
!11781 = distinct !DILexicalBlock(scope: !11777, file: !2159, line: 451, column: 48)
!11782 = !DILocation(line: 452, column: 17, scope: !11781)
!11783 = !DILocation(line: 453, column: 13, scope: !11781)
!11784 = !DILocation(line: 454, column: 31, scope: !11785)
!11785 = distinct !DILexicalBlock(scope: !11729, file: !2159, line: 454, column: 17)
!11786 = !DILocation(line: 454, column: 39, scope: !11785)
!11787 = !DILocation(line: 454, column: 17, scope: !11729)
!11788 = !DILocation(line: 455, column: 94, scope: !11789)
!11789 = distinct !DILexicalBlock(scope: !11785, file: !2159, line: 454, column: 48)
!11790 = !DILocation(line: 455, column: 17, scope: !11789)
!11791 = !DILocation(line: 456, column: 13, scope: !11789)
!11792 = !DILocation(line: 460, column: 31, scope: !11793)
!11793 = distinct !DILexicalBlock(scope: !11729, file: !2159, line: 460, column: 17)
!11794 = !DILocation(line: 460, column: 39, scope: !11793)
!11795 = !DILocation(line: 460, column: 17, scope: !11729)
!11796 = !DILocation(line: 461, column: 100, scope: !11797)
!11797 = distinct !DILexicalBlock(scope: !11793, file: !2159, line: 460, column: 48)
!11798 = !DILocation(line: 461, column: 17, scope: !11797)
!11799 = !DILocation(line: 462, column: 13, scope: !11797)
!11800 = !DILocation(line: 463, column: 31, scope: !11801)
!11801 = distinct !DILexicalBlock(scope: !11729, file: !2159, line: 463, column: 17)
!11802 = !DILocation(line: 463, column: 39, scope: !11801)
!11803 = !DILocation(line: 463, column: 17, scope: !11729)
!11804 = !DILocation(line: 464, column: 100, scope: !11805)
!11805 = distinct !DILexicalBlock(scope: !11801, file: !2159, line: 463, column: 48)
!11806 = !DILocation(line: 464, column: 17, scope: !11805)
!11807 = !DILocation(line: 465, column: 13, scope: !11805)
!11808 = !DILocation(line: 469, column: 31, scope: !11809)
!11809 = distinct !DILexicalBlock(scope: !11729, file: !2159, line: 469, column: 17)
!11810 = !DILocation(line: 469, column: 39, scope: !11809)
!11811 = !DILocation(line: 469, column: 17, scope: !11729)
!11812 = !DILocation(line: 470, column: 96, scope: !11813)
!11813 = distinct !DILexicalBlock(scope: !11809, file: !2159, line: 469, column: 48)
!11814 = !DILocation(line: 470, column: 17, scope: !11813)
!11815 = !DILocation(line: 471, column: 13, scope: !11813)
!11816 = !DILocation(line: 472, column: 31, scope: !11817)
!11817 = distinct !DILexicalBlock(scope: !11729, file: !2159, line: 472, column: 17)
!11818 = !DILocation(line: 472, column: 39, scope: !11817)
!11819 = !DILocation(line: 472, column: 17, scope: !11729)
!11820 = !DILocation(line: 473, column: 96, scope: !11821)
!11821 = distinct !DILexicalBlock(scope: !11817, file: !2159, line: 472, column: 48)
!11822 = !DILocation(line: 473, column: 17, scope: !11821)
!11823 = !DILocation(line: 474, column: 13, scope: !11821)
!11824 = !DILocation(line: 478, column: 31, scope: !11825)
!11825 = distinct !DILexicalBlock(scope: !11729, file: !2159, line: 478, column: 17)
!11826 = !DILocation(line: 478, column: 39, scope: !11825)
!11827 = !DILocation(line: 478, column: 17, scope: !11729)
!11828 = !DILocation(line: 479, column: 98, scope: !11829)
!11829 = distinct !DILexicalBlock(scope: !11825, file: !2159, line: 478, column: 48)
!11830 = !DILocation(line: 479, column: 17, scope: !11829)
!11831 = !DILocation(line: 480, column: 13, scope: !11829)
!11832 = !DILocation(line: 481, column: 31, scope: !11833)
!11833 = distinct !DILexicalBlock(scope: !11729, file: !2159, line: 481, column: 17)
!11834 = !DILocation(line: 481, column: 39, scope: !11833)
!11835 = !DILocation(line: 481, column: 17, scope: !11729)
!11836 = !DILocation(line: 482, column: 98, scope: !11837)
!11837 = distinct !DILexicalBlock(scope: !11833, file: !2159, line: 481, column: 48)
!11838 = !DILocation(line: 482, column: 17, scope: !11837)
!11839 = !DILocation(line: 483, column: 13, scope: !11837)
!11840 = !DILocation(line: 487, column: 31, scope: !11841)
!11841 = distinct !DILexicalBlock(scope: !11729, file: !2159, line: 487, column: 17)
!11842 = !DILocation(line: 487, column: 39, scope: !11841)
!11843 = !DILocation(line: 487, column: 17, scope: !11729)
!11844 = !DILocation(line: 488, column: 92, scope: !11845)
!11845 = distinct !DILexicalBlock(scope: !11841, file: !2159, line: 487, column: 48)
!11846 = !DILocation(line: 488, column: 17, scope: !11845)
!11847 = !DILocation(line: 489, column: 13, scope: !11845)
!11848 = !DILocation(line: 490, column: 31, scope: !11849)
!11849 = distinct !DILexicalBlock(scope: !11729, file: !2159, line: 490, column: 17)
!11850 = !DILocation(line: 490, column: 39, scope: !11849)
!11851 = !DILocation(line: 490, column: 17, scope: !11729)
!11852 = !DILocation(line: 491, column: 92, scope: !11853)
!11853 = distinct !DILexicalBlock(scope: !11849, file: !2159, line: 490, column: 48)
!11854 = !DILocation(line: 491, column: 17, scope: !11853)
!11855 = !DILocation(line: 492, column: 13, scope: !11853)
!11856 = !DILocation(line: 496, column: 31, scope: !11857)
!11857 = distinct !DILexicalBlock(scope: !11729, file: !2159, line: 496, column: 17)
!11858 = !DILocation(line: 496, column: 39, scope: !11857)
!11859 = !DILocation(line: 496, column: 17, scope: !11729)
!11860 = !DILocation(line: 497, column: 88, scope: !11861)
!11861 = distinct !DILexicalBlock(scope: !11857, file: !2159, line: 496, column: 48)
!11862 = !DILocation(line: 497, column: 17, scope: !11861)
!11863 = !DILocation(line: 498, column: 13, scope: !11861)
!11864 = !DILocation(line: 499, column: 31, scope: !11865)
!11865 = distinct !DILexicalBlock(scope: !11729, file: !2159, line: 499, column: 17)
!11866 = !DILocation(line: 499, column: 39, scope: !11865)
!11867 = !DILocation(line: 499, column: 17, scope: !11729)
!11868 = !DILocation(line: 500, column: 88, scope: !11869)
!11869 = distinct !DILexicalBlock(scope: !11865, file: !2159, line: 499, column: 48)
!11870 = !DILocation(line: 500, column: 17, scope: !11869)
!11871 = !DILocation(line: 501, column: 13, scope: !11869)
!11872 = !DILocation(line: 505, column: 31, scope: !11873)
!11873 = distinct !DILexicalBlock(scope: !11729, file: !2159, line: 505, column: 17)
!11874 = !DILocation(line: 505, column: 39, scope: !11873)
!11875 = !DILocation(line: 505, column: 17, scope: !11729)
!11876 = !DILocation(line: 506, column: 88, scope: !11877)
!11877 = distinct !DILexicalBlock(scope: !11873, file: !2159, line: 505, column: 48)
!11878 = !DILocation(line: 506, column: 17, scope: !11877)
!11879 = !DILocation(line: 507, column: 13, scope: !11877)
!11880 = !DILocation(line: 508, column: 31, scope: !11881)
!11881 = distinct !DILexicalBlock(scope: !11729, file: !2159, line: 508, column: 17)
!11882 = !DILocation(line: 508, column: 39, scope: !11881)
!11883 = !DILocation(line: 508, column: 17, scope: !11729)
!11884 = !DILocation(line: 509, column: 88, scope: !11885)
!11885 = distinct !DILexicalBlock(scope: !11881, file: !2159, line: 508, column: 48)
!11886 = !DILocation(line: 509, column: 17, scope: !11885)
!11887 = !DILocation(line: 510, column: 13, scope: !11885)
!11888 = !DILocation(line: 514, column: 31, scope: !11889)
!11889 = distinct !DILexicalBlock(scope: !11729, file: !2159, line: 514, column: 17)
!11890 = !DILocation(line: 514, column: 39, scope: !11889)
!11891 = !DILocation(line: 514, column: 17, scope: !11729)
!11892 = !DILocation(line: 515, column: 92, scope: !11893)
!11893 = distinct !DILexicalBlock(scope: !11889, file: !2159, line: 514, column: 48)
!11894 = !DILocation(line: 515, column: 17, scope: !11893)
!11895 = !DILocation(line: 516, column: 13, scope: !11893)
!11896 = !DILocation(line: 517, column: 31, scope: !11897)
!11897 = distinct !DILexicalBlock(scope: !11729, file: !2159, line: 517, column: 17)
!11898 = !DILocation(line: 517, column: 39, scope: !11897)
!11899 = !DILocation(line: 517, column: 17, scope: !11729)
!11900 = !DILocation(line: 518, column: 92, scope: !11901)
!11901 = distinct !DILexicalBlock(scope: !11897, file: !2159, line: 517, column: 48)
!11902 = !DILocation(line: 518, column: 17, scope: !11901)
!11903 = !DILocation(line: 519, column: 13, scope: !11901)
!11904 = !DILocation(line: 523, column: 31, scope: !11905)
!11905 = distinct !DILexicalBlock(scope: !11729, file: !2159, line: 523, column: 17)
!11906 = !DILocation(line: 523, column: 39, scope: !11905)
!11907 = !DILocation(line: 523, column: 17, scope: !11729)
!11908 = !DILocation(line: 524, column: 92, scope: !11909)
!11909 = distinct !DILexicalBlock(scope: !11905, file: !2159, line: 523, column: 48)
!11910 = !DILocation(line: 524, column: 17, scope: !11909)
!11911 = !DILocation(line: 525, column: 13, scope: !11909)
!11912 = !DILocation(line: 526, column: 31, scope: !11913)
!11913 = distinct !DILexicalBlock(scope: !11729, file: !2159, line: 526, column: 17)
!11914 = !DILocation(line: 526, column: 39, scope: !11913)
!11915 = !DILocation(line: 526, column: 17, scope: !11729)
!11916 = !DILocation(line: 527, column: 92, scope: !11917)
!11917 = distinct !DILexicalBlock(scope: !11913, file: !2159, line: 526, column: 48)
!11918 = !DILocation(line: 527, column: 17, scope: !11917)
!11919 = !DILocation(line: 528, column: 13, scope: !11917)
!11920 = !DILocation(line: 532, column: 31, scope: !11921)
!11921 = distinct !DILexicalBlock(scope: !11729, file: !2159, line: 532, column: 17)
!11922 = !DILocation(line: 532, column: 39, scope: !11921)
!11923 = !DILocation(line: 532, column: 17, scope: !11729)
!11924 = !DILocation(line: 533, column: 90, scope: !11925)
!11925 = distinct !DILexicalBlock(scope: !11921, file: !2159, line: 532, column: 48)
!11926 = !DILocation(line: 533, column: 17, scope: !11925)
!11927 = !DILocation(line: 534, column: 13, scope: !11925)
!11928 = !DILocation(line: 535, column: 31, scope: !11929)
!11929 = distinct !DILexicalBlock(scope: !11729, file: !2159, line: 535, column: 17)
!11930 = !DILocation(line: 535, column: 39, scope: !11929)
!11931 = !DILocation(line: 535, column: 17, scope: !11729)
!11932 = !DILocation(line: 536, column: 90, scope: !11933)
!11933 = distinct !DILexicalBlock(scope: !11929, file: !2159, line: 535, column: 48)
!11934 = !DILocation(line: 536, column: 17, scope: !11933)
!11935 = !DILocation(line: 537, column: 13, scope: !11933)
!11936 = !DILocation(line: 541, column: 31, scope: !11937)
!11937 = distinct !DILexicalBlock(scope: !11729, file: !2159, line: 541, column: 17)
!11938 = !DILocation(line: 541, column: 39, scope: !11937)
!11939 = !DILocation(line: 541, column: 17, scope: !11729)
!11940 = !DILocation(line: 542, column: 92, scope: !11941)
!11941 = distinct !DILexicalBlock(scope: !11937, file: !2159, line: 541, column: 48)
!11942 = !DILocation(line: 542, column: 17, scope: !11941)
!11943 = !DILocation(line: 543, column: 13, scope: !11941)
!11944 = !DILocation(line: 544, column: 31, scope: !11945)
!11945 = distinct !DILexicalBlock(scope: !11729, file: !2159, line: 544, column: 17)
!11946 = !DILocation(line: 544, column: 39, scope: !11945)
!11947 = !DILocation(line: 544, column: 17, scope: !11729)
!11948 = !DILocation(line: 545, column: 92, scope: !11949)
!11949 = distinct !DILexicalBlock(scope: !11945, file: !2159, line: 544, column: 48)
!11950 = !DILocation(line: 545, column: 17, scope: !11949)
!11951 = !DILocation(line: 546, column: 13, scope: !11949)
!11952 = !DILocation(line: 550, column: 31, scope: !11953)
!11953 = distinct !DILexicalBlock(scope: !11729, file: !2159, line: 550, column: 17)
!11954 = !DILocation(line: 550, column: 39, scope: !11953)
!11955 = !DILocation(line: 550, column: 17, scope: !11729)
!11956 = !DILocation(line: 551, column: 90, scope: !11957)
!11957 = distinct !DILexicalBlock(scope: !11953, file: !2159, line: 550, column: 48)
!11958 = !DILocation(line: 551, column: 17, scope: !11957)
!11959 = !DILocation(line: 552, column: 13, scope: !11957)
!11960 = !DILocation(line: 553, column: 31, scope: !11961)
!11961 = distinct !DILexicalBlock(scope: !11729, file: !2159, line: 553, column: 17)
!11962 = !DILocation(line: 553, column: 39, scope: !11961)
!11963 = !DILocation(line: 553, column: 17, scope: !11729)
!11964 = !DILocation(line: 554, column: 90, scope: !11965)
!11965 = distinct !DILexicalBlock(scope: !11961, file: !2159, line: 553, column: 48)
!11966 = !DILocation(line: 554, column: 17, scope: !11965)
!11967 = !DILocation(line: 555, column: 13, scope: !11965)
!11968 = !DILocation(line: 559, column: 31, scope: !11969)
!11969 = distinct !DILexicalBlock(scope: !11729, file: !2159, line: 559, column: 17)
!11970 = !DILocation(line: 559, column: 39, scope: !11969)
!11971 = !DILocation(line: 559, column: 17, scope: !11729)
!11972 = !DILocation(line: 560, column: 90, scope: !11973)
!11973 = distinct !DILexicalBlock(scope: !11969, file: !2159, line: 559, column: 48)
!11974 = !DILocation(line: 560, column: 17, scope: !11973)
!11975 = !DILocation(line: 561, column: 13, scope: !11973)
!11976 = !DILocation(line: 562, column: 31, scope: !11977)
!11977 = distinct !DILexicalBlock(scope: !11729, file: !2159, line: 562, column: 17)
!11978 = !DILocation(line: 562, column: 39, scope: !11977)
!11979 = !DILocation(line: 562, column: 17, scope: !11729)
!11980 = !DILocation(line: 563, column: 90, scope: !11981)
!11981 = distinct !DILexicalBlock(scope: !11977, file: !2159, line: 562, column: 48)
!11982 = !DILocation(line: 563, column: 17, scope: !11981)
!11983 = !DILocation(line: 564, column: 13, scope: !11981)
!11984 = !DILocation(line: 568, column: 31, scope: !11985)
!11985 = distinct !DILexicalBlock(scope: !11729, file: !2159, line: 568, column: 17)
!11986 = !DILocation(line: 568, column: 39, scope: !11985)
!11987 = !DILocation(line: 568, column: 17, scope: !11729)
!11988 = !DILocation(line: 569, column: 94, scope: !11989)
!11989 = distinct !DILexicalBlock(scope: !11985, file: !2159, line: 568, column: 48)
!11990 = !DILocation(line: 569, column: 17, scope: !11989)
!11991 = !DILocation(line: 570, column: 13, scope: !11989)
!11992 = !DILocation(line: 571, column: 31, scope: !11993)
!11993 = distinct !DILexicalBlock(scope: !11729, file: !2159, line: 571, column: 17)
!11994 = !DILocation(line: 571, column: 39, scope: !11993)
!11995 = !DILocation(line: 571, column: 17, scope: !11729)
!11996 = !DILocation(line: 572, column: 94, scope: !11997)
!11997 = distinct !DILexicalBlock(scope: !11993, file: !2159, line: 571, column: 48)
!11998 = !DILocation(line: 572, column: 17, scope: !11997)
!11999 = !DILocation(line: 573, column: 13, scope: !11997)
!12000 = !DILocation(line: 577, column: 31, scope: !12001)
!12001 = distinct !DILexicalBlock(scope: !11729, file: !2159, line: 577, column: 17)
!12002 = !DILocation(line: 577, column: 39, scope: !12001)
!12003 = !DILocation(line: 577, column: 17, scope: !11729)
!12004 = !DILocation(line: 578, column: 92, scope: !12005)
!12005 = distinct !DILexicalBlock(scope: !12001, file: !2159, line: 577, column: 48)
!12006 = !DILocation(line: 578, column: 17, scope: !12005)
!12007 = !DILocation(line: 579, column: 13, scope: !12005)
!12008 = !DILocation(line: 580, column: 31, scope: !12009)
!12009 = distinct !DILexicalBlock(scope: !11729, file: !2159, line: 580, column: 17)
!12010 = !DILocation(line: 580, column: 39, scope: !12009)
!12011 = !DILocation(line: 580, column: 17, scope: !11729)
!12012 = !DILocation(line: 581, column: 92, scope: !12013)
!12013 = distinct !DILexicalBlock(scope: !12009, file: !2159, line: 580, column: 48)
!12014 = !DILocation(line: 581, column: 17, scope: !12013)
!12015 = !DILocation(line: 582, column: 13, scope: !12013)
!12016 = !DILocation(line: 586, column: 31, scope: !12017)
!12017 = distinct !DILexicalBlock(scope: !11729, file: !2159, line: 586, column: 17)
!12018 = !DILocation(line: 586, column: 39, scope: !12017)
!12019 = !DILocation(line: 586, column: 17, scope: !11729)
!12020 = !DILocation(line: 587, column: 92, scope: !12021)
!12021 = distinct !DILexicalBlock(scope: !12017, file: !2159, line: 586, column: 48)
!12022 = !DILocation(line: 587, column: 17, scope: !12021)
!12023 = !DILocation(line: 588, column: 13, scope: !12021)
!12024 = !DILocation(line: 589, column: 31, scope: !12025)
!12025 = distinct !DILexicalBlock(scope: !11729, file: !2159, line: 589, column: 17)
!12026 = !DILocation(line: 589, column: 39, scope: !12025)
!12027 = !DILocation(line: 589, column: 17, scope: !11729)
!12028 = !DILocation(line: 590, column: 92, scope: !12029)
!12029 = distinct !DILexicalBlock(scope: !12025, file: !2159, line: 589, column: 48)
!12030 = !DILocation(line: 590, column: 17, scope: !12029)
!12031 = !DILocation(line: 591, column: 13, scope: !12029)
!12032 = !DILocation(line: 595, column: 88, scope: !11729)
!12033 = !DILocation(line: 595, column: 13, scope: !11729)
!12034 = !DILocation(line: 596, column: 13, scope: !11729)
!12035 = !DILocation(line: 599, column: 88, scope: !11729)
!12036 = !DILocation(line: 599, column: 13, scope: !11729)
!12037 = !DILocation(line: 600, column: 13, scope: !11729)
!12038 = !DILocation(line: 603, column: 96, scope: !11729)
!12039 = !DILocation(line: 603, column: 13, scope: !11729)
!12040 = !DILocation(line: 604, column: 13, scope: !11729)
!12041 = !DILocation(line: 607, column: 98, scope: !11729)
!12042 = !DILocation(line: 607, column: 13, scope: !11729)
!12043 = !DILocation(line: 608, column: 13, scope: !11729)
!12044 = !DILocation(line: 611, column: 98, scope: !11729)
!12045 = !DILocation(line: 611, column: 13, scope: !11729)
!12046 = !DILocation(line: 612, column: 13, scope: !11729)
!12047 = !DILocation(line: 615, column: 90, scope: !11729)
!12048 = !DILocation(line: 615, column: 13, scope: !11729)
!12049 = !DILocation(line: 616, column: 13, scope: !11729)
!12050 = !DILocation(line: 619, column: 84, scope: !11729)
!12051 = !DILocation(line: 619, column: 13, scope: !11729)
!12052 = !DILocation(line: 620, column: 13, scope: !11729)
!12053 = !DILocation(line: 623, column: 86, scope: !11729)
!12054 = !DILocation(line: 623, column: 13, scope: !11729)
!12055 = !DILocation(line: 624, column: 13, scope: !11729)
!12056 = !DILocation(line: 627, column: 86, scope: !11729)
!12057 = !DILocation(line: 627, column: 13, scope: !11729)
!12058 = !DILocation(line: 628, column: 13, scope: !11729)
!12059 = !DILocation(line: 631, column: 86, scope: !11729)
!12060 = !DILocation(line: 631, column: 13, scope: !11729)
!12061 = !DILocation(line: 632, column: 13, scope: !11729)
!12062 = !DILocation(line: 635, column: 84, scope: !11729)
!12063 = !DILocation(line: 635, column: 13, scope: !11729)
!12064 = !DILocation(line: 636, column: 13, scope: !11729)
!12065 = !DILocation(line: 639, column: 88, scope: !11729)
!12066 = !DILocation(line: 639, column: 13, scope: !11729)
!12067 = !DILocation(line: 640, column: 13, scope: !11729)
!12068 = !DILocation(line: 643, column: 92, scope: !11729)
!12069 = !DILocation(line: 643, column: 13, scope: !11729)
!12070 = !DILocation(line: 644, column: 13, scope: !11729)
!12071 = !DILocation(line: 648, column: 1, scope: !11713)
!12072 = distinct !DISubprogram(name: "pmu_disable_interrupt", scope: !2159, file: !2159, line: 398, type: !12073, scopeLine: 399, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2160, retainedNodes: !12075)
!12073 = !DISubroutineType(types: !12074)
!12074 = !{!11684, !11685, !11686}
!12075 = !{!12076, !12077, !12078, !12079}
!12076 = !DILocalVariable(name: "int_ch", arg: 1, scope: !12072, file: !2159, line: 398, type: !11685)
!12077 = !DILocalVariable(name: "trigger_mode", arg: 2, scope: !12072, file: !2159, line: 398, type: !11686)
!12078 = !DILocalVariable(name: "status", scope: !12072, file: !2159, line: 400, type: !11684)
!12079 = !DILocalVariable(name: "mask", scope: !12072, file: !2159, line: 401, type: !15)
!12080 = !DILocation(line: 0, scope: !12072)
!12081 = !DILocation(line: 403, column: 12, scope: !12072)
!12082 = !DILocation(line: 405, column: 5, scope: !12072)
!12083 = !DILocation(line: 406, column: 32, scope: !12072)
!12084 = !DILocation(line: 406, column: 44, scope: !12072)
!12085 = !DILocation(line: 408, column: 5, scope: !12072)
!12086 = !DILocation(line: 411, column: 5, scope: !12072)
!12087 = distinct !DISubprogram(name: "pmu_init", scope: !3020, file: !3020, line: 93, type: !318, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3019, retainedNodes: !320)
!12088 = !DILocation(line: 98, column: 5, scope: !12087)
!12089 = !DILocation(line: 100, column: 5, scope: !12087)
!12090 = !DILocation(line: 101, column: 1, scope: !12087)
!12091 = distinct !DISubprogram(name: "pmu_set_register_value", scope: !3020, file: !3020, line: 104, type: !3032, scopeLine: 105, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3019, retainedNodes: !12092)
!12092 = !{!12093, !12094, !12095, !12096}
!12093 = !DILocalVariable(name: "address", arg: 1, scope: !12091, file: !3020, line: 104, type: !989)
!12094 = !DILocalVariable(name: "mask", arg: 2, scope: !12091, file: !3020, line: 104, type: !989)
!12095 = !DILocalVariable(name: "shift", arg: 3, scope: !12091, file: !3020, line: 104, type: !989)
!12096 = !DILocalVariable(name: "value", arg: 4, scope: !12091, file: !3020, line: 104, type: !989)
!12097 = !DILocation(line: 0, scope: !12091)
!12098 = !DILocation(line: 106, column: 13, scope: !12091)
!12099 = !DILocation(line: 106, column: 5, scope: !12091)
!12100 = distinct !DISubprogram(name: "pmu_get_register_value", scope: !3020, file: !3020, line: 110, type: !3036, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3019, retainedNodes: !12101)
!12101 = !{!12102, !12103, !12104}
!12102 = !DILocalVariable(name: "address", arg: 1, scope: !12100, file: !3020, line: 110, type: !989)
!12103 = !DILocalVariable(name: "mask", arg: 2, scope: !12100, file: !3020, line: 110, type: !989)
!12104 = !DILocalVariable(name: "shift", arg: 3, scope: !12100, file: !3020, line: 110, type: !989)
!12105 = !DILocation(line: 0, scope: !12100)
!12106 = !DILocation(line: 112, column: 13, scope: !12100)
!12107 = !DILocation(line: 112, column: 5, scope: !12100)
!12108 = distinct !DISubprogram(name: "pmu_control_mtcmos", scope: !3020, file: !3020, line: 116, type: !318, scopeLine: 117, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3019, retainedNodes: !320)
!12109 = !DILocation(line: 118, column: 5, scope: !12108)
!12110 = !DILocation(line: 119, column: 1, scope: !12108)
!12111 = distinct !DISubprogram(name: "pmu_get_vcore_voltage", scope: !3020, file: !3020, line: 123, type: !3041, scopeLine: 124, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3019, retainedNodes: !320)
!12112 = !DILocation(line: 125, column: 13, scope: !12111)
!12113 = !DILocation(line: 125, column: 5, scope: !12111)
!12114 = distinct !DISubprogram(name: "pmu_set_vcore_voltage", scope: !3020, file: !3020, line: 131, type: !2411, scopeLine: 132, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3019, retainedNodes: !12115)
!12115 = !{!12116, !12117}
!12116 = !DILocalVariable(name: "lock", arg: 1, scope: !12114, file: !3020, line: 131, type: !129)
!12117 = !DILocalVariable(name: "vcore", arg: 2, scope: !12114, file: !3020, line: 131, type: !129)
!12118 = !DILocation(line: 0, scope: !12114)
!12119 = !DILocation(line: 133, column: 13, scope: !12114)
!12120 = !DILocation(line: 133, column: 5, scope: !12114)
!12121 = distinct !DISubprogram(name: "pmu_set_vcore_s1_buck", scope: !3020, file: !3020, line: 137, type: !318, scopeLine: 138, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3019, retainedNodes: !320)
!12122 = !DILocation(line: 139, column: 5, scope: !12121)
!12123 = !DILocation(line: 140, column: 1, scope: !12121)
!12124 = distinct !DISubprogram(name: "pmu_ctrl_driver_power", scope: !3020, file: !3020, line: 143, type: !3048, scopeLine: 144, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3019, retainedNodes: !12125)
!12125 = !{!12126, !12127}
!12126 = !DILocalVariable(name: "driver_name", arg: 1, scope: !12124, file: !3020, line: 143, type: !129)
!12127 = !DILocalVariable(name: "enable", arg: 2, scope: !12124, file: !3020, line: 143, type: !129)
!12128 = !DILocation(line: 0, scope: !12124)
!12129 = !DILocation(line: 145, column: 5, scope: !12124)
!12130 = !DILocation(line: 146, column: 1, scope: !12124)
!12131 = distinct !DISubprogram(name: "internal_pmu_ctrl_power", scope: !3020, file: !3020, line: 189, type: !3048, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3019, retainedNodes: !12132)
!12132 = !{!12133, !12134}
!12133 = !DILocalVariable(name: "driver_name", arg: 1, scope: !12131, file: !3020, line: 189, type: !129)
!12134 = !DILocalVariable(name: "enable", arg: 2, scope: !12131, file: !3020, line: 189, type: !129)
!12135 = !DILocation(line: 0, scope: !12131)
!12136 = !DILocation(line: 191, column: 5, scope: !12131)
!12137 = !DILocation(line: 193, column: 13, scope: !12138)
!12138 = distinct !DILexicalBlock(scope: !12131, file: !3020, line: 191, column: 26)
!12139 = !DILocation(line: 194, column: 13, scope: !12138)
!12140 = !DILocation(line: 197, column: 13, scope: !12138)
!12141 = !DILocation(line: 198, column: 13, scope: !12138)
!12142 = !DILocation(line: 201, column: 40, scope: !12138)
!12143 = !DILocation(line: 201, column: 13, scope: !12138)
!12144 = !DILocation(line: 202, column: 13, scope: !12138)
!12145 = !DILocation(line: 205, column: 41, scope: !12138)
!12146 = !DILocation(line: 205, column: 13, scope: !12138)
!12147 = !DILocation(line: 206, column: 13, scope: !12138)
!12148 = !DILocation(line: 209, column: 39, scope: !12138)
!12149 = !DILocation(line: 209, column: 13, scope: !12138)
!12150 = !DILocation(line: 210, column: 13, scope: !12138)
!12151 = !DILocation(line: 213, column: 13, scope: !12138)
!12152 = !DILocation(line: 214, column: 13, scope: !12138)
!12153 = !DILocation(line: 217, column: 13, scope: !12138)
!12154 = !DILocation(line: 218, column: 13, scope: !12138)
!12155 = !DILocation(line: 221, column: 13, scope: !12138)
!12156 = !DILocation(line: 222, column: 13, scope: !12138)
!12157 = !DILocation(line: 225, column: 13, scope: !12138)
!12158 = !DILocation(line: 226, column: 13, scope: !12138)
!12159 = !DILocation(line: 228, column: 1, scope: !12131)
!12160 = distinct !DISubprogram(name: "pmu_audio_lock_voltage", scope: !3020, file: !3020, line: 149, type: !318, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3019, retainedNodes: !320)
!12161 = !DILocation(line: 151, column: 5, scope: !12160)
!12162 = !DILocation(line: 152, column: 1, scope: !12160)
!12163 = distinct !DISubprogram(name: "internal_pmu_audio_lock_voltage", scope: !3020, file: !3020, line: 230, type: !318, scopeLine: 231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3019, retainedNodes: !320)
!12164 = !DILocation(line: 232, column: 5, scope: !12163)
!12165 = !DILocation(line: 233, column: 5, scope: !12163)
!12166 = !DILocation(line: 234, column: 1, scope: !12163)
!12167 = distinct !DISubprogram(name: "pmu_audio_unlock_voltage", scope: !3020, file: !3020, line: 155, type: !318, scopeLine: 156, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3019, retainedNodes: !320)
!12168 = !DILocation(line: 158, column: 1, scope: !12167)
!12169 = distinct !DISubprogram(name: "pmu_get_usb_input_status", scope: !3020, file: !3020, line: 161, type: !3041, scopeLine: 162, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3019, retainedNodes: !320)
!12170 = !DILocation(line: 163, column: 13, scope: !12169)
!12171 = !DILocation(line: 163, column: 5, scope: !12169)
!12172 = distinct !DISubprogram(name: "pmu_enter_power_off", scope: !3020, file: !3020, line: 167, type: !318, scopeLine: 168, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3019, retainedNodes: !320)
!12173 = !DILocation(line: 169, column: 5, scope: !12172)
!12174 = !DILocation(line: 170, column: 1, scope: !12172)
!12175 = distinct !DISubprogram(name: "pmu_reset", scope: !3020, file: !3020, line: 173, type: !318, scopeLine: 174, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3019, retainedNodes: !320)
!12176 = !DILocation(line: 175, column: 5, scope: !12175)
!12177 = !DILocation(line: 176, column: 1, scope: !12175)
!12178 = distinct !DISubprogram(name: "pmu_get_type", scope: !3020, file: !3020, line: 178, type: !12179, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3019, retainedNodes: !320)
!12179 = !DISubroutineType(types: !12180)
!12180 = !{!15}
!12181 = !DILocation(line: 183, column: 5, scope: !12178)
!12182 = distinct !DISubprogram(name: "null_pmu_set_register_value", scope: !3020, file: !3020, line: 238, type: !3032, scopeLine: 239, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3019, retainedNodes: !12183)
!12183 = !{!12184, !12185, !12186, !12187}
!12184 = !DILocalVariable(name: "address", arg: 1, scope: !12182, file: !3020, line: 238, type: !989)
!12185 = !DILocalVariable(name: "mask", arg: 2, scope: !12182, file: !3020, line: 238, type: !989)
!12186 = !DILocalVariable(name: "shift", arg: 3, scope: !12182, file: !3020, line: 238, type: !989)
!12187 = !DILocalVariable(name: "value", arg: 4, scope: !12182, file: !3020, line: 238, type: !989)
!12188 = !DILocation(line: 0, scope: !12182)
!12189 = !DILocation(line: 240, column: 5, scope: !12182)
!12190 = distinct !DISubprogram(name: "null_pmu_get_register_value", scope: !3020, file: !3020, line: 244, type: !3036, scopeLine: 245, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3019, retainedNodes: !12191)
!12191 = !{!12192, !12193, !12194}
!12192 = !DILocalVariable(name: "address", arg: 1, scope: !12190, file: !3020, line: 244, type: !989)
!12193 = !DILocalVariable(name: "mask", arg: 2, scope: !12190, file: !3020, line: 244, type: !989)
!12194 = !DILocalVariable(name: "shift", arg: 3, scope: !12190, file: !3020, line: 244, type: !989)
!12195 = !DILocation(line: 0, scope: !12190)
!12196 = !DILocation(line: 246, column: 5, scope: !12190)
!12197 = distinct !DISubprogram(name: "null_function", scope: !3020, file: !3020, line: 250, type: !318, scopeLine: 251, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3019, retainedNodes: !320)
!12198 = !DILocation(line: 252, column: 1, scope: !12197)
!12199 = distinct !DISubprogram(name: "log_hal_error_internal", scope: !3056, file: !3056, line: 58, type: !12200, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3055, retainedNodes: !12202)
!12200 = !DISubroutineType(types: !12201)
!12201 = !{null, !199, !7, !199, null}
!12202 = !{!12203, !12204, !12205, !12206, !12215}
!12203 = !DILocalVariable(name: "func", arg: 1, scope: !12199, file: !3056, line: 58, type: !199)
!12204 = !DILocalVariable(name: "line", arg: 2, scope: !12199, file: !3056, line: 58, type: !7)
!12205 = !DILocalVariable(name: "message", arg: 3, scope: !12199, file: !3056, line: 58, type: !199)
!12206 = !DILocalVariable(name: "ap", scope: !12199, file: !3056, line: 60, type: !12207)
!12207 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !12208, line: 46, baseType: !12209)
!12208 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/stdio.h", directory: "/home/mjshen/RTOSExploration")
!12209 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !12210, line: 32, baseType: !12211)
!12210 = !DIFile(filename: "/usr/lib/llvm-14/lib/clang/14.0.6/include/stdarg.h", directory: "")
!12211 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !3056, baseType: !12212)
!12212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !12213)
!12213 = !{!12214}
!12214 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !12212, file: !3056, line: 60, baseType: !124, size: 32)
!12215 = !DILocalVariable(name: "mask", scope: !12199, file: !3056, line: 62, type: !105)
!12216 = !DILocation(line: 0, scope: !12199)
!12217 = !DILocation(line: 60, column: 5, scope: !12199)
!12218 = !DILocation(line: 60, column: 13, scope: !12199)
!12219 = !DILocation(line: 62, column: 5, scope: !12199)
!12220 = !DILocation(line: 63, column: 5, scope: !12199)
!12221 = !DILocation(line: 65, column: 5, scope: !12199)
!12222 = !DILocation(line: 66, column: 5, scope: !12199)
!12223 = !DILocation(line: 67, column: 5, scope: !12199)
!12224 = !DILocation(line: 69, column: 37, scope: !12199)
!12225 = !DILocation(line: 69, column: 5, scope: !12199)
!12226 = !DILocation(line: 71, column: 1, scope: !12199)
!12227 = distinct !DISubprogram(name: "log_hal_warning_internal", scope: !3056, file: !3056, line: 72, type: !12200, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3055, retainedNodes: !12228)
!12228 = !{!12229, !12230, !12231, !12232, !12233}
!12229 = !DILocalVariable(name: "func", arg: 1, scope: !12227, file: !3056, line: 72, type: !199)
!12230 = !DILocalVariable(name: "line", arg: 2, scope: !12227, file: !3056, line: 72, type: !7)
!12231 = !DILocalVariable(name: "message", arg: 3, scope: !12227, file: !3056, line: 72, type: !199)
!12232 = !DILocalVariable(name: "ap", scope: !12227, file: !3056, line: 74, type: !12207)
!12233 = !DILocalVariable(name: "mask", scope: !12227, file: !3056, line: 76, type: !105)
!12234 = !DILocation(line: 0, scope: !12227)
!12235 = !DILocation(line: 74, column: 5, scope: !12227)
!12236 = !DILocation(line: 74, column: 13, scope: !12227)
!12237 = !DILocation(line: 76, column: 5, scope: !12227)
!12238 = !DILocation(line: 77, column: 5, scope: !12227)
!12239 = !DILocation(line: 79, column: 5, scope: !12227)
!12240 = !DILocation(line: 80, column: 5, scope: !12227)
!12241 = !DILocation(line: 81, column: 5, scope: !12227)
!12242 = !DILocation(line: 83, column: 37, scope: !12227)
!12243 = !DILocation(line: 83, column: 5, scope: !12227)
!12244 = !DILocation(line: 85, column: 1, scope: !12227)
!12245 = distinct !DISubprogram(name: "log_hal_info_internal", scope: !3056, file: !3056, line: 86, type: !12200, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3055, retainedNodes: !12246)
!12246 = !{!12247, !12248, !12249, !12250, !12251}
!12247 = !DILocalVariable(name: "func", arg: 1, scope: !12245, file: !3056, line: 86, type: !199)
!12248 = !DILocalVariable(name: "line", arg: 2, scope: !12245, file: !3056, line: 86, type: !7)
!12249 = !DILocalVariable(name: "message", arg: 3, scope: !12245, file: !3056, line: 86, type: !199)
!12250 = !DILocalVariable(name: "ap", scope: !12245, file: !3056, line: 88, type: !12207)
!12251 = !DILocalVariable(name: "mask", scope: !12245, file: !3056, line: 90, type: !105)
!12252 = !DILocation(line: 0, scope: !12245)
!12253 = !DILocation(line: 88, column: 5, scope: !12245)
!12254 = !DILocation(line: 88, column: 13, scope: !12245)
!12255 = !DILocation(line: 90, column: 5, scope: !12245)
!12256 = !DILocation(line: 91, column: 5, scope: !12245)
!12257 = !DILocation(line: 93, column: 5, scope: !12245)
!12258 = !DILocation(line: 94, column: 5, scope: !12245)
!12259 = !DILocation(line: 95, column: 5, scope: !12245)
!12260 = !DILocation(line: 97, column: 37, scope: !12245)
!12261 = !DILocation(line: 97, column: 5, scope: !12245)
!12262 = !DILocation(line: 99, column: 1, scope: !12245)
!12263 = distinct !DISubprogram(name: "log_hal_dump_internal", scope: !3056, file: !3056, line: 101, type: !12264, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3055, retainedNodes: !12268)
!12264 = !DISubroutineType(types: !12265)
!12265 = !{null, !199, !7, !199, !12266, !7, null}
!12266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12267, size: 32)
!12267 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!12268 = !{!12269, !12270, !12271, !12272, !12273}
!12269 = !DILocalVariable(name: "func", arg: 1, scope: !12263, file: !3056, line: 101, type: !199)
!12270 = !DILocalVariable(name: "line", arg: 2, scope: !12263, file: !3056, line: 101, type: !7)
!12271 = !DILocalVariable(name: "message", arg: 3, scope: !12263, file: !3056, line: 101, type: !199)
!12272 = !DILocalVariable(name: "data", arg: 4, scope: !12263, file: !3056, line: 101, type: !12266)
!12273 = !DILocalVariable(name: "length", arg: 5, scope: !12263, file: !3056, line: 101, type: !7)
!12274 = !DILocation(line: 0, scope: !12263)
!12275 = !DILocation(line: 103, column: 1, scope: !12263)
!12276 = distinct !DISubprogram(name: "PMIC_VR_PSI_PMOD_CONFIG", scope: !2361, file: !2361, line: 58, type: !12277, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2360, retainedNodes: !12280)
!12277 = !DISubroutineType(types: !12278)
!12278 = !{null, !12279, !2314, !2315}
!12279 = !DIDerivedType(tag: DW_TAG_typedef, name: "PMIC_VR", file: !2168, line: 60, baseType: !2271)
!12280 = !{!12281, !12282, !12283, !12284}
!12281 = !DILocalVariable(name: "vr_name", arg: 1, scope: !12276, file: !2361, line: 58, type: !12279)
!12282 = !DILocalVariable(name: "psi_mode", arg: 2, scope: !12276, file: !2361, line: 58, type: !2314)
!12283 = !DILocalVariable(name: "pmod", arg: 3, scope: !12276, file: !2361, line: 58, type: !2315)
!12284 = !DILocalVariable(name: "hwid", scope: !12276, file: !2361, line: 60, type: !129)
!12285 = !DILocation(line: 0, scope: !12276)
!12286 = !DILocation(line: 63, column: 5, scope: !12276)
!12287 = !DILocation(line: 64, column: 5, scope: !12276)
!12288 = !DILocation(line: 66, column: 5, scope: !12276)
!12289 = !DILocation(line: 68, column: 13, scope: !12290)
!12290 = distinct !DILexicalBlock(scope: !12276, file: !2361, line: 66, column: 22)
!12291 = !DILocation(line: 70, column: 142, scope: !12292)
!12292 = distinct !DILexicalBlock(scope: !12290, file: !2361, line: 68, column: 31)
!12293 = !DILocation(line: 70, column: 21, scope: !12292)
!12294 = !DILocation(line: 71, column: 21, scope: !12292)
!12295 = !DILocation(line: 73, column: 142, scope: !12292)
!12296 = !DILocation(line: 73, column: 21, scope: !12292)
!12297 = !DILocation(line: 74, column: 21, scope: !12292)
!12298 = !DILocation(line: 76, column: 142, scope: !12292)
!12299 = !DILocation(line: 76, column: 21, scope: !12292)
!12300 = !DILocation(line: 77, column: 21, scope: !12292)
!12301 = !DILocation(line: 79, column: 142, scope: !12292)
!12302 = !DILocation(line: 79, column: 21, scope: !12292)
!12303 = !DILocation(line: 80, column: 21, scope: !12292)
!12304 = !DILocation(line: 82, column: 142, scope: !12292)
!12305 = !DILocation(line: 82, column: 21, scope: !12292)
!12306 = !DILocation(line: 83, column: 21, scope: !12292)
!12307 = !DILocation(line: 85, column: 21, scope: !12292)
!12308 = !DILocation(line: 86, column: 21, scope: !12292)
!12309 = !DILocation(line: 91, column: 13, scope: !12290)
!12310 = !DILocation(line: 93, column: 142, scope: !12311)
!12311 = distinct !DILexicalBlock(scope: !12290, file: !2361, line: 91, column: 31)
!12312 = !DILocation(line: 93, column: 21, scope: !12311)
!12313 = !DILocation(line: 94, column: 21, scope: !12311)
!12314 = !DILocation(line: 96, column: 142, scope: !12311)
!12315 = !DILocation(line: 96, column: 21, scope: !12311)
!12316 = !DILocation(line: 97, column: 21, scope: !12311)
!12317 = !DILocation(line: 99, column: 142, scope: !12311)
!12318 = !DILocation(line: 99, column: 21, scope: !12311)
!12319 = !DILocation(line: 100, column: 21, scope: !12311)
!12320 = !DILocation(line: 102, column: 142, scope: !12311)
!12321 = !DILocation(line: 102, column: 21, scope: !12311)
!12322 = !DILocation(line: 103, column: 21, scope: !12311)
!12323 = !DILocation(line: 105, column: 142, scope: !12311)
!12324 = !DILocation(line: 105, column: 21, scope: !12311)
!12325 = !DILocation(line: 106, column: 21, scope: !12311)
!12326 = !DILocation(line: 108, column: 21, scope: !12311)
!12327 = !DILocation(line: 109, column: 21, scope: !12311)
!12328 = !DILocation(line: 114, column: 13, scope: !12290)
!12329 = !DILocation(line: 116, column: 142, scope: !12330)
!12330 = distinct !DILexicalBlock(scope: !12290, file: !2361, line: 114, column: 31)
!12331 = !DILocation(line: 116, column: 21, scope: !12330)
!12332 = !DILocation(line: 117, column: 21, scope: !12330)
!12333 = !DILocation(line: 119, column: 142, scope: !12330)
!12334 = !DILocation(line: 119, column: 21, scope: !12330)
!12335 = !DILocation(line: 120, column: 21, scope: !12330)
!12336 = !DILocation(line: 122, column: 142, scope: !12330)
!12337 = !DILocation(line: 122, column: 21, scope: !12330)
!12338 = !DILocation(line: 123, column: 21, scope: !12330)
!12339 = !DILocation(line: 125, column: 142, scope: !12330)
!12340 = !DILocation(line: 125, column: 21, scope: !12330)
!12341 = !DILocation(line: 126, column: 21, scope: !12330)
!12342 = !DILocation(line: 128, column: 142, scope: !12330)
!12343 = !DILocation(line: 128, column: 21, scope: !12330)
!12344 = !DILocation(line: 129, column: 21, scope: !12330)
!12345 = !DILocation(line: 131, column: 21, scope: !12330)
!12346 = !DILocation(line: 132, column: 21, scope: !12330)
!12347 = !DILocation(line: 137, column: 13, scope: !12290)
!12348 = !DILocation(line: 138, column: 13, scope: !12290)
!12349 = !DILocation(line: 140, column: 20, scope: !12290)
!12350 = !DILocation(line: 142, column: 17, scope: !12290)
!12351 = !DILocation(line: 143, column: 17, scope: !12352)
!12352 = distinct !DILexicalBlock(scope: !12353, file: !2361, line: 142, column: 31)
!12353 = distinct !DILexicalBlock(scope: !12290, file: !2361, line: 142, column: 17)
!12354 = !DILocation(line: 145, column: 146, scope: !12355)
!12355 = distinct !DILexicalBlock(scope: !12352, file: !2361, line: 143, column: 35)
!12356 = !DILocation(line: 145, column: 25, scope: !12355)
!12357 = !DILocation(line: 146, column: 25, scope: !12355)
!12358 = !DILocation(line: 148, column: 146, scope: !12355)
!12359 = !DILocation(line: 148, column: 25, scope: !12355)
!12360 = !DILocation(line: 149, column: 25, scope: !12355)
!12361 = !DILocation(line: 151, column: 146, scope: !12355)
!12362 = !DILocation(line: 151, column: 25, scope: !12355)
!12363 = !DILocation(line: 152, column: 25, scope: !12355)
!12364 = !DILocation(line: 154, column: 146, scope: !12355)
!12365 = !DILocation(line: 154, column: 25, scope: !12355)
!12366 = !DILocation(line: 155, column: 60, scope: !12367)
!12367 = distinct !DILexicalBlock(scope: !12355, file: !2361, line: 155, column: 29)
!12368 = !DILocation(line: 0, scope: !12367)
!12369 = !DILocation(line: 156, column: 51, scope: !12370)
!12370 = distinct !DILexicalBlock(scope: !12367, file: !2361, line: 155, column: 93)
!12371 = !DILocation(line: 157, column: 25, scope: !12370)
!12372 = !DILocation(line: 158, column: 51, scope: !12373)
!12373 = distinct !DILexicalBlock(scope: !12367, file: !2361, line: 157, column: 32)
!12374 = !DILocation(line: 162, column: 146, scope: !12355)
!12375 = !DILocation(line: 162, column: 25, scope: !12355)
!12376 = !DILocation(line: 163, column: 60, scope: !12377)
!12377 = distinct !DILexicalBlock(scope: !12355, file: !2361, line: 163, column: 29)
!12378 = !DILocation(line: 0, scope: !12377)
!12379 = !DILocation(line: 164, column: 51, scope: !12380)
!12380 = distinct !DILexicalBlock(scope: !12377, file: !2361, line: 163, column: 93)
!12381 = !DILocation(line: 165, column: 25, scope: !12380)
!12382 = !DILocation(line: 166, column: 51, scope: !12383)
!12383 = distinct !DILexicalBlock(scope: !12377, file: !2361, line: 165, column: 32)
!12384 = !DILocation(line: 170, column: 25, scope: !12355)
!12385 = !DILocation(line: 171, column: 25, scope: !12355)
!12386 = !DILocation(line: 176, column: 17, scope: !12387)
!12387 = distinct !DILexicalBlock(scope: !12388, file: !2361, line: 175, column: 31)
!12388 = distinct !DILexicalBlock(scope: !12290, file: !2361, line: 175, column: 17)
!12389 = !DILocation(line: 178, column: 146, scope: !12390)
!12390 = distinct !DILexicalBlock(scope: !12387, file: !2361, line: 176, column: 35)
!12391 = !DILocation(line: 178, column: 25, scope: !12390)
!12392 = !DILocation(line: 179, column: 25, scope: !12390)
!12393 = !DILocation(line: 181, column: 146, scope: !12390)
!12394 = !DILocation(line: 181, column: 25, scope: !12390)
!12395 = !DILocation(line: 182, column: 25, scope: !12390)
!12396 = !DILocation(line: 184, column: 146, scope: !12390)
!12397 = !DILocation(line: 184, column: 25, scope: !12390)
!12398 = !DILocation(line: 185, column: 25, scope: !12390)
!12399 = !DILocation(line: 187, column: 146, scope: !12390)
!12400 = !DILocation(line: 187, column: 25, scope: !12390)
!12401 = !DILocation(line: 188, column: 60, scope: !12402)
!12402 = distinct !DILexicalBlock(scope: !12390, file: !2361, line: 188, column: 29)
!12403 = !DILocation(line: 0, scope: !12402)
!12404 = !DILocation(line: 189, column: 51, scope: !12405)
!12405 = distinct !DILexicalBlock(scope: !12402, file: !2361, line: 188, column: 93)
!12406 = !DILocation(line: 190, column: 25, scope: !12405)
!12407 = !DILocation(line: 191, column: 51, scope: !12408)
!12408 = distinct !DILexicalBlock(scope: !12402, file: !2361, line: 190, column: 32)
!12409 = !DILocation(line: 195, column: 146, scope: !12390)
!12410 = !DILocation(line: 195, column: 25, scope: !12390)
!12411 = !DILocation(line: 196, column: 60, scope: !12412)
!12412 = distinct !DILexicalBlock(scope: !12390, file: !2361, line: 196, column: 29)
!12413 = !DILocation(line: 0, scope: !12412)
!12414 = !DILocation(line: 197, column: 51, scope: !12415)
!12415 = distinct !DILexicalBlock(scope: !12412, file: !2361, line: 196, column: 93)
!12416 = !DILocation(line: 198, column: 25, scope: !12415)
!12417 = !DILocation(line: 199, column: 51, scope: !12418)
!12418 = distinct !DILexicalBlock(scope: !12412, file: !2361, line: 198, column: 32)
!12419 = !DILocation(line: 203, column: 25, scope: !12390)
!12420 = !DILocation(line: 204, column: 25, scope: !12390)
!12421 = !DILocation(line: 208, column: 13, scope: !12290)
!12422 = !DILocation(line: 209, column: 13, scope: !12290)
!12423 = !DILocation(line: 210, column: 13, scope: !12290)
!12424 = !DILocation(line: 213, column: 13, scope: !12290)
!12425 = !DILocation(line: 215, column: 142, scope: !12426)
!12426 = distinct !DILexicalBlock(scope: !12290, file: !2361, line: 213, column: 31)
!12427 = !DILocation(line: 215, column: 21, scope: !12426)
!12428 = !DILocation(line: 216, column: 21, scope: !12426)
!12429 = !DILocation(line: 218, column: 142, scope: !12426)
!12430 = !DILocation(line: 218, column: 21, scope: !12426)
!12431 = !DILocation(line: 219, column: 21, scope: !12426)
!12432 = !DILocation(line: 221, column: 142, scope: !12426)
!12433 = !DILocation(line: 221, column: 21, scope: !12426)
!12434 = !DILocation(line: 222, column: 21, scope: !12426)
!12435 = !DILocation(line: 224, column: 142, scope: !12426)
!12436 = !DILocation(line: 224, column: 21, scope: !12426)
!12437 = !DILocation(line: 225, column: 21, scope: !12426)
!12438 = !DILocation(line: 227, column: 142, scope: !12426)
!12439 = !DILocation(line: 227, column: 21, scope: !12426)
!12440 = !DILocation(line: 228, column: 21, scope: !12426)
!12441 = !DILocation(line: 230, column: 142, scope: !12426)
!12442 = !DILocation(line: 230, column: 21, scope: !12426)
!12443 = !DILocation(line: 231, column: 21, scope: !12426)
!12444 = !DILocation(line: 233, column: 142, scope: !12426)
!12445 = !DILocation(line: 233, column: 21, scope: !12426)
!12446 = !DILocation(line: 234, column: 21, scope: !12426)
!12447 = !DILocation(line: 236, column: 142, scope: !12426)
!12448 = !DILocation(line: 236, column: 21, scope: !12426)
!12449 = !DILocation(line: 237, column: 21, scope: !12426)
!12450 = !DILocation(line: 239, column: 21, scope: !12426)
!12451 = !DILocation(line: 240, column: 21, scope: !12426)
!12452 = !DILocation(line: 245, column: 13, scope: !12290)
!12453 = !DILocation(line: 247, column: 142, scope: !12454)
!12454 = distinct !DILexicalBlock(scope: !12290, file: !2361, line: 245, column: 31)
!12455 = !DILocation(line: 247, column: 21, scope: !12454)
!12456 = !DILocation(line: 248, column: 21, scope: !12454)
!12457 = !DILocation(line: 250, column: 142, scope: !12454)
!12458 = !DILocation(line: 250, column: 21, scope: !12454)
!12459 = !DILocation(line: 251, column: 21, scope: !12454)
!12460 = !DILocation(line: 253, column: 142, scope: !12454)
!12461 = !DILocation(line: 253, column: 21, scope: !12454)
!12462 = !DILocation(line: 254, column: 21, scope: !12454)
!12463 = !DILocation(line: 256, column: 142, scope: !12454)
!12464 = !DILocation(line: 256, column: 21, scope: !12454)
!12465 = !DILocation(line: 257, column: 21, scope: !12454)
!12466 = !DILocation(line: 259, column: 142, scope: !12454)
!12467 = !DILocation(line: 259, column: 21, scope: !12454)
!12468 = !DILocation(line: 260, column: 21, scope: !12454)
!12469 = !DILocation(line: 262, column: 142, scope: !12454)
!12470 = !DILocation(line: 262, column: 21, scope: !12454)
!12471 = !DILocation(line: 263, column: 21, scope: !12454)
!12472 = !DILocation(line: 265, column: 21, scope: !12454)
!12473 = !DILocation(line: 266, column: 21, scope: !12454)
!12474 = !DILocation(line: 271, column: 13, scope: !12290)
!12475 = !DILocation(line: 273, column: 142, scope: !12476)
!12476 = distinct !DILexicalBlock(scope: !12290, file: !2361, line: 271, column: 31)
!12477 = !DILocation(line: 273, column: 21, scope: !12476)
!12478 = !DILocation(line: 274, column: 21, scope: !12476)
!12479 = !DILocation(line: 276, column: 142, scope: !12476)
!12480 = !DILocation(line: 276, column: 21, scope: !12476)
!12481 = !DILocation(line: 277, column: 21, scope: !12476)
!12482 = !DILocation(line: 279, column: 142, scope: !12476)
!12483 = !DILocation(line: 279, column: 21, scope: !12476)
!12484 = !DILocation(line: 280, column: 21, scope: !12476)
!12485 = !DILocation(line: 282, column: 142, scope: !12476)
!12486 = !DILocation(line: 282, column: 21, scope: !12476)
!12487 = !DILocation(line: 283, column: 21, scope: !12476)
!12488 = !DILocation(line: 285, column: 142, scope: !12476)
!12489 = !DILocation(line: 285, column: 21, scope: !12476)
!12490 = !DILocation(line: 286, column: 21, scope: !12476)
!12491 = !DILocation(line: 288, column: 21, scope: !12476)
!12492 = !DILocation(line: 289, column: 21, scope: !12476)
!12493 = !DILocation(line: 294, column: 13, scope: !12290)
!12494 = !DILocation(line: 296, column: 142, scope: !12495)
!12495 = distinct !DILexicalBlock(scope: !12290, file: !2361, line: 294, column: 31)
!12496 = !DILocation(line: 296, column: 21, scope: !12495)
!12497 = !DILocation(line: 297, column: 21, scope: !12495)
!12498 = !DILocation(line: 299, column: 142, scope: !12495)
!12499 = !DILocation(line: 299, column: 21, scope: !12495)
!12500 = !DILocation(line: 300, column: 21, scope: !12495)
!12501 = !DILocation(line: 302, column: 142, scope: !12495)
!12502 = !DILocation(line: 302, column: 21, scope: !12495)
!12503 = !DILocation(line: 303, column: 21, scope: !12495)
!12504 = !DILocation(line: 305, column: 142, scope: !12495)
!12505 = !DILocation(line: 305, column: 21, scope: !12495)
!12506 = !DILocation(line: 306, column: 21, scope: !12495)
!12507 = !DILocation(line: 308, column: 142, scope: !12495)
!12508 = !DILocation(line: 308, column: 21, scope: !12495)
!12509 = !DILocation(line: 309, column: 21, scope: !12495)
!12510 = !DILocation(line: 311, column: 21, scope: !12495)
!12511 = !DILocation(line: 312, column: 21, scope: !12495)
!12512 = !DILocation(line: 317, column: 13, scope: !12290)
!12513 = !DILocation(line: 319, column: 142, scope: !12514)
!12514 = distinct !DILexicalBlock(scope: !12290, file: !2361, line: 317, column: 31)
!12515 = !DILocation(line: 319, column: 21, scope: !12514)
!12516 = !DILocation(line: 320, column: 21, scope: !12514)
!12517 = !DILocation(line: 322, column: 142, scope: !12514)
!12518 = !DILocation(line: 322, column: 21, scope: !12514)
!12519 = !DILocation(line: 323, column: 21, scope: !12514)
!12520 = !DILocation(line: 325, column: 142, scope: !12514)
!12521 = !DILocation(line: 325, column: 21, scope: !12514)
!12522 = !DILocation(line: 326, column: 21, scope: !12514)
!12523 = !DILocation(line: 328, column: 142, scope: !12514)
!12524 = !DILocation(line: 328, column: 21, scope: !12514)
!12525 = !DILocation(line: 329, column: 21, scope: !12514)
!12526 = !DILocation(line: 331, column: 142, scope: !12514)
!12527 = !DILocation(line: 331, column: 21, scope: !12514)
!12528 = !DILocation(line: 332, column: 21, scope: !12514)
!12529 = !DILocation(line: 334, column: 21, scope: !12514)
!12530 = !DILocation(line: 335, column: 21, scope: !12514)
!12531 = !DILocation(line: 340, column: 13, scope: !12290)
!12532 = !DILocation(line: 342, column: 142, scope: !12533)
!12533 = distinct !DILexicalBlock(scope: !12290, file: !2361, line: 340, column: 31)
!12534 = !DILocation(line: 342, column: 21, scope: !12533)
!12535 = !DILocation(line: 343, column: 21, scope: !12533)
!12536 = !DILocation(line: 345, column: 142, scope: !12533)
!12537 = !DILocation(line: 345, column: 21, scope: !12533)
!12538 = !DILocation(line: 346, column: 21, scope: !12533)
!12539 = !DILocation(line: 348, column: 142, scope: !12533)
!12540 = !DILocation(line: 348, column: 21, scope: !12533)
!12541 = !DILocation(line: 349, column: 21, scope: !12533)
!12542 = !DILocation(line: 351, column: 142, scope: !12533)
!12543 = !DILocation(line: 351, column: 21, scope: !12533)
!12544 = !DILocation(line: 352, column: 21, scope: !12533)
!12545 = !DILocation(line: 354, column: 142, scope: !12533)
!12546 = !DILocation(line: 354, column: 21, scope: !12533)
!12547 = !DILocation(line: 355, column: 21, scope: !12533)
!12548 = !DILocation(line: 357, column: 21, scope: !12533)
!12549 = !DILocation(line: 358, column: 21, scope: !12533)
!12550 = !DILocation(line: 363, column: 135, scope: !12290)
!12551 = !DILocation(line: 363, column: 13, scope: !12290)
!12552 = !DILocation(line: 364, column: 13, scope: !12290)
!12553 = !DILocation(line: 367, column: 135, scope: !12290)
!12554 = !DILocation(line: 367, column: 13, scope: !12290)
!12555 = !DILocation(line: 368, column: 13, scope: !12290)
!12556 = !DILocation(line: 371, column: 13, scope: !12290)
!12557 = !DILocation(line: 372, column: 13, scope: !12290)
!12558 = !DILocation(line: 374, column: 5, scope: !12276)
!12559 = !DILocation(line: 376, column: 5, scope: !12276)
!12560 = !DILocation(line: 377, column: 1, scope: !12276)
!12561 = distinct !DISubprogram(name: "pmu_set_vrc_key_mt6385", scope: !2361, file: !2361, line: 1119, type: !12562, scopeLine: 1120, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2360, retainedNodes: !12565)
!12562 = !DISubroutineType(types: !12563)
!12563 = !{null, !12564}
!12564 = !DIDerivedType(tag: DW_TAG_typedef, name: "PMIC_SET_KEY", file: !2168, line: 121, baseType: !2167)
!12565 = !{!12566}
!12566 = !DILocalVariable(name: "mode", arg: 1, scope: !12561, file: !2361, line: 1119, type: !12564)
!12567 = !DILocation(line: 0, scope: !12561)
!12568 = !DILocation(line: 1121, column: 13, scope: !12569)
!12569 = distinct !DILexicalBlock(scope: !12561, file: !2361, line: 1121, column: 8)
!12570 = !DILocation(line: 0, scope: !12569)
!12571 = !DILocation(line: 1128, column: 1, scope: !12561)
!12572 = distinct !DISubprogram(name: "pmu_set_ovr_mode_mt6385", scope: !2361, file: !2361, line: 1109, type: !12573, scopeLine: 1110, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2360, retainedNodes: !12576)
!12573 = !DISubroutineType(types: !12574)
!12574 = !{null, !12575}
!12575 = !DIDerivedType(tag: DW_TAG_typedef, name: "PMIC_SET_OVR_MODE", file: !2168, line: 116, baseType: !2172)
!12576 = !{!12577}
!12577 = !DILocalVariable(name: "mode", arg: 1, scope: !12572, file: !2361, line: 1109, type: !12575)
!12578 = !DILocation(line: 0, scope: !12572)
!12579 = !DILocation(line: 1111, column: 13, scope: !12580)
!12580 = distinct !DILexicalBlock(scope: !12572, file: !2361, line: 1111, column: 8)
!12581 = !DILocation(line: 1111, column: 8, scope: !12572)
!12582 = !DILocation(line: 1112, column: 9, scope: !12583)
!12583 = distinct !DILexicalBlock(scope: !12580, file: !2361, line: 1111, column: 37)
!12584 = !DILocation(line: 1114, column: 5, scope: !12583)
!12585 = !DILocation(line: 0, scope: !12580)
!12586 = !DILocation(line: 1117, column: 1, scope: !12572)
!12587 = distinct !DISubprogram(name: "PMIC_VR_SLEEP_WKUP_CONFIG", scope: !2361, file: !2361, line: 380, type: !12588, scopeLine: 381, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2360, retainedNodes: !12590)
!12588 = !DISubroutineType(types: !12589)
!12589 = !{null, !12279, !2314, !2316, !7}
!12590 = !{!12591, !12592, !12593, !12594, !12595, !12596}
!12591 = !DILocalVariable(name: "vr_name", arg: 1, scope: !12587, file: !2361, line: 380, type: !12279)
!12592 = !DILocalVariable(name: "psi_mode", arg: 2, scope: !12587, file: !2361, line: 380, type: !2314)
!12593 = !DILocalVariable(name: "ctl_mode", arg: 3, scope: !12587, file: !2361, line: 380, type: !2316)
!12594 = !DILocalVariable(name: "wk_slot", arg: 4, scope: !12587, file: !2361, line: 380, type: !7)
!12595 = !DILocalVariable(name: "wk_seq_len", scope: !12587, file: !2361, line: 388, type: !7)
!12596 = !DILocalVariable(name: "wk_slot_final", scope: !12587, file: !2361, line: 389, type: !7)
!12597 = !DILocation(line: 0, scope: !12587)
!12598 = !DILocation(line: 392, column: 5, scope: !12587)
!12599 = !DILocation(line: 394, column: 26, scope: !12600)
!12600 = distinct !DILexicalBlock(scope: !12587, file: !2361, line: 392, column: 23)
!12601 = !DILocation(line: 395, column: 13, scope: !12600)
!12602 = !DILocation(line: 397, column: 26, scope: !12600)
!12603 = !DILocation(line: 398, column: 13, scope: !12600)
!12604 = !DILocation(line: 400, column: 13, scope: !12600)
!12605 = !DILocation(line: 401, column: 13, scope: !12600)
!12606 = !DILocation(line: 404, column: 17, scope: !12607)
!12607 = distinct !DILexicalBlock(scope: !12587, file: !2361, line: 404, column: 9)
!12608 = !DILocation(line: 404, column: 9, scope: !12587)
!12609 = !DILocation(line: 405, column: 9, scope: !12610)
!12610 = distinct !DILexicalBlock(scope: !12607, file: !2361, line: 404, column: 31)
!12611 = !DILocation(line: 406, column: 5, scope: !12610)
!12612 = !DILocation(line: 408, column: 5, scope: !12587)
!12613 = !DILocation(line: 414, column: 13, scope: !12614)
!12614 = distinct !DILexicalBlock(scope: !12587, file: !2361, line: 408, column: 23)
!12615 = !DILocation(line: 417, column: 13, scope: !12614)
!12616 = !DILocation(line: 419, column: 13, scope: !12614)
!12617 = !DILocation(line: 420, column: 13, scope: !12614)
!12618 = !DILocation(line: 426, column: 5, scope: !12587)
!12619 = !DILocation(line: 427, column: 5, scope: !12587)
!12620 = !DILocation(line: 429, column: 5, scope: !12587)
!12621 = !DILocation(line: 431, column: 13, scope: !12622)
!12622 = distinct !DILexicalBlock(scope: !12587, file: !2361, line: 429, column: 22)
!12623 = !DILocation(line: 432, column: 13, scope: !12622)
!12624 = !DILocation(line: 435, column: 13, scope: !12622)
!12625 = !DILocation(line: 436, column: 13, scope: !12622)
!12626 = !DILocation(line: 439, column: 13, scope: !12622)
!12627 = !DILocation(line: 441, column: 119, scope: !12628)
!12628 = distinct !DILexicalBlock(scope: !12622, file: !2361, line: 439, column: 31)
!12629 = !DILocation(line: 441, column: 21, scope: !12628)
!12630 = !DILocation(line: 442, column: 21, scope: !12628)
!12631 = !DILocation(line: 444, column: 119, scope: !12628)
!12632 = !DILocation(line: 444, column: 21, scope: !12628)
!12633 = !DILocation(line: 445, column: 21, scope: !12628)
!12634 = !DILocation(line: 447, column: 21, scope: !12628)
!12635 = !DILocation(line: 448, column: 21, scope: !12628)
!12636 = !DILocation(line: 453, column: 31, scope: !12637)
!12637 = distinct !DILexicalBlock(scope: !12622, file: !2361, line: 453, column: 17)
!12638 = !DILocation(line: 453, column: 17, scope: !12622)
!12639 = !DILocation(line: 0, scope: !12637)
!12640 = !DILocation(line: 458, column: 13, scope: !12622)
!12641 = !DILocation(line: 460, column: 131, scope: !12642)
!12642 = distinct !DILexicalBlock(scope: !12622, file: !2361, line: 458, column: 31)
!12643 = !DILocation(line: 460, column: 21, scope: !12642)
!12644 = !DILocation(line: 461, column: 21, scope: !12642)
!12645 = !DILocation(line: 463, column: 131, scope: !12642)
!12646 = !DILocation(line: 463, column: 21, scope: !12642)
!12647 = !DILocation(line: 464, column: 21, scope: !12642)
!12648 = !DILocation(line: 466, column: 21, scope: !12642)
!12649 = !DILocation(line: 467, column: 21, scope: !12642)
!12650 = !DILocation(line: 472, column: 13, scope: !12622)
!12651 = !DILocation(line: 473, column: 13, scope: !12622)
!12652 = !DILocation(line: 476, column: 49, scope: !12653)
!12653 = distinct !DILexicalBlock(scope: !12622, file: !2361, line: 476, column: 17)
!12654 = !DILocation(line: 478, column: 17, scope: !12655)
!12655 = distinct !DILexicalBlock(scope: !12653, file: !2361, line: 476, column: 88)
!12656 = !DILocation(line: 479, column: 17, scope: !12655)
!12657 = !DILocation(line: 480, column: 17, scope: !12655)
!12658 = !DILocation(line: 482, column: 25, scope: !12659)
!12659 = distinct !DILexicalBlock(scope: !12655, file: !2361, line: 480, column: 35)
!12660 = !DILocation(line: 483, column: 25, scope: !12659)
!12661 = !DILocation(line: 485, column: 25, scope: !12659)
!12662 = !DILocation(line: 486, column: 25, scope: !12659)
!12663 = !DILocation(line: 488, column: 25, scope: !12659)
!12664 = !DILocation(line: 489, column: 25, scope: !12659)
!12665 = !DILocation(line: 492, column: 17, scope: !12655)
!12666 = !DILocation(line: 493, column: 17, scope: !12655)
!12667 = !DILocation(line: 494, column: 13, scope: !12655)
!12668 = !DILocation(line: 498, column: 13, scope: !12622)
!12669 = !DILocation(line: 500, column: 131, scope: !12670)
!12670 = distinct !DILexicalBlock(scope: !12622, file: !2361, line: 498, column: 31)
!12671 = !DILocation(line: 500, column: 21, scope: !12670)
!12672 = !DILocation(line: 501, column: 21, scope: !12670)
!12673 = !DILocation(line: 503, column: 131, scope: !12670)
!12674 = !DILocation(line: 503, column: 21, scope: !12670)
!12675 = !DILocation(line: 504, column: 21, scope: !12670)
!12676 = !DILocation(line: 506, column: 21, scope: !12670)
!12677 = !DILocation(line: 507, column: 21, scope: !12670)
!12678 = !DILocation(line: 512, column: 31, scope: !12679)
!12679 = distinct !DILexicalBlock(scope: !12622, file: !2361, line: 512, column: 17)
!12680 = !DILocation(line: 512, column: 17, scope: !12622)
!12681 = !DILocation(line: 0, scope: !12679)
!12682 = !DILocation(line: 517, column: 31, scope: !12683)
!12683 = distinct !DILexicalBlock(scope: !12622, file: !2361, line: 517, column: 17)
!12684 = !DILocation(line: 517, column: 17, scope: !12622)
!12685 = !DILocation(line: 519, column: 17, scope: !12686)
!12686 = distinct !DILexicalBlock(scope: !12683, file: !2361, line: 517, column: 37)
!12687 = !DILocation(line: 520, column: 13, scope: !12686)
!12688 = !DILocation(line: 521, column: 13, scope: !12622)
!12689 = !DILocation(line: 523, column: 131, scope: !12690)
!12690 = distinct !DILexicalBlock(scope: !12622, file: !2361, line: 521, column: 31)
!12691 = !DILocation(line: 523, column: 21, scope: !12690)
!12692 = !DILocation(line: 524, column: 21, scope: !12690)
!12693 = !DILocation(line: 526, column: 131, scope: !12690)
!12694 = !DILocation(line: 526, column: 21, scope: !12690)
!12695 = !DILocation(line: 527, column: 21, scope: !12690)
!12696 = !DILocation(line: 529, column: 21, scope: !12690)
!12697 = !DILocation(line: 530, column: 21, scope: !12690)
!12698 = !DILocation(line: 535, column: 31, scope: !12699)
!12699 = distinct !DILexicalBlock(scope: !12622, file: !2361, line: 535, column: 17)
!12700 = !DILocation(line: 535, column: 17, scope: !12622)
!12701 = !DILocation(line: 0, scope: !12699)
!12702 = !DILocation(line: 540, column: 31, scope: !12703)
!12703 = distinct !DILexicalBlock(scope: !12622, file: !2361, line: 540, column: 17)
!12704 = !DILocation(line: 540, column: 17, scope: !12622)
!12705 = !DILocation(line: 542, column: 17, scope: !12706)
!12706 = distinct !DILexicalBlock(scope: !12703, file: !2361, line: 540, column: 37)
!12707 = !DILocation(line: 543, column: 13, scope: !12706)
!12708 = !DILocation(line: 544, column: 13, scope: !12622)
!12709 = !DILocation(line: 546, column: 131, scope: !12710)
!12710 = distinct !DILexicalBlock(scope: !12622, file: !2361, line: 544, column: 31)
!12711 = !DILocation(line: 546, column: 21, scope: !12710)
!12712 = !DILocation(line: 547, column: 21, scope: !12710)
!12713 = !DILocation(line: 549, column: 131, scope: !12710)
!12714 = !DILocation(line: 549, column: 21, scope: !12710)
!12715 = !DILocation(line: 550, column: 21, scope: !12710)
!12716 = !DILocation(line: 552, column: 21, scope: !12710)
!12717 = !DILocation(line: 553, column: 21, scope: !12710)
!12718 = !DILocation(line: 558, column: 31, scope: !12719)
!12719 = distinct !DILexicalBlock(scope: !12622, file: !2361, line: 558, column: 17)
!12720 = !DILocation(line: 558, column: 17, scope: !12622)
!12721 = !DILocation(line: 0, scope: !12719)
!12722 = !DILocation(line: 563, column: 31, scope: !12723)
!12723 = distinct !DILexicalBlock(scope: !12622, file: !2361, line: 563, column: 17)
!12724 = !DILocation(line: 563, column: 17, scope: !12622)
!12725 = !DILocation(line: 565, column: 17, scope: !12726)
!12726 = distinct !DILexicalBlock(scope: !12723, file: !2361, line: 563, column: 37)
!12727 = !DILocation(line: 566, column: 13, scope: !12726)
!12728 = !DILocation(line: 567, column: 13, scope: !12622)
!12729 = !DILocation(line: 569, column: 127, scope: !12730)
!12730 = distinct !DILexicalBlock(scope: !12622, file: !2361, line: 567, column: 31)
!12731 = !DILocation(line: 569, column: 21, scope: !12730)
!12732 = !DILocation(line: 570, column: 21, scope: !12730)
!12733 = !DILocation(line: 572, column: 127, scope: !12730)
!12734 = !DILocation(line: 572, column: 21, scope: !12730)
!12735 = !DILocation(line: 573, column: 21, scope: !12730)
!12736 = !DILocation(line: 575, column: 21, scope: !12730)
!12737 = !DILocation(line: 576, column: 21, scope: !12730)
!12738 = !DILocation(line: 581, column: 13, scope: !12622)
!12739 = !DILocation(line: 582, column: 13, scope: !12622)
!12740 = !DILocation(line: 585, column: 13, scope: !12622)
!12741 = !DILocation(line: 586, column: 13, scope: !12622)
!12742 = !DILocation(line: 589, column: 31, scope: !12743)
!12743 = distinct !DILexicalBlock(scope: !12622, file: !2361, line: 589, column: 17)
!12744 = !DILocation(line: 589, column: 17, scope: !12622)
!12745 = !DILocation(line: 0, scope: !12743)
!12746 = !DILocation(line: 594, column: 31, scope: !12747)
!12747 = distinct !DILexicalBlock(scope: !12622, file: !2361, line: 594, column: 17)
!12748 = !DILocation(line: 594, column: 17, scope: !12622)
!12749 = !DILocation(line: 596, column: 17, scope: !12750)
!12750 = distinct !DILexicalBlock(scope: !12747, file: !2361, line: 594, column: 37)
!12751 = !DILocation(line: 597, column: 13, scope: !12750)
!12752 = !DILocation(line: 598, column: 13, scope: !12622)
!12753 = !DILocation(line: 600, column: 127, scope: !12754)
!12754 = distinct !DILexicalBlock(scope: !12622, file: !2361, line: 598, column: 31)
!12755 = !DILocation(line: 600, column: 21, scope: !12754)
!12756 = !DILocation(line: 601, column: 21, scope: !12754)
!12757 = !DILocation(line: 603, column: 127, scope: !12754)
!12758 = !DILocation(line: 603, column: 21, scope: !12754)
!12759 = !DILocation(line: 604, column: 21, scope: !12754)
!12760 = !DILocation(line: 606, column: 21, scope: !12754)
!12761 = !DILocation(line: 607, column: 21, scope: !12754)
!12762 = !DILocation(line: 612, column: 31, scope: !12763)
!12763 = distinct !DILexicalBlock(scope: !12622, file: !2361, line: 612, column: 17)
!12764 = !DILocation(line: 612, column: 17, scope: !12622)
!12765 = !DILocation(line: 0, scope: !12763)
!12766 = !DILocation(line: 617, column: 31, scope: !12767)
!12767 = distinct !DILexicalBlock(scope: !12622, file: !2361, line: 617, column: 17)
!12768 = !DILocation(line: 617, column: 17, scope: !12622)
!12769 = !DILocation(line: 619, column: 17, scope: !12770)
!12770 = distinct !DILexicalBlock(scope: !12767, file: !2361, line: 617, column: 37)
!12771 = !DILocation(line: 620, column: 13, scope: !12770)
!12772 = !DILocation(line: 621, column: 13, scope: !12622)
!12773 = !DILocation(line: 623, column: 127, scope: !12774)
!12774 = distinct !DILexicalBlock(scope: !12622, file: !2361, line: 621, column: 31)
!12775 = !DILocation(line: 623, column: 21, scope: !12774)
!12776 = !DILocation(line: 624, column: 21, scope: !12774)
!12777 = !DILocation(line: 626, column: 127, scope: !12774)
!12778 = !DILocation(line: 626, column: 21, scope: !12774)
!12779 = !DILocation(line: 627, column: 21, scope: !12774)
!12780 = !DILocation(line: 629, column: 21, scope: !12774)
!12781 = !DILocation(line: 630, column: 21, scope: !12774)
!12782 = !DILocation(line: 635, column: 13, scope: !12622)
!12783 = !DILocation(line: 636, column: 13, scope: !12622)
!12784 = !DILocation(line: 639, column: 13, scope: !12622)
!12785 = !DILocation(line: 640, column: 13, scope: !12622)
!12786 = !DILocation(line: 644, column: 5, scope: !12587)
!12787 = !DILocation(line: 645, column: 5, scope: !12587)
!12788 = !DILocation(line: 646, column: 1, scope: !12587)
!12789 = distinct !DISubprogram(name: "PMIC_VR_CONTROL", scope: !2361, file: !2361, line: 648, type: !12790, scopeLine: 649, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2360, retainedNodes: !12792)
!12790 = !DISubroutineType(types: !12791)
!12791 = !{null, !12279, !2317}
!12792 = !{!12793, !12794, !12795}
!12793 = !DILocalVariable(name: "vr_name", arg: 1, scope: !12789, file: !2361, line: 648, type: !12279)
!12794 = !DILocalVariable(name: "enable", arg: 2, scope: !12789, file: !2361, line: 648, type: !2317)
!12795 = !DILocalVariable(name: "poll_stb_b", scope: !12789, file: !2361, line: 650, type: !7)
!12796 = !DILocation(line: 0, scope: !12789)
!12797 = !DILocation(line: 652, column: 9, scope: !12798)
!12798 = distinct !DILexicalBlock(scope: !12789, file: !2361, line: 652, column: 9)
!12799 = !DILocation(line: 657, column: 5, scope: !12789)
!12800 = !DILocation(line: 658, column: 5, scope: !12789)
!12801 = !DILocation(line: 660, column: 5, scope: !12789)
!12802 = !DILocation(line: 662, column: 13, scope: !12803)
!12803 = distinct !DILexicalBlock(scope: !12789, file: !2361, line: 660, column: 22)
!12804 = !DILocation(line: 663, column: 13, scope: !12803)
!12805 = !DILocation(line: 666, column: 13, scope: !12803)
!12806 = !DILocation(line: 667, column: 13, scope: !12803)
!12807 = !DILocation(line: 670, column: 109, scope: !12803)
!12808 = !DILocation(line: 670, column: 13, scope: !12803)
!12809 = !DILocation(line: 671, column: 13, scope: !12803)
!12810 = !DILocation(line: 672, column: 30, scope: !12811)
!12811 = distinct !DILexicalBlock(scope: !12803, file: !2361, line: 671, column: 37)
!12812 = !DILocation(line: 671, column: 31, scope: !12803)
!12813 = distinct !{!12813, !12809, !12814}
!12814 = !DILocation(line: 673, column: 13, scope: !12803)
!12815 = !DILocation(line: 677, column: 24, scope: !12816)
!12816 = distinct !DILexicalBlock(scope: !12803, file: !2361, line: 677, column: 17)
!12817 = !DILocation(line: 677, column: 17, scope: !12803)
!12818 = !DILocation(line: 0, scope: !12816)
!12819 = !DILocation(line: 682, column: 109, scope: !12803)
!12820 = !DILocation(line: 682, column: 13, scope: !12803)
!12821 = !DILocation(line: 683, column: 13, scope: !12803)
!12822 = !DILocation(line: 684, column: 30, scope: !12823)
!12823 = distinct !DILexicalBlock(scope: !12803, file: !2361, line: 683, column: 37)
!12824 = !DILocation(line: 683, column: 31, scope: !12803)
!12825 = distinct !{!12825, !12821, !12826}
!12826 = !DILocation(line: 685, column: 13, scope: !12803)
!12827 = !DILocation(line: 689, column: 13, scope: !12803)
!12828 = !DILocation(line: 690, column: 13, scope: !12803)
!12829 = !DILocation(line: 693, column: 109, scope: !12803)
!12830 = !DILocation(line: 693, column: 13, scope: !12803)
!12831 = !DILocation(line: 694, column: 13, scope: !12803)
!12832 = !DILocation(line: 697, column: 109, scope: !12803)
!12833 = !DILocation(line: 697, column: 13, scope: !12803)
!12834 = !DILocation(line: 698, column: 13, scope: !12803)
!12835 = !DILocation(line: 699, column: 30, scope: !12836)
!12836 = distinct !DILexicalBlock(scope: !12803, file: !2361, line: 698, column: 37)
!12837 = !DILocation(line: 698, column: 31, scope: !12803)
!12838 = distinct !{!12838, !12834, !12839}
!12839 = !DILocation(line: 700, column: 13, scope: !12803)
!12840 = !DILocation(line: 704, column: 24, scope: !12841)
!12841 = distinct !DILexicalBlock(scope: !12803, file: !2361, line: 704, column: 17)
!12842 = !DILocation(line: 704, column: 17, scope: !12803)
!12843 = !DILocation(line: 0, scope: !12841)
!12844 = !DILocation(line: 709, column: 109, scope: !12803)
!12845 = !DILocation(line: 709, column: 13, scope: !12803)
!12846 = !DILocation(line: 710, column: 13, scope: !12803)
!12847 = !DILocation(line: 711, column: 30, scope: !12848)
!12848 = distinct !DILexicalBlock(scope: !12803, file: !2361, line: 710, column: 37)
!12849 = !DILocation(line: 710, column: 31, scope: !12803)
!12850 = distinct !{!12850, !12846, !12851}
!12851 = !DILocation(line: 712, column: 13, scope: !12803)
!12852 = !DILocation(line: 716, column: 24, scope: !12853)
!12853 = distinct !DILexicalBlock(scope: !12803, file: !2361, line: 716, column: 17)
!12854 = !DILocation(line: 716, column: 17, scope: !12803)
!12855 = !DILocation(line: 0, scope: !12853)
!12856 = !DILocation(line: 721, column: 109, scope: !12803)
!12857 = !DILocation(line: 721, column: 13, scope: !12803)
!12858 = !DILocation(line: 722, column: 13, scope: !12803)
!12859 = !DILocation(line: 723, column: 30, scope: !12860)
!12860 = distinct !DILexicalBlock(scope: !12803, file: !2361, line: 722, column: 37)
!12861 = !DILocation(line: 722, column: 31, scope: !12803)
!12862 = distinct !{!12862, !12858, !12863}
!12863 = !DILocation(line: 724, column: 13, scope: !12803)
!12864 = !DILocation(line: 728, column: 24, scope: !12865)
!12865 = distinct !DILexicalBlock(scope: !12803, file: !2361, line: 728, column: 17)
!12866 = !DILocation(line: 728, column: 17, scope: !12803)
!12867 = !DILocation(line: 0, scope: !12865)
!12868 = !DILocation(line: 733, column: 109, scope: !12803)
!12869 = !DILocation(line: 733, column: 13, scope: !12803)
!12870 = !DILocation(line: 734, column: 13, scope: !12803)
!12871 = !DILocation(line: 735, column: 30, scope: !12872)
!12872 = distinct !DILexicalBlock(scope: !12803, file: !2361, line: 734, column: 37)
!12873 = !DILocation(line: 734, column: 31, scope: !12803)
!12874 = distinct !{!12874, !12870, !12875}
!12875 = !DILocation(line: 736, column: 13, scope: !12803)
!12876 = !DILocation(line: 740, column: 24, scope: !12877)
!12877 = distinct !DILexicalBlock(scope: !12803, file: !2361, line: 740, column: 17)
!12878 = !DILocation(line: 740, column: 17, scope: !12803)
!12879 = !DILocation(line: 0, scope: !12877)
!12880 = !DILocation(line: 745, column: 109, scope: !12803)
!12881 = !DILocation(line: 745, column: 13, scope: !12803)
!12882 = !DILocation(line: 746, column: 13, scope: !12803)
!12883 = !DILocation(line: 747, column: 30, scope: !12884)
!12884 = distinct !DILexicalBlock(scope: !12803, file: !2361, line: 746, column: 37)
!12885 = !DILocation(line: 746, column: 31, scope: !12803)
!12886 = distinct !{!12886, !12882, !12887}
!12887 = !DILocation(line: 748, column: 13, scope: !12803)
!12888 = !DILocation(line: 752, column: 24, scope: !12889)
!12889 = distinct !DILexicalBlock(scope: !12803, file: !2361, line: 752, column: 17)
!12890 = !DILocation(line: 752, column: 17, scope: !12803)
!12891 = !DILocation(line: 0, scope: !12889)
!12892 = !DILocation(line: 757, column: 109, scope: !12803)
!12893 = !DILocation(line: 757, column: 13, scope: !12803)
!12894 = !DILocation(line: 758, column: 13, scope: !12803)
!12895 = !DILocation(line: 759, column: 30, scope: !12896)
!12896 = distinct !DILexicalBlock(scope: !12803, file: !2361, line: 758, column: 37)
!12897 = !DILocation(line: 758, column: 31, scope: !12803)
!12898 = distinct !{!12898, !12894, !12899}
!12899 = !DILocation(line: 760, column: 13, scope: !12803)
!12900 = !DILocation(line: 764, column: 24, scope: !12901)
!12901 = distinct !DILexicalBlock(scope: !12803, file: !2361, line: 764, column: 17)
!12902 = !DILocation(line: 764, column: 17, scope: !12803)
!12903 = !DILocation(line: 0, scope: !12901)
!12904 = !DILocation(line: 769, column: 106, scope: !12803)
!12905 = !DILocation(line: 769, column: 13, scope: !12803)
!12906 = !DILocation(line: 770, column: 13, scope: !12803)
!12907 = !DILocation(line: 773, column: 24, scope: !12908)
!12908 = distinct !DILexicalBlock(scope: !12803, file: !2361, line: 773, column: 17)
!12909 = !DILocation(line: 773, column: 17, scope: !12803)
!12910 = !DILocation(line: 0, scope: !12908)
!12911 = !DILocation(line: 778, column: 109, scope: !12803)
!12912 = !DILocation(line: 778, column: 13, scope: !12803)
!12913 = !DILocation(line: 779, column: 13, scope: !12803)
!12914 = !DILocation(line: 782, column: 24, scope: !12915)
!12915 = distinct !DILexicalBlock(scope: !12803, file: !2361, line: 782, column: 17)
!12916 = !DILocation(line: 782, column: 17, scope: !12803)
!12917 = !DILocation(line: 0, scope: !12915)
!12918 = !DILocation(line: 787, column: 109, scope: !12803)
!12919 = !DILocation(line: 787, column: 13, scope: !12803)
!12920 = !DILocation(line: 788, column: 13, scope: !12803)
!12921 = !DILocation(line: 791, column: 13, scope: !12803)
!12922 = !DILocation(line: 792, column: 13, scope: !12803)
!12923 = !DILocation(line: 796, column: 5, scope: !12789)
!12924 = !DILocation(line: 797, column: 5, scope: !12789)
!12925 = !DILocation(line: 798, column: 1, scope: !12789)
!12926 = distinct !DISubprogram(name: "PMIC_VCORE_VOSEL_CONFIG", scope: !2361, file: !2361, line: 800, type: !12927, scopeLine: 801, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2360, retainedNodes: !12929)
!12927 = !DISubroutineType(types: !12928)
!12928 = !{null, !2314, !2388}
!12929 = !{!12930, !12931, !12932, !12933}
!12930 = !DILocalVariable(name: "psi_mode", arg: 1, scope: !12926, file: !2361, line: 800, type: !2314)
!12931 = !DILocalVariable(name: "vcore_vosel", arg: 2, scope: !12926, file: !2361, line: 800, type: !2388)
!12932 = !DILocalVariable(name: "vcbuck_voval", scope: !12926, file: !2361, line: 803, type: !2431)
!12933 = !DILocalVariable(name: "vc_ldo_vosel", scope: !12926, file: !2361, line: 804, type: !2431)
!12934 = !DILocation(line: 0, scope: !12926)
!12935 = !DILocation(line: 803, column: 9, scope: !12926)
!12936 = !DILocation(line: 804, column: 9, scope: !12926)
!12937 = !DILocation(line: 806, column: 5, scope: !12926)
!12938 = !DILocation(line: 807, column: 5, scope: !12926)
!12939 = !DILocation(line: 808, column: 5, scope: !12926)
!12940 = !DILocation(line: 809, column: 5, scope: !12926)
!12941 = !DILocation(line: 811, column: 137, scope: !12942)
!12942 = distinct !DILexicalBlock(scope: !12926, file: !2361, line: 809, column: 23)
!12943 = !DILocation(line: 811, column: 13, scope: !12942)
!12944 = !DILocation(line: 812, column: 137, scope: !12942)
!12945 = !DILocation(line: 812, column: 13, scope: !12942)
!12946 = !DILocation(line: 813, column: 13, scope: !12942)
!12947 = !DILocation(line: 816, column: 137, scope: !12942)
!12948 = !DILocation(line: 816, column: 13, scope: !12942)
!12949 = !DILocation(line: 817, column: 137, scope: !12942)
!12950 = !DILocation(line: 817, column: 13, scope: !12942)
!12951 = !DILocation(line: 818, column: 13, scope: !12942)
!12952 = !DILocation(line: 821, column: 137, scope: !12942)
!12953 = !DILocation(line: 821, column: 13, scope: !12942)
!12954 = !DILocation(line: 822, column: 137, scope: !12942)
!12955 = !DILocation(line: 822, column: 13, scope: !12942)
!12956 = !DILocation(line: 823, column: 13, scope: !12942)
!12957 = !DILocation(line: 826, column: 137, scope: !12942)
!12958 = !DILocation(line: 826, column: 13, scope: !12942)
!12959 = !DILocation(line: 827, column: 13, scope: !12942)
!12960 = !DILocation(line: 830, column: 13, scope: !12942)
!12961 = !DILocation(line: 831, column: 13, scope: !12942)
!12962 = !DILocation(line: 833, column: 5, scope: !12926)
!12963 = !DILocation(line: 834, column: 5, scope: !12926)
!12964 = !DILocation(line: 835, column: 5, scope: !12926)
!12965 = !DILocation(line: 836, column: 1, scope: !12926)
!12966 = distinct !DISubprogram(name: "PMIC_VR_VOSEL_INIT_CONFIG", scope: !2361, file: !2361, line: 838, type: !12967, scopeLine: 839, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2360, retainedNodes: !12970)
!12967 = !DISubroutineType(types: !12968)
!12968 = !{null, !12279, !12969}
!12969 = !DIDerivedType(tag: DW_TAG_typedef, name: "PMIC_LDO_VOSEL", file: !2168, line: 111, baseType: !2373)
!12970 = !{!12971, !12972, !12973}
!12971 = !DILocalVariable(name: "vr_name", arg: 1, scope: !12966, file: !2361, line: 838, type: !12279)
!12972 = !DILocalVariable(name: "ldo_vosel", arg: 2, scope: !12966, file: !2361, line: 838, type: !12969)
!12973 = !DILocalVariable(name: "viber_vosel", scope: !12966, file: !2361, line: 840, type: !12974)
!12974 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 256, elements: !809)
!12975 = !DILocation(line: 0, scope: !12966)
!12976 = !DILocation(line: 840, column: 9, scope: !12966)
!12977 = !DILocation(line: 843, column: 5, scope: !12966)
!12978 = !DILocation(line: 844, column: 5, scope: !12966)
!12979 = !DILocation(line: 846, column: 5, scope: !12966)
!12980 = !DILocation(line: 848, column: 13, scope: !12981)
!12981 = distinct !DILexicalBlock(scope: !12966, file: !2361, line: 846, column: 22)
!12982 = !DILocation(line: 850, column: 21, scope: !12983)
!12983 = distinct !DILexicalBlock(scope: !12981, file: !2361, line: 848, column: 32)
!12984 = !DILocation(line: 851, column: 21, scope: !12983)
!12985 = !DILocation(line: 854, column: 21, scope: !12983)
!12986 = !DILocation(line: 855, column: 21, scope: !12983)
!12987 = !DILocation(line: 858, column: 21, scope: !12983)
!12988 = !DILocation(line: 859, column: 21, scope: !12983)
!12989 = !DILocation(line: 862, column: 21, scope: !12983)
!12990 = !DILocation(line: 863, column: 21, scope: !12983)
!12991 = !DILocation(line: 866, column: 21, scope: !12983)
!12992 = !DILocation(line: 867, column: 21, scope: !12983)
!12993 = !DILocation(line: 872, column: 117, scope: !12981)
!12994 = !DILocation(line: 872, column: 13, scope: !12981)
!12995 = !DILocation(line: 873, column: 13, scope: !12981)
!12996 = !DILocation(line: 876, column: 13, scope: !12981)
!12997 = !DILocation(line: 877, column: 13, scope: !12981)
!12998 = !DILocation(line: 881, column: 5, scope: !12966)
!12999 = !DILocation(line: 882, column: 5, scope: !12966)
!13000 = !DILocation(line: 883, column: 1, scope: !12966)
!13001 = !DILocation(line: 889, column: 20, scope: !2396)
!13002 = !DILocation(line: 889, column: 42, scope: !2396)
!13003 = !DILocation(line: 889, column: 40, scope: !2396)
!13004 = !DILocation(line: 889, column: 63, scope: !2396)
!13005 = !DILocation(line: 889, column: 61, scope: !2396)
!13006 = !DILocation(line: 889, column: 17, scope: !2396)
!13007 = !DILocation(line: 894, column: 9, scope: !13008)
!13008 = distinct !DILexicalBlock(scope: !2396, file: !2361, line: 894, column: 9)
!13009 = !DILocation(line: 894, column: 20, scope: !13008)
!13010 = !DILocation(line: 894, column: 9, scope: !2396)
!13011 = !DILocation(line: 895, column: 25, scope: !13012)
!13012 = distinct !DILexicalBlock(scope: !13013, file: !2361, line: 895, column: 13)
!13013 = distinct !DILexicalBlock(scope: !13008, file: !2361, line: 894, column: 36)
!13014 = !DILocation(line: 0, scope: !13012)
!13015 = !DILocation(line: 902, column: 22, scope: !13013)
!13016 = !DILocation(line: 902, column: 20, scope: !13013)
!13017 = !DILocation(line: 903, column: 5, scope: !13013)
!13018 = !DILocation(line: 904, column: 1, scope: !2396)
!13019 = distinct !DISubprogram(name: "pmu_set_mtcmos_mt6385", scope: !2361, file: !2361, line: 950, type: !2402, scopeLine: 951, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2360, retainedNodes: !13020)
!13020 = !{!13021}
!13021 = !DILocalVariable(name: "setting", arg: 1, scope: !13019, file: !2361, line: 950, type: !129)
!13022 = !DILocation(line: 0, scope: !13019)
!13023 = !DILocation(line: 953, column: 5, scope: !13019)
!13024 = !DILocation(line: 954, column: 5, scope: !13019)
!13025 = !DILocation(line: 956, column: 60, scope: !13019)
!13026 = !DILocation(line: 956, column: 5, scope: !13019)
!13027 = !DILocation(line: 959, column: 5, scope: !13019)
!13028 = !DILocation(line: 960, column: 5, scope: !13019)
!13029 = !DILocation(line: 961, column: 1, scope: !13019)
!13030 = !DILocation(line: 0, scope: !2401)
!13031 = !DILocation(line: 912, column: 9, scope: !13032)
!13032 = distinct !DILexicalBlock(scope: !2401, file: !2361, line: 912, column: 9)
!13033 = !DILocation(line: 912, column: 9, scope: !2401)
!13034 = !DILocation(line: 917, column: 19, scope: !13035)
!13035 = distinct !DILexicalBlock(scope: !13036, file: !2361, line: 916, column: 23)
!13036 = distinct !DILexicalBlock(scope: !2401, file: !2361, line: 916, column: 9)
!13037 = !DILocation(line: 917, column: 17, scope: !13035)
!13038 = !DILocation(line: 918, column: 5, scope: !13035)
!13039 = !DILocation(line: 920, column: 16, scope: !13040)
!13040 = distinct !DILexicalBlock(scope: !2401, file: !2361, line: 920, column: 9)
!13041 = !DILocation(line: 0, scope: !13040)
!13042 = !DILocation(line: 920, column: 9, scope: !2401)
!13043 = !DILocation(line: 921, column: 27, scope: !13044)
!13044 = distinct !DILexicalBlock(scope: !13045, file: !2361, line: 921, column: 13)
!13045 = distinct !DILexicalBlock(scope: !13040, file: !2361, line: 920, column: 22)
!13046 = !DILocation(line: 921, column: 13, scope: !13045)
!13047 = !DILocation(line: 922, column: 13, scope: !13048)
!13048 = distinct !DILexicalBlock(scope: !13044, file: !2361, line: 921, column: 33)
!13049 = !DILocation(line: 923, column: 13, scope: !13048)
!13050 = !DILocation(line: 925, column: 22, scope: !13045)
!13051 = !DILocation(line: 924, column: 9, scope: !13048)
!13052 = !DILocation(line: 926, column: 5, scope: !13045)
!13053 = !DILocation(line: 927, column: 27, scope: !13054)
!13054 = distinct !DILexicalBlock(scope: !13055, file: !2361, line: 927, column: 13)
!13055 = distinct !DILexicalBlock(scope: !13040, file: !2361, line: 926, column: 12)
!13056 = !DILocation(line: 927, column: 13, scope: !13055)
!13057 = !DILocation(line: 928, column: 13, scope: !13058)
!13058 = distinct !DILexicalBlock(scope: !13054, file: !2361, line: 927, column: 33)
!13059 = !DILocation(line: 929, column: 13, scope: !13058)
!13060 = !DILocation(line: 931, column: 9, scope: !13058)
!13061 = !DILocation(line: 932, column: 26, scope: !13062)
!13062 = distinct !DILexicalBlock(scope: !13054, file: !2361, line: 931, column: 16)
!13063 = !DILocation(line: 935, column: 1, scope: !2401)
!13064 = distinct !DISubprogram(name: "pmu_ctrl_vbt_ldo_mt6385", scope: !2361, file: !2361, line: 937, type: !2402, scopeLine: 938, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2360, retainedNodes: !13065)
!13065 = !{!13066}
!13066 = !DILocalVariable(name: "enable", arg: 1, scope: !13064, file: !2361, line: 937, type: !129)
!13067 = !DILocation(line: 0, scope: !13064)
!13068 = !DILocation(line: 939, column: 16, scope: !13069)
!13069 = distinct !DILexicalBlock(scope: !13064, file: !2361, line: 939, column: 9)
!13070 = !DILocation(line: 0, scope: !13069)
!13071 = !DILocation(line: 948, column: 1, scope: !13064)
!13072 = distinct !DISubprogram(name: "pmu_get_vcore_setting_index", scope: !2361, file: !2361, line: 963, type: !13073, scopeLine: 964, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2360, retainedNodes: !13075)
!13073 = !DISubroutineType(types: !13074)
!13074 = !{!2388, !129}
!13075 = !{!13076, !13077, !13078}
!13076 = !DILocalVariable(name: "buck_vaval", arg: 1, scope: !13072, file: !2361, line: 963, type: !129)
!13077 = !DILocalVariable(name: "vcbuck_voval", scope: !13072, file: !2361, line: 965, type: !2417)
!13078 = !DILocalVariable(name: "vosel", scope: !13072, file: !2361, line: 966, type: !15)
!13079 = !DILocation(line: 0, scope: !13072)
!13080 = !DILocation(line: 965, column: 19, scope: !13072)
!13081 = !DILocation(line: 968, column: 5, scope: !13082)
!13082 = distinct !DILexicalBlock(scope: !13072, file: !2361, line: 968, column: 5)
!13083 = !DILocation(line: 969, column: 27, scope: !13084)
!13084 = distinct !DILexicalBlock(scope: !13085, file: !2361, line: 969, column: 13)
!13085 = distinct !DILexicalBlock(scope: !13086, file: !2361, line: 968, column: 41)
!13086 = distinct !DILexicalBlock(scope: !13082, file: !2361, line: 968, column: 5)
!13087 = !DILocation(line: 969, column: 24, scope: !13084)
!13088 = !DILocation(line: 969, column: 13, scope: !13085)
!13089 = !DILocation(line: 968, column: 37, scope: !13086)
!13090 = !DILocation(line: 968, column: 27, scope: !13086)
!13091 = distinct !{!13091, !13081, !13092}
!13092 = !DILocation(line: 972, column: 5, scope: !13082)
!13093 = !DILocation(line: 974, column: 1, scope: !13072)
!13094 = !DILocation(line: 0, scope: !2410)
!13095 = !DILocation(line: 982, column: 9, scope: !13096)
!13096 = distinct !DILexicalBlock(scope: !2410, file: !2361, line: 982, column: 9)
!13097 = !DILocation(line: 982, column: 9, scope: !2410)
!13098 = !DILocation(line: 983, column: 24, scope: !13099)
!13099 = distinct !DILexicalBlock(scope: !13096, file: !2361, line: 982, column: 20)
!13100 = !DILocation(line: 984, column: 24, scope: !13099)
!13101 = !DILocation(line: 984, column: 22, scope: !13099)
!13102 = !DILocation(line: 985, column: 24, scope: !13099)
!13103 = !DILocation(line: 986, column: 24, scope: !13099)
!13104 = !DILocation(line: 988, column: 13, scope: !13105)
!13105 = distinct !DILexicalBlock(scope: !13099, file: !2361, line: 988, column: 13)
!13106 = !DILocation(line: 988, column: 32, scope: !13105)
!13107 = !DILocation(line: 0, scope: !13105)
!13108 = !DILocation(line: 995, column: 19, scope: !13099)
!13109 = !DILocation(line: 996, column: 14, scope: !13099)
!13110 = !DILocation(line: 997, column: 5, scope: !13099)
!13111 = !DILocation(line: 999, column: 41, scope: !13112)
!13112 = distinct !DILexicalBlock(scope: !2410, file: !2361, line: 999, column: 9)
!13113 = !DILocation(line: 999, column: 10, scope: !13112)
!13114 = !DILocation(line: 1003, column: 14, scope: !13115)
!13115 = distinct !DILexicalBlock(scope: !2410, file: !2361, line: 1003, column: 9)
!13116 = !DILocation(line: 0, scope: !13115)
!13117 = !DILocation(line: 1003, column: 9, scope: !2410)
!13118 = !DILocation(line: 1006, column: 46, scope: !13119)
!13119 = distinct !DILexicalBlock(scope: !13120, file: !2361, line: 1006, column: 13)
!13120 = distinct !DILexicalBlock(scope: !13115, file: !2361, line: 1005, column: 12)
!13121 = !DILocation(line: 1006, column: 13, scope: !13120)
!13122 = !DILocation(line: 1011, column: 5, scope: !13123)
!13123 = distinct !DILexicalBlock(scope: !2410, file: !2361, line: 1011, column: 5)
!13124 = !DILocation(line: 1012, column: 13, scope: !13125)
!13125 = distinct !DILexicalBlock(scope: !13126, file: !2361, line: 1012, column: 13)
!13126 = distinct !DILexicalBlock(scope: !13127, file: !2361, line: 1011, column: 54)
!13127 = distinct !DILexicalBlock(scope: !13123, file: !2361, line: 1011, column: 5)
!13128 = !DILocation(line: 1012, column: 44, scope: !13125)
!13129 = !DILocation(line: 1012, column: 13, scope: !13126)
!13130 = !DILocation(line: 1011, column: 50, scope: !13127)
!13131 = !DILocation(line: 1011, column: 35, scope: !13127)
!13132 = distinct !{!13132, !13122, !13133}
!13133 = !DILocation(line: 1015, column: 5, scope: !13123)
!13134 = !DILocation(line: 1016, column: 19, scope: !13135)
!13135 = distinct !DILexicalBlock(scope: !2410, file: !2361, line: 1016, column: 9)
!13136 = !DILocation(line: 1016, column: 9, scope: !2410)
!13137 = !DILocation(line: 1021, column: 22, scope: !13138)
!13138 = distinct !DILexicalBlock(scope: !2410, file: !2361, line: 1021, column: 9)
!13139 = !DILocation(line: 1021, column: 19, scope: !13138)
!13140 = !DILocation(line: 1021, column: 9, scope: !2410)
!13141 = !DILocation(line: 1022, column: 19, scope: !13142)
!13142 = distinct !DILexicalBlock(scope: !13138, file: !2361, line: 1021, column: 33)
!13143 = !DILocation(line: 1024, column: 23, scope: !13144)
!13144 = distinct !DILexicalBlock(scope: !13142, file: !2361, line: 1024, column: 13)
!13145 = !DILocation(line: 1024, column: 13, scope: !13142)
!13146 = !DILocation(line: 1025, column: 17, scope: !13147)
!13147 = distinct !DILexicalBlock(scope: !13148, file: !2361, line: 1025, column: 17)
!13148 = distinct !DILexicalBlock(scope: !13144, file: !2361, line: 1024, column: 43)
!13149 = !DILocation(line: 1025, column: 36, scope: !13147)
!13150 = !DILocation(line: 1025, column: 17, scope: !13148)
!13151 = !DILocation(line: 1026, column: 17, scope: !13152)
!13152 = distinct !DILexicalBlock(scope: !13147, file: !2361, line: 1025, column: 42)
!13153 = !DILocation(line: 1027, column: 13, scope: !13152)
!13154 = !DILocation(line: 1029, column: 30, scope: !13155)
!13155 = distinct !DILexicalBlock(scope: !13156, file: !2361, line: 1029, column: 17)
!13156 = distinct !DILexicalBlock(scope: !13144, file: !2361, line: 1028, column: 16)
!13157 = !DILocation(line: 1029, column: 27, scope: !13155)
!13158 = !DILocation(line: 1029, column: 17, scope: !13156)
!13159 = !DILocation(line: 1030, column: 30, scope: !13160)
!13160 = distinct !DILexicalBlock(scope: !13155, file: !2361, line: 1029, column: 44)
!13161 = !DILocation(line: 1031, column: 17, scope: !13160)
!13162 = !DILocation(line: 1032, column: 13, scope: !13160)
!13163 = !DILocation(line: 1033, column: 17, scope: !13164)
!13164 = distinct !DILexicalBlock(scope: !13156, file: !2361, line: 1033, column: 17)
!13165 = !DILocation(line: 1033, column: 36, scope: !13164)
!13166 = !DILocation(line: 1033, column: 17, scope: !13156)
!13167 = !DILocation(line: 1034, column: 17, scope: !13168)
!13168 = distinct !DILexicalBlock(scope: !13164, file: !2361, line: 1033, column: 42)
!13169 = !DILocation(line: 1035, column: 13, scope: !13168)
!13170 = !DILocation(line: 1039, column: 1, scope: !2410)
!13171 = distinct !DISubprogram(name: "pmu_get_vcore_voltage_mt6385", scope: !2361, file: !2361, line: 1041, type: !3041, scopeLine: 1042, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2360, retainedNodes: !13172)
!13172 = !{!13173, !13174}
!13173 = !DILocalVariable(name: "psi_status", scope: !13171, file: !2361, line: 1044, type: !129)
!13174 = !DILocalVariable(name: "vcore", scope: !13171, file: !2361, line: 1044, type: !129)
!13175 = !DILocation(line: 1046, column: 18, scope: !13171)
!13176 = !DILocation(line: 0, scope: !13171)
!13177 = !DILocation(line: 1048, column: 20, scope: !13178)
!13178 = distinct !DILexicalBlock(scope: !13171, file: !2361, line: 1048, column: 9)
!13179 = !DILocation(line: 0, scope: !13178)
!13180 = !DILocation(line: 1057, column: 5, scope: !13171)
!13181 = !DILocation(line: 1063, column: 9, scope: !2428)
!13182 = !DILocation(line: 1065, column: 41, scope: !2428)
!13183 = !DILocation(line: 1065, column: 23, scope: !2428)
!13184 = !DILocation(line: 1067, column: 28, scope: !13185)
!13185 = distinct !DILexicalBlock(scope: !2428, file: !2361, line: 1067, column: 9)
!13186 = !DILocation(line: 1067, column: 25, scope: !13185)
!13187 = !DILocation(line: 1067, column: 9, scope: !2428)
!13188 = !DILocation(line: 1068, column: 20, scope: !13189)
!13189 = distinct !DILexicalBlock(scope: !13185, file: !2361, line: 1067, column: 40)
!13190 = !DILocation(line: 1069, column: 9, scope: !13189)
!13191 = !DILocation(line: 1070, column: 9, scope: !13189)
!13192 = !DILocation(line: 1071, column: 146, scope: !13189)
!13193 = !DILocation(line: 1071, column: 133, scope: !13189)
!13194 = !DILocation(line: 1071, column: 9, scope: !13189)
!13195 = !DILocation(line: 1072, column: 9, scope: !13189)
!13196 = !DILocation(line: 1073, column: 9, scope: !13189)
!13197 = !DILocation(line: 1074, column: 5, scope: !13189)
!13198 = !DILocation(line: 1075, column: 1, scope: !2428)
!13199 = distinct !DISubprogram(name: "pmu_get_usb_input_status_mt6385", scope: !2361, file: !2361, line: 1077, type: !3041, scopeLine: 1078, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2360, retainedNodes: !13200)
!13200 = !{!13201}
!13201 = !DILocalVariable(name: "ret", scope: !13199, file: !2361, line: 1079, type: !201)
!13202 = !DILocation(line: 1080, column: 5, scope: !13199)
!13203 = !DILocation(line: 1081, column: 5, scope: !13199)
!13204 = !DILocation(line: 1083, column: 11, scope: !13199)
!13205 = !DILocation(line: 0, scope: !13199)
!13206 = !DILocation(line: 1086, column: 5, scope: !13199)
!13207 = !DILocation(line: 1087, column: 5, scope: !13199)
!13208 = !DILocation(line: 1088, column: 5, scope: !13199)
!13209 = distinct !DISubprogram(name: "pmu_enter_power_off_mt6385", scope: !2361, file: !2361, line: 1091, type: !318, scopeLine: 1092, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2360, retainedNodes: !320)
!13210 = !DILocation(line: 1093, column: 5, scope: !13209)
!13211 = !DILocation(line: 1094, column: 1, scope: !13209)
!13212 = distinct !DISubprogram(name: "pmu_reset_mt6385", scope: !2361, file: !2361, line: 1096, type: !318, scopeLine: 1097, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2360, retainedNodes: !320)
!13213 = !DILocation(line: 1099, column: 5, scope: !13212)
!13214 = !DILocation(line: 1100, column: 5, scope: !13212)
!13215 = !DILocation(line: 1102, column: 5, scope: !13212)
!13216 = !DILocation(line: 1105, column: 5, scope: !13212)
!13217 = !DILocation(line: 1106, column: 5, scope: !13212)
!13218 = !DILocation(line: 1107, column: 1, scope: !13212)
!13219 = distinct !DISubprogram(name: "__EMI_GetSR", scope: !2438, file: !2438, line: 87, type: !3782, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2437, retainedNodes: !13220)
!13220 = !{!13221, !13222}
!13221 = !DILocalVariable(name: "bank_no", arg: 1, scope: !13219, file: !2438, line: 87, type: !105)
!13222 = !DILocalVariable(name: "value", scope: !13219, file: !2438, line: 89, type: !105)
!13223 = !DILocation(line: 0, scope: !13219)
!13224 = !DILocation(line: 91, column: 41, scope: !13219)
!13225 = !DILocation(line: 91, column: 5, scope: !13219)
!13226 = !DILocation(line: 91, column: 19, scope: !13219)
!13227 = !DILocation(line: 91, column: 31, scope: !13219)
!13228 = !DILocation(line: 92, column: 77, scope: !13219)
!13229 = !DILocation(line: 92, column: 60, scope: !13219)
!13230 = !DILocation(line: 92, column: 31, scope: !13219)
!13231 = !DILocation(line: 94, column: 5, scope: !13219)
!13232 = !DILocation(line: 94, column: 27, scope: !13219)
!13233 = !DILocation(line: 94, column: 39, scope: !13219)
!13234 = !DILocation(line: 94, column: 65, scope: !13219)
!13235 = distinct !{!13235, !13231, !13236}
!13236 = !DILocation(line: 94, column: 70, scope: !13219)
!13237 = !DILocation(line: 96, column: 29, scope: !13219)
!13238 = !DILocation(line: 96, column: 64, scope: !13219)
!13239 = !DILocation(line: 98, column: 5, scope: !13219)
!13240 = distinct !DISubprogram(name: "__EMI_SetSR", scope: !2438, file: !2438, line: 102, type: !6459, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2437, retainedNodes: !13241)
!13241 = !{!13242, !13243}
!13242 = !DILocalVariable(name: "bank_no", arg: 1, scope: !13240, file: !2438, line: 102, type: !105)
!13243 = !DILocalVariable(name: "value", arg: 2, scope: !13240, file: !2438, line: 102, type: !105)
!13244 = !DILocation(line: 0, scope: !13240)
!13245 = !DILocation(line: 106, column: 40, scope: !13240)
!13246 = !DILocation(line: 106, column: 77, scope: !13240)
!13247 = !DILocation(line: 106, column: 102, scope: !13240)
!13248 = !DILocation(line: 106, column: 5, scope: !13240)
!13249 = !DILocation(line: 106, column: 19, scope: !13240)
!13250 = !DILocation(line: 106, column: 31, scope: !13240)
!13251 = !DILocation(line: 107, column: 77, scope: !13240)
!13252 = !DILocation(line: 107, column: 60, scope: !13240)
!13253 = !DILocation(line: 107, column: 31, scope: !13240)
!13254 = !DILocation(line: 109, column: 5, scope: !13240)
!13255 = !DILocation(line: 109, column: 27, scope: !13240)
!13256 = !DILocation(line: 109, column: 39, scope: !13240)
!13257 = !DILocation(line: 109, column: 65, scope: !13240)
!13258 = distinct !{!13258, !13254, !13259}
!13259 = !DILocation(line: 109, column: 70, scope: !13240)
!13260 = !DILocation(line: 111, column: 5, scope: !13240)
!13261 = distinct !DISubprogram(name: "__EMI_SetRegValfromCMCP", scope: !2438, file: !2438, line: 114, type: !318, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2437, retainedNodes: !320)
!13262 = !DILocation(line: 117, column: 36, scope: !13261)
!13263 = !DILocation(line: 117, column: 18, scope: !13261)
!13264 = !DILocation(line: 118, column: 37, scope: !13261)
!13265 = !DILocation(line: 118, column: 18, scope: !13261)
!13266 = !DILocation(line: 119, column: 37, scope: !13261)
!13267 = !DILocation(line: 119, column: 19, scope: !13261)
!13268 = !DILocation(line: 120, column: 37, scope: !13261)
!13269 = !DILocation(line: 120, column: 19, scope: !13261)
!13270 = !DILocation(line: 121, column: 37, scope: !13261)
!13271 = !DILocation(line: 121, column: 19, scope: !13261)
!13272 = !DILocation(line: 122, column: 37, scope: !13261)
!13273 = !DILocation(line: 122, column: 19, scope: !13261)
!13274 = !DILocation(line: 123, column: 37, scope: !13261)
!13275 = !DILocation(line: 123, column: 19, scope: !13261)
!13276 = !DILocation(line: 125, column: 37, scope: !13261)
!13277 = !DILocation(line: 125, column: 19, scope: !13261)
!13278 = !DILocation(line: 126, column: 37, scope: !13261)
!13279 = !DILocation(line: 126, column: 19, scope: !13261)
!13280 = !DILocation(line: 127, column: 37, scope: !13261)
!13281 = !DILocation(line: 127, column: 19, scope: !13261)
!13282 = !DILocation(line: 128, column: 37, scope: !13261)
!13283 = !DILocation(line: 128, column: 19, scope: !13261)
!13284 = !DILocation(line: 130, column: 36, scope: !13261)
!13285 = !DILocation(line: 130, column: 18, scope: !13261)
!13286 = !DILocation(line: 131, column: 36, scope: !13261)
!13287 = !DILocation(line: 131, column: 18, scope: !13261)
!13288 = !DILocation(line: 133, column: 5, scope: !13261)
!13289 = distinct !DISubprogram(name: "__EMI_EnableBandwidthLimiter", scope: !2438, file: !2438, line: 140, type: !13290, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2437, retainedNodes: !320)
!13290 = !DISubroutineType(types: !13291)
!13291 = !{!7}
!13292 = !DILocation(line: 144, column: 5, scope: !13289)
!13293 = !DILocation(line: 144, column: 19, scope: !13289)
!13294 = !DILocation(line: 144, column: 28, scope: !13289)
!13295 = !DILocation(line: 147, column: 19, scope: !13289)
!13296 = !DILocation(line: 147, column: 28, scope: !13289)
!13297 = !DILocation(line: 150, column: 19, scope: !13289)
!13298 = !DILocation(line: 150, column: 28, scope: !13289)
!13299 = !DILocation(line: 152, column: 5, scope: !13289)
!13300 = distinct !DISubprogram(name: "TestCase_MBIST", scope: !2438, file: !2438, line: 157, type: !8066, scopeLine: 158, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2437, retainedNodes: !13301)
!13301 = !{!13302, !13303, !13304, !13305, !13306, !13307}
!13302 = !DILocalVariable(name: "mbist_src", scope: !13300, file: !2438, line: 159, type: !105)
!13303 = !DILocalVariable(name: "mbist_len", scope: !13300, file: !2438, line: 159, type: !105)
!13304 = !DILocalVariable(name: "mbist_data", scope: !13300, file: !2438, line: 159, type: !3755)
!13305 = !DILocalVariable(name: "i", scope: !13300, file: !2438, line: 160, type: !105)
!13306 = !DILocalVariable(name: "bist_data_inv", scope: !13300, file: !2438, line: 160, type: !105)
!13307 = !DILocalVariable(name: "bist_data_random", scope: !13300, file: !2438, line: 160, type: !105)
!13308 = !DILocation(line: 159, column: 36, scope: !13300)
!13309 = !DILocation(line: 0, scope: !13300)
!13310 = !DILocation(line: 165, column: 5, scope: !13300)
!13311 = !DILocation(line: 165, column: 19, scope: !13300)
!13312 = !DILocation(line: 165, column: 30, scope: !13300)
!13313 = !DILocation(line: 166, column: 5, scope: !13314)
!13314 = distinct !DILexicalBlock(scope: !13300, file: !2438, line: 166, column: 5)
!13315 = !DILocation(line: 167, column: 9, scope: !13316)
!13316 = distinct !DILexicalBlock(scope: !13317, file: !2438, line: 167, column: 9)
!13317 = distinct !DILexicalBlock(scope: !13318, file: !2438, line: 166, column: 66)
!13318 = distinct !DILexicalBlock(scope: !13314, file: !2438, line: 166, column: 5)
!13319 = !DILocation(line: 168, column: 13, scope: !13320)
!13320 = distinct !DILexicalBlock(scope: !13321, file: !2438, line: 168, column: 13)
!13321 = distinct !DILexicalBlock(scope: !13322, file: !2438, line: 167, column: 34)
!13322 = distinct !DILexicalBlock(scope: !13316, file: !2438, line: 167, column: 9)
!13323 = !DILocation(line: 168, column: 57, scope: !13324)
!13324 = distinct !DILexicalBlock(scope: !13320, file: !2438, line: 168, column: 13)
!13325 = distinct !{!13325, !13319, !13326}
!13326 = !DILocation(line: 183, column: 13, scope: !13320)
!13327 = !DILocation(line: 170, column: 42, scope: !13328)
!13328 = distinct !DILexicalBlock(scope: !13324, file: !2438, line: 168, column: 83)
!13329 = !DILocation(line: 172, column: 42, scope: !13328)
!13330 = !DILocation(line: 174, column: 45, scope: !13328)
!13331 = !DILocation(line: 174, column: 59, scope: !13328)
!13332 = !DILocation(line: 174, column: 154, scope: !13328)
!13333 = !DILocation(line: 174, column: 87, scope: !13328)
!13334 = !DILocation(line: 174, column: 134, scope: !13328)
!13335 = !DILocation(line: 174, column: 42, scope: !13328)
!13336 = !DILocation(line: 175, column: 42, scope: !13328)
!13337 = !DILocation(line: 177, column: 17, scope: !13328)
!13338 = !DILocation(line: 177, column: 39, scope: !13328)
!13339 = !DILocation(line: 177, column: 50, scope: !13328)
!13340 = !DILocation(line: 177, column: 71, scope: !13328)
!13341 = distinct !{!13341, !13337, !13342}
!13342 = !DILocation(line: 177, column: 78, scope: !13328)
!13343 = !DILocation(line: 179, column: 36, scope: !13344)
!13344 = distinct !DILexicalBlock(scope: !13328, file: !2438, line: 179, column: 21)
!13345 = !DILocation(line: 179, column: 47, scope: !13344)
!13346 = !DILocation(line: 179, column: 69, scope: !13344)
!13347 = !DILocation(line: 168, column: 79, scope: !13324)
!13348 = !DILocation(line: 179, column: 21, scope: !13328)
!13349 = !DILocation(line: 167, column: 30, scope: !13322)
!13350 = !DILocation(line: 167, column: 23, scope: !13322)
!13351 = distinct !{!13351, !13315, !13352}
!13352 = !DILocation(line: 184, column: 9, scope: !13316)
!13353 = !DILocation(line: 166, column: 62, scope: !13318)
!13354 = !DILocation(line: 166, column: 43, scope: !13318)
!13355 = distinct !{!13355, !13313, !13356}
!13356 = !DILocation(line: 185, column: 5, scope: !13314)
!13357 = !DILocation(line: 189, column: 1, scope: !13300)
!13358 = distinct !DISubprogram(name: "__EMI_DataAutoTrackingMbistTest", scope: !2438, file: !2438, line: 190, type: !8066, scopeLine: 191, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2437, retainedNodes: !320)
!13359 = !DILocation(line: 192, column: 9, scope: !13360)
!13360 = distinct !DILexicalBlock(scope: !13358, file: !2438, line: 192, column: 9)
!13361 = !DILocation(line: 192, column: 26, scope: !13360)
!13362 = !DILocation(line: 0, scope: !13358)
!13363 = !DILocation(line: 197, column: 1, scope: !13358)
!13364 = distinct !DISubprogram(name: "__EMI_EnableDataAutoTracking", scope: !2438, file: !2438, line: 201, type: !318, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2437, retainedNodes: !13365)
!13365 = !{!13366, !13367}
!13366 = !DILocalVariable(name: "dqy_in_del", scope: !13364, file: !2438, line: 203, type: !1124)
!13367 = !DILocalVariable(name: "dqs_in_del", scope: !13364, file: !2438, line: 204, type: !1124)
!13368 = !DILocation(line: 0, scope: !13364)
!13369 = !DILocation(line: 206, column: 5, scope: !13364)
!13370 = !DILocation(line: 206, column: 19, scope: !13364)
!13371 = !DILocation(line: 206, column: 28, scope: !13364)
!13372 = !DILocation(line: 207, column: 19, scope: !13364)
!13373 = !DILocation(line: 207, column: 28, scope: !13364)
!13374 = !DILocation(line: 208, column: 19, scope: !13364)
!13375 = !DILocation(line: 208, column: 28, scope: !13364)
!13376 = !DILocation(line: 209, column: 19, scope: !13364)
!13377 = !DILocation(line: 209, column: 28, scope: !13364)
!13378 = !DILocation(line: 212, column: 23, scope: !13379)
!13379 = distinct !DILexicalBlock(scope: !13380, file: !2438, line: 211, column: 78)
!13380 = distinct !DILexicalBlock(scope: !13381, file: !2438, line: 211, column: 5)
!13381 = distinct !DILexicalBlock(scope: !13364, file: !2438, line: 211, column: 5)
!13382 = !DILocation(line: 212, column: 32, scope: !13379)
!13383 = !DILocation(line: 213, column: 23, scope: !13379)
!13384 = !DILocation(line: 213, column: 32, scope: !13379)
!13385 = !DILocation(line: 215, column: 19, scope: !13386)
!13386 = distinct !DILexicalBlock(scope: !13379, file: !2438, line: 215, column: 13)
!13387 = !DILocation(line: 215, column: 15, scope: !13386)
!13388 = !DILocation(line: 215, column: 13, scope: !13379)
!13389 = !DILocation(line: 211, column: 40, scope: !13380)
!13390 = !DILocation(line: 211, column: 5, scope: !13381)
!13391 = distinct !{!13391, !13390, !13392}
!13392 = !DILocation(line: 218, column: 5, scope: !13381)
!13393 = !DILocation(line: 211, column: 57, scope: !13380)
!13394 = !DILocation(line: 212, column: 9, scope: !13379)
!13395 = !DILocation(line: 212, column: 45, scope: !13379)
!13396 = !DILocation(line: 212, column: 83, scope: !13379)
!13397 = !DILocation(line: 212, column: 121, scope: !13379)
!13398 = !DILocation(line: 212, column: 70, scope: !13379)
!13399 = !DILocation(line: 212, column: 108, scope: !13379)
!13400 = !DILocation(line: 212, column: 146, scope: !13379)
!13401 = !DILocation(line: 222, column: 49, scope: !13402)
!13402 = distinct !DILexicalBlock(scope: !13403, file: !2438, line: 221, column: 84)
!13403 = distinct !DILexicalBlock(scope: !13404, file: !2438, line: 221, column: 9)
!13404 = distinct !DILexicalBlock(scope: !13405, file: !2438, line: 221, column: 9)
!13405 = distinct !DILexicalBlock(scope: !13406, file: !2438, line: 220, column: 25)
!13406 = distinct !DILexicalBlock(scope: !13364, file: !2438, line: 220, column: 9)
!13407 = !DILocation(line: 222, column: 13, scope: !13402)
!13408 = !DILocation(line: 222, column: 27, scope: !13402)
!13409 = !DILocation(line: 222, column: 36, scope: !13402)
!13410 = !DILocation(line: 224, column: 23, scope: !13411)
!13411 = distinct !DILexicalBlock(scope: !13402, file: !2438, line: 224, column: 17)
!13412 = !DILocation(line: 224, column: 19, scope: !13411)
!13413 = !DILocation(line: 224, column: 17, scope: !13402)
!13414 = distinct !{!13414, !13415, !13416}
!13415 = !DILocation(line: 221, column: 9, scope: !13404)
!13416 = !DILocation(line: 227, column: 9, scope: !13404)
!13417 = !DILocation(line: 230, column: 1, scope: !13364)
!13418 = distinct !DISubprogram(name: "EMI_PowerOn_Init", scope: !2438, file: !2438, line: 253, type: !318, scopeLine: 254, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2437, retainedNodes: !320)
!13419 = !DILocation(line: 257, column: 26, scope: !13418)
!13420 = !DILocation(line: 259, column: 5, scope: !13418)
!13421 = !DILocation(line: 259, column: 19, scope: !13418)
!13422 = !DILocation(line: 259, column: 29, scope: !13418)
!13423 = !DILocation(line: 260, column: 5, scope: !13418)
!13424 = !DILocation(line: 260, column: 27, scope: !13418)
!13425 = !DILocation(line: 260, column: 93, scope: !13418)
!13426 = distinct !{!13426, !13423, !13427}
!13427 = !DILocation(line: 260, column: 98, scope: !13418)
!13428 = !DILocation(line: 261, column: 29, scope: !13418)
!13429 = !DILocation(line: 262, column: 5, scope: !13418)
!13430 = !DILocation(line: 262, column: 27, scope: !13418)
!13431 = !DILocation(line: 262, column: 93, scope: !13418)
!13432 = distinct !{!13432, !13429, !13433}
!13433 = !DILocation(line: 262, column: 98, scope: !13418)
!13434 = !DILocation(line: 264, column: 42, scope: !13418)
!13435 = !DILocation(line: 265, column: 48, scope: !13418)
!13436 = !DILocation(line: 267, column: 5, scope: !13418)
!13437 = !DILocation(line: 267, column: 27, scope: !13418)
!13438 = !DILocation(line: 267, column: 39, scope: !13418)
!13439 = !DILocation(line: 267, column: 65, scope: !13418)
!13440 = distinct !{!13440, !13436, !13441}
!13441 = !DILocation(line: 267, column: 70, scope: !13418)
!13442 = !DILocation(line: 269, column: 5, scope: !13418)
!13443 = !DILocation(line: 273, column: 8, scope: !13418)
!13444 = !DILocation(line: 275, column: 5, scope: !13418)
!13445 = !DILocation(line: 275, column: 27, scope: !13418)
!13446 = !DILocation(line: 275, column: 39, scope: !13418)
!13447 = !DILocation(line: 275, column: 65, scope: !13418)
!13448 = distinct !{!13448, !13444, !13449}
!13449 = !DILocation(line: 275, column: 70, scope: !13418)
!13450 = !DILocation(line: 278, column: 9, scope: !13451)
!13451 = distinct !DILexicalBlock(scope: !13418, file: !2438, line: 278, column: 9)
!13452 = !DILocation(line: 278, column: 44, scope: !13451)
!13453 = !DILocation(line: 278, column: 9, scope: !13418)
!13454 = !DILocation(line: 279, column: 13, scope: !13455)
!13455 = distinct !DILexicalBlock(scope: !13456, file: !2438, line: 279, column: 12)
!13456 = distinct !DILexicalBlock(scope: !13451, file: !2438, line: 278, column: 55)
!13457 = !DILocation(line: 279, column: 48, scope: !13455)
!13458 = !DILocation(line: 279, column: 56, scope: !13455)
!13459 = !DILocation(line: 0, scope: !13455)
!13460 = !DILocation(line: 288, column: 1, scope: !13418)
!13461 = distinct !DISubprogram(name: "custom_setEMI", scope: !2438, file: !2438, line: 294, type: !13462, scopeLine: 295, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2437, retainedNodes: !320)
!13462 = !DISubroutineType(types: !13463)
!13463 = !{!1435}
!13464 = !DILocation(line: 298, column: 5, scope: !13461)
!13465 = !DILocation(line: 300, column: 5, scope: !13461)
!13466 = !DILocation(line: 302, column: 20, scope: !13461)
!13467 = !DILocation(line: 302, column: 18, scope: !13461)
!13468 = !DILocation(line: 303, column: 20, scope: !13461)
!13469 = !DILocation(line: 303, column: 18, scope: !13461)
!13470 = !DILocation(line: 304, column: 20, scope: !13461)
!13471 = !DILocation(line: 304, column: 18, scope: !13461)
!13472 = !DILocation(line: 307, column: 5, scope: !13461)
!13473 = distinct !DISubprogram(name: "custom_setAdvEMI", scope: !2438, file: !2438, line: 312, type: !13462, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2437, retainedNodes: !320)
!13474 = !DILocation(line: 319, column: 29, scope: !13473)
!13475 = !DILocation(line: 319, column: 5, scope: !13473)
!13476 = !DILocation(line: 319, column: 19, scope: !13473)
!13477 = !DILocation(line: 319, column: 27, scope: !13473)
!13478 = !DILocation(line: 320, column: 29, scope: !13473)
!13479 = !DILocation(line: 320, column: 19, scope: !13473)
!13480 = !DILocation(line: 320, column: 27, scope: !13473)
!13481 = !DILocation(line: 322, column: 30, scope: !13473)
!13482 = !DILocation(line: 322, column: 19, scope: !13473)
!13483 = !DILocation(line: 322, column: 28, scope: !13473)
!13484 = !DILocation(line: 324, column: 30, scope: !13473)
!13485 = !DILocation(line: 324, column: 19, scope: !13473)
!13486 = !DILocation(line: 324, column: 28, scope: !13473)
!13487 = !DILocation(line: 326, column: 31, scope: !13473)
!13488 = !DILocation(line: 326, column: 19, scope: !13473)
!13489 = !DILocation(line: 326, column: 29, scope: !13473)
!13490 = !DILocation(line: 327, column: 31, scope: !13473)
!13491 = !DILocation(line: 327, column: 19, scope: !13473)
!13492 = !DILocation(line: 327, column: 29, scope: !13473)
!13493 = !DILocation(line: 332, column: 30, scope: !13473)
!13494 = !DILocation(line: 332, column: 19, scope: !13473)
!13495 = !DILocation(line: 332, column: 28, scope: !13473)
!13496 = !DILocation(line: 333, column: 30, scope: !13473)
!13497 = !DILocation(line: 333, column: 19, scope: !13473)
!13498 = !DILocation(line: 333, column: 28, scope: !13473)
!13499 = !DILocation(line: 334, column: 30, scope: !13473)
!13500 = !DILocation(line: 334, column: 19, scope: !13473)
!13501 = !DILocation(line: 334, column: 28, scope: !13473)
!13502 = !DILocation(line: 336, column: 30, scope: !13473)
!13503 = !DILocation(line: 336, column: 19, scope: !13473)
!13504 = !DILocation(line: 336, column: 28, scope: !13473)
!13505 = !DILocation(line: 337, column: 30, scope: !13473)
!13506 = !DILocation(line: 337, column: 19, scope: !13473)
!13507 = !DILocation(line: 337, column: 28, scope: !13473)
!13508 = !DILocation(line: 338, column: 30, scope: !13473)
!13509 = !DILocation(line: 338, column: 19, scope: !13473)
!13510 = !DILocation(line: 338, column: 28, scope: !13473)
!13511 = !DILocation(line: 339, column: 30, scope: !13473)
!13512 = !DILocation(line: 339, column: 19, scope: !13473)
!13513 = !DILocation(line: 339, column: 28, scope: !13473)
!13514 = !DILocation(line: 341, column: 5, scope: !13473)
!13515 = !DILocation(line: 345, column: 5, scope: !13473)
!13516 = !DILocation(line: 345, column: 19, scope: !13473)
!13517 = !DILocation(line: 345, column: 28, scope: !13473)
!13518 = !DILocation(line: 346, column: 5, scope: !13473)
!13519 = !DILocation(line: 346, column: 28, scope: !13473)
!13520 = !DILocation(line: 346, column: 82, scope: !13473)
!13521 = distinct !{!13521, !13518, !13522}
!13522 = !DILocation(line: 346, column: 87, scope: !13473)
!13523 = !DILocation(line: 347, column: 28, scope: !13473)
!13524 = !DILocation(line: 348, column: 5, scope: !13473)
!13525 = !DILocation(line: 348, column: 28, scope: !13473)
!13526 = !DILocation(line: 348, column: 82, scope: !13473)
!13527 = distinct !{!13527, !13524, !13528}
!13528 = !DILocation(line: 348, column: 87, scope: !13473)
!13529 = !DILocation(line: 349, column: 28, scope: !13473)
!13530 = !DILocation(line: 351, column: 5, scope: !13473)
!13531 = !DILocation(line: 353, column: 5, scope: !13473)
!13532 = distinct !DISubprogram(name: "EMI_Setting_Save", scope: !2438, file: !2438, line: 358, type: !318, scopeLine: 359, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2437, retainedNodes: !320)
!13533 = !DILocation(line: 361, column: 36, scope: !13532)
!13534 = !DILocation(line: 361, column: 50, scope: !13532)
!13535 = !DILocation(line: 361, column: 34, scope: !13532)
!13536 = !DILocation(line: 362, column: 50, scope: !13532)
!13537 = !DILocation(line: 362, column: 34, scope: !13532)
!13538 = !DILocation(line: 363, column: 50, scope: !13532)
!13539 = !DILocation(line: 363, column: 34, scope: !13532)
!13540 = !DILocation(line: 364, column: 50, scope: !13532)
!13541 = !DILocation(line: 364, column: 34, scope: !13532)
!13542 = !DILocation(line: 365, column: 50, scope: !13532)
!13543 = !DILocation(line: 365, column: 34, scope: !13532)
!13544 = !DILocation(line: 366, column: 50, scope: !13532)
!13545 = !DILocation(line: 366, column: 34, scope: !13532)
!13546 = !DILocation(line: 367, column: 50, scope: !13532)
!13547 = !DILocation(line: 367, column: 34, scope: !13532)
!13548 = !DILocation(line: 368, column: 50, scope: !13532)
!13549 = !DILocation(line: 368, column: 34, scope: !13532)
!13550 = !DILocation(line: 369, column: 50, scope: !13532)
!13551 = !DILocation(line: 369, column: 34, scope: !13532)
!13552 = !DILocation(line: 370, column: 50, scope: !13532)
!13553 = !DILocation(line: 370, column: 34, scope: !13532)
!13554 = !DILocation(line: 371, column: 50, scope: !13532)
!13555 = !DILocation(line: 371, column: 34, scope: !13532)
!13556 = !DILocation(line: 372, column: 50, scope: !13532)
!13557 = !DILocation(line: 372, column: 34, scope: !13532)
!13558 = !DILocation(line: 373, column: 51, scope: !13532)
!13559 = !DILocation(line: 373, column: 35, scope: !13532)
!13560 = !DILocation(line: 374, column: 51, scope: !13532)
!13561 = !DILocation(line: 374, column: 35, scope: !13532)
!13562 = !DILocation(line: 375, column: 50, scope: !13532)
!13563 = !DILocation(line: 375, column: 34, scope: !13532)
!13564 = !DILocation(line: 376, column: 50, scope: !13532)
!13565 = !DILocation(line: 376, column: 34, scope: !13532)
!13566 = !DILocation(line: 377, column: 50, scope: !13532)
!13567 = !DILocation(line: 377, column: 34, scope: !13532)
!13568 = !DILocation(line: 378, column: 50, scope: !13532)
!13569 = !DILocation(line: 378, column: 34, scope: !13532)
!13570 = !DILocation(line: 379, column: 50, scope: !13532)
!13571 = !DILocation(line: 379, column: 34, scope: !13532)
!13572 = !DILocation(line: 380, column: 50, scope: !13532)
!13573 = !DILocation(line: 380, column: 34, scope: !13532)
!13574 = !DILocation(line: 382, column: 1, scope: !13532)
!13575 = distinct !DISubprogram(name: "EMI_Setting_restore", scope: !2438, file: !2438, line: 384, type: !318, scopeLine: 385, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2437, retainedNodes: !320)
!13576 = !DILocation(line: 387, column: 5, scope: !13575)
!13577 = !DILocation(line: 387, column: 27, scope: !13575)
!13578 = !DILocation(line: 387, column: 36, scope: !13575)
!13579 = !DILocation(line: 387, column: 76, scope: !13575)
!13580 = distinct !{!13580, !13576, !13581}
!13581 = !DILocation(line: 387, column: 84, scope: !13575)
!13582 = !DILocation(line: 388, column: 50, scope: !13575)
!13583 = !DILocation(line: 388, column: 19, scope: !13575)
!13584 = !DILocation(line: 388, column: 28, scope: !13575)
!13585 = !DILocation(line: 389, column: 50, scope: !13575)
!13586 = !DILocation(line: 389, column: 19, scope: !13575)
!13587 = !DILocation(line: 389, column: 28, scope: !13575)
!13588 = !DILocation(line: 390, column: 50, scope: !13575)
!13589 = !DILocation(line: 390, column: 19, scope: !13575)
!13590 = !DILocation(line: 390, column: 28, scope: !13575)
!13591 = !DILocation(line: 391, column: 50, scope: !13575)
!13592 = !DILocation(line: 391, column: 19, scope: !13575)
!13593 = !DILocation(line: 391, column: 28, scope: !13575)
!13594 = !DILocation(line: 392, column: 50, scope: !13575)
!13595 = !DILocation(line: 392, column: 19, scope: !13575)
!13596 = !DILocation(line: 392, column: 28, scope: !13575)
!13597 = !DILocation(line: 393, column: 50, scope: !13575)
!13598 = !DILocation(line: 393, column: 19, scope: !13575)
!13599 = !DILocation(line: 393, column: 28, scope: !13575)
!13600 = !DILocation(line: 394, column: 51, scope: !13575)
!13601 = !DILocation(line: 394, column: 19, scope: !13575)
!13602 = !DILocation(line: 394, column: 29, scope: !13575)
!13603 = !DILocation(line: 395, column: 51, scope: !13575)
!13604 = !DILocation(line: 395, column: 19, scope: !13575)
!13605 = !DILocation(line: 395, column: 29, scope: !13575)
!13606 = !DILocation(line: 396, column: 50, scope: !13575)
!13607 = !DILocation(line: 396, column: 19, scope: !13575)
!13608 = !DILocation(line: 396, column: 28, scope: !13575)
!13609 = !DILocation(line: 397, column: 50, scope: !13575)
!13610 = !DILocation(line: 397, column: 19, scope: !13575)
!13611 = !DILocation(line: 397, column: 28, scope: !13575)
!13612 = !DILocation(line: 398, column: 50, scope: !13575)
!13613 = !DILocation(line: 398, column: 19, scope: !13575)
!13614 = !DILocation(line: 398, column: 28, scope: !13575)
!13615 = !DILocation(line: 399, column: 50, scope: !13575)
!13616 = !DILocation(line: 399, column: 19, scope: !13575)
!13617 = !DILocation(line: 399, column: 28, scope: !13575)
!13618 = !DILocation(line: 400, column: 50, scope: !13575)
!13619 = !DILocation(line: 400, column: 19, scope: !13575)
!13620 = !DILocation(line: 400, column: 28, scope: !13575)
!13621 = !DILocation(line: 401, column: 50, scope: !13575)
!13622 = !DILocation(line: 401, column: 19, scope: !13575)
!13623 = !DILocation(line: 401, column: 28, scope: !13575)
!13624 = !DILocation(line: 402, column: 50, scope: !13575)
!13625 = !DILocation(line: 402, column: 19, scope: !13575)
!13626 = !DILocation(line: 402, column: 28, scope: !13575)
!13627 = !DILocation(line: 403, column: 50, scope: !13575)
!13628 = !DILocation(line: 403, column: 19, scope: !13575)
!13629 = !DILocation(line: 403, column: 28, scope: !13575)
!13630 = !DILocation(line: 404, column: 50, scope: !13575)
!13631 = !DILocation(line: 404, column: 19, scope: !13575)
!13632 = !DILocation(line: 404, column: 28, scope: !13575)
!13633 = !DILocation(line: 405, column: 50, scope: !13575)
!13634 = !DILocation(line: 405, column: 19, scope: !13575)
!13635 = !DILocation(line: 405, column: 28, scope: !13575)
!13636 = !DILocation(line: 406, column: 50, scope: !13575)
!13637 = !DILocation(line: 406, column: 19, scope: !13575)
!13638 = !DILocation(line: 406, column: 28, scope: !13575)
!13639 = !DILocation(line: 408, column: 1, scope: !13575)
!13640 = distinct !DISubprogram(name: "mtk_psram_half_sleep_exit", scope: !2438, file: !2438, line: 410, type: !318, scopeLine: 411, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2437, retainedNodes: !320)
!13641 = !DILocation(line: 413, column: 29, scope: !13640)
!13642 = !DILocation(line: 413, column: 43, scope: !13640)
!13643 = !DILocation(line: 413, column: 51, scope: !13640)
!13644 = !DILocation(line: 413, column: 27, scope: !13640)
!13645 = !DILocation(line: 416, column: 19, scope: !13640)
!13646 = !DILocation(line: 416, column: 29, scope: !13640)
!13647 = !DILocation(line: 417, column: 5, scope: !13640)
!13648 = !DILocation(line: 417, column: 27, scope: !13640)
!13649 = !DILocation(line: 417, column: 93, scope: !13640)
!13650 = distinct !{!13650, !13647, !13651}
!13651 = !DILocation(line: 417, column: 98, scope: !13640)
!13652 = !DILocation(line: 418, column: 29, scope: !13640)
!13653 = !DILocation(line: 419, column: 5, scope: !13640)
!13654 = !DILocation(line: 419, column: 27, scope: !13640)
!13655 = !DILocation(line: 419, column: 93, scope: !13640)
!13656 = distinct !{!13656, !13653, !13657}
!13657 = !DILocation(line: 419, column: 98, scope: !13640)
!13658 = !DILocation(line: 421, column: 5, scope: !13640)
!13659 = !DILocation(line: 422, column: 5, scope: !13640)
!13660 = !DILocation(line: 422, column: 19, scope: !13640)
!13661 = !DILocation(line: 422, column: 28, scope: !13640)
!13662 = !DILocation(line: 423, column: 5, scope: !13640)
!13663 = !DILocation(line: 423, column: 28, scope: !13640)
!13664 = !DILocation(line: 423, column: 82, scope: !13640)
!13665 = distinct !{!13665, !13662, !13666}
!13666 = !DILocation(line: 423, column: 87, scope: !13640)
!13667 = !DILocation(line: 424, column: 28, scope: !13640)
!13668 = !DILocation(line: 425, column: 5, scope: !13640)
!13669 = !DILocation(line: 425, column: 28, scope: !13640)
!13670 = !DILocation(line: 425, column: 82, scope: !13640)
!13671 = distinct !{!13671, !13668, !13672}
!13672 = !DILocation(line: 425, column: 87, scope: !13640)
!13673 = !DILocation(line: 426, column: 28, scope: !13640)
!13674 = !DILocation(line: 428, column: 50, scope: !13640)
!13675 = !DILocation(line: 428, column: 19, scope: !13640)
!13676 = !DILocation(line: 428, column: 28, scope: !13640)
!13677 = !DILocation(line: 432, column: 1, scope: !13640)
!13678 = distinct !DISubprogram(name: "mtk_psram_half_sleep_enter", scope: !2438, file: !2438, line: 434, type: !318, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2437, retainedNodes: !320)
!13679 = !DILocation(line: 437, column: 5, scope: !13678)
!13680 = !DILocation(line: 440, column: 5, scope: !13678)
!13681 = !DILocation(line: 440, column: 27, scope: !13678)
!13682 = !DILocation(line: 440, column: 36, scope: !13678)
!13683 = !DILocation(line: 440, column: 76, scope: !13678)
!13684 = distinct !{!13684, !13680, !13685}
!13685 = !DILocation(line: 440, column: 84, scope: !13678)
!13686 = !DILocation(line: 441, column: 45, scope: !13678)
!13687 = !DILocation(line: 441, column: 54, scope: !13678)
!13688 = !DILocation(line: 441, column: 28, scope: !13678)
!13689 = !DILocation(line: 442, column: 19, scope: !13678)
!13690 = !DILocation(line: 442, column: 31, scope: !13678)
!13691 = !DILocation(line: 443, column: 5, scope: !13678)
!13692 = !DILocation(line: 443, column: 27, scope: !13678)
!13693 = !DILocation(line: 443, column: 39, scope: !13678)
!13694 = !DILocation(line: 443, column: 65, scope: !13678)
!13695 = distinct !{!13695, !13691, !13696}
!13696 = !DILocation(line: 443, column: 70, scope: !13678)
!13697 = !DILocation(line: 444, column: 19, scope: !13678)
!13698 = !DILocation(line: 444, column: 28, scope: !13678)
!13699 = !DILocation(line: 445, column: 5, scope: !13678)
!13700 = !DILocation(line: 445, column: 27, scope: !13678)
!13701 = !DILocation(line: 445, column: 91, scope: !13678)
!13702 = distinct !{!13702, !13699, !13703}
!13703 = !DILocation(line: 445, column: 96, scope: !13678)
!13704 = !DILocation(line: 447, column: 43, scope: !13678)
!13705 = !DILocation(line: 447, column: 51, scope: !13678)
!13706 = !DILocation(line: 447, column: 27, scope: !13678)
!13707 = !DILocation(line: 450, column: 1, scope: !13678)
!13708 = distinct !DISubprogram(name: "EMI_DynamicClockSwitch", scope: !2438, file: !2438, line: 452, type: !13709, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2437, retainedNodes: !13712)
!13709 = !DISubroutineType(types: !13710)
!13710 = !{!1124, !13711}
!13711 = !DIDerivedType(tag: DW_TAG_typedef, name: "emi_clock", file: !2441, line: 43, baseType: !2440)
!13712 = !{!13713, !13714}
!13713 = !DILocalVariable(name: "clock", arg: 1, scope: !13708, file: !2438, line: 452, type: !13711)
!13714 = !DILocalVariable(name: "delay", scope: !13708, file: !2438, line: 457, type: !104)
!13715 = !DILocation(line: 0, scope: !13708)
!13716 = !DILocation(line: 457, column: 5, scope: !13708)
!13717 = !DILocation(line: 457, column: 23, scope: !13708)
!13718 = !DILocation(line: 458, column: 9, scope: !13708)
!13719 = !DILocation(line: 465, column: 9, scope: !13720)
!13720 = distinct !DILexicalBlock(scope: !13721, file: !2438, line: 458, column: 39)
!13721 = distinct !DILexicalBlock(scope: !13708, file: !2438, line: 458, column: 9)
!13722 = !DILocation(line: 465, column: 23, scope: !13720)
!13723 = !DILocation(line: 465, column: 32, scope: !13720)
!13724 = !DILocation(line: 466, column: 32, scope: !13720)
!13725 = !DILocation(line: 467, column: 9, scope: !13720)
!13726 = !DILocation(line: 467, column: 32, scope: !13720)
!13727 = !DILocation(line: 467, column: 86, scope: !13720)
!13728 = distinct !{!13728, !13725, !13729}
!13729 = !DILocation(line: 467, column: 91, scope: !13720)
!13730 = !DILocation(line: 468, column: 32, scope: !13720)
!13731 = !DILocation(line: 469, column: 9, scope: !13720)
!13732 = !DILocation(line: 469, column: 32, scope: !13720)
!13733 = !DILocation(line: 469, column: 86, scope: !13720)
!13734 = distinct !{!13734, !13731, !13735}
!13735 = !DILocation(line: 469, column: 91, scope: !13720)
!13736 = !DILocation(line: 470, column: 32, scope: !13720)
!13737 = !DILocation(line: 472, column: 20, scope: !13738)
!13738 = distinct !DILexicalBlock(scope: !13720, file: !2438, line: 472, column: 9)
!13739 = !DILocation(line: 472, column: 25, scope: !13740)
!13740 = distinct !DILexicalBlock(scope: !13738, file: !2438, line: 472, column: 9)
!13741 = !DILocation(line: 472, column: 31, scope: !13740)
!13742 = !DILocation(line: 472, column: 9, scope: !13738)
!13743 = !DILocation(line: 472, column: 44, scope: !13740)
!13744 = distinct !{!13744, !13742, !13745}
!13745 = !DILocation(line: 472, column: 47, scope: !13738)
!13746 = !DILocation(line: 478, column: 9, scope: !13747)
!13747 = distinct !DILexicalBlock(scope: !13748, file: !2438, line: 477, column: 12)
!13748 = distinct !DILexicalBlock(scope: !13721, file: !2438, line: 475, column: 16)
!13749 = !DILocation(line: 483, column: 1, scope: !13708)
!13750 = distinct !DISubprogram(name: "emi_mask_master", scope: !2438, file: !2438, line: 487, type: !318, scopeLine: 488, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2437, retainedNodes: !320)
!13751 = !DILocation(line: 490, column: 30, scope: !13750)
!13752 = !DILocation(line: 490, column: 44, scope: !13750)
!13753 = !DILocation(line: 490, column: 53, scope: !13750)
!13754 = !DILocation(line: 490, column: 28, scope: !13750)
!13755 = !DILocation(line: 492, column: 1, scope: !13750)
!13756 = distinct !DISubprogram(name: "emi_unmask_master", scope: !2438, file: !2438, line: 494, type: !318, scopeLine: 495, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2437, retainedNodes: !320)
!13757 = !DILocation(line: 497, column: 30, scope: !13756)
!13758 = !DILocation(line: 497, column: 44, scope: !13756)
!13759 = !DILocation(line: 497, column: 53, scope: !13756)
!13760 = !DILocation(line: 497, column: 28, scope: !13756)
!13761 = !DILocation(line: 500, column: 1, scope: !13756)
!13762 = distinct !DISubprogram(name: "is_clk_use_lfosc", scope: !2606, file: !2606, line: 56, type: !8547, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2605, retainedNodes: !320)
!13763 = !DILocation(line: 61, column: 5, scope: !13762)
!13764 = distinct !DISubprogram(name: "is_clk_use_mpll", scope: !2606, file: !2606, line: 65, type: !8547, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2605, retainedNodes: !320)
!13765 = !DILocation(line: 70, column: 5, scope: !13764)
!13766 = distinct !DISubprogram(name: "cm_bus_clk_208m", scope: !2606, file: !2606, line: 74, type: !318, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2605, retainedNodes: !320)
!13767 = !DILocation(line: 79, column: 9, scope: !13768)
!13768 = distinct !DILexicalBlock(scope: !13769, file: !2606, line: 78, column: 12)
!13769 = distinct !DILexicalBlock(scope: !13766, file: !2606, line: 76, column: 9)
!13770 = !DILocation(line: 81, column: 1, scope: !13766)
!13771 = distinct !DISubprogram(name: "cm_bus_clk_104m", scope: !2606, file: !2606, line: 83, type: !318, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2605, retainedNodes: !320)
!13772 = !DILocation(line: 88, column: 9, scope: !13773)
!13773 = distinct !DILexicalBlock(scope: !13774, file: !2606, line: 87, column: 12)
!13774 = distinct !DILexicalBlock(scope: !13771, file: !2606, line: 85, column: 9)
!13775 = !DILocation(line: 90, column: 1, scope: !13771)
!13776 = distinct !DISubprogram(name: "cm_bus_clk_26m", scope: !2606, file: !2606, line: 92, type: !318, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2605, retainedNodes: !320)
!13777 = !DILocation(line: 97, column: 9, scope: !13778)
!13778 = distinct !DILexicalBlock(scope: !13779, file: !2606, line: 96, column: 12)
!13779 = distinct !DILexicalBlock(scope: !13776, file: !2606, line: 94, column: 9)
!13780 = !DILocation(line: 99, column: 1, scope: !13776)
!13781 = distinct !DISubprogram(name: "peri_clk_26m", scope: !2606, file: !2606, line: 101, type: !318, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2605, retainedNodes: !320)
!13782 = !DILocation(line: 106, column: 9, scope: !13783)
!13783 = distinct !DILexicalBlock(scope: !13784, file: !2606, line: 105, column: 12)
!13784 = distinct !DILexicalBlock(scope: !13781, file: !2606, line: 103, column: 9)
!13785 = !DILocation(line: 108, column: 1, scope: !13781)
!13786 = distinct !DISubprogram(name: "__io_putchar", scope: !3058, file: !3058, line: 52, type: !13787, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3057, retainedNodes: !13789)
!13787 = !DISubroutineType(types: !13788)
!13788 = !{!7, !7}
!13789 = !{!13790}
!13790 = !DILocalVariable(name: "ch", arg: 1, scope: !13786, file: !3058, line: 52, type: !7)
!13791 = !DILocation(line: 0, scope: !13786)
!13792 = !DILocation(line: 59, column: 35, scope: !13786)
!13793 = !DILocation(line: 59, column: 5, scope: !13786)
!13794 = !DILocation(line: 60, column: 5, scope: !13786)
!13795 = distinct !DISubprogram(name: "main", scope: !3058, file: !3058, line: 135, type: !13290, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3057, retainedNodes: !320)
!13796 = !DILocation(line: 138, column: 5, scope: !13795)
!13797 = !DILocation(line: 140, column: 5, scope: !13795)
!13798 = !DILocation(line: 143, column: 5, scope: !13795)
!13799 = !DILocation(line: 319, column: 3, scope: !13800, inlinedAt: !13801)
!13800 = distinct !DISubprogram(name: "__enable_irq", scope: !7157, file: !7157, line: 317, type: !318, scopeLine: 318, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3057, retainedNodes: !320)
!13801 = distinct !DILocation(line: 146, column: 5, scope: !13795)
!13802 = !{i64 647033}
!13803 = !DILocation(line: 496, column: 3, scope: !13804, inlinedAt: !13805)
!13804 = distinct !DISubprogram(name: "__enable_fault_irq", scope: !7157, file: !7157, line: 494, type: !318, scopeLine: 495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3057, retainedNodes: !320)
!13805 = distinct !DILocation(line: 147, column: 5, scope: !13795)
!13806 = !{i64 651308}
!13807 = !DILocation(line: 150, column: 5, scope: !13795)
!13808 = !DILocation(line: 151, column: 5, scope: !13795)
!13809 = !DILocation(line: 152, column: 5, scope: !13795)
!13810 = !DILocation(line: 154, column: 5, scope: !13795)
!13811 = !DILocation(line: 156, column: 5, scope: !13795)
!13812 = distinct !{!13812, !13811, !13813}
!13813 = !DILocation(line: 156, column: 14, scope: !13795)
!13814 = distinct !DISubprogram(name: "SystemClock_Config", scope: !3058, file: !3058, line: 89, type: !318, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3057, retainedNodes: !320)
!13815 = !DILocation(line: 91, column: 5, scope: !13814)
!13816 = !DILocation(line: 92, column: 1, scope: !13814)
!13817 = distinct !DISubprogram(name: "prvSetupHardware", scope: !3058, file: !3058, line: 98, type: !318, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3057, retainedNodes: !320)
!13818 = !DILocation(line: 101, column: 5, scope: !13817)
!13819 = !DILocation(line: 102, column: 5, scope: !13817)
!13820 = !DILocation(line: 103, column: 5, scope: !13817)
!13821 = !DILocation(line: 104, column: 1, scope: !13817)
!13822 = distinct !DISubprogram(name: "dac_output_data_repeatedly_example", scope: !3058, file: !3058, line: 113, type: !318, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3057, retainedNodes: !13823)
!13823 = !{!13824}
!13824 = !DILocalVariable(name: "dac_data", scope: !13822, file: !3058, line: 115, type: !1050)
!13825 = !DILocation(line: 115, column: 5, scope: !13822)
!13826 = !DILocation(line: 115, column: 14, scope: !13822)
!13827 = !DILocation(line: 119, column: 5, scope: !13822)
!13828 = !DILocation(line: 121, column: 5, scope: !13822)
!13829 = !DILocation(line: 123, column: 27, scope: !13822)
!13830 = !DILocation(line: 123, column: 5, scope: !13822)
!13831 = !DILocation(line: 124, column: 5, scope: !13822)
!13832 = !DILocation(line: 125, column: 5, scope: !13822)
!13833 = !DILocation(line: 127, column: 5, scope: !13822)
!13834 = !DILocation(line: 128, column: 5, scope: !13822)
!13835 = !DILocation(line: 129, column: 5, scope: !13822)
!13836 = !DILocation(line: 131, column: 5, scope: !13822)
!13837 = !DILocation(line: 132, column: 1, scope: !13822)
!13838 = distinct !DISubprogram(name: "plain_log_uart_init", scope: !3058, file: !3058, line: 68, type: !318, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3057, retainedNodes: !13839)
!13839 = !{!13840}
!13840 = !DILocalVariable(name: "uart_config", scope: !13838, file: !3058, line: 70, type: !13841)
!13841 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_config_t", file: !673, line: 378, baseType: !13842)
!13842 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !673, line: 373, size: 128, elements: !13843)
!13843 = !{!13844, !13845, !13846, !13847}
!13844 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !13842, file: !673, line: 374, baseType: !784, size: 32)
!13845 = !DIDerivedType(tag: DW_TAG_member, name: "word_length", scope: !13842, file: !673, line: 375, baseType: !786, size: 32, offset: 32)
!13846 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bit", scope: !13842, file: !673, line: 376, baseType: !788, size: 32, offset: 64)
!13847 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !13842, file: !673, line: 377, baseType: !790, size: 32, offset: 96)
!13848 = !DILocation(line: 70, column: 5, scope: !13838)
!13849 = !DILocation(line: 70, column: 23, scope: !13838)
!13850 = !DILocation(line: 72, column: 5, scope: !13838)
!13851 = !DILocation(line: 73, column: 5, scope: !13838)
!13852 = !DILocation(line: 74, column: 5, scope: !13838)
!13853 = !DILocation(line: 75, column: 5, scope: !13838)
!13854 = !DILocation(line: 78, column: 17, scope: !13838)
!13855 = !DILocation(line: 78, column: 26, scope: !13838)
!13856 = !DILocation(line: 79, column: 17, scope: !13838)
!13857 = !DILocation(line: 79, column: 29, scope: !13838)
!13858 = !DILocation(line: 80, column: 17, scope: !13838)
!13859 = !DILocation(line: 80, column: 26, scope: !13838)
!13860 = !DILocation(line: 81, column: 17, scope: !13838)
!13861 = !DILocation(line: 81, column: 24, scope: !13838)
!13862 = !DILocation(line: 82, column: 5, scope: !13838)
!13863 = !DILocation(line: 83, column: 1, scope: !13838)
!13864 = distinct !DISubprogram(name: "_close", scope: !2618, file: !2618, line: 5, type: !13787, scopeLine: 6, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !13865)
!13865 = !{!13866}
!13866 = !DILocalVariable(name: "file", arg: 1, scope: !13864, file: !2618, line: 5, type: !7)
!13867 = !DILocation(line: 0, scope: !13864)
!13868 = !DILocation(line: 7, column: 5, scope: !13864)
!13869 = distinct !DISubprogram(name: "_fstat", scope: !2618, file: !2618, line: 10, type: !13870, scopeLine: 11, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !13918)
!13870 = !DISubroutineType(types: !13871)
!13871 = !{!7, !7, !13872}
!13872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13873, size: 32)
!13873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !13874, line: 27, size: 704, elements: !13875)
!13874 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/stat.h", directory: "/home/mjshen/RTOSExploration")
!13875 = !{!13876, !13879, !13882, !13885, !13888, !13891, !13894, !13895, !13898, !13908, !13909, !13910, !13913, !13916}
!13876 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !13873, file: !13874, line: 29, baseType: !13877, size: 16)
!13877 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !2622, line: 161, baseType: !13878)
!13878 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !2660, line: 56, baseType: !1621)
!13879 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !13873, file: !13874, line: 30, baseType: !13880, size: 16, offset: 16)
!13880 = !DIDerivedType(tag: DW_TAG_typedef, name: "ino_t", file: !2622, line: 139, baseType: !13881)
!13881 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !2660, line: 75, baseType: !989)
!13882 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !13873, file: !13874, line: 31, baseType: !13883, size: 32, offset: 32)
!13883 = !DIDerivedType(tag: DW_TAG_typedef, name: "mode_t", file: !2622, line: 189, baseType: !13884)
!13884 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !2660, line: 90, baseType: !107)
!13885 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !13873, file: !13874, line: 32, baseType: !13886, size: 16, offset: 64)
!13886 = !DIDerivedType(tag: DW_TAG_typedef, name: "nlink_t", file: !2622, line: 194, baseType: !13887)
!13887 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !2660, line: 209, baseType: !989)
!13888 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !13873, file: !13874, line: 33, baseType: !13889, size: 16, offset: 80)
!13889 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !2622, line: 165, baseType: !13890)
!13890 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !2660, line: 60, baseType: !989)
!13891 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !13873, file: !13874, line: 34, baseType: !13892, size: 16, offset: 96)
!13892 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !2622, line: 169, baseType: !13893)
!13893 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !2660, line: 63, baseType: !989)
!13894 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !13873, file: !13874, line: 35, baseType: !13877, size: 16, offset: 112)
!13895 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !13873, file: !13874, line: 36, baseType: !13896, size: 32, offset: 128)
!13896 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !2622, line: 157, baseType: !13897)
!13897 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !2660, line: 102, baseType: !2676)
!13898 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !13873, file: !13874, line: 42, baseType: !13899, size: 128, offset: 192)
!13899 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !13900, line: 47, size: 128, elements: !13901)
!13900 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_timespec.h", directory: "/home/mjshen/RTOSExploration")
!13901 = !{!13902, !13907}
!13902 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !13899, file: !13900, line: 48, baseType: !13903, size: 64)
!13903 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !13904, line: 42, baseType: !13905)
!13904 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_timeval.h", directory: "/home/mjshen/RTOSExploration")
!13905 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int_least64_t", file: !108, line: 200, baseType: !13906)
!13906 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!13907 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !13899, file: !13900, line: 49, baseType: !2661, size: 32, offset: 64)
!13908 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !13873, file: !13874, line: 43, baseType: !13899, size: 128, offset: 320)
!13909 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !13873, file: !13874, line: 44, baseType: !13899, size: 128, offset: 448)
!13910 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !13873, file: !13874, line: 45, baseType: !13911, size: 32, offset: 576)
!13911 = !DIDerivedType(tag: DW_TAG_typedef, name: "blksize_t", file: !2622, line: 102, baseType: !13912)
!13912 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !2660, line: 34, baseType: !2661)
!13913 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !13873, file: !13874, line: 46, baseType: !13914, size: 32, offset: 608)
!13914 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !2622, line: 97, baseType: !13915)
!13915 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !2660, line: 30, baseType: !2661)
!13916 = !DIDerivedType(tag: DW_TAG_member, name: "st_spare4", scope: !13873, file: !13874, line: 48, baseType: !13917, size: 64, offset: 640)
!13917 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2661, size: 64, elements: !484)
!13918 = !{!13919, !13920}
!13919 = !DILocalVariable(name: "file", arg: 1, scope: !13869, file: !2618, line: 10, type: !7)
!13920 = !DILocalVariable(name: "st", arg: 2, scope: !13869, file: !2618, line: 10, type: !13872)
!13921 = !DILocation(line: 0, scope: !13869)
!13922 = !DILocation(line: 12, column: 5, scope: !13869)
!13923 = distinct !DISubprogram(name: "_isatty", scope: !2618, file: !2618, line: 15, type: !13787, scopeLine: 16, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !13924)
!13924 = !{!13925}
!13925 = !DILocalVariable(name: "file", arg: 1, scope: !13923, file: !2618, line: 15, type: !7)
!13926 = !DILocation(line: 0, scope: !13923)
!13927 = !DILocation(line: 17, column: 5, scope: !13923)
!13928 = distinct !DISubprogram(name: "_lseek", scope: !2618, file: !2618, line: 20, type: !13929, scopeLine: 21, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !13931)
!13929 = !DISubroutineType(types: !13930)
!13930 = !{!7, !7, !7, !7}
!13931 = !{!13932, !13933, !13934}
!13932 = !DILocalVariable(name: "file", arg: 1, scope: !13928, file: !2618, line: 20, type: !7)
!13933 = !DILocalVariable(name: "ptr", arg: 2, scope: !13928, file: !2618, line: 20, type: !7)
!13934 = !DILocalVariable(name: "dir", arg: 3, scope: !13928, file: !2618, line: 20, type: !7)
!13935 = !DILocation(line: 0, scope: !13928)
!13936 = !DILocation(line: 22, column: 5, scope: !13928)
!13937 = distinct !DISubprogram(name: "_open", scope: !2618, file: !2618, line: 25, type: !13938, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !13940)
!13938 = !DISubroutineType(types: !13939)
!13939 = !{!7, !199, !7, !7}
!13940 = !{!13941, !13942, !13943}
!13941 = !DILocalVariable(name: "name", arg: 1, scope: !13937, file: !2618, line: 25, type: !199)
!13942 = !DILocalVariable(name: "flags", arg: 2, scope: !13937, file: !2618, line: 25, type: !7)
!13943 = !DILocalVariable(name: "mode", arg: 3, scope: !13937, file: !2618, line: 25, type: !7)
!13944 = !DILocation(line: 0, scope: !13937)
!13945 = !DILocation(line: 27, column: 5, scope: !13937)
!13946 = distinct !DISubprogram(name: "_read", scope: !2618, file: !2618, line: 30, type: !13947, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !13949)
!13947 = !DISubroutineType(types: !13948)
!13948 = !{!7, !7, !745, !7}
!13949 = !{!13950, !13951, !13952}
!13950 = !DILocalVariable(name: "file", arg: 1, scope: !13946, file: !2618, line: 30, type: !7)
!13951 = !DILocalVariable(name: "ptr", arg: 2, scope: !13946, file: !2618, line: 30, type: !745)
!13952 = !DILocalVariable(name: "len", arg: 3, scope: !13946, file: !2618, line: 30, type: !7)
!13953 = !DILocation(line: 0, scope: !13946)
!13954 = !DILocation(line: 32, column: 5, scope: !13946)
!13955 = distinct !DISubprogram(name: "_getpid", scope: !2618, file: !2618, line: 48, type: !13290, scopeLine: 49, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !320)
!13956 = !DILocation(line: 50, column: 5, scope: !13955)
!13957 = distinct !DISubprogram(name: "_kill", scope: !2618, file: !2618, line: 56, type: !13958, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !13960)
!13958 = !DISubroutineType(types: !13959)
!13959 = !{!7, !7, !7}
!13960 = !{!13961, !13962}
!13961 = !DILocalVariable(name: "pid", arg: 1, scope: !13957, file: !2618, line: 56, type: !7)
!13962 = !DILocalVariable(name: "sig", arg: 2, scope: !13957, file: !2618, line: 56, type: !7)
!13963 = !DILocation(line: 0, scope: !13957)
!13964 = !DILocation(line: 58, column: 5, scope: !13957)
!13965 = distinct !DISubprogram(name: "_exit", scope: !2618, file: !2618, line: 61, type: !13787, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !13966)
!13966 = !{!13967}
!13967 = !DILocalVariable(name: "val", arg: 1, scope: !13965, file: !2618, line: 61, type: !7)
!13968 = !DILocation(line: 0, scope: !13965)
!13969 = !DILocation(line: 63, column: 5, scope: !13965)
!13970 = !DILocation(line: 0, scope: !2617)
!13971 = !DILocation(line: 73, column: 5, scope: !2617)
!13972 = !{i64 1127}
!13973 = !DILocation(line: 75, column: 14, scope: !13974)
!13974 = distinct !DILexicalBlock(scope: !2617, file: !2618, line: 75, column: 9)
!13975 = !DILocation(line: 75, column: 11, scope: !13974)
!13976 = !DILocation(line: 75, column: 9, scope: !2617)
!13977 = !DILocation(line: 81, column: 32, scope: !13978)
!13978 = distinct !DILexicalBlock(scope: !2617, file: !2618, line: 81, column: 9)
!13979 = !DILocation(line: 81, column: 15, scope: !13978)
!13980 = !DILocation(line: 92, column: 1, scope: !2617)
!13981 = !DILocation(line: 81, column: 9, scope: !2617)
!13982 = distinct !DISubprogram(name: "_write", scope: !2618, file: !2618, line: 94, type: !13947, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !13983)
!13983 = !{!13984, !13985, !13986, !13987}
!13984 = !DILocalVariable(name: "file", arg: 1, scope: !13982, file: !2618, line: 94, type: !7)
!13985 = !DILocalVariable(name: "ptr", arg: 2, scope: !13982, file: !2618, line: 94, type: !745)
!13986 = !DILocalVariable(name: "len", arg: 3, scope: !13982, file: !2618, line: 94, type: !7)
!13987 = !DILocalVariable(name: "DataIdx", scope: !13982, file: !2618, line: 96, type: !7)
!13988 = !DILocation(line: 0, scope: !13982)
!13989 = !DILocation(line: 98, column: 31, scope: !13990)
!13990 = distinct !DILexicalBlock(scope: !13991, file: !2618, line: 98, column: 5)
!13991 = distinct !DILexicalBlock(scope: !13982, file: !2618, line: 98, column: 5)
!13992 = !DILocation(line: 98, column: 5, scope: !13991)
!13993 = !DILocation(line: 99, column: 26, scope: !13994)
!13994 = distinct !DILexicalBlock(scope: !13990, file: !2618, line: 98, column: 49)
!13995 = !DILocation(line: 99, column: 22, scope: !13994)
!13996 = !DILocation(line: 99, column: 9, scope: !13994)
!13997 = !DILocation(line: 98, column: 45, scope: !13990)
!13998 = distinct !{!13998, !13992, !13999}
!13999 = !DILocation(line: 100, column: 5, scope: !13991)
!14000 = !DILocation(line: 101, column: 5, scope: !13982)
!14001 = distinct !DISubprogram(name: "SysTick_Set", scope: !2820, file: !2820, line: 62, type: !3782, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2819, retainedNodes: !14002)
!14002 = !{!14003, !14004}
!14003 = !DILocalVariable(name: "ticks", arg: 1, scope: !14001, file: !2820, line: 62, type: !105)
!14004 = !DILocalVariable(name: "val", scope: !14001, file: !2820, line: 64, type: !105)
!14005 = !DILocation(line: 0, scope: !14001)
!14006 = !DILocation(line: 67, column: 16, scope: !14007)
!14007 = distinct !DILexicalBlock(scope: !14001, file: !2820, line: 67, column: 9)
!14008 = !DILocation(line: 67, column: 21, scope: !14007)
!14009 = !DILocation(line: 67, column: 9, scope: !14001)
!14010 = !DILocation(line: 72, column: 20, scope: !14001)
!14011 = !DILocation(line: 75, column: 19, scope: !14001)
!14012 = !DILocation(line: 79, column: 20, scope: !14001)
!14013 = !DILocation(line: 80, column: 20, scope: !14001)
!14014 = !DILocation(line: 83, column: 19, scope: !14001)
!14015 = !DILocation(line: 85, column: 5, scope: !14001)
!14016 = !DILocation(line: 86, column: 1, scope: !14001)
!14017 = distinct !DISubprogram(name: "SysInitStatus_Set", scope: !2820, file: !2820, line: 95, type: !318, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2819, retainedNodes: !320)
!14018 = !DILocation(line: 97, column: 28, scope: !14017)
!14019 = !DILocation(line: 98, column: 1, scope: !14017)
!14020 = distinct !DISubprogram(name: "SysInitStatus_Query", scope: !2820, file: !2820, line: 107, type: !4034, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2819, retainedNodes: !320)
!14021 = !DILocation(line: 109, column: 12, scope: !14020)
!14022 = !DILocation(line: 109, column: 5, scope: !14020)
!14023 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !2820, file: !2820, line: 119, type: !318, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2819, retainedNodes: !14024)
!14024 = !{!14025}
!14025 = !DILocalVariable(name: "cm_mux_sel", scope: !14023, file: !2820, line: 121, type: !127)
!14026 = !DILocation(line: 121, column: 38, scope: !14023)
!14027 = !DILocation(line: 121, column: 26, scope: !14023)
!14028 = !DILocation(line: 0, scope: !14023)
!14029 = !DILocation(line: 123, column: 5, scope: !14023)
!14030 = !DILocation(line: 132, column: 13, scope: !14031)
!14031 = distinct !DILexicalBlock(scope: !14023, file: !2820, line: 123, column: 25)
!14032 = !DILocation(line: 140, column: 13, scope: !14031)
!14033 = !DILocation(line: 0, scope: !14031)
!14034 = !DILocation(line: 146, column: 26, scope: !14035)
!14035 = distinct !DILexicalBlock(scope: !14023, file: !2820, line: 146, column: 9)
!14036 = !DILocation(line: 146, column: 50, scope: !14035)
!14037 = !DILocation(line: 146, column: 41, scope: !14035)
!14038 = !DILocation(line: 148, column: 25, scope: !14039)
!14039 = distinct !DILexicalBlock(scope: !14035, file: !2820, line: 147, column: 52)
!14040 = !DILocation(line: 149, column: 5, scope: !14039)
!14041 = !DILocation(line: 150, column: 1, scope: !14023)
!14042 = distinct !DISubprogram(name: "SystemInit", scope: !2820, file: !2820, line: 158, type: !318, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2819, retainedNodes: !320)
!14043 = !DILocation(line: 162, column: 16, scope: !14042)
!14044 = !DILocation(line: 166, column: 16, scope: !14042)
!14045 = !DILocation(line: 169, column: 16, scope: !14042)
!14046 = !DILocation(line: 172, column: 1, scope: !14042)
!14047 = distinct !DISubprogram(name: "CachePreInit", scope: !2820, file: !2820, line: 180, type: !318, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2819, retainedNodes: !320)
!14048 = !DILocation(line: 183, column: 22, scope: !14047)
!14049 = !DILocation(line: 186, column: 21, scope: !14047)
!14050 = !DILocation(line: 189, column: 21, scope: !14047)
!14051 = !DILocation(line: 192, column: 29, scope: !14047)
!14052 = !DILocation(line: 193, column: 33, scope: !14047)
!14053 = !DILocation(line: 195, column: 28, scope: !14047)
!14054 = !DILocation(line: 200, column: 30, scope: !14047)
!14055 = !DILocation(line: 214, column: 1, scope: !14047)
