; ModuleID = './build/sd_read_write_data_dma.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabihf"

%union.CACHE_CON_Type = type { %struct.anon }
%struct.anon = type { i32 }
%struct.CACHE_ENTRY_Type = type { %union.CACHE_CON_Type, %union.CACHE_CON_Type }
%struct.GPT_REGISTER_T = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.GPT_REGISTER_GLOABL_T = type { i32, i32, i32 }
%struct.gpt_context_t = type { i32, %struct.gpt_callback_context_t, i8, i8 }
%struct.gpt_callback_context_t = type { void (i8*)*, i8* }
%struct.gpt_sw_context_t = type { [32 x %struct.gpt_sw_timer_t], i32, i32, i32, i32, i8, i8, i8 }
%struct.gpt_sw_timer_t = type { %struct.gpt_callback_context_t, i32, i8, i8 }
%struct.GDMA_REGISTER_T = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.PDMA_REGISTER_T = type { i32, i32, i32, i32, i32, i32, i32, i32, [1 x i32], i32 }
%struct.VDMA_REGISTER_T = type { i32, i32, i32, i32, i32, [2 x i32], i32, i32, i32, i32, i32, i32, i32 }
%struct.gdma_user_callback_t = type { void (i32, i8*)*, i8* }
%struct.GPIO_REGISTER_T = type { [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIN_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [4 x %struct.GPIO_DIR_REGISTER_T], [192 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [2 x %struct.GPIO_DIR_REGISTER_T], [192 x i8], [7 x %struct.GPIO_DIR_REGISTER_T], [144 x i8], [4 x %struct.GPIO_DIR_REGISTER_T], [192 x i8], [6 x %struct.GPIO_DIN_REGISTER_T] }
%struct.GPIO_DIN_REGISTER_T = type { i32, [12 x i8] }
%struct.GPIO_DIR_REGISTER_T = type { i32, i32, i32, [4 x i8] }
%struct.hal_uart_dma_config_t = type { i8*, i32, i32, i8*, i32, i32, i32 }
%struct.hal_uart_config_t = type { i32, i32, i32, i32 }
%struct.uart_sw_flowcontrol_config_t = type { i8, i8, i8 }
%struct.uart_dma_callback_data_t = type { i8, i32 }
%struct.UART_REGISTER_T = type { %struct.anon, %struct.anon, %struct.anon, i32, %struct.anon, %struct.anon, i32, %struct.anon, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.I2C_REGISTER_T = type { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, [2 x i16], i16, i16, i16, i16, i16, i16, i16, i16, [2 x i16], i16, i16, [2 x i16], i16, i16, [2 x i16], i16, i16, [6 x i16], i16, i16, i16, i16, i16, i16, i16, i16, [2 x i16], i16, i16 }
%struct.nvic_function_t = type { void (i32)*, i32 }
%struct._dvfs_lock_t = type { i8*, i8*, i32, %struct._dvfs_domain_t*, %struct._dvfs_lock_t*, %struct._dvfs_lock_t* }
%struct._dvfs_domain_t = type { i8*, i8, %struct.dvfs_opp_t, %struct._dvfs_lock_t*, %struct._dvfs_lock_t*, %struct._dvfs_domain_t* }
%struct.dvfs_opp_t = type { i32, i32, i32, i32, i32*, i32*, %struct.dvfs_opp_ops_t, i8* }
%struct.dvfs_opp_ops_t = type { i1 (%struct._dvfs_domain_t*, i32, i32)*, void (%struct._dvfs_domain_t*, i32, i32)*, void (%struct._dvfs_domain_t*, i32, i32)*, %struct._dvfs_opp_module_t* (%struct._dvfs_domain_t*, %struct._dvfs_opp_module_t*)* }
%struct._dvfs_opp_module_t = type { i8*, %struct._dvfs_notification_t*, i32* }
%struct._dvfs_notification_t = type { i8*, i8*, i8*, %struct.dvfs_notification_ops_t, %struct._dvfs_domain_t*, %struct._dvfs_opp_module_t*, %struct._dvfs_notification_t*, %struct._dvfs_notification_t* }
%struct.dvfs_notification_ops_t = type { i1 (i32, i32)*, void (i32, i32)* }
%struct.sd_information_t = type { i32, i32, i32, %struct.csd_information_t, [4 x i32], %struct.scr_information_t, i32, i32, i8, i8, i8, i8, i32, i32, i32, %struct.mmc_information_t, i8, i8, i8 }
%struct.csd_information_t = type { i32, i8, i8, i8, i16, i32, i32, i8, i8, i8, i8, i8, i32, i8, i32, i32, i8, i8, i8, i32, i32, i32, i8, %struct.extended_csd_information_t*, i64 }
%struct.extended_csd_information_t = type { [136 x i8], i32, [3 x i8], [12 x i8], i8, i8, [3 x i8], i8, i8, i8, [5 x i8], i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, [5 x i8], i8, i8, i8, i8, i8, i8, i8, i8, [275 x i8], i8, [7 x i8] }
%struct.scr_information_t = type { i8, i8, i8, i32 }
%struct.mmc_information_t = type { i8, i8, i8, i32, i32 }
%struct.sd_dma_interrupt_context_t = type { i32, i16, i32, %struct._dvfs_lock_t }
%struct.msdc_register_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [9 x i32], i32 }
%struct.sd_backup_parameter_t = type { %struct.hal_cache_region_config_t, i32, i8 }
%struct.hal_cache_region_config_t = type { i32, i32 }
%struct.msdc_clock_t = type { i32, i8, i8, i8 }
%struct.msdc_config_t = type { i32, i32, i32, i32, i8, i8, i8, i8, i32, i32, i32, i32, i32, i8, void (i32, i8*)* }
%struct.GFH_CMEM_ID_INFO_v1 = type { %struct.GFH_Header, %struct.CMEMEntryIDList }
%struct.GFH_Header = type { i32, i16, i32 }
%struct.CMEMEntryIDList = type { i32, i32, [5 x %struct.CMEMEntryID] }
%struct.CMEMEntryID = type { i8, i8, [8 x i8] }
%struct.anon.37 = type { i8 }
%struct.SF_MTD_Data = type { i32, i8*, %struct.anon.37*, %struct.anon.37*, i8, %struct.hal_cache_region_config_t*, i8*, %struct.hal_cache_region_config_t*, i8*, i32, i8*, [8 x [2 x %struct.hal_cache_region_config_t]], i8*, %struct.SF_MTD_CMD*, i32, i16, i16, i16, i16, i8, [3 x i8], i8, i8, i16, i32, i32, i8, i8, i32 (i8*)*, i32 (i8*)*, i32 (i8*, i32, i8*, i32)*, i32 (i8*, i32, i8*, i32)* }
%struct.SF_MTD_CMD = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.CMEMEntryNOR = type { i16, i16, i32, [8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t] }
%struct.NOR_MTD_Driver = type { i32 (i8*, i8*)*, i32 (i8*)*, i8* (i8*, i32, i32)*, i32 (i8*, i32)*, i32 (i8*, i8*, i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32, i32, i8*, i32)*, i32 (i8*, i32*)*, i32 (i8*, i8*, i32)*, i1 (i8*, i32)*, i32 (i8*, i32, i8*)* }
%struct.NOR_FLASH_DRV_Data = type { i32, %struct.NOR_MTD_Driver*, i8*, i16*, i16*, %struct.NOR_MTD_FlashInfo, [8 x i32], [8 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.hal_cache_region_config_t*, i8*, i8*, void (%struct.NOR_FLASH_DRV_Data*)*, i32, void (%struct.NOR_FLASH_DRV_Data*)*, void (%struct.NOR_FLASH_DRV_Data*)*, i32, i32 (%struct.NOR_FLASH_DRV_Data*)*, i32 (%struct.NOR_FLASH_DRV_Data*, i32, i32)*, %struct.hal_cache_region_config_t*, i32, i32, i32, i16, i16, i8, i8 }
%struct.NOR_MTD_FlashInfo = type { i32, [8 x i32], [8 x i32], [8 x i32], i32, i16, i32, i32 }
%struct.GFH_CMEM_NOR_INFO_v1 = type { %struct.GFH_Header, %struct.CMEMEntryNORList }
%struct.CMEMEntryNORList = type { i32, i32, [5 x %struct.CMEMEntryNOR] }
%struct.NOR_FLASH_DISK_Data = type { i32, %struct.NOR_MTD_Driver*, i8*, %struct.NOR_MTD_FlashInfo, i8 }
%struct.pmu_function_t = type { void (i8, i8*)*, i8*, i8, i8 }
%struct.EMI_SETTINGS = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.EMI_REGISTER_T = type { [96 x i8], i32, [12 x i8], i32, [20 x i8], i32, [4 x i8], i32, [60 x i8], i32, [4 x i8], i32, [4 x i8], i32, [20 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [28 x i8], i32, [4 x i8], i32, [12 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [12 x i8], i32, [4 x i8], i32, [4 x i8], i32, [20 x i8], i32, [4 x i8], i32, [92 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [60 x i8], i32, [124 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [20 x i8], i32, [20 x i8], i32 }
%struct.pdma_config_t = type { i8, i32, i32, i32 }
%struct.i2c_transaction_size_t = type { i32, i32, i32, i32, i32 }
%struct.pmic_i2c_send_to_receive_config_t = type { i8, i8*, i32, i8*, i32 }
%struct.sd_command6_switch_status_t = type { i16, i16, i16, i8, i8 }
%union.CMEMFlashID = type { [4 x i16] }
%struct.NOR_Flash_MTD_Data = type { i32, i8*, %struct.anon.37*, %struct.anon.37*, i8, %struct.hal_cache_region_config_t*, i8*, %struct.hal_cache_region_config_t*, i8*, i32, i8*, [8 x [2 x %struct.hal_cache_region_config_t]] }
%struct.__va_list = type { i8* }
%struct.stat = type { i16, i16, i32, i16, i16, i16, i16, i32, %struct.timespec, %struct.timespec, %struct.timespec, i32, i32, [2 x i32] }
%struct.timespec = type { i64, i32 }
%struct._reent = type { i32, %struct.__sFILE*, %struct.__sFILE*, %struct.__sFILE*, i32, i8*, i32, i32, %struct.__locale_t*, %struct._mprec*, void (%struct._reent*)*, i32, i32, i8*, %struct._rand48*, %struct.GPT_REGISTER_T*, i8*, void (i32)**, %struct._atexit*, %struct._atexit, %struct._glue, %struct.__sFILE*, %struct._misc_reent*, i8* }
%struct.__locale_t = type opaque
%struct._mprec = type { %struct._Bigint*, i32, %struct._Bigint*, %struct._Bigint** }
%struct._Bigint = type { %struct._Bigint*, i32, i32, i32, i32, [1 x i32] }
%struct._rand48 = type { [3 x i16], [3 x i16], i16, i64 }
%struct._atexit = type { %struct._atexit*, i32, [32 x void ()*], %struct._on_exit_args* }
%struct._on_exit_args = type { [32 x i8*], [32 x i8*], i32, i32 }
%struct._glue = type { %struct._glue*, i32, %struct.__sFILE* }
%struct.__sFILE = type { i8*, i32, i32, i16, i16, %struct.__sbuf, i32, %struct._reent*, i8*, i32 (%struct._reent*, i8*, i8*, i32)*, i32 (%struct._reent*, i8*, i8*, i32)*, i32 (%struct._reent*, i8*, i32, i32)*, i32 (%struct._reent*, i8*)*, %struct.__sbuf, i8*, i32, [3 x i8], [1 x i8], %struct.__sbuf, i32, i32, %struct.__lock*, %struct._mbstate_t, i32 }
%struct.__sbuf = type { i8*, i32 }
%struct.__lock = type opaque
%struct._mbstate_t = type { i32, %struct.anon }
%struct._misc_reent = type { i8*, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t, [8 x i8], i32, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t }

@g_cache_status = dso_local global i8 0, align 1, !dbg !0
@g_cache_con = external dso_local local_unnamed_addr global %union.CACHE_CON_Type, align 4
@g_cache_region_en = external dso_local local_unnamed_addr global i32, align 4
@g_cache_entry = external dso_local local_unnamed_addr global [16 x %struct.CACHE_ENTRY_Type], align 4
@.str = private unnamed_addr constant [50 x i8] c"../../../../../driver/chip/mt2523/src/hal_cache.c\00", align 1
@__func__.hal_cache_region_config = private unnamed_addr constant [24 x i8] c"hal_cache_region_config\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@gpt_lock_sleep_name = internal unnamed_addr constant [6 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.3, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.4, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i32 0, i32 0)], align 4, !dbg !92
@gpt_lock_sleep_handle = internal unnamed_addr global [6 x i8] zeroinitializer, align 1, !dbg !156
@__FUNCTION__.hal_gpt_init = private unnamed_addr constant [13 x i8] c"hal_gpt_init\00", align 1
@.str.2 = private unnamed_addr constant [40 x i8] c"[GPT%d][init]:get sleep handle failed\0D\0A\00", align 1
@.str.1.3 = private unnamed_addr constant [5 x i8] c"GPT0\00", align 1
@.str.2.4 = private unnamed_addr constant [5 x i8] c"GPT1\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"GPT2\00", align 1
@.str.4 = private unnamed_addr constant [5 x i8] c"GPT3\00", align 1
@.str.5 = private unnamed_addr constant [5 x i8] c"GPT4\00", align 1
@.str.6 = private unnamed_addr constant [5 x i8] c"GPT5\00", align 1
@gp_gpt = dso_local local_unnamed_addr global [6 x %struct.GPT_REGISTER_T*] [%struct.GPT_REGISTER_T* inttoptr (i32 -1575747568 to %struct.GPT_REGISTER_T*), %struct.GPT_REGISTER_T* inttoptr (i32 -1575747520 to %struct.GPT_REGISTER_T*), %struct.GPT_REGISTER_T* inttoptr (i32 -1575747472 to %struct.GPT_REGISTER_T*), %struct.GPT_REGISTER_T* inttoptr (i32 -1575747424 to %struct.GPT_REGISTER_T*), %struct.GPT_REGISTER_T* inttoptr (i32 -1575747376 to %struct.GPT_REGISTER_T*), %struct.GPT_REGISTER_T* inttoptr (i32 -1575747328 to %struct.GPT_REGISTER_T*)], section ".tcm_rwdata", align 4, !dbg !168
@gp_gpt_glb = dso_local local_unnamed_addr global %struct.GPT_REGISTER_GLOABL_T* inttoptr (i32 -1575747584 to %struct.GPT_REGISTER_GLOABL_T*), align 4, !dbg !331
@gpt_get_lfosc_clock.flag = internal unnamed_addr global i1 false, section ".tcm_rwdata", align 1, !dbg !388
@gpt_clock_source = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !385
@g_gpt_context = dso_local global [6 x %struct.gpt_context_t] zeroinitializer, section ".tcm_zidata", align 4, !dbg !346
@gpt_sw_context = dso_local local_unnamed_addr global %struct.gpt_sw_context_t zeroinitializer, align 4, !dbg !362
@gdma = dso_local local_unnamed_addr global [1 x %struct.GDMA_REGISTER_T*] [%struct.GDMA_REGISTER_T* inttoptr (i32 -1610612480 to %struct.GDMA_REGISTER_T*)], align 4, !dbg !389
@gdma_global = dso_local local_unnamed_addr global [1 x %struct.anon*] [%struct.anon* inttoptr (i32 -1610612736 to %struct.anon*)], align 4, !dbg !472
@pdma = dso_local local_unnamed_addr global [6 x %struct.PDMA_REGISTER_T*] [%struct.PDMA_REGISTER_T* inttoptr (i32 -1610612216 to %struct.PDMA_REGISTER_T*), %struct.PDMA_REGISTER_T* inttoptr (i32 -1610611960 to %struct.PDMA_REGISTER_T*), %struct.PDMA_REGISTER_T* inttoptr (i32 -1608318456 to %struct.PDMA_REGISTER_T*), %struct.PDMA_REGISTER_T* inttoptr (i32 -1608318200 to %struct.PDMA_REGISTER_T*), %struct.PDMA_REGISTER_T* inttoptr (i32 -1608317944 to %struct.PDMA_REGISTER_T*), %struct.PDMA_REGISTER_T* inttoptr (i32 -1608317688 to %struct.PDMA_REGISTER_T*)], align 4, !dbg !480
@pdma_global = dso_local local_unnamed_addr global [6 x %struct.anon*] [%struct.anon* inttoptr (i32 -1610612736 to %struct.anon*), %struct.anon* inttoptr (i32 -1610612736 to %struct.anon*), %struct.anon* inttoptr (i32 -1608318976 to %struct.anon*), %struct.anon* inttoptr (i32 -1608318976 to %struct.anon*), %struct.anon* inttoptr (i32 -1608318976 to %struct.anon*), %struct.anon* inttoptr (i32 -1608318976 to %struct.anon*)], align 4, !dbg !498
@g_pdma_global_running_bit = dso_local local_unnamed_addr global [6 x i8] c"\02\04\02\04\06\08", align 1, !dbg !506
@vdma = dso_local local_unnamed_addr global [10 x %struct.VDMA_REGISTER_T*] [%struct.VDMA_REGISTER_T* inttoptr (i32 -1610610416 to %struct.VDMA_REGISTER_T*), %struct.VDMA_REGISTER_T* inttoptr (i32 -1610610160 to %struct.VDMA_REGISTER_T*), %struct.VDMA_REGISTER_T* inttoptr (i32 -1610609904 to %struct.VDMA_REGISTER_T*), %struct.VDMA_REGISTER_T* inttoptr (i32 -1610609648 to %struct.VDMA_REGISTER_T*), %struct.VDMA_REGISTER_T* inttoptr (i32 -1610609392 to %struct.VDMA_REGISTER_T*), %struct.VDMA_REGISTER_T* inttoptr (i32 -1610609136 to %struct.VDMA_REGISTER_T*), %struct.VDMA_REGISTER_T* inttoptr (i32 -1610608880 to %struct.VDMA_REGISTER_T*), %struct.VDMA_REGISTER_T* inttoptr (i32 -1610608624 to %struct.VDMA_REGISTER_T*), %struct.VDMA_REGISTER_T* inttoptr (i32 -1608054512 to %struct.VDMA_REGISTER_T*), %struct.VDMA_REGISTER_T* inttoptr (i32 -1608054256 to %struct.VDMA_REGISTER_T*)], align 4, !dbg !508
@vdma_port = dso_local local_unnamed_addr global [10 x %struct.anon*] [%struct.anon* inttoptr (i32 -1601044480 to %struct.anon*), %struct.anon* inttoptr (i32 -1601044224 to %struct.anon*), %struct.anon* inttoptr (i32 -1601043968 to %struct.anon*), %struct.anon* inttoptr (i32 -1601043712 to %struct.anon*), %struct.anon* inttoptr (i32 -1601043456 to %struct.anon*), %struct.anon* inttoptr (i32 -1601043200 to %struct.anon*), %struct.anon* inttoptr (i32 -1601042944 to %struct.anon*), %struct.anon* inttoptr (i32 -1601042688 to %struct.anon*), %struct.anon* inttoptr (i32 -1567490048 to %struct.anon*), %struct.anon* inttoptr (i32 -1567489792 to %struct.anon*)], align 4, !dbg !533
@vdma_global = dso_local local_unnamed_addr global [10 x %struct.anon*] [%struct.anon* inttoptr (i32 -1610612736 to %struct.anon*), %struct.anon* inttoptr (i32 -1610612736 to %struct.anon*), %struct.anon* inttoptr (i32 -1610612736 to %struct.anon*), %struct.anon* inttoptr (i32 -1610612736 to %struct.anon*), %struct.anon* inttoptr (i32 -1610612736 to %struct.anon*), %struct.anon* inttoptr (i32 -1610612736 to %struct.anon*), %struct.anon* inttoptr (i32 -1610612736 to %struct.anon*), %struct.anon* inttoptr (i32 -1610612736 to %struct.anon*), %struct.anon* inttoptr (i32 -1608056832 to %struct.anon*), %struct.anon* inttoptr (i32 -1608056832 to %struct.anon*)], align 4, !dbg !541
@g_vdma_global_running_bit = dso_local local_unnamed_addr global [10 x i8] c"\10\12\14\16\18\1A\1C\1E\10\12", align 1, !dbg !549
@g_gdma_callback = dso_local local_unnamed_addr global [1 x %struct.gdma_user_callback_t] zeroinitializer, align 4, !dbg !552
@pdma_init_status = internal global [7 x i8] zeroinitializer, align 1, !dbg !589
@__FUNCTION__.pdma_init = private unnamed_addr constant [10 x i8] c"pdma_init\00", align 1
@.str.39 = private unnamed_addr constant [52 x i8] c"This peripheral dma channel %d has been initialized\00", align 1
@.str.1.40 = private unnamed_addr constant [58 x i8] c"../../../../../driver/chip/mt2523/src/hal_pdma_internal.c\00", align 1
@.str.2.41 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@__func__.pdma_deinit = private unnamed_addr constant [12 x i8] c"pdma_deinit\00", align 1
@.str.3.42 = private unnamed_addr constant [54 x i8] c"This peripheral dma channel %d has been deinitialized\00", align 1
@__func__.pdma_start_polling = private unnamed_addr constant [19 x i8] c"pdma_start_polling\00", align 1
@__func__.pdma_start_interrupt = private unnamed_addr constant [21 x i8] c"pdma_start_interrupt\00", align 1
@g_pdma_callback = internal unnamed_addr global [6 x %struct.gdma_user_callback_t] zeroinitializer, align 4, !dbg !595
@vdma_init_status = internal global [18 x i8] zeroinitializer, align 1, !dbg !603
@__FUNCTION__.vdma_init = private unnamed_addr constant [10 x i8] c"vdma_init\00", align 1
@.str.4.43 = private unnamed_addr constant [47 x i8] c"This vfifo dma channel %d has been initialized\00", align 1
@__func__.vdma_deinit = private unnamed_addr constant [12 x i8] c"vdma_deinit\00", align 1
@.str.5.44 = private unnamed_addr constant [49 x i8] c"This vfifo dma channel %d has been deinitialized\00", align 1
@__func__.vdma_configure = private unnamed_addr constant [15 x i8] c"vdma_configure\00", align 1
@g_vdma_callback = internal unnamed_addr global [10 x %struct.gdma_user_callback_t] zeroinitializer, align 4, !dbg !608
@pd_domain_dma_interrupt_hander.count = internal unnamed_addr global i32 0, align 4, !dbg !565
@__func__.pd_domain_dma_interrupt_hander = private unnamed_addr constant [31 x i8] c"pd_domain_dma_interrupt_hander\00", align 1
@__func__.ao_domain_dma_interrupt_hander = private unnamed_addr constant [31 x i8] c"ao_domain_dma_interrupt_hander\00", align 1
@switch.table.pdma_configure = private unnamed_addr constant [4 x i32] [i32 4, i32 262152, i32 131076, i32 458756], align 4
@switch.table.vdma_init = private unnamed_addr constant [10 x %struct.VDMA_REGISTER_T**] [%struct.VDMA_REGISTER_T** getelementptr inbounds ([10 x %struct.VDMA_REGISTER_T*], [10 x %struct.VDMA_REGISTER_T*]* @vdma, i32 0, i32 0), %struct.VDMA_REGISTER_T** getelementptr inbounds ([10 x %struct.VDMA_REGISTER_T*], [10 x %struct.VDMA_REGISTER_T*]* @vdma, i32 0, i32 1), %struct.VDMA_REGISTER_T** getelementptr inbounds ([10 x %struct.VDMA_REGISTER_T*], [10 x %struct.VDMA_REGISTER_T*]* @vdma, i32 0, i32 2), %struct.VDMA_REGISTER_T** getelementptr inbounds ([10 x %struct.VDMA_REGISTER_T*], [10 x %struct.VDMA_REGISTER_T*]* @vdma, i32 0, i32 3), %struct.VDMA_REGISTER_T** getelementptr inbounds ([10 x %struct.VDMA_REGISTER_T*], [10 x %struct.VDMA_REGISTER_T*]* @vdma, i32 0, i32 4), %struct.VDMA_REGISTER_T** getelementptr inbounds ([10 x %struct.VDMA_REGISTER_T*], [10 x %struct.VDMA_REGISTER_T*]* @vdma, i32 0, i32 5), %struct.VDMA_REGISTER_T** getelementptr inbounds ([10 x %struct.VDMA_REGISTER_T*], [10 x %struct.VDMA_REGISTER_T*]* @vdma, i32 0, i32 6), %struct.VDMA_REGISTER_T** getelementptr inbounds ([10 x %struct.VDMA_REGISTER_T*], [10 x %struct.VDMA_REGISTER_T*]* @vdma, i32 0, i32 7), %struct.VDMA_REGISTER_T** getelementptr inbounds ([10 x %struct.VDMA_REGISTER_T*], [10 x %struct.VDMA_REGISTER_T*]* @vdma, i32 0, i32 8), %struct.VDMA_REGISTER_T** getelementptr inbounds ([10 x %struct.VDMA_REGISTER_T*], [10 x %struct.VDMA_REGISTER_T*]* @vdma, i32 0, i32 9)], align 4
@switch.table.vdma_init.6 = private unnamed_addr constant [10 x i32] [i32 16, i32 262160, i32 16, i32 262160, i32 16, i32 262160, i32 16, i32 262160, i32 16, i32 262160], align 4
@__const.is_pin_with_pullsel.pin_number_with_pullsel = private unnamed_addr constant [5 x i32] [i32 0, i32 1, i32 2, i32 3, i32 10], align 4
@gpio_register_base = dso_local local_unnamed_addr global %struct.GPIO_REGISTER_T* inttoptr (i32 -1576927232 to %struct.GPIO_REGISTER_T*), align 4, !dbg !631
@g_uart_hwstatus = internal global [4 x i32] zeroinitializer, align 4, !dbg !907
@.str.45 = private unnamed_addr constant [49 x i8] c"../../../../../driver/chip/mt2523/src/hal_uart.c\00", align 1
@__func__.uart_receive_handler = private unnamed_addr constant [21 x i8] c"uart_receive_handler\00", align 1
@.str.1.46 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@g_uart_callback = internal unnamed_addr global [4 x %struct.gdma_user_callback_t] zeroinitializer, align 4, !dbg !1030
@g_uart_dma_config = internal global [4 x %struct.hal_uart_dma_config_t] zeroinitializer, align 4, !dbg !1048
@__func__.uart_send_handler = private unnamed_addr constant [18 x i8] c"uart_send_handler\00", align 1
@g_uart_frist_send_complete_interrupt = internal unnamed_addr global [4 x i8] zeroinitializer, align 1, !dbg !992
@g_uart_send_lock_status = internal unnamed_addr global [4 x i8] zeroinitializer, align 1, !dbg !997
@g_uart_sleep_handler = internal unnamed_addr global [4 x i8] zeroinitializer, align 1, !dbg !999
@__func__.uart_error_handler = private unnamed_addr constant [19 x i8] c"uart_error_handler\00", align 1
@g_uart_flowcontrol_status = internal unnamed_addr global [4 x i32] zeroinitializer, align 4, !dbg !1001
@g_uart_irq_pending_status = internal unnamed_addr global [4 x i8] zeroinitializer, align 1, !dbg !1028
@g_uart_restore_init = internal unnamed_addr global i1 false, align 1, !dbg !1073
@g_uart_config = internal global [4 x %struct.hal_uart_config_t] zeroinitializer, align 4, !dbg !1014
@g_uart_sw_flowcontrol_config = internal unnamed_addr global [4 x %struct.uart_sw_flowcontrol_config_t] zeroinitializer, align 1, !dbg !1005
@g_uart_baudrate_map = internal unnamed_addr constant [13 x i32] [i32 110, i32 300, i32 1200, i32 2400, i32 4800, i32 9600, i32 19200, i32 38400, i32 57600, i32 115200, i32 230400, i32 460800, i32 921600], align 4, !dbg !1062
@g_uart_global_data_initialized = internal unnamed_addr global i1 false, align 1, !dbg !1074
@__func__.hal_uart_init = private unnamed_addr constant [14 x i8] c"hal_uart_init\00", align 1
@__func__.hal_uart_deinit = private unnamed_addr constant [16 x i8] c"hal_uart_deinit\00", align 1
@__func__.hal_uart_send_dma = private unnamed_addr constant [18 x i8] c"hal_uart_send_dma\00", align 1
@__func__.hal_uart_receive_dma = private unnamed_addr constant [21 x i8] c"hal_uart_receive_dma\00", align 1
@g_uart_dma_callback_data = internal global [8 x %struct.uart_dma_callback_data_t] zeroinitializer, align 4, !dbg !1043
@__func__.hal_uart_register_callback = private unnamed_addr constant [27 x i8] c"hal_uart_register_callback\00", align 1
@__func__.hal_uart_get_available_send_space = private unnamed_addr constant [34 x i8] c"hal_uart_get_available_send_space\00", align 1
@__func__.hal_uart_get_available_receive_bytes = private unnamed_addr constant [37 x i8] c"hal_uart_get_available_receive_bytes\00", align 1
@__func__.hal_uart_set_dma = private unnamed_addr constant [17 x i8] c"hal_uart_set_dma\00", align 1
@__func__.uart_start_dma_transmission = private unnamed_addr constant [28 x i8] c"uart_start_dma_transmission\00", align 1
@__const.uart_set_baudrate.fraction_L_mapping = private unnamed_addr constant [10 x i32] [i32 0, i32 0, i32 32, i32 144, i32 168, i32 84, i32 108, i32 186, i32 246, i32 254], align 4
@g_uart_regbase = dso_local local_unnamed_addr constant [4 x %struct.UART_REGISTER_T*] [%struct.UART_REGISTER_T* inttoptr (i32 -1609760768 to %struct.UART_REGISTER_T*), %struct.UART_REGISTER_T* inttoptr (i32 -1609695232 to %struct.UART_REGISTER_T*), %struct.UART_REGISTER_T* inttoptr (i32 -1609629696 to %struct.UART_REGISTER_T*), %struct.UART_REGISTER_T* inttoptr (i32 -1609564160 to %struct.UART_REGISTER_T*)], align 4, !dbg !1075
@g_uart_port_to_pdn = dso_local local_unnamed_addr constant [4 x i32] [i32 45, i32 46, i32 47, i32 48], align 4, !dbg !1147
@g_uart_port_to_irq_num = dso_local local_unnamed_addr constant [4 x i32] [i32 29, i32 30, i32 31, i32 32], align 4, !dbg !1152
@.str.89 = private unnamed_addr constant [6 x i8] c"uart0\00", align 1
@.str.1.90 = private unnamed_addr constant [6 x i8] c"uart1\00", align 1
@.str.2.91 = private unnamed_addr constant [6 x i8] c"uart2\00", align 1
@.str.3.92 = private unnamed_addr constant [6 x i8] c"uart3\00", align 1
@g_uart_sleep_handler_name = dso_local local_unnamed_addr constant [4 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.89, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.90, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2.91, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3.92, i32 0, i32 0)], align 4, !dbg !1156
@.str.4.101 = private unnamed_addr constant [67 x i8] c"../../../../../driver/chip/mt2523/src/hal_uart_internal_platform.c\00", align 1
@__func__.uart_interrupt_handler = private unnamed_addr constant [23 x i8] c"uart_interrupt_handler\00", align 1
@.str.5.102 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@switch.table.uart_dma_channel_to_callback_data = private unnamed_addr constant [8 x i8] c"\00\01\00\01\00\01\00\01", align 1
@switch.table.uart_dma_channel_to_callback_data.6 = private unnamed_addr constant [8 x i32] [i32 1, i32 1, i32 2, i32 2, i32 3, i32 3, i32 0, i32 0], align 4
@g_i2c_tx_dma_channel = dso_local local_unnamed_addr constant [4 x i32] [i32 3, i32 5, i32 7, i32 7], align 4, !dbg !1162
@g_i2c_rx_dma_channel = dso_local local_unnamed_addr constant [4 x i32] [i32 4, i32 6, i32 7, i32 7], align 4, !dbg !1266
@g_i2c_source_clock_table = dso_local local_unnamed_addr global [4 x i32] [i32 26000, i32 26000, i32 62400, i32 62400], align 4, !dbg !1273
@g_i2c_pdn_table = dso_local local_unnamed_addr constant [4 x i32] [i32 138, i32 137, i32 39, i32 38], align 4, !dbg !1271
@i2c_master_register = dso_local local_unnamed_addr constant [4 x %struct.I2C_REGISTER_T*] [%struct.I2C_REGISTER_T* inttoptr (i32 -1608450048 to %struct.I2C_REGISTER_T*), %struct.I2C_REGISTER_T* inttoptr (i32 -1608384512 to %struct.I2C_REGISTER_T*), %struct.I2C_REGISTER_T* inttoptr (i32 -1608843264 to %struct.I2C_REGISTER_T*), %struct.I2C_REGISTER_T* inttoptr (i32 -1575682048 to %struct.I2C_REGISTER_T*)], align 4, !dbg !1202
@__FUNCTION__.pmic_i2c_send_polling = private unnamed_addr constant [22 x i8] c"pmic_i2c_send_polling\00", align 1
@.str.103 = private unnamed_addr constant [25 x i8] c"i2c pmic send error:%d\0D\0A\00", align 1
@__FUNCTION__.pmic_i2c_send_to_receive_polling = private unnamed_addr constant [33 x i8] c"pmic_i2c_send_to_receive_polling\00", align 1
@.str.1.104 = private unnamed_addr constant [33 x i8] c"i2c pmic send_to_read error:%d\0D\0A\00", align 1
@hal_nvic_init.priority_set = internal unnamed_addr global i1 false, align 4, !dbg !1276
@defualt_irq_priority = internal unnamed_addr constant [64 x i32] [i32 5, i32 68, i32 7, i32 8, i32 68, i32 68, i32 68, i32 68, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 68, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 40, i32 68, i32 68, i32 43, i32 44, i32 26, i32 46, i32 47, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68], align 4, !dbg !1364
@nvic_function_table = dso_local local_unnamed_addr global [64 x %struct.nvic_function_t] zeroinitializer, align 4, !dbg !1353
@__FUNCTION__.isrC_main = private unnamed_addr constant [10 x i8] c"isrC_main\00", align 1
@.str.111 = private unnamed_addr constant [25 x i8] c"ERROR: no IRQ handler! \0A\00", align 1
@.str.121 = private unnamed_addr constant [6 x i8] c"VCORE\00", align 1
@.str.1.122 = private unnamed_addr constant [10 x i8] c"MSDC_DVFS\00", align 1
@sd_dvfs_lock = dso_local global %struct._dvfs_lock_t { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.121, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1.122, i32 0, i32 0), i32 0, %struct._dvfs_domain_t* null, %struct._dvfs_lock_t* null, %struct._dvfs_lock_t* null }, align 4, !dbg !1369
@__FUNCTION__.hal_sd_set_bus_width = private unnamed_addr constant [21 x i8] c"hal_sd_set_bus_width\00", align 1
@.str.2.123 = private unnamed_addr constant [23 x i8] c"sd error status = %d\0D\0A\00", align 1
@__FUNCTION__.hal_sd_init = private unnamed_addr constant [12 x i8] c"hal_sd_init\00", align 1
@.str.3.124 = private unnamed_addr constant [18 x i8] c"parameter error\0D\0A\00", align 1
@.str.4.125 = private unnamed_addr constant [23 x i8] c"msdc_%d used by SDIO\0D\0A\00", align 1
@.str.5.126 = private unnamed_addr constant [26 x i8] c"sd clock tuning error \0D\0A!\00", align 1
@.str.6.127 = private unnamed_addr constant [24 x i8] c"sd error status = %d \0D\0A\00", align 1
@__FUNCTION__.hal_sd_get_capacity = private unnamed_addr constant [20 x i8] c"hal_sd_get_capacity\00", align 1
@.str.7 = private unnamed_addr constant [19 x i8] c"parameter error.\0D\0A\00", align 1
@.str.8 = private unnamed_addr constant [23 x i8] c"card not initialize.\0D\0A\00", align 1
@__FUNCTION__.hal_sd_erase_sectors = private unnamed_addr constant [21 x i8] c"hal_sd_erase_sectors\00", align 1
@__FUNCTION__.hal_sd_read_blocks = private unnamed_addr constant [19 x i8] c"hal_sd_read_blocks\00", align 1
@.str.9 = private unnamed_addr constant [39 x i8] c"hal_sd_read_blocks, SDC_DATSTA = %x \0D\0A\00", align 1
@__FUNCTION__.hal_sd_write_blocks = private unnamed_addr constant [20 x i8] c"hal_sd_write_blocks\00", align 1
@.str.10 = private unnamed_addr constant [28 x i8] c"card is write protection.\0D\0A\00", align 1
@.str.11 = private unnamed_addr constant [40 x i8] c"hal_sd_write_blocks, SDC_DATSTA = %x \0D\0A\00", align 1
@__FUNCTION__.hal_sd_read_blocks_dma_blocking = private unnamed_addr constant [32 x i8] c"hal_sd_read_blocks_dma_blocking\00", align 1
@.str.12 = private unnamed_addr constant [33 x i8] c"hal_sd_read_blocks_dma, busy! \0D\0A\00", align 1
@__FUNCTION__.hal_sd_write_blocks_dma_blocking = private unnamed_addr constant [33 x i8] c"hal_sd_write_blocks_dma_blocking\00", align 1
@__FUNCTION__.hal_sd_read_blocks_dma = private unnamed_addr constant [23 x i8] c"hal_sd_read_blocks_dma\00", align 1
@.str.13 = private unnamed_addr constant [38 x i8] c"msdc_sd_dma_interrupt_callback null\0D\0A\00", align 1
@__FUNCTION__.hal_sd_write_blocks_dma = private unnamed_addr constant [24 x i8] c"hal_sd_write_blocks_dma\00", align 1
@__FUNCTION__.hal_sd_set_clock = private unnamed_addr constant [17 x i8] c"hal_sd_set_clock\00", align 1
@__FUNCTION__.hal_sd_get_clock = private unnamed_addr constant [17 x i8] c"hal_sd_get_clock\00", align 1
@__FUNCTION__.hal_sd_get_card_type = private unnamed_addr constant [21 x i8] c"hal_sd_get_card_type\00", align 1
@__FUNCTION__.hal_sd_get_ocr = private unnamed_addr constant [15 x i8] c"hal_sd_get_ocr\00", align 1
@__FUNCTION__.hal_sd_get_card_status = private unnamed_addr constant [23 x i8] c"hal_sd_get_card_status\00", align 1
@__FUNCTION__.hal_sd_get_erase_sector_size = private unnamed_addr constant [29 x i8] c"hal_sd_get_erase_sector_size\00", align 1
@__FUNCTION__.hal_sd_get_cid = private unnamed_addr constant [15 x i8] c"hal_sd_get_cid\00", align 1
@__FUNCTION__.hal_sd_get_csd = private unnamed_addr constant [15 x i8] c"hal_sd_get_csd\00", align 1
@__FUNCTION__.sd_wait_data_ready = private unnamed_addr constant [19 x i8] c"sd_wait_data_ready\00", align 1
@.str.134 = private unnamed_addr constant [30 x i8] c"wait sd data ready timeout.\0D\0A\00", align 1
@__FUNCTION__.sd_wait_command_ready = private unnamed_addr constant [22 x i8] c"sd_wait_command_ready\00", align 1
@.str.1.135 = private unnamed_addr constant [33 x i8] c"wait sd command ready timeout.\0D\0A\00", align 1
@sd_information = dso_local global %struct.sd_information_t zeroinitializer, align 8, !dbg !1634
@sd_csd = dso_local global [4 x i32] zeroinitializer, align 4, !dbg !1889
@__FUNCTION__.sd_wait_card_not_busy = private unnamed_addr constant [22 x i8] c"sd_wait_card_not_busy\00", align 1
@.str.2.158 = private unnamed_addr constant [21 x i8] c"wait sd r1b error!\0D\0A\00", align 1
@.str.3.159 = private unnamed_addr constant [27 x i8] c"wait sd besdcbusy error!\0D\0A\00", align 1
@mmc_extended_csd = internal global [128 x i32] zeroinitializer, align 4, !dbg !1884
@__FUNCTION__.sd_latch_read_blocks = private unnamed_addr constant [21 x i8] c"sd_latch_read_blocks\00", align 1
@.str.4.180 = private unnamed_addr constant [18 x i8] c"parameter error\0D\0A\00", align 1
@.str.5.181 = private unnamed_addr constant [41 x i8] c"sd_latch_read_blocks, SDC_DATSTA = %x \0D\0A\00", align 1
@sd_read_buffer = internal global [128 x i32] zeroinitializer, align 4, !dbg !1891
@__FUNCTION__.sd_latch_data_test = private unnamed_addr constant [19 x i8] c"sd_latch_data_test\00", align 1
@.str.6.182 = private unnamed_addr constant [43 x i8] c"sd_latch_read_blocks error, status = %d \0D\0A\00", align 1
@.str.7.185 = private unnamed_addr constant [56 x i8] c"../../../../../driver/chip/mt2523/src/hal_sd_internal.c\00", align 1
@__func__.sd_output_clock_tuning = private unnamed_addr constant [23 x i8] c"sd_output_clock_tuning\00", align 1
@.str.8.186 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@sd_dma_interrupt_context = internal global [2 x %struct.sd_dma_interrupt_context_t] zeroinitializer, align 4, !dbg !1893
@sd_dma_interrupt_gpt_timer = internal global i32 0, align 4, !dbg !1896
@sd_backup_register = internal global %struct.msdc_register_t zeroinitializer, align 4, !dbg !1913
@sd_backup_parameter = internal global %struct.sd_backup_parameter_t zeroinitializer, align 4, !dbg !1898
@sd_dma_interrput_gpt_callback.count = internal unnamed_addr global i8 0, align 1, !dbg !1916
@__FUNCTION__.sd_dma_interrupt_error_handle = private unnamed_addr constant [30 x i8] c"sd_dma_interrupt_error_handle\00", align 1
@.str.9.189 = private unnamed_addr constant [51 x i8] c"msdc:sd_wait_dma_interrupt_transfer_ready error!\0D\0A\00", align 1
@dvfs_1p1v_need_sd_clock_tuning = dso_local local_unnamed_addr global i8 0, align 1, !dbg !1996
@dvfs_1p3v_need_sd_clock_tuning = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2092
@dvfs_save_sd_init_clock = dso_local local_unnamed_addr global i32 0, align 4, !dbg !2094
@.str.196 = private unnamed_addr constant [6 x i8] c"VCORE\00", align 1
@.str.1.197 = private unnamed_addr constant [8 x i8] c"MSDC_CK\00", align 1
@.str.2.198 = private unnamed_addr constant [10 x i8] c"MSDC_DVFS\00", align 1
@msdc_desc = dso_local global %struct._dvfs_notification_t { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.196, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.197, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2.198, i32 0, i32 0), %struct.dvfs_notification_ops_t { i1 (i32, i32)* @msdc_valid, void (i32, i32)* @msdc_prepare }, %struct._dvfs_domain_t* null, %struct._dvfs_opp_module_t* null, %struct._dvfs_notification_t* null, %struct._dvfs_notification_t* null }, align 4, !dbg !2096
@msdc_output_clock = dso_local local_unnamed_addr constant [7 x %struct.msdc_clock_t] [%struct.msdc_clock_t { i32 44570, i8 0, i8 1, i8 1 }, %struct.msdc_clock_t { i32 39000, i8 0, i8 1, i8 2 }, %struct.msdc_clock_t { i32 31200, i8 0, i8 1, i8 3 }, %struct.msdc_clock_t { i32 22275, i8 1, i8 1, i8 1 }, %struct.msdc_clock_t { i32 19500, i8 1, i8 1, i8 2 }, %struct.msdc_clock_t { i32 15600, i8 1, i8 1, i8 3 }, %struct.msdc_clock_t { i32 13000, i8 0, i8 0, i8 0 }], align 4, !dbg !2171
@__FUNCTION__.msdc_reset = private unnamed_addr constant [11 x i8] c"msdc_reset\00", align 1
@.str.3.209 = private unnamed_addr constant [22 x i8] c"msdc reset timeout.\0D\0A\00", align 1
@msdc_config = dso_local global [2 x %struct.msdc_config_t] zeroinitializer, align 4, !dbg !2182
@__FUNCTION__.msdc_power_set = private unnamed_addr constant [15 x i8] c"msdc_power_set\00", align 1
@.str.4.220 = private unnamed_addr constant [30 x i8] c"msdc set clock gating error\0D\0A\00", align 1
@__FUNCTION__.msdc_dma_isr = private unnamed_addr constant [13 x i8] c"msdc_dma_isr\00", align 1
@.str.5.229 = private unnamed_addr constant [39 x i8] c"msdc:msdc_dma_isr wait sd ready err!\0D\0A\00", align 1
@__FUNCTION__.msdc1_dma_isr = private unnamed_addr constant [14 x i8] c"msdc1_dma_isr\00", align 1
@__FUNCTION__.msdc_dma_config = private unnamed_addr constant [16 x i8] c"msdc_dma_config\00", align 1
@.str.6.234 = private unnamed_addr constant [26 x i8] c"msdc config pdma error!\0D\0A\00", align 1
@msdc_clock_before_dvfs.0 = internal unnamed_addr global i32 0, align 4, !dbg !2214
@msdc_clock_before_dvfs.1 = internal unnamed_addr global i32 0, align 4, !dbg !2215
@msdc_pinmux_switch_flag = internal global i32 0, align 4, !dbg !2212
@DelayResume = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2216
@.str.255 = private unnamed_addr constant [61 x i8] c"../../../../../driver/chip/mt2523/src/hal_flash_mtd_common.c\00", align 1
@__func__.SFI_BlankCheck = private unnamed_addr constant [15 x i8] c"SFI_BlankCheck\00", align 1
@.str.1.256 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@__func__.SFI_MacEnable = private unnamed_addr constant [14 x i8] c"SFI_MacEnable\00", align 1
@NOR_FLASH_LeaveDPDCmd = dso_local local_unnamed_addr global i8 0, section ".tcm_rwdata", align 1, !dbg !2267
@NOR_FLASH_FATStartAddr = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !2269
@NOR_FLASH_FATStartValue = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !2271
@SFI_MAC_CTL_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !2273
@SFI_DIRECT_CTL_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !2275
@SFI_MISC_CTL_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !2277
@SFI_MISC_CTL2_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !2279
@SFI_DLY_CTL_3_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !2281
@SFI_CLK_SWITCH_MISC_CTL_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !2283
@SFI_CLK_SWITCH_DLY_CTL_3_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !2285
@sf_dal_brbusy_wait = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2287
@sf_dal_resume_time = dso_local local_unnamed_addr global i32 -1, align 4, !dbg !2597
@sf_dal_flash_return_ready_max = dso_local local_unnamed_addr global i32 0, align 4, !dbg !2599
@.str.259 = private unnamed_addr constant [58 x i8] c"../../../../../driver/chip/mt2523/src/hal_flash_mtd_dal.c\00", align 1
@__func__.Flash_ReturnReady = private unnamed_addr constant [18 x i8] c"Flash_ReturnReady\00", align 1
@.str.1.260 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@__func__.Flash_CheckReady = private unnamed_addr constant [17 x i8] c"Flash_CheckReady\00", align 1
@__func__.Flash_ResumeOperation = private unnamed_addr constant [22 x i8] c"Flash_ResumeOperation\00", align 1
@__func__.Flash_SuspendOperation = private unnamed_addr constant [23 x i8] c"Flash_SuspendOperation\00", align 1
@MTDMutex = internal unnamed_addr global i1 false, align 4, !dbg !2606
@__func__.SF_DAL_FreeDevLock = private unnamed_addr constant [19 x i8] c"SF_DAL_FreeDevLock\00", align 1
@__func__.SF_DAL_Init_Vendor = private unnamed_addr constant [19 x i8] c"SF_DAL_Init_Vendor\00", align 1
@__func__.SF_DAL_IOCtrl = private unnamed_addr constant [14 x i8] c"SF_DAL_IOCtrl\00", align 1
@__func__.SF_DAL_ProgramData = private unnamed_addr constant [19 x i8] c"SF_DAL_ProgramData\00", align 1
@tmp_data_buffer = internal unnamed_addr global [128 x i8] zeroinitializer, align 1, !dbg !2601
@__func__.SF_DAL_EraseBlock = private unnamed_addr constant [18 x i8] c"SF_DAL_EraseBlock\00", align 1
@__func__.SF_DAL_CheckReadyAndResume = private unnamed_addr constant [27 x i8] c"SF_DAL_CheckReadyAndResume\00", align 1
@__func__.SF_DAL_CheckDeviceReady = private unnamed_addr constant [24 x i8] c"SF_DAL_CheckDeviceReady\00", align 1
@combo_mem_id_list = dso_local constant %struct.GFH_CMEM_ID_INFO_v1 { %struct.GFH_Header { i32 21843277, i16 72, i32 258 }, %struct.CMEMEntryIDList { i32 1, i32 5, [5 x %struct.CMEMEntryID] [%struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\C2(\16\00\00\00\00\00" }, %struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\C2(\15\00\00\00\00\00" }, %struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\EFp\16\00\00\00\00\00" }, %struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\C2%8\00\00\00\00\00" }, %struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\EF@\18\00\00\00\00\00" }] } }, align 4, !dbg !2607
@cmem_index = internal unnamed_addr global i16 -1, align 2, !dbg !2658
@cmem_emiinit_index = internal unnamed_addr global i16 -1, align 2, !dbg !2661
@FLASH_ID = dso_local local_unnamed_addr constant [19 x i8] c"{0xC2, 0x28, 0x16}\00", align 1, !dbg !2694
@nor_egid = dso_local local_unnamed_addr global %struct.anon.37* null, align 4, !dbg !2703
@EntireDiskMtdData = dso_local global %struct.SF_MTD_Data zeroinitializer, align 4, !dbg !3019
@RegionInfo = internal global [8 x %struct.hal_cache_region_config_t] zeroinitializer, align 4, !dbg !2890
@mtdflash = dso_local global %struct.SF_MTD_Data zeroinitializer, align 4, !dbg !2918
@nor_list = internal unnamed_addr global %struct.CMEMEntryNOR* null, align 4, !dbg !3021
@cmem_nor_index = internal unnamed_addr global i32 0, align 4, !dbg !2728
@PAGE_BUFFER_SIZE = dso_local local_unnamed_addr global i32 0, align 4, !dbg !2914
@NORFlashMtd = dso_local global %struct.NOR_MTD_Driver zeroinitializer, align 4, !dbg !2916
@FlashDriveData = dso_local local_unnamed_addr global %struct.NOR_FLASH_DRV_Data zeroinitializer, align 4, !dbg !2740
@StatusMap = dso_local global [8 x i8] zeroinitializer, align 1, !dbg !3001
@sf_dal_data_cmd = dso_local global %struct.SF_MTD_CMD zeroinitializer, align 1, !dbg !3004
@combo_mem_sw_list = internal constant %struct.GFH_CMEM_NOR_INFO_v1 { %struct.GFH_Header { i32 21843277, i16 700, i32 259 }, %struct.CMEMEntryNORList { i32 2, i32 5, [5 x %struct.CMEMEntryNOR] [%struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 0, i32 4096 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer], [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 4194304, i32 1 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer] }, %struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 0, i32 4096 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer], [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 4194304, i32 1 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer] }, %struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 0, i32 4096 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer], [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 4194304, i32 1 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer] }, %struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 0, i32 4096 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer], [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 4194304, i32 1 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer] }, %struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 0, i32 4096 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer], [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 4194304, i32 1 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer] }] } }, align 4, !dbg !3034
@BlockLayout = internal unnamed_addr global %struct.hal_cache_region_config_t* null, align 4, !dbg !2893
@BankInfo = internal global [8 x %struct.hal_cache_region_config_t] zeroinitializer, align 4, !dbg !2906
@TOTAL_BLOCKS = dso_local local_unnamed_addr global i32 0, align 4, !dbg !2877
@NOR_LARGEST_BLOCK_SIZE = dso_local local_unnamed_addr global i32 0, align 4, !dbg !2881
@TOTAL_SECTORS = dso_local local_unnamed_addr global i32 0, align 4, !dbg !2879
@cmem_id = dso_local local_unnamed_addr global %struct.CMEMEntryID* null, align 4, !dbg !2730
@.str.275 = private unnamed_addr constant [60 x i8] c"../../../../../driver/chip/mt2523/src/hal_flash_combo_nor.c\00", align 1
@__func__.CMEM_Init_nor_list = private unnamed_addr constant [19 x i8] c"CMEM_Init_nor_list\00", align 1
@.str.1.276 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@EntireDiskRegionInfo = internal global [8 x %struct.hal_cache_region_config_t] zeroinitializer, align 4, !dbg !3006
@__func__.CMEM_Init_FullDriver = private unnamed_addr constant [21 x i8] c"CMEM_Init_FullDriver\00", align 1
@FDMBuffer = dso_local local_unnamed_addr global [512 x i8] zeroinitializer, align 1, !dbg !2885
@CS0_SIZE = dso_local local_unnamed_addr global i32 0, align 4, !dbg !2902
@CS1_SIZE = dso_local local_unnamed_addr global i32 0, align 4, !dbg !2904
@FDMMutex = internal unnamed_addr global i1 false, align 4, !dbg !3061
@.str.281 = private unnamed_addr constant [55 x i8] c"../../../../../driver/chip/mt2523/src/hal_flash_disk.c\00", align 1
@.str.1.282 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@__func__.FreeFDMLock = private unnamed_addr constant [12 x i8] c"FreeFDMLock\00", align 1
@flash_init_status = internal unnamed_addr global i1 false, section ".tcm_rwdata", align 4, !dbg !3121
@EntireDiskDriveData = dso_local global %struct.NOR_FLASH_DISK_Data zeroinitializer, align 4, !dbg !3008
@__func__.get_rawdisk_error_code = private unnamed_addr constant [23 x i8] c"get_rawdisk_error_code\00", align 1
@__func__.get_block_size_from_address = private unnamed_addr constant [28 x i8] c"get_block_size_from_address\00", align 1
@__func__.MountDevice = private unnamed_addr constant [12 x i8] c"MountDevice\00", align 1
@switch.table.get_rawdisk_error_code = private unnamed_addr constant [9 x i32] [i32 -7, i32 -3, i32 -3, i32 -3, i32 -3, i32 -4, i32 -3, i32 -6, i32 -7], align 4
@gNOR_ReturnReadyBegin = dso_local local_unnamed_addr global i32 0, align 4, !dbg !3122
@gNOR_ReturnReadyEnd = dso_local local_unnamed_addr global i32 -1, align 4, !dbg !3129
@NOR_Flash_Base_Address = dso_local local_unnamed_addr global i32 0, align 4, !dbg !3131
@NOR_FLASH_BUSY = dso_local local_unnamed_addr global i8 0, align 1, !dbg !3133
@NOR_FLASH_SUSPENDED = dso_local local_unnamed_addr global i8 0, align 1, !dbg !3135
@.str.297 = private unnamed_addr constant [54 x i8] c"../../../../../driver/chip/mt2523/src/hal_flash_mtd.c\00", align 1
@__func__.MapWindow = private unnamed_addr constant [10 x i8] c"MapWindow\00", align 1
@.str.1.298 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@__func__.DelayAWhile_UST = private unnamed_addr constant [16 x i8] c"DelayAWhile_UST\00", align 1
@LookupAddress.replaced = internal unnamed_addr global i32 0, align 4, !dbg !3137
@LookupAddress.look_up_hit = internal unnamed_addr global i32 0, align 4, !dbg !3191
@LookupAddress.look_up_miss = internal unnamed_addr global i32 0, align 4, !dbg !3193
@pmu_init_mt6385.init = internal unnamed_addr global i1 false, align 1, !dbg !3195
@__FUNCTION__.pmu_init_mt6385 = private unnamed_addr constant [16 x i8] c"pmu_init_mt6385\00", align 1
@.str.305 = private unnamed_addr constant [21 x i8] c"\0A\0DPMU Version : E1\0A\0D\00", align 1
@.str.1.306 = private unnamed_addr constant [21 x i8] c"\0A\0DPMU Version : E2\0A\0D\00", align 1
@pmu_power_mode_init_setting_E1 = internal global [10 x [8 x i8]] [[8 x i8] c"\01\00\00\02\02\00\00\00", [8 x i8] c"\01\00\00\03\02\00\00\00", [8 x i8] c"\01\00\00\03\03\01\00\00", [8 x i8] c"\01\00\00\02\02\01\06\06", [8 x i8] c"\01\02\02\02\02\00\00\00", [8 x i8] c"\01\00\00\02\02\00\00\00", [8 x i8] c"\01\00\00\02\02\00\04\04", [8 x i8] c"\00\00\00\02\02\00\03\03", [8 x i8] c"\01\00\00\02\02\00\02\02", [8 x i8] c"\01\00\00\02\02\01\01\01"], align 1, !dbg !3383
@pmu_power_mode_init_setting_E2 = internal global [10 x [8 x i8]] [[8 x i8] c"\01\00\00\02\02\00\00\00", [8 x i8] c"\01\00\00\02\02\00\00\00", [8 x i8] c"\01\00\00\03\03\01\00\00", [8 x i8] c"\01\00\00\02\02\01\00\00", [8 x i8] c"\01\02\02\02\02\00\00\00", [8 x i8] c"\01\00\00\02\02\00\00\00", [8 x i8] c"\00\00\00\02\02\01\00\00", [8 x i8] c"\00\00\00\02\02\01\01\01", [8 x i8] c"\00\00\00\02\02\01\00\00", [8 x i8] c"\00\00\00\02\02\01\00\00"], align 1, !dbg !3387
@pmu_eint_handler.index = internal unnamed_addr global i32 0, align 4, !dbg !3359
@pmu_eint_handler.int_sts = internal unnamed_addr global [7 x i32] zeroinitializer, align 4, !dbg !3365
@pmu_function_table = dso_local local_unnamed_addr global [32 x %struct.pmu_function_t] zeroinitializer, align 4, !dbg !3370
@__FUNCTION__.pmu_init = private unnamed_addr constant [9 x i8] c"pmu_init\00", align 1
@.str.307 = private unnamed_addr constant [23 x i8] c"\0A\0Duse internal pmic \0A\0D\00", align 1
@__FUNCTION__.internal_pmu_ctrl_power = private unnamed_addr constant [24 x i8] c"internal_pmu_ctrl_power\00", align 1
@.str.1.316 = private unnamed_addr constant [48 x i8] c"EXTERNAL PMU ERROR: No matching Power Control!\0A\00", align 1
@pmu_mtcmos_ldo_ctrl = dso_local local_unnamed_addr global i16 448, align 2, !dbg !3397
@pmu_mtcmos_ldo_en = dso_local local_unnamed_addr global i16 0, align 2, !dbg !3429
@pmu_mtcmos_vio28_pmod = dso_local local_unnamed_addr global i16 0, align 2, !dbg !3431
@__FUNCTION__.PMIC_VR_PSI_PMOD_CONFIG = private unnamed_addr constant [24 x i8] c"PMIC_VR_PSI_PMOD_CONFIG\00", align 1
@.str.327 = private unnamed_addr constant [30 x i8] c"PMU ERROR: Illegal PSI Mode!\0A\00", align 1
@.str.1.328 = private unnamed_addr constant [29 x i8] c"PMU ERROR: Illegal PSI Mode\0A\00", align 1
@.str.2.329 = private unnamed_addr constant [29 x i8] c"PMU ERROR: No matching LDO!\0A\00", align 1
@__FUNCTION__.PMIC_VR_SLEEP_WKUP_CONFIG = private unnamed_addr constant [26 x i8] c"PMIC_VR_SLEEP_WKUP_CONFIG\00", align 1
@.str.3.332 = private unnamed_addr constant [30 x i8] c"PMU ERROR: Illegal PSI mode!\0A\00", align 1
@.str.4.333 = private unnamed_addr constant [52 x i8] c"PMU ERROR: wk_slot > Wake sequence length setting!\0A\00", align 1
@.str.5.334 = private unnamed_addr constant [40 x i8] c"PMU ERROR: Undefined control mode =%d!\0A\00", align 1
@.str.6.335 = private unnamed_addr constant [52 x i8] c"PMU ERROR: No sleep wake up setting for VCORE LDO!\0A\00", align 1
@.str.7.336 = private unnamed_addr constant [52 x i8] c"PMU ERROR: No sleep wake up setting for VIO18 LDO!\0A\00", align 1
@.str.8.337 = private unnamed_addr constant [31 x i8] c"PMU ERROR: Illeagal PSI mode!\0A\00", align 1
@.str.9.338 = private unnamed_addr constant [52 x i8] c"PMU ERROR: No sleep wake up setting for VDIG18 LDO!\00", align 1
@.str.10.339 = private unnamed_addr constant [43 x i8] c"PMU ERROR: wk_slot should greater than 0!\0A\00", align 1
@.str.11.340 = private unnamed_addr constant [52 x i8] c"PMU ERROR: No sleep wake up setting for VCAMA LDO!\0A\00", align 1
@.str.12.341 = private unnamed_addr constant [51 x i8] c"PMU ERROR: No sleep wake up setting for VIBR! LDO\0A\00", align 1
@.str.13.342 = private unnamed_addr constant [51 x i8] c"PMU ERROR: No sleep wake up setting for SWMP! LDO\0A\00", align 1
@.str.14 = private unnamed_addr constant [28 x i8] c"PMU ERROR: No matching LDO!\00", align 1
@__FUNCTION__.PMIC_VR_CONTROL = private unnamed_addr constant [16 x i8] c"PMIC_VR_CONTROL\00", align 1
@.str.15 = private unnamed_addr constant [44 x i8] c"PMU ERROR: VCORE LDO cannot be turned off!\0A\00", align 1
@.str.16 = private unnamed_addr constant [44 x i8] c"PMU ERROR: VIO18 LDO cannot be turned off!\0A\00", align 1
@.str.17 = private unnamed_addr constant [28 x i8] c"PMU ERROR: No matching VR!\0A\00", align 1
@__const.PMIC_VCORE_VOSEL_CONFIG.vc_ldo_vosel = private unnamed_addr constant [7 x i32] [i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12], align 4
@__FUNCTION__.PMIC_VCORE_VOSEL_CONFIG = private unnamed_addr constant [24 x i8] c"PMIC_VCORE_VOSEL_CONFIG\00", align 1
@.str.18 = private unnamed_addr constant [56 x i8] c"PMU ERROR: Illegal PSI mode for setting VCORE voltage!\0A\00", align 1
@__const.PMIC_VR_VOSEL_INIT_CONFIG.viber_vosel = private unnamed_addr constant [8 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7], align 4
@__FUNCTION__.PMIC_VR_VOSEL_INIT_CONFIG = private unnamed_addr constant [26 x i8] c"PMIC_VR_VOSEL_INIT_CONFIG\00", align 1
@.str.19 = private unnamed_addr constant [32 x i8] c"PMU ERROR: No support voltage!\0A\00", align 1
@pmu_control_mtcmos_mt6385.local_flag = internal unnamed_addr global i16 0, align 2, !dbg !3433
@pmu_control_mtcmos_mt6385.mtcmos_flag = internal unnamed_addr global i16 0, align 2, !dbg !3436
@pmu_ctrl_va28_ldo_mt6385.resoure_count = internal unnamed_addr global i32 0, align 4, !dbg !3438
@pmu_ctrl_va28_ldo_mt6385.version = internal unnamed_addr global i8 0, align 1, !dbg !3445
@__const.pmu_get_vcore_setting_index.vcbuck_voval = private unnamed_addr constant [7 x i8] c"\02\04\06\08\0A\0C\0E", align 1
@pmu_set_vcore_voltage_mt6385.Vcore_Resource_Ctrl = internal unnamed_addr global [7 x i8] zeroinitializer, align 1, !dbg !3447
@pmu_set_vcore_voltage_mt6385.origin_voltage = internal unnamed_addr global i8 0, align 1, !dbg !3457
@pmu_set_vcore_voltage_mt6385.old_vcore = internal unnamed_addr global i8 0, align 1, !dbg !3459
@pmu_set_vcore_voltage_mt6385.old_vcore_lp = internal unnamed_addr global i8 0, align 1, !dbg !3461
@pmu_set_vcore_voltage_mt6385.init = internal unnamed_addr global i1 false, align 1, !dbg !3473
@pmu_set_vcore_s1_buck_mt6385.S1_setting = internal unnamed_addr global i32 255, align 4, !dbg !3465
@__const.pmu_set_vcore_s1_buck_mt6385.vcbuck_voval = private unnamed_addr constant [7 x i32] [i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14], align 4
@emi_settings = dso_local local_unnamed_addr global [1 x %struct.EMI_SETTINGS] [%struct.EMI_SETTINGS { i32 16, i32 0, i32 16384, i32 -1608118272, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 131074, i32 131074 }], section ".tcm_rwdata", align 4, !dbg !3474
@__EMI_CurSR0 = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !3486
@__EMI_CurSR1 = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !3488
@__EMI_CurSR2 = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !3490
@emi_register = dso_local local_unnamed_addr global %struct.EMI_REGISTER_T* inttoptr (i32 -1610285056 to %struct.EMI_REGISTER_T*), section ".tcm_rwdata", align 4, !dbg !3492
@EMI_GENA_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !3595
@EMI_RDCT_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !3597
@EMI_DSRAM_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !3599
@EMI_MSRAM_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !3601
@EMI_IDL_C_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !3603
@EMI_IDL_D_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !3605
@EMI_IDL_E_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !3607
@EMI_ODL_C_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !3609
@EMI_ODL_D_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !3611
@EMI_ODL_E_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !3613
@EMI_ODL_F_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !3615
@EMI_IO_A_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !3617
@EMI_IO_B_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !3619
@__const.TestCase_MBIST.mbist_data = private unnamed_addr constant [2 x i32] [i32 23205, i32 65535], align 4
@emi_register_backup = dso_local global %struct.EMI_REGISTER_T zeroinitializer, section ".tcm_zidata", align 4, !dbg !3621
@dvfs_dma_runing_status = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !3593
@dvfs_domain_head = internal unnamed_addr global %struct._dvfs_domain_t* null, align 4, !dbg !3640
@.str.365 = private unnamed_addr constant [58 x i8] c"../../../../../driver/chip/mt2523/src/hal_dvfs_internal.c\00", align 1
@__func__.dvfs_register_domain = private unnamed_addr constant [21 x i8] c"dvfs_register_domain\00", align 1
@.str.1.366 = private unnamed_addr constant [7 x i8] c"domain\00", align 1
@.str.2.367 = private unnamed_addr constant [27 x i8] c"domain=%s already exists\0D\0A\00", align 1
@__func__.dvfs_register_notification = private unnamed_addr constant [27 x i8] c"dvfs_register_notification\00", align 1
@.str.3.370 = private unnamed_addr constant [5 x i8] c"node\00", align 1
@.str.4.371 = private unnamed_addr constant [13 x i8] c"node->domain\00", align 1
@.str.5.372 = private unnamed_addr constant [13 x i8] c"node->module\00", align 1
@.str.6.373 = private unnamed_addr constant [16 x i8] c"node->addressee\00", align 1
@.str.7.374 = private unnamed_addr constant [12 x i8] c"!node->prev\00", align 1
@.str.8.375 = private unnamed_addr constant [12 x i8] c"!node->next\00", align 1
@.str.9.376 = private unnamed_addr constant [10 x i8] c"node->mod\00", align 1
@__func__.dvfs_deregister_notification = private unnamed_addr constant [29 x i8] c"dvfs_deregister_notification\00", align 1
@__func__.dvfs_lock = private unnamed_addr constant [10 x i8] c"dvfs_lock\00", align 1
@.str.10.381 = private unnamed_addr constant [5 x i8] c"lock\00", align 1
@.str.11.382 = private unnamed_addr constant [13 x i8] c"lock->domain\00", align 1
@.str.12.383 = private unnamed_addr constant [16 x i8] c"lock->addressee\00", align 1
@.str.13.384 = private unnamed_addr constant [12 x i8] c"!lock->prev\00", align 1
@.str.14.385 = private unnamed_addr constant [12 x i8] c"!lock->next\00", align 1
@.str.15.386 = private unnamed_addr constant [20 x i8] c"!lock->dm->lock_end\00", align 1
@__func__.dvfs_unlock = private unnamed_addr constant [12 x i8] c"dvfs_unlock\00", align 1
@__FUNCTION__.dvfs_debug_dump = private unnamed_addr constant [16 x i8] c"dvfs_debug_dump\00", align 1
@.str.16.389 = private unnamed_addr constant [22 x i8] c"==== domain=%s ====\0D\0A\00", align 1
@.str.17.390 = private unnamed_addr constant [70 x i8] c"cur_opp=%u, opp_num=%u, module_num=%u, notification_num=%u, lock=%p\0D\0A\00", align 1
@.str.18.391 = private unnamed_addr constant [32 x i8] c"[%d] frequency=%u, voltage=%u\0D\0A\00", align 1
@.str.19.392 = private unnamed_addr constant [15 x i8] c"[lock %s:%u]\0D\0A\00", align 1
@.str.20 = private unnamed_addr constant [18 x i8] c"== module=%s ==\0D\0A\00", align 1
@.str.21 = private unnamed_addr constant [20 x i8] c"[%d] frequency=%u\0D\0A\00", align 1
@.str.22 = private unnamed_addr constant [17 x i8] c"notificaion=%s\0D\0A\00", align 1
@dvfs_switched_to_privileged = dso_local local_unnamed_addr global i8 0, section ".tcm_zidata", align 1, !dbg !3645
@cm_freq_state = dso_local local_unnamed_addr global i32 1, section ".tcm_rwdata", align 4, !dbg !3722
@HAL_MSDC_EINT = dso_local local_unnamed_addr constant i8 19, align 1, !dbg !3734
@.str.395 = private unnamed_addr constant [5 x i8] c"\0D\0A\0D\0A\00", align 1
@.str.1.396 = private unnamed_addr constant [20 x i8] c"welcome to main()\0D\0A\00", align 1
@sd_read_mutil_buffer = dso_local global [512 x i32] zeroinitializer, section ".noncached_rwdata", align 4, !dbg !3740
@sd_write_mutil_buffer = dso_local global [512 x i32] zeroinitializer, section ".noncached_rwdata", align 4, !dbg !3743
@.str.2.397 = private unnamed_addr constant [45 x i8] c"SD read write data dma example test begin!\0D\0A\00", align 1
@.str.3.404 = private unnamed_addr constant [16 x i8] c"SD init fail!\0D\0A\00", align 1
@.str.4.398 = private unnamed_addr constant [30 x i8] c"SD write (dma mode) failed!\0D\0A\00", align 1
@.str.5.399 = private unnamed_addr constant [29 x i8] c"SD read (dma mode) failed!\0D\0A\00", align 1
@.str.6.402 = private unnamed_addr constant [29 x i8] c"SD data comparison failed!\0D\0A\00", align 1
@.str.7.401 = private unnamed_addr constant [3 x i8] c"\0D\0A\00", align 1
@.str.8.400 = private unnamed_addr constant [40 x i8] c"SD read write data dma example test ok!\00", align 1
@.str.9.403 = private unnamed_addr constant [31 x i8] c"example project test success.\0A\00", align 1
@_sbrk_r.heap_end = internal unnamed_addr global i8* null, align 4, !dbg !3746
@end = external dso_local global i8, align 1
@System_Initialize_Done = internal global i32 0, align 4, !dbg !3947
@SystemCoreClock = dso_local local_unnamed_addr global i32 0, align 4, !dbg !4055
@build_date_time_str = dso_local local_unnamed_addr global [31 x i8] c"2022/12/13 08:01:18 GMT +00:00\00", align 1, !dbg !4057
@sw_verno_str = dso_local local_unnamed_addr global [11 x i8] c"SDK_V4.6.1\00", align 1, !dbg !4062
@hw_verno_str = dso_local local_unnamed_addr global [11 x i8] c"mt2523_hdk\00", align 1, !dbg !4068

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_init() local_unnamed_addr #0 !dbg !4190 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #22, !dbg !4198
  call void @llvm.dbg.value(metadata i32 %1, metadata !4197, metadata !DIExpression()), !dbg !4199
  %2 = load volatile i8, i8* @g_cache_status, align 1, !dbg !4200, !range !4202
  %3 = icmp eq i8 %2, 0, !dbg !4200
  br i1 %3, label %5, label %4, !dbg !4203

4:                                                ; preds = %0
  tail call void @restore_interrupt_mask(i32 noundef %1) #22, !dbg !4204
  br label %15, !dbg !4206

5:                                                ; preds = %0
  store volatile i8 1, i8* @g_cache_status, align 1, !dbg !4207
  tail call void @restore_interrupt_mask(i32 noundef %1) #22, !dbg !4209
  %6 = tail call i32 @hal_cache_invalidate_all_cache_lines() #23, !dbg !4210
  store volatile i32 0, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !4211
  store volatile i32 0, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !4212
  store i32 0, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !4213
  store i32 0, i32* @g_cache_region_en, align 4, !dbg !4214
  call void @llvm.dbg.value(metadata i32 0, metadata !4195, metadata !DIExpression()), !dbg !4199
  br label %7, !dbg !4215

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %13, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !4195, metadata !DIExpression()), !dbg !4199
  %9 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634304 to [16 x i32]*), i32 0, i32 %8, !dbg !4217
  store volatile i32 0, i32* %9, align 4, !dbg !4220
  %10 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634240 to [16 x i32]*), i32 0, i32 %8, !dbg !4221
  store volatile i32 0, i32* %10, align 4, !dbg !4222
  %11 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %8, i32 0, i32 0, i32 0, !dbg !4223
  store i32 0, i32* %11, align 4, !dbg !4224
  %12 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %8, i32 1, i32 0, i32 0, !dbg !4225
  store i32 0, i32* %12, align 4, !dbg !4226
  %13 = add nuw nsw i32 %8, 1, !dbg !4227
  call void @llvm.dbg.value(metadata i32 %13, metadata !4195, metadata !DIExpression()), !dbg !4199
  %14 = icmp eq i32 %13, 16, !dbg !4228
  br i1 %14, label %15, label %7, !dbg !4215, !llvm.loop !4229

15:                                               ; preds = %7, %4
  %16 = phi i32 [ -6, %4 ], [ 0, %7 ], !dbg !4199
  ret i32 %16, !dbg !4231
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_invalidate_all_cache_lines() local_unnamed_addr #0 section ".tcm_code" !dbg !4232 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #22, !dbg !4235
  call void @llvm.dbg.value(metadata i32 %1, metadata !4234, metadata !DIExpression()), !dbg !4236
  %2 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !4237
  %3 = and i32 %2, -31, !dbg !4237
  store volatile i32 %3, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !4237
  %4 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !4238
  %5 = or i32 %4, 19, !dbg !4238
  store volatile i32 %5, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !4238
  %6 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !4239
  %7 = and i32 %6, -31, !dbg !4239
  store volatile i32 %7, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !4239
  %8 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !4240
  %9 = or i32 %8, 3, !dbg !4240
  store volatile i32 %9, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !4240
  tail call void asm sideeffect "isb", ""() #24, !dbg !4241, !srcloc !4245
  tail call void @restore_interrupt_mask(i32 noundef %1) #22, !dbg !4246
  ret i32 0, !dbg !4247
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_deinit() local_unnamed_addr #0 !dbg !4248 {
  %1 = tail call i32 @hal_cache_invalidate_all_cache_lines() #23, !dbg !4251
  store volatile i32 0, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !4252
  store volatile i32 0, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !4253
  store i32 0, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !4254
  store i32 0, i32* @g_cache_region_en, align 4, !dbg !4255
  call void @llvm.dbg.value(metadata i32 0, metadata !4250, metadata !DIExpression()), !dbg !4256
  br label %2, !dbg !4257

2:                                                ; preds = %0, %2
  %3 = phi i32 [ 0, %0 ], [ %8, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !4250, metadata !DIExpression()), !dbg !4256
  %4 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634304 to [16 x i32]*), i32 0, i32 %3, !dbg !4259
  store volatile i32 0, i32* %4, align 4, !dbg !4262
  %5 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634240 to [16 x i32]*), i32 0, i32 %3, !dbg !4263
  store volatile i32 0, i32* %5, align 4, !dbg !4264
  %6 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %3, i32 0, i32 0, i32 0, !dbg !4265
  store i32 0, i32* %6, align 4, !dbg !4266
  %7 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %3, i32 1, i32 0, i32 0, !dbg !4267
  store i32 0, i32* %7, align 4, !dbg !4268
  %8 = add nuw nsw i32 %3, 1, !dbg !4269
  call void @llvm.dbg.value(metadata i32 %8, metadata !4250, metadata !DIExpression()), !dbg !4256
  %9 = icmp eq i32 %8, 16, !dbg !4270
  br i1 %9, label %10, label %2, !dbg !4257, !llvm.loop !4271

10:                                               ; preds = %2
  store volatile i8 0, i8* @g_cache_status, align 1, !dbg !4273
  ret i32 0, !dbg !4274
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_cache_enable() local_unnamed_addr #2 !dbg !4275 {
  %1 = load i32, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !4276
  %2 = and i32 %1, 768, !dbg !4278
  %3 = icmp eq i32 %2, 0, !dbg !4278
  br i1 %3, label %8, label %4, !dbg !4279

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !4280
  %6 = or i32 %5, 13, !dbg !4280
  store volatile i32 %6, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !4280
  %7 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !4281
  store i32 %7, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !4282
  br label %8, !dbg !4283

8:                                                ; preds = %0, %4
  %9 = phi i32 [ 0, %4 ], [ -5, %0 ], !dbg !4284
  ret i32 %9, !dbg !4285
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_disable() local_unnamed_addr #0 !dbg !4286 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #22, !dbg !4289
  call void @llvm.dbg.value(metadata i32 %1, metadata !4288, metadata !DIExpression()), !dbg !4290
  %2 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !4291
  %3 = and i32 %2, 1, !dbg !4293
  %4 = icmp eq i32 %3, 0, !dbg !4293
  br i1 %4, label %7, label %5, !dbg !4294

5:                                                ; preds = %0
  %6 = tail call i32 @hal_cache_invalidate_all_cache_lines() #23, !dbg !4295
  br label %7, !dbg !4297

7:                                                ; preds = %5, %0
  %8 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !4298
  %9 = and i32 %8, -2, !dbg !4298
  store volatile i32 %9, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !4298
  %10 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !4299
  store i32 %10, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !4300
  tail call void @restore_interrupt_mask(i32 noundef %1) #22, !dbg !4301
  ret i32 0, !dbg !4302
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_cache_region_enable(i32 noundef %0) local_unnamed_addr #2 !dbg !4303 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4307, metadata !DIExpression()), !dbg !4308
  %2 = icmp ugt i32 %0, 15, !dbg !4309
  br i1 %2, label %13, label %3, !dbg !4311

3:                                                ; preds = %1
  %4 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634304 to [16 x i32]*), i32 0, i32 %0, !dbg !4312
  %5 = load volatile i32, i32* %4, align 4, !dbg !4312
  %6 = and i32 %5, 256, !dbg !4314
  %7 = icmp eq i32 %6, 0, !dbg !4314
  br i1 %7, label %13, label %8, !dbg !4315

8:                                                ; preds = %3
  %9 = shl nuw nsw i32 1, %0, !dbg !4316
  %10 = load volatile i32, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !4318
  %11 = or i32 %10, %9, !dbg !4318
  store volatile i32 %11, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !4318
  %12 = load volatile i32, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !4319
  store i32 %12, i32* @g_cache_region_en, align 4, !dbg !4320
  br label %13, !dbg !4321

13:                                               ; preds = %3, %1, %8
  %14 = phi i32 [ 0, %8 ], [ -4, %1 ], [ -1, %3 ], !dbg !4308
  ret i32 %14, !dbg !4322
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_cache_region_disable(i32 noundef %0) local_unnamed_addr #2 !dbg !4323 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4325, metadata !DIExpression()), !dbg !4326
  %2 = icmp ugt i32 %0, 15, !dbg !4327
  br i1 %2, label %11, label %3, !dbg !4329

3:                                                ; preds = %1
  %4 = shl nuw nsw i32 1, %0, !dbg !4330
  %5 = xor i32 %4, -1, !dbg !4331
  %6 = load volatile i32, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !4332
  %7 = and i32 %6, %5, !dbg !4332
  store volatile i32 %7, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !4332
  %8 = load volatile i32, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !4333
  store i32 %8, i32* @g_cache_region_en, align 4, !dbg !4334
  %9 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %0, i32 0, i32 0, i32 0, !dbg !4335
  store i32 0, i32* %9, align 4, !dbg !4336
  %10 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %0, i32 1, i32 0, i32 0, !dbg !4337
  store i32 0, i32* %10, align 4, !dbg !4338
  br label %11, !dbg !4339

11:                                               ; preds = %1, %3
  %12 = phi i32 [ 0, %3 ], [ -4, %1 ], !dbg !4326
  ret i32 %12, !dbg !4340
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_cache_set_size(i32 noundef %0) local_unnamed_addr #2 !dbg !4341 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4346, metadata !DIExpression()), !dbg !4347
  %2 = icmp ugt i32 %0, 3, !dbg !4348
  br i1 %2, label %13, label %3, !dbg !4350

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !4351
  %5 = and i32 %4, -769, !dbg !4351
  store volatile i32 %5, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !4351
  %6 = shl nuw nsw i32 %0, 8, !dbg !4352
  %7 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !4353
  %8 = or i32 %7, %6, !dbg !4353
  store volatile i32 %8, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !4353
  %9 = icmp eq i32 %0, 0, !dbg !4354
  br i1 %9, label %10, label %11, !dbg !4356

10:                                               ; preds = %3
  store volatile i32 0, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !4357
  br label %11, !dbg !4359

11:                                               ; preds = %10, %3
  %12 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !4360
  store i32 %12, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !4361
  br label %13, !dbg !4362

13:                                               ; preds = %1, %11
  %14 = phi i32 [ 0, %11 ], [ -5, %1 ], !dbg !4347
  ret i32 %14, !dbg !4363
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_region_config(i32 noundef %0, %struct.hal_cache_region_config_t* noundef readonly %1) local_unnamed_addr #0 !dbg !4364 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4375, metadata !DIExpression()), !dbg !4377
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %1, metadata !4376, metadata !DIExpression()), !dbg !4377
  %3 = icmp ugt i32 %0, 15, !dbg !4378
  br i1 %3, label %30, label %4, !dbg !4380

4:                                                ; preds = %2
  %5 = icmp eq %struct.hal_cache_region_config_t* %1, null, !dbg !4381
  br i1 %5, label %30, label %6, !dbg !4383

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 0, i32 0, !dbg !4384
  %8 = load i32, i32* %7, align 4, !dbg !4384
  %9 = and i32 %8, 4095, !dbg !4386
  %10 = icmp eq i32 %9, 0, !dbg !4386
  br i1 %10, label %12, label %11, !dbg !4387

11:                                               ; preds = %6
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i32 0, i32 0), i32 noundef 251, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.hal_cache_region_config, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #25, !dbg !4388
  unreachable, !dbg !4388

12:                                               ; preds = %6
  %13 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 0, i32 1, !dbg !4390
  %14 = load i32, i32* %13, align 4, !dbg !4390
  %15 = and i32 %14, 4095, !dbg !4392
  %16 = icmp eq i32 %15, 0, !dbg !4392
  br i1 %16, label %18, label %17, !dbg !4393

17:                                               ; preds = %12
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i32 0, i32 0), i32 noundef 257, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.hal_cache_region_config, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #25, !dbg !4394
  unreachable, !dbg !4394

18:                                               ; preds = %12
  %19 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634304 to [16 x i32]*), i32 0, i32 %0, !dbg !4396
  store volatile i32 %8, i32* %19, align 4, !dbg !4397
  %20 = load i32, i32* %7, align 4, !dbg !4398
  %21 = load i32, i32* %13, align 4, !dbg !4399
  %22 = add i32 %21, %20, !dbg !4400
  %23 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634240 to [16 x i32]*), i32 0, i32 %0, !dbg !4401
  store volatile i32 %22, i32* %23, align 4, !dbg !4402
  %24 = load volatile i32, i32* %19, align 4, !dbg !4403
  %25 = or i32 %24, 256, !dbg !4403
  store volatile i32 %25, i32* %19, align 4, !dbg !4403
  %26 = load volatile i32, i32* %19, align 4, !dbg !4404
  %27 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %0, i32 0, i32 0, i32 0, !dbg !4405
  store i32 %26, i32* %27, align 4, !dbg !4406
  %28 = load volatile i32, i32* %23, align 4, !dbg !4407
  %29 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %0, i32 1, i32 0, i32 0, !dbg !4408
  store i32 %28, i32* %29, align 4, !dbg !4409
  br label %30, !dbg !4410

30:                                               ; preds = %4, %2, %18
  %31 = phi i32 [ 0, %18 ], [ -4, %2 ], [ -7, %4 ], !dbg !4377
  ret i32 %31, !dbg !4411
}

; Function Attrs: noreturn optsize
declare dso_local void @__assert_func(i8* noundef, i32 noundef, i8* noundef, i8* noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_invalidate_one_cache_line(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !4412 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4416, metadata !DIExpression()), !dbg !4418
  %2 = and i32 %0, 31, !dbg !4419
  %3 = icmp eq i32 %2, 0, !dbg !4419
  br i1 %3, label %4, label %9, !dbg !4421

4:                                                ; preds = %1
  %5 = tail call i32 @save_and_set_interrupt_mask() #22, !dbg !4422
  call void @llvm.dbg.value(metadata i32 %5, metadata !4417, metadata !DIExpression()), !dbg !4418
  %6 = and i32 %0, -32, !dbg !4423
  store volatile i32 %6, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !4424
  %7 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !4425
  %8 = or i32 %7, 5, !dbg !4425
  store volatile i32 %8, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !4425
  tail call void asm sideeffect "isb", ""() #24, !dbg !4426, !srcloc !4245
  tail call void @restore_interrupt_mask(i32 noundef %5) #22, !dbg !4428
  br label %9, !dbg !4429

9:                                                ; preds = %1, %4
  %10 = phi i32 [ 0, %4 ], [ -7, %1 ], !dbg !4418
  ret i32 %10, !dbg !4430
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_invalidate_multiple_cache_lines(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".tcm_code" !dbg !4431 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4435, metadata !DIExpression()), !dbg !4439
  call void @llvm.dbg.value(metadata i32 %1, metadata !4436, metadata !DIExpression()), !dbg !4439
  %3 = add i32 %1, %0, !dbg !4440
  call void @llvm.dbg.value(metadata i32 %3, metadata !4438, metadata !DIExpression()), !dbg !4439
  %4 = or i32 %1, %0, !dbg !4441
  %5 = and i32 %4, 31, !dbg !4441
  %6 = icmp eq i32 %5, 0, !dbg !4441
  br i1 %6, label %7, label %16, !dbg !4441

7:                                                ; preds = %2
  %8 = tail call i32 @save_and_set_interrupt_mask() #22, !dbg !4443
  call void @llvm.dbg.value(metadata i32 %8, metadata !4437, metadata !DIExpression()), !dbg !4439
  call void @llvm.dbg.value(metadata i32 %0, metadata !4435, metadata !DIExpression()), !dbg !4439
  %9 = icmp ugt i32 %3, %0, !dbg !4444
  br i1 %9, label %10, label %15, !dbg !4445

10:                                               ; preds = %7, %10
  %11 = phi i32 [ %13, %10 ], [ %0, %7 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !4435, metadata !DIExpression()), !dbg !4439
  %12 = tail call i32 @hal_cache_invalidate_one_cache_line(i32 noundef %11) #23, !dbg !4446
  %13 = add i32 %11, 32, !dbg !4448
  call void @llvm.dbg.value(metadata i32 %13, metadata !4435, metadata !DIExpression()), !dbg !4439
  %14 = icmp ult i32 %13, %3, !dbg !4444
  br i1 %14, label %10, label %15, !dbg !4445, !llvm.loop !4449

15:                                               ; preds = %10, %7
  tail call void asm sideeffect "isb", ""() #24, !dbg !4451, !srcloc !4245
  tail call void @restore_interrupt_mask(i32 noundef %8) #22, !dbg !4453
  br label %16, !dbg !4454

16:                                               ; preds = %2, %15
  %17 = phi i32 [ 0, %15 ], [ -7, %2 ], !dbg !4439
  ret i32 %17, !dbg !4455
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_flush_one_cache_line(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !4456 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4458, metadata !DIExpression()), !dbg !4460
  %2 = and i32 %0, 31, !dbg !4461
  %3 = icmp eq i32 %2, 0, !dbg !4461
  br i1 %3, label %4, label %9, !dbg !4463

4:                                                ; preds = %1
  %5 = tail call i32 @save_and_set_interrupt_mask() #22, !dbg !4464
  call void @llvm.dbg.value(metadata i32 %5, metadata !4459, metadata !DIExpression()), !dbg !4460
  %6 = and i32 %0, -32, !dbg !4465
  store volatile i32 %6, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !4466
  %7 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !4467
  %8 = or i32 %7, 21, !dbg !4467
  store volatile i32 %8, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !4467
  tail call void asm sideeffect "isb", ""() #24, !dbg !4468, !srcloc !4245
  tail call void @restore_interrupt_mask(i32 noundef %5) #22, !dbg !4470
  br label %9, !dbg !4471

9:                                                ; preds = %1, %4
  %10 = phi i32 [ 0, %4 ], [ -7, %1 ], !dbg !4460
  ret i32 %10, !dbg !4472
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_flush_multiple_cache_lines(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".tcm_code" !dbg !4473 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4475, metadata !DIExpression()), !dbg !4479
  call void @llvm.dbg.value(metadata i32 %1, metadata !4476, metadata !DIExpression()), !dbg !4479
  %3 = add i32 %1, %0, !dbg !4480
  call void @llvm.dbg.value(metadata i32 %3, metadata !4478, metadata !DIExpression()), !dbg !4479
  %4 = or i32 %1, %0, !dbg !4481
  %5 = and i32 %4, 31, !dbg !4481
  %6 = icmp eq i32 %5, 0, !dbg !4481
  br i1 %6, label %7, label %16, !dbg !4481

7:                                                ; preds = %2
  %8 = tail call i32 @save_and_set_interrupt_mask() #22, !dbg !4483
  call void @llvm.dbg.value(metadata i32 %8, metadata !4477, metadata !DIExpression()), !dbg !4479
  call void @llvm.dbg.value(metadata i32 %0, metadata !4475, metadata !DIExpression()), !dbg !4479
  %9 = icmp ugt i32 %3, %0, !dbg !4484
  br i1 %9, label %10, label %15, !dbg !4485

10:                                               ; preds = %7, %10
  %11 = phi i32 [ %13, %10 ], [ %0, %7 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !4475, metadata !DIExpression()), !dbg !4479
  %12 = tail call i32 @hal_cache_flush_one_cache_line(i32 noundef %11) #23, !dbg !4486
  %13 = add i32 %11, 32, !dbg !4488
  call void @llvm.dbg.value(metadata i32 %13, metadata !4475, metadata !DIExpression()), !dbg !4479
  %14 = icmp ult i32 %13, %3, !dbg !4484
  br i1 %14, label %10, label %15, !dbg !4485, !llvm.loop !4489

15:                                               ; preds = %10, %7
  tail call void asm sideeffect "isb", ""() #24, !dbg !4491, !srcloc !4245
  tail call void @restore_interrupt_mask(i32 noundef %8) #22, !dbg !4493
  br label %16, !dbg !4494

16:                                               ; preds = %2, %15
  %17 = phi i32 [ 0, %15 ], [ -7, %2 ], !dbg !4479
  ret i32 %17, !dbg !4495
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_flush_all_cache_lines() local_unnamed_addr #0 section ".tcm_code" !dbg !4496 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #22, !dbg !4499
  call void @llvm.dbg.value(metadata i32 %1, metadata !4498, metadata !DIExpression()), !dbg !4500
  %2 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !4501
  %3 = and i32 %2, -31, !dbg !4501
  store volatile i32 %3, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !4501
  %4 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !4502
  %5 = or i32 %4, 19, !dbg !4502
  store volatile i32 %5, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !4502
  tail call void asm sideeffect "isb", ""() #24, !dbg !4503, !srcloc !4245
  tail call void @restore_interrupt_mask(i32 noundef %1) #22, !dbg !4505
  ret i32 0, !dbg !4506
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local zeroext i1 @hal_cache_is_cacheable(i32 noundef %0) local_unnamed_addr #2 !dbg !4507 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4511, metadata !DIExpression()), !dbg !4513
  %2 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !4514
  %3 = and i32 %2, 8, !dbg !4516
  %4 = icmp eq i32 %3, 0, !dbg !4516
  br i1 %4, label %23, label %5, !dbg !4517

5:                                                ; preds = %1, %20
  %6 = phi i32 [ %21, %20 ], [ 0, %1 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !4512, metadata !DIExpression()), !dbg !4513
  %7 = load volatile i32, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !4518
  %8 = shl nuw nsw i32 1, %6, !dbg !4523
  %9 = and i32 %7, %8, !dbg !4524
  %10 = icmp eq i32 %9, 0, !dbg !4524
  br i1 %10, label %20, label %11, !dbg !4525

11:                                               ; preds = %5
  %12 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634304 to [16 x i32]*), i32 0, i32 %6, !dbg !4526
  %13 = load volatile i32, i32* %12, align 4, !dbg !4526
  %14 = and i32 %13, -257, !dbg !4529
  %15 = icmp ugt i32 %14, %0, !dbg !4530
  br i1 %15, label %20, label %16, !dbg !4531

16:                                               ; preds = %11
  %17 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634240 to [16 x i32]*), i32 0, i32 %6, !dbg !4532
  %18 = load volatile i32, i32* %17, align 4, !dbg !4532
  %19 = icmp ugt i32 %18, %0, !dbg !4533
  br i1 %19, label %23, label %20, !dbg !4534

20:                                               ; preds = %5, %16, %11
  %21 = add nuw nsw i32 %6, 1, !dbg !4535
  call void @llvm.dbg.value(metadata i32 %21, metadata !4512, metadata !DIExpression()), !dbg !4513
  %22 = icmp eq i32 %21, 16, !dbg !4536
  br i1 %22, label %23, label %5, !dbg !4537, !llvm.loop !4538

23:                                               ; preds = %20, %16, %1
  %24 = phi i1 [ false, %1 ], [ false, %20 ], [ true, %16 ], !dbg !4513
  ret i1 %24, !dbg !4540
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_init(i32 noundef %0) local_unnamed_addr #0 !dbg !4541 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4547, metadata !DIExpression()), !dbg !4548
  %2 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #23, !dbg !4549
  br i1 %2, label %3, label %32, !dbg !4551

3:                                                ; preds = %1
  %4 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, !dbg !4552
  %5 = getelementptr inbounds %struct.gpt_context_t, %struct.gpt_context_t* %4, i32 0, i32 0, !dbg !4554
  %6 = load i32, i32* %5, align 4, !dbg !4554
  %7 = icmp eq i32 %6, 1, !dbg !4555
  br i1 %7, label %32, label %8, !dbg !4556

8:                                                ; preds = %3
  %9 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !4557
  %10 = load i8, i8* %9, align 4, !dbg !4557, !range !4202
  %11 = icmp eq i8 %10, 0, !dbg !4557
  br i1 %11, label %12, label %32, !dbg !4558

12:                                               ; preds = %8
  %13 = bitcast %struct.gpt_context_t* %4 to i8*, !dbg !4559
  %14 = tail call i8* @memset(i8* noundef nonnull %13, i32 noundef 0, i32 noundef 16) #22, !dbg !4560
  tail call void @gpt_open_clock_source() #22, !dbg !4561
  store i8 1, i8* %9, align 4, !dbg !4562
  %15 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %0, !dbg !4563
  %16 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %15, align 4, !dbg !4563
  %17 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %16, i32 0, i32 2, !dbg !4564
  %18 = load volatile i32, i32* %17, align 4, !dbg !4565
  %19 = and i32 %18, -2, !dbg !4565
  store volatile i32 %19, i32* %17, align 4, !dbg !4565
  %20 = shl nuw i32 1, %0, !dbg !4566
  %21 = xor i32 %20, -1, !dbg !4567
  %22 = load %struct.GPT_REGISTER_GLOABL_T*, %struct.GPT_REGISTER_GLOABL_T** @gp_gpt_glb, align 4, !dbg !4568
  %23 = getelementptr inbounds %struct.GPT_REGISTER_GLOABL_T, %struct.GPT_REGISTER_GLOABL_T* %22, i32 0, i32 2, !dbg !4569
  %24 = load volatile i32, i32* %23, align 4, !dbg !4570
  %25 = and i32 %24, %21, !dbg !4570
  store volatile i32 %25, i32* %23, align 4, !dbg !4570
  %26 = getelementptr inbounds [6 x i8*], [6 x i8*]* @gpt_lock_sleep_name, i32 0, i32 %0, !dbg !4571
  %27 = load i8*, i8** %26, align 4, !dbg !4571
  %28 = tail call zeroext i8 @hal_sleep_manager_set_sleep_handle(i8* noundef %27) #22, !dbg !4571
  %29 = getelementptr inbounds [6 x i8], [6 x i8]* @gpt_lock_sleep_handle, i32 0, i32 %0, !dbg !4571
  store i8 %28, i8* %29, align 1, !dbg !4571
  %30 = icmp eq i8 %28, -1, !dbg !4573
  br i1 %30, label %31, label %32, !dbg !4571

31:                                               ; preds = %12
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @__FUNCTION__.hal_gpt_init, i32 0, i32 0), i32 noundef 123, i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.2, i32 0, i32 0), i32 noundef %0) #22, !dbg !4575
  br label %32, !dbg !4575

32:                                               ; preds = %12, %3, %8, %1, %31
  %33 = phi i32 [ -3, %31 ], [ -2, %1 ], [ -4, %8 ], [ -4, %3 ], [ 0, %12 ], !dbg !4548
  ret i32 %33, !dbg !4577
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) unnamed_addr #4 !dbg !4578 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4582, metadata !DIExpression()), !dbg !4583
  %2 = load i8, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !4584, !range !4202
  %3 = icmp ne i8 %2, 0, !dbg !4586
  %4 = icmp ne i32 %0, 3
  %5 = icmp ult i32 %0, 4
  %6 = or i1 %4, %3, !dbg !4587
  %7 = and i1 %5, %6, !dbg !4587
  ret i1 %7, !dbg !4588
}

; Function Attrs: optsize
declare dso_local i8* @memset(i8* noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local zeroext i8 @hal_sleep_manager_set_sleep_handle(i8* noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_deinit(i32 noundef %0) local_unnamed_addr #0 !dbg !4589 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4591, metadata !DIExpression()), !dbg !4592
  %2 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #23, !dbg !4593
  br i1 %2, label %3, label %17, !dbg !4595

3:                                                ; preds = %1
  %4 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, !dbg !4596
  %5 = getelementptr inbounds %struct.gpt_context_t, %struct.gpt_context_t* %4, i32 0, i32 0, !dbg !4598
  %6 = load i32, i32* %5, align 4, !dbg !4598
  %7 = icmp eq i32 %6, 1, !dbg !4599
  br i1 %7, label %17, label %8, !dbg !4600

8:                                                ; preds = %3
  %9 = bitcast %struct.gpt_context_t* %4 to i8*, !dbg !4601
  %10 = tail call i8* @memset(i8* noundef nonnull %9, i32 noundef 0, i32 noundef 16) #22, !dbg !4602
  %11 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !4603
  store i8 0, i8* %11, align 4, !dbg !4604
  %12 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %0, !dbg !4605
  %13 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %12, align 4, !dbg !4605
  tail call void @gpt_reset_default_timer(%struct.GPT_REGISTER_T* noundef %13) #22, !dbg !4606
  %14 = getelementptr inbounds [6 x i8], [6 x i8]* @gpt_lock_sleep_handle, i32 0, i32 %0, !dbg !4607
  %15 = load i8, i8* %14, align 1, !dbg !4607
  %16 = tail call i32 @hal_sleep_manager_release_sleep_handle(i8 noundef zeroext %15) #22, !dbg !4607
  br label %17, !dbg !4609

17:                                               ; preds = %3, %1, %8
  %18 = phi i32 [ 0, %8 ], [ -2, %1 ], [ -3, %3 ], !dbg !4592
  ret i32 %18, !dbg !4610
}

; Function Attrs: optsize
declare dso_local i32 @hal_sleep_manager_release_sleep_handle(i8 noundef zeroext) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_get_free_run_count(i32 noundef %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #0 section ".tcm_code" !dbg !4611 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4616, metadata !DIExpression()), !dbg !4618
  call void @llvm.dbg.value(metadata i32* %1, metadata !4617, metadata !DIExpression()), !dbg !4618
  switch i32 %0, label %22 [
    i32 0, label %3
    i32 1, label %11
  ], !dbg !4619

3:                                                ; preds = %2
  %4 = load i32, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 5, i32 0), align 4, !dbg !4620
  %5 = icmp eq i32 %4, 1, !dbg !4624
  br i1 %5, label %8, label %6, !dbg !4625

6:                                                ; preds = %3
  %7 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 5), align 4, !dbg !4626
  tail call void @gpt_start_free_run_timer(%struct.GPT_REGISTER_T* noundef %7, i32 noundef 16, i32 noundef 0) #22, !dbg !4628
  store i32 1, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 5, i32 0), align 4, !dbg !4629
  br label %8, !dbg !4630

8:                                                ; preds = %6, %3
  %9 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 5), align 4, !dbg !4631
  %10 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %9) #22, !dbg !4632
  br label %20, !dbg !4633

11:                                               ; preds = %2
  %12 = load i32, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !4634
  %13 = icmp eq i32 %12, 1, !dbg !4638
  br i1 %13, label %16, label %14, !dbg !4639

14:                                               ; preds = %11
  %15 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 4), align 4, !dbg !4640
  tail call void @gpt_start_free_run_timer(%struct.GPT_REGISTER_T* noundef %15, i32 noundef 0, i32 noundef 12) #22, !dbg !4642
  store i32 1, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !4643
  br label %16, !dbg !4644

16:                                               ; preds = %14, %11
  %17 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 4), align 4, !dbg !4645
  %18 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %17) #22, !dbg !4646
  %19 = tail call i32 @gpt_clock_calibrate_count_to_us(i32 noundef %18) #22, !dbg !4647
  br label %20

20:                                               ; preds = %16, %8
  %21 = phi i32 [ %19, %16 ], [ %10, %8 ], !dbg !4648
  store i32 %21, i32* %1, align 4, !dbg !4648
  br label %22, !dbg !4649

22:                                               ; preds = %2, %20
  %23 = phi i32 [ 0, %20 ], [ -1, %2 ], !dbg !4618
  ret i32 %23, !dbg !4650
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @hal_gpt_get_duration_count(i32 noundef %0, i32 noundef %1, i32* noundef writeonly %2) local_unnamed_addr #6 section ".tcm_code" !dbg !4651 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4655, metadata !DIExpression()), !dbg !4658
  call void @llvm.dbg.value(metadata i32 %1, metadata !4656, metadata !DIExpression()), !dbg !4658
  call void @llvm.dbg.value(metadata i32* %2, metadata !4657, metadata !DIExpression()), !dbg !4658
  %4 = icmp eq i32* %2, null, !dbg !4659
  br i1 %4, label %7, label %5, !dbg !4661

5:                                                ; preds = %3
  %6 = sub i32 %1, %0, !dbg !4662
  store i32 %6, i32* %2, align 4, !dbg !4662
  br label %7, !dbg !4664

7:                                                ; preds = %3, %5
  %8 = phi i32 [ 0, %5 ], [ -1, %3 ], !dbg !4658
  ret i32 %8, !dbg !4665
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @hal_gpt_get_running_status(i32 noundef %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #7 !dbg !4666 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4671, metadata !DIExpression()), !dbg !4673
  call void @llvm.dbg.value(metadata i32* %1, metadata !4672, metadata !DIExpression()), !dbg !4673
  %3 = icmp ugt i32 %0, 5, !dbg !4674
  br i1 %3, label %7, label %4, !dbg !4676

4:                                                ; preds = %2
  %5 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !4677
  %6 = load i32, i32* %5, align 4, !dbg !4677
  store i32 %6, i32* %1, align 4, !dbg !4678
  br label %7, !dbg !4679

7:                                                ; preds = %2, %4
  %8 = phi i32 [ 0, %4 ], [ -2, %2 ], !dbg !4673
  ret i32 %8, !dbg !4680
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_register_callback(i32 noundef %0, void (i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !4681 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4685, metadata !DIExpression()), !dbg !4688
  call void @llvm.dbg.value(metadata void (i8*)* %1, metadata !4686, metadata !DIExpression()), !dbg !4688
  call void @llvm.dbg.value(metadata i8* %2, metadata !4687, metadata !DIExpression()), !dbg !4688
  %4 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #23, !dbg !4689
  br i1 %4, label %5, label %18, !dbg !4691

5:                                                ; preds = %3
  %6 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !4692
  %7 = load i32, i32* %6, align 4, !dbg !4692
  %8 = icmp eq i32 %7, 1, !dbg !4694
  br i1 %8, label %18, label %9, !dbg !4695

9:                                                ; preds = %5
  %10 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !4696
  %11 = load i8, i8* %10, align 4, !dbg !4696, !range !4202
  %12 = icmp eq i8 %11, 1, !dbg !4697
  br i1 %12, label %13, label %18, !dbg !4698

13:                                               ; preds = %9
  %14 = icmp eq void (i8*)* %1, null, !dbg !4699
  br i1 %14, label %18, label %15, !dbg !4701

15:                                               ; preds = %13
  %16 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 1, i32 0, !dbg !4702
  store void (i8*)* %1, void (i8*)** %16, align 4, !dbg !4703
  %17 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 1, i32 1, !dbg !4704
  store i8* %2, i8** %17, align 4, !dbg !4705
  tail call void @gpt_nvic_register() #22, !dbg !4706
  br label %18, !dbg !4707

18:                                               ; preds = %13, %5, %9, %3, %15
  %19 = phi i32 [ 0, %15 ], [ -2, %3 ], [ -3, %9 ], [ -3, %5 ], [ -1, %13 ], !dbg !4688
  ret i32 %19, !dbg !4708
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_start_timer_ms(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !4709 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !4714, metadata !DIExpression()), !dbg !4718
  call void @llvm.dbg.value(metadata i32 %1, metadata !4715, metadata !DIExpression()), !dbg !4718
  call void @llvm.dbg.value(metadata i32 %2, metadata !4716, metadata !DIExpression()), !dbg !4718
  %5 = bitcast i32* %4 to i8*, !dbg !4719
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5), !dbg !4719
  call void @llvm.dbg.declare(metadata i32* %4, metadata !4717, metadata !DIExpression()), !dbg !4720
  %6 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #23, !dbg !4721
  br i1 %6, label %7, label %51, !dbg !4723

7:                                                ; preds = %3
  %8 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !4724
  %9 = load i32, i32* %8, align 4, !dbg !4724
  %10 = icmp eq i32 %9, 1, !dbg !4726
  br i1 %10, label %51, label %11, !dbg !4727

11:                                               ; preds = %7
  %12 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !4728
  %13 = load i8, i8* %12, align 4, !dbg !4728, !range !4202
  %14 = icmp eq i8 %13, 1, !dbg !4729
  br i1 %14, label %15, label %51, !dbg !4730

15:                                               ; preds = %11
  %16 = icmp ugt i32 %1, 130150523, !dbg !4731
  br i1 %16, label %51, label %17, !dbg !4733

17:                                               ; preds = %15
  %18 = tail call i32 @save_and_set_interrupt_mask() #22, !dbg !4734
  store volatile i32 %18, i32* %4, align 4, !dbg !4735
  tail call void @gpt_open_clock_source() #22, !dbg !4736
  %19 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %0, !dbg !4737
  %20 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !4737
  %21 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %20, i32 0, i32 2, !dbg !4738
  %22 = load volatile i32, i32* %21, align 4, !dbg !4739
  %23 = and i32 %22, -2, !dbg !4739
  store volatile i32 %23, i32* %21, align 4, !dbg !4739
  %24 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !4740
  %25 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %24, i32 0, i32 0, !dbg !4741
  %26 = load volatile i32, i32* %25, align 4, !dbg !4742
  %27 = and i32 %26, -2, !dbg !4742
  store volatile i32 %27, i32* %25, align 4, !dbg !4742
  %28 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !4743
  %29 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %28, i32 0, i32 1, !dbg !4744
  store volatile i32 16, i32* %29, align 4, !dbg !4745
  %30 = tail call i32 @gpt_convert_ms_to_32k_count(i32 noundef %1) #22, !dbg !4746
  %31 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !4747
  %32 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %31, i32 0, i32 6, !dbg !4748
  store volatile i32 %30, i32* %32, align 4, !dbg !4749
  %33 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !4750
  %34 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %33, i32 0, i32 4, !dbg !4751
  store volatile i32 1, i32* %34, align 4, !dbg !4752
  %35 = shl i32 %2, 4, !dbg !4753
  %36 = or i32 %35, 2, !dbg !4754
  %37 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !4755
  %38 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %37, i32 0, i32 0, !dbg !4756
  store volatile i32 %36, i32* %38, align 4, !dbg !4757
  %39 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4
  %40 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %39, i32 0, i32 5
  br label %41, !dbg !4758

41:                                               ; preds = %41, %17
  %42 = load volatile i32, i32* %40, align 4, !dbg !4759
  %43 = icmp eq i32 %42, 0, !dbg !4758
  br i1 %43, label %44, label %41, !dbg !4758, !llvm.loop !4760

44:                                               ; preds = %41
  %45 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %39, i32 0, i32 0, !dbg !4762
  %46 = load volatile i32, i32* %45, align 4, !dbg !4763
  %47 = or i32 %46, 1, !dbg !4763
  store volatile i32 %47, i32* %45, align 4, !dbg !4763
  %48 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !4764
  %49 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %48, i32 0, i32 2, !dbg !4765
  store volatile i32 1, i32* %49, align 4, !dbg !4766
  store i32 1, i32* %8, align 4, !dbg !4767
  %50 = load volatile i32, i32* %4, align 4, !dbg !4768
  tail call void @restore_interrupt_mask(i32 noundef %50) #22, !dbg !4769
  br label %51, !dbg !4770

51:                                               ; preds = %15, %7, %11, %3, %44
  %52 = phi i32 [ 0, %44 ], [ -2, %3 ], [ -4, %11 ], [ -4, %7 ], [ -1, %15 ], !dbg !4718
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !4771
  ret i32 %52, !dbg !4771
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #8

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #8

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_delay_ms(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !4772 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4776, metadata !DIExpression()), !dbg !4777
  %2 = load i32, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 5, i32 0), align 4, !dbg !4778
  %3 = icmp eq i32 %2, 1, !dbg !4780
  br i1 %3, label %6, label %4, !dbg !4781

4:                                                ; preds = %1
  %5 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 5), align 4, !dbg !4782
  tail call void @gpt_start_free_run_timer(%struct.GPT_REGISTER_T* noundef %5, i32 noundef 16, i32 noundef 0) #22, !dbg !4784
  store i32 1, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 5, i32 0), align 4, !dbg !4785
  br label %6, !dbg !4786

6:                                                ; preds = %4, %1
  %7 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 5), align 4, !dbg !4787
  %8 = tail call i32 @gpt_convert_ms_to_32k_count(i32 noundef %0) #22, !dbg !4788
  tail call void @gpt_delay_time(%struct.GPT_REGISTER_T* noundef %7, i32 noundef %8) #22, !dbg !4789
  ret i32 0, !dbg !4790
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_start_timer_us(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !4791 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !4793, metadata !DIExpression()), !dbg !4797
  call void @llvm.dbg.value(metadata i32 %1, metadata !4794, metadata !DIExpression()), !dbg !4797
  call void @llvm.dbg.value(metadata i32 %2, metadata !4795, metadata !DIExpression()), !dbg !4797
  %5 = bitcast i32* %4 to i8*, !dbg !4798
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5), !dbg !4798
  call void @llvm.dbg.declare(metadata i32* %4, metadata !4796, metadata !DIExpression()), !dbg !4799
  %6 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #23, !dbg !4800
  br i1 %6, label %7, label %53, !dbg !4802

7:                                                ; preds = %3
  %8 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !4803
  %9 = load i32, i32* %8, align 4, !dbg !4803
  %10 = icmp eq i32 %9, 1, !dbg !4805
  br i1 %10, label %53, label %11, !dbg !4806

11:                                               ; preds = %7
  %12 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !4807
  %13 = load i8, i8* %12, align 4, !dbg !4807, !range !4202
  %14 = icmp eq i8 %13, 1, !dbg !4808
  br i1 %14, label %15, label %53, !dbg !4809

15:                                               ; preds = %11
  %16 = getelementptr inbounds [6 x i8], [6 x i8]* @gpt_lock_sleep_handle, i32 0, i32 %0, !dbg !4810
  %17 = load i8, i8* %16, align 1, !dbg !4810
  %18 = tail call i32 @hal_sleep_manager_lock_sleep(i8 noundef zeroext %17) #22, !dbg !4810
  %19 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 3, !dbg !4812
  store i8 1, i8* %19, align 1, !dbg !4813
  %20 = tail call i32 @save_and_set_interrupt_mask() #22, !dbg !4814
  store volatile i32 %20, i32* %4, align 4, !dbg !4815
  tail call void @gpt_open_clock_source() #22, !dbg !4816
  %21 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %0, !dbg !4817
  %22 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %21, align 4, !dbg !4817
  %23 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %22, i32 0, i32 2, !dbg !4818
  %24 = load volatile i32, i32* %23, align 4, !dbg !4819
  %25 = and i32 %24, -2, !dbg !4819
  store volatile i32 %25, i32* %23, align 4, !dbg !4819
  %26 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %21, align 4, !dbg !4820
  %27 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %26, i32 0, i32 0, !dbg !4821
  %28 = load volatile i32, i32* %27, align 4, !dbg !4822
  %29 = and i32 %28, -2, !dbg !4822
  store volatile i32 %29, i32* %27, align 4, !dbg !4822
  %30 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %21, align 4, !dbg !4823
  %31 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %30, i32 0, i32 1, !dbg !4824
  store volatile i32 12, i32* %31, align 4, !dbg !4825
  %32 = tail call i32 @gpt_clock_calibrate_us_to_count(i32 noundef %1) #22, !dbg !4826
  %33 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %21, align 4, !dbg !4827
  %34 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %33, i32 0, i32 6, !dbg !4828
  store volatile i32 %32, i32* %34, align 4, !dbg !4829
  %35 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %21, align 4, !dbg !4830
  %36 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %35, i32 0, i32 4, !dbg !4831
  store volatile i32 1, i32* %36, align 4, !dbg !4832
  %37 = shl i32 %2, 4, !dbg !4833
  %38 = or i32 %37, 2, !dbg !4834
  %39 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %21, align 4, !dbg !4835
  %40 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %39, i32 0, i32 0, !dbg !4836
  store volatile i32 %38, i32* %40, align 4, !dbg !4837
  %41 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %21, align 4
  %42 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %41, i32 0, i32 5
  br label %43, !dbg !4838

43:                                               ; preds = %43, %15
  %44 = load volatile i32, i32* %42, align 4, !dbg !4839
  %45 = icmp eq i32 %44, 0, !dbg !4838
  br i1 %45, label %46, label %43, !dbg !4838, !llvm.loop !4840

46:                                               ; preds = %43
  %47 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %41, i32 0, i32 0, !dbg !4842
  %48 = load volatile i32, i32* %47, align 4, !dbg !4843
  %49 = or i32 %48, 1, !dbg !4843
  store volatile i32 %49, i32* %47, align 4, !dbg !4843
  %50 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %21, align 4, !dbg !4844
  %51 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %50, i32 0, i32 2, !dbg !4845
  store volatile i32 1, i32* %51, align 4, !dbg !4846
  %52 = load volatile i32, i32* %4, align 4, !dbg !4847
  tail call void @restore_interrupt_mask(i32 noundef %52) #22, !dbg !4848
  store i32 1, i32* %8, align 4, !dbg !4849
  br label %53, !dbg !4850

53:                                               ; preds = %7, %11, %3, %46
  %54 = phi i32 [ 0, %46 ], [ -2, %3 ], [ -4, %11 ], [ -4, %7 ], !dbg !4797
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !4851
  ret i32 %54, !dbg !4851
}

; Function Attrs: optsize
declare dso_local i32 @hal_sleep_manager_lock_sleep(i8 noundef zeroext) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_delay_us(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !4852 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4854, metadata !DIExpression()), !dbg !4855
  %2 = load i32, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !4856
  %3 = icmp eq i32 %2, 1, !dbg !4858
  br i1 %3, label %6, label %4, !dbg !4859

4:                                                ; preds = %1
  %5 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 4), align 4, !dbg !4860
  tail call void @gpt_start_free_run_timer(%struct.GPT_REGISTER_T* noundef %5, i32 noundef 0, i32 noundef 12) #22, !dbg !4862
  store i32 1, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !4863
  br label %6, !dbg !4864

6:                                                ; preds = %4, %1
  %7 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 4), align 4, !dbg !4865
  %8 = tail call i32 @gpt_clock_calibrate_us_to_count(i32 noundef %0) #22, !dbg !4866
  tail call void @gpt_delay_time(%struct.GPT_REGISTER_T* noundef %7, i32 noundef %8) #22, !dbg !4867
  ret i32 0, !dbg !4868
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_stop_timer(i32 noundef %0) local_unnamed_addr #0 !dbg !4869 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !4871, metadata !DIExpression()), !dbg !4873
  %3 = bitcast i32* %2 to i8*, !dbg !4874
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !4874
  call void @llvm.dbg.declare(metadata i32* %2, metadata !4872, metadata !DIExpression()), !dbg !4875
  %4 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #23, !dbg !4876
  br i1 %4, label %5, label %27, !dbg !4878

5:                                                ; preds = %1
  %6 = tail call i32 @save_and_set_interrupt_mask() #22, !dbg !4879
  store volatile i32 %6, i32* %2, align 4, !dbg !4880
  %7 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %0, !dbg !4881
  %8 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %7, align 4, !dbg !4881
  %9 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %8, i32 0, i32 2, !dbg !4882
  %10 = load volatile i32, i32* %9, align 4, !dbg !4883
  %11 = and i32 %10, -2, !dbg !4883
  store volatile i32 %11, i32* %9, align 4, !dbg !4883
  %12 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %7, align 4, !dbg !4884
  %13 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %12, i32 0, i32 0, !dbg !4885
  %14 = load volatile i32, i32* %13, align 4, !dbg !4886
  %15 = and i32 %14, -2, !dbg !4886
  store volatile i32 %15, i32* %13, align 4, !dbg !4886
  %16 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %7, align 4, !dbg !4887
  %17 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %16, i32 0, i32 4, !dbg !4888
  store volatile i32 1, i32* %17, align 4, !dbg !4889
  %18 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !4890
  store i32 0, i32* %18, align 4, !dbg !4891
  %19 = load volatile i32, i32* %2, align 4, !dbg !4892
  tail call void @restore_interrupt_mask(i32 noundef %19) #22, !dbg !4893
  %20 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 3, !dbg !4894
  %21 = load i8, i8* %20, align 1, !dbg !4894, !range !4202
  %22 = icmp eq i8 %21, 0, !dbg !4894
  br i1 %22, label %27, label %23, !dbg !4896

23:                                               ; preds = %5
  %24 = getelementptr inbounds [6 x i8], [6 x i8]* @gpt_lock_sleep_handle, i32 0, i32 %0, !dbg !4897
  %25 = load i8, i8* %24, align 1, !dbg !4897
  %26 = tail call i32 @hal_sleep_manager_unlock_sleep(i8 noundef zeroext %25) #22, !dbg !4897
  store i8 0, i8* %20, align 1, !dbg !4900
  br label %27, !dbg !4901

27:                                               ; preds = %5, %23, %1
  %28 = phi i32 [ -2, %1 ], [ 0, %23 ], [ 0, %5 ], !dbg !4873
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !4902
  ret i32 %28, !dbg !4902
}

; Function Attrs: optsize
declare dso_local i32 @hal_sleep_manager_unlock_sleep(i8 noundef zeroext) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_sw_get_timer(i32* noundef writeonly %0) local_unnamed_addr #0 !dbg !4903 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !4907, metadata !DIExpression()), !dbg !4910
  %2 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !4911
  %3 = icmp ugt i32 %2, 31, !dbg !4913
  br i1 %3, label %13, label %4, !dbg !4914

4:                                                ; preds = %1
  %5 = icmp eq i32* %0, null, !dbg !4915
  br i1 %5, label %13, label %6, !dbg !4917

6:                                                ; preds = %4
  %7 = tail call i32 @save_and_set_interrupt_mask() #22, !dbg !4918
  call void @llvm.dbg.value(metadata i32 %7, metadata !4909, metadata !DIExpression()), !dbg !4910
  %8 = tail call i32 @gpt_sw_get_free_timer() #22, !dbg !4919
  call void @llvm.dbg.value(metadata i32 %8, metadata !4908, metadata !DIExpression()), !dbg !4910
  %9 = or i32 %8, -559087616, !dbg !4920
  store i32 %9, i32* %0, align 4, !dbg !4921
  %10 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %8, i32 2, !dbg !4922
  store i8 1, i8* %10, align 4, !dbg !4923
  %11 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !4924
  %12 = add i32 %11, 1, !dbg !4924
  store i32 %12, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !4924
  tail call void @restore_interrupt_mask(i32 noundef %7) #22, !dbg !4925
  br label %13, !dbg !4926

13:                                               ; preds = %4, %1, %6
  %14 = phi i32 [ 0, %6 ], [ -3, %1 ], [ -1, %4 ], !dbg !4910
  ret i32 %14, !dbg !4927
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @hal_gpt_sw_free_timer(i32 noundef %0) local_unnamed_addr #9 !dbg !4928 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !4930, metadata !DIExpression()), !dbg !4932
  %3 = bitcast i32* %2 to i8*, !dbg !4933
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !4933
  call void @llvm.dbg.declare(metadata i32* %2, metadata !4931, metadata !DIExpression()), !dbg !4934
  %4 = and i32 %0, -559087616, !dbg !4935
  %5 = icmp eq i32 %4, -559087616, !dbg !4937
  br i1 %5, label %6, label %24, !dbg !4938

6:                                                ; preds = %1
  %7 = and i32 %0, 65535, !dbg !4939
  store volatile i32 %7, i32* %2, align 4, !dbg !4940
  %8 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !4941
  %9 = icmp eq i32 %8, 0, !dbg !4943
  br i1 %9, label %24, label %10, !dbg !4944

10:                                               ; preds = %6
  %11 = load volatile i32, i32* %2, align 4, !dbg !4945
  %12 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %11, i32 3, !dbg !4947
  %13 = load i8, i8* %12, align 1, !dbg !4947, !range !4202
  %14 = icmp eq i8 %13, 0, !dbg !4947
  br i1 %14, label %15, label %24, !dbg !4948

15:                                               ; preds = %10
  %16 = load volatile i32, i32* %2, align 4, !dbg !4949
  %17 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %16, i32 2, !dbg !4951
  %18 = load i8, i8* %17, align 4, !dbg !4951, !range !4202
  %19 = icmp eq i8 %18, 1, !dbg !4952
  br i1 %19, label %20, label %24, !dbg !4953

20:                                               ; preds = %15
  %21 = load volatile i32, i32* %2, align 4, !dbg !4954
  %22 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %21, i32 2, !dbg !4955
  store i8 0, i8* %22, align 4, !dbg !4956
  %23 = add i32 %8, -1, !dbg !4957
  store i32 %23, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !4957
  br label %24, !dbg !4958

24:                                               ; preds = %15, %10, %6, %1, %20
  %25 = phi i32 [ 0, %20 ], [ -1, %1 ], [ -3, %6 ], [ -3, %10 ], [ -3, %15 ], !dbg !4932
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !4959
  ret i32 %25, !dbg !4959
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_sw_start_timer_ms(i32 noundef %0, i32 noundef %1, void (i8*)* noundef %2, i8* noundef %3) local_unnamed_addr #0 !dbg !4960 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4964, metadata !DIExpression()), !dbg !4971
  call void @llvm.dbg.value(metadata i32 %1, metadata !4965, metadata !DIExpression()), !dbg !4971
  call void @llvm.dbg.value(metadata void (i8*)* %2, metadata !4966, metadata !DIExpression()), !dbg !4971
  call void @llvm.dbg.value(metadata i8* %3, metadata !4967, metadata !DIExpression()), !dbg !4971
  %5 = and i32 %0, -559087616, !dbg !4972
  %6 = icmp ne i32 %5, -559087616, !dbg !4974
  %7 = icmp eq void (i8*)* %2, null
  %8 = or i1 %6, %7, !dbg !4975
  call void @llvm.dbg.value(metadata i32 %0, metadata !4970, metadata !DIExpression(DW_OP_constu, 65535, DW_OP_and, DW_OP_stack_value)), !dbg !4971
  br i1 %8, label %44, label %9, !dbg !4975

9:                                                ; preds = %4
  %10 = and i32 %0, 65535, !dbg !4976
  call void @llvm.dbg.value(metadata i32 %10, metadata !4970, metadata !DIExpression()), !dbg !4971
  %11 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %10, i32 3, !dbg !4977
  %12 = load i8, i8* %11, align 1, !dbg !4977, !range !4202
  %13 = icmp eq i8 %12, 0, !dbg !4977
  br i1 %13, label %14, label %44, !dbg !4979

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %10, i32 2, !dbg !4980
  %16 = load i8, i8* %15, align 4, !dbg !4980, !range !4202
  %17 = icmp eq i8 %16, 1, !dbg !4982
  br i1 %17, label %18, label %44, !dbg !4983

18:                                               ; preds = %14
  %19 = icmp ugt i32 %1, 130150523, !dbg !4984
  br i1 %19, label %44, label %20, !dbg !4986

20:                                               ; preds = %18
  %21 = tail call i32 @save_and_set_interrupt_mask() #22, !dbg !4987
  call void @llvm.dbg.value(metadata i32 %21, metadata !4969, metadata !DIExpression()), !dbg !4971
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !4988
  %22 = load i8, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 5), align 4, !dbg !4989, !range !4202
  %23 = icmp eq i8 %22, 0, !dbg !4991
  br i1 %23, label %24, label %27, !dbg !4992

24:                                               ; preds = %20
  %25 = tail call i32 @hal_gpt_init(i32 noundef 3) #23, !dbg !4993
  %26 = tail call i32 @hal_gpt_register_callback(i32 noundef 3, void (i8*)* noundef nonnull @gpt_sw_handler, i8* noundef null) #23, !dbg !4995
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 5), align 4, !dbg !4996
  br label %27, !dbg !4997

27:                                               ; preds = %24, %20
  %28 = tail call i32 @hal_gpt_stop_timer(i32 noundef 3) #23, !dbg !4998
  %29 = load i8, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 6), align 1, !dbg !4999, !range !4202
  %30 = icmp eq i8 %29, 0, !dbg !5001
  br i1 %30, label %31, label %34, !dbg !5002

31:                                               ; preds = %27
  %32 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4, !dbg !5003
  %33 = tail call i32 @gpt_sw_get_current_time_ms(%struct.GPT_REGISTER_T* noundef %32) #22, !dbg !5005
  call void @llvm.dbg.value(metadata i32 %33, metadata !4968, metadata !DIExpression()), !dbg !4971
  br label %34, !dbg !5006

34:                                               ; preds = %27, %31
  %35 = phi i32 [ %33, %31 ], [ 0, %27 ], !dbg !5007
  call void @llvm.dbg.value(metadata i32 %35, metadata !4968, metadata !DIExpression()), !dbg !4971
  %36 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !5008
  %37 = add i32 %36, %35, !dbg !5008
  store i32 %37, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !5008
  %38 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !5009
  %39 = add i32 %38, 1, !dbg !5009
  store i32 %39, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !5009
  store i8 1, i8* %11, align 1, !dbg !5010
  %40 = add i32 %37, %1, !dbg !5011
  %41 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %10, i32 1, !dbg !5012
  store i32 %40, i32* %41, align 4, !dbg !5013
  %42 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %10, i32 0, i32 0, !dbg !5014
  store void (i8*)* %2, void (i8*)** %42, align 4, !dbg !5015
  %43 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %10, i32 0, i32 1, !dbg !5016
  store i8* %3, i8** %43, align 4, !dbg !5017
  tail call void @gpt_sw_start_timer() #22, !dbg !5018
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !5019
  tail call void @restore_interrupt_mask(i32 noundef %21) #22, !dbg !5020
  br label %44, !dbg !5021

44:                                               ; preds = %18, %14, %9, %4, %34
  %45 = phi i32 [ 0, %34 ], [ -1, %4 ], [ -3, %9 ], [ -3, %14 ], [ -1, %18 ], !dbg !4971
  ret i32 %45, !dbg !5022
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_sw_stop_timer_ms(i32 noundef %0) local_unnamed_addr #0 !dbg !5023 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5025, metadata !DIExpression()), !dbg !5029
  %2 = and i32 %0, -559087616, !dbg !5030
  %3 = icmp eq i32 %2, -559087616, !dbg !5032
  br i1 %3, label %4, label %31, !dbg !5033

4:                                                ; preds = %1
  %5 = and i32 %0, 65535, !dbg !5034
  call void @llvm.dbg.value(metadata i32 %5, metadata !5028, metadata !DIExpression()), !dbg !5029
  %6 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %5, i32 3, !dbg !5035
  %7 = load i8, i8* %6, align 1, !dbg !5035, !range !4202
  %8 = icmp eq i8 %7, 1, !dbg !5037
  br i1 %8, label %9, label %31, !dbg !5038

9:                                                ; preds = %4
  %10 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %5, i32 2, !dbg !5039
  %11 = load i8, i8* %10, align 4, !dbg !5039, !range !4202
  %12 = icmp eq i8 %11, 1, !dbg !5041
  br i1 %12, label %13, label %31, !dbg !5042

13:                                               ; preds = %9
  %14 = tail call i32 @save_and_set_interrupt_mask() #22, !dbg !5043
  call void @llvm.dbg.value(metadata i32 %14, metadata !5027, metadata !DIExpression()), !dbg !5029
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !5044
  %15 = tail call i32 @hal_gpt_stop_timer(i32 noundef 3) #23, !dbg !5045
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !5046
  %16 = load i8, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 6), align 1, !dbg !5047, !range !4202
  %17 = icmp eq i8 %16, 0, !dbg !5049
  br i1 %17, label %18, label %21, !dbg !5050

18:                                               ; preds = %13
  %19 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4, !dbg !5051
  %20 = tail call i32 @gpt_sw_get_current_time_ms(%struct.GPT_REGISTER_T* noundef %19) #22, !dbg !5053
  call void @llvm.dbg.value(metadata i32 %20, metadata !5026, metadata !DIExpression()), !dbg !5029
  br label %21, !dbg !5054

21:                                               ; preds = %13, %18
  %22 = phi i32 [ %20, %18 ], [ 0, %13 ], !dbg !5055
  call void @llvm.dbg.value(metadata i32 %22, metadata !5026, metadata !DIExpression()), !dbg !5029
  %23 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !5056
  %24 = add i32 %23, %22, !dbg !5056
  store i32 %24, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !5056
  %25 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !5057
  %26 = add i32 %25, -1, !dbg !5057
  store i32 %26, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !5057
  store i8 0, i8* %6, align 1, !dbg !5058
  %27 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !5059
  %28 = icmp eq i32 %27, 0, !dbg !5061
  br i1 %28, label %30, label %29, !dbg !5062

29:                                               ; preds = %21
  tail call void @gpt_sw_start_timer() #22, !dbg !5063
  br label %30, !dbg !5065

30:                                               ; preds = %21, %29
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !5066
  tail call void @restore_interrupt_mask(i32 noundef %14) #22, !dbg !5067
  br label %31, !dbg !5068

31:                                               ; preds = %9, %4, %1, %30
  %32 = phi i32 [ 0, %30 ], [ -1, %1 ], [ -3, %4 ], [ -3, %9 ], !dbg !5029
  ret i32 %32, !dbg !5069
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_sw_get_remaining_time_ms(i32 noundef %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #0 !dbg !5070 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5074, metadata !DIExpression()), !dbg !5079
  call void @llvm.dbg.value(metadata i32* %1, metadata !5075, metadata !DIExpression()), !dbg !5079
  %3 = and i32 %0, -559087616, !dbg !5080
  %4 = icmp eq i32 %3, -559087616, !dbg !5082
  br i1 %4, label %5, label %20, !dbg !5083

5:                                                ; preds = %2
  %6 = and i32 %0, 65535, !dbg !5084
  call void @llvm.dbg.value(metadata i32 %6, metadata !5078, metadata !DIExpression()), !dbg !5079
  %7 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %6, i32 2, !dbg !5085
  %8 = load i8, i8* %7, align 4, !dbg !5085, !range !4202
  %9 = icmp eq i8 %8, 1, !dbg !5087
  br i1 %9, label %10, label %20, !dbg !5088

10:                                               ; preds = %5
  %11 = tail call i32 @save_and_set_interrupt_mask() #22, !dbg !5089
  call void @llvm.dbg.value(metadata i32 %11, metadata !5077, metadata !DIExpression()), !dbg !5079
  %12 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !5090
  %13 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4, !dbg !5091
  %14 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %13, i32 0, i32 5, !dbg !5092
  %15 = load volatile i32, i32* %14, align 4, !dbg !5092
  %16 = add i32 %15, %12, !dbg !5093
  call void @llvm.dbg.value(metadata i32 %16, metadata !5076, metadata !DIExpression()), !dbg !5079
  %17 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %6, i32 1, !dbg !5094
  %18 = load i32, i32* %17, align 4, !dbg !5094
  %19 = tail call i32 @llvm.usub.sat.i32(i32 %18, i32 %16), !dbg !5096
  store i32 %19, i32* %1, align 4, !dbg !5097
  tail call void @restore_interrupt_mask(i32 noundef %11) #22, !dbg !5098
  br label %20, !dbg !5099

20:                                               ; preds = %5, %2, %10
  %21 = phi i32 [ 0, %10 ], [ -1, %2 ], [ -3, %5 ], !dbg !5079
  ret i32 %21, !dbg !5100
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.usub.sat.i32(i32, i32) #1

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @gpt_calibrate_algorithm(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #10 section ".tcm_code" !dbg !5101 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5105, metadata !DIExpression()), !dbg !5111
  call void @llvm.dbg.value(metadata i32 %1, metadata !5106, metadata !DIExpression()), !dbg !5111
  call void @llvm.dbg.value(metadata i32 %2, metadata !5107, metadata !DIExpression()), !dbg !5111
  %4 = and i32 %0, 65535, !dbg !5112
  %5 = mul i32 %4, %1, !dbg !5113
  call void @llvm.dbg.value(metadata i32 %5, metadata !5108, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !5111
  %6 = lshr i32 %0, 16, !dbg !5114
  %7 = mul i32 %6, %1, !dbg !5115
  call void @llvm.dbg.value(metadata i32 %7, metadata !5108, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !5111
  %8 = and i32 %5, 65535, !dbg !5116
  call void @llvm.dbg.value(metadata i32 %8, metadata !5109, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !5111
  %9 = lshr i32 %5, 16, !dbg !5117
  %10 = add i32 %9, %7, !dbg !5118
  call void @llvm.dbg.value(metadata i32 %10, metadata !5109, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !5111
  %11 = udiv i32 %10, %2, !dbg !5119
  call void @llvm.dbg.value(metadata i32 %11, metadata !5110, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !5111
  %12 = mul i32 %11, %2
  %13 = sub i32 %10, %12
  %14 = shl i32 %13, 16, !dbg !5120
  %15 = or i32 %14, %8, !dbg !5121
  %16 = udiv i32 %15, %2, !dbg !5122
  call void @llvm.dbg.value(metadata i32 %16, metadata !5110, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !5111
  %17 = shl i32 %11, 16, !dbg !5123
  %18 = add i32 %16, %17, !dbg !5124
  ret i32 %18, !dbg !5125
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) local_unnamed_addr #11 section ".tcm_code" !dbg !5126 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !5130, metadata !DIExpression()), !dbg !5131
  %2 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 5, !dbg !5132
  %3 = load volatile i32, i32* %2, align 4, !dbg !5132
  ret i32 %3, !dbg !5133
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @gpt_convert_ms_to_32k_count(i32 noundef %0) local_unnamed_addr #10 section ".tcm_code" !dbg !5134 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5138, metadata !DIExpression()), !dbg !5139
  %2 = shl i32 %0, 5, !dbg !5140
  %3 = mul i32 %0, 7, !dbg !5141
  %4 = udiv i32 %3, 10, !dbg !5142
  %5 = add i32 %4, %2, !dbg !5143
  %6 = mul i32 %0, 6, !dbg !5144
  %7 = udiv i32 %6, 100, !dbg !5145
  %8 = add i32 %5, %7, !dbg !5146
  %9 = shl i32 %0, 3, !dbg !5147
  %10 = udiv i32 %9, 1000, !dbg !5148
  %11 = add i32 %8, %10, !dbg !5149
  ret i32 %11, !dbg !5150
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_get_lfosc_clock() local_unnamed_addr #0 section ".tcm_code" !dbg !342 {
  %1 = load i1, i1* @gpt_get_lfosc_clock.flag, align 1, !dbg !5151
  br i1 %1, label %10, label %2, !dbg !5153

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @is_clk_use_lfosc() #22, !dbg !5154
  br i1 %3, label %4, label %6, !dbg !5157

4:                                                ; preds = %2
  %5 = tail call i32 @clock_get_freq_lfosc() #22, !dbg !5158
  store i32 %5, i32* @gpt_clock_source, align 4, !dbg !5160
  switch i32 %5, label %8 [
    i32 26000, label %6
    i32 0, label %6
  ], !dbg !5161

6:                                                ; preds = %2, %4, %4
  %7 = phi i1 [ false, %4 ], [ false, %4 ], [ true, %2 ]
  store i32 26000, i32* @gpt_clock_source, align 4, !dbg !5163
  br label %8, !dbg !5163

8:                                                ; preds = %6, %4
  %9 = phi i1 [ true, %4 ], [ %7, %6 ]
  store i1 %9, i1* @gpt_get_lfosc_clock.flag, align 1, !dbg !5163
  br label %10, !dbg !5164

10:                                               ; preds = %8, %0
  ret void, !dbg !5164
}

; Function Attrs: optsize
declare dso_local i32 @clock_get_freq_lfosc() local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_open_clock_source() local_unnamed_addr #0 section ".tcm_code" !dbg !5165 {
  %1 = tail call zeroext i1 @hal_clock_is_enabled(i32 noundef 66) #22, !dbg !5166
  br i1 %1, label %4, label %2, !dbg !5168

2:                                                ; preds = %0
  %3 = tail call i32 @hal_clock_enable(i32 noundef 66) #22, !dbg !5169
  br label %4, !dbg !5171

4:                                                ; preds = %2, %0
  ret void, !dbg !5172
}

; Function Attrs: optsize
declare dso_local zeroext i1 @hal_clock_is_enabled(i32 noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local i32 @hal_clock_enable(i32 noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpt_clock_calibrate_us_to_count(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !5173 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5175, metadata !DIExpression()), !dbg !5176
  tail call void @gpt_get_lfosc_clock() #23, !dbg !5177
  %2 = tail call zeroext i1 @is_clk_use_lfosc() #22, !dbg !5178
  br i1 %2, label %3, label %6, !dbg !5180

3:                                                ; preds = %1
  %4 = load i32, i32* @gpt_clock_source, align 4, !dbg !5181
  %5 = tail call i32 @gpt_calibrate_algorithm(i32 noundef %0, i32 noundef %4, i32 noundef 26000) #23, !dbg !5183
  br label %6, !dbg !5184

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ %0, %1 ], !dbg !5185
  ret i32 %7, !dbg !5186
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpt_clock_calibrate_count_to_us(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !5187 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5189, metadata !DIExpression()), !dbg !5190
  tail call void @gpt_get_lfosc_clock() #23, !dbg !5191
  %2 = tail call zeroext i1 @is_clk_use_lfosc() #22, !dbg !5192
  br i1 %2, label %3, label %6, !dbg !5194

3:                                                ; preds = %1
  %4 = load i32, i32* @gpt_clock_source, align 4, !dbg !5195
  %5 = tail call i32 @gpt_calibrate_algorithm(i32 noundef %0, i32 noundef 26000, i32 noundef %4) #23, !dbg !5197
  br label %6, !dbg !5198

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ %0, %1 ], !dbg !5199
  ret i32 %7, !dbg !5200
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_start_free_run_timer(%struct.GPT_REGISTER_T* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 section ".tcm_code" !dbg !5201 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !5205, metadata !DIExpression()), !dbg !5208
  call void @llvm.dbg.value(metadata i32 %1, metadata !5206, metadata !DIExpression()), !dbg !5208
  call void @llvm.dbg.value(metadata i32 %2, metadata !5207, metadata !DIExpression()), !dbg !5208
  tail call void @gpt_open_clock_source() #23, !dbg !5209
  %4 = or i32 %2, %1, !dbg !5210
  %5 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 1, !dbg !5211
  store volatile i32 %4, i32* %5, align 4, !dbg !5212
  %6 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 0, !dbg !5213
  store volatile i32 49, i32* %6, align 4, !dbg !5214
  ret void, !dbg !5215
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gpt_delay_time(%struct.GPT_REGISTER_T* noundef %0, i32 noundef %1) local_unnamed_addr #2 section ".tcm_code" !dbg !5216 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !5220, metadata !DIExpression()), !dbg !5224
  call void @llvm.dbg.value(metadata i32 %1, metadata !5221, metadata !DIExpression()), !dbg !5224
  call void @llvm.dbg.value(metadata i32 0, metadata !5222, metadata !DIExpression()), !dbg !5224
  call void @llvm.dbg.value(metadata i32 0, metadata !5223, metadata !DIExpression()), !dbg !5224
  %3 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) #23, !dbg !5225
  call void @llvm.dbg.value(metadata i32 %3, metadata !5223, metadata !DIExpression()), !dbg !5224
  %4 = add i32 %1, 1, !dbg !5226
  %5 = add i32 %4, %3, !dbg !5227
  call void @llvm.dbg.value(metadata i32 %5, metadata !5222, metadata !DIExpression()), !dbg !5224
  %6 = icmp ugt i32 %5, %3, !dbg !5228
  br i1 %6, label %7, label %10, !dbg !5230

7:                                                ; preds = %2, %7
  %8 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) #23, !dbg !5231
  %9 = icmp ult i32 %8, %5, !dbg !5233
  br i1 %9, label %7, label %16, !dbg !5234, !llvm.loop !5235

10:                                               ; preds = %2, %10
  %11 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) #23, !dbg !5237
  %12 = icmp ult i32 %11, %3, !dbg !5239
  br i1 %12, label %13, label %10, !dbg !5240, !llvm.loop !5241

13:                                               ; preds = %10, %13
  %14 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) #23, !dbg !5243
  %15 = icmp ult i32 %14, %5, !dbg !5244
  br i1 %15, label %13, label %16, !dbg !5245, !llvm.loop !5246

16:                                               ; preds = %13, %7
  ret void, !dbg !5248
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gpt_reset_default_timer(%struct.GPT_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !5249 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !5253, metadata !DIExpression()), !dbg !5254
  %2 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 2, !dbg !5255
  store volatile i32 0, i32* %2, align 4, !dbg !5256
  %3 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 0, !dbg !5257
  store volatile i32 0, i32* %3, align 4, !dbg !5258
  %4 = load volatile i32, i32* %3, align 4, !dbg !5259
  %5 = or i32 %4, 2, !dbg !5259
  store volatile i32 %5, i32* %3, align 4, !dbg !5259
  %6 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 5
  br label %7, !dbg !5260

7:                                                ; preds = %7, %1
  %8 = load volatile i32, i32* %6, align 4, !dbg !5261
  %9 = icmp eq i32 %8, 0, !dbg !5260
  br i1 %9, label %10, label %7, !dbg !5260, !llvm.loop !5262

10:                                               ; preds = %7
  %11 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 1, !dbg !5264
  store volatile i32 16, i32* %11, align 4, !dbg !5265
  %12 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 4, !dbg !5266
  store volatile i32 1, i32* %12, align 4, !dbg !5267
  %13 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 6, !dbg !5268
  store volatile i32 -1, i32* %13, align 4, !dbg !5269
  %14 = icmp eq %struct.GPT_REGISTER_T* %0, inttoptr (i32 -1575747328 to %struct.GPT_REGISTER_T*), !dbg !5270
  br i1 %14, label %15, label %16, !dbg !5272

15:                                               ; preds = %10
  store volatile i32 0, i32* inttoptr (i32 -1575747296 to i32*), align 32, !dbg !5273
  br label %16, !dbg !5275

16:                                               ; preds = %15, %10
  ret void, !dbg !5276
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @gpt_save_and_mask_interrupt(%struct.GPT_REGISTER_T* noundef %0) local_unnamed_addr #9 !dbg !5277 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !5279, metadata !DIExpression()), !dbg !5281
  %3 = bitcast i32* %2 to i8*, !dbg !5282
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !5282
  call void @llvm.dbg.declare(metadata i32* %2, metadata !5280, metadata !DIExpression()), !dbg !5283
  %4 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 2, !dbg !5284
  %5 = load volatile i32, i32* %4, align 4, !dbg !5284
  store volatile i32 %5, i32* %2, align 4, !dbg !5285
  %6 = load volatile i32, i32* %4, align 4, !dbg !5286
  %7 = and i32 %6, -2, !dbg !5286
  store volatile i32 %7, i32* %4, align 4, !dbg !5286
  %8 = load volatile i32, i32* %2, align 4, !dbg !5287
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !5288
  ret i32 %8, !dbg !5289
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gpt_restore_interrupt(%struct.GPT_REGISTER_T* noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !5290 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !5294, metadata !DIExpression()), !dbg !5296
  call void @llvm.dbg.value(metadata i32 %1, metadata !5295, metadata !DIExpression()), !dbg !5296
  %3 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 2, !dbg !5297
  store volatile i32 %1, i32* %3, align 4, !dbg !5298
  ret void, !dbg !5299
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_interrupt_handler(i32 %0) #0 !dbg !5300 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !5302, metadata !DIExpression()), !dbg !5307
  %5 = bitcast i32* %2 to i8*, !dbg !5308
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5), !dbg !5308
  call void @llvm.dbg.declare(metadata i32* %2, metadata !5304, metadata !DIExpression()), !dbg !5309
  %6 = bitcast i32* %3 to i8*, !dbg !5310
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6), !dbg !5310
  call void @llvm.dbg.declare(metadata i32* %3, metadata !5305, metadata !DIExpression()), !dbg !5311
  %7 = bitcast i32* %4 to i8*, !dbg !5312
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7), !dbg !5312
  call void @llvm.dbg.declare(metadata i32* %4, metadata !5306, metadata !DIExpression()), !dbg !5313
  call void @llvm.dbg.value(metadata i32 undef, metadata !5302, metadata !DIExpression()), !dbg !5307
  call void @llvm.dbg.value(metadata i32 0, metadata !5303, metadata !DIExpression()), !dbg !5307
  br label %8, !dbg !5314

8:                                                ; preds = %1, %33
  %9 = phi i32 [ 0, %1 ], [ %36, %33 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !5303, metadata !DIExpression()), !dbg !5307
  %10 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %9, !dbg !5316
  %11 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %10, align 4, !dbg !5316
  %12 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %11, i32 0, i32 3, !dbg !5319
  %13 = load volatile i32, i32* %12, align 4, !dbg !5319
  store volatile i32 %13, i32* %3, align 4, !dbg !5320
  %14 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %11, i32 0, i32 2, !dbg !5321
  %15 = load volatile i32, i32* %14, align 4, !dbg !5321
  store volatile i32 %15, i32* %4, align 4, !dbg !5322
  %16 = tail call i32 @gpt_save_and_mask_interrupt(%struct.GPT_REGISTER_T* noundef %11) #23, !dbg !5323
  store volatile i32 %16, i32* %2, align 4, !dbg !5324
  %17 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %10, align 4, !dbg !5325
  %18 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %17, i32 0, i32 4, !dbg !5326
  store volatile i32 1, i32* %18, align 4, !dbg !5327
  %19 = load volatile i32, i32* %3, align 4, !dbg !5328
  %20 = and i32 %19, 1, !dbg !5330
  %21 = icmp eq i32 %20, 0, !dbg !5330
  br i1 %21, label %33, label %22, !dbg !5331

22:                                               ; preds = %8
  %23 = load volatile i32, i32* %4, align 4, !dbg !5332
  %24 = and i32 %23, 1, !dbg !5333
  %25 = icmp eq i32 %24, 0, !dbg !5333
  br i1 %25, label %33, label %26, !dbg !5334

26:                                               ; preds = %22
  %27 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %9, i32 1, i32 0, !dbg !5335
  %28 = load void (i8*)*, void (i8*)** %27, align 4, !dbg !5335
  %29 = icmp eq void (i8*)* %28, null, !dbg !5338
  br i1 %29, label %33, label %30, !dbg !5339

30:                                               ; preds = %26
  %31 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %9, i32 1, i32 1, !dbg !5340
  %32 = load i8*, i8** %31, align 4, !dbg !5340
  tail call void %28(i8* noundef %32) #22, !dbg !5342
  br label %33, !dbg !5343

33:                                               ; preds = %26, %30, %22, %8
  %34 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %10, align 4, !dbg !5344
  %35 = load volatile i32, i32* %2, align 4, !dbg !5345
  tail call void @gpt_restore_interrupt(%struct.GPT_REGISTER_T* noundef %34, i32 noundef %35) #23, !dbg !5346
  %36 = add nuw nsw i32 %9, 1, !dbg !5347
  call void @llvm.dbg.value(metadata i32 %36, metadata !5303, metadata !DIExpression()), !dbg !5307
  %37 = icmp eq i32 %36, 6, !dbg !5348
  br i1 %37, label %38, label %8, !dbg !5314, !llvm.loop !5349

38:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7), !dbg !5351
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6), !dbg !5351
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !5351
  ret void, !dbg !5351
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_nvic_register() local_unnamed_addr #0 !dbg !5352 {
  %1 = tail call i32 @hal_nvic_disable_irq(i32 noundef 11) #22, !dbg !5353
  %2 = tail call i32 @hal_nvic_register_isr_handler(i32 noundef 11, void (i32)* noundef nonnull @gpt_interrupt_handler) #22, !dbg !5354
  %3 = tail call i32 @hal_nvic_enable_irq(i32 noundef 11) #22, !dbg !5355
  ret void, !dbg !5356
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @gpt_sw_get_current_time_ms(%struct.GPT_REGISTER_T* noundef %0) local_unnamed_addr #9 !dbg !5357 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !5359, metadata !DIExpression()), !dbg !5364
  %3 = bitcast i32* %2 to i8*, !dbg !5365
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !5365
  call void @llvm.dbg.declare(metadata i32* %2, metadata !5360, metadata !DIExpression()), !dbg !5366
  %4 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) #23, !dbg !5367
  call void @llvm.dbg.value(metadata i32 %4, metadata !5361, metadata !DIExpression()), !dbg !5364
  %5 = lshr i32 %4, 15, !dbg !5368
  call void @llvm.dbg.value(metadata i32 %5, metadata !5362, metadata !DIExpression()), !dbg !5364
  %6 = and i32 %4, 32767, !dbg !5369
  %7 = mul nuw nsw i32 %6, 1000, !dbg !5370
  %8 = add nuw nsw i32 %7, 16384, !dbg !5371
  %9 = lshr i32 %8, 15, !dbg !5372
  call void @llvm.dbg.value(metadata i32 %9, metadata !5363, metadata !DIExpression()), !dbg !5364
  %10 = mul nuw nsw i32 %5, 1000, !dbg !5373
  %11 = add nuw nsw i32 %9, %10, !dbg !5374
  store volatile i32 %11, i32* %2, align 4, !dbg !5375
  %12 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4, !dbg !5376
  %13 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %12, i32 0, i32 0, !dbg !5377
  %14 = load volatile i32, i32* %13, align 4, !dbg !5378
  %15 = or i32 %14, 2, !dbg !5378
  store volatile i32 %15, i32* %13, align 4, !dbg !5378
  %16 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4
  %17 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %16, i32 0, i32 5
  br label %18, !dbg !5379

18:                                               ; preds = %18, %1
  %19 = load volatile i32, i32* %17, align 4, !dbg !5380
  %20 = icmp eq i32 %19, 0, !dbg !5379
  br i1 %20, label %21, label %18, !dbg !5379, !llvm.loop !5381

21:                                               ; preds = %18
  %22 = load volatile i32, i32* %2, align 4, !dbg !5383
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !5384
  ret i32 %22, !dbg !5385
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @gpt_sw_get_free_timer() local_unnamed_addr #12 !dbg !5386 {
  call void @llvm.dbg.value(metadata i32 0, metadata !5390, metadata !DIExpression()), !dbg !5391
  br label %1, !dbg !5392

1:                                                ; preds = %0, %6
  %2 = phi i32 [ 0, %0 ], [ %7, %6 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !5390, metadata !DIExpression()), !dbg !5391
  %3 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %2, i32 2, !dbg !5394
  %4 = load i8, i8* %3, align 4, !dbg !5394, !range !4202
  %5 = icmp eq i8 %4, 1, !dbg !5398
  br i1 %5, label %6, label %9, !dbg !5399

6:                                                ; preds = %1
  %7 = add nuw nsw i32 %2, 1, !dbg !5400
  call void @llvm.dbg.value(metadata i32 %7, metadata !5390, metadata !DIExpression()), !dbg !5391
  %8 = icmp eq i32 %7, 32, !dbg !5401
  br i1 %8, label %9, label %1, !dbg !5392, !llvm.loop !5402

9:                                                ; preds = %6, %1
  %10 = phi i32 [ %2, %1 ], [ 32, %6 ], !dbg !5391
  ret i32 %10, !dbg !5404
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_sw_start_timer() local_unnamed_addr #0 !dbg !5405 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = bitcast i32* %1 to i8*, !dbg !5409
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #24, !dbg !5409
  %4 = bitcast i32* %2 to i8*, !dbg !5409
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #24, !dbg !5409
  %5 = load i8, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 6), align 1, !dbg !5410, !range !4202
  %6 = icmp eq i8 %5, 0, !dbg !5410
  br i1 %6, label %7, label %11, !dbg !5412

7:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32* %1, metadata !5407, metadata !DIExpression(DW_OP_deref)), !dbg !5413
  call void @llvm.dbg.value(metadata i32* %2, metadata !5408, metadata !DIExpression(DW_OP_deref)), !dbg !5413
  call void @gpt_sw_get_minimum_left_time_ms(i32* noundef nonnull %1, i32* noundef nonnull %2) #23, !dbg !5414
  %8 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !5415
  store i32 %8, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 2), align 4, !dbg !5416
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !5417
  %9 = load i32, i32* %1, align 4, !dbg !5418
  call void @llvm.dbg.value(metadata i32 %9, metadata !5407, metadata !DIExpression()), !dbg !5413
  %10 = tail call i32 @hal_gpt_start_timer_ms(i32 noundef 3, i32 noundef %9, i32 noundef 0) #22, !dbg !5419
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !5420
  br label %11, !dbg !5421

11:                                               ; preds = %0, %7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #24, !dbg !5421
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #24, !dbg !5421
  ret void, !dbg !5421
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local void @gpt_sw_get_minimum_left_time_ms(i32* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #13 !dbg !5422 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !5426, metadata !DIExpression()), !dbg !5431
  call void @llvm.dbg.value(metadata i32* %1, metadata !5427, metadata !DIExpression()), !dbg !5431
  call void @llvm.dbg.value(metadata i32 -1, metadata !5429, metadata !DIExpression()), !dbg !5431
  call void @llvm.dbg.value(metadata i32 0, metadata !5428, metadata !DIExpression()), !dbg !5431
  br label %3, !dbg !5432

3:                                                ; preds = %2, %13
  %4 = phi i32 [ 0, %2 ], [ %15, %13 ]
  %5 = phi i32 [ -1, %2 ], [ %14, %13 ]
  call void @llvm.dbg.value(metadata i32 %4, metadata !5428, metadata !DIExpression()), !dbg !5431
  call void @llvm.dbg.value(metadata i32 %5, metadata !5429, metadata !DIExpression()), !dbg !5431
  %6 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %4, i32 3, !dbg !5434
  %7 = load i8, i8* %6, align 1, !dbg !5434, !range !4202
  %8 = icmp eq i8 %7, 0, !dbg !5434
  br i1 %8, label %13, label %9, !dbg !5438

9:                                                ; preds = %3
  %10 = tail call i32 @gpt_sw_absolute_value(i32 noundef %4) #23, !dbg !5439
  call void @llvm.dbg.value(metadata i32 %10, metadata !5430, metadata !DIExpression()), !dbg !5431
  %11 = icmp ult i32 %10, %5, !dbg !5441
  br i1 %11, label %12, label %13, !dbg !5443

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %10, metadata !5429, metadata !DIExpression()), !dbg !5431
  store i32 %4, i32* %1, align 4, !dbg !5444
  br label %13, !dbg !5446

13:                                               ; preds = %3, %12, %9
  %14 = phi i32 [ %10, %12 ], [ %5, %9 ], [ %5, %3 ], !dbg !5431
  call void @llvm.dbg.value(metadata i32 %14, metadata !5429, metadata !DIExpression()), !dbg !5431
  %15 = add nuw nsw i32 %4, 1, !dbg !5447
  call void @llvm.dbg.value(metadata i32 %15, metadata !5428, metadata !DIExpression()), !dbg !5431
  %16 = icmp eq i32 %15, 32, !dbg !5448
  br i1 %16, label %17, label %3, !dbg !5432, !llvm.loop !5449

17:                                               ; preds = %13
  store i32 %14, i32* %0, align 4, !dbg !5451
  ret void, !dbg !5452
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @gpt_sw_absolute_value(i32 noundef %0) local_unnamed_addr #4 !dbg !5453 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5455, metadata !DIExpression()), !dbg !5459
  %2 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %0, i32 1, !dbg !5460
  %3 = load i32, i32* %2, align 4, !dbg !5460
  %4 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 2), align 4, !dbg !5460
  %5 = sub i32 %3, %4, !dbg !5460
  call void @llvm.dbg.value(metadata i32 %5, metadata !5456, metadata !DIExpression()), !dbg !5459
  %6 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !5461
  %7 = sub i32 %6, %4, !dbg !5461
  call void @llvm.dbg.value(metadata i32 %7, metadata !5457, metadata !DIExpression()), !dbg !5459
  %8 = icmp ugt i32 %5, %7, !dbg !5462
  %9 = sub i32 %3, %6
  %10 = select i1 %8, i32 %9, i32 0, !dbg !5464
  call void @llvm.dbg.value(metadata i32 %10, metadata !5458, metadata !DIExpression()), !dbg !5459
  ret i32 %10, !dbg !5465
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_sw_handler(i8* nocapture noundef readnone %0) #0 !dbg !5466 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5468, metadata !DIExpression()), !dbg !5472
  %4 = bitcast i32* %2 to i8*, !dbg !5473
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4), !dbg !5473
  call void @llvm.dbg.declare(metadata i32* %2, metadata !5470, metadata !DIExpression()), !dbg !5474
  %5 = bitcast i32* %3 to i8*, !dbg !5475
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5), !dbg !5475
  call void @llvm.dbg.declare(metadata i32* %3, metadata !5471, metadata !DIExpression()), !dbg !5476
  %6 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !5477
  %7 = icmp eq i32 %6, 0, !dbg !5479
  br i1 %7, label %38, label %8, !dbg !5480

8:                                                ; preds = %1
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !5481
  %9 = tail call i32 @hal_gpt_stop_timer(i32 noundef 3) #22, !dbg !5483
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !5484
  %10 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4, !dbg !5485
  %11 = tail call i32 @gpt_sw_get_current_time_ms(%struct.GPT_REGISTER_T* noundef %10) #23, !dbg !5486
  store volatile i32 %11, i32* %2, align 4, !dbg !5487
  %12 = load volatile i32, i32* %2, align 4, !dbg !5488
  %13 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !5489
  %14 = add i32 %13, %12, !dbg !5489
  store i32 %14, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !5489
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 6), align 1, !dbg !5490
  call void @llvm.dbg.value(metadata i32 0, metadata !5469, metadata !DIExpression()), !dbg !5472
  br label %15, !dbg !5491

15:                                               ; preds = %8, %31
  %16 = phi i32 [ 0, %8 ], [ %32, %31 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !5469, metadata !DIExpression()), !dbg !5472
  %17 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %16, i32 3, !dbg !5493
  %18 = load i8, i8* %17, align 1, !dbg !5493, !range !4202
  %19 = icmp eq i8 %18, 0, !dbg !5493
  br i1 %19, label %31, label %20, !dbg !5497

20:                                               ; preds = %15
  %21 = tail call i32 @gpt_sw_absolute_value(i32 noundef %16) #23, !dbg !5498
  store volatile i32 %21, i32* %3, align 4, !dbg !5500
  %22 = load volatile i32, i32* %3, align 4, !dbg !5501
  %23 = icmp eq i32 %22, 0, !dbg !5503
  br i1 %23, label %24, label %31, !dbg !5504

24:                                               ; preds = %20
  store i8 0, i8* %17, align 1, !dbg !5505
  %25 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !5507
  %26 = add i32 %25, -1, !dbg !5507
  store i32 %26, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !5507
  %27 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %16, i32 0, i32 0, !dbg !5508
  %28 = load void (i8*)*, void (i8*)** %27, align 4, !dbg !5508
  %29 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %16, i32 0, i32 1, !dbg !5509
  %30 = load i8*, i8** %29, align 4, !dbg !5509
  tail call void %28(i8* noundef %30) #22, !dbg !5510
  br label %31, !dbg !5511

31:                                               ; preds = %15, %24, %20
  %32 = add nuw nsw i32 %16, 1, !dbg !5512
  call void @llvm.dbg.value(metadata i32 %32, metadata !5469, metadata !DIExpression()), !dbg !5472
  %33 = icmp eq i32 %32, 32, !dbg !5513
  br i1 %33, label %34, label %15, !dbg !5491, !llvm.loop !5514

34:                                               ; preds = %31
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 6), align 1, !dbg !5516
  %35 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !5517
  %36 = icmp eq i32 %35, 0, !dbg !5519
  br i1 %36, label %38, label %37, !dbg !5520

37:                                               ; preds = %34
  tail call void @gpt_sw_start_timer() #23, !dbg !5521
  br label %38, !dbg !5523

38:                                               ; preds = %34, %37, %1
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !5524
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4), !dbg !5524
  ret void, !dbg !5524
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gdma_reset(i32 noundef %0) local_unnamed_addr #2 !dbg !5525 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5529, metadata !DIExpression()), !dbg !5530
  %2 = getelementptr inbounds [1 x %struct.GDMA_REGISTER_T*], [1 x %struct.GDMA_REGISTER_T*]* @gdma, i32 0, i32 %0, !dbg !5531
  %3 = load %struct.GDMA_REGISTER_T*, %struct.GDMA_REGISTER_T** %2, align 4, !dbg !5531
  %4 = getelementptr inbounds %struct.GDMA_REGISTER_T, %struct.GDMA_REGISTER_T* %3, i32 0, i32 5, !dbg !5532
  store volatile i32 0, i32* %4, align 4, !dbg !5533
  %5 = load %struct.GDMA_REGISTER_T*, %struct.GDMA_REGISTER_T** %2, align 4, !dbg !5534
  %6 = getelementptr inbounds %struct.GDMA_REGISTER_T, %struct.GDMA_REGISTER_T* %5, i32 0, i32 6, !dbg !5535
  store volatile i32 0, i32* %6, align 4, !dbg !5536
  %7 = load %struct.GDMA_REGISTER_T*, %struct.GDMA_REGISTER_T** %2, align 4, !dbg !5537
  %8 = getelementptr inbounds %struct.GDMA_REGISTER_T, %struct.GDMA_REGISTER_T* %7, i32 0, i32 7, !dbg !5538
  store volatile i32 0, i32* %8, align 4, !dbg !5539
  %9 = load %struct.GDMA_REGISTER_T*, %struct.GDMA_REGISTER_T** %2, align 4, !dbg !5540
  %10 = getelementptr inbounds %struct.GDMA_REGISTER_T, %struct.GDMA_REGISTER_T* %9, i32 0, i32 0, !dbg !5541
  store volatile i32 0, i32* %10, align 4, !dbg !5542
  %11 = load %struct.GDMA_REGISTER_T*, %struct.GDMA_REGISTER_T** %2, align 4, !dbg !5543
  %12 = getelementptr inbounds %struct.GDMA_REGISTER_T, %struct.GDMA_REGISTER_T* %11, i32 0, i32 1, !dbg !5544
  store volatile i32 0, i32* %12, align 4, !dbg !5545
  %13 = load %struct.GDMA_REGISTER_T*, %struct.GDMA_REGISTER_T** %2, align 4, !dbg !5546
  %14 = getelementptr inbounds %struct.GDMA_REGISTER_T, %struct.GDMA_REGISTER_T* %13, i32 0, i32 8, !dbg !5547
  store volatile i32 32768, i32* %14, align 4, !dbg !5548
  ret void, !dbg !5549
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @gdma_get_global_status(i32 noundef %0) local_unnamed_addr #11 !dbg !5550 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5552, metadata !DIExpression()), !dbg !5554
  call void @llvm.dbg.value(metadata i32 0, metadata !5553, metadata !DIExpression()), !dbg !5554
  %2 = getelementptr inbounds [1 x %struct.anon*], [1 x %struct.anon*]* @gdma_global, i32 0, i32 %0, !dbg !5555
  %3 = load %struct.anon*, %struct.anon** %2, align 4, !dbg !5555
  %4 = getelementptr inbounds %struct.anon, %struct.anon* %3, i32 0, i32 0, !dbg !5556
  %5 = load volatile i32, i32* %4, align 4, !dbg !5556
  call void @llvm.dbg.value(metadata i32 %5, metadata !5553, metadata !DIExpression()), !dbg !5554
  ret i32 %5, !dbg !5557
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @gdma_register_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #7 !dbg !5558 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5562, metadata !DIExpression()), !dbg !5565
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !5563, metadata !DIExpression()), !dbg !5565
  call void @llvm.dbg.value(metadata i8* %2, metadata !5564, metadata !DIExpression()), !dbg !5565
  %4 = getelementptr inbounds [1 x %struct.gdma_user_callback_t], [1 x %struct.gdma_user_callback_t]* @g_gdma_callback, i32 0, i32 %0, i32 0, !dbg !5566
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !5566
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !5568
  br i1 %6, label %7, label %9, !dbg !5569

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !5570
  %8 = getelementptr inbounds [1 x %struct.gdma_user_callback_t], [1 x %struct.gdma_user_callback_t]* @g_gdma_callback, i32 0, i32 %0, i32 1, !dbg !5572
  store i8* %2, i8** %8, align 4, !dbg !5573
  br label %9, !dbg !5574

9:                                                ; preds = %7, %3
  ret void, !dbg !5575
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gdma_stop(i32 noundef %0) local_unnamed_addr #2 !dbg !5576 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5578, metadata !DIExpression()), !dbg !5579
  %2 = getelementptr inbounds [1 x %struct.GDMA_REGISTER_T*], [1 x %struct.GDMA_REGISTER_T*]* @gdma, i32 0, i32 %0, !dbg !5580
  %3 = load %struct.GDMA_REGISTER_T*, %struct.GDMA_REGISTER_T** %2, align 4, !dbg !5580
  %4 = getelementptr inbounds %struct.GDMA_REGISTER_T, %struct.GDMA_REGISTER_T* %3, i32 0, i32 6, !dbg !5581
  store volatile i32 0, i32* %4, align 4, !dbg !5582
  ret void, !dbg !5583
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gdma_start(i32 noundef %0) local_unnamed_addr #2 !dbg !5584 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5586, metadata !DIExpression()), !dbg !5587
  %2 = getelementptr inbounds [1 x %struct.GDMA_REGISTER_T*], [1 x %struct.GDMA_REGISTER_T*]* @gdma, i32 0, i32 %0, !dbg !5588
  %3 = load %struct.GDMA_REGISTER_T*, %struct.GDMA_REGISTER_T** %2, align 4, !dbg !5588
  %4 = getelementptr inbounds %struct.GDMA_REGISTER_T, %struct.GDMA_REGISTER_T* %3, i32 0, i32 6, !dbg !5589
  store volatile i32 32768, i32* %4, align 4, !dbg !5590
  ret void, !dbg !5591
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gdma_set_control(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #2 !dbg !5592 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5596, metadata !DIExpression()), !dbg !5599
  call void @llvm.dbg.value(metadata i32 %1, metadata !5597, metadata !DIExpression()), !dbg !5599
  call void @llvm.dbg.value(metadata i32 %2, metadata !5598, metadata !DIExpression()), !dbg !5599
  %4 = getelementptr inbounds [1 x %struct.GDMA_REGISTER_T*], [1 x %struct.GDMA_REGISTER_T*]* @gdma, i32 0, i32 %0, !dbg !5600
  %5 = load %struct.GDMA_REGISTER_T*, %struct.GDMA_REGISTER_T** %4, align 4, !dbg !5600
  %6 = getelementptr inbounds %struct.GDMA_REGISTER_T, %struct.GDMA_REGISTER_T* %5, i32 0, i32 5, !dbg !5601
  store volatile i32 %1, i32* %6, align 4, !dbg !5602
  %7 = load %struct.GDMA_REGISTER_T*, %struct.GDMA_REGISTER_T** %4, align 4, !dbg !5603
  %8 = getelementptr inbounds %struct.GDMA_REGISTER_T, %struct.GDMA_REGISTER_T* %7, i32 0, i32 4, !dbg !5604
  store volatile i32 %2, i32* %8, align 4, !dbg !5605
  ret void, !dbg !5606
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gdma_set_address(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #2 !dbg !5607 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5609, metadata !DIExpression()), !dbg !5612
  call void @llvm.dbg.value(metadata i32 %1, metadata !5610, metadata !DIExpression()), !dbg !5612
  call void @llvm.dbg.value(metadata i32 %2, metadata !5611, metadata !DIExpression()), !dbg !5612
  %4 = getelementptr inbounds [1 x %struct.GDMA_REGISTER_T*], [1 x %struct.GDMA_REGISTER_T*]* @gdma, i32 0, i32 %0, !dbg !5613
  %5 = load %struct.GDMA_REGISTER_T*, %struct.GDMA_REGISTER_T** %4, align 4, !dbg !5613
  %6 = getelementptr inbounds %struct.GDMA_REGISTER_T, %struct.GDMA_REGISTER_T* %5, i32 0, i32 0, !dbg !5614
  store volatile i32 %2, i32* %6, align 4, !dbg !5615
  %7 = load %struct.GDMA_REGISTER_T*, %struct.GDMA_REGISTER_T** %4, align 4, !dbg !5616
  %8 = getelementptr inbounds %struct.GDMA_REGISTER_T, %struct.GDMA_REGISTER_T* %7, i32 0, i32 1, !dbg !5617
  store volatile i32 %1, i32* %8, align 4, !dbg !5618
  ret void, !dbg !5619
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @dma_enable_clock(i32 noundef %0) local_unnamed_addr #0 !dbg !5620 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5625, metadata !DIExpression()), !dbg !5629
  call void @llvm.dbg.value(metadata i32 255, metadata !5628, metadata !DIExpression()), !dbg !5629
  %2 = icmp eq i32 %0, 0, !dbg !5630
  br i1 %2, label %3, label %9, !dbg !5632

3:                                                ; preds = %1
  %4 = tail call i32 @hal_clock_enable(i32 noundef 33) #22, !dbg !5633
  call void @llvm.dbg.value(metadata i32 %4, metadata !5626, metadata !DIExpression()), !dbg !5629
  %5 = icmp eq i32 %4, 0, !dbg !5635
  call void @llvm.dbg.value(metadata i32 undef, metadata !5628, metadata !DIExpression()), !dbg !5629
  %6 = tail call i32 @hal_clock_enable(i32 noundef 136) #22, !dbg !5637
  call void @llvm.dbg.value(metadata i32 %6, metadata !5626, metadata !DIExpression()), !dbg !5629
  %7 = icmp eq i32 %6, 0, !dbg !5638
  %8 = select i1 %7, i1 true, i1 %5, !dbg !5640
  br label %12, !dbg !5640

9:                                                ; preds = %1
  %10 = tail call i32 @hal_clock_enable(i32 noundef 44) #22, !dbg !5641
  call void @llvm.dbg.value(metadata i32 %10, metadata !5626, metadata !DIExpression()), !dbg !5629
  %11 = icmp eq i32 %10, 0, !dbg !5643
  br label %12, !dbg !5645

12:                                               ; preds = %3, %9
  %13 = phi i1 [ %8, %3 ], [ %11, %9 ]
  %14 = select i1 %13, i32 0, i32 255, !dbg !5646
  call void @llvm.dbg.value(metadata i32 %14, metadata !5628, metadata !DIExpression()), !dbg !5629
  ret i32 %14, !dbg !5647
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @dma_disable_clock(i32 noundef %0) local_unnamed_addr #0 !dbg !5648 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5650, metadata !DIExpression()), !dbg !5653
  call void @llvm.dbg.value(metadata i32 255, metadata !5651, metadata !DIExpression()), !dbg !5653
  %2 = icmp eq i32 %0, 0, !dbg !5654
  br i1 %2, label %3, label %9, !dbg !5656

3:                                                ; preds = %1
  %4 = tail call i32 @hal_clock_disable(i32 noundef 33) #22, !dbg !5657
  call void @llvm.dbg.value(metadata i32 %4, metadata !5652, metadata !DIExpression()), !dbg !5653
  %5 = icmp eq i32 %4, 0, !dbg !5659
  call void @llvm.dbg.value(metadata i32 undef, metadata !5651, metadata !DIExpression()), !dbg !5653
  %6 = tail call i32 @hal_clock_disable(i32 noundef 136) #22, !dbg !5661
  call void @llvm.dbg.value(metadata i32 %6, metadata !5652, metadata !DIExpression()), !dbg !5653
  %7 = icmp eq i32 %6, 0, !dbg !5662
  %8 = select i1 %7, i1 true, i1 %5, !dbg !5664
  br label %12, !dbg !5664

9:                                                ; preds = %1
  %10 = tail call i32 @hal_clock_disable(i32 noundef 44) #22, !dbg !5665
  call void @llvm.dbg.value(metadata i32 %10, metadata !5652, metadata !DIExpression()), !dbg !5653
  %11 = icmp eq i32 %10, 0, !dbg !5667
  br label %12, !dbg !5669

12:                                               ; preds = %3, %9
  %13 = phi i1 [ %8, %3 ], [ %11, %9 ]
  %14 = select i1 %13, i32 0, i32 255, !dbg !5670
  call void @llvm.dbg.value(metadata i32 %14, metadata !5651, metadata !DIExpression()), !dbg !5653
  ret i32 %14, !dbg !5671
}

; Function Attrs: optsize
declare dso_local i32 @hal_clock_disable(i32 noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pdma_init(i32 noundef %0) local_unnamed_addr #0 !dbg !5672 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5677, metadata !DIExpression()), !dbg !5682
  call void @llvm.dbg.value(metadata i32 0, metadata !5678, metadata !DIExpression()), !dbg !5682
  %2 = tail call fastcc i32 @pdma_check_valid_channel(i32 noundef %0) #23, !dbg !5683
  call void @llvm.dbg.value(metadata i32 %2, metadata !5678, metadata !DIExpression()), !dbg !5682
  %3 = icmp eq i32 %2, 255, !dbg !5684
  br i1 %3, label %32, label %4, !dbg !5686

4:                                                ; preds = %1
  %5 = tail call i32 @save_and_set_interrupt_mask() #22, !dbg !5687
  call void @llvm.dbg.value(metadata i32 %5, metadata !5680, metadata !DIExpression()), !dbg !5688
  %6 = getelementptr inbounds [7 x i8], [7 x i8]* @pdma_init_status, i32 0, i32 %0, !dbg !5689
  %7 = load volatile i8, i8* %6, align 1, !dbg !5689
  %8 = icmp eq i8 %7, 1, !dbg !5689
  br i1 %8, label %9, label %10, !dbg !5687

9:                                                ; preds = %4
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @__FUNCTION__.pdma_init, i32 0, i32 0), i32 noundef 291, i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.39, i32 0, i32 0), i32 noundef %0) #22, !dbg !5691
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1.40, i32 0, i32 0), i32 noundef 291, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @__FUNCTION__.pdma_init, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.41, i32 0, i32 0)) #25, !dbg !5691
  unreachable, !dbg !5691

10:                                               ; preds = %4
  store volatile i8 1, i8* %6, align 1, !dbg !5693
  tail call void @restore_interrupt_mask(i32 noundef %5) #22, !dbg !5687
  %11 = tail call i32 @dma_enable_clock(i32 noundef 0) #23, !dbg !5695
  call void @llvm.dbg.value(metadata i32 %11, metadata !5679, metadata !DIExpression()), !dbg !5682
  %12 = icmp eq i32 %11, 255, !dbg !5696
  br i1 %12, label %32, label %13, !dbg !5698

13:                                               ; preds = %10
  %14 = tail call i32 @dma_enable_clock(i32 noundef 1) #23, !dbg !5699
  call void @llvm.dbg.value(metadata i32 %14, metadata !5679, metadata !DIExpression()), !dbg !5682
  %15 = icmp eq i32 %14, 255, !dbg !5700
  br i1 %15, label %32, label %16, !dbg !5702

16:                                               ; preds = %13
  %17 = getelementptr inbounds [6 x %struct.PDMA_REGISTER_T*], [6 x %struct.PDMA_REGISTER_T*]* @pdma, i32 0, i32 %2, !dbg !5703
  %18 = load %struct.PDMA_REGISTER_T*, %struct.PDMA_REGISTER_T** %17, align 4, !dbg !5703
  %19 = getelementptr inbounds %struct.PDMA_REGISTER_T, %struct.PDMA_REGISTER_T* %18, i32 0, i32 3, !dbg !5704
  store volatile i32 0, i32* %19, align 4, !dbg !5705
  %20 = load %struct.PDMA_REGISTER_T*, %struct.PDMA_REGISTER_T** %17, align 4, !dbg !5706
  %21 = getelementptr inbounds %struct.PDMA_REGISTER_T, %struct.PDMA_REGISTER_T* %20, i32 0, i32 2, !dbg !5707
  store volatile i32 0, i32* %21, align 4, !dbg !5708
  %22 = load %struct.PDMA_REGISTER_T*, %struct.PDMA_REGISTER_T** %17, align 4, !dbg !5709
  %23 = getelementptr inbounds %struct.PDMA_REGISTER_T, %struct.PDMA_REGISTER_T* %22, i32 0, i32 4, !dbg !5710
  store volatile i32 0, i32* %23, align 4, !dbg !5711
  %24 = load %struct.PDMA_REGISTER_T*, %struct.PDMA_REGISTER_T** %17, align 4, !dbg !5712
  %25 = getelementptr inbounds %struct.PDMA_REGISTER_T, %struct.PDMA_REGISTER_T* %24, i32 0, i32 5, !dbg !5713
  store volatile i32 0, i32* %25, align 4, !dbg !5714
  %26 = load %struct.PDMA_REGISTER_T*, %struct.PDMA_REGISTER_T** %17, align 4, !dbg !5715
  %27 = getelementptr inbounds %struct.PDMA_REGISTER_T, %struct.PDMA_REGISTER_T* %26, i32 0, i32 9, !dbg !5716
  store volatile i32 0, i32* %27, align 4, !dbg !5717
  %28 = tail call i32 @hal_nvic_register_isr_handler(i32 noundef 21, void (i32)* noundef nonnull @pd_domain_dma_interrupt_hander) #22, !dbg !5718
  %29 = tail call i32 @hal_nvic_enable_irq(i32 noundef 21) #22, !dbg !5719
  %30 = tail call i32 @hal_nvic_register_isr_handler(i32 noundef 40, void (i32)* noundef nonnull @pd_domain_dma_interrupt_hander) #22, !dbg !5720
  %31 = tail call i32 @hal_nvic_enable_irq(i32 noundef 40) #22, !dbg !5721
  br label %32, !dbg !5722

32:                                               ; preds = %13, %10, %1, %16
  %33 = phi i32 [ 0, %16 ], [ -2, %1 ], [ -3, %10 ], [ -3, %13 ], !dbg !5682
  ret i32 %33, !dbg !5723
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @pdma_check_valid_channel(i32 noundef %0) unnamed_addr #10 !dbg !5724 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5728, metadata !DIExpression()), !dbg !5730
  call void @llvm.dbg.value(metadata i32 0, metadata !5729, metadata !DIExpression()), !dbg !5730
  %2 = add i32 %0, -1, !dbg !5731
  call void @llvm.dbg.value(metadata i32 %2, metadata !5729, metadata !DIExpression()), !dbg !5730
  %3 = icmp ugt i32 %2, 5, !dbg !5732
  %4 = select i1 %3, i32 255, i32 %2, !dbg !5734
  ret i32 %4, !dbg !5735
}

; Function Attrs: noinline nounwind optsize
define dso_local void @pd_domain_dma_interrupt_hander(i32 %0) #0 !dbg !567 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !573, metadata !DIExpression()), !dbg !5736
  %3 = bitcast i32* %2 to i8*, !dbg !5737
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !5737
  call void @llvm.dbg.declare(metadata i32* %2, metadata !574, metadata !DIExpression()), !dbg !5738
  store volatile i32 0, i32* %2, align 4, !dbg !5738
  %4 = load %struct.anon*, %struct.anon** getelementptr inbounds ([1 x %struct.anon*], [1 x %struct.anon*]* @gdma_global, i32 0, i32 0), align 4, !dbg !5739
  %5 = getelementptr inbounds %struct.anon, %struct.anon* %4, i32 0, i32 0, !dbg !5740
  %6 = load volatile i32, i32* %5, align 4, !dbg !5740
  store volatile i32 %6, i32* %2, align 4, !dbg !5741
  %7 = load volatile i32, i32* %2, align 4, !dbg !5742
  %8 = and i32 %7, 2, !dbg !5744
  %9 = icmp eq i32 %8, 0, !dbg !5744
  br i1 %9, label %18, label %10, !dbg !5745

10:                                               ; preds = %1
  %11 = load %struct.GDMA_REGISTER_T*, %struct.GDMA_REGISTER_T** getelementptr inbounds ([1 x %struct.GDMA_REGISTER_T*], [1 x %struct.GDMA_REGISTER_T*]* @gdma, i32 0, i32 0), align 4, !dbg !5746
  %12 = getelementptr inbounds %struct.GDMA_REGISTER_T, %struct.GDMA_REGISTER_T* %11, i32 0, i32 8, !dbg !5748
  store volatile i32 32768, i32* %12, align 4, !dbg !5749
  %13 = load void (i32, i8*)*, void (i32, i8*)** getelementptr inbounds ([1 x %struct.gdma_user_callback_t], [1 x %struct.gdma_user_callback_t]* @g_gdma_callback, i32 0, i32 0, i32 0), align 4, !dbg !5750
  call void @llvm.dbg.value(metadata void (i32, i8*)* %13, metadata !575, metadata !DIExpression()), !dbg !5736
  call void @llvm.dbg.value(metadata i8* undef, metadata !588, metadata !DIExpression()), !dbg !5736
  %14 = icmp eq void (i32, i8*)* %13, null, !dbg !5751
  br i1 %14, label %17, label %15, !dbg !5753

15:                                               ; preds = %10
  %16 = load i8*, i8** getelementptr inbounds ([1 x %struct.gdma_user_callback_t], [1 x %struct.gdma_user_callback_t]* @g_gdma_callback, i32 0, i32 0, i32 1), align 4, !dbg !5754
  call void @llvm.dbg.value(metadata i8* %16, metadata !588, metadata !DIExpression()), !dbg !5736
  tail call void %13(i32 noundef 0, i8* noundef %16) #22, !dbg !5755
  br label %18, !dbg !5757

17:                                               ; preds = %10
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1.40, i32 0, i32 0), i32 noundef 1138, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @__func__.pd_domain_dma_interrupt_hander, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.41, i32 0, i32 0)) #25, !dbg !5758
  unreachable, !dbg !5758

18:                                               ; preds = %15, %1
  store i32 0, i32* @pd_domain_dma_interrupt_hander.count, align 4, !dbg !5760
  br label %20, !dbg !5762

19:                                               ; preds = %50
  store i32 0, i32* @pd_domain_dma_interrupt_hander.count, align 4, !dbg !5763
  br label %54, !dbg !5765

20:                                               ; preds = %18, %50
  %21 = phi i32 [ 0, %18 ], [ %52, %50 ]
  %22 = getelementptr inbounds [6 x %struct.anon*], [6 x %struct.anon*]* @pdma_global, i32 0, i32 %21, !dbg !5766
  %23 = load %struct.anon*, %struct.anon** %22, align 4, !dbg !5766
  %24 = getelementptr inbounds %struct.anon, %struct.anon* %23, i32 0, i32 0, !dbg !5769
  %25 = load volatile i32, i32* %24, align 4, !dbg !5769
  store volatile i32 %25, i32* %2, align 4, !dbg !5770
  %26 = load volatile i32, i32* %2, align 4, !dbg !5771
  %27 = getelementptr inbounds [6 x i8], [6 x i8]* @g_pdma_global_running_bit, i32 0, i32 %21, !dbg !5773
  %28 = load i8, i8* %27, align 1, !dbg !5773
  %29 = zext i8 %28 to i32, !dbg !5773
  %30 = shl i32 2, %29, !dbg !5774
  %31 = and i32 %30, %26, !dbg !5775
  %32 = icmp eq i32 %31, 0, !dbg !5775
  br i1 %32, label %50, label %33, !dbg !5776

33:                                               ; preds = %20
  %34 = getelementptr inbounds [6 x %struct.PDMA_REGISTER_T*], [6 x %struct.PDMA_REGISTER_T*]* @pdma, i32 0, i32 %21, !dbg !5777
  %35 = load %struct.PDMA_REGISTER_T*, %struct.PDMA_REGISTER_T** %34, align 4, !dbg !5777
  %36 = getelementptr inbounds %struct.PDMA_REGISTER_T, %struct.PDMA_REGISTER_T* %35, i32 0, i32 6, !dbg !5780
  store volatile i32 32768, i32* %36, align 4, !dbg !5781
  %37 = getelementptr inbounds [6 x %struct.gdma_user_callback_t], [6 x %struct.gdma_user_callback_t]* @g_pdma_callback, i32 0, i32 %21, i32 0, !dbg !5782
  %38 = load void (i32, i8*)*, void (i32, i8*)** %37, align 4, !dbg !5782
  call void @llvm.dbg.value(metadata void (i32, i8*)* %38, metadata !576, metadata !DIExpression()), !dbg !5736
  call void @llvm.dbg.value(metadata i8* undef, metadata !588, metadata !DIExpression()), !dbg !5736
  %39 = icmp eq void (i32, i8*)* %38, null, !dbg !5783
  br i1 %39, label %49, label %40, !dbg !5785

40:                                               ; preds = %33
  %41 = getelementptr inbounds [6 x %struct.gdma_user_callback_t], [6 x %struct.gdma_user_callback_t]* @g_pdma_callback, i32 0, i32 %21, i32 1, !dbg !5786
  %42 = load i8*, i8** %41, align 4, !dbg !5786
  call void @llvm.dbg.value(metadata i8* %42, metadata !588, metadata !DIExpression()), !dbg !5736
  tail call void %38(i32 noundef 0, i8* noundef %42) #22, !dbg !5787
  %43 = load i32, i32* @pd_domain_dma_interrupt_hander.count, align 4, !dbg !5789
  %44 = getelementptr inbounds [6 x %struct.PDMA_REGISTER_T*], [6 x %struct.PDMA_REGISTER_T*]* @pdma, i32 0, i32 %43, !dbg !5790
  %45 = load %struct.PDMA_REGISTER_T*, %struct.PDMA_REGISTER_T** %44, align 4, !dbg !5790
  %46 = getelementptr inbounds %struct.PDMA_REGISTER_T, %struct.PDMA_REGISTER_T* %45, i32 0, i32 4, !dbg !5791
  %47 = load volatile i32, i32* %46, align 4, !dbg !5792
  %48 = and i32 %47, -32769, !dbg !5792
  store volatile i32 %48, i32* %46, align 4, !dbg !5792
  br label %50, !dbg !5793

49:                                               ; preds = %33
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1.40, i32 0, i32 0), i32 noundef 1161, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @__func__.pd_domain_dma_interrupt_hander, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.41, i32 0, i32 0)) #25, !dbg !5794
  unreachable, !dbg !5794

50:                                               ; preds = %20, %40
  %51 = phi i32 [ %21, %20 ], [ %43, %40 ], !dbg !5796
  %52 = add i32 %51, 1, !dbg !5796
  store i32 %52, i32* @pd_domain_dma_interrupt_hander.count, align 4, !dbg !5760
  %53 = icmp ult i32 %52, 6, !dbg !5797
  br i1 %53, label %20, label %19, !dbg !5762, !llvm.loop !5798

54:                                               ; preds = %19, %79
  %55 = phi i32 [ 0, %19 ], [ %81, %79 ]
  %56 = getelementptr inbounds [10 x %struct.anon*], [10 x %struct.anon*]* @vdma_global, i32 0, i32 %55, !dbg !5800
  %57 = load %struct.anon*, %struct.anon** %56, align 4, !dbg !5800
  %58 = getelementptr inbounds %struct.anon, %struct.anon* %57, i32 0, i32 0, !dbg !5803
  %59 = load volatile i32, i32* %58, align 4, !dbg !5803
  store volatile i32 %59, i32* %2, align 4, !dbg !5804
  %60 = load volatile i32, i32* %2, align 4, !dbg !5805
  %61 = getelementptr inbounds [10 x i8], [10 x i8]* @g_vdma_global_running_bit, i32 0, i32 %55, !dbg !5807
  %62 = load i8, i8* %61, align 1, !dbg !5807
  %63 = zext i8 %62 to i32, !dbg !5807
  %64 = shl i32 2, %63, !dbg !5808
  %65 = and i32 %64, %60, !dbg !5809
  %66 = icmp eq i32 %65, 0, !dbg !5809
  br i1 %66, label %79, label %67, !dbg !5810

67:                                               ; preds = %54
  %68 = getelementptr inbounds [10 x %struct.VDMA_REGISTER_T*], [10 x %struct.VDMA_REGISTER_T*]* @vdma, i32 0, i32 %55, !dbg !5811
  %69 = load %struct.VDMA_REGISTER_T*, %struct.VDMA_REGISTER_T** %68, align 4, !dbg !5811
  %70 = getelementptr inbounds %struct.VDMA_REGISTER_T, %struct.VDMA_REGISTER_T* %69, i32 0, i32 4, !dbg !5814
  store volatile i32 32768, i32* %70, align 4, !dbg !5815
  %71 = getelementptr inbounds [10 x %struct.gdma_user_callback_t], [10 x %struct.gdma_user_callback_t]* @g_vdma_callback, i32 0, i32 %55, i32 0, !dbg !5816
  %72 = load void (i32, i8*)*, void (i32, i8*)** %71, align 4, !dbg !5816
  call void @llvm.dbg.value(metadata void (i32, i8*)* %72, metadata !582, metadata !DIExpression()), !dbg !5736
  call void @llvm.dbg.value(metadata i8* undef, metadata !588, metadata !DIExpression()), !dbg !5736
  %73 = icmp eq void (i32, i8*)* %72, null, !dbg !5817
  br i1 %73, label %78, label %74, !dbg !5819

74:                                               ; preds = %67
  %75 = getelementptr inbounds [10 x %struct.gdma_user_callback_t], [10 x %struct.gdma_user_callback_t]* @g_vdma_callback, i32 0, i32 %55, i32 1, !dbg !5820
  %76 = load i8*, i8** %75, align 4, !dbg !5820
  call void @llvm.dbg.value(metadata i8* %76, metadata !588, metadata !DIExpression()), !dbg !5736
  tail call void %72(i32 noundef 0, i8* noundef %76) #22, !dbg !5821
  %77 = load i32, i32* @pd_domain_dma_interrupt_hander.count, align 4, !dbg !5823
  br label %79, !dbg !5824

78:                                               ; preds = %67
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1.40, i32 0, i32 0), i32 noundef 1185, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @__func__.pd_domain_dma_interrupt_hander, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.41, i32 0, i32 0)) #25, !dbg !5825
  unreachable, !dbg !5825

79:                                               ; preds = %54, %74
  %80 = phi i32 [ %55, %54 ], [ %77, %74 ], !dbg !5823
  %81 = add i32 %80, 1, !dbg !5823
  store i32 %81, i32* @pd_domain_dma_interrupt_hander.count, align 4, !dbg !5763
  %82 = icmp ult i32 %81, 8, !dbg !5827
  br i1 %82, label %54, label %83, !dbg !5765, !llvm.loop !5828

83:                                               ; preds = %79
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !5830
  ret void, !dbg !5830
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pdma_deinit(i32 noundef %0) local_unnamed_addr #0 !dbg !5831 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !5833, metadata !DIExpression()), !dbg !5840
  call void @llvm.dbg.value(metadata i32 0, metadata !5834, metadata !DIExpression()), !dbg !5840
  %3 = bitcast i32* %2 to i8*, !dbg !5841
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !5841
  call void @llvm.dbg.declare(metadata i32* %2, metadata !5837, metadata !DIExpression()), !dbg !5842
  store volatile i32 0, i32* %2, align 4, !dbg !5842
  %4 = tail call fastcc i32 @pdma_check_valid_channel(i32 noundef %0) #23, !dbg !5843
  call void @llvm.dbg.value(metadata i32 %4, metadata !5834, metadata !DIExpression()), !dbg !5840
  %5 = icmp eq i32 %4, 255, !dbg !5844
  br i1 %5, label %39, label %6, !dbg !5846

6:                                                ; preds = %1
  %7 = tail call i32 @save_and_set_interrupt_mask() #22, !dbg !5847
  call void @llvm.dbg.value(metadata i32 %7, metadata !5836, metadata !DIExpression()), !dbg !5840
  %8 = getelementptr inbounds [6 x %struct.anon*], [6 x %struct.anon*]* @pdma_global, i32 0, i32 %4, !dbg !5848
  %9 = load %struct.anon*, %struct.anon** %8, align 4, !dbg !5848
  %10 = getelementptr inbounds %struct.anon, %struct.anon* %9, i32 0, i32 0, !dbg !5849
  %11 = load volatile i32, i32* %10, align 4, !dbg !5849
  store volatile i32 %11, i32* %2, align 4, !dbg !5850
  %12 = load volatile i32, i32* %2, align 4, !dbg !5851
  %13 = getelementptr inbounds [6 x i8], [6 x i8]* @g_pdma_global_running_bit, i32 0, i32 %4, !dbg !5853
  %14 = load i8, i8* %13, align 1, !dbg !5853
  %15 = zext i8 %14 to i32, !dbg !5853
  %16 = shl i32 2, %15, !dbg !5854
  %17 = and i32 %16, %12, !dbg !5855
  %18 = icmp eq i32 %17, 0, !dbg !5855
  br i1 %18, label %20, label %19, !dbg !5856

19:                                               ; preds = %6
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1.40, i32 0, i32 0), i32 noundef 341, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.pdma_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.41, i32 0, i32 0)) #25, !dbg !5857
  unreachable, !dbg !5857

20:                                               ; preds = %6
  %21 = load volatile i32, i32* %2, align 4, !dbg !5859
  %22 = shl nuw i32 1, %15, !dbg !5861
  %23 = and i32 %21, %22, !dbg !5862
  %24 = icmp eq i32 %23, 0, !dbg !5862
  br i1 %24, label %26, label %25, !dbg !5863

25:                                               ; preds = %20
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1.40, i32 0, i32 0), i32 noundef 349, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.pdma_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.41, i32 0, i32 0)) #25, !dbg !5864
  unreachable, !dbg !5864

26:                                               ; preds = %20
  tail call void @restore_interrupt_mask(i32 noundef %7) #22, !dbg !5866
  %27 = tail call i32 @save_and_set_interrupt_mask() #22, !dbg !5867
  call void @llvm.dbg.value(metadata i32 %27, metadata !5838, metadata !DIExpression()), !dbg !5868
  %28 = getelementptr inbounds [7 x i8], [7 x i8]* @pdma_init_status, i32 0, i32 %0, !dbg !5869
  %29 = load volatile i8, i8* %28, align 1, !dbg !5869
  %30 = icmp eq i8 %29, 0, !dbg !5869
  br i1 %30, label %31, label %32, !dbg !5867

31:                                               ; preds = %26
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.pdma_deinit, i32 0, i32 0), i32 noundef 356, i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.3.42, i32 0, i32 0), i32 noundef %0) #22, !dbg !5871
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1.40, i32 0, i32 0), i32 noundef 356, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.pdma_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.41, i32 0, i32 0)) #25, !dbg !5871
  unreachable, !dbg !5871

32:                                               ; preds = %26
  store volatile i8 0, i8* %28, align 1, !dbg !5873
  tail call void @restore_interrupt_mask(i32 noundef %27) #22, !dbg !5867
  %33 = tail call i32 @dma_disable_clock(i32 noundef 0) #23, !dbg !5875
  call void @llvm.dbg.value(metadata i32 %33, metadata !5835, metadata !DIExpression()), !dbg !5840
  %34 = icmp eq i32 %33, 255, !dbg !5876
  br i1 %34, label %39, label %35, !dbg !5878

35:                                               ; preds = %32
  %36 = tail call i32 @dma_disable_clock(i32 noundef 1) #23, !dbg !5879
  call void @llvm.dbg.value(metadata i32 %36, metadata !5835, metadata !DIExpression()), !dbg !5840
  %37 = icmp eq i32 %36, 255, !dbg !5880
  %38 = select i1 %37, i32 -3, i32 0, !dbg !5840
  br label %39, !dbg !5840

39:                                               ; preds = %35, %32, %1
  %40 = phi i32 [ -2, %1 ], [ -3, %32 ], [ %38, %35 ], !dbg !5840
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !5882
  ret i32 %40, !dbg !5882
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @pdma_set_ring_buffer(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #2 !dbg !5883 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5887, metadata !DIExpression()), !dbg !5891
  call void @llvm.dbg.value(metadata i32 %1, metadata !5888, metadata !DIExpression()), !dbg !5891
  call void @llvm.dbg.value(metadata i32 %2, metadata !5889, metadata !DIExpression()), !dbg !5891
  call void @llvm.dbg.value(metadata i32 0, metadata !5890, metadata !DIExpression()), !dbg !5891
  %4 = tail call fastcc i32 @pdma_check_valid_channel(i32 noundef %0) #23, !dbg !5892
  call void @llvm.dbg.value(metadata i32 %4, metadata !5890, metadata !DIExpression()), !dbg !5891
  %5 = icmp eq i32 %4, 255, !dbg !5893
  br i1 %5, label %14, label %6, !dbg !5895

6:                                                ; preds = %3
  %7 = icmp ugt i32 %1, 65535, !dbg !5896
  br i1 %7, label %14, label %8, !dbg !5898

8:                                                ; preds = %6
  %9 = getelementptr inbounds [6 x %struct.PDMA_REGISTER_T*], [6 x %struct.PDMA_REGISTER_T*]* @pdma, i32 0, i32 %4, !dbg !5899
  %10 = load %struct.PDMA_REGISTER_T*, %struct.PDMA_REGISTER_T** %9, align 4, !dbg !5899
  %11 = getelementptr inbounds %struct.PDMA_REGISTER_T, %struct.PDMA_REGISTER_T* %10, i32 0, i32 0, !dbg !5900
  store volatile i32 %1, i32* %11, align 4, !dbg !5901
  %12 = load %struct.PDMA_REGISTER_T*, %struct.PDMA_REGISTER_T** %9, align 4, !dbg !5902
  %13 = getelementptr inbounds %struct.PDMA_REGISTER_T, %struct.PDMA_REGISTER_T* %12, i32 0, i32 1, !dbg !5903
  store volatile i32 %2, i32* %13, align 4, !dbg !5904
  br label %14, !dbg !5905

14:                                               ; preds = %6, %3, %8
  %15 = phi i32 [ 0, %8 ], [ -2, %3 ], [ -1, %6 ], !dbg !5891
  ret i32 %15, !dbg !5906
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pdma_configure(i32 noundef %0, %struct.pdma_config_t* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !5907 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !5921, metadata !DIExpression()), !dbg !5927
  call void @llvm.dbg.value(metadata %struct.pdma_config_t* %1, metadata !5922, metadata !DIExpression()), !dbg !5927
  call void @llvm.dbg.value(metadata i32 0, metadata !5923, metadata !DIExpression()), !dbg !5927
  call void @llvm.dbg.value(metadata i32 0, metadata !5925, metadata !DIExpression()), !dbg !5927
  %4 = bitcast i32* %3 to i8*, !dbg !5928
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4), !dbg !5928
  call void @llvm.dbg.declare(metadata i32* %3, metadata !5926, metadata !DIExpression()), !dbg !5929
  store volatile i32 0, i32* %3, align 4, !dbg !5929
  %5 = tail call fastcc i32 @pdma_check_valid_channel(i32 noundef %0) #23, !dbg !5930
  call void @llvm.dbg.value(metadata i32 %5, metadata !5923, metadata !DIExpression()), !dbg !5927
  %6 = icmp eq i32 %5, 255, !dbg !5931
  br i1 %6, label %64, label %7, !dbg !5933

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.pdma_config_t, %struct.pdma_config_t* %1, i32 0, i32 0, !dbg !5934
  %9 = load i8, i8* %8, align 4, !dbg !5934, !range !4202
  %10 = icmp eq i8 %9, 0, !dbg !5934
  %11 = select i1 %10, i32 0, i32 512, !dbg !5936
  call void @llvm.dbg.value(metadata i32 %11, metadata !5925, metadata !DIExpression()), !dbg !5927
  %12 = tail call i32 @save_and_set_interrupt_mask() #22, !dbg !5937
  call void @llvm.dbg.value(metadata i32 %12, metadata !5924, metadata !DIExpression()), !dbg !5927
  %13 = getelementptr inbounds [6 x %struct.anon*], [6 x %struct.anon*]* @pdma_global, i32 0, i32 %5, !dbg !5938
  %14 = load %struct.anon*, %struct.anon** %13, align 4, !dbg !5938
  %15 = getelementptr inbounds %struct.anon, %struct.anon* %14, i32 0, i32 0, !dbg !5939
  %16 = load volatile i32, i32* %15, align 4, !dbg !5939
  store volatile i32 %16, i32* %3, align 4, !dbg !5940
  %17 = load volatile i32, i32* %3, align 4, !dbg !5941
  %18 = getelementptr inbounds [6 x i8], [6 x i8]* @g_pdma_global_running_bit, i32 0, i32 %5, !dbg !5943
  %19 = load i8, i8* %18, align 1, !dbg !5943
  %20 = zext i8 %19 to i32, !dbg !5943
  %21 = shl nuw i32 1, %20, !dbg !5944
  %22 = and i32 %21, %17, !dbg !5945
  %23 = icmp eq i32 %22, 0, !dbg !5945
  br i1 %23, label %25, label %24, !dbg !5946

24:                                               ; preds = %7
  tail call void @restore_interrupt_mask(i32 noundef %12) #22, !dbg !5947
  br label %64, !dbg !5949

25:                                               ; preds = %7
  %26 = load volatile i32, i32* %3, align 4, !dbg !5950
  %27 = shl i32 2, %20, !dbg !5952
  %28 = and i32 %26, %27, !dbg !5953
  %29 = icmp eq i32 %28, 0, !dbg !5953
  tail call void @restore_interrupt_mask(i32 noundef %12) #22, !dbg !5927
  br i1 %29, label %30, label %64, !dbg !5954

30:                                               ; preds = %25
  %31 = getelementptr inbounds [6 x %struct.PDMA_REGISTER_T*], [6 x %struct.PDMA_REGISTER_T*]* @pdma, i32 0, i32 %5, !dbg !5955
  %32 = load %struct.PDMA_REGISTER_T*, %struct.PDMA_REGISTER_T** %31, align 4, !dbg !5955
  %33 = getelementptr inbounds %struct.PDMA_REGISTER_T, %struct.PDMA_REGISTER_T* %32, i32 0, i32 4, !dbg !5956
  %34 = load volatile i32, i32* %33, align 4, !dbg !5957
  %35 = and i32 %34, -32769, !dbg !5957
  store volatile i32 %35, i32* %33, align 4, !dbg !5957
  %36 = getelementptr inbounds %struct.pdma_config_t, %struct.pdma_config_t* %1, i32 0, i32 3, !dbg !5958
  %37 = load i32, i32* %36, align 4, !dbg !5958
  %38 = icmp ult i32 %37, 4, !dbg !5959
  br i1 %38, label %39, label %64, !dbg !5959

39:                                               ; preds = %30
  %40 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.pdma_configure, i32 0, i32 %37, !dbg !5959
  %41 = load i32, i32* %40, align 4, !dbg !5959
  %42 = or i32 %11, %41, !dbg !5960
  call void @llvm.dbg.value(metadata i32 %42, metadata !5925, metadata !DIExpression()), !dbg !5927
  %43 = getelementptr inbounds %struct.pdma_config_t, %struct.pdma_config_t* %1, i32 0, i32 1, !dbg !5962
  %44 = load i32, i32* %43, align 4, !dbg !5962
  switch i32 %44, label %64 [
    i32 0, label %49
    i32 1, label %45
    i32 2, label %47
  ], !dbg !5963

45:                                               ; preds = %39
  %46 = or i32 %42, 1, !dbg !5964
  call void @llvm.dbg.value(metadata i32 %46, metadata !5925, metadata !DIExpression()), !dbg !5927
  br label %49, !dbg !5966

47:                                               ; preds = %39
  %48 = or i32 %42, 2, !dbg !5967
  call void @llvm.dbg.value(metadata i32 %48, metadata !5925, metadata !DIExpression()), !dbg !5927
  br label %49, !dbg !5968

49:                                               ; preds = %39, %47, %45
  %50 = phi i32 [ %48, %47 ], [ %46, %45 ], [ %42, %39 ], !dbg !5969
  call void @llvm.dbg.value(metadata i32 %50, metadata !5925, metadata !DIExpression()), !dbg !5927
  %51 = load i8, i8* %8, align 4, !dbg !5970, !range !4202
  %52 = icmp eq i8 %51, 0, !dbg !5970
  %53 = icmp eq i32 %44, 0, !dbg !5972
  %54 = or i32 %50, 32, !dbg !5972
  %55 = select i1 %53, i32 %54, i32 %50, !dbg !5972
  %56 = select i1 %52, i32 %50, i32 %55, !dbg !5972
  call void @llvm.dbg.value(metadata i32 %56, metadata !5925, metadata !DIExpression()), !dbg !5927
  %57 = or i32 %56, 16, !dbg !5973
  call void @llvm.dbg.value(metadata i32 %57, metadata !5925, metadata !DIExpression()), !dbg !5927
  %58 = load %struct.PDMA_REGISTER_T*, %struct.PDMA_REGISTER_T** %31, align 4, !dbg !5974
  %59 = getelementptr inbounds %struct.PDMA_REGISTER_T, %struct.PDMA_REGISTER_T* %58, i32 0, i32 3, !dbg !5975
  store volatile i32 %57, i32* %59, align 4, !dbg !5976
  %60 = getelementptr inbounds %struct.pdma_config_t, %struct.pdma_config_t* %1, i32 0, i32 2, !dbg !5977
  %61 = load i32, i32* %60, align 4, !dbg !5977
  %62 = load %struct.PDMA_REGISTER_T*, %struct.PDMA_REGISTER_T** %31, align 4, !dbg !5978
  %63 = getelementptr inbounds %struct.PDMA_REGISTER_T, %struct.PDMA_REGISTER_T* %62, i32 0, i32 2, !dbg !5979
  store volatile i32 %61, i32* %63, align 4, !dbg !5980
  br label %64, !dbg !5981

64:                                               ; preds = %30, %25, %39, %2, %49, %24
  %65 = phi i32 [ -3, %24 ], [ 0, %49 ], [ -2, %2 ], [ -3, %30 ], [ -3, %39 ], [ -3, %25 ], !dbg !5927
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4), !dbg !5982
  ret i32 %65, !dbg !5982
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pdma_start_polling(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !5983 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !5987, metadata !DIExpression()), !dbg !5992
  call void @llvm.dbg.value(metadata i32 %1, metadata !5988, metadata !DIExpression()), !dbg !5992
  call void @llvm.dbg.value(metadata i32 0, metadata !5989, metadata !DIExpression()), !dbg !5992
  %4 = bitcast i32* %3 to i8*, !dbg !5993
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #24, !dbg !5993
  call void @llvm.dbg.value(metadata i32 0, metadata !5990, metadata !DIExpression()), !dbg !5992
  store i32 0, i32* %3, align 4, !dbg !5994
  %5 = tail call fastcc i32 @pdma_check_valid_channel(i32 noundef %0) #23, !dbg !5995
  call void @llvm.dbg.value(metadata i32 %5, metadata !5989, metadata !DIExpression()), !dbg !5992
  %6 = icmp eq i32 %5, 255, !dbg !5996
  br i1 %6, label %33, label %7, !dbg !5998

7:                                                ; preds = %2
  %8 = and i32 %1, 3, !dbg !5999
  %9 = icmp eq i32 %8, 0, !dbg !6001
  br i1 %9, label %11, label %10, !dbg !6002

10:                                               ; preds = %7
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1.40, i32 0, i32 0), i32 noundef 527, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.pdma_start_polling, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.41, i32 0, i32 0)) #25, !dbg !6003
  unreachable, !dbg !6003

11:                                               ; preds = %7
  %12 = tail call zeroext i1 @hal_cache_is_cacheable(i32 noundef %1) #22, !dbg !6005
  br i1 %12, label %13, label %14, !dbg !6007

13:                                               ; preds = %11
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1.40, i32 0, i32 0), i32 noundef 533, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.pdma_start_polling, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.41, i32 0, i32 0)) #25, !dbg !6008
  unreachable, !dbg !6008

14:                                               ; preds = %11
  %15 = getelementptr inbounds [6 x %struct.PDMA_REGISTER_T*], [6 x %struct.PDMA_REGISTER_T*]* @pdma, i32 0, i32 %5, !dbg !6010
  %16 = load %struct.PDMA_REGISTER_T*, %struct.PDMA_REGISTER_T** %15, align 4, !dbg !6010
  %17 = getelementptr inbounds %struct.PDMA_REGISTER_T, %struct.PDMA_REGISTER_T* %16, i32 0, i32 9, !dbg !6011
  store volatile i32 %1, i32* %17, align 4, !dbg !6012
  %18 = load %struct.PDMA_REGISTER_T*, %struct.PDMA_REGISTER_T** %15, align 4, !dbg !6013
  %19 = getelementptr inbounds %struct.PDMA_REGISTER_T, %struct.PDMA_REGISTER_T* %18, i32 0, i32 3, !dbg !6014
  %20 = load volatile i32, i32* %19, align 4, !dbg !6015
  %21 = and i32 %20, -32769, !dbg !6015
  store volatile i32 %21, i32* %19, align 4, !dbg !6015
  %22 = load %struct.PDMA_REGISTER_T*, %struct.PDMA_REGISTER_T** %15, align 4, !dbg !6016
  %23 = getelementptr inbounds %struct.PDMA_REGISTER_T, %struct.PDMA_REGISTER_T* %22, i32 0, i32 4, !dbg !6017
  store volatile i32 32768, i32* %23, align 4, !dbg !6018
  call void @llvm.dbg.value(metadata i32* %3, metadata !5990, metadata !DIExpression(DW_OP_deref)), !dbg !5992
  %24 = call i32 @pdma_get_running_status(i32 noundef %0, i32* noundef nonnull %3) #23, !dbg !6019
  %25 = load i32, i32* %3, align 4, !dbg !6020
  call void @llvm.dbg.value(metadata i32 %25, metadata !5990, metadata !DIExpression()), !dbg !5992
  %26 = icmp eq i32 %25, 0, !dbg !6021
  br i1 %26, label %31, label %27, !dbg !6021

27:                                               ; preds = %14, %27
  call void @llvm.dbg.value(metadata i32* %3, metadata !5990, metadata !DIExpression(DW_OP_deref)), !dbg !5992
  %28 = call i32 @pdma_get_running_status(i32 noundef %0, i32* noundef nonnull %3) #23, !dbg !6022
  %29 = load i32, i32* %3, align 4, !dbg !6020
  call void @llvm.dbg.value(metadata i32 %29, metadata !5990, metadata !DIExpression()), !dbg !5992
  %30 = icmp eq i32 %29, 0, !dbg !6021
  br i1 %30, label %31, label %27, !dbg !6021, !llvm.loop !6024

31:                                               ; preds = %27, %14
  %32 = tail call i32 @pdma_stop(i32 noundef %0) #23, !dbg !6026
  br label %33, !dbg !6027

33:                                               ; preds = %2, %31
  %34 = phi i32 [ 0, %31 ], [ -2, %2 ], !dbg !5992
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #24, !dbg !6028
  ret i32 %34, !dbg !6028
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @pdma_get_running_status(i32 noundef %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #9 !dbg !6029 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6034, metadata !DIExpression()), !dbg !6038
  call void @llvm.dbg.value(metadata i32* %1, metadata !6035, metadata !DIExpression()), !dbg !6038
  call void @llvm.dbg.value(metadata i32 0, metadata !6036, metadata !DIExpression()), !dbg !6038
  %4 = bitcast i32* %3 to i8*, !dbg !6039
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4), !dbg !6039
  call void @llvm.dbg.declare(metadata i32* %3, metadata !6037, metadata !DIExpression()), !dbg !6040
  store volatile i32 0, i32* %3, align 4, !dbg !6040
  %5 = tail call fastcc i32 @pdma_check_valid_channel(i32 noundef %0) #23, !dbg !6041
  call void @llvm.dbg.value(metadata i32 %5, metadata !6036, metadata !DIExpression()), !dbg !6038
  %6 = icmp eq i32 %5, 255, !dbg !6042
  br i1 %6, label %18, label %7, !dbg !6044

7:                                                ; preds = %2
  %8 = getelementptr inbounds [6 x %struct.anon*], [6 x %struct.anon*]* @pdma_global, i32 0, i32 %5, !dbg !6045
  %9 = load %struct.anon*, %struct.anon** %8, align 4, !dbg !6045
  %10 = getelementptr inbounds %struct.anon, %struct.anon* %9, i32 0, i32 0, !dbg !6046
  %11 = load volatile i32, i32* %10, align 4, !dbg !6046
  store volatile i32 %11, i32* %3, align 4, !dbg !6047
  %12 = load volatile i32, i32* %3, align 4, !dbg !6048
  %13 = getelementptr inbounds [6 x i8], [6 x i8]* @g_pdma_global_running_bit, i32 0, i32 %5, !dbg !6050
  %14 = load i8, i8* %13, align 1, !dbg !6050
  %15 = zext i8 %14 to i32, !dbg !6050
  %16 = lshr i32 %12, %15
  %17 = and i32 %16, 1
  store i32 %17, i32* %1, align 4, !dbg !6051
  br label %18, !dbg !6052

18:                                               ; preds = %2, %7
  %19 = phi i32 [ 0, %7 ], [ -2, %2 ], !dbg !6038
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4), !dbg !6053
  ret i32 %19, !dbg !6053
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @pdma_stop(i32 noundef %0) local_unnamed_addr #2 !dbg !6054 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6056, metadata !DIExpression()), !dbg !6058
  call void @llvm.dbg.value(metadata i32 0, metadata !6057, metadata !DIExpression()), !dbg !6058
  %2 = tail call fastcc i32 @pdma_check_valid_channel(i32 noundef %0) #23, !dbg !6059
  call void @llvm.dbg.value(metadata i32 %2, metadata !6057, metadata !DIExpression()), !dbg !6058
  %3 = icmp eq i32 %2, 255, !dbg !6060
  br i1 %3, label %12, label %4, !dbg !6062

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x %struct.PDMA_REGISTER_T*], [6 x %struct.PDMA_REGISTER_T*]* @pdma, i32 0, i32 %2, !dbg !6063
  %6 = load %struct.PDMA_REGISTER_T*, %struct.PDMA_REGISTER_T** %5, align 4, !dbg !6063
  %7 = getelementptr inbounds %struct.PDMA_REGISTER_T, %struct.PDMA_REGISTER_T* %6, i32 0, i32 4, !dbg !6064
  %8 = load volatile i32, i32* %7, align 4, !dbg !6065
  %9 = and i32 %8, -32769, !dbg !6065
  store volatile i32 %9, i32* %7, align 4, !dbg !6065
  %10 = load %struct.PDMA_REGISTER_T*, %struct.PDMA_REGISTER_T** %5, align 4, !dbg !6066
  %11 = getelementptr inbounds %struct.PDMA_REGISTER_T, %struct.PDMA_REGISTER_T* %10, i32 0, i32 6, !dbg !6067
  store volatile i32 32768, i32* %11, align 4, !dbg !6068
  br label %12, !dbg !6069

12:                                               ; preds = %1, %4
  %13 = phi i32 [ 0, %4 ], [ -2, %1 ], !dbg !6058
  ret i32 %13, !dbg !6070
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pdma_start_interrupt(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !6071 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6073, metadata !DIExpression()), !dbg !6076
  call void @llvm.dbg.value(metadata i32 %1, metadata !6074, metadata !DIExpression()), !dbg !6076
  call void @llvm.dbg.value(metadata i32 0, metadata !6075, metadata !DIExpression()), !dbg !6076
  %3 = tail call fastcc i32 @pdma_check_valid_channel(i32 noundef %0) #23, !dbg !6077
  call void @llvm.dbg.value(metadata i32 %3, metadata !6075, metadata !DIExpression()), !dbg !6076
  %4 = icmp eq i32 %3, 255, !dbg !6078
  br i1 %4, label %22, label %5, !dbg !6080

5:                                                ; preds = %2
  %6 = and i32 %1, 3, !dbg !6081
  %7 = icmp eq i32 %6, 0, !dbg !6083
  br i1 %7, label %9, label %8, !dbg !6084

8:                                                ; preds = %5
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1.40, i32 0, i32 0), i32 noundef 567, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.pdma_start_interrupt, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.41, i32 0, i32 0)) #25, !dbg !6085
  unreachable, !dbg !6085

9:                                                ; preds = %5
  %10 = tail call zeroext i1 @hal_cache_is_cacheable(i32 noundef %1) #22, !dbg !6087
  br i1 %10, label %11, label %12, !dbg !6089

11:                                               ; preds = %9
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1.40, i32 0, i32 0), i32 noundef 573, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.pdma_start_interrupt, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.41, i32 0, i32 0)) #25, !dbg !6090
  unreachable, !dbg !6090

12:                                               ; preds = %9
  %13 = getelementptr inbounds [6 x %struct.PDMA_REGISTER_T*], [6 x %struct.PDMA_REGISTER_T*]* @pdma, i32 0, i32 %3, !dbg !6092
  %14 = load %struct.PDMA_REGISTER_T*, %struct.PDMA_REGISTER_T** %13, align 4, !dbg !6092
  %15 = getelementptr inbounds %struct.PDMA_REGISTER_T, %struct.PDMA_REGISTER_T* %14, i32 0, i32 9, !dbg !6093
  store volatile i32 %1, i32* %15, align 4, !dbg !6094
  %16 = load %struct.PDMA_REGISTER_T*, %struct.PDMA_REGISTER_T** %13, align 4, !dbg !6095
  %17 = getelementptr inbounds %struct.PDMA_REGISTER_T, %struct.PDMA_REGISTER_T* %16, i32 0, i32 3, !dbg !6096
  %18 = load volatile i32, i32* %17, align 4, !dbg !6097
  %19 = or i32 %18, 32768, !dbg !6097
  store volatile i32 %19, i32* %17, align 4, !dbg !6097
  %20 = load %struct.PDMA_REGISTER_T*, %struct.PDMA_REGISTER_T** %13, align 4, !dbg !6098
  %21 = getelementptr inbounds %struct.PDMA_REGISTER_T, %struct.PDMA_REGISTER_T* %20, i32 0, i32 4, !dbg !6099
  store volatile i32 32768, i32* %21, align 4, !dbg !6100
  br label %22, !dbg !6101

22:                                               ; preds = %2, %12
  %23 = phi i32 [ 0, %12 ], [ -2, %2 ], !dbg !6076
  ret i32 %23, !dbg !6102
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @pdma_register_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #7 !dbg !6103 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6107, metadata !DIExpression()), !dbg !6111
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !6108, metadata !DIExpression()), !dbg !6111
  call void @llvm.dbg.value(metadata i8* %2, metadata !6109, metadata !DIExpression()), !dbg !6111
  call void @llvm.dbg.value(metadata i32 0, metadata !6110, metadata !DIExpression()), !dbg !6111
  %4 = tail call fastcc i32 @pdma_check_valid_channel(i32 noundef %0) #23, !dbg !6112
  call void @llvm.dbg.value(metadata i32 %4, metadata !6110, metadata !DIExpression()), !dbg !6111
  %5 = icmp eq i32 %4, 255, !dbg !6113
  br i1 %5, label %12, label %6, !dbg !6115

6:                                                ; preds = %3
  %7 = getelementptr inbounds [6 x %struct.gdma_user_callback_t], [6 x %struct.gdma_user_callback_t]* @g_pdma_callback, i32 0, i32 %4, i32 0, !dbg !6116
  %8 = load void (i32, i8*)*, void (i32, i8*)** %7, align 4, !dbg !6116
  %9 = icmp eq void (i32, i8*)* %8, null, !dbg !6118
  br i1 %9, label %10, label %12, !dbg !6119

10:                                               ; preds = %6
  store void (i32, i8*)* %1, void (i32, i8*)** %7, align 4, !dbg !6120
  %11 = getelementptr inbounds [6 x %struct.gdma_user_callback_t], [6 x %struct.gdma_user_callback_t]* @g_pdma_callback, i32 0, i32 %4, i32 1, !dbg !6122
  store i8* %2, i8** %11, align 4, !dbg !6123
  br label %12, !dbg !6124

12:                                               ; preds = %6, %10, %3
  %13 = phi i32 [ -2, %3 ], [ 0, %10 ], [ 0, %6 ], !dbg !6111
  ret i32 %13, !dbg !6125
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vdma_init(i32 noundef %0) local_unnamed_addr #0 !dbg !6126 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6132, metadata !DIExpression()), !dbg !6138
  call void @llvm.dbg.value(metadata i32 0, metadata !6133, metadata !DIExpression()), !dbg !6138
  call void @llvm.dbg.value(metadata i32 0, metadata !6135, metadata !DIExpression()), !dbg !6138
  %2 = tail call fastcc i32 @vdma_check_valid_channel(i32 noundef %0) #23, !dbg !6139
  call void @llvm.dbg.value(metadata i32 %2, metadata !6133, metadata !DIExpression()), !dbg !6138
  %3 = icmp eq i32 %2, 255, !dbg !6140
  br i1 %3, label %47, label %4, !dbg !6142

4:                                                ; preds = %1
  %5 = tail call i32 @save_and_set_interrupt_mask() #22, !dbg !6143
  call void @llvm.dbg.value(metadata i32 %5, metadata !6136, metadata !DIExpression()), !dbg !6144
  %6 = getelementptr inbounds [18 x i8], [18 x i8]* @vdma_init_status, i32 0, i32 %0, !dbg !6145
  %7 = load volatile i8, i8* %6, align 1, !dbg !6145
  %8 = icmp eq i8 %7, 1, !dbg !6145
  br i1 %8, label %9, label %10, !dbg !6143

9:                                                ; preds = %4
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @__FUNCTION__.vdma_init, i32 0, i32 0), i32 noundef 690, i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.4.43, i32 0, i32 0), i32 noundef %0) #22, !dbg !6147
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1.40, i32 0, i32 0), i32 noundef 690, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @__FUNCTION__.vdma_init, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.41, i32 0, i32 0)) #25, !dbg !6147
  unreachable, !dbg !6147

10:                                               ; preds = %4
  store volatile i8 1, i8* %6, align 1, !dbg !6149
  tail call void @restore_interrupt_mask(i32 noundef %5) #22, !dbg !6143
  %11 = getelementptr inbounds [10 x %struct.VDMA_REGISTER_T*], [10 x %struct.VDMA_REGISTER_T*]* @vdma, i32 0, i32 %2, !dbg !6151
  %12 = load %struct.VDMA_REGISTER_T*, %struct.VDMA_REGISTER_T** %11, align 4, !dbg !6151
  %13 = getelementptr inbounds %struct.VDMA_REGISTER_T, %struct.VDMA_REGISTER_T* %12, i32 0, i32 1, !dbg !6152
  store volatile i32 0, i32* %13, align 4, !dbg !6153
  %14 = load %struct.VDMA_REGISTER_T*, %struct.VDMA_REGISTER_T** %11, align 4, !dbg !6154
  %15 = getelementptr inbounds %struct.VDMA_REGISTER_T, %struct.VDMA_REGISTER_T* %14, i32 0, i32 0, !dbg !6155
  store volatile i32 0, i32* %15, align 4, !dbg !6156
  %16 = load %struct.VDMA_REGISTER_T*, %struct.VDMA_REGISTER_T** %11, align 4, !dbg !6157
  %17 = getelementptr inbounds %struct.VDMA_REGISTER_T, %struct.VDMA_REGISTER_T* %16, i32 0, i32 2, !dbg !6158
  store volatile i32 0, i32* %17, align 4, !dbg !6159
  %18 = load %struct.VDMA_REGISTER_T*, %struct.VDMA_REGISTER_T** %11, align 4, !dbg !6160
  %19 = getelementptr inbounds %struct.VDMA_REGISTER_T, %struct.VDMA_REGISTER_T* %18, i32 0, i32 3, !dbg !6161
  store volatile i32 0, i32* %19, align 4, !dbg !6162
  %20 = load %struct.VDMA_REGISTER_T*, %struct.VDMA_REGISTER_T** %11, align 4, !dbg !6163
  %21 = getelementptr inbounds %struct.VDMA_REGISTER_T, %struct.VDMA_REGISTER_T* %20, i32 0, i32 6, !dbg !6164
  store volatile i32 0, i32* %21, align 4, !dbg !6165
  %22 = load %struct.VDMA_REGISTER_T*, %struct.VDMA_REGISTER_T** %11, align 4, !dbg !6166
  %23 = getelementptr inbounds %struct.VDMA_REGISTER_T, %struct.VDMA_REGISTER_T* %22, i32 0, i32 11, !dbg !6167
  store volatile i32 0, i32* %23, align 4, !dbg !6168
  %24 = load %struct.VDMA_REGISTER_T*, %struct.VDMA_REGISTER_T** %11, align 4, !dbg !6169
  %25 = getelementptr inbounds %struct.VDMA_REGISTER_T, %struct.VDMA_REGISTER_T* %24, i32 0, i32 12, !dbg !6170
  store volatile i32 0, i32* %25, align 4, !dbg !6171
  %26 = icmp ult i32 %2, 8, !dbg !6172
  br i1 %26, label %27, label %30, !dbg !6174

27:                                               ; preds = %10
  %28 = tail call i32 @dma_enable_clock(i32 noundef 0) #23, !dbg !6175
  call void @llvm.dbg.value(metadata i32 %28, metadata !6134, metadata !DIExpression()), !dbg !6138
  %29 = icmp eq i32 %28, 255, !dbg !6177
  br i1 %29, label %47, label %33, !dbg !6179

30:                                               ; preds = %10
  %31 = tail call i32 @dma_enable_clock(i32 noundef 1) #23, !dbg !6180
  call void @llvm.dbg.value(metadata i32 %31, metadata !6134, metadata !DIExpression()), !dbg !6138
  %32 = icmp eq i32 %31, 255, !dbg !6182
  br i1 %32, label %47, label %33, !dbg !6184

33:                                               ; preds = %30, %27
  %34 = add i32 %0, -8, !dbg !6185
  %35 = icmp ult i32 %34, 10, !dbg !6185
  br i1 %35, label %36, label %47, !dbg !6185

36:                                               ; preds = %33
  %37 = getelementptr inbounds [10 x %struct.VDMA_REGISTER_T**], [10 x %struct.VDMA_REGISTER_T**]* @switch.table.vdma_init, i32 0, i32 %34, !dbg !6185
  %38 = load %struct.VDMA_REGISTER_T**, %struct.VDMA_REGISTER_T*** %37, align 4, !dbg !6185
  %39 = getelementptr inbounds [10 x i32], [10 x i32]* @switch.table.vdma_init.6, i32 0, i32 %34, !dbg !6185
  %40 = load i32, i32* %39, align 4, !dbg !6185
  %41 = load %struct.VDMA_REGISTER_T*, %struct.VDMA_REGISTER_T** %38, align 4, !dbg !6186
  %42 = getelementptr inbounds %struct.VDMA_REGISTER_T, %struct.VDMA_REGISTER_T* %41, i32 0, i32 1, !dbg !6186
  store volatile i32 %40, i32* %42, align 4, !dbg !6186
  %43 = tail call i32 @hal_nvic_register_isr_handler(i32 noundef 21, void (i32)* noundef nonnull @pd_domain_dma_interrupt_hander) #22, !dbg !6188
  %44 = tail call i32 @hal_nvic_enable_irq(i32 noundef 21) #22, !dbg !6189
  %45 = tail call i32 @hal_nvic_register_isr_handler(i32 noundef 22, void (i32)* noundef nonnull @ao_domain_dma_interrupt_hander) #22, !dbg !6190
  %46 = tail call i32 @hal_nvic_enable_irq(i32 noundef 22) #22, !dbg !6191
  br label %47, !dbg !6192

47:                                               ; preds = %33, %30, %27, %1, %36
  %48 = phi i32 [ 0, %36 ], [ -2, %1 ], [ -3, %27 ], [ -3, %30 ], [ -3, %33 ], !dbg !6138
  ret i32 %48, !dbg !6193
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @vdma_check_valid_channel(i32 noundef %0) unnamed_addr #10 !dbg !6194 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6198, metadata !DIExpression()), !dbg !6200
  call void @llvm.dbg.value(metadata i32 0, metadata !6199, metadata !DIExpression()), !dbg !6200
  %2 = add i32 %0, -8, !dbg !6201
  call void @llvm.dbg.value(metadata i32 %2, metadata !6199, metadata !DIExpression()), !dbg !6200
  %3 = icmp ugt i32 %2, 9, !dbg !6202
  %4 = select i1 %3, i32 255, i32 %2, !dbg !6204
  ret i32 %4, !dbg !6205
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ao_domain_dma_interrupt_hander(i32 %0) #0 !dbg !6206 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !6208, metadata !DIExpression()), !dbg !6213
  %3 = bitcast i32* %2 to i8*, !dbg !6214
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !6214
  call void @llvm.dbg.declare(metadata i32* %2, metadata !6209, metadata !DIExpression()), !dbg !6215
  store volatile i32 0, i32* %2, align 4, !dbg !6215
  call void @llvm.dbg.value(metadata i32 0, metadata !6212, metadata !DIExpression()), !dbg !6213
  call void @llvm.dbg.value(metadata i32 8, metadata !6212, metadata !DIExpression()), !dbg !6213
  br label %4, !dbg !6216

4:                                                ; preds = %1, %28
  %5 = phi i32 [ 8, %1 ], [ %29, %28 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !6212, metadata !DIExpression()), !dbg !6213
  %6 = getelementptr inbounds [10 x %struct.anon*], [10 x %struct.anon*]* @vdma_global, i32 0, i32 %5, !dbg !6218
  %7 = load %struct.anon*, %struct.anon** %6, align 4, !dbg !6218
  %8 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, !dbg !6221
  %9 = load volatile i32, i32* %8, align 4, !dbg !6221
  store volatile i32 %9, i32* %2, align 4, !dbg !6222
  %10 = load volatile i32, i32* %2, align 4, !dbg !6223
  %11 = getelementptr inbounds [10 x i8], [10 x i8]* @g_vdma_global_running_bit, i32 0, i32 %5, !dbg !6225
  %12 = load i8, i8* %11, align 1, !dbg !6225
  %13 = zext i8 %12 to i32, !dbg !6225
  %14 = shl i32 2, %13, !dbg !6226
  %15 = and i32 %14, %10, !dbg !6227
  %16 = icmp eq i32 %15, 0, !dbg !6227
  br i1 %16, label %28, label %17, !dbg !6228

17:                                               ; preds = %4
  %18 = getelementptr inbounds [10 x %struct.VDMA_REGISTER_T*], [10 x %struct.VDMA_REGISTER_T*]* @vdma, i32 0, i32 %5, !dbg !6229
  %19 = load %struct.VDMA_REGISTER_T*, %struct.VDMA_REGISTER_T** %18, align 4, !dbg !6229
  %20 = getelementptr inbounds %struct.VDMA_REGISTER_T, %struct.VDMA_REGISTER_T* %19, i32 0, i32 4, !dbg !6232
  store volatile i32 32768, i32* %20, align 4, !dbg !6233
  %21 = getelementptr inbounds [10 x %struct.gdma_user_callback_t], [10 x %struct.gdma_user_callback_t]* @g_vdma_callback, i32 0, i32 %5, i32 0, !dbg !6234
  %22 = load void (i32, i8*)*, void (i32, i8*)** %21, align 4, !dbg !6234
  call void @llvm.dbg.value(metadata void (i32, i8*)* %22, metadata !6210, metadata !DIExpression()), !dbg !6213
  call void @llvm.dbg.value(metadata i8* undef, metadata !6211, metadata !DIExpression()), !dbg !6213
  %23 = icmp eq void (i32, i8*)* %22, null, !dbg !6235
  br i1 %23, label %27, label %24, !dbg !6237

24:                                               ; preds = %17
  %25 = getelementptr inbounds [10 x %struct.gdma_user_callback_t], [10 x %struct.gdma_user_callback_t]* @g_vdma_callback, i32 0, i32 %5, i32 1, !dbg !6238
  %26 = load i8*, i8** %25, align 4, !dbg !6238
  call void @llvm.dbg.value(metadata i8* %26, metadata !6211, metadata !DIExpression()), !dbg !6213
  tail call void %22(i32 noundef 0, i8* noundef %26) #22, !dbg !6239
  br label %28, !dbg !6241

27:                                               ; preds = %17
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1.40, i32 0, i32 0), i32 noundef 1234, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @__func__.ao_domain_dma_interrupt_hander, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.41, i32 0, i32 0)) #25, !dbg !6242
  unreachable, !dbg !6242

28:                                               ; preds = %4, %24
  %29 = add nuw nsw i32 %5, 1, !dbg !6244
  call void @llvm.dbg.value(metadata i32 %29, metadata !6212, metadata !DIExpression()), !dbg !6213
  %30 = icmp eq i32 %29, 10, !dbg !6245
  br i1 %30, label %31, label %4, !dbg !6216, !llvm.loop !6246

31:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !6248
  ret void, !dbg !6248
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vdma_deinit(i32 noundef %0) local_unnamed_addr #0 !dbg !6249 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6251, metadata !DIExpression()), !dbg !6258
  call void @llvm.dbg.value(metadata i32 255, metadata !6252, metadata !DIExpression()), !dbg !6258
  %3 = bitcast i32* %2 to i8*, !dbg !6259
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !6259
  call void @llvm.dbg.declare(metadata i32* %2, metadata !6255, metadata !DIExpression()), !dbg !6260
  store volatile i32 0, i32* %2, align 4, !dbg !6260
  %4 = tail call fastcc i32 @vdma_check_valid_channel(i32 noundef %0) #23, !dbg !6261
  call void @llvm.dbg.value(metadata i32 %4, metadata !6252, metadata !DIExpression()), !dbg !6258
  %5 = icmp eq i32 %4, 255, !dbg !6262
  br i1 %5, label %41, label %6, !dbg !6264

6:                                                ; preds = %1
  %7 = tail call i32 @save_and_set_interrupt_mask() #22, !dbg !6265
  call void @llvm.dbg.value(metadata i32 %7, metadata !6254, metadata !DIExpression()), !dbg !6258
  %8 = getelementptr inbounds [10 x %struct.anon*], [10 x %struct.anon*]* @vdma_global, i32 0, i32 %4, !dbg !6266
  %9 = load %struct.anon*, %struct.anon** %8, align 4, !dbg !6266
  %10 = getelementptr inbounds %struct.anon, %struct.anon* %9, i32 0, i32 0, !dbg !6267
  %11 = load volatile i32, i32* %10, align 4, !dbg !6267
  store volatile i32 %11, i32* %2, align 4, !dbg !6268
  %12 = load volatile i32, i32* %2, align 4, !dbg !6269
  %13 = getelementptr inbounds [10 x i8], [10 x i8]* @g_vdma_global_running_bit, i32 0, i32 %4, !dbg !6271
  %14 = load i8, i8* %13, align 1, !dbg !6271
  %15 = zext i8 %14 to i32, !dbg !6271
  %16 = shl i32 2, %15, !dbg !6272
  %17 = and i32 %16, %12, !dbg !6273
  %18 = icmp eq i32 %17, 0, !dbg !6273
  br i1 %18, label %20, label %19, !dbg !6274

19:                                               ; preds = %6
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1.40, i32 0, i32 0), i32 noundef 806, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.vdma_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.41, i32 0, i32 0)) #25, !dbg !6275
  unreachable, !dbg !6275

20:                                               ; preds = %6
  %21 = load volatile i32, i32* %2, align 4, !dbg !6277
  %22 = shl nuw i32 1, %15, !dbg !6279
  %23 = and i32 %21, %22, !dbg !6280
  %24 = icmp eq i32 %23, 0, !dbg !6280
  br i1 %24, label %26, label %25, !dbg !6281

25:                                               ; preds = %20
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1.40, i32 0, i32 0), i32 noundef 812, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.vdma_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.41, i32 0, i32 0)) #25, !dbg !6282
  unreachable, !dbg !6282

26:                                               ; preds = %20
  tail call void @restore_interrupt_mask(i32 noundef %7) #22, !dbg !6284
  %27 = tail call i32 @save_and_set_interrupt_mask() #22, !dbg !6285
  call void @llvm.dbg.value(metadata i32 %27, metadata !6256, metadata !DIExpression()), !dbg !6286
  %28 = getelementptr inbounds [18 x i8], [18 x i8]* @vdma_init_status, i32 0, i32 %0, !dbg !6287
  %29 = load volatile i8, i8* %28, align 1, !dbg !6287
  %30 = icmp eq i8 %29, 0, !dbg !6287
  br i1 %30, label %31, label %32, !dbg !6285

31:                                               ; preds = %26
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.vdma_deinit, i32 0, i32 0), i32 noundef 820, i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.5.44, i32 0, i32 0), i32 noundef %0) #22, !dbg !6289
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1.40, i32 0, i32 0), i32 noundef 820, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.vdma_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.41, i32 0, i32 0)) #25, !dbg !6289
  unreachable, !dbg !6289

32:                                               ; preds = %26
  store volatile i8 0, i8* %28, align 1, !dbg !6291
  tail call void @restore_interrupt_mask(i32 noundef %27) #22, !dbg !6285
  %33 = icmp ult i32 %4, 8, !dbg !6293
  br i1 %33, label %34, label %37, !dbg !6295

34:                                               ; preds = %32
  %35 = tail call i32 @dma_disable_clock(i32 noundef 0) #23, !dbg !6296
  call void @llvm.dbg.value(metadata i32 %35, metadata !6253, metadata !DIExpression()), !dbg !6258
  %36 = icmp eq i32 %35, 255, !dbg !6298
  br i1 %36, label %41, label %40, !dbg !6300

37:                                               ; preds = %32
  %38 = tail call i32 @dma_disable_clock(i32 noundef 1) #23, !dbg !6301
  call void @llvm.dbg.value(metadata i32 %38, metadata !6253, metadata !DIExpression()), !dbg !6258
  %39 = icmp eq i32 %38, 255, !dbg !6303
  br i1 %39, label %41, label %40, !dbg !6305

40:                                               ; preds = %37, %34
  br label %41, !dbg !6306

41:                                               ; preds = %37, %34, %1, %40
  %42 = phi i32 [ 0, %40 ], [ -2, %1 ], [ -3, %34 ], [ -3, %37 ], !dbg !6258
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !6307
  ret i32 %42, !dbg !6307
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vdma_configure(i32 noundef %0, %struct.hal_cache_region_config_t* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !6308 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6318, metadata !DIExpression()), !dbg !6321
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %1, metadata !6319, metadata !DIExpression()), !dbg !6321
  call void @llvm.dbg.value(metadata i32 0, metadata !6320, metadata !DIExpression()), !dbg !6321
  %3 = tail call fastcc i32 @vdma_check_valid_channel(i32 noundef %0) #23, !dbg !6322
  call void @llvm.dbg.value(metadata i32 %3, metadata !6320, metadata !DIExpression()), !dbg !6321
  %4 = icmp eq i32 %3, 255, !dbg !6323
  br i1 %4, label %23, label %5, !dbg !6325

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 0, i32 0, !dbg !6326
  %7 = load i32, i32* %6, align 4, !dbg !6326
  %8 = and i32 %7, 3, !dbg !6328
  %9 = icmp eq i32 %8, 0, !dbg !6329
  br i1 %9, label %11, label %10, !dbg !6330

10:                                               ; preds = %5
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1.40, i32 0, i32 0), i32 noundef 857, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.vdma_configure, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.41, i32 0, i32 0)) #25, !dbg !6331
  unreachable, !dbg !6331

11:                                               ; preds = %5
  %12 = tail call zeroext i1 @hal_cache_is_cacheable(i32 noundef %7) #22, !dbg !6333
  br i1 %12, label %13, label %14, !dbg !6335

13:                                               ; preds = %11
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1.40, i32 0, i32 0), i32 noundef 863, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.vdma_configure, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.41, i32 0, i32 0)) #25, !dbg !6336
  unreachable, !dbg !6336

14:                                               ; preds = %11
  %15 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 0, i32 1, !dbg !6338
  %16 = load i32, i32* %15, align 4, !dbg !6338
  %17 = getelementptr inbounds [10 x %struct.VDMA_REGISTER_T*], [10 x %struct.VDMA_REGISTER_T*]* @vdma, i32 0, i32 %3, !dbg !6339
  %18 = load %struct.VDMA_REGISTER_T*, %struct.VDMA_REGISTER_T** %17, align 4, !dbg !6339
  %19 = getelementptr inbounds %struct.VDMA_REGISTER_T, %struct.VDMA_REGISTER_T* %18, i32 0, i32 12, !dbg !6340
  store volatile i32 %16, i32* %19, align 4, !dbg !6341
  %20 = load i32, i32* %6, align 4, !dbg !6342
  %21 = load %struct.VDMA_REGISTER_T*, %struct.VDMA_REGISTER_T** %17, align 4, !dbg !6343
  %22 = getelementptr inbounds %struct.VDMA_REGISTER_T, %struct.VDMA_REGISTER_T* %21, i32 0, i32 6, !dbg !6344
  store volatile i32 %20, i32* %22, align 4, !dbg !6345
  br label %23, !dbg !6346

23:                                               ; preds = %2, %14
  %24 = phi i32 [ 0, %14 ], [ -2, %2 ], !dbg !6321
  ret i32 %24, !dbg !6347
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @vdma_enable_interrupt(i32 noundef %0) local_unnamed_addr #2 !dbg !6348 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6350, metadata !DIExpression()), !dbg !6352
  call void @llvm.dbg.value(metadata i32 0, metadata !6351, metadata !DIExpression()), !dbg !6352
  %2 = tail call fastcc i32 @vdma_check_valid_channel(i32 noundef %0) #23, !dbg !6353
  call void @llvm.dbg.value(metadata i32 %2, metadata !6351, metadata !DIExpression()), !dbg !6352
  %3 = icmp eq i32 %2, 255, !dbg !6354
  br i1 %3, label %10, label %4, !dbg !6356

4:                                                ; preds = %1
  %5 = getelementptr inbounds [10 x %struct.VDMA_REGISTER_T*], [10 x %struct.VDMA_REGISTER_T*]* @vdma, i32 0, i32 %2, !dbg !6357
  %6 = load %struct.VDMA_REGISTER_T*, %struct.VDMA_REGISTER_T** %5, align 4, !dbg !6357
  %7 = getelementptr inbounds %struct.VDMA_REGISTER_T, %struct.VDMA_REGISTER_T* %6, i32 0, i32 1, !dbg !6358
  %8 = load volatile i32, i32* %7, align 4, !dbg !6359
  %9 = or i32 %8, 32768, !dbg !6359
  store volatile i32 %9, i32* %7, align 4, !dbg !6359
  br label %10, !dbg !6360

10:                                               ; preds = %1, %4
  %11 = phi i32 [ 0, %4 ], [ -2, %1 ], !dbg !6352
  ret i32 %11, !dbg !6361
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vdma_start(i32 noundef %0) local_unnamed_addr #0 !dbg !6362 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6364, metadata !DIExpression()), !dbg !6368
  call void @llvm.dbg.value(metadata i32 0, metadata !6365, metadata !DIExpression()), !dbg !6368
  %3 = bitcast i32* %2 to i8*, !dbg !6369
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !6369
  call void @llvm.dbg.declare(metadata i32* %2, metadata !6367, metadata !DIExpression()), !dbg !6370
  store volatile i32 0, i32* %2, align 4, !dbg !6370
  %4 = tail call fastcc i32 @vdma_check_valid_channel(i32 noundef %0) #23, !dbg !6371
  call void @llvm.dbg.value(metadata i32 %4, metadata !6365, metadata !DIExpression()), !dbg !6368
  %5 = icmp eq i32 %4, 255, !dbg !6372
  br i1 %5, label %29, label %6, !dbg !6374

6:                                                ; preds = %1
  %7 = tail call i32 @save_and_set_interrupt_mask() #22, !dbg !6375
  call void @llvm.dbg.value(metadata i32 %7, metadata !6366, metadata !DIExpression()), !dbg !6368
  %8 = getelementptr inbounds [10 x %struct.anon*], [10 x %struct.anon*]* @vdma_global, i32 0, i32 %4, !dbg !6376
  %9 = load %struct.anon*, %struct.anon** %8, align 4, !dbg !6376
  %10 = getelementptr inbounds %struct.anon, %struct.anon* %9, i32 0, i32 0, !dbg !6377
  %11 = load volatile i32, i32* %10, align 4, !dbg !6377
  store volatile i32 %11, i32* %2, align 4, !dbg !6378
  %12 = load volatile i32, i32* %2, align 4, !dbg !6379
  %13 = getelementptr inbounds [10 x i8], [10 x i8]* @g_vdma_global_running_bit, i32 0, i32 %4, !dbg !6381
  %14 = load i8, i8* %13, align 1, !dbg !6381
  %15 = zext i8 %14 to i32, !dbg !6381
  %16 = shl nuw i32 1, %15, !dbg !6382
  %17 = and i32 %16, %12, !dbg !6383
  %18 = icmp eq i32 %17, 0, !dbg !6383
  br i1 %18, label %20, label %19, !dbg !6384

19:                                               ; preds = %6
  tail call void @restore_interrupt_mask(i32 noundef %7) #22, !dbg !6385
  br label %29, !dbg !6387

20:                                               ; preds = %6
  %21 = load volatile i32, i32* %2, align 4, !dbg !6388
  %22 = shl i32 2, %15, !dbg !6390
  %23 = and i32 %21, %22, !dbg !6391
  %24 = icmp eq i32 %23, 0, !dbg !6391
  tail call void @restore_interrupt_mask(i32 noundef %7) #22, !dbg !6368
  br i1 %24, label %25, label %29, !dbg !6392

25:                                               ; preds = %20
  %26 = getelementptr inbounds [10 x %struct.VDMA_REGISTER_T*], [10 x %struct.VDMA_REGISTER_T*]* @vdma, i32 0, i32 %4, !dbg !6393
  %27 = load %struct.VDMA_REGISTER_T*, %struct.VDMA_REGISTER_T** %26, align 4, !dbg !6393
  %28 = getelementptr inbounds %struct.VDMA_REGISTER_T, %struct.VDMA_REGISTER_T* %27, i32 0, i32 2, !dbg !6394
  store volatile i32 32768, i32* %28, align 4, !dbg !6395
  br label %29, !dbg !6396

29:                                               ; preds = %20, %1, %25, %19
  %30 = phi i32 [ -3, %19 ], [ 0, %25 ], [ -2, %1 ], [ -3, %20 ], !dbg !6368
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !6397
  ret i32 %30, !dbg !6397
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @vdma_disable_interrupt(i32 noundef %0) local_unnamed_addr #2 !dbg !6398 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6400, metadata !DIExpression()), !dbg !6402
  call void @llvm.dbg.value(metadata i32 0, metadata !6401, metadata !DIExpression()), !dbg !6402
  %2 = tail call fastcc i32 @vdma_check_valid_channel(i32 noundef %0) #23, !dbg !6403
  call void @llvm.dbg.value(metadata i32 %2, metadata !6401, metadata !DIExpression()), !dbg !6402
  %3 = icmp eq i32 %2, 255, !dbg !6404
  br i1 %3, label %10, label %4, !dbg !6406

4:                                                ; preds = %1
  %5 = getelementptr inbounds [10 x %struct.VDMA_REGISTER_T*], [10 x %struct.VDMA_REGISTER_T*]* @vdma, i32 0, i32 %2, !dbg !6407
  %6 = load %struct.VDMA_REGISTER_T*, %struct.VDMA_REGISTER_T** %5, align 4, !dbg !6407
  %7 = getelementptr inbounds %struct.VDMA_REGISTER_T, %struct.VDMA_REGISTER_T* %6, i32 0, i32 1, !dbg !6408
  %8 = load volatile i32, i32* %7, align 4, !dbg !6409
  %9 = and i32 %8, -32769, !dbg !6409
  store volatile i32 %9, i32* %7, align 4, !dbg !6409
  br label %10, !dbg !6410

10:                                               ; preds = %1, %4
  %11 = phi i32 [ 0, %4 ], [ -2, %1 ], !dbg !6402
  ret i32 %11, !dbg !6411
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @vdma_stop(i32 noundef %0) local_unnamed_addr #2 !dbg !6412 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6414, metadata !DIExpression()), !dbg !6416
  call void @llvm.dbg.value(metadata i32 0, metadata !6415, metadata !DIExpression()), !dbg !6416
  %2 = tail call fastcc i32 @vdma_check_valid_channel(i32 noundef %0) #23, !dbg !6417
  call void @llvm.dbg.value(metadata i32 %2, metadata !6415, metadata !DIExpression()), !dbg !6416
  %3 = icmp eq i32 %2, 255, !dbg !6418
  br i1 %3, label %8, label %4, !dbg !6420

4:                                                ; preds = %1
  %5 = getelementptr inbounds [10 x %struct.VDMA_REGISTER_T*], [10 x %struct.VDMA_REGISTER_T*]* @vdma, i32 0, i32 %2, !dbg !6421
  %6 = load %struct.VDMA_REGISTER_T*, %struct.VDMA_REGISTER_T** %5, align 4, !dbg !6421
  %7 = getelementptr inbounds %struct.VDMA_REGISTER_T, %struct.VDMA_REGISTER_T* %6, i32 0, i32 2, !dbg !6422
  store volatile i32 0, i32* %7, align 4, !dbg !6423
  br label %8, !dbg !6424

8:                                                ; preds = %1, %4
  %9 = phi i32 [ 0, %4 ], [ -2, %1 ], !dbg !6416
  ret i32 %9, !dbg !6425
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @vdma_set_threshold(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !6426 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6430, metadata !DIExpression()), !dbg !6433
  call void @llvm.dbg.value(metadata i32 %1, metadata !6431, metadata !DIExpression()), !dbg !6433
  call void @llvm.dbg.value(metadata i32 0, metadata !6432, metadata !DIExpression()), !dbg !6433
  %3 = tail call fastcc i32 @vdma_check_valid_channel(i32 noundef %0) #23, !dbg !6434
  call void @llvm.dbg.value(metadata i32 %3, metadata !6432, metadata !DIExpression()), !dbg !6433
  %4 = icmp eq i32 %3, 255, !dbg !6435
  br i1 %4, label %11, label %5, !dbg !6437

5:                                                ; preds = %2
  %6 = icmp ugt i32 %1, 65535, !dbg !6438
  br i1 %6, label %11, label %7, !dbg !6440

7:                                                ; preds = %5
  %8 = getelementptr inbounds [10 x %struct.VDMA_REGISTER_T*], [10 x %struct.VDMA_REGISTER_T*]* @vdma, i32 0, i32 %3, !dbg !6441
  %9 = load %struct.VDMA_REGISTER_T*, %struct.VDMA_REGISTER_T** %8, align 4, !dbg !6441
  %10 = getelementptr inbounds %struct.VDMA_REGISTER_T, %struct.VDMA_REGISTER_T* %9, i32 0, i32 0, !dbg !6442
  store volatile i32 %1, i32* %10, align 4, !dbg !6443
  br label %11, !dbg !6444

11:                                               ; preds = %5, %2, %7
  %12 = phi i32 [ 0, %7 ], [ -2, %2 ], [ -1, %5 ], !dbg !6433
  ret i32 %12, !dbg !6445
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @vdma_set_alert_length(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !6446 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6448, metadata !DIExpression()), !dbg !6451
  call void @llvm.dbg.value(metadata i32 %1, metadata !6449, metadata !DIExpression()), !dbg !6451
  call void @llvm.dbg.value(metadata i32 0, metadata !6450, metadata !DIExpression()), !dbg !6451
  %3 = tail call fastcc i32 @vdma_check_valid_channel(i32 noundef %0) #23, !dbg !6452
  call void @llvm.dbg.value(metadata i32 %3, metadata !6450, metadata !DIExpression()), !dbg !6451
  %4 = icmp eq i32 %3, 255, !dbg !6453
  br i1 %4, label %11, label %5, !dbg !6455

5:                                                ; preds = %2
  %6 = icmp ugt i32 %1, 63, !dbg !6456
  br i1 %6, label %11, label %7, !dbg !6458

7:                                                ; preds = %5
  %8 = getelementptr inbounds [10 x %struct.VDMA_REGISTER_T*], [10 x %struct.VDMA_REGISTER_T*]* @vdma, i32 0, i32 %3, !dbg !6459
  %9 = load %struct.VDMA_REGISTER_T*, %struct.VDMA_REGISTER_T** %8, align 4, !dbg !6459
  %10 = getelementptr inbounds %struct.VDMA_REGISTER_T, %struct.VDMA_REGISTER_T* %9, i32 0, i32 11, !dbg !6460
  store volatile i32 %1, i32* %10, align 4, !dbg !6461
  br label %11, !dbg !6462

11:                                               ; preds = %5, %2, %7
  %12 = phi i32 [ 0, %7 ], [ -2, %2 ], [ -1, %5 ], !dbg !6451
  ret i32 %12, !dbg !6463
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @vdma_push_data(i32 noundef %0, i8 noundef zeroext %1) local_unnamed_addr #2 !dbg !6464 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6468, metadata !DIExpression()), !dbg !6471
  call void @llvm.dbg.value(metadata i8 %1, metadata !6469, metadata !DIExpression()), !dbg !6471
  call void @llvm.dbg.value(metadata i32 0, metadata !6470, metadata !DIExpression()), !dbg !6471
  %3 = tail call fastcc i32 @vdma_check_valid_channel(i32 noundef %0) #23, !dbg !6472
  call void @llvm.dbg.value(metadata i32 %3, metadata !6470, metadata !DIExpression()), !dbg !6471
  %4 = icmp eq i32 %3, 255, !dbg !6473
  br i1 %4, label %10, label %5, !dbg !6475

5:                                                ; preds = %2
  %6 = zext i8 %1 to i32, !dbg !6476
  %7 = getelementptr inbounds [10 x %struct.anon*], [10 x %struct.anon*]* @vdma_port, i32 0, i32 %3, !dbg !6477
  %8 = load %struct.anon*, %struct.anon** %7, align 4, !dbg !6477
  %9 = getelementptr inbounds %struct.anon, %struct.anon* %8, i32 0, i32 0, !dbg !6478
  store volatile i32 %6, i32* %9, align 4, !dbg !6479
  br label %10, !dbg !6480

10:                                               ; preds = %2, %5
  %11 = phi i32 [ 0, %5 ], [ -2, %2 ], !dbg !6471
  ret i32 %11, !dbg !6481
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @vdma_pop_data(i32 noundef %0, i8* nocapture noundef writeonly %1) local_unnamed_addr #11 !dbg !6482 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6486, metadata !DIExpression()), !dbg !6489
  call void @llvm.dbg.value(metadata i8* %1, metadata !6487, metadata !DIExpression()), !dbg !6489
  call void @llvm.dbg.value(metadata i32 0, metadata !6488, metadata !DIExpression()), !dbg !6489
  %3 = tail call fastcc i32 @vdma_check_valid_channel(i32 noundef %0) #23, !dbg !6490
  call void @llvm.dbg.value(metadata i32 %3, metadata !6488, metadata !DIExpression()), !dbg !6489
  %4 = icmp eq i32 %3, 255, !dbg !6491
  br i1 %4, label %11, label %5, !dbg !6493

5:                                                ; preds = %2
  %6 = getelementptr inbounds [10 x %struct.anon*], [10 x %struct.anon*]* @vdma_port, i32 0, i32 %3, !dbg !6494
  %7 = load %struct.anon*, %struct.anon** %6, align 4, !dbg !6494
  %8 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, !dbg !6495
  %9 = load volatile i32, i32* %8, align 4, !dbg !6495
  %10 = trunc i32 %9 to i8, !dbg !6494
  store i8 %10, i8* %1, align 1, !dbg !6496
  br label %11, !dbg !6497

11:                                               ; preds = %2, %5
  %12 = phi i32 [ 0, %5 ], [ -2, %2 ], !dbg !6489
  ret i32 %12, !dbg !6498
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @vdma_get_available_receive_bytes(i32 noundef %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #11 !dbg !6499 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6503, metadata !DIExpression()), !dbg !6506
  call void @llvm.dbg.value(metadata i32* %1, metadata !6504, metadata !DIExpression()), !dbg !6506
  call void @llvm.dbg.value(metadata i32 0, metadata !6505, metadata !DIExpression()), !dbg !6506
  %3 = tail call fastcc i32 @vdma_check_valid_channel(i32 noundef %0) #23, !dbg !6507
  call void @llvm.dbg.value(metadata i32 %3, metadata !6505, metadata !DIExpression()), !dbg !6506
  %4 = icmp eq i32 %3, 255, !dbg !6508
  br i1 %4, label %10, label %5, !dbg !6510

5:                                                ; preds = %2
  %6 = getelementptr inbounds [10 x %struct.VDMA_REGISTER_T*], [10 x %struct.VDMA_REGISTER_T*]* @vdma, i32 0, i32 %3, !dbg !6511
  %7 = load %struct.VDMA_REGISTER_T*, %struct.VDMA_REGISTER_T** %6, align 4, !dbg !6511
  %8 = getelementptr inbounds %struct.VDMA_REGISTER_T, %struct.VDMA_REGISTER_T* %7, i32 0, i32 9, !dbg !6512
  %9 = load volatile i32, i32* %8, align 4, !dbg !6512
  store i32 %9, i32* %1, align 4, !dbg !6513
  br label %10, !dbg !6514

10:                                               ; preds = %2, %5
  %11 = phi i32 [ 0, %5 ], [ -2, %2 ], !dbg !6506
  ret i32 %11, !dbg !6515
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @vdma_get_available_send_space(i32 noundef %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #11 !dbg !6516 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6518, metadata !DIExpression()), !dbg !6523
  call void @llvm.dbg.value(metadata i32* %1, metadata !6519, metadata !DIExpression()), !dbg !6523
  call void @llvm.dbg.value(metadata i32 0, metadata !6520, metadata !DIExpression()), !dbg !6523
  call void @llvm.dbg.value(metadata i32 0, metadata !6521, metadata !DIExpression()), !dbg !6523
  call void @llvm.dbg.value(metadata i32 0, metadata !6522, metadata !DIExpression()), !dbg !6523
  %3 = tail call fastcc i32 @vdma_check_valid_channel(i32 noundef %0) #23, !dbg !6524
  call void @llvm.dbg.value(metadata i32 %3, metadata !6520, metadata !DIExpression()), !dbg !6523
  %4 = icmp eq i32 %3, 255, !dbg !6525
  br i1 %4, label %13, label %5, !dbg !6527

5:                                                ; preds = %2
  %6 = getelementptr inbounds [10 x %struct.VDMA_REGISTER_T*], [10 x %struct.VDMA_REGISTER_T*]* @vdma, i32 0, i32 %3, !dbg !6528
  %7 = load %struct.VDMA_REGISTER_T*, %struct.VDMA_REGISTER_T** %6, align 4, !dbg !6528
  %8 = getelementptr inbounds %struct.VDMA_REGISTER_T, %struct.VDMA_REGISTER_T* %7, i32 0, i32 12, !dbg !6529
  %9 = load volatile i32, i32* %8, align 4, !dbg !6529
  call void @llvm.dbg.value(metadata i32 %9, metadata !6521, metadata !DIExpression()), !dbg !6523
  %10 = getelementptr inbounds %struct.VDMA_REGISTER_T, %struct.VDMA_REGISTER_T* %7, i32 0, i32 9, !dbg !6530
  %11 = load volatile i32, i32* %10, align 4, !dbg !6530
  call void @llvm.dbg.value(metadata i32 %11, metadata !6522, metadata !DIExpression()), !dbg !6523
  %12 = sub i32 %9, %11, !dbg !6531
  store i32 %12, i32* %1, align 4, !dbg !6532
  br label %13, !dbg !6533

13:                                               ; preds = %2, %5
  %14 = phi i32 [ 0, %5 ], [ -2, %2 ], !dbg !6523
  ret i32 %14, !dbg !6534
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @vdma_register_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #7 !dbg !6535 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6539, metadata !DIExpression()), !dbg !6543
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !6540, metadata !DIExpression()), !dbg !6543
  call void @llvm.dbg.value(metadata i8* %2, metadata !6541, metadata !DIExpression()), !dbg !6543
  call void @llvm.dbg.value(metadata i32 0, metadata !6542, metadata !DIExpression()), !dbg !6543
  %4 = tail call fastcc i32 @vdma_check_valid_channel(i32 noundef %0) #23, !dbg !6544
  call void @llvm.dbg.value(metadata i32 %4, metadata !6542, metadata !DIExpression()), !dbg !6543
  %5 = icmp eq i32 %4, 255, !dbg !6545
  br i1 %5, label %12, label %6, !dbg !6547

6:                                                ; preds = %3
  %7 = getelementptr inbounds [10 x %struct.gdma_user_callback_t], [10 x %struct.gdma_user_callback_t]* @g_vdma_callback, i32 0, i32 %4, i32 0, !dbg !6548
  %8 = load void (i32, i8*)*, void (i32, i8*)** %7, align 4, !dbg !6548
  %9 = icmp eq void (i32, i8*)* %8, null, !dbg !6550
  br i1 %9, label %10, label %12, !dbg !6551

10:                                               ; preds = %6
  store void (i32, i8*)* %1, void (i32, i8*)** %7, align 4, !dbg !6552
  %11 = getelementptr inbounds [10 x %struct.gdma_user_callback_t], [10 x %struct.gdma_user_callback_t]* @g_vdma_callback, i32 0, i32 %4, i32 1, !dbg !6554
  store i8* %2, i8** %11, align 4, !dbg !6555
  br label %12, !dbg !6556

12:                                               ; preds = %6, %10, %3
  %13 = phi i32 [ -2, %3 ], [ 0, %10 ], [ 0, %6 ], !dbg !6543
  ret i32 %13, !dbg !6557
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local i32 @is_pin_with_pullsel(i32 noundef %0) local_unnamed_addr #14 !dbg !6558 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6563, metadata !DIExpression()), !dbg !6566
  call void @llvm.dbg.declare(metadata [5 x i32]* @__const.is_pin_with_pullsel.pin_number_with_pullsel, metadata !6565, metadata !DIExpression()), !dbg !6567
  call void @llvm.dbg.value(metadata i32 0, metadata !6564, metadata !DIExpression()), !dbg !6566
  br label %5, !dbg !6568

2:                                                ; preds = %5
  %3 = add nuw nsw i32 %6, 1, !dbg !6570
  call void @llvm.dbg.value(metadata i32 %3, metadata !6564, metadata !DIExpression()), !dbg !6566
  call void @llvm.dbg.value(metadata i32 %6, metadata !6564, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6566
  %4 = icmp eq i32 %3, 5, !dbg !6572
  br i1 %4, label %10, label %5, !dbg !6568, !llvm.loop !6573

5:                                                ; preds = %1, %2
  %6 = phi i32 [ 0, %1 ], [ %3, %2 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !6564, metadata !DIExpression()), !dbg !6566
  %7 = getelementptr inbounds [5 x i32], [5 x i32]* @__const.is_pin_with_pullsel.pin_number_with_pullsel, i32 0, i32 %6, !dbg !6575
  %8 = load i32, i32* %7, align 4, !dbg !6575
  %9 = icmp eq i32 %8, %0, !dbg !6578
  call void @llvm.dbg.value(metadata i32 %6, metadata !6564, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6566
  br i1 %9, label %10, label %2, !dbg !6579

10:                                               ; preds = %2, %5
  %11 = phi i32 [ 1, %5 ], [ 0, %2 ], !dbg !6566
  ret i32 %11, !dbg !6580
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @hal_gpio_init(i32 noundef %0) local_unnamed_addr #10 !dbg !6581 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6586, metadata !DIExpression()), !dbg !6587
  ret i32 0, !dbg !6588
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @hal_gpio_deinit(i32 noundef %0) local_unnamed_addr #10 !dbg !6589 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6591, metadata !DIExpression()), !dbg !6592
  ret i32 0, !dbg !6593
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_direction(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !6594 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6598, metadata !DIExpression()), !dbg !6602
  call void @llvm.dbg.value(metadata i32 %1, metadata !6599, metadata !DIExpression()), !dbg !6602
  %3 = icmp ugt i32 %0, 48, !dbg !6603
  br i1 %3, label %13, label %4, !dbg !6605

4:                                                ; preds = %2
  %5 = lshr i32 %0, 5, !dbg !6606
  call void @llvm.dbg.value(metadata i32 %5, metadata !6600, metadata !DIExpression()), !dbg !6602
  %6 = and i32 %0, 31, !dbg !6607
  call void @llvm.dbg.value(metadata i32 %6, metadata !6601, metadata !DIExpression()), !dbg !6602
  %7 = icmp eq i32 %1, 0, !dbg !6608
  %8 = shl nuw i32 1, %6, !dbg !6610
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !6610
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 0, i32 %5, i32 2, !dbg !6611
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 0, i32 %5, i32 1, !dbg !6611
  %12 = select i1 %7, i32* %10, i32* %11, !dbg !6611
  store volatile i32 %8, i32* %12, align 4, !dbg !6610
  br label %13, !dbg !6612

13:                                               ; preds = %4, %2
  %14 = phi i32 [ -2, %2 ], [ 0, %4 ], !dbg !6602
  ret i32 %14, !dbg !6612
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_gpio_get_direction(i32 noundef %0, i32* noundef writeonly %1) local_unnamed_addr #11 !dbg !6613 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6618, metadata !DIExpression()), !dbg !6623
  call void @llvm.dbg.value(metadata i32* %1, metadata !6619, metadata !DIExpression()), !dbg !6623
  %3 = icmp ugt i32 %0, 48, !dbg !6624
  br i1 %3, label %15, label %4, !dbg !6626

4:                                                ; preds = %2
  %5 = icmp eq i32* %1, null, !dbg !6627
  br i1 %5, label %15, label %6, !dbg !6629

6:                                                ; preds = %4
  %7 = lshr i32 %0, 5, !dbg !6630
  call void @llvm.dbg.value(metadata i32 %7, metadata !6620, metadata !DIExpression()), !dbg !6623
  %8 = and i32 %0, 31, !dbg !6631
  call void @llvm.dbg.value(metadata i32 %8, metadata !6621, metadata !DIExpression()), !dbg !6623
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !6632
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 0, i32 %7, i32 0, !dbg !6633
  %11 = load volatile i32, i32* %10, align 4, !dbg !6633
  call void @llvm.dbg.value(metadata i32 %11, metadata !6622, metadata !DIExpression()), !dbg !6623
  %12 = shl nuw i32 1, %8, !dbg !6634
  %13 = and i32 %11, %12, !dbg !6635
  call void @llvm.dbg.value(metadata i32 %13, metadata !6622, metadata !DIExpression()), !dbg !6623
  %14 = lshr i32 %13, %8, !dbg !6636
  store i32 %14, i32* %1, align 4, !dbg !6637
  br label %15, !dbg !6638

15:                                               ; preds = %4, %2, %6
  %16 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !6623
  ret i32 %16, !dbg !6639
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_pinmux_set_function(i32 noundef %0, i8 noundef zeroext %1) local_unnamed_addr #0 !dbg !6640 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6645, metadata !DIExpression()), !dbg !6650
  call void @llvm.dbg.value(metadata i8 %1, metadata !6646, metadata !DIExpression()), !dbg !6650
  %3 = icmp ugt i32 %0, 48, !dbg !6651
  br i1 %3, label %18, label %4, !dbg !6653

4:                                                ; preds = %2
  %5 = icmp ugt i8 %1, 15, !dbg !6654
  br i1 %5, label %18, label %6, !dbg !6656

6:                                                ; preds = %4
  %7 = zext i8 %1 to i32, !dbg !6657
  %8 = lshr i32 %0, 3, !dbg !6658
  call void @llvm.dbg.value(metadata i32 %8, metadata !6647, metadata !DIExpression()), !dbg !6650
  call void @llvm.dbg.value(metadata i32 %0, metadata !6648, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_stack_value)), !dbg !6650
  %9 = tail call i32 @save_and_set_interrupt_mask() #22, !dbg !6659
  call void @llvm.dbg.value(metadata i32 %9, metadata !6649, metadata !DIExpression()), !dbg !6650
  %10 = shl nuw nsw i32 %0, 2, !dbg !6660
  %11 = and i32 %10, 28, !dbg !6660
  %12 = shl nuw i32 15, %11, !dbg !6661
  %13 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !6662
  %14 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %13, i32 0, i32 25, i32 %8, i32 2, !dbg !6663
  store volatile i32 %12, i32* %14, align 4, !dbg !6664
  %15 = shl nuw i32 %7, %11, !dbg !6665
  %16 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !6666
  %17 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %16, i32 0, i32 25, i32 %8, i32 1, !dbg !6667
  store volatile i32 %15, i32* %17, align 4, !dbg !6668
  tail call void @restore_interrupt_mask(i32 noundef %9) #22, !dbg !6669
  br label %18, !dbg !6670

18:                                               ; preds = %4, %2, %6
  %19 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !6650
  ret i32 %19, !dbg !6671
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_gpio_get_input(i32 noundef %0, i32* noundef writeonly %1) local_unnamed_addr #11 !dbg !6672 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6677, metadata !DIExpression()), !dbg !6682
  call void @llvm.dbg.value(metadata i32* %1, metadata !6678, metadata !DIExpression()), !dbg !6682
  %3 = icmp ugt i32 %0, 48, !dbg !6683
  br i1 %3, label %15, label %4, !dbg !6685

4:                                                ; preds = %2
  %5 = icmp eq i32* %1, null, !dbg !6686
  br i1 %5, label %15, label %6, !dbg !6688

6:                                                ; preds = %4
  %7 = lshr i32 %0, 5, !dbg !6689
  call void @llvm.dbg.value(metadata i32 %7, metadata !6679, metadata !DIExpression()), !dbg !6682
  %8 = and i32 %0, 31, !dbg !6690
  call void @llvm.dbg.value(metadata i32 %8, metadata !6680, metadata !DIExpression()), !dbg !6682
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !6691
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 8, i32 %7, i32 0, !dbg !6692
  %11 = load volatile i32, i32* %10, align 4, !dbg !6692
  call void @llvm.dbg.value(metadata i32 %11, metadata !6681, metadata !DIExpression()), !dbg !6682
  %12 = shl nuw i32 1, %8, !dbg !6693
  %13 = and i32 %11, %12, !dbg !6694
  call void @llvm.dbg.value(metadata i32 %13, metadata !6681, metadata !DIExpression()), !dbg !6682
  %14 = lshr i32 %13, %8, !dbg !6695
  store i32 %14, i32* %1, align 4, !dbg !6696
  br label %15, !dbg !6697

15:                                               ; preds = %4, %2, %6
  %16 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !6682
  ret i32 %16, !dbg !6698
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_output(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !6699 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6703, metadata !DIExpression()), !dbg !6707
  call void @llvm.dbg.value(metadata i32 %1, metadata !6704, metadata !DIExpression()), !dbg !6707
  %3 = icmp ugt i32 %0, 48, !dbg !6708
  br i1 %3, label %13, label %4, !dbg !6710

4:                                                ; preds = %2
  %5 = lshr i32 %0, 5, !dbg !6711
  call void @llvm.dbg.value(metadata i32 %5, metadata !6705, metadata !DIExpression()), !dbg !6707
  %6 = and i32 %0, 31, !dbg !6712
  call void @llvm.dbg.value(metadata i32 %6, metadata !6706, metadata !DIExpression()), !dbg !6707
  %7 = icmp eq i32 %1, 0, !dbg !6713
  %8 = shl nuw i32 1, %6, !dbg !6715
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !6715
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 6, i32 %5, i32 1, !dbg !6716
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 6, i32 %5, i32 2, !dbg !6716
  %12 = select i1 %7, i32* %11, i32* %10, !dbg !6716
  store volatile i32 %8, i32* %12, align 4, !dbg !6715
  br label %13, !dbg !6717

13:                                               ; preds = %4, %2
  %14 = phi i32 [ -2, %2 ], [ 0, %4 ], !dbg !6707
  ret i32 %14, !dbg !6717
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_gpio_get_output(i32 noundef %0, i32* noundef writeonly %1) local_unnamed_addr #11 !dbg !6718 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6720, metadata !DIExpression()), !dbg !6725
  call void @llvm.dbg.value(metadata i32* %1, metadata !6721, metadata !DIExpression()), !dbg !6725
  %3 = icmp ugt i32 %0, 48, !dbg !6726
  br i1 %3, label %15, label %4, !dbg !6728

4:                                                ; preds = %2
  %5 = icmp eq i32* %1, null, !dbg !6729
  br i1 %5, label %15, label %6, !dbg !6731

6:                                                ; preds = %4
  %7 = lshr i32 %0, 5, !dbg !6732
  call void @llvm.dbg.value(metadata i32 %7, metadata !6722, metadata !DIExpression()), !dbg !6725
  %8 = and i32 %0, 31, !dbg !6733
  call void @llvm.dbg.value(metadata i32 %8, metadata !6723, metadata !DIExpression()), !dbg !6725
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !6734
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 6, i32 %7, i32 0, !dbg !6735
  %11 = load volatile i32, i32* %10, align 4, !dbg !6735
  call void @llvm.dbg.value(metadata i32 %11, metadata !6724, metadata !DIExpression()), !dbg !6725
  %12 = shl nuw i32 1, %8, !dbg !6736
  %13 = and i32 %11, %12, !dbg !6737
  call void @llvm.dbg.value(metadata i32 %13, metadata !6724, metadata !DIExpression()), !dbg !6725
  %14 = lshr i32 %13, %8, !dbg !6738
  store i32 %14, i32* %1, align 4, !dbg !6739
  br label %15, !dbg !6740

15:                                               ; preds = %4, %2, %6
  %16 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !6725
  ret i32 %16, !dbg !6741
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_toggle_pin(i32 noundef %0) local_unnamed_addr #2 !dbg !6742 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6744, metadata !DIExpression()), !dbg !6748
  %2 = icmp ugt i32 %0, 48, !dbg !6749
  br i1 %2, label %16, label %3, !dbg !6751

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !6752
  call void @llvm.dbg.value(metadata i32 %4, metadata !6745, metadata !DIExpression()), !dbg !6748
  %5 = and i32 %0, 31, !dbg !6753
  call void @llvm.dbg.value(metadata i32 %5, metadata !6746, metadata !DIExpression()), !dbg !6748
  %6 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !6754
  %7 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %6, i32 0, i32 6, i32 %4, i32 0, !dbg !6755
  %8 = load volatile i32, i32* %7, align 4, !dbg !6755
  call void @llvm.dbg.value(metadata i32 %8, metadata !6747, metadata !DIExpression()), !dbg !6748
  %9 = shl nuw i32 1, %5, !dbg !6756
  %10 = and i32 %8, %9, !dbg !6757
  call void @llvm.dbg.value(metadata i32 %10, metadata !6747, metadata !DIExpression()), !dbg !6748
  %11 = lshr i32 %10, %5, !dbg !6758
  %12 = icmp eq i32 %11, 0, !dbg !6758
  %13 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %6, i32 0, i32 6, i32 %4, i32 2, !dbg !6760
  %14 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %6, i32 0, i32 6, i32 %4, i32 1, !dbg !6760
  %15 = select i1 %12, i32* %14, i32* %13, !dbg !6760
  store volatile i32 %9, i32* %15, align 4, !dbg !6761
  br label %16, !dbg !6762

16:                                               ; preds = %3, %1
  %17 = phi i32 [ -2, %1 ], [ 0, %3 ], !dbg !6748
  ret i32 %17, !dbg !6762
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_enable_inversion(i32 noundef %0) local_unnamed_addr #2 !dbg !6763 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6765, metadata !DIExpression()), !dbg !6768
  %2 = icmp ugt i32 %0, 48, !dbg !6769
  br i1 %2, label %9, label %3, !dbg !6771

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !6772
  call void @llvm.dbg.value(metadata i32 %4, metadata !6766, metadata !DIExpression()), !dbg !6768
  %5 = and i32 %0, 31, !dbg !6773
  call void @llvm.dbg.value(metadata i32 %5, metadata !6767, metadata !DIExpression()), !dbg !6768
  %6 = shl nuw i32 1, %5, !dbg !6774
  %7 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !6775
  %8 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %7, i32 0, i32 4, i32 %4, i32 1, !dbg !6776
  store volatile i32 %6, i32* %8, align 4, !dbg !6777
  br label %9, !dbg !6778

9:                                                ; preds = %1, %3
  %10 = phi i32 [ 0, %3 ], [ -2, %1 ], !dbg !6768
  ret i32 %10, !dbg !6779
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_disable_inversion(i32 noundef %0) local_unnamed_addr #2 !dbg !6780 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6782, metadata !DIExpression()), !dbg !6785
  %2 = icmp ugt i32 %0, 48, !dbg !6786
  br i1 %2, label %9, label %3, !dbg !6788

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !6789
  call void @llvm.dbg.value(metadata i32 %4, metadata !6783, metadata !DIExpression()), !dbg !6785
  %5 = and i32 %0, 31, !dbg !6790
  call void @llvm.dbg.value(metadata i32 %5, metadata !6784, metadata !DIExpression()), !dbg !6785
  %6 = shl nuw i32 1, %5, !dbg !6791
  %7 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !6792
  %8 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %7, i32 0, i32 4, i32 %4, i32 2, !dbg !6793
  store volatile i32 %6, i32* %8, align 4, !dbg !6794
  br label %9, !dbg !6795

9:                                                ; preds = %1, %3
  %10 = phi i32 [ 0, %3 ], [ -2, %1 ], !dbg !6785
  ret i32 %10, !dbg !6796
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_pull_up(i32 noundef %0) local_unnamed_addr #2 !dbg !6797 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6799, metadata !DIExpression()), !dbg !6802
  %2 = icmp ugt i32 %0, 48, !dbg !6803
  br i1 %2, label %14, label %3, !dbg !6805

3:                                                ; preds = %1
  %4 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #23, !dbg !6806
  %5 = icmp eq i32 %4, 0, !dbg !6806
  br i1 %5, label %14, label %6, !dbg !6807

6:                                                ; preds = %3
  %7 = lshr i32 %0, 5, !dbg !6808
  call void @llvm.dbg.value(metadata i32 %7, metadata !6800, metadata !DIExpression()), !dbg !6802
  %8 = and i32 %0, 31, !dbg !6809
  call void @llvm.dbg.value(metadata i32 %8, metadata !6801, metadata !DIExpression()), !dbg !6802
  %9 = shl nuw i32 1, %8, !dbg !6810
  %10 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !6811
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %10, i32 0, i32 2, i32 %7, i32 1, !dbg !6812
  store volatile i32 %9, i32* %11, align 4, !dbg !6813
  %12 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !6814
  %13 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %12, i32 0, i32 10, i32 %7, i32 1, !dbg !6815
  store volatile i32 %9, i32* %13, align 4, !dbg !6816
  br label %14, !dbg !6817

14:                                               ; preds = %1, %3, %6
  %15 = phi i32 [ 0, %6 ], [ -2, %3 ], [ -2, %1 ], !dbg !6802
  ret i32 %15, !dbg !6818
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_pull_down(i32 noundef %0) local_unnamed_addr #2 !dbg !6819 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6821, metadata !DIExpression()), !dbg !6824
  %2 = icmp ugt i32 %0, 48, !dbg !6825
  br i1 %2, label %14, label %3, !dbg !6827

3:                                                ; preds = %1
  %4 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #23, !dbg !6828
  %5 = icmp eq i32 %4, 0, !dbg !6828
  br i1 %5, label %14, label %6, !dbg !6829

6:                                                ; preds = %3
  %7 = lshr i32 %0, 5, !dbg !6830
  call void @llvm.dbg.value(metadata i32 %7, metadata !6822, metadata !DIExpression()), !dbg !6824
  %8 = and i32 %0, 31, !dbg !6831
  call void @llvm.dbg.value(metadata i32 %8, metadata !6823, metadata !DIExpression()), !dbg !6824
  %9 = shl nuw i32 1, %8, !dbg !6832
  %10 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !6833
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %10, i32 0, i32 2, i32 %7, i32 1, !dbg !6834
  store volatile i32 %9, i32* %11, align 4, !dbg !6835
  %12 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !6836
  %13 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %12, i32 0, i32 10, i32 %7, i32 2, !dbg !6837
  store volatile i32 %9, i32* %13, align 4, !dbg !6838
  br label %14, !dbg !6839

14:                                               ; preds = %1, %3, %6
  %15 = phi i32 [ 0, %6 ], [ -2, %3 ], [ -2, %1 ], !dbg !6824
  ret i32 %15, !dbg !6840
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_disable_pull(i32 noundef %0) local_unnamed_addr #2 !dbg !6841 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6843, metadata !DIExpression()), !dbg !6846
  %2 = icmp ugt i32 %0, 48, !dbg !6847
  br i1 %2, label %12, label %3, !dbg !6849

3:                                                ; preds = %1
  %4 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #23, !dbg !6850
  %5 = icmp eq i32 %4, 0, !dbg !6850
  br i1 %5, label %12, label %6, !dbg !6851

6:                                                ; preds = %3
  %7 = lshr i32 %0, 5, !dbg !6852
  call void @llvm.dbg.value(metadata i32 %7, metadata !6844, metadata !DIExpression()), !dbg !6846
  %8 = and i32 %0, 31, !dbg !6853
  call void @llvm.dbg.value(metadata i32 %8, metadata !6845, metadata !DIExpression()), !dbg !6846
  %9 = shl nuw i32 1, %8, !dbg !6854
  %10 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !6855
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %10, i32 0, i32 2, i32 %7, i32 2, !dbg !6856
  store volatile i32 %9, i32* %11, align 4, !dbg !6857
  br label %12, !dbg !6858

12:                                               ; preds = %1, %3, %6
  %13 = phi i32 [ 0, %6 ], [ -2, %3 ], [ -2, %1 ], !dbg !6846
  ret i32 %13, !dbg !6859
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_clockout(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !6860 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6866, metadata !DIExpression()), !dbg !6868
  call void @llvm.dbg.value(metadata i32 %1, metadata !6867, metadata !DIExpression()), !dbg !6868
  %3 = icmp ugt i32 %0, 5, !dbg !6869
  br i1 %3, label %7, label %4, !dbg !6871

4:                                                ; preds = %2
  %5 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !6872
  %6 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %5, i32 0, i32 29, i32 %0, i32 0, !dbg !6873
  store volatile i32 %1, i32* %6, align 4, !dbg !6874
  br label %7, !dbg !6875

7:                                                ; preds = %2, %4
  %8 = phi i32 [ 0, %4 ], [ -1, %2 ], !dbg !6868
  ret i32 %8, !dbg !6876
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_pupd_register(i32 noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) local_unnamed_addr #2 !dbg !6877 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6881, metadata !DIExpression()), !dbg !6887
  call void @llvm.dbg.value(metadata i8 %1, metadata !6882, metadata !DIExpression()), !dbg !6887
  call void @llvm.dbg.value(metadata i8 %2, metadata !6883, metadata !DIExpression()), !dbg !6887
  call void @llvm.dbg.value(metadata i8 %3, metadata !6884, metadata !DIExpression()), !dbg !6887
  %5 = icmp ugt i32 %0, 48, !dbg !6888
  br i1 %5, label %30, label %6, !dbg !6890

6:                                                ; preds = %4
  %7 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #23, !dbg !6891
  %8 = icmp eq i32 %7, 0, !dbg !6891
  br i1 %8, label %9, label %30, !dbg !6892

9:                                                ; preds = %6
  %10 = lshr i32 %0, 5, !dbg !6893
  call void @llvm.dbg.value(metadata i32 %10, metadata !6885, metadata !DIExpression()), !dbg !6887
  %11 = and i32 %0, 31, !dbg !6894
  call void @llvm.dbg.value(metadata i32 %11, metadata !6886, metadata !DIExpression()), !dbg !6887
  %12 = icmp eq i8 %1, 0, !dbg !6895
  %13 = shl nuw i32 1, %11, !dbg !6897
  %14 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !6897
  %15 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %14, i32 0, i32 20, i32 %10, i32 2, !dbg !6898
  %16 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %14, i32 0, i32 20, i32 %10, i32 1, !dbg !6898
  %17 = select i1 %12, i32* %15, i32* %16, !dbg !6898
  store volatile i32 %13, i32* %17, align 4, !dbg !6897
  %18 = icmp eq i8 %2, 0, !dbg !6899
  %19 = shl nuw i32 1, %11, !dbg !6901
  %20 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !6901
  %21 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %20, i32 0, i32 22, i32 %10, i32 2, !dbg !6902
  %22 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %20, i32 0, i32 22, i32 %10, i32 1, !dbg !6902
  %23 = select i1 %18, i32* %21, i32* %22, !dbg !6902
  store volatile i32 %19, i32* %23, align 4, !dbg !6901
  %24 = icmp eq i8 %3, 0, !dbg !6903
  %25 = shl nuw i32 1, %11, !dbg !6905
  %26 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !6905
  %27 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %26, i32 0, i32 23, i32 %10, i32 1, !dbg !6906
  %28 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %26, i32 0, i32 23, i32 %10, i32 2, !dbg !6906
  %29 = select i1 %24, i32* %28, i32* %27, !dbg !6906
  store volatile i32 %25, i32* %29, align 4, !dbg !6905
  br label %30, !dbg !6907

30:                                               ; preds = %9, %4, %6
  %31 = phi i32 [ -2, %6 ], [ -2, %4 ], [ 0, %9 ], !dbg !6887
  ret i32 %31, !dbg !6907
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_high_impedance(i32 noundef %0) local_unnamed_addr #2 !dbg !6908 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6910, metadata !DIExpression()), !dbg !6917
  %2 = icmp ugt i32 %0, 48, !dbg !6918
  br i1 %2, label %40, label %3, !dbg !6920

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !6921
  call void @llvm.dbg.value(metadata i32 %4, metadata !6911, metadata !DIExpression()), !dbg !6917
  %5 = and i32 %0, 31, !dbg !6922
  call void @llvm.dbg.value(metadata i32 %5, metadata !6914, metadata !DIExpression()), !dbg !6917
  %6 = lshr i32 %0, 4, !dbg !6923
  call void @llvm.dbg.value(metadata i32 %6, metadata !6912, metadata !DIExpression()), !dbg !6917
  call void @llvm.dbg.value(metadata i32 %0, metadata !6915, metadata !DIExpression(DW_OP_constu, 15, DW_OP_and, DW_OP_stack_value)), !dbg !6917
  %7 = lshr i32 %0, 3, !dbg !6924
  call void @llvm.dbg.value(metadata i32 %7, metadata !6913, metadata !DIExpression()), !dbg !6917
  call void @llvm.dbg.value(metadata i32 %0, metadata !6916, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_stack_value)), !dbg !6917
  %8 = shl nuw nsw i32 %0, 2, !dbg !6925
  %9 = and i32 %8, 28, !dbg !6925
  %10 = shl nuw i32 15, %9, !dbg !6926
  %11 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !6927
  %12 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %11, i32 0, i32 25, i32 %7, i32 2, !dbg !6928
  store volatile i32 %10, i32* %12, align 4, !dbg !6929
  %13 = shl nuw i32 1, %5, !dbg !6930
  %14 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !6931
  %15 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %14, i32 0, i32 0, i32 %4, i32 2, !dbg !6932
  store volatile i32 %13, i32* %15, align 4, !dbg !6933
  %16 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !6934
  %17 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %16, i32 0, i32 18, i32 %4, i32 2, !dbg !6935
  store volatile i32 %13, i32* %17, align 4, !dbg !6936
  %18 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #23, !dbg !6937
  %19 = icmp eq i32 %18, 0, !dbg !6937
  %20 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !6939
  br i1 %19, label %23, label %21, !dbg !6940

21:                                               ; preds = %3
  %22 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %20, i32 0, i32 2, i32 %4, i32 2, !dbg !6941
  br label %29, !dbg !6943

23:                                               ; preds = %3
  %24 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %20, i32 0, i32 20, i32 %4, i32 2, !dbg !6944
  store volatile i32 %13, i32* %24, align 4, !dbg !6946
  %25 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !6947
  %26 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %25, i32 0, i32 22, i32 %4, i32 2, !dbg !6948
  store volatile i32 %13, i32* %26, align 4, !dbg !6949
  %27 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !6950
  %28 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %27, i32 0, i32 23, i32 %4, i32 2, !dbg !6951
  br label %29

29:                                               ; preds = %23, %21
  %30 = phi i32* [ %28, %23 ], [ %22, %21 ]
  store volatile i32 %13, i32* %30, align 4, !dbg !6939
  %31 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !6952
  %32 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %31, i32 0, i32 12, i32 %4, i32 2, !dbg !6953
  store volatile i32 %13, i32* %32, align 4, !dbg !6954
  %33 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !6955
  %34 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %33, i32 0, i32 14, i32 %4, i32 2, !dbg !6956
  store volatile i32 %13, i32* %34, align 4, !dbg !6957
  %35 = shl nuw nsw i32 %0, 1, !dbg !6958
  %36 = and i32 %35, 30, !dbg !6958
  %37 = shl nuw i32 3, %36, !dbg !6959
  %38 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !6960
  %39 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %38, i32 0, i32 27, i32 %6, i32 2, !dbg !6961
  store volatile i32 %37, i32* %39, align 4, !dbg !6962
  br label %40, !dbg !6963

40:                                               ; preds = %1, %29
  %41 = phi i32 [ 0, %29 ], [ -2, %1 ], !dbg !6917
  ret i32 %41, !dbg !6964
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_clear_high_impedance(i32 noundef %0) local_unnamed_addr #2 !dbg !6965 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6967, metadata !DIExpression()), !dbg !6972
  %2 = icmp ugt i32 %0, 48, !dbg !6973
  br i1 %2, label %34, label %3, !dbg !6975

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !6976
  call void @llvm.dbg.value(metadata i32 %4, metadata !6968, metadata !DIExpression()), !dbg !6972
  %5 = and i32 %0, 31, !dbg !6977
  call void @llvm.dbg.value(metadata i32 %5, metadata !6970, metadata !DIExpression()), !dbg !6972
  %6 = lshr i32 %0, 3, !dbg !6978
  call void @llvm.dbg.value(metadata i32 %6, metadata !6969, metadata !DIExpression()), !dbg !6972
  call void @llvm.dbg.value(metadata i32 %0, metadata !6971, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_stack_value)), !dbg !6972
  %7 = shl nuw nsw i32 %0, 2, !dbg !6979
  %8 = and i32 %7, 28, !dbg !6979
  %9 = shl nuw i32 15, %8, !dbg !6980
  %10 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !6981
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %10, i32 0, i32 25, i32 %6, i32 2, !dbg !6982
  store volatile i32 %9, i32* %11, align 4, !dbg !6983
  %12 = shl nuw i32 1, %5, !dbg !6984
  %13 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !6985
  %14 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %13, i32 0, i32 0, i32 %4, i32 2, !dbg !6986
  store volatile i32 %12, i32* %14, align 4, !dbg !6987
  %15 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #23, !dbg !6988
  %16 = icmp eq i32 %15, 0, !dbg !6988
  %17 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !6990
  br i1 %16, label %22, label %18, !dbg !6991

18:                                               ; preds = %3
  %19 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %17, i32 0, i32 2, i32 %4, i32 1, !dbg !6992
  store volatile i32 %12, i32* %19, align 4, !dbg !6994
  %20 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !6995
  %21 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %20, i32 0, i32 10, i32 %4, i32 2, !dbg !6996
  br label %28, !dbg !6997

22:                                               ; preds = %3
  %23 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %17, i32 0, i32 20, i32 %4, i32 1, !dbg !6998
  store volatile i32 %12, i32* %23, align 4, !dbg !7000
  %24 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !7001
  %25 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %24, i32 0, i32 22, i32 %4, i32 1, !dbg !7002
  store volatile i32 %12, i32* %25, align 4, !dbg !7003
  %26 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !7004
  %27 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %26, i32 0, i32 23, i32 %4, i32 1, !dbg !7005
  br label %28

28:                                               ; preds = %22, %18
  %29 = phi i32* [ %27, %22 ], [ %21, %18 ]
  store volatile i32 %12, i32* %29, align 4, !dbg !6990
  %30 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !7006
  %31 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %30, i32 0, i32 18, i32 %4, i32 1, !dbg !7007
  store volatile i32 %12, i32* %31, align 4, !dbg !7008
  %32 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !7009
  %33 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %32, i32 0, i32 14, i32 %4, i32 1, !dbg !7010
  store volatile i32 %12, i32* %33, align 4, !dbg !7011
  br label %34, !dbg !7012

34:                                               ; preds = %1, %28
  %35 = phi i32 [ 0, %28 ], [ -2, %1 ], !dbg !6972
  ret i32 %35, !dbg !7013
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_driving_current(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !7014 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7018, metadata !DIExpression()), !dbg !7022
  call void @llvm.dbg.value(metadata i32 %1, metadata !7019, metadata !DIExpression()), !dbg !7022
  %3 = icmp ugt i32 %0, 48, !dbg !7023
  br i1 %3, label %14, label %4, !dbg !7025

4:                                                ; preds = %2
  %5 = lshr i32 %0, 4, !dbg !7026
  call void @llvm.dbg.value(metadata i32 %5, metadata !7020, metadata !DIExpression()), !dbg !7022
  call void @llvm.dbg.value(metadata i32 %0, metadata !7021, metadata !DIExpression(DW_OP_constu, 15, DW_OP_and, DW_OP_stack_value)), !dbg !7022
  %6 = shl nuw nsw i32 %0, 1, !dbg !7027
  %7 = and i32 %6, 30, !dbg !7027
  %8 = shl nuw i32 3, %7, !dbg !7028
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !7029
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 16, i32 %5, i32 2, !dbg !7030
  store volatile i32 %8, i32* %10, align 4, !dbg !7031
  %11 = shl i32 %1, %7, !dbg !7032
  %12 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !7033
  %13 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %12, i32 0, i32 16, i32 %5, i32 1, !dbg !7034
  store volatile i32 %11, i32* %13, align 4, !dbg !7035
  br label %14, !dbg !7036

14:                                               ; preds = %2, %4
  %15 = phi i32 [ 0, %4 ], [ -2, %2 ], !dbg !7022
  ret i32 %15, !dbg !7037
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_gpio_get_driving_current(i32 noundef %0, i32* noundef writeonly %1) local_unnamed_addr #11 !dbg !7038 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7043, metadata !DIExpression()), !dbg !7048
  call void @llvm.dbg.value(metadata i32* %1, metadata !7044, metadata !DIExpression()), !dbg !7048
  %3 = icmp ugt i32 %0, 48, !dbg !7049
  br i1 %3, label %18, label %4, !dbg !7051

4:                                                ; preds = %2
  %5 = icmp eq i32* %1, null, !dbg !7052
  br i1 %5, label %18, label %6, !dbg !7054

6:                                                ; preds = %4
  %7 = lshr i32 %0, 4, !dbg !7055
  call void @llvm.dbg.value(metadata i32 %7, metadata !7045, metadata !DIExpression()), !dbg !7048
  call void @llvm.dbg.value(metadata i32 %0, metadata !7046, metadata !DIExpression(DW_OP_constu, 15, DW_OP_and, DW_OP_stack_value)), !dbg !7048
  %8 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !7056
  %9 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %8, i32 0, i32 16, i32 %7, i32 0, !dbg !7057
  %10 = load volatile i32, i32* %9, align 4, !dbg !7057
  call void @llvm.dbg.value(metadata i32 %10, metadata !7047, metadata !DIExpression()), !dbg !7048
  %11 = shl nuw nsw i32 %0, 1, !dbg !7058
  %12 = and i32 %11, 30, !dbg !7058
  %13 = shl nuw i32 3, %12, !dbg !7059
  %14 = and i32 %10, %13, !dbg !7060
  call void @llvm.dbg.value(metadata i32 %14, metadata !7047, metadata !DIExpression()), !dbg !7048
  %15 = lshr i32 %14, %12, !dbg !7061
  call void @llvm.dbg.value(metadata i32 %15, metadata !7047, metadata !DIExpression()), !dbg !7048
  %16 = shl i32 %15, 2, !dbg !7062
  %17 = add i32 %16, 4, !dbg !7062
  store i32 %17, i32* %1, align 4, !dbg !7063
  br label %18, !dbg !7064

18:                                               ; preds = %4, %2, %6
  %19 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !7048
  ret i32 %19, !dbg !7065
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_receive_handler(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #0 !dbg !7066 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !7070, metadata !DIExpression()), !dbg !7133
  call void @llvm.dbg.value(metadata i1 %1, metadata !7071, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7133
  %4 = bitcast i32* %3 to i8*, !dbg !7134
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #24, !dbg !7134
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !7135
  %6 = load volatile i32, i32* %5, align 4, !dbg !7135
  %7 = icmp eq i32 %6, 2, !dbg !7137
  br i1 %7, label %9, label %8, !dbg !7138

8:                                                ; preds = %2
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.45, i32 0, i32 0), i32 noundef 156, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.uart_receive_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.46, i32 0, i32 0)) #25, !dbg !7139
  unreachable, !dbg !7139

9:                                                ; preds = %2
  %10 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !7141
  %11 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %10, align 4, !dbg !7141
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %11, metadata !7076, metadata !DIExpression()), !dbg !7133
  %12 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #22, !dbg !7142
  call void @llvm.dbg.value(metadata i32 %12, metadata !7072, metadata !DIExpression()), !dbg !7133
  br i1 %1, label %13, label %14, !dbg !7143

13:                                               ; preds = %9
  tail call void @uart_clear_timeout_interrupt(%struct.UART_REGISTER_T* noundef %11) #22, !dbg !7144
  br label %14, !dbg !7147

14:                                               ; preds = %13, %9
  call void @llvm.dbg.value(metadata i32* %3, metadata !7073, metadata !DIExpression(DW_OP_deref)), !dbg !7133
  %15 = call i32 @vdma_get_available_receive_bytes(i32 noundef %12, i32* noundef nonnull %3) #22, !dbg !7148
  call void @llvm.dbg.value(metadata i32 %15, metadata !7132, metadata !DIExpression()), !dbg !7133
  %16 = icmp eq i32 %15, 0, !dbg !7149
  br i1 %16, label %18, label %17, !dbg !7151

17:                                               ; preds = %14
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.45, i32 0, i32 0), i32 noundef 169, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.uart_receive_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.46, i32 0, i32 0)) #25, !dbg !7152
  unreachable, !dbg !7152

18:                                               ; preds = %14
  %19 = load i32, i32* %3, align 4, !dbg !7154
  call void @llvm.dbg.value(metadata i32 %19, metadata !7073, metadata !DIExpression()), !dbg !7133
  %20 = icmp eq i32 %19, 0, !dbg !7156
  br i1 %20, label %43, label %21, !dbg !7157

21:                                               ; preds = %18
  %22 = getelementptr inbounds [4 x %struct.gdma_user_callback_t], [4 x %struct.gdma_user_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 0, !dbg !7158
  %23 = load void (i32, i8*)*, void (i32, i8*)** %22, align 4, !dbg !7158
  call void @llvm.dbg.value(metadata void (i32, i8*)* %23, metadata !7074, metadata !DIExpression()), !dbg !7133
  call void @llvm.dbg.value(metadata i8* undef, metadata !7075, metadata !DIExpression()), !dbg !7133
  %24 = icmp eq void (i32, i8*)* %23, null, !dbg !7159
  br i1 %24, label %25, label %26, !dbg !7161

25:                                               ; preds = %21
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.45, i32 0, i32 0), i32 noundef 179, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.uart_receive_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.46, i32 0, i32 0)) #25, !dbg !7162
  unreachable, !dbg !7162

26:                                               ; preds = %21
  %27 = getelementptr inbounds [4 x %struct.gdma_user_callback_t], [4 x %struct.gdma_user_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 1, !dbg !7164
  %28 = load i8*, i8** %27, align 4, !dbg !7164
  call void @llvm.dbg.value(metadata i8* %28, metadata !7075, metadata !DIExpression()), !dbg !7133
  %29 = call i32 @vdma_disable_interrupt(i32 noundef %12) #22, !dbg !7165
  call void %23(i32 noundef 1, i8* noundef %28) #22, !dbg !7166
  %30 = call i32 @vdma_enable_interrupt(i32 noundef %12) #22, !dbg !7167
  call void @llvm.dbg.value(metadata i32* %3, metadata !7073, metadata !DIExpression(DW_OP_deref)), !dbg !7133
  %31 = call i32 @vdma_get_available_receive_bytes(i32 noundef %12, i32* noundef nonnull %3) #22, !dbg !7168
  call void @llvm.dbg.value(metadata i32 %31, metadata !7132, metadata !DIExpression()), !dbg !7133
  %32 = icmp eq i32 %31, 0, !dbg !7169
  br i1 %32, label %34, label %33, !dbg !7171

33:                                               ; preds = %26
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.45, i32 0, i32 0), i32 noundef 189, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.uart_receive_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.46, i32 0, i32 0)) #25, !dbg !7172
  unreachable, !dbg !7172

34:                                               ; preds = %26
  %35 = load i32, i32* %3, align 4, !dbg !7174
  call void @llvm.dbg.value(metadata i32 %35, metadata !7073, metadata !DIExpression()), !dbg !7133
  %36 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 5, !dbg !7176
  %37 = load i32, i32* %36, align 4, !dbg !7176
  %38 = icmp ult i32 %35, %37, !dbg !7177
  br i1 %38, label %43, label %39, !dbg !7178

39:                                               ; preds = %34
  %40 = call i32 @vdma_disable_interrupt(i32 noundef %12) #22, !dbg !7179
  call void @llvm.dbg.value(metadata i32 %40, metadata !7132, metadata !DIExpression()), !dbg !7133
  %41 = icmp eq i32 %40, 0, !dbg !7181
  br i1 %41, label %43, label %42, !dbg !7183

42:                                               ; preds = %39
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.45, i32 0, i32 0), i32 noundef 195, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.uart_receive_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.46, i32 0, i32 0)) #25, !dbg !7184
  unreachable, !dbg !7184

43:                                               ; preds = %34, %39, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #24, !dbg !7186
  ret void, !dbg !7186
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_send_handler(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #0 !dbg !7187 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !7189, metadata !DIExpression()), !dbg !7198
  call void @llvm.dbg.value(metadata i1 %1, metadata !7190, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7198
  %4 = bitcast i32* %3 to i8*, !dbg !7199
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #24, !dbg !7199
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !7200
  %6 = load volatile i32, i32* %5, align 4, !dbg !7200
  %7 = icmp eq i32 %6, 2, !dbg !7202
  br i1 %7, label %9, label %8, !dbg !7203

8:                                                ; preds = %2
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.45, i32 0, i32 0), i32 noundef 222, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.uart_send_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.46, i32 0, i32 0)) #25, !dbg !7204
  unreachable, !dbg !7204

9:                                                ; preds = %2
  %10 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #22, !dbg !7206
  call void @llvm.dbg.value(metadata i32 %10, metadata !7191, metadata !DIExpression()), !dbg !7198
  br i1 %1, label %11, label %39, !dbg !7207

11:                                               ; preds = %9
  %12 = getelementptr inbounds [4 x i8], [4 x i8]* @g_uart_frist_send_complete_interrupt, i32 0, i32 %0, !dbg !7208
  %13 = load i8, i8* %12, align 1, !dbg !7208, !range !4202
  %14 = icmp eq i8 %13, 0, !dbg !7212
  br i1 %14, label %15, label %38, !dbg !7213

15:                                               ; preds = %11
  %16 = tail call i32 @save_and_set_interrupt_mask() #22, !dbg !7214
  call void @llvm.dbg.value(metadata i32 %16, metadata !7197, metadata !DIExpression()), !dbg !7198
  call void @llvm.dbg.value(metadata i32* %3, metadata !7194, metadata !DIExpression(DW_OP_deref)), !dbg !7198
  %17 = call i32 @vdma_get_available_send_space(i32 noundef %10, i32* noundef nonnull %3) #22, !dbg !7216
  call void @llvm.dbg.value(metadata i32 %17, metadata !7192, metadata !DIExpression()), !dbg !7198
  %18 = icmp eq i32 %17, 0, !dbg !7217
  br i1 %18, label %20, label %19, !dbg !7219

19:                                               ; preds = %15
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.45, i32 0, i32 0), i32 noundef 234, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.uart_send_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.46, i32 0, i32 0)) #25, !dbg !7220
  unreachable, !dbg !7220

20:                                               ; preds = %15
  %21 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 1, !dbg !7222
  %22 = load i32, i32* %21, align 4, !dbg !7222
  %23 = load i32, i32* %3, align 4, !dbg !7224
  call void @llvm.dbg.value(metadata i32 %23, metadata !7194, metadata !DIExpression()), !dbg !7198
  %24 = icmp eq i32 %22, %23, !dbg !7225
  br i1 %24, label %25, label %37, !dbg !7226

25:                                               ; preds = %20
  %26 = getelementptr inbounds [4 x i8], [4 x i8]* @g_uart_send_lock_status, i32 0, i32 %0, !dbg !7227
  %27 = load i8, i8* %26, align 1, !dbg !7227, !range !4202
  %28 = icmp eq i8 %27, 0, !dbg !7227
  br i1 %28, label %37, label %29, !dbg !7230

29:                                               ; preds = %25
  %30 = getelementptr inbounds [4 x i8], [4 x i8]* @g_uart_sleep_handler, i32 0, i32 %0, !dbg !7231
  %31 = load i8, i8* %30, align 1, !dbg !7231
  %32 = call zeroext i1 @hal_sleep_manager_is_sleep_handle_alive(i8 noundef zeroext %31) #22, !dbg !7234
  br i1 %32, label %33, label %36, !dbg !7235

33:                                               ; preds = %29
  %34 = load i8, i8* %30, align 1, !dbg !7236
  %35 = call i32 @hal_sleep_manager_unlock_sleep(i8 noundef zeroext %34) #22, !dbg !7238
  br label %36, !dbg !7239

36:                                               ; preds = %33, %29
  store i8 0, i8* %26, align 1, !dbg !7240
  br label %37, !dbg !7241

37:                                               ; preds = %25, %36, %20
  call void @restore_interrupt_mask(i32 noundef %16) #22, !dbg !7242
  br label %64, !dbg !7243

38:                                               ; preds = %11
  store i8 0, i8* %12, align 1, !dbg !7244
  br label %64

39:                                               ; preds = %9
  %40 = getelementptr inbounds [4 x %struct.gdma_user_callback_t], [4 x %struct.gdma_user_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 0, !dbg !7246
  %41 = load void (i32, i8*)*, void (i32, i8*)** %40, align 4, !dbg !7246
  call void @llvm.dbg.value(metadata void (i32, i8*)* %41, metadata !7195, metadata !DIExpression()), !dbg !7198
  call void @llvm.dbg.value(metadata i8* undef, metadata !7196, metadata !DIExpression()), !dbg !7198
  %42 = icmp eq void (i32, i8*)* %41, null, !dbg !7248
  br i1 %42, label %43, label %44, !dbg !7250

43:                                               ; preds = %39
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.45, i32 0, i32 0), i32 noundef 256, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.uart_send_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.46, i32 0, i32 0)) #25, !dbg !7251
  unreachable, !dbg !7251

44:                                               ; preds = %39
  %45 = getelementptr inbounds [4 x %struct.gdma_user_callback_t], [4 x %struct.gdma_user_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 1, !dbg !7253
  %46 = load i8*, i8** %45, align 4, !dbg !7253
  call void @llvm.dbg.value(metadata i8* %46, metadata !7196, metadata !DIExpression()), !dbg !7198
  %47 = tail call i32 @vdma_disable_interrupt(i32 noundef %10) #22, !dbg !7254
  tail call void %41(i32 noundef 2, i8* noundef %46) #22, !dbg !7255
  %48 = tail call i32 @vdma_enable_interrupt(i32 noundef %10) #22, !dbg !7256
  call void @llvm.dbg.value(metadata i32* %3, metadata !7194, metadata !DIExpression(DW_OP_deref)), !dbg !7198
  %49 = call i32 @vdma_get_available_send_space(i32 noundef %10, i32* noundef nonnull %3) #22, !dbg !7257
  call void @llvm.dbg.value(metadata i32 %49, metadata !7192, metadata !DIExpression()), !dbg !7198
  %50 = icmp eq i32 %49, 0, !dbg !7258
  br i1 %50, label %52, label %51, !dbg !7260

51:                                               ; preds = %44
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.45, i32 0, i32 0), i32 noundef 266, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.uart_send_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.46, i32 0, i32 0)) #25, !dbg !7261
  unreachable, !dbg !7261

52:                                               ; preds = %44
  %53 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 1, !dbg !7263
  %54 = load i32, i32* %53, align 4, !dbg !7263
  %55 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 2, !dbg !7264
  %56 = load i32, i32* %55, align 4, !dbg !7264
  %57 = sub i32 %54, %56, !dbg !7265
  call void @llvm.dbg.value(metadata i32 %57, metadata !7193, metadata !DIExpression()), !dbg !7198
  %58 = load i32, i32* %3, align 4, !dbg !7266
  call void @llvm.dbg.value(metadata i32 %58, metadata !7194, metadata !DIExpression()), !dbg !7198
  %59 = icmp ult i32 %58, %57, !dbg !7268
  br i1 %59, label %64, label %60, !dbg !7269

60:                                               ; preds = %52
  %61 = call i32 @vdma_disable_interrupt(i32 noundef %10) #22, !dbg !7270
  call void @llvm.dbg.value(metadata i32 %61, metadata !7192, metadata !DIExpression()), !dbg !7198
  %62 = icmp eq i32 %61, 0, !dbg !7272
  br i1 %62, label %64, label %63, !dbg !7274

63:                                               ; preds = %60
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.45, i32 0, i32 0), i32 noundef 274, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.uart_send_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.46, i32 0, i32 0)) #25, !dbg !7275
  unreachable, !dbg !7275

64:                                               ; preds = %60, %52, %37, %38
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #24, !dbg !7277
  ret void, !dbg !7277
}

; Function Attrs: optsize
declare dso_local zeroext i1 @hal_sleep_manager_is_sleep_handle_alive(i8 noundef zeroext) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_error_handler(i32 noundef %0) local_unnamed_addr #0 !dbg !7278 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7282, metadata !DIExpression()), !dbg !7286
  %2 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !7287
  %3 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %2, align 4, !dbg !7287
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %3, metadata !7283, metadata !DIExpression()), !dbg !7286
  %4 = tail call i32 @uart_verify_error(%struct.UART_REGISTER_T* noundef %3) #22, !dbg !7288
  %5 = icmp eq i32 %4, 0, !dbg !7288
  br i1 %5, label %6, label %14, !dbg !7290

6:                                                ; preds = %1
  tail call void @uart_purge_fifo(%struct.UART_REGISTER_T* noundef %3, i32 noundef 1) #22, !dbg !7291
  tail call void @uart_purge_fifo(%struct.UART_REGISTER_T* noundef %3, i32 noundef 0) #22, !dbg !7293
  %7 = getelementptr inbounds [4 x %struct.gdma_user_callback_t], [4 x %struct.gdma_user_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 0, !dbg !7294
  %8 = load void (i32, i8*)*, void (i32, i8*)** %7, align 4, !dbg !7294
  call void @llvm.dbg.value(metadata void (i32, i8*)* %8, metadata !7284, metadata !DIExpression()), !dbg !7286
  call void @llvm.dbg.value(metadata i8* undef, metadata !7285, metadata !DIExpression()), !dbg !7286
  %9 = icmp eq void (i32, i8*)* %8, null, !dbg !7295
  br i1 %9, label %10, label %11, !dbg !7297

10:                                               ; preds = %6
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.45, i32 0, i32 0), i32 noundef 296, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.uart_error_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.46, i32 0, i32 0)) #25, !dbg !7298
  unreachable, !dbg !7298

11:                                               ; preds = %6
  %12 = getelementptr inbounds [4 x %struct.gdma_user_callback_t], [4 x %struct.gdma_user_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 1, !dbg !7300
  %13 = load i8*, i8** %12, align 4, !dbg !7300
  call void @llvm.dbg.value(metadata i8* %13, metadata !7285, metadata !DIExpression()), !dbg !7286
  tail call void %8(i32 noundef -1, i8* noundef %13) #22, !dbg !7301
  br label %14, !dbg !7302

14:                                               ; preds = %11, %1
  ret void, !dbg !7303
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_backup_all_registers() local_unnamed_addr #0 !dbg !7304 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7306, metadata !DIExpression()), !dbg !7311
  br label %1, !dbg !7312

1:                                                ; preds = %0, %21
  %2 = phi i32 [ 0, %0 ], [ %22, %21 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !7306, metadata !DIExpression()), !dbg !7311
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %2, !dbg !7314
  %4 = load volatile i32, i32* %3, align 4, !dbg !7314
  %5 = icmp eq i32 %4, 0, !dbg !7318
  br i1 %5, label %21, label %6, !dbg !7319

6:                                                ; preds = %1
  %7 = load volatile i32, i32* %3, align 4, !dbg !7320
  call void @llvm.dbg.value(metadata i32 %7, metadata !7307, metadata !DIExpression()), !dbg !7311
  %8 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_flowcontrol_status, i32 0, i32 %2, !dbg !7322
  %9 = load i32, i32* %8, align 4, !dbg !7322
  call void @llvm.dbg.value(metadata i32 %9, metadata !7308, metadata !DIExpression()), !dbg !7311
  %10 = getelementptr inbounds [4 x %struct.gdma_user_callback_t], [4 x %struct.gdma_user_callback_t]* @g_uart_callback, i32 0, i32 %2, i32 0, !dbg !7323
  %11 = load void (i32, i8*)*, void (i32, i8*)** %10, align 4, !dbg !7323
  call void @llvm.dbg.value(metadata void (i32, i8*)* %11, metadata !7309, metadata !DIExpression()), !dbg !7311
  %12 = getelementptr inbounds [4 x %struct.gdma_user_callback_t], [4 x %struct.gdma_user_callback_t]* @g_uart_callback, i32 0, i32 %2, i32 1, !dbg !7324
  %13 = load i8*, i8** %12, align 4, !dbg !7324
  call void @llvm.dbg.value(metadata i8* %13, metadata !7310, metadata !DIExpression()), !dbg !7311
  %14 = tail call i32 @hal_uart_deinit(i32 noundef %2) #23, !dbg !7325
  store volatile i32 %7, i32* %3, align 4, !dbg !7326
  store i32 %9, i32* %8, align 4, !dbg !7327
  store void (i32, i8*)* %11, void (i32, i8*)** %10, align 4, !dbg !7328
  store i8* %13, i8** %12, align 4, !dbg !7329
  %15 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_irq_num to [0 x i32]*), i32 0, i32 %2, !dbg !7330
  %16 = load i32, i32* %15, align 4, !dbg !7330
  %17 = tail call i32 @hal_nvic_get_pending_irq(i32 noundef %16) #22, !dbg !7331
  %18 = icmp ne i32 %17, 0, !dbg !7331
  %19 = getelementptr inbounds [4 x i8], [4 x i8]* @g_uart_irq_pending_status, i32 0, i32 %2, !dbg !7332
  %20 = zext i1 %18 to i8, !dbg !7333
  store i8 %20, i8* %19, align 1, !dbg !7333
  br label %21, !dbg !7334

21:                                               ; preds = %1, %6
  %22 = add nuw nsw i32 %2, 1, !dbg !7335
  call void @llvm.dbg.value(metadata i32 %22, metadata !7306, metadata !DIExpression()), !dbg !7311
  %23 = icmp eq i32 %22, 4, !dbg !7336
  br i1 %23, label %24, label %1, !dbg !7312, !llvm.loop !7337

24:                                               ; preds = %21
  ret void, !dbg !7339
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_deinit(i32 noundef %0) local_unnamed_addr #0 !dbg !7340 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7345, metadata !DIExpression()), !dbg !7352
  %2 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #23, !dbg !7353
  br i1 %2, label %3, label %56, !dbg !7355

3:                                                ; preds = %1
  %4 = tail call i32 @save_and_set_interrupt_mask() #22, !dbg !7356
  call void @llvm.dbg.value(metadata i32 %4, metadata !7349, metadata !DIExpression()), !dbg !7352
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !7357
  %6 = load volatile i32, i32* %5, align 4, !dbg !7357
  %7 = icmp eq i32 %6, 0, !dbg !7359
  br i1 %7, label %54, label %8, !dbg !7360

8:                                                ; preds = %3
  %9 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !7361
  %10 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %9, align 4, !dbg !7361
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %10, metadata !7346, metadata !DIExpression()), !dbg !7352
  tail call void @uart_query_empty(%struct.UART_REGISTER_T* noundef %10) #22, !dbg !7362
  %11 = load volatile i32, i32* %5, align 4, !dbg !7363
  %12 = icmp eq i32 %11, 2, !dbg !7365
  br i1 %12, label %13, label %43, !dbg !7366

13:                                               ; preds = %8
  %14 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #22, !dbg !7367
  call void @llvm.dbg.value(metadata i32 %14, metadata !7347, metadata !DIExpression()), !dbg !7352
  %15 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #22, !dbg !7369
  call void @llvm.dbg.value(metadata i32 %15, metadata !7348, metadata !DIExpression()), !dbg !7352
  %16 = tail call i32 @vdma_disable_interrupt(i32 noundef %14) #22, !dbg !7370
  call void @llvm.dbg.value(metadata i32 %16, metadata !7350, metadata !DIExpression()), !dbg !7352
  %17 = icmp eq i32 %16, 0, !dbg !7371
  br i1 %17, label %19, label %18, !dbg !7373

18:                                               ; preds = %13
  tail call void @restore_interrupt_mask(i32 noundef %4) #22, !dbg !7374
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.45, i32 0, i32 0), i32 noundef 575, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.46, i32 0, i32 0)) #25, !dbg !7376
  unreachable, !dbg !7376

19:                                               ; preds = %13
  %20 = tail call i32 @vdma_disable_interrupt(i32 noundef %15) #22, !dbg !7377
  call void @llvm.dbg.value(metadata i32 %20, metadata !7350, metadata !DIExpression()), !dbg !7352
  %21 = icmp eq i32 %20, 0, !dbg !7378
  br i1 %21, label %23, label %22, !dbg !7380

22:                                               ; preds = %19
  tail call void @restore_interrupt_mask(i32 noundef %4) #22, !dbg !7381
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.45, i32 0, i32 0), i32 noundef 581, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.46, i32 0, i32 0)) #25, !dbg !7383
  unreachable, !dbg !7383

23:                                               ; preds = %19
  %24 = tail call i32 @vdma_stop(i32 noundef %14) #22, !dbg !7384
  call void @llvm.dbg.value(metadata i32 %24, metadata !7350, metadata !DIExpression()), !dbg !7352
  %25 = icmp eq i32 %24, 0, !dbg !7385
  br i1 %25, label %27, label %26, !dbg !7387

26:                                               ; preds = %23
  tail call void @restore_interrupt_mask(i32 noundef %4) #22, !dbg !7388
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.45, i32 0, i32 0), i32 noundef 587, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.46, i32 0, i32 0)) #25, !dbg !7390
  unreachable, !dbg !7390

27:                                               ; preds = %23
  %28 = tail call i32 @vdma_stop(i32 noundef %15) #22, !dbg !7391
  call void @llvm.dbg.value(metadata i32 %28, metadata !7350, metadata !DIExpression()), !dbg !7352
  %29 = icmp eq i32 %28, 0, !dbg !7392
  br i1 %29, label %31, label %30, !dbg !7394

30:                                               ; preds = %27
  tail call void @restore_interrupt_mask(i32 noundef %4) #22, !dbg !7395
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.45, i32 0, i32 0), i32 noundef 593, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.46, i32 0, i32 0)) #25, !dbg !7397
  unreachable, !dbg !7397

31:                                               ; preds = %27
  %32 = tail call i32 @vdma_deinit(i32 noundef %14) #22, !dbg !7398
  call void @llvm.dbg.value(metadata i32 %32, metadata !7350, metadata !DIExpression()), !dbg !7352
  %33 = icmp eq i32 %32, 0, !dbg !7399
  br i1 %33, label %35, label %34, !dbg !7401

34:                                               ; preds = %31
  tail call void @restore_interrupt_mask(i32 noundef %4) #22, !dbg !7402
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.45, i32 0, i32 0), i32 noundef 599, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.46, i32 0, i32 0)) #25, !dbg !7404
  unreachable, !dbg !7404

35:                                               ; preds = %31
  %36 = tail call i32 @vdma_deinit(i32 noundef %15) #22, !dbg !7405
  call void @llvm.dbg.value(metadata i32 %36, metadata !7350, metadata !DIExpression()), !dbg !7352
  %37 = icmp eq i32 %36, 0, !dbg !7406
  br i1 %37, label %39, label %38, !dbg !7408

38:                                               ; preds = %35
  tail call void @restore_interrupt_mask(i32 noundef %4) #22, !dbg !7409
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.45, i32 0, i32 0), i32 noundef 605, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.46, i32 0, i32 0)) #25, !dbg !7411
  unreachable, !dbg !7411

39:                                               ; preds = %35
  %40 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_irq_num to [0 x i32]*), i32 0, i32 %0, !dbg !7412
  %41 = load i32, i32* %40, align 4, !dbg !7412
  %42 = tail call i32 @hal_nvic_disable_irq(i32 noundef %41) #22, !dbg !7413
  br label %43, !dbg !7414

43:                                               ; preds = %39, %8
  tail call void @uart_reset_default_value(%struct.UART_REGISTER_T* noundef %10) #22, !dbg !7415
  %44 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_pdn to [0 x i32]*), i32 0, i32 %0, !dbg !7416
  %45 = load i32, i32* %44, align 4, !dbg !7416
  %46 = tail call i32 @hal_clock_disable(i32 noundef %45) #22, !dbg !7417
  call void @llvm.dbg.value(metadata i32 %46, metadata !7351, metadata !DIExpression()), !dbg !7352
  %47 = icmp eq i32 %46, 0, !dbg !7418
  br i1 %47, label %49, label %48, !dbg !7420

48:                                               ; preds = %43
  tail call void @restore_interrupt_mask(i32 noundef %4) #22, !dbg !7421
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.45, i32 0, i32 0), i32 noundef 614, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.46, i32 0, i32 0)) #25, !dbg !7423
  unreachable, !dbg !7423

49:                                               ; preds = %43
  %50 = getelementptr inbounds [4 x %struct.gdma_user_callback_t], [4 x %struct.gdma_user_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 0, !dbg !7424
  store void (i32, i8*)* null, void (i32, i8*)** %50, align 4, !dbg !7425
  %51 = getelementptr inbounds [4 x %struct.gdma_user_callback_t], [4 x %struct.gdma_user_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 1, !dbg !7426
  store i8* null, i8** %51, align 4, !dbg !7427
  %52 = getelementptr inbounds [4 x i8], [4 x i8]* @g_uart_frist_send_complete_interrupt, i32 0, i32 %0, !dbg !7428
  store i8 0, i8* %52, align 1, !dbg !7429
  %53 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_flowcontrol_status, i32 0, i32 %0, !dbg !7430
  store i32 0, i32* %53, align 4, !dbg !7431
  store volatile i32 0, i32* %5, align 4, !dbg !7432
  br label %54, !dbg !7433

54:                                               ; preds = %3, %49
  %55 = phi i32 [ 0, %49 ], [ -2, %3 ]
  tail call void @restore_interrupt_mask(i32 noundef %4) #22, !dbg !7352
  br label %56, !dbg !7434

56:                                               ; preds = %54, %1
  %57 = phi i32 [ -4, %1 ], [ %55, %54 ], !dbg !7352
  ret i32 %57, !dbg !7434
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) unnamed_addr #10 !dbg !7435 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7439, metadata !DIExpression()), !dbg !7440
  %2 = icmp ult i32 %0, 4, !dbg !7441
  ret i1 %2, !dbg !7442
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_restore_all_registers() local_unnamed_addr #0 !dbg !7443 {
  store i1 true, i1* @g_uart_restore_init, align 1, !dbg !7450
  call void @llvm.dbg.value(metadata i32 0, metadata !7446, metadata !DIExpression()), !dbg !7451
  br label %1, !dbg !7452

1:                                                ; preds = %0, %51
  %2 = phi i32 [ 0, %0 ], [ %52, %51 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !7446, metadata !DIExpression()), !dbg !7451
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %2, !dbg !7454
  %4 = load volatile i32, i32* %3, align 4, !dbg !7454
  call void @llvm.dbg.value(metadata i32 %4, metadata !7448, metadata !DIExpression()), !dbg !7451
  %5 = icmp eq i32 %4, 0, !dbg !7457
  br i1 %5, label %9, label %6, !dbg !7459

6:                                                ; preds = %1
  store volatile i32 0, i32* %3, align 4, !dbg !7460
  %7 = getelementptr inbounds [4 x %struct.hal_uart_config_t], [4 x %struct.hal_uart_config_t]* @g_uart_config, i32 0, i32 %2, !dbg !7462
  %8 = tail call i32 @hal_uart_init(i32 noundef %2, %struct.hal_uart_config_t* noundef nonnull %7) #23, !dbg !7463
  br label %9, !dbg !7464

9:                                                ; preds = %6, %1
  %10 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_flowcontrol_status, i32 0, i32 %2, !dbg !7465
  %11 = load i32, i32* %10, align 4, !dbg !7465
  switch i32 %11, label %30 [
    i32 1, label %12
    i32 2, label %28
  ], !dbg !7467

12:                                               ; preds = %9
  %13 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %2, !dbg !7468
  %14 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %13, align 4, !dbg !7468
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %14, metadata !7447, metadata !DIExpression()), !dbg !7451
  %15 = getelementptr inbounds [4 x %struct.uart_sw_flowcontrol_config_t], [4 x %struct.uart_sw_flowcontrol_config_t]* @g_uart_sw_flowcontrol_config, i32 0, i32 %2, i32 0, !dbg !7470
  %16 = load i8, i8* %15, align 1, !dbg !7470
  tail call void @uart_put_char_block(%struct.UART_REGISTER_T* noundef %14, i8 noundef zeroext %16) #22, !dbg !7471
  %17 = getelementptr inbounds [4 x %struct.hal_uart_config_t], [4 x %struct.hal_uart_config_t]* @g_uart_config, i32 0, i32 %2, i32 0, !dbg !7472
  %18 = load i32, i32* %17, align 4, !dbg !7472
  %19 = udiv i32 12000000, %18, !dbg !7473
  %20 = add nuw nsw i32 %19, 1, !dbg !7474
  call void @llvm.dbg.value(metadata i32 %20, metadata !7445, metadata !DIExpression()), !dbg !7451
  %21 = tail call i32 @hal_gpt_delay_us(i32 noundef %20) #22, !dbg !7475
  %22 = load i8, i8* %15, align 1, !dbg !7476
  %23 = getelementptr inbounds [4 x %struct.uart_sw_flowcontrol_config_t], [4 x %struct.uart_sw_flowcontrol_config_t]* @g_uart_sw_flowcontrol_config, i32 0, i32 %2, i32 1, !dbg !7477
  %24 = load i8, i8* %23, align 1, !dbg !7477
  %25 = getelementptr inbounds [4 x %struct.uart_sw_flowcontrol_config_t], [4 x %struct.uart_sw_flowcontrol_config_t]* @g_uart_sw_flowcontrol_config, i32 0, i32 %2, i32 2, !dbg !7478
  %26 = load i8, i8* %25, align 1, !dbg !7478
  %27 = tail call i32 @hal_uart_set_software_flowcontrol(i32 noundef %2, i8 noundef zeroext %22, i8 noundef zeroext %24, i8 noundef zeroext %26) #23, !dbg !7479
  br label %30, !dbg !7480

28:                                               ; preds = %9
  %29 = tail call i32 @hal_uart_set_hardware_flowcontrol(i32 noundef %2) #23, !dbg !7481
  br label %30, !dbg !7484

30:                                               ; preds = %9, %28, %12
  %31 = icmp eq i32 %4, 2, !dbg !7485
  br i1 %31, label %32, label %40, !dbg !7487

32:                                               ; preds = %30
  %33 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %2, !dbg !7488
  %34 = tail call i32 @hal_uart_set_dma(i32 noundef %2, %struct.hal_uart_dma_config_t* noundef nonnull %33) #23, !dbg !7490
  %35 = getelementptr inbounds [4 x %struct.gdma_user_callback_t], [4 x %struct.gdma_user_callback_t]* @g_uart_callback, i32 0, i32 %2, i32 0, !dbg !7491
  %36 = load void (i32, i8*)*, void (i32, i8*)** %35, align 4, !dbg !7491
  %37 = getelementptr inbounds [4 x %struct.gdma_user_callback_t], [4 x %struct.gdma_user_callback_t]* @g_uart_callback, i32 0, i32 %2, i32 1, !dbg !7492
  %38 = load i8*, i8** %37, align 4, !dbg !7492
  %39 = tail call i32 @hal_uart_register_callback(i32 noundef %2, void (i32, i8*)* noundef %36, i8* noundef %38) #23, !dbg !7493
  br label %40, !dbg !7494

40:                                               ; preds = %32, %30
  %41 = getelementptr inbounds [4 x i8], [4 x i8]* @g_uart_sleep_handler, i32 0, i32 %2, !dbg !7495
  %42 = load i8, i8* %41, align 1, !dbg !7495
  %43 = tail call zeroext i1 @hal_sleep_manager_is_sleep_handle_alive(i8 noundef zeroext %42) #22, !dbg !7496
  call void @llvm.dbg.value(metadata i1 %43, metadata !7449, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7451
  br i1 %43, label %44, label %51, !dbg !7497

44:                                               ; preds = %40
  %45 = getelementptr inbounds [4 x i8], [4 x i8]* @g_uart_irq_pending_status, i32 0, i32 %2, !dbg !7499
  %46 = load i8, i8* %45, align 1, !dbg !7499, !range !4202
  %47 = icmp eq i8 %46, 0, !dbg !7499
  br i1 %47, label %51, label %48, !dbg !7500

48:                                               ; preds = %44
  %49 = load i8, i8* %41, align 1, !dbg !7501
  %50 = tail call i32 @hal_sleep_manager_unlock_sleep(i8 noundef zeroext %49) #22, !dbg !7503
  br label %51, !dbg !7504

51:                                               ; preds = %40, %44, %48
  %52 = add nuw nsw i32 %2, 1, !dbg !7505
  call void @llvm.dbg.value(metadata i32 %52, metadata !7446, metadata !DIExpression()), !dbg !7451
  %53 = icmp eq i32 %52, 4, !dbg !7506
  br i1 %53, label %54, label %1, !dbg !7452, !llvm.loop !7507

54:                                               ; preds = %51
  store i1 false, i1* @g_uart_restore_init, align 1, !dbg !7509
  ret void, !dbg !7510
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_init(i32 noundef %0, %struct.hal_uart_config_t* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !7511 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7516, metadata !DIExpression()), !dbg !7523
  call void @llvm.dbg.value(metadata %struct.hal_uart_config_t* %1, metadata !7517, metadata !DIExpression()), !dbg !7523
  %3 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #23, !dbg !7524
  br i1 %3, label %4, label %59, !dbg !7526

4:                                                ; preds = %2
  %5 = tail call fastcc zeroext i1 @uart_config_is_valid(%struct.hal_uart_config_t* noundef %1) #23, !dbg !7527
  br i1 %5, label %6, label %59, !dbg !7528

6:                                                ; preds = %4
  %7 = tail call i32 @save_and_set_interrupt_mask() #22, !dbg !7529
  call void @llvm.dbg.value(metadata i32 %7, metadata !7521, metadata !DIExpression()), !dbg !7523
  %8 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !7530
  %9 = load volatile i32, i32* %8, align 4, !dbg !7530
  %10 = icmp eq i32 %9, 0, !dbg !7532
  br i1 %10, label %12, label %11, !dbg !7533

11:                                               ; preds = %6
  tail call void @restore_interrupt_mask(i32 noundef %7) #22, !dbg !7534
  br label %59, !dbg !7536

12:                                               ; preds = %6
  %13 = load i1, i1* @g_uart_restore_init, align 1, !dbg !7537
  br i1 %13, label %19, label %14, !dbg !7539

14:                                               ; preds = %12
  %15 = getelementptr inbounds [0 x i8*], [0 x i8*]* bitcast ([4 x i8*]* @g_uart_sleep_handler_name to [0 x i8*]*), i32 0, i32 %0, !dbg !7540
  %16 = load i8*, i8** %15, align 4, !dbg !7540
  %17 = tail call zeroext i8 @hal_sleep_manager_set_sleep_handle(i8* noundef %16) #22, !dbg !7542
  %18 = getelementptr inbounds [4 x i8], [4 x i8]* @g_uart_sleep_handler, i32 0, i32 %0, !dbg !7543
  store i8 %17, i8* %18, align 1, !dbg !7544
  br label %19, !dbg !7545

19:                                               ; preds = %14, %12
  %20 = load i1, i1* @g_uart_global_data_initialized, align 1, !dbg !7546
  br i1 %20, label %32, label %21, !dbg !7548

21:                                               ; preds = %19, %21
  %22 = phi i32 [ %29, %21 ], [ 0, %19 ]
  call void @llvm.dbg.value(metadata i32 %22, metadata !7519, metadata !DIExpression()), !dbg !7523
  %23 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %22, !dbg !7549
  store volatile i32 0, i32* %23, align 4, !dbg !7554
  %24 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_flowcontrol_status, i32 0, i32 %22, !dbg !7555
  store i32 0, i32* %24, align 4, !dbg !7556
  %25 = getelementptr inbounds [4 x i8], [4 x i8]* @g_uart_frist_send_complete_interrupt, i32 0, i32 %22, !dbg !7557
  store i8 0, i8* %25, align 1, !dbg !7558
  %26 = getelementptr inbounds [4 x i8], [4 x i8]* @g_uart_send_lock_status, i32 0, i32 %22, !dbg !7559
  store i8 0, i8* %26, align 1, !dbg !7560
  %27 = getelementptr inbounds [4 x %struct.gdma_user_callback_t], [4 x %struct.gdma_user_callback_t]* @g_uart_callback, i32 0, i32 %22, i32 1, !dbg !7561
  store i8* null, i8** %27, align 4, !dbg !7562
  %28 = getelementptr inbounds [4 x %struct.gdma_user_callback_t], [4 x %struct.gdma_user_callback_t]* @g_uart_callback, i32 0, i32 %22, i32 0, !dbg !7563
  store void (i32, i8*)* null, void (i32, i8*)** %28, align 4, !dbg !7564
  %29 = add nuw nsw i32 %22, 1, !dbg !7565
  call void @llvm.dbg.value(metadata i32 %29, metadata !7519, metadata !DIExpression()), !dbg !7523
  %30 = icmp eq i32 %29, 4, !dbg !7566
  br i1 %30, label %31, label %21, !dbg !7567, !llvm.loop !7568

31:                                               ; preds = %21
  store i1 true, i1* @g_uart_global_data_initialized, align 1, !dbg !7570
  br label %32, !dbg !7571

32:                                               ; preds = %31, %19
  %33 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 0, !dbg !7572
  %34 = load i32, i32* %33, align 4, !dbg !7572
  %35 = getelementptr inbounds [4 x %struct.hal_uart_config_t], [4 x %struct.hal_uart_config_t]* @g_uart_config, i32 0, i32 %0, i32 0, !dbg !7573
  store i32 %34, i32* %35, align 4, !dbg !7574
  %36 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 1, !dbg !7575
  %37 = load i32, i32* %36, align 4, !dbg !7575
  %38 = getelementptr inbounds [4 x %struct.hal_uart_config_t], [4 x %struct.hal_uart_config_t]* @g_uart_config, i32 0, i32 %0, i32 1, !dbg !7576
  store i32 %37, i32* %38, align 4, !dbg !7577
  %39 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 2, !dbg !7578
  %40 = load i32, i32* %39, align 4, !dbg !7578
  %41 = getelementptr inbounds [4 x %struct.hal_uart_config_t], [4 x %struct.hal_uart_config_t]* @g_uart_config, i32 0, i32 %0, i32 2, !dbg !7579
  store i32 %40, i32* %41, align 4, !dbg !7580
  %42 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 3, !dbg !7581
  %43 = load i32, i32* %42, align 4, !dbg !7581
  %44 = getelementptr inbounds [4 x %struct.hal_uart_config_t], [4 x %struct.hal_uart_config_t]* @g_uart_config, i32 0, i32 %0, i32 3, !dbg !7582
  store i32 %43, i32* %44, align 4, !dbg !7583
  store volatile i32 1, i32* %8, align 4, !dbg !7584
  tail call void @restore_interrupt_mask(i32 noundef %7) #22, !dbg !7585
  %45 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_pdn to [0 x i32]*), i32 0, i32 %0, !dbg !7586
  %46 = load i32, i32* %45, align 4, !dbg !7586
  %47 = tail call i32 @hal_clock_enable(i32 noundef %46) #22, !dbg !7587
  call void @llvm.dbg.value(metadata i32 %47, metadata !7522, metadata !DIExpression()), !dbg !7523
  %48 = icmp eq i32 %47, 0, !dbg !7588
  br i1 %48, label %50, label %49, !dbg !7590

49:                                               ; preds = %32
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.45, i32 0, i32 0), i32 noundef 526, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.hal_uart_init, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.46, i32 0, i32 0)) #25, !dbg !7591
  unreachable, !dbg !7591

50:                                               ; preds = %32
  %51 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !7593
  %52 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %51, align 4, !dbg !7593
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %52, metadata !7518, metadata !DIExpression()), !dbg !7523
  tail call void @uart_reset_default_value(%struct.UART_REGISTER_T* noundef %52) #22, !dbg !7594
  %53 = load i32, i32* %33, align 4, !dbg !7595
  %54 = getelementptr inbounds [13 x i32], [13 x i32]* @g_uart_baudrate_map, i32 0, i32 %53, !dbg !7596
  %55 = load i32, i32* %54, align 4, !dbg !7596
  call void @llvm.dbg.value(metadata i32 %55, metadata !7520, metadata !DIExpression()), !dbg !7523
  tail call void @uart_set_baudrate(%struct.UART_REGISTER_T* noundef %52, i32 noundef %55) #22, !dbg !7597
  %56 = load i32, i32* %36, align 4, !dbg !7598
  %57 = load i32, i32* %39, align 4, !dbg !7599
  %58 = load i32, i32* %42, align 4, !dbg !7600
  tail call void @uart_set_format(%struct.UART_REGISTER_T* noundef %52, i32 noundef %56, i32 noundef %57, i32 noundef %58) #22, !dbg !7601
  tail call void @uart_set_fifo(%struct.UART_REGISTER_T* noundef %52) #22, !dbg !7602
  tail call void @uart_set_sleep_mode(%struct.UART_REGISTER_T* noundef %52) #22, !dbg !7603
  br label %59, !dbg !7604

59:                                               ; preds = %2, %4, %50, %11
  %60 = phi i32 [ -3, %11 ], [ 0, %50 ], [ -4, %4 ], [ -4, %2 ], !dbg !7523
  ret i32 %60, !dbg !7605
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_software_flowcontrol(i32 noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) local_unnamed_addr #0 !dbg !7606 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7610, metadata !DIExpression()), !dbg !7615
  call void @llvm.dbg.value(metadata i8 %1, metadata !7611, metadata !DIExpression()), !dbg !7615
  call void @llvm.dbg.value(metadata i8 %2, metadata !7612, metadata !DIExpression()), !dbg !7615
  call void @llvm.dbg.value(metadata i8 %3, metadata !7613, metadata !DIExpression()), !dbg !7615
  %5 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #23, !dbg !7616
  br i1 %5, label %6, label %17, !dbg !7618

6:                                                ; preds = %4
  %7 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !7619
  %8 = load volatile i32, i32* %7, align 4, !dbg !7619
  %9 = icmp eq i32 %8, 0, !dbg !7621
  br i1 %9, label %17, label %10, !dbg !7622

10:                                               ; preds = %6
  %11 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !7623
  %12 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %11, align 4, !dbg !7623
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %12, metadata !7614, metadata !DIExpression()), !dbg !7615
  tail call void @uart_set_software_flowcontrol(%struct.UART_REGISTER_T* noundef %12, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) #22, !dbg !7624
  %13 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_flowcontrol_status, i32 0, i32 %0, !dbg !7625
  store i32 1, i32* %13, align 4, !dbg !7626
  %14 = getelementptr inbounds [4 x %struct.uart_sw_flowcontrol_config_t], [4 x %struct.uart_sw_flowcontrol_config_t]* @g_uart_sw_flowcontrol_config, i32 0, i32 %0, i32 0, !dbg !7627
  store i8 %1, i8* %14, align 1, !dbg !7628
  %15 = getelementptr inbounds [4 x %struct.uart_sw_flowcontrol_config_t], [4 x %struct.uart_sw_flowcontrol_config_t]* @g_uart_sw_flowcontrol_config, i32 0, i32 %0, i32 1, !dbg !7629
  store i8 %2, i8* %15, align 1, !dbg !7630
  %16 = getelementptr inbounds [4 x %struct.uart_sw_flowcontrol_config_t], [4 x %struct.uart_sw_flowcontrol_config_t]* @g_uart_sw_flowcontrol_config, i32 0, i32 %0, i32 2, !dbg !7631
  store i8 %3, i8* %16, align 1, !dbg !7632
  br label %17, !dbg !7633

17:                                               ; preds = %6, %4, %10
  %18 = phi i32 [ 0, %10 ], [ -4, %4 ], [ -2, %6 ], !dbg !7615
  ret i32 %18, !dbg !7634
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_hardware_flowcontrol(i32 noundef %0) local_unnamed_addr #0 !dbg !7635 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7637, metadata !DIExpression()), !dbg !7639
  %2 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #23, !dbg !7640
  br i1 %2, label %3, label %11, !dbg !7642

3:                                                ; preds = %1
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !7643
  %5 = load volatile i32, i32* %4, align 4, !dbg !7643
  %6 = icmp eq i32 %5, 0, !dbg !7645
  br i1 %6, label %11, label %7, !dbg !7646

7:                                                ; preds = %3
  %8 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !7647
  %9 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %8, align 4, !dbg !7647
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %9, metadata !7638, metadata !DIExpression()), !dbg !7639
  tail call void @uart_set_hardware_flowcontrol(%struct.UART_REGISTER_T* noundef %9) #22, !dbg !7648
  %10 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_flowcontrol_status, i32 0, i32 %0, !dbg !7649
  store i32 2, i32* %10, align 4, !dbg !7650
  br label %11, !dbg !7651

11:                                               ; preds = %3, %1, %7
  %12 = phi i32 [ 0, %7 ], [ -4, %1 ], [ -2, %3 ], !dbg !7639
  ret i32 %12, !dbg !7652
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_dma(i32 noundef %0, %struct.hal_uart_dma_config_t* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !7653 {
  %3 = alloca %struct.hal_cache_region_config_t, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !7659, metadata !DIExpression()), !dbg !7671
  call void @llvm.dbg.value(metadata %struct.hal_uart_dma_config_t* %1, metadata !7660, metadata !DIExpression()), !dbg !7671
  %4 = bitcast %struct.hal_cache_region_config_t* %3 to i8*, !dbg !7672
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #24, !dbg !7672
  call void @llvm.dbg.declare(metadata %struct.hal_cache_region_config_t* %3, metadata !7662, metadata !DIExpression()), !dbg !7673
  %5 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #23, !dbg !7674
  br i1 %5, label %6, label %101, !dbg !7676

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 0, !dbg !7677
  %8 = load i8*, i8** %7, align 4, !dbg !7677
  %9 = icmp eq i8* %8, null, !dbg !7679
  br i1 %9, label %101, label %10, !dbg !7680

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 3, !dbg !7681
  %12 = load i8*, i8** %11, align 4, !dbg !7681
  %13 = icmp eq i8* %12, null, !dbg !7682
  br i1 %13, label %101, label %14, !dbg !7683

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 1, !dbg !7684
  %16 = load i32, i32* %15, align 4, !dbg !7684
  %17 = icmp ugt i32 %16, 131071, !dbg !7686
  br i1 %17, label %101, label %18, !dbg !7687

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 2, !dbg !7688
  %20 = load i32, i32* %19, align 4, !dbg !7688
  %21 = icmp ugt i32 %20, 131071, !dbg !7689
  %22 = icmp ugt i32 %20, %16
  %23 = select i1 %21, i1 true, i1 %22, !dbg !7690
  br i1 %23, label %101, label %24, !dbg !7690

24:                                               ; preds = %18
  %25 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 4, !dbg !7691
  %26 = load i32, i32* %25, align 4, !dbg !7691
  %27 = icmp ugt i32 %26, 131071, !dbg !7693
  br i1 %27, label %101, label %28, !dbg !7694

28:                                               ; preds = %24
  %29 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 5, !dbg !7695
  %30 = load i32, i32* %29, align 4, !dbg !7695
  %31 = icmp ugt i32 %30, 131071, !dbg !7696
  br i1 %31, label %101, label %32, !dbg !7697

32:                                               ; preds = %28
  %33 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 6, !dbg !7698
  %34 = load i32, i32* %33, align 4, !dbg !7698
  %35 = icmp ugt i32 %34, 131071, !dbg !7699
  %36 = icmp ugt i32 %30, %26
  %37 = select i1 %35, i1 true, i1 %36, !dbg !7700
  %38 = icmp ugt i32 %34, %26
  %39 = select i1 %37, i1 true, i1 %38, !dbg !7700
  br i1 %39, label %101, label %40, !dbg !7700

40:                                               ; preds = %32
  %41 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !7701
  %42 = load volatile i32, i32* %41, align 4, !dbg !7701
  %43 = icmp eq i32 %42, 1, !dbg !7703
  br i1 %43, label %44, label %101, !dbg !7704

44:                                               ; preds = %40
  %45 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #22, !dbg !7705
  call void @llvm.dbg.value(metadata i32 %45, metadata !7668, metadata !DIExpression()), !dbg !7671
  %46 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #22, !dbg !7706
  call void @llvm.dbg.value(metadata i32 %46, metadata !7669, metadata !DIExpression()), !dbg !7671
  %47 = tail call i32 @vdma_init(i32 noundef %45) #22, !dbg !7707
  call void @llvm.dbg.value(metadata i32 %47, metadata !7670, metadata !DIExpression()), !dbg !7671
  %48 = icmp eq i32 %47, 0, !dbg !7708
  br i1 %48, label %50, label %49, !dbg !7710

49:                                               ; preds = %44
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.45, i32 0, i32 0), i32 noundef 1107, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.46, i32 0, i32 0)) #25, !dbg !7711
  unreachable, !dbg !7711

50:                                               ; preds = %44
  %51 = load i8*, i8** %7, align 4, !dbg !7713
  %52 = ptrtoint i8* %51 to i32, !dbg !7714
  %53 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %3, i32 0, i32 0, !dbg !7715
  store i32 %52, i32* %53, align 4, !dbg !7716
  %54 = load i32, i32* %15, align 4, !dbg !7717
  %55 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %3, i32 0, i32 1, !dbg !7718
  store i32 %54, i32* %55, align 4, !dbg !7719
  %56 = call i32 @vdma_configure(i32 noundef %45, %struct.hal_cache_region_config_t* noundef nonnull %3) #22, !dbg !7720
  call void @llvm.dbg.value(metadata i32 %56, metadata !7670, metadata !DIExpression()), !dbg !7671
  %57 = icmp eq i32 %56, 0, !dbg !7721
  br i1 %57, label %59, label %58, !dbg !7723

58:                                               ; preds = %50
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.45, i32 0, i32 0), i32 noundef 1114, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.46, i32 0, i32 0)) #25, !dbg !7724
  unreachable, !dbg !7724

59:                                               ; preds = %50
  %60 = load i32, i32* %19, align 4, !dbg !7726
  %61 = call i32 @vdma_set_threshold(i32 noundef %45, i32 noundef %60) #22, !dbg !7727
  call void @llvm.dbg.value(metadata i32 %61, metadata !7670, metadata !DIExpression()), !dbg !7671
  %62 = icmp eq i32 %61, 0, !dbg !7728
  br i1 %62, label %64, label %63, !dbg !7730

63:                                               ; preds = %59
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.45, i32 0, i32 0), i32 noundef 1119, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.46, i32 0, i32 0)) #25, !dbg !7731
  unreachable, !dbg !7731

64:                                               ; preds = %59
  %65 = call i32 @vdma_init(i32 noundef %46) #22, !dbg !7733
  call void @llvm.dbg.value(metadata i32 %65, metadata !7670, metadata !DIExpression()), !dbg !7671
  %66 = icmp eq i32 %65, 0, !dbg !7734
  br i1 %66, label %68, label %67, !dbg !7736

67:                                               ; preds = %64
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.45, i32 0, i32 0), i32 noundef 1125, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.46, i32 0, i32 0)) #25, !dbg !7737
  unreachable, !dbg !7737

68:                                               ; preds = %64
  %69 = load i8*, i8** %11, align 4, !dbg !7739
  %70 = ptrtoint i8* %69 to i32, !dbg !7740
  store i32 %70, i32* %53, align 4, !dbg !7741
  %71 = load i32, i32* %25, align 4, !dbg !7742
  store i32 %71, i32* %55, align 4, !dbg !7743
  %72 = call i32 @vdma_configure(i32 noundef %46, %struct.hal_cache_region_config_t* noundef nonnull %3) #22, !dbg !7744
  call void @llvm.dbg.value(metadata i32 %72, metadata !7670, metadata !DIExpression()), !dbg !7671
  %73 = icmp eq i32 %72, 0, !dbg !7745
  br i1 %73, label %75, label %74, !dbg !7747

74:                                               ; preds = %68
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.45, i32 0, i32 0), i32 noundef 1132, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.46, i32 0, i32 0)) #25, !dbg !7748
  unreachable, !dbg !7748

75:                                               ; preds = %68
  %76 = load i32, i32* %29, align 4, !dbg !7750
  %77 = call i32 @vdma_set_threshold(i32 noundef %46, i32 noundef %76) #22, !dbg !7751
  call void @llvm.dbg.value(metadata i32 %77, metadata !7670, metadata !DIExpression()), !dbg !7671
  %78 = icmp eq i32 %77, 0, !dbg !7752
  br i1 %78, label %80, label %79, !dbg !7754

79:                                               ; preds = %75
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.45, i32 0, i32 0), i32 noundef 1137, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.46, i32 0, i32 0)) #25, !dbg !7755
  unreachable, !dbg !7755

80:                                               ; preds = %75
  %81 = load i32, i32* %33, align 4, !dbg !7757
  %82 = call i32 @vdma_set_alert_length(i32 noundef %46, i32 noundef %81) #22, !dbg !7758
  call void @llvm.dbg.value(metadata i32 %82, metadata !7670, metadata !DIExpression()), !dbg !7671
  %83 = icmp eq i32 %82, 0, !dbg !7759
  br i1 %83, label %85, label %84, !dbg !7761

84:                                               ; preds = %80
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.45, i32 0, i32 0), i32 noundef 1142, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.46, i32 0, i32 0)) #25, !dbg !7762
  unreachable, !dbg !7762

85:                                               ; preds = %80
  %86 = call i32 @save_and_set_interrupt_mask() #22, !dbg !7764
  call void @llvm.dbg.value(metadata i32 %86, metadata !7661, metadata !DIExpression()), !dbg !7671
  %87 = load i8*, i8** %7, align 4, !dbg !7765
  %88 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 0, !dbg !7766
  store i8* %87, i8** %88, align 4, !dbg !7767
  %89 = load i32, i32* %15, align 4, !dbg !7768
  %90 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 1, !dbg !7769
  store i32 %89, i32* %90, align 4, !dbg !7770
  %91 = load i32, i32* %19, align 4, !dbg !7771
  %92 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 2, !dbg !7772
  store i32 %91, i32* %92, align 4, !dbg !7773
  %93 = load i32, i32* %33, align 4, !dbg !7774
  %94 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 6, !dbg !7775
  store i32 %93, i32* %94, align 4, !dbg !7776
  %95 = load i8*, i8** %11, align 4, !dbg !7777
  %96 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 3, !dbg !7778
  store i8* %95, i8** %96, align 4, !dbg !7779
  %97 = load i32, i32* %25, align 4, !dbg !7780
  %98 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 4, !dbg !7781
  store i32 %97, i32* %98, align 4, !dbg !7782
  %99 = load i32, i32* %29, align 4, !dbg !7783
  %100 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 5, !dbg !7784
  store i32 %99, i32* %100, align 4, !dbg !7785
  call void @restore_interrupt_mask(i32 noundef %86) #22, !dbg !7786
  br label %101, !dbg !7787

101:                                              ; preds = %40, %24, %28, %32, %14, %18, %6, %10, %2, %85
  %102 = phi i32 [ 0, %85 ], [ -4, %2 ], [ -4, %10 ], [ -4, %6 ], [ -4, %18 ], [ -4, %14 ], [ -4, %32 ], [ -4, %28 ], [ -4, %24 ], [ -2, %40 ], !dbg !7671
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #24, !dbg !7788
  ret i32 %102, !dbg !7788
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_register_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !7789 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7793, metadata !DIExpression()), !dbg !7801
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !7794, metadata !DIExpression()), !dbg !7801
  call void @llvm.dbg.value(metadata i8* %2, metadata !7795, metadata !DIExpression()), !dbg !7801
  %4 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #23, !dbg !7802
  %5 = icmp ne void (i32, i8*)* %1, null
  %6 = and i1 %5, %4, !dbg !7804
  br i1 %6, label %7, label %39, !dbg !7804

7:                                                ; preds = %3
  %8 = tail call i32 @save_and_set_interrupt_mask() #22, !dbg !7805
  call void @llvm.dbg.value(metadata i32 %8, metadata !7798, metadata !DIExpression()), !dbg !7801
  %9 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !7806
  %10 = load volatile i32, i32* %9, align 4, !dbg !7806
  %11 = icmp eq i32 %10, 1, !dbg !7808
  br i1 %11, label %12, label %37, !dbg !7809

12:                                               ; preds = %7
  %13 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #22, !dbg !7810
  call void @llvm.dbg.value(metadata i32 %13, metadata !7796, metadata !DIExpression()), !dbg !7801
  %14 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #22, !dbg !7811
  call void @llvm.dbg.value(metadata i32 %14, metadata !7797, metadata !DIExpression()), !dbg !7801
  %15 = getelementptr inbounds [4 x %struct.gdma_user_callback_t], [4 x %struct.gdma_user_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 0, !dbg !7812
  store void (i32, i8*)* %1, void (i32, i8*)** %15, align 4, !dbg !7813
  %16 = getelementptr inbounds [4 x %struct.gdma_user_callback_t], [4 x %struct.gdma_user_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 1, !dbg !7814
  store i8* %2, i8** %16, align 4, !dbg !7815
  %17 = shl i32 %0, 1, !dbg !7816
  %18 = getelementptr inbounds [8 x %struct.uart_dma_callback_data_t], [8 x %struct.uart_dma_callback_data_t]* @g_uart_dma_callback_data, i32 0, i32 %17, !dbg !7817
  tail call void @uart_dma_channel_to_callback_data(i32 noundef %13, %struct.uart_dma_callback_data_t* noundef nonnull %18) #22, !dbg !7818
  %19 = getelementptr %struct.uart_dma_callback_data_t, %struct.uart_dma_callback_data_t* %18, i32 0, i32 0, !dbg !7819
  %20 = tail call i32 @vdma_register_callback(i32 noundef %13, void (i32, i8*)* noundef nonnull @uart_dma_callback_handler, i8* noundef nonnull %19) #22, !dbg !7820
  call void @llvm.dbg.value(metadata i32 %20, metadata !7799, metadata !DIExpression()), !dbg !7801
  %21 = icmp eq i32 %20, 0, !dbg !7821
  br i1 %21, label %23, label %22, !dbg !7823

22:                                               ; preds = %12
  tail call void @restore_interrupt_mask(i32 noundef %8) #22, !dbg !7824
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.45, i32 0, i32 0), i32 noundef 921, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.hal_uart_register_callback, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.46, i32 0, i32 0)) #25, !dbg !7826
  unreachable, !dbg !7826

23:                                               ; preds = %12
  %24 = or i32 %17, 1, !dbg !7827
  %25 = getelementptr inbounds [8 x %struct.uart_dma_callback_data_t], [8 x %struct.uart_dma_callback_data_t]* @g_uart_dma_callback_data, i32 0, i32 %24, !dbg !7828
  tail call void @uart_dma_channel_to_callback_data(i32 noundef %14, %struct.uart_dma_callback_data_t* noundef nonnull %25) #22, !dbg !7829
  %26 = getelementptr %struct.uart_dma_callback_data_t, %struct.uart_dma_callback_data_t* %25, i32 0, i32 0, !dbg !7830
  %27 = tail call i32 @vdma_register_callback(i32 noundef %14, void (i32, i8*)* noundef nonnull @uart_dma_callback_handler, i8* noundef nonnull %26) #22, !dbg !7831
  call void @llvm.dbg.value(metadata i32 %27, metadata !7799, metadata !DIExpression()), !dbg !7801
  %28 = icmp eq i32 %27, 0, !dbg !7832
  br i1 %28, label %30, label %29, !dbg !7834

29:                                               ; preds = %23
  tail call void @restore_interrupt_mask(i32 noundef %8) #22, !dbg !7835
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.45, i32 0, i32 0), i32 noundef 928, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.hal_uart_register_callback, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.46, i32 0, i32 0)) #25, !dbg !7837
  unreachable, !dbg !7837

30:                                               ; preds = %23
  %31 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_irq_num to [0 x i32]*), i32 0, i32 %0, !dbg !7838
  %32 = load i32, i32* %31, align 4, !dbg !7838
  %33 = tail call i32 @hal_nvic_register_isr_handler(i32 noundef %32, void (i32)* noundef nonnull @uart_interrupt_handler) #22, !dbg !7839
  call void @llvm.dbg.value(metadata i32 %33, metadata !7800, metadata !DIExpression()), !dbg !7801
  %34 = icmp eq i32 %33, 0, !dbg !7840
  br i1 %34, label %36, label %35, !dbg !7842

35:                                               ; preds = %30
  tail call void @restore_interrupt_mask(i32 noundef %8) #22, !dbg !7843
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.45, i32 0, i32 0), i32 noundef 934, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.hal_uart_register_callback, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.46, i32 0, i32 0)) #25, !dbg !7845
  unreachable, !dbg !7845

36:                                               ; preds = %30
  tail call fastcc void @uart_start_dma_transmission(i32 noundef %0) #23, !dbg !7846
  store volatile i32 2, i32* %9, align 4, !dbg !7847
  br label %37, !dbg !7848

37:                                               ; preds = %7, %36
  %38 = phi i32 [ 0, %36 ], [ -2, %7 ]
  tail call void @restore_interrupt_mask(i32 noundef %8) #22, !dbg !7801
  br label %39, !dbg !7849

39:                                               ; preds = %37, %3
  %40 = phi i32 [ -4, %3 ], [ %38, %37 ], !dbg !7801
  ret i32 %40, !dbg !7849
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_dma_callback_handler(i32 noundef %0, i8* nocapture noundef readonly %1) #0 !dbg !7850 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7852, metadata !DIExpression()), !dbg !7855
  call void @llvm.dbg.value(metadata i8* %1, metadata !7853, metadata !DIExpression()), !dbg !7855
  call void @llvm.dbg.value(metadata i8* %1, metadata !7854, metadata !DIExpression()), !dbg !7855
  %3 = load i8, i8* %1, align 4, !dbg !7856, !range !4202
  %4 = icmp eq i8 %3, 0, !dbg !7856
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !7858
  %6 = bitcast i8* %5 to i32*, !dbg !7858
  %7 = load i32, i32* %6, align 4, !dbg !7858
  br i1 %4, label %9, label %8, !dbg !7859

8:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !7854, metadata !DIExpression()), !dbg !7855
  tail call void @uart_receive_handler(i32 noundef %7, i1 noundef zeroext false) #23, !dbg !7860
  br label %10, !dbg !7862

9:                                                ; preds = %2
  tail call void @uart_send_handler(i32 noundef %7, i1 noundef zeroext false) #23, !dbg !7863
  br label %10

10:                                               ; preds = %9, %8
  ret void, !dbg !7865
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_start_dma_transmission(i32 noundef %0) unnamed_addr #0 !dbg !7866 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7868, metadata !DIExpression()), !dbg !7873
  %2 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !7874
  %3 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %2, align 4, !dbg !7874
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %3, metadata !7869, metadata !DIExpression()), !dbg !7873
  %4 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #22, !dbg !7875
  call void @llvm.dbg.value(metadata i32 %4, metadata !7870, metadata !DIExpression()), !dbg !7873
  %5 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #22, !dbg !7876
  call void @llvm.dbg.value(metadata i32 %5, metadata !7871, metadata !DIExpression()), !dbg !7873
  tail call void @uart_unmask_send_interrupt(%struct.UART_REGISTER_T* noundef %3) #22, !dbg !7877
  %6 = getelementptr inbounds [4 x i8], [4 x i8]* @g_uart_frist_send_complete_interrupt, i32 0, i32 %0, !dbg !7878
  store i8 1, i8* %6, align 1, !dbg !7879
  tail call void @uart_unmask_receive_interrupt(%struct.UART_REGISTER_T* noundef %3) #22, !dbg !7880
  %7 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_irq_num to [0 x i32]*), i32 0, i32 %0, !dbg !7881
  %8 = load i32, i32* %7, align 4, !dbg !7881
  %9 = tail call i32 @hal_nvic_enable_irq(i32 noundef %8) #22, !dbg !7882
  %10 = tail call i32 @vdma_enable_interrupt(i32 noundef %4) #22, !dbg !7883
  call void @llvm.dbg.value(metadata i32 %10, metadata !7872, metadata !DIExpression()), !dbg !7873
  %11 = icmp eq i32 %10, 0, !dbg !7884
  br i1 %11, label %13, label %12, !dbg !7886

12:                                               ; preds = %1
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.45, i32 0, i32 0), i32 noundef 870, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.uart_start_dma_transmission, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.46, i32 0, i32 0)) #25, !dbg !7887
  unreachable, !dbg !7887

13:                                               ; preds = %1
  %14 = tail call i32 @vdma_enable_interrupt(i32 noundef %5) #22, !dbg !7889
  call void @llvm.dbg.value(metadata i32 %14, metadata !7872, metadata !DIExpression()), !dbg !7873
  %15 = icmp eq i32 %14, 0, !dbg !7890
  br i1 %15, label %17, label %16, !dbg !7892

16:                                               ; preds = %13
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.45, i32 0, i32 0), i32 noundef 875, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.uart_start_dma_transmission, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.46, i32 0, i32 0)) #25, !dbg !7893
  unreachable, !dbg !7893

17:                                               ; preds = %13
  %18 = tail call i32 @vdma_start(i32 noundef %4) #22, !dbg !7895
  call void @llvm.dbg.value(metadata i32 %18, metadata !7872, metadata !DIExpression()), !dbg !7873
  %19 = icmp eq i32 %18, 0, !dbg !7896
  br i1 %19, label %21, label %20, !dbg !7898

20:                                               ; preds = %17
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.45, i32 0, i32 0), i32 noundef 880, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.uart_start_dma_transmission, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.46, i32 0, i32 0)) #25, !dbg !7899
  unreachable, !dbg !7899

21:                                               ; preds = %17
  %22 = tail call i32 @vdma_start(i32 noundef %5) #22, !dbg !7901
  call void @llvm.dbg.value(metadata i32 %22, metadata !7872, metadata !DIExpression()), !dbg !7873
  %23 = icmp eq i32 %22, 0, !dbg !7902
  br i1 %23, label %25, label %24, !dbg !7904

24:                                               ; preds = %21
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.45, i32 0, i32 0), i32 noundef 885, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.uart_start_dma_transmission, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.46, i32 0, i32 0)) #25, !dbg !7905
  unreachable, !dbg !7905

25:                                               ; preds = %21
  tail call void @uart_enable_dma(%struct.UART_REGISTER_T* noundef %3) #22, !dbg !7907
  ret void, !dbg !7908
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @uart_config_is_valid(%struct.hal_uart_config_t* nocapture noundef readonly %0) unnamed_addr #4 !dbg !7909 {
  call void @llvm.dbg.value(metadata %struct.hal_uart_config_t* %0, metadata !7915, metadata !DIExpression()), !dbg !7916
  %2 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %0, i32 0, i32 0, !dbg !7917
  %3 = load i32, i32* %2, align 4, !dbg !7917
  %4 = icmp ult i32 %3, 13, !dbg !7918
  br i1 %4, label %5, label %17, !dbg !7919

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %0, i32 0, i32 1, !dbg !7920
  %7 = load i32, i32* %6, align 4, !dbg !7920
  %8 = icmp ult i32 %7, 4, !dbg !7921
  br i1 %8, label %9, label %17, !dbg !7922

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %0, i32 0, i32 2, !dbg !7923
  %11 = load i32, i32* %10, align 4, !dbg !7923
  %12 = icmp ult i32 %11, 2, !dbg !7924
  br i1 %12, label %13, label %17, !dbg !7925

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %0, i32 0, i32 3, !dbg !7926
  %15 = load i32, i32* %14, align 4, !dbg !7926
  %16 = icmp ult i32 %15, 3, !dbg !7927
  br label %17

17:                                               ; preds = %13, %9, %5, %1
  %18 = phi i1 [ false, %9 ], [ false, %5 ], [ false, %1 ], [ %16, %13 ], !dbg !7916
  ret i1 %18, !dbg !7928
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_baudrate(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !7929 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7933, metadata !DIExpression()), !dbg !7938
  call void @llvm.dbg.value(metadata i32 %1, metadata !7934, metadata !DIExpression()), !dbg !7938
  %3 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #23, !dbg !7939
  br i1 %3, label %4, label %17, !dbg !7941

4:                                                ; preds = %2
  %5 = tail call fastcc zeroext i1 @uart_baudrate_is_valid(i32 noundef %1) #23, !dbg !7942
  br i1 %5, label %6, label %17, !dbg !7943

6:                                                ; preds = %4
  %7 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !7944
  %8 = load volatile i32, i32* %7, align 4, !dbg !7944
  %9 = icmp eq i32 %8, 0, !dbg !7946
  br i1 %9, label %17, label %10, !dbg !7947

10:                                               ; preds = %6
  %11 = tail call i32 @save_and_set_interrupt_mask() #22, !dbg !7948
  call void @llvm.dbg.value(metadata i32 %11, metadata !7936, metadata !DIExpression()), !dbg !7938
  %12 = getelementptr inbounds [4 x %struct.hal_uart_config_t], [4 x %struct.hal_uart_config_t]* @g_uart_config, i32 0, i32 %0, i32 0, !dbg !7949
  store i32 %1, i32* %12, align 4, !dbg !7950
  tail call void @restore_interrupt_mask(i32 noundef %11) #22, !dbg !7951
  %13 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !7952
  %14 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %13, align 4, !dbg !7952
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %14, metadata !7937, metadata !DIExpression()), !dbg !7938
  %15 = getelementptr inbounds [13 x i32], [13 x i32]* @g_uart_baudrate_map, i32 0, i32 %1, !dbg !7953
  %16 = load i32, i32* %15, align 4, !dbg !7953
  call void @llvm.dbg.value(metadata i32 %16, metadata !7935, metadata !DIExpression()), !dbg !7938
  tail call void @uart_set_baudrate(%struct.UART_REGISTER_T* noundef %14, i32 noundef %16) #22, !dbg !7954
  br label %17, !dbg !7955

17:                                               ; preds = %6, %2, %4, %10
  %18 = phi i32 [ 0, %10 ], [ -4, %4 ], [ -4, %2 ], [ -2, %6 ], !dbg !7938
  ret i32 %18, !dbg !7956
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @uart_baudrate_is_valid(i32 noundef %0) unnamed_addr #10 !dbg !7957 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7961, metadata !DIExpression()), !dbg !7962
  %2 = icmp ult i32 %0, 13, !dbg !7963
  ret i1 %2, !dbg !7964
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_format(i32 noundef %0, %struct.hal_uart_config_t* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !7965 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7969, metadata !DIExpression()), !dbg !7973
  call void @llvm.dbg.value(metadata %struct.hal_uart_config_t* %1, metadata !7970, metadata !DIExpression()), !dbg !7973
  %3 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #23, !dbg !7974
  br i1 %3, label %4, label %31, !dbg !7976

4:                                                ; preds = %2
  %5 = tail call fastcc zeroext i1 @uart_config_is_valid(%struct.hal_uart_config_t* noundef %1) #23, !dbg !7977
  br i1 %5, label %6, label %31, !dbg !7978

6:                                                ; preds = %4
  %7 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !7979
  %8 = load volatile i32, i32* %7, align 4, !dbg !7979
  %9 = icmp eq i32 %8, 0, !dbg !7981
  br i1 %9, label %31, label %10, !dbg !7982

10:                                               ; preds = %6
  %11 = tail call i32 @save_and_set_interrupt_mask() #22, !dbg !7983
  call void @llvm.dbg.value(metadata i32 %11, metadata !7971, metadata !DIExpression()), !dbg !7973
  %12 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 0, !dbg !7984
  %13 = load i32, i32* %12, align 4, !dbg !7984
  %14 = getelementptr inbounds [4 x %struct.hal_uart_config_t], [4 x %struct.hal_uart_config_t]* @g_uart_config, i32 0, i32 %0, i32 0, !dbg !7985
  store i32 %13, i32* %14, align 4, !dbg !7986
  %15 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 1, !dbg !7987
  %16 = load i32, i32* %15, align 4, !dbg !7987
  %17 = getelementptr inbounds [4 x %struct.hal_uart_config_t], [4 x %struct.hal_uart_config_t]* @g_uart_config, i32 0, i32 %0, i32 1, !dbg !7988
  store i32 %16, i32* %17, align 4, !dbg !7989
  %18 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 2, !dbg !7990
  %19 = load i32, i32* %18, align 4, !dbg !7990
  %20 = getelementptr inbounds [4 x %struct.hal_uart_config_t], [4 x %struct.hal_uart_config_t]* @g_uart_config, i32 0, i32 %0, i32 2, !dbg !7991
  store i32 %19, i32* %20, align 4, !dbg !7992
  %21 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 3, !dbg !7993
  %22 = load i32, i32* %21, align 4, !dbg !7993
  %23 = getelementptr inbounds [4 x %struct.hal_uart_config_t], [4 x %struct.hal_uart_config_t]* @g_uart_config, i32 0, i32 %0, i32 3, !dbg !7994
  store i32 %22, i32* %23, align 4, !dbg !7995
  tail call void @restore_interrupt_mask(i32 noundef %11) #22, !dbg !7996
  %24 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !7997
  %25 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %24, align 4, !dbg !7997
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %25, metadata !7972, metadata !DIExpression()), !dbg !7973
  %26 = load i32, i32* %12, align 4, !dbg !7998
  %27 = tail call i32 @hal_uart_set_baudrate(i32 noundef %0, i32 noundef %26) #23, !dbg !7999
  %28 = load i32, i32* %15, align 4, !dbg !8000
  %29 = load i32, i32* %18, align 4, !dbg !8001
  %30 = load i32, i32* %21, align 4, !dbg !8002
  tail call void @uart_set_format(%struct.UART_REGISTER_T* noundef %25, i32 noundef %28, i32 noundef %29, i32 noundef %30) #22, !dbg !8003
  br label %31, !dbg !8004

31:                                               ; preds = %6, %2, %4, %10
  %32 = phi i32 [ 0, %10 ], [ -4, %4 ], [ -4, %2 ], [ -2, %6 ], !dbg !7973
  ret i32 %32, !dbg !8005
}

; Function Attrs: noinline nounwind optsize
define dso_local void @hal_uart_put_char(i32 noundef %0, i8 noundef zeroext %1) local_unnamed_addr #0 !dbg !8006 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8010, metadata !DIExpression()), !dbg !8013
  call void @llvm.dbg.value(metadata i8 %1, metadata !8011, metadata !DIExpression()), !dbg !8013
  %3 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #23, !dbg !8014
  br i1 %3, label %4, label %11, !dbg !8016

4:                                                ; preds = %2
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !8017
  %6 = load volatile i32, i32* %5, align 4, !dbg !8017
  %7 = icmp eq i32 %6, 1, !dbg !8019
  br i1 %7, label %8, label %11, !dbg !8020

8:                                                ; preds = %4
  %9 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !8021
  %10 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %9, align 4, !dbg !8021
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %10, metadata !8012, metadata !DIExpression()), !dbg !8013
  tail call void @uart_put_char_block(%struct.UART_REGISTER_T* noundef %10, i8 noundef zeroext %1) #22, !dbg !8022
  br label %11, !dbg !8023

11:                                               ; preds = %4, %2, %8
  ret void, !dbg !8023
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_send_polling(i32 noundef %0, i8* noundef readonly %1, i32 noundef %2) local_unnamed_addr #0 !dbg !8024 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8030, metadata !DIExpression()), !dbg !8034
  call void @llvm.dbg.value(metadata i8* %1, metadata !8031, metadata !DIExpression()), !dbg !8034
  call void @llvm.dbg.value(metadata i32 %2, metadata !8032, metadata !DIExpression()), !dbg !8034
  call void @llvm.dbg.value(metadata i32 0, metadata !8033, metadata !DIExpression()), !dbg !8034
  %4 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #23, !dbg !8035
  %5 = icmp ne i8* %1, null
  %6 = and i1 %5, %4, !dbg !8037
  br i1 %6, label %7, label %20, !dbg !8037

7:                                                ; preds = %3
  %8 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !8038
  %9 = load volatile i32, i32* %8, align 4, !dbg !8038
  %10 = icmp ne i32 %9, 1, !dbg !8040
  %11 = icmp eq i32 %2, 0
  %12 = or i1 %10, %11, !dbg !8041
  call void @llvm.dbg.value(metadata i32 0, metadata !8033, metadata !DIExpression()), !dbg !8034
  call void @llvm.dbg.value(metadata i8* %1, metadata !8031, metadata !DIExpression()), !dbg !8034
  br i1 %12, label %20, label %13, !dbg !8041

13:                                               ; preds = %7, %13
  %14 = phi i32 [ %18, %13 ], [ 0, %7 ]
  %15 = phi i8* [ %17, %13 ], [ %1, %7 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !8033, metadata !DIExpression()), !dbg !8034
  call void @llvm.dbg.value(metadata i8* %15, metadata !8031, metadata !DIExpression()), !dbg !8034
  %16 = load i8, i8* %15, align 1, !dbg !8042
  tail call void @hal_uart_put_char(i32 noundef %0, i8 noundef zeroext %16) #23, !dbg !8046
  %17 = getelementptr inbounds i8, i8* %15, i32 1, !dbg !8047
  call void @llvm.dbg.value(metadata i8* %17, metadata !8031, metadata !DIExpression()), !dbg !8034
  %18 = add nuw i32 %14, 1, !dbg !8048
  call void @llvm.dbg.value(metadata i32 %18, metadata !8033, metadata !DIExpression()), !dbg !8034
  %19 = icmp eq i32 %18, %2, !dbg !8049
  br i1 %19, label %20, label %13, !dbg !8050, !llvm.loop !8051

20:                                               ; preds = %13, %7, %3
  %21 = phi i32 [ 0, %3 ], [ 0, %7 ], [ %2, %13 ], !dbg !8034
  ret i32 %21, !dbg !8053
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_send_dma(i32 noundef %0, i8* noundef readonly %1, i32 noundef %2) local_unnamed_addr #0 !dbg !8054 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !8056, metadata !DIExpression()), !dbg !8065
  call void @llvm.dbg.value(metadata i8* %1, metadata !8057, metadata !DIExpression()), !dbg !8065
  call void @llvm.dbg.value(metadata i32 %2, metadata !8058, metadata !DIExpression()), !dbg !8065
  %5 = bitcast i32* %4 to i8*, !dbg !8066
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !8066
  %6 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #23, !dbg !8067
  %7 = xor i1 %6, true, !dbg !8069
  %8 = icmp eq i8* %1, null
  %9 = or i1 %8, %7, !dbg !8069
  %10 = icmp eq i32 %2, 0
  %11 = or i1 %10, %9, !dbg !8069
  br i1 %11, label %54, label %12, !dbg !8069

12:                                               ; preds = %3
  %13 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !8070
  %14 = load volatile i32, i32* %13, align 4, !dbg !8070
  %15 = icmp eq i32 %14, 2, !dbg !8072
  br i1 %15, label %16, label %54, !dbg !8073

16:                                               ; preds = %12
  %17 = tail call i32 @save_and_set_interrupt_mask() #22, !dbg !8074
  call void @llvm.dbg.value(metadata i32 %17, metadata !8064, metadata !DIExpression()), !dbg !8065
  %18 = getelementptr inbounds [4 x i8], [4 x i8]* @g_uart_send_lock_status, i32 0, i32 %0, !dbg !8075
  %19 = load i8, i8* %18, align 1, !dbg !8075, !range !4202
  %20 = icmp eq i8 %19, 0, !dbg !8077
  br i1 %20, label %21, label %25, !dbg !8078

21:                                               ; preds = %16
  %22 = getelementptr inbounds [4 x i8], [4 x i8]* @g_uart_sleep_handler, i32 0, i32 %0, !dbg !8079
  %23 = load i8, i8* %22, align 1, !dbg !8079
  %24 = tail call i32 @hal_sleep_manager_lock_sleep(i8 noundef zeroext %23) #22, !dbg !8081
  store i8 1, i8* %18, align 1, !dbg !8082
  br label %25, !dbg !8083

25:                                               ; preds = %21, %16
  tail call void @restore_interrupt_mask(i32 noundef %17) #22, !dbg !8084
  %26 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #22, !dbg !8085
  call void @llvm.dbg.value(metadata i32 %26, metadata !8059, metadata !DIExpression()), !dbg !8065
  call void @llvm.dbg.value(metadata i32* %4, metadata !8062, metadata !DIExpression(DW_OP_deref)), !dbg !8065
  %27 = call i32 @vdma_get_available_send_space(i32 noundef %26, i32* noundef nonnull %4) #22, !dbg !8086
  call void @llvm.dbg.value(metadata i32 %27, metadata !8063, metadata !DIExpression()), !dbg !8065
  %28 = icmp eq i32 %27, 0, !dbg !8087
  br i1 %28, label %30, label %29, !dbg !8089

29:                                               ; preds = %25
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.45, i32 0, i32 0), i32 noundef 708, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.hal_uart_send_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.46, i32 0, i32 0)) #25, !dbg !8090
  unreachable, !dbg !8090

30:                                               ; preds = %25
  %31 = load i32, i32* %4, align 4, !dbg !8092
  call void @llvm.dbg.value(metadata i32 %31, metadata !8062, metadata !DIExpression()), !dbg !8065
  %32 = icmp ult i32 %31, %2, !dbg !8094
  %33 = select i1 %32, i32 %31, i32 %2
  call void @llvm.dbg.value(metadata i32 %33, metadata !8061, metadata !DIExpression()), !dbg !8065
  call void @llvm.dbg.value(metadata i32 0, metadata !8060, metadata !DIExpression()), !dbg !8065
  %34 = icmp eq i32 %33, 0, !dbg !8095
  br i1 %34, label %47, label %37, !dbg !8098

35:                                               ; preds = %37
  call void @llvm.dbg.value(metadata i32 %43, metadata !8060, metadata !DIExpression()), !dbg !8065
  %36 = icmp eq i32 %43, %33, !dbg !8095
  br i1 %36, label %45, label %37, !dbg !8098, !llvm.loop !8099

37:                                               ; preds = %30, %35
  %38 = phi i32 [ %43, %35 ], [ 0, %30 ]
  call void @llvm.dbg.value(metadata i32 %38, metadata !8060, metadata !DIExpression()), !dbg !8065
  %39 = getelementptr inbounds i8, i8* %1, i32 %38, !dbg !8101
  %40 = load i8, i8* %39, align 1, !dbg !8101
  %41 = call i32 @vdma_push_data(i32 noundef %26, i8 noundef zeroext %40) #22, !dbg !8103
  call void @llvm.dbg.value(metadata i32 %41, metadata !8063, metadata !DIExpression()), !dbg !8065
  %42 = icmp eq i32 %41, 0, !dbg !8104
  %43 = add nuw i32 %38, 1, !dbg !8106
  call void @llvm.dbg.value(metadata i32 %43, metadata !8060, metadata !DIExpression()), !dbg !8065
  br i1 %42, label %35, label %44, !dbg !8107

44:                                               ; preds = %37
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.45, i32 0, i32 0), i32 noundef 720, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.hal_uart_send_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.46, i32 0, i32 0)) #25, !dbg !8108
  unreachable, !dbg !8108

45:                                               ; preds = %35
  %46 = load i32, i32* %4, align 4, !dbg !8110
  br label %47, !dbg !8110

47:                                               ; preds = %45, %30
  %48 = phi i32 [ %46, %45 ], [ %31, %30 ], !dbg !8110
  call void @llvm.dbg.value(metadata i32 %48, metadata !8062, metadata !DIExpression()), !dbg !8065
  %49 = icmp eq i32 %33, %48, !dbg !8112
  br i1 %49, label %50, label %54, !dbg !8113

50:                                               ; preds = %47
  %51 = call i32 @vdma_enable_interrupt(i32 noundef %26) #22, !dbg !8114
  call void @llvm.dbg.value(metadata i32 %51, metadata !8063, metadata !DIExpression()), !dbg !8065
  %52 = icmp eq i32 %51, 0, !dbg !8116
  br i1 %52, label %54, label %53, !dbg !8118

53:                                               ; preds = %50
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.45, i32 0, i32 0), i32 noundef 731, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.hal_uart_send_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.46, i32 0, i32 0)) #25, !dbg !8119
  unreachable, !dbg !8119

54:                                               ; preds = %47, %50, %12, %3
  %55 = phi i32 [ 0, %3 ], [ 0, %12 ], [ %33, %50 ], [ %33, %47 ], !dbg !8065
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !8121
  ret i32 %55, !dbg !8121
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i8 @hal_uart_get_char(i32 noundef %0) local_unnamed_addr #0 !dbg !8122 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8126, metadata !DIExpression()), !dbg !8129
  %2 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #23, !dbg !8130
  br i1 %2, label %3, label %11, !dbg !8132

3:                                                ; preds = %1
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !8133
  %5 = load volatile i32, i32* %4, align 4, !dbg !8133
  %6 = icmp eq i32 %5, 1, !dbg !8135
  br i1 %6, label %7, label %11, !dbg !8136

7:                                                ; preds = %3
  %8 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !8137
  %9 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %8, align 4, !dbg !8137
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %9, metadata !8128, metadata !DIExpression()), !dbg !8129
  %10 = tail call zeroext i8 @uart_get_char_block(%struct.UART_REGISTER_T* noundef %9) #22, !dbg !8138
  call void @llvm.dbg.value(metadata i8 %10, metadata !8127, metadata !DIExpression()), !dbg !8129
  br label %11, !dbg !8139

11:                                               ; preds = %3, %1, %7
  %12 = phi i8 [ %10, %7 ], [ 0, %1 ], [ 0, %3 ], !dbg !8129
  ret i8 %12, !dbg !8140
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_get_char_unblocking(i32 noundef %0) local_unnamed_addr #0 !dbg !8141 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8145, metadata !DIExpression()), !dbg !8148
  %2 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #23, !dbg !8149
  br i1 %2, label %3, label %11, !dbg !8151

3:                                                ; preds = %1
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !8152
  %5 = load volatile i32, i32* %4, align 4, !dbg !8152
  %6 = icmp eq i32 %5, 1, !dbg !8154
  br i1 %6, label %7, label %11, !dbg !8155

7:                                                ; preds = %3
  %8 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !8156
  %9 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %8, align 4, !dbg !8156
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %9, metadata !8147, metadata !DIExpression()), !dbg !8148
  %10 = tail call i32 @uart_get_char_unblocking(%struct.UART_REGISTER_T* noundef %9) #22, !dbg !8157
  call void @llvm.dbg.value(metadata i32 %10, metadata !8146, metadata !DIExpression()), !dbg !8148
  br label %11, !dbg !8158

11:                                               ; preds = %3, %1, %7
  %12 = phi i32 [ %10, %7 ], [ 0, %1 ], [ 0, %3 ], !dbg !8148
  ret i32 %12, !dbg !8159
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_receive_polling(i32 noundef %0, i8* noundef writeonly %1, i32 noundef %2) local_unnamed_addr #0 !dbg !8160 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8164, metadata !DIExpression()), !dbg !8169
  call void @llvm.dbg.value(metadata i8* %1, metadata !8165, metadata !DIExpression()), !dbg !8169
  call void @llvm.dbg.value(metadata i32 %2, metadata !8166, metadata !DIExpression()), !dbg !8169
  call void @llvm.dbg.value(metadata i8* %1, metadata !8168, metadata !DIExpression()), !dbg !8169
  %4 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #23, !dbg !8170
  %5 = icmp ne i8* %1, null
  %6 = and i1 %5, %4, !dbg !8172
  br i1 %6, label %7, label %19, !dbg !8172

7:                                                ; preds = %3
  %8 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !8173
  %9 = load volatile i32, i32* %8, align 4, !dbg !8173
  %10 = icmp ne i32 %9, 1, !dbg !8175
  %11 = icmp eq i32 %2, 0
  %12 = or i1 %10, %11, !dbg !8176
  call void @llvm.dbg.value(metadata i32 0, metadata !8167, metadata !DIExpression()), !dbg !8169
  br i1 %12, label %19, label %13, !dbg !8176

13:                                               ; preds = %7, %13
  %14 = phi i32 [ %17, %13 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !8167, metadata !DIExpression()), !dbg !8169
  %15 = tail call zeroext i8 @hal_uart_get_char(i32 noundef %0) #23, !dbg !8177
  %16 = getelementptr inbounds i8, i8* %1, i32 %14, !dbg !8181
  store i8 %15, i8* %16, align 1, !dbg !8182
  %17 = add nuw i32 %14, 1, !dbg !8183
  call void @llvm.dbg.value(metadata i32 %17, metadata !8167, metadata !DIExpression()), !dbg !8169
  %18 = icmp eq i32 %17, %2, !dbg !8184
  br i1 %18, label %19, label %13, !dbg !8185, !llvm.loop !8186

19:                                               ; preds = %13, %7, %3
  %20 = phi i32 [ 0, %3 ], [ 0, %7 ], [ %2, %13 ], !dbg !8169
  ret i32 %20, !dbg !8188
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_receive_dma(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !8189 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !8191, metadata !DIExpression()), !dbg !8199
  call void @llvm.dbg.value(metadata i8* %1, metadata !8192, metadata !DIExpression()), !dbg !8199
  call void @llvm.dbg.value(metadata i32 %2, metadata !8193, metadata !DIExpression()), !dbg !8199
  %5 = bitcast i32* %4 to i8*, !dbg !8200
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !8200
  %6 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #23, !dbg !8201
  %7 = xor i1 %6, true, !dbg !8203
  %8 = icmp eq i8* %1, null
  %9 = or i1 %8, %7, !dbg !8203
  %10 = icmp eq i32 %2, 0
  %11 = or i1 %10, %9, !dbg !8203
  br i1 %11, label %44, label %12, !dbg !8203

12:                                               ; preds = %3
  %13 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !8204
  %14 = load volatile i32, i32* %13, align 4, !dbg !8204
  %15 = icmp eq i32 %14, 2, !dbg !8206
  br i1 %15, label %16, label %44, !dbg !8207

16:                                               ; preds = %12
  %17 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #22, !dbg !8208
  call void @llvm.dbg.value(metadata i32 %17, metadata !8194, metadata !DIExpression()), !dbg !8199
  call void @llvm.dbg.value(metadata i32* %4, metadata !8196, metadata !DIExpression(DW_OP_deref)), !dbg !8199
  %18 = call i32 @vdma_get_available_receive_bytes(i32 noundef %17, i32* noundef nonnull %4) #22, !dbg !8209
  call void @llvm.dbg.value(metadata i32 %18, metadata !8198, metadata !DIExpression()), !dbg !8199
  %19 = icmp eq i32 %18, 0, !dbg !8210
  br i1 %19, label %21, label %20, !dbg !8212

20:                                               ; preds = %16
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.45, i32 0, i32 0), i32 noundef 821, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.hal_uart_receive_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.46, i32 0, i32 0)) #25, !dbg !8213
  unreachable, !dbg !8213

21:                                               ; preds = %16
  %22 = load i32, i32* %4, align 4, !dbg !8215
  call void @llvm.dbg.value(metadata i32 %22, metadata !8196, metadata !DIExpression()), !dbg !8199
  %23 = icmp ult i32 %22, %2, !dbg !8217
  %24 = select i1 %23, i32 %22, i32 %2
  call void @llvm.dbg.value(metadata i32 %24, metadata !8195, metadata !DIExpression()), !dbg !8199
  call void @llvm.dbg.value(metadata i32 0, metadata !8197, metadata !DIExpression()), !dbg !8199
  %25 = icmp eq i32 %24, 0, !dbg !8218
  br i1 %25, label %37, label %28, !dbg !8221

26:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %33, metadata !8197, metadata !DIExpression()), !dbg !8199
  %27 = icmp eq i32 %33, %24, !dbg !8218
  br i1 %27, label %35, label %28, !dbg !8221, !llvm.loop !8222

28:                                               ; preds = %21, %26
  %29 = phi i32 [ %33, %26 ], [ 0, %21 ]
  call void @llvm.dbg.value(metadata i32 %29, metadata !8197, metadata !DIExpression()), !dbg !8199
  %30 = getelementptr inbounds i8, i8* %1, i32 %29, !dbg !8224
  %31 = call i32 @vdma_pop_data(i32 noundef %17, i8* noundef %30) #22, !dbg !8226
  call void @llvm.dbg.value(metadata i32 %31, metadata !8198, metadata !DIExpression()), !dbg !8199
  %32 = icmp eq i32 %31, 0, !dbg !8227
  %33 = add nuw i32 %29, 1, !dbg !8229
  call void @llvm.dbg.value(metadata i32 %33, metadata !8197, metadata !DIExpression()), !dbg !8199
  br i1 %32, label %26, label %34, !dbg !8230

34:                                               ; preds = %28
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.45, i32 0, i32 0), i32 noundef 833, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.hal_uart_receive_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.46, i32 0, i32 0)) #25, !dbg !8231
  unreachable, !dbg !8231

35:                                               ; preds = %26
  %36 = load i32, i32* %4, align 4, !dbg !8233
  br label %37, !dbg !8233

37:                                               ; preds = %35, %21
  %38 = phi i32 [ %36, %35 ], [ %22, %21 ], !dbg !8233
  call void @llvm.dbg.value(metadata i32 %38, metadata !8196, metadata !DIExpression()), !dbg !8199
  %39 = icmp eq i32 %24, %38, !dbg !8235
  br i1 %39, label %40, label %44, !dbg !8236

40:                                               ; preds = %37
  %41 = call i32 @vdma_enable_interrupt(i32 noundef %17) #22, !dbg !8237
  call void @llvm.dbg.value(metadata i32 %41, metadata !8198, metadata !DIExpression()), !dbg !8199
  %42 = icmp eq i32 %41, 0, !dbg !8239
  br i1 %42, label %44, label %43, !dbg !8241

43:                                               ; preds = %40
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.45, i32 0, i32 0), i32 noundef 844, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.hal_uart_receive_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.46, i32 0, i32 0)) #25, !dbg !8242
  unreachable, !dbg !8242

44:                                               ; preds = %37, %40, %12, %3
  %45 = phi i32 [ 0, %3 ], [ 0, %12 ], [ %24, %40 ], [ %24, %37 ], !dbg !8199
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !8244
  ret i32 %45, !dbg !8244
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_get_available_send_space(i32 noundef %0) local_unnamed_addr #0 !dbg !8245 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !8247, metadata !DIExpression()), !dbg !8251
  %3 = bitcast i32* %2 to i8*, !dbg !8252
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #24, !dbg !8252
  %4 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #23, !dbg !8253
  br i1 %4, label %5, label %16, !dbg !8255

5:                                                ; preds = %1
  %6 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !8256
  %7 = load volatile i32, i32* %6, align 4, !dbg !8256
  %8 = icmp eq i32 %7, 2, !dbg !8258
  br i1 %8, label %9, label %16, !dbg !8259

9:                                                ; preds = %5
  %10 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #22, !dbg !8260
  call void @llvm.dbg.value(metadata i32 %10, metadata !8248, metadata !DIExpression()), !dbg !8251
  call void @llvm.dbg.value(metadata i32* %2, metadata !8249, metadata !DIExpression(DW_OP_deref)), !dbg !8251
  %11 = call i32 @vdma_get_available_send_space(i32 noundef %10, i32* noundef nonnull %2) #22, !dbg !8261
  call void @llvm.dbg.value(metadata i32 %11, metadata !8250, metadata !DIExpression()), !dbg !8251
  %12 = icmp eq i32 %11, 0, !dbg !8262
  br i1 %12, label %14, label %13, !dbg !8264

13:                                               ; preds = %9
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.45, i32 0, i32 0), i32 noundef 964, i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @__func__.hal_uart_get_available_send_space, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.46, i32 0, i32 0)) #25, !dbg !8265
  unreachable, !dbg !8265

14:                                               ; preds = %9
  %15 = load i32, i32* %2, align 4, !dbg !8267
  call void @llvm.dbg.value(metadata i32 %15, metadata !8249, metadata !DIExpression()), !dbg !8251
  br label %16, !dbg !8268

16:                                               ; preds = %5, %1, %14
  %17 = phi i32 [ %15, %14 ], [ 0, %1 ], [ 0, %5 ], !dbg !8251
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #24, !dbg !8269
  ret i32 %17, !dbg !8269
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_get_available_receive_bytes(i32 noundef %0) local_unnamed_addr #0 !dbg !8270 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !8272, metadata !DIExpression()), !dbg !8276
  %3 = bitcast i32* %2 to i8*, !dbg !8277
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #24, !dbg !8277
  %4 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #23, !dbg !8278
  br i1 %4, label %5, label %16, !dbg !8280

5:                                                ; preds = %1
  %6 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !8281
  %7 = load volatile i32, i32* %6, align 4, !dbg !8281
  %8 = icmp eq i32 %7, 2, !dbg !8283
  br i1 %8, label %9, label %16, !dbg !8284

9:                                                ; preds = %5
  %10 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #22, !dbg !8285
  call void @llvm.dbg.value(metadata i32 %10, metadata !8273, metadata !DIExpression()), !dbg !8276
  call void @llvm.dbg.value(metadata i32* %2, metadata !8274, metadata !DIExpression(DW_OP_deref)), !dbg !8276
  %11 = call i32 @vdma_get_available_receive_bytes(i32 noundef %10, i32* noundef nonnull %2) #22, !dbg !8286
  call void @llvm.dbg.value(metadata i32 %11, metadata !8275, metadata !DIExpression()), !dbg !8276
  %12 = icmp eq i32 %11, 0, !dbg !8287
  br i1 %12, label %14, label %13, !dbg !8289

13:                                               ; preds = %9
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.45, i32 0, i32 0), i32 noundef 988, i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @__func__.hal_uart_get_available_receive_bytes, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.46, i32 0, i32 0)) #25, !dbg !8290
  unreachable, !dbg !8290

14:                                               ; preds = %9
  %15 = load i32, i32* %2, align 4, !dbg !8292
  call void @llvm.dbg.value(metadata i32 %15, metadata !8274, metadata !DIExpression()), !dbg !8276
  br label %16, !dbg !8293

16:                                               ; preds = %5, %1, %14
  %17 = phi i32 [ %15, %14 ], [ 0, %1 ], [ 0, %5 ], !dbg !8276
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #24, !dbg !8294
  ret i32 %17, !dbg !8294
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_disable_flowcontrol(i32 noundef %0) local_unnamed_addr #0 !dbg !8295 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8297, metadata !DIExpression()), !dbg !8299
  %2 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #23, !dbg !8300
  br i1 %2, label %3, label %11, !dbg !8302

3:                                                ; preds = %1
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !8303
  %5 = load volatile i32, i32* %4, align 4, !dbg !8303
  %6 = icmp eq i32 %5, 0, !dbg !8305
  br i1 %6, label %11, label %7, !dbg !8306

7:                                                ; preds = %3
  %8 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !8307
  %9 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %8, align 4, !dbg !8307
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %9, metadata !8298, metadata !DIExpression()), !dbg !8299
  tail call void @uart_disable_flowcontrol(%struct.UART_REGISTER_T* noundef %9) #22, !dbg !8308
  %10 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_flowcontrol_status, i32 0, i32 %0, !dbg !8309
  store i32 0, i32* %10, align 4, !dbg !8310
  br label %11, !dbg !8311

11:                                               ; preds = %3, %1, %7
  %12 = phi i32 [ 0, %7 ], [ -4, %1 ], [ -2, %3 ], !dbg !8299
  ret i32 %12, !dbg !8312
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_set_baudrate(%struct.UART_REGISTER_T* noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !8313 {
  %3 = alloca [10 x i32], align 4
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !8372, metadata !DIExpression()), !dbg !8385
  call void @llvm.dbg.value(metadata i32 %1, metadata !8373, metadata !DIExpression()), !dbg !8385
  call void @llvm.dbg.declare(metadata [10 x i32]* @__const.uart_set_baudrate.fraction_L_mapping, metadata !8382, metadata !DIExpression()), !dbg !8386
  %4 = bitcast [10 x i32]* %3 to i8*, !dbg !8387
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %4) #24, !dbg !8387
  call void @llvm.dbg.declare(metadata [10 x i32]* %3, metadata !8384, metadata !DIExpression()), !dbg !8388
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(40) %4, i8 0, i32 20, i1 false), !dbg !8388
  %5 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 5, !dbg !8388
  store i32 1, i32* %5, align 4, !dbg !8388
  %6 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 6, !dbg !8388
  store i32 1, i32* %6, align 4, !dbg !8388
  %7 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 7, !dbg !8388
  store i32 1, i32* %7, align 4, !dbg !8388
  %8 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 8, !dbg !8388
  store i32 1, i32* %8, align 4, !dbg !8388
  %9 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 9, !dbg !8388
  store i32 1, i32* %9, align 4, !dbg !8388
  %10 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 13, !dbg !8389
  store volatile i32 0, i32* %10, align 4, !dbg !8390
  %11 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 21, !dbg !8391
  store volatile i32 0, i32* %11, align 4, !dbg !8392
  %12 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 22, !dbg !8393
  store volatile i32 0, i32* %12, align 4, !dbg !8394
  %13 = tail call zeroext i1 @is_clk_use_lfosc() #22, !dbg !8395
  br i1 %13, label %14, label %17, !dbg !8397

14:                                               ; preds = %2
  %15 = tail call i32 @clock_get_freq_lfosc() #22, !dbg !8398
  %16 = mul i32 %15, 1000, !dbg !8400
  call void @llvm.dbg.value(metadata i32 %16, metadata !8374, metadata !DIExpression()), !dbg !8385
  br label %17, !dbg !8401

17:                                               ; preds = %2, %14
  %18 = phi i32 [ %16, %14 ], [ 26000000, %2 ], !dbg !8402
  call void @llvm.dbg.value(metadata i32 %18, metadata !8374, metadata !DIExpression()), !dbg !8385
  %19 = shl i32 %1, 8, !dbg !8403
  %20 = udiv i32 %18, %19, !dbg !8404
  call void @llvm.dbg.value(metadata i32 %20, metadata !8375, metadata !DIExpression()), !dbg !8385
  %21 = mul i32 %18, 10, !dbg !8405
  %22 = udiv i32 %21, %19, !dbg !8406
  %23 = urem i32 %22, 10, !dbg !8407
  call void @llvm.dbg.value(metadata i32 %23, metadata !8376, metadata !DIExpression()), !dbg !8385
  %24 = icmp ne i32 %23, 0, !dbg !8408
  %25 = icmp ugt i32 %19, %18
  %26 = select i1 %24, i1 true, i1 %25, !dbg !8410
  %27 = zext i1 %26 to i32, !dbg !8410
  %28 = add i32 %20, %27, !dbg !8410
  call void @llvm.dbg.value(metadata i32 %28, metadata !8375, metadata !DIExpression()), !dbg !8385
  call void @llvm.dbg.value(metadata i32 %28, metadata !8378, metadata !DIExpression()), !dbg !8385
  call void @llvm.dbg.value(metadata i32 undef, metadata !8379, metadata !DIExpression()), !dbg !8385
  br label %29, !dbg !8411

29:                                               ; preds = %29, %17
  %30 = phi i32 [ %28, %17 ], [ %34, %29 ], !dbg !8385
  %31 = mul i32 %30, %1, !dbg !8385
  %32 = udiv i32 %18, %31, !dbg !8385
  call void @llvm.dbg.value(metadata i32 %32, metadata !8379, metadata !DIExpression()), !dbg !8385
  call void @llvm.dbg.value(metadata i32 %30, metadata !8378, metadata !DIExpression()), !dbg !8385
  %33 = icmp ugt i32 %32, 256, !dbg !8412
  %34 = add i32 %30, 1, !dbg !8413
  call void @llvm.dbg.value(metadata i32 %34, metadata !8378, metadata !DIExpression()), !dbg !8385
  call void @llvm.dbg.value(metadata i32 undef, metadata !8379, metadata !DIExpression()), !dbg !8385
  br i1 %33, label %29, label %35, !dbg !8411, !llvm.loop !8415

35:                                               ; preds = %29
  %36 = udiv i32 %21, %31, !dbg !8417
  %37 = urem i32 %36, 10, !dbg !8418
  call void @llvm.dbg.value(metadata i32 %37, metadata !8377, metadata !DIExpression()), !dbg !8385
  %38 = add nsw i32 %32, -1, !dbg !8419
  call void @llvm.dbg.value(metadata i32 %38, metadata !8379, metadata !DIExpression()), !dbg !8385
  %39 = add nsw i32 %32, -2, !dbg !8420
  %40 = lshr i32 %39, 1, !dbg !8421
  call void @llvm.dbg.value(metadata i32 %40, metadata !8380, metadata !DIExpression()), !dbg !8385
  %41 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 9, !dbg !8422
  store volatile i32 3, i32* %41, align 4, !dbg !8423
  %42 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !8424
  %43 = load volatile i32, i32* %42, align 4, !dbg !8424
  call void @llvm.dbg.value(metadata i32 %43, metadata !8381, metadata !DIExpression()), !dbg !8385
  %44 = or i32 %43, 128, !dbg !8425
  store volatile i32 %44, i32* %42, align 4, !dbg !8426
  %45 = and i32 %30, 255, !dbg !8427
  %46 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 0, i32 0, !dbg !8428
  store volatile i32 %45, i32* %46, align 4, !dbg !8429
  %47 = lshr i32 %30, 8, !dbg !8430
  %48 = and i32 %47, 255, !dbg !8431
  %49 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 1, i32 0, !dbg !8432
  store volatile i32 %48, i32* %49, align 4, !dbg !8433
  store volatile i32 %43, i32* %42, align 4, !dbg !8434
  %50 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 10, !dbg !8435
  store volatile i32 %38, i32* %50, align 4, !dbg !8436
  %51 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 11, !dbg !8437
  store volatile i32 %40, i32* %51, align 4, !dbg !8438
  %52 = getelementptr inbounds [10 x i32], [10 x i32]* @__const.uart_set_baudrate.fraction_L_mapping, i32 0, i32 %37, !dbg !8439
  %53 = load i32, i32* %52, align 4, !dbg !8439
  store volatile i32 %53, i32* %11, align 4, !dbg !8440
  %54 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 %37, !dbg !8441
  %55 = load i32, i32* %54, align 4, !dbg !8441
  store volatile i32 %55, i32* %12, align 4, !dbg !8442
  %56 = icmp ugt i32 %1, 2999999, !dbg !8443
  br i1 %56, label %57, label %59, !dbg !8445

57:                                               ; preds = %35
  %58 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 15, !dbg !8446
  store volatile i32 18, i32* %58, align 4, !dbg !8448
  br label %59, !dbg !8449

59:                                               ; preds = %57, %35
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %4) #24, !dbg !8450
  ret void, !dbg !8450
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #15

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_format(%struct.UART_REGISTER_T* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #2 !dbg !8451 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !8455, metadata !DIExpression()), !dbg !8460
  call void @llvm.dbg.value(metadata i32 %1, metadata !8456, metadata !DIExpression()), !dbg !8460
  call void @llvm.dbg.value(metadata i32 %2, metadata !8457, metadata !DIExpression()), !dbg !8460
  call void @llvm.dbg.value(metadata i32 %3, metadata !8458, metadata !DIExpression()), !dbg !8460
  %5 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !8461
  %6 = load volatile i32, i32* %5, align 4, !dbg !8461
  call void @llvm.dbg.value(metadata i32 %6, metadata !8459, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8460
  store volatile i32 128, i32* %5, align 4, !dbg !8462
  %7 = trunc i32 %6 to i16, !dbg !8463
  %8 = and i16 %7, -4, !dbg !8463
  call void @llvm.dbg.value(metadata i16 %7, metadata !8459, metadata !DIExpression(DW_OP_constu, 18446744073709551612, DW_OP_and, DW_OP_stack_value)), !dbg !8460
  switch i32 %1, label %15 [
    i32 3, label %13
    i32 1, label %9
    i32 2, label %11
  ], !dbg !8464

9:                                                ; preds = %4
  %10 = or i16 %8, 1, !dbg !8465
  call void @llvm.dbg.value(metadata i16 %10, metadata !8459, metadata !DIExpression()), !dbg !8460
  br label %15, !dbg !8467

11:                                               ; preds = %4
  %12 = or i16 %8, 2, !dbg !8468
  call void @llvm.dbg.value(metadata i16 %12, metadata !8459, metadata !DIExpression()), !dbg !8460
  br label %15, !dbg !8469

13:                                               ; preds = %4
  %14 = or i16 %7, 3, !dbg !8470
  call void @llvm.dbg.value(metadata i16 %14, metadata !8459, metadata !DIExpression()), !dbg !8460
  br label %15, !dbg !8471

15:                                               ; preds = %4, %13, %11, %9
  %16 = phi i16 [ %14, %13 ], [ %12, %11 ], [ %10, %9 ], [ %8, %4 ], !dbg !8460
  call void @llvm.dbg.value(metadata i16 %16, metadata !8459, metadata !DIExpression()), !dbg !8460
  %17 = and i16 %16, -61, !dbg !8472
  call void @llvm.dbg.value(metadata i16 %16, metadata !8459, metadata !DIExpression(DW_OP_constu, 18446744073709551611, DW_OP_and, DW_OP_stack_value)), !dbg !8460
  %18 = icmp eq i32 %2, 1, !dbg !8473
  %19 = select i1 %18, i16 4, i16 0, !dbg !8473
  %20 = or i16 %17, %19, !dbg !8473
  call void @llvm.dbg.value(metadata !DIArgList(i16 %17, i16 %19), metadata !8459, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !8460
  call void @llvm.dbg.value(metadata i16 %20, metadata !8459, metadata !DIExpression()), !dbg !8460
  %21 = icmp eq i32 %3, 2, !dbg !8474
  %22 = or i16 %20, 16, !dbg !8474
  %23 = select i1 %21, i16 %22, i16 %20, !dbg !8474
  call void @llvm.dbg.value(metadata i16 %23, metadata !8459, metadata !DIExpression()), !dbg !8460
  %24 = zext i16 %23 to i32, !dbg !8475
  store volatile i32 %24, i32* %5, align 4, !dbg !8476
  ret void, !dbg !8477
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_put_char_block(%struct.UART_REGISTER_T* noundef %0, i8 noundef zeroext %1) local_unnamed_addr #2 !dbg !8478 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !8482, metadata !DIExpression()), !dbg !8485
  call void @llvm.dbg.value(metadata i8 %1, metadata !8483, metadata !DIExpression()), !dbg !8485
  %3 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0
  br label %4, !dbg !8486

4:                                                ; preds = %4, %2
  %5 = load volatile i32, i32* %3, align 4, !dbg !8487
  call void @llvm.dbg.value(metadata i32 %5, metadata !8484, metadata !DIExpression()), !dbg !8485
  %6 = and i32 %5, 32, !dbg !8489
  %7 = icmp eq i32 %6, 0, !dbg !8489
  br i1 %7, label %4, label %8, !dbg !8491, !llvm.loop !8492

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !8494
  %10 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 0, i32 0, !dbg !8496
  store volatile i32 %9, i32* %10, align 4, !dbg !8497
  ret void, !dbg !8498
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local zeroext i8 @uart_get_char_block(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !8499 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !8503, metadata !DIExpression()), !dbg !8506
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0
  br label %3, !dbg !8507

3:                                                ; preds = %3, %1
  %4 = load volatile i32, i32* %2, align 4, !dbg !8508
  call void @llvm.dbg.value(metadata i32 %4, metadata !8504, metadata !DIExpression()), !dbg !8506
  %5 = and i32 %4, 1, !dbg !8510
  %6 = icmp eq i32 %5, 0, !dbg !8510
  br i1 %6, label %3, label %7, !dbg !8512, !llvm.loop !8513

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 0, i32 0, !dbg !8515
  %9 = load volatile i32, i32* %8, align 4, !dbg !8515
  %10 = trunc i32 %9 to i8, !dbg !8517
  call void @llvm.dbg.value(metadata i8 %10, metadata !8505, metadata !DIExpression()), !dbg !8506
  ret i8 %10, !dbg !8518
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @uart_get_char_unblocking(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #11 !dbg !8519 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !8523, metadata !DIExpression()), !dbg !8526
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0, !dbg !8527
  %3 = load volatile i32, i32* %2, align 4, !dbg !8527
  call void @llvm.dbg.value(metadata i32 %3, metadata !8524, metadata !DIExpression()), !dbg !8526
  %4 = and i32 %3, 1, !dbg !8528
  %5 = icmp eq i32 %4, 0, !dbg !8528
  br i1 %5, label %9, label %6, !dbg !8530

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 0, i32 0, !dbg !8531
  %8 = load volatile i32, i32* %7, align 4, !dbg !8531
  call void @llvm.dbg.value(metadata i32 %8, metadata !8525, metadata !DIExpression()), !dbg !8526
  br label %9, !dbg !8533

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %1 ], !dbg !8534
  call void @llvm.dbg.value(metadata i32 %10, metadata !8525, metadata !DIExpression()), !dbg !8526
  ret i32 %10, !dbg !8535
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_hardware_flowcontrol(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !8536 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !8540, metadata !DIExpression()), !dbg !8543
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !8544
  %3 = load volatile i32, i32* %2, align 4, !dbg !8544
  call void @llvm.dbg.value(metadata i32 %3, metadata !8542, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8543
  store volatile i32 191, i32* %2, align 4, !dbg !8545
  %4 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !8546
  %5 = load volatile i32, i32* %4, align 4, !dbg !8546
  call void @llvm.dbg.value(metadata i32 %5, metadata !8541, metadata !DIExpression()), !dbg !8543
  %6 = and i32 %5, 65343, !dbg !8547
  %7 = or i32 %6, 192, !dbg !8547
  call void @llvm.dbg.value(metadata i32 %5, metadata !8541, metadata !DIExpression(DW_OP_constu, 192, DW_OP_or, DW_OP_stack_value)), !dbg !8543
  store volatile i32 %7, i32* %4, align 4, !dbg !8548
  %8 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 17, !dbg !8549
  store volatile i32 0, i32* %8, align 4, !dbg !8550
  store volatile i32 0, i32* %2, align 4, !dbg !8551
  %9 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 4, i32 0, !dbg !8552
  store volatile i32 2, i32* %9, align 4, !dbg !8553
  %10 = and i32 %3, 65535, !dbg !8554
  store volatile i32 %10, i32* %2, align 4, !dbg !8555
  ret void, !dbg !8556
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_software_flowcontrol(%struct.UART_REGISTER_T* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) local_unnamed_addr #2 !dbg !8557 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !8561, metadata !DIExpression()), !dbg !8567
  call void @llvm.dbg.value(metadata i8 %1, metadata !8562, metadata !DIExpression()), !dbg !8567
  call void @llvm.dbg.value(metadata i8 %2, metadata !8563, metadata !DIExpression()), !dbg !8567
  call void @llvm.dbg.value(metadata i8 %3, metadata !8564, metadata !DIExpression()), !dbg !8567
  %5 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !8568
  %6 = load volatile i32, i32* %5, align 4, !dbg !8568
  call void @llvm.dbg.value(metadata i32 %6, metadata !8566, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8567
  store volatile i32 191, i32* %5, align 4, !dbg !8569
  %7 = zext i8 %1 to i32, !dbg !8570
  %8 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 4, i32 0, !dbg !8571
  store volatile i32 %7, i32* %8, align 4, !dbg !8572
  %9 = zext i8 %2 to i32, !dbg !8573
  %10 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 6, !dbg !8574
  store volatile i32 %9, i32* %10, align 4, !dbg !8575
  %11 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !8576
  %12 = load volatile i32, i32* %11, align 4, !dbg !8576
  call void @llvm.dbg.value(metadata i32 %12, metadata !8565, metadata !DIExpression()), !dbg !8567
  %13 = and i32 %12, 65509, !dbg !8577
  %14 = or i32 %13, 26, !dbg !8577
  call void @llvm.dbg.value(metadata i32 %12, metadata !8565, metadata !DIExpression(DW_OP_constu, 26, DW_OP_or, DW_OP_stack_value)), !dbg !8567
  store volatile i32 %14, i32* %11, align 4, !dbg !8578
  %15 = zext i8 %3 to i32, !dbg !8579
  %16 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 16, !dbg !8580
  store volatile i32 %15, i32* %16, align 4, !dbg !8581
  %17 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 17, !dbg !8582
  store volatile i32 1, i32* %17, align 4, !dbg !8583
  %18 = and i32 %6, 65535, !dbg !8584
  store volatile i32 %18, i32* %5, align 4, !dbg !8585
  ret void, !dbg !8586
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_disable_flowcontrol(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !8587 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !8589, metadata !DIExpression()), !dbg !8591
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !8592
  %3 = load volatile i32, i32* %2, align 4, !dbg !8592
  call void @llvm.dbg.value(metadata i32 %3, metadata !8590, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8591
  store volatile i32 191, i32* %2, align 4, !dbg !8593
  %4 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !8594
  store volatile i32 0, i32* %4, align 4, !dbg !8595
  store volatile i32 0, i32* %2, align 4, !dbg !8596
  %5 = and i32 %3, 65535, !dbg !8597
  store volatile i32 %5, i32* %2, align 4, !dbg !8598
  ret void, !dbg !8599
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_fifo(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !8600 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !8602, metadata !DIExpression()), !dbg !8605
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !8606
  %3 = load volatile i32, i32* %2, align 4, !dbg !8606
  call void @llvm.dbg.value(metadata i32 %3, metadata !8604, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8605
  store volatile i32 191, i32* %2, align 4, !dbg !8607
  %4 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !8608
  %5 = load volatile i32, i32* %4, align 4, !dbg !8608
  call void @llvm.dbg.value(metadata i32 %5, metadata !8603, metadata !DIExpression()), !dbg !8605
  %6 = and i32 %5, 65519, !dbg !8609
  %7 = or i32 %6, 16, !dbg !8609
  call void @llvm.dbg.value(metadata i32 %5, metadata !8603, metadata !DIExpression(DW_OP_constu, 16, DW_OP_or, DW_OP_stack_value)), !dbg !8605
  store volatile i32 %7, i32* %4, align 4, !dbg !8610
  store volatile i32 0, i32* %2, align 4, !dbg !8611
  store volatile i32 135, i32* %4, align 4, !dbg !8612
  %8 = and i32 %3, 65535, !dbg !8613
  store volatile i32 %8, i32* %2, align 4, !dbg !8614
  ret void, !dbg !8615
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_sleep_mode(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !8616 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !8618, metadata !DIExpression()), !dbg !8619
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 18, !dbg !8620
  store volatile i32 1, i32* %2, align 4, !dbg !8621
  ret void, !dbg !8622
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_unmask_send_interrupt(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !8623 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !8625, metadata !DIExpression()), !dbg !8628
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !8629
  %3 = load volatile i32, i32* %2, align 4, !dbg !8629
  call void @llvm.dbg.value(metadata i32 %3, metadata !8627, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8628
  %4 = load volatile i32, i32* %2, align 4, !dbg !8630
  %5 = and i32 %4, -129, !dbg !8630
  store volatile i32 %5, i32* %2, align 4, !dbg !8630
  %6 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 1, i32 0, !dbg !8631
  %7 = load volatile i32, i32* %6, align 4, !dbg !8631
  call void @llvm.dbg.value(metadata i32 %7, metadata !8626, metadata !DIExpression()), !dbg !8628
  %8 = and i32 %7, 65533, !dbg !8632
  %9 = or i32 %8, 2, !dbg !8632
  call void @llvm.dbg.value(metadata i32 %7, metadata !8626, metadata !DIExpression(DW_OP_constu, 2, DW_OP_or, DW_OP_stack_value)), !dbg !8628
  store volatile i32 %9, i32* %6, align 4, !dbg !8633
  %10 = and i32 %3, 65535, !dbg !8634
  %11 = load volatile i32, i32* %2, align 4, !dbg !8635
  %12 = and i32 %10, %11, !dbg !8635
  store volatile i32 %12, i32* %2, align 4, !dbg !8635
  ret void, !dbg !8636
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_unmask_receive_interrupt(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !8637 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !8639, metadata !DIExpression()), !dbg !8642
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !8643
  %3 = load volatile i32, i32* %2, align 4, !dbg !8643
  call void @llvm.dbg.value(metadata i32 %3, metadata !8641, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8642
  %4 = load volatile i32, i32* %2, align 4, !dbg !8644
  %5 = and i32 %4, -129, !dbg !8644
  store volatile i32 %5, i32* %2, align 4, !dbg !8644
  %6 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 1, i32 0, !dbg !8645
  %7 = load volatile i32, i32* %6, align 4, !dbg !8645
  call void @llvm.dbg.value(metadata i32 %7, metadata !8640, metadata !DIExpression()), !dbg !8642
  %8 = and i32 %7, 65530, !dbg !8646
  %9 = or i32 %8, 5, !dbg !8646
  call void @llvm.dbg.value(metadata i32 %7, metadata !8640, metadata !DIExpression(DW_OP_constu, 5, DW_OP_or, DW_OP_stack_value)), !dbg !8642
  store volatile i32 %9, i32* %6, align 4, !dbg !8647
  %10 = and i32 %3, 65535, !dbg !8648
  %11 = load volatile i32, i32* %2, align 4, !dbg !8649
  %12 = and i32 %10, %11, !dbg !8649
  store volatile i32 %12, i32* %2, align 4, !dbg !8649
  ret void, !dbg !8650
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_purge_fifo(%struct.UART_REGISTER_T* noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !8651 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !8655, metadata !DIExpression()), !dbg !8658
  call void @llvm.dbg.value(metadata i32 %1, metadata !8656, metadata !DIExpression()), !dbg !8658
  call void @llvm.dbg.value(metadata i16 145, metadata !8657, metadata !DIExpression()), !dbg !8658
  %3 = icmp eq i32 %1, 0, !dbg !8659
  %4 = select i1 %3, i32 149, i32 147
  call void @llvm.dbg.value(metadata i16 undef, metadata !8657, metadata !DIExpression()), !dbg !8658
  %5 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !8661
  store volatile i32 %4, i32* %5, align 4, !dbg !8662
  ret void, !dbg !8663
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @uart_query_interrupt_type(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #11 !dbg !8664 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !8669, metadata !DIExpression()), !dbg !8673
  call void @llvm.dbg.value(metadata i32 0, metadata !8672, metadata !DIExpression()), !dbg !8673
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !8674
  %3 = load volatile i32, i32* %2, align 4, !dbg !8674
  call void @llvm.dbg.value(metadata i32 %3, metadata !8670, metadata !DIExpression()), !dbg !8673
  %4 = and i32 %3, 1, !dbg !8675
  %5 = icmp eq i32 %4, 0, !dbg !8675
  br i1 %5, label %6, label %16, !dbg !8677

6:                                                ; preds = %1
  %7 = and i32 %3, 63, !dbg !8678
  switch i32 %7, label %16 [
    i32 12, label %8
    i32 6, label %9
    i32 2, label %15
  ], !dbg !8679

8:                                                ; preds = %6
  call void @llvm.dbg.value(metadata i32 2, metadata !8672, metadata !DIExpression()), !dbg !8673
  br label %16, !dbg !8680

9:                                                ; preds = %6
  %10 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0, !dbg !8682
  %11 = load volatile i32, i32* %10, align 4, !dbg !8682
  call void @llvm.dbg.value(metadata i32 %11, metadata !8671, metadata !DIExpression()), !dbg !8673
  %12 = and i32 %11, 16, !dbg !8683
  %13 = icmp eq i32 %12, 0, !dbg !8683
  %14 = select i1 %13, i32 1, i32 3
  br label %16

15:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i32 5, metadata !8672, metadata !DIExpression()), !dbg !8673
  br label %16, !dbg !8685

16:                                               ; preds = %8, %15, %6, %9, %1
  %17 = phi i32 [ 0, %1 ], [ 0, %6 ], [ 5, %15 ], [ 2, %8 ], [ %14, %9 ], !dbg !8673
  ret i32 %17, !dbg !8686
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @uart_verify_error(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #11 !dbg !8687 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !8691, metadata !DIExpression()), !dbg !8694
  call void @llvm.dbg.value(metadata i32 0, metadata !8693, metadata !DIExpression()), !dbg !8694
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0, !dbg !8695
  %3 = load volatile i32, i32* %2, align 4, !dbg !8695
  call void @llvm.dbg.value(metadata i32 %3, metadata !8692, metadata !DIExpression()), !dbg !8694
  %4 = and i32 %3, 14, !dbg !8696
  %5 = icmp eq i32 %4, 0, !dbg !8696
  %6 = sext i1 %5 to i32, !dbg !8698
  call void @llvm.dbg.value(metadata i32 %6, metadata !8693, metadata !DIExpression()), !dbg !8694
  ret i32 %6, !dbg !8699
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @uart_clear_timeout_interrupt(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #11 !dbg !8700 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !8702, metadata !DIExpression()), !dbg !8704
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 19, !dbg !8705
  %3 = load volatile i32, i32* %2, align 4, !dbg !8705
  call void @llvm.dbg.value(metadata i32 %3, metadata !8703, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8704
  call void @llvm.dbg.value(metadata i32 %3, metadata !8703, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8704
  ret void, !dbg !8706
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_reset_default_value(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !8707 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !8709, metadata !DIExpression()), !dbg !8710
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !8711
  store volatile i32 191, i32* %2, align 4, !dbg !8712
  %3 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !8713
  store volatile i32 16, i32* %3, align 4, !dbg !8714
  %4 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 4, i32 0, !dbg !8715
  store volatile i32 0, i32* %4, align 4, !dbg !8716
  %5 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 6, !dbg !8717
  store volatile i32 0, i32* %5, align 4, !dbg !8718
  store volatile i32 128, i32* %2, align 4, !dbg !8719
  %6 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 0, i32 0, !dbg !8720
  store volatile i32 0, i32* %6, align 4, !dbg !8721
  %7 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 1, i32 0, !dbg !8722
  store volatile i32 0, i32* %7, align 4, !dbg !8723
  store volatile i32 0, i32* %2, align 4, !dbg !8724
  store volatile i32 0, i32* %7, align 4, !dbg !8725
  store volatile i32 0, i32* %3, align 4, !dbg !8726
  store volatile i32 191, i32* %2, align 4, !dbg !8727
  store volatile i32 0, i32* %3, align 4, !dbg !8728
  store volatile i32 0, i32* %2, align 4, !dbg !8729
  store volatile i32 0, i32* %4, align 4, !dbg !8730
  %8 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 7, i32 0, !dbg !8731
  store volatile i32 0, i32* %8, align 4, !dbg !8732
  %9 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 8, !dbg !8733
  store volatile i32 0, i32* %9, align 4, !dbg !8734
  %10 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 9, !dbg !8735
  store volatile i32 0, i32* %10, align 4, !dbg !8736
  %11 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 10, !dbg !8737
  store volatile i32 0, i32* %11, align 4, !dbg !8738
  %12 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 11, !dbg !8739
  store volatile i32 0, i32* %12, align 4, !dbg !8740
  %13 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 13, !dbg !8741
  store volatile i32 0, i32* %13, align 4, !dbg !8742
  %14 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 14, !dbg !8743
  store volatile i32 0, i32* %14, align 4, !dbg !8744
  %15 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 15, !dbg !8745
  store volatile i32 0, i32* %15, align 4, !dbg !8746
  %16 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 16, !dbg !8747
  store volatile i32 0, i32* %16, align 4, !dbg !8748
  %17 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 17, !dbg !8749
  store volatile i32 0, i32* %17, align 4, !dbg !8750
  %18 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 18, !dbg !8751
  store volatile i32 0, i32* %18, align 4, !dbg !8752
  %19 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 19, !dbg !8753
  store volatile i32 0, i32* %19, align 4, !dbg !8754
  store volatile i32 0, i32* %13, align 4, !dbg !8755
  %20 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 21, !dbg !8756
  store volatile i32 0, i32* %20, align 4, !dbg !8757
  %21 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 22, !dbg !8758
  store volatile i32 0, i32* %21, align 4, !dbg !8759
  ret void, !dbg !8760
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_query_empty(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !8761 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !8763, metadata !DIExpression()), !dbg !8764
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0
  br label %3, !dbg !8765

3:                                                ; preds = %3, %1
  %4 = load volatile i32, i32* %2, align 4, !dbg !8766
  %5 = and i32 %4, 64, !dbg !8767
  %6 = icmp eq i32 %5, 0, !dbg !8768
  br i1 %6, label %3, label %7, !dbg !8765, !llvm.loop !8769

7:                                                ; preds = %3
  ret void, !dbg !8771
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef %1) local_unnamed_addr #10 !dbg !8772 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8776, metadata !DIExpression()), !dbg !8779
  call void @llvm.dbg.value(metadata i32 %1, metadata !8777, metadata !DIExpression()), !dbg !8779
  call void @llvm.dbg.value(metadata i32 15, metadata !8778, metadata !DIExpression()), !dbg !8779
  switch i32 %0, label %15 [
    i32 0, label %3
    i32 1, label %6
    i32 2, label %9
    i32 3, label %12
  ], !dbg !8780

3:                                                ; preds = %2
  %4 = icmp eq i32 %1, 0, !dbg !8781
  %5 = select i1 %4, i32 14, i32 15
  br label %15

6:                                                ; preds = %2
  %7 = icmp eq i32 %1, 0, !dbg !8784
  %8 = select i1 %7, i32 8, i32 9
  br label %15

9:                                                ; preds = %2
  %10 = icmp eq i32 %1, 0, !dbg !8786
  %11 = select i1 %10, i32 10, i32 11
  br label %15

12:                                               ; preds = %2
  %13 = icmp eq i32 %1, 0, !dbg !8788
  %14 = select i1 %13, i32 12, i32 13
  br label %15

15:                                               ; preds = %12, %9, %6, %3, %2
  %16 = phi i32 [ 15, %2 ], [ %5, %3 ], [ %8, %6 ], [ %11, %9 ], [ %14, %12 ], !dbg !8779
  call void @llvm.dbg.value(metadata i32 %16, metadata !8778, metadata !DIExpression()), !dbg !8779
  ret i32 %16, !dbg !8790
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @uart_dma_channel_to_callback_data(i32 noundef %0, %struct.uart_dma_callback_data_t* nocapture noundef writeonly %1) local_unnamed_addr #6 !dbg !8791 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8801, metadata !DIExpression()), !dbg !8803
  call void @llvm.dbg.value(metadata %struct.uart_dma_callback_data_t* %1, metadata !8802, metadata !DIExpression()), !dbg !8803
  %3 = add i32 %0, -8, !dbg !8804
  %4 = icmp ult i32 %3, 8, !dbg !8804
  br i1 %4, label %5, label %12, !dbg !8804

5:                                                ; preds = %2
  %6 = getelementptr inbounds [8 x i8], [8 x i8]* @switch.table.uart_dma_channel_to_callback_data, i32 0, i32 %3, !dbg !8804
  %7 = load i8, i8* %6, align 1, !dbg !8804
  %8 = getelementptr inbounds [8 x i32], [8 x i32]* @switch.table.uart_dma_channel_to_callback_data.6, i32 0, i32 %3, !dbg !8804
  %9 = load i32, i32* %8, align 4, !dbg !8804
  %10 = getelementptr inbounds %struct.uart_dma_callback_data_t, %struct.uart_dma_callback_data_t* %1, i32 0, i32 0, !dbg !8805
  store i8 %7, i8* %10, align 4, !dbg !8805
  %11 = getelementptr inbounds %struct.uart_dma_callback_data_t, %struct.uart_dma_callback_data_t* %1, i32 0, i32 1, !dbg !8805
  store i32 %9, i32* %11, align 4, !dbg !8805
  br label %12, !dbg !8807

12:                                               ; preds = %2, %5
  ret void, !dbg !8807
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_enable_dma(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !8808 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !8812, metadata !DIExpression()), !dbg !8813
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 19, !dbg !8814
  store volatile i32 3, i32* %2, align 4, !dbg !8815
  ret void, !dbg !8816
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_interrupt_handler(i32 noundef %0) #0 !dbg !8817 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8819, metadata !DIExpression()), !dbg !8823
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* inttoptr (i32 -1609760768 to %struct.UART_REGISTER_T*), metadata !8822, metadata !DIExpression()), !dbg !8823
  %2 = add i32 %0, -30, !dbg !8824
  %3 = icmp ult i32 %2, 3, !dbg !8824
  %4 = add i32 %0, -29
  %5 = select i1 %3, i32 %4, i32 0, !dbg !8824
  call void @llvm.dbg.value(metadata i32 %5, metadata !8820, metadata !DIExpression()), !dbg !8823
  %6 = getelementptr inbounds [4 x %struct.UART_REGISTER_T*], [4 x %struct.UART_REGISTER_T*]* @g_uart_regbase, i32 0, i32 %5, !dbg !8825
  %7 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %6, align 4, !dbg !8825
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %7, metadata !8822, metadata !DIExpression()), !dbg !8823
  %8 = tail call i32 @uart_query_interrupt_type(%struct.UART_REGISTER_T* noundef %7) #22, !dbg !8826
  call void @llvm.dbg.value(metadata i32 %8, metadata !8821, metadata !DIExpression()), !dbg !8823
  switch i32 %8, label %13 [
    i32 2, label %9
    i32 1, label %10
    i32 4, label %14
    i32 0, label %14
    i32 3, label %11
    i32 5, label %12
  ], !dbg !8827

9:                                                ; preds = %1
  tail call void @uart_receive_handler(i32 noundef %5, i1 noundef zeroext true) #22, !dbg !8828
  br label %14, !dbg !8830

10:                                               ; preds = %1
  tail call void @uart_error_handler(i32 noundef %5) #22, !dbg !8831
  br label %14, !dbg !8832

11:                                               ; preds = %1
  tail call void @uart_purge_fifo(%struct.UART_REGISTER_T* noundef %7, i32 noundef 1) #22, !dbg !8833
  br label %14, !dbg !8834

12:                                               ; preds = %1
  tail call void @uart_send_handler(i32 noundef %5, i1 noundef zeroext true) #22, !dbg !8835
  br label %14, !dbg !8836

13:                                               ; preds = %1
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.4.101, i32 0, i32 0), i32 noundef 276, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.uart_interrupt_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.102, i32 0, i32 0)) #25, !dbg !8837
  unreachable, !dbg !8837

14:                                               ; preds = %12, %11, %1, %1, %10, %9
  ret void, !dbg !8838
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @i2c_set_frequency(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !8839 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8841, metadata !DIExpression()), !dbg !8849
  call void @llvm.dbg.value(metadata i32 %1, metadata !8842, metadata !DIExpression()), !dbg !8849
  call void @llvm.dbg.value(metadata i32 0, metadata !8843, metadata !DIExpression()), !dbg !8849
  %3 = getelementptr inbounds [4 x %struct.I2C_REGISTER_T*], [4 x %struct.I2C_REGISTER_T*]* @i2c_master_register, i32 0, i32 %0, !dbg !8850
  %4 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %3, align 4, !dbg !8850
  %5 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %4, i32 0, i32 21, !dbg !8851
  store volatile i16 0, i16* %5, align 2, !dbg !8852
  switch i32 %1, label %11 [
    i32 0, label %6
    i32 1, label %13
    i32 2, label %7
    i32 3, label %8
    i32 4, label %9
    i32 5, label %10
  ], !dbg !8853

6:                                                ; preds = %2
  store volatile i16 1, i16* %5, align 2, !dbg !8854
  call void @llvm.dbg.value(metadata i32 100, metadata !8843, metadata !DIExpression()), !dbg !8849
  br label %13, !dbg !8856

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 200, metadata !8843, metadata !DIExpression()), !dbg !8849
  br label %13, !dbg !8857

8:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 300, metadata !8843, metadata !DIExpression()), !dbg !8849
  br label %13, !dbg !8858

9:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 400, metadata !8843, metadata !DIExpression()), !dbg !8849
  br label %13, !dbg !8859

10:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 1000, metadata !8843, metadata !DIExpression()), !dbg !8849
  br label %13, !dbg !8860

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 %1, metadata !8843, metadata !DIExpression()), !dbg !8849
  %12 = shl i32 %1, 1, !dbg !8861
  br label %13, !dbg !8861

13:                                               ; preds = %2, %11, %10, %9, %8, %7, %6
  %14 = phi i32 [ %12, %11 ], [ 2000, %10 ], [ 800, %9 ], [ 600, %8 ], [ 400, %7 ], [ 200, %6 ], [ 200, %2 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !8843, metadata !DIExpression()), !dbg !8849
  call void @llvm.dbg.value(metadata i32 1, metadata !8845, metadata !DIExpression()), !dbg !8849
  call void @llvm.dbg.value(metadata i32 undef, metadata !8844, metadata !DIExpression()), !dbg !8849
  %15 = getelementptr inbounds [4 x i32], [4 x i32]* @g_i2c_source_clock_table, i32 0, i32 %0
  %16 = load i32, i32* %15, align 4
  br label %17, !dbg !8862

17:                                               ; preds = %13, %24
  %18 = phi i32 [ 1, %13 ], [ %25, %24 ]
  call void @llvm.dbg.value(metadata i32 %18, metadata !8845, metadata !DIExpression()), !dbg !8849
  %19 = mul i32 %18, %14, !dbg !8864
  call void @llvm.dbg.value(metadata i32 %19, metadata !8848, metadata !DIExpression()), !dbg !8849
  %20 = add i32 %19, -1, !dbg !8867
  %21 = add i32 %20, %16, !dbg !8868
  %22 = udiv i32 %21, %19, !dbg !8869
  call void @llvm.dbg.value(metadata i32 %22, metadata !8844, metadata !DIExpression()), !dbg !8849
  %23 = icmp ult i32 %22, 65, !dbg !8870
  br i1 %23, label %27, label %24, !dbg !8872

24:                                               ; preds = %17
  %25 = add nuw nsw i32 %18, 1, !dbg !8873
  call void @llvm.dbg.value(metadata i32 %22, metadata !8844, metadata !DIExpression()), !dbg !8849
  call void @llvm.dbg.value(metadata i32 %25, metadata !8845, metadata !DIExpression()), !dbg !8849
  %26 = icmp eq i32 %25, 9, !dbg !8874
  br i1 %26, label %27, label %17, !dbg !8862, !llvm.loop !8875

27:                                               ; preds = %17, %24
  %28 = phi i32 [ %18, %17 ], [ 9, %24 ], !dbg !8877
  call void @llvm.dbg.value(metadata i32 %22, metadata !8844, metadata !DIExpression()), !dbg !8849
  call void @llvm.dbg.value(metadata i32 %28, metadata !8845, metadata !DIExpression(DW_OP_plus_uconst, 16777215, DW_OP_stack_value)), !dbg !8849
  %29 = add i32 %22, 63, !dbg !8878
  call void @llvm.dbg.value(metadata i32 %22, metadata !8844, metadata !DIExpression(DW_OP_plus_uconst, 63, DW_OP_stack_value)), !dbg !8849
  %30 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %4, i32 0, i32 16, !dbg !8879
  %31 = load volatile i16, i16* %30, align 2, !dbg !8879
  %32 = and i16 %31, -1856, !dbg !8880
  call void @llvm.dbg.value(metadata i16 %32, metadata !8846, metadata !DIExpression(DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8849
  %33 = shl i32 %28, 8, !dbg !8881
  %34 = add i32 %33, 1792, !dbg !8881
  %35 = and i32 %34, 1792, !dbg !8882
  %36 = and i32 %29, 63, !dbg !8883
  %37 = or i32 %36, %35, !dbg !8884
  call void @llvm.dbg.value(metadata !DIArgList(i32 %37, i16 %32), metadata !8847, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !8849
  %38 = trunc i32 %37 to i16, !dbg !8885
  %39 = or i16 %32, %38, !dbg !8885
  store volatile i16 %39, i16* %30, align 2, !dbg !8886
  ret void, !dbg !8887
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @i2c_config_hardware(i32 noundef %0, i32 noundef %1, i8 noundef zeroext %2, %struct.i2c_transaction_size_t* nocapture noundef readonly %3) local_unnamed_addr #2 !dbg !8888 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8902, metadata !DIExpression()), !dbg !8906
  call void @llvm.dbg.value(metadata i32 %1, metadata !8903, metadata !DIExpression()), !dbg !8906
  call void @llvm.dbg.value(metadata i8 %2, metadata !8904, metadata !DIExpression()), !dbg !8906
  call void @llvm.dbg.value(metadata %struct.i2c_transaction_size_t* %3, metadata !8905, metadata !DIExpression()), !dbg !8906
  %5 = zext i8 %2 to i16, !dbg !8907
  %6 = getelementptr inbounds [4 x %struct.I2C_REGISTER_T*], [4 x %struct.I2C_REGISTER_T*]* @i2c_master_register, i32 0, i32 %0, !dbg !8908
  %7 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %6, align 4, !dbg !8908
  %8 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 2, !dbg !8909
  store volatile i16 %5, i16* %8, align 2, !dbg !8910
  %9 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 27, !dbg !8911
  store volatile i16 1, i16* %9, align 2, !dbg !8911
  %10 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 6, !dbg !8912
  store volatile i16 31, i16* %10, align 2, !dbg !8912
  switch i32 %1, label %117 [
    i32 14, label %100
    i32 13, label %89
    i32 6, label %11
    i32 0, label %12
    i32 7, label %21
    i32 1, label %22
    i32 8, label %31
    i32 2, label %32
    i32 9, label %41
    i32 3, label %42
    i32 10, label %51
    i32 4, label %52
    i32 12, label %78
    i32 5, label %65
    i32 11, label %64
  ], !dbg !8913

11:                                               ; preds = %4
  br label %12

12:                                               ; preds = %4, %11
  %13 = phi i16 [ 3, %11 ], [ 0, %4 ]
  %14 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 30, !dbg !8914
  store volatile i16 %13, i16* %14, align 2, !dbg !8914
  %15 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 8, !dbg !8914
  store volatile i16 32, i16* %15, align 2, !dbg !8914
  %16 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 0, !dbg !8917
  %17 = load i32, i32* %16, align 4, !dbg !8917
  %18 = trunc i32 %17 to i16, !dbg !8918
  %19 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 10, !dbg !8919
  store volatile i16 %18, i16* %19, align 2, !dbg !8920
  %20 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 12, !dbg !8921
  store volatile i16 1, i16* %20, align 2, !dbg !8922
  br label %114, !dbg !8923

21:                                               ; preds = %4
  br label %22

22:                                               ; preds = %4, %21
  %23 = phi i16 [ 3, %21 ], [ 0, %4 ]
  %24 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 30, !dbg !8924
  store volatile i16 %23, i16* %24, align 2, !dbg !8924
  %25 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 8, !dbg !8924
  store volatile i16 36, i16* %25, align 2, !dbg !8924
  %26 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 0, !dbg !8926
  %27 = load i32, i32* %26, align 4, !dbg !8926
  %28 = trunc i32 %27 to i16, !dbg !8927
  %29 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 10, !dbg !8928
  store volatile i16 %28, i16* %29, align 2, !dbg !8929
  %30 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 12, !dbg !8930
  store volatile i16 1, i16* %30, align 2, !dbg !8931
  br label %114, !dbg !8932

31:                                               ; preds = %4
  br label %32

32:                                               ; preds = %4, %31
  %33 = phi i16 [ 3, %31 ], [ 0, %4 ]
  %34 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 30, !dbg !8933
  store volatile i16 %33, i16* %34, align 2, !dbg !8933
  %35 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 8, !dbg !8933
  store volatile i16 32, i16* %35, align 2, !dbg !8933
  %36 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 1, !dbg !8935
  %37 = load i32, i32* %36, align 4, !dbg !8935
  %38 = trunc i32 %37 to i16, !dbg !8936
  %39 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 10, !dbg !8937
  store volatile i16 %38, i16* %39, align 2, !dbg !8938
  %40 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 12, !dbg !8939
  store volatile i16 1, i16* %40, align 2, !dbg !8940
  br label %114, !dbg !8941

41:                                               ; preds = %4
  br label %42

42:                                               ; preds = %4, %41
  %43 = phi i16 [ 3, %41 ], [ 0, %4 ]
  %44 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 30, !dbg !8942
  store volatile i16 %43, i16* %44, align 2, !dbg !8942
  %45 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 8, !dbg !8942
  store volatile i16 36, i16* %45, align 2, !dbg !8942
  %46 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 10, !dbg !8944
  store volatile i16 1, i16* %46, align 2, !dbg !8945
  %47 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 1, !dbg !8946
  %48 = load i32, i32* %47, align 4, !dbg !8946
  %49 = trunc i32 %48 to i16, !dbg !8947
  %50 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 12, !dbg !8948
  store volatile i16 %49, i16* %50, align 2, !dbg !8949
  br label %114, !dbg !8950

51:                                               ; preds = %4
  br label %52

52:                                               ; preds = %4, %51
  %53 = phi i16 [ 3, %51 ], [ 0, %4 ]
  %54 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 30, !dbg !8951
  store volatile i16 %53, i16* %54, align 2, !dbg !8951
  %55 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 8, !dbg !8951
  store volatile i16 114, i16* %55, align 2, !dbg !8951
  %56 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 0, !dbg !8953
  %57 = load i32, i32* %56, align 4, !dbg !8953
  %58 = trunc i32 %57 to i16, !dbg !8954
  %59 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 10, !dbg !8955
  store volatile i16 %58, i16* %59, align 2, !dbg !8956
  %60 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 12, !dbg !8957
  store volatile i16 2, i16* %60, align 2, !dbg !8958
  %61 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 1, !dbg !8959
  %62 = load i32, i32* %61, align 4, !dbg !8959
  %63 = trunc i32 %62 to i16, !dbg !8960
  br label %114, !dbg !8961

64:                                               ; preds = %4
  br label %65

65:                                               ; preds = %4, %64
  %66 = phi i16 [ 3, %64 ], [ 0, %4 ]
  %67 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 30, !dbg !8962
  store volatile i16 %66, i16* %67, align 2, !dbg !8962
  %68 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 8, !dbg !8962
  store volatile i16 118, i16* %68, align 2, !dbg !8962
  %69 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 0, !dbg !8964
  %70 = load i32, i32* %69, align 4, !dbg !8964
  %71 = trunc i32 %70 to i16, !dbg !8965
  %72 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 10, !dbg !8966
  store volatile i16 %71, i16* %72, align 2, !dbg !8967
  %73 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 1, !dbg !8968
  %74 = load i32, i32* %73, align 4, !dbg !8968
  %75 = trunc i32 %74 to i16, !dbg !8969
  %76 = add i16 %75, 1, !dbg !8969
  %77 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 12, !dbg !8970
  store volatile i16 %76, i16* %77, align 2, !dbg !8971
  br label %114, !dbg !8972

78:                                               ; preds = %4
  %79 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 30, !dbg !8973
  store volatile i16 3, i16* %79, align 2, !dbg !8974
  %80 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 8, !dbg !8975
  store volatile i16 38, i16* %80, align 2, !dbg !8976
  %81 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 2, !dbg !8977
  %82 = load i32, i32* %81, align 4, !dbg !8977
  %83 = trunc i32 %82 to i16, !dbg !8978
  %84 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 10, !dbg !8979
  store volatile i16 %83, i16* %84, align 2, !dbg !8980
  %85 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 4, !dbg !8981
  %86 = load i32, i32* %85, align 4, !dbg !8981
  %87 = trunc i32 %86 to i16, !dbg !8982
  %88 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 12, !dbg !8983
  store volatile i16 %87, i16* %88, align 2, !dbg !8984
  br label %114, !dbg !8985

89:                                               ; preds = %4
  %90 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 30, !dbg !8986
  store volatile i16 3, i16* %90, align 2, !dbg !8987
  %91 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 8, !dbg !8988
  store volatile i16 38, i16* %91, align 2, !dbg !8989
  %92 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 2, !dbg !8990
  %93 = load i32, i32* %92, align 4, !dbg !8990
  %94 = trunc i32 %93 to i16, !dbg !8991
  %95 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 10, !dbg !8992
  store volatile i16 %94, i16* %95, align 2, !dbg !8993
  %96 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 4, !dbg !8994
  %97 = load i32, i32* %96, align 4, !dbg !8994
  %98 = trunc i32 %97 to i16, !dbg !8995
  %99 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 12, !dbg !8996
  store volatile i16 %98, i16* %99, align 2, !dbg !8997
  br label %114, !dbg !8998

100:                                              ; preds = %4
  %101 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 30, !dbg !8999
  store volatile i16 3, i16* %101, align 2, !dbg !9000
  %102 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 8, !dbg !9001
  store volatile i16 118, i16* %102, align 2, !dbg !9002
  %103 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 2, !dbg !9003
  %104 = load i32, i32* %103, align 4, !dbg !9003
  %105 = trunc i32 %104 to i16, !dbg !9004
  %106 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 10, !dbg !9005
  store volatile i16 %105, i16* %106, align 2, !dbg !9006
  %107 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 4, !dbg !9007
  %108 = load i32, i32* %107, align 4, !dbg !9007
  %109 = trunc i32 %108 to i16, !dbg !9008
  %110 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 12, !dbg !9009
  store volatile i16 %109, i16* %110, align 2, !dbg !9010
  %111 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 3, !dbg !9011
  %112 = load i32, i32* %111, align 4, !dbg !9011
  %113 = trunc i32 %112 to i16, !dbg !9012
  br label %114, !dbg !9013

114:                                              ; preds = %12, %22, %32, %42, %52, %65, %78, %89, %100
  %115 = phi i16 [ %113, %100 ], [ 1, %89 ], [ 1, %78 ], [ 1, %65 ], [ %63, %52 ], [ 1, %42 ], [ 1, %32 ], [ 1, %22 ], [ 1, %12 ]
  %116 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 45, !dbg !9014
  store volatile i16 %115, i16* %116, align 2, !dbg !9014
  br label %117, !dbg !9015

117:                                              ; preds = %114, %4
  ret void, !dbg !9015
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @i2c_write_fifo(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #2 !dbg !9016 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9020, metadata !DIExpression()), !dbg !9024
  call void @llvm.dbg.value(metadata i8* %1, metadata !9021, metadata !DIExpression()), !dbg !9024
  call void @llvm.dbg.value(metadata i32 %2, metadata !9022, metadata !DIExpression()), !dbg !9024
  call void @llvm.dbg.value(metadata i32 0, metadata !9023, metadata !DIExpression()), !dbg !9024
  %4 = icmp eq i32 %2, 0, !dbg !9025
  br i1 %4, label %16, label %5, !dbg !9028

5:                                                ; preds = %3
  %6 = getelementptr inbounds [4 x %struct.I2C_REGISTER_T*], [4 x %struct.I2C_REGISTER_T*]* @i2c_master_register, i32 0, i32 %0
  %7 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %6, align 4
  %8 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 0
  br label %9, !dbg !9028

9:                                                ; preds = %5, %9
  %10 = phi i32 [ 0, %5 ], [ %14, %9 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !9023, metadata !DIExpression()), !dbg !9024
  %11 = getelementptr inbounds i8, i8* %1, i32 %10, !dbg !9029
  %12 = load i8, i8* %11, align 1, !dbg !9031
  %13 = zext i8 %12 to i16, !dbg !9031
  store volatile i16 %13, i16* %8, align 2, !dbg !9032
  %14 = add nuw i32 %10, 1, !dbg !9033
  call void @llvm.dbg.value(metadata i32 %14, metadata !9023, metadata !DIExpression()), !dbg !9024
  %15 = icmp eq i32 %14, %2, !dbg !9025
  br i1 %15, label %16, label %9, !dbg !9028, !llvm.loop !9034

16:                                               ; preds = %9, %3
  ret void, !dbg !9036
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @i2c_read_fifo(i32 noundef %0, i8* nocapture noundef writeonly %1, i32 noundef %2) local_unnamed_addr #2 !dbg !9037 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9041, metadata !DIExpression()), !dbg !9045
  call void @llvm.dbg.value(metadata i8* %1, metadata !9042, metadata !DIExpression()), !dbg !9045
  call void @llvm.dbg.value(metadata i32 %2, metadata !9043, metadata !DIExpression()), !dbg !9045
  call void @llvm.dbg.value(metadata i32 0, metadata !9044, metadata !DIExpression()), !dbg !9045
  %4 = icmp eq i32 %2, 0, !dbg !9046
  br i1 %4, label %16, label %5, !dbg !9049

5:                                                ; preds = %3
  %6 = getelementptr inbounds [4 x %struct.I2C_REGISTER_T*], [4 x %struct.I2C_REGISTER_T*]* @i2c_master_register, i32 0, i32 %0
  %7 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %6, align 4
  %8 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 0
  br label %9, !dbg !9049

9:                                                ; preds = %5, %9
  %10 = phi i32 [ 0, %5 ], [ %14, %9 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !9044, metadata !DIExpression()), !dbg !9045
  %11 = load volatile i16, i16* %8, align 2, !dbg !9050
  %12 = trunc i16 %11 to i8, !dbg !9052
  %13 = getelementptr inbounds i8, i8* %1, i32 %10, !dbg !9053
  store i8 %12, i8* %13, align 1, !dbg !9054
  %14 = add nuw i32 %10, 1, !dbg !9055
  call void @llvm.dbg.value(metadata i32 %14, metadata !9044, metadata !DIExpression()), !dbg !9045
  %15 = icmp eq i32 %14, %2, !dbg !9046
  br i1 %15, label %16, label %9, !dbg !9049, !llvm.loop !9056

16:                                               ; preds = %9, %3
  ret void, !dbg !9058
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @i2c_get_transaction_status(i32 noundef %0) local_unnamed_addr #2 !dbg !9059 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9064, metadata !DIExpression()), !dbg !9067
  call void @llvm.dbg.value(metadata i32 -4, metadata !9066, metadata !DIExpression()), !dbg !9067
  %2 = getelementptr inbounds [4 x %struct.I2C_REGISTER_T*], [4 x %struct.I2C_REGISTER_T*]* @i2c_master_register, i32 0, i32 %0, !dbg !9068
  %3 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %2, align 4, !dbg !9068
  %4 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %3, i32 0, i32 6, !dbg !9069
  %5 = load volatile i16, i16* %4, align 2, !dbg !9069
  call void @llvm.dbg.value(metadata i16 %5, metadata !9065, metadata !DIExpression()), !dbg !9067
  %6 = zext i16 %5 to i32, !dbg !9070
  %7 = and i32 %6, 2, !dbg !9072
  %8 = icmp eq i32 %7, 0, !dbg !9073
  br i1 %8, label %9, label %18, !dbg !9074

9:                                                ; preds = %1
  %10 = and i32 %6, 4, !dbg !9075
  %11 = icmp eq i32 %10, 0, !dbg !9077
  br i1 %11, label %12, label %18, !dbg !9078

12:                                               ; preds = %9
  %13 = and i32 %6, 16, !dbg !9079
  %14 = icmp eq i32 %13, 0, !dbg !9081
  br i1 %14, label %15, label %18, !dbg !9082

15:                                               ; preds = %12
  %16 = icmp eq i16 %5, 1, !dbg !9083
  %17 = select i1 %16, i32 0, i32 -4, !dbg !9085
  br label %18, !dbg !9085

18:                                               ; preds = %15, %12, %9, %1
  %19 = phi i32 [ -3, %1 ], [ -2, %9 ], [ -1, %12 ], [ %17, %15 ], !dbg !9067
  call void @llvm.dbg.value(metadata i32 %19, metadata !9066, metadata !DIExpression()), !dbg !9067
  store volatile i16 31, i16* %4, align 2, !dbg !9086
  ret i32 %19, !dbg !9087
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pmic_i2c_init(i32 noundef %0, %struct.anon* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !9088 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9099, metadata !DIExpression()), !dbg !9101
  call void @llvm.dbg.value(metadata %struct.anon* %1, metadata !9100, metadata !DIExpression()), !dbg !9101
  %3 = icmp eq i32 %0, 0, !dbg !9102
  br i1 %3, label %4, label %11, !dbg !9104

4:                                                ; preds = %2
  %5 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @g_i2c_pdn_table, i32 0, i32 3), align 4, !dbg !9105
  %6 = tail call i32 @hal_clock_enable(i32 noundef %5) #22, !dbg !9106
  %7 = getelementptr inbounds %struct.anon, %struct.anon* %1, i32 0, i32 0, !dbg !9107
  %8 = load i32, i32* %7, align 4, !dbg !9107
  tail call void @i2c_set_frequency(i32 noundef 3, i32 noundef %8) #22, !dbg !9108
  %9 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @g_i2c_pdn_table, i32 0, i32 3), align 4, !dbg !9109
  %10 = tail call i32 @hal_clock_disable(i32 noundef %9) #22, !dbg !9110
  br label %11, !dbg !9111

11:                                               ; preds = %2, %4
  %12 = phi i32 [ 0, %4 ], [ -102, %2 ], !dbg !9101
  ret i32 %12, !dbg !9112
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pmic_i2c_send_polling(i32 noundef %0, i8 noundef zeroext %1, i8* noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !9113 {
  %5 = alloca %struct.i2c_transaction_size_t, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !9117, metadata !DIExpression()), !dbg !9131
  call void @llvm.dbg.value(metadata i8 %1, metadata !9118, metadata !DIExpression()), !dbg !9131
  call void @llvm.dbg.value(metadata i8* %2, metadata !9119, metadata !DIExpression()), !dbg !9131
  call void @llvm.dbg.value(metadata i32 %3, metadata !9120, metadata !DIExpression()), !dbg !9131
  %6 = bitcast %struct.i2c_transaction_size_t* %5 to i8*, !dbg !9132
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %6) #24, !dbg !9132
  call void @llvm.dbg.declare(metadata %struct.i2c_transaction_size_t* %5, metadata !9122, metadata !DIExpression()), !dbg !9133
  %7 = icmp eq i32 %0, 0, !dbg !9134
  br i1 %7, label %8, label %32, !dbg !9136

8:                                                ; preds = %4
  %9 = icmp eq i8* %2, null, !dbg !9137
  %10 = icmp ugt i32 %3, 8
  %11 = or i1 %9, %10, !dbg !9139
  br i1 %11, label %32, label %12, !dbg !9139

12:                                               ; preds = %8
  %13 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @g_i2c_pdn_table, i32 0, i32 3), align 4, !dbg !9140
  %14 = tail call i32 @hal_clock_enable(i32 noundef %13) #22, !dbg !9141
  %15 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** getelementptr inbounds ([4 x %struct.I2C_REGISTER_T*], [4 x %struct.I2C_REGISTER_T*]* @i2c_master_register, i32 0, i32 3), align 4, !dbg !9142
  %16 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %15, i32 0, i32 4, !dbg !9142
  store volatile i16 0, i16* %16, align 2, !dbg !9142
  %17 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %5, i32 0, i32 0, !dbg !9143
  store i32 %3, i32* %17, align 4, !dbg !9144
  %18 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %5, i32 0, i32 1, !dbg !9145
  store i32 0, i32* %18, align 4, !dbg !9146
  %19 = shl i8 %1, 1, !dbg !9147
  call void @i2c_config_hardware(i32 noundef 3, i32 noundef 0, i8 noundef zeroext %19, %struct.i2c_transaction_size_t* noundef nonnull %5) #22, !dbg !9148
  call void @i2c_write_fifo(i32 noundef 3, i8* noundef nonnull %2, i32 noundef %3) #22, !dbg !9149
  %20 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** getelementptr inbounds ([4 x %struct.I2C_REGISTER_T*], [4 x %struct.I2C_REGISTER_T*]* @i2c_master_register, i32 0, i32 3), align 4, !dbg !9150
  %21 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %20, i32 0, i32 18, !dbg !9150
  store volatile i16 1, i16* %21, align 2, !dbg !9150
  %22 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %20, i32 0, i32 6
  br label %23, !dbg !9151

23:                                               ; preds = %23, %12
  %24 = load volatile i16, i16* %22, align 2, !dbg !9152
  %25 = icmp eq i16 %24, 0, !dbg !9153
  br i1 %25, label %23, label %26, !dbg !9151, !llvm.loop !9154

26:                                               ; preds = %23
  %27 = call i32 @i2c_get_transaction_status(i32 noundef 3) #22, !dbg !9156
  call void @llvm.dbg.value(metadata i32 %27, metadata !9121, metadata !DIExpression()), !dbg !9131
  %28 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @g_i2c_pdn_table, i32 0, i32 3), align 4, !dbg !9157
  %29 = call i32 @hal_clock_disable(i32 noundef %28) #22, !dbg !9158
  %30 = icmp eq i32 %27, 0, !dbg !9159
  br i1 %30, label %32, label %31, !dbg !9161

31:                                               ; preds = %26
  call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @__FUNCTION__.pmic_i2c_send_polling, i32 0, i32 0), i32 noundef 126, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.103, i32 0, i32 0), i32 noundef %27) #22, !dbg !9162
  br label %32, !dbg !9164

32:                                               ; preds = %26, %8, %4, %31
  %33 = phi i32 [ %27, %31 ], [ -102, %4 ], [ -101, %8 ], [ 0, %26 ], !dbg !9131
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %6) #24, !dbg !9165
  ret i32 %33, !dbg !9165
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pmic_i2c_receive_polling(i32 noundef %0, i8 noundef zeroext %1, i8* noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !9166 {
  %5 = alloca %struct.i2c_transaction_size_t, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !9170, metadata !DIExpression()), !dbg !9176
  call void @llvm.dbg.value(metadata i8 %1, metadata !9171, metadata !DIExpression()), !dbg !9176
  call void @llvm.dbg.value(metadata i8* %2, metadata !9172, metadata !DIExpression()), !dbg !9176
  call void @llvm.dbg.value(metadata i32 %3, metadata !9173, metadata !DIExpression()), !dbg !9176
  %6 = bitcast %struct.i2c_transaction_size_t* %5 to i8*, !dbg !9177
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %6) #24, !dbg !9177
  call void @llvm.dbg.declare(metadata %struct.i2c_transaction_size_t* %5, metadata !9175, metadata !DIExpression()), !dbg !9178
  %7 = icmp eq i32 %0, 0, !dbg !9179
  br i1 %7, label %8, label %35, !dbg !9181

8:                                                ; preds = %4
  %9 = icmp eq i8* %2, null, !dbg !9182
  %10 = icmp ugt i32 %3, 8
  %11 = or i1 %9, %10, !dbg !9184
  br i1 %11, label %35, label %12, !dbg !9184

12:                                               ; preds = %8
  %13 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @g_i2c_pdn_table, i32 0, i32 3), align 4, !dbg !9185
  %14 = tail call i32 @hal_clock_enable(i32 noundef %13) #22, !dbg !9186
  %15 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** getelementptr inbounds ([4 x %struct.I2C_REGISTER_T*], [4 x %struct.I2C_REGISTER_T*]* @i2c_master_register, i32 0, i32 3), align 4, !dbg !9187
  %16 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %15, i32 0, i32 4, !dbg !9187
  store volatile i16 0, i16* %16, align 2, !dbg !9187
  %17 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %5, i32 0, i32 0, !dbg !9188
  store i32 0, i32* %17, align 4, !dbg !9189
  %18 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %5, i32 0, i32 1, !dbg !9190
  store i32 %3, i32* %18, align 4, !dbg !9191
  %19 = shl i8 %1, 1, !dbg !9192
  %20 = or i8 %19, 1, !dbg !9192
  call void @i2c_config_hardware(i32 noundef 3, i32 noundef 2, i8 noundef zeroext %20, %struct.i2c_transaction_size_t* noundef nonnull %5) #22, !dbg !9193
  %21 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** getelementptr inbounds ([4 x %struct.I2C_REGISTER_T*], [4 x %struct.I2C_REGISTER_T*]* @i2c_master_register, i32 0, i32 3), align 4, !dbg !9194
  %22 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %21, i32 0, i32 18, !dbg !9194
  store volatile i16 1, i16* %22, align 2, !dbg !9194
  %23 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %21, i32 0, i32 6
  br label %24, !dbg !9195

24:                                               ; preds = %24, %12
  %25 = load volatile i16, i16* %23, align 2, !dbg !9196
  %26 = icmp eq i16 %25, 0, !dbg !9197
  br i1 %26, label %24, label %27, !dbg !9195, !llvm.loop !9198

27:                                               ; preds = %24
  %28 = call i32 @i2c_get_transaction_status(i32 noundef 3) #22, !dbg !9200
  call void @llvm.dbg.value(metadata i32 %28, metadata !9174, metadata !DIExpression()), !dbg !9176
  %29 = icmp eq i32 %28, 0, !dbg !9201
  br i1 %29, label %30, label %31, !dbg !9203

30:                                               ; preds = %27
  call void @i2c_read_fifo(i32 noundef 3, i8* noundef %2, i32 noundef %3) #22, !dbg !9204
  br label %31, !dbg !9206

31:                                               ; preds = %27, %30
  %32 = phi i32 [ 0, %30 ], [ %28, %27 ]
  %33 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @g_i2c_pdn_table, i32 0, i32 3), align 4, !dbg !9207
  %34 = call i32 @hal_clock_disable(i32 noundef %33) #22, !dbg !9207
  br label %35, !dbg !9208

35:                                               ; preds = %31, %8, %4
  %36 = phi i32 [ -102, %4 ], [ -101, %8 ], [ %32, %31 ], !dbg !9176
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %6) #24, !dbg !9208
  ret i32 %36, !dbg !9208
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pmic_i2c_send_to_receive_polling(i32 noundef %0, %struct.pmic_i2c_send_to_receive_config_t* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !9209 {
  %3 = alloca %struct.i2c_transaction_size_t, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !9222, metadata !DIExpression()), !dbg !9226
  call void @llvm.dbg.value(metadata %struct.pmic_i2c_send_to_receive_config_t* %1, metadata !9223, metadata !DIExpression()), !dbg !9226
  %4 = bitcast %struct.i2c_transaction_size_t* %3 to i8*, !dbg !9227
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %4) #24, !dbg !9227
  call void @llvm.dbg.declare(metadata %struct.i2c_transaction_size_t* %3, metadata !9225, metadata !DIExpression()), !dbg !9228
  %5 = icmp eq i32 %0, 0, !dbg !9229
  br i1 %5, label %6, label %53, !dbg !9231

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.pmic_i2c_send_to_receive_config_t, %struct.pmic_i2c_send_to_receive_config_t* %1, i32 0, i32 1, !dbg !9232
  %8 = load i8*, i8** %7, align 4, !dbg !9232
  %9 = icmp eq i8* %8, null, !dbg !9234
  br i1 %9, label %53, label %10, !dbg !9235

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.pmic_i2c_send_to_receive_config_t, %struct.pmic_i2c_send_to_receive_config_t* %1, i32 0, i32 3, !dbg !9236
  %12 = load i8*, i8** %11, align 4, !dbg !9236
  %13 = icmp eq i8* %12, null, !dbg !9237
  br i1 %13, label %53, label %14, !dbg !9238

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.pmic_i2c_send_to_receive_config_t, %struct.pmic_i2c_send_to_receive_config_t* %1, i32 0, i32 2, !dbg !9239
  %16 = load i32, i32* %15, align 4, !dbg !9239
  %17 = icmp ugt i32 %16, 8, !dbg !9241
  br i1 %17, label %53, label %18, !dbg !9242

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.pmic_i2c_send_to_receive_config_t, %struct.pmic_i2c_send_to_receive_config_t* %1, i32 0, i32 4, !dbg !9243
  %20 = load i32, i32* %19, align 4, !dbg !9243
  %21 = icmp ugt i32 %20, 8, !dbg !9244
  br i1 %21, label %53, label %22, !dbg !9245

22:                                               ; preds = %18
  %23 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @g_i2c_pdn_table, i32 0, i32 3), align 4, !dbg !9246
  %24 = tail call i32 @hal_clock_enable(i32 noundef %23) #22, !dbg !9247
  %25 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** getelementptr inbounds ([4 x %struct.I2C_REGISTER_T*], [4 x %struct.I2C_REGISTER_T*]* @i2c_master_register, i32 0, i32 3), align 4, !dbg !9248
  %26 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %25, i32 0, i32 4, !dbg !9248
  store volatile i16 0, i16* %26, align 2, !dbg !9248
  %27 = load i32, i32* %15, align 4, !dbg !9249
  %28 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 0, !dbg !9250
  store i32 %27, i32* %28, align 4, !dbg !9251
  %29 = load i32, i32* %19, align 4, !dbg !9252
  %30 = getelementptr inbounds %struct.i2c_transaction_size_t, %struct.i2c_transaction_size_t* %3, i32 0, i32 1, !dbg !9253
  store i32 %29, i32* %30, align 4, !dbg !9254
  %31 = getelementptr inbounds %struct.pmic_i2c_send_to_receive_config_t, %struct.pmic_i2c_send_to_receive_config_t* %1, i32 0, i32 0, !dbg !9255
  %32 = load i8, i8* %31, align 4, !dbg !9255
  %33 = shl i8 %32, 1, !dbg !9255
  call void @i2c_config_hardware(i32 noundef 3, i32 noundef 4, i8 noundef zeroext %33, %struct.i2c_transaction_size_t* noundef nonnull %3) #22, !dbg !9256
  %34 = load i8*, i8** %7, align 4, !dbg !9257
  %35 = load i32, i32* %15, align 4, !dbg !9258
  call void @i2c_write_fifo(i32 noundef 3, i8* noundef %34, i32 noundef %35) #22, !dbg !9259
  %36 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** getelementptr inbounds ([4 x %struct.I2C_REGISTER_T*], [4 x %struct.I2C_REGISTER_T*]* @i2c_master_register, i32 0, i32 3), align 4, !dbg !9260
  %37 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %36, i32 0, i32 18, !dbg !9260
  store volatile i16 1, i16* %37, align 2, !dbg !9260
  %38 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %36, i32 0, i32 6
  br label %39, !dbg !9261

39:                                               ; preds = %39, %22
  %40 = load volatile i16, i16* %38, align 2, !dbg !9262
  %41 = icmp eq i16 %40, 0, !dbg !9263
  br i1 %41, label %39, label %42, !dbg !9261, !llvm.loop !9264

42:                                               ; preds = %39
  %43 = call i32 @i2c_get_transaction_status(i32 noundef 3) #22, !dbg !9266
  call void @llvm.dbg.value(metadata i32 %43, metadata !9224, metadata !DIExpression()), !dbg !9226
  %44 = icmp eq i32 %43, 0, !dbg !9267
  br i1 %44, label %46, label %45, !dbg !9269

45:                                               ; preds = %42
  call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @__FUNCTION__.pmic_i2c_send_to_receive_polling, i32 0, i32 0), i32 noundef 227, i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1.104, i32 0, i32 0), i32 noundef %43) #22, !dbg !9270
  br label %49, !dbg !9272

46:                                               ; preds = %42
  %47 = load i8*, i8** %11, align 4, !dbg !9273
  %48 = load i32, i32* %19, align 4, !dbg !9275
  call void @i2c_read_fifo(i32 noundef 3, i8* noundef %47, i32 noundef %48) #22, !dbg !9276
  br label %49, !dbg !9277

49:                                               ; preds = %45, %46
  %50 = phi i32 [ 0, %46 ], [ %43, %45 ]
  %51 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @g_i2c_pdn_table, i32 0, i32 3), align 4, !dbg !9278
  %52 = call i32 @hal_clock_disable(i32 noundef %51) #22, !dbg !9278
  br label %53, !dbg !9279

53:                                               ; preds = %49, %14, %18, %6, %10, %2
  %54 = phi i32 [ -102, %2 ], [ -101, %10 ], [ -101, %6 ], [ -101, %18 ], [ -101, %14 ], [ %50, %49 ], !dbg !9226
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %4) #24, !dbg !9279
  ret i32 %54, !dbg !9279
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_init() local_unnamed_addr #2 !dbg !1278 {
  %1 = load i1, i1* @hal_nvic_init.priority_set, align 4, !dbg !9280
  br i1 %1, label %9, label %2, !dbg !9282

2:                                                ; preds = %0, %2
  %3 = phi i32 [ %6, %2 ], [ 0, %0 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !1368, metadata !DIExpression()), !dbg !9283
  %4 = getelementptr inbounds [64 x i32], [64 x i32]* @defualt_irq_priority, i32 0, i32 %3, !dbg !9284
  %5 = load i32, i32* %4, align 4, !dbg !9284
  tail call fastcc void @NVIC_SetPriority(i32 noundef %3, i32 noundef %5) #23, !dbg !9289
  %6 = add nuw nsw i32 %3, 1, !dbg !9290
  call void @llvm.dbg.value(metadata i32 %6, metadata !1368, metadata !DIExpression()), !dbg !9283
  %7 = icmp eq i32 %6, 64, !dbg !9291
  br i1 %7, label %8, label %2, !dbg !9292, !llvm.loop !9293

8:                                                ; preds = %2
  store i1 true, i1* @hal_nvic_init.priority_set, align 4, !dbg !9295
  br label %9, !dbg !9296

9:                                                ; preds = %8, %0
  ret i32 0, !dbg !9297
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #2 !dbg !9298 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9302, metadata !DIExpression()), !dbg !9304
  call void @llvm.dbg.value(metadata i32 %1, metadata !9303, metadata !DIExpression()), !dbg !9304
  %3 = trunc i32 %1 to i8, !dbg !9305
  %4 = shl i8 %3, 2, !dbg !9305
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !9308
  store volatile i8 %4, i8* %5, align 1, !dbg !9309
  ret void, !dbg !9310
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_enable_irq(i32 noundef %0) local_unnamed_addr #2 !dbg !9311 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9315, metadata !DIExpression()), !dbg !9317
  call void @llvm.dbg.value(metadata i32 -1, metadata !9316, metadata !DIExpression()), !dbg !9317
  %2 = icmp ugt i32 %0, 63, !dbg !9318
  br i1 %2, label %4, label %3, !dbg !9318

3:                                                ; preds = %1
  tail call fastcc void @NVIC_EnableIRQ(i32 noundef %0) #23, !dbg !9320
  call void @llvm.dbg.value(metadata i32 0, metadata !9316, metadata !DIExpression()), !dbg !9317
  br label %4, !dbg !9322

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !9317
  ret i32 %5, !dbg !9323
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #2 !dbg !9324 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9328, metadata !DIExpression()), !dbg !9329
  %2 = and i32 %0, 31, !dbg !9330
  %3 = shl nuw i32 1, %2, !dbg !9331
  %4 = lshr i32 %0, 5, !dbg !9332
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %4, !dbg !9333
  store volatile i32 %3, i32* %5, align 4, !dbg !9334
  ret void, !dbg !9335
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_disable_irq(i32 noundef %0) local_unnamed_addr #2 !dbg !9336 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9338, metadata !DIExpression()), !dbg !9340
  call void @llvm.dbg.value(metadata i32 -1, metadata !9339, metadata !DIExpression()), !dbg !9340
  %2 = icmp ugt i32 %0, 63, !dbg !9341
  br i1 %2, label %4, label %3, !dbg !9341

3:                                                ; preds = %1
  tail call fastcc void @NVIC_DisableIRQ(i32 noundef %0) #23, !dbg !9343
  call void @llvm.dbg.value(metadata i32 0, metadata !9339, metadata !DIExpression()), !dbg !9340
  br label %4, !dbg !9345

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !9340
  ret i32 %5, !dbg !9346
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #2 !dbg !9347 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9349, metadata !DIExpression()), !dbg !9350
  %2 = and i32 %0, 31, !dbg !9351
  %3 = shl nuw i32 1, %2, !dbg !9352
  %4 = lshr i32 %0, 5, !dbg !9353
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %4, !dbg !9354
  store volatile i32 %3, i32* %5, align 4, !dbg !9355
  ret void, !dbg !9356
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_nvic_get_pending_irq(i32 noundef %0) local_unnamed_addr #11 !dbg !9357 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9361, metadata !DIExpression()), !dbg !9363
  call void @llvm.dbg.value(metadata i32 255, metadata !9362, metadata !DIExpression()), !dbg !9363
  %2 = icmp ugt i32 %0, 63, !dbg !9364
  br i1 %2, label %5, label %3, !dbg !9364

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @NVIC_GetPendingIRQ(i32 noundef %0) #23, !dbg !9366
  call void @llvm.dbg.value(metadata i32 %4, metadata !9362, metadata !DIExpression()), !dbg !9363
  br label %5, !dbg !9368

5:                                                ; preds = %1, %3
  %6 = phi i32 [ %4, %3 ], [ 255, %1 ], !dbg !9363
  ret i32 %6, !dbg !9369
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @NVIC_GetPendingIRQ(i32 noundef %0) unnamed_addr #11 !dbg !9370 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9374, metadata !DIExpression()), !dbg !9375
  %2 = lshr i32 %0, 5, !dbg !9376
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813056 to [8 x i32]*), i32 0, i32 %2, !dbg !9377
  %4 = load volatile i32, i32* %3, align 4, !dbg !9377
  %5 = and i32 %0, 31, !dbg !9378
  %6 = lshr i32 %4, %5, !dbg !9379
  %7 = and i32 %6, 1, !dbg !9379
  ret i32 %7, !dbg !9380
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_set_pending_irq(i32 noundef %0) local_unnamed_addr #2 !dbg !9381 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9383, metadata !DIExpression()), !dbg !9385
  call void @llvm.dbg.value(metadata i32 -1, metadata !9384, metadata !DIExpression()), !dbg !9385
  %2 = icmp ugt i32 %0, 63, !dbg !9386
  br i1 %2, label %4, label %3, !dbg !9386

3:                                                ; preds = %1
  tail call fastcc void @NVIC_SetPendingIRQ(i32 noundef %0) #23, !dbg !9388
  call void @llvm.dbg.value(metadata i32 0, metadata !9384, metadata !DIExpression()), !dbg !9385
  br label %4, !dbg !9390

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !9385
  ret i32 %5, !dbg !9391
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_SetPendingIRQ(i32 noundef %0) unnamed_addr #2 !dbg !9392 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9394, metadata !DIExpression()), !dbg !9395
  %2 = and i32 %0, 31, !dbg !9396
  %3 = shl nuw i32 1, %2, !dbg !9397
  %4 = lshr i32 %0, 5, !dbg !9398
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813056 to [8 x i32]*), i32 0, i32 %4, !dbg !9399
  store volatile i32 %3, i32* %5, align 4, !dbg !9400
  ret void, !dbg !9401
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_clear_pending_irq(i32 noundef %0) local_unnamed_addr #2 !dbg !9402 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9404, metadata !DIExpression()), !dbg !9406
  call void @llvm.dbg.value(metadata i32 -1, metadata !9405, metadata !DIExpression()), !dbg !9406
  %2 = icmp ugt i32 %0, 63, !dbg !9407
  br i1 %2, label %4, label %3, !dbg !9407

3:                                                ; preds = %1
  tail call fastcc void @NVIC_ClearPendingIRQ(i32 noundef %0) #23, !dbg !9409
  call void @llvm.dbg.value(metadata i32 0, metadata !9405, metadata !DIExpression()), !dbg !9406
  br label %4, !dbg !9411

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !9406
  ret i32 %5, !dbg !9412
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_ClearPendingIRQ(i32 noundef %0) unnamed_addr #2 !dbg !9413 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9415, metadata !DIExpression()), !dbg !9416
  %2 = and i32 %0, 31, !dbg !9417
  %3 = shl nuw i32 1, %2, !dbg !9418
  %4 = lshr i32 %0, 5, !dbg !9419
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536812928 to [8 x i32]*), i32 0, i32 %4, !dbg !9420
  store volatile i32 %3, i32* %5, align 4, !dbg !9421
  ret void, !dbg !9422
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_set_priority(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !9423 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9427, metadata !DIExpression()), !dbg !9430
  call void @llvm.dbg.value(metadata i32 %1, metadata !9428, metadata !DIExpression()), !dbg !9430
  call void @llvm.dbg.value(metadata i32 -1, metadata !9429, metadata !DIExpression()), !dbg !9430
  %3 = icmp ugt i32 %0, 63, !dbg !9431
  br i1 %3, label %5, label %4, !dbg !9431

4:                                                ; preds = %2
  tail call fastcc void @NVIC_SetPriority(i32 noundef %0, i32 noundef %1) #23, !dbg !9433
  call void @llvm.dbg.value(metadata i32 0, metadata !9429, metadata !DIExpression()), !dbg !9430
  br label %5, !dbg !9435

5:                                                ; preds = %2, %4
  %6 = phi i32 [ 0, %4 ], [ -3, %2 ], !dbg !9430
  ret i32 %6, !dbg !9436
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_nvic_get_priority(i32 noundef %0) local_unnamed_addr #11 !dbg !9437 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9439, metadata !DIExpression()), !dbg !9441
  call void @llvm.dbg.value(metadata i32 68, metadata !9440, metadata !DIExpression()), !dbg !9441
  %2 = icmp ugt i32 %0, 63, !dbg !9442
  br i1 %2, label %5, label %3, !dbg !9442

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @NVIC_GetPriority(i32 noundef %0) #23, !dbg !9444
  call void @llvm.dbg.value(metadata i32 %4, metadata !9440, metadata !DIExpression()), !dbg !9441
  br label %5, !dbg !9446

5:                                                ; preds = %1, %3
  %6 = phi i32 [ %4, %3 ], [ 68, %1 ], !dbg !9441
  ret i32 %6, !dbg !9447
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @NVIC_GetPriority(i32 noundef %0) unnamed_addr #11 !dbg !9448 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9450, metadata !DIExpression()), !dbg !9451
  %2 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !9452
  %3 = load volatile i8, i8* %2, align 1, !dbg !9452
  %4 = lshr i8 %3, 2, !dbg !9455
  %5 = zext i8 %4 to i32, !dbg !9455
  ret i32 %5, !dbg !9456
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @isrC_main() local_unnamed_addr #0 section ".tcm_code" !dbg !9457 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !9459, metadata !DIExpression()), !dbg !9461
  tail call void @Flash_ReturnReady() #22, !dbg !9462
  %1 = tail call fastcc i32 @get_current_irq() #23, !dbg !9463
  call void @llvm.dbg.value(metadata i32 %1, metadata !9460, metadata !DIExpression()), !dbg !9461
  %2 = icmp ugt i32 %1, 63, !dbg !9464
  br i1 %2, label %12, label %3, !dbg !9464

3:                                                ; preds = %0
  %4 = getelementptr inbounds [64 x %struct.nvic_function_t], [64 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %1, i32 0, !dbg !9466
  %5 = load void (i32)*, void (i32)** %4, align 4, !dbg !9466
  %6 = icmp eq void (i32)* %5, null, !dbg !9468
  br i1 %6, label %7, label %8, !dbg !9469

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 -4, metadata !9459, metadata !DIExpression()), !dbg !9461
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @__FUNCTION__.isrC_main, i32 0, i32 0), i32 noundef 261, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.111, i32 0, i32 0)) #22, !dbg !9470
  br label %12, !dbg !9472

8:                                                ; preds = %3
  %9 = tail call fastcc i32 @get_pending_irq() #23, !dbg !9473
  %10 = getelementptr inbounds [64 x %struct.nvic_function_t], [64 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %1, i32 1, !dbg !9475
  store i32 %9, i32* %10, align 4, !dbg !9476
  %11 = load void (i32)*, void (i32)** %4, align 4, !dbg !9477
  tail call void %11(i32 noundef %1) #22, !dbg !9478
  call void @llvm.dbg.value(metadata i32 0, metadata !9459, metadata !DIExpression()), !dbg !9461
  br label %12, !dbg !9479

12:                                               ; preds = %0, %8, %7
  %13 = phi i32 [ -4, %7 ], [ 0, %8 ], [ -3, %0 ], !dbg !9461
  ret i32 %13, !dbg !9480
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @get_current_irq() unnamed_addr #11 !dbg !9481 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !9484
  %2 = and i32 %1, 511, !dbg !9485
  call void @llvm.dbg.value(metadata i32 %2, metadata !9483, metadata !DIExpression()), !dbg !9486
  %3 = add nsw i32 %2, -16, !dbg !9487
  ret i32 %3, !dbg !9488
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @get_pending_irq() unnamed_addr #11 !dbg !9489 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !9490
  %2 = lshr i32 %1, 22, !dbg !9491
  %3 = and i32 %2, 1, !dbg !9491
  ret i32 %3, !dbg !9492
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_nvic_register_isr_handler(i32 noundef %0, void (i32)* noundef %1) local_unnamed_addr #0 !dbg !9493 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9498, metadata !DIExpression()), !dbg !9501
  call void @llvm.dbg.value(metadata void (i32)* %1, metadata !9499, metadata !DIExpression()), !dbg !9501
  %3 = icmp ugt i32 %0, 63, !dbg !9502
  %4 = icmp eq void (i32)* %1, null
  %5 = or i1 %3, %4, !dbg !9502
  br i1 %5, label %10, label %6, !dbg !9502

6:                                                ; preds = %2
  %7 = tail call i32 @save_and_set_interrupt_mask() #22, !dbg !9504
  call void @llvm.dbg.value(metadata i32 %7, metadata !9500, metadata !DIExpression()), !dbg !9501
  tail call fastcc void @NVIC_ClearPendingIRQ(i32 noundef %0) #23, !dbg !9505
  %8 = getelementptr inbounds [64 x %struct.nvic_function_t], [64 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %0, i32 0, !dbg !9506
  store void (i32)* %1, void (i32)** %8, align 4, !dbg !9507
  %9 = getelementptr inbounds [64 x %struct.nvic_function_t], [64 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %0, i32 1, !dbg !9508
  store i32 0, i32* %9, align 4, !dbg !9509
  tail call void @restore_interrupt_mask(i32 noundef %7) #22, !dbg !9510
  br label %10, !dbg !9511

10:                                               ; preds = %2, %6
  %11 = phi i32 [ 0, %6 ], [ -2, %2 ], !dbg !9501
  ret i32 %11, !dbg !9512
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_nvic_save_and_set_interrupt_mask(i32* nocapture noundef writeonly %0) local_unnamed_addr #0 !dbg !9513 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !9517, metadata !DIExpression()), !dbg !9518
  %2 = tail call i32 @save_and_set_interrupt_mask() #22, !dbg !9519
  store i32 %2, i32* %0, align 4, !dbg !9520
  ret i32 0, !dbg !9521
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_nvic_restore_interrupt_mask(i32 noundef %0) local_unnamed_addr #0 !dbg !9522 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9526, metadata !DIExpression()), !dbg !9527
  tail call void @restore_interrupt_mask(i32 noundef %0) #22, !dbg !9528
  ret i32 0, !dbg !9529
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @save_and_set_interrupt_mask() local_unnamed_addr #0 section ".tcm_code" !dbg !9530 {
  %1 = tail call i32 asm sideeffect "MRS $0, basepri_max", "=r"() #24, !dbg !9534, !srcloc !9540
  call void @llvm.dbg.value(metadata i32 %1, metadata !9538, metadata !DIExpression()) #24, !dbg !9541
  call void @llvm.dbg.value(metadata i32 %1, metadata !9532, metadata !DIExpression()), !dbg !9542
  call void @llvm.dbg.value(metadata i32 1, metadata !9533, metadata !DIExpression()), !dbg !9542
  call void @llvm.dbg.value(metadata i32 4, metadata !9543, metadata !DIExpression()) #24, !dbg !9546
  tail call void asm sideeffect "MSR basepri, $0", "r,~{memory}"(i32 4) #24, !dbg !9548, !srcloc !9549
  tail call void asm sideeffect "dmb", ""() #24, !dbg !9550, !srcloc !9553
  tail call void asm sideeffect "isb", ""() #24, !dbg !9554, !srcloc !9557
  ret i32 %1, !dbg !9558
}

; Function Attrs: noinline nounwind optsize
define dso_local void @restore_interrupt_mask(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !9559 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9561, metadata !DIExpression()), !dbg !9562
  call void @llvm.dbg.value(metadata i32 %0, metadata !9543, metadata !DIExpression()) #24, !dbg !9563
  tail call void asm sideeffect "MSR basepri, $0", "r,~{memory}"(i32 %0) #24, !dbg !9565, !srcloc !9549
  tail call void asm sideeffect "dmb", ""() #24, !dbg !9566, !srcloc !9553
  tail call void asm sideeffect "isb", ""() #24, !dbg !9568, !srcloc !9557
  ret void, !dbg !9570
}

; Function Attrs: noinline nounwind optsize
define dso_local void @nvic_mask_all_interrupt() local_unnamed_addr #0 !dbg !9571 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #23, !dbg !9575
  call void @llvm.dbg.value(metadata i32 %1, metadata !9574, metadata !DIExpression()), !dbg !9576
  call void @llvm.dbg.value(metadata i32 0, metadata !9573, metadata !DIExpression()), !dbg !9576
  br label %2, !dbg !9577

2:                                                ; preds = %0, %2
  %3 = phi i32 [ 0, %0 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !9573, metadata !DIExpression()), !dbg !9576
  tail call fastcc void @NVIC_DisableIRQ.118(i32 noundef %3) #23, !dbg !9579
  %4 = add nuw nsw i32 %3, 1, !dbg !9582
  call void @llvm.dbg.value(metadata i32 %4, metadata !9573, metadata !DIExpression()), !dbg !9576
  %5 = icmp eq i32 %4, 64, !dbg !9583
  br i1 %5, label %6, label %2, !dbg !9577, !llvm.loop !9584

6:                                                ; preds = %2
  tail call void @restore_interrupt_mask(i32 noundef %1) #23, !dbg !9586
  ret void, !dbg !9587
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_DisableIRQ.118(i32 noundef %0) unnamed_addr #2 !dbg !9588 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9590, metadata !DIExpression()), !dbg !9591
  %2 = and i32 %0, 31, !dbg !9592
  %3 = shl nuw i32 1, %2, !dbg !9593
  %4 = lshr i32 %0, 5, !dbg !9594
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %4, !dbg !9595
  store volatile i32 %3, i32* %5, align 4, !dbg !9596
  ret void, !dbg !9597
}

; Function Attrs: noinline nounwind optsize
define dso_local void @nvic_unmask_all_interrupt() local_unnamed_addr #0 !dbg !9598 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #23, !dbg !9602
  call void @llvm.dbg.value(metadata i32 %1, metadata !9601, metadata !DIExpression()), !dbg !9603
  call void @llvm.dbg.value(metadata i32 0, metadata !9600, metadata !DIExpression()), !dbg !9603
  br label %2, !dbg !9604

2:                                                ; preds = %0, %2
  %3 = phi i32 [ 0, %0 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !9600, metadata !DIExpression()), !dbg !9603
  tail call fastcc void @NVIC_EnableIRQ.119(i32 noundef %3) #23, !dbg !9606
  %4 = add nuw nsw i32 %3, 1, !dbg !9609
  call void @llvm.dbg.value(metadata i32 %4, metadata !9600, metadata !DIExpression()), !dbg !9603
  %5 = icmp eq i32 %4, 64, !dbg !9610
  br i1 %5, label %6, label %2, !dbg !9604, !llvm.loop !9611

6:                                                ; preds = %2
  tail call void @restore_interrupt_mask(i32 noundef %1) #23, !dbg !9613
  ret void, !dbg !9614
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_EnableIRQ.119(i32 noundef %0) unnamed_addr #2 !dbg !9615 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9617, metadata !DIExpression()), !dbg !9618
  %2 = and i32 %0, 31, !dbg !9619
  %3 = shl nuw i32 1, %2, !dbg !9620
  %4 = lshr i32 %0, 5, !dbg !9621
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %4, !dbg !9622
  store volatile i32 %3, i32* %5, align 4, !dbg !9623
  ret void, !dbg !9624
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @nvic_clear_all_pending_interrupt() local_unnamed_addr #2 !dbg !9625 {
  call void @llvm.dbg.value(metadata i32 0, metadata !9627, metadata !DIExpression()), !dbg !9628
  br label %1, !dbg !9629

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !9627, metadata !DIExpression()), !dbg !9628
  tail call fastcc void @NVIC_ClearPendingIRQ.120(i32 noundef %2) #23, !dbg !9631
  %3 = add nuw nsw i32 %2, 1, !dbg !9634
  call void @llvm.dbg.value(metadata i32 %3, metadata !9627, metadata !DIExpression()), !dbg !9628
  %4 = icmp eq i32 %3, 64, !dbg !9635
  br i1 %4, label %5, label %1, !dbg !9629, !llvm.loop !9636

5:                                                ; preds = %1
  ret void, !dbg !9638
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_ClearPendingIRQ.120(i32 noundef %0) unnamed_addr #2 !dbg !9639 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9641, metadata !DIExpression()), !dbg !9642
  %2 = and i32 %0, 31, !dbg !9643
  %3 = shl nuw i32 1, %2, !dbg !9644
  %4 = lshr i32 %0, 5, !dbg !9645
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536812928 to [8 x i32]*), i32 0, i32 %4, !dbg !9646
  store volatile i32 %3, i32* %5, align 4, !dbg !9647
  ret void, !dbg !9648
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @nvic_irq_software_trigger(i32 noundef %0) local_unnamed_addr #0 !dbg !9649 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9651, metadata !DIExpression()), !dbg !9652
  %2 = icmp ugt i32 %0, 63, !dbg !9653
  br i1 %2, label %4, label %3, !dbg !9653

3:                                                ; preds = %1
  tail call fastcc void @software_trigger_irq(i32 noundef %0) #23, !dbg !9655
  br label %4, !dbg !9656

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -2, %1 ], !dbg !9652
  ret i32 %5, !dbg !9657
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @software_trigger_irq(i32 noundef %0) unnamed_addr #0 !dbg !9658 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9660, metadata !DIExpression()), !dbg !9661
  %2 = and i32 %0, 511, !dbg !9662
  store volatile i32 %2, i32* inttoptr (i32 -536809728 to i32*), align 256, !dbg !9663
  tail call void asm sideeffect "dsb", ""() #24, !dbg !9664, !srcloc !9667
  ret void, !dbg !9668
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_nvic_query_exception_number() local_unnamed_addr #11 !dbg !9669 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !9670
  %2 = and i32 %1, 511, !dbg !9671
  ret i32 %2, !dbg !9672
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @hal_sd_register_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* nocapture noundef readnone %2) local_unnamed_addr #6 !dbg !9673 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9679, metadata !DIExpression()), !dbg !9682
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !9680, metadata !DIExpression()), !dbg !9682
  call void @llvm.dbg.value(metadata i8* %2, metadata !9681, metadata !DIExpression()), !dbg !9682
  %4 = icmp eq void (i32, i8*)* %1, null, !dbg !9683
  br i1 %4, label %7, label %5, !dbg !9685

5:                                                ; preds = %3
  %6 = getelementptr inbounds [0 x %struct.msdc_config_t], [0 x %struct.msdc_config_t]* bitcast ([2 x %struct.msdc_config_t]* @msdc_config to [0 x %struct.msdc_config_t]*), i32 0, i32 %0, i32 14, !dbg !9686
  store void (i32, i8*)* %1, void (i32, i8*)** %6, align 4, !dbg !9687
  br label %7, !dbg !9688

7:                                                ; preds = %3, %5
  %8 = phi i32 [ 0, %5 ], [ -1, %3 ], !dbg !9682
  ret i32 %8, !dbg !9689
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_sd_set_bus_width(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !9690 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9694, metadata !DIExpression()), !dbg !9701
  call void @llvm.dbg.value(metadata i32 %1, metadata !9695, metadata !DIExpression()), !dbg !9701
  call void @llvm.dbg.value(metadata i32 0, metadata !9699, metadata !DIExpression()), !dbg !9701
  %3 = icmp eq i32 %0, 0, !dbg !9702
  call void @llvm.dbg.value(metadata %struct.msdc_register_t* undef, metadata !9698, metadata !DIExpression()), !dbg !9701
  tail call void @dvfs_lock(%struct._dvfs_lock_t* noundef nonnull @sd_dvfs_lock) #22, !dbg !9703
  %4 = load i32, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 14), align 4, !dbg !9704
  switch i32 %4, label %48 [
    i32 3, label %5
    i32 2, label %5
    i32 0, label %5
    i32 4, label %29
    i32 1, label %29
  ], !dbg !9706

5:                                                ; preds = %2, %2, %2
  %6 = icmp eq i32 %1, 2, !dbg !9707
  br i1 %6, label %7, label %11, !dbg !9710

7:                                                ; preds = %5
  %8 = load i8, i8* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 5, i32 2), align 2, !dbg !9711
  %9 = and i8 %8, 4, !dbg !9712
  %10 = icmp eq i8 %9, 0, !dbg !9712
  br i1 %10, label %49, label %11, !dbg !9713

11:                                               ; preds = %7, %5
  %12 = load i32, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 6), align 8, !dbg !9714
  %13 = tail call i32 @sd_send_command55(i32 noundef %0, i32 noundef %12) #22, !dbg !9715
  call void @llvm.dbg.value(metadata i32 %13, metadata !9696, metadata !DIExpression()), !dbg !9701
  %14 = icmp eq i32 %13, 0, !dbg !9716
  br i1 %14, label %15, label %49, !dbg !9718

15:                                               ; preds = %11
  %16 = select i1 %6, i32 2, i32 0, !dbg !9719
  call void @llvm.dbg.value(metadata i32 %16, metadata !9697, metadata !DIExpression()), !dbg !9701
  %17 = tail call i32 @sd_send_command(i32 noundef %0, i32 noundef 134, i32 noundef %16) #22, !dbg !9720
  call void @llvm.dbg.value(metadata i32 %17, metadata !9696, metadata !DIExpression()), !dbg !9701
  %18 = icmp eq i32 %17, 0, !dbg !9721
  br i1 %18, label %19, label %49, !dbg !9723

19:                                               ; preds = %15
  %20 = tail call i32 @sd_check_card_status(i32 noundef %0) #22, !dbg !9724
  call void @llvm.dbg.value(metadata i32 %20, metadata !9696, metadata !DIExpression()), !dbg !9701
  %21 = icmp eq i32 %20, 0, !dbg !9725
  br i1 %21, label %22, label %49, !dbg !9727

22:                                               ; preds = %19
  %23 = select i1 %3, i32* inttoptr (i32 -1610481632 to i32*), i32* inttoptr (i32 -1610416096 to i32*), !dbg !9728
  %24 = load volatile i32, i32* %23, align 32, !dbg !9728
  br i1 %6, label %25, label %27, !dbg !9730

25:                                               ; preds = %22
  %26 = or i32 %24, 131072, !dbg !9731
  store volatile i32 %26, i32* %23, align 32, !dbg !9733
  store i8 2, i8* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 9), align 1, !dbg !9734
  br label %48, !dbg !9735

27:                                               ; preds = %22
  %28 = and i32 %24, -131073, !dbg !9736
  store volatile i32 %28, i32* %23, align 32, !dbg !9738
  br label %48

29:                                               ; preds = %2, %2
  %30 = icmp eq i32 %1, 2, !dbg !9739
  %31 = icmp eq i32 %1, 1, !dbg !9743
  %32 = select i1 %31, i32 62324736, i32 0, !dbg !9743
  %33 = select i1 %30, i32 62324992, i32 %32, !dbg !9743
  call void @llvm.dbg.value(metadata i32 %33, metadata !9699, metadata !DIExpression()), !dbg !9701
  %34 = select i1 %3, i32* inttoptr (i32 -1610481632 to i32*), i32* inttoptr (i32 -1610416096 to i32*), !dbg !9744
  %35 = load volatile i32, i32* %34, align 32, !dbg !9744
  br i1 %30, label %36, label %38, !dbg !9746

36:                                               ; preds = %29
  %37 = or i32 %35, 131072, !dbg !9747
  store volatile i32 %37, i32* %34, align 32, !dbg !9749
  store i8 2, i8* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 9), align 1, !dbg !9750
  br label %40, !dbg !9751

38:                                               ; preds = %29
  %39 = and i32 %35, -131073, !dbg !9752
  store volatile i32 %39, i32* %34, align 32, !dbg !9754
  br label %40

40:                                               ; preds = %38, %36
  %41 = load %struct.extended_csd_information_t*, %struct.extended_csd_information_t** getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 3, i32 23), align 8, !dbg !9755
  %42 = getelementptr inbounds %struct.extended_csd_information_t, %struct.extended_csd_information_t* %41, i32 0, i32 35, !dbg !9757
  %43 = load i8, i8* %42, align 4, !dbg !9757
  %44 = icmp ugt i8 %43, 4, !dbg !9758
  br i1 %44, label %45, label %48, !dbg !9759

45:                                               ; preds = %40
  %46 = tail call i32 @mmc_switch(i32 noundef %0, i32 noundef %33) #22, !dbg !9760
  call void @llvm.dbg.value(metadata i32 %46, metadata !9696, metadata !DIExpression()), !dbg !9701
  %47 = icmp eq i32 %46, 0, !dbg !9762
  br i1 %47, label %48, label %49, !dbg !9764

48:                                               ; preds = %2, %45, %40, %25, %27
  tail call void @dvfs_unlock(%struct._dvfs_lock_t* noundef nonnull @sd_dvfs_lock) #22, !dbg !9765
  br label %51, !dbg !9766

49:                                               ; preds = %7, %45, %19, %15, %11
  %50 = phi i32 [ %13, %11 ], [ %17, %15 ], [ %20, %19 ], [ %46, %45 ], [ -14, %7 ], !dbg !9767
  call void @llvm.dbg.value(metadata i32 %50, metadata !9696, metadata !DIExpression()), !dbg !9701
  call void @llvm.dbg.label(metadata !9700), !dbg !9768
  tail call void @dvfs_unlock(%struct._dvfs_lock_t* noundef nonnull @sd_dvfs_lock) #22, !dbg !9769
  store i32 %50, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 13), align 8, !dbg !9770
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__FUNCTION__.hal_sd_set_bus_width, i32 0, i32 0), i32 noundef 172, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2.123, i32 0, i32 0), i32 noundef %50) #22, !dbg !9771
  br label %51, !dbg !9772

51:                                               ; preds = %49, %48
  %52 = phi i32 [ -1, %49 ], [ 0, %48 ], !dbg !9701
  ret i32 %52, !dbg !9773
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_sd_init(i32 noundef %0, %struct.hal_cache_region_config_t* noundef readonly %1) local_unnamed_addr #0 !dbg !9774 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9784, metadata !DIExpression()), !dbg !9790
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %1, metadata !9785, metadata !DIExpression()), !dbg !9790
  %3 = icmp eq %struct.hal_cache_region_config_t* %1, null, !dbg !9791
  br i1 %3, label %4, label %5, !dbg !9793

4:                                                ; preds = %2
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__FUNCTION__.hal_sd_init, i32 0, i32 0), i32 noundef 183, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3.124, i32 0, i32 0)) #22, !dbg !9794
  br label %103, !dbg !9796

5:                                                ; preds = %2
  %6 = icmp eq i32 %0, 0, !dbg !9797
  call void @llvm.dbg.value(metadata %struct.msdc_register_t* undef, metadata !9786, metadata !DIExpression()), !dbg !9790
  %7 = tail call i32 @save_and_set_interrupt_mask() #22, !dbg !9798
  call void @llvm.dbg.value(metadata i32 %7, metadata !9788, metadata !DIExpression()), !dbg !9790
  %8 = load volatile i8, i8* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 17), align 1, !dbg !9799, !range !4202
  %9 = icmp eq i8 %8, 0, !dbg !9799
  br i1 %9, label %11, label %10, !dbg !9801

10:                                               ; preds = %5
  tail call void @restore_interrupt_mask(i32 noundef %7) #22, !dbg !9802
  br label %103, !dbg !9804

11:                                               ; preds = %5
  store volatile i8 1, i8* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 17), align 1, !dbg !9805
  tail call void @restore_interrupt_mask(i32 noundef %7) #22, !dbg !9807
  %12 = tail call i32 @msdc_init(i32 noundef %0) #22, !dbg !9808
  %13 = icmp eq i32 %12, 1, !dbg !9810
  br i1 %13, label %14, label %18, !dbg !9811

14:                                               ; preds = %11
  %15 = tail call i32 @msdc_get_owner(i32 noundef %0) #22, !dbg !9812
  %16 = icmp eq i32 %15, 2, !dbg !9815
  br i1 %16, label %17, label %18, !dbg !9816

17:                                               ; preds = %14
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__FUNCTION__.hal_sd_init, i32 0, i32 0), i32 noundef 202, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.125, i32 0, i32 0), i32 noundef %0) #22, !dbg !9817
  br label %103, !dbg !9819

18:                                               ; preds = %14, %11
  tail call void @dvfs_lock(%struct._dvfs_lock_t* noundef nonnull @sd_dvfs_lock) #22, !dbg !9820
  tail call void @msdc_dma_disable(i32 noundef %0) #22, !dbg !9821
  tail call void @msdc_card_power_set(i32 noundef %0, i1 noundef zeroext false) #22, !dbg !9822
  tail call void @msdc_wait(i32 noundef 1) #22, !dbg !9823
  tail call void @msdc_card_power_set(i32 noundef %0, i1 noundef zeroext true) #22, !dbg !9824
  tail call void @msdc_set_owner(i32 noundef %0, i32 noundef 1) #22, !dbg !9825
  tail call void @msdc_reset(i32 noundef %0) #22, !dbg !9826
  tail call void @msdc_clock_init(i32 noundef %0) #22, !dbg !9827
  %19 = select i1 %6, i32* inttoptr (i32 -1610481632 to i32*), i32* inttoptr (i32 -1610416096 to i32*), !dbg !9828
  %20 = load volatile i32, i32* %19, align 32, !dbg !9828
  %21 = and i32 %20, -131073, !dbg !9829
  store volatile i32 %21, i32* %19, align 32, !dbg !9830
  %22 = tail call i8* @memset(i8* noundef bitcast (%struct.sd_information_t* @sd_information to i8*), i32 noundef 0, i32 noundef 160) #22, !dbg !9831
  store i32 512, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 1), align 4, !dbg !9832
  store i32 0, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 6), align 8, !dbg !9833
  store i8 0, i8* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 8), align 8, !dbg !9834
  store i32 0, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 7), align 4, !dbg !9835
  store i8 1, i8* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 9), align 1, !dbg !9836
  store volatile i8 0, i8* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 16), align 4, !dbg !9837
  %23 = select i1 %6, i32* inttoptr (i32 -1610481664 to i32*), i32* inttoptr (i32 -1610416128 to i32*), !dbg !9838
  %24 = load volatile i32, i32* %23, align 65536, !dbg !9838
  %25 = or i32 %24, 128, !dbg !9839
  store volatile i32 %25, i32* %23, align 65536, !dbg !9840
  tail call void @msdc_wait(i32 noundef 1) #22, !dbg !9841
  %26 = load volatile i32, i32* %23, align 65536, !dbg !9842
  %27 = and i32 %26, -129, !dbg !9843
  store volatile i32 %27, i32* %23, align 65536, !dbg !9844
  %28 = tail call i32 @sd_reset(i32 noundef %0) #22, !dbg !9845
  call void @llvm.dbg.value(metadata i32 %28, metadata !9787, metadata !DIExpression()), !dbg !9790
  %29 = icmp eq i32 %28, 0, !dbg !9846
  br i1 %29, label %30, label %100, !dbg !9848

30:                                               ; preds = %18
  %31 = tail call i32 @sd_check_card_type(i32 noundef %0) #22, !dbg !9849
  %32 = icmp eq i32 %31, 255, !dbg !9851
  br i1 %32, label %100, label %33, !dbg !9852

33:                                               ; preds = %30
  store i32 0, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 13), align 8, !dbg !9853
  %34 = tail call i32 @sd_get_card_id(i32 noundef %0) #22, !dbg !9855
  call void @llvm.dbg.value(metadata i32 %34, metadata !9787, metadata !DIExpression()), !dbg !9790
  %35 = icmp eq i32 %34, 0, !dbg !9856
  br i1 %35, label %36, label %100, !dbg !9858

36:                                               ; preds = %33
  %37 = tail call i32 @sd_get_rca(i32 noundef %0) #22, !dbg !9859
  call void @llvm.dbg.value(metadata i32 %37, metadata !9787, metadata !DIExpression()), !dbg !9790
  %38 = icmp eq i32 %37, 0, !dbg !9860
  br i1 %38, label %39, label %100, !dbg !9862

39:                                               ; preds = %36
  %40 = tail call i32 @sd_get_csd(i32 noundef %0) #22, !dbg !9863
  call void @llvm.dbg.value(metadata i32 %40, metadata !9787, metadata !DIExpression()), !dbg !9790
  %41 = icmp eq i32 %40, 0, !dbg !9864
  br i1 %41, label %42, label %100, !dbg !9866

42:                                               ; preds = %39
  %43 = load i8, i8* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 3, i32 11), align 8, !dbg !9867
  %44 = icmp eq i8 %43, 0, !dbg !9869
  br i1 %44, label %48, label %45, !dbg !9870

45:                                               ; preds = %42
  %46 = tail call i32 @sd_set_dsr(i32 noundef %0) #22, !dbg !9871
  call void @llvm.dbg.value(metadata i32 %46, metadata !9787, metadata !DIExpression()), !dbg !9790
  %47 = icmp eq i32 %46, 0, !dbg !9873
  br i1 %47, label %48, label %100, !dbg !9875

48:                                               ; preds = %45, %42
  %49 = load i32, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 6), align 8, !dbg !9876
  %50 = tail call i32 @sd_select_card(i32 noundef %0, i32 noundef %49) #22, !dbg !9877
  call void @llvm.dbg.value(metadata i32 %50, metadata !9787, metadata !DIExpression()), !dbg !9790
  switch i32 %50, label %100 [
    i32 -38, label %51
    i32 0, label %52
  ], !dbg !9878

51:                                               ; preds = %48
  store i8 1, i8* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 11), align 1, !dbg !9879
  br label %52, !dbg !9882

52:                                               ; preds = %48, %51
  tail call void @msdc_set_output_clock(i32 noundef %0, i32 noundef 15300) #22, !dbg !9883
  %53 = load i32, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 14), align 4, !dbg !9884
  switch i32 %53, label %91 [
    i32 3, label %54
    i32 2, label %54
    i32 0, label %54
    i32 4, label %73
    i32 1, label %73
  ], !dbg !9886

54:                                               ; preds = %52, %52, %52
  %55 = tail call i32 @sd_get_scr(i32 noundef %0) #22, !dbg !9887
  call void @llvm.dbg.value(metadata i32 %55, metadata !9787, metadata !DIExpression()), !dbg !9790
  %56 = icmp eq i32 %55, 0, !dbg !9889
  br i1 %56, label %57, label %100, !dbg !9891

57:                                               ; preds = %54
  %58 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 0, i32 0, !dbg !9892
  %59 = load i32, i32* %58, align 4, !dbg !9892
  %60 = tail call i32 @hal_sd_set_bus_width(i32 noundef %0, i32 noundef %59) #23, !dbg !9894
  %61 = icmp eq i32 %60, 0, !dbg !9895
  br i1 %61, label %63, label %62, !dbg !9896

62:                                               ; preds = %57
  tail call void @msdc_deinit(i32 noundef %0) #22, !dbg !9897
  tail call void @dvfs_unlock(%struct._dvfs_lock_t* noundef nonnull @sd_dvfs_lock) #22, !dbg !9899
  br label %103, !dbg !9900

63:                                               ; preds = %57
  %64 = tail call i32 @sd_acommand42(i32 noundef %0) #22, !dbg !9901
  call void @llvm.dbg.value(metadata i32 %64, metadata !9787, metadata !DIExpression()), !dbg !9790
  %65 = icmp eq i32 %64, 0, !dbg !9902
  br i1 %65, label %66, label %100, !dbg !9904

66:                                               ; preds = %63
  %67 = load i32, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 5, i32 3), align 4, !dbg !9905
  %68 = icmp eq i32 %67, 0, !dbg !9907
  br i1 %68, label %82, label %69, !dbg !9908

69:                                               ; preds = %66
  %70 = tail call i32 @sd_select_high_speed(i32 noundef %0) #22, !dbg !9909
  call void @llvm.dbg.value(metadata i32 %70, metadata !9787, metadata !DIExpression()), !dbg !9790
  %71 = icmp eq i32 %70, 0, !dbg !9911
  br i1 %71, label %82, label %72, !dbg !9913

72:                                               ; preds = %69
  store volatile i8 0, i8* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 18), align 2, !dbg !9914
  br label %82, !dbg !9916

73:                                               ; preds = %52, %52
  %74 = tail call i32 @mmc_set_high_speed(i32 noundef %0) #22, !dbg !9917
  call void @llvm.dbg.value(metadata i32 %74, metadata !9787, metadata !DIExpression()), !dbg !9790
  %75 = icmp eq i32 %74, 0, !dbg !9920
  br i1 %75, label %76, label %100, !dbg !9922

76:                                               ; preds = %73
  %77 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 0, i32 0, !dbg !9923
  %78 = load i32, i32* %77, align 4, !dbg !9923
  %79 = tail call i32 @hal_sd_set_bus_width(i32 noundef %0, i32 noundef %78) #23, !dbg !9925
  %80 = icmp eq i32 %79, 0, !dbg !9926
  br i1 %80, label %82, label %81, !dbg !9927

81:                                               ; preds = %76
  tail call void @msdc_deinit(i32 noundef %0) #22, !dbg !9928
  tail call void @dvfs_unlock(%struct._dvfs_lock_t* noundef nonnull @sd_dvfs_lock) #22, !dbg !9930
  br label %103, !dbg !9931

82:                                               ; preds = %76, %66, %72, %69
  %83 = load i32, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 14), align 4, !dbg !9932
  %84 = icmp eq i32 %83, 4, !dbg !9934
  br i1 %84, label %85, label %91, !dbg !9935

85:                                               ; preds = %82
  %86 = load %struct.extended_csd_information_t*, %struct.extended_csd_information_t** getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 3, i32 23), align 8, !dbg !9936
  %87 = getelementptr inbounds %struct.extended_csd_information_t, %struct.extended_csd_information_t* %86, i32 0, i32 55, !dbg !9938
  %88 = load i32, i32* %87, align 4, !dbg !9938
  %89 = zext i32 %88 to i64, !dbg !9939
  %90 = shl nuw nsw i64 %89, 9, !dbg !9940
  store i64 %90, i64* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 3, i32 24), align 8, !dbg !9941
  br label %91, !dbg !9942

91:                                               ; preds = %52, %85, %82
  %92 = tail call i32 @sd_set_block_length(i32 noundef %0, i32 noundef 512) #22, !dbg !9943
  call void @llvm.dbg.value(metadata i32 %92, metadata !9787, metadata !DIExpression()), !dbg !9790
  %93 = icmp eq i32 %92, 0, !dbg !9944
  br i1 %93, label %94, label %100, !dbg !9946

94:                                               ; preds = %91
  store volatile i8 0, i8* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 17), align 1, !dbg !9947
  store volatile i8 1, i8* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 16), align 4, !dbg !9948
  %95 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 0, i32 1, !dbg !9949
  %96 = load i32, i32* %95, align 4, !dbg !9949
  %97 = tail call zeroext i1 @sd_output_clock_tuning(i32 noundef %0, i32 noundef %96) #22, !dbg !9951
  br i1 %97, label %99, label %98, !dbg !9952

98:                                               ; preds = %94
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__FUNCTION__.hal_sd_init, i32 0, i32 0), i32 noundef 361, i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5.126, i32 0, i32 0)) #22, !dbg !9953
  br label %100, !dbg !9955

99:                                               ; preds = %94
  tail call void @dvfs_unlock(%struct._dvfs_lock_t* noundef nonnull @sd_dvfs_lock) #22, !dbg !9956
  br label %103, !dbg !9957

100:                                              ; preds = %48, %30, %91, %73, %63, %54, %45, %39, %36, %33, %18, %98
  %101 = phi i32 [ %28, %18 ], [ %34, %33 ], [ %37, %36 ], [ %40, %39 ], [ %46, %45 ], [ %55, %54 ], [ %64, %63 ], [ %92, %91 ], [ 0, %98 ], [ %74, %73 ], [ -5, %30 ], [ %50, %48 ], !dbg !9790
  call void @llvm.dbg.value(metadata i32 %101, metadata !9787, metadata !DIExpression()), !dbg !9790
  call void @llvm.dbg.label(metadata !9789), !dbg !9958
  %102 = tail call i8* @memset(i8* noundef bitcast (%struct.sd_information_t* @sd_information to i8*), i32 noundef 0, i32 noundef 160) #22, !dbg !9959
  store i32 512, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 1), align 4, !dbg !9960
  store i32 0, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 6), align 8, !dbg !9961
  store i8 0, i8* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 8), align 8, !dbg !9962
  store i32 0, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 7), align 4, !dbg !9963
  store i8 1, i8* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 9), align 1, !dbg !9964
  store volatile i8 0, i8* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 16), align 4, !dbg !9965
  store i32 %101, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 13), align 8, !dbg !9966
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__FUNCTION__.hal_sd_init, i32 0, i32 0), i32 noundef 382, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.127, i32 0, i32 0), i32 noundef %101) #22, !dbg !9967
  tail call void @msdc_deinit(i32 noundef %0) #22, !dbg !9968
  tail call void @dvfs_unlock(%struct._dvfs_lock_t* noundef nonnull @sd_dvfs_lock) #22, !dbg !9969
  store volatile i8 0, i8* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 17), align 1, !dbg !9970
  br label %103, !dbg !9971

103:                                              ; preds = %100, %99, %81, %62, %17, %10, %4
  %104 = phi i32 [ -1, %4 ], [ -2, %10 ], [ -1, %17 ], [ -1, %100 ], [ -1, %62 ], [ 0, %99 ], [ -1, %81 ], !dbg !9790
  ret i32 %104, !dbg !9972
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_sd_deinit(i32 noundef %0) local_unnamed_addr #0 !dbg !9973 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9977, metadata !DIExpression()), !dbg !9978
  tail call void @msdc_reset(i32 noundef %0) #22, !dbg !9979
  %2 = tail call i8* @memset(i8* noundef bitcast (%struct.sd_information_t* @sd_information to i8*), i32 noundef 0, i32 noundef 160) #22, !dbg !9980
  tail call void @msdc_deinit(i32 noundef %0) #22, !dbg !9981
  ret i32 0, !dbg !9982
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_sd_get_capacity(i32 noundef %0, i64* noundef writeonly %1) local_unnamed_addr #0 !dbg !9983 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9988, metadata !DIExpression()), !dbg !9990
  call void @llvm.dbg.value(metadata i64* %1, metadata !9989, metadata !DIExpression()), !dbg !9990
  %3 = icmp eq i64* %1, null, !dbg !9991
  br i1 %3, label %4, label %5, !dbg !9993

4:                                                ; preds = %2
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @__FUNCTION__.hal_sd_get_capacity, i32 0, i32 0), i32 noundef 411, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7, i32 0, i32 0)) #22, !dbg !9994
  br label %16, !dbg !9996

5:                                                ; preds = %2
  %6 = load volatile i8, i8* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 16), align 4, !dbg !9997, !range !4202
  %7 = icmp eq i8 %6, 0, !dbg !9999
  br i1 %7, label %8, label %9, !dbg !10000

8:                                                ; preds = %5
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @__FUNCTION__.hal_sd_get_capacity, i32 0, i32 0), i32 noundef 416, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i32 0, i32 0)) #22, !dbg !10001
  br label %16, !dbg !10003

9:                                                ; preds = %5
  %10 = load i64, i64* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 3, i32 24), align 8, !dbg !10004
  %11 = icmp eq i64 %10, 0, !dbg !10006
  br i1 %11, label %16, label %12, !dbg !10007

12:                                               ; preds = %9
  %13 = load volatile i8, i8* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 16), align 4, !dbg !10008, !range !4202
  %14 = icmp eq i8 %13, 0, !dbg !10008
  br i1 %14, label %16, label %15, !dbg !10009

15:                                               ; preds = %12
  store i64 %10, i64* %1, align 8, !dbg !10010
  br label %16, !dbg !10012

16:                                               ; preds = %9, %12, %15, %8, %4
  %17 = phi i32 [ -1, %4 ], [ -1, %8 ], [ 0, %15 ], [ -1, %12 ], [ -1, %9 ], !dbg !9990
  ret i32 %17, !dbg !10013
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_sd_erase_sectors(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !10014 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10018, metadata !DIExpression()), !dbg !10027
  call void @llvm.dbg.value(metadata i32 %1, metadata !10019, metadata !DIExpression()), !dbg !10027
  call void @llvm.dbg.value(metadata i32 %2, metadata !10020, metadata !DIExpression()), !dbg !10027
  %4 = load volatile i8, i8* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 16), align 4, !dbg !10028, !range !4202
  %5 = icmp eq i8 %4, 0, !dbg !10030
  br i1 %5, label %6, label %7, !dbg !10031

6:                                                ; preds = %3
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__FUNCTION__.hal_sd_erase_sectors, i32 0, i32 0), i32 noundef 440, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i32 0, i32 0)) #22, !dbg !10032
  br label %44, !dbg !10034

7:                                                ; preds = %3
  %8 = tail call i32 @save_and_set_interrupt_mask() #22, !dbg !10035
  call void @llvm.dbg.value(metadata i32 %8, metadata !10025, metadata !DIExpression()), !dbg !10027
  %9 = load volatile i8, i8* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 17), align 1, !dbg !10036, !range !4202
  %10 = icmp eq i8 %9, 0, !dbg !10036
  br i1 %10, label %12, label %11, !dbg !10038

11:                                               ; preds = %7
  tail call void @restore_interrupt_mask(i32 noundef %8) #22, !dbg !10039
  br label %44, !dbg !10041

12:                                               ; preds = %7
  store volatile i8 1, i8* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 17), align 1, !dbg !10042
  tail call void @restore_interrupt_mask(i32 noundef %8) #22, !dbg !10044
  %13 = load i32, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 14), align 4, !dbg !10045
  %14 = add i32 %13, -3, !dbg !10047
  %15 = icmp ult i32 %14, 2, !dbg !10047
  br i1 %15, label %21, label %16, !dbg !10047

16:                                               ; preds = %12
  %17 = icmp eq i32 %13, 1, !dbg !10048
  br i1 %17, label %18, label %21, !dbg !10050

18:                                               ; preds = %16
  %19 = load i32, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 3, i32 21), align 8, !dbg !10051
  %20 = lshr i32 %19, 9, !dbg !10053
  call void @llvm.dbg.value(metadata i32 %22, metadata !10022, metadata !DIExpression()), !dbg !10027
  br label %23, !dbg !10054

21:                                               ; preds = %16, %12
  %22 = phi i32 [ 1, %12 ], [ 512, %16 ], !dbg !10056
  call void @llvm.dbg.value(metadata i32 %22, metadata !10022, metadata !DIExpression()), !dbg !10027
  switch i32 %13, label %23 [
    i32 3, label %25
    i32 2, label %25
    i32 0, label %25
  ], !dbg !10054

23:                                               ; preds = %18, %21
  %24 = phi i32 [ %20, %18 ], [ %22, %21 ]
  call void @llvm.dbg.value(metadata i32 163, metadata !10023, metadata !DIExpression()), !dbg !10027
  call void @llvm.dbg.value(metadata i32 164, metadata !10024, metadata !DIExpression()), !dbg !10027
  br label %25

25:                                               ; preds = %21, %21, %21, %23
  %26 = phi i32 [ %24, %23 ], [ %22, %21 ], [ %22, %21 ], [ %22, %21 ]
  %27 = phi i32 [ 163, %23 ], [ 160, %21 ], [ 160, %21 ], [ 160, %21 ], !dbg !10057
  %28 = phi i32 [ 164, %23 ], [ 161, %21 ], [ 161, %21 ], [ 161, %21 ], !dbg !10057
  call void @llvm.dbg.value(metadata i32 %28, metadata !10024, metadata !DIExpression()), !dbg !10027
  call void @llvm.dbg.value(metadata i32 %27, metadata !10023, metadata !DIExpression()), !dbg !10027
  %29 = mul i32 %26, %1, !dbg !10058
  %30 = tail call i32 @sd_send_erase_command(i32 noundef %0, i32 noundef %27, i32 noundef %29) #22, !dbg !10059
  call void @llvm.dbg.value(metadata i32 %30, metadata !10021, metadata !DIExpression()), !dbg !10027
  %31 = icmp eq i32 %30, 0, !dbg !10060
  br i1 %31, label %32, label %42, !dbg !10062

32:                                               ; preds = %25
  %33 = add i32 %1, -1, !dbg !10063
  %34 = add i32 %33, %2, !dbg !10064
  %35 = mul i32 %26, %34, !dbg !10065
  %36 = tail call i32 @sd_send_erase_command(i32 noundef %0, i32 noundef %28, i32 noundef %35) #22, !dbg !10066
  call void @llvm.dbg.value(metadata i32 %36, metadata !10021, metadata !DIExpression()), !dbg !10027
  %37 = icmp eq i32 %36, 0, !dbg !10067
  br i1 %37, label %38, label %42, !dbg !10069

38:                                               ; preds = %32
  %39 = tail call i32 @sd_send_erase_command(i32 noundef %0, i32 noundef 934, i32 noundef 0) #22, !dbg !10070
  call void @llvm.dbg.value(metadata i32 %39, metadata !10021, metadata !DIExpression()), !dbg !10027
  %40 = icmp eq i32 %39, 0, !dbg !10071
  br i1 %40, label %41, label %42, !dbg !10073

41:                                               ; preds = %38
  store volatile i8 0, i8* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 17), align 1, !dbg !10074
  br label %44, !dbg !10075

42:                                               ; preds = %38, %32, %25
  %43 = phi i32 [ %30, %25 ], [ %36, %32 ], [ %39, %38 ], !dbg !10027
  call void @llvm.dbg.value(metadata i32 %43, metadata !10021, metadata !DIExpression()), !dbg !10027
  call void @llvm.dbg.label(metadata !10026), !dbg !10076
  store i32 %43, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 13), align 8, !dbg !10077
  tail call void @msdc_power_set(i32 noundef %0, i1 noundef zeroext false) #22, !dbg !10078
  store volatile i8 0, i8* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 17), align 1, !dbg !10079
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__FUNCTION__.hal_sd_erase_sectors, i32 0, i32 0), i32 noundef 502, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.127, i32 0, i32 0), i32 noundef %43) #22, !dbg !10080
  br label %44, !dbg !10081

44:                                               ; preds = %42, %41, %11, %6
  %45 = phi i32 [ -1, %6 ], [ -2, %11 ], [ -1, %42 ], [ 0, %41 ], !dbg !10027
  ret i32 %45, !dbg !10082
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_sd_read_blocks(i32 noundef %0, i32* noundef writeonly %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !10083 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10087, metadata !DIExpression()), !dbg !10101
  call void @llvm.dbg.value(metadata i32* %1, metadata !10088, metadata !DIExpression()), !dbg !10101
  call void @llvm.dbg.value(metadata i32 %2, metadata !10089, metadata !DIExpression()), !dbg !10101
  call void @llvm.dbg.value(metadata i32 %3, metadata !10090, metadata !DIExpression()), !dbg !10101
  call void @llvm.dbg.value(metadata i32 0, metadata !10093, metadata !DIExpression()), !dbg !10101
  call void @llvm.dbg.value(metadata i64 0, metadata !10094, metadata !DIExpression()), !dbg !10101
  %5 = load volatile i8, i8* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 16), align 4, !dbg !10102, !range !4202
  %6 = icmp eq i8 %5, 0, !dbg !10104
  br i1 %6, label %7, label %8, !dbg !10105

7:                                                ; preds = %4
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__FUNCTION__.hal_sd_read_blocks, i32 0, i32 0), i32 noundef 521, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i32 0, i32 0)) #22, !dbg !10106
  br label %102, !dbg !10108

8:                                                ; preds = %4
  %9 = icmp eq i32* %1, null, !dbg !10109
  br i1 %9, label %10, label %11, !dbg !10111

10:                                               ; preds = %8
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__FUNCTION__.hal_sd_read_blocks, i32 0, i32 0), i32 noundef 526, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3.124, i32 0, i32 0)) #22, !dbg !10112
  br label %102, !dbg !10114

11:                                               ; preds = %8
  %12 = tail call i32 @save_and_set_interrupt_mask() #22, !dbg !10115
  call void @llvm.dbg.value(metadata i32 %12, metadata !10098, metadata !DIExpression()), !dbg !10101
  %13 = load volatile i8, i8* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 17), align 1, !dbg !10116, !range !4202
  %14 = icmp eq i8 %13, 0, !dbg !10116
  br i1 %14, label %16, label %15, !dbg !10118

15:                                               ; preds = %11
  tail call void @restore_interrupt_mask(i32 noundef %12) #22, !dbg !10119
  br label %102, !dbg !10121

16:                                               ; preds = %11
  store volatile i8 1, i8* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 17), align 1, !dbg !10122
  tail call void @restore_interrupt_mask(i32 noundef %12) #22, !dbg !10124
  %17 = icmp eq i32 %0, 0, !dbg !10125
  call void @llvm.dbg.value(metadata %struct.msdc_register_t* undef, metadata !10097, metadata !DIExpression()), !dbg !10101
  %18 = select i1 %17, i32* inttoptr (i32 -1610481664 to i32*), i32* inttoptr (i32 -1610416128 to i32*), !dbg !10126
  %19 = load volatile i32, i32* %18, align 65536, !dbg !10126
  %20 = and i32 %19, -251658241, !dbg !10127
  %21 = or i32 %20, 16777216, !dbg !10128
  store volatile i32 %21, i32* %18, align 65536, !dbg !10129
  %22 = select i1 %17, i32* inttoptr (i32 -1610481644 to i32*), i32* inttoptr (i32 -1610416108 to i32*), !dbg !10130
  %23 = load volatile i32, i32* %22, align 4, !dbg !10130
  %24 = and i32 %23, -769, !dbg !10131
  store volatile i32 %24, i32* %22, align 4, !dbg !10132
  %25 = select i1 %17, i32* inttoptr (i32 -1610481596 to i32*), i32* inttoptr (i32 -1610416060 to i32*), !dbg !10133
  %26 = load volatile i32, i32* %25, align 4, !dbg !10133
  %27 = load i32, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 14), align 4, !dbg !10134
  %28 = add i32 %27, -3, !dbg !10136
  %29 = icmp ult i32 %28, 2, !dbg !10136
  %30 = icmp eq i32 %27, 1, !dbg !10136
  %31 = load i32, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 3, i32 6), align 8, !dbg !10136
  %32 = select i1 %30, i32 %31, i32 512, !dbg !10136
  %33 = select i1 %29, i32 1, i32 %32, !dbg !10136
  call void @llvm.dbg.value(metadata i32 %33, metadata !10096, metadata !DIExpression()), !dbg !10101
  tail call void @dvfs_lock(%struct._dvfs_lock_t* noundef nonnull @sd_dvfs_lock) #22, !dbg !10137
  %34 = icmp ugt i32 %3, 1, !dbg !10138
  %35 = select i1 %34, i32 4242, i32 2193, !dbg !10139
  call void @llvm.dbg.value(metadata i32 %35, metadata !10092, metadata !DIExpression()), !dbg !10101
  %36 = mul i32 %33, %2, !dbg !10140
  %37 = tail call i32 @sd_send_command(i32 noundef %0, i32 noundef %35, i32 noundef %36) #22, !dbg !10141
  call void @llvm.dbg.value(metadata i32 %37, metadata !10091, metadata !DIExpression()), !dbg !10101
  %38 = icmp eq i32 %37, 0, !dbg !10142
  br i1 %38, label %39, label %95, !dbg !10144

39:                                               ; preds = %16
  %40 = tail call i32 @sd_check_card_status(i32 noundef %0) #22, !dbg !10145
  call void @llvm.dbg.value(metadata i32 %40, metadata !10091, metadata !DIExpression()), !dbg !10101
  %41 = icmp eq i32 %40, 0, !dbg !10146
  br i1 %41, label %42, label %95, !dbg !10148

42:                                               ; preds = %39
  %43 = zext i32 %3 to i64, !dbg !10149
  %44 = shl nuw nsw i64 %43, 7, !dbg !10150
  call void @llvm.dbg.value(metadata i64 %44, metadata !10094, metadata !DIExpression()), !dbg !10101
  call void @llvm.dbg.value(metadata i32 0, metadata !10093, metadata !DIExpression()), !dbg !10101
  %45 = icmp eq i32 %3, 0, !dbg !10151
  br i1 %45, label %71, label %46, !dbg !10152

46:                                               ; preds = %42
  %47 = select i1 %17, i32* inttoptr (i32 -1610481660 to i32*), i32* inttoptr (i32 -1610416124 to i32*)
  %48 = select i1 %17, i32* inttoptr (i32 -1610481648 to i32*), i32* inttoptr (i32 -1610416112 to i32*)
  br label %49, !dbg !10152

49:                                               ; preds = %46, %67
  %50 = phi i32 [ 0, %46 ], [ %68, %67 ]
  call void @llvm.dbg.value(metadata i32 %50, metadata !10093, metadata !DIExpression()), !dbg !10101
  %51 = load volatile i32, i32* %25, align 4, !dbg !10153
  call void @llvm.dbg.value(metadata i32 %51, metadata !10099, metadata !DIExpression()), !dbg !10101
  %52 = icmp ult i32 %51, 2, !dbg !10155
  br i1 %52, label %59, label %53, !dbg !10157

53:                                               ; preds = %49
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__FUNCTION__.hal_sd_read_blocks, i32 0, i32 0), i32 noundef 584, i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.9, i32 0, i32 0), i32 noundef %51) #22, !dbg !10158
  %54 = and i32 %51, 2, !dbg !10160
  %55 = icmp eq i32 %54, 0, !dbg !10160
  br i1 %55, label %56, label %95, !dbg !10162

56:                                               ; preds = %53
  %57 = and i32 %51, 1020, !dbg !10163
  %58 = icmp eq i32 %57, 0, !dbg !10163
  br i1 %58, label %59, label %95, !dbg !10165

59:                                               ; preds = %56, %49
  %60 = load volatile i32, i32* %47, align 4, !dbg !10166
  %61 = and i32 %60, 4, !dbg !10168
  %62 = icmp eq i32 %61, 0, !dbg !10168
  br i1 %62, label %67, label %63, !dbg !10169

63:                                               ; preds = %59
  %64 = load volatile i32, i32* %48, align 16, !dbg !10170
  %65 = getelementptr inbounds i32, i32* %1, i32 %50, !dbg !10172
  store i32 %64, i32* %65, align 4, !dbg !10173
  %66 = add i32 %50, 1, !dbg !10174
  call void @llvm.dbg.value(metadata i32 %66, metadata !10093, metadata !DIExpression()), !dbg !10101
  br label %67, !dbg !10175

67:                                               ; preds = %63, %59
  %68 = phi i32 [ %66, %63 ], [ %50, %59 ], !dbg !10101
  call void @llvm.dbg.value(metadata i32 %68, metadata !10093, metadata !DIExpression()), !dbg !10101
  %69 = zext i32 %68 to i64, !dbg !10176
  %70 = icmp ugt i64 %44, %69, !dbg !10151
  br i1 %70, label %49, label %71, !dbg !10152, !llvm.loop !10177

71:                                               ; preds = %67, %42
  tail call void @msdc_reset(i32 noundef %0) #22, !dbg !10179
  %72 = select i1 %17, i32* inttoptr (i32 -1610481656 to i32*), i32* inttoptr (i32 -1610416120 to i32*), !dbg !10180
  %73 = load volatile i32, i32* %72, align 8, !dbg !10180
  %74 = icmp eq i32 %3, 1, !dbg !10181
  br i1 %74, label %75, label %78, !dbg !10183

75:                                               ; preds = %71
  %76 = tail call i32 @sd_wait_card_not_busy(i32 noundef %0) #22, !dbg !10184
  call void @llvm.dbg.value(metadata i32 %76, metadata !10091, metadata !DIExpression()), !dbg !10101
  %77 = icmp eq i32 %76, 0, !dbg !10186
  br i1 %77, label %81, label %95, !dbg !10188

78:                                               ; preds = %71
  %79 = tail call i32 @sd_stop_transfer(i32 noundef %0) #22, !dbg !10189
  call void @llvm.dbg.value(metadata i32 %79, metadata !10091, metadata !DIExpression()), !dbg !10101
  %80 = icmp eq i32 %79, 0, !dbg !10191
  br i1 %80, label %81, label %95, !dbg !10193

81:                                               ; preds = %78, %75
  %82 = select i1 %17, i32* inttoptr (i32 -1610481616 to i32*), i32* inttoptr (i32 -1610416080 to i32*)
  br label %83, !dbg !10194

83:                                               ; preds = %90, %81
  %84 = tail call zeroext i1 @msdc_card_is_present(i32 noundef %0) #22, !dbg !10195
  br i1 %84, label %85, label %94, !dbg !10194

85:                                               ; preds = %83
  %86 = load i32, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 6), align 8, !dbg !10196
  %87 = shl i32 %86, 16, !dbg !10198
  %88 = tail call i32 @sd_send_command(i32 noundef %0, i32 noundef 141, i32 noundef %87) #22, !dbg !10199
  call void @llvm.dbg.value(metadata i32 %88, metadata !10091, metadata !DIExpression()), !dbg !10101
  %89 = icmp eq i32 %88, 0, !dbg !10200
  br i1 %89, label %90, label %95, !dbg !10202

90:                                               ; preds = %85
  %91 = load volatile i32, i32* %82, align 16, !dbg !10203
  call void @llvm.dbg.value(metadata i32 %91, metadata !10095, metadata !DIExpression()), !dbg !10101
  %92 = and i32 %91, 7936, !dbg !10204
  %93 = icmp eq i32 %92, 2304, !dbg !10204
  br i1 %93, label %94, label %83, !dbg !10204, !llvm.loop !10206

94:                                               ; preds = %90, %83
  tail call void @msdc_reset(i32 noundef %0) #22, !dbg !10208
  tail call void @dvfs_unlock(%struct._dvfs_lock_t* noundef nonnull @sd_dvfs_lock) #22, !dbg !10209
  store volatile i8 0, i8* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 17), align 1, !dbg !10210
  br label %102, !dbg !10211

95:                                               ; preds = %56, %53, %85, %78, %75, %39, %16
  %96 = phi i32 [ %37, %16 ], [ %40, %39 ], [ %76, %75 ], [ %79, %78 ], [ %88, %85 ], [ -7, %56 ], [ -10, %53 ], !dbg !10101
  call void @llvm.dbg.value(metadata i32 %96, metadata !10091, metadata !DIExpression()), !dbg !10101
  call void @llvm.dbg.label(metadata !10100), !dbg !10212
  store i32 %96, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 13), align 8, !dbg !10213
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__FUNCTION__.hal_sd_read_blocks, i32 0, i32 0), i32 noundef 645, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.127, i32 0, i32 0), i32 noundef %96) #22, !dbg !10214
  tail call void @msdc_reset(i32 noundef %0) #22, !dbg !10215
  %97 = select i1 %17, i32* inttoptr (i32 -1610481656 to i32*), i32* inttoptr (i32 -1610416120 to i32*), !dbg !10216
  %98 = load volatile i32, i32* %97, align 8, !dbg !10216
  br i1 %34, label %99, label %101, !dbg !10217

99:                                               ; preds = %95
  %100 = tail call i32 @sd_stop_transfer(i32 noundef %0) #22, !dbg !10218
  br label %101, !dbg !10221

101:                                              ; preds = %99, %95
  tail call void @dvfs_unlock(%struct._dvfs_lock_t* noundef nonnull @sd_dvfs_lock) #22, !dbg !10222
  store volatile i8 0, i8* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 17), align 1, !dbg !10223
  br label %102, !dbg !10224

102:                                              ; preds = %101, %94, %15, %10, %7
  %103 = phi i32 [ -1, %7 ], [ -1, %10 ], [ -2, %15 ], [ -1, %101 ], [ 0, %94 ], !dbg !10101
  ret i32 %103, !dbg !10225
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_sd_write_blocks(i32 noundef %0, i32* noundef readonly %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !10226 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10230, metadata !DIExpression()), !dbg !10244
  call void @llvm.dbg.value(metadata i32* %1, metadata !10231, metadata !DIExpression()), !dbg !10244
  call void @llvm.dbg.value(metadata i32 %2, metadata !10232, metadata !DIExpression()), !dbg !10244
  call void @llvm.dbg.value(metadata i32 %3, metadata !10233, metadata !DIExpression()), !dbg !10244
  call void @llvm.dbg.value(metadata i32 0, metadata !10236, metadata !DIExpression()), !dbg !10244
  call void @llvm.dbg.value(metadata i64 0, metadata !10237, metadata !DIExpression()), !dbg !10244
  %5 = load volatile i8, i8* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 16), align 4, !dbg !10245, !range !4202
  %6 = icmp eq i8 %5, 0, !dbg !10247
  br i1 %6, label %7, label %8, !dbg !10248

7:                                                ; preds = %4
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @__FUNCTION__.hal_sd_write_blocks, i32 0, i32 0), i32 noundef 676, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i32 0, i32 0)) #22, !dbg !10249
  br label %117, !dbg !10251

8:                                                ; preds = %4
  %9 = icmp eq i32* %1, null, !dbg !10252
  br i1 %9, label %10, label %11, !dbg !10254

10:                                               ; preds = %8
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @__FUNCTION__.hal_sd_write_blocks, i32 0, i32 0), i32 noundef 681, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3.124, i32 0, i32 0)) #22, !dbg !10255
  br label %117, !dbg !10257

11:                                               ; preds = %8
  %12 = tail call i32 @save_and_set_interrupt_mask() #22, !dbg !10258
  call void @llvm.dbg.value(metadata i32 %12, metadata !10241, metadata !DIExpression()), !dbg !10244
  %13 = load volatile i8, i8* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 17), align 1, !dbg !10259, !range !4202
  %14 = icmp eq i8 %13, 0, !dbg !10259
  br i1 %14, label %16, label %15, !dbg !10261

15:                                               ; preds = %11
  tail call void @restore_interrupt_mask(i32 noundef %12) #22, !dbg !10262
  br label %117, !dbg !10264

16:                                               ; preds = %11
  store volatile i8 1, i8* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 17), align 1, !dbg !10265
  tail call void @restore_interrupt_mask(i32 noundef %12) #22, !dbg !10267
  %17 = icmp eq i32 %0, 0, !dbg !10268
  call void @llvm.dbg.value(metadata %struct.msdc_register_t* undef, metadata !10240, metadata !DIExpression()), !dbg !10244
  %18 = select i1 %17, i32* inttoptr (i32 -1610481664 to i32*), i32* inttoptr (i32 -1610416128 to i32*), !dbg !10269
  %19 = load volatile i32, i32* %18, align 65536, !dbg !10269
  %20 = and i32 %19, -251658241, !dbg !10270
  %21 = or i32 %20, 16777216, !dbg !10271
  store volatile i32 %21, i32* %18, align 65536, !dbg !10272
  %22 = select i1 %17, i32* inttoptr (i32 -1610481644 to i32*), i32* inttoptr (i32 -1610416108 to i32*), !dbg !10273
  %23 = load volatile i32, i32* %22, align 4, !dbg !10273
  %24 = and i32 %23, -769, !dbg !10274
  store volatile i32 %24, i32* %22, align 4, !dbg !10275
  tail call void @msdc_reset(i32 noundef %0) #22, !dbg !10276
  %25 = load i8, i8* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 10), align 2, !dbg !10277, !range !4202
  %26 = icmp eq i8 %25, 0, !dbg !10277
  br i1 %26, label %28, label %27, !dbg !10279

27:                                               ; preds = %16
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @__FUNCTION__.hal_sd_write_blocks, i32 0, i32 0), i32 noundef 705, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.10, i32 0, i32 0)) #22, !dbg !10280
  br label %117, !dbg !10282

28:                                               ; preds = %16
  %29 = load i32, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 14), align 4, !dbg !10283
  %30 = add i32 %29, -3, !dbg !10285
  %31 = icmp ult i32 %30, 2, !dbg !10285
  %32 = icmp eq i32 %29, 1, !dbg !10285
  %33 = load i32, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 3, i32 6), align 8, !dbg !10285
  %34 = select i1 %32, i32 %33, i32 512, !dbg !10285
  %35 = select i1 %31, i32 1, i32 %34, !dbg !10285
  call void @llvm.dbg.value(metadata i32 %35, metadata !10239, metadata !DIExpression()), !dbg !10244
  tail call void @dvfs_lock(%struct._dvfs_lock_t* noundef nonnull @sd_dvfs_lock) #22, !dbg !10286
  %36 = icmp ugt i32 %3, 1, !dbg !10287
  %37 = select i1 %36, i32 12441, i32 10392, !dbg !10288
  call void @llvm.dbg.value(metadata i32 %37, metadata !10235, metadata !DIExpression()), !dbg !10244
  %38 = mul i32 %35, %2, !dbg !10289
  %39 = tail call i32 @sd_send_command(i32 noundef %0, i32 noundef %37, i32 noundef %38) #22, !dbg !10290
  call void @llvm.dbg.value(metadata i32 %39, metadata !10234, metadata !DIExpression()), !dbg !10244
  %40 = icmp eq i32 %39, 0, !dbg !10291
  br i1 %40, label %41, label %110, !dbg !10293

41:                                               ; preds = %28
  %42 = tail call i32 @sd_check_card_status(i32 noundef %0) #22, !dbg !10294
  call void @llvm.dbg.value(metadata i32 %42, metadata !10234, metadata !DIExpression()), !dbg !10244
  %43 = icmp eq i32 %42, 0, !dbg !10295
  br i1 %43, label %44, label %110, !dbg !10297

44:                                               ; preds = %41
  %45 = zext i32 %3 to i64, !dbg !10298
  %46 = shl nuw nsw i64 %45, 7, !dbg !10299
  call void @llvm.dbg.value(metadata i64 %46, metadata !10237, metadata !DIExpression()), !dbg !10244
  call void @llvm.dbg.value(metadata i32 0, metadata !10236, metadata !DIExpression()), !dbg !10244
  %47 = icmp eq i32 %3, 0, !dbg !10300
  br i1 %47, label %79, label %48, !dbg !10301

48:                                               ; preds = %44
  %49 = select i1 %17, i32* inttoptr (i32 -1610481596 to i32*), i32* inttoptr (i32 -1610416060 to i32*)
  %50 = select i1 %17, i32* inttoptr (i32 -1610481660 to i32*), i32* inttoptr (i32 -1610416124 to i32*)
  %51 = select i1 %17, i32* inttoptr (i32 -1610481648 to i32*), i32* inttoptr (i32 -1610416112 to i32*)
  br label %52, !dbg !10301

52:                                               ; preds = %48, %70
  %53 = phi i32 [ 0, %48 ], [ %71, %70 ]
  call void @llvm.dbg.value(metadata i32 %53, metadata !10236, metadata !DIExpression()), !dbg !10244
  %54 = load volatile i32, i32* %49, align 4, !dbg !10302
  call void @llvm.dbg.value(metadata i32 %54, metadata !10242, metadata !DIExpression()), !dbg !10244
  %55 = icmp ult i32 %54, 2, !dbg !10304
  br i1 %55, label %62, label %56, !dbg !10306

56:                                               ; preds = %52
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @__FUNCTION__.hal_sd_write_blocks, i32 0, i32 0), i32 noundef 742, i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.11, i32 0, i32 0), i32 noundef %54) #22, !dbg !10307
  %57 = and i32 %54, 2, !dbg !10309
  %58 = icmp eq i32 %57, 0, !dbg !10309
  br i1 %58, label %59, label %110, !dbg !10311

59:                                               ; preds = %56
  %60 = and i32 %54, 1020, !dbg !10312
  %61 = icmp eq i32 %60, 0, !dbg !10312
  br i1 %61, label %62, label %110, !dbg !10314

62:                                               ; preds = %59, %52
  %63 = load volatile i32, i32* %50, align 4, !dbg !10315
  %64 = and i32 %63, 4, !dbg !10317
  %65 = icmp eq i32 %64, 0, !dbg !10317
  br i1 %65, label %70, label %66, !dbg !10318

66:                                               ; preds = %62
  %67 = getelementptr inbounds i32, i32* %1, i32 %53, !dbg !10319
  %68 = load i32, i32* %67, align 4, !dbg !10321
  store volatile i32 %68, i32* %51, align 16, !dbg !10322
  %69 = add i32 %53, 1, !dbg !10323
  call void @llvm.dbg.value(metadata i32 %69, metadata !10236, metadata !DIExpression()), !dbg !10244
  br label %70, !dbg !10324

70:                                               ; preds = %66, %62
  %71 = phi i32 [ %69, %66 ], [ %53, %62 ], !dbg !10244
  call void @llvm.dbg.value(metadata i32 %71, metadata !10236, metadata !DIExpression()), !dbg !10244
  %72 = zext i32 %71 to i64, !dbg !10325
  %73 = icmp ugt i64 %46, %72, !dbg !10300
  br i1 %73, label %52, label %74, !dbg !10301, !llvm.loop !10326

74:                                               ; preds = %70
  %75 = icmp eq i32 %3, 1, !dbg !10328
  br i1 %75, label %76, label %79, !dbg !10330

76:                                               ; preds = %74
  %77 = tail call i32 @sd_wait_card_not_busy(i32 noundef %0) #22, !dbg !10331
  call void @llvm.dbg.value(metadata i32 %77, metadata !10234, metadata !DIExpression()), !dbg !10244
  %78 = icmp eq i32 %77, 0, !dbg !10333
  br i1 %78, label %79, label %110, !dbg !10335

79:                                               ; preds = %44, %76, %74
  %80 = phi i1 [ true, %76 ], [ false, %74 ], [ false, %44 ]
  %81 = tail call i32 @sd_wait_data_ready(i32 noundef %0) #22, !dbg !10336
  call void @llvm.dbg.value(metadata i32 %81, metadata !10234, metadata !DIExpression()), !dbg !10244
  %82 = icmp eq i32 %81, 0, !dbg !10337
  br i1 %82, label %83, label %110, !dbg !10339

83:                                               ; preds = %79
  br i1 %36, label %84, label %90, !dbg !10340

84:                                               ; preds = %83
  %85 = tail call i32 @sd_wait_last_block_complete(i32 noundef %0) #22, !dbg !10341
  call void @llvm.dbg.value(metadata i32 %85, metadata !10234, metadata !DIExpression()), !dbg !10244
  %86 = icmp eq i32 %85, 0, !dbg !10344
  br i1 %86, label %87, label %110, !dbg !10346

87:                                               ; preds = %84
  %88 = tail call i32 @sd_stop_transfer(i32 noundef %0) #22, !dbg !10347
  call void @llvm.dbg.value(metadata i32 %88, metadata !10234, metadata !DIExpression()), !dbg !10244
  %89 = icmp eq i32 %88, 0, !dbg !10348
  br i1 %89, label %94, label %110, !dbg !10350

90:                                               ; preds = %83
  br i1 %80, label %91, label %94, !dbg !10351

91:                                               ; preds = %90
  %92 = tail call i32 @sd_wait_card_not_busy(i32 noundef %0) #22, !dbg !10352
  call void @llvm.dbg.value(metadata i32 %92, metadata !10234, metadata !DIExpression()), !dbg !10244
  %93 = icmp eq i32 %92, 0, !dbg !10355
  br i1 %93, label %94, label %110, !dbg !10357

94:                                               ; preds = %90, %91, %87
  %95 = select i1 %17, i32* inttoptr (i32 -1610481616 to i32*), i32* inttoptr (i32 -1610416080 to i32*)
  br label %96, !dbg !10358

96:                                               ; preds = %103, %94
  %97 = tail call zeroext i1 @msdc_card_is_present(i32 noundef %0) #22, !dbg !10359
  br i1 %97, label %98, label %107, !dbg !10358

98:                                               ; preds = %96
  %99 = load i32, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 6), align 8, !dbg !10360
  %100 = shl i32 %99, 16, !dbg !10362
  %101 = tail call i32 @sd_send_command(i32 noundef %0, i32 noundef 141, i32 noundef %100) #22, !dbg !10363
  call void @llvm.dbg.value(metadata i32 %101, metadata !10234, metadata !DIExpression()), !dbg !10244
  %102 = icmp eq i32 %101, 0, !dbg !10364
  br i1 %102, label %103, label %110, !dbg !10366

103:                                              ; preds = %98
  %104 = load volatile i32, i32* %95, align 16, !dbg !10367
  call void @llvm.dbg.value(metadata i32 %104, metadata !10238, metadata !DIExpression()), !dbg !10244
  %105 = and i32 %104, 7936, !dbg !10368
  %106 = icmp eq i32 %105, 2304, !dbg !10368
  br i1 %106, label %107, label %96, !dbg !10368, !llvm.loop !10370

107:                                              ; preds = %103, %96
  %108 = select i1 %17, i32* inttoptr (i32 -1610481656 to i32*), i32* inttoptr (i32 -1610416120 to i32*), !dbg !10372
  %109 = load volatile i32, i32* %108, align 8, !dbg !10372
  tail call void @msdc_reset(i32 noundef %0) #22, !dbg !10373
  tail call void @dvfs_unlock(%struct._dvfs_lock_t* noundef nonnull @sd_dvfs_lock) #22, !dbg !10374
  store volatile i8 0, i8* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 17), align 1, !dbg !10375
  br label %117, !dbg !10376

110:                                              ; preds = %59, %56, %98, %91, %87, %84, %79, %76, %41, %28
  %111 = phi i32 [ %39, %28 ], [ %42, %41 ], [ %77, %76 ], [ %81, %79 ], [ %85, %84 ], [ %88, %87 ], [ %92, %91 ], [ %101, %98 ], [ -7, %59 ], [ -10, %56 ], !dbg !10244
  call void @llvm.dbg.value(metadata i32 %111, metadata !10234, metadata !DIExpression()), !dbg !10244
  call void @llvm.dbg.label(metadata !10243), !dbg !10377
  store i32 %111, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 13), align 8, !dbg !10378
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @__FUNCTION__.hal_sd_write_blocks, i32 0, i32 0), i32 noundef 821, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.127, i32 0, i32 0), i32 noundef %111) #22, !dbg !10379
  tail call void @msdc_reset(i32 noundef %0) #22, !dbg !10380
  %112 = select i1 %17, i32* inttoptr (i32 -1610481656 to i32*), i32* inttoptr (i32 -1610416120 to i32*), !dbg !10381
  %113 = load volatile i32, i32* %112, align 8, !dbg !10381
  br i1 %36, label %114, label %116, !dbg !10382

114:                                              ; preds = %110
  %115 = tail call i32 @sd_stop_transfer(i32 noundef %0) #22, !dbg !10383
  br label %116, !dbg !10386

116:                                              ; preds = %114, %110
  tail call void @dvfs_unlock(%struct._dvfs_lock_t* noundef nonnull @sd_dvfs_lock) #22, !dbg !10387
  store volatile i8 0, i8* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 17), align 1, !dbg !10388
  br label %117, !dbg !10389

117:                                              ; preds = %116, %107, %27, %15, %10, %7
  %118 = phi i32 [ -1, %7 ], [ -1, %10 ], [ -2, %15 ], [ -1, %27 ], [ -1, %116 ], [ 0, %107 ], !dbg !10244
  ret i32 %118, !dbg !10390
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_sd_read_blocks_dma_blocking(i32 noundef %0, i32* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !10391 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10393, metadata !DIExpression()), !dbg !10405
  call void @llvm.dbg.value(metadata i32* %1, metadata !10394, metadata !DIExpression()), !dbg !10405
  call void @llvm.dbg.value(metadata i32 %2, metadata !10395, metadata !DIExpression()), !dbg !10405
  call void @llvm.dbg.value(metadata i32 %3, metadata !10396, metadata !DIExpression()), !dbg !10405
  %5 = load volatile i8, i8* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 16), align 4, !dbg !10406, !range !4202
  %6 = icmp eq i8 %5, 0, !dbg !10408
  br i1 %6, label %7, label %8, !dbg !10409

7:                                                ; preds = %4
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @__FUNCTION__.hal_sd_read_blocks_dma_blocking, i32 0, i32 0), i32 noundef 850, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i32 0, i32 0)) #22, !dbg !10410
  br label %76, !dbg !10412

8:                                                ; preds = %4
  %9 = icmp eq i32* %1, null, !dbg !10413
  br i1 %9, label %10, label %11, !dbg !10415

10:                                               ; preds = %8
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @__FUNCTION__.hal_sd_read_blocks_dma_blocking, i32 0, i32 0), i32 noundef 855, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3.124, i32 0, i32 0)) #22, !dbg !10416
  br label %76, !dbg !10418

11:                                               ; preds = %8
  %12 = tail call i32 @save_and_set_interrupt_mask() #22, !dbg !10419
  call void @llvm.dbg.value(metadata i32 %12, metadata !10403, metadata !DIExpression()), !dbg !10405
  %13 = load volatile i8, i8* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 17), align 1, !dbg !10420, !range !4202
  %14 = icmp eq i8 %13, 0, !dbg !10420
  br i1 %14, label %16, label %15, !dbg !10422

15:                                               ; preds = %11
  tail call void @restore_interrupt_mask(i32 noundef %12) #22, !dbg !10423
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @__FUNCTION__.hal_sd_read_blocks_dma_blocking, i32 0, i32 0), i32 noundef 862, i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.12, i32 0, i32 0)) #22, !dbg !10425
  br label %76, !dbg !10426

16:                                               ; preds = %11
  store volatile i8 1, i8* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 17), align 1, !dbg !10427
  tail call void @restore_interrupt_mask(i32 noundef %12) #22, !dbg !10429
  %17 = icmp eq i32 %0, 0, !dbg !10430
  %18 = select i1 %17, i32 1, i32 2, !dbg !10431
  call void @llvm.dbg.value(metadata i32 %18, metadata !10402, metadata !DIExpression()), !dbg !10405
  call void @llvm.dbg.value(metadata %struct.msdc_register_t* undef, metadata !10401, metadata !DIExpression()), !dbg !10405
  tail call void @msdc_dma_enable(i32 noundef %0) #22, !dbg !10432
  tail call void @msdc_dma_init(i32 noundef %0) #22, !dbg !10433
  tail call void @msdc_reset(i32 noundef %0) #22, !dbg !10434
  %19 = select i1 %17, i32* inttoptr (i32 -1610481596 to i32*), i32* inttoptr (i32 -1610416060 to i32*), !dbg !10435
  %20 = load volatile i32, i32* %19, align 4, !dbg !10435
  %21 = load i32, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 14), align 4, !dbg !10436
  %22 = add i32 %21, -3, !dbg !10438
  %23 = icmp ult i32 %22, 2, !dbg !10438
  %24 = icmp eq i32 %21, 1, !dbg !10438
  %25 = load i32, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 3, i32 6), align 8, !dbg !10438
  %26 = select i1 %24, i32 %25, i32 512, !dbg !10438
  %27 = select i1 %23, i32 1, i32 %26, !dbg !10438
  call void @llvm.dbg.value(metadata i32 %27, metadata !10400, metadata !DIExpression()), !dbg !10405
  tail call void @dvfs_lock(%struct._dvfs_lock_t* noundef nonnull @sd_dvfs_lock) #22, !dbg !10439
  %28 = ptrtoint i32* %1 to i32, !dbg !10440
  %29 = shl i32 %3, 9, !dbg !10441
  tail call void @msdc_dma_config(i32 noundef %0, i32 noundef %28, i32 noundef %29, i1 noundef zeroext false) #22, !dbg !10442
  %30 = icmp ugt i32 %3, 1, !dbg !10443
  %31 = select i1 %30, i32 4242, i32 2193, !dbg !10444
  call void @llvm.dbg.value(metadata i32 %31, metadata !10398, metadata !DIExpression()), !dbg !10405
  %32 = mul i32 %27, %2, !dbg !10445
  %33 = tail call i32 @sd_send_command(i32 noundef %0, i32 noundef %31, i32 noundef %32) #22, !dbg !10446
  call void @llvm.dbg.value(metadata i32 %33, metadata !10397, metadata !DIExpression()), !dbg !10405
  %34 = icmp eq i32 %33, 0, !dbg !10447
  br i1 %34, label %35, label %67, !dbg !10449

35:                                               ; preds = %16
  %36 = tail call i32 @sd_check_card_status(i32 noundef %0) #22, !dbg !10450
  call void @llvm.dbg.value(metadata i32 %36, metadata !10397, metadata !DIExpression()), !dbg !10405
  %37 = icmp eq i32 %36, 0, !dbg !10451
  br i1 %37, label %38, label %67, !dbg !10453

38:                                               ; preds = %35
  tail call void @msdc_dma_wait_transfer_complete(i32 noundef %0, i32 noundef %28) #22, !dbg !10454
  %39 = tail call i32 @sd_wait_data_ready(i32 noundef %0) #22, !dbg !10455
  call void @llvm.dbg.value(metadata i32 %39, metadata !10397, metadata !DIExpression()), !dbg !10405
  %40 = icmp eq i32 %39, 0, !dbg !10456
  br i1 %40, label %41, label %67, !dbg !10458

41:                                               ; preds = %38
  tail call void @msdc_reset(i32 noundef %0) #22, !dbg !10459
  %42 = select i1 %17, i32* inttoptr (i32 -1610481656 to i32*), i32* inttoptr (i32 -1610416120 to i32*), !dbg !10460
  %43 = load volatile i32, i32* %42, align 8, !dbg !10460
  tail call void @msdc_dma_disable(i32 noundef %0) #22, !dbg !10461
  %44 = icmp eq i32 %3, 1, !dbg !10462
  br i1 %44, label %45, label %48, !dbg !10464

45:                                               ; preds = %41
  %46 = tail call i32 @sd_wait_card_not_busy(i32 noundef %0) #22, !dbg !10465
  call void @llvm.dbg.value(metadata i32 %46, metadata !10397, metadata !DIExpression()), !dbg !10405
  %47 = icmp eq i32 %46, 0, !dbg !10467
  br i1 %47, label %51, label %67, !dbg !10469

48:                                               ; preds = %41
  %49 = tail call i32 @sd_stop_transfer(i32 noundef %0) #22, !dbg !10470
  call void @llvm.dbg.value(metadata i32 %49, metadata !10397, metadata !DIExpression()), !dbg !10405
  %50 = icmp eq i32 %49, 0, !dbg !10472
  br i1 %50, label %51, label %67, !dbg !10474

51:                                               ; preds = %48, %45
  %52 = select i1 %17, i32* inttoptr (i32 -1610481616 to i32*), i32* inttoptr (i32 -1610416080 to i32*)
  br label %53, !dbg !10475

53:                                               ; preds = %60, %51
  %54 = tail call zeroext i1 @msdc_card_is_present(i32 noundef %0) #22, !dbg !10476
  br i1 %54, label %55, label %64, !dbg !10475

55:                                               ; preds = %53
  %56 = load i32, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 6), align 8, !dbg !10477
  %57 = shl i32 %56, 16, !dbg !10479
  %58 = tail call i32 @sd_send_command(i32 noundef %0, i32 noundef 141, i32 noundef %57) #22, !dbg !10480
  call void @llvm.dbg.value(metadata i32 %58, metadata !10397, metadata !DIExpression()), !dbg !10405
  %59 = icmp eq i32 %58, 0, !dbg !10481
  br i1 %59, label %60, label %67, !dbg !10483

60:                                               ; preds = %55
  %61 = load volatile i32, i32* %52, align 16, !dbg !10484
  call void @llvm.dbg.value(metadata i32 %61, metadata !10399, metadata !DIExpression()), !dbg !10405
  %62 = and i32 %61, 7936, !dbg !10485
  %63 = icmp eq i32 %62, 2304, !dbg !10485
  br i1 %63, label %64, label %53, !dbg !10485, !llvm.loop !10487

64:                                               ; preds = %60, %53
  tail call void @msdc_reset(i32 noundef %0) #22, !dbg !10489
  %65 = tail call i32 @pdma_stop(i32 noundef %18) #22, !dbg !10490
  %66 = tail call i32 @pdma_deinit(i32 noundef %18) #22, !dbg !10491
  tail call void @dvfs_unlock(%struct._dvfs_lock_t* noundef nonnull @sd_dvfs_lock) #22, !dbg !10492
  store volatile i8 0, i8* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 17), align 1, !dbg !10493
  br label %76, !dbg !10494

67:                                               ; preds = %55, %48, %45, %38, %35, %16
  %68 = phi i32 [ %33, %16 ], [ %36, %35 ], [ %39, %38 ], [ %46, %45 ], [ %49, %48 ], [ %58, %55 ], !dbg !10405
  call void @llvm.dbg.value(metadata i32 %68, metadata !10397, metadata !DIExpression()), !dbg !10405
  call void @llvm.dbg.label(metadata !10404), !dbg !10495
  store i32 %68, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 13), align 8, !dbg !10496
  tail call void @msdc_dma_disable(i32 noundef %0) #22, !dbg !10497
  tail call void @msdc_reset(i32 noundef %0) #22, !dbg !10498
  %69 = select i1 %17, i32* inttoptr (i32 -1610481656 to i32*), i32* inttoptr (i32 -1610416120 to i32*), !dbg !10499
  %70 = load volatile i32, i32* %69, align 8, !dbg !10499
  br i1 %30, label %71, label %73, !dbg !10500

71:                                               ; preds = %67
  %72 = tail call i32 @sd_stop_transfer(i32 noundef %0) #22, !dbg !10501
  br label %73, !dbg !10504

73:                                               ; preds = %71, %67
  %74 = tail call i32 @pdma_stop(i32 noundef %18) #22, !dbg !10505
  %75 = tail call i32 @pdma_deinit(i32 noundef %18) #22, !dbg !10506
  tail call void @dvfs_unlock(%struct._dvfs_lock_t* noundef nonnull @sd_dvfs_lock) #22, !dbg !10507
  store volatile i8 0, i8* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 17), align 1, !dbg !10508
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @__FUNCTION__.hal_sd_read_blocks_dma_blocking, i32 0, i32 0), i32 noundef 984, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.127, i32 0, i32 0), i32 noundef %68) #22, !dbg !10509
  br label %76, !dbg !10510

76:                                               ; preds = %73, %64, %15, %10, %7
  %77 = phi i32 [ -1, %7 ], [ -1, %10 ], [ -2, %15 ], [ -1, %73 ], [ 0, %64 ], !dbg !10405
  ret i32 %77, !dbg !10511
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_sd_write_blocks_dma_blocking(i32 noundef %0, i32* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !10512 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10514, metadata !DIExpression()), !dbg !10526
  call void @llvm.dbg.value(metadata i32* %1, metadata !10515, metadata !DIExpression()), !dbg !10526
  call void @llvm.dbg.value(metadata i32 %2, metadata !10516, metadata !DIExpression()), !dbg !10526
  call void @llvm.dbg.value(metadata i32 %3, metadata !10517, metadata !DIExpression()), !dbg !10526
  %5 = load volatile i8, i8* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 16), align 4, !dbg !10527, !range !4202
  %6 = icmp eq i8 %5, 0, !dbg !10529
  br i1 %6, label %7, label %8, !dbg !10530

7:                                                ; preds = %4
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @__FUNCTION__.hal_sd_write_blocks_dma_blocking, i32 0, i32 0), i32 noundef 1001, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i32 0, i32 0)) #22, !dbg !10531
  br label %86, !dbg !10533

8:                                                ; preds = %4
  %9 = icmp eq i32* %1, null, !dbg !10534
  br i1 %9, label %10, label %11, !dbg !10536

10:                                               ; preds = %8
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @__FUNCTION__.hal_sd_write_blocks_dma_blocking, i32 0, i32 0), i32 noundef 1006, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3.124, i32 0, i32 0)) #22, !dbg !10537
  br label %86, !dbg !10539

11:                                               ; preds = %8
  %12 = tail call i32 @save_and_set_interrupt_mask() #22, !dbg !10540
  call void @llvm.dbg.value(metadata i32 %12, metadata !10524, metadata !DIExpression()), !dbg !10526
  %13 = load volatile i8, i8* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 17), align 1, !dbg !10541, !range !4202
  %14 = icmp eq i8 %13, 0, !dbg !10541
  br i1 %14, label %16, label %15, !dbg !10543

15:                                               ; preds = %11
  tail call void @restore_interrupt_mask(i32 noundef %12) #22, !dbg !10544
  br label %86, !dbg !10546

16:                                               ; preds = %11
  store volatile i8 1, i8* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 17), align 1, !dbg !10547
  tail call void @restore_interrupt_mask(i32 noundef %12) #22, !dbg !10549
  %17 = icmp eq i32 %0, 0, !dbg !10550
  %18 = select i1 %17, i32 1, i32 2, !dbg !10551
  call void @llvm.dbg.value(metadata i32 %18, metadata !10523, metadata !DIExpression()), !dbg !10526
  call void @llvm.dbg.value(metadata %struct.msdc_register_t* undef, metadata !10522, metadata !DIExpression()), !dbg !10526
  tail call void @msdc_dma_enable(i32 noundef %0) #22, !dbg !10552
  tail call void @msdc_dma_init(i32 noundef %0) #22, !dbg !10553
  tail call void @msdc_reset(i32 noundef %0) #22, !dbg !10554
  %19 = load i8, i8* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 10), align 2, !dbg !10555, !range !4202
  %20 = icmp eq i8 %19, 0, !dbg !10555
  br i1 %20, label %22, label %21, !dbg !10557

21:                                               ; preds = %16
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @__FUNCTION__.hal_sd_write_blocks_dma_blocking, i32 0, i32 0), i32 noundef 1029, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.10, i32 0, i32 0)) #22, !dbg !10558
  br label %86, !dbg !10560

22:                                               ; preds = %16
  %23 = load i32, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 14), align 4, !dbg !10561
  %24 = add i32 %23, -3, !dbg !10563
  %25 = icmp ult i32 %24, 2, !dbg !10563
  %26 = icmp eq i32 %23, 1, !dbg !10563
  %27 = load i32, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 3, i32 5), align 4, !dbg !10563
  %28 = select i1 %26, i32 %27, i32 512, !dbg !10563
  %29 = select i1 %25, i32 1, i32 %28, !dbg !10563
  call void @llvm.dbg.value(metadata i32 %29, metadata !10521, metadata !DIExpression()), !dbg !10526
  tail call void @dvfs_lock(%struct._dvfs_lock_t* noundef nonnull @sd_dvfs_lock) #22, !dbg !10564
  %30 = ptrtoint i32* %1 to i32, !dbg !10565
  %31 = shl i32 %3, 9, !dbg !10566
  tail call void @msdc_dma_config(i32 noundef %0, i32 noundef %30, i32 noundef %31, i1 noundef zeroext true) #22, !dbg !10567
  %32 = icmp ugt i32 %3, 1, !dbg !10568
  %33 = select i1 %32, i32 12441, i32 10392, !dbg !10569
  call void @llvm.dbg.value(metadata i32 %33, metadata !10519, metadata !DIExpression()), !dbg !10526
  %34 = mul i32 %29, %2, !dbg !10570
  %35 = tail call i32 @sd_send_command(i32 noundef %0, i32 noundef %33, i32 noundef %34) #22, !dbg !10571
  call void @llvm.dbg.value(metadata i32 %35, metadata !10518, metadata !DIExpression()), !dbg !10526
  %36 = icmp eq i32 %35, 0, !dbg !10572
  br i1 %36, label %37, label %77, !dbg !10574

37:                                               ; preds = %22
  %38 = tail call i32 @sd_check_card_status(i32 noundef %0) #22, !dbg !10575
  call void @llvm.dbg.value(metadata i32 %38, metadata !10518, metadata !DIExpression()), !dbg !10526
  %39 = icmp eq i32 %38, 0, !dbg !10576
  br i1 %39, label %40, label %77, !dbg !10578

40:                                               ; preds = %37
  tail call void @msdc_dma_wait_transfer_complete(i32 noundef %0, i32 noundef %30) #22, !dbg !10579
  %41 = icmp eq i32 %3, 1, !dbg !10580
  br i1 %41, label %42, label %45, !dbg !10582

42:                                               ; preds = %40
  %43 = tail call i32 @sd_wait_card_not_busy(i32 noundef %0) #22, !dbg !10583
  call void @llvm.dbg.value(metadata i32 %43, metadata !10518, metadata !DIExpression()), !dbg !10526
  %44 = icmp eq i32 %43, 0, !dbg !10585
  br i1 %44, label %45, label %77, !dbg !10587

45:                                               ; preds = %42, %40
  %46 = tail call i32 @sd_wait_data_ready(i32 noundef %0) #22, !dbg !10588
  call void @llvm.dbg.value(metadata i32 %46, metadata !10518, metadata !DIExpression()), !dbg !10526
  %47 = icmp eq i32 %46, 0, !dbg !10589
  br i1 %47, label %48, label %77, !dbg !10591

48:                                               ; preds = %45
  tail call void @msdc_dma_disable(i32 noundef %0) #22, !dbg !10592
  br i1 %32, label %49, label %55, !dbg !10593

49:                                               ; preds = %48
  %50 = tail call i32 @sd_wait_last_block_complete(i32 noundef %0) #22, !dbg !10594
  call void @llvm.dbg.value(metadata i32 %50, metadata !10518, metadata !DIExpression()), !dbg !10526
  %51 = icmp eq i32 %50, 0, !dbg !10597
  br i1 %51, label %52, label %77, !dbg !10599

52:                                               ; preds = %49
  %53 = tail call i32 @sd_stop_transfer(i32 noundef %0) #22, !dbg !10600
  call void @llvm.dbg.value(metadata i32 %53, metadata !10518, metadata !DIExpression()), !dbg !10526
  %54 = icmp eq i32 %53, 0, !dbg !10601
  br i1 %54, label %59, label %77, !dbg !10603

55:                                               ; preds = %48
  br i1 %41, label %56, label %59, !dbg !10604

56:                                               ; preds = %55
  %57 = tail call i32 @sd_wait_card_not_busy(i32 noundef %0) #22, !dbg !10605
  call void @llvm.dbg.value(metadata i32 %57, metadata !10518, metadata !DIExpression()), !dbg !10526
  %58 = icmp eq i32 %57, 0, !dbg !10608
  br i1 %58, label %59, label %77, !dbg !10610

59:                                               ; preds = %55, %56, %52
  %60 = select i1 %17, i32* inttoptr (i32 -1610481616 to i32*), i32* inttoptr (i32 -1610416080 to i32*)
  br label %61, !dbg !10611

61:                                               ; preds = %68, %59
  %62 = tail call zeroext i1 @msdc_card_is_present(i32 noundef %0) #22, !dbg !10612
  br i1 %62, label %63, label %72, !dbg !10611

63:                                               ; preds = %61
  %64 = load i32, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 6), align 8, !dbg !10613
  %65 = shl i32 %64, 16, !dbg !10615
  %66 = tail call i32 @sd_send_command(i32 noundef %0, i32 noundef 141, i32 noundef %65) #22, !dbg !10616
  call void @llvm.dbg.value(metadata i32 %66, metadata !10518, metadata !DIExpression()), !dbg !10526
  %67 = icmp eq i32 %66, 0, !dbg !10617
  br i1 %67, label %68, label %77, !dbg !10619

68:                                               ; preds = %63
  %69 = load volatile i32, i32* %60, align 16, !dbg !10620
  call void @llvm.dbg.value(metadata i32 %69, metadata !10520, metadata !DIExpression()), !dbg !10526
  %70 = and i32 %69, 256, !dbg !10621
  %71 = icmp eq i32 %70, 0, !dbg !10621
  br i1 %71, label %61, label %72, !dbg !10623, !llvm.loop !10624

72:                                               ; preds = %68, %61
  %73 = select i1 %17, i32* inttoptr (i32 -1610481656 to i32*), i32* inttoptr (i32 -1610416120 to i32*), !dbg !10626
  %74 = load volatile i32, i32* %73, align 8, !dbg !10626
  tail call void @msdc_reset(i32 noundef %0) #22, !dbg !10627
  tail call void @msdc_dma_disable(i32 noundef %0) #22, !dbg !10628
  %75 = tail call i32 @pdma_stop(i32 noundef %18) #22, !dbg !10629
  %76 = tail call i32 @pdma_deinit(i32 noundef %18) #22, !dbg !10630
  store volatile i8 0, i8* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 17), align 1, !dbg !10631
  tail call void @dvfs_unlock(%struct._dvfs_lock_t* noundef nonnull @sd_dvfs_lock) #22, !dbg !10632
  br label %86, !dbg !10633

77:                                               ; preds = %63, %56, %52, %49, %45, %42, %37, %22
  %78 = phi i32 [ %35, %22 ], [ %38, %37 ], [ %43, %42 ], [ %46, %45 ], [ %50, %49 ], [ %53, %52 ], [ %57, %56 ], [ %66, %63 ], !dbg !10526
  call void @llvm.dbg.value(metadata i32 %78, metadata !10518, metadata !DIExpression()), !dbg !10526
  call void @llvm.dbg.label(metadata !10525), !dbg !10634
  store i32 %78, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 13), align 8, !dbg !10635
  tail call void @msdc_dma_disable(i32 noundef %0) #22, !dbg !10636
  tail call void @msdc_reset(i32 noundef %0) #22, !dbg !10637
  %79 = select i1 %17, i32* inttoptr (i32 -1610481656 to i32*), i32* inttoptr (i32 -1610416120 to i32*), !dbg !10638
  %80 = load volatile i32, i32* %79, align 8, !dbg !10638
  br i1 %32, label %81, label %83, !dbg !10639

81:                                               ; preds = %77
  %82 = tail call i32 @sd_stop_transfer(i32 noundef %0) #22, !dbg !10640
  br label %83, !dbg !10643

83:                                               ; preds = %81, %77
  %84 = tail call i32 @pdma_stop(i32 noundef %18) #22, !dbg !10644
  %85 = tail call i32 @pdma_deinit(i32 noundef %18) #22, !dbg !10645
  tail call void @dvfs_unlock(%struct._dvfs_lock_t* noundef nonnull @sd_dvfs_lock) #22, !dbg !10646
  store volatile i8 0, i8* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 17), align 1, !dbg !10647
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @__FUNCTION__.hal_sd_write_blocks_dma_blocking, i32 0, i32 0), i32 noundef 1147, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.127, i32 0, i32 0), i32 noundef %78) #22, !dbg !10648
  br label %86, !dbg !10649

86:                                               ; preds = %83, %72, %21, %15, %10, %7
  %87 = phi i32 [ -1, %7 ], [ -1, %10 ], [ -2, %15 ], [ -1, %21 ], [ -1, %83 ], [ 0, %72 ], !dbg !10526
  ret i32 %87, !dbg !10650
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_sd_read_blocks_dma(i32 noundef %0, i32* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !10651 {
  %5 = alloca %struct.sd_dma_interrupt_context_t, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !10653, metadata !DIExpression()), !dbg !10672
  call void @llvm.dbg.value(metadata i32* %1, metadata !10654, metadata !DIExpression()), !dbg !10672
  call void @llvm.dbg.value(metadata i32 %2, metadata !10655, metadata !DIExpression()), !dbg !10672
  call void @llvm.dbg.value(metadata i32 %3, metadata !10656, metadata !DIExpression()), !dbg !10672
  %6 = bitcast %struct.sd_dma_interrupt_context_t* %5 to i8*, !dbg !10673
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %6) #24, !dbg !10673
  call void @llvm.dbg.declare(metadata %struct.sd_dma_interrupt_context_t* %5, metadata !10663, metadata !DIExpression()), !dbg !10674
  %7 = getelementptr inbounds [0 x %struct.msdc_config_t], [0 x %struct.msdc_config_t]* bitcast ([2 x %struct.msdc_config_t]* @msdc_config to [0 x %struct.msdc_config_t]*), i32 0, i32 %0, i32 14, !dbg !10675
  %8 = load void (i32, i8*)*, void (i32, i8*)** %7, align 4, !dbg !10675
  %9 = icmp eq void (i32, i8*)* %8, null, !dbg !10677
  br i1 %9, label %10, label %11, !dbg !10678

10:                                               ; preds = %4
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__FUNCTION__.hal_sd_read_blocks_dma, i32 0, i32 0), i32 noundef 1163, i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13, i32 0, i32 0)) #22, !dbg !10679
  br label %61, !dbg !10681

11:                                               ; preds = %4
  %12 = load volatile i8, i8* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 16), align 4, !dbg !10682, !range !4202
  %13 = icmp eq i8 %12, 0, !dbg !10684
  br i1 %13, label %14, label %15, !dbg !10685

14:                                               ; preds = %11
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__FUNCTION__.hal_sd_read_blocks_dma, i32 0, i32 0), i32 noundef 1168, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i32 0, i32 0)) #22, !dbg !10686
  br label %61, !dbg !10688

15:                                               ; preds = %11
  %16 = icmp eq i32* %1, null, !dbg !10689
  br i1 %16, label %17, label %18, !dbg !10691

17:                                               ; preds = %15
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__FUNCTION__.hal_sd_read_blocks_dma, i32 0, i32 0), i32 noundef 1173, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3.124, i32 0, i32 0)) #22, !dbg !10692
  br label %61, !dbg !10694

18:                                               ; preds = %15
  %19 = tail call i32 @save_and_set_interrupt_mask() #22, !dbg !10695
  call void @llvm.dbg.value(metadata i32 %19, metadata !10662, metadata !DIExpression()), !dbg !10672
  %20 = load volatile i8, i8* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 17), align 1, !dbg !10696, !range !4202
  %21 = icmp eq i8 %20, 0, !dbg !10696
  br i1 %21, label %23, label %22, !dbg !10698

22:                                               ; preds = %18
  tail call void @restore_interrupt_mask(i32 noundef %19) #22, !dbg !10699
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__FUNCTION__.hal_sd_read_blocks_dma, i32 0, i32 0), i32 noundef 1180, i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.12, i32 0, i32 0)) #22, !dbg !10701
  br label %61, !dbg !10702

23:                                               ; preds = %18
  store volatile i8 1, i8* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 17), align 1, !dbg !10703
  tail call void @restore_interrupt_mask(i32 noundef %19) #22, !dbg !10705
  %24 = icmp eq i32 %0, 0, !dbg !10706
  %25 = select i1 %24, i32 1, i32 2, !dbg !10707
  call void @llvm.dbg.value(metadata i32 %25, metadata !10661, metadata !DIExpression()), !dbg !10672
  call void @llvm.dbg.value(metadata %struct.msdc_register_t* undef, metadata !10660, metadata !DIExpression()), !dbg !10672
  tail call void @msdc_dma_init(i32 noundef %0) #22, !dbg !10708
  tail call void @msdc_reset(i32 noundef %0) #22, !dbg !10709
  %26 = select i1 %24, i32* inttoptr (i32 -1610481596 to i32*), i32* inttoptr (i32 -1610416060 to i32*), !dbg !10710
  %27 = load volatile i32, i32* %26, align 4, !dbg !10710
  %28 = load i32, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 14), align 4, !dbg !10711
  %29 = add i32 %28, -3, !dbg !10713
  %30 = icmp ult i32 %29, 2, !dbg !10713
  %31 = icmp eq i32 %28, 1, !dbg !10713
  %32 = load i32, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 3, i32 6), align 8, !dbg !10713
  %33 = select i1 %31, i32 %32, i32 512, !dbg !10713
  %34 = select i1 %30, i32 1, i32 %33, !dbg !10713
  call void @llvm.dbg.value(metadata i32 %34, metadata !10659, metadata !DIExpression()), !dbg !10672
  tail call void @dvfs_lock(%struct._dvfs_lock_t* noundef nonnull @sd_dvfs_lock) #22, !dbg !10714
  %35 = ptrtoint i32* %1 to i32, !dbg !10715
  %36 = shl i32 %3, 9, !dbg !10716
  tail call void @msdc_dma_config(i32 noundef %0, i32 noundef %35, i32 noundef %36, i1 noundef zeroext false) #22, !dbg !10717
  tail call void @msdc_set_dma_interrupt(i32 noundef %0, i32 noundef %35) #22, !dbg !10718
  %37 = icmp ugt i32 %3, 1, !dbg !10719
  %38 = select i1 %37, i32 4242, i32 2193, !dbg !10720
  call void @llvm.dbg.value(metadata i32 %38, metadata !10658, metadata !DIExpression()), !dbg !10672
  %39 = getelementptr inbounds %struct.sd_dma_interrupt_context_t, %struct.sd_dma_interrupt_context_t* %5, i32 0, i32 0, !dbg !10721
  store i32 %3, i32* %39, align 4, !dbg !10722
  %40 = trunc i32 %38 to i16, !dbg !10723
  %41 = getelementptr inbounds %struct.sd_dma_interrupt_context_t, %struct.sd_dma_interrupt_context_t* %5, i32 0, i32 1, !dbg !10724
  store i16 %40, i16* %41, align 4, !dbg !10725
  %42 = getelementptr inbounds %struct.sd_dma_interrupt_context_t, %struct.sd_dma_interrupt_context_t* %5, i32 0, i32 2, !dbg !10726
  store i32 %0, i32* %42, align 4, !dbg !10727
  %43 = getelementptr inbounds %struct.sd_dma_interrupt_context_t, %struct.sd_dma_interrupt_context_t* %5, i32 0, i32 3, !dbg !10728
  %44 = bitcast %struct._dvfs_lock_t* %43 to i8*, !dbg !10729
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(24) %44, i8* noundef nonnull align 4 dereferenceable(24) bitcast (%struct._dvfs_lock_t* @sd_dvfs_lock to i8*), i32 24, i1 false), !dbg !10729
  call void @sd_save_dma_interrupt_context(i32 noundef %0, %struct.sd_dma_interrupt_context_t* noundef nonnull %5) #22, !dbg !10730
  %45 = mul i32 %34, %2, !dbg !10731
  %46 = call i32 @sd_send_command(i32 noundef %0, i32 noundef %38, i32 noundef %45) #22, !dbg !10732
  call void @llvm.dbg.value(metadata i32 %46, metadata !10657, metadata !DIExpression()), !dbg !10672
  %47 = icmp eq i32 %46, 0, !dbg !10733
  br i1 %47, label %48, label %52, !dbg !10735

48:                                               ; preds = %23
  %49 = call i32 @sd_check_card_status(i32 noundef %0) #22, !dbg !10736
  call void @llvm.dbg.value(metadata i32 %49, metadata !10657, metadata !DIExpression()), !dbg !10672
  %50 = icmp eq i32 %49, 0, !dbg !10737
  br i1 %50, label %51, label %52, !dbg !10739

51:                                               ; preds = %48
  call void @msdc_set_irqmask0(i32 noundef 0, i32 noundef 7) #22, !dbg !10740
  call void @msdc_dma_enable(i32 noundef %0) #22, !dbg !10741
  br label %61, !dbg !10742

52:                                               ; preds = %48, %23
  %53 = phi i32 [ %46, %23 ], [ %49, %48 ], !dbg !10672
  call void @llvm.dbg.value(metadata i32 %53, metadata !10657, metadata !DIExpression()), !dbg !10672
  call void @llvm.dbg.label(metadata !10671), !dbg !10743
  store i32 %53, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 13), align 8, !dbg !10744
  call void @msdc_dma_disable(i32 noundef %0) #22, !dbg !10745
  call void @msdc_reset(i32 noundef %0) #22, !dbg !10746
  %54 = select i1 %24, i32* inttoptr (i32 -1610481656 to i32*), i32* inttoptr (i32 -1610416120 to i32*), !dbg !10747
  %55 = load volatile i32, i32* %54, align 8, !dbg !10747
  br i1 %37, label %56, label %58, !dbg !10748

56:                                               ; preds = %52
  %57 = call i32 @sd_stop_transfer(i32 noundef %0) #22, !dbg !10749
  br label %58, !dbg !10752

58:                                               ; preds = %56, %52
  %59 = call i32 @pdma_stop(i32 noundef %25) #22, !dbg !10753
  %60 = call i32 @pdma_deinit(i32 noundef %25) #22, !dbg !10754
  call void @dvfs_unlock(%struct._dvfs_lock_t* noundef nonnull @sd_dvfs_lock) #22, !dbg !10755
  store volatile i8 0, i8* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 17), align 1, !dbg !10756
  call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__FUNCTION__.hal_sd_read_blocks_dma, i32 0, i32 0), i32 noundef 1262, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.127, i32 0, i32 0), i32 noundef %53) #22, !dbg !10757
  br label %61, !dbg !10758

61:                                               ; preds = %58, %51, %22, %17, %14, %10
  %62 = phi i32 [ -1, %14 ], [ -1, %17 ], [ -2, %22 ], [ -1, %58 ], [ 0, %51 ], [ -1, %10 ], !dbg !10672
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %6) #24, !dbg !10759
  ret i32 %62, !dbg !10759
}

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i32(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i32, i1 immarg) #16

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_sd_write_blocks_dma(i32 noundef %0, i32* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !10760 {
  %5 = alloca %struct.sd_dma_interrupt_context_t, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !10762, metadata !DIExpression()), !dbg !10774
  call void @llvm.dbg.value(metadata i32* %1, metadata !10763, metadata !DIExpression()), !dbg !10774
  call void @llvm.dbg.value(metadata i32 %2, metadata !10764, metadata !DIExpression()), !dbg !10774
  call void @llvm.dbg.value(metadata i32 %3, metadata !10765, metadata !DIExpression()), !dbg !10774
  %6 = bitcast %struct.sd_dma_interrupt_context_t* %5 to i8*, !dbg !10775
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %6) #24, !dbg !10775
  call void @llvm.dbg.declare(metadata %struct.sd_dma_interrupt_context_t* %5, metadata !10772, metadata !DIExpression()), !dbg !10776
  %7 = getelementptr inbounds [0 x %struct.msdc_config_t], [0 x %struct.msdc_config_t]* bitcast ([2 x %struct.msdc_config_t]* @msdc_config to [0 x %struct.msdc_config_t]*), i32 0, i32 %0, i32 14, !dbg !10777
  %8 = load void (i32, i8*)*, void (i32, i8*)** %7, align 4, !dbg !10777
  %9 = icmp eq void (i32, i8*)* %8, null, !dbg !10779
  br i1 %9, label %10, label %11, !dbg !10780

10:                                               ; preds = %4
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__FUNCTION__.hal_sd_write_blocks_dma, i32 0, i32 0), i32 noundef 1278, i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13, i32 0, i32 0)) #22, !dbg !10781
  br label %63, !dbg !10783

11:                                               ; preds = %4
  %12 = load volatile i8, i8* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 16), align 4, !dbg !10784, !range !4202
  %13 = icmp eq i8 %12, 0, !dbg !10786
  br i1 %13, label %14, label %15, !dbg !10787

14:                                               ; preds = %11
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__FUNCTION__.hal_sd_write_blocks_dma, i32 0, i32 0), i32 noundef 1283, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i32 0, i32 0)) #22, !dbg !10788
  br label %63, !dbg !10790

15:                                               ; preds = %11
  %16 = icmp eq i32* %1, null, !dbg !10791
  br i1 %16, label %17, label %18, !dbg !10793

17:                                               ; preds = %15
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__FUNCTION__.hal_sd_write_blocks_dma, i32 0, i32 0), i32 noundef 1288, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3.124, i32 0, i32 0)) #22, !dbg !10794
  br label %63, !dbg !10796

18:                                               ; preds = %15
  %19 = tail call i32 @save_and_set_interrupt_mask() #22, !dbg !10797
  call void @llvm.dbg.value(metadata i32 %19, metadata !10771, metadata !DIExpression()), !dbg !10774
  %20 = load volatile i8, i8* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 17), align 1, !dbg !10798, !range !4202
  %21 = icmp eq i8 %20, 0, !dbg !10798
  br i1 %21, label %23, label %22, !dbg !10800

22:                                               ; preds = %18
  tail call void @restore_interrupt_mask(i32 noundef %19) #22, !dbg !10801
  br label %63, !dbg !10803

23:                                               ; preds = %18
  store volatile i8 1, i8* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 17), align 1, !dbg !10804
  tail call void @restore_interrupt_mask(i32 noundef %19) #22, !dbg !10806
  %24 = icmp eq i32 %0, 0, !dbg !10807
  %25 = select i1 %24, i32 1, i32 2, !dbg !10808
  call void @llvm.dbg.value(metadata i32 %25, metadata !10770, metadata !DIExpression()), !dbg !10774
  call void @llvm.dbg.value(metadata %struct.msdc_register_t* undef, metadata !10769, metadata !DIExpression()), !dbg !10774
  tail call void @msdc_dma_init(i32 noundef %0) #22, !dbg !10809
  tail call void @msdc_reset(i32 noundef %0) #22, !dbg !10810
  %26 = load i8, i8* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 10), align 2, !dbg !10811, !range !4202
  %27 = icmp eq i8 %26, 0, !dbg !10811
  br i1 %27, label %29, label %28, !dbg !10813

28:                                               ; preds = %23
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__FUNCTION__.hal_sd_write_blocks_dma, i32 0, i32 0), i32 noundef 1309, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.10, i32 0, i32 0)) #22, !dbg !10814
  br label %63, !dbg !10816

29:                                               ; preds = %23
  %30 = load i32, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 14), align 4, !dbg !10817
  %31 = add i32 %30, -3, !dbg !10819
  %32 = icmp ult i32 %31, 2, !dbg !10819
  %33 = icmp eq i32 %30, 1, !dbg !10819
  %34 = load i32, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 3, i32 5), align 4, !dbg !10819
  %35 = select i1 %33, i32 %34, i32 512, !dbg !10819
  %36 = select i1 %32, i32 1, i32 %35, !dbg !10819
  call void @llvm.dbg.value(metadata i32 %36, metadata !10768, metadata !DIExpression()), !dbg !10774
  tail call void @dvfs_lock(%struct._dvfs_lock_t* noundef nonnull @sd_dvfs_lock) #22, !dbg !10820
  %37 = ptrtoint i32* %1 to i32, !dbg !10821
  %38 = shl i32 %3, 9, !dbg !10822
  tail call void @msdc_dma_config(i32 noundef %0, i32 noundef %37, i32 noundef %38, i1 noundef zeroext true) #22, !dbg !10823
  tail call void @msdc_set_dma_interrupt(i32 noundef %0, i32 noundef %37) #22, !dbg !10824
  %39 = icmp ugt i32 %3, 1, !dbg !10825
  %40 = select i1 %39, i32 12441, i32 10392, !dbg !10826
  call void @llvm.dbg.value(metadata i32 %40, metadata !10767, metadata !DIExpression()), !dbg !10774
  %41 = getelementptr inbounds %struct.sd_dma_interrupt_context_t, %struct.sd_dma_interrupt_context_t* %5, i32 0, i32 0, !dbg !10827
  store i32 %3, i32* %41, align 4, !dbg !10828
  %42 = trunc i32 %40 to i16, !dbg !10829
  %43 = getelementptr inbounds %struct.sd_dma_interrupt_context_t, %struct.sd_dma_interrupt_context_t* %5, i32 0, i32 1, !dbg !10830
  store i16 %42, i16* %43, align 4, !dbg !10831
  %44 = getelementptr inbounds %struct.sd_dma_interrupt_context_t, %struct.sd_dma_interrupt_context_t* %5, i32 0, i32 2, !dbg !10832
  store i32 %0, i32* %44, align 4, !dbg !10833
  %45 = getelementptr inbounds %struct.sd_dma_interrupt_context_t, %struct.sd_dma_interrupt_context_t* %5, i32 0, i32 3, !dbg !10834
  %46 = bitcast %struct._dvfs_lock_t* %45 to i8*, !dbg !10835
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(24) %46, i8* noundef nonnull align 4 dereferenceable(24) bitcast (%struct._dvfs_lock_t* @sd_dvfs_lock to i8*), i32 24, i1 false), !dbg !10835
  call void @sd_save_dma_interrupt_context(i32 noundef %0, %struct.sd_dma_interrupt_context_t* noundef nonnull %5) #22, !dbg !10836
  %47 = mul i32 %36, %2, !dbg !10837
  %48 = call i32 @sd_send_command(i32 noundef %0, i32 noundef %40, i32 noundef %47) #22, !dbg !10838
  call void @llvm.dbg.value(metadata i32 %48, metadata !10766, metadata !DIExpression()), !dbg !10774
  %49 = icmp eq i32 %48, 0, !dbg !10839
  br i1 %49, label %50, label %54, !dbg !10841

50:                                               ; preds = %29
  %51 = call i32 @sd_check_card_status(i32 noundef %0) #22, !dbg !10842
  call void @llvm.dbg.value(metadata i32 %51, metadata !10766, metadata !DIExpression()), !dbg !10774
  %52 = icmp eq i32 %51, 0, !dbg !10843
  br i1 %52, label %53, label %54, !dbg !10845

53:                                               ; preds = %50
  call void @msdc_set_irqmask0(i32 noundef 0, i32 noundef 7) #22, !dbg !10846
  call void @msdc_dma_enable(i32 noundef %0) #22, !dbg !10847
  br label %63, !dbg !10848

54:                                               ; preds = %50, %29
  %55 = phi i32 [ %48, %29 ], [ %51, %50 ], !dbg !10774
  call void @llvm.dbg.value(metadata i32 %55, metadata !10766, metadata !DIExpression()), !dbg !10774
  call void @llvm.dbg.label(metadata !10773), !dbg !10849
  store i32 %55, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 13), align 8, !dbg !10850
  call void @msdc_dma_disable(i32 noundef %0) #22, !dbg !10851
  call void @msdc_reset(i32 noundef %0) #22, !dbg !10852
  %56 = select i1 %24, i32* inttoptr (i32 -1610481656 to i32*), i32* inttoptr (i32 -1610416120 to i32*), !dbg !10853
  %57 = load volatile i32, i32* %56, align 8, !dbg !10853
  br i1 %39, label %58, label %60, !dbg !10854

58:                                               ; preds = %54
  %59 = call i32 @sd_stop_transfer(i32 noundef %0) #22, !dbg !10855
  br label %60, !dbg !10858

60:                                               ; preds = %58, %54
  %61 = call i32 @pdma_stop(i32 noundef %25) #22, !dbg !10859
  %62 = call i32 @pdma_deinit(i32 noundef %25) #22, !dbg !10860
  call void @dvfs_unlock(%struct._dvfs_lock_t* noundef nonnull @sd_dvfs_lock) #22, !dbg !10861
  store volatile i8 0, i8* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 17), align 1, !dbg !10862
  call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__FUNCTION__.hal_sd_write_blocks_dma, i32 0, i32 0), i32 noundef 1377, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.127, i32 0, i32 0), i32 noundef %55) #22, !dbg !10863
  br label %63, !dbg !10864

63:                                               ; preds = %60, %53, %28, %22, %17, %14, %10
  %64 = phi i32 [ -1, %14 ], [ -1, %17 ], [ -2, %22 ], [ -1, %28 ], [ -1, %60 ], [ 0, %53 ], [ -1, %10 ], !dbg !10774
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %6) #24, !dbg !10865
  ret i32 %64, !dbg !10865
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_sd_set_clock(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !10866 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10870, metadata !DIExpression()), !dbg !10873
  call void @llvm.dbg.value(metadata i32 %1, metadata !10871, metadata !DIExpression()), !dbg !10873
  %3 = load volatile i8, i8* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 16), align 4, !dbg !10874, !range !4202
  %4 = icmp eq i8 %3, 0, !dbg !10876
  br i1 %4, label %5, label %6, !dbg !10877

5:                                                ; preds = %2
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__FUNCTION__.hal_sd_set_clock, i32 0, i32 0), i32 noundef 1387, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i32 0, i32 0)) #22, !dbg !10878
  br label %23, !dbg !10880

6:                                                ; preds = %2
  %7 = tail call i32 @save_and_set_interrupt_mask() #22, !dbg !10881
  call void @llvm.dbg.value(metadata i32 %7, metadata !10872, metadata !DIExpression()), !dbg !10873
  %8 = load volatile i8, i8* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 17), align 1, !dbg !10882, !range !4202
  %9 = icmp eq i8 %8, 0, !dbg !10882
  br i1 %9, label %11, label %10, !dbg !10884

10:                                               ; preds = %6
  tail call void @restore_interrupt_mask(i32 noundef %7) #22, !dbg !10885
  br label %23, !dbg !10887

11:                                               ; preds = %6
  store volatile i8 1, i8* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 17), align 1, !dbg !10888
  tail call void @restore_interrupt_mask(i32 noundef %7) #22, !dbg !10890
  %12 = load volatile i8, i8* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 18), align 2, !dbg !10891, !range !4202
  %13 = icmp eq i8 %12, 0, !dbg !10891
  %14 = icmp ugt i32 %1, 25000
  %15 = and i1 %14, %13, !dbg !10893
  %16 = icmp ugt i32 %1, 50000
  %17 = or i1 %16, %15, !dbg !10893
  br i1 %17, label %18, label %19, !dbg !10893

18:                                               ; preds = %11
  store volatile i8 0, i8* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 17), align 1, !dbg !10894
  br label %23, !dbg !10896

19:                                               ; preds = %11
  %20 = tail call zeroext i1 @sd_output_clock_tuning(i32 noundef %0, i32 noundef %1) #22, !dbg !10897
  br i1 %20, label %22, label %21, !dbg !10900

21:                                               ; preds = %19
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__FUNCTION__.hal_sd_set_clock, i32 0, i32 0), i32 noundef 1408, i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5.126, i32 0, i32 0)) #22, !dbg !10901
  store volatile i8 0, i8* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 17), align 1, !dbg !10903
  br label %23, !dbg !10904

22:                                               ; preds = %19
  store volatile i8 0, i8* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 17), align 1, !dbg !10905
  br label %23, !dbg !10906

23:                                               ; preds = %22, %21, %18, %10, %5
  %24 = phi i32 [ -1, %5 ], [ -2, %10 ], [ -1, %18 ], [ -1, %21 ], [ 0, %22 ], !dbg !10873
  ret i32 %24, !dbg !10907
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_sd_get_clock(i32 noundef %0, i32* noundef writeonly %1) local_unnamed_addr #0 !dbg !10908 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10912, metadata !DIExpression()), !dbg !10914
  call void @llvm.dbg.value(metadata i32* %1, metadata !10913, metadata !DIExpression()), !dbg !10914
  %3 = icmp eq i32* %1, null, !dbg !10915
  br i1 %3, label %4, label %5, !dbg !10917

4:                                                ; preds = %2
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__FUNCTION__.hal_sd_get_clock, i32 0, i32 0), i32 noundef 1424, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3.124, i32 0, i32 0)) #22, !dbg !10918
  br label %11, !dbg !10920

5:                                                ; preds = %2
  %6 = load volatile i8, i8* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 16), align 4, !dbg !10921, !range !4202
  %7 = icmp eq i8 %6, 0, !dbg !10923
  br i1 %7, label %8, label %9, !dbg !10924

8:                                                ; preds = %5
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__FUNCTION__.hal_sd_get_clock, i32 0, i32 0), i32 noundef 1429, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i32 0, i32 0)) #22, !dbg !10925
  br label %11, !dbg !10927

9:                                                ; preds = %5
  %10 = tail call i32 @msdc_get_output_clock(i32 noundef %0) #22, !dbg !10928
  store i32 %10, i32* %1, align 4, !dbg !10929
  br label %11, !dbg !10930

11:                                               ; preds = %9, %8, %4
  %12 = phi i32 [ -1, %4 ], [ -1, %8 ], [ 0, %9 ], !dbg !10914
  ret i32 %12, !dbg !10931
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_sd_get_card_type(i32 noundef %0, i32* noundef writeonly %1) local_unnamed_addr #0 !dbg !10932 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10937, metadata !DIExpression()), !dbg !10939
  call void @llvm.dbg.value(metadata i32* %1, metadata !10938, metadata !DIExpression()), !dbg !10939
  %3 = icmp eq i32* %1, null, !dbg !10940
  br i1 %3, label %4, label %5, !dbg !10942

4:                                                ; preds = %2
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__FUNCTION__.hal_sd_get_card_type, i32 0, i32 0), i32 noundef 1442, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3.124, i32 0, i32 0)) #22, !dbg !10943
  br label %11, !dbg !10945

5:                                                ; preds = %2
  %6 = load volatile i8, i8* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 16), align 4, !dbg !10946, !range !4202
  %7 = icmp eq i8 %6, 0, !dbg !10948
  br i1 %7, label %8, label %9, !dbg !10949

8:                                                ; preds = %5
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__FUNCTION__.hal_sd_get_card_type, i32 0, i32 0), i32 noundef 1447, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i32 0, i32 0)) #22, !dbg !10950
  br label %11, !dbg !10952

9:                                                ; preds = %5
  %10 = load i32, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 14), align 4, !dbg !10953
  store i32 %10, i32* %1, align 4, !dbg !10954
  br label %11, !dbg !10955

11:                                               ; preds = %9, %8, %4
  %12 = phi i32 [ -1, %4 ], [ -1, %8 ], [ 0, %9 ], !dbg !10939
  ret i32 %12, !dbg !10956
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_sd_get_ocr(i32 noundef %0, i32* noundef writeonly %1) local_unnamed_addr #0 !dbg !10957 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10959, metadata !DIExpression()), !dbg !10961
  call void @llvm.dbg.value(metadata i32* %1, metadata !10960, metadata !DIExpression()), !dbg !10961
  %3 = icmp eq i32* %1, null, !dbg !10962
  br i1 %3, label %4, label %5, !dbg !10964

4:                                                ; preds = %2
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__FUNCTION__.hal_sd_get_ocr, i32 0, i32 0), i32 noundef 1461, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3.124, i32 0, i32 0)) #22, !dbg !10965
  br label %11, !dbg !10967

5:                                                ; preds = %2
  %6 = load volatile i8, i8* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 16), align 4, !dbg !10968, !range !4202
  %7 = icmp eq i8 %6, 0, !dbg !10970
  br i1 %7, label %8, label %9, !dbg !10971

8:                                                ; preds = %5
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__FUNCTION__.hal_sd_get_ocr, i32 0, i32 0), i32 noundef 1466, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i32 0, i32 0)) #22, !dbg !10972
  br label %11, !dbg !10974

9:                                                ; preds = %5
  %10 = load i32, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 0), align 8, !dbg !10975
  store i32 %10, i32* %1, align 4, !dbg !10976
  br label %11, !dbg !10977

11:                                               ; preds = %9, %8, %4
  %12 = phi i32 [ -1, %4 ], [ -1, %8 ], [ 0, %9 ], !dbg !10961
  ret i32 %12, !dbg !10978
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_sd_get_card_status(i32 noundef %0, i32* noundef %1) local_unnamed_addr #0 !dbg !10979 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10981, metadata !DIExpression()), !dbg !10984
  call void @llvm.dbg.value(metadata i32* %1, metadata !10982, metadata !DIExpression()), !dbg !10984
  %3 = icmp eq i32* %1, null, !dbg !10985
  br i1 %3, label %4, label %5, !dbg !10987

4:                                                ; preds = %2
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__FUNCTION__.hal_sd_get_card_status, i32 0, i32 0), i32 noundef 1481, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3.124, i32 0, i32 0)) #22, !dbg !10988
  br label %13, !dbg !10990

5:                                                ; preds = %2
  %6 = load volatile i8, i8* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 16), align 4, !dbg !10991, !range !4202
  %7 = icmp eq i8 %6, 0, !dbg !10993
  br i1 %7, label %8, label %9, !dbg !10994

8:                                                ; preds = %5
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__FUNCTION__.hal_sd_get_card_status, i32 0, i32 0), i32 noundef 1486, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i32 0, i32 0)) #22, !dbg !10995
  br label %13, !dbg !10997

9:                                                ; preds = %5
  %10 = tail call i32 @sd_get_card_status(i32 noundef %0, i32* noundef nonnull %1) #22, !dbg !10998
  call void @llvm.dbg.value(metadata i32 %10, metadata !10983, metadata !DIExpression()), !dbg !10984
  %11 = icmp eq i32 %10, 0, !dbg !10999
  br i1 %11, label %13, label %12, !dbg !11001

12:                                               ; preds = %9
  store i32 %10, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 13), align 8, !dbg !11002
  br label %13, !dbg !11004

13:                                               ; preds = %9, %12, %8, %4
  %14 = phi i32 [ -1, %4 ], [ -1, %8 ], [ -1, %12 ], [ 0, %9 ], !dbg !10984
  ret i32 %14, !dbg !11005
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_sd_get_erase_sector_size(i32 noundef %0, i32* noundef writeonly %1) local_unnamed_addr #0 !dbg !11006 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11008, metadata !DIExpression()), !dbg !11010
  call void @llvm.dbg.value(metadata i32* %1, metadata !11009, metadata !DIExpression()), !dbg !11010
  %3 = icmp eq i32* %1, null, !dbg !11011
  br i1 %3, label %4, label %5, !dbg !11013

4:                                                ; preds = %2
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @__FUNCTION__.hal_sd_get_erase_sector_size, i32 0, i32 0), i32 noundef 1503, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3.124, i32 0, i32 0)) #22, !dbg !11014
  br label %15, !dbg !11016

5:                                                ; preds = %2
  %6 = load volatile i8, i8* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 16), align 4, !dbg !11017, !range !4202
  %7 = icmp eq i8 %6, 0, !dbg !11019
  br i1 %7, label %8, label %9, !dbg !11020

8:                                                ; preds = %5
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @__FUNCTION__.hal_sd_get_erase_sector_size, i32 0, i32 0), i32 noundef 1508, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i32 0, i32 0)) #22, !dbg !11021
  br label %15, !dbg !11023

9:                                                ; preds = %5
  %10 = load i32, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 14), align 4, !dbg !11024
  switch i32 %10, label %15 [
    i32 4, label %11
    i32 1, label %11
    i32 3, label %13
    i32 2, label %13
    i32 0, label %13
  ], !dbg !11026

11:                                               ; preds = %9, %9
  %12 = load i32, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 3, i32 21), align 8, !dbg !11027
  store i32 %12, i32* %1, align 4, !dbg !11029
  br label %15, !dbg !11030

13:                                               ; preds = %9, %9, %9
  %14 = load i32, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 3, i32 5), align 4, !dbg !11031
  store i32 %14, i32* %1, align 4, !dbg !11034
  br label %15, !dbg !11035

15:                                               ; preds = %9, %11, %13, %8, %4
  %16 = phi i32 [ -1, %4 ], [ -1, %8 ], [ 0, %13 ], [ 0, %11 ], [ 0, %9 ], !dbg !11010
  ret i32 %16, !dbg !11036
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_sd_get_cid(i32 noundef %0, i32* noundef writeonly %1) local_unnamed_addr #0 !dbg !11037 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11039, metadata !DIExpression()), !dbg !11041
  call void @llvm.dbg.value(metadata i32* %1, metadata !11040, metadata !DIExpression()), !dbg !11041
  %3 = icmp eq i32* %1, null, !dbg !11042
  br i1 %3, label %4, label %5, !dbg !11044

4:                                                ; preds = %2
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__FUNCTION__.hal_sd_get_cid, i32 0, i32 0), i32 noundef 1526, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3.124, i32 0, i32 0)) #22, !dbg !11045
  br label %17, !dbg !11047

5:                                                ; preds = %2
  %6 = load volatile i8, i8* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 16), align 4, !dbg !11048, !range !4202
  %7 = icmp eq i8 %6, 0, !dbg !11050
  br i1 %7, label %8, label %9, !dbg !11051

8:                                                ; preds = %5
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__FUNCTION__.hal_sd_get_cid, i32 0, i32 0), i32 noundef 1531, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i32 0, i32 0)) #22, !dbg !11052
  br label %17, !dbg !11054

9:                                                ; preds = %5
  %10 = load i32, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 4, i32 0), align 8, !dbg !11055
  store i32 %10, i32* %1, align 4, !dbg !11056
  %11 = load i32, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 4, i32 1), align 4, !dbg !11057
  %12 = getelementptr inbounds i32, i32* %1, i32 1, !dbg !11058
  store i32 %11, i32* %12, align 4, !dbg !11059
  %13 = load i32, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 4, i32 2), align 8, !dbg !11060
  %14 = getelementptr inbounds i32, i32* %1, i32 2, !dbg !11061
  store i32 %13, i32* %14, align 4, !dbg !11062
  %15 = load i32, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 4, i32 3), align 4, !dbg !11063
  %16 = getelementptr inbounds i32, i32* %1, i32 3, !dbg !11064
  store i32 %15, i32* %16, align 4, !dbg !11065
  br label %17, !dbg !11066

17:                                               ; preds = %9, %8, %4
  %18 = phi i32 [ -1, %4 ], [ -1, %8 ], [ 0, %9 ], !dbg !11041
  ret i32 %18, !dbg !11067
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_sd_get_csd(i32 noundef %0, i32* noundef writeonly %1) local_unnamed_addr #0 !dbg !11068 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11070, metadata !DIExpression()), !dbg !11072
  call void @llvm.dbg.value(metadata i32* %1, metadata !11071, metadata !DIExpression()), !dbg !11072
  %3 = icmp eq i32* %1, null, !dbg !11073
  br i1 %3, label %4, label %5, !dbg !11075

4:                                                ; preds = %2
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__FUNCTION__.hal_sd_get_csd, i32 0, i32 0), i32 noundef 1546, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3.124, i32 0, i32 0)) #22, !dbg !11076
  br label %17, !dbg !11078

5:                                                ; preds = %2
  %6 = load volatile i8, i8* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 16), align 4, !dbg !11079, !range !4202
  %7 = icmp eq i8 %6, 0, !dbg !11081
  br i1 %7, label %8, label %9, !dbg !11082

8:                                                ; preds = %5
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__FUNCTION__.hal_sd_get_csd, i32 0, i32 0), i32 noundef 1551, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i32 0, i32 0)) #22, !dbg !11083
  br label %17, !dbg !11085

9:                                                ; preds = %5
  %10 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @sd_csd, i32 0, i32 0), align 4, !dbg !11086
  store i32 %10, i32* %1, align 4, !dbg !11087
  %11 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @sd_csd, i32 0, i32 1), align 4, !dbg !11088
  %12 = getelementptr inbounds i32, i32* %1, i32 1, !dbg !11089
  store i32 %11, i32* %12, align 4, !dbg !11090
  %13 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @sd_csd, i32 0, i32 2), align 4, !dbg !11091
  %14 = getelementptr inbounds i32, i32* %1, i32 2, !dbg !11092
  store i32 %13, i32* %14, align 4, !dbg !11093
  %15 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @sd_csd, i32 0, i32 3), align 4, !dbg !11094
  %16 = getelementptr inbounds i32, i32* %1, i32 3, !dbg !11095
  store i32 %15, i32* %16, align 4, !dbg !11096
  br label %17, !dbg !11097

17:                                               ; preds = %9, %8, %4
  %18 = phi i32 [ -1, %4 ], [ -1, %8 ], [ 0, %9 ], !dbg !11072
  ret i32 %18, !dbg !11098
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sd_wait_data_ready(i32 noundef %0) local_unnamed_addr #0 !dbg !11099 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !11103, metadata !DIExpression()), !dbg !11109
  %5 = bitcast i32* %2 to i8*, !dbg !11110
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !11110
  call void @llvm.dbg.value(metadata i32 0, metadata !11106, metadata !DIExpression()), !dbg !11109
  store i32 0, i32* %2, align 4, !dbg !11111
  %6 = bitcast i32* %3 to i8*, !dbg !11112
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #24, !dbg !11112
  call void @llvm.dbg.value(metadata i32 0, metadata !11107, metadata !DIExpression()), !dbg !11109
  store i32 0, i32* %3, align 4, !dbg !11113
  %7 = bitcast i32* %4 to i8*, !dbg !11114
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #24, !dbg !11114
  call void @llvm.dbg.value(metadata i32 0, metadata !11108, metadata !DIExpression()), !dbg !11109
  store i32 0, i32* %4, align 4, !dbg !11115
  %8 = icmp eq i32 %0, 0, !dbg !11116
  call void @llvm.dbg.value(metadata %struct.msdc_register_t* undef, metadata !11104, metadata !DIExpression()), !dbg !11109
  call void @llvm.dbg.value(metadata i32* %2, metadata !11106, metadata !DIExpression(DW_OP_deref)), !dbg !11109
  %9 = call i32 @hal_gpt_get_free_run_count(i32 noundef 1, i32* noundef nonnull %2) #22, !dbg !11117
  %10 = select i1 %8, i32* inttoptr (i32 -1610481596 to i32*), i32* inttoptr (i32 -1610416060 to i32*)
  br label %11, !dbg !11118

11:                                               ; preds = %18, %1
  %12 = load volatile i32, i32* %10, align 4, !dbg !11119
  call void @llvm.dbg.value(metadata i32 %12, metadata !11105, metadata !DIExpression()), !dbg !11109
  call void @llvm.dbg.value(metadata i32* %3, metadata !11107, metadata !DIExpression(DW_OP_deref)), !dbg !11109
  %13 = call i32 @hal_gpt_get_free_run_count(i32 noundef 1, i32* noundef nonnull %3) #22, !dbg !11121
  %14 = load i32, i32* %2, align 4, !dbg !11122
  call void @llvm.dbg.value(metadata i32 %14, metadata !11106, metadata !DIExpression()), !dbg !11109
  %15 = load i32, i32* %3, align 4, !dbg !11123
  call void @llvm.dbg.value(metadata i32 %15, metadata !11107, metadata !DIExpression()), !dbg !11109
  call void @llvm.dbg.value(metadata i32* %4, metadata !11108, metadata !DIExpression(DW_OP_deref)), !dbg !11109
  %16 = call i32 @hal_gpt_get_duration_count(i32 noundef %14, i32 noundef %15, i32* noundef nonnull %4) #22, !dbg !11124
  %17 = icmp eq i32 %12, 0, !dbg !11125
  br i1 %17, label %18, label %23, !dbg !11126

18:                                               ; preds = %11
  %19 = call zeroext i1 @msdc_card_is_present(i32 noundef %0) #22, !dbg !11127
  %20 = load i32, i32* %4, align 4
  call void @llvm.dbg.value(metadata i32 %20, metadata !11108, metadata !DIExpression()), !dbg !11109
  %21 = icmp ult i32 %20, 1500000
  %22 = select i1 %19, i1 %21, i1 false, !dbg !11128
  br i1 %22, label %11, label %23, !dbg !11128, !llvm.loop !11129

23:                                               ; preds = %11, %18
  %24 = select i1 %8, i32* inttoptr (i32 -1610481656 to i32*), i32* inttoptr (i32 -1610416120 to i32*), !dbg !11131
  %25 = load volatile i32, i32* %24, align 8, !dbg !11131
  call void @msdc_record_data_status(i32 noundef %0, i32 noundef %12) #22, !dbg !11132
  %26 = load i32, i32* %4, align 4, !dbg !11133
  call void @llvm.dbg.value(metadata i32 %26, metadata !11108, metadata !DIExpression()), !dbg !11109
  %27 = icmp ugt i32 %26, 1499999, !dbg !11135
  br i1 %27, label %28, label %29, !dbg !11136

28:                                               ; preds = %23
  call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__FUNCTION__.sd_wait_data_ready, i32 0, i32 0), i32 noundef 96, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.134, i32 0, i32 0)) #22, !dbg !11137
  br label %36, !dbg !11139

29:                                               ; preds = %23
  %30 = and i32 %12, 2, !dbg !11140
  %31 = icmp eq i32 %30, 0, !dbg !11140
  br i1 %31, label %32, label %36, !dbg !11142

32:                                               ; preds = %29
  %33 = and i32 %12, 1020, !dbg !11143
  %34 = icmp eq i32 %33, 0, !dbg !11143
  %35 = select i1 %34, i32 0, i32 -7, !dbg !11145
  br label %36, !dbg !11145

36:                                               ; preds = %32, %29, %28
  %37 = phi i32 [ -10, %28 ], [ -10, %29 ], [ %35, %32 ], !dbg !11109
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #24, !dbg !11146
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #24, !dbg !11146
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !11146
  ret i32 %37, !dbg !11146
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sd_wait_command_ready(i32 noundef %0) local_unnamed_addr #0 !dbg !11147 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !11149, metadata !DIExpression()), !dbg !11155
  %6 = bitcast i32* %2 to i8*, !dbg !11156
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6), !dbg !11156
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11151, metadata !DIExpression()), !dbg !11157
  %7 = bitcast i32* %3 to i8*, !dbg !11158
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #24, !dbg !11158
  call void @llvm.dbg.value(metadata i32 0, metadata !11152, metadata !DIExpression()), !dbg !11155
  store i32 0, i32* %3, align 4, !dbg !11159
  %8 = bitcast i32* %4 to i8*, !dbg !11160
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #24, !dbg !11160
  call void @llvm.dbg.value(metadata i32 0, metadata !11153, metadata !DIExpression()), !dbg !11155
  store i32 0, i32* %4, align 4, !dbg !11161
  %9 = bitcast i32* %5 to i8*, !dbg !11162
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #24, !dbg !11162
  call void @llvm.dbg.value(metadata i32 0, metadata !11154, metadata !DIExpression()), !dbg !11155
  store i32 0, i32* %5, align 4, !dbg !11163
  %10 = icmp eq i32 %0, 0, !dbg !11164
  call void @llvm.dbg.value(metadata %struct.msdc_register_t* undef, metadata !11150, metadata !DIExpression()), !dbg !11155
  call void @llvm.dbg.value(metadata i32* %3, metadata !11152, metadata !DIExpression(DW_OP_deref)), !dbg !11155
  %11 = call i32 @hal_gpt_get_free_run_count(i32 noundef 1, i32* noundef nonnull %3) #22, !dbg !11165
  %12 = select i1 %10, i32* inttoptr (i32 -1610481600 to i32*), i32* inttoptr (i32 -1610416064 to i32*)
  br label %13, !dbg !11166

13:                                               ; preds = %21, %1
  %14 = load volatile i32, i32* %12, align 64, !dbg !11167
  store volatile i32 %14, i32* %2, align 4, !dbg !11169
  call void @llvm.dbg.value(metadata i32* %4, metadata !11153, metadata !DIExpression(DW_OP_deref)), !dbg !11155
  %15 = call i32 @hal_gpt_get_free_run_count(i32 noundef 1, i32* noundef nonnull %4) #22, !dbg !11170
  %16 = load i32, i32* %3, align 4, !dbg !11171
  call void @llvm.dbg.value(metadata i32 %16, metadata !11152, metadata !DIExpression()), !dbg !11155
  %17 = load i32, i32* %4, align 4, !dbg !11172
  call void @llvm.dbg.value(metadata i32 %17, metadata !11153, metadata !DIExpression()), !dbg !11155
  call void @llvm.dbg.value(metadata i32* %5, metadata !11154, metadata !DIExpression(DW_OP_deref)), !dbg !11155
  %18 = call i32 @hal_gpt_get_duration_count(i32 noundef %16, i32 noundef %17, i32* noundef nonnull %5) #22, !dbg !11173
  %19 = load volatile i32, i32* %2, align 4, !dbg !11174
  %20 = icmp eq i32 %19, 0, !dbg !11174
  br i1 %20, label %21, label %26, !dbg !11175

21:                                               ; preds = %13
  %22 = call zeroext i1 @msdc_card_is_present(i32 noundef %0) #22, !dbg !11176
  %23 = load i32, i32* %5, align 4
  call void @llvm.dbg.value(metadata i32 %23, metadata !11154, metadata !DIExpression()), !dbg !11155
  %24 = icmp ult i32 %23, 500000
  %25 = select i1 %22, i1 %24, i1 false, !dbg !11177
  br i1 %25, label %13, label %26, !dbg !11177, !llvm.loop !11178

26:                                               ; preds = %13, %21
  %27 = select i1 %10, i32* inttoptr (i32 -1610481656 to i32*), i32* inttoptr (i32 -1610416120 to i32*), !dbg !11180
  %28 = load volatile i32, i32* %27, align 8, !dbg !11180
  %29 = load volatile i32, i32* %2, align 4, !dbg !11181
  call void @msdc_record_command_status(i32 noundef %0, i32 noundef %29) #22, !dbg !11182
  %30 = load i32, i32* %5, align 4, !dbg !11183
  call void @llvm.dbg.value(metadata i32 %30, metadata !11154, metadata !DIExpression()), !dbg !11155
  %31 = icmp ugt i32 %30, 499999, !dbg !11185
  br i1 %31, label %32, label %33, !dbg !11186

32:                                               ; preds = %26
  call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @__FUNCTION__.sd_wait_command_ready, i32 0, i32 0), i32 noundef 133, i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1.135, i32 0, i32 0)) #22, !dbg !11187
  br label %42, !dbg !11189

33:                                               ; preds = %26
  %34 = load volatile i32, i32* %2, align 4, !dbg !11190
  %35 = and i32 %34, 2, !dbg !11192
  %36 = icmp eq i32 %35, 0, !dbg !11192
  br i1 %36, label %37, label %42, !dbg !11193

37:                                               ; preds = %33
  %38 = load volatile i32, i32* %2, align 4, !dbg !11194
  %39 = and i32 %38, 4, !dbg !11196
  %40 = icmp eq i32 %39, 0, !dbg !11196
  %41 = select i1 %40, i32 0, i32 -9, !dbg !11197
  br label %42, !dbg !11197

42:                                               ; preds = %37, %33, %32
  %43 = phi i32 [ -1, %32 ], [ -1, %33 ], [ %41, %37 ], !dbg !11155
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #24, !dbg !11198
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #24, !dbg !11198
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #24, !dbg !11198
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6), !dbg !11198
  ret i32 %43, !dbg !11198
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sd_send_command(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !11199 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11203, metadata !DIExpression()), !dbg !11208
  call void @llvm.dbg.value(metadata i32 %1, metadata !11204, metadata !DIExpression()), !dbg !11208
  call void @llvm.dbg.value(metadata i32 %2, metadata !11205, metadata !DIExpression()), !dbg !11208
  %4 = icmp eq i32 %0, 0, !dbg !11209
  call void @llvm.dbg.value(metadata %struct.msdc_register_t* undef, metadata !11206, metadata !DIExpression()), !dbg !11208
  %5 = icmp eq i32 %1, 17292, !dbg !11210
  %6 = select i1 %4, i32* inttoptr (i32 -1610481620 to i32*), i32* inttoptr (i32 -1610416084 to i32*)
  br i1 %5, label %13, label %7, !dbg !11212

7:                                                ; preds = %3, %11
  %8 = load volatile i32, i32* %6, align 4, !dbg !11213
  %9 = and i32 %8, 1, !dbg !11215
  %10 = icmp eq i32 %9, 0, !dbg !11215
  br i1 %10, label %19, label %11, !dbg !11216

11:                                               ; preds = %7
  %12 = tail call zeroext i1 @msdc_card_is_present(i32 noundef %0) #22, !dbg !11217
  br i1 %12, label %7, label %19, !dbg !11218, !llvm.loop !11219

13:                                               ; preds = %3, %17
  %14 = load volatile i32, i32* %6, align 4, !dbg !11221
  %15 = and i32 %14, 2, !dbg !11223
  %16 = icmp eq i32 %15, 0, !dbg !11223
  br i1 %16, label %19, label %17, !dbg !11224

17:                                               ; preds = %13
  %18 = tail call zeroext i1 @msdc_card_is_present(i32 noundef %0) #22, !dbg !11225
  br i1 %18, label %13, label %19, !dbg !11226, !llvm.loop !11227

19:                                               ; preds = %11, %7, %17, %13
  %20 = select i1 %4, i32* inttoptr (i32 -1610481656 to i32*), i32* inttoptr (i32 -1610416120 to i32*), !dbg !11229
  %21 = load volatile i32, i32* %20, align 8, !dbg !11229
  %22 = select i1 %4, i32* inttoptr (i32 -1610481624 to i32*), i32* inttoptr (i32 -1610416088 to i32*), !dbg !11230
  store volatile i32 %2, i32* %22, align 8, !dbg !11231
  %23 = select i1 %4, i32* inttoptr (i32 -1610481628 to i32*), i32* inttoptr (i32 -1610416092 to i32*), !dbg !11232
  store volatile i32 %1, i32* %23, align 4, !dbg !11233
  %24 = tail call i32 @sd_wait_command_ready(i32 noundef %0) #23, !dbg !11234
  call void @llvm.dbg.value(metadata i32 %24, metadata !11207, metadata !DIExpression()), !dbg !11208
  ret i32 %24, !dbg !11235
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sd_send_command55(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !11236 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11240, metadata !DIExpression()), !dbg !11245
  call void @llvm.dbg.value(metadata i32 %1, metadata !11241, metadata !DIExpression()), !dbg !11245
  call void @llvm.dbg.value(metadata %struct.msdc_register_t* undef, metadata !11243, metadata !DIExpression()), !dbg !11245
  %3 = shl i32 %1, 16, !dbg !11246
  %4 = tail call i32 @sd_send_command(i32 noundef %0, i32 noundef 183, i32 noundef %3) #23, !dbg !11247
  call void @llvm.dbg.value(metadata i32 %4, metadata !11242, metadata !DIExpression()), !dbg !11245
  %5 = icmp eq i32 %4, 0, !dbg !11248
  br i1 %5, label %6, label %19, !dbg !11250

6:                                                ; preds = %2
  %7 = icmp eq i32 %0, 0, !dbg !11251
  call void @llvm.dbg.value(metadata %struct.msdc_register_t* undef, metadata !11243, metadata !DIExpression()), !dbg !11245
  %8 = select i1 %7, i32* inttoptr (i32 -1610481616 to i32*), i32* inttoptr (i32 -1610416080 to i32*), !dbg !11252
  %9 = load volatile i32, i32* %8, align 16, !dbg !11252
  call void @llvm.dbg.value(metadata i32 %9, metadata !11244, metadata !DIExpression()), !dbg !11245
  %10 = icmp ult i32 %9, 32768, !dbg !11253
  br i1 %10, label %11, label %15, !dbg !11255

11:                                               ; preds = %6
  %12 = and i32 %9, 32, !dbg !11256
  %13 = icmp eq i32 %12, 0, !dbg !11256
  %14 = select i1 %13, i32 -13, i32 0, !dbg !11259
  br label %19, !dbg !11259

15:                                               ; preds = %6
  %16 = and i32 %9, 33554432, !dbg !11260
  %17 = icmp eq i32 %16, 0, !dbg !11260
  %18 = select i1 %17, i32 -11, i32 -38, !dbg !11262
  br label %19, !dbg !11262

19:                                               ; preds = %15, %11, %2
  %20 = phi i32 [ %4, %2 ], [ %14, %11 ], [ %18, %15 ], !dbg !11245
  ret i32 %20, !dbg !11263
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sd_reset(i32 noundef %0) local_unnamed_addr #0 !dbg !11264 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11266, metadata !DIExpression()), !dbg !11268
  %2 = tail call i32 @sd_send_command(i32 noundef %0, i32 noundef 0, i32 noundef 0) #23, !dbg !11269
  call void @llvm.dbg.value(metadata i32 %2, metadata !11267, metadata !DIExpression()), !dbg !11268
  store i32 0, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 7), align 4, !dbg !11270
  ret i32 %2, !dbg !11271
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sd_check_sd_card_type(i32 noundef %0) local_unnamed_addr #0 !dbg !11272 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !11276, metadata !DIExpression()), !dbg !11286
  call void @llvm.dbg.value(metadata i32 0, metadata !11279, metadata !DIExpression()), !dbg !11286
  call void @llvm.dbg.value(metadata i32 0, metadata !11280, metadata !DIExpression()), !dbg !11286
  call void @llvm.dbg.value(metadata i32 0, metadata !11281, metadata !DIExpression()), !dbg !11286
  call void @llvm.dbg.value(metadata i8 1, metadata !11282, metadata !DIExpression()), !dbg !11286
  %5 = bitcast i32* %2 to i8*, !dbg !11287
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !11287
  call void @llvm.dbg.value(metadata i32 0, metadata !11283, metadata !DIExpression()), !dbg !11286
  store i32 0, i32* %2, align 4, !dbg !11288
  %6 = bitcast i32* %3 to i8*, !dbg !11289
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #24, !dbg !11289
  call void @llvm.dbg.value(metadata i32 0, metadata !11284, metadata !DIExpression()), !dbg !11286
  store i32 0, i32* %3, align 4, !dbg !11290
  %7 = bitcast i32* %4 to i8*, !dbg !11291
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #24, !dbg !11291
  call void @llvm.dbg.value(metadata i32 0, metadata !11285, metadata !DIExpression()), !dbg !11286
  store i32 0, i32* %4, align 4, !dbg !11292
  %8 = icmp eq i32 %0, 0, !dbg !11293
  call void @llvm.dbg.value(metadata %struct.msdc_register_t* undef, metadata !11277, metadata !DIExpression()), !dbg !11286
  %9 = tail call i32 @sd_send_command(i32 noundef %0, i32 noundef 136, i32 noundef 426) #23, !dbg !11294
  call void @llvm.dbg.value(metadata i32 %9, metadata !11278, metadata !DIExpression()), !dbg !11286
  %10 = icmp eq i32 %9, 0, !dbg !11295
  br i1 %10, label %14, label %11, !dbg !11297

11:                                               ; preds = %1
  %12 = tail call i32 @sd_reset(i32 noundef %0) #23, !dbg !11298
  %13 = select i1 %8, i32* inttoptr (i32 -1610481616 to i32*), i32* inttoptr (i32 -1610416080 to i32*)
  br label %19, !dbg !11300

14:                                               ; preds = %1
  %15 = select i1 %8, i32* inttoptr (i32 -1610481616 to i32*), i32* inttoptr (i32 -1610416080 to i32*), !dbg !11301
  %16 = load volatile i32, i32* %15, align 16, !dbg !11301
  call void @llvm.dbg.value(metadata i32 %16, metadata !11279, metadata !DIExpression()), !dbg !11286
  %17 = icmp eq i32 %16, 426, !dbg !11303
  br i1 %17, label %19, label %18, !dbg !11305

18:                                               ; preds = %14
  store i32 1, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 12), align 4, !dbg !11306
  store i32 -24, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 13), align 8, !dbg !11308
  br label %69, !dbg !11313

19:                                               ; preds = %14, %11
  %20 = phi i32* [ %15, %14 ], [ %13, %11 ]
  %21 = phi i32 [ 2, %14 ], [ 0, %11 ], !dbg !11314
  %22 = phi i32 [ 1090486272, %14 ], [ 16744448, %11 ], !dbg !11286
  store i32 %21, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 12), align 4, !dbg !11314
  call void @llvm.dbg.value(metadata i32 %22, metadata !11280, metadata !DIExpression()), !dbg !11286
  call void @llvm.dbg.value(metadata i32* %2, metadata !11283, metadata !DIExpression(DW_OP_deref)), !dbg !11286
  %23 = call i32 @hal_gpt_get_free_run_count(i32 noundef 1, i32* noundef nonnull %2) #22, !dbg !11315
  %24 = select i1 %8, i32* inttoptr (i32 -1610481660 to i32*), i32* inttoptr (i32 -1610416124 to i32*)
  br label %25, !dbg !11316

25:                                               ; preds = %54, %19
  %26 = phi i1 [ true, %19 ], [ false, %54 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !11282, metadata !DIExpression()), !dbg !11286
  br label %27, !dbg !11317

27:                                               ; preds = %27, %25
  %28 = load volatile i32, i32* %24, align 4, !dbg !11319
  %29 = and i32 %28, 32768, !dbg !11320
  %30 = icmp eq i32 %29, 0, !dbg !11317
  br i1 %30, label %31, label %27, !dbg !11317, !llvm.loop !11321

31:                                               ; preds = %27
  %32 = call i32 @sd_send_command55(i32 noundef %0, i32 noundef 0) #23, !dbg !11323
  call void @llvm.dbg.value(metadata i32 %32, metadata !11278, metadata !DIExpression()), !dbg !11286
  %33 = icmp eq i32 %32, 0, !dbg !11324
  br i1 %33, label %35, label %34, !dbg !11326

34:                                               ; preds = %31
  store i32 %32, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 13), align 8, !dbg !11327
  br label %69, !dbg !11329

35:                                               ; preds = %31, %35
  %36 = load volatile i32, i32* %24, align 4, !dbg !11330
  %37 = and i32 %36, 32768, !dbg !11331
  %38 = icmp eq i32 %37, 0, !dbg !11332
  br i1 %38, label %39, label %35, !dbg !11332, !llvm.loop !11333

39:                                               ; preds = %35
  %40 = select i1 %26, i32 0, i32 %22
  %41 = call i32 @sd_send_command(i32 noundef %0, i32 noundef 425, i32 noundef %40) #23, !dbg !11335
  call void @llvm.dbg.value(metadata i8 poison, metadata !11282, metadata !DIExpression()), !dbg !11286
  call void @llvm.dbg.value(metadata i32 %41, metadata !11278, metadata !DIExpression()), !dbg !11286
  %42 = icmp eq i32 %41, 0, !dbg !11337
  br i1 %42, label %44, label %43, !dbg !11339

43:                                               ; preds = %39
  store i32 %41, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 13), align 8, !dbg !11340
  br label %69, !dbg !11342

44:                                               ; preds = %39
  %45 = load volatile i32, i32* %20, align 16, !dbg !11343
  call void @llvm.dbg.value(metadata i32 %45, metadata !11281, metadata !DIExpression()), !dbg !11286
  %46 = and i32 %45, 16744448, !dbg !11344
  %47 = icmp eq i32 %46, 0, !dbg !11344
  br i1 %47, label %48, label %49, !dbg !11346

48:                                               ; preds = %44
  store i32 -19, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 13), align 8, !dbg !11347
  br label %69, !dbg !11349

49:                                               ; preds = %44
  %50 = call zeroext i1 @msdc_card_is_present(i32 noundef %0) #22, !dbg !11350
  br i1 %50, label %52, label %51, !dbg !11352

51:                                               ; preds = %49
  store i32 -18, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 13), align 8, !dbg !11353
  br label %69, !dbg !11355

52:                                               ; preds = %49
  %53 = icmp sgt i32 %45, -1, !dbg !11356
  br i1 %53, label %54, label %62, !dbg !11358

54:                                               ; preds = %52
  call void @llvm.dbg.value(metadata i32* %3, metadata !11284, metadata !DIExpression(DW_OP_deref)), !dbg !11286
  %55 = call i32 @hal_gpt_get_free_run_count(i32 noundef 1, i32* noundef nonnull %3) #22, !dbg !11359
  %56 = load i32, i32* %2, align 4, !dbg !11361
  call void @llvm.dbg.value(metadata i32 %56, metadata !11283, metadata !DIExpression()), !dbg !11286
  %57 = load i32, i32* %3, align 4, !dbg !11362
  call void @llvm.dbg.value(metadata i32 %57, metadata !11284, metadata !DIExpression()), !dbg !11286
  call void @llvm.dbg.value(metadata i32* %4, metadata !11285, metadata !DIExpression(DW_OP_deref)), !dbg !11286
  %58 = call i32 @hal_gpt_get_duration_count(i32 noundef %56, i32 noundef %57, i32* noundef nonnull %4) #22, !dbg !11363
  %59 = load i32, i32* %4, align 4, !dbg !11364
  call void @llvm.dbg.value(metadata i32 %59, metadata !11285, metadata !DIExpression()), !dbg !11286
  %60 = icmp ugt i32 %59, 1099999, !dbg !11366
  br i1 %60, label %61, label %25, !dbg !11367, !llvm.loop !11368

61:                                               ; preds = %54
  store i32 -3, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 13), align 8, !dbg !11370
  br label %69, !dbg !11372

62:                                               ; preds = %52
  store i8 0, i8* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 8), align 8, !dbg !11373
  store i32 %45, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 0), align 8, !dbg !11374
  %63 = and i32 %45, 1073741824, !dbg !11375
  %64 = icmp eq i32 %63, 0, !dbg !11375
  %65 = load i32, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 12), align 4, !dbg !11377
  %66 = icmp eq i32 %65, 2, !dbg !11377
  %67 = select i1 %66, i32 2, i32 0, !dbg !11377
  %68 = select i1 %64, i32 %67, i32 3, !dbg !11377
  store i32 %68, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 14), align 4, !dbg !11378
  store i32 1, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 7), align 4, !dbg !11379
  br label %69, !dbg !11380

69:                                               ; preds = %62, %61, %51, %48, %43, %34, %18
  %70 = phi i32 [ 255, %34 ], [ 255, %43 ], [ 255, %51 ], [ %68, %62 ], [ 255, %61 ], [ 255, %48 ], [ 255, %18 ], !dbg !11286
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #24, !dbg !11381
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #24, !dbg !11381
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !11381
  ret i32 %70, !dbg !11381
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sd_check_mmc_card_type(i32 noundef %0) local_unnamed_addr #0 !dbg !11382 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !11384, metadata !DIExpression()), !dbg !11392
  call void @llvm.dbg.value(metadata i32 0, metadata !11387, metadata !DIExpression()), !dbg !11392
  call void @llvm.dbg.value(metadata i32 0, metadata !11388, metadata !DIExpression()), !dbg !11392
  %5 = bitcast i32* %2 to i8*, !dbg !11393
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !11393
  call void @llvm.dbg.value(metadata i32 0, metadata !11389, metadata !DIExpression()), !dbg !11392
  store i32 0, i32* %2, align 4, !dbg !11394
  %6 = bitcast i32* %3 to i8*, !dbg !11395
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #24, !dbg !11395
  call void @llvm.dbg.value(metadata i32 0, metadata !11390, metadata !DIExpression()), !dbg !11392
  store i32 0, i32* %3, align 4, !dbg !11396
  %7 = bitcast i32* %4 to i8*, !dbg !11397
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #24, !dbg !11397
  call void @llvm.dbg.value(metadata i32 0, metadata !11391, metadata !DIExpression()), !dbg !11392
  store i32 0, i32* %4, align 4, !dbg !11398
  %8 = icmp eq i32 %0, 0, !dbg !11399
  call void @llvm.dbg.value(metadata %struct.msdc_register_t* undef, metadata !11385, metadata !DIExpression()), !dbg !11392
  %9 = load i32, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 12), align 4, !dbg !11400
  %10 = icmp eq i32 %9, 1, !dbg !11402
  br i1 %10, label %11, label %12, !dbg !11403

11:                                               ; preds = %1
  store i32 -24, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 13), align 8, !dbg !11404
  br label %50, !dbg !11406

12:                                               ; preds = %1
  call void @llvm.dbg.value(metadata i32 1090486272, metadata !11387, metadata !DIExpression()), !dbg !11392
  %13 = load i32, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 13), align 8, !dbg !11407
  %14 = icmp eq i32 %13, -3, !dbg !11409
  br i1 %14, label %50, label %15, !dbg !11410

15:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32* %2, metadata !11389, metadata !DIExpression(DW_OP_deref)), !dbg !11392
  %16 = call i32 @hal_gpt_get_free_run_count(i32 noundef 1, i32* noundef nonnull %2) #22, !dbg !11411
  %17 = select i1 %8, i32* inttoptr (i32 -1610481660 to i32*), i32* inttoptr (i32 -1610416124 to i32*)
  %18 = select i1 %8, i32* inttoptr (i32 -1610481616 to i32*), i32* inttoptr (i32 -1610416080 to i32*)
  br label %19, !dbg !11412

19:                                               ; preds = %23, %15
  %20 = load volatile i32, i32* %17, align 4, !dbg !11413
  %21 = and i32 %20, 32768, !dbg !11415
  %22 = icmp eq i32 %21, 0, !dbg !11416
  br i1 %22, label %24, label %23, !dbg !11416

23:                                               ; preds = %19, %38
  br label %19, !dbg !11413, !llvm.loop !11417

24:                                               ; preds = %19
  %25 = call i32 @sd_send_command(i32 noundef %0, i32 noundef 385, i32 noundef 1090486272) #23, !dbg !11419
  call void @llvm.dbg.value(metadata i32 %25, metadata !11386, metadata !DIExpression()), !dbg !11392
  %26 = icmp eq i32 %25, 0, !dbg !11420
  br i1 %26, label %28, label %27, !dbg !11422

27:                                               ; preds = %24
  store i32 %25, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 13), align 8, !dbg !11423
  br label %50, !dbg !11425

28:                                               ; preds = %24
  %29 = load volatile i32, i32* %18, align 16, !dbg !11426
  call void @llvm.dbg.value(metadata i32 %29, metadata !11388, metadata !DIExpression()), !dbg !11392
  %30 = and i32 %29, 16744448, !dbg !11427
  %31 = icmp eq i32 %30, 0, !dbg !11427
  br i1 %31, label %32, label %33, !dbg !11429

32:                                               ; preds = %28
  store i32 -19, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 13), align 8, !dbg !11430
  br label %50, !dbg !11432

33:                                               ; preds = %28
  %34 = call zeroext i1 @msdc_card_is_present(i32 noundef %0) #22, !dbg !11433
  br i1 %34, label %36, label %35, !dbg !11435

35:                                               ; preds = %33
  store i32 -18, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 13), align 8, !dbg !11436
  br label %50, !dbg !11438

36:                                               ; preds = %33
  %37 = icmp sgt i32 %29, -1, !dbg !11439
  br i1 %37, label %38, label %46, !dbg !11441

38:                                               ; preds = %36
  call void @llvm.dbg.value(metadata i32* %3, metadata !11390, metadata !DIExpression(DW_OP_deref)), !dbg !11392
  %39 = call i32 @hal_gpt_get_free_run_count(i32 noundef 1, i32* noundef nonnull %3) #22, !dbg !11442
  %40 = load i32, i32* %2, align 4, !dbg !11444
  call void @llvm.dbg.value(metadata i32 %40, metadata !11389, metadata !DIExpression()), !dbg !11392
  %41 = load i32, i32* %3, align 4, !dbg !11445
  call void @llvm.dbg.value(metadata i32 %41, metadata !11390, metadata !DIExpression()), !dbg !11392
  call void @llvm.dbg.value(metadata i32* %4, metadata !11391, metadata !DIExpression(DW_OP_deref)), !dbg !11392
  %42 = call i32 @hal_gpt_get_duration_count(i32 noundef %40, i32 noundef %41, i32* noundef nonnull %4) #22, !dbg !11446
  %43 = load i32, i32* %4, align 4, !dbg !11447
  call void @llvm.dbg.value(metadata i32 %43, metadata !11391, metadata !DIExpression()), !dbg !11392
  %44 = icmp ugt i32 %43, 1099999, !dbg !11449
  br i1 %44, label %45, label %23, !dbg !11450

45:                                               ; preds = %38
  store i32 -3, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 13), align 8, !dbg !11451
  br label %50, !dbg !11453

46:                                               ; preds = %36
  store i8 0, i8* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 8), align 8, !dbg !11454
  store i32 %29, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 0), align 8, !dbg !11455
  %47 = and i32 %29, 1610612736, !dbg !11456
  %48 = icmp eq i32 %47, 1073741824, !dbg !11458
  %49 = select i1 %48, i32 4, i32 1
  store i32 %49, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 14), align 4, !dbg !11459
  store i32 1, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 7), align 4, !dbg !11460
  br label %50, !dbg !11461

50:                                               ; preds = %12, %46, %45, %35, %32, %27, %11
  %51 = phi i32 [ 255, %11 ], [ 255, %27 ], [ 255, %35 ], [ %49, %46 ], [ 255, %45 ], [ 255, %32 ], [ 255, %12 ], !dbg !11392
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #24, !dbg !11462
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #24, !dbg !11462
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !11462
  ret i32 %51, !dbg !11462
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sd_check_card_type(i32 noundef %0) local_unnamed_addr #0 !dbg !11463 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11465, metadata !DIExpression()), !dbg !11467
  %2 = tail call i32 @sd_check_sd_card_type(i32 noundef %0) #23, !dbg !11468
  call void @llvm.dbg.value(metadata i32 %2, metadata !11466, metadata !DIExpression()), !dbg !11467
  %3 = icmp eq i32 %2, 255, !dbg !11470
  br i1 %3, label %4, label %6, !dbg !11471

4:                                                ; preds = %1
  %5 = tail call i32 @sd_check_mmc_card_type(i32 noundef %0) #23, !dbg !11472
  call void @llvm.dbg.value(metadata i32 %5, metadata !11466, metadata !DIExpression()), !dbg !11467
  br label %6, !dbg !11474

6:                                                ; preds = %4, %1
  %7 = phi i32 [ %2, %1 ], [ %5, %4 ], !dbg !11475
  ret i32 %7, !dbg !11476
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sd_get_card_id(i32 noundef %0) local_unnamed_addr #0 !dbg !11477 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11479, metadata !DIExpression()), !dbg !11482
  %2 = icmp eq i32 %0, 0, !dbg !11483
  call void @llvm.dbg.value(metadata %struct.msdc_register_t* undef, metadata !11481, metadata !DIExpression()), !dbg !11482
  %3 = tail call i32 @sd_send_command(i32 noundef %0, i32 noundef 1282, i32 noundef 0) #23, !dbg !11484
  call void @llvm.dbg.value(metadata i32 %3, metadata !11480, metadata !DIExpression()), !dbg !11482
  %4 = icmp eq i32 %3, 0, !dbg !11485
  br i1 %4, label %5, label %14, !dbg !11487

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.msdc_register_t* undef, metadata !11481, metadata !DIExpression()), !dbg !11482
  %6 = select i1 %2, i32* inttoptr (i32 -1610481616 to i32*), i32* inttoptr (i32 -1610416080 to i32*), !dbg !11488
  %7 = load volatile i32, i32* %6, align 16, !dbg !11488
  store i32 %7, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 4, i32 0), align 8, !dbg !11489
  %8 = select i1 %2, i32* inttoptr (i32 -1610481612 to i32*), i32* inttoptr (i32 -1610416076 to i32*), !dbg !11490
  %9 = load volatile i32, i32* %8, align 4, !dbg !11490
  store i32 %9, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 4, i32 1), align 4, !dbg !11491
  %10 = select i1 %2, i32* inttoptr (i32 -1610481608 to i32*), i32* inttoptr (i32 -1610416072 to i32*), !dbg !11492
  %11 = load volatile i32, i32* %10, align 8, !dbg !11492
  store i32 %11, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 4, i32 2), align 8, !dbg !11493
  %12 = select i1 %2, i32* inttoptr (i32 -1610481604 to i32*), i32* inttoptr (i32 -1610416068 to i32*), !dbg !11494
  %13 = load volatile i32, i32* %12, align 4, !dbg !11494
  store i32 %13, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 4, i32 3), align 4, !dbg !11495
  store i32 2, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 7), align 4, !dbg !11496
  br label %14, !dbg !11497

14:                                               ; preds = %1, %5
  ret i32 %3, !dbg !11498
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sd_get_rca(i32 noundef %0) local_unnamed_addr #0 !dbg !11499 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11501, metadata !DIExpression()), !dbg !11506
  call void @llvm.dbg.value(metadata i32 0, metadata !11504, metadata !DIExpression()), !dbg !11506
  %2 = icmp eq i32 %0, 0, !dbg !11507
  call void @llvm.dbg.value(metadata %struct.msdc_register_t* undef, metadata !11503, metadata !DIExpression()), !dbg !11506
  %3 = load i32, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 14), align 4, !dbg !11508
  %4 = and i32 %3, 3, !dbg !11510
  %5 = icmp eq i32 %4, 0, !dbg !11510
  br i1 %5, label %13, label %6, !dbg !11511

6:                                                ; preds = %1
  %7 = tail call i32 @sd_send_command(i32 noundef %0, i32 noundef 771, i32 noundef 0) #23, !dbg !11512
  call void @llvm.dbg.value(metadata i32 %7, metadata !11502, metadata !DIExpression()), !dbg !11506
  %8 = icmp eq i32 %7, 0, !dbg !11514
  br i1 %8, label %9, label %27, !dbg !11516

9:                                                ; preds = %6
  %10 = select i1 %2, i32* inttoptr (i32 -1610481616 to i32*), i32* inttoptr (i32 -1610416080 to i32*), !dbg !11517
  %11 = load volatile i32, i32* %10, align 16, !dbg !11517
  call void @llvm.dbg.value(metadata i32 %11, metadata !11504, metadata !DIExpression()), !dbg !11506
  %12 = lshr i32 %11, 16, !dbg !11518
  br label %25, !dbg !11519

13:                                               ; preds = %1
  %14 = tail call i32 @sd_send_command(i32 noundef %0, i32 noundef 131, i32 noundef 65536) #23, !dbg !11520
  call void @llvm.dbg.value(metadata i32 %14, metadata !11502, metadata !DIExpression()), !dbg !11506
  %15 = icmp eq i32 %14, 0, !dbg !11522
  br i1 %15, label %16, label %27, !dbg !11524

16:                                               ; preds = %13
  %17 = select i1 %2, i32* inttoptr (i32 -1610481616 to i32*), i32* inttoptr (i32 -1610416080 to i32*), !dbg !11525
  %18 = load volatile i32, i32* %17, align 16, !dbg !11525
  call void @llvm.dbg.value(metadata i32 %18, metadata !11504, metadata !DIExpression()), !dbg !11506
  %19 = tail call i32 @sd_send_command(i32 noundef %0, i32 noundef 141, i32 noundef 65536) #23, !dbg !11526
  call void @llvm.dbg.value(metadata i32 %19, metadata !11502, metadata !DIExpression()), !dbg !11506
  %20 = icmp eq i32 %19, 0, !dbg !11527
  br i1 %20, label %21, label %27, !dbg !11529

21:                                               ; preds = %16
  %22 = load volatile i32, i32* %17, align 16, !dbg !11530
  call void @llvm.dbg.value(metadata i32 %22, metadata !11504, metadata !DIExpression()), !dbg !11506
  call void @llvm.dbg.value(metadata i32 %22, metadata !11505, metadata !DIExpression(DW_OP_constu, 9, DW_OP_shr, DW_OP_constu, 15, DW_OP_and, DW_OP_stack_value)), !dbg !11506
  %23 = and i32 %22, 7680, !dbg !11531
  %24 = icmp eq i32 %23, 1536, !dbg !11531
  br i1 %24, label %25, label %27, !dbg !11533

25:                                               ; preds = %21, %9
  %26 = phi i32 [ %12, %9 ], [ 1, %21 ], !dbg !11534
  store i32 %26, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 6), align 8, !dbg !11534
  store i32 3, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 7), align 4, !dbg !11535
  br label %27, !dbg !11536

27:                                               ; preds = %21, %16, %13, %6, %25
  %28 = phi i32 [ 0, %25 ], [ %7, %6 ], [ %14, %13 ], [ %19, %16 ], [ -4, %21 ], !dbg !11506
  ret i32 %28, !dbg !11537
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sd_acommand42(i32 noundef %0) local_unnamed_addr #0 !dbg !11538 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11540, metadata !DIExpression()), !dbg !11542
  %2 = load i32, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 6), align 8, !dbg !11543
  %3 = tail call i32 @sd_send_command55(i32 noundef %0, i32 noundef %2) #23, !dbg !11544
  call void @llvm.dbg.value(metadata i32 %3, metadata !11541, metadata !DIExpression()), !dbg !11542
  %4 = icmp eq i32 %3, 0, !dbg !11545
  br i1 %4, label %5, label %10, !dbg !11547

5:                                                ; preds = %1
  %6 = tail call i32 @sd_send_command(i32 noundef %0, i32 noundef 170, i32 noundef 0) #23, !dbg !11548
  call void @llvm.dbg.value(metadata i32 %6, metadata !11541, metadata !DIExpression()), !dbg !11542
  %7 = icmp eq i32 %6, 0, !dbg !11549
  br i1 %7, label %8, label %10, !dbg !11551

8:                                                ; preds = %5
  %9 = tail call i32 @sd_check_card_status(i32 noundef %0) #23, !dbg !11552
  call void @llvm.dbg.value(metadata i32 %9, metadata !11541, metadata !DIExpression()), !dbg !11542
  br label %10, !dbg !11542

10:                                               ; preds = %8, %5, %1
  %11 = phi i32 [ %3, %1 ], [ %6, %5 ], [ %9, %8 ], !dbg !11542
  ret i32 %11, !dbg !11553
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @sd_check_card_status(i32 noundef %0) local_unnamed_addr #11 !dbg !11554 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11556, metadata !DIExpression()), !dbg !11559
  %2 = icmp eq i32 %0, 0, !dbg !11560
  call void @llvm.dbg.value(metadata %struct.msdc_register_t* undef, metadata !11557, metadata !DIExpression()), !dbg !11559
  %3 = select i1 %2, i32* inttoptr (i32 -1610481616 to i32*), i32* inttoptr (i32 -1610416080 to i32*), !dbg !11561
  %4 = load volatile i32, i32* %3, align 16, !dbg !11561
  call void @llvm.dbg.value(metadata i32 %4, metadata !11558, metadata !DIExpression()), !dbg !11559
  %5 = icmp ult i32 %4, 32768, !dbg !11562
  %6 = and i32 %4, 33554432, !dbg !11564
  %7 = icmp eq i32 %6, 0, !dbg !11564
  %8 = select i1 %7, i32 -11, i32 -38, !dbg !11564
  %9 = select i1 %5, i32 0, i32 %8, !dbg !11564
  ret i32 %9, !dbg !11565
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sd_get_bit_field_value(i8* noundef %0, i8* nocapture noundef readonly %1, i16 noundef zeroext %2, i16 noundef zeroext %3) local_unnamed_addr #0 !dbg !11566 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11570, metadata !DIExpression()), !dbg !11577
  call void @llvm.dbg.value(metadata i8* %1, metadata !11571, metadata !DIExpression()), !dbg !11577
  call void @llvm.dbg.value(metadata i16 %2, metadata !11572, metadata !DIExpression()), !dbg !11577
  call void @llvm.dbg.value(metadata i16 %3, metadata !11573, metadata !DIExpression()), !dbg !11577
  %5 = zext i16 %3 to i32, !dbg !11578
  %6 = lshr i32 %5, 8, !dbg !11579
  %7 = and i32 %5, 7, !dbg !11580
  %8 = icmp ne i32 %7, 0, !dbg !11581
  %9 = zext i1 %8 to i32, !dbg !11582
  %10 = add nuw nsw i32 %6, %9, !dbg !11583
  %11 = tail call i8* @memset(i8* noundef %0, i32 noundef 0, i32 noundef %10) #22, !dbg !11584
  call void @llvm.dbg.value(metadata i16 0, metadata !11574, metadata !DIExpression()), !dbg !11577
  %12 = icmp eq i16 %3, 0, !dbg !11585
  br i1 %12, label %34, label %13, !dbg !11588

13:                                               ; preds = %4
  %14 = zext i16 %2 to i32
  br label %15, !dbg !11588

15:                                               ; preds = %13, %15
  %16 = phi i32 [ 0, %13 ], [ %32, %15 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !11574, metadata !DIExpression()), !dbg !11577
  %17 = add nuw nsw i32 %16, %14, !dbg !11589
  %18 = lshr i32 %17, 3, !dbg !11591
  call void @llvm.dbg.value(metadata i32 %18, metadata !11575, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11577
  %19 = and i32 %17, 7, !dbg !11592
  call void @llvm.dbg.value(metadata i32 %17, metadata !11576, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_constu, 7, DW_OP_and, DW_OP_stack_value)), !dbg !11577
  %20 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !11593
  %21 = load i8, i8* %20, align 1, !dbg !11594
  %22 = zext i8 %21 to i32, !dbg !11594
  %23 = lshr i32 %22, %19, !dbg !11595
  %24 = and i32 %23, 1, !dbg !11596
  %25 = and i32 %16, 7, !dbg !11597
  %26 = shl nuw nsw i32 %24, %25, !dbg !11598
  %27 = lshr i32 %16, 3, !dbg !11599
  %28 = getelementptr inbounds i8, i8* %0, i32 %27, !dbg !11600
  %29 = load i8, i8* %28, align 1, !dbg !11601
  %30 = trunc i32 %26 to i8, !dbg !11601
  %31 = or i8 %29, %30, !dbg !11601
  store i8 %31, i8* %28, align 1, !dbg !11601
  %32 = add nuw nsw i32 %16, 1, !dbg !11602
  call void @llvm.dbg.value(metadata i32 %32, metadata !11574, metadata !DIExpression()), !dbg !11577
  %33 = icmp eq i32 %32, %5, !dbg !11585
  br i1 %33, label %34, label %15, !dbg !11588, !llvm.loop !11603

34:                                               ; preds = %15, %4
  ret void, !dbg !11605
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sd_analysis_csd(i32 %0, i32* noundef readonly %1) local_unnamed_addr #0 !dbg !11606 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !11610, metadata !DIExpression()), !dbg !11614
  call void @llvm.dbg.value(metadata i32* %1, metadata !11611, metadata !DIExpression()), !dbg !11614
  %4 = bitcast i32* %3 to i8*, !dbg !11615
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #24, !dbg !11615
  %5 = bitcast i32* %1 to i8*, !dbg !11616
  call void @llvm.dbg.value(metadata i8* %5, metadata !11612, metadata !DIExpression()), !dbg !11614
  tail call void @sd_get_bit_field_value(i8* noundef bitcast (i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 3, i32 0) to i8*), i8* noundef %5, i16 noundef zeroext 126, i16 noundef zeroext 2) #23, !dbg !11617
  tail call void @sd_get_bit_field_value(i8* noundef getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 3, i32 1), i8* noundef %5, i16 noundef zeroext 112, i16 noundef zeroext 8) #23, !dbg !11618
  tail call void @sd_get_bit_field_value(i8* noundef getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 3, i32 2), i8* noundef %5, i16 noundef zeroext 104, i16 noundef zeroext 8) #23, !dbg !11619
  tail call void @sd_get_bit_field_value(i8* noundef getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 3, i32 3), i8* noundef %5, i16 noundef zeroext 96, i16 noundef zeroext 8) #23, !dbg !11620
  tail call void @sd_get_bit_field_value(i8* noundef bitcast (i16* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 3, i32 4) to i8*), i8* noundef %5, i16 noundef zeroext 84, i16 noundef zeroext 12) #23, !dbg !11621
  tail call void @sd_get_bit_field_value(i8* noundef bitcast (i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 3, i32 6) to i8*), i8* noundef %5, i16 noundef zeroext 80, i16 noundef zeroext 4) #23, !dbg !11622
  tail call void @sd_get_bit_field_value(i8* noundef getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 3, i32 10), i8* noundef %5, i16 noundef zeroext 79, i16 noundef zeroext 1) #23, !dbg !11623
  tail call void @sd_get_bit_field_value(i8* noundef getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 3, i32 7), i8* noundef %5, i16 noundef zeroext 78, i16 noundef zeroext 1) #23, !dbg !11624
  tail call void @sd_get_bit_field_value(i8* noundef getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 3, i32 8), i8* noundef %5, i16 noundef zeroext 77, i16 noundef zeroext 1) #23, !dbg !11625
  tail call void @sd_get_bit_field_value(i8* noundef getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 3, i32 11), i8* noundef %5, i16 noundef zeroext 76, i16 noundef zeroext 1) #23, !dbg !11626
  tail call void @sd_get_bit_field_value(i8* noundef bitcast (i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 3, i32 5) to i8*), i8* noundef %5, i16 noundef zeroext 22, i16 noundef zeroext 4) #23, !dbg !11627
  tail call void @sd_get_bit_field_value(i8* noundef getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 3, i32 9), i8* noundef %5, i16 noundef zeroext 21, i16 noundef zeroext 1) #23, !dbg !11628
  tail call void @sd_get_bit_field_value(i8* noundef getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 3, i32 16), i8* noundef %5, i16 noundef zeroext 31, i16 noundef zeroext 1) #23, !dbg !11629
  tail call void @sd_get_bit_field_value(i8* noundef getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 3, i32 18), i8* noundef %5, i16 noundef zeroext 13, i16 noundef zeroext 1) #23, !dbg !11630
  tail call void @sd_get_bit_field_value(i8* noundef getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 3, i32 17), i8* noundef %5, i16 noundef zeroext 12, i16 noundef zeroext 1) #23, !dbg !11631
  %6 = load i32, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 3, i32 6), align 8, !dbg !11632
  %7 = shl nuw i32 1, %6, !dbg !11633
  store i32 %7, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 3, i32 6), align 8, !dbg !11634
  %8 = load i32, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 3, i32 5), align 4, !dbg !11635
  %9 = shl nuw i32 1, %8, !dbg !11636
  store i32 %9, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 3, i32 5), align 4, !dbg !11637
  %10 = load i8, i8* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 3, i32 17), align 1, !dbg !11638
  %11 = icmp ne i8 %10, 0, !dbg !11640
  %12 = load i8, i8* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 3, i32 18), align 2
  %13 = icmp ne i8 %12, 0
  %14 = select i1 %11, i1 true, i1 %13, !dbg !11641
  br i1 %14, label %15, label %16, !dbg !11641

15:                                               ; preds = %2
  store i8 1, i8* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 10), align 2, !dbg !11642
  br label %16, !dbg !11644

16:                                               ; preds = %2, %15
  %17 = load i32, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 14), align 4, !dbg !11645
  switch i32 %17, label %26 [
    i32 4, label %18
    i32 1, label %18
  ], !dbg !11647

18:                                               ; preds = %16, %16
  tail call void @sd_get_bit_field_value(i8* noundef getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 3, i32 22), i8* noundef %5, i16 noundef zeroext 122, i16 noundef zeroext 4) #23, !dbg !11648
  tail call void @sd_get_bit_field_value(i8* noundef bitcast (i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 3, i32 20) to i8*), i8* noundef %5, i16 noundef zeroext 42, i16 noundef zeroext 5) #23, !dbg !11650
  tail call void @sd_get_bit_field_value(i8* noundef bitcast (i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 3, i32 21) to i8*), i8* noundef %5, i16 noundef zeroext 37, i16 noundef zeroext 5) #23, !dbg !11651
  tail call void @sd_get_bit_field_value(i8* noundef bitcast (i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 3, i32 19) to i8*), i8* noundef %5, i16 noundef zeroext 32, i16 noundef zeroext 5) #23, !dbg !11652
  %19 = load i32, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 3, i32 20), align 4, !dbg !11653
  %20 = add i32 %19, 1, !dbg !11654
  %21 = load i32, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 3, i32 5), align 4, !dbg !11655
  %22 = mul i32 %20, %21, !dbg !11656
  store i32 %22, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 3, i32 20), align 4, !dbg !11657
  %23 = load i32, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 3, i32 21), align 8, !dbg !11658
  %24 = add i32 %23, 1, !dbg !11659
  %25 = mul i32 %24, %22, !dbg !11660
  store i32 %25, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 3, i32 21), align 8, !dbg !11661
  br label %29, !dbg !11662

26:                                               ; preds = %16
  tail call void @sd_get_bit_field_value(i8* noundef bitcast (i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 3, i32 14) to i8*), i8* noundef %5, i16 noundef zeroext 39, i16 noundef zeroext 7) #23, !dbg !11663
  tail call void @sd_get_bit_field_value(i8* noundef bitcast (i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 3, i32 15) to i8*), i8* noundef %5, i16 noundef zeroext 32, i16 noundef zeroext 7) #23, !dbg !11665
  tail call void @sd_get_bit_field_value(i8* noundef getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 3, i32 13), i8* noundef %5, i16 noundef zeroext 46, i16 noundef zeroext 1) #23, !dbg !11666
  %27 = load i32, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 3, i32 14), align 4, !dbg !11667
  %28 = add i32 %27, 1, !dbg !11668
  store i32 %28, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 3, i32 14), align 4, !dbg !11669
  br label %29

29:                                               ; preds = %26, %18
  %30 = phi i32* [ getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 3, i32 15), %26 ], [ getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 3, i32 19), %18 ]
  %31 = phi i32 [ %28, %26 ], [ %25, %18 ]
  %32 = load i32, i32* %30, align 8, !dbg !11670
  %33 = add i32 %32, 1, !dbg !11670
  %34 = mul i32 %33, %31, !dbg !11670
  store i32 %34, i32* %30, align 8, !dbg !11670
  %35 = load i32, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 14), align 4, !dbg !11671
  %36 = icmp eq i32 %35, 3, !dbg !11673
  %37 = load i32, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 3, i32 0), align 8
  %38 = icmp ne i32 %37, 0
  %39 = select i1 %36, i1 %38, i1 false, !dbg !11674
  br i1 %39, label %40, label %45, !dbg !11674

40:                                               ; preds = %29
  tail call void @sd_get_bit_field_value(i8* noundef bitcast (i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 3, i32 12) to i8*), i8* noundef %5, i16 noundef zeroext 48, i16 noundef zeroext 22) #23, !dbg !11675
  %41 = load i32, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 3, i32 12), align 4, !dbg !11677
  %42 = add i32 %41, 1, !dbg !11678
  %43 = zext i32 %42 to i64, !dbg !11679
  %44 = shl nuw nsw i64 %43, 19, !dbg !11680
  br label %57, !dbg !11681

45:                                               ; preds = %29
  tail call void @sd_get_bit_field_value(i8* noundef bitcast (i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 3, i32 12) to i8*), i8* noundef %5, i16 noundef zeroext 62, i16 noundef zeroext 12) #23, !dbg !11682
  call void @llvm.dbg.value(metadata i32* %3, metadata !11613, metadata !DIExpression(DW_OP_deref)), !dbg !11614
  call void @sd_get_bit_field_value(i8* noundef nonnull %4, i8* noundef %5, i16 noundef zeroext 47, i16 noundef zeroext 3) #23, !dbg !11684
  %46 = load i32, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 3, i32 12), align 4, !dbg !11685
  %47 = add i32 %46, 1, !dbg !11686
  %48 = zext i32 %47 to i64, !dbg !11687
  %49 = load i32, i32* %3, align 4, !dbg !11688
  call void @llvm.dbg.value(metadata i32 %49, metadata !11613, metadata !DIExpression()), !dbg !11614
  %50 = add i32 %49, 2, !dbg !11689
  %51 = shl nuw i32 1, %50, !dbg !11690
  %52 = sext i32 %51 to i64, !dbg !11691
  %53 = load i32, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 3, i32 6), align 8, !dbg !11692
  %54 = zext i32 %53 to i64, !dbg !11693
  %55 = mul nuw i64 %54, %48, !dbg !11694
  %56 = mul i64 %55, %52, !dbg !11695
  br label %57

57:                                               ; preds = %45, %40
  %58 = phi i64 [ %56, %45 ], [ %44, %40 ], !dbg !11696
  store i64 %58, i64* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 3, i32 24), align 8, !dbg !11696
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #24, !dbg !11697
  ret void, !dbg !11697
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sd_get_csd(i32 noundef %0) local_unnamed_addr #0 !dbg !11698 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11700, metadata !DIExpression()), !dbg !11703
  %2 = icmp eq i32 %0, 0, !dbg !11704
  call void @llvm.dbg.value(metadata %struct.msdc_register_t* undef, metadata !11702, metadata !DIExpression()), !dbg !11703
  %3 = load i32, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 6), align 8, !dbg !11705
  %4 = shl i32 %3, 16, !dbg !11706
  %5 = tail call i32 @sd_send_command(i32 noundef %0, i32 noundef 265, i32 noundef %4) #23, !dbg !11707
  call void @llvm.dbg.value(metadata i32 %5, metadata !11701, metadata !DIExpression()), !dbg !11703
  %6 = icmp eq i32 %5, 0, !dbg !11708
  br i1 %6, label %7, label %16, !dbg !11710

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.msdc_register_t* undef, metadata !11702, metadata !DIExpression()), !dbg !11703
  %8 = select i1 %2, i32* inttoptr (i32 -1610481616 to i32*), i32* inttoptr (i32 -1610416080 to i32*), !dbg !11711
  %9 = load volatile i32, i32* %8, align 16, !dbg !11711
  store i32 %9, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @sd_csd, i32 0, i32 0), align 4, !dbg !11712
  %10 = select i1 %2, i32* inttoptr (i32 -1610481612 to i32*), i32* inttoptr (i32 -1610416076 to i32*), !dbg !11713
  %11 = load volatile i32, i32* %10, align 4, !dbg !11713
  store i32 %11, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @sd_csd, i32 0, i32 1), align 4, !dbg !11714
  %12 = select i1 %2, i32* inttoptr (i32 -1610481608 to i32*), i32* inttoptr (i32 -1610416072 to i32*), !dbg !11715
  %13 = load volatile i32, i32* %12, align 8, !dbg !11715
  store i32 %13, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @sd_csd, i32 0, i32 2), align 4, !dbg !11716
  %14 = select i1 %2, i32* inttoptr (i32 -1610481604 to i32*), i32* inttoptr (i32 -1610416068 to i32*), !dbg !11717
  %15 = load volatile i32, i32* %14, align 4, !dbg !11717
  store i32 %15, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @sd_csd, i32 0, i32 3), align 4, !dbg !11718
  tail call void @sd_analysis_csd(i32 undef, i32* noundef getelementptr inbounds ([4 x i32], [4 x i32]* @sd_csd, i32 0, i32 0)) #23, !dbg !11719
  br label %16, !dbg !11720

16:                                               ; preds = %1, %7
  ret i32 %5, !dbg !11721
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sd_set_dsr(i32 noundef %0) local_unnamed_addr #0 !dbg !11722 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11724, metadata !DIExpression()), !dbg !11725
  %2 = tail call i32 @sd_send_command(i32 noundef %0, i32 noundef 4, i32 noundef 67371008) #23, !dbg !11726
  ret i32 %2, !dbg !11727
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sd_wait_card_not_busy(i32 noundef %0) local_unnamed_addr #0 !dbg !11728 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !11730, metadata !DIExpression()), !dbg !11735
  %5 = bitcast i32* %2 to i8*, !dbg !11736
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !11736
  call void @llvm.dbg.value(metadata i32 0, metadata !11732, metadata !DIExpression()), !dbg !11735
  store i32 0, i32* %2, align 4, !dbg !11737
  %6 = bitcast i32* %3 to i8*, !dbg !11738
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #24, !dbg !11738
  call void @llvm.dbg.value(metadata i32 0, metadata !11733, metadata !DIExpression()), !dbg !11735
  store i32 0, i32* %3, align 4, !dbg !11739
  %7 = bitcast i32* %4 to i8*, !dbg !11740
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #24, !dbg !11740
  call void @llvm.dbg.value(metadata i32 0, metadata !11734, metadata !DIExpression()), !dbg !11735
  store i32 0, i32* %4, align 4, !dbg !11741
  %8 = icmp eq i32 %0, 0, !dbg !11742
  call void @llvm.dbg.value(metadata %struct.msdc_register_t* undef, metadata !11731, metadata !DIExpression()), !dbg !11735
  call void @llvm.dbg.value(metadata i32* %2, metadata !11732, metadata !DIExpression(DW_OP_deref)), !dbg !11735
  %9 = call i32 @hal_gpt_get_free_run_count(i32 noundef 1, i32* noundef nonnull %2) #22, !dbg !11743
  %10 = select i1 %8, i32* inttoptr (i32 -1610481620 to i32*), i32* inttoptr (i32 -1610416084 to i32*)
  br label %11, !dbg !11744

11:                                               ; preds = %17, %1
  %12 = load volatile i32, i32* %10, align 4, !dbg !11745
  %13 = and i32 %12, 16, !dbg !11745
  %14 = icmp eq i32 %13, 0, !dbg !11745
  br i1 %14, label %25, label %15, !dbg !11746

15:                                               ; preds = %11
  %16 = call zeroext i1 @msdc_card_is_present(i32 noundef %0) #22, !dbg !11747
  br i1 %16, label %17, label %25, !dbg !11744

17:                                               ; preds = %15
  call void @llvm.dbg.value(metadata i32* %3, metadata !11733, metadata !DIExpression(DW_OP_deref)), !dbg !11735
  %18 = call i32 @hal_gpt_get_free_run_count(i32 noundef 1, i32* noundef nonnull %3) #22, !dbg !11748
  %19 = load i32, i32* %2, align 4, !dbg !11750
  call void @llvm.dbg.value(metadata i32 %19, metadata !11732, metadata !DIExpression()), !dbg !11735
  %20 = load i32, i32* %3, align 4, !dbg !11751
  call void @llvm.dbg.value(metadata i32 %20, metadata !11733, metadata !DIExpression()), !dbg !11735
  call void @llvm.dbg.value(metadata i32* %4, metadata !11734, metadata !DIExpression(DW_OP_deref)), !dbg !11735
  %21 = call i32 @hal_gpt_get_duration_count(i32 noundef %19, i32 noundef %20, i32* noundef nonnull %4) #22, !dbg !11752
  %22 = load i32, i32* %4, align 4, !dbg !11753
  call void @llvm.dbg.value(metadata i32 %22, metadata !11734, metadata !DIExpression()), !dbg !11735
  %23 = icmp ugt i32 %22, 1499999, !dbg !11755
  br i1 %23, label %24, label %11, !dbg !11756, !llvm.loop !11757

24:                                               ; preds = %17
  call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @__FUNCTION__.sd_wait_card_not_busy, i32 0, i32 0), i32 noundef 614, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.2.158, i32 0, i32 0)) #22, !dbg !11759
  br label %42, !dbg !11761

25:                                               ; preds = %11, %15
  call void @llvm.dbg.value(metadata i32* %2, metadata !11732, metadata !DIExpression(DW_OP_deref)), !dbg !11735
  %26 = call i32 @hal_gpt_get_free_run_count(i32 noundef 1, i32* noundef nonnull %2) #22, !dbg !11762
  br label %27, !dbg !11763

27:                                               ; preds = %31, %25
  %28 = load volatile i32, i32* %10, align 4, !dbg !11764
  %29 = and i32 %28, 1, !dbg !11765
  %30 = icmp eq i32 %29, 0, !dbg !11763
  br i1 %30, label %39, label %31, !dbg !11763

31:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32* %3, metadata !11733, metadata !DIExpression(DW_OP_deref)), !dbg !11735
  %32 = call i32 @hal_gpt_get_free_run_count(i32 noundef 1, i32* noundef nonnull %3) #22, !dbg !11766
  %33 = load i32, i32* %2, align 4, !dbg !11768
  call void @llvm.dbg.value(metadata i32 %33, metadata !11732, metadata !DIExpression()), !dbg !11735
  %34 = load i32, i32* %3, align 4, !dbg !11769
  call void @llvm.dbg.value(metadata i32 %34, metadata !11733, metadata !DIExpression()), !dbg !11735
  call void @llvm.dbg.value(metadata i32* %4, metadata !11734, metadata !DIExpression(DW_OP_deref)), !dbg !11735
  %35 = call i32 @hal_gpt_get_duration_count(i32 noundef %33, i32 noundef %34, i32* noundef nonnull %4) #22, !dbg !11770
  %36 = load i32, i32* %4, align 4, !dbg !11771
  call void @llvm.dbg.value(metadata i32 %36, metadata !11734, metadata !DIExpression()), !dbg !11735
  %37 = icmp ugt i32 %36, 1499999, !dbg !11773
  br i1 %37, label %38, label %27, !dbg !11774, !llvm.loop !11775

38:                                               ; preds = %31
  call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @__FUNCTION__.sd_wait_card_not_busy, i32 0, i32 0), i32 noundef 624, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.3.159, i32 0, i32 0)) #22, !dbg !11777
  br label %42, !dbg !11779

39:                                               ; preds = %27
  %40 = select i1 %8, i32* inttoptr (i32 -1610481656 to i32*), i32* inttoptr (i32 -1610416120 to i32*), !dbg !11780
  %41 = load volatile i32, i32* %40, align 8, !dbg !11780
  br label %42, !dbg !11781

42:                                               ; preds = %39, %38, %24
  %43 = phi i32 [ -11, %24 ], [ -11, %38 ], [ 0, %39 ], !dbg !11735
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #24, !dbg !11782
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #24, !dbg !11782
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !11782
  ret i32 %43, !dbg !11782
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sd_select_card(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !11783 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11785, metadata !DIExpression()), !dbg !11788
  call void @llvm.dbg.value(metadata i32 %1, metadata !11786, metadata !DIExpression()), !dbg !11788
  %3 = shl i32 %1, 16, !dbg !11789
  %4 = tail call i32 @sd_send_command(i32 noundef %0, i32 noundef 903, i32 noundef %3) #23, !dbg !11790
  call void @llvm.dbg.value(metadata i32 %4, metadata !11787, metadata !DIExpression()), !dbg !11788
  %5 = icmp eq i32 %4, 0, !dbg !11791
  br i1 %5, label %6, label %11, !dbg !11793

6:                                                ; preds = %2
  %7 = tail call i32 @sd_wait_card_not_busy(i32 noundef %0) #23, !dbg !11794
  call void @llvm.dbg.value(metadata i32 %7, metadata !11787, metadata !DIExpression()), !dbg !11788
  %8 = icmp eq i32 %7, 0, !dbg !11795
  br i1 %8, label %9, label %11, !dbg !11797

9:                                                ; preds = %6
  %10 = tail call i32 @sd_check_card_status(i32 noundef %0) #23, !dbg !11798
  call void @llvm.dbg.value(metadata i32 %10, metadata !11787, metadata !DIExpression()), !dbg !11788
  br label %11, !dbg !11788

11:                                               ; preds = %9, %6, %2
  %12 = phi i32 [ %4, %2 ], [ %7, %6 ], [ %10, %9 ], !dbg !11788
  ret i32 %12, !dbg !11799
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sd_set_block_length(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !11800 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11802, metadata !DIExpression()), !dbg !11806
  call void @llvm.dbg.value(metadata i32 %1, metadata !11803, metadata !DIExpression()), !dbg !11806
  %3 = icmp eq i32 %0, 0, !dbg !11807
  call void @llvm.dbg.value(metadata %struct.msdc_register_t* undef, metadata !11805, metadata !DIExpression()), !dbg !11806
  %4 = icmp ugt i32 %1, 2048, !dbg !11808
  br i1 %4, label %16, label %5, !dbg !11810

5:                                                ; preds = %2
  %6 = tail call i32 @sd_send_command(i32 noundef %0, i32 noundef 144, i32 noundef %1) #23, !dbg !11811
  call void @llvm.dbg.value(metadata i32 %6, metadata !11804, metadata !DIExpression()), !dbg !11806
  %7 = icmp eq i32 %6, 0, !dbg !11812
  br i1 %7, label %8, label %16, !dbg !11814

8:                                                ; preds = %5
  %9 = tail call i32 @sd_check_card_status(i32 noundef %0) #23, !dbg !11815
  call void @llvm.dbg.value(metadata i32 %9, metadata !11804, metadata !DIExpression()), !dbg !11806
  %10 = icmp eq i32 %9, 0, !dbg !11816
  br i1 %10, label %11, label %16, !dbg !11818

11:                                               ; preds = %8
  store i32 %1, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 1), align 4, !dbg !11819
  %12 = select i1 %3, i32* inttoptr (i32 -1610481632 to i32*), i32* inttoptr (i32 -1610416096 to i32*), !dbg !11820
  %13 = load volatile i32, i32* %12, align 32, !dbg !11820
  %14 = and i32 %13, -4096, !dbg !11821
  %15 = or i32 %14, %1, !dbg !11822
  store volatile i32 %15, i32* %12, align 32, !dbg !11823
  br label %16, !dbg !11824

16:                                               ; preds = %8, %5, %2, %11
  %17 = phi i32 [ 0, %11 ], [ -6, %2 ], [ %6, %5 ], [ %9, %8 ], !dbg !11806
  ret i32 %17, !dbg !11825
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sd_analysis_scr(i32 %0, i32* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !11826 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !11830, metadata !DIExpression()), !dbg !11833
  call void @llvm.dbg.value(metadata i32* %1, metadata !11831, metadata !DIExpression()), !dbg !11833
  %3 = bitcast i32* %1 to i8*, !dbg !11834
  call void @llvm.dbg.value(metadata i8* %3, metadata !11832, metadata !DIExpression()), !dbg !11833
  tail call void @sd_get_bit_field_value(i8* noundef bitcast (i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 5, i32 3) to i8*), i8* noundef %3, i16 noundef zeroext 0, i16 noundef zeroext 4) #23, !dbg !11835
  %4 = getelementptr inbounds i8, i8* %3, i32 1, !dbg !11836
  tail call void @sd_get_bit_field_value(i8* noundef getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 5, i32 0), i8* noundef nonnull %4, i16 noundef zeroext 7, i16 noundef zeroext 1) #23, !dbg !11837
  tail call void @sd_get_bit_field_value(i8* noundef getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 5, i32 1), i8* noundef nonnull %4, i16 noundef zeroext 4, i16 noundef zeroext 3) #23, !dbg !11838
  tail call void @sd_get_bit_field_value(i8* noundef getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 5, i32 2), i8* noundef nonnull %4, i16 noundef zeroext 0, i16 noundef zeroext 4) #23, !dbg !11839
  ret i32 0, !dbg !11840
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @mmc_switch(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !11841 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11843, metadata !DIExpression()), !dbg !11849
  call void @llvm.dbg.value(metadata i32 %1, metadata !11844, metadata !DIExpression()), !dbg !11849
  %3 = icmp eq i32 %0, 0, !dbg !11850
  call void @llvm.dbg.value(metadata %struct.msdc_register_t* undef, metadata !11847, metadata !DIExpression()), !dbg !11849
  %4 = tail call i32 @sd_send_command(i32 noundef %0, i32 noundef 902, i32 noundef %1) #23, !dbg !11851
  call void @llvm.dbg.value(metadata i32 %4, metadata !11845, metadata !DIExpression()), !dbg !11849
  %5 = icmp eq i32 %4, 0, !dbg !11852
  br i1 %5, label %6, label %28, !dbg !11854

6:                                                ; preds = %2
  %7 = tail call i32 @sd_wait_card_not_busy(i32 noundef %0) #23, !dbg !11855
  call void @llvm.dbg.value(metadata i32 %7, metadata !11845, metadata !DIExpression()), !dbg !11849
  %8 = icmp eq i32 %7, 0, !dbg !11856
  br i1 %8, label %9, label %28, !dbg !11858

9:                                                ; preds = %6
  %10 = load i32, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 6), align 8, !dbg !11859
  %11 = shl i32 %10, 16, !dbg !11860
  %12 = tail call i32 @sd_send_command(i32 noundef %0, i32 noundef 141, i32 noundef %11) #23, !dbg !11861
  call void @llvm.dbg.value(metadata i32 %12, metadata !11845, metadata !DIExpression()), !dbg !11849
  %13 = icmp eq i32 %12, 0, !dbg !11862
  br i1 %13, label %14, label %28, !dbg !11864

14:                                               ; preds = %9
  %15 = tail call i32 @sd_check_card_status(i32 noundef %0) #23, !dbg !11865
  call void @llvm.dbg.value(metadata i32 %15, metadata !11845, metadata !DIExpression()), !dbg !11849
  %16 = icmp eq i32 %15, 0, !dbg !11866
  br i1 %16, label %17, label %28, !dbg !11868

17:                                               ; preds = %14
  %18 = select i1 %3, i32* inttoptr (i32 -1610481616 to i32*), i32* inttoptr (i32 -1610416080 to i32*), !dbg !11869
  %19 = load volatile i32, i32* %18, align 16, !dbg !11869
  call void @llvm.dbg.value(metadata i32 %19, metadata !11846, metadata !DIExpression()), !dbg !11849
  %20 = and i32 %19, 128, !dbg !11870
  %21 = icmp eq i32 %20, 0, !dbg !11870
  br i1 %21, label %22, label %28, !dbg !11872

22:                                               ; preds = %17
  %23 = tail call i32 @sd_set_block_length(i32 noundef %0, i32 noundef 512) #23, !dbg !11873
  call void @llvm.dbg.value(metadata i32 %23, metadata !11845, metadata !DIExpression()), !dbg !11849
  %24 = icmp eq i32 %23, 0, !dbg !11874
  br i1 %24, label %25, label %30, !dbg !11876

25:                                               ; preds = %22
  %26 = tail call i32 @mmc_get_extended_csd(i32 noundef %0) #23, !dbg !11877
  call void @llvm.dbg.value(metadata i32 %26, metadata !11845, metadata !DIExpression()), !dbg !11849
  %27 = icmp eq i32 %26, 0, !dbg !11878
  br i1 %27, label %28, label %30, !dbg !11880

28:                                               ; preds = %2, %6, %9, %14, %17, %25
  %29 = phi i32 [ 0, %25 ], [ %4, %2 ], [ %7, %6 ], [ %12, %9 ], [ %15, %14 ], [ -32, %17 ]
  tail call void @msdc_reset(i32 noundef %0) #22, !dbg !11849
  br label %30, !dbg !11881

30:                                               ; preds = %28, %25, %22
  %31 = phi i32 [ %23, %22 ], [ %26, %25 ], [ %29, %28 ], !dbg !11849
  ret i32 %31, !dbg !11881
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @mmc_get_extended_csd(i32 noundef %0) local_unnamed_addr #0 !dbg !11882 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11884, metadata !DIExpression()), !dbg !11889
  call void @llvm.dbg.value(metadata i32 0, metadata !11886, metadata !DIExpression()), !dbg !11889
  %2 = icmp eq i32 %0, 0, !dbg !11890
  call void @llvm.dbg.value(metadata %struct.msdc_register_t* undef, metadata !11887, metadata !DIExpression()), !dbg !11889
  %3 = tail call i32 @sd_send_command(i32 noundef %0, i32 noundef 2184, i32 noundef 0) #23, !dbg !11891
  call void @llvm.dbg.value(metadata i32 %3, metadata !11885, metadata !DIExpression()), !dbg !11889
  %4 = icmp eq i32 %3, 0, !dbg !11892
  br i1 %4, label %5, label %27, !dbg !11894

5:                                                ; preds = %1
  %6 = tail call i32 @sd_check_card_status(i32 noundef %0) #23, !dbg !11895
  call void @llvm.dbg.value(metadata i32 %6, metadata !11885, metadata !DIExpression()), !dbg !11889
  %7 = icmp eq i32 %6, 0, !dbg !11896
  br i1 %7, label %8, label %27, !dbg !11898

8:                                                ; preds = %5
  %9 = select i1 %2, i32* inttoptr (i32 -1610481660 to i32*), i32* inttoptr (i32 -1610416124 to i32*)
  call void @llvm.dbg.value(metadata i32 0, metadata !11886, metadata !DIExpression()), !dbg !11889
  %10 = select i1 %2, i32* inttoptr (i32 -1610481648 to i32*), i32* inttoptr (i32 -1610416112 to i32*)
  br label %11, !dbg !11899

11:                                               ; preds = %8, %20
  %12 = phi i32 [ 0, %8 ], [ %21, %20 ]
  call void @llvm.dbg.value(metadata i32 %12, metadata !11886, metadata !DIExpression()), !dbg !11889
  %13 = load volatile i32, i32* %9, align 4, !dbg !11900
  %14 = and i32 %13, 240, !dbg !11903
  %15 = icmp eq i32 %14, 0, !dbg !11903
  br i1 %15, label %20, label %16, !dbg !11904

16:                                               ; preds = %11
  %17 = load volatile i32, i32* %10, align 16, !dbg !11905
  %18 = getelementptr inbounds [128 x i32], [128 x i32]* @mmc_extended_csd, i32 0, i32 %12, !dbg !11907
  store i32 %17, i32* %18, align 4, !dbg !11908
  %19 = add nuw nsw i32 %12, 1, !dbg !11909
  call void @llvm.dbg.value(metadata i32 %19, metadata !11886, metadata !DIExpression()), !dbg !11889
  br label %20, !dbg !11910

20:                                               ; preds = %16, %11
  %21 = phi i32 [ %19, %16 ], [ %12, %11 ], !dbg !11889
  call void @llvm.dbg.value(metadata i32 %21, metadata !11886, metadata !DIExpression()), !dbg !11889
  %22 = icmp ult i32 %21, 128, !dbg !11911
  br i1 %22, label %11, label %23, !dbg !11899, !llvm.loop !11912

23:                                               ; preds = %20
  %24 = tail call i32 @sd_wait_data_ready(i32 noundef %0) #23, !dbg !11914
  call void @llvm.dbg.value(metadata i32 %24, metadata !11885, metadata !DIExpression()), !dbg !11889
  %25 = icmp eq i32 %24, 0, !dbg !11915
  br i1 %25, label %26, label %27, !dbg !11917

26:                                               ; preds = %23
  tail call void @msdc_reset(i32 noundef %0) #22, !dbg !11918
  store %struct.extended_csd_information_t* bitcast ([128 x i32]* @mmc_extended_csd to %struct.extended_csd_information_t*), %struct.extended_csd_information_t** getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 3, i32 23), align 8, !dbg !11919
  br label %29, !dbg !11920

27:                                               ; preds = %23, %5, %1
  %28 = phi i32 [ %3, %1 ], [ %6, %5 ], [ %24, %23 ], !dbg !11889
  call void @llvm.dbg.value(metadata i32 %28, metadata !11885, metadata !DIExpression()), !dbg !11889
  call void @llvm.dbg.label(metadata !11888), !dbg !11921
  tail call void @msdc_reset(i32 noundef %0) #22, !dbg !11922
  br label %29, !dbg !11923

29:                                               ; preds = %27, %26
  %30 = phi i32 [ %28, %27 ], [ 0, %26 ], !dbg !11889
  ret i32 %30, !dbg !11924
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sd_get_scr(i32 noundef %0) local_unnamed_addr #0 !dbg !11925 {
  %2 = alloca [2 x i32], align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !11927, metadata !DIExpression()), !dbg !11932
  call void @llvm.dbg.value(metadata i32 0, metadata !11929, metadata !DIExpression()), !dbg !11932
  %3 = bitcast [2 x i32]* %2 to i8*, !dbg !11933
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #24, !dbg !11933
  call void @llvm.dbg.declare(metadata [2 x i32]* %2, metadata !11930, metadata !DIExpression()), !dbg !11934
  %4 = icmp eq i32 %0, 0, !dbg !11935
  call void @llvm.dbg.value(metadata %struct.msdc_register_t* undef, metadata !11931, metadata !DIExpression()), !dbg !11932
  %5 = tail call i32 @sd_set_block_length(i32 noundef %0, i32 noundef 8) #23, !dbg !11936
  call void @llvm.dbg.value(metadata i32 %5, metadata !11928, metadata !DIExpression()), !dbg !11932
  %6 = icmp eq i32 %5, 0, !dbg !11937
  br i1 %6, label %7, label %38, !dbg !11939

7:                                                ; preds = %1
  %8 = load i32, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 6), align 8, !dbg !11940
  %9 = tail call i32 @sd_send_command55(i32 noundef %0, i32 noundef %8) #23, !dbg !11941
  call void @llvm.dbg.value(metadata i32 %9, metadata !11928, metadata !DIExpression()), !dbg !11932
  %10 = icmp eq i32 %9, 0, !dbg !11942
  br i1 %10, label %11, label %38, !dbg !11944

11:                                               ; preds = %7
  %12 = tail call i32 @sd_send_command(i32 noundef %0, i32 noundef 2227, i32 noundef 0) #23, !dbg !11945
  call void @llvm.dbg.value(metadata i32 %12, metadata !11928, metadata !DIExpression()), !dbg !11932
  %13 = icmp eq i32 %12, 0, !dbg !11946
  br i1 %13, label %14, label %38, !dbg !11948

14:                                               ; preds = %11
  %15 = tail call i32 @sd_check_card_status(i32 noundef %0) #23, !dbg !11949
  call void @llvm.dbg.value(metadata i32 %15, metadata !11928, metadata !DIExpression()), !dbg !11932
  %16 = icmp eq i32 %15, 0, !dbg !11950
  br i1 %16, label %17, label %38, !dbg !11952

17:                                               ; preds = %14
  %18 = select i1 %4, i32* inttoptr (i32 -1610481660 to i32*), i32* inttoptr (i32 -1610416124 to i32*)
  call void @llvm.dbg.value(metadata i32 0, metadata !11929, metadata !DIExpression()), !dbg !11932
  %19 = select i1 %4, i32* inttoptr (i32 -1610481648 to i32*), i32* inttoptr (i32 -1610416112 to i32*)
  br label %20, !dbg !11953

20:                                               ; preds = %17, %29
  %21 = phi i32 [ 0, %17 ], [ %30, %29 ]
  call void @llvm.dbg.value(metadata i32 %21, metadata !11929, metadata !DIExpression()), !dbg !11932
  %22 = load volatile i32, i32* %18, align 4, !dbg !11954
  %23 = and i32 %22, 4, !dbg !11957
  %24 = icmp eq i32 %23, 0, !dbg !11957
  br i1 %24, label %29, label %25, !dbg !11958

25:                                               ; preds = %20
  %26 = load volatile i32, i32* %19, align 16, !dbg !11959
  %27 = getelementptr inbounds [2 x i32], [2 x i32]* %2, i32 0, i32 %21, !dbg !11961
  store i32 %26, i32* %27, align 4, !dbg !11962
  %28 = add nuw nsw i32 %21, 1, !dbg !11963
  call void @llvm.dbg.value(metadata i32 %28, metadata !11929, metadata !DIExpression()), !dbg !11932
  br label %29, !dbg !11964

29:                                               ; preds = %25, %20
  %30 = phi i32 [ %28, %25 ], [ %21, %20 ], !dbg !11932
  call void @llvm.dbg.value(metadata i32 %30, metadata !11929, metadata !DIExpression()), !dbg !11932
  %31 = icmp ult i32 %30, 2, !dbg !11965
  br i1 %31, label %20, label %32, !dbg !11953, !llvm.loop !11966

32:                                               ; preds = %29
  %33 = tail call i32 @sd_wait_data_ready(i32 noundef %0) #23, !dbg !11968
  call void @llvm.dbg.value(metadata i32 %33, metadata !11928, metadata !DIExpression()), !dbg !11932
  %34 = icmp eq i32 %33, 0, !dbg !11969
  br i1 %34, label %35, label %38, !dbg !11971

35:                                               ; preds = %32
  %36 = getelementptr inbounds [2 x i32], [2 x i32]* %2, i32 0, i32 0, !dbg !11972
  %37 = call i32 @sd_analysis_scr(i32 undef, i32* noundef nonnull %36) #23, !dbg !11973
  tail call void @msdc_reset(i32 noundef %0) #22, !dbg !11974
  br label %38, !dbg !11975

38:                                               ; preds = %32, %14, %11, %7, %1, %35
  %39 = phi i32 [ 0, %35 ], [ %5, %1 ], [ %9, %7 ], [ %12, %11 ], [ %15, %14 ], [ %33, %32 ], !dbg !11932
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #24, !dbg !11976
  ret i32 %39, !dbg !11976
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @sd_analysis_command6_switch_status(%struct.sd_command6_switch_status_t* nocapture noundef writeonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #7 !dbg !11977 {
  call void @llvm.dbg.value(metadata %struct.sd_command6_switch_status_t* %0, metadata !11990, metadata !DIExpression()), !dbg !11992
  call void @llvm.dbg.value(metadata i8* %1, metadata !11991, metadata !DIExpression()), !dbg !11992
  %3 = load i8, i8* %1, align 1, !dbg !11993
  %4 = zext i8 %3 to i16, !dbg !11994
  %5 = shl nuw i16 %4, 8, !dbg !11995
  %6 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !11996
  %7 = load i8, i8* %6, align 1, !dbg !11997
  %8 = zext i8 %7 to i16, !dbg !11998
  %9 = or i16 %5, %8, !dbg !11999
  %10 = getelementptr inbounds %struct.sd_command6_switch_status_t, %struct.sd_command6_switch_status_t* %0, i32 0, i32 0, !dbg !12000
  store i16 %9, i16* %10, align 2, !dbg !12001
  %11 = getelementptr inbounds i8, i8* %1, i32 12, !dbg !12002
  %12 = load i8, i8* %11, align 1, !dbg !12003
  %13 = zext i8 %12 to i16, !dbg !12004
  %14 = shl nuw i16 %13, 8, !dbg !12005
  %15 = getelementptr inbounds i8, i8* %1, i32 13, !dbg !12006
  %16 = load i8, i8* %15, align 1, !dbg !12007
  %17 = zext i8 %16 to i16, !dbg !12008
  %18 = or i16 %14, %17, !dbg !12009
  %19 = getelementptr inbounds %struct.sd_command6_switch_status_t, %struct.sd_command6_switch_status_t* %0, i32 0, i32 1, !dbg !12010
  store i16 %18, i16* %19, align 2, !dbg !12011
  %20 = getelementptr inbounds i8, i8* %1, i32 16, !dbg !12012
  %21 = load i8, i8* %20, align 1, !dbg !12013
  %22 = and i8 %21, 15, !dbg !12014
  %23 = getelementptr inbounds %struct.sd_command6_switch_status_t, %struct.sd_command6_switch_status_t* %0, i32 0, i32 3, !dbg !12015
  store i8 %22, i8* %23, align 2, !dbg !12016
  %24 = getelementptr inbounds i8, i8* %1, i32 17, !dbg !12017
  %25 = load i8, i8* %24, align 1, !dbg !12018
  %26 = getelementptr inbounds %struct.sd_command6_switch_status_t, %struct.sd_command6_switch_status_t* %0, i32 0, i32 4, !dbg !12019
  store i8 %25, i8* %26, align 1, !dbg !12020
  %27 = getelementptr inbounds i8, i8* %1, i32 28, !dbg !12021
  %28 = load i8, i8* %27, align 1, !dbg !12022
  %29 = zext i8 %28 to i16, !dbg !12023
  %30 = shl nuw i16 %29, 8, !dbg !12024
  %31 = getelementptr inbounds i8, i8* %1, i32 29, !dbg !12025
  %32 = load i8, i8* %31, align 1, !dbg !12026
  %33 = zext i8 %32 to i16, !dbg !12027
  %34 = or i16 %30, %33, !dbg !12028
  %35 = getelementptr inbounds %struct.sd_command6_switch_status_t, %struct.sd_command6_switch_status_t* %0, i32 0, i32 2, !dbg !12029
  store i16 %34, i16* %35, align 2, !dbg !12030
  ret void, !dbg !12031
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sd_query_switch_high_speed(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !12032 {
  %3 = alloca [16 x i32], align 4
  %4 = alloca %struct.sd_command6_switch_status_t, align 2
  call void @llvm.dbg.value(metadata i32 %0, metadata !12034, metadata !DIExpression()), !dbg !12043
  call void @llvm.dbg.value(metadata i32 %1, metadata !12035, metadata !DIExpression()), !dbg !12043
  %5 = bitcast [16 x i32]* %3 to i8*, !dbg !12044
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %5) #24, !dbg !12044
  call void @llvm.dbg.declare(metadata [16 x i32]* %3, metadata !12037, metadata !DIExpression()), !dbg !12045
  call void @llvm.dbg.value(metadata i32 0, metadata !12039, metadata !DIExpression()), !dbg !12043
  call void @llvm.dbg.value(metadata i32 0, metadata !12040, metadata !DIExpression()), !dbg !12043
  %6 = bitcast %struct.sd_command6_switch_status_t* %4 to i8*, !dbg !12046
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #24, !dbg !12046
  call void @llvm.dbg.declare(metadata %struct.sd_command6_switch_status_t* %4, metadata !12041, metadata !DIExpression()), !dbg !12047
  %7 = icmp eq i32 %0, 0, !dbg !12048
  call void @llvm.dbg.value(metadata %struct.msdc_register_t* undef, metadata !12042, metadata !DIExpression()), !dbg !12043
  %8 = select i1 %7, i32* inttoptr (i32 -1610481632 to i32*), i32* inttoptr (i32 -1610416096 to i32*), !dbg !12049
  %9 = load volatile i32, i32* %8, align 32, !dbg !12049
  %10 = and i32 %9, -4096, !dbg !12050
  %11 = or i32 %10, 64, !dbg !12051
  store volatile i32 %11, i32* %8, align 32, !dbg !12052
  %12 = select i1 %7, i32* inttoptr (i32 -1610481664 to i32*), i32* inttoptr (i32 -1610416128 to i32*), !dbg !12053
  %13 = load volatile i32, i32* %12, align 65536, !dbg !12053
  %14 = and i32 %13, -251658241, !dbg !12054
  %15 = or i32 %14, 16777216, !dbg !12055
  store volatile i32 %15, i32* %12, align 65536, !dbg !12056
  %16 = select i1 %7, i32* inttoptr (i32 -1610481644 to i32*), i32* inttoptr (i32 -1610416108 to i32*), !dbg !12057
  %17 = load volatile i32, i32* %16, align 4, !dbg !12057
  %18 = and i32 %17, -769, !dbg !12058
  store volatile i32 %18, i32* %16, align 4, !dbg !12059
  %19 = tail call i32 @sd_send_command(i32 noundef %0, i32 noundef 2182, i32 noundef %1) #23, !dbg !12060
  call void @llvm.dbg.value(metadata i32 %19, metadata !12036, metadata !DIExpression()), !dbg !12043
  %20 = icmp eq i32 %19, 0, !dbg !12061
  br i1 %20, label %21, label %62, !dbg !12063

21:                                               ; preds = %2
  %22 = tail call i32 @sd_check_card_status(i32 noundef %0) #23, !dbg !12064
  call void @llvm.dbg.value(metadata i32 %22, metadata !12036, metadata !DIExpression()), !dbg !12043
  %23 = icmp eq i32 %22, 0, !dbg !12065
  br i1 %23, label %24, label %62, !dbg !12067

24:                                               ; preds = %21
  %25 = select i1 %7, i32* inttoptr (i32 -1610481660 to i32*), i32* inttoptr (i32 -1610416124 to i32*)
  call void @llvm.dbg.value(metadata i32 0, metadata !12039, metadata !DIExpression()), !dbg !12043
  %26 = select i1 %7, i32* inttoptr (i32 -1610481648 to i32*), i32* inttoptr (i32 -1610416112 to i32*)
  br label %27, !dbg !12068

27:                                               ; preds = %24, %36
  %28 = phi i32 [ 0, %24 ], [ %37, %36 ]
  call void @llvm.dbg.value(metadata i32 %28, metadata !12039, metadata !DIExpression()), !dbg !12043
  %29 = load volatile i32, i32* %25, align 4, !dbg !12069
  %30 = and i32 %29, 4, !dbg !12072
  %31 = icmp eq i32 %30, 0, !dbg !12072
  br i1 %31, label %36, label %32, !dbg !12073

32:                                               ; preds = %27
  %33 = load volatile i32, i32* %26, align 16, !dbg !12074
  %34 = getelementptr inbounds [16 x i32], [16 x i32]* %3, i32 0, i32 %28, !dbg !12076
  store i32 %33, i32* %34, align 4, !dbg !12077
  %35 = add nuw nsw i32 %28, 1, !dbg !12078
  call void @llvm.dbg.value(metadata i32 %35, metadata !12039, metadata !DIExpression()), !dbg !12043
  br label %36, !dbg !12079

36:                                               ; preds = %32, %27
  %37 = phi i32 [ %35, %32 ], [ %28, %27 ], !dbg !12043
  call void @llvm.dbg.value(metadata i32 %37, metadata !12039, metadata !DIExpression()), !dbg !12043
  %38 = icmp ult i32 %37, 16, !dbg !12080
  br i1 %38, label %27, label %39, !dbg !12068, !llvm.loop !12081

39:                                               ; preds = %36
  call void @sd_analysis_command6_switch_status(%struct.sd_command6_switch_status_t* noundef nonnull %4, i8* noundef nonnull %5) #23, !dbg !12083
  %40 = getelementptr inbounds %struct.sd_command6_switch_status_t, %struct.sd_command6_switch_status_t* %4, i32 0, i32 0, !dbg !12084
  %41 = load i16, i16* %40, align 2, !dbg !12084
  %42 = icmp eq i16 %41, 0, !dbg !12086
  br i1 %42, label %62, label %43, !dbg !12087

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.sd_command6_switch_status_t, %struct.sd_command6_switch_status_t* %4, i32 0, i32 3, !dbg !12088
  %45 = load i8, i8* %44, align 2, !dbg !12088
  switch i8 %45, label %51 [
    i8 1, label %46
    i8 15, label %62
  ], !dbg !12090

46:                                               ; preds = %43
  %47 = getelementptr inbounds %struct.sd_command6_switch_status_t, %struct.sd_command6_switch_status_t* %4, i32 0, i32 2, !dbg !12091
  %48 = load i16, i16* %47, align 2, !dbg !12091
  %49 = and i16 %48, 2, !dbg !12092
  %50 = icmp eq i16 %49, 0, !dbg !12093
  br i1 %50, label %62, label %51, !dbg !12094

51:                                               ; preds = %43, %46
  %52 = getelementptr inbounds %struct.sd_command6_switch_status_t, %struct.sd_command6_switch_status_t* %4, i32 0, i32 1, !dbg !12095
  %53 = load i16, i16* %52, align 2, !dbg !12095
  %54 = and i16 %53, 2, !dbg !12097
  %55 = icmp eq i16 %54, 0, !dbg !12097
  br i1 %55, label %62, label %56, !dbg !12098

56:                                               ; preds = %51
  %57 = getelementptr inbounds %struct.sd_command6_switch_status_t, %struct.sd_command6_switch_status_t* %4, i32 0, i32 2, !dbg !12099
  %58 = load i16, i16* %57, align 2, !dbg !12099
  %59 = and i16 %58, 2, !dbg !12101
  %60 = icmp eq i16 %59, 0, !dbg !12101
  %61 = select i1 %60, i32 -35, i32 -33, !dbg !12043
  br label %62, !dbg !12043

62:                                               ; preds = %43, %56, %51, %46, %39, %21, %2
  %63 = phi i32 [ %19, %2 ], [ %22, %21 ], [ -37, %39 ], [ 0, %46 ], [ -36, %51 ], [ %61, %56 ], [ -36, %43 ], !dbg !12043
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #24, !dbg !12102
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %5) #24, !dbg !12102
  ret i32 %63, !dbg !12102
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sd_select_high_speed(i32 noundef %0) local_unnamed_addr #0 !dbg !12103 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12105, metadata !DIExpression()), !dbg !12108
  call void @llvm.dbg.value(metadata i32 1000, metadata !12107, metadata !DIExpression()), !dbg !12108
  br label %2, !dbg !12109

2:                                                ; preds = %8, %1
  %3 = phi i32 [ 1000, %1 ], [ %10, %8 ], !dbg !12108
  call void @llvm.dbg.value(metadata i32 %3, metadata !12107, metadata !DIExpression()), !dbg !12108
  %4 = tail call i32 @sd_query_switch_high_speed(i32 noundef %0, i32 noundef 16777201) #23, !dbg !12110
  call void @llvm.dbg.value(metadata i32 %4, metadata !12106, metadata !DIExpression()), !dbg !12108
  switch i32 %4, label %8 [
    i32 0, label %5
    i32 -33, label %12
  ], !dbg !12112

5:                                                ; preds = %2
  %6 = tail call i32 @sd_query_switch_high_speed(i32 noundef %0, i32 noundef -2130706447) #23, !dbg !12113
  call void @llvm.dbg.value(metadata i32 %6, metadata !12106, metadata !DIExpression()), !dbg !12108
  switch i32 %6, label %8 [
    i32 0, label %7
    i32 -33, label %12
  ], !dbg !12116

7:                                                ; preds = %5
  store volatile i8 1, i8* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 18), align 2, !dbg !12117
  br label %12, !dbg !12120

8:                                                ; preds = %2, %5
  %9 = phi i32 [ %6, %5 ], [ %4, %2 ], !dbg !12121
  call void @llvm.dbg.value(metadata i32 %9, metadata !12106, metadata !DIExpression()), !dbg !12108
  %10 = add nsw i32 %3, -1, !dbg !12122
  call void @llvm.dbg.value(metadata i32 %10, metadata !12107, metadata !DIExpression()), !dbg !12108
  %11 = icmp eq i32 %3, 0, !dbg !12123
  br i1 %11, label %12, label %2, !dbg !12123, !llvm.loop !12124

12:                                               ; preds = %2, %5, %8, %7
  %13 = phi i32 [ 0, %7 ], [ %4, %2 ], [ %6, %5 ], [ %9, %8 ], !dbg !12121
  call void @llvm.dbg.value(metadata i32 %13, metadata !12106, metadata !DIExpression()), !dbg !12108
  ret i32 %13, !dbg !12126
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @mmc_is_version_44() local_unnamed_addr #7 !dbg !12127 {
  %1 = load %struct.extended_csd_information_t*, %struct.extended_csd_information_t** getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 3, i32 23), align 8, !dbg !12128
  %2 = getelementptr inbounds %struct.extended_csd_information_t, %struct.extended_csd_information_t* %1, i32 0, i32 35, !dbg !12130
  %3 = load i8, i8* %2, align 4, !dbg !12130
  %4 = icmp ugt i8 %3, 3, !dbg !12131
  br i1 %4, label %5, label %10, !dbg !12132

5:                                                ; preds = %0
  %6 = getelementptr inbounds %struct.extended_csd_information_t, %struct.extended_csd_information_t* %1, i32 0, i32 62, !dbg !12133
  %7 = load i8, i8* %6, align 2, !dbg !12133
  %8 = icmp ne i8 %7, 0, !dbg !12136
  %9 = zext i1 %8 to i8
  br label %10

10:                                               ; preds = %0, %5
  %11 = phi i8 [ %9, %5 ], [ 0, %0 ]
  store i8 %11, i8* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 15, i32 0), align 8, !dbg !12137
  ret void, !dbg !12138
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @mmc_set_high_speed(i32 noundef %0) local_unnamed_addr #0 !dbg !12139 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12141, metadata !DIExpression()), !dbg !12144
  %2 = tail call i32 @sd_set_block_length(i32 noundef %0, i32 noundef 512) #23, !dbg !12145
  call void @llvm.dbg.value(metadata i32 %2, metadata !12142, metadata !DIExpression()), !dbg !12144
  %3 = icmp eq i32 %2, 0, !dbg !12146
  br i1 %3, label %4, label %28, !dbg !12148

4:                                                ; preds = %1
  %5 = tail call i32 @mmc_get_extended_csd(i32 noundef %0) #23, !dbg !12149
  call void @llvm.dbg.value(metadata i32 %5, metadata !12142, metadata !DIExpression()), !dbg !12144
  %6 = icmp eq i32 %5, 0, !dbg !12150
  br i1 %6, label %7, label %28, !dbg !12152

7:                                                ; preds = %4
  %8 = load i32, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 14), align 4, !dbg !12153
  %9 = icmp eq i32 %8, 4, !dbg !12155
  br i1 %9, label %10, label %16, !dbg !12156

10:                                               ; preds = %7
  %11 = load %struct.extended_csd_information_t*, %struct.extended_csd_information_t** getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 3, i32 23), align 8, !dbg !12157
  %12 = getelementptr inbounds %struct.extended_csd_information_t, %struct.extended_csd_information_t* %11, i32 0, i32 55, !dbg !12159
  %13 = load i32, i32* %12, align 4, !dbg !12159
  %14 = shl i32 %13, 9, !dbg !12160
  %15 = zext i32 %14 to i64, !dbg !12161
  store i64 %15, i64* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 3, i32 24), align 8, !dbg !12162
  br label %16, !dbg !12163

16:                                               ; preds = %10, %7
  tail call void @mmc_is_version_44() #23, !dbg !12164
  %17 = load %struct.extended_csd_information_t*, %struct.extended_csd_information_t** getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 3, i32 23), align 8, !dbg !12165
  %18 = getelementptr inbounds %struct.extended_csd_information_t, %struct.extended_csd_information_t* %17, i32 0, i32 39, !dbg !12167
  %19 = load i8, i8* %18, align 4, !dbg !12167
  %20 = zext i8 %19 to i32, !dbg !12168
  %21 = and i32 %20, 2, !dbg !12169
  %22 = icmp eq i32 %21, 0, !dbg !12169
  br i1 %22, label %23, label %26, !dbg !12170

23:                                               ; preds = %16
  %24 = and i32 %20, 1, !dbg !12171
  %25 = icmp eq i32 %24, 0, !dbg !12171
  br i1 %25, label %28, label %26, !dbg !12173

26:                                               ; preds = %23, %16
  %27 = phi i8 [ 1, %16 ], [ 0, %23 ]
  store volatile i8 %27, i8* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 18), align 2, !dbg !12174
  br label %28, !dbg !12175

28:                                               ; preds = %26, %1, %4, %23
  %29 = phi i32 [ 0, %23 ], [ %2, %1 ], [ %5, %4 ], [ 0, %26 ], !dbg !12144
  ret i32 %29, !dbg !12175
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sd_stop_transfer(i32 noundef %0) local_unnamed_addr #0 !dbg !12176 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12178, metadata !DIExpression()), !dbg !12181
  call void @llvm.dbg.value(metadata i32 0, metadata !12180, metadata !DIExpression()), !dbg !12181
  call void @llvm.dbg.value(metadata i32 undef, metadata !12179, metadata !DIExpression()), !dbg !12181
  br label %5, !dbg !12182

2:                                                ; preds = %5
  %3 = add nuw nsw i32 %6, 1, !dbg !12183
  call void @llvm.dbg.value(metadata i32 %3, metadata !12180, metadata !DIExpression()), !dbg !12181
  call void @llvm.dbg.value(metadata i32 %6, metadata !12180, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !12181
  call void @llvm.dbg.value(metadata i32 %7, metadata !12179, metadata !DIExpression()), !dbg !12181
  %4 = icmp eq i32 %3, 30, !dbg !12187
  br i1 %4, label %11, label %5, !dbg !12182, !llvm.loop !12188

5:                                                ; preds = %1, %2
  %6 = phi i32 [ 0, %1 ], [ %3, %2 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !12180, metadata !DIExpression()), !dbg !12181
  %7 = tail call i32 @sd_send_command(i32 noundef %0, i32 noundef 17292, i32 noundef 0) #23, !dbg !12190
  call void @llvm.dbg.value(metadata i32 %7, metadata !12179, metadata !DIExpression()), !dbg !12181
  %8 = icmp eq i32 %7, 0, !dbg !12191
  call void @llvm.dbg.value(metadata i32 %6, metadata !12180, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !12181
  br i1 %8, label %9, label %2, !dbg !12192

9:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 0, metadata !12179, metadata !DIExpression()), !dbg !12181
  %10 = tail call i32 @sd_wait_card_not_busy(i32 noundef %0) #23, !dbg !12193
  call void @llvm.dbg.value(metadata i32 %10, metadata !12179, metadata !DIExpression()), !dbg !12181
  br label %11, !dbg !12181

11:                                               ; preds = %2, %9
  %12 = phi i32 [ %10, %9 ], [ %7, %2 ], !dbg !12181
  ret i32 %12, !dbg !12194
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sd_get_card_status(i32 noundef %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #0 !dbg !12195 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12197, metadata !DIExpression()), !dbg !12201
  call void @llvm.dbg.value(metadata i32* %1, metadata !12198, metadata !DIExpression()), !dbg !12201
  call void @llvm.dbg.value(metadata %struct.msdc_register_t* undef, metadata !12200, metadata !DIExpression()), !dbg !12201
  %3 = load i32, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 6), align 8, !dbg !12202
  %4 = shl i32 %3, 16, !dbg !12203
  %5 = tail call i32 @sd_send_command(i32 noundef %0, i32 noundef 141, i32 noundef %4) #23, !dbg !12204
  call void @llvm.dbg.value(metadata i32 %5, metadata !12199, metadata !DIExpression()), !dbg !12201
  %6 = icmp eq i32 %5, 0, !dbg !12205
  br i1 %6, label %7, label %11, !dbg !12207

7:                                                ; preds = %2
  %8 = icmp eq i32 %0, 0, !dbg !12208
  call void @llvm.dbg.value(metadata %struct.msdc_register_t* undef, metadata !12200, metadata !DIExpression()), !dbg !12201
  %9 = select i1 %8, i32* inttoptr (i32 -1610481616 to i32*), i32* inttoptr (i32 -1610416080 to i32*), !dbg !12209
  %10 = load volatile i32, i32* %9, align 16, !dbg !12209
  store i32 %10, i32* %1, align 4, !dbg !12210
  br label %11, !dbg !12211

11:                                               ; preds = %2, %7
  ret i32 %5, !dbg !12212
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sd_send_erase_command(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !12213 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !12215, metadata !DIExpression()), !dbg !12220
  call void @llvm.dbg.value(metadata i32 %1, metadata !12216, metadata !DIExpression()), !dbg !12220
  call void @llvm.dbg.value(metadata i32 %2, metadata !12217, metadata !DIExpression()), !dbg !12220
  %5 = bitcast i32* %4 to i8*, !dbg !12221
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !12221
  %6 = icmp eq i32 %1, 934, !dbg !12222
  br i1 %6, label %10, label %7, !dbg !12224

7:                                                ; preds = %3
  %8 = tail call i32 @sd_send_command(i32 noundef %0, i32 noundef %1, i32 noundef %2) #23, !dbg !12225
  call void @llvm.dbg.value(metadata i32 %8, metadata !12218, metadata !DIExpression()), !dbg !12220
  %9 = icmp eq i32 %8, 0, !dbg !12227
  br i1 %9, label %16, label %28, !dbg !12229

10:                                               ; preds = %3
  %11 = tail call i32 @sd_send_command(i32 noundef %0, i32 noundef 934, i32 noundef 0) #23, !dbg !12230
  call void @llvm.dbg.value(metadata i32 %11, metadata !12218, metadata !DIExpression()), !dbg !12220
  %12 = icmp eq i32 %11, 0, !dbg !12232
  br i1 %12, label %13, label %28, !dbg !12234

13:                                               ; preds = %10
  %14 = tail call i32 @sd_check_card_status(i32 noundef %0) #23, !dbg !12235
  call void @llvm.dbg.value(metadata i32 %14, metadata !12218, metadata !DIExpression()), !dbg !12220
  %15 = icmp eq i32 %14, 0, !dbg !12236
  br i1 %15, label %18, label %28, !dbg !12238

16:                                               ; preds = %7
  %17 = tail call i32 @sd_check_card_status(i32 noundef %0) #23, !dbg !12235
  call void @llvm.dbg.value(metadata i32 %14, metadata !12218, metadata !DIExpression()), !dbg !12220
  br label %28, !dbg !12238

18:                                               ; preds = %13
  %19 = tail call i32 @sd_wait_card_not_busy(i32 noundef %0) #23, !dbg !12239
  call void @llvm.dbg.value(metadata i32 %19, metadata !12218, metadata !DIExpression()), !dbg !12220
  %20 = icmp eq i32 %19, 0, !dbg !12242
  br i1 %20, label %21, label %28, !dbg !12244

21:                                               ; preds = %18, %24
  call void @llvm.dbg.value(metadata i32* %4, metadata !12219, metadata !DIExpression(DW_OP_deref)), !dbg !12220
  %22 = call i32 @sd_get_card_status(i32 noundef %0, i32* noundef nonnull %4) #23, !dbg !12245
  call void @llvm.dbg.value(metadata i32 %22, metadata !12218, metadata !DIExpression()), !dbg !12220
  %23 = icmp eq i32 %22, 0, !dbg !12247
  br i1 %23, label %24, label %28, !dbg !12249

24:                                               ; preds = %21
  %25 = load i32, i32* %4, align 4, !dbg !12250
  call void @llvm.dbg.value(metadata i32 %25, metadata !12219, metadata !DIExpression()), !dbg !12220
  %26 = and i32 %25, 7680, !dbg !12251
  %27 = icmp eq i32 %26, 2048, !dbg !12251
  br i1 %27, label %28, label %21, !dbg !12252, !llvm.loop !12253

28:                                               ; preds = %24, %21, %16, %18, %13, %10, %7
  %29 = phi i32 [ %8, %7 ], [ %11, %10 ], [ %14, %13 ], [ %19, %18 ], [ %17, %16 ], [ 0, %24 ], [ %22, %21 ], !dbg !12220
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !12256
  ret i32 %29, !dbg !12256
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @sd_wait_last_block_complete(i32 noundef %0) local_unnamed_addr #2 !dbg !12257 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12259, metadata !DIExpression()), !dbg !12261
  %2 = icmp eq i32 %0, 0, !dbg !12262
  %3 = select i1 %2, i32* inttoptr (i32 -1610481520 to i32*), i32* inttoptr (i32 -1610415984 to i32*)
  %4 = select i1 %2, i32* inttoptr (i32 -1610481516 to i32*), i32* inttoptr (i32 -1610415980 to i32*)
  store volatile i32 3, i32* %3, align 16, !dbg !12264
  br label %5, !dbg !12265

5:                                                ; preds = %5, %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !12260, metadata !DIExpression()), !dbg !12261
  call void @llvm.dbg.value(metadata i32 undef, metadata !12260, metadata !DIExpression()), !dbg !12261
  %6 = load volatile i32, i32* %4, align 4, !dbg !12266
  call void @llvm.dbg.value(metadata i32 %6, metadata !12260, metadata !DIExpression()), !dbg !12261
  %7 = and i32 %6, 32505856, !dbg !12269
  %8 = icmp eq i32 %7, 25165824, !dbg !12271
  br i1 %8, label %9, label %5, !dbg !12272, !llvm.loop !12273

9:                                                ; preds = %5
  ret i32 0, !dbg !12275
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sd_latch_read_blocks(i32 noundef %0, i32* noundef writeonly %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !12276 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12280, metadata !DIExpression()), !dbg !12293
  call void @llvm.dbg.value(metadata i32* %1, metadata !12281, metadata !DIExpression()), !dbg !12293
  call void @llvm.dbg.value(metadata i32 %2, metadata !12282, metadata !DIExpression()), !dbg !12293
  call void @llvm.dbg.value(metadata i32 %3, metadata !12283, metadata !DIExpression()), !dbg !12293
  call void @llvm.dbg.value(metadata i32 0, metadata !12286, metadata !DIExpression()), !dbg !12293
  call void @llvm.dbg.value(metadata i64 0, metadata !12287, metadata !DIExpression()), !dbg !12293
  %5 = icmp eq i32* %1, null, !dbg !12294
  br i1 %5, label %6, label %7, !dbg !12296

6:                                                ; preds = %4
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__FUNCTION__.sd_latch_read_blocks, i32 0, i32 0), i32 noundef 1122, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4.180, i32 0, i32 0)) #22, !dbg !12297
  br label %92, !dbg !12299

7:                                                ; preds = %4
  %8 = icmp eq i32 %0, 0, !dbg !12300
  call void @llvm.dbg.value(metadata %struct.msdc_register_t* undef, metadata !12290, metadata !DIExpression()), !dbg !12293
  %9 = select i1 %8, i32* inttoptr (i32 -1610481664 to i32*), i32* inttoptr (i32 -1610416128 to i32*), !dbg !12301
  %10 = load volatile i32, i32* %9, align 65536, !dbg !12301
  %11 = and i32 %10, -251658241, !dbg !12302
  %12 = or i32 %11, 16777216, !dbg !12303
  store volatile i32 %12, i32* %9, align 65536, !dbg !12304
  %13 = select i1 %8, i32* inttoptr (i32 -1610481644 to i32*), i32* inttoptr (i32 -1610416108 to i32*), !dbg !12305
  %14 = load volatile i32, i32* %13, align 4, !dbg !12305
  %15 = and i32 %14, -769, !dbg !12306
  store volatile i32 %15, i32* %13, align 4, !dbg !12307
  %16 = select i1 %8, i32* inttoptr (i32 -1610481596 to i32*), i32* inttoptr (i32 -1610416060 to i32*), !dbg !12308
  %17 = load volatile i32, i32* %16, align 4, !dbg !12308
  %18 = load i32, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 14), align 4, !dbg !12309
  %19 = add i32 %18, -3, !dbg !12311
  %20 = icmp ult i32 %19, 2, !dbg !12311
  %21 = icmp eq i32 %18, 1, !dbg !12311
  %22 = load i32, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 3, i32 6), align 8, !dbg !12311
  %23 = select i1 %21, i32 %22, i32 512, !dbg !12311
  %24 = select i1 %20, i32 1, i32 %23, !dbg !12311
  call void @llvm.dbg.value(metadata i32 %24, metadata !12289, metadata !DIExpression()), !dbg !12293
  %25 = icmp ugt i32 %3, 1, !dbg !12312
  %26 = select i1 %25, i32 4242, i32 2193, !dbg !12313
  call void @llvm.dbg.value(metadata i32 %26, metadata !12285, metadata !DIExpression()), !dbg !12293
  %27 = mul i32 %24, %2, !dbg !12314
  %28 = tail call i32 @sd_send_command(i32 noundef %0, i32 noundef %26, i32 noundef %27) #23, !dbg !12315
  call void @llvm.dbg.value(metadata i32 %28, metadata !12284, metadata !DIExpression()), !dbg !12293
  %29 = icmp eq i32 %28, 0, !dbg !12316
  br i1 %29, label %30, label %86, !dbg !12318

30:                                               ; preds = %7
  %31 = tail call i32 @sd_check_card_status(i32 noundef %0) #23, !dbg !12319
  call void @llvm.dbg.value(metadata i32 %31, metadata !12284, metadata !DIExpression()), !dbg !12293
  %32 = icmp eq i32 %31, 0, !dbg !12320
  br i1 %32, label %33, label %86, !dbg !12322

33:                                               ; preds = %30
  %34 = zext i32 %3 to i64, !dbg !12323
  %35 = shl nuw nsw i64 %34, 7, !dbg !12324
  call void @llvm.dbg.value(metadata i64 %35, metadata !12287, metadata !DIExpression()), !dbg !12293
  call void @llvm.dbg.value(metadata i32 0, metadata !12286, metadata !DIExpression()), !dbg !12293
  %36 = icmp eq i32 %3, 0, !dbg !12325
  br i1 %36, label %62, label %37, !dbg !12326

37:                                               ; preds = %33
  %38 = select i1 %8, i32* inttoptr (i32 -1610481660 to i32*), i32* inttoptr (i32 -1610416124 to i32*)
  %39 = select i1 %8, i32* inttoptr (i32 -1610481648 to i32*), i32* inttoptr (i32 -1610416112 to i32*)
  br label %40, !dbg !12326

40:                                               ; preds = %37, %58
  %41 = phi i32 [ 0, %37 ], [ %59, %58 ]
  call void @llvm.dbg.value(metadata i32 %41, metadata !12286, metadata !DIExpression()), !dbg !12293
  %42 = load volatile i32, i32* %16, align 4, !dbg !12327
  call void @llvm.dbg.value(metadata i32 %42, metadata !12291, metadata !DIExpression()), !dbg !12293
  %43 = icmp ult i32 %42, 2, !dbg !12329
  br i1 %43, label %50, label %44, !dbg !12331

44:                                               ; preds = %40
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__FUNCTION__.sd_latch_read_blocks, i32 0, i32 0), i32 noundef 1166, i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.5.181, i32 0, i32 0), i32 noundef %42) #22, !dbg !12332
  %45 = and i32 %42, 2, !dbg !12334
  %46 = icmp eq i32 %45, 0, !dbg !12334
  br i1 %46, label %47, label %86, !dbg !12336

47:                                               ; preds = %44
  %48 = and i32 %42, 1020, !dbg !12337
  %49 = icmp eq i32 %48, 0, !dbg !12337
  br i1 %49, label %50, label %86, !dbg !12339

50:                                               ; preds = %47, %40
  %51 = load volatile i32, i32* %38, align 4, !dbg !12340
  %52 = and i32 %51, 4, !dbg !12342
  %53 = icmp eq i32 %52, 0, !dbg !12342
  br i1 %53, label %58, label %54, !dbg !12343

54:                                               ; preds = %50
  %55 = load volatile i32, i32* %39, align 16, !dbg !12344
  %56 = getelementptr inbounds i32, i32* %1, i32 %41, !dbg !12346
  store i32 %55, i32* %56, align 4, !dbg !12347
  %57 = add i32 %41, 1, !dbg !12348
  call void @llvm.dbg.value(metadata i32 %57, metadata !12286, metadata !DIExpression()), !dbg !12293
  br label %58, !dbg !12349

58:                                               ; preds = %54, %50
  %59 = phi i32 [ %57, %54 ], [ %41, %50 ], !dbg !12293
  call void @llvm.dbg.value(metadata i32 %59, metadata !12286, metadata !DIExpression()), !dbg !12293
  %60 = zext i32 %59 to i64, !dbg !12350
  %61 = icmp ugt i64 %35, %60, !dbg !12325
  br i1 %61, label %40, label %62, !dbg !12326, !llvm.loop !12351

62:                                               ; preds = %58, %33
  tail call void @msdc_reset(i32 noundef %0) #22, !dbg !12353
  %63 = select i1 %8, i32* inttoptr (i32 -1610481656 to i32*), i32* inttoptr (i32 -1610416120 to i32*), !dbg !12354
  %64 = load volatile i32, i32* %63, align 8, !dbg !12354
  %65 = icmp eq i32 %3, 1, !dbg !12355
  br i1 %65, label %66, label %69, !dbg !12357

66:                                               ; preds = %62
  %67 = tail call i32 @sd_wait_card_not_busy(i32 noundef %0) #23, !dbg !12358
  call void @llvm.dbg.value(metadata i32 %67, metadata !12284, metadata !DIExpression()), !dbg !12293
  %68 = icmp eq i32 %67, 0, !dbg !12360
  br i1 %68, label %72, label %86, !dbg !12362

69:                                               ; preds = %62
  %70 = tail call i32 @sd_stop_transfer(i32 noundef %0) #23, !dbg !12363
  call void @llvm.dbg.value(metadata i32 %70, metadata !12284, metadata !DIExpression()), !dbg !12293
  %71 = icmp eq i32 %70, 0, !dbg !12365
  br i1 %71, label %72, label %86, !dbg !12367

72:                                               ; preds = %69, %66
  %73 = select i1 %8, i32* inttoptr (i32 -1610481616 to i32*), i32* inttoptr (i32 -1610416080 to i32*)
  br label %74, !dbg !12368

74:                                               ; preds = %81, %72
  %75 = tail call zeroext i1 @msdc_card_is_present(i32 noundef %0) #22, !dbg !12369
  br i1 %75, label %76, label %85, !dbg !12368

76:                                               ; preds = %74
  %77 = load i32, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 6), align 8, !dbg !12370
  %78 = shl i32 %77, 16, !dbg !12372
  %79 = tail call i32 @sd_send_command(i32 noundef %0, i32 noundef 141, i32 noundef %78) #23, !dbg !12373
  call void @llvm.dbg.value(metadata i32 %79, metadata !12284, metadata !DIExpression()), !dbg !12293
  %80 = icmp eq i32 %79, 0, !dbg !12374
  br i1 %80, label %81, label %86, !dbg !12376

81:                                               ; preds = %76
  %82 = load volatile i32, i32* %73, align 16, !dbg !12377
  call void @llvm.dbg.value(metadata i32 %82, metadata !12288, metadata !DIExpression()), !dbg !12293
  %83 = and i32 %82, 7936, !dbg !12378
  %84 = icmp eq i32 %83, 2304, !dbg !12378
  br i1 %84, label %85, label %74, !dbg !12378, !llvm.loop !12380

85:                                               ; preds = %81, %74
  tail call void @msdc_reset(i32 noundef %0) #22, !dbg !12382
  br label %92, !dbg !12383

86:                                               ; preds = %47, %44, %76, %69, %66, %30, %7
  %87 = phi i32 [ %28, %7 ], [ %31, %30 ], [ %67, %66 ], [ %70, %69 ], [ %79, %76 ], [ -7, %47 ], [ -10, %44 ], !dbg !12293
  call void @llvm.dbg.value(metadata i32 %87, metadata !12284, metadata !DIExpression()), !dbg !12293
  call void @llvm.dbg.label(metadata !12292), !dbg !12384
  store i32 %87, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 13), align 8, !dbg !12385
  tail call void @msdc_reset(i32 noundef %0) #22, !dbg !12386
  %88 = select i1 %8, i32* inttoptr (i32 -1610481656 to i32*), i32* inttoptr (i32 -1610416120 to i32*), !dbg !12387
  %89 = load volatile i32, i32* %88, align 8, !dbg !12387
  br i1 %25, label %90, label %92, !dbg !12388

90:                                               ; preds = %86
  %91 = tail call i32 @sd_stop_transfer(i32 noundef %0) #23, !dbg !12389
  br label %92, !dbg !12392

92:                                               ; preds = %86, %90, %85, %6
  %93 = phi i32 [ -30, %6 ], [ 0, %85 ], [ %87, %90 ], [ %87, %86 ], !dbg !12293
  ret i32 %93, !dbg !12393
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @sd_latch_command_test(i32 noundef %0) local_unnamed_addr #0 !dbg !12394 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !12398, metadata !DIExpression()), !dbg !12401
  %3 = bitcast i32* %2 to i8*, !dbg !12402
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #24, !dbg !12402
  call void @llvm.dbg.value(metadata i32* %2, metadata !12400, metadata !DIExpression(DW_OP_deref)), !dbg !12401
  %4 = call i32 @sd_get_card_status(i32 noundef %0, i32* noundef nonnull %2) #23, !dbg !12403
  call void @llvm.dbg.value(metadata i32 %4, metadata !12399, metadata !DIExpression()), !dbg !12401
  %5 = icmp eq i32 %4, 0, !dbg !12404
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #24, !dbg !12406
  ret i1 %5, !dbg !12406
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @sd_latch_data_test(i32 noundef %0) local_unnamed_addr #0 !dbg !12407 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12409, metadata !DIExpression()), !dbg !12412
  call void @llvm.dbg.value(metadata i32 0, metadata !12411, metadata !DIExpression()), !dbg !12412
  %2 = tail call i32 @sd_set_block_length(i32 noundef %0, i32 noundef 512) #23, !dbg !12413
  call void @llvm.dbg.value(metadata i32 %2, metadata !12410, metadata !DIExpression()), !dbg !12412
  %3 = icmp eq i32 %2, 0, !dbg !12414
  br i1 %3, label %7, label %12, !dbg !12416

4:                                                ; preds = %7
  %5 = add nuw nsw i32 %8, 1, !dbg !12417
  call void @llvm.dbg.value(metadata i32 %5, metadata !12411, metadata !DIExpression()), !dbg !12412
  call void @llvm.dbg.value(metadata i32 %8, metadata !12411, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !12412
  %6 = icmp eq i32 %5, 6, !dbg !12420
  br i1 %6, label %12, label %7, !dbg !12421, !llvm.loop !12422

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %5, %4 ], [ 0, %1 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !12411, metadata !DIExpression()), !dbg !12412
  %9 = tail call i32 @sd_latch_read_blocks(i32 noundef %0, i32* noundef getelementptr inbounds ([128 x i32], [128 x i32]* @sd_read_buffer, i32 0, i32 0), i32 noundef %8, i32 noundef 1) #23, !dbg !12424
  call void @llvm.dbg.value(metadata i32 %9, metadata !12410, metadata !DIExpression()), !dbg !12412
  %10 = icmp eq i32 %9, 0, !dbg !12427
  call void @llvm.dbg.value(metadata i32 %8, metadata !12411, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !12412
  br i1 %10, label %4, label %11, !dbg !12428

11:                                               ; preds = %7
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__FUNCTION__.sd_latch_data_test, i32 0, i32 0), i32 noundef 1256, i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.6.182, i32 0, i32 0), i32 noundef %9) #22, !dbg !12429
  br label %12, !dbg !12431

12:                                               ; preds = %4, %1, %11
  %13 = phi i1 [ false, %11 ], [ false, %1 ], [ true, %4 ], !dbg !12412
  ret i1 %13, !dbg !12432
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @sd_output_clock_tuning(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !12433 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12437, metadata !DIExpression()), !dbg !12442
  call void @llvm.dbg.value(metadata i32 %1, metadata !12438, metadata !DIExpression()), !dbg !12442
  call void @llvm.dbg.value(metadata i32 0, metadata !12440, metadata !DIExpression()), !dbg !12442
  %3 = tail call zeroext i8 @msdc_get_vcore_voltage() #22, !dbg !12443
  call void @llvm.dbg.value(metadata i8 %3, metadata !12439, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12442
  tail call void @SystemCoreClockUpdate() #22, !dbg !12444
  switch i8 %3, label %21 [
    i8 -1, label %6
    i8 2, label %4
  ], !dbg !12445

4:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 0, metadata !12440, metadata !DIExpression()), !dbg !12442
  %5 = load i32, i32* getelementptr inbounds ([7 x %struct.msdc_clock_t], [7 x %struct.msdc_clock_t]* @msdc_output_clock, i32 0, i32 6, i32 0), align 4
  br label %7, !dbg !12446

6:                                                ; preds = %2
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.7.185, i32 0, i32 0), i32 noundef 1275, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.sd_output_clock_tuning, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.186, i32 0, i32 0)) #25, !dbg !12449
  unreachable, !dbg !12449

7:                                                ; preds = %4, %18
  %8 = phi i32 [ 0, %4 ], [ %19, %18 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !12440, metadata !DIExpression()), !dbg !12442
  %9 = icmp eq i32 %8, 0, !dbg !12452
  br i1 %9, label %13, label %10, !dbg !12455

10:                                               ; preds = %7
  %11 = shl nuw nsw i32 %8, 1, !dbg !12456
  %12 = udiv i32 %5, %11, !dbg !12458
  br label %13

13:                                               ; preds = %7, %10
  %14 = phi i32 [ %12, %10 ], [ %5, %7 ]
  tail call void @msdc_set_output_clock(i32 noundef %0, i32 noundef %14) #22, !dbg !12459
  %15 = tail call zeroext i1 @sd_latch_command_test(i32 noundef %0) #23, !dbg !12460
  br i1 %15, label %16, label %18, !dbg !12462

16:                                               ; preds = %13
  %17 = tail call zeroext i1 @sd_latch_data_test(i32 noundef %0) #23, !dbg !12463
  br i1 %17, label %66, label %18, !dbg !12464

18:                                               ; preds = %16, %13
  %19 = add nuw nsw i32 %8, 1, !dbg !12465
  call void @llvm.dbg.value(metadata i32 %19, metadata !12440, metadata !DIExpression()), !dbg !12442
  %20 = icmp eq i32 %19, 3, !dbg !12466
  br i1 %20, label %72, label %7, !dbg !12446, !llvm.loop !12467

21:                                               ; preds = %2
  %22 = icmp eq i8 %3, 4, !dbg !12469
  %23 = load i32, i32* @SystemCoreClock, align 4
  %24 = icmp ugt i32 %23, 26000000
  %25 = select i1 %22, i1 %24, i1 false, !dbg !12471
  br i1 %25, label %26, label %37, !dbg !12471

26:                                               ; preds = %21, %34
  %27 = phi i32 [ %35, %34 ], [ 0, %21 ]
  call void @llvm.dbg.value(metadata i32 %27, metadata !12440, metadata !DIExpression()), !dbg !12442
  %28 = add nuw nsw i32 %27, 2, !dbg !12472
  %29 = getelementptr inbounds [7 x %struct.msdc_clock_t], [7 x %struct.msdc_clock_t]* @msdc_output_clock, i32 0, i32 %28, i32 0, !dbg !12475
  %30 = load i32, i32* %29, align 4, !dbg !12475
  tail call void @msdc_set_output_clock(i32 noundef %0, i32 noundef %30) #22, !dbg !12476
  %31 = tail call zeroext i1 @sd_latch_command_test(i32 noundef %0) #23, !dbg !12477
  br i1 %31, label %32, label %34, !dbg !12479

32:                                               ; preds = %26
  %33 = tail call zeroext i1 @sd_latch_data_test(i32 noundef %0) #23, !dbg !12480
  br i1 %33, label %66, label %34, !dbg !12481

34:                                               ; preds = %32, %26
  %35 = add nuw nsw i32 %27, 1, !dbg !12482
  call void @llvm.dbg.value(metadata i32 %35, metadata !12440, metadata !DIExpression()), !dbg !12442
  %36 = icmp eq i32 %35, 5, !dbg !12483
  br i1 %36, label %72, label %26, !dbg !12484, !llvm.loop !12485

37:                                               ; preds = %21
  %38 = icmp eq i8 %3, 6, !dbg !12487
  %39 = select i1 %38, i1 %24, i1 false, !dbg !12489
  br i1 %39, label %42, label %40, !dbg !12489

40:                                               ; preds = %37
  call void @llvm.dbg.value(metadata i32 0, metadata !12440, metadata !DIExpression()), !dbg !12442
  %41 = load i32, i32* getelementptr inbounds ([7 x %struct.msdc_clock_t], [7 x %struct.msdc_clock_t]* @msdc_output_clock, i32 0, i32 6, i32 0), align 4
  br label %52, !dbg !12490

42:                                               ; preds = %37, %49
  %43 = phi i32 [ %50, %49 ], [ 0, %37 ]
  call void @llvm.dbg.value(metadata i32 %43, metadata !12440, metadata !DIExpression()), !dbg !12442
  %44 = getelementptr inbounds [7 x %struct.msdc_clock_t], [7 x %struct.msdc_clock_t]* @msdc_output_clock, i32 0, i32 %43, i32 0, !dbg !12492
  %45 = load i32, i32* %44, align 4, !dbg !12492
  tail call void @msdc_set_output_clock(i32 noundef %0, i32 noundef %45) #22, !dbg !12495
  %46 = tail call zeroext i1 @sd_latch_command_test(i32 noundef %0) #23, !dbg !12496
  br i1 %46, label %47, label %49, !dbg !12498

47:                                               ; preds = %42
  %48 = tail call zeroext i1 @sd_latch_data_test(i32 noundef %0) #23, !dbg !12499
  br i1 %48, label %68, label %49, !dbg !12500

49:                                               ; preds = %47, %42
  %50 = add nuw nsw i32 %43, 1, !dbg !12501
  call void @llvm.dbg.value(metadata i32 %50, metadata !12440, metadata !DIExpression()), !dbg !12442
  %51 = icmp eq i32 %50, 7, !dbg !12502
  br i1 %51, label %72, label %42, !dbg !12503, !llvm.loop !12504

52:                                               ; preds = %40, %63
  %53 = phi i32 [ 0, %40 ], [ %64, %63 ]
  call void @llvm.dbg.value(metadata i32 %53, metadata !12440, metadata !DIExpression()), !dbg !12442
  %54 = icmp eq i32 %53, 0, !dbg !12506
  br i1 %54, label %58, label %55, !dbg !12509

55:                                               ; preds = %52
  %56 = shl nuw nsw i32 %53, 1, !dbg !12510
  %57 = udiv i32 %41, %56, !dbg !12512
  br label %58

58:                                               ; preds = %52, %55
  %59 = phi i32 [ %57, %55 ], [ %41, %52 ]
  tail call void @msdc_set_output_clock(i32 noundef %0, i32 noundef %59) #22, !dbg !12513
  %60 = tail call zeroext i1 @sd_latch_command_test(i32 noundef %0) #23, !dbg !12514
  br i1 %60, label %61, label %63, !dbg !12516

61:                                               ; preds = %58
  %62 = tail call zeroext i1 @sd_latch_data_test(i32 noundef %0) #23, !dbg !12517
  br i1 %62, label %66, label %63, !dbg !12518

63:                                               ; preds = %61, %58
  %64 = add nuw nsw i32 %53, 1, !dbg !12519
  call void @llvm.dbg.value(metadata i32 %64, metadata !12440, metadata !DIExpression()), !dbg !12442
  %65 = icmp eq i32 %64, 3, !dbg !12520
  br i1 %65, label %72, label %52, !dbg !12490, !llvm.loop !12521

66:                                               ; preds = %16, %61, %32
  %67 = phi i8* [ @dvfs_1p3v_need_sd_clock_tuning, %32 ], [ @dvfs_1p1v_need_sd_clock_tuning, %61 ], [ @dvfs_1p1v_need_sd_clock_tuning, %16 ]
  store i8 1, i8* %67, align 1, !dbg !12523
  store i32 %1, i32* @dvfs_save_sd_init_clock, align 4, !dbg !12523
  br label %68, !dbg !12524

68:                                               ; preds = %47, %66
  call void @llvm.dbg.label(metadata !12441), !dbg !12526
  %69 = tail call i32 @msdc_get_output_clock(i32 noundef %0) #22, !dbg !12524
  %70 = icmp ugt i32 %69, %1, !dbg !12527
  br i1 %70, label %71, label %72, !dbg !12528

71:                                               ; preds = %68
  tail call void @msdc_set_output_clock(i32 noundef %0, i32 noundef %1) #22, !dbg !12529
  br label %72, !dbg !12531

72:                                               ; preds = %18, %63, %49, %34, %68, %71
  %73 = phi i1 [ true, %71 ], [ true, %68 ], [ false, %34 ], [ false, %49 ], [ false, %63 ], [ false, %18 ], !dbg !12442
  ret i1 %73, !dbg !12532
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define dso_local void @sd_save_dma_interrupt_context(i32 noundef %0, %struct.sd_dma_interrupt_context_t* nocapture noundef readonly %1) local_unnamed_addr #17 !dbg !12533 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12539, metadata !DIExpression()), !dbg !12541
  call void @llvm.dbg.value(metadata %struct.sd_dma_interrupt_context_t* %1, metadata !12540, metadata !DIExpression()), !dbg !12541
  %3 = getelementptr inbounds [2 x %struct.sd_dma_interrupt_context_t], [2 x %struct.sd_dma_interrupt_context_t]* @sd_dma_interrupt_context, i32 0, i32 %0, !dbg !12542
  %4 = bitcast %struct.sd_dma_interrupt_context_t* %3 to i8*, !dbg !12543
  %5 = bitcast %struct.sd_dma_interrupt_context_t* %1 to i8*, !dbg !12543
  tail call void @llvm.memcpy.p0i8.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(36) %4, i8* noundef nonnull align 4 dereferenceable(36) %5, i32 36, i1 false), !dbg !12543
  ret void, !dbg !12544
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sd_wait_dma_interrupt_transfer_ready(i32 noundef %0) local_unnamed_addr #0 !dbg !12545 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12547, metadata !DIExpression()), !dbg !12553
  call void @llvm.dbg.value(metadata i32 0, metadata !12548, metadata !DIExpression()), !dbg !12553
  %2 = icmp eq i32 %0, 0, !dbg !12554
  call void @llvm.dbg.value(metadata %struct.msdc_register_t* undef, metadata !12551, metadata !DIExpression()), !dbg !12553
  %3 = select i1 %2, i32 1, i32 2, !dbg !12555
  call void @llvm.dbg.value(metadata i32 %3, metadata !12550, metadata !DIExpression()), !dbg !12553
  %4 = tail call i32 @sd_wait_data_ready(i32 noundef %0) #23, !dbg !12556
  call void @llvm.dbg.value(metadata i32 %4, metadata !12549, metadata !DIExpression()), !dbg !12553
  %5 = icmp eq i32 %4, 0, !dbg !12557
  br i1 %5, label %6, label %51, !dbg !12559

6:                                                ; preds = %1
  tail call void @msdc_reset(i32 noundef %0) #22, !dbg !12560
  %7 = select i1 %2, i32* inttoptr (i32 -1610481656 to i32*), i32* inttoptr (i32 -1610416120 to i32*), !dbg !12561
  %8 = load volatile i32, i32* %7, align 8, !dbg !12561
  %9 = getelementptr inbounds [2 x %struct.sd_dma_interrupt_context_t], [2 x %struct.sd_dma_interrupt_context_t]* @sd_dma_interrupt_context, i32 0, i32 %0, !dbg !12562
  %10 = getelementptr inbounds %struct.sd_dma_interrupt_context_t, %struct.sd_dma_interrupt_context_t* %9, i32 0, i32 0, !dbg !12564
  %11 = load i32, i32* %10, align 4, !dbg !12564
  %12 = icmp ugt i32 %11, 1, !dbg !12565
  br i1 %12, label %13, label %22, !dbg !12566

13:                                               ; preds = %6
  %14 = getelementptr inbounds [2 x %struct.sd_dma_interrupt_context_t], [2 x %struct.sd_dma_interrupt_context_t]* @sd_dma_interrupt_context, i32 0, i32 %0, i32 1, !dbg !12567
  %15 = load i16, i16* %14, align 4, !dbg !12567
  %16 = icmp eq i16 %15, 12441, !dbg !12570
  br i1 %16, label %17, label %19, !dbg !12571

17:                                               ; preds = %13
  %18 = tail call i32 @sd_wait_last_block_complete(i32 noundef %0) #23, !dbg !12572
  call void @llvm.dbg.value(metadata i32 0, metadata !12549, metadata !DIExpression()), !dbg !12553
  br label %19

19:                                               ; preds = %17, %13
  %20 = tail call i32 @sd_stop_transfer(i32 noundef %0) #23, !dbg !12574
  call void @llvm.dbg.value(metadata i32 %20, metadata !12549, metadata !DIExpression()), !dbg !12553
  %21 = icmp eq i32 %20, 0, !dbg !12575
  br i1 %21, label %27, label %51, !dbg !12577

22:                                               ; preds = %6
  %23 = icmp eq i32 %11, 1, !dbg !12578
  br i1 %23, label %24, label %27, !dbg !12580

24:                                               ; preds = %22
  %25 = tail call i32 @sd_wait_card_not_busy(i32 noundef %0) #23, !dbg !12581
  call void @llvm.dbg.value(metadata i32 %25, metadata !12549, metadata !DIExpression()), !dbg !12553
  %26 = icmp eq i32 %25, 0, !dbg !12583
  br i1 %26, label %27, label %51, !dbg !12585

27:                                               ; preds = %22, %24, %19
  %28 = tail call zeroext i1 @msdc_card_is_present(i32 noundef %0) #22, !dbg !12586
  br i1 %28, label %29, label %51, !dbg !12588

29:                                               ; preds = %27
  %30 = load i32, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 6), align 8, !dbg !12589
  %31 = shl i32 %30, 16, !dbg !12591
  %32 = tail call i32 @sd_send_command(i32 noundef %0, i32 noundef 141, i32 noundef %31) #23, !dbg !12592
  call void @llvm.dbg.value(metadata i32 %32, metadata !12549, metadata !DIExpression()), !dbg !12553
  %33 = icmp eq i32 %32, 0, !dbg !12593
  br i1 %33, label %34, label %51, !dbg !12595

34:                                               ; preds = %29
  %35 = select i1 %2, i32* inttoptr (i32 -1610481616 to i32*), i32* inttoptr (i32 -1610416080 to i32*), !dbg !12596
  %36 = load volatile i32, i32* %35, align 16, !dbg !12596
  call void @llvm.dbg.value(metadata i32 %36, metadata !12548, metadata !DIExpression()), !dbg !12553
  %37 = and i32 %36, 256, !dbg !12597
  %38 = icmp eq i32 %37, 0, !dbg !12597
  br i1 %38, label %46, label %39, !dbg !12599

39:                                               ; preds = %34
  %40 = load volatile i32, i32* %7, align 8, !dbg !12600
  tail call void @msdc_reset(i32 noundef %0) #22, !dbg !12602
  tail call void @msdc_dma_disable(i32 noundef %0) #22, !dbg !12603
  %41 = tail call i32 @pdma_stop(i32 noundef %3) #22, !dbg !12604
  %42 = tail call i32 @pdma_deinit(i32 noundef %3) #22, !dbg !12605
  %43 = getelementptr inbounds [2 x %struct.sd_dma_interrupt_context_t], [2 x %struct.sd_dma_interrupt_context_t]* @sd_dma_interrupt_context, i32 0, i32 %0, i32 3, !dbg !12606
  tail call void @dvfs_unlock(%struct._dvfs_lock_t* noundef nonnull %43) #22, !dbg !12607
  tail call void @msdc_set_irqmask0(i32 noundef %0, i32 noundef -1) #22, !dbg !12608
  %44 = getelementptr inbounds [0 x %struct.msdc_config_t], [0 x %struct.msdc_config_t]* bitcast ([2 x %struct.msdc_config_t]* @msdc_config to [0 x %struct.msdc_config_t]*), i32 0, i32 %0, i32 14, !dbg !12609
  %45 = load void (i32, i8*)*, void (i32, i8*)** %44, align 4, !dbg !12609
  tail call void %45(i32 noundef 0, i8* noundef null) #22, !dbg !12610
  store i32 0, i32* %10, align 4, !dbg !12611
  store volatile i8 0, i8* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 17), align 1, !dbg !12612
  br label %53, !dbg !12613

46:                                               ; preds = %34
  %47 = tail call i32 @hal_gpt_sw_get_timer(i32* noundef nonnull @sd_dma_interrupt_gpt_timer) #22, !dbg !12614
  %48 = load i32, i32* @sd_dma_interrupt_gpt_timer, align 4, !dbg !12616
  %49 = bitcast %struct.sd_dma_interrupt_context_t* %9 to i8*, !dbg !12617
  %50 = tail call i32 @hal_gpt_sw_start_timer_ms(i32 noundef %48, i32 noundef 1, void (i8*)* noundef nonnull @sd_dma_interrput_gpt_callback, i8* noundef nonnull %49) #22, !dbg !12618
  br label %53, !dbg !12619

51:                                               ; preds = %27, %29, %24, %19, %1
  %52 = phi i32 [ %4, %1 ], [ %20, %19 ], [ %32, %29 ], [ %25, %24 ], [ -5, %27 ], !dbg !12553
  call void @llvm.dbg.value(metadata i32 %52, metadata !12549, metadata !DIExpression()), !dbg !12553
  call void @llvm.dbg.label(metadata !12552), !dbg !12620
  tail call fastcc void @sd_dma_interrupt_error_handle(i32 noundef %0, i32 noundef %52) #23, !dbg !12621
  br label %53, !dbg !12622

53:                                               ; preds = %51, %46, %39
  %54 = phi i32 [ -1, %51 ], [ 0, %39 ], [ 0, %46 ], !dbg !12553
  ret i32 %54, !dbg !12623
}

; Function Attrs: noinline nounwind optsize
define internal void @sd_dma_interrput_gpt_callback(i8* nocapture noundef readonly %0) #0 !dbg !1918 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !1920, metadata !DIExpression()), !dbg !12624
  call void @llvm.dbg.value(metadata %struct.sd_dma_interrupt_context_t* null, metadata !1921, metadata !DIExpression()), !dbg !12624
  call void @llvm.dbg.value(metadata i32 0, metadata !1922, metadata !DIExpression()), !dbg !12624
  call void @llvm.dbg.value(metadata i8* %0, metadata !1921, metadata !DIExpression()), !dbg !12624
  %2 = getelementptr inbounds i8, i8* %0, i32 8, !dbg !12625
  %3 = bitcast i8* %2 to i32*, !dbg !12625
  %4 = load i32, i32* %3, align 4, !dbg !12625
  %5 = icmp eq i32 %4, 0, !dbg !12626
  call void @llvm.dbg.value(metadata %struct.msdc_register_t* undef, metadata !1926, metadata !DIExpression()), !dbg !12624
  %6 = select i1 %5, i32 1, i32 2, !dbg !12627
  call void @llvm.dbg.value(metadata i32 %6, metadata !1925, metadata !DIExpression()), !dbg !12624
  %7 = load i8, i8* @sd_dma_interrput_gpt_callback.count, align 1, !dbg !12628
  %8 = icmp ult i8 %7, 100, !dbg !12630
  br i1 %8, label %9, label %12, !dbg !12631

9:                                                ; preds = %1
  %10 = add nuw nsw i8 %7, 1, !dbg !12632
  store i8 %10, i8* @sd_dma_interrput_gpt_callback.count, align 1, !dbg !12632
  %11 = tail call zeroext i1 @msdc_card_is_present(i32 noundef %4) #22, !dbg !12634
  br i1 %11, label %16, label %54, !dbg !12636

12:                                               ; preds = %1
  store i8 0, i8* @sd_dma_interrput_gpt_callback.count, align 1, !dbg !12637
  %13 = load i32, i32* @sd_dma_interrupt_gpt_timer, align 4, !dbg !12639
  %14 = tail call i32 @hal_gpt_sw_free_timer(i32 noundef %13) #22, !dbg !12640
  %15 = load i32, i32* %3, align 4, !dbg !12641
  tail call fastcc void @sd_dma_interrupt_error_handle(i32 noundef %15, i32 noundef -11) #23, !dbg !12642
  br label %58, !dbg !12643

16:                                               ; preds = %9
  %17 = load i32, i32* %3, align 4, !dbg !12644
  %18 = load i32, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 6), align 8, !dbg !12646
  %19 = shl i32 %18, 16, !dbg !12647
  %20 = tail call i32 @sd_send_command(i32 noundef %17, i32 noundef 141, i32 noundef %19) #23, !dbg !12648
  call void @llvm.dbg.value(metadata i32 %20, metadata !1923, metadata !DIExpression()), !dbg !12624
  %21 = icmp eq i32 %20, 0, !dbg !12649
  br i1 %21, label %26, label %22, !dbg !12651

22:                                               ; preds = %16
  store i8 0, i8* @sd_dma_interrput_gpt_callback.count, align 1, !dbg !12652
  %23 = load i32, i32* @sd_dma_interrupt_gpt_timer, align 4, !dbg !12654
  %24 = tail call i32 @hal_gpt_sw_free_timer(i32 noundef %23) #22, !dbg !12655
  %25 = load i32, i32* %3, align 4, !dbg !12656
  tail call fastcc void @sd_dma_interrupt_error_handle(i32 noundef %25, i32 noundef %20) #23, !dbg !12657
  br label %58, !dbg !12658

26:                                               ; preds = %16
  %27 = select i1 %5, i32* inttoptr (i32 -1610481616 to i32*), i32* inttoptr (i32 -1610416080 to i32*), !dbg !12659
  %28 = load volatile i32, i32* %27, align 16, !dbg !12659
  call void @llvm.dbg.value(metadata i32 %28, metadata !1922, metadata !DIExpression()), !dbg !12624
  %29 = and i32 %28, 256, !dbg !12660
  %30 = icmp eq i32 %29, 0, !dbg !12660
  br i1 %30, label %48, label %31, !dbg !12662

31:                                               ; preds = %26
  store i8 0, i8* @sd_dma_interrput_gpt_callback.count, align 1, !dbg !12663
  %32 = load i32, i32* @sd_dma_interrupt_gpt_timer, align 4, !dbg !12665
  %33 = tail call i32 @hal_gpt_sw_free_timer(i32 noundef %32) #22, !dbg !12666
  %34 = select i1 %5, i32* inttoptr (i32 -1610481656 to i32*), i32* inttoptr (i32 -1610416120 to i32*), !dbg !12667
  %35 = load volatile i32, i32* %34, align 8, !dbg !12667
  %36 = load i32, i32* %3, align 4, !dbg !12668
  tail call void @msdc_reset(i32 noundef %36) #22, !dbg !12669
  %37 = load i32, i32* %3, align 4, !dbg !12670
  tail call void @msdc_dma_disable(i32 noundef %37) #22, !dbg !12671
  %38 = tail call i32 @pdma_stop(i32 noundef %6) #22, !dbg !12672
  %39 = tail call i32 @pdma_deinit(i32 noundef %6) #22, !dbg !12673
  %40 = load i32, i32* %3, align 4, !dbg !12674
  %41 = getelementptr inbounds [2 x %struct.sd_dma_interrupt_context_t], [2 x %struct.sd_dma_interrupt_context_t]* @sd_dma_interrupt_context, i32 0, i32 %40, i32 3, !dbg !12675
  tail call void @dvfs_unlock(%struct._dvfs_lock_t* noundef nonnull %41) #22, !dbg !12676
  %42 = load i32, i32* %3, align 4, !dbg !12677
  tail call void @msdc_set_irqmask0(i32 noundef %42, i32 noundef -1) #22, !dbg !12678
  %43 = load i32, i32* %3, align 4, !dbg !12679
  %44 = getelementptr inbounds [0 x %struct.msdc_config_t], [0 x %struct.msdc_config_t]* bitcast ([2 x %struct.msdc_config_t]* @msdc_config to [0 x %struct.msdc_config_t]*), i32 0, i32 %43, i32 14, !dbg !12680
  %45 = load void (i32, i8*)*, void (i32, i8*)** %44, align 4, !dbg !12680
  tail call void %45(i32 noundef 0, i8* noundef null) #22, !dbg !12681
  store volatile i8 0, i8* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 17), align 1, !dbg !12682
  %46 = load i32, i32* %3, align 4, !dbg !12683
  %47 = getelementptr inbounds [2 x %struct.sd_dma_interrupt_context_t], [2 x %struct.sd_dma_interrupt_context_t]* @sd_dma_interrupt_context, i32 0, i32 %46, i32 0, !dbg !12684
  store i32 0, i32* %47, align 4, !dbg !12685
  br label %58, !dbg !12686

48:                                               ; preds = %26
  %49 = load i32, i32* @sd_dma_interrupt_gpt_timer, align 4, !dbg !12687
  %50 = load i32, i32* %3, align 4, !dbg !12688
  %51 = getelementptr inbounds [2 x %struct.sd_dma_interrupt_context_t], [2 x %struct.sd_dma_interrupt_context_t]* @sd_dma_interrupt_context, i32 0, i32 %50, !dbg !12689
  %52 = bitcast %struct.sd_dma_interrupt_context_t* %51 to i8*, !dbg !12690
  %53 = tail call i32 @hal_gpt_sw_start_timer_ms(i32 noundef %49, i32 noundef 1, void (i8*)* noundef nonnull @sd_dma_interrput_gpt_callback, i8* noundef nonnull %52) #22, !dbg !12691
  br label %58, !dbg !12692

54:                                               ; preds = %9
  store i8 0, i8* @sd_dma_interrput_gpt_callback.count, align 1, !dbg !12693
  call void @llvm.dbg.value(metadata i32 -18, metadata !1923, metadata !DIExpression()), !dbg !12624
  %55 = load i32, i32* @sd_dma_interrupt_gpt_timer, align 4, !dbg !12695
  %56 = tail call i32 @hal_gpt_sw_free_timer(i32 noundef %55) #22, !dbg !12696
  %57 = load i32, i32* %3, align 4, !dbg !12697
  tail call fastcc void @sd_dma_interrupt_error_handle(i32 noundef %57, i32 noundef -18) #23, !dbg !12698
  br label %58, !dbg !12699

58:                                               ; preds = %48, %54, %31, %22, %12
  ret void, !dbg !12692
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @sd_dma_interrupt_error_handle(i32 noundef %0, i32 noundef %1) unnamed_addr #0 !dbg !12700 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12704, metadata !DIExpression()), !dbg !12708
  call void @llvm.dbg.value(metadata i32 %1, metadata !12705, metadata !DIExpression()), !dbg !12708
  %3 = icmp eq i32 %0, 0, !dbg !12709
  call void @llvm.dbg.value(metadata %struct.msdc_register_t* undef, metadata !12706, metadata !DIExpression()), !dbg !12708
  %4 = select i1 %3, i32 1, i32 2, !dbg !12710
  call void @llvm.dbg.value(metadata i32 %4, metadata !12707, metadata !DIExpression()), !dbg !12708
  store i32 %1, i32* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 13), align 8, !dbg !12711
  tail call void @msdc_dma_disable(i32 noundef %0) #22, !dbg !12712
  tail call void @msdc_reset(i32 noundef %0) #22, !dbg !12713
  %5 = select i1 %3, i32* inttoptr (i32 -1610481656 to i32*), i32* inttoptr (i32 -1610416120 to i32*), !dbg !12714
  %6 = load volatile i32, i32* %5, align 8, !dbg !12714
  %7 = getelementptr inbounds [2 x %struct.sd_dma_interrupt_context_t], [2 x %struct.sd_dma_interrupt_context_t]* @sd_dma_interrupt_context, i32 0, i32 %0, i32 0, !dbg !12715
  %8 = load i32, i32* %7, align 4, !dbg !12715
  %9 = icmp ugt i32 %8, 1, !dbg !12717
  br i1 %9, label %10, label %12, !dbg !12718

10:                                               ; preds = %2
  %11 = tail call i32 @sd_stop_transfer(i32 noundef %0) #23, !dbg !12719
  br label %12, !dbg !12721

12:                                               ; preds = %10, %2
  %13 = tail call i32 @pdma_stop(i32 noundef %4) #22, !dbg !12722
  %14 = tail call i32 @pdma_deinit(i32 noundef %4) #22, !dbg !12723
  %15 = getelementptr inbounds [2 x %struct.sd_dma_interrupt_context_t], [2 x %struct.sd_dma_interrupt_context_t]* @sd_dma_interrupt_context, i32 0, i32 %0, i32 3, !dbg !12724
  tail call void @dvfs_unlock(%struct._dvfs_lock_t* noundef nonnull %15) #22, !dbg !12725
  store i32 0, i32* %7, align 4, !dbg !12726
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @__FUNCTION__.sd_dma_interrupt_error_handle, i32 0, i32 0), i32 noundef 1375, i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.9.189, i32 0, i32 0)) #22, !dbg !12727
  %16 = getelementptr inbounds [0 x %struct.msdc_config_t], [0 x %struct.msdc_config_t]* bitcast ([2 x %struct.msdc_config_t]* @msdc_config to [0 x %struct.msdc_config_t]*), i32 0, i32 %0, i32 14, !dbg !12728
  %17 = load void (i32, i8*)*, void (i32, i8*)** %16, align 4, !dbg !12728
  tail call void %17(i32 noundef -1, i8* noundef null) #22, !dbg !12729
  tail call void @msdc_set_irqmask0(i32 noundef %0, i32 noundef -1) #22, !dbg !12730
  store volatile i8 0, i8* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 17), align 1, !dbg !12731
  ret void, !dbg !12732
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sd_backup_all_register(i32 noundef %0) local_unnamed_addr #2 !dbg !12733 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12737, metadata !DIExpression()), !dbg !12739
  %2 = icmp eq i32 %0, 0, !dbg !12740
  call void @llvm.dbg.value(metadata %struct.msdc_register_t* undef, metadata !12738, metadata !DIExpression()), !dbg !12739
  %3 = select i1 %2, i32* inttoptr (i32 -1610481664 to i32*), i32* inttoptr (i32 -1610416128 to i32*), !dbg !12741
  %4 = load volatile i32, i32* %3, align 65536, !dbg !12741
  store volatile i32 %4, i32* getelementptr inbounds (%struct.msdc_register_t, %struct.msdc_register_t* @sd_backup_register, i32 0, i32 0), align 4, !dbg !12742
  %5 = select i1 %2, i32* inttoptr (i32 -1610481644 to i32*), i32* inttoptr (i32 -1610416108 to i32*), !dbg !12743
  %6 = load volatile i32, i32* %5, align 4, !dbg !12743
  store volatile i32 %6, i32* getelementptr inbounds (%struct.msdc_register_t, %struct.msdc_register_t* @sd_backup_register, i32 0, i32 5), align 4, !dbg !12744
  %7 = select i1 %2, i32* inttoptr (i32 -1610481640 to i32*), i32* inttoptr (i32 -1610416104 to i32*), !dbg !12745
  %8 = load volatile i32, i32* %7, align 8, !dbg !12745
  store volatile i32 %8, i32* getelementptr inbounds (%struct.msdc_register_t, %struct.msdc_register_t* @sd_backup_register, i32 0, i32 6), align 4, !dbg !12746
  %9 = select i1 %2, i32* inttoptr (i32 -1610481632 to i32*), i32* inttoptr (i32 -1610416096 to i32*), !dbg !12747
  %10 = load volatile i32, i32* %9, align 32, !dbg !12747
  store volatile i32 %10, i32* getelementptr inbounds (%struct.msdc_register_t, %struct.msdc_register_t* @sd_backup_register, i32 0, i32 8), align 4, !dbg !12748
  %11 = select i1 %2, i32* inttoptr (i32 -1610481588 to i32*), i32* inttoptr (i32 -1610416052 to i32*), !dbg !12749
  %12 = load volatile i32, i32* %11, align 4, !dbg !12749
  store volatile i32 %12, i32* getelementptr inbounds (%struct.msdc_register_t, %struct.msdc_register_t* @sd_backup_register, i32 0, i32 19), align 4, !dbg !12750
  %13 = select i1 %2, i32* inttoptr (i32 -1610481584 to i32*), i32* inttoptr (i32 -1610416048 to i32*), !dbg !12751
  %14 = load volatile i32, i32* %13, align 16, !dbg !12751
  store volatile i32 %14, i32* getelementptr inbounds (%struct.msdc_register_t, %struct.msdc_register_t* @sd_backup_register, i32 0, i32 20), align 4, !dbg !12752
  %15 = select i1 %2, i32* inttoptr (i32 -1610481536 to i32*), i32* inttoptr (i32 -1610416000 to i32*), !dbg !12753
  %16 = load volatile i32, i32* %15, align 128, !dbg !12753
  store volatile i32 %16, i32* getelementptr inbounds (%struct.msdc_register_t, %struct.msdc_register_t* @sd_backup_register, i32 0, i32 24), align 4, !dbg !12754
  ret void, !dbg !12755
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sd_restore_all_register(i32 noundef %0) local_unnamed_addr #2 !dbg !12756 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12758, metadata !DIExpression()), !dbg !12760
  %2 = icmp eq i32 %0, 0, !dbg !12761
  call void @llvm.dbg.value(metadata %struct.msdc_register_t* undef, metadata !12759, metadata !DIExpression()), !dbg !12760
  %3 = select i1 %2, i32* inttoptr (i32 -1610481664 to i32*), i32* inttoptr (i32 -1610416128 to i32*), !dbg !12762
  %4 = load volatile i32, i32* %3, align 65536, !dbg !12762
  %5 = or i32 %4, 1, !dbg !12763
  store volatile i32 %5, i32* %3, align 65536, !dbg !12764
  %6 = load volatile i32, i32* getelementptr inbounds (%struct.msdc_register_t, %struct.msdc_register_t* @sd_backup_register, i32 0, i32 0), align 4, !dbg !12765
  store volatile i32 %6, i32* %3, align 65536, !dbg !12766
  %7 = load volatile i32, i32* getelementptr inbounds (%struct.msdc_register_t, %struct.msdc_register_t* @sd_backup_register, i32 0, i32 5), align 4, !dbg !12767
  %8 = select i1 %2, i32* inttoptr (i32 -1610481644 to i32*), i32* inttoptr (i32 -1610416108 to i32*), !dbg !12768
  store volatile i32 %7, i32* %8, align 4, !dbg !12769
  %9 = load volatile i32, i32* getelementptr inbounds (%struct.msdc_register_t, %struct.msdc_register_t* @sd_backup_register, i32 0, i32 6), align 4, !dbg !12770
  %10 = select i1 %2, i32* inttoptr (i32 -1610481640 to i32*), i32* inttoptr (i32 -1610416104 to i32*), !dbg !12771
  store volatile i32 %9, i32* %10, align 8, !dbg !12772
  %11 = load volatile i32, i32* getelementptr inbounds (%struct.msdc_register_t, %struct.msdc_register_t* @sd_backup_register, i32 0, i32 8), align 4, !dbg !12773
  %12 = select i1 %2, i32* inttoptr (i32 -1610481632 to i32*), i32* inttoptr (i32 -1610416096 to i32*), !dbg !12774
  store volatile i32 %11, i32* %12, align 32, !dbg !12775
  %13 = load volatile i32, i32* getelementptr inbounds (%struct.msdc_register_t, %struct.msdc_register_t* @sd_backup_register, i32 0, i32 19), align 4, !dbg !12776
  %14 = select i1 %2, i32* inttoptr (i32 -1610481588 to i32*), i32* inttoptr (i32 -1610416052 to i32*), !dbg !12777
  store volatile i32 %13, i32* %14, align 4, !dbg !12778
  %15 = load volatile i32, i32* getelementptr inbounds (%struct.msdc_register_t, %struct.msdc_register_t* @sd_backup_register, i32 0, i32 20), align 4, !dbg !12779
  %16 = select i1 %2, i32* inttoptr (i32 -1610481584 to i32*), i32* inttoptr (i32 -1610416048 to i32*), !dbg !12780
  store volatile i32 %15, i32* %16, align 16, !dbg !12781
  %17 = load volatile i32, i32* getelementptr inbounds (%struct.msdc_register_t, %struct.msdc_register_t* @sd_backup_register, i32 0, i32 24), align 4, !dbg !12782
  %18 = select i1 %2, i32* inttoptr (i32 -1610481536 to i32*), i32* inttoptr (i32 -1610416000 to i32*), !dbg !12783
  store volatile i32 %17, i32* %18, align 128, !dbg !12784
  ret void, !dbg !12785
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sd_backup_all() local_unnamed_addr #0 !dbg !12786 {
  tail call void @msdc_switch_pinmux_to_gpio_mode() #22, !dbg !12787
  %1 = load volatile i8, i8* getelementptr inbounds (%struct.sd_information_t, %struct.sd_information_t* @sd_information, i32 0, i32 16), align 4, !dbg !12788, !range !4202
  %2 = icmp eq i8 %1, 0, !dbg !12788
  br i1 %2, label %3, label %4, !dbg !12790

3:                                                ; preds = %0
  store volatile i8 0, i8* getelementptr inbounds (%struct.sd_backup_parameter_t, %struct.sd_backup_parameter_t* @sd_backup_parameter, i32 0, i32 2), align 4, !dbg !12791
  br label %14, !dbg !12793

4:                                                ; preds = %0
  store volatile i8 1, i8* getelementptr inbounds (%struct.sd_backup_parameter_t, %struct.sd_backup_parameter_t* @sd_backup_parameter, i32 0, i32 2), align 4, !dbg !12794
  %5 = tail call i32 @msdc_get_owner(i32 noundef 0) #22, !dbg !12796
  %6 = icmp eq i32 %5, 1, !dbg !12798
  br i1 %6, label %10, label %7, !dbg !12799

7:                                                ; preds = %4
  %8 = tail call i32 @msdc_get_owner(i32 noundef 1) #22, !dbg !12800
  %9 = icmp eq i32 %8, 1, !dbg !12802
  br i1 %9, label %10, label %12, !dbg !12803

10:                                               ; preds = %7, %4
  %11 = phi i32 [ 0, %4 ], [ 1, %7 ]
  store volatile i32 %11, i32* getelementptr inbounds (%struct.sd_backup_parameter_t, %struct.sd_backup_parameter_t* @sd_backup_parameter, i32 0, i32 1), align 4, !dbg !12804
  br label %12, !dbg !12805

12:                                               ; preds = %10, %7
  %13 = load volatile i32, i32* getelementptr inbounds (%struct.sd_backup_parameter_t, %struct.sd_backup_parameter_t* @sd_backup_parameter, i32 0, i32 1), align 4, !dbg !12805
  tail call void @sd_backup_all_register(i32 noundef %13) #23, !dbg !12806
  br label %14, !dbg !12807

14:                                               ; preds = %12, %3
  ret void, !dbg !12807
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sd_restore_all() local_unnamed_addr #0 !dbg !12808 {
  %1 = load volatile i8, i8* getelementptr inbounds (%struct.sd_backup_parameter_t, %struct.sd_backup_parameter_t* @sd_backup_parameter, i32 0, i32 2), align 4, !dbg !12809, !range !4202
  %2 = icmp eq i8 %1, 0, !dbg !12809
  br i1 %2, label %7, label %3, !dbg !12811

3:                                                ; preds = %0
  tail call void @msdc_switch_pinmux_to_msdc_mode() #22, !dbg !12812
  %4 = load volatile i32, i32* getelementptr inbounds (%struct.sd_backup_parameter_t, %struct.sd_backup_parameter_t* @sd_backup_parameter, i32 0, i32 1), align 4, !dbg !12813
  tail call void @sd_restore_all_register(i32 noundef %4) #23, !dbg !12814
  store volatile i8 0, i8* getelementptr inbounds (%struct.sd_backup_parameter_t, %struct.sd_backup_parameter_t* @sd_backup_parameter, i32 0, i32 2), align 4, !dbg !12815
  %5 = load volatile i32, i32* getelementptr inbounds (%struct.sd_backup_parameter_t, %struct.sd_backup_parameter_t* @sd_backup_parameter, i32 0, i32 1), align 4, !dbg !12816
  %6 = tail call i32 @sd_latch_read_blocks(i32 noundef %5, i32* noundef getelementptr inbounds ([128 x i32], [128 x i32]* @sd_read_buffer, i32 0, i32 0), i32 noundef 0, i32 noundef 1) #23, !dbg !12817
  br label %7, !dbg !12818

7:                                                ; preds = %0, %3
  ret void, !dbg !12818
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i1 @msdc_valid(i32 %0, i32 %1) #10 !dbg !12819 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !12821, metadata !DIExpression()), !dbg !12823
  call void @llvm.dbg.value(metadata i32 undef, metadata !12822, metadata !DIExpression()), !dbg !12823
  ret i1 true, !dbg !12824
}

; Function Attrs: noinline nounwind optsize
define dso_local void @msdc_prepare(i32 noundef %0, i32 noundef %1) #0 !dbg !12825 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12827, metadata !DIExpression()), !dbg !12831
  call void @llvm.dbg.value(metadata i32 %1, metadata !12828, metadata !DIExpression()), !dbg !12831
  call void @llvm.dbg.value(metadata i32 %1, metadata !12829, metadata !DIExpression()), !dbg !12831
  %3 = lshr i32 %1, 1, !dbg !12832
  call void @llvm.dbg.value(metadata i32 %3, metadata !12830, metadata !DIExpression()), !dbg !12831
  %4 = load volatile i32, i32* getelementptr inbounds ([2 x %struct.msdc_config_t], [2 x %struct.msdc_config_t]* @msdc_config, i32 0, i32 0, i32 0), align 4, !dbg !12833
  %5 = icmp eq i32 %4, 0, !dbg !12835
  br i1 %5, label %44, label %6, !dbg !12836

6:                                                ; preds = %2
  %7 = load i32, i32* getelementptr inbounds ([2 x %struct.msdc_config_t], [2 x %struct.msdc_config_t]* @msdc_config, i32 0, i32 0, i32 2), align 4, !dbg !12837
  %8 = icmp ugt i32 %7, %3, !dbg !12839
  br i1 %8, label %9, label %14, !dbg !12840

9:                                                ; preds = %6
  %10 = load i32, i32* @msdc_clock_before_dvfs.0, align 4, !dbg !12841
  %11 = icmp ult i32 %10, %7, !dbg !12844
  br i1 %11, label %12, label %13, !dbg !12845

12:                                               ; preds = %9
  store i32 %7, i32* @msdc_clock_before_dvfs.0, align 4, !dbg !12846
  br label %13, !dbg !12848

13:                                               ; preds = %12, %9
  tail call void @msdc_set_output_clock(i32 noundef 0, i32 noundef %3) #23, !dbg !12849
  br label %44, !dbg !12850

14:                                               ; preds = %6
  switch i32 %0, label %36 [
    i32 1300000, label %15
    i32 1100000, label %27
  ], !dbg !12851

15:                                               ; preds = %14
  %16 = load i8, i8* @dvfs_1p1v_need_sd_clock_tuning, align 1, !dbg !12853, !range !4202
  %17 = icmp eq i8 %16, 0, !dbg !12853
  %18 = load i8, i8* @dvfs_1p3v_need_sd_clock_tuning, align 1
  %19 = icmp eq i8 %18, 0
  %20 = select i1 %17, i1 %19, i1 false, !dbg !12854
  br i1 %20, label %36, label %21, !dbg !12854

21:                                               ; preds = %15
  %22 = load volatile i32, i32* getelementptr inbounds ([2 x %struct.msdc_config_t], [2 x %struct.msdc_config_t]* @msdc_config, i32 0, i32 0, i32 0), align 4, !dbg !12855
  %23 = icmp eq i32 %22, 1, !dbg !12856
  br i1 %23, label %24, label %36, !dbg !12857

24:                                               ; preds = %21
  %25 = load i32, i32* @dvfs_save_sd_init_clock, align 4, !dbg !12858
  %26 = tail call zeroext i1 @sd_output_clock_tuning(i32 noundef 0, i32 noundef %25) #22, !dbg !12860
  store i8 0, i8* @dvfs_1p1v_need_sd_clock_tuning, align 1, !dbg !12861
  store i8 0, i8* @dvfs_1p3v_need_sd_clock_tuning, align 1, !dbg !12862
  br label %44, !dbg !12863

27:                                               ; preds = %14
  %28 = load i8, i8* @dvfs_1p1v_need_sd_clock_tuning, align 1, !dbg !12864, !range !4202
  %29 = icmp eq i8 %28, 0, !dbg !12864
  br i1 %29, label %36, label %30, !dbg !12866

30:                                               ; preds = %27
  %31 = load volatile i32, i32* getelementptr inbounds ([2 x %struct.msdc_config_t], [2 x %struct.msdc_config_t]* @msdc_config, i32 0, i32 0, i32 0), align 4, !dbg !12867
  %32 = icmp eq i32 %31, 1, !dbg !12868
  br i1 %32, label %33, label %36, !dbg !12869

33:                                               ; preds = %30
  %34 = load i32, i32* @dvfs_save_sd_init_clock, align 4, !dbg !12870
  %35 = tail call zeroext i1 @sd_output_clock_tuning(i32 noundef 0, i32 noundef %34) #22, !dbg !12872
  store i8 0, i8* @dvfs_1p1v_need_sd_clock_tuning, align 1, !dbg !12873
  br label %44, !dbg !12874

36:                                               ; preds = %21, %15, %14, %30, %27
  %37 = icmp ult i32 %7, %3, !dbg !12875
  br i1 %37, label %38, label %44, !dbg !12877

38:                                               ; preds = %36
  %39 = load i32, i32* @msdc_clock_before_dvfs.0, align 4, !dbg !12878
  %40 = icmp ule i32 %39, %7, !dbg !12879
  %41 = icmp ult i32 %39, %3
  %42 = or i1 %40, %41, !dbg !12880
  br i1 %42, label %44, label %43, !dbg !12880

43:                                               ; preds = %38
  tail call void @msdc_set_output_clock(i32 noundef 0, i32 noundef %3) #23, !dbg !12881
  br label %44, !dbg !12885

44:                                               ; preds = %13, %33, %43, %38, %36, %24, %2
  %45 = load volatile i32, i32* getelementptr inbounds ([2 x %struct.msdc_config_t], [2 x %struct.msdc_config_t]* @msdc_config, i32 0, i32 1, i32 0), align 4, !dbg !12886
  %46 = icmp eq i32 %45, 0, !dbg !12888
  br i1 %46, label %85, label %47, !dbg !12889

47:                                               ; preds = %44
  %48 = load i32, i32* getelementptr inbounds ([2 x %struct.msdc_config_t], [2 x %struct.msdc_config_t]* @msdc_config, i32 0, i32 1, i32 2), align 4, !dbg !12890
  %49 = icmp ugt i32 %48, %3, !dbg !12892
  br i1 %49, label %50, label %55, !dbg !12893

50:                                               ; preds = %47
  %51 = load i32, i32* @msdc_clock_before_dvfs.1, align 4, !dbg !12894
  %52 = icmp ult i32 %51, %48, !dbg !12897
  br i1 %52, label %53, label %54, !dbg !12898

53:                                               ; preds = %50
  store i32 %48, i32* @msdc_clock_before_dvfs.1, align 4, !dbg !12899
  br label %54, !dbg !12901

54:                                               ; preds = %53, %50
  tail call void @msdc_set_output_clock(i32 noundef 1, i32 noundef %3) #23, !dbg !12902
  br label %85, !dbg !12903

55:                                               ; preds = %47
  switch i32 %0, label %77 [
    i32 1300000, label %56
    i32 1100000, label %68
  ], !dbg !12904

56:                                               ; preds = %55
  %57 = load i8, i8* @dvfs_1p1v_need_sd_clock_tuning, align 1, !dbg !12906, !range !4202
  %58 = icmp eq i8 %57, 0, !dbg !12906
  %59 = load i8, i8* @dvfs_1p3v_need_sd_clock_tuning, align 1
  %60 = icmp eq i8 %59, 0
  %61 = select i1 %58, i1 %60, i1 false, !dbg !12907
  br i1 %61, label %77, label %62, !dbg !12907

62:                                               ; preds = %56
  %63 = load volatile i32, i32* getelementptr inbounds ([2 x %struct.msdc_config_t], [2 x %struct.msdc_config_t]* @msdc_config, i32 0, i32 1, i32 0), align 4, !dbg !12908
  %64 = icmp eq i32 %63, 1, !dbg !12909
  br i1 %64, label %65, label %77, !dbg !12910

65:                                               ; preds = %62
  %66 = load i32, i32* @dvfs_save_sd_init_clock, align 4, !dbg !12911
  %67 = tail call zeroext i1 @sd_output_clock_tuning(i32 noundef 1, i32 noundef %66) #22, !dbg !12913
  store i8 0, i8* @dvfs_1p1v_need_sd_clock_tuning, align 1, !dbg !12914
  store i8 0, i8* @dvfs_1p3v_need_sd_clock_tuning, align 1, !dbg !12915
  br label %85, !dbg !12916

68:                                               ; preds = %55
  %69 = load i8, i8* @dvfs_1p1v_need_sd_clock_tuning, align 1, !dbg !12917, !range !4202
  %70 = icmp eq i8 %69, 0, !dbg !12917
  br i1 %70, label %77, label %71, !dbg !12919

71:                                               ; preds = %68
  %72 = load volatile i32, i32* getelementptr inbounds ([2 x %struct.msdc_config_t], [2 x %struct.msdc_config_t]* @msdc_config, i32 0, i32 1, i32 0), align 4, !dbg !12920
  %73 = icmp eq i32 %72, 1, !dbg !12921
  br i1 %73, label %74, label %77, !dbg !12922

74:                                               ; preds = %71
  %75 = load i32, i32* @dvfs_save_sd_init_clock, align 4, !dbg !12923
  %76 = tail call zeroext i1 @sd_output_clock_tuning(i32 noundef 1, i32 noundef %75) #22, !dbg !12925
  store i8 0, i8* @dvfs_1p1v_need_sd_clock_tuning, align 1, !dbg !12926
  br label %85, !dbg !12927

77:                                               ; preds = %62, %56, %55, %71, %68
  %78 = icmp ult i32 %48, %3, !dbg !12928
  br i1 %78, label %79, label %85, !dbg !12930

79:                                               ; preds = %77
  %80 = load i32, i32* @msdc_clock_before_dvfs.1, align 4, !dbg !12931
  %81 = icmp ule i32 %80, %48, !dbg !12932
  %82 = icmp ult i32 %80, %3
  %83 = or i1 %81, %82, !dbg !12933
  br i1 %83, label %85, label %84, !dbg !12933

84:                                               ; preds = %79
  tail call void @msdc_set_output_clock(i32 noundef 1, i32 noundef %3) #23, !dbg !12934
  br label %85, !dbg !12938

85:                                               ; preds = %54, %74, %84, %79, %77, %65, %44
  ret void, !dbg !12939
}

; Function Attrs: noinline nounwind optsize
define dso_local void @msdc_set_output_clock(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !12940 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12944, metadata !DIExpression()), !dbg !12951
  call void @llvm.dbg.value(metadata i32 %1, metadata !12945, metadata !DIExpression()), !dbg !12951
  call void @llvm.dbg.value(metadata i32 0, metadata !12947, metadata !DIExpression()), !dbg !12951
  call void @llvm.dbg.value(metadata i32 0, metadata !12948, metadata !DIExpression()), !dbg !12951
  call void @llvm.dbg.value(metadata i32 0, metadata !12949, metadata !DIExpression()), !dbg !12951
  call void @llvm.dbg.value(metadata i32 0, metadata !12950, metadata !DIExpression()), !dbg !12951
  %3 = icmp eq i32 %0, 0, !dbg !12952
  call void @llvm.dbg.value(metadata %struct.msdc_register_t* undef, metadata !12946, metadata !DIExpression()), !dbg !12951
  %4 = icmp eq i32 %1, 0, !dbg !12953
  br i1 %4, label %67, label %5, !dbg !12955

5:                                                ; preds = %2, %10
  %6 = phi i32 [ %11, %10 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !12949, metadata !DIExpression()), !dbg !12951
  %7 = getelementptr inbounds [7 x %struct.msdc_clock_t], [7 x %struct.msdc_clock_t]* @msdc_output_clock, i32 0, i32 %6, i32 0, !dbg !12956
  %8 = load i32, i32* %7, align 4, !dbg !12956
  %9 = icmp ugt i32 %8, %1, !dbg !12961
  br i1 %9, label %10, label %13, !dbg !12962

10:                                               ; preds = %5
  %11 = add nuw nsw i32 %6, 1, !dbg !12963
  call void @llvm.dbg.value(metadata i32 %11, metadata !12949, metadata !DIExpression()), !dbg !12951
  %12 = icmp eq i32 %11, 7, !dbg !12964
  br i1 %12, label %27, label %5, !dbg !12965, !llvm.loop !12966

13:                                               ; preds = %5
  %14 = getelementptr inbounds [2 x %struct.msdc_config_t], [2 x %struct.msdc_config_t]* @msdc_config, i32 0, i32 %0, i32 2, !dbg !12968
  store i32 %8, i32* %14, align 4, !dbg !12971
  %15 = getelementptr inbounds [7 x %struct.msdc_clock_t], [7 x %struct.msdc_clock_t]* @msdc_output_clock, i32 0, i32 %6, i32 1, !dbg !12972
  %16 = load i8, i8* %15, align 4, !dbg !12972
  %17 = zext i8 %16 to i32, !dbg !12973
  call void @llvm.dbg.value(metadata i32 %17, metadata !12948, metadata !DIExpression(DW_OP_constu, 8, DW_OP_shl, DW_OP_stack_value)), !dbg !12951
  %18 = getelementptr inbounds [7 x %struct.msdc_clock_t], [7 x %struct.msdc_clock_t]* @msdc_output_clock, i32 0, i32 %6, i32 2, !dbg !12974
  %19 = load i8, i8* %18, align 1, !dbg !12974
  %20 = shl i8 %19, 2, !dbg !12975
  %21 = and i8 %20, 4, !dbg !12975
  %22 = getelementptr inbounds [7 x %struct.msdc_clock_t], [7 x %struct.msdc_clock_t]* @msdc_output_clock, i32 0, i32 %6, i32 3, !dbg !12976
  %23 = load i8, i8* %22, align 2, !dbg !12976
  %24 = and i8 %23, 3, !dbg !12977
  %25 = or i8 %21, %24, !dbg !12978
  call void @llvm.dbg.value(metadata i8 %25, metadata !12950, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12951
  %26 = zext i8 %25 to i32, !dbg !12979
  br label %40, !dbg !12979

27:                                               ; preds = %10
  %28 = add i32 %1, 25999, !dbg !12980
  %29 = udiv i32 %28, %1, !dbg !12982
  call void @llvm.dbg.value(metadata i32 %29, metadata !12947, metadata !DIExpression()), !dbg !12951
  %30 = lshr i32 %29, 2, !dbg !12983
  %31 = and i32 %29, 3, !dbg !12984
  %32 = icmp ne i32 %31, 0, !dbg !12985
  %33 = zext i1 %32 to i32, !dbg !12986
  %34 = add nuw nsw i32 %30, %33, !dbg !12987
  call void @llvm.dbg.value(metadata i32 %34, metadata !12947, metadata !DIExpression()), !dbg !12951
  %35 = icmp eq i32 %34, 0, !dbg !12988
  br i1 %35, label %40, label %36, !dbg !12990

36:                                               ; preds = %27
  %37 = shl i32 %34, 2, !dbg !12991
  %38 = udiv i32 26000, %37, !dbg !12993
  %39 = getelementptr inbounds [2 x %struct.msdc_config_t], [2 x %struct.msdc_config_t]* @msdc_config, i32 0, i32 %0, i32 2, !dbg !12994
  store i32 %38, i32* %39, align 4, !dbg !12995
  br label %40, !dbg !12996

40:                                               ; preds = %27, %36, %13
  %41 = phi i32 [ %17, %13 ], [ %34, %36 ], [ 0, %27 ]
  %42 = phi i32 [ %26, %13 ], [ 0, %36 ], [ 0, %27 ]
  %43 = shl i32 %41, 8, !dbg !12997
  call void @llvm.dbg.value(metadata i32 %42, metadata !12950, metadata !DIExpression()), !dbg !12951
  call void @llvm.dbg.value(metadata i32 %43, metadata !12948, metadata !DIExpression()), !dbg !12951
  %44 = select i1 %3, i32* inttoptr (i32 -1610481632 to i32*), i32* inttoptr (i32 -1610416096 to i32*), !dbg !12998
  %45 = load volatile i32, i32* %44, align 32, !dbg !12998
  %46 = and i32 %45, -65537, !dbg !12999
  store volatile i32 %46, i32* %44, align 32, !dbg !13000
  %47 = select i1 %3, i32* inttoptr (i32 -1610481664 to i32*), i32* inttoptr (i32 -1610416128 to i32*), !dbg !13001
  %48 = load volatile i32, i32* %47, align 65536, !dbg !13001
  %49 = and i32 %48, -65281, !dbg !13002
  %50 = or i32 %49, %43, !dbg !13003
  store volatile i32 %50, i32* %47, align 65536, !dbg !13004
  br i1 %3, label %53, label %51, !dbg !13005

51:                                               ; preds = %40
  %52 = icmp eq i32 %0, 1, !dbg !13006
  br i1 %52, label %53, label %56, !dbg !13009

53:                                               ; preds = %51, %40
  %54 = phi i32 [ 9, %40 ], [ 10, %51 ]
  %55 = tail call i32 @clock_mux_sel(i32 noundef %54, i32 noundef %42) #22, !dbg !13010
  br label %56, !dbg !13011

56:                                               ; preds = %53, %51
  %57 = load volatile i32, i32* %44, align 32, !dbg !13011
  %58 = or i32 %57, 65536, !dbg !13012
  store volatile i32 %58, i32* %44, align 32, !dbg !13013
  tail call void @msdc_wait(i32 noundef 1) #23, !dbg !13014
  %59 = getelementptr inbounds [2 x %struct.msdc_config_t], [2 x %struct.msdc_config_t]* @msdc_config, i32 0, i32 %0, i32 2, !dbg !13015
  %60 = load i32, i32* %59, align 4, !dbg !13015
  %61 = icmp ult i32 %60, 25000, !dbg !13017
  %62 = select i1 %3, i32* inttoptr (i32 -1610481536 to i32*), i32* inttoptr (i32 -1610416000 to i32*), !dbg !13018
  %63 = load volatile i32, i32* %62, align 128, !dbg !13018
  %64 = and i32 %63, -129, !dbg !13019
  %65 = select i1 %61, i32 0, i32 128, !dbg !13019
  %66 = or i32 %64, %65, !dbg !13019
  store volatile i32 %66, i32* %62, align 128, !dbg !13018
  br label %67, !dbg !13020

67:                                               ; preds = %56, %2
  ret void, !dbg !13020
}

; Function Attrs: optsize
declare dso_local i32 @clock_mux_sel(i32 noundef, i32 noundef) local_unnamed_addr #5 section ".tcm_code"

; Function Attrs: noinline nounwind optsize
define dso_local void @msdc_wait(i32 noundef %0) local_unnamed_addr #0 !dbg !13021 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13023, metadata !DIExpression()), !dbg !13024
  %2 = tail call i32 @hal_gpt_delay_ms(i32 noundef %0) #22, !dbg !13025
  ret void, !dbg !13026
}

; Function Attrs: noinline nounwind optsize
define dso_local void @msdc_reset(i32 noundef %0) local_unnamed_addr #0 !dbg !13027 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !13031, metadata !DIExpression()), !dbg !13036
  %5 = bitcast i32* %2 to i8*, !dbg !13037
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !13037
  call void @llvm.dbg.value(metadata i32 0, metadata !13033, metadata !DIExpression()), !dbg !13036
  store i32 0, i32* %2, align 4, !dbg !13038
  %6 = bitcast i32* %3 to i8*, !dbg !13039
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #24, !dbg !13039
  call void @llvm.dbg.value(metadata i32 0, metadata !13034, metadata !DIExpression()), !dbg !13036
  store i32 0, i32* %3, align 4, !dbg !13040
  %7 = bitcast i32* %4 to i8*, !dbg !13041
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #24, !dbg !13041
  call void @llvm.dbg.value(metadata i32 0, metadata !13035, metadata !DIExpression()), !dbg !13036
  store i32 0, i32* %4, align 4, !dbg !13042
  %8 = icmp eq i32 %0, 0, !dbg !13043
  call void @llvm.dbg.value(metadata %struct.msdc_register_t* undef, metadata !13032, metadata !DIExpression()), !dbg !13036
  %9 = select i1 %8, i32* inttoptr (i32 -1610481664 to i32*), i32* inttoptr (i32 -1610416128 to i32*), !dbg !13044
  %10 = load volatile i32, i32* %9, align 65536, !dbg !13044
  %11 = and i32 %10, 2, !dbg !13046
  %12 = icmp eq i32 %11, 0, !dbg !13046
  br i1 %12, label %13, label %16, !dbg !13047

13:                                               ; preds = %1
  %14 = load volatile i32, i32* %9, align 65536, !dbg !13048
  %15 = or i32 %14, 2, !dbg !13050
  store volatile i32 %15, i32* %9, align 65536, !dbg !13051
  br label %16, !dbg !13052

16:                                               ; preds = %13, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !13033, metadata !DIExpression(DW_OP_deref)), !dbg !13036
  %17 = call i32 @hal_gpt_get_free_run_count(i32 noundef 1, i32* noundef nonnull %2) #22, !dbg !13053
  br label %18, !dbg !13054

18:                                               ; preds = %22, %16
  %19 = load volatile i32, i32* %9, align 65536, !dbg !13055
  %20 = and i32 %19, 2, !dbg !13056
  %21 = icmp eq i32 %20, 0, !dbg !13054
  br i1 %21, label %30, label %22, !dbg !13054

22:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32* %3, metadata !13034, metadata !DIExpression(DW_OP_deref)), !dbg !13036
  %23 = call i32 @hal_gpt_get_free_run_count(i32 noundef 1, i32* noundef nonnull %3) #22, !dbg !13057
  %24 = load i32, i32* %2, align 4, !dbg !13059
  call void @llvm.dbg.value(metadata i32 %24, metadata !13033, metadata !DIExpression()), !dbg !13036
  %25 = load i32, i32* %3, align 4, !dbg !13060
  call void @llvm.dbg.value(metadata i32 %25, metadata !13034, metadata !DIExpression()), !dbg !13036
  call void @llvm.dbg.value(metadata i32* %4, metadata !13035, metadata !DIExpression(DW_OP_deref)), !dbg !13036
  %26 = call i32 @hal_gpt_get_duration_count(i32 noundef %24, i32 noundef %25, i32* noundef nonnull %4) #22, !dbg !13061
  %27 = load i32, i32* %4, align 4, !dbg !13062
  call void @llvm.dbg.value(metadata i32 %27, metadata !13035, metadata !DIExpression()), !dbg !13036
  %28 = icmp ugt i32 %27, 1499999, !dbg !13064
  br i1 %28, label %29, label %18, !dbg !13065, !llvm.loop !13066

29:                                               ; preds = %22
  call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @__FUNCTION__.msdc_reset, i32 0, i32 0), i32 noundef 132, i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3.209, i32 0, i32 0)) #22, !dbg !13068
  br label %30, !dbg !13070

30:                                               ; preds = %18, %29
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #24, !dbg !13071
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #24, !dbg !13071
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !13071
  ret void, !dbg !13071
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @msdc_record_command_status(i32 noundef %0, i32 noundef %1) local_unnamed_addr #6 !dbg !13072 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13074, metadata !DIExpression()), !dbg !13076
  call void @llvm.dbg.value(metadata i32 %1, metadata !13075, metadata !DIExpression()), !dbg !13076
  %3 = getelementptr inbounds [2 x %struct.msdc_config_t], [2 x %struct.msdc_config_t]* @msdc_config, i32 0, i32 %0, i32 8, !dbg !13077
  store i32 %1, i32* %3, align 4, !dbg !13078
  ret void, !dbg !13079
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @msdc_record_data_status(i32 noundef %0, i32 noundef %1) local_unnamed_addr #6 !dbg !13080 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13082, metadata !DIExpression()), !dbg !13084
  call void @llvm.dbg.value(metadata i32 %1, metadata !13083, metadata !DIExpression()), !dbg !13084
  %3 = getelementptr inbounds [2 x %struct.msdc_config_t], [2 x %struct.msdc_config_t]* @msdc_config, i32 0, i32 %0, i32 9, !dbg !13085
  store i32 %1, i32* %3, align 4, !dbg !13086
  ret void, !dbg !13087
}

; Function Attrs: noinline nounwind optsize
define dso_local void @msdc_clock_init(i32 noundef %0) local_unnamed_addr #0 !dbg !13088 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13090, metadata !DIExpression()), !dbg !13092
  %2 = icmp eq i32 %0, 0, !dbg !13093
  call void @llvm.dbg.value(metadata %struct.msdc_register_t* undef, metadata !13091, metadata !DIExpression()), !dbg !13092
  %3 = select i1 %2, i32* inttoptr (i32 -1610481536 to i32*), i32* inttoptr (i32 -1610416000 to i32*), !dbg !13094
  %4 = load volatile i32, i32* %3, align 128, !dbg !13094
  %5 = and i32 %4, -129, !dbg !13095
  store volatile i32 %5, i32* %3, align 128, !dbg !13096
  %6 = select i1 %2, i32* inttoptr (i32 -1610481632 to i32*), i32* inttoptr (i32 -1610416096 to i32*), !dbg !13097
  %7 = load volatile i32, i32* %6, align 32, !dbg !13097
  %8 = and i32 %7, 16777215, !dbg !13098
  %9 = or i32 %8, 1342177280, !dbg !13099
  store volatile i32 %9, i32* %6, align 32, !dbg !13100
  %10 = getelementptr inbounds [2 x %struct.msdc_config_t], [2 x %struct.msdc_config_t]* @msdc_config, i32 0, i32 %0, i32 1, !dbg !13101
  store i32 89140, i32* %10, align 4, !dbg !13102
  %11 = select i1 %2, i32* inttoptr (i32 -1610481664 to i32*), i32* inttoptr (i32 -1610416128 to i32*), !dbg !13103
  %12 = load volatile i32, i32* %11, align 65536, !dbg !13103
  %13 = and i32 %12, -8388633, !dbg !13104
  %14 = or i32 %13, 8388616, !dbg !13105
  store volatile i32 %14, i32* %11, align 65536, !dbg !13106
  tail call void @msdc_set_output_clock(i32 noundef %0, i32 noundef 240) #23, !dbg !13107
  ret void, !dbg !13108
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @msdc_get_output_clock(i32 noundef %0) local_unnamed_addr #4 !dbg !13109 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13113, metadata !DIExpression()), !dbg !13114
  %2 = getelementptr inbounds [2 x %struct.msdc_config_t], [2 x %struct.msdc_config_t]* @msdc_config, i32 0, i32 %0, i32 2, !dbg !13115
  %3 = load i32, i32* %2, align 4, !dbg !13115
  ret i32 %3, !dbg !13116
}

; Function Attrs: noinline nounwind optsize
define dso_local void @msdc_power_set(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #0 !dbg !13117 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13121, metadata !DIExpression()), !dbg !13124
  call void @llvm.dbg.value(metadata i1 %1, metadata !13122, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13124
  call void @llvm.dbg.value(metadata i32 -1, metadata !13123, metadata !DIExpression()), !dbg !13124
  br i1 %1, label %3, label %8, !dbg !13125

3:                                                ; preds = %2
  switch i32 %0, label %16 [
    i32 0, label %4
    i32 1, label %6
  ], !dbg !13126

4:                                                ; preds = %3
  %5 = tail call i32 @hal_clock_enable(i32 noundef 35) #22, !dbg !13129
  call void @llvm.dbg.value(metadata i32 %5, metadata !13123, metadata !DIExpression()), !dbg !13124
  br label %13, !dbg !13132

6:                                                ; preds = %3
  %7 = tail call i32 @hal_clock_enable(i32 noundef 74) #22, !dbg !13133
  call void @llvm.dbg.value(metadata i32 %7, metadata !13123, metadata !DIExpression()), !dbg !13124
  br label %13, !dbg !13136

8:                                                ; preds = %2
  switch i32 %0, label %16 [
    i32 0, label %9
    i32 1, label %11
  ], !dbg !13137

9:                                                ; preds = %8
  %10 = tail call i32 @hal_clock_disable(i32 noundef 35) #22, !dbg !13139
  call void @llvm.dbg.value(metadata i32 %10, metadata !13123, metadata !DIExpression()), !dbg !13124
  br label %13, !dbg !13142

11:                                               ; preds = %8
  %12 = tail call i32 @hal_clock_disable(i32 noundef 74) #22, !dbg !13143
  call void @llvm.dbg.value(metadata i32 %12, metadata !13123, metadata !DIExpression()), !dbg !13124
  br label %13, !dbg !13146

13:                                               ; preds = %9, %11, %4, %6
  %14 = phi i32 [ %5, %4 ], [ %7, %6 ], [ %10, %9 ], [ %12, %11 ], !dbg !13124
  call void @llvm.dbg.value(metadata i32 %14, metadata !13123, metadata !DIExpression()), !dbg !13124
  %15 = icmp eq i32 %14, 0, !dbg !13147
  br i1 %15, label %17, label %16, !dbg !13149

16:                                               ; preds = %8, %3, %13
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__FUNCTION__.msdc_power_set, i32 0, i32 0), i32 noundef 260, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.4.220, i32 0, i32 0)) #22, !dbg !13150
  br label %17, !dbg !13152

17:                                               ; preds = %16, %13
  ret void, !dbg !13153
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @msdc_set_io_parameter(i32 noundef %0, %struct.hal_uart_config_t* nocapture noundef readonly %1) local_unnamed_addr #2 !dbg !13154 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13158, metadata !DIExpression()), !dbg !13162
  call void @llvm.dbg.value(metadata %struct.hal_uart_config_t* %1, metadata !13159, metadata !DIExpression()), !dbg !13162
  call void @llvm.dbg.value(metadata i32 0, metadata !13161, metadata !DIExpression()), !dbg !13162
  %3 = icmp eq i32 %0, 0, !dbg !13163
  call void @llvm.dbg.value(metadata %struct.msdc_register_t* undef, metadata !13160, metadata !DIExpression()), !dbg !13162
  %4 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 3, !dbg !13164
  %5 = load i32, i32* %4, align 4, !dbg !13164
  %6 = shl i32 %5, 7, !dbg !13165
  %7 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 2, !dbg !13166
  %8 = load i32, i32* %7, align 4, !dbg !13166
  %9 = shl i32 %8, 6, !dbg !13167
  %10 = or i32 %9, %6, !dbg !13168
  %11 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 1, !dbg !13169
  %12 = load i32, i32* %11, align 4, !dbg !13169
  %13 = shl i32 %12, 3, !dbg !13170
  %14 = or i32 %10, %13, !dbg !13171
  %15 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 0, !dbg !13172
  %16 = load i32, i32* %15, align 4, !dbg !13172
  %17 = or i32 %14, %16, !dbg !13173
  call void @llvm.dbg.value(metadata i32 %17, metadata !13161, metadata !DIExpression()), !dbg !13162
  %18 = select i1 %3, i32* inttoptr (i32 -1610481644 to i32*), i32* inttoptr (i32 -1610416108 to i32*), !dbg !13174
  %19 = load volatile i32, i32* %18, align 4, !dbg !13174
  %20 = and i32 %19, -256, !dbg !13175
  %21 = or i32 %17, %20, !dbg !13176
  store volatile i32 %21, i32* %18, align 4, !dbg !13177
  %22 = load volatile i32, i32* %18, align 4, !dbg !13178
  %23 = or i32 %22, 2621440, !dbg !13179
  store volatile i32 %23, i32* %18, align 4, !dbg !13180
  %24 = select i1 %3, i32* inttoptr (i32 -1610481640 to i32*), i32* inttoptr (i32 -1610416104 to i32*), !dbg !13181
  %25 = load volatile i32, i32* %24, align 8, !dbg !13181
  %26 = or i32 %25, 139810, !dbg !13182
  store volatile i32 %26, i32* %24, align 8, !dbg !13183
  ret void, !dbg !13184
}

; Function Attrs: noinline nounwind optsize
define dso_local void @msdc_nvic_set(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #0 !dbg !13185 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13187, metadata !DIExpression()), !dbg !13190
  call void @llvm.dbg.value(metadata i1 %1, metadata !13188, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13190
  %3 = icmp eq i32 %0, 0, !dbg !13191
  %4 = select i1 %3, i32 34, i32 35, !dbg !13192
  call void @llvm.dbg.value(metadata i32 %4, metadata !13189, metadata !DIExpression()), !dbg !13190
  br i1 %1, label %5, label %7, !dbg !13193

5:                                                ; preds = %2
  %6 = tail call i32 @hal_nvic_enable_irq(i32 noundef %4) #22, !dbg !13194
  br label %9, !dbg !13197

7:                                                ; preds = %2
  %8 = tail call i32 @hal_nvic_disable_irq(i32 noundef %4) #22, !dbg !13198
  br label %9

9:                                                ; preds = %7, %5
  ret void, !dbg !13200
}

; Function Attrs: noinline nounwind optsize
define dso_local void @msdc_isr(i32 %0) #0 !dbg !13201 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13203, metadata !DIExpression()), !dbg !13204
  tail call void @msdc_nvic_set(i32 noundef 0, i1 noundef zeroext false) #23, !dbg !13205
  %2 = load volatile i32, i32* inttoptr (i32 -1610481656 to i32*), align 8, !dbg !13206
  store i32 %2, i32* getelementptr inbounds ([2 x %struct.msdc_config_t], [2 x %struct.msdc_config_t]* @msdc_config, i32 0, i32 0, i32 3), align 4, !dbg !13207
  %3 = load volatile i32, i32* inttoptr (i32 -1610481596 to i32*), align 4, !dbg !13208
  store i32 %3, i32* getelementptr inbounds ([2 x %struct.msdc_config_t], [2 x %struct.msdc_config_t]* @msdc_config, i32 0, i32 0, i32 9), align 4, !dbg !13209
  %4 = and i32 %3, 2, !dbg !13210
  %5 = icmp eq i32 %4, 0, !dbg !13210
  br i1 %5, label %10, label %6, !dbg !13212

6:                                                ; preds = %1
  %7 = load void (i32, i8*)*, void (i32, i8*)** getelementptr inbounds ([2 x %struct.msdc_config_t], [2 x %struct.msdc_config_t]* @msdc_config, i32 0, i32 0, i32 14), align 4, !dbg !13213
  %8 = icmp eq void (i32, i8*)* %7, null, !dbg !13216
  br i1 %8, label %17, label %9, !dbg !13217

9:                                                ; preds = %6
  tail call void %7(i32 noundef -3, i8* noundef null) #22, !dbg !13218
  br label %17, !dbg !13220

10:                                               ; preds = %1
  %11 = and i32 %3, 1020, !dbg !13221
  %12 = icmp ne i32 %11, 0, !dbg !13221
  %13 = load void (i32, i8*)*, void (i32, i8*)** getelementptr inbounds ([2 x %struct.msdc_config_t], [2 x %struct.msdc_config_t]* @msdc_config, i32 0, i32 0, i32 14), align 4
  %14 = icmp ne void (i32, i8*)* %13, null
  %15 = select i1 %12, i1 %14, i1 false, !dbg !13223
  br i1 %15, label %16, label %17, !dbg !13223

16:                                               ; preds = %10
  tail call void %13(i32 noundef -2, i8* noundef null) #22, !dbg !13224
  br label %17, !dbg !13228

17:                                               ; preds = %10, %16, %6, %9
  tail call void @msdc_nvic_set(i32 noundef 0, i1 noundef zeroext true) #23, !dbg !13229
  ret void, !dbg !13230
}

; Function Attrs: noinline nounwind optsize
define dso_local void @msdc1_isr(i32 %0) #0 !dbg !13231 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13233, metadata !DIExpression()), !dbg !13234
  tail call void @msdc_nvic_set(i32 noundef 1, i1 noundef zeroext false) #23, !dbg !13235
  %2 = load volatile i32, i32* inttoptr (i32 -1610416120 to i32*), align 8, !dbg !13236
  store i32 %2, i32* getelementptr inbounds ([2 x %struct.msdc_config_t], [2 x %struct.msdc_config_t]* @msdc_config, i32 0, i32 1, i32 3), align 4, !dbg !13237
  %3 = load volatile i32, i32* inttoptr (i32 -1610481596 to i32*), align 4, !dbg !13238
  store i32 %3, i32* getelementptr inbounds ([2 x %struct.msdc_config_t], [2 x %struct.msdc_config_t]* @msdc_config, i32 0, i32 1, i32 9), align 4, !dbg !13239
  %4 = and i32 %3, 2, !dbg !13240
  %5 = icmp eq i32 %4, 0, !dbg !13240
  br i1 %5, label %10, label %6, !dbg !13242

6:                                                ; preds = %1
  %7 = load void (i32, i8*)*, void (i32, i8*)** getelementptr inbounds ([2 x %struct.msdc_config_t], [2 x %struct.msdc_config_t]* @msdc_config, i32 0, i32 1, i32 14), align 4, !dbg !13243
  %8 = icmp eq void (i32, i8*)* %7, null, !dbg !13246
  br i1 %8, label %17, label %9, !dbg !13247

9:                                                ; preds = %6
  tail call void %7(i32 noundef -3, i8* noundef null) #22, !dbg !13248
  br label %17, !dbg !13250

10:                                               ; preds = %1
  %11 = and i32 %3, 1020, !dbg !13251
  %12 = icmp ne i32 %11, 0, !dbg !13251
  %13 = load void (i32, i8*)*, void (i32, i8*)** getelementptr inbounds ([2 x %struct.msdc_config_t], [2 x %struct.msdc_config_t]* @msdc_config, i32 0, i32 1, i32 14), align 4
  %14 = icmp ne void (i32, i8*)* %13, null
  %15 = select i1 %12, i1 %14, i1 false, !dbg !13253
  br i1 %15, label %16, label %17, !dbg !13253

16:                                               ; preds = %10
  tail call void %13(i32 noundef -2, i8* noundef null) #22, !dbg !13254
  br label %17, !dbg !13258

17:                                               ; preds = %10, %16, %6, %9
  tail call void @msdc_nvic_set(i32 noundef 1, i1 noundef zeroext true) #23, !dbg !13259
  ret void, !dbg !13260
}

; Function Attrs: noinline nounwind optsize
define dso_local void @msdc_interrupt_init(i32 noundef %0) local_unnamed_addr #0 !dbg !13261 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13263, metadata !DIExpression()), !dbg !13265
  call void @llvm.dbg.value(metadata %struct.msdc_register_t* undef, metadata !13264, metadata !DIExpression()), !dbg !13265
  tail call void @msdc_nvic_set(i32 noundef %0, i1 noundef zeroext false) #23, !dbg !13266
  switch i32 %0, label %6 [
    i32 0, label %2
    i32 1, label %4
  ], !dbg !13267

2:                                                ; preds = %1
  %3 = tail call i32 @hal_nvic_register_isr_handler(i32 noundef 34, void (i32)* noundef nonnull @msdc_isr) #22, !dbg !13268
  br label %6, !dbg !13271

4:                                                ; preds = %1
  %5 = tail call i32 @hal_nvic_register_isr_handler(i32 noundef 35, void (i32)* noundef nonnull @msdc1_isr) #22, !dbg !13272
  br label %6, !dbg !13275

6:                                                ; preds = %1, %4, %2
  %7 = phi i32* [ inttoptr (i32 -1610416128 to i32*), %4 ], [ inttoptr (i32 -1610481664 to i32*), %2 ], [ inttoptr (i32 -1610416128 to i32*), %1 ], !dbg !13276
  %8 = phi %struct.msdc_register_t* [ inttoptr (i32 -1610416128 to %struct.msdc_register_t*), %4 ], [ inttoptr (i32 -1610481664 to %struct.msdc_register_t*), %2 ], [ inttoptr (i32 -1610416128 to %struct.msdc_register_t*), %1 ], !dbg !13276
  %9 = phi i32* [ inttoptr (i32 -1610416120 to i32*), %4 ], [ inttoptr (i32 -1610481656 to i32*), %2 ], [ inttoptr (i32 -1610416120 to i32*), %1 ], !dbg !13276
  call void @llvm.dbg.value(metadata %struct.msdc_register_t* %8, metadata !13264, metadata !DIExpression()), !dbg !13265
  %10 = load volatile i32, i32* %9, align 8, !dbg !13276
  %11 = load volatile i32, i32* %7, align 65536, !dbg !13277
  %12 = and i32 %11, -65537, !dbg !13278
  store volatile i32 %12, i32* %7, align 65536, !dbg !13279
  %13 = load volatile i32, i32* %7, align 65536, !dbg !13280
  %14 = and i32 %13, -524289, !dbg !13281
  store volatile i32 %14, i32* %7, align 65536, !dbg !13282
  %15 = getelementptr inbounds %struct.msdc_register_t, %struct.msdc_register_t* %8, i32 0, i32 19, !dbg !13283
  store volatile i32 -1, i32* %15, align 4, !dbg !13284
  %16 = load volatile i32, i32* %7, align 65536, !dbg !13285
  %17 = or i32 %16, 65536, !dbg !13286
  store volatile i32 %17, i32* %7, align 65536, !dbg !13287
  tail call void @msdc_nvic_set(i32 noundef %0, i1 noundef zeroext true) #23, !dbg !13288
  ret void, !dbg !13289
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local zeroext i1 @msdc_card_is_present(i32 noundef %0) local_unnamed_addr #11 !dbg !13290 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13294, metadata !DIExpression()), !dbg !13295
  %2 = getelementptr inbounds [2 x %struct.msdc_config_t], [2 x %struct.msdc_config_t]* @msdc_config, i32 0, i32 %0, i32 4, !dbg !13296
  %3 = load volatile i8, i8* %2, align 4, !dbg !13296, !range !4202
  %4 = icmp ne i8 %3, 0, !dbg !13296
  ret i1 %4, !dbg !13297
}

; Function Attrs: noinline nounwind optsize
define dso_local void @msdc_dma_wait_transfer_complete(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !13298 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13300, metadata !DIExpression()), !dbg !13303
  call void @llvm.dbg.value(metadata i32 %1, metadata !13301, metadata !DIExpression()), !dbg !13303
  %3 = icmp eq i32 %0, 0, !dbg !13304
  %4 = select i1 %3, i32 1, i32 2, !dbg !13305
  call void @llvm.dbg.value(metadata i32 %4, metadata !13302, metadata !DIExpression()), !dbg !13303
  %5 = tail call i32 @pdma_start_polling(i32 noundef %4, i32 noundef %1) #22, !dbg !13306
  ret void, !dbg !13307
}

; Function Attrs: noinline nounwind optsize
define dso_local void @msdc_set_dma_interrupt(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !13308 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13310, metadata !DIExpression()), !dbg !13313
  call void @llvm.dbg.value(metadata i32 %1, metadata !13311, metadata !DIExpression()), !dbg !13313
  %3 = icmp eq i32 %0, 0, !dbg !13314
  %4 = select i1 %3, i32 1, i32 2, !dbg !13315
  call void @llvm.dbg.value(metadata i32 %4, metadata !13312, metadata !DIExpression()), !dbg !13313
  %5 = tail call i32 @pdma_start_interrupt(i32 noundef %4, i32 noundef %1) #22, !dbg !13316
  ret void, !dbg !13317
}

; Function Attrs: noinline nounwind optsize
define dso_local void @msdc_dma_isr(i32 %0, i8* nocapture readnone %1) #0 !dbg !13318 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13320, metadata !DIExpression()), !dbg !13322
  call void @llvm.dbg.value(metadata i8* undef, metadata !13321, metadata !DIExpression()), !dbg !13322
  %3 = load volatile i32, i32* getelementptr inbounds ([2 x %struct.msdc_config_t], [2 x %struct.msdc_config_t]* @msdc_config, i32 0, i32 0, i32 10), align 4, !dbg !13323
  %4 = or i32 %3, 1, !dbg !13323
  store volatile i32 %4, i32* getelementptr inbounds ([2 x %struct.msdc_config_t], [2 x %struct.msdc_config_t]* @msdc_config, i32 0, i32 0, i32 10), align 4, !dbg !13323
  %5 = tail call i32 @msdc_get_owner(i32 noundef 0) #23, !dbg !13324
  %6 = icmp eq i32 %5, 1, !dbg !13326
  br i1 %6, label %7, label %14, !dbg !13327

7:                                                ; preds = %2
  %8 = load void (i32, i8*)*, void (i32, i8*)** getelementptr inbounds ([2 x %struct.msdc_config_t], [2 x %struct.msdc_config_t]* @msdc_config, i32 0, i32 0, i32 14), align 4, !dbg !13328
  %9 = icmp eq void (i32, i8*)* %8, null, !dbg !13331
  br i1 %9, label %16, label %10, !dbg !13332

10:                                               ; preds = %7
  %11 = tail call i32 @sd_wait_dma_interrupt_transfer_ready(i32 noundef 0) #22, !dbg !13333
  %12 = icmp eq i32 %11, 0, !dbg !13336
  br i1 %12, label %16, label %13, !dbg !13337

13:                                               ; preds = %10
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @__FUNCTION__.msdc_dma_isr, i32 0, i32 0), i32 noundef 520, i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.5.229, i32 0, i32 0)) #22, !dbg !13338
  br label %16, !dbg !13340

14:                                               ; preds = %2
  %15 = tail call i32 @msdc_get_owner(i32 noundef 0) #23, !dbg !13341
  br label %16

16:                                               ; preds = %7, %13, %10, %14
  ret void, !dbg !13343
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @msdc_get_owner(i32 noundef %0) local_unnamed_addr #11 !dbg !13344 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13348, metadata !DIExpression()), !dbg !13349
  %2 = getelementptr inbounds [2 x %struct.msdc_config_t], [2 x %struct.msdc_config_t]* @msdc_config, i32 0, i32 %0, i32 0, !dbg !13350
  %3 = load volatile i32, i32* %2, align 4, !dbg !13350
  ret i32 %3, !dbg !13351
}

; Function Attrs: noinline nounwind optsize
define dso_local void @msdc1_dma_isr(i32 %0, i8* nocapture readnone %1) #0 !dbg !13352 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13354, metadata !DIExpression()), !dbg !13356
  call void @llvm.dbg.value(metadata i8* undef, metadata !13355, metadata !DIExpression()), !dbg !13356
  %3 = load volatile i32, i32* getelementptr inbounds ([2 x %struct.msdc_config_t], [2 x %struct.msdc_config_t]* @msdc_config, i32 0, i32 1, i32 10), align 4, !dbg !13357
  %4 = or i32 %3, 1, !dbg !13357
  store volatile i32 %4, i32* getelementptr inbounds ([2 x %struct.msdc_config_t], [2 x %struct.msdc_config_t]* @msdc_config, i32 0, i32 1, i32 10), align 4, !dbg !13357
  %5 = tail call i32 @msdc_get_owner(i32 noundef 1) #23, !dbg !13358
  %6 = icmp eq i32 %5, 1, !dbg !13360
  br i1 %6, label %7, label %14, !dbg !13361

7:                                                ; preds = %2
  %8 = load void (i32, i8*)*, void (i32, i8*)** getelementptr inbounds ([2 x %struct.msdc_config_t], [2 x %struct.msdc_config_t]* @msdc_config, i32 0, i32 1, i32 14), align 4, !dbg !13362
  %9 = icmp eq void (i32, i8*)* %8, null, !dbg !13365
  br i1 %9, label %16, label %10, !dbg !13366

10:                                               ; preds = %7
  %11 = tail call i32 @sd_wait_dma_interrupt_transfer_ready(i32 noundef 1) #22, !dbg !13367
  %12 = icmp eq i32 %11, 0, !dbg !13370
  br i1 %12, label %16, label %13, !dbg !13371

13:                                               ; preds = %10
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @__FUNCTION__.msdc1_dma_isr, i32 0, i32 0), i32 noundef 545, i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.5.229, i32 0, i32 0)) #22, !dbg !13372
  br label %16, !dbg !13374

14:                                               ; preds = %2
  %15 = tail call i32 @msdc_get_owner(i32 noundef 1) #23, !dbg !13375
  br label %16

16:                                               ; preds = %7, %13, %10, %14
  ret void, !dbg !13377
}

; Function Attrs: noinline nounwind optsize
define dso_local void @msdc_dma_init(i32 noundef %0) local_unnamed_addr #0 !dbg !13378 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13380, metadata !DIExpression()), !dbg !13382
  %2 = icmp eq i32 %0, 0, !dbg !13383
  %3 = select i1 %2, i32 1, i32 2, !dbg !13384
  call void @llvm.dbg.value(metadata i32 %3, metadata !13381, metadata !DIExpression()), !dbg !13382
  %4 = getelementptr inbounds [2 x %struct.msdc_config_t], [2 x %struct.msdc_config_t]* @msdc_config, i32 0, i32 %0, i32 10, !dbg !13385
  store volatile i32 0, i32* %4, align 4, !dbg !13386
  %5 = tail call i32 @pdma_init(i32 noundef %3) #22, !dbg !13387
  br i1 %2, label %8, label %6, !dbg !13388

6:                                                ; preds = %1
  %7 = icmp eq i32 %0, 1, !dbg !13389
  br i1 %7, label %8, label %11, !dbg !13392

8:                                                ; preds = %6, %1
  %9 = phi void (i32, i8*)* [ @msdc_dma_isr, %1 ], [ @msdc1_dma_isr, %6 ]
  %10 = tail call i32 @pdma_register_callback(i32 noundef %3, void (i32, i8*)* noundef nonnull %9, i8* noundef null) #22, !dbg !13393
  br label %11, !dbg !13394

11:                                               ; preds = %8, %6
  ret void, !dbg !13394
}

; Function Attrs: noinline nounwind optsize
define dso_local void @msdc_dma_config(i32 noundef %0, i32 noundef %1, i32 noundef %2, i1 noundef zeroext %3) local_unnamed_addr #0 !dbg !13395 {
  %5 = alloca %struct.pdma_config_t, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !13399, metadata !DIExpression()), !dbg !13413
  call void @llvm.dbg.value(metadata i32 %1, metadata !13400, metadata !DIExpression()), !dbg !13413
  call void @llvm.dbg.value(metadata i32 %2, metadata !13401, metadata !DIExpression()), !dbg !13413
  %6 = zext i1 %3 to i8
  call void @llvm.dbg.value(metadata i8 %6, metadata !13402, metadata !DIExpression()), !dbg !13413
  %7 = getelementptr inbounds %struct.pdma_config_t, %struct.pdma_config_t* %5, i32 0, i32 0, !dbg !13414
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #24, !dbg !13414
  call void @llvm.dbg.declare(metadata %struct.pdma_config_t* %5, metadata !13403, metadata !DIExpression()), !dbg !13415
  %8 = icmp eq i32 %0, 0, !dbg !13416
  %9 = select i1 %8, i32 1, i32 2, !dbg !13417
  call void @llvm.dbg.value(metadata i32 %9, metadata !13412, metadata !DIExpression()), !dbg !13413
  call void @llvm.dbg.value(metadata %struct.msdc_register_t* undef, metadata !13411, metadata !DIExpression()), !dbg !13413
  %10 = call i8* @memset(i8* noundef nonnull %7, i32 noundef 0, i32 noundef 16) #22, !dbg !13418
  %11 = getelementptr inbounds [2 x %struct.msdc_config_t], [2 x %struct.msdc_config_t]* @msdc_config, i32 0, i32 %0, i32 10, !dbg !13419
  %12 = load volatile i32, i32* %11, align 4, !dbg !13420
  %13 = and i32 %12, -2, !dbg !13420
  store volatile i32 %13, i32* %11, align 4, !dbg !13420
  %14 = and i32 %1, 3, !dbg !13421
  %15 = icmp eq i32 %14, 0, !dbg !13421
  %16 = select i1 %8, i32* inttoptr (i32 -1610481664 to i32*), i32* inttoptr (i32 -1610416128 to i32*), !dbg !13423
  %17 = load volatile i32, i32* %16, align 65536, !dbg !13423
  %18 = and i32 %17, -251658241, !dbg !13423
  br i1 %15, label %19, label %32, !dbg !13424

19:                                               ; preds = %4
  %20 = or i32 %18, 67108864, !dbg !13425
  store volatile i32 %20, i32* %16, align 65536, !dbg !13427
  %21 = select i1 %8, i32* inttoptr (i32 -1610481644 to i32*), i32* inttoptr (i32 -1610416108 to i32*), !dbg !13428
  %22 = load volatile i32, i32* %21, align 4, !dbg !13428
  %23 = and i32 %22, -769, !dbg !13429
  %24 = or i32 %23, 256, !dbg !13430
  store volatile i32 %24, i32* %21, align 4, !dbg !13431
  store i8 1, i8* %7, align 4, !dbg !13432
  %25 = getelementptr inbounds %struct.pdma_config_t, %struct.pdma_config_t* %5, i32 0, i32 1, !dbg !13433
  store i32 2, i32* %25, align 4, !dbg !13434
  %26 = lshr i32 %2, 2, !dbg !13435
  %27 = getelementptr inbounds %struct.pdma_config_t, %struct.pdma_config_t* %5, i32 0, i32 2, !dbg !13436
  store i32 %26, i32* %27, align 4, !dbg !13437
  %28 = xor i1 %3, true, !dbg !13438
  %29 = zext i1 %28 to i32, !dbg !13438
  %30 = getelementptr inbounds %struct.pdma_config_t, %struct.pdma_config_t* %5, i32 0, i32 3, !dbg !13439
  store i32 %29, i32* %30, align 4, !dbg !13440
  %31 = icmp ugt i32 %2, 260099, !dbg !13441
  br i1 %31, label %43, label %56, !dbg !13443

32:                                               ; preds = %4
  call void @llvm.dbg.value(metadata %struct.msdc_register_t* undef, metadata !13411, metadata !DIExpression()), !dbg !13413
  %33 = or i32 %18, 16777216, !dbg !13444
  store volatile i32 %33, i32* %16, align 65536, !dbg !13446
  %34 = select i1 %8, i32* inttoptr (i32 -1610481644 to i32*), i32* inttoptr (i32 -1610416108 to i32*), !dbg !13447
  %35 = load volatile i32, i32* %34, align 4, !dbg !13447
  %36 = and i32 %35, -769, !dbg !13448
  store volatile i32 %36, i32* %34, align 4, !dbg !13449
  store i8 1, i8* %7, align 4, !dbg !13450
  %37 = getelementptr inbounds %struct.pdma_config_t, %struct.pdma_config_t* %5, i32 0, i32 1, !dbg !13451
  store i32 0, i32* %37, align 4, !dbg !13452
  %38 = getelementptr inbounds %struct.pdma_config_t, %struct.pdma_config_t* %5, i32 0, i32 2, !dbg !13453
  store i32 %2, i32* %38, align 4, !dbg !13454
  %39 = xor i1 %3, true, !dbg !13455
  %40 = zext i1 %39 to i32, !dbg !13455
  %41 = getelementptr inbounds %struct.pdma_config_t, %struct.pdma_config_t* %5, i32 0, i32 3, !dbg !13456
  store i32 %40, i32* %41, align 4, !dbg !13457
  %42 = icmp ugt i32 %2, 65024, !dbg !13441
  br i1 %42, label %46, label %56, !dbg !13443

43:                                               ; preds = %19
  %44 = add i32 %2, -260096, !dbg !13458
  %45 = and i32 %44, -4, !dbg !13458
  br label %48, !dbg !13462

46:                                               ; preds = %32
  %47 = add i32 %2, -65024, !dbg !13463
  br label %48

48:                                               ; preds = %46, %43
  %49 = phi i32 [ %47, %46 ], [ %45, %43 ]
  %50 = phi i32 [ 65024, %46 ], [ 260096, %43 ]
  %51 = phi i32* [ %38, %46 ], [ %27, %43 ]
  %52 = getelementptr inbounds [2 x %struct.msdc_config_t], [2 x %struct.msdc_config_t]* @msdc_config, i32 0, i32 %0, i32 11, !dbg !13465
  store volatile i32 %49, i32* %52, align 4, !dbg !13465
  %53 = add i32 %50, %1, !dbg !13465
  %54 = getelementptr inbounds [2 x %struct.msdc_config_t], [2 x %struct.msdc_config_t]* @msdc_config, i32 0, i32 %0, i32 12, !dbg !13465
  store volatile i32 %53, i32* %54, align 4, !dbg !13465
  %55 = getelementptr inbounds [2 x %struct.msdc_config_t], [2 x %struct.msdc_config_t]* @msdc_config, i32 0, i32 %0, i32 13, !dbg !13466
  store volatile i8 %6, i8* %55, align 4, !dbg !13467
  store i32 65024, i32* %51, align 4, !dbg !13468
  br label %60, !dbg !13469

56:                                               ; preds = %32, %19
  %57 = getelementptr inbounds [2 x %struct.msdc_config_t], [2 x %struct.msdc_config_t]* @msdc_config, i32 0, i32 %0, i32 11, !dbg !13470
  store volatile i32 0, i32* %57, align 4, !dbg !13472
  %58 = getelementptr inbounds [2 x %struct.msdc_config_t], [2 x %struct.msdc_config_t]* @msdc_config, i32 0, i32 %0, i32 12, !dbg !13473
  store volatile i32 0, i32* %58, align 4, !dbg !13474
  %59 = getelementptr inbounds [2 x %struct.msdc_config_t], [2 x %struct.msdc_config_t]* @msdc_config, i32 0, i32 %0, i32 13, !dbg !13475
  store volatile i8 0, i8* %59, align 4, !dbg !13476
  br label %60

60:                                               ; preds = %56, %48
  %61 = call i32 @pdma_configure(i32 noundef %9, %struct.pdma_config_t* noundef nonnull %5) #22, !dbg !13477
  %62 = icmp slt i32 %61, 0, !dbg !13479
  br i1 %62, label %63, label %64, !dbg !13480

63:                                               ; preds = %60
  call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__FUNCTION__.msdc_dma_config, i32 0, i32 0), i32 noundef 636, i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.6.234, i32 0, i32 0)) #22, !dbg !13481
  br label %64, !dbg !13483

64:                                               ; preds = %63, %60
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #24, !dbg !13484
  ret void, !dbg !13484
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @msdc_dma_enable(i32 noundef %0) local_unnamed_addr #2 !dbg !13485 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13487, metadata !DIExpression()), !dbg !13489
  %2 = icmp eq i32 %0, 0, !dbg !13490
  call void @llvm.dbg.value(metadata %struct.msdc_register_t* undef, metadata !13488, metadata !DIExpression()), !dbg !13489
  %3 = select i1 %2, i32* inttoptr (i32 -1610481664 to i32*), i32* inttoptr (i32 -1610416128 to i32*), !dbg !13491
  %4 = load volatile i32, i32* %3, align 65536, !dbg !13491
  %5 = or i32 %4, 131072, !dbg !13492
  store volatile i32 %5, i32* %3, align 65536, !dbg !13493
  ret void, !dbg !13494
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @msdc_dma_disable(i32 noundef %0) local_unnamed_addr #2 !dbg !13495 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13497, metadata !DIExpression()), !dbg !13499
  %2 = icmp eq i32 %0, 0, !dbg !13500
  call void @llvm.dbg.value(metadata %struct.msdc_register_t* undef, metadata !13498, metadata !DIExpression()), !dbg !13499
  %3 = select i1 %2, i32* inttoptr (i32 -1610481664 to i32*), i32* inttoptr (i32 -1610416128 to i32*), !dbg !13501
  %4 = load volatile i32, i32* %3, align 65536, !dbg !13501
  %5 = and i32 %4, -131073, !dbg !13502
  store volatile i32 %5, i32* %3, align 65536, !dbg !13503
  ret void, !dbg !13504
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @msdc_set_owner(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !13505 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13509, metadata !DIExpression()), !dbg !13511
  call void @llvm.dbg.value(metadata i32 %1, metadata !13510, metadata !DIExpression()), !dbg !13511
  %3 = getelementptr inbounds [2 x %struct.msdc_config_t], [2 x %struct.msdc_config_t]* @msdc_config, i32 0, i32 %0, i32 0, !dbg !13512
  store volatile i32 %1, i32* %3, align 4, !dbg !13513
  ret void, !dbg !13514
}

; Function Attrs: noinline nounwind optsize
define dso_local void @msdc_card_power_set(i32 %0, i1 noundef zeroext %1) local_unnamed_addr #0 !dbg !13515 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13517, metadata !DIExpression()), !dbg !13519
  call void @llvm.dbg.value(metadata i1 %1, metadata !13518, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13519
  %3 = zext i1 %1 to i8, !dbg !13520
  tail call void @pmu_ctrl_driver_power(i8 noundef zeroext 5, i8 noundef zeroext %3) #22, !dbg !13521
  ret void, !dbg !13522
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @msdc_pad_mux_select(i32 noundef %0) local_unnamed_addr #2 !dbg !13523 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13525, metadata !DIExpression()), !dbg !13526
  %2 = icmp eq i32 %0, 1, !dbg !13527
  br i1 %2, label %3, label %10, !dbg !13529

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 -1576924112 to i32*), align 16, !dbg !13530
  %5 = and i32 %4, 3840, !dbg !13531
  %6 = icmp eq i32 %5, 2048, !dbg !13531
  br i1 %6, label %7, label %10, !dbg !13532

7:                                                ; preds = %3
  %8 = load volatile i32, i32* inttoptr (i32 -1576992204 to i32*), align 4, !dbg !13533
  %9 = or i32 %8, 1, !dbg !13535
  store volatile i32 %9, i32* inttoptr (i32 -1576992204 to i32*), align 4, !dbg !13536
  br label %10, !dbg !13537

10:                                               ; preds = %7, %3, %1
  ret void, !dbg !13538
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @msdc_init(i32 noundef %0) local_unnamed_addr #0 !dbg !13539 {
  %2 = alloca %struct.hal_uart_config_t, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !13544, metadata !DIExpression()), !dbg !13547
  %3 = bitcast %struct.hal_uart_config_t* %2 to i8*, !dbg !13548
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #24, !dbg !13548
  call void @llvm.dbg.declare(metadata %struct.hal_uart_config_t* %2, metadata !13546, metadata !DIExpression()), !dbg !13549
  call void @llvm.dbg.value(metadata %struct.msdc_register_t* undef, metadata !13545, metadata !DIExpression()), !dbg !13547
  %4 = getelementptr inbounds [2 x %struct.msdc_config_t], [2 x %struct.msdc_config_t]* @msdc_config, i32 0, i32 %0, i32 5, !dbg !13550
  %5 = load volatile i8, i8* %4, align 1, !dbg !13550, !range !4202
  %6 = icmp eq i8 %5, 0, !dbg !13550
  br i1 %6, label %7, label %21, !dbg !13552

7:                                                ; preds = %1
  %8 = icmp eq i32 %0, 0, !dbg !13553
  call void @llvm.dbg.value(metadata %struct.msdc_register_t* undef, metadata !13545, metadata !DIExpression()), !dbg !13547
  tail call void @msdc_switch_pinmux_to_msdc_mode() #23, !dbg !13554
  tail call void @msdc_pad_mux_select(i32 noundef %0) #23, !dbg !13555
  tail call void @msdc_power_set(i32 noundef %0, i1 noundef zeroext true) #23, !dbg !13556
  %9 = getelementptr inbounds [2 x %struct.msdc_config_t], [2 x %struct.msdc_config_t]* @msdc_config, i32 0, i32 %0, i32 1, !dbg !13557
  store i32 89140, i32* %9, align 4, !dbg !13558
  %10 = select i1 %8, i32* inttoptr (i32 -1610481664 to i32*), i32* inttoptr (i32 -1610416128 to i32*), !dbg !13559
  %11 = load volatile i32, i32* %10, align 65536, !dbg !13559
  %12 = or i32 %11, 262145, !dbg !13560
  store volatile i32 %12, i32* %10, align 65536, !dbg !13561
  %13 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %2, i32 0, i32 0, !dbg !13562
  store i32 1, i32* %13, align 4, !dbg !13565
  %14 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %2, i32 0, i32 1, !dbg !13566
  store i32 1, i32* %14, align 4, !dbg !13567
  %15 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %2, i32 0, i32 2, !dbg !13568
  store i32 0, i32* %15, align 4, !dbg !13569
  %16 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %2, i32 0, i32 3, !dbg !13570
  store i32 0, i32* %16, align 4, !dbg !13571
  call void @msdc_set_io_parameter(i32 noundef %0, %struct.hal_uart_config_t* noundef nonnull %2) #23, !dbg !13572
  tail call void @msdc_wait(i32 noundef 1) #23, !dbg !13573
  %17 = load volatile i32, i32* %10, align 65536, !dbg !13574
  %18 = and i32 %17, -251658241, !dbg !13575
  %19 = or i32 %18, 16777216, !dbg !13576
  store volatile i32 %19, i32* %10, align 65536, !dbg !13577
  %20 = getelementptr inbounds [2 x %struct.msdc_config_t], [2 x %struct.msdc_config_t]* @msdc_config, i32 0, i32 %0, i32 4, !dbg !13578
  store volatile i8 1, i8* %20, align 4, !dbg !13579
  tail call void @msdc_card_power_set(i32 undef, i1 noundef zeroext true) #23, !dbg !13580
  tail call void @msdc_interrupt_init(i32 noundef %0) #23, !dbg !13581
  store volatile i8 1, i8* %4, align 1, !dbg !13582
  tail call void @dvfs_register_notification(%struct._dvfs_notification_t* noundef nonnull @msdc_desc) #22, !dbg !13583
  br label %21, !dbg !13584

21:                                               ; preds = %1, %7
  %22 = phi i32 [ 0, %7 ], [ 1, %1 ], !dbg !13547
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #24, !dbg !13585
  ret i32 %22, !dbg !13585
}

; Function Attrs: noinline nounwind optsize
define dso_local void @msdc_switch_pinmux_to_msdc_mode() local_unnamed_addr #0 !dbg !13586 {
  %1 = load volatile i32, i32* @msdc_pinmux_switch_flag, align 4, !dbg !13587
  %2 = and i32 %1, 2, !dbg !13589
  %3 = icmp eq i32 %2, 0, !dbg !13589
  br i1 %3, label %14, label %4, !dbg !13590

4:                                                ; preds = %0
  %5 = tail call i32 @hal_pinmux_set_function(i32 noundef 30, i8 noundef zeroext 5) #22, !dbg !13591
  %6 = tail call i32 @hal_pinmux_set_function(i32 noundef 31, i8 noundef zeroext 5) #22, !dbg !13593
  %7 = tail call i32 @hal_pinmux_set_function(i32 noundef 32, i8 noundef zeroext 5) #22, !dbg !13594
  %8 = tail call i32 @hal_pinmux_set_function(i32 noundef 33, i8 noundef zeroext 5) #22, !dbg !13595
  %9 = tail call i32 @hal_pinmux_set_function(i32 noundef 34, i8 noundef zeroext 5) #22, !dbg !13596
  %10 = tail call i32 @hal_pinmux_set_function(i32 noundef 35, i8 noundef zeroext 5) #22, !dbg !13597
  %11 = tail call i32 @hal_gpio_set_pupd_register(i32 noundef 30, i8 noundef zeroext 0, i8 noundef zeroext 1, i8 noundef zeroext 0) #22, !dbg !13598
  %12 = tail call i32 @hal_gpio_set_pupd_register(i32 noundef 31, i8 noundef zeroext 0, i8 noundef zeroext 1, i8 noundef zeroext 0) #22, !dbg !13599
  %13 = tail call i32 @hal_gpio_set_pupd_register(i32 noundef 32, i8 noundef zeroext 0, i8 noundef zeroext 1, i8 noundef zeroext 0) #22, !dbg !13600
  br label %22, !dbg !13601

14:                                               ; preds = %0
  %15 = load volatile i32, i32* @msdc_pinmux_switch_flag, align 4, !dbg !13602
  %16 = and i32 %15, 1, !dbg !13604
  %17 = icmp eq i32 %16, 0, !dbg !13604
  br i1 %17, label %29, label %18, !dbg !13605

18:                                               ; preds = %14
  %19 = tail call i32 @hal_pinmux_set_function(i32 noundef 30, i8 noundef zeroext 5) #22, !dbg !13606
  %20 = tail call i32 @hal_pinmux_set_function(i32 noundef 31, i8 noundef zeroext 5) #22, !dbg !13608
  %21 = tail call i32 @hal_pinmux_set_function(i32 noundef 32, i8 noundef zeroext 5) #22, !dbg !13609
  br label %22, !dbg !13610

22:                                               ; preds = %4, %18
  %23 = phi i32 [ 30, %18 ], [ 33, %4 ]
  %24 = phi i32 [ 31, %18 ], [ 34, %4 ]
  %25 = phi i32 [ 32, %18 ], [ 35, %4 ]
  %26 = tail call i32 @hal_gpio_set_pupd_register(i32 noundef %23, i8 noundef zeroext 0, i8 noundef zeroext 1, i8 noundef zeroext 0) #22, !dbg !13611
  %27 = tail call i32 @hal_gpio_set_pupd_register(i32 noundef %24, i8 noundef zeroext 0, i8 noundef zeroext 1, i8 noundef zeroext 0) #22, !dbg !13611
  %28 = tail call i32 @hal_gpio_set_pupd_register(i32 noundef %25, i8 noundef zeroext 0, i8 noundef zeroext 1, i8 noundef zeroext 0) #22, !dbg !13611
  br label %29, !dbg !13612

29:                                               ; preds = %22, %14
  %30 = load volatile i32, i32* @msdc_pinmux_switch_flag, align 4, !dbg !13612
  %31 = and i32 %30, 32, !dbg !13614
  %32 = icmp eq i32 %31, 0, !dbg !13614
  br i1 %32, label %43, label %33, !dbg !13615

33:                                               ; preds = %29
  %34 = tail call i32 @hal_pinmux_set_function(i32 noundef 24, i8 noundef zeroext 8) #22, !dbg !13616
  %35 = tail call i32 @hal_pinmux_set_function(i32 noundef 25, i8 noundef zeroext 8) #22, !dbg !13618
  %36 = tail call i32 @hal_pinmux_set_function(i32 noundef 26, i8 noundef zeroext 8) #22, !dbg !13619
  %37 = tail call i32 @hal_pinmux_set_function(i32 noundef 27, i8 noundef zeroext 8) #22, !dbg !13620
  %38 = tail call i32 @hal_pinmux_set_function(i32 noundef 28, i8 noundef zeroext 8) #22, !dbg !13621
  %39 = tail call i32 @hal_pinmux_set_function(i32 noundef 29, i8 noundef zeroext 8) #22, !dbg !13622
  %40 = tail call i32 @hal_gpio_set_pupd_register(i32 noundef 24, i8 noundef zeroext 0, i8 noundef zeroext 1, i8 noundef zeroext 0) #22, !dbg !13623
  %41 = tail call i32 @hal_gpio_set_pupd_register(i32 noundef 25, i8 noundef zeroext 0, i8 noundef zeroext 1, i8 noundef zeroext 0) #22, !dbg !13624
  %42 = tail call i32 @hal_gpio_set_pupd_register(i32 noundef 26, i8 noundef zeroext 0, i8 noundef zeroext 1, i8 noundef zeroext 0) #22, !dbg !13625
  br label %51, !dbg !13626

43:                                               ; preds = %29
  %44 = load volatile i32, i32* @msdc_pinmux_switch_flag, align 4, !dbg !13627
  %45 = and i32 %44, 16, !dbg !13629
  %46 = icmp eq i32 %45, 0, !dbg !13629
  br i1 %46, label %58, label %47, !dbg !13630

47:                                               ; preds = %43
  %48 = tail call i32 @hal_pinmux_set_function(i32 noundef 26, i8 noundef zeroext 8) #22, !dbg !13631
  %49 = tail call i32 @hal_pinmux_set_function(i32 noundef 27, i8 noundef zeroext 8) #22, !dbg !13633
  %50 = tail call i32 @hal_pinmux_set_function(i32 noundef 28, i8 noundef zeroext 8) #22, !dbg !13634
  br label %51, !dbg !13635

51:                                               ; preds = %33, %47
  %52 = phi i32 [ 26, %47 ], [ 27, %33 ]
  %53 = phi i32 [ 27, %47 ], [ 28, %33 ]
  %54 = phi i32 [ 28, %47 ], [ 29, %33 ]
  %55 = tail call i32 @hal_gpio_set_pupd_register(i32 noundef %52, i8 noundef zeroext 0, i8 noundef zeroext 1, i8 noundef zeroext 0) #22, !dbg !13636
  %56 = tail call i32 @hal_gpio_set_pupd_register(i32 noundef %53, i8 noundef zeroext 0, i8 noundef zeroext 1, i8 noundef zeroext 0) #22, !dbg !13636
  %57 = tail call i32 @hal_gpio_set_pupd_register(i32 noundef %54, i8 noundef zeroext 0, i8 noundef zeroext 1, i8 noundef zeroext 0) #22, !dbg !13636
  br label %58, !dbg !13637

58:                                               ; preds = %51, %43
  %59 = load volatile i32, i32* @msdc_pinmux_switch_flag, align 4, !dbg !13637
  %60 = and i32 %59, 8, !dbg !13639
  %61 = icmp eq i32 %60, 0, !dbg !13639
  br i1 %61, label %72, label %62, !dbg !13640

62:                                               ; preds = %58
  %63 = tail call i32 @hal_pinmux_set_function(i32 noundef 4, i8 noundef zeroext 2) #22, !dbg !13641
  %64 = tail call i32 @hal_pinmux_set_function(i32 noundef 5, i8 noundef zeroext 2) #22, !dbg !13643
  %65 = tail call i32 @hal_pinmux_set_function(i32 noundef 6, i8 noundef zeroext 2) #22, !dbg !13644
  %66 = tail call i32 @hal_pinmux_set_function(i32 noundef 7, i8 noundef zeroext 2) #22, !dbg !13645
  %67 = tail call i32 @hal_pinmux_set_function(i32 noundef 8, i8 noundef zeroext 2) #22, !dbg !13646
  %68 = tail call i32 @hal_pinmux_set_function(i32 noundef 9, i8 noundef zeroext 2) #22, !dbg !13647
  %69 = tail call i32 @hal_gpio_set_pupd_register(i32 noundef 4, i8 noundef zeroext 0, i8 noundef zeroext 1, i8 noundef zeroext 0) #22, !dbg !13648
  %70 = tail call i32 @hal_gpio_set_pupd_register(i32 noundef 5, i8 noundef zeroext 0, i8 noundef zeroext 1, i8 noundef zeroext 0) #22, !dbg !13649
  %71 = tail call i32 @hal_gpio_set_pupd_register(i32 noundef 6, i8 noundef zeroext 0, i8 noundef zeroext 1, i8 noundef zeroext 0) #22, !dbg !13650
  br label %80, !dbg !13651

72:                                               ; preds = %58
  %73 = load volatile i32, i32* @msdc_pinmux_switch_flag, align 4, !dbg !13652
  %74 = and i32 %73, 4, !dbg !13654
  %75 = icmp eq i32 %74, 0, !dbg !13654
  br i1 %75, label %87, label %76, !dbg !13655

76:                                               ; preds = %72
  %77 = tail call i32 @hal_pinmux_set_function(i32 noundef 4, i8 noundef zeroext 2) #22, !dbg !13656
  %78 = tail call i32 @hal_pinmux_set_function(i32 noundef 5, i8 noundef zeroext 2) #22, !dbg !13658
  %79 = tail call i32 @hal_pinmux_set_function(i32 noundef 6, i8 noundef zeroext 2) #22, !dbg !13659
  br label %80, !dbg !13660

80:                                               ; preds = %62, %76
  %81 = phi i32 [ 4, %76 ], [ 7, %62 ]
  %82 = phi i32 [ 5, %76 ], [ 8, %62 ]
  %83 = phi i32 [ 6, %76 ], [ 9, %62 ]
  %84 = tail call i32 @hal_gpio_set_pupd_register(i32 noundef %81, i8 noundef zeroext 0, i8 noundef zeroext 1, i8 noundef zeroext 0) #22, !dbg !13661
  %85 = tail call i32 @hal_gpio_set_pupd_register(i32 noundef %82, i8 noundef zeroext 0, i8 noundef zeroext 1, i8 noundef zeroext 0) #22, !dbg !13661
  %86 = tail call i32 @hal_gpio_set_pupd_register(i32 noundef %83, i8 noundef zeroext 0, i8 noundef zeroext 1, i8 noundef zeroext 0) #22, !dbg !13661
  br label %87, !dbg !13662

87:                                               ; preds = %80, %72
  store volatile i32 0, i32* @msdc_pinmux_switch_flag, align 4, !dbg !13662
  ret void, !dbg !13663
}

; Function Attrs: noinline nounwind optsize
define dso_local void @msdc_deinit(i32 noundef %0) local_unnamed_addr #0 !dbg !13664 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13666, metadata !DIExpression()), !dbg !13667
  %2 = getelementptr inbounds [2 x %struct.msdc_config_t], [2 x %struct.msdc_config_t]* @msdc_config, i32 0, i32 %0, i32 5, !dbg !13668
  store volatile i8 0, i8* %2, align 1, !dbg !13669
  %3 = getelementptr inbounds [2 x %struct.msdc_config_t], [2 x %struct.msdc_config_t]* @msdc_config, i32 0, i32 %0, i32 0, !dbg !13670
  store volatile i32 0, i32* %3, align 4, !dbg !13671
  %4 = getelementptr inbounds [2 x %struct.msdc_config_t], [2 x %struct.msdc_config_t]* @msdc_config, i32 0, i32 %0, i32 4, !dbg !13672
  store volatile i8 0, i8* %4, align 4, !dbg !13673
  tail call void @msdc_power_set(i32 noundef %0, i1 noundef zeroext false) #23, !dbg !13674
  tail call void @msdc_card_power_set(i32 undef, i1 noundef zeroext false) #23, !dbg !13675
  tail call void @msdc_switch_pinmux_to_gpio_mode() #23, !dbg !13676
  tail call void @dvfs_deregister_notification(%struct._dvfs_notification_t* noundef nonnull @msdc_desc) #22, !dbg !13677
  ret void, !dbg !13678
}

; Function Attrs: noinline nounwind optsize
define dso_local void @msdc_switch_pinmux_to_gpio_mode() local_unnamed_addr #0 !dbg !13679 {
  %1 = tail call zeroext i8 @msdc_get_pinmux(i32 noundef 30) #23, !dbg !13680
  %2 = icmp eq i8 %1, 5, !dbg !13682
  br i1 %2, label %3, label %23, !dbg !13683

3:                                                ; preds = %0
  %4 = tail call i32 @hal_pinmux_set_function(i32 noundef 30, i8 noundef zeroext 0) #22, !dbg !13684
  %5 = tail call i32 @hal_pinmux_set_function(i32 noundef 31, i8 noundef zeroext 0) #22, !dbg !13686
  %6 = tail call i32 @hal_pinmux_set_function(i32 noundef 32, i8 noundef zeroext 0) #22, !dbg !13687
  %7 = tail call i32 @hal_gpio_set_pupd_register(i32 noundef 30, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #22, !dbg !13688
  %8 = tail call i32 @hal_gpio_set_pupd_register(i32 noundef 31, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #22, !dbg !13689
  %9 = tail call i32 @hal_gpio_set_pupd_register(i32 noundef 32, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #22, !dbg !13690
  %10 = load volatile i32, i32* @msdc_pinmux_switch_flag, align 4, !dbg !13691
  %11 = or i32 %10, 1, !dbg !13691
  store volatile i32 %11, i32* @msdc_pinmux_switch_flag, align 4, !dbg !13691
  %12 = tail call zeroext i8 @msdc_get_pinmux(i32 noundef 35) #23, !dbg !13692
  %13 = icmp eq i8 %12, 5, !dbg !13694
  br i1 %13, label %14, label %23, !dbg !13695

14:                                               ; preds = %3
  %15 = tail call i32 @hal_pinmux_set_function(i32 noundef 33, i8 noundef zeroext 0) #22, !dbg !13696
  %16 = tail call i32 @hal_pinmux_set_function(i32 noundef 34, i8 noundef zeroext 0) #22, !dbg !13698
  %17 = tail call i32 @hal_pinmux_set_function(i32 noundef 35, i8 noundef zeroext 0) #22, !dbg !13699
  %18 = tail call i32 @hal_gpio_set_pupd_register(i32 noundef 33, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #22, !dbg !13700
  %19 = tail call i32 @hal_gpio_set_pupd_register(i32 noundef 34, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #22, !dbg !13701
  %20 = tail call i32 @hal_gpio_set_pupd_register(i32 noundef 35, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #22, !dbg !13702
  %21 = load volatile i32, i32* @msdc_pinmux_switch_flag, align 4, !dbg !13703
  %22 = or i32 %21, 2, !dbg !13703
  store volatile i32 %22, i32* @msdc_pinmux_switch_flag, align 4, !dbg !13703
  br label %23, !dbg !13704

23:                                               ; preds = %3, %14, %0
  %24 = tail call zeroext i8 @msdc_get_pinmux(i32 noundef 27) #23, !dbg !13705
  %25 = icmp eq i8 %24, 8, !dbg !13707
  br i1 %25, label %26, label %46, !dbg !13708

26:                                               ; preds = %23
  %27 = tail call i32 @hal_pinmux_set_function(i32 noundef 26, i8 noundef zeroext 0) #22, !dbg !13709
  %28 = tail call i32 @hal_pinmux_set_function(i32 noundef 27, i8 noundef zeroext 0) #22, !dbg !13711
  %29 = tail call i32 @hal_pinmux_set_function(i32 noundef 28, i8 noundef zeroext 0) #22, !dbg !13712
  %30 = tail call i32 @hal_gpio_set_pupd_register(i32 noundef 26, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #22, !dbg !13713
  %31 = tail call i32 @hal_gpio_set_pupd_register(i32 noundef 27, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #22, !dbg !13714
  %32 = tail call i32 @hal_gpio_set_pupd_register(i32 noundef 28, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #22, !dbg !13715
  %33 = load volatile i32, i32* @msdc_pinmux_switch_flag, align 4, !dbg !13716
  %34 = or i32 %33, 16, !dbg !13716
  store volatile i32 %34, i32* @msdc_pinmux_switch_flag, align 4, !dbg !13716
  %35 = tail call zeroext i8 @msdc_get_pinmux(i32 noundef 24) #23, !dbg !13717
  %36 = icmp eq i8 %35, 8, !dbg !13719
  br i1 %36, label %37, label %46, !dbg !13720

37:                                               ; preds = %26
  %38 = tail call i32 @hal_pinmux_set_function(i32 noundef 24, i8 noundef zeroext 0) #22, !dbg !13721
  %39 = tail call i32 @hal_pinmux_set_function(i32 noundef 25, i8 noundef zeroext 0) #22, !dbg !13723
  %40 = tail call i32 @hal_pinmux_set_function(i32 noundef 29, i8 noundef zeroext 0) #22, !dbg !13724
  %41 = tail call i32 @hal_gpio_set_pupd_register(i32 noundef 24, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #22, !dbg !13725
  %42 = tail call i32 @hal_gpio_set_pupd_register(i32 noundef 25, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #22, !dbg !13726
  %43 = tail call i32 @hal_gpio_set_pupd_register(i32 noundef 29, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #22, !dbg !13727
  %44 = load volatile i32, i32* @msdc_pinmux_switch_flag, align 4, !dbg !13728
  %45 = or i32 %44, 32, !dbg !13728
  store volatile i32 %45, i32* @msdc_pinmux_switch_flag, align 4, !dbg !13728
  br label %46, !dbg !13729

46:                                               ; preds = %26, %37, %23
  %47 = tail call zeroext i8 @msdc_get_pinmux(i32 noundef 4) #23, !dbg !13730
  %48 = icmp eq i8 %47, 2, !dbg !13732
  br i1 %48, label %49, label %69, !dbg !13733

49:                                               ; preds = %46
  %50 = tail call i32 @hal_pinmux_set_function(i32 noundef 4, i8 noundef zeroext 0) #22, !dbg !13734
  %51 = tail call i32 @hal_pinmux_set_function(i32 noundef 5, i8 noundef zeroext 0) #22, !dbg !13736
  %52 = tail call i32 @hal_pinmux_set_function(i32 noundef 6, i8 noundef zeroext 0) #22, !dbg !13737
  %53 = tail call i32 @hal_gpio_set_pupd_register(i32 noundef 4, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #22, !dbg !13738
  %54 = tail call i32 @hal_gpio_set_pupd_register(i32 noundef 5, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #22, !dbg !13739
  %55 = tail call i32 @hal_gpio_set_pupd_register(i32 noundef 6, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #22, !dbg !13740
  %56 = load volatile i32, i32* @msdc_pinmux_switch_flag, align 4, !dbg !13741
  %57 = or i32 %56, 4, !dbg !13741
  store volatile i32 %57, i32* @msdc_pinmux_switch_flag, align 4, !dbg !13741
  %58 = tail call zeroext i8 @msdc_get_pinmux(i32 noundef 9) #23, !dbg !13742
  %59 = icmp eq i8 %58, 2, !dbg !13744
  br i1 %59, label %60, label %69, !dbg !13745

60:                                               ; preds = %49
  %61 = tail call i32 @hal_pinmux_set_function(i32 noundef 7, i8 noundef zeroext 0) #22, !dbg !13746
  %62 = tail call i32 @hal_pinmux_set_function(i32 noundef 8, i8 noundef zeroext 0) #22, !dbg !13748
  %63 = tail call i32 @hal_pinmux_set_function(i32 noundef 9, i8 noundef zeroext 0) #22, !dbg !13749
  %64 = tail call i32 @hal_gpio_set_pupd_register(i32 noundef 7, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #22, !dbg !13750
  %65 = tail call i32 @hal_gpio_set_pupd_register(i32 noundef 8, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #22, !dbg !13751
  %66 = tail call i32 @hal_gpio_set_pupd_register(i32 noundef 9, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #22, !dbg !13752
  %67 = load volatile i32, i32* @msdc_pinmux_switch_flag, align 4, !dbg !13753
  %68 = or i32 %67, 8, !dbg !13753
  store volatile i32 %68, i32* @msdc_pinmux_switch_flag, align 4, !dbg !13753
  br label %69, !dbg !13754

69:                                               ; preds = %49, %60, %46
  ret void, !dbg !13755
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local zeroext i8 @msdc_get_pinmux(i32 noundef %0) local_unnamed_addr #11 !dbg !13756 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13760, metadata !DIExpression()), !dbg !13765
  call void @llvm.dbg.value(metadata i32 %0, metadata !13761, metadata !DIExpression(DW_OP_constu, 3, DW_OP_shr, DW_OP_stack_value)), !dbg !13765
  call void @llvm.dbg.value(metadata i32 %0, metadata !13762, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_stack_value)), !dbg !13765
  %2 = shl i32 %0, 1, !dbg !13766
  %3 = add i32 %2, -1576924160, !dbg !13767
  %4 = and i32 %3, -16, !dbg !13767
  %5 = inttoptr i32 %4 to i32*, !dbg !13768
  %6 = load volatile i32, i32* %5, align 16, !dbg !13769
  call void @llvm.dbg.value(metadata i32 %6, metadata !13763, metadata !DIExpression()), !dbg !13765
  %7 = shl i32 %0, 2, !dbg !13770
  %8 = and i32 %7, 28, !dbg !13770
  %9 = shl nuw i32 15, %8, !dbg !13771
  %10 = and i32 %6, %9, !dbg !13772
  call void @llvm.dbg.value(metadata i32 %10, metadata !13763, metadata !DIExpression()), !dbg !13765
  %11 = lshr i32 %10, %8, !dbg !13773
  %12 = trunc i32 %11 to i8, !dbg !13774
  call void @llvm.dbg.value(metadata i8 %12, metadata !13764, metadata !DIExpression()), !dbg !13765
  ret i8 %12, !dbg !13775
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i8 @msdc_get_vcore_voltage() local_unnamed_addr #0 !dbg !13776 {
  %1 = tail call zeroext i8 @pmu_get_vcore_voltage() #22, !dbg !13779
  call void @llvm.dbg.value(metadata i8 %1, metadata !13778, metadata !DIExpression()), !dbg !13780
  ret i8 %1, !dbg !13781
}

; Function Attrs: noinline nounwind optsize
define dso_local void @msdc_set_irqmask0(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !13782 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13784, metadata !DIExpression()), !dbg !13787
  call void @llvm.dbg.value(metadata i32 %1, metadata !13785, metadata !DIExpression()), !dbg !13787
  %3 = icmp eq i32 %0, 0, !dbg !13788
  call void @llvm.dbg.value(metadata %struct.msdc_register_t* undef, metadata !13786, metadata !DIExpression()), !dbg !13787
  tail call void @msdc_nvic_set(i32 noundef %0, i1 noundef zeroext false) #23, !dbg !13789
  %4 = select i1 %3, i32* inttoptr (i32 -1610481588 to i32*), i32* inttoptr (i32 -1610416052 to i32*), !dbg !13790
  store volatile i32 %1, i32* %4, align 4, !dbg !13791
  tail call void @msdc_nvic_set(i32 noundef %0, i1 noundef zeroext true) #23, !dbg !13792
  ret void, !dbg !13793
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_BlankCheck(i8* noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".ram_code" !dbg !13794 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13798, metadata !DIExpression()), !dbg !13897
  call void @llvm.dbg.value(metadata i32 %1, metadata !13799, metadata !DIExpression()), !dbg !13897
  call void @llvm.dbg.value(metadata i8* %0, metadata !13800, metadata !DIExpression()), !dbg !13897
  %3 = tail call i32 @BlockSize(i8* noundef %0, i32 noundef %1) #22, !dbg !13898
  call void @llvm.dbg.value(metadata i32 %3, metadata !13895, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shr, DW_OP_stack_value)), !dbg !13897
  call void @llvm.dbg.value(metadata i32 0, metadata !13894, metadata !DIExpression()), !dbg !13897
  call void @llvm.dbg.value(metadata i32* undef, metadata !13896, metadata !DIExpression()), !dbg !13897
  call void @llvm.dbg.value(metadata i32 0, metadata !13894, metadata !DIExpression()), !dbg !13897
  %4 = icmp ult i32 %3, 4, !dbg !13899
  br i1 %4, label %20, label %5, !dbg !13902

5:                                                ; preds = %2
  %6 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !13903
  %7 = bitcast i8* %6 to i32**, !dbg !13903
  %8 = load i32*, i32** %7, align 4, !dbg !13903
  call void @llvm.dbg.value(metadata i32* %8, metadata !13896, metadata !DIExpression()), !dbg !13897
  %9 = lshr i32 %3, 2, !dbg !13904
  call void @llvm.dbg.value(metadata i32 %9, metadata !13895, metadata !DIExpression()), !dbg !13897
  br label %10, !dbg !13902

10:                                               ; preds = %5, %16
  %11 = phi i32* [ %18, %16 ], [ %8, %5 ]
  %12 = phi i32 [ %17, %16 ], [ 0, %5 ]
  call void @llvm.dbg.value(metadata i32* %11, metadata !13896, metadata !DIExpression()), !dbg !13897
  call void @llvm.dbg.value(metadata i32 %12, metadata !13894, metadata !DIExpression()), !dbg !13897
  %13 = load i32, i32* %11, align 4, !dbg !13905
  %14 = icmp eq i32 %13, -1, !dbg !13908
  br i1 %14, label %16, label %15, !dbg !13909

15:                                               ; preds = %10
  tail call void @Flash_ReturnReady() #22, !dbg !13910
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.255, i32 0, i32 0), i32 noundef 81, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.SFI_BlankCheck, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.256, i32 0, i32 0)) #25, !dbg !13910
  unreachable, !dbg !13910

16:                                               ; preds = %10
  %17 = add nuw nsw i32 %12, 1, !dbg !13915
  call void @llvm.dbg.value(metadata i32 %17, metadata !13894, metadata !DIExpression()), !dbg !13897
  %18 = getelementptr inbounds i32, i32* %11, i32 1, !dbg !13916
  call void @llvm.dbg.value(metadata i32* %18, metadata !13896, metadata !DIExpression()), !dbg !13897
  %19 = icmp eq i32 %17, %9, !dbg !13899
  br i1 %19, label %20, label %10, !dbg !13902, !llvm.loop !13917

20:                                               ; preds = %16, %2
  ret void, !dbg !13919
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define dso_local i32 @SFI_ReverseByteOrder(i32 noundef %0) local_unnamed_addr #18 section ".ram_code" !dbg !13920 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13922, metadata !DIExpression()), !dbg !13924
  call void @llvm.dbg.value(metadata i32 0, metadata !13923, metadata !DIExpression()), !dbg !13924
  call void @llvm.dbg.value(metadata i32 %0, metadata !13923, metadata !DIExpression(DW_OP_constu, 24, DW_OP_shr, DW_OP_stack_value)), !dbg !13924
  call void @llvm.dbg.value(metadata !DIArgList(i32 %0, i32 %0), metadata !13923, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 24, DW_OP_shr, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_shr, DW_OP_constu, 65280, DW_OP_and, DW_OP_or, DW_OP_stack_value)), !dbg !13924
  call void @llvm.dbg.value(metadata !DIArgList(i32 %0, i32 %0, i32 %0), metadata !13923, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 24, DW_OP_shr, DW_OP_LLVM_arg, 2, DW_OP_constu, 8, DW_OP_shr, DW_OP_constu, 65280, DW_OP_and, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_shl, DW_OP_constu, 16711680, DW_OP_and, DW_OP_or, DW_OP_stack_value)), !dbg !13924
  %2 = tail call i32 @llvm.bswap.i32(i32 %0), !dbg !13925
  call void @llvm.dbg.value(metadata i32 %2, metadata !13923, metadata !DIExpression()), !dbg !13924
  ret i32 %2, !dbg !13926
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_MacEnable(i16 noundef zeroext %0) local_unnamed_addr #0 section ".tcm_code" !dbg !13927 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !13932, metadata !DIExpression()), !dbg !13934
  %2 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !13935
  %3 = or i32 %2, 512, !dbg !13935
  store volatile i32 %3, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !13935
  %4 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !13938
  call void @llvm.dbg.value(metadata i32 %4, metadata !13933, metadata !DIExpression()), !dbg !13934
  switch i16 %0, label %6 [
    i16 0, label %7
    i16 1, label %5
  ], !dbg !13939

5:                                                ; preds = %1
  br label %7, !dbg !13940

6:                                                ; preds = %1
  tail call void @Flash_ReturnReady() #22, !dbg !13944
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.255, i32 0, i32 0), i32 noundef 127, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.SFI_MacEnable, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.256, i32 0, i32 0)) #25, !dbg !13944
  unreachable, !dbg !13944

7:                                                ; preds = %1, %5
  %8 = phi i32* [ inttoptr (i32 -1610350528 to i32*), %5 ], [ inttoptr (i32 -1610350588 to i32*), %1 ]
  %9 = load volatile i32, i32* %8, align 4, !dbg !13949
  call void @llvm.dbg.value(metadata !DIArgList(i32 %9, i32 %4), metadata !13933, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 4, DW_OP_shl, DW_OP_constu, 16, DW_OP_and, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !13934
  call void @llvm.dbg.value(metadata !DIArgList(i32 %9, i32 %4), metadata !13933, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 4, DW_OP_shl, DW_OP_constu, 16, DW_OP_and, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_constu, 8, DW_OP_or, DW_OP_stack_value)), !dbg !13934
  br label %10, !dbg !13950

10:                                               ; preds = %10, %7
  %11 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !13951
  %12 = and i32 %11, 8192, !dbg !13952
  %13 = icmp eq i32 %12, 0, !dbg !13953
  br i1 %13, label %10, label %14, !dbg !13950, !llvm.loop !13954

14:                                               ; preds = %10, %14
  %15 = load volatile i32, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !13956
  %16 = and i32 %15, 256, !dbg !13957
  %17 = icmp eq i32 %16, 0, !dbg !13958
  br i1 %17, label %14, label %18, !dbg !13959, !llvm.loop !13960

18:                                               ; preds = %14
  %19 = shl i32 %9, 4, !dbg !13949
  call void @llvm.dbg.value(metadata !DIArgList(i32 %19, i32 %4), metadata !13933, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 16, DW_OP_and, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_constu, 8, DW_OP_or, DW_OP_stack_value)), !dbg !13934
  %20 = and i32 %19, 16, !dbg !13949
  call void @llvm.dbg.value(metadata !DIArgList(i32 %20, i32 %4), metadata !13933, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_constu, 8, DW_OP_or, DW_OP_stack_value)), !dbg !13934
  call void @llvm.dbg.value(metadata i32 undef, metadata !13933, metadata !DIExpression(DW_OP_constu, 8, DW_OP_or, DW_OP_stack_value)), !dbg !13934
  %21 = or i32 %4, %20, !dbg !13962
  %22 = or i32 %21, 8, !dbg !13962
  call void @llvm.dbg.value(metadata i32 %22, metadata !13933, metadata !DIExpression()), !dbg !13934
  store volatile i32 %22, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !13963
  ret void, !dbg !13964
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SFI_MacLeave(i16 zeroext %0) local_unnamed_addr #2 section ".tcm_code" !dbg !13965 {
  call void @llvm.dbg.value(metadata i16 undef, metadata !13967, metadata !DIExpression()), !dbg !13969
  %2 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !13970
  call void @llvm.dbg.value(metadata i32 %2, metadata !13968, metadata !DIExpression()), !dbg !13969
  %3 = and i32 %2, -268435477, !dbg !13971
  call void @llvm.dbg.value(metadata i32 %3, metadata !13968, metadata !DIExpression()), !dbg !13969
  store volatile i32 %3, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !13972
  br label %4, !dbg !13973

4:                                                ; preds = %4, %1
  %5 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !13974
  %6 = and i32 %5, 2, !dbg !13975
  %7 = icmp eq i32 %6, 0, !dbg !13973
  br i1 %7, label %8, label %4, !dbg !13973, !llvm.loop !13976

8:                                                ; preds = %4
  %9 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !13978
  call void @llvm.dbg.value(metadata i32 %9, metadata !13968, metadata !DIExpression()), !dbg !13969
  %10 = and i32 %9, -9, !dbg !13979
  call void @llvm.dbg.value(metadata i32 %10, metadata !13968, metadata !DIExpression()), !dbg !13969
  store volatile i32 %10, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !13980
  br label %11, !dbg !13981

11:                                               ; preds = %11, %8
  %12 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !13982
  %13 = and i32 %12, 8, !dbg !13983
  %14 = icmp eq i32 %13, 0, !dbg !13981
  br i1 %14, label %15, label %11, !dbg !13981, !llvm.loop !13984

15:                                               ; preds = %11
  %16 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !13986, !range !4202
  %17 = icmp eq i8 %16, 0, !dbg !13988
  br i1 %17, label %18, label %21, !dbg !13989

18:                                               ; preds = %15
  %19 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !13990
  %20 = and i32 %19, -513, !dbg !13990
  store volatile i32 %20, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !13990
  br label %21, !dbg !13994

21:                                               ; preds = %18, %15
  ret void, !dbg !13995
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @SFI_MacTrigger(i16 noundef zeroext %0) local_unnamed_addr #2 section ".tcm_code" !dbg !13996 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !14000, metadata !DIExpression()), !dbg !14003
  call void @llvm.dbg.value(metadata i32 0, metadata !14001, metadata !DIExpression()), !dbg !14003
  call void @llvm.dbg.value(metadata i32 0, metadata !14002, metadata !DIExpression()), !dbg !14003
  %2 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !14004
  call void @llvm.dbg.value(metadata i32 %2, metadata !14001, metadata !DIExpression()), !dbg !14003
  call void @llvm.dbg.value(metadata i32 %2, metadata !14001, metadata !DIExpression(DW_OP_constu, 12, DW_OP_or, DW_OP_stack_value)), !dbg !14003
  %3 = icmp eq i16 %0, 1, !dbg !14005
  %4 = select i1 %3, i32 268435468, i32 12, !dbg !14007
  %5 = or i32 %2, %4, !dbg !14007
  call void @llvm.dbg.value(metadata i32 %5, metadata !14001, metadata !DIExpression()), !dbg !14003
  store volatile i32 %5, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !14008
  br label %6, !dbg !14009

6:                                                ; preds = %6, %1
  %7 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !14010
  %8 = and i32 %7, 2, !dbg !14011
  %9 = icmp eq i32 %8, 0, !dbg !14012
  br i1 %9, label %6, label %10, !dbg !14009, !llvm.loop !14013

10:                                               ; preds = %6, %10
  %11 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !14015
  %12 = and i32 %11, 1, !dbg !14016
  %13 = icmp eq i32 %12, 0, !dbg !14017
  br i1 %13, label %14, label %10, !dbg !14017, !llvm.loop !14018

14:                                               ; preds = %10
  ret i32 0, !dbg !14020
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SFI_MacWaitReady(i16 noundef zeroext %0) local_unnamed_addr #2 section ".tcm_code" !dbg !14021 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !14023, metadata !DIExpression()), !dbg !14024
  %2 = tail call i32 @SFI_MacTrigger(i16 noundef zeroext %0) #23, !dbg !14025
  tail call void @SFI_MacLeave(i16 zeroext undef) #23, !dbg !14026
  ret void, !dbg !14027
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_Dev_Command(i16 noundef zeroext %0, i32 noundef %1) local_unnamed_addr #0 section ".tcm_code" !dbg !14028 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !14032, metadata !DIExpression()), !dbg !14037
  call void @llvm.dbg.value(metadata i32 %1, metadata !14033, metadata !DIExpression()), !dbg !14037
  call void @llvm.dbg.value(metadata i32 %1, metadata !14034, metadata !DIExpression()), !dbg !14037
  call void @llvm.dbg.value(metadata i8 0, metadata !14036, metadata !DIExpression()), !dbg !14037
  call void @llvm.dbg.value(metadata i32 0, metadata !14035, metadata !DIExpression()), !dbg !14037
  %3 = icmp eq i32 %1, 0, !dbg !14038
  br i1 %3, label %16, label %4, !dbg !14041

4:                                                ; preds = %2, %4
  %5 = phi i8 [ %12, %4 ], [ 0, %2 ]
  %6 = phi i32 [ %10, %4 ], [ 0, %2 ]
  %7 = phi i32 [ %11, %4 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8 %5, metadata !14036, metadata !DIExpression()), !dbg !14037
  call void @llvm.dbg.value(metadata i32 %6, metadata !14035, metadata !DIExpression()), !dbg !14037
  call void @llvm.dbg.value(metadata i32 %7, metadata !14034, metadata !DIExpression()), !dbg !14037
  %8 = shl i32 %6, 8, !dbg !14042
  %9 = and i32 %7, 255, !dbg !14044
  %10 = or i32 %8, %9, !dbg !14045
  call void @llvm.dbg.value(metadata i32 %10, metadata !14035, metadata !DIExpression()), !dbg !14037
  %11 = lshr i32 %7, 8, !dbg !14046
  call void @llvm.dbg.value(metadata i32 %11, metadata !14034, metadata !DIExpression()), !dbg !14037
  %12 = add nuw nsw i8 %5, 1, !dbg !14047
  call void @llvm.dbg.value(metadata i8 %12, metadata !14036, metadata !DIExpression()), !dbg !14037
  %13 = icmp ult i32 %7, 256, !dbg !14038
  br i1 %13, label %14, label %4, !dbg !14041, !llvm.loop !14048

14:                                               ; preds = %4
  %15 = zext i8 %12 to i32, !dbg !14050
  tail call void @SFI_MacEnable(i16 noundef zeroext %0) #23, !dbg !14052
  store volatile i32 %10, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !14053
  store volatile i32 %15, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !14054
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !14055
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %0) #23, !dbg !14056
  br label %16, !dbg !14057

16:                                               ; preds = %2, %14
  ret void, !dbg !14058
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_Dev_CommandAddress(i16 noundef zeroext %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #0 section ".ram_code" !dbg !14059 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !14063, metadata !DIExpression()), !dbg !14069
  call void @llvm.dbg.value(metadata i8 %1, metadata !14064, metadata !DIExpression()), !dbg !14069
  call void @llvm.dbg.value(metadata i32 %2, metadata !14065, metadata !DIExpression()), !dbg !14069
  call void @llvm.dbg.value(metadata i32 %3, metadata !14066, metadata !DIExpression()), !dbg !14069
  %5 = tail call i32 @SFI_ReverseByteOrder(i32 noundef %2) #23, !dbg !14070
  call void @llvm.dbg.value(metadata i32 %5, metadata !14068, metadata !DIExpression()), !dbg !14069
  %6 = icmp eq i32 %3, 3, !dbg !14071
  br i1 %6, label %7, label %11, !dbg !14073

7:                                                ; preds = %4
  %8 = and i32 %5, -256, !dbg !14074
  %9 = zext i8 %1 to i32, !dbg !14076
  %10 = or i32 %8, %9, !dbg !14077
  call void @llvm.dbg.value(metadata i32 %10, metadata !14067, metadata !DIExpression()), !dbg !14069
  br label %16, !dbg !14078

11:                                               ; preds = %4
  %12 = shl i32 %5, 8, !dbg !14079
  %13 = zext i8 %1 to i32, !dbg !14081
  %14 = or i32 %12, %13, !dbg !14082
  call void @llvm.dbg.value(metadata i32 %14, metadata !14067, metadata !DIExpression()), !dbg !14069
  %15 = lshr i32 %5, 24, !dbg !14083
  call void @llvm.dbg.value(metadata i32 %15, metadata !14068, metadata !DIExpression()), !dbg !14069
  br label %16

16:                                               ; preds = %11, %7
  %17 = phi i32 [ %10, %7 ], [ %14, %11 ], !dbg !14084
  %18 = phi i32 [ %5, %7 ], [ %15, %11 ], !dbg !14069
  call void @llvm.dbg.value(metadata i32 %18, metadata !14068, metadata !DIExpression()), !dbg !14069
  call void @llvm.dbg.value(metadata i32 %17, metadata !14067, metadata !DIExpression()), !dbg !14069
  store volatile i32 %17, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !14085
  store volatile i32 %18, i32* inttoptr (i32 -1610348540 to i32*), align 4, !dbg !14086
  %19 = add i32 %3, 1, !dbg !14087
  store volatile i32 %19, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !14088
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !14089
  tail call void @SFI_MacEnable(i16 noundef zeroext %0) #23, !dbg !14090
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %0) #23, !dbg !14091
  ret void, !dbg !14092
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define dso_local i32 @SFI_GPRAM_Write_C1A3(i32 noundef %0, i32 noundef %1) local_unnamed_addr #18 section ".ram_code" !dbg !14093 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14097, metadata !DIExpression()), !dbg !14099
  call void @llvm.dbg.value(metadata i32 %1, metadata !14098, metadata !DIExpression()), !dbg !14099
  %3 = tail call i32 @SFI_ReverseByteOrder(i32 noundef %1) #23, !dbg !14100
  %4 = and i32 %3, -256, !dbg !14101
  %5 = and i32 %0, 255, !dbg !14102
  %6 = or i32 %4, %5, !dbg !14103
  ret i32 %6, !dbg !14104
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @SFI_GPRAM_Write_C1A4(i32 noundef %0, i32 noundef %1, i8** nocapture noundef %2, i32* nocapture noundef %3) local_unnamed_addr #9 section ".ram_code" !dbg !14105 {
  %5 = alloca %struct.anon, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !14110, metadata !DIExpression()), !dbg !14125
  call void @llvm.dbg.value(metadata i32 %1, metadata !14111, metadata !DIExpression()), !dbg !14125
  call void @llvm.dbg.value(metadata i8** %2, metadata !14112, metadata !DIExpression()), !dbg !14125
  call void @llvm.dbg.value(metadata i32* %3, metadata !14113, metadata !DIExpression()), !dbg !14125
  %6 = bitcast %struct.anon* %5 to i8*, !dbg !14126
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #24, !dbg !14126
  call void @llvm.dbg.declare(metadata %struct.anon* %5, metadata !14114, metadata !DIExpression()), !dbg !14127
  %7 = tail call i32 @SFI_ReverseByteOrder(i32 noundef %1) #23, !dbg !14128
  call void @llvm.dbg.value(metadata i32 %7, metadata !14123, metadata !DIExpression()), !dbg !14125
  call void @llvm.dbg.value(metadata !DIArgList(i32 %7, i32 %0), metadata !14122, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 8, DW_OP_shl, DW_OP_LLVM_arg, 1, DW_OP_constu, 255, DW_OP_and, DW_OP_or, DW_OP_stack_value)), !dbg !14125
  %8 = lshr i32 %7, 24, !dbg !14129
  call void @llvm.dbg.value(metadata i32 %8, metadata !14123, metadata !DIExpression()), !dbg !14125
  %9 = trunc i32 %8 to i8, !dbg !14130
  %10 = bitcast %struct.anon* %5 to [4 x i8]*, !dbg !14131
  store i8 %9, i8* %6, align 4, !dbg !14132
  call void @llvm.dbg.value(metadata i32 1, metadata !14124, metadata !DIExpression()), !dbg !14125
  %11 = load i8*, i8** %2, align 4, !dbg !14133
  br label %12, !dbg !14137

12:                                               ; preds = %4, %12
  %13 = phi i8* [ %11, %4 ], [ %17, %12 ], !dbg !14133
  %14 = phi i32 [ 1, %4 ], [ %18, %12 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !14124, metadata !DIExpression()), !dbg !14125
  %15 = load i8, i8* %13, align 1, !dbg !14138
  %16 = getelementptr inbounds [4 x i8], [4 x i8]* %10, i32 0, i32 %14, !dbg !14139
  store i8 %15, i8* %16, align 1, !dbg !14140
  %17 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !14141
  store i8* %17, i8** %2, align 4, !dbg !14141
  %18 = add nuw nsw i32 %14, 1, !dbg !14142
  call void @llvm.dbg.value(metadata i32 %18, metadata !14124, metadata !DIExpression()), !dbg !14125
  %19 = icmp eq i32 %18, 4, !dbg !14143
  br i1 %19, label %20, label %12, !dbg !14137, !llvm.loop !14144

20:                                               ; preds = %12
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %5, i32 0, i32 0, !dbg !14146
  %22 = load i32, i32* %21, align 4, !dbg !14146
  call void @llvm.dbg.value(metadata i32 %22, metadata !14123, metadata !DIExpression()), !dbg !14125
  %23 = load i32, i32* %3, align 4, !dbg !14147
  %24 = tail call i32 @llvm.usub.sat.i32(i32 %23, i32 3), !dbg !14148
  %25 = shl i32 %7, 8, !dbg !14149
  call void @llvm.dbg.value(metadata !DIArgList(i32 %25, i32 %0), metadata !14122, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 255, DW_OP_and, DW_OP_or, DW_OP_stack_value)), !dbg !14125
  %26 = and i32 %0, 255, !dbg !14150
  call void @llvm.dbg.value(metadata !DIArgList(i32 %7, i32 %26), metadata !14122, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 8, DW_OP_shl, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !14125
  %27 = or i32 %25, %26, !dbg !14151
  call void @llvm.dbg.value(metadata i32 %27, metadata !14122, metadata !DIExpression()), !dbg !14125
  store i32 %24, i32* %3, align 4, !dbg !14152
  store volatile i32 %22, i32* inttoptr (i32 -1610348540 to i32*), align 4, !dbg !14153
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #24, !dbg !14154
  ret i32 %27, !dbg !14155
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @SFI_GPRAM_Write(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #9 section ".ram_code" !dbg !14156 {
  %4 = alloca %struct.anon, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !14160, metadata !DIExpression()), !dbg !14166
  call void @llvm.dbg.value(metadata i8* %1, metadata !14161, metadata !DIExpression()), !dbg !14166
  call void @llvm.dbg.value(metadata i32 %2, metadata !14162, metadata !DIExpression()), !dbg !14166
  call void @llvm.dbg.value(metadata i8* %1, metadata !14164, metadata !DIExpression()), !dbg !14166
  %5 = bitcast %struct.anon* %4 to i8*, !dbg !14167
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !14167
  call void @llvm.dbg.declare(metadata %struct.anon* %4, metadata !14165, metadata !DIExpression()), !dbg !14168
  %6 = add i32 %0, -1610348544, !dbg !14169
  call void @llvm.dbg.value(metadata i32 %6, metadata !14160, metadata !DIExpression()), !dbg !14166
  %7 = ptrtoint i8* %1 to i32, !dbg !14170
  %8 = and i32 %7, 3, !dbg !14172
  %9 = icmp eq i32 %8, 0, !dbg !14173
  br i1 %9, label %10, label %23, !dbg !14174

10:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !14164, metadata !DIExpression()), !dbg !14166
  call void @llvm.dbg.value(metadata i32 %2, metadata !14162, metadata !DIExpression()), !dbg !14166
  call void @llvm.dbg.value(metadata i32 %6, metadata !14160, metadata !DIExpression()), !dbg !14166
  %11 = icmp sgt i32 %2, 0, !dbg !14175
  br i1 %11, label %12, label %72, !dbg !14179

12:                                               ; preds = %10, %12
  %13 = phi i8* [ %20, %12 ], [ %1, %10 ]
  %14 = phi i32 [ %21, %12 ], [ %2, %10 ]
  %15 = phi i32 [ %19, %12 ], [ %6, %10 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !14164, metadata !DIExpression()), !dbg !14166
  call void @llvm.dbg.value(metadata i32 %14, metadata !14162, metadata !DIExpression()), !dbg !14166
  call void @llvm.dbg.value(metadata i32 %15, metadata !14160, metadata !DIExpression()), !dbg !14166
  %16 = bitcast i8* %13 to i32*, !dbg !14180
  %17 = load i32, i32* %16, align 4, !dbg !14180
  %18 = inttoptr i32 %15 to i32*, !dbg !14180
  store volatile i32 %17, i32* %18, align 4, !dbg !14180
  %19 = add i32 %15, 4, !dbg !14182
  call void @llvm.dbg.value(metadata i32 %19, metadata !14160, metadata !DIExpression()), !dbg !14166
  %20 = getelementptr inbounds i8, i8* %13, i32 4, !dbg !14183
  call void @llvm.dbg.value(metadata i8* %20, metadata !14164, metadata !DIExpression()), !dbg !14166
  %21 = add nsw i32 %14, -4, !dbg !14184
  call void @llvm.dbg.value(metadata i32 %21, metadata !14162, metadata !DIExpression()), !dbg !14166
  %22 = icmp ugt i32 %14, 4, !dbg !14175
  br i1 %22, label %12, label %72, !dbg !14179, !llvm.loop !14185

23:                                               ; preds = %3
  %24 = and i32 %7, 1, !dbg !14187
  %25 = icmp eq i32 %24, 0, !dbg !14189
  call void @llvm.dbg.value(metadata i8* %1, metadata !14164, metadata !DIExpression()), !dbg !14166
  call void @llvm.dbg.value(metadata i8* %1, metadata !14164, metadata !DIExpression()), !dbg !14166
  call void @llvm.dbg.value(metadata i32 %2, metadata !14162, metadata !DIExpression()), !dbg !14166
  call void @llvm.dbg.value(metadata i32 %2, metadata !14162, metadata !DIExpression()), !dbg !14166
  call void @llvm.dbg.value(metadata i32 %6, metadata !14160, metadata !DIExpression()), !dbg !14166
  call void @llvm.dbg.value(metadata i32 %6, metadata !14160, metadata !DIExpression()), !dbg !14166
  %26 = icmp sgt i32 %2, 0, !dbg !14190
  br i1 %25, label %31, label %27, !dbg !14191

27:                                               ; preds = %23
  br i1 %26, label %28, label %72, !dbg !14192

28:                                               ; preds = %27
  %29 = bitcast %struct.anon* %4 to [4 x i8]*
  %30 = getelementptr inbounds %struct.anon, %struct.anon* %4, i32 0, i32 0
  br label %52, !dbg !14192

31:                                               ; preds = %23
  br i1 %26, label %32, label %72, !dbg !14195

32:                                               ; preds = %31
  %33 = bitcast %struct.anon* %4 to [2 x i16]*
  %34 = bitcast %struct.anon* %4 to i16*
  %35 = getelementptr inbounds [2 x i16], [2 x i16]* %33, i32 0, i32 1
  %36 = getelementptr inbounds %struct.anon, %struct.anon* %4, i32 0, i32 0
  br label %37, !dbg !14195

37:                                               ; preds = %32, %37
  %38 = phi i8* [ %1, %32 ], [ %49, %37 ]
  %39 = phi i32 [ %2, %32 ], [ %50, %37 ]
  %40 = phi i32 [ %6, %32 ], [ %48, %37 ]
  call void @llvm.dbg.value(metadata i8* %38, metadata !14164, metadata !DIExpression()), !dbg !14166
  call void @llvm.dbg.value(metadata i32 %39, metadata !14162, metadata !DIExpression()), !dbg !14166
  call void @llvm.dbg.value(metadata i32 %40, metadata !14160, metadata !DIExpression()), !dbg !14166
  %41 = bitcast i8* %38 to i16*, !dbg !14198
  %42 = load i16, i16* %41, align 2, !dbg !14198
  store i16 %42, i16* %34, align 4, !dbg !14201
  %43 = getelementptr inbounds i8, i8* %38, i32 2, !dbg !14202
  %44 = bitcast i8* %43 to i16*, !dbg !14202
  %45 = load i16, i16* %44, align 2, !dbg !14203
  store i16 %45, i16* %35, align 2, !dbg !14204
  %46 = load i32, i32* %36, align 4, !dbg !14205
  %47 = inttoptr i32 %40 to i32*, !dbg !14205
  store volatile i32 %46, i32* %47, align 4, !dbg !14205
  %48 = add i32 %40, 4, !dbg !14206
  call void @llvm.dbg.value(metadata i32 %48, metadata !14160, metadata !DIExpression()), !dbg !14166
  %49 = getelementptr inbounds i8, i8* %38, i32 4, !dbg !14207
  call void @llvm.dbg.value(metadata i8* %49, metadata !14164, metadata !DIExpression()), !dbg !14166
  %50 = add nsw i32 %39, -4, !dbg !14208
  call void @llvm.dbg.value(metadata i32 %50, metadata !14162, metadata !DIExpression()), !dbg !14166
  %51 = icmp ugt i32 %39, 4, !dbg !14209
  br i1 %51, label %37, label %72, !dbg !14195, !llvm.loop !14210

52:                                               ; preds = %28, %66
  %53 = phi i8* [ %1, %28 ], [ %59, %66 ]
  %54 = phi i32 [ %2, %28 ], [ %70, %66 ]
  %55 = phi i32 [ %6, %28 ], [ %69, %66 ]
  call void @llvm.dbg.value(metadata i8* %53, metadata !14164, metadata !DIExpression()), !dbg !14166
  call void @llvm.dbg.value(metadata i32 %54, metadata !14162, metadata !DIExpression()), !dbg !14166
  call void @llvm.dbg.value(metadata i32 %55, metadata !14160, metadata !DIExpression()), !dbg !14166
  call void @llvm.dbg.value(metadata i8* %53, metadata !14164, metadata !DIExpression()), !dbg !14166
  call void @llvm.dbg.value(metadata i32 0, metadata !14163, metadata !DIExpression()), !dbg !14166
  br label %56, !dbg !14212

56:                                               ; preds = %52, %56
  %57 = phi i8* [ %53, %52 ], [ %59, %56 ]
  %58 = phi i32 [ 0, %52 ], [ %62, %56 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !14164, metadata !DIExpression()), !dbg !14166
  call void @llvm.dbg.value(metadata i32 %58, metadata !14163, metadata !DIExpression()), !dbg !14166
  %59 = getelementptr inbounds i8, i8* %57, i32 1, !dbg !14216
  call void @llvm.dbg.value(metadata i8* %59, metadata !14164, metadata !DIExpression()), !dbg !14166
  %60 = load i8, i8* %57, align 1, !dbg !14219
  %61 = getelementptr inbounds [4 x i8], [4 x i8]* %29, i32 0, i32 %58, !dbg !14220
  store i8 %60, i8* %61, align 1, !dbg !14221
  %62 = add nuw nsw i32 %58, 1, !dbg !14222
  call void @llvm.dbg.value(metadata i32 %62, metadata !14163, metadata !DIExpression()), !dbg !14166
  %63 = icmp ult i32 %58, 3, !dbg !14223
  %64 = icmp ult i32 %62, %54, !dbg !14224
  %65 = select i1 %63, i1 %64, i1 false, !dbg !14224
  br i1 %65, label %56, label %66, !dbg !14212, !llvm.loop !14225

66:                                               ; preds = %56
  %67 = load i32, i32* %30, align 4, !dbg !14227
  %68 = inttoptr i32 %55 to i32*, !dbg !14227
  store volatile i32 %67, i32* %68, align 4, !dbg !14227
  %69 = add i32 %55, 4, !dbg !14228
  call void @llvm.dbg.value(metadata i32 %69, metadata !14160, metadata !DIExpression()), !dbg !14166
  %70 = add nsw i32 %54, -4, !dbg !14229
  call void @llvm.dbg.value(metadata i8* %59, metadata !14164, metadata !DIExpression()), !dbg !14166
  call void @llvm.dbg.value(metadata i32 %70, metadata !14162, metadata !DIExpression()), !dbg !14166
  %71 = icmp sgt i32 %54, 4, !dbg !14230
  br i1 %71, label %52, label %72, !dbg !14192, !llvm.loop !14231

72:                                               ; preds = %66, %37, %12, %27, %31, %10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !14233
  ret void, !dbg !14233
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* nocapture noundef readonly %1, i8* nocapture noundef writeonly %2, i16 noundef zeroext %3, i16 noundef zeroext %4) local_unnamed_addr #0 section ".ram_code" !dbg !14234 {
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i16 %0, metadata !14238, metadata !DIExpression()), !dbg !14248
  call void @llvm.dbg.value(metadata i8* %1, metadata !14239, metadata !DIExpression()), !dbg !14248
  call void @llvm.dbg.value(metadata i8* %2, metadata !14240, metadata !DIExpression()), !dbg !14248
  call void @llvm.dbg.value(metadata i16 %3, metadata !14241, metadata !DIExpression()), !dbg !14248
  call void @llvm.dbg.value(metadata i16 %4, metadata !14242, metadata !DIExpression()), !dbg !14248
  %7 = bitcast i32* %6 to i8*, !dbg !14249
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #24, !dbg !14249
  call void @llvm.dbg.value(metadata i8* %7, metadata !14247, metadata !DIExpression()), !dbg !14248
  call void @llvm.dbg.value(metadata i32 0, metadata !14244, metadata !DIExpression()), !dbg !14248
  call void @llvm.dbg.value(metadata i8* inttoptr (i32 -1610348544 to i8*), metadata !14246, metadata !DIExpression()), !dbg !14248
  %8 = zext i16 %3 to i32
  call void @llvm.dbg.value(metadata i8* inttoptr (i32 -1610348544 to i8*), metadata !14246, metadata !DIExpression()), !dbg !14248
  call void @llvm.dbg.value(metadata i32 0, metadata !14244, metadata !DIExpression()), !dbg !14248
  %9 = icmp eq i16 %3, 0, !dbg !14250
  br i1 %9, label %33, label %10, !dbg !14253

10:                                               ; preds = %5, %27
  %11 = phi i8* [ %31, %27 ], [ inttoptr (i32 -1610348544 to i8*), %5 ]
  %12 = phi i32 [ %29, %27 ], [ 0, %5 ]
  call void @llvm.dbg.value(metadata i8* %11, metadata !14246, metadata !DIExpression()), !dbg !14248
  call void @llvm.dbg.value(metadata i32 %12, metadata !14244, metadata !DIExpression()), !dbg !14248
  call void @llvm.dbg.value(metadata i32 0, metadata !14245, metadata !DIExpression()), !dbg !14248
  call void @llvm.dbg.value(metadata i32 0, metadata !14243, metadata !DIExpression()), !dbg !14248
  store i32 0, i32* %6, align 4, !dbg !14254
  call void @llvm.dbg.value(metadata i32 0, metadata !14245, metadata !DIExpression()), !dbg !14248
  call void @llvm.dbg.value(metadata i32 %12, metadata !14244, metadata !DIExpression()), !dbg !14248
  %13 = icmp ult i32 %12, %8, !dbg !14257
  br i1 %13, label %14, label %27, !dbg !14259

14:                                               ; preds = %10, %14
  %15 = phi i32 [ %21, %14 ], [ 0, %10 ]
  %16 = phi i32 [ %20, %14 ], [ %12, %10 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !14245, metadata !DIExpression()), !dbg !14248
  call void @llvm.dbg.value(metadata i32 %16, metadata !14244, metadata !DIExpression()), !dbg !14248
  %17 = getelementptr inbounds i8, i8* %1, i32 %16, !dbg !14260
  %18 = load i8, i8* %17, align 1, !dbg !14260
  %19 = getelementptr inbounds i8, i8* %7, i32 %15, !dbg !14262
  store i8 %18, i8* %19, align 1, !dbg !14263
  %20 = add nuw nsw i32 %16, 1, !dbg !14264
  call void @llvm.dbg.value(metadata i32 %20, metadata !14244, metadata !DIExpression()), !dbg !14248
  %21 = add nuw nsw i32 %15, 1, !dbg !14265
  call void @llvm.dbg.value(metadata i32 %21, metadata !14245, metadata !DIExpression()), !dbg !14248
  %22 = icmp ult i32 %20, %8, !dbg !14257
  %23 = icmp ult i32 %15, 3, !dbg !14266
  %24 = select i1 %22, i1 %23, i1 false, !dbg !14266
  br i1 %24, label %14, label %25, !dbg !14259, !llvm.loop !14267

25:                                               ; preds = %14
  %26 = load i32, i32* %6, align 4, !dbg !14269
  br label %27, !dbg !14269

27:                                               ; preds = %25, %10
  %28 = phi i32 [ 0, %10 ], [ %26, %25 ], !dbg !14269
  %29 = phi i32 [ %12, %10 ], [ %20, %25 ], !dbg !14270
  call void @llvm.dbg.value(metadata i32 %28, metadata !14243, metadata !DIExpression()), !dbg !14248
  %30 = bitcast i8* %11 to i32*, !dbg !14269
  store volatile i32 %28, i32* %30, align 4, !dbg !14269
  %31 = getelementptr inbounds i8, i8* %11, i32 4, !dbg !14271
  call void @llvm.dbg.value(metadata i8* %31, metadata !14246, metadata !DIExpression()), !dbg !14248
  call void @llvm.dbg.value(metadata i32 %29, metadata !14244, metadata !DIExpression()), !dbg !14248
  %32 = icmp ult i32 %29, %8, !dbg !14250
  br i1 %32, label %10, label %33, !dbg !14253, !llvm.loop !14272

33:                                               ; preds = %27, %5
  store volatile i32 %8, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !14274
  %34 = zext i16 %4 to i32, !dbg !14275
  store volatile i32 %34, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !14276
  tail call void @SFI_MacEnable(i16 noundef zeroext %0) #23, !dbg !14277
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %0) #23, !dbg !14278
  call void @llvm.dbg.value(metadata !DIArgList(i8* inttoptr (i32 -1610348544 to i8*), i32 %8), metadata !14246, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !14248
  call void @llvm.dbg.value(metadata i8* %2, metadata !14240, metadata !DIExpression()), !dbg !14248
  call void @llvm.dbg.value(metadata i32 0, metadata !14244, metadata !DIExpression()), !dbg !14248
  %35 = icmp eq i16 %4, 0, !dbg !14279
  br i1 %35, label %47, label %36, !dbg !14282

36:                                               ; preds = %33
  %37 = getelementptr inbounds i8, i8* inttoptr (i32 -1610348544 to i8*), i32 %8, !dbg !14283
  call void @llvm.dbg.value(metadata i8* %37, metadata !14246, metadata !DIExpression()), !dbg !14248
  br label %38, !dbg !14282

38:                                               ; preds = %36, %38
  %39 = phi i8* [ %44, %38 ], [ %2, %36 ]
  %40 = phi i8* [ %45, %38 ], [ %37, %36 ]
  %41 = phi i32 [ %43, %38 ], [ 0, %36 ]
  call void @llvm.dbg.value(metadata i8* %39, metadata !14240, metadata !DIExpression()), !dbg !14248
  call void @llvm.dbg.value(metadata i8* %40, metadata !14246, metadata !DIExpression()), !dbg !14248
  call void @llvm.dbg.value(metadata i32 %41, metadata !14244, metadata !DIExpression()), !dbg !14248
  %42 = load volatile i8, i8* %40, align 1, !dbg !14284
  store i8 %42, i8* %39, align 1, !dbg !14286
  %43 = add nuw nsw i32 %41, 1, !dbg !14287
  call void @llvm.dbg.value(metadata i32 %43, metadata !14244, metadata !DIExpression()), !dbg !14248
  %44 = getelementptr inbounds i8, i8* %39, i32 1, !dbg !14288
  call void @llvm.dbg.value(metadata i8* %44, metadata !14240, metadata !DIExpression()), !dbg !14248
  %45 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !14289
  call void @llvm.dbg.value(metadata i8* %45, metadata !14246, metadata !DIExpression()), !dbg !14248
  %46 = icmp eq i32 %43, %34, !dbg !14279
  br i1 %46, label %47, label %38, !dbg !14282, !llvm.loop !14290

47:                                               ; preds = %38, %33
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #24, !dbg !14292
  ret void, !dbg !14292
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_Dev_Command_List(i16 noundef zeroext %0, i8* noundef readonly %1) local_unnamed_addr #0 section ".ram_code" !dbg !14293 {
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i16 %0, metadata !14297, metadata !DIExpression()), !dbg !14305
  call void @llvm.dbg.value(metadata i8* %1, metadata !14298, metadata !DIExpression()), !dbg !14305
  call void @llvm.dbg.value(metadata i32 0, metadata !14299, metadata !DIExpression()), !dbg !14305
  %4 = icmp eq i8* %1, null, !dbg !14306
  br i1 %4, label %67, label %5, !dbg !14308

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !14309
  call void @llvm.dbg.value(metadata i32 %27, metadata !14300, metadata !DIExpression()), !dbg !14305
  %7 = icmp eq i16 %0, 0
  br label %8, !dbg !14310

8:                                                ; preds = %61, %5
  %9 = phi i32 [ 0, %5 ], [ %66, %61 ], !dbg !14305
  call void @llvm.dbg.value(metadata i32 %9, metadata !14299, metadata !DIExpression()), !dbg !14305
  %10 = getelementptr inbounds i8, i8* %1, i32 %9, !dbg !14311
  %11 = load i8, i8* %10, align 1, !dbg !14311
  switch i8 %11, label %26 [
    i8 1, label %12
    i8 2, label %12
    i8 3, label %19
  ], !dbg !14312

12:                                               ; preds = %8, %8
  br i1 %7, label %13, label %16, !dbg !14313

13:                                               ; preds = %12
  %14 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !14316
  %15 = and i32 %14, -2, !dbg !14316
  store volatile i32 %15, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !14316
  br label %41, !dbg !14320

16:                                               ; preds = %12
  %17 = load volatile i32, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !14321
  %18 = and i32 %17, -2, !dbg !14321
  store volatile i32 %18, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !14321
  br label %41

19:                                               ; preds = %8
  br i1 %7, label %20, label %23, !dbg !14324

20:                                               ; preds = %19
  %21 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !14326
  %22 = or i32 %21, 1, !dbg !14326
  store volatile i32 %22, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !14326
  br label %41, !dbg !14330

23:                                               ; preds = %19
  %24 = load volatile i32, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !14331
  %25 = or i32 %24, 1, !dbg !14331
  store volatile i32 %25, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !14331
  br label %41

26:                                               ; preds = %8
  %27 = and i32 %6, 1, !dbg !14309
  %28 = icmp eq i32 %27, 0, !dbg !14334
  br i1 %7, label %29, label %35, !dbg !14337

29:                                               ; preds = %26
  %30 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !14338
  br i1 %28, label %33, label %31, !dbg !14341

31:                                               ; preds = %29
  %32 = or i32 %30, 1, !dbg !14338
  store volatile i32 %32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !14338
  br label %67, !dbg !14338

33:                                               ; preds = %29
  %34 = and i32 %30, -2, !dbg !14338
  store volatile i32 %34, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !14338
  br label %67

35:                                               ; preds = %26
  %36 = load volatile i32, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !14342
  br i1 %28, label %39, label %37, !dbg !14345

37:                                               ; preds = %35
  %38 = or i32 %36, 1, !dbg !14342
  store volatile i32 %38, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !14342
  br label %67, !dbg !14342

39:                                               ; preds = %35
  %40 = and i32 %36, -2, !dbg !14342
  store volatile i32 %40, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !14342
  br label %67

41:                                               ; preds = %20, %23, %13, %16
  %42 = add i32 %9, 2, !dbg !14346
  %43 = getelementptr inbounds i8, i8* %1, i32 %42, !dbg !14347
  %44 = load i8, i8* %43, align 1, !dbg !14347
  %45 = icmp eq i8 %44, 5, !dbg !14348
  br i1 %45, label %46, label %56, !dbg !14349

46:                                               ; preds = %41
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #24, !dbg !14350
  %47 = add i32 %9, 3
  %48 = getelementptr inbounds i8, i8* %1, i32 %47
  br label %49, !dbg !14351

49:                                               ; preds = %49, %46
  call void @llvm.dbg.value(metadata i8* %3, metadata !14301, metadata !DIExpression(DW_OP_deref)), !dbg !14352
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %43, i8* noundef nonnull %3, i16 noundef zeroext 1, i16 noundef zeroext 1) #23, !dbg !14353
  %50 = load i8, i8* %3, align 1, !dbg !14355
  call void @llvm.dbg.value(metadata i8 %50, metadata !14301, metadata !DIExpression()), !dbg !14352
  %51 = load i8, i8* %48, align 1, !dbg !14356
  %52 = and i8 %51, %50, !dbg !14357
  %53 = icmp eq i8 %52, 0, !dbg !14358
  br i1 %53, label %54, label %49, !dbg !14358, !llvm.loop !14359

54:                                               ; preds = %49
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #24, !dbg !14361
  %55 = add i32 %9, 1, !dbg !14362
  br label %61, !dbg !14363

56:                                               ; preds = %41
  %57 = add i32 %9, 1, !dbg !14364
  %58 = getelementptr inbounds i8, i8* %1, i32 %57, !dbg !14366
  %59 = load i8, i8* %58, align 1, !dbg !14366
  %60 = zext i8 %59 to i16, !dbg !14366
  tail call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %43, i8* noundef null, i16 noundef zeroext %60, i16 noundef zeroext 0) #23, !dbg !14367
  br label %61

61:                                               ; preds = %56, %54
  %62 = phi i32 [ %57, %56 ], [ %55, %54 ], !dbg !14362
  %63 = getelementptr inbounds i8, i8* %1, i32 %62, !dbg !14368
  %64 = load i8, i8* %63, align 1, !dbg !14368
  %65 = zext i8 %64 to i32, !dbg !14368
  %66 = add i32 %42, %65, !dbg !14369
  call void @llvm.dbg.value(metadata i32 %66, metadata !14299, metadata !DIExpression()), !dbg !14305
  br label %8, !dbg !14310, !llvm.loop !14370

67:                                               ; preds = %33, %31, %39, %37, %2
  ret void, !dbg !14372
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_ReadDeviceID(i16 noundef zeroext %0, i8* nocapture noundef writeonly %1, i8 noundef zeroext %2) local_unnamed_addr #0 section ".ram_code" !dbg !14373 {
  %4 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i16 %0, metadata !14377, metadata !DIExpression()), !dbg !14380
  call void @llvm.dbg.value(metadata i8* %1, metadata !14378, metadata !DIExpression()), !dbg !14380
  call void @llvm.dbg.value(metadata i8 %2, metadata !14379, metadata !DIExpression()), !dbg !14380
  store i8 %2, i8* %4, align 1
  call void @llvm.dbg.value(metadata i8* %4, metadata !14379, metadata !DIExpression(DW_OP_deref)), !dbg !14380
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef %1, i16 noundef zeroext 1, i16 noundef zeroext 3) #23, !dbg !14381
  ret void, !dbg !14382
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_ReadDeviceID_SPI(i16 noundef zeroext %0, i8* nocapture noundef writeonly %1) local_unnamed_addr #0 section ".ram_code" !dbg !14383 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !14387, metadata !DIExpression()), !dbg !14389
  call void @llvm.dbg.value(metadata i8* %1, metadata !14388, metadata !DIExpression()), !dbg !14389
  tail call void @SFI_ReadDeviceID(i16 noundef zeroext %0, i8* noundef %1, i8 noundef zeroext -97) #23, !dbg !14390
  ret void, !dbg !14391
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SFI_Dev_WorkingFrequencyQuery() local_unnamed_addr #10 section ".ram_code" !dbg !14392 {
  ret i32 78, !dbg !14396
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @SFI_Dev_WorkingVoltageQuery() local_unnamed_addr #11 section ".ram_code" !dbg !14397 {
  %1 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !14401
  %2 = and i32 %1, 7340032, !dbg !14403
  %3 = icmp ult i32 %2, 2097153, !dbg !14404
  %4 = select i1 %3, i32 30, i32 18, !dbg !14405
  ret i32 %4, !dbg !14406
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local zeroext i1 @SFI_Dev_GetUniqueID(i8* nocapture noundef writeonly %0) local_unnamed_addr #19 section ".ram_code" !dbg !14407 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14411, metadata !DIExpression()), !dbg !14413
  call void @llvm.dbg.value(metadata i32 0, metadata !14412, metadata !DIExpression()), !dbg !14413
  call void @llvm.dbg.value(metadata i32 0, metadata !14412, metadata !DIExpression()), !dbg !14413
  br label %2, !dbg !14414

2:                                                ; preds = %1, %2
  %3 = phi i32 [ 0, %1 ], [ %5, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !14412, metadata !DIExpression()), !dbg !14413
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !14416
  store i8 -1, i8* %4, align 1, !dbg !14419
  %5 = add nuw nsw i32 %3, 1, !dbg !14420
  call void @llvm.dbg.value(metadata i32 %5, metadata !14412, metadata !DIExpression()), !dbg !14413
  %6 = icmp eq i32 %5, 8, !dbg !14421
  br i1 %6, label %7, label %2, !dbg !14414, !llvm.loop !14422

7:                                                ; preds = %2
  ret i1 true, !dbg !14424
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_DEV_Enter_DPD() local_unnamed_addr #0 section ".ram_code" !dbg !14425 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* @EntireDiskMtdData, metadata !14427, metadata !DIExpression()), !dbg !14428
  %1 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 13), align 4, !dbg !14429
  %2 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %1, i32 0, i32 19, !dbg !14430
  %3 = load i8, i8* %2, align 1, !dbg !14430
  store i8 %3, i8* @NOR_FLASH_LeaveDPDCmd, align 1, !dbg !14431
  %4 = load i8*, i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 1), align 4, !dbg !14432
  %5 = ptrtoint i8* %4 to i32, !dbg !14433
  store i32 %5, i32* @NOR_FLASH_FATStartAddr, align 4, !dbg !14434
  %6 = bitcast i8* %4 to i32*, !dbg !14435
  %7 = load volatile i32, i32* %6, align 4, !dbg !14436
  store i32 %7, i32* @NOR_FLASH_FATStartValue, align 4, !dbg !14437
  %8 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !14438
  store i32 %8, i32* @SFI_MAC_CTL_BACKUP, align 4, !dbg !14439
  %9 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !14440
  store i32 %9, i32* @SFI_DIRECT_CTL_BACKUP, align 4, !dbg !14441
  %10 = load volatile i32, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !14442
  store i32 %10, i32* @SFI_MISC_CTL_BACKUP, align 4, !dbg !14443
  %11 = load volatile i32, i32* inttoptr (i32 -1610350580 to i32*), align 4, !dbg !14444
  store i32 %11, i32* @SFI_MISC_CTL2_BACKUP, align 4, !dbg !14445
  %12 = load volatile i32, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !14446
  store i32 %12, i32* @SFI_DLY_CTL_3_BACKUP, align 4, !dbg !14447
  %13 = load volatile i32, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !14448
  %14 = or i32 %13, 986880, !dbg !14449
  store volatile i32 %14, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !14450
  %15 = load volatile i32, i32* inttoptr (i32 -1610350560 to i32*), align 32, !dbg !14451
  %16 = or i32 %15, 252645135, !dbg !14452
  store volatile i32 %16, i32* inttoptr (i32 -1610350560 to i32*), align 32, !dbg !14453
  %17 = load i16, i16* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 23), align 2, !dbg !14454
  %18 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 13), align 4, !dbg !14455
  %19 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %18, i32 0, i32 18, !dbg !14456
  %20 = load i8, i8* %19, align 1, !dbg !14456
  %21 = zext i8 %20 to i32, !dbg !14457
  tail call void @SFI_Dev_Command(i16 noundef zeroext %17, i32 noundef %21) #23, !dbg !14458
  %22 = tail call i32 @hal_gpt_delay_us(i32 noundef 100) #22, !dbg !14459
  ret void, !dbg !14460
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_DEV_Leave_DPD() local_unnamed_addr #0 section ".tcm_code" !dbg !14461 {
  %1 = load i32, i32* @SFI_MAC_CTL_BACKUP, align 4, !dbg !14462
  store volatile i32 %1, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !14463
  %2 = load i32, i32* @SFI_DIRECT_CTL_BACKUP, align 4, !dbg !14464
  store volatile i32 %2, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !14465
  %3 = load i32, i32* @SFI_MISC_CTL_BACKUP, align 4, !dbg !14466
  store volatile i32 %3, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !14467
  %4 = load i32, i32* @SFI_MISC_CTL2_BACKUP, align 4, !dbg !14468
  store volatile i32 %4, i32* inttoptr (i32 -1610350580 to i32*), align 4, !dbg !14469
  %5 = load i32, i32* @SFI_DLY_CTL_3_BACKUP, align 4, !dbg !14470
  store volatile i32 %5, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !14471
  %6 = load volatile i32, i32* inttoptr (i32 -1610350560 to i32*), align 32, !dbg !14472
  %7 = and i32 %6, -252645136, !dbg !14473
  store volatile i32 %7, i32* inttoptr (i32 -1610350560 to i32*), align 32, !dbg !14474
  %8 = load i8, i8* @NOR_FLASH_LeaveDPDCmd, align 1, !dbg !14475
  %9 = zext i8 %8 to i32, !dbg !14475
  tail call void @SFI_Dev_Command(i16 noundef zeroext 0, i32 noundef %9) #23, !dbg !14476
  %10 = tail call i32 @hal_gpt_delay_us(i32 noundef 100) #22, !dbg !14477
  %11 = load i32, i32* @NOR_FLASH_FATStartValue, align 4, !dbg !14478
  %12 = load i32, i32* @NOR_FLASH_FATStartAddr, align 4, !dbg !14480
  %13 = inttoptr i32 %12 to i32*, !dbg !14481
  %14 = load volatile i32, i32* %13, align 4, !dbg !14482
  %15 = icmp eq i32 %11, %14, !dbg !14483
  br i1 %15, label %17, label %16, !dbg !14484

16:                                               ; preds = %0, %16
  br label %16, !dbg !14485, !llvm.loop !14486

17:                                               ; preds = %0
  ret void, !dbg !14488
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_DEV_SWITCH_TO_LOW_FQ() local_unnamed_addr #0 section ".tcm_code" !dbg !14489 {
  %1 = load i32, i32* @SFI_CLK_SWITCH_MISC_CTL_BACKUP, align 4, !dbg !14490
  %2 = icmp eq i32 %1, 0, !dbg !14492
  br i1 %2, label %3, label %5, !dbg !14493

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !14494
  store i32 %4, i32* @SFI_CLK_SWITCH_MISC_CTL_BACKUP, align 4, !dbg !14496
  br label %5, !dbg !14497

5:                                                ; preds = %3, %0
  %6 = load i32, i32* @SFI_CLK_SWITCH_DLY_CTL_3_BACKUP, align 4, !dbg !14498
  %7 = icmp eq i32 %6, 0, !dbg !14500
  br i1 %7, label %8, label %10, !dbg !14501

8:                                                ; preds = %5
  %9 = load volatile i32, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !14502
  store i32 %9, i32* @SFI_CLK_SWITCH_DLY_CTL_3_BACKUP, align 4, !dbg !14504
  br label %10, !dbg !14505

10:                                               ; preds = %8, %5
  %11 = load volatile i32, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !14506
  %12 = and i32 %11, -256, !dbg !14507
  store volatile i32 %12, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !14508
  store volatile i32 0, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !14509
  %13 = tail call i32 @clock_mux_sel(i32 noundef 2, i32 noundef 0) #22, !dbg !14510
  ret void, !dbg !14511
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_DEV_SWITCH_TO_HIGH_FQ() local_unnamed_addr #0 section ".tcm_code" !dbg !14512 {
  %1 = load i32, i32* @SFI_CLK_SWITCH_MISC_CTL_BACKUP, align 4, !dbg !14513
  %2 = icmp eq i32 %1, 0, !dbg !14515
  br i1 %2, label %4, label %3, !dbg !14516

3:                                                ; preds = %0
  store volatile i32 %1, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !14517
  br label %4, !dbg !14519

4:                                                ; preds = %3, %0
  %5 = load i32, i32* @SFI_CLK_SWITCH_DLY_CTL_3_BACKUP, align 4, !dbg !14520
  %6 = icmp eq i32 %5, 0, !dbg !14522
  br i1 %6, label %8, label %7, !dbg !14523

7:                                                ; preds = %4
  store volatile i32 %5, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !14524
  br label %8, !dbg !14526

8:                                                ; preds = %7, %4
  %9 = tail call i32 @clock_mux_sel(i32 noundef 2, i32 noundef 7) #22, !dbg !14527
  ret void, !dbg !14528
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @ust_get_current_time() local_unnamed_addr #10 section ".tcm_code" !dbg !14529 {
  call void @llvm.dbg.value(metadata i32 0, metadata !14531, metadata !DIExpression()), !dbg !14532
  ret i32 0, !dbg !14533
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_current_32K_counter() local_unnamed_addr #10 section ".ram_code" !dbg !14534 {
  call void @llvm.dbg.value(metadata i32 0, metadata !14536, metadata !DIExpression()), !dbg !14537
  ret i32 0, !dbg !14538
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ust_busy_wait(i32 noundef %0) local_unnamed_addr #0 section ".ram_code" !dbg !14539 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14541, metadata !DIExpression()), !dbg !14542
  %2 = tail call i32 @hal_gpt_delay_us(i32 noundef %0) #22, !dbg !14543
  ret void, !dbg !14544
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SaveAndSetIRQMask() local_unnamed_addr #0 section ".ram_code" !dbg !14545 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #22, !dbg !14548
  call void @llvm.dbg.value(metadata i32 %1, metadata !14547, metadata !DIExpression()), !dbg !14549
  ret i32 %1, !dbg !14550
}

; Function Attrs: noinline nounwind optsize
define dso_local void @RestoreIRQMask(i32 noundef %0) local_unnamed_addr #0 section ".ram_code" !dbg !14551 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14553, metadata !DIExpression()), !dbg !14554
  tail call void @restore_interrupt_mask(i32 noundef %0) #22, !dbg !14555
  ret void, !dbg !14556
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SF_DAL_UnlockBlock_None(i8* nocapture readnone %0) #10 section ".ram_code" !dbg !14557 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !14559, metadata !DIExpression()), !dbg !14560
  ret i32 0, !dbg !14561
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @sfi_60qbit_test() local_unnamed_addr #10 section ".ram_code" !dbg !14562 {
  ret i32 0, !dbg !14565
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @CompareData(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #12 section ".ram_code" !dbg !14566 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14570, metadata !DIExpression()), !dbg !14585
  call void @llvm.dbg.value(metadata i8* %1, metadata !14571, metadata !DIExpression()), !dbg !14585
  call void @llvm.dbg.value(metadata i32 %2, metadata !14572, metadata !DIExpression()), !dbg !14585
  %4 = ptrtoint i8* %0 to i32, !dbg !14586
  %5 = ptrtoint i8* %1 to i32
  %6 = or i32 %5, %4, !dbg !14587
  %7 = and i32 %6, 3, !dbg !14587
  %8 = icmp eq i32 %7, 0, !dbg !14587
  br i1 %8, label %9, label %26, !dbg !14587

9:                                                ; preds = %3
  %10 = bitcast i8* %0 to i32*, !dbg !14588
  call void @llvm.dbg.value(metadata i32* %10, metadata !14574, metadata !DIExpression()), !dbg !14589
  %11 = bitcast i8* %1 to i32*, !dbg !14590
  call void @llvm.dbg.value(metadata i32* %11, metadata !14577, metadata !DIExpression()), !dbg !14589
  call void @llvm.dbg.value(metadata i32 0, metadata !14573, metadata !DIExpression()), !dbg !14585
  call void @llvm.dbg.value(metadata i32 0, metadata !14573, metadata !DIExpression()), !dbg !14585
  %12 = icmp ult i32 %2, 4, !dbg !14591
  br i1 %12, label %65, label %13, !dbg !14594

13:                                               ; preds = %9
  %14 = lshr i32 %2, 2
  br label %15, !dbg !14594

15:                                               ; preds = %15, %13
  %16 = phi i32 [ 0, %13 ], [ %22, %15 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !14573, metadata !DIExpression()), !dbg !14585
  %17 = getelementptr inbounds i32, i32* %10, i32 %16, !dbg !14595
  %18 = load i32, i32* %17, align 4, !dbg !14595
  %19 = getelementptr inbounds i32, i32* %11, i32 %16, !dbg !14598
  %20 = load i32, i32* %19, align 4, !dbg !14598
  %21 = icmp eq i32 %18, %20, !dbg !14599
  %22 = add nuw nsw i32 %16, 1, !dbg !14600
  call void @llvm.dbg.value(metadata i32 %22, metadata !14573, metadata !DIExpression()), !dbg !14585
  %23 = xor i1 %21, true, !dbg !14601
  %24 = icmp eq i32 %22, %14
  %25 = select i1 %23, i1 true, i1 %24, !dbg !14601
  call void @llvm.dbg.value(metadata i32 %22, metadata !14573, metadata !DIExpression()), !dbg !14585
  br i1 %25, label %59, label %15, !dbg !14601, !llvm.loop !14602

26:                                               ; preds = %3
  %27 = and i32 %6, 1, !dbg !14604
  %28 = icmp eq i32 %27, 0, !dbg !14604
  br i1 %28, label %31, label %29, !dbg !14604

29:                                               ; preds = %26
  call void @llvm.dbg.value(metadata i32 0, metadata !14573, metadata !DIExpression()), !dbg !14585
  %30 = icmp eq i32 %2, 0, !dbg !14605
  br i1 %30, label %65, label %48, !dbg !14608

31:                                               ; preds = %26
  %32 = bitcast i8* %0 to i16*, !dbg !14609
  call void @llvm.dbg.value(metadata i16* %32, metadata !14578, metadata !DIExpression()), !dbg !14610
  %33 = bitcast i8* %1 to i16*, !dbg !14611
  call void @llvm.dbg.value(metadata i16* %33, metadata !14581, metadata !DIExpression()), !dbg !14610
  call void @llvm.dbg.value(metadata i32 0, metadata !14573, metadata !DIExpression()), !dbg !14585
  call void @llvm.dbg.value(metadata i32 0, metadata !14573, metadata !DIExpression()), !dbg !14585
  %34 = icmp ult i32 %2, 2, !dbg !14612
  br i1 %34, label %65, label %35, !dbg !14615

35:                                               ; preds = %31
  %36 = lshr i32 %2, 1
  br label %37, !dbg !14615

37:                                               ; preds = %37, %35
  %38 = phi i32 [ 0, %35 ], [ %44, %37 ]
  call void @llvm.dbg.value(metadata i32 %38, metadata !14573, metadata !DIExpression()), !dbg !14585
  %39 = getelementptr inbounds i16, i16* %32, i32 %38, !dbg !14616
  %40 = load i16, i16* %39, align 2, !dbg !14616
  %41 = getelementptr inbounds i16, i16* %33, i32 %38, !dbg !14619
  %42 = load i16, i16* %41, align 2, !dbg !14619
  %43 = icmp eq i16 %40, %42, !dbg !14620
  %44 = add nuw nsw i32 %38, 1, !dbg !14621
  call void @llvm.dbg.value(metadata i32 %44, metadata !14573, metadata !DIExpression()), !dbg !14585
  %45 = xor i1 %43, true, !dbg !14622
  %46 = icmp eq i32 %44, %36
  %47 = select i1 %45, i1 true, i1 %46, !dbg !14622
  call void @llvm.dbg.value(metadata i32 %44, metadata !14573, metadata !DIExpression()), !dbg !14585
  br i1 %47, label %61, label %37, !dbg !14622, !llvm.loop !14623

48:                                               ; preds = %29, %48
  %49 = phi i32 [ %55, %48 ], [ 0, %29 ]
  call void @llvm.dbg.value(metadata i32 %49, metadata !14573, metadata !DIExpression()), !dbg !14585
  %50 = getelementptr inbounds i8, i8* %0, i32 %49, !dbg !14625
  %51 = load i8, i8* %50, align 1, !dbg !14625
  %52 = getelementptr inbounds i8, i8* %1, i32 %49, !dbg !14628
  %53 = load i8, i8* %52, align 1, !dbg !14628
  %54 = icmp eq i8 %51, %53, !dbg !14629
  %55 = add nuw i32 %49, 1, !dbg !14630
  call void @llvm.dbg.value(metadata i32 %55, metadata !14573, metadata !DIExpression()), !dbg !14585
  %56 = xor i1 %54, true, !dbg !14631
  %57 = icmp eq i32 %55, %2
  %58 = select i1 %56, i1 true, i1 %57, !dbg !14631
  call void @llvm.dbg.value(metadata i32 %55, metadata !14573, metadata !DIExpression()), !dbg !14585
  br i1 %58, label %63, label %48, !dbg !14631, !llvm.loop !14632

59:                                               ; preds = %15
  %60 = xor i1 %21, true, !dbg !14634
  br label %65, !dbg !14634

61:                                               ; preds = %37
  %62 = xor i1 %43, true, !dbg !14634
  br label %65, !dbg !14634

63:                                               ; preds = %48
  %64 = xor i1 %54, true, !dbg !14634
  br label %65, !dbg !14634

65:                                               ; preds = %63, %61, %59, %29, %31, %9
  %66 = phi i1 [ false, %9 ], [ false, %31 ], [ false, %29 ], [ %60, %59 ], [ %62, %61 ], [ %64, %63 ], !dbg !14585
  ret i1 %66, !dbg !14634
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Flash_ProgramData(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 section ".ram_code" !dbg !14635 {
  %4 = alloca i8*, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !14639, metadata !DIExpression()), !dbg !14650
  call void @llvm.dbg.value(metadata i8* %1, metadata !14640, metadata !DIExpression()), !dbg !14650
  call void @llvm.dbg.value(metadata i32 %2, metadata !14641, metadata !DIExpression()), !dbg !14650
  %6 = load %struct.SF_MTD_Data*, %struct.SF_MTD_Data** bitcast (i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2) to %struct.SF_MTD_Data**), align 4, !dbg !14651
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %6, metadata !14642, metadata !DIExpression()), !dbg !14650
  call void @llvm.dbg.value(metadata i8* %0, metadata !14643, metadata !DIExpression()), !dbg !14650
  %7 = bitcast i8** %4 to i8*, !dbg !14652
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #24, !dbg !14652
  call void @llvm.dbg.value(metadata i8* %1, metadata !14644, metadata !DIExpression()), !dbg !14650
  store i8* %1, i8** %4, align 4, !dbg !14653
  call void @llvm.dbg.value(metadata i32 0, metadata !14645, metadata !DIExpression()), !dbg !14650
  %8 = bitcast i32* %5 to i8*, !dbg !14654
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #24, !dbg !14654
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #23, !dbg !14655
  %9 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 21, !dbg !14656
  store i8 1, i8* %9, align 4, !dbg !14657
  call void @llvm.dbg.value(metadata i32 %2, metadata !14641, metadata !DIExpression()), !dbg !14650
  call void @llvm.dbg.value(metadata i8* %0, metadata !14643, metadata !DIExpression()), !dbg !14650
  %10 = icmp eq i32 %2, 0, !dbg !14658
  br i1 %10, label %73, label %11, !dbg !14659

11:                                               ; preds = %3
  %12 = ptrtoint i8* %0 to i32, !dbg !14660
  call void @llvm.dbg.value(metadata i32 %12, metadata !14643, metadata !DIExpression()), !dbg !14650
  %13 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 24
  %14 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 22
  %15 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 13
  %16 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 23
  %17 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 12
  br label %18, !dbg !14659

18:                                               ; preds = %11, %66
  %19 = phi i32 [ %2, %11 ], [ %70, %66 ]
  %20 = phi i32 [ %12, %11 ], [ %71, %66 ]
  call void @llvm.dbg.value(metadata i32 %19, metadata !14641, metadata !DIExpression()), !dbg !14650
  call void @llvm.dbg.value(metadata i32 %20, metadata !14643, metadata !DIExpression()), !dbg !14650
  %21 = load i32, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !14661
  %22 = shl i32 %21, 1, !dbg !14663
  %23 = add i32 %22, -1, !dbg !14664
  %24 = and i32 %23, %20, !dbg !14665
  %25 = sub i32 %22, %24, !dbg !14666
  %26 = icmp ugt i32 %19, %25, !dbg !14667
  %27 = select i1 %26, i32 %25, i32 %19, !dbg !14668
  call void @llvm.dbg.value(metadata i32 %27, metadata !14647, metadata !DIExpression()), !dbg !14650
  call void @llvm.dbg.value(metadata i32 %27, metadata !14646, metadata !DIExpression()), !dbg !14650
  store i32 %27, i32* %5, align 4, !dbg !14669
  %28 = load i32, i32* %13, align 4, !dbg !14670
  %29 = and i32 %28, 16, !dbg !14672
  %30 = icmp eq i32 %29, 0, !dbg !14672
  br i1 %30, label %31, label %32, !dbg !14673

31:                                               ; preds = %18
  call void @SF_DAL_Dev_WriteEnable(%struct.SF_MTD_Data* noundef nonnull %6) #23, !dbg !14674
  br label %32, !dbg !14676

32:                                               ; preds = %31, %18
  %33 = load i8, i8* %14, align 1, !dbg !14677
  %34 = icmp eq i8 %33, 4, !dbg !14679
  %35 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %15, align 4, !dbg !14680
  %36 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %35, i32 0, i32 0, !dbg !14680
  %37 = load i8, i8* %36, align 1, !dbg !14680
  %38 = zext i8 %37 to i32, !dbg !14680
  br i1 %34, label %39, label %43, !dbg !14681

39:                                               ; preds = %32
  call void @llvm.dbg.value(metadata i8** %4, metadata !14644, metadata !DIExpression(DW_OP_deref)), !dbg !14650
  call void @llvm.dbg.value(metadata i32* %5, metadata !14646, metadata !DIExpression(DW_OP_deref)), !dbg !14650
  %40 = call i32 @SFI_GPRAM_Write_C1A4(i32 noundef %38, i32 noundef %20, i8** noundef nonnull %4, i32* noundef nonnull %5) #22, !dbg !14682
  call void @llvm.dbg.value(metadata i32 %40, metadata !14645, metadata !DIExpression()), !dbg !14650
  %41 = load i8*, i8** %4, align 4, !dbg !14684
  call void @llvm.dbg.value(metadata i8* %41, metadata !14644, metadata !DIExpression()), !dbg !14650
  %42 = load i32, i32* %5, align 4, !dbg !14685
  call void @llvm.dbg.value(metadata i32 %42, metadata !14646, metadata !DIExpression()), !dbg !14650
  call void @SFI_GPRAM_Write(i32 noundef 8, i8* noundef %41, i32 noundef %42) #22, !dbg !14686
  br label %47, !dbg !14687

43:                                               ; preds = %32
  %44 = call i32 @SFI_GPRAM_Write_C1A3(i32 noundef %38, i32 noundef %20) #22, !dbg !14688
  call void @llvm.dbg.value(metadata i32 %44, metadata !14645, metadata !DIExpression()), !dbg !14650
  %45 = load i8*, i8** %4, align 4, !dbg !14690
  call void @llvm.dbg.value(metadata i8* %45, metadata !14644, metadata !DIExpression()), !dbg !14650
  %46 = load i32, i32* %5, align 4, !dbg !14691
  call void @llvm.dbg.value(metadata i32 %46, metadata !14646, metadata !DIExpression()), !dbg !14650
  call void @SFI_GPRAM_Write(i32 noundef 4, i8* noundef %45, i32 noundef %46) #22, !dbg !14692
  br label %47

47:                                               ; preds = %43, %39
  %48 = phi i32 [ %40, %39 ], [ %44, %43 ], !dbg !14680
  call void @llvm.dbg.value(metadata i32 %48, metadata !14645, metadata !DIExpression()), !dbg !14650
  %49 = call i32 @SaveAndSetIRQMask() #23, !dbg !14693
  call void @llvm.dbg.value(metadata i32 %49, metadata !14649, metadata !DIExpression()), !dbg !14650
  %50 = load i8, i8* %14, align 1, !dbg !14694
  %51 = zext i8 %50 to i32, !dbg !14695
  %52 = add i32 %27, 1, !dbg !14696
  %53 = add i32 %52, %51, !dbg !14697
  store volatile i32 %53, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !14698
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !14699
  store volatile i32 %48, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !14700
  call void @SF_DAL_FLAG_BUSY_SET() #23, !dbg !14701
  %54 = load i16, i16* %16, align 2, !dbg !14702
  call void @SFI_MacEnable(i16 noundef zeroext %54) #22, !dbg !14703
  %55 = load i16, i16* %16, align 2, !dbg !14704
  call void @SFI_MacWaitReady(i16 noundef zeroext %55) #22, !dbg !14705
  call void @RestoreIRQMask(i32 noundef %49) #23, !dbg !14706
  br label %56, !dbg !14707

56:                                               ; preds = %56, %47
  %57 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %15, align 4, !dbg !14708
  %58 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %57, i32 0, i32 16, !dbg !14710
  %59 = load i8, i8* %58, align 1, !dbg !14710
  %60 = call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %6, i8 noundef zeroext %59) #23, !dbg !14711
  call void @llvm.dbg.value(metadata i32 %60, metadata !14648, metadata !DIExpression()), !dbg !14650
  %61 = load i8*, i8** %17, align 4, !dbg !14712
  %62 = load i8, i8* %61, align 1, !dbg !14714
  %63 = zext i8 %62 to i32, !dbg !14714
  %64 = and i32 %60, %63, !dbg !14715
  %65 = icmp eq i32 %64, 0, !dbg !14716
  br i1 %65, label %66, label %56, !dbg !14717, !llvm.loop !14718

66:                                               ; preds = %56
  call void @SF_DAL_FLAG_BUSY_CLR() #23, !dbg !14720
  %67 = load i32, i32* %5, align 4, !dbg !14721
  call void @llvm.dbg.value(metadata i32 %67, metadata !14646, metadata !DIExpression()), !dbg !14650
  %68 = load i8*, i8** %4, align 4, !dbg !14722
  call void @llvm.dbg.value(metadata i8* %68, metadata !14644, metadata !DIExpression()), !dbg !14650
  %69 = getelementptr inbounds i8, i8* %68, i32 %67, !dbg !14722
  call void @llvm.dbg.value(metadata i8* %69, metadata !14644, metadata !DIExpression()), !dbg !14650
  store i8* %69, i8** %4, align 4, !dbg !14722
  %70 = sub i32 %19, %27, !dbg !14723
  call void @llvm.dbg.value(metadata i32 %70, metadata !14641, metadata !DIExpression()), !dbg !14650
  %71 = add i32 %27, %20, !dbg !14724
  call void @llvm.dbg.value(metadata i32 %71, metadata !14643, metadata !DIExpression()), !dbg !14650
  %72 = icmp eq i32 %70, 0, !dbg !14658
  br i1 %72, label %73, label %18, !dbg !14659, !llvm.loop !14725

73:                                               ; preds = %66, %3
  store i8 0, i8* %9, align 4, !dbg !14727
  call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #23, !dbg !14728
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #24, !dbg !14729
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #24, !dbg !14729
  ret void, !dbg !14729
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* nocapture readnone %0) local_unnamed_addr #0 section ".ram_code" !dbg !14730 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !14734, metadata !DIExpression()), !dbg !14736
  br label %2, !dbg !14737

2:                                                ; preds = %2, %1
  %3 = tail call i32 @retrieve_MTD_lock() #23, !dbg !14738
  call void @llvm.dbg.value(metadata i32 %3, metadata !14735, metadata !DIExpression()), !dbg !14736
  %4 = icmp eq i32 %3, 0, !dbg !14740
  br i1 %4, label %5, label %2, !dbg !14741, !llvm.loop !14742

5:                                                ; preds = %2
  ret void, !dbg !14744
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_WriteEnable(%struct.SF_MTD_Data* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !14745 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !14747, metadata !DIExpression()), !dbg !14748
  %2 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !14749
  %3 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %2, align 4, !dbg !14749
  %4 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %3, i32 0, i32 1, !dbg !14750
  %5 = load i8, i8* %4, align 1, !dbg !14750
  %6 = zext i8 %5 to i32, !dbg !14751
  tail call void @SF_DAL_Dev_Command(%struct.SF_MTD_Data* noundef %0, i32 noundef %6, i8 noundef zeroext 1) #23, !dbg !14752
  ret void, !dbg !14753
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_FLAG_BUSY_SET() local_unnamed_addr #0 section ".ram_code" !dbg !14754 {
  %1 = tail call i32 @SaveAndSetIRQMask() #23, !dbg !14757
  call void @llvm.dbg.value(metadata i32 %1, metadata !14756, metadata !DIExpression()), !dbg !14758
  store i8 1, i8* @NOR_FLASH_BUSY, align 1, !dbg !14759
  tail call void @RestoreIRQMask(i32 noundef %1) #23, !dbg !14760
  ret void, !dbg !14761
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #0 section ".ram_code" !dbg !14762 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !14766, metadata !DIExpression()), !dbg !14770
  call void @llvm.dbg.value(metadata i8 %1, metadata !14767, metadata !DIExpression()), !dbg !14770
  %3 = tail call i32 @SaveAndSetIRQMask() #23, !dbg !14771
  call void @llvm.dbg.value(metadata i32 %3, metadata !14768, metadata !DIExpression()), !dbg !14770
  %4 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !14772
  %5 = load i16, i16* %4, align 2, !dbg !14772
  tail call void @SFI_MacEnable(i16 noundef zeroext %5) #22, !dbg !14773
  %6 = zext i8 %1 to i32, !dbg !14774
  store volatile i32 %6, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !14775
  store volatile i32 1, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !14776
  store volatile i32 1, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !14777
  %7 = load i16, i16* %4, align 2, !dbg !14778
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %7) #22, !dbg !14779
  %8 = load volatile i32, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !14780
  %9 = lshr i32 %8, 8, !dbg !14781
  %10 = and i32 %9, 255, !dbg !14782
  call void @llvm.dbg.value(metadata i32 %10, metadata !14769, metadata !DIExpression()), !dbg !14770
  tail call void @RestoreIRQMask(i32 noundef %3) #23, !dbg !14783
  ret i32 %10, !dbg !14784
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_FLAG_BUSY_CLR() local_unnamed_addr #0 section ".ram_code" !dbg !14785 {
  %1 = tail call i32 @SaveAndSetIRQMask() #23, !dbg !14788
  call void @llvm.dbg.value(metadata i32 %1, metadata !14787, metadata !DIExpression()), !dbg !14789
  store i8 0, i8* @NOR_FLASH_BUSY, align 1, !dbg !14790
  %2 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !14791
  %3 = and i32 %2, -513, !dbg !14791
  store volatile i32 %3, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !14791
  tail call void @RestoreIRQMask(i32 noundef %1) #23, !dbg !14794
  ret void, !dbg !14795
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* nocapture readnone %0) local_unnamed_addr #0 section ".ram_code" !dbg !14796 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !14798, metadata !DIExpression()), !dbg !14800
  %2 = tail call i32 @SaveAndSetIRQMask() #23, !dbg !14801
  call void @llvm.dbg.value(metadata i32 %2, metadata !14799, metadata !DIExpression()), !dbg !14800
  %3 = load i1, i1* @MTDMutex, align 4, !dbg !14802
  br i1 %3, label %4, label %5, !dbg !14804

4:                                                ; preds = %1
  store i1 false, i1* @MTDMutex, align 4, !dbg !14805
  tail call void @RestoreIRQMask(i32 noundef %2) #23, !dbg !14807
  ret void, !dbg !14808

5:                                                ; preds = %1
  tail call void @RestoreIRQMask(i32 noundef %2) #23, !dbg !14809
  tail call void @Flash_ReturnReady() #23, !dbg !14811
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.259, i32 0, i32 0), i32 noundef 1449, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.SF_DAL_FreeDevLock, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.260, i32 0, i32 0)) #25, !dbg !14811
  unreachable, !dbg !14811
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Flash_ReturnReady() local_unnamed_addr #0 section ".ram_code" !dbg !14815 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* null, metadata !14817, metadata !DIExpression()), !dbg !14822
  %1 = tail call i32 @SaveAndSetIRQMask() #23, !dbg !14823
  call void @llvm.dbg.value(metadata i32 %1, metadata !14819, metadata !DIExpression()), !dbg !14822
  %2 = tail call i32 @get_NOR_init_status() #22, !dbg !14824
  %3 = icmp eq i32 %2, 0, !dbg !14826
  br i1 %3, label %4, label %125, !dbg !14827

4:                                                ; preds = %0
  store i32 0, i32* @gNOR_ReturnReadyBegin, align 4, !dbg !14828
  %5 = load %struct.SF_MTD_Data*, %struct.SF_MTD_Data** bitcast (i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2) to %struct.SF_MTD_Data**), align 4, !dbg !14829
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %5, metadata !14817, metadata !DIExpression()), !dbg !14822
  %6 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 0, !dbg !14831
  %7 = load i32, i32* %6, align 4, !dbg !14831
  %8 = xor i32 %7, -1, !dbg !14831
  %9 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 5, !dbg !14831
  %10 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %9, align 4, !dbg !14831
  %11 = ptrtoint %struct.hal_cache_region_config_t* %10 to i32, !dbg !14831
  %12 = icmp eq i32 %8, %11, !dbg !14831
  br i1 %12, label %14, label %13, !dbg !14834

13:                                               ; preds = %4
  tail call void @Flash_ReturnReady() #23, !dbg !14835
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.259, i32 0, i32 0), i32 noundef 1069, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.Flash_ReturnReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.260, i32 0, i32 0)) #25, !dbg !14835
  unreachable, !dbg !14835

14:                                               ; preds = %4
  %15 = load i32, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !14837
  %16 = icmp ult i32 %15, 16, !dbg !14839
  br i1 %16, label %17, label %34, !dbg !14840

17:                                               ; preds = %14
  %18 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 21, !dbg !14841
  %19 = load i8, i8* %18, align 4, !dbg !14841
  %20 = icmp eq i8 %19, 1, !dbg !14842
  br i1 %20, label %21, label %34, !dbg !14843

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 13
  %23 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 12
  br label %24, !dbg !14844

24:                                               ; preds = %21, %24
  %25 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !14846
  %26 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %25, i32 0, i32 16, !dbg !14848
  %27 = load i8, i8* %26, align 1, !dbg !14848
  %28 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %5, i8 noundef zeroext %27) #23, !dbg !14849
  call void @llvm.dbg.value(metadata i32 %28, metadata !14818, metadata !DIExpression()), !dbg !14822
  %29 = load i8*, i8** %23, align 4, !dbg !14850
  %30 = load i8, i8* %29, align 1, !dbg !14852
  %31 = zext i8 %30 to i32, !dbg !14852
  %32 = and i32 %28, %31, !dbg !14853
  %33 = icmp eq i32 %32, 0, !dbg !14854
  br i1 %33, label %34, label %24, !dbg !14855, !llvm.loop !14856

34:                                               ; preds = %24, %17, %14
  %35 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !14858, !range !4202
  %36 = icmp ne i8 %35, 0, !dbg !14858
  %37 = load i8, i8* @NOR_FLASH_BUSY, align 1
  %38 = icmp eq i8 %37, 0
  %39 = select i1 %36, i1 true, i1 %38, !dbg !14860
  br i1 %39, label %116, label %40, !dbg !14860

40:                                               ; preds = %34
  %41 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 13, !dbg !14861
  %42 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %41, align 4, !dbg !14861
  %43 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %42, i32 0, i32 16, !dbg !14863
  %44 = load i8, i8* %43, align 1, !dbg !14863
  %45 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %5, i8 noundef zeroext %44) #23, !dbg !14864
  call void @llvm.dbg.value(metadata i32 %45, metadata !14818, metadata !DIExpression()), !dbg !14822
  %46 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 12, !dbg !14865
  %47 = load i8*, i8** %46, align 4, !dbg !14865
  %48 = load i8, i8* %47, align 1, !dbg !14867
  %49 = zext i8 %48 to i32, !dbg !14867
  %50 = and i32 %45, %49, !dbg !14868
  %51 = icmp eq i32 %50, 0, !dbg !14869
  br i1 %51, label %85, label %52, !dbg !14870

52:                                               ; preds = %40
  tail call void @SF_DAL_Dev_Suspend(%struct.SF_MTD_Data* noundef nonnull %5) #23, !dbg !14871
  br label %53, !dbg !14873

53:                                               ; preds = %53, %52
  %54 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %41, align 4, !dbg !14874
  %55 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %54, i32 0, i32 16, !dbg !14876
  %56 = load i8, i8* %55, align 1, !dbg !14876
  %57 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %5, i8 noundef zeroext %56) #23, !dbg !14877
  call void @llvm.dbg.value(metadata i32 %57, metadata !14818, metadata !DIExpression()), !dbg !14822
  %58 = load i8*, i8** %46, align 4, !dbg !14878
  %59 = load i8, i8* %58, align 1, !dbg !14880
  %60 = zext i8 %59 to i32, !dbg !14880
  %61 = and i32 %57, %60, !dbg !14881
  %62 = icmp eq i32 %61, 0, !dbg !14882
  br i1 %62, label %63, label %53, !dbg !14883, !llvm.loop !14884

63:                                               ; preds = %53
  %64 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 24, !dbg !14886
  %65 = load i32, i32* %64, align 4, !dbg !14886
  %66 = and i32 %65, 4, !dbg !14888
  %67 = icmp eq i32 %66, 0, !dbg !14888
  br i1 %67, label %84, label %68, !dbg !14889

68:                                               ; preds = %63
  %69 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 21, !dbg !14890
  %70 = load i8, i8* %69, align 4, !dbg !14890
  %71 = icmp eq i8 %70, 2, !dbg !14891
  br i1 %71, label %72, label %84, !dbg !14892

72:                                               ; preds = %68
  store volatile i32 6, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !14893
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !14895
  store volatile i32 1, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !14896
  %73 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 23, !dbg !14897
  %74 = load i16, i16* %73, align 2, !dbg !14897
  tail call void @SFI_MacEnable(i16 noundef zeroext %74) #22, !dbg !14898
  %75 = load i16, i16* %73, align 2, !dbg !14899
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %75) #22, !dbg !14900
  store volatile i32 -1, i32* inttoptr (i32 -1610348540 to i32*), align 4, !dbg !14901
  store volatile i32 6, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !14902
  store volatile i32 2, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !14903
  %76 = load i16, i16* %73, align 2, !dbg !14904
  tail call void @SFI_MacEnable(i16 noundef zeroext %76) #22, !dbg !14905
  %77 = load i16, i16* %73, align 2, !dbg !14906
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %77) #22, !dbg !14907
  br label %78, !dbg !14908

78:                                               ; preds = %78, %72
  store volatile i32 5, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !14909
  store volatile i32 1, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !14911
  store volatile i32 1, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !14912
  %79 = load i16, i16* %73, align 2, !dbg !14913
  tail call void @SFI_MacEnable(i16 noundef zeroext %79) #22, !dbg !14914
  %80 = load i16, i16* %73, align 2, !dbg !14915
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %80) #22, !dbg !14916
  %81 = load volatile i32, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !14917
  call void @llvm.dbg.value(metadata i32 %81, metadata !14818, metadata !DIExpression(DW_OP_constu, 8, DW_OP_shr, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !14822
  %82 = and i32 %81, 256, !dbg !14918
  %83 = icmp eq i32 %82, 0, !dbg !14918
  br i1 %83, label %84, label %78, !dbg !14918, !llvm.loop !14919

84:                                               ; preds = %78, %68, %63
  tail call void @SF_DAL_FLAG_SUS_SET() #23, !dbg !14921
  br label %116, !dbg !14922

85:                                               ; preds = %40
  %86 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 24, !dbg !14923
  %87 = load i32, i32* %86, align 4, !dbg !14923
  %88 = and i32 %87, 2, !dbg !14926
  %89 = icmp eq i32 %88, 0, !dbg !14926
  br i1 %89, label %115, label %90, !dbg !14927

90:                                               ; preds = %85
  %91 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 3, !dbg !14928
  %92 = load %struct.anon.37*, %struct.anon.37** %91, align 4, !dbg !14928
  %93 = icmp eq %struct.anon.37* %92, null, !dbg !14929
  br i1 %93, label %94, label %115, !dbg !14930

94:                                               ; preds = %90
  %95 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %41, align 4, !dbg !14931
  %96 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %95, i32 0, i32 15, !dbg !14933
  %97 = load i8, i8* %96, align 1, !dbg !14933
  %98 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %5, i8 noundef zeroext %97) #23, !dbg !14934
  call void @llvm.dbg.value(metadata i32 %98, metadata !14818, metadata !DIExpression()), !dbg !14822
  %99 = load i8*, i8** %46, align 4, !dbg !14935
  %100 = getelementptr inbounds i8, i8* %99, i32 2, !dbg !14937
  %101 = load i8, i8* %100, align 1, !dbg !14937
  %102 = zext i8 %101 to i32, !dbg !14937
  %103 = and i32 %98, %102, !dbg !14938
  %104 = icmp eq i32 %103, 0, !dbg !14939
  br i1 %104, label %105, label %115, !dbg !14940

105:                                              ; preds = %94
  %106 = getelementptr inbounds i8, i8* %99, i32 3, !dbg !14941
  %107 = load i8, i8* %106, align 1, !dbg !14941
  %108 = zext i8 %107 to i32, !dbg !14941
  %109 = and i32 %98, %108, !dbg !14942
  %110 = icmp eq i32 %109, 0, !dbg !14943
  br i1 %110, label %111, label %115, !dbg !14944

111:                                              ; preds = %105
  %112 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 23, !dbg !14945
  %113 = load i16, i16* %112, align 2, !dbg !14945
  tail call void @SFI_Dev_Command(i16 noundef zeroext %113, i32 noundef 122) #22, !dbg !14947
  %114 = load i16, i16* %112, align 2, !dbg !14948
  tail call void @SFI_Dev_Command(i16 noundef zeroext %114, i32 noundef 122) #22, !dbg !14949
  br label %115, !dbg !14950

115:                                              ; preds = %94, %105, %111, %90, %85
  tail call void @SF_DAL_FLAG_BUSY_CLR() #23, !dbg !14951
  br label %116

116:                                              ; preds = %84, %115, %34
  store i32 0, i32* @gNOR_ReturnReadyEnd, align 4, !dbg !14952
  %117 = load i32, i32* @gNOR_ReturnReadyBegin, align 4, !dbg !14953
  %118 = sub i32 0, %117, !dbg !14953
  call void @llvm.dbg.value(metadata i32 %118, metadata !14820, metadata !DIExpression()), !dbg !14954
  %119 = load i32, i32* @sf_dal_flash_return_ready_max, align 4, !dbg !14955
  %120 = icmp ult i32 %119, %118, !dbg !14957
  br i1 %120, label %121, label %122, !dbg !14958

121:                                              ; preds = %116
  store i32 %118, i32* @sf_dal_flash_return_ready_max, align 4, !dbg !14959
  br label %122, !dbg !14961

122:                                              ; preds = %121, %116
  %123 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !14962
  %124 = and i32 %123, -513, !dbg !14962
  store volatile i32 %124, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !14962
  br label %125, !dbg !14965

125:                                              ; preds = %0, %122
  tail call void @RestoreIRQMask(i32 noundef %1) #23, !dbg !14822
  ret void, !dbg !14966
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_Suspend(%struct.SF_MTD_Data* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !14967 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !14969, metadata !DIExpression()), !dbg !14973
  %2 = load i32, i32* @sf_dal_resume_time, align 4, !dbg !14974
  %3 = icmp eq i32 %2, -1, !dbg !14976
  br i1 %3, label %12, label %4, !dbg !14977

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 0, metadata !14971, metadata !DIExpression()), !dbg !14973
  %5 = sub i32 0, %2, !dbg !14978
  call void @llvm.dbg.value(metadata i32 %5, metadata !14972, metadata !DIExpression()), !dbg !14973
  %6 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 19, !dbg !14980
  %7 = load i8, i8* %6, align 4, !dbg !14980
  %8 = zext i8 %7 to i32, !dbg !14982
  %9 = icmp ugt i32 %8, %5, !dbg !14983
  br i1 %9, label %10, label %12, !dbg !14984

10:                                               ; preds = %4
  %11 = add i32 %2, %8, !dbg !14985
  tail call void @DelayAWhile_UST(i32 noundef %11) #22, !dbg !14987
  br label %12, !dbg !14988

12:                                               ; preds = %4, %10, %1
  %13 = tail call i32 @SaveAndSetIRQMask() #23, !dbg !14989
  call void @llvm.dbg.value(metadata i32 %13, metadata !14970, metadata !DIExpression()), !dbg !14973
  %14 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !14990
  %15 = load i16, i16* %14, align 2, !dbg !14990
  %16 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !14991
  %17 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %16, align 4, !dbg !14991
  %18 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %17, i32 0, i32 2, !dbg !14992
  %19 = load i8, i8* %18, align 1, !dbg !14992
  %20 = zext i8 %19 to i32, !dbg !14993
  tail call void @SFI_Dev_Command(i16 noundef zeroext %15, i32 noundef %20) #22, !dbg !14994
  tail call void @RestoreIRQMask(i32 noundef %13) #23, !dbg !14995
  ret void, !dbg !14996
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_FLAG_SUS_SET() local_unnamed_addr #0 section ".ram_code" !dbg !14997 {
  %1 = tail call i32 @SaveAndSetIRQMask() #23, !dbg !15000
  call void @llvm.dbg.value(metadata i32 %1, metadata !14999, metadata !DIExpression()), !dbg !15001
  store i8 1, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !15002
  %2 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !15003
  %3 = and i32 %2, -513, !dbg !15003
  store volatile i32 %3, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !15003
  tail call void @RestoreIRQMask(i32 noundef %1) #23, !dbg !15006
  ret void, !dbg !15007
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_Command(%struct.SF_MTD_Data* nocapture noundef readonly %0, i32 noundef %1, i8 noundef zeroext %2) local_unnamed_addr #0 section ".ram_code" !dbg !15008 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !15012, metadata !DIExpression()), !dbg !15016
  call void @llvm.dbg.value(metadata i32 %1, metadata !15013, metadata !DIExpression()), !dbg !15016
  call void @llvm.dbg.value(metadata i8 %2, metadata !15014, metadata !DIExpression()), !dbg !15016
  %4 = tail call i32 @SaveAndSetIRQMask() #23, !dbg !15017
  call void @llvm.dbg.value(metadata i32 %4, metadata !15015, metadata !DIExpression()), !dbg !15016
  %5 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !15018
  %6 = load i16, i16* %5, align 2, !dbg !15018
  tail call void @SFI_MacEnable(i16 noundef zeroext %6) #22, !dbg !15019
  store volatile i32 %1, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !15020
  %7 = zext i8 %2 to i32, !dbg !15021
  store volatile i32 %7, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !15022
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !15023
  %8 = load i16, i16* %5, align 2, !dbg !15024
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %8) #22, !dbg !15025
  tail call void @RestoreIRQMask(i32 noundef %4) #23, !dbg !15026
  ret void, !dbg !15027
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @retrieve_MTD_lock() local_unnamed_addr #0 section ".ram_code" !dbg !15028 {
  %1 = tail call i32 @SaveAndSetIRQMask() #23, !dbg !15033
  call void @llvm.dbg.value(metadata i32 %1, metadata !15032, metadata !DIExpression()), !dbg !15034
  %2 = load i1, i1* @MTDMutex, align 4, !dbg !15035
  br i1 %2, label %4, label %3, !dbg !15037

3:                                                ; preds = %0
  store i1 true, i1* @MTDMutex, align 4, !dbg !15038
  br label %4, !dbg !15040

4:                                                ; preds = %0, %3
  %5 = phi i32 [ 0, %3 ], [ -2, %0 ], !dbg !15041
  tail call void @RestoreIRQMask(i32 noundef %1) #23, !dbg !15041
  ret i32 %5, !dbg !15042
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @Flash_CheckReady() local_unnamed_addr #0 section ".ram_code" !dbg !15043 {
  %1 = load %struct.SF_MTD_Data*, %struct.SF_MTD_Data** bitcast (i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2) to %struct.SF_MTD_Data**), align 4, !dbg !15050
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !15047, metadata !DIExpression()), !dbg !15051
  call void @llvm.dbg.value(metadata i8 0, metadata !15049, metadata !DIExpression()), !dbg !15051
  %2 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 0, !dbg !15052
  %3 = load i32, i32* %2, align 4, !dbg !15052
  %4 = xor i32 %3, -1, !dbg !15052
  %5 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 5, !dbg !15052
  %6 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %5, align 4, !dbg !15052
  %7 = ptrtoint %struct.hal_cache_region_config_t* %6 to i32, !dbg !15052
  %8 = icmp eq i32 %4, %7, !dbg !15052
  br i1 %8, label %10, label %9, !dbg !15055

9:                                                ; preds = %0
  tail call void @Flash_ReturnReady() #23, !dbg !15056
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.259, i32 0, i32 0), i32 noundef 1263, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.Flash_CheckReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.260, i32 0, i32 0)) #25, !dbg !15056
  unreachable, !dbg !15056

10:                                               ; preds = %0
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #23, !dbg !15058
  %11 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !15059
  %12 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !15059
  %13 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %12, i32 0, i32 16, !dbg !15060
  %14 = load i8, i8* %13, align 1, !dbg !15060
  %15 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %1, i8 noundef zeroext %14) #23, !dbg !15061
  call void @llvm.dbg.value(metadata i32 %15, metadata !15048, metadata !DIExpression()), !dbg !15051
  %16 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12, !dbg !15062
  %17 = load i8*, i8** %16, align 4, !dbg !15062
  %18 = load i8, i8* %17, align 1, !dbg !15064
  %19 = zext i8 %18 to i32, !dbg !15064
  %20 = and i32 %15, %19, !dbg !15065
  %21 = icmp eq i32 %20, 0, !dbg !15066
  br i1 %21, label %22, label %23, !dbg !15067

22:                                               ; preds = %10
  tail call void @SF_DAL_FLAG_BUSY_CLR() #23, !dbg !15068
  call void @llvm.dbg.value(metadata i8 1, metadata !15049, metadata !DIExpression()), !dbg !15051
  br label %23, !dbg !15070

23:                                               ; preds = %22, %10
  call void @llvm.dbg.value(metadata i8 poison, metadata !15049, metadata !DIExpression()), !dbg !15051
  tail call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #23, !dbg !15071
  ret i1 %21, !dbg !15072
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Flash_ResumeOperation() local_unnamed_addr #0 section ".ram_code" !dbg !15073 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !15075, metadata !DIExpression()), !dbg !15076
  %1 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !15077, !range !4202
  %2 = icmp eq i8 %1, 0, !dbg !15077
  %3 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !15077
  %4 = icmp eq i8 %3, 0, !dbg !15077
  %5 = select i1 %2, i1 true, i1 %4, !dbg !15077
  br i1 %5, label %6, label %7, !dbg !15077

6:                                                ; preds = %0
  tail call void @Flash_ReturnReady() #23, !dbg !15080
  tail call void @Flash_ReturnReady() #23, !dbg !15082
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.259, i32 0, i32 0), i32 noundef 1293, i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.Flash_ResumeOperation, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.260, i32 0, i32 0)) #25, !dbg !15082
  unreachable, !dbg !15082

7:                                                ; preds = %0
  %8 = load %struct.SF_MTD_Data*, %struct.SF_MTD_Data** bitcast (i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2) to %struct.SF_MTD_Data**), align 4, !dbg !15086
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %8, metadata !15075, metadata !DIExpression()), !dbg !15076
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef %8) #23, !dbg !15087
  ret void, !dbg !15088
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !15089 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !15091, metadata !DIExpression()), !dbg !15093
  %2 = tail call i32 @SaveAndSetIRQMask() #23, !dbg !15094
  call void @llvm.dbg.value(metadata i32 %2, metadata !15092, metadata !DIExpression()), !dbg !15093
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !15095
  %4 = load i16, i16* %3, align 2, !dbg !15095
  %5 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !15096
  %6 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %5, align 4, !dbg !15096
  %7 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %6, i32 0, i32 3, !dbg !15097
  %8 = load i8, i8* %7, align 1, !dbg !15097
  %9 = zext i8 %8 to i32, !dbg !15098
  tail call void @SFI_Dev_Command(i16 noundef zeroext %4, i32 noundef %9) #22, !dbg !15099
  %10 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 19, !dbg !15100
  %11 = load i8, i8* %10, align 4, !dbg !15100
  %12 = icmp eq i8 %11, 0, !dbg !15102
  br i1 %12, label %14, label %13, !dbg !15103

13:                                               ; preds = %1
  store i32 0, i32* @sf_dal_resume_time, align 4, !dbg !15104
  br label %14, !dbg !15106

14:                                               ; preds = %13, %1
  tail call void @SF_DAL_FLAG_SUS_CLR() #23, !dbg !15107
  tail call void @RestoreIRQMask(i32 noundef %2) #23, !dbg !15108
  ret void, !dbg !15109
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_FLAG_SUS_CLR() local_unnamed_addr #0 section ".ram_code" !dbg !15110 {
  %1 = tail call i32 @SaveAndSetIRQMask() #23, !dbg !15113
  call void @llvm.dbg.value(metadata i32 %1, metadata !15112, metadata !DIExpression()), !dbg !15114
  store i8 0, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !15115
  tail call void @RestoreIRQMask(i32 noundef %1) #23, !dbg !15116
  ret void, !dbg !15117
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Flash_SuspendOperation() local_unnamed_addr #0 section ".ram_code" !dbg !15118 {
  %1 = load %struct.SF_MTD_Data*, %struct.SF_MTD_Data** bitcast (i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2) to %struct.SF_MTD_Data**), align 4, !dbg !15122
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !15120, metadata !DIExpression()), !dbg !15123
  %2 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !15124, !range !4202
  %3 = icmp ne i8 %2, 0, !dbg !15124
  %4 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !15124
  %5 = icmp eq i8 %4, 0, !dbg !15124
  %6 = select i1 %3, i1 %5, i1 false, !dbg !15124
  br i1 %6, label %8, label %7, !dbg !15124

7:                                                ; preds = %0
  tail call void @Flash_ReturnReady() #23, !dbg !15127
  tail call void @Flash_ReturnReady() #23, !dbg !15129
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.259, i32 0, i32 0), i32 noundef 1313, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.Flash_SuspendOperation, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.260, i32 0, i32 0)) #25, !dbg !15129
  unreachable, !dbg !15129

8:                                                ; preds = %0
  %9 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 0, !dbg !15133
  %10 = load i32, i32* %9, align 4, !dbg !15133
  %11 = xor i32 %10, -1, !dbg !15133
  %12 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 5, !dbg !15133
  %13 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %12, align 4, !dbg !15133
  %14 = ptrtoint %struct.hal_cache_region_config_t* %13 to i32, !dbg !15133
  %15 = icmp eq i32 %11, %14, !dbg !15133
  br i1 %15, label %17, label %16, !dbg !15136

16:                                               ; preds = %8
  tail call void @Flash_ReturnReady() #23, !dbg !15137
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.259, i32 0, i32 0), i32 noundef 1315, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.Flash_SuspendOperation, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.260, i32 0, i32 0)) #25, !dbg !15137
  unreachable, !dbg !15137

17:                                               ; preds = %8
  tail call void @SF_DAL_Dev_Suspend(%struct.SF_MTD_Data* noundef nonnull %1) #23, !dbg !15139
  %18 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13
  %19 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12
  br label %20, !dbg !15140

20:                                               ; preds = %20, %17
  %21 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %18, align 4, !dbg !15141
  %22 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %21, i32 0, i32 16, !dbg !15143
  %23 = load i8, i8* %22, align 1, !dbg !15143
  %24 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %1, i8 noundef zeroext %23) #23, !dbg !15144
  call void @llvm.dbg.value(metadata i32 %24, metadata !15121, metadata !DIExpression()), !dbg !15123
  %25 = load i8*, i8** %19, align 4, !dbg !15145
  %26 = load i8, i8* %25, align 1, !dbg !15147
  %27 = zext i8 %26 to i32, !dbg !15147
  %28 = and i32 %24, %27, !dbg !15148
  %29 = icmp eq i32 %28, 0, !dbg !15149
  br i1 %29, label %30, label %20, !dbg !15150, !llvm.loop !15151

30:                                               ; preds = %20
  tail call void @SF_DAL_FLAG_SUS_SET() #23, !dbg !15153
  ret void, !dbg !15154
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SF_DAL_CreateDevLock(%struct.SF_MTD_Data* nocapture %0) local_unnamed_addr #10 section ".ram_code" !dbg !15155 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !15157, metadata !DIExpression()), !dbg !15158
  ret void, !dbg !15159
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @SF_DAL_Init_MXIC(%struct.NOR_MTD_Driver* nocapture readnone %0, %struct.SF_MTD_Data* nocapture noundef %1) local_unnamed_addr #7 !dbg !15160 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* undef, metadata !15183, metadata !DIExpression()), !dbg !15186
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !15184, metadata !DIExpression()), !dbg !15186
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12, !dbg !15187
  %4 = load i8*, i8** %3, align 4, !dbg !15187
  call void @llvm.dbg.value(metadata i8* %4, metadata !15185, metadata !DIExpression()), !dbg !15186
  store i8 1, i8* %4, align 1, !dbg !15188
  %5 = getelementptr inbounds i8, i8* %4, i32 1, !dbg !15189
  store i8 2, i8* %5, align 1, !dbg !15190
  %6 = getelementptr inbounds i8, i8* %4, i32 2, !dbg !15191
  store i8 8, i8* %6, align 1, !dbg !15192
  %7 = getelementptr inbounds i8, i8* %4, i32 3, !dbg !15193
  store i8 4, i8* %7, align 1, !dbg !15194
  %8 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !15195
  store i8 60, i8* %8, align 1, !dbg !15196
  %9 = getelementptr inbounds i8, i8* %4, i32 5, !dbg !15197
  store i8 -128, i8* %9, align 1, !dbg !15198
  %10 = getelementptr inbounds i8, i8* %4, i32 7, !dbg !15199
  store i8 96, i8* %10, align 1, !dbg !15200
  %11 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !15201
  %12 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !15201
  %13 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %12, i32 0, i32 15, !dbg !15202
  store i8 43, i8* %13, align 1, !dbg !15203
  %14 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !15204
  %15 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %14, i32 0, i32 13, !dbg !15205
  store i8 43, i8* %15, align 1, !dbg !15206
  %16 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !15207
  %17 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %16, i32 0, i32 14, !dbg !15208
  store i8 47, i8* %17, align 1, !dbg !15209
  %18 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !15210
  %19 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %18, i32 0, i32 11, !dbg !15211
  store i8 5, i8* %19, align 1, !dbg !15212
  %20 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !15213
  %21 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %20, i32 0, i32 12, !dbg !15214
  store i8 1, i8* %21, align 1, !dbg !15215
  %22 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !15216
  %23 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %22, i32 0, i32 17, !dbg !15217
  store i8 43, i8* %23, align 1, !dbg !15218
  %24 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 19, !dbg !15219
  store i8 22, i8* %24, align 4, !dbg !15220
  %25 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 20, i32 1, !dbg !15221
  %26 = load i8, i8* %25, align 1, !dbg !15221
  %27 = icmp eq i8 %26, 32, !dbg !15223
  br i1 %27, label %28, label %49, !dbg !15224

28:                                               ; preds = %2
  %29 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 20, i32 2, !dbg !15225
  %30 = load i8, i8* %29, align 1, !dbg !15225
  %31 = icmp eq i8 %30, 24, !dbg !15226
  br i1 %31, label %32, label %41, !dbg !15227

32:                                               ; preds = %28
  %33 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !15228
  %34 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %33, i32 0, i32 2, !dbg !15230
  store i8 117, i8* %34, align 1, !dbg !15231
  %35 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !15232
  %36 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %35, i32 0, i32 3, !dbg !15233
  store i8 122, i8* %36, align 1, !dbg !15234
  %37 = load i8, i8* %25, align 1, !dbg !15235
  %38 = icmp eq i8 %37, 32, !dbg !15237
  br i1 %38, label %39, label %49, !dbg !15238

39:                                               ; preds = %32
  %40 = load i8, i8* %29, align 1, !dbg !15240
  br label %41, !dbg !15240

41:                                               ; preds = %28, %39
  %42 = phi i8 [ %40, %39 ], [ %30, %28 ], !dbg !15240
  %43 = icmp eq i8 %42, 22, !dbg !15241
  br i1 %43, label %44, label %49, !dbg !15242

44:                                               ; preds = %41
  %45 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !15243
  %46 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %45, i32 0, i32 2, !dbg !15245
  store i8 117, i8* %46, align 1, !dbg !15246
  %47 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !15247
  %48 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %47, i32 0, i32 3, !dbg !15248
  store i8 122, i8* %48, align 1, !dbg !15249
  br label %49, !dbg !15250

49:                                               ; preds = %2, %44, %41, %32
  %50 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 28, !dbg !15251
  store i32 (i8*)* @SF_DAL_UnlockBlock_MXIC, i32 (i8*)** %50, align 4, !dbg !15252
  ret i32 0, !dbg !15253
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_UnlockBlock_MXIC(i8* nocapture noundef readonly %0) #0 section ".ram_code" !dbg !15254 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !15256, metadata !DIExpression()), !dbg !15260
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !15261
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !15257, metadata !DIExpression()), !dbg !15260
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #24, !dbg !15262
  %4 = getelementptr inbounds i8, i8* %0, i32 193, !dbg !15263
  %5 = load i8, i8* %4, align 1, !dbg !15265
  %6 = icmp eq i8 %5, -62, !dbg !15266
  br i1 %6, label %7, label %15, !dbg !15267

7:                                                ; preds = %1
  %8 = getelementptr inbounds i8, i8* %0, i32 194, !dbg !15268
  %9 = load i8, i8* %8, align 1, !dbg !15268
  %10 = icmp eq i8 %9, 32, !dbg !15269
  br i1 %10, label %11, label %15, !dbg !15270

11:                                               ; preds = %7
  %12 = getelementptr inbounds i8, i8* %0, i32 195, !dbg !15271
  %13 = load i8, i8* %12, align 1, !dbg !15271
  %14 = icmp eq i8 %13, 22, !dbg !15272
  br i1 %14, label %48, label %15, !dbg !15273

15:                                               ; preds = %11, %7, %1
  %16 = getelementptr inbounds i8, i8* %0, i32 198, !dbg !15274
  %17 = bitcast i8* %16 to i16*, !dbg !15274
  %18 = load i16, i16* %17, align 2, !dbg !15274
  %19 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !15275
  %20 = bitcast i8* %19 to %struct.SF_MTD_CMD**, !dbg !15275
  %21 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %20, align 4, !dbg !15275
  %22 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %21, i32 0, i32 1, !dbg !15276
  %23 = load i8, i8* %22, align 1, !dbg !15276
  %24 = zext i8 %23 to i32, !dbg !15277
  tail call void @SFI_Dev_Command(i16 noundef zeroext %18, i32 noundef %24) #22, !dbg !15278
  tail call void @SF_DAL_Dev_WaitReady_EMIINIT(%struct.SF_MTD_Data* noundef nonnull %3) #23, !dbg !15279
  %25 = load i16, i16* %17, align 2, !dbg !15280
  %26 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %20, align 4, !dbg !15281
  %27 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %26, i32 0, i32 11, !dbg !15282
  call void @llvm.dbg.value(metadata i8* %2, metadata !15259, metadata !DIExpression(DW_OP_deref)), !dbg !15260
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %25, i8* noundef nonnull %27, i8* noundef nonnull %2, i16 noundef zeroext 1, i16 noundef zeroext 1) #22, !dbg !15283
  %28 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %20, align 4, !dbg !15284
  %29 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %28, i32 0, i32 12, !dbg !15285
  %30 = load i8, i8* %29, align 1, !dbg !15285
  %31 = zext i8 %30 to i32, !dbg !15286
  call void @llvm.dbg.value(metadata i32 %31, metadata !15258, metadata !DIExpression()), !dbg !15260
  %32 = shl nuw nsw i32 %31, 8, !dbg !15287
  %33 = load i8, i8* %2, align 1, !dbg !15288
  call void @llvm.dbg.value(metadata i8 %33, metadata !15259, metadata !DIExpression()), !dbg !15260
  %34 = zext i8 %33 to i32, !dbg !15288
  %35 = getelementptr inbounds i8, i8* %0, i32 172, !dbg !15289
  %36 = bitcast i8* %35 to i8**, !dbg !15289
  %37 = load i8*, i8** %36, align 4, !dbg !15289
  %38 = getelementptr inbounds i8, i8* %37, i32 4, !dbg !15290
  %39 = load i8, i8* %38, align 1, !dbg !15290
  %40 = getelementptr inbounds i8, i8* %37, i32 5, !dbg !15291
  %41 = load i8, i8* %40, align 1, !dbg !15291
  %42 = or i8 %41, %39, !dbg !15292
  %43 = zext i8 %42 to i32, !dbg !15292
  %44 = xor i32 %43, -1, !dbg !15293
  %45 = and i32 %44, %34, !dbg !15294
  %46 = or i32 %45, %32, !dbg !15295
  call void @llvm.dbg.value(metadata i32 %46, metadata !15258, metadata !DIExpression()), !dbg !15260
  %47 = load i16, i16* %17, align 2, !dbg !15296
  call void @SFI_Dev_Command(i16 noundef zeroext %47, i32 noundef %46) #22, !dbg !15297
  call void @SF_DAL_Dev_WaitReady_EMIINIT(%struct.SF_MTD_Data* noundef nonnull %3) #23, !dbg !15298
  br label %48, !dbg !15299

48:                                               ; preds = %11, %15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #24, !dbg !15300
  ret i32 0, !dbg !15300
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_WaitReady_EMIINIT(%struct.SF_MTD_Data* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !15301 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !15303, metadata !DIExpression()), !dbg !15305
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #24, !dbg !15306
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23
  %4 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13
  %5 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 12
  br label %6, !dbg !15307

6:                                                ; preds = %6, %1
  %7 = load i16, i16* %3, align 2, !dbg !15308
  %8 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %4, align 4, !dbg !15310
  %9 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %8, i32 0, i32 16, !dbg !15311
  call void @llvm.dbg.value(metadata i8* %2, metadata !15304, metadata !DIExpression(DW_OP_deref)), !dbg !15305
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %7, i8* noundef nonnull %9, i8* noundef nonnull %2, i16 noundef zeroext 1, i16 noundef zeroext 1) #22, !dbg !15312
  %10 = load i8, i8* %2, align 1, !dbg !15313
  call void @llvm.dbg.value(metadata i8 %10, metadata !15304, metadata !DIExpression()), !dbg !15305
  %11 = load i8*, i8** %5, align 4, !dbg !15314
  %12 = load i8, i8* %11, align 1, !dbg !15315
  %13 = and i8 %12, %10, !dbg !15316
  %14 = icmp eq i8 %13, 0, !dbg !15317
  br i1 %14, label %15, label %6, !dbg !15318, !llvm.loop !15319

15:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #24, !dbg !15321
  ret void, !dbg !15321
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @SF_DAL_Init_WINBOND(%struct.NOR_MTD_Driver* nocapture readnone %0, %struct.SF_MTD_Data* nocapture noundef %1) local_unnamed_addr #7 !dbg !15322 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* undef, metadata !15324, metadata !DIExpression()), !dbg !15327
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !15325, metadata !DIExpression()), !dbg !15327
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12, !dbg !15328
  %4 = load i8*, i8** %3, align 4, !dbg !15328
  call void @llvm.dbg.value(metadata i8* %4, metadata !15326, metadata !DIExpression()), !dbg !15327
  store i8 1, i8* %4, align 1, !dbg !15329
  %5 = getelementptr inbounds i8, i8* %4, i32 1, !dbg !15330
  store i8 2, i8* %5, align 1, !dbg !15331
  %6 = getelementptr inbounds i8, i8* %4, i32 2, !dbg !15332
  store i8 -128, i8* %6, align 1, !dbg !15333
  %7 = getelementptr inbounds i8, i8* %4, i32 3, !dbg !15334
  store i8 -128, i8* %7, align 1, !dbg !15335
  %8 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !15336
  store i8 60, i8* %8, align 1, !dbg !15337
  %9 = getelementptr inbounds i8, i8* %4, i32 5, !dbg !15338
  store i8 -128, i8* %9, align 1, !dbg !15339
  %10 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !15340
  %11 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !15340
  %12 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %11, i32 0, i32 10, !dbg !15341
  store i8 -97, i8* %12, align 1, !dbg !15342
  %13 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !15343
  %14 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %13, i32 0, i32 15, !dbg !15344
  store i8 53, i8* %14, align 1, !dbg !15345
  %15 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !15346
  %16 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %15, i32 0, i32 13, !dbg !15347
  store i8 53, i8* %16, align 1, !dbg !15348
  %17 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !15349
  %18 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %17, i32 0, i32 11, !dbg !15350
  store i8 5, i8* %18, align 1, !dbg !15351
  %19 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !15352
  %20 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %19, i32 0, i32 12, !dbg !15353
  store i8 1, i8* %20, align 1, !dbg !15354
  %21 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !15355
  %22 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %21, i32 0, i32 2, !dbg !15356
  store i8 117, i8* %22, align 1, !dbg !15357
  %23 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !15358
  %24 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %23, i32 0, i32 3, !dbg !15359
  store i8 122, i8* %24, align 1, !dbg !15360
  %25 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 19, !dbg !15361
  store i8 22, i8* %25, align 4, !dbg !15362
  %26 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 28, !dbg !15363
  store i32 (i8*)* @SF_DAL_UnlockBlock_None, i32 (i8*)** %26, align 4, !dbg !15364
  ret i32 0, !dbg !15365
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SF_DAL_Init_WINBOND_OTP(%struct.NOR_MTD_Driver* nocapture readnone %0, %struct.SF_MTD_Data* nocapture readnone %1) local_unnamed_addr #10 !dbg !15366 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* undef, metadata !15368, metadata !DIExpression()), !dbg !15370
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !15369, metadata !DIExpression()), !dbg !15370
  ret i32 0, !dbg !15371
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_Init_Common(%struct.NOR_MTD_Driver* nocapture noundef writeonly %0, %struct.SF_MTD_Data* nocapture noundef %1) local_unnamed_addr #0 !dbg !15372 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* %0, metadata !15374, metadata !DIExpression()), !dbg !15376
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !15375, metadata !DIExpression()), !dbg !15376
  %3 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 0, !dbg !15377
  store i32 (i8*, i8*)* @SF_DAL_MountDevice, i32 (i8*, i8*)** %3, align 4, !dbg !15378
  %4 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 1, !dbg !15379
  store i32 (i8*)* @SF_DAL_ShutDown, i32 (i8*)** %4, align 4, !dbg !15380
  %5 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 2, !dbg !15381
  store i8* (i8*, i32, i32)* @MapWindow, i8* (i8*, i32, i32)** %5, align 4, !dbg !15382
  %6 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 3, !dbg !15383
  store i32 (i8*, i32)* @SF_DAL_EraseBlock, i32 (i8*, i32)** %6, align 4, !dbg !15384
  %7 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 4, !dbg !15385
  store i32 (i8*, i8*, i8*, i32)* @SF_DAL_ProgramData, i32 (i8*, i8*, i8*, i32)** %7, align 4, !dbg !15386
  %8 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 5, !dbg !15387
  store i32 (i8*, i32)* @SF_DAL_NonBlockEraseBlock, i32 (i8*, i32)** %8, align 4, !dbg !15388
  %9 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 6, !dbg !15389
  store i32 (i8*, i32)* @SF_DAL_CheckDeviceReady, i32 (i8*, i32)** %9, align 4, !dbg !15390
  %10 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 7, !dbg !15391
  store i32 (i8*, i32)* @SF_DAL_SuspendErase, i32 (i8*, i32)** %10, align 4, !dbg !15392
  %11 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 8, !dbg !15393
  store i32 (i8*, i32)* @SF_DAL_ResumeErase, i32 (i8*, i32)** %11, align 4, !dbg !15394
  %12 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 9, !dbg !15395
  store i32 (i8*, i32)* null, i32 (i8*, i32)** %12, align 4, !dbg !15396
  %13 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 10, !dbg !15397
  store i32 (i8*, i32, i32, i8*, i32)* null, i32 (i8*, i32, i32, i8*, i32)** %13, align 4, !dbg !15398
  %14 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 11, !dbg !15399
  store i32 (i8*, i32*)* null, i32 (i8*, i32*)** %14, align 4, !dbg !15400
  %15 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 12, !dbg !15401
  store i32 (i8*, i8*, i32)* @SF_DAL_LockEraseBlkAddr, i32 (i8*, i8*, i32)** %15, align 4, !dbg !15402
  %16 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 13, !dbg !15403
  store i1 (i8*, i32)* null, i1 (i8*, i32)** %16, align 4, !dbg !15404
  %17 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 14, !dbg !15405
  store i32 (i8*, i32, i8*)* @SF_DAL_IOCtrl, i32 (i8*, i32, i8*)** %17, align 4, !dbg !15406
  %18 = tail call i32 @custom_get_NORFLASH_Size() #22, !dbg !15407
  %19 = icmp ugt i32 %18, 16777216, !dbg !15409
  %20 = select i1 %19, i8 4, i8 3, !dbg !15410
  %21 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 22, !dbg !15411
  store i8 %20, i8* %21, align 1, !dbg !15413
  %22 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !15414
  %23 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !15414
  %24 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %23, i32 0, i32 17, !dbg !15415
  store i8 0, i8* %24, align 1, !dbg !15416
  %25 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !15417
  %26 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %25, i32 0, i32 10, !dbg !15418
  store i8 -81, i8* %26, align 1, !dbg !15419
  %27 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !15420
  %28 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %27, i32 0, i32 9, !dbg !15421
  store i8 -97, i8* %28, align 1, !dbg !15422
  %29 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !15423
  %30 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %29, i32 0, i32 0, !dbg !15424
  store i8 2, i8* %30, align 1, !dbg !15425
  %31 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !15426
  %32 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %31, i32 0, i32 6, !dbg !15427
  store i8 32, i8* %32, align 1, !dbg !15428
  %33 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !15429
  %34 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %33, i32 0, i32 7, !dbg !15430
  store i8 82, i8* %34, align 1, !dbg !15431
  %35 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !15432
  %36 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %35, i32 0, i32 8, !dbg !15433
  store i8 -40, i8* %36, align 1, !dbg !15434
  %37 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !15435
  %38 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %37, i32 0, i32 2, !dbg !15436
  store i8 -80, i8* %38, align 1, !dbg !15437
  %39 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !15438
  %40 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %39, i32 0, i32 3, !dbg !15439
  store i8 48, i8* %40, align 1, !dbg !15440
  %41 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !15441
  %42 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %41, i32 0, i32 1, !dbg !15442
  store i8 6, i8* %42, align 1, !dbg !15443
  %43 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !15444
  %44 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %43, i32 0, i32 18, !dbg !15445
  store i8 -71, i8* %44, align 1, !dbg !15446
  %45 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !15447
  %46 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %45, i32 0, i32 19, !dbg !15448
  store i8 -85, i8* %46, align 1, !dbg !15449
  %47 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !15450
  %48 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %47, i32 0, i32 16, !dbg !15451
  store i8 5, i8* %48, align 1, !dbg !15452
  %49 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 15, !dbg !15453
  store i16 0, i16* %49, align 4, !dbg !15454
  %50 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 3, !dbg !15455
  store %struct.anon.37* null, %struct.anon.37** %50, align 4, !dbg !15456
  %51 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 2, !dbg !15457
  store %struct.anon.37* null, %struct.anon.37** %51, align 4, !dbg !15458
  %52 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 4, !dbg !15459
  store i8 0, i8* %52, align 4, !dbg !15460
  %53 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 19, !dbg !15461
  store i8 5, i8* %53, align 4, !dbg !15462
  ret i32 0, !dbg !15463
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_MountDevice(i8* nocapture noundef readonly %0, i8* nocapture noundef %1) #0 section ".ram_code" !dbg !15464 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15466, metadata !DIExpression()), !dbg !15484
  call void @llvm.dbg.value(metadata i8* %1, metadata !15467, metadata !DIExpression()), !dbg !15484
  call void @llvm.dbg.value(metadata i8* %1, metadata !15468, metadata !DIExpression()), !dbg !15484
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !15485
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !15481, metadata !DIExpression()), !dbg !15484
  call void @llvm.dbg.value(metadata i32 0, metadata !15482, metadata !DIExpression()), !dbg !15484
  %4 = bitcast i8* %1 to i32*, !dbg !15486
  store i32 0, i32* %4, align 4, !dbg !15487
  %5 = getelementptr inbounds i8, i8* %0, i32 20
  %6 = bitcast i8* %5 to %struct.hal_cache_region_config_t**
  call void @llvm.dbg.value(metadata i32 0, metadata !15482, metadata !DIExpression()), !dbg !15484
  %7 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %6, align 4, !dbg !15488
  %8 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %7, i32 0, i32 0, !dbg !15489
  %9 = load i32, i32* %8, align 4, !dbg !15489
  %10 = icmp eq i32 %9, 0, !dbg !15490
  br i1 %10, label %34, label %11, !dbg !15491

11:                                               ; preds = %2
  %12 = getelementptr inbounds i8, i8* %1, i32 4
  %13 = bitcast i8* %12 to [8 x i32]*
  %14 = getelementptr inbounds i8, i8* %1, i32 68
  %15 = bitcast i8* %14 to [8 x i32]*
  br label %16, !dbg !15491

16:                                               ; preds = %11, %16
  %17 = phi i32 [ %9, %11 ], [ %32, %16 ]
  %18 = phi i32 [ 0, %11 ], [ %29, %16 ]
  call void @llvm.dbg.value(metadata i32 %18, metadata !15482, metadata !DIExpression()), !dbg !15484
  %19 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i32 0, i32 %18, !dbg !15492
  store i32 %17, i32* %19, align 4, !dbg !15494
  %20 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %6, align 4, !dbg !15495
  %21 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %20, i32 %18, i32 1, !dbg !15496
  %22 = load i32, i32* %21, align 4, !dbg !15496
  %23 = getelementptr inbounds [8 x i32], [8 x i32]* %15, i32 0, i32 %18, !dbg !15497
  store i32 %22, i32* %23, align 4, !dbg !15498
  %24 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %6, align 4, !dbg !15499
  %25 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %24, i32 %18, i32 1, !dbg !15500
  %26 = load i32, i32* %25, align 4, !dbg !15500
  %27 = load i32, i32* %4, align 4, !dbg !15501
  %28 = add i32 %27, %26, !dbg !15501
  store i32 %28, i32* %4, align 4, !dbg !15501
  %29 = add i32 %18, 1, !dbg !15502
  call void @llvm.dbg.value(metadata i32 %29, metadata !15482, metadata !DIExpression()), !dbg !15484
  %30 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %6, align 4, !dbg !15488
  %31 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %30, i32 %29, i32 0, !dbg !15489
  %32 = load i32, i32* %31, align 4, !dbg !15489
  %33 = icmp eq i32 %32, 0, !dbg !15490
  br i1 %33, label %34, label %16, !dbg !15491, !llvm.loop !15503

34:                                               ; preds = %16, %2
  %35 = phi i32 [ 0, %2 ], [ %29, %16 ], !dbg !15484
  %36 = getelementptr inbounds i8, i8* %1, i32 100, !dbg !15505
  %37 = bitcast i8* %36 to i32*, !dbg !15505
  store i32 %35, i32* %37, align 4, !dbg !15506
  %38 = getelementptr inbounds i8, i8* %1, i32 104, !dbg !15507
  %39 = bitcast i8* %38 to i16*, !dbg !15507
  store i16 512, i16* %39, align 4, !dbg !15508
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef nonnull %3) #23, !dbg !15509
  br label %40, !dbg !15510

40:                                               ; preds = %40, %34
  %41 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef %0, i32 undef) #23, !dbg !15511
  call void @llvm.dbg.value(metadata i32 %41, metadata !15483, metadata !DIExpression()), !dbg !15484
  %42 = icmp eq i32 %41, -121, !dbg !15513
  br i1 %42, label %40, label %43, !dbg !15514, !llvm.loop !15515

43:                                               ; preds = %40
  ret i32 0, !dbg !15517
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_ShutDown(i8* nocapture noundef %0) #0 section ".ram_code" !dbg !15518 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15520, metadata !DIExpression()), !dbg !15524
  %2 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !15525
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %2, metadata !15521, metadata !DIExpression()), !dbg !15524
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #23, !dbg !15526
  %3 = getelementptr inbounds i8, i8* %0, i32 176
  %4 = bitcast i8* %3 to %struct.SF_MTD_CMD**
  %5 = getelementptr inbounds i8, i8* %0, i32 172
  %6 = bitcast i8* %5 to i8**
  br label %7, !dbg !15527

7:                                                ; preds = %25, %1
  %8 = tail call i32 @SaveAndSetIRQMask() #23, !dbg !15528
  call void @llvm.dbg.value(metadata i32 %8, metadata !15523, metadata !DIExpression()), !dbg !15524
  %9 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !15530, !range !4202
  %10 = icmp eq i8 %9, 0, !dbg !15530
  br i1 %10, label %12, label %11, !dbg !15532

11:                                               ; preds = %7
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef %2) #23, !dbg !15533
  store i32 -1, i32* @gNOR_ReturnReadyEnd, align 4, !dbg !15535
  br label %12, !dbg !15536

12:                                               ; preds = %11, %7
  %13 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %4, align 4, !dbg !15537
  %14 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %13, i32 0, i32 16, !dbg !15538
  %15 = load i8, i8* %14, align 1, !dbg !15538
  %16 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef %2, i8 noundef zeroext %15) #23, !dbg !15539
  call void @llvm.dbg.value(metadata i32 %16, metadata !15522, metadata !DIExpression()), !dbg !15524
  %17 = load i8*, i8** %6, align 4, !dbg !15540
  %18 = load i8, i8* %17, align 1, !dbg !15542
  %19 = zext i8 %18 to i32, !dbg !15542
  %20 = and i32 %16, %19, !dbg !15543
  %21 = icmp eq i32 %20, 0, !dbg !15544
  br i1 %21, label %22, label %25, !dbg !15545

22:                                               ; preds = %12
  tail call void @SF_DAL_FLAG_BUSY_CLR() #23, !dbg !15546
  tail call void @RestoreIRQMask(i32 noundef %8) #23, !dbg !15548
  %23 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !15549
  %24 = bitcast i8* %23 to i8**, !dbg !15549
  store i8* null, i8** %24, align 4, !dbg !15550
  tail call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #23, !dbg !15551
  ret i32 0, !dbg !15552

25:                                               ; preds = %12
  tail call void @RestoreIRQMask(i32 noundef %8) #23, !dbg !15553
  br label %7, !dbg !15527, !llvm.loop !15555
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_EraseBlock(i8* nocapture noundef %0, i32 noundef %1) #0 section ".ram_code" !dbg !15557 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15559, metadata !DIExpression()), !dbg !15573
  call void @llvm.dbg.value(metadata i32 %1, metadata !15560, metadata !DIExpression()), !dbg !15573
  call void @llvm.dbg.value(metadata i32 0, metadata !15561, metadata !DIExpression()), !dbg !15573
  call void @llvm.dbg.value(metadata i32 1, metadata !15565, metadata !DIExpression()), !dbg !15573
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !15574
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !15566, metadata !DIExpression()), !dbg !15573
  call void @llvm.dbg.value(metadata i32 0, metadata !15567, metadata !DIExpression()), !dbg !15573
  %4 = bitcast i8* %0 to i32*, !dbg !15575
  %5 = load i32, i32* %4, align 4, !dbg !15575
  %6 = xor i32 %5, -1, !dbg !15575
  %7 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !15575
  %8 = bitcast i8* %7 to %struct.hal_cache_region_config_t**, !dbg !15575
  %9 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %8, align 4, !dbg !15575
  %10 = ptrtoint %struct.hal_cache_region_config_t* %9 to i32, !dbg !15575
  %11 = icmp eq i32 %6, %10, !dbg !15575
  br i1 %11, label %13, label %12, !dbg !15578

12:                                               ; preds = %2
  tail call void @Flash_ReturnReady() #23, !dbg !15579
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.259, i32 0, i32 0), i32 noundef 2829, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.SF_DAL_EraseBlock, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.260, i32 0, i32 0)) #25, !dbg !15579
  unreachable, !dbg !15579

13:                                               ; preds = %2
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #23, !dbg !15581
  %14 = getelementptr inbounds i8, i8* %0, i32 196, !dbg !15582
  store i8 2, i8* %14, align 4, !dbg !15583
  call void @llvm.dbg.value(metadata i32 %19, metadata !15567, metadata !DIExpression()), !dbg !15573
  call void @llvm.dbg.value(metadata i32 %1, metadata !15560, metadata !DIExpression(DW_OP_constu, 16777215, DW_OP_and, DW_OP_stack_value)), !dbg !15573
  br label %15, !dbg !15584

15:                                               ; preds = %15, %13
  %16 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef %0, i32 undef) #23, !dbg !15585
  call void @llvm.dbg.value(metadata i32 %16, metadata !15561, metadata !DIExpression()), !dbg !15573
  %17 = icmp eq i32 %16, -121, !dbg !15587
  br i1 %17, label %15, label %18, !dbg !15588, !llvm.loop !15589

18:                                               ; preds = %15
  %19 = lshr i32 %1, 24, !dbg !15591
  %20 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !15592
  %21 = bitcast i8* %20 to i8**, !dbg !15592
  %22 = load i8*, i8** %21, align 4, !dbg !15592
  %23 = ptrtoint i8* %22 to i32, !dbg !15593
  %24 = tail call i32 @CMEM_BlockSize(i32 noundef %23) #22, !dbg !15594
  call void @llvm.dbg.value(metadata i32 %24, metadata !15562, metadata !DIExpression()), !dbg !15573
  call void @llvm.dbg.value(metadata i32 %24, metadata !15563, metadata !DIExpression()), !dbg !15573
  %25 = getelementptr inbounds i8, i8* %0, i32 186, !dbg !15595
  %26 = bitcast i8* %25 to i16*, !dbg !15595
  %27 = load i16, i16* %26, align 2, !dbg !15595
  %28 = zext i16 %27 to i32, !dbg !15596
  call void @llvm.dbg.value(metadata i32 %28, metadata !15568, metadata !DIExpression()), !dbg !15597
  %29 = lshr i32 %24, 10, !dbg !15598
  call void @llvm.dbg.value(metadata i32 %29, metadata !15571, metadata !DIExpression()), !dbg !15597
  %30 = and i32 %29, %28, !dbg !15599
  %31 = and i32 %24, 1024
  %32 = or i32 %30, %31, !dbg !15601
  %33 = icmp eq i32 %32, 0, !dbg !15601
  call void @llvm.dbg.value(metadata i32 0, metadata !15572, metadata !DIExpression()), !dbg !15597
  call void @llvm.dbg.value(metadata i32 %29, metadata !15571, metadata !DIExpression()), !dbg !15597
  call void @llvm.dbg.value(metadata i32 %28, metadata !15568, metadata !DIExpression()), !dbg !15597
  call void @llvm.dbg.value(metadata i32 1, metadata !15565, metadata !DIExpression()), !dbg !15573
  call void @llvm.dbg.value(metadata i32 %24, metadata !15563, metadata !DIExpression()), !dbg !15573
  br i1 %33, label %34, label %51, !dbg !15601

34:                                               ; preds = %18, %34
  %35 = phi i32 [ %48, %34 ], [ 0, %18 ]
  %36 = phi i32 [ %47, %34 ], [ %29, %18 ]
  %37 = phi i32 [ %46, %34 ], [ %28, %18 ]
  %38 = phi i32 [ %45, %34 ], [ 1, %18 ]
  %39 = phi i32 [ %44, %34 ], [ %24, %18 ]
  call void @llvm.dbg.value(metadata i32 %35, metadata !15572, metadata !DIExpression()), !dbg !15597
  call void @llvm.dbg.value(metadata i32 %36, metadata !15571, metadata !DIExpression()), !dbg !15597
  call void @llvm.dbg.value(metadata i32 %37, metadata !15568, metadata !DIExpression()), !dbg !15597
  call void @llvm.dbg.value(metadata i32 %38, metadata !15565, metadata !DIExpression()), !dbg !15573
  call void @llvm.dbg.value(metadata i32 %39, metadata !15563, metadata !DIExpression()), !dbg !15573
  %40 = and i32 %37, 1, !dbg !15602
  %41 = icmp eq i32 %40, 0, !dbg !15602
  %42 = add i32 %35, 10, !dbg !15608
  %43 = shl nuw i32 1, %42, !dbg !15608
  %44 = select i1 %41, i32 %39, i32 %43, !dbg !15608
  %45 = select i1 %41, i32 %38, i32 %36, !dbg !15608
  call void @llvm.dbg.value(metadata i32 %45, metadata !15565, metadata !DIExpression()), !dbg !15573
  call void @llvm.dbg.value(metadata i32 %44, metadata !15563, metadata !DIExpression()), !dbg !15573
  %46 = lshr i32 %37, 1, !dbg !15609
  call void @llvm.dbg.value(metadata i32 %46, metadata !15568, metadata !DIExpression()), !dbg !15597
  %47 = lshr i32 %36, 1, !dbg !15610
  call void @llvm.dbg.value(metadata i32 %47, metadata !15571, metadata !DIExpression()), !dbg !15597
  %48 = add i32 %35, 1, !dbg !15611
  call void @llvm.dbg.value(metadata i32 %48, metadata !15572, metadata !DIExpression()), !dbg !15597
  %49 = and i32 %36, 2, !dbg !15612
  %50 = icmp eq i32 %49, 0, !dbg !15612
  br i1 %50, label %34, label %51, !dbg !15613, !llvm.loop !15614

51:                                               ; preds = %34, %18
  %52 = phi i32 [ %24, %18 ], [ %44, %34 ], !dbg !15616
  %53 = phi i32 [ 1, %18 ], [ %45, %34 ], !dbg !15617
  call void @llvm.dbg.value(metadata i32 %53, metadata !15565, metadata !DIExpression()), !dbg !15573
  call void @llvm.dbg.value(metadata i32 %52, metadata !15563, metadata !DIExpression()), !dbg !15573
  switch i32 %52, label %69 [
    i32 4096, label %54
    i32 32768, label %59
    i32 65536, label %64
  ], !dbg !15618

54:                                               ; preds = %51
  %55 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !15619
  %56 = bitcast i8* %55 to %struct.SF_MTD_CMD**, !dbg !15619
  %57 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %56, align 4, !dbg !15619
  %58 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %57, i32 0, i32 6, !dbg !15621
  br label %70, !dbg !15622

59:                                               ; preds = %51
  %60 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !15623
  %61 = bitcast i8* %60 to %struct.SF_MTD_CMD**, !dbg !15623
  %62 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %61, align 4, !dbg !15623
  %63 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %62, i32 0, i32 7, !dbg !15624
  br label %70, !dbg !15625

64:                                               ; preds = %51
  %65 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !15626
  %66 = bitcast i8* %65 to %struct.SF_MTD_CMD**, !dbg !15626
  %67 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %66, align 4, !dbg !15626
  %68 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %67, i32 0, i32 8, !dbg !15627
  br label %70, !dbg !15628

69:                                               ; preds = %51
  tail call void @Flash_ReturnReady() #23, !dbg !15629
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.259, i32 0, i32 0), i32 noundef 2897, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.SF_DAL_EraseBlock, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.260, i32 0, i32 0)) #25, !dbg !15629
  unreachable, !dbg !15629

70:                                               ; preds = %54, %59, %64
  %71 = phi i8* [ %58, %54 ], [ %63, %59 ], [ %68, %64 ]
  %72 = phi %struct.SF_MTD_CMD* [ %57, %54 ], [ %62, %59 ], [ %67, %64 ]
  %73 = load i8, i8* %71, align 1, !dbg !15633
  %74 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %72, i32 0, i32 5, !dbg !15633
  store i8 %73, i8* %74, align 1, !dbg !15633
  call void @llvm.dbg.value(metadata i32 %53, metadata !15565, metadata !DIExpression()), !dbg !15573
  call void @llvm.dbg.value(metadata i32 %52, metadata !15563, metadata !DIExpression()), !dbg !15573
  %75 = trunc i32 %19 to i8, !dbg !15634
  switch i8 %75, label %96 [
    i8 -6, label %76
    i8 -5, label %81
    i8 -4, label %86
  ], !dbg !15634

76:                                               ; preds = %70
  %77 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !15635
  %78 = bitcast i8* %77 to %struct.SF_MTD_CMD**, !dbg !15635
  %79 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %78, align 4, !dbg !15635
  %80 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %79, i32 0, i32 6, !dbg !15637
  br label %91, !dbg !15638

81:                                               ; preds = %70
  %82 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !15639
  %83 = bitcast i8* %82 to %struct.SF_MTD_CMD**, !dbg !15639
  %84 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %83, align 4, !dbg !15639
  %85 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %84, i32 0, i32 7, !dbg !15640
  br label %91, !dbg !15641

86:                                               ; preds = %70
  %87 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !15642
  %88 = bitcast i8* %87 to %struct.SF_MTD_CMD**, !dbg !15642
  %89 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %88, align 4, !dbg !15642
  %90 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %89, i32 0, i32 8, !dbg !15643
  br label %91, !dbg !15644

91:                                               ; preds = %76, %81, %86
  %92 = phi i8* [ %90, %86 ], [ %85, %81 ], [ %80, %76 ]
  %93 = phi %struct.SF_MTD_CMD* [ %89, %86 ], [ %84, %81 ], [ %79, %76 ]
  %94 = load i8, i8* %92, align 1, !dbg !15645
  %95 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %93, i32 0, i32 5, !dbg !15645
  store i8 %94, i8* %95, align 1, !dbg !15645
  br label %96, !dbg !15646

96:                                               ; preds = %91, %70
  call void @llvm.dbg.value(metadata i8* undef, metadata !15564, metadata !DIExpression()), !dbg !15573
  call void @llvm.dbg.value(metadata i32 %53, metadata !15565, metadata !DIExpression()), !dbg !15573
  call void @llvm.dbg.value(metadata i32 %16, metadata !15561, metadata !DIExpression()), !dbg !15573
  %97 = icmp eq i32 %53, 0, !dbg !15646
  br i1 %97, label %111, label %98, !dbg !15649

98:                                               ; preds = %96
  %99 = load i8*, i8** %21, align 4, !dbg !15650
  call void @llvm.dbg.value(metadata i8* %99, metadata !15564, metadata !DIExpression()), !dbg !15573
  %100 = ptrtoint i8* %99 to i32, !dbg !15651
  call void @llvm.dbg.value(metadata i32 %100, metadata !15564, metadata !DIExpression()), !dbg !15573
  br label %101, !dbg !15649

101:                                              ; preds = %98, %107
  %102 = phi i32 [ %108, %107 ], [ %53, %98 ]
  %103 = phi i32 [ %109, %107 ], [ %100, %98 ]
  call void @llvm.dbg.value(metadata i32 %102, metadata !15565, metadata !DIExpression()), !dbg !15573
  call void @llvm.dbg.value(metadata i32 %103, metadata !15564, metadata !DIExpression()), !dbg !15573
  tail call void @SF_DAL_Dev_EraseBlock(%struct.SF_MTD_Data* noundef %3, i32 noundef %103) #23, !dbg !15652
  br label %104, !dbg !15654

104:                                              ; preds = %104, %101
  %105 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef %0, i32 undef) #23, !dbg !15655
  call void @llvm.dbg.value(metadata i32 %105, metadata !15561, metadata !DIExpression()), !dbg !15573
  %106 = icmp eq i32 %105, -121, !dbg !15657
  br i1 %106, label %104, label %107, !dbg !15659, !llvm.loop !15660

107:                                              ; preds = %104
  %108 = add i32 %102, -1, !dbg !15662
  call void @llvm.dbg.value(metadata i32 %108, metadata !15565, metadata !DIExpression()), !dbg !15573
  %109 = add i32 %103, %52, !dbg !15663
  call void @llvm.dbg.value(metadata i32 %109, metadata !15564, metadata !DIExpression()), !dbg !15573
  call void @llvm.dbg.value(metadata i32 %105, metadata !15561, metadata !DIExpression()), !dbg !15573
  %110 = icmp eq i32 %108, 0, !dbg !15646
  br i1 %110, label %111, label %101, !dbg !15649, !llvm.loop !15664

111:                                              ; preds = %107, %96
  %112 = phi i32 [ %16, %96 ], [ %105, %107 ], !dbg !15573
  store i8 0, i8* %14, align 4, !dbg !15666
  tail call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #23, !dbg !15667
  ret i32 %112, !dbg !15668
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_ProgramData(i8* nocapture noundef %0, i8* noundef %1, i8* noundef %2, i32 noundef %3) #0 section ".ram_code" !dbg !15669 {
  %5 = alloca i8*, align 4
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !15671, metadata !DIExpression()), !dbg !15688
  call void @llvm.dbg.value(metadata i8* %1, metadata !15672, metadata !DIExpression()), !dbg !15688
  call void @llvm.dbg.value(metadata i8* %2, metadata !15673, metadata !DIExpression()), !dbg !15688
  call void @llvm.dbg.value(metadata i32 %3, metadata !15674, metadata !DIExpression()), !dbg !15688
  %7 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !15689
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %7, metadata !15675, metadata !DIExpression()), !dbg !15688
  %8 = ptrtoint i8* %1 to i32, !dbg !15690
  call void @llvm.dbg.value(metadata i32 %8, metadata !15677, metadata !DIExpression()), !dbg !15688
  %9 = bitcast i8** %5 to i8*, !dbg !15691
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #24, !dbg !15691
  call void @llvm.dbg.value(metadata i8* %2, metadata !15678, metadata !DIExpression()), !dbg !15688
  store i8* %2, i8** %5, align 4, !dbg !15692
  call void @llvm.dbg.value(metadata i32 0, metadata !15680, metadata !DIExpression()), !dbg !15688
  %10 = bitcast i32* %6 to i8*, !dbg !15693
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #24, !dbg !15693
  %11 = bitcast i8* %0 to i32*, !dbg !15694
  %12 = load i32, i32* %11, align 4, !dbg !15694
  %13 = xor i32 %12, -1, !dbg !15694
  %14 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !15694
  %15 = bitcast i8* %14 to %struct.hal_cache_region_config_t**, !dbg !15694
  %16 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %15, align 4, !dbg !15694
  %17 = ptrtoint %struct.hal_cache_region_config_t* %16 to i32, !dbg !15694
  %18 = icmp eq i32 %13, %17, !dbg !15694
  br i1 %18, label %20, label %19, !dbg !15697

19:                                               ; preds = %4
  tail call void @Flash_ReturnReady() #23, !dbg !15698
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.259, i32 0, i32 0), i32 noundef 2545, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.SF_DAL_ProgramData, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.260, i32 0, i32 0)) #25, !dbg !15698
  unreachable, !dbg !15698

20:                                               ; preds = %4
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #23, !dbg !15700
  %21 = getelementptr inbounds i8, i8* %0, i32 196, !dbg !15701
  store i8 1, i8* %21, align 4, !dbg !15702
  br label %22, !dbg !15703

22:                                               ; preds = %22, %20
  %23 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef %0, i32 undef) #23, !dbg !15704
  call void @llvm.dbg.value(metadata i32 %23, metadata !15680, metadata !DIExpression()), !dbg !15688
  %24 = icmp eq i32 %23, -121, !dbg !15706
  br i1 %24, label %22, label %25, !dbg !15707, !llvm.loop !15708

25:                                               ; preds = %22
  %26 = icmp eq i32 %3, 0, !dbg !15710
  br i1 %26, label %104, label %27, !dbg !15711

27:                                               ; preds = %25
  %28 = getelementptr inbounds i8, i8* %0, i32 200
  %29 = bitcast i8* %28 to i32*
  %30 = getelementptr inbounds i8, i8* %0, i32 197
  %31 = getelementptr inbounds i8, i8* %0, i32 176
  %32 = bitcast i8* %31 to %struct.SF_MTD_CMD**
  %33 = getelementptr inbounds i8, i8* %0, i32 198
  %34 = bitcast i8* %33 to i16*
  br label %35, !dbg !15711

35:                                               ; preds = %27, %96
  %36 = phi i8* [ %99, %96 ], [ %2, %27 ], !dbg !15712
  %37 = phi i32 [ %100, %96 ], [ %3, %27 ]
  %38 = phi i32 [ %88, %96 ], [ %8, %27 ], !dbg !15688
  call void @llvm.dbg.value(metadata i32 %38, metadata !15677, metadata !DIExpression()), !dbg !15688
  call void @llvm.dbg.value(metadata i32 %37, metadata !15674, metadata !DIExpression()), !dbg !15688
  call void @llvm.dbg.value(metadata i8* %36, metadata !15678, metadata !DIExpression()), !dbg !15688
  call void @llvm.dbg.value(metadata i8* %36, metadata !15679, metadata !DIExpression()), !dbg !15688
  %39 = load i32, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !15713
  %40 = shl i32 %39, 1, !dbg !15714
  %41 = add i32 %40, -1, !dbg !15715
  %42 = and i32 %41, %38, !dbg !15716
  %43 = sub i32 %40, %42, !dbg !15717
  %44 = icmp ugt i32 %37, %43, !dbg !15718
  %45 = select i1 %44, i32 %43, i32 %37, !dbg !15719
  call void @llvm.dbg.value(metadata i32 %45, metadata !15681, metadata !DIExpression()), !dbg !15688
  call void @llvm.dbg.value(metadata i32 %45, metadata !15682, metadata !DIExpression()), !dbg !15688
  store i32 %45, i32* %6, align 4, !dbg !15720
  call void @llvm.dbg.value(metadata i8* %36, metadata !15678, metadata !DIExpression()), !dbg !15688
  %46 = ptrtoint i8* %36 to i32, !dbg !15721
  %47 = and i32 %46, 134217728, !dbg !15722
  %48 = icmp eq i32 %47, 0, !dbg !15722
  br i1 %48, label %58, label %49, !dbg !15723

49:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 0, metadata !15684, metadata !DIExpression()), !dbg !15724
  call void @llvm.dbg.value(metadata i32 %45, metadata !15682, metadata !DIExpression()), !dbg !15688
  %50 = icmp eq i32 %45, 0, !dbg !15725
  br i1 %50, label %58, label %51, !dbg !15728

51:                                               ; preds = %49, %51
  %52 = phi i32 [ %56, %51 ], [ 0, %49 ]
  call void @llvm.dbg.value(metadata i32 %52, metadata !15684, metadata !DIExpression()), !dbg !15724
  call void @llvm.dbg.value(metadata i8* %36, metadata !15678, metadata !DIExpression()), !dbg !15688
  %53 = getelementptr inbounds i8, i8* %36, i32 %52, !dbg !15729
  %54 = load i8, i8* %53, align 1, !dbg !15729
  %55 = getelementptr inbounds [128 x i8], [128 x i8]* @tmp_data_buffer, i32 0, i32 %52, !dbg !15731
  store i8 %54, i8* %55, align 1, !dbg !15732
  %56 = add nuw i32 %52, 1, !dbg !15733
  call void @llvm.dbg.value(metadata i32 %56, metadata !15684, metadata !DIExpression()), !dbg !15724
  call void @llvm.dbg.value(metadata i32 %45, metadata !15682, metadata !DIExpression()), !dbg !15688
  %57 = icmp eq i32 %56, %45, !dbg !15725
  br i1 %57, label %58, label %51, !dbg !15728, !llvm.loop !15734

58:                                               ; preds = %51, %49, %35
  %59 = phi i8* [ %36, %35 ], [ getelementptr inbounds ([128 x i8], [128 x i8]* @tmp_data_buffer, i32 0, i32 0), %49 ], [ getelementptr inbounds ([128 x i8], [128 x i8]* @tmp_data_buffer, i32 0, i32 0), %51 ], !dbg !15736
  call void @llvm.dbg.value(metadata i8* %59, metadata !15679, metadata !DIExpression()), !dbg !15688
  %60 = load i32, i32* %29, align 4, !dbg !15737
  %61 = and i32 %60, 16, !dbg !15739
  %62 = icmp eq i32 %61, 0, !dbg !15739
  br i1 %62, label %63, label %64, !dbg !15740

63:                                               ; preds = %58
  call void @SF_DAL_Dev_WriteEnable(%struct.SF_MTD_Data* noundef nonnull %7) #23, !dbg !15741
  br label %64, !dbg !15743

64:                                               ; preds = %63, %58
  %65 = load i8, i8* %30, align 1, !dbg !15744
  %66 = icmp eq i8 %65, 4, !dbg !15746
  %67 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %32, align 4, !dbg !15747
  %68 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %67, i32 0, i32 0, !dbg !15747
  %69 = load i8, i8* %68, align 1, !dbg !15747
  %70 = zext i8 %69 to i32, !dbg !15747
  br i1 %66, label %71, label %75, !dbg !15748

71:                                               ; preds = %64
  call void @llvm.dbg.value(metadata i8** %5, metadata !15678, metadata !DIExpression(DW_OP_deref)), !dbg !15688
  call void @llvm.dbg.value(metadata i32* %6, metadata !15682, metadata !DIExpression(DW_OP_deref)), !dbg !15688
  %72 = call i32 @SFI_GPRAM_Write_C1A4(i32 noundef %70, i32 noundef %38, i8** noundef nonnull %5, i32* noundef nonnull %6) #22, !dbg !15749
  call void @llvm.dbg.value(metadata i32 %72, metadata !15683, metadata !DIExpression()), !dbg !15688
  %73 = load i8*, i8** %5, align 4, !dbg !15751
  call void @llvm.dbg.value(metadata i8* %73, metadata !15678, metadata !DIExpression()), !dbg !15688
  %74 = load i32, i32* %6, align 4, !dbg !15752
  call void @llvm.dbg.value(metadata i32 %74, metadata !15682, metadata !DIExpression()), !dbg !15688
  call void @SFI_GPRAM_Write(i32 noundef 8, i8* noundef %73, i32 noundef %74) #22, !dbg !15753
  br label %79, !dbg !15754

75:                                               ; preds = %64
  %76 = call i32 @SFI_GPRAM_Write_C1A3(i32 noundef %70, i32 noundef %38) #22, !dbg !15755
  call void @llvm.dbg.value(metadata i32 %76, metadata !15683, metadata !DIExpression()), !dbg !15688
  %77 = load i8*, i8** %5, align 4, !dbg !15757
  call void @llvm.dbg.value(metadata i8* %77, metadata !15678, metadata !DIExpression()), !dbg !15688
  %78 = load i32, i32* %6, align 4, !dbg !15758
  call void @llvm.dbg.value(metadata i32 %78, metadata !15682, metadata !DIExpression()), !dbg !15688
  call void @SFI_GPRAM_Write(i32 noundef 4, i8* noundef %77, i32 noundef %78) #22, !dbg !15759
  br label %79

79:                                               ; preds = %75, %71
  %80 = phi i32 [ %72, %71 ], [ %76, %75 ], !dbg !15747
  call void @llvm.dbg.value(metadata i32 %80, metadata !15683, metadata !DIExpression()), !dbg !15688
  %81 = call i32 @SaveAndSetIRQMask() #23, !dbg !15760
  call void @llvm.dbg.value(metadata i32 %81, metadata !15676, metadata !DIExpression()), !dbg !15688
  store volatile i32 %80, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !15761
  %82 = load i8, i8* %30, align 1, !dbg !15762
  %83 = zext i8 %82 to i32, !dbg !15763
  %84 = add i32 %45, 1, !dbg !15764
  %85 = add i32 %84, %83, !dbg !15765
  store volatile i32 %85, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !15766
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !15767
  call void @SF_DAL_FLAG_BUSY_SET() #23, !dbg !15768
  %86 = load i16, i16* %34, align 2, !dbg !15769
  call void @SFI_MacEnable(i16 noundef zeroext %86) #22, !dbg !15770
  %87 = load i16, i16* %34, align 2, !dbg !15771
  call void @SFI_MacWaitReady(i16 noundef zeroext %87) #22, !dbg !15772
  call void @RestoreIRQMask(i32 noundef %81) #23, !dbg !15773
  %88 = add i32 %45, %38
  %89 = add i32 %88, -1
  %90 = getelementptr inbounds i8, i8* %59, i32 -1
  %91 = getelementptr inbounds i8, i8* %90, i32 %45
  br label %92, !dbg !15774

92:                                               ; preds = %92, %79
  %93 = load i8, i8* %91, align 1, !dbg !15775
  %94 = call i32 @SF_DAL_CheckReadyAndResume(i8* noundef %0, i32 noundef %89, i8 noundef zeroext %93) #23, !dbg !15777
  call void @llvm.dbg.value(metadata i32 %94, metadata !15680, metadata !DIExpression()), !dbg !15688
  %95 = icmp eq i32 %94, 0, !dbg !15778
  br i1 %95, label %92, label %96, !dbg !15779, !llvm.loop !15780

96:                                               ; preds = %92
  %97 = load i32, i32* %6, align 4, !dbg !15782
  call void @llvm.dbg.value(metadata i32 %97, metadata !15682, metadata !DIExpression()), !dbg !15688
  %98 = load i8*, i8** %5, align 4, !dbg !15783
  call void @llvm.dbg.value(metadata i8* %98, metadata !15678, metadata !DIExpression()), !dbg !15688
  %99 = getelementptr inbounds i8, i8* %98, i32 %97, !dbg !15783
  call void @llvm.dbg.value(metadata i8* %99, metadata !15678, metadata !DIExpression()), !dbg !15688
  store i8* %99, i8** %5, align 4, !dbg !15783
  %100 = sub i32 %37, %45, !dbg !15784
  call void @llvm.dbg.value(metadata i32 %100, metadata !15674, metadata !DIExpression()), !dbg !15688
  call void @llvm.dbg.value(metadata i32 undef, metadata !15677, metadata !DIExpression()), !dbg !15688
  %101 = icmp eq i32 %94, 1, !dbg !15785
  %102 = icmp ne i32 %100, 0
  %103 = select i1 %101, i1 %102, i1 false, !dbg !15787
  br i1 %103, label %35, label %104, !dbg !15787, !llvm.loop !15788

104:                                              ; preds = %96, %25
  %105 = phi i32 [ %23, %25 ], [ %94, %96 ], !dbg !15688
  call void @llvm.dbg.value(metadata i32 %105, metadata !15680, metadata !DIExpression()), !dbg !15688
  store i8 0, i8* %21, align 4, !dbg !15790
  call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #23, !dbg !15791
  %106 = icmp eq i32 %105, 1, !dbg !15792
  %107 = select i1 %106, i32 0, i32 %105, !dbg !15688
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #24, !dbg !15794
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #24, !dbg !15794
  ret i32 %107, !dbg !15794
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SF_DAL_NonBlockEraseBlock(i8* nocapture readnone %0, i32 %1) #10 section ".ram_code" !dbg !15795 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !15797, metadata !DIExpression()), !dbg !15799
  call void @llvm.dbg.value(metadata i32 undef, metadata !15798, metadata !DIExpression()), !dbg !15799
  ret i32 -12, !dbg !15800
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_CheckDeviceReady(i8* nocapture noundef readonly %0, i32 %1) #0 section ".ram_code" !dbg !15801 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15803, metadata !DIExpression()), !dbg !15813
  call void @llvm.dbg.value(metadata i32 undef, metadata !15804, metadata !DIExpression()), !dbg !15813
  call void @llvm.dbg.value(metadata i32 0, metadata !15806, metadata !DIExpression()), !dbg !15813
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !15814
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !15807, metadata !DIExpression()), !dbg !15813
  %4 = bitcast i8* %0 to i32*, !dbg !15815
  %5 = load i32, i32* %4, align 4, !dbg !15815
  %6 = xor i32 %5, -1, !dbg !15815
  %7 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !15815
  %8 = bitcast i8* %7 to %struct.hal_cache_region_config_t**, !dbg !15815
  %9 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %8, align 4, !dbg !15815
  %10 = ptrtoint %struct.hal_cache_region_config_t* %9 to i32, !dbg !15815
  %11 = icmp eq i32 %6, %10, !dbg !15815
  br i1 %11, label %13, label %12, !dbg !15818

12:                                               ; preds = %2
  tail call void @Flash_ReturnReady() #23, !dbg !15819
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.259, i32 0, i32 0), i32 noundef 3131, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.SF_DAL_CheckDeviceReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.260, i32 0, i32 0)) #25, !dbg !15819
  unreachable, !dbg !15819

13:                                               ; preds = %2
  %14 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !15821
  %15 = bitcast i8* %14 to %struct.SF_MTD_CMD**, !dbg !15821
  %16 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %15, align 4, !dbg !15821
  %17 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %16, i32 0, i32 16, !dbg !15822
  %18 = load i8, i8* %17, align 1, !dbg !15822
  %19 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %3, i8 noundef zeroext %18) #23, !dbg !15823
  call void @llvm.dbg.value(metadata i32 %19, metadata !15808, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15813
  %20 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %15, align 4, !dbg !15824
  %21 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %20, i32 0, i32 15, !dbg !15825
  %22 = load i8, i8* %21, align 1, !dbg !15825
  %23 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %3, i8 noundef zeroext %22) #23, !dbg !15826
  call void @llvm.dbg.value(metadata i32 %23, metadata !15809, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15813
  %24 = tail call i32 @SaveAndSetIRQMask() #23, !dbg !15827
  call void @llvm.dbg.value(metadata i32 %24, metadata !15806, metadata !DIExpression()), !dbg !15813
  %25 = getelementptr inbounds i8, i8* %0, i32 172, !dbg !15828
  %26 = bitcast i8* %25 to i8**, !dbg !15828
  %27 = load i8*, i8** %26, align 4, !dbg !15828
  %28 = load i8, i8* %27, align 1, !dbg !15829
  %29 = zext i8 %28 to i32, !dbg !15829
  %30 = and i32 %19, %29, !dbg !15830
  %31 = icmp eq i32 %30, 0, !dbg !15831
  br i1 %31, label %32, label %62, !dbg !15832

32:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32 %23, metadata !15809, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15813
  %33 = getelementptr inbounds i8, i8* %27, i32 2, !dbg !15833
  %34 = load i8, i8* %33, align 1, !dbg !15833
  %35 = getelementptr inbounds i8, i8* %27, i32 3, !dbg !15834
  %36 = load i8, i8* %35, align 1, !dbg !15834
  %37 = or i8 %36, %34, !dbg !15835
  call void @llvm.dbg.value(metadata i8 %37, metadata !15810, metadata !DIExpression()), !dbg !15836
  %38 = zext i8 %37 to i32, !dbg !15837
  %39 = and i32 %23, %38, !dbg !15839
  %40 = icmp eq i32 %39, 0, !dbg !15840
  br i1 %40, label %41, label %46, !dbg !15841

41:                                               ; preds = %32
  %42 = icmp ne i8 %37, 0, !dbg !15842
  %43 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1
  %44 = icmp eq i8 %43, 0
  %45 = select i1 %42, i1 true, i1 %44, !dbg !15843
  br i1 %45, label %51, label %46, !dbg !15843

46:                                               ; preds = %41, %32
  %47 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !15844, !range !4202
  %48 = icmp eq i8 %47, 0, !dbg !15844
  br i1 %48, label %49, label %50, !dbg !15848

49:                                               ; preds = %46
  tail call void @Flash_ReturnReady() #23, !dbg !15849
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.259, i32 0, i32 0), i32 noundef 3147, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.SF_DAL_CheckDeviceReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.260, i32 0, i32 0)) #25, !dbg !15849
  unreachable, !dbg !15849

50:                                               ; preds = %46
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef nonnull %3) #23, !dbg !15851
  store i32 -1, i32* @gNOR_ReturnReadyEnd, align 4, !dbg !15852
  call void @llvm.dbg.value(metadata i32 -121, metadata !15805, metadata !DIExpression()), !dbg !15813
  br label %62, !dbg !15853

51:                                               ; preds = %41
  %52 = getelementptr inbounds i8, i8* %0, i32 200, !dbg !15854
  %53 = bitcast i8* %52 to i32*, !dbg !15854
  %54 = load i32, i32* %53, align 4, !dbg !15854
  %55 = and i32 %54, 2, !dbg !15857
  %56 = icmp eq i32 %55, 0, !dbg !15857
  br i1 %56, label %63, label %57, !dbg !15858

57:                                               ; preds = %51
  %58 = getelementptr inbounds i8, i8* %0, i32 198, !dbg !15859
  %59 = bitcast i8* %58 to i16*, !dbg !15859
  %60 = load i16, i16* %59, align 2, !dbg !15859
  tail call void @SFI_Dev_Command(i16 noundef zeroext %60, i32 noundef 122) #22, !dbg !15861
  %61 = load i16, i16* %59, align 2, !dbg !15862
  tail call void @SFI_Dev_Command(i16 noundef zeroext %61, i32 noundef 122) #22, !dbg !15863
  br label %63, !dbg !15864

62:                                               ; preds = %50, %13
  call void @llvm.dbg.value(metadata i32 0, metadata !15805, metadata !DIExpression()), !dbg !15813
  tail call void @RestoreIRQMask(i32 noundef %24) #23, !dbg !15865
  br label %65, !dbg !15866

63:                                               ; preds = %57, %51
  tail call void @SF_DAL_FLAG_BUSY_CLR() #23, !dbg !15867
  tail call void @SF_DAL_FLAG_SUS_CLR() #23, !dbg !15868
  call void @llvm.dbg.value(metadata i32 0, metadata !15805, metadata !DIExpression()), !dbg !15813
  tail call void @RestoreIRQMask(i32 noundef %24) #23, !dbg !15865
  %64 = tail call i32 @SF_DAL_FailCheck(i8* noundef nonnull %0) #23, !dbg !15869
  call void @llvm.dbg.value(metadata i32 %64, metadata !15805, metadata !DIExpression()), !dbg !15813
  br label %65, !dbg !15872

65:                                               ; preds = %62, %63
  %66 = phi i32 [ %64, %63 ], [ -121, %62 ], !dbg !15813
  call void @llvm.dbg.value(metadata i32 %66, metadata !15805, metadata !DIExpression()), !dbg !15813
  ret i32 %66, !dbg !15873
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_SuspendErase(i8* nocapture noundef readonly %0, i32 %1) #0 section ".ram_code" !dbg !15874 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15876, metadata !DIExpression()), !dbg !15881
  call void @llvm.dbg.value(metadata i32 undef, metadata !15877, metadata !DIExpression()), !dbg !15881
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !15882
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !15878, metadata !DIExpression()), !dbg !15881
  %4 = tail call i32 @SaveAndSetIRQMask() #23, !dbg !15883
  call void @llvm.dbg.value(metadata i32 %4, metadata !15880, metadata !DIExpression()), !dbg !15881
  tail call void @SF_DAL_Dev_Suspend(%struct.SF_MTD_Data* noundef %3) #23, !dbg !15884
  %5 = getelementptr inbounds i8, i8* %0, i32 176
  %6 = bitcast i8* %5 to %struct.SF_MTD_CMD**
  %7 = getelementptr inbounds i8, i8* %0, i32 172
  %8 = bitcast i8* %7 to i8**
  br label %9, !dbg !15885

9:                                                ; preds = %9, %2
  %10 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %6, align 4, !dbg !15886
  %11 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %10, i32 0, i32 16, !dbg !15888
  %12 = load i8, i8* %11, align 1, !dbg !15888
  %13 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef %3, i8 noundef zeroext %12) #23, !dbg !15889
  call void @llvm.dbg.value(metadata i32 %13, metadata !15879, metadata !DIExpression()), !dbg !15881
  %14 = load i8*, i8** %8, align 4, !dbg !15890
  %15 = load i8, i8* %14, align 1, !dbg !15892
  %16 = zext i8 %15 to i32, !dbg !15892
  %17 = and i32 %13, %16, !dbg !15893
  %18 = icmp eq i32 %17, 0, !dbg !15894
  br i1 %18, label %19, label %9, !dbg !15895, !llvm.loop !15896

19:                                               ; preds = %9
  tail call void @SF_DAL_FLAG_SUS_SET() #23, !dbg !15898
  tail call void @RestoreIRQMask(i32 noundef %4) #23, !dbg !15899
  ret i32 0, !dbg !15900
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_ResumeErase(i8* nocapture noundef readonly %0, i32 %1) #0 section ".ram_code" !dbg !15901 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15903, metadata !DIExpression()), !dbg !15906
  call void @llvm.dbg.value(metadata i32 undef, metadata !15904, metadata !DIExpression()), !dbg !15906
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !15907
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !15905, metadata !DIExpression()), !dbg !15906
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #23, !dbg !15908
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef %3) #23, !dbg !15909
  tail call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #23, !dbg !15910
  ret i32 0, !dbg !15911
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SF_DAL_LockEraseBlkAddr(i8* nocapture readnone %0, i8* nocapture readnone %1, i32 %2) #10 section ".ram_code" !dbg !15912 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !15914, metadata !DIExpression()), !dbg !15917
  call void @llvm.dbg.value(metadata i8* undef, metadata !15915, metadata !DIExpression()), !dbg !15917
  call void @llvm.dbg.value(metadata i32 undef, metadata !15916, metadata !DIExpression()), !dbg !15917
  ret i32 0, !dbg !15918
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_IOCtrl(i8* noundef %0, i32 noundef %1, i8* nocapture readnone %2) #0 !dbg !15919 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15921, metadata !DIExpression()), !dbg !15925
  call void @llvm.dbg.value(metadata i32 %1, metadata !15922, metadata !DIExpression()), !dbg !15925
  call void @llvm.dbg.value(metadata i8* undef, metadata !15923, metadata !DIExpression()), !dbg !15925
  call void @llvm.dbg.value(metadata i8* %0, metadata !15924, metadata !DIExpression()), !dbg !15925
  switch i32 %1, label %20 [
    i32 0, label %4
    i32 1, label %9
  ], !dbg !15926

4:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %0, metadata !15924, metadata !DIExpression()), !dbg !15925
  %5 = getelementptr inbounds i8, i8* %0, i32 212, !dbg !15927
  %6 = bitcast i8* %5 to i32 (i8*)**, !dbg !15927
  %7 = load i32 (i8*)*, i32 (i8*)** %6, align 4, !dbg !15927
  %8 = tail call i32 %7(i8* noundef %0) #22, !dbg !15930
  br label %21, !dbg !15931

9:                                                ; preds = %3
  %10 = getelementptr inbounds i8, i8* %0, i32 193, !dbg !15932
  %11 = load i8, i8* %10, align 1, !dbg !15936
  %12 = icmp eq i8 %11, -62, !dbg !15937
  br i1 %12, label %13, label %21, !dbg !15938

13:                                               ; preds = %9
  %14 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !15939
  %15 = bitcast i8* %14 to %struct.hal_cache_region_config_t**, !dbg !15939
  %16 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %15, align 4, !dbg !15939
  %17 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %16, i32 0, i32 0, !dbg !15940
  %18 = load i32, i32* %17, align 4, !dbg !15940
  %19 = icmp eq i32 %18, 262144, !dbg !15941
  br i1 %19, label %22, label %21, !dbg !15942

20:                                               ; preds = %3
  tail call void @Flash_ReturnReady() #23, !dbg !15943
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.259, i32 0, i32 0), i32 noundef 2361, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.SF_DAL_IOCtrl, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.260, i32 0, i32 0)) #25, !dbg !15943
  unreachable, !dbg !15943

21:                                               ; preds = %13, %9, %4
  br label %22, !dbg !15948

22:                                               ; preds = %13, %21
  %23 = phi i32 [ 0, %21 ], [ 194, %13 ], !dbg !15925
  ret i32 %23, !dbg !15949
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_FailCheck(i8* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !15950 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15952, metadata !DIExpression()), !dbg !15955
  call void @llvm.dbg.value(metadata i8* %0, metadata !15953, metadata !DIExpression()), !dbg !15955
  %2 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !15956
  %3 = bitcast i8* %2 to %struct.SF_MTD_CMD**, !dbg !15956
  %4 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %3, align 4, !dbg !15956
  %5 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %4, i32 0, i32 17, !dbg !15958
  %6 = load i8, i8* %5, align 1, !dbg !15958
  %7 = icmp eq i8 %6, 0, !dbg !15959
  br i1 %7, label %19, label %8, !dbg !15960

8:                                                ; preds = %1
  %9 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !15961
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %9, metadata !15953, metadata !DIExpression()), !dbg !15955
  %10 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef %9, i8 noundef zeroext %6) #23, !dbg !15962
  call void @llvm.dbg.value(metadata i32 %10, metadata !15954, metadata !DIExpression()), !dbg !15955
  %11 = getelementptr inbounds i8, i8* %0, i32 172, !dbg !15964
  %12 = bitcast i8* %11 to i8**, !dbg !15964
  %13 = load i8*, i8** %12, align 4, !dbg !15964
  %14 = getelementptr inbounds i8, i8* %13, i32 7, !dbg !15966
  %15 = load i8, i8* %14, align 1, !dbg !15966
  %16 = zext i8 %15 to i32, !dbg !15966
  %17 = and i32 %10, %16, !dbg !15967
  %18 = icmp eq i32 %17, 0, !dbg !15967
  br i1 %18, label %19, label %20, !dbg !15968

19:                                               ; preds = %8, %1
  br label %20, !dbg !15969

20:                                               ; preds = %8, %19
  %21 = phi i32 [ 0, %19 ], [ -1, %8 ], !dbg !15955
  ret i32 %21, !dbg !15970
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_CheckReadyAndResume(i8* nocapture noundef readonly %0, i32 noundef %1, i8 noundef zeroext %2) local_unnamed_addr #0 section ".ram_code" !dbg !15971 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15975, metadata !DIExpression()), !dbg !15983
  call void @llvm.dbg.value(metadata i32 %1, metadata !15976, metadata !DIExpression()), !dbg !15983
  call void @llvm.dbg.value(metadata i8 %2, metadata !15977, metadata !DIExpression()), !dbg !15983
  %4 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !15984
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %4, metadata !15979, metadata !DIExpression()), !dbg !15983
  call void @llvm.dbg.value(metadata i32 0, metadata !15980, metadata !DIExpression()), !dbg !15983
  %5 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !15985
  %6 = bitcast i8* %5 to %struct.SF_MTD_CMD**, !dbg !15985
  %7 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %6, align 4, !dbg !15985
  %8 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %7, i32 0, i32 16, !dbg !15986
  %9 = load i8, i8* %8, align 1, !dbg !15986
  %10 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef %4, i8 noundef zeroext %9) #23, !dbg !15987
  call void @llvm.dbg.value(metadata i32 %10, metadata !15982, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15983
  %11 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !15988, !range !4202
  %12 = icmp eq i8 %11, 0, !dbg !15988
  br i1 %12, label %18, label %13, !dbg !15990

13:                                               ; preds = %3
  %14 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !15991, !range !4202
  %15 = icmp eq i8 %14, 0, !dbg !15991
  br i1 %15, label %16, label %17, !dbg !15995

16:                                               ; preds = %13
  tail call void @Flash_ReturnReady() #23, !dbg !15996
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.259, i32 0, i32 0), i32 noundef 3058, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.SF_DAL_CheckReadyAndResume, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.260, i32 0, i32 0)) #25, !dbg !15996
  unreachable, !dbg !15996

17:                                               ; preds = %13
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef nonnull %4) #23, !dbg !15998
  store i32 -1, i32* @gNOR_ReturnReadyEnd, align 4, !dbg !15999
  br label %42, !dbg !16000

18:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 %10, metadata !15982, metadata !DIExpression()), !dbg !15983
  %19 = getelementptr inbounds i8, i8* %0, i32 172, !dbg !16001
  %20 = bitcast i8* %19 to i8**, !dbg !16001
  %21 = load i8*, i8** %20, align 4, !dbg !16001
  %22 = load i8, i8* %21, align 1, !dbg !16003
  %23 = zext i8 %22 to i32, !dbg !16003
  %24 = and i32 %10, %23, !dbg !16004
  %25 = icmp eq i32 %24, 0, !dbg !16005
  br i1 %25, label %26, label %42, !dbg !16006

26:                                               ; preds = %18
  %27 = tail call i32 @SaveAndSetIRQMask() #23, !dbg !16007
  call void @llvm.dbg.value(metadata i32 %27, metadata !15978, metadata !DIExpression()), !dbg !15983
  tail call void @SF_DAL_FLAG_BUSY_CLR() #23, !dbg !16009
  %28 = inttoptr i32 %1 to i8*, !dbg !16010
  %29 = load volatile i8, i8* %28, align 1, !dbg !16011
  call void @llvm.dbg.value(metadata i8 %29, metadata !15981, metadata !DIExpression()), !dbg !15983
  %30 = icmp eq i8 %29, %2, !dbg !16012
  br i1 %30, label %39, label %31, !dbg !16014

31:                                               ; preds = %26
  call void @llvm.dbg.value(metadata i32 -1, metadata !15980, metadata !DIExpression()), !dbg !15983
  %32 = tail call zeroext i1 @hal_cache_is_cacheable(i32 noundef %1) #22, !dbg !16015
  br i1 %32, label %33, label %38, !dbg !16018

33:                                               ; preds = %31
  %34 = and i32 %1, -32, !dbg !16019
  %35 = tail call i32 @hal_cache_invalidate_one_cache_line(i32 noundef %34) #22, !dbg !16021
  %36 = load volatile i8, i8* %28, align 1, !dbg !16022
  %37 = icmp eq i8 %36, %2, !dbg !16024
  br i1 %37, label %39, label %38, !dbg !16025

38:                                               ; preds = %33, %31
  call void @llvm.dbg.value(metadata i32 -1, metadata !15980, metadata !DIExpression()), !dbg !15983
  tail call void @RestoreIRQMask(i32 noundef %27) #23, !dbg !16026
  br label %42, !dbg !16027

39:                                               ; preds = %33, %26
  call void @llvm.dbg.value(metadata i32 -1, metadata !15980, metadata !DIExpression()), !dbg !15983
  tail call void @RestoreIRQMask(i32 noundef %27) #23, !dbg !16026
  %40 = tail call i32 @SF_DAL_FailCheck(i8* noundef nonnull %0) #23, !dbg !16028
  %41 = icmp eq i32 %40, 0, !dbg !16031
  br i1 %41, label %42, label %44, !dbg !16032

42:                                               ; preds = %18, %17, %38, %39
  %43 = phi i32 [ 1, %39 ], [ -1, %38 ], [ 0, %17 ], [ 0, %18 ]
  br label %44, !dbg !16033

44:                                               ; preds = %39, %42
  %45 = phi i32 [ %43, %42 ], [ -1, %39 ], !dbg !15983
  ret i32 %45, !dbg !16034
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_EraseBlock(%struct.SF_MTD_Data* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #0 section ".ram_code" !dbg !16035 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !16039, metadata !DIExpression()), !dbg !16042
  call void @llvm.dbg.value(metadata i32 %1, metadata !16040, metadata !DIExpression()), !dbg !16042
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 24, !dbg !16043
  %4 = load i32, i32* %3, align 4, !dbg !16043
  %5 = and i32 %4, 16, !dbg !16045
  %6 = icmp eq i32 %5, 0, !dbg !16045
  br i1 %6, label %7, label %8, !dbg !16046

7:                                                ; preds = %2
  tail call void @SF_DAL_Dev_WriteEnable(%struct.SF_MTD_Data* noundef nonnull %0) #23, !dbg !16047
  br label %8, !dbg !16049

8:                                                ; preds = %7, %2
  %9 = tail call i32 @SaveAndSetIRQMask() #23, !dbg !16050
  call void @llvm.dbg.value(metadata i32 %9, metadata !16041, metadata !DIExpression()), !dbg !16042
  tail call void @SF_DAL_FLAG_BUSY_SET() #23, !dbg !16051
  %10 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !16052
  %11 = load i16, i16* %10, align 2, !dbg !16052
  %12 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !16053
  %13 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %12, align 4, !dbg !16053
  %14 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %13, i32 0, i32 5, !dbg !16054
  %15 = load i8, i8* %14, align 1, !dbg !16054
  %16 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 22, !dbg !16055
  %17 = load i8, i8* %16, align 1, !dbg !16055
  %18 = zext i8 %17 to i32, !dbg !16056
  tail call void @SFI_Dev_CommandAddress(i16 noundef zeroext %11, i8 noundef zeroext %15, i32 noundef %1, i32 noundef %18) #22, !dbg !16057
  tail call void @RestoreIRQMask(i32 noundef %9) #23, !dbg !16058
  ret void, !dbg !16059
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_Init_Vendor(%struct.NOR_MTD_Driver* nocapture readnone %0, %struct.SF_MTD_Data* nocapture noundef %1) local_unnamed_addr #0 !dbg !16060 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* undef, metadata !16062, metadata !DIExpression()), !dbg !16065
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !16063, metadata !DIExpression()), !dbg !16065
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 20, i32 0, !dbg !16066
  %4 = load i8, i8* %3, align 1, !dbg !16066
  switch i8 %4, label %17 [
    i8 -62, label %5
    i8 -17, label %10
    i8 -8, label %15
  ], !dbg !16067

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 24, !dbg !16068
  %7 = load i32, i32* %6, align 4, !dbg !16070
  %8 = or i32 %7, 4, !dbg !16070
  store i32 %8, i32* %6, align 4, !dbg !16070
  %9 = tail call i32 @SF_DAL_Init_MXIC(%struct.NOR_MTD_Driver* undef, %struct.SF_MTD_Data* noundef nonnull %1) #23, !dbg !16071
  call void @llvm.dbg.value(metadata i32 0, metadata !16064, metadata !DIExpression()), !dbg !16065
  br label %18, !dbg !16072

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 24, !dbg !16073
  %12 = load i32, i32* %11, align 4, !dbg !16074
  %13 = or i32 %12, 2, !dbg !16074
  store i32 %13, i32* %11, align 4, !dbg !16074
  %14 = tail call i32 @SF_DAL_Init_WINBOND(%struct.NOR_MTD_Driver* undef, %struct.SF_MTD_Data* noundef nonnull %1) #23, !dbg !16075
  call void @llvm.dbg.value(metadata i32 0, metadata !16064, metadata !DIExpression()), !dbg !16065
  call void @llvm.dbg.value(metadata i32 0, metadata !16064, metadata !DIExpression()), !dbg !16065
  br label %18, !dbg !16076

15:                                               ; preds = %2
  %16 = tail call i32 @SF_DAL_Init_WINBOND(%struct.NOR_MTD_Driver* undef, %struct.SF_MTD_Data* noundef nonnull %1) #23, !dbg !16077
  call void @llvm.dbg.value(metadata i32 0, metadata !16064, metadata !DIExpression()), !dbg !16065
  br label %18, !dbg !16078

17:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 -120, metadata !16064, metadata !DIExpression()), !dbg !16065
  tail call void @Flash_ReturnReady() #23, !dbg !16079
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.259, i32 0, i32 0), i32 noundef 2079, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.SF_DAL_Init_Vendor, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.260, i32 0, i32 0)) #25, !dbg !16079
  unreachable, !dbg !16079

18:                                               ; preds = %15, %10, %5
  call void @llvm.dbg.value(metadata i32 0, metadata !16064, metadata !DIExpression()), !dbg !16065
  ret i32 0, !dbg !16083
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_Init_Driver(%struct.NOR_MTD_Driver* noundef writeonly %0, %struct.SF_MTD_Data* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !16084 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* %0, metadata !16088, metadata !DIExpression()), !dbg !16093
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !16089, metadata !DIExpression()), !dbg !16093
  call void @llvm.dbg.value(metadata i32 %2, metadata !16090, metadata !DIExpression()), !dbg !16093
  call void @llvm.dbg.value(metadata i32 %3, metadata !16091, metadata !DIExpression()), !dbg !16093
  %5 = icmp eq %struct.NOR_MTD_Driver* %0, null, !dbg !16094
  %6 = icmp eq %struct.SF_MTD_Data* %1, null
  %7 = or i1 %5, %6, !dbg !16096
  br i1 %7, label %33, label %8, !dbg !16096

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !16097
  %10 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %9, align 4, !dbg !16097
  %11 = icmp eq %struct.SF_MTD_CMD* %10, null, !dbg !16099
  br i1 %11, label %33, label %12, !dbg !16100

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12, !dbg !16101
  %14 = load i8*, i8** %13, align 4, !dbg !16101
  %15 = icmp eq i8* %14, null, !dbg !16102
  br i1 %15, label %33, label %16, !dbg !16103

16:                                               ; preds = %12
  %17 = inttoptr i32 %2 to i8*, !dbg !16104
  %18 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 1, !dbg !16105
  store i8* %17, i8** %18, align 4, !dbg !16106
  %19 = trunc i32 %3 to i16, !dbg !16107
  %20 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 16, !dbg !16108
  store i16 %19, i16* %20, align 2, !dbg !16109
  %21 = tail call i32 @SF_DAL_Init_Common(%struct.NOR_MTD_Driver* noundef nonnull %0, %struct.SF_MTD_Data* noundef nonnull %1) #23, !dbg !16110
  %22 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %9, align 4, !dbg !16111
  %23 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %22, i32 0, i32 10, !dbg !16112
  store i8 -81, i8* %23, align 1, !dbg !16113
  %24 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 20, i32 0, !dbg !16114
  tail call void @SF_DAL_Dev_ReadID(%struct.SF_MTD_Data* noundef nonnull %1, i8* noundef nonnull %24) #23, !dbg !16115
  %25 = load i8, i8* %24, align 1, !dbg !16116
  switch i8 %25, label %26 [
    i8 -1, label %28
    i8 0, label %28
  ], !dbg !16118

26:                                               ; preds = %16
  %27 = tail call zeroext i1 @CMEM_CheckValidDeviceID(i8* noundef nonnull %24) #22, !dbg !16119
  br i1 %27, label %31, label %28, !dbg !16120

28:                                               ; preds = %16, %16, %26
  %29 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %9, align 4, !dbg !16121
  %30 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %29, i32 0, i32 10, !dbg !16123
  store i8 -97, i8* %30, align 1, !dbg !16124
  tail call void @SF_DAL_Dev_ReadID(%struct.SF_MTD_Data* noundef nonnull %1, i8* noundef nonnull %24) #23, !dbg !16125
  br label %31, !dbg !16126

31:                                               ; preds = %28, %26
  %32 = tail call i32 @SF_DAL_Init_Vendor(%struct.NOR_MTD_Driver* undef, %struct.SF_MTD_Data* noundef nonnull %1) #23, !dbg !16127
  call void @llvm.dbg.value(metadata i32 0, metadata !16092, metadata !DIExpression()), !dbg !16093
  br label %33, !dbg !16128

33:                                               ; preds = %8, %12, %4, %31
  %34 = phi i32 [ 0, %31 ], [ -120, %4 ], [ -120, %12 ], [ -120, %8 ], !dbg !16093
  ret i32 %34, !dbg !16129
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_ReadID(%struct.SF_MTD_Data* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #0 section ".ram_code" !dbg !16130 {
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !16134, metadata !DIExpression()), !dbg !16137
  call void @llvm.dbg.value(metadata i8* %1, metadata !16135, metadata !DIExpression()), !dbg !16137
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #24, !dbg !16138
  %4 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !16139
  %5 = and i32 %4, 1, !dbg !16139
  %6 = icmp eq i32 %5, 0, !dbg !16141
  %7 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !16142
  %8 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %7, align 4, !dbg !16142
  %9 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %8, i32 0, i32 9, !dbg !16143
  %10 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %8, i32 0, i32 10, !dbg !16143
  %11 = select i1 %6, i8* %9, i8* %10, !dbg !16143
  %12 = load i8, i8* %11, align 1, !dbg !16142
  store i8 %12, i8* %3, align 1, !dbg !16142
  %13 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !16144
  %14 = load i16, i16* %13, align 2, !dbg !16144
  call void @llvm.dbg.value(metadata i8* %3, metadata !16136, metadata !DIExpression(DW_OP_deref)), !dbg !16137
  call void @SF_DAL_Dev_Command_Ext(i16 noundef zeroext %14, i8* noundef nonnull %3, i8* noundef %1, i16 noundef zeroext 1, i16 noundef zeroext 3) #23, !dbg !16145
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #24, !dbg !16146
  ret void, !dbg !16146
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3, i16 noundef zeroext %4) local_unnamed_addr #0 section ".ram_code" !dbg !16147 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !16151, metadata !DIExpression()), !dbg !16157
  call void @llvm.dbg.value(metadata i8* %1, metadata !16152, metadata !DIExpression()), !dbg !16157
  call void @llvm.dbg.value(metadata i8* %2, metadata !16153, metadata !DIExpression()), !dbg !16157
  call void @llvm.dbg.value(metadata i16 %3, metadata !16154, metadata !DIExpression()), !dbg !16157
  call void @llvm.dbg.value(metadata i16 %4, metadata !16155, metadata !DIExpression()), !dbg !16157
  %6 = tail call i32 @SaveAndSetIRQMask() #23, !dbg !16158
  call void @llvm.dbg.value(metadata i32 %6, metadata !16156, metadata !DIExpression()), !dbg !16157
  tail call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3, i16 noundef zeroext %4) #22, !dbg !16159
  tail call void @RestoreIRQMask(i32 noundef %6) #23, !dbg !16160
  ret void, !dbg !16161
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @CMEM_CheckValidDeviceID(i8* nocapture noundef readonly %0) local_unnamed_addr #12 !dbg !16162 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !16164, metadata !DIExpression()), !dbg !16170
  call void @llvm.dbg.value(metadata %struct.CMEMEntryID* null, metadata !16167, metadata !DIExpression()), !dbg !16170
  call void @llvm.dbg.value(metadata i32 0, metadata !16165, metadata !DIExpression()), !dbg !16170
  br label %6, !dbg !16171

2:                                                ; preds = %23
  %3 = add nuw nsw i32 %8, 1, !dbg !16173
  call void @llvm.dbg.value(metadata i32 %3, metadata !16165, metadata !DIExpression()), !dbg !16170
  call void @llvm.dbg.value(metadata i32 %8, metadata !16165, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !16170
  %4 = icmp ult i32 %8, 4, !dbg !16175
  %5 = icmp eq i32 %3, 5, !dbg !16175
  br i1 %5, label %26, label %6, !dbg !16171, !llvm.loop !16176

6:                                                ; preds = %1, %2
  %7 = phi i1 [ true, %1 ], [ %4, %2 ]
  %8 = phi i32 [ 0, %1 ], [ %3, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !16165, metadata !DIExpression()), !dbg !16170
  %9 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  call void @llvm.dbg.value(metadata i32 0, metadata !16166, metadata !DIExpression()), !dbg !16170
  %12 = icmp eq i8 %10, 0, !dbg !16178
  br i1 %12, label %23, label %13, !dbg !16182

13:                                               ; preds = %6, %20
  %14 = phi i32 [ %21, %20 ], [ 0, %6 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !16166, metadata !DIExpression()), !dbg !16170
  %15 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 2, i32 %14, !dbg !16183
  %16 = load i8, i8* %15, align 1, !dbg !16183
  %17 = getelementptr inbounds i8, i8* %0, i32 %14, !dbg !16186
  %18 = load i8, i8* %17, align 1, !dbg !16186
  %19 = icmp eq i8 %16, %18, !dbg !16187
  br i1 %19, label %20, label %23, !dbg !16188

20:                                               ; preds = %13
  %21 = add nuw nsw i32 %14, 1, !dbg !16189
  call void @llvm.dbg.value(metadata i32 %21, metadata !16166, metadata !DIExpression()), !dbg !16170
  %22 = icmp eq i32 %21, %11, !dbg !16178
  br i1 %22, label %26, label %13, !dbg !16182, !llvm.loop !16190

23:                                               ; preds = %13, %6
  %24 = phi i32 [ 0, %6 ], [ %14, %13 ], !dbg !16192
  %25 = icmp eq i32 %24, %11, !dbg !16193
  call void @llvm.dbg.value(metadata i32 %8, metadata !16165, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !16170
  br i1 %25, label %26, label %2, !dbg !16195

26:                                               ; preds = %2, %23, %20
  %27 = phi i1 [ %7, %20 ], [ %7, %23 ], [ %4, %2 ], !dbg !16175
  ret i1 %27, !dbg !16196
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Index() local_unnamed_addr #0 !dbg !16197 {
  %1 = alloca %union.CMEMFlashID, align 2
  %2 = bitcast %union.CMEMFlashID* %1 to i8*, !dbg !16209
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #24, !dbg !16209
  call void @llvm.dbg.declare(metadata %union.CMEMFlashID* %1, metadata !16201, metadata !DIExpression()), !dbg !16210
  call void @llvm.dbg.value(metadata %struct.CMEMEntryID* null, metadata !16208, metadata !DIExpression()), !dbg !16211
  %3 = load i16, i16* @cmem_index, align 2, !dbg !16212
  %4 = icmp sgt i16 %3, -1, !dbg !16214
  br i1 %4, label %34, label %5, !dbg !16215

5:                                                ; preds = %0
  %6 = getelementptr inbounds %union.CMEMFlashID, %union.CMEMFlashID* %1, i32 0, i32 0, i32 0, !dbg !16216
  call void @NOR_ReadID(i16 noundef zeroext 0, i16* noundef nonnull inttoptr (i32 134217728 to i16*), i16* noundef nonnull %6) #22, !dbg !16217
  call void @llvm.dbg.value(metadata i32 0, metadata !16199, metadata !DIExpression()), !dbg !16211
  br label %7, !dbg !16218

7:                                                ; preds = %5, %29
  %8 = phi i32 [ 0, %5 ], [ %30, %29 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !16199, metadata !DIExpression()), !dbg !16211
  %9 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  call void @llvm.dbg.value(metadata i32 0, metadata !16200, metadata !DIExpression()), !dbg !16211
  %12 = icmp eq i8 %10, 0, !dbg !16220
  br i1 %12, label %24, label %13, !dbg !16225

13:                                               ; preds = %7, %21
  %14 = phi i32 [ %22, %21 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !16200, metadata !DIExpression()), !dbg !16211
  %15 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 2, i32 %14, !dbg !16226
  %16 = load i8, i8* %15, align 1, !dbg !16226
  %17 = getelementptr inbounds %union.CMEMFlashID, %union.CMEMFlashID* %1, i32 0, i32 0, i32 %14, !dbg !16229
  %18 = load i16, i16* %17, align 2, !dbg !16229
  %19 = zext i8 %16 to i16, !dbg !16230
  %20 = icmp eq i16 %18, %19, !dbg !16230
  br i1 %20, label %21, label %24, !dbg !16231

21:                                               ; preds = %13
  %22 = add nuw nsw i32 %14, 1, !dbg !16232
  call void @llvm.dbg.value(metadata i32 %22, metadata !16200, metadata !DIExpression()), !dbg !16211
  %23 = icmp eq i32 %22, %11, !dbg !16220
  br i1 %23, label %27, label %13, !dbg !16225, !llvm.loop !16233

24:                                               ; preds = %13, %7
  %25 = phi i32 [ 0, %7 ], [ %14, %13 ], !dbg !16235
  %26 = icmp eq i32 %25, %11, !dbg !16236
  br i1 %26, label %27, label %29, !dbg !16238

27:                                               ; preds = %24, %21
  %28 = trunc i32 %8 to i16, !dbg !16239
  store i16 %28, i16* @cmem_index, align 2, !dbg !16241
  br label %34, !dbg !16242

29:                                               ; preds = %24
  %30 = add nuw nsw i32 %8, 1, !dbg !16243
  call void @llvm.dbg.value(metadata i32 %30, metadata !16199, metadata !DIExpression()), !dbg !16211
  %31 = icmp eq i32 %30, 5, !dbg !16244
  br i1 %31, label %32, label %7, !dbg !16218, !llvm.loop !16245

32:                                               ; preds = %29
  %33 = load i16, i16* @cmem_index, align 2, !dbg !16247
  br label %34, !dbg !16247

34:                                               ; preds = %27, %32, %0
  %35 = phi i16 [ %3, %0 ], [ %33, %32 ], [ %28, %27 ]
  %36 = sext i16 %35 to i32, !dbg !16211
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #24, !dbg !16248
  ret i32 %36, !dbg !16248
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local nonnull %struct.CMEMEntryID* @CMEM_GetIDEntry(i32 noundef %0) local_unnamed_addr #10 !dbg !16249 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16253, metadata !DIExpression()), !dbg !16254
  %2 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %0, !dbg !16255
  ret %struct.CMEMEntryID* %2, !dbg !16256
}

; Function Attrs: noinline nounwind optsize
define dso_local void @CMEM_EMIINIT_ReadID(i16 noundef zeroext %0, i8* nocapture readnone %1, i16* nocapture noundef writeonly %2) local_unnamed_addr #0 section ".ram_code" !dbg !16257 {
  %4 = alloca i8, align 1
  %5 = alloca [3 x i8], align 1
  call void @llvm.dbg.value(metadata i16 %0, metadata !16261, metadata !DIExpression()), !dbg !16268
  call void @llvm.dbg.value(metadata i8* undef, metadata !16262, metadata !DIExpression()), !dbg !16268
  call void @llvm.dbg.value(metadata i16* %2, metadata !16263, metadata !DIExpression()), !dbg !16268
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #24, !dbg !16269
  %6 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i32 0, i32 0, !dbg !16269
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %6) #24, !dbg !16269
  call void @llvm.dbg.declare(metadata [3 x i8]* %5, metadata !16266, metadata !DIExpression()), !dbg !16270
  call void @llvm.dbg.value(metadata i8 -81, metadata !16264, metadata !DIExpression()), !dbg !16271
  store i8 -81, i8* %4, align 1, !dbg !16272
  call void @llvm.dbg.value(metadata i8* %4, metadata !16264, metadata !DIExpression(DW_OP_deref)), !dbg !16271
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef nonnull %6, i16 noundef zeroext 1, i16 noundef zeroext 3) #22, !dbg !16273
  %7 = load i8, i8* %6, align 1, !dbg !16274
  %8 = add i8 %7, 1, !dbg !16276
  %9 = icmp ult i8 %8, 2, !dbg !16276
  br i1 %9, label %12, label %10, !dbg !16276

10:                                               ; preds = %3
  %11 = call zeroext i1 @CMEM_EMIINIT_CheckValidDeviceID(i8* noundef nonnull %6) #23, !dbg !16277
  br i1 %11, label %13, label %12, !dbg !16278

12:                                               ; preds = %10, %3
  call void @llvm.dbg.value(metadata i8 -97, metadata !16264, metadata !DIExpression()), !dbg !16271
  store i8 -97, i8* %4, align 1, !dbg !16279
  call void @llvm.dbg.value(metadata i8* %4, metadata !16264, metadata !DIExpression(DW_OP_deref)), !dbg !16271
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef nonnull %6, i16 noundef zeroext 1, i16 noundef zeroext 3) #22, !dbg !16281
  br label %13, !dbg !16282

13:                                               ; preds = %12, %10
  br label %14, !dbg !16283

14:                                               ; preds = %13, %14
  %15 = phi i32 [ %20, %14 ], [ 0, %13 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !16267, metadata !DIExpression()), !dbg !16271
  %16 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i32 0, i32 %15, !dbg !16285
  %17 = load i8, i8* %16, align 1, !dbg !16285
  %18 = zext i8 %17 to i16, !dbg !16285
  %19 = getelementptr inbounds i16, i16* %2, i32 %15, !dbg !16288
  store i16 %18, i16* %19, align 2, !dbg !16289
  %20 = add nuw nsw i32 %15, 1, !dbg !16290
  call void @llvm.dbg.value(metadata i32 %20, metadata !16267, metadata !DIExpression()), !dbg !16271
  %21 = icmp eq i32 %20, 3, !dbg !16291
  br i1 %21, label %22, label %14, !dbg !16283, !llvm.loop !16292

22:                                               ; preds = %14
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %6) #24, !dbg !16294
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #24, !dbg !16294
  ret void, !dbg !16295
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @CMEM_EMIINIT_CheckValidDeviceID(i8* nocapture noundef readonly %0) local_unnamed_addr #12 section ".ram_code" !dbg !16296 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !16298, metadata !DIExpression()), !dbg !16302
  call void @llvm.dbg.value(metadata %struct.CMEMEntryID* null, metadata !16301, metadata !DIExpression()), !dbg !16302
  call void @llvm.dbg.value(metadata i32 0, metadata !16299, metadata !DIExpression()), !dbg !16302
  br label %6, !dbg !16303

2:                                                ; preds = %23
  %3 = add nuw nsw i32 %8, 1, !dbg !16305
  call void @llvm.dbg.value(metadata i32 %3, metadata !16299, metadata !DIExpression()), !dbg !16302
  call void @llvm.dbg.value(metadata i32 %8, metadata !16299, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !16302
  %4 = icmp ult i32 %8, 4, !dbg !16307
  %5 = icmp eq i32 %3, 5, !dbg !16307
  br i1 %5, label %26, label %6, !dbg !16303, !llvm.loop !16308

6:                                                ; preds = %1, %2
  %7 = phi i1 [ true, %1 ], [ %4, %2 ]
  %8 = phi i32 [ 0, %1 ], [ %3, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !16299, metadata !DIExpression()), !dbg !16302
  %9 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  call void @llvm.dbg.value(metadata i32 0, metadata !16300, metadata !DIExpression()), !dbg !16302
  %12 = icmp eq i8 %10, 0, !dbg !16310
  br i1 %12, label %23, label %13, !dbg !16314

13:                                               ; preds = %6, %20
  %14 = phi i32 [ %21, %20 ], [ 0, %6 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !16300, metadata !DIExpression()), !dbg !16302
  %15 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 2, i32 %14, !dbg !16315
  %16 = load i8, i8* %15, align 1, !dbg !16315
  %17 = getelementptr inbounds i8, i8* %0, i32 %14, !dbg !16318
  %18 = load i8, i8* %17, align 1, !dbg !16318
  %19 = icmp eq i8 %16, %18, !dbg !16319
  br i1 %19, label %20, label %23, !dbg !16320

20:                                               ; preds = %13
  %21 = add nuw nsw i32 %14, 1, !dbg !16321
  call void @llvm.dbg.value(metadata i32 %21, metadata !16300, metadata !DIExpression()), !dbg !16302
  %22 = icmp eq i32 %21, %11, !dbg !16310
  br i1 %22, label %26, label %13, !dbg !16314, !llvm.loop !16322

23:                                               ; preds = %13, %6
  %24 = phi i32 [ 0, %6 ], [ %14, %13 ], !dbg !16324
  %25 = icmp eq i32 %24, %11, !dbg !16325
  call void @llvm.dbg.value(metadata i32 %8, metadata !16299, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !16302
  br i1 %25, label %26, label %2, !dbg !16327

26:                                               ; preds = %2, %23, %20
  %27 = phi i1 [ %7, %20 ], [ %7, %23 ], [ %4, %2 ], !dbg !16307
  ret i1 %27, !dbg !16328
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_EMIINIT_Index() local_unnamed_addr #0 section ".ram_code" !dbg !16329 {
  %1 = alloca %union.CMEMFlashID, align 2
  %2 = bitcast %union.CMEMFlashID* %1 to i8*, !dbg !16335
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #24, !dbg !16335
  call void @llvm.dbg.declare(metadata %union.CMEMFlashID* %1, metadata !16333, metadata !DIExpression()), !dbg !16336
  call void @llvm.dbg.value(metadata %struct.CMEMEntryID* null, metadata !16334, metadata !DIExpression()), !dbg !16337
  %3 = load i16, i16* @cmem_emiinit_index, align 2, !dbg !16338
  %4 = icmp sgt i16 %3, -1, !dbg !16340
  br i1 %4, label %34, label %5, !dbg !16341

5:                                                ; preds = %0
  %6 = getelementptr inbounds %union.CMEMFlashID, %union.CMEMFlashID* %1, i32 0, i32 0, i32 0, !dbg !16342
  call void @CMEM_EMIINIT_ReadID(i16 noundef zeroext 0, i8* undef, i16* noundef nonnull %6) #23, !dbg !16343
  call void @llvm.dbg.value(metadata i32 0, metadata !16331, metadata !DIExpression()), !dbg !16337
  br label %7, !dbg !16344

7:                                                ; preds = %5, %29
  %8 = phi i32 [ 0, %5 ], [ %30, %29 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !16331, metadata !DIExpression()), !dbg !16337
  %9 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  call void @llvm.dbg.value(metadata i32 0, metadata !16332, metadata !DIExpression()), !dbg !16337
  %12 = icmp eq i8 %10, 0, !dbg !16346
  br i1 %12, label %24, label %13, !dbg !16351

13:                                               ; preds = %7, %21
  %14 = phi i32 [ %22, %21 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !16332, metadata !DIExpression()), !dbg !16337
  %15 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 2, i32 %14, !dbg !16352
  %16 = load i8, i8* %15, align 1, !dbg !16352
  %17 = getelementptr inbounds %union.CMEMFlashID, %union.CMEMFlashID* %1, i32 0, i32 0, i32 %14, !dbg !16355
  %18 = load i16, i16* %17, align 2, !dbg !16355
  %19 = zext i8 %16 to i16, !dbg !16356
  %20 = icmp eq i16 %18, %19, !dbg !16356
  br i1 %20, label %21, label %24, !dbg !16357

21:                                               ; preds = %13
  %22 = add nuw nsw i32 %14, 1, !dbg !16358
  call void @llvm.dbg.value(metadata i32 %22, metadata !16332, metadata !DIExpression()), !dbg !16337
  %23 = icmp eq i32 %22, %11, !dbg !16346
  br i1 %23, label %27, label %13, !dbg !16351, !llvm.loop !16359

24:                                               ; preds = %13, %7
  %25 = phi i32 [ 0, %7 ], [ %14, %13 ], !dbg !16361
  %26 = icmp eq i32 %25, %11, !dbg !16362
  br i1 %26, label %27, label %29, !dbg !16364

27:                                               ; preds = %24, %21
  %28 = trunc i32 %8 to i16, !dbg !16365
  store i16 %28, i16* @cmem_emiinit_index, align 2, !dbg !16367
  br label %34, !dbg !16368

29:                                               ; preds = %24
  %30 = add nuw nsw i32 %8, 1, !dbg !16369
  call void @llvm.dbg.value(metadata i32 %30, metadata !16331, metadata !DIExpression()), !dbg !16337
  %31 = icmp eq i32 %30, 5, !dbg !16370
  br i1 %31, label %32, label %7, !dbg !16344, !llvm.loop !16371

32:                                               ; preds = %29
  %33 = load i16, i16* @cmem_emiinit_index, align 2, !dbg !16373
  br label %34, !dbg !16373

34:                                               ; preds = %27, %32, %0
  %35 = phi i16 [ %3, %0 ], [ %33, %32 ], [ %28, %27 ]
  %36 = sext i16 %35 to i32, !dbg !16337
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #24, !dbg !16374
  ret i32 %36, !dbg !16374
}

; Function Attrs: noinline nounwind optsize
define dso_local void @NOR_ReadID(i16 noundef zeroext %0, i16* nocapture noundef readnone %1, i16* nocapture noundef writeonly %2) local_unnamed_addr #0 section ".ram_code" !dbg !16375 {
  %4 = alloca i8, align 1
  %5 = alloca [3 x i8], align 1
  call void @llvm.dbg.value(metadata i16 %0, metadata !16383, metadata !DIExpression()), !dbg !16391
  call void @llvm.dbg.value(metadata i16* %1, metadata !16384, metadata !DIExpression()), !dbg !16391
  call void @llvm.dbg.value(metadata i16* %2, metadata !16385, metadata !DIExpression()), !dbg !16391
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #24, !dbg !16392
  %6 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i32 0, i32 0, !dbg !16392
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %6) #24, !dbg !16392
  call void @llvm.dbg.declare(metadata [3 x i8]* %5, metadata !16389, metadata !DIExpression()), !dbg !16393
  call void @llvm.dbg.value(metadata i8 -81, metadata !16387, metadata !DIExpression()), !dbg !16394
  store i8 -81, i8* %4, align 1, !dbg !16395
  %7 = tail call i32 @SaveAndSetIRQMask() #22, !dbg !16396
  call void @llvm.dbg.value(metadata i32 %7, metadata !16386, metadata !DIExpression()), !dbg !16391
  call void @llvm.dbg.value(metadata i8* %4, metadata !16387, metadata !DIExpression(DW_OP_deref)), !dbg !16394
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef nonnull %6, i16 noundef zeroext 1, i16 noundef zeroext 3) #22, !dbg !16397
  call void @RestoreIRQMask(i32 noundef %7) #22, !dbg !16398
  %8 = load i8, i8* %6, align 1, !dbg !16399
  %9 = add i8 %8, 1, !dbg !16401
  %10 = icmp ult i8 %9, 2, !dbg !16401
  br i1 %10, label %13, label %11, !dbg !16401

11:                                               ; preds = %3
  %12 = call zeroext i1 @CMEM_CheckValidDeviceID(i8* noundef nonnull %6) #22, !dbg !16402
  br i1 %12, label %15, label %13, !dbg !16403

13:                                               ; preds = %11, %3
  call void @llvm.dbg.value(metadata i8 -97, metadata !16387, metadata !DIExpression()), !dbg !16394
  store i8 -97, i8* %4, align 1, !dbg !16404
  %14 = call i32 @SaveAndSetIRQMask() #22, !dbg !16406
  call void @llvm.dbg.value(metadata i32 %14, metadata !16386, metadata !DIExpression()), !dbg !16391
  call void @llvm.dbg.value(metadata i8* %4, metadata !16387, metadata !DIExpression(DW_OP_deref)), !dbg !16394
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef nonnull %6, i16 noundef zeroext 1, i16 noundef zeroext 3) #22, !dbg !16407
  call void @RestoreIRQMask(i32 noundef %14) #22, !dbg !16408
  br label %15, !dbg !16409

15:                                               ; preds = %13, %11
  br label %16, !dbg !16410

16:                                               ; preds = %15, %16
  %17 = phi i32 [ %22, %16 ], [ 0, %15 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !16390, metadata !DIExpression()), !dbg !16394
  %18 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i32 0, i32 %17, !dbg !16412
  %19 = load i8, i8* %18, align 1, !dbg !16412
  %20 = zext i8 %19 to i16, !dbg !16412
  %21 = getelementptr inbounds i16, i16* %2, i32 %17, !dbg !16415
  store i16 %20, i16* %21, align 2, !dbg !16416
  %22 = add nuw nsw i32 %17, 1, !dbg !16417
  call void @llvm.dbg.value(metadata i32 %22, metadata !16390, metadata !DIExpression()), !dbg !16394
  %23 = icmp eq i32 %22, 3, !dbg !16418
  br i1 %23, label %24, label %16, !dbg !16410, !llvm.loop !16419

24:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %6) #24, !dbg !16421
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #24, !dbg !16421
  ret void, !dbg !16422
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_NORFLASH_ROMSpace() local_unnamed_addr #10 !dbg !16423 {
  ret i32 3932160, !dbg !16424
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_NORFLASH_Size() local_unnamed_addr #10 !dbg !16425 {
  ret i32 4194304, !dbg !16426
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Initialize_FDD_tables() local_unnamed_addr #0 !dbg !16427 {
  %1 = tail call i32 @ComboMem_Initialize() #22, !dbg !16428
  ret void, !dbg !16429
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @nor_sweep_device() local_unnamed_addr #10 !dbg !16430 {
  ret void, !dbg !16431
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @nor_manual_reclaim() local_unnamed_addr #10 !dbg !16432 {
  ret void, !dbg !16433
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_fat_addr() local_unnamed_addr #10 !dbg !16434 {
  ret i32 3932160, !dbg !16435
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_fat_len() local_unnamed_addr #10 !dbg !16436 {
  ret i32 262144, !dbg !16437
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Custom_NOR_Init() local_unnamed_addr #0 !dbg !16438 {
  %1 = tail call i32 @CMEM_Init_FullDriver() #22, !dbg !16439
  ret void, !dbg !16440
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_NORFLASH_Base() local_unnamed_addr #10 !dbg !16441 {
  ret i32 134217728, !dbg !16442
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_FLASH_Size() local_unnamed_addr #10 !dbg !16443 {
  ret i32 4194304, !dbg !16444
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @INT_RetrieveFlashBaseAddr() local_unnamed_addr #6 !dbg !16445 {
  store i8* inttoptr (i32 134217728 to i8*), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 1), align 4, !dbg !16446
  ret i32 134217728, !dbg !16447
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Init_NOR_MTD_Common() local_unnamed_addr #0 !dbg !16448 {
  store i32 xor (i32 ptrtoint ([8 x %struct.hal_cache_region_config_t]* @RegionInfo to i32), i32 -1), i32* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 0), align 4, !dbg !16449
  %1 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !16450
  %2 = load i32, i32* @cmem_nor_index, align 4, !dbg !16451
  %3 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 1, !dbg !16452
  %4 = load i16, i16* %3, align 2, !dbg !16452
  %5 = zext i16 %4 to i32, !dbg !16450
  store i32 %5, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !16453
  %6 = tail call i8* @memset(i8* noundef bitcast ([2 x %struct.hal_cache_region_config_t]* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 11, i32 0) to i8*), i32 noundef 255, i32 noundef 128) #22, !dbg !16454
  %7 = tail call i32 @INT_RetrieveFlashBaseAddr() #23, !dbg !16455
  store i8* inttoptr (i32 138149888 to i8*), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 1), align 4, !dbg !16456
  store %struct.hal_cache_region_config_t* getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @RegionInfo, i32 0, i32 0), %struct.hal_cache_region_config_t** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 5), align 4, !dbg !16457
  ret i32 0, !dbg !16458
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Init_NOR_MTD_SF() local_unnamed_addr #0 !dbg !16459 {
  store %struct.NOR_MTD_Driver* @NORFlashMtd, %struct.NOR_MTD_Driver** getelementptr inbounds (%struct.NOR_FLASH_DRV_Data, %struct.NOR_FLASH_DRV_Data* @FlashDriveData, i32 0, i32 1), align 4, !dbg !16462
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @StatusMap, i32 0, i32 0), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 12), align 4, !dbg !16463
  store %struct.SF_MTD_CMD* @sf_dal_data_cmd, %struct.SF_MTD_CMD** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 13), align 4, !dbg !16464
  store i16 0, i16* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 23), align 2, !dbg !16465
  %1 = tail call i32 @INT_RetrieveFlashBaseAddr() #23, !dbg !16466
  %2 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !16467
  %3 = load i32, i32* @cmem_nor_index, align 4, !dbg !16468
  %4 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %2, i32 %3, i32 2, !dbg !16469
  %5 = load i32, i32* %4, align 4, !dbg !16469
  %6 = tail call i32 @SF_DAL_Init_Driver(%struct.NOR_MTD_Driver* noundef nonnull @NORFlashMtd, %struct.SF_MTD_Data* noundef nonnull @mtdflash, i32 noundef 138149888, i32 noundef %5) #22, !dbg !16470
  call void @llvm.dbg.value(metadata i32 %6, metadata !16461, metadata !DIExpression()), !dbg !16471
  %7 = icmp eq i32 %6, -120, !dbg !16472
  %8 = select i1 %7, i32 5, i32 0, !dbg !16471
  ret i32 %8, !dbg !16474
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i8 @EMINIT_CMEM_GET_NOR_FLASH_COUNT() local_unnamed_addr #10 !dbg !16475 {
  ret i8 1, !dbg !16477
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @EMINIT_CMEM_GET_NOR_FLASH_SIZE(i8 noundef zeroext %0) local_unnamed_addr #0 !dbg !16478 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !16482, metadata !DIExpression()), !dbg !16485
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* null, metadata !16484, metadata !DIExpression()), !dbg !16485
  %2 = tail call i32 @CMEM_EMIINIT_Index() #22, !dbg !16486
  call void @llvm.dbg.value(metadata i32 %2, metadata !16483, metadata !DIExpression()), !dbg !16485
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), metadata !16484, metadata !DIExpression()), !dbg !16485
  %3 = getelementptr inbounds %struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 %2, i32 4, i32 0, i32 0, !dbg !16487
  %4 = load i32, i32* %3, align 4, !dbg !16487
  ret i32 %4, !dbg !16488
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @CMEM_BlockSize_Internal(i32 noundef %0, %struct.hal_cache_region_config_t* nocapture noundef readonly %1) local_unnamed_addr #12 !dbg !16489 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16493, metadata !DIExpression()), !dbg !16496
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %1, metadata !16494, metadata !DIExpression()), !dbg !16496
  %3 = and i32 %0, 134217727, !dbg !16497
  call void @llvm.dbg.value(metadata i32 %3, metadata !16493, metadata !DIExpression()), !dbg !16496
  call void @llvm.dbg.value(metadata i16 0, metadata !16495, metadata !DIExpression()), !dbg !16496
  %4 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 1, i32 1, !dbg !16498
  %5 = load i32, i32* %4, align 4, !dbg !16498
  %6 = icmp eq i32 %5, 0, !dbg !16501
  br i1 %6, label %25, label %7, !dbg !16502

7:                                                ; preds = %2, %18
  %8 = phi i32 [ %21, %18 ], [ 1, %2 ]
  %9 = phi i32 [ %20, %18 ], [ 0, %2 ]
  %10 = phi i16 [ %19, %18 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i16 %10, metadata !16495, metadata !DIExpression()), !dbg !16496
  %11 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 %9, i32 0, !dbg !16503
  %12 = load i32, i32* %11, align 4, !dbg !16503
  %13 = icmp ult i32 %3, %12, !dbg !16506
  br i1 %13, label %18, label %14, !dbg !16507

14:                                               ; preds = %7
  %15 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 %8, i32 0, !dbg !16508
  %16 = load i32, i32* %15, align 4, !dbg !16508
  %17 = icmp ult i32 %3, %16, !dbg !16509
  br i1 %17, label %25, label %18, !dbg !16510

18:                                               ; preds = %7, %14
  %19 = add i16 %10, 1, !dbg !16511
  call void @llvm.dbg.value(metadata i16 %19, metadata !16495, metadata !DIExpression()), !dbg !16496
  %20 = zext i16 %19 to i32, !dbg !16512
  %21 = add nuw nsw i32 %20, 1, !dbg !16513
  %22 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 %21, i32 1, !dbg !16498
  %23 = load i32, i32* %22, align 4, !dbg !16498
  %24 = icmp eq i32 %23, 0, !dbg !16501
  br i1 %24, label %25, label %7, !dbg !16502, !llvm.loop !16514

25:                                               ; preds = %18, %14, %2
  %26 = phi i32 [ 0, %2 ], [ %9, %14 ], [ %20, %18 ], !dbg !16512
  %27 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 %26, i32 1, !dbg !16516
  %28 = load i32, i32* %27, align 4, !dbg !16516
  ret i32 %28, !dbg !16517
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @CMEM_BlockSize(i32 noundef %0) local_unnamed_addr #12 !dbg !16518 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16520, metadata !DIExpression()), !dbg !16521
  %2 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** @BlockLayout, align 4, !dbg !16522
  %3 = tail call i32 @CMEM_BlockSize_Internal(i32 noundef %0, %struct.hal_cache_region_config_t* noundef %2) #23, !dbg !16523
  ret i32 %3, !dbg !16524
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @EMIINIT_CMEM_BlockSize(i32 noundef %0) local_unnamed_addr #0 !dbg !16525 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16527, metadata !DIExpression()), !dbg !16530
  %2 = tail call i32 @CMEM_EMIINIT_Index() #22, !dbg !16531
  call void @llvm.dbg.value(metadata i32 %2, metadata !16528, metadata !DIExpression()), !dbg !16530
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* null, metadata !16529, metadata !DIExpression()), !dbg !16530
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), metadata !16529, metadata !DIExpression()), !dbg !16530
  %3 = getelementptr inbounds %struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 %2, i32 3, i32 0, !dbg !16532
  %4 = tail call i32 @CMEM_BlockSize_Internal(i32 noundef %0, %struct.hal_cache_region_config_t* noundef nonnull %3) #23, !dbg !16533
  ret i32 %4, !dbg !16534
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @NOR_Get_FlashSizeFromBankInfo(%struct.hal_cache_region_config_t* nocapture noundef readonly %0) local_unnamed_addr #12 !dbg !16535 {
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %0, metadata !16541, metadata !DIExpression()), !dbg !16544
  call void @llvm.dbg.value(metadata i32 0, metadata !16542, metadata !DIExpression()), !dbg !16544
  call void @llvm.dbg.value(metadata i32 0, metadata !16543, metadata !DIExpression()), !dbg !16544
  %2 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 0, i32 0, !dbg !16545
  %3 = load i32, i32* %2, align 4, !dbg !16545
  %4 = icmp eq i32 %3, 0, !dbg !16548
  br i1 %4, label %17, label %5, !dbg !16549

5:                                                ; preds = %1, %5
  %6 = phi i32 [ %15, %5 ], [ %3, %1 ]
  %7 = phi i32 [ %13, %5 ], [ 0, %1 ]
  %8 = phi i32 [ %12, %5 ], [ 0, %1 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !16543, metadata !DIExpression()), !dbg !16544
  call void @llvm.dbg.value(metadata i32 %8, metadata !16542, metadata !DIExpression()), !dbg !16544
  %9 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 %7, i32 1, !dbg !16550
  %10 = load i32, i32* %9, align 4, !dbg !16550
  %11 = mul i32 %10, %6, !dbg !16552
  %12 = add i32 %11, %8, !dbg !16553
  call void @llvm.dbg.value(metadata i32 %12, metadata !16542, metadata !DIExpression()), !dbg !16544
  %13 = add i32 %7, 1, !dbg !16554
  call void @llvm.dbg.value(metadata i32 %13, metadata !16543, metadata !DIExpression()), !dbg !16544
  %14 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 %13, i32 0, !dbg !16545
  %15 = load i32, i32* %14, align 4, !dbg !16545
  %16 = icmp eq i32 %15, 0, !dbg !16548
  br i1 %16, label %17, label %5, !dbg !16549, !llvm.loop !16555

17:                                               ; preds = %5, %1
  %18 = phi i32 [ 0, %1 ], [ %12, %5 ], !dbg !16544
  ret i32 %18, !dbg !16557
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @CMEM_NOR_Construct_RegionInfo_Internal(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* nocapture noundef %2, %struct.hal_cache_region_config_t* nocapture noundef readonly %3) local_unnamed_addr #13 !dbg !16558 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16562, metadata !DIExpression()), !dbg !16571
  call void @llvm.dbg.value(metadata i32 %1, metadata !16563, metadata !DIExpression()), !dbg !16571
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %2, metadata !16564, metadata !DIExpression()), !dbg !16571
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %3, metadata !16565, metadata !DIExpression()), !dbg !16571
  %5 = add i32 %1, %0, !dbg !16572
  call void @llvm.dbg.value(metadata i32 %5, metadata !16570, metadata !DIExpression()), !dbg !16571
  call void @llvm.dbg.value(metadata i32 %0, metadata !16566, metadata !DIExpression()), !dbg !16571
  call void @llvm.dbg.value(metadata i32 0, metadata !16567, metadata !DIExpression()), !dbg !16571
  call void @llvm.dbg.value(metadata i32 0, metadata !16569, metadata !DIExpression()), !dbg !16571
  %6 = icmp ugt i32 %5, %0, !dbg !16573
  br i1 %6, label %7, label %34, !dbg !16576

7:                                                ; preds = %4, %29
  %8 = phi i32 [ %32, %29 ], [ 0, %4 ]
  %9 = phi i32 [ %31, %29 ], [ %0, %4 ]
  %10 = phi i32 [ %30, %29 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !16569, metadata !DIExpression()), !dbg !16571
  call void @llvm.dbg.value(metadata i32 %9, metadata !16566, metadata !DIExpression()), !dbg !16571
  call void @llvm.dbg.value(metadata i32 %10, metadata !16567, metadata !DIExpression()), !dbg !16571
  %11 = tail call i32 @CMEM_BlockSize_Internal(i32 noundef %9, %struct.hal_cache_region_config_t* noundef %3) #23, !dbg !16577
  call void @llvm.dbg.value(metadata i32 %11, metadata !16568, metadata !DIExpression()), !dbg !16571
  %12 = icmp eq i32 %8, 0, !dbg !16579
  %13 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %10, i32 0, !dbg !16581
  br i1 %12, label %14, label %16, !dbg !16582

14:                                               ; preds = %7
  store i32 %11, i32* %13, align 4, !dbg !16583
  %15 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %10, i32 1, !dbg !16585
  store i32 1, i32* %15, align 4, !dbg !16586
  br label %29, !dbg !16587

16:                                               ; preds = %7
  %17 = load i32, i32* %13, align 4, !dbg !16588
  %18 = icmp eq i32 %11, %17, !dbg !16590
  br i1 %18, label %19, label %23, !dbg !16591

19:                                               ; preds = %16
  %20 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %10, i32 1, !dbg !16592
  %21 = load i32, i32* %20, align 4, !dbg !16594
  %22 = add i32 %21, 1, !dbg !16594
  store i32 %22, i32* %20, align 4, !dbg !16594
  br label %29, !dbg !16595

23:                                               ; preds = %16
  %24 = add i32 %10, 1, !dbg !16596
  call void @llvm.dbg.value(metadata i32 %24, metadata !16567, metadata !DIExpression()), !dbg !16571
  %25 = icmp eq i32 %24, 9, !dbg !16598
  br i1 %25, label %34, label %26, !dbg !16600

26:                                               ; preds = %23
  %27 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %24, i32 0, !dbg !16601
  store i32 %11, i32* %27, align 4, !dbg !16602
  %28 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %24, i32 1, !dbg !16603
  store i32 1, i32* %28, align 4, !dbg !16604
  br label %29

29:                                               ; preds = %19, %26, %14
  %30 = phi i32 [ %10, %14 ], [ %10, %19 ], [ %24, %26 ], !dbg !16605
  call void @llvm.dbg.value(metadata i32 %30, metadata !16567, metadata !DIExpression()), !dbg !16571
  %31 = add i32 %11, %9, !dbg !16606
  call void @llvm.dbg.value(metadata i32 %31, metadata !16566, metadata !DIExpression()), !dbg !16571
  %32 = add i32 %8, 1, !dbg !16607
  call void @llvm.dbg.value(metadata i32 %32, metadata !16569, metadata !DIExpression()), !dbg !16571
  %33 = icmp ult i32 %31, %5, !dbg !16573
  br i1 %33, label %7, label %34, !dbg !16576, !llvm.loop !16608

34:                                               ; preds = %23, %29, %4
  %35 = phi i32 [ 0, %4 ], [ 0, %29 ], [ 6, %23 ], !dbg !16571
  ret i32 %35, !dbg !16610
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_Construct_RegionInfo(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* noundef %2) local_unnamed_addr #0 !dbg !16611 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16615, metadata !DIExpression()), !dbg !16618
  call void @llvm.dbg.value(metadata i32 %1, metadata !16616, metadata !DIExpression()), !dbg !16618
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %2, metadata !16617, metadata !DIExpression()), !dbg !16618
  %4 = bitcast %struct.hal_cache_region_config_t* %2 to i8*, !dbg !16619
  %5 = tail call i8* @memset(i8* noundef %4, i32 noundef 0, i32 noundef 64) #22, !dbg !16620
  %6 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** @BlockLayout, align 4, !dbg !16621
  %7 = tail call i32 @CMEM_NOR_Construct_RegionInfo_Internal(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* noundef %2, %struct.hal_cache_region_config_t* noundef %6) #23, !dbg !16622
  ret i32 %7, !dbg !16623
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @NOR_Construct_DualRegionInfo(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* nocapture noundef readnone %2) local_unnamed_addr #10 !dbg !16624 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16626, metadata !DIExpression()), !dbg !16629
  call void @llvm.dbg.value(metadata i32 %1, metadata !16627, metadata !DIExpression()), !dbg !16629
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %2, metadata !16628, metadata !DIExpression()), !dbg !16629
  ret i32 0, !dbg !16630
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @EMIINIT_CMEM_NOR_Construct_RegionInfo(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* nocapture noundef %2) local_unnamed_addr #0 !dbg !16631 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16633, metadata !DIExpression()), !dbg !16638
  call void @llvm.dbg.value(metadata i32 %1, metadata !16634, metadata !DIExpression()), !dbg !16638
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %2, metadata !16635, metadata !DIExpression()), !dbg !16638
  %4 = tail call i32 @CMEM_EMIINIT_Index() #22, !dbg !16639
  call void @llvm.dbg.value(metadata i32 %4, metadata !16636, metadata !DIExpression()), !dbg !16638
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* null, metadata !16637, metadata !DIExpression()), !dbg !16638
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), metadata !16637, metadata !DIExpression()), !dbg !16638
  %5 = getelementptr inbounds %struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 %4, i32 3, i32 0, !dbg !16640
  %6 = tail call i32 @CMEM_NOR_Construct_RegionInfo_Internal(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* noundef %2, %struct.hal_cache_region_config_t* noundef nonnull %5) #23, !dbg !16641
  ret i32 %6, !dbg !16642
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @EMIINIT_CMEM_NOR_Construct_DualRegionInfo(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* nocapture noundef readnone %2) local_unnamed_addr #10 !dbg !16643 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16645, metadata !DIExpression()), !dbg !16648
  call void @llvm.dbg.value(metadata i32 %1, metadata !16646, metadata !DIExpression()), !dbg !16648
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %2, metadata !16647, metadata !DIExpression()), !dbg !16648
  ret i32 0, !dbg !16649
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @EMIINIT_CMEM_NOR_GetUniformBlock(i16 noundef zeroext %0) local_unnamed_addr #0 !dbg !16650 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !16652, metadata !DIExpression()), !dbg !16655
  %2 = tail call i32 @CMEM_EMIINIT_Index() #22, !dbg !16656
  call void @llvm.dbg.value(metadata i32 %2, metadata !16653, metadata !DIExpression()), !dbg !16655
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* null, metadata !16654, metadata !DIExpression()), !dbg !16655
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), metadata !16654, metadata !DIExpression()), !dbg !16655
  %3 = getelementptr inbounds %struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 %2, i32 2, !dbg !16657
  %4 = load i32, i32* %3, align 4, !dbg !16657
  ret i32 %4, !dbg !16658
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @CMEM_NOR_AddBankInfo(%struct.hal_cache_region_config_t* nocapture noundef %0, i32* nocapture noundef %1, i32 noundef %2) local_unnamed_addr #7 !dbg !16659 {
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %0, metadata !16663, metadata !DIExpression()), !dbg !16666
  call void @llvm.dbg.value(metadata i32* %1, metadata !16664, metadata !DIExpression()), !dbg !16666
  call void @llvm.dbg.value(metadata i32 %2, metadata !16665, metadata !DIExpression()), !dbg !16666
  %4 = load i32, i32* %1, align 4, !dbg !16667
  %5 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 %4, i32 0, !dbg !16669
  %6 = load i32, i32* %5, align 4, !dbg !16669
  %7 = icmp eq i32 %6, %2, !dbg !16670
  br i1 %7, label %8, label %12, !dbg !16671

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 %4, i32 1, !dbg !16672
  %10 = load i32, i32* %9, align 4, !dbg !16674
  %11 = add i32 %10, 1, !dbg !16674
  store i32 %11, i32* %9, align 4, !dbg !16674
  br label %17, !dbg !16675

12:                                               ; preds = %3
  %13 = add i32 %4, 1, !dbg !16676
  store i32 %13, i32* %1, align 4, !dbg !16676
  %14 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 %13, i32 1, !dbg !16678
  store i32 1, i32* %14, align 4, !dbg !16679
  %15 = load i32, i32* %1, align 4, !dbg !16680
  %16 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 %15, i32 0, !dbg !16681
  store i32 %2, i32* %16, align 4, !dbg !16682
  br label %17

17:                                               ; preds = %12, %8
  ret void, !dbg !16683
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_NOR_Construct_BankInfo(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* noundef %2, %struct.hal_cache_region_config_t* nocapture noundef readonly %3) local_unnamed_addr #0 !dbg !16684 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16688, metadata !DIExpression()), !dbg !16697
  call void @llvm.dbg.value(metadata i32 %1, metadata !16689, metadata !DIExpression()), !dbg !16697
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %2, metadata !16690, metadata !DIExpression()), !dbg !16697
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %3, metadata !16691, metadata !DIExpression()), !dbg !16697
  call void @llvm.dbg.value(metadata i32 0, metadata !16692, metadata !DIExpression()), !dbg !16697
  call void @llvm.dbg.value(metadata i32 0, metadata !16693, metadata !DIExpression()), !dbg !16697
  %5 = bitcast %struct.hal_cache_region_config_t* %2 to i8*, !dbg !16698
  %6 = tail call i8* @memset(i8* noundef %5, i32 noundef 0, i32 noundef 64) #22, !dbg !16699
  call void @llvm.dbg.value(metadata i32 0, metadata !16696, metadata !DIExpression()), !dbg !16697
  call void @llvm.dbg.value(metadata i32 0, metadata !16695, metadata !DIExpression()), !dbg !16697
  call void @llvm.dbg.value(metadata i32 0, metadata !16693, metadata !DIExpression()), !dbg !16697
  call void @llvm.dbg.value(metadata i32 0, metadata !16692, metadata !DIExpression()), !dbg !16697
  call void @llvm.dbg.value(metadata i32 %0, metadata !16688, metadata !DIExpression()), !dbg !16697
  call void @llvm.dbg.value(metadata i32 %1, metadata !16689, metadata !DIExpression()), !dbg !16697
  %7 = icmp eq i32 %1, 0, !dbg !16700
  br i1 %7, label %53, label %8, !dbg !16703

8:                                                ; preds = %4, %46
  %9 = phi i32 [ %51, %46 ], [ 0, %4 ]
  %10 = phi i32 [ %23, %46 ], [ 0, %4 ]
  %11 = phi i32 [ %49, %46 ], [ 0, %4 ]
  %12 = phi i32 [ %20, %46 ], [ 0, %4 ]
  %13 = phi i32 [ %48, %46 ], [ %0, %4 ]
  %14 = phi i32 [ %47, %46 ], [ %1, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !16696, metadata !DIExpression()), !dbg !16697
  call void @llvm.dbg.value(metadata i32 %10, metadata !16695, metadata !DIExpression()), !dbg !16697
  call void @llvm.dbg.value(metadata i32 %11, metadata !16693, metadata !DIExpression()), !dbg !16697
  call void @llvm.dbg.value(metadata i32 %12, metadata !16692, metadata !DIExpression()), !dbg !16697
  call void @llvm.dbg.value(metadata i32 %13, metadata !16688, metadata !DIExpression()), !dbg !16697
  call void @llvm.dbg.value(metadata i32 %14, metadata !16689, metadata !DIExpression()), !dbg !16697
  %15 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %3, i32 %12, i32 1, !dbg !16704
  %16 = load i32, i32* %15, align 4, !dbg !16704
  %17 = icmp ult i32 %9, %16, !dbg !16707
  %18 = xor i1 %17, true, !dbg !16708
  %19 = zext i1 %18 to i32, !dbg !16708
  %20 = add i32 %12, %19, !dbg !16708
  call void @llvm.dbg.value(metadata i32 undef, metadata !16696, metadata !DIExpression()), !dbg !16697
  call void @llvm.dbg.value(metadata i32 %20, metadata !16692, metadata !DIExpression()), !dbg !16697
  %21 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %3, i32 %20, i32 0, !dbg !16709
  %22 = load i32, i32* %21, align 4, !dbg !16709
  %23 = add i32 %22, %10, !dbg !16710
  call void @llvm.dbg.value(metadata i32 %23, metadata !16695, metadata !DIExpression()), !dbg !16697
  %24 = icmp ult i32 %23, %13, !dbg !16711
  br i1 %24, label %46, label %25, !dbg !16713

25:                                               ; preds = %8
  %26 = sub i32 %23, %13, !dbg !16714
  call void @llvm.dbg.value(metadata i32 %26, metadata !16694, metadata !DIExpression()), !dbg !16697
  %27 = icmp ult i32 %14, %26, !dbg !16716
  %28 = select i1 %27, i32 %14, i32 %26, !dbg !16718
  call void @llvm.dbg.value(metadata i32 %28, metadata !16694, metadata !DIExpression()), !dbg !16697
  %29 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %11, i32 0, !dbg !16719
  %30 = load i32, i32* %29, align 4, !dbg !16719
  %31 = icmp eq i32 %30, %28, !dbg !16721
  br i1 %31, label %32, label %36, !dbg !16722

32:                                               ; preds = %25
  %33 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %11, i32 1, !dbg !16723
  %34 = load i32, i32* %33, align 4, !dbg !16725
  %35 = add i32 %34, 1, !dbg !16725
  store i32 %35, i32* %33, align 4, !dbg !16725
  br label %42, !dbg !16726

36:                                               ; preds = %25
  %37 = icmp ne i32 %30, 0, !dbg !16727
  %38 = zext i1 %37 to i32, !dbg !16730
  %39 = add nsw i32 %11, %38, !dbg !16730
  call void @llvm.dbg.value(metadata i32 %39, metadata !16693, metadata !DIExpression()), !dbg !16697
  %40 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %39, i32 1, !dbg !16731
  store i32 1, i32* %40, align 4, !dbg !16732
  %41 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %39, i32 0, !dbg !16733
  store i32 %28, i32* %41, align 4, !dbg !16734
  br label %42

42:                                               ; preds = %36, %32
  %43 = phi i32 [ %11, %32 ], [ %39, %36 ], !dbg !16697
  call void @llvm.dbg.value(metadata i32 %43, metadata !16693, metadata !DIExpression()), !dbg !16697
  %44 = add i32 %28, %13, !dbg !16735
  call void @llvm.dbg.value(metadata i32 %44, metadata !16688, metadata !DIExpression()), !dbg !16697
  %45 = sub i32 %14, %28, !dbg !16736
  call void @llvm.dbg.value(metadata i32 %45, metadata !16689, metadata !DIExpression()), !dbg !16697
  br label %46, !dbg !16737

46:                                               ; preds = %8, %42
  %47 = phi i32 [ %45, %42 ], [ %14, %8 ]
  %48 = phi i32 [ %44, %42 ], [ %13, %8 ]
  %49 = phi i32 [ %43, %42 ], [ %11, %8 ], !dbg !16738
  call void @llvm.dbg.value(metadata i32 %49, metadata !16693, metadata !DIExpression()), !dbg !16697
  call void @llvm.dbg.value(metadata i32 %48, metadata !16688, metadata !DIExpression()), !dbg !16697
  call void @llvm.dbg.value(metadata i32 %47, metadata !16689, metadata !DIExpression()), !dbg !16697
  %50 = add nuw i32 %9, 1, !dbg !16739
  %51 = select i1 %17, i32 %50, i32 1, !dbg !16739
  call void @llvm.dbg.value(metadata i32 %51, metadata !16696, metadata !DIExpression()), !dbg !16697
  call void @llvm.dbg.value(metadata i32 %23, metadata !16695, metadata !DIExpression()), !dbg !16697
  call void @llvm.dbg.value(metadata i32 %20, metadata !16692, metadata !DIExpression()), !dbg !16697
  %52 = icmp eq i32 %47, 0, !dbg !16700
  br i1 %52, label %53, label %8, !dbg !16703, !llvm.loop !16740

53:                                               ; preds = %46, %4
  ret i32 0, !dbg !16742
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Init_NOR() local_unnamed_addr #0 !dbg !16743 {
  %1 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !16747
  %2 = load i32, i32* @cmem_nor_index, align 4, !dbg !16748
  %3 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 3, i32 0, !dbg !16747
  store %struct.hal_cache_region_config_t* %3, %struct.hal_cache_region_config_t** @BlockLayout, align 4, !dbg !16749
  %4 = tail call i32 @custom_get_fat_addr() #22, !dbg !16750
  %5 = tail call i32 @custom_get_fat_len() #22, !dbg !16751
  %6 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !16752
  %7 = load i32, i32* @cmem_nor_index, align 4, !dbg !16753
  %8 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %6, i32 %7, i32 4, i32 0, !dbg !16752
  %9 = tail call i32 @CMEM_NOR_Construct_BankInfo(i32 noundef %4, i32 noundef %5, %struct.hal_cache_region_config_t* noundef getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @BankInfo, i32 0, i32 0), %struct.hal_cache_region_config_t* noundef nonnull %8) #23, !dbg !16754
  %10 = tail call i32 @custom_get_fat_addr() #22, !dbg !16755
  %11 = tail call i32 @custom_get_fat_len() #22, !dbg !16756
  %12 = tail call i32 @NOR_Construct_RegionInfo(i32 noundef %10, i32 noundef %11, %struct.hal_cache_region_config_t* noundef getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @RegionInfo, i32 0, i32 0)) #23, !dbg !16757
  call void @llvm.dbg.value(metadata i32 %12, metadata !16745, metadata !DIExpression()), !dbg !16758
  %13 = icmp eq i32 %12, 0, !dbg !16759
  br i1 %13, label %14, label %46, !dbg !16761

14:                                               ; preds = %0
  call void @llvm.dbg.value(metadata i32 0, metadata !16746, metadata !DIExpression()), !dbg !16758
  store i32 0, i32* @TOTAL_BLOCKS, align 4, !dbg !16762
  store i32 0, i32* @NOR_LARGEST_BLOCK_SIZE, align 4, !dbg !16764
  call void @llvm.dbg.value(metadata i32 0, metadata !16746, metadata !DIExpression()), !dbg !16758
  %15 = load i32, i32* getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @RegionInfo, i32 0, i32 0, i32 0), align 4, !dbg !16765
  %16 = icmp eq i32 %15, 0, !dbg !16767
  br i1 %16, label %34, label %17, !dbg !16768

17:                                               ; preds = %14, %27
  %18 = phi i32 [ %31, %27 ], [ %15, %14 ]
  %19 = phi i32 [ %29, %27 ], [ 0, %14 ]
  %20 = phi i32 [ %24, %27 ], [ 0, %14 ]
  %21 = phi i32 [ %28, %27 ], [ 0, %14 ]
  call void @llvm.dbg.value(metadata i32 %19, metadata !16746, metadata !DIExpression()), !dbg !16758
  %22 = getelementptr inbounds [8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @RegionInfo, i32 0, i32 %19, i32 1, !dbg !16769
  %23 = load i32, i32* %22, align 4, !dbg !16769
  %24 = add i32 %20, %23, !dbg !16771
  %25 = icmp ugt i32 %18, %21, !dbg !16772
  br i1 %25, label %26, label %27, !dbg !16774

26:                                               ; preds = %17
  store i32 %18, i32* @NOR_LARGEST_BLOCK_SIZE, align 4, !dbg !16775
  br label %27, !dbg !16777

27:                                               ; preds = %17, %26
  %28 = phi i32 [ %21, %17 ], [ %18, %26 ]
  %29 = add nuw nsw i32 %19, 1, !dbg !16778
  call void @llvm.dbg.value(metadata i32 %29, metadata !16746, metadata !DIExpression()), !dbg !16758
  %30 = getelementptr inbounds [8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @RegionInfo, i32 0, i32 %29, i32 0, !dbg !16765
  %31 = load i32, i32* %30, align 4, !dbg !16765
  %32 = icmp eq i32 %31, 0, !dbg !16767
  br i1 %32, label %33, label %17, !dbg !16768, !llvm.loop !16779

33:                                               ; preds = %27
  store i32 %24, i32* @TOTAL_BLOCKS, align 4, !dbg !16771
  br label %34, !dbg !16768

34:                                               ; preds = %33, %14
  %35 = phi i32 [ %28, %33 ], [ 0, %14 ], !dbg !16781
  %36 = mul i32 %35, -5, !dbg !16782
  %37 = add i32 %36, 262144, !dbg !16783
  %38 = lshr i32 %37, 9, !dbg !16784
  store i32 %38, i32* @TOTAL_SECTORS, align 4, !dbg !16785
  %39 = tail call i32 @CMEM_Init_NOR_MTD_Common() #23, !dbg !16786
  call void @llvm.dbg.value(metadata i32 0, metadata !16745, metadata !DIExpression()), !dbg !16758
  %40 = load %struct.CMEMEntryID*, %struct.CMEMEntryID** @cmem_id, align 4, !dbg !16787
  %41 = getelementptr inbounds %struct.CMEMEntryID, %struct.CMEMEntryID* %40, i32 0, i32 0, !dbg !16788
  %42 = load i8, i8* %41, align 1, !dbg !16788
  %43 = icmp eq i8 %42, 3, !dbg !16789
  br i1 %43, label %44, label %46, !dbg !16789

44:                                               ; preds = %34
  %45 = tail call i32 @CMEM_Init_NOR_MTD_SF() #23, !dbg !16790
  call void @llvm.dbg.value(metadata i32 %45, metadata !16745, metadata !DIExpression()), !dbg !16758
  br label %46, !dbg !16792

46:                                               ; preds = %44, %34, %0
  %47 = phi i32 [ %12, %0 ], [ %45, %44 ], [ 3, %34 ], !dbg !16758
  ret i32 %47, !dbg !16793
}

; Function Attrs: noinline nounwind optsize
define dso_local void @CMEM_Init_nor_list(i32 noundef %0) local_unnamed_addr #0 !dbg !16794 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16798, metadata !DIExpression()), !dbg !16799
  %2 = icmp eq i32 %0, 0, !dbg !16800
  br i1 %2, label %3, label %9, !dbg !16802

3:                                                ; preds = %1
  %4 = tail call i32 @CMEM_Index() #22, !dbg !16803
  store i32 %4, i32* @cmem_nor_index, align 4, !dbg !16805
  %5 = icmp slt i32 %4, 0, !dbg !16806
  br i1 %5, label %6, label %7, !dbg !16808

6:                                                ; preds = %3
  tail call void @Flash_ReturnReady() #22, !dbg !16809
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.275, i32 0, i32 0), i32 noundef 921, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.CMEM_Init_nor_list, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.276, i32 0, i32 0)) #25, !dbg !16809
  unreachable, !dbg !16809

7:                                                ; preds = %3
  %8 = tail call %struct.CMEMEntryID* @CMEM_GetIDEntry(i32 noundef %4) #22, !dbg !16814
  store %struct.CMEMEntryID* %8, %struct.CMEMEntryID** @cmem_id, align 4, !dbg !16815
  br label %9, !dbg !16816

9:                                                ; preds = %7, %1
  store %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !16817
  ret void, !dbg !16818
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @ComboMem_Initialize() local_unnamed_addr #0 !dbg !16819 {
  tail call void @CMEM_Init_nor_list(i32 noundef 0) #23, !dbg !16820
  %1 = tail call i32 @CMEM_Init_NOR() #23, !dbg !16821
  ret i32 %1, !dbg !16822
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Init_FullDriver() local_unnamed_addr #0 !dbg !16823 {
  tail call void @CMEM_Init_nor_list(i32 noundef 0) #23, !dbg !16826
  %1 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !16827
  %2 = load i32, i32* @cmem_nor_index, align 4, !dbg !16828
  %3 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 1, !dbg !16829
  %4 = load i16, i16* %3, align 2, !dbg !16829
  %5 = zext i16 %4 to i32, !dbg !16827
  store i32 %5, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !16830
  %6 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 3, i32 0, !dbg !16831
  store %struct.hal_cache_region_config_t* %6, %struct.hal_cache_region_config_t** @BlockLayout, align 4, !dbg !16832
  %7 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 4, i32 0, !dbg !16833
  %8 = bitcast %struct.hal_cache_region_config_t* %7 to i8*, !dbg !16833
  %9 = tail call i8* @memcpy(i8* noundef bitcast ([8 x %struct.hal_cache_region_config_t]* @BankInfo to i8*), i8* noundef nonnull %8, i32 noundef 64) #22, !dbg !16834
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @StatusMap, i32 0, i32 0), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 12), align 4, !dbg !16835
  store %struct.SF_MTD_CMD* @sf_dal_data_cmd, %struct.SF_MTD_CMD** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 13), align 4, !dbg !16836
  store i16 0, i16* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 23), align 2, !dbg !16837
  store i32 xor (i32 ptrtoint ([8 x %struct.hal_cache_region_config_t]* @EntireDiskRegionInfo to i32), i32 -1), i32* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 0), align 4, !dbg !16838
  store i8* inttoptr (i32 134217728 to i8*), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 1), align 4, !dbg !16839
  %10 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !16840
  %11 = load i32, i32* @cmem_nor_index, align 4, !dbg !16841
  %12 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %10, i32 %11, i32 2, !dbg !16842
  %13 = load i32, i32* %12, align 4, !dbg !16842
  %14 = tail call i32 @SF_DAL_Init_Driver(%struct.NOR_MTD_Driver* noundef nonnull @NORFlashMtd, %struct.SF_MTD_Data* noundef nonnull @EntireDiskMtdData, i32 noundef 134217728, i32 noundef %13) #22, !dbg !16843
  call void @llvm.dbg.value(metadata i32 %14, metadata !16825, metadata !DIExpression()), !dbg !16844
  %15 = icmp eq i32 %14, -120, !dbg !16845
  br i1 %15, label %16, label %17, !dbg !16848

16:                                               ; preds = %0
  tail call void @Flash_ReturnReady() #22, !dbg !16849
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.275, i32 0, i32 0), i32 noundef 1063, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.CMEM_Init_FullDriver, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.276, i32 0, i32 0)) #25, !dbg !16849
  unreachable, !dbg !16849

17:                                               ; preds = %0
  %18 = tail call i32 @NOR_Get_FlashSizeFromBankInfo(%struct.hal_cache_region_config_t* noundef getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @BankInfo, i32 0, i32 0)) #23, !dbg !16851
  store i32 %18, i32* getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 0), align 4, !dbg !16852
  %19 = tail call i32 @NOR_Construct_RegionInfo(i32 noundef 0, i32 noundef %18, %struct.hal_cache_region_config_t* noundef getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @EntireDiskRegionInfo, i32 0, i32 0)) #23, !dbg !16853
  store %struct.hal_cache_region_config_t* getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @EntireDiskRegionInfo, i32 0, i32 0), %struct.hal_cache_region_config_t** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 5), align 4, !dbg !16854
  store %struct.NOR_MTD_Driver* @NORFlashMtd, %struct.NOR_MTD_Driver** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 1), align 4, !dbg !16855
  store i8* bitcast (%struct.SF_MTD_Data* @EntireDiskMtdData to i8*), i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !16856
  store i8 0, i8* getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 4), align 4, !dbg !16857
  ret i32 0, !dbg !16858
}

; Function Attrs: optsize
declare dso_local i8* @memcpy(i8* noundef, i8* noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @CreateFDMLock() local_unnamed_addr #10 !dbg !16859 {
  ret void, !dbg !16860
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @GetFDMLock() local_unnamed_addr #0 !dbg !16861 {
  %1 = tail call i32 @SaveAndSetIRQMask() #22, !dbg !16864
  call void @llvm.dbg.value(metadata i32 %1, metadata !16863, metadata !DIExpression()), !dbg !16865
  %2 = load i1, i1* @FDMMutex, align 4, !dbg !16866
  br i1 %2, label %4, label %3, !dbg !16868

3:                                                ; preds = %0
  store i1 true, i1* @FDMMutex, align 4, !dbg !16869
  br label %4, !dbg !16871

4:                                                ; preds = %0, %3
  %5 = phi i32 [ 0, %3 ], [ -2, %0 ], !dbg !16872
  tail call void @RestoreIRQMask(i32 noundef %1) #22, !dbg !16872
  ret i32 %5, !dbg !16873
}

; Function Attrs: noinline nounwind optsize
define dso_local void @FreeFDMLock() local_unnamed_addr #0 !dbg !16874 {
  %1 = tail call i32 @SaveAndSetIRQMask() #22, !dbg !16877
  call void @llvm.dbg.value(metadata i32 %1, metadata !16876, metadata !DIExpression()), !dbg !16878
  %2 = load i1, i1* @FDMMutex, align 4, !dbg !16879
  br i1 %2, label %3, label %4, !dbg !16881

3:                                                ; preds = %0
  store i1 false, i1* @FDMMutex, align 4, !dbg !16882
  tail call void @RestoreIRQMask(i32 noundef %1) #22, !dbg !16884
  ret void, !dbg !16885

4:                                                ; preds = %0
  tail call void @RestoreIRQMask(i32 noundef %1) #22, !dbg !16886
  tail call void @Flash_ReturnReady() #22, !dbg !16888
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.281, i32 0, i32 0), i32 noundef 112, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.FreeFDMLock, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.282, i32 0, i32 0)) #25, !dbg !16888
  unreachable, !dbg !16888
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @create_FDM_lock() local_unnamed_addr #10 !dbg !16892 {
  ret void, !dbg !16893
}

; Function Attrs: noinline nounwind optsize
define dso_local void @retrieve_FDM_lock() local_unnamed_addr #0 !dbg !16894 {
  br label %1, !dbg !16897

1:                                                ; preds = %1, %0
  %2 = tail call i32 @GetFDMLock() #23, !dbg !16898
  call void @llvm.dbg.value(metadata i32 %2, metadata !16896, metadata !DIExpression()), !dbg !16900
  %3 = icmp eq i32 %2, 0, !dbg !16901
  br i1 %3, label %4, label %1, !dbg !16902, !llvm.loop !16903

4:                                                ; preds = %1
  ret void, !dbg !16905
}

; Function Attrs: noinline nounwind optsize
define dso_local void @release_FDM_lock() local_unnamed_addr #0 !dbg !16906 {
  tail call void @FreeFDMLock() #23, !dbg !16907
  ret void, !dbg !16908
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @readRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !16909 {
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* %0, metadata !16952, metadata !DIExpression()), !dbg !16958
  call void @llvm.dbg.value(metadata i32 %1, metadata !16953, metadata !DIExpression()), !dbg !16958
  call void @llvm.dbg.value(metadata i8* %2, metadata !16954, metadata !DIExpression()), !dbg !16958
  call void @llvm.dbg.value(metadata i32 %3, metadata !16955, metadata !DIExpression()), !dbg !16958
  %5 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 0, !dbg !16959
  %6 = load i32, i32* %5, align 4, !dbg !16959
  call void @llvm.dbg.value(metadata i32 %6, metadata !16957, metadata !DIExpression()), !dbg !16958
  %7 = icmp ule i32 %6, %1, !dbg !16960
  %8 = add i32 %3, %1
  %9 = icmp ugt i32 %8, %6
  %10 = or i1 %7, %9, !dbg !16962
  br i1 %10, label %26, label %11, !dbg !16962

11:                                               ; preds = %4
  %12 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 2, !dbg !16963
  %13 = bitcast i8** %12 to %struct.NOR_Flash_MTD_Data**, !dbg !16963
  %14 = load %struct.NOR_Flash_MTD_Data*, %struct.NOR_Flash_MTD_Data** %13, align 4, !dbg !16963
  %15 = getelementptr inbounds %struct.NOR_Flash_MTD_Data, %struct.NOR_Flash_MTD_Data* %14, i32 0, i32 1, !dbg !16964
  %16 = load i8*, i8** %15, align 4, !dbg !16964
  %17 = ptrtoint i8* %16 to i32, !dbg !16965
  %18 = add i32 %17, %1, !dbg !16966
  call void @llvm.dbg.value(metadata i32 %18, metadata !16956, metadata !DIExpression()), !dbg !16958
  %19 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 4, !dbg !16967
  %20 = load i8, i8* %19, align 4, !dbg !16967, !range !4202
  %21 = icmp eq i8 %20, 0, !dbg !16967
  br i1 %21, label %22, label %23, !dbg !16969

22:                                               ; preds = %11
  tail call fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef nonnull %0) #23, !dbg !16970
  br label %23, !dbg !16972

23:                                               ; preds = %22, %11
  tail call void @retrieve_FDM_lock() #23, !dbg !16973
  %24 = inttoptr i32 %18 to i8*, !dbg !16974
  %25 = tail call i8* @memcpy(i8* noundef %2, i8* noundef %24, i32 noundef %3) #22, !dbg !16975
  tail call void @release_FDM_lock() #23, !dbg !16976
  br label %26, !dbg !16977

26:                                               ; preds = %4, %23
  %27 = phi i32 [ 0, %23 ], [ 2, %4 ], !dbg !16958
  ret i32 %27, !dbg !16978
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef %0) unnamed_addr #0 !dbg !16979 {
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* %0, metadata !16983, metadata !DIExpression()), !dbg !16985
  %2 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 4, !dbg !16986
  %3 = load i8, i8* %2, align 4, !dbg !16986, !range !4202
  %4 = icmp eq i8 %3, 0, !dbg !16986
  br i1 %4, label %5, label %18, !dbg !16988

5:                                                ; preds = %1
  tail call void @retrieve_FDM_lock() #23, !dbg !16989
  %6 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 1, !dbg !16990
  %7 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %6, align 4, !dbg !16990
  %8 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %7, i32 0, i32 0, !dbg !16991
  %9 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %8, align 4, !dbg !16991
  %10 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 2, !dbg !16992
  %11 = load i8*, i8** %10, align 4, !dbg !16992
  %12 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 3, !dbg !16993
  %13 = bitcast %struct.NOR_MTD_FlashInfo* %12 to i8*, !dbg !16994
  %14 = tail call i32 %9(i8* noundef %11, i8* noundef nonnull %13) #22, !dbg !16995
  call void @llvm.dbg.value(metadata i32 %14, metadata !16984, metadata !DIExpression()), !dbg !16985
  tail call void @release_FDM_lock() #23, !dbg !16996
  %15 = icmp slt i32 %14, 0, !dbg !16997
  br i1 %15, label %16, label %17, !dbg !16999

16:                                               ; preds = %5
  tail call void @Flash_ReturnReady() #22, !dbg !17000
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.281, i32 0, i32 0), i32 noundef 191, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.MountDevice, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.282, i32 0, i32 0)) #25, !dbg !17000
  unreachable, !dbg !17000

17:                                               ; preds = %5
  store i8 1, i8* %2, align 4, !dbg !17005
  br label %18, !dbg !17006

18:                                               ; preds = %1, %17
  ret void, !dbg !17006
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @writeRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !17007 {
  %5 = alloca i16, align 2
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* %0, metadata !17009, metadata !DIExpression()), !dbg !17030
  call void @llvm.dbg.value(metadata i32 %1, metadata !17010, metadata !DIExpression()), !dbg !17030
  call void @llvm.dbg.value(metadata i8* %2, metadata !17011, metadata !DIExpression()), !dbg !17030
  call void @llvm.dbg.value(metadata i32 %3, metadata !17012, metadata !DIExpression()), !dbg !17030
  %6 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 0, !dbg !17031
  %7 = load i32, i32* %6, align 4, !dbg !17031
  call void @llvm.dbg.value(metadata i32 %7, metadata !17015, metadata !DIExpression()), !dbg !17030
  call void @llvm.dbg.value(metadata i32 0, metadata !17016, metadata !DIExpression()), !dbg !17030
  call void @llvm.dbg.value(metadata i32 0, metadata !17017, metadata !DIExpression()), !dbg !17030
  %8 = icmp ugt i32 %7, %1, !dbg !17032
  br i1 %8, label %9, label %101, !dbg !17034

9:                                                ; preds = %4
  %10 = add i32 %3, %1, !dbg !17035
  %11 = icmp ugt i32 %10, %7, !dbg !17037
  br i1 %11, label %101, label %12, !dbg !17038

12:                                               ; preds = %9
  %13 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 4, !dbg !17039
  %14 = load i8, i8* %13, align 4, !dbg !17039, !range !4202
  %15 = icmp eq i8 %14, 0, !dbg !17039
  br i1 %15, label %16, label %17, !dbg !17041

16:                                               ; preds = %12
  tail call fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef nonnull %0) #23, !dbg !17042
  br label %17, !dbg !17044

17:                                               ; preds = %16, %12
  tail call void @retrieve_FDM_lock() #23, !dbg !17045
  %18 = bitcast i16* %5 to i8*, !dbg !17046
  call void @llvm.dbg.value(metadata i32 0, metadata !17016, metadata !DIExpression()), !dbg !17030
  call void @llvm.dbg.value(metadata i32 0, metadata !17017, metadata !DIExpression()), !dbg !17030
  %19 = icmp eq i32 %3, 0, !dbg !17047
  br i1 %19, label %99, label %20, !dbg !17048

20:                                               ; preds = %17
  %21 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 2
  %22 = ptrtoint i8* %2 to i32
  %23 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 1
  %24 = getelementptr inbounds i8, i8* %18, i32 1
  br label %25, !dbg !17048

25:                                               ; preds = %20, %96
  %26 = phi i32 [ 0, %20 ], [ %97, %96 ]
  call void @llvm.dbg.value(metadata i32 %26, metadata !17017, metadata !DIExpression()), !dbg !17030
  %27 = load i8*, i8** %21, align 4, !dbg !17049
  %28 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !17050
  %29 = bitcast i8* %28 to i8**, !dbg !17050
  %30 = load i8*, i8** %29, align 4, !dbg !17050
  %31 = ptrtoint i8* %30 to i32, !dbg !17051
  %32 = add i32 %31, %1, !dbg !17052
  %33 = add i32 %32, %26, !dbg !17053
  call void @llvm.dbg.value(metadata i32 %33, metadata !17013, metadata !DIExpression()), !dbg !17030
  %34 = add i32 %26, %22, !dbg !17054
  call void @llvm.dbg.value(metadata i32 %34, metadata !17014, metadata !DIExpression()), !dbg !17030
  %35 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %23, align 4, !dbg !17055
  %36 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %35, i32 0, i32 2, !dbg !17056
  %37 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %36, align 4, !dbg !17056
  %38 = add i32 %26, %1, !dbg !17057
  %39 = call i32 @BlockIndex(i8* noundef %27, i32 noundef %38) #22, !dbg !17058
  %40 = call i8* %37(i8* noundef %27, i32 noundef %39, i32 noundef 0) #22, !dbg !17059
  %41 = and i32 %33, 1, !dbg !17060
  %42 = icmp eq i32 %41, 0, !dbg !17060
  br i1 %42, label %43, label %46, !dbg !17061

43:                                               ; preds = %25
  %44 = sub i32 %3, %26, !dbg !17062
  %45 = icmp eq i32 %44, 1, !dbg !17063
  br i1 %45, label %46, label %57, !dbg !17064

46:                                               ; preds = %43, %25
  %47 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %23, align 4, !dbg !17065
  %48 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %47, i32 0, i32 4, !dbg !17067
  %49 = load i32 (i8*, i8*, i8*, i32)*, i32 (i8*, i8*, i8*, i32)** %48, align 4, !dbg !17067
  %50 = load i8*, i8** %21, align 4, !dbg !17068
  %51 = inttoptr i32 %33 to i8*, !dbg !17069
  %52 = inttoptr i32 %34 to i8*, !dbg !17070
  %53 = call i32 %49(i8* noundef %50, i8* noundef %51, i8* noundef %52, i32 noundef 1) #22, !dbg !17071
  call void @llvm.dbg.value(metadata i32 %53, metadata !17016, metadata !DIExpression()), !dbg !17030
  %54 = icmp eq i32 %53, 0, !dbg !17072
  br i1 %54, label %55, label %99, !dbg !17074

55:                                               ; preds = %46
  %56 = add i32 %26, 1, !dbg !17075
  call void @llvm.dbg.value(metadata i32 %56, metadata !17017, metadata !DIExpression()), !dbg !17030
  br label %96, !dbg !17076

57:                                               ; preds = %43
  %58 = load i8*, i8** %21, align 4, !dbg !17077
  %59 = call i32 @BlockIndex(i8* noundef %58, i32 noundef %38) #22, !dbg !17078
  %60 = call i32 @BlockSize(i8* noundef %58, i32 noundef %59) #22, !dbg !17079
  call void @llvm.dbg.value(metadata i32 %60, metadata !17018, metadata !DIExpression()), !dbg !17080
  call void @llvm.dbg.value(metadata i32 %44, metadata !17022, metadata !DIExpression()), !dbg !17080
  %61 = add i32 %60, %33, !dbg !17081
  %62 = sub i32 0, %60, !dbg !17082
  %63 = and i32 %61, %62, !dbg !17083
  call void @llvm.dbg.value(metadata i32 %63, metadata !17023, metadata !DIExpression()), !dbg !17080
  %64 = add i32 %32, %3, !dbg !17084
  %65 = icmp ugt i32 %64, %63, !dbg !17086
  %66 = sub i32 %63, %33
  %67 = select i1 %65, i32 %66, i32 %44, !dbg !17087
  call void @llvm.dbg.value(metadata i32 %67, metadata !17022, metadata !DIExpression()), !dbg !17080
  %68 = and i32 %67, -2, !dbg !17088
  call void @llvm.dbg.value(metadata i32 %68, metadata !17022, metadata !DIExpression()), !dbg !17080
  %69 = icmp ne i32 %68, 2, !dbg !17089
  %70 = and i32 %34, 1
  %71 = icmp eq i32 %70, 0
  %72 = select i1 %69, i1 true, i1 %71, !dbg !17090
  br i1 %72, label %85, label %73, !dbg !17090

73:                                               ; preds = %57
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %18) #24, !dbg !17046
  call void @llvm.dbg.value(metadata i8* %18, metadata !17029, metadata !DIExpression()), !dbg !17091
  %74 = inttoptr i32 %34 to i8*, !dbg !17092
  %75 = load i8, i8* %74, align 1, !dbg !17093
  call void @llvm.dbg.value(metadata i8 undef, metadata !17024, metadata !DIExpression()), !dbg !17091
  store i8 %75, i8* %18, align 2, !dbg !17094
  %76 = getelementptr inbounds i8, i8* %74, i32 1, !dbg !17095
  %77 = load i8, i8* %76, align 1, !dbg !17096
  store i8 %77, i8* %24, align 1, !dbg !17097
  %78 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %23, align 4, !dbg !17098
  %79 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %78, i32 0, i32 4, !dbg !17099
  %80 = load i32 (i8*, i8*, i8*, i32)*, i32 (i8*, i8*, i8*, i32)** %79, align 4, !dbg !17099
  %81 = load i8*, i8** %21, align 4, !dbg !17100
  %82 = inttoptr i32 %33 to i8*, !dbg !17101
  call void @llvm.dbg.value(metadata i16* %5, metadata !17024, metadata !DIExpression(DW_OP_deref)), !dbg !17091
  %83 = call i32 %80(i8* noundef %81, i8* noundef %82, i8* noundef nonnull %18, i32 noundef 2) #22, !dbg !17102
  call void @llvm.dbg.value(metadata i32 %83, metadata !17016, metadata !DIExpression()), !dbg !17030
  %84 = icmp eq i32 %83, 0, !dbg !17103
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %18) #24, !dbg !17105
  br i1 %84, label %94, label %99

85:                                               ; preds = %57
  %86 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %23, align 4, !dbg !17106
  %87 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %86, i32 0, i32 4, !dbg !17110
  %88 = load i32 (i8*, i8*, i8*, i32)*, i32 (i8*, i8*, i8*, i32)** %87, align 4, !dbg !17110
  %89 = load i8*, i8** %21, align 4, !dbg !17111
  %90 = inttoptr i32 %33 to i8*, !dbg !17112
  %91 = inttoptr i32 %34 to i8*, !dbg !17113
  %92 = call i32 %88(i8* noundef %89, i8* noundef %90, i8* noundef %91, i32 noundef %68) #22, !dbg !17114
  call void @llvm.dbg.value(metadata i32 %92, metadata !17016, metadata !DIExpression()), !dbg !17030
  %93 = icmp eq i32 %92, 0, !dbg !17115
  br i1 %93, label %94, label %99, !dbg !17117

94:                                               ; preds = %73, %85
  call void @llvm.dbg.value(metadata i32 0, metadata !17016, metadata !DIExpression()), !dbg !17030
  %95 = add i32 %68, %26, !dbg !17118
  call void @llvm.dbg.value(metadata i32 %83, metadata !17016, metadata !DIExpression()), !dbg !17030
  call void @llvm.dbg.value(metadata i32 %26, metadata !17017, metadata !DIExpression()), !dbg !17030
  br label %96

96:                                               ; preds = %94, %55
  %97 = phi i32 [ %56, %55 ], [ %95, %94 ], !dbg !17119
  call void @llvm.dbg.value(metadata i32 0, metadata !17016, metadata !DIExpression()), !dbg !17030
  call void @llvm.dbg.value(metadata i32 %97, metadata !17017, metadata !DIExpression()), !dbg !17030
  %98 = icmp ult i32 %97, %3, !dbg !17047
  br i1 %98, label %25, label %99, !dbg !17048, !llvm.loop !17120

99:                                               ; preds = %96, %73, %85, %46, %17
  %100 = phi i32 [ 0, %17 ], [ 5, %46 ], [ 5, %85 ], [ 5, %73 ], [ 0, %96 ]
  call void @release_FDM_lock() #23, !dbg !17122
  br label %101, !dbg !17123

101:                                              ; preds = %99, %9, %4
  %102 = phi i32 [ 2, %4 ], [ 3, %9 ], [ %100, %99 ], !dbg !17030
  ret i32 %102, !dbg !17123
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @eraseRawDiskBlock(%struct.NOR_FLASH_DISK_Data* noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !17124 {
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* %0, metadata !17128, metadata !DIExpression()), !dbg !17132
  call void @llvm.dbg.value(metadata i32 %1, metadata !17129, metadata !DIExpression()), !dbg !17132
  %3 = and i32 %1, 16777215, !dbg !17133
  call void @llvm.dbg.value(metadata i32 %3, metadata !17131, metadata !DIExpression()), !dbg !17132
  %4 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 4, !dbg !17134
  %5 = load i8, i8* %4, align 4, !dbg !17134, !range !4202
  %6 = icmp eq i8 %5, 0, !dbg !17134
  br i1 %6, label %7, label %8, !dbg !17136

7:                                                ; preds = %2
  tail call fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef nonnull %0) #23, !dbg !17137
  br label %8, !dbg !17139

8:                                                ; preds = %7, %2
  %9 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 3, i32 0, !dbg !17140
  %10 = load i32, i32* %9, align 4, !dbg !17140
  %11 = icmp ult i32 %3, %10, !dbg !17142
  br i1 %11, label %12, label %27, !dbg !17143

12:                                               ; preds = %8
  tail call void @retrieve_FDM_lock() #23, !dbg !17144
  %13 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 1, !dbg !17145
  %14 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %13, align 4, !dbg !17145
  %15 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %14, i32 0, i32 2, !dbg !17146
  %16 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %15, align 4, !dbg !17146
  %17 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 2, !dbg !17147
  %18 = load i8*, i8** %17, align 4, !dbg !17147
  %19 = tail call i8* %16(i8* noundef %18, i32 noundef %3, i32 noundef 0) #22, !dbg !17148
  %20 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %13, align 4, !dbg !17149
  %21 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %20, i32 0, i32 3, !dbg !17150
  %22 = load i32 (i8*, i32)*, i32 (i8*, i32)** %21, align 4, !dbg !17150
  %23 = load i8*, i8** %17, align 4, !dbg !17151
  %24 = tail call i32 %22(i8* noundef %23, i32 noundef %1) #22, !dbg !17152
  call void @llvm.dbg.value(metadata i32 %24, metadata !17130, metadata !DIExpression()), !dbg !17132
  tail call void @release_FDM_lock() #23, !dbg !17153
  %25 = icmp eq i32 %24, 0, !dbg !17154
  %26 = select i1 %25, i32 0, i32 6, !dbg !17132
  br label %27, !dbg !17132

27:                                               ; preds = %12, %8
  %28 = phi i32 [ 2, %8 ], [ %26, %12 ], !dbg !17132
  ret i32 %28, !dbg !17156
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_init() local_unnamed_addr #0 !dbg !17157 {
  %1 = load i1, i1* @flash_init_status, align 4, !dbg !17158
  br i1 %1, label %3, label %2, !dbg !17160

2:                                                ; preds = %0
  tail call void @Custom_NOR_Init() #22, !dbg !17161
  tail call fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData) #23, !dbg !17163
  store i1 true, i1* @flash_init_status, align 4, !dbg !17164
  br label %3, !dbg !17165

3:                                                ; preds = %2, %0
  ret i32 0, !dbg !17166
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @get_NOR_init_status() local_unnamed_addr #4 section ".ram_code" !dbg !17167 {
  %1 = load i1, i1* @flash_init_status, align 4, !dbg !17168
  %2 = select i1 %1, i32 0, i32 -5, !dbg !17168
  ret i32 %2, !dbg !17169
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_ReadPhysicalPage(i32 noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !17170 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17174, metadata !DIExpression()), !dbg !17181
  call void @llvm.dbg.value(metadata i32 %1, metadata !17175, metadata !DIExpression()), !dbg !17181
  call void @llvm.dbg.value(metadata i8* %2, metadata !17176, metadata !DIExpression()), !dbg !17181
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !17177, metadata !DIExpression()), !dbg !17181
  %4 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !17182
  call void @llvm.dbg.value(metadata i8* %4, metadata !17178, metadata !DIExpression()), !dbg !17181
  %5 = tail call i8* @BlockAddress(i8* noundef %4, i32 noundef %0) #22, !dbg !17183
  %6 = ptrtoint i8* %5 to i32, !dbg !17184
  %7 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !17185
  %8 = bitcast i8* %7 to i8**, !dbg !17185
  %9 = load i8*, i8** %8, align 4, !dbg !17185
  %10 = ptrtoint i8* %9 to i32, !dbg !17186
  %11 = shl i32 %1, 9, !dbg !17187
  %12 = add i32 %11, %6, !dbg !17188
  %13 = sub i32 %12, %10, !dbg !17189
  call void @llvm.dbg.value(metadata i32 %13, metadata !17180, metadata !DIExpression()), !dbg !17181
  %14 = tail call i32 @readRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %13, i8* noundef %2, i32 noundef 512) #23, !dbg !17190
  call void @llvm.dbg.value(metadata i32 %14, metadata !17179, metadata !DIExpression()), !dbg !17181
  %15 = icmp eq i32 %14, 0, !dbg !17191
  %16 = select i1 %15, i32 0, i32 -13, !dbg !17181
  ret i32 %16, !dbg !17193
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_ProgramPhysicalPage(i32 noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !17194 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17196, metadata !DIExpression()), !dbg !17203
  call void @llvm.dbg.value(metadata i32 %1, metadata !17197, metadata !DIExpression()), !dbg !17203
  call void @llvm.dbg.value(metadata i8* %2, metadata !17198, metadata !DIExpression()), !dbg !17203
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !17199, metadata !DIExpression()), !dbg !17203
  %4 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !17204
  call void @llvm.dbg.value(metadata i8* %4, metadata !17200, metadata !DIExpression()), !dbg !17203
  %5 = tail call i8* @BlockAddress(i8* noundef %4, i32 noundef %0) #22, !dbg !17205
  %6 = ptrtoint i8* %5 to i32, !dbg !17206
  %7 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !17207
  %8 = bitcast i8* %7 to i8**, !dbg !17207
  %9 = load i8*, i8** %8, align 4, !dbg !17207
  %10 = ptrtoint i8* %9 to i32, !dbg !17208
  %11 = shl i32 %1, 9, !dbg !17209
  %12 = add i32 %11, %6, !dbg !17210
  %13 = sub i32 %12, %10, !dbg !17211
  call void @llvm.dbg.value(metadata i32 %13, metadata !17202, metadata !DIExpression()), !dbg !17203
  %14 = tail call i32 @writeRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %13, i8* noundef %2, i32 noundef 512) #23, !dbg !17212
  call void @llvm.dbg.value(metadata i32 %14, metadata !17201, metadata !DIExpression()), !dbg !17203
  %15 = icmp eq i32 %14, 0, !dbg !17213
  %16 = select i1 %15, i32 0, i32 -14, !dbg !17203
  ret i32 %16, !dbg !17215
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_ErasePhysicalBlock(i32 noundef %0) local_unnamed_addr #0 !dbg !17216 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17220, metadata !DIExpression()), !dbg !17222
  %2 = tail call i32 @eraseRawDiskBlock(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %0) #23, !dbg !17223
  call void @llvm.dbg.value(metadata i32 %2, metadata !17221, metadata !DIExpression()), !dbg !17222
  %3 = icmp eq i32 %2, 0, !dbg !17224
  %4 = select i1 %3, i32 0, i32 -15, !dbg !17222
  ret i32 %4, !dbg !17226
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_BlockSize(i32 noundef %0) local_unnamed_addr #0 !dbg !17227 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17229, metadata !DIExpression()), !dbg !17232
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !17230, metadata !DIExpression()), !dbg !17232
  %2 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !17233
  call void @llvm.dbg.value(metadata i8* %2, metadata !17231, metadata !DIExpression()), !dbg !17232
  %3 = tail call i32 @BlockSize(i8* noundef %2, i32 noundef %0) #22, !dbg !17234
  ret i32 %3, !dbg !17235
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_BlockIndex(i32 noundef %0) local_unnamed_addr #0 !dbg !17236 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17238, metadata !DIExpression()), !dbg !17241
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !17239, metadata !DIExpression()), !dbg !17241
  %2 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !17242
  call void @llvm.dbg.value(metadata i8* %2, metadata !17240, metadata !DIExpression()), !dbg !17241
  %3 = tail call i32 @BlockIndex(i8* noundef %2, i32 noundef %0) #22, !dbg !17243
  ret i32 %3, !dbg !17244
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_Addr2BlockIndexOffset(i32 noundef %0, i32* nocapture noundef writeonly %1, i32* nocapture noundef writeonly %2) local_unnamed_addr #0 !dbg !17245 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17249, metadata !DIExpression()), !dbg !17254
  call void @llvm.dbg.value(metadata i32* %1, metadata !17250, metadata !DIExpression()), !dbg !17254
  call void @llvm.dbg.value(metadata i32* %2, metadata !17251, metadata !DIExpression()), !dbg !17254
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !17252, metadata !DIExpression()), !dbg !17254
  %4 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !17255
  call void @llvm.dbg.value(metadata i8* %4, metadata !17253, metadata !DIExpression()), !dbg !17254
  %5 = tail call i32 @BlockIndex(i8* noundef %4, i32 noundef %0) #22, !dbg !17256
  store i32 %5, i32* %1, align 4, !dbg !17257
  %6 = icmp eq i32 %5, -1, !dbg !17258
  br i1 %6, label %10, label %7, !dbg !17260

7:                                                ; preds = %3
  %8 = tail call i32 @BlockSize(i8* noundef %4, i32 noundef %5) #22, !dbg !17261
  %9 = urem i32 %0, %8, !dbg !17262
  store i32 %9, i32* %2, align 4, !dbg !17263
  br label %10, !dbg !17264

10:                                               ; preds = %3, %7
  %11 = phi i32 [ 0, %7 ], [ -1, %3 ], !dbg !17254
  ret i32 %11, !dbg !17265
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_BlockIndexOffset2Addr(i32 noundef %0, i32 noundef %1, i32* nocapture noundef writeonly %2) local_unnamed_addr #0 !dbg !17266 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17270, metadata !DIExpression()), !dbg !17275
  call void @llvm.dbg.value(metadata i32 %1, metadata !17271, metadata !DIExpression()), !dbg !17275
  call void @llvm.dbg.value(metadata i32* %2, metadata !17272, metadata !DIExpression()), !dbg !17275
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !17273, metadata !DIExpression()), !dbg !17275
  %4 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !17276
  call void @llvm.dbg.value(metadata i8* %4, metadata !17274, metadata !DIExpression()), !dbg !17275
  %5 = tail call i8* @BlockAddress(i8* noundef %4, i32 noundef %0) #22, !dbg !17277
  %6 = ptrtoint i8* %5 to i32, !dbg !17278
  %7 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !17279
  %8 = bitcast i8* %7 to i8**, !dbg !17279
  %9 = load i8*, i8** %8, align 4, !dbg !17279
  %10 = ptrtoint i8* %9 to i32, !dbg !17280
  %11 = add i32 %6, %1, !dbg !17281
  %12 = sub i32 %11, %10, !dbg !17282
  store i32 %12, i32* %2, align 4, !dbg !17283
  ret i32 0, !dbg !17284
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_rawdisk_error_code(i32 noundef %0) local_unnamed_addr #0 !dbg !17285 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17289, metadata !DIExpression()), !dbg !17290
  %2 = add i32 %0, 2, !dbg !17291
  %3 = icmp ult i32 %2, 9, !dbg !17291
  br i1 %3, label %5, label %4, !dbg !17291

4:                                                ; preds = %5, %1
  tail call void @Flash_ReturnReady() #22, !dbg !17292
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.281, i32 0, i32 0), i32 noundef 558, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.get_rawdisk_error_code, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.282, i32 0, i32 0)) #25, !dbg !17292
  unreachable, !dbg !17292

5:                                                ; preds = %1
  %6 = trunc i32 %2 to i16, !dbg !17291
  %7 = lshr i16 433, %6, !dbg !17291
  %8 = and i16 %7, 1, !dbg !17291
  %9 = icmp eq i16 %8, 0, !dbg !17291
  br i1 %9, label %4, label %10, !dbg !17291

10:                                               ; preds = %5
  %11 = getelementptr inbounds [9 x i32], [9 x i32]* @switch.table.get_rawdisk_error_code, i32 0, i32 %2, !dbg !17291
  %12 = load i32, i32* %11, align 4, !dbg !17291
  ret i32 %12, !dbg !17302
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_block_size_from_address(i32 noundef %0) local_unnamed_addr #0 !dbg !17303 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17308, metadata !DIExpression()), !dbg !17311
  %2 = tail call i32 @NOR_BlockIndex(i32 noundef %0) #23, !dbg !17312
  call void @llvm.dbg.value(metadata i32 %2, metadata !17310, metadata !DIExpression()), !dbg !17311
  %3 = icmp eq i32 %2, -1, !dbg !17313
  br i1 %3, label %4, label %5, !dbg !17315

4:                                                ; preds = %1
  tail call void @Flash_ReturnReady() #22, !dbg !17316
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.281, i32 0, i32 0), i32 noundef 568, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.get_block_size_from_address, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.282, i32 0, i32 0)) #25, !dbg !17316
  unreachable, !dbg !17316

5:                                                ; preds = %1
  %6 = tail call i32 @NOR_BlockSize(i32 noundef %2) #23, !dbg !17321
  call void @llvm.dbg.value(metadata i32 %6, metadata !17309, metadata !DIExpression()), !dbg !17311
  switch i32 %6, label %9 [
    i32 4096, label %10
    i32 32768, label %7
    i32 65536, label %8
  ], !dbg !17322

7:                                                ; preds = %5
  br label %10, !dbg !17323

8:                                                ; preds = %5
  br label %10, !dbg !17327

9:                                                ; preds = %5
  tail call void @Flash_ReturnReady() #22, !dbg !17330
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.281, i32 0, i32 0), i32 noundef 578, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.get_block_size_from_address, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.282, i32 0, i32 0)) #25, !dbg !17330
  unreachable, !dbg !17330

10:                                               ; preds = %5, %8, %7
  %11 = phi i32 [ 1, %7 ], [ 2, %8 ], [ 0, %5 ], !dbg !17335
  ret i32 %11, !dbg !17336
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_init() local_unnamed_addr #0 !dbg !17337 {
  %1 = tail call i32 @NOR_init() #23, !dbg !17338
  ret i32 0, !dbg !17339
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @hal_flash_deinit() local_unnamed_addr #10 !dbg !17340 {
  ret i32 0, !dbg !17341
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_erase(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !17342 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17346, metadata !DIExpression()), !dbg !17351
  call void @llvm.dbg.value(metadata i32 %1, metadata !17347, metadata !DIExpression()), !dbg !17351
  call void @llvm.dbg.value(metadata i32 0, metadata !17350, metadata !DIExpression()), !dbg !17351
  switch i32 %1, label %22 [
    i32 0, label %3
    i32 1, label %6
    i32 2, label %9
  ], !dbg !17352

3:                                                ; preds = %2
  %4 = and i32 %0, 4095, !dbg !17353
  %5 = icmp eq i32 %4, 0, !dbg !17357
  br i1 %5, label %12, label %22, !dbg !17358

6:                                                ; preds = %2
  %7 = and i32 %0, 32767, !dbg !17359
  %8 = icmp eq i32 %7, 0, !dbg !17363
  br i1 %8, label %12, label %22, !dbg !17364

9:                                                ; preds = %2
  %10 = and i32 %0, 65535, !dbg !17365
  %11 = icmp eq i32 %10, 0, !dbg !17369
  br i1 %11, label %12, label %22, !dbg !17370

12:                                               ; preds = %9, %6, %3
  %13 = phi i32 [ -100663296, %3 ], [ -83886080, %6 ], [ -67108864, %9 ], !dbg !17371
  call void @llvm.dbg.value(metadata i32 %13, metadata !17350, metadata !DIExpression()), !dbg !17351
  %14 = tail call i32 @NOR_BlockIndex(i32 noundef %0) #23, !dbg !17372
  call void @llvm.dbg.value(metadata i32 %14, metadata !17349, metadata !DIExpression()), !dbg !17351
  %15 = icmp eq i32 %14, -1, !dbg !17373
  br i1 %15, label %22, label %16, !dbg !17375

16:                                               ; preds = %12
  %17 = or i32 %14, %13, !dbg !17376
  call void @llvm.dbg.value(metadata i32 %17, metadata !17349, metadata !DIExpression()), !dbg !17351
  %18 = tail call i32 @eraseRawDiskBlock(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %17) #23, !dbg !17377
  call void @llvm.dbg.value(metadata i32 %18, metadata !17348, metadata !DIExpression()), !dbg !17351
  %19 = icmp eq i32 %18, 0, !dbg !17378
  br i1 %19, label %22, label %20, !dbg !17380

20:                                               ; preds = %16
  %21 = tail call i32 @get_rawdisk_error_code(i32 noundef %18) #23, !dbg !17381
  br label %22, !dbg !17383

22:                                               ; preds = %16, %12, %2, %9, %6, %3, %20
  %23 = phi i32 [ %21, %20 ], [ -3, %3 ], [ -3, %6 ], [ -3, %9 ], [ -3, %2 ], [ -3, %12 ], [ 0, %16 ], !dbg !17351
  ret i32 %23, !dbg !17384
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_read(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !17385 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17389, metadata !DIExpression()), !dbg !17394
  call void @llvm.dbg.value(metadata i8* %1, metadata !17390, metadata !DIExpression()), !dbg !17394
  call void @llvm.dbg.value(metadata i32 %2, metadata !17391, metadata !DIExpression()), !dbg !17394
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !17392, metadata !DIExpression()), !dbg !17394
  %4 = tail call i32 @readRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %0, i8* noundef %1, i32 noundef %2) #23, !dbg !17395
  call void @llvm.dbg.value(metadata i32 %4, metadata !17393, metadata !DIExpression()), !dbg !17394
  %5 = icmp eq i32 %4, 0, !dbg !17396
  br i1 %5, label %8, label %6, !dbg !17398

6:                                                ; preds = %3
  %7 = tail call i32 @get_rawdisk_error_code(i32 noundef %4) #23, !dbg !17399
  br label %8, !dbg !17401

8:                                                ; preds = %3, %6
  %9 = phi i32 [ %7, %6 ], [ 0, %3 ], !dbg !17394
  ret i32 %9, !dbg !17402
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_write(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !17403 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17407, metadata !DIExpression()), !dbg !17415
  call void @llvm.dbg.value(metadata i8* %1, metadata !17408, metadata !DIExpression()), !dbg !17415
  call void @llvm.dbg.value(metadata i32 %2, metadata !17409, metadata !DIExpression()), !dbg !17415
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !17410, metadata !DIExpression()), !dbg !17415
  %4 = tail call i32 @writeRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %0, i8* noundef %1, i32 noundef %2) #23, !dbg !17416
  call void @llvm.dbg.value(metadata i32 %4, metadata !17411, metadata !DIExpression()), !dbg !17415
  %5 = icmp eq i32 %4, 0, !dbg !17417
  br i1 %5, label %8, label %6, !dbg !17419

6:                                                ; preds = %3
  %7 = tail call i32 @get_rawdisk_error_code(i32 noundef %4) #23, !dbg !17420
  br label %21, !dbg !17422

8:                                                ; preds = %3
  %9 = tail call zeroext i1 @hal_cache_is_cacheable(i32 noundef %0) #22, !dbg !17423
  br i1 %9, label %10, label %21, !dbg !17424

10:                                               ; preds = %8
  %11 = and i32 %0, -32, !dbg !17425
  call void @llvm.dbg.value(metadata i32 %11, metadata !17412, metadata !DIExpression()), !dbg !17427
  %12 = add i32 %0, 32
  %13 = add i32 %12, %2
  %14 = and i32 %13, -32
  call void @llvm.dbg.value(metadata i32 %11, metadata !17412, metadata !DIExpression()), !dbg !17427
  %15 = icmp ugt i32 %11, %14, !dbg !17428
  br i1 %15, label %21, label %16, !dbg !17430

16:                                               ; preds = %10, %16
  %17 = phi i32 [ %19, %16 ], [ %11, %10 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !17412, metadata !DIExpression()), !dbg !17427
  %18 = tail call i32 @hal_cache_invalidate_one_cache_line(i32 noundef %17) #22, !dbg !17431
  %19 = add i32 %17, 32, !dbg !17433
  call void @llvm.dbg.value(metadata i32 %19, metadata !17412, metadata !DIExpression()), !dbg !17427
  %20 = icmp ugt i32 %19, %14, !dbg !17428
  br i1 %20, label %21, label %16, !dbg !17430, !llvm.loop !17434

21:                                               ; preds = %16, %10, %8, %6
  %22 = phi i32 [ %7, %6 ], [ 0, %8 ], [ 0, %10 ], [ 0, %16 ], !dbg !17415
  ret i32 %22, !dbg !17436
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @BlockAddress(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #12 section ".ram_code" !dbg !17437 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !17441, metadata !DIExpression()), !dbg !17447
  call void @llvm.dbg.value(metadata i32 %1, metadata !17442, metadata !DIExpression()), !dbg !17447
  call void @llvm.dbg.value(metadata i8* %0, metadata !17443, metadata !DIExpression()), !dbg !17447
  call void @llvm.dbg.value(metadata i32 0, metadata !17444, metadata !DIExpression()), !dbg !17447
  call void @llvm.dbg.value(metadata i32 0, metadata !17445, metadata !DIExpression()), !dbg !17447
  call void @llvm.dbg.value(metadata i32 0, metadata !17446, metadata !DIExpression()), !dbg !17447
  %3 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !17448
  %4 = bitcast i8* %3 to %struct.hal_cache_region_config_t**, !dbg !17448
  %5 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %4, align 4, !dbg !17448
  %6 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 0, i32 1, !dbg !17449
  %7 = load i32, i32* %6, align 4, !dbg !17449
  call void @llvm.dbg.value(metadata i32 %7, metadata !17446, metadata !DIExpression()), !dbg !17447
  call void @llvm.dbg.value(metadata i32 0, metadata !17445, metadata !DIExpression()), !dbg !17447
  call void @llvm.dbg.value(metadata i32 0, metadata !17444, metadata !DIExpression()), !dbg !17447
  %8 = icmp ugt i32 %7, %1, !dbg !17450
  br i1 %8, label %23, label %9, !dbg !17451

9:                                                ; preds = %2, %9
  %10 = phi i32 [ %20, %9 ], [ %7, %2 ], !dbg !17452
  %11 = phi i32 [ %21, %9 ], [ %7, %2 ]
  %12 = phi i32 [ %18, %9 ], [ 0, %2 ]
  %13 = phi i32 [ %17, %9 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !17446, metadata !DIExpression()), !dbg !17447
  call void @llvm.dbg.value(metadata i32 %12, metadata !17445, metadata !DIExpression()), !dbg !17447
  call void @llvm.dbg.value(metadata i32 %13, metadata !17444, metadata !DIExpression()), !dbg !17447
  %14 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %12, i32 0, !dbg !17454
  %15 = load i32, i32* %14, align 4, !dbg !17454
  %16 = mul i32 %15, %10, !dbg !17455
  %17 = add i32 %16, %13, !dbg !17456
  call void @llvm.dbg.value(metadata i32 %17, metadata !17444, metadata !DIExpression()), !dbg !17447
  %18 = add i32 %12, 1, !dbg !17457
  call void @llvm.dbg.value(metadata i32 %18, metadata !17445, metadata !DIExpression()), !dbg !17447
  %19 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %18, i32 1, !dbg !17458
  %20 = load i32, i32* %19, align 4, !dbg !17458
  %21 = add i32 %20, %11, !dbg !17459
  call void @llvm.dbg.value(metadata i32 %21, metadata !17446, metadata !DIExpression()), !dbg !17447
  %22 = icmp ugt i32 %21, %1, !dbg !17450
  br i1 %22, label %23, label %9, !dbg !17451, !llvm.loop !17460

23:                                               ; preds = %9, %2
  %24 = phi i32 [ %7, %2 ], [ %20, %9 ], !dbg !17462
  %25 = phi i32 [ 0, %2 ], [ %17, %9 ], !dbg !17447
  %26 = phi i32 [ 0, %2 ], [ %18, %9 ], !dbg !17447
  %27 = phi i32 [ %7, %2 ], [ %21, %9 ], !dbg !17447
  call void @llvm.dbg.value(metadata i8* %0, metadata !17443, metadata !DIExpression()), !dbg !17447
  %28 = sub i32 %1, %27, !dbg !17463
  %29 = add i32 %28, %24, !dbg !17464
  %30 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %26, i32 0, !dbg !17465
  %31 = load i32, i32* %30, align 4, !dbg !17465
  %32 = mul i32 %29, %31, !dbg !17466
  %33 = add i32 %32, %25, !dbg !17467
  call void @llvm.dbg.value(metadata i32 %33, metadata !17444, metadata !DIExpression()), !dbg !17447
  %34 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !17468
  %35 = bitcast i8* %34 to i8**, !dbg !17468
  %36 = load i8*, i8** %35, align 4, !dbg !17468
  %37 = getelementptr inbounds i8, i8* %36, i32 %33, !dbg !17469
  ret i8* %37, !dbg !17470
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @MapWindow(i8* nocapture noundef %0, i32 noundef %1, i32 noundef %2) #0 section ".ram_code" !dbg !17471 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !17473, metadata !DIExpression()), !dbg !17477
  call void @llvm.dbg.value(metadata i32 %1, metadata !17474, metadata !DIExpression()), !dbg !17477
  call void @llvm.dbg.value(metadata i32 %2, metadata !17475, metadata !DIExpression()), !dbg !17477
  call void @llvm.dbg.value(metadata i8* %0, metadata !17476, metadata !DIExpression()), !dbg !17477
  %4 = icmp eq i32 %2, 0, !dbg !17478
  br i1 %4, label %6, label %5, !dbg !17481

5:                                                ; preds = %3
  tail call void @Flash_ReturnReady() #22, !dbg !17482
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.297, i32 0, i32 0), i32 noundef 185, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @__func__.MapWindow, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.298, i32 0, i32 0)) #25, !dbg !17482
  unreachable, !dbg !17482

6:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %0, metadata !17476, metadata !DIExpression()), !dbg !17477
  %7 = tail call fastcc i32 @LookupAddress(i8* noundef %0, i32 noundef %1) #23, !dbg !17484
  %8 = inttoptr i32 %7 to i8*, !dbg !17485
  %9 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !17486
  %10 = bitcast i8* %9 to i8**, !dbg !17486
  store i8* %8, i8** %10, align 4, !dbg !17487
  ret i8* %8, !dbg !17488
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @LookupAddress(i8* nocapture noundef %0, i32 noundef %1) unnamed_addr #13 section ".ram_code" !dbg !3139 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3143, metadata !DIExpression()), !dbg !17489
  call void @llvm.dbg.value(metadata i32 %1, metadata !3144, metadata !DIExpression()), !dbg !17489
  call void @llvm.dbg.value(metadata i8* %0, metadata !3145, metadata !DIExpression()), !dbg !17489
  call void @llvm.dbg.value(metadata i32 0, metadata !3190, metadata !DIExpression()), !dbg !17489
  %3 = getelementptr inbounds i8, i8* %0, i32 44, !dbg !17490
  %4 = bitcast i8* %3 to [8 x [2 x %struct.hal_cache_region_config_t]]*, !dbg !17490
  %5 = and i32 %1, 7, !dbg !17492
  %6 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 0, i32 0, !dbg !17493
  %7 = load i32, i32* %6, align 4, !dbg !17493
  %8 = icmp eq i32 %7, -1, !dbg !17494
  br i1 %8, label %62, label %9, !dbg !17495

9:                                                ; preds = %2
  %10 = icmp eq i32 %7, %1, !dbg !17496
  br i1 %10, label %54, label %11, !dbg !17499

11:                                               ; preds = %9
  %12 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 1, i32 0, !dbg !17500
  %13 = load i32, i32* %12, align 4, !dbg !17500
  %14 = icmp eq i32 %13, -1, !dbg !17503
  br i1 %14, label %44, label %15, !dbg !17504

15:                                               ; preds = %11
  %16 = icmp eq i32 %13, %1, !dbg !17505
  br i1 %16, label %35, label %17, !dbg !17508

17:                                               ; preds = %15
  %18 = load i32, i32* @LookupAddress.look_up_miss, align 4, !dbg !17509
  %19 = add i32 %18, 1, !dbg !17509
  store i32 %19, i32* @LookupAddress.look_up_miss, align 4, !dbg !17509
  %20 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !17511
  %21 = shl nuw nsw i32 1, %5, !dbg !17513
  %22 = and i32 %20, %21, !dbg !17514
  %23 = icmp eq i32 %22, 0, !dbg !17514
  br i1 %23, label %30, label %24, !dbg !17515

24:                                               ; preds = %17
  store i32 %1, i32* %12, align 4, !dbg !17516
  %25 = tail call i8* @BlockAddress(i8* noundef nonnull %0, i32 noundef %1) #23, !dbg !17518
  %26 = ptrtoint i8* %25 to i32, !dbg !17519
  %27 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 1, i32 1, !dbg !17520
  store i32 %26, i32* %27, align 4, !dbg !17521
  call void @llvm.dbg.value(metadata i32 %26, metadata !3190, metadata !DIExpression()), !dbg !17489
  %28 = xor i32 %21, -1, !dbg !17522
  %29 = and i32 %20, %28, !dbg !17523
  br label %71, !dbg !17524

30:                                               ; preds = %17
  store i32 %1, i32* %6, align 4, !dbg !17525
  %31 = tail call i8* @BlockAddress(i8* noundef nonnull %0, i32 noundef %1) #23, !dbg !17527
  %32 = ptrtoint i8* %31 to i32, !dbg !17528
  %33 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 0, i32 1, !dbg !17529
  store i32 %32, i32* %33, align 4, !dbg !17530
  call void @llvm.dbg.value(metadata i32 %32, metadata !3190, metadata !DIExpression()), !dbg !17489
  %34 = or i32 %20, %21, !dbg !17531
  br label %71

35:                                               ; preds = %15
  %36 = load i32, i32* @LookupAddress.look_up_hit, align 4, !dbg !17532
  %37 = add i32 %36, 1, !dbg !17532
  store i32 %37, i32* @LookupAddress.look_up_hit, align 4, !dbg !17532
  %38 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 1, i32 1, !dbg !17534
  %39 = load i32, i32* %38, align 4, !dbg !17534
  call void @llvm.dbg.value(metadata i32 %39, metadata !3190, metadata !DIExpression()), !dbg !17489
  %40 = shl nuw nsw i32 1, %5, !dbg !17535
  %41 = xor i32 %40, -1, !dbg !17536
  %42 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !17537
  %43 = and i32 %42, %41, !dbg !17537
  br label %71

44:                                               ; preds = %11
  %45 = load i32, i32* @LookupAddress.look_up_miss, align 4, !dbg !17538
  %46 = add i32 %45, 1, !dbg !17538
  store i32 %46, i32* @LookupAddress.look_up_miss, align 4, !dbg !17538
  store i32 %1, i32* %12, align 4, !dbg !17540
  %47 = tail call i8* @BlockAddress(i8* noundef nonnull %0, i32 noundef %1) #23, !dbg !17541
  %48 = ptrtoint i8* %47 to i32, !dbg !17542
  %49 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 1, i32 1, !dbg !17543
  store i32 %48, i32* %49, align 4, !dbg !17544
  call void @llvm.dbg.value(metadata i32 %48, metadata !3190, metadata !DIExpression()), !dbg !17489
  %50 = shl nuw nsw i32 1, %5, !dbg !17545
  %51 = xor i32 %50, -1, !dbg !17546
  %52 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !17547
  %53 = and i32 %52, %51, !dbg !17547
  br label %71

54:                                               ; preds = %9
  %55 = load i32, i32* @LookupAddress.look_up_hit, align 4, !dbg !17548
  %56 = add i32 %55, 1, !dbg !17548
  store i32 %56, i32* @LookupAddress.look_up_hit, align 4, !dbg !17548
  %57 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 0, i32 1, !dbg !17550
  %58 = load i32, i32* %57, align 4, !dbg !17550
  call void @llvm.dbg.value(metadata i32 %58, metadata !3190, metadata !DIExpression()), !dbg !17489
  %59 = shl nuw nsw i32 1, %5, !dbg !17551
  %60 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !17552
  %61 = or i32 %60, %59, !dbg !17552
  br label %71

62:                                               ; preds = %2
  %63 = load i32, i32* @LookupAddress.look_up_miss, align 4, !dbg !17553
  %64 = add i32 %63, 1, !dbg !17553
  store i32 %64, i32* @LookupAddress.look_up_miss, align 4, !dbg !17553
  store i32 %1, i32* %6, align 4, !dbg !17555
  %65 = tail call i8* @BlockAddress(i8* noundef nonnull %0, i32 noundef %1) #23, !dbg !17556
  %66 = ptrtoint i8* %65 to i32, !dbg !17557
  %67 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 0, i32 1, !dbg !17558
  store i32 %66, i32* %67, align 4, !dbg !17559
  call void @llvm.dbg.value(metadata i32 %66, metadata !3190, metadata !DIExpression()), !dbg !17489
  %68 = shl nuw nsw i32 1, %5, !dbg !17560
  %69 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !17561
  %70 = or i32 %69, %68, !dbg !17561
  br label %71

71:                                               ; preds = %54, %35, %30, %24, %44, %62
  %72 = phi i32 [ %61, %54 ], [ %43, %35 ], [ %34, %30 ], [ %29, %24 ], [ %53, %44 ], [ %70, %62 ]
  %73 = phi i32 [ %58, %54 ], [ %39, %35 ], [ %32, %30 ], [ %26, %24 ], [ %48, %44 ], [ %66, %62 ], !dbg !17562
  store i32 %72, i32* @LookupAddress.replaced, align 4, !dbg !17562
  call void @llvm.dbg.value(metadata i32 %73, metadata !3190, metadata !DIExpression()), !dbg !17489
  ret i32 %73, !dbg !17563
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @BlockSize(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #12 section ".ram_code" !dbg !17564 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !17566, metadata !DIExpression()), !dbg !17571
  call void @llvm.dbg.value(metadata i32 %1, metadata !17567, metadata !DIExpression()), !dbg !17571
  call void @llvm.dbg.value(metadata i8* %0, metadata !17568, metadata !DIExpression()), !dbg !17571
  call void @llvm.dbg.value(metadata i32 0, metadata !17569, metadata !DIExpression()), !dbg !17571
  call void @llvm.dbg.value(metadata i32 0, metadata !17570, metadata !DIExpression()), !dbg !17571
  %3 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !17572
  %4 = bitcast i8* %3 to %struct.hal_cache_region_config_t**, !dbg !17572
  %5 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %4, align 4, !dbg !17572
  %6 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 0, i32 1, !dbg !17573
  %7 = load i32, i32* %6, align 4, !dbg !17573
  call void @llvm.dbg.value(metadata i32 %7, metadata !17570, metadata !DIExpression()), !dbg !17571
  call void @llvm.dbg.value(metadata i32 0, metadata !17569, metadata !DIExpression()), !dbg !17571
  %8 = icmp ugt i32 %7, %1, !dbg !17574
  br i1 %8, label %17, label %9, !dbg !17575

9:                                                ; preds = %2, %9
  %10 = phi i32 [ %15, %9 ], [ %7, %2 ]
  %11 = phi i32 [ %12, %9 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !17570, metadata !DIExpression()), !dbg !17571
  call void @llvm.dbg.value(metadata i32 %11, metadata !17569, metadata !DIExpression()), !dbg !17571
  %12 = add i32 %11, 1, !dbg !17576
  call void @llvm.dbg.value(metadata i32 %12, metadata !17569, metadata !DIExpression()), !dbg !17571
  %13 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %12, i32 1, !dbg !17578
  %14 = load i32, i32* %13, align 4, !dbg !17578
  %15 = add i32 %14, %10, !dbg !17579
  call void @llvm.dbg.value(metadata i32 %15, metadata !17570, metadata !DIExpression()), !dbg !17571
  %16 = icmp ugt i32 %15, %1, !dbg !17574
  br i1 %16, label %17, label %9, !dbg !17575, !llvm.loop !17580

17:                                               ; preds = %9, %2
  %18 = phi i32 [ 0, %2 ], [ %12, %9 ], !dbg !17571
  %19 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %18, i32 0, !dbg !17582
  %20 = load i32, i32* %19, align 4, !dbg !17582
  ret i32 %20, !dbg !17583
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @BlockIndex(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #12 section ".ram_code" !dbg !17584 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !17586, metadata !DIExpression()), !dbg !17592
  call void @llvm.dbg.value(metadata i32 %1, metadata !17587, metadata !DIExpression()), !dbg !17592
  call void @llvm.dbg.value(metadata i8* %0, metadata !17588, metadata !DIExpression()), !dbg !17592
  call void @llvm.dbg.value(metadata i32 0, metadata !17589, metadata !DIExpression()), !dbg !17592
  call void @llvm.dbg.value(metadata i32 0, metadata !17590, metadata !DIExpression()), !dbg !17592
  call void @llvm.dbg.value(metadata i32 0, metadata !17591, metadata !DIExpression()), !dbg !17592
  %3 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !17593
  %4 = bitcast i8* %3 to %struct.hal_cache_region_config_t**, !dbg !17593
  %5 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %4, align 4, !dbg !17593
  %6 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 0, i32 1, !dbg !17594
  %7 = load i32, i32* %6, align 4, !dbg !17594
  %8 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 0, i32 0, !dbg !17595
  %9 = load i32, i32* %8, align 4, !dbg !17595
  %10 = mul i32 %9, %7, !dbg !17596
  call void @llvm.dbg.value(metadata i32 %10, metadata !17590, metadata !DIExpression()), !dbg !17592
  call void @llvm.dbg.value(metadata i32 0, metadata !17591, metadata !DIExpression()), !dbg !17592
  call void @llvm.dbg.value(metadata i32 0, metadata !17589, metadata !DIExpression()), !dbg !17592
  call void @llvm.dbg.value(metadata i32 %1, metadata !17587, metadata !DIExpression()), !dbg !17592
  %11 = icmp ult i32 %10, %1, !dbg !17597
  br i1 %11, label %12, label %30, !dbg !17598

12:                                               ; preds = %2, %20
  %13 = phi i32 [ %25, %20 ], [ %7, %2 ]
  %14 = phi i32 [ %27, %20 ], [ %9, %2 ], !dbg !17599
  %15 = phi i32 [ %21, %20 ], [ 0, %2 ]
  %16 = phi i32 [ %28, %20 ], [ %10, %2 ]
  %17 = phi i32 [ %23, %20 ], [ 0, %2 ]
  %18 = phi i32 [ %22, %20 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !17591, metadata !DIExpression()), !dbg !17592
  call void @llvm.dbg.value(metadata i32 %16, metadata !17590, metadata !DIExpression()), !dbg !17592
  call void @llvm.dbg.value(metadata i32 %17, metadata !17589, metadata !DIExpression()), !dbg !17592
  call void @llvm.dbg.value(metadata i32 %18, metadata !17587, metadata !DIExpression()), !dbg !17592
  %19 = icmp eq i32 %14, 0, !dbg !17598
  br i1 %19, label %36, label %20, !dbg !17600

20:                                               ; preds = %12
  %21 = add i32 %13, %15, !dbg !17601
  call void @llvm.dbg.value(metadata i32 %21, metadata !17591, metadata !DIExpression()), !dbg !17592
  %22 = sub i32 %18, %16, !dbg !17603
  call void @llvm.dbg.value(metadata i32 %22, metadata !17587, metadata !DIExpression()), !dbg !17592
  %23 = add i32 %17, 1, !dbg !17604
  call void @llvm.dbg.value(metadata i32 %23, metadata !17589, metadata !DIExpression()), !dbg !17592
  %24 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %23, i32 1, !dbg !17605
  %25 = load i32, i32* %24, align 4, !dbg !17605
  %26 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %23, i32 0, !dbg !17606
  %27 = load i32, i32* %26, align 4, !dbg !17606
  %28 = mul i32 %27, %25, !dbg !17607
  call void @llvm.dbg.value(metadata i32 %28, metadata !17590, metadata !DIExpression()), !dbg !17592
  %29 = icmp ugt i32 %22, %28, !dbg !17597
  br i1 %29, label %12, label %30, !dbg !17598, !llvm.loop !17608

30:                                               ; preds = %20, %2
  %31 = phi i32 [ %9, %2 ], [ %27, %20 ], !dbg !17610
  %32 = phi i32 [ %1, %2 ], [ %22, %20 ]
  %33 = phi i32 [ 0, %2 ], [ %21, %20 ], !dbg !17592
  %34 = udiv i32 %32, %31, !dbg !17613
  %35 = add i32 %34, %33, !dbg !17614
  call void @llvm.dbg.value(metadata i32 %35, metadata !17591, metadata !DIExpression()), !dbg !17592
  br label %36, !dbg !17615

36:                                               ; preds = %12, %30
  %37 = phi i32 [ %35, %30 ], [ -1, %12 ], !dbg !17616
  call void @llvm.dbg.value(metadata i32 %37, metadata !17591, metadata !DIExpression()), !dbg !17592
  ret i32 %37, !dbg !17617
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_ROM_BASE() local_unnamed_addr #10 !dbg !17618 {
  ret i32 134217728, !dbg !17619
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_NOR_FLASH_BASE_ADDRESS() local_unnamed_addr #10 !dbg !17620 {
  ret i32 3932160, !dbg !17621
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_Dual_NOR_FLASH_SIZE() local_unnamed_addr #10 !dbg !17622 {
  ret i32 0, !dbg !17623
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_NOR_ALLOCATED_FAT_SPACE() local_unnamed_addr #10 !dbg !17624 {
  ret i32 262144, !dbg !17625
}

; Function Attrs: noinline nounwind optsize
define dso_local void @DelayAWhile_UST(i32 noundef %0) local_unnamed_addr #0 section ".ram_code" !dbg !17626 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17628, metadata !DIExpression()), !dbg !17630
  %2 = tail call i32 @hal_gpt_delay_us(i32 noundef %0) #22, !dbg !17631
  call void @llvm.dbg.value(metadata i32 %2, metadata !17629, metadata !DIExpression()), !dbg !17630
  %3 = icmp eq i32 %2, 0, !dbg !17632
  br i1 %3, label %5, label %4, !dbg !17634

4:                                                ; preds = %1
  tail call void @Flash_ReturnReady() #22, !dbg !17635
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.297, i32 0, i32 0), i32 noundef 279, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.DelayAWhile_UST, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.298, i32 0, i32 0)) #25, !dbg !17635
  unreachable, !dbg !17635

5:                                                ; preds = %1
  ret void, !dbg !17640
}

; Function Attrs: noinline nounwind optsize
define dso_local void @pmu_init_mt6385() local_unnamed_addr #0 !dbg !3197 {
  %1 = alloca %struct.anon, align 4
  %2 = bitcast %struct.anon* %1 to i8*, !dbg !17641
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #24, !dbg !17641
  call void @llvm.dbg.declare(metadata %struct.anon* %1, metadata !3392, metadata !DIExpression()), !dbg !17642
  %3 = load i1, i1* @pmu_init_mt6385.init, align 1, !dbg !17643
  br i1 %3, label %47, label %4, !dbg !17645

4:                                                ; preds = %0
  store i1 true, i1* @pmu_init_mt6385.init, align 1, !dbg !17646
  %5 = getelementptr inbounds %struct.anon, %struct.anon* %1, i32 0, i32 0, !dbg !17647
  store i32 2500, i32* %5, align 4, !dbg !17648
  %6 = call i32 @pmic_i2c_init(i32 noundef 0, %struct.anon* noundef nonnull %1) #22, !dbg !17649
  %7 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 25, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext 1) #22, !dbg !17650
  %8 = call zeroext i8 @pmu_get_register_value(i16 noundef zeroext 0, i16 noundef zeroext 255, i16 noundef zeroext 0) #22, !dbg !17651
  call void @llvm.dbg.value(metadata i8 %8, metadata !3390, metadata !DIExpression()), !dbg !17652
  %9 = call zeroext i8 @pmu_get_register_value(i16 noundef zeroext 1, i16 noundef zeroext 255, i16 noundef zeroext 0) #22, !dbg !17653
  call void @llvm.dbg.value(metadata i8 %9, metadata !3391, metadata !DIExpression()), !dbg !17652
  %10 = icmp eq i8 %8, 16, !dbg !17654
  %11 = icmp eq i8 %9, -123
  %12 = select i1 %10, i1 %11, i1 false, !dbg !17656
  br i1 %12, label %13, label %14, !dbg !17656

13:                                               ; preds = %4
  call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__FUNCTION__.pmu_init_mt6385, i32 0, i32 0), i32 noundef 111, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.305, i32 0, i32 0)) #22, !dbg !17657
  br label %18, !dbg !17659

14:                                               ; preds = %4
  %15 = icmp eq i8 %8, 17, !dbg !17661
  %16 = select i1 %15, i1 %11, i1 false, !dbg !17659
  br i1 %16, label %17, label %18, !dbg !17659

17:                                               ; preds = %14
  call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__FUNCTION__.pmu_init_mt6385, i32 0, i32 0), i32 noundef 114, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.306, i32 0, i32 0)) #22, !dbg !17662
  br label %18, !dbg !17664

18:                                               ; preds = %13, %17, %14
  %19 = phi i1 [ false, %13 ], [ true, %17 ], [ %15, %14 ]
  br i1 %10, label %20, label %30, !dbg !17665

20:                                               ; preds = %18
  %21 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 77, i16 noundef zeroext 1, i16 noundef zeroext 5, i16 noundef zeroext 0) #22, !dbg !17666
  %22 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 74, i16 noundef zeroext 1, i16 noundef zeroext 3, i16 noundef zeroext 1) #22, !dbg !17669
  %23 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 87, i16 noundef zeroext 1, i16 noundef zeroext 4, i16 noundef zeroext 0) #22, !dbg !17670
  %24 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 203, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext 0) #22, !dbg !17671
  %25 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 602, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 131) #22, !dbg !17672
  %26 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 611, i16 noundef zeroext 3, i16 noundef zeroext 0, i16 noundef zeroext 1) #22, !dbg !17673
  call void @pmu_set_vrc_key_mt6385(i32 noundef 0) #22, !dbg !17674
  %27 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 75, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext 1) #22, !dbg !17675
  %28 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 67, i16 noundef zeroext 3, i16 noundef zeroext 0, i16 noundef zeroext 2) #22, !dbg !17676
  call void @pmu_set_ovr_mode_mt6385(i32 noundef 0) #22, !dbg !17677
  %29 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 619, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 12) #22, !dbg !17678
  call void @pmu_init_power_mode([8 x i8]* noundef getelementptr inbounds ([10 x [8 x i8]], [10 x [8 x i8]]* @pmu_power_mode_init_setting_E1, i32 0, i32 0)) #23, !dbg !17679
  br label %30, !dbg !17680

30:                                               ; preds = %20, %18
  br i1 %19, label %31, label %44, !dbg !17681

31:                                               ; preds = %30
  %32 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 77, i16 noundef zeroext 1, i16 noundef zeroext 5, i16 noundef zeroext 1) #22, !dbg !17682
  %33 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 25, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext 1) #22, !dbg !17685
  %34 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 70, i16 noundef zeroext 1, i16 noundef zeroext 4, i16 noundef zeroext 1) #22, !dbg !17686
  %35 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 74, i16 noundef zeroext 1, i16 noundef zeroext 3, i16 noundef zeroext 1) #22, !dbg !17687
  %36 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 87, i16 noundef zeroext 1, i16 noundef zeroext 4, i16 noundef zeroext 0) #22, !dbg !17688
  %37 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 300, i16 noundef zeroext 7, i16 noundef zeroext 3, i16 noundef zeroext 1) #22, !dbg !17689
  %38 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 599, i16 noundef zeroext 1, i16 noundef zeroext 7, i16 noundef zeroext 0) #22, !dbg !17690
  %39 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 602, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 131) #22, !dbg !17691
  %40 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 603, i16 noundef zeroext 1, i16 noundef zeroext 7, i16 noundef zeroext 1) #22, !dbg !17692
  %41 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 611, i16 noundef zeroext 3, i16 noundef zeroext 0, i16 noundef zeroext 1) #22, !dbg !17693
  %42 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 619, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 12) #22, !dbg !17694
  call void @pmu_init_power_mode([8 x i8]* noundef getelementptr inbounds ([10 x [8 x i8]], [10 x [8 x i8]]* @pmu_power_mode_init_setting_E2, i32 0, i32 0)) #23, !dbg !17695
  call void @pmu_set_vrc_key_mt6385(i32 noundef 0) #22, !dbg !17696
  %43 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 75, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext 1) #22, !dbg !17697
  call void @pmu_set_ovr_mode_mt6385(i32 noundef 0) #22, !dbg !17698
  call void @pmu_set_vrc_key_mt6385(i32 noundef 1) #22, !dbg !17699
  br label %44, !dbg !17700

44:                                               ; preds = %31, %30
  %45 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 129, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext 0) #22, !dbg !17701
  %46 = call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 68, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 0) #22, !dbg !17702
  call void @pmu_auxadc_init() #22, !dbg !17703
  call void @pmu_eint_init() #23, !dbg !17704
  br label %47, !dbg !17705

47:                                               ; preds = %0, %44
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #24, !dbg !17705
  ret void, !dbg !17705
}

; Function Attrs: noinline nounwind optsize
define dso_local void @pmu_init_power_mode([8 x i8]* noundef readonly %0) local_unnamed_addr #0 !dbg !17706 {
  call void @llvm.dbg.value(metadata [8 x i8]* %0, metadata !17712, metadata !DIExpression()), !dbg !17714
  call void @llvm.dbg.value(metadata i32 0, metadata !17713, metadata !DIExpression()), !dbg !17714
  br label %2, !dbg !17715

2:                                                ; preds = %1, %2
  %3 = phi i32 [ 0, %1 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !17713, metadata !DIExpression()), !dbg !17714
  %4 = add nuw nsw i32 %3, 1, !dbg !17717
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 0, i32 %4, !dbg !17720
  %6 = load i8, i8* %5, align 1, !dbg !17720
  %7 = zext i8 %6 to i32, !dbg !17721
  tail call void @PMIC_VR_PSI_PMOD_CONFIG(i32 noundef 0, i32 noundef %4, i32 noundef %7) #22, !dbg !17722
  %8 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 1, i32 %4, !dbg !17723
  %9 = load i8, i8* %8, align 1, !dbg !17723
  %10 = zext i8 %9 to i32, !dbg !17724
  tail call void @PMIC_VR_PSI_PMOD_CONFIG(i32 noundef 1, i32 noundef %4, i32 noundef %10) #22, !dbg !17725
  %11 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 2, i32 %4, !dbg !17726
  %12 = load i8, i8* %11, align 1, !dbg !17726
  %13 = zext i8 %12 to i32, !dbg !17727
  tail call void @PMIC_VR_PSI_PMOD_CONFIG(i32 noundef 2, i32 noundef %4, i32 noundef %13) #22, !dbg !17728
  %14 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 3, i32 %4, !dbg !17729
  %15 = load i8, i8* %14, align 1, !dbg !17729
  %16 = zext i8 %15 to i32, !dbg !17730
  tail call void @PMIC_VR_PSI_PMOD_CONFIG(i32 noundef 3, i32 noundef %4, i32 noundef %16) #22, !dbg !17731
  %17 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 4, i32 %4, !dbg !17732
  %18 = load i8, i8* %17, align 1, !dbg !17732
  %19 = zext i8 %18 to i32, !dbg !17733
  tail call void @PMIC_VR_PSI_PMOD_CONFIG(i32 noundef 4, i32 noundef %4, i32 noundef %19) #22, !dbg !17734
  %20 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 5, i32 %4, !dbg !17735
  %21 = load i8, i8* %20, align 1, !dbg !17735
  %22 = zext i8 %21 to i32, !dbg !17736
  tail call void @PMIC_VR_PSI_PMOD_CONFIG(i32 noundef 5, i32 noundef %4, i32 noundef %22) #22, !dbg !17737
  %23 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 6, i32 %4, !dbg !17738
  %24 = load i8, i8* %23, align 1, !dbg !17738
  %25 = zext i8 %24 to i32, !dbg !17739
  tail call void @PMIC_VR_PSI_PMOD_CONFIG(i32 noundef 6, i32 noundef %4, i32 noundef %25) #22, !dbg !17740
  %26 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 7, i32 %4, !dbg !17741
  %27 = load i8, i8* %26, align 1, !dbg !17741
  %28 = zext i8 %27 to i32, !dbg !17742
  tail call void @PMIC_VR_PSI_PMOD_CONFIG(i32 noundef 7, i32 noundef %4, i32 noundef %28) #22, !dbg !17743
  %29 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 8, i32 %4, !dbg !17744
  %30 = load i8, i8* %29, align 1, !dbg !17744
  %31 = zext i8 %30 to i32, !dbg !17745
  tail call void @PMIC_VR_PSI_PMOD_CONFIG(i32 noundef 8, i32 noundef %4, i32 noundef %31) #22, !dbg !17746
  %32 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 9, i32 %4, !dbg !17747
  %33 = load i8, i8* %32, align 1, !dbg !17747
  %34 = zext i8 %33 to i32, !dbg !17748
  tail call void @PMIC_VR_PSI_PMOD_CONFIG(i32 noundef 9, i32 noundef %4, i32 noundef %34) #22, !dbg !17749
  call void @llvm.dbg.value(metadata i32 %4, metadata !17713, metadata !DIExpression()), !dbg !17714
  %35 = icmp eq i32 %4, 4, !dbg !17750
  br i1 %35, label %36, label %2, !dbg !17715, !llvm.loop !17751

36:                                               ; preds = %2
  tail call void @PMIC_VR_PSI_PMOD_CONFIG(i32 noundef 10, i32 noundef 1, i32 noundef 0) #22, !dbg !17753
  tail call void @PMIC_VR_PSI_PMOD_CONFIG(i32 noundef 11, i32 noundef 1, i32 noundef 0) #22, !dbg !17754
  call void @llvm.dbg.value(metadata i32 0, metadata !17713, metadata !DIExpression()), !dbg !17714
  %37 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 2, i32 5
  call void @llvm.dbg.value(metadata i32 0, metadata !17713, metadata !DIExpression()), !dbg !17714
  %38 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 3, i32 5
  %39 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 5, i32 5
  %40 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 6, i32 5
  %41 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 7, i32 5
  %42 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 8, i32 5
  %43 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 9, i32 5
  br label %44, !dbg !17755

44:                                               ; preds = %36, %44
  %45 = phi i1 [ true, %36 ], [ false, %44 ]
  %46 = phi i32 [ 0, %36 ], [ 1, %44 ]
  call void @llvm.dbg.value(metadata i32 %46, metadata !17713, metadata !DIExpression()), !dbg !17714
  %47 = add nuw nsw i32 %46, 3, !dbg !17757
  %48 = load i8, i8* %37, align 1, !dbg !17760
  %49 = zext i8 %48 to i32, !dbg !17761
  %50 = or i32 %46, 6, !dbg !17762
  %51 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 2, i32 %50, !dbg !17763
  %52 = load i8, i8* %51, align 1, !dbg !17763
  %53 = zext i8 %52 to i32, !dbg !17764
  tail call void @PMIC_VR_SLEEP_WKUP_CONFIG(i32 noundef 2, i32 noundef %47, i32 noundef %49, i32 noundef %53) #22, !dbg !17765
  %54 = load i8, i8* %38, align 1, !dbg !17766
  %55 = zext i8 %54 to i32, !dbg !17767
  %56 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 3, i32 %50, !dbg !17768
  %57 = load i8, i8* %56, align 1, !dbg !17768
  %58 = zext i8 %57 to i32, !dbg !17769
  tail call void @PMIC_VR_SLEEP_WKUP_CONFIG(i32 noundef 3, i32 noundef %47, i32 noundef %55, i32 noundef %58) #22, !dbg !17770
  %59 = load i8, i8* %39, align 1, !dbg !17771
  %60 = zext i8 %59 to i32, !dbg !17772
  %61 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 5, i32 %50, !dbg !17773
  %62 = load i8, i8* %61, align 1, !dbg !17773
  %63 = zext i8 %62 to i32, !dbg !17774
  tail call void @PMIC_VR_SLEEP_WKUP_CONFIG(i32 noundef 5, i32 noundef %47, i32 noundef %60, i32 noundef %63) #22, !dbg !17775
  %64 = load i8, i8* %40, align 1, !dbg !17776
  %65 = zext i8 %64 to i32, !dbg !17777
  %66 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 6, i32 %50, !dbg !17778
  %67 = load i8, i8* %66, align 1, !dbg !17778
  %68 = zext i8 %67 to i32, !dbg !17779
  tail call void @PMIC_VR_SLEEP_WKUP_CONFIG(i32 noundef 6, i32 noundef %47, i32 noundef %65, i32 noundef %68) #22, !dbg !17780
  %69 = load i8, i8* %41, align 1, !dbg !17781
  %70 = zext i8 %69 to i32, !dbg !17782
  %71 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 7, i32 %50, !dbg !17783
  %72 = load i8, i8* %71, align 1, !dbg !17783
  %73 = zext i8 %72 to i32, !dbg !17784
  tail call void @PMIC_VR_SLEEP_WKUP_CONFIG(i32 noundef 7, i32 noundef %47, i32 noundef %70, i32 noundef %73) #22, !dbg !17785
  %74 = load i8, i8* %42, align 1, !dbg !17786
  %75 = zext i8 %74 to i32, !dbg !17787
  %76 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 8, i32 %50, !dbg !17788
  %77 = load i8, i8* %76, align 1, !dbg !17788
  %78 = zext i8 %77 to i32, !dbg !17789
  tail call void @PMIC_VR_SLEEP_WKUP_CONFIG(i32 noundef 8, i32 noundef %47, i32 noundef %75, i32 noundef %78) #22, !dbg !17790
  %79 = load i8, i8* %43, align 1, !dbg !17791
  %80 = zext i8 %79 to i32, !dbg !17792
  %81 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 9, i32 %50, !dbg !17793
  %82 = load i8, i8* %81, align 1, !dbg !17793
  %83 = zext i8 %82 to i32, !dbg !17794
  tail call void @PMIC_VR_SLEEP_WKUP_CONFIG(i32 noundef 9, i32 noundef %47, i32 noundef %80, i32 noundef %83) #22, !dbg !17795
  call void @llvm.dbg.value(metadata i32 %46, metadata !17713, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !17714
  br i1 %45, label %44, label %84, !dbg !17755, !llvm.loop !17796

84:                                               ; preds = %44
  tail call void @PMIC_VR_SLEEP_WKUP_CONFIG(i32 noundef 12, i32 noundef 3, i32 noundef 1, i32 noundef 1) #22, !dbg !17798
  tail call void @PMIC_VR_SLEEP_WKUP_CONFIG(i32 noundef 13, i32 noundef 3, i32 noundef 1, i32 noundef 1) #22, !dbg !17799
  tail call void @PMIC_VR_SLEEP_WKUP_CONFIG(i32 noundef 12, i32 noundef 4, i32 noundef 1, i32 noundef 1) #22, !dbg !17800
  tail call void @PMIC_VR_SLEEP_WKUP_CONFIG(i32 noundef 13, i32 noundef 4, i32 noundef 1, i32 noundef 1) #22, !dbg !17801
  %85 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 2, i32 0, !dbg !17802
  %86 = load i8, i8* %85, align 1, !dbg !17802
  %87 = zext i8 %86 to i32, !dbg !17803
  tail call void @PMIC_VR_CONTROL(i32 noundef 2, i32 noundef %87) #22, !dbg !17804
  %88 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 3, i32 0, !dbg !17805
  %89 = load i8, i8* %88, align 1, !dbg !17805
  %90 = zext i8 %89 to i32, !dbg !17806
  tail call void @PMIC_VR_CONTROL(i32 noundef 3, i32 noundef %90) #22, !dbg !17807
  %91 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 5, i32 0, !dbg !17808
  %92 = load i8, i8* %91, align 1, !dbg !17808
  %93 = zext i8 %92 to i32, !dbg !17809
  tail call void @PMIC_VR_CONTROL(i32 noundef 5, i32 noundef %93) #22, !dbg !17810
  %94 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 6, i32 0, !dbg !17811
  %95 = load i8, i8* %94, align 1, !dbg !17811
  %96 = zext i8 %95 to i32, !dbg !17812
  tail call void @PMIC_VR_CONTROL(i32 noundef 6, i32 noundef %96) #22, !dbg !17813
  %97 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 7, i32 0, !dbg !17814
  %98 = load i8, i8* %97, align 1, !dbg !17814
  %99 = zext i8 %98 to i32, !dbg !17815
  tail call void @PMIC_VR_CONTROL(i32 noundef 7, i32 noundef %99) #22, !dbg !17816
  %100 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 8, i32 0, !dbg !17817
  %101 = load i8, i8* %100, align 1, !dbg !17817
  %102 = zext i8 %101 to i32, !dbg !17818
  tail call void @PMIC_VR_CONTROL(i32 noundef 8, i32 noundef %102) #22, !dbg !17819
  %103 = getelementptr inbounds [8 x i8], [8 x i8]* %0, i32 9, i32 0, !dbg !17820
  %104 = load i8, i8* %103, align 1, !dbg !17820
  %105 = zext i8 %104 to i32, !dbg !17821
  tail call void @PMIC_VR_CONTROL(i32 noundef 9, i32 noundef %105) #22, !dbg !17822
  tail call void @PMIC_VR_CONTROL(i32 noundef 10, i32 noundef 0) #22, !dbg !17823
  tail call void @PMIC_VR_CONTROL(i32 noundef 11, i32 noundef 0) #22, !dbg !17824
  tail call void @PMIC_VR_CONTROL(i32 noundef 12, i32 noundef 0) #22, !dbg !17825
  tail call void @PMIC_VR_CONTROL(i32 noundef 13, i32 noundef 0) #22, !dbg !17826
  tail call void @PMIC_VR_CONTROL(i32 noundef 14, i32 noundef 0) #22, !dbg !17827
  tail call void @pmu_set_vrc_key_mt6385(i32 noundef 0) #22, !dbg !17828
  tail call void @pmu_set_ovr_mode_mt6385(i32 noundef 1) #22, !dbg !17829
  %106 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 66, i16 noundef zeroext 1, i16 noundef zeroext 2, i16 noundef zeroext 1) #22, !dbg !17830
  %107 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 66, i16 noundef zeroext 1, i16 noundef zeroext 3, i16 noundef zeroext 1) #22, !dbg !17831
  %108 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 66, i16 noundef zeroext 1, i16 noundef zeroext 5, i16 noundef zeroext 0) #22, !dbg !17832
  %109 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 66, i16 noundef zeroext 1, i16 noundef zeroext 4, i16 noundef zeroext 0) #22, !dbg !17833
  tail call void @pmu_set_ovr_mode_mt6385(i32 noundef 0) #22, !dbg !17834
  tail call void @pmu_set_vrc_key_mt6385(i32 noundef 1) #22, !dbg !17835
  tail call void @PMIC_VR_SLEEP_WKUP_CONFIG(i32 noundef 2, i32 noundef 3, i32 noundef 2, i32 noundef 0) #22, !dbg !17836
  tail call void @PMIC_VR_SLEEP_WKUP_CONFIG(i32 noundef 2, i32 noundef 4, i32 noundef 2, i32 noundef 0) #22, !dbg !17837
  ret void, !dbg !17838
}

; Function Attrs: optsize
declare dso_local void @pmu_auxadc_init() local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local void @pmu_eint_init() local_unnamed_addr #0 !dbg !17839 {
  %1 = alloca %struct.hal_cache_region_config_t, align 4
  %2 = bitcast %struct.hal_cache_region_config_t* %1 to i8*, !dbg !17848
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #24, !dbg !17848
  call void @llvm.dbg.declare(metadata %struct.hal_cache_region_config_t* %1, metadata !17841, metadata !DIExpression()), !dbg !17849
  %3 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 0, i32 0, !dbg !17850
  store i32 2, i32* %3, align 4, !dbg !17851
  %4 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 0, i32 1, !dbg !17852
  store i32 1, i32* %4, align 4, !dbg !17853
  %5 = call i32 @hal_eint_init(i32 noundef 30, %struct.hal_cache_region_config_t* noundef nonnull %1) #22, !dbg !17854
  %6 = call i32 @hal_eint_register_callback(i32 noundef 30, void (i8*)* noundef nonnull @pmu_eint_handler, i8* noundef null) #22, !dbg !17855
  %7 = call i32 @hal_eint_unmask(i32 noundef 30) #22, !dbg !17856
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #24, !dbg !17857
  ret void, !dbg !17857
}

; Function Attrs: optsize
declare dso_local i32 @hal_eint_init(i32 noundef, %struct.hal_cache_region_config_t* noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local void @pmu_eint_handler(i8* nocapture readnone %0) #0 !dbg !3361 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !3363, metadata !DIExpression()), !dbg !17858
  %2 = tail call i32 @hal_eint_mask(i32 noundef 30) #22, !dbg !17859
  %3 = tail call i32 @save_and_set_interrupt_mask() #22, !dbg !17860
  call void @llvm.dbg.value(metadata i32 %3, metadata !3364, metadata !DIExpression()), !dbg !17858
  store i32 0, i32* @pmu_eint_handler.index, align 4, !dbg !17861
  br label %6, !dbg !17863

4:                                                ; preds = %6
  store i32 0, i32* @pmu_eint_handler.index, align 4, !dbg !17864
  %5 = load i32, i32* getelementptr inbounds ([7 x i32], [7 x i32]* @pmu_eint_handler.int_sts, i32 0, i32 0), align 4, !dbg !17866
  br label %18, !dbg !17869

6:                                                ; preds = %1, %6
  %7 = phi i32 [ 0, %1 ], [ %14, %6 ]
  %8 = trunc i32 %7 to i16, !dbg !17870
  %9 = add nuw nsw i16 %8, 30, !dbg !17870
  %10 = tail call zeroext i8 @pmu_get_register_value(i16 noundef zeroext %9, i16 noundef zeroext 255, i16 noundef zeroext 0) #22, !dbg !17873
  %11 = zext i8 %10 to i32, !dbg !17873
  %12 = load i32, i32* @pmu_eint_handler.index, align 4, !dbg !17874
  %13 = getelementptr inbounds [7 x i32], [7 x i32]* @pmu_eint_handler.int_sts, i32 0, i32 %12, !dbg !17875
  store i32 %11, i32* %13, align 4, !dbg !17876
  %14 = add i32 %12, 1, !dbg !17877
  store i32 %14, i32* @pmu_eint_handler.index, align 4, !dbg !17861
  %15 = icmp ult i32 %14, 7, !dbg !17878
  br i1 %15, label %6, label %4, !dbg !17863, !llvm.loop !17879

16:                                               ; preds = %37
  store i32 0, i32* @pmu_eint_handler.index, align 4, !dbg !17881
  %17 = load i32, i32* getelementptr inbounds ([7 x i32], [7 x i32]* @pmu_eint_handler.int_sts, i32 0, i32 1), align 4, !dbg !17883
  br label %44, !dbg !17886

18:                                               ; preds = %4, %37
  %19 = phi i32 [ %5, %4 ], [ %39, %37 ], !dbg !17866
  %20 = phi i32 [ 0, %4 ], [ %40, %37 ]
  %21 = shl nuw nsw i32 %20, 1, !dbg !17887
  %22 = lshr i32 %19, %21, !dbg !17888
  %23 = and i32 %22, 3, !dbg !17889
  %24 = icmp eq i32 %23, 0, !dbg !17890
  br i1 %24, label %37, label %25, !dbg !17892

25:                                               ; preds = %18
  %26 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %20, i32 3, !dbg !17893
  %27 = load i8, i8* %26, align 1, !dbg !17893, !range !4202
  %28 = icmp eq i8 %27, 0, !dbg !17893
  br i1 %28, label %37, label %29, !dbg !17894

29:                                               ; preds = %25
  %30 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %20, i32 0, !dbg !17895
  %31 = load void (i8, i8*)*, void (i8, i8*)** %30, align 4, !dbg !17895
  %32 = trunc i32 %23 to i8, !dbg !17897
  %33 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %20, i32 1, !dbg !17898
  %34 = load i8*, i8** %33, align 4, !dbg !17898
  tail call void %31(i8 noundef zeroext %32, i8* noundef %34) #22, !dbg !17899
  %35 = load i32, i32* getelementptr inbounds ([7 x i32], [7 x i32]* @pmu_eint_handler.int_sts, i32 0, i32 0), align 4, !dbg !17866
  %36 = load i32, i32* @pmu_eint_handler.index, align 4, !dbg !17900
  br label %37, !dbg !17901

37:                                               ; preds = %18, %25, %29
  %38 = phi i32 [ %20, %18 ], [ %20, %25 ], [ %36, %29 ], !dbg !17900
  %39 = phi i32 [ %19, %18 ], [ %19, %25 ], [ %35, %29 ]
  %40 = add i32 %38, 1, !dbg !17900
  store i32 %40, i32* @pmu_eint_handler.index, align 4, !dbg !17864
  %41 = icmp ult i32 %40, 4, !dbg !17902
  br i1 %41, label %18, label %16, !dbg !17869, !llvm.loop !17903

42:                                               ; preds = %64
  store i32 0, i32* @pmu_eint_handler.index, align 4, !dbg !17905
  %43 = load i32, i32* getelementptr inbounds ([7 x i32], [7 x i32]* @pmu_eint_handler.int_sts, i32 0, i32 2), align 4, !dbg !17907
  br label %71, !dbg !17910

44:                                               ; preds = %16, %64
  %45 = phi i32 [ %17, %16 ], [ %66, %64 ], !dbg !17883
  %46 = phi i32 [ 0, %16 ], [ %67, %64 ]
  %47 = shl nuw nsw i32 %46, 1, !dbg !17911
  %48 = lshr i32 %45, %47, !dbg !17912
  %49 = and i32 %48, 3, !dbg !17913
  %50 = icmp eq i32 %49, 0, !dbg !17914
  br i1 %50, label %64, label %51, !dbg !17916

51:                                               ; preds = %44
  %52 = add nuw nsw i32 %46, 4, !dbg !17917
  %53 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %52, i32 3, !dbg !17918
  %54 = load i8, i8* %53, align 1, !dbg !17918, !range !4202
  %55 = icmp eq i8 %54, 0, !dbg !17918
  br i1 %55, label %64, label %56, !dbg !17919

56:                                               ; preds = %51
  %57 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %52, i32 0, !dbg !17920
  %58 = load void (i8, i8*)*, void (i8, i8*)** %57, align 4, !dbg !17920
  %59 = trunc i32 %49 to i8, !dbg !17922
  %60 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %52, i32 1, !dbg !17923
  %61 = load i8*, i8** %60, align 4, !dbg !17923
  tail call void %58(i8 noundef zeroext %59, i8* noundef %61) #22, !dbg !17924
  %62 = load i32, i32* getelementptr inbounds ([7 x i32], [7 x i32]* @pmu_eint_handler.int_sts, i32 0, i32 1), align 4, !dbg !17883
  %63 = load i32, i32* @pmu_eint_handler.index, align 4, !dbg !17925
  br label %64, !dbg !17926

64:                                               ; preds = %44, %51, %56
  %65 = phi i32 [ %46, %44 ], [ %46, %51 ], [ %63, %56 ], !dbg !17925
  %66 = phi i32 [ %45, %44 ], [ %45, %51 ], [ %62, %56 ]
  %67 = add i32 %65, 1, !dbg !17925
  store i32 %67, i32* @pmu_eint_handler.index, align 4, !dbg !17881
  %68 = icmp ult i32 %67, 4, !dbg !17927
  br i1 %68, label %44, label %42, !dbg !17886, !llvm.loop !17928

69:                                               ; preds = %91
  store i32 0, i32* @pmu_eint_handler.index, align 4, !dbg !17930
  %70 = load i32, i32* getelementptr inbounds ([7 x i32], [7 x i32]* @pmu_eint_handler.int_sts, i32 0, i32 3), align 4, !dbg !17932
  br label %98, !dbg !17935

71:                                               ; preds = %42, %91
  %72 = phi i32 [ %43, %42 ], [ %93, %91 ], !dbg !17907
  %73 = phi i32 [ 0, %42 ], [ %94, %91 ]
  %74 = shl nuw nsw i32 %73, 1, !dbg !17936
  %75 = lshr i32 %72, %74, !dbg !17937
  %76 = and i32 %75, 3, !dbg !17938
  %77 = icmp eq i32 %76, 0, !dbg !17939
  br i1 %77, label %91, label %78, !dbg !17941

78:                                               ; preds = %71
  %79 = add nuw nsw i32 %73, 8, !dbg !17942
  %80 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %79, i32 3, !dbg !17943
  %81 = load i8, i8* %80, align 1, !dbg !17943, !range !4202
  %82 = icmp eq i8 %81, 0, !dbg !17943
  br i1 %82, label %91, label %83, !dbg !17944

83:                                               ; preds = %78
  %84 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %79, i32 0, !dbg !17945
  %85 = load void (i8, i8*)*, void (i8, i8*)** %84, align 4, !dbg !17945
  %86 = trunc i32 %76 to i8, !dbg !17947
  %87 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %79, i32 1, !dbg !17948
  %88 = load i8*, i8** %87, align 4, !dbg !17948
  tail call void %85(i8 noundef zeroext %86, i8* noundef %88) #22, !dbg !17949
  %89 = load i32, i32* getelementptr inbounds ([7 x i32], [7 x i32]* @pmu_eint_handler.int_sts, i32 0, i32 2), align 4, !dbg !17907
  %90 = load i32, i32* @pmu_eint_handler.index, align 4, !dbg !17950
  br label %91, !dbg !17951

91:                                               ; preds = %71, %78, %83
  %92 = phi i32 [ %73, %71 ], [ %73, %78 ], [ %90, %83 ], !dbg !17950
  %93 = phi i32 [ %72, %71 ], [ %72, %78 ], [ %89, %83 ]
  %94 = add i32 %92, 1, !dbg !17950
  store i32 %94, i32* @pmu_eint_handler.index, align 4, !dbg !17905
  %95 = icmp ult i32 %94, 4, !dbg !17952
  br i1 %95, label %71, label %69, !dbg !17910, !llvm.loop !17953

96:                                               ; preds = %118
  store i32 0, i32* @pmu_eint_handler.index, align 4, !dbg !17955
  %97 = load i32, i32* getelementptr inbounds ([7 x i32], [7 x i32]* @pmu_eint_handler.int_sts, i32 0, i32 4), align 4, !dbg !17957
  br label %125, !dbg !17960

98:                                               ; preds = %69, %118
  %99 = phi i32 [ %70, %69 ], [ %120, %118 ], !dbg !17932
  %100 = phi i32 [ 0, %69 ], [ %121, %118 ]
  %101 = shl nuw nsw i32 %100, 1, !dbg !17961
  %102 = lshr i32 %99, %101, !dbg !17962
  %103 = and i32 %102, 3, !dbg !17963
  %104 = icmp eq i32 %103, 0, !dbg !17964
  br i1 %104, label %118, label %105, !dbg !17966

105:                                              ; preds = %98
  %106 = add nuw nsw i32 %100, 12, !dbg !17967
  %107 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %106, i32 3, !dbg !17968
  %108 = load i8, i8* %107, align 1, !dbg !17968, !range !4202
  %109 = icmp eq i8 %108, 0, !dbg !17968
  br i1 %109, label %118, label %110, !dbg !17969

110:                                              ; preds = %105
  %111 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %106, i32 0, !dbg !17970
  %112 = load void (i8, i8*)*, void (i8, i8*)** %111, align 4, !dbg !17970
  %113 = trunc i32 %103 to i8, !dbg !17972
  %114 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %106, i32 1, !dbg !17973
  %115 = load i8*, i8** %114, align 4, !dbg !17973
  tail call void %112(i8 noundef zeroext %113, i8* noundef %115) #22, !dbg !17974
  %116 = load i32, i32* getelementptr inbounds ([7 x i32], [7 x i32]* @pmu_eint_handler.int_sts, i32 0, i32 3), align 4, !dbg !17932
  %117 = load i32, i32* @pmu_eint_handler.index, align 4, !dbg !17975
  br label %118, !dbg !17976

118:                                              ; preds = %98, %105, %110
  %119 = phi i32 [ %100, %98 ], [ %100, %105 ], [ %117, %110 ], !dbg !17975
  %120 = phi i32 [ %99, %98 ], [ %99, %105 ], [ %116, %110 ]
  %121 = add i32 %119, 1, !dbg !17975
  store i32 %121, i32* @pmu_eint_handler.index, align 4, !dbg !17930
  %122 = icmp ult i32 %121, 4, !dbg !17977
  br i1 %122, label %98, label %96, !dbg !17935, !llvm.loop !17978

123:                                              ; preds = %145
  store i32 0, i32* @pmu_eint_handler.index, align 4, !dbg !17980
  %124 = load i32, i32* getelementptr inbounds ([7 x i32], [7 x i32]* @pmu_eint_handler.int_sts, i32 0, i32 5), align 4, !dbg !17982
  br label %152, !dbg !17985

125:                                              ; preds = %96, %145
  %126 = phi i32 [ %97, %96 ], [ %147, %145 ], !dbg !17957
  %127 = phi i32 [ 0, %96 ], [ %148, %145 ]
  %128 = shl nuw nsw i32 %127, 1, !dbg !17986
  %129 = lshr i32 %126, %128, !dbg !17987
  %130 = and i32 %129, 3, !dbg !17988
  %131 = icmp eq i32 %130, 0, !dbg !17989
  br i1 %131, label %145, label %132, !dbg !17991

132:                                              ; preds = %125
  %133 = add nuw nsw i32 %127, 16, !dbg !17992
  %134 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %133, i32 3, !dbg !17993
  %135 = load i8, i8* %134, align 1, !dbg !17993, !range !4202
  %136 = icmp eq i8 %135, 0, !dbg !17993
  br i1 %136, label %145, label %137, !dbg !17994

137:                                              ; preds = %132
  %138 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %133, i32 0, !dbg !17995
  %139 = load void (i8, i8*)*, void (i8, i8*)** %138, align 4, !dbg !17995
  %140 = trunc i32 %130 to i8, !dbg !17997
  %141 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %133, i32 1, !dbg !17998
  %142 = load i8*, i8** %141, align 4, !dbg !17998
  tail call void %139(i8 noundef zeroext %140, i8* noundef %142) #22, !dbg !17999
  %143 = load i32, i32* getelementptr inbounds ([7 x i32], [7 x i32]* @pmu_eint_handler.int_sts, i32 0, i32 4), align 4, !dbg !17957
  %144 = load i32, i32* @pmu_eint_handler.index, align 4, !dbg !18000
  br label %145, !dbg !18001

145:                                              ; preds = %125, %132, %137
  %146 = phi i32 [ %127, %125 ], [ %127, %132 ], [ %144, %137 ], !dbg !18000
  %147 = phi i32 [ %126, %125 ], [ %126, %132 ], [ %143, %137 ]
  %148 = add i32 %146, 1, !dbg !18000
  store i32 %148, i32* @pmu_eint_handler.index, align 4, !dbg !17955
  %149 = icmp ult i32 %148, 3, !dbg !18002
  br i1 %149, label %125, label %123, !dbg !17960, !llvm.loop !18003

150:                                              ; preds = %170
  store i32 0, i32* @pmu_eint_handler.index, align 4, !dbg !18005
  %151 = load i32, i32* getelementptr inbounds ([7 x i32], [7 x i32]* @pmu_eint_handler.int_sts, i32 0, i32 6), align 4, !dbg !18007
  br label %176, !dbg !18010

152:                                              ; preds = %123, %170
  %153 = phi i32 [ %124, %123 ], [ %172, %170 ], !dbg !17982
  %154 = phi i32 [ 0, %123 ], [ %173, %170 ]
  %155 = shl nuw nsw i32 1, %154, !dbg !18011
  %156 = and i32 %153, %155, !dbg !18011
  %157 = icmp eq i32 %156, 0, !dbg !18011
  br i1 %157, label %170, label %158, !dbg !18013

158:                                              ; preds = %152
  %159 = add nuw nsw i32 %154, 19, !dbg !18014
  %160 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %159, i32 3, !dbg !18015
  %161 = load i8, i8* %160, align 1, !dbg !18015, !range !4202
  %162 = icmp eq i8 %161, 0, !dbg !18015
  br i1 %162, label %170, label %163, !dbg !18016

163:                                              ; preds = %158
  %164 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %159, i32 0, !dbg !18017
  %165 = load void (i8, i8*)*, void (i8, i8*)** %164, align 4, !dbg !18017
  %166 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %159, i32 1, !dbg !18019
  %167 = load i8*, i8** %166, align 4, !dbg !18019
  tail call void %165(i8 noundef zeroext 1, i8* noundef %167) #22, !dbg !18020
  %168 = load i32, i32* getelementptr inbounds ([7 x i32], [7 x i32]* @pmu_eint_handler.int_sts, i32 0, i32 5), align 4, !dbg !17982
  %169 = load i32, i32* @pmu_eint_handler.index, align 4, !dbg !18021
  br label %170, !dbg !18022

170:                                              ; preds = %152, %158, %163
  %171 = phi i32 [ %154, %152 ], [ %154, %158 ], [ %169, %163 ], !dbg !18021
  %172 = phi i32 [ %153, %152 ], [ %153, %158 ], [ %168, %163 ]
  %173 = add i32 %171, 1, !dbg !18021
  store i32 %173, i32* @pmu_eint_handler.index, align 4, !dbg !17980
  %174 = icmp ult i32 %173, 8, !dbg !18023
  br i1 %174, label %152, label %150, !dbg !17985, !llvm.loop !18024

175:                                              ; preds = %194
  store i32 0, i32* @pmu_eint_handler.index, align 4, !dbg !18026
  br label %200, !dbg !18028

176:                                              ; preds = %150, %194
  %177 = phi i32 [ %151, %150 ], [ %196, %194 ], !dbg !18007
  %178 = phi i32 [ 0, %150 ], [ %197, %194 ]
  %179 = shl nuw nsw i32 1, %178, !dbg !18029
  %180 = and i32 %177, %179, !dbg !18029
  %181 = icmp eq i32 %180, 0, !dbg !18029
  br i1 %181, label %194, label %182, !dbg !18031

182:                                              ; preds = %176
  %183 = add nuw nsw i32 %178, 27, !dbg !18032
  %184 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %183, i32 3, !dbg !18033
  %185 = load i8, i8* %184, align 1, !dbg !18033, !range !4202
  %186 = icmp eq i8 %185, 0, !dbg !18033
  br i1 %186, label %194, label %187, !dbg !18034

187:                                              ; preds = %182
  %188 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %183, i32 0, !dbg !18035
  %189 = load void (i8, i8*)*, void (i8, i8*)** %188, align 4, !dbg !18035
  %190 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %183, i32 1, !dbg !18037
  %191 = load i8*, i8** %190, align 4, !dbg !18037
  tail call void %189(i8 noundef zeroext 1, i8* noundef %191) #22, !dbg !18038
  %192 = load i32, i32* getelementptr inbounds ([7 x i32], [7 x i32]* @pmu_eint_handler.int_sts, i32 0, i32 6), align 4, !dbg !18007
  %193 = load i32, i32* @pmu_eint_handler.index, align 4, !dbg !18039
  br label %194, !dbg !18040

194:                                              ; preds = %176, %182, %187
  %195 = phi i32 [ %178, %176 ], [ %178, %182 ], [ %193, %187 ], !dbg !18039
  %196 = phi i32 [ %177, %176 ], [ %177, %182 ], [ %192, %187 ]
  %197 = add i32 %195, 1, !dbg !18039
  store i32 %197, i32* @pmu_eint_handler.index, align 4, !dbg !18005
  %198 = icmp ult i32 %197, 5, !dbg !18041
  br i1 %198, label %176, label %175, !dbg !18010, !llvm.loop !18042

199:                                              ; preds = %200
  store i32 0, i32* @pmu_eint_handler.index, align 4, !dbg !18044
  br label %208, !dbg !18046

200:                                              ; preds = %175, %200
  %201 = phi i32 [ 0, %175 ], [ %206, %200 ]
  %202 = trunc i32 %201 to i16, !dbg !18047
  %203 = add nuw nsw i16 %202, 30, !dbg !18047
  %204 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext %203, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 255) #22, !dbg !18050
  %205 = load i32, i32* @pmu_eint_handler.index, align 4, !dbg !18051
  %206 = add i32 %205, 1, !dbg !18051
  store i32 %206, i32* @pmu_eint_handler.index, align 4, !dbg !18026
  %207 = icmp ult i32 %206, 7, !dbg !18052
  br i1 %207, label %200, label %199, !dbg !18028, !llvm.loop !18053

208:                                              ; preds = %199, %222
  %209 = phi i32 [ 0, %199 ], [ %224, %222 ]
  %210 = trunc i32 %209 to i16, !dbg !18055
  %211 = add nuw nsw i16 %210, 30, !dbg !18055
  %212 = tail call zeroext i8 @pmu_get_register_value(i16 noundef zeroext %211, i16 noundef zeroext 255, i16 noundef zeroext 0) #22, !dbg !18058
  %213 = zext i8 %212 to i32, !dbg !18058
  %214 = load i32, i32* @pmu_eint_handler.index, align 4, !dbg !18059
  %215 = getelementptr inbounds [7 x i32], [7 x i32]* @pmu_eint_handler.int_sts, i32 0, i32 %214, !dbg !18060
  store i32 %213, i32* %215, align 4, !dbg !18061
  %216 = icmp eq i8 %212, 0, !dbg !18062
  br i1 %216, label %222, label %217, !dbg !18064

217:                                              ; preds = %208
  %218 = trunc i32 %214 to i16, !dbg !18065
  %219 = add i16 %218, 30, !dbg !18065
  %220 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext %219, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 255) #22, !dbg !18067
  %221 = load i32, i32* @pmu_eint_handler.index, align 4, !dbg !18068
  br label %222, !dbg !18069

222:                                              ; preds = %208, %217
  %223 = phi i32 [ %214, %208 ], [ %221, %217 ], !dbg !18068
  %224 = add i32 %223, 1, !dbg !18068
  store i32 %224, i32* @pmu_eint_handler.index, align 4, !dbg !18044
  %225 = icmp ult i32 %224, 7, !dbg !18070
  br i1 %225, label %208, label %226, !dbg !18046, !llvm.loop !18071

226:                                              ; preds = %222
  tail call void @restore_interrupt_mask(i32 noundef %3) #22, !dbg !18073
  %227 = tail call i32 @hal_eint_unmask(i32 noundef 30) #22, !dbg !18074
  ret void, !dbg !18075
}

; Function Attrs: optsize
declare dso_local i32 @hal_eint_register_callback(i32 noundef, void (i8*)* noundef, i8* noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local i32 @hal_eint_unmask(i32 noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local i32 @hal_eint_mask(i32 noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @pmu_set_register_value_mt6385(i16 noundef zeroext %0, i16 noundef zeroext %1, i16 noundef zeroext %2, i16 noundef zeroext %3) local_unnamed_addr #0 !dbg !18076 {
  %5 = alloca [3 x i8], align 1
  %6 = alloca [1 x i8], align 1
  call void @llvm.dbg.value(metadata i16 %0, metadata !18078, metadata !DIExpression()), !dbg !18085
  call void @llvm.dbg.value(metadata i16 %1, metadata !18079, metadata !DIExpression()), !dbg !18085
  call void @llvm.dbg.value(metadata i16 %2, metadata !18080, metadata !DIExpression()), !dbg !18085
  call void @llvm.dbg.value(metadata i16 %3, metadata !18081, metadata !DIExpression()), !dbg !18085
  %7 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i32 0, i32 0, !dbg !18086
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %7) #24, !dbg !18086
  call void @llvm.dbg.declare(metadata [3 x i8]* %5, metadata !18082, metadata !DIExpression()), !dbg !18087
  %8 = getelementptr inbounds [1 x i8], [1 x i8]* %6, i32 0, i32 0, !dbg !18086
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %8) #24, !dbg !18086
  call void @llvm.dbg.declare(metadata [1 x i8]* %6, metadata !18083, metadata !DIExpression()), !dbg !18088
  %9 = trunc i16 %0 to i8, !dbg !18089
  %10 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i32 0, i32 1, !dbg !18090
  store i8 %9, i8* %10, align 1, !dbg !18091
  %11 = lshr i16 %0, 8, !dbg !18092
  %12 = trunc i16 %11 to i8, !dbg !18093
  %13 = or i8 %12, 64, !dbg !18093
  store i8 %13, i8* %7, align 1, !dbg !18094
  %14 = tail call i32 @save_and_set_interrupt_mask() #22, !dbg !18095
  call void @llvm.dbg.value(metadata i32 %14, metadata !18084, metadata !DIExpression()), !dbg !18085
  %15 = call zeroext i8 @Wrap_D2D_I2C_Read(i8* noundef nonnull %7, i8* noundef nonnull %8) #23, !dbg !18096
  %16 = zext i16 %1 to i32, !dbg !18097
  %17 = zext i16 %2 to i32, !dbg !18098
  %18 = shl i32 %16, %17, !dbg !18099
  %19 = load i8, i8* %8, align 1, !dbg !18100
  %20 = trunc i32 %18 to i8, !dbg !18100
  %21 = xor i8 %20, -1, !dbg !18100
  %22 = and i8 %19, %21, !dbg !18100
  store i8 %22, i8* %8, align 1, !dbg !18100
  %23 = zext i16 %3 to i32, !dbg !18101
  %24 = shl i32 %23, %17, !dbg !18102
  %25 = trunc i32 %24 to i8, !dbg !18103
  %26 = or i8 %22, %25, !dbg !18103
  %27 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i32 0, i32 2, !dbg !18104
  store i8 %26, i8* %27, align 1, !dbg !18105
  %28 = call zeroext i8 @Wrap_D2D_I2C_Write(i8* noundef nonnull %7) #23, !dbg !18106
  %29 = icmp eq i8 %28, 0, !dbg !18108
  call void @restore_interrupt_mask(i32 noundef %14) #22, !dbg !18109
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #24, !dbg !18110
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %7) #24, !dbg !18110
  ret i1 %29, !dbg !18110
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i8 @Wrap_D2D_I2C_Read(i8* noundef %0, i8* noundef %1) local_unnamed_addr #0 !dbg !18111 {
  %3 = alloca %struct.pmic_i2c_send_to_receive_config_t, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !18115, metadata !DIExpression()), !dbg !18128
  call void @llvm.dbg.value(metadata i8* %1, metadata !18116, metadata !DIExpression()), !dbg !18128
  %4 = getelementptr inbounds %struct.pmic_i2c_send_to_receive_config_t, %struct.pmic_i2c_send_to_receive_config_t* %3, i32 0, i32 0, !dbg !18129
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %4) #24, !dbg !18129
  call void @llvm.dbg.declare(metadata %struct.pmic_i2c_send_to_receive_config_t* %3, metadata !18117, metadata !DIExpression()), !dbg !18130
  call void @llvm.dbg.value(metadata i8 0, metadata !18126, metadata !DIExpression()), !dbg !18128
  %5 = load i8, i8* %0, align 1, !dbg !18131
  %6 = or i8 %5, 64, !dbg !18132
  store i8 %6, i8* %0, align 1, !dbg !18133
  store i8 107, i8* %4, align 4, !dbg !18134
  %7 = getelementptr inbounds %struct.pmic_i2c_send_to_receive_config_t, %struct.pmic_i2c_send_to_receive_config_t* %3, i32 0, i32 1, !dbg !18135
  store i8* %0, i8** %7, align 4, !dbg !18136
  %8 = getelementptr inbounds %struct.pmic_i2c_send_to_receive_config_t, %struct.pmic_i2c_send_to_receive_config_t* %3, i32 0, i32 2, !dbg !18137
  store i32 2, i32* %8, align 4, !dbg !18138
  %9 = getelementptr inbounds %struct.pmic_i2c_send_to_receive_config_t, %struct.pmic_i2c_send_to_receive_config_t* %3, i32 0, i32 3, !dbg !18139
  store i8* %1, i8** %9, align 4, !dbg !18140
  %10 = getelementptr inbounds %struct.pmic_i2c_send_to_receive_config_t, %struct.pmic_i2c_send_to_receive_config_t* %3, i32 0, i32 4, !dbg !18141
  store i32 1, i32* %10, align 4, !dbg !18142
  br label %11, !dbg !18143

11:                                               ; preds = %11, %2
  %12 = phi i8 [ 0, %2 ], [ %14, %11 ], !dbg !18128
  call void @llvm.dbg.value(metadata i8 %12, metadata !18126, metadata !DIExpression()), !dbg !18128
  %13 = call i32 @pmic_i2c_send_to_receive_polling(i32 noundef 0, %struct.pmic_i2c_send_to_receive_config_t* noundef nonnull %3) #22, !dbg !18144
  call void @llvm.dbg.value(metadata i32 %13, metadata !18127, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18128
  %14 = add nuw nsw i8 %12, 1, !dbg !18146
  call void @llvm.dbg.value(metadata i8 %14, metadata !18126, metadata !DIExpression()), !dbg !18128
  %15 = and i32 %13, 255, !dbg !18147
  %16 = icmp ne i32 %15, 0, !dbg !18148
  %17 = icmp ult i8 %12, 60, !dbg !18149
  %18 = select i1 %16, i1 %17, i1 false, !dbg !18149
  br i1 %18, label %11, label %19, !dbg !18150, !llvm.loop !18151

19:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8 %12, metadata !18126, metadata !DIExpression()), !dbg !18128
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %4) #24, !dbg !18153
  ret i8 %12, !dbg !18154
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i8 @Wrap_D2D_I2C_Write(i8* noundef %0) local_unnamed_addr #0 !dbg !18155 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !18159, metadata !DIExpression()), !dbg !18162
  call void @llvm.dbg.value(metadata i8 0, metadata !18160, metadata !DIExpression()), !dbg !18162
  %2 = load i8, i8* %0, align 1, !dbg !18163
  %3 = or i8 %2, 64, !dbg !18164
  store i8 %3, i8* %0, align 1, !dbg !18165
  br label %4, !dbg !18166

4:                                                ; preds = %4, %1
  %5 = phi i8 [ 0, %1 ], [ %7, %4 ], !dbg !18162
  call void @llvm.dbg.value(metadata i8 %5, metadata !18160, metadata !DIExpression()), !dbg !18162
  %6 = tail call i32 @pmic_i2c_send_polling(i32 noundef 0, i8 noundef zeroext 107, i8* noundef nonnull %0, i32 noundef 3) #22, !dbg !18167
  call void @llvm.dbg.value(metadata i32 %6, metadata !18161, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18162
  %7 = add nuw nsw i8 %5, 1, !dbg !18169
  call void @llvm.dbg.value(metadata i8 %7, metadata !18160, metadata !DIExpression()), !dbg !18162
  %8 = and i32 %6, 255, !dbg !18170
  %9 = icmp ne i32 %8, 0, !dbg !18171
  %10 = icmp ult i8 %5, 60, !dbg !18172
  %11 = select i1 %9, i1 %10, i1 false, !dbg !18172
  br i1 %11, label %4, label %12, !dbg !18173, !llvm.loop !18174

12:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 %5, metadata !18160, metadata !DIExpression()), !dbg !18162
  ret i8 %5, !dbg !18176
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i8 @pmu_get_register_value_mt6385(i16 noundef zeroext %0, i16 noundef zeroext %1, i16 noundef zeroext %2) local_unnamed_addr #0 !dbg !18177 {
  %4 = alloca [2 x i8], align 1
  %5 = alloca [1 x i8], align 1
  call void @llvm.dbg.value(metadata i16 %0, metadata !18179, metadata !DIExpression()), !dbg !18186
  call void @llvm.dbg.value(metadata i16 %1, metadata !18180, metadata !DIExpression()), !dbg !18186
  call void @llvm.dbg.value(metadata i16 %2, metadata !18181, metadata !DIExpression()), !dbg !18186
  %6 = getelementptr inbounds [2 x i8], [2 x i8]* %4, i32 0, i32 0, !dbg !18187
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %6) #24, !dbg !18187
  call void @llvm.dbg.declare(metadata [2 x i8]* %4, metadata !18182, metadata !DIExpression()), !dbg !18188
  %7 = getelementptr inbounds [1 x i8], [1 x i8]* %5, i32 0, i32 0, !dbg !18187
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #24, !dbg !18187
  call void @llvm.dbg.declare(metadata [1 x i8]* %5, metadata !18184, metadata !DIExpression()), !dbg !18189
  %8 = trunc i16 %0 to i8, !dbg !18190
  %9 = getelementptr inbounds [2 x i8], [2 x i8]* %4, i32 0, i32 1, !dbg !18191
  store i8 %8, i8* %9, align 1, !dbg !18192
  %10 = lshr i16 %0, 8, !dbg !18193
  %11 = trunc i16 %10 to i8, !dbg !18194
  %12 = or i8 %11, 64, !dbg !18194
  store i8 %12, i8* %6, align 1, !dbg !18195
  %13 = tail call i32 @save_and_set_interrupt_mask() #22, !dbg !18196
  call void @llvm.dbg.value(metadata i32 %13, metadata !18185, metadata !DIExpression()), !dbg !18186
  %14 = call zeroext i8 @Wrap_D2D_I2C_Read(i8* noundef nonnull %6, i8* noundef nonnull %7) #23, !dbg !18197
  call void @restore_interrupt_mask(i32 noundef %13) #22, !dbg !18198
  %15 = load i8, i8* %7, align 1, !dbg !18199
  %16 = zext i8 %15 to i32, !dbg !18199
  %17 = zext i16 %2 to i32, !dbg !18200
  %18 = lshr i32 %16, %17, !dbg !18201
  %19 = zext i16 %1 to i32, !dbg !18202
  %20 = and i32 %18, %19, !dbg !18203
  %21 = trunc i32 %20 to i8, !dbg !18204
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #24, !dbg !18205
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %6) #24, !dbg !18205
  ret i8 %21, !dbg !18206
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pmu_register_callback(i32 noundef %0, i32 noundef %1, void (i8, i8*)* noundef %2, i8* noundef %3) local_unnamed_addr #0 !dbg !18207 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18215, metadata !DIExpression()), !dbg !18221
  call void @llvm.dbg.value(metadata i32 %1, metadata !18216, metadata !DIExpression()), !dbg !18221
  call void @llvm.dbg.value(metadata void (i8, i8*)* %2, metadata !18217, metadata !DIExpression()), !dbg !18221
  call void @llvm.dbg.value(metadata i8* %3, metadata !18218, metadata !DIExpression()), !dbg !18221
  call void @llvm.dbg.value(metadata i32 -1, metadata !18219, metadata !DIExpression()), !dbg !18221
  %5 = icmp ugt i32 %0, 31, !dbg !18222
  %6 = icmp eq void (i8, i8*)* %2, null
  %7 = or i1 %5, %6, !dbg !18224
  br i1 %7, label %16, label %8, !dbg !18224

8:                                                ; preds = %4
  %9 = tail call i32 @save_and_set_interrupt_mask() #22, !dbg !18225
  call void @llvm.dbg.value(metadata i32 %9, metadata !18220, metadata !DIExpression()), !dbg !18221
  %10 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %0, i32 0, !dbg !18226
  store void (i8, i8*)* %2, void (i8, i8*)** %10, align 4, !dbg !18227
  %11 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %0, i32 1, !dbg !18228
  store i8* %3, i8** %11, align 4, !dbg !18229
  %12 = trunc i32 %1 to i8, !dbg !18230
  %13 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %0, i32 2, !dbg !18231
  store i8 %12, i8* %13, align 4, !dbg !18232
  %14 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %0, i32 3, !dbg !18233
  store i8 1, i8* %14, align 1, !dbg !18234
  %15 = tail call i32 @pmu_enable_interrupt(i32 noundef %0, i32 noundef %1, i8 noundef zeroext 1) #23, !dbg !18235
  tail call void @restore_interrupt_mask(i32 noundef %9) #22, !dbg !18236
  call void @llvm.dbg.value(metadata i32 0, metadata !18219, metadata !DIExpression()), !dbg !18221
  br label %16, !dbg !18237

16:                                               ; preds = %4, %8
  %17 = phi i32 [ 0, %8 ], [ -2, %4 ], !dbg !18221
  ret i32 %17, !dbg !18238
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pmu_enable_interrupt(i32 noundef %0, i32 noundef %1, i8 noundef zeroext %2) local_unnamed_addr #0 !dbg !18239 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18243, metadata !DIExpression()), !dbg !18247
  call void @llvm.dbg.value(metadata i32 %1, metadata !18244, metadata !DIExpression()), !dbg !18247
  call void @llvm.dbg.value(metadata i8 %2, metadata !18245, metadata !DIExpression()), !dbg !18247
  call void @llvm.dbg.value(metadata i32 %0, metadata !18246, metadata !DIExpression()), !dbg !18247
  %4 = and i32 %0, 224, !dbg !18248
  %5 = icmp eq i32 %4, 0, !dbg !18250
  br i1 %5, label %6, label %275, !dbg !18251

6:                                                ; preds = %3
  %7 = trunc i32 %0 to i8, !dbg !18252
  switch i8 %7, label %275 [
    i8 0, label %8
    i8 1, label %20
    i8 2, label %32
    i8 3, label %44
    i8 4, label %56
    i8 5, label %68
    i8 6, label %80
    i8 7, label %92
    i8 8, label %104
    i8 9, label %116
    i8 10, label %128
    i8 11, label %140
    i8 12, label %152
    i8 13, label %164
    i8 14, label %176
    i8 15, label %188
    i8 16, label %200
    i8 17, label %212
    i8 18, label %224
    i8 19, label %236
    i8 20, label %239
    i8 21, label %242
    i8 22, label %245
    i8 23, label %248
    i8 24, label %251
    i8 25, label %254
    i8 26, label %257
    i8 27, label %260
    i8 28, label %263
    i8 29, label %266
    i8 30, label %269
    i8 31, label %272
  ], !dbg !18252

8:                                                ; preds = %6
  %9 = and i32 %1, 1, !dbg !18253
  %10 = icmp eq i32 %9, 0, !dbg !18256
  br i1 %10, label %14, label %11, !dbg !18257

11:                                               ; preds = %8
  %12 = zext i8 %2 to i16, !dbg !18258
  %13 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 37, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext %12) #22, !dbg !18260
  br label %14, !dbg !18261

14:                                               ; preds = %11, %8
  %15 = and i32 %1, 2, !dbg !18262
  %16 = icmp eq i32 %15, 0, !dbg !18264
  br i1 %16, label %275, label %17, !dbg !18265

17:                                               ; preds = %14
  %18 = zext i8 %2 to i16, !dbg !18266
  %19 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 37, i16 noundef zeroext 1, i16 noundef zeroext 1, i16 noundef zeroext %18) #22, !dbg !18268
  br label %275, !dbg !18269

20:                                               ; preds = %6
  %21 = and i32 %1, 1, !dbg !18270
  %22 = icmp eq i32 %21, 0, !dbg !18272
  br i1 %22, label %26, label %23, !dbg !18273

23:                                               ; preds = %20
  %24 = zext i8 %2 to i16, !dbg !18274
  %25 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 37, i16 noundef zeroext 1, i16 noundef zeroext 2, i16 noundef zeroext %24) #22, !dbg !18276
  br label %26, !dbg !18277

26:                                               ; preds = %23, %20
  %27 = and i32 %1, 2, !dbg !18278
  %28 = icmp eq i32 %27, 0, !dbg !18280
  br i1 %28, label %275, label %29, !dbg !18281

29:                                               ; preds = %26
  %30 = zext i8 %2 to i16, !dbg !18282
  %31 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 37, i16 noundef zeroext 1, i16 noundef zeroext 3, i16 noundef zeroext %30) #22, !dbg !18284
  br label %275, !dbg !18285

32:                                               ; preds = %6
  %33 = and i32 %1, 1, !dbg !18286
  %34 = icmp eq i32 %33, 0, !dbg !18288
  br i1 %34, label %38, label %35, !dbg !18289

35:                                               ; preds = %32
  %36 = zext i8 %2 to i16, !dbg !18290
  %37 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 37, i16 noundef zeroext 1, i16 noundef zeroext 4, i16 noundef zeroext %36) #22, !dbg !18292
  br label %38, !dbg !18293

38:                                               ; preds = %35, %32
  %39 = and i32 %1, 2, !dbg !18294
  %40 = icmp eq i32 %39, 0, !dbg !18296
  br i1 %40, label %275, label %41, !dbg !18297

41:                                               ; preds = %38
  %42 = zext i8 %2 to i16, !dbg !18298
  %43 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 37, i16 noundef zeroext 1, i16 noundef zeroext 5, i16 noundef zeroext %42) #22, !dbg !18300
  br label %275, !dbg !18301

44:                                               ; preds = %6
  %45 = and i32 %1, 1, !dbg !18302
  %46 = icmp eq i32 %45, 0, !dbg !18304
  br i1 %46, label %50, label %47, !dbg !18305

47:                                               ; preds = %44
  %48 = zext i8 %2 to i16, !dbg !18306
  %49 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 37, i16 noundef zeroext 1, i16 noundef zeroext 6, i16 noundef zeroext %48) #22, !dbg !18308
  br label %50, !dbg !18309

50:                                               ; preds = %47, %44
  %51 = and i32 %1, 2, !dbg !18310
  %52 = icmp eq i32 %51, 0, !dbg !18312
  br i1 %52, label %275, label %53, !dbg !18313

53:                                               ; preds = %50
  %54 = zext i8 %2 to i16, !dbg !18314
  %55 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 37, i16 noundef zeroext 1, i16 noundef zeroext 7, i16 noundef zeroext %54) #22, !dbg !18316
  br label %275, !dbg !18317

56:                                               ; preds = %6
  %57 = and i32 %1, 1, !dbg !18318
  %58 = icmp eq i32 %57, 0, !dbg !18320
  br i1 %58, label %62, label %59, !dbg !18321

59:                                               ; preds = %56
  %60 = zext i8 %2 to i16, !dbg !18322
  %61 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 38, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext %60) #22, !dbg !18324
  br label %62, !dbg !18325

62:                                               ; preds = %59, %56
  %63 = and i32 %1, 2, !dbg !18326
  %64 = icmp eq i32 %63, 0, !dbg !18328
  br i1 %64, label %275, label %65, !dbg !18329

65:                                               ; preds = %62
  %66 = zext i8 %2 to i16, !dbg !18330
  %67 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 38, i16 noundef zeroext 1, i16 noundef zeroext 1, i16 noundef zeroext %66) #22, !dbg !18332
  br label %275, !dbg !18333

68:                                               ; preds = %6
  %69 = and i32 %1, 1, !dbg !18334
  %70 = icmp eq i32 %69, 0, !dbg !18336
  br i1 %70, label %74, label %71, !dbg !18337

71:                                               ; preds = %68
  %72 = zext i8 %2 to i16, !dbg !18338
  %73 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 38, i16 noundef zeroext 1, i16 noundef zeroext 2, i16 noundef zeroext %72) #22, !dbg !18340
  br label %74, !dbg !18341

74:                                               ; preds = %71, %68
  %75 = and i32 %1, 2, !dbg !18342
  %76 = icmp eq i32 %75, 0, !dbg !18344
  br i1 %76, label %275, label %77, !dbg !18345

77:                                               ; preds = %74
  %78 = zext i8 %2 to i16, !dbg !18346
  %79 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 38, i16 noundef zeroext 1, i16 noundef zeroext 3, i16 noundef zeroext %78) #22, !dbg !18348
  br label %275, !dbg !18349

80:                                               ; preds = %6
  %81 = and i32 %1, 1, !dbg !18350
  %82 = icmp eq i32 %81, 0, !dbg !18352
  br i1 %82, label %86, label %83, !dbg !18353

83:                                               ; preds = %80
  %84 = zext i8 %2 to i16, !dbg !18354
  %85 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 38, i16 noundef zeroext 1, i16 noundef zeroext 4, i16 noundef zeroext %84) #22, !dbg !18356
  br label %86, !dbg !18357

86:                                               ; preds = %83, %80
  %87 = and i32 %1, 2, !dbg !18358
  %88 = icmp eq i32 %87, 0, !dbg !18360
  br i1 %88, label %275, label %89, !dbg !18361

89:                                               ; preds = %86
  %90 = zext i8 %2 to i16, !dbg !18362
  %91 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 38, i16 noundef zeroext 1, i16 noundef zeroext 5, i16 noundef zeroext %90) #22, !dbg !18364
  br label %275, !dbg !18365

92:                                               ; preds = %6
  %93 = and i32 %1, 1, !dbg !18366
  %94 = icmp eq i32 %93, 0, !dbg !18368
  br i1 %94, label %98, label %95, !dbg !18369

95:                                               ; preds = %92
  %96 = zext i8 %2 to i16, !dbg !18370
  %97 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 38, i16 noundef zeroext 1, i16 noundef zeroext 6, i16 noundef zeroext %96) #22, !dbg !18372
  br label %98, !dbg !18373

98:                                               ; preds = %95, %92
  %99 = and i32 %1, 2, !dbg !18374
  %100 = icmp eq i32 %99, 0, !dbg !18376
  br i1 %100, label %275, label %101, !dbg !18377

101:                                              ; preds = %98
  %102 = zext i8 %2 to i16, !dbg !18378
  %103 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 38, i16 noundef zeroext 1, i16 noundef zeroext 7, i16 noundef zeroext %102) #22, !dbg !18380
  br label %275, !dbg !18381

104:                                              ; preds = %6
  %105 = and i32 %1, 1, !dbg !18382
  %106 = icmp eq i32 %105, 0, !dbg !18384
  br i1 %106, label %110, label %107, !dbg !18385

107:                                              ; preds = %104
  %108 = zext i8 %2 to i16, !dbg !18386
  %109 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 39, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext %108) #22, !dbg !18388
  br label %110, !dbg !18389

110:                                              ; preds = %107, %104
  %111 = and i32 %1, 2, !dbg !18390
  %112 = icmp eq i32 %111, 0, !dbg !18392
  br i1 %112, label %275, label %113, !dbg !18393

113:                                              ; preds = %110
  %114 = zext i8 %2 to i16, !dbg !18394
  %115 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 39, i16 noundef zeroext 1, i16 noundef zeroext 1, i16 noundef zeroext %114) #22, !dbg !18396
  br label %275, !dbg !18397

116:                                              ; preds = %6
  %117 = and i32 %1, 1, !dbg !18398
  %118 = icmp eq i32 %117, 0, !dbg !18400
  br i1 %118, label %122, label %119, !dbg !18401

119:                                              ; preds = %116
  %120 = zext i8 %2 to i16, !dbg !18402
  %121 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 39, i16 noundef zeroext 1, i16 noundef zeroext 2, i16 noundef zeroext %120) #22, !dbg !18404
  br label %122, !dbg !18405

122:                                              ; preds = %119, %116
  %123 = and i32 %1, 2, !dbg !18406
  %124 = icmp eq i32 %123, 0, !dbg !18408
  br i1 %124, label %275, label %125, !dbg !18409

125:                                              ; preds = %122
  %126 = zext i8 %2 to i16, !dbg !18410
  %127 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 39, i16 noundef zeroext 1, i16 noundef zeroext 3, i16 noundef zeroext %126) #22, !dbg !18412
  br label %275, !dbg !18413

128:                                              ; preds = %6
  %129 = and i32 %1, 1, !dbg !18414
  %130 = icmp eq i32 %129, 0, !dbg !18416
  br i1 %130, label %134, label %131, !dbg !18417

131:                                              ; preds = %128
  %132 = zext i8 %2 to i16, !dbg !18418
  %133 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 39, i16 noundef zeroext 1, i16 noundef zeroext 4, i16 noundef zeroext %132) #22, !dbg !18420
  br label %134, !dbg !18421

134:                                              ; preds = %131, %128
  %135 = and i32 %1, 2, !dbg !18422
  %136 = icmp eq i32 %135, 0, !dbg !18424
  br i1 %136, label %275, label %137, !dbg !18425

137:                                              ; preds = %134
  %138 = zext i8 %2 to i16, !dbg !18426
  %139 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 39, i16 noundef zeroext 1, i16 noundef zeroext 5, i16 noundef zeroext %138) #22, !dbg !18428
  br label %275, !dbg !18429

140:                                              ; preds = %6
  %141 = and i32 %1, 1, !dbg !18430
  %142 = icmp eq i32 %141, 0, !dbg !18432
  br i1 %142, label %146, label %143, !dbg !18433

143:                                              ; preds = %140
  %144 = zext i8 %2 to i16, !dbg !18434
  %145 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 39, i16 noundef zeroext 1, i16 noundef zeroext 6, i16 noundef zeroext %144) #22, !dbg !18436
  br label %146, !dbg !18437

146:                                              ; preds = %143, %140
  %147 = and i32 %1, 2, !dbg !18438
  %148 = icmp eq i32 %147, 0, !dbg !18440
  br i1 %148, label %275, label %149, !dbg !18441

149:                                              ; preds = %146
  %150 = zext i8 %2 to i16, !dbg !18442
  %151 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 39, i16 noundef zeroext 1, i16 noundef zeroext 7, i16 noundef zeroext %150) #22, !dbg !18444
  br label %275, !dbg !18445

152:                                              ; preds = %6
  %153 = and i32 %1, 1, !dbg !18446
  %154 = icmp eq i32 %153, 0, !dbg !18448
  br i1 %154, label %158, label %155, !dbg !18449

155:                                              ; preds = %152
  %156 = zext i8 %2 to i16, !dbg !18450
  %157 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 40, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext %156) #22, !dbg !18452
  br label %158, !dbg !18453

158:                                              ; preds = %155, %152
  %159 = and i32 %1, 2, !dbg !18454
  %160 = icmp eq i32 %159, 0, !dbg !18456
  br i1 %160, label %275, label %161, !dbg !18457

161:                                              ; preds = %158
  %162 = zext i8 %2 to i16, !dbg !18458
  %163 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 40, i16 noundef zeroext 1, i16 noundef zeroext 1, i16 noundef zeroext %162) #22, !dbg !18460
  br label %275, !dbg !18461

164:                                              ; preds = %6
  %165 = and i32 %1, 1, !dbg !18462
  %166 = icmp eq i32 %165, 0, !dbg !18464
  br i1 %166, label %170, label %167, !dbg !18465

167:                                              ; preds = %164
  %168 = zext i8 %2 to i16, !dbg !18466
  %169 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 40, i16 noundef zeroext 1, i16 noundef zeroext 2, i16 noundef zeroext %168) #22, !dbg !18468
  br label %170, !dbg !18469

170:                                              ; preds = %167, %164
  %171 = and i32 %1, 2, !dbg !18470
  %172 = icmp eq i32 %171, 0, !dbg !18472
  br i1 %172, label %275, label %173, !dbg !18473

173:                                              ; preds = %170
  %174 = zext i8 %2 to i16, !dbg !18474
  %175 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 40, i16 noundef zeroext 1, i16 noundef zeroext 3, i16 noundef zeroext %174) #22, !dbg !18476
  br label %275, !dbg !18477

176:                                              ; preds = %6
  %177 = and i32 %1, 1, !dbg !18478
  %178 = icmp eq i32 %177, 0, !dbg !18480
  br i1 %178, label %182, label %179, !dbg !18481

179:                                              ; preds = %176
  %180 = zext i8 %2 to i16, !dbg !18482
  %181 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 40, i16 noundef zeroext 1, i16 noundef zeroext 4, i16 noundef zeroext %180) #22, !dbg !18484
  br label %182, !dbg !18485

182:                                              ; preds = %179, %176
  %183 = and i32 %1, 2, !dbg !18486
  %184 = icmp eq i32 %183, 0, !dbg !18488
  br i1 %184, label %275, label %185, !dbg !18489

185:                                              ; preds = %182
  %186 = zext i8 %2 to i16, !dbg !18490
  %187 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 40, i16 noundef zeroext 1, i16 noundef zeroext 5, i16 noundef zeroext %186) #22, !dbg !18492
  br label %275, !dbg !18493

188:                                              ; preds = %6
  %189 = and i32 %1, 1, !dbg !18494
  %190 = icmp eq i32 %189, 0, !dbg !18496
  br i1 %190, label %194, label %191, !dbg !18497

191:                                              ; preds = %188
  %192 = zext i8 %2 to i16, !dbg !18498
  %193 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 40, i16 noundef zeroext 1, i16 noundef zeroext 6, i16 noundef zeroext %192) #22, !dbg !18500
  br label %194, !dbg !18501

194:                                              ; preds = %191, %188
  %195 = and i32 %1, 2, !dbg !18502
  %196 = icmp eq i32 %195, 0, !dbg !18504
  br i1 %196, label %275, label %197, !dbg !18505

197:                                              ; preds = %194
  %198 = zext i8 %2 to i16, !dbg !18506
  %199 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 40, i16 noundef zeroext 1, i16 noundef zeroext 7, i16 noundef zeroext %198) #22, !dbg !18508
  br label %275, !dbg !18509

200:                                              ; preds = %6
  %201 = and i32 %1, 1, !dbg !18510
  %202 = icmp eq i32 %201, 0, !dbg !18512
  br i1 %202, label %206, label %203, !dbg !18513

203:                                              ; preds = %200
  %204 = zext i8 %2 to i16, !dbg !18514
  %205 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 41, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext %204) #22, !dbg !18516
  br label %206, !dbg !18517

206:                                              ; preds = %203, %200
  %207 = and i32 %1, 2, !dbg !18518
  %208 = icmp eq i32 %207, 0, !dbg !18520
  br i1 %208, label %275, label %209, !dbg !18521

209:                                              ; preds = %206
  %210 = zext i8 %2 to i16, !dbg !18522
  %211 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 41, i16 noundef zeroext 1, i16 noundef zeroext 1, i16 noundef zeroext %210) #22, !dbg !18524
  br label %275, !dbg !18525

212:                                              ; preds = %6
  %213 = and i32 %1, 1, !dbg !18526
  %214 = icmp eq i32 %213, 0, !dbg !18528
  br i1 %214, label %218, label %215, !dbg !18529

215:                                              ; preds = %212
  %216 = zext i8 %2 to i16, !dbg !18530
  %217 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 41, i16 noundef zeroext 1, i16 noundef zeroext 2, i16 noundef zeroext %216) #22, !dbg !18532
  br label %218, !dbg !18533

218:                                              ; preds = %215, %212
  %219 = and i32 %1, 2, !dbg !18534
  %220 = icmp eq i32 %219, 0, !dbg !18536
  br i1 %220, label %275, label %221, !dbg !18537

221:                                              ; preds = %218
  %222 = zext i8 %2 to i16, !dbg !18538
  %223 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 41, i16 noundef zeroext 1, i16 noundef zeroext 3, i16 noundef zeroext %222) #22, !dbg !18540
  br label %275, !dbg !18541

224:                                              ; preds = %6
  %225 = and i32 %1, 1, !dbg !18542
  %226 = icmp eq i32 %225, 0, !dbg !18544
  br i1 %226, label %230, label %227, !dbg !18545

227:                                              ; preds = %224
  %228 = zext i8 %2 to i16, !dbg !18546
  %229 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 41, i16 noundef zeroext 1, i16 noundef zeroext 4, i16 noundef zeroext %228) #22, !dbg !18548
  br label %230, !dbg !18549

230:                                              ; preds = %227, %224
  %231 = and i32 %1, 2, !dbg !18550
  %232 = icmp eq i32 %231, 0, !dbg !18552
  br i1 %232, label %275, label %233, !dbg !18553

233:                                              ; preds = %230
  %234 = zext i8 %2 to i16, !dbg !18554
  %235 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 41, i16 noundef zeroext 1, i16 noundef zeroext 5, i16 noundef zeroext %234) #22, !dbg !18556
  br label %275, !dbg !18557

236:                                              ; preds = %6
  %237 = zext i8 %2 to i16, !dbg !18558
  %238 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 42, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext %237) #22, !dbg !18559
  br label %275, !dbg !18560

239:                                              ; preds = %6
  %240 = zext i8 %2 to i16, !dbg !18561
  %241 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 42, i16 noundef zeroext 1, i16 noundef zeroext 1, i16 noundef zeroext %240) #22, !dbg !18562
  br label %275, !dbg !18563

242:                                              ; preds = %6
  %243 = zext i8 %2 to i16, !dbg !18564
  %244 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 42, i16 noundef zeroext 1, i16 noundef zeroext 2, i16 noundef zeroext %243) #22, !dbg !18565
  br label %275, !dbg !18566

245:                                              ; preds = %6
  %246 = zext i8 %2 to i16, !dbg !18567
  %247 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 42, i16 noundef zeroext 1, i16 noundef zeroext 3, i16 noundef zeroext %246) #22, !dbg !18568
  br label %275, !dbg !18569

248:                                              ; preds = %6
  %249 = zext i8 %2 to i16, !dbg !18570
  %250 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 42, i16 noundef zeroext 1, i16 noundef zeroext 4, i16 noundef zeroext %249) #22, !dbg !18571
  br label %275, !dbg !18572

251:                                              ; preds = %6
  %252 = zext i8 %2 to i16, !dbg !18573
  %253 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 42, i16 noundef zeroext 1, i16 noundef zeroext 5, i16 noundef zeroext %252) #22, !dbg !18574
  br label %275, !dbg !18575

254:                                              ; preds = %6
  %255 = zext i8 %2 to i16, !dbg !18576
  %256 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 42, i16 noundef zeroext 1, i16 noundef zeroext 6, i16 noundef zeroext %255) #22, !dbg !18577
  br label %275, !dbg !18578

257:                                              ; preds = %6
  %258 = zext i8 %2 to i16, !dbg !18579
  %259 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 42, i16 noundef zeroext 1, i16 noundef zeroext 7, i16 noundef zeroext %258) #22, !dbg !18580
  br label %275, !dbg !18581

260:                                              ; preds = %6
  %261 = zext i8 %2 to i16, !dbg !18582
  %262 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 43, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext %261) #22, !dbg !18583
  br label %275, !dbg !18584

263:                                              ; preds = %6
  %264 = zext i8 %2 to i16, !dbg !18585
  %265 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 43, i16 noundef zeroext 1, i16 noundef zeroext 1, i16 noundef zeroext %264) #22, !dbg !18586
  br label %275, !dbg !18587

266:                                              ; preds = %6
  %267 = zext i8 %2 to i16, !dbg !18588
  %268 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 43, i16 noundef zeroext 1, i16 noundef zeroext 2, i16 noundef zeroext %267) #22, !dbg !18589
  br label %275, !dbg !18590

269:                                              ; preds = %6
  %270 = zext i8 %2 to i16, !dbg !18591
  %271 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 43, i16 noundef zeroext 1, i16 noundef zeroext 3, i16 noundef zeroext %270) #22, !dbg !18592
  br label %275, !dbg !18593

272:                                              ; preds = %6
  %273 = zext i8 %2 to i16, !dbg !18594
  %274 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 43, i16 noundef zeroext 1, i16 noundef zeroext 4, i16 noundef zeroext %273) #22, !dbg !18595
  br label %275, !dbg !18596

275:                                              ; preds = %236, %239, %242, %245, %248, %251, %254, %257, %260, %263, %266, %269, %272, %6, %17, %14, %29, %26, %41, %38, %53, %50, %65, %62, %77, %74, %89, %86, %101, %98, %113, %110, %125, %122, %137, %134, %149, %146, %161, %158, %173, %170, %185, %182, %197, %194, %209, %206, %221, %218, %233, %230, %3
  %276 = phi i32 [ -1, %3 ], [ 0, %230 ], [ 0, %233 ], [ 0, %218 ], [ 0, %221 ], [ 0, %206 ], [ 0, %209 ], [ 0, %194 ], [ 0, %197 ], [ 0, %182 ], [ 0, %185 ], [ 0, %170 ], [ 0, %173 ], [ 0, %158 ], [ 0, %161 ], [ 0, %146 ], [ 0, %149 ], [ 0, %134 ], [ 0, %137 ], [ 0, %122 ], [ 0, %125 ], [ 0, %110 ], [ 0, %113 ], [ 0, %98 ], [ 0, %101 ], [ 0, %86 ], [ 0, %89 ], [ 0, %74 ], [ 0, %77 ], [ 0, %62 ], [ 0, %65 ], [ 0, %50 ], [ 0, %53 ], [ 0, %38 ], [ 0, %41 ], [ 0, %26 ], [ 0, %29 ], [ 0, %14 ], [ 0, %17 ], [ 0, %6 ], [ 0, %272 ], [ 0, %269 ], [ 0, %266 ], [ 0, %263 ], [ 0, %260 ], [ 0, %257 ], [ 0, %254 ], [ 0, %251 ], [ 0, %248 ], [ 0, %245 ], [ 0, %242 ], [ 0, %239 ], [ 0, %236 ], !dbg !18247
  ret i32 %276, !dbg !18597
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pmu_disable_interrupt(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !18598 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18602, metadata !DIExpression()), !dbg !18606
  call void @llvm.dbg.value(metadata i32 %1, metadata !18603, metadata !DIExpression()), !dbg !18606
  call void @llvm.dbg.value(metadata i32 -1, metadata !18604, metadata !DIExpression()), !dbg !18606
  %3 = tail call i32 @save_and_set_interrupt_mask() #22, !dbg !18607
  call void @llvm.dbg.value(metadata i32 %3, metadata !18605, metadata !DIExpression()), !dbg !18606
  %4 = tail call i32 @pmu_enable_interrupt(i32 noundef %0, i32 noundef %1, i8 noundef zeroext 0) #23, !dbg !18608
  %5 = getelementptr inbounds [32 x %struct.pmu_function_t], [32 x %struct.pmu_function_t]* @pmu_function_table, i32 0, i32 %0, i32 3, !dbg !18609
  store i8 1, i8* %5, align 1, !dbg !18610
  tail call void @restore_interrupt_mask(i32 noundef %3) #22, !dbg !18611
  call void @llvm.dbg.value(metadata i32 0, metadata !18604, metadata !DIExpression()), !dbg !18606
  ret i32 0, !dbg !18612
}

; Function Attrs: noinline nounwind optsize
define dso_local void @pmu_init() local_unnamed_addr #0 !dbg !18613 {
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.pmu_init, i32 0, i32 0), i32 noundef 98, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.307, i32 0, i32 0)) #22, !dbg !18614
  tail call void @pmu_init_mt6385() #22, !dbg !18615
  ret void, !dbg !18616
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @pmu_set_register_value(i16 noundef zeroext %0, i16 noundef zeroext %1, i16 noundef zeroext %2, i16 noundef zeroext %3) local_unnamed_addr #0 !dbg !18617 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !18619, metadata !DIExpression()), !dbg !18623
  call void @llvm.dbg.value(metadata i16 %1, metadata !18620, metadata !DIExpression()), !dbg !18623
  call void @llvm.dbg.value(metadata i16 %2, metadata !18621, metadata !DIExpression()), !dbg !18623
  call void @llvm.dbg.value(metadata i16 %3, metadata !18622, metadata !DIExpression()), !dbg !18623
  %5 = tail call zeroext i1 @pmu_set_register_value_mt6385(i16 noundef zeroext %0, i16 noundef zeroext %1, i16 noundef zeroext %2, i16 noundef zeroext %3) #22, !dbg !18624
  ret i1 %5, !dbg !18625
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i8 @pmu_get_register_value(i16 noundef zeroext %0, i16 noundef zeroext %1, i16 noundef zeroext %2) local_unnamed_addr #0 !dbg !18626 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !18628, metadata !DIExpression()), !dbg !18631
  call void @llvm.dbg.value(metadata i16 %1, metadata !18629, metadata !DIExpression()), !dbg !18631
  call void @llvm.dbg.value(metadata i16 %2, metadata !18630, metadata !DIExpression()), !dbg !18631
  %4 = tail call zeroext i8 @pmu_get_register_value_mt6385(i16 noundef zeroext %0, i16 noundef zeroext %1, i16 noundef zeroext %2) #22, !dbg !18632
  ret i8 %4, !dbg !18633
}

; Function Attrs: noinline nounwind optsize
define dso_local void @pmu_control_mtcmos() local_unnamed_addr #0 !dbg !18634 {
  tail call void @pmu_control_mtcmos_mt6385() #22, !dbg !18635
  ret void, !dbg !18636
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i8 @pmu_get_vcore_voltage() local_unnamed_addr #0 !dbg !18637 {
  %1 = tail call zeroext i8 @pmu_get_vcore_voltage_mt6385() #22, !dbg !18638
  ret i8 %1, !dbg !18639
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i8 @pmu_set_vcore_voltage(i8 noundef zeroext %0, i8 noundef zeroext %1) local_unnamed_addr #0 !dbg !18640 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !18642, metadata !DIExpression()), !dbg !18644
  call void @llvm.dbg.value(metadata i8 %1, metadata !18643, metadata !DIExpression()), !dbg !18644
  %3 = tail call zeroext i8 @pmu_set_vcore_voltage_mt6385(i8 noundef zeroext %0, i8 noundef zeroext %1) #22, !dbg !18645
  ret i8 %3, !dbg !18646
}

; Function Attrs: noinline nounwind optsize
define dso_local void @pmu_set_vcore_s1_buck() local_unnamed_addr #0 !dbg !18647 {
  tail call void @pmu_set_vcore_s1_buck_mt6385() #22, !dbg !18648
  ret void, !dbg !18649
}

; Function Attrs: noinline nounwind optsize
define dso_local void @pmu_ctrl_driver_power(i8 noundef zeroext %0, i8 noundef zeroext %1) local_unnamed_addr #0 !dbg !18650 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !18652, metadata !DIExpression()), !dbg !18654
  call void @llvm.dbg.value(metadata i8 %1, metadata !18653, metadata !DIExpression()), !dbg !18654
  tail call fastcc void @internal_pmu_ctrl_power(i8 noundef zeroext %0, i8 noundef zeroext %1) #23, !dbg !18655
  ret void, !dbg !18656
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @internal_pmu_ctrl_power(i8 noundef zeroext %0, i8 noundef zeroext %1) unnamed_addr #0 !dbg !18657 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !18659, metadata !DIExpression()), !dbg !18661
  call void @llvm.dbg.value(metadata i8 %1, metadata !18660, metadata !DIExpression()), !dbg !18661
  switch i8 %0, label %14 [
    i8 1, label %3
    i8 2, label %4
    i8 3, label %5
    i8 4, label %7
    i8 5, label %9
    i8 7, label %11
    i8 8, label %12
    i8 9, label %13
  ], !dbg !18662

3:                                                ; preds = %2
  tail call void @pmu_ctrl_vbt_ldo_mt6385(i8 noundef zeroext %1) #22, !dbg !18663
  br label %15, !dbg !18665

4:                                                ; preds = %2
  tail call void @pmu_ctrl_va28_ldo_mt6385(i8 noundef zeroext %1) #22, !dbg !18666
  br label %15, !dbg !18667

5:                                                ; preds = %2
  %6 = zext i8 %1 to i32, !dbg !18668
  tail call void @PMIC_VR_CONTROL(i32 noundef 6, i32 noundef %6) #22, !dbg !18669
  br label %15, !dbg !18670

7:                                                ; preds = %2
  %8 = zext i8 %1 to i32, !dbg !18671
  tail call void @PMIC_VR_CONTROL(i32 noundef 10, i32 noundef %8) #22, !dbg !18672
  br label %15, !dbg !18673

9:                                                ; preds = %2
  %10 = zext i8 %1 to i32, !dbg !18674
  tail call void @PMIC_VR_CONTROL(i32 noundef 9, i32 noundef %10) #22, !dbg !18675
  br label %15, !dbg !18676

11:                                               ; preds = %2
  tail call void @pmu_ctrl_va28_ldo_mt6385(i8 noundef zeroext %1) #22, !dbg !18677
  br label %15, !dbg !18678

12:                                               ; preds = %2
  tail call void @pmu_ctrl_va28_ldo_mt6385(i8 noundef zeroext %1) #22, !dbg !18679
  br label %15, !dbg !18680

13:                                               ; preds = %2
  tail call void @pmu_ctrl_va28_ldo_mt6385(i8 noundef zeroext %1) #22, !dbg !18681
  br label %15, !dbg !18682

14:                                               ; preds = %2
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__FUNCTION__.internal_pmu_ctrl_power, i32 0, i32 0), i32 noundef 225, i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.1.316, i32 0, i32 0)) #22, !dbg !18683
  br label %15, !dbg !18684

15:                                               ; preds = %14, %13, %12, %11, %9, %7, %5, %4, %3
  ret void, !dbg !18685
}

; Function Attrs: noinline nounwind optsize
define dso_local void @pmu_audio_lock_voltage() local_unnamed_addr #0 !dbg !18686 {
  tail call fastcc void @internal_pmu_audio_lock_voltage() #23, !dbg !18687
  ret void, !dbg !18688
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @internal_pmu_audio_lock_voltage() unnamed_addr #0 !dbg !18689 {
  tail call void @PMIC_VCORE_VOSEL_CONFIG(i32 noundef 2, i32 noundef 4) #22, !dbg !18690
  tail call void @PMIC_VCORE_VOSEL_CONFIG(i32 noundef 4, i32 noundef 2) #22, !dbg !18691
  ret void, !dbg !18692
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @pmu_audio_unlock_voltage() local_unnamed_addr #10 !dbg !18693 {
  ret void, !dbg !18694
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i8 @pmu_get_usb_input_status() local_unnamed_addr #0 !dbg !18695 {
  %1 = tail call zeroext i8 @pmu_get_usb_input_status_mt6385() #22, !dbg !18696
  ret i8 %1, !dbg !18697
}

; Function Attrs: noinline nounwind optsize
define dso_local void @pmu_enter_power_off() local_unnamed_addr #0 !dbg !18698 {
  tail call void @pmu_enter_power_off_mt6385() #22, !dbg !18699
  ret void, !dbg !18700
}

; Function Attrs: noinline nounwind optsize
define dso_local void @pmu_reset() local_unnamed_addr #0 !dbg !18701 {
  tail call void @pmu_reset_mt6385() #22, !dbg !18702
  ret void, !dbg !18703
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @pmu_get_type() local_unnamed_addr #10 !dbg !18704 {
  ret i32 1, !dbg !18707
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i1 @null_pmu_set_register_value(i16 noundef zeroext %0, i16 noundef zeroext %1, i16 noundef zeroext %2, i16 noundef zeroext %3) local_unnamed_addr #10 !dbg !18708 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !18710, metadata !DIExpression()), !dbg !18714
  call void @llvm.dbg.value(metadata i16 %1, metadata !18711, metadata !DIExpression()), !dbg !18714
  call void @llvm.dbg.value(metadata i16 %2, metadata !18712, metadata !DIExpression()), !dbg !18714
  call void @llvm.dbg.value(metadata i16 %3, metadata !18713, metadata !DIExpression()), !dbg !18714
  ret i1 true, !dbg !18715
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i8 @null_pmu_get_register_value(i16 noundef zeroext %0, i16 noundef zeroext %1, i16 noundef zeroext %2) local_unnamed_addr #10 !dbg !18716 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !18718, metadata !DIExpression()), !dbg !18721
  call void @llvm.dbg.value(metadata i16 %1, metadata !18719, metadata !DIExpression()), !dbg !18721
  call void @llvm.dbg.value(metadata i16 %2, metadata !18720, metadata !DIExpression()), !dbg !18721
  ret i8 0, !dbg !18722
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @null_function() local_unnamed_addr #10 !dbg !18723 {
  ret void, !dbg !18724
}

; Function Attrs: noinline nounwind optsize
define dso_local void @log_hal_error_internal(i8* nocapture noundef readnone %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #0 !dbg !18725 {
  %4 = alloca %struct.__va_list, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !18729, metadata !DIExpression()), !dbg !18742
  call void @llvm.dbg.value(metadata i32 %1, metadata !18730, metadata !DIExpression()), !dbg !18742
  call void @llvm.dbg.value(metadata i8* %2, metadata !18731, metadata !DIExpression()), !dbg !18742
  %6 = bitcast %struct.__va_list* %4 to i8*, !dbg !18743
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #24, !dbg !18743
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !18732, metadata !DIExpression()), !dbg !18744
  %7 = bitcast i32* %5 to i8*, !dbg !18745
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #24, !dbg !18745
  call void @llvm.dbg.value(metadata i32* %5, metadata !18741, metadata !DIExpression(DW_OP_deref)), !dbg !18742
  %8 = call i32 @hal_nvic_save_and_set_interrupt_mask(i32* noundef nonnull %5) #22, !dbg !18746
  call void @llvm.va_start(i8* nonnull %6), !dbg !18747
  %9 = bitcast %struct.__va_list* %4 to i32*, !dbg !18748
  %10 = load i32, i32* %9, align 4, !dbg !18748
  %11 = insertvalue [1 x i32] poison, i32 %10, 0, !dbg !18748
  %12 = call i32 @vprintf(i8* noundef %2, [1 x i32] %11) #22, !dbg !18748
  call void @llvm.va_end(i8* nonnull %6), !dbg !18749
  %13 = load i32, i32* %5, align 4, !dbg !18750
  call void @llvm.dbg.value(metadata i32 %13, metadata !18741, metadata !DIExpression()), !dbg !18742
  %14 = call i32 @hal_nvic_restore_interrupt_mask(i32 noundef %13) #22, !dbg !18751
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #24, !dbg !18752
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #24, !dbg !18752
  ret void, !dbg !18752
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #20

; Function Attrs: optsize
declare dso_local i32 @vprintf(i8* noundef, [1 x i32]) local_unnamed_addr #5

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #20

; Function Attrs: noinline nounwind optsize
define dso_local void @log_hal_warning_internal(i8* nocapture noundef readnone %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #0 !dbg !18753 {
  %4 = alloca %struct.__va_list, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !18755, metadata !DIExpression()), !dbg !18760
  call void @llvm.dbg.value(metadata i32 %1, metadata !18756, metadata !DIExpression()), !dbg !18760
  call void @llvm.dbg.value(metadata i8* %2, metadata !18757, metadata !DIExpression()), !dbg !18760
  %6 = bitcast %struct.__va_list* %4 to i8*, !dbg !18761
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #24, !dbg !18761
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !18758, metadata !DIExpression()), !dbg !18762
  %7 = bitcast i32* %5 to i8*, !dbg !18763
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #24, !dbg !18763
  call void @llvm.dbg.value(metadata i32* %5, metadata !18759, metadata !DIExpression(DW_OP_deref)), !dbg !18760
  %8 = call i32 @hal_nvic_save_and_set_interrupt_mask(i32* noundef nonnull %5) #22, !dbg !18764
  call void @llvm.va_start(i8* nonnull %6), !dbg !18765
  %9 = bitcast %struct.__va_list* %4 to i32*, !dbg !18766
  %10 = load i32, i32* %9, align 4, !dbg !18766
  %11 = insertvalue [1 x i32] poison, i32 %10, 0, !dbg !18766
  %12 = call i32 @vprintf(i8* noundef %2, [1 x i32] %11) #22, !dbg !18766
  call void @llvm.va_end(i8* nonnull %6), !dbg !18767
  %13 = load i32, i32* %5, align 4, !dbg !18768
  call void @llvm.dbg.value(metadata i32 %13, metadata !18759, metadata !DIExpression()), !dbg !18760
  %14 = call i32 @hal_nvic_restore_interrupt_mask(i32 noundef %13) #22, !dbg !18769
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #24, !dbg !18770
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #24, !dbg !18770
  ret void, !dbg !18770
}

; Function Attrs: noinline nounwind optsize
define dso_local void @log_hal_info_internal(i8* nocapture noundef readnone %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #0 !dbg !18771 {
  %4 = alloca %struct.__va_list, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !18773, metadata !DIExpression()), !dbg !18778
  call void @llvm.dbg.value(metadata i32 %1, metadata !18774, metadata !DIExpression()), !dbg !18778
  call void @llvm.dbg.value(metadata i8* %2, metadata !18775, metadata !DIExpression()), !dbg !18778
  %6 = bitcast %struct.__va_list* %4 to i8*, !dbg !18779
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #24, !dbg !18779
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !18776, metadata !DIExpression()), !dbg !18780
  %7 = bitcast i32* %5 to i8*, !dbg !18781
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #24, !dbg !18781
  call void @llvm.dbg.value(metadata i32* %5, metadata !18777, metadata !DIExpression(DW_OP_deref)), !dbg !18778
  %8 = call i32 @hal_nvic_save_and_set_interrupt_mask(i32* noundef nonnull %5) #22, !dbg !18782
  call void @llvm.va_start(i8* nonnull %6), !dbg !18783
  %9 = bitcast %struct.__va_list* %4 to i32*, !dbg !18784
  %10 = load i32, i32* %9, align 4, !dbg !18784
  %11 = insertvalue [1 x i32] poison, i32 %10, 0, !dbg !18784
  %12 = call i32 @vprintf(i8* noundef %2, [1 x i32] %11) #22, !dbg !18784
  call void @llvm.va_end(i8* nonnull %6), !dbg !18785
  %13 = load i32, i32* %5, align 4, !dbg !18786
  call void @llvm.dbg.value(metadata i32 %13, metadata !18777, metadata !DIExpression()), !dbg !18778
  %14 = call i32 @hal_nvic_restore_interrupt_mask(i32 noundef %13) #22, !dbg !18787
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #24, !dbg !18788
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #24, !dbg !18788
  ret void, !dbg !18788
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @log_hal_dump_internal(i8* nocapture noundef %0, i32 noundef %1, i8* nocapture noundef %2, i8* nocapture noundef %3, i32 noundef %4, ...) local_unnamed_addr #10 !dbg !18789 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !18795, metadata !DIExpression()), !dbg !18800
  call void @llvm.dbg.value(metadata i32 %1, metadata !18796, metadata !DIExpression()), !dbg !18800
  call void @llvm.dbg.value(metadata i8* %2, metadata !18797, metadata !DIExpression()), !dbg !18800
  call void @llvm.dbg.value(metadata i8* %3, metadata !18798, metadata !DIExpression()), !dbg !18800
  call void @llvm.dbg.value(metadata i32 %4, metadata !18799, metadata !DIExpression()), !dbg !18800
  ret void, !dbg !18801
}

; Function Attrs: noinline nounwind optsize
define dso_local void @PMIC_VR_PSI_PMOD_CONFIG(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !18802 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18807, metadata !DIExpression()), !dbg !18811
  call void @llvm.dbg.value(metadata i32 %1, metadata !18808, metadata !DIExpression()), !dbg !18811
  call void @llvm.dbg.value(metadata i32 %2, metadata !18809, metadata !DIExpression()), !dbg !18811
  tail call void @pmu_set_vrc_key_mt6385(i32 noundef 0) #23, !dbg !18812
  tail call void @pmu_set_ovr_mode_mt6385(i32 noundef 1) #23, !dbg !18813
  switch i32 %0, label %240 [
    i32 0, label %4
    i32 1, label %21
    i32 2, label %38
    i32 3, label %55
    i32 4, label %120
    i32 5, label %146
    i32 6, label %166
    i32 7, label %183
    i32 8, label %200
    i32 9, label %217
    i32 10, label %234
    i32 11, label %237
  ], !dbg !18814

4:                                                ; preds = %3
  switch i32 %1, label %20 [
    i32 0, label %5
    i32 1, label %8
    i32 2, label %11
    i32 3, label %14
    i32 4, label %17
  ], !dbg !18815

5:                                                ; preds = %4
  %6 = trunc i32 %2 to i16, !dbg !18817
  %7 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 230, i16 noundef zeroext 3, i16 noundef zeroext 2, i16 noundef zeroext %6) #22, !dbg !18819
  br label %241, !dbg !18820

8:                                                ; preds = %4
  %9 = trunc i32 %2 to i16, !dbg !18821
  %10 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 259, i16 noundef zeroext 3, i16 noundef zeroext 1, i16 noundef zeroext %9) #22, !dbg !18822
  br label %241, !dbg !18823

11:                                               ; preds = %4
  %12 = trunc i32 %2 to i16, !dbg !18824
  %13 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 261, i16 noundef zeroext 3, i16 noundef zeroext 1, i16 noundef zeroext %12) #22, !dbg !18825
  br label %241, !dbg !18826

14:                                               ; preds = %4
  %15 = trunc i32 %2 to i16, !dbg !18827
  %16 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 263, i16 noundef zeroext 3, i16 noundef zeroext 1, i16 noundef zeroext %15) #22, !dbg !18828
  br label %241, !dbg !18829

17:                                               ; preds = %4
  %18 = trunc i32 %2 to i16, !dbg !18830
  %19 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 264, i16 noundef zeroext 3, i16 noundef zeroext 1, i16 noundef zeroext %18) #22, !dbg !18831
  br label %241, !dbg !18832

20:                                               ; preds = %4
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__FUNCTION__.PMIC_VR_PSI_PMOD_CONFIG, i32 0, i32 0), i32 noundef 85, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.327, i32 0, i32 0)) #22, !dbg !18833
  br label %241, !dbg !18834

21:                                               ; preds = %3
  switch i32 %1, label %37 [
    i32 0, label %22
    i32 1, label %25
    i32 2, label %28
    i32 3, label %31
    i32 4, label %34
  ], !dbg !18835

22:                                               ; preds = %21
  %23 = trunc i32 %2 to i16, !dbg !18836
  %24 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 233, i16 noundef zeroext 3, i16 noundef zeroext 2, i16 noundef zeroext %23) #22, !dbg !18838
  br label %241, !dbg !18839

25:                                               ; preds = %21
  %26 = trunc i32 %2 to i16, !dbg !18840
  %27 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 272, i16 noundef zeroext 3, i16 noundef zeroext 1, i16 noundef zeroext %26) #22, !dbg !18841
  br label %241, !dbg !18842

28:                                               ; preds = %21
  %29 = trunc i32 %2 to i16, !dbg !18843
  %30 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 272, i16 noundef zeroext 3, i16 noundef zeroext 5, i16 noundef zeroext %29) #22, !dbg !18844
  br label %241, !dbg !18845

31:                                               ; preds = %21
  %32 = trunc i32 %2 to i16, !dbg !18846
  %33 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 273, i16 noundef zeroext 3, i16 noundef zeroext 1, i16 noundef zeroext %32) #22, !dbg !18847
  br label %241, !dbg !18848

34:                                               ; preds = %21
  %35 = trunc i32 %2 to i16, !dbg !18849
  %36 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 273, i16 noundef zeroext 3, i16 noundef zeroext 5, i16 noundef zeroext %35) #22, !dbg !18850
  br label %241, !dbg !18851

37:                                               ; preds = %21
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__FUNCTION__.PMIC_VR_PSI_PMOD_CONFIG, i32 0, i32 0), i32 noundef 108, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.327, i32 0, i32 0)) #22, !dbg !18852
  br label %241, !dbg !18853

38:                                               ; preds = %3
  switch i32 %1, label %54 [
    i32 0, label %39
    i32 1, label %42
    i32 2, label %45
    i32 3, label %48
    i32 4, label %51
  ], !dbg !18854

39:                                               ; preds = %38
  %40 = trunc i32 %2 to i16, !dbg !18855
  %41 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 234, i16 noundef zeroext 3, i16 noundef zeroext 2, i16 noundef zeroext %40) #22, !dbg !18857
  br label %241, !dbg !18858

42:                                               ; preds = %38
  %43 = trunc i32 %2 to i16, !dbg !18859
  %44 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 281, i16 noundef zeroext 3, i16 noundef zeroext 1, i16 noundef zeroext %43) #22, !dbg !18860
  br label %241, !dbg !18861

45:                                               ; preds = %38
  %46 = trunc i32 %2 to i16, !dbg !18862
  %47 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 281, i16 noundef zeroext 3, i16 noundef zeroext 5, i16 noundef zeroext %46) #22, !dbg !18863
  br label %241, !dbg !18864

48:                                               ; preds = %38
  %49 = trunc i32 %2 to i16, !dbg !18865
  %50 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 282, i16 noundef zeroext 3, i16 noundef zeroext 1, i16 noundef zeroext %49) #22, !dbg !18866
  br label %241, !dbg !18867

51:                                               ; preds = %38
  %52 = trunc i32 %2 to i16, !dbg !18868
  %53 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 282, i16 noundef zeroext 3, i16 noundef zeroext 5, i16 noundef zeroext %52) #22, !dbg !18869
  br label %241, !dbg !18870

54:                                               ; preds = %38
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__FUNCTION__.PMIC_VR_PSI_PMOD_CONFIG, i32 0, i32 0), i32 noundef 131, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.327, i32 0, i32 0)) #22, !dbg !18871
  br label %241, !dbg !18872

55:                                               ; preds = %3
  %56 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 88, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 41) #22, !dbg !18873
  %57 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 89, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 71) #22, !dbg !18874
  %58 = tail call zeroext i8 @pmu_get_register_value(i16 noundef zeroext 0, i16 noundef zeroext 255, i16 noundef zeroext 0) #22, !dbg !18875
  call void @llvm.dbg.value(metadata i8 %58, metadata !18810, metadata !DIExpression()), !dbg !18811
  switch i8 %58, label %117 [
    i8 16, label %59
    i8 17, label %88
  ], !dbg !18876

59:                                               ; preds = %55
  switch i32 %1, label %87 [
    i32 0, label %60
    i32 1, label %63
    i32 2, label %66
    i32 3, label %69
    i32 4, label %78
  ], !dbg !18877

60:                                               ; preds = %59
  %61 = trunc i32 %2 to i16, !dbg !18880
  %62 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 235, i16 noundef zeroext 3, i16 noundef zeroext 2, i16 noundef zeroext %61) #22, !dbg !18882
  br label %117, !dbg !18883

63:                                               ; preds = %59
  %64 = trunc i32 %2 to i16, !dbg !18884
  %65 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 793, i16 noundef zeroext 3, i16 noundef zeroext 1, i16 noundef zeroext %64) #22, !dbg !18885
  br label %117, !dbg !18886

66:                                               ; preds = %59
  %67 = trunc i32 %2 to i16, !dbg !18887
  %68 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 793, i16 noundef zeroext 3, i16 noundef zeroext 5, i16 noundef zeroext %67) #22, !dbg !18888
  br label %117, !dbg !18889

69:                                               ; preds = %59
  %70 = trunc i32 %2 to i16, !dbg !18890
  %71 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 794, i16 noundef zeroext 3, i16 noundef zeroext 1, i16 noundef zeroext %70) #22, !dbg !18891
  %72 = icmp ult i32 %2, 2, !dbg !18892
  %73 = load i16, i16* @pmu_mtcmos_vio28_pmod, align 2, !dbg !18894
  br i1 %72, label %74, label %76, !dbg !18892

74:                                               ; preds = %69
  %75 = or i16 %73, 1, !dbg !18895
  store i16 %75, i16* @pmu_mtcmos_vio28_pmod, align 2, !dbg !18895
  br label %117, !dbg !18897

76:                                               ; preds = %69
  %77 = and i16 %73, -2, !dbg !18898
  store i16 %77, i16* @pmu_mtcmos_vio28_pmod, align 2, !dbg !18898
  br label %117

78:                                               ; preds = %59
  %79 = trunc i32 %2 to i16, !dbg !18900
  %80 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 794, i16 noundef zeroext 3, i16 noundef zeroext 5, i16 noundef zeroext %79) #22, !dbg !18901
  %81 = icmp ult i32 %2, 2, !dbg !18902
  %82 = load i16, i16* @pmu_mtcmos_vio28_pmod, align 2, !dbg !18904
  br i1 %81, label %83, label %85, !dbg !18902

83:                                               ; preds = %78
  %84 = or i16 %82, 2, !dbg !18905
  store i16 %84, i16* @pmu_mtcmos_vio28_pmod, align 2, !dbg !18905
  br label %117, !dbg !18907

85:                                               ; preds = %78
  %86 = and i16 %82, 2, !dbg !18908
  store i16 %86, i16* @pmu_mtcmos_vio28_pmod, align 2, !dbg !18908
  br label %117

87:                                               ; preds = %59
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__FUNCTION__.PMIC_VR_PSI_PMOD_CONFIG, i32 0, i32 0), i32 noundef 170, i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.328, i32 0, i32 0)) #22, !dbg !18910
  br label %117, !dbg !18911

88:                                               ; preds = %55
  switch i32 %1, label %116 [
    i32 0, label %89
    i32 1, label %92
    i32 2, label %95
    i32 3, label %98
    i32 4, label %107
  ], !dbg !18912

89:                                               ; preds = %88
  %90 = trunc i32 %2 to i16, !dbg !18915
  %91 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 235, i16 noundef zeroext 3, i16 noundef zeroext 2, i16 noundef zeroext %90) #22, !dbg !18917
  br label %117, !dbg !18918

92:                                               ; preds = %88
  %93 = trunc i32 %2 to i16, !dbg !18919
  %94 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 99, i16 noundef zeroext 3, i16 noundef zeroext 0, i16 noundef zeroext %93) #22, !dbg !18920
  br label %117, !dbg !18921

95:                                               ; preds = %88
  %96 = trunc i32 %2 to i16, !dbg !18922
  %97 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 99, i16 noundef zeroext 3, i16 noundef zeroext 4, i16 noundef zeroext %96) #22, !dbg !18923
  br label %117, !dbg !18924

98:                                               ; preds = %88
  %99 = trunc i32 %2 to i16, !dbg !18925
  %100 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 101, i16 noundef zeroext 3, i16 noundef zeroext 4, i16 noundef zeroext %99) #22, !dbg !18926
  %101 = icmp ult i32 %2, 2, !dbg !18927
  %102 = load i16, i16* @pmu_mtcmos_vio28_pmod, align 2, !dbg !18929
  br i1 %101, label %103, label %105, !dbg !18927

103:                                              ; preds = %98
  %104 = or i16 %102, 1, !dbg !18930
  store i16 %104, i16* @pmu_mtcmos_vio28_pmod, align 2, !dbg !18930
  br label %117, !dbg !18932

105:                                              ; preds = %98
  %106 = and i16 %102, -2, !dbg !18933
  store i16 %106, i16* @pmu_mtcmos_vio28_pmod, align 2, !dbg !18933
  br label %117

107:                                              ; preds = %88
  %108 = trunc i32 %2 to i16, !dbg !18935
  %109 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 100, i16 noundef zeroext 3, i16 noundef zeroext 0, i16 noundef zeroext %108) #22, !dbg !18936
  %110 = icmp ult i32 %2, 2, !dbg !18937
  %111 = load i16, i16* @pmu_mtcmos_vio28_pmod, align 2, !dbg !18939
  br i1 %110, label %112, label %114, !dbg !18937

112:                                              ; preds = %107
  %113 = or i16 %111, 2, !dbg !18940
  store i16 %113, i16* @pmu_mtcmos_vio28_pmod, align 2, !dbg !18940
  br label %117, !dbg !18942

114:                                              ; preds = %107
  %115 = and i16 %111, 2, !dbg !18943
  store i16 %115, i16* @pmu_mtcmos_vio28_pmod, align 2, !dbg !18943
  br label %117

116:                                              ; preds = %88
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__FUNCTION__.PMIC_VR_PSI_PMOD_CONFIG, i32 0, i32 0), i32 noundef 203, i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.328, i32 0, i32 0)) #22, !dbg !18945
  br label %117, !dbg !18946

117:                                              ; preds = %83, %85, %74, %76, %87, %66, %63, %60, %55, %89, %92, %95, %116, %105, %103, %114, %112
  %118 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 88, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 0) #22, !dbg !18947
  %119 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 89, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 0) #22, !dbg !18948
  br label %241, !dbg !18949

120:                                              ; preds = %3
  switch i32 %1, label %145 [
    i32 0, label %121
    i32 1, label %124
    i32 2, label %127
    i32 3, label %130
    i32 4, label %133
    i32 5, label %136
    i32 6, label %139
    i32 7, label %142
  ], !dbg !18950

121:                                              ; preds = %120
  %122 = trunc i32 %2 to i16, !dbg !18951
  %123 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 67, i16 noundef zeroext 3, i16 noundef zeroext 2, i16 noundef zeroext %122) #22, !dbg !18953
  br label %241, !dbg !18954

124:                                              ; preds = %120
  %125 = trunc i32 %2 to i16, !dbg !18955
  %126 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 67, i16 noundef zeroext 3, i16 noundef zeroext 2, i16 noundef zeroext %125) #22, !dbg !18956
  br label %241, !dbg !18957

127:                                              ; preds = %120
  %128 = trunc i32 %2 to i16, !dbg !18958
  %129 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 67, i16 noundef zeroext 3, i16 noundef zeroext 2, i16 noundef zeroext %128) #22, !dbg !18959
  br label %241, !dbg !18960

130:                                              ; preds = %120
  %131 = trunc i32 %2 to i16, !dbg !18961
  %132 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 67, i16 noundef zeroext 3, i16 noundef zeroext 4, i16 noundef zeroext %131) #22, !dbg !18962
  br label %241, !dbg !18963

133:                                              ; preds = %120
  %134 = trunc i32 %2 to i16, !dbg !18964
  %135 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 67, i16 noundef zeroext 3, i16 noundef zeroext 4, i16 noundef zeroext %134) #22, !dbg !18965
  br label %241, !dbg !18966

136:                                              ; preds = %120
  %137 = trunc i32 %2 to i16, !dbg !18967
  %138 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 67, i16 noundef zeroext 3, i16 noundef zeroext 0, i16 noundef zeroext %137) #22, !dbg !18968
  br label %241, !dbg !18969

139:                                              ; preds = %120
  %140 = trunc i32 %2 to i16, !dbg !18970
  %141 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 67, i16 noundef zeroext 3, i16 noundef zeroext 4, i16 noundef zeroext %140) #22, !dbg !18971
  br label %241, !dbg !18972

142:                                              ; preds = %120
  %143 = trunc i32 %2 to i16, !dbg !18973
  %144 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 67, i16 noundef zeroext 3, i16 noundef zeroext 2, i16 noundef zeroext %143) #22, !dbg !18974
  br label %241, !dbg !18975

145:                                              ; preds = %120
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__FUNCTION__.PMIC_VR_PSI_PMOD_CONFIG, i32 0, i32 0), i32 noundef 239, i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.328, i32 0, i32 0)) #22, !dbg !18976
  br label %241, !dbg !18977

146:                                              ; preds = %3
  switch i32 %1, label %165 [
    i32 0, label %147
    i32 1, label %150
    i32 2, label %153
    i32 3, label %156
    i32 4, label %159
    i32 5, label %162
  ], !dbg !18978

147:                                              ; preds = %146
  %148 = trunc i32 %2 to i16, !dbg !18979
  %149 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 218, i16 noundef zeroext 1, i16 noundef zeroext 2, i16 noundef zeroext %148) #22, !dbg !18981
  br label %241, !dbg !18982

150:                                              ; preds = %146
  %151 = trunc i32 %2 to i16, !dbg !18983
  %152 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 226, i16 noundef zeroext 1, i16 noundef zeroext 1, i16 noundef zeroext %151) #22, !dbg !18984
  br label %241, !dbg !18985

153:                                              ; preds = %146
  %154 = trunc i32 %2 to i16, !dbg !18986
  %155 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 226, i16 noundef zeroext 1, i16 noundef zeroext 5, i16 noundef zeroext %154) #22, !dbg !18987
  br label %241, !dbg !18988

156:                                              ; preds = %146
  %157 = trunc i32 %2 to i16, !dbg !18989
  %158 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 227, i16 noundef zeroext 1, i16 noundef zeroext 1, i16 noundef zeroext %157) #22, !dbg !18990
  br label %241, !dbg !18991

159:                                              ; preds = %146
  %160 = trunc i32 %2 to i16, !dbg !18992
  %161 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 227, i16 noundef zeroext 1, i16 noundef zeroext 5, i16 noundef zeroext %160) #22, !dbg !18993
  br label %241, !dbg !18994

162:                                              ; preds = %146
  %163 = trunc i32 %2 to i16, !dbg !18995
  %164 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 219, i16 noundef zeroext 1, i16 noundef zeroext 2, i16 noundef zeroext %163) #22, !dbg !18996
  br label %241, !dbg !18997

165:                                              ; preds = %146
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__FUNCTION__.PMIC_VR_PSI_PMOD_CONFIG, i32 0, i32 0), i32 noundef 265, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.327, i32 0, i32 0)) #22, !dbg !18998
  br label %241, !dbg !18999

166:                                              ; preds = %3
  switch i32 %1, label %182 [
    i32 0, label %167
    i32 1, label %170
    i32 2, label %173
    i32 3, label %176
    i32 4, label %179
  ], !dbg !19000

167:                                              ; preds = %166
  %168 = trunc i32 %2 to i16, !dbg !19001
  %169 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 237, i16 noundef zeroext 3, i16 noundef zeroext 2, i16 noundef zeroext %168) #22, !dbg !19003
  br label %241, !dbg !19004

170:                                              ; preds = %166
  %171 = trunc i32 %2 to i16, !dbg !19005
  %172 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 245, i16 noundef zeroext 3, i16 noundef zeroext 1, i16 noundef zeroext %171) #22, !dbg !19006
  br label %241, !dbg !19007

173:                                              ; preds = %166
  %174 = trunc i32 %2 to i16, !dbg !19008
  %175 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 245, i16 noundef zeroext 3, i16 noundef zeroext 5, i16 noundef zeroext %174) #22, !dbg !19009
  br label %241, !dbg !19010

176:                                              ; preds = %166
  %177 = trunc i32 %2 to i16, !dbg !19011
  %178 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 246, i16 noundef zeroext 3, i16 noundef zeroext 1, i16 noundef zeroext %177) #22, !dbg !19012
  br label %241, !dbg !19013

179:                                              ; preds = %166
  %180 = trunc i32 %2 to i16, !dbg !19014
  %181 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 246, i16 noundef zeroext 3, i16 noundef zeroext 5, i16 noundef zeroext %180) #22, !dbg !19015
  br label %241, !dbg !19016

182:                                              ; preds = %166
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__FUNCTION__.PMIC_VR_PSI_PMOD_CONFIG, i32 0, i32 0), i32 noundef 288, i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.328, i32 0, i32 0)) #22, !dbg !19017
  br label %241, !dbg !19018

183:                                              ; preds = %3
  switch i32 %1, label %199 [
    i32 0, label %184
    i32 1, label %187
    i32 2, label %190
    i32 3, label %193
    i32 4, label %196
  ], !dbg !19019

184:                                              ; preds = %183
  %185 = trunc i32 %2 to i16, !dbg !19020
  %186 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 228, i16 noundef zeroext 3, i16 noundef zeroext 2, i16 noundef zeroext %185) #22, !dbg !19022
  br label %241, !dbg !19023

187:                                              ; preds = %183
  %188 = trunc i32 %2 to i16, !dbg !19024
  %189 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 757, i16 noundef zeroext 3, i16 noundef zeroext 1, i16 noundef zeroext %188) #22, !dbg !19025
  br label %241, !dbg !19026

190:                                              ; preds = %183
  %191 = trunc i32 %2 to i16, !dbg !19027
  %192 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 757, i16 noundef zeroext 3, i16 noundef zeroext 5, i16 noundef zeroext %191) #22, !dbg !19028
  br label %241, !dbg !19029

193:                                              ; preds = %183
  %194 = trunc i32 %2 to i16, !dbg !19030
  %195 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 758, i16 noundef zeroext 3, i16 noundef zeroext 1, i16 noundef zeroext %194) #22, !dbg !19031
  br label %241, !dbg !19032

196:                                              ; preds = %183
  %197 = trunc i32 %2 to i16, !dbg !19033
  %198 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 758, i16 noundef zeroext 3, i16 noundef zeroext 5, i16 noundef zeroext %197) #22, !dbg !19034
  br label %241, !dbg !19035

199:                                              ; preds = %183
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__FUNCTION__.PMIC_VR_PSI_PMOD_CONFIG, i32 0, i32 0), i32 noundef 311, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.327, i32 0, i32 0)) #22, !dbg !19036
  br label %241, !dbg !19037

200:                                              ; preds = %3
  switch i32 %1, label %216 [
    i32 0, label %201
    i32 1, label %204
    i32 2, label %207
    i32 3, label %210
    i32 4, label %213
  ], !dbg !19038

201:                                              ; preds = %200
  %202 = trunc i32 %2 to i16, !dbg !19039
  %203 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 229, i16 noundef zeroext 3, i16 noundef zeroext 2, i16 noundef zeroext %202) #22, !dbg !19041
  br label %241, !dbg !19042

204:                                              ; preds = %200
  %205 = trunc i32 %2 to i16, !dbg !19043
  %206 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 766, i16 noundef zeroext 3, i16 noundef zeroext 1, i16 noundef zeroext %205) #22, !dbg !19044
  br label %241, !dbg !19045

207:                                              ; preds = %200
  %208 = trunc i32 %2 to i16, !dbg !19046
  %209 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 766, i16 noundef zeroext 3, i16 noundef zeroext 5, i16 noundef zeroext %208) #22, !dbg !19047
  br label %241, !dbg !19048

210:                                              ; preds = %200
  %211 = trunc i32 %2 to i16, !dbg !19049
  %212 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 767, i16 noundef zeroext 3, i16 noundef zeroext 1, i16 noundef zeroext %211) #22, !dbg !19050
  br label %241, !dbg !19051

213:                                              ; preds = %200
  %214 = trunc i32 %2 to i16, !dbg !19052
  %215 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 767, i16 noundef zeroext 3, i16 noundef zeroext 5, i16 noundef zeroext %214) #22, !dbg !19053
  br label %241, !dbg !19054

216:                                              ; preds = %200
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__FUNCTION__.PMIC_VR_PSI_PMOD_CONFIG, i32 0, i32 0), i32 noundef 334, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.327, i32 0, i32 0)) #22, !dbg !19055
  br label %241, !dbg !19056

217:                                              ; preds = %3
  switch i32 %1, label %233 [
    i32 0, label %218
    i32 1, label %221
    i32 2, label %224
    i32 3, label %227
    i32 4, label %230
  ], !dbg !19057

218:                                              ; preds = %217
  %219 = trunc i32 %2 to i16, !dbg !19058
  %220 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 236, i16 noundef zeroext 3, i16 noundef zeroext 2, i16 noundef zeroext %219) #22, !dbg !19060
  br label %241, !dbg !19061

221:                                              ; preds = %217
  %222 = trunc i32 %2 to i16, !dbg !19062
  %223 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 802, i16 noundef zeroext 3, i16 noundef zeroext 1, i16 noundef zeroext %222) #22, !dbg !19063
  br label %241, !dbg !19064

224:                                              ; preds = %217
  %225 = trunc i32 %2 to i16, !dbg !19065
  %226 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 802, i16 noundef zeroext 3, i16 noundef zeroext 5, i16 noundef zeroext %225) #22, !dbg !19066
  br label %241, !dbg !19067

227:                                              ; preds = %217
  %228 = trunc i32 %2 to i16, !dbg !19068
  %229 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 803, i16 noundef zeroext 3, i16 noundef zeroext 1, i16 noundef zeroext %228) #22, !dbg !19069
  br label %241, !dbg !19070

230:                                              ; preds = %217
  %231 = trunc i32 %2 to i16, !dbg !19071
  %232 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 803, i16 noundef zeroext 3, i16 noundef zeroext 5, i16 noundef zeroext %231) #22, !dbg !19072
  br label %241, !dbg !19073

233:                                              ; preds = %217
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__FUNCTION__.PMIC_VR_PSI_PMOD_CONFIG, i32 0, i32 0), i32 noundef 357, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.327, i32 0, i32 0)) #22, !dbg !19074
  br label %241, !dbg !19075

234:                                              ; preds = %3
  %235 = trunc i32 %2 to i16, !dbg !19076
  %236 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 768, i16 noundef zeroext 3, i16 noundef zeroext 2, i16 noundef zeroext %235) #22, !dbg !19077
  br label %241, !dbg !19078

237:                                              ; preds = %3
  %238 = trunc i32 %2 to i16, !dbg !19079
  %239 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 804, i16 noundef zeroext 3, i16 noundef zeroext 2, i16 noundef zeroext %238) #22, !dbg !19080
  br label %241, !dbg !19081

240:                                              ; preds = %3
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__FUNCTION__.PMIC_VR_PSI_PMOD_CONFIG, i32 0, i32 0), i32 noundef 371, i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.329, i32 0, i32 0)) #22, !dbg !19082
  br label %241, !dbg !19083

241:                                              ; preds = %218, %221, %224, %227, %230, %233, %201, %204, %207, %210, %213, %216, %184, %187, %190, %193, %196, %199, %167, %170, %173, %176, %179, %182, %147, %150, %153, %156, %159, %162, %165, %121, %124, %127, %130, %133, %136, %139, %142, %145, %39, %42, %45, %48, %51, %54, %22, %25, %28, %31, %34, %37, %5, %8, %11, %14, %17, %20, %240, %237, %234, %117
  tail call void @pmu_set_ovr_mode_mt6385(i32 noundef 0) #23, !dbg !19084
  tail call void @pmu_set_vrc_key_mt6385(i32 noundef 1) #23, !dbg !19085
  ret void, !dbg !19086
}

; Function Attrs: noinline nounwind optsize
define dso_local void @pmu_set_vrc_key_mt6385(i32 noundef %0) local_unnamed_addr #0 !dbg !19087 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !19092, metadata !DIExpression()), !dbg !19093
  %2 = icmp eq i32 %0, 1, !dbg !19094
  %3 = select i1 %2, i16 0, i16 252
  %4 = select i1 %2, i16 0, i16 218
  %5 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 62, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext %3) #22, !dbg !19096
  %6 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 63, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext %4) #22, !dbg !19096
  ret void, !dbg !19097
}

; Function Attrs: noinline nounwind optsize
define dso_local void @pmu_set_ovr_mode_mt6385(i32 noundef %0) local_unnamed_addr #0 !dbg !19098 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !19103, metadata !DIExpression()), !dbg !19104
  %2 = icmp eq i32 %0, 0, !dbg !19105
  br i1 %2, label %3, label %5, !dbg !19107

3:                                                ; preds = %1
  %4 = tail call i32 @hal_gpt_delay_us(i32 noundef 500) #22, !dbg !19108
  br label %5, !dbg !19110

5:                                                ; preds = %1, %3
  %6 = phi i16 [ 0, %3 ], [ 1, %1 ]
  %7 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 64, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext %6) #22, !dbg !19111
  ret void, !dbg !19112
}

; Function Attrs: noinline nounwind optsize
define dso_local void @PMIC_VR_SLEEP_WKUP_CONFIG(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !19113 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !19117, metadata !DIExpression()), !dbg !19123
  call void @llvm.dbg.value(metadata i32 %1, metadata !19118, metadata !DIExpression()), !dbg !19123
  call void @llvm.dbg.value(metadata i32 %2, metadata !19119, metadata !DIExpression()), !dbg !19123
  call void @llvm.dbg.value(metadata i32 %3, metadata !19120, metadata !DIExpression()), !dbg !19123
  call void @llvm.dbg.value(metadata i32 0, metadata !19121, metadata !DIExpression()), !dbg !19123
  call void @llvm.dbg.value(metadata i32 14, metadata !19122, metadata !DIExpression()), !dbg !19123
  switch i32 %1, label %9 [
    i32 3, label %5
    i32 4, label %7
  ], !dbg !19124

5:                                                ; preds = %4
  %6 = tail call zeroext i8 @pmu_get_register_value(i16 noundef zeroext 117, i16 noundef zeroext 15, i16 noundef zeroext 0) #22, !dbg !19125
  call void @llvm.dbg.value(metadata i8 %6, metadata !19121, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !19123
  br label %10, !dbg !19127

7:                                                ; preds = %4
  %8 = tail call zeroext i8 @pmu_get_register_value(i16 noundef zeroext 117, i16 noundef zeroext 15, i16 noundef zeroext 4) #22, !dbg !19128
  call void @llvm.dbg.value(metadata i8 %8, metadata !19121, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !19123
  br label %10, !dbg !19129

9:                                                ; preds = %4
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.PMIC_VR_SLEEP_WKUP_CONFIG, i32 0, i32 0), i32 noundef 400, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.3.332, i32 0, i32 0)) #22, !dbg !19130
  br label %10, !dbg !19131

10:                                               ; preds = %9, %7, %5
  %11 = phi i8 [ 0, %9 ], [ %8, %7 ], [ %6, %5 ]
  %12 = zext i8 %11 to i32, !dbg !19123
  call void @llvm.dbg.value(metadata i32 %12, metadata !19121, metadata !DIExpression()), !dbg !19123
  %13 = icmp slt i32 %12, %3, !dbg !19132
  br i1 %13, label %14, label %15, !dbg !19134

14:                                               ; preds = %10
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.PMIC_VR_SLEEP_WKUP_CONFIG, i32 0, i32 0), i32 noundef 405, i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.4.333, i32 0, i32 0)) #22, !dbg !19135
  br label %15, !dbg !19137

15:                                               ; preds = %14, %10
  switch i32 %2, label %18 [
    i32 0, label %19
    i32 1, label %16
    i32 2, label %17
  ], !dbg !19138

16:                                               ; preds = %15
  call void @llvm.dbg.value(metadata i32 15, metadata !19122, metadata !DIExpression()), !dbg !19123
  br label %19, !dbg !19139

17:                                               ; preds = %15
  call void @llvm.dbg.value(metadata i32 15, metadata !19122, metadata !DIExpression()), !dbg !19123
  br label %19, !dbg !19141

18:                                               ; preds = %15
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.PMIC_VR_SLEEP_WKUP_CONFIG, i32 0, i32 0), i32 noundef 419, i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.5.334, i32 0, i32 0), i32 noundef %2) #22, !dbg !19142
  br label %19, !dbg !19143

19:                                               ; preds = %15, %18, %17, %16
  %20 = phi i32 [ 14, %18 ], [ 15, %17 ], [ 15, %16 ], [ %3, %15 ], !dbg !19123
  call void @llvm.dbg.value(metadata i32 %20, metadata !19122, metadata !DIExpression()), !dbg !19123
  %21 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 88, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 41) #22, !dbg !19144
  %22 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 89, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 71) #22, !dbg !19145
  switch i32 %0, label %148 [
    i32 0, label %23
    i32 1, label %24
    i32 2, label %25
    i32 3, label %33
    i32 4, label %46
    i32 5, label %47
    i32 6, label %57
    i32 7, label %65
    i32 8, label %81
    i32 9, label %97
    i32 10, label %113
    i32 11, label %114
    i32 12, label %115
    i32 13, label %131
    i32 14, label %147
  ], !dbg !19146

23:                                               ; preds = %19
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.PMIC_VR_SLEEP_WKUP_CONFIG, i32 0, i32 0), i32 noundef 431, i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.6.335, i32 0, i32 0)) #22, !dbg !19147
  br label %149, !dbg !19149

24:                                               ; preds = %19
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.PMIC_VR_SLEEP_WKUP_CONFIG, i32 0, i32 0), i32 noundef 435, i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.7.336, i32 0, i32 0)) #22, !dbg !19150
  br label %149, !dbg !19151

25:                                               ; preds = %19
  switch i32 %1, label %32 [
    i32 3, label %26
    i32 4, label %29
  ], !dbg !19152

26:                                               ; preds = %25
  %27 = trunc i32 %20 to i16, !dbg !19153
  %28 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 120, i16 noundef zeroext 15, i16 noundef zeroext 4, i16 noundef zeroext %27) #22, !dbg !19155
  br label %149, !dbg !19156

29:                                               ; preds = %25
  %30 = trunc i32 %20 to i16, !dbg !19157
  %31 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 125, i16 noundef zeroext 15, i16 noundef zeroext 4, i16 noundef zeroext %30) #22, !dbg !19158
  br label %149, !dbg !19159

32:                                               ; preds = %25
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.PMIC_VR_SLEEP_WKUP_CONFIG, i32 0, i32 0), i32 noundef 447, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.8.337, i32 0, i32 0)) #22, !dbg !19160
  br label %149, !dbg !19161

33:                                               ; preds = %19
  %34 = icmp eq i32 %20, 15, !dbg !19162
  %35 = load i16, i16* @pmu_mtcmos_ldo_ctrl, align 2, !dbg !19164
  %36 = and i16 %35, -2, !dbg !19164
  %37 = zext i1 %34 to i16, !dbg !19164
  %38 = or i16 %36, %37, !dbg !19164
  store i16 %38, i16* @pmu_mtcmos_ldo_ctrl, align 2, !dbg !19165
  switch i32 %1, label %45 [
    i32 3, label %39
    i32 4, label %42
  ], !dbg !19166

39:                                               ; preds = %33
  %40 = trunc i32 %20 to i16, !dbg !19167
  %41 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 121, i16 noundef zeroext 15, i16 noundef zeroext 0, i16 noundef zeroext %40) #22, !dbg !19169
  br label %149, !dbg !19170

42:                                               ; preds = %33
  %43 = trunc i32 %20 to i16, !dbg !19171
  %44 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 126, i16 noundef zeroext 15, i16 noundef zeroext 0, i16 noundef zeroext %43) #22, !dbg !19172
  br label %149, !dbg !19173

45:                                               ; preds = %33
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.PMIC_VR_SLEEP_WKUP_CONFIG, i32 0, i32 0), i32 noundef 466, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.8.337, i32 0, i32 0)) #22, !dbg !19174
  br label %149, !dbg !19175

46:                                               ; preds = %19
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.PMIC_VR_SLEEP_WKUP_CONFIG, i32 0, i32 0), i32 noundef 472, i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.9.338, i32 0, i32 0)) #22, !dbg !19176
  br label %149, !dbg !19177

47:                                               ; preds = %19
  %48 = add i32 %2, -1, !dbg !19178
  %49 = icmp ult i32 %48, 2, !dbg !19178
  br i1 %49, label %50, label %149, !dbg !19178

50:                                               ; preds = %47
  tail call void @pmu_set_vrc_key_mt6385(i32 noundef 0) #23, !dbg !19180
  tail call void @pmu_set_ovr_mode_mt6385(i32 noundef 1) #23, !dbg !19182
  switch i32 %1, label %55 [
    i32 3, label %51
    i32 4, label %53
  ], !dbg !19183

51:                                               ; preds = %50
  %52 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 227, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext 1) #22, !dbg !19184
  br label %56, !dbg !19186

53:                                               ; preds = %50
  %54 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 227, i16 noundef zeroext 1, i16 noundef zeroext 4, i16 noundef zeroext 1) #22, !dbg !19187
  br label %56, !dbg !19188

55:                                               ; preds = %50
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.PMIC_VR_SLEEP_WKUP_CONFIG, i32 0, i32 0), i32 noundef 488, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.8.337, i32 0, i32 0)) #22, !dbg !19189
  br label %56, !dbg !19190

56:                                               ; preds = %55, %53, %51
  tail call void @pmu_set_ovr_mode_mt6385(i32 noundef 0) #23, !dbg !19191
  tail call void @pmu_set_vrc_key_mt6385(i32 noundef 1) #23, !dbg !19192
  br label %149, !dbg !19193

57:                                               ; preds = %19
  switch i32 %1, label %64 [
    i32 3, label %58
    i32 4, label %61
  ], !dbg !19194

58:                                               ; preds = %57
  %59 = trunc i32 %20 to i16, !dbg !19195
  %60 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 122, i16 noundef zeroext 15, i16 noundef zeroext 0, i16 noundef zeroext %59) #22, !dbg !19197
  br label %149, !dbg !19198

61:                                               ; preds = %57
  %62 = trunc i32 %20 to i16, !dbg !19199
  %63 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 127, i16 noundef zeroext 15, i16 noundef zeroext 0, i16 noundef zeroext %62) #22, !dbg !19200
  br label %149, !dbg !19201

64:                                               ; preds = %57
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.PMIC_VR_SLEEP_WKUP_CONFIG, i32 0, i32 0), i32 noundef 506, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.8.337, i32 0, i32 0)) #22, !dbg !19202
  br label %149, !dbg !19203

65:                                               ; preds = %19
  %66 = icmp eq i32 %20, 15, !dbg !19204
  %67 = load i16, i16* @pmu_mtcmos_ldo_ctrl, align 2, !dbg !19206
  %68 = and i16 %67, -3, !dbg !19206
  %69 = select i1 %66, i16 2, i16 0, !dbg !19206
  %70 = or i16 %68, %69, !dbg !19206
  store i16 %70, i16* @pmu_mtcmos_ldo_ctrl, align 2, !dbg !19207
  %71 = icmp eq i32 %20, 0, !dbg !19208
  br i1 %71, label %72, label %73, !dbg !19210

72:                                               ; preds = %65
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.PMIC_VR_SLEEP_WKUP_CONFIG, i32 0, i32 0), i32 noundef 519, i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.10.339, i32 0, i32 0)) #22, !dbg !19211
  br label %73, !dbg !19213

73:                                               ; preds = %72, %65
  switch i32 %1, label %80 [
    i32 3, label %74
    i32 4, label %77
  ], !dbg !19214

74:                                               ; preds = %73
  %75 = trunc i32 %20 to i16, !dbg !19215
  %76 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 118, i16 noundef zeroext 15, i16 noundef zeroext 0, i16 noundef zeroext %75) #22, !dbg !19217
  br label %149, !dbg !19218

77:                                               ; preds = %73
  %78 = trunc i32 %20 to i16, !dbg !19219
  %79 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 123, i16 noundef zeroext 15, i16 noundef zeroext 0, i16 noundef zeroext %78) #22, !dbg !19220
  br label %149, !dbg !19221

80:                                               ; preds = %73
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.PMIC_VR_SLEEP_WKUP_CONFIG, i32 0, i32 0), i32 noundef 529, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.8.337, i32 0, i32 0)) #22, !dbg !19222
  br label %149, !dbg !19223

81:                                               ; preds = %19
  %82 = icmp eq i32 %20, 15, !dbg !19224
  %83 = load i16, i16* @pmu_mtcmos_ldo_ctrl, align 2, !dbg !19226
  %84 = and i16 %83, -5, !dbg !19226
  %85 = select i1 %82, i16 4, i16 0, !dbg !19226
  %86 = or i16 %84, %85, !dbg !19226
  store i16 %86, i16* @pmu_mtcmos_ldo_ctrl, align 2, !dbg !19227
  %87 = icmp eq i32 %20, 0, !dbg !19228
  br i1 %87, label %88, label %89, !dbg !19230

88:                                               ; preds = %81
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.PMIC_VR_SLEEP_WKUP_CONFIG, i32 0, i32 0), i32 noundef 542, i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.10.339, i32 0, i32 0)) #22, !dbg !19231
  br label %89, !dbg !19233

89:                                               ; preds = %88, %81
  switch i32 %1, label %96 [
    i32 3, label %90
    i32 4, label %93
  ], !dbg !19234

90:                                               ; preds = %89
  %91 = trunc i32 %20 to i16, !dbg !19235
  %92 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 118, i16 noundef zeroext 15, i16 noundef zeroext 4, i16 noundef zeroext %91) #22, !dbg !19237
  br label %149, !dbg !19238

93:                                               ; preds = %89
  %94 = trunc i32 %20 to i16, !dbg !19239
  %95 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 123, i16 noundef zeroext 15, i16 noundef zeroext 4, i16 noundef zeroext %94) #22, !dbg !19240
  br label %149, !dbg !19241

96:                                               ; preds = %89
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.PMIC_VR_SLEEP_WKUP_CONFIG, i32 0, i32 0), i32 noundef 552, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.8.337, i32 0, i32 0)) #22, !dbg !19242
  br label %149, !dbg !19243

97:                                               ; preds = %19
  %98 = icmp eq i32 %20, 15, !dbg !19244
  %99 = load i16, i16* @pmu_mtcmos_ldo_ctrl, align 2, !dbg !19246
  %100 = and i16 %99, -33, !dbg !19246
  %101 = select i1 %98, i16 32, i16 0, !dbg !19246
  %102 = or i16 %100, %101, !dbg !19246
  store i16 %102, i16* @pmu_mtcmos_ldo_ctrl, align 2, !dbg !19247
  %103 = icmp eq i32 %20, 0, !dbg !19248
  br i1 %103, label %104, label %105, !dbg !19250

104:                                              ; preds = %97
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.PMIC_VR_SLEEP_WKUP_CONFIG, i32 0, i32 0), i32 noundef 565, i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.10.339, i32 0, i32 0)) #22, !dbg !19251
  br label %105, !dbg !19253

105:                                              ; preds = %104, %97
  switch i32 %1, label %112 [
    i32 3, label %106
    i32 4, label %109
  ], !dbg !19254

106:                                              ; preds = %105
  %107 = trunc i32 %20 to i16, !dbg !19255
  %108 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 121, i16 noundef zeroext 15, i16 noundef zeroext 4, i16 noundef zeroext %107) #22, !dbg !19257
  br label %149, !dbg !19258

109:                                              ; preds = %105
  %110 = trunc i32 %20 to i16, !dbg !19259
  %111 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 126, i16 noundef zeroext 15, i16 noundef zeroext 4, i16 noundef zeroext %110) #22, !dbg !19260
  br label %149, !dbg !19261

112:                                              ; preds = %105
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.PMIC_VR_SLEEP_WKUP_CONFIG, i32 0, i32 0), i32 noundef 575, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.8.337, i32 0, i32 0)) #22, !dbg !19262
  br label %149, !dbg !19263

113:                                              ; preds = %19
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.PMIC_VR_SLEEP_WKUP_CONFIG, i32 0, i32 0), i32 noundef 581, i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.11.340, i32 0, i32 0)) #22, !dbg !19264
  br label %149, !dbg !19265

114:                                              ; preds = %19
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.PMIC_VR_SLEEP_WKUP_CONFIG, i32 0, i32 0), i32 noundef 585, i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.12.341, i32 0, i32 0)) #22, !dbg !19266
  br label %149, !dbg !19267

115:                                              ; preds = %19
  %116 = icmp eq i32 %20, 15, !dbg !19268
  %117 = load i16, i16* @pmu_mtcmos_ldo_ctrl, align 2, !dbg !19270
  %118 = and i16 %117, -9, !dbg !19270
  %119 = select i1 %116, i16 8, i16 0, !dbg !19270
  %120 = or i16 %118, %119, !dbg !19270
  store i16 %120, i16* @pmu_mtcmos_ldo_ctrl, align 2, !dbg !19271
  %121 = icmp eq i32 %20, 0, !dbg !19272
  br i1 %121, label %122, label %123, !dbg !19274

122:                                              ; preds = %115
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.PMIC_VR_SLEEP_WKUP_CONFIG, i32 0, i32 0), i32 noundef 596, i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.10.339, i32 0, i32 0)) #22, !dbg !19275
  br label %123, !dbg !19277

123:                                              ; preds = %122, %115
  switch i32 %1, label %130 [
    i32 3, label %124
    i32 4, label %127
  ], !dbg !19278

124:                                              ; preds = %123
  %125 = trunc i32 %20 to i16, !dbg !19279
  %126 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 119, i16 noundef zeroext 15, i16 noundef zeroext 4, i16 noundef zeroext %125) #22, !dbg !19281
  br label %149, !dbg !19282

127:                                              ; preds = %123
  %128 = trunc i32 %20 to i16, !dbg !19283
  %129 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 124, i16 noundef zeroext 15, i16 noundef zeroext 4, i16 noundef zeroext %128) #22, !dbg !19284
  br label %149, !dbg !19285

130:                                              ; preds = %123
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.PMIC_VR_SLEEP_WKUP_CONFIG, i32 0, i32 0), i32 noundef 606, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.8.337, i32 0, i32 0)) #22, !dbg !19286
  br label %149, !dbg !19287

131:                                              ; preds = %19
  %132 = icmp eq i32 %20, 15, !dbg !19288
  %133 = load i16, i16* @pmu_mtcmos_ldo_ctrl, align 2, !dbg !19290
  %134 = and i16 %133, -17, !dbg !19290
  %135 = select i1 %132, i16 16, i16 0, !dbg !19290
  %136 = or i16 %134, %135, !dbg !19290
  store i16 %136, i16* @pmu_mtcmos_ldo_ctrl, align 2, !dbg !19291
  %137 = icmp eq i32 %20, 0, !dbg !19292
  br i1 %137, label %138, label %139, !dbg !19294

138:                                              ; preds = %131
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.PMIC_VR_SLEEP_WKUP_CONFIG, i32 0, i32 0), i32 noundef 619, i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.10.339, i32 0, i32 0)) #22, !dbg !19295
  br label %139, !dbg !19297

139:                                              ; preds = %138, %131
  switch i32 %1, label %146 [
    i32 3, label %140
    i32 4, label %143
  ], !dbg !19298

140:                                              ; preds = %139
  %141 = trunc i32 %20 to i16, !dbg !19299
  %142 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 120, i16 noundef zeroext 15, i16 noundef zeroext 0, i16 noundef zeroext %141) #22, !dbg !19301
  br label %149, !dbg !19302

143:                                              ; preds = %139
  %144 = trunc i32 %20 to i16, !dbg !19303
  %145 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 125, i16 noundef zeroext 15, i16 noundef zeroext 0, i16 noundef zeroext %144) #22, !dbg !19304
  br label %149, !dbg !19305

146:                                              ; preds = %139
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.PMIC_VR_SLEEP_WKUP_CONFIG, i32 0, i32 0), i32 noundef 629, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.8.337, i32 0, i32 0)) #22, !dbg !19306
  br label %149, !dbg !19307

147:                                              ; preds = %19
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.PMIC_VR_SLEEP_WKUP_CONFIG, i32 0, i32 0), i32 noundef 635, i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.13.342, i32 0, i32 0)) #22, !dbg !19308
  br label %149, !dbg !19309

148:                                              ; preds = %19
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.PMIC_VR_SLEEP_WKUP_CONFIG, i32 0, i32 0), i32 noundef 639, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.14, i32 0, i32 0)) #22, !dbg !19310
  br label %149, !dbg !19311

149:                                              ; preds = %140, %143, %146, %124, %127, %130, %106, %109, %112, %90, %93, %96, %74, %77, %80, %58, %61, %64, %56, %47, %39, %42, %45, %26, %29, %32, %148, %147, %114, %113, %46, %24, %23
  %150 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 88, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 0) #22, !dbg !19312
  %151 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 89, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 0) #22, !dbg !19313
  ret void, !dbg !19314
}

; Function Attrs: noinline nounwind optsize
define dso_local void @PMIC_VR_CONTROL(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !19315 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !19319, metadata !DIExpression()), !dbg !19322
  call void @llvm.dbg.value(metadata i32 %1, metadata !19320, metadata !DIExpression()), !dbg !19322
  call void @llvm.dbg.value(metadata i32 1, metadata !19321, metadata !DIExpression()), !dbg !19322
  %3 = icmp eq i32 %1, 0, !dbg !19323
  call void @llvm.dbg.value(metadata i1 %3, metadata !19321, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !19322
  %4 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 62, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 252) #22, !dbg !19325
  %5 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 63, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 218) #22, !dbg !19326
  switch i32 %0, label %114 [
    i32 0, label %6
    i32 1, label %7
    i32 2, label %8
    i32 3, label %14
    i32 4, label %25
    i32 5, label %26
    i32 6, label %29
    i32 7, label %35
    i32 8, label %46
    i32 9, label %57
    i32 10, label %68
    i32 11, label %79
    i32 12, label %90
    i32 13, label %98
    i32 14, label %106
  ], !dbg !19327

6:                                                ; preds = %2
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__FUNCTION__.PMIC_VR_CONTROL, i32 0, i32 0), i32 noundef 662, i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.15, i32 0, i32 0)) #22, !dbg !19328
  br label %115, !dbg !19330

7:                                                ; preds = %2
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__FUNCTION__.PMIC_VR_CONTROL, i32 0, i32 0), i32 noundef 666, i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.16, i32 0, i32 0)) #22, !dbg !19331
  br label %115, !dbg !19332

8:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i1 %3, metadata !19321, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !19322
  %9 = trunc i32 %1 to i16, !dbg !19333
  %10 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 234, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext %9) #22, !dbg !19334
  call void @llvm.dbg.value(metadata i1 %3, metadata !19321, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !19322
  br i1 %3, label %115, label %11, !dbg !19335

11:                                               ; preds = %8, %11
  %12 = tail call zeroext i8 @pmu_get_register_value(i16 noundef zeroext 234, i16 noundef zeroext 1, i16 noundef zeroext 6) #22, !dbg !19336
  call void @llvm.dbg.value(metadata i8 %12, metadata !19321, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !19322
  %13 = icmp eq i8 %12, 0, !dbg !19338
  br i1 %13, label %11, label %115, !dbg !19335, !llvm.loop !19339

14:                                               ; preds = %2
  %15 = icmp eq i32 %1, 1, !dbg !19341
  %16 = load i16, i16* @pmu_mtcmos_ldo_en, align 2, !dbg !19343
  %17 = and i16 %16, -2, !dbg !19343
  %18 = zext i1 %15 to i16, !dbg !19343
  %19 = or i16 %17, %18, !dbg !19343
  store i16 %19, i16* @pmu_mtcmos_ldo_en, align 2, !dbg !19344
  %20 = trunc i32 %1 to i16, !dbg !19345
  %21 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 235, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext %20) #22, !dbg !19346
  call void @llvm.dbg.value(metadata i1 %3, metadata !19321, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !19322
  br i1 %3, label %115, label %22, !dbg !19347

22:                                               ; preds = %14, %22
  %23 = tail call zeroext i8 @pmu_get_register_value(i16 noundef zeroext 235, i16 noundef zeroext 1, i16 noundef zeroext 6) #22, !dbg !19348
  call void @llvm.dbg.value(metadata i8 %23, metadata !19321, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !19322
  %24 = icmp eq i8 %23, 0, !dbg !19350
  br i1 %24, label %22, label %115, !dbg !19347, !llvm.loop !19351

25:                                               ; preds = %2
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__FUNCTION__.PMIC_VR_CONTROL, i32 0, i32 0), i32 noundef 689, i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.16, i32 0, i32 0)) #22, !dbg !19353
  br label %115, !dbg !19354

26:                                               ; preds = %2
  %27 = trunc i32 %1 to i16, !dbg !19355
  %28 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 218, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext %27) #22, !dbg !19356
  br label %115, !dbg !19357

29:                                               ; preds = %2
  %30 = trunc i32 %1 to i16, !dbg !19358
  %31 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 237, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext %30) #22, !dbg !19359
  call void @llvm.dbg.value(metadata i1 %3, metadata !19321, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !19322
  br i1 %3, label %115, label %32, !dbg !19360

32:                                               ; preds = %29, %32
  %33 = tail call zeroext i8 @pmu_get_register_value(i16 noundef zeroext 237, i16 noundef zeroext 1, i16 noundef zeroext 6) #22, !dbg !19361
  call void @llvm.dbg.value(metadata i8 %33, metadata !19321, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !19322
  %34 = icmp eq i8 %33, 0, !dbg !19363
  br i1 %34, label %32, label %115, !dbg !19360, !llvm.loop !19364

35:                                               ; preds = %2
  %36 = icmp eq i32 %1, 1, !dbg !19366
  %37 = load i16, i16* @pmu_mtcmos_ldo_en, align 2, !dbg !19368
  %38 = and i16 %37, -3, !dbg !19368
  %39 = select i1 %36, i16 2, i16 0, !dbg !19368
  %40 = or i16 %38, %39, !dbg !19368
  store i16 %40, i16* @pmu_mtcmos_ldo_en, align 2, !dbg !19369
  %41 = trunc i32 %1 to i16, !dbg !19370
  %42 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 228, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext %41) #22, !dbg !19371
  call void @llvm.dbg.value(metadata i1 %3, metadata !19321, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !19322
  br i1 %3, label %115, label %43, !dbg !19372

43:                                               ; preds = %35, %43
  %44 = tail call zeroext i8 @pmu_get_register_value(i16 noundef zeroext 228, i16 noundef zeroext 1, i16 noundef zeroext 6) #22, !dbg !19373
  call void @llvm.dbg.value(metadata i8 %44, metadata !19321, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !19322
  %45 = icmp eq i8 %44, 0, !dbg !19375
  br i1 %45, label %43, label %115, !dbg !19372, !llvm.loop !19376

46:                                               ; preds = %2
  %47 = icmp eq i32 %1, 1, !dbg !19378
  %48 = load i16, i16* @pmu_mtcmos_ldo_en, align 2, !dbg !19380
  %49 = and i16 %48, -5, !dbg !19380
  %50 = select i1 %47, i16 4, i16 0, !dbg !19380
  %51 = or i16 %49, %50, !dbg !19380
  store i16 %51, i16* @pmu_mtcmos_ldo_en, align 2, !dbg !19381
  %52 = trunc i32 %1 to i16, !dbg !19382
  %53 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 229, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext %52) #22, !dbg !19383
  call void @llvm.dbg.value(metadata i1 %3, metadata !19321, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !19322
  br i1 %3, label %115, label %54, !dbg !19384

54:                                               ; preds = %46, %54
  %55 = tail call zeroext i8 @pmu_get_register_value(i16 noundef zeroext 229, i16 noundef zeroext 1, i16 noundef zeroext 6) #22, !dbg !19385
  call void @llvm.dbg.value(metadata i8 %55, metadata !19321, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !19322
  %56 = icmp eq i8 %55, 0, !dbg !19387
  br i1 %56, label %54, label %115, !dbg !19384, !llvm.loop !19388

57:                                               ; preds = %2
  %58 = icmp eq i32 %1, 1, !dbg !19390
  %59 = load i16, i16* @pmu_mtcmos_ldo_en, align 2, !dbg !19392
  %60 = and i16 %59, -33, !dbg !19392
  %61 = select i1 %58, i16 32, i16 0, !dbg !19392
  %62 = or i16 %60, %61, !dbg !19392
  store i16 %62, i16* @pmu_mtcmos_ldo_en, align 2, !dbg !19393
  %63 = trunc i32 %1 to i16, !dbg !19394
  %64 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 236, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext %63) #22, !dbg !19395
  call void @llvm.dbg.value(metadata i1 %3, metadata !19321, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !19322
  br i1 %3, label %115, label %65, !dbg !19396

65:                                               ; preds = %57, %65
  %66 = tail call zeroext i8 @pmu_get_register_value(i16 noundef zeroext 236, i16 noundef zeroext 1, i16 noundef zeroext 6) #22, !dbg !19397
  call void @llvm.dbg.value(metadata i8 %66, metadata !19321, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !19322
  %67 = icmp eq i8 %66, 0, !dbg !19399
  br i1 %67, label %65, label %115, !dbg !19396, !llvm.loop !19400

68:                                               ; preds = %2
  %69 = icmp eq i32 %1, 1, !dbg !19402
  %70 = load i16, i16* @pmu_mtcmos_ldo_en, align 2, !dbg !19404
  %71 = and i16 %70, -65, !dbg !19404
  %72 = select i1 %69, i16 64, i16 0, !dbg !19404
  %73 = or i16 %71, %72, !dbg !19404
  store i16 %73, i16* @pmu_mtcmos_ldo_en, align 2, !dbg !19405
  %74 = trunc i32 %1 to i16, !dbg !19406
  %75 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 768, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext %74) #22, !dbg !19407
  call void @llvm.dbg.value(metadata i1 %3, metadata !19321, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !19322
  br i1 %3, label %115, label %76, !dbg !19408

76:                                               ; preds = %68, %76
  %77 = tail call zeroext i8 @pmu_get_register_value(i16 noundef zeroext 768, i16 noundef zeroext 1, i16 noundef zeroext 6) #22, !dbg !19409
  call void @llvm.dbg.value(metadata i8 %77, metadata !19321, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !19322
  %78 = icmp eq i8 %77, 0, !dbg !19411
  br i1 %78, label %76, label %115, !dbg !19408, !llvm.loop !19412

79:                                               ; preds = %2
  %80 = icmp eq i32 %1, 1, !dbg !19414
  %81 = load i16, i16* @pmu_mtcmos_ldo_en, align 2, !dbg !19416
  %82 = and i16 %81, -129, !dbg !19416
  %83 = select i1 %80, i16 128, i16 0, !dbg !19416
  %84 = or i16 %82, %83, !dbg !19416
  store i16 %84, i16* @pmu_mtcmos_ldo_en, align 2, !dbg !19417
  %85 = trunc i32 %1 to i16, !dbg !19418
  %86 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 804, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext %85) #22, !dbg !19419
  call void @llvm.dbg.value(metadata i1 %3, metadata !19321, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !19322
  br i1 %3, label %115, label %87, !dbg !19420

87:                                               ; preds = %79, %87
  %88 = tail call zeroext i8 @pmu_get_register_value(i16 noundef zeroext 804, i16 noundef zeroext 1, i16 noundef zeroext 6) #22, !dbg !19421
  call void @llvm.dbg.value(metadata i8 %88, metadata !19321, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !19322
  %89 = icmp eq i8 %88, 0, !dbg !19423
  br i1 %89, label %87, label %115, !dbg !19420, !llvm.loop !19424

90:                                               ; preds = %2
  %91 = icmp eq i32 %1, 1, !dbg !19426
  %92 = load i16, i16* @pmu_mtcmos_ldo_en, align 2, !dbg !19428
  %93 = and i16 %92, -9, !dbg !19428
  %94 = select i1 %91, i16 8, i16 0, !dbg !19428
  %95 = or i16 %93, %94, !dbg !19428
  store i16 %95, i16* @pmu_mtcmos_ldo_en, align 2, !dbg !19429
  %96 = trunc i32 %1 to i16, !dbg !19430
  %97 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 778, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext %96) #22, !dbg !19431
  br label %115, !dbg !19432

98:                                               ; preds = %2
  %99 = icmp eq i32 %1, 1, !dbg !19433
  %100 = load i16, i16* @pmu_mtcmos_ldo_en, align 2, !dbg !19435
  %101 = and i16 %100, -17, !dbg !19435
  %102 = select i1 %99, i16 16, i16 0, !dbg !19435
  %103 = or i16 %101, %102, !dbg !19435
  store i16 %103, i16* @pmu_mtcmos_ldo_en, align 2, !dbg !19436
  %104 = trunc i32 %1 to i16, !dbg !19437
  %105 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 778, i16 noundef zeroext 1, i16 noundef zeroext 1, i16 noundef zeroext %104) #22, !dbg !19438
  br label %115, !dbg !19439

106:                                              ; preds = %2
  %107 = icmp eq i32 %1, 1, !dbg !19440
  %108 = load i16, i16* @pmu_mtcmos_ldo_en, align 2, !dbg !19442
  %109 = and i16 %108, -257, !dbg !19442
  %110 = select i1 %107, i16 256, i16 0, !dbg !19442
  %111 = or i16 %109, %110, !dbg !19442
  store i16 %111, i16* @pmu_mtcmos_ldo_en, align 2, !dbg !19443
  %112 = trunc i32 %1 to i16, !dbg !19444
  %113 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 778, i16 noundef zeroext 1, i16 noundef zeroext 2, i16 noundef zeroext %112) #22, !dbg !19445
  br label %115, !dbg !19446

114:                                              ; preds = %2
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__FUNCTION__.PMIC_VR_CONTROL, i32 0, i32 0), i32 noundef 791, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.17, i32 0, i32 0)) #22, !dbg !19447
  br label %115, !dbg !19448

115:                                              ; preds = %87, %76, %65, %54, %43, %32, %22, %11, %79, %68, %57, %46, %35, %29, %14, %8, %114, %106, %98, %90, %26, %25, %7, %6
  %116 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 62, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 0) #22, !dbg !19449
  %117 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 63, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 0) #22, !dbg !19450
  ret void, !dbg !19451
}

; Function Attrs: noinline nounwind optsize
define dso_local void @PMIC_VCORE_VOSEL_CONFIG(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !19452 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !19456, metadata !DIExpression()), !dbg !19460
  call void @llvm.dbg.value(metadata i32 %1, metadata !19457, metadata !DIExpression()), !dbg !19460
  call void @llvm.dbg.declare(metadata [7 x i32]* @__const.pmu_set_vcore_s1_buck_mt6385.vcbuck_voval, metadata !19458, metadata !DIExpression()), !dbg !19461
  call void @llvm.dbg.declare(metadata [7 x i32]* @__const.PMIC_VCORE_VOSEL_CONFIG.vc_ldo_vosel, metadata !19459, metadata !DIExpression()), !dbg !19462
  tail call void @pmu_set_vrc_key_mt6385(i32 noundef 0) #23, !dbg !19463
  tail call void @pmu_set_ovr_mode_mt6385(i32 noundef 1) #23, !dbg !19464
  %3 = tail call i32 @hal_gpt_delay_us(i32 noundef 350) #22, !dbg !19465
  switch i32 %0, label %36 [
    i32 0, label %4
    i32 1, label %13
    i32 2, label %22
    i32 4, label %31
  ], !dbg !19466

4:                                                ; preds = %2
  %5 = getelementptr inbounds [7 x i32], [7 x i32]* @__const.pmu_set_vcore_s1_buck_mt6385.vcbuck_voval, i32 0, i32 %1, !dbg !19467
  %6 = load i32, i32* %5, align 4, !dbg !19467
  %7 = trunc i32 %6 to i16, !dbg !19467
  %8 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 316, i16 noundef zeroext 15, i16 noundef zeroext 4, i16 noundef zeroext %7) #22, !dbg !19469
  %9 = getelementptr inbounds [7 x i32], [7 x i32]* @__const.PMIC_VCORE_VOSEL_CONFIG.vc_ldo_vosel, i32 0, i32 %1, !dbg !19470
  %10 = load i32, i32* %9, align 4, !dbg !19470
  %11 = trunc i32 %10 to i16, !dbg !19470
  %12 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 254, i16 noundef zeroext 15, i16 noundef zeroext 0, i16 noundef zeroext %11) #22, !dbg !19471
  br label %37, !dbg !19472

13:                                               ; preds = %2
  %14 = getelementptr inbounds [7 x i32], [7 x i32]* @__const.pmu_set_vcore_s1_buck_mt6385.vcbuck_voval, i32 0, i32 %1, !dbg !19473
  %15 = load i32, i32* %14, align 4, !dbg !19473
  %16 = trunc i32 %15 to i16, !dbg !19473
  %17 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 318, i16 noundef zeroext 15, i16 noundef zeroext 4, i16 noundef zeroext %16) #22, !dbg !19474
  %18 = getelementptr inbounds [7 x i32], [7 x i32]* @__const.PMIC_VCORE_VOSEL_CONFIG.vc_ldo_vosel, i32 0, i32 %1, !dbg !19475
  %19 = load i32, i32* %18, align 4, !dbg !19475
  %20 = trunc i32 %19 to i16, !dbg !19475
  %21 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 259, i16 noundef zeroext 15, i16 noundef zeroext 4, i16 noundef zeroext %20) #22, !dbg !19476
  br label %37, !dbg !19477

22:                                               ; preds = %2
  %23 = getelementptr inbounds [7 x i32], [7 x i32]* @__const.pmu_set_vcore_s1_buck_mt6385.vcbuck_voval, i32 0, i32 %1, !dbg !19478
  %24 = load i32, i32* %23, align 4, !dbg !19478
  %25 = trunc i32 %24 to i16, !dbg !19478
  %26 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 319, i16 noundef zeroext 15, i16 noundef zeroext 4, i16 noundef zeroext %25) #22, !dbg !19479
  %27 = getelementptr inbounds [7 x i32], [7 x i32]* @__const.PMIC_VCORE_VOSEL_CONFIG.vc_ldo_vosel, i32 0, i32 %1, !dbg !19480
  %28 = load i32, i32* %27, align 4, !dbg !19480
  %29 = trunc i32 %28 to i16, !dbg !19480
  %30 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 261, i16 noundef zeroext 15, i16 noundef zeroext 4, i16 noundef zeroext %29) #22, !dbg !19481
  br label %37, !dbg !19482

31:                                               ; preds = %2
  %32 = getelementptr inbounds [7 x i32], [7 x i32]* @__const.PMIC_VCORE_VOSEL_CONFIG.vc_ldo_vosel, i32 0, i32 %1, !dbg !19483
  %33 = load i32, i32* %32, align 4, !dbg !19483
  %34 = trunc i32 %33 to i16, !dbg !19483
  %35 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 264, i16 noundef zeroext 15, i16 noundef zeroext 4, i16 noundef zeroext %34) #22, !dbg !19484
  br label %37, !dbg !19485

36:                                               ; preds = %2
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__FUNCTION__.PMIC_VCORE_VOSEL_CONFIG, i32 0, i32 0), i32 noundef 830, i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.18, i32 0, i32 0)) #22, !dbg !19486
  br label %37, !dbg !19487

37:                                               ; preds = %36, %31, %22, %13, %4
  tail call void @pmu_set_ovr_mode_mt6385(i32 noundef 0) #23, !dbg !19488
  %38 = tail call i32 @hal_gpt_delay_us(i32 noundef 250) #22, !dbg !19489
  tail call void @pmu_set_vrc_key_mt6385(i32 noundef 1) #23, !dbg !19490
  ret void, !dbg !19491
}

; Function Attrs: noinline nounwind optsize
define dso_local void @PMIC_VR_VOSEL_INIT_CONFIG(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !19492 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !19497, metadata !DIExpression()), !dbg !19501
  call void @llvm.dbg.value(metadata i32 %1, metadata !19498, metadata !DIExpression()), !dbg !19501
  call void @llvm.dbg.declare(metadata [8 x i32]* @__const.PMIC_VR_VOSEL_INIT_CONFIG.viber_vosel, metadata !19499, metadata !DIExpression()), !dbg !19502
  %3 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 62, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 252) #22, !dbg !19503
  %4 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 63, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 218) #22, !dbg !19504
  switch i32 %0, label %20 [
    i32 10, label %5
    i32 11, label %15
  ], !dbg !19505

5:                                                ; preds = %2
  switch i32 %1, label %14 [
    i32 1, label %6
    i32 2, label %8
    i32 4, label %10
    i32 5, label %12
  ], !dbg !19506

6:                                                ; preds = %5
  %7 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 771, i16 noundef zeroext 7, i16 noundef zeroext 0, i16 noundef zeroext 0) #22, !dbg !19508
  br label %21, !dbg !19510

8:                                                ; preds = %5
  %9 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 771, i16 noundef zeroext 7, i16 noundef zeroext 0, i16 noundef zeroext 1) #22, !dbg !19511
  br label %21, !dbg !19512

10:                                               ; preds = %5
  %11 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 771, i16 noundef zeroext 7, i16 noundef zeroext 0, i16 noundef zeroext 2) #22, !dbg !19513
  br label %21, !dbg !19514

12:                                               ; preds = %5
  %13 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 771, i16 noundef zeroext 7, i16 noundef zeroext 0, i16 noundef zeroext 3) #22, !dbg !19515
  br label %21, !dbg !19516

14:                                               ; preds = %5
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.PMIC_VR_VOSEL_INIT_CONFIG, i32 0, i32 0), i32 noundef 866, i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.19, i32 0, i32 0)) #22, !dbg !19517
  br label %21, !dbg !19518

15:                                               ; preds = %2
  %16 = getelementptr inbounds [8 x i32], [8 x i32]* @__const.PMIC_VR_VOSEL_INIT_CONFIG.viber_vosel, i32 0, i32 %1, !dbg !19519
  %17 = load i32, i32* %16, align 4, !dbg !19519
  %18 = trunc i32 %17 to i16, !dbg !19519
  %19 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 807, i16 noundef zeroext 7, i16 noundef zeroext 0, i16 noundef zeroext %18) #22, !dbg !19520
  br label %21, !dbg !19521

20:                                               ; preds = %2
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.PMIC_VR_VOSEL_INIT_CONFIG, i32 0, i32 0), i32 noundef 876, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.17, i32 0, i32 0)) #22, !dbg !19522
  br label %21, !dbg !19523

21:                                               ; preds = %6, %8, %10, %12, %14, %20, %15
  %22 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 62, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 0) #22, !dbg !19524
  %23 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 63, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 0) #22, !dbg !19525
  ret void, !dbg !19526
}

; Function Attrs: noinline nounwind optsize
define dso_local void @pmu_control_mtcmos_mt6385() local_unnamed_addr #0 !dbg !3435 {
  %1 = load i16, i16* @pmu_mtcmos_ldo_ctrl, align 2, !dbg !19527
  %2 = load i16, i16* @pmu_mtcmos_ldo_en, align 2, !dbg !19528
  %3 = and i16 %2, %1, !dbg !19529
  %4 = load i16, i16* @pmu_mtcmos_vio28_pmod, align 2, !dbg !19530
  %5 = or i16 %3, %4, !dbg !19531
  store i16 %5, i16* @pmu_control_mtcmos_mt6385.mtcmos_flag, align 2, !dbg !19532
  %6 = load i16, i16* @pmu_control_mtcmos_mt6385.local_flag, align 2, !dbg !19533
  %7 = icmp eq i16 %6, %5, !dbg !19535
  br i1 %7, label %12, label %8, !dbg !19536

8:                                                ; preds = %0
  %9 = icmp eq i16 %5, 0, !dbg !19537
  %10 = select i1 %9, i8 0, i8 3
  tail call void @pmu_set_mtcmos_mt6385(i8 noundef zeroext %10) #23, !dbg !19540
  %11 = load i16, i16* @pmu_control_mtcmos_mt6385.mtcmos_flag, align 2, !dbg !19541
  store i16 %11, i16* @pmu_control_mtcmos_mt6385.local_flag, align 2, !dbg !19542
  br label %12, !dbg !19543

12:                                               ; preds = %8, %0
  ret void, !dbg !19544
}

; Function Attrs: noinline nounwind optsize
define dso_local void @pmu_set_mtcmos_mt6385(i8 noundef zeroext %0) local_unnamed_addr #0 !dbg !19545 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !19547, metadata !DIExpression()), !dbg !19548
  %2 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 62, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 252) #22, !dbg !19549
  %3 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 63, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 218) #22, !dbg !19550
  %4 = zext i8 %0 to i16, !dbg !19551
  %5 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 130, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext %4) #22, !dbg !19552
  %6 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 62, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 0) #22, !dbg !19553
  %7 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 63, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 0) #22, !dbg !19554
  ret void, !dbg !19555
}

; Function Attrs: noinline nounwind optsize
define dso_local void @pmu_ctrl_va28_ldo_mt6385(i8 noundef zeroext %0) local_unnamed_addr #0 !dbg !3440 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !3444, metadata !DIExpression()), !dbg !19556
  %2 = load i8, i8* @pmu_ctrl_va28_ldo_mt6385.version, align 1, !dbg !19557
  switch i8 %2, label %5 [
    i8 17, label %22
    i8 0, label %3
  ], !dbg !19559

3:                                                ; preds = %1
  %4 = tail call zeroext i8 @pmu_get_register_value(i16 noundef zeroext 0, i16 noundef zeroext 255, i16 noundef zeroext 0) #22, !dbg !19560
  store i8 %4, i8* @pmu_ctrl_va28_ldo_mt6385.version, align 1, !dbg !19563
  br label %5, !dbg !19564

5:                                                ; preds = %1, %3
  %6 = icmp eq i8 %0, 1, !dbg !19565
  %7 = load i32, i32* @pmu_ctrl_va28_ldo_mt6385.resoure_count, align 4, !dbg !19567
  br i1 %6, label %8, label %15, !dbg !19568

8:                                                ; preds = %5
  %9 = icmp eq i32 %7, 0, !dbg !19569
  br i1 %9, label %10, label %12, !dbg !19572

10:                                               ; preds = %8
  tail call void @PMIC_VR_SLEEP_WKUP_CONFIG(i32 noundef 8, i32 noundef 3, i32 noundef 1, i32 noundef 0) #23, !dbg !19573
  tail call void @PMIC_VR_SLEEP_WKUP_CONFIG(i32 noundef 8, i32 noundef 4, i32 noundef 1, i32 noundef 0) #23, !dbg !19575
  %11 = load i32, i32* @pmu_ctrl_va28_ldo_mt6385.resoure_count, align 4, !dbg !19576
  br label %12, !dbg !19577

12:                                               ; preds = %10, %8
  %13 = phi i32 [ %11, %10 ], [ %7, %8 ], !dbg !19576
  %14 = add i32 %13, 1, !dbg !19576
  br label %20, !dbg !19578

15:                                               ; preds = %5
  %16 = icmp ult i32 %7, 2, !dbg !19579
  br i1 %16, label %17, label %18, !dbg !19582

17:                                               ; preds = %15
  tail call void @PMIC_VR_SLEEP_WKUP_CONFIG(i32 noundef 8, i32 noundef 3, i32 noundef 0, i32 noundef 0) #23, !dbg !19583
  tail call void @PMIC_VR_SLEEP_WKUP_CONFIG(i32 noundef 8, i32 noundef 4, i32 noundef 0, i32 noundef 0) #23, !dbg !19585
  br label %20, !dbg !19586

18:                                               ; preds = %15
  %19 = add i32 %7, -1, !dbg !19587
  br label %20

20:                                               ; preds = %12, %18, %17
  %21 = phi i32 [ 0, %17 ], [ %19, %18 ], [ %14, %12 ]
  store i32 %21, i32* @pmu_ctrl_va28_ldo_mt6385.resoure_count, align 4, !dbg !19567
  br label %22, !dbg !19589

22:                                               ; preds = %20, %1
  ret void, !dbg !19589
}

; Function Attrs: noinline nounwind optsize
define dso_local void @pmu_ctrl_vbt_ldo_mt6385(i8 noundef zeroext %0) local_unnamed_addr #0 !dbg !19590 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !19592, metadata !DIExpression()), !dbg !19593
  %2 = icmp eq i8 %0, 1, !dbg !19594
  %3 = xor i1 %2, true
  %4 = zext i1 %3 to i32
  %5 = zext i1 %2 to i32
  tail call void @PMIC_VR_SLEEP_WKUP_CONFIG(i32 noundef 7, i32 noundef 3, i32 noundef %4, i32 noundef 2) #23, !dbg !19596
  tail call void @PMIC_VR_SLEEP_WKUP_CONFIG(i32 noundef 7, i32 noundef 4, i32 noundef %4, i32 noundef 2) #23, !dbg !19596
  tail call void @PMIC_VR_CONTROL(i32 noundef 7, i32 noundef %5) #23, !dbg !19596
  ret void, !dbg !19597
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local i32 @pmu_get_vcore_setting_index(i8 noundef zeroext %0) local_unnamed_addr #14 !dbg !19598 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !19602, metadata !DIExpression()), !dbg !19605
  call void @llvm.dbg.declare(metadata [7 x i8]* @__const.pmu_get_vcore_setting_index.vcbuck_voval, metadata !19603, metadata !DIExpression()), !dbg !19606
  call void @llvm.dbg.value(metadata i32 0, metadata !19604, metadata !DIExpression()), !dbg !19605
  br label %2, !dbg !19607

2:                                                ; preds = %1, %7
  %3 = phi i32 [ 0, %1 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !19604, metadata !DIExpression()), !dbg !19605
  %4 = getelementptr inbounds [7 x i8], [7 x i8]* @__const.pmu_get_vcore_setting_index.vcbuck_voval, i32 0, i32 %3, !dbg !19609
  %5 = load i8, i8* %4, align 1, !dbg !19609
  %6 = icmp eq i8 %5, %0, !dbg !19613
  br i1 %6, label %10, label %7, !dbg !19614

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %3, 1, !dbg !19615
  call void @llvm.dbg.value(metadata i32 %8, metadata !19604, metadata !DIExpression()), !dbg !19605
  %9 = icmp eq i32 %8, 7, !dbg !19616
  br i1 %9, label %10, label %2, !dbg !19607, !llvm.loop !19617

10:                                               ; preds = %7, %2
  %11 = phi i32 [ %3, %2 ], [ 255, %7 ], !dbg !19605
  ret i32 %11, !dbg !19619
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i8 @pmu_set_vcore_voltage_mt6385(i8 noundef zeroext %0, i8 noundef zeroext %1) local_unnamed_addr #0 !dbg !3449 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !3453, metadata !DIExpression()), !dbg !19620
  call void @llvm.dbg.value(metadata i8 %1, metadata !3454, metadata !DIExpression()), !dbg !19620
  %3 = load i1, i1* @pmu_set_vcore_voltage_mt6385.init, align 1, !dbg !19621
  br i1 %3, label %15, label %4, !dbg !19623

4:                                                ; preds = %2
  %5 = tail call zeroext i8 @pmu_get_register_value(i16 noundef zeroext 319, i16 noundef zeroext 15, i16 noundef zeroext 4) #22, !dbg !19624
  %6 = tail call i32 @pmu_get_vcore_setting_index(i8 noundef zeroext %5) #23, !dbg !19626
  %7 = trunc i32 %6 to i8, !dbg !19626
  store i8 %7, i8* @pmu_set_vcore_voltage_mt6385.old_vcore_lp, align 1, !dbg !19627
  %8 = tail call zeroext i8 @pmu_get_register_value(i16 noundef zeroext 318, i16 noundef zeroext 15, i16 noundef zeroext 4) #22, !dbg !19628
  %9 = tail call i32 @pmu_get_vcore_setting_index(i8 noundef zeroext %8) #23, !dbg !19629
  %10 = trunc i32 %9 to i8, !dbg !19629
  %11 = load volatile i32, i32* inttoptr (i32 -1576271820 to i32*), align 4, !dbg !19630
  %12 = icmp eq i32 %11, 0, !dbg !19632
  %13 = load i8, i8* @pmu_set_vcore_voltage_mt6385.old_vcore_lp, align 1, !dbg !19633
  %14 = select i1 %12, i8 %13, i8 %10, !dbg !19633
  store i8 %14, i8* @pmu_set_vcore_voltage_mt6385.origin_voltage, align 1, !dbg !19633
  store i8 %14, i8* @pmu_set_vcore_voltage_mt6385.old_vcore, align 1, !dbg !19634
  store i1 true, i1* @pmu_set_vcore_voltage_mt6385.init, align 1, !dbg !19635
  br label %15, !dbg !19636

15:                                               ; preds = %4, %2
  %16 = add i8 %1, -7, !dbg !19637
  %17 = icmp ult i8 %16, -5, !dbg !19637
  br i1 %17, label %63, label %18, !dbg !19637

18:                                               ; preds = %15
  %19 = zext i8 %1 to i32, !dbg !19639
  %20 = icmp eq i8 %0, 1, !dbg !19640
  %21 = getelementptr inbounds [7 x i8], [7 x i8]* @pmu_set_vcore_voltage_mt6385.Vcore_Resource_Ctrl, i32 0, i32 %19, !dbg !19642
  %22 = load i8, i8* %21, align 1, !dbg !19642
  br i1 %20, label %25, label %23, !dbg !19643

23:                                               ; preds = %18
  %24 = icmp eq i8 %22, 0, !dbg !19644
  br i1 %24, label %28, label %25, !dbg !19647

25:                                               ; preds = %23, %18
  %26 = phi i8 [ 1, %18 ], [ -1, %23 ]
  %27 = add i8 %22, %26, !dbg !19642
  store i8 %27, i8* %21, align 1, !dbg !19642
  br label %28, !dbg !19648

28:                                               ; preds = %25, %23
  br label %29, !dbg !19648

29:                                               ; preds = %28, %34
  %30 = phi i32 [ %35, %34 ], [ 6, %28 ]
  call void @llvm.dbg.value(metadata i32 %30, metadata !3455, metadata !DIExpression()), !dbg !19620
  %31 = getelementptr inbounds [7 x i8], [7 x i8]* @pmu_set_vcore_voltage_mt6385.Vcore_Resource_Ctrl, i32 0, i32 %30, !dbg !19650
  %32 = load i8, i8* %31, align 1, !dbg !19650
  %33 = icmp eq i8 %32, 0, !dbg !19654
  br i1 %33, label %34, label %37, !dbg !19655

34:                                               ; preds = %29
  %35 = add nsw i32 %30, -1, !dbg !19656
  call void @llvm.dbg.value(metadata i32 %35, metadata !3455, metadata !DIExpression()), !dbg !19620
  %36 = icmp eq i32 %30, 0, !dbg !19657
  br i1 %36, label %39, label %29, !dbg !19648, !llvm.loop !19658

37:                                               ; preds = %29
  %38 = icmp slt i32 %30, 0, !dbg !19660
  br i1 %38, label %39, label %42, !dbg !19662

39:                                               ; preds = %34, %37
  %40 = load i8, i8* @pmu_set_vcore_voltage_mt6385.origin_voltage, align 1, !dbg !19662
  %41 = zext i8 %40 to i32, !dbg !19662
  br label %42, !dbg !19662

42:                                               ; preds = %37, %39
  %43 = phi i32 [ %41, %39 ], [ %30, %37 ]
  call void @llvm.dbg.value(metadata i32 %43, metadata !3455, metadata !DIExpression()), !dbg !19620
  %44 = load i8, i8* @pmu_set_vcore_voltage_mt6385.old_vcore, align 1, !dbg !19663
  %45 = zext i8 %44 to i32, !dbg !19663
  %46 = icmp eq i32 %43, %45, !dbg !19665
  %47 = trunc i32 %43 to i8, !dbg !19620
  br i1 %46, label %63, label %48, !dbg !19666

48:                                               ; preds = %42
  store i8 %47, i8* @pmu_set_vcore_voltage_mt6385.old_vcore, align 1, !dbg !19667
  %49 = icmp eq i32 %43, 6, !dbg !19669
  br i1 %49, label %50, label %54, !dbg !19671

50:                                               ; preds = %48
  %51 = load volatile i32, i32* inttoptr (i32 -1576271820 to i32*), align 4, !dbg !19672
  %52 = icmp eq i32 %51, 0, !dbg !19675
  br i1 %52, label %53, label %63, !dbg !19676

53:                                               ; preds = %50
  tail call void @PSI_LP_RUN_AT_HP(i32 noundef 1) #22, !dbg !19677
  br label %63, !dbg !19679

54:                                               ; preds = %48
  %55 = load i8, i8* @pmu_set_vcore_voltage_mt6385.old_vcore_lp, align 1, !dbg !19680
  %56 = zext i8 %55 to i32, !dbg !19680
  %57 = icmp eq i32 %43, %56, !dbg !19683
  br i1 %57, label %59, label %58, !dbg !19684

58:                                               ; preds = %54
  store i8 %47, i8* @pmu_set_vcore_voltage_mt6385.old_vcore_lp, align 1, !dbg !19685
  tail call void @PMIC_VCORE_VOSEL_CONFIG(i32 noundef 2, i32 noundef %43) #23, !dbg !19687
  br label %59, !dbg !19688

59:                                               ; preds = %58, %54
  %60 = load volatile i32, i32* inttoptr (i32 -1576271820 to i32*), align 4, !dbg !19689
  %61 = icmp eq i32 %60, 1, !dbg !19691
  br i1 %61, label %62, label %63, !dbg !19692

62:                                               ; preds = %59
  tail call void @PSI_HP_RUN_AT_LP(i32 noundef 1) #22, !dbg !19693
  br label %63, !dbg !19695

63:                                               ; preds = %42, %59, %62, %50, %53, %15
  %64 = phi i8 [ -1, %15 ], [ 6, %53 ], [ 6, %50 ], [ %47, %62 ], [ %47, %59 ], [ %47, %42 ], !dbg !19620
  ret i8 %64, !dbg !19696
}

; Function Attrs: optsize
declare dso_local void @PSI_LP_RUN_AT_HP(i32 noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local void @PSI_HP_RUN_AT_LP(i32 noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i8 @pmu_get_vcore_voltage_mt6385() local_unnamed_addr #0 !dbg !19697 {
  %1 = tail call zeroext i8 @pmu_get_register_value(i16 noundef zeroext 65, i16 noundef zeroext 3, i16 noundef zeroext 6) #22, !dbg !19701
  call void @llvm.dbg.value(metadata i8 %1, metadata !19699, metadata !DIExpression()), !dbg !19702
  %2 = icmp eq i8 %1, 3, !dbg !19703
  %3 = select i1 %2, i16 319, i16 318
  %4 = tail call zeroext i8 @pmu_get_register_value(i16 noundef zeroext %3, i16 noundef zeroext 15, i16 noundef zeroext 4) #22, !dbg !19705
  %5 = tail call i32 @pmu_get_vcore_setting_index(i8 noundef zeroext %4) #23, !dbg !19705
  %6 = trunc i32 %5 to i8, !dbg !19705
  call void @llvm.dbg.value(metadata i8 %6, metadata !19700, metadata !DIExpression()), !dbg !19702
  ret i8 %6, !dbg !19706
}

; Function Attrs: noinline nounwind optsize
define dso_local void @pmu_set_vcore_s1_buck_mt6385() local_unnamed_addr #0 !dbg !3467 {
  call void @llvm.dbg.declare(metadata [7 x i32]* @__const.pmu_set_vcore_s1_buck_mt6385.vcbuck_voval, metadata !3469, metadata !DIExpression()), !dbg !19707
  %1 = tail call zeroext i8 @pmu_get_vcore_voltage() #22, !dbg !19708
  %2 = zext i8 %1 to i32, !dbg !19709
  %3 = load i32, i32* @pmu_set_vcore_s1_buck_mt6385.S1_setting, align 4, !dbg !19710
  %4 = icmp eq i32 %3, %2, !dbg !19712
  br i1 %4, label %11, label %5, !dbg !19713

5:                                                ; preds = %0
  store i32 %2, i32* @pmu_set_vcore_s1_buck_mt6385.S1_setting, align 4, !dbg !19714
  tail call void @pmu_set_vrc_key_mt6385(i32 noundef 0) #23, !dbg !19716
  tail call void @pmu_set_ovr_mode_mt6385(i32 noundef 1) #23, !dbg !19717
  %6 = load i32, i32* @pmu_set_vcore_s1_buck_mt6385.S1_setting, align 4, !dbg !19718
  %7 = getelementptr inbounds [7 x i32], [7 x i32]* @__const.pmu_set_vcore_s1_buck_mt6385.vcbuck_voval, i32 0, i32 %6, !dbg !19719
  %8 = load i32, i32* %7, align 4, !dbg !19719
  %9 = trunc i32 %8 to i16, !dbg !19719
  %10 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 320, i16 noundef zeroext 15, i16 noundef zeroext 4, i16 noundef zeroext %9) #22, !dbg !19720
  tail call void @pmu_set_ovr_mode_mt6385(i32 noundef 0) #23, !dbg !19721
  tail call void @pmu_set_vrc_key_mt6385(i32 noundef 1) #23, !dbg !19722
  br label %11, !dbg !19723

11:                                               ; preds = %5, %0
  ret void, !dbg !19724
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i8 @pmu_get_usb_input_status_mt6385() local_unnamed_addr #0 !dbg !19725 {
  %1 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 62, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 252) #22, !dbg !19728
  %2 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 63, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 218) #22, !dbg !19729
  %3 = tail call zeroext i8 @pmu_get_register_value(i16 noundef zeroext 135, i16 noundef zeroext 1, i16 noundef zeroext 5) #22, !dbg !19730
  call void @llvm.dbg.value(metadata i8 %3, metadata !19727, metadata !DIExpression()), !dbg !19731
  %4 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 62, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 0) #22, !dbg !19732
  %5 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 63, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 0) #22, !dbg !19733
  ret i8 %3, !dbg !19734
}

; Function Attrs: noinline nounwind optsize
define dso_local void @pmu_enter_power_off_mt6385() local_unnamed_addr #0 !dbg !19735 {
  %1 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 75, i16 noundef zeroext 1, i16 noundef zeroext 0, i16 noundef zeroext 0) #22, !dbg !19736
  ret void, !dbg !19737
}

; Function Attrs: noinline nounwind optsize
define dso_local void @pmu_reset_mt6385() local_unnamed_addr #0 !dbg !19738 {
  %1 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 62, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 252) #22, !dbg !19739
  %2 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 63, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 218) #22, !dbg !19740
  %3 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 75, i16 noundef zeroext 1, i16 noundef zeroext 5, i16 noundef zeroext 1) #22, !dbg !19741
  %4 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 62, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 0) #22, !dbg !19742
  %5 = tail call zeroext i1 @pmu_set_register_value(i16 noundef zeroext 63, i16 noundef zeroext 255, i16 noundef zeroext 0, i16 noundef zeroext 0) #22, !dbg !19743
  ret void, !dbg !19744
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @__EMI_GetSR(i32 noundef %0) local_unnamed_addr #2 section ".tcm_code" !dbg !19745 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !19747, metadata !DIExpression()), !dbg !19749
  %2 = shl i32 %0, 20, !dbg !19750
  %3 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !19751
  %4 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %3, i32 0, i32 33, !dbg !19752
  store volatile i32 %2, i32* %4, align 4, !dbg !19753
  %5 = load volatile i32, i32* %4, align 4, !dbg !19754
  %6 = or i32 %5, 65536, !dbg !19755
  store volatile i32 %6, i32* %4, align 4, !dbg !19756
  br label %7, !dbg !19757

7:                                                ; preds = %7, %1
  %8 = load volatile i32, i32* %4, align 4, !dbg !19758
  %9 = and i32 %8, 1, !dbg !19759
  %10 = icmp eq i32 %9, 0, !dbg !19760
  br i1 %10, label %7, label %11, !dbg !19757, !llvm.loop !19761

11:                                               ; preds = %7
  %12 = load volatile i32, i32* %4, align 4, !dbg !19763
  %13 = lshr i32 %12, 8, !dbg !19764
  %14 = and i32 %13, 255, !dbg !19764
  call void @llvm.dbg.value(metadata i32 %14, metadata !19748, metadata !DIExpression()), !dbg !19749
  ret i32 %14, !dbg !19765
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @__EMI_SetSR(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 section ".tcm_code" !dbg !19766 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !19768, metadata !DIExpression()), !dbg !19770
  call void @llvm.dbg.value(metadata i32 %1, metadata !19769, metadata !DIExpression()), !dbg !19770
  call void @llvm.dbg.value(metadata i32 %1, metadata !19769, metadata !DIExpression(DW_OP_constu, 255, DW_OP_and, DW_OP_stack_value)), !dbg !19770
  %3 = shl i32 %1, 24, !dbg !19771
  %4 = shl i32 %0, 20, !dbg !19772
  %5 = or i32 %4, %3, !dbg !19773
  %6 = or i32 %5, 131072, !dbg !19773
  %7 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !19774
  %8 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %7, i32 0, i32 33, !dbg !19775
  store volatile i32 %6, i32* %8, align 4, !dbg !19776
  %9 = load volatile i32, i32* %8, align 4, !dbg !19777
  %10 = or i32 %9, 65536, !dbg !19778
  store volatile i32 %10, i32* %8, align 4, !dbg !19779
  br label %11, !dbg !19780

11:                                               ; preds = %11, %2
  %12 = load volatile i32, i32* %8, align 4, !dbg !19781
  %13 = and i32 %12, 1, !dbg !19782
  %14 = icmp eq i32 %13, 0, !dbg !19783
  br i1 %14, label %11, label %15, !dbg !19780, !llvm.loop !19784

15:                                               ; preds = %11
  ret void, !dbg !19786
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @__EMI_SetRegValfromCMCP() local_unnamed_addr #7 section ".tcm_code" !dbg !19787 {
  %1 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 0), align 4, !dbg !19788
  store i32 %1, i32* @EMI_GENA_VAL, align 4, !dbg !19789
  %2 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 1), align 4, !dbg !19790
  store i32 %2, i32* @EMI_RDCT_VAL, align 4, !dbg !19791
  %3 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 2), align 4, !dbg !19792
  store i32 %3, i32* @EMI_DSRAM_VAL, align 4, !dbg !19793
  %4 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 3), align 4, !dbg !19794
  store i32 %4, i32* @EMI_MSRAM_VAL, align 4, !dbg !19795
  %5 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 4), align 4, !dbg !19796
  store i32 %5, i32* @EMI_IDL_C_VAL, align 4, !dbg !19797
  %6 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 5), align 4, !dbg !19798
  store i32 %6, i32* @EMI_IDL_D_VAL, align 4, !dbg !19799
  %7 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 6), align 4, !dbg !19800
  store i32 %7, i32* @EMI_IDL_E_VAL, align 4, !dbg !19801
  %8 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 7), align 4, !dbg !19802
  store i32 %8, i32* @EMI_ODL_C_VAL, align 4, !dbg !19803
  %9 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 8), align 4, !dbg !19804
  store i32 %9, i32* @EMI_ODL_D_VAL, align 4, !dbg !19805
  %10 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 9), align 4, !dbg !19806
  store i32 %10, i32* @EMI_ODL_E_VAL, align 4, !dbg !19807
  %11 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 10), align 4, !dbg !19808
  store i32 %11, i32* @EMI_ODL_F_VAL, align 4, !dbg !19809
  %12 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 11), align 4, !dbg !19810
  store i32 %12, i32* @EMI_IO_A_VAL, align 4, !dbg !19811
  %13 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 12), align 4, !dbg !19812
  store i32 %13, i32* @EMI_IO_B_VAL, align 4, !dbg !19813
  ret void, !dbg !19814
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @__EMI_EnableBandwidthLimiter() local_unnamed_addr #2 section ".tcm_code" !dbg !19815 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !19818
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 35, !dbg !19819
  store volatile i32 21553, i32* %2, align 4, !dbg !19820
  %3 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 37, !dbg !19821
  store volatile i32 20489, i32* %3, align 4, !dbg !19822
  %4 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 39, !dbg !19823
  store volatile i32 20550, i32* %4, align 4, !dbg !19824
  ret i32 0, !dbg !19825
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @TestCase_MBIST() local_unnamed_addr #2 section ".tcm_code" !dbg !19826 {
  call void @llvm.dbg.declare(metadata [2 x i32]* @__const.TestCase_MBIST.mbist_data, metadata !19830, metadata !DIExpression()), !dbg !19834
  call void @llvm.dbg.value(metadata i32 0, metadata !19828, metadata !DIExpression()), !dbg !19835
  call void @llvm.dbg.value(metadata i32 16384, metadata !19829, metadata !DIExpression()), !dbg !19835
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !19836
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 65, !dbg !19837
  store volatile i32 0, i32* %2, align 4, !dbg !19838
  call void @llvm.dbg.value(metadata i32 0, metadata !19832, metadata !DIExpression()), !dbg !19835
  %3 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 67
  %4 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 71
  call void @llvm.dbg.value(metadata i32 0, metadata !19832, metadata !DIExpression()), !dbg !19835
  br label %5, !dbg !19839

5:                                                ; preds = %0, %34
  %6 = phi i32 [ 0, %0 ], [ %35, %34 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !19832, metadata !DIExpression()), !dbg !19835
  %7 = shl i32 %6, 12
  call void @llvm.dbg.value(metadata i32 0, metadata !19831, metadata !DIExpression()), !dbg !19835
  br label %8, !dbg !19841

8:                                                ; preds = %5, %31
  %9 = phi i32 [ 0, %5 ], [ %32, %31 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !19831, metadata !DIExpression()), !dbg !19835
  call void @llvm.dbg.value(metadata i32 0, metadata !19833, metadata !DIExpression()), !dbg !19835
  %10 = getelementptr inbounds [2 x i32], [2 x i32]* @__const.TestCase_MBIST.mbist_data, i32 0, i32 %9
  br label %13, !dbg !19845

11:                                               ; preds = %26
  call void @llvm.dbg.value(metadata i32 undef, metadata !19833, metadata !DIExpression()), !dbg !19835
  %12 = icmp eq i32 %30, 2, !dbg !19849
  br i1 %12, label %31, label %13, !dbg !19845, !llvm.loop !19851

13:                                               ; preds = %8, %11
  %14 = phi i32 [ 0, %8 ], [ %30, %11 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !19833, metadata !DIExpression()), !dbg !19835
  store volatile i32 0, i32* %2, align 4, !dbg !19853
  store volatile i32 63, i32* %3, align 4, !dbg !19855
  %15 = load i32, i32* %10, align 4, !dbg !19856
  %16 = shl i32 %15, 16, !dbg !19857
  %17 = shl nuw nsw i32 %14, 13, !dbg !19858
  %18 = or i32 %17, %7, !dbg !19859
  %19 = or i32 %18, %16, !dbg !19860
  store volatile i32 %19, i32* %2, align 4, !dbg !19861
  %20 = load volatile i32, i32* %2, align 4, !dbg !19862
  %21 = or i32 %20, 805, !dbg !19862
  store volatile i32 %21, i32* %2, align 4, !dbg !19862
  br label %22, !dbg !19863

22:                                               ; preds = %22, %13
  %23 = load volatile i32, i32* %4, align 4, !dbg !19864
  %24 = and i32 %23, 2, !dbg !19865
  %25 = icmp eq i32 %24, 0, !dbg !19866
  br i1 %25, label %22, label %26, !dbg !19863, !llvm.loop !19867

26:                                               ; preds = %22
  %27 = load volatile i32, i32* %4, align 4, !dbg !19869
  %28 = and i32 %27, 1, !dbg !19871
  %29 = icmp eq i32 %28, 0, !dbg !19872
  %30 = add nuw nsw i32 %14, 1, !dbg !19873
  call void @llvm.dbg.value(metadata i32 %30, metadata !19833, metadata !DIExpression()), !dbg !19835
  br i1 %29, label %11, label %37, !dbg !19874

31:                                               ; preds = %11
  %32 = add nuw nsw i32 %9, 1, !dbg !19875
  call void @llvm.dbg.value(metadata i32 %32, metadata !19831, metadata !DIExpression()), !dbg !19835
  %33 = icmp eq i32 %32, 2, !dbg !19876
  br i1 %33, label %34, label %8, !dbg !19841, !llvm.loop !19877

34:                                               ; preds = %31
  %35 = add nuw nsw i32 %6, 1, !dbg !19879
  call void @llvm.dbg.value(metadata i32 %35, metadata !19832, metadata !DIExpression()), !dbg !19835
  %36 = icmp eq i32 %35, 2, !dbg !19880
  br i1 %36, label %37, label %5, !dbg !19839, !llvm.loop !19881

37:                                               ; preds = %34, %26
  %38 = phi i32 [ -1, %26 ], [ 0, %34 ], !dbg !19835
  store volatile i32 0, i32* %2, align 4, !dbg !19835
  ret i32 %38, !dbg !19883
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @__EMI_DataAutoTrackingMbistTest() local_unnamed_addr #2 section ".tcm_code" !dbg !19884 {
  %1 = tail call i32 @TestCase_MBIST() #23, !dbg !19885
  %2 = icmp ne i32 %1, 0, !dbg !19887
  %3 = sext i1 %2 to i32, !dbg !19888
  ret i32 %3, !dbg !19889
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @__EMI_EnableDataAutoTracking() local_unnamed_addr #2 section ".tcm_code" !dbg !19890 {
  call void @llvm.dbg.value(metadata i32 31, metadata !19892, metadata !DIExpression()), !dbg !19894
  call void @llvm.dbg.value(metadata i32 0, metadata !19893, metadata !DIExpression()), !dbg !19894
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !19895
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 7, !dbg !19896
  store volatile i32 0, i32* %2, align 4, !dbg !19897
  %3 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 9, !dbg !19898
  store volatile i32 0, i32* %3, align 4, !dbg !19899
  %4 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 11, !dbg !19900
  store volatile i32 0, i32* %4, align 4, !dbg !19901
  %5 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 13, !dbg !19902
  store volatile i32 0, i32* %5, align 4, !dbg !19903
  call void @llvm.dbg.value(metadata i32 31, metadata !19892, metadata !DIExpression()), !dbg !19894
  %6 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 9, !dbg !19904
  store volatile i32 522133279, i32* %6, align 4, !dbg !19908
  %7 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 11, !dbg !19909
  store volatile i32 522133279, i32* %7, align 4, !dbg !19910
  %8 = tail call i32 @__EMI_DataAutoTrackingMbistTest() #23, !dbg !19911
  %9 = icmp eq i32 %8, 0, !dbg !19913
  call void @llvm.dbg.value(metadata i32 31, metadata !19892, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !19894
  br i1 %9, label %36, label %10, !dbg !19914

10:                                               ; preds = %0, %13
  %11 = phi i32 [ %14, %13 ], [ 31, %0 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !19892, metadata !DIExpression()), !dbg !19894
  call void @llvm.dbg.value(metadata i32 %11, metadata !19892, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !19894
  call void @llvm.dbg.value(metadata i32 %11, metadata !19892, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !19894
  %12 = icmp eq i32 %11, 0, !dbg !19915
  br i1 %12, label %26, label %13, !dbg !19916, !llvm.loop !19917

13:                                               ; preds = %10
  %14 = add nsw i32 %11, -1, !dbg !19919
  call void @llvm.dbg.value(metadata i32 %14, metadata !19892, metadata !DIExpression()), !dbg !19894
  %15 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !19920
  %16 = shl i32 %14, 24, !dbg !19921
  %17 = shl i32 %14, 16, !dbg !19922
  %18 = shl i32 %14, 8, !dbg !19923
  %19 = or i32 %17, %14, !dbg !19924
  %20 = or i32 %19, %16, !dbg !19925
  %21 = or i32 %20, %18, !dbg !19926
  %22 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %15, i32 0, i32 9, !dbg !19904
  store volatile i32 %21, i32* %22, align 4, !dbg !19908
  %23 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %15, i32 0, i32 11, !dbg !19909
  store volatile i32 %21, i32* %23, align 4, !dbg !19910
  %24 = tail call i32 @__EMI_DataAutoTrackingMbistTest() #23, !dbg !19911
  %25 = icmp eq i32 %24, 0, !dbg !19913
  call void @llvm.dbg.value(metadata i32 %14, metadata !19892, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !19894
  br i1 %25, label %36, label %10, !dbg !19914

26:                                               ; preds = %10, %26
  %27 = phi i32 [ %33, %26 ], [ 1, %10 ]
  call void @llvm.dbg.value(metadata i32 %27, metadata !19893, metadata !DIExpression()), !dbg !19894
  %28 = shl nuw nsw i32 %27, 16, !dbg !19927
  %29 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !19933
  %30 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %29, i32 0, i32 13, !dbg !19934
  store volatile i32 %28, i32* %30, align 4, !dbg !19935
  %31 = tail call i32 @__EMI_DataAutoTrackingMbistTest() #23, !dbg !19936
  %32 = icmp eq i32 %31, 0, !dbg !19938
  call void @llvm.dbg.value(metadata i32 %27, metadata !19893, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !19894
  %33 = add nuw nsw i32 %27, 1
  %34 = icmp eq i32 %33, 32
  %35 = select i1 %32, i1 true, i1 %34, !dbg !19939
  call void @llvm.dbg.value(metadata i32 %33, metadata !19893, metadata !DIExpression()), !dbg !19894
  call void @llvm.dbg.value(metadata i32 %27, metadata !19893, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !19894
  br i1 %35, label %36, label %26, !dbg !19939, !llvm.loop !19940

36:                                               ; preds = %13, %26, %0
  ret void, !dbg !19943
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @EMI_PowerOn_Init() local_unnamed_addr #2 section ".tcm_code" !dbg !19944 {
  store volatile i32 0, i32* inttoptr (i32 -1575944184 to i32*), align 8, !dbg !19945
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !19946
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 27, !dbg !19947
  store volatile i32 1, i32* %2, align 4, !dbg !19948
  br label %3, !dbg !19949

3:                                                ; preds = %3, %0
  %4 = load volatile i32, i32* %2, align 4, !dbg !19950
  %5 = and i32 %4, 2, !dbg !19951
  %6 = icmp eq i32 %5, 0, !dbg !19951
  br i1 %6, label %3, label %7, !dbg !19949, !llvm.loop !19952

7:                                                ; preds = %3
  store volatile i32 0, i32* %2, align 4, !dbg !19954
  br label %8, !dbg !19955

8:                                                ; preds = %8, %7
  %9 = load volatile i32, i32* %2, align 4, !dbg !19956
  %10 = and i32 %9, 2, !dbg !19957
  %11 = icmp eq i32 %10, 0, !dbg !19957
  br i1 %11, label %12, label %8, !dbg !19955, !llvm.loop !19958

12:                                               ; preds = %8
  store volatile i32 1515870810, i32* null, align 2147483648, !dbg !19960
  store volatile i32 1515870810, i32* inttoptr (i32 4 to i32*), align 4, !dbg !19961
  %13 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4
  %14 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %13, i32 0, i32 33
  br label %15, !dbg !19962

15:                                               ; preds = %15, %12
  %16 = load volatile i32, i32* %14, align 4, !dbg !19963
  %17 = and i32 %16, 1, !dbg !19964
  %18 = icmp eq i32 %17, 0, !dbg !19965
  br i1 %18, label %15, label %19, !dbg !19962, !llvm.loop !19966

19:                                               ; preds = %15
  tail call void @__EMI_SetSR(i32 noundef 0, i32 noundef 15) #23, !dbg !19968
  tail call void @__EMI_SetSR(i32 noundef 4, i32 noundef 8) #23, !dbg !19969
  %20 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4
  %21 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %20, i32 0, i32 33
  br label %22, !dbg !19970

22:                                               ; preds = %22, %19
  %23 = load volatile i32, i32* %21, align 4, !dbg !19971
  %24 = and i32 %23, 1, !dbg !19972
  %25 = icmp eq i32 %24, 0, !dbg !19973
  br i1 %25, label %22, label %26, !dbg !19970, !llvm.loop !19974

26:                                               ; preds = %22
  %27 = load volatile i32, i32* inttoptr (i32 -1577058296 to i32*), align 8, !dbg !19976
  %28 = icmp eq i32 %27, 9507, !dbg !19978
  br i1 %28, label %29, label %37, !dbg !19979

29:                                               ; preds = %26
  %30 = load volatile i32, i32* inttoptr (i32 -1576664700 to i32*), align 4, !dbg !19980
  %31 = and i32 %30, 15, !dbg !19983
  %32 = icmp eq i32 %31, 2, !dbg !19984
  %33 = load volatile i32, i32* inttoptr (i32 -1602224060 to i32*), align 4, !dbg !19985
  %34 = and i32 %33, -128, !dbg !19985
  %35 = select i1 %32, i32 1, i32 7
  %36 = or i32 %34, %35, !dbg !19985
  store volatile i32 %36, i32* inttoptr (i32 -1602224060 to i32*), align 4, !dbg !19985
  br label %37, !dbg !19986

37:                                               ; preds = %29, %26
  ret void, !dbg !19986
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local signext i8 @custom_setEMI() local_unnamed_addr #2 section ".tcm_code" !dbg !19987 {
  tail call void @EMI_PowerOn_Init() #23, !dbg !19990
  tail call void @__EMI_SetRegValfromCMCP() #23, !dbg !19991
  %1 = tail call i32 @__EMI_GetSR(i32 noundef 0) #23, !dbg !19992
  store i32 %1, i32* @__EMI_CurSR0, align 4, !dbg !19993
  %2 = tail call i32 @__EMI_GetSR(i32 noundef 1) #23, !dbg !19994
  store i32 %2, i32* @__EMI_CurSR1, align 4, !dbg !19995
  %3 = tail call i32 @__EMI_GetSR(i32 noundef 2) #23, !dbg !19996
  store i32 %3, i32* @__EMI_CurSR2, align 4, !dbg !19997
  ret i8 0, !dbg !19998
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local signext i8 @custom_setAdvEMI() local_unnamed_addr #2 section ".tcm_code" !dbg !19999 {
  %1 = load i32, i32* @EMI_IO_A_VAL, align 4, !dbg !20000
  %2 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !20001
  %3 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 23, !dbg !20002
  store volatile i32 %1, i32* %3, align 4, !dbg !20003
  %4 = load i32, i32* @EMI_IO_B_VAL, align 4, !dbg !20004
  %5 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 25, !dbg !20005
  store volatile i32 %4, i32* %5, align 4, !dbg !20006
  %6 = load i32, i32* @EMI_GENA_VAL, align 4, !dbg !20007
  %7 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 3, !dbg !20008
  store volatile i32 %6, i32* %7, align 4, !dbg !20009
  %8 = load i32, i32* @EMI_RDCT_VAL, align 4, !dbg !20010
  %9 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 5, !dbg !20011
  store volatile i32 %8, i32* %9, align 4, !dbg !20012
  %10 = load i32, i32* @EMI_DSRAM_VAL, align 4, !dbg !20013
  %11 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 29, !dbg !20014
  store volatile i32 %10, i32* %11, align 4, !dbg !20015
  %12 = load i32, i32* @EMI_MSRAM_VAL, align 4, !dbg !20016
  %13 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 31, !dbg !20017
  store volatile i32 %12, i32* %13, align 4, !dbg !20018
  %14 = load i32, i32* @EMI_IDL_C_VAL, align 4, !dbg !20019
  %15 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 9, !dbg !20020
  store volatile i32 %14, i32* %15, align 4, !dbg !20021
  %16 = load i32, i32* @EMI_IDL_D_VAL, align 4, !dbg !20022
  %17 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 11, !dbg !20023
  store volatile i32 %16, i32* %17, align 4, !dbg !20024
  %18 = load i32, i32* @EMI_IDL_E_VAL, align 4, !dbg !20025
  %19 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 13, !dbg !20026
  store volatile i32 %18, i32* %19, align 4, !dbg !20027
  %20 = load i32, i32* @EMI_ODL_C_VAL, align 4, !dbg !20028
  %21 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 15, !dbg !20029
  store volatile i32 %20, i32* %21, align 4, !dbg !20030
  %22 = load i32, i32* @EMI_ODL_D_VAL, align 4, !dbg !20031
  %23 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 17, !dbg !20032
  store volatile i32 %22, i32* %23, align 4, !dbg !20033
  %24 = load i32, i32* @EMI_ODL_E_VAL, align 4, !dbg !20034
  %25 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 19, !dbg !20035
  store volatile i32 %24, i32* %25, align 4, !dbg !20036
  %26 = load i32, i32* @EMI_ODL_F_VAL, align 4, !dbg !20037
  %27 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 21, !dbg !20038
  store volatile i32 %26, i32* %27, align 4, !dbg !20039
  tail call void @__EMI_EnableDataAutoTracking() #23, !dbg !20040
  %28 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !20041
  %29 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %28, i32 0, i32 7, !dbg !20042
  store volatile i32 806289408, i32* %29, align 4, !dbg !20043
  br label %30, !dbg !20044

30:                                               ; preds = %30, %0
  %31 = load volatile i32, i32* %29, align 4, !dbg !20045
  %32 = and i32 %31, 128, !dbg !20046
  %33 = icmp eq i32 %32, 0, !dbg !20046
  br i1 %33, label %30, label %34, !dbg !20044, !llvm.loop !20047

34:                                               ; preds = %30
  store volatile i32 1880031232, i32* %29, align 4, !dbg !20049
  br label %35, !dbg !20050

35:                                               ; preds = %35, %34
  %36 = load volatile i32, i32* %29, align 4, !dbg !20051
  %37 = and i32 %36, 128, !dbg !20052
  %38 = icmp eq i32 %37, 0, !dbg !20052
  br i1 %38, label %39, label %35, !dbg !20050, !llvm.loop !20053

39:                                               ; preds = %35
  store volatile i32 269418496, i32* %29, align 4, !dbg !20055
  %40 = tail call i32 @__EMI_EnableBandwidthLimiter() #23, !dbg !20056
  ret i8 0, !dbg !20057
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @EMI_Setting_Save() local_unnamed_addr #2 section ".tcm_code" !dbg !20058 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !20059
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 1, !dbg !20060
  %3 = load volatile i32, i32* %2, align 4, !dbg !20060
  store volatile i32 %3, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 1), align 4, !dbg !20061
  %4 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 3, !dbg !20062
  %5 = load volatile i32, i32* %4, align 4, !dbg !20062
  store volatile i32 %5, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 3), align 4, !dbg !20063
  %6 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 5, !dbg !20064
  %7 = load volatile i32, i32* %6, align 4, !dbg !20064
  store volatile i32 %7, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 5), align 4, !dbg !20065
  %8 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 9, !dbg !20066
  %9 = load volatile i32, i32* %8, align 4, !dbg !20066
  store volatile i32 %9, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 9), align 4, !dbg !20067
  %10 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 11, !dbg !20068
  %11 = load volatile i32, i32* %10, align 4, !dbg !20068
  store volatile i32 %11, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 11), align 4, !dbg !20069
  %12 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 13, !dbg !20070
  %13 = load volatile i32, i32* %12, align 4, !dbg !20070
  store volatile i32 %13, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 13), align 4, !dbg !20071
  %14 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 15, !dbg !20072
  %15 = load volatile i32, i32* %14, align 4, !dbg !20072
  store volatile i32 %15, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 15), align 4, !dbg !20073
  %16 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 17, !dbg !20074
  %17 = load volatile i32, i32* %16, align 4, !dbg !20074
  store volatile i32 %17, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 17), align 4, !dbg !20075
  %18 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 19, !dbg !20076
  %19 = load volatile i32, i32* %18, align 4, !dbg !20076
  store volatile i32 %19, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 19), align 4, !dbg !20077
  %20 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 21, !dbg !20078
  %21 = load volatile i32, i32* %20, align 4, !dbg !20078
  store volatile i32 %21, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 21), align 4, !dbg !20079
  %22 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 23, !dbg !20080
  %23 = load volatile i32, i32* %22, align 4, !dbg !20080
  store volatile i32 %23, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 23), align 4, !dbg !20081
  %24 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 25, !dbg !20082
  %25 = load volatile i32, i32* %24, align 4, !dbg !20082
  store volatile i32 %25, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 25), align 4, !dbg !20083
  %26 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 29, !dbg !20084
  %27 = load volatile i32, i32* %26, align 4, !dbg !20084
  store volatile i32 %27, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 29), align 4, !dbg !20085
  %28 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 31, !dbg !20086
  %29 = load volatile i32, i32* %28, align 4, !dbg !20086
  store volatile i32 %29, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 31), align 4, !dbg !20087
  %30 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 35, !dbg !20088
  %31 = load volatile i32, i32* %30, align 4, !dbg !20088
  store volatile i32 %31, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 35), align 4, !dbg !20089
  %32 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 37, !dbg !20090
  %33 = load volatile i32, i32* %32, align 4, !dbg !20090
  store volatile i32 %33, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 37), align 4, !dbg !20091
  %34 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 39, !dbg !20092
  %35 = load volatile i32, i32* %34, align 4, !dbg !20092
  store volatile i32 %35, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 39), align 4, !dbg !20093
  %36 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 41, !dbg !20094
  %37 = load volatile i32, i32* %36, align 4, !dbg !20094
  store volatile i32 %37, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 41), align 4, !dbg !20095
  %38 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 43, !dbg !20096
  %39 = load volatile i32, i32* %38, align 4, !dbg !20096
  store volatile i32 %39, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 43), align 4, !dbg !20097
  %40 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 45, !dbg !20098
  %41 = load volatile i32, i32* %40, align 4, !dbg !20098
  store volatile i32 %41, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 45), align 4, !dbg !20099
  ret void, !dbg !20100
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @EMI_Setting_restore() local_unnamed_addr #2 section ".tcm_code" !dbg !20101 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 1
  br label %3, !dbg !20102

3:                                                ; preds = %3, %0
  %4 = load volatile i32, i32* %2, align 4, !dbg !20103
  %5 = and i32 %4, 17, !dbg !20104
  %6 = icmp eq i32 %5, 17, !dbg !20105
  br i1 %6, label %7, label %3, !dbg !20102, !llvm.loop !20106

7:                                                ; preds = %3
  %8 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 45), align 4, !dbg !20108
  %9 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 45, !dbg !20109
  store volatile i32 %8, i32* %9, align 4, !dbg !20110
  %10 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 43), align 4, !dbg !20111
  %11 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 43, !dbg !20112
  store volatile i32 %10, i32* %11, align 4, !dbg !20113
  %12 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 41), align 4, !dbg !20114
  %13 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 41, !dbg !20115
  store volatile i32 %12, i32* %13, align 4, !dbg !20116
  %14 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 39), align 4, !dbg !20117
  %15 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 39, !dbg !20118
  store volatile i32 %14, i32* %15, align 4, !dbg !20119
  %16 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 37), align 4, !dbg !20120
  %17 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 37, !dbg !20121
  store volatile i32 %16, i32* %17, align 4, !dbg !20122
  %18 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 35), align 4, !dbg !20123
  %19 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 35, !dbg !20124
  store volatile i32 %18, i32* %19, align 4, !dbg !20125
  %20 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 31), align 4, !dbg !20126
  %21 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 31, !dbg !20127
  store volatile i32 %20, i32* %21, align 4, !dbg !20128
  %22 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 29), align 4, !dbg !20129
  %23 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 29, !dbg !20130
  store volatile i32 %22, i32* %23, align 4, !dbg !20131
  %24 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 25), align 4, !dbg !20132
  %25 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 25, !dbg !20133
  store volatile i32 %24, i32* %25, align 4, !dbg !20134
  %26 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 23), align 4, !dbg !20135
  %27 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 23, !dbg !20136
  store volatile i32 %26, i32* %27, align 4, !dbg !20137
  %28 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 21), align 4, !dbg !20138
  %29 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 21, !dbg !20139
  store volatile i32 %28, i32* %29, align 4, !dbg !20140
  %30 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 19), align 4, !dbg !20141
  %31 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 19, !dbg !20142
  store volatile i32 %30, i32* %31, align 4, !dbg !20143
  %32 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 17), align 4, !dbg !20144
  %33 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 17, !dbg !20145
  store volatile i32 %32, i32* %33, align 4, !dbg !20146
  %34 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 15), align 4, !dbg !20147
  %35 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 15, !dbg !20148
  store volatile i32 %34, i32* %35, align 4, !dbg !20149
  %36 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 13), align 4, !dbg !20150
  %37 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 13, !dbg !20151
  store volatile i32 %36, i32* %37, align 4, !dbg !20152
  %38 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 11), align 4, !dbg !20153
  %39 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 11, !dbg !20154
  store volatile i32 %38, i32* %39, align 4, !dbg !20155
  %40 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 9), align 4, !dbg !20156
  %41 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 9, !dbg !20157
  store volatile i32 %40, i32* %41, align 4, !dbg !20158
  %42 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 5), align 4, !dbg !20159
  %43 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 5, !dbg !20160
  store volatile i32 %42, i32* %43, align 4, !dbg !20161
  %44 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 3), align 4, !dbg !20162
  %45 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 3, !dbg !20163
  store volatile i32 %44, i32* %45, align 4, !dbg !20164
  ret void, !dbg !20165
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @mtk_psram_half_sleep_exit() local_unnamed_addr #2 section ".tcm_code" !dbg !20166 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !20167
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 25, !dbg !20168
  %3 = load volatile i32, i32* %2, align 4, !dbg !20168
  %4 = and i32 %3, -2097185, !dbg !20169
  store volatile i32 %4, i32* %2, align 4, !dbg !20170
  %5 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 27, !dbg !20171
  store volatile i32 1, i32* %5, align 4, !dbg !20172
  br label %6, !dbg !20173

6:                                                ; preds = %6, %0
  %7 = load volatile i32, i32* %5, align 4, !dbg !20174
  %8 = and i32 %7, 2, !dbg !20175
  %9 = icmp eq i32 %8, 0, !dbg !20175
  br i1 %9, label %6, label %10, !dbg !20173, !llvm.loop !20176

10:                                               ; preds = %6
  store volatile i32 0, i32* %5, align 4, !dbg !20178
  br label %11, !dbg !20179

11:                                               ; preds = %11, %10
  %12 = load volatile i32, i32* %5, align 4, !dbg !20180
  %13 = and i32 %12, 2, !dbg !20181
  %14 = icmp eq i32 %13, 0, !dbg !20181
  br i1 %14, label %15, label %11, !dbg !20179, !llvm.loop !20182

15:                                               ; preds = %11
  tail call void @EMI_Setting_restore() #23, !dbg !20184
  %16 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !20185
  %17 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %16, i32 0, i32 7, !dbg !20186
  store volatile i32 806289408, i32* %17, align 4, !dbg !20187
  br label %18, !dbg !20188

18:                                               ; preds = %18, %15
  %19 = load volatile i32, i32* %17, align 4, !dbg !20189
  %20 = and i32 %19, 128, !dbg !20190
  %21 = icmp eq i32 %20, 0, !dbg !20190
  br i1 %21, label %18, label %22, !dbg !20188, !llvm.loop !20191

22:                                               ; preds = %18
  store volatile i32 1880031232, i32* %17, align 4, !dbg !20193
  br label %23, !dbg !20194

23:                                               ; preds = %23, %22
  %24 = load volatile i32, i32* %17, align 4, !dbg !20195
  %25 = and i32 %24, 128, !dbg !20196
  %26 = icmp eq i32 %25, 0, !dbg !20196
  br i1 %26, label %27, label %23, !dbg !20194, !llvm.loop !20197

27:                                               ; preds = %23
  store volatile i32 269418496, i32* %17, align 4, !dbg !20199
  %28 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 1), align 4, !dbg !20200
  %29 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %16, i32 0, i32 1, !dbg !20201
  store volatile i32 %28, i32* %29, align 4, !dbg !20202
  ret void, !dbg !20203
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @mtk_psram_half_sleep_enter() local_unnamed_addr #2 section ".tcm_code" !dbg !20204 {
  tail call void @EMI_Setting_Save() #23, !dbg !20205
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 1
  br label %3, !dbg !20206

3:                                                ; preds = %3, %0
  %4 = load volatile i32, i32* %2, align 4, !dbg !20207
  %5 = and i32 %4, 17, !dbg !20208
  %6 = icmp eq i32 %5, 17, !dbg !20209
  br i1 %6, label %7, label %3, !dbg !20206, !llvm.loop !20210

7:                                                ; preds = %3
  %8 = load volatile i32, i32* %2, align 4, !dbg !20212
  %9 = or i32 %8, 1792, !dbg !20213
  store volatile i32 %9, i32* %2, align 4, !dbg !20214
  %10 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 33, !dbg !20215
  store volatile i32 -261685248, i32* %10, align 4, !dbg !20216
  br label %11, !dbg !20217

11:                                               ; preds = %11, %7
  %12 = load volatile i32, i32* %10, align 4, !dbg !20218
  %13 = and i32 %12, 1, !dbg !20219
  %14 = icmp eq i32 %13, 0, !dbg !20220
  br i1 %14, label %11, label %15, !dbg !20217, !llvm.loop !20221

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 7, !dbg !20223
  store volatile i32 0, i32* %16, align 4, !dbg !20224
  %17 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 27
  br label %18, !dbg !20225

18:                                               ; preds = %18, %15
  %19 = load volatile i32, i32* %17, align 4, !dbg !20226
  %20 = and i32 %19, 16, !dbg !20227
  %21 = icmp eq i32 %20, 0, !dbg !20227
  br i1 %21, label %18, label %22, !dbg !20225, !llvm.loop !20228

22:                                               ; preds = %18
  %23 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 25, !dbg !20230
  %24 = load volatile i32, i32* %23, align 4, !dbg !20230
  %25 = or i32 %24, 2097184, !dbg !20231
  store volatile i32 %25, i32* %23, align 4, !dbg !20232
  ret void, !dbg !20233
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @EMI_DynamicClockSwitch(i32 noundef %0) local_unnamed_addr #9 section ".tcm_code" !dbg !20234 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !20239, metadata !DIExpression()), !dbg !20241
  %3 = bitcast i32* %2 to i8*, !dbg !20242
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !20242
  call void @llvm.dbg.declare(metadata i32* %2, metadata !20240, metadata !DIExpression()), !dbg !20243
  switch i32 %0, label %24 [
    i32 0, label %4
    i32 1, label %25
  ], !dbg !20244

4:                                                ; preds = %1
  %5 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !20245
  %6 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %5, i32 0, i32 7, !dbg !20248
  store volatile i32 0, i32* %6, align 4, !dbg !20249
  store volatile i32 806289408, i32* %6, align 4, !dbg !20250
  br label %7, !dbg !20251

7:                                                ; preds = %7, %4
  %8 = load volatile i32, i32* %6, align 4, !dbg !20252
  %9 = and i32 %8, 128, !dbg !20253
  %10 = icmp eq i32 %9, 0, !dbg !20253
  br i1 %10, label %7, label %11, !dbg !20251, !llvm.loop !20254

11:                                               ; preds = %7
  store volatile i32 1880031232, i32* %6, align 4, !dbg !20256
  br label %12, !dbg !20257

12:                                               ; preds = %12, %11
  %13 = load volatile i32, i32* %6, align 4, !dbg !20258
  %14 = and i32 %13, 128, !dbg !20259
  %15 = icmp eq i32 %14, 0, !dbg !20259
  br i1 %15, label %16, label %12, !dbg !20257, !llvm.loop !20260

16:                                               ; preds = %12
  store volatile i32 269418496, i32* %6, align 4, !dbg !20262
  store volatile i32 0, i32* %2, align 4, !dbg !20263
  %17 = load volatile i32, i32* %2, align 4, !dbg !20265
  %18 = icmp ult i32 %17, 255, !dbg !20267
  br i1 %18, label %19, label %25, !dbg !20268

19:                                               ; preds = %16, %19
  %20 = load volatile i32, i32* %2, align 4, !dbg !20269
  %21 = add i32 %20, 1, !dbg !20269
  store volatile i32 %21, i32* %2, align 4, !dbg !20269
  %22 = load volatile i32, i32* %2, align 4, !dbg !20265
  %23 = icmp ult i32 %22, 255, !dbg !20267
  br i1 %23, label %19, label %25, !dbg !20268, !llvm.loop !20270

24:                                               ; preds = %1
  br label %25, !dbg !20272

25:                                               ; preds = %19, %16, %1, %24
  %26 = phi i32 [ -1, %24 ], [ 0, %1 ], [ 0, %16 ], [ 0, %19 ], !dbg !20241
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !20275
  ret i32 %26, !dbg !20275
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @emi_mask_master() local_unnamed_addr #2 section ".tcm_code" !dbg !20276 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !20277
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 1, !dbg !20278
  %3 = load volatile i32, i32* %2, align 4, !dbg !20278
  %4 = or i32 %3, 1792, !dbg !20279
  store volatile i32 %4, i32* %2, align 4, !dbg !20280
  ret void, !dbg !20281
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @emi_unmask_master() local_unnamed_addr #2 section ".tcm_code" !dbg !20282 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !20283
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 1, !dbg !20284
  %3 = load volatile i32, i32* %2, align 4, !dbg !20284
  %4 = and i32 %3, -1793, !dbg !20285
  store volatile i32 %4, i32* %2, align 4, !dbg !20286
  ret void, !dbg !20287
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct._dvfs_notification_t* @dvfs_notify_is_valid(%struct._dvfs_domain_t* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !20288 {
  call void @llvm.dbg.value(metadata %struct._dvfs_domain_t* %0, metadata !20292, metadata !DIExpression()), !dbg !20297
  call void @llvm.dbg.value(metadata i32 %1, metadata !20293, metadata !DIExpression()), !dbg !20297
  call void @llvm.dbg.value(metadata i32 %2, metadata !20294, metadata !DIExpression()), !dbg !20297
  %4 = getelementptr inbounds %struct._dvfs_domain_t, %struct._dvfs_domain_t* %0, i32 0, i32 2, i32 3, !dbg !20298
  %5 = load i32, i32* %4, align 4, !dbg !20298
  %6 = icmp eq i32 %5, 0, !dbg !20300
  br i1 %6, label %48, label %7, !dbg !20301

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct._dvfs_domain_t, %struct._dvfs_domain_t* %0, i32 0, i32 2, i32 6, i32 3
  call void @llvm.dbg.value(metadata %struct._dvfs_opp_module_t* null, metadata !20295, metadata !DIExpression()), !dbg !20297
  %9 = load %struct._dvfs_opp_module_t* (%struct._dvfs_domain_t*, %struct._dvfs_opp_module_t*)*, %struct._dvfs_opp_module_t* (%struct._dvfs_domain_t*, %struct._dvfs_opp_module_t*)** %8, align 4, !dbg !20302
  %10 = tail call %struct._dvfs_opp_module_t* %9(%struct._dvfs_domain_t* noundef nonnull %0, %struct._dvfs_opp_module_t* noundef null) #22, !dbg !20307
  call void @llvm.dbg.value(metadata %struct._dvfs_opp_module_t* %10, metadata !20295, metadata !DIExpression()), !dbg !20297
  %11 = icmp eq %struct._dvfs_opp_module_t* %10, null, !dbg !20308
  br i1 %11, label %48, label %12, !dbg !20310

12:                                               ; preds = %7
  %13 = getelementptr inbounds %struct._dvfs_domain_t, %struct._dvfs_domain_t* %0, i32 0, i32 2, i32 4
  br label %14, !dbg !20310

14:                                               ; preds = %12, %44
  %15 = phi %struct._dvfs_opp_module_t* [ %10, %12 ], [ %46, %44 ]
  %16 = getelementptr inbounds %struct._dvfs_opp_module_t, %struct._dvfs_opp_module_t* %15, i32 0, i32 2, !dbg !20311
  %17 = load i32*, i32** %16, align 4, !dbg !20311
  %18 = getelementptr inbounds i32, i32* %17, i32 %1, !dbg !20313
  %19 = load i32, i32* %18, align 4, !dbg !20313
  %20 = getelementptr inbounds i32, i32* %17, i32 %2, !dbg !20314
  %21 = load i32, i32* %20, align 4, !dbg !20314
  %22 = icmp eq i32 %19, %21, !dbg !20315
  br i1 %22, label %44, label %23, !dbg !20316

23:                                               ; preds = %14
  %24 = getelementptr inbounds %struct._dvfs_opp_module_t, %struct._dvfs_opp_module_t* %15, i32 0, i32 1, !dbg !20317
  call void @llvm.dbg.value(metadata %struct._dvfs_notification_t* undef, metadata !20296, metadata !DIExpression()), !dbg !20297
  %25 = load %struct._dvfs_notification_t*, %struct._dvfs_notification_t** %24, align 4, !dbg !20320
  call void @llvm.dbg.value(metadata %struct._dvfs_notification_t* %25, metadata !20296, metadata !DIExpression()), !dbg !20297
  %26 = icmp eq %struct._dvfs_notification_t* %25, null, !dbg !20321
  br i1 %26, label %44, label %27, !dbg !20325

27:                                               ; preds = %23, %40
  %28 = phi %struct._dvfs_notification_t* [ %42, %40 ], [ %25, %23 ]
  %29 = getelementptr inbounds %struct._dvfs_notification_t, %struct._dvfs_notification_t* %28, i32 0, i32 3, i32 0, !dbg !20326
  %30 = load i1 (i32, i32)*, i1 (i32, i32)** %29, align 4, !dbg !20326
  %31 = icmp eq i1 (i32, i32)* %30, null, !dbg !20328
  br i1 %31, label %40, label %32, !dbg !20329

32:                                               ; preds = %27
  %33 = load i32*, i32** %13, align 4, !dbg !20330
  %34 = getelementptr inbounds i32, i32* %33, i32 %2, !dbg !20333
  %35 = load i32, i32* %34, align 4, !dbg !20333
  %36 = load i32*, i32** %16, align 4, !dbg !20334
  %37 = getelementptr inbounds i32, i32* %36, i32 %2, !dbg !20335
  %38 = load i32, i32* %37, align 4, !dbg !20335
  %39 = tail call zeroext i1 %30(i32 noundef %35, i32 noundef %38) #22, !dbg !20336
  br i1 %39, label %40, label %48, !dbg !20337

40:                                               ; preds = %27, %32
  %41 = getelementptr inbounds %struct._dvfs_notification_t, %struct._dvfs_notification_t* %28, i32 0, i32 7, !dbg !20338
  call void @llvm.dbg.value(metadata %struct._dvfs_notification_t* undef, metadata !20296, metadata !DIExpression()), !dbg !20297
  %42 = load %struct._dvfs_notification_t*, %struct._dvfs_notification_t** %41, align 4, !dbg !20320
  call void @llvm.dbg.value(metadata %struct._dvfs_notification_t* %42, metadata !20296, metadata !DIExpression()), !dbg !20297
  %43 = icmp eq %struct._dvfs_notification_t* %42, null, !dbg !20321
  br i1 %43, label %44, label %27, !dbg !20325, !llvm.loop !20339

44:                                               ; preds = %40, %23, %14
  call void @llvm.dbg.value(metadata %struct._dvfs_opp_module_t* %15, metadata !20295, metadata !DIExpression()), !dbg !20297
  %45 = load %struct._dvfs_opp_module_t* (%struct._dvfs_domain_t*, %struct._dvfs_opp_module_t*)*, %struct._dvfs_opp_module_t* (%struct._dvfs_domain_t*, %struct._dvfs_opp_module_t*)** %8, align 4, !dbg !20302
  %46 = tail call %struct._dvfs_opp_module_t* %45(%struct._dvfs_domain_t* noundef %0, %struct._dvfs_opp_module_t* noundef %15) #22, !dbg !20307
  call void @llvm.dbg.value(metadata %struct._dvfs_opp_module_t* %46, metadata !20295, metadata !DIExpression()), !dbg !20297
  %47 = icmp eq %struct._dvfs_opp_module_t* %46, null, !dbg !20308
  br i1 %47, label %48, label %14, !dbg !20310, !llvm.loop !20342

48:                                               ; preds = %44, %32, %7, %3
  %49 = phi %struct._dvfs_notification_t* [ null, %3 ], [ null, %7 ], [ %28, %32 ], [ null, %44 ], !dbg !20297
  ret %struct._dvfs_notification_t* %49, !dbg !20345
}

; Function Attrs: noinline nounwind optsize
define dso_local void @dvfs_notify_prepare(%struct._dvfs_domain_t* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !20346 {
  call void @llvm.dbg.value(metadata %struct._dvfs_domain_t* %0, metadata !20350, metadata !DIExpression()), !dbg !20355
  call void @llvm.dbg.value(metadata i32 %1, metadata !20351, metadata !DIExpression()), !dbg !20355
  call void @llvm.dbg.value(metadata i32 %2, metadata !20352, metadata !DIExpression()), !dbg !20355
  %4 = getelementptr inbounds %struct._dvfs_domain_t, %struct._dvfs_domain_t* %0, i32 0, i32 2, i32 3, !dbg !20356
  %5 = load i32, i32* %4, align 4, !dbg !20356
  %6 = icmp eq i32 %5, 0, !dbg !20358
  br i1 %6, label %47, label %7, !dbg !20359

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct._dvfs_domain_t, %struct._dvfs_domain_t* %0, i32 0, i32 2, i32 6, i32 3
  call void @llvm.dbg.value(metadata %struct._dvfs_opp_module_t* null, metadata !20353, metadata !DIExpression()), !dbg !20355
  %9 = load %struct._dvfs_opp_module_t* (%struct._dvfs_domain_t*, %struct._dvfs_opp_module_t*)*, %struct._dvfs_opp_module_t* (%struct._dvfs_domain_t*, %struct._dvfs_opp_module_t*)** %8, align 4, !dbg !20360
  %10 = tail call %struct._dvfs_opp_module_t* %9(%struct._dvfs_domain_t* noundef nonnull %0, %struct._dvfs_opp_module_t* noundef null) #22, !dbg !20365
  call void @llvm.dbg.value(metadata %struct._dvfs_opp_module_t* %10, metadata !20353, metadata !DIExpression()), !dbg !20355
  %11 = icmp eq %struct._dvfs_opp_module_t* %10, null, !dbg !20366
  br i1 %11, label %47, label %12, !dbg !20368

12:                                               ; preds = %7
  %13 = getelementptr inbounds %struct._dvfs_domain_t, %struct._dvfs_domain_t* %0, i32 0, i32 2, i32 4
  br label %14, !dbg !20368

14:                                               ; preds = %12, %43
  %15 = phi %struct._dvfs_opp_module_t* [ %10, %12 ], [ %45, %43 ]
  %16 = getelementptr inbounds %struct._dvfs_opp_module_t, %struct._dvfs_opp_module_t* %15, i32 0, i32 2, !dbg !20369
  %17 = load i32*, i32** %16, align 4, !dbg !20369
  %18 = getelementptr inbounds i32, i32* %17, i32 %1, !dbg !20371
  %19 = load i32, i32* %18, align 4, !dbg !20371
  %20 = getelementptr inbounds i32, i32* %17, i32 %2, !dbg !20372
  %21 = load i32, i32* %20, align 4, !dbg !20372
  %22 = icmp eq i32 %19, %21, !dbg !20373
  br i1 %22, label %43, label %23, !dbg !20374

23:                                               ; preds = %14
  %24 = getelementptr inbounds %struct._dvfs_opp_module_t, %struct._dvfs_opp_module_t* %15, i32 0, i32 1, !dbg !20375
  call void @llvm.dbg.value(metadata %struct._dvfs_notification_t* undef, metadata !20354, metadata !DIExpression()), !dbg !20355
  %25 = load %struct._dvfs_notification_t*, %struct._dvfs_notification_t** %24, align 4, !dbg !20378
  call void @llvm.dbg.value(metadata %struct._dvfs_notification_t* %25, metadata !20354, metadata !DIExpression()), !dbg !20355
  %26 = icmp eq %struct._dvfs_notification_t* %25, null, !dbg !20379
  br i1 %26, label %43, label %27, !dbg !20383

27:                                               ; preds = %23, %39
  %28 = phi %struct._dvfs_notification_t* [ %41, %39 ], [ %25, %23 ]
  %29 = getelementptr inbounds %struct._dvfs_notification_t, %struct._dvfs_notification_t* %28, i32 0, i32 3, i32 1, !dbg !20384
  %30 = load void (i32, i32)*, void (i32, i32)** %29, align 4, !dbg !20384
  %31 = icmp eq void (i32, i32)* %30, null, !dbg !20386
  br i1 %31, label %39, label %32, !dbg !20387

32:                                               ; preds = %27
  %33 = load i32*, i32** %13, align 4, !dbg !20388
  %34 = getelementptr inbounds i32, i32* %33, i32 %2, !dbg !20390
  %35 = load i32, i32* %34, align 4, !dbg !20390
  %36 = load i32*, i32** %16, align 4, !dbg !20391
  %37 = getelementptr inbounds i32, i32* %36, i32 %2, !dbg !20392
  %38 = load i32, i32* %37, align 4, !dbg !20392
  tail call void %30(i32 noundef %35, i32 noundef %38) #22, !dbg !20393
  br label %39, !dbg !20394

39:                                               ; preds = %27, %32
  %40 = getelementptr inbounds %struct._dvfs_notification_t, %struct._dvfs_notification_t* %28, i32 0, i32 7, !dbg !20395
  call void @llvm.dbg.value(metadata %struct._dvfs_notification_t* undef, metadata !20354, metadata !DIExpression()), !dbg !20355
  %41 = load %struct._dvfs_notification_t*, %struct._dvfs_notification_t** %40, align 4, !dbg !20378
  call void @llvm.dbg.value(metadata %struct._dvfs_notification_t* %41, metadata !20354, metadata !DIExpression()), !dbg !20355
  %42 = icmp eq %struct._dvfs_notification_t* %41, null, !dbg !20379
  br i1 %42, label %43, label %27, !dbg !20383, !llvm.loop !20396

43:                                               ; preds = %39, %23, %14
  call void @llvm.dbg.value(metadata %struct._dvfs_opp_module_t* %15, metadata !20353, metadata !DIExpression()), !dbg !20355
  %44 = load %struct._dvfs_opp_module_t* (%struct._dvfs_domain_t*, %struct._dvfs_opp_module_t*)*, %struct._dvfs_opp_module_t* (%struct._dvfs_domain_t*, %struct._dvfs_opp_module_t*)** %8, align 4, !dbg !20360
  %45 = tail call %struct._dvfs_opp_module_t* %44(%struct._dvfs_domain_t* noundef %0, %struct._dvfs_opp_module_t* noundef %15) #22, !dbg !20365
  call void @llvm.dbg.value(metadata %struct._dvfs_opp_module_t* %45, metadata !20353, metadata !DIExpression()), !dbg !20355
  %46 = icmp eq %struct._dvfs_opp_module_t* %45, null, !dbg !20366
  br i1 %46, label %47, label %14, !dbg !20368, !llvm.loop !20399

47:                                               ; preds = %43, %7, %3
  ret void, !dbg !20402
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @dvfs_query_frequency(i32 noundef %0, i32* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #12 !dbg !20403 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !20407, metadata !DIExpression()), !dbg !20411
  call void @llvm.dbg.value(metadata i32* %1, metadata !20408, metadata !DIExpression()), !dbg !20411
  call void @llvm.dbg.value(metadata i32 %2, metadata !20409, metadata !DIExpression()), !dbg !20411
  call void @llvm.dbg.value(metadata i32 0, metadata !20410, metadata !DIExpression()), !dbg !20411
  %4 = icmp eq i32 %2, 0, !dbg !20412
  br i1 %4, label %15, label %5, !dbg !20415

5:                                                ; preds = %3, %10
  %6 = phi i32 [ %12, %10 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !20410, metadata !DIExpression()), !dbg !20411
  %7 = getelementptr inbounds i32, i32* %1, i32 %6, !dbg !20416
  %8 = load i32, i32* %7, align 4, !dbg !20416
  %9 = icmp eq i32 %8, %0, !dbg !20419
  br i1 %9, label %15, label %10, !dbg !20420

10:                                               ; preds = %5
  %11 = icmp uge i32 %8, %0, !dbg !20421
  %12 = add nuw i32 %6, 1
  %13 = icmp ult i32 %12, %2
  %14 = select i1 %11, i1 %13, i1 false, !dbg !20423
  call void @llvm.dbg.value(metadata i32 %12, metadata !20410, metadata !DIExpression()), !dbg !20411
  br i1 %14, label %5, label %15, !dbg !20423, !llvm.loop !20424

15:                                               ; preds = %5, %10, %3
  %16 = phi i32 [ -1, %3 ], [ -1, %10 ], [ %6, %5 ], !dbg !20411
  ret i32 %16, !dbg !20426
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct._dvfs_domain_t* @_dvfs_query_domain(i8* noundef %0) local_unnamed_addr #0 !dbg !20427 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !20431, metadata !DIExpression()), !dbg !20433
  call void @llvm.dbg.value(metadata %struct._dvfs_domain_t* null, metadata !20432, metadata !DIExpression()), !dbg !20433
  call void @llvm.dbg.value(metadata %struct._dvfs_domain_t* undef, metadata !20432, metadata !DIExpression()), !dbg !20433
  %2 = load %struct._dvfs_domain_t*, %struct._dvfs_domain_t** @dvfs_domain_head, align 4, !dbg !20434
  call void @llvm.dbg.value(metadata %struct._dvfs_domain_t* %2, metadata !20432, metadata !DIExpression()), !dbg !20433
  %3 = icmp eq %struct._dvfs_domain_t* %2, null, !dbg !20436
  br i1 %3, label %14, label %4, !dbg !20440

4:                                                ; preds = %1, %10
  %5 = phi %struct._dvfs_domain_t* [ %12, %10 ], [ %2, %1 ]
  %6 = getelementptr inbounds %struct._dvfs_domain_t, %struct._dvfs_domain_t* %5, i32 0, i32 0, !dbg !20441
  %7 = load i8*, i8** %6, align 4, !dbg !20441
  %8 = tail call i32 @strcmp(i8* noundef %7, i8* noundef %0) #22, !dbg !20443
  %9 = icmp eq i32 %8, 0, !dbg !20443
  br i1 %9, label %14, label %10, !dbg !20444

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct._dvfs_domain_t, %struct._dvfs_domain_t* %5, i32 0, i32 5, !dbg !20445
  call void @llvm.dbg.value(metadata %struct._dvfs_domain_t* undef, metadata !20432, metadata !DIExpression()), !dbg !20433
  %12 = load %struct._dvfs_domain_t*, %struct._dvfs_domain_t** %11, align 4, !dbg !20434
  call void @llvm.dbg.value(metadata %struct._dvfs_domain_t* %12, metadata !20432, metadata !DIExpression()), !dbg !20433
  %13 = icmp eq %struct._dvfs_domain_t* %12, null, !dbg !20436
  br i1 %13, label %14, label %4, !dbg !20440, !llvm.loop !20446

14:                                               ; preds = %10, %4, %1
  %15 = phi %struct._dvfs_domain_t* [ null, %1 ], [ %5, %4 ], [ null, %10 ], !dbg !20434
  ret %struct._dvfs_domain_t* %15, !dbg !20449
}

; Function Attrs: optsize
declare dso_local i32 @strcmp(i8* noundef, i8* noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local %struct._dvfs_opp_module_t* @_dvfs_map_opp_module(%struct._dvfs_domain_t* noundef %0, i8* noundef %1) local_unnamed_addr #0 !dbg !20450 {
  call void @llvm.dbg.value(metadata %struct._dvfs_domain_t* %0, metadata !20454, metadata !DIExpression()), !dbg !20457
  call void @llvm.dbg.value(metadata i8* %1, metadata !20455, metadata !DIExpression()), !dbg !20457
  call void @llvm.dbg.value(metadata %struct._dvfs_opp_module_t* null, metadata !20456, metadata !DIExpression()), !dbg !20457
  %3 = getelementptr inbounds %struct._dvfs_domain_t, %struct._dvfs_domain_t* %0, i32 0, i32 2, i32 6, i32 3
  br label %4, !dbg !20458

4:                                                ; preds = %9, %2
  %5 = phi %struct._dvfs_opp_module_t* [ null, %2 ], [ %7, %9 ], !dbg !20460
  call void @llvm.dbg.value(metadata %struct._dvfs_opp_module_t* %5, metadata !20456, metadata !DIExpression()), !dbg !20457
  %6 = load %struct._dvfs_opp_module_t* (%struct._dvfs_domain_t*, %struct._dvfs_opp_module_t*)*, %struct._dvfs_opp_module_t* (%struct._dvfs_domain_t*, %struct._dvfs_opp_module_t*)** %3, align 4, !dbg !20461
  %7 = tail call %struct._dvfs_opp_module_t* %6(%struct._dvfs_domain_t* noundef %0, %struct._dvfs_opp_module_t* noundef %5) #22, !dbg !20464
  call void @llvm.dbg.value(metadata %struct._dvfs_opp_module_t* %7, metadata !20456, metadata !DIExpression()), !dbg !20457
  %8 = icmp eq %struct._dvfs_opp_module_t* %7, null, !dbg !20465
  br i1 %8, label %14, label %9, !dbg !20467

9:                                                ; preds = %4
  %10 = getelementptr inbounds %struct._dvfs_opp_module_t, %struct._dvfs_opp_module_t* %7, i32 0, i32 0, !dbg !20468
  %11 = load i8*, i8** %10, align 4, !dbg !20468
  %12 = tail call i32 @strcmp(i8* noundef %11, i8* noundef %1) #22, !dbg !20470
  %13 = icmp eq i32 %12, 0, !dbg !20470
  br i1 %13, label %14, label %4, !dbg !20471, !llvm.loop !20472

14:                                               ; preds = %9, %4
  ret %struct._dvfs_opp_module_t* %7, !dbg !20475
}

; Function Attrs: noinline nounwind optsize
define dso_local void @dvfs_register_domain(%struct._dvfs_domain_t* noundef %0) local_unnamed_addr #0 !dbg !20476 {
  call void @llvm.dbg.value(metadata %struct._dvfs_domain_t* %0, metadata !20480, metadata !DIExpression()), !dbg !20482
  %2 = icmp eq %struct._dvfs_domain_t* %0, null, !dbg !20483
  br i1 %2, label %3, label %4, !dbg !20483

3:                                                ; preds = %1
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.365, i32 0, i32 0), i32 noundef 159, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.dvfs_register_domain, i32 0, i32 0), i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.366, i32 0, i32 0)) #25, !dbg !20483
  unreachable, !dbg !20483

4:                                                ; preds = %1
  %5 = load %struct._dvfs_domain_t*, %struct._dvfs_domain_t** @dvfs_domain_head, align 4, !dbg !20484
  %6 = icmp eq %struct._dvfs_domain_t* %5, null, !dbg !20484
  br i1 %6, label %9, label %7, !dbg !20486

7:                                                ; preds = %4
  %8 = getelementptr inbounds %struct._dvfs_domain_t, %struct._dvfs_domain_t* %0, i32 0, i32 0
  br label %10, !dbg !20487

9:                                                ; preds = %4
  store %struct._dvfs_domain_t* %0, %struct._dvfs_domain_t** @dvfs_domain_head, align 4, !dbg !20490
  br label %25, !dbg !20492

10:                                               ; preds = %7, %19
  %11 = phi %struct._dvfs_domain_t* [ %21, %19 ], [ %5, %7 ], !dbg !20493
  call void @llvm.dbg.value(metadata %struct._dvfs_domain_t* %11, metadata !20481, metadata !DIExpression()), !dbg !20482
  %12 = getelementptr inbounds %struct._dvfs_domain_t, %struct._dvfs_domain_t* %11, i32 0, i32 0, !dbg !20494
  %13 = load i8*, i8** %12, align 4, !dbg !20494
  %14 = load i8*, i8** %8, align 4, !dbg !20498
  %15 = tail call i32 @strcmp(i8* noundef %13, i8* noundef %14) #22, !dbg !20499
  %16 = icmp eq i32 %15, 0, !dbg !20499
  br i1 %16, label %17, label %19, !dbg !20500

17:                                               ; preds = %10
  %18 = load i8*, i8** %8, align 4, !dbg !20501
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.dvfs_register_domain, i32 0, i32 0), i32 noundef 170, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.367, i32 0, i32 0), i8* noundef %18) #22, !dbg !20501
  br label %25, !dbg !20503

19:                                               ; preds = %10
  %20 = getelementptr inbounds %struct._dvfs_domain_t, %struct._dvfs_domain_t* %11, i32 0, i32 5, !dbg !20504
  %21 = load %struct._dvfs_domain_t*, %struct._dvfs_domain_t** %20, align 4, !dbg !20504
  %22 = icmp eq %struct._dvfs_domain_t* %21, null, !dbg !20506
  br i1 %22, label %23, label %10, !dbg !20507, !llvm.loop !20508

23:                                               ; preds = %19
  %24 = getelementptr inbounds %struct._dvfs_domain_t, %struct._dvfs_domain_t* %11, i32 0, i32 5, !dbg !20504
  store %struct._dvfs_domain_t* %0, %struct._dvfs_domain_t** %24, align 4, !dbg !20510
  br label %25, !dbg !20512

25:                                               ; preds = %9, %23, %17
  ret void, !dbg !20492
}

; Function Attrs: noinline nounwind optsize
define dso_local void @dvfs_register_notification(%struct._dvfs_notification_t* noundef %0) local_unnamed_addr #0 !dbg !20513 {
  call void @llvm.dbg.value(metadata %struct._dvfs_notification_t* %0, metadata !20517, metadata !DIExpression()), !dbg !20521
  %2 = icmp eq %struct._dvfs_notification_t* %0, null, !dbg !20522
  br i1 %2, label %3, label %4, !dbg !20522

3:                                                ; preds = %1
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.365, i32 0, i32 0), i32 noundef 187, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.dvfs_register_notification, i32 0, i32 0), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.370, i32 0, i32 0)) #25, !dbg !20522
  unreachable, !dbg !20522

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dvfs_notification_t, %struct._dvfs_notification_t* %0, i32 0, i32 0, !dbg !20523
  %6 = load i8*, i8** %5, align 4, !dbg !20523
  %7 = icmp eq i8* %6, null, !dbg !20523
  br i1 %7, label %8, label %9, !dbg !20523

8:                                                ; preds = %4
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.365, i32 0, i32 0), i32 noundef 188, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.dvfs_register_notification, i32 0, i32 0), i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4.371, i32 0, i32 0)) #25, !dbg !20523
  unreachable, !dbg !20523

9:                                                ; preds = %4
  %10 = getelementptr inbounds %struct._dvfs_notification_t, %struct._dvfs_notification_t* %0, i32 0, i32 1, !dbg !20524
  %11 = load i8*, i8** %10, align 4, !dbg !20524
  %12 = icmp eq i8* %11, null, !dbg !20524
  br i1 %12, label %13, label %14, !dbg !20524

13:                                               ; preds = %9
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.365, i32 0, i32 0), i32 noundef 189, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.dvfs_register_notification, i32 0, i32 0), i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5.372, i32 0, i32 0)) #25, !dbg !20524
  unreachable, !dbg !20524

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct._dvfs_notification_t, %struct._dvfs_notification_t* %0, i32 0, i32 2, !dbg !20525
  %16 = load i8*, i8** %15, align 4, !dbg !20525
  %17 = icmp eq i8* %16, null, !dbg !20525
  br i1 %17, label %18, label %19, !dbg !20525

18:                                               ; preds = %14
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.365, i32 0, i32 0), i32 noundef 190, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.dvfs_register_notification, i32 0, i32 0), i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6.373, i32 0, i32 0)) #25, !dbg !20525
  unreachable, !dbg !20525

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct._dvfs_notification_t, %struct._dvfs_notification_t* %0, i32 0, i32 6, !dbg !20526
  %21 = load %struct._dvfs_notification_t*, %struct._dvfs_notification_t** %20, align 4, !dbg !20526
  %22 = icmp eq %struct._dvfs_notification_t* %21, null, !dbg !20526
  br i1 %22, label %24, label %23, !dbg !20526

23:                                               ; preds = %19
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.365, i32 0, i32 0), i32 noundef 191, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.dvfs_register_notification, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7.374, i32 0, i32 0)) #25, !dbg !20526
  unreachable, !dbg !20526

24:                                               ; preds = %19
  %25 = getelementptr inbounds %struct._dvfs_notification_t, %struct._dvfs_notification_t* %0, i32 0, i32 7, !dbg !20527
  %26 = load %struct._dvfs_notification_t*, %struct._dvfs_notification_t** %25, align 4, !dbg !20527
  %27 = icmp eq %struct._dvfs_notification_t* %26, null, !dbg !20527
  br i1 %27, label %29, label %28, !dbg !20527

28:                                               ; preds = %24
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.365, i32 0, i32 0), i32 noundef 192, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.dvfs_register_notification, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.8.375, i32 0, i32 0)) #25, !dbg !20527
  unreachable, !dbg !20527

29:                                               ; preds = %24
  %30 = tail call i32 @save_and_set_interrupt_mask() #22, !dbg !20528
  call void @llvm.dbg.value(metadata i32 %30, metadata !20518, metadata !DIExpression()), !dbg !20521
  %31 = load i8*, i8** %5, align 4, !dbg !20529
  %32 = tail call %struct._dvfs_domain_t* @_dvfs_query_domain(i8* noundef %31) #23, !dbg !20530
  %33 = getelementptr inbounds %struct._dvfs_notification_t, %struct._dvfs_notification_t* %0, i32 0, i32 4, !dbg !20531
  store %struct._dvfs_domain_t* %32, %struct._dvfs_domain_t** %33, align 4, !dbg !20532
  %34 = icmp eq %struct._dvfs_domain_t* %32, null, !dbg !20533
  br i1 %34, label %59, label %35, !dbg !20535

35:                                               ; preds = %29
  %36 = load i8*, i8** %10, align 4, !dbg !20536
  %37 = tail call %struct._dvfs_opp_module_t* @_dvfs_map_opp_module(%struct._dvfs_domain_t* noundef nonnull %32, i8* noundef %36) #23, !dbg !20537
  %38 = getelementptr inbounds %struct._dvfs_notification_t, %struct._dvfs_notification_t* %0, i32 0, i32 5, !dbg !20538
  store %struct._dvfs_opp_module_t* %37, %struct._dvfs_opp_module_t** %38, align 4, !dbg !20539
  %39 = icmp eq %struct._dvfs_opp_module_t* %37, null, !dbg !20540
  br i1 %39, label %40, label %41, !dbg !20540

40:                                               ; preds = %35
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.365, i32 0, i32 0), i32 noundef 202, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.dvfs_register_notification, i32 0, i32 0), i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.376, i32 0, i32 0)) #25, !dbg !20540
  unreachable, !dbg !20540

41:                                               ; preds = %35
  store %struct._dvfs_notification_t* null, %struct._dvfs_notification_t** %20, align 4, !dbg !20541
  store %struct._dvfs_notification_t* null, %struct._dvfs_notification_t** %25, align 4, !dbg !20542
  %42 = getelementptr inbounds %struct._dvfs_opp_module_t, %struct._dvfs_opp_module_t* %37, i32 0, i32 1, !dbg !20543
  %43 = load %struct._dvfs_notification_t*, %struct._dvfs_notification_t** %42, align 4, !dbg !20543
  call void @llvm.dbg.value(metadata %struct._dvfs_notification_t* %43, metadata !20519, metadata !DIExpression()), !dbg !20521
  br label %44, !dbg !20545

44:                                               ; preds = %48, %41
  %45 = phi %struct._dvfs_notification_t* [ %43, %41 ], [ %50, %48 ], !dbg !20546
  call void @llvm.dbg.value(metadata %struct._dvfs_notification_t* %45, metadata !20519, metadata !DIExpression()), !dbg !20521
  %46 = icmp eq %struct._dvfs_notification_t* %45, null, !dbg !20547
  br i1 %46, label %47, label %48, !dbg !20551

47:                                               ; preds = %44
  store %struct._dvfs_notification_t* %0, %struct._dvfs_notification_t** %42, align 4, !dbg !20552
  br label %54, !dbg !20554

48:                                               ; preds = %44
  %49 = getelementptr inbounds %struct._dvfs_notification_t, %struct._dvfs_notification_t* %45, i32 0, i32 7, !dbg !20555
  %50 = load %struct._dvfs_notification_t*, %struct._dvfs_notification_t** %49, align 4, !dbg !20555
  %51 = icmp eq %struct._dvfs_notification_t* %50, null, !dbg !20557
  br i1 %51, label %52, label %44, !dbg !20558, !llvm.loop !20559

52:                                               ; preds = %48
  %53 = getelementptr inbounds %struct._dvfs_notification_t, %struct._dvfs_notification_t* %45, i32 0, i32 7, !dbg !20555
  store %struct._dvfs_notification_t* %0, %struct._dvfs_notification_t** %53, align 4, !dbg !20562
  store %struct._dvfs_notification_t* %45, %struct._dvfs_notification_t** %20, align 4, !dbg !20564
  br label %54, !dbg !20565

54:                                               ; preds = %52, %47
  %55 = load %struct._dvfs_domain_t*, %struct._dvfs_domain_t** %33, align 4, !dbg !20566
  %56 = getelementptr inbounds %struct._dvfs_domain_t, %struct._dvfs_domain_t* %55, i32 0, i32 2, i32 3, !dbg !20567
  %57 = load i32, i32* %56, align 4, !dbg !20568
  %58 = add i32 %57, 1, !dbg !20568
  store i32 %58, i32* %56, align 4, !dbg !20568
  br label %59, !dbg !20569

59:                                               ; preds = %29, %54
  call void @llvm.dbg.label(metadata !20520), !dbg !20570
  tail call void @restore_interrupt_mask(i32 noundef %30) #22, !dbg !20571
  ret void, !dbg !20572
}

; Function Attrs: noinline nounwind optsize
define dso_local void @dvfs_deregister_notification(%struct._dvfs_notification_t* noundef %0) local_unnamed_addr #0 !dbg !20573 {
  call void @llvm.dbg.value(metadata %struct._dvfs_notification_t* %0, metadata !20575, metadata !DIExpression()), !dbg !20577
  %2 = icmp eq %struct._dvfs_notification_t* %0, null, !dbg !20578
  br i1 %2, label %3, label %4, !dbg !20578

3:                                                ; preds = %1
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.365, i32 0, i32 0), i32 noundef 229, i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @__func__.dvfs_deregister_notification, i32 0, i32 0), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.370, i32 0, i32 0)) #25, !dbg !20578
  unreachable, !dbg !20578

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dvfs_notification_t, %struct._dvfs_notification_t* %0, i32 0, i32 4, !dbg !20579
  %6 = load %struct._dvfs_domain_t*, %struct._dvfs_domain_t** %5, align 4, !dbg !20579
  %7 = icmp eq %struct._dvfs_domain_t* %6, null, !dbg !20581
  br i1 %7, label %37, label %8, !dbg !20582

8:                                                ; preds = %4
  %9 = tail call i32 @save_and_set_interrupt_mask() #22, !dbg !20583
  call void @llvm.dbg.value(metadata i32 %9, metadata !20576, metadata !DIExpression()), !dbg !20577
  %10 = getelementptr inbounds %struct._dvfs_notification_t, %struct._dvfs_notification_t* %0, i32 0, i32 6, !dbg !20584
  %11 = load %struct._dvfs_notification_t*, %struct._dvfs_notification_t** %10, align 4, !dbg !20584
  %12 = icmp eq %struct._dvfs_notification_t* %11, null, !dbg !20586
  br i1 %12, label %17, label %13, !dbg !20587

13:                                               ; preds = %8
  %14 = getelementptr inbounds %struct._dvfs_notification_t, %struct._dvfs_notification_t* %0, i32 0, i32 7, !dbg !20588
  %15 = load %struct._dvfs_notification_t*, %struct._dvfs_notification_t** %14, align 4, !dbg !20588
  %16 = getelementptr inbounds %struct._dvfs_notification_t, %struct._dvfs_notification_t* %11, i32 0, i32 7, !dbg !20590
  store %struct._dvfs_notification_t* %15, %struct._dvfs_notification_t** %16, align 4, !dbg !20591
  br label %17, !dbg !20592

17:                                               ; preds = %13, %8
  %18 = getelementptr inbounds %struct._dvfs_notification_t, %struct._dvfs_notification_t* %0, i32 0, i32 7, !dbg !20593
  %19 = load %struct._dvfs_notification_t*, %struct._dvfs_notification_t** %18, align 4, !dbg !20593
  %20 = icmp eq %struct._dvfs_notification_t* %19, null, !dbg !20595
  br i1 %20, label %24, label %21, !dbg !20596

21:                                               ; preds = %17
  %22 = load %struct._dvfs_notification_t*, %struct._dvfs_notification_t** %10, align 4, !dbg !20597
  %23 = getelementptr inbounds %struct._dvfs_notification_t, %struct._dvfs_notification_t* %19, i32 0, i32 6, !dbg !20599
  store %struct._dvfs_notification_t* %22, %struct._dvfs_notification_t** %23, align 4, !dbg !20600
  br label %24, !dbg !20601

24:                                               ; preds = %21, %17
  %25 = getelementptr inbounds %struct._dvfs_notification_t, %struct._dvfs_notification_t* %0, i32 0, i32 5, !dbg !20602
  %26 = load %struct._dvfs_opp_module_t*, %struct._dvfs_opp_module_t** %25, align 4, !dbg !20602
  %27 = getelementptr inbounds %struct._dvfs_opp_module_t, %struct._dvfs_opp_module_t* %26, i32 0, i32 1, !dbg !20604
  %28 = load %struct._dvfs_notification_t*, %struct._dvfs_notification_t** %27, align 4, !dbg !20604
  %29 = icmp eq %struct._dvfs_notification_t* %28, %0, !dbg !20605
  br i1 %29, label %30, label %32, !dbg !20606

30:                                               ; preds = %24
  %31 = load %struct._dvfs_notification_t*, %struct._dvfs_notification_t** %18, align 4, !dbg !20607
  store %struct._dvfs_notification_t* %31, %struct._dvfs_notification_t** %27, align 4, !dbg !20609
  br label %32, !dbg !20610

32:                                               ; preds = %30, %24
  %33 = load %struct._dvfs_domain_t*, %struct._dvfs_domain_t** %5, align 4, !dbg !20611
  %34 = getelementptr inbounds %struct._dvfs_domain_t, %struct._dvfs_domain_t* %33, i32 0, i32 2, i32 3, !dbg !20612
  %35 = load i32, i32* %34, align 4, !dbg !20613
  %36 = add i32 %35, -1, !dbg !20613
  store i32 %36, i32* %34, align 4, !dbg !20613
  store %struct._dvfs_notification_t* null, %struct._dvfs_notification_t** %10, align 4, !dbg !20614
  store %struct._dvfs_notification_t* null, %struct._dvfs_notification_t** %18, align 4, !dbg !20615
  tail call void @restore_interrupt_mask(i32 noundef %9) #22, !dbg !20616
  br label %37, !dbg !20617

37:                                               ; preds = %4, %32
  ret void, !dbg !20617
}

; Function Attrs: noinline nounwind optsize
define dso_local void @dvfs_lock(%struct._dvfs_lock_t* noundef %0) local_unnamed_addr #0 !dbg !20618 {
  call void @llvm.dbg.value(metadata %struct._dvfs_lock_t* %0, metadata !20622, metadata !DIExpression()), !dbg !20625
  %2 = icmp eq %struct._dvfs_lock_t* %0, null, !dbg !20626
  br i1 %2, label %3, label %4, !dbg !20626

3:                                                ; preds = %1
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.365, i32 0, i32 0), i32 noundef 261, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @__func__.dvfs_lock, i32 0, i32 0), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10.381, i32 0, i32 0)) #25, !dbg !20626
  unreachable, !dbg !20626

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dvfs_lock_t, %struct._dvfs_lock_t* %0, i32 0, i32 0, !dbg !20627
  %6 = load i8*, i8** %5, align 4, !dbg !20627
  %7 = icmp eq i8* %6, null, !dbg !20627
  br i1 %7, label %8, label %9, !dbg !20627

8:                                                ; preds = %4
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.365, i32 0, i32 0), i32 noundef 262, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @__func__.dvfs_lock, i32 0, i32 0), i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.11.382, i32 0, i32 0)) #25, !dbg !20627
  unreachable, !dbg !20627

9:                                                ; preds = %4
  %10 = getelementptr inbounds %struct._dvfs_lock_t, %struct._dvfs_lock_t* %0, i32 0, i32 1, !dbg !20628
  %11 = load i8*, i8** %10, align 4, !dbg !20628
  %12 = icmp eq i8* %11, null, !dbg !20628
  br i1 %12, label %13, label %14, !dbg !20628

13:                                               ; preds = %9
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.365, i32 0, i32 0), i32 noundef 263, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @__func__.dvfs_lock, i32 0, i32 0), i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.12.383, i32 0, i32 0)) #25, !dbg !20628
  unreachable, !dbg !20628

14:                                               ; preds = %9
  %15 = tail call i32 @save_and_set_interrupt_mask() #22, !dbg !20629
  call void @llvm.dbg.value(metadata i32 %15, metadata !20623, metadata !DIExpression()), !dbg !20625
  %16 = getelementptr inbounds %struct._dvfs_lock_t, %struct._dvfs_lock_t* %0, i32 0, i32 3, !dbg !20630
  %17 = load %struct._dvfs_domain_t*, %struct._dvfs_domain_t** %16, align 4, !dbg !20630
  %18 = icmp eq %struct._dvfs_domain_t* %17, null, !dbg !20632
  br i1 %18, label %19, label %23, !dbg !20633

19:                                               ; preds = %14
  %20 = load i8*, i8** %5, align 4, !dbg !20634
  %21 = tail call %struct._dvfs_domain_t* @_dvfs_query_domain(i8* noundef %20) #23, !dbg !20636
  store %struct._dvfs_domain_t* %21, %struct._dvfs_domain_t** %16, align 4, !dbg !20637
  %22 = icmp eq %struct._dvfs_domain_t* %21, null, !dbg !20638
  br i1 %22, label %57, label %23, !dbg !20640

23:                                               ; preds = %19, %14
  %24 = phi %struct._dvfs_domain_t* [ %21, %19 ], [ %17, %14 ]
  %25 = getelementptr inbounds %struct._dvfs_lock_t, %struct._dvfs_lock_t* %0, i32 0, i32 2, !dbg !20641
  %26 = load i32, i32* %25, align 4, !dbg !20641
  %27 = icmp eq i32 %26, 0, !dbg !20643
  br i1 %27, label %30, label %28, !dbg !20644

28:                                               ; preds = %23
  %29 = add i32 %26, 1, !dbg !20645
  store i32 %29, i32* %25, align 4, !dbg !20645
  br label %57, !dbg !20647

30:                                               ; preds = %23
  %31 = getelementptr inbounds %struct._dvfs_lock_t, %struct._dvfs_lock_t* %0, i32 0, i32 4, !dbg !20648
  %32 = load %struct._dvfs_lock_t*, %struct._dvfs_lock_t** %31, align 4, !dbg !20648
  %33 = icmp eq %struct._dvfs_lock_t* %32, null, !dbg !20648
  br i1 %33, label %35, label %34, !dbg !20648

34:                                               ; preds = %30
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.365, i32 0, i32 0), i32 noundef 277, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @__func__.dvfs_lock, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.13.384, i32 0, i32 0)) #25, !dbg !20648
  unreachable, !dbg !20648

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct._dvfs_lock_t, %struct._dvfs_lock_t* %0, i32 0, i32 5, !dbg !20650
  %37 = load %struct._dvfs_lock_t*, %struct._dvfs_lock_t** %36, align 4, !dbg !20650
  %38 = icmp eq %struct._dvfs_lock_t* %37, null, !dbg !20650
  br i1 %38, label %40, label %39, !dbg !20650

39:                                               ; preds = %35
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.365, i32 0, i32 0), i32 noundef 278, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @__func__.dvfs_lock, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.14.385, i32 0, i32 0)) #25, !dbg !20650
  unreachable, !dbg !20650

40:                                               ; preds = %35
  store i32 1, i32* %25, align 4, !dbg !20651
  %41 = getelementptr inbounds %struct._dvfs_domain_t, %struct._dvfs_domain_t* %24, i32 0, i32 3, !dbg !20652
  %42 = load %struct._dvfs_lock_t*, %struct._dvfs_lock_t** %41, align 4, !dbg !20652
  %43 = icmp eq %struct._dvfs_lock_t* %42, null, !dbg !20654
  %44 = getelementptr inbounds %struct._dvfs_domain_t, %struct._dvfs_domain_t* %24, i32 0, i32 4, !dbg !20655
  %45 = load %struct._dvfs_lock_t*, %struct._dvfs_lock_t** %44, align 4, !dbg !20655
  br i1 %43, label %46, label %52, !dbg !20656

46:                                               ; preds = %40
  %47 = icmp eq %struct._dvfs_lock_t* %45, null, !dbg !20657
  br i1 %47, label %49, label %48, !dbg !20657

48:                                               ; preds = %46
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.365, i32 0, i32 0), i32 noundef 281, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @__func__.dvfs_lock, i32 0, i32 0), i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.15.386, i32 0, i32 0)) #25, !dbg !20657
  unreachable, !dbg !20657

49:                                               ; preds = %46
  store %struct._dvfs_lock_t* %0, %struct._dvfs_lock_t** %41, align 4, !dbg !20659
  %50 = load %struct._dvfs_domain_t*, %struct._dvfs_domain_t** %16, align 4, !dbg !20660
  %51 = getelementptr inbounds %struct._dvfs_domain_t, %struct._dvfs_domain_t* %50, i32 0, i32 4, !dbg !20661
  store %struct._dvfs_lock_t* %0, %struct._dvfs_lock_t** %51, align 4, !dbg !20662
  br label %57, !dbg !20663

52:                                               ; preds = %40
  %53 = getelementptr inbounds %struct._dvfs_lock_t, %struct._dvfs_lock_t* %45, i32 0, i32 5, !dbg !20664
  store %struct._dvfs_lock_t* %0, %struct._dvfs_lock_t** %53, align 4, !dbg !20666
  %54 = load %struct._dvfs_domain_t*, %struct._dvfs_domain_t** %16, align 4, !dbg !20667
  %55 = getelementptr inbounds %struct._dvfs_domain_t, %struct._dvfs_domain_t* %54, i32 0, i32 4, !dbg !20668
  %56 = load %struct._dvfs_lock_t*, %struct._dvfs_lock_t** %55, align 4, !dbg !20668
  store %struct._dvfs_lock_t* %56, %struct._dvfs_lock_t** %31, align 4, !dbg !20669
  store %struct._dvfs_lock_t* %0, %struct._dvfs_lock_t** %55, align 4, !dbg !20670
  br label %57

57:                                               ; preds = %28, %52, %49, %19
  call void @llvm.dbg.label(metadata !20624), !dbg !20671
  tail call void @restore_interrupt_mask(i32 noundef %15) #22, !dbg !20672
  ret void, !dbg !20673
}

; Function Attrs: noinline nounwind optsize
define dso_local void @dvfs_unlock(%struct._dvfs_lock_t* noundef %0) local_unnamed_addr #0 !dbg !20674 {
  call void @llvm.dbg.value(metadata %struct._dvfs_lock_t* %0, metadata !20676, metadata !DIExpression()), !dbg !20678
  %2 = icmp eq %struct._dvfs_lock_t* %0, null, !dbg !20679
  br i1 %2, label %3, label %4, !dbg !20679

3:                                                ; preds = %1
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.365, i32 0, i32 0), i32 noundef 299, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.dvfs_unlock, i32 0, i32 0), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10.381, i32 0, i32 0)) #25, !dbg !20679
  unreachable, !dbg !20679

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dvfs_lock_t, %struct._dvfs_lock_t* %0, i32 0, i32 3, !dbg !20680
  %6 = load %struct._dvfs_domain_t*, %struct._dvfs_domain_t** %5, align 4, !dbg !20680
  %7 = icmp eq %struct._dvfs_domain_t* %6, null, !dbg !20682
  br i1 %7, label %46, label %8, !dbg !20683

8:                                                ; preds = %4
  %9 = tail call i32 @save_and_set_interrupt_mask() #22, !dbg !20684
  call void @llvm.dbg.value(metadata i32 %9, metadata !20677, metadata !DIExpression()), !dbg !20678
  %10 = getelementptr inbounds %struct._dvfs_lock_t, %struct._dvfs_lock_t* %0, i32 0, i32 2, !dbg !20685
  %11 = load i32, i32* %10, align 4, !dbg !20686
  %12 = add i32 %11, -1, !dbg !20686
  store i32 %12, i32* %10, align 4, !dbg !20686
  %13 = icmp eq i32 %12, 0, !dbg !20687
  br i1 %13, label %14, label %45, !dbg !20689

14:                                               ; preds = %8
  %15 = getelementptr inbounds %struct._dvfs_lock_t, %struct._dvfs_lock_t* %0, i32 0, i32 4, !dbg !20690
  %16 = load %struct._dvfs_lock_t*, %struct._dvfs_lock_t** %15, align 4, !dbg !20690
  %17 = icmp eq %struct._dvfs_lock_t* %16, null, !dbg !20693
  br i1 %17, label %22, label %18, !dbg !20694

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct._dvfs_lock_t, %struct._dvfs_lock_t* %0, i32 0, i32 5, !dbg !20695
  %20 = load %struct._dvfs_lock_t*, %struct._dvfs_lock_t** %19, align 4, !dbg !20695
  %21 = getelementptr inbounds %struct._dvfs_lock_t, %struct._dvfs_lock_t* %16, i32 0, i32 5, !dbg !20697
  store %struct._dvfs_lock_t* %20, %struct._dvfs_lock_t** %21, align 4, !dbg !20698
  br label %22, !dbg !20699

22:                                               ; preds = %18, %14
  %23 = getelementptr inbounds %struct._dvfs_lock_t, %struct._dvfs_lock_t* %0, i32 0, i32 5, !dbg !20700
  %24 = load %struct._dvfs_lock_t*, %struct._dvfs_lock_t** %23, align 4, !dbg !20700
  %25 = icmp eq %struct._dvfs_lock_t* %24, null, !dbg !20702
  br i1 %25, label %29, label %26, !dbg !20703

26:                                               ; preds = %22
  %27 = load %struct._dvfs_lock_t*, %struct._dvfs_lock_t** %15, align 4, !dbg !20704
  %28 = getelementptr inbounds %struct._dvfs_lock_t, %struct._dvfs_lock_t* %24, i32 0, i32 4, !dbg !20706
  store %struct._dvfs_lock_t* %27, %struct._dvfs_lock_t** %28, align 4, !dbg !20707
  br label %29, !dbg !20708

29:                                               ; preds = %26, %22
  %30 = load %struct._dvfs_domain_t*, %struct._dvfs_domain_t** %5, align 4, !dbg !20709
  %31 = getelementptr inbounds %struct._dvfs_domain_t, %struct._dvfs_domain_t* %30, i32 0, i32 4, !dbg !20711
  %32 = load %struct._dvfs_lock_t*, %struct._dvfs_lock_t** %31, align 4, !dbg !20711
  %33 = icmp eq %struct._dvfs_lock_t* %32, %0, !dbg !20712
  br i1 %33, label %34, label %37, !dbg !20713

34:                                               ; preds = %29
  %35 = load %struct._dvfs_lock_t*, %struct._dvfs_lock_t** %15, align 4, !dbg !20714
  store %struct._dvfs_lock_t* %35, %struct._dvfs_lock_t** %31, align 4, !dbg !20716
  %36 = load %struct._dvfs_domain_t*, %struct._dvfs_domain_t** %5, align 4, !dbg !20717
  br label %37, !dbg !20719

37:                                               ; preds = %34, %29
  %38 = phi %struct._dvfs_domain_t* [ %36, %34 ], [ %30, %29 ], !dbg !20717
  %39 = getelementptr inbounds %struct._dvfs_domain_t, %struct._dvfs_domain_t* %38, i32 0, i32 3, !dbg !20720
  %40 = load %struct._dvfs_lock_t*, %struct._dvfs_lock_t** %39, align 4, !dbg !20720
  %41 = icmp eq %struct._dvfs_lock_t* %40, %0, !dbg !20721
  br i1 %41, label %42, label %44, !dbg !20722

42:                                               ; preds = %37
  %43 = load %struct._dvfs_lock_t*, %struct._dvfs_lock_t** %23, align 4, !dbg !20723
  store %struct._dvfs_lock_t* %43, %struct._dvfs_lock_t** %39, align 4, !dbg !20725
  br label %44, !dbg !20726

44:                                               ; preds = %42, %37
  store %struct._dvfs_lock_t* null, %struct._dvfs_lock_t** %15, align 4, !dbg !20727
  store %struct._dvfs_lock_t* null, %struct._dvfs_lock_t** %23, align 4, !dbg !20728
  br label %45, !dbg !20729

45:                                               ; preds = %44, %8
  tail call void @restore_interrupt_mask(i32 noundef %9) #22, !dbg !20730
  br label %46, !dbg !20731

46:                                               ; preds = %4, %45
  ret void, !dbg !20731
}

; Function Attrs: noinline nounwind optsize
define dso_local void @dvfs_debug_dump() local_unnamed_addr #0 !dbg !20732 {
  call void @llvm.dbg.value(metadata %struct._dvfs_domain_t* undef, metadata !20734, metadata !DIExpression()), !dbg !20739
  %1 = load %struct._dvfs_domain_t*, %struct._dvfs_domain_t** @dvfs_domain_head, align 4, !dbg !20740
  call void @llvm.dbg.value(metadata %struct._dvfs_domain_t* %1, metadata !20734, metadata !DIExpression()), !dbg !20739
  %2 = icmp eq %struct._dvfs_domain_t* %1, null, !dbg !20742
  br i1 %2, label %85, label %3, !dbg !20746

3:                                                ; preds = %0, %81
  %4 = phi %struct._dvfs_domain_t* [ %83, %81 ], [ %1, %0 ]
  %5 = getelementptr inbounds %struct._dvfs_domain_t, %struct._dvfs_domain_t* %4, i32 0, i32 0, !dbg !20747
  %6 = load i8*, i8** %5, align 4, !dbg !20747
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__FUNCTION__.dvfs_debug_dump, i32 0, i32 0), i32 noundef 346, i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.16.389, i32 0, i32 0), i8* noundef %6) #22, !dbg !20747
  %7 = getelementptr inbounds %struct._dvfs_domain_t, %struct._dvfs_domain_t* %4, i32 0, i32 2, i32 0, !dbg !20748
  %8 = load i32, i32* %7, align 4, !dbg !20748
  %9 = getelementptr inbounds %struct._dvfs_domain_t, %struct._dvfs_domain_t* %4, i32 0, i32 2, i32 1, !dbg !20748
  %10 = load i32, i32* %9, align 4, !dbg !20748
  %11 = getelementptr inbounds %struct._dvfs_domain_t, %struct._dvfs_domain_t* %4, i32 0, i32 2, i32 2, !dbg !20748
  %12 = load i32, i32* %11, align 4, !dbg !20748
  %13 = getelementptr inbounds %struct._dvfs_domain_t, %struct._dvfs_domain_t* %4, i32 0, i32 2, i32 3, !dbg !20748
  %14 = load i32, i32* %13, align 4, !dbg !20748
  %15 = getelementptr inbounds %struct._dvfs_domain_t, %struct._dvfs_domain_t* %4, i32 0, i32 3, !dbg !20748
  %16 = load %struct._dvfs_lock_t*, %struct._dvfs_lock_t** %15, align 4, !dbg !20748
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__FUNCTION__.dvfs_debug_dump, i32 0, i32 0), i32 noundef 349, i8* noundef getelementptr inbounds ([70 x i8], [70 x i8]* @.str.17.390, i32 0, i32 0), i32 noundef %8, i32 noundef %10, i32 noundef %12, i32 noundef %14, %struct._dvfs_lock_t* noundef %16) #22, !dbg !20748
  call void @llvm.dbg.value(metadata i32 0, metadata !20738, metadata !DIExpression()), !dbg !20739
  %17 = load i32, i32* %9, align 4, !dbg !20749
  %18 = icmp eq i32 %17, 0, !dbg !20752
  br i1 %18, label %22, label %19, !dbg !20753

19:                                               ; preds = %3
  %20 = getelementptr inbounds %struct._dvfs_domain_t, %struct._dvfs_domain_t* %4, i32 0, i32 2, i32 5
  %21 = getelementptr inbounds %struct._dvfs_domain_t, %struct._dvfs_domain_t* %4, i32 0, i32 2, i32 4
  br label %25, !dbg !20753

22:                                               ; preds = %25, %3
  %23 = load %struct._dvfs_lock_t*, %struct._dvfs_lock_t** %15, align 4, !dbg !20754
  call void @llvm.dbg.value(metadata %struct._dvfs_lock_t* %23, metadata !20737, metadata !DIExpression()), !dbg !20739
  %24 = icmp eq %struct._dvfs_lock_t* %23, null, !dbg !20756
  br i1 %24, label %36, label %41, !dbg !20760

25:                                               ; preds = %19, %25
  %26 = phi i32 [ 0, %19 ], [ %33, %25 ]
  call void @llvm.dbg.value(metadata i32 %26, metadata !20738, metadata !DIExpression()), !dbg !20739
  %27 = load i32*, i32** %20, align 4, !dbg !20761
  %28 = getelementptr inbounds i32, i32* %27, i32 %26, !dbg !20761
  %29 = load i32, i32* %28, align 4, !dbg !20761
  %30 = load i32*, i32** %21, align 4, !dbg !20761
  %31 = getelementptr inbounds i32, i32* %30, i32 %26, !dbg !20761
  %32 = load i32, i32* %31, align 4, !dbg !20761
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__FUNCTION__.dvfs_debug_dump, i32 0, i32 0), i32 noundef 352, i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.18.391, i32 0, i32 0), i32 noundef %26, i32 noundef %29, i32 noundef %32) #22, !dbg !20761
  %33 = add nuw i32 %26, 1, !dbg !20763
  call void @llvm.dbg.value(metadata i32 %33, metadata !20738, metadata !DIExpression()), !dbg !20739
  %34 = load i32, i32* %9, align 4, !dbg !20749
  %35 = icmp ult i32 %33, %34, !dbg !20752
  br i1 %35, label %25, label %22, !dbg !20753, !llvm.loop !20764

36:                                               ; preds = %41, %22
  %37 = getelementptr inbounds %struct._dvfs_domain_t, %struct._dvfs_domain_t* %4, i32 0, i32 2, i32 6, i32 3
  call void @llvm.dbg.value(metadata %struct._dvfs_opp_module_t* null, metadata !20735, metadata !DIExpression()), !dbg !20739
  %38 = load %struct._dvfs_opp_module_t* (%struct._dvfs_domain_t*, %struct._dvfs_opp_module_t*)*, %struct._dvfs_opp_module_t* (%struct._dvfs_domain_t*, %struct._dvfs_opp_module_t*)** %37, align 4, !dbg !20766
  %39 = tail call %struct._dvfs_opp_module_t* %38(%struct._dvfs_domain_t* noundef nonnull %4, %struct._dvfs_opp_module_t* noundef null) #22, !dbg !20770
  call void @llvm.dbg.value(metadata %struct._dvfs_opp_module_t* %39, metadata !20735, metadata !DIExpression()), !dbg !20739
  %40 = icmp eq %struct._dvfs_opp_module_t* %39, null, !dbg !20771
  br i1 %40, label %81, label %54, !dbg !20773

41:                                               ; preds = %22, %41
  %42 = phi %struct._dvfs_lock_t* [ %48, %41 ], [ %23, %22 ]
  %43 = getelementptr inbounds %struct._dvfs_lock_t, %struct._dvfs_lock_t* %42, i32 0, i32 1, !dbg !20774
  %44 = load i8*, i8** %43, align 4, !dbg !20774
  %45 = getelementptr inbounds %struct._dvfs_lock_t, %struct._dvfs_lock_t* %42, i32 0, i32 2, !dbg !20774
  %46 = load i32, i32* %45, align 4, !dbg !20774
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__FUNCTION__.dvfs_debug_dump, i32 0, i32 0), i32 noundef 359, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.19.392, i32 0, i32 0), i8* noundef %44, i32 noundef %46) #22, !dbg !20774
  %47 = getelementptr inbounds %struct._dvfs_lock_t, %struct._dvfs_lock_t* %42, i32 0, i32 5, !dbg !20775
  call void @llvm.dbg.value(metadata %struct._dvfs_lock_t* undef, metadata !20737, metadata !DIExpression()), !dbg !20739
  %48 = load %struct._dvfs_lock_t*, %struct._dvfs_lock_t** %47, align 4, !dbg !20754
  call void @llvm.dbg.value(metadata %struct._dvfs_lock_t* %48, metadata !20737, metadata !DIExpression()), !dbg !20739
  %49 = icmp eq %struct._dvfs_lock_t* %48, null, !dbg !20756
  br i1 %49, label %36, label %41, !dbg !20760, !llvm.loop !20776

50:                                               ; preds = %74, %70
  call void @llvm.dbg.value(metadata %struct._dvfs_opp_module_t* %55, metadata !20735, metadata !DIExpression()), !dbg !20739
  %51 = load %struct._dvfs_opp_module_t* (%struct._dvfs_domain_t*, %struct._dvfs_opp_module_t*)*, %struct._dvfs_opp_module_t* (%struct._dvfs_domain_t*, %struct._dvfs_opp_module_t*)** %37, align 4, !dbg !20766
  %52 = tail call %struct._dvfs_opp_module_t* %51(%struct._dvfs_domain_t* noundef nonnull %4, %struct._dvfs_opp_module_t* noundef %55) #22, !dbg !20770
  call void @llvm.dbg.value(metadata %struct._dvfs_opp_module_t* %52, metadata !20735, metadata !DIExpression()), !dbg !20739
  %53 = icmp eq %struct._dvfs_opp_module_t* %52, null, !dbg !20771
  br i1 %53, label %81, label %54, !dbg !20773, !llvm.loop !20779

54:                                               ; preds = %36, %50
  %55 = phi %struct._dvfs_opp_module_t* [ %52, %50 ], [ %39, %36 ]
  %56 = getelementptr inbounds %struct._dvfs_opp_module_t, %struct._dvfs_opp_module_t* %55, i32 0, i32 0, !dbg !20782
  %57 = load i8*, i8** %56, align 4, !dbg !20782
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__FUNCTION__.dvfs_debug_dump, i32 0, i32 0), i32 noundef 369, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.20, i32 0, i32 0), i8* noundef %57) #22, !dbg !20782
  call void @llvm.dbg.value(metadata i32 0, metadata !20738, metadata !DIExpression()), !dbg !20739
  %58 = load i32, i32* %9, align 4, !dbg !20783
  %59 = icmp eq i32 %58, 0, !dbg !20786
  br i1 %59, label %70, label %60, !dbg !20787

60:                                               ; preds = %54
  %61 = getelementptr inbounds %struct._dvfs_opp_module_t, %struct._dvfs_opp_module_t* %55, i32 0, i32 2
  br label %62, !dbg !20787

62:                                               ; preds = %60, %62
  %63 = phi i32 [ 0, %60 ], [ %67, %62 ]
  call void @llvm.dbg.value(metadata i32 %63, metadata !20738, metadata !DIExpression()), !dbg !20739
  %64 = load i32*, i32** %61, align 4, !dbg !20788
  %65 = getelementptr inbounds i32, i32* %64, i32 %63, !dbg !20788
  %66 = load i32, i32* %65, align 4, !dbg !20788
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__FUNCTION__.dvfs_debug_dump, i32 0, i32 0), i32 noundef 372, i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.21, i32 0, i32 0), i32 noundef %63, i32 noundef %66) #22, !dbg !20788
  %67 = add nuw i32 %63, 1, !dbg !20790
  call void @llvm.dbg.value(metadata i32 %67, metadata !20738, metadata !DIExpression()), !dbg !20739
  %68 = load i32, i32* %9, align 4, !dbg !20783
  %69 = icmp ult i32 %67, %68, !dbg !20786
  br i1 %69, label %62, label %70, !dbg !20787, !llvm.loop !20791

70:                                               ; preds = %62, %54
  %71 = getelementptr inbounds %struct._dvfs_opp_module_t, %struct._dvfs_opp_module_t* %55, i32 0, i32 1, !dbg !20793
  call void @llvm.dbg.value(metadata %struct._dvfs_notification_t* undef, metadata !20736, metadata !DIExpression()), !dbg !20739
  %72 = load %struct._dvfs_notification_t*, %struct._dvfs_notification_t** %71, align 4, !dbg !20795
  call void @llvm.dbg.value(metadata %struct._dvfs_notification_t* %72, metadata !20736, metadata !DIExpression()), !dbg !20739
  %73 = icmp eq %struct._dvfs_notification_t* %72, null, !dbg !20796
  br i1 %73, label %50, label %74, !dbg !20800

74:                                               ; preds = %70, %74
  %75 = phi %struct._dvfs_notification_t* [ %79, %74 ], [ %72, %70 ]
  %76 = getelementptr inbounds %struct._dvfs_notification_t, %struct._dvfs_notification_t* %75, i32 0, i32 2, !dbg !20801
  %77 = load i8*, i8** %76, align 4, !dbg !20801
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__FUNCTION__.dvfs_debug_dump, i32 0, i32 0), i32 noundef 380, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.22, i32 0, i32 0), i8* noundef %77) #22, !dbg !20801
  %78 = getelementptr inbounds %struct._dvfs_notification_t, %struct._dvfs_notification_t* %75, i32 0, i32 7, !dbg !20802
  call void @llvm.dbg.value(metadata %struct._dvfs_notification_t* undef, metadata !20736, metadata !DIExpression()), !dbg !20739
  %79 = load %struct._dvfs_notification_t*, %struct._dvfs_notification_t** %78, align 4, !dbg !20795
  call void @llvm.dbg.value(metadata %struct._dvfs_notification_t* %79, metadata !20736, metadata !DIExpression()), !dbg !20739
  %80 = icmp eq %struct._dvfs_notification_t* %79, null, !dbg !20796
  br i1 %80, label %50, label %74, !dbg !20800, !llvm.loop !20803

81:                                               ; preds = %50, %36
  %82 = getelementptr inbounds %struct._dvfs_domain_t, %struct._dvfs_domain_t* %4, i32 0, i32 5, !dbg !20806
  call void @llvm.dbg.value(metadata %struct._dvfs_domain_t* undef, metadata !20734, metadata !DIExpression()), !dbg !20739
  %83 = load %struct._dvfs_domain_t*, %struct._dvfs_domain_t** %82, align 4, !dbg !20740
  call void @llvm.dbg.value(metadata %struct._dvfs_domain_t* %83, metadata !20734, metadata !DIExpression()), !dbg !20739
  %84 = icmp eq %struct._dvfs_domain_t* %83, null, !dbg !20742
  br i1 %84, label %85, label %3, !dbg !20746, !llvm.loop !20807

85:                                               ; preds = %81, %0
  ret void, !dbg !20810
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i1 @is_clk_use_lfosc() local_unnamed_addr #10 section ".tcm_code" !dbg !20811 {
  ret i1 false, !dbg !20812
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i1 @is_clk_use_mpll() local_unnamed_addr #10 section ".tcm_code" !dbg !20813 {
  ret i1 false, !dbg !20814
}

; Function Attrs: noinline nounwind optsize
define dso_local void @cm_bus_clk_208m() local_unnamed_addr #0 section ".tcm_code" !dbg !20815 {
  tail call void @cm_bus_clk_208m_mpll_hfosc() #22, !dbg !20816
  ret void, !dbg !20819
}

; Function Attrs: optsize
declare dso_local void @cm_bus_clk_208m_mpll_hfosc() local_unnamed_addr #5 section ".tcm_code"

; Function Attrs: noinline nounwind optsize
define dso_local void @cm_bus_clk_104m() local_unnamed_addr #0 section ".tcm_code" !dbg !20820 {
  tail call void @cm_bus_clk_104m_hfosc_hfosc() #22, !dbg !20821
  ret void, !dbg !20824
}

; Function Attrs: optsize
declare dso_local void @cm_bus_clk_104m_hfosc_hfosc() local_unnamed_addr #5 section ".tcm_code"

; Function Attrs: noinline nounwind optsize
define dso_local void @cm_bus_clk_26m() local_unnamed_addr #0 section ".tcm_code" !dbg !20825 {
  tail call void @cm_bus_clk_26m_dcxo_dcxo() #22, !dbg !20826
  ret void, !dbg !20829
}

; Function Attrs: optsize
declare dso_local void @cm_bus_clk_26m_dcxo_dcxo() local_unnamed_addr #5 section ".tcm_code"

; Function Attrs: noinline nounwind optsize
define dso_local void @peri_clk_26m() local_unnamed_addr #0 section ".tcm_code" !dbg !20830 {
  tail call void @peri_26m_dcxo() #22, !dbg !20831
  ret void, !dbg !20834
}

; Function Attrs: optsize
declare dso_local void @peri_26m_dcxo() local_unnamed_addr #5 section ".tcm_code"

; Function Attrs: noinline nounwind optsize
define dso_local i32 @__io_putchar(i32 noundef returned %0) local_unnamed_addr #0 !dbg !20835 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !20839, metadata !DIExpression()), !dbg !20840
  %2 = trunc i32 %0 to i8, !dbg !20841
  tail call void @hal_uart_put_char(i32 noundef 2, i8 noundef zeroext %2) #22, !dbg !20842
  ret i32 %0, !dbg !20843
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local i32 @main() local_unnamed_addr #21 !dbg !20844 {
  tail call fastcc void @SystemClock_Config() #23, !dbg !20845
  tail call void @SystemCoreClockUpdate() #22, !dbg !20846
  tail call fastcc void @prvSetupHardware() #23, !dbg !20847
  tail call void asm sideeffect "cpsie i", "~{memory}"() #24, !dbg !20848, !srcloc !20851
  tail call void asm sideeffect "cpsie f", "~{memory}"() #24, !dbg !20852, !srcloc !20855
  %1 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.395, i32 0, i32 0)) #22, !dbg !20856
  %2 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1.396, i32 0, i32 0)) #22, !dbg !20857
  %3 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.395, i32 0, i32 0)) #22, !dbg !20858
  tail call fastcc void @sd_read_write_data_dma_example() #23, !dbg !20859
  br label %4, !dbg !20860

4:                                                ; preds = %0, %4
  br label %4, !dbg !20860, !llvm.loop !20861
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @SystemClock_Config() unnamed_addr #0 !dbg !20863 {
  %1 = tail call i32 @hal_clock_init() #22, !dbg !20864
  ret void, !dbg !20865
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvSetupHardware() unnamed_addr #0 !dbg !20866 {
  tail call fastcc void @plain_log_uart_init() #23, !dbg !20867
  %1 = tail call i32 @hal_flash_init() #22, !dbg !20868
  %2 = tail call i32 @hal_nvic_init() #22, !dbg !20869
  ret void, !dbg !20870
}

; Function Attrs: optsize
declare dso_local i32 @printf(i8* noundef, ...) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define internal fastcc void @sd_read_write_data_dma_example() unnamed_addr #0 !dbg !20871 {
  %1 = alloca i64, align 8
  %2 = bitcast i64* %1 to %struct.hal_cache_region_config_t*
  %3 = bitcast i64* %1 to i8*, !dbg !20883
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #24, !dbg !20883
  call void @llvm.dbg.declare(metadata %struct.hal_cache_region_config_t* %2, metadata !20873, metadata !DIExpression()), !dbg !20884
  store i64 193273528320002, i64* %1, align 8, !dbg !20884
  call void @llvm.dbg.value(metadata i32 1, metadata !20879, metadata !DIExpression()), !dbg !20885
  call void @llvm.dbg.value(metadata i32 1, metadata !20880, metadata !DIExpression()), !dbg !20885
  call void @llvm.dbg.value(metadata i32 0, metadata !20882, metadata !DIExpression()), !dbg !20885
  %4 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.2.397, i32 0, i32 0)) #22, !dbg !20886
  %5 = tail call i32 @hal_pinmux_set_function(i32 noundef 30, i8 noundef zeroext 5) #22, !dbg !20887
  %6 = tail call i32 @hal_pinmux_set_function(i32 noundef 31, i8 noundef zeroext 5) #22, !dbg !20888
  %7 = tail call i32 @hal_pinmux_set_function(i32 noundef 32, i8 noundef zeroext 5) #22, !dbg !20889
  %8 = tail call i32 @hal_pinmux_set_function(i32 noundef 33, i8 noundef zeroext 5) #22, !dbg !20890
  %9 = tail call i32 @hal_pinmux_set_function(i32 noundef 34, i8 noundef zeroext 5) #22, !dbg !20891
  %10 = tail call i32 @hal_pinmux_set_function(i32 noundef 35, i8 noundef zeroext 5) #22, !dbg !20892
  call void @llvm.dbg.value(metadata i32 0, metadata !20882, metadata !DIExpression()), !dbg !20885
  br label %14, !dbg !20893

11:                                               ; preds = %14
  %12 = add nuw nsw i32 %15, 1, !dbg !20894
  call void @llvm.dbg.value(metadata i32 %12, metadata !20882, metadata !DIExpression()), !dbg !20885
  call void @llvm.dbg.value(metadata i32 %15, metadata !20882, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !20885
  %13 = icmp eq i32 %12, 3, !dbg !20898
  br i1 %13, label %63, label %14, !dbg !20893, !llvm.loop !20899

14:                                               ; preds = %0, %11
  %15 = phi i32 [ 0, %0 ], [ %12, %11 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !20882, metadata !DIExpression()), !dbg !20885
  %16 = call i32 @hal_sd_init(i32 noundef 0, %struct.hal_cache_region_config_t* noundef nonnull %2) #22, !dbg !20901
  %17 = icmp eq i32 %16, 0, !dbg !20902
  call void @llvm.dbg.value(metadata i32 %15, metadata !20882, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !20885
  br i1 %17, label %18, label %11, !dbg !20903

18:                                               ; preds = %14, %18
  %19 = phi i32 [ %21, %18 ], [ 0, %14 ]
  call void @llvm.dbg.value(metadata i32 %19, metadata !20881, metadata !DIExpression()), !dbg !20885
  %20 = getelementptr inbounds [512 x i32], [512 x i32]* @sd_write_mutil_buffer, i32 0, i32 %19, !dbg !20904
  store i32 -1515870811, i32* %20, align 4, !dbg !20908
  %21 = add nuw nsw i32 %19, 1, !dbg !20909
  call void @llvm.dbg.value(metadata i32 %21, metadata !20881, metadata !DIExpression()), !dbg !20885
  %22 = icmp eq i32 %21, 128, !dbg !20910
  br i1 %22, label %23, label %18, !dbg !20911, !llvm.loop !20912

23:                                               ; preds = %18, %27
  %24 = phi i32 [ %30, %27 ], [ 0, %18 ]
  call void @llvm.dbg.value(metadata i32 %24, metadata !20882, metadata !DIExpression()), !dbg !20885
  %25 = call i32 @hal_sd_write_blocks_dma_blocking(i32 noundef 0, i32* noundef getelementptr inbounds ([512 x i32], [512 x i32]* @sd_write_mutil_buffer, i32 0, i32 0), i32 noundef 80, i32 noundef 1) #22, !dbg !20914
  %26 = icmp eq i32 %25, 0, !dbg !20917
  br i1 %26, label %35, label %27, !dbg !20918

27:                                               ; preds = %23
  %28 = call i32 @hal_sd_init(i32 noundef 0, %struct.hal_cache_region_config_t* noundef nonnull %2) #22, !dbg !20919
  %29 = icmp ne i32 %28, 0, !dbg !20922
  call void @llvm.dbg.value(metadata i32 %24, metadata !20882, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !20885
  %30 = add nuw nsw i32 %24, 1
  %31 = icmp eq i32 %30, 3
  %32 = select i1 %29, i1 true, i1 %31, !dbg !20923
  call void @llvm.dbg.value(metadata i32 %30, metadata !20882, metadata !DIExpression()), !dbg !20885
  call void @llvm.dbg.value(metadata i32 %24, metadata !20882, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !20885
  br i1 %32, label %33, label %23, !dbg !20923, !llvm.loop !20924

33:                                               ; preds = %27
  %34 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.4.398, i32 0, i32 0)) #22, !dbg !20885
  br label %35, !dbg !20927

35:                                               ; preds = %23, %33
  br label %36, !dbg !20927

36:                                               ; preds = %35, %40
  %37 = phi i32 [ %43, %40 ], [ 0, %35 ]
  call void @llvm.dbg.value(metadata i32 %37, metadata !20882, metadata !DIExpression()), !dbg !20885
  %38 = call i32 @hal_sd_read_blocks_dma_blocking(i32 noundef 0, i32* noundef getelementptr inbounds ([512 x i32], [512 x i32]* @sd_read_mutil_buffer, i32 0, i32 0), i32 noundef 80, i32 noundef 1) #22, !dbg !20928
  %39 = icmp eq i32 %38, 0, !dbg !20931
  br i1 %39, label %48, label %40, !dbg !20932

40:                                               ; preds = %36
  %41 = call i32 @hal_sd_init(i32 noundef 0, %struct.hal_cache_region_config_t* noundef nonnull %2) #22, !dbg !20933
  %42 = icmp ne i32 %41, 0, !dbg !20936
  call void @llvm.dbg.value(metadata i32 %37, metadata !20882, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !20885
  %43 = add nuw nsw i32 %37, 1
  %44 = icmp eq i32 %43, 3
  %45 = select i1 %42, i1 true, i1 %44, !dbg !20937
  call void @llvm.dbg.value(metadata i32 %37, metadata !20882, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !20885
  br i1 %45, label %46, label %36, !dbg !20937, !llvm.loop !20938

46:                                               ; preds = %40
  %47 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.5.399, i32 0, i32 0)) #22, !dbg !20885
  br label %48, !dbg !20940

48:                                               ; preds = %36, %46
  br label %52, !dbg !20940

49:                                               ; preds = %52
  %50 = add nuw nsw i32 %53, 1, !dbg !20942
  call void @llvm.dbg.value(metadata i32 %53, metadata !20881, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !20885
  %51 = icmp eq i32 %50, 128, !dbg !20944
  br i1 %51, label %57, label %52, !dbg !20940, !llvm.loop !20945

52:                                               ; preds = %48, %49
  %53 = phi i32 [ %50, %49 ], [ 0, %48 ]
  call void @llvm.dbg.value(metadata i32 %53, metadata !20881, metadata !DIExpression()), !dbg !20885
  %54 = getelementptr inbounds [512 x i32], [512 x i32]* @sd_read_mutil_buffer, i32 0, i32 %53, !dbg !20947
  %55 = load i32, i32* %54, align 4, !dbg !20947
  %56 = icmp eq i32 %55, -1515870811, !dbg !20950
  call void @llvm.dbg.value(metadata i32 %53, metadata !20881, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !20885
  br i1 %56, label %49, label %59, !dbg !20951

57:                                               ; preds = %49
  %58 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.8.400, i32 0, i32 0)) #22, !dbg !20952
  br label %59, !dbg !20953

59:                                               ; preds = %52, %57
  %60 = phi i8* [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7.401, i32 0, i32 0), %57 ], [ getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6.402, i32 0, i32 0), %52 ]
  %61 = phi i8* [ getelementptr inbounds ([31 x i8], [31 x i8]* @.str.9.403, i32 0, i32 0), %57 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7.401, i32 0, i32 0), %52 ]
  %62 = call i32 (i8*, ...) @printf(i8* noundef %60) #22, !dbg !20885
  br label %63, !dbg !20885

63:                                               ; preds = %11, %59
  %64 = phi i8* [ %61, %59 ], [ getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3.404, i32 0, i32 0), %11 ]
  %65 = call i32 (i8*, ...) @printf(i8* noundef %64) #22, !dbg !20885
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #24, !dbg !20953
  ret void, !dbg !20953
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @plain_log_uart_init() unnamed_addr #0 !dbg !20954 {
  %1 = alloca %struct.hal_uart_config_t, align 4
  %2 = bitcast %struct.hal_uart_config_t* %1 to i8*, !dbg !20964
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #24, !dbg !20964
  call void @llvm.dbg.declare(metadata %struct.hal_uart_config_t* %1, metadata !20956, metadata !DIExpression()), !dbg !20965
  %3 = tail call i32 @hal_gpio_init(i32 noundef 0) #22, !dbg !20966
  %4 = tail call i32 @hal_gpio_init(i32 noundef 1) #22, !dbg !20967
  %5 = tail call i32 @hal_pinmux_set_function(i32 noundef 0, i8 noundef zeroext 3) #22, !dbg !20968
  %6 = tail call i32 @hal_pinmux_set_function(i32 noundef 1, i8 noundef zeroext 3) #22, !dbg !20969
  %7 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 0, !dbg !20970
  store i32 9, i32* %7, align 4, !dbg !20971
  %8 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 1, !dbg !20972
  store i32 3, i32* %8, align 4, !dbg !20973
  %9 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 2, !dbg !20974
  store i32 0, i32* %9, align 4, !dbg !20975
  %10 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 3, !dbg !20976
  store i32 0, i32* %10, align 4, !dbg !20977
  %11 = call i32 @hal_uart_init(i32 noundef 2, %struct.hal_uart_config_t* noundef nonnull %1) #22, !dbg !20978
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #24, !dbg !20979
  ret void, !dbg !20979
}

; Function Attrs: optsize
declare dso_local i32 @hal_clock_init() local_unnamed_addr #5

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_close(i32 noundef %0) local_unnamed_addr #10 !dbg !20980 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !20982, metadata !DIExpression()), !dbg !20983
  ret i32 0, !dbg !20984
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_fstat(i32 noundef %0, %struct.stat* nocapture noundef readnone %1) local_unnamed_addr #10 !dbg !20985 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !21035, metadata !DIExpression()), !dbg !21037
  call void @llvm.dbg.value(metadata %struct.stat* %1, metadata !21036, metadata !DIExpression()), !dbg !21037
  ret i32 0, !dbg !21038
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_isatty(i32 noundef %0) local_unnamed_addr #10 !dbg !21039 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !21041, metadata !DIExpression()), !dbg !21042
  ret i32 1, !dbg !21043
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_lseek(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #10 !dbg !21044 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !21048, metadata !DIExpression()), !dbg !21051
  call void @llvm.dbg.value(metadata i32 %1, metadata !21049, metadata !DIExpression()), !dbg !21051
  call void @llvm.dbg.value(metadata i32 %2, metadata !21050, metadata !DIExpression()), !dbg !21051
  ret i32 0, !dbg !21052
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_open(i8* nocapture noundef readnone %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #10 !dbg !21053 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !21057, metadata !DIExpression()), !dbg !21060
  call void @llvm.dbg.value(metadata i32 %1, metadata !21058, metadata !DIExpression()), !dbg !21060
  call void @llvm.dbg.value(metadata i32 %2, metadata !21059, metadata !DIExpression()), !dbg !21060
  ret i32 -1, !dbg !21061
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_read(i32 noundef %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #10 !dbg !21062 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !21066, metadata !DIExpression()), !dbg !21069
  call void @llvm.dbg.value(metadata i8* %1, metadata !21067, metadata !DIExpression()), !dbg !21069
  call void @llvm.dbg.value(metadata i32 %2, metadata !21068, metadata !DIExpression()), !dbg !21069
  ret i32 0, !dbg !21070
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_getpid() local_unnamed_addr #10 !dbg !21071 {
  ret i32 1, !dbg !21072
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_kill(i32 noundef %0, i32 noundef %1) local_unnamed_addr #10 !dbg !21073 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !21077, metadata !DIExpression()), !dbg !21079
  call void @llvm.dbg.value(metadata i32 %1, metadata !21078, metadata !DIExpression()), !dbg !21079
  ret i32 -1, !dbg !21080
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_exit(i32 noundef %0) local_unnamed_addr #10 !dbg !21081 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !21083, metadata !DIExpression()), !dbg !21084
  ret i32 -1, !dbg !21085
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @_sbrk_r(%struct._reent* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #0 !dbg !3748 {
  call void @llvm.dbg.value(metadata %struct._reent* %0, metadata !3943, metadata !DIExpression()), !dbg !21086
  call void @llvm.dbg.value(metadata i32 %1, metadata !3944, metadata !DIExpression()), !dbg !21086
  %3 = tail call i8* asm sideeffect "MRS $0, msp\0A", "=r"() #24, !dbg !21087, !srcloc !21088
  call void @llvm.dbg.value(metadata i8* %3, metadata !3946, metadata !DIExpression()), !dbg !21086
  %4 = load i8*, i8** @_sbrk_r.heap_end, align 4, !dbg !21089
  %5 = icmp eq i8* %4, null, !dbg !21091
  %6 = select i1 %5, i8* @end, i8* %4, !dbg !21092
  call void @llvm.dbg.value(metadata i8* %6, metadata !3945, metadata !DIExpression()), !dbg !21086
  %7 = getelementptr inbounds i8, i8* %6, i32 %1, !dbg !21093
  %8 = icmp ult i8* %3, %7, !dbg !21095
  %9 = xor i1 %8, true, !dbg !21096
  %10 = or i1 %5, %9, !dbg !21096
  br i1 %10, label %11, label %13, !dbg !21096

11:                                               ; preds = %2
  %12 = select i1 %8, i8* %6, i8* %7, !dbg !21097
  store i8* %12, i8** @_sbrk_r.heap_end, align 4, !dbg !21096
  br label %13, !dbg !21096

13:                                               ; preds = %2, %11
  %14 = select i1 %8, i8* inttoptr (i32 -1 to i8*), i8* %6, !dbg !21097
  ret i8* %14, !dbg !21096
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @_write(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef returned %2) local_unnamed_addr #0 !dbg !21098 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !21100, metadata !DIExpression()), !dbg !21104
  call void @llvm.dbg.value(metadata i8* %1, metadata !21101, metadata !DIExpression()), !dbg !21104
  call void @llvm.dbg.value(metadata i32 %2, metadata !21102, metadata !DIExpression()), !dbg !21104
  call void @llvm.dbg.value(metadata i32 0, metadata !21103, metadata !DIExpression()), !dbg !21104
  %4 = icmp sgt i32 %2, 0, !dbg !21105
  br i1 %4, label %5, label %14, !dbg !21108

5:                                                ; preds = %3, %5
  %6 = phi i32 [ %12, %5 ], [ 0, %3 ]
  %7 = phi i8* [ %8, %5 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !21103, metadata !DIExpression()), !dbg !21104
  call void @llvm.dbg.value(metadata i8* %7, metadata !21101, metadata !DIExpression()), !dbg !21104
  %8 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !21109
  call void @llvm.dbg.value(metadata i8* %8, metadata !21101, metadata !DIExpression()), !dbg !21104
  %9 = load i8, i8* %7, align 1, !dbg !21111
  %10 = zext i8 %9 to i32, !dbg !21111
  %11 = tail call i32 @__io_putchar(i32 noundef %10) #22, !dbg !21112
  %12 = add nuw nsw i32 %6, 1, !dbg !21113
  call void @llvm.dbg.value(metadata i32 %12, metadata !21103, metadata !DIExpression()), !dbg !21104
  %13 = icmp eq i32 %12, %2, !dbg !21105
  br i1 %13, label %14, label %5, !dbg !21108, !llvm.loop !21114

14:                                               ; preds = %5, %3
  ret i32 %2, !dbg !21116
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @SysTick_Set(i32 noundef %0) local_unnamed_addr #2 !dbg !21117 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !21119, metadata !DIExpression()), !dbg !21121
  %2 = add i32 %0, -1, !dbg !21122
  %3 = icmp ugt i32 %2, 16777215, !dbg !21124
  br i1 %3, label %8, label %4, !dbg !21125

4:                                                ; preds = %1
  %5 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !21126
  call void @llvm.dbg.value(metadata i32 %5, metadata !21120, metadata !DIExpression()), !dbg !21121
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !21127
  %7 = and i32 %6, -4, !dbg !21127
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !21127
  store volatile i32 %2, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !21128
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !21129
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !21130
  br label %8, !dbg !21131

8:                                                ; preds = %1, %4
  %9 = phi i32 [ 0, %4 ], [ 1, %1 ], !dbg !21121
  ret i32 %9, !dbg !21132
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SysInitStatus_Set() local_unnamed_addr #2 !dbg !21133 {
  store volatile i32 1, i32* @System_Initialize_Done, align 4, !dbg !21134
  ret void, !dbg !21135
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @SysInitStatus_Query() local_unnamed_addr #11 !dbg !21136 {
  %1 = load volatile i32, i32* @System_Initialize_Done, align 4, !dbg !21137
  ret i32 %1, !dbg !21138
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #11 !dbg !21139 {
  %1 = load volatile i32, i32* inttoptr (i32 -1576992508 to i32*), align 4, !dbg !21142
  %2 = lshr i32 %1, 3, !dbg !21143
  %3 = and i32 %2, 15, !dbg !21143
  call void @llvm.dbg.value(metadata i32 %3, metadata !21141, metadata !DIExpression()), !dbg !21144
  switch i32 %3, label %6 [
    i32 8, label %5
    i32 6, label %5
    i32 2, label %4
    i32 3, label %4
    i32 4, label %4
    i32 5, label %9
    i32 7, label %9
  ], !dbg !21145

4:                                                ; preds = %0, %0, %0
  br label %6, !dbg !21146

5:                                                ; preds = %0, %0
  br label %9, !dbg !21148

6:                                                ; preds = %0, %4
  %7 = phi i32 [ 104000000, %4 ], [ 26000000, %0 ]
  store i32 %7, i32* @SystemCoreClock, align 4, !dbg !21149
  %8 = load volatile i32, i32* inttoptr (i32 -1576665024 to i32*), align 64, !dbg !21150
  br label %15, !dbg !21152

9:                                                ; preds = %0, %0, %5
  %10 = phi i32 [ 156000000, %5 ], [ 208000000, %0 ], [ 208000000, %0 ]
  store i32 %10, i32* @SystemCoreClock, align 4, !dbg !21149
  %11 = load volatile i32, i32* inttoptr (i32 -1576665024 to i32*), align 64, !dbg !21150
  %12 = and i32 %11, 1024, !dbg !21153
  %13 = icmp eq i32 %12, 0, !dbg !21153
  br i1 %13, label %15, label %14, !dbg !21152

14:                                               ; preds = %9
  store i32 104000000, i32* @SystemCoreClock, align 4, !dbg !21154
  br label %15, !dbg !21156

15:                                               ; preds = %6, %14, %9
  ret void, !dbg !21157
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SystemInit() local_unnamed_addr #2 !dbg !21158 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !21159
  %2 = or i32 %1, 15728640, !dbg !21159
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !21159
  store volatile i32 0, i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !21160
  %3 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !21161
  %4 = or i32 %3, 458752, !dbg !21161
  store volatile i32 %4, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !21161
  ret void, !dbg !21162
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @CachePreInit() local_unnamed_addr #2 !dbg !21163 {
  store volatile i32 0, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !21164
  store volatile i32 19, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !21165
  store volatile i32 3, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !21166
  store volatile i32 134283520, i32* inttoptr (i32 -1601634304 to i32*), align 65536, !dbg !21167
  store volatile i32 138280960, i32* inttoptr (i32 -1601634240 to i32*), align 64, !dbg !21168
  store volatile i32 1, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !21169
  store volatile i32 781, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !21170
  ret void, !dbg !21171
}

attributes #0 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #1 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #2 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #3 = { noreturn optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #5 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #6 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #7 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #8 = { argmemonly nofree nosync nounwind willreturn }
attributes #9 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #10 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #11 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #12 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #13 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #14 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #15 = { argmemonly nofree nounwind willreturn writeonly }
attributes #16 = { argmemonly nofree nounwind willreturn }
attributes #17 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #18 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #19 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #20 = { nofree nosync nounwind willreturn }
attributes #21 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #22 = { nobuiltin nounwind optsize "no-builtins" }
attributes #23 = { nobuiltin optsize "no-builtins" }
attributes #24 = { nounwind }
attributes #25 = { nobuiltin noreturn nounwind optsize "no-builtins" }

!llvm.dbg.cu = !{!2, !94, !170, !391, !633, !909, !4071, !1077, !1164, !4075, !1283, !4094, !1371, !1636, !1998, !2218, !2289, !2609, !4140, !2696, !2705, !3063, !3124, !3199, !4142, !4178, !3399, !3476, !3642, !3724, !3736, !3938, !3949, !4059}
!llvm.ident = !{!4180, !4180, !4180, !4180, !4180, !4180, !4180, !4180, !4180, !4180, !4180, !4180, !4180, !4180, !4180, !4180, !4180, !4180, !4180, !4180, !4180, !4180, !4180, !4180, !4180, !4180, !4180, !4180, !4180, !4180, !4180, !4180, !4180, !4180}
!llvm.module.flags = !{!4181, !4182, !4183, !4184, !4185, !4186, !4187, !4188, !4189}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "g_cache_status", scope: !2, file: !3, line: 51, type: !90, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !53, globals: !89, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_cache.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sd_read_write_data_dma/GCC")
!4 = !{!5, !17, !37, !44}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 163, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "../../../../../driver/chip/inc/hal_cache.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sd_read_write_data_dma/GCC")
!7 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16}
!9 = !DIEnumerator(name: "HAL_CACHE_STATUS_INVALID_PARAMETER", value: -7)
!10 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_BUSY", value: -6)
!11 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_CACHE_SIZE", value: -5)
!12 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_REGION", value: -4)
!13 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_REGION_ADDRESS", value: -3)
!14 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_REGION_SIZE", value: -2)
!15 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR", value: -1)
!16 = !DIEnumerator(name: "HAL_CACHE_STATUS_OK", value: 0)
!17 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 186, baseType: !18, size: 32, elements: !19)
!18 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!19 = !{!20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36}
!20 = !DIEnumerator(name: "HAL_CACHE_REGION_0", value: 0)
!21 = !DIEnumerator(name: "HAL_CACHE_REGION_1", value: 1)
!22 = !DIEnumerator(name: "HAL_CACHE_REGION_2", value: 2)
!23 = !DIEnumerator(name: "HAL_CACHE_REGION_3", value: 3)
!24 = !DIEnumerator(name: "HAL_CACHE_REGION_4", value: 4)
!25 = !DIEnumerator(name: "HAL_CACHE_REGION_5", value: 5)
!26 = !DIEnumerator(name: "HAL_CACHE_REGION_6", value: 6)
!27 = !DIEnumerator(name: "HAL_CACHE_REGION_7", value: 7)
!28 = !DIEnumerator(name: "HAL_CACHE_REGION_8", value: 8)
!29 = !DIEnumerator(name: "HAL_CACHE_REGION_9", value: 9)
!30 = !DIEnumerator(name: "HAL_CACHE_REGION_10", value: 10)
!31 = !DIEnumerator(name: "HAL_CACHE_REGION_11", value: 11)
!32 = !DIEnumerator(name: "HAL_CACHE_REGION_12", value: 12)
!33 = !DIEnumerator(name: "HAL_CACHE_REGION_13", value: 13)
!34 = !DIEnumerator(name: "HAL_CACHE_REGION_14", value: 14)
!35 = !DIEnumerator(name: "HAL_CACHE_REGION_15", value: 15)
!36 = !DIEnumerator(name: "HAL_CACHE_REGION_MAX", value: 16)
!37 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 176, baseType: !18, size: 32, elements: !38)
!38 = !{!39, !40, !41, !42, !43}
!39 = !DIEnumerator(name: "HAL_CACHE_SIZE_0KB", value: 0)
!40 = !DIEnumerator(name: "HAL_CACHE_SIZE_8KB", value: 1)
!41 = !DIEnumerator(name: "HAL_CACHE_SIZE_16KB", value: 2)
!42 = !DIEnumerator(name: "HAL_CACHE_SIZE_32KB", value: 3)
!43 = !DIEnumerator(name: "HAL_CACHE_SIZE_MAX", value: 4)
!44 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !45, line: 98, baseType: !18, size: 32, elements: !46)
!45 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_cache_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sd_read_write_data_dma/GCC")
!46 = !{!47, !48, !49, !50, !51, !52}
!47 = !DIEnumerator(name: "CACHE_INVALIDATE_ALL_LINES", value: 1)
!48 = !DIEnumerator(name: "CACHE_INVALIDATE_ONE_LINE_BY_ADDRESS", value: 2)
!49 = !DIEnumerator(name: "CACHE_INVALIDATE_ONE_LINE_BY_SET_WAY", value: 4)
!50 = !DIEnumerator(name: "CACHE_FLUSH_ALL_LINES", value: 9)
!51 = !DIEnumerator(name: "CACHE_FLUSH_ONE_LINE_BY_ADDRESS", value: 10)
!52 = !DIEnumerator(name: "CACHE_FLUSH_ONE_LINE_BY_SET_WAY", value: 12)
!53 = !{!54, !88}
!54 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !55, size: 32)
!55 = !DIDerivedType(tag: DW_TAG_typedef, name: "CACHE_REGISTER_T", file: !56, line: 276, baseType: !57)
!56 = !DIFile(filename: "../../../../../driver/CMSIS/Device/MTK/mt2523/Include/mt2523.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sd_read_write_data_dma/GCC")
!57 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 260, size: 525312, elements: !58)
!58 = !{!59, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !78, !79, !83, !87}
!59 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CON", scope: !57, file: !56, line: 261, baseType: !60, size: 32)
!60 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !61)
!61 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !62, line: 48, baseType: !63)
!62 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_stdint.h", directory: "/home/mjshen/RTOSExploration")
!63 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !64, line: 79, baseType: !18)
!64 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/machine/_default_types.h", directory: "/home/mjshen/RTOSExploration")
!65 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_OP", scope: !57, file: !56, line: 262, baseType: !60, size: 32, offset: 32)
!66 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0L", scope: !57, file: !56, line: 263, baseType: !60, size: 32, offset: 64)
!67 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0U", scope: !57, file: !56, line: 264, baseType: !60, size: 32, offset: 96)
!68 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0L", scope: !57, file: !56, line: 265, baseType: !60, size: 32, offset: 128)
!69 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0U", scope: !57, file: !56, line: 266, baseType: !60, size: 32, offset: 160)
!70 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1L", scope: !57, file: !56, line: 267, baseType: !60, size: 32, offset: 192)
!71 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1U", scope: !57, file: !56, line: 268, baseType: !60, size: 32, offset: 224)
!72 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1L", scope: !57, file: !56, line: 269, baseType: !60, size: 32, offset: 256)
!73 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1U", scope: !57, file: !56, line: 270, baseType: !60, size: 32, offset: 288)
!74 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !57, file: !56, line: 271, baseType: !75, size: 32, offset: 320)
!75 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 32, elements: !76)
!76 = !{!77}
!77 = !DISubrange(count: 1)
!78 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_REGION_EN", scope: !57, file: !56, line: 272, baseType: !60, size: 32, offset: 352)
!79 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !57, file: !56, line: 273, baseType: !80, size: 523904, offset: 384)
!80 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 523904, elements: !81)
!81 = !{!82}
!82 = !DISubrange(count: 16372)
!83 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_ENTRY_N", scope: !57, file: !56, line: 274, baseType: !84, size: 512, offset: 524288)
!84 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 512, elements: !85)
!85 = !{!86}
!86 = !DISubrange(count: 16)
!87 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_END_ENTRY_N", scope: !57, file: !56, line: 275, baseType: !84, size: 512, offset: 524800)
!88 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!89 = !{!0}
!90 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !91)
!91 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!92 = !DIGlobalVariableExpression(var: !93, expr: !DIExpression())
!93 = distinct !DIGlobalVariable(name: "gpt_lock_sleep_name", scope: !94, file: !95, line: 46, type: !164, isLocal: true, isDefinition: true)
!94 = distinct !DICompileUnit(language: DW_LANG_C99, file: !95, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !96, retainedTypes: !150, globals: !155, splitDebugInlining: false, nameTableKind: None)
!95 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_gpt.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sd_read_write_data_dma/GCC")
!96 = !{!97, !105, !115, !119, !123, !142, !146}
!97 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 387, baseType: !7, size: 32, elements: !99)
!98 = !DIFile(filename: "../../../../../driver/chip/inc/hal_gpt.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sd_read_write_data_dma/GCC")
!99 = !{!100, !101, !102, !103, !104}
!100 = !DIEnumerator(name: "HAL_GPT_STATUS_ERROR_PORT_USED", value: -4)
!101 = !DIEnumerator(name: "HAL_GPT_STATUS_ERROR", value: -3)
!102 = !DIEnumerator(name: "HAL_GPT_STATUS_ERROR_PORT", value: -2)
!103 = !DIEnumerator(name: "HAL_GPT_STATUS_INVALID_PARAMETER", value: -1)
!104 = !DIEnumerator(name: "HAL_GPT_STATUS_OK", value: 0)
!105 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !106, line: 846, baseType: !18, size: 32, elements: !107)
!106 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_platform.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sd_read_write_data_dma/GCC")
!107 = !{!108, !109, !110, !111, !112, !113, !114}
!108 = !DIEnumerator(name: "HAL_GPT_0", value: 0)
!109 = !DIEnumerator(name: "HAL_GPT_1", value: 1)
!110 = !DIEnumerator(name: "HAL_GPT_2", value: 2)
!111 = !DIEnumerator(name: "HAL_GPT_3", value: 3)
!112 = !DIEnumerator(name: "HAL_GPT_4", value: 4)
!113 = !DIEnumerator(name: "HAL_GPT_5", value: 5)
!114 = !DIEnumerator(name: "HAL_GPT_MAX_PORT", value: 6)
!115 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 397, baseType: !18, size: 32, elements: !116)
!116 = !{!117, !118}
!117 = !DIEnumerator(name: "HAL_GPT_STOPPED", value: 0)
!118 = !DIEnumerator(name: "HAL_GPT_RUNNING", value: 1)
!119 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !106, line: 857, baseType: !18, size: 32, elements: !120)
!120 = !{!121, !122}
!121 = !DIEnumerator(name: "HAL_GPT_CLOCK_SOURCE_32K", value: 0)
!122 = !DIEnumerator(name: "HAL_GPT_CLOCK_SOURCE_1M", value: 1)
!123 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !124, line: 87, baseType: !18, size: 32, elements: !125)
!124 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_gpt_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sd_read_write_data_dma/GCC")
!125 = !{!126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141}
!126 = !DIEnumerator(name: "GPT_DIVIDE_1", value: 0)
!127 = !DIEnumerator(name: "GPT_DIVIDE_2", value: 1)
!128 = !DIEnumerator(name: "GPT_DIVIDE_3", value: 2)
!129 = !DIEnumerator(name: "GPT_DIVIDE_4", value: 3)
!130 = !DIEnumerator(name: "GPT_DIVIDE_5", value: 4)
!131 = !DIEnumerator(name: "GPT_DIVIDE_6", value: 5)
!132 = !DIEnumerator(name: "GPT_DIVIDE_7", value: 6)
!133 = !DIEnumerator(name: "GPT_DIVIDE_8", value: 7)
!134 = !DIEnumerator(name: "GPT_DIVIDE_9", value: 8)
!135 = !DIEnumerator(name: "GPT_DIVIDE_10", value: 9)
!136 = !DIEnumerator(name: "GPT_DIVIDE_11", value: 10)
!137 = !DIEnumerator(name: "GPT_DIVIDE_12", value: 11)
!138 = !DIEnumerator(name: "GPT_DIVIDE_13", value: 12)
!139 = !DIEnumerator(name: "GPT_DIVIDE_16", value: 13)
!140 = !DIEnumerator(name: "GPT_DIVIDE_32", value: 14)
!141 = !DIEnumerator(name: "GPT_DIVIDE_64", value: 15)
!142 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 380, baseType: !18, size: 32, elements: !143)
!143 = !{!144, !145}
!144 = !DIEnumerator(name: "HAL_GPT_TIMER_TYPE_ONE_SHOT", value: 0)
!145 = !DIEnumerator(name: "HAL_GPT_TIMER_TYPE_REPEAT", value: 1)
!146 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !124, line: 82, baseType: !18, size: 32, elements: !147)
!147 = !{!148, !149}
!148 = !DIEnumerator(name: "GPT_CLOCK_UNGATE", value: 0)
!149 = !DIEnumerator(name: "GPT_CLOCK_GATE", value: 64)
!150 = !{!61, !88, !151}
!151 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_callback_t", file: !98, line: 371, baseType: !152)
!152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !153, size: 32)
!153 = !DISubroutineType(types: !154)
!154 = !{null, !88}
!155 = !{!156, !92}
!156 = !DIGlobalVariableExpression(var: !157, expr: !DIExpression())
!157 = distinct !DIGlobalVariable(name: "gpt_lock_sleep_handle", scope: !94, file: !95, line: 47, type: !158, isLocal: true, isDefinition: true)
!158 = !DICompositeType(tag: DW_TAG_array_type, baseType: !159, size: 48, elements: !162)
!159 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !62, line: 24, baseType: !160)
!160 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint8_t", file: !64, line: 43, baseType: !161)
!161 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!162 = !{!163}
!163 = !DISubrange(count: 6)
!164 = !DICompositeType(tag: DW_TAG_array_type, baseType: !165, size: 192, elements: !162)
!165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !166, size: 32)
!166 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !167)
!167 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!168 = !DIGlobalVariableExpression(var: !169, expr: !DIExpression())
!169 = distinct !DIGlobalVariable(name: "gp_gpt", scope: !170, file: !171, line: 48, type: !387, isLocal: false, isDefinition: true)
!170 = distinct !DICompileUnit(language: DW_LANG_C99, file: !171, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !172, retainedTypes: !315, globals: !330, splitDebugInlining: false, nameTableKind: None)
!171 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_gpt_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sd_read_write_data_dma/GCC")
!172 = !{!173, !146, !232, !238, !105, !142, !115}
!173 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !106, line: 1170, baseType: !18, size: 32, elements: !174)
!174 = !{!175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231}
!175 = !DIEnumerator(name: "HAL_CLOCK_CG_BT_26M", value: 9)
!176 = !DIEnumerator(name: "HAL_CLOCK_CG_CAMINF48M", value: 10)
!177 = !DIEnumerator(name: "HAL_CLOCK_CG_BT_BUSCK", value: 13)
!178 = !DIEnumerator(name: "HAL_CLOCK_CG_BT_N9", value: 15)
!179 = !DIEnumerator(name: "HAL_CLOCK_CG_BUS", value: 20)
!180 = !DIEnumerator(name: "HAL_CLOCK_CG_CM", value: 21)
!181 = !DIEnumerator(name: "HAL_CLOCK_CG_BSI", value: 23)
!182 = !DIEnumerator(name: "HAL_CLOCK_CG_SEJ", value: 32)
!183 = !DIEnumerator(name: "HAL_CLOCK_CG_DMA", value: 33)
!184 = !DIEnumerator(name: "HAL_CLOCK_CG_USB48M", value: 34)
!185 = !DIEnumerator(name: "HAL_CLOCK_CG_MSDC0", value: 35)
!186 = !DIEnumerator(name: "HAL_CLOCK_CG_I2C_D2D", value: 38)
!187 = !DIEnumerator(name: "HAL_CLOCK_CG_I2C2", value: 39)
!188 = !DIEnumerator(name: "HAL_CLOCK_CG_CM4_OSTIMER", value: 42)
!189 = !DIEnumerator(name: "HAL_CLOCK_CG_DMA_AO", value: 44)
!190 = !DIEnumerator(name: "HAL_CLOCK_CG_UART0", value: 45)
!191 = !DIEnumerator(name: "HAL_CLOCK_CG_UART1", value: 46)
!192 = !DIEnumerator(name: "HAL_CLOCK_CG_UART2", value: 47)
!193 = !DIEnumerator(name: "HAL_CLOCK_CG_UART3", value: 48)
!194 = !DIEnumerator(name: "HAL_CLOCK_CG_SPISLV", value: 51)
!195 = !DIEnumerator(name: "HAL_CLOCK_CG_SPI0", value: 52)
!196 = !DIEnumerator(name: "HAL_CLOCK_CG_SPI1", value: 53)
!197 = !DIEnumerator(name: "HAL_CLOCK_CG_SPI2", value: 54)
!198 = !DIEnumerator(name: "HAL_CLOCK_CG_SPI3", value: 55)
!199 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM0", value: 64)
!200 = !DIEnumerator(name: "HAL_CLOCK_CG_BTIF", value: 65)
!201 = !DIEnumerator(name: "HAL_CLOCK_CG_GPTIMER", value: 66)
!202 = !DIEnumerator(name: "HAL_CLOCK_CG_GPCOUNTER", value: 67)
!203 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM1", value: 68)
!204 = !DIEnumerator(name: "HAL_CLOCK_CG_EFUSE", value: 70)
!205 = !DIEnumerator(name: "HAL_CLOCK_CG_LPM", value: 71)
!206 = !DIEnumerator(name: "HAL_CLOCK_CG_CM_SYSROM", value: 72)
!207 = !DIEnumerator(name: "HAL_CLOCK_CG_SFC", value: 73)
!208 = !DIEnumerator(name: "HAL_CLOCK_CG_MSDC1", value: 74)
!209 = !DIEnumerator(name: "HAL_CLOCK_CG_USB_DMA", value: 76)
!210 = !DIEnumerator(name: "HAL_CLOCK_CG_USB_BUS", value: 77)
!211 = !DIEnumerator(name: "HAL_CLOCK_CG_DISP_PWM", value: 78)
!212 = !DIEnumerator(name: "HAL_CLOCK_CG_TRNG", value: 80)
!213 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM2", value: 83)
!214 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM3", value: 84)
!215 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM4", value: 85)
!216 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM5", value: 86)
!217 = !DIEnumerator(name: "HAL_CLOCK_CG_LCD", value: 96)
!218 = !DIEnumerator(name: "HAL_CLOCK_CG_RESEIZER", value: 97)
!219 = !DIEnumerator(name: "HAL_CLOCK_CG_ROTDMA", value: 98)
!220 = !DIEnumerator(name: "HAL_CLOCK_CG_CAM_BCLK", value: 99)
!221 = !DIEnumerator(name: "HAL_CLOCK_CG_PAD2CAM", value: 100)
!222 = !DIEnumerator(name: "HAL_CLOCK_CG_G2D", value: 101)
!223 = !DIEnumerator(name: "HAL_CLOCK_CG_MM_COLOR", value: 102)
!224 = !DIEnumerator(name: "HAL_CLOCK_CG_AAL", value: 103)
!225 = !DIEnumerator(name: "HAL_CLOCK_CG_DSI0", value: 104)
!226 = !DIEnumerator(name: "HAL_CLOCK_CG_LCD_APB", value: 105)
!227 = !DIEnumerator(name: "HAL_CLOCK_CG_AUXADC", value: 130)
!228 = !DIEnumerator(name: "HAL_CLOCK_CG_GPDAC", value: 134)
!229 = !DIEnumerator(name: "HAL_CLOCK_CG_SENSOR_DMA", value: 136)
!230 = !DIEnumerator(name: "HAL_CLOCK_CG_I2C1", value: 137)
!231 = !DIEnumerator(name: "HAL_CLOCK_CG_I2C0", value: 138)
!232 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !124, line: 75, baseType: !18, size: 32, elements: !233)
!233 = !{!234, !235, !236, !237}
!234 = !DIEnumerator(name: "GPT_MODE_ONE_SHOT", value: 0)
!235 = !DIEnumerator(name: "GPT_MODE_REPEAT", value: 16)
!236 = !DIEnumerator(name: "GPT_MODE_KEEP_GO", value: 32)
!237 = !DIEnumerator(name: "GPT_MODE_FREE_RUN", value: 48)
!238 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "IRQn", file: !56, line: 44, baseType: !7, size: 32, elements: !239)
!239 = !{!240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314}
!240 = !DIEnumerator(name: "Reset_IRQn", value: -15)
!241 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!242 = !DIEnumerator(name: "HardFault_IRQn", value: -13)
!243 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!244 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!245 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!246 = !DIEnumerator(name: "SVC_IRQn", value: -5)
!247 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!248 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!249 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!250 = !DIEnumerator(name: "OSTimer_IRQn", value: 0)
!251 = !DIEnumerator(name: "Reserved1_IRQn", value: 1)
!252 = !DIEnumerator(name: "MD_TOPSM_IRQn", value: 2)
!253 = !DIEnumerator(name: "CM4_TOPSM_IRQn", value: 3)
!254 = !DIEnumerator(name: "Reserved2_IRQn", value: 4)
!255 = !DIEnumerator(name: "Reserved3_IRQn", value: 5)
!256 = !DIEnumerator(name: "Reserved4_IRQn", value: 6)
!257 = !DIEnumerator(name: "Reserved5_IRQn", value: 7)
!258 = !DIEnumerator(name: "ACCDET_IRQn", value: 8)
!259 = !DIEnumerator(name: "RTC_IRQn", value: 9)
!260 = !DIEnumerator(name: "KP_IRQn", value: 10)
!261 = !DIEnumerator(name: "GPTimer_IRQn", value: 11)
!262 = !DIEnumerator(name: "EINT_IRQn", value: 12)
!263 = !DIEnumerator(name: "LCD_IRQn", value: 13)
!264 = !DIEnumerator(name: "LCD_AAL_IRQn", value: 14)
!265 = !DIEnumerator(name: "DSI_IRQn", value: 15)
!266 = !DIEnumerator(name: "RESIZE_IRQn", value: 16)
!267 = !DIEnumerator(name: "G2D_IRQn", value: 17)
!268 = !DIEnumerator(name: "CAM_IRQn", value: 18)
!269 = !DIEnumerator(name: "ROT_DMA_IRQn", value: 19)
!270 = !DIEnumerator(name: "SCAM_IRQn", value: 20)
!271 = !DIEnumerator(name: "DMA_IRQn", value: 21)
!272 = !DIEnumerator(name: "DMA_AO_IRQn", value: 22)
!273 = !DIEnumerator(name: "I2C_DUAL_IRQn", value: 23)
!274 = !DIEnumerator(name: "I2C0_IRQn", value: 24)
!275 = !DIEnumerator(name: "I2C1_IRQn", value: 25)
!276 = !DIEnumerator(name: "I2C2_IRQn", value: 26)
!277 = !DIEnumerator(name: "Reserved6_IRQn", value: 27)
!278 = !DIEnumerator(name: "GPCounter_IRQn", value: 28)
!279 = !DIEnumerator(name: "UART0_IRQn", value: 29)
!280 = !DIEnumerator(name: "UART1_IRQn", value: 30)
!281 = !DIEnumerator(name: "UART2_IRQn", value: 31)
!282 = !DIEnumerator(name: "UART3_IRQn", value: 32)
!283 = !DIEnumerator(name: "USB20_IRQn", value: 33)
!284 = !DIEnumerator(name: "MSDC0_IRQn", value: 34)
!285 = !DIEnumerator(name: "MSDC1_IRQn", value: 35)
!286 = !DIEnumerator(name: "Reserved7_IRQn", value: 36)
!287 = !DIEnumerator(name: "Reserved8_IRQn", value: 37)
!288 = !DIEnumerator(name: "SF_IRQn", value: 38)
!289 = !DIEnumerator(name: "DSP22CPU_IRQn", value: 39)
!290 = !DIEnumerator(name: "SensorDMA_IRQn", value: 40)
!291 = !DIEnumerator(name: "RGU_IRQn", value: 41)
!292 = !DIEnumerator(name: "SPI_SLV_IRQn", value: 42)
!293 = !DIEnumerator(name: "SPI_MST0_IRQn", value: 43)
!294 = !DIEnumerator(name: "SPI_MST1_IRQn", value: 44)
!295 = !DIEnumerator(name: "SPI_MST2_IRQn", value: 45)
!296 = !DIEnumerator(name: "SPI_MST3_IRQn", value: 46)
!297 = !DIEnumerator(name: "TRNG_IRQn", value: 47)
!298 = !DIEnumerator(name: "BT_TIMCON_IRQn", value: 48)
!299 = !DIEnumerator(name: "BTIF_IRQn", value: 49)
!300 = !DIEnumerator(name: "Reserved9_IRQn", value: 50)
!301 = !DIEnumerator(name: "Reserved10_IRQn", value: 51)
!302 = !DIEnumerator(name: "LISR0_IRQn", value: 52)
!303 = !DIEnumerator(name: "LISR1_IRQn", value: 53)
!304 = !DIEnumerator(name: "LISR2_IRQn", value: 54)
!305 = !DIEnumerator(name: "LISR3_IRQn", value: 55)
!306 = !DIEnumerator(name: "PSI_RISE_IRQn", value: 56)
!307 = !DIEnumerator(name: "PSI_FALL_IRQn", value: 57)
!308 = !DIEnumerator(name: "Reserved11_IRQn", value: 58)
!309 = !DIEnumerator(name: "Reserved12_IRQn", value: 59)
!310 = !DIEnumerator(name: "Reserved13_IRQn", value: 60)
!311 = !DIEnumerator(name: "Reserved14_IRQn", value: 61)
!312 = !DIEnumerator(name: "Reserved15_IRQn", value: 62)
!313 = !DIEnumerator(name: "Reserved16_IRQn", value: 63)
!314 = !DIEnumerator(name: "IRQ_NUMBER_MAX", value: 64)
!315 = !{!61, !316, !88}
!316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !317, size: 32)
!317 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPT_REGISTER_T", file: !56, line: 1272, baseType: !318)
!318 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1262, size: 288, elements: !319)
!319 = !{!320, !321, !322, !323, !325, !326, !327, !328, !329}
!320 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_CON", scope: !318, file: !56, line: 1263, baseType: !60, size: 32)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_CLK", scope: !318, file: !56, line: 1264, baseType: !60, size: 32, offset: 32)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQ_EN", scope: !318, file: !56, line: 1265, baseType: !60, size: 32, offset: 64)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQ_STA", scope: !318, file: !56, line: 1266, baseType: !324, size: 32, offset: 96)
!324 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !60)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQ_ACK", scope: !318, file: !56, line: 1267, baseType: !60, size: 32, offset: 128)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_COUNT", scope: !318, file: !56, line: 1268, baseType: !60, size: 32, offset: 160)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_COMPARE", scope: !318, file: !56, line: 1269, baseType: !60, size: 32, offset: 192)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_COUNTH", scope: !318, file: !56, line: 1270, baseType: !60, size: 32, offset: 224)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_COMPAREH", scope: !318, file: !56, line: 1271, baseType: !60, size: 32, offset: 256)
!330 = !{!168, !331, !340, !346, !362, !385}
!331 = !DIGlobalVariableExpression(var: !332, expr: !DIExpression())
!332 = distinct !DIGlobalVariable(name: "gp_gpt_glb", scope: !170, file: !171, line: 49, type: !333, isLocal: false, isDefinition: true)
!333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !334, size: 32)
!334 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPT_REGISTER_GLOABL_T", file: !56, line: 1260, baseType: !335)
!335 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1256, size: 96, elements: !336)
!336 = !{!337, !338, !339}
!337 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQSTA", scope: !335, file: !56, line: 1257, baseType: !324, size: 32)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQMSK0", scope: !335, file: !56, line: 1258, baseType: !60, size: 32, offset: 32)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQMSK1", scope: !335, file: !56, line: 1259, baseType: !60, size: 32, offset: 64)
!340 = !DIGlobalVariableExpression(var: !341, expr: !DIExpression())
!341 = distinct !DIGlobalVariable(name: "flag", scope: !342, file: !171, line: 88, type: !91, isLocal: true, isDefinition: true)
!342 = distinct !DISubprogram(name: "gpt_get_lfosc_clock", scope: !171, file: !171, line: 86, type: !343, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !170, retainedNodes: !345)
!343 = !DISubroutineType(types: !344)
!344 = !{null}
!345 = !{}
!346 = !DIGlobalVariableExpression(var: !347, expr: !DIExpression())
!347 = distinct !DIGlobalVariable(name: "g_gpt_context", scope: !170, file: !171, line: 51, type: !348, isLocal: false, isDefinition: true)
!348 = !DICompositeType(tag: DW_TAG_array_type, baseType: !349, size: 768, elements: !162)
!349 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpt_context_t", file: !124, line: 116, baseType: !350)
!350 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !124, line: 111, size: 128, elements: !351)
!351 = !{!352, !354, !360, !361}
!352 = !DIDerivedType(tag: DW_TAG_member, name: "running_status", scope: !350, file: !124, line: 112, baseType: !353, size: 32)
!353 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_running_status_t", file: !98, line: 400, baseType: !115)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "callback_context", scope: !350, file: !124, line: 113, baseType: !355, size: 64, offset: 32)
!355 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpt_callback_context_t", file: !124, line: 109, baseType: !356)
!356 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !124, line: 106, size: 64, elements: !357)
!357 = !{!358, !359}
!358 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !356, file: !124, line: 107, baseType: !151, size: 32)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !356, file: !124, line: 108, baseType: !88, size: 32, offset: 32)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "has_initilized", scope: !350, file: !124, line: 114, baseType: !91, size: 8, offset: 96)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "is_gpt_locked_sleep", scope: !350, file: !124, line: 115, baseType: !91, size: 8, offset: 104)
!362 = !DIGlobalVariableExpression(var: !363, expr: !DIExpression())
!363 = distinct !DIGlobalVariable(name: "gpt_sw_context", scope: !170, file: !171, line: 52, type: !364, isLocal: false, isDefinition: true)
!364 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpt_sw_context_t", file: !124, line: 134, baseType: !365)
!365 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !124, line: 125, size: 4256, elements: !366)
!366 = !{!367, !378, !379, !380, !381, !382, !383, !384}
!367 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !365, file: !124, line: 126, baseType: !368, size: 4096)
!368 = !DICompositeType(tag: DW_TAG_array_type, baseType: !369, size: 4096, elements: !376)
!369 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpt_sw_timer_t", file: !124, line: 123, baseType: !370)
!370 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !124, line: 118, size: 128, elements: !371)
!371 = !{!372, !373, !374, !375}
!372 = !DIDerivedType(tag: DW_TAG_member, name: "callback_context", scope: !370, file: !124, line: 119, baseType: !355, size: 64)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "time_out_ms", scope: !370, file: !124, line: 120, baseType: !61, size: 32, offset: 64)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "is_used", scope: !370, file: !124, line: 121, baseType: !91, size: 8, offset: 96)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "is_running", scope: !370, file: !124, line: 122, baseType: !91, size: 8, offset: 104)
!376 = !{!377}
!377 = !DISubrange(count: 32)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "absolute_time", scope: !365, file: !124, line: 127, baseType: !61, size: 32, offset: 4096)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "last_absolute_time", scope: !365, file: !124, line: 128, baseType: !61, size: 32, offset: 4128)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "used_timer_count", scope: !365, file: !124, line: 129, baseType: !61, size: 32, offset: 4160)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "running_timer_count", scope: !365, file: !124, line: 130, baseType: !61, size: 32, offset: 4192)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "is_first_init", scope: !365, file: !124, line: 131, baseType: !91, size: 8, offset: 4224)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "is_start_from_isr", scope: !365, file: !124, line: 132, baseType: !91, size: 8, offset: 4232)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "is_sw_gpt", scope: !365, file: !124, line: 133, baseType: !91, size: 8, offset: 4240)
!385 = !DIGlobalVariableExpression(var: !386, expr: !DIExpression())
!386 = distinct !DIGlobalVariable(name: "gpt_clock_source", scope: !170, file: !171, line: 53, type: !61, isLocal: false, isDefinition: true)
!387 = !DICompositeType(tag: DW_TAG_array_type, baseType: !316, size: 192, elements: !162)
!388 = !DIGlobalVariableExpression(var: !341, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!389 = !DIGlobalVariableExpression(var: !390, expr: !DIExpression())
!390 = distinct !DIGlobalVariable(name: "gdma", scope: !391, file: !392, line: 46, type: !616, isLocal: false, isDefinition: true)
!391 = distinct !DICompileUnit(language: DW_LANG_C99, file: !392, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !393, retainedTypes: !470, globals: !471, splitDebugInlining: false, nameTableKind: None)
!392 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_pdma_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sd_read_write_data_dma/GCC")
!393 = !{!394, !399, !404, !173, !411, !417, !238, !427, !432, !438, !442, !446, !452, !466}
!394 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !395, line: 201, baseType: !7, size: 32, elements: !396)
!395 = !DIFile(filename: "../../../../../driver/chip/inc/hal_gdma.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sd_read_write_data_dma/GCC")
!396 = !{!397, !398}
!397 = !DIEnumerator(name: "HAL_GDMA_EVENT_TRANSACTION_ERROR", value: -1)
!398 = !DIEnumerator(name: "HAL_GDMA_EVENT_TRANSACTION_SUCCESS", value: 0)
!399 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !400, line: 124, baseType: !18, size: 32, elements: !401)
!400 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_pdma_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sd_read_write_data_dma/GCC")
!401 = !{!402, !403}
!402 = !DIEnumerator(name: "DMA_PD", value: 0)
!403 = !DIEnumerator(name: "DMA_AO", value: 1)
!404 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !405, line: 101, baseType: !7, size: 32, elements: !406)
!405 = !DIFile(filename: "../../../../../driver/chip/inc/hal_clock.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sd_read_write_data_dma/GCC")
!406 = !{!407, !408, !409, !410}
!407 = !DIEnumerator(name: "HAL_CLOCK_STATUS_UNINITIALIZED", value: -3)
!408 = !DIEnumerator(name: "HAL_CLOCK_STATUS_INVALID_PARAMETER", value: -2)
!409 = !DIEnumerator(name: "HAL_CLOCK_STATUS_ERROR", value: -1)
!410 = !DIEnumerator(name: "HAL_CLOCK_STATUS_OK", value: 0)
!411 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !400, line: 166, baseType: !7, size: 32, elements: !412)
!412 = !{!413, !414, !415, !416}
!413 = !DIEnumerator(name: "PDMA_ERROR", value: -3)
!414 = !DIEnumerator(name: "PDMA_ERROR_CHANNEL", value: -2)
!415 = !DIEnumerator(name: "PDMA_INVALID_PARAMETER", value: -1)
!416 = !DIEnumerator(name: "PDMA_OK", value: 0)
!417 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !400, line: 137, baseType: !18, size: 32, elements: !418)
!418 = !{!419, !420, !421, !422, !423, !424, !425, !426}
!419 = !DIEnumerator(name: "PDMA_START_CHANNEL", value: 1)
!420 = !DIEnumerator(name: "PDMA_MSDC1", value: 1)
!421 = !DIEnumerator(name: "PDMA_MSDC2", value: 2)
!422 = !DIEnumerator(name: "PDMA_I2C0_TX", value: 3)
!423 = !DIEnumerator(name: "PDMA_I2C0_RX", value: 4)
!424 = !DIEnumerator(name: "PDMA_I2C1_TX", value: 5)
!425 = !DIEnumerator(name: "PDMA_I2C1_RX", value: 6)
!426 = !DIEnumerator(name: "PDMA_END_CHANNEL", value: 7)
!427 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !400, line: 151, baseType: !18, size: 32, elements: !428)
!428 = !{!429, !430, !431}
!429 = !DIEnumerator(name: "PDMA_BYTE", value: 0)
!430 = !DIEnumerator(name: "PDMA_HALF_WORD", value: 1)
!431 = !DIEnumerator(name: "PDMA_WORD", value: 2)
!432 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !400, line: 180, baseType: !18, size: 32, elements: !433)
!433 = !{!434, !435, !436, !437}
!434 = !DIEnumerator(name: "PDMA_TX", value: 0)
!435 = !DIEnumerator(name: "PDMA_RX", value: 1)
!436 = !DIEnumerator(name: "PDMA_TX_RINGBUFF", value: 2)
!437 = !DIEnumerator(name: "PDMA_RX_RINGBUFF", value: 3)
!438 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !400, line: 174, baseType: !18, size: 32, elements: !439)
!439 = !{!440, !441}
!440 = !DIEnumerator(name: "PDMA_IDLE", value: 0)
!441 = !DIEnumerator(name: "PDMA_BUSY", value: 1)
!442 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !400, line: 159, baseType: !7, size: 32, elements: !443)
!443 = !{!444, !445}
!444 = !DIEnumerator(name: "PDMA_EVENT_TRANSACTION_ERROR", value: -1)
!445 = !DIEnumerator(name: "PDMA_EVENT_TRANSACTION_SUCCESS", value: 0)
!446 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !400, line: 206, baseType: !7, size: 32, elements: !447)
!447 = !{!448, !449, !450, !451}
!448 = !DIEnumerator(name: "VDMA_ERROR", value: -3)
!449 = !DIEnumerator(name: "VDMA_ERROR_CHANNEL", value: -2)
!450 = !DIEnumerator(name: "VDMA_INVALID_PARAMETER", value: -1)
!451 = !DIEnumerator(name: "VDMA_OK", value: 0)
!452 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !400, line: 189, baseType: !18, size: 32, elements: !453)
!453 = !{!454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465}
!454 = !DIEnumerator(name: "VDMA_START_CHANNEL", value: 8)
!455 = !DIEnumerator(name: "VDMA_UART1TX", value: 8)
!456 = !DIEnumerator(name: "VDMA_UART1RX", value: 9)
!457 = !DIEnumerator(name: "VDMA_UART2TX", value: 10)
!458 = !DIEnumerator(name: "VDMA_UART2RX", value: 11)
!459 = !DIEnumerator(name: "VDMA_UART3TX", value: 12)
!460 = !DIEnumerator(name: "VDMA_UART3RX", value: 13)
!461 = !DIEnumerator(name: "VDMA_UART0TX", value: 14)
!462 = !DIEnumerator(name: "VDMA_UART0RX", value: 15)
!463 = !DIEnumerator(name: "VDMA_BTIFTX", value: 16)
!464 = !DIEnumerator(name: "VDMA_BTIFRX", value: 17)
!465 = !DIEnumerator(name: "VDMA_END_CHANNEL", value: 18)
!466 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !400, line: 222, baseType: !7, size: 32, elements: !467)
!467 = !{!468, !469}
!468 = !DIEnumerator(name: "VDMA_EVENT_TRANSACTION_ERROR", value: -1)
!469 = !DIEnumerator(name: "VDMA_EVENT_TRANSACTION_SUCCESS", value: 0)
!470 = !{!88}
!471 = !{!389, !472, !480, !498, !506, !508, !533, !541, !549, !552, !565, !589, !595, !603, !608}
!472 = !DIGlobalVariableExpression(var: !473, expr: !DIExpression())
!473 = distinct !DIGlobalVariable(name: "gdma_global", scope: !391, file: !392, line: 49, type: !474, isLocal: false, isDefinition: true)
!474 = !DICompositeType(tag: DW_TAG_array_type, baseType: !475, size: 32, elements: !76)
!475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !476, size: 32)
!476 = !DIDerivedType(tag: DW_TAG_typedef, name: "GDMA_REGISTER_GLOBAL_T", file: !56, line: 843, baseType: !477)
!477 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 841, size: 32, elements: !478)
!478 = !{!479}
!479 = !DIDerivedType(tag: DW_TAG_member, name: "GDMA_GLBSTA", scope: !477, file: !56, line: 842, baseType: !60, size: 32)
!480 = !DIGlobalVariableExpression(var: !481, expr: !DIExpression())
!481 = distinct !DIGlobalVariable(name: "pdma", scope: !391, file: !392, line: 52, type: !482, isLocal: false, isDefinition: true)
!482 = !DICompositeType(tag: DW_TAG_array_type, baseType: !483, size: 192, elements: !162)
!483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !484, size: 32)
!484 = !DIDerivedType(tag: DW_TAG_typedef, name: "PDMA_REGISTER_T", file: !56, line: 859, baseType: !485)
!485 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 848, size: 320, elements: !486)
!486 = !{!487, !488, !489, !490, !491, !492, !493, !494, !495, !497}
!487 = !DIDerivedType(tag: DW_TAG_member, name: "PDMA_WPPT", scope: !485, file: !56, line: 849, baseType: !60, size: 32)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "PDMA_WPTO", scope: !485, file: !56, line: 850, baseType: !60, size: 32, offset: 32)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "PDMA_COUNT", scope: !485, file: !56, line: 851, baseType: !60, size: 32, offset: 64)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "PDMA_CON", scope: !485, file: !56, line: 852, baseType: !60, size: 32, offset: 96)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "PDMA_START", scope: !485, file: !56, line: 853, baseType: !60, size: 32, offset: 128)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "PDMA_INTSTA", scope: !485, file: !56, line: 854, baseType: !60, size: 32, offset: 160)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "PDMA_ACKINT", scope: !485, file: !56, line: 855, baseType: !60, size: 32, offset: 192)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "PDMA_RLCT", scope: !485, file: !56, line: 856, baseType: !324, size: 32, offset: 224)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "DUMMY_OFFSET", scope: !485, file: !56, line: 857, baseType: !496, size: 32, offset: 256)
!496 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 32, elements: !76)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "PDMA_PGMADDR", scope: !485, file: !56, line: 858, baseType: !60, size: 32, offset: 288)
!498 = !DIGlobalVariableExpression(var: !499, expr: !DIExpression())
!499 = distinct !DIGlobalVariable(name: "pdma_global", scope: !391, file: !392, line: 55, type: !500, isLocal: false, isDefinition: true)
!500 = !DICompositeType(tag: DW_TAG_array_type, baseType: !501, size: 192, elements: !162)
!501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !502, size: 32)
!502 = !DIDerivedType(tag: DW_TAG_typedef, name: "PDMA_REGISTER_GLOBAL_T", file: !56, line: 865, baseType: !503)
!503 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 863, size: 32, elements: !504)
!504 = !{!505}
!505 = !DIDerivedType(tag: DW_TAG_member, name: "PDMA_GLBSTA", scope: !503, file: !56, line: 864, baseType: !60, size: 32)
!506 = !DIGlobalVariableExpression(var: !507, expr: !DIExpression())
!507 = distinct !DIGlobalVariable(name: "g_pdma_global_running_bit", scope: !391, file: !392, line: 58, type: !158, isLocal: false, isDefinition: true)
!508 = !DIGlobalVariableExpression(var: !509, expr: !DIExpression())
!509 = distinct !DIGlobalVariable(name: "vdma", scope: !391, file: !392, line: 64, type: !510, isLocal: false, isDefinition: true)
!510 = !DICompositeType(tag: DW_TAG_array_type, baseType: !511, size: 320, elements: !531)
!511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !512, size: 32)
!512 = !DIDerivedType(tag: DW_TAG_typedef, name: "VDMA_REGISTER_T", file: !56, line: 885, baseType: !513)
!513 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 870, size: 448, elements: !514)
!514 = !{!515, !516, !517, !518, !519, !520, !524, !525, !526, !527, !528, !529, !530}
!515 = !DIDerivedType(tag: DW_TAG_member, name: "VDMA_COUNT", scope: !513, file: !56, line: 871, baseType: !60, size: 32)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "VDMA_CON", scope: !513, file: !56, line: 872, baseType: !60, size: 32, offset: 32)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "VDMA_START", scope: !513, file: !56, line: 873, baseType: !60, size: 32, offset: 64)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "VDMA_INTSTA", scope: !513, file: !56, line: 874, baseType: !60, size: 32, offset: 96)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "VDMA_ACKINT", scope: !513, file: !56, line: 875, baseType: !60, size: 32, offset: 128)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "DUMMY_OFFSET", scope: !513, file: !56, line: 876, baseType: !521, size: 64, offset: 160)
!521 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 64, elements: !522)
!522 = !{!523}
!523 = !DISubrange(count: 2)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "VDMA_PGMADDR", scope: !513, file: !56, line: 877, baseType: !60, size: 32, offset: 224)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "VDMA_WRPTR", scope: !513, file: !56, line: 878, baseType: !324, size: 32, offset: 256)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "VDMA_RDPTR", scope: !513, file: !56, line: 879, baseType: !324, size: 32, offset: 288)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "VDMA_FFCNT", scope: !513, file: !56, line: 880, baseType: !324, size: 32, offset: 320)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "VDMA_FFSTA", scope: !513, file: !56, line: 881, baseType: !324, size: 32, offset: 352)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "VDMA_ALTLEN", scope: !513, file: !56, line: 882, baseType: !60, size: 32, offset: 384)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "VDMA_FFSIZE", scope: !513, file: !56, line: 883, baseType: !60, size: 32, offset: 416)
!531 = !{!532}
!532 = !DISubrange(count: 10)
!533 = !DIGlobalVariableExpression(var: !534, expr: !DIExpression())
!534 = distinct !DIGlobalVariable(name: "vdma_port", scope: !391, file: !392, line: 69, type: !535, isLocal: false, isDefinition: true)
!535 = !DICompositeType(tag: DW_TAG_array_type, baseType: !536, size: 320, elements: !531)
!536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !537, size: 32)
!537 = !DIDerivedType(tag: DW_TAG_typedef, name: "VDMA_REGISTER_PORT_T", file: !56, line: 891, baseType: !538)
!538 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 889, size: 32, elements: !539)
!539 = !{!540}
!540 = !DIDerivedType(tag: DW_TAG_member, name: "VDMA_PORT", scope: !538, file: !56, line: 890, baseType: !60, size: 32)
!541 = !DIGlobalVariableExpression(var: !542, expr: !DIExpression())
!542 = distinct !DIGlobalVariable(name: "vdma_global", scope: !391, file: !392, line: 75, type: !543, isLocal: false, isDefinition: true)
!543 = !DICompositeType(tag: DW_TAG_array_type, baseType: !544, size: 320, elements: !531)
!544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !545, size: 32)
!545 = !DIDerivedType(tag: DW_TAG_typedef, name: "VDMA_REGISTER_GLOBAL_T", file: !56, line: 898, baseType: !546)
!546 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 896, size: 32, elements: !547)
!547 = !{!548}
!548 = !DIDerivedType(tag: DW_TAG_member, name: "VDMA_GLBSTA", scope: !546, file: !56, line: 897, baseType: !60, size: 32)
!549 = !DIGlobalVariableExpression(var: !550, expr: !DIExpression())
!550 = distinct !DIGlobalVariable(name: "g_vdma_global_running_bit", scope: !391, file: !392, line: 80, type: !551, isLocal: false, isDefinition: true)
!551 = !DICompositeType(tag: DW_TAG_array_type, baseType: !159, size: 80, elements: !531)
!552 = !DIGlobalVariableExpression(var: !553, expr: !DIExpression())
!553 = distinct !DIGlobalVariable(name: "g_gdma_callback", scope: !391, file: !392, line: 92, type: !554, isLocal: false, isDefinition: true)
!554 = !DICompositeType(tag: DW_TAG_array_type, baseType: !555, size: 64, elements: !76)
!555 = !DIDerivedType(tag: DW_TAG_typedef, name: "gdma_user_callback_t", file: !392, line: 89, baseType: !556)
!556 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !392, line: 86, size: 64, elements: !557)
!557 = !{!558, !564}
!558 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !556, file: !392, line: 87, baseType: !559, size: 32)
!559 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gdma_callback_t", file: !395, line: 230, baseType: !560)
!560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !561, size: 32)
!561 = !DISubroutineType(types: !562)
!562 = !{null, !563, !88}
!563 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gdma_event_t", file: !395, line: 204, baseType: !394)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "argument", scope: !556, file: !392, line: 88, baseType: !88, size: 32, offset: 32)
!565 = !DIGlobalVariableExpression(var: !566, expr: !DIExpression())
!566 = distinct !DIGlobalVariable(name: "count", scope: !567, file: !392, line: 1122, type: !61, isLocal: true, isDefinition: true)
!567 = distinct !DISubprogram(name: "pd_domain_dma_interrupt_hander", scope: !392, file: !392, line: 1108, type: !568, scopeLine: 1110, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !391, retainedNodes: !572)
!568 = !DISubroutineType(types: !569)
!569 = !{null, !570}
!570 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_nvic_irq_t", file: !56, line: 125, baseType: !571)
!571 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !56, line: 123, baseType: !238)
!572 = !{!573, !574, !575, !576, !582, !588}
!573 = !DILocalVariable(name: "irq_number", arg: 1, scope: !567, file: !392, line: 1108, type: !570)
!574 = !DILocalVariable(name: "global_status", scope: !567, file: !392, line: 1113, type: !60)
!575 = !DILocalVariable(name: "gdma_callback", scope: !567, file: !392, line: 1116, type: !559)
!576 = !DILocalVariable(name: "pdma_callback", scope: !567, file: !392, line: 1117, type: !577)
!577 = !DIDerivedType(tag: DW_TAG_typedef, name: "pdma_callback_t", file: !400, line: 288, baseType: !578)
!578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !579, size: 32)
!579 = !DISubroutineType(types: !580)
!580 = !{null, !581, !88}
!581 = !DIDerivedType(tag: DW_TAG_typedef, name: "pdma_event_t", file: !400, line: 162, baseType: !442)
!582 = !DILocalVariable(name: "vdma_callback", scope: !567, file: !392, line: 1118, type: !583)
!583 = !DIDerivedType(tag: DW_TAG_typedef, name: "vdma_callback_t", file: !400, line: 291, baseType: !584)
!584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !585, size: 32)
!585 = !DISubroutineType(types: !586)
!586 = !{null, !587, !88}
!587 = !DIDerivedType(tag: DW_TAG_typedef, name: "vdma_event_t", file: !400, line: 225, baseType: !466)
!588 = !DILocalVariable(name: "argument", scope: !567, file: !392, line: 1119, type: !88)
!589 = !DIGlobalVariableExpression(var: !590, expr: !DIExpression())
!590 = distinct !DIGlobalVariable(name: "pdma_init_status", scope: !391, file: !392, line: 61, type: !591, isLocal: true, isDefinition: true)
!591 = !DICompositeType(tag: DW_TAG_array_type, baseType: !592, size: 56, elements: !593)
!592 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !159)
!593 = !{!594}
!594 = !DISubrange(count: 7)
!595 = !DIGlobalVariableExpression(var: !596, expr: !DIExpression())
!596 = distinct !DIGlobalVariable(name: "g_pdma_callback", scope: !391, file: !392, line: 104, type: !597, isLocal: true, isDefinition: true)
!597 = !DICompositeType(tag: DW_TAG_array_type, baseType: !598, size: 384, elements: !162)
!598 = !DIDerivedType(tag: DW_TAG_typedef, name: "pdma_user_callback_t", file: !392, line: 101, baseType: !599)
!599 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !392, line: 98, size: 64, elements: !600)
!600 = !{!601, !602}
!601 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !599, file: !392, line: 99, baseType: !577, size: 32)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "argument", scope: !599, file: !392, line: 100, baseType: !88, size: 32, offset: 32)
!603 = !DIGlobalVariableExpression(var: !604, expr: !DIExpression())
!604 = distinct !DIGlobalVariable(name: "vdma_init_status", scope: !391, file: !392, line: 83, type: !605, isLocal: true, isDefinition: true)
!605 = !DICompositeType(tag: DW_TAG_array_type, baseType: !592, size: 144, elements: !606)
!606 = !{!607}
!607 = !DISubrange(count: 18)
!608 = !DIGlobalVariableExpression(var: !609, expr: !DIExpression())
!609 = distinct !DIGlobalVariable(name: "g_vdma_callback", scope: !391, file: !392, line: 120, type: !610, isLocal: true, isDefinition: true)
!610 = !DICompositeType(tag: DW_TAG_array_type, baseType: !611, size: 640, elements: !531)
!611 = !DIDerivedType(tag: DW_TAG_typedef, name: "vdma_user_callback_t", file: !392, line: 117, baseType: !612)
!612 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !392, line: 114, size: 64, elements: !613)
!613 = !{!614, !615}
!614 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !612, file: !392, line: 115, baseType: !583, size: 32)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "argument", scope: !612, file: !392, line: 116, baseType: !88, size: 32, offset: 32)
!616 = !DICompositeType(tag: DW_TAG_array_type, baseType: !617, size: 32, elements: !76)
!617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !618, size: 32)
!618 = !DIDerivedType(tag: DW_TAG_typedef, name: "GDMA_REGISTER_T", file: !56, line: 837, baseType: !619)
!619 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 826, size: 320, elements: !620)
!620 = !{!621, !622, !623, !624, !625, !626, !627, !628, !629, !630}
!621 = !DIDerivedType(tag: DW_TAG_member, name: "GDMA_SRC", scope: !619, file: !56, line: 827, baseType: !60, size: 32)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "GDMA_DST", scope: !619, file: !56, line: 828, baseType: !60, size: 32, offset: 32)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "GDMA_WPPT", scope: !619, file: !56, line: 829, baseType: !60, size: 32, offset: 64)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "GDMA_WPTO", scope: !619, file: !56, line: 830, baseType: !60, size: 32, offset: 96)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "GDMA_COUNT", scope: !619, file: !56, line: 831, baseType: !60, size: 32, offset: 128)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "GDMA_CON", scope: !619, file: !56, line: 832, baseType: !60, size: 32, offset: 160)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "GDMA_START", scope: !619, file: !56, line: 833, baseType: !60, size: 32, offset: 192)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "GDMA_INTSTA", scope: !619, file: !56, line: 834, baseType: !60, size: 32, offset: 224)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "GDMA_ACKINT", scope: !619, file: !56, line: 835, baseType: !60, size: 32, offset: 256)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "GDMA_RLCT", scope: !619, file: !56, line: 836, baseType: !324, size: 32, offset: 288)
!631 = !DIGlobalVariableExpression(var: !632, expr: !DIExpression())
!632 = distinct !DIGlobalVariable(name: "gpio_register_base", scope: !633, file: !634, line: 64, type: !734, isLocal: false, isDefinition: true)
!633 = distinct !DICompileUnit(language: DW_LANG_C99, file: !634, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !635, retainedTypes: !729, globals: !733, splitDebugInlining: false, nameTableKind: None)
!634 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_gpio.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sd_read_write_data_dma/GCC")
!635 = !{!636, !688, !695, !699, !705, !709, !718, !723}
!636 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !106, line: 339, baseType: !18, size: 32, elements: !637)
!637 = !{!638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687}
!638 = !DIEnumerator(name: "HAL_GPIO_0", value: 0)
!639 = !DIEnumerator(name: "HAL_GPIO_1", value: 1)
!640 = !DIEnumerator(name: "HAL_GPIO_2", value: 2)
!641 = !DIEnumerator(name: "HAL_GPIO_3", value: 3)
!642 = !DIEnumerator(name: "HAL_GPIO_4", value: 4)
!643 = !DIEnumerator(name: "HAL_GPIO_5", value: 5)
!644 = !DIEnumerator(name: "HAL_GPIO_6", value: 6)
!645 = !DIEnumerator(name: "HAL_GPIO_7", value: 7)
!646 = !DIEnumerator(name: "HAL_GPIO_8", value: 8)
!647 = !DIEnumerator(name: "HAL_GPIO_9", value: 9)
!648 = !DIEnumerator(name: "HAL_GPIO_10", value: 10)
!649 = !DIEnumerator(name: "HAL_GPIO_11", value: 11)
!650 = !DIEnumerator(name: "HAL_GPIO_12", value: 12)
!651 = !DIEnumerator(name: "HAL_GPIO_13", value: 13)
!652 = !DIEnumerator(name: "HAL_GPIO_14", value: 14)
!653 = !DIEnumerator(name: "HAL_GPIO_15", value: 15)
!654 = !DIEnumerator(name: "HAL_GPIO_16", value: 16)
!655 = !DIEnumerator(name: "HAL_GPIO_17", value: 17)
!656 = !DIEnumerator(name: "HAL_GPIO_18", value: 18)
!657 = !DIEnumerator(name: "HAL_GPIO_19", value: 19)
!658 = !DIEnumerator(name: "HAL_GPIO_20", value: 20)
!659 = !DIEnumerator(name: "HAL_GPIO_21", value: 21)
!660 = !DIEnumerator(name: "HAL_GPIO_22", value: 22)
!661 = !DIEnumerator(name: "HAL_GPIO_23", value: 23)
!662 = !DIEnumerator(name: "HAL_GPIO_24", value: 24)
!663 = !DIEnumerator(name: "HAL_GPIO_25", value: 25)
!664 = !DIEnumerator(name: "HAL_GPIO_26", value: 26)
!665 = !DIEnumerator(name: "HAL_GPIO_27", value: 27)
!666 = !DIEnumerator(name: "HAL_GPIO_28", value: 28)
!667 = !DIEnumerator(name: "HAL_GPIO_29", value: 29)
!668 = !DIEnumerator(name: "HAL_GPIO_30", value: 30)
!669 = !DIEnumerator(name: "HAL_GPIO_31", value: 31)
!670 = !DIEnumerator(name: "HAL_GPIO_32", value: 32)
!671 = !DIEnumerator(name: "HAL_GPIO_33", value: 33)
!672 = !DIEnumerator(name: "HAL_GPIO_34", value: 34)
!673 = !DIEnumerator(name: "HAL_GPIO_35", value: 35)
!674 = !DIEnumerator(name: "HAL_GPIO_36", value: 36)
!675 = !DIEnumerator(name: "HAL_GPIO_37", value: 37)
!676 = !DIEnumerator(name: "HAL_GPIO_38", value: 38)
!677 = !DIEnumerator(name: "HAL_GPIO_39", value: 39)
!678 = !DIEnumerator(name: "HAL_GPIO_40", value: 40)
!679 = !DIEnumerator(name: "HAL_GPIO_41", value: 41)
!680 = !DIEnumerator(name: "HAL_GPIO_42", value: 42)
!681 = !DIEnumerator(name: "HAL_GPIO_43", value: 43)
!682 = !DIEnumerator(name: "HAL_GPIO_44", value: 44)
!683 = !DIEnumerator(name: "HAL_GPIO_45", value: 45)
!684 = !DIEnumerator(name: "HAL_GPIO_46", value: 46)
!685 = !DIEnumerator(name: "HAL_GPIO_47", value: 47)
!686 = !DIEnumerator(name: "HAL_GPIO_48", value: 48)
!687 = !DIEnumerator(name: "HAL_GPIO_MAX", value: 49)
!688 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !689, line: 224, baseType: !7, size: 32, elements: !690)
!689 = !DIFile(filename: "../../../../../driver/chip/inc/hal_gpio.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sd_read_write_data_dma/GCC")
!690 = !{!691, !692, !693, !694}
!691 = !DIEnumerator(name: "HAL_GPIO_STATUS_ERROR", value: -3)
!692 = !DIEnumerator(name: "HAL_GPIO_STATUS_ERROR_PIN", value: -2)
!693 = !DIEnumerator(name: "HAL_GPIO_STATUS_INVALID_PARAMETER", value: -1)
!694 = !DIEnumerator(name: "HAL_GPIO_STATUS_OK", value: 0)
!695 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !689, line: 210, baseType: !18, size: 32, elements: !696)
!696 = !{!697, !698}
!697 = !DIEnumerator(name: "HAL_GPIO_DIRECTION_INPUT", value: 0)
!698 = !DIEnumerator(name: "HAL_GPIO_DIRECTION_OUTPUT", value: 1)
!699 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !689, line: 233, baseType: !7, size: 32, elements: !700)
!700 = !{!701, !702, !703, !704}
!701 = !DIEnumerator(name: "HAL_PINMUX_STATUS_ERROR", value: -3)
!702 = !DIEnumerator(name: "HAL_PINMUX_STATUS_ERROR_PORT", value: -2)
!703 = !DIEnumerator(name: "HAL_PINMUX_STATUS_INVALID_FUNCTION", value: -1)
!704 = !DIEnumerator(name: "HAL_PINMUX_STATUS_OK", value: 0)
!705 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !689, line: 217, baseType: !18, size: 32, elements: !706)
!706 = !{!707, !708}
!707 = !DIEnumerator(name: "HAL_GPIO_DATA_LOW", value: 0)
!708 = !DIEnumerator(name: "HAL_GPIO_DATA_HIGH", value: 1)
!709 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !106, line: 415, baseType: !18, size: 32, elements: !710)
!710 = !{!711, !712, !713, !714, !715, !716, !717}
!711 = !DIEnumerator(name: "HAL_GPIO_CLOCK_0", value: 0)
!712 = !DIEnumerator(name: "HAL_GPIO_CLOCK_1", value: 1)
!713 = !DIEnumerator(name: "HAL_GPIO_CLOCK_2", value: 2)
!714 = !DIEnumerator(name: "HAL_GPIO_CLOCK_3", value: 3)
!715 = !DIEnumerator(name: "HAL_GPIO_CLOCK_4", value: 4)
!716 = !DIEnumerator(name: "HAL_GPIO_CLOCK_5", value: 5)
!717 = !DIEnumerator(name: "HAL_GPIO_CLOCK_MAX", value: 6)
!718 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !106, line: 427, baseType: !18, size: 32, elements: !719)
!719 = !{!720, !721, !722}
!720 = !DIEnumerator(name: "HAL_GPIO_CLOCK_MODE_26M", value: 1)
!721 = !DIEnumerator(name: "HAL_GPIO_CLOCK_MODE_32K", value: 4)
!722 = !DIEnumerator(name: "HAL_GPIO_CLOCK_MODE_MAX", value: 5)
!723 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !689, line: 242, baseType: !18, size: 32, elements: !724)
!724 = !{!725, !726, !727, !728}
!725 = !DIEnumerator(name: "HAL_GPIO_DRIVING_CURRENT_4MA", value: 0)
!726 = !DIEnumerator(name: "HAL_GPIO_DRIVING_CURRENT_8MA", value: 1)
!727 = !DIEnumerator(name: "HAL_GPIO_DRIVING_CURRENT_12MA", value: 2)
!728 = !DIEnumerator(name: "HAL_GPIO_DRIVING_CURRENT_16MA", value: 3)
!729 = !{!88, !730, !731, !732}
!730 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_direction_t", file: !689, line: 213, baseType: !695)
!731 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_data_t", file: !689, line: 220, baseType: !705)
!732 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_driving_current_t", file: !689, line: 247, baseType: !723)
!733 = !{!631}
!734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !735, size: 32)
!735 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_REGISTER_T", file: !56, line: 1554, baseType: !736)
!736 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1522, size: 29440, elements: !737)
!737 = !{!738, !750, !754, !763, !764, !773, !774, !783, !784, !794, !795, !804, !805, !814, !815, !824, !825, !834, !838, !847, !848, !857, !858, !867, !876, !877, !886, !890, !899, !900}
!738 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIR_REGISTER", scope: !736, file: !56, line: 1523, baseType: !739, size: 256)
!739 = !DICompositeType(tag: DW_TAG_array_type, baseType: !740, size: 256, elements: !522)
!740 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_DIR_REGISTER_T", file: !56, line: 1400, baseType: !741)
!741 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1395, size: 128, elements: !742)
!742 = !{!743, !744, !745, !746}
!743 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIR", scope: !741, file: !56, line: 1396, baseType: !60, size: 32)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIR_SET", scope: !741, file: !56, line: 1397, baseType: !60, size: 32, offset: 32)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIR_CLR", scope: !741, file: !56, line: 1398, baseType: !60, size: 32, offset: 64)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !741, file: !56, line: 1399, baseType: !747, size: 32, offset: 96)
!747 = !DICompositeType(tag: DW_TAG_array_type, baseType: !159, size: 32, elements: !748)
!748 = !{!749}
!749 = !DISubrange(count: 4)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET1", scope: !736, file: !56, line: 1524, baseType: !751, size: 1792, offset: 256)
!751 = !DICompositeType(tag: DW_TAG_array_type, baseType: !159, size: 1792, elements: !752)
!752 = !{!753}
!753 = !DISubrange(count: 224)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLEN_REGISTER", scope: !736, file: !56, line: 1525, baseType: !755, size: 256, offset: 2048)
!755 = !DICompositeType(tag: DW_TAG_array_type, baseType: !756, size: 256, elements: !522)
!756 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_PULLEN_REGISTER_T", file: !56, line: 1409, baseType: !757)
!757 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1404, size: 128, elements: !758)
!758 = !{!759, !760, !761, !762}
!759 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLEN", scope: !757, file: !56, line: 1405, baseType: !60, size: 32)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLEN_SET", scope: !757, file: !56, line: 1406, baseType: !60, size: 32, offset: 32)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLEN_CLR", scope: !757, file: !56, line: 1407, baseType: !60, size: 32, offset: 64)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !757, file: !56, line: 1408, baseType: !747, size: 32, offset: 96)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET2", scope: !736, file: !56, line: 1526, baseType: !751, size: 1792, offset: 2304)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DINV_REGISTER", scope: !736, file: !56, line: 1527, baseType: !765, size: 256, offset: 4096)
!765 = !DICompositeType(tag: DW_TAG_array_type, baseType: !766, size: 256, elements: !522)
!766 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_DINV_REGISTER_T", file: !56, line: 1417, baseType: !767)
!767 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1412, size: 128, elements: !768)
!768 = !{!769, !770, !771, !772}
!769 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DINV", scope: !767, file: !56, line: 1413, baseType: !60, size: 32)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DINV_SET", scope: !767, file: !56, line: 1414, baseType: !60, size: 32, offset: 32)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DINV_CLR", scope: !767, file: !56, line: 1415, baseType: !60, size: 32, offset: 64)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !767, file: !56, line: 1416, baseType: !747, size: 32, offset: 96)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET3", scope: !736, file: !56, line: 1528, baseType: !751, size: 1792, offset: 4352)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DOUT_REGISTER", scope: !736, file: !56, line: 1529, baseType: !775, size: 256, offset: 6144)
!775 = !DICompositeType(tag: DW_TAG_array_type, baseType: !776, size: 256, elements: !522)
!776 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_DOUT_REGISTER_T", file: !56, line: 1426, baseType: !777)
!777 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1421, size: 128, elements: !778)
!778 = !{!779, !780, !781, !782}
!779 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DOUT", scope: !777, file: !56, line: 1422, baseType: !60, size: 32)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DOUT_SET", scope: !777, file: !56, line: 1423, baseType: !60, size: 32, offset: 32)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DOUT_CLR", scope: !777, file: !56, line: 1424, baseType: !60, size: 32, offset: 64)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !777, file: !56, line: 1425, baseType: !747, size: 32, offset: 96)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET4", scope: !736, file: !56, line: 1530, baseType: !751, size: 1792, offset: 6400)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIN_REGISTER", scope: !736, file: !56, line: 1531, baseType: !785, size: 256, offset: 8192)
!785 = !DICompositeType(tag: DW_TAG_array_type, baseType: !786, size: 256, elements: !522)
!786 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_DIN_REGISTER_T", file: !56, line: 1432, baseType: !787)
!787 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1429, size: 128, elements: !788)
!788 = !{!789, !790}
!789 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIN", scope: !787, file: !56, line: 1430, baseType: !60, size: 32)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !787, file: !56, line: 1431, baseType: !791, size: 96, offset: 32)
!791 = !DICompositeType(tag: DW_TAG_array_type, baseType: !159, size: 96, elements: !792)
!792 = !{!793}
!793 = !DISubrange(count: 12)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET5", scope: !736, file: !56, line: 1532, baseType: !751, size: 1792, offset: 8448)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLSEL_REGISTER", scope: !736, file: !56, line: 1533, baseType: !796, size: 256, offset: 10240)
!796 = !DICompositeType(tag: DW_TAG_array_type, baseType: !797, size: 256, elements: !522)
!797 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_PULLSEL_REGISTER_T", file: !56, line: 1440, baseType: !798)
!798 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1435, size: 128, elements: !799)
!799 = !{!800, !801, !802, !803}
!800 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLSEL", scope: !798, file: !56, line: 1436, baseType: !60, size: 32)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLSEL_SET", scope: !798, file: !56, line: 1437, baseType: !60, size: 32, offset: 32)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLSEL_CLR", scope: !798, file: !56, line: 1438, baseType: !60, size: 32, offset: 64)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !798, file: !56, line: 1439, baseType: !747, size: 32, offset: 96)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET6", scope: !736, file: !56, line: 1534, baseType: !751, size: 1792, offset: 10496)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SMT_REGISTER", scope: !736, file: !56, line: 1535, baseType: !806, size: 256, offset: 12288)
!806 = !DICompositeType(tag: DW_TAG_array_type, baseType: !807, size: 256, elements: !522)
!807 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_SMT_REGISTER_T", file: !56, line: 1448, baseType: !808)
!808 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1443, size: 128, elements: !809)
!809 = !{!810, !811, !812, !813}
!810 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SMT", scope: !808, file: !56, line: 1444, baseType: !60, size: 32)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SMT_SET", scope: !808, file: !56, line: 1445, baseType: !60, size: 32, offset: 32)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SMT_CLR", scope: !808, file: !56, line: 1446, baseType: !60, size: 32, offset: 64)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !808, file: !56, line: 1447, baseType: !747, size: 32, offset: 96)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET7", scope: !736, file: !56, line: 1536, baseType: !751, size: 1792, offset: 12544)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SR_REGISTER", scope: !736, file: !56, line: 1537, baseType: !816, size: 256, offset: 14336)
!816 = !DICompositeType(tag: DW_TAG_array_type, baseType: !817, size: 256, elements: !522)
!817 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_SR_REGISTER_T", file: !56, line: 1455, baseType: !818)
!818 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1450, size: 128, elements: !819)
!819 = !{!820, !821, !822, !823}
!820 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SR", scope: !818, file: !56, line: 1451, baseType: !60, size: 32)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SR_SET", scope: !818, file: !56, line: 1452, baseType: !60, size: 32, offset: 32)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SR_CLR", scope: !818, file: !56, line: 1453, baseType: !60, size: 32, offset: 64)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !818, file: !56, line: 1454, baseType: !747, size: 32, offset: 96)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET8", scope: !736, file: !56, line: 1538, baseType: !751, size: 1792, offset: 14592)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DRV_REGISTER", scope: !736, file: !56, line: 1539, baseType: !826, size: 512, offset: 16384)
!826 = !DICompositeType(tag: DW_TAG_array_type, baseType: !827, size: 512, elements: !748)
!827 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_DRV_REGISTER_T", file: !56, line: 1463, baseType: !828)
!828 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1458, size: 128, elements: !829)
!829 = !{!830, !831, !832, !833}
!830 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DRV", scope: !828, file: !56, line: 1459, baseType: !60, size: 32)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DRV_SET", scope: !828, file: !56, line: 1460, baseType: !60, size: 32, offset: 32)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DRV_CLR", scope: !828, file: !56, line: 1461, baseType: !60, size: 32, offset: 64)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !828, file: !56, line: 1462, baseType: !747, size: 32, offset: 96)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET9", scope: !736, file: !56, line: 1540, baseType: !835, size: 1536, offset: 16896)
!835 = !DICompositeType(tag: DW_TAG_array_type, baseType: !159, size: 1536, elements: !836)
!836 = !{!837}
!837 = !DISubrange(count: 192)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_IES_REGISTER", scope: !736, file: !56, line: 1541, baseType: !839, size: 256, offset: 18432)
!839 = !DICompositeType(tag: DW_TAG_array_type, baseType: !840, size: 256, elements: !522)
!840 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_IES_REGISTER_T", file: !56, line: 1471, baseType: !841)
!841 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1466, size: 128, elements: !842)
!842 = !{!843, !844, !845, !846}
!843 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_IES", scope: !841, file: !56, line: 1467, baseType: !60, size: 32)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_IES_SET", scope: !841, file: !56, line: 1468, baseType: !60, size: 32, offset: 32)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_IES_CLR", scope: !841, file: !56, line: 1469, baseType: !60, size: 32, offset: 64)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !841, file: !56, line: 1470, baseType: !747, size: 32, offset: 96)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET10", scope: !736, file: !56, line: 1542, baseType: !751, size: 1792, offset: 18688)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PUPD_REGISTER", scope: !736, file: !56, line: 1543, baseType: !849, size: 256, offset: 20480)
!849 = !DICompositeType(tag: DW_TAG_array_type, baseType: !850, size: 256, elements: !522)
!850 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_PUPD_REGISTER_T", file: !56, line: 1480, baseType: !851)
!851 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1475, size: 128, elements: !852)
!852 = !{!853, !854, !855, !856}
!853 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PUPD", scope: !851, file: !56, line: 1476, baseType: !60, size: 32)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PUPD_SET", scope: !851, file: !56, line: 1477, baseType: !60, size: 32, offset: 32)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PUPD_CLR", scope: !851, file: !56, line: 1478, baseType: !60, size: 32, offset: 64)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !851, file: !56, line: 1479, baseType: !747, size: 32, offset: 96)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET11", scope: !736, file: !56, line: 1544, baseType: !751, size: 1792, offset: 20736)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN0_REGISTER", scope: !736, file: !56, line: 1545, baseType: !859, size: 256, offset: 22528)
!859 = !DICompositeType(tag: DW_TAG_array_type, baseType: !860, size: 256, elements: !522)
!860 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_RESEN0_REGISTER_T", file: !56, line: 1489, baseType: !861)
!861 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1484, size: 128, elements: !862)
!862 = !{!863, !864, !865, !866}
!863 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN0", scope: !861, file: !56, line: 1485, baseType: !60, size: 32)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN0_SET", scope: !861, file: !56, line: 1486, baseType: !60, size: 32, offset: 32)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN0_CLR", scope: !861, file: !56, line: 1487, baseType: !60, size: 32, offset: 64)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !861, file: !56, line: 1488, baseType: !747, size: 32, offset: 96)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN1_REGISTER", scope: !736, file: !56, line: 1546, baseType: !868, size: 256, offset: 22784)
!868 = !DICompositeType(tag: DW_TAG_array_type, baseType: !869, size: 256, elements: !522)
!869 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_RESEN1_REGISTER_T", file: !56, line: 1497, baseType: !870)
!870 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1492, size: 128, elements: !871)
!871 = !{!872, !873, !874, !875}
!872 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN1", scope: !870, file: !56, line: 1493, baseType: !60, size: 32)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN1_SET", scope: !870, file: !56, line: 1494, baseType: !60, size: 32, offset: 32)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN1_CLR", scope: !870, file: !56, line: 1495, baseType: !60, size: 32, offset: 64)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !870, file: !56, line: 1496, baseType: !747, size: 32, offset: 96)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET12", scope: !736, file: !56, line: 1547, baseType: !835, size: 1536, offset: 23040)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_MODE_REGISTER", scope: !736, file: !56, line: 1548, baseType: !878, size: 896, offset: 24576)
!878 = !DICompositeType(tag: DW_TAG_array_type, baseType: !879, size: 896, elements: !593)
!879 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_MODE_REGISTER_T", file: !56, line: 1505, baseType: !880)
!880 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1500, size: 128, elements: !881)
!881 = !{!882, !883, !884, !885}
!882 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_MODE", scope: !880, file: !56, line: 1501, baseType: !60, size: 32)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_MODE_SET", scope: !880, file: !56, line: 1502, baseType: !60, size: 32, offset: 32)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_MODE_CLR", scope: !880, file: !56, line: 1503, baseType: !60, size: 32, offset: 64)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !880, file: !56, line: 1504, baseType: !747, size: 32, offset: 96)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET13", scope: !736, file: !56, line: 1549, baseType: !887, size: 1152, offset: 25472)
!887 = !DICompositeType(tag: DW_TAG_array_type, baseType: !159, size: 1152, elements: !888)
!888 = !{!889}
!889 = !DISubrange(count: 144)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_TDSEL_REGISTER", scope: !736, file: !56, line: 1550, baseType: !891, size: 512, offset: 26624)
!891 = !DICompositeType(tag: DW_TAG_array_type, baseType: !892, size: 512, elements: !748)
!892 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TDSEL_REGISTER_T", file: !56, line: 1513, baseType: !893)
!893 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1508, size: 128, elements: !894)
!894 = !{!895, !896, !897, !898}
!895 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_TDSEL", scope: !893, file: !56, line: 1509, baseType: !60, size: 32)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_TDSEL_SET", scope: !893, file: !56, line: 1510, baseType: !60, size: 32, offset: 32)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_TDSEL_CLR", scope: !893, file: !56, line: 1511, baseType: !60, size: 32, offset: 64)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !893, file: !56, line: 1512, baseType: !747, size: 32, offset: 96)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET14", scope: !736, file: !56, line: 1551, baseType: !835, size: 1536, offset: 27136)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_CLKOUT_REGISTER", scope: !736, file: !56, line: 1552, baseType: !901, size: 768, offset: 28672)
!901 = !DICompositeType(tag: DW_TAG_array_type, baseType: !902, size: 768, elements: !162)
!902 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_CLKOUT_REGISTER_T", file: !56, line: 1519, baseType: !903)
!903 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1516, size: 128, elements: !904)
!904 = !{!905, !906}
!905 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_CLKOUT", scope: !903, file: !56, line: 1517, baseType: !60, size: 32)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !903, file: !56, line: 1518, baseType: !791, size: 96, offset: 32)
!907 = !DIGlobalVariableExpression(var: !908, expr: !DIExpression())
!908 = distinct !DIGlobalVariable(name: "g_uart_hwstatus", scope: !909, file: !910, line: 101, type: !1070, isLocal: true, isDefinition: true)
!909 = distinct !DICompileUnit(language: DW_LANG_C99, file: !910, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !911, retainedTypes: !981, globals: !991, splitDebugInlining: false, nameTableKind: None)
!910 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_uart.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sd_read_write_data_dma/GCC")
!911 = !{!912, !452, !919, !446, !925, !930, !935, !942, !958, !964, !968, !404, !973, !466}
!912 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !106, line: 180, baseType: !18, size: 32, elements: !913)
!913 = !{!914, !915, !916, !917, !918}
!914 = !DIEnumerator(name: "HAL_UART_0", value: 0)
!915 = !DIEnumerator(name: "HAL_UART_1", value: 1)
!916 = !DIEnumerator(name: "HAL_UART_2", value: 2)
!917 = !DIEnumerator(name: "HAL_UART_3", value: 3)
!918 = !DIEnumerator(name: "HAL_UART_MAX", value: 4)
!919 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !920, line: 355, baseType: !7, size: 32, elements: !921)
!920 = !DIFile(filename: "../../../../../driver/chip/inc/hal_uart.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sd_read_write_data_dma/GCC")
!921 = !{!922, !923, !924}
!922 = !DIEnumerator(name: "HAL_UART_EVENT_TRANSACTION_ERROR", value: -1)
!923 = !DIEnumerator(name: "HAL_UART_EVENT_READY_TO_READ", value: 1)
!924 = !DIEnumerator(name: "HAL_UART_EVENT_READY_TO_WRITE", value: 2)
!925 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !910, line: 65, baseType: !18, size: 32, elements: !926)
!926 = !{!927, !928, !929}
!927 = !DIEnumerator(name: "UART_HWSTATUS_UNINITIALIZED", value: 0)
!928 = !DIEnumerator(name: "UART_HWSTATUS_POLL_INITIALIZED", value: 1)
!929 = !DIEnumerator(name: "UART_HWSTATUS_DMA_INITIALIZED", value: 2)
!930 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !910, line: 77, baseType: !18, size: 32, elements: !931)
!931 = !{!932, !933, !934}
!932 = !DIEnumerator(name: "UART_FLOWCONTROL_NONE", value: 0)
!933 = !DIEnumerator(name: "UART_FLOWCONTROL_SOFTWARE", value: 1)
!934 = !DIEnumerator(name: "UART_FLOWCONTROL_HARDWARE", value: 2)
!935 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !920, line: 345, baseType: !7, size: 32, elements: !936)
!936 = !{!937, !938, !939, !940, !941}
!937 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR_PARAMETER", value: -4)
!938 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR_BUSY", value: -3)
!939 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR_UNINITIALIZED", value: -2)
!940 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR", value: -1)
!941 = !DIEnumerator(name: "HAL_UART_STATUS_OK", value: 0)
!942 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !920, line: 302, baseType: !18, size: 32, elements: !943)
!943 = !{!944, !945, !946, !947, !948, !949, !950, !951, !952, !953, !954, !955, !956, !957}
!944 = !DIEnumerator(name: "HAL_UART_BAUDRATE_110", value: 0)
!945 = !DIEnumerator(name: "HAL_UART_BAUDRATE_300", value: 1)
!946 = !DIEnumerator(name: "HAL_UART_BAUDRATE_1200", value: 2)
!947 = !DIEnumerator(name: "HAL_UART_BAUDRATE_2400", value: 3)
!948 = !DIEnumerator(name: "HAL_UART_BAUDRATE_4800", value: 4)
!949 = !DIEnumerator(name: "HAL_UART_BAUDRATE_9600", value: 5)
!950 = !DIEnumerator(name: "HAL_UART_BAUDRATE_19200", value: 6)
!951 = !DIEnumerator(name: "HAL_UART_BAUDRATE_38400", value: 7)
!952 = !DIEnumerator(name: "HAL_UART_BAUDRATE_57600", value: 8)
!953 = !DIEnumerator(name: "HAL_UART_BAUDRATE_115200", value: 9)
!954 = !DIEnumerator(name: "HAL_UART_BAUDRATE_230400", value: 10)
!955 = !DIEnumerator(name: "HAL_UART_BAUDRATE_460800", value: 11)
!956 = !DIEnumerator(name: "HAL_UART_BAUDRATE_921600", value: 12)
!957 = !DIEnumerator(name: "HAL_UART_BAUDRATE_MAX", value: 13)
!958 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !920, line: 321, baseType: !18, size: 32, elements: !959)
!959 = !{!960, !961, !962, !963}
!960 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_5", value: 0)
!961 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_6", value: 1)
!962 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_7", value: 2)
!963 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_8", value: 3)
!964 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !920, line: 330, baseType: !18, size: 32, elements: !965)
!965 = !{!966, !967}
!966 = !DIEnumerator(name: "HAL_UART_STOP_BIT_1", value: 0)
!967 = !DIEnumerator(name: "HAL_UART_STOP_BIT_2", value: 1)
!968 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !920, line: 337, baseType: !18, size: 32, elements: !969)
!969 = !{!970, !971, !972}
!970 = !DIEnumerator(name: "HAL_UART_PARITY_NONE", value: 0)
!971 = !DIEnumerator(name: "HAL_UART_PARITY_ODD", value: 1)
!972 = !DIEnumerator(name: "HAL_UART_PARITY_EVEN", value: 2)
!973 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !974, line: 152, baseType: !7, size: 32, elements: !975)
!974 = !DIFile(filename: "../../../../../driver/chip/inc/hal_nvic.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sd_read_write_data_dma/GCC")
!975 = !{!976, !977, !978, !979, !980}
!976 = !DIEnumerator(name: "HAL_NVIC_STATUS_ERROR_NO_ISR", value: -4)
!977 = !DIEnumerator(name: "HAL_NVIC_STATUS_ERROR_IRQ_NUMBER", value: -3)
!978 = !DIEnumerator(name: "HAL_NVIC_STATUS_INVALID_PARAMETER", value: -2)
!979 = !DIEnumerator(name: "HAL_NVIC_STATUS_ERROR", value: -1)
!980 = !DIEnumerator(name: "HAL_NVIC_STATUS_OK", value: 0)
!981 = !{!88, !982, !61, !983}
!982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !167, size: 32)
!983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !984, size: 32)
!984 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_dma_callback_data_t", file: !985, line: 96, baseType: !986)
!985 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_uart_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sd_read_write_data_dma/GCC")
!986 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !985, line: 93, size: 64, elements: !987)
!987 = !{!988, !989}
!988 = !DIDerivedType(tag: DW_TAG_member, name: "is_rx", scope: !986, file: !985, line: 94, baseType: !91, size: 8)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "uart_port", scope: !986, file: !985, line: 95, baseType: !990, size: 32, offset: 32)
!990 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_port_t", file: !106, line: 186, baseType: !912)
!991 = !{!992, !995, !997, !999, !1001, !1005, !1014, !1028, !907, !1030, !1043, !1048, !1062, !1068}
!992 = !DIGlobalVariableExpression(var: !993, expr: !DIExpression())
!993 = distinct !DIGlobalVariable(name: "g_uart_frist_send_complete_interrupt", scope: !909, file: !910, line: 92, type: !994, isLocal: true, isDefinition: true)
!994 = !DICompositeType(tag: DW_TAG_array_type, baseType: !91, size: 32, elements: !748)
!995 = !DIGlobalVariableExpression(var: !996, expr: !DIExpression())
!996 = distinct !DIGlobalVariable(name: "g_uart_restore_init", scope: !909, file: !910, line: 93, type: !91, isLocal: true, isDefinition: true)
!997 = !DIGlobalVariableExpression(var: !998, expr: !DIExpression())
!998 = distinct !DIGlobalVariable(name: "g_uart_send_lock_status", scope: !909, file: !910, line: 94, type: !994, isLocal: true, isDefinition: true)
!999 = !DIGlobalVariableExpression(var: !1000, expr: !DIExpression())
!1000 = distinct !DIGlobalVariable(name: "g_uart_sleep_handler", scope: !909, file: !910, line: 95, type: !747, isLocal: true, isDefinition: true)
!1001 = !DIGlobalVariableExpression(var: !1002, expr: !DIExpression())
!1002 = distinct !DIGlobalVariable(name: "g_uart_flowcontrol_status", scope: !909, file: !910, line: 96, type: !1003, isLocal: true, isDefinition: true)
!1003 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1004, size: 128, elements: !748)
!1004 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_flowcontrol_t", file: !910, line: 81, baseType: !930)
!1005 = !DIGlobalVariableExpression(var: !1006, expr: !DIExpression())
!1006 = distinct !DIGlobalVariable(name: "g_uart_sw_flowcontrol_config", scope: !909, file: !910, line: 97, type: !1007, isLocal: true, isDefinition: true)
!1007 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1008, size: 96, elements: !748)
!1008 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_sw_flowcontrol_config_t", file: !910, line: 87, baseType: !1009)
!1009 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !910, line: 83, size: 24, elements: !1010)
!1010 = !{!1011, !1012, !1013}
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "xon", scope: !1009, file: !910, line: 84, baseType: !159, size: 8)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "xoff", scope: !1009, file: !910, line: 85, baseType: !159, size: 8, offset: 8)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "escape_character", scope: !1009, file: !910, line: 86, baseType: !159, size: 8, offset: 16)
!1014 = !DIGlobalVariableExpression(var: !1015, expr: !DIExpression())
!1015 = distinct !DIGlobalVariable(name: "g_uart_config", scope: !909, file: !910, line: 98, type: !1016, isLocal: true, isDefinition: true)
!1016 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1017, size: 512, elements: !748)
!1017 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_config_t", file: !920, line: 378, baseType: !1018)
!1018 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !920, line: 373, size: 128, elements: !1019)
!1019 = !{!1020, !1022, !1024, !1026}
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1018, file: !920, line: 374, baseType: !1021, size: 32)
!1021 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_baudrate_t", file: !920, line: 317, baseType: !942)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "word_length", scope: !1018, file: !920, line: 375, baseType: !1023, size: 32, offset: 32)
!1023 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_word_length_t", file: !920, line: 326, baseType: !958)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bit", scope: !1018, file: !920, line: 376, baseType: !1025, size: 32, offset: 64)
!1025 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_stop_bit_t", file: !920, line: 333, baseType: !964)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1018, file: !920, line: 377, baseType: !1027, size: 32, offset: 96)
!1027 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_parity_t", file: !920, line: 341, baseType: !968)
!1028 = !DIGlobalVariableExpression(var: !1029, expr: !DIExpression())
!1029 = distinct !DIGlobalVariable(name: "g_uart_irq_pending_status", scope: !909, file: !910, line: 99, type: !994, isLocal: true, isDefinition: true)
!1030 = !DIGlobalVariableExpression(var: !1031, expr: !DIExpression())
!1031 = distinct !DIGlobalVariable(name: "g_uart_callback", scope: !909, file: !910, line: 102, type: !1032, isLocal: true, isDefinition: true)
!1032 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1033, size: 256, elements: !748)
!1033 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_callback_t", file: !910, line: 74, baseType: !1034)
!1034 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !910, line: 71, size: 64, elements: !1035)
!1035 = !{!1036, !1042}
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1034, file: !910, line: 72, baseType: !1037, size: 32)
!1037 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_callback_t", file: !920, line: 410, baseType: !1038)
!1038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1039, size: 32)
!1039 = !DISubroutineType(types: !1040)
!1040 = !{null, !1041, !88}
!1041 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_callback_event_t", file: !920, line: 359, baseType: !919)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !1034, file: !910, line: 73, baseType: !88, size: 32, offset: 32)
!1043 = !DIGlobalVariableExpression(var: !1044, expr: !DIExpression())
!1044 = distinct !DIGlobalVariable(name: "g_uart_dma_callback_data", scope: !909, file: !910, line: 103, type: !1045, isLocal: true, isDefinition: true)
!1045 = !DICompositeType(tag: DW_TAG_array_type, baseType: !984, size: 512, elements: !1046)
!1046 = !{!1047}
!1047 = !DISubrange(count: 8)
!1048 = !DIGlobalVariableExpression(var: !1049, expr: !DIExpression())
!1049 = distinct !DIGlobalVariable(name: "g_uart_dma_config", scope: !909, file: !910, line: 104, type: !1050, isLocal: true, isDefinition: true)
!1050 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1051, size: 896, elements: !748)
!1051 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_dma_config_t", file: !920, line: 390, baseType: !1052)
!1052 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !920, line: 382, size: 224, elements: !1053)
!1053 = !{!1054, !1056, !1057, !1058, !1059, !1060, !1061}
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "send_vfifo_buffer", scope: !1052, file: !920, line: 383, baseType: !1055, size: 32)
!1055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !159, size: 32)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "send_vfifo_buffer_size", scope: !1052, file: !920, line: 384, baseType: !61, size: 32, offset: 32)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "send_vfifo_threshold_size", scope: !1052, file: !920, line: 385, baseType: !61, size: 32, offset: 64)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_buffer", scope: !1052, file: !920, line: 386, baseType: !1055, size: 32, offset: 96)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_buffer_size", scope: !1052, file: !920, line: 387, baseType: !61, size: 32, offset: 128)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_threshold_size", scope: !1052, file: !920, line: 388, baseType: !61, size: 32, offset: 160)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_alert_size", scope: !1052, file: !920, line: 389, baseType: !61, size: 32, offset: 192)
!1062 = !DIGlobalVariableExpression(var: !1063, expr: !DIExpression())
!1063 = distinct !DIGlobalVariable(name: "g_uart_baudrate_map", scope: !909, file: !910, line: 105, type: !1064, isLocal: true, isDefinition: true)
!1064 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1065, size: 416, elements: !1066)
!1065 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !61)
!1066 = !{!1067}
!1067 = !DISubrange(count: 13)
!1068 = !DIGlobalVariableExpression(var: !1069, expr: !DIExpression())
!1069 = distinct !DIGlobalVariable(name: "g_uart_global_data_initialized", scope: !909, file: !910, line: 90, type: !91, isLocal: true, isDefinition: true)
!1070 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1071, size: 128, elements: !748)
!1071 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1072)
!1072 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_hwstatus_t", file: !910, line: 69, baseType: !925)
!1073 = !DIGlobalVariableExpression(var: !996, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!1074 = !DIGlobalVariableExpression(var: !1069, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!1075 = !DIGlobalVariableExpression(var: !1076, expr: !DIExpression())
!1076 = distinct !DIGlobalVariable(name: "g_uart_regbase", scope: !1077, file: !1078, line: 53, type: !1160, isLocal: false, isDefinition: true)
!1077 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1078, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1079, retainedTypes: !1090, globals: !1146, splitDebugInlining: false, nameTableKind: None)
!1078 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_uart_internal_platform.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sd_read_write_data_dma/GCC")
!1079 = !{!173, !238, !452, !912, !1080}
!1080 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !985, line: 46, baseType: !18, size: 32, elements: !1081)
!1081 = !{!1082, !1083, !1084, !1085, !1086, !1087, !1088, !1089}
!1082 = !DIEnumerator(name: "UART_INTERRUPT_NONE", value: 0)
!1083 = !DIEnumerator(name: "UART_INTERRUPT_RECEIVE_ERROR", value: 1)
!1084 = !DIEnumerator(name: "UART_INTERRUPT_RECEIVE_TIMEOUT", value: 2)
!1085 = !DIEnumerator(name: "UART_INTERRUPT_RECEIVE_BREAK", value: 3)
!1086 = !DIEnumerator(name: "UART_INTERRUPT_RECEIVE_AVAILABLE", value: 4)
!1087 = !DIEnumerator(name: "UART_INTERRUPT_SEND_AVAILABLE", value: 5)
!1088 = !DIEnumerator(name: "UART_INTERRUPT_SOFTWARE_FLOWCONTROL", value: 6)
!1089 = !DIEnumerator(name: "UART_INTERRUPT_HARDWARE_FLOWCONTROL", value: 7)
!1090 = !{!1091}
!1091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1092, size: 32)
!1092 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_REGISTER_T", file: !56, line: 588, baseType: !1093)
!1093 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 542, size: 800, elements: !1094)
!1094 = !{!1095, !1101, !1106, !1112, !1113, !1118, !1123, !1124, !1129, !1130, !1131, !1132, !1133, !1134, !1135, !1136, !1137, !1138, !1139, !1140, !1141, !1142, !1143, !1144, !1145}
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "RBR_THR_DLL", scope: !1093, file: !56, line: 547, baseType: !1096, size: 32)
!1096 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1093, file: !56, line: 543, size: 32, elements: !1097)
!1097 = !{!1098, !1099, !1100}
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "RBR", scope: !1096, file: !56, line: 544, baseType: !324, size: 32)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "THR", scope: !1096, file: !56, line: 545, baseType: !60, size: 32)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "DLL", scope: !1096, file: !56, line: 546, baseType: !60, size: 32)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "IER_DLM", scope: !1093, file: !56, line: 551, baseType: !1102, size: 32, offset: 32)
!1102 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1093, file: !56, line: 548, size: 32, elements: !1103)
!1103 = !{!1104, !1105}
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "IER", scope: !1102, file: !56, line: 549, baseType: !60, size: 32)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "DLM", scope: !1102, file: !56, line: 550, baseType: !60, size: 32)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "IIR_FCR_EFR", scope: !1093, file: !56, line: 556, baseType: !1107, size: 32, offset: 64)
!1107 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1093, file: !56, line: 552, size: 32, elements: !1108)
!1108 = !{!1109, !1110, !1111}
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "IIR", scope: !1107, file: !56, line: 553, baseType: !324, size: 32)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "FCR", scope: !1107, file: !56, line: 554, baseType: !60, size: 32)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "EFR", scope: !1107, file: !56, line: 555, baseType: !60, size: 32)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "LCR", scope: !1093, file: !56, line: 557, baseType: !60, size: 32, offset: 96)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "MCR_XON1", scope: !1093, file: !56, line: 561, baseType: !1114, size: 32, offset: 128)
!1114 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1093, file: !56, line: 558, size: 32, elements: !1115)
!1115 = !{!1116, !1117}
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "MCR", scope: !1114, file: !56, line: 559, baseType: !60, size: 32)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "XON1", scope: !1114, file: !56, line: 560, baseType: !60, size: 32)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "LSR_XON2", scope: !1093, file: !56, line: 565, baseType: !1119, size: 32, offset: 160)
!1119 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1093, file: !56, line: 562, size: 32, elements: !1120)
!1120 = !{!1121, !1122}
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "LSR", scope: !1119, file: !56, line: 563, baseType: !324, size: 32)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "XON2", scope: !1119, file: !56, line: 564, baseType: !60, size: 32)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF1", scope: !1093, file: !56, line: 566, baseType: !60, size: 32, offset: 192)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "SCR_XOFF2", scope: !1093, file: !56, line: 570, baseType: !1125, size: 32, offset: 224)
!1125 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1093, file: !56, line: 567, size: 32, elements: !1126)
!1126 = !{!1127, !1128}
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1125, file: !56, line: 568, baseType: !60, size: 32)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF2", scope: !1125, file: !56, line: 569, baseType: !60, size: 32)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_EN", scope: !1093, file: !56, line: 571, baseType: !60, size: 32, offset: 256)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "HIGHSPEED", scope: !1093, file: !56, line: 572, baseType: !60, size: 32, offset: 288)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_COUNT", scope: !1093, file: !56, line: 573, baseType: !60, size: 32, offset: 320)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_POINT", scope: !1093, file: !56, line: 574, baseType: !60, size: 32, offset: 352)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_REG", scope: !1093, file: !56, line: 575, baseType: !324, size: 32, offset: 384)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "RATEFIX_AD", scope: !1093, file: !56, line: 576, baseType: !60, size: 32, offset: 416)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUDSAMPLE", scope: !1093, file: !56, line: 577, baseType: !60, size: 32, offset: 448)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "GUARD", scope: !1093, file: !56, line: 578, baseType: !60, size: 32, offset: 480)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_DAT", scope: !1093, file: !56, line: 579, baseType: !60, size: 32, offset: 512)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_EN", scope: !1093, file: !56, line: 580, baseType: !60, size: 32, offset: 544)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEP_EN", scope: !1093, file: !56, line: 581, baseType: !60, size: 32, offset: 576)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "DMA_EN", scope: !1093, file: !56, line: 582, baseType: !60, size: 32, offset: 608)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "RXTRI_AD", scope: !1093, file: !56, line: 583, baseType: !60, size: 32, offset: 640)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_L", scope: !1093, file: !56, line: 584, baseType: !60, size: 32, offset: 672)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_M", scope: !1093, file: !56, line: 585, baseType: !60, size: 32, offset: 704)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "FCR_RD", scope: !1093, file: !56, line: 586, baseType: !324, size: 32, offset: 736)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "TX_ACTIVE_EN", scope: !1093, file: !56, line: 587, baseType: !60, size: 32, offset: 768)
!1146 = !{!1075, !1147, !1152, !1156}
!1147 = !DIGlobalVariableExpression(var: !1148, expr: !DIExpression())
!1148 = distinct !DIGlobalVariable(name: "g_uart_port_to_pdn", scope: !1077, file: !1078, line: 54, type: !1149, isLocal: false, isDefinition: true)
!1149 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1150, size: 128, elements: !748)
!1150 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1151)
!1151 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_clock_cg_id", file: !106, line: 1237, baseType: !173)
!1152 = !DIGlobalVariableExpression(var: !1153, expr: !DIExpression())
!1153 = distinct !DIGlobalVariable(name: "g_uart_port_to_irq_num", scope: !1077, file: !1078, line: 55, type: !1154, isLocal: false, isDefinition: true)
!1154 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1155, size: 128, elements: !748)
!1155 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !570)
!1156 = !DIGlobalVariableExpression(var: !1157, expr: !DIExpression())
!1157 = distinct !DIGlobalVariable(name: "g_uart_sleep_handler_name", scope: !1077, file: !1078, line: 57, type: !1158, isLocal: false, isDefinition: true)
!1158 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1159, size: 128, elements: !748)
!1159 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !165)
!1160 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1161, size: 128, elements: !748)
!1161 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1091)
!1162 = !DIGlobalVariableExpression(var: !1163, expr: !DIExpression())
!1163 = distinct !DIGlobalVariable(name: "g_i2c_tx_dma_channel", scope: !1164, file: !1165, line: 47, type: !1268, isLocal: false, isDefinition: true)
!1164 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1165, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1166, globals: !1201, splitDebugInlining: false, nameTableKind: None)
!1165 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_i2c_master_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sd_read_write_data_dma/GCC")
!1166 = !{!417, !173, !1167, !1177, !1194}
!1167 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1168, line: 132, baseType: !18, size: 32, elements: !1169)
!1168 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_i2c_master_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sd_read_write_data_dma/GCC")
!1169 = !{!1170, !1171, !1172, !1173, !1174, !1175, !1176}
!1170 = !DIEnumerator(name: "I2C_FREQUENCY_50K", value: 50)
!1171 = !DIEnumerator(name: "I2C_FREQUENCY_100K", value: 100)
!1172 = !DIEnumerator(name: "I2C_FREQUENCY_200K", value: 200)
!1173 = !DIEnumerator(name: "I2C_FREQUENCY_300K", value: 300)
!1174 = !DIEnumerator(name: "I2C_FREQUENCY_400K", value: 400)
!1175 = !DIEnumerator(name: "I2C_FREQUENCY_1M", value: 1000)
!1176 = !DIEnumerator(name: "I2C_FREQUENCY_MAX", value: 1001)
!1177 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1168, line: 142, baseType: !18, size: 32, elements: !1178)
!1178 = !{!1179, !1180, !1181, !1182, !1183, !1184, !1185, !1186, !1187, !1188, !1189, !1190, !1191, !1192, !1193}
!1179 = !DIEnumerator(name: "I2C_TRANSACTION_PUSH_PULL_SEND_POLLING", value: 0)
!1180 = !DIEnumerator(name: "I2C_TRANSACTION_PUSH_PULL_SEND_DMA", value: 1)
!1181 = !DIEnumerator(name: "I2C_TRANSACTION_PUSH_PULL_RECEIVE_POLLING", value: 2)
!1182 = !DIEnumerator(name: "I2C_TRANSACTION_PUSH_PULL_RECEIVE_DMA", value: 3)
!1183 = !DIEnumerator(name: "I2C_TRANSACTION_PUSH_PULL_SEND_TO_RECEIVE_POLLING", value: 4)
!1184 = !DIEnumerator(name: "I2C_TRANSACTION_PUSH_PULL_SEND_TO_RECEIVE_DMA", value: 5)
!1185 = !DIEnumerator(name: "I2C_TRANSACTION_OPEN_DRAIN_SEND_POLLING", value: 6)
!1186 = !DIEnumerator(name: "I2C_TRANSACTION_OPEN_DRAIN_SEND_DMA", value: 7)
!1187 = !DIEnumerator(name: "I2C_TRANSACTION_OPEN_DRAIN_RECEIVE_POLLING", value: 8)
!1188 = !DIEnumerator(name: "I2C_TRANSACTION_OPEN_DRAIN_RECEIVE_DMA", value: 9)
!1189 = !DIEnumerator(name: "I2C_TRANSACTION_OPEN_DRAIN_SEND_TO_RECEIVE_POLLING", value: 10)
!1190 = !DIEnumerator(name: "I2C_TRANSACTION_OPEN_DRAIN_SEND_TO_RECEIVE_DMA", value: 11)
!1191 = !DIEnumerator(name: "I2C_TRANSACTION_OPEN_DRAIN_SEND_DMA_EXTEND", value: 12)
!1192 = !DIEnumerator(name: "I2C_TRANSACTION_OPEN_DRAIN_RECEIVE_DMA_EXTEND", value: 13)
!1193 = !DIEnumerator(name: "I2C_TRANSACTION_OPEN_DRAIN_SEND_TO_RECEIVE_DMA_EXTEND", value: 14)
!1194 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1168, line: 162, baseType: !7, size: 32, elements: !1195)
!1195 = !{!1196, !1197, !1198, !1199, !1200}
!1196 = !DIEnumerator(name: "I2C_TRANSACTION_UNKNOWN_ERROR", value: -4)
!1197 = !DIEnumerator(name: "I2C_TRANSACTION_ACK_ERROR", value: -3)
!1198 = !DIEnumerator(name: "I2C_TRANSACTION_NACK_ERROR", value: -2)
!1199 = !DIEnumerator(name: "I2C_TRANSACTION_TIMEOUT_ERROR", value: -1)
!1200 = !DIEnumerator(name: "I2C_TRANSACTION_SUCCESS", value: 0)
!1201 = !{!1202, !1162, !1266, !1271, !1273}
!1202 = !DIGlobalVariableExpression(var: !1203, expr: !DIExpression())
!1203 = distinct !DIGlobalVariable(name: "i2c_master_register", scope: !1164, file: !1165, line: 46, type: !1204, isLocal: false, isDefinition: true)
!1204 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1205, size: 128, elements: !748)
!1205 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1206)
!1206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1207, size: 32)
!1207 = !DIDerivedType(tag: DW_TAG_typedef, name: "I2C_REGISTER_T", file: !56, line: 1885, baseType: !1208)
!1208 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1833, size: 960, elements: !1209)
!1209 = !{!1210, !1215, !1216, !1217, !1218, !1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226, !1227, !1228, !1229, !1230, !1231, !1232, !1233, !1234, !1236, !1237, !1238, !1239, !1240, !1241, !1242, !1243, !1244, !1245, !1246, !1247, !1248, !1249, !1250, !1251, !1252, !1253, !1255, !1256, !1257, !1258, !1259, !1260, !1261, !1262, !1263, !1264, !1265}
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "DATA_PORT", scope: !1208, file: !56, line: 1834, baseType: !1211, size: 16)
!1211 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1212)
!1212 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !62, line: 36, baseType: !1213)
!1213 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint16_t", file: !64, line: 57, baseType: !1214)
!1214 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1208, file: !56, line: 1835, baseType: !1211, size: 16, offset: 16)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "SLAVE_ADDR", scope: !1208, file: !56, line: 1836, baseType: !1211, size: 16, offset: 32)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1208, file: !56, line: 1837, baseType: !1211, size: 16, offset: 48)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "INTR_MASK", scope: !1208, file: !56, line: 1838, baseType: !1211, size: 16, offset: 64)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1208, file: !56, line: 1839, baseType: !1211, size: 16, offset: 80)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "INTR_STAT", scope: !1208, file: !56, line: 1840, baseType: !1211, size: 16, offset: 96)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1208, file: !56, line: 1841, baseType: !1211, size: 16, offset: 112)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "CONTROL", scope: !1208, file: !56, line: 1842, baseType: !1211, size: 16, offset: 128)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1208, file: !56, line: 1843, baseType: !1211, size: 16, offset: 144)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "TRANSFER_LEN", scope: !1208, file: !56, line: 1844, baseType: !1211, size: 16, offset: 160)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1208, file: !56, line: 1845, baseType: !1211, size: 16, offset: 176)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "TRANSAC_LEN", scope: !1208, file: !56, line: 1846, baseType: !1211, size: 16, offset: 192)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !1208, file: !56, line: 1847, baseType: !1211, size: 16, offset: 208)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "DELAY_LEN", scope: !1208, file: !56, line: 1848, baseType: !1211, size: 16, offset: 224)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED8", scope: !1208, file: !56, line: 1849, baseType: !1211, size: 16, offset: 240)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "TIMING", scope: !1208, file: !56, line: 1850, baseType: !1211, size: 16, offset: 256)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED9", scope: !1208, file: !56, line: 1851, baseType: !1211, size: 16, offset: 272)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "START", scope: !1208, file: !56, line: 1852, baseType: !1211, size: 16, offset: 288)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED10", scope: !1208, file: !56, line: 1853, baseType: !1211, size: 16, offset: 304)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED11", scope: !1208, file: !56, line: 1854, baseType: !1235, size: 32, offset: 320)
!1235 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1211, size: 32, elements: !522)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "CLOCK_DIV", scope: !1208, file: !56, line: 1855, baseType: !1211, size: 16, offset: 352)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED12", scope: !1208, file: !56, line: 1856, baseType: !1211, size: 16, offset: 368)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "FIFO_STAT", scope: !1208, file: !56, line: 1857, baseType: !1211, size: 16, offset: 384)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED13", scope: !1208, file: !56, line: 1858, baseType: !1211, size: 16, offset: 400)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "FIFO_THRESH", scope: !1208, file: !56, line: 1859, baseType: !1211, size: 16, offset: 416)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED14", scope: !1208, file: !56, line: 1860, baseType: !1211, size: 16, offset: 432)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "FIFO_ADDR_CLR", scope: !1208, file: !56, line: 1861, baseType: !1211, size: 16, offset: 448)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED15", scope: !1208, file: !56, line: 1862, baseType: !1211, size: 16, offset: 464)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED16", scope: !1208, file: !56, line: 1863, baseType: !1235, size: 32, offset: 480)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "IO_CONFIG", scope: !1208, file: !56, line: 1864, baseType: !1211, size: 16, offset: 512)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED17", scope: !1208, file: !56, line: 1865, baseType: !1211, size: 16, offset: 528)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED18", scope: !1208, file: !56, line: 1866, baseType: !1235, size: 32, offset: 544)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "HS", scope: !1208, file: !56, line: 1867, baseType: !1211, size: 16, offset: 576)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED19", scope: !1208, file: !56, line: 1868, baseType: !1211, size: 16, offset: 592)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED20", scope: !1208, file: !56, line: 1869, baseType: !1235, size: 32, offset: 608)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "SOFTRESET", scope: !1208, file: !56, line: 1870, baseType: !1211, size: 16, offset: 640)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED21", scope: !1208, file: !56, line: 1871, baseType: !1211, size: 16, offset: 656)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED22", scope: !1208, file: !56, line: 1872, baseType: !1254, size: 96, offset: 672)
!1254 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1211, size: 96, elements: !162)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "SPARE", scope: !1208, file: !56, line: 1873, baseType: !1211, size: 16, offset: 768)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED23", scope: !1208, file: !56, line: 1874, baseType: !1211, size: 16, offset: 784)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "DEBUGSTAT", scope: !1208, file: !56, line: 1875, baseType: !1211, size: 16, offset: 800)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED24", scope: !1208, file: !56, line: 1876, baseType: !1211, size: 16, offset: 816)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "DEBUGCTRL", scope: !1208, file: !56, line: 1877, baseType: !1211, size: 16, offset: 832)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED25", scope: !1208, file: !56, line: 1878, baseType: !1211, size: 16, offset: 848)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "TRANSFER_LEN_AUX", scope: !1208, file: !56, line: 1879, baseType: !1211, size: 16, offset: 864)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED26", scope: !1208, file: !56, line: 1880, baseType: !1211, size: 16, offset: 880)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED27", scope: !1208, file: !56, line: 1881, baseType: !1235, size: 32, offset: 896)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "TIMEOUT", scope: !1208, file: !56, line: 1882, baseType: !1211, size: 16, offset: 928)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED28", scope: !1208, file: !56, line: 1883, baseType: !1211, size: 16, offset: 944)
!1266 = !DIGlobalVariableExpression(var: !1267, expr: !DIExpression())
!1267 = distinct !DIGlobalVariable(name: "g_i2c_rx_dma_channel", scope: !1164, file: !1165, line: 48, type: !1268, isLocal: false, isDefinition: true)
!1268 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1269, size: 128, elements: !748)
!1269 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1270)
!1270 = !DIDerivedType(tag: DW_TAG_typedef, name: "pdma_channel_t", file: !400, line: 147, baseType: !417)
!1271 = !DIGlobalVariableExpression(var: !1272, expr: !DIExpression())
!1272 = distinct !DIGlobalVariable(name: "g_i2c_pdn_table", scope: !1164, file: !1165, line: 49, type: !1149, isLocal: false, isDefinition: true)
!1273 = !DIGlobalVariableExpression(var: !1274, expr: !DIExpression())
!1274 = distinct !DIGlobalVariable(name: "g_i2c_source_clock_table", scope: !1164, file: !1165, line: 52, type: !1275, isLocal: false, isDefinition: true)
!1275 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 128, elements: !748)
!1276 = !DIGlobalVariableExpression(var: !1277, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!1277 = distinct !DIGlobalVariable(name: "priority_set", scope: !1278, file: !1279, line: 128, type: !61, isLocal: true, isDefinition: true)
!1278 = distinct !DISubprogram(name: "hal_nvic_init", scope: !1279, file: !1279, line: 126, type: !1280, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1283, retainedNodes: !1367)
!1279 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_nvic.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sd_read_write_data_dma/GCC")
!1280 = !DISubroutineType(types: !1281)
!1281 = !{!1282}
!1282 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_nvic_status_t", file: !974, line: 158, baseType: !973)
!1283 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1279, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1284, retainedTypes: !1285, globals: !1351, splitDebugInlining: false, nameTableKind: None)
!1284 = !{!973, !238}
!1285 = !{!570, !1286, !61, !1319, !1349}
!1286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1287, size: 32)
!1287 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1288, line: 418, baseType: !1289)
!1288 = !DIFile(filename: "../../../../../driver/CMSIS/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sd_read_write_data_dma/GCC")
!1289 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1288, line: 395, size: 1120, elements: !1290)
!1290 = !{!1291, !1292, !1293, !1294, !1295, !1296, !1297, !1299, !1300, !1301, !1302, !1303, !1304, !1305, !1306, !1308, !1309, !1310, !1312, !1316, !1318}
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1289, file: !1288, line: 397, baseType: !324, size: 32)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1289, file: !1288, line: 398, baseType: !60, size: 32, offset: 32)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1289, file: !1288, line: 399, baseType: !60, size: 32, offset: 64)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1289, file: !1288, line: 400, baseType: !60, size: 32, offset: 96)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1289, file: !1288, line: 401, baseType: !60, size: 32, offset: 128)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1289, file: !1288, line: 402, baseType: !60, size: 32, offset: 160)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1289, file: !1288, line: 403, baseType: !1298, size: 96, offset: 192)
!1298 = !DICompositeType(tag: DW_TAG_array_type, baseType: !592, size: 96, elements: !792)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1289, file: !1288, line: 404, baseType: !60, size: 32, offset: 288)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1289, file: !1288, line: 405, baseType: !60, size: 32, offset: 320)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1289, file: !1288, line: 406, baseType: !60, size: 32, offset: 352)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1289, file: !1288, line: 407, baseType: !60, size: 32, offset: 384)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1289, file: !1288, line: 408, baseType: !60, size: 32, offset: 416)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1289, file: !1288, line: 409, baseType: !60, size: 32, offset: 448)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1289, file: !1288, line: 410, baseType: !60, size: 32, offset: 480)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1289, file: !1288, line: 411, baseType: !1307, size: 64, offset: 512)
!1307 = !DICompositeType(tag: DW_TAG_array_type, baseType: !324, size: 64, elements: !522)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1289, file: !1288, line: 412, baseType: !324, size: 32, offset: 576)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1289, file: !1288, line: 413, baseType: !324, size: 32, offset: 608)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1289, file: !1288, line: 414, baseType: !1311, size: 128, offset: 640)
!1311 = !DICompositeType(tag: DW_TAG_array_type, baseType: !324, size: 128, elements: !748)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1289, file: !1288, line: 415, baseType: !1313, size: 160, offset: 768)
!1313 = !DICompositeType(tag: DW_TAG_array_type, baseType: !324, size: 160, elements: !1314)
!1314 = !{!1315}
!1315 = !DISubrange(count: 5)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1289, file: !1288, line: 416, baseType: !1317, size: 160, offset: 928)
!1317 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 160, elements: !1314)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1289, file: !1288, line: 417, baseType: !60, size: 32, offset: 1088)
!1319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1320, size: 32)
!1320 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !1288, line: 378, baseType: !1321)
!1321 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1288, line: 363, size: 28704, elements: !1322)
!1322 = !{!1323, !1325, !1329, !1330, !1331, !1332, !1333, !1334, !1335, !1336, !1340, !1344, !1348}
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1321, file: !1288, line: 365, baseType: !1324, size: 256)
!1324 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 256, elements: !1046)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1321, file: !1288, line: 366, baseType: !1326, size: 768, offset: 256)
!1326 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 768, elements: !1327)
!1327 = !{!1328}
!1328 = !DISubrange(count: 24)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1321, file: !1288, line: 367, baseType: !1324, size: 256, offset: 1024)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "RSERVED1", scope: !1321, file: !1288, line: 368, baseType: !1326, size: 768, offset: 1280)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1321, file: !1288, line: 369, baseType: !1324, size: 256, offset: 2048)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1321, file: !1288, line: 370, baseType: !1326, size: 768, offset: 2304)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1321, file: !1288, line: 371, baseType: !1324, size: 256, offset: 3072)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1321, file: !1288, line: 372, baseType: !1326, size: 768, offset: 3328)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1321, file: !1288, line: 373, baseType: !1324, size: 256, offset: 4096)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1321, file: !1288, line: 374, baseType: !1337, size: 1792, offset: 4352)
!1337 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 1792, elements: !1338)
!1338 = !{!1339}
!1339 = !DISubrange(count: 56)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1321, file: !1288, line: 375, baseType: !1341, size: 1920, offset: 6144)
!1341 = !DICompositeType(tag: DW_TAG_array_type, baseType: !592, size: 1920, elements: !1342)
!1342 = !{!1343}
!1343 = !DISubrange(count: 240)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1321, file: !1288, line: 376, baseType: !1345, size: 20608, offset: 8064)
!1345 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 20608, elements: !1346)
!1346 = !{!1347}
!1347 = !DISubrange(count: 644)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1321, file: !1288, line: 377, baseType: !60, size: 32, offset: 28672)
!1349 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !62, line: 44, baseType: !1350)
!1350 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int32_t", file: !64, line: 77, baseType: !7)
!1351 = !{!1352, !1353, !1364}
!1352 = !DIGlobalVariableExpression(var: !1277, expr: !DIExpression())
!1353 = !DIGlobalVariableExpression(var: !1354, expr: !DIExpression())
!1354 = distinct !DIGlobalVariable(name: "nvic_function_table", scope: !1283, file: !1279, line: 119, type: !1355, isLocal: false, isDefinition: true)
!1355 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1356, size: 4096, elements: !1362)
!1356 = !DIDerivedType(tag: DW_TAG_typedef, name: "nvic_function_t", file: !1279, line: 50, baseType: !1357)
!1357 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1279, line: 47, size: 64, elements: !1358)
!1358 = !{!1359, !1361}
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "nvic_callback", scope: !1357, file: !1279, line: 48, baseType: !1360, size: 32)
!1360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !568, size: 32)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "irq_pending", scope: !1357, file: !1279, line: 49, baseType: !61, size: 32, offset: 32)
!1362 = !{!1363}
!1363 = !DISubrange(count: 64)
!1364 = !DIGlobalVariableExpression(var: !1365, expr: !DIExpression())
!1365 = distinct !DIGlobalVariable(name: "defualt_irq_priority", scope: !1283, file: !1279, line: 52, type: !1366, isLocal: true, isDefinition: true)
!1366 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1065, size: 2048, elements: !1362)
!1367 = !{!1368}
!1368 = !DILocalVariable(name: "i", scope: !1278, file: !1279, line: 129, type: !61)
!1369 = !DIGlobalVariableExpression(var: !1370, expr: !DIExpression())
!1370 = distinct !DIGlobalVariable(name: "sd_dvfs_lock", scope: !1371, file: !1372, line: 54, type: !1553, isLocal: false, isDefinition: true)
!1371 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1372, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1373, retainedTypes: !1515, globals: !1552, splitDebugInlining: false, nameTableKind: None)
!1372 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_sd.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sd_read_write_data_dma/GCC")
!1373 = !{!1374, !1380, !1384, !1390, !1394, !1437, !1446, !1452, !1457, !1464, !1470, !1475, !1480, !1493, !1498, !1509, !417}
!1374 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1375, line: 801, baseType: !7, size: 32, elements: !1376)
!1375 = !DIFile(filename: "../../../../../driver/chip/inc/hal_sd.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sd_read_write_data_dma/GCC")
!1376 = !{!1377, !1378, !1379}
!1377 = !DIEnumerator(name: "HAL_SD_STATUS_BUSY", value: -2)
!1378 = !DIEnumerator(name: "HAL_SD_STATUS_ERROR", value: -1)
!1379 = !DIEnumerator(name: "HAL_SD_STATUS_OK", value: 0)
!1380 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !106, line: 1056, baseType: !18, size: 32, elements: !1381)
!1381 = !{!1382, !1383}
!1382 = !DIEnumerator(name: "HAL_SD_PORT_0", value: 0)
!1383 = !DIEnumerator(name: "HAL_SD_PORT_1", value: 1)
!1384 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1375, line: 839, baseType: !7, size: 32, elements: !1385)
!1385 = !{!1386, !1387, !1388, !1389}
!1386 = !DIEnumerator(name: "HAL_SD_EVENT_SUCCESS", value: 0)
!1387 = !DIEnumerator(name: "HAL_SD_EVENT_TRANSFER_ERROR", value: -1)
!1388 = !DIEnumerator(name: "HAL_SD_EVENT_CRC_ERROR", value: -2)
!1389 = !DIEnumerator(name: "HAL_SD_EVENT_DATA_TIMEOUT", value: -3)
!1390 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1375, line: 809, baseType: !18, size: 32, elements: !1391)
!1391 = !{!1392, !1393}
!1392 = !DIEnumerator(name: "HAL_SD_BUS_WIDTH_1", value: 1)
!1393 = !DIEnumerator(name: "HAL_SD_BUS_WIDTH_4", value: 2)
!1394 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1395, line: 291, baseType: !7, size: 32, elements: !1396)
!1395 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_sd_define.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sd_read_write_data_dma/GCC")
!1396 = !{!1397, !1398, !1399, !1400, !1401, !1402, !1403, !1404, !1405, !1406, !1407, !1408, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436}
!1397 = !DIEnumerator(name: "ERROR_SDIO_NOT_SUPPORT_4MI", value: -39)
!1398 = !DIEnumerator(name: "ERROR_CARD_IS_LOCKED", value: -38)
!1399 = !DIEnumerator(name: "ERROR_HIGH_SPEED_CONSUMPTION", value: -37)
!1400 = !DIEnumerator(name: "ERROR_HIGH_SPEED_NOT_SUPPORT", value: -36)
!1401 = !DIEnumerator(name: "ERROR_HIGH_SPEED_COMMON_ERROR", value: -35)
!1402 = !DIEnumerator(name: "ERROR_HIGH_SPEED_TIMEOUT", value: -34)
!1403 = !DIEnumerator(name: "ERROR_HIGH_SPEED_BUSY", value: -33)
!1404 = !DIEnumerator(name: "ERROR_MMC_SWITCH_ERROR", value: -32)
!1405 = !DIEnumerator(name: "ERROR_INVALID_BLOCK", value: -31)
!1406 = !DIEnumerator(name: "ERROR_ERRORS", value: -30)
!1407 = !DIEnumerator(name: "ERROR_AUTO_CALIBRATION_STATUS_ENABLE_FAILED", value: -29)
!1408 = !DIEnumerator(name: "ERROR_AUTO_CALIBRATION_TIMEOUT", value: -28)
!1409 = !DIEnumerator(name: "ERROR_AUTO_CALIBRATION_FAILED", value: -27)
!1410 = !DIEnumerator(name: "ERROR_NOT_FOUND", value: -26)
!1411 = !DIEnumerator(name: "ERROR_SD_HS_FAILED", value: -25)
!1412 = !DIEnumerator(name: "ERROR_COMMAND8_INVALID", value: -24)
!1413 = !DIEnumerator(name: "ERROR_SEND_EXT_CSD", value: -23)
!1414 = !DIEnumerator(name: "ERROR_MMC_BUS_HS_ERROR", value: -22)
!1415 = !DIEnumerator(name: "ERROR_COMMAND_OK_DATA_READ_FAILED", value: -21)
!1416 = !DIEnumerator(name: "ERROR_DAT_ERROR", value: -20)
!1417 = !DIEnumerator(name: "ERROR_OCR_NOT_SUPPORT", value: -19)
!1418 = !DIEnumerator(name: "ERROR_CARD_NOT_PRESENT", value: -18)
!1419 = !DIEnumerator(name: "ERROR_DATA_NOT_READY", value: -17)
!1420 = !DIEnumerator(name: "ERROR_WRITE_PROTECT", value: -16)
!1421 = !DIEnumerator(name: "ERROR_NO_RESPONSE", value: -15)
!1422 = !DIEnumerator(name: "ERROR_NOT_SUPPORT_4BITS", value: -14)
!1423 = !DIEnumerator(name: "ERROR_APPCOMMAND_FAILED", value: -13)
!1424 = !DIEnumerator(name: "ERROR_LOCK_UNLOCK_FAILED", value: -12)
!1425 = !DIEnumerator(name: "ERROR_STATUS", value: -11)
!1426 = !DIEnumerator(name: "ERROR_DATA_TIMEOUT", value: -10)
!1427 = !DIEnumerator(name: "ERROR_COMMAND_CRC_ERROR", value: -9)
!1428 = !DIEnumerator(name: "ERROR_RW_COMMAND_ERROR", value: -8)
!1429 = !DIEnumerator(name: "ERROR_DATA_CRC_ERROR", value: -7)
!1430 = !DIEnumerator(name: "ERROR_INVALID_BLOCK_LENGTH", value: -6)
!1431 = !DIEnumerator(name: "ERROR_INVALID_CARD", value: -5)
!1432 = !DIEnumerator(name: "ERROR_RCA_FAILED", value: -4)
!1433 = !DIEnumerator(name: "ERROR_R3_OCR_BUSY", value: -3)
!1434 = !DIEnumerator(name: "ERROR_APP_COMMAND_NOT_ACCEPT", value: -2)
!1435 = !DIEnumerator(name: "ERROR_COMMAND_TIMEOUT", value: -1)
!1436 = !DIEnumerator(name: "NO_ERROR", value: 0)
!1437 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1375, line: 816, baseType: !18, size: 32, elements: !1438)
!1438 = !{!1439, !1440, !1441, !1442, !1443, !1444, !1445}
!1439 = !DIEnumerator(name: "HAL_SD_TYPE_SD_CARD", value: 0)
!1440 = !DIEnumerator(name: "HAL_SD_TYPE_MMC_CARD", value: 1)
!1441 = !DIEnumerator(name: "HAL_SD_TYPE_SD20_LCS_CARD", value: 2)
!1442 = !DIEnumerator(name: "HAL_SD_TYPE_SD20_HCS_CARD", value: 3)
!1443 = !DIEnumerator(name: "HAL_SD_TYPE_MMC42_CARD", value: 4)
!1444 = !DIEnumerator(name: "HAL_SD_TYPE_CARD_TYPE_MAX", value: 5)
!1445 = !DIEnumerator(name: "HAL_SD_TYPE_UNKNOWN_CARD", value: 255)
!1446 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1395, line: 268, baseType: !18, size: 32, elements: !1447)
!1447 = !{!1448, !1449, !1450, !1451}
!1448 = !DIEnumerator(name: "EXT_CSD_ACCESS_MODE_COMMAND_SET", value: 0)
!1449 = !DIEnumerator(name: "EXT_CSD_ACCESS_MODE_SET_BIT", value: 1)
!1450 = !DIEnumerator(name: "EXT_CSD_ACCESS_MODE_CLEAR_BIT", value: 2)
!1451 = !DIEnumerator(name: "EXT_CSD_ACCESS_MODE_WRITE_BYTE", value: 3)
!1452 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1395, line: 280, baseType: !18, size: 32, elements: !1453)
!1453 = !{!1454, !1455, !1456}
!1454 = !DIEnumerator(name: "MMC_BUS_WIDTH_1", value: 0)
!1455 = !DIEnumerator(name: "MMC_BUS_WIDTH_4", value: 1)
!1456 = !DIEnumerator(name: "MMC_BUS_WIDTH_8", value: 2)
!1457 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1395, line: 252, baseType: !18, size: 32, elements: !1458)
!1458 = !{!1459, !1460, !1461, !1462, !1463}
!1459 = !DIEnumerator(name: "MMC_EXTENDED_CSD_VERSION_40", value: 0)
!1460 = !DIEnumerator(name: "MMC_EXTENDED_CSD_VERSION_41", value: 1)
!1461 = !DIEnumerator(name: "MMC_EXTENDED_CSD_VERSION_42", value: 2)
!1462 = !DIEnumerator(name: "MMC_EXTENDED_CSD_VERSION_43", value: 3)
!1463 = !DIEnumerator(name: "MMC_EXTENDED_CSD_VERSION_441", value: 5)
!1464 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1465, line: 84, baseType: !7, size: 32, elements: !1466)
!1465 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_msdc.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sd_read_write_data_dma/GCC")
!1466 = !{!1467, !1468, !1469}
!1467 = !DIEnumerator(name: "MSDC_FAIL", value: -1)
!1468 = !DIEnumerator(name: "MSDC_OK", value: 0)
!1469 = !DIEnumerator(name: "MSDC_INITIALIZED", value: 1)
!1470 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1465, line: 78, baseType: !18, size: 32, elements: !1471)
!1471 = !{!1472, !1473, !1474}
!1472 = !DIEnumerator(name: "MSDC_PORT_0", value: 0)
!1473 = !DIEnumerator(name: "MSDC_PORT_1", value: 1)
!1474 = !DIEnumerator(name: "MSDC_PORT_MAX", value: 2)
!1475 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1465, line: 90, baseType: !18, size: 32, elements: !1476)
!1476 = !{!1477, !1478, !1479}
!1477 = !DIEnumerator(name: "MSDC_OWNER_NONE", value: 0)
!1478 = !DIEnumerator(name: "MSDC_OWNER_SD", value: 1)
!1479 = !DIEnumerator(name: "MSDC_OWNER_SDIO", value: 2)
!1480 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1481, line: 63, baseType: !18, size: 32, elements: !1482)
!1481 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_sd_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sd_read_write_data_dma/GCC")
!1482 = !{!1483, !1484, !1485, !1486, !1487, !1488, !1489, !1490, !1491, !1492}
!1483 = !DIEnumerator(name: "IDLE_STA", value: 0)
!1484 = !DIEnumerator(name: "READY_STA", value: 1)
!1485 = !DIEnumerator(name: "IDENT_STA", value: 2)
!1486 = !DIEnumerator(name: "STBY_STA", value: 3)
!1487 = !DIEnumerator(name: "TRAN_STA", value: 4)
!1488 = !DIEnumerator(name: "DATA_STA", value: 5)
!1489 = !DIEnumerator(name: "RCV_STA", value: 6)
!1490 = !DIEnumerator(name: "PRG_STA", value: 7)
!1491 = !DIEnumerator(name: "DIS_STA", value: 8)
!1492 = !DIEnumerator(name: "INV_STA", value: 9)
!1493 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1481, line: 50, baseType: !18, size: 32, elements: !1494)
!1494 = !{!1495, !1496, !1497}
!1495 = !DIEnumerator(name: "SD_SPECIFICATION_101", value: 0)
!1496 = !DIEnumerator(name: "SD_SPECIFICATION_110", value: 1)
!1497 = !DIEnumerator(name: "SD_SPECIFICATION_200", value: 2)
!1498 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1465, line: 130, baseType: !18, size: 32, elements: !1499)
!1499 = !{!1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508}
!1500 = !DIEnumerator(name: "MSDC_FIFO_THRESHOLD_0", value: 0)
!1501 = !DIEnumerator(name: "MSDC_FIFO_THRESHOLD_1", value: 1)
!1502 = !DIEnumerator(name: "MSDC_FIFO_THRESHOLD_2", value: 2)
!1503 = !DIEnumerator(name: "MSDC_FIFO_THRESHOLD_3", value: 3)
!1504 = !DIEnumerator(name: "MSDC_FIFO_THRESHOLD_4", value: 4)
!1505 = !DIEnumerator(name: "MSDC_FIFO_THRESHOLD_5", value: 5)
!1506 = !DIEnumerator(name: "MSDC_FIFO_THRESHOLD_6", value: 6)
!1507 = !DIEnumerator(name: "MSDC_FIFO_THRESHOLD_7", value: 7)
!1508 = !DIEnumerator(name: "MSDC_FIFO_THRESHOLD_8", value: 8)
!1509 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1465, line: 163, baseType: !18, size: 32, elements: !1510)
!1510 = !{!1511, !1512, !1513, !1514}
!1511 = !DIEnumerator(name: "MSDC_DMA_SINGLE_MODE", value: 0)
!1512 = !DIEnumerator(name: "MSDC_DMA_4_BEAT_INCREMENT_BUSRT", value: 1)
!1513 = !DIEnumerator(name: "MSDC_DMA_8_BEAT_INCREMENT_BUSRT", value: 2)
!1514 = !DIEnumerator(name: "MSDC_DMA_BURST_MODE_MAX", value: 3)
!1515 = !{!1516, !88, !1548, !1549, !18, !61}
!1516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1517, size: 32)
!1517 = !DIDerivedType(tag: DW_TAG_typedef, name: "msdc_register_t", file: !56, line: 2556, baseType: !1518)
!1518 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 2530, size: 1056, elements: !1519)
!1519 = !{!1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1539, !1540, !1541, !1542, !1543, !1547}
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "MSDC_CFG", scope: !1518, file: !56, line: 2531, baseType: !60, size: 32)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "MSDC_STA", scope: !1518, file: !56, line: 2532, baseType: !60, size: 32, offset: 32)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "MSDC_INT", scope: !1518, file: !56, line: 2533, baseType: !324, size: 32, offset: 64)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "MSDC_PS", scope: !1518, file: !56, line: 2534, baseType: !60, size: 32, offset: 96)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "MSDC_DAT", scope: !1518, file: !56, line: 2535, baseType: !60, size: 32, offset: 128)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "MSDC_IOCON", scope: !1518, file: !56, line: 2536, baseType: !60, size: 32, offset: 160)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "MSDC_IOCON1", scope: !1518, file: !56, line: 2537, baseType: !60, size: 32, offset: 192)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVE1", scope: !1518, file: !56, line: 2538, baseType: !60, size: 32, offset: 224)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "SDC_CFG", scope: !1518, file: !56, line: 2539, baseType: !60, size: 32, offset: 256)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "SDC_CMD", scope: !1518, file: !56, line: 2540, baseType: !60, size: 32, offset: 288)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "SDC_ARG", scope: !1518, file: !56, line: 2541, baseType: !60, size: 32, offset: 320)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "SDC_STA", scope: !1518, file: !56, line: 2542, baseType: !324, size: 32, offset: 352)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "SDC_RESP0", scope: !1518, file: !56, line: 2543, baseType: !324, size: 32, offset: 384)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "SDC_RESP1", scope: !1518, file: !56, line: 2544, baseType: !324, size: 32, offset: 416)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "SDC_RESP2", scope: !1518, file: !56, line: 2545, baseType: !324, size: 32, offset: 448)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "SDC_RESP3", scope: !1518, file: !56, line: 2546, baseType: !324, size: 32, offset: 480)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "SDC_CMDSTA", scope: !1518, file: !56, line: 2547, baseType: !324, size: 32, offset: 512)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "SDC_DATSTA", scope: !1518, file: !56, line: 2548, baseType: !324, size: 32, offset: 544)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "SDC_CSTA", scope: !1518, file: !56, line: 2549, baseType: !324, size: 32, offset: 576)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "SDC_IRQMASK0", scope: !1518, file: !56, line: 2550, baseType: !60, size: 32, offset: 608)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "SDC_IRQMASK1", scope: !1518, file: !56, line: 2551, baseType: !60, size: 32, offset: 640)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "SDIO_CFG", scope: !1518, file: !56, line: 2552, baseType: !60, size: 32, offset: 672)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "SDIO_STA", scope: !1518, file: !56, line: 2553, baseType: !324, size: 32, offset: 704)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVE2", scope: !1518, file: !56, line: 2554, baseType: !1544, size: 288, offset: 736)
!1544 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 288, elements: !1545)
!1545 = !{!1546}
!1546 = !DISubrange(count: 9)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_RED", scope: !1518, file: !56, line: 2555, baseType: !60, size: 32, offset: 1024)
!1548 = !DIDerivedType(tag: DW_TAG_typedef, name: "msdc_port_t", file: !1465, line: 82, baseType: !1470)
!1549 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !62, line: 60, baseType: !1550)
!1550 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !64, line: 105, baseType: !1551)
!1551 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!1552 = !{!1369}
!1553 = !DIDerivedType(tag: DW_TAG_typedef, name: "dvfs_lock_t", file: !1554, line: 100, baseType: !1555)
!1554 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_dvfs_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sd_read_write_data_dma/GCC")
!1555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dvfs_lock_t", file: !1554, line: 93, size: 192, elements: !1556)
!1556 = !{!1557, !1558, !1559, !1560, !1631, !1633}
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "domain", scope: !1555, file: !1554, line: 94, baseType: !165, size: 32)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "addressee", scope: !1555, file: !1554, line: 95, baseType: !165, size: 32, offset: 32)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1555, file: !1554, line: 96, baseType: !18, size: 32, offset: 64)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "dm", scope: !1555, file: !1554, line: 97, baseType: !1561, size: 32, offset: 96)
!1561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1562, size: 32)
!1562 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dvfs_domain_t", file: !1554, line: 113, size: 512, elements: !1563)
!1563 = !{!1564, !1565, !1566, !1627, !1629, !1630}
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1562, file: !1554, line: 114, baseType: !165, size: 32)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1562, file: !1554, line: 115, baseType: !91, size: 8, offset: 32)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "opp", scope: !1562, file: !1554, line: 116, baseType: !1567, size: 352, offset: 64)
!1567 = !DIDerivedType(tag: DW_TAG_typedef, name: "dvfs_opp_t", file: !1554, line: 111, baseType: !1568)
!1568 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1554, line: 102, size: 352, elements: !1569)
!1569 = !{!1570, !1571, !1572, !1573, !1574, !1576, !1577, !1626}
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "cur_opp", scope: !1568, file: !1554, line: 103, baseType: !18, size: 32)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "opp_num", scope: !1568, file: !1554, line: 104, baseType: !61, size: 32, offset: 32)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "module_num", scope: !1568, file: !1554, line: 105, baseType: !18, size: 32, offset: 64)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "notification_num", scope: !1568, file: !1554, line: 106, baseType: !18, size: 32, offset: 96)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "voltage", scope: !1568, file: !1554, line: 107, baseType: !1575, size: 32, offset: 128)
!1575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1065, size: 32)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !1568, file: !1554, line: 108, baseType: !1575, size: 32, offset: 160)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1568, file: !1554, line: 109, baseType: !1578, size: 128, offset: 192)
!1578 = !DIDerivedType(tag: DW_TAG_typedef, name: "dvfs_opp_ops_t", file: !1554, line: 91, baseType: !1579)
!1579 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1554, line: 86, size: 128, elements: !1580)
!1580 = !{!1581, !1585, !1589, !1590}
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !1579, file: !1554, line: 87, baseType: !1582, size: 32)
!1582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1583, size: 32)
!1583 = !DISubroutineType(types: !1584)
!1584 = !{!91, !1561, !18, !18}
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "switch_voltage", scope: !1579, file: !1554, line: 88, baseType: !1586, size: 32, offset: 32)
!1586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1587, size: 32)
!1587 = !DISubroutineType(types: !1588)
!1588 = !{null, !1561, !18, !18}
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "switch_frequency", scope: !1579, file: !1554, line: 89, baseType: !1586, size: 32, offset: 64)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_module", scope: !1579, file: !1554, line: 90, baseType: !1591, size: 32, offset: 96)
!1591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1592, size: 32)
!1592 = !DISubroutineType(types: !1593)
!1593 = !{!1594, !1561, !1594}
!1594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1595, size: 32)
!1595 = !DIDerivedType(tag: DW_TAG_typedef, name: "dvfs_opp_module_t", file: !1554, line: 84, baseType: !1596)
!1596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dvfs_opp_module_t", file: !1554, line: 80, size: 96, elements: !1597)
!1597 = !{!1598, !1599, !1625}
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1596, file: !1554, line: 81, baseType: !165, size: 32)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "notification", scope: !1596, file: !1554, line: 82, baseType: !1600, size: 32, offset: 32)
!1600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1601, size: 32)
!1601 = !DIDerivedType(tag: DW_TAG_typedef, name: "dvfs_notification_t", file: !1554, line: 78, baseType: !1602)
!1602 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dvfs_notification_t", file: !1554, line: 69, size: 288, elements: !1603)
!1603 = !{!1604, !1605, !1606, !1607, !1619, !1620, !1622, !1624}
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "domain", scope: !1602, file: !1554, line: 70, baseType: !165, size: 32)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "module", scope: !1602, file: !1554, line: 71, baseType: !165, size: 32, offset: 32)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "addressee", scope: !1602, file: !1554, line: 72, baseType: !165, size: 32, offset: 64)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1602, file: !1554, line: 73, baseType: !1608, size: 64, offset: 96)
!1608 = !DIDerivedType(tag: DW_TAG_typedef, name: "dvfs_notification_ops_t", file: !1554, line: 67, baseType: !1609)
!1609 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1554, line: 64, size: 64, elements: !1610)
!1610 = !{!1611, !1615}
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !1609, file: !1554, line: 65, baseType: !1612, size: 32)
!1612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1613, size: 32)
!1613 = !DISubroutineType(types: !1614)
!1614 = !{!91, !61, !61}
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !1609, file: !1554, line: 66, baseType: !1616, size: 32, offset: 32)
!1616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1617, size: 32)
!1617 = !DISubroutineType(types: !1618)
!1618 = !{null, !61, !61}
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "dm", scope: !1602, file: !1554, line: 74, baseType: !1561, size: 32, offset: 160)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "mod", scope: !1602, file: !1554, line: 75, baseType: !1621, size: 32, offset: 192)
!1621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1596, size: 32)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1602, file: !1554, line: 76, baseType: !1623, size: 32, offset: 224)
!1623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1602, size: 32)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1602, file: !1554, line: 77, baseType: !1623, size: 32, offset: 256)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !1596, file: !1554, line: 83, baseType: !1575, size: 32, offset: 64)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1568, file: !1554, line: 110, baseType: !88, size: 32, offset: 320)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "lock_head", scope: !1562, file: !1554, line: 117, baseType: !1628, size: 32, offset: 416)
!1628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1553, size: 32)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "lock_end", scope: !1562, file: !1554, line: 118, baseType: !1628, size: 32, offset: 448)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1562, file: !1554, line: 119, baseType: !1561, size: 32, offset: 480)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1555, file: !1554, line: 98, baseType: !1632, size: 32, offset: 128)
!1632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1555, size: 32)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1555, file: !1554, line: 99, baseType: !1632, size: 32, offset: 160)
!1634 = !DIGlobalVariableExpression(var: !1635, expr: !DIExpression())
!1635 = distinct !DIGlobalVariable(name: "sd_information", scope: !1636, file: !1637, line: 49, type: !1927, isLocal: false, isDefinition: true)
!1636 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1637, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1638, retainedTypes: !1685, globals: !1883, splitDebugInlining: false, nameTableKind: None)
!1637 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_sd_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sd_read_write_data_dma/GCC")
!1638 = !{!1394, !1380, !119, !1470, !1480, !1437, !1639, !1644, !1498, !1509, !1457, !1650, !1654, !1374, !417, !1384, !1475, !1493, !1390}
!1639 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1481, line: 86, baseType: !18, size: 32, elements: !1640)
!1640 = !{!1641, !1642, !1643}
!1641 = !DIEnumerator(name: "SD_COMMAND8_RESPONSE_NO_RESPONSE", value: 0)
!1642 = !DIEnumerator(name: "SD_COMMAND8_RESPONSE_INVALID", value: 1)
!1643 = !DIEnumerator(name: "SD_COMMAND8_RESPONSE_VALID", value: 2)
!1644 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1481, line: 43, baseType: !18, size: 32, elements: !1645)
!1645 = !{!1646, !1647, !1648, !1649}
!1646 = !DIEnumerator(name: "CSD_VERSION_1_0", value: 0)
!1647 = !DIEnumerator(name: "CSD_VERSION_1_1", value: 0)
!1648 = !DIEnumerator(name: "CSD_VERSION_2_0", value: 1)
!1649 = !DIEnumerator(name: "CSD_VERSION_EXT", value: 2)
!1650 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1481, line: 76, baseType: !18, size: 32, elements: !1651)
!1651 = !{!1652, !1653}
!1652 = !DIEnumerator(name: "MMC_HS_26M", value: 1)
!1653 = !DIEnumerator(name: "MMC_HS_52M", value: 2)
!1654 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1655, line: 57, baseType: !18, size: 32, elements: !1656)
!1655 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_pmu_wrap_interface.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sd_read_write_data_dma/GCC")
!1656 = !{!1657, !1658, !1659, !1660, !1661, !1662, !1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1680, !1681, !1682, !1683, !1684}
!1657 = !DIEnumerator(name: "PMIC_VOL_0P7V", value: 0)
!1658 = !DIEnumerator(name: "PMIC_VOL_0P8V", value: 1)
!1659 = !DIEnumerator(name: "PMIC_VOL_0P9V", value: 2)
!1660 = !DIEnumerator(name: "PMIC_VOL_1P0V", value: 3)
!1661 = !DIEnumerator(name: "PMIC_VOL_1P1V", value: 4)
!1662 = !DIEnumerator(name: "PMIC_VOL_1P2V", value: 5)
!1663 = !DIEnumerator(name: "PMIC_VOL_1P3V", value: 6)
!1664 = !DIEnumerator(name: "PMIC_VOL_1P4V", value: 7)
!1665 = !DIEnumerator(name: "PMIC_VOL_1P5V", value: 8)
!1666 = !DIEnumerator(name: "PMIC_VOL_1P6V", value: 9)
!1667 = !DIEnumerator(name: "PMIC_VOL_1P7V", value: 10)
!1668 = !DIEnumerator(name: "PMIC_VOL_1P8V", value: 11)
!1669 = !DIEnumerator(name: "PMIC_VOL_1P9V", value: 12)
!1670 = !DIEnumerator(name: "PMIC_VOL_2P0V", value: 13)
!1671 = !DIEnumerator(name: "PMIC_VOL_2P1V", value: 14)
!1672 = !DIEnumerator(name: "PMIC_VOL_2P2V", value: 15)
!1673 = !DIEnumerator(name: "PMIC_VOL_2P3V", value: 16)
!1674 = !DIEnumerator(name: "PMIC_VOL_2P4V", value: 17)
!1675 = !DIEnumerator(name: "PMIC_VOL_2P5V", value: 18)
!1676 = !DIEnumerator(name: "PMIC_VOL_2P6V", value: 19)
!1677 = !DIEnumerator(name: "PMIC_VOL_2P7V", value: 20)
!1678 = !DIEnumerator(name: "PMIC_VOL_2P8V", value: 21)
!1679 = !DIEnumerator(name: "PMIC_VOL_2P9V", value: 22)
!1680 = !DIEnumerator(name: "PMIC_VOL_3P0V", value: 23)
!1681 = !DIEnumerator(name: "PMIC_VOL_3P1V", value: 24)
!1682 = !DIEnumerator(name: "PMIC_VOL_3P2V", value: 25)
!1683 = !DIEnumerator(name: "PMIC_VOL_3P3V", value: 26)
!1684 = !DIEnumerator(name: "PMIC_VOL_ERROR", value: 255)
!1685 = !{!1686, !1548, !1715, !159, !1055, !1549, !61, !1716, !1717, !1800, !88, !18, !1801, !1808}
!1686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1687, size: 32)
!1687 = !DIDerivedType(tag: DW_TAG_typedef, name: "msdc_register_t", file: !56, line: 2556, baseType: !1688)
!1688 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 2530, size: 1056, elements: !1689)
!1689 = !{!1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701, !1702, !1703, !1704, !1705, !1706, !1707, !1708, !1709, !1710, !1711, !1712, !1713, !1714}
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "MSDC_CFG", scope: !1688, file: !56, line: 2531, baseType: !60, size: 32)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "MSDC_STA", scope: !1688, file: !56, line: 2532, baseType: !60, size: 32, offset: 32)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "MSDC_INT", scope: !1688, file: !56, line: 2533, baseType: !324, size: 32, offset: 64)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "MSDC_PS", scope: !1688, file: !56, line: 2534, baseType: !60, size: 32, offset: 96)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "MSDC_DAT", scope: !1688, file: !56, line: 2535, baseType: !60, size: 32, offset: 128)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "MSDC_IOCON", scope: !1688, file: !56, line: 2536, baseType: !60, size: 32, offset: 160)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "MSDC_IOCON1", scope: !1688, file: !56, line: 2537, baseType: !60, size: 32, offset: 192)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVE1", scope: !1688, file: !56, line: 2538, baseType: !60, size: 32, offset: 224)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "SDC_CFG", scope: !1688, file: !56, line: 2539, baseType: !60, size: 32, offset: 256)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "SDC_CMD", scope: !1688, file: !56, line: 2540, baseType: !60, size: 32, offset: 288)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "SDC_ARG", scope: !1688, file: !56, line: 2541, baseType: !60, size: 32, offset: 320)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "SDC_STA", scope: !1688, file: !56, line: 2542, baseType: !324, size: 32, offset: 352)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "SDC_RESP0", scope: !1688, file: !56, line: 2543, baseType: !324, size: 32, offset: 384)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "SDC_RESP1", scope: !1688, file: !56, line: 2544, baseType: !324, size: 32, offset: 416)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "SDC_RESP2", scope: !1688, file: !56, line: 2545, baseType: !324, size: 32, offset: 448)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "SDC_RESP3", scope: !1688, file: !56, line: 2546, baseType: !324, size: 32, offset: 480)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "SDC_CMDSTA", scope: !1688, file: !56, line: 2547, baseType: !324, size: 32, offset: 512)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "SDC_DATSTA", scope: !1688, file: !56, line: 2548, baseType: !324, size: 32, offset: 544)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "SDC_CSTA", scope: !1688, file: !56, line: 2549, baseType: !324, size: 32, offset: 576)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "SDC_IRQMASK0", scope: !1688, file: !56, line: 2550, baseType: !60, size: 32, offset: 608)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "SDC_IRQMASK1", scope: !1688, file: !56, line: 2551, baseType: !60, size: 32, offset: 640)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "SDIO_CFG", scope: !1688, file: !56, line: 2552, baseType: !60, size: 32, offset: 672)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "SDIO_STA", scope: !1688, file: !56, line: 2553, baseType: !324, size: 32, offset: 704)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVE2", scope: !1688, file: !56, line: 2554, baseType: !1544, size: 288, offset: 736)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_RED", scope: !1688, file: !56, line: 2555, baseType: !60, size: 32, offset: 1024)
!1715 = !DIDerivedType(tag: DW_TAG_typedef, name: "sd_state_t", file: !1481, line: 74, baseType: !1480)
!1716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !61, size: 32)
!1717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1718, size: 32)
!1718 = !DIDerivedType(tag: DW_TAG_typedef, name: "extended_csd_information_t", file: !1481, line: 163, baseType: !1719)
!1719 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1481, line: 94, size: 4096, elements: !1720)
!1720 = !{!1721, !1725, !1726, !1730, !1731, !1732, !1733, !1734, !1735, !1736, !1737, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1797, !1798}
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "mmc44_reserved0", scope: !1719, file: !1481, line: 95, baseType: !1722, size: 1088)
!1722 = !DICompositeType(tag: DW_TAG_array_type, baseType: !159, size: 1088, elements: !1723)
!1723 = !{!1724}
!1724 = !DISubrange(count: 136)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "enh_start_addr", scope: !1719, file: !1481, line: 96, baseType: !61, size: 32, offset: 1088)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "enh_size_mult", scope: !1719, file: !1481, line: 97, baseType: !1727, size: 24, offset: 1120)
!1727 = !DICompositeType(tag: DW_TAG_array_type, baseType: !159, size: 24, elements: !1728)
!1728 = !{!1729}
!1729 = !DISubrange(count: 3)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "gp_size_mult", scope: !1719, file: !1481, line: 98, baseType: !791, size: 96, offset: 1144)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "partition_settig", scope: !1719, file: !1481, line: 99, baseType: !159, size: 8, offset: 1240)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "partition_attr", scope: !1719, file: !1481, line: 100, baseType: !159, size: 8, offset: 1248)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "max_enh_size_mult", scope: !1719, file: !1481, line: 101, baseType: !1727, size: 24, offset: 1256)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "partition_support", scope: !1719, file: !1481, line: 102, baseType: !159, size: 8, offset: 1280)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "mmc44_reserved1", scope: !1719, file: !1481, line: 103, baseType: !159, size: 8, offset: 1288)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "rst_function", scope: !1719, file: !1481, line: 104, baseType: !159, size: 8, offset: 1296)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "mmc44_rev2", scope: !1719, file: !1481, line: 105, baseType: !1738, size: 40, offset: 1304)
!1738 = !DICompositeType(tag: DW_TAG_array_type, baseType: !159, size: 40, elements: !1314)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "rpmb_size_mul", scope: !1719, file: !1481, line: 106, baseType: !159, size: 8, offset: 1344)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "fw_config", scope: !1719, file: !1481, line: 107, baseType: !159, size: 8, offset: 1352)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "mmc44_reserved3", scope: !1719, file: !1481, line: 108, baseType: !159, size: 8, offset: 1360)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "user_wp", scope: !1719, file: !1481, line: 109, baseType: !159, size: 8, offset: 1368)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "mmc44_reserved4", scope: !1719, file: !1481, line: 110, baseType: !159, size: 8, offset: 1376)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "boot_wp", scope: !1719, file: !1481, line: 111, baseType: !159, size: 8, offset: 1384)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "mmc44_reserved5", scope: !1719, file: !1481, line: 112, baseType: !159, size: 8, offset: 1392)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "erase_grp_def", scope: !1719, file: !1481, line: 113, baseType: !159, size: 8, offset: 1400)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "mmc44_reserved6", scope: !1719, file: !1481, line: 114, baseType: !159, size: 8, offset: 1408)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "boot_bus_width", scope: !1719, file: !1481, line: 115, baseType: !159, size: 8, offset: 1416)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "boot_config_prot", scope: !1719, file: !1481, line: 116, baseType: !159, size: 8, offset: 1424)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "partition_config", scope: !1719, file: !1481, line: 117, baseType: !159, size: 8, offset: 1432)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "mmc44_reserved7", scope: !1719, file: !1481, line: 118, baseType: !159, size: 8, offset: 1440)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "erased_mem_cont", scope: !1719, file: !1481, line: 119, baseType: !159, size: 8, offset: 1448)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "mmc44_reserved8", scope: !1719, file: !1481, line: 120, baseType: !159, size: 8, offset: 1456)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "bus_width", scope: !1719, file: !1481, line: 121, baseType: !159, size: 8, offset: 1464)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "reserved2", scope: !1719, file: !1481, line: 122, baseType: !159, size: 8, offset: 1472)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "high_speed", scope: !1719, file: !1481, line: 123, baseType: !159, size: 8, offset: 1480)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "reserved3", scope: !1719, file: !1481, line: 124, baseType: !159, size: 8, offset: 1488)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "power_class", scope: !1719, file: !1481, line: 125, baseType: !159, size: 8, offset: 1496)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "reserved4", scope: !1719, file: !1481, line: 126, baseType: !159, size: 8, offset: 1504)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_set_rev", scope: !1719, file: !1481, line: 127, baseType: !159, size: 8, offset: 1512)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "reserved5", scope: !1719, file: !1481, line: 128, baseType: !159, size: 8, offset: 1520)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_set", scope: !1719, file: !1481, line: 129, baseType: !159, size: 8, offset: 1528)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "ext_csd_rev", scope: !1719, file: !1481, line: 130, baseType: !159, size: 8, offset: 1536)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "reserved7", scope: !1719, file: !1481, line: 131, baseType: !159, size: 8, offset: 1544)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "csd_structure", scope: !1719, file: !1481, line: 132, baseType: !159, size: 8, offset: 1552)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "reserved8", scope: !1719, file: !1481, line: 133, baseType: !159, size: 8, offset: 1560)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "card_type", scope: !1719, file: !1481, line: 134, baseType: !159, size: 8, offset: 1568)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "reserved9", scope: !1719, file: !1481, line: 135, baseType: !159, size: 8, offset: 1576)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "out_of_interrupt_time", scope: !1719, file: !1481, line: 136, baseType: !159, size: 8, offset: 1584)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "partition_switch_time", scope: !1719, file: !1481, line: 137, baseType: !159, size: 8, offset: 1592)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "pwr_52_195", scope: !1719, file: !1481, line: 138, baseType: !159, size: 8, offset: 1600)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "pwr_26_195", scope: !1719, file: !1481, line: 139, baseType: !159, size: 8, offset: 1608)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "pwr_52_360", scope: !1719, file: !1481, line: 140, baseType: !159, size: 8, offset: 1616)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "pwr_26_360", scope: !1719, file: !1481, line: 141, baseType: !159, size: 8, offset: 1624)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "reserved10", scope: !1719, file: !1481, line: 142, baseType: !159, size: 8, offset: 1632)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "min_perf_r_4_26", scope: !1719, file: !1481, line: 143, baseType: !159, size: 8, offset: 1640)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "min_perf_w_4_26", scope: !1719, file: !1481, line: 144, baseType: !159, size: 8, offset: 1648)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "min_perf_r_8_26_4_52", scope: !1719, file: !1481, line: 145, baseType: !159, size: 8, offset: 1656)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "min_perf_w_8_26_4_52", scope: !1719, file: !1481, line: 146, baseType: !159, size: 8, offset: 1664)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "min_perf_r_8_52", scope: !1719, file: !1481, line: 147, baseType: !159, size: 8, offset: 1672)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "min_perf_w_8_52", scope: !1719, file: !1481, line: 148, baseType: !159, size: 8, offset: 1680)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "reserved11", scope: !1719, file: !1481, line: 149, baseType: !159, size: 8, offset: 1688)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "sec_count", scope: !1719, file: !1481, line: 150, baseType: !61, size: 32, offset: 1696)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "mmc44_reserved9", scope: !1719, file: !1481, line: 151, baseType: !1738, size: 40, offset: 1728)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "hc_wp_grp_size", scope: !1719, file: !1481, line: 152, baseType: !159, size: 8, offset: 1768)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "rel_wr_sec_c", scope: !1719, file: !1481, line: 153, baseType: !159, size: 8, offset: 1776)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "erase_timeout_mult", scope: !1719, file: !1481, line: 154, baseType: !159, size: 8, offset: 1784)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "hc_erase_grp_size", scope: !1719, file: !1481, line: 155, baseType: !159, size: 8, offset: 1792)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "acc_size", scope: !1719, file: !1481, line: 156, baseType: !159, size: 8, offset: 1800)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "boot_size_mul", scope: !1719, file: !1481, line: 157, baseType: !159, size: 8, offset: 1808)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "mmc44_reserved10", scope: !1719, file: !1481, line: 158, baseType: !159, size: 8, offset: 1816)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "boot_info", scope: !1719, file: !1481, line: 159, baseType: !159, size: 8, offset: 1824)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "mmc44_reserved11", scope: !1719, file: !1481, line: 160, baseType: !1794, size: 2200, offset: 1832)
!1794 = !DICompositeType(tag: DW_TAG_array_type, baseType: !159, size: 2200, elements: !1795)
!1795 = !{!1796}
!1796 = !DISubrange(count: 275)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "s_cmd_set", scope: !1719, file: !1481, line: 161, baseType: !159, size: 8, offset: 4032)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "reserved13", scope: !1719, file: !1481, line: 162, baseType: !1799, size: 56, offset: 4040)
!1799 = !DICompositeType(tag: DW_TAG_array_type, baseType: !159, size: 56, elements: !593)
!1800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !60, size: 32)
!1801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1802, size: 32)
!1802 = !DIDerivedType(tag: DW_TAG_typedef, name: "sd_dma_interrupt_context_t", file: !1481, line: 241, baseType: !1803)
!1803 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1481, line: 234, size: 288, elements: !1804)
!1804 = !{!1805, !1806, !1807, !1809}
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "sd_current_write_read_block_num", scope: !1803, file: !1481, line: 235, baseType: !61, size: 32)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "sd_cmd", scope: !1803, file: !1481, line: 236, baseType: !1212, size: 16, offset: 32)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "sd_port", scope: !1803, file: !1481, line: 237, baseType: !1808, size: 32, offset: 64)
!1808 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_sd_port_t", file: !106, line: 1059, baseType: !1380)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "sd_dvfs_lock", scope: !1803, file: !1481, line: 239, baseType: !1810, size: 192, offset: 96)
!1810 = !DIDerivedType(tag: DW_TAG_typedef, name: "dvfs_lock_t", file: !1554, line: 100, baseType: !1811)
!1811 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dvfs_lock_t", file: !1554, line: 93, size: 192, elements: !1812)
!1812 = !{!1813, !1814, !1815, !1816, !1880, !1882}
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "domain", scope: !1811, file: !1554, line: 94, baseType: !165, size: 32)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "addressee", scope: !1811, file: !1554, line: 95, baseType: !165, size: 32, offset: 32)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1811, file: !1554, line: 96, baseType: !18, size: 32, offset: 64)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "dm", scope: !1811, file: !1554, line: 97, baseType: !1817, size: 32, offset: 96)
!1817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1818, size: 32)
!1818 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dvfs_domain_t", file: !1554, line: 113, size: 512, elements: !1819)
!1819 = !{!1820, !1821, !1822, !1876, !1878, !1879}
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1818, file: !1554, line: 114, baseType: !165, size: 32)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1818, file: !1554, line: 115, baseType: !91, size: 8, offset: 32)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "opp", scope: !1818, file: !1554, line: 116, baseType: !1823, size: 352, offset: 64)
!1823 = !DIDerivedType(tag: DW_TAG_typedef, name: "dvfs_opp_t", file: !1554, line: 111, baseType: !1824)
!1824 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1554, line: 102, size: 352, elements: !1825)
!1825 = !{!1826, !1827, !1828, !1829, !1830, !1831, !1832, !1875}
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "cur_opp", scope: !1824, file: !1554, line: 103, baseType: !18, size: 32)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "opp_num", scope: !1824, file: !1554, line: 104, baseType: !61, size: 32, offset: 32)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "module_num", scope: !1824, file: !1554, line: 105, baseType: !18, size: 32, offset: 64)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "notification_num", scope: !1824, file: !1554, line: 106, baseType: !18, size: 32, offset: 96)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "voltage", scope: !1824, file: !1554, line: 107, baseType: !1575, size: 32, offset: 128)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !1824, file: !1554, line: 108, baseType: !1575, size: 32, offset: 160)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1824, file: !1554, line: 109, baseType: !1833, size: 128, offset: 192)
!1833 = !DIDerivedType(tag: DW_TAG_typedef, name: "dvfs_opp_ops_t", file: !1554, line: 91, baseType: !1834)
!1834 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1554, line: 86, size: 128, elements: !1835)
!1835 = !{!1836, !1840, !1844, !1845}
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !1834, file: !1554, line: 87, baseType: !1837, size: 32)
!1837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1838, size: 32)
!1838 = !DISubroutineType(types: !1839)
!1839 = !{!91, !1817, !18, !18}
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "switch_voltage", scope: !1834, file: !1554, line: 88, baseType: !1841, size: 32, offset: 32)
!1841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1842, size: 32)
!1842 = !DISubroutineType(types: !1843)
!1843 = !{null, !1817, !18, !18}
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "switch_frequency", scope: !1834, file: !1554, line: 89, baseType: !1841, size: 32, offset: 64)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_module", scope: !1834, file: !1554, line: 90, baseType: !1846, size: 32, offset: 96)
!1846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1847, size: 32)
!1847 = !DISubroutineType(types: !1848)
!1848 = !{!1849, !1817, !1849}
!1849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1850, size: 32)
!1850 = !DIDerivedType(tag: DW_TAG_typedef, name: "dvfs_opp_module_t", file: !1554, line: 84, baseType: !1851)
!1851 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dvfs_opp_module_t", file: !1554, line: 80, size: 96, elements: !1852)
!1852 = !{!1853, !1854, !1874}
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1851, file: !1554, line: 81, baseType: !165, size: 32)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "notification", scope: !1851, file: !1554, line: 82, baseType: !1855, size: 32, offset: 32)
!1855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1856, size: 32)
!1856 = !DIDerivedType(tag: DW_TAG_typedef, name: "dvfs_notification_t", file: !1554, line: 78, baseType: !1857)
!1857 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dvfs_notification_t", file: !1554, line: 69, size: 288, elements: !1858)
!1858 = !{!1859, !1860, !1861, !1862, !1868, !1869, !1871, !1873}
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "domain", scope: !1857, file: !1554, line: 70, baseType: !165, size: 32)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "module", scope: !1857, file: !1554, line: 71, baseType: !165, size: 32, offset: 32)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "addressee", scope: !1857, file: !1554, line: 72, baseType: !165, size: 32, offset: 64)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1857, file: !1554, line: 73, baseType: !1863, size: 64, offset: 96)
!1863 = !DIDerivedType(tag: DW_TAG_typedef, name: "dvfs_notification_ops_t", file: !1554, line: 67, baseType: !1864)
!1864 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1554, line: 64, size: 64, elements: !1865)
!1865 = !{!1866, !1867}
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !1864, file: !1554, line: 65, baseType: !1612, size: 32)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !1864, file: !1554, line: 66, baseType: !1616, size: 32, offset: 32)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "dm", scope: !1857, file: !1554, line: 74, baseType: !1817, size: 32, offset: 160)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "mod", scope: !1857, file: !1554, line: 75, baseType: !1870, size: 32, offset: 192)
!1870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1851, size: 32)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1857, file: !1554, line: 76, baseType: !1872, size: 32, offset: 224)
!1872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1857, size: 32)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1857, file: !1554, line: 77, baseType: !1872, size: 32, offset: 256)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !1851, file: !1554, line: 83, baseType: !1575, size: 32, offset: 64)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1824, file: !1554, line: 110, baseType: !88, size: 32, offset: 320)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "lock_head", scope: !1818, file: !1554, line: 117, baseType: !1877, size: 32, offset: 416)
!1877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1810, size: 32)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "lock_end", scope: !1818, file: !1554, line: 118, baseType: !1877, size: 32, offset: 448)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1818, file: !1554, line: 119, baseType: !1817, size: 32, offset: 480)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1811, file: !1554, line: 98, baseType: !1881, size: 32, offset: 128)
!1881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1811, size: 32)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1811, file: !1554, line: 99, baseType: !1881, size: 32, offset: 160)
!1883 = !{!1634, !1884, !1889, !1891, !1893, !1896, !1898, !1913, !1916}
!1884 = !DIGlobalVariableExpression(var: !1885, expr: !DIExpression())
!1885 = distinct !DIGlobalVariable(name: "mmc_extended_csd", scope: !1636, file: !1637, line: 50, type: !1886, isLocal: true, isDefinition: true)
!1886 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 4096, elements: !1887)
!1887 = !{!1888}
!1888 = !DISubrange(count: 128)
!1889 = !DIGlobalVariableExpression(var: !1890, expr: !DIExpression())
!1890 = distinct !DIGlobalVariable(name: "sd_csd", scope: !1636, file: !1637, line: 51, type: !1275, isLocal: false, isDefinition: true)
!1891 = !DIGlobalVariableExpression(var: !1892, expr: !DIExpression())
!1892 = distinct !DIGlobalVariable(name: "sd_read_buffer", scope: !1636, file: !1637, line: 52, type: !1886, isLocal: true, isDefinition: true)
!1893 = !DIGlobalVariableExpression(var: !1894, expr: !DIExpression())
!1894 = distinct !DIGlobalVariable(name: "sd_dma_interrupt_context", scope: !1636, file: !1637, line: 57, type: !1895, isLocal: true, isDefinition: true)
!1895 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1802, size: 576, elements: !522)
!1896 = !DIGlobalVariableExpression(var: !1897, expr: !DIExpression())
!1897 = distinct !DIGlobalVariable(name: "sd_dma_interrupt_gpt_timer", scope: !1636, file: !1637, line: 58, type: !61, isLocal: true, isDefinition: true)
!1898 = !DIGlobalVariableExpression(var: !1899, expr: !DIExpression())
!1899 = distinct !DIGlobalVariable(name: "sd_backup_parameter", scope: !1636, file: !1637, line: 60, type: !1900, isLocal: true, isDefinition: true)
!1900 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1901)
!1901 = !DIDerivedType(tag: DW_TAG_typedef, name: "sd_backup_parameter_t", file: !1481, line: 231, baseType: !1902)
!1902 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1481, line: 227, size: 128, elements: !1903)
!1903 = !{!1904, !1911, !1912}
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1902, file: !1481, line: 228, baseType: !1905, size: 64)
!1905 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_sd_config_t", file: !1375, line: 859, baseType: !1906)
!1906 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1375, line: 856, size: 64, elements: !1907)
!1907 = !{!1908, !1910}
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "bus_width", scope: !1906, file: !1375, line: 857, baseType: !1909, size: 32)
!1909 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_sd_bus_width_t", file: !1375, line: 812, baseType: !1390)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1906, file: !1375, line: 858, baseType: !61, size: 32, offset: 32)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "sd_port", scope: !1902, file: !1481, line: 229, baseType: !1808, size: 32, offset: 64)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "is_initialized", scope: !1902, file: !1481, line: 230, baseType: !91, size: 8, offset: 96)
!1913 = !DIGlobalVariableExpression(var: !1914, expr: !DIExpression())
!1914 = distinct !DIGlobalVariable(name: "sd_backup_register", scope: !1636, file: !1637, line: 61, type: !1915, isLocal: true, isDefinition: true)
!1915 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1687)
!1916 = !DIGlobalVariableExpression(var: !1917, expr: !DIExpression())
!1917 = distinct !DIGlobalVariable(name: "count", scope: !1918, file: !1637, line: 1391, type: !159, isLocal: true, isDefinition: true)
!1918 = distinct !DISubprogram(name: "sd_dma_interrput_gpt_callback", scope: !1637, file: !1637, line: 1384, type: !153, scopeLine: 1385, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !1919)
!1919 = !{!1920, !1921, !1922, !1923, !1925, !1926}
!1920 = !DILocalVariable(name: "user_data", arg: 1, scope: !1918, file: !1637, line: 1384, type: !88)
!1921 = !DILocalVariable(name: "context", scope: !1918, file: !1637, line: 1386, type: !1801)
!1922 = !DILocalVariable(name: "response", scope: !1918, file: !1637, line: 1387, type: !61)
!1923 = !DILocalVariable(name: "status", scope: !1918, file: !1637, line: 1388, type: !1924)
!1924 = !DIDerivedType(tag: DW_TAG_typedef, name: "sd_internal_status_t", file: !1395, line: 332, baseType: !1394)
!1925 = !DILocalVariable(name: "dma_channel", scope: !1918, file: !1637, line: 1389, type: !1270)
!1926 = !DILocalVariable(name: "msdc_register_base", scope: !1918, file: !1637, line: 1390, type: !1686)
!1927 = !DIDerivedType(tag: DW_TAG_typedef, name: "sd_information_t", file: !1481, line: 216, baseType: !1928)
!1928 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1481, line: 196, size: 1280, elements: !1929)
!1929 = !{!1930, !1931, !1932, !1933, !1963, !1964, !1973, !1974, !1975, !1976, !1977, !1978, !1979, !1981, !1982, !1984, !1993, !1994, !1995}
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "sd_ocr", scope: !1928, file: !1481, line: 197, baseType: !61, size: 32)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "block_length", scope: !1928, file: !1481, line: 198, baseType: !61, size: 32, offset: 32)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "block_number", scope: !1928, file: !1481, line: 199, baseType: !61, size: 32, offset: 64)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "csd", scope: !1928, file: !1481, line: 200, baseType: !1934, size: 640, offset: 128)
!1934 = !DIDerivedType(tag: DW_TAG_typedef, name: "csd_information_t", file: !1481, line: 193, baseType: !1935)
!1935 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1481, line: 167, size: 640, elements: !1936)
!1936 = !{!1937, !1939, !1940, !1941, !1942, !1943, !1944, !1945, !1946, !1947, !1948, !1949, !1950, !1951, !1952, !1953, !1954, !1955, !1956, !1957, !1958, !1959, !1960, !1961, !1962}
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "csd_structure", scope: !1935, file: !1481, line: 168, baseType: !1938, size: 32)
!1938 = !DIDerivedType(tag: DW_TAG_typedef, name: "csd_version_t", file: !1481, line: 48, baseType: !1644)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "tacc", scope: !1935, file: !1481, line: 169, baseType: !159, size: 8, offset: 32)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "nsac", scope: !1935, file: !1481, line: 170, baseType: !159, size: 8, offset: 40)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "tran_speed", scope: !1935, file: !1481, line: 171, baseType: !159, size: 8, offset: 48)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "ccc", scope: !1935, file: !1481, line: 172, baseType: !1212, size: 16, offset: 64)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "write_bl_len", scope: !1935, file: !1481, line: 173, baseType: !61, size: 32, offset: 96)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "read_bl_len", scope: !1935, file: !1481, line: 174, baseType: !61, size: 32, offset: 128)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "write_blk_misalign", scope: !1935, file: !1481, line: 175, baseType: !159, size: 8, offset: 160)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "read_blk_misalign", scope: !1935, file: !1481, line: 176, baseType: !159, size: 8, offset: 168)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "write_bl_partial", scope: !1935, file: !1481, line: 177, baseType: !159, size: 8, offset: 176)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "read_bl_partial", scope: !1935, file: !1481, line: 178, baseType: !159, size: 8, offset: 184)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "dsr_imp", scope: !1935, file: !1481, line: 179, baseType: !159, size: 8, offset: 192)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "c_size", scope: !1935, file: !1481, line: 180, baseType: !61, size: 32, offset: 224)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "erase_blk_en", scope: !1935, file: !1481, line: 181, baseType: !159, size: 8, offset: 256)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "sector_size", scope: !1935, file: !1481, line: 182, baseType: !61, size: 32, offset: 288)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "wp_grg_size", scope: !1935, file: !1481, line: 183, baseType: !61, size: 32, offset: 320)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "wp_grp_enable", scope: !1935, file: !1481, line: 184, baseType: !159, size: 8, offset: 352)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "tmp_write_protect", scope: !1935, file: !1481, line: 185, baseType: !159, size: 8, offset: 360)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "perm_write_protect", scope: !1935, file: !1481, line: 186, baseType: !159, size: 8, offset: 368)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "wp_grp_size_mmc", scope: !1935, file: !1481, line: 187, baseType: !61, size: 32, offset: 384)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "erase_sec_size_mmc", scope: !1935, file: !1481, line: 188, baseType: !61, size: 32, offset: 416)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "erase_grp_size_mmc", scope: !1935, file: !1481, line: 189, baseType: !61, size: 32, offset: 448)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "spec_vers", scope: !1935, file: !1481, line: 190, baseType: !159, size: 8, offset: 480)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "ext_csd", scope: !1935, file: !1481, line: 191, baseType: !1717, size: 32, offset: 512)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !1935, file: !1481, line: 192, baseType: !1549, size: 64, offset: 576)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "cid", scope: !1928, file: !1481, line: 201, baseType: !1275, size: 128, offset: 768)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "scr", scope: !1928, file: !1481, line: 202, baseType: !1965, size: 64, offset: 896)
!1965 = !DIDerivedType(tag: DW_TAG_typedef, name: "scr_information_t", file: !1481, line: 61, baseType: !1966)
!1966 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1481, line: 56, size: 64, elements: !1967)
!1967 = !{!1968, !1969, !1970, !1971}
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "dat_after_erase", scope: !1966, file: !1481, line: 57, baseType: !159, size: 8)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !1966, file: !1481, line: 58, baseType: !159, size: 8, offset: 8)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "bus_width", scope: !1966, file: !1481, line: 59, baseType: !159, size: 8, offset: 16)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "spec_ver", scope: !1966, file: !1481, line: 60, baseType: !1972, size: 32, offset: 32)
!1972 = !DIDerivedType(tag: DW_TAG_typedef, name: "sd_specification_t", file: !1481, line: 54, baseType: !1493)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "rca", scope: !1928, file: !1481, line: 203, baseType: !61, size: 32, offset: 960)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "sd_state", scope: !1928, file: !1481, line: 204, baseType: !1715, size: 32, offset: 992)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "is_inactive", scope: !1928, file: !1481, line: 205, baseType: !91, size: 8, offset: 1024)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "bus_width", scope: !1928, file: !1481, line: 206, baseType: !159, size: 8, offset: 1032)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "is_write_protection", scope: !1928, file: !1481, line: 207, baseType: !91, size: 8, offset: 1040)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "is_locked", scope: !1928, file: !1481, line: 208, baseType: !91, size: 8, offset: 1048)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "command8_response", scope: !1928, file: !1481, line: 209, baseType: !1980, size: 32, offset: 1056)
!1980 = !DIDerivedType(tag: DW_TAG_typedef, name: "sd_command8_response_t", file: !1481, line: 90, baseType: !1639)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "error_status", scope: !1928, file: !1481, line: 210, baseType: !1349, size: 32, offset: 1088)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "card_type", scope: !1928, file: !1481, line: 211, baseType: !1983, size: 32, offset: 1120)
!1983 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_sd_card_type_t", file: !1375, line: 824, baseType: !1437)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "emmc_information", scope: !1928, file: !1481, line: 212, baseType: !1985, size: 96, offset: 1152)
!1985 = !DIDerivedType(tag: DW_TAG_typedef, name: "mmc_information_t", file: !1395, line: 266, baseType: !1986)
!1986 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1395, line: 260, size: 96, elements: !1987)
!1987 = !{!1988, !1989, !1990, !1991, !1992}
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "is_mmc_version_44", scope: !1986, file: !1395, line: 261, baseType: !91, size: 8)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "is_support_partition", scope: !1986, file: !1395, line: 262, baseType: !91, size: 8, offset: 8)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "is_support_enhanced_partition", scope: !1986, file: !1395, line: 263, baseType: !91, size: 8, offset: 16)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "boot_partition_size", scope: !1986, file: !1395, line: 264, baseType: !61, size: 32, offset: 32)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "group1_partition_size", scope: !1986, file: !1395, line: 265, baseType: !61, size: 32, offset: 64)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "is_initialized", scope: !1928, file: !1481, line: 213, baseType: !90, size: 8, offset: 1248)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "is_busy", scope: !1928, file: !1481, line: 214, baseType: !90, size: 8, offset: 1256)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "is_high_speed", scope: !1928, file: !1481, line: 215, baseType: !90, size: 8, offset: 1264)
!1996 = !DIGlobalVariableExpression(var: !1997, expr: !DIExpression())
!1997 = distinct !DIGlobalVariable(name: "dvfs_1p1v_need_sd_clock_tuning", scope: !1998, file: !1999, line: 75, type: !91, isLocal: false, isDefinition: true)
!1998 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1999, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2000, retainedTypes: !2048, globals: !2091, splitDebugInlining: false, nameTableKind: None)
!1999 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_msdc.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sd_read_write_data_dma/GCC")
!2000 = !{!1470, !119, !2001, !404, !173, !2022, !2028, !238, !1384, !417, !442, !1475, !1374, !1380, !427, !432, !1498, !1509, !2032, !2044, !1464, !636}
!2001 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2002, line: 228, baseType: !18, size: 32, elements: !2003)
!2002 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_clock_platform_mt2523.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sd_read_write_data_dma/GCC")
!2003 = !{!2004, !2005, !2006, !2007, !2008, !2009, !2010, !2011, !2012, !2013, !2014, !2015, !2016, !2017, !2018, !2019, !2020, !2021}
!2004 = !DIEnumerator(name: "BUS_MUX_SEL", value: 0)
!2005 = !DIEnumerator(name: "CM_MUX_SEL", value: 1)
!2006 = !DIEnumerator(name: "SFC_MUX_SEL", value: 2)
!2007 = !DIEnumerator(name: "SLCD_MUX_SEL", value: 3)
!2008 = !DIEnumerator(name: "BSI_MUX_SEL", value: 4)
!2009 = !DIEnumerator(name: "DSP_MUX_SEL", value: 5)
!2010 = !DIEnumerator(name: "CAM_MUX_SEL", value: 6)
!2011 = !DIEnumerator(name: "USB_MUX_SEL", value: 7)
!2012 = !DIEnumerator(name: "DISP_PWM_MUX_SEL", value: 8)
!2013 = !DIEnumerator(name: "MSDC0_MUX_SEL", value: 9)
!2014 = !DIEnumerator(name: "MSDC1_MUX_SEL", value: 10)
!2015 = !DIEnumerator(name: "LP_CLKSQ_MUX_SEL", value: 11)
!2016 = !DIEnumerator(name: "LP_LFOSC_MUX_SEL", value: 12)
!2017 = !DIEnumerator(name: "RG_SLCD_CK_SEL", value: 13)
!2018 = !DIEnumerator(name: "GP_F26M_GFMUX_SEL", value: 14)
!2019 = !DIEnumerator(name: "LP_F26M_GFMUX_SEL", value: 15)
!2020 = !DIEnumerator(name: "NR_MUXS", value: 16)
!2021 = !DIEnumerator(name: "CLK_MUX_SEL_NONE", value: 17)
!2022 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1465, line: 151, baseType: !18, size: 32, elements: !2023)
!2023 = !{!2024, !2025, !2026, !2027}
!2024 = !DIEnumerator(name: "MSDC_IO_4MA", value: 0)
!2025 = !DIEnumerator(name: "MSDC_IO_8MA", value: 1)
!2026 = !DIEnumerator(name: "MSDC_IO_12MA", value: 2)
!2027 = !DIEnumerator(name: "MSDC_IO_16MA", value: 3)
!2028 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1465, line: 158, baseType: !18, size: 32, elements: !2029)
!2029 = !{!2030, !2031}
!2030 = !DIEnumerator(name: "MSDC_IO_SLEW_FAST", value: 0)
!2031 = !DIEnumerator(name: "MSDC_IO_SLEW_SLOW", value: 1)
!2032 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1655, line: 88, baseType: !18, size: 32, elements: !2033)
!2033 = !{!2034, !2035, !2036, !2037, !2038, !2039, !2040, !2041, !2042, !2043}
!2034 = !DIEnumerator(name: "DRIVER_DVFS", value: 0)
!2035 = !DIEnumerator(name: "DRIVER_BT", value: 1)
!2036 = !DIEnumerator(name: "DRIVER_AUDIO", value: 2)
!2037 = !DIEnumerator(name: "DRIVER_USB", value: 3)
!2038 = !DIEnumerator(name: "DRIVER_CAMERA", value: 4)
!2039 = !DIEnumerator(name: "DRIVER_MSDC", value: 5)
!2040 = !DIEnumerator(name: "DRIVER_VIBR", value: 6)
!2041 = !DIEnumerator(name: "DRIVER_ACCDET", value: 7)
!2042 = !DIEnumerator(name: "DRIVER_ADC", value: 8)
!2043 = !DIEnumerator(name: "DRIVER_DAC", value: 9)
!2044 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1655, line: 101, baseType: !18, size: 32, elements: !2045)
!2045 = !{!2046, !2047}
!2046 = !DIEnumerator(name: "PMIC_CTL_DISABLE", value: 0)
!2047 = !DIEnumerator(name: "PMIC_CTL_ENABLE", value: 1)
!2048 = !{!2049, !61, !88, !1808, !2078, !1800, !2079, !2080, !2081, !2089}
!2049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2050, size: 32)
!2050 = !DIDerivedType(tag: DW_TAG_typedef, name: "msdc_register_t", file: !56, line: 2556, baseType: !2051)
!2051 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 2530, size: 1056, elements: !2052)
!2052 = !{!2053, !2054, !2055, !2056, !2057, !2058, !2059, !2060, !2061, !2062, !2063, !2064, !2065, !2066, !2067, !2068, !2069, !2070, !2071, !2072, !2073, !2074, !2075, !2076, !2077}
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "MSDC_CFG", scope: !2051, file: !56, line: 2531, baseType: !60, size: 32)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "MSDC_STA", scope: !2051, file: !56, line: 2532, baseType: !60, size: 32, offset: 32)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "MSDC_INT", scope: !2051, file: !56, line: 2533, baseType: !324, size: 32, offset: 64)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "MSDC_PS", scope: !2051, file: !56, line: 2534, baseType: !60, size: 32, offset: 96)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "MSDC_DAT", scope: !2051, file: !56, line: 2535, baseType: !60, size: 32, offset: 128)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "MSDC_IOCON", scope: !2051, file: !56, line: 2536, baseType: !60, size: 32, offset: 160)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "MSDC_IOCON1", scope: !2051, file: !56, line: 2537, baseType: !60, size: 32, offset: 192)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVE1", scope: !2051, file: !56, line: 2538, baseType: !60, size: 32, offset: 224)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "SDC_CFG", scope: !2051, file: !56, line: 2539, baseType: !60, size: 32, offset: 256)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "SDC_CMD", scope: !2051, file: !56, line: 2540, baseType: !60, size: 32, offset: 288)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "SDC_ARG", scope: !2051, file: !56, line: 2541, baseType: !60, size: 32, offset: 320)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "SDC_STA", scope: !2051, file: !56, line: 2542, baseType: !324, size: 32, offset: 352)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "SDC_RESP0", scope: !2051, file: !56, line: 2543, baseType: !324, size: 32, offset: 384)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "SDC_RESP1", scope: !2051, file: !56, line: 2544, baseType: !324, size: 32, offset: 416)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "SDC_RESP2", scope: !2051, file: !56, line: 2545, baseType: !324, size: 32, offset: 448)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "SDC_RESP3", scope: !2051, file: !56, line: 2546, baseType: !324, size: 32, offset: 480)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "SDC_CMDSTA", scope: !2051, file: !56, line: 2547, baseType: !324, size: 32, offset: 512)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "SDC_DATSTA", scope: !2051, file: !56, line: 2548, baseType: !324, size: 32, offset: 544)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "SDC_CSTA", scope: !2051, file: !56, line: 2549, baseType: !324, size: 32, offset: 576)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "SDC_IRQMASK0", scope: !2051, file: !56, line: 2550, baseType: !60, size: 32, offset: 608)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "SDC_IRQMASK1", scope: !2051, file: !56, line: 2551, baseType: !60, size: 32, offset: 640)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "SDIO_CFG", scope: !2051, file: !56, line: 2552, baseType: !60, size: 32, offset: 672)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "SDIO_STA", scope: !2051, file: !56, line: 2553, baseType: !324, size: 32, offset: 704)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVE2", scope: !2051, file: !56, line: 2554, baseType: !1544, size: 288, offset: 736)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_RED", scope: !2051, file: !56, line: 2555, baseType: !60, size: 32, offset: 1024)
!2078 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmic_power_ctrl_t", file: !1655, line: 104, baseType: !2044)
!2079 = !DIDerivedType(tag: DW_TAG_typedef, name: "msdc_driving_capability_t", file: !1465, line: 156, baseType: !2022)
!2080 = !DIDerivedType(tag: DW_TAG_typedef, name: "msdc_slew_rate_t", file: !1465, line: 161, baseType: !2028)
!2081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2082, size: 32)
!2082 = !DIDerivedType(tag: DW_TAG_typedef, name: "msdc_io_parameter_t", file: !1465, line: 177, baseType: !2083)
!2083 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1465, line: 172, size: 128, elements: !2084)
!2084 = !{!2085, !2086, !2087, !2088}
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "control_line_output_driving_capability", scope: !2083, file: !1465, line: 173, baseType: !2079, size: 32)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "data_line_output_driving_capability", scope: !2083, file: !1465, line: 174, baseType: !2079, size: 32, offset: 32)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "control_line_slew_rate", scope: !2083, file: !1465, line: 175, baseType: !2080, size: 32, offset: 64)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "data_line_slew_rate", scope: !2083, file: !1465, line: 176, baseType: !2080, size: 32, offset: 96)
!2089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2090, size: 32)
!2090 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !18)
!2091 = !{!1996, !2092, !2094, !2096, !2171, !2182, !2209, !2212}
!2092 = !DIGlobalVariableExpression(var: !2093, expr: !DIExpression())
!2093 = distinct !DIGlobalVariable(name: "dvfs_1p3v_need_sd_clock_tuning", scope: !1998, file: !1999, line: 76, type: !91, isLocal: false, isDefinition: true)
!2094 = !DIGlobalVariableExpression(var: !2095, expr: !DIExpression())
!2095 = distinct !DIGlobalVariable(name: "dvfs_save_sd_init_clock", scope: !1998, file: !1999, line: 77, type: !61, isLocal: false, isDefinition: true)
!2096 = !DIGlobalVariableExpression(var: !2097, expr: !DIExpression())
!2097 = distinct !DIGlobalVariable(name: "msdc_desc", scope: !1998, file: !1999, line: 79, type: !2098, isLocal: false, isDefinition: true)
!2098 = !DIDerivedType(tag: DW_TAG_typedef, name: "dvfs_notification_t", file: !1554, line: 78, baseType: !2099)
!2099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dvfs_notification_t", file: !1554, line: 69, size: 288, elements: !2100)
!2100 = !{!2101, !2102, !2103, !2104, !2110, !2166, !2168, !2170}
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "domain", scope: !2099, file: !1554, line: 70, baseType: !165, size: 32)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "module", scope: !2099, file: !1554, line: 71, baseType: !165, size: 32, offset: 32)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "addressee", scope: !2099, file: !1554, line: 72, baseType: !165, size: 32, offset: 64)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2099, file: !1554, line: 73, baseType: !2105, size: 64, offset: 96)
!2105 = !DIDerivedType(tag: DW_TAG_typedef, name: "dvfs_notification_ops_t", file: !1554, line: 67, baseType: !2106)
!2106 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1554, line: 64, size: 64, elements: !2107)
!2107 = !{!2108, !2109}
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !2106, file: !1554, line: 65, baseType: !1612, size: 32)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !2106, file: !1554, line: 66, baseType: !1616, size: 32, offset: 32)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "dm", scope: !2099, file: !1554, line: 74, baseType: !2111, size: 32, offset: 160)
!2111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2112, size: 32)
!2112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dvfs_domain_t", file: !1554, line: 113, size: 512, elements: !2113)
!2113 = !{!2114, !2115, !2116, !2152, !2164, !2165}
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2112, file: !1554, line: 114, baseType: !165, size: 32)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2112, file: !1554, line: 115, baseType: !91, size: 8, offset: 32)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "opp", scope: !2112, file: !1554, line: 116, baseType: !2117, size: 352, offset: 64)
!2117 = !DIDerivedType(tag: DW_TAG_typedef, name: "dvfs_opp_t", file: !1554, line: 111, baseType: !2118)
!2118 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1554, line: 102, size: 352, elements: !2119)
!2119 = !{!2120, !2121, !2122, !2123, !2124, !2125, !2126, !2151}
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "cur_opp", scope: !2118, file: !1554, line: 103, baseType: !18, size: 32)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "opp_num", scope: !2118, file: !1554, line: 104, baseType: !61, size: 32, offset: 32)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "module_num", scope: !2118, file: !1554, line: 105, baseType: !18, size: 32, offset: 64)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "notification_num", scope: !2118, file: !1554, line: 106, baseType: !18, size: 32, offset: 96)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "voltage", scope: !2118, file: !1554, line: 107, baseType: !1575, size: 32, offset: 128)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !2118, file: !1554, line: 108, baseType: !1575, size: 32, offset: 160)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2118, file: !1554, line: 109, baseType: !2127, size: 128, offset: 192)
!2127 = !DIDerivedType(tag: DW_TAG_typedef, name: "dvfs_opp_ops_t", file: !1554, line: 91, baseType: !2128)
!2128 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1554, line: 86, size: 128, elements: !2129)
!2129 = !{!2130, !2134, !2138, !2139}
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !2128, file: !1554, line: 87, baseType: !2131, size: 32)
!2131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2132, size: 32)
!2132 = !DISubroutineType(types: !2133)
!2133 = !{!91, !2111, !18, !18}
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "switch_voltage", scope: !2128, file: !1554, line: 88, baseType: !2135, size: 32, offset: 32)
!2135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2136, size: 32)
!2136 = !DISubroutineType(types: !2137)
!2137 = !{null, !2111, !18, !18}
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "switch_frequency", scope: !2128, file: !1554, line: 89, baseType: !2135, size: 32, offset: 64)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_module", scope: !2128, file: !1554, line: 90, baseType: !2140, size: 32, offset: 96)
!2140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2141, size: 32)
!2141 = !DISubroutineType(types: !2142)
!2142 = !{!2143, !2111, !2143}
!2143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2144, size: 32)
!2144 = !DIDerivedType(tag: DW_TAG_typedef, name: "dvfs_opp_module_t", file: !1554, line: 84, baseType: !2145)
!2145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dvfs_opp_module_t", file: !1554, line: 80, size: 96, elements: !2146)
!2146 = !{!2147, !2148, !2150}
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2145, file: !1554, line: 81, baseType: !165, size: 32)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "notification", scope: !2145, file: !1554, line: 82, baseType: !2149, size: 32, offset: 32)
!2149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2098, size: 32)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !2145, file: !1554, line: 83, baseType: !1575, size: 32, offset: 64)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2118, file: !1554, line: 110, baseType: !88, size: 32, offset: 320)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "lock_head", scope: !2112, file: !1554, line: 117, baseType: !2153, size: 32, offset: 416)
!2153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2154, size: 32)
!2154 = !DIDerivedType(tag: DW_TAG_typedef, name: "dvfs_lock_t", file: !1554, line: 100, baseType: !2155)
!2155 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dvfs_lock_t", file: !1554, line: 93, size: 192, elements: !2156)
!2156 = !{!2157, !2158, !2159, !2160, !2161, !2163}
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "domain", scope: !2155, file: !1554, line: 94, baseType: !165, size: 32)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "addressee", scope: !2155, file: !1554, line: 95, baseType: !165, size: 32, offset: 32)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2155, file: !1554, line: 96, baseType: !18, size: 32, offset: 64)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "dm", scope: !2155, file: !1554, line: 97, baseType: !2111, size: 32, offset: 96)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2155, file: !1554, line: 98, baseType: !2162, size: 32, offset: 128)
!2162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2155, size: 32)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2155, file: !1554, line: 99, baseType: !2162, size: 32, offset: 160)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "lock_end", scope: !2112, file: !1554, line: 118, baseType: !2153, size: 32, offset: 448)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2112, file: !1554, line: 119, baseType: !2111, size: 32, offset: 480)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "mod", scope: !2099, file: !1554, line: 75, baseType: !2167, size: 32, offset: 192)
!2167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2145, size: 32)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2099, file: !1554, line: 76, baseType: !2169, size: 32, offset: 224)
!2169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2099, size: 32)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2099, file: !1554, line: 77, baseType: !2169, size: 32, offset: 256)
!2171 = !DIGlobalVariableExpression(var: !2172, expr: !DIExpression())
!2172 = distinct !DIGlobalVariable(name: "msdc_output_clock", scope: !1998, file: !1999, line: 90, type: !2173, isLocal: false, isDefinition: true)
!2173 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2174, size: 448, elements: !593)
!2174 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2175)
!2175 = !DIDerivedType(tag: DW_TAG_typedef, name: "msdc_clock_t", file: !1465, line: 128, baseType: !2176)
!2176 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1465, line: 123, size: 64, elements: !2177)
!2177 = !{!2178, !2179, !2180, !2181}
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "output_clock", scope: !2176, file: !1465, line: 124, baseType: !61, size: 32)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "sclkf", scope: !2176, file: !1465, line: 125, baseType: !159, size: 8, offset: 32)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "clksrc_pat", scope: !2176, file: !1465, line: 126, baseType: !159, size: 8, offset: 40)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "clksrc", scope: !2176, file: !1465, line: 127, baseType: !159, size: 8, offset: 48)
!2182 = !DIGlobalVariableExpression(var: !2183, expr: !DIExpression())
!2183 = distinct !DIGlobalVariable(name: "msdc_config", scope: !1998, file: !1999, line: 54, type: !2184, isLocal: false, isDefinition: true)
!2184 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2185, size: 768, elements: !522)
!2185 = !DIDerivedType(tag: DW_TAG_typedef, name: "msdc_config_t", file: !1465, line: 121, baseType: !2186)
!2186 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1465, line: 96, size: 384, elements: !2187)
!2187 = !{!2188, !2191, !2192, !2193, !2194, !2195, !2196, !2197, !2198, !2199, !2200, !2201, !2202, !2203, !2204}
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2186, file: !1465, line: 97, baseType: !2189, size: 32)
!2189 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2190)
!2190 = !DIDerivedType(tag: DW_TAG_typedef, name: "msdc_owner_t", file: !1465, line: 94, baseType: !1475)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "msdc_clock", scope: !2186, file: !1465, line: 98, baseType: !61, size: 32, offset: 32)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "output_clock", scope: !2186, file: !1465, line: 99, baseType: !61, size: 32, offset: 64)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "interrupt_register", scope: !2186, file: !1465, line: 100, baseType: !61, size: 32, offset: 96)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "is_card_present", scope: !2186, file: !1465, line: 101, baseType: !90, size: 8, offset: 128)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "is_initialized", scope: !2186, file: !1465, line: 102, baseType: !90, size: 8, offset: 136)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "is_timeout", scope: !2186, file: !1465, line: 103, baseType: !90, size: 8, offset: 144)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "is_card_plug_out", scope: !2186, file: !1465, line: 104, baseType: !90, size: 8, offset: 152)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "command_status", scope: !2186, file: !1465, line: 105, baseType: !61, size: 32, offset: 160)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "data_status", scope: !2186, file: !1465, line: 106, baseType: !61, size: 32, offset: 192)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "dma_status", scope: !2186, file: !1465, line: 107, baseType: !60, size: 32, offset: 224)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "dma_count", scope: !2186, file: !1465, line: 108, baseType: !60, size: 32, offset: 256)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "dma_address", scope: !2186, file: !1465, line: 109, baseType: !60, size: 32, offset: 288)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "is_dma_write", scope: !2186, file: !1465, line: 110, baseType: !90, size: 8, offset: 320)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "msdc_sd_dma_interrupt_callback", scope: !2186, file: !1465, line: 116, baseType: !2205, size: 32, offset: 352)
!2205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2206, size: 32)
!2206 = !DISubroutineType(types: !2207)
!2207 = !{null, !2208, !88}
!2208 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_sd_callback_event_t", file: !1375, line: 844, baseType: !1384)
!2209 = !DIGlobalVariableExpression(var: !2210, expr: !DIExpression())
!2210 = distinct !DIGlobalVariable(name: "msdc_clock_before_dvfs", scope: !1998, file: !1999, line: 78, type: !2211, isLocal: true, isDefinition: true)
!2211 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 64, elements: !522)
!2212 = !DIGlobalVariableExpression(var: !2213, expr: !DIExpression())
!2213 = distinct !DIGlobalVariable(name: "msdc_pinmux_switch_flag", scope: !1998, file: !1999, line: 71, type: !60, isLocal: true, isDefinition: true)
!2214 = !DIGlobalVariableExpression(var: !2210, expr: !DIExpression(DW_OP_LLVM_fragment, 0, 32))
!2215 = !DIGlobalVariableExpression(var: !2210, expr: !DIExpression(DW_OP_LLVM_fragment, 32, 32))
!2216 = !DIGlobalVariableExpression(var: !2217, expr: !DIExpression())
!2217 = distinct !DIGlobalVariable(name: "DelayResume", scope: !2218, file: !2219, line: 55, type: !91, isLocal: false, isDefinition: true)
!2218 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2219, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2220, retainedTypes: !2234, globals: !2266, splitDebugInlining: false, nameTableKind: None)
!2219 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_mtd_common.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sd_read_write_data_dma/GCC")
!2220 = !{!2221, !2229, !2001}
!2221 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "sfi_clock_enum_t", file: !2222, line: 51, baseType: !18, size: 32, elements: !2223)
!2222 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_sfi_release.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sd_read_write_data_dma/GCC")
!2223 = !{!2224, !2225, !2226, !2227, !2228}
!2224 = !DIEnumerator(name: "SFI_CLK_UNKNOWN", value: 0)
!2225 = !DIEnumerator(name: "SFI_CLK_78MHZ", value: 78)
!2226 = !DIEnumerator(name: "SFI_CLK_104MHZ", value: 104)
!2227 = !DIEnumerator(name: "SFI_CLK_130MHZ", value: 130)
!2228 = !DIEnumerator(name: "SFI_CLK_166MHZ", value: 166)
!2229 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "sfi_voltage_enum_t", file: !2222, line: 62, baseType: !18, size: 32, elements: !2230)
!2230 = !{!2231, !2232, !2233}
!2231 = !DIEnumerator(name: "SFI_Voltage_UNKNOWN", value: 0)
!2232 = !DIEnumerator(name: "SFI_Voltage_18", value: 18)
!2233 = !DIEnumerator(name: "SFI_Voltage_30", value: 30)
!2234 = !{!1716, !2235, !2257, !1055, !61, !18, !2089, !2263, !2264, !1800}
!2235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2236, size: 32)
!2236 = !DIDerivedType(tag: DW_TAG_typedef, name: "SFC_REGISTER_T", file: !56, line: 2777, baseType: !2237)
!2237 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 2758, size: 576, elements: !2238)
!2238 = !{!2239, !2240, !2241, !2242, !2243, !2244, !2245, !2246, !2247, !2248, !2249, !2250, !2251, !2252, !2253, !2254, !2255, !2256}
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_CTL", scope: !2237, file: !56, line: 2759, baseType: !60, size: 32)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DIRECT_CTL", scope: !2237, file: !56, line: 2760, baseType: !60, size: 32, offset: 32)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL", scope: !2237, file: !56, line: 2761, baseType: !60, size: 32, offset: 64)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL2", scope: !2237, file: !56, line: 2762, baseType: !60, size: 32, offset: 96)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_OUTL", scope: !2237, file: !56, line: 2763, baseType: !60, size: 32, offset: 128)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_INL", scope: !2237, file: !56, line: 2764, baseType: !60, size: 32, offset: 160)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_RESET_CTL", scope: !2237, file: !56, line: 2765, baseType: !60, size: 32, offset: 192)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_STA2_CTL", scope: !2237, file: !56, line: 2766, baseType: !60, size: 32, offset: 224)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL1", scope: !2237, file: !56, line: 2767, baseType: !60, size: 32, offset: 256)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL2", scope: !2237, file: !56, line: 2768, baseType: !60, size: 32, offset: 288)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL3", scope: !2237, file: !56, line: 2769, baseType: !60, size: 32, offset: 320)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DUMMY1", scope: !2237, file: !56, line: 2770, baseType: !60, size: 32, offset: 352)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL4", scope: !2237, file: !56, line: 2771, baseType: !60, size: 32, offset: 384)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL5", scope: !2237, file: !56, line: 2772, baseType: !60, size: 32, offset: 416)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL6", scope: !2237, file: !56, line: 2773, baseType: !60, size: 32, offset: 448)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DUMMY2", scope: !2237, file: !56, line: 2774, baseType: !60, size: 32, offset: 480)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DIRECT_CTL2", scope: !2237, file: !56, line: 2775, baseType: !60, size: 32, offset: 512)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL3", scope: !2237, file: !56, line: 2776, baseType: !60, size: 32, offset: 544)
!2257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2258, size: 32)
!2258 = !DIDerivedType(tag: DW_TAG_typedef, name: "SFC_GPRAM_REGISTER_T", file: !56, line: 2801, baseType: !2259)
!2259 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 2798, size: 64, elements: !2260)
!2260 = !{!2261, !2262}
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_GPRAM_DATA", scope: !2259, file: !56, line: 2799, baseType: !60, size: 32)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_GPRAM_DATA_OF_4", scope: !2259, file: !56, line: 2800, baseType: !60, size: 32, offset: 32)
!2263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1212, size: 32)
!2264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2265, size: 32)
!2265 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !161)
!2266 = !{!2216, !2267, !2269, !2271, !2273, !2275, !2277, !2279, !2281, !2283, !2285}
!2267 = !DIGlobalVariableExpression(var: !2268, expr: !DIExpression())
!2268 = distinct !DIGlobalVariable(name: "NOR_FLASH_LeaveDPDCmd", scope: !2218, file: !2219, line: 604, type: !159, isLocal: false, isDefinition: true)
!2269 = !DIGlobalVariableExpression(var: !2270, expr: !DIExpression())
!2270 = distinct !DIGlobalVariable(name: "NOR_FLASH_FATStartAddr", scope: !2218, file: !2219, line: 605, type: !61, isLocal: false, isDefinition: true)
!2271 = !DIGlobalVariableExpression(var: !2272, expr: !DIExpression())
!2272 = distinct !DIGlobalVariable(name: "NOR_FLASH_FATStartValue", scope: !2218, file: !2219, line: 606, type: !61, isLocal: false, isDefinition: true)
!2273 = !DIGlobalVariableExpression(var: !2274, expr: !DIExpression())
!2274 = distinct !DIGlobalVariable(name: "SFI_MAC_CTL_BACKUP", scope: !2218, file: !2219, line: 607, type: !61, isLocal: false, isDefinition: true)
!2275 = !DIGlobalVariableExpression(var: !2276, expr: !DIExpression())
!2276 = distinct !DIGlobalVariable(name: "SFI_DIRECT_CTL_BACKUP", scope: !2218, file: !2219, line: 608, type: !61, isLocal: false, isDefinition: true)
!2277 = !DIGlobalVariableExpression(var: !2278, expr: !DIExpression())
!2278 = distinct !DIGlobalVariable(name: "SFI_MISC_CTL_BACKUP", scope: !2218, file: !2219, line: 609, type: !61, isLocal: false, isDefinition: true)
!2279 = !DIGlobalVariableExpression(var: !2280, expr: !DIExpression())
!2280 = distinct !DIGlobalVariable(name: "SFI_MISC_CTL2_BACKUP", scope: !2218, file: !2219, line: 610, type: !61, isLocal: false, isDefinition: true)
!2281 = !DIGlobalVariableExpression(var: !2282, expr: !DIExpression())
!2282 = distinct !DIGlobalVariable(name: "SFI_DLY_CTL_3_BACKUP", scope: !2218, file: !2219, line: 611, type: !61, isLocal: false, isDefinition: true)
!2283 = !DIGlobalVariableExpression(var: !2284, expr: !DIExpression())
!2284 = distinct !DIGlobalVariable(name: "SFI_CLK_SWITCH_MISC_CTL_BACKUP", scope: !2218, file: !2219, line: 665, type: !61, isLocal: false, isDefinition: true)
!2285 = !DIGlobalVariableExpression(var: !2286, expr: !DIExpression())
!2286 = distinct !DIGlobalVariable(name: "SFI_CLK_SWITCH_DLY_CTL_3_BACKUP", scope: !2218, file: !2219, line: 666, type: !61, isLocal: false, isDefinition: true)
!2287 = !DIGlobalVariableExpression(var: !2288, expr: !DIExpression())
!2288 = distinct !DIGlobalVariable(name: "sf_dal_brbusy_wait", scope: !2289, file: !2290, line: 334, type: !91, isLocal: false, isDefinition: true)
!2289 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2290, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2291, retainedTypes: !2459, globals: !2596, splitDebugInlining: false, nameTableKind: None)
!2290 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_mtd_dal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sd_read_write_data_dma/GCC")
!2291 = !{!2292, !2383, !2389, !2396, !2408, !2419, !2428, !2437, !2441, !2445}
!2292 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2293, line: 58, baseType: !7, size: 32, elements: !2294)
!2293 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_fs_type.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sd_read_write_data_dma/GCC")
!2294 = !{!2295, !2296, !2297, !2298, !2299, !2300, !2301, !2302, !2303, !2304, !2305, !2306, !2307, !2308, !2309, !2310, !2311, !2312, !2313, !2314, !2315, !2316, !2317, !2318, !2319, !2320, !2321, !2322, !2323, !2324, !2325, !2326, !2327, !2328, !2329, !2330, !2331, !2332, !2333, !2334, !2335, !2336, !2337, !2338, !2339, !2340, !2341, !2342, !2343, !2344, !2345, !2346, !2347, !2348, !2349, !2350, !2351, !2352, !2353, !2354, !2355, !2356, !2357, !2358, !2359, !2360, !2361, !2362, !2363, !2364, !2365, !2366, !2367, !2368, !2369, !2370, !2371, !2372, !2373, !2374, !2375, !2376, !2377, !2378, !2379, !2380, !2381, !2382}
!2295 = !DIEnumerator(name: "FS_NO_ERROR", value: 0)
!2296 = !DIEnumerator(name: "FS_ERROR_RESERVED", value: -1)
!2297 = !DIEnumerator(name: "FS_PARAM_ERROR", value: -2)
!2298 = !DIEnumerator(name: "FS_INVALID_FILENAME", value: -3)
!2299 = !DIEnumerator(name: "FS_DRIVE_NOT_FOUND", value: -4)
!2300 = !DIEnumerator(name: "FS_TOO_MANY_FILES", value: -5)
!2301 = !DIEnumerator(name: "FS_NO_MORE_FILES", value: -6)
!2302 = !DIEnumerator(name: "FS_WRONG_MEDIA", value: -7)
!2303 = !DIEnumerator(name: "FS_INVALID_FILE_SYSTEM", value: -8)
!2304 = !DIEnumerator(name: "FS_FILE_NOT_FOUND", value: -9)
!2305 = !DIEnumerator(name: "FS_INVALID_FILE_HANDLE", value: -10)
!2306 = !DIEnumerator(name: "FS_UNSUPPORTED_DEVICE", value: -11)
!2307 = !DIEnumerator(name: "FS_UNSUPPORTED_DRIVER_FUNCTION", value: -12)
!2308 = !DIEnumerator(name: "FS_CORRUPTED_PARTITION_TABLE", value: -13)
!2309 = !DIEnumerator(name: "FS_TOO_MANY_DRIVES", value: -14)
!2310 = !DIEnumerator(name: "FS_INVALID_FILE_POS", value: -15)
!2311 = !DIEnumerator(name: "FS_ACCESS_DENIED", value: -16)
!2312 = !DIEnumerator(name: "FS_STRING_BUFFER_TOO_SMALL", value: -17)
!2313 = !DIEnumerator(name: "FS_GENERAL_FAILURE", value: -18)
!2314 = !DIEnumerator(name: "FS_PATH_NOT_FOUND", value: -19)
!2315 = !DIEnumerator(name: "FS_FAT_ALLOC_ERROR", value: -20)
!2316 = !DIEnumerator(name: "FS_ROOT_DIR_FULL", value: -21)
!2317 = !DIEnumerator(name: "FS_DISK_FULL", value: -22)
!2318 = !DIEnumerator(name: "FS_TIMEOUT", value: -23)
!2319 = !DIEnumerator(name: "FS_BAD_SECTOR", value: -24)
!2320 = !DIEnumerator(name: "FS_DATA_ERROR", value: -25)
!2321 = !DIEnumerator(name: "FS_MEDIA_CHANGED", value: -26)
!2322 = !DIEnumerator(name: "FS_SECTOR_NOT_FOUND", value: -27)
!2323 = !DIEnumerator(name: "FS_ADDRESS_MARK_NOT_FOUND", value: -28)
!2324 = !DIEnumerator(name: "FS_DRIVE_NOT_READY", value: -29)
!2325 = !DIEnumerator(name: "FS_WRITE_PROTECTION", value: -30)
!2326 = !DIEnumerator(name: "FS_DMA_OVERRUN", value: -31)
!2327 = !DIEnumerator(name: "FS_CRC_ERROR", value: -32)
!2328 = !DIEnumerator(name: "FS_DEVICE_RESOURCE_ERROR", value: -33)
!2329 = !DIEnumerator(name: "FS_INVALID_SECTOR_SIZE", value: -34)
!2330 = !DIEnumerator(name: "FS_OUT_OF_BUFFERS", value: -35)
!2331 = !DIEnumerator(name: "FS_FILE_EXISTS", value: -36)
!2332 = !DIEnumerator(name: "FS_LONG_FILE_POS", value: -37)
!2333 = !DIEnumerator(name: "FS_FILE_TOO_LARGE", value: -38)
!2334 = !DIEnumerator(name: "FS_BAD_DIR_ENTRY", value: -39)
!2335 = !DIEnumerator(name: "FS_ATTR_CONFLICT", value: -40)
!2336 = !DIEnumerator(name: "FS_CHECKDISK_RETRY", value: -41)
!2337 = !DIEnumerator(name: "FS_LACK_OF_PROTECTION_SPACE", value: -42)
!2338 = !DIEnumerator(name: "FS_SYSTEM_CRASH", value: -43)
!2339 = !DIEnumerator(name: "FS_FAIL_GET_MEM", value: -44)
!2340 = !DIEnumerator(name: "FS_READ_ONLY_ERROR", value: -45)
!2341 = !DIEnumerator(name: "FS_DEVICE_BUSY", value: -46)
!2342 = !DIEnumerator(name: "FS_ABORTED_ERROR", value: -47)
!2343 = !DIEnumerator(name: "FS_QUOTA_OVER_DISK_SPACE", value: -48)
!2344 = !DIEnumerator(name: "FS_PATH_OVER_LEN_ERROR", value: -49)
!2345 = !DIEnumerator(name: "FS_APP_QUOTA_FULL", value: -50)
!2346 = !DIEnumerator(name: "FS_VF_MAP_ERROR", value: -51)
!2347 = !DIEnumerator(name: "FS_DEVICE_EXPORTED_ERROR", value: -52)
!2348 = !DIEnumerator(name: "FS_DISK_FRAGMENT", value: -53)
!2349 = !DIEnumerator(name: "FS_DIRCACHE_EXPIRED", value: -54)
!2350 = !DIEnumerator(name: "FS_QUOTA_USAGE_WARNING", value: -55)
!2351 = !DIEnumerator(name: "FS_ERR_DIRDATA_LOCKED", value: -56)
!2352 = !DIEnumerator(name: "FS_INVALID_OPERATION", value: -57)
!2353 = !DIEnumerator(name: "FS_ERR_VF_PARENT_CLOSED", value: -58)
!2354 = !DIEnumerator(name: "FS_ERR_UNSUPPORTED_SERVICE", value: -59)
!2355 = !DIEnumerator(name: "FS_ERR_INVALID_JOB_ID", value: -81)
!2356 = !DIEnumerator(name: "FS_ERR_ASYNC_JOB_NOT_FOUND", value: -82)
!2357 = !DIEnumerator(name: "FS_MSDC_MOUNT_ERROR", value: -100)
!2358 = !DIEnumerator(name: "FS_MSDC_READ_SECTOR_ERROR", value: -101)
!2359 = !DIEnumerator(name: "FS_MSDC_WRITE_SECTOR_ERROR", value: -102)
!2360 = !DIEnumerator(name: "FS_MSDC_DISCARD_SECTOR_ERROR", value: -103)
!2361 = !DIEnumerator(name: "FS_MSDC_PRESNET_NOT_READY", value: -104)
!2362 = !DIEnumerator(name: "FS_MSDC_NOT_PRESENT", value: -105)
!2363 = !DIEnumerator(name: "FS_EXTERNAL_DEVICE_NOT_PRESENT", value: -106)
!2364 = !DIEnumerator(name: "FS_HIGH_LEVEL_FORMAT_ERROR", value: -107)
!2365 = !DIEnumerator(name: "FS_CARD_BATCHCOUNT_NOT_PRESENT", value: -110)
!2366 = !DIEnumerator(name: "FS_FLASH_MOUNT_ERROR", value: -120)
!2367 = !DIEnumerator(name: "FS_FLASH_ERASE_BUSY", value: -121)
!2368 = !DIEnumerator(name: "FS_NAND_DEVICE_NOT_SUPPORTED", value: -122)
!2369 = !DIEnumerator(name: "FS_FLASH_OTP_UNKNOWERR", value: -123)
!2370 = !DIEnumerator(name: "FS_FLASH_OTP_OVERSCOPE", value: -124)
!2371 = !DIEnumerator(name: "FS_FLASH_OTP_WRITEFAIL", value: -125)
!2372 = !DIEnumerator(name: "FS_FDM_VERSION_MISMATCH", value: -126)
!2373 = !DIEnumerator(name: "FS_FLASH_OTP_LOCK_ALREADY", value: -127)
!2374 = !DIEnumerator(name: "FS_FDM_FORMAT_ERROR", value: -128)
!2375 = !DIEnumerator(name: "FS_FDM_USER_DRIVE_BROKEN", value: -129)
!2376 = !DIEnumerator(name: "FS_FDM_SYS_DRIVE_BROKEN", value: -130)
!2377 = !DIEnumerator(name: "FS_FDM_MULTIPLE_BROKEN", value: -131)
!2378 = !DIEnumerator(name: "FS_LOCK_MUTEX_FAIL", value: -141)
!2379 = !DIEnumerator(name: "FS_NO_NONBLOCKMODE", value: -142)
!2380 = !DIEnumerator(name: "FS_NO_PROTECTIONMODE", value: -143)
!2381 = !DIEnumerator(name: "FS_DISK_SIZE_TOO_LARGE", value: -100)
!2382 = !DIEnumerator(name: "FS_MINIMUM_ERROR_CODE", value: -65536)
!2383 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2384, line: 81, baseType: !18, size: 32, elements: !2385)
!2384 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_mtd_sf_dal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sd_read_write_data_dma/GCC")
!2385 = !{!2386, !2387, !2388}
!2386 = !DIEnumerator(name: "SFDRV_READY", value: 0)
!2387 = !DIEnumerator(name: "SFDRV_PROGRAMMING", value: 1)
!2388 = !DIEnumerator(name: "SFDRV_ERASING", value: 2)
!2389 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2290, line: 298, baseType: !18, size: 32, elements: !2390)
!2390 = !{!2391, !2392, !2393, !2394, !2395}
!2391 = !DIEnumerator(name: "sf_fix_winbond_cv", value: 1)
!2392 = !DIEnumerator(name: "sf_fix_winbond_dw", value: 2)
!2393 = !DIEnumerator(name: "sf_fix_mxic_35e", value: 4)
!2394 = !DIEnumerator(name: "sf_fix_fidelix_q32a", value: 8)
!2395 = !DIEnumerator(name: "sf_fix_gigadevice_b", value: 16)
!2396 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2397, line: 51, baseType: !18, size: 32, elements: !2398)
!2397 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_sf.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sd_read_write_data_dma/GCC")
!2398 = !{!2399, !2400, !2401, !2402, !2403, !2404, !2405, !2406, !2407}
!2399 = !DIEnumerator(name: "SF_SR_BUSY", value: 0)
!2400 = !DIEnumerator(name: "SF_SR_WEL", value: 1)
!2401 = !DIEnumerator(name: "SF_SR_WSE", value: 2)
!2402 = !DIEnumerator(name: "SF_SR_WSP", value: 3)
!2403 = !DIEnumerator(name: "SF_SR_BP", value: 4)
!2404 = !DIEnumerator(name: "SF_SR_SRWD", value: 5)
!2405 = !DIEnumerator(name: "SF_SR_OTPLOCK", value: 6)
!2406 = !DIEnumerator(name: "SF_SR_FAIL", value: 7)
!2407 = !DIEnumerator(name: "SF_SR_COUNT", value: 8)
!2408 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2409, line: 110, baseType: !7, size: 32, elements: !2410)
!2409 = !DIFile(filename: "../../../../../driver/chip/inc/hal_flash.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sd_read_write_data_dma/GCC")
!2410 = !{!2411, !2412, !2413, !2414, !2415, !2416, !2417, !2418}
!2411 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_ERASE_FAIL", value: -7)
!2412 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_PROG_FAIL", value: -6)
!2413 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_NO_INIT", value: -5)
!2414 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_NO_SPACE", value: -4)
!2415 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_WRONG_ADDRESS", value: -3)
!2416 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_LOCKED", value: -2)
!2417 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR", value: -1)
!2418 = !DIEnumerator(name: "HAL_FLASH_STATUS_OK", value: 0)
!2419 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2397, line: 73, baseType: !18, size: 32, elements: !2420)
!2420 = !{!2421, !2422, !2423, !2424, !2425, !2426, !2427}
!2421 = !DIEnumerator(name: "SF_MXIC_SR_BUSY", value: 1)
!2422 = !DIEnumerator(name: "SF_MXIC_SR_WEL", value: 2)
!2423 = !DIEnumerator(name: "SF_MXIC_SR_WSE", value: 8)
!2424 = !DIEnumerator(name: "SF_MXIC_SR_WSP", value: 4)
!2425 = !DIEnumerator(name: "SF_MXIC_SR_BP", value: 60)
!2426 = !DIEnumerator(name: "SF_MXIC_SR_SRWD", value: 128)
!2427 = !DIEnumerator(name: "SF_MXIC_SR_ALL", value: 255)
!2428 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2397, line: 83, baseType: !18, size: 32, elements: !2429)
!2429 = !{!2430, !2431, !2432, !2433, !2434, !2435, !2436}
!2430 = !DIEnumerator(name: "SF_MXIC_SSR_OTP", value: 1)
!2431 = !DIEnumerator(name: "SF_MXIC_SSR_LDSO", value: 2)
!2432 = !DIEnumerator(name: "SF_MXIC_SSR_WSP", value: 4)
!2433 = !DIEnumerator(name: "SF_MXIC_SSR_WSE", value: 8)
!2434 = !DIEnumerator(name: "SF_MXIC_SSR_PFAIL", value: 32)
!2435 = !DIEnumerator(name: "SF_MXIC_SSR_EFAIL", value: 64)
!2436 = !DIEnumerator(name: "SF_MXIC_SSR_WPSEL", value: 128)
!2437 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2397, line: 98, baseType: !18, size: 32, elements: !2438)
!2438 = !{!2439, !2440}
!2439 = !DIEnumerator(name: "SF_WINBOND_SSR_SUS", value: 128)
!2440 = !DIEnumerator(name: "SF_WINBOND_SSR_OTP", value: 60)
!2441 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2384, line: 76, baseType: !18, size: 32, elements: !2442)
!2442 = !{!2443, !2444}
!2443 = !DIEnumerator(name: "SF_IOCTRL_UNLOCK_BLOCK", value: 0)
!2444 = !DIEnumerator(name: "SF_IOCTRL_GET_PROGRAM_FAIL_HANDLE_TYPE", value: 1)
!2445 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2384, line: 208, baseType: !18, size: 32, elements: !2446)
!2446 = !{!2447, !2448, !2449, !2450, !2451, !2452, !2453, !2454, !2455, !2456, !2457, !2458}
!2447 = !DIEnumerator(name: "SF_DAL_TYPE_NONE", value: 0)
!2448 = !DIEnumerator(name: "SF_DAL_TYPE_NUMONYX", value: 32)
!2449 = !DIEnumerator(name: "SF_DAL_TYPE_NUMONYX_W", value: 44)
!2450 = !DIEnumerator(name: "SF_DAL_TYPE_EON", value: 28)
!2451 = !DIEnumerator(name: "SF_DAL_TYPE_SST", value: 191)
!2452 = !DIEnumerator(name: "SF_DAL_TYPE_MXIC", value: 194)
!2453 = !DIEnumerator(name: "SF_DAL_TYPE_GIGADEVICE", value: 200)
!2454 = !DIEnumerator(name: "SF_DAL_TYPE_GIGADEVICE_MD", value: 81)
!2455 = !DIEnumerator(name: "SF_DAL_TYPE_WINBOND", value: 239)
!2456 = !DIEnumerator(name: "SF_DAL_TYPE_FIDELIX", value: 248)
!2457 = !DIEnumerator(name: "SF_DAL_TYPE_ESMT", value: 140)
!2458 = !DIEnumerator(name: "SF_DAL_TYPE_COUNT", value: 141)
!2459 = !{!61, !1716, !2263, !1055, !2460, !2567, !2589, !88, !2595, !161}
!2460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2461, size: 32)
!2461 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_Data", file: !2384, line: 193, baseType: !2462)
!2462 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2384, line: 134, size: 1824, elements: !2463)
!2463 = !{!2464, !2465, !2466, !2473, !2479, !2483, !2491, !2492, !2499, !2500, !2501, !2502, !2510, !2513, !2543, !2544, !2545, !2546, !2547, !2548, !2549, !2550, !2551, !2552, !2553, !2554, !2555, !2556, !2557, !2561, !2562, !2566}
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !2462, file: !2384, line: 136, baseType: !61, size: 32)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !2462, file: !2384, line: 137, baseType: !1055, size: 32, offset: 32)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !2462, file: !2384, line: 138, baseType: !2467, size: 32, offset: 64)
!2467 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !2468, line: 56, baseType: !2469)
!2468 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_kal_public_defs.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sd_read_write_data_dma/GCC")
!2469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2470, size: 32)
!2470 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2468, line: 54, size: 8, elements: !2471)
!2471 = !{!2472}
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !2470, file: !2468, line: 55, baseType: !159, size: 8)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !2462, file: !2384, line: 139, baseType: !2474, size: 32, offset: 96)
!2474 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !2468, line: 46, baseType: !2475)
!2475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2476, size: 32)
!2476 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2468, line: 44, size: 8, elements: !2477)
!2477 = !{!2478}
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !2476, file: !2468, line: 45, baseType: !159, size: 8)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !2462, file: !2384, line: 140, baseType: !2480, size: 8, offset: 128)
!2480 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !62, line: 20, baseType: !2481)
!2481 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int8_t", file: !64, line: 41, baseType: !2482)
!2482 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !2462, file: !2384, line: 143, baseType: !2484, size: 32, offset: 160)
!2484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2485, size: 32)
!2485 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !2486, line: 146, baseType: !2487)
!2486 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_drvflash.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sd_read_write_data_dma/GCC")
!2487 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2486, line: 143, size: 64, elements: !2488)
!2488 = !{!2489, !2490}
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !2487, file: !2486, line: 144, baseType: !61, size: 32)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !2487, file: !2486, line: 145, baseType: !61, size: 32, offset: 32)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !2462, file: !2384, line: 144, baseType: !1055, size: 32, offset: 192)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !2462, file: !2384, line: 145, baseType: !2493, size: 32, offset: 224)
!2493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2494, size: 32)
!2494 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !2486, line: 152, baseType: !2495)
!2495 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2486, line: 149, size: 64, elements: !2496)
!2496 = !{!2497, !2498}
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !2495, file: !2486, line: 150, baseType: !61, size: 32)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !2495, file: !2486, line: 151, baseType: !61, size: 32, offset: 32)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !2462, file: !2384, line: 146, baseType: !1055, size: 32, offset: 256)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !2462, file: !2384, line: 147, baseType: !61, size: 32, offset: 288)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !2462, file: !2384, line: 148, baseType: !1055, size: 32, offset: 320)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !2462, file: !2384, line: 151, baseType: !2503, size: 1024, offset: 352)
!2503 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2504, size: 1024, elements: !2509)
!2504 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !2486, line: 170, baseType: !2505)
!2505 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2486, line: 167, size: 64, elements: !2506)
!2506 = !{!2507, !2508}
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !2505, file: !2486, line: 168, baseType: !61, size: 32)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !2505, file: !2486, line: 169, baseType: !61, size: 32, offset: 32)
!2509 = !{!1047, !523}
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "StatusMap", scope: !2462, file: !2384, line: 155, baseType: !2511, size: 32, offset: 1376)
!2511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2512, size: 32)
!2512 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_Status", file: !2397, line: 120, baseType: !159)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "CMD", scope: !2462, file: !2384, line: 156, baseType: !2514, size: 32, offset: 1408)
!2514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2515, size: 32)
!2515 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_CMD", file: !2384, line: 124, baseType: !2516)
!2516 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2384, line: 90, size: 200, elements: !2517)
!2517 = !{!2518, !2519, !2520, !2521, !2522, !2523, !2524, !2525, !2526, !2527, !2528, !2529, !2530, !2531, !2532, !2533, !2534, !2535, !2536, !2537, !2538, !2539, !2540, !2541, !2542}
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "PageProg", scope: !2516, file: !2384, line: 91, baseType: !159, size: 8)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "WriteEnable", scope: !2516, file: !2384, line: 92, baseType: !159, size: 8, offset: 8)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "Suspend", scope: !2516, file: !2384, line: 94, baseType: !159, size: 8, offset: 16)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "Resume", scope: !2516, file: !2384, line: 95, baseType: !159, size: 8, offset: 24)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "Read", scope: !2516, file: !2384, line: 96, baseType: !159, size: 8, offset: 32)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "Erase", scope: !2516, file: !2384, line: 98, baseType: !159, size: 8, offset: 40)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "Erase4K", scope: !2516, file: !2384, line: 99, baseType: !159, size: 8, offset: 48)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "Erase32K", scope: !2516, file: !2384, line: 100, baseType: !159, size: 8, offset: 56)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "Erase64K", scope: !2516, file: !2384, line: 101, baseType: !159, size: 8, offset: 64)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_SPI", scope: !2516, file: !2384, line: 103, baseType: !159, size: 8, offset: 72)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_QPI", scope: !2516, file: !2384, line: 104, baseType: !159, size: 8, offset: 80)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "ReadBPReg", scope: !2516, file: !2384, line: 106, baseType: !159, size: 8, offset: 88)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "WriteBPReg", scope: !2516, file: !2384, line: 107, baseType: !159, size: 8, offset: 96)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSecurityReg", scope: !2516, file: !2384, line: 108, baseType: !159, size: 8, offset: 104)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "WriteSecurityReg", scope: !2516, file: !2384, line: 109, baseType: !159, size: 8, offset: 112)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSuspendReg", scope: !2516, file: !2384, line: 110, baseType: !159, size: 8, offset: 120)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "ReadReadyReg", scope: !2516, file: !2384, line: 111, baseType: !159, size: 8, offset: 128)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "ReadFailReg", scope: !2516, file: !2384, line: 112, baseType: !159, size: 8, offset: 136)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "EnterDPD", scope: !2516, file: !2384, line: 114, baseType: !159, size: 8, offset: 144)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "LeaveDPD", scope: !2516, file: !2384, line: 115, baseType: !159, size: 8, offset: 152)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "OTPProg", scope: !2516, file: !2384, line: 118, baseType: !159, size: 8, offset: 160)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !2516, file: !2384, line: 119, baseType: !159, size: 8, offset: 168)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "OTPEnter", scope: !2516, file: !2384, line: 120, baseType: !159, size: 8, offset: 176)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "OTPExit", scope: !2516, file: !2384, line: 121, baseType: !159, size: 8, offset: 184)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !2516, file: !2384, line: 122, baseType: !159, size: 8, offset: 192)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "Flag", scope: !2462, file: !2384, line: 157, baseType: !61, size: 32, offset: 1440)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "BPRBitCount", scope: !2462, file: !2384, line: 158, baseType: !1212, size: 16, offset: 1472)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "UniformBlock", scope: !2462, file: !2384, line: 159, baseType: !1212, size: 16, offset: 1488)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLength", scope: !2462, file: !2384, line: 163, baseType: !1212, size: 16, offset: 1504)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "OTPBase", scope: !2462, file: !2384, line: 164, baseType: !1212, size: 16, offset: 1520)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendLatency", scope: !2462, file: !2384, line: 167, baseType: !159, size: 8, offset: 1536)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "FlashID", scope: !2462, file: !2384, line: 168, baseType: !1727, size: 24, offset: 1544)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "DriverStatus", scope: !2462, file: !2384, line: 169, baseType: !159, size: 8, offset: 1568)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "AddressCycle", scope: !2462, file: !2384, line: 170, baseType: !159, size: 8, offset: 1576)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "CS", scope: !2462, file: !2384, line: 173, baseType: !1212, size: 16, offset: 1584)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "sf_dal_fix", scope: !2462, file: !2384, line: 174, baseType: !61, size: 32, offset: 1600)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "CS_Size", scope: !2462, file: !2384, line: 175, baseType: !61, size: 32, offset: 1632)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_BUSY", scope: !2462, file: !2384, line: 178, baseType: !91, size: 8, offset: 1664)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_SUSPENDED", scope: !2462, file: !2384, line: 179, baseType: !91, size: 8, offset: 1672)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "UnlockBlock", scope: !2462, file: !2384, line: 182, baseType: !2558, size: 32, offset: 1696)
!2558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2559, size: 32)
!2559 = !DISubroutineType(types: !2560)
!2560 = !{!7, !88}
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !2462, file: !2384, line: 186, baseType: !2558, size: 32, offset: 1728)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !2462, file: !2384, line: 187, baseType: !2563, size: 32, offset: 1760)
!2563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2564, size: 32)
!2564 = !DISubroutineType(types: !2565)
!2565 = !{!7, !88, !61, !88, !61}
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "OTPWrite", scope: !2462, file: !2384, line: 188, baseType: !2563, size: 32, offset: 1792)
!2567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2568, size: 32)
!2568 = !DIDerivedType(tag: DW_TAG_typedef, name: "SFC_REGISTER_T", file: !56, line: 2777, baseType: !2569)
!2569 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 2758, size: 576, elements: !2570)
!2570 = !{!2571, !2572, !2573, !2574, !2575, !2576, !2577, !2578, !2579, !2580, !2581, !2582, !2583, !2584, !2585, !2586, !2587, !2588}
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_CTL", scope: !2569, file: !56, line: 2759, baseType: !60, size: 32)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DIRECT_CTL", scope: !2569, file: !56, line: 2760, baseType: !60, size: 32, offset: 32)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL", scope: !2569, file: !56, line: 2761, baseType: !60, size: 32, offset: 64)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL2", scope: !2569, file: !56, line: 2762, baseType: !60, size: 32, offset: 96)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_OUTL", scope: !2569, file: !56, line: 2763, baseType: !60, size: 32, offset: 128)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_INL", scope: !2569, file: !56, line: 2764, baseType: !60, size: 32, offset: 160)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_RESET_CTL", scope: !2569, file: !56, line: 2765, baseType: !60, size: 32, offset: 192)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_STA2_CTL", scope: !2569, file: !56, line: 2766, baseType: !60, size: 32, offset: 224)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL1", scope: !2569, file: !56, line: 2767, baseType: !60, size: 32, offset: 256)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL2", scope: !2569, file: !56, line: 2768, baseType: !60, size: 32, offset: 288)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL3", scope: !2569, file: !56, line: 2769, baseType: !60, size: 32, offset: 320)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DUMMY1", scope: !2569, file: !56, line: 2770, baseType: !60, size: 32, offset: 352)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL4", scope: !2569, file: !56, line: 2771, baseType: !60, size: 32, offset: 384)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL5", scope: !2569, file: !56, line: 2772, baseType: !60, size: 32, offset: 416)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL6", scope: !2569, file: !56, line: 2773, baseType: !60, size: 32, offset: 448)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DUMMY2", scope: !2569, file: !56, line: 2774, baseType: !60, size: 32, offset: 480)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DIRECT_CTL2", scope: !2569, file: !56, line: 2775, baseType: !60, size: 32, offset: 512)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL3", scope: !2569, file: !56, line: 2776, baseType: !60, size: 32, offset: 544)
!2589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2590, size: 32)
!2590 = !DIDerivedType(tag: DW_TAG_typedef, name: "SFC_GPRAM_REGISTER_T", file: !56, line: 2801, baseType: !2591)
!2591 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 2798, size: 64, elements: !2592)
!2592 = !{!2593, !2594}
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_GPRAM_DATA", scope: !2591, file: !56, line: 2799, baseType: !60, size: 32)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_GPRAM_DATA_OF_4", scope: !2591, file: !56, line: 2800, baseType: !60, size: 32, offset: 32)
!2595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !592, size: 32)
!2596 = !{!2287, !2597, !2599, !2601, !2604}
!2597 = !DIGlobalVariableExpression(var: !2598, expr: !DIExpression())
!2598 = distinct !DIGlobalVariable(name: "sf_dal_resume_time", scope: !2289, file: !2290, line: 382, type: !61, isLocal: false, isDefinition: true)
!2599 = !DIGlobalVariableExpression(var: !2600, expr: !DIExpression())
!2600 = distinct !DIGlobalVariable(name: "sf_dal_flash_return_ready_max", scope: !2289, file: !2290, line: 383, type: !61, isLocal: false, isDefinition: true)
!2601 = !DIGlobalVariableExpression(var: !2602, expr: !DIExpression())
!2602 = distinct !DIGlobalVariable(name: "tmp_data_buffer", scope: !2289, file: !2290, line: 369, type: !2603, isLocal: true, isDefinition: true)
!2603 = !DICompositeType(tag: DW_TAG_array_type, baseType: !159, size: 1024, elements: !1887)
!2604 = !DIGlobalVariableExpression(var: !2605, expr: !DIExpression())
!2605 = distinct !DIGlobalVariable(name: "MTDMutex", scope: !2289, file: !2290, line: 1409, type: !7, isLocal: true, isDefinition: true)
!2606 = !DIGlobalVariableExpression(var: !2605, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 18446744073709551615, DW_OP_mul, DW_OP_constu, 1, DW_OP_plus, DW_OP_stack_value))
!2607 = !DIGlobalVariableExpression(var: !2608, expr: !DIExpression())
!2608 = distinct !DIGlobalVariable(name: "combo_mem_id_list", scope: !2609, file: !2663, line: 35, type: !2664, isLocal: false, isDefinition: true)
!2609 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2610, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2611, retainedTypes: !470, globals: !2657, splitDebugInlining: false, nameTableKind: None)
!2610 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_combo_init.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sd_read_write_data_dma/GCC")
!2611 = !{!2612}
!2612 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2613, line: 77, baseType: !18, size: 32, elements: !2614)
!2613 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_general_types.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sd_read_write_data_dma/GCC")
!2614 = !{!2615, !2616, !2617, !2618, !2619, !2620, !2621, !2622, !2623, !2624, !2625, !2626, !2627, !2628, !2629, !2630, !2631, !2632, !2633, !2634, !2635, !2636, !2637, !2638, !2639, !2640, !2641, !2642, !2643, !2644, !2645, !2646, !2647, !2648, !2649, !2650, !2651, !2652, !2653, !2654, !2655, !2656}
!2615 = !DIEnumerator(name: "GFH_FILE_INFO", value: 0)
!2616 = !DIEnumerator(name: "GFH_BL_INFO", value: 1)
!2617 = !DIEnumerator(name: "GFH_ANTI_CLONE", value: 2)
!2618 = !DIEnumerator(name: "GFH_BL_SEC_KEY", value: 3)
!2619 = !DIEnumerator(name: "GFH_SCTRL_CERT", value: 4)
!2620 = !DIEnumerator(name: "GFH_TOOL_AUTH", value: 5)
!2621 = !DIEnumerator(name: "GFH_MTK_RESERVED1", value: 6)
!2622 = !DIEnumerator(name: "GFH_BROM_CFG", value: 7)
!2623 = !DIEnumerator(name: "GFH_BROM_SEC_CFG", value: 8)
!2624 = !DIEnumerator(name: "GFH_MTK_RESERVED2", value: 9)
!2625 = !DIEnumerator(name: "GFH_MTK_RESERVED3", value: 10)
!2626 = !DIEnumerator(name: "GFH_ROOT_CERT", value: 11)
!2627 = !DIEnumerator(name: "GFH_EXP_CHK", value: 12)
!2628 = !DIEnumerator(name: "GFH_EPP_PARAM", value: 13)
!2629 = !DIEnumerator(name: "GFH_CHIP_VER", value: 14)
!2630 = !DIEnumerator(name: "GFH_MTK_RESERVED4", value: 15)
!2631 = !DIEnumerator(name: "GFH_MD_SEC_CFG", value: 16)
!2632 = !DIEnumerator(name: "GFH_EPP_INFO", value: 256)
!2633 = !DIEnumerator(name: "GFH_EMI_LIST", value: 257)
!2634 = !DIEnumerator(name: "GFH_CMEM_ID_INFO", value: 258)
!2635 = !DIEnumerator(name: "GFH_CMEM_NOR_INFO", value: 259)
!2636 = !DIEnumerator(name: "GFH_DSP_INFO", value: 260)
!2637 = !DIEnumerator(name: "GFH_MAUI_INFO", value: 512)
!2638 = !DIEnumerator(name: "GFH_MAUI_SEC", value: 513)
!2639 = !DIEnumerator(name: "GFH_MAUI_CODE_KEY", value: 514)
!2640 = !DIEnumerator(name: "GFH_MAUI_SECURE_RO_KEY", value: 515)
!2641 = !DIEnumerator(name: "GFH_MAUI_RESOURCE_KEY", value: 516)
!2642 = !DIEnumerator(name: "GFH_SECURE_RO_INFO", value: 517)
!2643 = !DIEnumerator(name: "GFH_DL_PACKAGE_INFO", value: 518)
!2644 = !DIEnumerator(name: "GFH_FLASH_INFO", value: 519)
!2645 = !DIEnumerator(name: "GFH_MACR_INFO", value: 520)
!2646 = !DIEnumerator(name: "GFH_ARM_BL_INFO", value: 521)
!2647 = !DIEnumerator(name: "GFH_EMMC_BOOTING_INFO", value: 522)
!2648 = !DIEnumerator(name: "GFH_FOTA_INFO", value: 523)
!2649 = !DIEnumerator(name: "GFH_CBR_RECORD_INFO", value: 524)
!2650 = !DIEnumerator(name: "GFH_CONFIDENTIAL_BIN_INFO", value: 525)
!2651 = !DIEnumerator(name: "GFH_CBR_INFO", value: 526)
!2652 = !DIEnumerator(name: "GFH_MBA_INFO", value: 527)
!2653 = !DIEnumerator(name: "GFH_BINARY_LOCATION", value: 528)
!2654 = !DIEnumerator(name: "GFH_BOOT_CERT_CTRL_CONTENT", value: 768)
!2655 = !DIEnumerator(name: "GFH_TYPE_NUM", value: 769)
!2656 = !DIEnumerator(name: "GFH_TYPE_END", value: 65535)
!2657 = !{!2607, !2658, !2661}
!2658 = !DIGlobalVariableExpression(var: !2659, expr: !DIExpression())
!2659 = distinct !DIGlobalVariable(name: "cmem_index", scope: !2609, file: !2610, line: 96, type: !2660, isLocal: true, isDefinition: true)
!2660 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!2661 = !DIGlobalVariableExpression(var: !2662, expr: !DIExpression())
!2662 = distinct !DIGlobalVariable(name: "cmem_emiinit_index", scope: !2609, file: !2610, line: 94, type: !2660, isLocal: true, isDefinition: true)
!2663 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_combo_id.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sd_read_write_data_dma/GCC")
!2664 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2665)
!2665 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_CMEM_ID_INFO_v1", file: !2610, line: 54, baseType: !2666)
!2666 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2610, line: 51, size: 576, elements: !2667)
!2667 = !{!2668, !2678}
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "m_gfh_hdr", scope: !2666, file: !2610, line: 52, baseType: !2669, size: 96)
!2669 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_Header", file: !2613, line: 152, baseType: !2670)
!2670 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GFH_Header", file: !2613, line: 144, size: 96, elements: !2671)
!2671 = !{!2672, !2674, !2676}
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "m_magic_ver", scope: !2670, file: !2613, line: 145, baseType: !2673, size: 32)
!2673 = !DIDerivedType(tag: DW_TAG_typedef, name: "U32", file: !2613, line: 61, baseType: !18)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "m_size", scope: !2670, file: !2613, line: 146, baseType: !2675, size: 16, offset: 32)
!2675 = !DIDerivedType(tag: DW_TAG_typedef, name: "U16", file: !2613, line: 62, baseType: !1214)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "m_type", scope: !2670, file: !2613, line: 150, baseType: !2677, size: 32, offset: 64)
!2677 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_TYPE", file: !2613, line: 127, baseType: !2612)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "m_data", scope: !2666, file: !2610, line: 53, baseType: !2679, size: 480, offset: 96)
!2679 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryIDList", file: !2680, line: 107, baseType: !2681)
!2680 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_combo_defs.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sd_read_write_data_dma/GCC")
!2681 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2680, line: 103, size: 480, elements: !2682)
!2682 = !{!2683, !2684, !2685}
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "m_ver", scope: !2681, file: !2680, line: 104, baseType: !18, size: 32)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "Count", scope: !2681, file: !2680, line: 105, baseType: !18, size: 32, offset: 32)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "List", scope: !2681, file: !2680, line: 106, baseType: !2686, size: 400, offset: 64)
!2686 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2687, size: 400, elements: !1314)
!2687 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryID", file: !2680, line: 100, baseType: !2688)
!2688 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2680, line: 92, size: 80, elements: !2689)
!2689 = !{!2690, !2691, !2692}
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceType", scope: !2688, file: !2680, line: 93, baseType: !159, size: 8)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "IDLength", scope: !2688, file: !2680, line: 94, baseType: !159, size: 8, offset: 8)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "ID", scope: !2688, file: !2680, line: 96, baseType: !2693, size: 64, offset: 16)
!2693 = !DICompositeType(tag: DW_TAG_array_type, baseType: !159, size: 64, elements: !1046)
!2694 = !DIGlobalVariableExpression(var: !2695, expr: !DIExpression())
!2695 = distinct !DIGlobalVariable(name: "FLASH_ID", scope: !2696, file: !2699, line: 96, type: !2700, isLocal: false, isDefinition: true)
!2696 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2697, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !2698, splitDebugInlining: false, nameTableKind: None)
!2697 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_custom.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sd_read_write_data_dma/GCC")
!2698 = !{!2694}
!2699 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_custom.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sd_read_write_data_dma/GCC")
!2700 = !DICompositeType(tag: DW_TAG_array_type, baseType: !166, size: 152, elements: !2701)
!2701 = !{!2702}
!2702 = !DISubrange(count: 19)
!2703 = !DIGlobalVariableExpression(var: !2704, expr: !DIExpression())
!2704 = distinct !DIGlobalVariable(name: "nor_egid", scope: !2705, file: !2706, line: 168, type: !3056, isLocal: false, isDefinition: true)
!2705 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2706, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2707, retainedTypes: !2718, globals: !2727, splitDebugInlining: false, nameTableKind: None)
!2706 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_combo_nor.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sd_read_write_data_dma/GCC")
!2707 = !{!2708, !2292, !2612}
!2708 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2709, line: 49, baseType: !18, size: 32, elements: !2710)
!2709 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_combo_init.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sd_read_write_data_dma/GCC")
!2710 = !{!2711, !2712, !2713, !2714, !2715, !2716, !2717}
!2711 = !DIEnumerator(name: "CMEM_NO_ERROR", value: 0)
!2712 = !DIEnumerator(name: "CMEM_ERR_ID_NOT_FOUND", value: 1)
!2713 = !DIEnumerator(name: "CMEM_ERR_FDM_MISMATCH", value: 2)
!2714 = !DIEnumerator(name: "CMEM_ERR_MTD_MISMATCH", value: 3)
!2715 = !DIEnumerator(name: "CMEM_ERR_FDM_INIT_FAIL", value: 4)
!2716 = !DIEnumerator(name: "CMEM_ERR_MTD_INIT_FAIL", value: 5)
!2717 = !DIEnumerator(name: "CMEM_ERR_FDM_REGION_INFO_OVERFLOW", value: 6)
!2718 = !{!2719, !61, !2721}
!2719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2720, size: 32)
!2720 = !DIDerivedType(tag: DW_TAG_typedef, name: "BYTE", file: !2293, line: 47, baseType: !161)
!2721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2722, size: 32)
!2722 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !2486, line: 146, baseType: !2723)
!2723 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2486, line: 143, size: 64, elements: !2724)
!2724 = !{!2725, !2726}
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !2723, file: !2486, line: 144, baseType: !61, size: 32)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !2723, file: !2486, line: 145, baseType: !61, size: 32, offset: 32)
!2727 = !{!2703, !2728, !2730, !2740, !2877, !2879, !2881, !2883, !2885, !2890, !2893, !2902, !2904, !2906, !2914, !2916, !2918, !3001, !3004, !3006, !3008, !3019, !3021, !3034}
!2728 = !DIGlobalVariableExpression(var: !2729, expr: !DIExpression())
!2729 = distinct !DIGlobalVariable(name: "cmem_nor_index", scope: !2705, file: !2706, line: 94, type: !1349, isLocal: true, isDefinition: true)
!2730 = !DIGlobalVariableExpression(var: !2731, expr: !DIExpression())
!2731 = distinct !DIGlobalVariable(name: "cmem_id", scope: !2705, file: !2706, line: 95, type: !2732, isLocal: false, isDefinition: true)
!2732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2733, size: 32)
!2733 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2734)
!2734 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryID", file: !2680, line: 100, baseType: !2735)
!2735 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2680, line: 92, size: 80, elements: !2736)
!2736 = !{!2737, !2738, !2739}
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceType", scope: !2735, file: !2680, line: 93, baseType: !159, size: 8)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "IDLength", scope: !2735, file: !2680, line: 94, baseType: !159, size: 8, offset: 8)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "ID", scope: !2735, file: !2680, line: 96, baseType: !2693, size: 64, offset: 16)
!2740 = !DIGlobalVariableExpression(var: !2741, expr: !DIExpression())
!2741 = distinct !DIGlobalVariable(name: "FlashDriveData", scope: !2705, file: !2706, line: 127, type: !2742, isLocal: false, isDefinition: true)
!2742 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_FLASH_DRV_Data", file: !2486, line: 317, baseType: !2743)
!2743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "NOR_FLASH_DRV_Data", file: !2486, line: 237, size: 2720, elements: !2744)
!2744 = !{!2745, !2746, !2798, !2799, !2802, !2803, !2816, !2817, !2818, !2819, !2820, !2821, !2822, !2823, !2824, !2825, !2826, !2827, !2828, !2829, !2830, !2831, !2832, !2833, !2834, !2835, !2836, !2837, !2844, !2845, !2846, !2851, !2852, !2853, !2854, !2855, !2859, !2863, !2870, !2871, !2872, !2873, !2874, !2875, !2876}
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "TotalFATSectors", scope: !2743, file: !2486, line: 238, baseType: !61, size: 32)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "MTDDriver", scope: !2743, file: !2486, line: 239, baseType: !2747, size: 32, offset: 32)
!2747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2748, size: 32)
!2748 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_Driver", file: !2486, line: 121, baseType: !2749)
!2749 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2486, line: 105, size: 480, elements: !2750)
!2750 = !{!2751, !2755, !2756, !2760, !2764, !2768, !2769, !2773, !2774, !2775, !2776, !2781, !2786, !2790, !2794}
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "MountDevice", scope: !2749, file: !2486, line: 106, baseType: !2752, size: 32)
!2752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2753, size: 32)
!2753 = !DISubroutineType(types: !2754)
!2754 = !{!7, !88, !88}
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "ShutDown", scope: !2749, file: !2486, line: 107, baseType: !2558, size: 32, offset: 32)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "MapWindow", scope: !2749, file: !2486, line: 108, baseType: !2757, size: 32, offset: 64)
!2757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2758, size: 32)
!2758 = !DISubroutineType(types: !2759)
!2759 = !{!88, !88, !61, !61}
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "EraseBlock", scope: !2749, file: !2486, line: 109, baseType: !2761, size: 32, offset: 96)
!2761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2762, size: 32)
!2762 = !DISubroutineType(types: !2763)
!2763 = !{!7, !88, !61}
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramData", scope: !2749, file: !2486, line: 110, baseType: !2765, size: 32, offset: 128)
!2765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2766, size: 32)
!2766 = !DISubroutineType(types: !2767)
!2767 = !{!7, !88, !88, !88, !61}
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "NonBlockEraseBlock", scope: !2749, file: !2486, line: 111, baseType: !2761, size: 32, offset: 160)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "CheckDeviceReady", scope: !2749, file: !2486, line: 112, baseType: !2770, size: 32, offset: 192)
!2770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2771, size: 32)
!2771 = !DISubroutineType(types: !2772)
!2772 = !{!1349, !88, !61}
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendErase", scope: !2749, file: !2486, line: 113, baseType: !2761, size: 32, offset: 224)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "ResumeErase", scope: !2749, file: !2486, line: 114, baseType: !2761, size: 32, offset: 256)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "BlankCheck", scope: !2749, file: !2486, line: 115, baseType: !2761, size: 32, offset: 288)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "OTPAccess", scope: !2749, file: !2486, line: 116, baseType: !2777, size: 32, offset: 320)
!2777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2778, size: 32)
!2778 = !DISubroutineType(types: !2779)
!2779 = !{!7, !88, !7, !2780, !88, !2780}
!2780 = !DIDerivedType(tag: DW_TAG_typedef, name: "UINT", file: !2293, line: 50, baseType: !18)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "OTPQueryLength", scope: !2749, file: !2486, line: 117, baseType: !2782, size: 32, offset: 352)
!2782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2783, size: 32)
!2783 = !DISubroutineType(types: !2784)
!2784 = !{!7, !88, !2785}
!2785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2780, size: 32)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "LockEraseBlkAddr", scope: !2749, file: !2486, line: 118, baseType: !2787, size: 32, offset: 384)
!2787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2788, size: 32)
!2788 = !DISubroutineType(types: !2789)
!2789 = !{!7, !88, !88, !61}
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "IsEraseSuspended", scope: !2749, file: !2486, line: 119, baseType: !2791, size: 32, offset: 416)
!2791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2792, size: 32)
!2792 = !DISubroutineType(types: !2793)
!2793 = !{!91, !88, !61}
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "IOCtrl", scope: !2749, file: !2486, line: 120, baseType: !2795, size: 32, offset: 448)
!2795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2796, size: 32)
!2796 = !DISubroutineType(types: !2797)
!2797 = !{!7, !88, !61, !88}
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "MTDData", scope: !2743, file: !2486, line: 240, baseType: !88, size: 32, offset: 64)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "AvailSectorsInBlock", scope: !2743, file: !2486, line: 241, baseType: !2800, size: 32, offset: 96)
!2800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2801, size: 32)
!2801 = !DIDerivedType(tag: DW_TAG_typedef, name: "WORD", file: !2293, line: 46, baseType: !1214)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "ValidSectorsInBlock", scope: !2743, file: !2486, line: 242, baseType: !2800, size: 32, offset: 128)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "FlashInfo", scope: !2743, file: !2486, line: 243, baseType: !2804, size: 928, offset: 160)
!2804 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_FlashInfo", file: !2486, line: 99, baseType: !2805)
!2805 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2486, line: 90, size: 928, elements: !2806)
!2806 = !{!2807, !2808, !2810, !2811, !2812, !2813, !2814, !2815}
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "TotalBlocks", scope: !2805, file: !2486, line: 91, baseType: !61, size: 32)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !2805, file: !2486, line: 92, baseType: !2809, size: 256, offset: 32)
!2809 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 256, elements: !1046)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "AvailInRegion", scope: !2805, file: !2486, line: 93, baseType: !2809, size: 256, offset: 288)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !2805, file: !2486, line: 94, baseType: !2809, size: 256, offset: 544)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "ActualRegionNum", scope: !2805, file: !2486, line: 95, baseType: !61, size: 32, offset: 800)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "PageSize", scope: !2805, file: !2486, line: 96, baseType: !2801, size: 16, offset: 832)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "baseUnlockBlock", scope: !2805, file: !2486, line: 97, baseType: !61, size: 32, offset: 864)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "endUnlockBlock", scope: !2805, file: !2486, line: 98, baseType: !61, size: 32, offset: 896)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "HeaderSize", scope: !2743, file: !2486, line: 244, baseType: !2809, size: 256, offset: 1088)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "SectorsPerBlock", scope: !2743, file: !2486, line: 245, baseType: !2809, size: 256, offset: 1344)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "ActiveBlock", scope: !2743, file: !2486, line: 246, baseType: !61, size: 32, offset: 1600)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "ReclaimEraseCount", scope: !2743, file: !2486, line: 247, baseType: !61, size: 32, offset: 1632)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "ReclaimBlockID", scope: !2743, file: !2486, line: 248, baseType: !61, size: 32, offset: 1664)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "TotalPhysicalSectors", scope: !2743, file: !2486, line: 249, baseType: !61, size: 32, offset: 1696)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "PartitionSectors", scope: !2743, file: !2486, line: 250, baseType: !61, size: 32, offset: 1728)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "GCBlockSectors", scope: !2743, file: !2486, line: 252, baseType: !61, size: 32, offset: 1760)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "GCHighThreshold", scope: !2743, file: !2486, line: 255, baseType: !61, size: 32, offset: 1792)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "GCMiddleThreshold", scope: !2743, file: !2486, line: 256, baseType: !61, size: 32, offset: 1824)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "GCLowThreshold", scope: !2743, file: !2486, line: 257, baseType: !61, size: 32, offset: 1856)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "AvailSectors", scope: !2743, file: !2486, line: 261, baseType: !61, size: 32, offset: 1888)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "DeletedSectors", scope: !2743, file: !2486, line: 262, baseType: !61, size: 32, offset: 1920)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "StartSector", scope: !2743, file: !2486, line: 263, baseType: !61, size: 32, offset: 1952)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "Sectors", scope: !2743, file: !2486, line: 264, baseType: !61, size: 32, offset: 1984)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "SectorsLeft", scope: !2743, file: !2486, line: 265, baseType: !61, size: 32, offset: 2016)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "BLOCKID_OFFSET", scope: !2743, file: !2486, line: 266, baseType: !61, size: 32, offset: 2048)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "SECTORIDX_MASK", scope: !2743, file: !2486, line: 267, baseType: !61, size: 32, offset: 2080)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "PHY_SECTOR_OFFSET", scope: !2743, file: !2486, line: 268, baseType: !61, size: 32, offset: 2112)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "MSTABLE_ENTRY_NUM", scope: !2743, file: !2486, line: 270, baseType: !61, size: 32, offset: 2144)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "MS_count", scope: !2743, file: !2486, line: 271, baseType: !61, size: 32, offset: 2176)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "MSEntryTable", scope: !2743, file: !2486, line: 272, baseType: !2838, size: 32, offset: 2208)
!2838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2839, size: 32)
!2839 = !DIDerivedType(tag: DW_TAG_typedef, name: "MS_ENTRY", file: !2486, line: 229, baseType: !2840)
!2840 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2486, line: 226, size: 64, elements: !2841)
!2841 = !{!2842, !2843}
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "LogicalSectorID", scope: !2840, file: !2486, line: 227, baseType: !61, size: 32)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "PysicalSectorID_new", scope: !2840, file: !2486, line: 228, baseType: !61, size: 32, offset: 32)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "SectorMap", scope: !2743, file: !2486, line: 273, baseType: !2719, size: 32, offset: 2240)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "Buffer", scope: !2743, file: !2486, line: 274, baseType: !2719, size: 32, offset: 2272)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "CompleteErase", scope: !2743, file: !2486, line: 276, baseType: !2847, size: 32, offset: 2304)
!2847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2848, size: 32)
!2848 = !DISubroutineType(types: !2849)
!2849 = !{null, !2850}
!2850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2743, size: 32)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "RegionMaxBlock", scope: !2743, file: !2486, line: 278, baseType: !61, size: 32, offset: 2336)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramFailHandle", scope: !2743, file: !2486, line: 280, baseType: !2847, size: 32, offset: 2368)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "ReclaimBlock_post", scope: !2743, file: !2486, line: 281, baseType: !2847, size: 32, offset: 2400)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "IdleReclaimBlockID", scope: !2743, file: !2486, line: 283, baseType: !61, size: 32, offset: 2432)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "SelectReclaimTarget", scope: !2743, file: !2486, line: 284, baseType: !2856, size: 32, offset: 2464)
!2856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2857, size: 32)
!2857 = !DISubroutineType(types: !2858)
!2858 = !{!61, !2850}
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "ReclaimOneSector", scope: !2743, file: !2486, line: 285, baseType: !2860, size: 32, offset: 2496)
!2860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2861, size: 32)
!2861 = !DISubroutineType(types: !2862)
!2862 = !{!61, !2850, !61, !61}
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "EraseQueue", scope: !2743, file: !2486, line: 293, baseType: !2864, size: 32, offset: 2528)
!2864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2865, size: 32)
!2865 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_EraseInfo", file: !2486, line: 162, baseType: !2866)
!2866 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2486, line: 159, size: 64, elements: !2867)
!2867 = !{!2868, !2869}
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !2866, file: !2486, line: 160, baseType: !61, size: 32)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "EraseCount", scope: !2866, file: !2486, line: 161, baseType: !61, size: 32, offset: 32)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "processedBankAddr", scope: !2743, file: !2486, line: 295, baseType: !61, size: 32, offset: 2560)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "processedBlock", scope: !2743, file: !2486, line: 296, baseType: !61, size: 32, offset: 2592)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "processedEraseCount", scope: !2743, file: !2486, line: 297, baseType: !61, size: 32, offset: 2624)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "eraseItems", scope: !2743, file: !2486, line: 298, baseType: !2801, size: 16, offset: 2656)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "queueSize", scope: !2743, file: !2486, line: 302, baseType: !2801, size: 16, offset: 2672)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramFailRetry", scope: !2743, file: !2486, line: 310, baseType: !91, size: 8, offset: 2688)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "IsEraseSuspended", scope: !2743, file: !2486, line: 313, baseType: !91, size: 8, offset: 2696)
!2877 = !DIGlobalVariableExpression(var: !2878, expr: !DIExpression())
!2878 = distinct !DIGlobalVariable(name: "TOTAL_BLOCKS", scope: !2705, file: !2706, line: 129, type: !61, isLocal: false, isDefinition: true)
!2879 = !DIGlobalVariableExpression(var: !2880, expr: !DIExpression())
!2880 = distinct !DIGlobalVariable(name: "TOTAL_SECTORS", scope: !2705, file: !2706, line: 130, type: !61, isLocal: false, isDefinition: true)
!2881 = !DIGlobalVariableExpression(var: !2882, expr: !DIExpression())
!2882 = distinct !DIGlobalVariable(name: "NOR_LARGEST_BLOCK_SIZE", scope: !2705, file: !2706, line: 131, type: !61, isLocal: false, isDefinition: true)
!2883 = !DIGlobalVariableExpression(var: !2884, expr: !DIExpression())
!2884 = distinct !DIGlobalVariable(name: "PAGE_SIZE", scope: !2705, file: !2706, line: 132, type: !1212, isLocal: true, isDefinition: true)
!2885 = !DIGlobalVariableExpression(var: !2886, expr: !DIExpression())
!2886 = distinct !DIGlobalVariable(name: "FDMBuffer", scope: !2705, file: !2706, line: 136, type: !2887, isLocal: false, isDefinition: true)
!2887 = !DICompositeType(tag: DW_TAG_array_type, baseType: !159, size: 4096, elements: !2888)
!2888 = !{!2889}
!2889 = !DISubrange(count: 512)
!2890 = !DIGlobalVariableExpression(var: !2891, expr: !DIExpression())
!2891 = distinct !DIGlobalVariable(name: "RegionInfo", scope: !2705, file: !2706, line: 146, type: !2892, isLocal: true, isDefinition: true)
!2892 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2722, size: 512, elements: !1046)
!2893 = !DIGlobalVariableExpression(var: !2894, expr: !DIExpression())
!2894 = distinct !DIGlobalVariable(name: "BlockLayout", scope: !2705, file: !2706, line: 152, type: !2895, isLocal: true, isDefinition: true)
!2895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2896, size: 32)
!2896 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2897)
!2897 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBlockLayout", file: !2680, line: 116, baseType: !2898)
!2898 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2680, line: 113, size: 64, elements: !2899)
!2899 = !{!2900, !2901}
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "Offset", scope: !2898, file: !2680, line: 114, baseType: !61, size: 32)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "Size", scope: !2898, file: !2680, line: 115, baseType: !61, size: 32, offset: 32)
!2902 = !DIGlobalVariableExpression(var: !2903, expr: !DIExpression())
!2903 = distinct !DIGlobalVariable(name: "CS0_SIZE", scope: !2705, file: !2706, line: 156, type: !61, isLocal: false, isDefinition: true)
!2904 = !DIGlobalVariableExpression(var: !2905, expr: !DIExpression())
!2905 = distinct !DIGlobalVariable(name: "CS1_SIZE", scope: !2705, file: !2706, line: 157, type: !61, isLocal: false, isDefinition: true)
!2906 = !DIGlobalVariableExpression(var: !2907, expr: !DIExpression())
!2907 = distinct !DIGlobalVariable(name: "BankInfo", scope: !2705, file: !2706, line: 160, type: !2908, isLocal: true, isDefinition: true)
!2908 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2909, size: 512, elements: !1046)
!2909 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !2486, line: 152, baseType: !2910)
!2910 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2486, line: 149, size: 64, elements: !2911)
!2911 = !{!2912, !2913}
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !2910, file: !2486, line: 150, baseType: !61, size: 32)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !2910, file: !2486, line: 151, baseType: !61, size: 32, offset: 32)
!2914 = !DIGlobalVariableExpression(var: !2915, expr: !DIExpression())
!2915 = distinct !DIGlobalVariable(name: "PAGE_BUFFER_SIZE", scope: !2705, file: !2706, line: 173, type: !61, isLocal: false, isDefinition: true)
!2916 = !DIGlobalVariableExpression(var: !2917, expr: !DIExpression())
!2917 = distinct !DIGlobalVariable(name: "NORFlashMtd", scope: !2705, file: !2706, line: 176, type: !2748, isLocal: false, isDefinition: true)
!2918 = !DIGlobalVariableExpression(var: !2919, expr: !DIExpression())
!2919 = distinct !DIGlobalVariable(name: "mtdflash", scope: !2705, file: !2706, line: 177, type: !2920, isLocal: false, isDefinition: true)
!2920 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_Data", file: !2384, line: 193, baseType: !2921)
!2921 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2384, line: 134, size: 1824, elements: !2922)
!2922 = !{!2923, !2924, !2925, !2931, !2937, !2938, !2939, !2940, !2942, !2943, !2944, !2945, !2952, !2953, !2983, !2984, !2985, !2986, !2987, !2988, !2989, !2990, !2991, !2992, !2993, !2994, !2995, !2996, !2997, !2998, !2999, !3000}
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !2921, file: !2384, line: 136, baseType: !61, size: 32)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !2921, file: !2384, line: 137, baseType: !1055, size: 32, offset: 32)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !2921, file: !2384, line: 138, baseType: !2926, size: 32, offset: 64)
!2926 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !2468, line: 56, baseType: !2927)
!2927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2928, size: 32)
!2928 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2468, line: 54, size: 8, elements: !2929)
!2929 = !{!2930}
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !2928, file: !2468, line: 55, baseType: !159, size: 8)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !2921, file: !2384, line: 139, baseType: !2932, size: 32, offset: 96)
!2932 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !2468, line: 46, baseType: !2933)
!2933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2934, size: 32)
!2934 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2468, line: 44, size: 8, elements: !2935)
!2935 = !{!2936}
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !2934, file: !2468, line: 45, baseType: !159, size: 8)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !2921, file: !2384, line: 140, baseType: !2480, size: 8, offset: 128)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !2921, file: !2384, line: 143, baseType: !2721, size: 32, offset: 160)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !2921, file: !2384, line: 144, baseType: !1055, size: 32, offset: 192)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !2921, file: !2384, line: 145, baseType: !2941, size: 32, offset: 224)
!2941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2909, size: 32)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !2921, file: !2384, line: 146, baseType: !1055, size: 32, offset: 256)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !2921, file: !2384, line: 147, baseType: !61, size: 32, offset: 288)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !2921, file: !2384, line: 148, baseType: !1055, size: 32, offset: 320)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !2921, file: !2384, line: 151, baseType: !2946, size: 1024, offset: 352)
!2946 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2947, size: 1024, elements: !2509)
!2947 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !2486, line: 170, baseType: !2948)
!2948 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2486, line: 167, size: 64, elements: !2949)
!2949 = !{!2950, !2951}
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !2948, file: !2486, line: 168, baseType: !61, size: 32)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !2948, file: !2486, line: 169, baseType: !61, size: 32, offset: 32)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "StatusMap", scope: !2921, file: !2384, line: 155, baseType: !2511, size: 32, offset: 1376)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "CMD", scope: !2921, file: !2384, line: 156, baseType: !2954, size: 32, offset: 1408)
!2954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2955, size: 32)
!2955 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_CMD", file: !2384, line: 124, baseType: !2956)
!2956 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2384, line: 90, size: 200, elements: !2957)
!2957 = !{!2958, !2959, !2960, !2961, !2962, !2963, !2964, !2965, !2966, !2967, !2968, !2969, !2970, !2971, !2972, !2973, !2974, !2975, !2976, !2977, !2978, !2979, !2980, !2981, !2982}
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "PageProg", scope: !2956, file: !2384, line: 91, baseType: !159, size: 8)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "WriteEnable", scope: !2956, file: !2384, line: 92, baseType: !159, size: 8, offset: 8)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "Suspend", scope: !2956, file: !2384, line: 94, baseType: !159, size: 8, offset: 16)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "Resume", scope: !2956, file: !2384, line: 95, baseType: !159, size: 8, offset: 24)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "Read", scope: !2956, file: !2384, line: 96, baseType: !159, size: 8, offset: 32)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "Erase", scope: !2956, file: !2384, line: 98, baseType: !159, size: 8, offset: 40)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "Erase4K", scope: !2956, file: !2384, line: 99, baseType: !159, size: 8, offset: 48)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "Erase32K", scope: !2956, file: !2384, line: 100, baseType: !159, size: 8, offset: 56)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "Erase64K", scope: !2956, file: !2384, line: 101, baseType: !159, size: 8, offset: 64)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_SPI", scope: !2956, file: !2384, line: 103, baseType: !159, size: 8, offset: 72)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_QPI", scope: !2956, file: !2384, line: 104, baseType: !159, size: 8, offset: 80)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "ReadBPReg", scope: !2956, file: !2384, line: 106, baseType: !159, size: 8, offset: 88)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "WriteBPReg", scope: !2956, file: !2384, line: 107, baseType: !159, size: 8, offset: 96)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSecurityReg", scope: !2956, file: !2384, line: 108, baseType: !159, size: 8, offset: 104)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "WriteSecurityReg", scope: !2956, file: !2384, line: 109, baseType: !159, size: 8, offset: 112)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSuspendReg", scope: !2956, file: !2384, line: 110, baseType: !159, size: 8, offset: 120)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "ReadReadyReg", scope: !2956, file: !2384, line: 111, baseType: !159, size: 8, offset: 128)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "ReadFailReg", scope: !2956, file: !2384, line: 112, baseType: !159, size: 8, offset: 136)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "EnterDPD", scope: !2956, file: !2384, line: 114, baseType: !159, size: 8, offset: 144)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "LeaveDPD", scope: !2956, file: !2384, line: 115, baseType: !159, size: 8, offset: 152)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "OTPProg", scope: !2956, file: !2384, line: 118, baseType: !159, size: 8, offset: 160)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !2956, file: !2384, line: 119, baseType: !159, size: 8, offset: 168)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "OTPEnter", scope: !2956, file: !2384, line: 120, baseType: !159, size: 8, offset: 176)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "OTPExit", scope: !2956, file: !2384, line: 121, baseType: !159, size: 8, offset: 184)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !2956, file: !2384, line: 122, baseType: !159, size: 8, offset: 192)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "Flag", scope: !2921, file: !2384, line: 157, baseType: !61, size: 32, offset: 1440)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "BPRBitCount", scope: !2921, file: !2384, line: 158, baseType: !1212, size: 16, offset: 1472)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "UniformBlock", scope: !2921, file: !2384, line: 159, baseType: !1212, size: 16, offset: 1488)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLength", scope: !2921, file: !2384, line: 163, baseType: !1212, size: 16, offset: 1504)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "OTPBase", scope: !2921, file: !2384, line: 164, baseType: !1212, size: 16, offset: 1520)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendLatency", scope: !2921, file: !2384, line: 167, baseType: !159, size: 8, offset: 1536)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "FlashID", scope: !2921, file: !2384, line: 168, baseType: !1727, size: 24, offset: 1544)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "DriverStatus", scope: !2921, file: !2384, line: 169, baseType: !159, size: 8, offset: 1568)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "AddressCycle", scope: !2921, file: !2384, line: 170, baseType: !159, size: 8, offset: 1576)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "CS", scope: !2921, file: !2384, line: 173, baseType: !1212, size: 16, offset: 1584)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "sf_dal_fix", scope: !2921, file: !2384, line: 174, baseType: !61, size: 32, offset: 1600)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "CS_Size", scope: !2921, file: !2384, line: 175, baseType: !61, size: 32, offset: 1632)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_BUSY", scope: !2921, file: !2384, line: 178, baseType: !91, size: 8, offset: 1664)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_SUSPENDED", scope: !2921, file: !2384, line: 179, baseType: !91, size: 8, offset: 1672)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "UnlockBlock", scope: !2921, file: !2384, line: 182, baseType: !2558, size: 32, offset: 1696)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !2921, file: !2384, line: 186, baseType: !2558, size: 32, offset: 1728)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !2921, file: !2384, line: 187, baseType: !2563, size: 32, offset: 1760)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "OTPWrite", scope: !2921, file: !2384, line: 188, baseType: !2563, size: 32, offset: 1792)
!3001 = !DIGlobalVariableExpression(var: !3002, expr: !DIExpression())
!3002 = distinct !DIGlobalVariable(name: "StatusMap", scope: !2705, file: !2706, line: 178, type: !3003, isLocal: false, isDefinition: true)
!3003 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2512, size: 64, elements: !1046)
!3004 = !DIGlobalVariableExpression(var: !3005, expr: !DIExpression())
!3005 = distinct !DIGlobalVariable(name: "sf_dal_data_cmd", scope: !2705, file: !2706, line: 179, type: !2955, isLocal: false, isDefinition: true)
!3006 = !DIGlobalVariableExpression(var: !3007, expr: !DIExpression())
!3007 = distinct !DIGlobalVariable(name: "EntireDiskRegionInfo", scope: !2705, file: !2706, line: 204, type: !2892, isLocal: true, isDefinition: true)
!3008 = !DIGlobalVariableExpression(var: !3009, expr: !DIExpression())
!3009 = distinct !DIGlobalVariable(name: "EntireDiskDriveData", scope: !2705, file: !2706, line: 205, type: !3010, isLocal: false, isDefinition: true)
!3010 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_FLASH_DISK_Data", file: !3011, line: 93, baseType: !3012)
!3011 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_disk_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sd_read_write_data_dma/GCC")
!3012 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3011, line: 83, size: 1056, elements: !3013)
!3013 = !{!3014, !3015, !3016, !3017, !3018}
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "DiskSize", scope: !3012, file: !3011, line: 84, baseType: !61, size: 32)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "MTDDriver", scope: !3012, file: !3011, line: 85, baseType: !2747, size: 32, offset: 32)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "MTDData", scope: !3012, file: !3011, line: 86, baseType: !88, size: 32, offset: 64)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "FlashInfo", scope: !3012, file: !3011, line: 87, baseType: !2804, size: 928, offset: 96)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "is_mount", scope: !3012, file: !3011, line: 92, baseType: !91, size: 8, offset: 1024)
!3019 = !DIGlobalVariableExpression(var: !3020, expr: !DIExpression())
!3020 = distinct !DIGlobalVariable(name: "EntireDiskMtdData", scope: !2705, file: !2706, line: 208, type: !2920, isLocal: false, isDefinition: true)
!3021 = !DIGlobalVariableExpression(var: !3022, expr: !DIExpression())
!3022 = distinct !DIGlobalVariable(name: "nor_list", scope: !2705, file: !2706, line: 114, type: !3023, isLocal: true, isDefinition: true)
!3023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3024, size: 32)
!3024 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3025)
!3025 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryNOR", file: !2680, line: 125, baseType: !3026)
!3026 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2680, line: 119, size: 1088, elements: !3027)
!3027 = !{!3028, !3029, !3030, !3031, !3033}
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "FDMType", scope: !3026, file: !2680, line: 120, baseType: !1212, size: 16)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "PageBufferSize", scope: !3026, file: !2680, line: 121, baseType: !1212, size: 16, offset: 16)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "UniformBlocks", scope: !3026, file: !2680, line: 122, baseType: !61, size: 32, offset: 32)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "BlockLayout", scope: !3026, file: !2680, line: 123, baseType: !3032, size: 512, offset: 64)
!3032 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2897, size: 512, elements: !1046)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !3026, file: !2680, line: 124, baseType: !2908, size: 512, offset: 576)
!3034 = !DIGlobalVariableExpression(var: !3035, expr: !DIExpression())
!3035 = distinct !DIGlobalVariable(name: "combo_mem_sw_list", scope: !2705, file: !3036, line: 42, type: !3037, isLocal: true, isDefinition: true)
!3036 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_combo_config.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sd_read_write_data_dma/GCC")
!3037 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3038)
!3038 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_CMEM_NOR_INFO_v1", file: !2706, line: 66, baseType: !3039)
!3039 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2706, line: 63, size: 5600, elements: !3040)
!3040 = !{!3041, !3048}
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "m_gfh_hdr", scope: !3039, file: !2706, line: 64, baseType: !3042, size: 96)
!3042 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_Header", file: !2613, line: 152, baseType: !3043)
!3043 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GFH_Header", file: !2613, line: 144, size: 96, elements: !3044)
!3044 = !{!3045, !3046, !3047}
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "m_magic_ver", scope: !3043, file: !2613, line: 145, baseType: !2673, size: 32)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "m_size", scope: !3043, file: !2613, line: 146, baseType: !2675, size: 16, offset: 32)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "m_type", scope: !3043, file: !2613, line: 150, baseType: !2677, size: 32, offset: 64)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "m_data", scope: !3039, file: !2706, line: 65, baseType: !3049, size: 5504, offset: 96)
!3049 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryNORList", file: !2680, line: 132, baseType: !3050)
!3050 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2680, line: 128, size: 5504, elements: !3051)
!3051 = !{!3052, !3053, !3054}
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "m_ver", scope: !3050, file: !2680, line: 129, baseType: !18, size: 32)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "Count", scope: !3050, file: !2680, line: 130, baseType: !18, size: 32, offset: 32)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "List", scope: !3050, file: !2680, line: 131, baseType: !3055, size: 5440, offset: 64)
!3055 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3025, size: 5440, elements: !1314)
!3056 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_eventgrpid", file: !2468, line: 79, baseType: !3057)
!3057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3058, size: 32)
!3058 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2468, line: 77, size: 8, elements: !3059)
!3059 = !{!3060}
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !3058, file: !2468, line: 78, baseType: !159, size: 8)
!3061 = !DIGlobalVariableExpression(var: !3062, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 18446744073709551615, DW_OP_mul, DW_OP_constu, 1, DW_OP_plus, DW_OP_stack_value))
!3062 = distinct !DIGlobalVariable(name: "FDMMutex", scope: !3063, file: !3064, line: 82, type: !7, isLocal: true, isDefinition: true)
!3063 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3064, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3065, retainedTypes: !3071, globals: !3116, splitDebugInlining: false, nameTableKind: None)
!3064 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_disk.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sd_read_write_data_dma/GCC")
!3065 = !{!2408, !2292, !3066}
!3066 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2409, line: 123, baseType: !18, size: 32, elements: !3067)
!3067 = !{!3068, !3069, !3070}
!3068 = !DIEnumerator(name: "HAL_FLASH_BLOCK_4K", value: 0)
!3069 = !DIEnumerator(name: "HAL_FLASH_BLOCK_32K", value: 1)
!3070 = !DIEnumerator(name: "HAL_FLASH_BLOCK_64K", value: 2)
!3071 = !{!61, !3072, !88, !1055}
!3072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3073, size: 32)
!3073 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_Flash_MTD_Data", file: !2486, line: 190, baseType: !3074)
!3074 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2486, line: 173, size: 1376, elements: !3075)
!3075 = !{!3076, !3077, !3078, !3084, !3090, !3091, !3098, !3099, !3106, !3107, !3108, !3109}
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !3074, file: !2486, line: 174, baseType: !61, size: 32)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !3074, file: !2486, line: 175, baseType: !2719, size: 32, offset: 32)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !3074, file: !2486, line: 176, baseType: !3079, size: 32, offset: 64)
!3079 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !2468, line: 56, baseType: !3080)
!3080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3081, size: 32)
!3081 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2468, line: 54, size: 8, elements: !3082)
!3082 = !{!3083}
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !3081, file: !2468, line: 55, baseType: !159, size: 8)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !3074, file: !2486, line: 177, baseType: !3085, size: 32, offset: 96)
!3085 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !2468, line: 46, baseType: !3086)
!3086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3087, size: 32)
!3087 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2468, line: 44, size: 8, elements: !3088)
!3088 = !{!3089}
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !3087, file: !2468, line: 45, baseType: !159, size: 8)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !3074, file: !2486, line: 178, baseType: !2480, size: 8, offset: 128)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !3074, file: !2486, line: 180, baseType: !3092, size: 32, offset: 160)
!3092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3093, size: 32)
!3093 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !2486, line: 146, baseType: !3094)
!3094 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2486, line: 143, size: 64, elements: !3095)
!3095 = !{!3096, !3097}
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !3094, file: !2486, line: 144, baseType: !61, size: 32)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !3094, file: !2486, line: 145, baseType: !61, size: 32, offset: 32)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !3074, file: !2486, line: 181, baseType: !2719, size: 32, offset: 192)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !3074, file: !2486, line: 182, baseType: !3100, size: 32, offset: 224)
!3100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3101, size: 32)
!3101 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !2486, line: 152, baseType: !3102)
!3102 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2486, line: 149, size: 64, elements: !3103)
!3103 = !{!3104, !3105}
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !3102, file: !2486, line: 150, baseType: !61, size: 32)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !3102, file: !2486, line: 151, baseType: !61, size: 32, offset: 32)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !3074, file: !2486, line: 183, baseType: !2719, size: 32, offset: 256)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !3074, file: !2486, line: 184, baseType: !61, size: 32, offset: 288)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !3074, file: !2486, line: 185, baseType: !2719, size: 32, offset: 320)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !3074, file: !2486, line: 188, baseType: !3110, size: 1024, offset: 352)
!3110 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3111, size: 1024, elements: !2509)
!3111 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !2486, line: 170, baseType: !3112)
!3112 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2486, line: 167, size: 64, elements: !3113)
!3113 = !{!3114, !3115}
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !3112, file: !2486, line: 168, baseType: !61, size: 32)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !3112, file: !2486, line: 169, baseType: !61, size: 32, offset: 32)
!3116 = !{!3117, !3118}
!3117 = !DIGlobalVariableExpression(var: !3062, expr: !DIExpression())
!3118 = !DIGlobalVariableExpression(var: !3119, expr: !DIExpression())
!3119 = distinct !DIGlobalVariable(name: "flash_init_status", scope: !3063, file: !3064, line: 432, type: !3120, isLocal: true, isDefinition: true)
!3120 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_flash_status_t", file: !2409, line: 119, baseType: !2408)
!3121 = !DIGlobalVariableExpression(var: !3119, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 18446744069414584325, DW_OP_mul, DW_OP_constu, 4294967291, DW_OP_plus, DW_OP_stack_value))
!3122 = !DIGlobalVariableExpression(var: !3123, expr: !DIExpression())
!3123 = distinct !DIGlobalVariable(name: "gNOR_ReturnReadyBegin", scope: !3124, file: !3125, line: 60, type: !61, isLocal: false, isDefinition: true)
!3124 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3125, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3126, retainedTypes: !3127, globals: !3128, splitDebugInlining: false, nameTableKind: None)
!3125 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_mtd.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sd_read_write_data_dma/GCC")
!3126 = !{!97}
!3127 = !{!88, !61}
!3128 = !{!3122, !3129, !3131, !3133, !3135, !3137, !3191, !3193}
!3129 = !DIGlobalVariableExpression(var: !3130, expr: !DIExpression())
!3130 = distinct !DIGlobalVariable(name: "gNOR_ReturnReadyEnd", scope: !3124, file: !3125, line: 61, type: !61, isLocal: false, isDefinition: true)
!3131 = !DIGlobalVariableExpression(var: !3132, expr: !DIExpression())
!3132 = distinct !DIGlobalVariable(name: "NOR_Flash_Base_Address", scope: !3124, file: !3125, line: 107, type: !61, isLocal: false, isDefinition: true)
!3133 = !DIGlobalVariableExpression(var: !3134, expr: !DIExpression())
!3134 = distinct !DIGlobalVariable(name: "NOR_FLASH_BUSY", scope: !3124, file: !3125, line: 132, type: !91, isLocal: false, isDefinition: true)
!3135 = !DIGlobalVariableExpression(var: !3136, expr: !DIExpression())
!3136 = distinct !DIGlobalVariable(name: "NOR_FLASH_SUSPENDED", scope: !3124, file: !3125, line: 133, type: !91, isLocal: false, isDefinition: true)
!3137 = !DIGlobalVariableExpression(var: !3138, expr: !DIExpression())
!3138 = distinct !DIGlobalVariable(name: "replaced", scope: !3139, file: !3125, line: 139, type: !61, isLocal: true, isDefinition: true)
!3139 = distinct !DISubprogram(name: "LookupAddress", scope: !3125, file: !3125, line: 135, type: !3140, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3124, retainedNodes: !3142)
!3140 = !DISubroutineType(types: !3141)
!3141 = !{!61, !88, !61}
!3142 = !{!3143, !3144, !3145, !3190}
!3143 = !DILocalVariable(name: "DriveData", arg: 1, scope: !3139, file: !3125, line: 135, type: !88)
!3144 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !3139, file: !3125, line: 135, type: !61)
!3145 = !DILocalVariable(name: "D", scope: !3139, file: !3125, line: 137, type: !3146)
!3146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3147, size: 32)
!3147 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_Flash_MTD_Data", file: !2486, line: 190, baseType: !3148)
!3148 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2486, line: 173, size: 1376, elements: !3149)
!3149 = !{!3150, !3151, !3152, !3158, !3164, !3165, !3172, !3173, !3180, !3181, !3182, !3183}
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !3148, file: !2486, line: 174, baseType: !61, size: 32)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !3148, file: !2486, line: 175, baseType: !2719, size: 32, offset: 32)
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !3148, file: !2486, line: 176, baseType: !3153, size: 32, offset: 64)
!3153 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !2468, line: 56, baseType: !3154)
!3154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3155, size: 32)
!3155 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2468, line: 54, size: 8, elements: !3156)
!3156 = !{!3157}
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !3155, file: !2468, line: 55, baseType: !159, size: 8)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !3148, file: !2486, line: 177, baseType: !3159, size: 32, offset: 96)
!3159 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !2468, line: 46, baseType: !3160)
!3160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3161, size: 32)
!3161 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2468, line: 44, size: 8, elements: !3162)
!3162 = !{!3163}
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !3161, file: !2468, line: 45, baseType: !159, size: 8)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !3148, file: !2486, line: 178, baseType: !2480, size: 8, offset: 128)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !3148, file: !2486, line: 180, baseType: !3166, size: 32, offset: 160)
!3166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3167, size: 32)
!3167 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !2486, line: 146, baseType: !3168)
!3168 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2486, line: 143, size: 64, elements: !3169)
!3169 = !{!3170, !3171}
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !3168, file: !2486, line: 144, baseType: !61, size: 32)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !3168, file: !2486, line: 145, baseType: !61, size: 32, offset: 32)
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !3148, file: !2486, line: 181, baseType: !2719, size: 32, offset: 192)
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !3148, file: !2486, line: 182, baseType: !3174, size: 32, offset: 224)
!3174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3175, size: 32)
!3175 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !2486, line: 152, baseType: !3176)
!3176 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2486, line: 149, size: 64, elements: !3177)
!3177 = !{!3178, !3179}
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !3176, file: !2486, line: 150, baseType: !61, size: 32)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !3176, file: !2486, line: 151, baseType: !61, size: 32, offset: 32)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !3148, file: !2486, line: 183, baseType: !2719, size: 32, offset: 256)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !3148, file: !2486, line: 184, baseType: !61, size: 32, offset: 288)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !3148, file: !2486, line: 185, baseType: !2719, size: 32, offset: 320)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !3148, file: !2486, line: 188, baseType: !3184, size: 1024, offset: 352)
!3184 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3185, size: 1024, elements: !2509)
!3185 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !2486, line: 170, baseType: !3186)
!3186 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2486, line: 167, size: 64, elements: !3187)
!3187 = !{!3188, !3189}
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !3186, file: !2486, line: 168, baseType: !61, size: 32)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !3186, file: !2486, line: 169, baseType: !61, size: 32, offset: 32)
!3190 = !DILocalVariable(name: "addr", scope: !3139, file: !3125, line: 138, type: !61)
!3191 = !DIGlobalVariableExpression(var: !3192, expr: !DIExpression())
!3192 = distinct !DIGlobalVariable(name: "look_up_hit", scope: !3139, file: !3125, line: 140, type: !61, isLocal: true, isDefinition: true)
!3193 = !DIGlobalVariableExpression(var: !3194, expr: !DIExpression())
!3194 = distinct !DIGlobalVariable(name: "look_up_miss", scope: !3139, file: !3125, line: 141, type: !61, isLocal: true, isDefinition: true)
!3195 = !DIGlobalVariableExpression(var: !3196, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!3196 = distinct !DIGlobalVariable(name: "init", scope: !3197, file: !3198, line: 94, type: !161, isLocal: true, isDefinition: true)
!3197 = distinct !DISubprogram(name: "pmu_init_mt6385", scope: !3198, file: !3198, line: 92, type: !343, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3199, retainedNodes: !3389)
!3198 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_pmu.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sd_read_write_data_dma/GCC")
!3199 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3198, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3200, retainedTypes: !3352, globals: !3357, splitDebugInlining: false, nameTableKind: None)
!3200 = !{!3201, !3206, !3211, !3215, !3223, !3258, !3263, !3269, !3304, !3310, !3327, !3337, !3343, !3348}
!3201 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3202, line: 58, baseType: !18, size: 32, elements: !3203)
!3202 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_i2c_pmic.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sd_read_write_data_dma/GCC")
!3203 = !{!3204, !3205}
!3204 = !DIEnumerator(name: "PMIC_I2C_MASTER", value: 0)
!3205 = !DIEnumerator(name: "PMIC_I2C_MASTER_MAX", value: 1)
!3206 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3207, line: 118, baseType: !18, size: 32, elements: !3208)
!3207 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_pmu_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sd_read_write_data_dma/GCC")
!3208 = !{!3209, !3210}
!3209 = !DIEnumerator(name: "PMIC_UNLOCK_KEY", value: 0)
!3210 = !DIEnumerator(name: "PMIC_LOCK_KEY", value: 1)
!3211 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3207, line: 113, baseType: !18, size: 32, elements: !3212)
!3212 = !{!3213, !3214}
!3213 = !DIEnumerator(name: "PMIC_LEAVE_OVR_MODE", value: 0)
!3214 = !DIEnumerator(name: "PMIC_ENTER_OVR_MODE", value: 1)
!3215 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3216, line: 194, baseType: !18, size: 32, elements: !3217)
!3216 = !DIFile(filename: "../../../../../driver/chip/inc/hal_eint.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sd_read_write_data_dma/GCC")
!3217 = !{!3218, !3219, !3220, !3221, !3222}
!3218 = !DIEnumerator(name: "HAL_EINT_LEVEL_LOW", value: 0)
!3219 = !DIEnumerator(name: "HAL_EINT_LEVEL_HIGH", value: 1)
!3220 = !DIEnumerator(name: "HAL_EINT_EDGE_FALLING", value: 2)
!3221 = !DIEnumerator(name: "HAL_EINT_EDGE_RISING", value: 3)
!3222 = !DIEnumerator(name: "HAL_EINT_EDGE_FALLING_AND_RISING", value: 4)
!3223 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !106, line: 787, baseType: !18, size: 32, elements: !3224)
!3224 = !{!3225, !3226, !3227, !3228, !3229, !3230, !3231, !3232, !3233, !3234, !3235, !3236, !3237, !3238, !3239, !3240, !3241, !3242, !3243, !3244, !3245, !3246, !3247, !3248, !3249, !3250, !3251, !3252, !3253, !3254, !3255, !3256, !3257}
!3225 = !DIEnumerator(name: "HAL_EINT_NUMBER_0", value: 0)
!3226 = !DIEnumerator(name: "HAL_EINT_NUMBER_1", value: 1)
!3227 = !DIEnumerator(name: "HAL_EINT_NUMBER_2", value: 2)
!3228 = !DIEnumerator(name: "HAL_EINT_NUMBER_3", value: 3)
!3229 = !DIEnumerator(name: "HAL_EINT_NUMBER_4", value: 4)
!3230 = !DIEnumerator(name: "HAL_EINT_NUMBER_5", value: 5)
!3231 = !DIEnumerator(name: "HAL_EINT_NUMBER_6", value: 6)
!3232 = !DIEnumerator(name: "HAL_EINT_NUMBER_7", value: 7)
!3233 = !DIEnumerator(name: "HAL_EINT_NUMBER_8", value: 8)
!3234 = !DIEnumerator(name: "HAL_EINT_NUMBER_9", value: 9)
!3235 = !DIEnumerator(name: "HAL_EINT_NUMBER_10", value: 10)
!3236 = !DIEnumerator(name: "HAL_EINT_NUMBER_11", value: 11)
!3237 = !DIEnumerator(name: "HAL_EINT_NUMBER_12", value: 12)
!3238 = !DIEnumerator(name: "HAL_EINT_NUMBER_13", value: 13)
!3239 = !DIEnumerator(name: "HAL_EINT_NUMBER_14", value: 14)
!3240 = !DIEnumerator(name: "HAL_EINT_NUMBER_15", value: 15)
!3241 = !DIEnumerator(name: "HAL_EINT_NUMBER_16", value: 16)
!3242 = !DIEnumerator(name: "HAL_EINT_NUMBER_17", value: 17)
!3243 = !DIEnumerator(name: "HAL_EINT_NUMBER_18", value: 18)
!3244 = !DIEnumerator(name: "HAL_EINT_NUMBER_19", value: 19)
!3245 = !DIEnumerator(name: "HAL_EINT_KEYPAD", value: 20)
!3246 = !DIEnumerator(name: "HAL_EINT_UART_0_RX", value: 21)
!3247 = !DIEnumerator(name: "HAL_EINT_UART_1_RX", value: 22)
!3248 = !DIEnumerator(name: "HAL_EINT_UART_2_RX", value: 23)
!3249 = !DIEnumerator(name: "HAL_EINT_UART_3_RX", value: 24)
!3250 = !DIEnumerator(name: "HAL_EINT_BTSYS", value: 25)
!3251 = !DIEnumerator(name: "HAL_EINT_BTSYS_BTIF", value: 26)
!3252 = !DIEnumerator(name: "HAL_EINT_USB", value: 27)
!3253 = !DIEnumerator(name: "HAL_EINT_ACCDET", value: 28)
!3254 = !DIEnumerator(name: "HAL_EINT_RTC", value: 29)
!3255 = !DIEnumerator(name: "HAL_EINT_PMIC", value: 30)
!3256 = !DIEnumerator(name: "HAL_EINT_GPCOUNTER", value: 31)
!3257 = !DIEnumerator(name: "HAL_EINT_NUMBER_MAX", value: 32)
!3258 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3259, line: 52, baseType: !18, size: 32, elements: !3260)
!3259 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_pmu.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sd_read_write_data_dma/GCC")
!3260 = !{!3261, !3262}
!3261 = !DIEnumerator(name: "PMU_NOT_INIT", value: 0)
!3262 = !DIEnumerator(name: "PMU_INIT", value: 1)
!3263 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3259, line: 94, baseType: !7, size: 32, elements: !3264)
!3264 = !{!3265, !3266, !3267, !3268}
!3265 = !DIEnumerator(name: "PMU_STATUS_ERROR_EINT_NUMBER", value: -3)
!3266 = !DIEnumerator(name: "PMU_STATUS_INVALID_PARAMETER", value: -2)
!3267 = !DIEnumerator(name: "PMU_STATUS_ERROR", value: -1)
!3268 = !DIEnumerator(name: "PMU_STATUS_SUCCESS", value: 0)
!3269 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3259, line: 57, baseType: !18, size: 32, elements: !3270)
!3270 = !{!3271, !3272, !3273, !3274, !3275, !3276, !3277, !3278, !3279, !3280, !3281, !3282, !3283, !3284, !3285, !3286, !3287, !3288, !3289, !3290, !3291, !3292, !3293, !3294, !3295, !3296, !3297, !3298, !3299, !3300, !3301, !3302, !3303}
!3271 = !DIEnumerator(name: "PMU_INT_ALDO_OC", value: 0)
!3272 = !DIEnumerator(name: "PMU_INT_ALDO_PG", value: 1)
!3273 = !DIEnumerator(name: "PMU_INT_DLDO_OC", value: 2)
!3274 = !DIEnumerator(name: "PMU_INT_DLDO_PG", value: 3)
!3275 = !DIEnumerator(name: "PMU_INT_VC_BUCK_OC", value: 4)
!3276 = !DIEnumerator(name: "PMU_INT_VCORE_PG", value: 5)
!3277 = !DIEnumerator(name: "PMU_INT_VC_LDO_OC", value: 6)
!3278 = !DIEnumerator(name: "PMU_INT_PKEYLP", value: 7)
!3279 = !DIEnumerator(name: "PMU_INT_THM1", value: 8)
!3280 = !DIEnumerator(name: "PMU_INT_THM2", value: 9)
!3281 = !DIEnumerator(name: "PMU_INT_AXPKEY", value: 10)
!3282 = !DIEnumerator(name: "PMU_INT_PWRKEY", value: 11)
!3283 = !DIEnumerator(name: "PMU_INT_CHGOV", value: 12)
!3284 = !DIEnumerator(name: "PMU_INT_CHRDET", value: 13)
!3285 = !DIEnumerator(name: "PMU_INT_THR_H", value: 14)
!3286 = !DIEnumerator(name: "PMU_INT_THR_L", value: 15)
!3287 = !DIEnumerator(name: "PMU_INT_OVER110", value: 16)
!3288 = !DIEnumerator(name: "PMU_INT_OVER40", value: 17)
!3289 = !DIEnumerator(name: "PMU_INT_PSW_PG", value: 18)
!3290 = !DIEnumerator(name: "PMU_INT_BAT_H", value: 19)
!3291 = !DIEnumerator(name: "PMU_INT_BAT_L", value: 20)
!3292 = !DIEnumerator(name: "PMU_INT_VBATON_HV_LV", value: 21)
!3293 = !DIEnumerator(name: "PMU_INT_VBAT_UNDET_LV", value: 22)
!3294 = !DIEnumerator(name: "PMU_INT_BVALID_DET_LV", value: 23)
!3295 = !DIEnumerator(name: "PMU_INT_CHRWDT_LV", value: 24)
!3296 = !DIEnumerator(name: "PMU_INT_HOT_LV", value: 25)
!3297 = !DIEnumerator(name: "PMU_INT_WARM_LV", value: 26)
!3298 = !DIEnumerator(name: "PMU_INT_COOL_LV", value: 27)
!3299 = !DIEnumerator(name: "PMU_INT_COLD_LV", value: 28)
!3300 = !DIEnumerator(name: "PMU_INT_IMP_LV", value: 29)
!3301 = !DIEnumerator(name: "PMU_INT_NAG_C_LV", value: 30)
!3302 = !DIEnumerator(name: "PMU_INT_AD_LBAT_LV", value: 31)
!3303 = !DIEnumerator(name: "PMU_INT_MAX", value: 32)
!3304 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3259, line: 45, baseType: !18, size: 32, elements: !3305)
!3305 = !{!3306, !3307, !3308, !3309}
!3306 = !DIEnumerator(name: "PMU_NONE", value: 0)
!3307 = !DIEnumerator(name: "PMU_EDGE_RISING", value: 1)
!3308 = !DIEnumerator(name: "PMU_EDGE_FALLING", value: 2)
!3309 = !DIEnumerator(name: "PMU_EDGE_FALLING_AND_RISING", value: 3)
!3310 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3207, line: 44, baseType: !18, size: 32, elements: !3311)
!3311 = !{!3312, !3313, !3314, !3315, !3316, !3317, !3318, !3319, !3320, !3321, !3322, !3323, !3324, !3325, !3326}
!3312 = !DIEnumerator(name: "PMIC_VCLDO", value: 0)
!3313 = !DIEnumerator(name: "PMIC_VIO18", value: 1)
!3314 = !DIEnumerator(name: "PMIC_VSF", value: 2)
!3315 = !DIEnumerator(name: "PMIC_VIO28", value: 3)
!3316 = !DIEnumerator(name: "PMIC_VDIG18", value: 4)
!3317 = !DIEnumerator(name: "PMIC_VA18", value: 5)
!3318 = !DIEnumerator(name: "PMIC_VUSB", value: 6)
!3319 = !DIEnumerator(name: "PMIC_VBT", value: 7)
!3320 = !DIEnumerator(name: "PMIC_VA28", value: 8)
!3321 = !DIEnumerator(name: "PMIC_VMC", value: 9)
!3322 = !DIEnumerator(name: "PMIC_VCAMA", value: 10)
!3323 = !DIEnumerator(name: "PMIC_VIBR", value: 11)
!3324 = !DIEnumerator(name: "PMIC_SWXM", value: 12)
!3325 = !DIEnumerator(name: "PMIC_SWDP", value: 13)
!3326 = !DIEnumerator(name: "PMIC_SWMP", value: 14)
!3327 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3207, line: 62, baseType: !18, size: 32, elements: !3328)
!3328 = !{!3329, !3330, !3331, !3332, !3333, !3334, !3335, !3336}
!3329 = !DIEnumerator(name: "PMIC_PSI_OVR", value: 0)
!3330 = !DIEnumerator(name: "PMIC_PSI_HP", value: 1)
!3331 = !DIEnumerator(name: "PMIC_PSI_LP", value: 2)
!3332 = !DIEnumerator(name: "PMIC_PSI_S0", value: 3)
!3333 = !DIEnumerator(name: "PMIC_PSI_S1", value: 4)
!3334 = !DIEnumerator(name: "PMIC_PSI_OFF", value: 5)
!3335 = !DIEnumerator(name: "PMIC_PSI_SLP", value: 6)
!3336 = !DIEnumerator(name: "PMIC_PSI_ACT", value: 7)
!3337 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3207, line: 73, baseType: !18, size: 32, elements: !3338)
!3338 = !{!3339, !3340, !3341, !3342}
!3339 = !DIEnumerator(name: "PMIC_LDO_PMOD_NORMAL", value: 0)
!3340 = !DIEnumerator(name: "PMIC_LDO_PMOD_LITE", value: 1)
!3341 = !DIEnumerator(name: "PMIC_LDO_PMOD_LP", value: 2)
!3342 = !DIEnumerator(name: "PMIC_LDO_PMOD_ULP", value: 3)
!3343 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3207, line: 80, baseType: !18, size: 32, elements: !3344)
!3344 = !{!3345, !3346, !3347}
!3345 = !DIEnumerator(name: "PMIC_SLP_WKUP_HW_CTL", value: 0)
!3346 = !DIEnumerator(name: "PMIC_SLP_WKUP_SW_CTL", value: 1)
!3347 = !DIEnumerator(name: "PMIC_SLP_WKUP_AON", value: 2)
!3348 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3207, line: 86, baseType: !18, size: 32, elements: !3349)
!3349 = !{!3350, !3351}
!3350 = !DIEnumerator(name: "PMIC_VR_CTL_DISABLE", value: 0)
!3351 = !DIEnumerator(name: "PMIC_VR_CTL_ENABLE", value: 1)
!3352 = !{!88, !161, !3353, !3354, !3355, !7, !3356}
!3353 = !DIDerivedType(tag: DW_TAG_typedef, name: "PMIC_PSI", file: !3207, line: 71, baseType: !3327)
!3354 = !DIDerivedType(tag: DW_TAG_typedef, name: "PMIC_LDO_PMOD", file: !3207, line: 78, baseType: !3337)
!3355 = !DIDerivedType(tag: DW_TAG_typedef, name: "PMIC_SLP_WKUP_MODE", file: !3207, line: 84, baseType: !3343)
!3356 = !DIDerivedType(tag: DW_TAG_typedef, name: "PMIC_VR_CTL", file: !3207, line: 89, baseType: !3348)
!3357 = !{!3358, !3359, !3365, !3368, !3370, !3383, !3387}
!3358 = !DIGlobalVariableExpression(var: !3196, expr: !DIExpression())
!3359 = !DIGlobalVariableExpression(var: !3360, expr: !DIExpression())
!3360 = distinct !DIGlobalVariable(name: "index", scope: !3361, file: !3198, line: 293, type: !18, isLocal: true, isDefinition: true)
!3361 = distinct !DISubprogram(name: "pmu_eint_handler", scope: !3198, file: !3198, line: 291, type: !153, scopeLine: 292, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3199, retainedNodes: !3362)
!3362 = !{!3363, !3364}
!3363 = !DILocalVariable(name: "parameter", arg: 1, scope: !3361, file: !3198, line: 291, type: !88)
!3364 = !DILocalVariable(name: "mask", scope: !3361, file: !3198, line: 295, type: !18)
!3365 = !DIGlobalVariableExpression(var: !3366, expr: !DIExpression())
!3366 = distinct !DIGlobalVariable(name: "int_sts", scope: !3361, file: !3198, line: 294, type: !3367, isLocal: true, isDefinition: true)
!3367 = !DICompositeType(tag: DW_TAG_array_type, baseType: !18, size: 224, elements: !593)
!3368 = !DIGlobalVariableExpression(var: !3369, expr: !DIExpression())
!3369 = distinct !DIGlobalVariable(name: "trigger_staus", scope: !3361, file: !3198, line: 294, type: !18, isLocal: true, isDefinition: true)
!3370 = !DIGlobalVariableExpression(var: !3371, expr: !DIExpression())
!3371 = distinct !DIGlobalVariable(name: "pmu_function_table", scope: !3199, file: !3198, line: 90, type: !3372, isLocal: false, isDefinition: true)
!3372 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3373, size: 3072, elements: !376)
!3373 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmu_function_t", file: !3259, line: 106, baseType: !3374)
!3374 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3259, line: 101, size: 96, elements: !3375)
!3375 = !{!3376, !3380, !3381, !3382}
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "pmu_callback", scope: !3374, file: !3259, line: 102, baseType: !3377, size: 32)
!3377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3378, size: 32)
!3378 = !DISubroutineType(types: !3379)
!3379 = !{null, !159, !88}
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !3374, file: !3259, line: 103, baseType: !88, size: 32, offset: 32)
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "trigger_mode", scope: !3374, file: !3259, line: 104, baseType: !159, size: 8, offset: 64)
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "init_status", scope: !3374, file: !3259, line: 105, baseType: !91, size: 8, offset: 72)
!3383 = !DIGlobalVariableExpression(var: !3384, expr: !DIExpression())
!3384 = distinct !DIGlobalVariable(name: "pmu_power_mode_init_setting_E1", scope: !3199, file: !3198, line: 59, type: !3385, isLocal: true, isDefinition: true)
!3385 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 640, elements: !3386)
!3386 = !{!532, !1047}
!3387 = !DIGlobalVariableExpression(var: !3388, expr: !DIExpression())
!3388 = distinct !DIGlobalVariable(name: "pmu_power_mode_init_setting_E2", scope: !3199, file: !3198, line: 72, type: !3385, isLocal: true, isDefinition: true)
!3389 = !{!3390, !3391, !3392}
!3390 = !DILocalVariable(name: "id_l", scope: !3197, file: !3198, line: 95, type: !159)
!3391 = !DILocalVariable(name: "id_h", scope: !3197, file: !3198, line: 95, type: !159)
!3392 = !DILocalVariable(name: "config", scope: !3197, file: !3198, line: 96, type: !3393)
!3393 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmic_i2c_config_t", file: !3202, line: 92, baseType: !3394)
!3394 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3202, line: 90, size: 32, elements: !3395)
!3395 = !{!3396}
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_frequency", scope: !3394, file: !3202, line: 91, baseType: !61, size: 32)
!3397 = !DIGlobalVariableExpression(var: !3398, expr: !DIExpression())
!3398 = distinct !DIGlobalVariable(name: "pmu_mtcmos_ldo_ctrl", scope: !3399, file: !3400, line: 54, type: !1214, isLocal: false, isDefinition: true)
!3399 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3400, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3401, retainedTypes: !3426, globals: !3428, splitDebugInlining: false, nameTableKind: None)
!3400 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_pmu_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sd_read_write_data_dma/GCC")
!3401 = !{!3310, !3327, !3337, !3206, !3211, !3343, !3348, !3402, !3412, !3422}
!3402 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3207, line: 91, baseType: !18, size: 32, elements: !3403)
!3403 = !{!3404, !3405, !3406, !3407, !3408, !3409, !3410, !3411}
!3404 = !DIEnumerator(name: "PMIC_VCORE_0P7V", value: 0)
!3405 = !DIEnumerator(name: "PMIC_VCORE_0P8V", value: 1)
!3406 = !DIEnumerator(name: "PMIC_VCORE_0P9V", value: 2)
!3407 = !DIEnumerator(name: "PMIC_VCORE_1P0V", value: 3)
!3408 = !DIEnumerator(name: "PMIC_VCORE_1P1V", value: 4)
!3409 = !DIEnumerator(name: "PMIC_VCORE_1P2V", value: 5)
!3410 = !DIEnumerator(name: "PMIC_VCORE_1P3V", value: 6)
!3411 = !DIEnumerator(name: "PMIC_VCORE_ERROR", value: 255)
!3412 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3207, line: 102, baseType: !18, size: 32, elements: !3413)
!3413 = !{!3414, !3415, !3416, !3417, !3418, !3419, !3420, !3421}
!3414 = !DIEnumerator(name: "PMIC_LDO_1P3V", value: 0)
!3415 = !DIEnumerator(name: "PMIC_LDO_1P5V", value: 1)
!3416 = !DIEnumerator(name: "PMIC_LDO_1P8V", value: 2)
!3417 = !DIEnumerator(name: "PMIC_LDO_2P0V", value: 3)
!3418 = !DIEnumerator(name: "PMIC_LDO_2P5V", value: 4)
!3419 = !DIEnumerator(name: "PMIC_LDO_2P8V", value: 5)
!3420 = !DIEnumerator(name: "PMIC_LDO_3P0V", value: 6)
!3421 = !DIEnumerator(name: "PMIC_LDO_3P3V", value: 7)
!3422 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1655, line: 106, baseType: !18, size: 32, elements: !3423)
!3423 = !{!3424, !3425}
!3424 = !DIEnumerator(name: "PMIC_VCORE_UNLOCK", value: 0)
!3425 = !DIEnumerator(name: "PMIC_VCORE_LOCK", value: 1)
!3426 = !{!3427, !1800}
!3427 = !DIDerivedType(tag: DW_TAG_typedef, name: "PMIC_VCORE_VOSEL", file: !3207, line: 100, baseType: !3402)
!3428 = !{!3397, !3429, !3431, !3433, !3436, !3438, !3445, !3447, !3457, !3459, !3461, !3463, !3465, !3471}
!3429 = !DIGlobalVariableExpression(var: !3430, expr: !DIExpression())
!3430 = distinct !DIGlobalVariable(name: "pmu_mtcmos_ldo_en", scope: !3399, file: !3400, line: 55, type: !1214, isLocal: false, isDefinition: true)
!3431 = !DIGlobalVariableExpression(var: !3432, expr: !DIExpression())
!3432 = distinct !DIGlobalVariable(name: "pmu_mtcmos_vio28_pmod", scope: !3399, file: !3400, line: 56, type: !1214, isLocal: false, isDefinition: true)
!3433 = !DIGlobalVariableExpression(var: !3434, expr: !DIExpression())
!3434 = distinct !DIGlobalVariable(name: "local_flag", scope: !3435, file: !3400, line: 887, type: !1214, isLocal: true, isDefinition: true)
!3435 = distinct !DISubprogram(name: "pmu_control_mtcmos_mt6385", scope: !3400, file: !3400, line: 885, type: !343, scopeLine: 886, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3399, retainedNodes: !345)
!3436 = !DIGlobalVariableExpression(var: !3437, expr: !DIExpression())
!3437 = distinct !DIGlobalVariable(name: "mtcmos_flag", scope: !3435, file: !3400, line: 887, type: !1214, isLocal: true, isDefinition: true)
!3438 = !DIGlobalVariableExpression(var: !3439, expr: !DIExpression())
!3439 = distinct !DIGlobalVariable(name: "resoure_count", scope: !3440, file: !3400, line: 908, type: !18, isLocal: true, isDefinition: true)
!3440 = distinct !DISubprogram(name: "pmu_ctrl_va28_ldo_mt6385", scope: !3400, file: !3400, line: 906, type: !3441, scopeLine: 907, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3399, retainedNodes: !3443)
!3441 = !DISubroutineType(types: !3442)
!3442 = !{null, !161}
!3443 = !{!3444}
!3444 = !DILocalVariable(name: "enable", arg: 1, scope: !3440, file: !3400, line: 906, type: !161)
!3445 = !DIGlobalVariableExpression(var: !3446, expr: !DIExpression())
!3446 = distinct !DIGlobalVariable(name: "version", scope: !3440, file: !3400, line: 909, type: !161, isLocal: true, isDefinition: true)
!3447 = !DIGlobalVariableExpression(var: !3448, expr: !DIExpression())
!3448 = distinct !DIGlobalVariable(name: "Vcore_Resource_Ctrl", scope: !3449, file: !3400, line: 979, type: !3456, isLocal: true, isDefinition: true)
!3449 = distinct !DISubprogram(name: "pmu_set_vcore_voltage_mt6385", scope: !3400, file: !3400, line: 977, type: !3450, scopeLine: 978, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3399, retainedNodes: !3452)
!3450 = !DISubroutineType(types: !3451)
!3451 = !{!161, !161, !161}
!3452 = !{!3453, !3454, !3455}
!3453 = !DILocalVariable(name: "lock", arg: 1, scope: !3449, file: !3400, line: 977, type: !161)
!3454 = !DILocalVariable(name: "vcore_vosel", arg: 2, scope: !3449, file: !3400, line: 977, type: !161)
!3455 = !DILocalVariable(name: "vol_index", scope: !3449, file: !3400, line: 980, type: !7)
!3456 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 56, elements: !593)
!3457 = !DIGlobalVariableExpression(var: !3458, expr: !DIExpression())
!3458 = distinct !DIGlobalVariable(name: "origin_voltage", scope: !3449, file: !3400, line: 979, type: !161, isLocal: true, isDefinition: true)
!3459 = !DIGlobalVariableExpression(var: !3460, expr: !DIExpression())
!3460 = distinct !DIGlobalVariable(name: "old_vcore", scope: !3449, file: !3400, line: 979, type: !161, isLocal: true, isDefinition: true)
!3461 = !DIGlobalVariableExpression(var: !3462, expr: !DIExpression())
!3462 = distinct !DIGlobalVariable(name: "old_vcore_lp", scope: !3449, file: !3400, line: 979, type: !161, isLocal: true, isDefinition: true)
!3463 = !DIGlobalVariableExpression(var: !3464, expr: !DIExpression())
!3464 = distinct !DIGlobalVariable(name: "init", scope: !3449, file: !3400, line: 979, type: !161, isLocal: true, isDefinition: true)
!3465 = !DIGlobalVariableExpression(var: !3466, expr: !DIExpression())
!3466 = distinct !DIGlobalVariable(name: "S1_setting", scope: !3467, file: !3400, line: 1062, type: !3427, isLocal: true, isDefinition: true)
!3467 = distinct !DISubprogram(name: "pmu_set_vcore_s1_buck_mt6385", scope: !3400, file: !3400, line: 1060, type: !343, scopeLine: 1061, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3399, retainedNodes: !3468)
!3468 = !{!3469}
!3469 = !DILocalVariable(name: "vcbuck_voval", scope: !3467, file: !3400, line: 1063, type: !3470)
!3470 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 224, elements: !593)
!3471 = !DIGlobalVariableExpression(var: !3472, expr: !DIExpression())
!3472 = distinct !DIGlobalVariable(name: "current_setting", scope: !3467, file: !3400, line: 1062, type: !3427, isLocal: true, isDefinition: true)
!3473 = !DIGlobalVariableExpression(var: !3464, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!3474 = !DIGlobalVariableExpression(var: !3475, expr: !DIExpression())
!3475 = distinct !DIGlobalVariable(name: "emi_settings", scope: !3476, file: !3477, line: 44, type: !3623, isLocal: false, isDefinition: true)
!3476 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3477, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3478, retainedTypes: !3484, globals: !3485, splitDebugInlining: false, nameTableKind: None)
!3477 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_emi.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sd_read_write_data_dma/GCC")
!3478 = !{!3479}
!3479 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "emi_clock_enum_t", file: !3480, line: 40, baseType: !18, size: 32, elements: !3481)
!3480 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_emi_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sd_read_write_data_dma/GCC")
!3481 = !{!3482, !3483}
!3482 = !DIEnumerator(name: "EMI_CLK_LOW_TO_HIGH", value: 0)
!3483 = !DIEnumerator(name: "EMI_CLK_HIGH_TO_LOW", value: 1)
!3484 = !{!1800}
!3485 = !{!3474, !3486, !3488, !3490, !3492, !3593, !3595, !3597, !3599, !3601, !3603, !3605, !3607, !3609, !3611, !3613, !3615, !3617, !3619, !3621}
!3486 = !DIGlobalVariableExpression(var: !3487, expr: !DIExpression())
!3487 = distinct !DIGlobalVariable(name: "__EMI_CurSR0", scope: !3476, file: !3477, line: 65, type: !61, isLocal: false, isDefinition: true)
!3488 = !DIGlobalVariableExpression(var: !3489, expr: !DIExpression())
!3489 = distinct !DIGlobalVariable(name: "__EMI_CurSR1", scope: !3476, file: !3477, line: 66, type: !61, isLocal: false, isDefinition: true)
!3490 = !DIGlobalVariableExpression(var: !3491, expr: !DIExpression())
!3491 = distinct !DIGlobalVariable(name: "__EMI_CurSR2", scope: !3476, file: !3477, line: 67, type: !61, isLocal: false, isDefinition: true)
!3492 = !DIGlobalVariableExpression(var: !3493, expr: !DIExpression())
!3493 = distinct !DIGlobalVariable(name: "emi_register", scope: !3476, file: !3477, line: 83, type: !3494, isLocal: false, isDefinition: true)
!3494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3495, size: 32)
!3495 = !DIDerivedType(tag: DW_TAG_typedef, name: "EMI_REGISTER_T", file: !56, line: 2524, baseType: !3496)
!3496 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 2447, size: 6752, elements: !3497)
!3497 = !{!3498, !3502, !3503, !3504, !3505, !3509, !3510, !3512, !3513, !3517, !3518, !3519, !3520, !3521, !3522, !3523, !3524, !3525, !3526, !3527, !3528, !3529, !3530, !3534, !3535, !3536, !3537, !3538, !3539, !3540, !3541, !3542, !3543, !3544, !3545, !3546, !3547, !3548, !3549, !3550, !3551, !3552, !3553, !3554, !3555, !3559, !3560, !3561, !3562, !3563, !3564, !3565, !3566, !3567, !3568, !3569, !3570, !3571, !3572, !3573, !3574, !3575, !3576, !3577, !3578, !3582, !3583, !3584, !3585, !3586, !3587, !3588, !3589, !3590, !3591, !3592}
!3498 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3496, file: !56, line: 2448, baseType: !3499, size: 768)
!3499 = !DICompositeType(tag: DW_TAG_array_type, baseType: !592, size: 768, elements: !3500)
!3500 = !{!3501}
!3501 = !DISubrange(count: 96)
!3502 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_CONM", scope: !3496, file: !56, line: 2449, baseType: !60, size: 32, offset: 768)
!3503 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3496, file: !56, line: 2450, baseType: !1298, size: 96, offset: 800)
!3504 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_GENA", scope: !3496, file: !56, line: 2451, baseType: !60, size: 32, offset: 896)
!3505 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3496, file: !56, line: 2452, baseType: !3506, size: 160, offset: 928)
!3506 = !DICompositeType(tag: DW_TAG_array_type, baseType: !592, size: 160, elements: !3507)
!3507 = !{!3508}
!3508 = !DISubrange(count: 20)
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_RDCT", scope: !3496, file: !56, line: 2453, baseType: !60, size: 32, offset: 1088)
!3510 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3496, file: !56, line: 2454, baseType: !3511, size: 32, offset: 1120)
!3511 = !DICompositeType(tag: DW_TAG_array_type, baseType: !592, size: 32, elements: !748)
!3512 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_DLLV", scope: !3496, file: !56, line: 2455, baseType: !60, size: 32, offset: 1152)
!3513 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3496, file: !56, line: 2456, baseType: !3514, size: 480, offset: 1184)
!3514 = !DICompositeType(tag: DW_TAG_array_type, baseType: !592, size: 480, elements: !3515)
!3515 = !{!3516}
!3516 = !DISubrange(count: 60)
!3517 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDLC", scope: !3496, file: !56, line: 2457, baseType: !60, size: 32, offset: 1664)
!3518 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3496, file: !56, line: 2458, baseType: !3511, size: 32, offset: 1696)
!3519 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDLD", scope: !3496, file: !56, line: 2459, baseType: !60, size: 32, offset: 1728)
!3520 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !3496, file: !56, line: 2460, baseType: !3511, size: 32, offset: 1760)
!3521 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDLE", scope: !3496, file: !56, line: 2461, baseType: !60, size: 32, offset: 1792)
!3522 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED8", scope: !3496, file: !56, line: 2462, baseType: !3506, size: 160, offset: 1824)
!3523 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODLC", scope: !3496, file: !56, line: 2463, baseType: !60, size: 32, offset: 1984)
!3524 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED9", scope: !3496, file: !56, line: 2464, baseType: !3511, size: 32, offset: 2016)
!3525 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODLD", scope: !3496, file: !56, line: 2465, baseType: !60, size: 32, offset: 2048)
!3526 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED10", scope: !3496, file: !56, line: 2466, baseType: !3511, size: 32, offset: 2080)
!3527 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODLE", scope: !3496, file: !56, line: 2467, baseType: !60, size: 32, offset: 2112)
!3528 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED11", scope: !3496, file: !56, line: 2468, baseType: !3511, size: 32, offset: 2144)
!3529 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODLF", scope: !3496, file: !56, line: 2469, baseType: !60, size: 32, offset: 2176)
!3530 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED12", scope: !3496, file: !56, line: 2470, baseType: !3531, size: 224, offset: 2208)
!3531 = !DICompositeType(tag: DW_TAG_array_type, baseType: !592, size: 224, elements: !3532)
!3532 = !{!3533}
!3533 = !DISubrange(count: 28)
!3534 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IOA", scope: !3496, file: !56, line: 2471, baseType: !60, size: 32, offset: 2432)
!3535 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED13", scope: !3496, file: !56, line: 2472, baseType: !3511, size: 32, offset: 2464)
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IOB", scope: !3496, file: !56, line: 2473, baseType: !60, size: 32, offset: 2496)
!3537 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED14", scope: !3496, file: !56, line: 2474, baseType: !1298, size: 96, offset: 2528)
!3538 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_HFSLP", scope: !3496, file: !56, line: 2475, baseType: !60, size: 32, offset: 2624)
!3539 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED15", scope: !3496, file: !56, line: 2476, baseType: !3511, size: 32, offset: 2656)
!3540 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_DSRAM", scope: !3496, file: !56, line: 2477, baseType: !60, size: 32, offset: 2688)
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED16", scope: !3496, file: !56, line: 2478, baseType: !3511, size: 32, offset: 2720)
!3542 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MSRAM", scope: !3496, file: !56, line: 2479, baseType: !60, size: 32, offset: 2752)
!3543 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED17", scope: !3496, file: !56, line: 2480, baseType: !3511, size: 32, offset: 2784)
!3544 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MREG_RW", scope: !3496, file: !56, line: 2481, baseType: !60, size: 32, offset: 2816)
!3545 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED18", scope: !3496, file: !56, line: 2482, baseType: !1298, size: 96, offset: 2848)
!3546 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ARBA", scope: !3496, file: !56, line: 2483, baseType: !60, size: 32, offset: 2944)
!3547 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED19", scope: !3496, file: !56, line: 2484, baseType: !3511, size: 32, offset: 2976)
!3548 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ARBB", scope: !3496, file: !56, line: 2485, baseType: !60, size: 32, offset: 3008)
!3549 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED20", scope: !3496, file: !56, line: 2486, baseType: !3511, size: 32, offset: 3040)
!3550 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ARBC", scope: !3496, file: !56, line: 2487, baseType: !60, size: 32, offset: 3072)
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED21", scope: !3496, file: !56, line: 2488, baseType: !3506, size: 160, offset: 3104)
!3552 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_SLCT", scope: !3496, file: !56, line: 2489, baseType: !60, size: 32, offset: 3264)
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED22", scope: !3496, file: !56, line: 2490, baseType: !3511, size: 32, offset: 3296)
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ABCT", scope: !3496, file: !56, line: 2491, baseType: !60, size: 32, offset: 3328)
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED23", scope: !3496, file: !56, line: 2492, baseType: !3556, size: 736, offset: 3360)
!3556 = !DICompositeType(tag: DW_TAG_array_type, baseType: !592, size: 736, elements: !3557)
!3557 = !{!3558}
!3558 = !DISubrange(count: 92)
!3559 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_BMEN", scope: !3496, file: !56, line: 2493, baseType: !60, size: 32, offset: 4096)
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED24", scope: !3496, file: !56, line: 2494, baseType: !3511, size: 32, offset: 4128)
!3561 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_BCNT", scope: !3496, file: !56, line: 2495, baseType: !60, size: 32, offset: 4160)
!3562 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED25", scope: !3496, file: !56, line: 2496, baseType: !3511, size: 32, offset: 4192)
!3563 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_TACT", scope: !3496, file: !56, line: 2497, baseType: !60, size: 32, offset: 4224)
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED26", scope: !3496, file: !56, line: 2498, baseType: !3511, size: 32, offset: 4256)
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_TSCT", scope: !3496, file: !56, line: 2499, baseType: !60, size: 32, offset: 4288)
!3566 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED27", scope: !3496, file: !56, line: 2500, baseType: !3511, size: 32, offset: 4320)
!3567 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_WACT", scope: !3496, file: !56, line: 2501, baseType: !60, size: 32, offset: 4352)
!3568 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED28", scope: !3496, file: !56, line: 2502, baseType: !3511, size: 32, offset: 4384)
!3569 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_WSCT", scope: !3496, file: !56, line: 2503, baseType: !60, size: 32, offset: 4416)
!3570 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED29", scope: !3496, file: !56, line: 2504, baseType: !3511, size: 32, offset: 4448)
!3571 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_BACT", scope: !3496, file: !56, line: 2505, baseType: !60, size: 32, offset: 4480)
!3572 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED30", scope: !3496, file: !56, line: 2506, baseType: !3511, size: 32, offset: 4512)
!3573 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_BSCT0", scope: !3496, file: !56, line: 2507, baseType: !60, size: 32, offset: 4544)
!3574 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED31", scope: !3496, file: !56, line: 2508, baseType: !3511, size: 32, offset: 4576)
!3575 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_BSCT1", scope: !3496, file: !56, line: 2509, baseType: !60, size: 32, offset: 4608)
!3576 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED32", scope: !3496, file: !56, line: 2510, baseType: !3514, size: 480, offset: 4640)
!3577 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_TTYPE1", scope: !3496, file: !56, line: 2511, baseType: !60, size: 32, offset: 5120)
!3578 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED33", scope: !3496, file: !56, line: 2512, baseType: !3579, size: 992, offset: 5152)
!3579 = !DICompositeType(tag: DW_TAG_array_type, baseType: !592, size: 992, elements: !3580)
!3580 = !{!3581}
!3581 = !DISubrange(count: 124)
!3582 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MBISTA", scope: !3496, file: !56, line: 2513, baseType: !60, size: 32, offset: 6144)
!3583 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED34", scope: !3496, file: !56, line: 2514, baseType: !3511, size: 32, offset: 6176)
!3584 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MBISTB", scope: !3496, file: !56, line: 2515, baseType: !60, size: 32, offset: 6208)
!3585 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED35", scope: !3496, file: !56, line: 2516, baseType: !3511, size: 32, offset: 6240)
!3586 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MBISTC", scope: !3496, file: !56, line: 2517, baseType: !60, size: 32, offset: 6272)
!3587 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED36", scope: !3496, file: !56, line: 2518, baseType: !3511, size: 32, offset: 6304)
!3588 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MBISTD", scope: !3496, file: !56, line: 2519, baseType: !60, size: 32, offset: 6336)
!3589 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED37", scope: !3496, file: !56, line: 2520, baseType: !3506, size: 160, offset: 6368)
!3590 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_TEST", scope: !3496, file: !56, line: 2521, baseType: !60, size: 32, offset: 6528)
!3591 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED38", scope: !3496, file: !56, line: 2522, baseType: !3506, size: 160, offset: 6560)
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_VENDER_INFO", scope: !3496, file: !56, line: 2523, baseType: !60, size: 32, offset: 6720)
!3593 = !DIGlobalVariableExpression(var: !3594, expr: !DIExpression())
!3594 = distinct !DIGlobalVariable(name: "dvfs_dma_runing_status", scope: !3476, file: !3477, line: 485, type: !60, isLocal: false, isDefinition: true)
!3595 = !DIGlobalVariableExpression(var: !3596, expr: !DIExpression())
!3596 = distinct !DIGlobalVariable(name: "EMI_GENA_VAL", scope: !3476, file: !3477, line: 68, type: !61, isLocal: false, isDefinition: true)
!3597 = !DIGlobalVariableExpression(var: !3598, expr: !DIExpression())
!3598 = distinct !DIGlobalVariable(name: "EMI_RDCT_VAL", scope: !3476, file: !3477, line: 69, type: !61, isLocal: false, isDefinition: true)
!3599 = !DIGlobalVariableExpression(var: !3600, expr: !DIExpression())
!3600 = distinct !DIGlobalVariable(name: "EMI_DSRAM_VAL", scope: !3476, file: !3477, line: 70, type: !61, isLocal: false, isDefinition: true)
!3601 = !DIGlobalVariableExpression(var: !3602, expr: !DIExpression())
!3602 = distinct !DIGlobalVariable(name: "EMI_MSRAM_VAL", scope: !3476, file: !3477, line: 71, type: !61, isLocal: false, isDefinition: true)
!3603 = !DIGlobalVariableExpression(var: !3604, expr: !DIExpression())
!3604 = distinct !DIGlobalVariable(name: "EMI_IDL_C_VAL", scope: !3476, file: !3477, line: 72, type: !61, isLocal: false, isDefinition: true)
!3605 = !DIGlobalVariableExpression(var: !3606, expr: !DIExpression())
!3606 = distinct !DIGlobalVariable(name: "EMI_IDL_D_VAL", scope: !3476, file: !3477, line: 73, type: !61, isLocal: false, isDefinition: true)
!3607 = !DIGlobalVariableExpression(var: !3608, expr: !DIExpression())
!3608 = distinct !DIGlobalVariable(name: "EMI_IDL_E_VAL", scope: !3476, file: !3477, line: 74, type: !61, isLocal: false, isDefinition: true)
!3609 = !DIGlobalVariableExpression(var: !3610, expr: !DIExpression())
!3610 = distinct !DIGlobalVariable(name: "EMI_ODL_C_VAL", scope: !3476, file: !3477, line: 75, type: !61, isLocal: false, isDefinition: true)
!3611 = !DIGlobalVariableExpression(var: !3612, expr: !DIExpression())
!3612 = distinct !DIGlobalVariable(name: "EMI_ODL_D_VAL", scope: !3476, file: !3477, line: 76, type: !61, isLocal: false, isDefinition: true)
!3613 = !DIGlobalVariableExpression(var: !3614, expr: !DIExpression())
!3614 = distinct !DIGlobalVariable(name: "EMI_ODL_E_VAL", scope: !3476, file: !3477, line: 77, type: !61, isLocal: false, isDefinition: true)
!3615 = !DIGlobalVariableExpression(var: !3616, expr: !DIExpression())
!3616 = distinct !DIGlobalVariable(name: "EMI_ODL_F_VAL", scope: !3476, file: !3477, line: 78, type: !61, isLocal: false, isDefinition: true)
!3617 = !DIGlobalVariableExpression(var: !3618, expr: !DIExpression())
!3618 = distinct !DIGlobalVariable(name: "EMI_IO_A_VAL", scope: !3476, file: !3477, line: 79, type: !61, isLocal: false, isDefinition: true)
!3619 = !DIGlobalVariableExpression(var: !3620, expr: !DIExpression())
!3620 = distinct !DIGlobalVariable(name: "EMI_IO_B_VAL", scope: !3476, file: !3477, line: 80, type: !61, isLocal: false, isDefinition: true)
!3621 = !DIGlobalVariableExpression(var: !3622, expr: !DIExpression())
!3622 = distinct !DIGlobalVariable(name: "emi_register_backup", scope: !3476, file: !3477, line: 84, type: !3495, isLocal: false, isDefinition: true)
!3623 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3624, size: 416, elements: !76)
!3624 = !DIDerivedType(tag: DW_TAG_typedef, name: "EMI_SETTINGS", file: !3480, line: 60, baseType: !3625)
!3625 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3480, line: 45, size: 416, elements: !3626)
!3626 = !{!3627, !3628, !3629, !3630, !3631, !3632, !3633, !3634, !3635, !3636, !3637, !3638, !3639}
!3627 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_GENA_VAL", scope: !3625, file: !3480, line: 46, baseType: !61, size: 32)
!3628 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_RDCT_VAL", scope: !3625, file: !3480, line: 47, baseType: !61, size: 32, offset: 32)
!3629 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_DSRAM_VAL", scope: !3625, file: !3480, line: 48, baseType: !61, size: 32, offset: 64)
!3630 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MSRAM_VAL", scope: !3625, file: !3480, line: 49, baseType: !61, size: 32, offset: 96)
!3631 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDL_C_VAL", scope: !3625, file: !3480, line: 50, baseType: !61, size: 32, offset: 128)
!3632 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDL_D_VAL", scope: !3625, file: !3480, line: 51, baseType: !61, size: 32, offset: 160)
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDL_E_VAL", scope: !3625, file: !3480, line: 52, baseType: !61, size: 32, offset: 192)
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODL_C_VAL", scope: !3625, file: !3480, line: 53, baseType: !61, size: 32, offset: 224)
!3635 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODL_D_VAL", scope: !3625, file: !3480, line: 54, baseType: !61, size: 32, offset: 256)
!3636 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODL_E_VAL", scope: !3625, file: !3480, line: 55, baseType: !61, size: 32, offset: 288)
!3637 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODL_F_VAL", scope: !3625, file: !3480, line: 56, baseType: !61, size: 32, offset: 320)
!3638 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IO_A_VAL", scope: !3625, file: !3480, line: 57, baseType: !61, size: 32, offset: 352)
!3639 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IO_B_VAL", scope: !3625, file: !3480, line: 58, baseType: !61, size: 32, offset: 384)
!3640 = !DIGlobalVariableExpression(var: !3641, expr: !DIExpression())
!3641 = distinct !DIGlobalVariable(name: "dvfs_domain_head", scope: !3642, file: !3643, line: 47, type: !3647, isLocal: true, isDefinition: true)
!3642 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3643, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !3644, splitDebugInlining: false, nameTableKind: None)
!3643 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_dvfs_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sd_read_write_data_dma/GCC")
!3644 = !{!3640, !3645}
!3645 = !DIGlobalVariableExpression(var: !3646, expr: !DIExpression())
!3646 = distinct !DIGlobalVariable(name: "dvfs_switched_to_privileged", scope: !3642, file: !3643, line: 49, type: !91, isLocal: false, isDefinition: true)
!3647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3648, size: 32)
!3648 = !DIDerivedType(tag: DW_TAG_typedef, name: "dvfs_domain_t", file: !1554, line: 120, baseType: !3649)
!3649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dvfs_domain_t", file: !1554, line: 113, size: 512, elements: !3650)
!3650 = !{!3651, !3652, !3653, !3708, !3720, !3721}
!3651 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3649, file: !1554, line: 114, baseType: !165, size: 32)
!3652 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !3649, file: !1554, line: 115, baseType: !91, size: 8, offset: 32)
!3653 = !DIDerivedType(tag: DW_TAG_member, name: "opp", scope: !3649, file: !1554, line: 116, baseType: !3654, size: 352, offset: 64)
!3654 = !DIDerivedType(tag: DW_TAG_typedef, name: "dvfs_opp_t", file: !1554, line: 111, baseType: !3655)
!3655 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1554, line: 102, size: 352, elements: !3656)
!3656 = !{!3657, !3658, !3659, !3660, !3661, !3662, !3663, !3707}
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "cur_opp", scope: !3655, file: !1554, line: 103, baseType: !18, size: 32)
!3658 = !DIDerivedType(tag: DW_TAG_member, name: "opp_num", scope: !3655, file: !1554, line: 104, baseType: !61, size: 32, offset: 32)
!3659 = !DIDerivedType(tag: DW_TAG_member, name: "module_num", scope: !3655, file: !1554, line: 105, baseType: !18, size: 32, offset: 64)
!3660 = !DIDerivedType(tag: DW_TAG_member, name: "notification_num", scope: !3655, file: !1554, line: 106, baseType: !18, size: 32, offset: 96)
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "voltage", scope: !3655, file: !1554, line: 107, baseType: !1575, size: 32, offset: 128)
!3662 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !3655, file: !1554, line: 108, baseType: !1575, size: 32, offset: 160)
!3663 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3655, file: !1554, line: 109, baseType: !3664, size: 128, offset: 192)
!3664 = !DIDerivedType(tag: DW_TAG_typedef, name: "dvfs_opp_ops_t", file: !1554, line: 91, baseType: !3665)
!3665 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1554, line: 86, size: 128, elements: !3666)
!3666 = !{!3667, !3672, !3676, !3677}
!3667 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !3665, file: !1554, line: 87, baseType: !3668, size: 32)
!3668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3669, size: 32)
!3669 = !DISubroutineType(types: !3670)
!3670 = !{!91, !3671, !18, !18}
!3671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3649, size: 32)
!3672 = !DIDerivedType(tag: DW_TAG_member, name: "switch_voltage", scope: !3665, file: !1554, line: 88, baseType: !3673, size: 32, offset: 32)
!3673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3674, size: 32)
!3674 = !DISubroutineType(types: !3675)
!3675 = !{null, !3671, !18, !18}
!3676 = !DIDerivedType(tag: DW_TAG_member, name: "switch_frequency", scope: !3665, file: !1554, line: 89, baseType: !3673, size: 32, offset: 64)
!3677 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_module", scope: !3665, file: !1554, line: 90, baseType: !3678, size: 32, offset: 96)
!3678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3679, size: 32)
!3679 = !DISubroutineType(types: !3680)
!3680 = !{!3681, !3671, !3681}
!3681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3682, size: 32)
!3682 = !DIDerivedType(tag: DW_TAG_typedef, name: "dvfs_opp_module_t", file: !1554, line: 84, baseType: !3683)
!3683 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dvfs_opp_module_t", file: !1554, line: 80, size: 96, elements: !3684)
!3684 = !{!3685, !3686, !3706}
!3685 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3683, file: !1554, line: 81, baseType: !165, size: 32)
!3686 = !DIDerivedType(tag: DW_TAG_member, name: "notification", scope: !3683, file: !1554, line: 82, baseType: !3687, size: 32, offset: 32)
!3687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3688, size: 32)
!3688 = !DIDerivedType(tag: DW_TAG_typedef, name: "dvfs_notification_t", file: !1554, line: 78, baseType: !3689)
!3689 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dvfs_notification_t", file: !1554, line: 69, size: 288, elements: !3690)
!3690 = !{!3691, !3692, !3693, !3694, !3700, !3701, !3703, !3705}
!3691 = !DIDerivedType(tag: DW_TAG_member, name: "domain", scope: !3689, file: !1554, line: 70, baseType: !165, size: 32)
!3692 = !DIDerivedType(tag: DW_TAG_member, name: "module", scope: !3689, file: !1554, line: 71, baseType: !165, size: 32, offset: 32)
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "addressee", scope: !3689, file: !1554, line: 72, baseType: !165, size: 32, offset: 64)
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3689, file: !1554, line: 73, baseType: !3695, size: 64, offset: 96)
!3695 = !DIDerivedType(tag: DW_TAG_typedef, name: "dvfs_notification_ops_t", file: !1554, line: 67, baseType: !3696)
!3696 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1554, line: 64, size: 64, elements: !3697)
!3697 = !{!3698, !3699}
!3698 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !3696, file: !1554, line: 65, baseType: !1612, size: 32)
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !3696, file: !1554, line: 66, baseType: !1616, size: 32, offset: 32)
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "dm", scope: !3689, file: !1554, line: 74, baseType: !3671, size: 32, offset: 160)
!3701 = !DIDerivedType(tag: DW_TAG_member, name: "mod", scope: !3689, file: !1554, line: 75, baseType: !3702, size: 32, offset: 192)
!3702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3683, size: 32)
!3703 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3689, file: !1554, line: 76, baseType: !3704, size: 32, offset: 224)
!3704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3689, size: 32)
!3705 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3689, file: !1554, line: 77, baseType: !3704, size: 32, offset: 256)
!3706 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !3683, file: !1554, line: 83, baseType: !1575, size: 32, offset: 64)
!3707 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3655, file: !1554, line: 110, baseType: !88, size: 32, offset: 320)
!3708 = !DIDerivedType(tag: DW_TAG_member, name: "lock_head", scope: !3649, file: !1554, line: 117, baseType: !3709, size: 32, offset: 416)
!3709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3710, size: 32)
!3710 = !DIDerivedType(tag: DW_TAG_typedef, name: "dvfs_lock_t", file: !1554, line: 100, baseType: !3711)
!3711 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dvfs_lock_t", file: !1554, line: 93, size: 192, elements: !3712)
!3712 = !{!3713, !3714, !3715, !3716, !3717, !3719}
!3713 = !DIDerivedType(tag: DW_TAG_member, name: "domain", scope: !3711, file: !1554, line: 94, baseType: !165, size: 32)
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "addressee", scope: !3711, file: !1554, line: 95, baseType: !165, size: 32, offset: 32)
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3711, file: !1554, line: 96, baseType: !18, size: 32, offset: 64)
!3716 = !DIDerivedType(tag: DW_TAG_member, name: "dm", scope: !3711, file: !1554, line: 97, baseType: !3671, size: 32, offset: 96)
!3717 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3711, file: !1554, line: 98, baseType: !3718, size: 32, offset: 128)
!3718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3711, size: 32)
!3719 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3711, file: !1554, line: 99, baseType: !3718, size: 32, offset: 160)
!3720 = !DIDerivedType(tag: DW_TAG_member, name: "lock_end", scope: !3649, file: !1554, line: 118, baseType: !3709, size: 32, offset: 448)
!3721 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3649, file: !1554, line: 119, baseType: !3671, size: 32, offset: 480)
!3722 = !DIGlobalVariableExpression(var: !3723, expr: !DIExpression())
!3723 = distinct !DIGlobalVariable(name: "cm_freq_state", scope: !3724, file: !3725, line: 48, type: !3733, isLocal: false, isDefinition: true)
!3724 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3725, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3726, globals: !3732, splitDebugInlining: false, nameTableKind: None)
!3725 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_clock_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sd_read_write_data_dma/GCC")
!3726 = !{!3727}
!3727 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2002, line: 100, baseType: !18, size: 32, elements: !3728)
!3728 = !{!3729, !3730, !3731}
!3729 = !DIEnumerator(name: "CM_208M_STA", value: 0)
!3730 = !DIEnumerator(name: "CM_104M_STA", value: 1)
!3731 = !DIEnumerator(name: "CM_26M_STA", value: 2)
!3732 = !{!3722}
!3733 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_cm_freq_state_id", file: !2002, line: 104, baseType: !3727)
!3734 = !DIGlobalVariableExpression(var: !3735, expr: !DIExpression())
!3735 = distinct !DIGlobalVariable(name: "HAL_MSDC_EINT", scope: !3736, file: !3737, line: 51, type: !3745, isLocal: false, isDefinition: true)
!3736 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3737, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3738, globals: !3739, splitDebugInlining: false, nameTableKind: None)
!3737 = !DIFile(filename: "../../../../../project/mt2523_hdk/hal_examples/sd_read_write_data_dma/src/main.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sd_read_write_data_dma/GCC")
!3738 = !{!912, !942, !958, !964, !968, !636, !1390, !1374, !1380}
!3739 = !{!3734, !3740, !3743}
!3740 = !DIGlobalVariableExpression(var: !3741, expr: !DIExpression())
!3741 = distinct !DIGlobalVariable(name: "sd_read_mutil_buffer", scope: !3736, file: !3737, line: 52, type: !3742, isLocal: false, isDefinition: true, align: 32)
!3742 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 16384, elements: !2888)
!3743 = !DIGlobalVariableExpression(var: !3744, expr: !DIExpression())
!3744 = distinct !DIGlobalVariable(name: "sd_write_mutil_buffer", scope: !3736, file: !3737, line: 53, type: !3742, isLocal: false, isDefinition: true, align: 32)
!3745 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !161)
!3746 = !DIGlobalVariableExpression(var: !3747, expr: !DIExpression())
!3747 = distinct !DIGlobalVariable(name: "heap_end", scope: !3748, file: !3749, line: 69, type: !982, isLocal: true, isDefinition: true)
!3748 = distinct !DISubprogram(name: "_sbrk_r", scope: !3749, file: !3749, line: 66, type: !3750, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3938, retainedNodes: !3942)
!3749 = !DIFile(filename: "../../../../../project/mt2523_hdk/hal_examples/sd_read_write_data_dma/GCC/syscalls.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sd_read_write_data_dma/GCC")
!3750 = !DISubroutineType(types: !3751)
!3751 = !{!3752, !3754, !3937}
!3752 = !DIDerivedType(tag: DW_TAG_typedef, name: "caddr_t", file: !3753, line: 123, baseType: !982)
!3753 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/types.h", directory: "/home/mjshen/RTOSExploration")
!3754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3755, size: 32)
!3755 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_reent", file: !3756, line: 377, size: 1920, elements: !3757)
!3756 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/reent.h", directory: "/home/mjshen/RTOSExploration")
!3757 = !{!3758, !3759, !3828, !3829, !3830, !3831, !3832, !3833, !3834, !3837, !3858, !3862, !3863, !3864, !3865, !3874, !3887, !3888, !3893, !3911, !3912, !3919, !3920, !3936}
!3758 = !DIDerivedType(tag: DW_TAG_member, name: "_errno", scope: !3755, file: !3756, line: 381, baseType: !7, size: 32)
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "_stdin", scope: !3755, file: !3756, line: 386, baseType: !3760, size: 32, offset: 32)
!3760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3761, size: 32)
!3761 = !DIDerivedType(tag: DW_TAG_typedef, name: "__FILE", file: !3756, line: 292, baseType: !3762)
!3762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__sFILE", file: !3756, line: 186, size: 832, elements: !3763)
!3763 = !{!3764, !3766, !3767, !3768, !3769, !3770, !3775, !3776, !3777, !3778, !3782, !3786, !3793, !3797, !3798, !3799, !3800, !3802, !3804, !3805, !3806, !3808, !3814, !3827}
!3764 = !DIDerivedType(tag: DW_TAG_member, name: "_p", scope: !3762, file: !3756, line: 187, baseType: !3765, size: 32)
!3765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !161, size: 32)
!3766 = !DIDerivedType(tag: DW_TAG_member, name: "_r", scope: !3762, file: !3756, line: 188, baseType: !7, size: 32, offset: 32)
!3767 = !DIDerivedType(tag: DW_TAG_member, name: "_w", scope: !3762, file: !3756, line: 189, baseType: !7, size: 32, offset: 64)
!3768 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !3762, file: !3756, line: 190, baseType: !2660, size: 16, offset: 96)
!3769 = !DIDerivedType(tag: DW_TAG_member, name: "_file", scope: !3762, file: !3756, line: 191, baseType: !2660, size: 16, offset: 112)
!3770 = !DIDerivedType(tag: DW_TAG_member, name: "_bf", scope: !3762, file: !3756, line: 192, baseType: !3771, size: 64, offset: 128)
!3771 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__sbuf", file: !3756, line: 122, size: 64, elements: !3772)
!3772 = !{!3773, !3774}
!3773 = !DIDerivedType(tag: DW_TAG_member, name: "_base", scope: !3771, file: !3756, line: 123, baseType: !3765, size: 32)
!3774 = !DIDerivedType(tag: DW_TAG_member, name: "_size", scope: !3771, file: !3756, line: 124, baseType: !7, size: 32, offset: 32)
!3775 = !DIDerivedType(tag: DW_TAG_member, name: "_lbfsize", scope: !3762, file: !3756, line: 193, baseType: !7, size: 32, offset: 192)
!3776 = !DIDerivedType(tag: DW_TAG_member, name: "_data", scope: !3762, file: !3756, line: 196, baseType: !3754, size: 32, offset: 224)
!3777 = !DIDerivedType(tag: DW_TAG_member, name: "_cookie", scope: !3762, file: !3756, line: 200, baseType: !88, size: 32, offset: 256)
!3778 = !DIDerivedType(tag: DW_TAG_member, name: "_read", scope: !3762, file: !3756, line: 202, baseType: !3779, size: 32, offset: 288)
!3779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3780, size: 32)
!3780 = !DISubroutineType(types: !3781)
!3781 = !{!7, !3754, !88, !982, !7}
!3782 = !DIDerivedType(tag: DW_TAG_member, name: "_write", scope: !3762, file: !3756, line: 204, baseType: !3783, size: 32, offset: 320)
!3783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3784, size: 32)
!3784 = !DISubroutineType(types: !3785)
!3785 = !{!7, !3754, !88, !165, !7}
!3786 = !DIDerivedType(tag: DW_TAG_member, name: "_seek", scope: !3762, file: !3756, line: 207, baseType: !3787, size: 32, offset: 352)
!3787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3788, size: 32)
!3788 = !DISubroutineType(types: !3789)
!3789 = !{!3790, !3754, !88, !3790, !7}
!3790 = !DIDerivedType(tag: DW_TAG_typedef, name: "_fpos_t", file: !3791, line: 116, baseType: !3792)
!3791 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_types.h", directory: "/home/mjshen/RTOSExploration")
!3792 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!3793 = !DIDerivedType(tag: DW_TAG_member, name: "_close", scope: !3762, file: !3756, line: 208, baseType: !3794, size: 32, offset: 384)
!3794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3795, size: 32)
!3795 = !DISubroutineType(types: !3796)
!3796 = !{!7, !3754, !88}
!3797 = !DIDerivedType(tag: DW_TAG_member, name: "_ub", scope: !3762, file: !3756, line: 211, baseType: !3771, size: 64, offset: 416)
!3798 = !DIDerivedType(tag: DW_TAG_member, name: "_up", scope: !3762, file: !3756, line: 212, baseType: !3765, size: 32, offset: 480)
!3799 = !DIDerivedType(tag: DW_TAG_member, name: "_ur", scope: !3762, file: !3756, line: 213, baseType: !7, size: 32, offset: 512)
!3800 = !DIDerivedType(tag: DW_TAG_member, name: "_ubuf", scope: !3762, file: !3756, line: 216, baseType: !3801, size: 24, offset: 544)
!3801 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 24, elements: !1728)
!3802 = !DIDerivedType(tag: DW_TAG_member, name: "_nbuf", scope: !3762, file: !3756, line: 217, baseType: !3803, size: 8, offset: 568)
!3803 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 8, elements: !76)
!3804 = !DIDerivedType(tag: DW_TAG_member, name: "_lb", scope: !3762, file: !3756, line: 220, baseType: !3771, size: 64, offset: 576)
!3805 = !DIDerivedType(tag: DW_TAG_member, name: "_blksize", scope: !3762, file: !3756, line: 223, baseType: !7, size: 32, offset: 640)
!3806 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !3762, file: !3756, line: 224, baseType: !3807, size: 32, offset: 672)
!3807 = !DIDerivedType(tag: DW_TAG_typedef, name: "_off_t", file: !3791, line: 46, baseType: !3792)
!3808 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !3762, file: !3756, line: 231, baseType: !3809, size: 32, offset: 704)
!3809 = !DIDerivedType(tag: DW_TAG_typedef, name: "_flock_t", file: !3756, line: 35, baseType: !3810)
!3810 = !DIDerivedType(tag: DW_TAG_typedef, name: "_LOCK_T", file: !3811, line: 34, baseType: !3812)
!3811 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/lock.h", directory: "/home/mjshen/RTOSExploration")
!3812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3813, size: 32)
!3813 = !DICompositeType(tag: DW_TAG_structure_type, name: "__lock", file: !3811, line: 33, flags: DIFlagFwdDecl)
!3814 = !DIDerivedType(tag: DW_TAG_member, name: "_mbstate", scope: !3762, file: !3756, line: 233, baseType: !3815, size: 64, offset: 736)
!3815 = !DIDerivedType(tag: DW_TAG_typedef, name: "_mbstate_t", file: !3791, line: 170, baseType: !3816)
!3816 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3791, line: 162, size: 64, elements: !3817)
!3817 = !{!3818, !3819}
!3818 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !3816, file: !3791, line: 164, baseType: !7, size: 32)
!3819 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !3816, file: !3791, line: 169, baseType: !3820, size: 32, offset: 32)
!3820 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3816, file: !3791, line: 165, size: 32, elements: !3821)
!3821 = !{!3822, !3825}
!3822 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !3820, file: !3791, line: 167, baseType: !3823, size: 32)
!3823 = !DIDerivedType(tag: DW_TAG_typedef, name: "wint_t", file: !3824, line: 116, baseType: !7)
!3824 = !DIFile(filename: "/usr/lib/llvm-14/lib/clang/14.0.6/include/stddef.h", directory: "")
!3825 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !3820, file: !3791, line: 168, baseType: !3826, size: 32)
!3826 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 32, elements: !748)
!3827 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !3762, file: !3756, line: 234, baseType: !7, size: 32, offset: 800)
!3828 = !DIDerivedType(tag: DW_TAG_member, name: "_stdout", scope: !3755, file: !3756, line: 386, baseType: !3760, size: 32, offset: 64)
!3829 = !DIDerivedType(tag: DW_TAG_member, name: "_stderr", scope: !3755, file: !3756, line: 386, baseType: !3760, size: 32, offset: 96)
!3830 = !DIDerivedType(tag: DW_TAG_member, name: "_inc", scope: !3755, file: !3756, line: 388, baseType: !7, size: 32, offset: 128)
!3831 = !DIDerivedType(tag: DW_TAG_member, name: "_emergency", scope: !3755, file: !3756, line: 390, baseType: !982, size: 32, offset: 160)
!3832 = !DIDerivedType(tag: DW_TAG_member, name: "__sdidinit", scope: !3755, file: !3756, line: 392, baseType: !7, size: 32, offset: 192)
!3833 = !DIDerivedType(tag: DW_TAG_member, name: "_unspecified_locale_info", scope: !3755, file: !3756, line: 394, baseType: !7, size: 32, offset: 224)
!3834 = !DIDerivedType(tag: DW_TAG_member, name: "_locale", scope: !3755, file: !3756, line: 395, baseType: !3835, size: 32, offset: 256)
!3835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3836, size: 32)
!3836 = !DICompositeType(tag: DW_TAG_structure_type, name: "__locale_t", file: !3756, line: 45, flags: DIFlagFwdDecl)
!3837 = !DIDerivedType(tag: DW_TAG_member, name: "_mp", scope: !3755, file: !3756, line: 397, baseType: !3838, size: 32, offset: 288)
!3838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3839, size: 32)
!3839 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_mprec", file: !3756, line: 349, size: 128, elements: !3840)
!3840 = !{!3841, !3854, !3855, !3856}
!3841 = !DIDerivedType(tag: DW_TAG_member, name: "_result", scope: !3839, file: !3756, line: 352, baseType: !3842, size: 32)
!3842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3843, size: 32)
!3843 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Bigint", file: !3756, line: 52, size: 192, elements: !3844)
!3844 = !{!3845, !3846, !3847, !3848, !3849, !3850}
!3845 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !3843, file: !3756, line: 54, baseType: !3842, size: 32)
!3846 = !DIDerivedType(tag: DW_TAG_member, name: "_k", scope: !3843, file: !3756, line: 55, baseType: !7, size: 32, offset: 32)
!3847 = !DIDerivedType(tag: DW_TAG_member, name: "_maxwds", scope: !3843, file: !3756, line: 55, baseType: !7, size: 32, offset: 64)
!3848 = !DIDerivedType(tag: DW_TAG_member, name: "_sign", scope: !3843, file: !3756, line: 55, baseType: !7, size: 32, offset: 96)
!3849 = !DIDerivedType(tag: DW_TAG_member, name: "_wds", scope: !3843, file: !3756, line: 55, baseType: !7, size: 32, offset: 128)
!3850 = !DIDerivedType(tag: DW_TAG_member, name: "_x", scope: !3843, file: !3756, line: 56, baseType: !3851, size: 32, offset: 160)
!3851 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3852, size: 32, elements: !76)
!3852 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ULong", file: !3756, line: 22, baseType: !3853)
!3853 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!3854 = !DIDerivedType(tag: DW_TAG_member, name: "_result_k", scope: !3839, file: !3756, line: 353, baseType: !7, size: 32, offset: 32)
!3855 = !DIDerivedType(tag: DW_TAG_member, name: "_p5s", scope: !3839, file: !3756, line: 354, baseType: !3842, size: 32, offset: 64)
!3856 = !DIDerivedType(tag: DW_TAG_member, name: "_freelist", scope: !3839, file: !3756, line: 355, baseType: !3857, size: 32, offset: 96)
!3857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3842, size: 32)
!3858 = !DIDerivedType(tag: DW_TAG_member, name: "__cleanup", scope: !3755, file: !3756, line: 399, baseType: !3859, size: 32, offset: 320)
!3859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3860, size: 32)
!3860 = !DISubroutineType(types: !3861)
!3861 = !{null, !3754}
!3862 = !DIDerivedType(tag: DW_TAG_member, name: "_gamma_signgam", scope: !3755, file: !3756, line: 401, baseType: !7, size: 32, offset: 352)
!3863 = !DIDerivedType(tag: DW_TAG_member, name: "_cvtlen", scope: !3755, file: !3756, line: 404, baseType: !7, size: 32, offset: 384)
!3864 = !DIDerivedType(tag: DW_TAG_member, name: "_cvtbuf", scope: !3755, file: !3756, line: 405, baseType: !982, size: 32, offset: 416)
!3865 = !DIDerivedType(tag: DW_TAG_member, name: "_r48", scope: !3755, file: !3756, line: 407, baseType: !3866, size: 32, offset: 448)
!3866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3867, size: 32)
!3867 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rand48", file: !3756, line: 324, size: 192, elements: !3868)
!3868 = !{!3869, !3871, !3872, !3873}
!3869 = !DIDerivedType(tag: DW_TAG_member, name: "_seed", scope: !3867, file: !3756, line: 325, baseType: !3870, size: 48)
!3870 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1214, size: 48, elements: !1728)
!3871 = !DIDerivedType(tag: DW_TAG_member, name: "_mult", scope: !3867, file: !3756, line: 326, baseType: !3870, size: 48, offset: 48)
!3872 = !DIDerivedType(tag: DW_TAG_member, name: "_add", scope: !3867, file: !3756, line: 327, baseType: !1214, size: 16, offset: 96)
!3873 = !DIDerivedType(tag: DW_TAG_member, name: "_rand_next", scope: !3867, file: !3756, line: 330, baseType: !1551, size: 64, offset: 128)
!3874 = !DIDerivedType(tag: DW_TAG_member, name: "_localtime_buf", scope: !3755, file: !3756, line: 408, baseType: !3875, size: 32, offset: 480)
!3875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3876, size: 32)
!3876 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__tm", file: !3756, line: 60, size: 288, elements: !3877)
!3877 = !{!3878, !3879, !3880, !3881, !3882, !3883, !3884, !3885, !3886}
!3878 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_sec", scope: !3876, file: !3756, line: 62, baseType: !7, size: 32)
!3879 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_min", scope: !3876, file: !3756, line: 63, baseType: !7, size: 32, offset: 32)
!3880 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_hour", scope: !3876, file: !3756, line: 64, baseType: !7, size: 32, offset: 64)
!3881 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_mday", scope: !3876, file: !3756, line: 65, baseType: !7, size: 32, offset: 96)
!3882 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_mon", scope: !3876, file: !3756, line: 66, baseType: !7, size: 32, offset: 128)
!3883 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_year", scope: !3876, file: !3756, line: 67, baseType: !7, size: 32, offset: 160)
!3884 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_wday", scope: !3876, file: !3756, line: 68, baseType: !7, size: 32, offset: 192)
!3885 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_yday", scope: !3876, file: !3756, line: 69, baseType: !7, size: 32, offset: 224)
!3886 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_isdst", scope: !3876, file: !3756, line: 70, baseType: !7, size: 32, offset: 256)
!3887 = !DIDerivedType(tag: DW_TAG_member, name: "_asctime_buf", scope: !3755, file: !3756, line: 409, baseType: !982, size: 32, offset: 512)
!3888 = !DIDerivedType(tag: DW_TAG_member, name: "_sig_func", scope: !3755, file: !3756, line: 412, baseType: !3889, size: 32, offset: 544)
!3889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3890, size: 32)
!3890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3891, size: 32)
!3891 = !DISubroutineType(types: !3892)
!3892 = !{null, !7}
!3893 = !DIDerivedType(tag: DW_TAG_member, name: "_atexit", scope: !3755, file: !3756, line: 416, baseType: !3894, size: 32, offset: 576)
!3894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3895, size: 32)
!3895 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_atexit", file: !3756, line: 90, size: 1120, elements: !3896)
!3896 = !{!3897, !3898, !3899, !3902}
!3897 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !3895, file: !3756, line: 91, baseType: !3894, size: 32)
!3898 = !DIDerivedType(tag: DW_TAG_member, name: "_ind", scope: !3895, file: !3756, line: 92, baseType: !7, size: 32, offset: 32)
!3899 = !DIDerivedType(tag: DW_TAG_member, name: "_fns", scope: !3895, file: !3756, line: 93, baseType: !3900, size: 1024, offset: 64)
!3900 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3901, size: 1024, elements: !376)
!3901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !343, size: 32)
!3902 = !DIDerivedType(tag: DW_TAG_member, name: "_on_exit_args_ptr", scope: !3895, file: !3756, line: 94, baseType: !3903, size: 32, offset: 1088)
!3903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3904, size: 32)
!3904 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_on_exit_args", file: !3756, line: 79, size: 2112, elements: !3905)
!3905 = !{!3906, !3908, !3909, !3910}
!3906 = !DIDerivedType(tag: DW_TAG_member, name: "_fnargs", scope: !3904, file: !3756, line: 80, baseType: !3907, size: 1024)
!3907 = !DICompositeType(tag: DW_TAG_array_type, baseType: !88, size: 1024, elements: !376)
!3908 = !DIDerivedType(tag: DW_TAG_member, name: "_dso_handle", scope: !3904, file: !3756, line: 81, baseType: !3907, size: 1024, offset: 1024)
!3909 = !DIDerivedType(tag: DW_TAG_member, name: "_fntypes", scope: !3904, file: !3756, line: 83, baseType: !3852, size: 32, offset: 2048)
!3910 = !DIDerivedType(tag: DW_TAG_member, name: "_is_cxa", scope: !3904, file: !3756, line: 86, baseType: !3852, size: 32, offset: 2080)
!3911 = !DIDerivedType(tag: DW_TAG_member, name: "_atexit0", scope: !3755, file: !3756, line: 417, baseType: !3895, size: 1120, offset: 608)
!3912 = !DIDerivedType(tag: DW_TAG_member, name: "__sglue", scope: !3755, file: !3756, line: 420, baseType: !3913, size: 96, offset: 1728)
!3913 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_glue", file: !3756, line: 296, size: 96, elements: !3914)
!3914 = !{!3915, !3917, !3918}
!3915 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !3913, file: !3756, line: 298, baseType: !3916, size: 32)
!3916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3913, size: 32)
!3917 = !DIDerivedType(tag: DW_TAG_member, name: "_niobs", scope: !3913, file: !3756, line: 299, baseType: !7, size: 32, offset: 32)
!3918 = !DIDerivedType(tag: DW_TAG_member, name: "_iobs", scope: !3913, file: !3756, line: 300, baseType: !3760, size: 32, offset: 64)
!3919 = !DIDerivedType(tag: DW_TAG_member, name: "__sf", scope: !3755, file: !3756, line: 421, baseType: !3760, size: 32, offset: 1824)
!3920 = !DIDerivedType(tag: DW_TAG_member, name: "_misc", scope: !3755, file: !3756, line: 422, baseType: !3921, size: 32, offset: 1856)
!3921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3922, size: 32)
!3922 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_misc_reent", file: !3756, line: 359, size: 640, elements: !3923)
!3923 = !{!3924, !3925, !3926, !3927, !3928, !3930, !3931, !3932, !3933, !3934, !3935}
!3924 = !DIDerivedType(tag: DW_TAG_member, name: "_strtok_last", scope: !3922, file: !3756, line: 362, baseType: !982, size: 32)
!3925 = !DIDerivedType(tag: DW_TAG_member, name: "_mblen_state", scope: !3922, file: !3756, line: 363, baseType: !3815, size: 64, offset: 32)
!3926 = !DIDerivedType(tag: DW_TAG_member, name: "_wctomb_state", scope: !3922, file: !3756, line: 364, baseType: !3815, size: 64, offset: 96)
!3927 = !DIDerivedType(tag: DW_TAG_member, name: "_mbtowc_state", scope: !3922, file: !3756, line: 365, baseType: !3815, size: 64, offset: 160)
!3928 = !DIDerivedType(tag: DW_TAG_member, name: "_l64a_buf", scope: !3922, file: !3756, line: 366, baseType: !3929, size: 64, offset: 224)
!3929 = !DICompositeType(tag: DW_TAG_array_type, baseType: !167, size: 64, elements: !1046)
!3930 = !DIDerivedType(tag: DW_TAG_member, name: "_getdate_err", scope: !3922, file: !3756, line: 367, baseType: !7, size: 32, offset: 288)
!3931 = !DIDerivedType(tag: DW_TAG_member, name: "_mbrlen_state", scope: !3922, file: !3756, line: 368, baseType: !3815, size: 64, offset: 320)
!3932 = !DIDerivedType(tag: DW_TAG_member, name: "_mbrtowc_state", scope: !3922, file: !3756, line: 369, baseType: !3815, size: 64, offset: 384)
!3933 = !DIDerivedType(tag: DW_TAG_member, name: "_mbsrtowcs_state", scope: !3922, file: !3756, line: 370, baseType: !3815, size: 64, offset: 448)
!3934 = !DIDerivedType(tag: DW_TAG_member, name: "_wcrtomb_state", scope: !3922, file: !3756, line: 371, baseType: !3815, size: 64, offset: 512)
!3935 = !DIDerivedType(tag: DW_TAG_member, name: "_wcsrtombs_state", scope: !3922, file: !3756, line: 372, baseType: !3815, size: 64, offset: 576)
!3936 = !DIDerivedType(tag: DW_TAG_member, name: "_signal_buf", scope: !3755, file: !3756, line: 423, baseType: !982, size: 32, offset: 1888)
!3937 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !3824, line: 46, baseType: !18)
!3938 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3939, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3940, globals: !3941, splitDebugInlining: false, nameTableKind: None)
!3939 = !DIFile(filename: "syscalls.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sd_read_write_data_dma/GCC")
!3940 = !{!982, !3752}
!3941 = !{!3746}
!3942 = !{!3943, !3944, !3945, !3946}
!3943 = !DILocalVariable(name: "r", arg: 1, scope: !3748, file: !3749, line: 66, type: !3754)
!3944 = !DILocalVariable(name: "nbytes", arg: 2, scope: !3748, file: !3749, line: 66, type: !3937)
!3945 = !DILocalVariable(name: "prev_heap_end", scope: !3748, file: !3749, line: 70, type: !982)
!3946 = !DILocalVariable(name: "stack", scope: !3748, file: !3749, line: 71, type: !982)
!3947 = !DIGlobalVariableExpression(var: !3948, expr: !DIExpression())
!3948 = distinct !DIGlobalVariable(name: "System_Initialize_Done", scope: !3949, file: !3950, line: 52, type: !60, isLocal: true, isDefinition: true)
!3949 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3950, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3951, globals: !4054, splitDebugInlining: false, nameTableKind: None)
!3950 = !DIFile(filename: "../../../../../project/mt2523_hdk/hal_examples/sd_read_write_data_dma/src/system_mt2523.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sd_read_write_data_dma/GCC")
!3951 = !{!3952, !3960, !61, !4005, !4010, !4035}
!3952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3953, size: 32)
!3953 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !1288, line: 656, baseType: !3954)
!3954 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1288, line: 650, size: 128, elements: !3955)
!3955 = !{!3956, !3957, !3958, !3959}
!3956 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !3954, file: !1288, line: 652, baseType: !60, size: 32)
!3957 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !3954, file: !1288, line: 653, baseType: !60, size: 32, offset: 32)
!3958 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !3954, file: !1288, line: 654, baseType: !60, size: 32, offset: 64)
!3959 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !3954, file: !1288, line: 655, baseType: !324, size: 32, offset: 96)
!3960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3961, size: 32)
!3961 = !DIDerivedType(tag: DW_TAG_typedef, name: "CONFIGSYS_REGISTER_T", file: !56, line: 1952, baseType: !3962)
!3962 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1921, size: 8288, elements: !3963)
!3963 = !{!3964, !3965, !3966, !3967, !3968, !3969, !3970, !3971, !3972, !3974, !3975, !3979, !3980, !3982, !3983, !3987, !3988, !3989, !3990, !3991, !3992, !3993, !3994, !3995, !3996, !3997, !3998, !4002, !4003, !4004}
!3964 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDA", scope: !3962, file: !56, line: 1922, baseType: !60, size: 32)
!3965 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDB", scope: !3962, file: !56, line: 1923, baseType: !60, size: 32, offset: 32)
!3966 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDC", scope: !3962, file: !56, line: 1924, baseType: !60, size: 32, offset: 64)
!3967 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDD", scope: !3962, file: !56, line: 1925, baseType: !60, size: 32, offset: 96)
!3968 = !DIDerivedType(tag: DW_TAG_member, name: "reserver1", scope: !3962, file: !56, line: 1926, baseType: !60, size: 32, offset: 128)
!3969 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDF", scope: !3962, file: !56, line: 1927, baseType: !60, size: 32, offset: 160)
!3970 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDG", scope: !3962, file: !56, line: 1928, baseType: !60, size: 32, offset: 192)
!3971 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDH", scope: !3962, file: !56, line: 1929, baseType: !60, size: 32, offset: 224)
!3972 = !DIDerivedType(tag: DW_TAG_member, name: "reserver2", scope: !3962, file: !56, line: 1930, baseType: !3973, size: 768, offset: 256)
!3973 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 768, elements: !1327)
!3974 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_SOURCE_SEL", scope: !3962, file: !56, line: 1931, baseType: !60, size: 32, offset: 1024)
!3975 = !DIDerivedType(tag: DW_TAG_member, name: "reserver3", scope: !3962, file: !56, line: 1932, baseType: !3976, size: 992, offset: 1056)
!3976 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 992, elements: !3977)
!3977 = !{!3978}
!3978 = !DISubrange(count: 31)
!3979 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEP_COND", scope: !3962, file: !56, line: 1933, baseType: !60, size: 32, offset: 2048)
!3980 = !DIDerivedType(tag: DW_TAG_member, name: "reserver4", scope: !3962, file: !56, line: 1934, baseType: !3981, size: 416, offset: 2080)
!3981 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 416, elements: !1066)
!3982 = !DIDerivedType(tag: DW_TAG_member, name: "TOP_DEBUG", scope: !3962, file: !56, line: 1935, baseType: !60, size: 32, offset: 2496)
!3983 = !DIDerivedType(tag: DW_TAG_member, name: "reserver5", scope: !3962, file: !56, line: 1936, baseType: !3984, size: 1568, offset: 2528)
!3984 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 1568, elements: !3985)
!3985 = !{!3986}
!3986 = !DISubrange(count: 49)
!3987 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_COND0", scope: !3962, file: !56, line: 1937, baseType: !324, size: 32, offset: 4096)
!3988 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_COND1", scope: !3962, file: !56, line: 1938, baseType: !324, size: 32, offset: 4128)
!3989 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_COND2", scope: !3962, file: !56, line: 1939, baseType: !324, size: 32, offset: 4160)
!3990 = !DIDerivedType(tag: DW_TAG_member, name: "reserver6", scope: !3962, file: !56, line: 1940, baseType: !60, size: 32, offset: 4192)
!3991 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_SETD0", scope: !3962, file: !56, line: 1941, baseType: !60, size: 32, offset: 4224)
!3992 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_SETD1", scope: !3962, file: !56, line: 1942, baseType: !60, size: 32, offset: 4256)
!3993 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_SETD2", scope: !3962, file: !56, line: 1943, baseType: !60, size: 32, offset: 4288)
!3994 = !DIDerivedType(tag: DW_TAG_member, name: "reserver7", scope: !3962, file: !56, line: 1944, baseType: !60, size: 32, offset: 4320)
!3995 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_CLRD0", scope: !3962, file: !56, line: 1945, baseType: !60, size: 32, offset: 4352)
!3996 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_CLRD1", scope: !3962, file: !56, line: 1946, baseType: !60, size: 32, offset: 4384)
!3997 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_CLRD2", scope: !3962, file: !56, line: 1947, baseType: !60, size: 32, offset: 4416)
!3998 = !DIDerivedType(tag: DW_TAG_member, name: "reserver8", scope: !3962, file: !56, line: 1948, baseType: !3999, size: 3744, offset: 4448)
!3999 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 3744, elements: !4000)
!4000 = !{!4001}
!4001 = !DISubrange(count: 117)
!4002 = !DIDerivedType(tag: DW_TAG_member, name: "LPM_CON", scope: !3962, file: !56, line: 1949, baseType: !60, size: 32, offset: 8192)
!4003 = !DIDerivedType(tag: DW_TAG_member, name: "reserver9", scope: !3962, file: !56, line: 1950, baseType: !60, size: 32, offset: 8224)
!4004 = !DIDerivedType(tag: DW_TAG_member, name: "LPM_L2H_CNT", scope: !3962, file: !56, line: 1951, baseType: !324, size: 32, offset: 8256)
!4005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4006, size: 32)
!4006 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFUSE_REGISTER_T", file: !56, line: 2158, baseType: !4007)
!4007 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 2156, size: 32, elements: !4008)
!4008 = !{!4009}
!4009 = !DIDerivedType(tag: DW_TAG_member, name: "EFUSE_CPU_104M", scope: !4007, file: !56, line: 2157, baseType: !60, size: 32)
!4010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4011, size: 32)
!4011 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1288, line: 418, baseType: !4012)
!4012 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1288, line: 395, size: 1120, elements: !4013)
!4013 = !{!4014, !4015, !4016, !4017, !4018, !4019, !4020, !4021, !4022, !4023, !4024, !4025, !4026, !4027, !4028, !4029, !4030, !4031, !4032, !4033, !4034}
!4014 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !4012, file: !1288, line: 397, baseType: !324, size: 32)
!4015 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !4012, file: !1288, line: 398, baseType: !60, size: 32, offset: 32)
!4016 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !4012, file: !1288, line: 399, baseType: !60, size: 32, offset: 64)
!4017 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !4012, file: !1288, line: 400, baseType: !60, size: 32, offset: 96)
!4018 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !4012, file: !1288, line: 401, baseType: !60, size: 32, offset: 128)
!4019 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !4012, file: !1288, line: 402, baseType: !60, size: 32, offset: 160)
!4020 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !4012, file: !1288, line: 403, baseType: !1298, size: 96, offset: 192)
!4021 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !4012, file: !1288, line: 404, baseType: !60, size: 32, offset: 288)
!4022 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !4012, file: !1288, line: 405, baseType: !60, size: 32, offset: 320)
!4023 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !4012, file: !1288, line: 406, baseType: !60, size: 32, offset: 352)
!4024 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !4012, file: !1288, line: 407, baseType: !60, size: 32, offset: 384)
!4025 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !4012, file: !1288, line: 408, baseType: !60, size: 32, offset: 416)
!4026 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !4012, file: !1288, line: 409, baseType: !60, size: 32, offset: 448)
!4027 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !4012, file: !1288, line: 410, baseType: !60, size: 32, offset: 480)
!4028 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !4012, file: !1288, line: 411, baseType: !1307, size: 64, offset: 512)
!4029 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !4012, file: !1288, line: 412, baseType: !324, size: 32, offset: 576)
!4030 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !4012, file: !1288, line: 413, baseType: !324, size: 32, offset: 608)
!4031 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !4012, file: !1288, line: 414, baseType: !1311, size: 128, offset: 640)
!4032 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !4012, file: !1288, line: 415, baseType: !1313, size: 160, offset: 768)
!4033 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !4012, file: !1288, line: 416, baseType: !1317, size: 160, offset: 928)
!4034 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !4012, file: !1288, line: 417, baseType: !60, size: 32, offset: 1088)
!4035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4036, size: 32)
!4036 = !DIDerivedType(tag: DW_TAG_typedef, name: "CACHE_REGISTER_T", file: !56, line: 276, baseType: !4037)
!4037 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 260, size: 525312, elements: !4038)
!4038 = !{!4039, !4040, !4041, !4042, !4043, !4044, !4045, !4046, !4047, !4048, !4049, !4050, !4051, !4052, !4053}
!4039 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CON", scope: !4037, file: !56, line: 261, baseType: !60, size: 32)
!4040 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_OP", scope: !4037, file: !56, line: 262, baseType: !60, size: 32, offset: 32)
!4041 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0L", scope: !4037, file: !56, line: 263, baseType: !60, size: 32, offset: 64)
!4042 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0U", scope: !4037, file: !56, line: 264, baseType: !60, size: 32, offset: 96)
!4043 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0L", scope: !4037, file: !56, line: 265, baseType: !60, size: 32, offset: 128)
!4044 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0U", scope: !4037, file: !56, line: 266, baseType: !60, size: 32, offset: 160)
!4045 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1L", scope: !4037, file: !56, line: 267, baseType: !60, size: 32, offset: 192)
!4046 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1U", scope: !4037, file: !56, line: 268, baseType: !60, size: 32, offset: 224)
!4047 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1L", scope: !4037, file: !56, line: 269, baseType: !60, size: 32, offset: 256)
!4048 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1U", scope: !4037, file: !56, line: 270, baseType: !60, size: 32, offset: 288)
!4049 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !4037, file: !56, line: 271, baseType: !75, size: 32, offset: 320)
!4050 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_REGION_EN", scope: !4037, file: !56, line: 272, baseType: !60, size: 32, offset: 352)
!4051 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !4037, file: !56, line: 273, baseType: !80, size: 523904, offset: 384)
!4052 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_ENTRY_N", scope: !4037, file: !56, line: 274, baseType: !84, size: 512, offset: 524288)
!4053 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_END_ENTRY_N", scope: !4037, file: !56, line: 275, baseType: !84, size: 512, offset: 524800)
!4054 = !{!4055, !3947}
!4055 = !DIGlobalVariableExpression(var: !4056, expr: !DIExpression())
!4056 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !3949, file: !3950, line: 50, type: !61, isLocal: false, isDefinition: true)
!4057 = !DIGlobalVariableExpression(var: !4058, expr: !DIExpression())
!4058 = distinct !DIGlobalVariable(name: "build_date_time_str", scope: !4059, file: !4064, line: 4, type: !4070, isLocal: false, isDefinition: true)
!4059 = distinct !DICompileUnit(language: DW_LANG_C99, file: !4060, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4061, splitDebugInlining: false, nameTableKind: None)
!4060 = !DIFile(filename: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sd_read_write_data_dma/GCC/build/middleware/MTK/verno/verno.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sd_read_write_data_dma/GCC")
!4061 = !{!4057, !4062, !4068}
!4062 = !DIGlobalVariableExpression(var: !4063, expr: !DIExpression())
!4063 = distinct !DIGlobalVariable(name: "sw_verno_str", scope: !4059, file: !4064, line: 5, type: !4065, isLocal: false, isDefinition: true)
!4064 = !DIFile(filename: "build/middleware/MTK/verno/verno.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sd_read_write_data_dma/GCC")
!4065 = !DICompositeType(tag: DW_TAG_array_type, baseType: !167, size: 88, elements: !4066)
!4066 = !{!4067}
!4067 = !DISubrange(count: 11)
!4068 = !DIGlobalVariableExpression(var: !4069, expr: !DIExpression())
!4069 = distinct !DIGlobalVariable(name: "hw_verno_str", scope: !4059, file: !4064, line: 6, type: !4065, isLocal: false, isDefinition: true)
!4070 = !DICompositeType(tag: DW_TAG_array_type, baseType: !167, size: 248, elements: !3977)
!4071 = distinct !DICompileUnit(language: DW_LANG_C99, file: !4072, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4073, retainedTypes: !4074, splitDebugInlining: false, nameTableKind: None)
!4072 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_uart_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sd_read_write_data_dma/GCC")
!4073 = !{!958, !964, !968, !1080}
!4074 = !{!159}
!4075 = distinct !DICompileUnit(language: DW_LANG_C99, file: !4076, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4077, retainedTypes: !4092, splitDebugInlining: false, nameTableKind: None)
!4076 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_i2c_pmic.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sd_read_write_data_dma/GCC")
!4077 = !{!4078, !3201, !4086, !1194, !1177}
!4078 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3202, line: 65, baseType: !7, size: 32, elements: !4079)
!4079 = !{!4080, !4081, !4082, !4083, !4084, !4085}
!4080 = !DIEnumerator(name: "PMIC_I2C_STATUS_ACK_ERROR", value: -105)
!4081 = !DIEnumerator(name: "PMIC_I2C_STATUS_NACK_ERROR", value: -104)
!4082 = !DIEnumerator(name: "PMIC_I2C_STATUS_ERROR", value: -103)
!4083 = !DIEnumerator(name: "PMIC_I2C_STATUS_INVALID_PORT_NUMBER", value: -102)
!4084 = !DIEnumerator(name: "PMIC_I2C_STATUS_INVALID_PARAMETER", value: -101)
!4085 = !DIEnumerator(name: "PMIC_I2C_STATUS_OK", value: 0)
!4086 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !106, line: 302, baseType: !18, size: 32, elements: !4087)
!4087 = !{!4088, !4089, !4090, !4091}
!4088 = !DIEnumerator(name: "HAL_I2C_MASTER_0", value: 0)
!4089 = !DIEnumerator(name: "HAL_I2C_MASTER_1", value: 1)
!4090 = !DIEnumerator(name: "HAL_I2C_MASTER_2", value: 2)
!4091 = !DIEnumerator(name: "HAL_I2C_MASTER_MAX", value: 3)
!4092 = !{!61, !88, !4093}
!4093 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmic_i2c_status_t", file: !3202, line: 72, baseType: !4078)
!4094 = distinct !DICompileUnit(language: DW_LANG_C99, file: !4095, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4096, retainedTypes: !4097, splitDebugInlining: false, nameTableKind: None)
!4095 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_nvic_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sd_read_write_data_dma/GCC")
!4096 = !{!238, !973}
!4097 = !{!570, !4098, !61, !4123, !1349}
!4098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4099, size: 32)
!4099 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1288, line: 418, baseType: !4100)
!4100 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1288, line: 395, size: 1120, elements: !4101)
!4101 = !{!4102, !4103, !4104, !4105, !4106, !4107, !4108, !4109, !4110, !4111, !4112, !4113, !4114, !4115, !4116, !4117, !4118, !4119, !4120, !4121, !4122}
!4102 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !4100, file: !1288, line: 397, baseType: !324, size: 32)
!4103 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !4100, file: !1288, line: 398, baseType: !60, size: 32, offset: 32)
!4104 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !4100, file: !1288, line: 399, baseType: !60, size: 32, offset: 64)
!4105 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !4100, file: !1288, line: 400, baseType: !60, size: 32, offset: 96)
!4106 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !4100, file: !1288, line: 401, baseType: !60, size: 32, offset: 128)
!4107 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !4100, file: !1288, line: 402, baseType: !60, size: 32, offset: 160)
!4108 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !4100, file: !1288, line: 403, baseType: !1298, size: 96, offset: 192)
!4109 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !4100, file: !1288, line: 404, baseType: !60, size: 32, offset: 288)
!4110 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !4100, file: !1288, line: 405, baseType: !60, size: 32, offset: 320)
!4111 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !4100, file: !1288, line: 406, baseType: !60, size: 32, offset: 352)
!4112 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !4100, file: !1288, line: 407, baseType: !60, size: 32, offset: 384)
!4113 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !4100, file: !1288, line: 408, baseType: !60, size: 32, offset: 416)
!4114 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !4100, file: !1288, line: 409, baseType: !60, size: 32, offset: 448)
!4115 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !4100, file: !1288, line: 410, baseType: !60, size: 32, offset: 480)
!4116 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !4100, file: !1288, line: 411, baseType: !1307, size: 64, offset: 512)
!4117 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !4100, file: !1288, line: 412, baseType: !324, size: 32, offset: 576)
!4118 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !4100, file: !1288, line: 413, baseType: !324, size: 32, offset: 608)
!4119 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !4100, file: !1288, line: 414, baseType: !1311, size: 128, offset: 640)
!4120 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !4100, file: !1288, line: 415, baseType: !1313, size: 160, offset: 768)
!4121 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !4100, file: !1288, line: 416, baseType: !1317, size: 160, offset: 928)
!4122 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !4100, file: !1288, line: 417, baseType: !60, size: 32, offset: 1088)
!4123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4124, size: 32)
!4124 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !1288, line: 378, baseType: !4125)
!4125 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1288, line: 363, size: 28704, elements: !4126)
!4126 = !{!4127, !4128, !4129, !4130, !4131, !4132, !4133, !4134, !4135, !4136, !4137, !4138, !4139}
!4127 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !4125, file: !1288, line: 365, baseType: !1324, size: 256)
!4128 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !4125, file: !1288, line: 366, baseType: !1326, size: 768, offset: 256)
!4129 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !4125, file: !1288, line: 367, baseType: !1324, size: 256, offset: 1024)
!4130 = !DIDerivedType(tag: DW_TAG_member, name: "RSERVED1", scope: !4125, file: !1288, line: 368, baseType: !1326, size: 768, offset: 1280)
!4131 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !4125, file: !1288, line: 369, baseType: !1324, size: 256, offset: 2048)
!4132 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !4125, file: !1288, line: 370, baseType: !1326, size: 768, offset: 2304)
!4133 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !4125, file: !1288, line: 371, baseType: !1324, size: 256, offset: 3072)
!4134 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !4125, file: !1288, line: 372, baseType: !1326, size: 768, offset: 3328)
!4135 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !4125, file: !1288, line: 373, baseType: !1324, size: 256, offset: 4096)
!4136 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !4125, file: !1288, line: 374, baseType: !1337, size: 1792, offset: 4352)
!4137 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !4125, file: !1288, line: 375, baseType: !1341, size: 1920, offset: 6144)
!4138 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !4125, file: !1288, line: 376, baseType: !1345, size: 20608, offset: 8064)
!4139 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !4125, file: !1288, line: 377, baseType: !60, size: 32, offset: 28672)
!4140 = distinct !DICompileUnit(language: DW_LANG_C99, file: !4141, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!4141 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_cfi.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sd_read_write_data_dma/GCC")
!4142 = distinct !DICompileUnit(language: DW_LANG_C99, file: !4143, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4144, retainedTypes: !4145, globals: !4146, splitDebugInlining: false, nameTableKind: None)
!4143 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_pmu_wrap_interface.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sd_read_write_data_dma/GCC")
!4144 = !{!3310, !3348, !3327, !3402}
!4145 = !{!3356}
!4146 = !{!4147}
!4147 = !DIGlobalVariableExpression(var: !4148, expr: !DIExpression())
!4148 = distinct !DIGlobalVariable(name: "pmu_wrap_api", scope: !4142, file: !4143, line: 75, type: !4149, isLocal: true, isDefinition: true)
!4149 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmu_wrap_api_t", file: !1655, line: 55, baseType: !4150)
!4150 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1655, line: 41, size: 416, elements: !4151)
!4151 = !{!4152, !4153, !4157, !4161, !4162, !4166, !4168, !4169, !4173, !4174, !4175, !4176, !4177}
!4152 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !4150, file: !1655, line: 42, baseType: !3901, size: 32)
!4153 = !DIDerivedType(tag: DW_TAG_member, name: "set_reg_value", scope: !4150, file: !1655, line: 43, baseType: !4154, size: 32, offset: 32)
!4154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4155, size: 32)
!4155 = !DISubroutineType(types: !4156)
!4156 = !{!91, !1214, !1214, !1214, !1214}
!4157 = !DIDerivedType(tag: DW_TAG_member, name: "get_reg_value", scope: !4150, file: !1655, line: 44, baseType: !4158, size: 32, offset: 64)
!4158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4159, size: 32)
!4159 = !DISubroutineType(types: !4160)
!4160 = !{!161, !1214, !1214, !1214}
!4161 = !DIDerivedType(tag: DW_TAG_member, name: "ctrl_mtcmos", scope: !4150, file: !1655, line: 45, baseType: !3901, size: 32, offset: 96)
!4162 = !DIDerivedType(tag: DW_TAG_member, name: "get_vcore_vol", scope: !4150, file: !1655, line: 46, baseType: !4163, size: 32, offset: 128)
!4163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4164, size: 32)
!4164 = !DISubroutineType(types: !4165)
!4165 = !{!161}
!4166 = !DIDerivedType(tag: DW_TAG_member, name: "set_vcore_vol", scope: !4150, file: !1655, line: 47, baseType: !4167, size: 32, offset: 160)
!4167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3450, size: 32)
!4168 = !DIDerivedType(tag: DW_TAG_member, name: "set_vcore_s1_buck", scope: !4150, file: !1655, line: 48, baseType: !3901, size: 32, offset: 192)
!4169 = !DIDerivedType(tag: DW_TAG_member, name: "ctrl_driver_power", scope: !4150, file: !1655, line: 49, baseType: !4170, size: 32, offset: 224)
!4170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4171, size: 32)
!4171 = !DISubroutineType(types: !4172)
!4172 = !{null, !161, !161}
!4173 = !DIDerivedType(tag: DW_TAG_member, name: "audio_lock_voltage", scope: !4150, file: !1655, line: 50, baseType: !3901, size: 32, offset: 256)
!4174 = !DIDerivedType(tag: DW_TAG_member, name: "audio_unlock_voltage", scope: !4150, file: !1655, line: 51, baseType: !3901, size: 32, offset: 288)
!4175 = !DIDerivedType(tag: DW_TAG_member, name: "get_usb_input_status", scope: !4150, file: !1655, line: 52, baseType: !4163, size: 32, offset: 320)
!4176 = !DIDerivedType(tag: DW_TAG_member, name: "enter_power_off", scope: !4150, file: !1655, line: 53, baseType: !3901, size: 32, offset: 352)
!4177 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !4150, file: !1655, line: 54, baseType: !3901, size: 32, offset: 384)
!4178 = distinct !DICompileUnit(language: DW_LANG_C99, file: !4179, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!4179 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_log.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sd_read_write_data_dma/GCC")
!4180 = !{!"Ubuntu clang version 14.0.6"}
!4181 = !{i32 7, !"Dwarf Version", i32 2}
!4182 = !{i32 2, !"Debug Info Version", i32 3}
!4183 = !{i32 1, !"wchar_size", i32 4}
!4184 = !{i32 1, !"min_enum_size", i32 4}
!4185 = !{i32 1, !"branch-target-enforcement", i32 0}
!4186 = !{i32 1, !"sign-return-address", i32 0}
!4187 = !{i32 1, !"sign-return-address-all", i32 0}
!4188 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!4189 = !{i32 7, !"frame-pointer", i32 2}
!4190 = distinct !DISubprogram(name: "hal_cache_init", scope: !3, file: !3, line: 53, type: !4191, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4194)
!4191 = !DISubroutineType(types: !4192)
!4192 = !{!4193}
!4193 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_status_t", file: !6, line: 172, baseType: !5)
!4194 = !{!4195, !4197}
!4195 = !DILocalVariable(name: "region", scope: !4190, file: !3, line: 55, type: !4196)
!4196 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_region_t", file: !6, line: 204, baseType: !17)
!4197 = !DILocalVariable(name: "irq_flag", scope: !4190, file: !3, line: 56, type: !61)
!4198 = !DILocation(line: 59, column: 16, scope: !4190)
!4199 = !DILocation(line: 0, scope: !4190)
!4200 = !DILocation(line: 62, column: 9, scope: !4201)
!4201 = distinct !DILexicalBlock(scope: !4190, file: !3, line: 62, column: 9)
!4202 = !{i8 0, i8 2}
!4203 = !DILocation(line: 62, column: 9, scope: !4190)
!4204 = !DILocation(line: 64, column: 9, scope: !4205)
!4205 = distinct !DILexicalBlock(scope: !4201, file: !3, line: 62, column: 39)
!4206 = !DILocation(line: 66, column: 9, scope: !4205)
!4207 = !DILocation(line: 69, column: 24, scope: !4208)
!4208 = distinct !DILexicalBlock(scope: !4201, file: !3, line: 67, column: 12)
!4209 = !DILocation(line: 72, column: 9, scope: !4208)
!4210 = !DILocation(line: 77, column: 5, scope: !4190)
!4211 = !DILocation(line: 80, column: 22, scope: !4190)
!4212 = !DILocation(line: 81, column: 28, scope: !4190)
!4213 = !DILocation(line: 84, column: 19, scope: !4190)
!4214 = !DILocation(line: 85, column: 23, scope: !4190)
!4215 = !DILocation(line: 88, column: 5, scope: !4216)
!4216 = distinct !DILexicalBlock(scope: !4190, file: !3, line: 88, column: 5)
!4217 = !DILocation(line: 90, column: 9, scope: !4218)
!4218 = distinct !DILexicalBlock(scope: !4219, file: !3, line: 88, column: 81)
!4219 = distinct !DILexicalBlock(scope: !4216, file: !3, line: 88, column: 5)
!4220 = !DILocation(line: 90, column: 38, scope: !4218)
!4221 = !DILocation(line: 91, column: 9, scope: !4218)
!4222 = !DILocation(line: 91, column: 42, scope: !4218)
!4223 = !DILocation(line: 94, column: 45, scope: !4218)
!4224 = !DILocation(line: 94, column: 47, scope: !4218)
!4225 = !DILocation(line: 95, column: 49, scope: !4218)
!4226 = !DILocation(line: 95, column: 51, scope: !4218)
!4227 = !DILocation(line: 88, column: 77, scope: !4219)
!4228 = !DILocation(line: 88, column: 46, scope: !4219)
!4229 = distinct !{!4229, !4215, !4230}
!4230 = !DILocation(line: 96, column: 5, scope: !4216)
!4231 = !DILocation(line: 99, column: 1, scope: !4190)
!4232 = distinct !DISubprogram(name: "hal_cache_invalidate_all_cache_lines", scope: !3, file: !3, line: 327, type: !4191, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4233)
!4233 = !{!4234}
!4234 = !DILocalVariable(name: "irq_flag", scope: !4232, file: !3, line: 329, type: !61)
!4235 = !DILocation(line: 332, column: 16, scope: !4232)
!4236 = !DILocation(line: 0, scope: !4232)
!4237 = !DILocation(line: 335, column: 21, scope: !4232)
!4238 = !DILocation(line: 336, column: 21, scope: !4232)
!4239 = !DILocation(line: 339, column: 21, scope: !4232)
!4240 = !DILocation(line: 340, column: 21, scope: !4232)
!4241 = !DILocation(line: 434, column: 3, scope: !4242, inlinedAt: !4244)
!4242 = distinct !DISubprogram(name: "__ISB", scope: !4243, file: !4243, line: 432, type: !343, scopeLine: 433, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !345)
!4243 = !DIFile(filename: "../../../../../driver/CMSIS/Include/core_cmInstr.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sd_read_write_data_dma/GCC")
!4244 = distinct !DILocation(line: 343, column: 5, scope: !4232)
!4245 = !{i64 442804}
!4246 = !DILocation(line: 346, column: 5, scope: !4232)
!4247 = !DILocation(line: 348, column: 5, scope: !4232)
!4248 = distinct !DISubprogram(name: "hal_cache_deinit", scope: !3, file: !3, line: 101, type: !4191, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4249)
!4249 = !{!4250}
!4250 = !DILocalVariable(name: "region", scope: !4248, file: !3, line: 103, type: !4196)
!4251 = !DILocation(line: 107, column: 5, scope: !4248)
!4252 = !DILocation(line: 110, column: 22, scope: !4248)
!4253 = !DILocation(line: 111, column: 28, scope: !4248)
!4254 = !DILocation(line: 114, column: 19, scope: !4248)
!4255 = !DILocation(line: 115, column: 23, scope: !4248)
!4256 = !DILocation(line: 0, scope: !4248)
!4257 = !DILocation(line: 118, column: 5, scope: !4258)
!4258 = distinct !DILexicalBlock(scope: !4248, file: !3, line: 118, column: 5)
!4259 = !DILocation(line: 120, column: 9, scope: !4260)
!4260 = distinct !DILexicalBlock(scope: !4261, file: !3, line: 118, column: 81)
!4261 = distinct !DILexicalBlock(scope: !4258, file: !3, line: 118, column: 5)
!4262 = !DILocation(line: 120, column: 38, scope: !4260)
!4263 = !DILocation(line: 121, column: 9, scope: !4260)
!4264 = !DILocation(line: 121, column: 42, scope: !4260)
!4265 = !DILocation(line: 124, column: 45, scope: !4260)
!4266 = !DILocation(line: 124, column: 47, scope: !4260)
!4267 = !DILocation(line: 125, column: 49, scope: !4260)
!4268 = !DILocation(line: 125, column: 51, scope: !4260)
!4269 = !DILocation(line: 118, column: 77, scope: !4261)
!4270 = !DILocation(line: 118, column: 46, scope: !4261)
!4271 = distinct !{!4271, !4257, !4272}
!4272 = !DILocation(line: 126, column: 5, scope: !4258)
!4273 = !DILocation(line: 129, column: 20, scope: !4248)
!4274 = !DILocation(line: 131, column: 5, scope: !4248)
!4275 = distinct !DISubprogram(name: "hal_cache_enable", scope: !3, file: !3, line: 134, type: !4191, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !345)
!4276 = !DILocation(line: 137, column: 45, scope: !4277)
!4277 = distinct !DILexicalBlock(scope: !4275, file: !3, line: 137, column: 9)
!4278 = !DILocation(line: 137, column: 28, scope: !4277)
!4279 = !DILocation(line: 137, column: 9, scope: !4275)
!4280 = !DILocation(line: 142, column: 22, scope: !4275)
!4281 = !DILocation(line: 145, column: 28, scope: !4275)
!4282 = !DILocation(line: 145, column: 19, scope: !4275)
!4283 = !DILocation(line: 147, column: 5, scope: !4275)
!4284 = !DILocation(line: 0, scope: !4275)
!4285 = !DILocation(line: 148, column: 1, scope: !4275)
!4286 = distinct !DISubprogram(name: "hal_cache_disable", scope: !3, file: !3, line: 150, type: !4191, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4287)
!4287 = !{!4288}
!4288 = !DILocalVariable(name: "irq_flag", scope: !4286, file: !3, line: 152, type: !61)
!4289 = !DILocation(line: 155, column: 16, scope: !4286)
!4290 = !DILocation(line: 0, scope: !4286)
!4291 = !DILocation(line: 158, column: 16, scope: !4292)
!4292 = distinct !DILexicalBlock(scope: !4286, file: !3, line: 158, column: 9)
!4293 = !DILocation(line: 158, column: 26, scope: !4292)
!4294 = !DILocation(line: 158, column: 9, scope: !4286)
!4295 = !DILocation(line: 160, column: 9, scope: !4296)
!4296 = distinct !DILexicalBlock(scope: !4292, file: !3, line: 158, column: 49)
!4297 = !DILocation(line: 161, column: 5, scope: !4296)
!4298 = !DILocation(line: 164, column: 22, scope: !4286)
!4299 = !DILocation(line: 167, column: 28, scope: !4286)
!4300 = !DILocation(line: 167, column: 19, scope: !4286)
!4301 = !DILocation(line: 170, column: 5, scope: !4286)
!4302 = !DILocation(line: 172, column: 5, scope: !4286)
!4303 = distinct !DISubprogram(name: "hal_cache_region_enable", scope: !3, file: !3, line: 175, type: !4304, scopeLine: 176, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4306)
!4304 = !DISubroutineType(types: !4305)
!4305 = !{!4193, !4196}
!4306 = !{!4307}
!4307 = !DILocalVariable(name: "region", arg: 1, scope: !4303, file: !3, line: 175, type: !4196)
!4308 = !DILocation(line: 0, scope: !4303)
!4309 = !DILocation(line: 178, column: 16, scope: !4310)
!4310 = distinct !DILexicalBlock(scope: !4303, file: !3, line: 178, column: 9)
!4311 = !DILocation(line: 178, column: 9, scope: !4303)
!4312 = !DILocation(line: 183, column: 9, scope: !4313)
!4313 = distinct !DILexicalBlock(scope: !4303, file: !3, line: 183, column: 9)
!4314 = !DILocation(line: 183, column: 38, scope: !4313)
!4315 = !DILocation(line: 183, column: 9, scope: !4303)
!4316 = !DILocation(line: 184, column: 38, scope: !4317)
!4317 = distinct !DILexicalBlock(scope: !4313, file: !3, line: 183, column: 62)
!4318 = !DILocation(line: 184, column: 32, scope: !4317)
!4319 = !DILocation(line: 190, column: 32, scope: !4303)
!4320 = !DILocation(line: 190, column: 23, scope: !4303)
!4321 = !DILocation(line: 192, column: 5, scope: !4303)
!4322 = !DILocation(line: 193, column: 1, scope: !4303)
!4323 = distinct !DISubprogram(name: "hal_cache_region_disable", scope: !3, file: !3, line: 195, type: !4304, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4324)
!4324 = !{!4325}
!4325 = !DILocalVariable(name: "region", arg: 1, scope: !4323, file: !3, line: 195, type: !4196)
!4326 = !DILocation(line: 0, scope: !4323)
!4327 = !DILocation(line: 198, column: 16, scope: !4328)
!4328 = distinct !DILexicalBlock(scope: !4323, file: !3, line: 198, column: 9)
!4329 = !DILocation(line: 198, column: 9, scope: !4323)
!4330 = !DILocation(line: 203, column: 35, scope: !4323)
!4331 = !DILocation(line: 203, column: 31, scope: !4323)
!4332 = !DILocation(line: 203, column: 28, scope: !4323)
!4333 = !DILocation(line: 206, column: 32, scope: !4323)
!4334 = !DILocation(line: 206, column: 23, scope: !4323)
!4335 = !DILocation(line: 209, column: 41, scope: !4323)
!4336 = !DILocation(line: 209, column: 43, scope: !4323)
!4337 = !DILocation(line: 210, column: 45, scope: !4323)
!4338 = !DILocation(line: 210, column: 47, scope: !4323)
!4339 = !DILocation(line: 212, column: 5, scope: !4323)
!4340 = !DILocation(line: 213, column: 1, scope: !4323)
!4341 = distinct !DISubprogram(name: "hal_cache_set_size", scope: !3, file: !3, line: 215, type: !4342, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4345)
!4342 = !DISubroutineType(types: !4343)
!4343 = !{!4193, !4344}
!4344 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_size_t", file: !6, line: 182, baseType: !37)
!4345 = !{!4346}
!4346 = !DILocalVariable(name: "cache_size", arg: 1, scope: !4341, file: !3, line: 215, type: !4344)
!4347 = !DILocation(line: 0, scope: !4341)
!4348 = !DILocation(line: 218, column: 20, scope: !4349)
!4349 = distinct !DILexicalBlock(scope: !4341, file: !3, line: 218, column: 9)
!4350 = !DILocation(line: 218, column: 9, scope: !4341)
!4351 = !DILocation(line: 223, column: 22, scope: !4341)
!4352 = !DILocation(line: 224, column: 37, scope: !4341)
!4353 = !DILocation(line: 224, column: 22, scope: !4341)
!4354 = !DILocation(line: 227, column: 20, scope: !4355)
!4355 = distinct !DILexicalBlock(scope: !4341, file: !3, line: 227, column: 9)
!4356 = !DILocation(line: 227, column: 9, scope: !4341)
!4357 = !DILocation(line: 228, column: 26, scope: !4358)
!4358 = distinct !DILexicalBlock(scope: !4355, file: !3, line: 227, column: 43)
!4359 = !DILocation(line: 229, column: 5, scope: !4358)
!4360 = !DILocation(line: 232, column: 28, scope: !4341)
!4361 = !DILocation(line: 232, column: 19, scope: !4341)
!4362 = !DILocation(line: 234, column: 5, scope: !4341)
!4363 = !DILocation(line: 235, column: 1, scope: !4341)
!4364 = distinct !DISubprogram(name: "hal_cache_region_config", scope: !3, file: !3, line: 237, type: !4365, scopeLine: 238, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4374)
!4365 = !DISubroutineType(types: !4366)
!4366 = !{!4193, !4196, !4367}
!4367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4368, size: 32)
!4368 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4369)
!4369 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_region_config_t", file: !6, line: 222, baseType: !4370)
!4370 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 219, size: 64, elements: !4371)
!4371 = !{!4372, !4373}
!4372 = !DIDerivedType(tag: DW_TAG_member, name: "cache_region_address", scope: !4370, file: !6, line: 220, baseType: !61, size: 32)
!4373 = !DIDerivedType(tag: DW_TAG_member, name: "cache_region_size", scope: !4370, file: !6, line: 221, baseType: !61, size: 32, offset: 32)
!4374 = !{!4375, !4376}
!4375 = !DILocalVariable(name: "region", arg: 1, scope: !4364, file: !3, line: 237, type: !4196)
!4376 = !DILocalVariable(name: "region_config", arg: 2, scope: !4364, file: !3, line: 237, type: !4367)
!4377 = !DILocation(line: 0, scope: !4364)
!4378 = !DILocation(line: 240, column: 16, scope: !4379)
!4379 = distinct !DILexicalBlock(scope: !4364, file: !3, line: 240, column: 9)
!4380 = !DILocation(line: 240, column: 9, scope: !4364)
!4381 = !DILocation(line: 245, column: 23, scope: !4382)
!4382 = distinct !DILexicalBlock(scope: !4364, file: !3, line: 245, column: 9)
!4383 = !DILocation(line: 245, column: 9, scope: !4364)
!4384 = !DILocation(line: 250, column: 24, scope: !4385)
!4385 = distinct !DILexicalBlock(scope: !4364, file: !3, line: 250, column: 9)
!4386 = !DILocation(line: 250, column: 45, scope: !4385)
!4387 = !DILocation(line: 250, column: 9, scope: !4364)
!4388 = !DILocation(line: 251, column: 9, scope: !4389)
!4389 = distinct !DILexicalBlock(scope: !4385, file: !3, line: 250, column: 81)
!4390 = !DILocation(line: 256, column: 24, scope: !4391)
!4391 = distinct !DILexicalBlock(scope: !4364, file: !3, line: 256, column: 9)
!4392 = !DILocation(line: 256, column: 42, scope: !4391)
!4393 = !DILocation(line: 256, column: 9, scope: !4364)
!4394 = !DILocation(line: 257, column: 9, scope: !4395)
!4395 = distinct !DILexicalBlock(scope: !4391, file: !3, line: 256, column: 78)
!4396 = !DILocation(line: 262, column: 5, scope: !4364)
!4397 = !DILocation(line: 262, column: 34, scope: !4364)
!4398 = !DILocation(line: 263, column: 55, scope: !4364)
!4399 = !DILocation(line: 263, column: 93, scope: !4364)
!4400 = !DILocation(line: 263, column: 76, scope: !4364)
!4401 = !DILocation(line: 263, column: 5, scope: !4364)
!4402 = !DILocation(line: 263, column: 38, scope: !4364)
!4403 = !DILocation(line: 266, column: 34, scope: !4364)
!4404 = !DILocation(line: 269, column: 45, scope: !4364)
!4405 = !DILocation(line: 269, column: 41, scope: !4364)
!4406 = !DILocation(line: 269, column: 43, scope: !4364)
!4407 = !DILocation(line: 270, column: 49, scope: !4364)
!4408 = !DILocation(line: 270, column: 45, scope: !4364)
!4409 = !DILocation(line: 270, column: 47, scope: !4364)
!4410 = !DILocation(line: 272, column: 5, scope: !4364)
!4411 = !DILocation(line: 273, column: 1, scope: !4364)
!4412 = distinct !DISubprogram(name: "hal_cache_invalidate_one_cache_line", scope: !3, file: !3, line: 275, type: !4413, scopeLine: 276, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4415)
!4413 = !DISubroutineType(types: !4414)
!4414 = !{!4193, !61}
!4415 = !{!4416, !4417}
!4416 = !DILocalVariable(name: "address", arg: 1, scope: !4412, file: !3, line: 275, type: !61)
!4417 = !DILocalVariable(name: "irq_flag", scope: !4412, file: !3, line: 277, type: !61)
!4418 = !DILocation(line: 0, scope: !4412)
!4419 = !DILocation(line: 280, column: 17, scope: !4420)
!4420 = distinct !DILexicalBlock(scope: !4412, file: !3, line: 280, column: 9)
!4421 = !DILocation(line: 280, column: 9, scope: !4412)
!4422 = !DILocation(line: 284, column: 16, scope: !4412)
!4423 = !DILocation(line: 287, column: 32, scope: !4412)
!4424 = !DILocation(line: 287, column: 21, scope: !4412)
!4425 = !DILocation(line: 288, column: 21, scope: !4412)
!4426 = !DILocation(line: 434, column: 3, scope: !4242, inlinedAt: !4427)
!4427 = distinct !DILocation(line: 291, column: 5, scope: !4412)
!4428 = !DILocation(line: 294, column: 5, scope: !4412)
!4429 = !DILocation(line: 296, column: 5, scope: !4412)
!4430 = !DILocation(line: 297, column: 1, scope: !4412)
!4431 = distinct !DISubprogram(name: "hal_cache_invalidate_multiple_cache_lines", scope: !3, file: !3, line: 299, type: !4432, scopeLine: 300, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4434)
!4432 = !DISubroutineType(types: !4433)
!4433 = !{!4193, !61, !61}
!4434 = !{!4435, !4436, !4437, !4438}
!4435 = !DILocalVariable(name: "address", arg: 1, scope: !4431, file: !3, line: 299, type: !61)
!4436 = !DILocalVariable(name: "length", arg: 2, scope: !4431, file: !3, line: 299, type: !61)
!4437 = !DILocalVariable(name: "irq_flag", scope: !4431, file: !3, line: 301, type: !61)
!4438 = !DILocalVariable(name: "end_address", scope: !4431, file: !3, line: 302, type: !61)
!4439 = !DILocation(line: 0, scope: !4431)
!4440 = !DILocation(line: 302, column: 36, scope: !4431)
!4441 = !DILocation(line: 305, column: 47, scope: !4442)
!4442 = distinct !DILexicalBlock(scope: !4431, file: !3, line: 305, column: 9)
!4443 = !DILocation(line: 310, column: 16, scope: !4431)
!4444 = !DILocation(line: 313, column: 20, scope: !4431)
!4445 = !DILocation(line: 313, column: 5, scope: !4431)
!4446 = !DILocation(line: 314, column: 9, scope: !4447)
!4447 = distinct !DILexicalBlock(scope: !4431, file: !3, line: 313, column: 35)
!4448 = !DILocation(line: 315, column: 17, scope: !4447)
!4449 = distinct !{!4449, !4445, !4450}
!4450 = !DILocation(line: 316, column: 5, scope: !4431)
!4451 = !DILocation(line: 434, column: 3, scope: !4242, inlinedAt: !4452)
!4452 = distinct !DILocation(line: 319, column: 5, scope: !4431)
!4453 = !DILocation(line: 322, column: 5, scope: !4431)
!4454 = !DILocation(line: 324, column: 5, scope: !4431)
!4455 = !DILocation(line: 325, column: 1, scope: !4431)
!4456 = distinct !DISubprogram(name: "hal_cache_flush_one_cache_line", scope: !3, file: !3, line: 351, type: !4413, scopeLine: 352, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4457)
!4457 = !{!4458, !4459}
!4458 = !DILocalVariable(name: "address", arg: 1, scope: !4456, file: !3, line: 351, type: !61)
!4459 = !DILocalVariable(name: "irq_flag", scope: !4456, file: !3, line: 353, type: !61)
!4460 = !DILocation(line: 0, scope: !4456)
!4461 = !DILocation(line: 356, column: 17, scope: !4462)
!4462 = distinct !DILexicalBlock(scope: !4456, file: !3, line: 356, column: 9)
!4463 = !DILocation(line: 356, column: 9, scope: !4456)
!4464 = !DILocation(line: 361, column: 16, scope: !4456)
!4465 = !DILocation(line: 364, column: 32, scope: !4456)
!4466 = !DILocation(line: 364, column: 21, scope: !4456)
!4467 = !DILocation(line: 365, column: 21, scope: !4456)
!4468 = !DILocation(line: 434, column: 3, scope: !4242, inlinedAt: !4469)
!4469 = distinct !DILocation(line: 368, column: 5, scope: !4456)
!4470 = !DILocation(line: 371, column: 5, scope: !4456)
!4471 = !DILocation(line: 373, column: 5, scope: !4456)
!4472 = !DILocation(line: 374, column: 1, scope: !4456)
!4473 = distinct !DISubprogram(name: "hal_cache_flush_multiple_cache_lines", scope: !3, file: !3, line: 376, type: !4432, scopeLine: 377, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4474)
!4474 = !{!4475, !4476, !4477, !4478}
!4475 = !DILocalVariable(name: "address", arg: 1, scope: !4473, file: !3, line: 376, type: !61)
!4476 = !DILocalVariable(name: "length", arg: 2, scope: !4473, file: !3, line: 376, type: !61)
!4477 = !DILocalVariable(name: "irq_flag", scope: !4473, file: !3, line: 378, type: !61)
!4478 = !DILocalVariable(name: "end_address", scope: !4473, file: !3, line: 379, type: !61)
!4479 = !DILocation(line: 0, scope: !4473)
!4480 = !DILocation(line: 379, column: 36, scope: !4473)
!4481 = !DILocation(line: 382, column: 47, scope: !4482)
!4482 = distinct !DILexicalBlock(scope: !4473, file: !3, line: 382, column: 9)
!4483 = !DILocation(line: 387, column: 16, scope: !4473)
!4484 = !DILocation(line: 390, column: 20, scope: !4473)
!4485 = !DILocation(line: 390, column: 5, scope: !4473)
!4486 = !DILocation(line: 391, column: 9, scope: !4487)
!4487 = distinct !DILexicalBlock(scope: !4473, file: !3, line: 390, column: 35)
!4488 = !DILocation(line: 392, column: 17, scope: !4487)
!4489 = distinct !{!4489, !4485, !4490}
!4490 = !DILocation(line: 393, column: 5, scope: !4473)
!4491 = !DILocation(line: 434, column: 3, scope: !4242, inlinedAt: !4492)
!4492 = distinct !DILocation(line: 396, column: 5, scope: !4473)
!4493 = !DILocation(line: 399, column: 5, scope: !4473)
!4494 = !DILocation(line: 401, column: 5, scope: !4473)
!4495 = !DILocation(line: 402, column: 1, scope: !4473)
!4496 = distinct !DISubprogram(name: "hal_cache_flush_all_cache_lines", scope: !3, file: !3, line: 404, type: !4191, scopeLine: 405, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4497)
!4497 = !{!4498}
!4498 = !DILocalVariable(name: "irq_flag", scope: !4496, file: !3, line: 406, type: !61)
!4499 = !DILocation(line: 409, column: 16, scope: !4496)
!4500 = !DILocation(line: 0, scope: !4496)
!4501 = !DILocation(line: 412, column: 21, scope: !4496)
!4502 = !DILocation(line: 413, column: 21, scope: !4496)
!4503 = !DILocation(line: 434, column: 3, scope: !4242, inlinedAt: !4504)
!4504 = distinct !DILocation(line: 416, column: 5, scope: !4496)
!4505 = !DILocation(line: 419, column: 5, scope: !4496)
!4506 = !DILocation(line: 421, column: 5, scope: !4496)
!4507 = distinct !DISubprogram(name: "hal_cache_is_cacheable", scope: !3, file: !3, line: 424, type: !4508, scopeLine: 425, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4510)
!4508 = !DISubroutineType(types: !4509)
!4509 = !{!91, !61}
!4510 = !{!4511, !4512}
!4511 = !DILocalVariable(name: "address", arg: 1, scope: !4507, file: !3, line: 424, type: !61)
!4512 = !DILocalVariable(name: "region", scope: !4507, file: !3, line: 426, type: !4196)
!4513 = !DILocation(line: 0, scope: !4507)
!4514 = !DILocation(line: 429, column: 18, scope: !4515)
!4515 = distinct !DILexicalBlock(scope: !4507, file: !3, line: 429, column: 9)
!4516 = !DILocation(line: 429, column: 28, scope: !4515)
!4517 = !DILocation(line: 429, column: 9, scope: !4507)
!4518 = !DILocation(line: 435, column: 20, scope: !4519)
!4519 = distinct !DILexicalBlock(scope: !4520, file: !3, line: 435, column: 13)
!4520 = distinct !DILexicalBlock(scope: !4521, file: !3, line: 433, column: 81)
!4521 = distinct !DILexicalBlock(scope: !4522, file: !3, line: 433, column: 5)
!4522 = distinct !DILexicalBlock(scope: !4507, file: !3, line: 433, column: 5)
!4523 = !DILocation(line: 435, column: 41, scope: !4519)
!4524 = !DILocation(line: 435, column: 36, scope: !4519)
!4525 = !DILocation(line: 435, column: 13, scope: !4520)
!4526 = !DILocation(line: 436, column: 30, scope: !4527)
!4527 = distinct !DILexicalBlock(scope: !4528, file: !3, line: 436, column: 17)
!4528 = distinct !DILexicalBlock(scope: !4519, file: !3, line: 435, column: 53)
!4529 = !DILocation(line: 436, column: 59, scope: !4527)
!4530 = !DILocation(line: 436, column: 26, scope: !4527)
!4531 = !DILocation(line: 436, column: 85, scope: !4527)
!4532 = !DILocation(line: 436, column: 99, scope: !4527)
!4533 = !DILocation(line: 436, column: 97, scope: !4527)
!4534 = !DILocation(line: 436, column: 17, scope: !4528)
!4535 = !DILocation(line: 433, column: 77, scope: !4521)
!4536 = !DILocation(line: 433, column: 46, scope: !4521)
!4537 = !DILocation(line: 433, column: 5, scope: !4522)
!4538 = distinct !{!4538, !4537, !4539}
!4539 = !DILocation(line: 440, column: 5, scope: !4522)
!4540 = !DILocation(line: 442, column: 1, scope: !4507)
!4541 = distinct !DISubprogram(name: "hal_gpt_init", scope: !95, file: !95, line: 95, type: !4542, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !4546)
!4542 = !DISubroutineType(types: !4543)
!4543 = !{!4544, !4545}
!4544 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_status_t", file: !98, line: 393, baseType: !97)
!4545 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_port_t", file: !106, line: 854, baseType: !105)
!4546 = !{!4547}
!4547 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !4541, file: !95, line: 95, type: !4545)
!4548 = !DILocation(line: 0, scope: !4541)
!4549 = !DILocation(line: 98, column: 9, scope: !4550)
!4550 = distinct !DILexicalBlock(scope: !4541, file: !95, line: 98, column: 9)
!4551 = !DILocation(line: 98, column: 9, scope: !4541)
!4552 = !DILocation(line: 102, column: 10, scope: !4553)
!4553 = distinct !DILexicalBlock(scope: !4541, file: !95, line: 102, column: 9)
!4554 = !DILocation(line: 102, column: 34, scope: !4553)
!4555 = !DILocation(line: 102, column: 49, scope: !4553)
!4556 = !DILocation(line: 102, column: 69, scope: !4553)
!4557 = !DILocation(line: 103, column: 38, scope: !4553)
!4558 = !DILocation(line: 102, column: 9, scope: !4541)
!4559 = !DILocation(line: 109, column: 12, scope: !4541)
!4560 = !DILocation(line: 109, column: 5, scope: !4541)
!4561 = !DILocation(line: 112, column: 5, scope: !4541)
!4562 = !DILocation(line: 115, column: 44, scope: !4541)
!4563 = !DILocation(line: 118, column: 5, scope: !4541)
!4564 = !DILocation(line: 118, column: 23, scope: !4541)
!4565 = !DILocation(line: 118, column: 35, scope: !4541)
!4566 = !DILocation(line: 121, column: 42, scope: !4541)
!4567 = !DILocation(line: 121, column: 38, scope: !4541)
!4568 = !DILocation(line: 121, column: 5, scope: !4541)
!4569 = !DILocation(line: 121, column: 17, scope: !4541)
!4570 = !DILocation(line: 121, column: 35, scope: !4541)
!4571 = !DILocation(line: 123, column: 5, scope: !4572)
!4572 = distinct !DILexicalBlock(scope: !4541, file: !95, line: 123, column: 5)
!4573 = !DILocation(line: 123, column: 5, scope: !4574)
!4574 = distinct !DILexicalBlock(scope: !4572, file: !95, line: 123, column: 5)
!4575 = !DILocation(line: 123, column: 5, scope: !4576)
!4576 = distinct !DILexicalBlock(scope: !4574, file: !95, line: 123, column: 5)
!4577 = !DILocation(line: 131, column: 1, scope: !4541)
!4578 = distinct !DISubprogram(name: "hal_gpt_is_port_valid", scope: !95, file: !95, line: 81, type: !4579, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !4581)
!4579 = !DISubroutineType(types: !4580)
!4580 = !{!91, !4545}
!4581 = !{!4582}
!4582 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !4578, file: !95, line: 81, type: !4545)
!4583 = !DILocation(line: 0, scope: !4578)
!4584 = !DILocation(line: 84, column: 25, scope: !4585)
!4585 = distinct !DILexicalBlock(scope: !4578, file: !95, line: 84, column: 9)
!4586 = !DILocation(line: 84, column: 35, scope: !4585)
!4587 = !DILocation(line: 84, column: 45, scope: !4585)
!4588 = !DILocation(line: 93, column: 1, scope: !4578)
!4589 = distinct !DISubprogram(name: "hal_gpt_deinit", scope: !95, file: !95, line: 133, type: !4542, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !4590)
!4590 = !{!4591}
!4591 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !4589, file: !95, line: 133, type: !4545)
!4592 = !DILocation(line: 0, scope: !4589)
!4593 = !DILocation(line: 136, column: 9, scope: !4594)
!4594 = distinct !DILexicalBlock(scope: !4589, file: !95, line: 136, column: 9)
!4595 = !DILocation(line: 136, column: 9, scope: !4589)
!4596 = !DILocation(line: 140, column: 9, scope: !4597)
!4597 = distinct !DILexicalBlock(scope: !4589, file: !95, line: 140, column: 9)
!4598 = !DILocation(line: 140, column: 33, scope: !4597)
!4599 = !DILocation(line: 140, column: 48, scope: !4597)
!4600 = !DILocation(line: 140, column: 9, scope: !4589)
!4601 = !DILocation(line: 146, column: 12, scope: !4589)
!4602 = !DILocation(line: 146, column: 5, scope: !4589)
!4603 = !DILocation(line: 149, column: 29, scope: !4589)
!4604 = !DILocation(line: 149, column: 44, scope: !4589)
!4605 = !DILocation(line: 151, column: 29, scope: !4589)
!4606 = !DILocation(line: 151, column: 5, scope: !4589)
!4607 = !DILocation(line: 153, column: 5, scope: !4608)
!4608 = distinct !DILexicalBlock(scope: !4589, file: !95, line: 153, column: 5)
!4609 = !DILocation(line: 159, column: 5, scope: !4589)
!4610 = !DILocation(line: 160, column: 1, scope: !4589)
!4611 = distinct !DISubprogram(name: "hal_gpt_get_free_run_count", scope: !95, file: !95, line: 163, type: !4612, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !4615)
!4612 = !DISubroutineType(types: !4613)
!4613 = !{!4544, !4614, !1716}
!4614 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_clock_source_t", file: !106, line: 860, baseType: !119)
!4615 = !{!4616, !4617}
!4616 = !DILocalVariable(name: "clock_source", arg: 1, scope: !4611, file: !95, line: 163, type: !4614)
!4617 = !DILocalVariable(name: "count", arg: 2, scope: !4611, file: !95, line: 163, type: !1716)
!4618 = !DILocation(line: 0, scope: !4611)
!4619 = !DILocation(line: 166, column: 9, scope: !4611)
!4620 = !DILocation(line: 167, column: 44, scope: !4621)
!4621 = distinct !DILexicalBlock(scope: !4622, file: !95, line: 167, column: 13)
!4622 = distinct !DILexicalBlock(scope: !4623, file: !95, line: 166, column: 51)
!4623 = distinct !DILexicalBlock(scope: !4611, file: !95, line: 166, column: 9)
!4624 = !DILocation(line: 167, column: 59, scope: !4621)
!4625 = !DILocation(line: 167, column: 13, scope: !4622)
!4626 = !DILocation(line: 170, column: 38, scope: !4627)
!4627 = distinct !DILexicalBlock(scope: !4621, file: !95, line: 167, column: 79)
!4628 = !DILocation(line: 170, column: 13, scope: !4627)
!4629 = !DILocation(line: 172, column: 59, scope: !4627)
!4630 = !DILocation(line: 173, column: 9, scope: !4627)
!4631 = !DILocation(line: 175, column: 36, scope: !4622)
!4632 = !DILocation(line: 175, column: 18, scope: !4622)
!4633 = !DILocation(line: 177, column: 5, scope: !4622)
!4634 = !DILocation(line: 179, column: 44, scope: !4635)
!4635 = distinct !DILexicalBlock(scope: !4636, file: !95, line: 179, column: 13)
!4636 = distinct !DILexicalBlock(scope: !4637, file: !95, line: 178, column: 55)
!4637 = distinct !DILexicalBlock(scope: !4623, file: !95, line: 178, column: 14)
!4638 = !DILocation(line: 179, column: 59, scope: !4635)
!4639 = !DILocation(line: 179, column: 13, scope: !4636)
!4640 = !DILocation(line: 182, column: 38, scope: !4641)
!4641 = distinct !DILexicalBlock(scope: !4635, file: !95, line: 179, column: 79)
!4642 = !DILocation(line: 182, column: 13, scope: !4641)
!4643 = !DILocation(line: 184, column: 59, scope: !4641)
!4644 = !DILocation(line: 186, column: 9, scope: !4641)
!4645 = !DILocation(line: 188, column: 68, scope: !4636)
!4646 = !DILocation(line: 188, column: 50, scope: !4636)
!4647 = !DILocation(line: 188, column: 18, scope: !4636)
!4648 = !DILocation(line: 0, scope: !4623)
!4649 = !DILocation(line: 193, column: 5, scope: !4611)
!4650 = !DILocation(line: 194, column: 1, scope: !4611)
!4651 = distinct !DISubprogram(name: "hal_gpt_get_duration_count", scope: !95, file: !95, line: 196, type: !4652, scopeLine: 197, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !4654)
!4652 = !DISubroutineType(types: !4653)
!4653 = !{!4544, !61, !61, !1716}
!4654 = !{!4655, !4656, !4657}
!4655 = !DILocalVariable(name: "start_count", arg: 1, scope: !4651, file: !95, line: 196, type: !61)
!4656 = !DILocalVariable(name: "end_count", arg: 2, scope: !4651, file: !95, line: 196, type: !61)
!4657 = !DILocalVariable(name: "duration_count", arg: 3, scope: !4651, file: !95, line: 196, type: !1716)
!4658 = !DILocation(line: 0, scope: !4651)
!4659 = !DILocation(line: 198, column: 24, scope: !4660)
!4660 = distinct !DILexicalBlock(scope: !4651, file: !95, line: 198, column: 9)
!4661 = !DILocation(line: 198, column: 9, scope: !4651)
!4662 = !DILocation(line: 0, scope: !4663)
!4663 = distinct !DILexicalBlock(scope: !4651, file: !95, line: 202, column: 9)
!4664 = !DILocation(line: 208, column: 5, scope: !4651)
!4665 = !DILocation(line: 209, column: 1, scope: !4651)
!4666 = distinct !DISubprogram(name: "hal_gpt_get_running_status", scope: !95, file: !95, line: 211, type: !4667, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !4670)
!4667 = !DISubroutineType(types: !4668)
!4668 = !{!4544, !4545, !4669}
!4669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !353, size: 32)
!4670 = !{!4671, !4672}
!4671 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !4666, file: !95, line: 211, type: !4545)
!4672 = !DILocalVariable(name: "running_status", arg: 2, scope: !4666, file: !95, line: 211, type: !4669)
!4673 = !DILocation(line: 0, scope: !4666)
!4674 = !DILocation(line: 213, column: 18, scope: !4675)
!4675 = distinct !DILexicalBlock(scope: !4666, file: !95, line: 213, column: 9)
!4676 = !DILocation(line: 213, column: 9, scope: !4666)
!4677 = !DILocation(line: 217, column: 47, scope: !4666)
!4678 = !DILocation(line: 217, column: 21, scope: !4666)
!4679 = !DILocation(line: 219, column: 5, scope: !4666)
!4680 = !DILocation(line: 220, column: 1, scope: !4666)
!4681 = distinct !DISubprogram(name: "hal_gpt_register_callback", scope: !95, file: !95, line: 222, type: !4682, scopeLine: 225, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !4684)
!4682 = !DISubroutineType(types: !4683)
!4683 = !{!4544, !4545, !151, !88}
!4684 = !{!4685, !4686, !4687}
!4685 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !4681, file: !95, line: 222, type: !4545)
!4686 = !DILocalVariable(name: "callback", arg: 2, scope: !4681, file: !95, line: 223, type: !151)
!4687 = !DILocalVariable(name: "user_data", arg: 3, scope: !4681, file: !95, line: 224, type: !88)
!4688 = !DILocation(line: 0, scope: !4681)
!4689 = !DILocation(line: 227, column: 9, scope: !4690)
!4690 = distinct !DILexicalBlock(scope: !4681, file: !95, line: 227, column: 9)
!4691 = !DILocation(line: 227, column: 9, scope: !4681)
!4692 = !DILocation(line: 231, column: 34, scope: !4693)
!4693 = distinct !DILexicalBlock(scope: !4681, file: !95, line: 231, column: 9)
!4694 = !DILocation(line: 231, column: 49, scope: !4693)
!4695 = !DILocation(line: 231, column: 69, scope: !4693)
!4696 = !DILocation(line: 232, column: 38, scope: !4693)
!4697 = !DILocation(line: 232, column: 53, scope: !4693)
!4698 = !DILocation(line: 231, column: 9, scope: !4681)
!4699 = !DILocation(line: 237, column: 18, scope: !4700)
!4700 = distinct !DILexicalBlock(scope: !4681, file: !95, line: 237, column: 9)
!4701 = !DILocation(line: 237, column: 9, scope: !4681)
!4702 = !DILocation(line: 245, column: 46, scope: !4681)
!4703 = !DILocation(line: 245, column: 56, scope: !4681)
!4704 = !DILocation(line: 246, column: 46, scope: !4681)
!4705 = !DILocation(line: 246, column: 56, scope: !4681)
!4706 = !DILocation(line: 248, column: 5, scope: !4681)
!4707 = !DILocation(line: 250, column: 5, scope: !4681)
!4708 = !DILocation(line: 252, column: 1, scope: !4681)
!4709 = distinct !DISubprogram(name: "hal_gpt_start_timer_ms", scope: !95, file: !95, line: 256, type: !4710, scopeLine: 257, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !4713)
!4710 = !DISubroutineType(types: !4711)
!4711 = !{!4544, !4545, !61, !4712}
!4712 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_timer_type_t", file: !98, line: 383, baseType: !142)
!4713 = !{!4714, !4715, !4716, !4717}
!4714 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !4709, file: !95, line: 256, type: !4545)
!4715 = !DILocalVariable(name: "timeout_time_ms", arg: 2, scope: !4709, file: !95, line: 256, type: !61)
!4716 = !DILocalVariable(name: "timer_type", arg: 3, scope: !4709, file: !95, line: 256, type: !4712)
!4717 = !DILocalVariable(name: "mask", scope: !4709, file: !95, line: 259, type: !60)
!4718 = !DILocation(line: 0, scope: !4709)
!4719 = !DILocation(line: 259, column: 5, scope: !4709)
!4720 = !DILocation(line: 259, column: 23, scope: !4709)
!4721 = !DILocation(line: 261, column: 9, scope: !4722)
!4722 = distinct !DILexicalBlock(scope: !4709, file: !95, line: 261, column: 9)
!4723 = !DILocation(line: 261, column: 9, scope: !4709)
!4724 = !DILocation(line: 265, column: 34, scope: !4725)
!4725 = distinct !DILexicalBlock(scope: !4709, file: !95, line: 265, column: 9)
!4726 = !DILocation(line: 265, column: 49, scope: !4725)
!4727 = !DILocation(line: 266, column: 13, scope: !4725)
!4728 = !DILocation(line: 266, column: 41, scope: !4725)
!4729 = !DILocation(line: 266, column: 56, scope: !4725)
!4730 = !DILocation(line: 265, column: 9, scope: !4709)
!4731 = !DILocation(line: 271, column: 25, scope: !4732)
!4732 = distinct !DILexicalBlock(scope: !4709, file: !95, line: 271, column: 9)
!4733 = !DILocation(line: 271, column: 9, scope: !4709)
!4734 = !DILocation(line: 282, column: 12, scope: !4709)
!4735 = !DILocation(line: 282, column: 10, scope: !4709)
!4736 = !DILocation(line: 284, column: 5, scope: !4709)
!4737 = !DILocation(line: 286, column: 5, scope: !4709)
!4738 = !DILocation(line: 286, column: 23, scope: !4709)
!4739 = !DILocation(line: 286, column: 34, scope: !4709)
!4740 = !DILocation(line: 287, column: 5, scope: !4709)
!4741 = !DILocation(line: 287, column: 23, scope: !4709)
!4742 = !DILocation(line: 287, column: 34, scope: !4709)
!4743 = !DILocation(line: 290, column: 5, scope: !4709)
!4744 = !DILocation(line: 290, column: 23, scope: !4709)
!4745 = !DILocation(line: 290, column: 37, scope: !4709)
!4746 = !DILocation(line: 291, column: 39, scope: !4709)
!4747 = !DILocation(line: 291, column: 5, scope: !4709)
!4748 = !DILocation(line: 291, column: 23, scope: !4709)
!4749 = !DILocation(line: 291, column: 37, scope: !4709)
!4750 = !DILocation(line: 292, column: 5, scope: !4709)
!4751 = !DILocation(line: 292, column: 23, scope: !4709)
!4752 = !DILocation(line: 292, column: 37, scope: !4709)
!4753 = !DILocation(line: 297, column: 47, scope: !4709)
!4754 = !DILocation(line: 298, column: 33, scope: !4709)
!4755 = !DILocation(line: 296, column: 5, scope: !4709)
!4756 = !DILocation(line: 296, column: 23, scope: !4709)
!4757 = !DILocation(line: 296, column: 31, scope: !4709)
!4758 = !DILocation(line: 300, column: 5, scope: !4709)
!4759 = !DILocation(line: 300, column: 29, scope: !4709)
!4760 = distinct !{!4760, !4758, !4761}
!4761 = !DILocation(line: 300, column: 39, scope: !4709)
!4762 = !DILocation(line: 301, column: 23, scope: !4709)
!4763 = !DILocation(line: 301, column: 33, scope: !4709)
!4764 = !DILocation(line: 302, column: 5, scope: !4709)
!4765 = !DILocation(line: 302, column: 23, scope: !4709)
!4766 = !DILocation(line: 302, column: 34, scope: !4709)
!4767 = !DILocation(line: 303, column: 44, scope: !4709)
!4768 = !DILocation(line: 305, column: 28, scope: !4709)
!4769 = !DILocation(line: 305, column: 5, scope: !4709)
!4770 = !DILocation(line: 306, column: 5, scope: !4709)
!4771 = !DILocation(line: 307, column: 1, scope: !4709)
!4772 = distinct !DISubprogram(name: "hal_gpt_delay_ms", scope: !95, file: !95, line: 310, type: !4773, scopeLine: 311, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !4775)
!4773 = !DISubroutineType(types: !4774)
!4774 = !{!4544, !61}
!4775 = !{!4776}
!4776 = !DILocalVariable(name: "ms", arg: 1, scope: !4772, file: !95, line: 310, type: !61)
!4777 = !DILocation(line: 0, scope: !4772)
!4778 = !DILocation(line: 313, column: 40, scope: !4779)
!4779 = distinct !DILexicalBlock(scope: !4772, file: !95, line: 313, column: 9)
!4780 = !DILocation(line: 313, column: 55, scope: !4779)
!4781 = !DILocation(line: 313, column: 9, scope: !4772)
!4782 = !DILocation(line: 316, column: 34, scope: !4783)
!4783 = distinct !DILexicalBlock(scope: !4779, file: !95, line: 313, column: 75)
!4784 = !DILocation(line: 316, column: 9, scope: !4783)
!4785 = !DILocation(line: 317, column: 55, scope: !4783)
!4786 = !DILocation(line: 318, column: 5, scope: !4783)
!4787 = !DILocation(line: 320, column: 20, scope: !4772)
!4788 = !DILocation(line: 320, column: 45, scope: !4772)
!4789 = !DILocation(line: 320, column: 5, scope: !4772)
!4790 = !DILocation(line: 322, column: 5, scope: !4772)
!4791 = distinct !DISubprogram(name: "hal_gpt_start_timer_us", scope: !95, file: !95, line: 327, type: !4710, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !4792)
!4792 = !{!4793, !4794, !4795, !4796}
!4793 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !4791, file: !95, line: 327, type: !4545)
!4794 = !DILocalVariable(name: "timeout_time_us", arg: 2, scope: !4791, file: !95, line: 327, type: !61)
!4795 = !DILocalVariable(name: "timer_type", arg: 3, scope: !4791, file: !95, line: 327, type: !4712)
!4796 = !DILocalVariable(name: "mask", scope: !4791, file: !95, line: 329, type: !60)
!4797 = !DILocation(line: 0, scope: !4791)
!4798 = !DILocation(line: 329, column: 5, scope: !4791)
!4799 = !DILocation(line: 329, column: 23, scope: !4791)
!4800 = !DILocation(line: 331, column: 9, scope: !4801)
!4801 = distinct !DILexicalBlock(scope: !4791, file: !95, line: 331, column: 9)
!4802 = !DILocation(line: 331, column: 9, scope: !4791)
!4803 = !DILocation(line: 336, column: 34, scope: !4804)
!4804 = distinct !DILexicalBlock(scope: !4791, file: !95, line: 336, column: 9)
!4805 = !DILocation(line: 336, column: 49, scope: !4804)
!4806 = !DILocation(line: 337, column: 13, scope: !4804)
!4807 = !DILocation(line: 337, column: 41, scope: !4804)
!4808 = !DILocation(line: 337, column: 56, scope: !4804)
!4809 = !DILocation(line: 336, column: 9, scope: !4791)
!4810 = !DILocation(line: 348, column: 5, scope: !4811)
!4811 = distinct !DILexicalBlock(scope: !4791, file: !95, line: 348, column: 5)
!4812 = !DILocation(line: 349, column: 29, scope: !4791)
!4813 = !DILocation(line: 349, column: 49, scope: !4791)
!4814 = !DILocation(line: 351, column: 12, scope: !4791)
!4815 = !DILocation(line: 351, column: 10, scope: !4791)
!4816 = !DILocation(line: 353, column: 5, scope: !4791)
!4817 = !DILocation(line: 355, column: 5, scope: !4791)
!4818 = !DILocation(line: 355, column: 23, scope: !4791)
!4819 = !DILocation(line: 355, column: 34, scope: !4791)
!4820 = !DILocation(line: 356, column: 5, scope: !4791)
!4821 = !DILocation(line: 356, column: 23, scope: !4791)
!4822 = !DILocation(line: 356, column: 34, scope: !4791)
!4823 = !DILocation(line: 359, column: 5, scope: !4791)
!4824 = !DILocation(line: 359, column: 23, scope: !4791)
!4825 = !DILocation(line: 359, column: 37, scope: !4791)
!4826 = !DILocation(line: 360, column: 39, scope: !4791)
!4827 = !DILocation(line: 360, column: 5, scope: !4791)
!4828 = !DILocation(line: 360, column: 23, scope: !4791)
!4829 = !DILocation(line: 360, column: 37, scope: !4791)
!4830 = !DILocation(line: 361, column: 5, scope: !4791)
!4831 = !DILocation(line: 361, column: 23, scope: !4791)
!4832 = !DILocation(line: 361, column: 37, scope: !4791)
!4833 = !DILocation(line: 366, column: 47, scope: !4791)
!4834 = !DILocation(line: 367, column: 33, scope: !4791)
!4835 = !DILocation(line: 365, column: 5, scope: !4791)
!4836 = !DILocation(line: 365, column: 23, scope: !4791)
!4837 = !DILocation(line: 365, column: 31, scope: !4791)
!4838 = !DILocation(line: 369, column: 5, scope: !4791)
!4839 = !DILocation(line: 369, column: 29, scope: !4791)
!4840 = distinct !{!4840, !4838, !4841}
!4841 = !DILocation(line: 369, column: 39, scope: !4791)
!4842 = !DILocation(line: 370, column: 23, scope: !4791)
!4843 = !DILocation(line: 370, column: 33, scope: !4791)
!4844 = !DILocation(line: 371, column: 5, scope: !4791)
!4845 = !DILocation(line: 371, column: 23, scope: !4791)
!4846 = !DILocation(line: 371, column: 34, scope: !4791)
!4847 = !DILocation(line: 373, column: 28, scope: !4791)
!4848 = !DILocation(line: 373, column: 5, scope: !4791)
!4849 = !DILocation(line: 375, column: 44, scope: !4791)
!4850 = !DILocation(line: 377, column: 5, scope: !4791)
!4851 = !DILocation(line: 378, column: 1, scope: !4791)
!4852 = distinct !DISubprogram(name: "hal_gpt_delay_us", scope: !95, file: !95, line: 382, type: !4773, scopeLine: 383, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !4853)
!4853 = !{!4854}
!4854 = !DILocalVariable(name: "us", arg: 1, scope: !4852, file: !95, line: 382, type: !61)
!4855 = !DILocation(line: 0, scope: !4852)
!4856 = !DILocation(line: 385, column: 40, scope: !4857)
!4857 = distinct !DILexicalBlock(scope: !4852, file: !95, line: 385, column: 9)
!4858 = !DILocation(line: 385, column: 55, scope: !4857)
!4859 = !DILocation(line: 385, column: 9, scope: !4852)
!4860 = !DILocation(line: 388, column: 34, scope: !4861)
!4861 = distinct !DILexicalBlock(scope: !4857, file: !95, line: 385, column: 75)
!4862 = !DILocation(line: 388, column: 9, scope: !4861)
!4863 = !DILocation(line: 390, column: 55, scope: !4861)
!4864 = !DILocation(line: 391, column: 5, scope: !4861)
!4865 = !DILocation(line: 392, column: 20, scope: !4852)
!4866 = !DILocation(line: 392, column: 45, scope: !4852)
!4867 = !DILocation(line: 392, column: 5, scope: !4852)
!4868 = !DILocation(line: 394, column: 5, scope: !4852)
!4869 = distinct !DISubprogram(name: "hal_gpt_stop_timer", scope: !95, file: !95, line: 398, type: !4542, scopeLine: 399, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !4870)
!4870 = !{!4871, !4872}
!4871 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !4869, file: !95, line: 398, type: !4545)
!4872 = !DILocalVariable(name: "mask", scope: !4869, file: !95, line: 400, type: !60)
!4873 = !DILocation(line: 0, scope: !4869)
!4874 = !DILocation(line: 400, column: 5, scope: !4869)
!4875 = !DILocation(line: 400, column: 23, scope: !4869)
!4876 = !DILocation(line: 402, column: 9, scope: !4877)
!4877 = distinct !DILexicalBlock(scope: !4869, file: !95, line: 402, column: 9)
!4878 = !DILocation(line: 402, column: 9, scope: !4869)
!4879 = !DILocation(line: 413, column: 12, scope: !4869)
!4880 = !DILocation(line: 413, column: 10, scope: !4869)
!4881 = !DILocation(line: 415, column: 5, scope: !4869)
!4882 = !DILocation(line: 415, column: 23, scope: !4869)
!4883 = !DILocation(line: 415, column: 34, scope: !4869)
!4884 = !DILocation(line: 418, column: 5, scope: !4869)
!4885 = !DILocation(line: 418, column: 23, scope: !4869)
!4886 = !DILocation(line: 418, column: 34, scope: !4869)
!4887 = !DILocation(line: 420, column: 5, scope: !4869)
!4888 = !DILocation(line: 420, column: 23, scope: !4869)
!4889 = !DILocation(line: 420, column: 35, scope: !4869)
!4890 = !DILocation(line: 422, column: 29, scope: !4869)
!4891 = !DILocation(line: 422, column: 44, scope: !4869)
!4892 = !DILocation(line: 423, column: 28, scope: !4869)
!4893 = !DILocation(line: 423, column: 5, scope: !4869)
!4894 = !DILocation(line: 425, column: 33, scope: !4895)
!4895 = distinct !DILexicalBlock(scope: !4869, file: !95, line: 425, column: 9)
!4896 = !DILocation(line: 425, column: 9, scope: !4869)
!4897 = !DILocation(line: 426, column: 9, scope: !4898)
!4898 = distinct !DILexicalBlock(scope: !4899, file: !95, line: 426, column: 9)
!4899 = distinct !DILexicalBlock(scope: !4895, file: !95, line: 425, column: 62)
!4900 = !DILocation(line: 427, column: 53, scope: !4899)
!4901 = !DILocation(line: 428, column: 5, scope: !4899)
!4902 = !DILocation(line: 430, column: 1, scope: !4869)
!4903 = distinct !DISubprogram(name: "hal_gpt_sw_get_timer", scope: !95, file: !95, line: 434, type: !4904, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !4906)
!4904 = !DISubroutineType(types: !4905)
!4905 = !{!4544, !1716}
!4906 = !{!4907, !4908, !4909}
!4907 = !DILocalVariable(name: "handle", arg: 1, scope: !4903, file: !95, line: 434, type: !1716)
!4908 = !DILocalVariable(name: "timer", scope: !4903, file: !95, line: 436, type: !61)
!4909 = !DILocalVariable(name: "mask", scope: !4903, file: !95, line: 437, type: !61)
!4910 = !DILocation(line: 0, scope: !4903)
!4911 = !DILocation(line: 439, column: 24, scope: !4912)
!4912 = distinct !DILexicalBlock(scope: !4903, file: !95, line: 439, column: 9)
!4913 = !DILocation(line: 439, column: 41, scope: !4912)
!4914 = !DILocation(line: 439, column: 9, scope: !4903)
!4915 = !DILocation(line: 443, column: 16, scope: !4916)
!4916 = distinct !DILexicalBlock(scope: !4903, file: !95, line: 443, column: 9)
!4917 = !DILocation(line: 443, column: 9, scope: !4903)
!4918 = !DILocation(line: 448, column: 12, scope: !4903)
!4919 = !DILocation(line: 450, column: 15, scope: !4903)
!4920 = !DILocation(line: 451, column: 21, scope: !4903)
!4921 = !DILocation(line: 451, column: 13, scope: !4903)
!4922 = !DILocation(line: 452, column: 33, scope: !4903)
!4923 = !DILocation(line: 452, column: 41, scope: !4903)
!4924 = !DILocation(line: 453, column: 36, scope: !4903)
!4925 = !DILocation(line: 455, column: 5, scope: !4903)
!4926 = !DILocation(line: 456, column: 5, scope: !4903)
!4927 = !DILocation(line: 457, column: 1, scope: !4903)
!4928 = distinct !DISubprogram(name: "hal_gpt_sw_free_timer", scope: !95, file: !95, line: 459, type: !4773, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !4929)
!4929 = !{!4930, !4931}
!4930 = !DILocalVariable(name: "handle", arg: 1, scope: !4928, file: !95, line: 459, type: !61)
!4931 = !DILocalVariable(name: "timer", scope: !4928, file: !95, line: 461, type: !60)
!4932 = !DILocation(line: 0, scope: !4928)
!4933 = !DILocation(line: 461, column: 5, scope: !4928)
!4934 = !DILocation(line: 461, column: 23, scope: !4928)
!4935 = !DILocation(line: 463, column: 17, scope: !4936)
!4936 = distinct !DILexicalBlock(scope: !4928, file: !95, line: 463, column: 9)
!4937 = !DILocation(line: 463, column: 37, scope: !4936)
!4938 = !DILocation(line: 463, column: 9, scope: !4928)
!4939 = !DILocation(line: 467, column: 20, scope: !4928)
!4940 = !DILocation(line: 467, column: 11, scope: !4928)
!4941 = !DILocation(line: 469, column: 24, scope: !4942)
!4942 = distinct !DILexicalBlock(scope: !4928, file: !95, line: 469, column: 9)
!4943 = !DILocation(line: 469, column: 41, scope: !4942)
!4944 = !DILocation(line: 469, column: 9, scope: !4928)
!4945 = !DILocation(line: 473, column: 30, scope: !4946)
!4946 = distinct !DILexicalBlock(scope: !4928, file: !95, line: 473, column: 9)
!4947 = !DILocation(line: 473, column: 37, scope: !4946)
!4948 = !DILocation(line: 473, column: 9, scope: !4928)
!4949 = !DILocation(line: 477, column: 30, scope: !4950)
!4950 = distinct !DILexicalBlock(scope: !4928, file: !95, line: 477, column: 9)
!4951 = !DILocation(line: 477, column: 37, scope: !4950)
!4952 = !DILocation(line: 477, column: 45, scope: !4950)
!4953 = !DILocation(line: 477, column: 9, scope: !4928)
!4954 = !DILocation(line: 481, column: 26, scope: !4928)
!4955 = !DILocation(line: 481, column: 33, scope: !4928)
!4956 = !DILocation(line: 481, column: 41, scope: !4928)
!4957 = !DILocation(line: 482, column: 36, scope: !4928)
!4958 = !DILocation(line: 484, column: 5, scope: !4928)
!4959 = !DILocation(line: 485, column: 1, scope: !4928)
!4960 = distinct !DISubprogram(name: "hal_gpt_sw_start_timer_ms", scope: !95, file: !95, line: 487, type: !4961, scopeLine: 488, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !4963)
!4961 = !DISubroutineType(types: !4962)
!4962 = !{!4544, !61, !61, !151, !88}
!4963 = !{!4964, !4965, !4966, !4967, !4968, !4969, !4970}
!4964 = !DILocalVariable(name: "handle", arg: 1, scope: !4960, file: !95, line: 487, type: !61)
!4965 = !DILocalVariable(name: "timeout_time_ms", arg: 2, scope: !4960, file: !95, line: 487, type: !61)
!4966 = !DILocalVariable(name: "callback", arg: 3, scope: !4960, file: !95, line: 487, type: !151)
!4967 = !DILocalVariable(name: "user_data", arg: 4, scope: !4960, file: !95, line: 487, type: !88)
!4968 = !DILocalVariable(name: "current_time", scope: !4960, file: !95, line: 489, type: !61)
!4969 = !DILocalVariable(name: "mask", scope: !4960, file: !95, line: 490, type: !61)
!4970 = !DILocalVariable(name: "timer", scope: !4960, file: !95, line: 491, type: !61)
!4971 = !DILocation(line: 0, scope: !4960)
!4972 = !DILocation(line: 493, column: 17, scope: !4973)
!4973 = distinct !DILexicalBlock(scope: !4960, file: !95, line: 493, column: 9)
!4974 = !DILocation(line: 493, column: 37, scope: !4973)
!4975 = !DILocation(line: 493, column: 9, scope: !4960)
!4976 = !DILocation(line: 497, column: 20, scope: !4960)
!4977 = !DILocation(line: 503, column: 37, scope: !4978)
!4978 = distinct !DILexicalBlock(scope: !4960, file: !95, line: 503, column: 9)
!4979 = !DILocation(line: 503, column: 9, scope: !4960)
!4980 = !DILocation(line: 507, column: 37, scope: !4981)
!4981 = distinct !DILexicalBlock(scope: !4960, file: !95, line: 507, column: 9)
!4982 = !DILocation(line: 507, column: 45, scope: !4981)
!4983 = !DILocation(line: 507, column: 9, scope: !4960)
!4984 = !DILocation(line: 511, column: 25, scope: !4985)
!4985 = distinct !DILexicalBlock(scope: !4960, file: !95, line: 511, column: 9)
!4986 = !DILocation(line: 511, column: 9, scope: !4960)
!4987 = !DILocation(line: 516, column: 12, scope: !4960)
!4988 = !DILocation(line: 519, column: 30, scope: !4960)
!4989 = !DILocation(line: 521, column: 24, scope: !4990)
!4990 = distinct !DILexicalBlock(scope: !4960, file: !95, line: 521, column: 9)
!4991 = !DILocation(line: 521, column: 38, scope: !4990)
!4992 = !DILocation(line: 521, column: 9, scope: !4960)
!4993 = !DILocation(line: 522, column: 9, scope: !4994)
!4994 = distinct !DILexicalBlock(scope: !4990, file: !95, line: 521, column: 48)
!4995 = !DILocation(line: 523, column: 9, scope: !4994)
!4996 = !DILocation(line: 524, column: 38, scope: !4994)
!4997 = !DILocation(line: 525, column: 5, scope: !4994)
!4998 = !DILocation(line: 526, column: 5, scope: !4960)
!4999 = !DILocation(line: 528, column: 23, scope: !5000)
!5000 = distinct !DILexicalBlock(scope: !4960, file: !95, line: 528, column: 8)
!5001 = !DILocation(line: 528, column: 41, scope: !5000)
!5002 = !DILocation(line: 528, column: 8, scope: !4960)
!5003 = !DILocation(line: 529, column: 51, scope: !5004)
!5004 = distinct !DILexicalBlock(scope: !5000, file: !95, line: 528, column: 51)
!5005 = !DILocation(line: 529, column: 24, scope: !5004)
!5006 = !DILocation(line: 530, column: 5, scope: !5004)
!5007 = !DILocation(line: 0, scope: !5000)
!5008 = !DILocation(line: 534, column: 34, scope: !4960)
!5009 = !DILocation(line: 535, column: 39, scope: !4960)
!5010 = !DILocation(line: 537, column: 49, scope: !4960)
!5011 = !DILocation(line: 538, column: 80, scope: !4960)
!5012 = !DILocation(line: 538, column: 33, scope: !4960)
!5013 = !DILocation(line: 538, column: 49, scope: !4960)
!5014 = !DILocation(line: 539, column: 50, scope: !4960)
!5015 = !DILocation(line: 539, column: 61, scope: !4960)
!5016 = !DILocation(line: 540, column: 50, scope: !4960)
!5017 = !DILocation(line: 540, column: 61, scope: !4960)
!5018 = !DILocation(line: 542, column: 5, scope: !4960)
!5019 = !DILocation(line: 546, column: 30, scope: !4960)
!5020 = !DILocation(line: 548, column: 5, scope: !4960)
!5021 = !DILocation(line: 550, column: 5, scope: !4960)
!5022 = !DILocation(line: 551, column: 1, scope: !4960)
!5023 = distinct !DISubprogram(name: "hal_gpt_sw_stop_timer_ms", scope: !95, file: !95, line: 553, type: !4773, scopeLine: 554, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !5024)
!5024 = !{!5025, !5026, !5027, !5028}
!5025 = !DILocalVariable(name: "handle", arg: 1, scope: !5023, file: !95, line: 553, type: !61)
!5026 = !DILocalVariable(name: "current_time", scope: !5023, file: !95, line: 555, type: !61)
!5027 = !DILocalVariable(name: "mask", scope: !5023, file: !95, line: 556, type: !61)
!5028 = !DILocalVariable(name: "timer", scope: !5023, file: !95, line: 557, type: !61)
!5029 = !DILocation(line: 0, scope: !5023)
!5030 = !DILocation(line: 559, column: 17, scope: !5031)
!5031 = distinct !DILexicalBlock(scope: !5023, file: !95, line: 559, column: 9)
!5032 = !DILocation(line: 559, column: 37, scope: !5031)
!5033 = !DILocation(line: 559, column: 9, scope: !5023)
!5034 = !DILocation(line: 563, column: 20, scope: !5023)
!5035 = !DILocation(line: 565, column: 37, scope: !5036)
!5036 = distinct !DILexicalBlock(scope: !5023, file: !95, line: 565, column: 9)
!5037 = !DILocation(line: 565, column: 48, scope: !5036)
!5038 = !DILocation(line: 565, column: 9, scope: !5023)
!5039 = !DILocation(line: 569, column: 37, scope: !5040)
!5040 = distinct !DILexicalBlock(scope: !5023, file: !95, line: 569, column: 9)
!5041 = !DILocation(line: 569, column: 45, scope: !5040)
!5042 = !DILocation(line: 569, column: 9, scope: !5023)
!5043 = !DILocation(line: 574, column: 12, scope: !5023)
!5044 = !DILocation(line: 577, column: 30, scope: !5023)
!5045 = !DILocation(line: 578, column: 5, scope: !5023)
!5046 = !DILocation(line: 579, column: 30, scope: !5023)
!5047 = !DILocation(line: 581, column: 23, scope: !5048)
!5048 = distinct !DILexicalBlock(scope: !5023, file: !95, line: 581, column: 8)
!5049 = !DILocation(line: 581, column: 41, scope: !5048)
!5050 = !DILocation(line: 581, column: 8, scope: !5023)
!5051 = !DILocation(line: 582, column: 51, scope: !5052)
!5052 = distinct !DILexicalBlock(scope: !5048, file: !95, line: 581, column: 51)
!5053 = !DILocation(line: 582, column: 24, scope: !5052)
!5054 = !DILocation(line: 583, column: 5, scope: !5052)
!5055 = !DILocation(line: 0, scope: !5048)
!5056 = !DILocation(line: 587, column: 34, scope: !5023)
!5057 = !DILocation(line: 588, column: 39, scope: !5023)
!5058 = !DILocation(line: 590, column: 44, scope: !5023)
!5059 = !DILocation(line: 592, column: 24, scope: !5060)
!5060 = distinct !DILexicalBlock(scope: !5023, file: !95, line: 592, column: 9)
!5061 = !DILocation(line: 592, column: 44, scope: !5060)
!5062 = !DILocation(line: 592, column: 9, scope: !5023)
!5063 = !DILocation(line: 593, column: 9, scope: !5064)
!5064 = distinct !DILexicalBlock(scope: !5060, file: !95, line: 592, column: 50)
!5065 = !DILocation(line: 594, column: 5, scope: !5064)
!5066 = !DILocation(line: 598, column: 30, scope: !5023)
!5067 = !DILocation(line: 599, column: 5, scope: !5023)
!5068 = !DILocation(line: 601, column: 5, scope: !5023)
!5069 = !DILocation(line: 603, column: 1, scope: !5023)
!5070 = distinct !DISubprogram(name: "hal_gpt_sw_get_remaining_time_ms", scope: !95, file: !95, line: 605, type: !5071, scopeLine: 606, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !5073)
!5071 = !DISubroutineType(types: !5072)
!5072 = !{!4544, !61, !1716}
!5073 = !{!5074, !5075, !5076, !5077, !5078}
!5074 = !DILocalVariable(name: "handle", arg: 1, scope: !5070, file: !95, line: 605, type: !61)
!5075 = !DILocalVariable(name: "remaing_time", arg: 2, scope: !5070, file: !95, line: 605, type: !1716)
!5076 = !DILocalVariable(name: "current_time", scope: !5070, file: !95, line: 607, type: !61)
!5077 = !DILocalVariable(name: "mask", scope: !5070, file: !95, line: 608, type: !61)
!5078 = !DILocalVariable(name: "timer", scope: !5070, file: !95, line: 609, type: !61)
!5079 = !DILocation(line: 0, scope: !5070)
!5080 = !DILocation(line: 611, column: 17, scope: !5081)
!5081 = distinct !DILexicalBlock(scope: !5070, file: !95, line: 611, column: 9)
!5082 = !DILocation(line: 611, column: 37, scope: !5081)
!5083 = !DILocation(line: 611, column: 9, scope: !5070)
!5084 = !DILocation(line: 615, column: 20, scope: !5070)
!5085 = !DILocation(line: 617, column: 37, scope: !5086)
!5086 = distinct !DILexicalBlock(scope: !5070, file: !95, line: 617, column: 9)
!5087 = !DILocation(line: 617, column: 45, scope: !5086)
!5088 = !DILocation(line: 617, column: 9, scope: !5070)
!5089 = !DILocation(line: 622, column: 12, scope: !5070)
!5090 = !DILocation(line: 624, column: 35, scope: !5070)
!5091 = !DILocation(line: 624, column: 51, scope: !5070)
!5092 = !DILocation(line: 624, column: 76, scope: !5070)
!5093 = !DILocation(line: 624, column: 49, scope: !5070)
!5094 = !DILocation(line: 626, column: 37, scope: !5095)
!5095 = distinct !DILexicalBlock(scope: !5070, file: !95, line: 626, column: 9)
!5096 = !DILocation(line: 626, column: 9, scope: !5070)
!5097 = !DILocation(line: 0, scope: !5095)
!5098 = !DILocation(line: 632, column: 5, scope: !5070)
!5099 = !DILocation(line: 634, column: 5, scope: !5070)
!5100 = !DILocation(line: 636, column: 1, scope: !5070)
!5101 = distinct !DISubprogram(name: "gpt_calibrate_algorithm", scope: !171, file: !171, line: 56, type: !5102, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !170, retainedNodes: !5104)
!5102 = !DISubroutineType(types: !5103)
!5103 = !{!61, !61, !61, !61}
!5104 = !{!5105, !5106, !5107, !5108, !5109, !5110}
!5105 = !DILocalVariable(name: "mul1", arg: 1, scope: !5101, file: !171, line: 56, type: !61)
!5106 = !DILocalVariable(name: "mul2", arg: 2, scope: !5101, file: !171, line: 56, type: !61)
!5107 = !DILocalVariable(name: "div", arg: 3, scope: !5101, file: !171, line: 56, type: !61)
!5108 = !DILocalVariable(name: "data1", scope: !5101, file: !171, line: 58, type: !2211)
!5109 = !DILocalVariable(name: "data2", scope: !5101, file: !171, line: 59, type: !2211)
!5110 = !DILocalVariable(name: "result", scope: !5101, file: !171, line: 60, type: !2211)
!5111 = !DILocation(line: 0, scope: !5101)
!5112 = !DILocation(line: 63, column: 22, scope: !5101)
!5113 = !DILocation(line: 63, column: 32, scope: !5101)
!5114 = !DILocation(line: 64, column: 23, scope: !5101)
!5115 = !DILocation(line: 64, column: 40, scope: !5101)
!5116 = !DILocation(line: 66, column: 27, scope: !5101)
!5117 = !DILocation(line: 67, column: 27, scope: !5101)
!5118 = !DILocation(line: 67, column: 44, scope: !5101)
!5119 = !DILocation(line: 69, column: 26, scope: !5101)
!5120 = !DILocation(line: 70, column: 36, scope: !5101)
!5121 = !DILocation(line: 70, column: 43, scope: !5101)
!5122 = !DILocation(line: 70, column: 55, scope: !5101)
!5123 = !DILocation(line: 72, column: 34, scope: !5101)
!5124 = !DILocation(line: 72, column: 41, scope: !5101)
!5125 = !DILocation(line: 72, column: 5, scope: !5101)
!5126 = distinct !DISubprogram(name: "gpt_current_count", scope: !171, file: !171, line: 75, type: !5127, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !170, retainedNodes: !5129)
!5127 = !DISubroutineType(types: !5128)
!5128 = !{!61, !316}
!5129 = !{!5130}
!5130 = !DILocalVariable(name: "gpt", arg: 1, scope: !5126, file: !171, line: 75, type: !316)
!5131 = !DILocation(line: 0, scope: !5126)
!5132 = !DILocation(line: 77, column: 17, scope: !5126)
!5133 = !DILocation(line: 77, column: 5, scope: !5126)
!5134 = distinct !DISubprogram(name: "gpt_convert_ms_to_32k_count", scope: !171, file: !171, line: 81, type: !5135, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !170, retainedNodes: !5137)
!5135 = !DISubroutineType(types: !5136)
!5136 = !{!61, !61}
!5137 = !{!5138}
!5138 = !DILocalVariable(name: "ms", arg: 1, scope: !5134, file: !171, line: 81, type: !61)
!5139 = !DILocation(line: 0, scope: !5134)
!5140 = !DILocation(line: 83, column: 27, scope: !5134)
!5141 = !DILocation(line: 83, column: 37, scope: !5134)
!5142 = !DILocation(line: 83, column: 43, scope: !5134)
!5143 = !DILocation(line: 83, column: 32, scope: !5134)
!5144 = !DILocation(line: 83, column: 53, scope: !5134)
!5145 = !DILocation(line: 83, column: 59, scope: !5134)
!5146 = !DILocation(line: 83, column: 48, scope: !5134)
!5147 = !DILocation(line: 83, column: 70, scope: !5134)
!5148 = !DILocation(line: 83, column: 76, scope: !5134)
!5149 = !DILocation(line: 83, column: 65, scope: !5134)
!5150 = !DILocation(line: 83, column: 5, scope: !5134)
!5151 = !DILocation(line: 90, column: 9, scope: !5152)
!5152 = distinct !DILexicalBlock(scope: !342, file: !171, line: 90, column: 9)
!5153 = !DILocation(line: 90, column: 9, scope: !342)
!5154 = !DILocation(line: 91, column: 13, scope: !5155)
!5155 = distinct !DILexicalBlock(scope: !5156, file: !171, line: 91, column: 13)
!5156 = distinct !DILexicalBlock(scope: !5152, file: !171, line: 90, column: 24)
!5157 = !DILocation(line: 91, column: 13, scope: !5156)
!5158 = !DILocation(line: 92, column: 32, scope: !5159)
!5159 = distinct !DILexicalBlock(scope: !5155, file: !171, line: 91, column: 41)
!5160 = !DILocation(line: 92, column: 30, scope: !5159)
!5161 = !DILocation(line: 93, column: 41, scope: !5162)
!5162 = distinct !DILexicalBlock(scope: !5159, file: !171, line: 93, column: 17)
!5163 = !DILocation(line: 0, scope: !5155)
!5164 = !DILocation(line: 105, column: 1, scope: !342)
!5165 = distinct !DISubprogram(name: "gpt_open_clock_source", scope: !171, file: !171, line: 107, type: !343, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !170, retainedNodes: !345)
!5166 = !DILocation(line: 109, column: 9, scope: !5167)
!5167 = distinct !DILexicalBlock(scope: !5165, file: !171, line: 109, column: 9)
!5168 = !DILocation(line: 109, column: 9, scope: !5165)
!5169 = !DILocation(line: 110, column: 9, scope: !5170)
!5170 = distinct !DILexicalBlock(scope: !5167, file: !171, line: 109, column: 61)
!5171 = !DILocation(line: 111, column: 5, scope: !5170)
!5172 = !DILocation(line: 112, column: 1, scope: !5165)
!5173 = distinct !DISubprogram(name: "gpt_clock_calibrate_us_to_count", scope: !171, file: !171, line: 114, type: !5135, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !170, retainedNodes: !5174)
!5174 = !{!5175}
!5175 = !DILocalVariable(name: "time_us", arg: 1, scope: !5173, file: !171, line: 114, type: !61)
!5176 = !DILocation(line: 0, scope: !5173)
!5177 = !DILocation(line: 116, column: 5, scope: !5173)
!5178 = !DILocation(line: 118, column: 9, scope: !5179)
!5179 = distinct !DILexicalBlock(scope: !5173, file: !171, line: 118, column: 9)
!5180 = !DILocation(line: 118, column: 9, scope: !5173)
!5181 = !DILocation(line: 120, column: 49, scope: !5182)
!5182 = distinct !DILexicalBlock(scope: !5179, file: !171, line: 118, column: 37)
!5183 = !DILocation(line: 120, column: 16, scope: !5182)
!5184 = !DILocation(line: 120, column: 9, scope: !5182)
!5185 = !DILocation(line: 0, scope: !5179)
!5186 = !DILocation(line: 125, column: 1, scope: !5173)
!5187 = distinct !DISubprogram(name: "gpt_clock_calibrate_count_to_us", scope: !171, file: !171, line: 127, type: !5135, scopeLine: 128, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !170, retainedNodes: !5188)
!5188 = !{!5189}
!5189 = !DILocalVariable(name: "count", arg: 1, scope: !5187, file: !171, line: 127, type: !61)
!5190 = !DILocation(line: 0, scope: !5187)
!5191 = !DILocation(line: 129, column: 5, scope: !5187)
!5192 = !DILocation(line: 131, column: 9, scope: !5193)
!5193 = distinct !DILexicalBlock(scope: !5187, file: !171, line: 131, column: 9)
!5194 = !DILocation(line: 131, column: 9, scope: !5187)
!5195 = !DILocation(line: 133, column: 69, scope: !5196)
!5196 = distinct !DILexicalBlock(scope: !5193, file: !171, line: 131, column: 37)
!5197 = !DILocation(line: 133, column: 16, scope: !5196)
!5198 = !DILocation(line: 133, column: 9, scope: !5196)
!5199 = !DILocation(line: 0, scope: !5193)
!5200 = !DILocation(line: 138, column: 1, scope: !5187)
!5201 = distinct !DISubprogram(name: "gpt_start_free_run_timer", scope: !171, file: !171, line: 141, type: !5202, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !170, retainedNodes: !5204)
!5202 = !DISubroutineType(types: !5203)
!5203 = !{null, !316, !61, !61}
!5204 = !{!5205, !5206, !5207}
!5205 = !DILocalVariable(name: "gpt", arg: 1, scope: !5201, file: !171, line: 141, type: !316)
!5206 = !DILocalVariable(name: "clock_source", arg: 2, scope: !5201, file: !171, line: 141, type: !61)
!5207 = !DILocalVariable(name: "divide", arg: 3, scope: !5201, file: !171, line: 141, type: !61)
!5208 = !DILocation(line: 0, scope: !5201)
!5209 = !DILocation(line: 143, column: 5, scope: !5201)
!5210 = !DILocation(line: 145, column: 33, scope: !5201)
!5211 = !DILocation(line: 145, column: 10, scope: !5201)
!5212 = !DILocation(line: 145, column: 18, scope: !5201)
!5213 = !DILocation(line: 148, column: 10, scope: !5201)
!5214 = !DILocation(line: 148, column: 18, scope: !5201)
!5215 = !DILocation(line: 149, column: 1, scope: !5201)
!5216 = distinct !DISubprogram(name: "gpt_delay_time", scope: !171, file: !171, line: 151, type: !5217, scopeLine: 152, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !170, retainedNodes: !5219)
!5217 = !DISubroutineType(types: !5218)
!5218 = !{null, !316, !1065}
!5219 = !{!5220, !5221, !5222, !5223}
!5220 = !DILocalVariable(name: "gpt", arg: 1, scope: !5216, file: !171, line: 151, type: !316)
!5221 = !DILocalVariable(name: "count", arg: 2, scope: !5216, file: !171, line: 151, type: !1065)
!5222 = !DILocalVariable(name: "end_count", scope: !5216, file: !171, line: 153, type: !61)
!5223 = !DILocalVariable(name: "current", scope: !5216, file: !171, line: 153, type: !61)
!5224 = !DILocation(line: 0, scope: !5216)
!5225 = !DILocation(line: 155, column: 17, scope: !5216)
!5226 = !DILocation(line: 156, column: 25, scope: !5216)
!5227 = !DILocation(line: 156, column: 33, scope: !5216)
!5228 = !DILocation(line: 159, column: 19, scope: !5229)
!5229 = distinct !DILexicalBlock(scope: !5216, file: !171, line: 159, column: 9)
!5230 = !DILocation(line: 159, column: 9, scope: !5216)
!5231 = !DILocation(line: 160, column: 16, scope: !5232)
!5232 = distinct !DILexicalBlock(scope: !5229, file: !171, line: 159, column: 30)
!5233 = !DILocation(line: 160, column: 39, scope: !5232)
!5234 = !DILocation(line: 160, column: 9, scope: !5232)
!5235 = distinct !{!5235, !5234, !5236}
!5236 = !DILocation(line: 160, column: 51, scope: !5232)
!5237 = !DILocation(line: 162, column: 16, scope: !5238)
!5238 = distinct !DILexicalBlock(scope: !5229, file: !171, line: 161, column: 12)
!5239 = !DILocation(line: 162, column: 39, scope: !5238)
!5240 = !DILocation(line: 162, column: 9, scope: !5238)
!5241 = distinct !{!5241, !5240, !5242}
!5242 = !DILocation(line: 162, column: 50, scope: !5238)
!5243 = !DILocation(line: 163, column: 16, scope: !5238)
!5244 = !DILocation(line: 163, column: 39, scope: !5238)
!5245 = !DILocation(line: 163, column: 9, scope: !5238)
!5246 = distinct !{!5246, !5245, !5247}
!5247 = !DILocation(line: 163, column: 51, scope: !5238)
!5248 = !DILocation(line: 165, column: 1, scope: !5216)
!5249 = distinct !DISubprogram(name: "gpt_reset_default_timer", scope: !171, file: !171, line: 166, type: !5250, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !170, retainedNodes: !5252)
!5250 = !DISubroutineType(types: !5251)
!5251 = !{null, !316}
!5252 = !{!5253}
!5253 = !DILocalVariable(name: "gpt", arg: 1, scope: !5249, file: !171, line: 166, type: !316)
!5254 = !DILocation(line: 0, scope: !5249)
!5255 = !DILocation(line: 168, column: 10, scope: !5249)
!5256 = !DILocation(line: 168, column: 22, scope: !5249)
!5257 = !DILocation(line: 169, column: 10, scope: !5249)
!5258 = !DILocation(line: 169, column: 22, scope: !5249)
!5259 = !DILocation(line: 170, column: 21, scope: !5249)
!5260 = !DILocation(line: 171, column: 5, scope: !5249)
!5261 = !DILocation(line: 171, column: 16, scope: !5249)
!5262 = distinct !{!5262, !5260, !5263}
!5263 = !DILocation(line: 171, column: 26, scope: !5249)
!5264 = !DILocation(line: 172, column: 10, scope: !5249)
!5265 = !DILocation(line: 172, column: 22, scope: !5249)
!5266 = !DILocation(line: 173, column: 10, scope: !5249)
!5267 = !DILocation(line: 173, column: 22, scope: !5249)
!5268 = !DILocation(line: 174, column: 10, scope: !5249)
!5269 = !DILocation(line: 174, column: 22, scope: !5249)
!5270 = !DILocation(line: 176, column: 13, scope: !5271)
!5271 = distinct !DILexicalBlock(scope: !5249, file: !171, line: 176, column: 9)
!5272 = !DILocation(line: 176, column: 9, scope: !5249)
!5273 = !DILocation(line: 177, column: 27, scope: !5274)
!5274 = distinct !DILexicalBlock(scope: !5271, file: !171, line: 176, column: 22)
!5275 = !DILocation(line: 178, column: 5, scope: !5274)
!5276 = !DILocation(line: 179, column: 1, scope: !5249)
!5277 = distinct !DISubprogram(name: "gpt_save_and_mask_interrupt", scope: !171, file: !171, line: 181, type: !5127, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !170, retainedNodes: !5278)
!5278 = !{!5279, !5280}
!5279 = !DILocalVariable(name: "gpt", arg: 1, scope: !5277, file: !171, line: 181, type: !316)
!5280 = !DILocalVariable(name: "mask", scope: !5277, file: !171, line: 183, type: !60)
!5281 = !DILocation(line: 0, scope: !5277)
!5282 = !DILocation(line: 183, column: 5, scope: !5277)
!5283 = !DILocation(line: 183, column: 23, scope: !5277)
!5284 = !DILocation(line: 185, column: 17, scope: !5277)
!5285 = !DILocation(line: 185, column: 10, scope: !5277)
!5286 = !DILocation(line: 187, column: 22, scope: !5277)
!5287 = !DILocation(line: 189, column: 12, scope: !5277)
!5288 = !DILocation(line: 190, column: 1, scope: !5277)
!5289 = !DILocation(line: 189, column: 5, scope: !5277)
!5290 = distinct !DISubprogram(name: "gpt_restore_interrupt", scope: !171, file: !171, line: 192, type: !5291, scopeLine: 193, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !170, retainedNodes: !5293)
!5291 = !DISubroutineType(types: !5292)
!5292 = !{null, !316, !61}
!5293 = !{!5294, !5295}
!5294 = !DILocalVariable(name: "gpt", arg: 1, scope: !5290, file: !171, line: 192, type: !316)
!5295 = !DILocalVariable(name: "mask", arg: 2, scope: !5290, file: !171, line: 192, type: !61)
!5296 = !DILocation(line: 0, scope: !5290)
!5297 = !DILocation(line: 194, column: 10, scope: !5290)
!5298 = !DILocation(line: 194, column: 21, scope: !5290)
!5299 = !DILocation(line: 195, column: 1, scope: !5290)
!5300 = distinct !DISubprogram(name: "gpt_interrupt_handler", scope: !171, file: !171, line: 197, type: !568, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !170, retainedNodes: !5301)
!5301 = !{!5302, !5303, !5304, !5305, !5306}
!5302 = !DILocalVariable(name: "irq_number", arg: 1, scope: !5300, file: !171, line: 197, type: !570)
!5303 = !DILocalVariable(name: "i", scope: !5300, file: !171, line: 199, type: !61)
!5304 = !DILocalVariable(name: "mask", scope: !5300, file: !171, line: 200, type: !60)
!5305 = !DILocalVariable(name: "state", scope: !5300, file: !171, line: 201, type: !60)
!5306 = !DILocalVariable(name: "enable", scope: !5300, file: !171, line: 202, type: !60)
!5307 = !DILocation(line: 0, scope: !5300)
!5308 = !DILocation(line: 200, column: 5, scope: !5300)
!5309 = !DILocation(line: 200, column: 23, scope: !5300)
!5310 = !DILocation(line: 201, column: 5, scope: !5300)
!5311 = !DILocation(line: 201, column: 23, scope: !5300)
!5312 = !DILocation(line: 202, column: 5, scope: !5300)
!5313 = !DILocation(line: 202, column: 23, scope: !5300)
!5314 = !DILocation(line: 207, column: 5, scope: !5315)
!5315 = distinct !DILexicalBlock(scope: !5300, file: !171, line: 207, column: 5)
!5316 = !DILocation(line: 209, column: 18, scope: !5317)
!5317 = distinct !DILexicalBlock(scope: !5318, file: !171, line: 207, column: 44)
!5318 = distinct !DILexicalBlock(scope: !5315, file: !171, line: 207, column: 5)
!5319 = !DILocation(line: 209, column: 29, scope: !5317)
!5320 = !DILocation(line: 209, column: 16, scope: !5317)
!5321 = !DILocation(line: 210, column: 29, scope: !5317)
!5322 = !DILocation(line: 210, column: 16, scope: !5317)
!5323 = !DILocation(line: 212, column: 16, scope: !5317)
!5324 = !DILocation(line: 212, column: 14, scope: !5317)
!5325 = !DILocation(line: 214, column: 9, scope: !5317)
!5326 = !DILocation(line: 214, column: 20, scope: !5317)
!5327 = !DILocation(line: 214, column: 32, scope: !5317)
!5328 = !DILocation(line: 216, column: 14, scope: !5329)
!5329 = distinct !DILexicalBlock(scope: !5317, file: !171, line: 216, column: 13)
!5330 = !DILocation(line: 216, column: 20, scope: !5329)
!5331 = !DILocation(line: 216, column: 40, scope: !5329)
!5332 = !DILocation(line: 216, column: 44, scope: !5329)
!5333 = !DILocation(line: 216, column: 51, scope: !5329)
!5334 = !DILocation(line: 216, column: 13, scope: !5317)
!5335 = !DILocation(line: 224, column: 51, scope: !5336)
!5336 = distinct !DILexicalBlock(scope: !5337, file: !171, line: 224, column: 17)
!5337 = distinct !DILexicalBlock(scope: !5329, file: !171, line: 216, column: 70)
!5338 = !DILocation(line: 224, column: 60, scope: !5336)
!5339 = !DILocation(line: 224, column: 17, scope: !5337)
!5340 = !DILocation(line: 225, column: 94, scope: !5341)
!5341 = distinct !DILexicalBlock(scope: !5336, file: !171, line: 224, column: 69)
!5342 = !DILocation(line: 225, column: 17, scope: !5341)
!5343 = !DILocation(line: 226, column: 13, scope: !5341)
!5344 = !DILocation(line: 229, column: 31, scope: !5317)
!5345 = !DILocation(line: 229, column: 42, scope: !5317)
!5346 = !DILocation(line: 229, column: 9, scope: !5317)
!5347 = !DILocation(line: 207, column: 40, scope: !5318)
!5348 = !DILocation(line: 207, column: 19, scope: !5318)
!5349 = distinct !{!5349, !5314, !5350}
!5350 = !DILocation(line: 231, column: 5, scope: !5315)
!5351 = !DILocation(line: 233, column: 1, scope: !5300)
!5352 = distinct !DISubprogram(name: "gpt_nvic_register", scope: !171, file: !171, line: 236, type: !343, scopeLine: 237, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !170, retainedNodes: !345)
!5353 = !DILocation(line: 238, column: 5, scope: !5352)
!5354 = !DILocation(line: 239, column: 5, scope: !5352)
!5355 = !DILocation(line: 240, column: 5, scope: !5352)
!5356 = !DILocation(line: 241, column: 1, scope: !5352)
!5357 = distinct !DISubprogram(name: "gpt_sw_get_current_time_ms", scope: !171, file: !171, line: 242, type: !5127, scopeLine: 243, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !170, retainedNodes: !5358)
!5358 = !{!5359, !5360, !5361, !5362, !5363}
!5359 = !DILocalVariable(name: "gpt", arg: 1, scope: !5357, file: !171, line: 242, type: !316)
!5360 = !DILocalVariable(name: "time", scope: !5357, file: !171, line: 244, type: !60)
!5361 = !DILocalVariable(name: "count", scope: !5357, file: !171, line: 245, type: !61)
!5362 = !DILocalVariable(name: "time_s", scope: !5357, file: !171, line: 245, type: !61)
!5363 = !DILocalVariable(name: "time_ms", scope: !5357, file: !171, line: 245, type: !61)
!5364 = !DILocation(line: 0, scope: !5357)
!5365 = !DILocation(line: 244, column: 5, scope: !5357)
!5366 = !DILocation(line: 244, column: 23, scope: !5357)
!5367 = !DILocation(line: 247, column: 13, scope: !5357)
!5368 = !DILocation(line: 248, column: 20, scope: !5357)
!5369 = !DILocation(line: 249, column: 23, scope: !5357)
!5370 = !DILocation(line: 249, column: 32, scope: !5357)
!5371 = !DILocation(line: 249, column: 39, scope: !5357)
!5372 = !DILocation(line: 249, column: 48, scope: !5357)
!5373 = !DILocation(line: 250, column: 19, scope: !5357)
!5374 = !DILocation(line: 250, column: 26, scope: !5357)
!5375 = !DILocation(line: 250, column: 10, scope: !5357)
!5376 = !DILocation(line: 253, column: 5, scope: !5357)
!5377 = !DILocation(line: 253, column: 30, scope: !5357)
!5378 = !DILocation(line: 253, column: 38, scope: !5357)
!5379 = !DILocation(line: 254, column: 5, scope: !5357)
!5380 = !DILocation(line: 254, column: 36, scope: !5357)
!5381 = distinct !{!5381, !5379, !5382}
!5382 = !DILocation(line: 254, column: 46, scope: !5357)
!5383 = !DILocation(line: 255, column: 12, scope: !5357)
!5384 = !DILocation(line: 256, column: 1, scope: !5357)
!5385 = !DILocation(line: 255, column: 5, scope: !5357)
!5386 = distinct !DISubprogram(name: "gpt_sw_get_free_timer", scope: !171, file: !171, line: 258, type: !5387, scopeLine: 259, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !170, retainedNodes: !5389)
!5387 = !DISubroutineType(types: !5388)
!5388 = !{!61}
!5389 = !{!5390}
!5390 = !DILocalVariable(name: "i", scope: !5386, file: !171, line: 260, type: !61)
!5391 = !DILocation(line: 0, scope: !5386)
!5392 = !DILocation(line: 262, column: 5, scope: !5393)
!5393 = distinct !DILexicalBlock(scope: !5386, file: !171, line: 262, column: 5)
!5394 = !DILocation(line: 263, column: 37, scope: !5395)
!5395 = distinct !DILexicalBlock(scope: !5396, file: !171, line: 263, column: 13)
!5396 = distinct !DILexicalBlock(scope: !5397, file: !171, line: 262, column: 45)
!5397 = distinct !DILexicalBlock(scope: !5393, file: !171, line: 262, column: 5)
!5398 = !DILocation(line: 263, column: 45, scope: !5395)
!5399 = !DILocation(line: 263, column: 13, scope: !5396)
!5400 = !DILocation(line: 262, column: 41, scope: !5397)
!5401 = !DILocation(line: 262, column: 19, scope: !5397)
!5402 = distinct !{!5402, !5392, !5403}
!5403 = !DILocation(line: 266, column: 5, scope: !5393)
!5404 = !DILocation(line: 269, column: 1, scope: !5386)
!5405 = distinct !DISubprogram(name: "gpt_sw_start_timer", scope: !171, file: !171, line: 271, type: !343, scopeLine: 272, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !170, retainedNodes: !5406)
!5406 = !{!5407, !5408}
!5407 = !DILocalVariable(name: "minimum_time", scope: !5405, file: !171, line: 273, type: !61)
!5408 = !DILocalVariable(name: "current_timer", scope: !5405, file: !171, line: 273, type: !61)
!5409 = !DILocation(line: 273, column: 5, scope: !5405)
!5410 = !DILocation(line: 275, column: 24, scope: !5411)
!5411 = distinct !DILexicalBlock(scope: !5405, file: !171, line: 275, column: 9)
!5412 = !DILocation(line: 275, column: 9, scope: !5405)
!5413 = !DILocation(line: 0, scope: !5405)
!5414 = !DILocation(line: 279, column: 5, scope: !5405)
!5415 = !DILocation(line: 282, column: 56, scope: !5405)
!5416 = !DILocation(line: 282, column: 39, scope: !5405)
!5417 = !DILocation(line: 284, column: 30, scope: !5405)
!5418 = !DILocation(line: 285, column: 45, scope: !5405)
!5419 = !DILocation(line: 285, column: 5, scope: !5405)
!5420 = !DILocation(line: 286, column: 30, scope: !5405)
!5421 = !DILocation(line: 287, column: 1, scope: !5405)
!5422 = distinct !DISubprogram(name: "gpt_sw_get_minimum_left_time_ms", scope: !171, file: !171, line: 308, type: !5423, scopeLine: 309, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !170, retainedNodes: !5425)
!5423 = !DISubroutineType(types: !5424)
!5424 = !{null, !1716, !1716}
!5425 = !{!5426, !5427, !5428, !5429, !5430}
!5426 = !DILocalVariable(name: "minimum_time", arg: 1, scope: !5422, file: !171, line: 308, type: !1716)
!5427 = !DILocalVariable(name: "number", arg: 2, scope: !5422, file: !171, line: 308, type: !1716)
!5428 = !DILocalVariable(name: "i", scope: !5422, file: !171, line: 310, type: !61)
!5429 = !DILocalVariable(name: "minimum", scope: !5422, file: !171, line: 311, type: !61)
!5430 = !DILocalVariable(name: "data", scope: !5422, file: !171, line: 312, type: !61)
!5431 = !DILocation(line: 0, scope: !5422)
!5432 = !DILocation(line: 314, column: 5, scope: !5433)
!5433 = distinct !DILexicalBlock(scope: !5422, file: !171, line: 314, column: 5)
!5434 = !DILocation(line: 315, column: 37, scope: !5435)
!5435 = distinct !DILexicalBlock(scope: !5436, file: !171, line: 315, column: 13)
!5436 = distinct !DILexicalBlock(scope: !5437, file: !171, line: 314, column: 45)
!5437 = distinct !DILexicalBlock(scope: !5433, file: !171, line: 314, column: 5)
!5438 = !DILocation(line: 315, column: 13, scope: !5436)
!5439 = !DILocation(line: 316, column: 20, scope: !5440)
!5440 = distinct !DILexicalBlock(scope: !5435, file: !171, line: 315, column: 57)
!5441 = !DILocation(line: 318, column: 22, scope: !5442)
!5442 = distinct !DILexicalBlock(scope: !5440, file: !171, line: 318, column: 17)
!5443 = !DILocation(line: 318, column: 17, scope: !5440)
!5444 = !DILocation(line: 320, column: 25, scope: !5445)
!5445 = distinct !DILexicalBlock(scope: !5442, file: !171, line: 318, column: 33)
!5446 = !DILocation(line: 321, column: 13, scope: !5445)
!5447 = !DILocation(line: 314, column: 41, scope: !5437)
!5448 = !DILocation(line: 314, column: 19, scope: !5437)
!5449 = distinct !{!5449, !5432, !5450}
!5450 = !DILocation(line: 323, column: 5, scope: !5433)
!5451 = !DILocation(line: 325, column: 19, scope: !5422)
!5452 = !DILocation(line: 326, column: 1, scope: !5422)
!5453 = distinct !DISubprogram(name: "gpt_sw_absolute_value", scope: !171, file: !171, line: 289, type: !5135, scopeLine: 290, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !170, retainedNodes: !5454)
!5454 = !{!5455, !5456, !5457, !5458}
!5455 = !DILocalVariable(name: "timer_number", arg: 1, scope: !5453, file: !171, line: 289, type: !61)
!5456 = !DILocalVariable(name: "time_out_delta", scope: !5453, file: !171, line: 291, type: !61)
!5457 = !DILocalVariable(name: "current_delta", scope: !5453, file: !171, line: 292, type: !61)
!5458 = !DILocalVariable(name: "ret_value", scope: !5453, file: !171, line: 293, type: !61)
!5459 = !DILocation(line: 0, scope: !5453)
!5460 = !DILocation(line: 295, column: 22, scope: !5453)
!5461 = !DILocation(line: 296, column: 22, scope: !5453)
!5462 = !DILocation(line: 298, column: 24, scope: !5463)
!5463 = distinct !DILexicalBlock(scope: !5453, file: !171, line: 298, column: 9)
!5464 = !DILocation(line: 298, column: 9, scope: !5453)
!5465 = !DILocation(line: 306, column: 5, scope: !5453)
!5466 = distinct !DISubprogram(name: "gpt_sw_handler", scope: !171, file: !171, line: 329, type: !153, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !170, retainedNodes: !5467)
!5467 = !{!5468, !5469, !5470, !5471}
!5468 = !DILocalVariable(name: "parameter", arg: 1, scope: !5466, file: !171, line: 329, type: !88)
!5469 = !DILocalVariable(name: "i", scope: !5466, file: !171, line: 331, type: !61)
!5470 = !DILocalVariable(name: "time_ms", scope: !5466, file: !171, line: 332, type: !60)
!5471 = !DILocalVariable(name: "data", scope: !5466, file: !171, line: 333, type: !60)
!5472 = !DILocation(line: 0, scope: !5466)
!5473 = !DILocation(line: 332, column: 5, scope: !5466)
!5474 = !DILocation(line: 332, column: 23, scope: !5466)
!5475 = !DILocation(line: 333, column: 5, scope: !5466)
!5476 = !DILocation(line: 333, column: 23, scope: !5466)
!5477 = !DILocation(line: 336, column: 24, scope: !5478)
!5478 = distinct !DILexicalBlock(scope: !5466, file: !171, line: 336, column: 9)
!5479 = !DILocation(line: 336, column: 41, scope: !5478)
!5480 = !DILocation(line: 336, column: 9, scope: !5466)
!5481 = !DILocation(line: 338, column: 34, scope: !5482)
!5482 = distinct !DILexicalBlock(scope: !5478, file: !171, line: 336, column: 47)
!5483 = !DILocation(line: 339, column: 9, scope: !5482)
!5484 = !DILocation(line: 340, column: 34, scope: !5482)
!5485 = !DILocation(line: 342, column: 46, scope: !5482)
!5486 = !DILocation(line: 342, column: 19, scope: !5482)
!5487 = !DILocation(line: 342, column: 17, scope: !5482)
!5488 = !DILocation(line: 344, column: 41, scope: !5482)
!5489 = !DILocation(line: 344, column: 38, scope: !5482)
!5490 = !DILocation(line: 345, column: 42, scope: !5482)
!5491 = !DILocation(line: 347, column: 9, scope: !5492)
!5492 = distinct !DILexicalBlock(scope: !5482, file: !171, line: 347, column: 9)
!5493 = !DILocation(line: 348, column: 41, scope: !5494)
!5494 = distinct !DILexicalBlock(scope: !5495, file: !171, line: 348, column: 17)
!5495 = distinct !DILexicalBlock(scope: !5496, file: !171, line: 347, column: 49)
!5496 = distinct !DILexicalBlock(scope: !5492, file: !171, line: 347, column: 9)
!5497 = !DILocation(line: 348, column: 17, scope: !5495)
!5498 = !DILocation(line: 350, column: 24, scope: !5499)
!5499 = distinct !DILexicalBlock(scope: !5494, file: !171, line: 348, column: 61)
!5500 = !DILocation(line: 350, column: 22, scope: !5499)
!5501 = !DILocation(line: 352, column: 21, scope: !5502)
!5502 = distinct !DILexicalBlock(scope: !5499, file: !171, line: 352, column: 21)
!5503 = !DILocation(line: 352, column: 26, scope: !5502)
!5504 = !DILocation(line: 352, column: 21, scope: !5499)
!5505 = !DILocation(line: 353, column: 56, scope: !5506)
!5506 = distinct !DILexicalBlock(scope: !5502, file: !171, line: 352, column: 32)
!5507 = !DILocation(line: 354, column: 55, scope: !5506)
!5508 = !DILocation(line: 356, column: 62, scope: !5506)
!5509 = !DILocation(line: 356, column: 112, scope: !5506)
!5510 = !DILocation(line: 356, column: 21, scope: !5506)
!5511 = !DILocation(line: 357, column: 17, scope: !5506)
!5512 = !DILocation(line: 347, column: 45, scope: !5496)
!5513 = !DILocation(line: 347, column: 23, scope: !5496)
!5514 = distinct !{!5514, !5491, !5515}
!5515 = !DILocation(line: 360, column: 9, scope: !5492)
!5516 = !DILocation(line: 362, column: 42, scope: !5482)
!5517 = !DILocation(line: 364, column: 28, scope: !5518)
!5518 = distinct !DILexicalBlock(scope: !5482, file: !171, line: 364, column: 13)
!5519 = !DILocation(line: 364, column: 48, scope: !5518)
!5520 = !DILocation(line: 364, column: 13, scope: !5482)
!5521 = !DILocation(line: 365, column: 13, scope: !5522)
!5522 = distinct !DILexicalBlock(scope: !5518, file: !171, line: 364, column: 54)
!5523 = !DILocation(line: 366, column: 9, scope: !5522)
!5524 = !DILocation(line: 369, column: 1, scope: !5466)
!5525 = distinct !DISubprogram(name: "gdma_reset", scope: !392, file: !392, line: 138, type: !5526, scopeLine: 140, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !391, retainedNodes: !5528)
!5526 = !DISubroutineType(types: !5527)
!5527 = !{null, !61}
!5528 = !{!5529}
!5529 = !DILocalVariable(name: "index", arg: 1, scope: !5525, file: !392, line: 138, type: !61)
!5530 = !DILocation(line: 0, scope: !5525)
!5531 = !DILocation(line: 142, column: 5, scope: !5525)
!5532 = !DILocation(line: 142, column: 18, scope: !5525)
!5533 = !DILocation(line: 142, column: 27, scope: !5525)
!5534 = !DILocation(line: 143, column: 5, scope: !5525)
!5535 = !DILocation(line: 143, column: 18, scope: !5525)
!5536 = !DILocation(line: 143, column: 29, scope: !5525)
!5537 = !DILocation(line: 144, column: 5, scope: !5525)
!5538 = !DILocation(line: 144, column: 18, scope: !5525)
!5539 = !DILocation(line: 144, column: 30, scope: !5525)
!5540 = !DILocation(line: 145, column: 5, scope: !5525)
!5541 = !DILocation(line: 145, column: 18, scope: !5525)
!5542 = !DILocation(line: 145, column: 27, scope: !5525)
!5543 = !DILocation(line: 146, column: 5, scope: !5525)
!5544 = !DILocation(line: 146, column: 18, scope: !5525)
!5545 = !DILocation(line: 146, column: 27, scope: !5525)
!5546 = !DILocation(line: 147, column: 5, scope: !5525)
!5547 = !DILocation(line: 147, column: 18, scope: !5525)
!5548 = !DILocation(line: 147, column: 30, scope: !5525)
!5549 = !DILocation(line: 149, column: 1, scope: !5525)
!5550 = distinct !DISubprogram(name: "gdma_get_global_status", scope: !392, file: !392, line: 151, type: !5135, scopeLine: 152, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !391, retainedNodes: !5551)
!5551 = !{!5552, !5553}
!5552 = !DILocalVariable(name: "index", arg: 1, scope: !5550, file: !392, line: 151, type: !61)
!5553 = !DILocalVariable(name: "global_status", scope: !5550, file: !392, line: 154, type: !61)
!5554 = !DILocation(line: 0, scope: !5550)
!5555 = !DILocation(line: 157, column: 21, scope: !5550)
!5556 = !DILocation(line: 157, column: 41, scope: !5550)
!5557 = !DILocation(line: 159, column: 5, scope: !5550)
!5558 = distinct !DISubprogram(name: "gdma_register_callback", scope: !392, file: !392, line: 163, type: !5559, scopeLine: 165, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !391, retainedNodes: !5561)
!5559 = !DISubroutineType(types: !5560)
!5560 = !{null, !61, !559, !88}
!5561 = !{!5562, !5563, !5564}
!5562 = !DILocalVariable(name: "index", arg: 1, scope: !5558, file: !392, line: 163, type: !61)
!5563 = !DILocalVariable(name: "callback", arg: 2, scope: !5558, file: !392, line: 163, type: !559)
!5564 = !DILocalVariable(name: "user_data", arg: 3, scope: !5558, file: !392, line: 163, type: !88)
!5565 = !DILocation(line: 0, scope: !5558)
!5566 = !DILocation(line: 166, column: 32, scope: !5567)
!5567 = distinct !DILexicalBlock(scope: !5558, file: !392, line: 166, column: 9)
!5568 = !DILocation(line: 166, column: 37, scope: !5567)
!5569 = !DILocation(line: 166, column: 9, scope: !5558)
!5570 = !DILocation(line: 167, column: 37, scope: !5571)
!5571 = distinct !DILexicalBlock(scope: !5567, file: !392, line: 166, column: 46)
!5572 = !DILocation(line: 168, column: 32, scope: !5571)
!5573 = !DILocation(line: 168, column: 41, scope: !5571)
!5574 = !DILocation(line: 169, column: 5, scope: !5571)
!5575 = !DILocation(line: 170, column: 1, scope: !5558)
!5576 = distinct !DISubprogram(name: "gdma_stop", scope: !392, file: !392, line: 172, type: !5526, scopeLine: 173, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !391, retainedNodes: !5577)
!5577 = !{!5578}
!5578 = !DILocalVariable(name: "index", arg: 1, scope: !5576, file: !392, line: 172, type: !61)
!5579 = !DILocation(line: 0, scope: !5576)
!5580 = !DILocation(line: 174, column: 5, scope: !5576)
!5581 = !DILocation(line: 174, column: 18, scope: !5576)
!5582 = !DILocation(line: 174, column: 29, scope: !5576)
!5583 = !DILocation(line: 175, column: 1, scope: !5576)
!5584 = distinct !DISubprogram(name: "gdma_start", scope: !392, file: !392, line: 177, type: !5526, scopeLine: 178, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !391, retainedNodes: !5585)
!5585 = !{!5586}
!5586 = !DILocalVariable(name: "index", arg: 1, scope: !5584, file: !392, line: 177, type: !61)
!5587 = !DILocation(line: 0, scope: !5584)
!5588 = !DILocation(line: 179, column: 5, scope: !5584)
!5589 = !DILocation(line: 179, column: 18, scope: !5584)
!5590 = !DILocation(line: 179, column: 29, scope: !5584)
!5591 = !DILocation(line: 180, column: 1, scope: !5584)
!5592 = distinct !DISubprogram(name: "gdma_set_control", scope: !392, file: !392, line: 183, type: !5593, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !391, retainedNodes: !5595)
!5593 = !DISubroutineType(types: !5594)
!5594 = !{null, !61, !61, !61}
!5595 = !{!5596, !5597, !5598}
!5596 = !DILocalVariable(name: "index", arg: 1, scope: !5592, file: !392, line: 183, type: !61)
!5597 = !DILocalVariable(name: "control", arg: 2, scope: !5592, file: !392, line: 183, type: !61)
!5598 = !DILocalVariable(name: "count", arg: 3, scope: !5592, file: !392, line: 183, type: !61)
!5599 = !DILocation(line: 0, scope: !5592)
!5600 = !DILocation(line: 185, column: 5, scope: !5592)
!5601 = !DILocation(line: 185, column: 18, scope: !5592)
!5602 = !DILocation(line: 185, column: 27, scope: !5592)
!5603 = !DILocation(line: 186, column: 5, scope: !5592)
!5604 = !DILocation(line: 186, column: 18, scope: !5592)
!5605 = !DILocation(line: 186, column: 29, scope: !5592)
!5606 = !DILocation(line: 187, column: 1, scope: !5592)
!5607 = distinct !DISubprogram(name: "gdma_set_address", scope: !392, file: !392, line: 189, type: !5593, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !391, retainedNodes: !5608)
!5608 = !{!5609, !5610, !5611}
!5609 = !DILocalVariable(name: "index", arg: 1, scope: !5607, file: !392, line: 189, type: !61)
!5610 = !DILocalVariable(name: "destination", arg: 2, scope: !5607, file: !392, line: 189, type: !61)
!5611 = !DILocalVariable(name: "source", arg: 3, scope: !5607, file: !392, line: 189, type: !61)
!5612 = !DILocation(line: 0, scope: !5607)
!5613 = !DILocation(line: 191, column: 5, scope: !5607)
!5614 = !DILocation(line: 191, column: 18, scope: !5607)
!5615 = !DILocation(line: 191, column: 27, scope: !5607)
!5616 = !DILocation(line: 192, column: 5, scope: !5607)
!5617 = !DILocation(line: 192, column: 18, scope: !5607)
!5618 = !DILocation(line: 192, column: 27, scope: !5607)
!5619 = !DILocation(line: 194, column: 1, scope: !5607)
!5620 = distinct !DISubprogram(name: "dma_enable_clock", scope: !392, file: !392, line: 195, type: !5621, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !391, retainedNodes: !5624)
!5621 = !DISubroutineType(types: !5622)
!5622 = !{!61, !5623}
!5623 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_domain_type_t", file: !400, line: 127, baseType: !399)
!5624 = !{!5625, !5626, !5628}
!5625 = !DILocalVariable(name: "domain", arg: 1, scope: !5620, file: !392, line: 195, type: !5623)
!5626 = !DILocalVariable(name: "clock_status", scope: !5620, file: !392, line: 197, type: !5627)
!5627 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_clock_status_t", file: !405, line: 106, baseType: !404)
!5628 = !DILocalVariable(name: "status", scope: !5620, file: !392, line: 198, type: !61)
!5629 = !DILocation(line: 0, scope: !5620)
!5630 = !DILocation(line: 200, column: 16, scope: !5631)
!5631 = distinct !DILexicalBlock(scope: !5620, file: !392, line: 200, column: 9)
!5632 = !DILocation(line: 200, column: 9, scope: !5620)
!5633 = !DILocation(line: 202, column: 24, scope: !5634)
!5634 = distinct !DILexicalBlock(scope: !5631, file: !392, line: 200, column: 27)
!5635 = !DILocation(line: 203, column: 33, scope: !5636)
!5636 = distinct !DILexicalBlock(scope: !5634, file: !392, line: 203, column: 13)
!5637 = !DILocation(line: 207, column: 24, scope: !5634)
!5638 = !DILocation(line: 208, column: 33, scope: !5639)
!5639 = distinct !DILexicalBlock(scope: !5634, file: !392, line: 208, column: 13)
!5640 = !DILocation(line: 208, column: 13, scope: !5634)
!5641 = !DILocation(line: 213, column: 24, scope: !5642)
!5642 = distinct !DILexicalBlock(scope: !5631, file: !392, line: 211, column: 12)
!5643 = !DILocation(line: 214, column: 33, scope: !5644)
!5644 = distinct !DILexicalBlock(scope: !5642, file: !392, line: 214, column: 13)
!5645 = !DILocation(line: 214, column: 13, scope: !5642)
!5646 = !DILocation(line: 0, scope: !5631)
!5647 = !DILocation(line: 219, column: 5, scope: !5620)
!5648 = distinct !DISubprogram(name: "dma_disable_clock", scope: !392, file: !392, line: 223, type: !5621, scopeLine: 224, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !391, retainedNodes: !5649)
!5649 = !{!5650, !5651, !5652}
!5650 = !DILocalVariable(name: "domain", arg: 1, scope: !5648, file: !392, line: 223, type: !5623)
!5651 = !DILocalVariable(name: "return_status", scope: !5648, file: !392, line: 225, type: !61)
!5652 = !DILocalVariable(name: "clock_status", scope: !5648, file: !392, line: 226, type: !5627)
!5653 = !DILocation(line: 0, scope: !5648)
!5654 = !DILocation(line: 228, column: 16, scope: !5655)
!5655 = distinct !DILexicalBlock(scope: !5648, file: !392, line: 228, column: 9)
!5656 = !DILocation(line: 228, column: 9, scope: !5648)
!5657 = !DILocation(line: 231, column: 24, scope: !5658)
!5658 = distinct !DILexicalBlock(scope: !5655, file: !392, line: 228, column: 27)
!5659 = !DILocation(line: 232, column: 33, scope: !5660)
!5660 = distinct !DILexicalBlock(scope: !5658, file: !392, line: 232, column: 13)
!5661 = !DILocation(line: 235, column: 24, scope: !5658)
!5662 = !DILocation(line: 236, column: 33, scope: !5663)
!5663 = distinct !DILexicalBlock(scope: !5658, file: !392, line: 236, column: 13)
!5664 = !DILocation(line: 236, column: 13, scope: !5658)
!5665 = !DILocation(line: 242, column: 24, scope: !5666)
!5666 = distinct !DILexicalBlock(scope: !5655, file: !392, line: 240, column: 12)
!5667 = !DILocation(line: 243, column: 33, scope: !5668)
!5668 = distinct !DILexicalBlock(scope: !5666, file: !392, line: 243, column: 13)
!5669 = !DILocation(line: 243, column: 13, scope: !5666)
!5670 = !DILocation(line: 0, scope: !5655)
!5671 = !DILocation(line: 248, column: 5, scope: !5648)
!5672 = distinct !DISubprogram(name: "pdma_init", scope: !392, file: !392, line: 279, type: !5673, scopeLine: 280, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !391, retainedNodes: !5676)
!5673 = !DISubroutineType(types: !5674)
!5674 = !{!5675, !1270}
!5675 = !DIDerivedType(tag: DW_TAG_typedef, name: "pdma_status_t", file: !400, line: 171, baseType: !411)
!5676 = !{!5677, !5678, !5679, !5680}
!5677 = !DILocalVariable(name: "channel", arg: 1, scope: !5672, file: !392, line: 279, type: !1270)
!5678 = !DILocalVariable(name: "offset", scope: !5672, file: !392, line: 282, type: !61)
!5679 = !DILocalVariable(name: "result", scope: !5672, file: !392, line: 283, type: !61)
!5680 = !DILocalVariable(name: "saved_mask", scope: !5681, file: !392, line: 291, type: !61)
!5681 = distinct !DILexicalBlock(scope: !5672, file: !392, line: 291, column: 5)
!5682 = !DILocation(line: 0, scope: !5672)
!5683 = !DILocation(line: 284, column: 14, scope: !5672)
!5684 = !DILocation(line: 286, column: 14, scope: !5685)
!5685 = distinct !DILexicalBlock(scope: !5672, file: !392, line: 286, column: 9)
!5686 = !DILocation(line: 286, column: 9, scope: !5672)
!5687 = !DILocation(line: 291, column: 5, scope: !5681)
!5688 = !DILocation(line: 0, scope: !5681)
!5689 = !DILocation(line: 291, column: 5, scope: !5690)
!5690 = distinct !DILexicalBlock(scope: !5681, file: !392, line: 291, column: 5)
!5691 = !DILocation(line: 291, column: 5, scope: !5692)
!5692 = distinct !DILexicalBlock(scope: !5690, file: !392, line: 291, column: 5)
!5693 = !DILocation(line: 291, column: 5, scope: !5694)
!5694 = distinct !DILexicalBlock(scope: !5690, file: !392, line: 291, column: 5)
!5695 = !DILocation(line: 294, column: 14, scope: !5672)
!5696 = !DILocation(line: 296, column: 14, scope: !5697)
!5697 = distinct !DILexicalBlock(scope: !5672, file: !392, line: 296, column: 9)
!5698 = !DILocation(line: 296, column: 9, scope: !5672)
!5699 = !DILocation(line: 300, column: 14, scope: !5672)
!5700 = !DILocation(line: 302, column: 14, scope: !5701)
!5701 = distinct !DILexicalBlock(scope: !5672, file: !392, line: 302, column: 9)
!5702 = !DILocation(line: 302, column: 9, scope: !5672)
!5703 = !DILocation(line: 307, column: 5, scope: !5672)
!5704 = !DILocation(line: 307, column: 19, scope: !5672)
!5705 = !DILocation(line: 307, column: 28, scope: !5672)
!5706 = !DILocation(line: 308, column: 5, scope: !5672)
!5707 = !DILocation(line: 308, column: 19, scope: !5672)
!5708 = !DILocation(line: 308, column: 30, scope: !5672)
!5709 = !DILocation(line: 309, column: 5, scope: !5672)
!5710 = !DILocation(line: 309, column: 19, scope: !5672)
!5711 = !DILocation(line: 309, column: 30, scope: !5672)
!5712 = !DILocation(line: 310, column: 5, scope: !5672)
!5713 = !DILocation(line: 310, column: 19, scope: !5672)
!5714 = !DILocation(line: 310, column: 31, scope: !5672)
!5715 = !DILocation(line: 311, column: 5, scope: !5672)
!5716 = !DILocation(line: 311, column: 19, scope: !5672)
!5717 = !DILocation(line: 311, column: 32, scope: !5672)
!5718 = !DILocation(line: 314, column: 5, scope: !5672)
!5719 = !DILocation(line: 315, column: 5, scope: !5672)
!5720 = !DILocation(line: 316, column: 5, scope: !5672)
!5721 = !DILocation(line: 317, column: 5, scope: !5672)
!5722 = !DILocation(line: 318, column: 5, scope: !5672)
!5723 = !DILocation(line: 319, column: 1, scope: !5672)
!5724 = distinct !DISubprogram(name: "pdma_check_valid_channel", scope: !392, file: !392, line: 262, type: !5725, scopeLine: 263, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !391, retainedNodes: !5727)
!5725 = !DISubroutineType(types: !5726)
!5726 = !{!61, !1270}
!5727 = !{!5728, !5729}
!5728 = !DILocalVariable(name: "channel", arg: 1, scope: !5724, file: !392, line: 262, type: !1270)
!5729 = !DILocalVariable(name: "offset", scope: !5724, file: !392, line: 265, type: !61)
!5730 = !DILocation(line: 0, scope: !5724)
!5731 = !DILocation(line: 268, column: 22, scope: !5724)
!5732 = !DILocation(line: 270, column: 16, scope: !5733)
!5733 = distinct !DILexicalBlock(scope: !5724, file: !392, line: 270, column: 9)
!5734 = !DILocation(line: 0, scope: !5733)
!5735 = !DILocation(line: 275, column: 1, scope: !5724)
!5736 = !DILocation(line: 0, scope: !567)
!5737 = !DILocation(line: 1113, column: 5, scope: !567)
!5738 = !DILocation(line: 1113, column: 24, scope: !567)
!5739 = !DILocation(line: 1126, column: 21, scope: !567)
!5740 = !DILocation(line: 1126, column: 37, scope: !567)
!5741 = !DILocation(line: 1126, column: 19, scope: !567)
!5742 = !DILocation(line: 1127, column: 9, scope: !5743)
!5743 = distinct !DILexicalBlock(scope: !567, file: !392, line: 1127, column: 9)
!5744 = !DILocation(line: 1127, column: 23, scope: !5743)
!5745 = !DILocation(line: 1127, column: 9, scope: !567)
!5746 = !DILocation(line: 1130, column: 9, scope: !5747)
!5747 = distinct !DILexicalBlock(scope: !5743, file: !392, line: 1127, column: 53)
!5748 = !DILocation(line: 1130, column: 18, scope: !5747)
!5749 = !DILocation(line: 1130, column: 30, scope: !5747)
!5750 = !DILocation(line: 1133, column: 44, scope: !5747)
!5751 = !DILocation(line: 1135, column: 27, scope: !5752)
!5752 = distinct !DILexicalBlock(scope: !5747, file: !392, line: 1135, column: 13)
!5753 = !DILocation(line: 1135, column: 13, scope: !5747)
!5754 = !DILocation(line: 1134, column: 39, scope: !5747)
!5755 = !DILocation(line: 1136, column: 13, scope: !5756)
!5756 = distinct !DILexicalBlock(scope: !5752, file: !392, line: 1135, column: 36)
!5757 = !DILocation(line: 1141, column: 5, scope: !5747)
!5758 = !DILocation(line: 1138, column: 13, scope: !5759)
!5759 = distinct !DILexicalBlock(scope: !5752, file: !392, line: 1137, column: 16)
!5760 = !DILocation(line: 0, scope: !5761)
!5761 = distinct !DILexicalBlock(scope: !567, file: !392, line: 1145, column: 5)
!5762 = !DILocation(line: 1145, column: 5, scope: !5761)
!5763 = !DILocation(line: 0, scope: !5764)
!5764 = distinct !DILexicalBlock(scope: !567, file: !392, line: 1170, column: 5)
!5765 = !DILocation(line: 1170, column: 5, scope: !5764)
!5766 = !DILocation(line: 1146, column: 25, scope: !5767)
!5767 = distinct !DILexicalBlock(scope: !5768, file: !392, line: 1145, column: 51)
!5768 = distinct !DILexicalBlock(scope: !5761, file: !392, line: 1145, column: 5)
!5769 = !DILocation(line: 1146, column: 45, scope: !5767)
!5770 = !DILocation(line: 1146, column: 23, scope: !5767)
!5771 = !DILocation(line: 1149, column: 13, scope: !5772)
!5772 = distinct !DILexicalBlock(scope: !5767, file: !392, line: 1149, column: 13)
!5773 = !DILocation(line: 1149, column: 38, scope: !5772)
!5774 = !DILocation(line: 1149, column: 34, scope: !5772)
!5775 = !DILocation(line: 1149, column: 27, scope: !5772)
!5776 = !DILocation(line: 1149, column: 13, scope: !5767)
!5777 = !DILocation(line: 1153, column: 17, scope: !5778)
!5778 = distinct !DILexicalBlock(scope: !5779, file: !392, line: 1151, column: 13)
!5779 = distinct !DILexicalBlock(scope: !5772, file: !392, line: 1149, column: 78)
!5780 = !DILocation(line: 1153, column: 30, scope: !5778)
!5781 = !DILocation(line: 1153, column: 42, scope: !5778)
!5782 = !DILocation(line: 1156, column: 56, scope: !5778)
!5783 = !DILocation(line: 1158, column: 35, scope: !5784)
!5784 = distinct !DILexicalBlock(scope: !5778, file: !392, line: 1158, column: 21)
!5785 = !DILocation(line: 1158, column: 21, scope: !5778)
!5786 = !DILocation(line: 1157, column: 51, scope: !5778)
!5787 = !DILocation(line: 1159, column: 21, scope: !5788)
!5788 = distinct !DILexicalBlock(scope: !5784, file: !392, line: 1158, column: 44)
!5789 = !DILocation(line: 1163, column: 22, scope: !5778)
!5790 = !DILocation(line: 1163, column: 17, scope: !5778)
!5791 = !DILocation(line: 1163, column: 30, scope: !5778)
!5792 = !DILocation(line: 1163, column: 41, scope: !5778)
!5793 = !DILocation(line: 1165, column: 9, scope: !5779)
!5794 = !DILocation(line: 1161, column: 21, scope: !5795)
!5795 = distinct !DILexicalBlock(scope: !5784, file: !392, line: 1160, column: 24)
!5796 = !DILocation(line: 1145, column: 47, scope: !5768)
!5797 = !DILocation(line: 1145, column: 27, scope: !5768)
!5798 = distinct !{!5798, !5762, !5799}
!5799 = !DILocation(line: 1166, column: 5, scope: !5761)
!5800 = !DILocation(line: 1171, column: 25, scope: !5801)
!5801 = distinct !DILexicalBlock(scope: !5802, file: !392, line: 1170, column: 61)
!5802 = distinct !DILexicalBlock(scope: !5764, file: !392, line: 1170, column: 5)
!5803 = !DILocation(line: 1171, column: 45, scope: !5801)
!5804 = !DILocation(line: 1171, column: 23, scope: !5801)
!5805 = !DILocation(line: 1174, column: 13, scope: !5806)
!5806 = distinct !DILexicalBlock(scope: !5801, file: !392, line: 1174, column: 13)
!5807 = !DILocation(line: 1174, column: 38, scope: !5806)
!5808 = !DILocation(line: 1174, column: 34, scope: !5806)
!5809 = !DILocation(line: 1174, column: 27, scope: !5806)
!5810 = !DILocation(line: 1174, column: 13, scope: !5801)
!5811 = !DILocation(line: 1178, column: 17, scope: !5812)
!5812 = distinct !DILexicalBlock(scope: !5813, file: !392, line: 1176, column: 13)
!5813 = distinct !DILexicalBlock(scope: !5806, file: !392, line: 1174, column: 78)
!5814 = !DILocation(line: 1178, column: 30, scope: !5812)
!5815 = !DILocation(line: 1178, column: 42, scope: !5812)
!5816 = !DILocation(line: 1180, column: 56, scope: !5812)
!5817 = !DILocation(line: 1182, column: 35, scope: !5818)
!5818 = distinct !DILexicalBlock(scope: !5812, file: !392, line: 1182, column: 21)
!5819 = !DILocation(line: 1182, column: 21, scope: !5812)
!5820 = !DILocation(line: 1181, column: 51, scope: !5812)
!5821 = !DILocation(line: 1183, column: 21, scope: !5822)
!5822 = distinct !DILexicalBlock(scope: !5818, file: !392, line: 1182, column: 44)
!5823 = !DILocation(line: 1170, column: 57, scope: !5802)
!5824 = !DILocation(line: 1188, column: 9, scope: !5813)
!5825 = !DILocation(line: 1185, column: 21, scope: !5826)
!5826 = distinct !DILexicalBlock(scope: !5818, file: !392, line: 1184, column: 24)
!5827 = !DILocation(line: 1170, column: 27, scope: !5802)
!5828 = distinct !{!5828, !5765, !5829}
!5829 = !DILocation(line: 1189, column: 5, scope: !5764)
!5830 = !DILocation(line: 1193, column: 1, scope: !567)
!5831 = distinct !DISubprogram(name: "pdma_deinit", scope: !392, file: !392, line: 324, type: !5673, scopeLine: 325, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !391, retainedNodes: !5832)
!5832 = !{!5833, !5834, !5835, !5836, !5837, !5838}
!5833 = !DILocalVariable(name: "channel", arg: 1, scope: !5831, file: !392, line: 324, type: !1270)
!5834 = !DILocalVariable(name: "offset", scope: !5831, file: !392, line: 326, type: !61)
!5835 = !DILocalVariable(name: "result", scope: !5831, file: !392, line: 327, type: !61)
!5836 = !DILocalVariable(name: "saved_mask", scope: !5831, file: !392, line: 328, type: !61)
!5837 = !DILocalVariable(name: "global_status", scope: !5831, file: !392, line: 330, type: !60)
!5838 = !DILocalVariable(name: "saved_mask", scope: !5839, file: !392, line: 356, type: !61)
!5839 = distinct !DILexicalBlock(scope: !5831, file: !392, line: 356, column: 5)
!5840 = !DILocation(line: 0, scope: !5831)
!5841 = !DILocation(line: 330, column: 5, scope: !5831)
!5842 = !DILocation(line: 330, column: 24, scope: !5831)
!5843 = !DILocation(line: 331, column: 14, scope: !5831)
!5844 = !DILocation(line: 332, column: 14, scope: !5845)
!5845 = distinct !DILexicalBlock(scope: !5831, file: !392, line: 332, column: 9)
!5846 = !DILocation(line: 332, column: 9, scope: !5831)
!5847 = !DILocation(line: 336, column: 18, scope: !5831)
!5848 = !DILocation(line: 337, column: 21, scope: !5831)
!5849 = !DILocation(line: 337, column: 42, scope: !5831)
!5850 = !DILocation(line: 337, column: 19, scope: !5831)
!5851 = !DILocation(line: 339, column: 9, scope: !5852)
!5852 = distinct !DILexicalBlock(scope: !5831, file: !392, line: 339, column: 9)
!5853 = !DILocation(line: 339, column: 34, scope: !5852)
!5854 = !DILocation(line: 339, column: 30, scope: !5852)
!5855 = !DILocation(line: 339, column: 23, scope: !5852)
!5856 = !DILocation(line: 339, column: 9, scope: !5831)
!5857 = !DILocation(line: 341, column: 9, scope: !5858)
!5858 = distinct !DILexicalBlock(scope: !5852, file: !392, line: 339, column: 75)
!5859 = !DILocation(line: 347, column: 9, scope: !5860)
!5860 = distinct !DILexicalBlock(scope: !5831, file: !392, line: 347, column: 9)
!5861 = !DILocation(line: 347, column: 30, scope: !5860)
!5862 = !DILocation(line: 347, column: 23, scope: !5860)
!5863 = !DILocation(line: 347, column: 9, scope: !5831)
!5864 = !DILocation(line: 349, column: 9, scope: !5865)
!5865 = distinct !DILexicalBlock(scope: !5860, file: !392, line: 347, column: 69)
!5866 = !DILocation(line: 353, column: 5, scope: !5831)
!5867 = !DILocation(line: 356, column: 5, scope: !5839)
!5868 = !DILocation(line: 0, scope: !5839)
!5869 = !DILocation(line: 356, column: 5, scope: !5870)
!5870 = distinct !DILexicalBlock(scope: !5839, file: !392, line: 356, column: 5)
!5871 = !DILocation(line: 356, column: 5, scope: !5872)
!5872 = distinct !DILexicalBlock(scope: !5870, file: !392, line: 356, column: 5)
!5873 = !DILocation(line: 356, column: 5, scope: !5874)
!5874 = distinct !DILexicalBlock(scope: !5870, file: !392, line: 356, column: 5)
!5875 = !DILocation(line: 359, column: 14, scope: !5831)
!5876 = !DILocation(line: 361, column: 14, scope: !5877)
!5877 = distinct !DILexicalBlock(scope: !5831, file: !392, line: 361, column: 9)
!5878 = !DILocation(line: 361, column: 9, scope: !5831)
!5879 = !DILocation(line: 365, column: 14, scope: !5831)
!5880 = !DILocation(line: 367, column: 14, scope: !5881)
!5881 = distinct !DILexicalBlock(scope: !5831, file: !392, line: 367, column: 9)
!5882 = !DILocation(line: 372, column: 1, scope: !5831)
!5883 = distinct !DISubprogram(name: "pdma_set_ring_buffer", scope: !392, file: !392, line: 374, type: !5884, scopeLine: 376, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !391, retainedNodes: !5886)
!5884 = !DISubroutineType(types: !5885)
!5885 = !{!5675, !1270, !61, !61}
!5886 = !{!5887, !5888, !5889, !5890}
!5887 = !DILocalVariable(name: "channel", arg: 1, scope: !5883, file: !392, line: 374, type: !1270)
!5888 = !DILocalVariable(name: "wppt", arg: 2, scope: !5883, file: !392, line: 374, type: !61)
!5889 = !DILocalVariable(name: "wpto", arg: 3, scope: !5883, file: !392, line: 374, type: !61)
!5890 = !DILocalVariable(name: "offset", scope: !5883, file: !392, line: 377, type: !61)
!5891 = !DILocation(line: 0, scope: !5883)
!5892 = !DILocation(line: 379, column: 14, scope: !5883)
!5893 = !DILocation(line: 380, column: 14, scope: !5894)
!5894 = distinct !DILexicalBlock(scope: !5883, file: !392, line: 380, column: 9)
!5895 = !DILocation(line: 380, column: 9, scope: !5883)
!5896 = !DILocation(line: 385, column: 14, scope: !5897)
!5897 = distinct !DILexicalBlock(scope: !5883, file: !392, line: 385, column: 9)
!5898 = !DILocation(line: 385, column: 9, scope: !5883)
!5899 = !DILocation(line: 390, column: 5, scope: !5883)
!5900 = !DILocation(line: 390, column: 19, scope: !5883)
!5901 = !DILocation(line: 390, column: 29, scope: !5883)
!5902 = !DILocation(line: 393, column: 5, scope: !5883)
!5903 = !DILocation(line: 393, column: 19, scope: !5883)
!5904 = !DILocation(line: 393, column: 29, scope: !5883)
!5905 = !DILocation(line: 395, column: 5, scope: !5883)
!5906 = !DILocation(line: 397, column: 1, scope: !5883)
!5907 = distinct !DISubprogram(name: "pdma_configure", scope: !392, file: !392, line: 401, type: !5908, scopeLine: 403, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !391, retainedNodes: !5920)
!5908 = !DISubroutineType(types: !5909)
!5909 = !{!5675, !1270, !5910}
!5910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5911, size: 32)
!5911 = !DIDerivedType(tag: DW_TAG_typedef, name: "pdma_config_t", file: !400, line: 275, baseType: !5912)
!5912 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !400, line: 270, size: 128, elements: !5913)
!5913 = !{!5914, !5915, !5917, !5918}
!5914 = !DIDerivedType(tag: DW_TAG_member, name: "burst_mode", scope: !5912, file: !400, line: 271, baseType: !91, size: 8)
!5915 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5912, file: !400, line: 272, baseType: !5916, size: 32, offset: 32)
!5916 = !DIDerivedType(tag: DW_TAG_typedef, name: "pdma_transfer_size_format_t", file: !400, line: 155, baseType: !427)
!5917 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5912, file: !400, line: 273, baseType: !61, size: 32, offset: 64)
!5918 = !DIDerivedType(tag: DW_TAG_member, name: "master_type", scope: !5912, file: !400, line: 274, baseType: !5919, size: 32, offset: 96)
!5919 = !DIDerivedType(tag: DW_TAG_typedef, name: "pdma_master_type_t", file: !400, line: 185, baseType: !432)
!5920 = !{!5921, !5922, !5923, !5924, !5925, !5926}
!5921 = !DILocalVariable(name: "channel", arg: 1, scope: !5907, file: !392, line: 401, type: !1270)
!5922 = !DILocalVariable(name: "pdma_config", arg: 2, scope: !5907, file: !392, line: 401, type: !5910)
!5923 = !DILocalVariable(name: "offset", scope: !5907, file: !392, line: 405, type: !61)
!5924 = !DILocalVariable(name: "saved_mask", scope: !5907, file: !392, line: 407, type: !61)
!5925 = !DILocalVariable(name: "dma_control", scope: !5907, file: !392, line: 410, type: !61)
!5926 = !DILocalVariable(name: "global_status", scope: !5907, file: !392, line: 413, type: !60)
!5927 = !DILocation(line: 0, scope: !5907)
!5928 = !DILocation(line: 413, column: 5, scope: !5907)
!5929 = !DILocation(line: 413, column: 24, scope: !5907)
!5930 = !DILocation(line: 415, column: 14, scope: !5907)
!5931 = !DILocation(line: 416, column: 14, scope: !5932)
!5932 = distinct !DILexicalBlock(scope: !5907, file: !392, line: 416, column: 9)
!5933 = !DILocation(line: 416, column: 9, scope: !5907)
!5934 = !DILocation(line: 422, column: 22, scope: !5935)
!5935 = distinct !DILexicalBlock(scope: !5907, file: !392, line: 422, column: 9)
!5936 = !DILocation(line: 422, column: 9, scope: !5907)
!5937 = !DILocation(line: 432, column: 18, scope: !5907)
!5938 = !DILocation(line: 435, column: 21, scope: !5907)
!5939 = !DILocation(line: 435, column: 42, scope: !5907)
!5940 = !DILocation(line: 435, column: 19, scope: !5907)
!5941 = !DILocation(line: 437, column: 9, scope: !5942)
!5942 = distinct !DILexicalBlock(scope: !5907, file: !392, line: 437, column: 9)
!5943 = !DILocation(line: 437, column: 33, scope: !5942)
!5944 = !DILocation(line: 437, column: 30, scope: !5942)
!5945 = !DILocation(line: 437, column: 23, scope: !5942)
!5946 = !DILocation(line: 437, column: 9, scope: !5907)
!5947 = !DILocation(line: 440, column: 9, scope: !5948)
!5948 = distinct !DILexicalBlock(scope: !5942, file: !392, line: 437, column: 69)
!5949 = !DILocation(line: 441, column: 9, scope: !5948)
!5950 = !DILocation(line: 447, column: 9, scope: !5951)
!5951 = distinct !DILexicalBlock(scope: !5907, file: !392, line: 447, column: 9)
!5952 = !DILocation(line: 447, column: 30, scope: !5951)
!5953 = !DILocation(line: 447, column: 23, scope: !5951)
!5954 = !DILocation(line: 447, column: 9, scope: !5907)
!5955 = !DILocation(line: 457, column: 5, scope: !5907)
!5956 = !DILocation(line: 457, column: 19, scope: !5907)
!5957 = !DILocation(line: 457, column: 30, scope: !5907)
!5958 = !DILocation(line: 459, column: 26, scope: !5907)
!5959 = !DILocation(line: 459, column: 5, scope: !5907)
!5960 = !DILocation(line: 0, scope: !5961)
!5961 = distinct !DILexicalBlock(scope: !5907, file: !392, line: 459, column: 39)
!5962 = !DILocation(line: 483, column: 26, scope: !5907)
!5963 = !DILocation(line: 483, column: 5, scope: !5907)
!5964 = !DILocation(line: 490, column: 25, scope: !5965)
!5965 = distinct !DILexicalBlock(scope: !5907, file: !392, line: 483, column: 32)
!5966 = !DILocation(line: 491, column: 13, scope: !5965)
!5967 = !DILocation(line: 493, column: 25, scope: !5965)
!5968 = !DILocation(line: 494, column: 13, scope: !5965)
!5969 = !DILocation(line: 0, scope: !5965)
!5970 = !DILocation(line: 499, column: 23, scope: !5971)
!5971 = distinct !DILexicalBlock(scope: !5907, file: !392, line: 499, column: 9)
!5972 = !DILocation(line: 499, column: 43, scope: !5971)
!5973 = !DILocation(line: 503, column: 17, scope: !5907)
!5974 = !DILocation(line: 505, column: 5, scope: !5907)
!5975 = !DILocation(line: 505, column: 19, scope: !5907)
!5976 = !DILocation(line: 505, column: 28, scope: !5907)
!5977 = !DILocation(line: 506, column: 45, scope: !5907)
!5978 = !DILocation(line: 506, column: 5, scope: !5907)
!5979 = !DILocation(line: 506, column: 19, scope: !5907)
!5980 = !DILocation(line: 506, column: 30, scope: !5907)
!5981 = !DILocation(line: 508, column: 5, scope: !5907)
!5982 = !DILocation(line: 510, column: 1, scope: !5907)
!5983 = distinct !DISubprogram(name: "pdma_start_polling", scope: !392, file: !392, line: 512, type: !5984, scopeLine: 514, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !391, retainedNodes: !5986)
!5984 = !DISubroutineType(types: !5985)
!5985 = !{!5675, !1270, !61}
!5986 = !{!5987, !5988, !5989, !5990}
!5987 = !DILocalVariable(name: "channel", arg: 1, scope: !5983, file: !392, line: 512, type: !1270)
!5988 = !DILocalVariable(name: "address", arg: 2, scope: !5983, file: !392, line: 512, type: !61)
!5989 = !DILocalVariable(name: "offset", scope: !5983, file: !392, line: 516, type: !61)
!5990 = !DILocalVariable(name: "running_status", scope: !5983, file: !392, line: 518, type: !5991)
!5991 = !DIDerivedType(tag: DW_TAG_typedef, name: "pdma_running_status_t", file: !400, line: 177, baseType: !438)
!5992 = !DILocation(line: 0, scope: !5983)
!5993 = !DILocation(line: 518, column: 5, scope: !5983)
!5994 = !DILocation(line: 518, column: 28, scope: !5983)
!5995 = !DILocation(line: 520, column: 14, scope: !5983)
!5996 = !DILocation(line: 521, column: 14, scope: !5997)
!5997 = distinct !DILexicalBlock(scope: !5983, file: !392, line: 521, column: 9)
!5998 = !DILocation(line: 521, column: 9, scope: !5983)
!5999 = !DILocation(line: 526, column: 18, scope: !6000)
!6000 = distinct !DILexicalBlock(scope: !5983, file: !392, line: 526, column: 9)
!6001 = !DILocation(line: 526, column: 23, scope: !6000)
!6002 = !DILocation(line: 526, column: 9, scope: !5983)
!6003 = !DILocation(line: 527, column: 9, scope: !6004)
!6004 = distinct !DILexicalBlock(scope: !6000, file: !392, line: 526, column: 28)
!6005 = !DILocation(line: 532, column: 17, scope: !6006)
!6006 = distinct !DILexicalBlock(scope: !5983, file: !392, line: 532, column: 9)
!6007 = !DILocation(line: 532, column: 9, scope: !5983)
!6008 = !DILocation(line: 533, column: 9, scope: !6009)
!6009 = distinct !DILexicalBlock(scope: !6006, file: !392, line: 532, column: 50)
!6010 = !DILocation(line: 538, column: 5, scope: !5983)
!6011 = !DILocation(line: 538, column: 19, scope: !5983)
!6012 = !DILocation(line: 538, column: 32, scope: !5983)
!6013 = !DILocation(line: 540, column: 5, scope: !5983)
!6014 = !DILocation(line: 540, column: 19, scope: !5983)
!6015 = !DILocation(line: 540, column: 28, scope: !5983)
!6016 = !DILocation(line: 542, column: 5, scope: !5983)
!6017 = !DILocation(line: 542, column: 19, scope: !5983)
!6018 = !DILocation(line: 542, column: 30, scope: !5983)
!6019 = !DILocation(line: 544, column: 5, scope: !5983)
!6020 = !DILocation(line: 545, column: 12, scope: !5983)
!6021 = !DILocation(line: 545, column: 5, scope: !5983)
!6022 = !DILocation(line: 547, column: 9, scope: !6023)
!6023 = distinct !DILexicalBlock(scope: !5983, file: !392, line: 545, column: 28)
!6024 = distinct !{!6024, !6021, !6025}
!6025 = !DILocation(line: 548, column: 5, scope: !5983)
!6026 = !DILocation(line: 550, column: 5, scope: !5983)
!6027 = !DILocation(line: 551, column: 5, scope: !5983)
!6028 = !DILocation(line: 553, column: 1, scope: !5983)
!6029 = distinct !DISubprogram(name: "pdma_get_running_status", scope: !392, file: !392, line: 620, type: !6030, scopeLine: 622, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !391, retainedNodes: !6033)
!6030 = !DISubroutineType(types: !6031)
!6031 = !{!5675, !1270, !6032}
!6032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5991, size: 32)
!6033 = !{!6034, !6035, !6036, !6037}
!6034 = !DILocalVariable(name: "channel", arg: 1, scope: !6029, file: !392, line: 620, type: !1270)
!6035 = !DILocalVariable(name: "running_status", arg: 2, scope: !6029, file: !392, line: 620, type: !6032)
!6036 = !DILocalVariable(name: "offset", scope: !6029, file: !392, line: 624, type: !61)
!6037 = !DILocalVariable(name: "global_status", scope: !6029, file: !392, line: 627, type: !60)
!6038 = !DILocation(line: 0, scope: !6029)
!6039 = !DILocation(line: 627, column: 5, scope: !6029)
!6040 = !DILocation(line: 627, column: 24, scope: !6029)
!6041 = !DILocation(line: 629, column: 14, scope: !6029)
!6042 = !DILocation(line: 630, column: 14, scope: !6043)
!6043 = distinct !DILexicalBlock(scope: !6029, file: !392, line: 630, column: 9)
!6044 = !DILocation(line: 630, column: 9, scope: !6029)
!6045 = !DILocation(line: 635, column: 21, scope: !6029)
!6046 = !DILocation(line: 635, column: 42, scope: !6029)
!6047 = !DILocation(line: 635, column: 19, scope: !6029)
!6048 = !DILocation(line: 637, column: 9, scope: !6049)
!6049 = distinct !DILexicalBlock(scope: !6029, file: !392, line: 637, column: 9)
!6050 = !DILocation(line: 637, column: 33, scope: !6049)
!6051 = !DILocation(line: 0, scope: !6049)
!6052 = !DILocation(line: 644, column: 5, scope: !6029)
!6053 = !DILocation(line: 646, column: 1, scope: !6029)
!6054 = distinct !DISubprogram(name: "pdma_stop", scope: !392, file: !392, line: 585, type: !5673, scopeLine: 587, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !391, retainedNodes: !6055)
!6055 = !{!6056, !6057}
!6056 = !DILocalVariable(name: "channel", arg: 1, scope: !6054, file: !392, line: 585, type: !1270)
!6057 = !DILocalVariable(name: "offset", scope: !6054, file: !392, line: 589, type: !61)
!6058 = !DILocation(line: 0, scope: !6054)
!6059 = !DILocation(line: 591, column: 14, scope: !6054)
!6060 = !DILocation(line: 592, column: 14, scope: !6061)
!6061 = distinct !DILexicalBlock(scope: !6054, file: !392, line: 592, column: 9)
!6062 = !DILocation(line: 592, column: 9, scope: !6054)
!6063 = !DILocation(line: 597, column: 5, scope: !6054)
!6064 = !DILocation(line: 597, column: 19, scope: !6054)
!6065 = !DILocation(line: 597, column: 30, scope: !6054)
!6066 = !DILocation(line: 598, column: 5, scope: !6054)
!6067 = !DILocation(line: 598, column: 19, scope: !6054)
!6068 = !DILocation(line: 598, column: 31, scope: !6054)
!6069 = !DILocation(line: 600, column: 5, scope: !6054)
!6070 = !DILocation(line: 601, column: 1, scope: !6054)
!6071 = distinct !DISubprogram(name: "pdma_start_interrupt", scope: !392, file: !392, line: 555, type: !5984, scopeLine: 556, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !391, retainedNodes: !6072)
!6072 = !{!6073, !6074, !6075}
!6073 = !DILocalVariable(name: "channel", arg: 1, scope: !6071, file: !392, line: 555, type: !1270)
!6074 = !DILocalVariable(name: "address", arg: 2, scope: !6071, file: !392, line: 555, type: !61)
!6075 = !DILocalVariable(name: "offset", scope: !6071, file: !392, line: 558, type: !61)
!6076 = !DILocation(line: 0, scope: !6071)
!6077 = !DILocation(line: 561, column: 14, scope: !6071)
!6078 = !DILocation(line: 562, column: 14, scope: !6079)
!6079 = distinct !DILexicalBlock(scope: !6071, file: !392, line: 562, column: 9)
!6080 = !DILocation(line: 562, column: 9, scope: !6071)
!6081 = !DILocation(line: 566, column: 18, scope: !6082)
!6082 = distinct !DILexicalBlock(scope: !6071, file: !392, line: 566, column: 9)
!6083 = !DILocation(line: 566, column: 23, scope: !6082)
!6084 = !DILocation(line: 566, column: 9, scope: !6071)
!6085 = !DILocation(line: 567, column: 9, scope: !6086)
!6086 = distinct !DILexicalBlock(scope: !6082, file: !392, line: 566, column: 28)
!6087 = !DILocation(line: 572, column: 17, scope: !6088)
!6088 = distinct !DILexicalBlock(scope: !6071, file: !392, line: 572, column: 9)
!6089 = !DILocation(line: 572, column: 9, scope: !6071)
!6090 = !DILocation(line: 573, column: 9, scope: !6091)
!6091 = distinct !DILexicalBlock(scope: !6088, file: !392, line: 572, column: 50)
!6092 = !DILocation(line: 577, column: 5, scope: !6071)
!6093 = !DILocation(line: 577, column: 19, scope: !6071)
!6094 = !DILocation(line: 577, column: 32, scope: !6071)
!6095 = !DILocation(line: 578, column: 5, scope: !6071)
!6096 = !DILocation(line: 578, column: 19, scope: !6071)
!6097 = !DILocation(line: 578, column: 28, scope: !6071)
!6098 = !DILocation(line: 579, column: 5, scope: !6071)
!6099 = !DILocation(line: 579, column: 19, scope: !6071)
!6100 = !DILocation(line: 579, column: 30, scope: !6071)
!6101 = !DILocation(line: 581, column: 5, scope: !6071)
!6102 = !DILocation(line: 583, column: 1, scope: !6071)
!6103 = distinct !DISubprogram(name: "pdma_register_callback", scope: !392, file: !392, line: 603, type: !6104, scopeLine: 605, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !391, retainedNodes: !6106)
!6104 = !DISubroutineType(types: !6105)
!6105 = !{!5675, !1270, !577, !88}
!6106 = !{!6107, !6108, !6109, !6110}
!6107 = !DILocalVariable(name: "channel", arg: 1, scope: !6103, file: !392, line: 603, type: !1270)
!6108 = !DILocalVariable(name: "callback", arg: 2, scope: !6103, file: !392, line: 603, type: !577)
!6109 = !DILocalVariable(name: "user_data", arg: 3, scope: !6103, file: !392, line: 603, type: !88)
!6110 = !DILocalVariable(name: "offset", scope: !6103, file: !392, line: 607, type: !61)
!6111 = !DILocation(line: 0, scope: !6103)
!6112 = !DILocation(line: 609, column: 14, scope: !6103)
!6113 = !DILocation(line: 610, column: 14, scope: !6114)
!6114 = distinct !DILexicalBlock(scope: !6103, file: !392, line: 610, column: 9)
!6115 = !DILocation(line: 610, column: 9, scope: !6103)
!6116 = !DILocation(line: 613, column: 33, scope: !6117)
!6117 = distinct !DILexicalBlock(scope: !6103, file: !392, line: 613, column: 9)
!6118 = !DILocation(line: 613, column: 38, scope: !6117)
!6119 = !DILocation(line: 613, column: 9, scope: !6103)
!6120 = !DILocation(line: 614, column: 38, scope: !6121)
!6121 = distinct !DILexicalBlock(scope: !6117, file: !392, line: 613, column: 47)
!6122 = !DILocation(line: 615, column: 33, scope: !6121)
!6123 = !DILocation(line: 615, column: 43, scope: !6121)
!6124 = !DILocation(line: 616, column: 5, scope: !6121)
!6125 = !DILocation(line: 619, column: 1, scope: !6103)
!6126 = distinct !DISubprogram(name: "vdma_init", scope: !392, file: !392, line: 676, type: !6127, scopeLine: 677, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !391, retainedNodes: !6131)
!6127 = !DISubroutineType(types: !6128)
!6128 = !{!6129, !6130}
!6129 = !DIDerivedType(tag: DW_TAG_typedef, name: "vdma_status_t", file: !400, line: 211, baseType: !446)
!6130 = !DIDerivedType(tag: DW_TAG_typedef, name: "vdma_channel_t", file: !400, line: 203, baseType: !452)
!6131 = !{!6132, !6133, !6134, !6135, !6136}
!6132 = !DILocalVariable(name: "channel", arg: 1, scope: !6126, file: !392, line: 676, type: !6130)
!6133 = !DILocalVariable(name: "offset", scope: !6126, file: !392, line: 679, type: !61)
!6134 = !DILocalVariable(name: "result", scope: !6126, file: !392, line: 680, type: !61)
!6135 = !DILocalVariable(name: "dma_control", scope: !6126, file: !392, line: 682, type: !61)
!6136 = !DILocalVariable(name: "saved_mask", scope: !6137, file: !392, line: 690, type: !61)
!6137 = distinct !DILexicalBlock(scope: !6126, file: !392, line: 690, column: 5)
!6138 = !DILocation(line: 0, scope: !6126)
!6139 = !DILocation(line: 684, column: 14, scope: !6126)
!6140 = !DILocation(line: 685, column: 14, scope: !6141)
!6141 = distinct !DILexicalBlock(scope: !6126, file: !392, line: 685, column: 9)
!6142 = !DILocation(line: 685, column: 9, scope: !6126)
!6143 = !DILocation(line: 690, column: 5, scope: !6137)
!6144 = !DILocation(line: 0, scope: !6137)
!6145 = !DILocation(line: 690, column: 5, scope: !6146)
!6146 = distinct !DILexicalBlock(scope: !6137, file: !392, line: 690, column: 5)
!6147 = !DILocation(line: 690, column: 5, scope: !6148)
!6148 = distinct !DILexicalBlock(scope: !6146, file: !392, line: 690, column: 5)
!6149 = !DILocation(line: 690, column: 5, scope: !6150)
!6150 = distinct !DILexicalBlock(scope: !6146, file: !392, line: 690, column: 5)
!6151 = !DILocation(line: 693, column: 5, scope: !6126)
!6152 = !DILocation(line: 693, column: 19, scope: !6126)
!6153 = !DILocation(line: 693, column: 28, scope: !6126)
!6154 = !DILocation(line: 694, column: 5, scope: !6126)
!6155 = !DILocation(line: 694, column: 19, scope: !6126)
!6156 = !DILocation(line: 694, column: 30, scope: !6126)
!6157 = !DILocation(line: 695, column: 5, scope: !6126)
!6158 = !DILocation(line: 695, column: 19, scope: !6126)
!6159 = !DILocation(line: 695, column: 30, scope: !6126)
!6160 = !DILocation(line: 696, column: 5, scope: !6126)
!6161 = !DILocation(line: 696, column: 19, scope: !6126)
!6162 = !DILocation(line: 696, column: 31, scope: !6126)
!6163 = !DILocation(line: 697, column: 5, scope: !6126)
!6164 = !DILocation(line: 697, column: 19, scope: !6126)
!6165 = !DILocation(line: 697, column: 32, scope: !6126)
!6166 = !DILocation(line: 698, column: 5, scope: !6126)
!6167 = !DILocation(line: 698, column: 19, scope: !6126)
!6168 = !DILocation(line: 698, column: 31, scope: !6126)
!6169 = !DILocation(line: 699, column: 5, scope: !6126)
!6170 = !DILocation(line: 699, column: 19, scope: !6126)
!6171 = !DILocation(line: 699, column: 31, scope: !6126)
!6172 = !DILocation(line: 703, column: 16, scope: !6173)
!6173 = distinct !DILexicalBlock(scope: !6126, file: !392, line: 703, column: 9)
!6174 = !DILocation(line: 703, column: 9, scope: !6126)
!6175 = !DILocation(line: 705, column: 18, scope: !6176)
!6176 = distinct !DILexicalBlock(scope: !6173, file: !392, line: 703, column: 37)
!6177 = !DILocation(line: 707, column: 18, scope: !6178)
!6178 = distinct !DILexicalBlock(scope: !6176, file: !392, line: 707, column: 13)
!6179 = !DILocation(line: 707, column: 13, scope: !6176)
!6180 = !DILocation(line: 713, column: 18, scope: !6181)
!6181 = distinct !DILexicalBlock(scope: !6173, file: !392, line: 711, column: 12)
!6182 = !DILocation(line: 715, column: 18, scope: !6183)
!6183 = distinct !DILexicalBlock(scope: !6181, file: !392, line: 715, column: 13)
!6184 = !DILocation(line: 715, column: 13, scope: !6181)
!6185 = !DILocation(line: 720, column: 5, scope: !6126)
!6186 = !DILocation(line: 0, scope: !6187)
!6187 = distinct !DILexicalBlock(scope: !6126, file: !392, line: 720, column: 22)
!6188 = !DILocation(line: 776, column: 5, scope: !6126)
!6189 = !DILocation(line: 777, column: 5, scope: !6126)
!6190 = !DILocation(line: 778, column: 5, scope: !6126)
!6191 = !DILocation(line: 779, column: 5, scope: !6126)
!6192 = !DILocation(line: 781, column: 5, scope: !6126)
!6193 = !DILocation(line: 783, column: 1, scope: !6126)
!6194 = distinct !DISubprogram(name: "vdma_check_valid_channel", scope: !392, file: !392, line: 660, type: !6195, scopeLine: 661, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !391, retainedNodes: !6197)
!6195 = !DISubroutineType(types: !6196)
!6196 = !{!61, !6130}
!6197 = !{!6198, !6199}
!6198 = !DILocalVariable(name: "channel", arg: 1, scope: !6194, file: !392, line: 660, type: !6130)
!6199 = !DILocalVariable(name: "offset", scope: !6194, file: !392, line: 663, type: !61)
!6200 = !DILocation(line: 0, scope: !6194)
!6201 = !DILocation(line: 666, column: 22, scope: !6194)
!6202 = !DILocation(line: 668, column: 16, scope: !6203)
!6203 = distinct !DILexicalBlock(scope: !6194, file: !392, line: 668, column: 9)
!6204 = !DILocation(line: 0, scope: !6203)
!6205 = !DILocation(line: 673, column: 1, scope: !6194)
!6206 = distinct !DISubprogram(name: "ao_domain_dma_interrupt_hander", scope: !392, file: !392, line: 1196, type: !568, scopeLine: 1198, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !391, retainedNodes: !6207)
!6207 = !{!6208, !6209, !6210, !6211, !6212}
!6208 = !DILocalVariable(name: "irq_number", arg: 1, scope: !6206, file: !392, line: 1196, type: !570)
!6209 = !DILocalVariable(name: "global_status", scope: !6206, file: !392, line: 1201, type: !60)
!6210 = !DILocalVariable(name: "callback", scope: !6206, file: !392, line: 1204, type: !583)
!6211 = !DILocalVariable(name: "argument", scope: !6206, file: !392, line: 1206, type: !88)
!6212 = !DILocalVariable(name: "count", scope: !6206, file: !392, line: 1209, type: !61)
!6213 = !DILocation(line: 0, scope: !6206)
!6214 = !DILocation(line: 1201, column: 5, scope: !6206)
!6215 = !DILocation(line: 1201, column: 24, scope: !6206)
!6216 = !DILocation(line: 1220, column: 5, scope: !6217)
!6217 = distinct !DILexicalBlock(scope: !6206, file: !392, line: 1220, column: 5)
!6218 = !DILocation(line: 1221, column: 25, scope: !6219)
!6219 = distinct !DILexicalBlock(scope: !6220, file: !392, line: 1220, column: 77)
!6220 = distinct !DILexicalBlock(scope: !6217, file: !392, line: 1220, column: 5)
!6221 = !DILocation(line: 1221, column: 45, scope: !6219)
!6222 = !DILocation(line: 1221, column: 23, scope: !6219)
!6223 = !DILocation(line: 1223, column: 13, scope: !6224)
!6224 = distinct !DILexicalBlock(scope: !6219, file: !392, line: 1223, column: 13)
!6225 = !DILocation(line: 1223, column: 38, scope: !6224)
!6226 = !DILocation(line: 1223, column: 34, scope: !6224)
!6227 = !DILocation(line: 1223, column: 27, scope: !6224)
!6228 = !DILocation(line: 1223, column: 13, scope: !6219)
!6229 = !DILocation(line: 1227, column: 17, scope: !6230)
!6230 = distinct !DILexicalBlock(scope: !6231, file: !392, line: 1225, column: 13)
!6231 = distinct !DILexicalBlock(scope: !6224, file: !392, line: 1223, column: 78)
!6232 = !DILocation(line: 1227, column: 30, scope: !6230)
!6233 = !DILocation(line: 1227, column: 42, scope: !6230)
!6234 = !DILocation(line: 1229, column: 51, scope: !6230)
!6235 = !DILocation(line: 1231, column: 30, scope: !6236)
!6236 = distinct !DILexicalBlock(scope: !6230, file: !392, line: 1231, column: 21)
!6237 = !DILocation(line: 1231, column: 21, scope: !6230)
!6238 = !DILocation(line: 1230, column: 51, scope: !6230)
!6239 = !DILocation(line: 1232, column: 21, scope: !6240)
!6240 = distinct !DILexicalBlock(scope: !6236, file: !392, line: 1231, column: 39)
!6241 = !DILocation(line: 1237, column: 9, scope: !6231)
!6242 = !DILocation(line: 1234, column: 21, scope: !6243)
!6243 = distinct !DILexicalBlock(scope: !6236, file: !392, line: 1233, column: 24)
!6244 = !DILocation(line: 1220, column: 73, scope: !6220)
!6245 = !DILocation(line: 1220, column: 53, scope: !6220)
!6246 = distinct !{!6246, !6216, !6247}
!6247 = !DILocation(line: 1238, column: 5, scope: !6217)
!6248 = !DILocation(line: 1241, column: 1, scope: !6206)
!6249 = distinct !DISubprogram(name: "vdma_deinit", scope: !392, file: !392, line: 785, type: !6127, scopeLine: 786, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !391, retainedNodes: !6250)
!6250 = !{!6251, !6252, !6253, !6254, !6255, !6256}
!6251 = !DILocalVariable(name: "channel", arg: 1, scope: !6249, file: !392, line: 785, type: !6130)
!6252 = !DILocalVariable(name: "offset", scope: !6249, file: !392, line: 789, type: !61)
!6253 = !DILocalVariable(name: "result", scope: !6249, file: !392, line: 790, type: !61)
!6254 = !DILocalVariable(name: "saved_mask", scope: !6249, file: !392, line: 791, type: !61)
!6255 = !DILocalVariable(name: "global_status", scope: !6249, file: !392, line: 794, type: !60)
!6256 = !DILocalVariable(name: "saved_mask", scope: !6257, file: !392, line: 820, type: !61)
!6257 = distinct !DILexicalBlock(scope: !6249, file: !392, line: 820, column: 5)
!6258 = !DILocation(line: 0, scope: !6249)
!6259 = !DILocation(line: 794, column: 5, scope: !6249)
!6260 = !DILocation(line: 794, column: 24, scope: !6249)
!6261 = !DILocation(line: 796, column: 14, scope: !6249)
!6262 = !DILocation(line: 797, column: 24, scope: !6263)
!6263 = distinct !DILexicalBlock(scope: !6249, file: !392, line: 797, column: 9)
!6264 = !DILocation(line: 797, column: 9, scope: !6249)
!6265 = !DILocation(line: 801, column: 18, scope: !6249)
!6266 = !DILocation(line: 803, column: 21, scope: !6249)
!6267 = !DILocation(line: 803, column: 42, scope: !6249)
!6268 = !DILocation(line: 803, column: 19, scope: !6249)
!6269 = !DILocation(line: 805, column: 9, scope: !6270)
!6270 = distinct !DILexicalBlock(scope: !6249, file: !392, line: 805, column: 9)
!6271 = !DILocation(line: 805, column: 34, scope: !6270)
!6272 = !DILocation(line: 805, column: 30, scope: !6270)
!6273 = !DILocation(line: 805, column: 23, scope: !6270)
!6274 = !DILocation(line: 805, column: 9, scope: !6249)
!6275 = !DILocation(line: 806, column: 9, scope: !6276)
!6276 = distinct !DILexicalBlock(scope: !6270, file: !392, line: 805, column: 75)
!6277 = !DILocation(line: 811, column: 9, scope: !6278)
!6278 = distinct !DILexicalBlock(scope: !6249, file: !392, line: 811, column: 9)
!6279 = !DILocation(line: 811, column: 30, scope: !6278)
!6280 = !DILocation(line: 811, column: 23, scope: !6278)
!6281 = !DILocation(line: 811, column: 9, scope: !6249)
!6282 = !DILocation(line: 812, column: 9, scope: !6283)
!6283 = distinct !DILexicalBlock(scope: !6278, file: !392, line: 811, column: 69)
!6284 = !DILocation(line: 817, column: 5, scope: !6249)
!6285 = !DILocation(line: 820, column: 5, scope: !6257)
!6286 = !DILocation(line: 0, scope: !6257)
!6287 = !DILocation(line: 820, column: 5, scope: !6288)
!6288 = distinct !DILexicalBlock(scope: !6257, file: !392, line: 820, column: 5)
!6289 = !DILocation(line: 820, column: 5, scope: !6290)
!6290 = distinct !DILexicalBlock(scope: !6288, file: !392, line: 820, column: 5)
!6291 = !DILocation(line: 820, column: 5, scope: !6292)
!6292 = distinct !DILexicalBlock(scope: !6288, file: !392, line: 820, column: 5)
!6293 = !DILocation(line: 824, column: 16, scope: !6294)
!6294 = distinct !DILexicalBlock(scope: !6249, file: !392, line: 824, column: 9)
!6295 = !DILocation(line: 824, column: 9, scope: !6249)
!6296 = !DILocation(line: 826, column: 18, scope: !6297)
!6297 = distinct !DILexicalBlock(scope: !6294, file: !392, line: 824, column: 53)
!6298 = !DILocation(line: 828, column: 28, scope: !6299)
!6299 = distinct !DILexicalBlock(scope: !6297, file: !392, line: 828, column: 13)
!6300 = !DILocation(line: 828, column: 13, scope: !6297)
!6301 = !DILocation(line: 834, column: 18, scope: !6302)
!6302 = distinct !DILexicalBlock(scope: !6294, file: !392, line: 832, column: 12)
!6303 = !DILocation(line: 836, column: 28, scope: !6304)
!6304 = distinct !DILexicalBlock(scope: !6302, file: !392, line: 836, column: 13)
!6305 = !DILocation(line: 836, column: 13, scope: !6302)
!6306 = !DILocation(line: 841, column: 5, scope: !6249)
!6307 = !DILocation(line: 842, column: 1, scope: !6249)
!6308 = distinct !DISubprogram(name: "vdma_configure", scope: !392, file: !392, line: 844, type: !6309, scopeLine: 845, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !391, retainedNodes: !6317)
!6309 = !DISubroutineType(types: !6310)
!6310 = !{!6129, !6130, !6311}
!6311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6312, size: 32)
!6312 = !DIDerivedType(tag: DW_TAG_typedef, name: "vdma_config_t", file: !400, line: 283, baseType: !6313)
!6313 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !400, line: 280, size: 64, elements: !6314)
!6314 = !{!6315, !6316}
!6315 = !DIDerivedType(tag: DW_TAG_member, name: "base_address", scope: !6313, file: !400, line: 281, baseType: !61, size: 32)
!6316 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6313, file: !400, line: 282, baseType: !61, size: 32, offset: 32)
!6317 = !{!6318, !6319, !6320}
!6318 = !DILocalVariable(name: "channel", arg: 1, scope: !6308, file: !392, line: 844, type: !6130)
!6319 = !DILocalVariable(name: "vdma_config", arg: 2, scope: !6308, file: !392, line: 844, type: !6311)
!6320 = !DILocalVariable(name: "offset", scope: !6308, file: !392, line: 848, type: !61)
!6321 = !DILocation(line: 0, scope: !6308)
!6322 = !DILocation(line: 850, column: 14, scope: !6308)
!6323 = !DILocation(line: 851, column: 24, scope: !6324)
!6324 = distinct !DILexicalBlock(scope: !6308, file: !392, line: 851, column: 9)
!6325 = !DILocation(line: 851, column: 9, scope: !6308)
!6326 = !DILocation(line: 856, column: 23, scope: !6327)
!6327 = distinct !DILexicalBlock(scope: !6308, file: !392, line: 856, column: 9)
!6328 = !DILocation(line: 856, column: 36, scope: !6327)
!6329 = !DILocation(line: 856, column: 41, scope: !6327)
!6330 = !DILocation(line: 856, column: 9, scope: !6308)
!6331 = !DILocation(line: 857, column: 9, scope: !6332)
!6332 = distinct !DILexicalBlock(scope: !6327, file: !392, line: 856, column: 46)
!6333 = !DILocation(line: 862, column: 17, scope: !6334)
!6334 = distinct !DILexicalBlock(scope: !6308, file: !392, line: 862, column: 9)
!6335 = !DILocation(line: 862, column: 9, scope: !6308)
!6336 = !DILocation(line: 863, column: 9, scope: !6337)
!6337 = distinct !DILexicalBlock(scope: !6334, file: !392, line: 862, column: 68)
!6338 = !DILocation(line: 867, column: 46, scope: !6308)
!6339 = !DILocation(line: 867, column: 5, scope: !6308)
!6340 = !DILocation(line: 867, column: 19, scope: !6308)
!6341 = !DILocation(line: 867, column: 31, scope: !6308)
!6342 = !DILocation(line: 868, column: 47, scope: !6308)
!6343 = !DILocation(line: 868, column: 5, scope: !6308)
!6344 = !DILocation(line: 868, column: 19, scope: !6308)
!6345 = !DILocation(line: 868, column: 32, scope: !6308)
!6346 = !DILocation(line: 870, column: 5, scope: !6308)
!6347 = !DILocation(line: 871, column: 1, scope: !6308)
!6348 = distinct !DISubprogram(name: "vdma_enable_interrupt", scope: !392, file: !392, line: 873, type: !6127, scopeLine: 874, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !391, retainedNodes: !6349)
!6349 = !{!6350, !6351}
!6350 = !DILocalVariable(name: "channel", arg: 1, scope: !6348, file: !392, line: 873, type: !6130)
!6351 = !DILocalVariable(name: "offset", scope: !6348, file: !392, line: 876, type: !61)
!6352 = !DILocation(line: 0, scope: !6348)
!6353 = !DILocation(line: 878, column: 14, scope: !6348)
!6354 = !DILocation(line: 879, column: 24, scope: !6355)
!6355 = distinct !DILexicalBlock(scope: !6348, file: !392, line: 879, column: 9)
!6356 = !DILocation(line: 879, column: 9, scope: !6348)
!6357 = !DILocation(line: 883, column: 5, scope: !6348)
!6358 = !DILocation(line: 883, column: 19, scope: !6348)
!6359 = !DILocation(line: 883, column: 28, scope: !6348)
!6360 = !DILocation(line: 884, column: 5, scope: !6348)
!6361 = !DILocation(line: 886, column: 1, scope: !6348)
!6362 = distinct !DISubprogram(name: "vdma_start", scope: !392, file: !392, line: 889, type: !6127, scopeLine: 890, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !391, retainedNodes: !6363)
!6363 = !{!6364, !6365, !6366, !6367}
!6364 = !DILocalVariable(name: "channel", arg: 1, scope: !6362, file: !392, line: 889, type: !6130)
!6365 = !DILocalVariable(name: "offset", scope: !6362, file: !392, line: 892, type: !61)
!6366 = !DILocalVariable(name: "saved_mask", scope: !6362, file: !392, line: 893, type: !61)
!6367 = !DILocalVariable(name: "global_status", scope: !6362, file: !392, line: 895, type: !60)
!6368 = !DILocation(line: 0, scope: !6362)
!6369 = !DILocation(line: 895, column: 5, scope: !6362)
!6370 = !DILocation(line: 895, column: 24, scope: !6362)
!6371 = !DILocation(line: 897, column: 14, scope: !6362)
!6372 = !DILocation(line: 898, column: 24, scope: !6373)
!6373 = distinct !DILexicalBlock(scope: !6362, file: !392, line: 898, column: 9)
!6374 = !DILocation(line: 898, column: 9, scope: !6362)
!6375 = !DILocation(line: 902, column: 18, scope: !6362)
!6376 = !DILocation(line: 904, column: 21, scope: !6362)
!6377 = !DILocation(line: 904, column: 42, scope: !6362)
!6378 = !DILocation(line: 904, column: 19, scope: !6362)
!6379 = !DILocation(line: 906, column: 9, scope: !6380)
!6380 = distinct !DILexicalBlock(scope: !6362, file: !392, line: 906, column: 9)
!6381 = !DILocation(line: 906, column: 33, scope: !6380)
!6382 = !DILocation(line: 906, column: 30, scope: !6380)
!6383 = !DILocation(line: 906, column: 23, scope: !6380)
!6384 = !DILocation(line: 906, column: 9, scope: !6362)
!6385 = !DILocation(line: 909, column: 9, scope: !6386)
!6386 = distinct !DILexicalBlock(scope: !6380, file: !392, line: 906, column: 69)
!6387 = !DILocation(line: 910, column: 9, scope: !6386)
!6388 = !DILocation(line: 916, column: 9, scope: !6389)
!6389 = distinct !DILexicalBlock(scope: !6362, file: !392, line: 916, column: 9)
!6390 = !DILocation(line: 916, column: 30, scope: !6389)
!6391 = !DILocation(line: 916, column: 23, scope: !6389)
!6392 = !DILocation(line: 916, column: 9, scope: !6362)
!6393 = !DILocation(line: 925, column: 5, scope: !6362)
!6394 = !DILocation(line: 925, column: 19, scope: !6362)
!6395 = !DILocation(line: 925, column: 30, scope: !6362)
!6396 = !DILocation(line: 926, column: 5, scope: !6362)
!6397 = !DILocation(line: 928, column: 1, scope: !6362)
!6398 = distinct !DISubprogram(name: "vdma_disable_interrupt", scope: !392, file: !392, line: 931, type: !6127, scopeLine: 932, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !391, retainedNodes: !6399)
!6399 = !{!6400, !6401}
!6400 = !DILocalVariable(name: "channel", arg: 1, scope: !6398, file: !392, line: 931, type: !6130)
!6401 = !DILocalVariable(name: "offset", scope: !6398, file: !392, line: 934, type: !61)
!6402 = !DILocation(line: 0, scope: !6398)
!6403 = !DILocation(line: 936, column: 14, scope: !6398)
!6404 = !DILocation(line: 937, column: 24, scope: !6405)
!6405 = distinct !DILexicalBlock(scope: !6398, file: !392, line: 937, column: 9)
!6406 = !DILocation(line: 937, column: 9, scope: !6398)
!6407 = !DILocation(line: 942, column: 5, scope: !6398)
!6408 = !DILocation(line: 942, column: 19, scope: !6398)
!6409 = !DILocation(line: 942, column: 28, scope: !6398)
!6410 = !DILocation(line: 943, column: 5, scope: !6398)
!6411 = !DILocation(line: 944, column: 1, scope: !6398)
!6412 = distinct !DISubprogram(name: "vdma_stop", scope: !392, file: !392, line: 947, type: !6127, scopeLine: 948, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !391, retainedNodes: !6413)
!6413 = !{!6414, !6415}
!6414 = !DILocalVariable(name: "channel", arg: 1, scope: !6412, file: !392, line: 947, type: !6130)
!6415 = !DILocalVariable(name: "offset", scope: !6412, file: !392, line: 950, type: !61)
!6416 = !DILocation(line: 0, scope: !6412)
!6417 = !DILocation(line: 952, column: 14, scope: !6412)
!6418 = !DILocation(line: 953, column: 24, scope: !6419)
!6419 = distinct !DILexicalBlock(scope: !6412, file: !392, line: 953, column: 9)
!6420 = !DILocation(line: 953, column: 9, scope: !6412)
!6421 = !DILocation(line: 957, column: 5, scope: !6412)
!6422 = !DILocation(line: 957, column: 19, scope: !6412)
!6423 = !DILocation(line: 957, column: 30, scope: !6412)
!6424 = !DILocation(line: 958, column: 5, scope: !6412)
!6425 = !DILocation(line: 959, column: 1, scope: !6412)
!6426 = distinct !DISubprogram(name: "vdma_set_threshold", scope: !392, file: !392, line: 961, type: !6427, scopeLine: 963, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !391, retainedNodes: !6429)
!6427 = !DISubroutineType(types: !6428)
!6428 = !{!6129, !6130, !61}
!6429 = !{!6430, !6431, !6432}
!6430 = !DILocalVariable(name: "channel", arg: 1, scope: !6426, file: !392, line: 961, type: !6130)
!6431 = !DILocalVariable(name: "threshold", arg: 2, scope: !6426, file: !392, line: 961, type: !61)
!6432 = !DILocalVariable(name: "offset", scope: !6426, file: !392, line: 965, type: !61)
!6433 = !DILocation(line: 0, scope: !6426)
!6434 = !DILocation(line: 967, column: 14, scope: !6426)
!6435 = !DILocation(line: 968, column: 24, scope: !6436)
!6436 = distinct !DILexicalBlock(scope: !6426, file: !392, line: 968, column: 9)
!6437 = !DILocation(line: 968, column: 9, scope: !6426)
!6438 = !DILocation(line: 972, column: 19, scope: !6439)
!6439 = distinct !DILexicalBlock(scope: !6426, file: !392, line: 972, column: 9)
!6440 = !DILocation(line: 972, column: 9, scope: !6426)
!6441 = !DILocation(line: 975, column: 5, scope: !6426)
!6442 = !DILocation(line: 975, column: 19, scope: !6426)
!6443 = !DILocation(line: 975, column: 30, scope: !6426)
!6444 = !DILocation(line: 977, column: 5, scope: !6426)
!6445 = !DILocation(line: 979, column: 1, scope: !6426)
!6446 = distinct !DISubprogram(name: "vdma_set_alert_length", scope: !392, file: !392, line: 982, type: !6427, scopeLine: 984, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !391, retainedNodes: !6447)
!6447 = !{!6448, !6449, !6450}
!6448 = !DILocalVariable(name: "channel", arg: 1, scope: !6446, file: !392, line: 982, type: !6130)
!6449 = !DILocalVariable(name: "alert_length", arg: 2, scope: !6446, file: !392, line: 982, type: !61)
!6450 = !DILocalVariable(name: "offset", scope: !6446, file: !392, line: 986, type: !61)
!6451 = !DILocation(line: 0, scope: !6446)
!6452 = !DILocation(line: 988, column: 14, scope: !6446)
!6453 = !DILocation(line: 989, column: 24, scope: !6454)
!6454 = distinct !DILexicalBlock(scope: !6446, file: !392, line: 989, column: 9)
!6455 = !DILocation(line: 989, column: 9, scope: !6446)
!6456 = !DILocation(line: 993, column: 22, scope: !6457)
!6457 = distinct !DILexicalBlock(scope: !6446, file: !392, line: 993, column: 9)
!6458 = !DILocation(line: 993, column: 9, scope: !6446)
!6459 = !DILocation(line: 996, column: 5, scope: !6446)
!6460 = !DILocation(line: 996, column: 19, scope: !6446)
!6461 = !DILocation(line: 996, column: 31, scope: !6446)
!6462 = !DILocation(line: 998, column: 5, scope: !6446)
!6463 = !DILocation(line: 1000, column: 1, scope: !6446)
!6464 = distinct !DISubprogram(name: "vdma_push_data", scope: !392, file: !392, line: 1002, type: !6465, scopeLine: 1004, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !391, retainedNodes: !6467)
!6465 = !DISubroutineType(types: !6466)
!6466 = !{!6129, !6130, !159}
!6467 = !{!6468, !6469, !6470}
!6468 = !DILocalVariable(name: "channel", arg: 1, scope: !6464, file: !392, line: 1002, type: !6130)
!6469 = !DILocalVariable(name: "data", arg: 2, scope: !6464, file: !392, line: 1002, type: !159)
!6470 = !DILocalVariable(name: "offset", scope: !6464, file: !392, line: 1007, type: !61)
!6471 = !DILocation(line: 0, scope: !6464)
!6472 = !DILocation(line: 1008, column: 14, scope: !6464)
!6473 = !DILocation(line: 1009, column: 24, scope: !6474)
!6474 = distinct !DILexicalBlock(scope: !6464, file: !392, line: 1009, column: 9)
!6475 = !DILocation(line: 1009, column: 9, scope: !6464)
!6476 = !DILocation(line: 1016, column: 36, scope: !6464)
!6477 = !DILocation(line: 1016, column: 5, scope: !6464)
!6478 = !DILocation(line: 1016, column: 24, scope: !6464)
!6479 = !DILocation(line: 1016, column: 34, scope: !6464)
!6480 = !DILocation(line: 1018, column: 5, scope: !6464)
!6481 = !DILocation(line: 1019, column: 1, scope: !6464)
!6482 = distinct !DISubprogram(name: "vdma_pop_data", scope: !392, file: !392, line: 1021, type: !6483, scopeLine: 1023, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !391, retainedNodes: !6485)
!6483 = !DISubroutineType(types: !6484)
!6484 = !{!6129, !6130, !1055}
!6485 = !{!6486, !6487, !6488}
!6486 = !DILocalVariable(name: "channel", arg: 1, scope: !6482, file: !392, line: 1021, type: !6130)
!6487 = !DILocalVariable(name: "data", arg: 2, scope: !6482, file: !392, line: 1021, type: !1055)
!6488 = !DILocalVariable(name: "offset", scope: !6482, file: !392, line: 1026, type: !61)
!6489 = !DILocation(line: 0, scope: !6482)
!6490 = !DILocation(line: 1028, column: 14, scope: !6482)
!6491 = !DILocation(line: 1029, column: 24, scope: !6492)
!6492 = distinct !DILexicalBlock(scope: !6482, file: !392, line: 1029, column: 9)
!6493 = !DILocation(line: 1029, column: 9, scope: !6482)
!6494 = !DILocation(line: 1036, column: 13, scope: !6482)
!6495 = !DILocation(line: 1036, column: 32, scope: !6482)
!6496 = !DILocation(line: 1036, column: 11, scope: !6482)
!6497 = !DILocation(line: 1038, column: 5, scope: !6482)
!6498 = !DILocation(line: 1039, column: 1, scope: !6482)
!6499 = distinct !DISubprogram(name: "vdma_get_available_receive_bytes", scope: !392, file: !392, line: 1041, type: !6500, scopeLine: 1043, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !391, retainedNodes: !6502)
!6500 = !DISubroutineType(types: !6501)
!6501 = !{!6129, !6130, !1716}
!6502 = !{!6503, !6504, !6505}
!6503 = !DILocalVariable(name: "channel", arg: 1, scope: !6499, file: !392, line: 1041, type: !6130)
!6504 = !DILocalVariable(name: "receive_bytes", arg: 2, scope: !6499, file: !392, line: 1041, type: !1716)
!6505 = !DILocalVariable(name: "offset", scope: !6499, file: !392, line: 1045, type: !61)
!6506 = !DILocation(line: 0, scope: !6499)
!6507 = !DILocation(line: 1047, column: 14, scope: !6499)
!6508 = !DILocation(line: 1048, column: 24, scope: !6509)
!6509 = distinct !DILexicalBlock(scope: !6499, file: !392, line: 1048, column: 9)
!6510 = !DILocation(line: 1048, column: 9, scope: !6499)
!6511 = !DILocation(line: 1052, column: 22, scope: !6499)
!6512 = !DILocation(line: 1052, column: 36, scope: !6499)
!6513 = !DILocation(line: 1052, column: 20, scope: !6499)
!6514 = !DILocation(line: 1054, column: 5, scope: !6499)
!6515 = !DILocation(line: 1056, column: 1, scope: !6499)
!6516 = distinct !DISubprogram(name: "vdma_get_available_send_space", scope: !392, file: !392, line: 1058, type: !6500, scopeLine: 1060, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !391, retainedNodes: !6517)
!6517 = !{!6518, !6519, !6520, !6521, !6522}
!6518 = !DILocalVariable(name: "channel", arg: 1, scope: !6516, file: !392, line: 1058, type: !6130)
!6519 = !DILocalVariable(name: "available_space", arg: 2, scope: !6516, file: !392, line: 1058, type: !1716)
!6520 = !DILocalVariable(name: "offset", scope: !6516, file: !392, line: 1063, type: !61)
!6521 = !DILocalVariable(name: "total_size", scope: !6516, file: !392, line: 1066, type: !61)
!6522 = !DILocalVariable(name: "valid_size", scope: !6516, file: !392, line: 1069, type: !61)
!6523 = !DILocation(line: 0, scope: !6516)
!6524 = !DILocation(line: 1071, column: 14, scope: !6516)
!6525 = !DILocation(line: 1072, column: 24, scope: !6526)
!6526 = distinct !DILexicalBlock(scope: !6516, file: !392, line: 1072, column: 9)
!6527 = !DILocation(line: 1072, column: 9, scope: !6516)
!6528 = !DILocation(line: 1077, column: 18, scope: !6516)
!6529 = !DILocation(line: 1077, column: 32, scope: !6516)
!6530 = !DILocation(line: 1078, column: 32, scope: !6516)
!6531 = !DILocation(line: 1080, column: 35, scope: !6516)
!6532 = !DILocation(line: 1080, column: 22, scope: !6516)
!6533 = !DILocation(line: 1082, column: 5, scope: !6516)
!6534 = !DILocation(line: 1084, column: 1, scope: !6516)
!6535 = distinct !DISubprogram(name: "vdma_register_callback", scope: !392, file: !392, line: 1087, type: !6536, scopeLine: 1089, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !391, retainedNodes: !6538)
!6536 = !DISubroutineType(types: !6537)
!6537 = !{!6129, !6130, !583, !88}
!6538 = !{!6539, !6540, !6541, !6542}
!6539 = !DILocalVariable(name: "channel", arg: 1, scope: !6535, file: !392, line: 1087, type: !6130)
!6540 = !DILocalVariable(name: "callback", arg: 2, scope: !6535, file: !392, line: 1087, type: !583)
!6541 = !DILocalVariable(name: "user_data", arg: 3, scope: !6535, file: !392, line: 1087, type: !88)
!6542 = !DILocalVariable(name: "offset", scope: !6535, file: !392, line: 1091, type: !61)
!6543 = !DILocation(line: 0, scope: !6535)
!6544 = !DILocation(line: 1093, column: 14, scope: !6535)
!6545 = !DILocation(line: 1094, column: 24, scope: !6546)
!6546 = distinct !DILexicalBlock(scope: !6535, file: !392, line: 1094, column: 9)
!6547 = !DILocation(line: 1094, column: 9, scope: !6535)
!6548 = !DILocation(line: 1098, column: 33, scope: !6549)
!6549 = distinct !DILexicalBlock(scope: !6535, file: !392, line: 1098, column: 9)
!6550 = !DILocation(line: 1098, column: 38, scope: !6549)
!6551 = !DILocation(line: 1098, column: 9, scope: !6535)
!6552 = !DILocation(line: 1099, column: 38, scope: !6553)
!6553 = distinct !DILexicalBlock(scope: !6549, file: !392, line: 1098, column: 47)
!6554 = !DILocation(line: 1100, column: 33, scope: !6553)
!6555 = !DILocation(line: 1100, column: 43, scope: !6553)
!6556 = !DILocation(line: 1101, column: 5, scope: !6553)
!6557 = !DILocation(line: 1105, column: 1, scope: !6535)
!6558 = distinct !DISubprogram(name: "is_pin_with_pullsel", scope: !634, file: !634, line: 50, type: !6559, scopeLine: 51, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !633, retainedNodes: !6562)
!6559 = !DISubroutineType(types: !6560)
!6560 = !{!61, !6561}
!6561 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_pin_t", file: !106, line: 390, baseType: !636)
!6562 = !{!6563, !6564, !6565}
!6563 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !6558, file: !634, line: 50, type: !6561)
!6564 = !DILocalVariable(name: "i", scope: !6558, file: !634, line: 52, type: !61)
!6565 = !DILocalVariable(name: "pin_number_with_pullsel", scope: !6558, file: !634, line: 53, type: !1317)
!6566 = !DILocation(line: 0, scope: !6558)
!6567 = !DILocation(line: 53, column: 14, scope: !6558)
!6568 = !DILocation(line: 55, column: 5, scope: !6569)
!6569 = distinct !DILexicalBlock(scope: !6558, file: !634, line: 55, column: 5)
!6570 = !DILocation(line: 55, column: 25, scope: !6571)
!6571 = distinct !DILexicalBlock(scope: !6569, file: !634, line: 55, column: 5)
!6572 = !DILocation(line: 55, column: 19, scope: !6571)
!6573 = distinct !{!6573, !6568, !6574}
!6574 = !DILocation(line: 59, column: 5, scope: !6569)
!6575 = !DILocation(line: 56, column: 13, scope: !6576)
!6576 = distinct !DILexicalBlock(scope: !6577, file: !634, line: 56, column: 13)
!6577 = distinct !DILexicalBlock(scope: !6571, file: !634, line: 55, column: 29)
!6578 = !DILocation(line: 56, column: 40, scope: !6576)
!6579 = !DILocation(line: 56, column: 13, scope: !6577)
!6580 = !DILocation(line: 61, column: 1, scope: !6558)
!6581 = distinct !DISubprogram(name: "hal_gpio_init", scope: !634, file: !634, line: 66, type: !6582, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !633, retainedNodes: !6585)
!6582 = !DISubroutineType(types: !6583)
!6583 = !{!6584, !6561}
!6584 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_status_t", file: !689, line: 229, baseType: !688)
!6585 = !{!6586}
!6586 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !6581, file: !634, line: 66, type: !6561)
!6587 = !DILocation(line: 0, scope: !6581)
!6588 = !DILocation(line: 68, column: 5, scope: !6581)
!6589 = distinct !DISubprogram(name: "hal_gpio_deinit", scope: !634, file: !634, line: 72, type: !6582, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !633, retainedNodes: !6590)
!6590 = !{!6591}
!6591 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !6589, file: !634, line: 72, type: !6561)
!6592 = !DILocation(line: 0, scope: !6589)
!6593 = !DILocation(line: 74, column: 5, scope: !6589)
!6594 = distinct !DISubprogram(name: "hal_gpio_set_direction", scope: !634, file: !634, line: 79, type: !6595, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !633, retainedNodes: !6597)
!6595 = !DISubroutineType(types: !6596)
!6596 = !{!6584, !6561, !730}
!6597 = !{!6598, !6599, !6600, !6601}
!6598 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !6594, file: !634, line: 79, type: !6561)
!6599 = !DILocalVariable(name: "gpio_direction", arg: 2, scope: !6594, file: !634, line: 79, type: !730)
!6600 = !DILocalVariable(name: "no", scope: !6594, file: !634, line: 81, type: !61)
!6601 = !DILocalVariable(name: "remainder", scope: !6594, file: !634, line: 82, type: !61)
!6602 = !DILocation(line: 0, scope: !6594)
!6603 = !DILocation(line: 84, column: 18, scope: !6604)
!6604 = distinct !DILexicalBlock(scope: !6594, file: !634, line: 84, column: 9)
!6605 = !DILocation(line: 84, column: 9, scope: !6594)
!6606 = !DILocation(line: 89, column: 19, scope: !6594)
!6607 = !DILocation(line: 92, column: 26, scope: !6594)
!6608 = !DILocation(line: 94, column: 24, scope: !6609)
!6609 = distinct !DILexicalBlock(scope: !6594, file: !634, line: 94, column: 9)
!6610 = !DILocation(line: 0, scope: !6609)
!6611 = !DILocation(line: 94, column: 9, scope: !6594)
!6612 = !DILocation(line: 101, column: 1, scope: !6594)
!6613 = distinct !DISubprogram(name: "hal_gpio_get_direction", scope: !634, file: !634, line: 105, type: !6614, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !633, retainedNodes: !6617)
!6614 = !DISubroutineType(types: !6615)
!6615 = !{!6584, !6561, !6616}
!6616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !730, size: 32)
!6617 = !{!6618, !6619, !6620, !6621, !6622}
!6618 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !6613, file: !634, line: 105, type: !6561)
!6619 = !DILocalVariable(name: "gpio_direction", arg: 2, scope: !6613, file: !634, line: 105, type: !6616)
!6620 = !DILocalVariable(name: "no", scope: !6613, file: !634, line: 107, type: !61)
!6621 = !DILocalVariable(name: "remainder", scope: !6613, file: !634, line: 108, type: !61)
!6622 = !DILocalVariable(name: "temp", scope: !6613, file: !634, line: 109, type: !61)
!6623 = !DILocation(line: 0, scope: !6613)
!6624 = !DILocation(line: 111, column: 18, scope: !6625)
!6625 = distinct !DILexicalBlock(scope: !6613, file: !634, line: 111, column: 9)
!6626 = !DILocation(line: 111, column: 9, scope: !6613)
!6627 = !DILocation(line: 115, column: 14, scope: !6628)
!6628 = distinct !DILexicalBlock(scope: !6613, file: !634, line: 115, column: 9)
!6629 = !DILocation(line: 115, column: 9, scope: !6613)
!6630 = !DILocation(line: 120, column: 19, scope: !6613)
!6631 = !DILocation(line: 123, column: 26, scope: !6613)
!6632 = !DILocation(line: 125, column: 12, scope: !6613)
!6633 = !DILocation(line: 125, column: 54, scope: !6613)
!6634 = !DILocation(line: 126, column: 45, scope: !6613)
!6635 = !DILocation(line: 126, column: 17, scope: !6613)
!6636 = !DILocation(line: 127, column: 51, scope: !6613)
!6637 = !DILocation(line: 127, column: 21, scope: !6613)
!6638 = !DILocation(line: 128, column: 5, scope: !6613)
!6639 = !DILocation(line: 130, column: 1, scope: !6613)
!6640 = distinct !DISubprogram(name: "hal_pinmux_set_function", scope: !634, file: !634, line: 134, type: !6641, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !633, retainedNodes: !6644)
!6641 = !DISubroutineType(types: !6642)
!6642 = !{!6643, !6561, !159}
!6643 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_pinmux_status_t", file: !689, line: 238, baseType: !699)
!6644 = !{!6645, !6646, !6647, !6648, !6649}
!6645 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !6640, file: !634, line: 134, type: !6561)
!6646 = !DILocalVariable(name: "function_index", arg: 2, scope: !6640, file: !634, line: 134, type: !159)
!6647 = !DILocalVariable(name: "no", scope: !6640, file: !634, line: 136, type: !61)
!6648 = !DILocalVariable(name: "remainder", scope: !6640, file: !634, line: 137, type: !61)
!6649 = !DILocalVariable(name: "irq_status", scope: !6640, file: !634, line: 138, type: !61)
!6650 = !DILocation(line: 0, scope: !6640)
!6651 = !DILocation(line: 140, column: 18, scope: !6652)
!6652 = distinct !DILexicalBlock(scope: !6640, file: !634, line: 140, column: 9)
!6653 = !DILocation(line: 140, column: 9, scope: !6640)
!6654 = !DILocation(line: 145, column: 24, scope: !6655)
!6655 = distinct !DILexicalBlock(scope: !6640, file: !634, line: 145, column: 9)
!6656 = !DILocation(line: 145, column: 9, scope: !6640)
!6657 = !DILocation(line: 145, column: 9, scope: !6655)
!6658 = !DILocation(line: 150, column: 19, scope: !6640)
!6659 = !DILocation(line: 156, column: 18, scope: !6640)
!6660 = !DILocation(line: 157, column: 105, scope: !6640)
!6661 = !DILocation(line: 157, column: 91, scope: !6640)
!6662 = !DILocation(line: 157, column: 5, scope: !6640)
!6663 = !DILocation(line: 157, column: 48, scope: !6640)
!6664 = !DILocation(line: 157, column: 62, scope: !6640)
!6665 = !DILocation(line: 158, column: 80, scope: !6640)
!6666 = !DILocation(line: 158, column: 5, scope: !6640)
!6667 = !DILocation(line: 158, column: 48, scope: !6640)
!6668 = !DILocation(line: 158, column: 62, scope: !6640)
!6669 = !DILocation(line: 159, column: 5, scope: !6640)
!6670 = !DILocation(line: 160, column: 5, scope: !6640)
!6671 = !DILocation(line: 162, column: 1, scope: !6640)
!6672 = distinct !DISubprogram(name: "hal_gpio_get_input", scope: !634, file: !634, line: 166, type: !6673, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !633, retainedNodes: !6676)
!6673 = !DISubroutineType(types: !6674)
!6674 = !{!6584, !6561, !6675}
!6675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !731, size: 32)
!6676 = !{!6677, !6678, !6679, !6680, !6681}
!6677 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !6672, file: !634, line: 166, type: !6561)
!6678 = !DILocalVariable(name: "gpio_data", arg: 2, scope: !6672, file: !634, line: 166, type: !6675)
!6679 = !DILocalVariable(name: "no", scope: !6672, file: !634, line: 168, type: !61)
!6680 = !DILocalVariable(name: "remainder", scope: !6672, file: !634, line: 169, type: !61)
!6681 = !DILocalVariable(name: "temp", scope: !6672, file: !634, line: 170, type: !61)
!6682 = !DILocation(line: 0, scope: !6672)
!6683 = !DILocation(line: 172, column: 18, scope: !6684)
!6684 = distinct !DILexicalBlock(scope: !6672, file: !634, line: 172, column: 9)
!6685 = !DILocation(line: 172, column: 9, scope: !6672)
!6686 = !DILocation(line: 176, column: 14, scope: !6687)
!6687 = distinct !DILexicalBlock(scope: !6672, file: !634, line: 176, column: 9)
!6688 = !DILocation(line: 176, column: 9, scope: !6672)
!6689 = !DILocation(line: 181, column: 19, scope: !6672)
!6690 = !DILocation(line: 184, column: 26, scope: !6672)
!6691 = !DILocation(line: 186, column: 12, scope: !6672)
!6692 = !DILocation(line: 186, column: 54, scope: !6672)
!6693 = !DILocation(line: 187, column: 45, scope: !6672)
!6694 = !DILocation(line: 187, column: 17, scope: !6672)
!6695 = !DILocation(line: 188, column: 41, scope: !6672)
!6696 = !DILocation(line: 188, column: 16, scope: !6672)
!6697 = !DILocation(line: 189, column: 5, scope: !6672)
!6698 = !DILocation(line: 191, column: 1, scope: !6672)
!6699 = distinct !DISubprogram(name: "hal_gpio_set_output", scope: !634, file: !634, line: 195, type: !6700, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !633, retainedNodes: !6702)
!6700 = !DISubroutineType(types: !6701)
!6701 = !{!6584, !6561, !731}
!6702 = !{!6703, !6704, !6705, !6706}
!6703 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !6699, file: !634, line: 195, type: !6561)
!6704 = !DILocalVariable(name: "gpio_data", arg: 2, scope: !6699, file: !634, line: 195, type: !731)
!6705 = !DILocalVariable(name: "no", scope: !6699, file: !634, line: 197, type: !61)
!6706 = !DILocalVariable(name: "remainder", scope: !6699, file: !634, line: 198, type: !61)
!6707 = !DILocation(line: 0, scope: !6699)
!6708 = !DILocation(line: 200, column: 18, scope: !6709)
!6709 = distinct !DILexicalBlock(scope: !6699, file: !634, line: 200, column: 9)
!6710 = !DILocation(line: 200, column: 9, scope: !6699)
!6711 = !DILocation(line: 205, column: 19, scope: !6699)
!6712 = !DILocation(line: 208, column: 26, scope: !6699)
!6713 = !DILocation(line: 210, column: 9, scope: !6714)
!6714 = distinct !DILexicalBlock(scope: !6699, file: !634, line: 210, column: 9)
!6715 = !DILocation(line: 0, scope: !6714)
!6716 = !DILocation(line: 210, column: 9, scope: !6699)
!6717 = !DILocation(line: 216, column: 1, scope: !6699)
!6718 = distinct !DISubprogram(name: "hal_gpio_get_output", scope: !634, file: !634, line: 220, type: !6673, scopeLine: 221, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !633, retainedNodes: !6719)
!6719 = !{!6720, !6721, !6722, !6723, !6724}
!6720 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !6718, file: !634, line: 220, type: !6561)
!6721 = !DILocalVariable(name: "gpio_data", arg: 2, scope: !6718, file: !634, line: 220, type: !6675)
!6722 = !DILocalVariable(name: "no", scope: !6718, file: !634, line: 222, type: !61)
!6723 = !DILocalVariable(name: "remainder", scope: !6718, file: !634, line: 223, type: !61)
!6724 = !DILocalVariable(name: "temp", scope: !6718, file: !634, line: 224, type: !61)
!6725 = !DILocation(line: 0, scope: !6718)
!6726 = !DILocation(line: 226, column: 18, scope: !6727)
!6727 = distinct !DILexicalBlock(scope: !6718, file: !634, line: 226, column: 9)
!6728 = !DILocation(line: 226, column: 9, scope: !6718)
!6729 = !DILocation(line: 230, column: 14, scope: !6730)
!6730 = distinct !DILexicalBlock(scope: !6718, file: !634, line: 230, column: 9)
!6731 = !DILocation(line: 230, column: 9, scope: !6718)
!6732 = !DILocation(line: 235, column: 19, scope: !6718)
!6733 = !DILocation(line: 238, column: 26, scope: !6718)
!6734 = !DILocation(line: 240, column: 12, scope: !6718)
!6735 = !DILocation(line: 240, column: 55, scope: !6718)
!6736 = !DILocation(line: 241, column: 45, scope: !6718)
!6737 = !DILocation(line: 241, column: 17, scope: !6718)
!6738 = !DILocation(line: 242, column: 41, scope: !6718)
!6739 = !DILocation(line: 242, column: 16, scope: !6718)
!6740 = !DILocation(line: 243, column: 5, scope: !6718)
!6741 = !DILocation(line: 245, column: 1, scope: !6718)
!6742 = distinct !DISubprogram(name: "hal_gpio_toggle_pin", scope: !634, file: !634, line: 249, type: !6582, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !633, retainedNodes: !6743)
!6743 = !{!6744, !6745, !6746, !6747}
!6744 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !6742, file: !634, line: 249, type: !6561)
!6745 = !DILocalVariable(name: "no", scope: !6742, file: !634, line: 251, type: !61)
!6746 = !DILocalVariable(name: "remainder", scope: !6742, file: !634, line: 252, type: !61)
!6747 = !DILocalVariable(name: "temp", scope: !6742, file: !634, line: 253, type: !61)
!6748 = !DILocation(line: 0, scope: !6742)
!6749 = !DILocation(line: 255, column: 18, scope: !6750)
!6750 = distinct !DILexicalBlock(scope: !6742, file: !634, line: 255, column: 9)
!6751 = !DILocation(line: 255, column: 9, scope: !6742)
!6752 = !DILocation(line: 260, column: 19, scope: !6742)
!6753 = !DILocation(line: 263, column: 26, scope: !6742)
!6754 = !DILocation(line: 265, column: 12, scope: !6742)
!6755 = !DILocation(line: 265, column: 55, scope: !6742)
!6756 = !DILocation(line: 266, column: 45, scope: !6742)
!6757 = !DILocation(line: 266, column: 17, scope: !6742)
!6758 = !DILocation(line: 267, column: 15, scope: !6759)
!6759 = distinct !DILexicalBlock(scope: !6742, file: !634, line: 267, column: 9)
!6760 = !DILocation(line: 267, column: 9, scope: !6742)
!6761 = !DILocation(line: 0, scope: !6759)
!6762 = !DILocation(line: 273, column: 1, scope: !6742)
!6763 = distinct !DISubprogram(name: "hal_gpio_enable_inversion", scope: !634, file: !634, line: 278, type: !6582, scopeLine: 279, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !633, retainedNodes: !6764)
!6764 = !{!6765, !6766, !6767}
!6765 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !6763, file: !634, line: 278, type: !6561)
!6766 = !DILocalVariable(name: "no", scope: !6763, file: !634, line: 280, type: !61)
!6767 = !DILocalVariable(name: "remainder", scope: !6763, file: !634, line: 281, type: !61)
!6768 = !DILocation(line: 0, scope: !6763)
!6769 = !DILocation(line: 283, column: 18, scope: !6770)
!6770 = distinct !DILexicalBlock(scope: !6763, file: !634, line: 283, column: 9)
!6771 = !DILocation(line: 283, column: 9, scope: !6763)
!6772 = !DILocation(line: 288, column: 19, scope: !6763)
!6773 = !DILocation(line: 291, column: 26, scope: !6763)
!6774 = !DILocation(line: 293, column: 90, scope: !6763)
!6775 = !DILocation(line: 293, column: 5, scope: !6763)
!6776 = !DILocation(line: 293, column: 48, scope: !6763)
!6777 = !DILocation(line: 293, column: 62, scope: !6763)
!6778 = !DILocation(line: 294, column: 5, scope: !6763)
!6779 = !DILocation(line: 295, column: 1, scope: !6763)
!6780 = distinct !DISubprogram(name: "hal_gpio_disable_inversion", scope: !634, file: !634, line: 299, type: !6582, scopeLine: 300, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !633, retainedNodes: !6781)
!6781 = !{!6782, !6783, !6784}
!6782 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !6780, file: !634, line: 299, type: !6561)
!6783 = !DILocalVariable(name: "no", scope: !6780, file: !634, line: 301, type: !61)
!6784 = !DILocalVariable(name: "remainder", scope: !6780, file: !634, line: 302, type: !61)
!6785 = !DILocation(line: 0, scope: !6780)
!6786 = !DILocation(line: 304, column: 18, scope: !6787)
!6787 = distinct !DILexicalBlock(scope: !6780, file: !634, line: 304, column: 9)
!6788 = !DILocation(line: 304, column: 9, scope: !6780)
!6789 = !DILocation(line: 309, column: 19, scope: !6780)
!6790 = !DILocation(line: 312, column: 26, scope: !6780)
!6791 = !DILocation(line: 314, column: 90, scope: !6780)
!6792 = !DILocation(line: 314, column: 5, scope: !6780)
!6793 = !DILocation(line: 314, column: 48, scope: !6780)
!6794 = !DILocation(line: 314, column: 62, scope: !6780)
!6795 = !DILocation(line: 315, column: 5, scope: !6780)
!6796 = !DILocation(line: 316, column: 1, scope: !6780)
!6797 = distinct !DISubprogram(name: "hal_gpio_pull_up", scope: !634, file: !634, line: 321, type: !6582, scopeLine: 322, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !633, retainedNodes: !6798)
!6798 = !{!6799, !6800, !6801}
!6799 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !6797, file: !634, line: 321, type: !6561)
!6800 = !DILocalVariable(name: "no", scope: !6797, file: !634, line: 323, type: !61)
!6801 = !DILocalVariable(name: "remainder", scope: !6797, file: !634, line: 324, type: !61)
!6802 = !DILocation(line: 0, scope: !6797)
!6803 = !DILocation(line: 326, column: 19, scope: !6804)
!6804 = distinct !DILexicalBlock(scope: !6797, file: !634, line: 326, column: 9)
!6805 = !DILocation(line: 326, column: 36, scope: !6804)
!6806 = !DILocation(line: 326, column: 41, scope: !6804)
!6807 = !DILocation(line: 326, column: 9, scope: !6797)
!6808 = !DILocation(line: 331, column: 19, scope: !6797)
!6809 = !DILocation(line: 334, column: 26, scope: !6797)
!6810 = !DILocation(line: 336, column: 94, scope: !6797)
!6811 = !DILocation(line: 336, column: 5, scope: !6797)
!6812 = !DILocation(line: 336, column: 50, scope: !6797)
!6813 = !DILocation(line: 336, column: 66, scope: !6797)
!6814 = !DILocation(line: 337, column: 5, scope: !6797)
!6815 = !DILocation(line: 337, column: 51, scope: !6797)
!6816 = !DILocation(line: 337, column: 68, scope: !6797)
!6817 = !DILocation(line: 338, column: 5, scope: !6797)
!6818 = !DILocation(line: 339, column: 1, scope: !6797)
!6819 = distinct !DISubprogram(name: "hal_gpio_pull_down", scope: !634, file: !634, line: 343, type: !6582, scopeLine: 344, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !633, retainedNodes: !6820)
!6820 = !{!6821, !6822, !6823}
!6821 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !6819, file: !634, line: 343, type: !6561)
!6822 = !DILocalVariable(name: "no", scope: !6819, file: !634, line: 345, type: !61)
!6823 = !DILocalVariable(name: "remainder", scope: !6819, file: !634, line: 346, type: !61)
!6824 = !DILocation(line: 0, scope: !6819)
!6825 = !DILocation(line: 348, column: 19, scope: !6826)
!6826 = distinct !DILexicalBlock(scope: !6819, file: !634, line: 348, column: 9)
!6827 = !DILocation(line: 348, column: 36, scope: !6826)
!6828 = !DILocation(line: 348, column: 41, scope: !6826)
!6829 = !DILocation(line: 348, column: 9, scope: !6819)
!6830 = !DILocation(line: 353, column: 19, scope: !6819)
!6831 = !DILocation(line: 356, column: 26, scope: !6819)
!6832 = !DILocation(line: 358, column: 94, scope: !6819)
!6833 = !DILocation(line: 358, column: 5, scope: !6819)
!6834 = !DILocation(line: 358, column: 50, scope: !6819)
!6835 = !DILocation(line: 358, column: 66, scope: !6819)
!6836 = !DILocation(line: 359, column: 5, scope: !6819)
!6837 = !DILocation(line: 359, column: 51, scope: !6819)
!6838 = !DILocation(line: 359, column: 68, scope: !6819)
!6839 = !DILocation(line: 360, column: 5, scope: !6819)
!6840 = !DILocation(line: 361, column: 1, scope: !6819)
!6841 = distinct !DISubprogram(name: "hal_gpio_disable_pull", scope: !634, file: !634, line: 365, type: !6582, scopeLine: 366, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !633, retainedNodes: !6842)
!6842 = !{!6843, !6844, !6845}
!6843 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !6841, file: !634, line: 365, type: !6561)
!6844 = !DILocalVariable(name: "no", scope: !6841, file: !634, line: 367, type: !61)
!6845 = !DILocalVariable(name: "remainder", scope: !6841, file: !634, line: 368, type: !61)
!6846 = !DILocation(line: 0, scope: !6841)
!6847 = !DILocation(line: 370, column: 19, scope: !6848)
!6848 = distinct !DILexicalBlock(scope: !6841, file: !634, line: 370, column: 9)
!6849 = !DILocation(line: 370, column: 36, scope: !6848)
!6850 = !DILocation(line: 370, column: 41, scope: !6848)
!6851 = !DILocation(line: 370, column: 9, scope: !6841)
!6852 = !DILocation(line: 375, column: 19, scope: !6841)
!6853 = !DILocation(line: 378, column: 26, scope: !6841)
!6854 = !DILocation(line: 380, column: 94, scope: !6841)
!6855 = !DILocation(line: 380, column: 5, scope: !6841)
!6856 = !DILocation(line: 380, column: 50, scope: !6841)
!6857 = !DILocation(line: 380, column: 66, scope: !6841)
!6858 = !DILocation(line: 381, column: 5, scope: !6841)
!6859 = !DILocation(line: 382, column: 1, scope: !6841)
!6860 = distinct !DISubprogram(name: "hal_gpio_set_clockout", scope: !634, file: !634, line: 387, type: !6861, scopeLine: 388, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !633, retainedNodes: !6865)
!6861 = !DISubroutineType(types: !6862)
!6862 = !{!6584, !6863, !6864}
!6863 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_clock_t", file: !106, line: 423, baseType: !709)
!6864 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_clock_mode_t", file: !106, line: 431, baseType: !718)
!6865 = !{!6866, !6867}
!6866 = !DILocalVariable(name: "gpio_clock_num", arg: 1, scope: !6860, file: !634, line: 387, type: !6863)
!6867 = !DILocalVariable(name: "clock_mode", arg: 2, scope: !6860, file: !634, line: 387, type: !6864)
!6868 = !DILocation(line: 0, scope: !6860)
!6869 = !DILocation(line: 390, column: 24, scope: !6870)
!6870 = distinct !DILexicalBlock(scope: !6860, file: !634, line: 390, column: 9)
!6871 = !DILocation(line: 390, column: 9, scope: !6860)
!6872 = !DILocation(line: 394, column: 5, scope: !6860)
!6873 = !DILocation(line: 394, column: 62, scope: !6860)
!6874 = !DILocation(line: 394, column: 74, scope: !6860)
!6875 = !DILocation(line: 395, column: 5, scope: !6860)
!6876 = !DILocation(line: 396, column: 1, scope: !6860)
!6877 = distinct !DISubprogram(name: "hal_gpio_set_pupd_register", scope: !634, file: !634, line: 403, type: !6878, scopeLine: 404, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !633, retainedNodes: !6880)
!6878 = !DISubroutineType(types: !6879)
!6879 = !{!6584, !6561, !159, !159, !159}
!6880 = !{!6881, !6882, !6883, !6884, !6885, !6886}
!6881 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !6877, file: !634, line: 403, type: !6561)
!6882 = !DILocalVariable(name: "gpio_pupd", arg: 2, scope: !6877, file: !634, line: 403, type: !159)
!6883 = !DILocalVariable(name: "gpio_r0", arg: 3, scope: !6877, file: !634, line: 403, type: !159)
!6884 = !DILocalVariable(name: "gpio_r1", arg: 4, scope: !6877, file: !634, line: 403, type: !159)
!6885 = !DILocalVariable(name: "no", scope: !6877, file: !634, line: 405, type: !61)
!6886 = !DILocalVariable(name: "remainder", scope: !6877, file: !634, line: 406, type: !61)
!6887 = !DILocation(line: 0, scope: !6877)
!6888 = !DILocation(line: 408, column: 19, scope: !6889)
!6889 = distinct !DILexicalBlock(scope: !6877, file: !634, line: 408, column: 9)
!6890 = !DILocation(line: 408, column: 36, scope: !6889)
!6891 = !DILocation(line: 408, column: 40, scope: !6889)
!6892 = !DILocation(line: 408, column: 9, scope: !6877)
!6893 = !DILocation(line: 413, column: 19, scope: !6877)
!6894 = !DILocation(line: 416, column: 26, scope: !6877)
!6895 = !DILocation(line: 418, column: 9, scope: !6896)
!6896 = distinct !DILexicalBlock(scope: !6877, file: !634, line: 418, column: 9)
!6897 = !DILocation(line: 0, scope: !6896)
!6898 = !DILocation(line: 418, column: 9, scope: !6877)
!6899 = !DILocation(line: 424, column: 9, scope: !6900)
!6900 = distinct !DILexicalBlock(scope: !6877, file: !634, line: 424, column: 9)
!6901 = !DILocation(line: 0, scope: !6900)
!6902 = !DILocation(line: 424, column: 9, scope: !6877)
!6903 = !DILocation(line: 430, column: 9, scope: !6904)
!6904 = distinct !DILexicalBlock(scope: !6877, file: !634, line: 430, column: 9)
!6905 = !DILocation(line: 0, scope: !6904)
!6906 = !DILocation(line: 430, column: 9, scope: !6877)
!6907 = !DILocation(line: 436, column: 1, scope: !6877)
!6908 = distinct !DISubprogram(name: "hal_gpio_set_high_impedance", scope: !634, file: !634, line: 441, type: !6582, scopeLine: 442, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !633, retainedNodes: !6909)
!6909 = !{!6910, !6911, !6912, !6913, !6914, !6915, !6916}
!6910 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !6908, file: !634, line: 441, type: !6561)
!6911 = !DILocalVariable(name: "no1", scope: !6908, file: !634, line: 443, type: !61)
!6912 = !DILocalVariable(name: "no2", scope: !6908, file: !634, line: 443, type: !61)
!6913 = !DILocalVariable(name: "no3", scope: !6908, file: !634, line: 443, type: !61)
!6914 = !DILocalVariable(name: "remainder1", scope: !6908, file: !634, line: 444, type: !61)
!6915 = !DILocalVariable(name: "remainder2", scope: !6908, file: !634, line: 444, type: !61)
!6916 = !DILocalVariable(name: "remainder3", scope: !6908, file: !634, line: 444, type: !61)
!6917 = !DILocation(line: 0, scope: !6908)
!6918 = !DILocation(line: 446, column: 18, scope: !6919)
!6919 = distinct !DILexicalBlock(scope: !6908, file: !634, line: 446, column: 9)
!6920 = !DILocation(line: 446, column: 9, scope: !6908)
!6921 = !DILocation(line: 451, column: 20, scope: !6908)
!6922 = !DILocation(line: 454, column: 27, scope: !6908)
!6923 = !DILocation(line: 457, column: 20, scope: !6908)
!6924 = !DILocation(line: 463, column: 20, scope: !6908)
!6925 = !DILocation(line: 469, column: 107, scope: !6908)
!6926 = !DILocation(line: 469, column: 92, scope: !6908)
!6927 = !DILocation(line: 469, column: 5, scope: !6908)
!6928 = !DILocation(line: 469, column: 49, scope: !6908)
!6929 = !DILocation(line: 469, column: 63, scope: !6908)
!6930 = !DILocation(line: 472, column: 89, scope: !6908)
!6931 = !DILocation(line: 472, column: 5, scope: !6908)
!6932 = !DILocation(line: 472, column: 48, scope: !6908)
!6933 = !DILocation(line: 472, column: 61, scope: !6908)
!6934 = !DILocation(line: 475, column: 5, scope: !6908)
!6935 = !DILocation(line: 475, column: 48, scope: !6908)
!6936 = !DILocation(line: 475, column: 61, scope: !6908)
!6937 = !DILocation(line: 478, column: 9, scope: !6938)
!6938 = distinct !DILexicalBlock(scope: !6908, file: !634, line: 478, column: 9)
!6939 = !DILocation(line: 0, scope: !6938)
!6940 = !DILocation(line: 478, column: 9, scope: !6908)
!6941 = !DILocation(line: 479, column: 55, scope: !6942)
!6942 = distinct !DILexicalBlock(scope: !6938, file: !634, line: 478, column: 40)
!6943 = !DILocation(line: 480, column: 5, scope: !6942)
!6944 = !DILocation(line: 483, column: 53, scope: !6945)
!6945 = distinct !DILexicalBlock(scope: !6938, file: !634, line: 482, column: 10)
!6946 = !DILocation(line: 483, column: 67, scope: !6945)
!6947 = !DILocation(line: 484, column: 9, scope: !6945)
!6948 = !DILocation(line: 484, column: 55, scope: !6945)
!6949 = !DILocation(line: 484, column: 71, scope: !6945)
!6950 = !DILocation(line: 485, column: 9, scope: !6945)
!6951 = !DILocation(line: 485, column: 55, scope: !6945)
!6952 = !DILocation(line: 490, column: 5, scope: !6908)
!6953 = !DILocation(line: 490, column: 48, scope: !6908)
!6954 = !DILocation(line: 490, column: 61, scope: !6908)
!6955 = !DILocation(line: 493, column: 5, scope: !6908)
!6956 = !DILocation(line: 493, column: 47, scope: !6908)
!6957 = !DILocation(line: 493, column: 59, scope: !6908)
!6958 = !DILocation(line: 496, column: 108, scope: !6908)
!6959 = !DILocation(line: 496, column: 93, scope: !6908)
!6960 = !DILocation(line: 496, column: 5, scope: !6908)
!6961 = !DILocation(line: 496, column: 50, scope: !6908)
!6962 = !DILocation(line: 496, column: 65, scope: !6908)
!6963 = !DILocation(line: 498, column: 5, scope: !6908)
!6964 = !DILocation(line: 499, column: 1, scope: !6908)
!6965 = distinct !DISubprogram(name: "hal_gpio_clear_high_impedance", scope: !634, file: !634, line: 502, type: !6582, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !633, retainedNodes: !6966)
!6966 = !{!6967, !6968, !6969, !6970, !6971}
!6967 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !6965, file: !634, line: 502, type: !6561)
!6968 = !DILocalVariable(name: "no1", scope: !6965, file: !634, line: 504, type: !61)
!6969 = !DILocalVariable(name: "no2", scope: !6965, file: !634, line: 504, type: !61)
!6970 = !DILocalVariable(name: "remainder1", scope: !6965, file: !634, line: 505, type: !61)
!6971 = !DILocalVariable(name: "remainder2", scope: !6965, file: !634, line: 505, type: !61)
!6972 = !DILocation(line: 0, scope: !6965)
!6973 = !DILocation(line: 507, column: 18, scope: !6974)
!6974 = distinct !DILexicalBlock(scope: !6965, file: !634, line: 507, column: 9)
!6975 = !DILocation(line: 507, column: 9, scope: !6965)
!6976 = !DILocation(line: 512, column: 20, scope: !6965)
!6977 = !DILocation(line: 515, column: 27, scope: !6965)
!6978 = !DILocation(line: 518, column: 20, scope: !6965)
!6979 = !DILocation(line: 524, column: 107, scope: !6965)
!6980 = !DILocation(line: 524, column: 92, scope: !6965)
!6981 = !DILocation(line: 524, column: 5, scope: !6965)
!6982 = !DILocation(line: 524, column: 49, scope: !6965)
!6983 = !DILocation(line: 524, column: 63, scope: !6965)
!6984 = !DILocation(line: 527, column: 89, scope: !6965)
!6985 = !DILocation(line: 527, column: 5, scope: !6965)
!6986 = !DILocation(line: 527, column: 48, scope: !6965)
!6987 = !DILocation(line: 527, column: 61, scope: !6965)
!6988 = !DILocation(line: 530, column: 9, scope: !6989)
!6989 = distinct !DILexicalBlock(scope: !6965, file: !634, line: 530, column: 9)
!6990 = !DILocation(line: 0, scope: !6989)
!6991 = !DILocation(line: 530, column: 9, scope: !6965)
!6992 = !DILocation(line: 531, column: 55, scope: !6993)
!6993 = distinct !DILexicalBlock(scope: !6989, file: !634, line: 530, column: 40)
!6994 = !DILocation(line: 531, column: 71, scope: !6993)
!6995 = !DILocation(line: 532, column: 9, scope: !6993)
!6996 = !DILocation(line: 532, column: 56, scope: !6993)
!6997 = !DILocation(line: 533, column: 5, scope: !6993)
!6998 = !DILocation(line: 536, column: 53, scope: !6999)
!6999 = distinct !DILexicalBlock(scope: !6989, file: !634, line: 535, column: 10)
!7000 = !DILocation(line: 536, column: 67, scope: !6999)
!7001 = !DILocation(line: 537, column: 9, scope: !6999)
!7002 = !DILocation(line: 537, column: 55, scope: !6999)
!7003 = !DILocation(line: 537, column: 71, scope: !6999)
!7004 = !DILocation(line: 538, column: 9, scope: !6999)
!7005 = !DILocation(line: 538, column: 55, scope: !6999)
!7006 = !DILocation(line: 543, column: 5, scope: !6965)
!7007 = !DILocation(line: 543, column: 48, scope: !6965)
!7008 = !DILocation(line: 543, column: 61, scope: !6965)
!7009 = !DILocation(line: 546, column: 5, scope: !6965)
!7010 = !DILocation(line: 546, column: 47, scope: !6965)
!7011 = !DILocation(line: 546, column: 59, scope: !6965)
!7012 = !DILocation(line: 549, column: 5, scope: !6965)
!7013 = !DILocation(line: 550, column: 1, scope: !6965)
!7014 = distinct !DISubprogram(name: "hal_gpio_set_driving_current", scope: !634, file: !634, line: 554, type: !7015, scopeLine: 555, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !633, retainedNodes: !7017)
!7015 = !DISubroutineType(types: !7016)
!7016 = !{!6584, !6561, !732}
!7017 = !{!7018, !7019, !7020, !7021}
!7018 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !7014, file: !634, line: 554, type: !6561)
!7019 = !DILocalVariable(name: "driving", arg: 2, scope: !7014, file: !634, line: 554, type: !732)
!7020 = !DILocalVariable(name: "no", scope: !7014, file: !634, line: 556, type: !61)
!7021 = !DILocalVariable(name: "remainder", scope: !7014, file: !634, line: 557, type: !61)
!7022 = !DILocation(line: 0, scope: !7014)
!7023 = !DILocation(line: 559, column: 19, scope: !7024)
!7024 = distinct !DILexicalBlock(scope: !7014, file: !634, line: 559, column: 9)
!7025 = !DILocation(line: 559, column: 9, scope: !7014)
!7026 = !DILocation(line: 564, column: 19, scope: !7014)
!7027 = !DILocation(line: 569, column: 102, scope: !7014)
!7028 = !DILocation(line: 569, column: 88, scope: !7014)
!7029 = !DILocation(line: 569, column: 5, scope: !7014)
!7030 = !DILocation(line: 569, column: 47, scope: !7014)
!7031 = !DILocation(line: 569, column: 60, scope: !7014)
!7032 = !DILocation(line: 570, column: 71, scope: !7014)
!7033 = !DILocation(line: 570, column: 5, scope: !7014)
!7034 = !DILocation(line: 570, column: 47, scope: !7014)
!7035 = !DILocation(line: 570, column: 60, scope: !7014)
!7036 = !DILocation(line: 571, column: 5, scope: !7014)
!7037 = !DILocation(line: 572, column: 1, scope: !7014)
!7038 = distinct !DISubprogram(name: "hal_gpio_get_driving_current", scope: !634, file: !634, line: 575, type: !7039, scopeLine: 576, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !633, retainedNodes: !7042)
!7039 = !DISubroutineType(types: !7040)
!7040 = !{!6584, !6561, !7041}
!7041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !732, size: 32)
!7042 = !{!7043, !7044, !7045, !7046, !7047}
!7043 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !7038, file: !634, line: 575, type: !6561)
!7044 = !DILocalVariable(name: "driving", arg: 2, scope: !7038, file: !634, line: 575, type: !7041)
!7045 = !DILocalVariable(name: "no", scope: !7038, file: !634, line: 577, type: !61)
!7046 = !DILocalVariable(name: "remainder", scope: !7038, file: !634, line: 578, type: !61)
!7047 = !DILocalVariable(name: "temp", scope: !7038, file: !634, line: 579, type: !61)
!7048 = !DILocation(line: 0, scope: !7038)
!7049 = !DILocation(line: 581, column: 19, scope: !7050)
!7050 = distinct !DILexicalBlock(scope: !7038, file: !634, line: 581, column: 9)
!7051 = !DILocation(line: 581, column: 9, scope: !7038)
!7052 = !DILocation(line: 585, column: 14, scope: !7053)
!7053 = distinct !DILexicalBlock(scope: !7038, file: !634, line: 585, column: 9)
!7054 = !DILocation(line: 585, column: 9, scope: !7038)
!7055 = !DILocation(line: 590, column: 19, scope: !7038)
!7056 = !DILocation(line: 595, column: 12, scope: !7038)
!7057 = !DILocation(line: 595, column: 54, scope: !7038)
!7058 = !DILocation(line: 596, column: 59, scope: !7038)
!7059 = !DILocation(line: 596, column: 45, scope: !7038)
!7060 = !DILocation(line: 596, column: 17, scope: !7038)
!7061 = !DILocation(line: 597, column: 18, scope: !7038)
!7062 = !DILocation(line: 600, column: 56, scope: !7038)
!7063 = !DILocation(line: 600, column: 14, scope: !7038)
!7064 = !DILocation(line: 602, column: 5, scope: !7038)
!7065 = !DILocation(line: 603, column: 1, scope: !7038)
!7066 = distinct !DISubprogram(name: "uart_receive_handler", scope: !910, file: !910, line: 146, type: !7067, scopeLine: 147, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !909, retainedNodes: !7069)
!7067 = !DISubroutineType(types: !7068)
!7068 = !{null, !990, !91}
!7069 = !{!7070, !7071, !7072, !7073, !7074, !7075, !7076, !7132}
!7070 = !DILocalVariable(name: "uart_port", arg: 1, scope: !7066, file: !910, line: 146, type: !990)
!7071 = !DILocalVariable(name: "is_timeout", arg: 2, scope: !7066, file: !910, line: 146, type: !91)
!7072 = !DILocalVariable(name: "channel", scope: !7066, file: !910, line: 148, type: !6130)
!7073 = !DILocalVariable(name: "avail_bytes", scope: !7066, file: !910, line: 149, type: !61)
!7074 = !DILocalVariable(name: "callback", scope: !7066, file: !910, line: 150, type: !1037)
!7075 = !DILocalVariable(name: "arg", scope: !7066, file: !910, line: 151, type: !88)
!7076 = !DILocalVariable(name: "uartx", scope: !7066, file: !910, line: 152, type: !7077)
!7077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7078, size: 32)
!7078 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_REGISTER_T", file: !56, line: 588, baseType: !7079)
!7079 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 542, size: 800, elements: !7080)
!7080 = !{!7081, !7087, !7092, !7098, !7099, !7104, !7109, !7110, !7115, !7116, !7117, !7118, !7119, !7120, !7121, !7122, !7123, !7124, !7125, !7126, !7127, !7128, !7129, !7130, !7131}
!7081 = !DIDerivedType(tag: DW_TAG_member, name: "RBR_THR_DLL", scope: !7079, file: !56, line: 547, baseType: !7082, size: 32)
!7082 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7079, file: !56, line: 543, size: 32, elements: !7083)
!7083 = !{!7084, !7085, !7086}
!7084 = !DIDerivedType(tag: DW_TAG_member, name: "RBR", scope: !7082, file: !56, line: 544, baseType: !324, size: 32)
!7085 = !DIDerivedType(tag: DW_TAG_member, name: "THR", scope: !7082, file: !56, line: 545, baseType: !60, size: 32)
!7086 = !DIDerivedType(tag: DW_TAG_member, name: "DLL", scope: !7082, file: !56, line: 546, baseType: !60, size: 32)
!7087 = !DIDerivedType(tag: DW_TAG_member, name: "IER_DLM", scope: !7079, file: !56, line: 551, baseType: !7088, size: 32, offset: 32)
!7088 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7079, file: !56, line: 548, size: 32, elements: !7089)
!7089 = !{!7090, !7091}
!7090 = !DIDerivedType(tag: DW_TAG_member, name: "IER", scope: !7088, file: !56, line: 549, baseType: !60, size: 32)
!7091 = !DIDerivedType(tag: DW_TAG_member, name: "DLM", scope: !7088, file: !56, line: 550, baseType: !60, size: 32)
!7092 = !DIDerivedType(tag: DW_TAG_member, name: "IIR_FCR_EFR", scope: !7079, file: !56, line: 556, baseType: !7093, size: 32, offset: 64)
!7093 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7079, file: !56, line: 552, size: 32, elements: !7094)
!7094 = !{!7095, !7096, !7097}
!7095 = !DIDerivedType(tag: DW_TAG_member, name: "IIR", scope: !7093, file: !56, line: 553, baseType: !324, size: 32)
!7096 = !DIDerivedType(tag: DW_TAG_member, name: "FCR", scope: !7093, file: !56, line: 554, baseType: !60, size: 32)
!7097 = !DIDerivedType(tag: DW_TAG_member, name: "EFR", scope: !7093, file: !56, line: 555, baseType: !60, size: 32)
!7098 = !DIDerivedType(tag: DW_TAG_member, name: "LCR", scope: !7079, file: !56, line: 557, baseType: !60, size: 32, offset: 96)
!7099 = !DIDerivedType(tag: DW_TAG_member, name: "MCR_XON1", scope: !7079, file: !56, line: 561, baseType: !7100, size: 32, offset: 128)
!7100 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7079, file: !56, line: 558, size: 32, elements: !7101)
!7101 = !{!7102, !7103}
!7102 = !DIDerivedType(tag: DW_TAG_member, name: "MCR", scope: !7100, file: !56, line: 559, baseType: !60, size: 32)
!7103 = !DIDerivedType(tag: DW_TAG_member, name: "XON1", scope: !7100, file: !56, line: 560, baseType: !60, size: 32)
!7104 = !DIDerivedType(tag: DW_TAG_member, name: "LSR_XON2", scope: !7079, file: !56, line: 565, baseType: !7105, size: 32, offset: 160)
!7105 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7079, file: !56, line: 562, size: 32, elements: !7106)
!7106 = !{!7107, !7108}
!7107 = !DIDerivedType(tag: DW_TAG_member, name: "LSR", scope: !7105, file: !56, line: 563, baseType: !324, size: 32)
!7108 = !DIDerivedType(tag: DW_TAG_member, name: "XON2", scope: !7105, file: !56, line: 564, baseType: !60, size: 32)
!7109 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF1", scope: !7079, file: !56, line: 566, baseType: !60, size: 32, offset: 192)
!7110 = !DIDerivedType(tag: DW_TAG_member, name: "SCR_XOFF2", scope: !7079, file: !56, line: 570, baseType: !7111, size: 32, offset: 224)
!7111 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7079, file: !56, line: 567, size: 32, elements: !7112)
!7112 = !{!7113, !7114}
!7113 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !7111, file: !56, line: 568, baseType: !60, size: 32)
!7114 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF2", scope: !7111, file: !56, line: 569, baseType: !60, size: 32)
!7115 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_EN", scope: !7079, file: !56, line: 571, baseType: !60, size: 32, offset: 256)
!7116 = !DIDerivedType(tag: DW_TAG_member, name: "HIGHSPEED", scope: !7079, file: !56, line: 572, baseType: !60, size: 32, offset: 288)
!7117 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_COUNT", scope: !7079, file: !56, line: 573, baseType: !60, size: 32, offset: 320)
!7118 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_POINT", scope: !7079, file: !56, line: 574, baseType: !60, size: 32, offset: 352)
!7119 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_REG", scope: !7079, file: !56, line: 575, baseType: !324, size: 32, offset: 384)
!7120 = !DIDerivedType(tag: DW_TAG_member, name: "RATEFIX_AD", scope: !7079, file: !56, line: 576, baseType: !60, size: 32, offset: 416)
!7121 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUDSAMPLE", scope: !7079, file: !56, line: 577, baseType: !60, size: 32, offset: 448)
!7122 = !DIDerivedType(tag: DW_TAG_member, name: "GUARD", scope: !7079, file: !56, line: 578, baseType: !60, size: 32, offset: 480)
!7123 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_DAT", scope: !7079, file: !56, line: 579, baseType: !60, size: 32, offset: 512)
!7124 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_EN", scope: !7079, file: !56, line: 580, baseType: !60, size: 32, offset: 544)
!7125 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEP_EN", scope: !7079, file: !56, line: 581, baseType: !60, size: 32, offset: 576)
!7126 = !DIDerivedType(tag: DW_TAG_member, name: "DMA_EN", scope: !7079, file: !56, line: 582, baseType: !60, size: 32, offset: 608)
!7127 = !DIDerivedType(tag: DW_TAG_member, name: "RXTRI_AD", scope: !7079, file: !56, line: 583, baseType: !60, size: 32, offset: 640)
!7128 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_L", scope: !7079, file: !56, line: 584, baseType: !60, size: 32, offset: 672)
!7129 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_M", scope: !7079, file: !56, line: 585, baseType: !60, size: 32, offset: 704)
!7130 = !DIDerivedType(tag: DW_TAG_member, name: "FCR_RD", scope: !7079, file: !56, line: 586, baseType: !324, size: 32, offset: 736)
!7131 = !DIDerivedType(tag: DW_TAG_member, name: "TX_ACTIVE_EN", scope: !7079, file: !56, line: 587, baseType: !60, size: 32, offset: 768)
!7132 = !DILocalVariable(name: "status", scope: !7066, file: !910, line: 153, type: !6129)
!7133 = !DILocation(line: 0, scope: !7066)
!7134 = !DILocation(line: 149, column: 5, scope: !7066)
!7135 = !DILocation(line: 155, column: 9, scope: !7136)
!7136 = distinct !DILexicalBlock(scope: !7066, file: !910, line: 155, column: 9)
!7137 = !DILocation(line: 155, column: 36, scope: !7136)
!7138 = !DILocation(line: 155, column: 9, scope: !7066)
!7139 = !DILocation(line: 156, column: 9, scope: !7140)
!7140 = distinct !DILexicalBlock(scope: !7136, file: !910, line: 155, column: 70)
!7141 = !DILocation(line: 160, column: 13, scope: !7066)
!7142 = !DILocation(line: 161, column: 15, scope: !7066)
!7143 = !DILocation(line: 163, column: 9, scope: !7066)
!7144 = !DILocation(line: 164, column: 9, scope: !7145)
!7145 = distinct !DILexicalBlock(scope: !7146, file: !910, line: 163, column: 29)
!7146 = distinct !DILexicalBlock(scope: !7066, file: !910, line: 163, column: 9)
!7147 = !DILocation(line: 165, column: 5, scope: !7145)
!7148 = !DILocation(line: 167, column: 14, scope: !7066)
!7149 = !DILocation(line: 168, column: 16, scope: !7150)
!7150 = distinct !DILexicalBlock(scope: !7066, file: !910, line: 168, column: 9)
!7151 = !DILocation(line: 168, column: 9, scope: !7066)
!7152 = !DILocation(line: 169, column: 9, scope: !7153)
!7153 = distinct !DILexicalBlock(scope: !7150, file: !910, line: 168, column: 28)
!7154 = !DILocation(line: 172, column: 9, scope: !7155)
!7155 = distinct !DILexicalBlock(scope: !7066, file: !910, line: 172, column: 9)
!7156 = !DILocation(line: 172, column: 21, scope: !7155)
!7157 = !DILocation(line: 172, column: 9, scope: !7066)
!7158 = !DILocation(line: 176, column: 43, scope: !7066)
!7159 = !DILocation(line: 178, column: 18, scope: !7160)
!7160 = distinct !DILexicalBlock(scope: !7066, file: !910, line: 178, column: 9)
!7161 = !DILocation(line: 178, column: 9, scope: !7066)
!7162 = !DILocation(line: 179, column: 9, scope: !7163)
!7163 = distinct !DILexicalBlock(scope: !7160, file: !910, line: 178, column: 27)
!7164 = !DILocation(line: 177, column: 38, scope: !7066)
!7165 = !DILocation(line: 183, column: 5, scope: !7066)
!7166 = !DILocation(line: 184, column: 5, scope: !7066)
!7167 = !DILocation(line: 185, column: 5, scope: !7066)
!7168 = !DILocation(line: 187, column: 14, scope: !7066)
!7169 = !DILocation(line: 188, column: 16, scope: !7170)
!7170 = distinct !DILexicalBlock(scope: !7066, file: !910, line: 188, column: 9)
!7171 = !DILocation(line: 188, column: 9, scope: !7066)
!7172 = !DILocation(line: 189, column: 9, scope: !7173)
!7173 = distinct !DILexicalBlock(scope: !7170, file: !910, line: 188, column: 28)
!7174 = !DILocation(line: 192, column: 9, scope: !7175)
!7175 = distinct !DILexicalBlock(scope: !7066, file: !910, line: 192, column: 9)
!7176 = !DILocation(line: 192, column: 53, scope: !7175)
!7177 = !DILocation(line: 192, column: 21, scope: !7175)
!7178 = !DILocation(line: 192, column: 9, scope: !7066)
!7179 = !DILocation(line: 193, column: 18, scope: !7180)
!7180 = distinct !DILexicalBlock(scope: !7175, file: !910, line: 192, column: 83)
!7181 = !DILocation(line: 194, column: 20, scope: !7182)
!7182 = distinct !DILexicalBlock(scope: !7180, file: !910, line: 194, column: 13)
!7183 = !DILocation(line: 194, column: 13, scope: !7180)
!7184 = !DILocation(line: 195, column: 13, scope: !7185)
!7185 = distinct !DILexicalBlock(scope: !7182, file: !910, line: 194, column: 32)
!7186 = !DILocation(line: 199, column: 1, scope: !7066)
!7187 = distinct !DISubprogram(name: "uart_send_handler", scope: !910, file: !910, line: 210, type: !7067, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !909, retainedNodes: !7188)
!7188 = !{!7189, !7190, !7191, !7192, !7193, !7194, !7195, !7196, !7197}
!7189 = !DILocalVariable(name: "uart_port", arg: 1, scope: !7187, file: !910, line: 210, type: !990)
!7190 = !DILocalVariable(name: "is_send_complete_trigger", arg: 2, scope: !7187, file: !910, line: 210, type: !91)
!7191 = !DILocalVariable(name: "channel", scope: !7187, file: !910, line: 212, type: !6130)
!7192 = !DILocalVariable(name: "status", scope: !7187, file: !910, line: 213, type: !6129)
!7193 = !DILocalVariable(name: "compare_space", scope: !7187, file: !910, line: 214, type: !61)
!7194 = !DILocalVariable(name: "avail_space", scope: !7187, file: !910, line: 214, type: !61)
!7195 = !DILocalVariable(name: "callback", scope: !7187, file: !910, line: 215, type: !1037)
!7196 = !DILocalVariable(name: "arg", scope: !7187, file: !910, line: 216, type: !88)
!7197 = !DILocalVariable(name: "irq_status", scope: !7187, file: !910, line: 218, type: !61)
!7198 = !DILocation(line: 0, scope: !7187)
!7199 = !DILocation(line: 214, column: 5, scope: !7187)
!7200 = !DILocation(line: 221, column: 9, scope: !7201)
!7201 = distinct !DILexicalBlock(scope: !7187, file: !910, line: 221, column: 9)
!7202 = !DILocation(line: 221, column: 36, scope: !7201)
!7203 = !DILocation(line: 221, column: 9, scope: !7187)
!7204 = !DILocation(line: 222, column: 9, scope: !7205)
!7205 = distinct !DILexicalBlock(scope: !7201, file: !910, line: 221, column: 70)
!7206 = !DILocation(line: 226, column: 15, scope: !7187)
!7207 = !DILocation(line: 228, column: 9, scope: !7187)
!7208 = !DILocation(line: 230, column: 13, scope: !7209)
!7209 = distinct !DILexicalBlock(scope: !7210, file: !910, line: 230, column: 13)
!7210 = distinct !DILexicalBlock(scope: !7211, file: !910, line: 228, column: 43)
!7211 = distinct !DILexicalBlock(scope: !7187, file: !910, line: 228, column: 9)
!7212 = !DILocation(line: 230, column: 61, scope: !7209)
!7213 = !DILocation(line: 230, column: 13, scope: !7210)
!7214 = !DILocation(line: 231, column: 26, scope: !7215)
!7215 = distinct !DILexicalBlock(scope: !7209, file: !910, line: 230, column: 71)
!7216 = !DILocation(line: 232, column: 22, scope: !7215)
!7217 = !DILocation(line: 233, column: 24, scope: !7218)
!7218 = distinct !DILexicalBlock(scope: !7215, file: !910, line: 233, column: 17)
!7219 = !DILocation(line: 233, column: 17, scope: !7215)
!7220 = !DILocation(line: 234, column: 17, scope: !7221)
!7221 = distinct !DILexicalBlock(scope: !7218, file: !910, line: 233, column: 36)
!7222 = !DILocation(line: 237, column: 46, scope: !7223)
!7223 = distinct !DILexicalBlock(scope: !7215, file: !910, line: 237, column: 17)
!7224 = !DILocation(line: 237, column: 71, scope: !7223)
!7225 = !DILocation(line: 237, column: 83, scope: !7223)
!7226 = !DILocation(line: 237, column: 17, scope: !7215)
!7227 = !DILocation(line: 238, column: 21, scope: !7228)
!7228 = distinct !DILexicalBlock(scope: !7229, file: !910, line: 238, column: 21)
!7229 = distinct !DILexicalBlock(scope: !7223, file: !910, line: 237, column: 89)
!7230 = !DILocation(line: 238, column: 21, scope: !7229)
!7231 = !DILocation(line: 240, column: 65, scope: !7232)
!7232 = distinct !DILexicalBlock(scope: !7233, file: !910, line: 240, column: 25)
!7233 = distinct !DILexicalBlock(scope: !7228, file: !910, line: 238, column: 65)
!7234 = !DILocation(line: 240, column: 25, scope: !7232)
!7235 = !DILocation(line: 240, column: 25, scope: !7233)
!7236 = !DILocation(line: 241, column: 56, scope: !7237)
!7237 = distinct !DILexicalBlock(scope: !7232, file: !910, line: 240, column: 107)
!7238 = !DILocation(line: 241, column: 25, scope: !7237)
!7239 = !DILocation(line: 242, column: 21, scope: !7237)
!7240 = !DILocation(line: 243, column: 56, scope: !7233)
!7241 = !DILocation(line: 244, column: 17, scope: !7233)
!7242 = !DILocation(line: 246, column: 13, scope: !7215)
!7243 = !DILocation(line: 247, column: 9, scope: !7215)
!7244 = !DILocation(line: 248, column: 61, scope: !7245)
!7245 = distinct !DILexicalBlock(scope: !7209, file: !910, line: 247, column: 16)
!7246 = !DILocation(line: 253, column: 47, scope: !7247)
!7247 = distinct !DILexicalBlock(scope: !7211, file: !910, line: 252, column: 12)
!7248 = !DILocation(line: 255, column: 22, scope: !7249)
!7249 = distinct !DILexicalBlock(scope: !7247, file: !910, line: 255, column: 13)
!7250 = !DILocation(line: 255, column: 13, scope: !7247)
!7251 = !DILocation(line: 256, column: 13, scope: !7252)
!7252 = distinct !DILexicalBlock(scope: !7249, file: !910, line: 255, column: 31)
!7253 = !DILocation(line: 254, column: 42, scope: !7247)
!7254 = !DILocation(line: 260, column: 9, scope: !7247)
!7255 = !DILocation(line: 261, column: 9, scope: !7247)
!7256 = !DILocation(line: 262, column: 9, scope: !7247)
!7257 = !DILocation(line: 264, column: 18, scope: !7247)
!7258 = !DILocation(line: 265, column: 20, scope: !7259)
!7259 = distinct !DILexicalBlock(scope: !7247, file: !910, line: 265, column: 13)
!7260 = !DILocation(line: 265, column: 13, scope: !7247)
!7261 = !DILocation(line: 266, column: 13, scope: !7262)
!7262 = distinct !DILexicalBlock(scope: !7259, file: !910, line: 265, column: 32)
!7263 = !DILocation(line: 269, column: 54, scope: !7247)
!7264 = !DILocation(line: 270, column: 56, scope: !7247)
!7265 = !DILocation(line: 270, column: 25, scope: !7247)
!7266 = !DILocation(line: 271, column: 13, scope: !7267)
!7267 = distinct !DILexicalBlock(scope: !7247, file: !910, line: 271, column: 13)
!7268 = !DILocation(line: 271, column: 25, scope: !7267)
!7269 = !DILocation(line: 271, column: 13, scope: !7247)
!7270 = !DILocation(line: 272, column: 22, scope: !7271)
!7271 = distinct !DILexicalBlock(scope: !7267, file: !910, line: 271, column: 43)
!7272 = !DILocation(line: 273, column: 24, scope: !7273)
!7273 = distinct !DILexicalBlock(scope: !7271, file: !910, line: 273, column: 17)
!7274 = !DILocation(line: 273, column: 17, scope: !7271)
!7275 = !DILocation(line: 274, column: 17, scope: !7276)
!7276 = distinct !DILexicalBlock(scope: !7273, file: !910, line: 273, column: 36)
!7277 = !DILocation(line: 279, column: 1, scope: !7187)
!7278 = distinct !DISubprogram(name: "uart_error_handler", scope: !910, file: !910, line: 282, type: !7279, scopeLine: 283, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !909, retainedNodes: !7281)
!7279 = !DISubroutineType(types: !7280)
!7280 = !{null, !990}
!7281 = !{!7282, !7283, !7284, !7285}
!7282 = !DILocalVariable(name: "uart_port", arg: 1, scope: !7278, file: !910, line: 282, type: !990)
!7283 = !DILocalVariable(name: "uartx", scope: !7278, file: !910, line: 284, type: !7077)
!7284 = !DILocalVariable(name: "callback", scope: !7278, file: !910, line: 285, type: !1037)
!7285 = !DILocalVariable(name: "arg", scope: !7278, file: !910, line: 286, type: !88)
!7286 = !DILocation(line: 0, scope: !7278)
!7287 = !DILocation(line: 288, column: 13, scope: !7278)
!7288 = !DILocation(line: 290, column: 10, scope: !7289)
!7289 = distinct !DILexicalBlock(scope: !7278, file: !910, line: 290, column: 9)
!7290 = !DILocation(line: 290, column: 9, scope: !7278)
!7291 = !DILocation(line: 291, column: 9, scope: !7292)
!7292 = distinct !DILexicalBlock(scope: !7289, file: !910, line: 290, column: 36)
!7293 = !DILocation(line: 292, column: 9, scope: !7292)
!7294 = !DILocation(line: 293, column: 47, scope: !7292)
!7295 = !DILocation(line: 295, column: 22, scope: !7296)
!7296 = distinct !DILexicalBlock(scope: !7292, file: !910, line: 295, column: 13)
!7297 = !DILocation(line: 295, column: 13, scope: !7292)
!7298 = !DILocation(line: 296, column: 13, scope: !7299)
!7299 = distinct !DILexicalBlock(scope: !7296, file: !910, line: 295, column: 31)
!7300 = !DILocation(line: 294, column: 42, scope: !7292)
!7301 = !DILocation(line: 299, column: 9, scope: !7292)
!7302 = !DILocation(line: 300, column: 5, scope: !7292)
!7303 = !DILocation(line: 301, column: 1, scope: !7278)
!7304 = distinct !DISubprogram(name: "uart_backup_all_registers", scope: !910, file: !910, line: 315, type: !343, scopeLine: 316, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !909, retainedNodes: !7305)
!7305 = !{!7306, !7307, !7308, !7309, !7310}
!7306 = !DILocalVariable(name: "uart_port", scope: !7304, file: !910, line: 317, type: !990)
!7307 = !DILocalVariable(name: "uart_hwstatus", scope: !7304, file: !910, line: 318, type: !1072)
!7308 = !DILocalVariable(name: "uart_flowcontrol", scope: !7304, file: !910, line: 319, type: !1004)
!7309 = !DILocalVariable(name: "uart_callback", scope: !7304, file: !910, line: 320, type: !1037)
!7310 = !DILocalVariable(name: "uart_callback_arg", scope: !7304, file: !910, line: 321, type: !88)
!7311 = !DILocation(line: 0, scope: !7304)
!7312 = !DILocation(line: 329, column: 5, scope: !7313)
!7313 = distinct !DILexicalBlock(scope: !7304, file: !910, line: 329, column: 5)
!7314 = !DILocation(line: 330, column: 13, scope: !7315)
!7315 = distinct !DILexicalBlock(scope: !7316, file: !910, line: 330, column: 13)
!7316 = distinct !DILexicalBlock(scope: !7317, file: !910, line: 329, column: 73)
!7317 = distinct !DILexicalBlock(scope: !7313, file: !910, line: 329, column: 5)
!7318 = !DILocation(line: 330, column: 40, scope: !7315)
!7319 = !DILocation(line: 330, column: 13, scope: !7316)
!7320 = !DILocation(line: 331, column: 29, scope: !7321)
!7321 = distinct !DILexicalBlock(scope: !7315, file: !910, line: 330, column: 72)
!7322 = !DILocation(line: 332, column: 32, scope: !7321)
!7323 = !DILocation(line: 333, column: 56, scope: !7321)
!7324 = !DILocation(line: 334, column: 60, scope: !7321)
!7325 = !DILocation(line: 345, column: 13, scope: !7321)
!7326 = !DILocation(line: 346, column: 40, scope: !7321)
!7327 = !DILocation(line: 347, column: 50, scope: !7321)
!7328 = !DILocation(line: 348, column: 45, scope: !7321)
!7329 = !DILocation(line: 349, column: 44, scope: !7321)
!7330 = !DILocation(line: 350, column: 77, scope: !7321)
!7331 = !DILocation(line: 350, column: 52, scope: !7321)
!7332 = !DILocation(line: 350, column: 13, scope: !7321)
!7333 = !DILocation(line: 350, column: 50, scope: !7321)
!7334 = !DILocation(line: 358, column: 9, scope: !7321)
!7335 = !DILocation(line: 329, column: 69, scope: !7317)
!7336 = !DILocation(line: 329, column: 44, scope: !7317)
!7337 = distinct !{!7337, !7312, !7338}
!7338 = !DILocation(line: 359, column: 5, scope: !7313)
!7339 = !DILocation(line: 360, column: 1, scope: !7304)
!7340 = distinct !DISubprogram(name: "hal_uart_deinit", scope: !910, file: !910, line: 544, type: !7341, scopeLine: 545, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !909, retainedNodes: !7344)
!7341 = !DISubroutineType(types: !7342)
!7342 = !{!7343, !990}
!7343 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_status_t", file: !920, line: 351, baseType: !935)
!7344 = !{!7345, !7346, !7347, !7348, !7349, !7350, !7351}
!7345 = !DILocalVariable(name: "uart_port", arg: 1, scope: !7340, file: !910, line: 544, type: !990)
!7346 = !DILocalVariable(name: "uartx", scope: !7340, file: !910, line: 546, type: !7077)
!7347 = !DILocalVariable(name: "tx_dma_channel", scope: !7340, file: !910, line: 547, type: !6130)
!7348 = !DILocalVariable(name: "rx_dma_channel", scope: !7340, file: !910, line: 547, type: !6130)
!7349 = !DILocalVariable(name: "irq_status", scope: !7340, file: !910, line: 548, type: !61)
!7350 = !DILocalVariable(name: "status", scope: !7340, file: !910, line: 549, type: !6129)
!7351 = !DILocalVariable(name: "clock_status", scope: !7340, file: !910, line: 550, type: !5627)
!7352 = !DILocation(line: 0, scope: !7340)
!7353 = !DILocation(line: 552, column: 10, scope: !7354)
!7354 = distinct !DILexicalBlock(scope: !7340, file: !910, line: 552, column: 9)
!7355 = !DILocation(line: 552, column: 9, scope: !7340)
!7356 = !DILocation(line: 556, column: 18, scope: !7340)
!7357 = !DILocation(line: 557, column: 9, scope: !7358)
!7358 = distinct !DILexicalBlock(scope: !7340, file: !910, line: 557, column: 9)
!7359 = !DILocation(line: 557, column: 36, scope: !7358)
!7360 = !DILocation(line: 557, column: 9, scope: !7340)
!7361 = !DILocation(line: 562, column: 13, scope: !7340)
!7362 = !DILocation(line: 565, column: 5, scope: !7340)
!7363 = !DILocation(line: 568, column: 9, scope: !7364)
!7364 = distinct !DILexicalBlock(scope: !7340, file: !910, line: 568, column: 9)
!7365 = !DILocation(line: 568, column: 36, scope: !7364)
!7366 = !DILocation(line: 568, column: 9, scope: !7340)
!7367 = !DILocation(line: 569, column: 26, scope: !7368)
!7368 = distinct !DILexicalBlock(scope: !7364, file: !910, line: 568, column: 70)
!7369 = !DILocation(line: 570, column: 26, scope: !7368)
!7370 = !DILocation(line: 572, column: 18, scope: !7368)
!7371 = !DILocation(line: 573, column: 20, scope: !7372)
!7372 = distinct !DILexicalBlock(scope: !7368, file: !910, line: 573, column: 13)
!7373 = !DILocation(line: 573, column: 13, scope: !7368)
!7374 = !DILocation(line: 574, column: 13, scope: !7375)
!7375 = distinct !DILexicalBlock(scope: !7372, file: !910, line: 573, column: 32)
!7376 = !DILocation(line: 575, column: 13, scope: !7375)
!7377 = !DILocation(line: 578, column: 18, scope: !7368)
!7378 = !DILocation(line: 579, column: 20, scope: !7379)
!7379 = distinct !DILexicalBlock(scope: !7368, file: !910, line: 579, column: 13)
!7380 = !DILocation(line: 579, column: 13, scope: !7368)
!7381 = !DILocation(line: 580, column: 13, scope: !7382)
!7382 = distinct !DILexicalBlock(scope: !7379, file: !910, line: 579, column: 32)
!7383 = !DILocation(line: 581, column: 13, scope: !7382)
!7384 = !DILocation(line: 584, column: 18, scope: !7368)
!7385 = !DILocation(line: 585, column: 20, scope: !7386)
!7386 = distinct !DILexicalBlock(scope: !7368, file: !910, line: 585, column: 13)
!7387 = !DILocation(line: 585, column: 13, scope: !7368)
!7388 = !DILocation(line: 586, column: 13, scope: !7389)
!7389 = distinct !DILexicalBlock(scope: !7386, file: !910, line: 585, column: 32)
!7390 = !DILocation(line: 587, column: 13, scope: !7389)
!7391 = !DILocation(line: 590, column: 18, scope: !7368)
!7392 = !DILocation(line: 591, column: 20, scope: !7393)
!7393 = distinct !DILexicalBlock(scope: !7368, file: !910, line: 591, column: 13)
!7394 = !DILocation(line: 591, column: 13, scope: !7368)
!7395 = !DILocation(line: 592, column: 13, scope: !7396)
!7396 = distinct !DILexicalBlock(scope: !7393, file: !910, line: 591, column: 32)
!7397 = !DILocation(line: 593, column: 13, scope: !7396)
!7398 = !DILocation(line: 596, column: 18, scope: !7368)
!7399 = !DILocation(line: 597, column: 20, scope: !7400)
!7400 = distinct !DILexicalBlock(scope: !7368, file: !910, line: 597, column: 13)
!7401 = !DILocation(line: 597, column: 13, scope: !7368)
!7402 = !DILocation(line: 598, column: 13, scope: !7403)
!7403 = distinct !DILexicalBlock(scope: !7400, file: !910, line: 597, column: 32)
!7404 = !DILocation(line: 599, column: 13, scope: !7403)
!7405 = !DILocation(line: 602, column: 18, scope: !7368)
!7406 = !DILocation(line: 603, column: 20, scope: !7407)
!7407 = distinct !DILexicalBlock(scope: !7368, file: !910, line: 603, column: 13)
!7408 = !DILocation(line: 603, column: 13, scope: !7368)
!7409 = !DILocation(line: 604, column: 13, scope: !7410)
!7410 = distinct !DILexicalBlock(scope: !7407, file: !910, line: 603, column: 32)
!7411 = !DILocation(line: 605, column: 13, scope: !7410)
!7412 = !DILocation(line: 608, column: 30, scope: !7368)
!7413 = !DILocation(line: 608, column: 9, scope: !7368)
!7414 = !DILocation(line: 609, column: 5, scope: !7368)
!7415 = !DILocation(line: 610, column: 5, scope: !7340)
!7416 = !DILocation(line: 611, column: 38, scope: !7340)
!7417 = !DILocation(line: 611, column: 20, scope: !7340)
!7418 = !DILocation(line: 612, column: 22, scope: !7419)
!7419 = distinct !DILexicalBlock(scope: !7340, file: !910, line: 612, column: 9)
!7420 = !DILocation(line: 612, column: 9, scope: !7340)
!7421 = !DILocation(line: 613, column: 9, scope: !7422)
!7422 = distinct !DILexicalBlock(scope: !7419, file: !910, line: 612, column: 46)
!7423 = !DILocation(line: 614, column: 9, scope: !7422)
!7424 = !DILocation(line: 618, column: 32, scope: !7340)
!7425 = !DILocation(line: 618, column: 37, scope: !7340)
!7426 = !DILocation(line: 619, column: 32, scope: !7340)
!7427 = !DILocation(line: 619, column: 36, scope: !7340)
!7428 = !DILocation(line: 622, column: 5, scope: !7340)
!7429 = !DILocation(line: 622, column: 53, scope: !7340)
!7430 = !DILocation(line: 623, column: 5, scope: !7340)
!7431 = !DILocation(line: 623, column: 42, scope: !7340)
!7432 = !DILocation(line: 635, column: 32, scope: !7340)
!7433 = !DILocation(line: 639, column: 5, scope: !7340)
!7434 = !DILocation(line: 640, column: 1, scope: !7340)
!7435 = distinct !DISubprogram(name: "uart_port_is_valid", scope: !910, file: !910, line: 120, type: !7436, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !909, retainedNodes: !7438)
!7436 = !DISubroutineType(types: !7437)
!7437 = !{!91, !990}
!7438 = !{!7439}
!7439 = !DILocalVariable(name: "uart_port", arg: 1, scope: !7435, file: !910, line: 120, type: !990)
!7440 = !DILocation(line: 0, scope: !7435)
!7441 = !DILocation(line: 122, column: 23, scope: !7435)
!7442 = !DILocation(line: 122, column: 5, scope: !7435)
!7443 = distinct !DISubprogram(name: "uart_restore_all_registers", scope: !910, file: !910, line: 362, type: !343, scopeLine: 363, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !909, retainedNodes: !7444)
!7444 = !{!7445, !7446, !7447, !7448, !7449}
!7445 = !DILocalVariable(name: "delay", scope: !7443, file: !910, line: 364, type: !61)
!7446 = !DILocalVariable(name: "uart_port", scope: !7443, file: !910, line: 365, type: !990)
!7447 = !DILocalVariable(name: "uartx", scope: !7443, file: !910, line: 366, type: !7077)
!7448 = !DILocalVariable(name: "uart_hwstatus", scope: !7443, file: !910, line: 367, type: !1072)
!7449 = !DILocalVariable(name: "sleep_lock_status", scope: !7443, file: !910, line: 368, type: !91)
!7450 = !DILocation(line: 369, column: 25, scope: !7443)
!7451 = !DILocation(line: 0, scope: !7443)
!7452 = !DILocation(line: 371, column: 5, scope: !7453)
!7453 = distinct !DILexicalBlock(scope: !7443, file: !910, line: 371, column: 5)
!7454 = !DILocation(line: 372, column: 25, scope: !7455)
!7455 = distinct !DILexicalBlock(scope: !7456, file: !910, line: 371, column: 73)
!7456 = distinct !DILexicalBlock(scope: !7453, file: !910, line: 371, column: 5)
!7457 = !DILocation(line: 373, column: 27, scope: !7458)
!7458 = distinct !DILexicalBlock(scope: !7455, file: !910, line: 373, column: 13)
!7459 = !DILocation(line: 373, column: 13, scope: !7455)
!7460 = !DILocation(line: 374, column: 40, scope: !7461)
!7461 = distinct !DILexicalBlock(scope: !7458, file: !910, line: 373, column: 59)
!7462 = !DILocation(line: 375, column: 39, scope: !7461)
!7463 = !DILocation(line: 375, column: 13, scope: !7461)
!7464 = !DILocation(line: 376, column: 9, scope: !7461)
!7465 = !DILocation(line: 380, column: 13, scope: !7466)
!7466 = distinct !DILexicalBlock(scope: !7455, file: !910, line: 380, column: 13)
!7467 = !DILocation(line: 380, column: 13, scope: !7455)
!7468 = !DILocation(line: 381, column: 21, scope: !7469)
!7469 = distinct !DILexicalBlock(scope: !7466, file: !910, line: 380, column: 80)
!7470 = !DILocation(line: 382, column: 80, scope: !7469)
!7471 = !DILocation(line: 382, column: 13, scope: !7469)
!7472 = !DILocation(line: 384, column: 64, scope: !7469)
!7473 = !DILocation(line: 384, column: 37, scope: !7469)
!7474 = !DILocation(line: 384, column: 74, scope: !7469)
!7475 = !DILocation(line: 385, column: 13, scope: !7469)
!7476 = !DILocation(line: 387, column: 87, scope: !7469)
!7477 = !DILocation(line: 388, column: 87, scope: !7469)
!7478 = !DILocation(line: 389, column: 87, scope: !7469)
!7479 = !DILocation(line: 386, column: 13, scope: !7469)
!7480 = !DILocation(line: 390, column: 9, scope: !7469)
!7481 = !DILocation(line: 391, column: 13, scope: !7482)
!7482 = distinct !DILexicalBlock(scope: !7483, file: !910, line: 390, column: 87)
!7483 = distinct !DILexicalBlock(scope: !7466, file: !910, line: 390, column: 20)
!7484 = !DILocation(line: 392, column: 9, scope: !7482)
!7485 = !DILocation(line: 394, column: 27, scope: !7486)
!7486 = distinct !DILexicalBlock(scope: !7455, file: !910, line: 394, column: 13)
!7487 = !DILocation(line: 394, column: 13, scope: !7455)
!7488 = !DILocation(line: 395, column: 42, scope: !7489)
!7489 = distinct !DILexicalBlock(scope: !7486, file: !910, line: 394, column: 61)
!7490 = !DILocation(line: 395, column: 13, scope: !7489)
!7491 = !DILocation(line: 396, column: 78, scope: !7489)
!7492 = !DILocation(line: 396, column: 111, scope: !7489)
!7493 = !DILocation(line: 396, column: 13, scope: !7489)
!7494 = !DILocation(line: 397, column: 9, scope: !7489)
!7495 = !DILocation(line: 399, column: 69, scope: !7455)
!7496 = !DILocation(line: 399, column: 29, scope: !7455)
!7497 = !DILocation(line: 400, column: 41, scope: !7498)
!7498 = distinct !DILexicalBlock(scope: !7455, file: !910, line: 400, column: 13)
!7499 = !DILocation(line: 400, column: 45, scope: !7498)
!7500 = !DILocation(line: 400, column: 13, scope: !7455)
!7501 = !DILocation(line: 402, column: 44, scope: !7502)
!7502 = distinct !DILexicalBlock(scope: !7498, file: !910, line: 400, column: 89)
!7503 = !DILocation(line: 402, column: 13, scope: !7502)
!7504 = !DILocation(line: 403, column: 9, scope: !7502)
!7505 = !DILocation(line: 371, column: 69, scope: !7456)
!7506 = !DILocation(line: 371, column: 44, scope: !7456)
!7507 = distinct !{!7507, !7452, !7508}
!7508 = !DILocation(line: 411, column: 5, scope: !7453)
!7509 = !DILocation(line: 412, column: 25, scope: !7443)
!7510 = !DILocation(line: 413, column: 1, scope: !7443)
!7511 = distinct !DISubprogram(name: "hal_uart_init", scope: !910, file: !910, line: 476, type: !7512, scopeLine: 477, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !909, retainedNodes: !7515)
!7512 = !DISubroutineType(types: !7513)
!7513 = !{!7343, !990, !7514}
!7514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1017, size: 32)
!7515 = !{!7516, !7517, !7518, !7519, !7520, !7521, !7522}
!7516 = !DILocalVariable(name: "uart_port", arg: 1, scope: !7511, file: !910, line: 476, type: !990)
!7517 = !DILocalVariable(name: "uart_config", arg: 2, scope: !7511, file: !910, line: 476, type: !7514)
!7518 = !DILocalVariable(name: "uartx", scope: !7511, file: !910, line: 478, type: !7077)
!7519 = !DILocalVariable(name: "i", scope: !7511, file: !910, line: 479, type: !61)
!7520 = !DILocalVariable(name: "actual_baudrate", scope: !7511, file: !910, line: 479, type: !61)
!7521 = !DILocalVariable(name: "irq_status", scope: !7511, file: !910, line: 479, type: !61)
!7522 = !DILocalVariable(name: "status", scope: !7511, file: !910, line: 480, type: !5627)
!7523 = !DILocation(line: 0, scope: !7511)
!7524 = !DILocation(line: 482, column: 11, scope: !7525)
!7525 = distinct !DILexicalBlock(scope: !7511, file: !910, line: 482, column: 9)
!7526 = !DILocation(line: 482, column: 42, scope: !7525)
!7527 = !DILocation(line: 483, column: 11, scope: !7525)
!7528 = !DILocation(line: 482, column: 9, scope: !7511)
!7529 = !DILocation(line: 487, column: 18, scope: !7511)
!7530 = !DILocation(line: 488, column: 9, scope: !7531)
!7531 = distinct !DILexicalBlock(scope: !7511, file: !910, line: 488, column: 9)
!7532 = !DILocation(line: 488, column: 36, scope: !7531)
!7533 = !DILocation(line: 488, column: 9, scope: !7511)
!7534 = !DILocation(line: 489, column: 9, scope: !7535)
!7535 = distinct !DILexicalBlock(scope: !7531, file: !910, line: 488, column: 68)
!7536 = !DILocation(line: 490, column: 9, scope: !7535)
!7537 = !DILocation(line: 497, column: 9, scope: !7538)
!7538 = distinct !DILexicalBlock(scope: !7511, file: !910, line: 497, column: 9)
!7539 = !DILocation(line: 497, column: 9, scope: !7511)
!7540 = !DILocation(line: 498, column: 86, scope: !7541)
!7541 = distinct !DILexicalBlock(scope: !7538, file: !910, line: 497, column: 39)
!7542 = !DILocation(line: 498, column: 43, scope: !7541)
!7543 = !DILocation(line: 498, column: 9, scope: !7541)
!7544 = !DILocation(line: 498, column: 41, scope: !7541)
!7545 = !DILocation(line: 499, column: 5, scope: !7541)
!7546 = !DILocation(line: 502, column: 9, scope: !7547)
!7547 = distinct !DILexicalBlock(scope: !7511, file: !910, line: 502, column: 9)
!7548 = !DILocation(line: 502, column: 9, scope: !7511)
!7549 = !DILocation(line: 504, column: 13, scope: !7550)
!7550 = distinct !DILexicalBlock(scope: !7551, file: !910, line: 503, column: 44)
!7551 = distinct !DILexicalBlock(scope: !7552, file: !910, line: 503, column: 9)
!7552 = distinct !DILexicalBlock(scope: !7553, file: !910, line: 503, column: 9)
!7553 = distinct !DILexicalBlock(scope: !7547, file: !910, line: 502, column: 50)
!7554 = !DILocation(line: 504, column: 32, scope: !7550)
!7555 = !DILocation(line: 506, column: 13, scope: !7550)
!7556 = !DILocation(line: 506, column: 42, scope: !7550)
!7557 = !DILocation(line: 507, column: 13, scope: !7550)
!7558 = !DILocation(line: 507, column: 53, scope: !7550)
!7559 = !DILocation(line: 508, column: 13, scope: !7550)
!7560 = !DILocation(line: 508, column: 40, scope: !7550)
!7561 = !DILocation(line: 510, column: 32, scope: !7550)
!7562 = !DILocation(line: 510, column: 36, scope: !7550)
!7563 = !DILocation(line: 511, column: 32, scope: !7550)
!7564 = !DILocation(line: 511, column: 37, scope: !7550)
!7565 = !DILocation(line: 503, column: 40, scope: !7551)
!7566 = !DILocation(line: 503, column: 23, scope: !7551)
!7567 = !DILocation(line: 503, column: 9, scope: !7552)
!7568 = distinct !{!7568, !7567, !7569}
!7569 = !DILocation(line: 512, column: 9, scope: !7552)
!7570 = !DILocation(line: 513, column: 40, scope: !7553)
!7571 = !DILocation(line: 514, column: 5, scope: !7553)
!7572 = !DILocation(line: 516, column: 54, scope: !7511)
!7573 = !DILocation(line: 516, column: 30, scope: !7511)
!7574 = !DILocation(line: 516, column: 39, scope: !7511)
!7575 = !DILocation(line: 517, column: 57, scope: !7511)
!7576 = !DILocation(line: 517, column: 30, scope: !7511)
!7577 = !DILocation(line: 517, column: 42, scope: !7511)
!7578 = !DILocation(line: 518, column: 54, scope: !7511)
!7579 = !DILocation(line: 518, column: 30, scope: !7511)
!7580 = !DILocation(line: 518, column: 39, scope: !7511)
!7581 = !DILocation(line: 519, column: 52, scope: !7511)
!7582 = !DILocation(line: 519, column: 30, scope: !7511)
!7583 = !DILocation(line: 519, column: 37, scope: !7511)
!7584 = !DILocation(line: 521, column: 32, scope: !7511)
!7585 = !DILocation(line: 522, column: 5, scope: !7511)
!7586 = !DILocation(line: 524, column: 31, scope: !7511)
!7587 = !DILocation(line: 524, column: 14, scope: !7511)
!7588 = !DILocation(line: 525, column: 16, scope: !7589)
!7589 = distinct !DILexicalBlock(scope: !7511, file: !910, line: 525, column: 9)
!7590 = !DILocation(line: 525, column: 9, scope: !7511)
!7591 = !DILocation(line: 526, column: 9, scope: !7592)
!7592 = distinct !DILexicalBlock(scope: !7589, file: !910, line: 525, column: 40)
!7593 = !DILocation(line: 530, column: 13, scope: !7511)
!7594 = !DILocation(line: 532, column: 5, scope: !7511)
!7595 = !DILocation(line: 533, column: 56, scope: !7511)
!7596 = !DILocation(line: 533, column: 23, scope: !7511)
!7597 = !DILocation(line: 534, column: 5, scope: !7511)
!7598 = !DILocation(line: 535, column: 41, scope: !7511)
!7599 = !DILocation(line: 535, column: 67, scope: !7511)
!7600 = !DILocation(line: 535, column: 90, scope: !7511)
!7601 = !DILocation(line: 535, column: 5, scope: !7511)
!7602 = !DILocation(line: 536, column: 5, scope: !7511)
!7603 = !DILocation(line: 538, column: 5, scope: !7511)
!7604 = !DILocation(line: 541, column: 5, scope: !7511)
!7605 = !DILocation(line: 542, column: 1, scope: !7511)
!7606 = distinct !DISubprogram(name: "hal_uart_set_software_flowcontrol", scope: !910, file: !910, line: 1018, type: !7607, scopeLine: 1022, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !909, retainedNodes: !7609)
!7607 = !DISubroutineType(types: !7608)
!7608 = !{!7343, !990, !159, !159, !159}
!7609 = !{!7610, !7611, !7612, !7613, !7614}
!7610 = !DILocalVariable(name: "uart_port", arg: 1, scope: !7606, file: !910, line: 1018, type: !990)
!7611 = !DILocalVariable(name: "xon", arg: 2, scope: !7606, file: !910, line: 1019, type: !159)
!7612 = !DILocalVariable(name: "xoff", arg: 3, scope: !7606, file: !910, line: 1020, type: !159)
!7613 = !DILocalVariable(name: "escape_character", arg: 4, scope: !7606, file: !910, line: 1021, type: !159)
!7614 = !DILocalVariable(name: "uartx", scope: !7606, file: !910, line: 1023, type: !7077)
!7615 = !DILocation(line: 0, scope: !7606)
!7616 = !DILocation(line: 1025, column: 10, scope: !7617)
!7617 = distinct !DILexicalBlock(scope: !7606, file: !910, line: 1025, column: 9)
!7618 = !DILocation(line: 1025, column: 9, scope: !7606)
!7619 = !DILocation(line: 1029, column: 9, scope: !7620)
!7620 = distinct !DILexicalBlock(scope: !7606, file: !910, line: 1029, column: 9)
!7621 = !DILocation(line: 1029, column: 36, scope: !7620)
!7622 = !DILocation(line: 1029, column: 9, scope: !7606)
!7623 = !DILocation(line: 1033, column: 13, scope: !7606)
!7624 = !DILocation(line: 1035, column: 5, scope: !7606)
!7625 = !DILocation(line: 1038, column: 5, scope: !7606)
!7626 = !DILocation(line: 1038, column: 42, scope: !7606)
!7627 = !DILocation(line: 1039, column: 45, scope: !7606)
!7628 = !DILocation(line: 1039, column: 49, scope: !7606)
!7629 = !DILocation(line: 1040, column: 45, scope: !7606)
!7630 = !DILocation(line: 1040, column: 50, scope: !7606)
!7631 = !DILocation(line: 1041, column: 45, scope: !7606)
!7632 = !DILocation(line: 1041, column: 62, scope: !7606)
!7633 = !DILocation(line: 1044, column: 5, scope: !7606)
!7634 = !DILocation(line: 1045, column: 1, scope: !7606)
!7635 = distinct !DISubprogram(name: "hal_uart_set_hardware_flowcontrol", scope: !910, file: !910, line: 995, type: !7341, scopeLine: 996, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !909, retainedNodes: !7636)
!7636 = !{!7637, !7638}
!7637 = !DILocalVariable(name: "uart_port", arg: 1, scope: !7635, file: !910, line: 995, type: !990)
!7638 = !DILocalVariable(name: "uartx", scope: !7635, file: !910, line: 997, type: !7077)
!7639 = !DILocation(line: 0, scope: !7635)
!7640 = !DILocation(line: 999, column: 10, scope: !7641)
!7641 = distinct !DILexicalBlock(scope: !7635, file: !910, line: 999, column: 9)
!7642 = !DILocation(line: 999, column: 9, scope: !7635)
!7643 = !DILocation(line: 1003, column: 9, scope: !7644)
!7644 = distinct !DILexicalBlock(scope: !7635, file: !910, line: 1003, column: 9)
!7645 = !DILocation(line: 1003, column: 36, scope: !7644)
!7646 = !DILocation(line: 1003, column: 9, scope: !7635)
!7647 = !DILocation(line: 1007, column: 13, scope: !7635)
!7648 = !DILocation(line: 1009, column: 5, scope: !7635)
!7649 = !DILocation(line: 1012, column: 5, scope: !7635)
!7650 = !DILocation(line: 1012, column: 42, scope: !7635)
!7651 = !DILocation(line: 1015, column: 5, scope: !7635)
!7652 = !DILocation(line: 1016, column: 1, scope: !7635)
!7653 = distinct !DISubprogram(name: "hal_uart_set_dma", scope: !910, file: !910, line: 1071, type: !7654, scopeLine: 1072, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !909, retainedNodes: !7658)
!7654 = !DISubroutineType(types: !7655)
!7655 = !{!7343, !990, !7656}
!7656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7657, size: 32)
!7657 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1051)
!7658 = !{!7659, !7660, !7661, !7662, !7668, !7669, !7670}
!7659 = !DILocalVariable(name: "uart_port", arg: 1, scope: !7653, file: !910, line: 1071, type: !990)
!7660 = !DILocalVariable(name: "dma_config", arg: 2, scope: !7653, file: !910, line: 1071, type: !7656)
!7661 = !DILocalVariable(name: "irq_status", scope: !7653, file: !910, line: 1073, type: !61)
!7662 = !DILocalVariable(name: "internal_dma_config", scope: !7653, file: !910, line: 1074, type: !7663)
!7663 = !DIDerivedType(tag: DW_TAG_typedef, name: "vdma_config_t", file: !400, line: 283, baseType: !7664)
!7664 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !400, line: 280, size: 64, elements: !7665)
!7665 = !{!7666, !7667}
!7666 = !DIDerivedType(tag: DW_TAG_member, name: "base_address", scope: !7664, file: !400, line: 281, baseType: !61, size: 32)
!7667 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7664, file: !400, line: 282, baseType: !61, size: 32, offset: 32)
!7668 = !DILocalVariable(name: "tx_dma_channel", scope: !7653, file: !910, line: 1075, type: !6130)
!7669 = !DILocalVariable(name: "rx_dma_channel", scope: !7653, file: !910, line: 1075, type: !6130)
!7670 = !DILocalVariable(name: "status", scope: !7653, file: !910, line: 1076, type: !6129)
!7671 = !DILocation(line: 0, scope: !7653)
!7672 = !DILocation(line: 1074, column: 5, scope: !7653)
!7673 = !DILocation(line: 1074, column: 19, scope: !7653)
!7674 = !DILocation(line: 1078, column: 10, scope: !7675)
!7675 = distinct !DILexicalBlock(scope: !7653, file: !910, line: 1078, column: 9)
!7676 = !DILocation(line: 1078, column: 9, scope: !7653)
!7677 = !DILocation(line: 1081, column: 22, scope: !7678)
!7678 = distinct !DILexicalBlock(scope: !7653, file: !910, line: 1081, column: 9)
!7679 = !DILocation(line: 1081, column: 40, scope: !7678)
!7680 = !DILocation(line: 1081, column: 49, scope: !7678)
!7681 = !DILocation(line: 1082, column: 22, scope: !7678)
!7682 = !DILocation(line: 1082, column: 43, scope: !7678)
!7683 = !DILocation(line: 1081, column: 9, scope: !7653)
!7684 = !DILocation(line: 1085, column: 22, scope: !7685)
!7685 = distinct !DILexicalBlock(scope: !7653, file: !910, line: 1085, column: 9)
!7686 = !DILocation(line: 1085, column: 45, scope: !7685)
!7687 = !DILocation(line: 1085, column: 76, scope: !7685)
!7688 = !DILocation(line: 1086, column: 22, scope: !7685)
!7689 = !DILocation(line: 1086, column: 48, scope: !7685)
!7690 = !DILocation(line: 1086, column: 79, scope: !7685)
!7691 = !DILocation(line: 1090, column: 22, scope: !7692)
!7692 = distinct !DILexicalBlock(scope: !7653, file: !910, line: 1090, column: 9)
!7693 = !DILocation(line: 1090, column: 48, scope: !7692)
!7694 = !DILocation(line: 1090, column: 79, scope: !7692)
!7695 = !DILocation(line: 1091, column: 22, scope: !7692)
!7696 = !DILocation(line: 1091, column: 51, scope: !7692)
!7697 = !DILocation(line: 1091, column: 82, scope: !7692)
!7698 = !DILocation(line: 1092, column: 22, scope: !7692)
!7699 = !DILocation(line: 1092, column: 47, scope: !7692)
!7700 = !DILocation(line: 1092, column: 78, scope: !7692)
!7701 = !DILocation(line: 1098, column: 9, scope: !7702)
!7702 = distinct !DILexicalBlock(scope: !7653, file: !910, line: 1098, column: 9)
!7703 = !DILocation(line: 1098, column: 36, scope: !7702)
!7704 = !DILocation(line: 1098, column: 9, scope: !7653)
!7705 = !DILocation(line: 1102, column: 22, scope: !7653)
!7706 = !DILocation(line: 1103, column: 22, scope: !7653)
!7707 = !DILocation(line: 1105, column: 14, scope: !7653)
!7708 = !DILocation(line: 1106, column: 16, scope: !7709)
!7709 = distinct !DILexicalBlock(scope: !7653, file: !910, line: 1106, column: 9)
!7710 = !DILocation(line: 1106, column: 9, scope: !7653)
!7711 = !DILocation(line: 1107, column: 9, scope: !7712)
!7712 = distinct !DILexicalBlock(scope: !7709, file: !910, line: 1106, column: 28)
!7713 = !DILocation(line: 1110, column: 62, scope: !7653)
!7714 = !DILocation(line: 1110, column: 40, scope: !7653)
!7715 = !DILocation(line: 1110, column: 25, scope: !7653)
!7716 = !DILocation(line: 1110, column: 38, scope: !7653)
!7717 = !DILocation(line: 1111, column: 44, scope: !7653)
!7718 = !DILocation(line: 1111, column: 25, scope: !7653)
!7719 = !DILocation(line: 1111, column: 30, scope: !7653)
!7720 = !DILocation(line: 1112, column: 14, scope: !7653)
!7721 = !DILocation(line: 1113, column: 16, scope: !7722)
!7722 = distinct !DILexicalBlock(scope: !7653, file: !910, line: 1113, column: 9)
!7723 = !DILocation(line: 1113, column: 9, scope: !7653)
!7724 = !DILocation(line: 1114, column: 9, scope: !7725)
!7725 = distinct !DILexicalBlock(scope: !7722, file: !910, line: 1113, column: 28)
!7726 = !DILocation(line: 1117, column: 61, scope: !7653)
!7727 = !DILocation(line: 1117, column: 14, scope: !7653)
!7728 = !DILocation(line: 1118, column: 16, scope: !7729)
!7729 = distinct !DILexicalBlock(scope: !7653, file: !910, line: 1118, column: 9)
!7730 = !DILocation(line: 1118, column: 9, scope: !7653)
!7731 = !DILocation(line: 1119, column: 9, scope: !7732)
!7732 = distinct !DILexicalBlock(scope: !7729, file: !910, line: 1118, column: 28)
!7733 = !DILocation(line: 1123, column: 14, scope: !7653)
!7734 = !DILocation(line: 1124, column: 16, scope: !7735)
!7735 = distinct !DILexicalBlock(scope: !7653, file: !910, line: 1124, column: 9)
!7736 = !DILocation(line: 1124, column: 9, scope: !7653)
!7737 = !DILocation(line: 1125, column: 9, scope: !7738)
!7738 = distinct !DILexicalBlock(scope: !7735, file: !910, line: 1124, column: 28)
!7739 = !DILocation(line: 1128, column: 62, scope: !7653)
!7740 = !DILocation(line: 1128, column: 40, scope: !7653)
!7741 = !DILocation(line: 1128, column: 38, scope: !7653)
!7742 = !DILocation(line: 1129, column: 44, scope: !7653)
!7743 = !DILocation(line: 1129, column: 30, scope: !7653)
!7744 = !DILocation(line: 1130, column: 14, scope: !7653)
!7745 = !DILocation(line: 1131, column: 16, scope: !7746)
!7746 = distinct !DILexicalBlock(scope: !7653, file: !910, line: 1131, column: 9)
!7747 = !DILocation(line: 1131, column: 9, scope: !7653)
!7748 = !DILocation(line: 1132, column: 9, scope: !7749)
!7749 = distinct !DILexicalBlock(scope: !7746, file: !910, line: 1131, column: 28)
!7750 = !DILocation(line: 1135, column: 61, scope: !7653)
!7751 = !DILocation(line: 1135, column: 14, scope: !7653)
!7752 = !DILocation(line: 1136, column: 16, scope: !7753)
!7753 = distinct !DILexicalBlock(scope: !7653, file: !910, line: 1136, column: 9)
!7754 = !DILocation(line: 1136, column: 9, scope: !7653)
!7755 = !DILocation(line: 1137, column: 9, scope: !7756)
!7756 = distinct !DILexicalBlock(scope: !7753, file: !910, line: 1136, column: 28)
!7757 = !DILocation(line: 1140, column: 64, scope: !7653)
!7758 = !DILocation(line: 1140, column: 14, scope: !7653)
!7759 = !DILocation(line: 1141, column: 16, scope: !7760)
!7760 = distinct !DILexicalBlock(scope: !7653, file: !910, line: 1141, column: 9)
!7761 = !DILocation(line: 1141, column: 9, scope: !7653)
!7762 = !DILocation(line: 1142, column: 9, scope: !7763)
!7763 = distinct !DILexicalBlock(scope: !7760, file: !910, line: 1141, column: 28)
!7764 = !DILocation(line: 1146, column: 18, scope: !7653)
!7765 = !DILocation(line: 1147, column: 66, scope: !7653)
!7766 = !DILocation(line: 1147, column: 34, scope: !7653)
!7767 = !DILocation(line: 1147, column: 52, scope: !7653)
!7768 = !DILocation(line: 1148, column: 71, scope: !7653)
!7769 = !DILocation(line: 1148, column: 34, scope: !7653)
!7770 = !DILocation(line: 1148, column: 57, scope: !7653)
!7771 = !DILocation(line: 1149, column: 74, scope: !7653)
!7772 = !DILocation(line: 1149, column: 34, scope: !7653)
!7773 = !DILocation(line: 1149, column: 60, scope: !7653)
!7774 = !DILocation(line: 1150, column: 73, scope: !7653)
!7775 = !DILocation(line: 1150, column: 34, scope: !7653)
!7776 = !DILocation(line: 1150, column: 59, scope: !7653)
!7777 = !DILocation(line: 1151, column: 69, scope: !7653)
!7778 = !DILocation(line: 1151, column: 34, scope: !7653)
!7779 = !DILocation(line: 1151, column: 55, scope: !7653)
!7780 = !DILocation(line: 1152, column: 74, scope: !7653)
!7781 = !DILocation(line: 1152, column: 34, scope: !7653)
!7782 = !DILocation(line: 1152, column: 60, scope: !7653)
!7783 = !DILocation(line: 1153, column: 77, scope: !7653)
!7784 = !DILocation(line: 1153, column: 34, scope: !7653)
!7785 = !DILocation(line: 1153, column: 63, scope: !7653)
!7786 = !DILocation(line: 1154, column: 5, scope: !7653)
!7787 = !DILocation(line: 1156, column: 5, scope: !7653)
!7788 = !DILocation(line: 1157, column: 1, scope: !7653)
!7789 = distinct !DISubprogram(name: "hal_uart_register_callback", scope: !910, file: !910, line: 891, type: !7790, scopeLine: 894, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !909, retainedNodes: !7792)
!7790 = !DISubroutineType(types: !7791)
!7791 = !{!7343, !990, !1037, !88}
!7792 = !{!7793, !7794, !7795, !7796, !7797, !7798, !7799, !7800}
!7793 = !DILocalVariable(name: "uart_port", arg: 1, scope: !7789, file: !910, line: 891, type: !990)
!7794 = !DILocalVariable(name: "user_callback", arg: 2, scope: !7789, file: !910, line: 892, type: !1037)
!7795 = !DILocalVariable(name: "user_data", arg: 3, scope: !7789, file: !910, line: 893, type: !88)
!7796 = !DILocalVariable(name: "tx_dma_channel", scope: !7789, file: !910, line: 895, type: !6130)
!7797 = !DILocalVariable(name: "rx_dma_channel", scope: !7789, file: !910, line: 895, type: !6130)
!7798 = !DILocalVariable(name: "irq_status", scope: !7789, file: !910, line: 896, type: !61)
!7799 = !DILocalVariable(name: "status", scope: !7789, file: !910, line: 897, type: !6129)
!7800 = !DILocalVariable(name: "nvic_status", scope: !7789, file: !910, line: 898, type: !1282)
!7801 = !DILocation(line: 0, scope: !7789)
!7802 = !DILocation(line: 900, column: 11, scope: !7803)
!7803 = distinct !DILexicalBlock(scope: !7789, file: !910, line: 900, column: 9)
!7804 = !DILocation(line: 900, column: 42, scope: !7803)
!7805 = !DILocation(line: 905, column: 18, scope: !7789)
!7806 = !DILocation(line: 906, column: 9, scope: !7807)
!7807 = distinct !DILexicalBlock(scope: !7789, file: !910, line: 906, column: 9)
!7808 = !DILocation(line: 906, column: 36, scope: !7807)
!7809 = !DILocation(line: 906, column: 9, scope: !7789)
!7810 = !DILocation(line: 911, column: 22, scope: !7789)
!7811 = !DILocation(line: 912, column: 22, scope: !7789)
!7812 = !DILocation(line: 914, column: 32, scope: !7789)
!7813 = !DILocation(line: 914, column: 37, scope: !7789)
!7814 = !DILocation(line: 915, column: 32, scope: !7789)
!7815 = !DILocation(line: 915, column: 36, scope: !7789)
!7816 = !DILocation(line: 917, column: 91, scope: !7789)
!7817 = !DILocation(line: 917, column: 56, scope: !7789)
!7818 = !DILocation(line: 917, column: 5, scope: !7789)
!7819 = !DILocation(line: 918, column: 80, scope: !7789)
!7820 = !DILocation(line: 918, column: 14, scope: !7789)
!7821 = !DILocation(line: 919, column: 16, scope: !7822)
!7822 = distinct !DILexicalBlock(scope: !7789, file: !910, line: 919, column: 9)
!7823 = !DILocation(line: 919, column: 9, scope: !7789)
!7824 = !DILocation(line: 920, column: 9, scope: !7825)
!7825 = distinct !DILexicalBlock(scope: !7822, file: !910, line: 919, column: 28)
!7826 = !DILocation(line: 921, column: 9, scope: !7825)
!7827 = !DILocation(line: 924, column: 97, scope: !7789)
!7828 = !DILocation(line: 924, column: 56, scope: !7789)
!7829 = !DILocation(line: 924, column: 5, scope: !7789)
!7830 = !DILocation(line: 925, column: 80, scope: !7789)
!7831 = !DILocation(line: 925, column: 14, scope: !7789)
!7832 = !DILocation(line: 926, column: 16, scope: !7833)
!7833 = distinct !DILexicalBlock(scope: !7789, file: !910, line: 926, column: 9)
!7834 = !DILocation(line: 926, column: 9, scope: !7789)
!7835 = !DILocation(line: 927, column: 9, scope: !7836)
!7836 = distinct !DILexicalBlock(scope: !7833, file: !910, line: 926, column: 28)
!7837 = !DILocation(line: 928, column: 9, scope: !7836)
!7838 = !DILocation(line: 931, column: 49, scope: !7789)
!7839 = !DILocation(line: 931, column: 19, scope: !7789)
!7840 = !DILocation(line: 932, column: 21, scope: !7841)
!7841 = distinct !DILexicalBlock(scope: !7789, file: !910, line: 932, column: 9)
!7842 = !DILocation(line: 932, column: 9, scope: !7789)
!7843 = !DILocation(line: 933, column: 9, scope: !7844)
!7844 = distinct !DILexicalBlock(scope: !7841, file: !910, line: 932, column: 44)
!7845 = !DILocation(line: 934, column: 9, scope: !7844)
!7846 = !DILocation(line: 938, column: 5, scope: !7789)
!7847 = !DILocation(line: 940, column: 32, scope: !7789)
!7848 = !DILocation(line: 944, column: 5, scope: !7789)
!7849 = !DILocation(line: 945, column: 1, scope: !7789)
!7850 = distinct !DISubprogram(name: "uart_dma_callback_handler", scope: !910, file: !910, line: 303, type: !585, scopeLine: 304, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !909, retainedNodes: !7851)
!7851 = !{!7852, !7853, !7854}
!7852 = !DILocalVariable(name: "event", arg: 1, scope: !7850, file: !910, line: 303, type: !587)
!7853 = !DILocalVariable(name: "user_data", arg: 2, scope: !7850, file: !910, line: 303, type: !88)
!7854 = !DILocalVariable(name: "callback_data", scope: !7850, file: !910, line: 305, type: !983)
!7855 = !DILocation(line: 0, scope: !7850)
!7856 = !DILocation(line: 307, column: 24, scope: !7857)
!7857 = distinct !DILexicalBlock(scope: !7850, file: !910, line: 307, column: 9)
!7858 = !DILocation(line: 0, scope: !7857)
!7859 = !DILocation(line: 307, column: 9, scope: !7850)
!7860 = !DILocation(line: 308, column: 9, scope: !7861)
!7861 = distinct !DILexicalBlock(scope: !7857, file: !910, line: 307, column: 39)
!7862 = !DILocation(line: 309, column: 5, scope: !7861)
!7863 = !DILocation(line: 310, column: 9, scope: !7864)
!7864 = distinct !DILexicalBlock(scope: !7857, file: !910, line: 309, column: 12)
!7865 = !DILocation(line: 312, column: 1, scope: !7850)
!7866 = distinct !DISubprogram(name: "uart_start_dma_transmission", scope: !910, file: !910, line: 852, type: !7279, scopeLine: 853, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !909, retainedNodes: !7867)
!7867 = !{!7868, !7869, !7870, !7871, !7872}
!7868 = !DILocalVariable(name: "uart_port", arg: 1, scope: !7866, file: !910, line: 852, type: !990)
!7869 = !DILocalVariable(name: "uartx", scope: !7866, file: !910, line: 854, type: !7077)
!7870 = !DILocalVariable(name: "tx_dma_channel", scope: !7866, file: !910, line: 855, type: !6130)
!7871 = !DILocalVariable(name: "rx_dma_channel", scope: !7866, file: !910, line: 855, type: !6130)
!7872 = !DILocalVariable(name: "status", scope: !7866, file: !910, line: 856, type: !6129)
!7873 = !DILocation(line: 0, scope: !7866)
!7874 = !DILocation(line: 858, column: 13, scope: !7866)
!7875 = !DILocation(line: 859, column: 22, scope: !7866)
!7876 = !DILocation(line: 860, column: 22, scope: !7866)
!7877 = !DILocation(line: 863, column: 5, scope: !7866)
!7878 = !DILocation(line: 864, column: 5, scope: !7866)
!7879 = !DILocation(line: 864, column: 53, scope: !7866)
!7880 = !DILocation(line: 866, column: 5, scope: !7866)
!7881 = !DILocation(line: 867, column: 25, scope: !7866)
!7882 = !DILocation(line: 867, column: 5, scope: !7866)
!7883 = !DILocation(line: 868, column: 14, scope: !7866)
!7884 = !DILocation(line: 869, column: 16, scope: !7885)
!7885 = distinct !DILexicalBlock(scope: !7866, file: !910, line: 869, column: 9)
!7886 = !DILocation(line: 869, column: 9, scope: !7866)
!7887 = !DILocation(line: 870, column: 9, scope: !7888)
!7888 = distinct !DILexicalBlock(scope: !7885, file: !910, line: 869, column: 28)
!7889 = !DILocation(line: 873, column: 14, scope: !7866)
!7890 = !DILocation(line: 874, column: 16, scope: !7891)
!7891 = distinct !DILexicalBlock(scope: !7866, file: !910, line: 874, column: 9)
!7892 = !DILocation(line: 874, column: 9, scope: !7866)
!7893 = !DILocation(line: 875, column: 9, scope: !7894)
!7894 = distinct !DILexicalBlock(scope: !7891, file: !910, line: 874, column: 28)
!7895 = !DILocation(line: 878, column: 14, scope: !7866)
!7896 = !DILocation(line: 879, column: 16, scope: !7897)
!7897 = distinct !DILexicalBlock(scope: !7866, file: !910, line: 879, column: 9)
!7898 = !DILocation(line: 879, column: 9, scope: !7866)
!7899 = !DILocation(line: 880, column: 9, scope: !7900)
!7900 = distinct !DILexicalBlock(scope: !7897, file: !910, line: 879, column: 28)
!7901 = !DILocation(line: 883, column: 14, scope: !7866)
!7902 = !DILocation(line: 884, column: 16, scope: !7903)
!7903 = distinct !DILexicalBlock(scope: !7866, file: !910, line: 884, column: 9)
!7904 = !DILocation(line: 884, column: 9, scope: !7866)
!7905 = !DILocation(line: 885, column: 9, scope: !7906)
!7906 = distinct !DILexicalBlock(scope: !7903, file: !910, line: 884, column: 28)
!7907 = !DILocation(line: 888, column: 5, scope: !7866)
!7908 = !DILocation(line: 889, column: 1, scope: !7866)
!7909 = distinct !DISubprogram(name: "uart_config_is_valid", scope: !910, file: !910, line: 130, type: !7910, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !909, retainedNodes: !7914)
!7910 = !DISubroutineType(types: !7911)
!7911 = !{!91, !7912}
!7912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7913, size: 32)
!7913 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1017)
!7914 = !{!7915}
!7915 = !DILocalVariable(name: "config", arg: 1, scope: !7909, file: !910, line: 130, type: !7912)
!7916 = !DILocation(line: 0, scope: !7909)
!7917 = !DILocation(line: 132, column: 22, scope: !7909)
!7918 = !DILocation(line: 132, column: 31, scope: !7909)
!7919 = !DILocation(line: 132, column: 56, scope: !7909)
!7920 = !DILocation(line: 133, column: 22, scope: !7909)
!7921 = !DILocation(line: 133, column: 34, scope: !7909)
!7922 = !DILocation(line: 133, column: 61, scope: !7909)
!7923 = !DILocation(line: 134, column: 22, scope: !7909)
!7924 = !DILocation(line: 134, column: 31, scope: !7909)
!7925 = !DILocation(line: 134, column: 55, scope: !7909)
!7926 = !DILocation(line: 135, column: 22, scope: !7909)
!7927 = !DILocation(line: 135, column: 29, scope: !7909)
!7928 = !DILocation(line: 132, column: 5, scope: !7909)
!7929 = distinct !DISubprogram(name: "hal_uart_set_baudrate", scope: !910, file: !910, line: 416, type: !7930, scopeLine: 417, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !909, retainedNodes: !7932)
!7930 = !DISubroutineType(types: !7931)
!7931 = !{!7343, !990, !1021}
!7932 = !{!7933, !7934, !7935, !7936, !7937}
!7933 = !DILocalVariable(name: "uart_port", arg: 1, scope: !7929, file: !910, line: 416, type: !990)
!7934 = !DILocalVariable(name: "baudrate", arg: 2, scope: !7929, file: !910, line: 416, type: !1021)
!7935 = !DILocalVariable(name: "actual_baudrate", scope: !7929, file: !910, line: 418, type: !61)
!7936 = !DILocalVariable(name: "irq_status", scope: !7929, file: !910, line: 418, type: !61)
!7937 = !DILocalVariable(name: "uartx", scope: !7929, file: !910, line: 419, type: !7077)
!7938 = !DILocation(line: 0, scope: !7929)
!7939 = !DILocation(line: 421, column: 11, scope: !7940)
!7940 = distinct !DILexicalBlock(scope: !7929, file: !910, line: 421, column: 9)
!7941 = !DILocation(line: 421, column: 42, scope: !7940)
!7942 = !DILocation(line: 422, column: 11, scope: !7940)
!7943 = !DILocation(line: 421, column: 9, scope: !7929)
!7944 = !DILocation(line: 426, column: 9, scope: !7945)
!7945 = distinct !DILexicalBlock(scope: !7929, file: !910, line: 426, column: 9)
!7946 = !DILocation(line: 426, column: 36, scope: !7945)
!7947 = !DILocation(line: 426, column: 9, scope: !7929)
!7948 = !DILocation(line: 430, column: 18, scope: !7929)
!7949 = !DILocation(line: 432, column: 30, scope: !7929)
!7950 = !DILocation(line: 432, column: 39, scope: !7929)
!7951 = !DILocation(line: 434, column: 5, scope: !7929)
!7952 = !DILocation(line: 436, column: 13, scope: !7929)
!7953 = !DILocation(line: 437, column: 23, scope: !7929)
!7954 = !DILocation(line: 439, column: 5, scope: !7929)
!7955 = !DILocation(line: 441, column: 5, scope: !7929)
!7956 = !DILocation(line: 442, column: 1, scope: !7929)
!7957 = distinct !DISubprogram(name: "uart_baudrate_is_valid", scope: !910, file: !910, line: 125, type: !7958, scopeLine: 126, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !909, retainedNodes: !7960)
!7958 = !DISubroutineType(types: !7959)
!7959 = !{!91, !1021}
!7960 = !{!7961}
!7961 = !DILocalVariable(name: "baudrate", arg: 1, scope: !7957, file: !910, line: 125, type: !1021)
!7962 = !DILocation(line: 0, scope: !7957)
!7963 = !DILocation(line: 127, column: 22, scope: !7957)
!7964 = !DILocation(line: 127, column: 5, scope: !7957)
!7965 = distinct !DISubprogram(name: "hal_uart_set_format", scope: !910, file: !910, line: 444, type: !7966, scopeLine: 446, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !909, retainedNodes: !7968)
!7966 = !DISubroutineType(types: !7967)
!7967 = !{!7343, !990, !7912}
!7968 = !{!7969, !7970, !7971, !7972}
!7969 = !DILocalVariable(name: "uart_port", arg: 1, scope: !7965, file: !910, line: 444, type: !990)
!7970 = !DILocalVariable(name: "config", arg: 2, scope: !7965, file: !910, line: 445, type: !7912)
!7971 = !DILocalVariable(name: "irq_status", scope: !7965, file: !910, line: 447, type: !61)
!7972 = !DILocalVariable(name: "uartx", scope: !7965, file: !910, line: 448, type: !7077)
!7973 = !DILocation(line: 0, scope: !7965)
!7974 = !DILocation(line: 450, column: 11, scope: !7975)
!7975 = distinct !DILexicalBlock(scope: !7965, file: !910, line: 450, column: 9)
!7976 = !DILocation(line: 450, column: 42, scope: !7975)
!7977 = !DILocation(line: 451, column: 11, scope: !7975)
!7978 = !DILocation(line: 450, column: 9, scope: !7965)
!7979 = !DILocation(line: 455, column: 9, scope: !7980)
!7980 = distinct !DILexicalBlock(scope: !7965, file: !910, line: 455, column: 9)
!7981 = !DILocation(line: 455, column: 36, scope: !7980)
!7982 = !DILocation(line: 455, column: 9, scope: !7965)
!7983 = !DILocation(line: 459, column: 18, scope: !7965)
!7984 = !DILocation(line: 461, column: 49, scope: !7965)
!7985 = !DILocation(line: 461, column: 30, scope: !7965)
!7986 = !DILocation(line: 461, column: 39, scope: !7965)
!7987 = !DILocation(line: 462, column: 52, scope: !7965)
!7988 = !DILocation(line: 462, column: 30, scope: !7965)
!7989 = !DILocation(line: 462, column: 42, scope: !7965)
!7990 = !DILocation(line: 463, column: 49, scope: !7965)
!7991 = !DILocation(line: 463, column: 30, scope: !7965)
!7992 = !DILocation(line: 463, column: 39, scope: !7965)
!7993 = !DILocation(line: 464, column: 47, scope: !7965)
!7994 = !DILocation(line: 464, column: 30, scope: !7965)
!7995 = !DILocation(line: 464, column: 37, scope: !7965)
!7996 = !DILocation(line: 466, column: 5, scope: !7965)
!7997 = !DILocation(line: 468, column: 13, scope: !7965)
!7998 = !DILocation(line: 470, column: 46, scope: !7965)
!7999 = !DILocation(line: 470, column: 5, scope: !7965)
!8000 = !DILocation(line: 471, column: 36, scope: !7965)
!8001 = !DILocation(line: 471, column: 57, scope: !7965)
!8002 = !DILocation(line: 471, column: 75, scope: !7965)
!8003 = !DILocation(line: 471, column: 5, scope: !7965)
!8004 = !DILocation(line: 473, column: 5, scope: !7965)
!8005 = !DILocation(line: 474, column: 1, scope: !7965)
!8006 = distinct !DISubprogram(name: "hal_uart_put_char", scope: !910, file: !910, line: 642, type: !8007, scopeLine: 643, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !909, retainedNodes: !8009)
!8007 = !DISubroutineType(types: !8008)
!8008 = !{null, !990, !167}
!8009 = !{!8010, !8011, !8012}
!8010 = !DILocalVariable(name: "uart_port", arg: 1, scope: !8006, file: !910, line: 642, type: !990)
!8011 = !DILocalVariable(name: "byte", arg: 2, scope: !8006, file: !910, line: 642, type: !167)
!8012 = !DILocalVariable(name: "uartx", scope: !8006, file: !910, line: 644, type: !7077)
!8013 = !DILocation(line: 0, scope: !8006)
!8014 = !DILocation(line: 646, column: 10, scope: !8015)
!8015 = distinct !DILexicalBlock(scope: !8006, file: !910, line: 646, column: 9)
!8016 = !DILocation(line: 646, column: 9, scope: !8006)
!8017 = !DILocation(line: 650, column: 9, scope: !8018)
!8018 = distinct !DILexicalBlock(scope: !8006, file: !910, line: 650, column: 9)
!8019 = !DILocation(line: 650, column: 36, scope: !8018)
!8020 = !DILocation(line: 650, column: 9, scope: !8006)
!8021 = !DILocation(line: 654, column: 13, scope: !8006)
!8022 = !DILocation(line: 655, column: 5, scope: !8006)
!8023 = !DILocation(line: 656, column: 1, scope: !8006)
!8024 = distinct !DISubprogram(name: "hal_uart_send_polling", scope: !910, file: !910, line: 658, type: !8025, scopeLine: 659, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !909, retainedNodes: !8029)
!8025 = !DISubroutineType(types: !8026)
!8026 = !{!61, !990, !8027, !61}
!8027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8028, size: 32)
!8028 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !159)
!8029 = !{!8030, !8031, !8032, !8033}
!8030 = !DILocalVariable(name: "uart_port", arg: 1, scope: !8024, file: !910, line: 658, type: !990)
!8031 = !DILocalVariable(name: "data", arg: 2, scope: !8024, file: !910, line: 658, type: !8027)
!8032 = !DILocalVariable(name: "size", arg: 3, scope: !8024, file: !910, line: 658, type: !61)
!8033 = !DILocalVariable(name: "i", scope: !8024, file: !910, line: 660, type: !61)
!8034 = !DILocation(line: 0, scope: !8024)
!8035 = !DILocation(line: 662, column: 11, scope: !8036)
!8036 = distinct !DILexicalBlock(scope: !8024, file: !910, line: 662, column: 9)
!8037 = !DILocation(line: 662, column: 42, scope: !8036)
!8038 = !DILocation(line: 666, column: 9, scope: !8039)
!8039 = distinct !DILexicalBlock(scope: !8024, file: !910, line: 666, column: 9)
!8040 = !DILocation(line: 666, column: 36, scope: !8039)
!8041 = !DILocation(line: 666, column: 9, scope: !8024)
!8042 = !DILocation(line: 671, column: 38, scope: !8043)
!8043 = distinct !DILexicalBlock(scope: !8044, file: !910, line: 670, column: 32)
!8044 = distinct !DILexicalBlock(scope: !8045, file: !910, line: 670, column: 5)
!8045 = distinct !DILexicalBlock(scope: !8024, file: !910, line: 670, column: 5)
!8046 = !DILocation(line: 671, column: 9, scope: !8043)
!8047 = !DILocation(line: 672, column: 13, scope: !8043)
!8048 = !DILocation(line: 670, column: 28, scope: !8044)
!8049 = !DILocation(line: 670, column: 19, scope: !8044)
!8050 = !DILocation(line: 670, column: 5, scope: !8045)
!8051 = distinct !{!8051, !8050, !8052}
!8052 = !DILocation(line: 673, column: 5, scope: !8045)
!8053 = !DILocation(line: 676, column: 1, scope: !8024)
!8054 = distinct !DISubprogram(name: "hal_uart_send_dma", scope: !910, file: !910, line: 678, type: !8025, scopeLine: 679, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !909, retainedNodes: !8055)
!8055 = !{!8056, !8057, !8058, !8059, !8060, !8061, !8062, !8063, !8064}
!8056 = !DILocalVariable(name: "uart_port", arg: 1, scope: !8054, file: !910, line: 678, type: !990)
!8057 = !DILocalVariable(name: "data", arg: 2, scope: !8054, file: !910, line: 678, type: !8027)
!8058 = !DILocalVariable(name: "size", arg: 3, scope: !8054, file: !910, line: 678, type: !61)
!8059 = !DILocalVariable(name: "channel", scope: !8054, file: !910, line: 680, type: !6130)
!8060 = !DILocalVariable(name: "i", scope: !8054, file: !910, line: 681, type: !61)
!8061 = !DILocalVariable(name: "real_count", scope: !8054, file: !910, line: 681, type: !61)
!8062 = !DILocalVariable(name: "avail_space", scope: !8054, file: !910, line: 681, type: !61)
!8063 = !DILocalVariable(name: "status", scope: !8054, file: !910, line: 682, type: !6129)
!8064 = !DILocalVariable(name: "irq_status", scope: !8054, file: !910, line: 684, type: !61)
!8065 = !DILocation(line: 0, scope: !8054)
!8066 = !DILocation(line: 681, column: 5, scope: !8054)
!8067 = !DILocation(line: 687, column: 11, scope: !8068)
!8068 = distinct !DILexicalBlock(scope: !8054, file: !910, line: 687, column: 9)
!8069 = !DILocation(line: 687, column: 42, scope: !8068)
!8070 = !DILocation(line: 691, column: 9, scope: !8071)
!8071 = distinct !DILexicalBlock(scope: !8054, file: !910, line: 691, column: 9)
!8072 = !DILocation(line: 691, column: 36, scope: !8071)
!8073 = !DILocation(line: 691, column: 9, scope: !8054)
!8074 = !DILocation(line: 696, column: 18, scope: !8054)
!8075 = !DILocation(line: 697, column: 9, scope: !8076)
!8076 = distinct !DILexicalBlock(scope: !8054, file: !910, line: 697, column: 9)
!8077 = !DILocation(line: 697, column: 44, scope: !8076)
!8078 = !DILocation(line: 697, column: 9, scope: !8054)
!8079 = !DILocation(line: 698, column: 38, scope: !8080)
!8080 = distinct !DILexicalBlock(scope: !8076, file: !910, line: 697, column: 54)
!8081 = !DILocation(line: 698, column: 9, scope: !8080)
!8082 = !DILocation(line: 699, column: 44, scope: !8080)
!8083 = !DILocation(line: 700, column: 5, scope: !8080)
!8084 = !DILocation(line: 701, column: 5, scope: !8054)
!8085 = !DILocation(line: 704, column: 15, scope: !8054)
!8086 = !DILocation(line: 706, column: 14, scope: !8054)
!8087 = !DILocation(line: 707, column: 16, scope: !8088)
!8088 = distinct !DILexicalBlock(scope: !8054, file: !910, line: 707, column: 9)
!8089 = !DILocation(line: 707, column: 9, scope: !8054)
!8090 = !DILocation(line: 708, column: 9, scope: !8091)
!8091 = distinct !DILexicalBlock(scope: !8088, file: !910, line: 707, column: 28)
!8092 = !DILocation(line: 712, column: 9, scope: !8093)
!8093 = distinct !DILexicalBlock(scope: !8054, file: !910, line: 712, column: 9)
!8094 = !DILocation(line: 712, column: 21, scope: !8093)
!8095 = !DILocation(line: 717, column: 19, scope: !8096)
!8096 = distinct !DILexicalBlock(scope: !8097, file: !910, line: 717, column: 5)
!8097 = distinct !DILexicalBlock(scope: !8054, file: !910, line: 717, column: 5)
!8098 = !DILocation(line: 717, column: 5, scope: !8097)
!8099 = distinct !{!8099, !8098, !8100}
!8100 = !DILocation(line: 723, column: 5, scope: !8097)
!8101 = !DILocation(line: 718, column: 42, scope: !8102)
!8102 = distinct !DILexicalBlock(scope: !8096, file: !910, line: 717, column: 38)
!8103 = !DILocation(line: 718, column: 18, scope: !8102)
!8104 = !DILocation(line: 719, column: 20, scope: !8105)
!8105 = distinct !DILexicalBlock(scope: !8102, file: !910, line: 719, column: 13)
!8106 = !DILocation(line: 717, column: 34, scope: !8096)
!8107 = !DILocation(line: 719, column: 13, scope: !8102)
!8108 = !DILocation(line: 720, column: 13, scope: !8109)
!8109 = distinct !DILexicalBlock(scope: !8105, file: !910, line: 719, column: 32)
!8110 = !DILocation(line: 728, column: 23, scope: !8111)
!8111 = distinct !DILexicalBlock(scope: !8054, file: !910, line: 728, column: 9)
!8112 = !DILocation(line: 728, column: 20, scope: !8111)
!8113 = !DILocation(line: 728, column: 9, scope: !8054)
!8114 = !DILocation(line: 729, column: 18, scope: !8115)
!8115 = distinct !DILexicalBlock(scope: !8111, file: !910, line: 728, column: 36)
!8116 = !DILocation(line: 730, column: 20, scope: !8117)
!8117 = distinct !DILexicalBlock(scope: !8115, file: !910, line: 730, column: 13)
!8118 = !DILocation(line: 730, column: 13, scope: !8115)
!8119 = !DILocation(line: 731, column: 13, scope: !8120)
!8120 = distinct !DILexicalBlock(scope: !8117, file: !910, line: 730, column: 32)
!8121 = !DILocation(line: 737, column: 1, scope: !8054)
!8122 = distinct !DISubprogram(name: "hal_uart_get_char", scope: !910, file: !910, line: 739, type: !8123, scopeLine: 740, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !909, retainedNodes: !8125)
!8123 = !DISubroutineType(types: !8124)
!8124 = !{!167, !990}
!8125 = !{!8126, !8127, !8128}
!8126 = !DILocalVariable(name: "uart_port", arg: 1, scope: !8122, file: !910, line: 739, type: !990)
!8127 = !DILocalVariable(name: "data", scope: !8122, file: !910, line: 741, type: !167)
!8128 = !DILocalVariable(name: "uartx", scope: !8122, file: !910, line: 742, type: !7077)
!8129 = !DILocation(line: 0, scope: !8122)
!8130 = !DILocation(line: 744, column: 10, scope: !8131)
!8131 = distinct !DILexicalBlock(scope: !8122, file: !910, line: 744, column: 9)
!8132 = !DILocation(line: 744, column: 9, scope: !8122)
!8133 = !DILocation(line: 748, column: 9, scope: !8134)
!8134 = distinct !DILexicalBlock(scope: !8122, file: !910, line: 748, column: 9)
!8135 = !DILocation(line: 748, column: 36, scope: !8134)
!8136 = !DILocation(line: 748, column: 9, scope: !8122)
!8137 = !DILocation(line: 752, column: 13, scope: !8122)
!8138 = !DILocation(line: 754, column: 12, scope: !8122)
!8139 = !DILocation(line: 756, column: 5, scope: !8122)
!8140 = !DILocation(line: 757, column: 1, scope: !8122)
!8141 = distinct !DISubprogram(name: "hal_uart_get_char_unblocking", scope: !910, file: !910, line: 759, type: !8142, scopeLine: 760, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !909, retainedNodes: !8144)
!8142 = !DISubroutineType(types: !8143)
!8143 = !{!61, !990}
!8144 = !{!8145, !8146, !8147}
!8145 = !DILocalVariable(name: "uart_port", arg: 1, scope: !8141, file: !910, line: 759, type: !990)
!8146 = !DILocalVariable(name: "data", scope: !8141, file: !910, line: 761, type: !61)
!8147 = !DILocalVariable(name: "uartx", scope: !8141, file: !910, line: 762, type: !7077)
!8148 = !DILocation(line: 0, scope: !8141)
!8149 = !DILocation(line: 764, column: 10, scope: !8150)
!8150 = distinct !DILexicalBlock(scope: !8141, file: !910, line: 764, column: 9)
!8151 = !DILocation(line: 764, column: 9, scope: !8141)
!8152 = !DILocation(line: 768, column: 9, scope: !8153)
!8153 = distinct !DILexicalBlock(scope: !8141, file: !910, line: 768, column: 9)
!8154 = !DILocation(line: 768, column: 36, scope: !8153)
!8155 = !DILocation(line: 768, column: 9, scope: !8141)
!8156 = !DILocation(line: 772, column: 13, scope: !8141)
!8157 = !DILocation(line: 774, column: 12, scope: !8141)
!8158 = !DILocation(line: 776, column: 5, scope: !8141)
!8159 = !DILocation(line: 777, column: 1, scope: !8141)
!8160 = distinct !DISubprogram(name: "hal_uart_receive_polling", scope: !910, file: !910, line: 779, type: !8161, scopeLine: 780, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !909, retainedNodes: !8163)
!8161 = !DISubroutineType(types: !8162)
!8162 = !{!61, !990, !1055, !61}
!8163 = !{!8164, !8165, !8166, !8167, !8168}
!8164 = !DILocalVariable(name: "uart_port", arg: 1, scope: !8160, file: !910, line: 779, type: !990)
!8165 = !DILocalVariable(name: "buffer", arg: 2, scope: !8160, file: !910, line: 779, type: !1055)
!8166 = !DILocalVariable(name: "size", arg: 3, scope: !8160, file: !910, line: 779, type: !61)
!8167 = !DILocalVariable(name: "i", scope: !8160, file: !910, line: 781, type: !61)
!8168 = !DILocalVariable(name: "pbuf", scope: !8160, file: !910, line: 782, type: !1055)
!8169 = !DILocation(line: 0, scope: !8160)
!8170 = !DILocation(line: 784, column: 11, scope: !8171)
!8171 = distinct !DILexicalBlock(scope: !8160, file: !910, line: 784, column: 9)
!8172 = !DILocation(line: 784, column: 42, scope: !8171)
!8173 = !DILocation(line: 789, column: 9, scope: !8174)
!8174 = distinct !DILexicalBlock(scope: !8160, file: !910, line: 789, column: 9)
!8175 = !DILocation(line: 789, column: 36, scope: !8174)
!8176 = !DILocation(line: 789, column: 9, scope: !8160)
!8177 = !DILocation(line: 794, column: 19, scope: !8178)
!8178 = distinct !DILexicalBlock(scope: !8179, file: !910, line: 793, column: 32)
!8179 = distinct !DILexicalBlock(scope: !8180, file: !910, line: 793, column: 5)
!8180 = distinct !DILexicalBlock(scope: !8160, file: !910, line: 793, column: 5)
!8181 = !DILocation(line: 794, column: 9, scope: !8178)
!8182 = !DILocation(line: 794, column: 17, scope: !8178)
!8183 = !DILocation(line: 793, column: 28, scope: !8179)
!8184 = !DILocation(line: 793, column: 19, scope: !8179)
!8185 = !DILocation(line: 793, column: 5, scope: !8180)
!8186 = distinct !{!8186, !8185, !8187}
!8187 = !DILocation(line: 795, column: 5, scope: !8180)
!8188 = !DILocation(line: 798, column: 1, scope: !8160)
!8189 = distinct !DISubprogram(name: "hal_uart_receive_dma", scope: !910, file: !910, line: 800, type: !8161, scopeLine: 801, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !909, retainedNodes: !8190)
!8190 = !{!8191, !8192, !8193, !8194, !8195, !8196, !8197, !8198}
!8191 = !DILocalVariable(name: "uart_port", arg: 1, scope: !8189, file: !910, line: 800, type: !990)
!8192 = !DILocalVariable(name: "buffer", arg: 2, scope: !8189, file: !910, line: 800, type: !1055)
!8193 = !DILocalVariable(name: "size", arg: 3, scope: !8189, file: !910, line: 800, type: !61)
!8194 = !DILocalVariable(name: "channel", scope: !8189, file: !910, line: 802, type: !6130)
!8195 = !DILocalVariable(name: "receive_count", scope: !8189, file: !910, line: 803, type: !61)
!8196 = !DILocalVariable(name: "avail_count", scope: !8189, file: !910, line: 803, type: !61)
!8197 = !DILocalVariable(name: "index", scope: !8189, file: !910, line: 804, type: !61)
!8198 = !DILocalVariable(name: "status", scope: !8189, file: !910, line: 805, type: !6129)
!8199 = !DILocation(line: 0, scope: !8189)
!8200 = !DILocation(line: 803, column: 5, scope: !8189)
!8201 = !DILocation(line: 807, column: 11, scope: !8202)
!8202 = distinct !DILexicalBlock(scope: !8189, file: !910, line: 807, column: 9)
!8203 = !DILocation(line: 807, column: 42, scope: !8202)
!8204 = !DILocation(line: 813, column: 9, scope: !8205)
!8205 = distinct !DILexicalBlock(scope: !8189, file: !910, line: 813, column: 9)
!8206 = !DILocation(line: 813, column: 36, scope: !8205)
!8207 = !DILocation(line: 813, column: 9, scope: !8189)
!8208 = !DILocation(line: 817, column: 15, scope: !8189)
!8209 = !DILocation(line: 819, column: 14, scope: !8189)
!8210 = !DILocation(line: 820, column: 16, scope: !8211)
!8211 = distinct !DILexicalBlock(scope: !8189, file: !910, line: 820, column: 9)
!8212 = !DILocation(line: 820, column: 9, scope: !8189)
!8213 = !DILocation(line: 821, column: 9, scope: !8214)
!8214 = distinct !DILexicalBlock(scope: !8211, file: !910, line: 820, column: 28)
!8215 = !DILocation(line: 825, column: 9, scope: !8216)
!8216 = distinct !DILexicalBlock(scope: !8189, file: !910, line: 825, column: 9)
!8217 = !DILocation(line: 825, column: 21, scope: !8216)
!8218 = !DILocation(line: 830, column: 27, scope: !8219)
!8219 = distinct !DILexicalBlock(scope: !8220, file: !910, line: 830, column: 5)
!8220 = distinct !DILexicalBlock(scope: !8189, file: !910, line: 830, column: 5)
!8221 = !DILocation(line: 830, column: 5, scope: !8220)
!8222 = distinct !{!8222, !8221, !8223}
!8223 = !DILocation(line: 836, column: 5, scope: !8220)
!8224 = !DILocation(line: 831, column: 42, scope: !8225)
!8225 = distinct !DILexicalBlock(scope: !8219, file: !910, line: 830, column: 53)
!8226 = !DILocation(line: 831, column: 18, scope: !8225)
!8227 = !DILocation(line: 832, column: 20, scope: !8228)
!8228 = distinct !DILexicalBlock(scope: !8225, file: !910, line: 832, column: 13)
!8229 = !DILocation(line: 830, column: 49, scope: !8219)
!8230 = !DILocation(line: 832, column: 13, scope: !8225)
!8231 = !DILocation(line: 833, column: 13, scope: !8232)
!8232 = distinct !DILexicalBlock(scope: !8228, file: !910, line: 832, column: 32)
!8233 = !DILocation(line: 841, column: 26, scope: !8234)
!8234 = distinct !DILexicalBlock(scope: !8189, file: !910, line: 841, column: 9)
!8235 = !DILocation(line: 841, column: 23, scope: !8234)
!8236 = !DILocation(line: 841, column: 9, scope: !8189)
!8237 = !DILocation(line: 842, column: 18, scope: !8238)
!8238 = distinct !DILexicalBlock(scope: !8234, file: !910, line: 841, column: 39)
!8239 = !DILocation(line: 843, column: 20, scope: !8240)
!8240 = distinct !DILexicalBlock(scope: !8238, file: !910, line: 843, column: 13)
!8241 = !DILocation(line: 843, column: 13, scope: !8238)
!8242 = !DILocation(line: 844, column: 13, scope: !8243)
!8243 = distinct !DILexicalBlock(scope: !8240, file: !910, line: 843, column: 32)
!8244 = !DILocation(line: 850, column: 1, scope: !8189)
!8245 = distinct !DISubprogram(name: "hal_uart_get_available_send_space", scope: !910, file: !910, line: 947, type: !8142, scopeLine: 948, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !909, retainedNodes: !8246)
!8246 = !{!8247, !8248, !8249, !8250}
!8247 = !DILocalVariable(name: "uart_port", arg: 1, scope: !8245, file: !910, line: 947, type: !990)
!8248 = !DILocalVariable(name: "channel", scope: !8245, file: !910, line: 949, type: !6130)
!8249 = !DILocalVariable(name: "roomleft", scope: !8245, file: !910, line: 950, type: !61)
!8250 = !DILocalVariable(name: "status", scope: !8245, file: !910, line: 951, type: !6129)
!8251 = !DILocation(line: 0, scope: !8245)
!8252 = !DILocation(line: 950, column: 5, scope: !8245)
!8253 = !DILocation(line: 953, column: 10, scope: !8254)
!8254 = distinct !DILexicalBlock(scope: !8245, file: !910, line: 953, column: 9)
!8255 = !DILocation(line: 953, column: 9, scope: !8245)
!8256 = !DILocation(line: 957, column: 9, scope: !8257)
!8257 = distinct !DILexicalBlock(scope: !8245, file: !910, line: 957, column: 9)
!8258 = !DILocation(line: 957, column: 36, scope: !8257)
!8259 = !DILocation(line: 957, column: 9, scope: !8245)
!8260 = !DILocation(line: 961, column: 15, scope: !8245)
!8261 = !DILocation(line: 962, column: 14, scope: !8245)
!8262 = !DILocation(line: 963, column: 16, scope: !8263)
!8263 = distinct !DILexicalBlock(scope: !8245, file: !910, line: 963, column: 9)
!8264 = !DILocation(line: 963, column: 9, scope: !8245)
!8265 = !DILocation(line: 964, column: 9, scope: !8266)
!8266 = distinct !DILexicalBlock(scope: !8263, file: !910, line: 963, column: 28)
!8267 = !DILocation(line: 968, column: 12, scope: !8245)
!8268 = !DILocation(line: 968, column: 5, scope: !8245)
!8269 = !DILocation(line: 969, column: 1, scope: !8245)
!8270 = distinct !DISubprogram(name: "hal_uart_get_available_receive_bytes", scope: !910, file: !910, line: 971, type: !8142, scopeLine: 972, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !909, retainedNodes: !8271)
!8271 = !{!8272, !8273, !8274, !8275}
!8272 = !DILocalVariable(name: "uart_port", arg: 1, scope: !8270, file: !910, line: 971, type: !990)
!8273 = !DILocalVariable(name: "channel", scope: !8270, file: !910, line: 973, type: !6130)
!8274 = !DILocalVariable(name: "avail", scope: !8270, file: !910, line: 974, type: !61)
!8275 = !DILocalVariable(name: "status", scope: !8270, file: !910, line: 975, type: !6129)
!8276 = !DILocation(line: 0, scope: !8270)
!8277 = !DILocation(line: 974, column: 5, scope: !8270)
!8278 = !DILocation(line: 977, column: 10, scope: !8279)
!8279 = distinct !DILexicalBlock(scope: !8270, file: !910, line: 977, column: 9)
!8280 = !DILocation(line: 977, column: 9, scope: !8270)
!8281 = !DILocation(line: 981, column: 9, scope: !8282)
!8282 = distinct !DILexicalBlock(scope: !8270, file: !910, line: 981, column: 9)
!8283 = !DILocation(line: 981, column: 36, scope: !8282)
!8284 = !DILocation(line: 981, column: 9, scope: !8270)
!8285 = !DILocation(line: 985, column: 15, scope: !8270)
!8286 = !DILocation(line: 986, column: 14, scope: !8270)
!8287 = !DILocation(line: 987, column: 16, scope: !8288)
!8288 = distinct !DILexicalBlock(scope: !8270, file: !910, line: 987, column: 9)
!8289 = !DILocation(line: 987, column: 9, scope: !8270)
!8290 = !DILocation(line: 988, column: 9, scope: !8291)
!8291 = distinct !DILexicalBlock(scope: !8288, file: !910, line: 987, column: 28)
!8292 = !DILocation(line: 992, column: 12, scope: !8270)
!8293 = !DILocation(line: 992, column: 5, scope: !8270)
!8294 = !DILocation(line: 993, column: 1, scope: !8270)
!8295 = distinct !DISubprogram(name: "hal_uart_disable_flowcontrol", scope: !910, file: !910, line: 1047, type: !7341, scopeLine: 1048, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !909, retainedNodes: !8296)
!8296 = !{!8297, !8298}
!8297 = !DILocalVariable(name: "uart_port", arg: 1, scope: !8295, file: !910, line: 1047, type: !990)
!8298 = !DILocalVariable(name: "uartx", scope: !8295, file: !910, line: 1049, type: !7077)
!8299 = !DILocation(line: 0, scope: !8295)
!8300 = !DILocation(line: 1051, column: 10, scope: !8301)
!8301 = distinct !DILexicalBlock(scope: !8295, file: !910, line: 1051, column: 9)
!8302 = !DILocation(line: 1051, column: 9, scope: !8295)
!8303 = !DILocation(line: 1055, column: 9, scope: !8304)
!8304 = distinct !DILexicalBlock(scope: !8295, file: !910, line: 1055, column: 9)
!8305 = !DILocation(line: 1055, column: 36, scope: !8304)
!8306 = !DILocation(line: 1055, column: 9, scope: !8295)
!8307 = !DILocation(line: 1059, column: 13, scope: !8295)
!8308 = !DILocation(line: 1061, column: 5, scope: !8295)
!8309 = !DILocation(line: 1064, column: 5, scope: !8295)
!8310 = !DILocation(line: 1064, column: 42, scope: !8295)
!8311 = !DILocation(line: 1067, column: 5, scope: !8295)
!8312 = !DILocation(line: 1068, column: 1, scope: !8295)
!8313 = distinct !DISubprogram(name: "uart_set_baudrate", scope: !4072, file: !4072, line: 52, type: !8314, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4071, retainedNodes: !8371)
!8314 = !DISubroutineType(types: !8315)
!8315 = !{null, !8316, !61}
!8316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8317, size: 32)
!8317 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_REGISTER_T", file: !56, line: 588, baseType: !8318)
!8318 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 542, size: 800, elements: !8319)
!8319 = !{!8320, !8326, !8331, !8337, !8338, !8343, !8348, !8349, !8354, !8355, !8356, !8357, !8358, !8359, !8360, !8361, !8362, !8363, !8364, !8365, !8366, !8367, !8368, !8369, !8370}
!8320 = !DIDerivedType(tag: DW_TAG_member, name: "RBR_THR_DLL", scope: !8318, file: !56, line: 547, baseType: !8321, size: 32)
!8321 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8318, file: !56, line: 543, size: 32, elements: !8322)
!8322 = !{!8323, !8324, !8325}
!8323 = !DIDerivedType(tag: DW_TAG_member, name: "RBR", scope: !8321, file: !56, line: 544, baseType: !324, size: 32)
!8324 = !DIDerivedType(tag: DW_TAG_member, name: "THR", scope: !8321, file: !56, line: 545, baseType: !60, size: 32)
!8325 = !DIDerivedType(tag: DW_TAG_member, name: "DLL", scope: !8321, file: !56, line: 546, baseType: !60, size: 32)
!8326 = !DIDerivedType(tag: DW_TAG_member, name: "IER_DLM", scope: !8318, file: !56, line: 551, baseType: !8327, size: 32, offset: 32)
!8327 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8318, file: !56, line: 548, size: 32, elements: !8328)
!8328 = !{!8329, !8330}
!8329 = !DIDerivedType(tag: DW_TAG_member, name: "IER", scope: !8327, file: !56, line: 549, baseType: !60, size: 32)
!8330 = !DIDerivedType(tag: DW_TAG_member, name: "DLM", scope: !8327, file: !56, line: 550, baseType: !60, size: 32)
!8331 = !DIDerivedType(tag: DW_TAG_member, name: "IIR_FCR_EFR", scope: !8318, file: !56, line: 556, baseType: !8332, size: 32, offset: 64)
!8332 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8318, file: !56, line: 552, size: 32, elements: !8333)
!8333 = !{!8334, !8335, !8336}
!8334 = !DIDerivedType(tag: DW_TAG_member, name: "IIR", scope: !8332, file: !56, line: 553, baseType: !324, size: 32)
!8335 = !DIDerivedType(tag: DW_TAG_member, name: "FCR", scope: !8332, file: !56, line: 554, baseType: !60, size: 32)
!8336 = !DIDerivedType(tag: DW_TAG_member, name: "EFR", scope: !8332, file: !56, line: 555, baseType: !60, size: 32)
!8337 = !DIDerivedType(tag: DW_TAG_member, name: "LCR", scope: !8318, file: !56, line: 557, baseType: !60, size: 32, offset: 96)
!8338 = !DIDerivedType(tag: DW_TAG_member, name: "MCR_XON1", scope: !8318, file: !56, line: 561, baseType: !8339, size: 32, offset: 128)
!8339 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8318, file: !56, line: 558, size: 32, elements: !8340)
!8340 = !{!8341, !8342}
!8341 = !DIDerivedType(tag: DW_TAG_member, name: "MCR", scope: !8339, file: !56, line: 559, baseType: !60, size: 32)
!8342 = !DIDerivedType(tag: DW_TAG_member, name: "XON1", scope: !8339, file: !56, line: 560, baseType: !60, size: 32)
!8343 = !DIDerivedType(tag: DW_TAG_member, name: "LSR_XON2", scope: !8318, file: !56, line: 565, baseType: !8344, size: 32, offset: 160)
!8344 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8318, file: !56, line: 562, size: 32, elements: !8345)
!8345 = !{!8346, !8347}
!8346 = !DIDerivedType(tag: DW_TAG_member, name: "LSR", scope: !8344, file: !56, line: 563, baseType: !324, size: 32)
!8347 = !DIDerivedType(tag: DW_TAG_member, name: "XON2", scope: !8344, file: !56, line: 564, baseType: !60, size: 32)
!8348 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF1", scope: !8318, file: !56, line: 566, baseType: !60, size: 32, offset: 192)
!8349 = !DIDerivedType(tag: DW_TAG_member, name: "SCR_XOFF2", scope: !8318, file: !56, line: 570, baseType: !8350, size: 32, offset: 224)
!8350 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8318, file: !56, line: 567, size: 32, elements: !8351)
!8351 = !{!8352, !8353}
!8352 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !8350, file: !56, line: 568, baseType: !60, size: 32)
!8353 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF2", scope: !8350, file: !56, line: 569, baseType: !60, size: 32)
!8354 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_EN", scope: !8318, file: !56, line: 571, baseType: !60, size: 32, offset: 256)
!8355 = !DIDerivedType(tag: DW_TAG_member, name: "HIGHSPEED", scope: !8318, file: !56, line: 572, baseType: !60, size: 32, offset: 288)
!8356 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_COUNT", scope: !8318, file: !56, line: 573, baseType: !60, size: 32, offset: 320)
!8357 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_POINT", scope: !8318, file: !56, line: 574, baseType: !60, size: 32, offset: 352)
!8358 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_REG", scope: !8318, file: !56, line: 575, baseType: !324, size: 32, offset: 384)
!8359 = !DIDerivedType(tag: DW_TAG_member, name: "RATEFIX_AD", scope: !8318, file: !56, line: 576, baseType: !60, size: 32, offset: 416)
!8360 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUDSAMPLE", scope: !8318, file: !56, line: 577, baseType: !60, size: 32, offset: 448)
!8361 = !DIDerivedType(tag: DW_TAG_member, name: "GUARD", scope: !8318, file: !56, line: 578, baseType: !60, size: 32, offset: 480)
!8362 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_DAT", scope: !8318, file: !56, line: 579, baseType: !60, size: 32, offset: 512)
!8363 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_EN", scope: !8318, file: !56, line: 580, baseType: !60, size: 32, offset: 544)
!8364 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEP_EN", scope: !8318, file: !56, line: 581, baseType: !60, size: 32, offset: 576)
!8365 = !DIDerivedType(tag: DW_TAG_member, name: "DMA_EN", scope: !8318, file: !56, line: 582, baseType: !60, size: 32, offset: 608)
!8366 = !DIDerivedType(tag: DW_TAG_member, name: "RXTRI_AD", scope: !8318, file: !56, line: 583, baseType: !60, size: 32, offset: 640)
!8367 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_L", scope: !8318, file: !56, line: 584, baseType: !60, size: 32, offset: 672)
!8368 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_M", scope: !8318, file: !56, line: 585, baseType: !60, size: 32, offset: 704)
!8369 = !DIDerivedType(tag: DW_TAG_member, name: "FCR_RD", scope: !8318, file: !56, line: 586, baseType: !324, size: 32, offset: 736)
!8370 = !DIDerivedType(tag: DW_TAG_member, name: "TX_ACTIVE_EN", scope: !8318, file: !56, line: 587, baseType: !60, size: 32, offset: 768)
!8371 = !{!8372, !8373, !8374, !8375, !8376, !8377, !8378, !8379, !8380, !8381, !8382, !8384}
!8372 = !DILocalVariable(name: "uartx", arg: 1, scope: !8313, file: !4072, line: 52, type: !8316)
!8373 = !DILocalVariable(name: "actual_baudrate", arg: 2, scope: !8313, file: !4072, line: 52, type: !61)
!8374 = !DILocalVariable(name: "uart_clock", scope: !8313, file: !4072, line: 54, type: !61)
!8375 = !DILocalVariable(name: "integer", scope: !8313, file: !4072, line: 54, type: !61)
!8376 = !DILocalVariable(name: "remainder", scope: !8313, file: !4072, line: 54, type: !61)
!8377 = !DILocalVariable(name: "fraction", scope: !8313, file: !4072, line: 54, type: !61)
!8378 = !DILocalVariable(name: "dll_dlm", scope: !8313, file: !4072, line: 55, type: !61)
!8379 = !DILocalVariable(name: "sample_count", scope: !8313, file: !4072, line: 55, type: !61)
!8380 = !DILocalVariable(name: "sample_point", scope: !8313, file: !4072, line: 55, type: !61)
!8381 = !DILocalVariable(name: "temp_lcr", scope: !8313, file: !4072, line: 55, type: !61)
!8382 = !DILocalVariable(name: "fraction_L_mapping", scope: !8313, file: !4072, line: 56, type: !8383)
!8383 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 320, elements: !531)
!8384 = !DILocalVariable(name: "fraction_M_mapping", scope: !8313, file: !4072, line: 57, type: !8383)
!8385 = !DILocation(line: 0, scope: !8313)
!8386 = !DILocation(line: 56, column: 14, scope: !8313)
!8387 = !DILocation(line: 57, column: 5, scope: !8313)
!8388 = !DILocation(line: 57, column: 14, scope: !8313)
!8389 = !DILocation(line: 59, column: 12, scope: !8313)
!8390 = !DILocation(line: 59, column: 23, scope: !8313)
!8391 = !DILocation(line: 60, column: 12, scope: !8313)
!8392 = !DILocation(line: 60, column: 22, scope: !8313)
!8393 = !DILocation(line: 61, column: 12, scope: !8313)
!8394 = !DILocation(line: 61, column: 22, scope: !8313)
!8395 = !DILocation(line: 63, column: 9, scope: !8396)
!8396 = distinct !DILexicalBlock(scope: !8313, file: !4072, line: 63, column: 9)
!8397 = !DILocation(line: 63, column: 9, scope: !8313)
!8398 = !DILocation(line: 64, column: 22, scope: !8399)
!8399 = distinct !DILexicalBlock(scope: !8396, file: !4072, line: 63, column: 37)
!8400 = !DILocation(line: 64, column: 45, scope: !8399)
!8401 = !DILocation(line: 65, column: 5, scope: !8399)
!8402 = !DILocation(line: 0, scope: !8396)
!8403 = !DILocation(line: 69, column: 45, scope: !8313)
!8404 = !DILocation(line: 69, column: 26, scope: !8313)
!8405 = !DILocation(line: 70, column: 30, scope: !8313)
!8406 = !DILocation(line: 70, column: 36, scope: !8313)
!8407 = !DILocation(line: 70, column: 63, scope: !8313)
!8408 = !DILocation(line: 71, column: 20, scope: !8409)
!8409 = distinct !DILexicalBlock(scope: !8313, file: !4072, line: 71, column: 9)
!8410 = !DILocation(line: 71, column: 26, scope: !8409)
!8411 = !DILocation(line: 77, column: 5, scope: !8313)
!8412 = !DILocation(line: 77, column: 25, scope: !8313)
!8413 = !DILocation(line: 78, column: 16, scope: !8414)
!8414 = distinct !DILexicalBlock(scope: !8313, file: !4072, line: 77, column: 32)
!8415 = distinct !{!8415, !8411, !8416}
!8416 = !DILocation(line: 80, column: 5, scope: !8313)
!8417 = !DILocation(line: 82, column: 35, scope: !8313)
!8418 = !DILocation(line: 82, column: 66, scope: !8313)
!8419 = !DILocation(line: 84, column: 18, scope: !8313)
!8420 = !DILocation(line: 85, column: 34, scope: !8313)
!8421 = !DILocation(line: 85, column: 39, scope: !8313)
!8422 = !DILocation(line: 87, column: 12, scope: !8313)
!8423 = !DILocation(line: 87, column: 22, scope: !8313)
!8424 = !DILocation(line: 89, column: 23, scope: !8313)
!8425 = !DILocation(line: 90, column: 27, scope: !8313)
!8426 = !DILocation(line: 90, column: 16, scope: !8313)
!8427 = !DILocation(line: 91, column: 38, scope: !8313)
!8428 = !DILocation(line: 91, column: 24, scope: !8313)
!8429 = !DILocation(line: 91, column: 28, scope: !8313)
!8430 = !DILocation(line: 92, column: 35, scope: !8313)
!8431 = !DILocation(line: 92, column: 41, scope: !8313)
!8432 = !DILocation(line: 92, column: 20, scope: !8313)
!8433 = !DILocation(line: 92, column: 24, scope: !8313)
!8434 = !DILocation(line: 93, column: 16, scope: !8313)
!8435 = !DILocation(line: 95, column: 12, scope: !8313)
!8436 = !DILocation(line: 95, column: 25, scope: !8313)
!8437 = !DILocation(line: 96, column: 12, scope: !8313)
!8438 = !DILocation(line: 96, column: 25, scope: !8313)
!8439 = !DILocation(line: 98, column: 24, scope: !8313)
!8440 = !DILocation(line: 98, column: 22, scope: !8313)
!8441 = !DILocation(line: 99, column: 24, scope: !8313)
!8442 = !DILocation(line: 99, column: 22, scope: !8313)
!8443 = !DILocation(line: 101, column: 25, scope: !8444)
!8444 = distinct !DILexicalBlock(scope: !8313, file: !4072, line: 101, column: 9)
!8445 = !DILocation(line: 101, column: 9, scope: !8313)
!8446 = !DILocation(line: 102, column: 16, scope: !8447)
!8447 = distinct !DILexicalBlock(scope: !8444, file: !4072, line: 101, column: 37)
!8448 = !DILocation(line: 102, column: 22, scope: !8447)
!8449 = !DILocation(line: 103, column: 5, scope: !8447)
!8450 = !DILocation(line: 104, column: 1, scope: !8313)
!8451 = distinct !DISubprogram(name: "uart_set_format", scope: !4072, file: !4072, line: 106, type: !8452, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4071, retainedNodes: !8454)
!8452 = !DISubroutineType(types: !8453)
!8453 = !{null, !8316, !1023, !1025, !1027}
!8454 = !{!8455, !8456, !8457, !8458, !8459}
!8455 = !DILocalVariable(name: "uartx", arg: 1, scope: !8451, file: !4072, line: 106, type: !8316)
!8456 = !DILocalVariable(name: "word_length", arg: 2, scope: !8451, file: !4072, line: 107, type: !1023)
!8457 = !DILocalVariable(name: "stop_bit", arg: 3, scope: !8451, file: !4072, line: 108, type: !1025)
!8458 = !DILocalVariable(name: "parity", arg: 4, scope: !8451, file: !4072, line: 109, type: !1027)
!8459 = !DILocalVariable(name: "byte", scope: !8451, file: !4072, line: 111, type: !1212)
!8460 = !DILocation(line: 0, scope: !8451)
!8461 = !DILocation(line: 114, column: 19, scope: !8451)
!8462 = !DILocation(line: 115, column: 16, scope: !8451)
!8463 = !DILocation(line: 118, column: 10, scope: !8451)
!8464 = !DILocation(line: 119, column: 5, scope: !8451)
!8465 = !DILocation(line: 124, column: 18, scope: !8466)
!8466 = distinct !DILexicalBlock(scope: !8451, file: !4072, line: 119, column: 26)
!8467 = !DILocation(line: 125, column: 13, scope: !8466)
!8468 = !DILocation(line: 127, column: 18, scope: !8466)
!8469 = !DILocation(line: 128, column: 13, scope: !8466)
!8470 = !DILocation(line: 130, column: 18, scope: !8466)
!8471 = !DILocation(line: 131, column: 13, scope: !8466)
!8472 = !DILocation(line: 137, column: 10, scope: !8451)
!8473 = !DILocation(line: 138, column: 5, scope: !8451)
!8474 = !DILocation(line: 151, column: 5, scope: !8451)
!8475 = !DILocation(line: 166, column: 18, scope: !8451)
!8476 = !DILocation(line: 166, column: 16, scope: !8451)
!8477 = !DILocation(line: 167, column: 1, scope: !8451)
!8478 = distinct !DISubprogram(name: "uart_put_char_block", scope: !4072, file: !4072, line: 169, type: !8479, scopeLine: 170, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4071, retainedNodes: !8481)
!8479 = !DISubroutineType(types: !8480)
!8480 = !{null, !8316, !159}
!8481 = !{!8482, !8483, !8484}
!8482 = !DILocalVariable(name: "uartx", arg: 1, scope: !8478, file: !4072, line: 169, type: !8316)
!8483 = !DILocalVariable(name: "byte", arg: 2, scope: !8478, file: !4072, line: 169, type: !159)
!8484 = !DILocalVariable(name: "LSR", scope: !8478, file: !4072, line: 171, type: !1212)
!8485 = !DILocation(line: 0, scope: !8478)
!8486 = !DILocation(line: 173, column: 5, scope: !8478)
!8487 = !DILocation(line: 174, column: 31, scope: !8488)
!8488 = distinct !DILexicalBlock(scope: !8478, file: !4072, line: 173, column: 15)
!8489 = !DILocation(line: 175, column: 17, scope: !8490)
!8490 = distinct !DILexicalBlock(scope: !8488, file: !4072, line: 175, column: 13)
!8491 = !DILocation(line: 175, column: 13, scope: !8488)
!8492 = distinct !{!8492, !8486, !8493}
!8493 = !DILocation(line: 179, column: 5, scope: !8478)
!8494 = !DILocation(line: 176, column: 38, scope: !8495)
!8495 = distinct !DILexicalBlock(scope: !8490, file: !4072, line: 175, column: 39)
!8496 = !DILocation(line: 176, column: 32, scope: !8495)
!8497 = !DILocation(line: 176, column: 36, scope: !8495)
!8498 = !DILocation(line: 180, column: 1, scope: !8478)
!8499 = distinct !DISubprogram(name: "uart_get_char_block", scope: !4072, file: !4072, line: 182, type: !8500, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4071, retainedNodes: !8502)
!8500 = !DISubroutineType(types: !8501)
!8501 = !{!159, !8316}
!8502 = !{!8503, !8504, !8505}
!8503 = !DILocalVariable(name: "uartx", arg: 1, scope: !8499, file: !4072, line: 182, type: !8316)
!8504 = !DILocalVariable(name: "LSR", scope: !8499, file: !4072, line: 184, type: !1212)
!8505 = !DILocalVariable(name: "byte", scope: !8499, file: !4072, line: 185, type: !159)
!8506 = !DILocation(line: 0, scope: !8499)
!8507 = !DILocation(line: 187, column: 5, scope: !8499)
!8508 = !DILocation(line: 188, column: 31, scope: !8509)
!8509 = distinct !DILexicalBlock(scope: !8499, file: !4072, line: 187, column: 15)
!8510 = !DILocation(line: 189, column: 17, scope: !8511)
!8511 = distinct !DILexicalBlock(scope: !8509, file: !4072, line: 189, column: 13)
!8512 = !DILocation(line: 189, column: 13, scope: !8509)
!8513 = distinct !{!8513, !8507, !8514}
!8514 = !DILocation(line: 193, column: 5, scope: !8499)
!8515 = !DILocation(line: 190, column: 48, scope: !8516)
!8516 = distinct !DILexicalBlock(scope: !8511, file: !4072, line: 189, column: 37)
!8517 = !DILocation(line: 190, column: 20, scope: !8516)
!8518 = !DILocation(line: 195, column: 5, scope: !8499)
!8519 = distinct !DISubprogram(name: "uart_get_char_unblocking", scope: !4072, file: !4072, line: 198, type: !8520, scopeLine: 199, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4071, retainedNodes: !8522)
!8520 = !DISubroutineType(types: !8521)
!8521 = !{!61, !8316}
!8522 = !{!8523, !8524, !8525}
!8523 = !DILocalVariable(name: "uartx", arg: 1, scope: !8519, file: !4072, line: 198, type: !8316)
!8524 = !DILocalVariable(name: "LSR", scope: !8519, file: !4072, line: 200, type: !1212)
!8525 = !DILocalVariable(name: "value", scope: !8519, file: !4072, line: 201, type: !61)
!8526 = !DILocation(line: 0, scope: !8519)
!8527 = !DILocation(line: 203, column: 27, scope: !8519)
!8528 = !DILocation(line: 204, column: 13, scope: !8529)
!8529 = distinct !DILexicalBlock(scope: !8519, file: !4072, line: 204, column: 9)
!8530 = !DILocation(line: 204, column: 9, scope: !8519)
!8531 = !DILocation(line: 205, column: 36, scope: !8532)
!8532 = distinct !DILexicalBlock(scope: !8529, file: !4072, line: 204, column: 33)
!8533 = !DILocation(line: 206, column: 5, scope: !8532)
!8534 = !DILocation(line: 0, scope: !8529)
!8535 = !DILocation(line: 210, column: 5, scope: !8519)
!8536 = distinct !DISubprogram(name: "uart_set_hardware_flowcontrol", scope: !4072, file: !4072, line: 213, type: !8537, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4071, retainedNodes: !8539)
!8537 = !DISubroutineType(types: !8538)
!8538 = !{null, !8316}
!8539 = !{!8540, !8541, !8542}
!8540 = !DILocalVariable(name: "uartx", arg: 1, scope: !8536, file: !4072, line: 213, type: !8316)
!8541 = !DILocalVariable(name: "EFR", scope: !8536, file: !4072, line: 215, type: !1212)
!8542 = !DILocalVariable(name: "LCR", scope: !8536, file: !4072, line: 215, type: !1212)
!8543 = !DILocation(line: 0, scope: !8536)
!8544 = !DILocation(line: 217, column: 18, scope: !8536)
!8545 = !DILocation(line: 219, column: 16, scope: !8536)
!8546 = !DILocation(line: 220, column: 30, scope: !8536)
!8547 = !DILocation(line: 222, column: 30, scope: !8536)
!8548 = !DILocation(line: 222, column: 28, scope: !8536)
!8549 = !DILocation(line: 223, column: 12, scope: !8536)
!8550 = !DILocation(line: 223, column: 22, scope: !8536)
!8551 = !DILocation(line: 225, column: 16, scope: !8536)
!8552 = !DILocation(line: 226, column: 21, scope: !8536)
!8553 = !DILocation(line: 226, column: 25, scope: !8536)
!8554 = !DILocation(line: 228, column: 18, scope: !8536)
!8555 = !DILocation(line: 228, column: 16, scope: !8536)
!8556 = !DILocation(line: 229, column: 1, scope: !8536)
!8557 = distinct !DISubprogram(name: "uart_set_software_flowcontrol", scope: !4072, file: !4072, line: 231, type: !8558, scopeLine: 235, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4071, retainedNodes: !8560)
!8558 = !DISubroutineType(types: !8559)
!8559 = !{null, !8316, !159, !159, !159}
!8560 = !{!8561, !8562, !8563, !8564, !8565, !8566}
!8561 = !DILocalVariable(name: "uartx", arg: 1, scope: !8557, file: !4072, line: 231, type: !8316)
!8562 = !DILocalVariable(name: "xon", arg: 2, scope: !8557, file: !4072, line: 232, type: !159)
!8563 = !DILocalVariable(name: "xoff", arg: 3, scope: !8557, file: !4072, line: 233, type: !159)
!8564 = !DILocalVariable(name: "escape_character", arg: 4, scope: !8557, file: !4072, line: 234, type: !159)
!8565 = !DILocalVariable(name: "EFR", scope: !8557, file: !4072, line: 236, type: !1212)
!8566 = !DILocalVariable(name: "LCR", scope: !8557, file: !4072, line: 236, type: !1212)
!8567 = !DILocation(line: 0, scope: !8557)
!8568 = !DILocation(line: 238, column: 18, scope: !8557)
!8569 = !DILocation(line: 240, column: 16, scope: !8557)
!8570 = !DILocation(line: 241, column: 28, scope: !8557)
!8571 = !DILocation(line: 241, column: 21, scope: !8557)
!8572 = !DILocation(line: 241, column: 26, scope: !8557)
!8573 = !DILocation(line: 242, column: 20, scope: !8557)
!8574 = !DILocation(line: 242, column: 12, scope: !8557)
!8575 = !DILocation(line: 242, column: 18, scope: !8557)
!8576 = !DILocation(line: 243, column: 30, scope: !8557)
!8577 = !DILocation(line: 245, column: 30, scope: !8557)
!8578 = !DILocation(line: 245, column: 28, scope: !8557)
!8579 = !DILocation(line: 246, column: 25, scope: !8557)
!8580 = !DILocation(line: 246, column: 12, scope: !8557)
!8581 = !DILocation(line: 246, column: 23, scope: !8557)
!8582 = !DILocation(line: 247, column: 12, scope: !8557)
!8583 = !DILocation(line: 247, column: 22, scope: !8557)
!8584 = !DILocation(line: 249, column: 18, scope: !8557)
!8585 = !DILocation(line: 249, column: 16, scope: !8557)
!8586 = !DILocation(line: 250, column: 1, scope: !8557)
!8587 = distinct !DISubprogram(name: "uart_disable_flowcontrol", scope: !4072, file: !4072, line: 252, type: !8537, scopeLine: 253, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4071, retainedNodes: !8588)
!8588 = !{!8589, !8590}
!8589 = !DILocalVariable(name: "uartx", arg: 1, scope: !8587, file: !4072, line: 252, type: !8316)
!8590 = !DILocalVariable(name: "LCR", scope: !8587, file: !4072, line: 254, type: !1212)
!8591 = !DILocation(line: 0, scope: !8587)
!8592 = !DILocation(line: 256, column: 18, scope: !8587)
!8593 = !DILocation(line: 258, column: 16, scope: !8587)
!8594 = !DILocation(line: 259, column: 24, scope: !8587)
!8595 = !DILocation(line: 259, column: 28, scope: !8587)
!8596 = !DILocation(line: 261, column: 16, scope: !8587)
!8597 = !DILocation(line: 262, column: 18, scope: !8587)
!8598 = !DILocation(line: 262, column: 16, scope: !8587)
!8599 = !DILocation(line: 263, column: 1, scope: !8587)
!8600 = distinct !DISubprogram(name: "uart_set_fifo", scope: !4072, file: !4072, line: 265, type: !8537, scopeLine: 266, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4071, retainedNodes: !8601)
!8601 = !{!8602, !8603, !8604}
!8602 = !DILocalVariable(name: "uartx", arg: 1, scope: !8600, file: !4072, line: 265, type: !8316)
!8603 = !DILocalVariable(name: "EFR", scope: !8600, file: !4072, line: 267, type: !1212)
!8604 = !DILocalVariable(name: "LCR", scope: !8600, file: !4072, line: 267, type: !1212)
!8605 = !DILocation(line: 0, scope: !8600)
!8606 = !DILocation(line: 269, column: 18, scope: !8600)
!8607 = !DILocation(line: 271, column: 16, scope: !8600)
!8608 = !DILocation(line: 272, column: 30, scope: !8600)
!8609 = !DILocation(line: 274, column: 30, scope: !8600)
!8610 = !DILocation(line: 274, column: 28, scope: !8600)
!8611 = !DILocation(line: 276, column: 16, scope: !8600)
!8612 = !DILocation(line: 277, column: 28, scope: !8600)
!8613 = !DILocation(line: 283, column: 18, scope: !8600)
!8614 = !DILocation(line: 283, column: 16, scope: !8600)
!8615 = !DILocation(line: 284, column: 1, scope: !8600)
!8616 = distinct !DISubprogram(name: "uart_set_sleep_mode", scope: !4072, file: !4072, line: 287, type: !8537, scopeLine: 288, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4071, retainedNodes: !8617)
!8617 = !{!8618}
!8618 = !DILocalVariable(name: "uartx", arg: 1, scope: !8616, file: !4072, line: 287, type: !8316)
!8619 = !DILocation(line: 0, scope: !8616)
!8620 = !DILocation(line: 289, column: 12, scope: !8616)
!8621 = !DILocation(line: 289, column: 21, scope: !8616)
!8622 = !DILocation(line: 290, column: 1, scope: !8616)
!8623 = distinct !DISubprogram(name: "uart_unmask_send_interrupt", scope: !4072, file: !4072, line: 292, type: !8537, scopeLine: 293, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4071, retainedNodes: !8624)
!8624 = !{!8625, !8626, !8627}
!8625 = !DILocalVariable(name: "uartx", arg: 1, scope: !8623, file: !4072, line: 292, type: !8316)
!8626 = !DILocalVariable(name: "IER", scope: !8623, file: !4072, line: 294, type: !1212)
!8627 = !DILocalVariable(name: "LCR", scope: !8623, file: !4072, line: 294, type: !1212)
!8628 = !DILocation(line: 0, scope: !8623)
!8629 = !DILocation(line: 296, column: 18, scope: !8623)
!8630 = !DILocation(line: 298, column: 16, scope: !8623)
!8631 = !DILocation(line: 299, column: 26, scope: !8623)
!8632 = !DILocation(line: 301, column: 26, scope: !8623)
!8633 = !DILocation(line: 301, column: 24, scope: !8623)
!8634 = !DILocation(line: 303, column: 19, scope: !8623)
!8635 = !DILocation(line: 303, column: 16, scope: !8623)
!8636 = !DILocation(line: 304, column: 1, scope: !8623)
!8637 = distinct !DISubprogram(name: "uart_unmask_receive_interrupt", scope: !4072, file: !4072, line: 307, type: !8537, scopeLine: 308, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4071, retainedNodes: !8638)
!8638 = !{!8639, !8640, !8641}
!8639 = !DILocalVariable(name: "uartx", arg: 1, scope: !8637, file: !4072, line: 307, type: !8316)
!8640 = !DILocalVariable(name: "IER", scope: !8637, file: !4072, line: 309, type: !1212)
!8641 = !DILocalVariable(name: "LCR", scope: !8637, file: !4072, line: 309, type: !1212)
!8642 = !DILocation(line: 0, scope: !8637)
!8643 = !DILocation(line: 311, column: 18, scope: !8637)
!8644 = !DILocation(line: 313, column: 16, scope: !8637)
!8645 = !DILocation(line: 314, column: 26, scope: !8637)
!8646 = !DILocation(line: 316, column: 26, scope: !8637)
!8647 = !DILocation(line: 316, column: 24, scope: !8637)
!8648 = !DILocation(line: 318, column: 19, scope: !8637)
!8649 = !DILocation(line: 318, column: 16, scope: !8637)
!8650 = !DILocation(line: 319, column: 1, scope: !8637)
!8651 = distinct !DISubprogram(name: "uart_purge_fifo", scope: !4072, file: !4072, line: 321, type: !8652, scopeLine: 322, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4071, retainedNodes: !8654)
!8652 = !DISubroutineType(types: !8653)
!8653 = !{null, !8316, !1349}
!8654 = !{!8655, !8656, !8657}
!8655 = !DILocalVariable(name: "uartx", arg: 1, scope: !8651, file: !4072, line: 321, type: !8316)
!8656 = !DILocalVariable(name: "is_rx", arg: 2, scope: !8651, file: !4072, line: 321, type: !1349)
!8657 = !DILocalVariable(name: "FCR", scope: !8651, file: !4072, line: 323, type: !1212)
!8658 = !DILocation(line: 0, scope: !8651)
!8659 = !DILocation(line: 327, column: 9, scope: !8660)
!8660 = distinct !DILexicalBlock(scope: !8651, file: !4072, line: 327, column: 9)
!8661 = !DILocation(line: 333, column: 24, scope: !8651)
!8662 = !DILocation(line: 333, column: 28, scope: !8651)
!8663 = !DILocation(line: 334, column: 1, scope: !8651)
!8664 = distinct !DISubprogram(name: "uart_query_interrupt_type", scope: !4072, file: !4072, line: 336, type: !8665, scopeLine: 337, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4071, retainedNodes: !8668)
!8665 = !DISubroutineType(types: !8666)
!8666 = !{!8667, !8316}
!8667 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_interrupt_type_t", file: !985, line: 55, baseType: !1080)
!8668 = !{!8669, !8670, !8671, !8672}
!8669 = !DILocalVariable(name: "uartx", arg: 1, scope: !8664, file: !4072, line: 336, type: !8316)
!8670 = !DILocalVariable(name: "IIR", scope: !8664, file: !4072, line: 338, type: !1212)
!8671 = !DILocalVariable(name: "LSR", scope: !8664, file: !4072, line: 338, type: !1212)
!8672 = !DILocalVariable(name: "type", scope: !8664, file: !4072, line: 339, type: !8667)
!8673 = !DILocation(line: 0, scope: !8664)
!8674 = !DILocation(line: 341, column: 30, scope: !8664)
!8675 = !DILocation(line: 342, column: 13, scope: !8676)
!8676 = distinct !DILexicalBlock(scope: !8664, file: !4072, line: 342, column: 9)
!8677 = !DILocation(line: 342, column: 9, scope: !8664)
!8678 = !DILocation(line: 346, column: 17, scope: !8664)
!8679 = !DILocation(line: 346, column: 5, scope: !8664)
!8680 = !DILocation(line: 350, column: 13, scope: !8681)
!8681 = distinct !DILexicalBlock(scope: !8664, file: !4072, line: 346, column: 37)
!8682 = !DILocation(line: 353, column: 35, scope: !8681)
!8683 = !DILocation(line: 354, column: 21, scope: !8684)
!8684 = distinct !DILexicalBlock(scope: !8681, file: !4072, line: 354, column: 17)
!8685 = !DILocation(line: 363, column: 13, scope: !8681)
!8686 = !DILocation(line: 369, column: 1, scope: !8664)
!8687 = distinct !DISubprogram(name: "uart_verify_error", scope: !4072, file: !4072, line: 371, type: !8688, scopeLine: 372, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4071, retainedNodes: !8690)
!8688 = !DISubroutineType(types: !8689)
!8689 = !{!1349, !8316}
!8690 = !{!8691, !8692, !8693}
!8691 = !DILocalVariable(name: "uartx", arg: 1, scope: !8687, file: !4072, line: 371, type: !8316)
!8692 = !DILocalVariable(name: "LSR", scope: !8687, file: !4072, line: 373, type: !1212)
!8693 = !DILocalVariable(name: "ret", scope: !8687, file: !4072, line: 374, type: !1349)
!8694 = !DILocation(line: 0, scope: !8687)
!8695 = !DILocation(line: 376, column: 27, scope: !8687)
!8696 = !DILocation(line: 377, column: 15, scope: !8697)
!8697 = distinct !DILexicalBlock(scope: !8687, file: !4072, line: 377, column: 9)
!8698 = !DILocation(line: 377, column: 9, scope: !8687)
!8699 = !DILocation(line: 381, column: 5, scope: !8687)
!8700 = distinct !DISubprogram(name: "uart_clear_timeout_interrupt", scope: !4072, file: !4072, line: 384, type: !8537, scopeLine: 385, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4071, retainedNodes: !8701)
!8701 = !{!8702, !8703}
!8702 = !DILocalVariable(name: "uartx", arg: 1, scope: !8700, file: !4072, line: 384, type: !8316)
!8703 = !DILocalVariable(name: "DMA_EN", scope: !8700, file: !4072, line: 386, type: !1212)
!8704 = !DILocation(line: 0, scope: !8700)
!8705 = !DILocation(line: 388, column: 21, scope: !8700)
!8706 = !DILocation(line: 390, column: 1, scope: !8700)
!8707 = distinct !DISubprogram(name: "uart_reset_default_value", scope: !4072, file: !4072, line: 392, type: !8537, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4071, retainedNodes: !8708)
!8708 = !{!8709}
!8709 = !DILocalVariable(name: "uartx", arg: 1, scope: !8707, file: !4072, line: 392, type: !8316)
!8710 = !DILocation(line: 0, scope: !8707)
!8711 = !DILocation(line: 394, column: 12, scope: !8707)
!8712 = !DILocation(line: 394, column: 16, scope: !8707)
!8713 = !DILocation(line: 395, column: 24, scope: !8707)
!8714 = !DILocation(line: 395, column: 28, scope: !8707)
!8715 = !DILocation(line: 396, column: 21, scope: !8707)
!8716 = !DILocation(line: 396, column: 26, scope: !8707)
!8717 = !DILocation(line: 397, column: 12, scope: !8707)
!8718 = !DILocation(line: 397, column: 18, scope: !8707)
!8719 = !DILocation(line: 399, column: 16, scope: !8707)
!8720 = !DILocation(line: 400, column: 24, scope: !8707)
!8721 = !DILocation(line: 400, column: 28, scope: !8707)
!8722 = !DILocation(line: 401, column: 20, scope: !8707)
!8723 = !DILocation(line: 401, column: 24, scope: !8707)
!8724 = !DILocation(line: 403, column: 16, scope: !8707)
!8725 = !DILocation(line: 404, column: 24, scope: !8707)
!8726 = !DILocation(line: 405, column: 28, scope: !8707)
!8727 = !DILocation(line: 407, column: 16, scope: !8707)
!8728 = !DILocation(line: 408, column: 28, scope: !8707)
!8729 = !DILocation(line: 409, column: 16, scope: !8707)
!8730 = !DILocation(line: 411, column: 25, scope: !8707)
!8731 = !DILocation(line: 412, column: 22, scope: !8707)
!8732 = !DILocation(line: 412, column: 26, scope: !8707)
!8733 = !DILocation(line: 413, column: 12, scope: !8707)
!8734 = !DILocation(line: 413, column: 24, scope: !8707)
!8735 = !DILocation(line: 414, column: 12, scope: !8707)
!8736 = !DILocation(line: 414, column: 22, scope: !8707)
!8737 = !DILocation(line: 415, column: 12, scope: !8707)
!8738 = !DILocation(line: 415, column: 25, scope: !8707)
!8739 = !DILocation(line: 416, column: 12, scope: !8707)
!8740 = !DILocation(line: 416, column: 25, scope: !8707)
!8741 = !DILocation(line: 417, column: 12, scope: !8707)
!8742 = !DILocation(line: 417, column: 23, scope: !8707)
!8743 = !DILocation(line: 418, column: 12, scope: !8707)
!8744 = !DILocation(line: 418, column: 27, scope: !8707)
!8745 = !DILocation(line: 419, column: 12, scope: !8707)
!8746 = !DILocation(line: 419, column: 18, scope: !8707)
!8747 = !DILocation(line: 420, column: 12, scope: !8707)
!8748 = !DILocation(line: 420, column: 23, scope: !8707)
!8749 = !DILocation(line: 421, column: 12, scope: !8707)
!8750 = !DILocation(line: 421, column: 22, scope: !8707)
!8751 = !DILocation(line: 422, column: 12, scope: !8707)
!8752 = !DILocation(line: 422, column: 21, scope: !8707)
!8753 = !DILocation(line: 423, column: 12, scope: !8707)
!8754 = !DILocation(line: 423, column: 19, scope: !8707)
!8755 = !DILocation(line: 424, column: 23, scope: !8707)
!8756 = !DILocation(line: 425, column: 12, scope: !8707)
!8757 = !DILocation(line: 425, column: 22, scope: !8707)
!8758 = !DILocation(line: 426, column: 12, scope: !8707)
!8759 = !DILocation(line: 426, column: 22, scope: !8707)
!8760 = !DILocation(line: 427, column: 1, scope: !8707)
!8761 = distinct !DISubprogram(name: "uart_query_empty", scope: !4072, file: !4072, line: 429, type: !8537, scopeLine: 430, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4071, retainedNodes: !8762)
!8762 = !{!8763}
!8763 = !DILocalVariable(name: "uartx", arg: 1, scope: !8761, file: !4072, line: 429, type: !8316)
!8764 = !DILocation(line: 0, scope: !8761)
!8765 = !DILocation(line: 431, column: 5, scope: !8761)
!8766 = !DILocation(line: 431, column: 31, scope: !8761)
!8767 = !DILocation(line: 431, column: 36, scope: !8761)
!8768 = !DILocation(line: 431, column: 12, scope: !8761)
!8769 = distinct !{!8769, !8765, !8770}
!8770 = !DILocation(line: 431, column: 44, scope: !8761)
!8771 = !DILocation(line: 432, column: 1, scope: !8761)
!8772 = distinct !DISubprogram(name: "uart_port_to_dma_channel", scope: !1078, file: !1078, line: 134, type: !8773, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1077, retainedNodes: !8775)
!8773 = !DISubroutineType(types: !8774)
!8774 = !{!6130, !990, !1349}
!8775 = !{!8776, !8777, !8778}
!8776 = !DILocalVariable(name: "uart_port", arg: 1, scope: !8772, file: !1078, line: 134, type: !990)
!8777 = !DILocalVariable(name: "is_rx", arg: 2, scope: !8772, file: !1078, line: 134, type: !1349)
!8778 = !DILocalVariable(name: "dma_channel", scope: !8772, file: !1078, line: 136, type: !6130)
!8779 = !DILocation(line: 0, scope: !8772)
!8780 = !DILocation(line: 138, column: 5, scope: !8772)
!8781 = !DILocation(line: 140, column: 17, scope: !8782)
!8782 = distinct !DILexicalBlock(scope: !8783, file: !1078, line: 140, column: 17)
!8783 = distinct !DILexicalBlock(scope: !8772, file: !1078, line: 138, column: 24)
!8784 = !DILocation(line: 147, column: 17, scope: !8785)
!8785 = distinct !DILexicalBlock(scope: !8783, file: !1078, line: 147, column: 17)
!8786 = !DILocation(line: 154, column: 17, scope: !8787)
!8787 = distinct !DILexicalBlock(scope: !8783, file: !1078, line: 154, column: 17)
!8788 = !DILocation(line: 161, column: 17, scope: !8789)
!8789 = distinct !DILexicalBlock(scope: !8783, file: !1078, line: 161, column: 17)
!8790 = !DILocation(line: 171, column: 5, scope: !8772)
!8791 = distinct !DISubprogram(name: "uart_dma_channel_to_callback_data", scope: !1078, file: !1078, line: 174, type: !8792, scopeLine: 175, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1077, retainedNodes: !8800)
!8792 = !DISubroutineType(types: !8793)
!8793 = !{null, !6130, !8794}
!8794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8795, size: 32)
!8795 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_dma_callback_data_t", file: !985, line: 96, baseType: !8796)
!8796 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !985, line: 93, size: 64, elements: !8797)
!8797 = !{!8798, !8799}
!8798 = !DIDerivedType(tag: DW_TAG_member, name: "is_rx", scope: !8796, file: !985, line: 94, baseType: !91, size: 8)
!8799 = !DIDerivedType(tag: DW_TAG_member, name: "uart_port", scope: !8796, file: !985, line: 95, baseType: !990, size: 32, offset: 32)
!8800 = !{!8801, !8802}
!8801 = !DILocalVariable(name: "dma_channel", arg: 1, scope: !8791, file: !1078, line: 174, type: !6130)
!8802 = !DILocalVariable(name: "user_data", arg: 2, scope: !8791, file: !1078, line: 174, type: !8794)
!8803 = !DILocation(line: 0, scope: !8791)
!8804 = !DILocation(line: 176, column: 5, scope: !8791)
!8805 = !DILocation(line: 0, scope: !8806)
!8806 = distinct !DILexicalBlock(scope: !8791, file: !1078, line: 176, column: 26)
!8807 = !DILocation(line: 212, column: 1, scope: !8791)
!8808 = distinct !DISubprogram(name: "uart_enable_dma", scope: !1078, file: !1078, line: 214, type: !8809, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1077, retainedNodes: !8811)
!8809 = !DISubroutineType(types: !8810)
!8810 = !{null, !1091}
!8811 = !{!8812}
!8812 = !DILocalVariable(name: "uartx", arg: 1, scope: !8808, file: !1078, line: 214, type: !1091)
!8813 = !DILocation(line: 0, scope: !8808)
!8814 = !DILocation(line: 216, column: 12, scope: !8808)
!8815 = !DILocation(line: 216, column: 19, scope: !8808)
!8816 = !DILocation(line: 217, column: 1, scope: !8808)
!8817 = distinct !DISubprogram(name: "uart_interrupt_handler", scope: !1078, file: !1078, line: 219, type: !568, scopeLine: 220, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1077, retainedNodes: !8818)
!8818 = !{!8819, !8820, !8821, !8822}
!8819 = !DILocalVariable(name: "irq_number", arg: 1, scope: !8817, file: !1078, line: 219, type: !570)
!8820 = !DILocalVariable(name: "uart_port", scope: !8817, file: !1078, line: 221, type: !990)
!8821 = !DILocalVariable(name: "type", scope: !8817, file: !1078, line: 222, type: !8667)
!8822 = !DILocalVariable(name: "uartx", scope: !8817, file: !1078, line: 223, type: !1091)
!8823 = !DILocation(line: 0, scope: !8817)
!8824 = !DILocation(line: 225, column: 5, scope: !8817)
!8825 = !DILocation(line: 242, column: 13, scope: !8817)
!8826 = !DILocation(line: 243, column: 12, scope: !8817)
!8827 = !DILocation(line: 245, column: 5, scope: !8817)
!8828 = !DILocation(line: 248, column: 13, scope: !8829)
!8829 = distinct !DILexicalBlock(scope: !8817, file: !1078, line: 245, column: 19)
!8830 = !DILocation(line: 249, column: 13, scope: !8829)
!8831 = !DILocation(line: 252, column: 13, scope: !8829)
!8832 = !DILocation(line: 253, column: 13, scope: !8829)
!8833 = !DILocation(line: 263, column: 13, scope: !8829)
!8834 = !DILocation(line: 264, column: 13, scope: !8829)
!8835 = !DILocation(line: 268, column: 13, scope: !8829)
!8836 = !DILocation(line: 269, column: 13, scope: !8829)
!8837 = !DILocation(line: 276, column: 13, scope: !8829)
!8838 = !DILocation(line: 278, column: 1, scope: !8817)
!8839 = distinct !DISubprogram(name: "i2c_set_frequency", scope: !1165, file: !1165, line: 74, type: !1617, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1164, retainedNodes: !8840)
!8840 = !{!8841, !8842, !8843, !8844, !8845, !8846, !8847, !8848}
!8841 = !DILocalVariable(name: "i2c_port", arg: 1, scope: !8839, file: !1165, line: 74, type: !61)
!8842 = !DILocalVariable(name: "transfer_frequency", arg: 2, scope: !8839, file: !1165, line: 74, type: !61)
!8843 = !DILocalVariable(name: "frequency", scope: !8839, file: !1165, line: 76, type: !61)
!8844 = !DILocalVariable(name: "step_cnt_div", scope: !8839, file: !1165, line: 77, type: !61)
!8845 = !DILocalVariable(name: "sample_cnt_div", scope: !8839, file: !1165, line: 78, type: !61)
!8846 = !DILocalVariable(name: "orignal_register_value", scope: !8839, file: !1165, line: 79, type: !61)
!8847 = !DILocalVariable(name: "register_value", scope: !8839, file: !1165, line: 79, type: !61)
!8848 = !DILocalVariable(name: "temp", scope: !8839, file: !1165, line: 80, type: !61)
!8849 = !DILocation(line: 0, scope: !8839)
!8850 = !DILocation(line: 83, column: 5, scope: !8839)
!8851 = !DILocation(line: 83, column: 36, scope: !8839)
!8852 = !DILocation(line: 83, column: 46, scope: !8839)
!8853 = !DILocation(line: 84, column: 5, scope: !8839)
!8854 = !DILocation(line: 87, column: 54, scope: !8855)
!8855 = distinct !DILexicalBlock(scope: !8839, file: !1165, line: 84, column: 33)
!8856 = !DILocation(line: 89, column: 13, scope: !8855)
!8857 = !DILocation(line: 95, column: 13, scope: !8855)
!8858 = !DILocation(line: 98, column: 13, scope: !8855)
!8859 = !DILocation(line: 101, column: 13, scope: !8855)
!8860 = !DILocation(line: 104, column: 13, scope: !8855)
!8861 = !DILocation(line: 109, column: 13, scope: !8855)
!8862 = !DILocation(line: 117, column: 5, scope: !8863)
!8863 = distinct !DILexicalBlock(scope: !8839, file: !1165, line: 117, column: 5)
!8864 = !DILocation(line: 119, column: 31, scope: !8865)
!8865 = distinct !DILexicalBlock(scope: !8866, file: !1165, line: 117, column: 69)
!8866 = distinct !DILexicalBlock(scope: !8863, file: !1165, line: 117, column: 5)
!8867 = !DILocation(line: 120, column: 60, scope: !8865)
!8868 = !DILocation(line: 120, column: 67, scope: !8865)
!8869 = !DILocation(line: 120, column: 72, scope: !8865)
!8870 = !DILocation(line: 122, column: 26, scope: !8871)
!8871 = distinct !DILexicalBlock(scope: !8865, file: !1165, line: 122, column: 13)
!8872 = !DILocation(line: 122, column: 13, scope: !8865)
!8873 = !DILocation(line: 117, column: 65, scope: !8866)
!8874 = !DILocation(line: 117, column: 45, scope: !8866)
!8875 = distinct !{!8875, !8862, !8876}
!8876 = !DILocation(line: 125, column: 5, scope: !8863)
!8877 = !DILocation(line: 0, scope: !8863)
!8878 = !DILocation(line: 128, column: 17, scope: !8839)
!8879 = !DILocation(line: 131, column: 62, scope: !8839)
!8880 = !DILocation(line: 131, column: 70, scope: !8839)
!8881 = !DILocation(line: 132, column: 94, scope: !8839)
!8882 = !DILocation(line: 132, column: 76, scope: !8839)
!8883 = !DILocation(line: 132, column: 157, scope: !8839)
!8884 = !DILocation(line: 132, column: 45, scope: !8839)
!8885 = !DILocation(line: 133, column: 45, scope: !8839)
!8886 = !DILocation(line: 133, column: 43, scope: !8839)
!8887 = !DILocation(line: 134, column: 1, scope: !8839)
!8888 = distinct !DISubprogram(name: "i2c_config_hardware", scope: !1165, file: !1165, line: 143, type: !8889, scopeLine: 144, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1164, retainedNodes: !8901)
!8889 = !DISubroutineType(types: !8890)
!8890 = !{null, !61, !8891, !159, !8892}
!8891 = !DIDerivedType(tag: DW_TAG_typedef, name: "i2c_transaction_type_t", file: !1168, line: 160, baseType: !1177)
!8892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8893, size: 32)
!8893 = !DIDerivedType(tag: DW_TAG_typedef, name: "i2c_transaction_size_t", file: !1168, line: 176, baseType: !8894)
!8894 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1168, line: 170, size: 160, elements: !8895)
!8895 = !{!8896, !8897, !8898, !8899, !8900}
!8896 = !DIDerivedType(tag: DW_TAG_member, name: "send_size", scope: !8894, file: !1168, line: 171, baseType: !61, size: 32)
!8897 = !DIDerivedType(tag: DW_TAG_member, name: "receive_size", scope: !8894, file: !1168, line: 172, baseType: !61, size: 32, offset: 32)
!8898 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_length", scope: !8894, file: !1168, line: 173, baseType: !61, size: 32, offset: 64)
!8899 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_length_aux", scope: !8894, file: !1168, line: 174, baseType: !61, size: 32, offset: 96)
!8900 = !DIDerivedType(tag: DW_TAG_member, name: "transaction_length", scope: !8894, file: !1168, line: 175, baseType: !61, size: 32, offset: 128)
!8901 = !{!8902, !8903, !8904, !8905}
!8902 = !DILocalVariable(name: "i2c_port", arg: 1, scope: !8888, file: !1165, line: 143, type: !61)
!8903 = !DILocalVariable(name: "transaction_type", arg: 2, scope: !8888, file: !1165, line: 143, type: !8891)
!8904 = !DILocalVariable(name: "slave_address", arg: 3, scope: !8888, file: !1165, line: 143, type: !159)
!8905 = !DILocalVariable(name: "config_size", arg: 4, scope: !8888, file: !1165, line: 143, type: !8892)
!8906 = !DILocation(line: 0, scope: !8888)
!8907 = !DILocation(line: 146, column: 49, scope: !8888)
!8908 = !DILocation(line: 146, column: 5, scope: !8888)
!8909 = !DILocation(line: 146, column: 36, scope: !8888)
!8910 = !DILocation(line: 146, column: 47, scope: !8888)
!8911 = !DILocation(line: 148, column: 5, scope: !8888)
!8912 = !DILocation(line: 150, column: 5, scope: !8888)
!8913 = !DILocation(line: 153, column: 5, scope: !8888)
!8914 = !DILocation(line: 0, scope: !8915)
!8915 = distinct !DILexicalBlock(scope: !8916, file: !1165, line: 156, column: 17)
!8916 = distinct !DILexicalBlock(scope: !8888, file: !1165, line: 153, column: 31)
!8917 = !DILocation(line: 164, column: 72, scope: !8916)
!8918 = !DILocation(line: 164, column: 59, scope: !8916)
!8919 = !DILocation(line: 164, column: 44, scope: !8916)
!8920 = !DILocation(line: 164, column: 57, scope: !8916)
!8921 = !DILocation(line: 165, column: 44, scope: !8916)
!8922 = !DILocation(line: 165, column: 56, scope: !8916)
!8923 = !DILocation(line: 167, column: 13, scope: !8916)
!8924 = !DILocation(line: 0, scope: !8925)
!8925 = distinct !DILexicalBlock(scope: !8916, file: !1165, line: 170, column: 17)
!8926 = !DILocation(line: 177, column: 72, scope: !8916)
!8927 = !DILocation(line: 177, column: 59, scope: !8916)
!8928 = !DILocation(line: 177, column: 44, scope: !8916)
!8929 = !DILocation(line: 177, column: 57, scope: !8916)
!8930 = !DILocation(line: 178, column: 44, scope: !8916)
!8931 = !DILocation(line: 178, column: 56, scope: !8916)
!8932 = !DILocation(line: 180, column: 13, scope: !8916)
!8933 = !DILocation(line: 0, scope: !8934)
!8934 = distinct !DILexicalBlock(scope: !8916, file: !1165, line: 183, column: 17)
!8935 = !DILocation(line: 190, column: 72, scope: !8916)
!8936 = !DILocation(line: 190, column: 59, scope: !8916)
!8937 = !DILocation(line: 190, column: 44, scope: !8916)
!8938 = !DILocation(line: 190, column: 57, scope: !8916)
!8939 = !DILocation(line: 191, column: 44, scope: !8916)
!8940 = !DILocation(line: 191, column: 56, scope: !8916)
!8941 = !DILocation(line: 193, column: 13, scope: !8916)
!8942 = !DILocation(line: 0, scope: !8943)
!8943 = distinct !DILexicalBlock(scope: !8916, file: !1165, line: 196, column: 17)
!8944 = !DILocation(line: 203, column: 44, scope: !8916)
!8945 = !DILocation(line: 203, column: 57, scope: !8916)
!8946 = !DILocation(line: 204, column: 71, scope: !8916)
!8947 = !DILocation(line: 204, column: 58, scope: !8916)
!8948 = !DILocation(line: 204, column: 44, scope: !8916)
!8949 = !DILocation(line: 204, column: 56, scope: !8916)
!8950 = !DILocation(line: 206, column: 13, scope: !8916)
!8951 = !DILocation(line: 0, scope: !8952)
!8952 = distinct !DILexicalBlock(scope: !8916, file: !1165, line: 209, column: 17)
!8953 = !DILocation(line: 216, column: 72, scope: !8916)
!8954 = !DILocation(line: 216, column: 59, scope: !8916)
!8955 = !DILocation(line: 216, column: 44, scope: !8916)
!8956 = !DILocation(line: 216, column: 57, scope: !8916)
!8957 = !DILocation(line: 217, column: 44, scope: !8916)
!8958 = !DILocation(line: 217, column: 56, scope: !8916)
!8959 = !DILocation(line: 218, column: 76, scope: !8916)
!8960 = !DILocation(line: 218, column: 63, scope: !8916)
!8961 = !DILocation(line: 219, column: 13, scope: !8916)
!8962 = !DILocation(line: 0, scope: !8963)
!8963 = distinct !DILexicalBlock(scope: !8916, file: !1165, line: 222, column: 17)
!8964 = !DILocation(line: 229, column: 72, scope: !8916)
!8965 = !DILocation(line: 229, column: 59, scope: !8916)
!8966 = !DILocation(line: 229, column: 44, scope: !8916)
!8967 = !DILocation(line: 229, column: 57, scope: !8916)
!8968 = !DILocation(line: 230, column: 75, scope: !8916)
!8969 = !DILocation(line: 230, column: 58, scope: !8916)
!8970 = !DILocation(line: 230, column: 44, scope: !8916)
!8971 = !DILocation(line: 230, column: 56, scope: !8916)
!8972 = !DILocation(line: 232, column: 13, scope: !8916)
!8973 = !DILocation(line: 235, column: 44, scope: !8916)
!8974 = !DILocation(line: 235, column: 54, scope: !8916)
!8975 = !DILocation(line: 236, column: 44, scope: !8916)
!8976 = !DILocation(line: 236, column: 52, scope: !8916)
!8977 = !DILocation(line: 237, column: 72, scope: !8916)
!8978 = !DILocation(line: 237, column: 59, scope: !8916)
!8979 = !DILocation(line: 237, column: 44, scope: !8916)
!8980 = !DILocation(line: 237, column: 57, scope: !8916)
!8981 = !DILocation(line: 238, column: 71, scope: !8916)
!8982 = !DILocation(line: 238, column: 58, scope: !8916)
!8983 = !DILocation(line: 238, column: 44, scope: !8916)
!8984 = !DILocation(line: 238, column: 56, scope: !8916)
!8985 = !DILocation(line: 240, column: 13, scope: !8916)
!8986 = !DILocation(line: 242, column: 44, scope: !8916)
!8987 = !DILocation(line: 242, column: 54, scope: !8916)
!8988 = !DILocation(line: 243, column: 44, scope: !8916)
!8989 = !DILocation(line: 243, column: 52, scope: !8916)
!8990 = !DILocation(line: 244, column: 72, scope: !8916)
!8991 = !DILocation(line: 244, column: 59, scope: !8916)
!8992 = !DILocation(line: 244, column: 44, scope: !8916)
!8993 = !DILocation(line: 244, column: 57, scope: !8916)
!8994 = !DILocation(line: 245, column: 71, scope: !8916)
!8995 = !DILocation(line: 245, column: 58, scope: !8916)
!8996 = !DILocation(line: 245, column: 44, scope: !8916)
!8997 = !DILocation(line: 245, column: 56, scope: !8916)
!8998 = !DILocation(line: 248, column: 13, scope: !8916)
!8999 = !DILocation(line: 250, column: 44, scope: !8916)
!9000 = !DILocation(line: 250, column: 54, scope: !8916)
!9001 = !DILocation(line: 251, column: 44, scope: !8916)
!9002 = !DILocation(line: 251, column: 52, scope: !8916)
!9003 = !DILocation(line: 252, column: 72, scope: !8916)
!9004 = !DILocation(line: 252, column: 59, scope: !8916)
!9005 = !DILocation(line: 252, column: 44, scope: !8916)
!9006 = !DILocation(line: 252, column: 57, scope: !8916)
!9007 = !DILocation(line: 253, column: 71, scope: !8916)
!9008 = !DILocation(line: 253, column: 58, scope: !8916)
!9009 = !DILocation(line: 253, column: 44, scope: !8916)
!9010 = !DILocation(line: 253, column: 56, scope: !8916)
!9011 = !DILocation(line: 254, column: 76, scope: !8916)
!9012 = !DILocation(line: 254, column: 63, scope: !8916)
!9013 = !DILocation(line: 255, column: 13, scope: !8916)
!9014 = !DILocation(line: 0, scope: !8916)
!9015 = !DILocation(line: 261, column: 1, scope: !8888)
!9016 = distinct !DISubprogram(name: "i2c_write_fifo", scope: !1165, file: !1165, line: 266, type: !9017, scopeLine: 267, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1164, retainedNodes: !9019)
!9017 = !DISubroutineType(types: !9018)
!9018 = !{null, !61, !8027, !61}
!9019 = !{!9020, !9021, !9022, !9023}
!9020 = !DILocalVariable(name: "i2c_port", arg: 1, scope: !9016, file: !1165, line: 266, type: !61)
!9021 = !DILocalVariable(name: "data", arg: 2, scope: !9016, file: !1165, line: 266, type: !8027)
!9022 = !DILocalVariable(name: "size", arg: 3, scope: !9016, file: !1165, line: 266, type: !61)
!9023 = !DILocalVariable(name: "i", scope: !9016, file: !1165, line: 268, type: !61)
!9024 = !DILocation(line: 0, scope: !9016)
!9025 = !DILocation(line: 269, column: 19, scope: !9026)
!9026 = distinct !DILexicalBlock(scope: !9027, file: !1165, line: 269, column: 5)
!9027 = distinct !DILexicalBlock(scope: !9016, file: !1165, line: 269, column: 5)
!9028 = !DILocation(line: 269, column: 5, scope: !9027)
!9029 = !DILocation(line: 270, column: 59, scope: !9030)
!9030 = distinct !DILexicalBlock(scope: !9026, file: !1165, line: 269, column: 32)
!9031 = !DILocation(line: 270, column: 52, scope: !9030)
!9032 = !DILocation(line: 270, column: 50, scope: !9030)
!9033 = !DILocation(line: 269, column: 28, scope: !9026)
!9034 = distinct !{!9034, !9028, !9035}
!9035 = !DILocation(line: 271, column: 5, scope: !9027)
!9036 = !DILocation(line: 272, column: 1, scope: !9016)
!9037 = distinct !DISubprogram(name: "i2c_read_fifo", scope: !1165, file: !1165, line: 274, type: !9038, scopeLine: 275, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1164, retainedNodes: !9040)
!9038 = !DISubroutineType(types: !9039)
!9039 = !{null, !61, !1055, !61}
!9040 = !{!9041, !9042, !9043, !9044}
!9041 = !DILocalVariable(name: "i2c_port", arg: 1, scope: !9037, file: !1165, line: 274, type: !61)
!9042 = !DILocalVariable(name: "buffer", arg: 2, scope: !9037, file: !1165, line: 274, type: !1055)
!9043 = !DILocalVariable(name: "size", arg: 3, scope: !9037, file: !1165, line: 274, type: !61)
!9044 = !DILocalVariable(name: "i", scope: !9037, file: !1165, line: 276, type: !61)
!9045 = !DILocation(line: 0, scope: !9037)
!9046 = !DILocation(line: 277, column: 19, scope: !9047)
!9047 = distinct !DILexicalBlock(scope: !9048, file: !1165, line: 277, column: 5)
!9048 = distinct !DILexicalBlock(scope: !9037, file: !1165, line: 277, column: 5)
!9049 = !DILocation(line: 277, column: 5, scope: !9048)
!9050 = !DILocation(line: 278, column: 56, scope: !9051)
!9051 = distinct !DILexicalBlock(scope: !9047, file: !1165, line: 277, column: 32)
!9052 = !DILocation(line: 278, column: 25, scope: !9051)
!9053 = !DILocation(line: 278, column: 18, scope: !9051)
!9054 = !DILocation(line: 278, column: 23, scope: !9051)
!9055 = !DILocation(line: 277, column: 28, scope: !9047)
!9056 = distinct !{!9056, !9049, !9057}
!9057 = !DILocation(line: 279, column: 5, scope: !9048)
!9058 = !DILocation(line: 280, column: 1, scope: !9037)
!9059 = distinct !DISubprogram(name: "i2c_get_transaction_status", scope: !1165, file: !1165, line: 282, type: !9060, scopeLine: 283, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1164, retainedNodes: !9063)
!9060 = !DISubroutineType(types: !9061)
!9061 = !{!9062, !61}
!9062 = !DIDerivedType(tag: DW_TAG_typedef, name: "i2c_transaction_status_t", file: !1168, line: 168, baseType: !1194)
!9063 = !{!9064, !9065, !9066}
!9064 = !DILocalVariable(name: "i2c_port", arg: 1, scope: !9059, file: !1165, line: 282, type: !61)
!9065 = !DILocalVariable(name: "register_value", scope: !9059, file: !1165, line: 284, type: !1212)
!9066 = !DILocalVariable(name: "return_status", scope: !9059, file: !1165, line: 285, type: !9062)
!9067 = !DILocation(line: 0, scope: !9059)
!9068 = !DILocation(line: 287, column: 22, scope: !9059)
!9069 = !DILocation(line: 287, column: 53, scope: !9059)
!9070 = !DILocation(line: 289, column: 15, scope: !9071)
!9071 = distinct !DILexicalBlock(scope: !9059, file: !1165, line: 289, column: 9)
!9072 = !DILocation(line: 289, column: 30, scope: !9071)
!9073 = !DILocation(line: 289, column: 11, scope: !9071)
!9074 = !DILocation(line: 289, column: 9, scope: !9059)
!9075 = !DILocation(line: 291, column: 37, scope: !9076)
!9076 = distinct !DILexicalBlock(scope: !9071, file: !1165, line: 291, column: 16)
!9077 = !DILocation(line: 291, column: 18, scope: !9076)
!9078 = !DILocation(line: 291, column: 16, scope: !9071)
!9079 = !DILocation(line: 293, column: 37, scope: !9080)
!9080 = distinct !DILexicalBlock(scope: !9076, file: !1165, line: 293, column: 16)
!9081 = !DILocation(line: 293, column: 18, scope: !9080)
!9082 = !DILocation(line: 293, column: 16, scope: !9076)
!9083 = !DILocation(line: 295, column: 20, scope: !9084)
!9084 = distinct !DILexicalBlock(scope: !9080, file: !1165, line: 295, column: 16)
!9085 = !DILocation(line: 295, column: 16, scope: !9080)
!9086 = !DILocation(line: 318, column: 5, scope: !9059)
!9087 = !DILocation(line: 319, column: 5, scope: !9059)
!9088 = distinct !DISubprogram(name: "pmic_i2c_init", scope: !4076, file: !4076, line: 54, type: !9089, scopeLine: 55, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4075, retainedNodes: !9098)
!9089 = !DISubroutineType(types: !9090)
!9090 = !{!4093, !9091, !9092}
!9091 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmic_i2c_port_t", file: !3202, line: 61, baseType: !3201)
!9092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9093, size: 32)
!9093 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9094)
!9094 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmic_i2c_config_t", file: !3202, line: 92, baseType: !9095)
!9095 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3202, line: 90, size: 32, elements: !9096)
!9096 = !{!9097}
!9097 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_frequency", scope: !9095, file: !3202, line: 91, baseType: !61, size: 32)
!9098 = !{!9099, !9100}
!9099 = !DILocalVariable(name: "i2c_port", arg: 1, scope: !9088, file: !4076, line: 54, type: !9091)
!9100 = !DILocalVariable(name: "i2c_config", arg: 2, scope: !9088, file: !4076, line: 54, type: !9092)
!9101 = !DILocation(line: 0, scope: !9088)
!9102 = !DILocation(line: 57, column: 29, scope: !9103)
!9103 = distinct !DILexicalBlock(scope: !9088, file: !4076, line: 57, column: 9)
!9104 = !DILocation(line: 57, column: 9, scope: !9088)
!9105 = !DILocation(line: 62, column: 22, scope: !9088)
!9106 = !DILocation(line: 62, column: 5, scope: !9088)
!9107 = !DILocation(line: 66, column: 70, scope: !9088)
!9108 = !DILocation(line: 66, column: 5, scope: !9088)
!9109 = !DILocation(line: 69, column: 23, scope: !9088)
!9110 = !DILocation(line: 69, column: 5, scope: !9088)
!9111 = !DILocation(line: 72, column: 5, scope: !9088)
!9112 = !DILocation(line: 73, column: 1, scope: !9088)
!9113 = distinct !DISubprogram(name: "pmic_i2c_send_polling", scope: !4076, file: !4076, line: 76, type: !9114, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4075, retainedNodes: !9116)
!9114 = !DISubroutineType(types: !9115)
!9115 = !{!4093, !9091, !159, !8027, !61}
!9116 = !{!9117, !9118, !9119, !9120, !9121, !9122}
!9117 = !DILocalVariable(name: "i2c_port", arg: 1, scope: !9113, file: !4076, line: 76, type: !9091)
!9118 = !DILocalVariable(name: "slave_address", arg: 2, scope: !9113, file: !4076, line: 76, type: !159)
!9119 = !DILocalVariable(name: "data", arg: 3, scope: !9113, file: !4076, line: 76, type: !8027)
!9120 = !DILocalVariable(name: "size", arg: 4, scope: !9113, file: !4076, line: 76, type: !61)
!9121 = !DILocalVariable(name: "transaction_status", scope: !9113, file: !4076, line: 78, type: !9062)
!9122 = !DILocalVariable(name: "config_size", scope: !9113, file: !4076, line: 79, type: !9123)
!9123 = !DIDerivedType(tag: DW_TAG_typedef, name: "i2c_transaction_size_t", file: !1168, line: 176, baseType: !9124)
!9124 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1168, line: 170, size: 160, elements: !9125)
!9125 = !{!9126, !9127, !9128, !9129, !9130}
!9126 = !DIDerivedType(tag: DW_TAG_member, name: "send_size", scope: !9124, file: !1168, line: 171, baseType: !61, size: 32)
!9127 = !DIDerivedType(tag: DW_TAG_member, name: "receive_size", scope: !9124, file: !1168, line: 172, baseType: !61, size: 32, offset: 32)
!9128 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_length", scope: !9124, file: !1168, line: 173, baseType: !61, size: 32, offset: 64)
!9129 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_length_aux", scope: !9124, file: !1168, line: 174, baseType: !61, size: 32, offset: 96)
!9130 = !DIDerivedType(tag: DW_TAG_member, name: "transaction_length", scope: !9124, file: !1168, line: 175, baseType: !61, size: 32, offset: 128)
!9131 = !DILocation(line: 0, scope: !9113)
!9132 = !DILocation(line: 79, column: 5, scope: !9113)
!9133 = !DILocation(line: 79, column: 28, scope: !9113)
!9134 = !DILocation(line: 81, column: 29, scope: !9135)
!9135 = distinct !DILexicalBlock(scope: !9113, file: !4076, line: 81, column: 9)
!9136 = !DILocation(line: 81, column: 9, scope: !9113)
!9137 = !DILocation(line: 84, column: 14, scope: !9138)
!9138 = distinct !DILexicalBlock(scope: !9113, file: !4076, line: 84, column: 9)
!9139 = !DILocation(line: 84, column: 22, scope: !9138)
!9140 = !DILocation(line: 89, column: 22, scope: !9113)
!9141 = !DILocation(line: 89, column: 5, scope: !9113)
!9142 = !DILocation(line: 93, column: 5, scope: !9113)
!9143 = !DILocation(line: 96, column: 17, scope: !9113)
!9144 = !DILocation(line: 96, column: 27, scope: !9113)
!9145 = !DILocation(line: 97, column: 17, scope: !9113)
!9146 = !DILocation(line: 97, column: 30, scope: !9113)
!9147 = !DILocation(line: 104, column: 100, scope: !9113)
!9148 = !DILocation(line: 104, column: 5, scope: !9113)
!9149 = !DILocation(line: 108, column: 5, scope: !9113)
!9150 = !DILocation(line: 111, column: 5, scope: !9113)
!9151 = !DILocation(line: 114, column: 5, scope: !9113)
!9152 = !DILocation(line: 114, column: 17, scope: !9113)
!9153 = !DILocation(line: 114, column: 14, scope: !9113)
!9154 = distinct !{!9154, !9151, !9155}
!9155 = !DILocation(line: 115, column: 5, scope: !9113)
!9156 = !DILocation(line: 118, column: 26, scope: !9113)
!9157 = !DILocation(line: 121, column: 23, scope: !9113)
!9158 = !DILocation(line: 121, column: 5, scope: !9113)
!9159 = !DILocation(line: 124, column: 33, scope: !9160)
!9160 = distinct !DILexicalBlock(scope: !9113, file: !4076, line: 124, column: 9)
!9161 = !DILocation(line: 124, column: 9, scope: !9113)
!9162 = !DILocation(line: 126, column: 9, scope: !9163)
!9163 = distinct !DILexicalBlock(scope: !9160, file: !4076, line: 124, column: 56)
!9164 = !DILocation(line: 127, column: 9, scope: !9163)
!9165 = !DILocation(line: 131, column: 1, scope: !9113)
!9166 = distinct !DISubprogram(name: "pmic_i2c_receive_polling", scope: !4076, file: !4076, line: 134, type: !9167, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4075, retainedNodes: !9169)
!9167 = !DISubroutineType(types: !9168)
!9168 = !{!4093, !9091, !159, !1055, !61}
!9169 = !{!9170, !9171, !9172, !9173, !9174, !9175}
!9170 = !DILocalVariable(name: "i2c_port", arg: 1, scope: !9166, file: !4076, line: 134, type: !9091)
!9171 = !DILocalVariable(name: "slave_address", arg: 2, scope: !9166, file: !4076, line: 134, type: !159)
!9172 = !DILocalVariable(name: "buffer", arg: 3, scope: !9166, file: !4076, line: 134, type: !1055)
!9173 = !DILocalVariable(name: "size", arg: 4, scope: !9166, file: !4076, line: 134, type: !61)
!9174 = !DILocalVariable(name: "transaction_status", scope: !9166, file: !4076, line: 136, type: !9062)
!9175 = !DILocalVariable(name: "config_size", scope: !9166, file: !4076, line: 137, type: !9123)
!9176 = !DILocation(line: 0, scope: !9166)
!9177 = !DILocation(line: 137, column: 5, scope: !9166)
!9178 = !DILocation(line: 137, column: 28, scope: !9166)
!9179 = !DILocation(line: 139, column: 29, scope: !9180)
!9180 = distinct !DILexicalBlock(scope: !9166, file: !4076, line: 139, column: 9)
!9181 = !DILocation(line: 139, column: 9, scope: !9166)
!9182 = !DILocation(line: 142, column: 14, scope: !9183)
!9183 = distinct !DILexicalBlock(scope: !9166, file: !4076, line: 142, column: 9)
!9184 = !DILocation(line: 142, column: 24, scope: !9183)
!9185 = !DILocation(line: 147, column: 22, scope: !9166)
!9186 = !DILocation(line: 147, column: 5, scope: !9166)
!9187 = !DILocation(line: 151, column: 5, scope: !9166)
!9188 = !DILocation(line: 154, column: 17, scope: !9166)
!9189 = !DILocation(line: 154, column: 27, scope: !9166)
!9190 = !DILocation(line: 155, column: 17, scope: !9166)
!9191 = !DILocation(line: 155, column: 30, scope: !9166)
!9192 = !DILocation(line: 162, column: 103, scope: !9166)
!9193 = !DILocation(line: 162, column: 5, scope: !9166)
!9194 = !DILocation(line: 165, column: 5, scope: !9166)
!9195 = !DILocation(line: 168, column: 5, scope: !9166)
!9196 = !DILocation(line: 168, column: 17, scope: !9166)
!9197 = !DILocation(line: 168, column: 14, scope: !9166)
!9198 = distinct !{!9198, !9195, !9199}
!9199 = !DILocation(line: 169, column: 5, scope: !9166)
!9200 = !DILocation(line: 172, column: 26, scope: !9166)
!9201 = !DILocation(line: 175, column: 33, scope: !9202)
!9202 = distinct !DILexicalBlock(scope: !9166, file: !4076, line: 175, column: 9)
!9203 = !DILocation(line: 175, column: 9, scope: !9166)
!9204 = !DILocation(line: 183, column: 9, scope: !9205)
!9205 = distinct !DILexicalBlock(scope: !9202, file: !4076, line: 182, column: 12)
!9206 = !DILocation(line: 189, column: 9, scope: !9205)
!9207 = !DILocation(line: 0, scope: !9202)
!9208 = !DILocation(line: 191, column: 1, scope: !9166)
!9209 = distinct !DISubprogram(name: "pmic_i2c_send_to_receive_polling", scope: !4076, file: !4076, line: 194, type: !9210, scopeLine: 195, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4075, retainedNodes: !9221)
!9210 = !DISubroutineType(types: !9211)
!9211 = !{!4093, !9091, !9212}
!9212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9213, size: 32)
!9213 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmic_i2c_send_to_receive_config_t", file: !3202, line: 100, baseType: !9214)
!9214 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3202, line: 94, size: 160, elements: !9215)
!9215 = !{!9216, !9217, !9218, !9219, !9220}
!9216 = !DIDerivedType(tag: DW_TAG_member, name: "slave_address", scope: !9214, file: !3202, line: 95, baseType: !159, size: 8)
!9217 = !DIDerivedType(tag: DW_TAG_member, name: "send_data", scope: !9214, file: !3202, line: 96, baseType: !8027, size: 32, offset: 32)
!9218 = !DIDerivedType(tag: DW_TAG_member, name: "send_length", scope: !9214, file: !3202, line: 97, baseType: !61, size: 32, offset: 64)
!9219 = !DIDerivedType(tag: DW_TAG_member, name: "receive_buffer", scope: !9214, file: !3202, line: 98, baseType: !1055, size: 32, offset: 96)
!9220 = !DIDerivedType(tag: DW_TAG_member, name: "receive_length", scope: !9214, file: !3202, line: 99, baseType: !61, size: 32, offset: 128)
!9221 = !{!9222, !9223, !9224, !9225}
!9222 = !DILocalVariable(name: "i2c_port", arg: 1, scope: !9209, file: !4076, line: 194, type: !9091)
!9223 = !DILocalVariable(name: "i2c_send_to_receive_config", arg: 2, scope: !9209, file: !4076, line: 194, type: !9212)
!9224 = !DILocalVariable(name: "transaction_status", scope: !9209, file: !4076, line: 196, type: !9062)
!9225 = !DILocalVariable(name: "config_size", scope: !9209, file: !4076, line: 197, type: !9123)
!9226 = !DILocation(line: 0, scope: !9209)
!9227 = !DILocation(line: 197, column: 5, scope: !9209)
!9228 = !DILocation(line: 197, column: 28, scope: !9209)
!9229 = !DILocation(line: 198, column: 29, scope: !9230)
!9230 = distinct !DILexicalBlock(scope: !9209, file: !4076, line: 198, column: 9)
!9231 = !DILocation(line: 198, column: 9, scope: !9209)
!9232 = !DILocation(line: 201, column: 45, scope: !9233)
!9233 = distinct !DILexicalBlock(scope: !9209, file: !4076, line: 201, column: 9)
!9234 = !DILocation(line: 201, column: 14, scope: !9233)
!9235 = !DILocation(line: 201, column: 55, scope: !9233)
!9236 = !DILocation(line: 201, column: 94, scope: !9233)
!9237 = !DILocation(line: 201, column: 63, scope: !9233)
!9238 = !DILocation(line: 201, column: 9, scope: !9209)
!9239 = !DILocation(line: 204, column: 37, scope: !9240)
!9240 = distinct !DILexicalBlock(scope: !9209, file: !4076, line: 204, column: 9)
!9241 = !DILocation(line: 204, column: 49, scope: !9240)
!9242 = !DILocation(line: 204, column: 66, scope: !9240)
!9243 = !DILocation(line: 204, column: 97, scope: !9240)
!9244 = !DILocation(line: 204, column: 112, scope: !9240)
!9245 = !DILocation(line: 204, column: 9, scope: !9209)
!9246 = !DILocation(line: 209, column: 22, scope: !9209)
!9247 = !DILocation(line: 209, column: 5, scope: !9209)
!9248 = !DILocation(line: 212, column: 5, scope: !9209)
!9249 = !DILocation(line: 213, column: 57, scope: !9209)
!9250 = !DILocation(line: 213, column: 17, scope: !9209)
!9251 = !DILocation(line: 213, column: 27, scope: !9209)
!9252 = !DILocation(line: 214, column: 60, scope: !9209)
!9253 = !DILocation(line: 214, column: 17, scope: !9209)
!9254 = !DILocation(line: 214, column: 30, scope: !9209)
!9255 = !DILocation(line: 218, column: 111, scope: !9209)
!9256 = !DILocation(line: 218, column: 5, scope: !9209)
!9257 = !DILocation(line: 220, column: 83, scope: !9209)
!9258 = !DILocation(line: 220, column: 122, scope: !9209)
!9259 = !DILocation(line: 220, column: 5, scope: !9209)
!9260 = !DILocation(line: 221, column: 5, scope: !9209)
!9261 = !DILocation(line: 222, column: 5, scope: !9209)
!9262 = !DILocation(line: 222, column: 17, scope: !9209)
!9263 = !DILocation(line: 222, column: 14, scope: !9209)
!9264 = distinct !{!9264, !9261, !9265}
!9265 = !DILocation(line: 223, column: 5, scope: !9209)
!9266 = !DILocation(line: 224, column: 26, scope: !9209)
!9267 = !DILocation(line: 225, column: 33, scope: !9268)
!9268 = distinct !DILexicalBlock(scope: !9209, file: !4076, line: 225, column: 9)
!9269 = !DILocation(line: 225, column: 9, scope: !9209)
!9270 = !DILocation(line: 227, column: 9, scope: !9271)
!9271 = distinct !DILexicalBlock(scope: !9268, file: !4076, line: 225, column: 56)
!9272 = !DILocation(line: 233, column: 9, scope: !9271)
!9273 = !DILocation(line: 235, column: 86, scope: !9274)
!9274 = distinct !DILexicalBlock(scope: !9268, file: !4076, line: 234, column: 12)
!9275 = !DILocation(line: 235, column: 130, scope: !9274)
!9276 = !DILocation(line: 235, column: 9, scope: !9274)
!9277 = !DILocation(line: 241, column: 9, scope: !9274)
!9278 = !DILocation(line: 0, scope: !9268)
!9279 = !DILocation(line: 243, column: 1, scope: !9209)
!9280 = !DILocation(line: 131, column: 9, scope: !9281)
!9281 = distinct !DILexicalBlock(scope: !1278, file: !1279, line: 131, column: 9)
!9282 = !DILocation(line: 131, column: 9, scope: !1278)
!9283 = !DILocation(line: 0, scope: !1278)
!9284 = !DILocation(line: 134, column: 49, scope: !9285)
!9285 = distinct !DILexicalBlock(scope: !9286, file: !1279, line: 133, column: 46)
!9286 = distinct !DILexicalBlock(scope: !9287, file: !1279, line: 133, column: 9)
!9287 = distinct !DILexicalBlock(scope: !9288, file: !1279, line: 133, column: 9)
!9288 = distinct !DILexicalBlock(scope: !9281, file: !1279, line: 131, column: 28)
!9289 = !DILocation(line: 134, column: 13, scope: !9285)
!9290 = !DILocation(line: 133, column: 42, scope: !9286)
!9291 = !DILocation(line: 133, column: 23, scope: !9286)
!9292 = !DILocation(line: 133, column: 9, scope: !9287)
!9293 = distinct !{!9293, !9292, !9294}
!9294 = !DILocation(line: 135, column: 9, scope: !9287)
!9295 = !DILocation(line: 136, column: 22, scope: !9288)
!9296 = !DILocation(line: 137, column: 5, scope: !9288)
!9297 = !DILocation(line: 138, column: 5, scope: !1278)
!9298 = distinct !DISubprogram(name: "NVIC_SetPriority", scope: !1288, file: !1288, line: 1577, type: !9299, scopeLine: 1578, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1283, retainedNodes: !9301)
!9299 = !DISubroutineType(types: !9300)
!9300 = !{null, !571, !61}
!9301 = !{!9302, !9303}
!9302 = !DILocalVariable(name: "IRQn", arg: 1, scope: !9298, file: !1288, line: 1577, type: !571)
!9303 = !DILocalVariable(name: "priority", arg: 2, scope: !9298, file: !1288, line: 1577, type: !61)
!9304 = !DILocation(line: 0, scope: !9298)
!9305 = !DILocation(line: 1582, column: 34, scope: !9306)
!9306 = distinct !DILexicalBlock(scope: !9307, file: !1288, line: 1581, column: 8)
!9307 = distinct !DILexicalBlock(scope: !9298, file: !1288, line: 1579, column: 6)
!9308 = !DILocation(line: 1582, column: 5, scope: !9306)
!9309 = !DILocation(line: 1582, column: 32, scope: !9306)
!9310 = !DILocation(line: 1583, column: 1, scope: !9298)
!9311 = distinct !DISubprogram(name: "hal_nvic_enable_irq", scope: !1279, file: !1279, line: 141, type: !9312, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1283, retainedNodes: !9314)
!9312 = !DISubroutineType(types: !9313)
!9313 = !{!1282, !570}
!9314 = !{!9315, !9316}
!9315 = !DILocalVariable(name: "irq_number", arg: 1, scope: !9311, file: !1279, line: 141, type: !570)
!9316 = !DILocalVariable(name: "status", scope: !9311, file: !1279, line: 143, type: !1282)
!9317 = !DILocation(line: 0, scope: !9311)
!9318 = !DILocation(line: 145, column: 40, scope: !9319)
!9319 = distinct !DILexicalBlock(scope: !9311, file: !1279, line: 145, column: 9)
!9320 = !DILocation(line: 149, column: 9, scope: !9321)
!9321 = distinct !DILexicalBlock(scope: !9319, file: !1279, line: 148, column: 12)
!9322 = !DILocation(line: 153, column: 5, scope: !9311)
!9323 = !DILocation(line: 154, column: 1, scope: !9311)
!9324 = distinct !DISubprogram(name: "NVIC_EnableIRQ", scope: !1288, file: !1288, line: 1494, type: !9325, scopeLine: 1495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1283, retainedNodes: !9327)
!9325 = !DISubroutineType(types: !9326)
!9326 = !{null, !571}
!9327 = !{!9328}
!9328 = !DILocalVariable(name: "IRQn", arg: 1, scope: !9324, file: !1288, line: 1494, type: !571)
!9329 = !DILocation(line: 0, scope: !9324)
!9330 = !DILocation(line: 1497, column: 91, scope: !9324)
!9331 = !DILocation(line: 1497, column: 61, scope: !9324)
!9332 = !DILocation(line: 1497, column: 40, scope: !9324)
!9333 = !DILocation(line: 1497, column: 3, scope: !9324)
!9334 = !DILocation(line: 1497, column: 46, scope: !9324)
!9335 = !DILocation(line: 1498, column: 1, scope: !9324)
!9336 = distinct !DISubprogram(name: "hal_nvic_disable_irq", scope: !1279, file: !1279, line: 156, type: !9312, scopeLine: 157, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1283, retainedNodes: !9337)
!9337 = !{!9338, !9339}
!9338 = !DILocalVariable(name: "irq_number", arg: 1, scope: !9336, file: !1279, line: 156, type: !570)
!9339 = !DILocalVariable(name: "status", scope: !9336, file: !1279, line: 158, type: !1282)
!9340 = !DILocation(line: 0, scope: !9336)
!9341 = !DILocation(line: 160, column: 40, scope: !9342)
!9342 = distinct !DILexicalBlock(scope: !9336, file: !1279, line: 160, column: 9)
!9343 = !DILocation(line: 164, column: 9, scope: !9344)
!9344 = distinct !DILexicalBlock(scope: !9342, file: !1279, line: 163, column: 12)
!9345 = !DILocation(line: 168, column: 5, scope: !9336)
!9346 = !DILocation(line: 169, column: 1, scope: !9336)
!9347 = distinct !DISubprogram(name: "NVIC_DisableIRQ", scope: !1288, file: !1288, line: 1507, type: !9325, scopeLine: 1508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1283, retainedNodes: !9348)
!9348 = !{!9349}
!9349 = !DILocalVariable(name: "IRQn", arg: 1, scope: !9347, file: !1288, line: 1507, type: !571)
!9350 = !DILocation(line: 0, scope: !9347)
!9351 = !DILocation(line: 1509, column: 65, scope: !9347)
!9352 = !DILocation(line: 1509, column: 44, scope: !9347)
!9353 = !DILocation(line: 1509, column: 32, scope: !9347)
!9354 = !DILocation(line: 1509, column: 3, scope: !9347)
!9355 = !DILocation(line: 1509, column: 39, scope: !9347)
!9356 = !DILocation(line: 1510, column: 1, scope: !9347)
!9357 = distinct !DISubprogram(name: "hal_nvic_get_pending_irq", scope: !1279, file: !1279, line: 171, type: !9358, scopeLine: 172, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1283, retainedNodes: !9360)
!9358 = !DISubroutineType(types: !9359)
!9359 = !{!61, !570}
!9360 = !{!9361, !9362}
!9361 = !DILocalVariable(name: "irq_number", arg: 1, scope: !9357, file: !1279, line: 171, type: !570)
!9362 = !DILocalVariable(name: "ret", scope: !9357, file: !1279, line: 173, type: !61)
!9363 = !DILocation(line: 0, scope: !9357)
!9364 = !DILocation(line: 175, column: 40, scope: !9365)
!9365 = distinct !DILexicalBlock(scope: !9357, file: !1279, line: 175, column: 9)
!9366 = !DILocation(line: 178, column: 15, scope: !9367)
!9367 = distinct !DILexicalBlock(scope: !9365, file: !1279, line: 177, column: 12)
!9368 = !DILocation(line: 181, column: 5, scope: !9357)
!9369 = !DILocation(line: 182, column: 1, scope: !9357)
!9370 = distinct !DISubprogram(name: "NVIC_GetPendingIRQ", scope: !1288, file: !1288, line: 1523, type: !9371, scopeLine: 1524, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1283, retainedNodes: !9373)
!9371 = !DISubroutineType(types: !9372)
!9372 = !{!61, !571}
!9373 = !{!9374}
!9374 = !DILocalVariable(name: "IRQn", arg: 1, scope: !9370, file: !1288, line: 1523, type: !571)
!9375 = !DILocation(line: 0, scope: !9370)
!9376 = !DILocation(line: 1525, column: 51, scope: !9370)
!9377 = !DILocation(line: 1525, column: 23, scope: !9370)
!9378 = !DILocation(line: 1525, column: 83, scope: !9370)
!9379 = !DILocation(line: 1525, column: 22, scope: !9370)
!9380 = !DILocation(line: 1525, column: 3, scope: !9370)
!9381 = distinct !DISubprogram(name: "hal_nvic_set_pending_irq", scope: !1279, file: !1279, line: 184, type: !9312, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1283, retainedNodes: !9382)
!9382 = !{!9383, !9384}
!9383 = !DILocalVariable(name: "irq_number", arg: 1, scope: !9381, file: !1279, line: 184, type: !570)
!9384 = !DILocalVariable(name: "status", scope: !9381, file: !1279, line: 186, type: !1282)
!9385 = !DILocation(line: 0, scope: !9381)
!9386 = !DILocation(line: 188, column: 40, scope: !9387)
!9387 = distinct !DILexicalBlock(scope: !9381, file: !1279, line: 188, column: 9)
!9388 = !DILocation(line: 192, column: 9, scope: !9389)
!9389 = distinct !DILexicalBlock(scope: !9387, file: !1279, line: 191, column: 12)
!9390 = !DILocation(line: 196, column: 5, scope: !9381)
!9391 = !DILocation(line: 197, column: 1, scope: !9381)
!9392 = distinct !DISubprogram(name: "NVIC_SetPendingIRQ", scope: !1288, file: !1288, line: 1535, type: !9325, scopeLine: 1536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1283, retainedNodes: !9393)
!9393 = !{!9394}
!9394 = !DILocalVariable(name: "IRQn", arg: 1, scope: !9392, file: !1288, line: 1535, type: !571)
!9395 = !DILocation(line: 0, scope: !9392)
!9396 = !DILocation(line: 1537, column: 65, scope: !9392)
!9397 = !DILocation(line: 1537, column: 44, scope: !9392)
!9398 = !DILocation(line: 1537, column: 32, scope: !9392)
!9399 = !DILocation(line: 1537, column: 3, scope: !9392)
!9400 = !DILocation(line: 1537, column: 39, scope: !9392)
!9401 = !DILocation(line: 1538, column: 1, scope: !9392)
!9402 = distinct !DISubprogram(name: "hal_nvic_clear_pending_irq", scope: !1279, file: !1279, line: 199, type: !9312, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1283, retainedNodes: !9403)
!9403 = !{!9404, !9405}
!9404 = !DILocalVariable(name: "irq_number", arg: 1, scope: !9402, file: !1279, line: 199, type: !570)
!9405 = !DILocalVariable(name: "status", scope: !9402, file: !1279, line: 201, type: !1282)
!9406 = !DILocation(line: 0, scope: !9402)
!9407 = !DILocation(line: 203, column: 40, scope: !9408)
!9408 = distinct !DILexicalBlock(scope: !9402, file: !1279, line: 203, column: 9)
!9409 = !DILocation(line: 207, column: 9, scope: !9410)
!9410 = distinct !DILexicalBlock(scope: !9408, file: !1279, line: 206, column: 12)
!9411 = !DILocation(line: 211, column: 5, scope: !9402)
!9412 = !DILocation(line: 212, column: 1, scope: !9402)
!9413 = distinct !DISubprogram(name: "NVIC_ClearPendingIRQ", scope: !1288, file: !1288, line: 1547, type: !9325, scopeLine: 1548, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1283, retainedNodes: !9414)
!9414 = !{!9415}
!9415 = !DILocalVariable(name: "IRQn", arg: 1, scope: !9413, file: !1288, line: 1547, type: !571)
!9416 = !DILocation(line: 0, scope: !9413)
!9417 = !DILocation(line: 1549, column: 65, scope: !9413)
!9418 = !DILocation(line: 1549, column: 44, scope: !9413)
!9419 = !DILocation(line: 1549, column: 32, scope: !9413)
!9420 = !DILocation(line: 1549, column: 3, scope: !9413)
!9421 = !DILocation(line: 1549, column: 39, scope: !9413)
!9422 = !DILocation(line: 1550, column: 1, scope: !9413)
!9423 = distinct !DISubprogram(name: "hal_nvic_set_priority", scope: !1279, file: !1279, line: 214, type: !9424, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1283, retainedNodes: !9426)
!9424 = !DISubroutineType(types: !9425)
!9425 = !{!1282, !570, !61}
!9426 = !{!9427, !9428, !9429}
!9427 = !DILocalVariable(name: "irq_number", arg: 1, scope: !9423, file: !1279, line: 214, type: !570)
!9428 = !DILocalVariable(name: "priority", arg: 2, scope: !9423, file: !1279, line: 214, type: !61)
!9429 = !DILocalVariable(name: "status", scope: !9423, file: !1279, line: 216, type: !1282)
!9430 = !DILocation(line: 0, scope: !9423)
!9431 = !DILocation(line: 218, column: 40, scope: !9432)
!9432 = distinct !DILexicalBlock(scope: !9423, file: !1279, line: 218, column: 9)
!9433 = !DILocation(line: 222, column: 9, scope: !9434)
!9434 = distinct !DILexicalBlock(scope: !9432, file: !1279, line: 221, column: 12)
!9435 = !DILocation(line: 226, column: 5, scope: !9423)
!9436 = !DILocation(line: 227, column: 1, scope: !9423)
!9437 = distinct !DISubprogram(name: "hal_nvic_get_priority", scope: !1279, file: !1279, line: 229, type: !9358, scopeLine: 230, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1283, retainedNodes: !9438)
!9438 = !{!9439, !9440}
!9439 = !DILocalVariable(name: "irq_number", arg: 1, scope: !9437, file: !1279, line: 229, type: !570)
!9440 = !DILocalVariable(name: "ret", scope: !9437, file: !1279, line: 231, type: !61)
!9441 = !DILocation(line: 0, scope: !9437)
!9442 = !DILocation(line: 233, column: 40, scope: !9443)
!9443 = distinct !DILexicalBlock(scope: !9437, file: !1279, line: 233, column: 9)
!9444 = !DILocation(line: 236, column: 15, scope: !9445)
!9445 = distinct !DILexicalBlock(scope: !9443, file: !1279, line: 235, column: 12)
!9446 = !DILocation(line: 239, column: 5, scope: !9437)
!9447 = !DILocation(line: 240, column: 1, scope: !9437)
!9448 = distinct !DISubprogram(name: "NVIC_GetPriority", scope: !1288, file: !1288, line: 1597, type: !9371, scopeLine: 1598, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1283, retainedNodes: !9449)
!9449 = !{!9450}
!9450 = !DILocalVariable(name: "IRQn", arg: 1, scope: !9448, file: !1288, line: 1597, type: !571)
!9451 = !DILocation(line: 0, scope: !9448)
!9452 = !DILocation(line: 1603, column: 23, scope: !9453)
!9453 = distinct !DILexicalBlock(scope: !9454, file: !1288, line: 1602, column: 8)
!9454 = distinct !DILexicalBlock(scope: !9448, file: !1288, line: 1600, column: 6)
!9455 = !DILocation(line: 1603, column: 60, scope: !9453)
!9456 = !DILocation(line: 1604, column: 1, scope: !9448)
!9457 = distinct !DISubprogram(name: "isrC_main", scope: !1279, file: !1279, line: 248, type: !1280, scopeLine: 249, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1283, retainedNodes: !9458)
!9458 = !{!9459, !9460}
!9459 = !DILocalVariable(name: "status", scope: !9457, file: !1279, line: 250, type: !1282)
!9460 = !DILocalVariable(name: "irq_number", scope: !9457, file: !1279, line: 251, type: !570)
!9461 = !DILocation(line: 0, scope: !9457)
!9462 = !DILocation(line: 253, column: 5, scope: !9457)
!9463 = !DILocation(line: 255, column: 35, scope: !9457)
!9464 = !DILocation(line: 256, column: 40, scope: !9465)
!9465 = distinct !DILexicalBlock(scope: !9457, file: !1279, line: 256, column: 9)
!9466 = !DILocation(line: 259, column: 48, scope: !9467)
!9467 = distinct !DILexicalBlock(scope: !9465, file: !1279, line: 259, column: 16)
!9468 = !DILocation(line: 259, column: 62, scope: !9467)
!9469 = !DILocation(line: 259, column: 16, scope: !9465)
!9470 = !DILocation(line: 261, column: 9, scope: !9471)
!9471 = distinct !DILexicalBlock(scope: !9467, file: !1279, line: 259, column: 71)
!9472 = !DILocation(line: 262, column: 9, scope: !9471)
!9473 = !DILocation(line: 264, column: 55, scope: !9474)
!9474 = distinct !DILexicalBlock(scope: !9467, file: !1279, line: 263, column: 12)
!9475 = !DILocation(line: 264, column: 41, scope: !9474)
!9476 = !DILocation(line: 264, column: 53, scope: !9474)
!9477 = !DILocation(line: 265, column: 41, scope: !9474)
!9478 = !DILocation(line: 265, column: 9, scope: !9474)
!9479 = !DILocation(line: 269, column: 5, scope: !9457)
!9480 = !DILocation(line: 270, column: 1, scope: !9457)
!9481 = distinct !DISubprogram(name: "get_current_irq", scope: !1279, file: !1279, line: 242, type: !5387, scopeLine: 243, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1283, retainedNodes: !9482)
!9482 = !{!9483}
!9483 = !DILocalVariable(name: "irq_num", scope: !9481, file: !1279, line: 244, type: !61)
!9484 = !DILocation(line: 244, column: 31, scope: !9481)
!9485 = !DILocation(line: 244, column: 36, scope: !9481)
!9486 = !DILocation(line: 0, scope: !9481)
!9487 = !DILocation(line: 245, column: 21, scope: !9481)
!9488 = !DILocation(line: 245, column: 5, scope: !9481)
!9489 = distinct !DISubprogram(name: "get_pending_irq", scope: !1279, file: !1279, line: 121, type: !5387, scopeLine: 122, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1283, retainedNodes: !345)
!9490 = !DILocation(line: 123, column: 19, scope: !9489)
!9491 = !DILocation(line: 123, column: 51, scope: !9489)
!9492 = !DILocation(line: 123, column: 5, scope: !9489)
!9493 = distinct !DISubprogram(name: "hal_nvic_register_isr_handler", scope: !1279, file: !1279, line: 272, type: !9494, scopeLine: 273, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1283, retainedNodes: !9497)
!9494 = !DISubroutineType(types: !9495)
!9495 = !{!1282, !570, !9496}
!9496 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_nvic_isr_t", file: !974, line: 175, baseType: !1360)
!9497 = !{!9498, !9499, !9500}
!9498 = !DILocalVariable(name: "irq_number", arg: 1, scope: !9493, file: !1279, line: 272, type: !570)
!9499 = !DILocalVariable(name: "callback", arg: 2, scope: !9493, file: !1279, line: 272, type: !9496)
!9500 = !DILocalVariable(name: "mask", scope: !9493, file: !1279, line: 274, type: !61)
!9501 = !DILocation(line: 0, scope: !9493)
!9502 = !DILocation(line: 276, column: 40, scope: !9503)
!9503 = distinct !DILexicalBlock(scope: !9493, file: !1279, line: 276, column: 9)
!9504 = !DILocation(line: 280, column: 12, scope: !9493)
!9505 = !DILocation(line: 281, column: 5, scope: !9493)
!9506 = !DILocation(line: 282, column: 37, scope: !9493)
!9507 = !DILocation(line: 282, column: 51, scope: !9493)
!9508 = !DILocation(line: 283, column: 37, scope: !9493)
!9509 = !DILocation(line: 283, column: 49, scope: !9493)
!9510 = !DILocation(line: 284, column: 5, scope: !9493)
!9511 = !DILocation(line: 286, column: 5, scope: !9493)
!9512 = !DILocation(line: 287, column: 1, scope: !9493)
!9513 = distinct !DISubprogram(name: "hal_nvic_save_and_set_interrupt_mask", scope: !1279, file: !1279, line: 289, type: !9514, scopeLine: 290, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1283, retainedNodes: !9516)
!9514 = !DISubroutineType(types: !9515)
!9515 = !{!1282, !1716}
!9516 = !{!9517}
!9517 = !DILocalVariable(name: "mask", arg: 1, scope: !9513, file: !1279, line: 289, type: !1716)
!9518 = !DILocation(line: 0, scope: !9513)
!9519 = !DILocation(line: 291, column: 13, scope: !9513)
!9520 = !DILocation(line: 291, column: 11, scope: !9513)
!9521 = !DILocation(line: 292, column: 5, scope: !9513)
!9522 = distinct !DISubprogram(name: "hal_nvic_restore_interrupt_mask", scope: !1279, file: !1279, line: 295, type: !9523, scopeLine: 296, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1283, retainedNodes: !9525)
!9523 = !DISubroutineType(types: !9524)
!9524 = !{!1282, !61}
!9525 = !{!9526}
!9526 = !DILocalVariable(name: "mask", arg: 1, scope: !9522, file: !1279, line: 295, type: !61)
!9527 = !DILocation(line: 0, scope: !9522)
!9528 = !DILocation(line: 297, column: 5, scope: !9522)
!9529 = !DILocation(line: 298, column: 5, scope: !9522)
!9530 = distinct !DISubprogram(name: "save_and_set_interrupt_mask", scope: !4095, file: !4095, line: 51, type: !5387, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4094, retainedNodes: !9531)
!9531 = !{!9532, !9533}
!9532 = !DILocalVariable(name: "mask", scope: !9530, file: !4095, line: 53, type: !61)
!9533 = !DILocalVariable(name: "priority", scope: !9530, file: !4095, line: 55, type: !61)
!9534 = !DILocation(line: 521, column: 3, scope: !9535, inlinedAt: !9539)
!9535 = distinct !DISubprogram(name: "__get_BASEPRI", scope: !9536, file: !9536, line: 517, type: !5387, scopeLine: 518, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !4094, retainedNodes: !9537)
!9536 = !DIFile(filename: "../../../../../driver/CMSIS/Include/core_cmFunc.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sd_read_write_data_dma/GCC")
!9537 = !{!9538}
!9538 = !DILocalVariable(name: "result", scope: !9535, file: !9536, line: 519, type: !61)
!9539 = distinct !DILocation(line: 53, column: 21, scope: !9530)
!9540 = !{i64 457568}
!9541 = !DILocation(line: 0, scope: !9535, inlinedAt: !9539)
!9542 = !DILocation(line: 0, scope: !9530)
!9543 = !DILocalVariable(name: "value", arg: 1, scope: !9544, file: !9536, line: 532, type: !61)
!9544 = distinct !DISubprogram(name: "__set_BASEPRI", scope: !9536, file: !9536, line: 532, type: !5526, scopeLine: 533, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !4094, retainedNodes: !9545)
!9545 = !{!9543}
!9546 = !DILocation(line: 0, scope: !9544, inlinedAt: !9547)
!9547 = distinct !DILocation(line: 56, column: 5, scope: !9530)
!9548 = !DILocation(line: 534, column: 3, scope: !9544, inlinedAt: !9547)
!9549 = !{i64 457901}
!9550 = !DILocation(line: 456, column: 3, scope: !9551, inlinedAt: !9552)
!9551 = distinct !DISubprogram(name: "__DMB", scope: !4243, file: !4243, line: 454, type: !343, scopeLine: 455, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !4094, retainedNodes: !345)
!9552 = distinct !DILocation(line: 57, column: 5, scope: !9530)
!9553 = !{i64 430657}
!9554 = !DILocation(line: 434, column: 3, scope: !9555, inlinedAt: !9556)
!9555 = distinct !DISubprogram(name: "__ISB", scope: !4243, file: !4243, line: 432, type: !343, scopeLine: 433, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !4094, retainedNodes: !345)
!9556 = distinct !DILocation(line: 58, column: 5, scope: !9530)
!9557 = !{i64 430072}
!9558 = !DILocation(line: 59, column: 5, scope: !9530)
!9559 = distinct !DISubprogram(name: "restore_interrupt_mask", scope: !4095, file: !4095, line: 62, type: !5526, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4094, retainedNodes: !9560)
!9560 = !{!9561}
!9561 = !DILocalVariable(name: "mask", arg: 1, scope: !9559, file: !4095, line: 62, type: !61)
!9562 = !DILocation(line: 0, scope: !9559)
!9563 = !DILocation(line: 0, scope: !9544, inlinedAt: !9564)
!9564 = distinct !DILocation(line: 64, column: 5, scope: !9559)
!9565 = !DILocation(line: 534, column: 3, scope: !9544, inlinedAt: !9564)
!9566 = !DILocation(line: 456, column: 3, scope: !9551, inlinedAt: !9567)
!9567 = distinct !DILocation(line: 65, column: 5, scope: !9559)
!9568 = !DILocation(line: 434, column: 3, scope: !9555, inlinedAt: !9569)
!9569 = distinct !DILocation(line: 66, column: 5, scope: !9559)
!9570 = !DILocation(line: 67, column: 1, scope: !9559)
!9571 = distinct !DISubprogram(name: "nvic_mask_all_interrupt", scope: !4095, file: !4095, line: 69, type: !343, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4094, retainedNodes: !9572)
!9572 = !{!9573, !9574}
!9573 = !DILocalVariable(name: "irq_number", scope: !9571, file: !4095, line: 71, type: !570)
!9574 = !DILocalVariable(name: "mask", scope: !9571, file: !4095, line: 72, type: !61)
!9575 = !DILocation(line: 72, column: 21, scope: !9571)
!9576 = !DILocation(line: 0, scope: !9571)
!9577 = !DILocation(line: 73, column: 5, scope: !9578)
!9578 = distinct !DILexicalBlock(scope: !9571, file: !4095, line: 73, column: 5)
!9579 = !DILocation(line: 74, column: 9, scope: !9580)
!9580 = distinct !DILexicalBlock(scope: !9581, file: !4095, line: 73, column: 85)
!9581 = distinct !DILexicalBlock(scope: !9578, file: !4095, line: 73, column: 5)
!9582 = !DILocation(line: 73, column: 81, scope: !9581)
!9583 = !DILocation(line: 73, column: 53, scope: !9581)
!9584 = distinct !{!9584, !9577, !9585}
!9585 = !DILocation(line: 75, column: 5, scope: !9578)
!9586 = !DILocation(line: 76, column: 5, scope: !9571)
!9587 = !DILocation(line: 77, column: 1, scope: !9571)
!9588 = distinct !DISubprogram(name: "NVIC_DisableIRQ", scope: !1288, file: !1288, line: 1507, type: !9325, scopeLine: 1508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !4094, retainedNodes: !9589)
!9589 = !{!9590}
!9590 = !DILocalVariable(name: "IRQn", arg: 1, scope: !9588, file: !1288, line: 1507, type: !571)
!9591 = !DILocation(line: 0, scope: !9588)
!9592 = !DILocation(line: 1509, column: 65, scope: !9588)
!9593 = !DILocation(line: 1509, column: 44, scope: !9588)
!9594 = !DILocation(line: 1509, column: 32, scope: !9588)
!9595 = !DILocation(line: 1509, column: 3, scope: !9588)
!9596 = !DILocation(line: 1509, column: 39, scope: !9588)
!9597 = !DILocation(line: 1510, column: 1, scope: !9588)
!9598 = distinct !DISubprogram(name: "nvic_unmask_all_interrupt", scope: !4095, file: !4095, line: 79, type: !343, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4094, retainedNodes: !9599)
!9599 = !{!9600, !9601}
!9600 = !DILocalVariable(name: "irq_number", scope: !9598, file: !4095, line: 81, type: !570)
!9601 = !DILocalVariable(name: "mask", scope: !9598, file: !4095, line: 82, type: !61)
!9602 = !DILocation(line: 82, column: 21, scope: !9598)
!9603 = !DILocation(line: 0, scope: !9598)
!9604 = !DILocation(line: 84, column: 5, scope: !9605)
!9605 = distinct !DILexicalBlock(scope: !9598, file: !4095, line: 84, column: 5)
!9606 = !DILocation(line: 85, column: 9, scope: !9607)
!9607 = distinct !DILexicalBlock(scope: !9608, file: !4095, line: 84, column: 85)
!9608 = distinct !DILexicalBlock(scope: !9605, file: !4095, line: 84, column: 5)
!9609 = !DILocation(line: 84, column: 81, scope: !9608)
!9610 = !DILocation(line: 84, column: 53, scope: !9608)
!9611 = distinct !{!9611, !9604, !9612}
!9612 = !DILocation(line: 86, column: 5, scope: !9605)
!9613 = !DILocation(line: 87, column: 5, scope: !9598)
!9614 = !DILocation(line: 88, column: 1, scope: !9598)
!9615 = distinct !DISubprogram(name: "NVIC_EnableIRQ", scope: !1288, file: !1288, line: 1494, type: !9325, scopeLine: 1495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !4094, retainedNodes: !9616)
!9616 = !{!9617}
!9617 = !DILocalVariable(name: "IRQn", arg: 1, scope: !9615, file: !1288, line: 1494, type: !571)
!9618 = !DILocation(line: 0, scope: !9615)
!9619 = !DILocation(line: 1497, column: 91, scope: !9615)
!9620 = !DILocation(line: 1497, column: 61, scope: !9615)
!9621 = !DILocation(line: 1497, column: 40, scope: !9615)
!9622 = !DILocation(line: 1497, column: 3, scope: !9615)
!9623 = !DILocation(line: 1497, column: 46, scope: !9615)
!9624 = !DILocation(line: 1498, column: 1, scope: !9615)
!9625 = distinct !DISubprogram(name: "nvic_clear_all_pending_interrupt", scope: !4095, file: !4095, line: 90, type: !343, scopeLine: 91, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4094, retainedNodes: !9626)
!9626 = !{!9627}
!9627 = !DILocalVariable(name: "irq_number", scope: !9625, file: !4095, line: 92, type: !570)
!9628 = !DILocation(line: 0, scope: !9625)
!9629 = !DILocation(line: 93, column: 5, scope: !9630)
!9630 = distinct !DILexicalBlock(scope: !9625, file: !4095, line: 93, column: 5)
!9631 = !DILocation(line: 94, column: 9, scope: !9632)
!9632 = distinct !DILexicalBlock(scope: !9633, file: !4095, line: 93, column: 85)
!9633 = distinct !DILexicalBlock(scope: !9630, file: !4095, line: 93, column: 5)
!9634 = !DILocation(line: 93, column: 81, scope: !9633)
!9635 = !DILocation(line: 93, column: 53, scope: !9633)
!9636 = distinct !{!9636, !9629, !9637}
!9637 = !DILocation(line: 95, column: 5, scope: !9630)
!9638 = !DILocation(line: 96, column: 1, scope: !9625)
!9639 = distinct !DISubprogram(name: "NVIC_ClearPendingIRQ", scope: !1288, file: !1288, line: 1547, type: !9325, scopeLine: 1548, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !4094, retainedNodes: !9640)
!9640 = !{!9641}
!9641 = !DILocalVariable(name: "IRQn", arg: 1, scope: !9639, file: !1288, line: 1547, type: !571)
!9642 = !DILocation(line: 0, scope: !9639)
!9643 = !DILocation(line: 1549, column: 65, scope: !9639)
!9644 = !DILocation(line: 1549, column: 44, scope: !9639)
!9645 = !DILocation(line: 1549, column: 32, scope: !9639)
!9646 = !DILocation(line: 1549, column: 3, scope: !9639)
!9647 = !DILocation(line: 1549, column: 39, scope: !9639)
!9648 = !DILocation(line: 1550, column: 1, scope: !9639)
!9649 = distinct !DISubprogram(name: "nvic_irq_software_trigger", scope: !4095, file: !4095, line: 98, type: !9312, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4094, retainedNodes: !9650)
!9650 = !{!9651}
!9651 = !DILocalVariable(name: "irq_number", arg: 1, scope: !9649, file: !4095, line: 98, type: !570)
!9652 = !DILocation(line: 0, scope: !9649)
!9653 = !DILocation(line: 100, column: 24, scope: !9654)
!9654 = distinct !DILexicalBlock(scope: !9649, file: !4095, line: 100, column: 9)
!9655 = !DILocation(line: 104, column: 5, scope: !9649)
!9656 = !DILocation(line: 105, column: 5, scope: !9649)
!9657 = !DILocation(line: 106, column: 1, scope: !9649)
!9658 = distinct !DISubprogram(name: "software_trigger_irq", scope: !4095, file: !4095, line: 45, type: !568, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !4094, retainedNodes: !9659)
!9659 = !{!9660}
!9660 = !DILocalVariable(name: "irq_number", arg: 1, scope: !9658, file: !4095, line: 45, type: !570)
!9661 = !DILocation(line: 0, scope: !9658)
!9662 = !DILocation(line: 47, column: 54, scope: !9658)
!9663 = !DILocation(line: 47, column: 16, scope: !9658)
!9664 = !DILocation(line: 445, column: 3, scope: !9665, inlinedAt: !9666)
!9665 = distinct !DISubprogram(name: "__DSB", scope: !4243, file: !4243, line: 443, type: !343, scopeLine: 444, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !4094, retainedNodes: !345)
!9666 = distinct !DILocation(line: 48, column: 5, scope: !9658)
!9667 = !{i64 430368}
!9668 = !DILocation(line: 49, column: 1, scope: !9658)
!9669 = distinct !DISubprogram(name: "hal_nvic_query_exception_number", scope: !4095, file: !4095, line: 114, type: !5387, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4094, retainedNodes: !345)
!9670 = !DILocation(line: 116, column: 19, scope: !9669)
!9671 = !DILocation(line: 116, column: 24, scope: !9669)
!9672 = !DILocation(line: 116, column: 5, scope: !9669)
!9673 = distinct !DISubprogram(name: "hal_sd_register_callback", scope: !1372, file: !1372, line: 69, type: !9674, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1371, retainedNodes: !9678)
!9674 = !DISubroutineType(types: !9675)
!9675 = !{!9676, !1808, !9677, !88}
!9676 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_sd_status_t", file: !1375, line: 805, baseType: !1374)
!9677 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_sd_callback_t", file: !1375, line: 894, baseType: !2205)
!9678 = !{!9679, !9680, !9681}
!9679 = !DILocalVariable(name: "sd_port", arg: 1, scope: !9673, file: !1372, line: 69, type: !1808)
!9680 = !DILocalVariable(name: "sd_callback", arg: 2, scope: !9673, file: !1372, line: 69, type: !9677)
!9681 = !DILocalVariable(name: "user_data", arg: 3, scope: !9673, file: !1372, line: 69, type: !88)
!9682 = !DILocation(line: 0, scope: !9673)
!9683 = !DILocation(line: 71, column: 10, scope: !9684)
!9684 = distinct !DILexicalBlock(scope: !9673, file: !1372, line: 71, column: 9)
!9685 = !DILocation(line: 71, column: 9, scope: !9673)
!9686 = !DILocation(line: 75, column: 26, scope: !9673)
!9687 = !DILocation(line: 75, column: 57, scope: !9673)
!9688 = !DILocation(line: 76, column: 5, scope: !9673)
!9689 = !DILocation(line: 77, column: 1, scope: !9673)
!9690 = distinct !DISubprogram(name: "hal_sd_set_bus_width", scope: !1372, file: !1372, line: 80, type: !9691, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1371, retainedNodes: !9693)
!9691 = !DISubroutineType(types: !9692)
!9692 = !{!9676, !1808, !1909}
!9693 = !{!9694, !9695, !9696, !9697, !9698, !9699, !9700}
!9694 = !DILocalVariable(name: "sd_port", arg: 1, scope: !9690, file: !1372, line: 80, type: !1808)
!9695 = !DILocalVariable(name: "bus_width", arg: 2, scope: !9690, file: !1372, line: 80, type: !1909)
!9696 = !DILocalVariable(name: "status", scope: !9690, file: !1372, line: 82, type: !1924)
!9697 = !DILocalVariable(name: "command6_argment", scope: !9690, file: !1372, line: 83, type: !61)
!9698 = !DILocalVariable(name: "msdc_register_base", scope: !9690, file: !1372, line: 84, type: !1516)
!9699 = !DILocalVariable(name: "argument", scope: !9690, file: !1372, line: 85, type: !61)
!9700 = !DILabel(scope: !9690, name: "error", file: !1372, line: 164)
!9701 = !DILocation(line: 0, scope: !9690)
!9702 = !DILocation(line: 87, column: 41, scope: !9690)
!9703 = !DILocation(line: 91, column: 5, scope: !9690)
!9704 = !DILocation(line: 94, column: 24, scope: !9705)
!9705 = distinct !DILexicalBlock(scope: !9690, file: !1372, line: 94, column: 9)
!9706 = !DILocation(line: 94, column: 63, scope: !9705)
!9707 = !DILocation(line: 99, column: 23, scope: !9708)
!9708 = distinct !DILexicalBlock(scope: !9709, file: !1372, line: 99, column: 13)
!9709 = distinct !DILexicalBlock(scope: !9705, file: !1372, line: 96, column: 68)
!9710 = !DILocation(line: 99, column: 45, scope: !9708)
!9711 = !DILocation(line: 99, column: 69, scope: !9708)
!9712 = !DILocation(line: 99, column: 79, scope: !9708)
!9713 = !DILocation(line: 99, column: 13, scope: !9709)
!9714 = !DILocation(line: 104, column: 60, scope: !9709)
!9715 = !DILocation(line: 104, column: 18, scope: !9709)
!9716 = !DILocation(line: 105, column: 20, scope: !9717)
!9717 = distinct !DILexicalBlock(scope: !9709, file: !1372, line: 105, column: 13)
!9718 = !DILocation(line: 105, column: 13, scope: !9709)
!9719 = !DILocation(line: 109, column: 28, scope: !9709)
!9720 = !DILocation(line: 110, column: 18, scope: !9709)
!9721 = !DILocation(line: 111, column: 20, scope: !9722)
!9722 = distinct !DILexicalBlock(scope: !9709, file: !1372, line: 111, column: 13)
!9723 = !DILocation(line: 111, column: 13, scope: !9709)
!9724 = !DILocation(line: 115, column: 18, scope: !9709)
!9725 = !DILocation(line: 116, column: 20, scope: !9726)
!9726 = distinct !DILexicalBlock(scope: !9709, file: !1372, line: 116, column: 13)
!9727 = !DILocation(line: 116, column: 13, scope: !9709)
!9728 = !DILocation(line: 0, scope: !9729)
!9729 = distinct !DILexicalBlock(scope: !9709, file: !1372, line: 120, column: 13)
!9730 = !DILocation(line: 120, column: 13, scope: !9709)
!9731 = !DILocation(line: 121, column: 71, scope: !9732)
!9732 = distinct !DILexicalBlock(scope: !9729, file: !1372, line: 120, column: 46)
!9733 = !DILocation(line: 121, column: 41, scope: !9732)
!9734 = !DILocation(line: 122, column: 38, scope: !9732)
!9735 = !DILocation(line: 123, column: 9, scope: !9732)
!9736 = !DILocation(line: 124, column: 71, scope: !9737)
!9737 = distinct !DILexicalBlock(scope: !9729, file: !1372, line: 123, column: 16)
!9738 = !DILocation(line: 124, column: 41, scope: !9737)
!9739 = !DILocation(line: 129, column: 23, scope: !9740)
!9740 = distinct !DILexicalBlock(scope: !9741, file: !1372, line: 129, column: 13)
!9741 = distinct !DILexicalBlock(scope: !9742, file: !1372, line: 127, column: 68)
!9742 = distinct !DILexicalBlock(scope: !9705, file: !1372, line: 126, column: 16)
!9743 = !DILocation(line: 129, column: 13, scope: !9741)
!9744 = !DILocation(line: 0, scope: !9745)
!9745 = distinct !DILexicalBlock(scope: !9741, file: !1372, line: 142, column: 13)
!9746 = !DILocation(line: 142, column: 13, scope: !9741)
!9747 = !DILocation(line: 143, column: 71, scope: !9748)
!9748 = distinct !DILexicalBlock(scope: !9745, file: !1372, line: 142, column: 46)
!9749 = !DILocation(line: 143, column: 41, scope: !9748)
!9750 = !DILocation(line: 144, column: 38, scope: !9748)
!9751 = !DILocation(line: 145, column: 9, scope: !9748)
!9752 = !DILocation(line: 146, column: 71, scope: !9753)
!9753 = distinct !DILexicalBlock(scope: !9745, file: !1372, line: 145, column: 16)
!9754 = !DILocation(line: 146, column: 41, scope: !9753)
!9755 = !DILocation(line: 149, column: 32, scope: !9756)
!9756 = distinct !DILexicalBlock(scope: !9741, file: !1372, line: 149, column: 13)
!9757 = !DILocation(line: 149, column: 41, scope: !9756)
!9758 = !DILocation(line: 149, column: 53, scope: !9756)
!9759 = !DILocation(line: 149, column: 13, scope: !9741)
!9760 = !DILocation(line: 150, column: 22, scope: !9761)
!9761 = distinct !DILexicalBlock(scope: !9756, file: !1372, line: 149, column: 86)
!9762 = !DILocation(line: 151, column: 26, scope: !9763)
!9763 = distinct !DILexicalBlock(scope: !9761, file: !1372, line: 151, column: 17)
!9764 = !DILocation(line: 151, column: 17, scope: !9761)
!9765 = !DILocation(line: 159, column: 5, scope: !9690)
!9766 = !DILocation(line: 162, column: 5, scope: !9690)
!9767 = !DILocation(line: 0, scope: !9705)
!9768 = !DILocation(line: 164, column: 1, scope: !9690)
!9769 = !DILocation(line: 168, column: 5, scope: !9690)
!9770 = !DILocation(line: 171, column: 33, scope: !9690)
!9771 = !DILocation(line: 172, column: 5, scope: !9690)
!9772 = !DILocation(line: 173, column: 5, scope: !9690)
!9773 = !DILocation(line: 174, column: 1, scope: !9690)
!9774 = distinct !DISubprogram(name: "hal_sd_init", scope: !1372, file: !1372, line: 176, type: !9775, scopeLine: 177, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1371, retainedNodes: !9783)
!9775 = !DISubroutineType(types: !9776)
!9776 = !{!9676, !1808, !9777}
!9777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9778, size: 32)
!9778 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_sd_config_t", file: !1375, line: 859, baseType: !9779)
!9779 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1375, line: 856, size: 64, elements: !9780)
!9780 = !{!9781, !9782}
!9781 = !DIDerivedType(tag: DW_TAG_member, name: "bus_width", scope: !9779, file: !1375, line: 857, baseType: !1909, size: 32)
!9782 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !9779, file: !1375, line: 858, baseType: !61, size: 32, offset: 32)
!9783 = !{!9784, !9785, !9786, !9787, !9788, !9789}
!9784 = !DILocalVariable(name: "sd_port", arg: 1, scope: !9774, file: !1372, line: 176, type: !1808)
!9785 = !DILocalVariable(name: "sd_config", arg: 2, scope: !9774, file: !1372, line: 176, type: !9777)
!9786 = !DILocalVariable(name: "msdc_register_base", scope: !9774, file: !1372, line: 178, type: !1516)
!9787 = !DILocalVariable(name: "status", scope: !9774, file: !1372, line: 179, type: !1924)
!9788 = !DILocalVariable(name: "irq_status", scope: !9774, file: !1372, line: 180, type: !61)
!9789 = !DILabel(scope: !9774, name: "error", file: !1372, line: 372)
!9790 = !DILocation(line: 0, scope: !9774)
!9791 = !DILocation(line: 182, column: 14, scope: !9792)
!9792 = distinct !DILexicalBlock(scope: !9774, file: !1372, line: 182, column: 9)
!9793 = !DILocation(line: 182, column: 9, scope: !9774)
!9794 = !DILocation(line: 183, column: 9, scope: !9795)
!9795 = distinct !DILexicalBlock(scope: !9792, file: !1372, line: 182, column: 28)
!9796 = !DILocation(line: 184, column: 9, scope: !9795)
!9797 = !DILocation(line: 187, column: 41, scope: !9774)
!9798 = !DILocation(line: 189, column: 18, scope: !9774)
!9799 = !DILocation(line: 190, column: 24, scope: !9800)
!9800 = distinct !DILexicalBlock(scope: !9774, file: !1372, line: 190, column: 9)
!9801 = !DILocation(line: 190, column: 9, scope: !9774)
!9802 = !DILocation(line: 191, column: 9, scope: !9803)
!9803 = distinct !DILexicalBlock(scope: !9800, file: !1372, line: 190, column: 33)
!9804 = !DILocation(line: 192, column: 9, scope: !9803)
!9805 = !DILocation(line: 194, column: 32, scope: !9806)
!9806 = distinct !DILexicalBlock(scope: !9800, file: !1372, line: 193, column: 12)
!9807 = !DILocation(line: 196, column: 5, scope: !9774)
!9808 = !DILocation(line: 200, column: 29, scope: !9809)
!9809 = distinct !DILexicalBlock(scope: !9774, file: !1372, line: 200, column: 9)
!9810 = !DILocation(line: 200, column: 26, scope: !9809)
!9811 = !DILocation(line: 200, column: 9, scope: !9774)
!9812 = !DILocation(line: 201, column: 32, scope: !9813)
!9813 = distinct !DILexicalBlock(scope: !9814, file: !1372, line: 201, column: 13)
!9814 = distinct !DILexicalBlock(scope: !9809, file: !1372, line: 200, column: 62)
!9815 = !DILocation(line: 201, column: 29, scope: !9813)
!9816 = !DILocation(line: 201, column: 13, scope: !9814)
!9817 = !DILocation(line: 202, column: 13, scope: !9818)
!9818 = distinct !DILexicalBlock(scope: !9813, file: !1372, line: 201, column: 70)
!9819 = !DILocation(line: 203, column: 13, scope: !9818)
!9820 = !DILocation(line: 209, column: 5, scope: !9774)
!9821 = !DILocation(line: 213, column: 5, scope: !9774)
!9822 = !DILocation(line: 215, column: 5, scope: !9774)
!9823 = !DILocation(line: 217, column: 5, scope: !9774)
!9824 = !DILocation(line: 219, column: 5, scope: !9774)
!9825 = !DILocation(line: 222, column: 5, scope: !9774)
!9826 = !DILocation(line: 224, column: 5, scope: !9774)
!9827 = !DILocation(line: 226, column: 5, scope: !9774)
!9828 = !DILocation(line: 229, column: 55, scope: !9774)
!9829 = !DILocation(line: 229, column: 63, scope: !9774)
!9830 = !DILocation(line: 229, column: 33, scope: !9774)
!9831 = !DILocation(line: 232, column: 5, scope: !9774)
!9832 = !DILocation(line: 233, column: 33, scope: !9774)
!9833 = !DILocation(line: 234, column: 24, scope: !9774)
!9834 = !DILocation(line: 235, column: 32, scope: !9774)
!9835 = !DILocation(line: 236, column: 29, scope: !9774)
!9836 = !DILocation(line: 237, column: 30, scope: !9774)
!9837 = !DILocation(line: 238, column: 35, scope: !9774)
!9838 = !DILocation(line: 241, column: 56, scope: !9774)
!9839 = !DILocation(line: 241, column: 65, scope: !9774)
!9840 = !DILocation(line: 241, column: 34, scope: !9774)
!9841 = !DILocation(line: 243, column: 5, scope: !9774)
!9842 = !DILocation(line: 246, column: 56, scope: !9774)
!9843 = !DILocation(line: 246, column: 65, scope: !9774)
!9844 = !DILocation(line: 246, column: 34, scope: !9774)
!9845 = !DILocation(line: 249, column: 14, scope: !9774)
!9846 = !DILocation(line: 250, column: 18, scope: !9847)
!9847 = distinct !DILexicalBlock(scope: !9774, file: !1372, line: 250, column: 9)
!9848 = !DILocation(line: 250, column: 9, scope: !9774)
!9849 = !DILocation(line: 255, column: 9, scope: !9850)
!9850 = distinct !DILexicalBlock(scope: !9774, file: !1372, line: 255, column: 9)
!9851 = !DILocation(line: 255, column: 37, scope: !9850)
!9852 = !DILocation(line: 255, column: 9, scope: !9774)
!9853 = !DILocation(line: 260, column: 37, scope: !9854)
!9854 = distinct !DILexicalBlock(scope: !9850, file: !1372, line: 258, column: 12)
!9855 = !DILocation(line: 264, column: 14, scope: !9774)
!9856 = !DILocation(line: 265, column: 18, scope: !9857)
!9857 = distinct !DILexicalBlock(scope: !9774, file: !1372, line: 265, column: 9)
!9858 = !DILocation(line: 265, column: 9, scope: !9774)
!9859 = !DILocation(line: 270, column: 14, scope: !9774)
!9860 = !DILocation(line: 271, column: 18, scope: !9861)
!9861 = distinct !DILexicalBlock(scope: !9774, file: !1372, line: 271, column: 9)
!9862 = !DILocation(line: 271, column: 9, scope: !9774)
!9863 = !DILocation(line: 276, column: 14, scope: !9774)
!9864 = !DILocation(line: 277, column: 18, scope: !9865)
!9865 = distinct !DILexicalBlock(scope: !9774, file: !1372, line: 277, column: 9)
!9866 = !DILocation(line: 277, column: 9, scope: !9774)
!9867 = !DILocation(line: 281, column: 28, scope: !9868)
!9868 = distinct !DILexicalBlock(scope: !9774, file: !1372, line: 281, column: 9)
!9869 = !DILocation(line: 281, column: 9, scope: !9868)
!9870 = !DILocation(line: 281, column: 9, scope: !9774)
!9871 = !DILocation(line: 282, column: 18, scope: !9872)
!9872 = distinct !DILexicalBlock(scope: !9868, file: !1372, line: 281, column: 37)
!9873 = !DILocation(line: 283, column: 22, scope: !9874)
!9874 = distinct !DILexicalBlock(scope: !9872, file: !1372, line: 283, column: 13)
!9875 = !DILocation(line: 283, column: 13, scope: !9872)
!9876 = !DILocation(line: 289, column: 53, scope: !9774)
!9877 = !DILocation(line: 289, column: 14, scope: !9774)
!9878 = !DILocation(line: 290, column: 9, scope: !9774)
!9879 = !DILocation(line: 291, column: 34, scope: !9880)
!9880 = distinct !DILexicalBlock(scope: !9881, file: !1372, line: 290, column: 41)
!9881 = distinct !DILexicalBlock(scope: !9774, file: !1372, line: 290, column: 9)
!9882 = !DILocation(line: 292, column: 5, scope: !9880)
!9883 = !DILocation(line: 296, column: 5, scope: !9774)
!9884 = !DILocation(line: 298, column: 24, scope: !9885)
!9885 = distinct !DILexicalBlock(scope: !9774, file: !1372, line: 298, column: 9)
!9886 = !DILocation(line: 298, column: 63, scope: !9885)
!9887 = !DILocation(line: 302, column: 18, scope: !9888)
!9888 = distinct !DILexicalBlock(scope: !9885, file: !1372, line: 300, column: 68)
!9889 = !DILocation(line: 303, column: 22, scope: !9890)
!9890 = distinct !DILexicalBlock(scope: !9888, file: !1372, line: 303, column: 13)
!9891 = !DILocation(line: 303, column: 13, scope: !9888)
!9892 = !DILocation(line: 307, column: 74, scope: !9893)
!9893 = distinct !DILexicalBlock(scope: !9888, file: !1372, line: 307, column: 13)
!9894 = !DILocation(line: 307, column: 33, scope: !9893)
!9895 = !DILocation(line: 307, column: 30, scope: !9893)
!9896 = !DILocation(line: 307, column: 13, scope: !9888)
!9897 = !DILocation(line: 308, column: 13, scope: !9898)
!9898 = distinct !DILexicalBlock(scope: !9893, file: !1372, line: 307, column: 86)
!9899 = !DILocation(line: 311, column: 13, scope: !9898)
!9900 = !DILocation(line: 313, column: 13, scope: !9898)
!9901 = !DILocation(line: 316, column: 18, scope: !9888)
!9902 = !DILocation(line: 317, column: 22, scope: !9903)
!9903 = distinct !DILexicalBlock(scope: !9888, file: !1372, line: 317, column: 13)
!9904 = !DILocation(line: 317, column: 13, scope: !9888)
!9905 = !DILocation(line: 321, column: 32, scope: !9906)
!9906 = distinct !DILexicalBlock(scope: !9888, file: !1372, line: 321, column: 13)
!9907 = !DILocation(line: 321, column: 41, scope: !9906)
!9908 = !DILocation(line: 321, column: 13, scope: !9888)
!9909 = !DILocation(line: 322, column: 22, scope: !9910)
!9910 = distinct !DILexicalBlock(scope: !9906, file: !1372, line: 321, column: 65)
!9911 = !DILocation(line: 323, column: 26, scope: !9912)
!9912 = distinct !DILexicalBlock(scope: !9910, file: !1372, line: 323, column: 17)
!9913 = !DILocation(line: 323, column: 17, scope: !9910)
!9914 = !DILocation(line: 325, column: 46, scope: !9915)
!9915 = distinct !DILexicalBlock(scope: !9912, file: !1372, line: 323, column: 37)
!9916 = !DILocation(line: 326, column: 13, scope: !9915)
!9917 = !DILocation(line: 332, column: 18, scope: !9918)
!9918 = distinct !DILexicalBlock(scope: !9919, file: !1372, line: 329, column: 68)
!9919 = distinct !DILexicalBlock(scope: !9885, file: !1372, line: 328, column: 16)
!9920 = !DILocation(line: 333, column: 22, scope: !9921)
!9921 = distinct !DILexicalBlock(scope: !9918, file: !1372, line: 333, column: 13)
!9922 = !DILocation(line: 333, column: 13, scope: !9918)
!9923 = !DILocation(line: 337, column: 74, scope: !9924)
!9924 = distinct !DILexicalBlock(scope: !9918, file: !1372, line: 337, column: 13)
!9925 = !DILocation(line: 337, column: 33, scope: !9924)
!9926 = !DILocation(line: 337, column: 30, scope: !9924)
!9927 = !DILocation(line: 337, column: 13, scope: !9918)
!9928 = !DILocation(line: 338, column: 13, scope: !9929)
!9929 = distinct !DILexicalBlock(scope: !9924, file: !1372, line: 337, column: 86)
!9930 = !DILocation(line: 341, column: 13, scope: !9929)
!9931 = !DILocation(line: 343, column: 13, scope: !9929)
!9932 = !DILocation(line: 347, column: 24, scope: !9933)
!9933 = distinct !DILexicalBlock(scope: !9774, file: !1372, line: 347, column: 9)
!9934 = !DILocation(line: 347, column: 34, scope: !9933)
!9935 = !DILocation(line: 347, column: 9, scope: !9774)
!9936 = !DILocation(line: 348, column: 68, scope: !9937)
!9937 = distinct !DILexicalBlock(scope: !9933, file: !1372, line: 347, column: 61)
!9938 = !DILocation(line: 348, column: 77, scope: !9937)
!9939 = !DILocation(line: 348, column: 39, scope: !9937)
!9940 = !DILocation(line: 348, column: 87, scope: !9937)
!9941 = !DILocation(line: 348, column: 37, scope: !9937)
!9942 = !DILocation(line: 349, column: 5, scope: !9937)
!9943 = !DILocation(line: 351, column: 14, scope: !9774)
!9944 = !DILocation(line: 352, column: 18, scope: !9945)
!9945 = distinct !DILexicalBlock(scope: !9774, file: !1372, line: 352, column: 9)
!9946 = !DILocation(line: 352, column: 9, scope: !9774)
!9947 = !DILocation(line: 356, column: 28, scope: !9774)
!9948 = !DILocation(line: 358, column: 35, scope: !9774)
!9949 = !DILocation(line: 360, column: 66, scope: !9950)
!9950 = distinct !DILexicalBlock(scope: !9774, file: !1372, line: 360, column: 9)
!9951 = !DILocation(line: 360, column: 23, scope: !9950)
!9952 = !DILocation(line: 360, column: 9, scope: !9774)
!9953 = !DILocation(line: 361, column: 9, scope: !9954)
!9954 = distinct !DILexicalBlock(scope: !9950, file: !1372, line: 360, column: 74)
!9955 = !DILocation(line: 362, column: 9, scope: !9954)
!9956 = !DILocation(line: 367, column: 5, scope: !9774)
!9957 = !DILocation(line: 370, column: 5, scope: !9774)
!9958 = !DILocation(line: 372, column: 1, scope: !9774)
!9959 = !DILocation(line: 373, column: 5, scope: !9774)
!9960 = !DILocation(line: 374, column: 33, scope: !9774)
!9961 = !DILocation(line: 375, column: 24, scope: !9774)
!9962 = !DILocation(line: 376, column: 32, scope: !9774)
!9963 = !DILocation(line: 377, column: 29, scope: !9774)
!9964 = !DILocation(line: 378, column: 30, scope: !9774)
!9965 = !DILocation(line: 379, column: 35, scope: !9774)
!9966 = !DILocation(line: 381, column: 33, scope: !9774)
!9967 = !DILocation(line: 382, column: 5, scope: !9774)
!9968 = !DILocation(line: 383, column: 5, scope: !9774)
!9969 = !DILocation(line: 387, column: 5, scope: !9774)
!9970 = !DILocation(line: 390, column: 28, scope: !9774)
!9971 = !DILocation(line: 392, column: 5, scope: !9774)
!9972 = !DILocation(line: 393, column: 1, scope: !9774)
!9973 = distinct !DISubprogram(name: "hal_sd_deinit", scope: !1372, file: !1372, line: 396, type: !9974, scopeLine: 397, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1371, retainedNodes: !9976)
!9974 = !DISubroutineType(types: !9975)
!9975 = !{!9676, !1808}
!9976 = !{!9977}
!9977 = !DILocalVariable(name: "sd_port", arg: 1, scope: !9973, file: !1372, line: 396, type: !1808)
!9978 = !DILocation(line: 0, scope: !9973)
!9979 = !DILocation(line: 398, column: 5, scope: !9973)
!9980 = !DILocation(line: 400, column: 5, scope: !9973)
!9981 = !DILocation(line: 402, column: 5, scope: !9973)
!9982 = !DILocation(line: 404, column: 5, scope: !9973)
!9983 = distinct !DISubprogram(name: "hal_sd_get_capacity", scope: !1372, file: !1372, line: 408, type: !9984, scopeLine: 409, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1371, retainedNodes: !9987)
!9984 = !DISubroutineType(types: !9985)
!9985 = !{!9676, !1808, !9986}
!9986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1549, size: 32)
!9987 = !{!9988, !9989}
!9988 = !DILocalVariable(name: "sd_port", arg: 1, scope: !9983, file: !1372, line: 408, type: !1808)
!9989 = !DILocalVariable(name: "capacity", arg: 2, scope: !9983, file: !1372, line: 408, type: !9986)
!9990 = !DILocation(line: 0, scope: !9983)
!9991 = !DILocation(line: 410, column: 14, scope: !9992)
!9992 = distinct !DILexicalBlock(scope: !9983, file: !1372, line: 410, column: 9)
!9993 = !DILocation(line: 410, column: 9, scope: !9983)
!9994 = !DILocation(line: 411, column: 9, scope: !9995)
!9995 = distinct !DILexicalBlock(scope: !9992, file: !1372, line: 410, column: 27)
!9996 = !DILocation(line: 412, column: 9, scope: !9995)
!9997 = !DILocation(line: 415, column: 38, scope: !9998)
!9998 = distinct !DILexicalBlock(scope: !9983, file: !1372, line: 415, column: 9)
!9999 = !DILocation(line: 415, column: 20, scope: !9998)
!10000 = !DILocation(line: 415, column: 9, scope: !9983)
!10001 = !DILocation(line: 416, column: 9, scope: !10002)
!10002 = distinct !DILexicalBlock(scope: !9998, file: !1372, line: 415, column: 54)
!10003 = !DILocation(line: 417, column: 9, scope: !10002)
!10004 = !DILocation(line: 420, column: 34, scope: !10005)
!10005 = distinct !DILexicalBlock(scope: !9983, file: !1372, line: 420, column: 9)
!10006 = !DILocation(line: 420, column: 12, scope: !10005)
!10007 = !DILocation(line: 420, column: 44, scope: !10005)
!10008 = !DILocation(line: 420, column: 63, scope: !10005)
!10009 = !DILocation(line: 420, column: 9, scope: !9983)
!10010 = !DILocation(line: 421, column: 19, scope: !10011)
!10011 = distinct !DILexicalBlock(scope: !10005, file: !1372, line: 420, column: 93)
!10012 = !DILocation(line: 422, column: 9, scope: !10011)
!10013 = !DILocation(line: 426, column: 1, scope: !9983)
!10014 = distinct !DISubprogram(name: "hal_sd_erase_sectors", scope: !1372, file: !1372, line: 430, type: !10015, scopeLine: 431, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1371, retainedNodes: !10017)
!10015 = !DISubroutineType(types: !10016)
!10016 = !{!9676, !1808, !61, !61}
!10017 = !{!10018, !10019, !10020, !10021, !10022, !10023, !10024, !10025, !10026}
!10018 = !DILocalVariable(name: "sd_port", arg: 1, scope: !10014, file: !1372, line: 430, type: !1808)
!10019 = !DILocalVariable(name: "start_sector", arg: 2, scope: !10014, file: !1372, line: 430, type: !61)
!10020 = !DILocalVariable(name: "sector_number", arg: 3, scope: !10014, file: !1372, line: 430, type: !61)
!10021 = !DILocalVariable(name: "status", scope: !10014, file: !1372, line: 433, type: !1924)
!10022 = !DILocalVariable(name: "sector_multiplier", scope: !10014, file: !1372, line: 434, type: !61)
!10023 = !DILocalVariable(name: "start_address_command", scope: !10014, file: !1372, line: 435, type: !61)
!10024 = !DILocalVariable(name: "end_address_command", scope: !10014, file: !1372, line: 436, type: !61)
!10025 = !DILocalVariable(name: "irq_status", scope: !10014, file: !1372, line: 437, type: !61)
!10026 = !DILabel(scope: !10014, name: "error", file: !1372, line: 496)
!10027 = !DILocation(line: 0, scope: !10014)
!10028 = !DILocation(line: 439, column: 38, scope: !10029)
!10029 = distinct !DILexicalBlock(scope: !10014, file: !1372, line: 439, column: 9)
!10030 = !DILocation(line: 439, column: 20, scope: !10029)
!10031 = !DILocation(line: 439, column: 9, scope: !10014)
!10032 = !DILocation(line: 440, column: 9, scope: !10033)
!10033 = distinct !DILexicalBlock(scope: !10029, file: !1372, line: 439, column: 54)
!10034 = !DILocation(line: 441, column: 9, scope: !10033)
!10035 = !DILocation(line: 444, column: 18, scope: !10014)
!10036 = !DILocation(line: 445, column: 24, scope: !10037)
!10037 = distinct !DILexicalBlock(scope: !10014, file: !1372, line: 445, column: 9)
!10038 = !DILocation(line: 445, column: 9, scope: !10014)
!10039 = !DILocation(line: 446, column: 9, scope: !10040)
!10040 = distinct !DILexicalBlock(scope: !10037, file: !1372, line: 445, column: 33)
!10041 = !DILocation(line: 447, column: 9, scope: !10040)
!10042 = !DILocation(line: 449, column: 32, scope: !10043)
!10043 = distinct !DILexicalBlock(scope: !10037, file: !1372, line: 448, column: 12)
!10044 = !DILocation(line: 451, column: 5, scope: !10014)
!10045 = !DILocation(line: 455, column: 25, scope: !10046)
!10046 = distinct !DILexicalBlock(scope: !10014, file: !1372, line: 455, column: 9)
!10047 = !DILocation(line: 455, column: 65, scope: !10046)
!10048 = !DILocation(line: 457, column: 41, scope: !10049)
!10049 = distinct !DILexicalBlock(scope: !10046, file: !1372, line: 457, column: 16)
!10050 = !DILocation(line: 457, column: 16, scope: !10046)
!10051 = !DILocation(line: 459, column: 48, scope: !10052)
!10052 = distinct !DILexicalBlock(scope: !10049, file: !1372, line: 457, column: 66)
!10053 = !DILocation(line: 459, column: 67, scope: !10052)
!10054 = !DILocation(line: 465, column: 65, scope: !10055)
!10055 = distinct !DILexicalBlock(scope: !10014, file: !1372, line: 465, column: 9)
!10056 = !DILocation(line: 0, scope: !10046)
!10057 = !DILocation(line: 0, scope: !10055)
!10058 = !DILocation(line: 476, column: 86, scope: !10014)
!10059 = !DILocation(line: 476, column: 14, scope: !10014)
!10060 = !DILocation(line: 477, column: 18, scope: !10061)
!10061 = distinct !DILexicalBlock(scope: !10014, file: !1372, line: 477, column: 9)
!10062 = !DILocation(line: 477, column: 9, scope: !10014)
!10063 = !DILocation(line: 482, column: 100, scope: !10014)
!10064 = !DILocation(line: 482, column: 116, scope: !10014)
!10065 = !DILocation(line: 482, column: 84, scope: !10014)
!10066 = !DILocation(line: 482, column: 14, scope: !10014)
!10067 = !DILocation(line: 483, column: 18, scope: !10068)
!10068 = distinct !DILexicalBlock(scope: !10014, file: !1372, line: 483, column: 9)
!10069 = !DILocation(line: 483, column: 9, scope: !10014)
!10070 = !DILocation(line: 488, column: 14, scope: !10014)
!10071 = !DILocation(line: 489, column: 18, scope: !10072)
!10072 = distinct !DILexicalBlock(scope: !10014, file: !1372, line: 489, column: 9)
!10073 = !DILocation(line: 489, column: 9, scope: !10014)
!10074 = !DILocation(line: 493, column: 28, scope: !10014)
!10075 = !DILocation(line: 494, column: 5, scope: !10014)
!10076 = !DILocation(line: 496, column: 1, scope: !10014)
!10077 = !DILocation(line: 498, column: 33, scope: !10014)
!10078 = !DILocation(line: 499, column: 5, scope: !10014)
!10079 = !DILocation(line: 501, column: 28, scope: !10014)
!10080 = !DILocation(line: 502, column: 5, scope: !10014)
!10081 = !DILocation(line: 504, column: 5, scope: !10014)
!10082 = !DILocation(line: 505, column: 1, scope: !10014)
!10083 = distinct !DISubprogram(name: "hal_sd_read_blocks", scope: !1372, file: !1372, line: 508, type: !10084, scopeLine: 509, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1371, retainedNodes: !10086)
!10084 = !DISubroutineType(types: !10085)
!10085 = !{!9676, !1808, !1716, !61, !61}
!10086 = !{!10087, !10088, !10089, !10090, !10091, !10092, !10093, !10094, !10095, !10096, !10097, !10098, !10099, !10100}
!10087 = !DILocalVariable(name: "sd_port", arg: 1, scope: !10083, file: !1372, line: 508, type: !1808)
!10088 = !DILocalVariable(name: "read_buffer", arg: 2, scope: !10083, file: !1372, line: 508, type: !1716)
!10089 = !DILocalVariable(name: "read_address", arg: 3, scope: !10083, file: !1372, line: 508, type: !61)
!10090 = !DILocalVariable(name: "block_number", arg: 4, scope: !10083, file: !1372, line: 508, type: !61)
!10091 = !DILocalVariable(name: "status", scope: !10083, file: !1372, line: 510, type: !1924)
!10092 = !DILocalVariable(name: "read_command", scope: !10083, file: !1372, line: 511, type: !61)
!10093 = !DILocalVariable(name: "index", scope: !10083, file: !1372, line: 512, type: !61)
!10094 = !DILocalVariable(name: "read_word_count", scope: !10083, file: !1372, line: 513, type: !1549)
!10095 = !DILocalVariable(name: "response", scope: !10083, file: !1372, line: 514, type: !61)
!10096 = !DILocalVariable(name: "block_multiplier", scope: !10083, file: !1372, line: 515, type: !61)
!10097 = !DILocalVariable(name: "msdc_register_base", scope: !10083, file: !1372, line: 516, type: !1516)
!10098 = !DILocalVariable(name: "irq_status", scope: !10083, file: !1372, line: 517, type: !61)
!10099 = !DILocalVariable(name: "data_status", scope: !10083, file: !1372, line: 518, type: !61)
!10100 = !DILabel(scope: !10083, name: "error", file: !1372, line: 642)
!10101 = !DILocation(line: 0, scope: !10083)
!10102 = !DILocation(line: 520, column: 38, scope: !10103)
!10103 = distinct !DILexicalBlock(scope: !10083, file: !1372, line: 520, column: 9)
!10104 = !DILocation(line: 520, column: 20, scope: !10103)
!10105 = !DILocation(line: 520, column: 9, scope: !10083)
!10106 = !DILocation(line: 521, column: 9, scope: !10107)
!10107 = distinct !DILexicalBlock(scope: !10103, file: !1372, line: 520, column: 54)
!10108 = !DILocation(line: 522, column: 9, scope: !10107)
!10109 = !DILocation(line: 525, column: 14, scope: !10110)
!10110 = distinct !DILexicalBlock(scope: !10083, file: !1372, line: 525, column: 9)
!10111 = !DILocation(line: 525, column: 9, scope: !10083)
!10112 = !DILocation(line: 526, column: 9, scope: !10113)
!10113 = distinct !DILexicalBlock(scope: !10110, file: !1372, line: 525, column: 30)
!10114 = !DILocation(line: 527, column: 9, scope: !10113)
!10115 = !DILocation(line: 530, column: 18, scope: !10083)
!10116 = !DILocation(line: 531, column: 24, scope: !10117)
!10117 = distinct !DILexicalBlock(scope: !10083, file: !1372, line: 531, column: 9)
!10118 = !DILocation(line: 531, column: 9, scope: !10083)
!10119 = !DILocation(line: 532, column: 9, scope: !10120)
!10120 = distinct !DILexicalBlock(scope: !10117, file: !1372, line: 531, column: 33)
!10121 = !DILocation(line: 533, column: 9, scope: !10120)
!10122 = !DILocation(line: 535, column: 32, scope: !10123)
!10123 = distinct !DILexicalBlock(scope: !10117, file: !1372, line: 534, column: 12)
!10124 = !DILocation(line: 537, column: 5, scope: !10083)
!10125 = !DILocation(line: 539, column: 41, scope: !10083)
!10126 = !DILocation(line: 541, column: 57, scope: !10083)
!10127 = !DILocation(line: 541, column: 66, scope: !10083)
!10128 = !DILocation(line: 541, column: 94, scope: !10083)
!10129 = !DILocation(line: 541, column: 34, scope: !10083)
!10130 = !DILocation(line: 544, column: 59, scope: !10083)
!10131 = !DILocation(line: 544, column: 70, scope: !10083)
!10132 = !DILocation(line: 544, column: 36, scope: !10083)
!10133 = !DILocation(line: 548, column: 25, scope: !10083)
!10134 = !DILocation(line: 553, column: 25, scope: !10135)
!10135 = distinct !DILexicalBlock(scope: !10083, file: !1372, line: 553, column: 9)
!10136 = !DILocation(line: 553, column: 65, scope: !10135)
!10137 = !DILocation(line: 564, column: 5, scope: !10083)
!10138 = !DILocation(line: 567, column: 34, scope: !10083)
!10139 = !DILocation(line: 567, column: 20, scope: !10083)
!10140 = !DILocation(line: 568, column: 67, scope: !10083)
!10141 = !DILocation(line: 568, column: 14, scope: !10083)
!10142 = !DILocation(line: 569, column: 16, scope: !10143)
!10143 = distinct !DILexicalBlock(scope: !10083, file: !1372, line: 569, column: 9)
!10144 = !DILocation(line: 569, column: 9, scope: !10083)
!10145 = !DILocation(line: 573, column: 14, scope: !10083)
!10146 = !DILocation(line: 574, column: 16, scope: !10147)
!10147 = distinct !DILexicalBlock(scope: !10083, file: !1372, line: 574, column: 9)
!10148 = !DILocation(line: 574, column: 9, scope: !10083)
!10149 = !DILocation(line: 578, column: 35, scope: !10083)
!10150 = !DILocation(line: 578, column: 58, scope: !10083)
!10151 = !DILocation(line: 580, column: 18, scope: !10083)
!10152 = !DILocation(line: 580, column: 5, scope: !10083)
!10153 = !DILocation(line: 582, column: 43, scope: !10154)
!10154 = distinct !DILexicalBlock(scope: !10083, file: !1372, line: 580, column: 37)
!10155 = !DILocation(line: 583, column: 25, scope: !10156)
!10156 = distinct !DILexicalBlock(scope: !10154, file: !1372, line: 583, column: 13)
!10157 = !DILocation(line: 583, column: 13, scope: !10154)
!10158 = !DILocation(line: 584, column: 13, scope: !10159)
!10159 = distinct !DILexicalBlock(scope: !10156, file: !1372, line: 583, column: 31)
!10160 = !DILocation(line: 585, column: 29, scope: !10161)
!10161 = distinct !DILexicalBlock(scope: !10159, file: !1372, line: 585, column: 17)
!10162 = !DILocation(line: 585, column: 17, scope: !10159)
!10163 = !DILocation(line: 588, column: 36, scope: !10164)
!10164 = distinct !DILexicalBlock(scope: !10161, file: !1372, line: 588, column: 24)
!10165 = !DILocation(line: 588, column: 24, scope: !10161)
!10166 = !DILocation(line: 594, column: 33, scope: !10167)
!10167 = distinct !DILexicalBlock(scope: !10154, file: !1372, line: 594, column: 13)
!10168 = !DILocation(line: 594, column: 42, scope: !10167)
!10169 = !DILocation(line: 594, column: 13, scope: !10154)
!10170 = !DILocation(line: 595, column: 58, scope: !10171)
!10171 = distinct !DILexicalBlock(scope: !10167, file: !1372, line: 594, column: 63)
!10172 = !DILocation(line: 595, column: 27, scope: !10171)
!10173 = !DILocation(line: 595, column: 36, scope: !10171)
!10174 = !DILocation(line: 596, column: 18, scope: !10171)
!10175 = !DILocation(line: 597, column: 9, scope: !10171)
!10176 = !DILocation(line: 580, column: 12, scope: !10083)
!10177 = distinct !{!10177, !10152, !10178}
!10178 = !DILocation(line: 598, column: 5, scope: !10083)
!10179 = !DILocation(line: 600, column: 5, scope: !10083)
!10180 = !DILocation(line: 602, column: 25, scope: !10083)
!10181 = !DILocation(line: 604, column: 11, scope: !10182)
!10182 = distinct !DILexicalBlock(scope: !10083, file: !1372, line: 604, column: 9)
!10183 = !DILocation(line: 604, column: 9, scope: !10083)
!10184 = !DILocation(line: 605, column: 18, scope: !10185)
!10185 = distinct !DILexicalBlock(scope: !10182, file: !1372, line: 604, column: 28)
!10186 = !DILocation(line: 606, column: 20, scope: !10187)
!10187 = distinct !DILexicalBlock(scope: !10185, file: !1372, line: 606, column: 13)
!10188 = !DILocation(line: 606, column: 13, scope: !10185)
!10189 = !DILocation(line: 610, column: 18, scope: !10190)
!10190 = distinct !DILexicalBlock(scope: !10182, file: !1372, line: 609, column: 12)
!10191 = !DILocation(line: 611, column: 20, scope: !10192)
!10192 = distinct !DILexicalBlock(scope: !10190, file: !1372, line: 611, column: 13)
!10193 = !DILocation(line: 611, column: 13, scope: !10190)
!10194 = !DILocation(line: 616, column: 5, scope: !10083)
!10195 = !DILocation(line: 616, column: 12, scope: !10083)
!10196 = !DILocation(line: 618, column: 74, scope: !10197)
!10197 = distinct !DILexicalBlock(scope: !10083, file: !1372, line: 616, column: 56)
!10198 = !DILocation(line: 618, column: 78, scope: !10197)
!10199 = !DILocation(line: 618, column: 18, scope: !10197)
!10200 = !DILocation(line: 619, column: 22, scope: !10201)
!10201 = distinct !DILexicalBlock(scope: !10197, file: !1372, line: 619, column: 13)
!10202 = !DILocation(line: 619, column: 13, scope: !10197)
!10203 = !DILocation(line: 623, column: 40, scope: !10197)
!10204 = !DILocation(line: 625, column: 64, scope: !10205)
!10205 = distinct !DILexicalBlock(scope: !10197, file: !1372, line: 625, column: 13)
!10206 = distinct !{!10206, !10194, !10207}
!10207 = !DILocation(line: 629, column: 5, scope: !10083)
!10208 = !DILocation(line: 631, column: 5, scope: !10083)
!10209 = !DILocation(line: 635, column: 5, scope: !10083)
!10210 = !DILocation(line: 638, column: 28, scope: !10083)
!10211 = !DILocation(line: 640, column: 5, scope: !10083)
!10212 = !DILocation(line: 642, column: 1, scope: !10083)
!10213 = !DILocation(line: 644, column: 33, scope: !10083)
!10214 = !DILocation(line: 645, column: 5, scope: !10083)
!10215 = !DILocation(line: 646, column: 5, scope: !10083)
!10216 = !DILocation(line: 647, column: 25, scope: !10083)
!10217 = !DILocation(line: 648, column: 9, scope: !10083)
!10218 = !DILocation(line: 649, column: 9, scope: !10219)
!10219 = distinct !DILexicalBlock(scope: !10220, file: !1372, line: 648, column: 27)
!10220 = distinct !DILexicalBlock(scope: !10083, file: !1372, line: 648, column: 9)
!10221 = !DILocation(line: 650, column: 5, scope: !10219)
!10222 = !DILocation(line: 654, column: 5, scope: !10083)
!10223 = !DILocation(line: 657, column: 28, scope: !10083)
!10224 = !DILocation(line: 659, column: 5, scope: !10083)
!10225 = !DILocation(line: 660, column: 1, scope: !10083)
!10226 = distinct !DISubprogram(name: "hal_sd_write_blocks", scope: !1372, file: !1372, line: 663, type: !10227, scopeLine: 664, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1371, retainedNodes: !10229)
!10227 = !DISubroutineType(types: !10228)
!10228 = !{!9676, !1808, !1575, !61, !61}
!10229 = !{!10230, !10231, !10232, !10233, !10234, !10235, !10236, !10237, !10238, !10239, !10240, !10241, !10242, !10243}
!10230 = !DILocalVariable(name: "sd_port", arg: 1, scope: !10226, file: !1372, line: 663, type: !1808)
!10231 = !DILocalVariable(name: "write_buffer", arg: 2, scope: !10226, file: !1372, line: 663, type: !1575)
!10232 = !DILocalVariable(name: "write_address", arg: 3, scope: !10226, file: !1372, line: 663, type: !61)
!10233 = !DILocalVariable(name: "block_number", arg: 4, scope: !10226, file: !1372, line: 663, type: !61)
!10234 = !DILocalVariable(name: "status", scope: !10226, file: !1372, line: 665, type: !1924)
!10235 = !DILocalVariable(name: "write_command", scope: !10226, file: !1372, line: 666, type: !61)
!10236 = !DILocalVariable(name: "index", scope: !10226, file: !1372, line: 667, type: !61)
!10237 = !DILocalVariable(name: "write_word_count", scope: !10226, file: !1372, line: 668, type: !1549)
!10238 = !DILocalVariable(name: "response", scope: !10226, file: !1372, line: 669, type: !61)
!10239 = !DILocalVariable(name: "block_multiplier", scope: !10226, file: !1372, line: 670, type: !61)
!10240 = !DILocalVariable(name: "msdc_register_base", scope: !10226, file: !1372, line: 671, type: !1516)
!10241 = !DILocalVariable(name: "irq_status", scope: !10226, file: !1372, line: 672, type: !61)
!10242 = !DILocalVariable(name: "data_status", scope: !10226, file: !1372, line: 673, type: !61)
!10243 = !DILabel(scope: !10226, name: "error", file: !1372, line: 818)
!10244 = !DILocation(line: 0, scope: !10226)
!10245 = !DILocation(line: 675, column: 38, scope: !10246)
!10246 = distinct !DILexicalBlock(scope: !10226, file: !1372, line: 675, column: 9)
!10247 = !DILocation(line: 675, column: 20, scope: !10246)
!10248 = !DILocation(line: 675, column: 9, scope: !10226)
!10249 = !DILocation(line: 676, column: 9, scope: !10250)
!10250 = distinct !DILexicalBlock(scope: !10246, file: !1372, line: 675, column: 54)
!10251 = !DILocation(line: 677, column: 9, scope: !10250)
!10252 = !DILocation(line: 680, column: 14, scope: !10253)
!10253 = distinct !DILexicalBlock(scope: !10226, file: !1372, line: 680, column: 9)
!10254 = !DILocation(line: 680, column: 9, scope: !10226)
!10255 = !DILocation(line: 681, column: 9, scope: !10256)
!10256 = distinct !DILexicalBlock(scope: !10253, file: !1372, line: 680, column: 31)
!10257 = !DILocation(line: 682, column: 9, scope: !10256)
!10258 = !DILocation(line: 685, column: 18, scope: !10226)
!10259 = !DILocation(line: 686, column: 24, scope: !10260)
!10260 = distinct !DILexicalBlock(scope: !10226, file: !1372, line: 686, column: 9)
!10261 = !DILocation(line: 686, column: 9, scope: !10226)
!10262 = !DILocation(line: 687, column: 9, scope: !10263)
!10263 = distinct !DILexicalBlock(scope: !10260, file: !1372, line: 686, column: 33)
!10264 = !DILocation(line: 688, column: 9, scope: !10263)
!10265 = !DILocation(line: 690, column: 32, scope: !10266)
!10266 = distinct !DILexicalBlock(scope: !10260, file: !1372, line: 689, column: 12)
!10267 = !DILocation(line: 692, column: 5, scope: !10226)
!10268 = !DILocation(line: 694, column: 41, scope: !10226)
!10269 = !DILocation(line: 696, column: 57, scope: !10226)
!10270 = !DILocation(line: 696, column: 66, scope: !10226)
!10271 = !DILocation(line: 696, column: 94, scope: !10226)
!10272 = !DILocation(line: 696, column: 34, scope: !10226)
!10273 = !DILocation(line: 699, column: 59, scope: !10226)
!10274 = !DILocation(line: 699, column: 70, scope: !10226)
!10275 = !DILocation(line: 699, column: 36, scope: !10226)
!10276 = !DILocation(line: 702, column: 5, scope: !10226)
!10277 = !DILocation(line: 704, column: 24, scope: !10278)
!10278 = distinct !DILexicalBlock(scope: !10226, file: !1372, line: 704, column: 9)
!10279 = !DILocation(line: 704, column: 9, scope: !10226)
!10280 = !DILocation(line: 705, column: 9, scope: !10281)
!10281 = distinct !DILexicalBlock(scope: !10278, file: !1372, line: 704, column: 45)
!10282 = !DILocation(line: 706, column: 9, scope: !10281)
!10283 = !DILocation(line: 711, column: 25, scope: !10284)
!10284 = distinct !DILexicalBlock(scope: !10226, file: !1372, line: 711, column: 9)
!10285 = !DILocation(line: 711, column: 65, scope: !10284)
!10286 = !DILocation(line: 722, column: 5, scope: !10226)
!10287 = !DILocation(line: 725, column: 35, scope: !10226)
!10288 = !DILocation(line: 725, column: 21, scope: !10226)
!10289 = !DILocation(line: 726, column: 69, scope: !10226)
!10290 = !DILocation(line: 726, column: 14, scope: !10226)
!10291 = !DILocation(line: 727, column: 16, scope: !10292)
!10292 = distinct !DILexicalBlock(scope: !10226, file: !1372, line: 727, column: 9)
!10293 = !DILocation(line: 727, column: 9, scope: !10226)
!10294 = !DILocation(line: 731, column: 14, scope: !10226)
!10295 = !DILocation(line: 732, column: 16, scope: !10296)
!10296 = distinct !DILexicalBlock(scope: !10226, file: !1372, line: 732, column: 9)
!10297 = !DILocation(line: 732, column: 9, scope: !10226)
!10298 = !DILocation(line: 736, column: 36, scope: !10226)
!10299 = !DILocation(line: 736, column: 59, scope: !10226)
!10300 = !DILocation(line: 738, column: 18, scope: !10226)
!10301 = !DILocation(line: 738, column: 5, scope: !10226)
!10302 = !DILocation(line: 740, column: 43, scope: !10303)
!10303 = distinct !DILexicalBlock(scope: !10226, file: !1372, line: 738, column: 38)
!10304 = !DILocation(line: 741, column: 25, scope: !10305)
!10305 = distinct !DILexicalBlock(scope: !10303, file: !1372, line: 741, column: 13)
!10306 = !DILocation(line: 741, column: 13, scope: !10303)
!10307 = !DILocation(line: 742, column: 13, scope: !10308)
!10308 = distinct !DILexicalBlock(scope: !10305, file: !1372, line: 741, column: 31)
!10309 = !DILocation(line: 743, column: 29, scope: !10310)
!10310 = distinct !DILexicalBlock(scope: !10308, file: !1372, line: 743, column: 17)
!10311 = !DILocation(line: 743, column: 17, scope: !10308)
!10312 = !DILocation(line: 746, column: 36, scope: !10313)
!10313 = distinct !DILexicalBlock(scope: !10310, file: !1372, line: 746, column: 24)
!10314 = !DILocation(line: 746, column: 24, scope: !10310)
!10315 = !DILocation(line: 752, column: 33, scope: !10316)
!10316 = distinct !DILexicalBlock(scope: !10303, file: !1372, line: 752, column: 13)
!10317 = !DILocation(line: 752, column: 42, scope: !10316)
!10318 = !DILocation(line: 752, column: 13, scope: !10303)
!10319 = !DILocation(line: 753, column: 59, scope: !10320)
!10320 = distinct !DILexicalBlock(scope: !10316, file: !1372, line: 752, column: 63)
!10321 = !DILocation(line: 753, column: 44, scope: !10320)
!10322 = !DILocation(line: 753, column: 42, scope: !10320)
!10323 = !DILocation(line: 754, column: 18, scope: !10320)
!10324 = !DILocation(line: 755, column: 9, scope: !10320)
!10325 = !DILocation(line: 738, column: 12, scope: !10226)
!10326 = distinct !{!10326, !10301, !10327}
!10327 = !DILocation(line: 757, column: 5, scope: !10226)
!10328 = !DILocation(line: 759, column: 11, scope: !10329)
!10329 = distinct !DILexicalBlock(scope: !10226, file: !1372, line: 759, column: 9)
!10330 = !DILocation(line: 759, column: 9, scope: !10226)
!10331 = !DILocation(line: 760, column: 18, scope: !10332)
!10332 = distinct !DILexicalBlock(scope: !10329, file: !1372, line: 759, column: 28)
!10333 = !DILocation(line: 761, column: 20, scope: !10334)
!10334 = distinct !DILexicalBlock(scope: !10332, file: !1372, line: 761, column: 13)
!10335 = !DILocation(line: 761, column: 13, scope: !10332)
!10336 = !DILocation(line: 766, column: 14, scope: !10226)
!10337 = !DILocation(line: 767, column: 16, scope: !10338)
!10338 = distinct !DILexicalBlock(scope: !10226, file: !1372, line: 767, column: 9)
!10339 = !DILocation(line: 767, column: 9, scope: !10226)
!10340 = !DILocation(line: 771, column: 9, scope: !10226)
!10341 = !DILocation(line: 773, column: 18, scope: !10342)
!10342 = distinct !DILexicalBlock(scope: !10343, file: !1372, line: 771, column: 27)
!10343 = distinct !DILexicalBlock(scope: !10226, file: !1372, line: 771, column: 9)
!10344 = !DILocation(line: 774, column: 20, scope: !10345)
!10345 = distinct !DILexicalBlock(scope: !10342, file: !1372, line: 774, column: 13)
!10346 = !DILocation(line: 774, column: 13, scope: !10342)
!10347 = !DILocation(line: 778, column: 18, scope: !10342)
!10348 = !DILocation(line: 779, column: 20, scope: !10349)
!10349 = distinct !DILexicalBlock(scope: !10342, file: !1372, line: 779, column: 13)
!10350 = !DILocation(line: 779, column: 13, scope: !10342)
!10351 = !DILocation(line: 783, column: 16, scope: !10343)
!10352 = !DILocation(line: 784, column: 18, scope: !10353)
!10353 = distinct !DILexicalBlock(scope: !10354, file: !1372, line: 783, column: 36)
!10354 = distinct !DILexicalBlock(scope: !10343, file: !1372, line: 783, column: 16)
!10355 = !DILocation(line: 785, column: 20, scope: !10356)
!10356 = distinct !DILexicalBlock(scope: !10353, file: !1372, line: 785, column: 13)
!10357 = !DILocation(line: 785, column: 13, scope: !10353)
!10358 = !DILocation(line: 790, column: 5, scope: !10226)
!10359 = !DILocation(line: 790, column: 12, scope: !10226)
!10360 = !DILocation(line: 792, column: 74, scope: !10361)
!10361 = distinct !DILexicalBlock(scope: !10226, file: !1372, line: 790, column: 56)
!10362 = !DILocation(line: 792, column: 78, scope: !10361)
!10363 = !DILocation(line: 792, column: 18, scope: !10361)
!10364 = !DILocation(line: 793, column: 22, scope: !10365)
!10365 = distinct !DILexicalBlock(scope: !10361, file: !1372, line: 793, column: 13)
!10366 = !DILocation(line: 793, column: 13, scope: !10361)
!10367 = !DILocation(line: 797, column: 40, scope: !10361)
!10368 = !DILocation(line: 800, column: 64, scope: !10369)
!10369 = distinct !DILexicalBlock(scope: !10361, file: !1372, line: 800, column: 13)
!10370 = distinct !{!10370, !10358, !10371}
!10371 = !DILocation(line: 804, column: 5, scope: !10226)
!10372 = !DILocation(line: 806, column: 25, scope: !10226)
!10373 = !DILocation(line: 807, column: 5, scope: !10226)
!10374 = !DILocation(line: 811, column: 5, scope: !10226)
!10375 = !DILocation(line: 814, column: 28, scope: !10226)
!10376 = !DILocation(line: 816, column: 5, scope: !10226)
!10377 = !DILocation(line: 818, column: 1, scope: !10226)
!10378 = !DILocation(line: 820, column: 33, scope: !10226)
!10379 = !DILocation(line: 821, column: 5, scope: !10226)
!10380 = !DILocation(line: 822, column: 5, scope: !10226)
!10381 = !DILocation(line: 823, column: 25, scope: !10226)
!10382 = !DILocation(line: 824, column: 9, scope: !10226)
!10383 = !DILocation(line: 825, column: 9, scope: !10384)
!10384 = distinct !DILexicalBlock(scope: !10385, file: !1372, line: 824, column: 27)
!10385 = distinct !DILexicalBlock(scope: !10226, file: !1372, line: 824, column: 9)
!10386 = !DILocation(line: 826, column: 5, scope: !10384)
!10387 = !DILocation(line: 830, column: 5, scope: !10226)
!10388 = !DILocation(line: 833, column: 28, scope: !10226)
!10389 = !DILocation(line: 835, column: 5, scope: !10226)
!10390 = !DILocation(line: 836, column: 1, scope: !10226)
!10391 = distinct !DISubprogram(name: "hal_sd_read_blocks_dma_blocking", scope: !1372, file: !1372, line: 839, type: !10084, scopeLine: 840, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1371, retainedNodes: !10392)
!10392 = !{!10393, !10394, !10395, !10396, !10397, !10398, !10399, !10400, !10401, !10402, !10403, !10404}
!10393 = !DILocalVariable(name: "sd_port", arg: 1, scope: !10391, file: !1372, line: 839, type: !1808)
!10394 = !DILocalVariable(name: "read_buffer", arg: 2, scope: !10391, file: !1372, line: 839, type: !1716)
!10395 = !DILocalVariable(name: "read_address", arg: 3, scope: !10391, file: !1372, line: 839, type: !61)
!10396 = !DILocalVariable(name: "block_number", arg: 4, scope: !10391, file: !1372, line: 839, type: !61)
!10397 = !DILocalVariable(name: "status", scope: !10391, file: !1372, line: 841, type: !1924)
!10398 = !DILocalVariable(name: "read_command", scope: !10391, file: !1372, line: 842, type: !61)
!10399 = !DILocalVariable(name: "response", scope: !10391, file: !1372, line: 843, type: !61)
!10400 = !DILocalVariable(name: "block_multiplier", scope: !10391, file: !1372, line: 844, type: !61)
!10401 = !DILocalVariable(name: "msdc_register_base", scope: !10391, file: !1372, line: 845, type: !1516)
!10402 = !DILocalVariable(name: "dma_channel", scope: !10391, file: !1372, line: 846, type: !1270)
!10403 = !DILocalVariable(name: "irq_status", scope: !10391, file: !1372, line: 847, type: !61)
!10404 = !DILabel(scope: !10391, name: "error", file: !1372, line: 963)
!10405 = !DILocation(line: 0, scope: !10391)
!10406 = !DILocation(line: 849, column: 38, scope: !10407)
!10407 = distinct !DILexicalBlock(scope: !10391, file: !1372, line: 849, column: 9)
!10408 = !DILocation(line: 849, column: 20, scope: !10407)
!10409 = !DILocation(line: 849, column: 9, scope: !10391)
!10410 = !DILocation(line: 850, column: 9, scope: !10411)
!10411 = distinct !DILexicalBlock(scope: !10407, file: !1372, line: 849, column: 54)
!10412 = !DILocation(line: 851, column: 9, scope: !10411)
!10413 = !DILocation(line: 854, column: 14, scope: !10414)
!10414 = distinct !DILexicalBlock(scope: !10391, file: !1372, line: 854, column: 9)
!10415 = !DILocation(line: 854, column: 9, scope: !10391)
!10416 = !DILocation(line: 855, column: 9, scope: !10417)
!10417 = distinct !DILexicalBlock(scope: !10414, file: !1372, line: 854, column: 30)
!10418 = !DILocation(line: 856, column: 9, scope: !10417)
!10419 = !DILocation(line: 859, column: 18, scope: !10391)
!10420 = !DILocation(line: 860, column: 24, scope: !10421)
!10421 = distinct !DILexicalBlock(scope: !10391, file: !1372, line: 860, column: 9)
!10422 = !DILocation(line: 860, column: 9, scope: !10391)
!10423 = !DILocation(line: 861, column: 9, scope: !10424)
!10424 = distinct !DILexicalBlock(scope: !10421, file: !1372, line: 860, column: 33)
!10425 = !DILocation(line: 862, column: 9, scope: !10424)
!10426 = !DILocation(line: 863, column: 9, scope: !10424)
!10427 = !DILocation(line: 865, column: 32, scope: !10428)
!10428 = distinct !DILexicalBlock(scope: !10421, file: !1372, line: 864, column: 12)
!10429 = !DILocation(line: 867, column: 5, scope: !10391)
!10430 = !DILocation(line: 869, column: 28, scope: !10391)
!10431 = !DILocation(line: 869, column: 19, scope: !10391)
!10432 = !DILocation(line: 872, column: 5, scope: !10391)
!10433 = !DILocation(line: 874, column: 5, scope: !10391)
!10434 = !DILocation(line: 876, column: 5, scope: !10391)
!10435 = !DILocation(line: 879, column: 25, scope: !10391)
!10436 = !DILocation(line: 883, column: 25, scope: !10437)
!10437 = distinct !DILexicalBlock(scope: !10391, file: !1372, line: 883, column: 9)
!10438 = !DILocation(line: 883, column: 65, scope: !10437)
!10439 = !DILocation(line: 894, column: 5, scope: !10391)
!10440 = !DILocation(line: 897, column: 43, scope: !10391)
!10441 = !DILocation(line: 897, column: 82, scope: !10391)
!10442 = !DILocation(line: 897, column: 5, scope: !10391)
!10443 = !DILocation(line: 899, column: 34, scope: !10391)
!10444 = !DILocation(line: 899, column: 20, scope: !10391)
!10445 = !DILocation(line: 900, column: 67, scope: !10391)
!10446 = !DILocation(line: 900, column: 14, scope: !10391)
!10447 = !DILocation(line: 901, column: 16, scope: !10448)
!10448 = distinct !DILexicalBlock(scope: !10391, file: !1372, line: 901, column: 9)
!10449 = !DILocation(line: 901, column: 9, scope: !10391)
!10450 = !DILocation(line: 905, column: 14, scope: !10391)
!10451 = !DILocation(line: 906, column: 16, scope: !10452)
!10452 = distinct !DILexicalBlock(scope: !10391, file: !1372, line: 906, column: 9)
!10453 = !DILocation(line: 906, column: 9, scope: !10391)
!10454 = !DILocation(line: 910, column: 5, scope: !10391)
!10455 = !DILocation(line: 912, column: 14, scope: !10391)
!10456 = !DILocation(line: 913, column: 16, scope: !10457)
!10457 = distinct !DILexicalBlock(scope: !10391, file: !1372, line: 913, column: 9)
!10458 = !DILocation(line: 913, column: 9, scope: !10391)
!10459 = !DILocation(line: 917, column: 5, scope: !10391)
!10460 = !DILocation(line: 919, column: 25, scope: !10391)
!10461 = !DILocation(line: 921, column: 5, scope: !10391)
!10462 = !DILocation(line: 923, column: 11, scope: !10463)
!10463 = distinct !DILexicalBlock(scope: !10391, file: !1372, line: 923, column: 9)
!10464 = !DILocation(line: 923, column: 9, scope: !10391)
!10465 = !DILocation(line: 924, column: 18, scope: !10466)
!10466 = distinct !DILexicalBlock(scope: !10463, file: !1372, line: 923, column: 28)
!10467 = !DILocation(line: 925, column: 20, scope: !10468)
!10468 = distinct !DILexicalBlock(scope: !10466, file: !1372, line: 925, column: 13)
!10469 = !DILocation(line: 925, column: 13, scope: !10466)
!10470 = !DILocation(line: 929, column: 18, scope: !10471)
!10471 = distinct !DILexicalBlock(scope: !10463, file: !1372, line: 928, column: 12)
!10472 = !DILocation(line: 930, column: 20, scope: !10473)
!10473 = distinct !DILexicalBlock(scope: !10471, file: !1372, line: 930, column: 13)
!10474 = !DILocation(line: 930, column: 13, scope: !10471)
!10475 = !DILocation(line: 935, column: 5, scope: !10391)
!10476 = !DILocation(line: 935, column: 12, scope: !10391)
!10477 = !DILocation(line: 937, column: 74, scope: !10478)
!10478 = distinct !DILexicalBlock(scope: !10391, file: !1372, line: 935, column: 56)
!10479 = !DILocation(line: 937, column: 78, scope: !10478)
!10480 = !DILocation(line: 937, column: 18, scope: !10478)
!10481 = !DILocation(line: 938, column: 22, scope: !10482)
!10482 = distinct !DILexicalBlock(scope: !10478, file: !1372, line: 938, column: 13)
!10483 = !DILocation(line: 938, column: 13, scope: !10478)
!10484 = !DILocation(line: 942, column: 40, scope: !10478)
!10485 = !DILocation(line: 944, column: 64, scope: !10486)
!10486 = distinct !DILexicalBlock(scope: !10478, file: !1372, line: 944, column: 13)
!10487 = distinct !{!10487, !10475, !10488}
!10488 = !DILocation(line: 948, column: 5, scope: !10391)
!10489 = !DILocation(line: 950, column: 5, scope: !10391)
!10490 = !DILocation(line: 951, column: 5, scope: !10391)
!10491 = !DILocation(line: 952, column: 5, scope: !10391)
!10492 = !DILocation(line: 956, column: 5, scope: !10391)
!10493 = !DILocation(line: 959, column: 28, scope: !10391)
!10494 = !DILocation(line: 961, column: 5, scope: !10391)
!10495 = !DILocation(line: 963, column: 1, scope: !10391)
!10496 = !DILocation(line: 965, column: 33, scope: !10391)
!10497 = !DILocation(line: 966, column: 5, scope: !10391)
!10498 = !DILocation(line: 967, column: 5, scope: !10391)
!10499 = !DILocation(line: 968, column: 25, scope: !10391)
!10500 = !DILocation(line: 970, column: 9, scope: !10391)
!10501 = !DILocation(line: 971, column: 9, scope: !10502)
!10502 = distinct !DILexicalBlock(scope: !10503, file: !1372, line: 970, column: 27)
!10503 = distinct !DILexicalBlock(scope: !10391, file: !1372, line: 970, column: 9)
!10504 = !DILocation(line: 972, column: 5, scope: !10502)
!10505 = !DILocation(line: 974, column: 5, scope: !10391)
!10506 = !DILocation(line: 975, column: 5, scope: !10391)
!10507 = !DILocation(line: 979, column: 5, scope: !10391)
!10508 = !DILocation(line: 982, column: 28, scope: !10391)
!10509 = !DILocation(line: 984, column: 5, scope: !10391)
!10510 = !DILocation(line: 986, column: 5, scope: !10391)
!10511 = !DILocation(line: 987, column: 1, scope: !10391)
!10512 = distinct !DISubprogram(name: "hal_sd_write_blocks_dma_blocking", scope: !1372, file: !1372, line: 990, type: !10227, scopeLine: 991, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1371, retainedNodes: !10513)
!10513 = !{!10514, !10515, !10516, !10517, !10518, !10519, !10520, !10521, !10522, !10523, !10524, !10525}
!10514 = !DILocalVariable(name: "sd_port", arg: 1, scope: !10512, file: !1372, line: 990, type: !1808)
!10515 = !DILocalVariable(name: "write_buffer", arg: 2, scope: !10512, file: !1372, line: 990, type: !1575)
!10516 = !DILocalVariable(name: "write_address", arg: 3, scope: !10512, file: !1372, line: 990, type: !61)
!10517 = !DILocalVariable(name: "block_number", arg: 4, scope: !10512, file: !1372, line: 990, type: !61)
!10518 = !DILocalVariable(name: "status", scope: !10512, file: !1372, line: 992, type: !1924)
!10519 = !DILocalVariable(name: "write_command", scope: !10512, file: !1372, line: 993, type: !61)
!10520 = !DILocalVariable(name: "response", scope: !10512, file: !1372, line: 994, type: !61)
!10521 = !DILocalVariable(name: "block_multiplier", scope: !10512, file: !1372, line: 995, type: !61)
!10522 = !DILocalVariable(name: "msdc_register_base", scope: !10512, file: !1372, line: 996, type: !1516)
!10523 = !DILocalVariable(name: "dma_channel", scope: !10512, file: !1372, line: 997, type: !1270)
!10524 = !DILocalVariable(name: "irq_status", scope: !10512, file: !1372, line: 998, type: !61)
!10525 = !DILabel(scope: !10512, name: "error", file: !1372, line: 1127)
!10526 = !DILocation(line: 0, scope: !10512)
!10527 = !DILocation(line: 1000, column: 38, scope: !10528)
!10528 = distinct !DILexicalBlock(scope: !10512, file: !1372, line: 1000, column: 9)
!10529 = !DILocation(line: 1000, column: 20, scope: !10528)
!10530 = !DILocation(line: 1000, column: 9, scope: !10512)
!10531 = !DILocation(line: 1001, column: 9, scope: !10532)
!10532 = distinct !DILexicalBlock(scope: !10528, file: !1372, line: 1000, column: 54)
!10533 = !DILocation(line: 1002, column: 9, scope: !10532)
!10534 = !DILocation(line: 1005, column: 14, scope: !10535)
!10535 = distinct !DILexicalBlock(scope: !10512, file: !1372, line: 1005, column: 9)
!10536 = !DILocation(line: 1005, column: 9, scope: !10512)
!10537 = !DILocation(line: 1006, column: 9, scope: !10538)
!10538 = distinct !DILexicalBlock(scope: !10535, file: !1372, line: 1005, column: 31)
!10539 = !DILocation(line: 1007, column: 9, scope: !10538)
!10540 = !DILocation(line: 1010, column: 18, scope: !10512)
!10541 = !DILocation(line: 1011, column: 24, scope: !10542)
!10542 = distinct !DILexicalBlock(scope: !10512, file: !1372, line: 1011, column: 9)
!10543 = !DILocation(line: 1011, column: 9, scope: !10512)
!10544 = !DILocation(line: 1012, column: 9, scope: !10545)
!10545 = distinct !DILexicalBlock(scope: !10542, file: !1372, line: 1011, column: 33)
!10546 = !DILocation(line: 1013, column: 9, scope: !10545)
!10547 = !DILocation(line: 1015, column: 32, scope: !10548)
!10548 = distinct !DILexicalBlock(scope: !10542, file: !1372, line: 1014, column: 12)
!10549 = !DILocation(line: 1017, column: 5, scope: !10512)
!10550 = !DILocation(line: 1019, column: 28, scope: !10512)
!10551 = !DILocation(line: 1019, column: 19, scope: !10512)
!10552 = !DILocation(line: 1022, column: 5, scope: !10512)
!10553 = !DILocation(line: 1024, column: 5, scope: !10512)
!10554 = !DILocation(line: 1026, column: 5, scope: !10512)
!10555 = !DILocation(line: 1028, column: 24, scope: !10556)
!10556 = distinct !DILexicalBlock(scope: !10512, file: !1372, line: 1028, column: 9)
!10557 = !DILocation(line: 1028, column: 9, scope: !10512)
!10558 = !DILocation(line: 1029, column: 9, scope: !10559)
!10559 = distinct !DILexicalBlock(scope: !10556, file: !1372, line: 1028, column: 45)
!10560 = !DILocation(line: 1030, column: 9, scope: !10559)
!10561 = !DILocation(line: 1035, column: 25, scope: !10562)
!10562 = distinct !DILexicalBlock(scope: !10512, file: !1372, line: 1035, column: 9)
!10563 = !DILocation(line: 1035, column: 65, scope: !10562)
!10564 = !DILocation(line: 1046, column: 5, scope: !10512)
!10565 = !DILocation(line: 1049, column: 43, scope: !10512)
!10566 = !DILocation(line: 1049, column: 83, scope: !10512)
!10567 = !DILocation(line: 1049, column: 5, scope: !10512)
!10568 = !DILocation(line: 1051, column: 35, scope: !10512)
!10569 = !DILocation(line: 1051, column: 21, scope: !10512)
!10570 = !DILocation(line: 1052, column: 69, scope: !10512)
!10571 = !DILocation(line: 1052, column: 14, scope: !10512)
!10572 = !DILocation(line: 1053, column: 16, scope: !10573)
!10573 = distinct !DILexicalBlock(scope: !10512, file: !1372, line: 1053, column: 9)
!10574 = !DILocation(line: 1053, column: 9, scope: !10512)
!10575 = !DILocation(line: 1057, column: 14, scope: !10512)
!10576 = !DILocation(line: 1058, column: 16, scope: !10577)
!10577 = distinct !DILexicalBlock(scope: !10512, file: !1372, line: 1058, column: 9)
!10578 = !DILocation(line: 1058, column: 9, scope: !10512)
!10579 = !DILocation(line: 1062, column: 5, scope: !10512)
!10580 = !DILocation(line: 1064, column: 11, scope: !10581)
!10581 = distinct !DILexicalBlock(scope: !10512, file: !1372, line: 1064, column: 9)
!10582 = !DILocation(line: 1064, column: 9, scope: !10512)
!10583 = !DILocation(line: 1065, column: 18, scope: !10584)
!10584 = distinct !DILexicalBlock(scope: !10581, file: !1372, line: 1064, column: 28)
!10585 = !DILocation(line: 1066, column: 20, scope: !10586)
!10586 = distinct !DILexicalBlock(scope: !10584, file: !1372, line: 1066, column: 13)
!10587 = !DILocation(line: 1066, column: 13, scope: !10584)
!10588 = !DILocation(line: 1071, column: 14, scope: !10512)
!10589 = !DILocation(line: 1072, column: 16, scope: !10590)
!10590 = distinct !DILexicalBlock(scope: !10512, file: !1372, line: 1072, column: 9)
!10591 = !DILocation(line: 1072, column: 9, scope: !10512)
!10592 = !DILocation(line: 1076, column: 5, scope: !10512)
!10593 = !DILocation(line: 1078, column: 9, scope: !10512)
!10594 = !DILocation(line: 1080, column: 18, scope: !10595)
!10595 = distinct !DILexicalBlock(scope: !10596, file: !1372, line: 1078, column: 27)
!10596 = distinct !DILexicalBlock(scope: !10512, file: !1372, line: 1078, column: 9)
!10597 = !DILocation(line: 1081, column: 20, scope: !10598)
!10598 = distinct !DILexicalBlock(scope: !10595, file: !1372, line: 1081, column: 13)
!10599 = !DILocation(line: 1081, column: 13, scope: !10595)
!10600 = !DILocation(line: 1085, column: 18, scope: !10595)
!10601 = !DILocation(line: 1086, column: 20, scope: !10602)
!10602 = distinct !DILexicalBlock(scope: !10595, file: !1372, line: 1086, column: 13)
!10603 = !DILocation(line: 1086, column: 13, scope: !10595)
!10604 = !DILocation(line: 1090, column: 16, scope: !10596)
!10605 = !DILocation(line: 1091, column: 18, scope: !10606)
!10606 = distinct !DILexicalBlock(scope: !10607, file: !1372, line: 1090, column: 36)
!10607 = distinct !DILexicalBlock(scope: !10596, file: !1372, line: 1090, column: 16)
!10608 = !DILocation(line: 1092, column: 20, scope: !10609)
!10609 = distinct !DILexicalBlock(scope: !10606, file: !1372, line: 1092, column: 13)
!10610 = !DILocation(line: 1092, column: 13, scope: !10606)
!10611 = !DILocation(line: 1097, column: 5, scope: !10512)
!10612 = !DILocation(line: 1097, column: 12, scope: !10512)
!10613 = !DILocation(line: 1099, column: 74, scope: !10614)
!10614 = distinct !DILexicalBlock(scope: !10512, file: !1372, line: 1097, column: 56)
!10615 = !DILocation(line: 1099, column: 78, scope: !10614)
!10616 = !DILocation(line: 1099, column: 18, scope: !10614)
!10617 = !DILocation(line: 1100, column: 22, scope: !10618)
!10618 = distinct !DILexicalBlock(scope: !10614, file: !1372, line: 1100, column: 13)
!10619 = !DILocation(line: 1100, column: 13, scope: !10614)
!10620 = !DILocation(line: 1104, column: 40, scope: !10614)
!10621 = !DILocation(line: 1107, column: 23, scope: !10622)
!10622 = distinct !DILexicalBlock(scope: !10614, file: !1372, line: 1107, column: 13)
!10623 = !DILocation(line: 1107, column: 13, scope: !10614)
!10624 = distinct !{!10624, !10611, !10625}
!10625 = !DILocation(line: 1110, column: 5, scope: !10512)
!10626 = !DILocation(line: 1112, column: 25, scope: !10512)
!10627 = !DILocation(line: 1113, column: 5, scope: !10512)
!10628 = !DILocation(line: 1114, column: 5, scope: !10512)
!10629 = !DILocation(line: 1115, column: 5, scope: !10512)
!10630 = !DILocation(line: 1116, column: 5, scope: !10512)
!10631 = !DILocation(line: 1118, column: 28, scope: !10512)
!10632 = !DILocation(line: 1122, column: 5, scope: !10512)
!10633 = !DILocation(line: 1125, column: 5, scope: !10512)
!10634 = !DILocation(line: 1127, column: 1, scope: !10512)
!10635 = !DILocation(line: 1129, column: 33, scope: !10512)
!10636 = !DILocation(line: 1130, column: 5, scope: !10512)
!10637 = !DILocation(line: 1131, column: 5, scope: !10512)
!10638 = !DILocation(line: 1132, column: 25, scope: !10512)
!10639 = !DILocation(line: 1133, column: 9, scope: !10512)
!10640 = !DILocation(line: 1134, column: 9, scope: !10641)
!10641 = distinct !DILexicalBlock(scope: !10642, file: !1372, line: 1133, column: 27)
!10642 = distinct !DILexicalBlock(scope: !10512, file: !1372, line: 1133, column: 9)
!10643 = !DILocation(line: 1135, column: 5, scope: !10641)
!10644 = !DILocation(line: 1137, column: 5, scope: !10512)
!10645 = !DILocation(line: 1138, column: 5, scope: !10512)
!10646 = !DILocation(line: 1142, column: 5, scope: !10512)
!10647 = !DILocation(line: 1145, column: 28, scope: !10512)
!10648 = !DILocation(line: 1147, column: 5, scope: !10512)
!10649 = !DILocation(line: 1149, column: 5, scope: !10512)
!10650 = !DILocation(line: 1150, column: 1, scope: !10512)
!10651 = distinct !DISubprogram(name: "hal_sd_read_blocks_dma", scope: !1372, file: !1372, line: 1152, type: !10084, scopeLine: 1153, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1371, retainedNodes: !10652)
!10652 = !{!10653, !10654, !10655, !10656, !10657, !10658, !10659, !10660, !10661, !10662, !10663, !10671}
!10653 = !DILocalVariable(name: "sd_port", arg: 1, scope: !10651, file: !1372, line: 1152, type: !1808)
!10654 = !DILocalVariable(name: "read_buffer", arg: 2, scope: !10651, file: !1372, line: 1152, type: !1716)
!10655 = !DILocalVariable(name: "read_address", arg: 3, scope: !10651, file: !1372, line: 1152, type: !61)
!10656 = !DILocalVariable(name: "block_number", arg: 4, scope: !10651, file: !1372, line: 1152, type: !61)
!10657 = !DILocalVariable(name: "status", scope: !10651, file: !1372, line: 1154, type: !1924)
!10658 = !DILocalVariable(name: "read_command", scope: !10651, file: !1372, line: 1155, type: !61)
!10659 = !DILocalVariable(name: "block_multiplier", scope: !10651, file: !1372, line: 1156, type: !61)
!10660 = !DILocalVariable(name: "msdc_register_base", scope: !10651, file: !1372, line: 1157, type: !1516)
!10661 = !DILocalVariable(name: "dma_channel", scope: !10651, file: !1372, line: 1158, type: !1270)
!10662 = !DILocalVariable(name: "irq_status", scope: !10651, file: !1372, line: 1159, type: !61)
!10663 = !DILocalVariable(name: "context", scope: !10651, file: !1372, line: 1160, type: !10664)
!10664 = !DIDerivedType(tag: DW_TAG_typedef, name: "sd_dma_interrupt_context_t", file: !1481, line: 241, baseType: !10665)
!10665 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1481, line: 234, size: 288, elements: !10666)
!10666 = !{!10667, !10668, !10669, !10670}
!10667 = !DIDerivedType(tag: DW_TAG_member, name: "sd_current_write_read_block_num", scope: !10665, file: !1481, line: 235, baseType: !61, size: 32)
!10668 = !DIDerivedType(tag: DW_TAG_member, name: "sd_cmd", scope: !10665, file: !1481, line: 236, baseType: !1212, size: 16, offset: 32)
!10669 = !DIDerivedType(tag: DW_TAG_member, name: "sd_port", scope: !10665, file: !1481, line: 237, baseType: !1808, size: 32, offset: 64)
!10670 = !DIDerivedType(tag: DW_TAG_member, name: "sd_dvfs_lock", scope: !10665, file: !1481, line: 239, baseType: !1553, size: 192, offset: 96)
!10671 = !DILabel(scope: !10651, name: "error", file: !1372, line: 1241)
!10672 = !DILocation(line: 0, scope: !10651)
!10673 = !DILocation(line: 1160, column: 5, scope: !10651)
!10674 = !DILocation(line: 1160, column: 32, scope: !10651)
!10675 = !DILocation(line: 1162, column: 32, scope: !10676)
!10676 = distinct !DILexicalBlock(scope: !10651, file: !1372, line: 1162, column: 9)
!10677 = !DILocation(line: 1162, column: 10, scope: !10676)
!10678 = !DILocation(line: 1162, column: 9, scope: !10651)
!10679 = !DILocation(line: 1163, column: 9, scope: !10680)
!10680 = distinct !DILexicalBlock(scope: !10676, file: !1372, line: 1162, column: 65)
!10681 = !DILocation(line: 1164, column: 9, scope: !10680)
!10682 = !DILocation(line: 1167, column: 38, scope: !10683)
!10683 = distinct !DILexicalBlock(scope: !10651, file: !1372, line: 1167, column: 9)
!10684 = !DILocation(line: 1167, column: 20, scope: !10683)
!10685 = !DILocation(line: 1167, column: 9, scope: !10651)
!10686 = !DILocation(line: 1168, column: 9, scope: !10687)
!10687 = distinct !DILexicalBlock(scope: !10683, file: !1372, line: 1167, column: 54)
!10688 = !DILocation(line: 1169, column: 9, scope: !10687)
!10689 = !DILocation(line: 1172, column: 14, scope: !10690)
!10690 = distinct !DILexicalBlock(scope: !10651, file: !1372, line: 1172, column: 9)
!10691 = !DILocation(line: 1172, column: 9, scope: !10651)
!10692 = !DILocation(line: 1173, column: 9, scope: !10693)
!10693 = distinct !DILexicalBlock(scope: !10690, file: !1372, line: 1172, column: 30)
!10694 = !DILocation(line: 1174, column: 9, scope: !10693)
!10695 = !DILocation(line: 1177, column: 18, scope: !10651)
!10696 = !DILocation(line: 1178, column: 24, scope: !10697)
!10697 = distinct !DILexicalBlock(scope: !10651, file: !1372, line: 1178, column: 9)
!10698 = !DILocation(line: 1178, column: 9, scope: !10651)
!10699 = !DILocation(line: 1179, column: 9, scope: !10700)
!10700 = distinct !DILexicalBlock(scope: !10697, file: !1372, line: 1178, column: 33)
!10701 = !DILocation(line: 1180, column: 9, scope: !10700)
!10702 = !DILocation(line: 1181, column: 9, scope: !10700)
!10703 = !DILocation(line: 1183, column: 32, scope: !10704)
!10704 = distinct !DILexicalBlock(scope: !10697, file: !1372, line: 1182, column: 12)
!10705 = !DILocation(line: 1185, column: 5, scope: !10651)
!10706 = !DILocation(line: 1187, column: 28, scope: !10651)
!10707 = !DILocation(line: 1187, column: 19, scope: !10651)
!10708 = !DILocation(line: 1190, column: 5, scope: !10651)
!10709 = !DILocation(line: 1192, column: 5, scope: !10651)
!10710 = !DILocation(line: 1195, column: 25, scope: !10651)
!10711 = !DILocation(line: 1199, column: 25, scope: !10712)
!10712 = distinct !DILexicalBlock(scope: !10651, file: !1372, line: 1199, column: 9)
!10713 = !DILocation(line: 1199, column: 65, scope: !10712)
!10714 = !DILocation(line: 1210, column: 5, scope: !10651)
!10715 = !DILocation(line: 1213, column: 43, scope: !10651)
!10716 = !DILocation(line: 1213, column: 82, scope: !10651)
!10717 = !DILocation(line: 1213, column: 5, scope: !10651)
!10718 = !DILocation(line: 1214, column: 5, scope: !10651)
!10719 = !DILocation(line: 1215, column: 34, scope: !10651)
!10720 = !DILocation(line: 1215, column: 20, scope: !10651)
!10721 = !DILocation(line: 1218, column: 13, scope: !10651)
!10722 = !DILocation(line: 1218, column: 45, scope: !10651)
!10723 = !DILocation(line: 1219, column: 22, scope: !10651)
!10724 = !DILocation(line: 1219, column: 13, scope: !10651)
!10725 = !DILocation(line: 1219, column: 20, scope: !10651)
!10726 = !DILocation(line: 1220, column: 13, scope: !10651)
!10727 = !DILocation(line: 1220, column: 21, scope: !10651)
!10728 = !DILocation(line: 1222, column: 17, scope: !10651)
!10729 = !DILocation(line: 1222, column: 32, scope: !10651)
!10730 = !DILocation(line: 1224, column: 5, scope: !10651)
!10731 = !DILocation(line: 1226, column: 67, scope: !10651)
!10732 = !DILocation(line: 1226, column: 14, scope: !10651)
!10733 = !DILocation(line: 1227, column: 16, scope: !10734)
!10734 = distinct !DILexicalBlock(scope: !10651, file: !1372, line: 1227, column: 9)
!10735 = !DILocation(line: 1227, column: 9, scope: !10651)
!10736 = !DILocation(line: 1231, column: 14, scope: !10651)
!10737 = !DILocation(line: 1232, column: 16, scope: !10738)
!10738 = distinct !DILexicalBlock(scope: !10651, file: !1372, line: 1232, column: 9)
!10739 = !DILocation(line: 1232, column: 9, scope: !10651)
!10740 = !DILocation(line: 1236, column: 5, scope: !10651)
!10741 = !DILocation(line: 1237, column: 5, scope: !10651)
!10742 = !DILocation(line: 1239, column: 5, scope: !10651)
!10743 = !DILocation(line: 1241, column: 1, scope: !10651)
!10744 = !DILocation(line: 1243, column: 33, scope: !10651)
!10745 = !DILocation(line: 1244, column: 5, scope: !10651)
!10746 = !DILocation(line: 1245, column: 5, scope: !10651)
!10747 = !DILocation(line: 1246, column: 25, scope: !10651)
!10748 = !DILocation(line: 1248, column: 9, scope: !10651)
!10749 = !DILocation(line: 1249, column: 9, scope: !10750)
!10750 = distinct !DILexicalBlock(scope: !10751, file: !1372, line: 1248, column: 27)
!10751 = distinct !DILexicalBlock(scope: !10651, file: !1372, line: 1248, column: 9)
!10752 = !DILocation(line: 1250, column: 5, scope: !10750)
!10753 = !DILocation(line: 1252, column: 5, scope: !10651)
!10754 = !DILocation(line: 1253, column: 5, scope: !10651)
!10755 = !DILocation(line: 1257, column: 5, scope: !10651)
!10756 = !DILocation(line: 1260, column: 28, scope: !10651)
!10757 = !DILocation(line: 1262, column: 5, scope: !10651)
!10758 = !DILocation(line: 1264, column: 5, scope: !10651)
!10759 = !DILocation(line: 1265, column: 1, scope: !10651)
!10760 = distinct !DISubprogram(name: "hal_sd_write_blocks_dma", scope: !1372, file: !1372, line: 1267, type: !10227, scopeLine: 1268, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1371, retainedNodes: !10761)
!10761 = !{!10762, !10763, !10764, !10765, !10766, !10767, !10768, !10769, !10770, !10771, !10772, !10773}
!10762 = !DILocalVariable(name: "sd_port", arg: 1, scope: !10760, file: !1372, line: 1267, type: !1808)
!10763 = !DILocalVariable(name: "write_buffer", arg: 2, scope: !10760, file: !1372, line: 1267, type: !1575)
!10764 = !DILocalVariable(name: "write_address", arg: 3, scope: !10760, file: !1372, line: 1267, type: !61)
!10765 = !DILocalVariable(name: "block_number", arg: 4, scope: !10760, file: !1372, line: 1267, type: !61)
!10766 = !DILocalVariable(name: "status", scope: !10760, file: !1372, line: 1269, type: !1924)
!10767 = !DILocalVariable(name: "write_command", scope: !10760, file: !1372, line: 1270, type: !61)
!10768 = !DILocalVariable(name: "block_multiplier", scope: !10760, file: !1372, line: 1271, type: !61)
!10769 = !DILocalVariable(name: "msdc_register_base", scope: !10760, file: !1372, line: 1272, type: !1516)
!10770 = !DILocalVariable(name: "dma_channel", scope: !10760, file: !1372, line: 1273, type: !1270)
!10771 = !DILocalVariable(name: "irq_status", scope: !10760, file: !1372, line: 1274, type: !61)
!10772 = !DILocalVariable(name: "context", scope: !10760, file: !1372, line: 1275, type: !10664)
!10773 = !DILabel(scope: !10760, name: "error", file: !1372, line: 1358)
!10774 = !DILocation(line: 0, scope: !10760)
!10775 = !DILocation(line: 1275, column: 5, scope: !10760)
!10776 = !DILocation(line: 1275, column: 32, scope: !10760)
!10777 = !DILocation(line: 1277, column: 32, scope: !10778)
!10778 = distinct !DILexicalBlock(scope: !10760, file: !1372, line: 1277, column: 9)
!10779 = !DILocation(line: 1277, column: 10, scope: !10778)
!10780 = !DILocation(line: 1277, column: 9, scope: !10760)
!10781 = !DILocation(line: 1278, column: 9, scope: !10782)
!10782 = distinct !DILexicalBlock(scope: !10778, file: !1372, line: 1277, column: 65)
!10783 = !DILocation(line: 1279, column: 9, scope: !10782)
!10784 = !DILocation(line: 1282, column: 38, scope: !10785)
!10785 = distinct !DILexicalBlock(scope: !10760, file: !1372, line: 1282, column: 9)
!10786 = !DILocation(line: 1282, column: 20, scope: !10785)
!10787 = !DILocation(line: 1282, column: 9, scope: !10760)
!10788 = !DILocation(line: 1283, column: 9, scope: !10789)
!10789 = distinct !DILexicalBlock(scope: !10785, file: !1372, line: 1282, column: 54)
!10790 = !DILocation(line: 1284, column: 9, scope: !10789)
!10791 = !DILocation(line: 1287, column: 14, scope: !10792)
!10792 = distinct !DILexicalBlock(scope: !10760, file: !1372, line: 1287, column: 9)
!10793 = !DILocation(line: 1287, column: 9, scope: !10760)
!10794 = !DILocation(line: 1288, column: 9, scope: !10795)
!10795 = distinct !DILexicalBlock(scope: !10792, file: !1372, line: 1287, column: 31)
!10796 = !DILocation(line: 1289, column: 9, scope: !10795)
!10797 = !DILocation(line: 1292, column: 18, scope: !10760)
!10798 = !DILocation(line: 1293, column: 24, scope: !10799)
!10799 = distinct !DILexicalBlock(scope: !10760, file: !1372, line: 1293, column: 9)
!10800 = !DILocation(line: 1293, column: 9, scope: !10760)
!10801 = !DILocation(line: 1294, column: 9, scope: !10802)
!10802 = distinct !DILexicalBlock(scope: !10799, file: !1372, line: 1293, column: 33)
!10803 = !DILocation(line: 1295, column: 9, scope: !10802)
!10804 = !DILocation(line: 1297, column: 32, scope: !10805)
!10805 = distinct !DILexicalBlock(scope: !10799, file: !1372, line: 1296, column: 12)
!10806 = !DILocation(line: 1299, column: 5, scope: !10760)
!10807 = !DILocation(line: 1301, column: 28, scope: !10760)
!10808 = !DILocation(line: 1301, column: 19, scope: !10760)
!10809 = !DILocation(line: 1304, column: 5, scope: !10760)
!10810 = !DILocation(line: 1306, column: 5, scope: !10760)
!10811 = !DILocation(line: 1308, column: 24, scope: !10812)
!10812 = distinct !DILexicalBlock(scope: !10760, file: !1372, line: 1308, column: 9)
!10813 = !DILocation(line: 1308, column: 9, scope: !10760)
!10814 = !DILocation(line: 1309, column: 9, scope: !10815)
!10815 = distinct !DILexicalBlock(scope: !10812, file: !1372, line: 1308, column: 45)
!10816 = !DILocation(line: 1310, column: 9, scope: !10815)
!10817 = !DILocation(line: 1315, column: 25, scope: !10818)
!10818 = distinct !DILexicalBlock(scope: !10760, file: !1372, line: 1315, column: 9)
!10819 = !DILocation(line: 1315, column: 65, scope: !10818)
!10820 = !DILocation(line: 1326, column: 5, scope: !10760)
!10821 = !DILocation(line: 1329, column: 43, scope: !10760)
!10822 = !DILocation(line: 1329, column: 83, scope: !10760)
!10823 = !DILocation(line: 1329, column: 5, scope: !10760)
!10824 = !DILocation(line: 1330, column: 5, scope: !10760)
!10825 = !DILocation(line: 1331, column: 35, scope: !10760)
!10826 = !DILocation(line: 1331, column: 21, scope: !10760)
!10827 = !DILocation(line: 1334, column: 13, scope: !10760)
!10828 = !DILocation(line: 1334, column: 45, scope: !10760)
!10829 = !DILocation(line: 1335, column: 22, scope: !10760)
!10830 = !DILocation(line: 1335, column: 13, scope: !10760)
!10831 = !DILocation(line: 1335, column: 20, scope: !10760)
!10832 = !DILocation(line: 1336, column: 13, scope: !10760)
!10833 = !DILocation(line: 1336, column: 21, scope: !10760)
!10834 = !DILocation(line: 1338, column: 17, scope: !10760)
!10835 = !DILocation(line: 1338, column: 32, scope: !10760)
!10836 = !DILocation(line: 1340, column: 5, scope: !10760)
!10837 = !DILocation(line: 1342, column: 69, scope: !10760)
!10838 = !DILocation(line: 1342, column: 14, scope: !10760)
!10839 = !DILocation(line: 1343, column: 16, scope: !10840)
!10840 = distinct !DILexicalBlock(scope: !10760, file: !1372, line: 1343, column: 9)
!10841 = !DILocation(line: 1343, column: 9, scope: !10760)
!10842 = !DILocation(line: 1347, column: 14, scope: !10760)
!10843 = !DILocation(line: 1348, column: 16, scope: !10844)
!10844 = distinct !DILexicalBlock(scope: !10760, file: !1372, line: 1348, column: 9)
!10845 = !DILocation(line: 1348, column: 9, scope: !10760)
!10846 = !DILocation(line: 1352, column: 5, scope: !10760)
!10847 = !DILocation(line: 1354, column: 5, scope: !10760)
!10848 = !DILocation(line: 1356, column: 5, scope: !10760)
!10849 = !DILocation(line: 1358, column: 1, scope: !10760)
!10850 = !DILocation(line: 1359, column: 33, scope: !10760)
!10851 = !DILocation(line: 1360, column: 5, scope: !10760)
!10852 = !DILocation(line: 1361, column: 5, scope: !10760)
!10853 = !DILocation(line: 1362, column: 25, scope: !10760)
!10854 = !DILocation(line: 1363, column: 9, scope: !10760)
!10855 = !DILocation(line: 1364, column: 9, scope: !10856)
!10856 = distinct !DILexicalBlock(scope: !10857, file: !1372, line: 1363, column: 27)
!10857 = distinct !DILexicalBlock(scope: !10760, file: !1372, line: 1363, column: 9)
!10858 = !DILocation(line: 1365, column: 5, scope: !10856)
!10859 = !DILocation(line: 1367, column: 5, scope: !10760)
!10860 = !DILocation(line: 1368, column: 5, scope: !10760)
!10861 = !DILocation(line: 1372, column: 5, scope: !10760)
!10862 = !DILocation(line: 1375, column: 28, scope: !10760)
!10863 = !DILocation(line: 1377, column: 5, scope: !10760)
!10864 = !DILocation(line: 1379, column: 5, scope: !10760)
!10865 = !DILocation(line: 1380, column: 1, scope: !10760)
!10866 = distinct !DISubprogram(name: "hal_sd_set_clock", scope: !1372, file: !1372, line: 1382, type: !10867, scopeLine: 1383, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1371, retainedNodes: !10869)
!10867 = !DISubroutineType(types: !10868)
!10868 = !{!9676, !1808, !61}
!10869 = !{!10870, !10871, !10872}
!10870 = !DILocalVariable(name: "sd_port", arg: 1, scope: !10866, file: !1372, line: 1382, type: !1808)
!10871 = !DILocalVariable(name: "clock", arg: 2, scope: !10866, file: !1372, line: 1382, type: !61)
!10872 = !DILocalVariable(name: "irq_status", scope: !10866, file: !1372, line: 1384, type: !61)
!10873 = !DILocation(line: 0, scope: !10866)
!10874 = !DILocation(line: 1386, column: 38, scope: !10875)
!10875 = distinct !DILexicalBlock(scope: !10866, file: !1372, line: 1386, column: 9)
!10876 = !DILocation(line: 1386, column: 20, scope: !10875)
!10877 = !DILocation(line: 1386, column: 9, scope: !10866)
!10878 = !DILocation(line: 1387, column: 9, scope: !10879)
!10879 = distinct !DILexicalBlock(scope: !10875, file: !1372, line: 1386, column: 54)
!10880 = !DILocation(line: 1388, column: 9, scope: !10879)
!10881 = !DILocation(line: 1391, column: 18, scope: !10866)
!10882 = !DILocation(line: 1392, column: 24, scope: !10883)
!10883 = distinct !DILexicalBlock(scope: !10866, file: !1372, line: 1392, column: 9)
!10884 = !DILocation(line: 1392, column: 9, scope: !10866)
!10885 = !DILocation(line: 1393, column: 9, scope: !10886)
!10886 = distinct !DILexicalBlock(scope: !10883, file: !1372, line: 1392, column: 33)
!10887 = !DILocation(line: 1394, column: 9, scope: !10886)
!10888 = !DILocation(line: 1396, column: 32, scope: !10889)
!10889 = distinct !DILexicalBlock(scope: !10883, file: !1372, line: 1395, column: 12)
!10890 = !DILocation(line: 1398, column: 5, scope: !10866)
!10891 = !DILocation(line: 1400, column: 27, scope: !10892)
!10892 = distinct !DILexicalBlock(scope: !10866, file: !1372, line: 1400, column: 9)
!10893 = !DILocation(line: 1400, column: 42, scope: !10892)
!10894 = !DILocation(line: 1403, column: 32, scope: !10895)
!10895 = distinct !DILexicalBlock(scope: !10892, file: !1372, line: 1401, column: 42)
!10896 = !DILocation(line: 1405, column: 9, scope: !10895)
!10897 = !DILocation(line: 1407, column: 27, scope: !10898)
!10898 = distinct !DILexicalBlock(scope: !10899, file: !1372, line: 1407, column: 13)
!10899 = distinct !DILexicalBlock(scope: !10892, file: !1372, line: 1406, column: 12)
!10900 = !DILocation(line: 1407, column: 13, scope: !10899)
!10901 = !DILocation(line: 1408, column: 13, scope: !10902)
!10902 = distinct !DILexicalBlock(scope: !10898, file: !1372, line: 1407, column: 67)
!10903 = !DILocation(line: 1409, column: 36, scope: !10902)
!10904 = !DILocation(line: 1410, column: 13, scope: !10902)
!10905 = !DILocation(line: 1414, column: 28, scope: !10866)
!10906 = !DILocation(line: 1416, column: 5, scope: !10866)
!10907 = !DILocation(line: 1417, column: 1, scope: !10866)
!10908 = distinct !DISubprogram(name: "hal_sd_get_clock", scope: !1372, file: !1372, line: 1421, type: !10909, scopeLine: 1422, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1371, retainedNodes: !10911)
!10909 = !DISubroutineType(types: !10910)
!10910 = !{!9676, !1808, !1716}
!10911 = !{!10912, !10913}
!10912 = !DILocalVariable(name: "sd_port", arg: 1, scope: !10908, file: !1372, line: 1421, type: !1808)
!10913 = !DILocalVariable(name: "clock", arg: 2, scope: !10908, file: !1372, line: 1421, type: !1716)
!10914 = !DILocation(line: 0, scope: !10908)
!10915 = !DILocation(line: 1423, column: 14, scope: !10916)
!10916 = distinct !DILexicalBlock(scope: !10908, file: !1372, line: 1423, column: 9)
!10917 = !DILocation(line: 1423, column: 9, scope: !10908)
!10918 = !DILocation(line: 1424, column: 9, scope: !10919)
!10919 = distinct !DILexicalBlock(scope: !10916, file: !1372, line: 1423, column: 24)
!10920 = !DILocation(line: 1425, column: 9, scope: !10919)
!10921 = !DILocation(line: 1428, column: 38, scope: !10922)
!10922 = distinct !DILexicalBlock(scope: !10908, file: !1372, line: 1428, column: 9)
!10923 = !DILocation(line: 1428, column: 20, scope: !10922)
!10924 = !DILocation(line: 1428, column: 9, scope: !10908)
!10925 = !DILocation(line: 1429, column: 9, scope: !10926)
!10926 = distinct !DILexicalBlock(scope: !10922, file: !1372, line: 1428, column: 54)
!10927 = !DILocation(line: 1430, column: 9, scope: !10926)
!10928 = !DILocation(line: 1433, column: 14, scope: !10908)
!10929 = !DILocation(line: 1433, column: 12, scope: !10908)
!10930 = !DILocation(line: 1435, column: 5, scope: !10908)
!10931 = !DILocation(line: 1436, column: 1, scope: !10908)
!10932 = distinct !DISubprogram(name: "hal_sd_get_card_type", scope: !1372, file: !1372, line: 1439, type: !10933, scopeLine: 1440, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1371, retainedNodes: !10936)
!10933 = !DISubroutineType(types: !10934)
!10934 = !{!9676, !1808, !10935}
!10935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1983, size: 32)
!10936 = !{!10937, !10938}
!10937 = !DILocalVariable(name: "sd_port", arg: 1, scope: !10932, file: !1372, line: 1439, type: !1808)
!10938 = !DILocalVariable(name: "card_type", arg: 2, scope: !10932, file: !1372, line: 1439, type: !10935)
!10939 = !DILocation(line: 0, scope: !10932)
!10940 = !DILocation(line: 1441, column: 14, scope: !10941)
!10941 = distinct !DILexicalBlock(scope: !10932, file: !1372, line: 1441, column: 9)
!10942 = !DILocation(line: 1441, column: 9, scope: !10932)
!10943 = !DILocation(line: 1442, column: 9, scope: !10944)
!10944 = distinct !DILexicalBlock(scope: !10941, file: !1372, line: 1441, column: 28)
!10945 = !DILocation(line: 1443, column: 9, scope: !10944)
!10946 = !DILocation(line: 1446, column: 38, scope: !10947)
!10947 = distinct !DILexicalBlock(scope: !10932, file: !1372, line: 1446, column: 9)
!10948 = !DILocation(line: 1446, column: 20, scope: !10947)
!10949 = !DILocation(line: 1446, column: 9, scope: !10932)
!10950 = !DILocation(line: 1447, column: 9, scope: !10951)
!10951 = distinct !DILexicalBlock(scope: !10947, file: !1372, line: 1446, column: 54)
!10952 = !DILocation(line: 1448, column: 9, scope: !10951)
!10953 = !DILocation(line: 1451, column: 33, scope: !10932)
!10954 = !DILocation(line: 1451, column: 16, scope: !10932)
!10955 = !DILocation(line: 1453, column: 5, scope: !10932)
!10956 = !DILocation(line: 1454, column: 1, scope: !10932)
!10957 = distinct !DISubprogram(name: "hal_sd_get_ocr", scope: !1372, file: !1372, line: 1458, type: !10909, scopeLine: 1459, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1371, retainedNodes: !10958)
!10958 = !{!10959, !10960}
!10959 = !DILocalVariable(name: "sd_port", arg: 1, scope: !10957, file: !1372, line: 1458, type: !1808)
!10960 = !DILocalVariable(name: "ocr", arg: 2, scope: !10957, file: !1372, line: 1458, type: !1716)
!10961 = !DILocation(line: 0, scope: !10957)
!10962 = !DILocation(line: 1460, column: 14, scope: !10963)
!10963 = distinct !DILexicalBlock(scope: !10957, file: !1372, line: 1460, column: 9)
!10964 = !DILocation(line: 1460, column: 9, scope: !10957)
!10965 = !DILocation(line: 1461, column: 9, scope: !10966)
!10966 = distinct !DILexicalBlock(scope: !10963, file: !1372, line: 1460, column: 22)
!10967 = !DILocation(line: 1462, column: 9, scope: !10966)
!10968 = !DILocation(line: 1465, column: 38, scope: !10969)
!10969 = distinct !DILexicalBlock(scope: !10957, file: !1372, line: 1465, column: 9)
!10970 = !DILocation(line: 1465, column: 20, scope: !10969)
!10971 = !DILocation(line: 1465, column: 9, scope: !10957)
!10972 = !DILocation(line: 1466, column: 9, scope: !10973)
!10973 = distinct !DILexicalBlock(scope: !10969, file: !1372, line: 1465, column: 54)
!10974 = !DILocation(line: 1467, column: 9, scope: !10973)
!10975 = !DILocation(line: 1470, column: 27, scope: !10957)
!10976 = !DILocation(line: 1470, column: 10, scope: !10957)
!10977 = !DILocation(line: 1472, column: 5, scope: !10957)
!10978 = !DILocation(line: 1473, column: 1, scope: !10957)
!10979 = distinct !DISubprogram(name: "hal_sd_get_card_status", scope: !1372, file: !1372, line: 1476, type: !10909, scopeLine: 1477, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1371, retainedNodes: !10980)
!10980 = !{!10981, !10982, !10983}
!10981 = !DILocalVariable(name: "sd_port", arg: 1, scope: !10979, file: !1372, line: 1476, type: !1808)
!10982 = !DILocalVariable(name: "card_status", arg: 2, scope: !10979, file: !1372, line: 1476, type: !1716)
!10983 = !DILocalVariable(name: "status", scope: !10979, file: !1372, line: 1478, type: !1924)
!10984 = !DILocation(line: 0, scope: !10979)
!10985 = !DILocation(line: 1480, column: 14, scope: !10986)
!10986 = distinct !DILexicalBlock(scope: !10979, file: !1372, line: 1480, column: 9)
!10987 = !DILocation(line: 1480, column: 9, scope: !10979)
!10988 = !DILocation(line: 1481, column: 9, scope: !10989)
!10989 = distinct !DILexicalBlock(scope: !10986, file: !1372, line: 1480, column: 30)
!10990 = !DILocation(line: 1482, column: 9, scope: !10989)
!10991 = !DILocation(line: 1485, column: 38, scope: !10992)
!10992 = distinct !DILexicalBlock(scope: !10979, file: !1372, line: 1485, column: 9)
!10993 = !DILocation(line: 1485, column: 20, scope: !10992)
!10994 = !DILocation(line: 1485, column: 9, scope: !10979)
!10995 = !DILocation(line: 1486, column: 9, scope: !10996)
!10996 = distinct !DILexicalBlock(scope: !10992, file: !1372, line: 1485, column: 54)
!10997 = !DILocation(line: 1487, column: 9, scope: !10996)
!10998 = !DILocation(line: 1490, column: 14, scope: !10979)
!10999 = !DILocation(line: 1492, column: 18, scope: !11000)
!11000 = distinct !DILexicalBlock(scope: !10979, file: !1372, line: 1492, column: 9)
!11001 = !DILocation(line: 1492, column: 9, scope: !10979)
!11002 = !DILocation(line: 1493, column: 37, scope: !11003)
!11003 = distinct !DILexicalBlock(scope: !11000, file: !1372, line: 1492, column: 29)
!11004 = !DILocation(line: 1494, column: 9, scope: !11003)
!11005 = !DILocation(line: 1498, column: 1, scope: !10979)
!11006 = distinct !DISubprogram(name: "hal_sd_get_erase_sector_size", scope: !1372, file: !1372, line: 1500, type: !10909, scopeLine: 1501, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1371, retainedNodes: !11007)
!11007 = !{!11008, !11009}
!11008 = !DILocalVariable(name: "sd_port", arg: 1, scope: !11006, file: !1372, line: 1500, type: !1808)
!11009 = !DILocalVariable(name: "erase_sector_size", arg: 2, scope: !11006, file: !1372, line: 1500, type: !1716)
!11010 = !DILocation(line: 0, scope: !11006)
!11011 = !DILocation(line: 1502, column: 14, scope: !11012)
!11012 = distinct !DILexicalBlock(scope: !11006, file: !1372, line: 1502, column: 9)
!11013 = !DILocation(line: 1502, column: 9, scope: !11006)
!11014 = !DILocation(line: 1503, column: 9, scope: !11015)
!11015 = distinct !DILexicalBlock(scope: !11012, file: !1372, line: 1502, column: 36)
!11016 = !DILocation(line: 1504, column: 9, scope: !11015)
!11017 = !DILocation(line: 1507, column: 38, scope: !11018)
!11018 = distinct !DILexicalBlock(scope: !11006, file: !1372, line: 1507, column: 9)
!11019 = !DILocation(line: 1507, column: 20, scope: !11018)
!11020 = !DILocation(line: 1507, column: 9, scope: !11006)
!11021 = !DILocation(line: 1508, column: 9, scope: !11022)
!11022 = distinct !DILexicalBlock(scope: !11018, file: !1372, line: 1507, column: 54)
!11023 = !DILocation(line: 1509, column: 9, scope: !11022)
!11024 = !DILocation(line: 1512, column: 25, scope: !11025)
!11025 = distinct !DILexicalBlock(scope: !11006, file: !1372, line: 1512, column: 9)
!11026 = !DILocation(line: 1512, column: 60, scope: !11025)
!11027 = !DILocation(line: 1513, column: 49, scope: !11028)
!11028 = distinct !DILexicalBlock(scope: !11025, file: !1372, line: 1512, column: 117)
!11029 = !DILocation(line: 1513, column: 28, scope: !11028)
!11030 = !DILocation(line: 1514, column: 5, scope: !11028)
!11031 = !DILocation(line: 1517, column: 49, scope: !11032)
!11032 = distinct !DILexicalBlock(scope: !11033, file: !1372, line: 1516, column: 67)
!11033 = distinct !DILexicalBlock(scope: !11025, file: !1372, line: 1514, column: 16)
!11034 = !DILocation(line: 1517, column: 28, scope: !11032)
!11035 = !DILocation(line: 1518, column: 5, scope: !11032)
!11036 = !DILocation(line: 1521, column: 1, scope: !11006)
!11037 = distinct !DISubprogram(name: "hal_sd_get_cid", scope: !1372, file: !1372, line: 1523, type: !10909, scopeLine: 1524, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1371, retainedNodes: !11038)
!11038 = !{!11039, !11040}
!11039 = !DILocalVariable(name: "sd_port", arg: 1, scope: !11037, file: !1372, line: 1523, type: !1808)
!11040 = !DILocalVariable(name: "cid", arg: 2, scope: !11037, file: !1372, line: 1523, type: !1716)
!11041 = !DILocation(line: 0, scope: !11037)
!11042 = !DILocation(line: 1525, column: 14, scope: !11043)
!11043 = distinct !DILexicalBlock(scope: !11037, file: !1372, line: 1525, column: 9)
!11044 = !DILocation(line: 1525, column: 9, scope: !11037)
!11045 = !DILocation(line: 1526, column: 9, scope: !11046)
!11046 = distinct !DILexicalBlock(scope: !11043, file: !1372, line: 1525, column: 22)
!11047 = !DILocation(line: 1527, column: 9, scope: !11046)
!11048 = !DILocation(line: 1530, column: 38, scope: !11049)
!11049 = distinct !DILexicalBlock(scope: !11037, file: !1372, line: 1530, column: 9)
!11050 = !DILocation(line: 1530, column: 20, scope: !11049)
!11051 = !DILocation(line: 1530, column: 9, scope: !11037)
!11052 = !DILocation(line: 1531, column: 9, scope: !11053)
!11053 = distinct !DILexicalBlock(scope: !11049, file: !1372, line: 1530, column: 54)
!11054 = !DILocation(line: 1532, column: 9, scope: !11053)
!11055 = !DILocation(line: 1535, column: 18, scope: !11037)
!11056 = !DILocation(line: 1535, column: 16, scope: !11037)
!11057 = !DILocation(line: 1536, column: 18, scope: !11037)
!11058 = !DILocation(line: 1536, column: 11, scope: !11037)
!11059 = !DILocation(line: 1536, column: 16, scope: !11037)
!11060 = !DILocation(line: 1537, column: 18, scope: !11037)
!11061 = !DILocation(line: 1537, column: 11, scope: !11037)
!11062 = !DILocation(line: 1537, column: 16, scope: !11037)
!11063 = !DILocation(line: 1538, column: 18, scope: !11037)
!11064 = !DILocation(line: 1538, column: 11, scope: !11037)
!11065 = !DILocation(line: 1538, column: 16, scope: !11037)
!11066 = !DILocation(line: 1540, column: 5, scope: !11037)
!11067 = !DILocation(line: 1541, column: 1, scope: !11037)
!11068 = distinct !DISubprogram(name: "hal_sd_get_csd", scope: !1372, file: !1372, line: 1543, type: !10909, scopeLine: 1544, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1371, retainedNodes: !11069)
!11069 = !{!11070, !11071}
!11070 = !DILocalVariable(name: "sd_port", arg: 1, scope: !11068, file: !1372, line: 1543, type: !1808)
!11071 = !DILocalVariable(name: "csd", arg: 2, scope: !11068, file: !1372, line: 1543, type: !1716)
!11072 = !DILocation(line: 0, scope: !11068)
!11073 = !DILocation(line: 1545, column: 14, scope: !11074)
!11074 = distinct !DILexicalBlock(scope: !11068, file: !1372, line: 1545, column: 9)
!11075 = !DILocation(line: 1545, column: 9, scope: !11068)
!11076 = !DILocation(line: 1546, column: 9, scope: !11077)
!11077 = distinct !DILexicalBlock(scope: !11074, file: !1372, line: 1545, column: 22)
!11078 = !DILocation(line: 1547, column: 9, scope: !11077)
!11079 = !DILocation(line: 1550, column: 38, scope: !11080)
!11080 = distinct !DILexicalBlock(scope: !11068, file: !1372, line: 1550, column: 9)
!11081 = !DILocation(line: 1550, column: 20, scope: !11080)
!11082 = !DILocation(line: 1550, column: 9, scope: !11068)
!11083 = !DILocation(line: 1551, column: 9, scope: !11084)
!11084 = distinct !DILexicalBlock(scope: !11080, file: !1372, line: 1550, column: 54)
!11085 = !DILocation(line: 1552, column: 9, scope: !11084)
!11086 = !DILocation(line: 1555, column: 18, scope: !11068)
!11087 = !DILocation(line: 1555, column: 16, scope: !11068)
!11088 = !DILocation(line: 1556, column: 18, scope: !11068)
!11089 = !DILocation(line: 1556, column: 11, scope: !11068)
!11090 = !DILocation(line: 1556, column: 16, scope: !11068)
!11091 = !DILocation(line: 1557, column: 18, scope: !11068)
!11092 = !DILocation(line: 1557, column: 11, scope: !11068)
!11093 = !DILocation(line: 1557, column: 16, scope: !11068)
!11094 = !DILocation(line: 1558, column: 18, scope: !11068)
!11095 = !DILocation(line: 1558, column: 11, scope: !11068)
!11096 = !DILocation(line: 1558, column: 16, scope: !11068)
!11097 = !DILocation(line: 1560, column: 5, scope: !11068)
!11098 = !DILocation(line: 1561, column: 1, scope: !11068)
!11099 = distinct !DISubprogram(name: "sd_wait_data_ready", scope: !1637, file: !1637, line: 72, type: !11100, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !11102)
!11100 = !DISubroutineType(types: !11101)
!11101 = !{!1924, !1808}
!11102 = !{!11103, !11104, !11105, !11106, !11107, !11108}
!11103 = !DILocalVariable(name: "sd_port", arg: 1, scope: !11099, file: !1637, line: 72, type: !1808)
!11104 = !DILocalVariable(name: "msdc_register_base", scope: !11099, file: !1637, line: 74, type: !1686)
!11105 = !DILocalVariable(name: "data_status", scope: !11099, file: !1637, line: 75, type: !61)
!11106 = !DILocalVariable(name: "start_count", scope: !11099, file: !1637, line: 76, type: !61)
!11107 = !DILocalVariable(name: "end_count", scope: !11099, file: !1637, line: 77, type: !61)
!11108 = !DILocalVariable(name: "count", scope: !11099, file: !1637, line: 78, type: !61)
!11109 = !DILocation(line: 0, scope: !11099)
!11110 = !DILocation(line: 76, column: 5, scope: !11099)
!11111 = !DILocation(line: 76, column: 14, scope: !11099)
!11112 = !DILocation(line: 77, column: 5, scope: !11099)
!11113 = !DILocation(line: 77, column: 14, scope: !11099)
!11114 = !DILocation(line: 78, column: 5, scope: !11099)
!11115 = !DILocation(line: 78, column: 14, scope: !11099)
!11116 = !DILocation(line: 80, column: 41, scope: !11099)
!11117 = !DILocation(line: 82, column: 5, scope: !11099)
!11118 = !DILocation(line: 83, column: 5, scope: !11099)
!11119 = !DILocation(line: 84, column: 43, scope: !11120)
!11120 = distinct !DILexicalBlock(scope: !11099, file: !1637, line: 83, column: 8)
!11121 = !DILocation(line: 85, column: 9, scope: !11120)
!11122 = !DILocation(line: 86, column: 36, scope: !11120)
!11123 = !DILocation(line: 86, column: 49, scope: !11120)
!11124 = !DILocation(line: 86, column: 9, scope: !11120)
!11125 = !DILocation(line: 87, column: 16, scope: !11099)
!11126 = !DILocation(line: 87, column: 29, scope: !11099)
!11127 = !DILocation(line: 87, column: 32, scope: !11099)
!11128 = !DILocation(line: 87, column: 75, scope: !11099)
!11129 = distinct !{!11129, !11118, !11130}
!11130 = !DILocation(line: 87, column: 112, scope: !11099)
!11131 = !DILocation(line: 90, column: 25, scope: !11099)
!11132 = !DILocation(line: 93, column: 5, scope: !11099)
!11133 = !DILocation(line: 95, column: 9, scope: !11134)
!11134 = distinct !DILexicalBlock(scope: !11099, file: !1637, line: 95, column: 9)
!11135 = !DILocation(line: 95, column: 15, scope: !11134)
!11136 = !DILocation(line: 95, column: 9, scope: !11099)
!11137 = !DILocation(line: 96, column: 9, scope: !11138)
!11138 = distinct !DILexicalBlock(scope: !11134, file: !1637, line: 95, column: 44)
!11139 = !DILocation(line: 97, column: 9, scope: !11138)
!11140 = !DILocation(line: 100, column: 21, scope: !11141)
!11141 = distinct !DILexicalBlock(scope: !11099, file: !1637, line: 100, column: 9)
!11142 = !DILocation(line: 100, column: 9, scope: !11099)
!11143 = !DILocation(line: 102, column: 28, scope: !11144)
!11144 = distinct !DILexicalBlock(scope: !11141, file: !1637, line: 102, column: 16)
!11145 = !DILocation(line: 0, scope: !11144)
!11146 = !DILocation(line: 107, column: 1, scope: !11099)
!11147 = distinct !DISubprogram(name: "sd_wait_command_ready", scope: !1637, file: !1637, line: 109, type: !11100, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !11148)
!11148 = !{!11149, !11150, !11151, !11152, !11153, !11154}
!11149 = !DILocalVariable(name: "sd_port", arg: 1, scope: !11147, file: !1637, line: 109, type: !1808)
!11150 = !DILocalVariable(name: "msdc_register_base", scope: !11147, file: !1637, line: 111, type: !1686)
!11151 = !DILocalVariable(name: "command_status", scope: !11147, file: !1637, line: 112, type: !60)
!11152 = !DILocalVariable(name: "start_count", scope: !11147, file: !1637, line: 113, type: !61)
!11153 = !DILocalVariable(name: "end_count", scope: !11147, file: !1637, line: 114, type: !61)
!11154 = !DILocalVariable(name: "count", scope: !11147, file: !1637, line: 115, type: !61)
!11155 = !DILocation(line: 0, scope: !11147)
!11156 = !DILocation(line: 112, column: 5, scope: !11147)
!11157 = !DILocation(line: 112, column: 23, scope: !11147)
!11158 = !DILocation(line: 113, column: 5, scope: !11147)
!11159 = !DILocation(line: 113, column: 14, scope: !11147)
!11160 = !DILocation(line: 114, column: 5, scope: !11147)
!11161 = !DILocation(line: 114, column: 14, scope: !11147)
!11162 = !DILocation(line: 115, column: 5, scope: !11147)
!11163 = !DILocation(line: 115, column: 14, scope: !11147)
!11164 = !DILocation(line: 117, column: 41, scope: !11147)
!11165 = !DILocation(line: 119, column: 5, scope: !11147)
!11166 = !DILocation(line: 120, column: 5, scope: !11147)
!11167 = !DILocation(line: 121, column: 46, scope: !11168)
!11168 = distinct !DILexicalBlock(scope: !11147, file: !1637, line: 120, column: 8)
!11169 = !DILocation(line: 121, column: 24, scope: !11168)
!11170 = !DILocation(line: 122, column: 9, scope: !11168)
!11171 = !DILocation(line: 123, column: 36, scope: !11168)
!11172 = !DILocation(line: 123, column: 49, scope: !11168)
!11173 = !DILocation(line: 123, column: 9, scope: !11168)
!11174 = !DILocation(line: 124, column: 15, scope: !11147)
!11175 = !DILocation(line: 124, column: 30, scope: !11147)
!11176 = !DILocation(line: 124, column: 33, scope: !11147)
!11177 = !DILocation(line: 124, column: 76, scope: !11147)
!11178 = distinct !{!11178, !11166, !11179}
!11179 = !DILocation(line: 124, column: 116, scope: !11147)
!11180 = !DILocation(line: 127, column: 25, scope: !11147)
!11181 = !DILocation(line: 130, column: 54, scope: !11147)
!11182 = !DILocation(line: 130, column: 5, scope: !11147)
!11183 = !DILocation(line: 132, column: 9, scope: !11184)
!11184 = distinct !DILexicalBlock(scope: !11147, file: !1637, line: 132, column: 9)
!11185 = !DILocation(line: 132, column: 15, scope: !11184)
!11186 = !DILocation(line: 132, column: 9, scope: !11147)
!11187 = !DILocation(line: 133, column: 9, scope: !11188)
!11188 = distinct !DILexicalBlock(scope: !11184, file: !1637, line: 132, column: 47)
!11189 = !DILocation(line: 134, column: 9, scope: !11188)
!11190 = !DILocation(line: 137, column: 9, scope: !11191)
!11191 = distinct !DILexicalBlock(scope: !11147, file: !1637, line: 137, column: 9)
!11192 = !DILocation(line: 137, column: 24, scope: !11191)
!11193 = !DILocation(line: 137, column: 9, scope: !11147)
!11194 = !DILocation(line: 139, column: 16, scope: !11195)
!11195 = distinct !DILexicalBlock(scope: !11191, file: !1637, line: 139, column: 16)
!11196 = !DILocation(line: 139, column: 31, scope: !11195)
!11197 = !DILocation(line: 0, scope: !11195)
!11198 = !DILocation(line: 144, column: 1, scope: !11147)
!11199 = distinct !DISubprogram(name: "sd_send_command", scope: !1637, file: !1637, line: 147, type: !11200, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !11202)
!11200 = !DISubroutineType(types: !11201)
!11201 = !{!1924, !1808, !61, !61}
!11202 = !{!11203, !11204, !11205, !11206, !11207}
!11203 = !DILocalVariable(name: "sd_port", arg: 1, scope: !11199, file: !1637, line: 147, type: !1808)
!11204 = !DILocalVariable(name: "msdc_command", arg: 2, scope: !11199, file: !1637, line: 147, type: !61)
!11205 = !DILocalVariable(name: "argument", arg: 3, scope: !11199, file: !1637, line: 147, type: !61)
!11206 = !DILocalVariable(name: "msdc_register_base", scope: !11199, file: !1637, line: 149, type: !1686)
!11207 = !DILocalVariable(name: "status", scope: !11199, file: !1637, line: 150, type: !1924)
!11208 = !DILocation(line: 0, scope: !11199)
!11209 = !DILocation(line: 152, column: 41, scope: !11199)
!11210 = !DILocation(line: 154, column: 24, scope: !11211)
!11211 = distinct !DILexicalBlock(scope: !11199, file: !1637, line: 154, column: 9)
!11212 = !DILocation(line: 154, column: 9, scope: !11199)
!11213 = !DILocation(line: 155, column: 37, scope: !11214)
!11214 = distinct !DILexicalBlock(scope: !11211, file: !1637, line: 154, column: 41)
!11215 = !DILocation(line: 155, column: 45, scope: !11214)
!11216 = !DILocation(line: 155, column: 71, scope: !11214)
!11217 = !DILocation(line: 155, column: 74, scope: !11214)
!11218 = !DILocation(line: 155, column: 9, scope: !11214)
!11219 = distinct !{!11219, !11218, !11220}
!11220 = !DILocation(line: 155, column: 117, scope: !11214)
!11221 = !DILocation(line: 157, column: 37, scope: !11222)
!11222 = distinct !DILexicalBlock(scope: !11211, file: !1637, line: 156, column: 12)
!11223 = !DILocation(line: 157, column: 45, scope: !11222)
!11224 = !DILocation(line: 157, column: 71, scope: !11222)
!11225 = !DILocation(line: 157, column: 74, scope: !11222)
!11226 = !DILocation(line: 157, column: 9, scope: !11222)
!11227 = distinct !{!11227, !11226, !11228}
!11228 = !DILocation(line: 157, column: 117, scope: !11222)
!11229 = !DILocation(line: 161, column: 25, scope: !11199)
!11230 = !DILocation(line: 163, column: 25, scope: !11199)
!11231 = !DILocation(line: 163, column: 33, scope: !11199)
!11232 = !DILocation(line: 164, column: 25, scope: !11199)
!11233 = !DILocation(line: 164, column: 33, scope: !11199)
!11234 = !DILocation(line: 166, column: 14, scope: !11199)
!11235 = !DILocation(line: 172, column: 1, scope: !11199)
!11236 = distinct !DISubprogram(name: "sd_send_command55", scope: !1637, file: !1637, line: 174, type: !11237, scopeLine: 175, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !11239)
!11237 = !DISubroutineType(types: !11238)
!11238 = !{!1924, !1808, !61}
!11239 = !{!11240, !11241, !11242, !11243, !11244}
!11240 = !DILocalVariable(name: "sd_port", arg: 1, scope: !11236, file: !1637, line: 174, type: !1808)
!11241 = !DILocalVariable(name: "argument", arg: 2, scope: !11236, file: !1637, line: 174, type: !61)
!11242 = !DILocalVariable(name: "status", scope: !11236, file: !1637, line: 176, type: !1924)
!11243 = !DILocalVariable(name: "msdc_register_base", scope: !11236, file: !1637, line: 177, type: !1686)
!11244 = !DILocalVariable(name: "response", scope: !11236, file: !1637, line: 178, type: !61)
!11245 = !DILocation(line: 0, scope: !11236)
!11246 = !DILocation(line: 181, column: 65, scope: !11236)
!11247 = !DILocation(line: 181, column: 14, scope: !11236)
!11248 = !DILocation(line: 182, column: 18, scope: !11249)
!11249 = distinct !DILexicalBlock(scope: !11236, file: !1637, line: 182, column: 9)
!11250 = !DILocation(line: 182, column: 9, scope: !11236)
!11251 = !DILocation(line: 180, column: 41, scope: !11236)
!11252 = !DILocation(line: 186, column: 36, scope: !11236)
!11253 = !DILocation(line: 188, column: 20, scope: !11254)
!11254 = distinct !DILexicalBlock(scope: !11236, file: !1637, line: 188, column: 9)
!11255 = !DILocation(line: 188, column: 9, scope: !11236)
!11256 = !DILocation(line: 189, column: 24, scope: !11257)
!11257 = distinct !DILexicalBlock(scope: !11258, file: !1637, line: 189, column: 13)
!11258 = distinct !DILexicalBlock(scope: !11254, file: !1637, line: 188, column: 50)
!11259 = !DILocation(line: 0, scope: !11257)
!11260 = !DILocation(line: 194, column: 25, scope: !11261)
!11261 = distinct !DILexicalBlock(scope: !11254, file: !1637, line: 194, column: 16)
!11262 = !DILocation(line: 0, scope: !11261)
!11263 = !DILocation(line: 199, column: 1, scope: !11236)
!11264 = distinct !DISubprogram(name: "sd_reset", scope: !1637, file: !1637, line: 201, type: !11100, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !11265)
!11265 = !{!11266, !11267}
!11266 = !DILocalVariable(name: "sd_port", arg: 1, scope: !11264, file: !1637, line: 201, type: !1808)
!11267 = !DILocalVariable(name: "status", scope: !11264, file: !1637, line: 203, type: !1924)
!11268 = !DILocation(line: 0, scope: !11264)
!11269 = !DILocation(line: 205, column: 14, scope: !11264)
!11270 = !DILocation(line: 206, column: 29, scope: !11264)
!11271 = !DILocation(line: 208, column: 5, scope: !11264)
!11272 = distinct !DISubprogram(name: "sd_check_sd_card_type", scope: !1637, file: !1637, line: 211, type: !11273, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !11275)
!11273 = !DISubroutineType(types: !11274)
!11274 = !{!1983, !1808}
!11275 = !{!11276, !11277, !11278, !11279, !11280, !11281, !11282, !11283, !11284, !11285}
!11276 = !DILocalVariable(name: "sd_port", arg: 1, scope: !11272, file: !1637, line: 211, type: !1808)
!11277 = !DILocalVariable(name: "msdc_register_base", scope: !11272, file: !1637, line: 213, type: !1686)
!11278 = !DILocalVariable(name: "status", scope: !11272, file: !1637, line: 214, type: !1924)
!11279 = !DILocalVariable(name: "response", scope: !11272, file: !1637, line: 215, type: !61)
!11280 = !DILocalVariable(name: "ocr_argument", scope: !11272, file: !1637, line: 216, type: !61)
!11281 = !DILocalVariable(name: "ocr_value", scope: !11272, file: !1637, line: 217, type: !61)
!11282 = !DILocalVariable(name: "is_first_command41", scope: !11272, file: !1637, line: 218, type: !91)
!11283 = !DILocalVariable(name: "start_count", scope: !11272, file: !1637, line: 219, type: !61)
!11284 = !DILocalVariable(name: "end_count", scope: !11272, file: !1637, line: 220, type: !61)
!11285 = !DILocalVariable(name: "count", scope: !11272, file: !1637, line: 221, type: !61)
!11286 = !DILocation(line: 0, scope: !11272)
!11287 = !DILocation(line: 219, column: 5, scope: !11272)
!11288 = !DILocation(line: 219, column: 14, scope: !11272)
!11289 = !DILocation(line: 220, column: 5, scope: !11272)
!11290 = !DILocation(line: 220, column: 14, scope: !11272)
!11291 = !DILocation(line: 221, column: 5, scope: !11272)
!11292 = !DILocation(line: 221, column: 14, scope: !11272)
!11293 = !DILocation(line: 223, column: 41, scope: !11272)
!11294 = !DILocation(line: 225, column: 14, scope: !11272)
!11295 = !DILocation(line: 226, column: 18, scope: !11296)
!11296 = distinct !DILexicalBlock(scope: !11272, file: !1637, line: 226, column: 9)
!11297 = !DILocation(line: 226, column: 9, scope: !11272)
!11298 = !DILocation(line: 227, column: 9, scope: !11299)
!11299 = distinct !DILexicalBlock(scope: !11296, file: !1637, line: 226, column: 29)
!11300 = !DILocation(line: 238, column: 9, scope: !11272)
!11301 = !DILocation(line: 230, column: 40, scope: !11302)
!11302 = distinct !DILexicalBlock(scope: !11296, file: !1637, line: 229, column: 12)
!11303 = !DILocation(line: 231, column: 31, scope: !11304)
!11304 = distinct !DILexicalBlock(scope: !11302, file: !1637, line: 231, column: 13)
!11305 = !DILocation(line: 231, column: 13, scope: !11302)
!11306 = !DILocation(line: 234, column: 46, scope: !11307)
!11307 = distinct !DILexicalBlock(scope: !11304, file: !1637, line: 233, column: 16)
!11308 = !DILocation(line: 243, column: 37, scope: !11309)
!11309 = distinct !DILexicalBlock(scope: !11310, file: !1637, line: 242, column: 82)
!11310 = distinct !DILexicalBlock(scope: !11311, file: !1637, line: 242, column: 16)
!11311 = distinct !DILexicalBlock(scope: !11312, file: !1637, line: 240, column: 16)
!11312 = distinct !DILexicalBlock(scope: !11272, file: !1637, line: 238, column: 9)
!11313 = !DILocation(line: 244, column: 9, scope: !11309)
!11314 = !DILocation(line: 0, scope: !11296)
!11315 = !DILocation(line: 247, column: 5, scope: !11272)
!11316 = !DILocation(line: 249, column: 5, scope: !11272)
!11317 = !DILocation(line: 251, column: 9, scope: !11318)
!11318 = distinct !DILexicalBlock(scope: !11272, file: !1637, line: 249, column: 15)
!11319 = !DILocation(line: 251, column: 36, scope: !11318)
!11320 = !DILocation(line: 251, column: 45, scope: !11318)
!11321 = distinct !{!11321, !11317, !11322}
!11322 = !DILocation(line: 251, column: 66, scope: !11318)
!11323 = !DILocation(line: 253, column: 18, scope: !11318)
!11324 = !DILocation(line: 254, column: 22, scope: !11325)
!11325 = distinct !DILexicalBlock(scope: !11318, file: !1637, line: 254, column: 13)
!11326 = !DILocation(line: 254, column: 13, scope: !11318)
!11327 = !DILocation(line: 255, column: 41, scope: !11328)
!11328 = distinct !DILexicalBlock(scope: !11325, file: !1637, line: 254, column: 33)
!11329 = !DILocation(line: 256, column: 13, scope: !11328)
!11330 = !DILocation(line: 260, column: 36, scope: !11318)
!11331 = !DILocation(line: 260, column: 45, scope: !11318)
!11332 = !DILocation(line: 260, column: 9, scope: !11318)
!11333 = distinct !{!11333, !11332, !11334}
!11334 = !DILocation(line: 260, column: 66, scope: !11318)
!11335 = !DILocation(line: 0, scope: !11336)
!11336 = distinct !DILexicalBlock(scope: !11318, file: !1637, line: 262, column: 13)
!11337 = !DILocation(line: 269, column: 22, scope: !11338)
!11338 = distinct !DILexicalBlock(scope: !11318, file: !1637, line: 269, column: 13)
!11339 = !DILocation(line: 269, column: 13, scope: !11318)
!11340 = !DILocation(line: 270, column: 41, scope: !11341)
!11341 = distinct !DILexicalBlock(scope: !11338, file: !1637, line: 269, column: 33)
!11342 = !DILocation(line: 271, column: 13, scope: !11341)
!11343 = !DILocation(line: 274, column: 41, scope: !11318)
!11344 = !DILocation(line: 275, column: 25, scope: !11345)
!11345 = distinct !DILexicalBlock(scope: !11318, file: !1637, line: 275, column: 13)
!11346 = !DILocation(line: 275, column: 13, scope: !11318)
!11347 = !DILocation(line: 276, column: 41, scope: !11348)
!11348 = distinct !DILexicalBlock(scope: !11345, file: !1637, line: 275, column: 53)
!11349 = !DILocation(line: 277, column: 13, scope: !11348)
!11350 = !DILocation(line: 280, column: 27, scope: !11351)
!11351 = distinct !DILexicalBlock(scope: !11318, file: !1637, line: 280, column: 13)
!11352 = !DILocation(line: 280, column: 13, scope: !11318)
!11353 = !DILocation(line: 281, column: 41, scope: !11354)
!11354 = distinct !DILexicalBlock(scope: !11351, file: !1637, line: 280, column: 71)
!11355 = !DILocation(line: 282, column: 13, scope: !11354)
!11356 = !DILocation(line: 285, column: 24, scope: !11357)
!11357 = distinct !DILexicalBlock(scope: !11318, file: !1637, line: 285, column: 13)
!11358 = !DILocation(line: 285, column: 13, scope: !11318)
!11359 = !DILocation(line: 288, column: 13, scope: !11360)
!11360 = distinct !DILexicalBlock(scope: !11357, file: !1637, line: 287, column: 16)
!11361 = !DILocation(line: 289, column: 40, scope: !11360)
!11362 = !DILocation(line: 289, column: 53, scope: !11360)
!11363 = !DILocation(line: 289, column: 13, scope: !11360)
!11364 = !DILocation(line: 290, column: 17, scope: !11365)
!11365 = distinct !DILexicalBlock(scope: !11360, file: !1637, line: 290, column: 17)
!11366 = !DILocation(line: 290, column: 23, scope: !11365)
!11367 = !DILocation(line: 290, column: 17, scope: !11360)
!11368 = distinct !{!11368, !11316, !11369}
!11369 = !DILocation(line: 296, column: 5, scope: !11272)
!11370 = !DILocation(line: 291, column: 45, scope: !11371)
!11371 = distinct !DILexicalBlock(scope: !11365, file: !1637, line: 290, column: 52)
!11372 = !DILocation(line: 292, column: 17, scope: !11371)
!11373 = !DILocation(line: 298, column: 32, scope: !11272)
!11374 = !DILocation(line: 299, column: 27, scope: !11272)
!11375 = !DILocation(line: 301, column: 19, scope: !11376)
!11376 = distinct !DILexicalBlock(scope: !11272, file: !1637, line: 301, column: 9)
!11377 = !DILocation(line: 301, column: 9, scope: !11272)
!11378 = !DILocation(line: 0, scope: !11376)
!11379 = !DILocation(line: 309, column: 29, scope: !11272)
!11380 = !DILocation(line: 311, column: 5, scope: !11272)
!11381 = !DILocation(line: 312, column: 1, scope: !11272)
!11382 = distinct !DISubprogram(name: "sd_check_mmc_card_type", scope: !1637, file: !1637, line: 315, type: !11273, scopeLine: 316, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !11383)
!11383 = !{!11384, !11385, !11386, !11387, !11388, !11389, !11390, !11391}
!11384 = !DILocalVariable(name: "sd_port", arg: 1, scope: !11382, file: !1637, line: 315, type: !1808)
!11385 = !DILocalVariable(name: "msdc_register_base", scope: !11382, file: !1637, line: 317, type: !1686)
!11386 = !DILocalVariable(name: "status", scope: !11382, file: !1637, line: 318, type: !1924)
!11387 = !DILocalVariable(name: "ocr_argument", scope: !11382, file: !1637, line: 319, type: !61)
!11388 = !DILocalVariable(name: "ocr_value", scope: !11382, file: !1637, line: 320, type: !61)
!11389 = !DILocalVariable(name: "start_count", scope: !11382, file: !1637, line: 321, type: !61)
!11390 = !DILocalVariable(name: "end_count", scope: !11382, file: !1637, line: 322, type: !61)
!11391 = !DILocalVariable(name: "count", scope: !11382, file: !1637, line: 323, type: !61)
!11392 = !DILocation(line: 0, scope: !11382)
!11393 = !DILocation(line: 321, column: 5, scope: !11382)
!11394 = !DILocation(line: 321, column: 14, scope: !11382)
!11395 = !DILocation(line: 322, column: 5, scope: !11382)
!11396 = !DILocation(line: 322, column: 14, scope: !11382)
!11397 = !DILocation(line: 323, column: 5, scope: !11382)
!11398 = !DILocation(line: 323, column: 14, scope: !11382)
!11399 = !DILocation(line: 326, column: 41, scope: !11382)
!11400 = !DILocation(line: 328, column: 56, scope: !11401)
!11401 = distinct !DILexicalBlock(scope: !11382, file: !1637, line: 328, column: 9)
!11402 = !DILocation(line: 328, column: 38, scope: !11401)
!11403 = !DILocation(line: 328, column: 9, scope: !11382)
!11404 = !DILocation(line: 329, column: 37, scope: !11405)
!11405 = distinct !DILexicalBlock(scope: !11401, file: !1637, line: 328, column: 75)
!11406 = !DILocation(line: 330, column: 9, scope: !11405)
!11407 = !DILocation(line: 335, column: 45, scope: !11408)
!11408 = distinct !DILexicalBlock(scope: !11382, file: !1637, line: 335, column: 9)
!11409 = !DILocation(line: 335, column: 27, scope: !11408)
!11410 = !DILocation(line: 335, column: 9, scope: !11382)
!11411 = !DILocation(line: 339, column: 5, scope: !11382)
!11412 = !DILocation(line: 341, column: 5, scope: !11382)
!11413 = !DILocation(line: 343, column: 36, scope: !11414)
!11414 = distinct !DILexicalBlock(scope: !11382, file: !1637, line: 341, column: 15)
!11415 = !DILocation(line: 343, column: 45, scope: !11414)
!11416 = !DILocation(line: 343, column: 9, scope: !11414)
!11417 = distinct !{!11417, !11412, !11418}
!11418 = !DILocation(line: 373, column: 5, scope: !11382)
!11419 = !DILocation(line: 345, column: 18, scope: !11414)
!11420 = !DILocation(line: 346, column: 22, scope: !11421)
!11421 = distinct !DILexicalBlock(scope: !11414, file: !1637, line: 346, column: 13)
!11422 = !DILocation(line: 346, column: 13, scope: !11414)
!11423 = !DILocation(line: 347, column: 41, scope: !11424)
!11424 = distinct !DILexicalBlock(scope: !11421, file: !1637, line: 346, column: 33)
!11425 = !DILocation(line: 348, column: 13, scope: !11424)
!11426 = !DILocation(line: 351, column: 41, scope: !11414)
!11427 = !DILocation(line: 353, column: 25, scope: !11428)
!11428 = distinct !DILexicalBlock(scope: !11414, file: !1637, line: 353, column: 13)
!11429 = !DILocation(line: 353, column: 13, scope: !11414)
!11430 = !DILocation(line: 354, column: 41, scope: !11431)
!11431 = distinct !DILexicalBlock(scope: !11428, file: !1637, line: 353, column: 53)
!11432 = !DILocation(line: 355, column: 13, scope: !11431)
!11433 = !DILocation(line: 358, column: 27, scope: !11434)
!11434 = distinct !DILexicalBlock(scope: !11414, file: !1637, line: 358, column: 13)
!11435 = !DILocation(line: 358, column: 13, scope: !11414)
!11436 = !DILocation(line: 359, column: 41, scope: !11437)
!11437 = distinct !DILexicalBlock(scope: !11434, file: !1637, line: 358, column: 71)
!11438 = !DILocation(line: 360, column: 13, scope: !11437)
!11439 = !DILocation(line: 363, column: 24, scope: !11440)
!11440 = distinct !DILexicalBlock(scope: !11414, file: !1637, line: 363, column: 13)
!11441 = !DILocation(line: 363, column: 13, scope: !11414)
!11442 = !DILocation(line: 366, column: 13, scope: !11443)
!11443 = distinct !DILexicalBlock(scope: !11440, file: !1637, line: 365, column: 16)
!11444 = !DILocation(line: 367, column: 40, scope: !11443)
!11445 = !DILocation(line: 367, column: 53, scope: !11443)
!11446 = !DILocation(line: 367, column: 13, scope: !11443)
!11447 = !DILocation(line: 368, column: 17, scope: !11448)
!11448 = distinct !DILexicalBlock(scope: !11443, file: !1637, line: 368, column: 17)
!11449 = !DILocation(line: 368, column: 23, scope: !11448)
!11450 = !DILocation(line: 368, column: 17, scope: !11443)
!11451 = !DILocation(line: 369, column: 45, scope: !11452)
!11452 = distinct !DILexicalBlock(scope: !11448, file: !1637, line: 368, column: 52)
!11453 = !DILocation(line: 370, column: 17, scope: !11452)
!11454 = !DILocation(line: 375, column: 32, scope: !11382)
!11455 = !DILocation(line: 376, column: 27, scope: !11382)
!11456 = !DILocation(line: 378, column: 20, scope: !11457)
!11457 = distinct !DILexicalBlock(scope: !11382, file: !1637, line: 378, column: 9)
!11458 = !DILocation(line: 378, column: 50, scope: !11457)
!11459 = !DILocation(line: 0, scope: !11457)
!11460 = !DILocation(line: 384, column: 29, scope: !11382)
!11461 = !DILocation(line: 386, column: 5, scope: !11382)
!11462 = !DILocation(line: 387, column: 1, scope: !11382)
!11463 = distinct !DISubprogram(name: "sd_check_card_type", scope: !1637, file: !1637, line: 389, type: !11273, scopeLine: 390, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !11464)
!11464 = !{!11465, !11466}
!11465 = !DILocalVariable(name: "sd_port", arg: 1, scope: !11463, file: !1637, line: 389, type: !1808)
!11466 = !DILocalVariable(name: "card_type", scope: !11463, file: !1637, line: 391, type: !1983)
!11467 = !DILocation(line: 0, scope: !11463)
!11468 = !DILocation(line: 393, column: 22, scope: !11469)
!11469 = distinct !DILexicalBlock(scope: !11463, file: !1637, line: 393, column: 9)
!11470 = !DILocation(line: 393, column: 54, scope: !11469)
!11471 = !DILocation(line: 393, column: 9, scope: !11463)
!11472 = !DILocation(line: 395, column: 29, scope: !11473)
!11473 = distinct !DILexicalBlock(scope: !11469, file: !1637, line: 395, column: 16)
!11474 = !DILocation(line: 0, scope: !11473)
!11475 = !DILocation(line: 0, scope: !11469)
!11476 = !DILocation(line: 400, column: 1, scope: !11463)
!11477 = distinct !DISubprogram(name: "sd_get_card_id", scope: !1637, file: !1637, line: 402, type: !11100, scopeLine: 403, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !11478)
!11478 = !{!11479, !11480, !11481}
!11479 = !DILocalVariable(name: "sd_port", arg: 1, scope: !11477, file: !1637, line: 402, type: !1808)
!11480 = !DILocalVariable(name: "status", scope: !11477, file: !1637, line: 404, type: !1924)
!11481 = !DILocalVariable(name: "msdc_register_base", scope: !11477, file: !1637, line: 405, type: !1686)
!11482 = !DILocation(line: 0, scope: !11477)
!11483 = !DILocation(line: 407, column: 41, scope: !11477)
!11484 = !DILocation(line: 409, column: 14, scope: !11477)
!11485 = !DILocation(line: 410, column: 18, scope: !11486)
!11486 = distinct !DILexicalBlock(scope: !11477, file: !1637, line: 410, column: 9)
!11487 = !DILocation(line: 410, column: 9, scope: !11477)
!11488 = !DILocation(line: 414, column: 49, scope: !11477)
!11489 = !DILocation(line: 414, column: 27, scope: !11477)
!11490 = !DILocation(line: 415, column: 49, scope: !11477)
!11491 = !DILocation(line: 415, column: 27, scope: !11477)
!11492 = !DILocation(line: 416, column: 49, scope: !11477)
!11493 = !DILocation(line: 416, column: 27, scope: !11477)
!11494 = !DILocation(line: 417, column: 49, scope: !11477)
!11495 = !DILocation(line: 417, column: 27, scope: !11477)
!11496 = !DILocation(line: 419, column: 29, scope: !11477)
!11497 = !DILocation(line: 421, column: 5, scope: !11477)
!11498 = !DILocation(line: 422, column: 1, scope: !11477)
!11499 = distinct !DISubprogram(name: "sd_get_rca", scope: !1637, file: !1637, line: 424, type: !11100, scopeLine: 425, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !11500)
!11500 = !{!11501, !11502, !11503, !11504, !11505}
!11501 = !DILocalVariable(name: "sd_port", arg: 1, scope: !11499, file: !1637, line: 424, type: !1808)
!11502 = !DILocalVariable(name: "status", scope: !11499, file: !1637, line: 426, type: !1924)
!11503 = !DILocalVariable(name: "msdc_register_base", scope: !11499, file: !1637, line: 427, type: !1686)
!11504 = !DILocalVariable(name: "response", scope: !11499, file: !1637, line: 428, type: !61)
!11505 = !DILocalVariable(name: "state", scope: !11499, file: !1637, line: 429, type: !1715)
!11506 = !DILocation(line: 0, scope: !11499)
!11507 = !DILocation(line: 431, column: 41, scope: !11499)
!11508 = !DILocation(line: 433, column: 24, scope: !11509)
!11509 = distinct !DILexicalBlock(scope: !11499, file: !1637, line: 433, column: 9)
!11510 = !DILocation(line: 433, column: 34, scope: !11509)
!11511 = !DILocation(line: 433, column: 9, scope: !11499)
!11512 = !DILocation(line: 435, column: 18, scope: !11513)
!11513 = distinct !DILexicalBlock(scope: !11509, file: !1637, line: 433, column: 115)
!11514 = !DILocation(line: 436, column: 22, scope: !11515)
!11515 = distinct !DILexicalBlock(scope: !11513, file: !1637, line: 436, column: 13)
!11516 = !DILocation(line: 436, column: 13, scope: !11513)
!11517 = !DILocation(line: 440, column: 40, scope: !11513)
!11518 = !DILocation(line: 441, column: 39, scope: !11513)
!11519 = !DILocation(line: 442, column: 5, scope: !11513)
!11520 = !DILocation(line: 444, column: 18, scope: !11521)
!11521 = distinct !DILexicalBlock(scope: !11509, file: !1637, line: 442, column: 12)
!11522 = !DILocation(line: 445, column: 22, scope: !11523)
!11523 = distinct !DILexicalBlock(scope: !11521, file: !1637, line: 445, column: 13)
!11524 = !DILocation(line: 445, column: 13, scope: !11521)
!11525 = !DILocation(line: 449, column: 40, scope: !11521)
!11526 = !DILocation(line: 451, column: 18, scope: !11521)
!11527 = !DILocation(line: 452, column: 22, scope: !11528)
!11528 = distinct !DILexicalBlock(scope: !11521, file: !1637, line: 452, column: 13)
!11529 = !DILocation(line: 452, column: 13, scope: !11521)
!11530 = !DILocation(line: 456, column: 40, scope: !11521)
!11531 = !DILocation(line: 459, column: 22, scope: !11532)
!11532 = distinct !DILexicalBlock(scope: !11521, file: !1637, line: 459, column: 13)
!11533 = !DILocation(line: 459, column: 13, scope: !11521)
!11534 = !DILocation(line: 0, scope: !11509)
!11535 = !DILocation(line: 466, column: 29, scope: !11499)
!11536 = !DILocation(line: 468, column: 5, scope: !11499)
!11537 = !DILocation(line: 469, column: 1, scope: !11499)
!11538 = distinct !DISubprogram(name: "sd_acommand42", scope: !1637, file: !1637, line: 471, type: !11100, scopeLine: 472, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !11539)
!11539 = !{!11540, !11541}
!11540 = !DILocalVariable(name: "sd_port", arg: 1, scope: !11538, file: !1637, line: 471, type: !1808)
!11541 = !DILocalVariable(name: "status", scope: !11538, file: !1637, line: 473, type: !1924)
!11542 = !DILocation(line: 0, scope: !11538)
!11543 = !DILocation(line: 475, column: 56, scope: !11538)
!11544 = !DILocation(line: 475, column: 14, scope: !11538)
!11545 = !DILocation(line: 476, column: 16, scope: !11546)
!11546 = distinct !DILexicalBlock(scope: !11538, file: !1637, line: 476, column: 9)
!11547 = !DILocation(line: 476, column: 9, scope: !11538)
!11548 = !DILocation(line: 481, column: 14, scope: !11538)
!11549 = !DILocation(line: 482, column: 16, scope: !11550)
!11550 = distinct !DILexicalBlock(scope: !11538, file: !1637, line: 482, column: 9)
!11551 = !DILocation(line: 482, column: 9, scope: !11538)
!11552 = !DILocation(line: 486, column: 14, scope: !11538)
!11553 = !DILocation(line: 492, column: 1, scope: !11538)
!11554 = distinct !DISubprogram(name: "sd_check_card_status", scope: !1637, file: !1637, line: 635, type: !11100, scopeLine: 636, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !11555)
!11555 = !{!11556, !11557, !11558}
!11556 = !DILocalVariable(name: "sd_port", arg: 1, scope: !11554, file: !1637, line: 635, type: !1808)
!11557 = !DILocalVariable(name: "msdc_register_base", scope: !11554, file: !1637, line: 637, type: !1686)
!11558 = !DILocalVariable(name: "response", scope: !11554, file: !1637, line: 638, type: !61)
!11559 = !DILocation(line: 0, scope: !11554)
!11560 = !DILocation(line: 640, column: 41, scope: !11554)
!11561 = !DILocation(line: 642, column: 36, scope: !11554)
!11562 = !DILocation(line: 644, column: 20, scope: !11563)
!11563 = distinct !DILexicalBlock(scope: !11554, file: !1637, line: 644, column: 9)
!11564 = !DILocation(line: 644, column: 9, scope: !11554)
!11565 = !DILocation(line: 651, column: 1, scope: !11554)
!11566 = distinct !DISubprogram(name: "sd_get_bit_field_value", scope: !1637, file: !1637, line: 495, type: !11567, scopeLine: 496, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !11569)
!11567 = !DISubroutineType(types: !11568)
!11568 = !{null, !1055, !1055, !1212, !1212}
!11569 = !{!11570, !11571, !11572, !11573, !11574, !11575, !11576}
!11570 = !DILocalVariable(name: "destination", arg: 1, scope: !11566, file: !1637, line: 495, type: !1055)
!11571 = !DILocalVariable(name: "source", arg: 2, scope: !11566, file: !1637, line: 495, type: !1055)
!11572 = !DILocalVariable(name: "start_bit", arg: 3, scope: !11566, file: !1637, line: 495, type: !1212)
!11573 = !DILocalVariable(name: "width", arg: 4, scope: !11566, file: !1637, line: 495, type: !1212)
!11574 = !DILocalVariable(name: "i", scope: !11566, file: !1637, line: 497, type: !1212)
!11575 = !DILocalVariable(name: "bytes", scope: !11566, file: !1637, line: 498, type: !1212)
!11576 = !DILocalVariable(name: "bits", scope: !11566, file: !1637, line: 498, type: !1212)
!11577 = !DILocation(line: 0, scope: !11566)
!11578 = !DILocation(line: 500, column: 29, scope: !11566)
!11579 = !DILocation(line: 500, column: 35, scope: !11566)
!11580 = !DILocation(line: 500, column: 56, scope: !11566)
!11581 = !DILocation(line: 500, column: 46, scope: !11566)
!11582 = !DILocation(line: 500, column: 44, scope: !11566)
!11583 = !DILocation(line: 500, column: 41, scope: !11566)
!11584 = !DILocation(line: 500, column: 5, scope: !11566)
!11585 = !DILocation(line: 501, column: 19, scope: !11586)
!11586 = distinct !DILexicalBlock(scope: !11587, file: !1637, line: 501, column: 5)
!11587 = distinct !DILexicalBlock(scope: !11566, file: !1637, line: 501, column: 5)
!11588 = !DILocation(line: 501, column: 5, scope: !11587)
!11589 = !DILocation(line: 502, column: 28, scope: !11590)
!11590 = distinct !DILexicalBlock(scope: !11586, file: !1637, line: 501, column: 33)
!11591 = !DILocation(line: 502, column: 33, scope: !11590)
!11592 = !DILocation(line: 503, column: 17, scope: !11590)
!11593 = !DILocation(line: 504, column: 59, scope: !11590)
!11594 = !DILocation(line: 504, column: 50, scope: !11590)
!11595 = !DILocation(line: 504, column: 68, scope: !11590)
!11596 = !DILocation(line: 504, column: 77, scope: !11590)
!11597 = !DILocation(line: 504, column: 88, scope: !11590)
!11598 = !DILocation(line: 504, column: 82, scope: !11590)
!11599 = !DILocation(line: 504, column: 28, scope: !11590)
!11600 = !DILocation(line: 504, column: 23, scope: !11590)
!11601 = !DILocation(line: 504, column: 35, scope: !11590)
!11602 = !DILocation(line: 501, column: 29, scope: !11586)
!11603 = distinct !{!11603, !11588, !11604}
!11604 = !DILocation(line: 505, column: 5, scope: !11587)
!11605 = !DILocation(line: 506, column: 1, scope: !11566)
!11606 = distinct !DISubprogram(name: "sd_analysis_csd", scope: !1637, file: !1637, line: 508, type: !11607, scopeLine: 509, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !11609)
!11607 = !DISubroutineType(types: !11608)
!11608 = !{null, !1808, !1716}
!11609 = !{!11610, !11611, !11612, !11613}
!11610 = !DILocalVariable(name: "sd_port", arg: 1, scope: !11606, file: !1637, line: 508, type: !1808)
!11611 = !DILocalVariable(name: "csd", arg: 2, scope: !11606, file: !1637, line: 508, type: !1716)
!11612 = !DILocalVariable(name: "csd_pointer", scope: !11606, file: !1637, line: 510, type: !1055)
!11613 = !DILocalVariable(name: "c_size_mult", scope: !11606, file: !1637, line: 511, type: !61)
!11614 = !DILocation(line: 0, scope: !11606)
!11615 = !DILocation(line: 511, column: 5, scope: !11606)
!11616 = !DILocation(line: 513, column: 19, scope: !11606)
!11617 = !DILocation(line: 515, column: 5, scope: !11606)
!11618 = !DILocation(line: 516, column: 5, scope: !11606)
!11619 = !DILocation(line: 517, column: 5, scope: !11606)
!11620 = !DILocation(line: 518, column: 5, scope: !11606)
!11621 = !DILocation(line: 519, column: 5, scope: !11606)
!11622 = !DILocation(line: 520, column: 5, scope: !11606)
!11623 = !DILocation(line: 521, column: 5, scope: !11606)
!11624 = !DILocation(line: 522, column: 5, scope: !11606)
!11625 = !DILocation(line: 523, column: 5, scope: !11606)
!11626 = !DILocation(line: 524, column: 5, scope: !11606)
!11627 = !DILocation(line: 525, column: 5, scope: !11606)
!11628 = !DILocation(line: 526, column: 5, scope: !11606)
!11629 = !DILocation(line: 527, column: 5, scope: !11606)
!11630 = !DILocation(line: 528, column: 5, scope: !11606)
!11631 = !DILocation(line: 529, column: 5, scope: !11606)
!11632 = !DILocation(line: 531, column: 62, scope: !11606)
!11633 = !DILocation(line: 531, column: 40, scope: !11606)
!11634 = !DILocation(line: 531, column: 36, scope: !11606)
!11635 = !DILocation(line: 532, column: 63, scope: !11606)
!11636 = !DILocation(line: 532, column: 41, scope: !11606)
!11637 = !DILocation(line: 532, column: 37, scope: !11606)
!11638 = !DILocation(line: 534, column: 28, scope: !11639)
!11639 = distinct !DILexicalBlock(scope: !11606, file: !1637, line: 534, column: 9)
!11640 = !DILocation(line: 534, column: 9, scope: !11639)
!11641 = !DILocation(line: 534, column: 46, scope: !11639)
!11642 = !DILocation(line: 535, column: 44, scope: !11643)
!11643 = distinct !DILexicalBlock(scope: !11639, file: !1637, line: 534, column: 88)
!11644 = !DILocation(line: 536, column: 5, scope: !11643)
!11645 = !DILocation(line: 539, column: 24, scope: !11646)
!11646 = distinct !DILexicalBlock(scope: !11606, file: !1637, line: 539, column: 9)
!11647 = !DILocation(line: 539, column: 58, scope: !11646)
!11648 = !DILocation(line: 540, column: 9, scope: !11649)
!11649 = distinct !DILexicalBlock(scope: !11646, file: !1637, line: 539, column: 113)
!11650 = !DILocation(line: 541, column: 9, scope: !11649)
!11651 = !DILocation(line: 542, column: 9, scope: !11649)
!11652 = !DILocation(line: 543, column: 9, scope: !11649)
!11653 = !DILocation(line: 545, column: 69, scope: !11649)
!11654 = !DILocation(line: 545, column: 88, scope: !11649)
!11655 = !DILocation(line: 545, column: 114, scope: !11649)
!11656 = !DILocation(line: 545, column: 93, scope: !11649)
!11657 = !DILocation(line: 545, column: 47, scope: !11649)
!11658 = !DILocation(line: 546, column: 69, scope: !11649)
!11659 = !DILocation(line: 546, column: 88, scope: !11649)
!11660 = !DILocation(line: 546, column: 93, scope: !11649)
!11661 = !DILocation(line: 546, column: 47, scope: !11649)
!11662 = !DILocation(line: 548, column: 5, scope: !11649)
!11663 = !DILocation(line: 549, column: 9, scope: !11664)
!11664 = distinct !DILexicalBlock(scope: !11646, file: !1637, line: 548, column: 12)
!11665 = !DILocation(line: 550, column: 9, scope: !11664)
!11666 = !DILocation(line: 551, column: 9, scope: !11664)
!11667 = !DILocation(line: 553, column: 61, scope: !11664)
!11668 = !DILocation(line: 553, column: 73, scope: !11664)
!11669 = !DILocation(line: 553, column: 40, scope: !11664)
!11670 = !DILocation(line: 0, scope: !11646)
!11671 = !DILocation(line: 557, column: 24, scope: !11672)
!11672 = distinct !DILexicalBlock(scope: !11606, file: !1637, line: 557, column: 9)
!11673 = !DILocation(line: 557, column: 34, scope: !11672)
!11674 = !DILocation(line: 557, column: 63, scope: !11672)
!11675 = !DILocation(line: 558, column: 9, scope: !11676)
!11676 = distinct !DILexicalBlock(scope: !11672, file: !1637, line: 557, column: 119)
!11677 = !DILocation(line: 561, column: 69, scope: !11676)
!11678 = !DILocation(line: 561, column: 76, scope: !11676)
!11679 = !DILocation(line: 561, column: 39, scope: !11676)
!11680 = !DILocation(line: 561, column: 87, scope: !11676)
!11681 = !DILocation(line: 562, column: 5, scope: !11676)
!11682 = !DILocation(line: 563, column: 9, scope: !11683)
!11683 = distinct !DILexicalBlock(scope: !11672, file: !1637, line: 562, column: 12)
!11684 = !DILocation(line: 564, column: 9, scope: !11683)
!11685 = !DILocation(line: 567, column: 69, scope: !11683)
!11686 = !DILocation(line: 567, column: 76, scope: !11683)
!11687 = !DILocation(line: 567, column: 39, scope: !11683)
!11688 = !DILocation(line: 567, column: 90, scope: !11683)
!11689 = !DILocation(line: 567, column: 102, scope: !11683)
!11690 = !DILocation(line: 567, column: 86, scope: !11683)
!11691 = !DILocation(line: 567, column: 83, scope: !11683)
!11692 = !DILocation(line: 567, column: 129, scope: !11683)
!11693 = !DILocation(line: 567, column: 110, scope: !11683)
!11694 = !DILocation(line: 567, column: 81, scope: !11683)
!11695 = !DILocation(line: 567, column: 108, scope: !11683)
!11696 = !DILocation(line: 0, scope: !11672)
!11697 = !DILocation(line: 569, column: 1, scope: !11606)
!11698 = distinct !DISubprogram(name: "sd_get_csd", scope: !1637, file: !1637, line: 572, type: !11100, scopeLine: 573, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !11699)
!11699 = !{!11700, !11701, !11702}
!11700 = !DILocalVariable(name: "sd_port", arg: 1, scope: !11698, file: !1637, line: 572, type: !1808)
!11701 = !DILocalVariable(name: "status", scope: !11698, file: !1637, line: 574, type: !1924)
!11702 = !DILocalVariable(name: "msdc_register_base", scope: !11698, file: !1637, line: 575, type: !1686)
!11703 = !DILocation(line: 0, scope: !11698)
!11704 = !DILocation(line: 577, column: 41, scope: !11698)
!11705 = !DILocation(line: 579, column: 79, scope: !11698)
!11706 = !DILocation(line: 579, column: 83, scope: !11698)
!11707 = !DILocation(line: 579, column: 14, scope: !11698)
!11708 = !DILocation(line: 580, column: 18, scope: !11709)
!11709 = distinct !DILexicalBlock(scope: !11698, file: !1637, line: 580, column: 9)
!11710 = !DILocation(line: 580, column: 9, scope: !11698)
!11711 = !DILocation(line: 584, column: 37, scope: !11698)
!11712 = !DILocation(line: 584, column: 15, scope: !11698)
!11713 = !DILocation(line: 585, column: 37, scope: !11698)
!11714 = !DILocation(line: 585, column: 15, scope: !11698)
!11715 = !DILocation(line: 586, column: 37, scope: !11698)
!11716 = !DILocation(line: 586, column: 15, scope: !11698)
!11717 = !DILocation(line: 587, column: 37, scope: !11698)
!11718 = !DILocation(line: 587, column: 15, scope: !11698)
!11719 = !DILocation(line: 589, column: 5, scope: !11698)
!11720 = !DILocation(line: 591, column: 5, scope: !11698)
!11721 = !DILocation(line: 592, column: 1, scope: !11698)
!11722 = distinct !DISubprogram(name: "sd_set_dsr", scope: !1637, file: !1637, line: 595, type: !11100, scopeLine: 596, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !11723)
!11723 = !{!11724}
!11724 = !DILocalVariable(name: "sd_port", arg: 1, scope: !11722, file: !1637, line: 595, type: !1808)
!11725 = !DILocation(line: 0, scope: !11722)
!11726 = !DILocation(line: 597, column: 13, scope: !11722)
!11727 = !DILocation(line: 597, column: 5, scope: !11722)
!11728 = distinct !DISubprogram(name: "sd_wait_card_not_busy", scope: !1637, file: !1637, line: 600, type: !11100, scopeLine: 601, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !11729)
!11729 = !{!11730, !11731, !11732, !11733, !11734}
!11730 = !DILocalVariable(name: "sd_port", arg: 1, scope: !11728, file: !1637, line: 600, type: !1808)
!11731 = !DILocalVariable(name: "msdc_register_base", scope: !11728, file: !1637, line: 602, type: !1686)
!11732 = !DILocalVariable(name: "start_count", scope: !11728, file: !1637, line: 603, type: !61)
!11733 = !DILocalVariable(name: "end_count", scope: !11728, file: !1637, line: 604, type: !61)
!11734 = !DILocalVariable(name: "count", scope: !11728, file: !1637, line: 605, type: !61)
!11735 = !DILocation(line: 0, scope: !11728)
!11736 = !DILocation(line: 603, column: 5, scope: !11728)
!11737 = !DILocation(line: 603, column: 14, scope: !11728)
!11738 = !DILocation(line: 604, column: 5, scope: !11728)
!11739 = !DILocation(line: 604, column: 14, scope: !11728)
!11740 = !DILocation(line: 605, column: 5, scope: !11728)
!11741 = !DILocation(line: 605, column: 14, scope: !11728)
!11742 = !DILocation(line: 607, column: 41, scope: !11728)
!11743 = !DILocation(line: 609, column: 5, scope: !11728)
!11744 = !DILocation(line: 610, column: 5, scope: !11728)
!11745 = !DILocation(line: 610, column: 12, scope: !11728)
!11746 = !DILocation(line: 610, column: 27, scope: !11728)
!11747 = !DILocation(line: 610, column: 30, scope: !11728)
!11748 = !DILocation(line: 611, column: 9, scope: !11749)
!11749 = distinct !DILexicalBlock(scope: !11728, file: !1637, line: 610, column: 74)
!11750 = !DILocation(line: 612, column: 36, scope: !11749)
!11751 = !DILocation(line: 612, column: 48, scope: !11749)
!11752 = !DILocation(line: 612, column: 9, scope: !11749)
!11753 = !DILocation(line: 613, column: 13, scope: !11754)
!11754 = distinct !DILexicalBlock(scope: !11749, file: !1637, line: 613, column: 13)
!11755 = !DILocation(line: 613, column: 19, scope: !11754)
!11756 = !DILocation(line: 613, column: 13, scope: !11749)
!11757 = distinct !{!11757, !11744, !11758}
!11758 = !DILocation(line: 617, column: 5, scope: !11728)
!11759 = !DILocation(line: 614, column: 14, scope: !11760)
!11760 = distinct !DILexicalBlock(scope: !11754, file: !1637, line: 613, column: 48)
!11761 = !DILocation(line: 615, column: 14, scope: !11760)
!11762 = !DILocation(line: 619, column: 5, scope: !11728)
!11763 = !DILocation(line: 620, column: 5, scope: !11728)
!11764 = !DILocation(line: 620, column: 32, scope: !11728)
!11765 = !DILocation(line: 620, column: 40, scope: !11728)
!11766 = !DILocation(line: 621, column: 9, scope: !11767)
!11767 = distinct !DILexicalBlock(scope: !11728, file: !1637, line: 620, column: 66)
!11768 = !DILocation(line: 622, column: 36, scope: !11767)
!11769 = !DILocation(line: 622, column: 48, scope: !11767)
!11770 = !DILocation(line: 622, column: 9, scope: !11767)
!11771 = !DILocation(line: 623, column: 13, scope: !11772)
!11772 = distinct !DILexicalBlock(scope: !11767, file: !1637, line: 623, column: 13)
!11773 = !DILocation(line: 623, column: 19, scope: !11772)
!11774 = !DILocation(line: 623, column: 13, scope: !11767)
!11775 = distinct !{!11775, !11763, !11776}
!11776 = !DILocation(line: 627, column: 5, scope: !11728)
!11777 = !DILocation(line: 624, column: 14, scope: !11778)
!11778 = distinct !DILexicalBlock(scope: !11772, file: !1637, line: 623, column: 48)
!11779 = !DILocation(line: 625, column: 14, scope: !11778)
!11780 = !DILocation(line: 630, column: 25, scope: !11728)
!11781 = !DILocation(line: 632, column: 5, scope: !11728)
!11782 = !DILocation(line: 633, column: 1, scope: !11728)
!11783 = distinct !DISubprogram(name: "sd_select_card", scope: !1637, file: !1637, line: 653, type: !11237, scopeLine: 654, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !11784)
!11784 = !{!11785, !11786, !11787}
!11785 = !DILocalVariable(name: "sd_port", arg: 1, scope: !11783, file: !1637, line: 653, type: !1808)
!11786 = !DILocalVariable(name: "rca", arg: 2, scope: !11783, file: !1637, line: 653, type: !61)
!11787 = !DILocalVariable(name: "status", scope: !11783, file: !1637, line: 655, type: !1924)
!11788 = !DILocation(line: 0, scope: !11783)
!11789 = !DILocation(line: 657, column: 58, scope: !11783)
!11790 = !DILocation(line: 657, column: 14, scope: !11783)
!11791 = !DILocation(line: 658, column: 16, scope: !11792)
!11792 = distinct !DILexicalBlock(scope: !11783, file: !1637, line: 658, column: 9)
!11793 = !DILocation(line: 658, column: 9, scope: !11783)
!11794 = !DILocation(line: 662, column: 14, scope: !11783)
!11795 = !DILocation(line: 663, column: 16, scope: !11796)
!11796 = distinct !DILexicalBlock(scope: !11783, file: !1637, line: 663, column: 9)
!11797 = !DILocation(line: 663, column: 9, scope: !11783)
!11798 = !DILocation(line: 667, column: 14, scope: !11783)
!11799 = !DILocation(line: 673, column: 1, scope: !11783)
!11800 = distinct !DISubprogram(name: "sd_set_block_length", scope: !1637, file: !1637, line: 675, type: !11237, scopeLine: 676, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !11801)
!11801 = !{!11802, !11803, !11804, !11805}
!11802 = !DILocalVariable(name: "sd_port", arg: 1, scope: !11800, file: !1637, line: 675, type: !1808)
!11803 = !DILocalVariable(name: "block_length", arg: 2, scope: !11800, file: !1637, line: 675, type: !61)
!11804 = !DILocalVariable(name: "status", scope: !11800, file: !1637, line: 677, type: !1924)
!11805 = !DILocalVariable(name: "msdc_register_base", scope: !11800, file: !1637, line: 678, type: !1686)
!11806 = !DILocation(line: 0, scope: !11800)
!11807 = !DILocation(line: 681, column: 41, scope: !11800)
!11808 = !DILocation(line: 682, column: 22, scope: !11809)
!11809 = distinct !DILexicalBlock(scope: !11800, file: !1637, line: 682, column: 9)
!11810 = !DILocation(line: 682, column: 9, scope: !11800)
!11811 = !DILocation(line: 686, column: 14, scope: !11800)
!11812 = !DILocation(line: 687, column: 16, scope: !11813)
!11813 = distinct !DILexicalBlock(scope: !11800, file: !1637, line: 687, column: 9)
!11814 = !DILocation(line: 687, column: 9, scope: !11800)
!11815 = !DILocation(line: 691, column: 14, scope: !11800)
!11816 = !DILocation(line: 692, column: 16, scope: !11817)
!11817 = distinct !DILexicalBlock(scope: !11800, file: !1637, line: 692, column: 9)
!11818 = !DILocation(line: 692, column: 9, scope: !11800)
!11819 = !DILocation(line: 696, column: 33, scope: !11800)
!11820 = !DILocation(line: 698, column: 56, scope: !11800)
!11821 = !DILocation(line: 698, column: 64, scope: !11800)
!11822 = !DILocation(line: 698, column: 89, scope: !11800)
!11823 = !DILocation(line: 698, column: 33, scope: !11800)
!11824 = !DILocation(line: 700, column: 5, scope: !11800)
!11825 = !DILocation(line: 701, column: 1, scope: !11800)
!11826 = distinct !DISubprogram(name: "sd_analysis_scr", scope: !1637, file: !1637, line: 703, type: !11827, scopeLine: 704, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !11829)
!11827 = !DISubroutineType(types: !11828)
!11828 = !{!1924, !1808, !1716}
!11829 = !{!11830, !11831, !11832}
!11830 = !DILocalVariable(name: "sd_port", arg: 1, scope: !11826, file: !1637, line: 703, type: !1808)
!11831 = !DILocalVariable(name: "scr", arg: 2, scope: !11826, file: !1637, line: 703, type: !1716)
!11832 = !DILocalVariable(name: "scr_pointer", scope: !11826, file: !1637, line: 705, type: !1055)
!11833 = !DILocation(line: 0, scope: !11826)
!11834 = !DILocation(line: 707, column: 19, scope: !11826)
!11835 = !DILocation(line: 709, column: 5, scope: !11826)
!11836 = !DILocation(line: 710, column: 78, scope: !11826)
!11837 = !DILocation(line: 710, column: 5, scope: !11826)
!11838 = !DILocation(line: 711, column: 5, scope: !11826)
!11839 = !DILocation(line: 712, column: 5, scope: !11826)
!11840 = !DILocation(line: 714, column: 5, scope: !11826)
!11841 = distinct !DISubprogram(name: "mmc_switch", scope: !1637, file: !1637, line: 719, type: !11237, scopeLine: 720, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !11842)
!11842 = !{!11843, !11844, !11845, !11846, !11847, !11848}
!11843 = !DILocalVariable(name: "sd_port", arg: 1, scope: !11841, file: !1637, line: 719, type: !1808)
!11844 = !DILocalVariable(name: "argument", arg: 2, scope: !11841, file: !1637, line: 719, type: !61)
!11845 = !DILocalVariable(name: "status", scope: !11841, file: !1637, line: 721, type: !1924)
!11846 = !DILocalVariable(name: "response", scope: !11841, file: !1637, line: 722, type: !61)
!11847 = !DILocalVariable(name: "msdc_register_base", scope: !11841, file: !1637, line: 723, type: !1686)
!11848 = !DILabel(scope: !11841, name: "error", file: !1637, line: 768)
!11849 = !DILocation(line: 0, scope: !11841)
!11850 = !DILocation(line: 725, column: 41, scope: !11841)
!11851 = !DILocation(line: 726, column: 14, scope: !11841)
!11852 = !DILocation(line: 727, column: 16, scope: !11853)
!11853 = distinct !DILexicalBlock(scope: !11841, file: !1637, line: 727, column: 9)
!11854 = !DILocation(line: 727, column: 9, scope: !11841)
!11855 = !DILocation(line: 731, column: 14, scope: !11841)
!11856 = !DILocation(line: 732, column: 16, scope: !11857)
!11857 = distinct !DILexicalBlock(scope: !11841, file: !1637, line: 732, column: 9)
!11858 = !DILocation(line: 732, column: 9, scope: !11841)
!11859 = !DILocation(line: 737, column: 70, scope: !11841)
!11860 = !DILocation(line: 737, column: 74, scope: !11841)
!11861 = !DILocation(line: 737, column: 14, scope: !11841)
!11862 = !DILocation(line: 738, column: 18, scope: !11863)
!11863 = distinct !DILexicalBlock(scope: !11841, file: !1637, line: 738, column: 9)
!11864 = !DILocation(line: 738, column: 9, scope: !11841)
!11865 = !DILocation(line: 742, column: 14, scope: !11841)
!11866 = !DILocation(line: 743, column: 18, scope: !11867)
!11867 = distinct !DILexicalBlock(scope: !11841, file: !1637, line: 743, column: 9)
!11868 = !DILocation(line: 743, column: 9, scope: !11841)
!11869 = !DILocation(line: 747, column: 36, scope: !11841)
!11870 = !DILocation(line: 748, column: 18, scope: !11871)
!11871 = distinct !DILexicalBlock(scope: !11841, file: !1637, line: 748, column: 9)
!11872 = !DILocation(line: 748, column: 9, scope: !11841)
!11873 = !DILocation(line: 754, column: 14, scope: !11841)
!11874 = !DILocation(line: 755, column: 18, scope: !11875)
!11875 = distinct !DILexicalBlock(scope: !11841, file: !1637, line: 755, column: 9)
!11876 = !DILocation(line: 755, column: 9, scope: !11841)
!11877 = !DILocation(line: 760, column: 14, scope: !11841)
!11878 = !DILocation(line: 761, column: 18, scope: !11879)
!11879 = distinct !DILexicalBlock(scope: !11841, file: !1637, line: 761, column: 9)
!11880 = !DILocation(line: 761, column: 9, scope: !11841)
!11881 = !DILocation(line: 771, column: 1, scope: !11841)
!11882 = distinct !DISubprogram(name: "mmc_get_extended_csd", scope: !1637, file: !1637, line: 914, type: !11100, scopeLine: 915, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !11883)
!11883 = !{!11884, !11885, !11886, !11887, !11888}
!11884 = !DILocalVariable(name: "sd_port", arg: 1, scope: !11882, file: !1637, line: 914, type: !1808)
!11885 = !DILocalVariable(name: "status", scope: !11882, file: !1637, line: 916, type: !1924)
!11886 = !DILocalVariable(name: "index", scope: !11882, file: !1637, line: 917, type: !61)
!11887 = !DILocalVariable(name: "msdc_register_base", scope: !11882, file: !1637, line: 918, type: !1686)
!11888 = !DILabel(scope: !11882, name: "error", file: !1637, line: 949)
!11889 = !DILocation(line: 0, scope: !11882)
!11890 = !DILocation(line: 920, column: 41, scope: !11882)
!11891 = !DILocation(line: 921, column: 14, scope: !11882)
!11892 = !DILocation(line: 922, column: 18, scope: !11893)
!11893 = distinct !DILexicalBlock(scope: !11882, file: !1637, line: 922, column: 9)
!11894 = !DILocation(line: 922, column: 9, scope: !11882)
!11895 = !DILocation(line: 926, column: 14, scope: !11882)
!11896 = !DILocation(line: 927, column: 18, scope: !11897)
!11897 = distinct !DILexicalBlock(scope: !11882, file: !1637, line: 927, column: 9)
!11898 = !DILocation(line: 927, column: 9, scope: !11882)
!11899 = !DILocation(line: 931, column: 5, scope: !11882)
!11900 = !DILocation(line: 932, column: 33, scope: !11901)
!11901 = distinct !DILexicalBlock(scope: !11902, file: !1637, line: 932, column: 13)
!11902 = distinct !DILexicalBlock(scope: !11882, file: !1637, line: 931, column: 25)
!11903 = !DILocation(line: 932, column: 42, scope: !11901)
!11904 = !DILocation(line: 932, column: 13, scope: !11902)
!11905 = !DILocation(line: 933, column: 63, scope: !11906)
!11906 = distinct !DILexicalBlock(scope: !11901, file: !1637, line: 932, column: 67)
!11907 = !DILocation(line: 933, column: 32, scope: !11906)
!11908 = !DILocation(line: 933, column: 41, scope: !11906)
!11909 = !DILocation(line: 934, column: 19, scope: !11906)
!11910 = !DILocation(line: 935, column: 9, scope: !11906)
!11911 = !DILocation(line: 931, column: 18, scope: !11882)
!11912 = distinct !{!11912, !11899, !11913}
!11913 = !DILocation(line: 936, column: 5, scope: !11882)
!11914 = !DILocation(line: 938, column: 14, scope: !11882)
!11915 = !DILocation(line: 939, column: 18, scope: !11916)
!11916 = distinct !DILexicalBlock(scope: !11882, file: !1637, line: 939, column: 9)
!11917 = !DILocation(line: 939, column: 9, scope: !11882)
!11918 = !DILocation(line: 943, column: 5, scope: !11882)
!11919 = !DILocation(line: 945, column: 32, scope: !11882)
!11920 = !DILocation(line: 947, column: 5, scope: !11882)
!11921 = !DILocation(line: 949, column: 1, scope: !11882)
!11922 = !DILocation(line: 950, column: 5, scope: !11882)
!11923 = !DILocation(line: 951, column: 5, scope: !11882)
!11924 = !DILocation(line: 952, column: 1, scope: !11882)
!11925 = distinct !DISubprogram(name: "sd_get_scr", scope: !1637, file: !1637, line: 773, type: !11100, scopeLine: 774, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !11926)
!11926 = !{!11927, !11928, !11929, !11930, !11931}
!11927 = !DILocalVariable(name: "sd_port", arg: 1, scope: !11925, file: !1637, line: 773, type: !1808)
!11928 = !DILocalVariable(name: "status", scope: !11925, file: !1637, line: 775, type: !1924)
!11929 = !DILocalVariable(name: "i", scope: !11925, file: !1637, line: 776, type: !61)
!11930 = !DILocalVariable(name: "scr", scope: !11925, file: !1637, line: 777, type: !2211)
!11931 = !DILocalVariable(name: "msdc_register_base", scope: !11925, file: !1637, line: 778, type: !1686)
!11932 = !DILocation(line: 0, scope: !11925)
!11933 = !DILocation(line: 777, column: 5, scope: !11925)
!11934 = !DILocation(line: 777, column: 14, scope: !11925)
!11935 = !DILocation(line: 780, column: 41, scope: !11925)
!11936 = !DILocation(line: 781, column: 14, scope: !11925)
!11937 = !DILocation(line: 782, column: 16, scope: !11938)
!11938 = distinct !DILexicalBlock(scope: !11925, file: !1637, line: 782, column: 9)
!11939 = !DILocation(line: 782, column: 9, scope: !11925)
!11940 = !DILocation(line: 786, column: 56, scope: !11925)
!11941 = !DILocation(line: 786, column: 14, scope: !11925)
!11942 = !DILocation(line: 787, column: 16, scope: !11943)
!11943 = distinct !DILexicalBlock(scope: !11925, file: !1637, line: 787, column: 9)
!11944 = !DILocation(line: 787, column: 9, scope: !11925)
!11945 = !DILocation(line: 791, column: 14, scope: !11925)
!11946 = !DILocation(line: 792, column: 16, scope: !11947)
!11947 = distinct !DILexicalBlock(scope: !11925, file: !1637, line: 792, column: 9)
!11948 = !DILocation(line: 792, column: 9, scope: !11925)
!11949 = !DILocation(line: 796, column: 14, scope: !11925)
!11950 = !DILocation(line: 797, column: 16, scope: !11951)
!11951 = distinct !DILexicalBlock(scope: !11925, file: !1637, line: 797, column: 9)
!11952 = !DILocation(line: 797, column: 9, scope: !11925)
!11953 = !DILocation(line: 801, column: 5, scope: !11925)
!11954 = !DILocation(line: 802, column: 33, scope: !11955)
!11955 = distinct !DILexicalBlock(scope: !11956, file: !1637, line: 802, column: 13)
!11956 = distinct !DILexicalBlock(scope: !11925, file: !1637, line: 801, column: 19)
!11957 = !DILocation(line: 802, column: 42, scope: !11955)
!11958 = !DILocation(line: 802, column: 13, scope: !11956)
!11959 = !DILocation(line: 803, column: 58, scope: !11960)
!11960 = distinct !DILexicalBlock(scope: !11955, file: !1637, line: 802, column: 63)
!11961 = !DILocation(line: 803, column: 31, scope: !11960)
!11962 = !DILocation(line: 803, column: 36, scope: !11960)
!11963 = !DILocation(line: 804, column: 14, scope: !11960)
!11964 = !DILocation(line: 805, column: 9, scope: !11960)
!11965 = !DILocation(line: 801, column: 14, scope: !11925)
!11966 = distinct !{!11966, !11953, !11967}
!11967 = !DILocation(line: 806, column: 5, scope: !11925)
!11968 = !DILocation(line: 808, column: 15, scope: !11925)
!11969 = !DILocation(line: 809, column: 16, scope: !11970)
!11970 = distinct !DILexicalBlock(scope: !11925, file: !1637, line: 809, column: 9)
!11971 = !DILocation(line: 809, column: 9, scope: !11925)
!11972 = !DILocation(line: 813, column: 30, scope: !11925)
!11973 = !DILocation(line: 813, column: 5, scope: !11925)
!11974 = !DILocation(line: 815, column: 5, scope: !11925)
!11975 = !DILocation(line: 817, column: 5, scope: !11925)
!11976 = !DILocation(line: 818, column: 1, scope: !11925)
!11977 = distinct !DISubprogram(name: "sd_analysis_command6_switch_status", scope: !1637, file: !1637, line: 820, type: !11978, scopeLine: 821, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !11989)
!11978 = !DISubroutineType(types: !11979)
!11979 = !{null, !11980, !1055}
!11980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11981, size: 32)
!11981 = !DIDerivedType(tag: DW_TAG_typedef, name: "sd_command6_switch_status_t", file: !1481, line: 224, baseType: !11982)
!11982 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1481, line: 218, size: 64, elements: !11983)
!11983 = !{!11984, !11985, !11986, !11987, !11988}
!11984 = !DIDerivedType(tag: DW_TAG_member, name: "max_current", scope: !11982, file: !1481, line: 219, baseType: !1212, size: 16)
!11985 = !DIDerivedType(tag: DW_TAG_member, name: "group1_info", scope: !11982, file: !1481, line: 220, baseType: !1212, size: 16, offset: 16)
!11986 = !DIDerivedType(tag: DW_TAG_member, name: "group1_status", scope: !11982, file: !1481, line: 221, baseType: !1212, size: 16, offset: 32)
!11987 = !DIDerivedType(tag: DW_TAG_member, name: "group1_result", scope: !11982, file: !1481, line: 222, baseType: !159, size: 8, offset: 48)
!11988 = !DIDerivedType(tag: DW_TAG_member, name: "structure_version", scope: !11982, file: !1481, line: 223, baseType: !159, size: 8, offset: 56)
!11989 = !{!11990, !11991}
!11990 = !DILocalVariable(name: "command6_switch_status", arg: 1, scope: !11977, file: !1637, line: 820, type: !11980)
!11991 = !DILocalVariable(name: "buffer", arg: 2, scope: !11977, file: !1637, line: 820, type: !1055)
!11992 = !DILocation(line: 0, scope: !11977)
!11993 = !DILocation(line: 822, column: 46, scope: !11977)
!11994 = !DILocation(line: 822, column: 45, scope: !11977)
!11995 = !DILocation(line: 822, column: 66, scope: !11977)
!11996 = !DILocation(line: 822, column: 95, scope: !11977)
!11997 = !DILocation(line: 822, column: 75, scope: !11977)
!11998 = !DILocation(line: 822, column: 74, scope: !11977)
!11999 = !DILocation(line: 822, column: 72, scope: !11977)
!12000 = !DILocation(line: 822, column: 29, scope: !11977)
!12001 = !DILocation(line: 822, column: 41, scope: !11977)
!12002 = !DILocation(line: 823, column: 66, scope: !11977)
!12003 = !DILocation(line: 823, column: 46, scope: !11977)
!12004 = !DILocation(line: 823, column: 45, scope: !11977)
!12005 = !DILocation(line: 823, column: 73, scope: !11977)
!12006 = !DILocation(line: 823, column: 102, scope: !11977)
!12007 = !DILocation(line: 823, column: 82, scope: !11977)
!12008 = !DILocation(line: 823, column: 81, scope: !11977)
!12009 = !DILocation(line: 823, column: 79, scope: !11977)
!12010 = !DILocation(line: 823, column: 29, scope: !11977)
!12011 = !DILocation(line: 823, column: 41, scope: !11977)
!12012 = !DILocation(line: 824, column: 67, scope: !11977)
!12013 = !DILocation(line: 824, column: 47, scope: !11977)
!12014 = !DILocation(line: 824, column: 74, scope: !11977)
!12015 = !DILocation(line: 824, column: 29, scope: !11977)
!12016 = !DILocation(line: 824, column: 43, scope: !11977)
!12017 = !DILocation(line: 825, column: 70, scope: !11977)
!12018 = !DILocation(line: 825, column: 50, scope: !11977)
!12019 = !DILocation(line: 825, column: 29, scope: !11977)
!12020 = !DILocation(line: 825, column: 47, scope: !11977)
!12021 = !DILocation(line: 826, column: 68, scope: !11977)
!12022 = !DILocation(line: 826, column: 48, scope: !11977)
!12023 = !DILocation(line: 826, column: 47, scope: !11977)
!12024 = !DILocation(line: 826, column: 75, scope: !11977)
!12025 = !DILocation(line: 826, column: 104, scope: !11977)
!12026 = !DILocation(line: 826, column: 84, scope: !11977)
!12027 = !DILocation(line: 826, column: 83, scope: !11977)
!12028 = !DILocation(line: 826, column: 81, scope: !11977)
!12029 = !DILocation(line: 826, column: 29, scope: !11977)
!12030 = !DILocation(line: 826, column: 43, scope: !11977)
!12031 = !DILocation(line: 827, column: 1, scope: !11977)
!12032 = distinct !DISubprogram(name: "sd_query_switch_high_speed", scope: !1637, file: !1637, line: 831, type: !11237, scopeLine: 832, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !12033)
!12033 = !{!12034, !12035, !12036, !12037, !12039, !12040, !12041, !12042}
!12034 = !DILocalVariable(name: "sd_port", arg: 1, scope: !12032, file: !1637, line: 831, type: !1808)
!12035 = !DILocalVariable(name: "argument", arg: 2, scope: !12032, file: !1637, line: 831, type: !61)
!12036 = !DILocalVariable(name: "status", scope: !12032, file: !1637, line: 833, type: !1924)
!12037 = !DILocalVariable(name: "command6_response", scope: !12032, file: !1637, line: 834, type: !12038)
!12038 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 512, elements: !85)
!12039 = !DILocalVariable(name: "index", scope: !12032, file: !1637, line: 835, type: !61)
!12040 = !DILocalVariable(name: "read_word_count", scope: !12032, file: !1637, line: 836, type: !61)
!12041 = !DILocalVariable(name: "switch_status", scope: !12032, file: !1637, line: 837, type: !11981)
!12042 = !DILocalVariable(name: "msdc_register_base", scope: !12032, file: !1637, line: 838, type: !1686)
!12043 = !DILocation(line: 0, scope: !12032)
!12044 = !DILocation(line: 834, column: 5, scope: !12032)
!12045 = !DILocation(line: 834, column: 14, scope: !12032)
!12046 = !DILocation(line: 837, column: 5, scope: !12032)
!12047 = !DILocation(line: 837, column: 33, scope: !12032)
!12048 = !DILocation(line: 840, column: 41, scope: !12032)
!12049 = !DILocation(line: 842, column: 56, scope: !12032)
!12050 = !DILocation(line: 842, column: 64, scope: !12032)
!12051 = !DILocation(line: 842, column: 91, scope: !12032)
!12052 = !DILocation(line: 842, column: 33, scope: !12032)
!12053 = !DILocation(line: 844, column: 57, scope: !12032)
!12054 = !DILocation(line: 844, column: 66, scope: !12032)
!12055 = !DILocation(line: 844, column: 94, scope: !12032)
!12056 = !DILocation(line: 844, column: 34, scope: !12032)
!12057 = !DILocation(line: 847, column: 59, scope: !12032)
!12058 = !DILocation(line: 847, column: 70, scope: !12032)
!12059 = !DILocation(line: 847, column: 36, scope: !12032)
!12060 = !DILocation(line: 850, column: 14, scope: !12032)
!12061 = !DILocation(line: 851, column: 16, scope: !12062)
!12062 = distinct !DILexicalBlock(scope: !12032, file: !1637, line: 851, column: 9)
!12063 = !DILocation(line: 851, column: 9, scope: !12032)
!12064 = !DILocation(line: 855, column: 14, scope: !12032)
!12065 = !DILocation(line: 856, column: 16, scope: !12066)
!12066 = distinct !DILexicalBlock(scope: !12032, file: !1637, line: 856, column: 9)
!12067 = !DILocation(line: 856, column: 9, scope: !12032)
!12068 = !DILocation(line: 862, column: 5, scope: !12032)
!12069 = !DILocation(line: 863, column: 33, scope: !12070)
!12070 = distinct !DILexicalBlock(scope: !12071, file: !1637, line: 863, column: 13)
!12071 = distinct !DILexicalBlock(scope: !12032, file: !1637, line: 862, column: 37)
!12072 = !DILocation(line: 863, column: 42, scope: !12070)
!12073 = !DILocation(line: 863, column: 13, scope: !12071)
!12074 = !DILocation(line: 864, column: 64, scope: !12075)
!12075 = distinct !DILexicalBlock(scope: !12070, file: !1637, line: 863, column: 63)
!12076 = !DILocation(line: 864, column: 33, scope: !12075)
!12077 = !DILocation(line: 864, column: 42, scope: !12075)
!12078 = !DILocation(line: 865, column: 18, scope: !12075)
!12079 = !DILocation(line: 866, column: 9, scope: !12075)
!12080 = !DILocation(line: 862, column: 18, scope: !12032)
!12081 = distinct !{!12081, !12068, !12082}
!12082 = !DILocation(line: 867, column: 5, scope: !12032)
!12083 = !DILocation(line: 870, column: 5, scope: !12032)
!12084 = !DILocation(line: 872, column: 28, scope: !12085)
!12085 = distinct !DILexicalBlock(scope: !12032, file: !1637, line: 872, column: 9)
!12086 = !DILocation(line: 872, column: 11, scope: !12085)
!12087 = !DILocation(line: 872, column: 9, scope: !12032)
!12088 = !DILocation(line: 875, column: 29, scope: !12089)
!12089 = distinct !DILexicalBlock(scope: !12032, file: !1637, line: 875, column: 9)
!12090 = !DILocation(line: 875, column: 44, scope: !12089)
!12091 = !DILocation(line: 875, column: 68, scope: !12089)
!12092 = !DILocation(line: 875, column: 82, scope: !12089)
!12093 = !DILocation(line: 875, column: 50, scope: !12089)
!12094 = !DILocation(line: 875, column: 9, scope: !12032)
!12095 = !DILocation(line: 879, column: 66, scope: !12096)
!12096 = distinct !DILexicalBlock(scope: !12032, file: !1637, line: 879, column: 9)
!12097 = !DILocation(line: 879, column: 78, scope: !12096)
!12098 = !DILocation(line: 879, column: 9, scope: !12032)
!12099 = !DILocation(line: 882, column: 23, scope: !12100)
!12100 = distinct !DILexicalBlock(scope: !12032, file: !1637, line: 882, column: 9)
!12101 = !DILocation(line: 882, column: 37, scope: !12100)
!12102 = !DILocation(line: 887, column: 1, scope: !12032)
!12103 = distinct !DISubprogram(name: "sd_select_high_speed", scope: !1637, file: !1637, line: 890, type: !11100, scopeLine: 891, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !12104)
!12104 = !{!12105, !12106, !12107}
!12105 = !DILocalVariable(name: "sd_port", arg: 1, scope: !12103, file: !1637, line: 890, type: !1808)
!12106 = !DILocalVariable(name: "status", scope: !12103, file: !1637, line: 892, type: !1924)
!12107 = !DILocalVariable(name: "i", scope: !12103, file: !1637, line: 893, type: !61)
!12108 = !DILocation(line: 0, scope: !12103)
!12109 = !DILocation(line: 895, column: 5, scope: !12103)
!12110 = !DILocation(line: 896, column: 18, scope: !12111)
!12111 = distinct !DILexicalBlock(scope: !12103, file: !1637, line: 895, column: 8)
!12112 = !DILocation(line: 897, column: 13, scope: !12111)
!12113 = !DILocation(line: 898, column: 22, scope: !12114)
!12114 = distinct !DILexicalBlock(scope: !12115, file: !1637, line: 897, column: 33)
!12115 = distinct !DILexicalBlock(scope: !12111, file: !1637, line: 897, column: 13)
!12116 = !DILocation(line: 899, column: 17, scope: !12114)
!12117 = !DILocation(line: 900, column: 46, scope: !12118)
!12118 = distinct !DILexicalBlock(scope: !12119, file: !1637, line: 899, column: 37)
!12119 = distinct !DILexicalBlock(scope: !12114, file: !1637, line: 899, column: 17)
!12120 = !DILocation(line: 901, column: 17, scope: !12118)
!12121 = !DILocation(line: 0, scope: !12111)
!12122 = !DILocation(line: 908, column: 15, scope: !12103)
!12123 = !DILocation(line: 908, column: 5, scope: !12111)
!12124 = distinct !{!12124, !12109, !12125}
!12125 = !DILocation(line: 908, column: 17, scope: !12103)
!12126 = !DILocation(line: 910, column: 5, scope: !12103)
!12127 = distinct !DISubprogram(name: "mmc_is_version_44", scope: !1637, file: !1637, line: 955, type: !343, scopeLine: 956, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !345)
!12128 = !DILocation(line: 957, column: 28, scope: !12129)
!12129 = distinct !DILexicalBlock(scope: !12127, file: !1637, line: 957, column: 9)
!12130 = !DILocation(line: 957, column: 37, scope: !12129)
!12131 = !DILocation(line: 957, column: 49, scope: !12129)
!12132 = !DILocation(line: 957, column: 9, scope: !12127)
!12133 = !DILocation(line: 958, column: 46, scope: !12134)
!12134 = distinct !DILexicalBlock(scope: !12135, file: !1637, line: 958, column: 13)
!12135 = distinct !DILexicalBlock(scope: !12129, file: !1637, line: 957, column: 80)
!12136 = !DILocation(line: 958, column: 15, scope: !12134)
!12137 = !DILocation(line: 0, scope: !12129)
!12138 = !DILocation(line: 966, column: 1, scope: !12127)
!12139 = distinct !DISubprogram(name: "mmc_set_high_speed", scope: !1637, file: !1637, line: 969, type: !11100, scopeLine: 970, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !12140)
!12140 = !{!12141, !12142, !12143}
!12141 = !DILocalVariable(name: "sd_port", arg: 1, scope: !12139, file: !1637, line: 969, type: !1808)
!12142 = !DILocalVariable(name: "status", scope: !12139, file: !1637, line: 971, type: !1924)
!12143 = !DILabel(scope: !12139, name: "error", file: !1637, line: 998)
!12144 = !DILocation(line: 0, scope: !12139)
!12145 = !DILocation(line: 973, column: 14, scope: !12139)
!12146 = !DILocation(line: 974, column: 18, scope: !12147)
!12147 = distinct !DILexicalBlock(scope: !12139, file: !1637, line: 974, column: 9)
!12148 = !DILocation(line: 974, column: 9, scope: !12139)
!12149 = !DILocation(line: 978, column: 14, scope: !12139)
!12150 = !DILocation(line: 979, column: 18, scope: !12151)
!12151 = distinct !DILexicalBlock(scope: !12139, file: !1637, line: 979, column: 9)
!12152 = !DILocation(line: 979, column: 9, scope: !12139)
!12153 = !DILocation(line: 983, column: 24, scope: !12154)
!12154 = distinct !DILexicalBlock(scope: !12139, file: !1637, line: 983, column: 9)
!12155 = !DILocation(line: 983, column: 34, scope: !12154)
!12156 = !DILocation(line: 983, column: 9, scope: !12139)
!12157 = !DILocation(line: 984, column: 76, scope: !12158)
!12158 = distinct !DILexicalBlock(scope: !12154, file: !1637, line: 983, column: 61)
!12159 = !DILocation(line: 984, column: 85, scope: !12158)
!12160 = !DILocation(line: 984, column: 55, scope: !12158)
!12161 = !DILocation(line: 984, column: 39, scope: !12158)
!12162 = !DILocation(line: 984, column: 37, scope: !12158)
!12163 = !DILocation(line: 985, column: 5, scope: !12158)
!12164 = !DILocation(line: 987, column: 5, scope: !12139)
!12165 = !DILocation(line: 990, column: 28, scope: !12166)
!12166 = distinct !DILexicalBlock(scope: !12139, file: !1637, line: 990, column: 9)
!12167 = !DILocation(line: 990, column: 37, scope: !12166)
!12168 = !DILocation(line: 990, column: 9, scope: !12166)
!12169 = !DILocation(line: 990, column: 47, scope: !12166)
!12170 = !DILocation(line: 990, column: 9, scope: !12139)
!12171 = !DILocation(line: 992, column: 54, scope: !12172)
!12172 = distinct !DILexicalBlock(scope: !12166, file: !1637, line: 992, column: 16)
!12173 = !DILocation(line: 992, column: 16, scope: !12166)
!12174 = !DILocation(line: 0, scope: !12166)
!12175 = !DILocation(line: 1000, column: 1, scope: !12139)
!12176 = distinct !DISubprogram(name: "sd_stop_transfer", scope: !1637, file: !1637, line: 1003, type: !11100, scopeLine: 1004, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !12177)
!12177 = !{!12178, !12179, !12180}
!12178 = !DILocalVariable(name: "sd_port", arg: 1, scope: !12176, file: !1637, line: 1003, type: !1808)
!12179 = !DILocalVariable(name: "status", scope: !12176, file: !1637, line: 1005, type: !1924)
!12180 = !DILocalVariable(name: "retry", scope: !12176, file: !1637, line: 1006, type: !61)
!12181 = !DILocation(line: 0, scope: !12176)
!12182 = !DILocation(line: 1008, column: 5, scope: !12176)
!12183 = !DILocation(line: 1011, column: 18, scope: !12184)
!12184 = distinct !DILexicalBlock(scope: !12185, file: !1637, line: 1010, column: 33)
!12185 = distinct !DILexicalBlock(scope: !12186, file: !1637, line: 1010, column: 13)
!12186 = distinct !DILexicalBlock(scope: !12176, file: !1637, line: 1008, column: 24)
!12187 = !DILocation(line: 1008, column: 15, scope: !12176)
!12188 = distinct !{!12188, !12182, !12189}
!12189 = !DILocation(line: 1015, column: 5, scope: !12176)
!12190 = !DILocation(line: 1009, column: 18, scope: !12186)
!12191 = !DILocation(line: 1010, column: 20, scope: !12185)
!12192 = !DILocation(line: 1010, column: 13, scope: !12186)
!12193 = !DILocation(line: 1021, column: 14, scope: !12176)
!12194 = !DILocation(line: 1027, column: 1, scope: !12176)
!12195 = distinct !DISubprogram(name: "sd_get_card_status", scope: !1637, file: !1637, line: 1028, type: !11827, scopeLine: 1029, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !12196)
!12196 = !{!12197, !12198, !12199, !12200}
!12197 = !DILocalVariable(name: "sd_port", arg: 1, scope: !12195, file: !1637, line: 1028, type: !1808)
!12198 = !DILocalVariable(name: "card_status", arg: 2, scope: !12195, file: !1637, line: 1028, type: !1716)
!12199 = !DILocalVariable(name: "status", scope: !12195, file: !1637, line: 1030, type: !1924)
!12200 = !DILocalVariable(name: "msdc_register_base", scope: !12195, file: !1637, line: 1031, type: !1686)
!12201 = !DILocation(line: 0, scope: !12195)
!12202 = !DILocation(line: 1034, column: 70, scope: !12195)
!12203 = !DILocation(line: 1034, column: 74, scope: !12195)
!12204 = !DILocation(line: 1034, column: 14, scope: !12195)
!12205 = !DILocation(line: 1035, column: 18, scope: !12206)
!12206 = distinct !DILexicalBlock(scope: !12195, file: !1637, line: 1035, column: 9)
!12207 = !DILocation(line: 1035, column: 9, scope: !12195)
!12208 = !DILocation(line: 1033, column: 41, scope: !12195)
!12209 = !DILocation(line: 1039, column: 40, scope: !12195)
!12210 = !DILocation(line: 1039, column: 18, scope: !12195)
!12211 = !DILocation(line: 1041, column: 5, scope: !12195)
!12212 = !DILocation(line: 1042, column: 1, scope: !12195)
!12213 = distinct !DISubprogram(name: "sd_send_erase_command", scope: !1637, file: !1637, line: 1045, type: !11200, scopeLine: 1046, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !12214)
!12214 = !{!12215, !12216, !12217, !12218, !12219}
!12215 = !DILocalVariable(name: "sd_port", arg: 1, scope: !12213, file: !1637, line: 1045, type: !1808)
!12216 = !DILocalVariable(name: "command", arg: 2, scope: !12213, file: !1637, line: 1045, type: !61)
!12217 = !DILocalVariable(name: "address", arg: 3, scope: !12213, file: !1637, line: 1045, type: !61)
!12218 = !DILocalVariable(name: "status", scope: !12213, file: !1637, line: 1047, type: !1924)
!12219 = !DILocalVariable(name: "card_status", scope: !12213, file: !1637, line: 1048, type: !61)
!12220 = !DILocation(line: 0, scope: !12213)
!12221 = !DILocation(line: 1048, column: 5, scope: !12213)
!12222 = !DILocation(line: 1050, column: 24, scope: !12223)
!12223 = distinct !DILexicalBlock(scope: !12213, file: !1637, line: 1050, column: 9)
!12224 = !DILocation(line: 1050, column: 9, scope: !12213)
!12225 = !DILocation(line: 1051, column: 18, scope: !12226)
!12226 = distinct !DILexicalBlock(scope: !12223, file: !1637, line: 1050, column: 36)
!12227 = !DILocation(line: 1052, column: 22, scope: !12228)
!12228 = distinct !DILexicalBlock(scope: !12226, file: !1637, line: 1052, column: 13)
!12229 = !DILocation(line: 1052, column: 13, scope: !12226)
!12230 = !DILocation(line: 1056, column: 18, scope: !12231)
!12231 = distinct !DILexicalBlock(scope: !12223, file: !1637, line: 1055, column: 12)
!12232 = !DILocation(line: 1057, column: 22, scope: !12233)
!12233 = distinct !DILexicalBlock(scope: !12231, file: !1637, line: 1057, column: 13)
!12234 = !DILocation(line: 1057, column: 13, scope: !12231)
!12235 = !DILocation(line: 1062, column: 14, scope: !12213)
!12236 = !DILocation(line: 1063, column: 18, scope: !12237)
!12237 = distinct !DILexicalBlock(scope: !12213, file: !1637, line: 1063, column: 9)
!12238 = !DILocation(line: 1063, column: 9, scope: !12213)
!12239 = !DILocation(line: 1068, column: 18, scope: !12240)
!12240 = distinct !DILexicalBlock(scope: !12241, file: !1637, line: 1067, column: 36)
!12241 = distinct !DILexicalBlock(scope: !12213, file: !1637, line: 1067, column: 9)
!12242 = !DILocation(line: 1069, column: 22, scope: !12243)
!12243 = distinct !DILexicalBlock(scope: !12240, file: !1637, line: 1069, column: 13)
!12244 = !DILocation(line: 1069, column: 13, scope: !12240)
!12245 = !DILocation(line: 1074, column: 22, scope: !12246)
!12246 = distinct !DILexicalBlock(scope: !12240, file: !1637, line: 1073, column: 12)
!12247 = !DILocation(line: 1075, column: 26, scope: !12248)
!12248 = distinct !DILexicalBlock(scope: !12246, file: !1637, line: 1075, column: 17)
!12249 = !DILocation(line: 1075, column: 17, scope: !12246)
!12250 = !DILocation(line: 1078, column: 20, scope: !12240)
!12251 = !DILocation(line: 1078, column: 100, scope: !12240)
!12252 = !DILocation(line: 1078, column: 9, scope: !12246)
!12253 = distinct !{!12253, !12254, !12255}
!12254 = !DILocation(line: 1073, column: 9, scope: !12240)
!12255 = !DILocation(line: 1078, column: 111, scope: !12240)
!12256 = !DILocation(line: 1082, column: 1, scope: !12213)
!12257 = distinct !DISubprogram(name: "sd_wait_last_block_complete", scope: !1637, file: !1637, line: 1084, type: !11100, scopeLine: 1085, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !12258)
!12258 = !{!12259, !12260}
!12259 = !DILocalVariable(name: "sd_port", arg: 1, scope: !12257, file: !1637, line: 1084, type: !1808)
!12260 = !DILocalVariable(name: "value", scope: !12257, file: !1637, line: 1086, type: !61)
!12261 = !DILocation(line: 0, scope: !12257)
!12262 = !DILocation(line: 1088, column: 17, scope: !12263)
!12263 = distinct !DILexicalBlock(scope: !12257, file: !1637, line: 1088, column: 9)
!12264 = !DILocation(line: 0, scope: !12263)
!12265 = !DILocation(line: 1094, column: 5, scope: !12257)
!12266 = !DILocation(line: 0, scope: !12267)
!12267 = distinct !DILexicalBlock(scope: !12268, file: !1637, line: 1095, column: 13)
!12268 = distinct !DILexicalBlock(scope: !12257, file: !1637, line: 1094, column: 8)
!12269 = !DILocation(line: 1100, column: 34, scope: !12270)
!12270 = distinct !DILexicalBlock(scope: !12268, file: !1637, line: 1100, column: 13)
!12271 = !DILocation(line: 1100, column: 24, scope: !12270)
!12272 = !DILocation(line: 1100, column: 13, scope: !12268)
!12273 = distinct !{!12273, !12265, !12274}
!12274 = !DILocation(line: 1104, column: 15, scope: !12257)
!12275 = !DILocation(line: 1106, column: 5, scope: !12257)
!12276 = distinct !DISubprogram(name: "sd_latch_read_blocks", scope: !1637, file: !1637, line: 1110, type: !12277, scopeLine: 1111, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !12279)
!12277 = !DISubroutineType(types: !12278)
!12278 = !{!1924, !1808, !1716, !61, !61}
!12279 = !{!12280, !12281, !12282, !12283, !12284, !12285, !12286, !12287, !12288, !12289, !12290, !12291, !12292}
!12280 = !DILocalVariable(name: "sd_port", arg: 1, scope: !12276, file: !1637, line: 1110, type: !1808)
!12281 = !DILocalVariable(name: "read_buffer", arg: 2, scope: !12276, file: !1637, line: 1110, type: !1716)
!12282 = !DILocalVariable(name: "read_address", arg: 3, scope: !12276, file: !1637, line: 1110, type: !61)
!12283 = !DILocalVariable(name: "block_number", arg: 4, scope: !12276, file: !1637, line: 1110, type: !61)
!12284 = !DILocalVariable(name: "status", scope: !12276, file: !1637, line: 1112, type: !1924)
!12285 = !DILocalVariable(name: "read_command", scope: !12276, file: !1637, line: 1113, type: !61)
!12286 = !DILocalVariable(name: "index", scope: !12276, file: !1637, line: 1114, type: !61)
!12287 = !DILocalVariable(name: "read_word_count", scope: !12276, file: !1637, line: 1115, type: !1549)
!12288 = !DILocalVariable(name: "response", scope: !12276, file: !1637, line: 1116, type: !61)
!12289 = !DILocalVariable(name: "block_multiplier", scope: !12276, file: !1637, line: 1117, type: !61)
!12290 = !DILocalVariable(name: "msdc_register_base", scope: !12276, file: !1637, line: 1118, type: !1686)
!12291 = !DILocalVariable(name: "data_status", scope: !12276, file: !1637, line: 1119, type: !61)
!12292 = !DILabel(scope: !12276, name: "error", file: !1637, line: 1217)
!12293 = !DILocation(line: 0, scope: !12276)
!12294 = !DILocation(line: 1121, column: 14, scope: !12295)
!12295 = distinct !DILexicalBlock(scope: !12276, file: !1637, line: 1121, column: 9)
!12296 = !DILocation(line: 1121, column: 9, scope: !12276)
!12297 = !DILocation(line: 1122, column: 9, scope: !12298)
!12298 = distinct !DILexicalBlock(scope: !12295, file: !1637, line: 1121, column: 30)
!12299 = !DILocation(line: 1123, column: 9, scope: !12298)
!12300 = !DILocation(line: 1126, column: 41, scope: !12276)
!12301 = !DILocation(line: 1128, column: 57, scope: !12276)
!12302 = !DILocation(line: 1128, column: 66, scope: !12276)
!12303 = !DILocation(line: 1128, column: 94, scope: !12276)
!12304 = !DILocation(line: 1128, column: 34, scope: !12276)
!12305 = !DILocation(line: 1131, column: 59, scope: !12276)
!12306 = !DILocation(line: 1131, column: 70, scope: !12276)
!12307 = !DILocation(line: 1131, column: 36, scope: !12276)
!12308 = !DILocation(line: 1135, column: 25, scope: !12276)
!12309 = !DILocation(line: 1140, column: 25, scope: !12310)
!12310 = distinct !DILexicalBlock(scope: !12276, file: !1637, line: 1140, column: 9)
!12311 = !DILocation(line: 1140, column: 65, scope: !12310)
!12312 = !DILocation(line: 1149, column: 34, scope: !12276)
!12313 = !DILocation(line: 1149, column: 20, scope: !12276)
!12314 = !DILocation(line: 1150, column: 67, scope: !12276)
!12315 = !DILocation(line: 1150, column: 14, scope: !12276)
!12316 = !DILocation(line: 1151, column: 16, scope: !12317)
!12317 = distinct !DILexicalBlock(scope: !12276, file: !1637, line: 1151, column: 9)
!12318 = !DILocation(line: 1151, column: 9, scope: !12276)
!12319 = !DILocation(line: 1155, column: 14, scope: !12276)
!12320 = !DILocation(line: 1156, column: 16, scope: !12321)
!12321 = distinct !DILexicalBlock(scope: !12276, file: !1637, line: 1156, column: 9)
!12322 = !DILocation(line: 1156, column: 9, scope: !12276)
!12323 = !DILocation(line: 1160, column: 35, scope: !12276)
!12324 = !DILocation(line: 1160, column: 58, scope: !12276)
!12325 = !DILocation(line: 1162, column: 18, scope: !12276)
!12326 = !DILocation(line: 1162, column: 5, scope: !12276)
!12327 = !DILocation(line: 1164, column: 43, scope: !12328)
!12328 = distinct !DILexicalBlock(scope: !12276, file: !1637, line: 1162, column: 37)
!12329 = !DILocation(line: 1165, column: 25, scope: !12330)
!12330 = distinct !DILexicalBlock(scope: !12328, file: !1637, line: 1165, column: 13)
!12331 = !DILocation(line: 1165, column: 13, scope: !12328)
!12332 = !DILocation(line: 1166, column: 13, scope: !12333)
!12333 = distinct !DILexicalBlock(scope: !12330, file: !1637, line: 1165, column: 31)
!12334 = !DILocation(line: 1167, column: 29, scope: !12335)
!12335 = distinct !DILexicalBlock(scope: !12333, file: !1637, line: 1167, column: 17)
!12336 = !DILocation(line: 1167, column: 17, scope: !12333)
!12337 = !DILocation(line: 1170, column: 36, scope: !12338)
!12338 = distinct !DILexicalBlock(scope: !12335, file: !1637, line: 1170, column: 24)
!12339 = !DILocation(line: 1170, column: 24, scope: !12335)
!12340 = !DILocation(line: 1176, column: 33, scope: !12341)
!12341 = distinct !DILexicalBlock(scope: !12328, file: !1637, line: 1176, column: 13)
!12342 = !DILocation(line: 1176, column: 42, scope: !12341)
!12343 = !DILocation(line: 1176, column: 13, scope: !12328)
!12344 = !DILocation(line: 1177, column: 58, scope: !12345)
!12345 = distinct !DILexicalBlock(scope: !12341, file: !1637, line: 1176, column: 63)
!12346 = !DILocation(line: 1177, column: 27, scope: !12345)
!12347 = !DILocation(line: 1177, column: 36, scope: !12345)
!12348 = !DILocation(line: 1178, column: 18, scope: !12345)
!12349 = !DILocation(line: 1179, column: 9, scope: !12345)
!12350 = !DILocation(line: 1162, column: 12, scope: !12276)
!12351 = distinct !{!12351, !12326, !12352}
!12352 = !DILocation(line: 1180, column: 5, scope: !12276)
!12353 = !DILocation(line: 1182, column: 5, scope: !12276)
!12354 = !DILocation(line: 1184, column: 25, scope: !12276)
!12355 = !DILocation(line: 1186, column: 11, scope: !12356)
!12356 = distinct !DILexicalBlock(scope: !12276, file: !1637, line: 1186, column: 9)
!12357 = !DILocation(line: 1186, column: 9, scope: !12276)
!12358 = !DILocation(line: 1187, column: 18, scope: !12359)
!12359 = distinct !DILexicalBlock(scope: !12356, file: !1637, line: 1186, column: 28)
!12360 = !DILocation(line: 1188, column: 20, scope: !12361)
!12361 = distinct !DILexicalBlock(scope: !12359, file: !1637, line: 1188, column: 13)
!12362 = !DILocation(line: 1188, column: 13, scope: !12359)
!12363 = !DILocation(line: 1192, column: 18, scope: !12364)
!12364 = distinct !DILexicalBlock(scope: !12356, file: !1637, line: 1191, column: 12)
!12365 = !DILocation(line: 1193, column: 20, scope: !12366)
!12366 = distinct !DILexicalBlock(scope: !12364, file: !1637, line: 1193, column: 13)
!12367 = !DILocation(line: 1193, column: 13, scope: !12364)
!12368 = !DILocation(line: 1198, column: 5, scope: !12276)
!12369 = !DILocation(line: 1198, column: 12, scope: !12276)
!12370 = !DILocation(line: 1200, column: 74, scope: !12371)
!12371 = distinct !DILexicalBlock(scope: !12276, file: !1637, line: 1198, column: 56)
!12372 = !DILocation(line: 1200, column: 78, scope: !12371)
!12373 = !DILocation(line: 1200, column: 18, scope: !12371)
!12374 = !DILocation(line: 1201, column: 22, scope: !12375)
!12375 = distinct !DILexicalBlock(scope: !12371, file: !1637, line: 1201, column: 13)
!12376 = !DILocation(line: 1201, column: 13, scope: !12371)
!12377 = !DILocation(line: 1205, column: 40, scope: !12371)
!12378 = !DILocation(line: 1207, column: 64, scope: !12379)
!12379 = distinct !DILexicalBlock(scope: !12371, file: !1637, line: 1207, column: 13)
!12380 = distinct !{!12380, !12368, !12381}
!12381 = !DILocation(line: 1211, column: 5, scope: !12276)
!12382 = !DILocation(line: 1213, column: 5, scope: !12276)
!12383 = !DILocation(line: 1215, column: 5, scope: !12276)
!12384 = !DILocation(line: 1217, column: 1, scope: !12276)
!12385 = !DILocation(line: 1219, column: 33, scope: !12276)
!12386 = !DILocation(line: 1220, column: 5, scope: !12276)
!12387 = !DILocation(line: 1221, column: 25, scope: !12276)
!12388 = !DILocation(line: 1222, column: 9, scope: !12276)
!12389 = !DILocation(line: 1223, column: 9, scope: !12390)
!12390 = distinct !DILexicalBlock(scope: !12391, file: !1637, line: 1222, column: 27)
!12391 = distinct !DILexicalBlock(scope: !12276, file: !1637, line: 1222, column: 9)
!12392 = !DILocation(line: 1224, column: 5, scope: !12390)
!12393 = !DILocation(line: 1227, column: 1, scope: !12276)
!12394 = distinct !DISubprogram(name: "sd_latch_command_test", scope: !1637, file: !1637, line: 1229, type: !12395, scopeLine: 1230, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !12397)
!12395 = !DISubroutineType(types: !12396)
!12396 = !{!91, !1808}
!12397 = !{!12398, !12399, !12400}
!12398 = !DILocalVariable(name: "sd_port", arg: 1, scope: !12394, file: !1637, line: 1229, type: !1808)
!12399 = !DILocalVariable(name: "status", scope: !12394, file: !1637, line: 1231, type: !1924)
!12400 = !DILocalVariable(name: "card_status", scope: !12394, file: !1637, line: 1232, type: !61)
!12401 = !DILocation(line: 0, scope: !12394)
!12402 = !DILocation(line: 1232, column: 5, scope: !12394)
!12403 = !DILocation(line: 1234, column: 14, scope: !12394)
!12404 = !DILocation(line: 1236, column: 18, scope: !12405)
!12405 = distinct !DILexicalBlock(scope: !12394, file: !1637, line: 1236, column: 9)
!12406 = !DILocation(line: 1241, column: 1, scope: !12394)
!12407 = distinct !DISubprogram(name: "sd_latch_data_test", scope: !1637, file: !1637, line: 1243, type: !12395, scopeLine: 1244, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !12408)
!12408 = !{!12409, !12410, !12411}
!12409 = !DILocalVariable(name: "sd_port", arg: 1, scope: !12407, file: !1637, line: 1243, type: !1808)
!12410 = !DILocalVariable(name: "status", scope: !12407, file: !1637, line: 1245, type: !1924)
!12411 = !DILocalVariable(name: "index", scope: !12407, file: !1637, line: 1246, type: !61)
!12412 = !DILocation(line: 0, scope: !12407)
!12413 = !DILocation(line: 1248, column: 14, scope: !12407)
!12414 = !DILocation(line: 1250, column: 18, scope: !12415)
!12415 = distinct !DILexicalBlock(scope: !12407, file: !1637, line: 1250, column: 9)
!12416 = !DILocation(line: 1250, column: 9, scope: !12407)
!12417 = !DILocation(line: 1254, column: 37, scope: !12418)
!12418 = distinct !DILexicalBlock(scope: !12419, file: !1637, line: 1254, column: 5)
!12419 = distinct !DILexicalBlock(scope: !12407, file: !1637, line: 1254, column: 5)
!12420 = !DILocation(line: 1254, column: 27, scope: !12418)
!12421 = !DILocation(line: 1254, column: 5, scope: !12419)
!12422 = distinct !{!12422, !12421, !12423}
!12423 = !DILocation(line: 1259, column: 5, scope: !12419)
!12424 = !DILocation(line: 1255, column: 35, scope: !12425)
!12425 = distinct !DILexicalBlock(scope: !12426, file: !1637, line: 1255, column: 13)
!12426 = distinct !DILexicalBlock(scope: !12418, file: !1637, line: 1254, column: 41)
!12427 = !DILocation(line: 1255, column: 22, scope: !12425)
!12428 = !DILocation(line: 1255, column: 13, scope: !12426)
!12429 = !DILocation(line: 1256, column: 13, scope: !12430)
!12430 = distinct !DILexicalBlock(scope: !12425, file: !1637, line: 1255, column: 93)
!12431 = !DILocation(line: 1257, column: 13, scope: !12430)
!12432 = !DILocation(line: 1261, column: 1, scope: !12407)
!12433 = distinct !DISubprogram(name: "sd_output_clock_tuning", scope: !1637, file: !1637, line: 1264, type: !12434, scopeLine: 1265, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !12436)
!12434 = !DISubroutineType(types: !12435)
!12435 = !{!91, !1808, !61}
!12436 = !{!12437, !12438, !12439, !12440, !12441}
!12437 = !DILocalVariable(name: "sd_port", arg: 1, scope: !12433, file: !1637, line: 1264, type: !1808)
!12438 = !DILocalVariable(name: "clock", arg: 2, scope: !12433, file: !1637, line: 1264, type: !61)
!12439 = !DILocalVariable(name: "vcore_voltage", scope: !12433, file: !1637, line: 1266, type: !61)
!12440 = !DILocalVariable(name: "i", scope: !12433, file: !1637, line: 1267, type: !61)
!12441 = !DILabel(scope: !12433, name: "end", file: !1637, line: 1336)
!12442 = !DILocation(line: 0, scope: !12433)
!12443 = !DILocation(line: 1269, column: 21, scope: !12433)
!12444 = !DILocation(line: 1272, column: 5, scope: !12433)
!12445 = !DILocation(line: 1274, column: 9, scope: !12433)
!12446 = !DILocation(line: 1279, column: 9, scope: !12447)
!12447 = distinct !DILexicalBlock(scope: !12448, file: !1637, line: 1278, column: 41)
!12448 = distinct !DILexicalBlock(scope: !12433, file: !1637, line: 1278, column: 9)
!12449 = !DILocation(line: 1275, column: 9, scope: !12450)
!12450 = distinct !DILexicalBlock(scope: !12451, file: !1637, line: 1274, column: 42)
!12451 = distinct !DILexicalBlock(scope: !12433, file: !1637, line: 1274, column: 9)
!12452 = !DILocation(line: 1280, column: 19, scope: !12453)
!12453 = distinct !DILexicalBlock(scope: !12454, file: !1637, line: 1280, column: 17)
!12454 = distinct !DILexicalBlock(scope: !12447, file: !1637, line: 1279, column: 23)
!12455 = !DILocation(line: 1280, column: 17, scope: !12454)
!12456 = !DILocation(line: 1283, column: 100, scope: !12457)
!12457 = distinct !DILexicalBlock(scope: !12453, file: !1637, line: 1282, column: 20)
!12458 = !DILocation(line: 1283, column: 95, scope: !12457)
!12459 = !DILocation(line: 0, scope: !12453)
!12460 = !DILocation(line: 1285, column: 17, scope: !12461)
!12461 = distinct !DILexicalBlock(scope: !12454, file: !1637, line: 1285, column: 17)
!12462 = !DILocation(line: 1285, column: 48, scope: !12461)
!12463 = !DILocation(line: 1285, column: 51, scope: !12461)
!12464 = !DILocation(line: 1285, column: 17, scope: !12454)
!12465 = !DILocation(line: 1292, column: 14, scope: !12454)
!12466 = !DILocation(line: 1279, column: 18, scope: !12447)
!12467 = distinct !{!12467, !12446, !12468}
!12468 = !DILocation(line: 1293, column: 9, scope: !12447)
!12469 = !DILocation(line: 1295, column: 31, scope: !12470)
!12470 = distinct !DILexicalBlock(scope: !12448, file: !1637, line: 1295, column: 16)
!12471 = !DILocation(line: 1295, column: 49, scope: !12470)
!12472 = !DILocation(line: 1297, column: 77, scope: !12473)
!12473 = distinct !DILexicalBlock(scope: !12474, file: !1637, line: 1296, column: 23)
!12474 = distinct !DILexicalBlock(scope: !12470, file: !1637, line: 1295, column: 90)
!12475 = !DILocation(line: 1297, column: 82, scope: !12473)
!12476 = !DILocation(line: 1297, column: 13, scope: !12473)
!12477 = !DILocation(line: 1298, column: 17, scope: !12478)
!12478 = distinct !DILexicalBlock(scope: !12473, file: !1637, line: 1298, column: 17)
!12479 = !DILocation(line: 1298, column: 48, scope: !12478)
!12480 = !DILocation(line: 1298, column: 51, scope: !12478)
!12481 = !DILocation(line: 1298, column: 17, scope: !12473)
!12482 = !DILocation(line: 1305, column: 14, scope: !12473)
!12483 = !DILocation(line: 1296, column: 18, scope: !12474)
!12484 = !DILocation(line: 1296, column: 9, scope: !12474)
!12485 = distinct !{!12485, !12484, !12486}
!12486 = !DILocation(line: 1306, column: 9, scope: !12474)
!12487 = !DILocation(line: 1308, column: 31, scope: !12488)
!12488 = distinct !DILexicalBlock(scope: !12470, file: !1637, line: 1308, column: 16)
!12489 = !DILocation(line: 1308, column: 49, scope: !12488)
!12490 = !DILocation(line: 1318, column: 9, scope: !12491)
!12491 = distinct !DILexicalBlock(scope: !12488, file: !1637, line: 1317, column: 12)
!12492 = !DILocation(line: 1310, column: 82, scope: !12493)
!12493 = distinct !DILexicalBlock(scope: !12494, file: !1637, line: 1309, column: 23)
!12494 = distinct !DILexicalBlock(scope: !12488, file: !1637, line: 1308, column: 90)
!12495 = !DILocation(line: 1310, column: 13, scope: !12493)
!12496 = !DILocation(line: 1311, column: 17, scope: !12497)
!12497 = distinct !DILexicalBlock(scope: !12493, file: !1637, line: 1311, column: 17)
!12498 = !DILocation(line: 1311, column: 48, scope: !12497)
!12499 = !DILocation(line: 1311, column: 51, scope: !12497)
!12500 = !DILocation(line: 1311, column: 17, scope: !12493)
!12501 = !DILocation(line: 1314, column: 14, scope: !12493)
!12502 = !DILocation(line: 1309, column: 18, scope: !12494)
!12503 = !DILocation(line: 1309, column: 9, scope: !12494)
!12504 = distinct !{!12504, !12503, !12505}
!12505 = !DILocation(line: 1315, column: 9, scope: !12494)
!12506 = !DILocation(line: 1319, column: 19, scope: !12507)
!12507 = distinct !DILexicalBlock(scope: !12508, file: !1637, line: 1319, column: 17)
!12508 = distinct !DILexicalBlock(scope: !12491, file: !1637, line: 1318, column: 23)
!12509 = !DILocation(line: 1319, column: 17, scope: !12508)
!12510 = !DILocation(line: 1322, column: 100, scope: !12511)
!12511 = distinct !DILexicalBlock(scope: !12507, file: !1637, line: 1321, column: 20)
!12512 = !DILocation(line: 1322, column: 95, scope: !12511)
!12513 = !DILocation(line: 0, scope: !12507)
!12514 = !DILocation(line: 1324, column: 17, scope: !12515)
!12515 = distinct !DILexicalBlock(scope: !12508, file: !1637, line: 1324, column: 17)
!12516 = !DILocation(line: 1324, column: 48, scope: !12515)
!12517 = !DILocation(line: 1324, column: 51, scope: !12515)
!12518 = !DILocation(line: 1324, column: 17, scope: !12508)
!12519 = !DILocation(line: 1331, column: 14, scope: !12508)
!12520 = !DILocation(line: 1318, column: 18, scope: !12491)
!12521 = distinct !{!12521, !12490, !12522}
!12522 = !DILocation(line: 1332, column: 9, scope: !12491)
!12523 = !DILocation(line: 0, scope: !12448)
!12524 = !DILocation(line: 1337, column: 9, scope: !12525)
!12525 = distinct !DILexicalBlock(scope: !12433, file: !1637, line: 1337, column: 9)
!12526 = !DILocation(line: 1336, column: 1, scope: !12433)
!12527 = !DILocation(line: 1337, column: 53, scope: !12525)
!12528 = !DILocation(line: 1337, column: 9, scope: !12433)
!12529 = !DILocation(line: 1338, column: 9, scope: !12530)
!12530 = distinct !DILexicalBlock(scope: !12525, file: !1637, line: 1337, column: 62)
!12531 = !DILocation(line: 1339, column: 5, scope: !12530)
!12532 = !DILocation(line: 1342, column: 1, scope: !12433)
!12533 = distinct !DISubprogram(name: "sd_save_dma_interrupt_context", scope: !1637, file: !1637, line: 1344, type: !12534, scopeLine: 1345, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !12538)
!12534 = !DISubroutineType(types: !12535)
!12535 = !{null, !1808, !12536}
!12536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12537, size: 32)
!12537 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1802)
!12538 = !{!12539, !12540}
!12539 = !DILocalVariable(name: "sd_port", arg: 1, scope: !12533, file: !1637, line: 1344, type: !1808)
!12540 = !DILocalVariable(name: "context", arg: 2, scope: !12533, file: !1637, line: 1344, type: !12536)
!12541 = !DILocation(line: 0, scope: !12533)
!12542 = !DILocation(line: 1346, column: 5, scope: !12533)
!12543 = !DILocation(line: 1346, column: 41, scope: !12533)
!12544 = !DILocation(line: 1347, column: 1, scope: !12533)
!12545 = distinct !DISubprogram(name: "sd_wait_dma_interrupt_transfer_ready", scope: !1637, file: !1637, line: 1462, type: !9974, scopeLine: 1463, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !12546)
!12546 = !{!12547, !12548, !12549, !12550, !12551, !12552}
!12547 = !DILocalVariable(name: "sd_port", arg: 1, scope: !12545, file: !1637, line: 1462, type: !1808)
!12548 = !DILocalVariable(name: "response", scope: !12545, file: !1637, line: 1464, type: !61)
!12549 = !DILocalVariable(name: "status", scope: !12545, file: !1637, line: 1465, type: !1924)
!12550 = !DILocalVariable(name: "dma_channel", scope: !12545, file: !1637, line: 1466, type: !1270)
!12551 = !DILocalVariable(name: "msdc_register_base", scope: !12545, file: !1637, line: 1467, type: !1686)
!12552 = !DILabel(scope: !12545, name: "error", file: !1637, line: 1546)
!12553 = !DILocation(line: 0, scope: !12545)
!12554 = !DILocation(line: 1469, column: 41, scope: !12545)
!12555 = !DILocation(line: 1470, column: 19, scope: !12545)
!12556 = !DILocation(line: 1472, column: 14, scope: !12545)
!12557 = !DILocation(line: 1473, column: 16, scope: !12558)
!12558 = distinct !DILexicalBlock(scope: !12545, file: !1637, line: 1473, column: 9)
!12559 = !DILocation(line: 1473, column: 9, scope: !12545)
!12560 = !DILocation(line: 1477, column: 5, scope: !12545)
!12561 = !DILocation(line: 1478, column: 25, scope: !12545)
!12562 = !DILocation(line: 1480, column: 13, scope: !12563)
!12563 = distinct !DILexicalBlock(scope: !12545, file: !1637, line: 1480, column: 9)
!12564 = !DILocation(line: 1480, column: 47, scope: !12563)
!12565 = !DILocation(line: 1480, column: 11, scope: !12563)
!12566 = !DILocation(line: 1480, column: 9, scope: !12545)
!12567 = !DILocation(line: 1482, column: 65, scope: !12568)
!12568 = distinct !DILexicalBlock(scope: !12569, file: !1637, line: 1482, column: 13)
!12569 = distinct !DILexicalBlock(scope: !12563, file: !1637, line: 1480, column: 80)
!12570 = !DILocation(line: 1482, column: 28, scope: !12568)
!12571 = !DILocation(line: 1482, column: 13, scope: !12569)
!12572 = !DILocation(line: 1484, column: 22, scope: !12573)
!12573 = distinct !DILexicalBlock(scope: !12568, file: !1637, line: 1482, column: 73)
!12574 = !DILocation(line: 1490, column: 18, scope: !12569)
!12575 = !DILocation(line: 1492, column: 20, scope: !12576)
!12576 = distinct !DILexicalBlock(scope: !12569, file: !1637, line: 1492, column: 13)
!12577 = !DILocation(line: 1492, column: 13, scope: !12569)
!12578 = !DILocation(line: 1496, column: 18, scope: !12579)
!12579 = distinct !DILexicalBlock(scope: !12563, file: !1637, line: 1496, column: 16)
!12580 = !DILocation(line: 1496, column: 16, scope: !12563)
!12581 = !DILocation(line: 1497, column: 18, scope: !12582)
!12582 = distinct !DILexicalBlock(scope: !12579, file: !1637, line: 1496, column: 89)
!12583 = !DILocation(line: 1498, column: 20, scope: !12584)
!12584 = distinct !DILexicalBlock(scope: !12582, file: !1637, line: 1498, column: 13)
!12585 = !DILocation(line: 1498, column: 13, scope: !12582)
!12586 = !DILocation(line: 1503, column: 9, scope: !12587)
!12587 = distinct !DILexicalBlock(scope: !12545, file: !1637, line: 1503, column: 9)
!12588 = !DILocation(line: 1503, column: 9, scope: !12545)
!12589 = !DILocation(line: 1505, column: 74, scope: !12590)
!12590 = distinct !DILexicalBlock(scope: !12587, file: !1637, line: 1503, column: 53)
!12591 = !DILocation(line: 1505, column: 78, scope: !12590)
!12592 = !DILocation(line: 1505, column: 18, scope: !12590)
!12593 = !DILocation(line: 1506, column: 22, scope: !12594)
!12594 = distinct !DILexicalBlock(scope: !12590, file: !1637, line: 1506, column: 13)
!12595 = !DILocation(line: 1506, column: 13, scope: !12590)
!12596 = !DILocation(line: 1510, column: 40, scope: !12590)
!12597 = !DILocation(line: 1513, column: 23, scope: !12598)
!12598 = distinct !DILexicalBlock(scope: !12590, file: !1637, line: 1513, column: 13)
!12599 = !DILocation(line: 1513, column: 13, scope: !12590)
!12600 = !DILocation(line: 1514, column: 34, scope: !12601)
!12601 = distinct !DILexicalBlock(scope: !12598, file: !1637, line: 1513, column: 65)
!12602 = !DILocation(line: 1515, column: 14, scope: !12601)
!12603 = !DILocation(line: 1516, column: 14, scope: !12601)
!12604 = !DILocation(line: 1517, column: 14, scope: !12601)
!12605 = !DILocation(line: 1518, column: 14, scope: !12601)
!12606 = !DILocation(line: 1522, column: 64, scope: !12601)
!12607 = !DILocation(line: 1522, column: 17, scope: !12601)
!12608 = !DILocation(line: 1525, column: 14, scope: !12601)
!12609 = !DILocation(line: 1528, column: 35, scope: !12601)
!12610 = !DILocation(line: 1528, column: 14, scope: !12601)
!12611 = !DILocation(line: 1530, column: 80, scope: !12601)
!12612 = !DILocation(line: 1531, column: 37, scope: !12601)
!12613 = !DILocation(line: 1533, column: 14, scope: !12601)
!12614 = !DILocation(line: 1536, column: 13, scope: !12615)
!12615 = distinct !DILexicalBlock(scope: !12598, file: !1637, line: 1535, column: 14)
!12616 = !DILocation(line: 1537, column: 39, scope: !12615)
!12617 = !DILocation(line: 1537, column: 98, scope: !12615)
!12618 = !DILocation(line: 1537, column: 13, scope: !12615)
!12619 = !DILocation(line: 1538, column: 13, scope: !12615)
!12620 = !DILocation(line: 1546, column: 1, scope: !12545)
!12621 = !DILocation(line: 1548, column: 5, scope: !12545)
!12622 = !DILocation(line: 1549, column: 5, scope: !12545)
!12623 = !DILocation(line: 1550, column: 1, scope: !12545)
!12624 = !DILocation(line: 0, scope: !1918)
!12625 = !DILocation(line: 1395, column: 53, scope: !1918)
!12626 = !DILocation(line: 1395, column: 41, scope: !1918)
!12627 = !DILocation(line: 1396, column: 19, scope: !1918)
!12628 = !DILocation(line: 1399, column: 9, scope: !12629)
!12629 = distinct !DILexicalBlock(scope: !1918, file: !1637, line: 1399, column: 9)
!12630 = !DILocation(line: 1399, column: 15, scope: !12629)
!12631 = !DILocation(line: 1399, column: 9, scope: !1918)
!12632 = !DILocation(line: 1400, column: 14, scope: !12633)
!12633 = distinct !DILexicalBlock(scope: !12629, file: !1637, line: 1399, column: 22)
!12634 = !DILocation(line: 1410, column: 9, scope: !12635)
!12635 = distinct !DILexicalBlock(scope: !1918, file: !1637, line: 1410, column: 9)
!12636 = !DILocation(line: 1410, column: 9, scope: !1918)
!12637 = !DILocation(line: 1403, column: 15, scope: !12638)
!12638 = distinct !DILexicalBlock(scope: !12629, file: !1637, line: 1402, column: 10)
!12639 = !DILocation(line: 1405, column: 31, scope: !12638)
!12640 = !DILocation(line: 1405, column: 9, scope: !12638)
!12641 = !DILocation(line: 1406, column: 63, scope: !12638)
!12642 = !DILocation(line: 1406, column: 9, scope: !12638)
!12643 = !DILocation(line: 1407, column: 9, scope: !12638)
!12644 = !DILocation(line: 1412, column: 43, scope: !12645)
!12645 = distinct !DILexicalBlock(scope: !12635, file: !1637, line: 1410, column: 62)
!12646 = !DILocation(line: 1412, column: 83, scope: !12645)
!12647 = !DILocation(line: 1412, column: 87, scope: !12645)
!12648 = !DILocation(line: 1412, column: 18, scope: !12645)
!12649 = !DILocation(line: 1413, column: 22, scope: !12650)
!12650 = distinct !DILexicalBlock(scope: !12645, file: !1637, line: 1413, column: 13)
!12651 = !DILocation(line: 1413, column: 13, scope: !12645)
!12652 = !DILocation(line: 1414, column: 19, scope: !12653)
!12653 = distinct !DILexicalBlock(scope: !12650, file: !1637, line: 1413, column: 33)
!12654 = !DILocation(line: 1416, column: 35, scope: !12653)
!12655 = !DILocation(line: 1416, column: 13, scope: !12653)
!12656 = !DILocation(line: 1417, column: 67, scope: !12653)
!12657 = !DILocation(line: 1417, column: 13, scope: !12653)
!12658 = !DILocation(line: 1418, column: 13, scope: !12653)
!12659 = !DILocation(line: 1421, column: 40, scope: !12645)
!12660 = !DILocation(line: 1424, column: 23, scope: !12661)
!12661 = distinct !DILexicalBlock(scope: !12645, file: !1637, line: 1424, column: 13)
!12662 = !DILocation(line: 1424, column: 13, scope: !12645)
!12663 = !DILocation(line: 1425, column: 20, scope: !12664)
!12664 = distinct !DILexicalBlock(scope: !12661, file: !1637, line: 1424, column: 65)
!12665 = !DILocation(line: 1427, column: 36, scope: !12664)
!12666 = !DILocation(line: 1427, column: 14, scope: !12664)
!12667 = !DILocation(line: 1428, column: 34, scope: !12664)
!12668 = !DILocation(line: 1429, column: 47, scope: !12664)
!12669 = !DILocation(line: 1429, column: 14, scope: !12664)
!12670 = !DILocation(line: 1430, column: 53, scope: !12664)
!12671 = !DILocation(line: 1430, column: 14, scope: !12664)
!12672 = !DILocation(line: 1431, column: 14, scope: !12664)
!12673 = !DILocation(line: 1432, column: 14, scope: !12664)
!12674 = !DILocation(line: 1436, column: 64, scope: !12664)
!12675 = !DILocation(line: 1436, column: 73, scope: !12664)
!12676 = !DILocation(line: 1436, column: 17, scope: !12664)
!12677 = !DILocation(line: 1439, column: 54, scope: !12664)
!12678 = !DILocation(line: 1439, column: 14, scope: !12664)
!12679 = !DILocation(line: 1442, column: 35, scope: !12664)
!12680 = !DILocation(line: 1442, column: 44, scope: !12664)
!12681 = !DILocation(line: 1442, column: 14, scope: !12664)
!12682 = !DILocation(line: 1444, column: 37, scope: !12664)
!12683 = !DILocation(line: 1445, column: 48, scope: !12664)
!12684 = !DILocation(line: 1445, column: 57, scope: !12664)
!12685 = !DILocation(line: 1445, column: 89, scope: !12664)
!12686 = !DILocation(line: 1447, column: 14, scope: !12664)
!12687 = !DILocation(line: 1450, column: 35, scope: !12645)
!12688 = !DILocation(line: 1450, column: 129, scope: !12645)
!12689 = !DILocation(line: 1450, column: 95, scope: !12645)
!12690 = !DILocation(line: 1450, column: 94, scope: !12645)
!12691 = !DILocation(line: 1450, column: 9, scope: !12645)
!12692 = !DILocation(line: 1460, column: 1, scope: !1918)
!12693 = !DILocation(line: 1453, column: 15, scope: !12694)
!12694 = distinct !DILexicalBlock(scope: !12635, file: !1637, line: 1452, column: 10)
!12695 = !DILocation(line: 1456, column: 31, scope: !12694)
!12696 = !DILocation(line: 1456, column: 9, scope: !12694)
!12697 = !DILocation(line: 1457, column: 63, scope: !12694)
!12698 = !DILocation(line: 1457, column: 9, scope: !12694)
!12699 = !DILocation(line: 1458, column: 9, scope: !12694)
!12700 = distinct !DISubprogram(name: "sd_dma_interrupt_error_handle", scope: !1637, file: !1637, line: 1349, type: !12701, scopeLine: 1350, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !12703)
!12701 = !DISubroutineType(types: !12702)
!12702 = !{null, !1808, !1924}
!12703 = !{!12704, !12705, !12706, !12707}
!12704 = !DILocalVariable(name: "sd_port", arg: 1, scope: !12700, file: !1637, line: 1349, type: !1808)
!12705 = !DILocalVariable(name: "status", arg: 2, scope: !12700, file: !1637, line: 1349, type: !1924)
!12706 = !DILocalVariable(name: "msdc_register_base", scope: !12700, file: !1637, line: 1351, type: !1686)
!12707 = !DILocalVariable(name: "dma_channel", scope: !12700, file: !1637, line: 1352, type: !1270)
!12708 = !DILocation(line: 0, scope: !12700)
!12709 = !DILocation(line: 1354, column: 41, scope: !12700)
!12710 = !DILocation(line: 1355, column: 19, scope: !12700)
!12711 = !DILocation(line: 1357, column: 33, scope: !12700)
!12712 = !DILocation(line: 1358, column: 5, scope: !12700)
!12713 = !DILocation(line: 1359, column: 5, scope: !12700)
!12714 = !DILocation(line: 1360, column: 25, scope: !12700)
!12715 = !DILocation(line: 1361, column: 47, scope: !12716)
!12716 = distinct !DILexicalBlock(scope: !12700, file: !1637, line: 1361, column: 9)
!12717 = !DILocation(line: 1361, column: 11, scope: !12716)
!12718 = !DILocation(line: 1361, column: 9, scope: !12700)
!12719 = !DILocation(line: 1362, column: 9, scope: !12720)
!12720 = distinct !DILexicalBlock(scope: !12716, file: !1637, line: 1361, column: 80)
!12721 = !DILocation(line: 1363, column: 5, scope: !12720)
!12722 = !DILocation(line: 1365, column: 5, scope: !12700)
!12723 = !DILocation(line: 1366, column: 5, scope: !12700)
!12724 = !DILocation(line: 1370, column: 52, scope: !12700)
!12725 = !DILocation(line: 1370, column: 5, scope: !12700)
!12726 = !DILocation(line: 1373, column: 71, scope: !12700)
!12727 = !DILocation(line: 1375, column: 5, scope: !12700)
!12728 = !DILocation(line: 1377, column: 26, scope: !12700)
!12729 = !DILocation(line: 1377, column: 5, scope: !12700)
!12730 = !DILocation(line: 1379, column: 5, scope: !12700)
!12731 = !DILocation(line: 1381, column: 28, scope: !12700)
!12732 = !DILocation(line: 1382, column: 1, scope: !12700)
!12733 = distinct !DISubprogram(name: "sd_backup_all_register", scope: !1637, file: !1637, line: 1553, type: !12734, scopeLine: 1554, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !12736)
!12734 = !DISubroutineType(types: !12735)
!12735 = !{null, !1808}
!12736 = !{!12737, !12738}
!12737 = !DILocalVariable(name: "sd_port", arg: 1, scope: !12733, file: !1637, line: 1553, type: !1808)
!12738 = !DILocalVariable(name: "msdc_register_base", scope: !12733, file: !1637, line: 1555, type: !1686)
!12739 = !DILocation(line: 0, scope: !12733)
!12740 = !DILocation(line: 1557, column: 41, scope: !12733)
!12741 = !DILocation(line: 1559, column: 59, scope: !12733)
!12742 = !DILocation(line: 1559, column: 37, scope: !12733)
!12743 = !DILocation(line: 1560, column: 59, scope: !12733)
!12744 = !DILocation(line: 1560, column: 37, scope: !12733)
!12745 = !DILocation(line: 1561, column: 59, scope: !12733)
!12746 = !DILocation(line: 1561, column: 37, scope: !12733)
!12747 = !DILocation(line: 1562, column: 59, scope: !12733)
!12748 = !DILocation(line: 1562, column: 37, scope: !12733)
!12749 = !DILocation(line: 1563, column: 59, scope: !12733)
!12750 = !DILocation(line: 1563, column: 37, scope: !12733)
!12751 = !DILocation(line: 1564, column: 59, scope: !12733)
!12752 = !DILocation(line: 1564, column: 37, scope: !12733)
!12753 = !DILocation(line: 1565, column: 59, scope: !12733)
!12754 = !DILocation(line: 1565, column: 37, scope: !12733)
!12755 = !DILocation(line: 1566, column: 1, scope: !12733)
!12756 = distinct !DISubprogram(name: "sd_restore_all_register", scope: !1637, file: !1637, line: 1569, type: !12734, scopeLine: 1570, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !12757)
!12757 = !{!12758, !12759}
!12758 = !DILocalVariable(name: "sd_port", arg: 1, scope: !12756, file: !1637, line: 1569, type: !1808)
!12759 = !DILocalVariable(name: "msdc_register_base", scope: !12756, file: !1637, line: 1571, type: !1686)
!12760 = !DILocation(line: 0, scope: !12756)
!12761 = !DILocation(line: 1573, column: 41, scope: !12756)
!12762 = !DILocation(line: 1576, column: 56, scope: !12756)
!12763 = !DILocation(line: 1576, column: 65, scope: !12756)
!12764 = !DILocation(line: 1576, column: 34, scope: !12756)
!12765 = !DILocation(line: 1578, column: 59, scope: !12756)
!12766 = !DILocation(line: 1578, column: 38, scope: !12756)
!12767 = !DILocation(line: 1579, column: 59, scope: !12756)
!12768 = !DILocation(line: 1579, column: 25, scope: !12756)
!12769 = !DILocation(line: 1579, column: 38, scope: !12756)
!12770 = !DILocation(line: 1580, column: 59, scope: !12756)
!12771 = !DILocation(line: 1580, column: 25, scope: !12756)
!12772 = !DILocation(line: 1580, column: 38, scope: !12756)
!12773 = !DILocation(line: 1581, column: 59, scope: !12756)
!12774 = !DILocation(line: 1581, column: 25, scope: !12756)
!12775 = !DILocation(line: 1581, column: 38, scope: !12756)
!12776 = !DILocation(line: 1582, column: 59, scope: !12756)
!12777 = !DILocation(line: 1582, column: 25, scope: !12756)
!12778 = !DILocation(line: 1582, column: 38, scope: !12756)
!12779 = !DILocation(line: 1583, column: 59, scope: !12756)
!12780 = !DILocation(line: 1583, column: 25, scope: !12756)
!12781 = !DILocation(line: 1583, column: 38, scope: !12756)
!12782 = !DILocation(line: 1584, column: 59, scope: !12756)
!12783 = !DILocation(line: 1584, column: 25, scope: !12756)
!12784 = !DILocation(line: 1584, column: 38, scope: !12756)
!12785 = !DILocation(line: 1585, column: 1, scope: !12756)
!12786 = distinct !DISubprogram(name: "sd_backup_all", scope: !1637, file: !1637, line: 1587, type: !343, scopeLine: 1588, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !345)
!12787 = !DILocation(line: 1590, column: 5, scope: !12786)
!12788 = !DILocation(line: 1592, column: 25, scope: !12789)
!12789 = distinct !DILexicalBlock(scope: !12786, file: !1637, line: 1592, column: 9)
!12790 = !DILocation(line: 1592, column: 9, scope: !12786)
!12791 = !DILocation(line: 1593, column: 44, scope: !12792)
!12792 = distinct !DILexicalBlock(scope: !12789, file: !1637, line: 1592, column: 41)
!12793 = !DILocation(line: 1594, column: 9, scope: !12792)
!12794 = !DILocation(line: 1596, column: 44, scope: !12795)
!12795 = distinct !DILexicalBlock(scope: !12789, file: !1637, line: 1595, column: 12)
!12796 = !DILocation(line: 1599, column: 26, scope: !12797)
!12797 = distinct !DILexicalBlock(scope: !12786, file: !1637, line: 1599, column: 9)
!12798 = !DILocation(line: 1599, column: 23, scope: !12797)
!12799 = !DILocation(line: 1599, column: 9, scope: !12786)
!12800 = !DILocation(line: 1601, column: 33, scope: !12801)
!12801 = distinct !DILexicalBlock(scope: !12797, file: !1637, line: 1601, column: 16)
!12802 = !DILocation(line: 1601, column: 30, scope: !12801)
!12803 = !DILocation(line: 1601, column: 16, scope: !12797)
!12804 = !DILocation(line: 0, scope: !12797)
!12805 = !DILocation(line: 1605, column: 48, scope: !12786)
!12806 = !DILocation(line: 1605, column: 5, scope: !12786)
!12807 = !DILocation(line: 1606, column: 1, scope: !12786)
!12808 = distinct !DISubprogram(name: "sd_restore_all", scope: !1637, file: !1637, line: 1608, type: !343, scopeLine: 1609, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !345)
!12809 = !DILocation(line: 1610, column: 30, scope: !12810)
!12810 = distinct !DILexicalBlock(scope: !12808, file: !1637, line: 1610, column: 9)
!12811 = !DILocation(line: 1610, column: 9, scope: !12808)
!12812 = !DILocation(line: 1615, column: 5, scope: !12808)
!12813 = !DILocation(line: 1617, column: 49, scope: !12808)
!12814 = !DILocation(line: 1617, column: 5, scope: !12808)
!12815 = !DILocation(line: 1618, column: 40, scope: !12808)
!12816 = !DILocation(line: 1621, column: 46, scope: !12808)
!12817 = !DILocation(line: 1621, column: 5, scope: !12808)
!12818 = !DILocation(line: 1622, column: 1, scope: !12808)
!12819 = distinct !DISubprogram(name: "msdc_valid", scope: !1999, file: !1999, line: 788, type: !1613, scopeLine: 789, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1998, retainedNodes: !12820)
!12820 = !{!12821, !12822}
!12821 = !DILocalVariable(name: "voltage", arg: 1, scope: !12819, file: !1999, line: 788, type: !61)
!12822 = !DILocalVariable(name: "frequency", arg: 2, scope: !12819, file: !1999, line: 788, type: !61)
!12823 = !DILocation(line: 0, scope: !12819)
!12824 = !DILocation(line: 790, column: 5, scope: !12819)
!12825 = distinct !DISubprogram(name: "msdc_prepare", scope: !1999, file: !1999, line: 793, type: !1617, scopeLine: 794, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1998, retainedNodes: !12826)
!12826 = !{!12827, !12828, !12829, !12830}
!12827 = !DILocalVariable(name: "voltage", arg: 1, scope: !12825, file: !1999, line: 793, type: !61)
!12828 = !DILocalVariable(name: "frequency", arg: 2, scope: !12825, file: !1999, line: 793, type: !61)
!12829 = !DILocalVariable(name: "msdc_max_source_clock", scope: !12825, file: !1999, line: 795, type: !61)
!12830 = !DILocalVariable(name: "msdc_max_output_clock", scope: !12825, file: !1999, line: 796, type: !61)
!12831 = !DILocation(line: 0, scope: !12825)
!12832 = !DILocation(line: 799, column: 51, scope: !12825)
!12833 = !DILocation(line: 801, column: 53, scope: !12834)
!12834 = distinct !DILexicalBlock(scope: !12825, file: !1999, line: 801, column: 9)
!12835 = !DILocation(line: 801, column: 25, scope: !12834)
!12836 = !DILocation(line: 801, column: 9, scope: !12825)
!12837 = !DILocation(line: 803, column: 41, scope: !12838)
!12838 = distinct !DILexicalBlock(scope: !12834, file: !1999, line: 803, column: 16)
!12839 = !DILocation(line: 803, column: 54, scope: !12838)
!12840 = !DILocation(line: 803, column: 16, scope: !12834)
!12841 = !DILocation(line: 806, column: 13, scope: !12842)
!12842 = distinct !DILexicalBlock(scope: !12843, file: !1999, line: 806, column: 13)
!12843 = distinct !DILexicalBlock(scope: !12838, file: !1999, line: 803, column: 79)
!12844 = !DILocation(line: 806, column: 49, scope: !12842)
!12845 = !DILocation(line: 806, column: 13, scope: !12843)
!12846 = !DILocation(line: 807, column: 49, scope: !12847)
!12847 = distinct !DILexicalBlock(scope: !12842, file: !1999, line: 806, column: 90)
!12848 = !DILocation(line: 808, column: 9, scope: !12847)
!12849 = !DILocation(line: 809, column: 9, scope: !12843)
!12850 = !DILocation(line: 810, column: 5, scope: !12843)
!12851 = !DILocation(line: 810, column: 37, scope: !12852)
!12852 = distinct !DILexicalBlock(scope: !12838, file: !1999, line: 810, column: 16)
!12853 = !DILocation(line: 811, column: 31, scope: !12852)
!12854 = !DILocation(line: 811, column: 63, scope: !12852)
!12855 = !DILocation(line: 812, column: 59, scope: !12852)
!12856 = !DILocation(line: 812, column: 31, scope: !12852)
!12857 = !DILocation(line: 810, column: 16, scope: !12838)
!12858 = !DILocation(line: 813, column: 60, scope: !12859)
!12859 = distinct !DILexicalBlock(scope: !12852, file: !1999, line: 812, column: 67)
!12860 = !DILocation(line: 813, column: 9, scope: !12859)
!12861 = !DILocation(line: 814, column: 40, scope: !12859)
!12862 = !DILocation(line: 815, column: 40, scope: !12859)
!12863 = !DILocation(line: 816, column: 5, scope: !12859)
!12864 = !DILocation(line: 817, column: 30, scope: !12865)
!12865 = distinct !DILexicalBlock(scope: !12852, file: !1999, line: 816, column: 16)
!12866 = !DILocation(line: 817, column: 62, scope: !12865)
!12867 = !DILocation(line: 818, column: 59, scope: !12865)
!12868 = !DILocation(line: 818, column: 31, scope: !12865)
!12869 = !DILocation(line: 816, column: 16, scope: !12852)
!12870 = !DILocation(line: 819, column: 60, scope: !12871)
!12871 = distinct !DILexicalBlock(scope: !12865, file: !1999, line: 818, column: 67)
!12872 = !DILocation(line: 819, column: 9, scope: !12871)
!12873 = !DILocation(line: 820, column: 40, scope: !12871)
!12874 = !DILocation(line: 821, column: 5, scope: !12871)
!12875 = !DILocation(line: 821, column: 55, scope: !12876)
!12876 = distinct !DILexicalBlock(scope: !12865, file: !1999, line: 821, column: 16)
!12877 = !DILocation(line: 821, column: 80, scope: !12876)
!12878 = !DILocation(line: 822, column: 17, scope: !12876)
!12879 = !DILocation(line: 822, column: 53, scope: !12876)
!12880 = !DILocation(line: 821, column: 16, scope: !12865)
!12881 = !DILocation(line: 825, column: 13, scope: !12882)
!12882 = distinct !DILexicalBlock(scope: !12883, file: !1999, line: 824, column: 75)
!12883 = distinct !DILexicalBlock(scope: !12884, file: !1999, line: 824, column: 13)
!12884 = distinct !DILexicalBlock(scope: !12876, file: !1999, line: 822, column: 95)
!12885 = !DILocation(line: 826, column: 9, scope: !12882)
!12886 = !DILocation(line: 829, column: 53, scope: !12887)
!12887 = distinct !DILexicalBlock(scope: !12825, file: !1999, line: 829, column: 9)
!12888 = !DILocation(line: 829, column: 25, scope: !12887)
!12889 = !DILocation(line: 829, column: 9, scope: !12825)
!12890 = !DILocation(line: 831, column: 41, scope: !12891)
!12891 = distinct !DILexicalBlock(scope: !12887, file: !1999, line: 831, column: 16)
!12892 = !DILocation(line: 831, column: 54, scope: !12891)
!12893 = !DILocation(line: 831, column: 16, scope: !12887)
!12894 = !DILocation(line: 834, column: 13, scope: !12895)
!12895 = distinct !DILexicalBlock(scope: !12896, file: !1999, line: 834, column: 13)
!12896 = distinct !DILexicalBlock(scope: !12891, file: !1999, line: 831, column: 79)
!12897 = !DILocation(line: 834, column: 49, scope: !12895)
!12898 = !DILocation(line: 834, column: 13, scope: !12896)
!12899 = !DILocation(line: 835, column: 49, scope: !12900)
!12900 = distinct !DILexicalBlock(scope: !12895, file: !1999, line: 834, column: 90)
!12901 = !DILocation(line: 836, column: 9, scope: !12900)
!12902 = !DILocation(line: 838, column: 9, scope: !12896)
!12903 = !DILocation(line: 839, column: 5, scope: !12896)
!12904 = !DILocation(line: 839, column: 37, scope: !12905)
!12905 = distinct !DILexicalBlock(scope: !12891, file: !1999, line: 839, column: 16)
!12906 = !DILocation(line: 840, column: 31, scope: !12905)
!12907 = !DILocation(line: 840, column: 63, scope: !12905)
!12908 = !DILocation(line: 841, column: 59, scope: !12905)
!12909 = !DILocation(line: 841, column: 31, scope: !12905)
!12910 = !DILocation(line: 839, column: 16, scope: !12891)
!12911 = !DILocation(line: 842, column: 60, scope: !12912)
!12912 = distinct !DILexicalBlock(scope: !12905, file: !1999, line: 841, column: 67)
!12913 = !DILocation(line: 842, column: 9, scope: !12912)
!12914 = !DILocation(line: 843, column: 40, scope: !12912)
!12915 = !DILocation(line: 844, column: 40, scope: !12912)
!12916 = !DILocation(line: 845, column: 5, scope: !12912)
!12917 = !DILocation(line: 846, column: 30, scope: !12918)
!12918 = distinct !DILexicalBlock(scope: !12905, file: !1999, line: 845, column: 16)
!12919 = !DILocation(line: 846, column: 62, scope: !12918)
!12920 = !DILocation(line: 847, column: 59, scope: !12918)
!12921 = !DILocation(line: 847, column: 31, scope: !12918)
!12922 = !DILocation(line: 845, column: 16, scope: !12905)
!12923 = !DILocation(line: 848, column: 60, scope: !12924)
!12924 = distinct !DILexicalBlock(scope: !12918, file: !1999, line: 847, column: 67)
!12925 = !DILocation(line: 848, column: 9, scope: !12924)
!12926 = !DILocation(line: 849, column: 40, scope: !12924)
!12927 = !DILocation(line: 850, column: 5, scope: !12924)
!12928 = !DILocation(line: 850, column: 55, scope: !12929)
!12929 = distinct !DILexicalBlock(scope: !12918, file: !1999, line: 850, column: 16)
!12930 = !DILocation(line: 850, column: 80, scope: !12929)
!12931 = !DILocation(line: 851, column: 17, scope: !12929)
!12932 = !DILocation(line: 851, column: 53, scope: !12929)
!12933 = !DILocation(line: 850, column: 16, scope: !12918)
!12934 = !DILocation(line: 854, column: 13, scope: !12935)
!12935 = distinct !DILexicalBlock(scope: !12936, file: !1999, line: 853, column: 75)
!12936 = distinct !DILexicalBlock(scope: !12937, file: !1999, line: 853, column: 13)
!12937 = distinct !DILexicalBlock(scope: !12929, file: !1999, line: 851, column: 95)
!12938 = !DILocation(line: 855, column: 9, scope: !12935)
!12939 = !DILocation(line: 857, column: 1, scope: !12825)
!12940 = distinct !DISubprogram(name: "msdc_set_output_clock", scope: !1999, file: !1999, line: 173, type: !12941, scopeLine: 174, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1998, retainedNodes: !12943)
!12941 = !DISubroutineType(types: !12942)
!12942 = !{null, !1548, !61}
!12943 = !{!12944, !12945, !12946, !12947, !12948, !12949, !12950}
!12944 = !DILocalVariable(name: "msdc_port", arg: 1, scope: !12940, file: !1999, line: 173, type: !1548)
!12945 = !DILocalVariable(name: "msdc_clock", arg: 2, scope: !12940, file: !1999, line: 173, type: !61)
!12946 = !DILocalVariable(name: "msdc_register_base", scope: !12940, file: !1999, line: 175, type: !2049)
!12947 = !DILocalVariable(name: "clock_config", scope: !12940, file: !1999, line: 176, type: !61)
!12948 = !DILocalVariable(name: "msdc_cfg", scope: !12940, file: !1999, line: 177, type: !61)
!12949 = !DILocalVariable(name: "i", scope: !12940, file: !1999, line: 178, type: !61)
!12950 = !DILocalVariable(name: "msdc_mux_select", scope: !12940, file: !1999, line: 179, type: !61)
!12951 = !DILocation(line: 0, scope: !12940)
!12952 = !DILocation(line: 181, column: 39, scope: !12940)
!12953 = !DILocation(line: 183, column: 11, scope: !12954)
!12954 = distinct !DILexicalBlock(scope: !12940, file: !1999, line: 183, column: 9)
!12955 = !DILocation(line: 183, column: 9, scope: !12940)
!12956 = !DILocation(line: 188, column: 34, scope: !12957)
!12957 = distinct !DILexicalBlock(scope: !12958, file: !1999, line: 188, column: 13)
!12958 = distinct !DILexicalBlock(scope: !12959, file: !1999, line: 187, column: 86)
!12959 = distinct !DILexicalBlock(scope: !12960, file: !1999, line: 187, column: 5)
!12960 = distinct !DILexicalBlock(scope: !12940, file: !1999, line: 187, column: 5)
!12961 = !DILocation(line: 188, column: 47, scope: !12957)
!12962 = !DILocation(line: 188, column: 13, scope: !12958)
!12963 = !DILocation(line: 187, column: 82, scope: !12959)
!12964 = !DILocation(line: 187, column: 19, scope: !12959)
!12965 = !DILocation(line: 187, column: 5, scope: !12960)
!12966 = distinct !{!12966, !12965, !12967}
!12967 = !DILocation(line: 191, column: 5, scope: !12960)
!12968 = !DILocation(line: 194, column: 32, scope: !12969)
!12969 = distinct !DILexicalBlock(scope: !12970, file: !1999, line: 193, column: 73)
!12970 = distinct !DILexicalBlock(scope: !12940, file: !1999, line: 193, column: 9)
!12971 = !DILocation(line: 194, column: 45, scope: !12969)
!12972 = !DILocation(line: 195, column: 52, scope: !12969)
!12973 = !DILocation(line: 195, column: 21, scope: !12969)
!12974 = !DILocation(line: 196, column: 50, scope: !12969)
!12975 = !DILocation(line: 196, column: 69, scope: !12969)
!12976 = !DILocation(line: 196, column: 99, scope: !12969)
!12977 = !DILocation(line: 196, column: 106, scope: !12969)
!12978 = !DILocation(line: 196, column: 75, scope: !12969)
!12979 = !DILocation(line: 197, column: 5, scope: !12969)
!12980 = !DILocation(line: 198, column: 61, scope: !12981)
!12981 = distinct !DILexicalBlock(scope: !12970, file: !1999, line: 197, column: 12)
!12982 = !DILocation(line: 198, column: 66, scope: !12981)
!12983 = !DILocation(line: 199, column: 38, scope: !12981)
!12984 = !DILocation(line: 199, column: 62, scope: !12981)
!12985 = !DILocation(line: 199, column: 67, scope: !12981)
!12986 = !DILocation(line: 199, column: 47, scope: !12981)
!12987 = !DILocation(line: 199, column: 44, scope: !12981)
!12988 = !DILocation(line: 201, column: 15, scope: !12989)
!12989 = distinct !DILexicalBlock(scope: !12981, file: !1999, line: 201, column: 13)
!12990 = !DILocation(line: 201, column: 13, scope: !12981)
!12991 = !DILocation(line: 202, column: 78, scope: !12992)
!12992 = distinct !DILexicalBlock(scope: !12989, file: !1999, line: 201, column: 32)
!12993 = !DILocation(line: 202, column: 73, scope: !12992)
!12994 = !DILocation(line: 202, column: 36, scope: !12992)
!12995 = !DILocation(line: 202, column: 49, scope: !12992)
!12996 = !DILocation(line: 203, column: 9, scope: !12992)
!12997 = !DILocation(line: 0, scope: !12970)
!12998 = !DILocation(line: 210, column: 55, scope: !12940)
!12999 = !DILocation(line: 210, column: 63, scope: !12940)
!13000 = !DILocation(line: 210, column: 33, scope: !12940)
!13001 = !DILocation(line: 213, column: 57, scope: !12940)
!13002 = !DILocation(line: 213, column: 66, scope: !12940)
!13003 = !DILocation(line: 213, column: 94, scope: !12940)
!13004 = !DILocation(line: 213, column: 34, scope: !12940)
!13005 = !DILocation(line: 216, column: 9, scope: !12940)
!13006 = !DILocation(line: 218, column: 28, scope: !13007)
!13007 = distinct !DILexicalBlock(scope: !13008, file: !1999, line: 218, column: 16)
!13008 = distinct !DILexicalBlock(scope: !12940, file: !1999, line: 216, column: 9)
!13009 = !DILocation(line: 218, column: 16, scope: !13008)
!13010 = !DILocation(line: 0, scope: !13008)
!13011 = !DILocation(line: 223, column: 55, scope: !12940)
!13012 = !DILocation(line: 223, column: 63, scope: !12940)
!13013 = !DILocation(line: 223, column: 33, scope: !12940)
!13014 = !DILocation(line: 225, column: 5, scope: !12940)
!13015 = !DILocation(line: 228, column: 32, scope: !13016)
!13016 = distinct !DILexicalBlock(scope: !12940, file: !1999, line: 228, column: 9)
!13017 = !DILocation(line: 228, column: 45, scope: !13016)
!13018 = !DILocation(line: 0, scope: !13016)
!13019 = !DILocation(line: 228, column: 9, scope: !12940)
!13020 = !DILocation(line: 233, column: 1, scope: !12940)
!13021 = distinct !DISubprogram(name: "msdc_wait", scope: !1999, file: !1999, line: 108, type: !5526, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1998, retainedNodes: !13022)
!13022 = !{!13023}
!13023 = !DILocalVariable(name: "wait_ms", arg: 1, scope: !13021, file: !1999, line: 108, type: !61)
!13024 = !DILocation(line: 0, scope: !13021)
!13025 = !DILocation(line: 110, column: 5, scope: !13021)
!13026 = !DILocation(line: 111, column: 1, scope: !13021)
!13027 = distinct !DISubprogram(name: "msdc_reset", scope: !1999, file: !1999, line: 114, type: !13028, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1998, retainedNodes: !13030)
!13028 = !DISubroutineType(types: !13029)
!13029 = !{null, !1548}
!13030 = !{!13031, !13032, !13033, !13034, !13035}
!13031 = !DILocalVariable(name: "msdc_port", arg: 1, scope: !13027, file: !1999, line: 114, type: !1548)
!13032 = !DILocalVariable(name: "msdc_register_base", scope: !13027, file: !1999, line: 116, type: !2049)
!13033 = !DILocalVariable(name: "start_count", scope: !13027, file: !1999, line: 117, type: !61)
!13034 = !DILocalVariable(name: "end_count", scope: !13027, file: !1999, line: 118, type: !61)
!13035 = !DILocalVariable(name: "count", scope: !13027, file: !1999, line: 119, type: !61)
!13036 = !DILocation(line: 0, scope: !13027)
!13037 = !DILocation(line: 117, column: 5, scope: !13027)
!13038 = !DILocation(line: 117, column: 14, scope: !13027)
!13039 = !DILocation(line: 118, column: 5, scope: !13027)
!13040 = !DILocation(line: 118, column: 14, scope: !13027)
!13041 = !DILocation(line: 119, column: 5, scope: !13027)
!13042 = !DILocation(line: 119, column: 14, scope: !13027)
!13043 = !DILocation(line: 121, column: 39, scope: !13027)
!13044 = !DILocation(line: 123, column: 31, scope: !13045)
!13045 = distinct !DILexicalBlock(scope: !13027, file: !1999, line: 123, column: 9)
!13046 = !DILocation(line: 123, column: 40, scope: !13045)
!13047 = !DILocation(line: 123, column: 9, scope: !13027)
!13048 = !DILocation(line: 124, column: 60, scope: !13049)
!13049 = distinct !DILexicalBlock(scope: !13045, file: !1999, line: 123, column: 62)
!13050 = !DILocation(line: 124, column: 69, scope: !13049)
!13051 = !DILocation(line: 124, column: 38, scope: !13049)
!13052 = !DILocation(line: 125, column: 5, scope: !13049)
!13053 = !DILocation(line: 127, column: 5, scope: !13027)
!13054 = !DILocation(line: 128, column: 5, scope: !13027)
!13055 = !DILocation(line: 128, column: 32, scope: !13027)
!13056 = !DILocation(line: 128, column: 41, scope: !13027)
!13057 = !DILocation(line: 129, column: 9, scope: !13058)
!13058 = distinct !DILexicalBlock(scope: !13027, file: !1999, line: 128, column: 62)
!13059 = !DILocation(line: 130, column: 36, scope: !13058)
!13060 = !DILocation(line: 130, column: 49, scope: !13058)
!13061 = !DILocation(line: 130, column: 9, scope: !13058)
!13062 = !DILocation(line: 131, column: 13, scope: !13063)
!13063 = distinct !DILexicalBlock(scope: !13058, file: !1999, line: 131, column: 13)
!13064 = !DILocation(line: 131, column: 19, scope: !13063)
!13065 = !DILocation(line: 131, column: 13, scope: !13058)
!13066 = distinct !{!13066, !13054, !13067}
!13067 = !DILocation(line: 135, column: 5, scope: !13027)
!13068 = !DILocation(line: 132, column: 13, scope: !13069)
!13069 = distinct !DILexicalBlock(scope: !13063, file: !1999, line: 131, column: 48)
!13070 = !DILocation(line: 133, column: 13, scope: !13069)
!13071 = !DILocation(line: 136, column: 1, scope: !13027)
!13072 = distinct !DISubprogram(name: "msdc_record_command_status", scope: !1999, file: !1999, line: 138, type: !12941, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1998, retainedNodes: !13073)
!13073 = !{!13074, !13075}
!13074 = !DILocalVariable(name: "msdc_port", arg: 1, scope: !13072, file: !1999, line: 138, type: !1548)
!13075 = !DILocalVariable(name: "command_status", arg: 2, scope: !13072, file: !1999, line: 138, type: !61)
!13076 = !DILocation(line: 0, scope: !13072)
!13077 = !DILocation(line: 140, column: 28, scope: !13072)
!13078 = !DILocation(line: 140, column: 43, scope: !13072)
!13079 = !DILocation(line: 141, column: 1, scope: !13072)
!13080 = distinct !DISubprogram(name: "msdc_record_data_status", scope: !1999, file: !1999, line: 143, type: !12941, scopeLine: 144, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1998, retainedNodes: !13081)
!13081 = !{!13082, !13083}
!13082 = !DILocalVariable(name: "msdc_port", arg: 1, scope: !13080, file: !1999, line: 143, type: !1548)
!13083 = !DILocalVariable(name: "data_status", arg: 2, scope: !13080, file: !1999, line: 143, type: !61)
!13084 = !DILocation(line: 0, scope: !13080)
!13085 = !DILocation(line: 145, column: 28, scope: !13080)
!13086 = !DILocation(line: 145, column: 40, scope: !13080)
!13087 = !DILocation(line: 146, column: 1, scope: !13080)
!13088 = distinct !DISubprogram(name: "msdc_clock_init", scope: !1999, file: !1999, line: 148, type: !13028, scopeLine: 149, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1998, retainedNodes: !13089)
!13089 = !{!13090, !13091}
!13090 = !DILocalVariable(name: "msdc_port", arg: 1, scope: !13088, file: !1999, line: 148, type: !1548)
!13091 = !DILocalVariable(name: "msdc_register_base", scope: !13088, file: !1999, line: 150, type: !2049)
!13092 = !DILocation(line: 0, scope: !13088)
!13093 = !DILocation(line: 152, column: 39, scope: !13088)
!13094 = !DILocation(line: 154, column: 55, scope: !13088)
!13095 = !DILocation(line: 154, column: 63, scope: !13088)
!13096 = !DILocation(line: 154, column: 33, scope: !13088)
!13097 = !DILocation(line: 157, column: 56, scope: !13088)
!13098 = !DILocation(line: 157, column: 64, scope: !13088)
!13099 = !DILocation(line: 157, column: 88, scope: !13088)
!13100 = !DILocation(line: 157, column: 33, scope: !13088)
!13101 = !DILocation(line: 160, column: 28, scope: !13088)
!13102 = !DILocation(line: 160, column: 39, scope: !13088)
!13103 = !DILocation(line: 163, column: 57, scope: !13088)
!13104 = !DILocation(line: 163, column: 66, scope: !13088)
!13105 = !DILocation(line: 164, column: 69, scope: !13088)
!13106 = !DILocation(line: 163, column: 34, scope: !13088)
!13107 = !DILocation(line: 168, column: 5, scope: !13088)
!13108 = !DILocation(line: 170, column: 1, scope: !13088)
!13109 = distinct !DISubprogram(name: "msdc_get_output_clock", scope: !1999, file: !1999, line: 235, type: !13110, scopeLine: 236, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1998, retainedNodes: !13112)
!13110 = !DISubroutineType(types: !13111)
!13111 = !{!61, !1548}
!13112 = !{!13113}
!13113 = !DILocalVariable(name: "msdc_port", arg: 1, scope: !13109, file: !1999, line: 235, type: !1548)
!13114 = !DILocation(line: 0, scope: !13109)
!13115 = !DILocation(line: 237, column: 36, scope: !13109)
!13116 = !DILocation(line: 237, column: 5, scope: !13109)
!13117 = distinct !DISubprogram(name: "msdc_power_set", scope: !1999, file: !1999, line: 241, type: !13118, scopeLine: 242, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1998, retainedNodes: !13120)
!13118 = !DISubroutineType(types: !13119)
!13119 = !{null, !1548, !91}
!13120 = !{!13121, !13122, !13123}
!13121 = !DILocalVariable(name: "msdc_port", arg: 1, scope: !13117, file: !1999, line: 241, type: !1548)
!13122 = !DILocalVariable(name: "is_power_on", arg: 2, scope: !13117, file: !1999, line: 241, type: !91)
!13123 = !DILocalVariable(name: "ret", scope: !13117, file: !1999, line: 243, type: !5627)
!13124 = !DILocation(line: 0, scope: !13117)
!13125 = !DILocation(line: 245, column: 9, scope: !13117)
!13126 = !DILocation(line: 246, column: 13, scope: !13127)
!13127 = distinct !DILexicalBlock(scope: !13128, file: !1999, line: 245, column: 35)
!13128 = distinct !DILexicalBlock(scope: !13117, file: !1999, line: 245, column: 9)
!13129 = !DILocation(line: 247, column: 19, scope: !13130)
!13130 = distinct !DILexicalBlock(scope: !13131, file: !1999, line: 246, column: 39)
!13131 = distinct !DILexicalBlock(scope: !13127, file: !1999, line: 246, column: 13)
!13132 = !DILocation(line: 248, column: 9, scope: !13130)
!13133 = !DILocation(line: 249, column: 19, scope: !13134)
!13134 = distinct !DILexicalBlock(scope: !13135, file: !1999, line: 248, column: 46)
!13135 = distinct !DILexicalBlock(scope: !13131, file: !1999, line: 248, column: 20)
!13136 = !DILocation(line: 250, column: 9, scope: !13134)
!13137 = !DILocation(line: 252, column: 13, scope: !13138)
!13138 = distinct !DILexicalBlock(scope: !13128, file: !1999, line: 251, column: 12)
!13139 = !DILocation(line: 253, column: 19, scope: !13140)
!13140 = distinct !DILexicalBlock(scope: !13141, file: !1999, line: 252, column: 39)
!13141 = distinct !DILexicalBlock(scope: !13138, file: !1999, line: 252, column: 13)
!13142 = !DILocation(line: 254, column: 9, scope: !13140)
!13143 = !DILocation(line: 255, column: 19, scope: !13144)
!13144 = distinct !DILexicalBlock(scope: !13145, file: !1999, line: 254, column: 46)
!13145 = distinct !DILexicalBlock(scope: !13141, file: !1999, line: 254, column: 20)
!13146 = !DILocation(line: 256, column: 9, scope: !13144)
!13147 = !DILocation(line: 259, column: 13, scope: !13148)
!13148 = distinct !DILexicalBlock(scope: !13117, file: !1999, line: 259, column: 9)
!13149 = !DILocation(line: 259, column: 9, scope: !13117)
!13150 = !DILocation(line: 260, column: 9, scope: !13151)
!13151 = distinct !DILexicalBlock(scope: !13148, file: !1999, line: 259, column: 37)
!13152 = !DILocation(line: 261, column: 5, scope: !13151)
!13153 = !DILocation(line: 262, column: 1, scope: !13117)
!13154 = distinct !DISubprogram(name: "msdc_set_io_parameter", scope: !1999, file: !1999, line: 264, type: !13155, scopeLine: 265, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1998, retainedNodes: !13157)
!13155 = !DISubroutineType(types: !13156)
!13156 = !{null, !1548, !2081}
!13157 = !{!13158, !13159, !13160, !13161}
!13158 = !DILocalVariable(name: "msdc_port", arg: 1, scope: !13154, file: !1999, line: 264, type: !1548)
!13159 = !DILocalVariable(name: "io_config", arg: 2, scope: !13154, file: !1999, line: 264, type: !2081)
!13160 = !DILocalVariable(name: "msdc_register_base", scope: !13154, file: !1999, line: 266, type: !2049)
!13161 = !DILocalVariable(name: "msdc_io_config", scope: !13154, file: !1999, line: 267, type: !61)
!13162 = !DILocation(line: 0, scope: !13154)
!13163 = !DILocation(line: 269, column: 39, scope: !13154)
!13164 = !DILocation(line: 271, column: 34, scope: !13154)
!13165 = !DILocation(line: 271, column: 54, scope: !13154)
!13166 = !DILocation(line: 272, column: 34, scope: !13154)
!13167 = !DILocation(line: 272, column: 57, scope: !13154)
!13168 = !DILocation(line: 271, column: 100, scope: !13154)
!13169 = !DILocation(line: 273, column: 34, scope: !13154)
!13170 = !DILocation(line: 273, column: 70, scope: !13154)
!13171 = !DILocation(line: 272, column: 100, scope: !13154)
!13172 = !DILocation(line: 274, column: 34, scope: !13154)
!13173 = !DILocation(line: 273, column: 100, scope: !13154)
!13174 = !DILocation(line: 275, column: 59, scope: !13154)
!13175 = !DILocation(line: 275, column: 70, scope: !13154)
!13176 = !DILocation(line: 275, column: 101, scope: !13154)
!13177 = !DILocation(line: 275, column: 36, scope: !13154)
!13178 = !DILocation(line: 277, column: 58, scope: !13154)
!13179 = !DILocation(line: 277, column: 94, scope: !13154)
!13180 = !DILocation(line: 277, column: 36, scope: !13154)
!13181 = !DILocation(line: 280, column: 59, scope: !13154)
!13182 = !DILocation(line: 280, column: 71, scope: !13154)
!13183 = !DILocation(line: 280, column: 37, scope: !13154)
!13184 = !DILocation(line: 281, column: 1, scope: !13154)
!13185 = distinct !DISubprogram(name: "msdc_nvic_set", scope: !1999, file: !1999, line: 283, type: !13118, scopeLine: 284, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1998, retainedNodes: !13186)
!13186 = !{!13187, !13188, !13189}
!13187 = !DILocalVariable(name: "msdc_port", arg: 1, scope: !13185, file: !1999, line: 283, type: !1548)
!13188 = !DILocalVariable(name: "is_enable", arg: 2, scope: !13185, file: !1999, line: 283, type: !91)
!13189 = !DILocalVariable(name: "msdc_nvic_number", scope: !13185, file: !1999, line: 285, type: !571)
!13190 = !DILocation(line: 0, scope: !13185)
!13191 = !DILocation(line: 287, column: 37, scope: !13185)
!13192 = !DILocation(line: 287, column: 24, scope: !13185)
!13193 = !DILocation(line: 290, column: 9, scope: !13185)
!13194 = !DILocation(line: 291, column: 9, scope: !13195)
!13195 = distinct !DILexicalBlock(scope: !13196, file: !1999, line: 290, column: 20)
!13196 = distinct !DILexicalBlock(scope: !13185, file: !1999, line: 290, column: 9)
!13197 = !DILocation(line: 292, column: 5, scope: !13195)
!13198 = !DILocation(line: 293, column: 9, scope: !13199)
!13199 = distinct !DILexicalBlock(scope: !13196, file: !1999, line: 292, column: 12)
!13200 = !DILocation(line: 295, column: 1, scope: !13185)
!13201 = distinct !DISubprogram(name: "msdc_isr", scope: !1999, file: !1999, line: 297, type: !568, scopeLine: 298, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1998, retainedNodes: !13202)
!13202 = !{!13203}
!13203 = !DILocalVariable(name: "irq_number", arg: 1, scope: !13201, file: !1999, line: 297, type: !570)
!13204 = !DILocation(line: 0, scope: !13201)
!13205 = !DILocation(line: 299, column: 5, scope: !13201)
!13206 = !DILocation(line: 300, column: 62, scope: !13201)
!13207 = !DILocation(line: 300, column: 49, scope: !13201)
!13208 = !DILocation(line: 301, column: 55, scope: !13201)
!13209 = !DILocation(line: 301, column: 42, scope: !13201)
!13210 = !DILocation(line: 304, column: 48, scope: !13211)
!13211 = distinct !DILexicalBlock(scope: !13201, file: !1999, line: 304, column: 9)
!13212 = !DILocation(line: 304, column: 9, scope: !13201)
!13213 = !DILocation(line: 306, column: 38, scope: !13214)
!13214 = distinct !DILexicalBlock(scope: !13215, file: !1999, line: 306, column: 13)
!13215 = distinct !DILexicalBlock(scope: !13211, file: !1999, line: 304, column: 73)
!13216 = !DILocation(line: 306, column: 13, scope: !13214)
!13217 = !DILocation(line: 306, column: 13, scope: !13215)
!13218 = !DILocation(line: 308, column: 13, scope: !13219)
!13219 = distinct !DILexicalBlock(scope: !13214, file: !1999, line: 306, column: 70)
!13220 = !DILocation(line: 309, column: 9, scope: !13219)
!13221 = !DILocation(line: 311, column: 53, scope: !13222)
!13222 = distinct !DILexicalBlock(scope: !13211, file: !1999, line: 311, column: 14)
!13223 = !DILocation(line: 311, column: 14, scope: !13211)
!13224 = !DILocation(line: 315, column: 13, scope: !13225)
!13225 = distinct !DILexicalBlock(scope: !13226, file: !1999, line: 313, column: 70)
!13226 = distinct !DILexicalBlock(scope: !13227, file: !1999, line: 313, column: 13)
!13227 = distinct !DILexicalBlock(scope: !13222, file: !1999, line: 311, column: 82)
!13228 = !DILocation(line: 316, column: 9, scope: !13225)
!13229 = !DILocation(line: 327, column: 5, scope: !13201)
!13230 = !DILocation(line: 328, column: 1, scope: !13201)
!13231 = distinct !DISubprogram(name: "msdc1_isr", scope: !1999, file: !1999, line: 331, type: !568, scopeLine: 332, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1998, retainedNodes: !13232)
!13232 = !{!13233}
!13233 = !DILocalVariable(name: "irq_number", arg: 1, scope: !13231, file: !1999, line: 331, type: !570)
!13234 = !DILocation(line: 0, scope: !13231)
!13235 = !DILocation(line: 333, column: 5, scope: !13231)
!13236 = !DILocation(line: 334, column: 62, scope: !13231)
!13237 = !DILocation(line: 334, column: 49, scope: !13231)
!13238 = !DILocation(line: 335, column: 55, scope: !13231)
!13239 = !DILocation(line: 335, column: 42, scope: !13231)
!13240 = !DILocation(line: 338, column: 48, scope: !13241)
!13241 = distinct !DILexicalBlock(scope: !13231, file: !1999, line: 338, column: 9)
!13242 = !DILocation(line: 338, column: 9, scope: !13231)
!13243 = !DILocation(line: 340, column: 38, scope: !13244)
!13244 = distinct !DILexicalBlock(scope: !13245, file: !1999, line: 340, column: 13)
!13245 = distinct !DILexicalBlock(scope: !13241, file: !1999, line: 338, column: 73)
!13246 = !DILocation(line: 340, column: 13, scope: !13244)
!13247 = !DILocation(line: 340, column: 13, scope: !13245)
!13248 = !DILocation(line: 342, column: 13, scope: !13249)
!13249 = distinct !DILexicalBlock(scope: !13244, file: !1999, line: 340, column: 70)
!13250 = !DILocation(line: 343, column: 9, scope: !13249)
!13251 = !DILocation(line: 345, column: 53, scope: !13252)
!13252 = distinct !DILexicalBlock(scope: !13241, file: !1999, line: 345, column: 14)
!13253 = !DILocation(line: 345, column: 14, scope: !13241)
!13254 = !DILocation(line: 349, column: 13, scope: !13255)
!13255 = distinct !DILexicalBlock(scope: !13256, file: !1999, line: 347, column: 70)
!13256 = distinct !DILexicalBlock(scope: !13257, file: !1999, line: 347, column: 13)
!13257 = distinct !DILexicalBlock(scope: !13252, file: !1999, line: 345, column: 82)
!13258 = !DILocation(line: 350, column: 9, scope: !13255)
!13259 = !DILocation(line: 361, column: 5, scope: !13231)
!13260 = !DILocation(line: 362, column: 1, scope: !13231)
!13261 = distinct !DISubprogram(name: "msdc_interrupt_init", scope: !1999, file: !1999, line: 365, type: !13028, scopeLine: 366, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1998, retainedNodes: !13262)
!13262 = !{!13263, !13264}
!13263 = !DILocalVariable(name: "msdc_port", arg: 1, scope: !13261, file: !1999, line: 365, type: !1548)
!13264 = !DILocalVariable(name: "msdc_register_base", scope: !13261, file: !1999, line: 367, type: !2049)
!13265 = !DILocation(line: 0, scope: !13261)
!13266 = !DILocation(line: 371, column: 5, scope: !13261)
!13267 = !DILocation(line: 373, column: 9, scope: !13261)
!13268 = !DILocation(line: 374, column: 9, scope: !13269)
!13269 = distinct !DILexicalBlock(scope: !13270, file: !1999, line: 373, column: 35)
!13270 = distinct !DILexicalBlock(scope: !13261, file: !1999, line: 373, column: 9)
!13271 = !DILocation(line: 375, column: 5, scope: !13269)
!13272 = !DILocation(line: 376, column: 9, scope: !13273)
!13273 = distinct !DILexicalBlock(scope: !13274, file: !1999, line: 375, column: 42)
!13274 = distinct !DILexicalBlock(scope: !13270, file: !1999, line: 375, column: 16)
!13275 = !DILocation(line: 377, column: 5, scope: !13273)
!13276 = !DILocation(line: 380, column: 25, scope: !13261)
!13277 = !DILocation(line: 383, column: 56, scope: !13261)
!13278 = !DILocation(line: 383, column: 65, scope: !13261)
!13279 = !DILocation(line: 383, column: 34, scope: !13261)
!13280 = !DILocation(line: 386, column: 56, scope: !13261)
!13281 = !DILocation(line: 386, column: 65, scope: !13261)
!13282 = !DILocation(line: 386, column: 34, scope: !13261)
!13283 = !DILocation(line: 388, column: 25, scope: !13261)
!13284 = !DILocation(line: 388, column: 38, scope: !13261)
!13285 = !DILocation(line: 391, column: 56, scope: !13261)
!13286 = !DILocation(line: 391, column: 65, scope: !13261)
!13287 = !DILocation(line: 391, column: 34, scope: !13261)
!13288 = !DILocation(line: 393, column: 5, scope: !13261)
!13289 = !DILocation(line: 394, column: 1, scope: !13261)
!13290 = distinct !DISubprogram(name: "msdc_card_is_present", scope: !1999, file: !1999, line: 488, type: !13291, scopeLine: 489, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1998, retainedNodes: !13293)
!13291 = !DISubroutineType(types: !13292)
!13292 = !{!91, !1548}
!13293 = !{!13294}
!13294 = !DILocalVariable(name: "msdc_port", arg: 1, scope: !13290, file: !1999, line: 488, type: !1548)
!13295 = !DILocation(line: 0, scope: !13290)
!13296 = !DILocation(line: 490, column: 36, scope: !13290)
!13297 = !DILocation(line: 490, column: 5, scope: !13290)
!13298 = distinct !DISubprogram(name: "msdc_dma_wait_transfer_complete", scope: !1999, file: !1999, line: 494, type: !12941, scopeLine: 495, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1998, retainedNodes: !13299)
!13299 = !{!13300, !13301, !13302}
!13300 = !DILocalVariable(name: "msdc_port", arg: 1, scope: !13298, file: !1999, line: 494, type: !1548)
!13301 = !DILocalVariable(name: "address", arg: 2, scope: !13298, file: !1999, line: 494, type: !61)
!13302 = !DILocalVariable(name: "dma_channel", scope: !13298, file: !1999, line: 496, type: !1270)
!13303 = !DILocation(line: 0, scope: !13298)
!13304 = !DILocation(line: 498, column: 30, scope: !13298)
!13305 = !DILocation(line: 498, column: 19, scope: !13298)
!13306 = !DILocation(line: 500, column: 5, scope: !13298)
!13307 = !DILocation(line: 501, column: 1, scope: !13298)
!13308 = distinct !DISubprogram(name: "msdc_set_dma_interrupt", scope: !1999, file: !1999, line: 503, type: !12941, scopeLine: 504, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1998, retainedNodes: !13309)
!13309 = !{!13310, !13311, !13312}
!13310 = !DILocalVariable(name: "msdc_port", arg: 1, scope: !13308, file: !1999, line: 503, type: !1548)
!13311 = !DILocalVariable(name: "address", arg: 2, scope: !13308, file: !1999, line: 503, type: !61)
!13312 = !DILocalVariable(name: "dma_channel", scope: !13308, file: !1999, line: 505, type: !1270)
!13313 = !DILocation(line: 0, scope: !13308)
!13314 = !DILocation(line: 507, column: 30, scope: !13308)
!13315 = !DILocation(line: 507, column: 19, scope: !13308)
!13316 = !DILocation(line: 509, column: 5, scope: !13308)
!13317 = !DILocation(line: 510, column: 1, scope: !13308)
!13318 = distinct !DISubprogram(name: "msdc_dma_isr", scope: !1999, file: !1999, line: 512, type: !579, scopeLine: 513, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1998, retainedNodes: !13319)
!13319 = !{!13320, !13321}
!13320 = !DILocalVariable(name: "msdc_event", arg: 1, scope: !13318, file: !1999, line: 512, type: !581)
!13321 = !DILocalVariable(name: "user_data", arg: 2, scope: !13318, file: !1999, line: 512, type: !88)
!13322 = !DILocation(line: 0, scope: !13318)
!13323 = !DILocation(line: 514, column: 41, scope: !13318)
!13324 = !DILocation(line: 515, column: 26, scope: !13325)
!13325 = distinct !DILexicalBlock(scope: !13318, file: !1999, line: 515, column: 9)
!13326 = !DILocation(line: 515, column: 23, scope: !13325)
!13327 = !DILocation(line: 515, column: 9, scope: !13318)
!13328 = !DILocation(line: 518, column: 45, scope: !13329)
!13329 = distinct !DILexicalBlock(scope: !13330, file: !1999, line: 518, column: 20)
!13330 = distinct !DILexicalBlock(scope: !13325, file: !1999, line: 515, column: 55)
!13331 = !DILocation(line: 518, column: 20, scope: !13329)
!13332 = !DILocation(line: 518, column: 20, scope: !13330)
!13333 = !DILocation(line: 519, column: 45, scope: !13334)
!13334 = distinct !DILexicalBlock(scope: !13335, file: !1999, line: 519, column: 25)
!13335 = distinct !DILexicalBlock(scope: !13329, file: !1999, line: 518, column: 77)
!13336 = !DILocation(line: 519, column: 42, scope: !13334)
!13337 = !DILocation(line: 519, column: 25, scope: !13335)
!13338 = !DILocation(line: 520, column: 25, scope: !13339)
!13339 = distinct !DILexicalBlock(scope: !13334, file: !1999, line: 519, column: 98)
!13340 = !DILocation(line: 521, column: 21, scope: !13339)
!13341 = !DILocation(line: 526, column: 33, scope: !13342)
!13342 = distinct !DILexicalBlock(scope: !13325, file: !1999, line: 526, column: 14)
!13343 = !DILocation(line: 535, column: 1, scope: !13318)
!13344 = distinct !DISubprogram(name: "msdc_get_owner", scope: !1999, file: !1999, line: 660, type: !13345, scopeLine: 661, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1998, retainedNodes: !13347)
!13345 = !DISubroutineType(types: !13346)
!13346 = !{!2190, !1548}
!13347 = !{!13348}
!13348 = !DILocalVariable(name: "msdc_port", arg: 1, scope: !13344, file: !1999, line: 660, type: !1548)
!13349 = !DILocation(line: 0, scope: !13344)
!13350 = !DILocation(line: 662, column: 36, scope: !13344)
!13351 = !DILocation(line: 662, column: 5, scope: !13344)
!13352 = distinct !DISubprogram(name: "msdc1_dma_isr", scope: !1999, file: !1999, line: 537, type: !579, scopeLine: 538, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1998, retainedNodes: !13353)
!13353 = !{!13354, !13355}
!13354 = !DILocalVariable(name: "msdc_event", arg: 1, scope: !13352, file: !1999, line: 537, type: !581)
!13355 = !DILocalVariable(name: "user_data", arg: 2, scope: !13352, file: !1999, line: 537, type: !88)
!13356 = !DILocation(line: 0, scope: !13352)
!13357 = !DILocation(line: 539, column: 41, scope: !13352)
!13358 = !DILocation(line: 540, column: 26, scope: !13359)
!13359 = distinct !DILexicalBlock(scope: !13352, file: !1999, line: 540, column: 9)
!13360 = !DILocation(line: 540, column: 23, scope: !13359)
!13361 = !DILocation(line: 540, column: 9, scope: !13352)
!13362 = !DILocation(line: 543, column: 45, scope: !13363)
!13363 = distinct !DILexicalBlock(scope: !13364, file: !1999, line: 543, column: 20)
!13364 = distinct !DILexicalBlock(scope: !13359, file: !1999, line: 540, column: 55)
!13365 = !DILocation(line: 543, column: 20, scope: !13363)
!13366 = !DILocation(line: 543, column: 20, scope: !13364)
!13367 = !DILocation(line: 544, column: 45, scope: !13368)
!13368 = distinct !DILexicalBlock(scope: !13369, file: !1999, line: 544, column: 25)
!13369 = distinct !DILexicalBlock(scope: !13363, file: !1999, line: 543, column: 77)
!13370 = !DILocation(line: 544, column: 42, scope: !13368)
!13371 = !DILocation(line: 544, column: 25, scope: !13369)
!13372 = !DILocation(line: 545, column: 25, scope: !13373)
!13373 = distinct !DILexicalBlock(scope: !13368, file: !1999, line: 544, column: 111)
!13374 = !DILocation(line: 546, column: 21, scope: !13373)
!13375 = !DILocation(line: 551, column: 33, scope: !13376)
!13376 = distinct !DILexicalBlock(scope: !13359, file: !1999, line: 551, column: 14)
!13377 = !DILocation(line: 560, column: 1, scope: !13352)
!13378 = distinct !DISubprogram(name: "msdc_dma_init", scope: !1999, file: !1999, line: 563, type: !13028, scopeLine: 564, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1998, retainedNodes: !13379)
!13379 = !{!13380, !13381}
!13380 = !DILocalVariable(name: "msdc_port", arg: 1, scope: !13378, file: !1999, line: 563, type: !1548)
!13381 = !DILocalVariable(name: "dma_channel", scope: !13378, file: !1999, line: 565, type: !1270)
!13382 = !DILocation(line: 0, scope: !13378)
!13383 = !DILocation(line: 567, column: 30, scope: !13378)
!13384 = !DILocation(line: 567, column: 19, scope: !13378)
!13385 = !DILocation(line: 569, column: 28, scope: !13378)
!13386 = !DILocation(line: 569, column: 39, scope: !13378)
!13387 = !DILocation(line: 571, column: 5, scope: !13378)
!13388 = !DILocation(line: 573, column: 9, scope: !13378)
!13389 = !DILocation(line: 575, column: 26, scope: !13390)
!13390 = distinct !DILexicalBlock(scope: !13391, file: !1999, line: 575, column: 16)
!13391 = distinct !DILexicalBlock(scope: !13378, file: !1999, line: 573, column: 9)
!13392 = !DILocation(line: 575, column: 16, scope: !13391)
!13393 = !DILocation(line: 0, scope: !13391)
!13394 = !DILocation(line: 578, column: 1, scope: !13378)
!13395 = distinct !DISubprogram(name: "msdc_dma_config", scope: !1999, file: !1999, line: 581, type: !13396, scopeLine: 582, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1998, retainedNodes: !13398)
!13396 = !DISubroutineType(types: !13397)
!13397 = !{null, !1548, !61, !61, !91}
!13398 = !{!13399, !13400, !13401, !13402, !13403, !13411, !13412}
!13399 = !DILocalVariable(name: "msdc_port", arg: 1, scope: !13395, file: !1999, line: 581, type: !1548)
!13400 = !DILocalVariable(name: "address", arg: 2, scope: !13395, file: !1999, line: 581, type: !61)
!13401 = !DILocalVariable(name: "count", arg: 3, scope: !13395, file: !1999, line: 581, type: !61)
!13402 = !DILocalVariable(name: "is_write", arg: 4, scope: !13395, file: !1999, line: 581, type: !91)
!13403 = !DILocalVariable(name: "dma_config", scope: !13395, file: !1999, line: 583, type: !13404)
!13404 = !DIDerivedType(tag: DW_TAG_typedef, name: "pdma_config_t", file: !400, line: 275, baseType: !13405)
!13405 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !400, line: 270, size: 128, elements: !13406)
!13406 = !{!13407, !13408, !13409, !13410}
!13407 = !DIDerivedType(tag: DW_TAG_member, name: "burst_mode", scope: !13405, file: !400, line: 271, baseType: !91, size: 8)
!13408 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !13405, file: !400, line: 272, baseType: !5916, size: 32, offset: 32)
!13409 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !13405, file: !400, line: 273, baseType: !61, size: 32, offset: 64)
!13410 = !DIDerivedType(tag: DW_TAG_member, name: "master_type", scope: !13405, file: !400, line: 274, baseType: !5919, size: 32, offset: 96)
!13411 = !DILocalVariable(name: "msdc_register_base", scope: !13395, file: !1999, line: 584, type: !2049)
!13412 = !DILocalVariable(name: "dma_channel", scope: !13395, file: !1999, line: 585, type: !1270)
!13413 = !DILocation(line: 0, scope: !13395)
!13414 = !DILocation(line: 583, column: 5, scope: !13395)
!13415 = !DILocation(line: 583, column: 19, scope: !13395)
!13416 = !DILocation(line: 587, column: 30, scope: !13395)
!13417 = !DILocation(line: 587, column: 19, scope: !13395)
!13418 = !DILocation(line: 590, column: 5, scope: !13395)
!13419 = !DILocation(line: 592, column: 28, scope: !13395)
!13420 = !DILocation(line: 592, column: 39, scope: !13395)
!13421 = !DILocation(line: 594, column: 19, scope: !13422)
!13422 = distinct !DILexicalBlock(scope: !13395, file: !1999, line: 594, column: 9)
!13423 = !DILocation(line: 0, scope: !13422)
!13424 = !DILocation(line: 594, column: 9, scope: !13395)
!13425 = !DILocation(line: 595, column: 98, scope: !13426)
!13426 = distinct !DILexicalBlock(scope: !13422, file: !1999, line: 594, column: 28)
!13427 = !DILocation(line: 595, column: 38, scope: !13426)
!13428 = !DILocation(line: 597, column: 63, scope: !13426)
!13429 = !DILocation(line: 597, column: 74, scope: !13426)
!13430 = !DILocation(line: 597, column: 105, scope: !13426)
!13431 = !DILocation(line: 597, column: 40, scope: !13426)
!13432 = !DILocation(line: 599, column: 31, scope: !13426)
!13433 = !DILocation(line: 600, column: 20, scope: !13426)
!13434 = !DILocation(line: 600, column: 25, scope: !13426)
!13435 = !DILocation(line: 601, column: 34, scope: !13426)
!13436 = !DILocation(line: 601, column: 20, scope: !13426)
!13437 = !DILocation(line: 601, column: 26, scope: !13426)
!13438 = !DILocation(line: 602, column: 34, scope: !13426)
!13439 = !DILocation(line: 602, column: 20, scope: !13426)
!13440 = !DILocation(line: 602, column: 32, scope: !13426)
!13441 = !DILocation(line: 616, column: 26, scope: !13442)
!13442 = distinct !DILexicalBlock(scope: !13395, file: !1999, line: 616, column: 9)
!13443 = !DILocation(line: 616, column: 9, scope: !13395)
!13444 = !DILocation(line: 605, column: 98, scope: !13445)
!13445 = distinct !DILexicalBlock(scope: !13422, file: !1999, line: 604, column: 12)
!13446 = !DILocation(line: 605, column: 38, scope: !13445)
!13447 = !DILocation(line: 607, column: 63, scope: !13445)
!13448 = !DILocation(line: 607, column: 74, scope: !13445)
!13449 = !DILocation(line: 607, column: 40, scope: !13445)
!13450 = !DILocation(line: 609, column: 31, scope: !13445)
!13451 = !DILocation(line: 610, column: 20, scope: !13445)
!13452 = !DILocation(line: 610, column: 25, scope: !13445)
!13453 = !DILocation(line: 611, column: 20, scope: !13445)
!13454 = !DILocation(line: 611, column: 26, scope: !13445)
!13455 = !DILocation(line: 612, column: 34, scope: !13445)
!13456 = !DILocation(line: 612, column: 20, scope: !13445)
!13457 = !DILocation(line: 612, column: 32, scope: !13445)
!13458 = !DILocation(line: 619, column: 88, scope: !13459)
!13459 = distinct !DILexicalBlock(scope: !13460, file: !1999, line: 618, column: 32)
!13460 = distinct !DILexicalBlock(scope: !13461, file: !1999, line: 618, column: 13)
!13461 = distinct !DILexicalBlock(scope: !13442, file: !1999, line: 616, column: 48)
!13462 = !DILocation(line: 621, column: 9, scope: !13459)
!13463 = !DILocation(line: 622, column: 65, scope: !13464)
!13464 = distinct !DILexicalBlock(scope: !13460, file: !1999, line: 621, column: 16)
!13465 = !DILocation(line: 0, scope: !13460)
!13466 = !DILocation(line: 626, column: 32, scope: !13461)
!13467 = !DILocation(line: 626, column: 45, scope: !13461)
!13468 = !DILocation(line: 627, column: 26, scope: !13461)
!13469 = !DILocation(line: 629, column: 5, scope: !13461)
!13470 = !DILocation(line: 630, column: 32, scope: !13471)
!13471 = distinct !DILexicalBlock(scope: !13442, file: !1999, line: 629, column: 12)
!13472 = !DILocation(line: 630, column: 42, scope: !13471)
!13473 = !DILocation(line: 631, column: 32, scope: !13471)
!13474 = !DILocation(line: 631, column: 44, scope: !13471)
!13475 = !DILocation(line: 632, column: 32, scope: !13471)
!13476 = !DILocation(line: 632, column: 45, scope: !13471)
!13477 = !DILocation(line: 635, column: 13, scope: !13478)
!13478 = distinct !DILexicalBlock(scope: !13395, file: !1999, line: 635, column: 9)
!13479 = !DILocation(line: 635, column: 11, scope: !13478)
!13480 = !DILocation(line: 635, column: 9, scope: !13395)
!13481 = !DILocation(line: 636, column: 9, scope: !13482)
!13482 = distinct !DILexicalBlock(scope: !13478, file: !1999, line: 635, column: 55)
!13483 = !DILocation(line: 637, column: 5, scope: !13482)
!13484 = !DILocation(line: 638, column: 1, scope: !13395)
!13485 = distinct !DISubprogram(name: "msdc_dma_enable", scope: !1999, file: !1999, line: 641, type: !13028, scopeLine: 642, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1998, retainedNodes: !13486)
!13486 = !{!13487, !13488}
!13487 = !DILocalVariable(name: "msdc_port", arg: 1, scope: !13485, file: !1999, line: 641, type: !1548)
!13488 = !DILocalVariable(name: "msdc_register_base", scope: !13485, file: !1999, line: 643, type: !2049)
!13489 = !DILocation(line: 0, scope: !13485)
!13490 = !DILocation(line: 645, column: 39, scope: !13485)
!13491 = !DILocation(line: 647, column: 56, scope: !13485)
!13492 = !DILocation(line: 647, column: 65, scope: !13485)
!13493 = !DILocation(line: 647, column: 34, scope: !13485)
!13494 = !DILocation(line: 648, column: 1, scope: !13485)
!13495 = distinct !DISubprogram(name: "msdc_dma_disable", scope: !1999, file: !1999, line: 650, type: !13028, scopeLine: 651, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1998, retainedNodes: !13496)
!13496 = !{!13497, !13498}
!13497 = !DILocalVariable(name: "msdc_port", arg: 1, scope: !13495, file: !1999, line: 650, type: !1548)
!13498 = !DILocalVariable(name: "msdc_register_base", scope: !13495, file: !1999, line: 652, type: !2049)
!13499 = !DILocation(line: 0, scope: !13495)
!13500 = !DILocation(line: 654, column: 39, scope: !13495)
!13501 = !DILocation(line: 656, column: 56, scope: !13495)
!13502 = !DILocation(line: 656, column: 65, scope: !13495)
!13503 = !DILocation(line: 656, column: 34, scope: !13495)
!13504 = !DILocation(line: 657, column: 1, scope: !13495)
!13505 = distinct !DISubprogram(name: "msdc_set_owner", scope: !1999, file: !1999, line: 665, type: !13506, scopeLine: 666, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1998, retainedNodes: !13508)
!13506 = !DISubroutineType(types: !13507)
!13507 = !{null, !1548, !2190}
!13508 = !{!13509, !13510}
!13509 = !DILocalVariable(name: "msdc_port", arg: 1, scope: !13505, file: !1999, line: 665, type: !1548)
!13510 = !DILocalVariable(name: "owner", arg: 2, scope: !13505, file: !1999, line: 665, type: !2190)
!13511 = !DILocation(line: 0, scope: !13505)
!13512 = !DILocation(line: 667, column: 28, scope: !13505)
!13513 = !DILocation(line: 667, column: 34, scope: !13505)
!13514 = !DILocation(line: 668, column: 1, scope: !13505)
!13515 = distinct !DISubprogram(name: "msdc_card_power_set", scope: !1999, file: !1999, line: 671, type: !13118, scopeLine: 672, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1998, retainedNodes: !13516)
!13516 = !{!13517, !13518}
!13517 = !DILocalVariable(name: "msdc_port", arg: 1, scope: !13515, file: !1999, line: 671, type: !1548)
!13518 = !DILocalVariable(name: "is_power_on", arg: 2, scope: !13515, file: !1999, line: 671, type: !91)
!13519 = !DILocation(line: 0, scope: !13515)
!13520 = !DILocation(line: 673, column: 40, scope: !13515)
!13521 = !DILocation(line: 673, column: 5, scope: !13515)
!13522 = !DILocation(line: 674, column: 1, scope: !13515)
!13523 = distinct !DISubprogram(name: "msdc_pad_mux_select", scope: !1999, file: !1999, line: 676, type: !13028, scopeLine: 677, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1998, retainedNodes: !13524)
!13524 = !{!13525}
!13525 = !DILocalVariable(name: "msdc_port", arg: 1, scope: !13523, file: !1999, line: 676, type: !1548)
!13526 = !DILocation(line: 0, scope: !13523)
!13527 = !DILocation(line: 678, column: 22, scope: !13528)
!13528 = distinct !DILexicalBlock(scope: !13523, file: !1999, line: 678, column: 9)
!13529 = !DILocation(line: 678, column: 36, scope: !13528)
!13530 = !DILocation(line: 678, column: 67, scope: !13528)
!13531 = !DILocation(line: 678, column: 62, scope: !13528)
!13532 = !DILocation(line: 678, column: 9, scope: !13523)
!13533 = !DILocation(line: 679, column: 58, scope: !13534)
!13534 = distinct !DILexicalBlock(scope: !13528, file: !1999, line: 678, column: 183)
!13535 = !DILocation(line: 679, column: 105, scope: !13534)
!13536 = !DILocation(line: 679, column: 56, scope: !13534)
!13537 = !DILocation(line: 680, column: 5, scope: !13534)
!13538 = !DILocation(line: 681, column: 1, scope: !13523)
!13539 = distinct !DISubprogram(name: "msdc_init", scope: !1999, file: !1999, line: 683, type: !13540, scopeLine: 684, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1998, retainedNodes: !13543)
!13540 = !DISubroutineType(types: !13541)
!13541 = !{!13542, !1548}
!13542 = !DIDerivedType(tag: DW_TAG_typedef, name: "msdc_status_t", file: !1465, line: 88, baseType: !1464)
!13543 = !{!13544, !13545, !13546}
!13544 = !DILocalVariable(name: "msdc_port", arg: 1, scope: !13539, file: !1999, line: 683, type: !1548)
!13545 = !DILocalVariable(name: "msdc_register_base", scope: !13539, file: !1999, line: 685, type: !2049)
!13546 = !DILocalVariable(name: "msdc_io_driving", scope: !13539, file: !1999, line: 686, type: !2082)
!13547 = !DILocation(line: 0, scope: !13539)
!13548 = !DILocation(line: 686, column: 5, scope: !13539)
!13549 = !DILocation(line: 686, column: 25, scope: !13539)
!13550 = !DILocation(line: 691, column: 32, scope: !13551)
!13551 = distinct !DILexicalBlock(scope: !13539, file: !1999, line: 691, column: 9)
!13552 = !DILocation(line: 691, column: 9, scope: !13539)
!13553 = !DILocation(line: 688, column: 39, scope: !13539)
!13554 = !DILocation(line: 697, column: 5, scope: !13539)
!13555 = !DILocation(line: 699, column: 5, scope: !13539)
!13556 = !DILocation(line: 702, column: 5, scope: !13539)
!13557 = !DILocation(line: 704, column: 28, scope: !13539)
!13558 = !DILocation(line: 704, column: 39, scope: !13539)
!13559 = !DILocation(line: 707, column: 56, scope: !13539)
!13560 = !DILocation(line: 707, column: 65, scope: !13539)
!13561 = !DILocation(line: 707, column: 34, scope: !13539)
!13562 = !DILocation(line: 710, column: 25, scope: !13563)
!13563 = distinct !DILexicalBlock(scope: !13564, file: !1999, line: 709, column: 35)
!13564 = distinct !DILexicalBlock(scope: !13539, file: !1999, line: 709, column: 9)
!13565 = !DILocation(line: 710, column: 64, scope: !13563)
!13566 = !DILocation(line: 711, column: 25, scope: !13563)
!13567 = !DILocation(line: 711, column: 61, scope: !13563)
!13568 = !DILocation(line: 712, column: 25, scope: !13563)
!13569 = !DILocation(line: 712, column: 48, scope: !13563)
!13570 = !DILocation(line: 713, column: 25, scope: !13563)
!13571 = !DILocation(line: 713, column: 45, scope: !13563)
!13572 = !DILocation(line: 722, column: 5, scope: !13539)
!13573 = !DILocation(line: 724, column: 5, scope: !13539)
!13574 = !DILocation(line: 727, column: 57, scope: !13539)
!13575 = !DILocation(line: 727, column: 66, scope: !13539)
!13576 = !DILocation(line: 727, column: 94, scope: !13539)
!13577 = !DILocation(line: 727, column: 34, scope: !13539)
!13578 = !DILocation(line: 730, column: 28, scope: !13539)
!13579 = !DILocation(line: 730, column: 44, scope: !13539)
!13580 = !DILocation(line: 733, column: 5, scope: !13539)
!13581 = !DILocation(line: 736, column: 5, scope: !13539)
!13582 = !DILocation(line: 743, column: 43, scope: !13539)
!13583 = !DILocation(line: 746, column: 5, scope: !13539)
!13584 = !DILocation(line: 749, column: 5, scope: !13539)
!13585 = !DILocation(line: 750, column: 1, scope: !13539)
!13586 = distinct !DISubprogram(name: "msdc_switch_pinmux_to_msdc_mode", scope: !1999, file: !1999, line: 962, type: !343, scopeLine: 963, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1998, retainedNodes: !345)
!13587 = !DILocation(line: 965, column: 9, scope: !13588)
!13588 = distinct !DILexicalBlock(scope: !13586, file: !1999, line: 965, column: 9)
!13589 = !DILocation(line: 965, column: 33, scope: !13588)
!13590 = !DILocation(line: 965, column: 9, scope: !13586)
!13591 = !DILocation(line: 966, column: 9, scope: !13592)
!13592 = distinct !DILexicalBlock(scope: !13588, file: !1999, line: 965, column: 65)
!13593 = !DILocation(line: 967, column: 9, scope: !13592)
!13594 = !DILocation(line: 968, column: 9, scope: !13592)
!13595 = !DILocation(line: 969, column: 9, scope: !13592)
!13596 = !DILocation(line: 970, column: 9, scope: !13592)
!13597 = !DILocation(line: 971, column: 9, scope: !13592)
!13598 = !DILocation(line: 973, column: 9, scope: !13592)
!13599 = !DILocation(line: 974, column: 9, scope: !13592)
!13600 = !DILocation(line: 975, column: 9, scope: !13592)
!13601 = !DILocation(line: 980, column: 5, scope: !13592)
!13602 = !DILocation(line: 980, column: 16, scope: !13603)
!13603 = distinct !DILexicalBlock(scope: !13588, file: !1999, line: 980, column: 16)
!13604 = !DILocation(line: 980, column: 40, scope: !13603)
!13605 = !DILocation(line: 980, column: 16, scope: !13588)
!13606 = !DILocation(line: 981, column: 9, scope: !13607)
!13607 = distinct !DILexicalBlock(scope: !13603, file: !1999, line: 980, column: 72)
!13608 = !DILocation(line: 982, column: 9, scope: !13607)
!13609 = !DILocation(line: 983, column: 9, scope: !13607)
!13610 = !DILocation(line: 988, column: 5, scope: !13607)
!13611 = !DILocation(line: 0, scope: !13588)
!13612 = !DILocation(line: 992, column: 9, scope: !13613)
!13613 = distinct !DILexicalBlock(scope: !13586, file: !1999, line: 992, column: 9)
!13614 = !DILocation(line: 992, column: 33, scope: !13613)
!13615 = !DILocation(line: 992, column: 9, scope: !13586)
!13616 = !DILocation(line: 993, column: 9, scope: !13617)
!13617 = distinct !DILexicalBlock(scope: !13613, file: !1999, line: 992, column: 71)
!13618 = !DILocation(line: 994, column: 9, scope: !13617)
!13619 = !DILocation(line: 995, column: 9, scope: !13617)
!13620 = !DILocation(line: 996, column: 9, scope: !13617)
!13621 = !DILocation(line: 997, column: 9, scope: !13617)
!13622 = !DILocation(line: 998, column: 9, scope: !13617)
!13623 = !DILocation(line: 1000, column: 9, scope: !13617)
!13624 = !DILocation(line: 1001, column: 9, scope: !13617)
!13625 = !DILocation(line: 1002, column: 9, scope: !13617)
!13626 = !DILocation(line: 1006, column: 5, scope: !13617)
!13627 = !DILocation(line: 1006, column: 16, scope: !13628)
!13628 = distinct !DILexicalBlock(scope: !13613, file: !1999, line: 1006, column: 16)
!13629 = !DILocation(line: 1006, column: 40, scope: !13628)
!13630 = !DILocation(line: 1006, column: 16, scope: !13613)
!13631 = !DILocation(line: 1007, column: 9, scope: !13632)
!13632 = distinct !DILexicalBlock(scope: !13628, file: !1999, line: 1006, column: 78)
!13633 = !DILocation(line: 1008, column: 9, scope: !13632)
!13634 = !DILocation(line: 1009, column: 9, scope: !13632)
!13635 = !DILocation(line: 1014, column: 5, scope: !13632)
!13636 = !DILocation(line: 0, scope: !13613)
!13637 = !DILocation(line: 1017, column: 9, scope: !13638)
!13638 = distinct !DILexicalBlock(scope: !13586, file: !1999, line: 1017, column: 9)
!13639 = !DILocation(line: 1017, column: 33, scope: !13638)
!13640 = !DILocation(line: 1017, column: 9, scope: !13586)
!13641 = !DILocation(line: 1018, column: 9, scope: !13642)
!13642 = distinct !DILexicalBlock(scope: !13638, file: !1999, line: 1017, column: 71)
!13643 = !DILocation(line: 1019, column: 9, scope: !13642)
!13644 = !DILocation(line: 1020, column: 9, scope: !13642)
!13645 = !DILocation(line: 1021, column: 9, scope: !13642)
!13646 = !DILocation(line: 1022, column: 9, scope: !13642)
!13647 = !DILocation(line: 1023, column: 9, scope: !13642)
!13648 = !DILocation(line: 1025, column: 9, scope: !13642)
!13649 = !DILocation(line: 1026, column: 9, scope: !13642)
!13650 = !DILocation(line: 1027, column: 9, scope: !13642)
!13651 = !DILocation(line: 1031, column: 5, scope: !13642)
!13652 = !DILocation(line: 1031, column: 16, scope: !13653)
!13653 = distinct !DILexicalBlock(scope: !13638, file: !1999, line: 1031, column: 16)
!13654 = !DILocation(line: 1031, column: 40, scope: !13653)
!13655 = !DILocation(line: 1031, column: 16, scope: !13638)
!13656 = !DILocation(line: 1032, column: 9, scope: !13657)
!13657 = distinct !DILexicalBlock(scope: !13653, file: !1999, line: 1031, column: 78)
!13658 = !DILocation(line: 1033, column: 9, scope: !13657)
!13659 = !DILocation(line: 1034, column: 9, scope: !13657)
!13660 = !DILocation(line: 1039, column: 5, scope: !13657)
!13661 = !DILocation(line: 0, scope: !13638)
!13662 = !DILocation(line: 1041, column: 29, scope: !13586)
!13663 = !DILocation(line: 1042, column: 1, scope: !13586)
!13664 = distinct !DISubprogram(name: "msdc_deinit", scope: !1999, file: !1999, line: 753, type: !13028, scopeLine: 754, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1998, retainedNodes: !13665)
!13665 = !{!13666}
!13666 = !DILocalVariable(name: "msdc_port", arg: 1, scope: !13664, file: !1999, line: 753, type: !1548)
!13667 = !DILocation(line: 0, scope: !13664)
!13668 = !DILocation(line: 755, column: 28, scope: !13664)
!13669 = !DILocation(line: 755, column: 43, scope: !13664)
!13670 = !DILocation(line: 757, column: 28, scope: !13664)
!13671 = !DILocation(line: 757, column: 34, scope: !13664)
!13672 = !DILocation(line: 759, column: 28, scope: !13664)
!13673 = !DILocation(line: 759, column: 44, scope: !13664)
!13674 = !DILocation(line: 762, column: 5, scope: !13664)
!13675 = !DILocation(line: 765, column: 5, scope: !13664)
!13676 = !DILocation(line: 769, column: 5, scope: !13664)
!13677 = !DILocation(line: 772, column: 5, scope: !13664)
!13678 = !DILocation(line: 774, column: 1, scope: !13664)
!13679 = distinct !DISubprogram(name: "msdc_switch_pinmux_to_gpio_mode", scope: !1999, file: !1999, line: 882, type: !343, scopeLine: 883, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1998, retainedNodes: !345)
!13680 = !DILocation(line: 885, column: 31, scope: !13681)
!13681 = distinct !DILexicalBlock(scope: !13679, file: !1999, line: 885, column: 9)
!13682 = !DILocation(line: 885, column: 28, scope: !13681)
!13683 = !DILocation(line: 885, column: 9, scope: !13679)
!13684 = !DILocation(line: 886, column: 9, scope: !13685)
!13685 = distinct !DILexicalBlock(scope: !13681, file: !1999, line: 885, column: 61)
!13686 = !DILocation(line: 887, column: 9, scope: !13685)
!13687 = !DILocation(line: 888, column: 9, scope: !13685)
!13688 = !DILocation(line: 891, column: 9, scope: !13685)
!13689 = !DILocation(line: 892, column: 9, scope: !13685)
!13690 = !DILocation(line: 893, column: 9, scope: !13685)
!13691 = !DILocation(line: 895, column: 33, scope: !13685)
!13692 = !DILocation(line: 897, column: 36, scope: !13693)
!13693 = distinct !DILexicalBlock(scope: !13685, file: !1999, line: 897, column: 13)
!13694 = !DILocation(line: 897, column: 33, scope: !13693)
!13695 = !DILocation(line: 897, column: 13, scope: !13685)
!13696 = !DILocation(line: 898, column: 13, scope: !13697)
!13697 = distinct !DILexicalBlock(scope: !13693, file: !1999, line: 897, column: 66)
!13698 = !DILocation(line: 899, column: 13, scope: !13697)
!13699 = !DILocation(line: 900, column: 13, scope: !13697)
!13700 = !DILocation(line: 902, column: 13, scope: !13697)
!13701 = !DILocation(line: 903, column: 13, scope: !13697)
!13702 = !DILocation(line: 904, column: 13, scope: !13697)
!13703 = !DILocation(line: 906, column: 37, scope: !13697)
!13704 = !DILocation(line: 907, column: 9, scope: !13697)
!13705 = !DILocation(line: 911, column: 33, scope: !13706)
!13706 = distinct !DILexicalBlock(scope: !13679, file: !1999, line: 911, column: 9)
!13707 = !DILocation(line: 911, column: 30, scope: !13706)
!13708 = !DILocation(line: 911, column: 9, scope: !13679)
!13709 = !DILocation(line: 912, column: 9, scope: !13710)
!13710 = distinct !DILexicalBlock(scope: !13706, file: !1999, line: 911, column: 63)
!13711 = !DILocation(line: 913, column: 9, scope: !13710)
!13712 = !DILocation(line: 914, column: 9, scope: !13710)
!13713 = !DILocation(line: 916, column: 9, scope: !13710)
!13714 = !DILocation(line: 917, column: 9, scope: !13710)
!13715 = !DILocation(line: 918, column: 9, scope: !13710)
!13716 = !DILocation(line: 920, column: 33, scope: !13710)
!13717 = !DILocation(line: 922, column: 38, scope: !13718)
!13718 = distinct !DILexicalBlock(scope: !13710, file: !1999, line: 922, column: 13)
!13719 = !DILocation(line: 922, column: 35, scope: !13718)
!13720 = !DILocation(line: 922, column: 13, scope: !13710)
!13721 = !DILocation(line: 923, column: 13, scope: !13722)
!13722 = distinct !DILexicalBlock(scope: !13718, file: !1999, line: 922, column: 68)
!13723 = !DILocation(line: 924, column: 13, scope: !13722)
!13724 = !DILocation(line: 925, column: 13, scope: !13722)
!13725 = !DILocation(line: 927, column: 13, scope: !13722)
!13726 = !DILocation(line: 928, column: 13, scope: !13722)
!13727 = !DILocation(line: 929, column: 13, scope: !13722)
!13728 = !DILocation(line: 931, column: 37, scope: !13722)
!13729 = !DILocation(line: 932, column: 9, scope: !13722)
!13730 = !DILocation(line: 936, column: 32, scope: !13731)
!13731 = distinct !DILexicalBlock(scope: !13679, file: !1999, line: 936, column: 9)
!13732 = !DILocation(line: 936, column: 29, scope: !13731)
!13733 = !DILocation(line: 936, column: 9, scope: !13679)
!13734 = !DILocation(line: 937, column: 9, scope: !13735)
!13735 = distinct !DILexicalBlock(scope: !13731, file: !1999, line: 936, column: 61)
!13736 = !DILocation(line: 938, column: 9, scope: !13735)
!13737 = !DILocation(line: 939, column: 9, scope: !13735)
!13738 = !DILocation(line: 941, column: 9, scope: !13735)
!13739 = !DILocation(line: 942, column: 9, scope: !13735)
!13740 = !DILocation(line: 943, column: 9, scope: !13735)
!13741 = !DILocation(line: 945, column: 33, scope: !13735)
!13742 = !DILocation(line: 947, column: 37, scope: !13743)
!13743 = distinct !DILexicalBlock(scope: !13735, file: !1999, line: 947, column: 13)
!13744 = !DILocation(line: 947, column: 34, scope: !13743)
!13745 = !DILocation(line: 947, column: 13, scope: !13735)
!13746 = !DILocation(line: 948, column: 13, scope: !13747)
!13747 = distinct !DILexicalBlock(scope: !13743, file: !1999, line: 947, column: 66)
!13748 = !DILocation(line: 949, column: 13, scope: !13747)
!13749 = !DILocation(line: 950, column: 13, scope: !13747)
!13750 = !DILocation(line: 952, column: 13, scope: !13747)
!13751 = !DILocation(line: 953, column: 13, scope: !13747)
!13752 = !DILocation(line: 954, column: 13, scope: !13747)
!13753 = !DILocation(line: 956, column: 37, scope: !13747)
!13754 = !DILocation(line: 957, column: 9, scope: !13747)
!13755 = !DILocation(line: 959, column: 1, scope: !13679)
!13756 = distinct !DISubprogram(name: "msdc_get_pinmux", scope: !1999, file: !1999, line: 861, type: !13757, scopeLine: 862, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1998, retainedNodes: !13759)
!13757 = !DISubroutineType(types: !13758)
!13758 = !{!159, !6561}
!13759 = !{!13760, !13761, !13762, !13763, !13764}
!13760 = !DILocalVariable(name: "pin_number", arg: 1, scope: !13756, file: !1999, line: 861, type: !6561)
!13761 = !DILocalVariable(name: "no", scope: !13756, file: !1999, line: 863, type: !61)
!13762 = !DILocalVariable(name: "remainder", scope: !13756, file: !1999, line: 864, type: !61)
!13763 = !DILocalVariable(name: "temp", scope: !13756, file: !1999, line: 865, type: !61)
!13764 = !DILocalVariable(name: "function_index", scope: !13756, file: !1999, line: 866, type: !159)
!13765 = !DILocation(line: 0, scope: !13756)
!13766 = !DILocation(line: 873, column: 60, scope: !13756)
!13767 = !DILocation(line: 873, column: 54, scope: !13756)
!13768 = !DILocation(line: 873, column: 13, scope: !13756)
!13769 = !DILocation(line: 873, column: 12, scope: !13756)
!13770 = !DILocation(line: 875, column: 24, scope: !13756)
!13771 = !DILocation(line: 875, column: 18, scope: !13756)
!13772 = !DILocation(line: 875, column: 10, scope: !13756)
!13773 = !DILocation(line: 876, column: 28, scope: !13756)
!13774 = !DILocation(line: 876, column: 22, scope: !13756)
!13775 = !DILocation(line: 878, column: 5, scope: !13756)
!13776 = distinct !DISubprogram(name: "msdc_get_vcore_voltage", scope: !1999, file: !1999, line: 777, type: !4164, scopeLine: 778, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1998, retainedNodes: !13777)
!13777 = !{!13778}
!13778 = !DILocalVariable(name: "vcore_voltage", scope: !13776, file: !1999, line: 779, type: !161)
!13779 = !DILocation(line: 781, column: 21, scope: !13776)
!13780 = !DILocation(line: 0, scope: !13776)
!13781 = !DILocation(line: 783, column: 5, scope: !13776)
!13782 = distinct !DISubprogram(name: "msdc_set_irqmask0", scope: !1999, file: !1999, line: 1045, type: !12941, scopeLine: 1046, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1998, retainedNodes: !13783)
!13783 = !{!13784, !13785, !13786}
!13784 = !DILocalVariable(name: "msdc_port", arg: 1, scope: !13782, file: !1999, line: 1045, type: !1548)
!13785 = !DILocalVariable(name: "mask", arg: 2, scope: !13782, file: !1999, line: 1045, type: !61)
!13786 = !DILocalVariable(name: "msdc_register_base", scope: !13782, file: !1999, line: 1047, type: !2049)
!13787 = !DILocation(line: 0, scope: !13782)
!13788 = !DILocation(line: 1049, column: 39, scope: !13782)
!13789 = !DILocation(line: 1051, column: 5, scope: !13782)
!13790 = !DILocation(line: 1053, column: 25, scope: !13782)
!13791 = !DILocation(line: 1053, column: 38, scope: !13782)
!13792 = !DILocation(line: 1055, column: 5, scope: !13782)
!13793 = !DILocation(line: 1056, column: 1, scope: !13782)
!13794 = distinct !DISubprogram(name: "SFI_BlankCheck", scope: !2219, file: !2219, line: 71, type: !13795, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !13797)
!13795 = !DISubroutineType(types: !13796)
!13796 = !{null, !88, !61}
!13797 = !{!13798, !13799, !13800, !13894, !13895, !13896}
!13798 = !DILocalVariable(name: "MTDData", arg: 1, scope: !13794, file: !2219, line: 71, type: !88)
!13799 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !13794, file: !2219, line: 71, type: !61)
!13800 = !DILocalVariable(name: "D", scope: !13794, file: !2219, line: 73, type: !13801)
!13801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13802, size: 32)
!13802 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_Data", file: !2384, line: 193, baseType: !13803)
!13803 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2384, line: 134, size: 1824, elements: !13804)
!13804 = !{!13805, !13806, !13807, !13813, !13819, !13820, !13827, !13828, !13835, !13836, !13837, !13838, !13845, !13846, !13876, !13877, !13878, !13879, !13880, !13881, !13882, !13883, !13884, !13885, !13886, !13887, !13888, !13889, !13890, !13891, !13892, !13893}
!13805 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !13803, file: !2384, line: 136, baseType: !61, size: 32)
!13806 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !13803, file: !2384, line: 137, baseType: !1055, size: 32, offset: 32)
!13807 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !13803, file: !2384, line: 138, baseType: !13808, size: 32, offset: 64)
!13808 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !2468, line: 56, baseType: !13809)
!13809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13810, size: 32)
!13810 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2468, line: 54, size: 8, elements: !13811)
!13811 = !{!13812}
!13812 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !13810, file: !2468, line: 55, baseType: !159, size: 8)
!13813 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !13803, file: !2384, line: 139, baseType: !13814, size: 32, offset: 96)
!13814 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !2468, line: 46, baseType: !13815)
!13815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13816, size: 32)
!13816 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2468, line: 44, size: 8, elements: !13817)
!13817 = !{!13818}
!13818 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !13816, file: !2468, line: 45, baseType: !159, size: 8)
!13819 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !13803, file: !2384, line: 140, baseType: !2480, size: 8, offset: 128)
!13820 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !13803, file: !2384, line: 143, baseType: !13821, size: 32, offset: 160)
!13821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13822, size: 32)
!13822 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !2486, line: 146, baseType: !13823)
!13823 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2486, line: 143, size: 64, elements: !13824)
!13824 = !{!13825, !13826}
!13825 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !13823, file: !2486, line: 144, baseType: !61, size: 32)
!13826 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !13823, file: !2486, line: 145, baseType: !61, size: 32, offset: 32)
!13827 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !13803, file: !2384, line: 144, baseType: !1055, size: 32, offset: 192)
!13828 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !13803, file: !2384, line: 145, baseType: !13829, size: 32, offset: 224)
!13829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13830, size: 32)
!13830 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !2486, line: 152, baseType: !13831)
!13831 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2486, line: 149, size: 64, elements: !13832)
!13832 = !{!13833, !13834}
!13833 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !13831, file: !2486, line: 150, baseType: !61, size: 32)
!13834 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !13831, file: !2486, line: 151, baseType: !61, size: 32, offset: 32)
!13835 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !13803, file: !2384, line: 146, baseType: !1055, size: 32, offset: 256)
!13836 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !13803, file: !2384, line: 147, baseType: !61, size: 32, offset: 288)
!13837 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !13803, file: !2384, line: 148, baseType: !1055, size: 32, offset: 320)
!13838 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !13803, file: !2384, line: 151, baseType: !13839, size: 1024, offset: 352)
!13839 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13840, size: 1024, elements: !2509)
!13840 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !2486, line: 170, baseType: !13841)
!13841 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2486, line: 167, size: 64, elements: !13842)
!13842 = !{!13843, !13844}
!13843 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !13841, file: !2486, line: 168, baseType: !61, size: 32)
!13844 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !13841, file: !2486, line: 169, baseType: !61, size: 32, offset: 32)
!13845 = !DIDerivedType(tag: DW_TAG_member, name: "StatusMap", scope: !13803, file: !2384, line: 155, baseType: !2511, size: 32, offset: 1376)
!13846 = !DIDerivedType(tag: DW_TAG_member, name: "CMD", scope: !13803, file: !2384, line: 156, baseType: !13847, size: 32, offset: 1408)
!13847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13848, size: 32)
!13848 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_CMD", file: !2384, line: 124, baseType: !13849)
!13849 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2384, line: 90, size: 200, elements: !13850)
!13850 = !{!13851, !13852, !13853, !13854, !13855, !13856, !13857, !13858, !13859, !13860, !13861, !13862, !13863, !13864, !13865, !13866, !13867, !13868, !13869, !13870, !13871, !13872, !13873, !13874, !13875}
!13851 = !DIDerivedType(tag: DW_TAG_member, name: "PageProg", scope: !13849, file: !2384, line: 91, baseType: !159, size: 8)
!13852 = !DIDerivedType(tag: DW_TAG_member, name: "WriteEnable", scope: !13849, file: !2384, line: 92, baseType: !159, size: 8, offset: 8)
!13853 = !DIDerivedType(tag: DW_TAG_member, name: "Suspend", scope: !13849, file: !2384, line: 94, baseType: !159, size: 8, offset: 16)
!13854 = !DIDerivedType(tag: DW_TAG_member, name: "Resume", scope: !13849, file: !2384, line: 95, baseType: !159, size: 8, offset: 24)
!13855 = !DIDerivedType(tag: DW_TAG_member, name: "Read", scope: !13849, file: !2384, line: 96, baseType: !159, size: 8, offset: 32)
!13856 = !DIDerivedType(tag: DW_TAG_member, name: "Erase", scope: !13849, file: !2384, line: 98, baseType: !159, size: 8, offset: 40)
!13857 = !DIDerivedType(tag: DW_TAG_member, name: "Erase4K", scope: !13849, file: !2384, line: 99, baseType: !159, size: 8, offset: 48)
!13858 = !DIDerivedType(tag: DW_TAG_member, name: "Erase32K", scope: !13849, file: !2384, line: 100, baseType: !159, size: 8, offset: 56)
!13859 = !DIDerivedType(tag: DW_TAG_member, name: "Erase64K", scope: !13849, file: !2384, line: 101, baseType: !159, size: 8, offset: 64)
!13860 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_SPI", scope: !13849, file: !2384, line: 103, baseType: !159, size: 8, offset: 72)
!13861 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_QPI", scope: !13849, file: !2384, line: 104, baseType: !159, size: 8, offset: 80)
!13862 = !DIDerivedType(tag: DW_TAG_member, name: "ReadBPReg", scope: !13849, file: !2384, line: 106, baseType: !159, size: 8, offset: 88)
!13863 = !DIDerivedType(tag: DW_TAG_member, name: "WriteBPReg", scope: !13849, file: !2384, line: 107, baseType: !159, size: 8, offset: 96)
!13864 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSecurityReg", scope: !13849, file: !2384, line: 108, baseType: !159, size: 8, offset: 104)
!13865 = !DIDerivedType(tag: DW_TAG_member, name: "WriteSecurityReg", scope: !13849, file: !2384, line: 109, baseType: !159, size: 8, offset: 112)
!13866 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSuspendReg", scope: !13849, file: !2384, line: 110, baseType: !159, size: 8, offset: 120)
!13867 = !DIDerivedType(tag: DW_TAG_member, name: "ReadReadyReg", scope: !13849, file: !2384, line: 111, baseType: !159, size: 8, offset: 128)
!13868 = !DIDerivedType(tag: DW_TAG_member, name: "ReadFailReg", scope: !13849, file: !2384, line: 112, baseType: !159, size: 8, offset: 136)
!13869 = !DIDerivedType(tag: DW_TAG_member, name: "EnterDPD", scope: !13849, file: !2384, line: 114, baseType: !159, size: 8, offset: 144)
!13870 = !DIDerivedType(tag: DW_TAG_member, name: "LeaveDPD", scope: !13849, file: !2384, line: 115, baseType: !159, size: 8, offset: 152)
!13871 = !DIDerivedType(tag: DW_TAG_member, name: "OTPProg", scope: !13849, file: !2384, line: 118, baseType: !159, size: 8, offset: 160)
!13872 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !13849, file: !2384, line: 119, baseType: !159, size: 8, offset: 168)
!13873 = !DIDerivedType(tag: DW_TAG_member, name: "OTPEnter", scope: !13849, file: !2384, line: 120, baseType: !159, size: 8, offset: 176)
!13874 = !DIDerivedType(tag: DW_TAG_member, name: "OTPExit", scope: !13849, file: !2384, line: 121, baseType: !159, size: 8, offset: 184)
!13875 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !13849, file: !2384, line: 122, baseType: !159, size: 8, offset: 192)
!13876 = !DIDerivedType(tag: DW_TAG_member, name: "Flag", scope: !13803, file: !2384, line: 157, baseType: !61, size: 32, offset: 1440)
!13877 = !DIDerivedType(tag: DW_TAG_member, name: "BPRBitCount", scope: !13803, file: !2384, line: 158, baseType: !1212, size: 16, offset: 1472)
!13878 = !DIDerivedType(tag: DW_TAG_member, name: "UniformBlock", scope: !13803, file: !2384, line: 159, baseType: !1212, size: 16, offset: 1488)
!13879 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLength", scope: !13803, file: !2384, line: 163, baseType: !1212, size: 16, offset: 1504)
!13880 = !DIDerivedType(tag: DW_TAG_member, name: "OTPBase", scope: !13803, file: !2384, line: 164, baseType: !1212, size: 16, offset: 1520)
!13881 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendLatency", scope: !13803, file: !2384, line: 167, baseType: !159, size: 8, offset: 1536)
!13882 = !DIDerivedType(tag: DW_TAG_member, name: "FlashID", scope: !13803, file: !2384, line: 168, baseType: !1727, size: 24, offset: 1544)
!13883 = !DIDerivedType(tag: DW_TAG_member, name: "DriverStatus", scope: !13803, file: !2384, line: 169, baseType: !159, size: 8, offset: 1568)
!13884 = !DIDerivedType(tag: DW_TAG_member, name: "AddressCycle", scope: !13803, file: !2384, line: 170, baseType: !159, size: 8, offset: 1576)
!13885 = !DIDerivedType(tag: DW_TAG_member, name: "CS", scope: !13803, file: !2384, line: 173, baseType: !1212, size: 16, offset: 1584)
!13886 = !DIDerivedType(tag: DW_TAG_member, name: "sf_dal_fix", scope: !13803, file: !2384, line: 174, baseType: !61, size: 32, offset: 1600)
!13887 = !DIDerivedType(tag: DW_TAG_member, name: "CS_Size", scope: !13803, file: !2384, line: 175, baseType: !61, size: 32, offset: 1632)
!13888 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_BUSY", scope: !13803, file: !2384, line: 178, baseType: !91, size: 8, offset: 1664)
!13889 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_SUSPENDED", scope: !13803, file: !2384, line: 179, baseType: !91, size: 8, offset: 1672)
!13890 = !DIDerivedType(tag: DW_TAG_member, name: "UnlockBlock", scope: !13803, file: !2384, line: 182, baseType: !2558, size: 32, offset: 1696)
!13891 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !13803, file: !2384, line: 186, baseType: !2558, size: 32, offset: 1728)
!13892 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !13803, file: !2384, line: 187, baseType: !2563, size: 32, offset: 1760)
!13893 = !DIDerivedType(tag: DW_TAG_member, name: "OTPWrite", scope: !13803, file: !2384, line: 188, baseType: !2563, size: 32, offset: 1792)
!13894 = !DILocalVariable(name: "i", scope: !13794, file: !2219, line: 74, type: !61)
!13895 = !DILocalVariable(name: "data_cnt", scope: !13794, file: !2219, line: 74, type: !61)
!13896 = !DILocalVariable(name: "p_data", scope: !13794, file: !2219, line: 75, type: !1716)
!13897 = !DILocation(line: 0, scope: !13794)
!13898 = !DILocation(line: 77, column: 16, scope: !13794)
!13899 = !DILocation(line: 79, column: 53, scope: !13900)
!13900 = distinct !DILexicalBlock(scope: !13901, file: !2219, line: 79, column: 5)
!13901 = distinct !DILexicalBlock(scope: !13794, file: !2219, line: 79, column: 5)
!13902 = !DILocation(line: 79, column: 5, scope: !13901)
!13903 = !DILocation(line: 79, column: 41, scope: !13901)
!13904 = !DILocation(line: 77, column: 47, scope: !13794)
!13905 = !DILocation(line: 80, column: 13, scope: !13906)
!13906 = distinct !DILexicalBlock(scope: !13907, file: !2219, line: 80, column: 13)
!13907 = distinct !DILexicalBlock(scope: !13900, file: !2219, line: 79, column: 80)
!13908 = !DILocation(line: 80, column: 21, scope: !13906)
!13909 = !DILocation(line: 80, column: 13, scope: !13907)
!13910 = !DILocation(line: 81, column: 13, scope: !13911)
!13911 = distinct !DILexicalBlock(scope: !13912, file: !2219, line: 81, column: 13)
!13912 = distinct !DILexicalBlock(scope: !13913, file: !2219, line: 81, column: 13)
!13913 = distinct !DILexicalBlock(scope: !13914, file: !2219, line: 81, column: 13)
!13914 = distinct !DILexicalBlock(scope: !13906, file: !2219, line: 80, column: 36)
!13915 = !DILocation(line: 79, column: 65, scope: !13900)
!13916 = !DILocation(line: 79, column: 70, scope: !13900)
!13917 = distinct !{!13917, !13902, !13918}
!13918 = !DILocation(line: 84, column: 5, scope: !13901)
!13919 = !DILocation(line: 85, column: 1, scope: !13794)
!13920 = distinct !DISubprogram(name: "SFI_ReverseByteOrder", scope: !2219, file: !2219, line: 93, type: !5135, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !13921)
!13921 = !{!13922, !13923}
!13922 = !DILocalVariable(name: "num", arg: 1, scope: !13920, file: !2219, line: 93, type: !61)
!13923 = !DILocalVariable(name: "ret", scope: !13920, file: !2219, line: 95, type: !18)
!13924 = !DILocation(line: 0, scope: !13920)
!13925 = !DILocation(line: 100, column: 9, scope: !13920)
!13926 = !DILocation(line: 102, column: 5, scope: !13920)
!13927 = distinct !DISubprogram(name: "SFI_MacEnable", scope: !2219, file: !2219, line: 110, type: !13928, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !13931)
!13928 = !DISubroutineType(types: !13929)
!13929 = !{null, !13930}
!13930 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1212)
!13931 = !{!13932, !13933}
!13932 = !DILocalVariable(name: "CS", arg: 1, scope: !13927, file: !2219, line: 110, type: !13930)
!13933 = !DILocalVariable(name: "val", scope: !13927, file: !2219, line: 112, type: !61)
!13934 = !DILocation(line: 0, scope: !13927)
!13935 = !DILocation(line: 114, column: 5, scope: !13936)
!13936 = distinct !DILexicalBlock(scope: !13937, file: !2219, line: 114, column: 5)
!13937 = distinct !DILexicalBlock(scope: !13927, file: !2219, line: 114, column: 5)
!13938 = !DILocation(line: 116, column: 16, scope: !13927)
!13939 = !DILocation(line: 117, column: 9, scope: !13927)
!13940 = !DILocation(line: 122, column: 13, scope: !13941)
!13941 = distinct !DILexicalBlock(scope: !13942, file: !2219, line: 121, column: 27)
!13942 = distinct !DILexicalBlock(scope: !13943, file: !2219, line: 121, column: 16)
!13943 = distinct !DILexicalBlock(scope: !13927, file: !2219, line: 117, column: 9)
!13944 = !DILocation(line: 127, column: 9, scope: !13945)
!13945 = distinct !DILexicalBlock(scope: !13946, file: !2219, line: 127, column: 9)
!13946 = distinct !DILexicalBlock(scope: !13947, file: !2219, line: 127, column: 9)
!13947 = distinct !DILexicalBlock(scope: !13948, file: !2219, line: 127, column: 9)
!13948 = distinct !DILexicalBlock(scope: !13942, file: !2219, line: 125, column: 12)
!13949 = !DILocation(line: 0, scope: !13943)
!13950 = !DILocation(line: 134, column: 5, scope: !13927)
!13951 = !DILocation(line: 134, column: 19, scope: !13927)
!13952 = !DILocation(line: 134, column: 35, scope: !13927)
!13953 = !DILocation(line: 134, column: 12, scope: !13927)
!13954 = distinct !{!13954, !13950, !13955}
!13955 = !DILocation(line: 134, column: 57, scope: !13927)
!13956 = !DILocation(line: 135, column: 19, scope: !13927)
!13957 = !DILocation(line: 135, column: 34, scope: !13927)
!13958 = !DILocation(line: 135, column: 12, scope: !13927)
!13959 = !DILocation(line: 135, column: 5, scope: !13927)
!13960 = distinct !{!13960, !13959, !13961}
!13961 = !DILocation(line: 135, column: 50, scope: !13927)
!13962 = !DILocation(line: 130, column: 9, scope: !13927)
!13963 = !DILocation(line: 138, column: 24, scope: !13927)
!13964 = !DILocation(line: 139, column: 1, scope: !13927)
!13965 = distinct !DISubprogram(name: "SFI_MacLeave", scope: !2219, file: !2219, line: 148, type: !13928, scopeLine: 149, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !13966)
!13966 = !{!13967, !13968}
!13967 = !DILocalVariable(name: "CS", arg: 1, scope: !13965, file: !2219, line: 148, type: !13930)
!13968 = !DILocalVariable(name: "val", scope: !13965, file: !2219, line: 150, type: !61)
!13969 = !DILocation(line: 0, scope: !13965)
!13970 = !DILocation(line: 153, column: 16, scope: !13965)
!13971 = !DILocation(line: 154, column: 9, scope: !13965)
!13972 = !DILocation(line: 155, column: 24, scope: !13965)
!13973 = !DILocation(line: 158, column: 5, scope: !13965)
!13974 = !DILocation(line: 158, column: 18, scope: !13965)
!13975 = !DILocation(line: 158, column: 32, scope: !13965)
!13976 = distinct !{!13976, !13973, !13977}
!13977 = !DILocation(line: 158, column: 49, scope: !13965)
!13978 = !DILocation(line: 163, column: 16, scope: !13965)
!13979 = !DILocation(line: 164, column: 9, scope: !13965)
!13980 = !DILocation(line: 165, column: 24, scope: !13965)
!13981 = !DILocation(line: 168, column: 5, scope: !13965)
!13982 = !DILocation(line: 168, column: 18, scope: !13965)
!13983 = !DILocation(line: 168, column: 32, scope: !13965)
!13984 = distinct !{!13984, !13981, !13985}
!13985 = !DILocation(line: 168, column: 46, scope: !13965)
!13986 = !DILocation(line: 174, column: 10, scope: !13987)
!13987 = distinct !DILexicalBlock(scope: !13965, file: !2219, line: 174, column: 9)
!13988 = !DILocation(line: 174, column: 25, scope: !13987)
!13989 = !DILocation(line: 174, column: 9, scope: !13965)
!13990 = !DILocation(line: 175, column: 9, scope: !13991)
!13991 = distinct !DILexicalBlock(scope: !13992, file: !2219, line: 175, column: 9)
!13992 = distinct !DILexicalBlock(scope: !13993, file: !2219, line: 175, column: 9)
!13993 = distinct !DILexicalBlock(scope: !13987, file: !2219, line: 174, column: 36)
!13994 = !DILocation(line: 176, column: 5, scope: !13993)
!13995 = !DILocation(line: 179, column: 1, scope: !13965)
!13996 = distinct !DISubprogram(name: "SFI_MacTrigger", scope: !2219, file: !2219, line: 186, type: !13997, scopeLine: 187, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !13999)
!13997 = !DISubroutineType(types: !13998)
!13998 = !{!61, !13930}
!13999 = !{!14000, !14001, !14002}
!14000 = !DILocalVariable(name: "CS", arg: 1, scope: !13996, file: !2219, line: 186, type: !13930)
!14001 = !DILocalVariable(name: "val", scope: !13996, file: !2219, line: 188, type: !61)
!14002 = !DILocalVariable(name: "misc_ctl", scope: !13996, file: !2219, line: 189, type: !61)
!14003 = !DILocation(line: 0, scope: !13996)
!14004 = !DILocation(line: 204, column: 16, scope: !13996)
!14005 = !DILocation(line: 208, column: 12, scope: !14006)
!14006 = distinct !DILexicalBlock(scope: !13996, file: !2219, line: 208, column: 9)
!14007 = !DILocation(line: 208, column: 9, scope: !13996)
!14008 = !DILocation(line: 212, column: 20, scope: !13996)
!14009 = !DILocation(line: 215, column: 1, scope: !13996)
!14010 = !DILocation(line: 215, column: 15, scope: !13996)
!14011 = !DILocation(line: 215, column: 29, scope: !13996)
!14012 = !DILocation(line: 215, column: 8, scope: !13996)
!14013 = distinct !{!14013, !14009, !14014}
!14014 = !DILocation(line: 215, column: 46, scope: !13996)
!14015 = !DILocation(line: 216, column: 22, scope: !13996)
!14016 = !DILocation(line: 216, column: 36, scope: !13996)
!14017 = !DILocation(line: 216, column: 9, scope: !13996)
!14018 = distinct !{!14018, !14017, !14019}
!14019 = !DILocation(line: 216, column: 47, scope: !13996)
!14020 = !DILocation(line: 218, column: 13, scope: !13996)
!14021 = distinct !DISubprogram(name: "SFI_MacWaitReady", scope: !2219, file: !2219, line: 227, type: !13928, scopeLine: 228, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !14022)
!14022 = !{!14023}
!14023 = !DILocalVariable(name: "CS", arg: 1, scope: !14021, file: !2219, line: 227, type: !13930)
!14024 = !DILocation(line: 0, scope: !14021)
!14025 = !DILocation(line: 235, column: 5, scope: !14021)
!14026 = !DILocation(line: 236, column: 5, scope: !14021)
!14027 = !DILocation(line: 238, column: 1, scope: !14021)
!14028 = distinct !DISubprogram(name: "SFI_Dev_Command", scope: !2219, file: !2219, line: 249, type: !14029, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !14031)
!14029 = !DISubroutineType(types: !14030)
!14030 = !{null, !13930, !1065}
!14031 = !{!14032, !14033, !14034, !14035, !14036}
!14032 = !DILocalVariable(name: "CS", arg: 1, scope: !14028, file: !2219, line: 249, type: !13930)
!14033 = !DILocalVariable(name: "cmd", arg: 2, scope: !14028, file: !2219, line: 249, type: !1065)
!14034 = !DILocalVariable(name: "cmdi", scope: !14028, file: !2219, line: 251, type: !61)
!14035 = !DILocalVariable(name: "cmdo", scope: !14028, file: !2219, line: 251, type: !61)
!14036 = !DILocalVariable(name: "len", scope: !14028, file: !2219, line: 252, type: !159)
!14037 = !DILocation(line: 0, scope: !14028)
!14038 = !DILocation(line: 254, column: 46, scope: !14039)
!14039 = distinct !DILexicalBlock(scope: !14040, file: !2219, line: 254, column: 5)
!14040 = distinct !DILexicalBlock(scope: !14028, file: !2219, line: 254, column: 5)
!14041 = !DILocation(line: 254, column: 5, scope: !14040)
!14042 = !DILocation(line: 255, column: 22, scope: !14043)
!14043 = distinct !DILexicalBlock(scope: !14039, file: !2219, line: 254, column: 103)
!14044 = !DILocation(line: 255, column: 59, scope: !14043)
!14045 = !DILocation(line: 255, column: 51, scope: !14043)
!14046 = !DILocation(line: 254, column: 65, scope: !14039)
!14047 = !DILocation(line: 254, column: 97, scope: !14039)
!14048 = distinct !{!14048, !14041, !14049}
!14049 = !DILocation(line: 256, column: 5, scope: !14040)
!14050 = !DILocation(line: 258, column: 9, scope: !14051)
!14051 = distinct !DILexicalBlock(scope: !14028, file: !2219, line: 258, column: 9)
!14052 = !DILocation(line: 262, column: 5, scope: !14028)
!14053 = !DILocation(line: 263, column: 33, scope: !14028)
!14054 = !DILocation(line: 264, column: 25, scope: !14028)
!14055 = !DILocation(line: 265, column: 24, scope: !14028)
!14056 = !DILocation(line: 266, column: 5, scope: !14028)
!14057 = !DILocation(line: 268, column: 5, scope: !14028)
!14058 = !DILocation(line: 269, column: 1, scope: !14028)
!14059 = distinct !DISubprogram(name: "SFI_Dev_CommandAddress", scope: !2219, file: !2219, line: 281, type: !14060, scopeLine: 282, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !14062)
!14060 = !DISubroutineType(types: !14061)
!14061 = !{null, !13930, !8028, !1065, !1065}
!14062 = !{!14063, !14064, !14065, !14066, !14067, !14068}
!14063 = !DILocalVariable(name: "CS", arg: 1, scope: !14059, file: !2219, line: 281, type: !13930)
!14064 = !DILocalVariable(name: "cmd", arg: 2, scope: !14059, file: !2219, line: 281, type: !8028)
!14065 = !DILocalVariable(name: "address", arg: 3, scope: !14059, file: !2219, line: 281, type: !1065)
!14066 = !DILocalVariable(name: "address_bytes", arg: 4, scope: !14059, file: !2219, line: 281, type: !1065)
!14067 = !DILocalVariable(name: "cmd1", scope: !14059, file: !2219, line: 283, type: !61)
!14068 = !DILocalVariable(name: "cmd2", scope: !14059, file: !2219, line: 283, type: !61)
!14069 = !DILocation(line: 0, scope: !14059)
!14070 = !DILocation(line: 285, column: 12, scope: !14059)
!14071 = !DILocation(line: 287, column: 23, scope: !14072)
!14072 = distinct !DILexicalBlock(scope: !14059, file: !2219, line: 287, column: 9)
!14073 = !DILocation(line: 287, column: 9, scope: !14059)
!14074 = !DILocation(line: 288, column: 22, scope: !14075)
!14075 = distinct !DILexicalBlock(scope: !14072, file: !2219, line: 287, column: 31)
!14076 = !DILocation(line: 288, column: 55, scope: !14075)
!14077 = !DILocation(line: 288, column: 53, scope: !14075)
!14078 = !DILocation(line: 289, column: 5, scope: !14075)
!14079 = !DILocation(line: 290, column: 22, scope: !14080)
!14080 = distinct !DILexicalBlock(scope: !14072, file: !2219, line: 289, column: 12)
!14081 = !DILocation(line: 290, column: 53, scope: !14080)
!14082 = !DILocation(line: 290, column: 51, scope: !14080)
!14083 = !DILocation(line: 291, column: 21, scope: !14080)
!14084 = !DILocation(line: 0, scope: !14072)
!14085 = !DILocation(line: 294, column: 33, scope: !14059)
!14086 = !DILocation(line: 295, column: 38, scope: !14059)
!14087 = !DILocation(line: 296, column: 41, scope: !14059)
!14088 = !DILocation(line: 296, column: 25, scope: !14059)
!14089 = !DILocation(line: 297, column: 24, scope: !14059)
!14090 = !DILocation(line: 299, column: 5, scope: !14059)
!14091 = !DILocation(line: 300, column: 5, scope: !14059)
!14092 = !DILocation(line: 302, column: 1, scope: !14059)
!14093 = distinct !DISubprogram(name: "SFI_GPRAM_Write_C1A3", scope: !2219, file: !2219, line: 312, type: !14094, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !14096)
!14094 = !DISubroutineType(types: !14095)
!14095 = !{!61, !1065, !1065}
!14096 = !{!14097, !14098}
!14097 = !DILocalVariable(name: "cmd", arg: 1, scope: !14093, file: !2219, line: 312, type: !1065)
!14098 = !DILocalVariable(name: "address", arg: 2, scope: !14093, file: !2219, line: 312, type: !1065)
!14099 = !DILocation(line: 0, scope: !14093)
!14100 = !DILocation(line: 314, column: 14, scope: !14093)
!14101 = !DILocation(line: 314, column: 44, scope: !14093)
!14102 = !DILocation(line: 314, column: 82, scope: !14093)
!14103 = !DILocation(line: 314, column: 75, scope: !14093)
!14104 = !DILocation(line: 314, column: 5, scope: !14093)
!14105 = distinct !DISubprogram(name: "SFI_GPRAM_Write_C1A4", scope: !2219, file: !2219, line: 332, type: !14106, scopeLine: 333, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !14109)
!14106 = !DISubroutineType(types: !14107)
!14107 = !{!61, !1065, !1065, !14108, !1716}
!14108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1055, size: 32)
!14109 = !{!14110, !14111, !14112, !14113, !14114, !14122, !14123, !14124}
!14110 = !DILocalVariable(name: "cmd", arg: 1, scope: !14105, file: !2219, line: 332, type: !1065)
!14111 = !DILocalVariable(name: "address", arg: 2, scope: !14105, file: !2219, line: 332, type: !1065)
!14112 = !DILocalVariable(name: "p_data", arg: 3, scope: !14105, file: !2219, line: 332, type: !14108)
!14113 = !DILocalVariable(name: "length", arg: 4, scope: !14105, file: !2219, line: 332, type: !1716)
!14114 = !DILocalVariable(name: "tmp", scope: !14105, file: !2219, line: 334, type: !14115)
!14115 = !DIDerivedType(tag: DW_TAG_typedef, name: "sf_uint", file: !2384, line: 202, baseType: !14116)
!14116 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2384, line: 198, size: 32, elements: !14117)
!14117 = !{!14118, !14119, !14121}
!14118 = !DIDerivedType(tag: DW_TAG_member, name: "u32", scope: !14116, file: !2384, line: 199, baseType: !61, size: 32)
!14119 = !DIDerivedType(tag: DW_TAG_member, name: "u16", scope: !14116, file: !2384, line: 200, baseType: !14120, size: 32)
!14120 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1212, size: 32, elements: !522)
!14121 = !DIDerivedType(tag: DW_TAG_member, name: "u8", scope: !14116, file: !2384, line: 201, baseType: !747, size: 32)
!14122 = !DILocalVariable(name: "cmd1", scope: !14105, file: !2219, line: 335, type: !61)
!14123 = !DILocalVariable(name: "cmd2", scope: !14105, file: !2219, line: 335, type: !61)
!14124 = !DILocalVariable(name: "i", scope: !14105, file: !2219, line: 336, type: !61)
!14125 = !DILocation(line: 0, scope: !14105)
!14126 = !DILocation(line: 334, column: 5, scope: !14105)
!14127 = !DILocation(line: 334, column: 16, scope: !14105)
!14128 = !DILocation(line: 338, column: 12, scope: !14105)
!14129 = !DILocation(line: 340, column: 17, scope: !14105)
!14130 = !DILocation(line: 342, column: 17, scope: !14105)
!14131 = !DILocation(line: 342, column: 9, scope: !14105)
!14132 = !DILocation(line: 342, column: 15, scope: !14105)
!14133 = !DILocation(line: 344, column: 22, scope: !14134)
!14134 = distinct !DILexicalBlock(scope: !14135, file: !2219, line: 343, column: 29)
!14135 = distinct !DILexicalBlock(scope: !14136, file: !2219, line: 343, column: 5)
!14136 = distinct !DILexicalBlock(scope: !14105, file: !2219, line: 343, column: 5)
!14137 = !DILocation(line: 343, column: 5, scope: !14136)
!14138 = !DILocation(line: 344, column: 21, scope: !14134)
!14139 = !DILocation(line: 344, column: 9, scope: !14134)
!14140 = !DILocation(line: 344, column: 19, scope: !14134)
!14141 = !DILocation(line: 345, column: 18, scope: !14134)
!14142 = !DILocation(line: 343, column: 25, scope: !14135)
!14143 = !DILocation(line: 343, column: 19, scope: !14135)
!14144 = distinct !{!14144, !14137, !14145}
!14145 = !DILocation(line: 346, column: 5, scope: !14136)
!14146 = !DILocation(line: 347, column: 16, scope: !14105)
!14147 = !DILocation(line: 348, column: 16, scope: !14105)
!14148 = !DILocation(line: 348, column: 15, scope: !14105)
!14149 = !DILocation(line: 339, column: 17, scope: !14105)
!14150 = !DILocation(line: 339, column: 52, scope: !14105)
!14151 = !DILocation(line: 339, column: 45, scope: !14105)
!14152 = !DILocation(line: 348, column: 13, scope: !14105)
!14153 = !DILocation(line: 349, column: 38, scope: !14105)
!14154 = !DILocation(line: 351, column: 1, scope: !14105)
!14155 = !DILocation(line: 350, column: 5, scope: !14105)
!14156 = distinct !DISubprogram(name: "SFI_GPRAM_Write", scope: !2219, file: !2219, line: 367, type: !14157, scopeLine: 368, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !14159)
!14157 = !DISubroutineType(types: !14158)
!14158 = !{null, !61, !88, !1349}
!14159 = !{!14160, !14161, !14162, !14163, !14164, !14165}
!14160 = !DILocalVariable(name: "gpram_offset", arg: 1, scope: !14156, file: !2219, line: 367, type: !61)
!14161 = !DILocalVariable(name: "buff", arg: 2, scope: !14156, file: !2219, line: 367, type: !88)
!14162 = !DILocalVariable(name: "length", arg: 3, scope: !14156, file: !2219, line: 367, type: !1349)
!14163 = !DILocalVariable(name: "i", scope: !14156, file: !2219, line: 369, type: !61)
!14164 = !DILocalVariable(name: "p_data", scope: !14156, file: !2219, line: 370, type: !1055)
!14165 = !DILocalVariable(name: "tmp", scope: !14156, file: !2219, line: 371, type: !14115)
!14166 = !DILocation(line: 0, scope: !14156)
!14167 = !DILocation(line: 371, column: 5, scope: !14156)
!14168 = !DILocation(line: 371, column: 13, scope: !14156)
!14169 = !DILocation(line: 373, column: 18, scope: !14156)
!14170 = !DILocation(line: 376, column: 15, scope: !14171)
!14171 = distinct !DILexicalBlock(scope: !14156, file: !2219, line: 376, column: 9)
!14172 = !DILocation(line: 376, column: 30, scope: !14171)
!14173 = !DILocation(line: 376, column: 11, scope: !14171)
!14174 = !DILocation(line: 376, column: 9, scope: !14156)
!14175 = !DILocation(line: 377, column: 23, scope: !14176)
!14176 = distinct !DILexicalBlock(scope: !14177, file: !2219, line: 377, column: 9)
!14177 = distinct !DILexicalBlock(scope: !14178, file: !2219, line: 377, column: 9)
!14178 = distinct !DILexicalBlock(scope: !14171, file: !2219, line: 376, column: 41)
!14179 = !DILocation(line: 377, column: 9, scope: !14177)
!14180 = !DILocation(line: 378, column: 13, scope: !14181)
!14181 = distinct !DILexicalBlock(scope: !14176, file: !2219, line: 377, column: 80)
!14182 = !DILocation(line: 377, column: 41, scope: !14176)
!14183 = !DILocation(line: 377, column: 54, scope: !14176)
!14184 = !DILocation(line: 377, column: 67, scope: !14176)
!14185 = distinct !{!14185, !14179, !14186}
!14186 = !DILocation(line: 379, column: 9, scope: !14177)
!14187 = !DILocation(line: 382, column: 37, scope: !14188)
!14188 = distinct !DILexicalBlock(scope: !14171, file: !2219, line: 382, column: 14)
!14189 = !DILocation(line: 382, column: 16, scope: !14188)
!14190 = !DILocation(line: 0, scope: !14188)
!14191 = !DILocation(line: 382, column: 14, scope: !14171)
!14192 = !DILocation(line: 391, column: 9, scope: !14193)
!14193 = distinct !DILexicalBlock(scope: !14194, file: !2219, line: 391, column: 9)
!14194 = distinct !DILexicalBlock(scope: !14188, file: !2219, line: 390, column: 13)
!14195 = !DILocation(line: 383, column: 9, scope: !14196)
!14196 = distinct !DILexicalBlock(scope: !14197, file: !2219, line: 383, column: 9)
!14197 = distinct !DILexicalBlock(scope: !14188, file: !2219, line: 382, column: 49)
!14198 = !DILocation(line: 384, column: 26, scope: !14199)
!14199 = distinct !DILexicalBlock(scope: !14200, file: !2219, line: 383, column: 80)
!14200 = distinct !DILexicalBlock(scope: !14196, file: !2219, line: 383, column: 9)
!14201 = !DILocation(line: 384, column: 24, scope: !14199)
!14202 = !DILocation(line: 385, column: 47, scope: !14199)
!14203 = !DILocation(line: 385, column: 26, scope: !14199)
!14204 = !DILocation(line: 385, column: 24, scope: !14199)
!14205 = !DILocation(line: 386, column: 13, scope: !14199)
!14206 = !DILocation(line: 383, column: 41, scope: !14200)
!14207 = !DILocation(line: 383, column: 54, scope: !14200)
!14208 = !DILocation(line: 383, column: 67, scope: !14200)
!14209 = !DILocation(line: 383, column: 23, scope: !14200)
!14210 = distinct !{!14210, !14195, !14211}
!14211 = !DILocation(line: 387, column: 9, scope: !14196)
!14212 = !DILocation(line: 392, column: 13, scope: !14213)
!14213 = distinct !DILexicalBlock(scope: !14214, file: !2219, line: 392, column: 13)
!14214 = distinct !DILexicalBlock(scope: !14215, file: !2219, line: 391, column: 61)
!14215 = distinct !DILexicalBlock(scope: !14193, file: !2219, line: 391, column: 9)
!14216 = !DILocation(line: 393, column: 36, scope: !14217)
!14217 = distinct !DILexicalBlock(scope: !14218, file: !2219, line: 392, column: 51)
!14218 = distinct !DILexicalBlock(scope: !14213, file: !2219, line: 392, column: 13)
!14219 = !DILocation(line: 393, column: 29, scope: !14217)
!14220 = !DILocation(line: 393, column: 17, scope: !14217)
!14221 = !DILocation(line: 393, column: 27, scope: !14217)
!14222 = !DILocation(line: 392, column: 47, scope: !14218)
!14223 = !DILocation(line: 392, column: 27, scope: !14218)
!14224 = !DILocation(line: 392, column: 31, scope: !14218)
!14225 = distinct !{!14225, !14212, !14226}
!14226 = !DILocation(line: 394, column: 13, scope: !14213)
!14227 = !DILocation(line: 395, column: 13, scope: !14214)
!14228 = !DILocation(line: 391, column: 41, scope: !14215)
!14229 = !DILocation(line: 391, column: 54, scope: !14215)
!14230 = !DILocation(line: 391, column: 23, scope: !14215)
!14231 = distinct !{!14231, !14192, !14232}
!14232 = !DILocation(line: 396, column: 9, scope: !14193)
!14233 = !DILocation(line: 398, column: 1, scope: !14156)
!14234 = distinct !DISubprogram(name: "SFI_Dev_Command_Ext", scope: !2219, file: !2219, line: 414, type: !14235, scopeLine: 415, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !14237)
!14235 = !DISubroutineType(types: !14236)
!14236 = !{null, !13930, !8027, !1055, !13930, !13930}
!14237 = !{!14238, !14239, !14240, !14241, !14242, !14243, !14244, !14245, !14246, !14247}
!14238 = !DILocalVariable(name: "CS", arg: 1, scope: !14234, file: !2219, line: 414, type: !13930)
!14239 = !DILocalVariable(name: "cmd", arg: 2, scope: !14234, file: !2219, line: 414, type: !8027)
!14240 = !DILocalVariable(name: "data", arg: 3, scope: !14234, file: !2219, line: 414, type: !1055)
!14241 = !DILocalVariable(name: "outl", arg: 4, scope: !14234, file: !2219, line: 414, type: !13930)
!14242 = !DILocalVariable(name: "inl", arg: 5, scope: !14234, file: !2219, line: 414, type: !13930)
!14243 = !DILocalVariable(name: "tmp", scope: !14234, file: !2219, line: 416, type: !61)
!14244 = !DILocalVariable(name: "i", scope: !14234, file: !2219, line: 417, type: !61)
!14245 = !DILocalVariable(name: "j", scope: !14234, file: !2219, line: 417, type: !61)
!14246 = !DILocalVariable(name: "p_data", scope: !14234, file: !2219, line: 418, type: !1055)
!14247 = !DILocalVariable(name: "p_tmp", scope: !14234, file: !2219, line: 418, type: !1055)
!14248 = !DILocation(line: 0, scope: !14234)
!14249 = !DILocation(line: 416, column: 5, scope: !14234)
!14250 = !DILocation(line: 422, column: 60, scope: !14251)
!14251 = distinct !DILexicalBlock(scope: !14252, file: !2219, line: 422, column: 5)
!14252 = distinct !DILexicalBlock(scope: !14234, file: !2219, line: 422, column: 5)
!14253 = !DILocation(line: 422, column: 5, scope: !14252)
!14254 = !DILocation(line: 423, column: 25, scope: !14255)
!14255 = distinct !DILexicalBlock(scope: !14256, file: !2219, line: 423, column: 9)
!14256 = distinct !DILexicalBlock(scope: !14251, file: !2219, line: 422, column: 83)
!14257 = !DILocation(line: 423, column: 32, scope: !14258)
!14258 = distinct !DILexicalBlock(scope: !14255, file: !2219, line: 423, column: 9)
!14259 = !DILocation(line: 423, column: 9, scope: !14255)
!14260 = !DILocation(line: 424, column: 24, scope: !14261)
!14261 = distinct !DILexicalBlock(scope: !14258, file: !2219, line: 423, column: 59)
!14262 = !DILocation(line: 424, column: 13, scope: !14261)
!14263 = !DILocation(line: 424, column: 22, scope: !14261)
!14264 = !DILocation(line: 423, column: 50, scope: !14258)
!14265 = !DILocation(line: 423, column: 55, scope: !14258)
!14266 = !DILocation(line: 423, column: 39, scope: !14258)
!14267 = distinct !{!14267, !14259, !14268}
!14268 = !DILocation(line: 425, column: 9, scope: !14255)
!14269 = !DILocation(line: 426, column: 9, scope: !14256)
!14270 = !DILocation(line: 0, scope: !14252)
!14271 = !DILocation(line: 422, column: 75, scope: !14251)
!14272 = distinct !{!14272, !14253, !14273}
!14273 = !DILocation(line: 427, column: 5, scope: !14252)
!14274 = !DILocation(line: 428, column: 25, scope: !14234)
!14275 = !DILocation(line: 429, column: 26, scope: !14234)
!14276 = !DILocation(line: 429, column: 24, scope: !14234)
!14277 = !DILocation(line: 430, column: 5, scope: !14234)
!14278 = !DILocation(line: 431, column: 5, scope: !14234)
!14279 = !DILocation(line: 433, column: 67, scope: !14280)
!14280 = distinct !DILexicalBlock(scope: !14281, file: !2219, line: 433, column: 5)
!14281 = distinct !DILexicalBlock(scope: !14234, file: !2219, line: 433, column: 5)
!14282 = !DILocation(line: 433, column: 5, scope: !14281)
!14283 = !DILocation(line: 433, column: 56, scope: !14281)
!14284 = !DILocation(line: 434, column: 17, scope: !14285)
!14285 = distinct !DILexicalBlock(scope: !14280, file: !2219, line: 433, column: 100)
!14286 = !DILocation(line: 434, column: 15, scope: !14285)
!14287 = !DILocation(line: 433, column: 74, scope: !14280)
!14288 = !DILocation(line: 433, column: 79, scope: !14280)
!14289 = !DILocation(line: 433, column: 87, scope: !14280)
!14290 = distinct !{!14290, !14282, !14291}
!14291 = !DILocation(line: 435, column: 5, scope: !14281)
!14292 = !DILocation(line: 437, column: 1, scope: !14234)
!14293 = distinct !DISubprogram(name: "SFI_Dev_Command_List", scope: !2219, file: !2219, line: 462, type: !14294, scopeLine: 463, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !14296)
!14294 = !DISubroutineType(types: !14295)
!14295 = !{null, !13930, !8027}
!14296 = !{!14297, !14298, !14299, !14300, !14301}
!14297 = !DILocalVariable(name: "CS", arg: 1, scope: !14293, file: !2219, line: 462, type: !13930)
!14298 = !DILocalVariable(name: "cmdlist", arg: 2, scope: !14293, file: !2219, line: 462, type: !8027)
!14299 = !DILocalVariable(name: "i", scope: !14293, file: !2219, line: 464, type: !61)
!14300 = !DILocalVariable(name: "val", scope: !14293, file: !2219, line: 465, type: !61)
!14301 = !DILocalVariable(name: "status", scope: !14302, file: !2219, line: 492, type: !159)
!14302 = distinct !DILexicalBlock(scope: !14303, file: !2219, line: 491, column: 47)
!14303 = distinct !DILexicalBlock(scope: !14304, file: !2219, line: 491, column: 13)
!14304 = distinct !DILexicalBlock(scope: !14293, file: !2219, line: 477, column: 17)
!14305 = !DILocation(line: 0, scope: !14293)
!14306 = !DILocation(line: 467, column: 17, scope: !14307)
!14307 = distinct !DILexicalBlock(scope: !14293, file: !2219, line: 467, column: 9)
!14308 = !DILocation(line: 467, column: 9, scope: !14293)
!14309 = !DILocation(line: 474, column: 11, scope: !14293)
!14310 = !DILocation(line: 477, column: 5, scope: !14293)
!14311 = !DILocation(line: 478, column: 17, scope: !14304)
!14312 = !DILocation(line: 478, column: 9, scope: !14304)
!14313 = !DILocation(line: 481, column: 17, scope: !14314)
!14314 = distinct !DILexicalBlock(scope: !14315, file: !2219, line: 481, column: 17)
!14315 = distinct !DILexicalBlock(scope: !14304, file: !2219, line: 478, column: 29)
!14316 = !DILocation(line: 481, column: 17, scope: !14317)
!14317 = distinct !DILexicalBlock(scope: !14318, file: !2219, line: 481, column: 17)
!14318 = distinct !DILexicalBlock(scope: !14319, file: !2219, line: 481, column: 17)
!14319 = distinct !DILexicalBlock(scope: !14314, file: !2219, line: 481, column: 17)
!14320 = !DILocation(line: 481, column: 17, scope: !14318)
!14321 = !DILocation(line: 481, column: 17, scope: !14322)
!14322 = distinct !DILexicalBlock(scope: !14323, file: !2219, line: 481, column: 17)
!14323 = distinct !DILexicalBlock(scope: !14319, file: !2219, line: 481, column: 17)
!14324 = !DILocation(line: 484, column: 17, scope: !14325)
!14325 = distinct !DILexicalBlock(scope: !14315, file: !2219, line: 484, column: 17)
!14326 = !DILocation(line: 484, column: 17, scope: !14327)
!14327 = distinct !DILexicalBlock(scope: !14328, file: !2219, line: 484, column: 17)
!14328 = distinct !DILexicalBlock(scope: !14329, file: !2219, line: 484, column: 17)
!14329 = distinct !DILexicalBlock(scope: !14325, file: !2219, line: 484, column: 17)
!14330 = !DILocation(line: 484, column: 17, scope: !14328)
!14331 = !DILocation(line: 484, column: 17, scope: !14332)
!14332 = distinct !DILexicalBlock(scope: !14333, file: !2219, line: 484, column: 17)
!14333 = distinct !DILexicalBlock(scope: !14329, file: !2219, line: 484, column: 17)
!14334 = !DILocation(line: 0, scope: !14335)
!14335 = distinct !DILexicalBlock(scope: !14336, file: !2219, line: 487, column: 17)
!14336 = distinct !DILexicalBlock(scope: !14315, file: !2219, line: 487, column: 17)
!14337 = !DILocation(line: 487, column: 17, scope: !14336)
!14338 = !DILocation(line: 487, column: 17, scope: !14339)
!14339 = distinct !DILexicalBlock(scope: !14340, file: !2219, line: 487, column: 17)
!14340 = distinct !DILexicalBlock(scope: !14335, file: !2219, line: 487, column: 17)
!14341 = !DILocation(line: 487, column: 17, scope: !14340)
!14342 = !DILocation(line: 487, column: 17, scope: !14343)
!14343 = distinct !DILexicalBlock(scope: !14344, file: !2219, line: 487, column: 17)
!14344 = distinct !DILexicalBlock(scope: !14335, file: !2219, line: 487, column: 17)
!14345 = !DILocation(line: 487, column: 17, scope: !14344)
!14346 = !DILocation(line: 491, column: 23, scope: !14303)
!14347 = !DILocation(line: 491, column: 13, scope: !14303)
!14348 = !DILocation(line: 491, column: 28, scope: !14303)
!14349 = !DILocation(line: 491, column: 13, scope: !14304)
!14350 = !DILocation(line: 492, column: 13, scope: !14302)
!14351 = !DILocation(line: 494, column: 13, scope: !14302)
!14352 = !DILocation(line: 0, scope: !14302)
!14353 = !DILocation(line: 495, column: 17, scope: !14354)
!14354 = distinct !DILexicalBlock(scope: !14302, file: !2219, line: 494, column: 16)
!14355 = !DILocation(line: 496, column: 22, scope: !14302)
!14356 = !DILocation(line: 496, column: 31, scope: !14302)
!14357 = !DILocation(line: 496, column: 29, scope: !14302)
!14358 = !DILocation(line: 496, column: 13, scope: !14354)
!14359 = distinct !{!14359, !14351, !14360}
!14360 = !DILocation(line: 496, column: 45, scope: !14302)
!14361 = !DILocation(line: 497, column: 9, scope: !14303)
!14362 = !DILocation(line: 503, column: 25, scope: !14304)
!14363 = !DILocation(line: 497, column: 9, scope: !14302)
!14364 = !DILocation(line: 500, column: 70, scope: !14365)
!14365 = distinct !DILexicalBlock(scope: !14303, file: !2219, line: 499, column: 14)
!14366 = !DILocation(line: 500, column: 60, scope: !14365)
!14367 = !DILocation(line: 500, column: 13, scope: !14365)
!14368 = !DILocation(line: 503, column: 15, scope: !14304)
!14369 = !DILocation(line: 503, column: 11, scope: !14304)
!14370 = distinct !{!14370, !14310, !14371}
!14371 = !DILocation(line: 504, column: 5, scope: !14293)
!14372 = !DILocation(line: 505, column: 1, scope: !14293)
!14373 = distinct !DISubprogram(name: "SFI_ReadDeviceID", scope: !2219, file: !2219, line: 514, type: !14374, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !14376)
!14374 = !DISubroutineType(types: !14375)
!14375 = !{null, !13930, !1055, !159}
!14376 = !{!14377, !14378, !14379}
!14377 = !DILocalVariable(name: "CS", arg: 1, scope: !14373, file: !2219, line: 514, type: !13930)
!14378 = !DILocalVariable(name: "id", arg: 2, scope: !14373, file: !2219, line: 514, type: !1055)
!14379 = !DILocalVariable(name: "cmd", arg: 3, scope: !14373, file: !2219, line: 514, type: !159)
!14380 = !DILocation(line: 0, scope: !14373)
!14381 = !DILocation(line: 517, column: 5, scope: !14373)
!14382 = !DILocation(line: 518, column: 1, scope: !14373)
!14383 = distinct !DISubprogram(name: "SFI_ReadDeviceID_SPI", scope: !2219, file: !2219, line: 521, type: !14384, scopeLine: 522, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !14386)
!14384 = !DISubroutineType(types: !14385)
!14385 = !{null, !13930, !1055}
!14386 = !{!14387, !14388}
!14387 = !DILocalVariable(name: "CS", arg: 1, scope: !14383, file: !2219, line: 521, type: !13930)
!14388 = !DILocalVariable(name: "id", arg: 2, scope: !14383, file: !2219, line: 521, type: !1055)
!14389 = !DILocation(line: 0, scope: !14383)
!14390 = !DILocation(line: 523, column: 5, scope: !14383)
!14391 = !DILocation(line: 524, column: 1, scope: !14383)
!14392 = distinct !DISubprogram(name: "SFI_Dev_WorkingFrequencyQuery", scope: !2219, file: !2219, line: 536, type: !14393, scopeLine: 537, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !345)
!14393 = !DISubroutineType(types: !14394)
!14394 = !{!14395}
!14395 = !DIDerivedType(tag: DW_TAG_typedef, name: "sfi_clock_enum", file: !2222, line: 57, baseType: !2221)
!14396 = !DILocation(line: 540, column: 5, scope: !14392)
!14397 = distinct !DISubprogram(name: "SFI_Dev_WorkingVoltageQuery", scope: !2219, file: !2219, line: 561, type: !14398, scopeLine: 562, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !345)
!14398 = !DISubroutineType(types: !14399)
!14399 = !{!14400}
!14400 = !DIDerivedType(tag: DW_TAG_typedef, name: "sfi_voltage_enum", file: !2222, line: 66, baseType: !2229)
!14401 = !DILocation(line: 564, column: 15, scope: !14402)
!14402 = distinct !DILexicalBlock(scope: !14397, file: !2219, line: 564, column: 9)
!14403 = !DILocation(line: 564, column: 31, scope: !14402)
!14404 = !DILocation(line: 564, column: 45, scope: !14402)
!14405 = !DILocation(line: 0, scope: !14402)
!14406 = !DILocation(line: 569, column: 1, scope: !14397)
!14407 = distinct !DISubprogram(name: "SFI_Dev_GetUniqueID", scope: !2219, file: !2219, line: 580, type: !14408, scopeLine: 581, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !14410)
!14408 = !DISubroutineType(types: !14409)
!14409 = !{!91, !1055}
!14410 = !{!14411, !14412}
!14411 = !DILocalVariable(name: "buffer", arg: 1, scope: !14407, file: !2219, line: 580, type: !1055)
!14412 = !DILocalVariable(name: "i", scope: !14407, file: !2219, line: 582, type: !7)
!14413 = !DILocation(line: 0, scope: !14407)
!14414 = !DILocation(line: 583, column: 5, scope: !14415)
!14415 = distinct !DILexicalBlock(scope: !14407, file: !2219, line: 583, column: 5)
!14416 = !DILocation(line: 584, column: 9, scope: !14417)
!14417 = distinct !DILexicalBlock(scope: !14418, file: !2219, line: 583, column: 29)
!14418 = distinct !DILexicalBlock(scope: !14415, file: !2219, line: 583, column: 5)
!14419 = !DILocation(line: 584, column: 19, scope: !14417)
!14420 = !DILocation(line: 583, column: 25, scope: !14418)
!14421 = !DILocation(line: 583, column: 19, scope: !14418)
!14422 = distinct !{!14422, !14414, !14423}
!14423 = !DILocation(line: 585, column: 5, scope: !14415)
!14424 = !DILocation(line: 586, column: 5, scope: !14407)
!14425 = distinct !DISubprogram(name: "SF_DAL_DEV_Enter_DPD", scope: !2219, file: !2219, line: 613, type: !343, scopeLine: 614, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !14426)
!14426 = !{!14427}
!14427 = !DILocalVariable(name: "D", scope: !14425, file: !2219, line: 615, type: !13801)
!14428 = !DILocation(line: 0, scope: !14425)
!14429 = !DILocation(line: 616, column: 32, scope: !14425)
!14430 = !DILocation(line: 616, column: 37, scope: !14425)
!14431 = !DILocation(line: 616, column: 27, scope: !14425)
!14432 = !DILocation(line: 617, column: 44, scope: !14425)
!14433 = !DILocation(line: 617, column: 31, scope: !14425)
!14434 = !DILocation(line: 617, column: 28, scope: !14425)
!14435 = !DILocation(line: 618, column: 32, scope: !14425)
!14436 = !DILocation(line: 618, column: 31, scope: !14425)
!14437 = !DILocation(line: 618, column: 29, scope: !14425)
!14438 = !DILocation(line: 621, column: 31, scope: !14425)
!14439 = !DILocation(line: 621, column: 24, scope: !14425)
!14440 = !DILocation(line: 622, column: 34, scope: !14425)
!14441 = !DILocation(line: 622, column: 27, scope: !14425)
!14442 = !DILocation(line: 623, column: 32, scope: !14425)
!14443 = !DILocation(line: 623, column: 25, scope: !14425)
!14444 = !DILocation(line: 624, column: 33, scope: !14425)
!14445 = !DILocation(line: 624, column: 26, scope: !14425)
!14446 = !DILocation(line: 625, column: 33, scope: !14425)
!14447 = !DILocation(line: 625, column: 26, scope: !14425)
!14448 = !DILocation(line: 629, column: 32, scope: !14425)
!14449 = !DILocation(line: 629, column: 47, scope: !14425)
!14450 = !DILocation(line: 629, column: 25, scope: !14425)
!14451 = !DILocation(line: 630, column: 32, scope: !14425)
!14452 = !DILocation(line: 630, column: 47, scope: !14425)
!14453 = !DILocation(line: 630, column: 25, scope: !14425)
!14454 = !DILocation(line: 633, column: 24, scope: !14425)
!14455 = !DILocation(line: 633, column: 31, scope: !14425)
!14456 = !DILocation(line: 633, column: 36, scope: !14425)
!14457 = !DILocation(line: 633, column: 28, scope: !14425)
!14458 = !DILocation(line: 633, column: 5, scope: !14425)
!14459 = !DILocation(line: 635, column: 5, scope: !14425)
!14460 = !DILocation(line: 636, column: 1, scope: !14425)
!14461 = distinct !DISubprogram(name: "SF_DAL_DEV_Leave_DPD", scope: !2219, file: !2219, line: 641, type: !343, scopeLine: 642, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !345)
!14462 = !DILocation(line: 644, column: 26, scope: !14461)
!14463 = !DILocation(line: 644, column: 24, scope: !14461)
!14464 = !DILocation(line: 645, column: 29, scope: !14461)
!14465 = !DILocation(line: 645, column: 27, scope: !14461)
!14466 = !DILocation(line: 646, column: 27, scope: !14461)
!14467 = !DILocation(line: 646, column: 25, scope: !14461)
!14468 = !DILocation(line: 647, column: 28, scope: !14461)
!14469 = !DILocation(line: 647, column: 26, scope: !14461)
!14470 = !DILocation(line: 648, column: 27, scope: !14461)
!14471 = !DILocation(line: 648, column: 25, scope: !14461)
!14472 = !DILocation(line: 652, column: 32, scope: !14461)
!14473 = !DILocation(line: 652, column: 47, scope: !14461)
!14474 = !DILocation(line: 652, column: 25, scope: !14461)
!14475 = !DILocation(line: 655, column: 24, scope: !14461)
!14476 = !DILocation(line: 655, column: 5, scope: !14461)
!14477 = !DILocation(line: 657, column: 5, scope: !14461)
!14478 = !DILocation(line: 660, column: 9, scope: !14479)
!14479 = distinct !DILexicalBlock(scope: !14461, file: !2219, line: 660, column: 9)
!14480 = !DILocation(line: 660, column: 59, scope: !14479)
!14481 = !DILocation(line: 660, column: 38, scope: !14479)
!14482 = !DILocation(line: 660, column: 37, scope: !14479)
!14483 = !DILocation(line: 660, column: 33, scope: !14479)
!14484 = !DILocation(line: 660, column: 9, scope: !14461)
!14485 = !DILocation(line: 661, column: 9, scope: !14479)
!14486 = distinct !{!14486, !14485, !14487}
!14487 = !DILocation(line: 661, column: 18, scope: !14479)
!14488 = !DILocation(line: 662, column: 1, scope: !14461)
!14489 = distinct !DISubprogram(name: "SF_DAL_DEV_SWITCH_TO_LOW_FQ", scope: !2219, file: !2219, line: 668, type: !343, scopeLine: 669, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !345)
!14490 = !DILocation(line: 671, column: 9, scope: !14491)
!14491 = distinct !DILexicalBlock(scope: !14489, file: !2219, line: 671, column: 9)
!14492 = !DILocation(line: 671, column: 40, scope: !14491)
!14493 = !DILocation(line: 671, column: 9, scope: !14489)
!14494 = !DILocation(line: 672, column: 47, scope: !14495)
!14495 = distinct !DILexicalBlock(scope: !14491, file: !2219, line: 671, column: 46)
!14496 = !DILocation(line: 672, column: 40, scope: !14495)
!14497 = !DILocation(line: 673, column: 5, scope: !14495)
!14498 = !DILocation(line: 674, column: 9, scope: !14499)
!14499 = distinct !DILexicalBlock(scope: !14489, file: !2219, line: 674, column: 9)
!14500 = !DILocation(line: 674, column: 41, scope: !14499)
!14501 = !DILocation(line: 674, column: 9, scope: !14489)
!14502 = !DILocation(line: 675, column: 48, scope: !14503)
!14503 = distinct !DILexicalBlock(scope: !14499, file: !2219, line: 674, column: 47)
!14504 = !DILocation(line: 675, column: 41, scope: !14503)
!14505 = !DILocation(line: 676, column: 5, scope: !14503)
!14506 = !DILocation(line: 679, column: 33, scope: !14489)
!14507 = !DILocation(line: 679, column: 48, scope: !14489)
!14508 = !DILocation(line: 679, column: 25, scope: !14489)
!14509 = !DILocation(line: 680, column: 25, scope: !14489)
!14510 = !DILocation(line: 686, column: 5, scope: !14489)
!14511 = !DILocation(line: 688, column: 1, scope: !14489)
!14512 = distinct !DISubprogram(name: "SF_DAL_DEV_SWITCH_TO_HIGH_FQ", scope: !2219, file: !2219, line: 689, type: !343, scopeLine: 690, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !345)
!14513 = !DILocation(line: 692, column: 9, scope: !14514)
!14514 = distinct !DILexicalBlock(scope: !14512, file: !2219, line: 692, column: 9)
!14515 = !DILocation(line: 692, column: 40, scope: !14514)
!14516 = !DILocation(line: 692, column: 9, scope: !14512)
!14517 = !DILocation(line: 693, column: 29, scope: !14518)
!14518 = distinct !DILexicalBlock(scope: !14514, file: !2219, line: 692, column: 46)
!14519 = !DILocation(line: 694, column: 5, scope: !14518)
!14520 = !DILocation(line: 695, column: 9, scope: !14521)
!14521 = distinct !DILexicalBlock(scope: !14512, file: !2219, line: 695, column: 9)
!14522 = !DILocation(line: 695, column: 41, scope: !14521)
!14523 = !DILocation(line: 695, column: 9, scope: !14512)
!14524 = !DILocation(line: 696, column: 29, scope: !14525)
!14525 = distinct !DILexicalBlock(scope: !14521, file: !2219, line: 695, column: 47)
!14526 = !DILocation(line: 697, column: 5, scope: !14525)
!14527 = !DILocation(line: 698, column: 5, scope: !14512)
!14528 = !DILocation(line: 699, column: 1, scope: !14512)
!14529 = distinct !DISubprogram(name: "ust_get_current_time", scope: !2290, file: !2290, line: 91, type: !5387, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2289, retainedNodes: !14530)
!14530 = !{!14531}
!14531 = !DILocalVariable(name: "counter", scope: !14529, file: !2290, line: 102, type: !61)
!14532 = !DILocation(line: 0, scope: !14529)
!14533 = !DILocation(line: 110, column: 5, scope: !14529)
!14534 = distinct !DISubprogram(name: "get_current_32K_counter", scope: !2290, file: !2290, line: 114, type: !5387, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2289, retainedNodes: !14535)
!14535 = !{!14536}
!14536 = !DILocalVariable(name: "counter", scope: !14534, file: !2290, line: 125, type: !61)
!14537 = !DILocation(line: 0, scope: !14534)
!14538 = !DILocation(line: 133, column: 5, scope: !14534)
!14539 = distinct !DISubprogram(name: "ust_busy_wait", scope: !2290, file: !2290, line: 137, type: !5526, scopeLine: 138, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2289, retainedNodes: !14540)
!14540 = !{!14541}
!14541 = !DILocalVariable(name: "delay_us", arg: 1, scope: !14539, file: !2290, line: 137, type: !61)
!14542 = !DILocation(line: 0, scope: !14539)
!14543 = !DILocation(line: 142, column: 5, scope: !14539)
!14544 = !DILocation(line: 144, column: 1, scope: !14539)
!14545 = distinct !DISubprogram(name: "SaveAndSetIRQMask", scope: !2290, file: !2290, line: 163, type: !5387, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2289, retainedNodes: !14546)
!14546 = !{!14547}
!14547 = !DILocalVariable(name: "mask", scope: !14545, file: !2290, line: 165, type: !61)
!14548 = !DILocation(line: 166, column: 12, scope: !14545)
!14549 = !DILocation(line: 0, scope: !14545)
!14550 = !DILocation(line: 167, column: 5, scope: !14545)
!14551 = distinct !DISubprogram(name: "RestoreIRQMask", scope: !2290, file: !2290, line: 171, type: !5526, scopeLine: 172, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2289, retainedNodes: !14552)
!14552 = !{!14553}
!14553 = !DILocalVariable(name: "mask", arg: 1, scope: !14551, file: !2290, line: 171, type: !61)
!14554 = !DILocation(line: 0, scope: !14551)
!14555 = !DILocation(line: 173, column: 5, scope: !14551)
!14556 = !DILocation(line: 174, column: 1, scope: !14551)
!14557 = distinct !DISubprogram(name: "SF_DAL_UnlockBlock_None", scope: !2290, file: !2290, line: 199, type: !2559, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2289, retainedNodes: !14558)
!14558 = !{!14559}
!14559 = !DILocalVariable(name: "MTDData", arg: 1, scope: !14557, file: !2290, line: 199, type: !88)
!14560 = !DILocation(line: 0, scope: !14557)
!14561 = !DILocation(line: 201, column: 5, scope: !14557)
!14562 = distinct !DISubprogram(name: "sfi_60qbit_test", scope: !2290, file: !2290, line: 388, type: !14563, scopeLine: 389, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2289, retainedNodes: !345)
!14563 = !DISubroutineType(types: !14564)
!14564 = !{!1349}
!14565 = !DILocation(line: 390, column: 5, scope: !14562)
!14566 = distinct !DISubprogram(name: "CompareData", scope: !2290, file: !2290, line: 872, type: !14567, scopeLine: 873, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2289, retainedNodes: !14569)
!14567 = !DISubroutineType(types: !14568)
!14568 = !{!91, !88, !88, !61}
!14569 = !{!14570, !14571, !14572, !14573, !14574, !14577, !14578, !14581, !14582, !14584}
!14570 = !DILocalVariable(name: "Address", arg: 1, scope: !14566, file: !2290, line: 872, type: !88)
!14571 = !DILocalVariable(name: "Data", arg: 2, scope: !14566, file: !2290, line: 872, type: !88)
!14572 = !DILocalVariable(name: "Length", arg: 3, scope: !14566, file: !2290, line: 872, type: !61)
!14573 = !DILocalVariable(name: "i", scope: !14566, file: !2290, line: 874, type: !61)
!14574 = !DILocalVariable(name: "Source", scope: !14575, file: !2290, line: 877, type: !1716)
!14575 = distinct !DILexicalBlock(scope: !14576, file: !2290, line: 876, column: 74)
!14576 = distinct !DILexicalBlock(scope: !14566, file: !2290, line: 876, column: 9)
!14577 = !DILocalVariable(name: "Dest", scope: !14575, file: !2290, line: 878, type: !1716)
!14578 = !DILocalVariable(name: "Source", scope: !14579, file: !2290, line: 885, type: !2263)
!14579 = distinct !DILexicalBlock(scope: !14580, file: !2290, line: 884, column: 79)
!14580 = distinct !DILexicalBlock(scope: !14576, file: !2290, line: 884, column: 16)
!14581 = !DILocalVariable(name: "Dest", scope: !14579, file: !2290, line: 886, type: !2263)
!14582 = !DILocalVariable(name: "Source", scope: !14583, file: !2290, line: 893, type: !1055)
!14583 = distinct !DILexicalBlock(scope: !14580, file: !2290, line: 892, column: 12)
!14584 = !DILocalVariable(name: "Dest", scope: !14583, file: !2290, line: 894, type: !1055)
!14585 = !DILocation(line: 0, scope: !14566)
!14586 = !DILocation(line: 876, column: 11, scope: !14576)
!14587 = !DILocation(line: 876, column: 42, scope: !14576)
!14588 = !DILocation(line: 877, column: 28, scope: !14575)
!14589 = !DILocation(line: 0, scope: !14575)
!14590 = !DILocation(line: 878, column: 26, scope: !14575)
!14591 = !DILocation(line: 879, column: 23, scope: !14592)
!14592 = distinct !DILexicalBlock(scope: !14593, file: !2290, line: 879, column: 9)
!14593 = distinct !DILexicalBlock(scope: !14575, file: !2290, line: 879, column: 9)
!14594 = !DILocation(line: 879, column: 9, scope: !14593)
!14595 = !DILocation(line: 880, column: 17, scope: !14596)
!14596 = distinct !DILexicalBlock(scope: !14597, file: !2290, line: 880, column: 17)
!14597 = distinct !DILexicalBlock(scope: !14592, file: !2290, line: 879, column: 68)
!14598 = !DILocation(line: 880, column: 30, scope: !14596)
!14599 = !DILocation(line: 880, column: 27, scope: !14596)
!14600 = !DILocation(line: 879, column: 64, scope: !14592)
!14601 = !DILocation(line: 880, column: 17, scope: !14597)
!14602 = distinct !{!14602, !14594, !14603}
!14603 = !DILocation(line: 883, column: 9, scope: !14593)
!14604 = !DILocation(line: 884, column: 47, scope: !14580)
!14605 = !DILocation(line: 895, column: 23, scope: !14606)
!14606 = distinct !DILexicalBlock(scope: !14607, file: !2290, line: 895, column: 9)
!14607 = distinct !DILexicalBlock(scope: !14583, file: !2290, line: 895, column: 9)
!14608 = !DILocation(line: 895, column: 9, scope: !14607)
!14609 = !DILocation(line: 885, column: 28, scope: !14579)
!14610 = !DILocation(line: 0, scope: !14579)
!14611 = !DILocation(line: 886, column: 26, scope: !14579)
!14612 = !DILocation(line: 887, column: 23, scope: !14613)
!14613 = distinct !DILexicalBlock(scope: !14614, file: !2290, line: 887, column: 9)
!14614 = distinct !DILexicalBlock(scope: !14579, file: !2290, line: 887, column: 9)
!14615 = !DILocation(line: 887, column: 9, scope: !14614)
!14616 = !DILocation(line: 888, column: 17, scope: !14617)
!14617 = distinct !DILexicalBlock(scope: !14618, file: !2290, line: 888, column: 17)
!14618 = distinct !DILexicalBlock(scope: !14613, file: !2290, line: 887, column: 68)
!14619 = !DILocation(line: 888, column: 30, scope: !14617)
!14620 = !DILocation(line: 888, column: 27, scope: !14617)
!14621 = !DILocation(line: 887, column: 64, scope: !14613)
!14622 = !DILocation(line: 888, column: 17, scope: !14618)
!14623 = distinct !{!14623, !14615, !14624}
!14624 = !DILocation(line: 891, column: 9, scope: !14614)
!14625 = !DILocation(line: 896, column: 17, scope: !14626)
!14626 = distinct !DILexicalBlock(scope: !14627, file: !2290, line: 896, column: 17)
!14627 = distinct !DILexicalBlock(scope: !14606, file: !2290, line: 895, column: 38)
!14628 = !DILocation(line: 896, column: 30, scope: !14626)
!14629 = !DILocation(line: 896, column: 27, scope: !14626)
!14630 = !DILocation(line: 895, column: 34, scope: !14606)
!14631 = !DILocation(line: 896, column: 17, scope: !14627)
!14632 = distinct !{!14632, !14608, !14633}
!14633 = !DILocation(line: 899, column: 9, scope: !14607)
!14634 = !DILocation(line: 902, column: 1, scope: !14566)
!14635 = distinct !DISubprogram(name: "Flash_ProgramData", scope: !2290, file: !2290, line: 919, type: !14636, scopeLine: 920, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2289, retainedNodes: !14638)
!14636 = !DISubroutineType(types: !14637)
!14637 = !{null, !88, !88, !61}
!14638 = !{!14639, !14640, !14641, !14642, !14643, !14644, !14645, !14646, !14647, !14648, !14649}
!14639 = !DILocalVariable(name: "Target", arg: 1, scope: !14635, file: !2290, line: 919, type: !88)
!14640 = !DILocalVariable(name: "Data", arg: 2, scope: !14635, file: !2290, line: 919, type: !88)
!14641 = !DILocalVariable(name: "Size", arg: 3, scope: !14635, file: !2290, line: 919, type: !61)
!14642 = !DILocalVariable(name: "D", scope: !14635, file: !2290, line: 921, type: !2460)
!14643 = !DILocalVariable(name: "address", scope: !14635, file: !2290, line: 922, type: !61)
!14644 = !DILocalVariable(name: "p_data", scope: !14635, file: !2290, line: 923, type: !1055)
!14645 = !DILocalVariable(name: "cmd1", scope: !14635, file: !2290, line: 924, type: !61)
!14646 = !DILocalVariable(name: "length", scope: !14635, file: !2290, line: 924, type: !61)
!14647 = !DILocalVariable(name: "written", scope: !14635, file: !2290, line: 924, type: !61)
!14648 = !DILocalVariable(name: "status", scope: !14635, file: !2290, line: 925, type: !2512)
!14649 = !DILocalVariable(name: "savedMask", scope: !14635, file: !2290, line: 926, type: !61)
!14650 = !DILocation(line: 0, scope: !14635)
!14651 = !DILocation(line: 921, column: 60, scope: !14635)
!14652 = !DILocation(line: 923, column: 5, scope: !14635)
!14653 = !DILocation(line: 923, column: 19, scope: !14635)
!14654 = !DILocation(line: 924, column: 5, scope: !14635)
!14655 = !DILocation(line: 932, column: 9, scope: !14635)
!14656 = !DILocation(line: 933, column: 8, scope: !14635)
!14657 = !DILocation(line: 933, column: 21, scope: !14635)
!14658 = !DILocation(line: 935, column: 14, scope: !14635)
!14659 = !DILocation(line: 935, column: 5, scope: !14635)
!14660 = !DILocation(line: 922, column: 29, scope: !14635)
!14661 = !DILocation(line: 937, column: 18, scope: !14662)
!14662 = distinct !DILexicalBlock(scope: !14635, file: !2290, line: 935, column: 23)
!14663 = !DILocation(line: 937, column: 35, scope: !14662)
!14664 = !DILocation(line: 937, column: 74, scope: !14662)
!14665 = !DILocation(line: 937, column: 50, scope: !14662)
!14666 = !DILocation(line: 937, column: 39, scope: !14662)
!14667 = !DILocation(line: 940, column: 35, scope: !14662)
!14668 = !DILocation(line: 940, column: 29, scope: !14662)
!14669 = !DILocation(line: 940, column: 16, scope: !14662)
!14670 = !DILocation(line: 942, column: 18, scope: !14671)
!14671 = distinct !DILexicalBlock(scope: !14662, file: !2290, line: 942, column: 13)
!14672 = !DILocation(line: 942, column: 29, scope: !14671)
!14673 = !DILocation(line: 942, column: 13, scope: !14662)
!14674 = !DILocation(line: 943, column: 13, scope: !14675)
!14675 = distinct !DILexicalBlock(scope: !14671, file: !2290, line: 942, column: 55)
!14676 = !DILocation(line: 944, column: 9, scope: !14675)
!14677 = !DILocation(line: 947, column: 16, scope: !14678)
!14678 = distinct !DILexicalBlock(scope: !14662, file: !2290, line: 947, column: 13)
!14679 = !DILocation(line: 947, column: 29, scope: !14678)
!14680 = !DILocation(line: 0, scope: !14678)
!14681 = !DILocation(line: 947, column: 13, scope: !14662)
!14682 = !DILocation(line: 948, column: 20, scope: !14683)
!14683 = distinct !DILexicalBlock(scope: !14678, file: !2290, line: 947, column: 35)
!14684 = !DILocation(line: 949, column: 32, scope: !14683)
!14685 = !DILocation(line: 949, column: 40, scope: !14683)
!14686 = !DILocation(line: 949, column: 13, scope: !14683)
!14687 = !DILocation(line: 950, column: 9, scope: !14683)
!14688 = !DILocation(line: 953, column: 20, scope: !14689)
!14689 = distinct !DILexicalBlock(scope: !14678, file: !2290, line: 952, column: 9)
!14690 = !DILocation(line: 954, column: 32, scope: !14689)
!14691 = !DILocation(line: 954, column: 40, scope: !14689)
!14692 = !DILocation(line: 954, column: 13, scope: !14689)
!14693 = !DILocation(line: 957, column: 21, scope: !14662)
!14694 = !DILocation(line: 963, column: 45, scope: !14662)
!14695 = !DILocation(line: 963, column: 42, scope: !14662)
!14696 = !DILocation(line: 963, column: 40, scope: !14662)
!14697 = !DILocation(line: 963, column: 58, scope: !14662)
!14698 = !DILocation(line: 963, column: 29, scope: !14662)
!14699 = !DILocation(line: 964, column: 28, scope: !14662)
!14700 = !DILocation(line: 965, column: 37, scope: !14662)
!14701 = !DILocation(line: 966, column: 9, scope: !14662)
!14702 = !DILocation(line: 967, column: 26, scope: !14662)
!14703 = !DILocation(line: 967, column: 9, scope: !14662)
!14704 = !DILocation(line: 968, column: 29, scope: !14662)
!14705 = !DILocation(line: 968, column: 9, scope: !14662)
!14706 = !DILocation(line: 972, column: 9, scope: !14662)
!14707 = !DILocation(line: 978, column: 9, scope: !14662)
!14708 = !DILocation(line: 979, column: 50, scope: !14709)
!14709 = distinct !DILexicalBlock(scope: !14662, file: !2290, line: 978, column: 22)
!14710 = !DILocation(line: 979, column: 55, scope: !14709)
!14711 = !DILocation(line: 979, column: 22, scope: !14709)
!14712 = !DILocation(line: 980, column: 35, scope: !14713)
!14713 = distinct !DILexicalBlock(scope: !14709, file: !2290, line: 980, column: 17)
!14714 = !DILocation(line: 980, column: 32, scope: !14713)
!14715 = !DILocation(line: 980, column: 30, scope: !14713)
!14716 = !DILocation(line: 980, column: 19, scope: !14713)
!14717 = !DILocation(line: 980, column: 17, scope: !14709)
!14718 = distinct !{!14718, !14707, !14719}
!14719 = !DILocation(line: 983, column: 9, scope: !14662)
!14720 = !DILocation(line: 991, column: 9, scope: !14662)
!14721 = !DILocation(line: 993, column: 19, scope: !14662)
!14722 = !DILocation(line: 993, column: 16, scope: !14662)
!14723 = !DILocation(line: 994, column: 14, scope: !14662)
!14724 = !DILocation(line: 995, column: 17, scope: !14662)
!14725 = distinct !{!14725, !14659, !14726}
!14726 = !DILocation(line: 996, column: 5, scope: !14635)
!14727 = !DILocation(line: 998, column: 21, scope: !14635)
!14728 = !DILocation(line: 1005, column: 9, scope: !14635)
!14729 = !DILocation(line: 1008, column: 1, scope: !14635)
!14730 = distinct !DISubprogram(name: "SF_DAL_GetDevLock", scope: !2290, file: !2290, line: 1427, type: !14731, scopeLine: 1428, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2289, retainedNodes: !14733)
!14731 = !DISubroutineType(types: !14732)
!14732 = !{null, !2460}
!14733 = !{!14734, !14735}
!14734 = !DILocalVariable(name: "D", arg: 1, scope: !14730, file: !2290, line: 1427, type: !2460)
!14735 = !DILocalVariable(name: "Result", scope: !14730, file: !2290, line: 1429, type: !3120)
!14736 = !DILocation(line: 0, scope: !14730)
!14737 = !DILocation(line: 1430, column: 5, scope: !14730)
!14738 = !DILocation(line: 1431, column: 18, scope: !14739)
!14739 = distinct !DILexicalBlock(scope: !14730, file: !2290, line: 1430, column: 8)
!14740 = !DILocation(line: 1432, column: 21, scope: !14730)
!14741 = !DILocation(line: 1432, column: 5, scope: !14739)
!14742 = distinct !{!14742, !14737, !14743}
!14743 = !DILocation(line: 1432, column: 43, scope: !14730)
!14744 = !DILocation(line: 1433, column: 1, scope: !14730)
!14745 = distinct !DISubprogram(name: "SF_DAL_Dev_WriteEnable", scope: !2290, file: !2290, line: 3478, type: !14731, scopeLine: 3479, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2289, retainedNodes: !14746)
!14746 = !{!14747}
!14747 = !DILocalVariable(name: "D", arg: 1, scope: !14745, file: !2290, line: 3478, type: !2460)
!14748 = !DILocation(line: 0, scope: !14745)
!14749 = !DILocation(line: 3480, column: 30, scope: !14745)
!14750 = !DILocation(line: 3480, column: 35, scope: !14745)
!14751 = !DILocation(line: 3480, column: 27, scope: !14745)
!14752 = !DILocation(line: 3480, column: 5, scope: !14745)
!14753 = !DILocation(line: 3481, column: 1, scope: !14745)
!14754 = distinct !DISubprogram(name: "SF_DAL_FLAG_BUSY_SET", scope: !2290, file: !2290, line: 2382, type: !343, scopeLine: 2383, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2289, retainedNodes: !14755)
!14755 = !{!14756}
!14756 = !DILocalVariable(name: "savedMask", scope: !14754, file: !2290, line: 2384, type: !61)
!14757 = !DILocation(line: 2385, column: 17, scope: !14754)
!14758 = !DILocation(line: 0, scope: !14754)
!14759 = !DILocation(line: 2390, column: 20, scope: !14754)
!14760 = !DILocation(line: 2391, column: 5, scope: !14754)
!14761 = !DILocation(line: 2392, column: 1, scope: !14754)
!14762 = distinct !DISubprogram(name: "SF_DAL_Dev_ReadStatus", scope: !2290, file: !2290, line: 3536, type: !14763, scopeLine: 3537, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2289, retainedNodes: !14765)
!14763 = !DISubroutineType(types: !14764)
!14764 = !{!61, !2460, !159}
!14765 = !{!14766, !14767, !14768, !14769}
!14766 = !DILocalVariable(name: "D", arg: 1, scope: !14762, file: !2290, line: 3536, type: !2460)
!14767 = !DILocalVariable(name: "cmd", arg: 2, scope: !14762, file: !2290, line: 3536, type: !159)
!14768 = !DILocalVariable(name: "savedMask", scope: !14762, file: !2290, line: 3538, type: !61)
!14769 = !DILocalVariable(name: "result", scope: !14762, file: !2290, line: 3539, type: !61)
!14770 = !DILocation(line: 0, scope: !14762)
!14771 = !DILocation(line: 3541, column: 17, scope: !14762)
!14772 = !DILocation(line: 3542, column: 22, scope: !14762)
!14773 = !DILocation(line: 3542, column: 5, scope: !14762)
!14774 = !DILocation(line: 3543, column: 35, scope: !14762)
!14775 = !DILocation(line: 3543, column: 33, scope: !14762)
!14776 = !DILocation(line: 3544, column: 25, scope: !14762)
!14777 = !DILocation(line: 3545, column: 24, scope: !14762)
!14778 = !DILocation(line: 3546, column: 25, scope: !14762)
!14779 = !DILocation(line: 3546, column: 5, scope: !14762)
!14780 = !DILocation(line: 3547, column: 42, scope: !14762)
!14781 = !DILocation(line: 3547, column: 60, scope: !14762)
!14782 = !DILocation(line: 3547, column: 14, scope: !14762)
!14783 = !DILocation(line: 3548, column: 5, scope: !14762)
!14784 = !DILocation(line: 3550, column: 5, scope: !14762)
!14785 = distinct !DISubprogram(name: "SF_DAL_FLAG_BUSY_CLR", scope: !2290, file: !2290, line: 2393, type: !343, scopeLine: 2394, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2289, retainedNodes: !14786)
!14786 = !{!14787}
!14787 = !DILocalVariable(name: "savedMask", scope: !14785, file: !2290, line: 2395, type: !61)
!14788 = !DILocation(line: 2396, column: 17, scope: !14785)
!14789 = !DILocation(line: 0, scope: !14785)
!14790 = !DILocation(line: 2401, column: 20, scope: !14785)
!14791 = !DILocation(line: 2402, column: 5, scope: !14792)
!14792 = distinct !DILexicalBlock(scope: !14793, file: !2290, line: 2402, column: 5)
!14793 = distinct !DILexicalBlock(scope: !14785, file: !2290, line: 2402, column: 5)
!14794 = !DILocation(line: 2403, column: 5, scope: !14785)
!14795 = !DILocation(line: 2404, column: 1, scope: !14785)
!14796 = distinct !DISubprogram(name: "SF_DAL_FreeDevLock", scope: !2290, file: !2290, line: 1440, type: !14731, scopeLine: 1441, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2289, retainedNodes: !14797)
!14797 = !{!14798, !14799}
!14798 = !DILocalVariable(name: "D", arg: 1, scope: !14796, file: !2290, line: 1440, type: !2460)
!14799 = !DILocalVariable(name: "savedMask", scope: !14796, file: !2290, line: 1442, type: !1349)
!14800 = !DILocation(line: 0, scope: !14796)
!14801 = !DILocation(line: 1443, column: 17, scope: !14796)
!14802 = !DILocation(line: 1444, column: 9, scope: !14803)
!14803 = distinct !DILexicalBlock(scope: !14796, file: !2290, line: 1444, column: 9)
!14804 = !DILocation(line: 1444, column: 9, scope: !14796)
!14805 = !DILocation(line: 1445, column: 17, scope: !14806)
!14806 = distinct !DILexicalBlock(scope: !14803, file: !2290, line: 1444, column: 24)
!14807 = !DILocation(line: 1446, column: 9, scope: !14806)
!14808 = !DILocation(line: 1451, column: 1, scope: !14796)
!14809 = !DILocation(line: 1448, column: 9, scope: !14810)
!14810 = distinct !DILexicalBlock(scope: !14803, file: !2290, line: 1447, column: 12)
!14811 = !DILocation(line: 1449, column: 9, scope: !14812)
!14812 = distinct !DILexicalBlock(scope: !14813, file: !2290, line: 1449, column: 9)
!14813 = distinct !DILexicalBlock(scope: !14814, file: !2290, line: 1449, column: 9)
!14814 = distinct !DILexicalBlock(scope: !14810, file: !2290, line: 1449, column: 9)
!14815 = distinct !DISubprogram(name: "Flash_ReturnReady", scope: !2290, file: !2290, line: 1027, type: !343, scopeLine: 1028, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2289, retainedNodes: !14816)
!14816 = !{!14817, !14818, !14819, !14820}
!14817 = !DILocalVariable(name: "D", scope: !14815, file: !2290, line: 1029, type: !2460)
!14818 = !DILocalVariable(name: "status", scope: !14815, file: !2290, line: 1030, type: !2512)
!14819 = !DILocalVariable(name: "savedMask", scope: !14815, file: !2290, line: 1031, type: !61)
!14820 = !DILocalVariable(name: "duration", scope: !14821, file: !2290, line: 1231, type: !61)
!14821 = distinct !DILexicalBlock(scope: !14815, file: !2290, line: 1230, column: 5)
!14822 = !DILocation(line: 0, scope: !14815)
!14823 = !DILocation(line: 1033, column: 17, scope: !14815)
!14824 = !DILocation(line: 1034, column: 8, scope: !14825)
!14825 = distinct !DILexicalBlock(scope: !14815, file: !2290, line: 1034, column: 8)
!14826 = !DILocation(line: 1034, column: 30, scope: !14825)
!14827 = !DILocation(line: 1034, column: 8, scope: !14815)
!14828 = !DILocation(line: 1039, column: 27, scope: !14815)
!14829 = !DILocation(line: 1058, column: 48, scope: !14830)
!14830 = distinct !DILexicalBlock(scope: !14815, file: !2290, line: 1055, column: 5)
!14831 = !DILocation(line: 1069, column: 5, scope: !14832)
!14832 = distinct !DILexicalBlock(scope: !14833, file: !2290, line: 1069, column: 5)
!14833 = distinct !DILexicalBlock(scope: !14815, file: !2290, line: 1069, column: 5)
!14834 = !DILocation(line: 1069, column: 5, scope: !14833)
!14835 = !DILocation(line: 1069, column: 5, scope: !14836)
!14836 = distinct !DILexicalBlock(scope: !14832, file: !2290, line: 1069, column: 5)
!14837 = !DILocation(line: 1075, column: 10, scope: !14838)
!14838 = distinct !DILexicalBlock(scope: !14815, file: !2290, line: 1075, column: 9)
!14839 = !DILocation(line: 1075, column: 27, scope: !14838)
!14840 = !DILocation(line: 1075, column: 33, scope: !14838)
!14841 = !DILocation(line: 1075, column: 40, scope: !14838)
!14842 = !DILocation(line: 1075, column: 53, scope: !14838)
!14843 = !DILocation(line: 1075, column: 9, scope: !14815)
!14844 = !DILocation(line: 1084, column: 9, scope: !14845)
!14845 = distinct !DILexicalBlock(scope: !14838, file: !2290, line: 1083, column: 11)
!14846 = !DILocation(line: 1085, column: 50, scope: !14847)
!14847 = distinct !DILexicalBlock(scope: !14845, file: !2290, line: 1084, column: 21)
!14848 = !DILocation(line: 1085, column: 55, scope: !14847)
!14849 = !DILocation(line: 1085, column: 22, scope: !14847)
!14850 = !DILocation(line: 1086, column: 35, scope: !14851)
!14851 = distinct !DILexicalBlock(scope: !14847, file: !2290, line: 1086, column: 17)
!14852 = !DILocation(line: 1086, column: 32, scope: !14851)
!14853 = !DILocation(line: 1086, column: 30, scope: !14851)
!14854 = !DILocation(line: 1086, column: 19, scope: !14851)
!14855 = !DILocation(line: 1086, column: 17, scope: !14847)
!14856 = distinct !{!14856, !14844, !14857}
!14857 = !DILocation(line: 1089, column: 9, scope: !14845)
!14858 = !DILocation(line: 1107, column: 11, scope: !14859)
!14859 = distinct !DILexicalBlock(scope: !14815, file: !2290, line: 1107, column: 9)
!14860 = !DILocation(line: 1107, column: 30, scope: !14859)
!14861 = !DILocation(line: 1117, column: 46, scope: !14862)
!14862 = distinct !DILexicalBlock(scope: !14859, file: !2290, line: 1107, column: 53)
!14863 = !DILocation(line: 1117, column: 51, scope: !14862)
!14864 = !DILocation(line: 1117, column: 18, scope: !14862)
!14865 = !DILocation(line: 1120, column: 31, scope: !14866)
!14866 = distinct !DILexicalBlock(scope: !14862, file: !2290, line: 1120, column: 13)
!14867 = !DILocation(line: 1120, column: 28, scope: !14866)
!14868 = !DILocation(line: 1120, column: 26, scope: !14866)
!14869 = !DILocation(line: 1120, column: 15, scope: !14866)
!14870 = !DILocation(line: 1120, column: 13, scope: !14862)
!14871 = !DILocation(line: 1128, column: 13, scope: !14872)
!14872 = distinct !DILexicalBlock(scope: !14866, file: !2290, line: 1120, column: 55)
!14873 = !DILocation(line: 1131, column: 13, scope: !14872)
!14874 = !DILocation(line: 1132, column: 54, scope: !14875)
!14875 = distinct !DILexicalBlock(scope: !14872, file: !2290, line: 1131, column: 23)
!14876 = !DILocation(line: 1132, column: 59, scope: !14875)
!14877 = !DILocation(line: 1132, column: 26, scope: !14875)
!14878 = !DILocation(line: 1133, column: 39, scope: !14879)
!14879 = distinct !DILexicalBlock(scope: !14875, file: !2290, line: 1133, column: 21)
!14880 = !DILocation(line: 1133, column: 36, scope: !14879)
!14881 = !DILocation(line: 1133, column: 34, scope: !14879)
!14882 = !DILocation(line: 1133, column: 23, scope: !14879)
!14883 = !DILocation(line: 1133, column: 21, scope: !14875)
!14884 = distinct !{!14884, !14873, !14885}
!14885 = !DILocation(line: 1158, column: 13, scope: !14872)
!14886 = !DILocation(line: 1162, column: 21, scope: !14887)
!14887 = distinct !DILexicalBlock(scope: !14872, file: !2290, line: 1162, column: 17)
!14888 = !DILocation(line: 1162, column: 32, scope: !14887)
!14889 = !DILocation(line: 1162, column: 51, scope: !14887)
!14890 = !DILocation(line: 1162, column: 58, scope: !14887)
!14891 = !DILocation(line: 1162, column: 71, scope: !14887)
!14892 = !DILocation(line: 1162, column: 17, scope: !14872)
!14893 = !DILocation(line: 1164, column: 45, scope: !14894)
!14894 = distinct !DILexicalBlock(scope: !14887, file: !2290, line: 1162, column: 91)
!14895 = !DILocation(line: 1165, column: 36, scope: !14894)
!14896 = !DILocation(line: 1166, column: 37, scope: !14894)
!14897 = !DILocation(line: 1167, column: 34, scope: !14894)
!14898 = !DILocation(line: 1167, column: 17, scope: !14894)
!14899 = !DILocation(line: 1168, column: 37, scope: !14894)
!14900 = !DILocation(line: 1168, column: 17, scope: !14894)
!14901 = !DILocation(line: 1171, column: 50, scope: !14894)
!14902 = !DILocation(line: 1172, column: 37, scope: !14894)
!14903 = !DILocation(line: 1173, column: 45, scope: !14894)
!14904 = !DILocation(line: 1174, column: 34, scope: !14894)
!14905 = !DILocation(line: 1174, column: 17, scope: !14894)
!14906 = !DILocation(line: 1175, column: 37, scope: !14894)
!14907 = !DILocation(line: 1175, column: 17, scope: !14894)
!14908 = !DILocation(line: 1178, column: 17, scope: !14894)
!14909 = !DILocation(line: 1179, column: 49, scope: !14910)
!14910 = distinct !DILexicalBlock(scope: !14894, file: !2290, line: 1178, column: 20)
!14911 = !DILocation(line: 1180, column: 40, scope: !14910)
!14912 = !DILocation(line: 1181, column: 41, scope: !14910)
!14913 = !DILocation(line: 1182, column: 38, scope: !14910)
!14914 = !DILocation(line: 1182, column: 21, scope: !14910)
!14915 = !DILocation(line: 1183, column: 41, scope: !14910)
!14916 = !DILocation(line: 1183, column: 21, scope: !14910)
!14917 = !DILocation(line: 1184, column: 43, scope: !14910)
!14918 = !DILocation(line: 1185, column: 17, scope: !14910)
!14919 = distinct !{!14919, !14908, !14920}
!14920 = !DILocation(line: 1185, column: 32, scope: !14894)
!14921 = !DILocation(line: 1194, column: 13, scope: !14872)
!14922 = !DILocation(line: 1195, column: 9, scope: !14872)
!14923 = !DILocation(line: 1197, column: 21, scope: !14924)
!14924 = distinct !DILexicalBlock(scope: !14925, file: !2290, line: 1197, column: 17)
!14925 = distinct !DILexicalBlock(scope: !14866, file: !2290, line: 1195, column: 16)
!14926 = !DILocation(line: 1197, column: 32, scope: !14924)
!14927 = !DILocation(line: 1197, column: 53, scope: !14924)
!14928 = !DILocation(line: 1197, column: 60, scope: !14924)
!14929 = !DILocation(line: 1197, column: 76, scope: !14924)
!14930 = !DILocation(line: 1197, column: 17, scope: !14925)
!14931 = !DILocation(line: 1198, column: 54, scope: !14932)
!14932 = distinct !DILexicalBlock(scope: !14924, file: !2290, line: 1197, column: 98)
!14933 = !DILocation(line: 1198, column: 59, scope: !14932)
!14934 = !DILocation(line: 1198, column: 26, scope: !14932)
!14935 = !DILocation(line: 1199, column: 40, scope: !14936)
!14936 = distinct !DILexicalBlock(scope: !14932, file: !2290, line: 1199, column: 21)
!14937 = !DILocation(line: 1199, column: 37, scope: !14936)
!14938 = !DILocation(line: 1199, column: 35, scope: !14936)
!14939 = !DILocation(line: 1199, column: 24, scope: !14936)
!14940 = !DILocation(line: 1199, column: 63, scope: !14936)
!14941 = !DILocation(line: 1200, column: 41, scope: !14936)
!14942 = !DILocation(line: 1200, column: 39, scope: !14936)
!14943 = !DILocation(line: 1200, column: 28, scope: !14936)
!14944 = !DILocation(line: 1199, column: 21, scope: !14932)
!14945 = !DILocation(line: 1201, column: 40, scope: !14946)
!14946 = distinct !DILexicalBlock(scope: !14936, file: !2290, line: 1200, column: 68)
!14947 = !DILocation(line: 1201, column: 21, scope: !14946)
!14948 = !DILocation(line: 1202, column: 40, scope: !14946)
!14949 = !DILocation(line: 1202, column: 21, scope: !14946)
!14950 = !DILocation(line: 1203, column: 17, scope: !14946)
!14951 = !DILocation(line: 1206, column: 13, scope: !14925)
!14952 = !DILocation(line: 1228, column: 25, scope: !14815)
!14953 = !DILocation(line: 1231, column: 29, scope: !14821)
!14954 = !DILocation(line: 0, scope: !14821)
!14955 = !DILocation(line: 1232, column: 13, scope: !14956)
!14956 = distinct !DILexicalBlock(scope: !14821, file: !2290, line: 1232, column: 13)
!14957 = !DILocation(line: 1232, column: 43, scope: !14956)
!14958 = !DILocation(line: 1232, column: 13, scope: !14821)
!14959 = !DILocation(line: 1233, column: 43, scope: !14960)
!14960 = distinct !DILexicalBlock(scope: !14956, file: !2290, line: 1232, column: 55)
!14961 = !DILocation(line: 1234, column: 9, scope: !14960)
!14962 = !DILocation(line: 1237, column: 5, scope: !14963)
!14963 = distinct !DILexicalBlock(scope: !14964, file: !2290, line: 1237, column: 5)
!14964 = distinct !DILexicalBlock(scope: !14815, file: !2290, line: 1237, column: 5)
!14965 = !DILocation(line: 1240, column: 5, scope: !14815)
!14966 = !DILocation(line: 1241, column: 1, scope: !14815)
!14967 = distinct !DISubprogram(name: "SF_DAL_Dev_Suspend", scope: !2290, file: !2290, line: 3421, type: !14731, scopeLine: 3422, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2289, retainedNodes: !14968)
!14968 = !{!14969, !14970, !14971, !14972}
!14969 = !DILocalVariable(name: "D", arg: 1, scope: !14967, file: !2290, line: 3421, type: !2460)
!14970 = !DILocalVariable(name: "savedMask", scope: !14967, file: !2290, line: 3423, type: !61)
!14971 = !DILocalVariable(name: "currtime", scope: !14967, file: !2290, line: 3424, type: !61)
!14972 = !DILocalVariable(name: "difftime", scope: !14967, file: !2290, line: 3424, type: !61)
!14973 = !DILocation(line: 0, scope: !14967)
!14974 = !DILocation(line: 3427, column: 9, scope: !14975)
!14975 = distinct !DILexicalBlock(scope: !14967, file: !2290, line: 3427, column: 9)
!14976 = !DILocation(line: 3427, column: 28, scope: !14975)
!14977 = !DILocation(line: 3427, column: 9, scope: !14967)
!14978 = !DILocation(line: 3429, column: 20, scope: !14979)
!14979 = distinct !DILexicalBlock(scope: !14975, file: !2290, line: 3427, column: 59)
!14980 = !DILocation(line: 3430, column: 27, scope: !14981)
!14981 = distinct !DILexicalBlock(scope: !14979, file: !2290, line: 3430, column: 13)
!14982 = !DILocation(line: 3430, column: 24, scope: !14981)
!14983 = !DILocation(line: 3430, column: 22, scope: !14981)
!14984 = !DILocation(line: 3430, column: 13, scope: !14979)
!14985 = !DILocation(line: 3431, column: 47, scope: !14986)
!14986 = distinct !DILexicalBlock(scope: !14981, file: !2290, line: 3430, column: 46)
!14987 = !DILocation(line: 3431, column: 13, scope: !14986)
!14988 = !DILocation(line: 3432, column: 9, scope: !14986)
!14989 = !DILocation(line: 3435, column: 17, scope: !14967)
!14990 = !DILocation(line: 3436, column: 24, scope: !14967)
!14991 = !DILocation(line: 3436, column: 31, scope: !14967)
!14992 = !DILocation(line: 3436, column: 36, scope: !14967)
!14993 = !DILocation(line: 3436, column: 28, scope: !14967)
!14994 = !DILocation(line: 3436, column: 5, scope: !14967)
!14995 = !DILocation(line: 3442, column: 5, scope: !14967)
!14996 = !DILocation(line: 3443, column: 1, scope: !14967)
!14997 = distinct !DISubprogram(name: "SF_DAL_FLAG_SUS_SET", scope: !2290, file: !2290, line: 2405, type: !343, scopeLine: 2406, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2289, retainedNodes: !14998)
!14998 = !{!14999}
!14999 = !DILocalVariable(name: "savedMask", scope: !14997, file: !2290, line: 2407, type: !61)
!15000 = !DILocation(line: 2408, column: 17, scope: !14997)
!15001 = !DILocation(line: 0, scope: !14997)
!15002 = !DILocation(line: 2413, column: 25, scope: !14997)
!15003 = !DILocation(line: 2414, column: 5, scope: !15004)
!15004 = distinct !DILexicalBlock(scope: !15005, file: !2290, line: 2414, column: 5)
!15005 = distinct !DILexicalBlock(scope: !14997, file: !2290, line: 2414, column: 5)
!15006 = !DILocation(line: 2415, column: 5, scope: !14997)
!15007 = !DILocation(line: 2416, column: 1, scope: !14997)
!15008 = distinct !DISubprogram(name: "SF_DAL_Dev_Command", scope: !2290, file: !2290, line: 3561, type: !15009, scopeLine: 3562, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2289, retainedNodes: !15011)
!15009 = !DISubroutineType(types: !15010)
!15010 = !{null, !2460, !1065, !159}
!15011 = !{!15012, !15013, !15014, !15015}
!15012 = !DILocalVariable(name: "D", arg: 1, scope: !15008, file: !2290, line: 3561, type: !2460)
!15013 = !DILocalVariable(name: "cmd", arg: 2, scope: !15008, file: !2290, line: 3561, type: !1065)
!15014 = !DILocalVariable(name: "outlen", arg: 3, scope: !15008, file: !2290, line: 3561, type: !159)
!15015 = !DILocalVariable(name: "savedMask", scope: !15008, file: !2290, line: 3563, type: !61)
!15016 = !DILocation(line: 0, scope: !15008)
!15017 = !DILocation(line: 3565, column: 17, scope: !15008)
!15018 = !DILocation(line: 3566, column: 22, scope: !15008)
!15019 = !DILocation(line: 3566, column: 5, scope: !15008)
!15020 = !DILocation(line: 3567, column: 33, scope: !15008)
!15021 = !DILocation(line: 3568, column: 27, scope: !15008)
!15022 = !DILocation(line: 3568, column: 25, scope: !15008)
!15023 = !DILocation(line: 3569, column: 24, scope: !15008)
!15024 = !DILocation(line: 3570, column: 25, scope: !15008)
!15025 = !DILocation(line: 3570, column: 5, scope: !15008)
!15026 = !DILocation(line: 3571, column: 5, scope: !15008)
!15027 = !DILocation(line: 3573, column: 1, scope: !15008)
!15028 = distinct !DISubprogram(name: "retrieve_MTD_lock", scope: !2290, file: !2290, line: 1410, type: !15029, scopeLine: 1411, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2289, retainedNodes: !15031)
!15029 = !DISubroutineType(types: !15030)
!15030 = !{!3120}
!15031 = !{!15032}
!15032 = !DILocalVariable(name: "savedMask", scope: !15028, file: !2290, line: 1412, type: !1349)
!15033 = !DILocation(line: 1413, column: 17, scope: !15028)
!15034 = !DILocation(line: 0, scope: !15028)
!15035 = !DILocation(line: 1414, column: 9, scope: !15036)
!15036 = distinct !DILexicalBlock(scope: !15028, file: !2290, line: 1414, column: 9)
!15037 = !DILocation(line: 1414, column: 9, scope: !15028)
!15038 = !DILocation(line: 1415, column: 17, scope: !15039)
!15039 = distinct !DILexicalBlock(scope: !15036, file: !2290, line: 1414, column: 24)
!15040 = !DILocation(line: 1417, column: 9, scope: !15039)
!15041 = !DILocation(line: 0, scope: !15036)
!15042 = !DILocation(line: 1425, column: 1, scope: !15028)
!15043 = distinct !DISubprogram(name: "Flash_CheckReady", scope: !2290, file: !2290, line: 1257, type: !15044, scopeLine: 1258, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2289, retainedNodes: !15046)
!15044 = !DISubroutineType(types: !15045)
!15045 = !{!91}
!15046 = !{!15047, !15048, !15049}
!15047 = !DILocalVariable(name: "D", scope: !15043, file: !2290, line: 1259, type: !2460)
!15048 = !DILocalVariable(name: "status", scope: !15043, file: !2290, line: 1260, type: !2512)
!15049 = !DILocalVariable(name: "result", scope: !15043, file: !2290, line: 1261, type: !91)
!15050 = !DILocation(line: 1259, column: 57, scope: !15043)
!15051 = !DILocation(line: 0, scope: !15043)
!15052 = !DILocation(line: 1263, column: 5, scope: !15053)
!15053 = distinct !DILexicalBlock(scope: !15054, file: !2290, line: 1263, column: 5)
!15054 = distinct !DILexicalBlock(scope: !15043, file: !2290, line: 1263, column: 5)
!15055 = !DILocation(line: 1263, column: 5, scope: !15054)
!15056 = !DILocation(line: 1263, column: 5, scope: !15057)
!15057 = distinct !DILexicalBlock(scope: !15053, file: !2290, line: 1263, column: 5)
!15058 = !DILocation(line: 1265, column: 5, scope: !15043)
!15059 = !DILocation(line: 1267, column: 42, scope: !15043)
!15060 = !DILocation(line: 1267, column: 47, scope: !15043)
!15061 = !DILocation(line: 1267, column: 14, scope: !15043)
!15062 = !DILocation(line: 1269, column: 27, scope: !15063)
!15063 = distinct !DILexicalBlock(scope: !15043, file: !2290, line: 1269, column: 9)
!15064 = !DILocation(line: 1269, column: 24, scope: !15063)
!15065 = !DILocation(line: 1269, column: 22, scope: !15063)
!15066 = !DILocation(line: 1269, column: 11, scope: !15063)
!15067 = !DILocation(line: 1269, column: 9, scope: !15043)
!15068 = !DILocation(line: 1270, column: 9, scope: !15069)
!15069 = distinct !DILexicalBlock(scope: !15063, file: !2290, line: 1269, column: 51)
!15070 = !DILocation(line: 1272, column: 5, scope: !15069)
!15071 = !DILocation(line: 1274, column: 5, scope: !15043)
!15072 = !DILocation(line: 1276, column: 5, scope: !15043)
!15073 = distinct !DISubprogram(name: "Flash_ResumeOperation", scope: !2290, file: !2290, line: 1289, type: !343, scopeLine: 1290, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2289, retainedNodes: !15074)
!15074 = !{!15075}
!15075 = !DILocalVariable(name: "D", scope: !15073, file: !2290, line: 1291, type: !2460)
!15076 = !DILocation(line: 0, scope: !15073)
!15077 = !DILocation(line: 1293, column: 5, scope: !15078)
!15078 = distinct !DILexicalBlock(scope: !15079, file: !2290, line: 1293, column: 5)
!15079 = distinct !DILexicalBlock(scope: !15073, file: !2290, line: 1293, column: 5)
!15080 = !DILocation(line: 1293, column: 5, scope: !15081)
!15081 = distinct !DILexicalBlock(scope: !15078, file: !2290, line: 1293, column: 5)
!15082 = !DILocation(line: 1293, column: 5, scope: !15083)
!15083 = distinct !DILexicalBlock(scope: !15084, file: !2290, line: 1293, column: 5)
!15084 = distinct !DILexicalBlock(scope: !15085, file: !2290, line: 1293, column: 5)
!15085 = distinct !DILexicalBlock(scope: !15081, file: !2290, line: 1293, column: 5)
!15086 = !DILocation(line: 1291, column: 60, scope: !15073)
!15087 = !DILocation(line: 1295, column: 5, scope: !15073)
!15088 = !DILocation(line: 1296, column: 1, scope: !15073)
!15089 = distinct !DISubprogram(name: "SF_DAL_Dev_Resume", scope: !2290, file: !2290, line: 3452, type: !14731, scopeLine: 3453, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2289, retainedNodes: !15090)
!15090 = !{!15091, !15092}
!15091 = !DILocalVariable(name: "D", arg: 1, scope: !15089, file: !2290, line: 3452, type: !2460)
!15092 = !DILocalVariable(name: "savedMask", scope: !15089, file: !2290, line: 3454, type: !61)
!15093 = !DILocation(line: 0, scope: !15089)
!15094 = !DILocation(line: 3456, column: 17, scope: !15089)
!15095 = !DILocation(line: 3462, column: 24, scope: !15089)
!15096 = !DILocation(line: 3462, column: 31, scope: !15089)
!15097 = !DILocation(line: 3462, column: 36, scope: !15089)
!15098 = !DILocation(line: 3462, column: 28, scope: !15089)
!15099 = !DILocation(line: 3462, column: 5, scope: !15089)
!15100 = !DILocation(line: 3463, column: 12, scope: !15101)
!15101 = distinct !DILexicalBlock(scope: !15089, file: !2290, line: 3463, column: 9)
!15102 = !DILocation(line: 3463, column: 27, scope: !15101)
!15103 = !DILocation(line: 3463, column: 9, scope: !15089)
!15104 = !DILocation(line: 3464, column: 28, scope: !15105)
!15105 = distinct !DILexicalBlock(scope: !15101, file: !2290, line: 3463, column: 33)
!15106 = !DILocation(line: 3465, column: 5, scope: !15105)
!15107 = !DILocation(line: 3467, column: 5, scope: !15089)
!15108 = !DILocation(line: 3468, column: 5, scope: !15089)
!15109 = !DILocation(line: 3469, column: 1, scope: !15089)
!15110 = distinct !DISubprogram(name: "SF_DAL_FLAG_SUS_CLR", scope: !2290, file: !2290, line: 2417, type: !343, scopeLine: 2418, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2289, retainedNodes: !15111)
!15111 = !{!15112}
!15112 = !DILocalVariable(name: "savedMask", scope: !15110, file: !2290, line: 2419, type: !61)
!15113 = !DILocation(line: 2420, column: 17, scope: !15110)
!15114 = !DILocation(line: 0, scope: !15110)
!15115 = !DILocation(line: 2425, column: 25, scope: !15110)
!15116 = !DILocation(line: 2426, column: 5, scope: !15110)
!15117 = !DILocation(line: 2427, column: 1, scope: !15110)
!15118 = distinct !DISubprogram(name: "Flash_SuspendOperation", scope: !2290, file: !2290, line: 1308, type: !343, scopeLine: 1309, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2289, retainedNodes: !15119)
!15119 = !{!15120, !15121}
!15120 = !DILocalVariable(name: "D", scope: !15118, file: !2290, line: 1310, type: !2460)
!15121 = !DILocalVariable(name: "status", scope: !15118, file: !2290, line: 1311, type: !2512)
!15122 = !DILocation(line: 1310, column: 60, scope: !15118)
!15123 = !DILocation(line: 0, scope: !15118)
!15124 = !DILocation(line: 1313, column: 5, scope: !15125)
!15125 = distinct !DILexicalBlock(scope: !15126, file: !2290, line: 1313, column: 5)
!15126 = distinct !DILexicalBlock(scope: !15118, file: !2290, line: 1313, column: 5)
!15127 = !DILocation(line: 1313, column: 5, scope: !15128)
!15128 = distinct !DILexicalBlock(scope: !15125, file: !2290, line: 1313, column: 5)
!15129 = !DILocation(line: 1313, column: 5, scope: !15130)
!15130 = distinct !DILexicalBlock(scope: !15131, file: !2290, line: 1313, column: 5)
!15131 = distinct !DILexicalBlock(scope: !15132, file: !2290, line: 1313, column: 5)
!15132 = distinct !DILexicalBlock(scope: !15128, file: !2290, line: 1313, column: 5)
!15133 = !DILocation(line: 1315, column: 5, scope: !15134)
!15134 = distinct !DILexicalBlock(scope: !15135, file: !2290, line: 1315, column: 5)
!15135 = distinct !DILexicalBlock(scope: !15118, file: !2290, line: 1315, column: 5)
!15136 = !DILocation(line: 1315, column: 5, scope: !15135)
!15137 = !DILocation(line: 1315, column: 5, scope: !15138)
!15138 = distinct !DILexicalBlock(scope: !15134, file: !2290, line: 1315, column: 5)
!15139 = !DILocation(line: 1317, column: 5, scope: !15118)
!15140 = !DILocation(line: 1319, column: 5, scope: !15118)
!15141 = !DILocation(line: 1320, column: 46, scope: !15142)
!15142 = distinct !DILexicalBlock(scope: !15118, file: !2290, line: 1319, column: 15)
!15143 = !DILocation(line: 1320, column: 51, scope: !15142)
!15144 = !DILocation(line: 1320, column: 18, scope: !15142)
!15145 = !DILocation(line: 1322, column: 31, scope: !15146)
!15146 = distinct !DILexicalBlock(scope: !15142, file: !2290, line: 1322, column: 13)
!15147 = !DILocation(line: 1322, column: 28, scope: !15146)
!15148 = !DILocation(line: 1322, column: 26, scope: !15146)
!15149 = !DILocation(line: 1322, column: 15, scope: !15146)
!15150 = !DILocation(line: 1322, column: 13, scope: !15142)
!15151 = distinct !{!15151, !15140, !15152}
!15152 = !DILocation(line: 1325, column: 5, scope: !15118)
!15153 = !DILocation(line: 1327, column: 5, scope: !15118)
!15154 = !DILocation(line: 1328, column: 1, scope: !15118)
!15155 = distinct !DISubprogram(name: "SF_DAL_CreateDevLock", scope: !2290, file: !2290, line: 1394, type: !14731, scopeLine: 1395, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2289, retainedNodes: !15156)
!15156 = !{!15157}
!15157 = !DILocalVariable(name: "D", arg: 1, scope: !15155, file: !2290, line: 1394, type: !2460)
!15158 = !DILocation(line: 0, scope: !15155)
!15159 = !DILocation(line: 1401, column: 1, scope: !15155)
!15160 = distinct !DISubprogram(name: "SF_DAL_Init_MXIC", scope: !2290, file: !2290, line: 1556, type: !15161, scopeLine: 1557, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2289, retainedNodes: !15182)
!15161 = !DISubroutineType(types: !15162)
!15162 = !{!1349, !15163, !2460}
!15163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15164, size: 32)
!15164 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_Driver", file: !2486, line: 121, baseType: !15165)
!15165 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2486, line: 105, size: 480, elements: !15166)
!15166 = !{!15167, !15168, !15169, !15170, !15171, !15172, !15173, !15174, !15175, !15176, !15177, !15178, !15179, !15180, !15181}
!15167 = !DIDerivedType(tag: DW_TAG_member, name: "MountDevice", scope: !15165, file: !2486, line: 106, baseType: !2752, size: 32)
!15168 = !DIDerivedType(tag: DW_TAG_member, name: "ShutDown", scope: !15165, file: !2486, line: 107, baseType: !2558, size: 32, offset: 32)
!15169 = !DIDerivedType(tag: DW_TAG_member, name: "MapWindow", scope: !15165, file: !2486, line: 108, baseType: !2757, size: 32, offset: 64)
!15170 = !DIDerivedType(tag: DW_TAG_member, name: "EraseBlock", scope: !15165, file: !2486, line: 109, baseType: !2761, size: 32, offset: 96)
!15171 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramData", scope: !15165, file: !2486, line: 110, baseType: !2765, size: 32, offset: 128)
!15172 = !DIDerivedType(tag: DW_TAG_member, name: "NonBlockEraseBlock", scope: !15165, file: !2486, line: 111, baseType: !2761, size: 32, offset: 160)
!15173 = !DIDerivedType(tag: DW_TAG_member, name: "CheckDeviceReady", scope: !15165, file: !2486, line: 112, baseType: !2770, size: 32, offset: 192)
!15174 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendErase", scope: !15165, file: !2486, line: 113, baseType: !2761, size: 32, offset: 224)
!15175 = !DIDerivedType(tag: DW_TAG_member, name: "ResumeErase", scope: !15165, file: !2486, line: 114, baseType: !2761, size: 32, offset: 256)
!15176 = !DIDerivedType(tag: DW_TAG_member, name: "BlankCheck", scope: !15165, file: !2486, line: 115, baseType: !2761, size: 32, offset: 288)
!15177 = !DIDerivedType(tag: DW_TAG_member, name: "OTPAccess", scope: !15165, file: !2486, line: 116, baseType: !2777, size: 32, offset: 320)
!15178 = !DIDerivedType(tag: DW_TAG_member, name: "OTPQueryLength", scope: !15165, file: !2486, line: 117, baseType: !2782, size: 32, offset: 352)
!15179 = !DIDerivedType(tag: DW_TAG_member, name: "LockEraseBlkAddr", scope: !15165, file: !2486, line: 118, baseType: !2787, size: 32, offset: 384)
!15180 = !DIDerivedType(tag: DW_TAG_member, name: "IsEraseSuspended", scope: !15165, file: !2486, line: 119, baseType: !2791, size: 32, offset: 416)
!15181 = !DIDerivedType(tag: DW_TAG_member, name: "IOCtrl", scope: !15165, file: !2486, line: 120, baseType: !2795, size: 32, offset: 448)
!15182 = !{!15183, !15184, !15185}
!15183 = !DILocalVariable(name: "driver", arg: 1, scope: !15160, file: !2290, line: 1556, type: !15163)
!15184 = !DILocalVariable(name: "D", arg: 2, scope: !15160, file: !2290, line: 1556, type: !2460)
!15185 = !DILocalVariable(name: "smap", scope: !15160, file: !2290, line: 1558, type: !2511)
!15186 = !DILocation(line: 0, scope: !15160)
!15187 = !DILocation(line: 1561, column: 15, scope: !15160)
!15188 = !DILocation(line: 1562, column: 22, scope: !15160)
!15189 = !DILocation(line: 1563, column: 5, scope: !15160)
!15190 = !DILocation(line: 1563, column: 22, scope: !15160)
!15191 = !DILocation(line: 1565, column: 5, scope: !15160)
!15192 = !DILocation(line: 1565, column: 22, scope: !15160)
!15193 = !DILocation(line: 1566, column: 5, scope: !15160)
!15194 = !DILocation(line: 1566, column: 22, scope: !15160)
!15195 = !DILocation(line: 1568, column: 5, scope: !15160)
!15196 = !DILocation(line: 1568, column: 22, scope: !15160)
!15197 = !DILocation(line: 1569, column: 5, scope: !15160)
!15198 = !DILocation(line: 1569, column: 22, scope: !15160)
!15199 = !DILocation(line: 1570, column: 5, scope: !15160)
!15200 = !DILocation(line: 1570, column: 22, scope: !15160)
!15201 = !DILocation(line: 1573, column: 8, scope: !15160)
!15202 = !DILocation(line: 1573, column: 13, scope: !15160)
!15203 = !DILocation(line: 1573, column: 28, scope: !15160)
!15204 = !DILocation(line: 1574, column: 8, scope: !15160)
!15205 = !DILocation(line: 1574, column: 13, scope: !15160)
!15206 = !DILocation(line: 1574, column: 29, scope: !15160)
!15207 = !DILocation(line: 1575, column: 8, scope: !15160)
!15208 = !DILocation(line: 1575, column: 13, scope: !15160)
!15209 = !DILocation(line: 1575, column: 30, scope: !15160)
!15210 = !DILocation(line: 1576, column: 8, scope: !15160)
!15211 = !DILocation(line: 1576, column: 13, scope: !15160)
!15212 = !DILocation(line: 1576, column: 23, scope: !15160)
!15213 = !DILocation(line: 1577, column: 8, scope: !15160)
!15214 = !DILocation(line: 1577, column: 13, scope: !15160)
!15215 = !DILocation(line: 1577, column: 24, scope: !15160)
!15216 = !DILocation(line: 1578, column: 8, scope: !15160)
!15217 = !DILocation(line: 1578, column: 13, scope: !15160)
!15218 = !DILocation(line: 1578, column: 25, scope: !15160)
!15219 = !DILocation(line: 1579, column: 8, scope: !15160)
!15220 = !DILocation(line: 1579, column: 23, scope: !15160)
!15221 = !DILocation(line: 1583, column: 10, scope: !15222)
!15222 = distinct !DILexicalBlock(scope: !15160, file: !2290, line: 1583, column: 9)
!15223 = !DILocation(line: 1583, column: 24, scope: !15222)
!15224 = !DILocation(line: 1583, column: 32, scope: !15222)
!15225 = !DILocation(line: 1583, column: 35, scope: !15222)
!15226 = !DILocation(line: 1583, column: 49, scope: !15222)
!15227 = !DILocation(line: 1583, column: 9, scope: !15160)
!15228 = !DILocation(line: 1586, column: 12, scope: !15229)
!15229 = distinct !DILexicalBlock(scope: !15222, file: !2290, line: 1583, column: 59)
!15230 = !DILocation(line: 1586, column: 17, scope: !15229)
!15231 = !DILocation(line: 1586, column: 25, scope: !15229)
!15232 = !DILocation(line: 1587, column: 12, scope: !15229)
!15233 = !DILocation(line: 1587, column: 17, scope: !15229)
!15234 = !DILocation(line: 1587, column: 24, scope: !15229)
!15235 = !DILocation(line: 1591, column: 10, scope: !15236)
!15236 = distinct !DILexicalBlock(scope: !15160, file: !2290, line: 1591, column: 9)
!15237 = !DILocation(line: 1589, column: 5, scope: !15229)
!15238 = !DILocation(line: 1600, column: 32, scope: !15239)
!15239 = distinct !DILexicalBlock(scope: !15160, file: !2290, line: 1600, column: 9)
!15240 = !DILocation(line: 1600, column: 35, scope: !15239)
!15241 = !DILocation(line: 1600, column: 49, scope: !15239)
!15242 = !DILocation(line: 1600, column: 9, scope: !15160)
!15243 = !DILocation(line: 1601, column: 12, scope: !15244)
!15244 = distinct !DILexicalBlock(scope: !15239, file: !2290, line: 1600, column: 59)
!15245 = !DILocation(line: 1601, column: 17, scope: !15244)
!15246 = !DILocation(line: 1601, column: 25, scope: !15244)
!15247 = !DILocation(line: 1602, column: 12, scope: !15244)
!15248 = !DILocation(line: 1602, column: 17, scope: !15244)
!15249 = !DILocation(line: 1602, column: 24, scope: !15244)
!15250 = !DILocation(line: 1603, column: 5, scope: !15244)
!15251 = !DILocation(line: 1607, column: 8, scope: !15160)
!15252 = !DILocation(line: 1607, column: 20, scope: !15160)
!15253 = !DILocation(line: 1622, column: 5, scope: !15160)
!15254 = distinct !DISubprogram(name: "SF_DAL_UnlockBlock_MXIC", scope: !2290, file: !2290, line: 4553, type: !2559, scopeLine: 4554, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2289, retainedNodes: !15255)
!15255 = !{!15256, !15257, !15258, !15259}
!15256 = !DILocalVariable(name: "MTDData", arg: 1, scope: !15254, file: !2290, line: 4553, type: !88)
!15257 = !DILocalVariable(name: "D", scope: !15254, file: !2290, line: 4555, type: !2460)
!15258 = !DILocalVariable(name: "unlock", scope: !15254, file: !2290, line: 4556, type: !61)
!15259 = !DILocalVariable(name: "cmd", scope: !15254, file: !2290, line: 4557, type: !159)
!15260 = !DILocation(line: 0, scope: !15254)
!15261 = !DILocation(line: 4555, column: 24, scope: !15254)
!15262 = !DILocation(line: 4557, column: 5, scope: !15254)
!15263 = !DILocation(line: 4558, column: 12, scope: !15264)
!15264 = distinct !DILexicalBlock(scope: !15254, file: !2290, line: 4558, column: 9)
!15265 = !DILocation(line: 4558, column: 9, scope: !15264)
!15266 = !DILocation(line: 4558, column: 23, scope: !15264)
!15267 = !DILocation(line: 4558, column: 31, scope: !15264)
!15268 = !DILocation(line: 4558, column: 34, scope: !15264)
!15269 = !DILocation(line: 4558, column: 48, scope: !15264)
!15270 = !DILocation(line: 4558, column: 56, scope: !15264)
!15271 = !DILocation(line: 4558, column: 59, scope: !15264)
!15272 = !DILocation(line: 4558, column: 73, scope: !15264)
!15273 = !DILocation(line: 4558, column: 9, scope: !15254)
!15274 = !DILocation(line: 4563, column: 24, scope: !15254)
!15275 = !DILocation(line: 4563, column: 31, scope: !15254)
!15276 = !DILocation(line: 4563, column: 36, scope: !15254)
!15277 = !DILocation(line: 4563, column: 28, scope: !15254)
!15278 = !DILocation(line: 4563, column: 5, scope: !15254)
!15279 = !DILocation(line: 4564, column: 5, scope: !15254)
!15280 = !DILocation(line: 4567, column: 28, scope: !15254)
!15281 = !DILocation(line: 4567, column: 36, scope: !15254)
!15282 = !DILocation(line: 4567, column: 41, scope: !15254)
!15283 = !DILocation(line: 4567, column: 5, scope: !15254)
!15284 = !DILocation(line: 4568, column: 17, scope: !15254)
!15285 = !DILocation(line: 4568, column: 22, scope: !15254)
!15286 = !DILocation(line: 4568, column: 14, scope: !15254)
!15287 = !DILocation(line: 4569, column: 22, scope: !15254)
!15288 = !DILocation(line: 4569, column: 54, scope: !15254)
!15289 = !DILocation(line: 4569, column: 65, scope: !15254)
!15290 = !DILocation(line: 4569, column: 62, scope: !15254)
!15291 = !DILocation(line: 4569, column: 87, scope: !15254)
!15292 = !DILocation(line: 4569, column: 85, scope: !15254)
!15293 = !DILocation(line: 4569, column: 60, scope: !15254)
!15294 = !DILocation(line: 4569, column: 58, scope: !15254)
!15295 = !DILocation(line: 4569, column: 51, scope: !15254)
!15296 = !DILocation(line: 4572, column: 24, scope: !15254)
!15297 = !DILocation(line: 4572, column: 5, scope: !15254)
!15298 = !DILocation(line: 4573, column: 5, scope: !15254)
!15299 = !DILocation(line: 4575, column: 5, scope: !15254)
!15300 = !DILocation(line: 4576, column: 1, scope: !15254)
!15301 = distinct !DISubprogram(name: "SF_DAL_Dev_WaitReady_EMIINIT", scope: !2290, file: !2290, line: 4488, type: !14731, scopeLine: 4489, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2289, retainedNodes: !15302)
!15302 = !{!15303, !15304}
!15303 = !DILocalVariable(name: "D", arg: 1, scope: !15301, file: !2290, line: 4488, type: !2460)
!15304 = !DILocalVariable(name: "status", scope: !15301, file: !2290, line: 4490, type: !2512)
!15305 = !DILocation(line: 0, scope: !15301)
!15306 = !DILocation(line: 4490, column: 5, scope: !15301)
!15307 = !DILocation(line: 4491, column: 5, scope: !15301)
!15308 = !DILocation(line: 4492, column: 32, scope: !15309)
!15309 = distinct !DILexicalBlock(scope: !15301, file: !2290, line: 4491, column: 10)
!15310 = !DILocation(line: 4492, column: 40, scope: !15309)
!15311 = !DILocation(line: 4492, column: 45, scope: !15309)
!15312 = !DILocation(line: 4492, column: 9, scope: !15309)
!15313 = !DILocation(line: 4493, column: 20, scope: !15301)
!15314 = !DILocation(line: 4493, column: 32, scope: !15301)
!15315 = !DILocation(line: 4493, column: 29, scope: !15301)
!15316 = !DILocation(line: 4493, column: 27, scope: !15301)
!15317 = !DILocation(line: 4493, column: 16, scope: !15301)
!15318 = !DILocation(line: 4493, column: 5, scope: !15309)
!15319 = distinct !{!15319, !15307, !15320}
!15320 = !DILocation(line: 4493, column: 54, scope: !15301)
!15321 = !DILocation(line: 4494, column: 1, scope: !15301)
!15322 = distinct !DISubprogram(name: "SF_DAL_Init_WINBOND", scope: !2290, file: !2290, line: 1742, type: !15161, scopeLine: 1743, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2289, retainedNodes: !15323)
!15323 = !{!15324, !15325, !15326}
!15324 = !DILocalVariable(name: "driver", arg: 1, scope: !15322, file: !2290, line: 1742, type: !15163)
!15325 = !DILocalVariable(name: "D", arg: 2, scope: !15322, file: !2290, line: 1742, type: !2460)
!15326 = !DILocalVariable(name: "smap", scope: !15322, file: !2290, line: 1744, type: !2511)
!15327 = !DILocation(line: 0, scope: !15322)
!15328 = !DILocation(line: 1747, column: 15, scope: !15322)
!15329 = !DILocation(line: 1748, column: 22, scope: !15322)
!15330 = !DILocation(line: 1749, column: 5, scope: !15322)
!15331 = !DILocation(line: 1749, column: 22, scope: !15322)
!15332 = !DILocation(line: 1750, column: 5, scope: !15322)
!15333 = !DILocation(line: 1750, column: 22, scope: !15322)
!15334 = !DILocation(line: 1751, column: 5, scope: !15322)
!15335 = !DILocation(line: 1751, column: 22, scope: !15322)
!15336 = !DILocation(line: 1752, column: 5, scope: !15322)
!15337 = !DILocation(line: 1752, column: 22, scope: !15322)
!15338 = !DILocation(line: 1753, column: 5, scope: !15322)
!15339 = !DILocation(line: 1753, column: 22, scope: !15322)
!15340 = !DILocation(line: 1756, column: 8, scope: !15322)
!15341 = !DILocation(line: 1756, column: 13, scope: !15322)
!15342 = !DILocation(line: 1756, column: 24, scope: !15322)
!15343 = !DILocation(line: 1758, column: 8, scope: !15322)
!15344 = !DILocation(line: 1758, column: 13, scope: !15322)
!15345 = !DILocation(line: 1758, column: 28, scope: !15322)
!15346 = !DILocation(line: 1759, column: 8, scope: !15322)
!15347 = !DILocation(line: 1759, column: 13, scope: !15322)
!15348 = !DILocation(line: 1759, column: 29, scope: !15322)
!15349 = !DILocation(line: 1760, column: 8, scope: !15322)
!15350 = !DILocation(line: 1760, column: 13, scope: !15322)
!15351 = !DILocation(line: 1760, column: 23, scope: !15322)
!15352 = !DILocation(line: 1761, column: 8, scope: !15322)
!15353 = !DILocation(line: 1761, column: 13, scope: !15322)
!15354 = !DILocation(line: 1761, column: 24, scope: !15322)
!15355 = !DILocation(line: 1762, column: 8, scope: !15322)
!15356 = !DILocation(line: 1762, column: 13, scope: !15322)
!15357 = !DILocation(line: 1762, column: 21, scope: !15322)
!15358 = !DILocation(line: 1763, column: 8, scope: !15322)
!15359 = !DILocation(line: 1763, column: 13, scope: !15322)
!15360 = !DILocation(line: 1763, column: 20, scope: !15322)
!15361 = !DILocation(line: 1764, column: 8, scope: !15322)
!15362 = !DILocation(line: 1764, column: 23, scope: !15322)
!15363 = !DILocation(line: 1768, column: 8, scope: !15322)
!15364 = !DILocation(line: 1768, column: 20, scope: !15322)
!15365 = !DILocation(line: 1770, column: 5, scope: !15322)
!15366 = distinct !DISubprogram(name: "SF_DAL_Init_WINBOND_OTP", scope: !2290, file: !2290, line: 1775, type: !15161, scopeLine: 1776, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2289, retainedNodes: !15367)
!15367 = !{!15368, !15369}
!15368 = !DILocalVariable(name: "driver", arg: 1, scope: !15366, file: !2290, line: 1775, type: !15163)
!15369 = !DILocalVariable(name: "D", arg: 2, scope: !15366, file: !2290, line: 1775, type: !2460)
!15370 = !DILocation(line: 0, scope: !15366)
!15371 = !DILocation(line: 1793, column: 5, scope: !15366)
!15372 = distinct !DISubprogram(name: "SF_DAL_Init_Common", scope: !2290, file: !2290, line: 1932, type: !15161, scopeLine: 1933, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2289, retainedNodes: !15373)
!15373 = !{!15374, !15375}
!15374 = !DILocalVariable(name: "driver", arg: 1, scope: !15372, file: !2290, line: 1932, type: !15163)
!15375 = !DILocalVariable(name: "D", arg: 2, scope: !15372, file: !2290, line: 1932, type: !2460)
!15376 = !DILocation(line: 0, scope: !15372)
!15377 = !DILocation(line: 1935, column: 13, scope: !15372)
!15378 = !DILocation(line: 1935, column: 25, scope: !15372)
!15379 = !DILocation(line: 1936, column: 13, scope: !15372)
!15380 = !DILocation(line: 1936, column: 22, scope: !15372)
!15381 = !DILocation(line: 1937, column: 13, scope: !15372)
!15382 = !DILocation(line: 1937, column: 23, scope: !15372)
!15383 = !DILocation(line: 1939, column: 13, scope: !15372)
!15384 = !DILocation(line: 1939, column: 24, scope: !15372)
!15385 = !DILocation(line: 1940, column: 13, scope: !15372)
!15386 = !DILocation(line: 1940, column: 25, scope: !15372)
!15387 = !DILocation(line: 1945, column: 13, scope: !15372)
!15388 = !DILocation(line: 1945, column: 32, scope: !15372)
!15389 = !DILocation(line: 1946, column: 13, scope: !15372)
!15390 = !DILocation(line: 1946, column: 30, scope: !15372)
!15391 = !DILocation(line: 1947, column: 13, scope: !15372)
!15392 = !DILocation(line: 1947, column: 26, scope: !15372)
!15393 = !DILocation(line: 1948, column: 13, scope: !15372)
!15394 = !DILocation(line: 1948, column: 25, scope: !15372)
!15395 = !DILocation(line: 1949, column: 13, scope: !15372)
!15396 = !DILocation(line: 1949, column: 24, scope: !15372)
!15397 = !DILocation(line: 1956, column: 13, scope: !15372)
!15398 = !DILocation(line: 1956, column: 23, scope: !15372)
!15399 = !DILocation(line: 1957, column: 13, scope: !15372)
!15400 = !DILocation(line: 1957, column: 28, scope: !15372)
!15401 = !DILocation(line: 1960, column: 13, scope: !15372)
!15402 = !DILocation(line: 1960, column: 30, scope: !15372)
!15403 = !DILocation(line: 1961, column: 13, scope: !15372)
!15404 = !DILocation(line: 1961, column: 30, scope: !15372)
!15405 = !DILocation(line: 1962, column: 13, scope: !15372)
!15406 = !DILocation(line: 1962, column: 20, scope: !15372)
!15407 = !DILocation(line: 1968, column: 9, scope: !15408)
!15408 = distinct !DILexicalBlock(scope: !15372, file: !2290, line: 1968, column: 9)
!15409 = !DILocation(line: 1968, column: 36, scope: !15408)
!15410 = !DILocation(line: 1968, column: 9, scope: !15372)
!15411 = !DILocation(line: 1971, column: 12, scope: !15412)
!15412 = distinct !DILexicalBlock(scope: !15408, file: !2290, line: 1970, column: 5)
!15413 = !DILocation(line: 1971, column: 25, scope: !15412)
!15414 = !DILocation(line: 1979, column: 8, scope: !15372)
!15415 = !DILocation(line: 1979, column: 13, scope: !15372)
!15416 = !DILocation(line: 1979, column: 25, scope: !15372)
!15417 = !DILocation(line: 1980, column: 8, scope: !15372)
!15418 = !DILocation(line: 1980, column: 13, scope: !15372)
!15419 = !DILocation(line: 1980, column: 24, scope: !15372)
!15420 = !DILocation(line: 1981, column: 8, scope: !15372)
!15421 = !DILocation(line: 1981, column: 13, scope: !15372)
!15422 = !DILocation(line: 1981, column: 24, scope: !15372)
!15423 = !DILocation(line: 1982, column: 8, scope: !15372)
!15424 = !DILocation(line: 1982, column: 13, scope: !15372)
!15425 = !DILocation(line: 1982, column: 22, scope: !15372)
!15426 = !DILocation(line: 1983, column: 8, scope: !15372)
!15427 = !DILocation(line: 1983, column: 13, scope: !15372)
!15428 = !DILocation(line: 1983, column: 21, scope: !15372)
!15429 = !DILocation(line: 1984, column: 8, scope: !15372)
!15430 = !DILocation(line: 1984, column: 13, scope: !15372)
!15431 = !DILocation(line: 1984, column: 22, scope: !15372)
!15432 = !DILocation(line: 1985, column: 8, scope: !15372)
!15433 = !DILocation(line: 1985, column: 13, scope: !15372)
!15434 = !DILocation(line: 1985, column: 22, scope: !15372)
!15435 = !DILocation(line: 1986, column: 8, scope: !15372)
!15436 = !DILocation(line: 1986, column: 13, scope: !15372)
!15437 = !DILocation(line: 1986, column: 21, scope: !15372)
!15438 = !DILocation(line: 1987, column: 8, scope: !15372)
!15439 = !DILocation(line: 1987, column: 13, scope: !15372)
!15440 = !DILocation(line: 1987, column: 20, scope: !15372)
!15441 = !DILocation(line: 1988, column: 8, scope: !15372)
!15442 = !DILocation(line: 1988, column: 13, scope: !15372)
!15443 = !DILocation(line: 1988, column: 25, scope: !15372)
!15444 = !DILocation(line: 1989, column: 8, scope: !15372)
!15445 = !DILocation(line: 1989, column: 13, scope: !15372)
!15446 = !DILocation(line: 1989, column: 22, scope: !15372)
!15447 = !DILocation(line: 1990, column: 8, scope: !15372)
!15448 = !DILocation(line: 1990, column: 13, scope: !15372)
!15449 = !DILocation(line: 1990, column: 22, scope: !15372)
!15450 = !DILocation(line: 1993, column: 8, scope: !15372)
!15451 = !DILocation(line: 1993, column: 13, scope: !15372)
!15452 = !DILocation(line: 1993, column: 26, scope: !15372)
!15453 = !DILocation(line: 1996, column: 8, scope: !15372)
!15454 = !DILocation(line: 1996, column: 20, scope: !15372)
!15455 = !DILocation(line: 1999, column: 8, scope: !15372)
!15456 = !DILocation(line: 1999, column: 24, scope: !15372)
!15457 = !DILocation(line: 2000, column: 8, scope: !15372)
!15458 = !DILocation(line: 2000, column: 19, scope: !15372)
!15459 = !DILocation(line: 2001, column: 8, scope: !15372)
!15460 = !DILocation(line: 2001, column: 24, scope: !15372)
!15461 = !DILocation(line: 2002, column: 8, scope: !15372)
!15462 = !DILocation(line: 2002, column: 23, scope: !15372)
!15463 = !DILocation(line: 2004, column: 5, scope: !15372)
!15464 = distinct !DISubprogram(name: "SF_DAL_MountDevice", scope: !2290, file: !2290, line: 2160, type: !2753, scopeLine: 2161, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2289, retainedNodes: !15465)
!15465 = !{!15466, !15467, !15468, !15481, !15482, !15483}
!15466 = !DILocalVariable(name: "MTDData", arg: 1, scope: !15464, file: !2290, line: 2160, type: !88)
!15467 = !DILocalVariable(name: "Info", arg: 2, scope: !15464, file: !2290, line: 2160, type: !88)
!15468 = !DILocalVariable(name: "FlashInfo", scope: !15464, file: !2290, line: 2162, type: !15469)
!15469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15470, size: 32)
!15470 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_FlashInfo", file: !2486, line: 99, baseType: !15471)
!15471 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2486, line: 90, size: 928, elements: !15472)
!15472 = !{!15473, !15474, !15475, !15476, !15477, !15478, !15479, !15480}
!15473 = !DIDerivedType(tag: DW_TAG_member, name: "TotalBlocks", scope: !15471, file: !2486, line: 91, baseType: !61, size: 32)
!15474 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !15471, file: !2486, line: 92, baseType: !2809, size: 256, offset: 32)
!15475 = !DIDerivedType(tag: DW_TAG_member, name: "AvailInRegion", scope: !15471, file: !2486, line: 93, baseType: !2809, size: 256, offset: 288)
!15476 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !15471, file: !2486, line: 94, baseType: !2809, size: 256, offset: 544)
!15477 = !DIDerivedType(tag: DW_TAG_member, name: "ActualRegionNum", scope: !15471, file: !2486, line: 95, baseType: !61, size: 32, offset: 800)
!15478 = !DIDerivedType(tag: DW_TAG_member, name: "PageSize", scope: !15471, file: !2486, line: 96, baseType: !2801, size: 16, offset: 832)
!15479 = !DIDerivedType(tag: DW_TAG_member, name: "baseUnlockBlock", scope: !15471, file: !2486, line: 97, baseType: !61, size: 32, offset: 864)
!15480 = !DIDerivedType(tag: DW_TAG_member, name: "endUnlockBlock", scope: !15471, file: !2486, line: 98, baseType: !61, size: 32, offset: 896)
!15481 = !DILocalVariable(name: "D", scope: !15464, file: !2290, line: 2163, type: !2460)
!15482 = !DILocalVariable(name: "i", scope: !15464, file: !2290, line: 2164, type: !61)
!15483 = !DILocalVariable(name: "result", scope: !15464, file: !2290, line: 2166, type: !1349)
!15484 = !DILocation(line: 0, scope: !15464)
!15485 = !DILocation(line: 2163, column: 37, scope: !15464)
!15486 = !DILocation(line: 2202, column: 16, scope: !15464)
!15487 = !DILocation(line: 2202, column: 28, scope: !15464)
!15488 = !DILocation(line: 2204, column: 15, scope: !15464)
!15489 = !DILocation(line: 2204, column: 29, scope: !15464)
!15490 = !DILocation(line: 2204, column: 39, scope: !15464)
!15491 = !DILocation(line: 2204, column: 5, scope: !15464)
!15492 = !DILocation(line: 2205, column: 9, scope: !15493)
!15493 = distinct !DILexicalBlock(scope: !15464, file: !2290, line: 2204, column: 45)
!15494 = !DILocation(line: 2205, column: 33, scope: !15493)
!15495 = !DILocation(line: 2206, column: 41, scope: !15493)
!15496 = !DILocation(line: 2206, column: 55, scope: !15493)
!15497 = !DILocation(line: 2206, column: 9, scope: !15493)
!15498 = !DILocation(line: 2206, column: 36, scope: !15493)
!15499 = !DILocation(line: 2207, column: 38, scope: !15493)
!15500 = !DILocation(line: 2207, column: 52, scope: !15493)
!15501 = !DILocation(line: 2207, column: 32, scope: !15493)
!15502 = !DILocation(line: 2209, column: 10, scope: !15493)
!15503 = distinct !{!15503, !15491, !15504}
!15504 = !DILocation(line: 2210, column: 5, scope: !15464)
!15505 = !DILocation(line: 2212, column: 16, scope: !15464)
!15506 = !DILocation(line: 2212, column: 32, scope: !15464)
!15507 = !DILocation(line: 2213, column: 16, scope: !15464)
!15508 = !DILocation(line: 2213, column: 25, scope: !15464)
!15509 = !DILocation(line: 2236, column: 5, scope: !15464)
!15510 = !DILocation(line: 2238, column: 5, scope: !15464)
!15511 = !DILocation(line: 2239, column: 18, scope: !15512)
!15512 = distinct !DILexicalBlock(scope: !15464, file: !2290, line: 2238, column: 10)
!15513 = !DILocation(line: 2240, column: 34, scope: !15464)
!15514 = !DILocation(line: 2240, column: 5, scope: !15512)
!15515 = distinct !{!15515, !15510, !15516}
!15516 = !DILocation(line: 2240, column: 43, scope: !15464)
!15517 = !DILocation(line: 2259, column: 5, scope: !15464)
!15518 = distinct !DISubprogram(name: "SF_DAL_ShutDown", scope: !2290, file: !2290, line: 2275, type: !2559, scopeLine: 2276, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2289, retainedNodes: !15519)
!15519 = !{!15520, !15521, !15522, !15523}
!15520 = !DILocalVariable(name: "MTDData", arg: 1, scope: !15518, file: !2290, line: 2275, type: !88)
!15521 = !DILocalVariable(name: "D", scope: !15518, file: !2290, line: 2278, type: !2460)
!15522 = !DILocalVariable(name: "status", scope: !15518, file: !2290, line: 2279, type: !2512)
!15523 = !DILocalVariable(name: "saved_mask", scope: !15518, file: !2290, line: 2280, type: !61)
!15524 = !DILocation(line: 0, scope: !15518)
!15525 = !DILocation(line: 2278, column: 33, scope: !15518)
!15526 = !DILocation(line: 2286, column: 5, scope: !15518)
!15527 = !DILocation(line: 2293, column: 9, scope: !15518)
!15528 = !DILocation(line: 2294, column: 26, scope: !15529)
!15529 = distinct !DILexicalBlock(scope: !15518, file: !2290, line: 2293, column: 19)
!15530 = !DILocation(line: 2297, column: 17, scope: !15531)
!15531 = distinct !DILexicalBlock(scope: !15529, file: !2290, line: 2297, column: 17)
!15532 = !DILocation(line: 2297, column: 17, scope: !15529)
!15533 = !DILocation(line: 2298, column: 17, scope: !15534)
!15534 = distinct !DILexicalBlock(scope: !15531, file: !2290, line: 2297, column: 36)
!15535 = !DILocation(line: 2299, column: 37, scope: !15534)
!15536 = !DILocation(line: 2300, column: 13, scope: !15534)
!15537 = !DILocation(line: 2303, column: 50, scope: !15529)
!15538 = !DILocation(line: 2303, column: 55, scope: !15529)
!15539 = !DILocation(line: 2303, column: 22, scope: !15529)
!15540 = !DILocation(line: 2306, column: 35, scope: !15541)
!15541 = distinct !DILexicalBlock(scope: !15529, file: !2290, line: 2306, column: 17)
!15542 = !DILocation(line: 2306, column: 32, scope: !15541)
!15543 = !DILocation(line: 2306, column: 30, scope: !15541)
!15544 = !DILocation(line: 2306, column: 19, scope: !15541)
!15545 = !DILocation(line: 2306, column: 17, scope: !15529)
!15546 = !DILocation(line: 2307, column: 17, scope: !15547)
!15547 = distinct !DILexicalBlock(scope: !15541, file: !2290, line: 2306, column: 59)
!15548 = !DILocation(line: 2308, column: 17, scope: !15547)
!15549 = !DILocation(line: 2315, column: 12, scope: !15518)
!15550 = !DILocation(line: 2315, column: 21, scope: !15518)
!15551 = !DILocation(line: 2325, column: 9, scope: !15518)
!15552 = !DILocation(line: 2326, column: 5, scope: !15518)
!15553 = !DILocation(line: 2311, column: 17, scope: !15554)
!15554 = distinct !DILexicalBlock(scope: !15541, file: !2290, line: 2310, column: 20)
!15555 = distinct !{!15555, !15527, !15556}
!15556 = !DILocation(line: 2313, column: 9, scope: !15518)
!15557 = distinct !DISubprogram(name: "SF_DAL_EraseBlock", scope: !2290, file: !2290, line: 2819, type: !2762, scopeLine: 2820, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2289, retainedNodes: !15558)
!15558 = !{!15559, !15560, !15561, !15562, !15563, !15564, !15565, !15566, !15567, !15568, !15571, !15572}
!15559 = !DILocalVariable(name: "MTDData", arg: 1, scope: !15557, file: !2290, line: 2819, type: !88)
!15560 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !15557, file: !2290, line: 2819, type: !61)
!15561 = !DILocalVariable(name: "result", scope: !15557, file: !2290, line: 2821, type: !1349)
!15562 = !DILocalVariable(name: "blocksize", scope: !15557, file: !2290, line: 2822, type: !61)
!15563 = !DILocalVariable(name: "eraseunit", scope: !15557, file: !2290, line: 2823, type: !61)
!15564 = !DILocalVariable(name: "eraseaddr", scope: !15557, file: !2290, line: 2824, type: !61)
!15565 = !DILocalVariable(name: "iteration", scope: !15557, file: !2290, line: 2825, type: !61)
!15566 = !DILocalVariable(name: "D", scope: !15557, file: !2290, line: 2826, type: !2460)
!15567 = !DILocalVariable(name: "erase_block", scope: !15557, file: !2290, line: 2827, type: !61)
!15568 = !DILocalVariable(name: "a", scope: !15569, file: !2290, line: 2853, type: !61)
!15569 = distinct !DILexicalBlock(scope: !15570, file: !2290, line: 2852, column: 56)
!15570 = distinct !DILexicalBlock(scope: !15557, file: !2290, line: 2852, column: 9)
!15571 = !DILocalVariable(name: "b", scope: !15569, file: !2290, line: 2853, type: !61)
!15572 = !DILocalVariable(name: "c", scope: !15569, file: !2290, line: 2853, type: !61)
!15573 = !DILocation(line: 0, scope: !15557)
!15574 = !DILocation(line: 2826, column: 30, scope: !15557)
!15575 = !DILocation(line: 2829, column: 5, scope: !15576)
!15576 = distinct !DILexicalBlock(scope: !15577, file: !2290, line: 2829, column: 5)
!15577 = distinct !DILexicalBlock(scope: !15557, file: !2290, line: 2829, column: 5)
!15578 = !DILocation(line: 2829, column: 5, scope: !15577)
!15579 = !DILocation(line: 2829, column: 5, scope: !15580)
!15580 = distinct !DILexicalBlock(scope: !15576, file: !2290, line: 2829, column: 5)
!15581 = !DILocation(line: 2836, column: 9, scope: !15557)
!15582 = !DILocation(line: 2838, column: 8, scope: !15557)
!15583 = !DILocation(line: 2838, column: 21, scope: !15557)
!15584 = !DILocation(line: 2847, column: 5, scope: !15557)
!15585 = !DILocation(line: 2848, column: 18, scope: !15586)
!15586 = distinct !DILexicalBlock(scope: !15557, file: !2290, line: 2847, column: 10)
!15587 = !DILocation(line: 2850, column: 34, scope: !15557)
!15588 = !DILocation(line: 2850, column: 5, scope: !15586)
!15589 = distinct !{!15589, !15584, !15590}
!15590 = !DILocation(line: 2850, column: 43, scope: !15557)
!15591 = !DILocation(line: 2839, column: 32, scope: !15557)
!15592 = !DILocation(line: 2861, column: 53, scope: !15569)
!15593 = !DILocation(line: 2861, column: 40, scope: !15569)
!15594 = !DILocation(line: 2861, column: 25, scope: !15569)
!15595 = !DILocation(line: 2874, column: 16, scope: !15569)
!15596 = !DILocation(line: 2874, column: 13, scope: !15569)
!15597 = !DILocation(line: 0, scope: !15569)
!15598 = !DILocation(line: 2875, column: 24, scope: !15569)
!15599 = !DILocation(line: 2877, column: 21, scope: !15600)
!15600 = distinct !DILexicalBlock(scope: !15569, file: !2290, line: 2877, column: 13)
!15601 = !DILocation(line: 2877, column: 13, scope: !15569)
!15602 = !DILocation(line: 2879, column: 23, scope: !15603)
!15603 = distinct !DILexicalBlock(scope: !15604, file: !2290, line: 2879, column: 21)
!15604 = distinct !DILexicalBlock(scope: !15605, file: !2290, line: 2878, column: 120)
!15605 = distinct !DILexicalBlock(scope: !15606, file: !2290, line: 2878, column: 13)
!15606 = distinct !DILexicalBlock(scope: !15607, file: !2290, line: 2878, column: 13)
!15607 = distinct !DILexicalBlock(scope: !15600, file: !2290, line: 2877, column: 27)
!15608 = !DILocation(line: 2879, column: 21, scope: !15604)
!15609 = !DILocation(line: 2878, column: 48, scope: !15605)
!15610 = !DILocation(line: 2878, column: 83, scope: !15605)
!15611 = !DILocation(line: 2878, column: 113, scope: !15605)
!15612 = !DILocation(line: 2878, column: 35, scope: !15605)
!15613 = !DILocation(line: 2878, column: 13, scope: !15606)
!15614 = distinct !{!15614, !15613, !15615}
!15615 = !DILocation(line: 2883, column: 13, scope: !15606)
!15616 = !DILocation(line: 2863, column: 19, scope: !15569)
!15617 = !DILocation(line: 2825, column: 24, scope: !15557)
!15618 = !DILocation(line: 2886, column: 9, scope: !15569)
!15619 = !DILocation(line: 2888, column: 36, scope: !15620)
!15620 = distinct !DILexicalBlock(scope: !15569, file: !2290, line: 2886, column: 31)
!15621 = !DILocation(line: 2888, column: 41, scope: !15620)
!15622 = !DILocation(line: 2889, column: 17, scope: !15620)
!15623 = !DILocation(line: 2891, column: 36, scope: !15620)
!15624 = !DILocation(line: 2891, column: 41, scope: !15620)
!15625 = !DILocation(line: 2892, column: 17, scope: !15620)
!15626 = !DILocation(line: 2894, column: 36, scope: !15620)
!15627 = !DILocation(line: 2894, column: 41, scope: !15620)
!15628 = !DILocation(line: 2895, column: 17, scope: !15620)
!15629 = !DILocation(line: 2897, column: 17, scope: !15630)
!15630 = distinct !DILexicalBlock(scope: !15631, file: !2290, line: 2897, column: 17)
!15631 = distinct !DILexicalBlock(scope: !15632, file: !2290, line: 2897, column: 17)
!15632 = distinct !DILexicalBlock(scope: !15620, file: !2290, line: 2897, column: 17)
!15633 = !DILocation(line: 0, scope: !15620)
!15634 = !DILocation(line: 2906, column: 5, scope: !15557)
!15635 = !DILocation(line: 2908, column: 32, scope: !15636)
!15636 = distinct !DILexicalBlock(scope: !15557, file: !2290, line: 2906, column: 27)
!15637 = !DILocation(line: 2908, column: 37, scope: !15636)
!15638 = !DILocation(line: 2909, column: 13, scope: !15636)
!15639 = !DILocation(line: 2911, column: 32, scope: !15636)
!15640 = !DILocation(line: 2911, column: 37, scope: !15636)
!15641 = !DILocation(line: 2912, column: 13, scope: !15636)
!15642 = !DILocation(line: 2914, column: 32, scope: !15636)
!15643 = !DILocation(line: 2914, column: 37, scope: !15636)
!15644 = !DILocation(line: 2915, column: 13, scope: !15636)
!15645 = !DILocation(line: 0, scope: !15636)
!15646 = !DILocation(line: 2921, column: 56, scope: !15647)
!15647 = distinct !DILexicalBlock(scope: !15648, file: !2290, line: 2921, column: 5)
!15648 = distinct !DILexicalBlock(scope: !15557, file: !2290, line: 2921, column: 5)
!15649 = !DILocation(line: 2921, column: 5, scope: !15648)
!15650 = !DILocation(line: 2921, column: 35, scope: !15648)
!15651 = !DILocation(line: 2921, column: 22, scope: !15648)
!15652 = !DILocation(line: 2922, column: 9, scope: !15653)
!15653 = distinct !DILexicalBlock(scope: !15647, file: !2290, line: 2921, column: 99)
!15654 = !DILocation(line: 2929, column: 9, scope: !15653)
!15655 = !DILocation(line: 2938, column: 26, scope: !15656)
!15656 = distinct !DILexicalBlock(scope: !15653, file: !2290, line: 2929, column: 26)
!15657 = !DILocation(line: 2939, column: 37, scope: !15658)
!15658 = distinct !DILexicalBlock(scope: !15656, file: !2290, line: 2939, column: 17)
!15659 = !DILocation(line: 2939, column: 17, scope: !15656)
!15660 = distinct !{!15660, !15654, !15661}
!15661 = !DILocation(line: 2943, column: 9, scope: !15653)
!15662 = !DILocation(line: 2921, column: 71, scope: !15647)
!15663 = !DILocation(line: 2921, column: 85, scope: !15647)
!15664 = distinct !{!15664, !15649, !15665}
!15665 = !DILocation(line: 2983, column: 5, scope: !15648)
!15666 = !DILocation(line: 2985, column: 21, scope: !15557)
!15667 = !DILocation(line: 2992, column: 9, scope: !15557)
!15668 = !DILocation(line: 3000, column: 5, scope: !15557)
!15669 = distinct !DISubprogram(name: "SF_DAL_ProgramData", scope: !2290, file: !2290, line: 2533, type: !2766, scopeLine: 2534, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2289, retainedNodes: !15670)
!15670 = !{!15671, !15672, !15673, !15674, !15675, !15676, !15677, !15678, !15679, !15680, !15681, !15682, !15683, !15684}
!15671 = !DILocalVariable(name: "MTDData", arg: 1, scope: !15669, file: !2290, line: 2533, type: !88)
!15672 = !DILocalVariable(name: "Address", arg: 2, scope: !15669, file: !2290, line: 2533, type: !88)
!15673 = !DILocalVariable(name: "Data", arg: 3, scope: !15669, file: !2290, line: 2533, type: !88)
!15674 = !DILocalVariable(name: "Length", arg: 4, scope: !15669, file: !2290, line: 2533, type: !61)
!15675 = !DILocalVariable(name: "D", scope: !15669, file: !2290, line: 2535, type: !2460)
!15676 = !DILocalVariable(name: "savedMask", scope: !15669, file: !2290, line: 2536, type: !61)
!15677 = !DILocalVariable(name: "address", scope: !15669, file: !2290, line: 2537, type: !61)
!15678 = !DILocalVariable(name: "p_data", scope: !15669, file: !2290, line: 2538, type: !1055)
!15679 = !DILocalVariable(name: "p_data_first", scope: !15669, file: !2290, line: 2539, type: !1055)
!15680 = !DILocalVariable(name: "result", scope: !15669, file: !2290, line: 2540, type: !1349)
!15681 = !DILocalVariable(name: "written", scope: !15669, file: !2290, line: 2541, type: !61)
!15682 = !DILocalVariable(name: "length", scope: !15669, file: !2290, line: 2542, type: !61)
!15683 = !DILocalVariable(name: "cmd1", scope: !15669, file: !2290, line: 2543, type: !61)
!15684 = !DILocalVariable(name: "j", scope: !15685, file: !2290, line: 2599, type: !61)
!15685 = distinct !DILexicalBlock(scope: !15686, file: !2290, line: 2597, column: 61)
!15686 = distinct !DILexicalBlock(scope: !15687, file: !2290, line: 2597, column: 13)
!15687 = distinct !DILexicalBlock(scope: !15669, file: !2290, line: 2583, column: 25)
!15688 = !DILocation(line: 0, scope: !15669)
!15689 = !DILocation(line: 2535, column: 26, scope: !15669)
!15690 = !DILocation(line: 2537, column: 37, scope: !15669)
!15691 = !DILocation(line: 2538, column: 5, scope: !15669)
!15692 = !DILocation(line: 2538, column: 19, scope: !15669)
!15693 = !DILocation(line: 2542, column: 5, scope: !15669)
!15694 = !DILocation(line: 2545, column: 5, scope: !15695)
!15695 = distinct !DILexicalBlock(scope: !15696, file: !2290, line: 2545, column: 5)
!15696 = distinct !DILexicalBlock(scope: !15669, file: !2290, line: 2545, column: 5)
!15697 = !DILocation(line: 2545, column: 5, scope: !15696)
!15698 = !DILocation(line: 2545, column: 5, scope: !15699)
!15699 = distinct !DILexicalBlock(scope: !15695, file: !2290, line: 2545, column: 5)
!15700 = !DILocation(line: 2567, column: 9, scope: !15669)
!15701 = !DILocation(line: 2569, column: 8, scope: !15669)
!15702 = !DILocation(line: 2569, column: 21, scope: !15669)
!15703 = !DILocation(line: 2576, column: 5, scope: !15669)
!15704 = !DILocation(line: 2577, column: 18, scope: !15705)
!15705 = distinct !DILexicalBlock(scope: !15669, file: !2290, line: 2576, column: 10)
!15706 = !DILocation(line: 2579, column: 34, scope: !15669)
!15707 = !DILocation(line: 2579, column: 5, scope: !15705)
!15708 = distinct !{!15708, !15703, !15709}
!15709 = !DILocation(line: 2579, column: 43, scope: !15669)
!15710 = !DILocation(line: 2583, column: 14, scope: !15669)
!15711 = !DILocation(line: 2583, column: 5, scope: !15669)
!15712 = !DILocation(line: 2584, column: 27, scope: !15687)
!15713 = !DILocation(line: 2592, column: 18, scope: !15687)
!15714 = !DILocation(line: 2592, column: 35, scope: !15687)
!15715 = !DILocation(line: 2592, column: 74, scope: !15687)
!15716 = !DILocation(line: 2592, column: 50, scope: !15687)
!15717 = !DILocation(line: 2592, column: 39, scope: !15687)
!15718 = !DILocation(line: 2595, column: 37, scope: !15687)
!15719 = !DILocation(line: 2595, column: 29, scope: !15687)
!15720 = !DILocation(line: 2595, column: 16, scope: !15687)
!15721 = !DILocation(line: 2597, column: 13, scope: !15686)
!15722 = !DILocation(line: 2597, column: 30, scope: !15686)
!15723 = !DILocation(line: 2597, column: 13, scope: !15687)
!15724 = !DILocation(line: 0, scope: !15685)
!15725 = !DILocation(line: 2600, column: 27, scope: !15726)
!15726 = distinct !DILexicalBlock(scope: !15727, file: !2290, line: 2600, column: 13)
!15727 = distinct !DILexicalBlock(scope: !15685, file: !2290, line: 2600, column: 13)
!15728 = !DILocation(line: 2600, column: 13, scope: !15727)
!15729 = !DILocation(line: 2601, column: 38, scope: !15730)
!15730 = distinct !DILexicalBlock(scope: !15726, file: !2290, line: 2600, column: 42)
!15731 = !DILocation(line: 2601, column: 17, scope: !15730)
!15732 = !DILocation(line: 2601, column: 36, scope: !15730)
!15733 = !DILocation(line: 2600, column: 38, scope: !15726)
!15734 = distinct !{!15734, !15728, !15735}
!15735 = !DILocation(line: 2602, column: 13, scope: !15727)
!15736 = !DILocation(line: 0, scope: !15687)
!15737 = !DILocation(line: 2606, column: 18, scope: !15738)
!15738 = distinct !DILexicalBlock(scope: !15687, file: !2290, line: 2606, column: 13)
!15739 = !DILocation(line: 2606, column: 29, scope: !15738)
!15740 = !DILocation(line: 2606, column: 13, scope: !15687)
!15741 = !DILocation(line: 2607, column: 13, scope: !15742)
!15742 = distinct !DILexicalBlock(scope: !15738, file: !2290, line: 2606, column: 55)
!15743 = !DILocation(line: 2608, column: 9, scope: !15742)
!15744 = !DILocation(line: 2613, column: 16, scope: !15745)
!15745 = distinct !DILexicalBlock(scope: !15687, file: !2290, line: 2613, column: 13)
!15746 = !DILocation(line: 2613, column: 29, scope: !15745)
!15747 = !DILocation(line: 0, scope: !15745)
!15748 = !DILocation(line: 2613, column: 13, scope: !15687)
!15749 = !DILocation(line: 2614, column: 20, scope: !15750)
!15750 = distinct !DILexicalBlock(scope: !15745, file: !2290, line: 2613, column: 35)
!15751 = !DILocation(line: 2615, column: 32, scope: !15750)
!15752 = !DILocation(line: 2615, column: 40, scope: !15750)
!15753 = !DILocation(line: 2615, column: 13, scope: !15750)
!15754 = !DILocation(line: 2616, column: 9, scope: !15750)
!15755 = !DILocation(line: 2619, column: 20, scope: !15756)
!15756 = distinct !DILexicalBlock(scope: !15745, file: !2290, line: 2618, column: 9)
!15757 = !DILocation(line: 2620, column: 32, scope: !15756)
!15758 = !DILocation(line: 2620, column: 40, scope: !15756)
!15759 = !DILocation(line: 2620, column: 13, scope: !15756)
!15760 = !DILocation(line: 2626, column: 21, scope: !15687)
!15761 = !DILocation(line: 2633, column: 37, scope: !15687)
!15762 = !DILocation(line: 2634, column: 45, scope: !15687)
!15763 = !DILocation(line: 2634, column: 42, scope: !15687)
!15764 = !DILocation(line: 2634, column: 40, scope: !15687)
!15765 = !DILocation(line: 2634, column: 58, scope: !15687)
!15766 = !DILocation(line: 2634, column: 29, scope: !15687)
!15767 = !DILocation(line: 2635, column: 28, scope: !15687)
!15768 = !DILocation(line: 2636, column: 9, scope: !15687)
!15769 = !DILocation(line: 2638, column: 26, scope: !15687)
!15770 = !DILocation(line: 2638, column: 9, scope: !15687)
!15771 = !DILocation(line: 2639, column: 29, scope: !15687)
!15772 = !DILocation(line: 2639, column: 9, scope: !15687)
!15773 = !DILocation(line: 2662, column: 9, scope: !15687)
!15774 = !DILocation(line: 2670, column: 9, scope: !15687)
!15775 = !DILocation(line: 2676, column: 89, scope: !15776)
!15776 = distinct !DILexicalBlock(scope: !15687, file: !2290, line: 2670, column: 13)
!15777 = !DILocation(line: 2676, column: 26, scope: !15776)
!15778 = !DILocation(line: 2678, column: 36, scope: !15687)
!15779 = !DILocation(line: 2678, column: 9, scope: !15776)
!15780 = distinct !{!15780, !15774, !15781}
!15781 = !DILocation(line: 2678, column: 45, scope: !15687)
!15782 = !DILocation(line: 2718, column: 19, scope: !15687)
!15783 = !DILocation(line: 2718, column: 16, scope: !15687)
!15784 = !DILocation(line: 2719, column: 16, scope: !15687)
!15785 = !DILocation(line: 2722, column: 31, scope: !15786)
!15786 = distinct !DILexicalBlock(scope: !15687, file: !2290, line: 2722, column: 13)
!15787 = !DILocation(line: 2722, column: 13, scope: !15687)
!15788 = distinct !{!15788, !15711, !15789}
!15789 = !DILocation(line: 2725, column: 5, scope: !15669)
!15790 = !DILocation(line: 2748, column: 21, scope: !15669)
!15791 = !DILocation(line: 2755, column: 9, scope: !15669)
!15792 = !DILocation(line: 2757, column: 16, scope: !15793)
!15793 = distinct !DILexicalBlock(scope: !15669, file: !2290, line: 2757, column: 9)
!15794 = !DILocation(line: 2761, column: 1, scope: !15669)
!15795 = distinct !DISubprogram(name: "SF_DAL_NonBlockEraseBlock", scope: !2290, file: !2290, line: 3019, type: !2762, scopeLine: 3020, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2289, retainedNodes: !15796)
!15796 = !{!15797, !15798}
!15797 = !DILocalVariable(name: "MTDData", arg: 1, scope: !15795, file: !2290, line: 3019, type: !88)
!15798 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !15795, file: !2290, line: 3019, type: !61)
!15799 = !DILocation(line: 0, scope: !15795)
!15800 = !DILocation(line: 3021, column: 5, scope: !15795)
!15801 = distinct !DISubprogram(name: "SF_DAL_CheckDeviceReady", scope: !2290, file: !2290, line: 3124, type: !2771, scopeLine: 3125, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2289, retainedNodes: !15802)
!15802 = !{!15803, !15804, !15805, !15806, !15807, !15808, !15809, !15810}
!15803 = !DILocalVariable(name: "MTDData", arg: 1, scope: !15801, file: !2290, line: 3124, type: !88)
!15804 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !15801, file: !2290, line: 3124, type: !61)
!15805 = !DILocalVariable(name: "result", scope: !15801, file: !2290, line: 3126, type: !1349)
!15806 = !DILocalVariable(name: "savedMask", scope: !15801, file: !2290, line: 3127, type: !61)
!15807 = !DILocalVariable(name: "D", scope: !15801, file: !2290, line: 3128, type: !2460)
!15808 = !DILocalVariable(name: "status_busy", scope: !15801, file: !2290, line: 3129, type: !2512)
!15809 = !DILocalVariable(name: "status_suspend", scope: !15801, file: !2290, line: 3129, type: !2512)
!15810 = !DILocalVariable(name: "check_status", scope: !15811, file: !2290, line: 3141, type: !2512)
!15811 = distinct !DILexicalBlock(scope: !15812, file: !2290, line: 3140, column: 56)
!15812 = distinct !DILexicalBlock(scope: !15801, file: !2290, line: 3140, column: 9)
!15813 = !DILocation(line: 0, scope: !15801)
!15814 = !DILocation(line: 3128, column: 47, scope: !15801)
!15815 = !DILocation(line: 3131, column: 5, scope: !15816)
!15816 = distinct !DILexicalBlock(scope: !15817, file: !2290, line: 3131, column: 5)
!15817 = distinct !DILexicalBlock(scope: !15801, file: !2290, line: 3131, column: 5)
!15818 = !DILocation(line: 3131, column: 5, scope: !15817)
!15819 = !DILocation(line: 3131, column: 5, scope: !15820)
!15820 = distinct !DILexicalBlock(scope: !15816, file: !2290, line: 3131, column: 5)
!15821 = !DILocation(line: 3134, column: 50, scope: !15801)
!15822 = !DILocation(line: 3134, column: 55, scope: !15801)
!15823 = !DILocation(line: 3134, column: 22, scope: !15801)
!15824 = !DILocation(line: 3135, column: 50, scope: !15801)
!15825 = !DILocation(line: 3135, column: 55, scope: !15801)
!15826 = !DILocation(line: 3135, column: 22, scope: !15801)
!15827 = !DILocation(line: 3138, column: 17, scope: !15801)
!15828 = !DILocation(line: 3140, column: 32, scope: !15812)
!15829 = !DILocation(line: 3140, column: 29, scope: !15812)
!15830 = !DILocation(line: 3140, column: 27, scope: !15812)
!15831 = !DILocation(line: 3140, column: 11, scope: !15812)
!15832 = !DILocation(line: 3140, column: 9, scope: !15801)
!15833 = !DILocation(line: 3141, column: 34, scope: !15811)
!15834 = !DILocation(line: 3141, column: 60, scope: !15811)
!15835 = !DILocation(line: 3141, column: 58, scope: !15811)
!15836 = !DILocation(line: 0, scope: !15811)
!15837 = !DILocation(line: 3144, column: 37, scope: !15838)
!15838 = distinct !DILexicalBlock(scope: !15811, file: !2290, line: 3144, column: 13)
!15839 = !DILocation(line: 3144, column: 35, scope: !15838)
!15840 = !DILocation(line: 3144, column: 16, scope: !15838)
!15841 = !DILocation(line: 3144, column: 52, scope: !15838)
!15842 = !DILocation(line: 3145, column: 21, scope: !15838)
!15843 = !DILocation(line: 3145, column: 38, scope: !15838)
!15844 = !DILocation(line: 3147, column: 13, scope: !15845)
!15845 = distinct !DILexicalBlock(scope: !15846, file: !2290, line: 3147, column: 13)
!15846 = distinct !DILexicalBlock(scope: !15847, file: !2290, line: 3147, column: 13)
!15847 = distinct !DILexicalBlock(scope: !15838, file: !2290, line: 3145, column: 61)
!15848 = !DILocation(line: 3147, column: 13, scope: !15846)
!15849 = !DILocation(line: 3147, column: 13, scope: !15850)
!15850 = distinct !DILexicalBlock(scope: !15845, file: !2290, line: 3147, column: 13)
!15851 = !DILocation(line: 3150, column: 13, scope: !15847)
!15852 = !DILocation(line: 3151, column: 33, scope: !15847)
!15853 = !DILocation(line: 3153, column: 9, scope: !15847)
!15854 = !DILocation(line: 3155, column: 20, scope: !15855)
!15855 = distinct !DILexicalBlock(scope: !15856, file: !2290, line: 3155, column: 17)
!15856 = distinct !DILexicalBlock(scope: !15838, file: !2290, line: 3153, column: 16)
!15857 = !DILocation(line: 3155, column: 31, scope: !15855)
!15858 = !DILocation(line: 3155, column: 17, scope: !15856)
!15859 = !DILocation(line: 3156, column: 36, scope: !15860)
!15860 = distinct !DILexicalBlock(scope: !15855, file: !2290, line: 3155, column: 54)
!15861 = !DILocation(line: 3156, column: 17, scope: !15860)
!15862 = !DILocation(line: 3157, column: 36, scope: !15860)
!15863 = !DILocation(line: 3157, column: 17, scope: !15860)
!15864 = !DILocation(line: 3158, column: 13, scope: !15860)
!15865 = !DILocation(line: 3191, column: 5, scope: !15801)
!15866 = !DILocation(line: 3193, column: 9, scope: !15801)
!15867 = !DILocation(line: 3160, column: 13, scope: !15856)
!15868 = !DILocation(line: 3173, column: 13, scope: !15856)
!15869 = !DILocation(line: 3194, column: 18, scope: !15870)
!15870 = distinct !DILexicalBlock(scope: !15871, file: !2290, line: 3193, column: 32)
!15871 = distinct !DILexicalBlock(scope: !15801, file: !2290, line: 3193, column: 9)
!15872 = !DILocation(line: 3195, column: 5, scope: !15870)
!15873 = !DILocation(line: 3197, column: 5, scope: !15801)
!15874 = distinct !DISubprogram(name: "SF_DAL_SuspendErase", scope: !2290, file: !2290, line: 3225, type: !2762, scopeLine: 3226, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2289, retainedNodes: !15875)
!15875 = !{!15876, !15877, !15878, !15879, !15880}
!15876 = !DILocalVariable(name: "MTDData", arg: 1, scope: !15874, file: !2290, line: 3225, type: !88)
!15877 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !15874, file: !2290, line: 3225, type: !61)
!15878 = !DILocalVariable(name: "D", scope: !15874, file: !2290, line: 3227, type: !2460)
!15879 = !DILocalVariable(name: "status", scope: !15874, file: !2290, line: 3228, type: !2512)
!15880 = !DILocalVariable(name: "savedMask", scope: !15874, file: !2290, line: 3229, type: !61)
!15881 = !DILocation(line: 0, scope: !15874)
!15882 = !DILocation(line: 3227, column: 30, scope: !15874)
!15883 = !DILocation(line: 3231, column: 17, scope: !15874)
!15884 = !DILocation(line: 3234, column: 5, scope: !15874)
!15885 = !DILocation(line: 3238, column: 5, scope: !15874)
!15886 = !DILocation(line: 3239, column: 46, scope: !15887)
!15887 = distinct !DILexicalBlock(scope: !15874, file: !2290, line: 3238, column: 15)
!15888 = !DILocation(line: 3239, column: 51, scope: !15887)
!15889 = !DILocation(line: 3239, column: 18, scope: !15887)
!15890 = !DILocation(line: 3241, column: 31, scope: !15891)
!15891 = distinct !DILexicalBlock(scope: !15887, file: !2290, line: 3241, column: 13)
!15892 = !DILocation(line: 3241, column: 28, scope: !15891)
!15893 = !DILocation(line: 3241, column: 26, scope: !15891)
!15894 = !DILocation(line: 3241, column: 15, scope: !15891)
!15895 = !DILocation(line: 3241, column: 13, scope: !15887)
!15896 = distinct !{!15896, !15885, !15897}
!15897 = !DILocation(line: 3244, column: 5, scope: !15874)
!15898 = !DILocation(line: 3246, column: 5, scope: !15874)
!15899 = !DILocation(line: 3248, column: 5, scope: !15874)
!15900 = !DILocation(line: 3250, column: 5, scope: !15874)
!15901 = distinct !DISubprogram(name: "SF_DAL_ResumeErase", scope: !2290, file: !2290, line: 3277, type: !2762, scopeLine: 3278, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2289, retainedNodes: !15902)
!15902 = !{!15903, !15904, !15905}
!15903 = !DILocalVariable(name: "MTDData", arg: 1, scope: !15901, file: !2290, line: 3277, type: !88)
!15904 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !15901, file: !2290, line: 3277, type: !61)
!15905 = !DILocalVariable(name: "D", scope: !15901, file: !2290, line: 3279, type: !2460)
!15906 = !DILocation(line: 0, scope: !15901)
!15907 = !DILocation(line: 3279, column: 29, scope: !15901)
!15908 = !DILocation(line: 3281, column: 5, scope: !15901)
!15909 = !DILocation(line: 3282, column: 5, scope: !15901)
!15910 = !DILocation(line: 3283, column: 5, scope: !15901)
!15911 = !DILocation(line: 3285, column: 5, scope: !15901)
!15912 = distinct !DISubprogram(name: "SF_DAL_LockEraseBlkAddr", scope: !2290, file: !2290, line: 3332, type: !2788, scopeLine: 3333, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2289, retainedNodes: !15913)
!15913 = !{!15914, !15915, !15916}
!15914 = !DILocalVariable(name: "MTDData", arg: 1, scope: !15912, file: !2290, line: 3332, type: !88)
!15915 = !DILocalVariable(name: "BlkAddr", arg: 2, scope: !15912, file: !2290, line: 3332, type: !88)
!15916 = !DILocalVariable(name: "ACTION", arg: 3, scope: !15912, file: !2290, line: 3332, type: !61)
!15917 = !DILocation(line: 0, scope: !15912)
!15918 = !DILocation(line: 3334, column: 5, scope: !15912)
!15919 = distinct !DISubprogram(name: "SF_DAL_IOCtrl", scope: !2290, file: !2290, line: 2350, type: !2796, scopeLine: 2351, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2289, retainedNodes: !15920)
!15920 = !{!15921, !15922, !15923, !15924}
!15921 = !DILocalVariable(name: "MTDData", arg: 1, scope: !15919, file: !2290, line: 2350, type: !88)
!15922 = !DILocalVariable(name: "CtrlAction", arg: 2, scope: !15919, file: !2290, line: 2350, type: !61)
!15923 = !DILocalVariable(name: "CtrlData", arg: 3, scope: !15919, file: !2290, line: 2350, type: !88)
!15924 = !DILocalVariable(name: "D", scope: !15919, file: !2290, line: 2352, type: !2460)
!15925 = !DILocation(line: 0, scope: !15919)
!15926 = !DILocation(line: 2353, column: 9, scope: !15919)
!15927 = !DILocation(line: 2354, column: 12, scope: !15928)
!15928 = distinct !DILexicalBlock(scope: !15929, file: !2290, line: 2353, column: 51)
!15929 = distinct !DILexicalBlock(scope: !15919, file: !2290, line: 2353, column: 9)
!15930 = !DILocation(line: 2354, column: 9, scope: !15928)
!15931 = !DILocation(line: 2355, column: 5, scope: !15928)
!15932 = !DILocation(line: 2356, column: 17, scope: !15933)
!15933 = distinct !DILexicalBlock(scope: !15934, file: !2290, line: 2356, column: 13)
!15934 = distinct !DILexicalBlock(scope: !15935, file: !2290, line: 2355, column: 71)
!15935 = distinct !DILexicalBlock(scope: !15929, file: !2290, line: 2355, column: 16)
!15936 = !DILocation(line: 2356, column: 14, scope: !15933)
!15937 = !DILocation(line: 2356, column: 28, scope: !15933)
!15938 = !DILocation(line: 2356, column: 49, scope: !15933)
!15939 = !DILocation(line: 2356, column: 56, scope: !15933)
!15940 = !DILocation(line: 2356, column: 70, scope: !15933)
!15941 = !DILocation(line: 2356, column: 80, scope: !15933)
!15942 = !DILocation(line: 2356, column: 13, scope: !15934)
!15943 = !DILocation(line: 2361, column: 9, scope: !15944)
!15944 = distinct !DILexicalBlock(scope: !15945, file: !2290, line: 2361, column: 9)
!15945 = distinct !DILexicalBlock(scope: !15946, file: !2290, line: 2361, column: 9)
!15946 = distinct !DILexicalBlock(scope: !15947, file: !2290, line: 2361, column: 9)
!15947 = distinct !DILexicalBlock(scope: !15935, file: !2290, line: 2359, column: 12)
!15948 = !DILocation(line: 2363, column: 5, scope: !15919)
!15949 = !DILocation(line: 2364, column: 1, scope: !15919)
!15950 = distinct !DISubprogram(name: "SF_DAL_FailCheck", scope: !2290, file: !2290, line: 3355, type: !2559, scopeLine: 3356, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2289, retainedNodes: !15951)
!15951 = !{!15952, !15953, !15954}
!15952 = !DILocalVariable(name: "MTDData", arg: 1, scope: !15950, file: !2290, line: 3355, type: !88)
!15953 = !DILocalVariable(name: "D", scope: !15950, file: !2290, line: 3357, type: !2460)
!15954 = !DILocalVariable(name: "status", scope: !15950, file: !2290, line: 3358, type: !1212)
!15955 = !DILocation(line: 0, scope: !15950)
!15956 = !DILocation(line: 3366, column: 12, scope: !15957)
!15957 = distinct !DILexicalBlock(scope: !15950, file: !2290, line: 3366, column: 9)
!15958 = !DILocation(line: 3366, column: 17, scope: !15957)
!15959 = !DILocation(line: 3366, column: 9, scope: !15957)
!15960 = !DILocation(line: 3366, column: 9, scope: !15950)
!15961 = !DILocation(line: 3357, column: 25, scope: !15950)
!15962 = !DILocation(line: 3367, column: 18, scope: !15963)
!15963 = distinct !DILexicalBlock(scope: !15957, file: !2290, line: 3366, column: 33)
!15964 = !DILocation(line: 3368, column: 25, scope: !15965)
!15965 = distinct !DILexicalBlock(scope: !15963, file: !2290, line: 3368, column: 13)
!15966 = !DILocation(line: 3368, column: 22, scope: !15965)
!15967 = !DILocation(line: 3368, column: 20, scope: !15965)
!15968 = !DILocation(line: 3368, column: 13, scope: !15963)
!15969 = !DILocation(line: 3373, column: 5, scope: !15950)
!15970 = !DILocation(line: 3374, column: 1, scope: !15950)
!15971 = distinct !DISubprogram(name: "SF_DAL_CheckReadyAndResume", scope: !2290, file: !2290, line: 3044, type: !15972, scopeLine: 3045, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2289, retainedNodes: !15974)
!15972 = !DISubroutineType(types: !15973)
!15973 = !{!1349, !88, !61, !159}
!15974 = !{!15975, !15976, !15977, !15978, !15979, !15980, !15981, !15982}
!15975 = !DILocalVariable(name: "MTDData", arg: 1, scope: !15971, file: !2290, line: 3044, type: !88)
!15976 = !DILocalVariable(name: "addr", arg: 2, scope: !15971, file: !2290, line: 3044, type: !61)
!15977 = !DILocalVariable(name: "data", arg: 3, scope: !15971, file: !2290, line: 3044, type: !159)
!15978 = !DILocalVariable(name: "savedMask", scope: !15971, file: !2290, line: 3046, type: !61)
!15979 = !DILocalVariable(name: "D", scope: !15971, file: !2290, line: 3047, type: !2460)
!15980 = !DILocalVariable(name: "result", scope: !15971, file: !2290, line: 3048, type: !1349)
!15981 = !DILocalVariable(name: "check_data", scope: !15971, file: !2290, line: 3049, type: !159)
!15982 = !DILocalVariable(name: "status_busy", scope: !15971, file: !2290, line: 3050, type: !1212)
!15983 = !DILocation(line: 0, scope: !15971)
!15984 = !DILocation(line: 3047, column: 43, scope: !15971)
!15985 = !DILocation(line: 3053, column: 47, scope: !15971)
!15986 = !DILocation(line: 3053, column: 52, scope: !15971)
!15987 = !DILocation(line: 3053, column: 19, scope: !15971)
!15988 = !DILocation(line: 3056, column: 9, scope: !15989)
!15989 = distinct !DILexicalBlock(scope: !15971, file: !2290, line: 3056, column: 9)
!15990 = !DILocation(line: 3056, column: 9, scope: !15971)
!15991 = !DILocation(line: 3058, column: 9, scope: !15992)
!15992 = distinct !DILexicalBlock(scope: !15993, file: !2290, line: 3058, column: 9)
!15993 = distinct !DILexicalBlock(scope: !15994, file: !2290, line: 3058, column: 9)
!15994 = distinct !DILexicalBlock(scope: !15989, file: !2290, line: 3056, column: 28)
!15995 = !DILocation(line: 3058, column: 9, scope: !15993)
!15996 = !DILocation(line: 3058, column: 9, scope: !15997)
!15997 = distinct !DILexicalBlock(scope: !15992, file: !2290, line: 3058, column: 9)
!15998 = !DILocation(line: 3060, column: 9, scope: !15994)
!15999 = !DILocation(line: 3062, column: 29, scope: !15994)
!16000 = !DILocation(line: 3063, column: 5, scope: !15994)
!16001 = !DILocation(line: 3065, column: 38, scope: !16002)
!16002 = distinct !DILexicalBlock(scope: !15989, file: !2290, line: 3065, column: 15)
!16003 = !DILocation(line: 3065, column: 35, scope: !16002)
!16004 = !DILocation(line: 3065, column: 33, scope: !16002)
!16005 = !DILocation(line: 3065, column: 17, scope: !16002)
!16006 = !DILocation(line: 3065, column: 15, scope: !15989)
!16007 = !DILocation(line: 3066, column: 21, scope: !16008)
!16008 = distinct !DILexicalBlock(scope: !16002, file: !2290, line: 3065, column: 62)
!16009 = !DILocation(line: 3068, column: 9, scope: !16008)
!16010 = !DILocation(line: 3071, column: 23, scope: !16008)
!16011 = !DILocation(line: 3071, column: 22, scope: !16008)
!16012 = !DILocation(line: 3073, column: 24, scope: !16013)
!16013 = distinct !DILexicalBlock(scope: !16008, file: !2290, line: 3073, column: 13)
!16014 = !DILocation(line: 3073, column: 13, scope: !16008)
!16015 = !DILocation(line: 3078, column: 16, scope: !16016)
!16016 = distinct !DILexicalBlock(scope: !16017, file: !2290, line: 3078, column: 16)
!16017 = distinct !DILexicalBlock(scope: !16013, file: !2290, line: 3075, column: 16)
!16018 = !DILocation(line: 3078, column: 16, scope: !16017)
!16019 = !DILocation(line: 3081, column: 58, scope: !16020)
!16020 = distinct !DILexicalBlock(scope: !16016, file: !2290, line: 3078, column: 46)
!16021 = !DILocation(line: 3081, column: 17, scope: !16020)
!16022 = !DILocation(line: 3082, column: 22, scope: !16023)
!16023 = distinct !DILexicalBlock(scope: !16020, file: !2290, line: 3082, column: 21)
!16024 = !DILocation(line: 3082, column: 49, scope: !16023)
!16025 = !DILocation(line: 3082, column: 21, scope: !16020)
!16026 = !DILocation(line: 3088, column: 9, scope: !16008)
!16027 = !DILocation(line: 3091, column: 9, scope: !15971)
!16028 = !DILocation(line: 3092, column: 13, scope: !16029)
!16029 = distinct !DILexicalBlock(scope: !16030, file: !2290, line: 3092, column: 13)
!16030 = distinct !DILexicalBlock(scope: !15971, file: !2290, line: 3091, column: 9)
!16031 = !DILocation(line: 3092, column: 33, scope: !16029)
!16032 = !DILocation(line: 3092, column: 13, scope: !16030)
!16033 = !DILocation(line: 3106, column: 5, scope: !15971)
!16034 = !DILocation(line: 3107, column: 1, scope: !15971)
!16035 = distinct !DISubprogram(name: "SF_DAL_Dev_EraseBlock", scope: !2290, file: !2290, line: 3497, type: !16036, scopeLine: 3498, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2289, retainedNodes: !16038)
!16036 = !DISubroutineType(types: !16037)
!16037 = !{null, !2460, !61}
!16038 = !{!16039, !16040, !16041}
!16039 = !DILocalVariable(name: "D", arg: 1, scope: !16035, file: !2290, line: 3497, type: !2460)
!16040 = !DILocalVariable(name: "addr", arg: 2, scope: !16035, file: !2290, line: 3497, type: !61)
!16041 = !DILocalVariable(name: "savedMask", scope: !16035, file: !2290, line: 3499, type: !61)
!16042 = !DILocation(line: 0, scope: !16035)
!16043 = !DILocation(line: 3501, column: 14, scope: !16044)
!16044 = distinct !DILexicalBlock(scope: !16035, file: !2290, line: 3501, column: 9)
!16045 = !DILocation(line: 3501, column: 25, scope: !16044)
!16046 = !DILocation(line: 3501, column: 9, scope: !16035)
!16047 = !DILocation(line: 3502, column: 9, scope: !16048)
!16048 = distinct !DILexicalBlock(scope: !16044, file: !2290, line: 3501, column: 51)
!16049 = !DILocation(line: 3503, column: 5, scope: !16048)
!16050 = !DILocation(line: 3507, column: 17, scope: !16035)
!16051 = !DILocation(line: 3516, column: 5, scope: !16035)
!16052 = !DILocation(line: 3517, column: 31, scope: !16035)
!16053 = !DILocation(line: 3517, column: 38, scope: !16035)
!16054 = !DILocation(line: 3517, column: 43, scope: !16035)
!16055 = !DILocation(line: 3517, column: 59, scope: !16035)
!16056 = !DILocation(line: 3517, column: 56, scope: !16035)
!16057 = !DILocation(line: 3517, column: 5, scope: !16035)
!16058 = !DILocation(line: 3523, column: 5, scope: !16035)
!16059 = !DILocation(line: 3524, column: 1, scope: !16035)
!16060 = distinct !DISubprogram(name: "SF_DAL_Init_Vendor", scope: !2290, file: !2290, line: 2018, type: !15161, scopeLine: 2019, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2289, retainedNodes: !16061)
!16061 = !{!16062, !16063, !16064}
!16062 = !DILocalVariable(name: "driver", arg: 1, scope: !16060, file: !2290, line: 2018, type: !15163)
!16063 = !DILocalVariable(name: "D", arg: 2, scope: !16060, file: !2290, line: 2018, type: !2460)
!16064 = !DILocalVariable(name: "result", scope: !16060, file: !2290, line: 2020, type: !1349)
!16065 = !DILocation(line: 0, scope: !16060)
!16066 = !DILocation(line: 2022, column: 13, scope: !16060)
!16067 = !DILocation(line: 2022, column: 5, scope: !16060)
!16068 = !DILocation(line: 2031, column: 16, scope: !16069)
!16069 = distinct !DILexicalBlock(scope: !16060, file: !2290, line: 2022, column: 31)
!16070 = !DILocation(line: 2031, column: 27, scope: !16069)
!16071 = !DILocation(line: 2033, column: 22, scope: !16069)
!16072 = !DILocation(line: 2034, column: 13, scope: !16069)
!16073 = !DILocation(line: 2049, column: 16, scope: !16069)
!16074 = !DILocation(line: 2049, column: 27, scope: !16069)
!16075 = !DILocation(line: 2051, column: 23, scope: !16069)
!16076 = !DILocation(line: 2053, column: 13, scope: !16069)
!16077 = !DILocation(line: 2058, column: 22, scope: !16069)
!16078 = !DILocation(line: 2059, column: 13, scope: !16069)
!16079 = !DILocation(line: 2079, column: 13, scope: !16080)
!16080 = distinct !DILexicalBlock(scope: !16081, file: !2290, line: 2079, column: 13)
!16081 = distinct !DILexicalBlock(scope: !16082, file: !2290, line: 2079, column: 13)
!16082 = distinct !DILexicalBlock(scope: !16069, file: !2290, line: 2079, column: 13)
!16083 = !DILocation(line: 2083, column: 5, scope: !16060)
!16084 = distinct !DISubprogram(name: "SF_DAL_Init_Driver", scope: !2290, file: !2290, line: 2100, type: !16085, scopeLine: 2101, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2289, retainedNodes: !16087)
!16085 = !DISubroutineType(types: !16086)
!16086 = !{!1349, !15163, !2460, !61, !61}
!16087 = !{!16088, !16089, !16090, !16091, !16092}
!16088 = !DILocalVariable(name: "driver", arg: 1, scope: !16084, file: !2290, line: 2100, type: !15163)
!16089 = !DILocalVariable(name: "D", arg: 2, scope: !16084, file: !2290, line: 2100, type: !2460)
!16090 = !DILocalVariable(name: "baseaddr", arg: 3, scope: !16084, file: !2290, line: 2100, type: !61)
!16091 = !DILocalVariable(name: "parameter", arg: 4, scope: !16084, file: !2290, line: 2100, type: !61)
!16092 = !DILocalVariable(name: "result", scope: !16084, file: !2290, line: 2102, type: !1349)
!16093 = !DILocation(line: 0, scope: !16084)
!16094 = !DILocation(line: 2105, column: 16, scope: !16095)
!16095 = distinct !DILexicalBlock(scope: !16084, file: !2290, line: 2105, column: 9)
!16096 = !DILocation(line: 2105, column: 24, scope: !16095)
!16097 = !DILocation(line: 2109, column: 12, scope: !16098)
!16098 = distinct !DILexicalBlock(scope: !16084, file: !2290, line: 2109, column: 9)
!16099 = !DILocation(line: 2109, column: 16, scope: !16098)
!16100 = !DILocation(line: 2109, column: 24, scope: !16098)
!16101 = !DILocation(line: 2109, column: 30, scope: !16098)
!16102 = !DILocation(line: 2109, column: 40, scope: !16098)
!16103 = !DILocation(line: 2109, column: 9, scope: !16084)
!16104 = !DILocation(line: 2118, column: 19, scope: !16084)
!16105 = !DILocation(line: 2118, column: 8, scope: !16084)
!16106 = !DILocation(line: 2118, column: 17, scope: !16084)
!16107 = !DILocation(line: 2119, column: 23, scope: !16084)
!16108 = !DILocation(line: 2119, column: 8, scope: !16084)
!16109 = !DILocation(line: 2119, column: 21, scope: !16084)
!16110 = !DILocation(line: 2122, column: 5, scope: !16084)
!16111 = !DILocation(line: 2125, column: 8, scope: !16084)
!16112 = !DILocation(line: 2125, column: 13, scope: !16084)
!16113 = !DILocation(line: 2125, column: 24, scope: !16084)
!16114 = !DILocation(line: 2126, column: 26, scope: !16084)
!16115 = !DILocation(line: 2126, column: 5, scope: !16084)
!16116 = !DILocation(line: 2128, column: 9, scope: !16117)
!16117 = distinct !DILexicalBlock(scope: !16084, file: !2290, line: 2128, column: 9)
!16118 = !DILocation(line: 2128, column: 31, scope: !16117)
!16119 = !DILocation(line: 2128, column: 60, scope: !16117)
!16120 = !DILocation(line: 2128, column: 9, scope: !16084)
!16121 = !DILocation(line: 2129, column: 12, scope: !16122)
!16122 = distinct !DILexicalBlock(scope: !16117, file: !2290, line: 2128, column: 110)
!16123 = !DILocation(line: 2129, column: 17, scope: !16122)
!16124 = !DILocation(line: 2129, column: 28, scope: !16122)
!16125 = !DILocation(line: 2130, column: 9, scope: !16122)
!16126 = !DILocation(line: 2131, column: 5, scope: !16122)
!16127 = !DILocation(line: 2134, column: 14, scope: !16084)
!16128 = !DILocation(line: 2136, column: 5, scope: !16084)
!16129 = !DILocation(line: 2137, column: 1, scope: !16084)
!16130 = distinct !DISubprogram(name: "SF_DAL_Dev_ReadID", scope: !2290, file: !2290, line: 3387, type: !16131, scopeLine: 3388, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2289, retainedNodes: !16133)
!16131 = !DISubroutineType(types: !16132)
!16132 = !{null, !2460, !1055}
!16133 = !{!16134, !16135, !16136}
!16134 = !DILocalVariable(name: "D", arg: 1, scope: !16130, file: !2290, line: 3387, type: !2460)
!16135 = !DILocalVariable(name: "id", arg: 2, scope: !16130, file: !2290, line: 3387, type: !1055)
!16136 = !DILocalVariable(name: "cmd", scope: !16130, file: !2290, line: 3389, type: !159)
!16137 = !DILocation(line: 0, scope: !16130)
!16138 = !DILocation(line: 3389, column: 5, scope: !16130)
!16139 = !DILocation(line: 3405, column: 9, scope: !16140)
!16140 = distinct !DILexicalBlock(scope: !16130, file: !2290, line: 3405, column: 9)
!16141 = !DILocation(line: 3405, column: 21, scope: !16140)
!16142 = !DILocation(line: 0, scope: !16140)
!16143 = !DILocation(line: 3405, column: 9, scope: !16130)
!16144 = !DILocation(line: 3411, column: 31, scope: !16130)
!16145 = !DILocation(line: 3411, column: 5, scope: !16130)
!16146 = !DILocation(line: 3412, column: 1, scope: !16130)
!16147 = distinct !DISubprogram(name: "SF_DAL_Dev_Command_Ext", scope: !2290, file: !2290, line: 3585, type: !16148, scopeLine: 3586, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2289, retainedNodes: !16150)
!16148 = !DISubroutineType(types: !16149)
!16149 = !{null, !13930, !1055, !1055, !13930, !13930}
!16150 = !{!16151, !16152, !16153, !16154, !16155, !16156}
!16151 = !DILocalVariable(name: "CS", arg: 1, scope: !16147, file: !2290, line: 3585, type: !13930)
!16152 = !DILocalVariable(name: "cmd", arg: 2, scope: !16147, file: !2290, line: 3585, type: !1055)
!16153 = !DILocalVariable(name: "data", arg: 3, scope: !16147, file: !2290, line: 3585, type: !1055)
!16154 = !DILocalVariable(name: "outl", arg: 4, scope: !16147, file: !2290, line: 3585, type: !13930)
!16155 = !DILocalVariable(name: "inl", arg: 5, scope: !16147, file: !2290, line: 3585, type: !13930)
!16156 = !DILocalVariable(name: "savedMask", scope: !16147, file: !2290, line: 3587, type: !61)
!16157 = !DILocation(line: 0, scope: !16147)
!16158 = !DILocation(line: 3589, column: 17, scope: !16147)
!16159 = !DILocation(line: 3590, column: 5, scope: !16147)
!16160 = !DILocation(line: 3591, column: 5, scope: !16147)
!16161 = !DILocation(line: 3593, column: 1, scope: !16147)
!16162 = distinct !DISubprogram(name: "CMEM_CheckValidDeviceID", scope: !2610, file: !2610, line: 110, type: !14408, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2609, retainedNodes: !16163)
!16163 = !{!16164, !16165, !16166, !16167}
!16164 = !DILocalVariable(name: "id", arg: 1, scope: !16162, file: !2610, line: 110, type: !1055)
!16165 = !DILocalVariable(name: "i", scope: !16162, file: !2610, line: 114, type: !1349)
!16166 = !DILocalVariable(name: "j", scope: !16162, file: !2610, line: 114, type: !1349)
!16167 = !DILocalVariable(name: "id_list", scope: !16162, file: !2610, line: 115, type: !16168)
!16168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16169, size: 32)
!16169 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2687)
!16170 = !DILocation(line: 0, scope: !16162)
!16171 = !DILocation(line: 119, column: 5, scope: !16172)
!16172 = distinct !DILexicalBlock(scope: !16162, file: !2610, line: 119, column: 5)
!16173 = !DILocation(line: 119, column: 46, scope: !16174)
!16174 = distinct !DILexicalBlock(scope: !16172, file: !2610, line: 119, column: 5)
!16175 = !DILocation(line: 119, column: 19, scope: !16174)
!16176 = distinct !{!16176, !16171, !16177}
!16177 = !DILocation(line: 131, column: 5, scope: !16172)
!16178 = !DILocation(line: 121, column: 23, scope: !16179)
!16179 = distinct !DILexicalBlock(scope: !16180, file: !2610, line: 121, column: 9)
!16180 = distinct !DILexicalBlock(scope: !16181, file: !2610, line: 121, column: 9)
!16181 = distinct !DILexicalBlock(scope: !16174, file: !2610, line: 119, column: 50)
!16182 = !DILocation(line: 121, column: 9, scope: !16180)
!16183 = !DILocation(line: 122, column: 17, scope: !16184)
!16184 = distinct !DILexicalBlock(scope: !16185, file: !2610, line: 122, column: 17)
!16185 = distinct !DILexicalBlock(scope: !16179, file: !2610, line: 121, column: 51)
!16186 = !DILocation(line: 122, column: 37, scope: !16184)
!16187 = !DILocation(line: 122, column: 34, scope: !16184)
!16188 = !DILocation(line: 122, column: 17, scope: !16185)
!16189 = !DILocation(line: 121, column: 47, scope: !16179)
!16190 = distinct !{!16190, !16182, !16191}
!16191 = !DILocation(line: 125, column: 9, scope: !16180)
!16192 = !DILocation(line: 0, scope: !16180)
!16193 = !DILocation(line: 127, column: 15, scope: !16194)
!16194 = distinct !DILexicalBlock(scope: !16181, file: !2610, line: 127, column: 13)
!16195 = !DILocation(line: 127, column: 13, scope: !16181)
!16196 = !DILocation(line: 134, column: 1, scope: !16162)
!16197 = distinct !DISubprogram(name: "CMEM_Index", scope: !2610, file: !2610, line: 153, type: !14563, scopeLine: 155, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2609, retainedNodes: !16198)
!16198 = !{!16199, !16200, !16201, !16208}
!16199 = !DILocalVariable(name: "i", scope: !16197, file: !2610, line: 156, type: !1349)
!16200 = !DILocalVariable(name: "j", scope: !16197, file: !2610, line: 156, type: !1349)
!16201 = !DILocalVariable(name: "id", scope: !16197, file: !2610, line: 157, type: !16202)
!16202 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMFlashID", file: !2680, line: 89, baseType: !16203)
!16203 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2680, line: 86, size: 64, elements: !16204)
!16204 = !{!16205, !16206}
!16205 = !DIDerivedType(tag: DW_TAG_member, name: "NAND", scope: !16203, file: !2680, line: 87, baseType: !2693, size: 64)
!16206 = !DIDerivedType(tag: DW_TAG_member, name: "NOR", scope: !16203, file: !2680, line: 88, baseType: !16207, size: 64)
!16207 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1212, size: 64, elements: !748)
!16208 = !DILocalVariable(name: "id_list", scope: !16197, file: !2610, line: 158, type: !16168)
!16209 = !DILocation(line: 157, column: 5, scope: !16197)
!16210 = !DILocation(line: 157, column: 17, scope: !16197)
!16211 = !DILocation(line: 0, scope: !16197)
!16212 = !DILocation(line: 161, column: 9, scope: !16213)
!16213 = distinct !DILexicalBlock(scope: !16197, file: !2610, line: 161, column: 9)
!16214 = !DILocation(line: 161, column: 20, scope: !16213)
!16215 = !DILocation(line: 161, column: 9, scope: !16197)
!16216 = !DILocation(line: 172, column: 58, scope: !16197)
!16217 = !DILocation(line: 172, column: 5, scope: !16197)
!16218 = !DILocation(line: 178, column: 5, scope: !16219)
!16219 = distinct !DILexicalBlock(scope: !16197, file: !2610, line: 178, column: 5)
!16220 = !DILocation(line: 180, column: 23, scope: !16221)
!16221 = distinct !DILexicalBlock(scope: !16222, file: !2610, line: 180, column: 9)
!16222 = distinct !DILexicalBlock(scope: !16223, file: !2610, line: 180, column: 9)
!16223 = distinct !DILexicalBlock(scope: !16224, file: !2610, line: 178, column: 53)
!16224 = distinct !DILexicalBlock(scope: !16219, file: !2610, line: 178, column: 5)
!16225 = !DILocation(line: 180, column: 9, scope: !16222)
!16226 = !DILocation(line: 181, column: 17, scope: !16227)
!16227 = distinct !DILexicalBlock(scope: !16228, file: !2610, line: 181, column: 17)
!16228 = distinct !DILexicalBlock(scope: !16221, file: !2610, line: 180, column: 51)
!16229 = !DILocation(line: 181, column: 37, scope: !16227)
!16230 = !DILocation(line: 181, column: 34, scope: !16227)
!16231 = !DILocation(line: 181, column: 17, scope: !16228)
!16232 = !DILocation(line: 180, column: 47, scope: !16221)
!16233 = distinct !{!16233, !16225, !16234}
!16234 = !DILocation(line: 184, column: 9, scope: !16222)
!16235 = !DILocation(line: 0, scope: !16222)
!16236 = !DILocation(line: 186, column: 15, scope: !16237)
!16237 = distinct !DILexicalBlock(scope: !16223, file: !2610, line: 186, column: 13)
!16238 = !DILocation(line: 186, column: 13, scope: !16223)
!16239 = !DILocation(line: 188, column: 26, scope: !16240)
!16240 = distinct !DILexicalBlock(scope: !16237, file: !2610, line: 186, column: 41)
!16241 = !DILocation(line: 188, column: 24, scope: !16240)
!16242 = !DILocation(line: 189, column: 13, scope: !16240)
!16243 = !DILocation(line: 178, column: 46, scope: !16224)
!16244 = !DILocation(line: 178, column: 19, scope: !16224)
!16245 = distinct !{!16245, !16218, !16246}
!16246 = !DILocation(line: 191, column: 5, scope: !16219)
!16247 = !DILocation(line: 222, column: 12, scope: !16197)
!16248 = !DILocation(line: 223, column: 1, scope: !16197)
!16249 = distinct !DISubprogram(name: "CMEM_GetIDEntry", scope: !2610, file: !2610, line: 240, type: !16250, scopeLine: 241, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2609, retainedNodes: !16252)
!16250 = !DISubroutineType(types: !16251)
!16251 = !{!16168, !61}
!16252 = !{!16253}
!16253 = !DILocalVariable(name: "index", arg: 1, scope: !16249, file: !2610, line: 240, type: !61)
!16254 = !DILocation(line: 0, scope: !16249)
!16255 = !DILocation(line: 242, column: 13, scope: !16249)
!16256 = !DILocation(line: 242, column: 5, scope: !16249)
!16257 = distinct !DISubprogram(name: "CMEM_EMIINIT_ReadID", scope: !2610, file: !2610, line: 254, type: !16258, scopeLine: 255, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2609, retainedNodes: !16260)
!16258 = !DISubroutineType(types: !16259)
!16259 = !{null, !13930, !88, !2263}
!16260 = !{!16261, !16262, !16263, !16264, !16266, !16267}
!16261 = !DILocalVariable(name: "CS", arg: 1, scope: !16257, file: !2610, line: 254, type: !13930)
!16262 = !DILocalVariable(name: "BaseAddr", arg: 2, scope: !16257, file: !2610, line: 254, type: !88)
!16263 = !DILocalVariable(name: "flashid", arg: 3, scope: !16257, file: !2610, line: 254, type: !2263)
!16264 = !DILocalVariable(name: "cmd", scope: !16265, file: !2610, line: 258, type: !159)
!16265 = distinct !DILexicalBlock(scope: !16257, file: !2610, line: 257, column: 5)
!16266 = !DILocalVariable(name: "id", scope: !16265, file: !2610, line: 258, type: !1727)
!16267 = !DILocalVariable(name: "i", scope: !16265, file: !2610, line: 258, type: !159)
!16268 = !DILocation(line: 0, scope: !16257)
!16269 = !DILocation(line: 258, column: 9, scope: !16265)
!16270 = !DILocation(line: 258, column: 22, scope: !16265)
!16271 = !DILocation(line: 0, scope: !16265)
!16272 = !DILocation(line: 260, column: 13, scope: !16265)
!16273 = !DILocation(line: 261, column: 9, scope: !16265)
!16274 = !DILocation(line: 263, column: 13, scope: !16275)
!16275 = distinct !DILexicalBlock(scope: !16265, file: !2610, line: 263, column: 13)
!16276 = !DILocation(line: 263, column: 27, scope: !16275)
!16277 = !DILocation(line: 263, column: 48, scope: !16275)
!16278 = !DILocation(line: 263, column: 13, scope: !16265)
!16279 = !DILocation(line: 264, column: 17, scope: !16280)
!16280 = distinct !DILexicalBlock(scope: !16275, file: !2610, line: 263, column: 95)
!16281 = !DILocation(line: 265, column: 13, scope: !16280)
!16282 = !DILocation(line: 266, column: 9, scope: !16280)
!16283 = !DILocation(line: 268, column: 9, scope: !16284)
!16284 = distinct !DILexicalBlock(scope: !16265, file: !2610, line: 268, column: 9)
!16285 = !DILocation(line: 269, column: 26, scope: !16286)
!16286 = distinct !DILexicalBlock(scope: !16287, file: !2610, line: 268, column: 50)
!16287 = distinct !DILexicalBlock(scope: !16284, file: !2610, line: 268, column: 9)
!16288 = !DILocation(line: 269, column: 13, scope: !16286)
!16289 = !DILocation(line: 269, column: 24, scope: !16286)
!16290 = !DILocation(line: 268, column: 46, scope: !16287)
!16291 = !DILocation(line: 268, column: 23, scope: !16287)
!16292 = distinct !{!16292, !16283, !16293}
!16293 = !DILocation(line: 270, column: 9, scope: !16284)
!16294 = !DILocation(line: 271, column: 5, scope: !16257)
!16295 = !DILocation(line: 272, column: 5, scope: !16257)
!16296 = distinct !DISubprogram(name: "CMEM_EMIINIT_CheckValidDeviceID", scope: !2610, file: !2610, line: 285, type: !14408, scopeLine: 286, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2609, retainedNodes: !16297)
!16297 = !{!16298, !16299, !16300, !16301}
!16298 = !DILocalVariable(name: "id", arg: 1, scope: !16296, file: !2610, line: 285, type: !1055)
!16299 = !DILocalVariable(name: "i", scope: !16296, file: !2610, line: 289, type: !1349)
!16300 = !DILocalVariable(name: "j", scope: !16296, file: !2610, line: 289, type: !1349)
!16301 = !DILocalVariable(name: "id_list", scope: !16296, file: !2610, line: 290, type: !16168)
!16302 = !DILocation(line: 0, scope: !16296)
!16303 = !DILocation(line: 294, column: 5, scope: !16304)
!16304 = distinct !DILexicalBlock(scope: !16296, file: !2610, line: 294, column: 5)
!16305 = !DILocation(line: 294, column: 46, scope: !16306)
!16306 = distinct !DILexicalBlock(scope: !16304, file: !2610, line: 294, column: 5)
!16307 = !DILocation(line: 294, column: 19, scope: !16306)
!16308 = distinct !{!16308, !16303, !16309}
!16309 = !DILocation(line: 306, column: 5, scope: !16304)
!16310 = !DILocation(line: 296, column: 23, scope: !16311)
!16311 = distinct !DILexicalBlock(scope: !16312, file: !2610, line: 296, column: 9)
!16312 = distinct !DILexicalBlock(scope: !16313, file: !2610, line: 296, column: 9)
!16313 = distinct !DILexicalBlock(scope: !16306, file: !2610, line: 294, column: 53)
!16314 = !DILocation(line: 296, column: 9, scope: !16312)
!16315 = !DILocation(line: 297, column: 17, scope: !16316)
!16316 = distinct !DILexicalBlock(scope: !16317, file: !2610, line: 297, column: 17)
!16317 = distinct !DILexicalBlock(scope: !16311, file: !2610, line: 296, column: 51)
!16318 = !DILocation(line: 297, column: 37, scope: !16316)
!16319 = !DILocation(line: 297, column: 34, scope: !16316)
!16320 = !DILocation(line: 297, column: 17, scope: !16317)
!16321 = !DILocation(line: 296, column: 47, scope: !16311)
!16322 = distinct !{!16322, !16314, !16323}
!16323 = !DILocation(line: 300, column: 9, scope: !16312)
!16324 = !DILocation(line: 0, scope: !16312)
!16325 = !DILocation(line: 302, column: 15, scope: !16326)
!16326 = distinct !DILexicalBlock(scope: !16313, file: !2610, line: 302, column: 13)
!16327 = !DILocation(line: 302, column: 13, scope: !16313)
!16328 = !DILocation(line: 310, column: 1, scope: !16296)
!16329 = distinct !DISubprogram(name: "CMEM_EMIINIT_Index", scope: !2610, file: !2610, line: 328, type: !14563, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2609, retainedNodes: !16330)
!16330 = !{!16331, !16332, !16333, !16334}
!16331 = !DILocalVariable(name: "i", scope: !16329, file: !2610, line: 331, type: !1349)
!16332 = !DILocalVariable(name: "j", scope: !16329, file: !2610, line: 331, type: !1349)
!16333 = !DILocalVariable(name: "id", scope: !16329, file: !2610, line: 332, type: !16202)
!16334 = !DILocalVariable(name: "id_list", scope: !16329, file: !2610, line: 333, type: !16168)
!16335 = !DILocation(line: 332, column: 5, scope: !16329)
!16336 = !DILocation(line: 332, column: 17, scope: !16329)
!16337 = !DILocation(line: 0, scope: !16329)
!16338 = !DILocation(line: 336, column: 9, scope: !16339)
!16339 = distinct !DILexicalBlock(scope: !16329, file: !2610, line: 336, column: 9)
!16340 = !DILocation(line: 336, column: 28, scope: !16339)
!16341 = !DILocation(line: 336, column: 9, scope: !16329)
!16342 = !DILocation(line: 344, column: 60, scope: !16329)
!16343 = !DILocation(line: 344, column: 5, scope: !16329)
!16344 = !DILocation(line: 350, column: 5, scope: !16345)
!16345 = distinct !DILexicalBlock(scope: !16329, file: !2610, line: 350, column: 5)
!16346 = !DILocation(line: 352, column: 23, scope: !16347)
!16347 = distinct !DILexicalBlock(scope: !16348, file: !2610, line: 352, column: 9)
!16348 = distinct !DILexicalBlock(scope: !16349, file: !2610, line: 352, column: 9)
!16349 = distinct !DILexicalBlock(scope: !16350, file: !2610, line: 350, column: 53)
!16350 = distinct !DILexicalBlock(scope: !16345, file: !2610, line: 350, column: 5)
!16351 = !DILocation(line: 352, column: 9, scope: !16348)
!16352 = !DILocation(line: 353, column: 17, scope: !16353)
!16353 = distinct !DILexicalBlock(scope: !16354, file: !2610, line: 353, column: 17)
!16354 = distinct !DILexicalBlock(scope: !16347, file: !2610, line: 352, column: 51)
!16355 = !DILocation(line: 353, column: 37, scope: !16353)
!16356 = !DILocation(line: 353, column: 34, scope: !16353)
!16357 = !DILocation(line: 353, column: 17, scope: !16354)
!16358 = !DILocation(line: 352, column: 47, scope: !16347)
!16359 = distinct !{!16359, !16351, !16360}
!16360 = !DILocation(line: 356, column: 9, scope: !16348)
!16361 = !DILocation(line: 0, scope: !16348)
!16362 = !DILocation(line: 358, column: 15, scope: !16363)
!16363 = distinct !DILexicalBlock(scope: !16349, file: !2610, line: 358, column: 13)
!16364 = !DILocation(line: 358, column: 13, scope: !16349)
!16365 = !DILocation(line: 360, column: 34, scope: !16366)
!16366 = distinct !DILexicalBlock(scope: !16363, file: !2610, line: 358, column: 41)
!16367 = !DILocation(line: 360, column: 32, scope: !16366)
!16368 = !DILocation(line: 361, column: 13, scope: !16366)
!16369 = !DILocation(line: 350, column: 46, scope: !16350)
!16370 = !DILocation(line: 350, column: 19, scope: !16350)
!16371 = distinct !{!16371, !16344, !16372}
!16372 = !DILocation(line: 363, column: 5, scope: !16345)
!16373 = !DILocation(line: 364, column: 12, scope: !16329)
!16374 = !DILocation(line: 365, column: 1, scope: !16329)
!16375 = distinct !DISubprogram(name: "NOR_ReadID", scope: !4141, file: !4141, line: 64, type: !16376, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4140, retainedNodes: !16382)
!16376 = !DISubroutineType(types: !16377)
!16377 = !{null, !13930, !16378, !2263}
!16378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16379, size: 32)
!16379 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !16380)
!16380 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_CELL", file: !16381, line: 158, baseType: !1212)
!16381 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_cfi_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sd_read_write_data_dma/GCC")
!16382 = !{!16383, !16384, !16385, !16386, !16387, !16389, !16390}
!16383 = !DILocalVariable(name: "CS", arg: 1, scope: !16375, file: !4141, line: 64, type: !13930)
!16384 = !DILocalVariable(name: "BaseAddr", arg: 2, scope: !16375, file: !4141, line: 64, type: !16378)
!16385 = !DILocalVariable(name: "flashid", arg: 3, scope: !16375, file: !4141, line: 64, type: !2263)
!16386 = !DILocalVariable(name: "savedMask", scope: !16375, file: !4141, line: 66, type: !61)
!16387 = !DILocalVariable(name: "cmd", scope: !16388, file: !4141, line: 70, type: !159)
!16388 = distinct !DILexicalBlock(scope: !16375, file: !4141, line: 69, column: 5)
!16389 = !DILocalVariable(name: "id", scope: !16388, file: !4141, line: 70, type: !1727)
!16390 = !DILocalVariable(name: "i", scope: !16388, file: !4141, line: 70, type: !159)
!16391 = !DILocation(line: 0, scope: !16375)
!16392 = !DILocation(line: 70, column: 9, scope: !16388)
!16393 = !DILocation(line: 70, column: 22, scope: !16388)
!16394 = !DILocation(line: 0, scope: !16388)
!16395 = !DILocation(line: 72, column: 13, scope: !16388)
!16396 = !DILocation(line: 73, column: 21, scope: !16388)
!16397 = !DILocation(line: 74, column: 9, scope: !16388)
!16398 = !DILocation(line: 75, column: 9, scope: !16388)
!16399 = !DILocation(line: 77, column: 13, scope: !16400)
!16400 = distinct !DILexicalBlock(scope: !16388, file: !4141, line: 77, column: 13)
!16401 = !DILocation(line: 77, column: 27, scope: !16400)
!16402 = !DILocation(line: 77, column: 48, scope: !16400)
!16403 = !DILocation(line: 77, column: 13, scope: !16388)
!16404 = !DILocation(line: 78, column: 17, scope: !16405)
!16405 = distinct !DILexicalBlock(scope: !16400, file: !4141, line: 77, column: 87)
!16406 = !DILocation(line: 79, column: 25, scope: !16405)
!16407 = !DILocation(line: 80, column: 13, scope: !16405)
!16408 = !DILocation(line: 81, column: 13, scope: !16405)
!16409 = !DILocation(line: 82, column: 9, scope: !16405)
!16410 = !DILocation(line: 84, column: 9, scope: !16411)
!16411 = distinct !DILexicalBlock(scope: !16388, file: !4141, line: 84, column: 9)
!16412 = !DILocation(line: 85, column: 26, scope: !16413)
!16413 = distinct !DILexicalBlock(scope: !16414, file: !4141, line: 84, column: 50)
!16414 = distinct !DILexicalBlock(scope: !16411, file: !4141, line: 84, column: 9)
!16415 = !DILocation(line: 85, column: 13, scope: !16413)
!16416 = !DILocation(line: 85, column: 24, scope: !16413)
!16417 = !DILocation(line: 84, column: 46, scope: !16414)
!16418 = !DILocation(line: 84, column: 23, scope: !16414)
!16419 = distinct !{!16419, !16410, !16420}
!16420 = !DILocation(line: 86, column: 9, scope: !16411)
!16421 = !DILocation(line: 87, column: 5, scope: !16375)
!16422 = !DILocation(line: 89, column: 1, scope: !16375)
!16423 = distinct !DISubprogram(name: "custom_get_NORFLASH_ROMSpace", scope: !2697, file: !2697, line: 248, type: !5387, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2696, retainedNodes: !345)
!16424 = !DILocation(line: 250, column: 5, scope: !16423)
!16425 = distinct !DISubprogram(name: "custom_get_NORFLASH_Size", scope: !2697, file: !2697, line: 270, type: !5387, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2696, retainedNodes: !345)
!16426 = !DILocation(line: 272, column: 5, scope: !16425)
!16427 = distinct !DISubprogram(name: "Initialize_FDD_tables", scope: !2697, file: !2697, line: 294, type: !343, scopeLine: 295, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2696, retainedNodes: !345)
!16428 = !DILocation(line: 296, column: 5, scope: !16427)
!16429 = !DILocation(line: 297, column: 5, scope: !16427)
!16430 = distinct !DISubprogram(name: "nor_sweep_device", scope: !2697, file: !2697, line: 304, type: !343, scopeLine: 305, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2696, retainedNodes: !345)
!16431 = !DILocation(line: 309, column: 5, scope: !16430)
!16432 = distinct !DISubprogram(name: "nor_manual_reclaim", scope: !2697, file: !2697, line: 312, type: !343, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2696, retainedNodes: !345)
!16433 = !DILocation(line: 317, column: 5, scope: !16432)
!16434 = distinct !DISubprogram(name: "custom_get_fat_addr", scope: !2697, file: !2697, line: 334, type: !5387, scopeLine: 335, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2696, retainedNodes: !345)
!16435 = !DILocation(line: 336, column: 5, scope: !16434)
!16436 = distinct !DISubprogram(name: "custom_get_fat_len", scope: !2697, file: !2697, line: 353, type: !5387, scopeLine: 354, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2696, retainedNodes: !345)
!16437 = !DILocation(line: 355, column: 5, scope: !16436)
!16438 = distinct !DISubprogram(name: "Custom_NOR_Init", scope: !2697, file: !2697, line: 374, type: !343, scopeLine: 375, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2696, retainedNodes: !345)
!16439 = !DILocation(line: 376, column: 5, scope: !16438)
!16440 = !DILocation(line: 377, column: 1, scope: !16438)
!16441 = distinct !DISubprogram(name: "custom_get_NORFLASH_Base", scope: !2697, file: !2697, line: 395, type: !5387, scopeLine: 396, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2696, retainedNodes: !345)
!16442 = !DILocation(line: 397, column: 5, scope: !16441)
!16443 = distinct !DISubprogram(name: "custom_get_FLASH_Size", scope: !2697, file: !2697, line: 416, type: !5387, scopeLine: 417, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2696, retainedNodes: !345)
!16444 = !DILocation(line: 418, column: 5, scope: !16443)
!16445 = distinct !DISubprogram(name: "INT_RetrieveFlashBaseAddr", scope: !2706, file: !2706, line: 254, type: !5387, scopeLine: 255, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2705, retainedNodes: !345)
!16446 = !DILocation(line: 256, column: 32, scope: !16445)
!16447 = !DILocation(line: 257, column: 5, scope: !16445)
!16448 = distinct !DISubprogram(name: "CMEM_Init_NOR_MTD_Common", scope: !2706, file: !2706, line: 269, type: !14563, scopeLine: 270, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2705, retainedNodes: !345)
!16449 = !DILocation(line: 275, column: 24, scope: !16448)
!16450 = !DILocation(line: 278, column: 24, scope: !16448)
!16451 = !DILocation(line: 278, column: 33, scope: !16448)
!16452 = !DILocation(line: 278, column: 49, scope: !16448)
!16453 = !DILocation(line: 278, column: 22, scope: !16448)
!16454 = !DILocation(line: 281, column: 5, scope: !16448)
!16455 = !DILocation(line: 283, column: 34, scope: !16448)
!16456 = !DILocation(line: 283, column: 23, scope: !16448)
!16457 = !DILocation(line: 286, column: 25, scope: !16448)
!16458 = !DILocation(line: 321, column: 5, scope: !16448)
!16459 = distinct !DISubprogram(name: "CMEM_Init_NOR_MTD_SF", scope: !2706, file: !2706, line: 332, type: !14563, scopeLine: 333, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2705, retainedNodes: !16460)
!16460 = !{!16461}
!16461 = !DILocalVariable(name: "result", scope: !16459, file: !2706, line: 334, type: !1349)
!16462 = !DILocation(line: 340, column: 30, scope: !16459)
!16463 = !DILocation(line: 343, column: 24, scope: !16459)
!16464 = !DILocation(line: 344, column: 18, scope: !16459)
!16465 = !DILocation(line: 348, column: 17, scope: !16459)
!16466 = !DILocation(line: 353, column: 19, scope: !16459)
!16467 = !DILocation(line: 354, column: 18, scope: !16459)
!16468 = !DILocation(line: 354, column: 27, scope: !16459)
!16469 = !DILocation(line: 354, column: 43, scope: !16459)
!16470 = !DILocation(line: 350, column: 14, scope: !16459)
!16471 = !DILocation(line: 0, scope: !16459)
!16472 = !DILocation(line: 356, column: 16, scope: !16473)
!16473 = distinct !DILexicalBlock(scope: !16459, file: !2706, line: 356, column: 9)
!16474 = !DILocation(line: 395, column: 1, scope: !16459)
!16475 = distinct !DISubprogram(name: "EMINIT_CMEM_GET_NOR_FLASH_COUNT", scope: !2706, file: !2706, line: 406, type: !16476, scopeLine: 407, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2705, retainedNodes: !345)
!16476 = !DISubroutineType(types: !4074)
!16477 = !DILocation(line: 408, column: 5, scope: !16475)
!16478 = distinct !DISubprogram(name: "EMINIT_CMEM_GET_NOR_FLASH_SIZE", scope: !2706, file: !2706, line: 420, type: !16479, scopeLine: 421, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2705, retainedNodes: !16481)
!16479 = !DISubroutineType(types: !16480)
!16480 = !{!61, !159}
!16481 = !{!16482, !16483, !16484}
!16482 = !DILocalVariable(name: "CS", arg: 1, scope: !16478, file: !2706, line: 420, type: !159)
!16483 = !DILocalVariable(name: "index", scope: !16478, file: !2706, line: 422, type: !61)
!16484 = !DILocalVariable(name: "list", scope: !16478, file: !2706, line: 423, type: !3023)
!16485 = !DILocation(line: 0, scope: !16478)
!16486 = !DILocation(line: 427, column: 13, scope: !16478)
!16487 = !DILocation(line: 430, column: 34, scope: !16478)
!16488 = !DILocation(line: 430, column: 5, scope: !16478)
!16489 = distinct !DISubprogram(name: "CMEM_BlockSize_Internal", scope: !2706, file: !2706, line: 442, type: !16490, scopeLine: 443, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2705, retainedNodes: !16492)
!16490 = !DISubroutineType(types: !16491)
!16491 = !{!61, !61, !2895}
!16492 = !{!16493, !16494, !16495}
!16493 = !DILocalVariable(name: "address", arg: 1, scope: !16489, file: !2706, line: 442, type: !61)
!16494 = !DILocalVariable(name: "blocklayout", arg: 2, scope: !16489, file: !2706, line: 442, type: !2895)
!16495 = !DILocalVariable(name: "i", scope: !16489, file: !2706, line: 444, type: !1212)
!16496 = !DILocation(line: 0, scope: !16489)
!16497 = !DILocation(line: 446, column: 23, scope: !16489)
!16498 = !DILocation(line: 448, column: 36, scope: !16499)
!16499 = distinct !DILexicalBlock(scope: !16500, file: !2706, line: 448, column: 5)
!16500 = distinct !DILexicalBlock(scope: !16489, file: !2706, line: 448, column: 5)
!16501 = !DILocation(line: 448, column: 41, scope: !16499)
!16502 = !DILocation(line: 448, column: 5, scope: !16500)
!16503 = !DILocation(line: 449, column: 39, scope: !16504)
!16504 = distinct !DILexicalBlock(scope: !16505, file: !2706, line: 449, column: 13)
!16505 = distinct !DILexicalBlock(scope: !16499, file: !2706, line: 448, column: 54)
!16506 = !DILocation(line: 449, column: 21, scope: !16504)
!16507 = !DILocation(line: 449, column: 46, scope: !16504)
!16508 = !DILocation(line: 450, column: 46, scope: !16504)
!16509 = !DILocation(line: 450, column: 25, scope: !16504)
!16510 = !DILocation(line: 449, column: 13, scope: !16505)
!16511 = !DILocation(line: 448, column: 48, scope: !16499)
!16512 = !DILocation(line: 448, column: 29, scope: !16499)
!16513 = !DILocation(line: 448, column: 31, scope: !16499)
!16514 = distinct !{!16514, !16502, !16515}
!16515 = !DILocation(line: 453, column: 5, scope: !16500)
!16516 = !DILocation(line: 454, column: 27, scope: !16489)
!16517 = !DILocation(line: 454, column: 5, scope: !16489)
!16518 = distinct !DISubprogram(name: "CMEM_BlockSize", scope: !2706, file: !2706, line: 462, type: !5135, scopeLine: 463, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2705, retainedNodes: !16519)
!16519 = !{!16520}
!16520 = !DILocalVariable(name: "address", arg: 1, scope: !16518, file: !2706, line: 462, type: !61)
!16521 = !DILocation(line: 0, scope: !16518)
!16522 = !DILocation(line: 464, column: 45, scope: !16518)
!16523 = !DILocation(line: 464, column: 12, scope: !16518)
!16524 = !DILocation(line: 464, column: 5, scope: !16518)
!16525 = distinct !DISubprogram(name: "EMIINIT_CMEM_BlockSize", scope: !2706, file: !2706, line: 487, type: !5135, scopeLine: 488, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2705, retainedNodes: !16526)
!16526 = !{!16527, !16528, !16529}
!16527 = !DILocalVariable(name: "address", arg: 1, scope: !16525, file: !2706, line: 487, type: !61)
!16528 = !DILocalVariable(name: "index", scope: !16525, file: !2706, line: 490, type: !61)
!16529 = !DILocalVariable(name: "list", scope: !16525, file: !2706, line: 491, type: !3023)
!16530 = !DILocation(line: 0, scope: !16525)
!16531 = !DILocation(line: 490, column: 22, scope: !16525)
!16532 = !DILocation(line: 495, column: 45, scope: !16525)
!16533 = !DILocation(line: 495, column: 12, scope: !16525)
!16534 = !DILocation(line: 495, column: 5, scope: !16525)
!16535 = distinct !DISubprogram(name: "NOR_Get_FlashSizeFromBankInfo", scope: !2706, file: !2706, line: 517, type: !16536, scopeLine: 518, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2705, retainedNodes: !16540)
!16536 = !DISubroutineType(types: !16537)
!16537 = !{!1349, !16538}
!16538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16539, size: 32)
!16539 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2909)
!16540 = !{!16541, !16542, !16543}
!16541 = !DILocalVariable(name: "bankinfo", arg: 1, scope: !16535, file: !2706, line: 517, type: !16538)
!16542 = !DILocalVariable(name: "result", scope: !16535, file: !2706, line: 519, type: !61)
!16543 = !DILocalVariable(name: "i", scope: !16535, file: !2706, line: 519, type: !61)
!16544 = !DILocation(line: 0, scope: !16535)
!16545 = !DILocation(line: 522, column: 29, scope: !16546)
!16546 = distinct !DILexicalBlock(scope: !16547, file: !2706, line: 522, column: 5)
!16547 = distinct !DILexicalBlock(scope: !16535, file: !2706, line: 522, column: 5)
!16548 = !DILocation(line: 522, column: 38, scope: !16546)
!16549 = !DILocation(line: 522, column: 5, scope: !16547)
!16550 = !DILocation(line: 523, column: 31, scope: !16551)
!16551 = distinct !DILexicalBlock(scope: !16546, file: !2706, line: 522, column: 51)
!16552 = !DILocation(line: 523, column: 37, scope: !16551)
!16553 = !DILocation(line: 523, column: 16, scope: !16551)
!16554 = !DILocation(line: 522, column: 45, scope: !16546)
!16555 = distinct !{!16555, !16549, !16556}
!16556 = !DILocation(line: 524, column: 5, scope: !16547)
!16557 = !DILocation(line: 525, column: 5, scope: !16535)
!16558 = distinct !DISubprogram(name: "CMEM_NOR_Construct_RegionInfo_Internal", scope: !2706, file: !2706, line: 535, type: !16559, scopeLine: 540, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2705, retainedNodes: !16561)
!16559 = !DISubroutineType(types: !16560)
!16560 = !{!61, !61, !61, !2721, !2895}
!16561 = !{!16562, !16563, !16564, !16565, !16566, !16567, !16568, !16569, !16570}
!16562 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !16558, file: !2706, line: 536, type: !61)
!16563 = !DILocalVariable(name: "length", arg: 2, scope: !16558, file: !2706, line: 537, type: !61)
!16564 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !16558, file: !2706, line: 538, type: !2721)
!16565 = !DILocalVariable(name: "blocklayout", arg: 4, scope: !16558, file: !2706, line: 539, type: !2895)
!16566 = !DILocalVariable(name: "addr", scope: !16558, file: !2706, line: 541, type: !61)
!16567 = !DILocalVariable(name: "ptr", scope: !16558, file: !2706, line: 541, type: !61)
!16568 = !DILocalVariable(name: "blksize", scope: !16558, file: !2706, line: 541, type: !61)
!16569 = !DILocalVariable(name: "total_blocks", scope: !16558, file: !2706, line: 541, type: !61)
!16570 = !DILocalVariable(name: "endaddr", scope: !16558, file: !2706, line: 542, type: !61)
!16571 = !DILocation(line: 0, scope: !16558)
!16572 = !DILocation(line: 542, column: 33, scope: !16558)
!16573 = !DILocation(line: 557, column: 59, scope: !16574)
!16574 = distinct !DILexicalBlock(scope: !16575, file: !2706, line: 557, column: 5)
!16575 = distinct !DILexicalBlock(scope: !16558, file: !2706, line: 557, column: 5)
!16576 = !DILocation(line: 557, column: 5, scope: !16575)
!16577 = !DILocation(line: 560, column: 19, scope: !16578)
!16578 = distinct !DILexicalBlock(scope: !16574, file: !2706, line: 559, column: 5)
!16579 = !DILocation(line: 562, column: 26, scope: !16580)
!16580 = distinct !DILexicalBlock(scope: !16578, file: !2706, line: 562, column: 13)
!16581 = !DILocation(line: 0, scope: !16580)
!16582 = !DILocation(line: 562, column: 13, scope: !16578)
!16583 = !DILocation(line: 563, column: 39, scope: !16584)
!16584 = distinct !DILexicalBlock(scope: !16580, file: !2706, line: 562, column: 34)
!16585 = !DILocation(line: 564, column: 29, scope: !16584)
!16586 = !DILocation(line: 564, column: 42, scope: !16584)
!16587 = !DILocation(line: 565, column: 9, scope: !16584)
!16588 = !DILocation(line: 567, column: 45, scope: !16589)
!16589 = distinct !DILexicalBlock(scope: !16580, file: !2706, line: 567, column: 18)
!16590 = !DILocation(line: 567, column: 26, scope: !16589)
!16591 = !DILocation(line: 567, column: 18, scope: !16580)
!16592 = !DILocation(line: 568, column: 29, scope: !16593)
!16593 = distinct !DILexicalBlock(scope: !16589, file: !2706, line: 567, column: 59)
!16594 = !DILocation(line: 568, column: 41, scope: !16593)
!16595 = !DILocation(line: 569, column: 9, scope: !16593)
!16596 = !DILocation(line: 572, column: 16, scope: !16597)
!16597 = distinct !DILexicalBlock(scope: !16589, file: !2706, line: 571, column: 14)
!16598 = !DILocation(line: 573, column: 21, scope: !16599)
!16599 = distinct !DILexicalBlock(scope: !16597, file: !2706, line: 573, column: 17)
!16600 = !DILocation(line: 573, column: 17, scope: !16597)
!16601 = !DILocation(line: 576, column: 29, scope: !16597)
!16602 = !DILocation(line: 576, column: 39, scope: !16597)
!16603 = !DILocation(line: 577, column: 29, scope: !16597)
!16604 = !DILocation(line: 577, column: 42, scope: !16597)
!16605 = !DILocation(line: 0, scope: !16575)
!16606 = !DILocation(line: 579, column: 14, scope: !16578)
!16607 = !DILocation(line: 580, column: 21, scope: !16578)
!16608 = distinct !{!16608, !16576, !16609}
!16609 = !DILocation(line: 581, column: 5, scope: !16575)
!16610 = !DILocation(line: 586, column: 1, scope: !16558)
!16611 = distinct !DISubprogram(name: "NOR_Construct_RegionInfo", scope: !2706, file: !2706, line: 593, type: !16612, scopeLine: 594, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2705, retainedNodes: !16614)
!16612 = !DISubroutineType(types: !16613)
!16613 = !{!1349, !61, !61, !2721}
!16614 = !{!16615, !16616, !16617}
!16615 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !16611, file: !2706, line: 593, type: !61)
!16616 = !DILocalVariable(name: "length", arg: 2, scope: !16611, file: !2706, line: 593, type: !61)
!16617 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !16611, file: !2706, line: 593, type: !2721)
!16618 = !DILocation(line: 0, scope: !16611)
!16619 = !DILocation(line: 595, column: 12, scope: !16611)
!16620 = !DILocation(line: 595, column: 5, scope: !16611)
!16621 = !DILocation(line: 597, column: 81, scope: !16611)
!16622 = !DILocation(line: 597, column: 12, scope: !16611)
!16623 = !DILocation(line: 597, column: 5, scope: !16611)
!16624 = distinct !DISubprogram(name: "NOR_Construct_DualRegionInfo", scope: !2706, file: !2706, line: 606, type: !16612, scopeLine: 607, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2705, retainedNodes: !16625)
!16625 = !{!16626, !16627, !16628}
!16626 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !16624, file: !2706, line: 606, type: !61)
!16627 = !DILocalVariable(name: "length", arg: 2, scope: !16624, file: !2706, line: 606, type: !61)
!16628 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !16624, file: !2706, line: 606, type: !2721)
!16629 = !DILocation(line: 0, scope: !16624)
!16630 = !DILocation(line: 624, column: 5, scope: !16624)
!16631 = distinct !DISubprogram(name: "EMIINIT_CMEM_NOR_Construct_RegionInfo", scope: !2706, file: !2706, line: 637, type: !16612, scopeLine: 638, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2705, retainedNodes: !16632)
!16632 = !{!16633, !16634, !16635, !16636, !16637}
!16633 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !16631, file: !2706, line: 637, type: !61)
!16634 = !DILocalVariable(name: "length", arg: 2, scope: !16631, file: !2706, line: 637, type: !61)
!16635 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !16631, file: !2706, line: 637, type: !2721)
!16636 = !DILocalVariable(name: "index", scope: !16631, file: !2706, line: 642, type: !61)
!16637 = !DILocalVariable(name: "list", scope: !16631, file: !2706, line: 644, type: !3023)
!16638 = !DILocation(line: 0, scope: !16631)
!16639 = !DILocation(line: 642, column: 22, scope: !16631)
!16640 = !DILocation(line: 648, column: 81, scope: !16631)
!16641 = !DILocation(line: 648, column: 12, scope: !16631)
!16642 = !DILocation(line: 648, column: 5, scope: !16631)
!16643 = distinct !DISubprogram(name: "EMIINIT_CMEM_NOR_Construct_DualRegionInfo", scope: !2706, file: !2706, line: 658, type: !16612, scopeLine: 659, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2705, retainedNodes: !16644)
!16644 = !{!16645, !16646, !16647}
!16645 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !16643, file: !2706, line: 658, type: !61)
!16646 = !DILocalVariable(name: "length", arg: 2, scope: !16643, file: !2706, line: 658, type: !61)
!16647 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !16643, file: !2706, line: 658, type: !2721)
!16648 = !DILocation(line: 0, scope: !16643)
!16649 = !DILocation(line: 688, column: 5, scope: !16643)
!16650 = distinct !DISubprogram(name: "EMIINIT_CMEM_NOR_GetUniformBlock", scope: !2706, file: !2706, line: 700, type: !13997, scopeLine: 701, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2705, retainedNodes: !16651)
!16651 = !{!16652, !16653, !16654}
!16652 = !DILocalVariable(name: "CS", arg: 1, scope: !16650, file: !2706, line: 700, type: !13930)
!16653 = !DILocalVariable(name: "index", scope: !16650, file: !2706, line: 705, type: !61)
!16654 = !DILocalVariable(name: "list", scope: !16650, file: !2706, line: 707, type: !3023)
!16655 = !DILocation(line: 0, scope: !16650)
!16656 = !DILocation(line: 705, column: 22, scope: !16650)
!16657 = !DILocation(line: 711, column: 24, scope: !16650)
!16658 = !DILocation(line: 711, column: 5, scope: !16650)
!16659 = distinct !DISubprogram(name: "CMEM_NOR_AddBankInfo", scope: !2706, file: !2706, line: 721, type: !16660, scopeLine: 722, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2705, retainedNodes: !16662)
!16660 = !DISubroutineType(types: !16661)
!16661 = !{null, !2941, !1716, !61}
!16662 = !{!16663, !16664, !16665}
!16663 = !DILocalVariable(name: "bankInfo", arg: 1, scope: !16659, file: !2706, line: 721, type: !2941)
!16664 = !DILocalVariable(name: "index", arg: 2, scope: !16659, file: !2706, line: 721, type: !1716)
!16665 = !DILocalVariable(name: "bankSize", arg: 3, scope: !16659, file: !2706, line: 721, type: !61)
!16666 = !DILocation(line: 0, scope: !16659)
!16667 = !DILocation(line: 723, column: 18, scope: !16668)
!16668 = distinct !DILexicalBlock(scope: !16659, file: !2706, line: 723, column: 9)
!16669 = !DILocation(line: 723, column: 26, scope: !16668)
!16670 = !DILocation(line: 723, column: 35, scope: !16668)
!16671 = !DILocation(line: 723, column: 9, scope: !16659)
!16672 = !DILocation(line: 724, column: 26, scope: !16673)
!16673 = distinct !DILexicalBlock(scope: !16668, file: !2706, line: 723, column: 48)
!16674 = !DILocation(line: 724, column: 32, scope: !16673)
!16675 = !DILocation(line: 725, column: 5, scope: !16673)
!16676 = !DILocation(line: 726, column: 18, scope: !16677)
!16677 = distinct !DILexicalBlock(scope: !16668, file: !2706, line: 725, column: 12)
!16678 = !DILocation(line: 727, column: 26, scope: !16677)
!16679 = !DILocation(line: 727, column: 32, scope: !16677)
!16680 = !DILocation(line: 728, column: 18, scope: !16677)
!16681 = !DILocation(line: 728, column: 26, scope: !16677)
!16682 = !DILocation(line: 728, column: 35, scope: !16677)
!16683 = !DILocation(line: 731, column: 1, scope: !16659)
!16684 = distinct !DISubprogram(name: "CMEM_NOR_Construct_BankInfo", scope: !2706, file: !2706, line: 739, type: !16685, scopeLine: 744, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2705, retainedNodes: !16687)
!16685 = !DISubroutineType(types: !16686)
!16686 = !{!61, !61, !61, !2941, !16538}
!16687 = !{!16688, !16689, !16690, !16691, !16692, !16693, !16694, !16695, !16696}
!16688 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !16684, file: !2706, line: 740, type: !61)
!16689 = !DILocalVariable(name: "length", arg: 2, scope: !16684, file: !2706, line: 741, type: !61)
!16690 = !DILocalVariable(name: "bankInfo", arg: 3, scope: !16684, file: !2706, line: 742, type: !2941)
!16691 = !DILocalVariable(name: "cmemBankInfo", arg: 4, scope: !16684, file: !2706, line: 743, type: !16538)
!16692 = !DILocalVariable(name: "Partition", scope: !16684, file: !2706, line: 745, type: !61)
!16693 = !DILocalVariable(name: "Index", scope: !16684, file: !2706, line: 746, type: !1349)
!16694 = !DILocalVariable(name: "bankSize", scope: !16684, file: !2706, line: 747, type: !61)
!16695 = !DILocalVariable(name: "NextBankAddr", scope: !16684, file: !2706, line: 748, type: !61)
!16696 = !DILocalVariable(name: "srcBankIdx", scope: !16684, file: !2706, line: 748, type: !61)
!16697 = !DILocation(line: 0, scope: !16684)
!16698 = !DILocation(line: 750, column: 12, scope: !16684)
!16699 = !DILocation(line: 750, column: 5, scope: !16684)
!16700 = !DILocation(line: 752, column: 51, scope: !16701)
!16701 = distinct !DILexicalBlock(scope: !16702, file: !2706, line: 752, column: 5)
!16702 = distinct !DILexicalBlock(scope: !16684, file: !2706, line: 752, column: 5)
!16703 = !DILocation(line: 752, column: 5, scope: !16702)
!16704 = !DILocation(line: 753, column: 51, scope: !16705)
!16705 = distinct !DILexicalBlock(scope: !16706, file: !2706, line: 753, column: 13)
!16706 = distinct !DILexicalBlock(scope: !16701, file: !2706, line: 752, column: 70)
!16707 = !DILocation(line: 753, column: 24, scope: !16705)
!16708 = !DILocation(line: 753, column: 13, scope: !16706)
!16709 = !DILocation(line: 758, column: 49, scope: !16706)
!16710 = !DILocation(line: 758, column: 22, scope: !16706)
!16711 = !DILocation(line: 760, column: 22, scope: !16712)
!16712 = distinct !DILexicalBlock(scope: !16706, file: !2706, line: 760, column: 13)
!16713 = !DILocation(line: 760, column: 13, scope: !16706)
!16714 = !DILocation(line: 761, column: 37, scope: !16715)
!16715 = distinct !DILexicalBlock(scope: !16712, file: !2706, line: 760, column: 39)
!16716 = !DILocation(line: 762, column: 24, scope: !16717)
!16717 = distinct !DILexicalBlock(scope: !16715, file: !2706, line: 762, column: 17)
!16718 = !DILocation(line: 762, column: 17, scope: !16715)
!16719 = !DILocation(line: 767, column: 33, scope: !16720)
!16720 = distinct !DILexicalBlock(scope: !16715, file: !2706, line: 767, column: 17)
!16721 = !DILocation(line: 767, column: 42, scope: !16720)
!16722 = !DILocation(line: 767, column: 17, scope: !16715)
!16723 = !DILocation(line: 768, column: 33, scope: !16724)
!16724 = distinct !DILexicalBlock(scope: !16720, file: !2706, line: 767, column: 55)
!16725 = !DILocation(line: 768, column: 39, scope: !16724)
!16726 = !DILocation(line: 769, column: 13, scope: !16724)
!16727 = !DILocation(line: 770, column: 46, scope: !16728)
!16728 = distinct !DILexicalBlock(scope: !16729, file: !2706, line: 770, column: 21)
!16729 = distinct !DILexicalBlock(scope: !16720, file: !2706, line: 769, column: 20)
!16730 = !DILocation(line: 770, column: 21, scope: !16729)
!16731 = !DILocation(line: 773, column: 33, scope: !16729)
!16732 = !DILocation(line: 773, column: 39, scope: !16729)
!16733 = !DILocation(line: 774, column: 33, scope: !16729)
!16734 = !DILocation(line: 774, column: 42, scope: !16729)
!16735 = !DILocation(line: 777, column: 22, scope: !16715)
!16736 = !DILocation(line: 778, column: 20, scope: !16715)
!16737 = !DILocation(line: 779, column: 9, scope: !16715)
!16738 = !DILocation(line: 746, column: 13, scope: !16684)
!16739 = !DILocation(line: 752, column: 66, scope: !16701)
!16740 = distinct !{!16740, !16703, !16741}
!16741 = !DILocation(line: 781, column: 5, scope: !16702)
!16742 = !DILocation(line: 784, column: 5, scope: !16684)
!16743 = distinct !DISubprogram(name: "CMEM_Init_NOR", scope: !2706, file: !2706, line: 796, type: !14563, scopeLine: 797, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2705, retainedNodes: !16744)
!16744 = !{!16745, !16746}
!16745 = !DILocalVariable(name: "result", scope: !16743, file: !2706, line: 798, type: !1349)
!16746 = !DILocalVariable(name: "i", scope: !16743, file: !2706, line: 799, type: !1349)
!16747 = !DILocation(line: 803, column: 19, scope: !16743)
!16748 = !DILocation(line: 803, column: 28, scope: !16743)
!16749 = !DILocation(line: 803, column: 17, scope: !16743)
!16750 = !DILocation(line: 822, column: 33, scope: !16743)
!16751 = !DILocation(line: 822, column: 56, scope: !16743)
!16752 = !DILocation(line: 822, column: 88, scope: !16743)
!16753 = !DILocation(line: 822, column: 97, scope: !16743)
!16754 = !DILocation(line: 822, column: 5, scope: !16743)
!16755 = !DILocation(line: 829, column: 39, scope: !16743)
!16756 = !DILocation(line: 829, column: 62, scope: !16743)
!16757 = !DILocation(line: 829, column: 14, scope: !16743)
!16758 = !DILocation(line: 0, scope: !16743)
!16759 = !DILocation(line: 834, column: 16, scope: !16760)
!16760 = distinct !DILexicalBlock(scope: !16743, file: !2706, line: 834, column: 9)
!16761 = !DILocation(line: 834, column: 9, scope: !16743)
!16762 = !DILocation(line: 838, column: 30, scope: !16763)
!16763 = distinct !DILexicalBlock(scope: !16743, file: !2706, line: 838, column: 5)
!16764 = !DILocation(line: 838, column: 58, scope: !16763)
!16765 = !DILocation(line: 838, column: 78, scope: !16766)
!16766 = distinct !DILexicalBlock(scope: !16763, file: !2706, line: 838, column: 5)
!16767 = !DILocation(line: 838, column: 88, scope: !16766)
!16768 = !DILocation(line: 838, column: 5, scope: !16763)
!16769 = !DILocation(line: 839, column: 39, scope: !16770)
!16770 = distinct !DILexicalBlock(scope: !16766, file: !2706, line: 838, column: 102)
!16771 = !DILocation(line: 839, column: 22, scope: !16770)
!16772 = !DILocation(line: 840, column: 37, scope: !16773)
!16773 = distinct !DILexicalBlock(scope: !16770, file: !2706, line: 840, column: 13)
!16774 = !DILocation(line: 840, column: 13, scope: !16770)
!16775 = !DILocation(line: 841, column: 36, scope: !16776)
!16776 = distinct !DILexicalBlock(scope: !16773, file: !2706, line: 840, column: 63)
!16777 = !DILocation(line: 842, column: 9, scope: !16776)
!16778 = !DILocation(line: 838, column: 95, scope: !16766)
!16779 = distinct !{!16779, !16768, !16780}
!16780 = !DILocation(line: 843, column: 5, scope: !16763)
!16781 = !DILocation(line: 871, column: 49, scope: !16743)
!16782 = !DILocation(line: 871, column: 72, scope: !16743)
!16783 = !DILocation(line: 871, column: 47, scope: !16743)
!16784 = !DILocation(line: 871, column: 97, scope: !16743)
!16785 = !DILocation(line: 871, column: 19, scope: !16743)
!16786 = !DILocation(line: 882, column: 14, scope: !16743)
!16787 = !DILocation(line: 887, column: 13, scope: !16743)
!16788 = !DILocation(line: 887, column: 22, scope: !16743)
!16789 = !DILocation(line: 887, column: 5, scope: !16743)
!16790 = !DILocation(line: 889, column: 22, scope: !16791)
!16791 = distinct !DILexicalBlock(scope: !16743, file: !2706, line: 887, column: 34)
!16792 = !DILocation(line: 890, column: 13, scope: !16791)
!16793 = !DILocation(line: 902, column: 1, scope: !16743)
!16794 = distinct !DISubprogram(name: "CMEM_Init_nor_list", scope: !2706, file: !2706, line: 912, type: !16795, scopeLine: 913, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2705, retainedNodes: !16797)
!16795 = !DISubroutineType(types: !16796)
!16796 = !{null, !1065}
!16797 = !{!16798}
!16798 = !DILocalVariable(name: "CS", arg: 1, scope: !16794, file: !2706, line: 912, type: !1065)
!16799 = !DILocation(line: 0, scope: !16794)
!16800 = !DILocation(line: 914, column: 12, scope: !16801)
!16801 = distinct !DILexicalBlock(scope: !16794, file: !2706, line: 914, column: 9)
!16802 = !DILocation(line: 914, column: 9, scope: !16794)
!16803 = !DILocation(line: 918, column: 26, scope: !16804)
!16804 = distinct !DILexicalBlock(scope: !16801, file: !2706, line: 914, column: 18)
!16805 = !DILocation(line: 918, column: 24, scope: !16804)
!16806 = !DILocation(line: 920, column: 28, scope: !16807)
!16807 = distinct !DILexicalBlock(scope: !16804, file: !2706, line: 920, column: 13)
!16808 = !DILocation(line: 920, column: 13, scope: !16804)
!16809 = !DILocation(line: 921, column: 13, scope: !16810)
!16810 = distinct !DILexicalBlock(scope: !16811, file: !2706, line: 921, column: 13)
!16811 = distinct !DILexicalBlock(scope: !16812, file: !2706, line: 921, column: 13)
!16812 = distinct !DILexicalBlock(scope: !16813, file: !2706, line: 921, column: 13)
!16813 = distinct !DILexicalBlock(scope: !16807, file: !2706, line: 920, column: 33)
!16814 = !DILocation(line: 923, column: 19, scope: !16804)
!16815 = !DILocation(line: 923, column: 17, scope: !16804)
!16816 = !DILocation(line: 924, column: 5, scope: !16804)
!16817 = !DILocation(line: 935, column: 14, scope: !16794)
!16818 = !DILocation(line: 936, column: 1, scope: !16794)
!16819 = distinct !DISubprogram(name: "ComboMem_Initialize", scope: !2706, file: !2706, line: 952, type: !14563, scopeLine: 953, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2705, retainedNodes: !345)
!16820 = !DILocation(line: 955, column: 5, scope: !16819)
!16821 = !DILocation(line: 956, column: 12, scope: !16819)
!16822 = !DILocation(line: 956, column: 5, scope: !16819)
!16823 = distinct !DISubprogram(name: "CMEM_Init_FullDriver", scope: !2706, file: !2706, line: 974, type: !14563, scopeLine: 975, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2705, retainedNodes: !16824)
!16824 = !{!16825}
!16825 = !DILocalVariable(name: "result", scope: !16823, file: !2706, line: 976, type: !1349)
!16826 = !DILocation(line: 981, column: 5, scope: !16823)
!16827 = !DILocation(line: 986, column: 24, scope: !16823)
!16828 = !DILocation(line: 986, column: 33, scope: !16823)
!16829 = !DILocation(line: 986, column: 49, scope: !16823)
!16830 = !DILocation(line: 986, column: 22, scope: !16823)
!16831 = !DILocation(line: 1002, column: 19, scope: !16823)
!16832 = !DILocation(line: 1002, column: 17, scope: !16823)
!16833 = !DILocation(line: 1014, column: 22, scope: !16823)
!16834 = !DILocation(line: 1014, column: 5, scope: !16823)
!16835 = !DILocation(line: 1024, column: 33, scope: !16823)
!16836 = !DILocation(line: 1026, column: 27, scope: !16823)
!16837 = !DILocation(line: 1027, column: 26, scope: !16823)
!16838 = !DILocation(line: 1042, column: 33, scope: !16823)
!16839 = !DILocation(line: 1044, column: 32, scope: !16823)
!16840 = !DILocation(line: 1052, column: 18, scope: !16823)
!16841 = !DILocation(line: 1052, column: 27, scope: !16823)
!16842 = !DILocation(line: 1052, column: 43, scope: !16823)
!16843 = !DILocation(line: 1048, column: 14, scope: !16823)
!16844 = !DILocation(line: 0, scope: !16823)
!16845 = !DILocation(line: 1063, column: 5, scope: !16846)
!16846 = distinct !DILexicalBlock(scope: !16847, file: !2706, line: 1063, column: 5)
!16847 = distinct !DILexicalBlock(scope: !16823, file: !2706, line: 1063, column: 5)
!16848 = !DILocation(line: 1063, column: 5, scope: !16847)
!16849 = !DILocation(line: 1063, column: 5, scope: !16850)
!16850 = distinct !DILexicalBlock(scope: !16846, file: !2706, line: 1063, column: 5)
!16851 = !DILocation(line: 1096, column: 36, scope: !16823)
!16852 = !DILocation(line: 1096, column: 34, scope: !16823)
!16853 = !DILocation(line: 1101, column: 5, scope: !16823)
!16854 = !DILocation(line: 1103, column: 34, scope: !16823)
!16855 = !DILocation(line: 1109, column: 35, scope: !16823)
!16856 = !DILocation(line: 1110, column: 33, scope: !16823)
!16857 = !DILocation(line: 1111, column: 34, scope: !16823)
!16858 = !DILocation(line: 1113, column: 5, scope: !16823)
!16859 = distinct !DISubprogram(name: "CreateFDMLock", scope: !3064, file: !3064, line: 84, type: !343, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3063, retainedNodes: !345)
!16860 = !DILocation(line: 86, column: 1, scope: !16859)
!16861 = distinct !DISubprogram(name: "GetFDMLock", scope: !3064, file: !3064, line: 87, type: !15029, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3063, retainedNodes: !16862)
!16862 = !{!16863}
!16863 = !DILocalVariable(name: "savedMask", scope: !16861, file: !3064, line: 89, type: !1349)
!16864 = !DILocation(line: 90, column: 17, scope: !16861)
!16865 = !DILocation(line: 0, scope: !16861)
!16866 = !DILocation(line: 91, column: 9, scope: !16867)
!16867 = distinct !DILexicalBlock(scope: !16861, file: !3064, line: 91, column: 9)
!16868 = !DILocation(line: 91, column: 9, scope: !16861)
!16869 = !DILocation(line: 92, column: 17, scope: !16870)
!16870 = distinct !DILexicalBlock(scope: !16867, file: !3064, line: 91, column: 24)
!16871 = !DILocation(line: 94, column: 9, scope: !16870)
!16872 = !DILocation(line: 0, scope: !16867)
!16873 = !DILocation(line: 102, column: 1, scope: !16861)
!16874 = distinct !DISubprogram(name: "FreeFDMLock", scope: !3064, file: !3064, line: 103, type: !343, scopeLine: 104, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3063, retainedNodes: !16875)
!16875 = !{!16876}
!16876 = !DILocalVariable(name: "savedMask", scope: !16874, file: !3064, line: 105, type: !1349)
!16877 = !DILocation(line: 106, column: 17, scope: !16874)
!16878 = !DILocation(line: 0, scope: !16874)
!16879 = !DILocation(line: 107, column: 9, scope: !16880)
!16880 = distinct !DILexicalBlock(scope: !16874, file: !3064, line: 107, column: 9)
!16881 = !DILocation(line: 107, column: 9, scope: !16874)
!16882 = !DILocation(line: 108, column: 17, scope: !16883)
!16883 = distinct !DILexicalBlock(scope: !16880, file: !3064, line: 107, column: 24)
!16884 = !DILocation(line: 109, column: 9, scope: !16883)
!16885 = !DILocation(line: 114, column: 1, scope: !16874)
!16886 = !DILocation(line: 111, column: 9, scope: !16887)
!16887 = distinct !DILexicalBlock(scope: !16880, file: !3064, line: 110, column: 12)
!16888 = !DILocation(line: 112, column: 9, scope: !16889)
!16889 = distinct !DILexicalBlock(scope: !16890, file: !3064, line: 112, column: 9)
!16890 = distinct !DILexicalBlock(scope: !16891, file: !3064, line: 112, column: 9)
!16891 = distinct !DILexicalBlock(scope: !16887, file: !3064, line: 112, column: 9)
!16892 = distinct !DISubprogram(name: "create_FDM_lock", scope: !3064, file: !3064, line: 119, type: !343, scopeLine: 120, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3063, retainedNodes: !345)
!16893 = !DILocation(line: 123, column: 1, scope: !16892)
!16894 = distinct !DISubprogram(name: "retrieve_FDM_lock", scope: !3064, file: !3064, line: 130, type: !343, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3063, retainedNodes: !16895)
!16895 = !{!16896}
!16896 = !DILocalVariable(name: "Result", scope: !16894, file: !3064, line: 132, type: !3120)
!16897 = !DILocation(line: 133, column: 5, scope: !16894)
!16898 = !DILocation(line: 134, column: 18, scope: !16899)
!16899 = distinct !DILexicalBlock(scope: !16894, file: !3064, line: 133, column: 8)
!16900 = !DILocation(line: 0, scope: !16894)
!16901 = !DILocation(line: 135, column: 21, scope: !16894)
!16902 = !DILocation(line: 135, column: 5, scope: !16899)
!16903 = distinct !{!16903, !16897, !16904}
!16904 = !DILocation(line: 135, column: 43, scope: !16894)
!16905 = !DILocation(line: 136, column: 1, scope: !16894)
!16906 = distinct !DISubprogram(name: "release_FDM_lock", scope: !3064, file: !3064, line: 143, type: !343, scopeLine: 144, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3063, retainedNodes: !345)
!16907 = !DILocation(line: 147, column: 5, scope: !16906)
!16908 = !DILocation(line: 148, column: 1, scope: !16906)
!16909 = distinct !DISubprogram(name: "readRawDiskData", scope: !3064, file: !3064, line: 216, type: !16910, scopeLine: 217, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3063, retainedNodes: !16951)
!16910 = !DISubroutineType(types: !16911)
!16911 = !{!1349, !16912, !61, !1055, !61}
!16912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16913, size: 32)
!16913 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_FLASH_DISK_Data", file: !3011, line: 93, baseType: !16914)
!16914 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3011, line: 83, size: 1056, elements: !16915)
!16915 = !{!16916, !16917, !16937, !16938, !16950}
!16916 = !DIDerivedType(tag: DW_TAG_member, name: "DiskSize", scope: !16914, file: !3011, line: 84, baseType: !61, size: 32)
!16917 = !DIDerivedType(tag: DW_TAG_member, name: "MTDDriver", scope: !16914, file: !3011, line: 85, baseType: !16918, size: 32, offset: 32)
!16918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16919, size: 32)
!16919 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_Driver", file: !2486, line: 121, baseType: !16920)
!16920 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2486, line: 105, size: 480, elements: !16921)
!16921 = !{!16922, !16923, !16924, !16925, !16926, !16927, !16928, !16929, !16930, !16931, !16932, !16933, !16934, !16935, !16936}
!16922 = !DIDerivedType(tag: DW_TAG_member, name: "MountDevice", scope: !16920, file: !2486, line: 106, baseType: !2752, size: 32)
!16923 = !DIDerivedType(tag: DW_TAG_member, name: "ShutDown", scope: !16920, file: !2486, line: 107, baseType: !2558, size: 32, offset: 32)
!16924 = !DIDerivedType(tag: DW_TAG_member, name: "MapWindow", scope: !16920, file: !2486, line: 108, baseType: !2757, size: 32, offset: 64)
!16925 = !DIDerivedType(tag: DW_TAG_member, name: "EraseBlock", scope: !16920, file: !2486, line: 109, baseType: !2761, size: 32, offset: 96)
!16926 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramData", scope: !16920, file: !2486, line: 110, baseType: !2765, size: 32, offset: 128)
!16927 = !DIDerivedType(tag: DW_TAG_member, name: "NonBlockEraseBlock", scope: !16920, file: !2486, line: 111, baseType: !2761, size: 32, offset: 160)
!16928 = !DIDerivedType(tag: DW_TAG_member, name: "CheckDeviceReady", scope: !16920, file: !2486, line: 112, baseType: !2770, size: 32, offset: 192)
!16929 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendErase", scope: !16920, file: !2486, line: 113, baseType: !2761, size: 32, offset: 224)
!16930 = !DIDerivedType(tag: DW_TAG_member, name: "ResumeErase", scope: !16920, file: !2486, line: 114, baseType: !2761, size: 32, offset: 256)
!16931 = !DIDerivedType(tag: DW_TAG_member, name: "BlankCheck", scope: !16920, file: !2486, line: 115, baseType: !2761, size: 32, offset: 288)
!16932 = !DIDerivedType(tag: DW_TAG_member, name: "OTPAccess", scope: !16920, file: !2486, line: 116, baseType: !2777, size: 32, offset: 320)
!16933 = !DIDerivedType(tag: DW_TAG_member, name: "OTPQueryLength", scope: !16920, file: !2486, line: 117, baseType: !2782, size: 32, offset: 352)
!16934 = !DIDerivedType(tag: DW_TAG_member, name: "LockEraseBlkAddr", scope: !16920, file: !2486, line: 118, baseType: !2787, size: 32, offset: 384)
!16935 = !DIDerivedType(tag: DW_TAG_member, name: "IsEraseSuspended", scope: !16920, file: !2486, line: 119, baseType: !2791, size: 32, offset: 416)
!16936 = !DIDerivedType(tag: DW_TAG_member, name: "IOCtrl", scope: !16920, file: !2486, line: 120, baseType: !2795, size: 32, offset: 448)
!16937 = !DIDerivedType(tag: DW_TAG_member, name: "MTDData", scope: !16914, file: !3011, line: 86, baseType: !88, size: 32, offset: 64)
!16938 = !DIDerivedType(tag: DW_TAG_member, name: "FlashInfo", scope: !16914, file: !3011, line: 87, baseType: !16939, size: 928, offset: 96)
!16939 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_FlashInfo", file: !2486, line: 99, baseType: !16940)
!16940 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2486, line: 90, size: 928, elements: !16941)
!16941 = !{!16942, !16943, !16944, !16945, !16946, !16947, !16948, !16949}
!16942 = !DIDerivedType(tag: DW_TAG_member, name: "TotalBlocks", scope: !16940, file: !2486, line: 91, baseType: !61, size: 32)
!16943 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !16940, file: !2486, line: 92, baseType: !2809, size: 256, offset: 32)
!16944 = !DIDerivedType(tag: DW_TAG_member, name: "AvailInRegion", scope: !16940, file: !2486, line: 93, baseType: !2809, size: 256, offset: 288)
!16945 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !16940, file: !2486, line: 94, baseType: !2809, size: 256, offset: 544)
!16946 = !DIDerivedType(tag: DW_TAG_member, name: "ActualRegionNum", scope: !16940, file: !2486, line: 95, baseType: !61, size: 32, offset: 800)
!16947 = !DIDerivedType(tag: DW_TAG_member, name: "PageSize", scope: !16940, file: !2486, line: 96, baseType: !2801, size: 16, offset: 832)
!16948 = !DIDerivedType(tag: DW_TAG_member, name: "baseUnlockBlock", scope: !16940, file: !2486, line: 97, baseType: !61, size: 32, offset: 864)
!16949 = !DIDerivedType(tag: DW_TAG_member, name: "endUnlockBlock", scope: !16940, file: !2486, line: 98, baseType: !61, size: 32, offset: 896)
!16950 = !DIDerivedType(tag: DW_TAG_member, name: "is_mount", scope: !16914, file: !3011, line: 92, baseType: !91, size: 8, offset: 1024)
!16951 = !{!16952, !16953, !16954, !16955, !16956, !16957}
!16952 = !DILocalVariable(name: "D", arg: 1, scope: !16909, file: !3064, line: 216, type: !16912)
!16953 = !DILocalVariable(name: "addr", arg: 2, scope: !16909, file: !3064, line: 216, type: !61)
!16954 = !DILocalVariable(name: "data_ptr", arg: 3, scope: !16909, file: !3064, line: 216, type: !1055)
!16955 = !DILocalVariable(name: "len", arg: 4, scope: !16909, file: !3064, line: 216, type: !61)
!16956 = !DILocalVariable(name: "phyAddr", scope: !16909, file: !3064, line: 219, type: !61)
!16957 = !DILocalVariable(name: "diskSize", scope: !16909, file: !3064, line: 220, type: !61)
!16958 = !DILocation(line: 0, scope: !16909)
!16959 = !DILocation(line: 220, column: 28, scope: !16909)
!16960 = !DILocation(line: 222, column: 14, scope: !16961)
!16961 = distinct !DILexicalBlock(scope: !16909, file: !3064, line: 222, column: 9)
!16962 = !DILocation(line: 222, column: 26, scope: !16961)
!16963 = !DILocation(line: 225, column: 51, scope: !16909)
!16964 = !DILocation(line: 225, column: 61, scope: !16909)
!16965 = !DILocation(line: 225, column: 15, scope: !16909)
!16966 = !DILocation(line: 225, column: 70, scope: !16909)
!16967 = !DILocation(line: 227, column: 13, scope: !16968)
!16968 = distinct !DILexicalBlock(scope: !16909, file: !3064, line: 227, column: 9)
!16969 = !DILocation(line: 227, column: 9, scope: !16909)
!16970 = !DILocation(line: 228, column: 9, scope: !16971)
!16971 = distinct !DILexicalBlock(scope: !16968, file: !3064, line: 227, column: 23)
!16972 = !DILocation(line: 229, column: 5, scope: !16971)
!16973 = !DILocation(line: 231, column: 5, scope: !16909)
!16974 = !DILocation(line: 233, column: 22, scope: !16909)
!16975 = !DILocation(line: 233, column: 5, scope: !16909)
!16976 = !DILocation(line: 235, column: 5, scope: !16909)
!16977 = !DILocation(line: 237, column: 5, scope: !16909)
!16978 = !DILocation(line: 238, column: 1, scope: !16909)
!16979 = distinct !DISubprogram(name: "MountDevice", scope: !3064, file: !3064, line: 165, type: !16980, scopeLine: 166, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3063, retainedNodes: !16982)
!16980 = !DISubroutineType(types: !16981)
!16981 = !{null, !16912}
!16982 = !{!16983, !16984}
!16983 = !DILocalVariable(name: "D", arg: 1, scope: !16979, file: !3064, line: 165, type: !16912)
!16984 = !DILocalVariable(name: "Result", scope: !16979, file: !3064, line: 167, type: !1349)
!16985 = !DILocation(line: 0, scope: !16979)
!16986 = !DILocation(line: 171, column: 12, scope: !16987)
!16987 = distinct !DILexicalBlock(scope: !16979, file: !3064, line: 171, column: 9)
!16988 = !DILocation(line: 171, column: 9, scope: !16979)
!16989 = !DILocation(line: 176, column: 5, scope: !16979)
!16990 = !DILocation(line: 186, column: 17, scope: !16979)
!16991 = !DILocation(line: 186, column: 28, scope: !16979)
!16992 = !DILocation(line: 186, column: 43, scope: !16979)
!16993 = !DILocation(line: 186, column: 64, scope: !16979)
!16994 = !DILocation(line: 186, column: 52, scope: !16979)
!16995 = !DILocation(line: 186, column: 14, scope: !16979)
!16996 = !DILocation(line: 188, column: 5, scope: !16979)
!16997 = !DILocation(line: 190, column: 16, scope: !16998)
!16998 = distinct !DILexicalBlock(scope: !16979, file: !3064, line: 190, column: 9)
!16999 = !DILocation(line: 190, column: 9, scope: !16979)
!17000 = !DILocation(line: 191, column: 9, scope: !17001)
!17001 = distinct !DILexicalBlock(scope: !17002, file: !3064, line: 191, column: 9)
!17002 = distinct !DILexicalBlock(scope: !17003, file: !3064, line: 191, column: 9)
!17003 = distinct !DILexicalBlock(scope: !17004, file: !3064, line: 191, column: 9)
!17004 = distinct !DILexicalBlock(scope: !16998, file: !3064, line: 190, column: 31)
!17005 = !DILocation(line: 194, column: 17, scope: !16979)
!17006 = !DILocation(line: 195, column: 1, scope: !16979)
!17007 = distinct !DISubprogram(name: "writeRawDiskData", scope: !3064, file: !3064, line: 277, type: !16910, scopeLine: 278, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3063, retainedNodes: !17008)
!17008 = !{!17009, !17010, !17011, !17012, !17013, !17014, !17015, !17016, !17017, !17018, !17022, !17023, !17024, !17029}
!17009 = !DILocalVariable(name: "D", arg: 1, scope: !17007, file: !3064, line: 277, type: !16912)
!17010 = !DILocalVariable(name: "addr", arg: 2, scope: !17007, file: !3064, line: 277, type: !61)
!17011 = !DILocalVariable(name: "data_ptr", arg: 3, scope: !17007, file: !3064, line: 277, type: !1055)
!17012 = !DILocalVariable(name: "len", arg: 4, scope: !17007, file: !3064, line: 277, type: !61)
!17013 = !DILocalVariable(name: "dest", scope: !17007, file: !3064, line: 279, type: !61)
!17014 = !DILocalVariable(name: "src", scope: !17007, file: !3064, line: 279, type: !61)
!17015 = !DILocalVariable(name: "diskSize", scope: !17007, file: !3064, line: 280, type: !61)
!17016 = !DILocalVariable(name: "result", scope: !17007, file: !3064, line: 281, type: !1349)
!17017 = !DILocalVariable(name: "DoneLength", scope: !17007, file: !3064, line: 282, type: !61)
!17018 = !DILocalVariable(name: "blockSize", scope: !17019, file: !3064, line: 313, type: !61)
!17019 = distinct !DILexicalBlock(scope: !17020, file: !3064, line: 312, column: 14)
!17020 = distinct !DILexicalBlock(scope: !17021, file: !3064, line: 305, column: 13)
!17021 = distinct !DILexicalBlock(scope: !17007, file: !3064, line: 298, column: 30)
!17022 = !DILocalVariable(name: "programBytes", scope: !17019, file: !3064, line: 314, type: !61)
!17023 = !DILocalVariable(name: "nextBlkAddr", scope: !17019, file: !3064, line: 316, type: !61)
!17024 = !DILocalVariable(name: "Cell", scope: !17025, file: !3064, line: 346, type: !17027)
!17025 = distinct !DILexicalBlock(scope: !17026, file: !3064, line: 345, column: 83)
!17026 = distinct !DILexicalBlock(scope: !17019, file: !3064, line: 345, column: 17)
!17027 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_CELL", file: !17028, line: 76, baseType: !1212)
!17028 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_mtd_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/sd_read_write_data_dma/GCC")
!17029 = !DILocalVariable(name: "b", scope: !17025, file: !3064, line: 347, type: !1055)
!17030 = !DILocation(line: 0, scope: !17007)
!17031 = !DILocation(line: 280, column: 28, scope: !17007)
!17032 = !DILocation(line: 284, column: 14, scope: !17033)
!17033 = distinct !DILexicalBlock(scope: !17007, file: !3064, line: 284, column: 9)
!17034 = !DILocation(line: 284, column: 9, scope: !17007)
!17035 = !DILocation(line: 288, column: 14, scope: !17036)
!17036 = distinct !DILexicalBlock(scope: !17007, file: !3064, line: 288, column: 9)
!17037 = !DILocation(line: 288, column: 20, scope: !17036)
!17038 = !DILocation(line: 288, column: 9, scope: !17007)
!17039 = !DILocation(line: 292, column: 13, scope: !17040)
!17040 = distinct !DILexicalBlock(scope: !17007, file: !3064, line: 292, column: 9)
!17041 = !DILocation(line: 292, column: 9, scope: !17007)
!17042 = !DILocation(line: 293, column: 9, scope: !17043)
!17043 = distinct !DILexicalBlock(scope: !17040, file: !3064, line: 292, column: 23)
!17044 = !DILocation(line: 294, column: 5, scope: !17043)
!17045 = !DILocation(line: 296, column: 5, scope: !17007)
!17046 = !DILocation(line: 346, column: 17, scope: !17025)
!17047 = !DILocation(line: 298, column: 23, scope: !17007)
!17048 = !DILocation(line: 298, column: 5, scope: !17007)
!17049 = !DILocation(line: 299, column: 52, scope: !17021)
!17050 = !DILocation(line: 299, column: 62, scope: !17021)
!17051 = !DILocation(line: 299, column: 16, scope: !17021)
!17052 = !DILocation(line: 299, column: 71, scope: !17021)
!17053 = !DILocation(line: 299, column: 78, scope: !17021)
!17054 = !DILocation(line: 300, column: 34, scope: !17021)
!17055 = !DILocation(line: 302, column: 12, scope: !17021)
!17056 = !DILocation(line: 302, column: 23, scope: !17021)
!17057 = !DILocation(line: 302, column: 81, scope: !17021)
!17058 = !DILocation(line: 302, column: 45, scope: !17021)
!17059 = !DILocation(line: 302, column: 9, scope: !17021)
!17060 = !DILocation(line: 305, column: 29, scope: !17020)
!17061 = !DILocation(line: 305, column: 57, scope: !17020)
!17062 = !DILocation(line: 305, column: 66, scope: !17020)
!17063 = !DILocation(line: 305, column: 80, scope: !17020)
!17064 = !DILocation(line: 305, column: 13, scope: !17021)
!17065 = !DILocation(line: 306, column: 25, scope: !17066)
!17066 = distinct !DILexicalBlock(scope: !17020, file: !3064, line: 305, column: 87)
!17067 = !DILocation(line: 306, column: 36, scope: !17066)
!17068 = !DILocation(line: 306, column: 51, scope: !17066)
!17069 = !DILocation(line: 306, column: 60, scope: !17066)
!17070 = !DILocation(line: 306, column: 74, scope: !17066)
!17071 = !DILocation(line: 306, column: 22, scope: !17066)
!17072 = !DILocation(line: 307, column: 24, scope: !17073)
!17073 = distinct !DILexicalBlock(scope: !17066, file: !3064, line: 307, column: 17)
!17074 = !DILocation(line: 307, column: 17, scope: !17066)
!17075 = !DILocation(line: 310, column: 23, scope: !17066)
!17076 = !DILocation(line: 311, column: 9, scope: !17066)
!17077 = !DILocation(line: 313, column: 47, scope: !17019)
!17078 = !DILocation(line: 313, column: 56, scope: !17019)
!17079 = !DILocation(line: 313, column: 34, scope: !17019)
!17080 = !DILocation(line: 0, scope: !17019)
!17081 = !DILocation(line: 316, column: 42, scope: !17019)
!17082 = !DILocation(line: 316, column: 58, scope: !17019)
!17083 = !DILocation(line: 316, column: 55, scope: !17019)
!17084 = !DILocation(line: 326, column: 22, scope: !17085)
!17085 = distinct !DILexicalBlock(scope: !17019, file: !3064, line: 326, column: 17)
!17086 = !DILocation(line: 326, column: 37, scope: !17085)
!17087 = !DILocation(line: 326, column: 17, scope: !17019)
!17088 = !DILocation(line: 332, column: 43, scope: !17019)
!17089 = !DILocation(line: 345, column: 30, scope: !17026)
!17090 = !DILocation(line: 345, column: 52, scope: !17026)
!17091 = !DILocation(line: 0, scope: !17025)
!17092 = !DILocation(line: 348, column: 26, scope: !17025)
!17093 = !DILocation(line: 348, column: 24, scope: !17025)
!17094 = !DILocation(line: 348, column: 22, scope: !17025)
!17095 = !DILocation(line: 349, column: 41, scope: !17025)
!17096 = !DILocation(line: 349, column: 24, scope: !17025)
!17097 = !DILocation(line: 349, column: 22, scope: !17025)
!17098 = !DILocation(line: 350, column: 29, scope: !17025)
!17099 = !DILocation(line: 350, column: 40, scope: !17025)
!17100 = !DILocation(line: 350, column: 55, scope: !17025)
!17101 = !DILocation(line: 350, column: 64, scope: !17025)
!17102 = !DILocation(line: 350, column: 26, scope: !17025)
!17103 = !DILocation(line: 351, column: 28, scope: !17104)
!17104 = distinct !DILexicalBlock(scope: !17025, file: !3064, line: 351, column: 21)
!17105 = !DILocation(line: 354, column: 13, scope: !17026)
!17106 = !DILocation(line: 362, column: 33, scope: !17107)
!17107 = distinct !DILexicalBlock(scope: !17108, file: !3064, line: 361, column: 24)
!17108 = distinct !DILexicalBlock(scope: !17109, file: !3064, line: 355, column: 21)
!17109 = distinct !DILexicalBlock(scope: !17026, file: !3064, line: 354, column: 20)
!17110 = !DILocation(line: 362, column: 44, scope: !17107)
!17111 = !DILocation(line: 362, column: 59, scope: !17107)
!17112 = !DILocation(line: 362, column: 68, scope: !17107)
!17113 = !DILocation(line: 362, column: 82, scope: !17107)
!17114 = !DILocation(line: 362, column: 30, scope: !17107)
!17115 = !DILocation(line: 364, column: 28, scope: !17116)
!17116 = distinct !DILexicalBlock(scope: !17109, file: !3064, line: 364, column: 21)
!17117 = !DILocation(line: 364, column: 21, scope: !17109)
!17118 = !DILocation(line: 368, column: 24, scope: !17019)
!17119 = !DILocation(line: 0, scope: !17020)
!17120 = distinct !{!17120, !17048, !17121}
!17121 = !DILocation(line: 370, column: 5, scope: !17007)
!17122 = !DILocation(line: 372, column: 5, scope: !17007)
!17123 = !DILocation(line: 379, column: 1, scope: !17007)
!17124 = distinct !DISubprogram(name: "eraseRawDiskBlock", scope: !3064, file: !3064, line: 398, type: !17125, scopeLine: 399, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3063, retainedNodes: !17127)
!17125 = !DISubroutineType(types: !17126)
!17126 = !{!1349, !16912, !61}
!17127 = !{!17128, !17129, !17130, !17131}
!17128 = !DILocalVariable(name: "D", arg: 1, scope: !17124, file: !3064, line: 398, type: !16912)
!17129 = !DILocalVariable(name: "blkIdx", arg: 2, scope: !17124, file: !3064, line: 398, type: !61)
!17130 = !DILocalVariable(name: "result", scope: !17124, file: !3064, line: 401, type: !1349)
!17131 = !DILocalVariable(name: "block_index", scope: !17124, file: !3064, line: 402, type: !61)
!17132 = !DILocation(line: 0, scope: !17124)
!17133 = !DILocation(line: 402, column: 36, scope: !17124)
!17134 = !DILocation(line: 403, column: 13, scope: !17135)
!17135 = distinct !DILexicalBlock(scope: !17124, file: !3064, line: 403, column: 9)
!17136 = !DILocation(line: 403, column: 9, scope: !17124)
!17137 = !DILocation(line: 404, column: 9, scope: !17138)
!17138 = distinct !DILexicalBlock(scope: !17135, file: !3064, line: 403, column: 23)
!17139 = !DILocation(line: 405, column: 5, scope: !17138)
!17140 = !DILocation(line: 407, column: 37, scope: !17141)
!17141 = distinct !DILexicalBlock(scope: !17124, file: !3064, line: 407, column: 9)
!17142 = !DILocation(line: 407, column: 21, scope: !17141)
!17143 = !DILocation(line: 407, column: 9, scope: !17124)
!17144 = !DILocation(line: 412, column: 5, scope: !17124)
!17145 = !DILocation(line: 414, column: 8, scope: !17124)
!17146 = !DILocation(line: 414, column: 19, scope: !17124)
!17147 = !DILocation(line: 414, column: 32, scope: !17124)
!17148 = !DILocation(line: 414, column: 5, scope: !17124)
!17149 = !DILocation(line: 416, column: 17, scope: !17124)
!17150 = !DILocation(line: 416, column: 28, scope: !17124)
!17151 = !DILocation(line: 416, column: 42, scope: !17124)
!17152 = !DILocation(line: 416, column: 14, scope: !17124)
!17153 = !DILocation(line: 418, column: 5, scope: !17124)
!17154 = !DILocation(line: 420, column: 16, scope: !17155)
!17155 = distinct !DILexicalBlock(scope: !17124, file: !3064, line: 420, column: 9)
!17156 = !DILocation(line: 424, column: 1, scope: !17124)
!17157 = distinct !DISubprogram(name: "NOR_init", scope: !3064, file: !3064, line: 433, type: !14563, scopeLine: 434, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3063, retainedNodes: !345)
!17158 = !DILocation(line: 436, column: 9, scope: !17159)
!17159 = distinct !DILexicalBlock(scope: !17157, file: !3064, line: 436, column: 9)
!17160 = !DILocation(line: 436, column: 9, scope: !17157)
!17161 = !DILocation(line: 437, column: 9, scope: !17162)
!17162 = distinct !DILexicalBlock(scope: !17159, file: !3064, line: 436, column: 62)
!17163 = !DILocation(line: 438, column: 9, scope: !17162)
!17164 = !DILocation(line: 439, column: 27, scope: !17162)
!17165 = !DILocation(line: 440, column: 5, scope: !17162)
!17166 = !DILocation(line: 441, column: 5, scope: !17157)
!17167 = distinct !DISubprogram(name: "get_NOR_init_status", scope: !3064, file: !3064, line: 444, type: !15029, scopeLine: 445, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3063, retainedNodes: !345)
!17168 = !DILocation(line: 446, column: 12, scope: !17167)
!17169 = !DILocation(line: 446, column: 5, scope: !17167)
!17170 = distinct !DISubprogram(name: "NOR_ReadPhysicalPage", scope: !3064, file: !3064, line: 449, type: !17171, scopeLine: 450, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3063, retainedNodes: !17173)
!17171 = !DISubroutineType(types: !17172)
!17172 = !{!1349, !61, !61, !1055}
!17173 = !{!17174, !17175, !17176, !17177, !17178, !17179, !17180}
!17174 = !DILocalVariable(name: "block_idx", arg: 1, scope: !17170, file: !3064, line: 449, type: !61)
!17175 = !DILocalVariable(name: "page_idx", arg: 2, scope: !17170, file: !3064, line: 449, type: !61)
!17176 = !DILocalVariable(name: "data_ptr", arg: 3, scope: !17170, file: !3064, line: 449, type: !1055)
!17177 = !DILocalVariable(name: "D", scope: !17170, file: !3064, line: 451, type: !16912)
!17178 = !DILocalVariable(name: "mtdData", scope: !17170, file: !3064, line: 452, type: !3072)
!17179 = !DILocalVariable(name: "result", scope: !17170, file: !3064, line: 453, type: !1349)
!17180 = !DILocalVariable(name: "addr", scope: !17170, file: !3064, line: 455, type: !61)
!17181 = !DILocation(line: 0, scope: !17170)
!17182 = !DILocation(line: 452, column: 60, scope: !17170)
!17183 = !DILocation(line: 455, column: 32, scope: !17170)
!17184 = !DILocation(line: 455, column: 22, scope: !17170)
!17185 = !DILocation(line: 455, column: 95, scope: !17170)
!17186 = !DILocation(line: 455, column: 76, scope: !17170)
!17187 = !DILocation(line: 455, column: 118, scope: !17170)
!17188 = !DILocation(line: 455, column: 74, scope: !17170)
!17189 = !DILocation(line: 455, column: 106, scope: !17170)
!17190 = !DILocation(line: 457, column: 14, scope: !17170)
!17191 = !DILocation(line: 459, column: 16, scope: !17192)
!17192 = distinct !DILexicalBlock(scope: !17170, file: !3064, line: 459, column: 9)
!17193 = !DILocation(line: 463, column: 1, scope: !17170)
!17194 = distinct !DISubprogram(name: "NOR_ProgramPhysicalPage", scope: !3064, file: !3064, line: 466, type: !17171, scopeLine: 467, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3063, retainedNodes: !17195)
!17195 = !{!17196, !17197, !17198, !17199, !17200, !17201, !17202}
!17196 = !DILocalVariable(name: "block_idx", arg: 1, scope: !17194, file: !3064, line: 466, type: !61)
!17197 = !DILocalVariable(name: "page_idx", arg: 2, scope: !17194, file: !3064, line: 466, type: !61)
!17198 = !DILocalVariable(name: "data_ptr", arg: 3, scope: !17194, file: !3064, line: 466, type: !1055)
!17199 = !DILocalVariable(name: "D", scope: !17194, file: !3064, line: 468, type: !16912)
!17200 = !DILocalVariable(name: "mtdData", scope: !17194, file: !3064, line: 469, type: !3072)
!17201 = !DILocalVariable(name: "result", scope: !17194, file: !3064, line: 470, type: !1349)
!17202 = !DILocalVariable(name: "addr", scope: !17194, file: !3064, line: 472, type: !61)
!17203 = !DILocation(line: 0, scope: !17194)
!17204 = !DILocation(line: 469, column: 60, scope: !17194)
!17205 = !DILocation(line: 472, column: 32, scope: !17194)
!17206 = !DILocation(line: 472, column: 22, scope: !17194)
!17207 = !DILocation(line: 472, column: 95, scope: !17194)
!17208 = !DILocation(line: 472, column: 76, scope: !17194)
!17209 = !DILocation(line: 472, column: 118, scope: !17194)
!17210 = !DILocation(line: 472, column: 74, scope: !17194)
!17211 = !DILocation(line: 472, column: 106, scope: !17194)
!17212 = !DILocation(line: 474, column: 14, scope: !17194)
!17213 = !DILocation(line: 475, column: 16, scope: !17214)
!17214 = distinct !DILexicalBlock(scope: !17194, file: !3064, line: 475, column: 9)
!17215 = !DILocation(line: 479, column: 1, scope: !17194)
!17216 = distinct !DISubprogram(name: "NOR_ErasePhysicalBlock", scope: !3064, file: !3064, line: 481, type: !17217, scopeLine: 482, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3063, retainedNodes: !17219)
!17217 = !DISubroutineType(types: !17218)
!17218 = !{!1349, !61}
!17219 = !{!17220, !17221}
!17220 = !DILocalVariable(name: "block_idx", arg: 1, scope: !17216, file: !3064, line: 481, type: !61)
!17221 = !DILocalVariable(name: "result", scope: !17216, file: !3064, line: 483, type: !1349)
!17222 = !DILocation(line: 0, scope: !17216)
!17223 = !DILocation(line: 484, column: 14, scope: !17216)
!17224 = !DILocation(line: 485, column: 16, scope: !17225)
!17225 = distinct !DILexicalBlock(scope: !17216, file: !3064, line: 485, column: 9)
!17226 = !DILocation(line: 489, column: 1, scope: !17216)
!17227 = distinct !DISubprogram(name: "NOR_BlockSize", scope: !3064, file: !3064, line: 492, type: !5135, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3063, retainedNodes: !17228)
!17228 = !{!17229, !17230, !17231}
!17229 = !DILocalVariable(name: "block_idx", arg: 1, scope: !17227, file: !3064, line: 492, type: !61)
!17230 = !DILocalVariable(name: "D", scope: !17227, file: !3064, line: 494, type: !16912)
!17231 = !DILocalVariable(name: "mtdData", scope: !17227, file: !3064, line: 495, type: !3072)
!17232 = !DILocation(line: 0, scope: !17227)
!17233 = !DILocation(line: 495, column: 60, scope: !17227)
!17234 = !DILocation(line: 496, column: 12, scope: !17227)
!17235 = !DILocation(line: 496, column: 5, scope: !17227)
!17236 = distinct !DISubprogram(name: "NOR_BlockIndex", scope: !3064, file: !3064, line: 499, type: !5135, scopeLine: 500, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3063, retainedNodes: !17237)
!17237 = !{!17238, !17239, !17240}
!17238 = !DILocalVariable(name: "block_addr", arg: 1, scope: !17236, file: !3064, line: 499, type: !61)
!17239 = !DILocalVariable(name: "D", scope: !17236, file: !3064, line: 501, type: !16912)
!17240 = !DILocalVariable(name: "mtdData", scope: !17236, file: !3064, line: 502, type: !3072)
!17241 = !DILocation(line: 0, scope: !17236)
!17242 = !DILocation(line: 502, column: 60, scope: !17236)
!17243 = !DILocation(line: 504, column: 12, scope: !17236)
!17244 = !DILocation(line: 504, column: 5, scope: !17236)
!17245 = distinct !DISubprogram(name: "NOR_Addr2BlockIndexOffset", scope: !3064, file: !3064, line: 510, type: !17246, scopeLine: 511, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3063, retainedNodes: !17248)
!17246 = !DISubroutineType(types: !17247)
!17247 = !{!1349, !61, !1716, !1716}
!17248 = !{!17249, !17250, !17251, !17252, !17253}
!17249 = !DILocalVariable(name: "block_addr", arg: 1, scope: !17245, file: !3064, line: 510, type: !61)
!17250 = !DILocalVariable(name: "block_index", arg: 2, scope: !17245, file: !3064, line: 510, type: !1716)
!17251 = !DILocalVariable(name: "offset", arg: 3, scope: !17245, file: !3064, line: 510, type: !1716)
!17252 = !DILocalVariable(name: "D", scope: !17245, file: !3064, line: 512, type: !16912)
!17253 = !DILocalVariable(name: "mtdData", scope: !17245, file: !3064, line: 513, type: !3072)
!17254 = !DILocation(line: 0, scope: !17245)
!17255 = !DILocation(line: 513, column: 60, scope: !17245)
!17256 = !DILocation(line: 519, column: 20, scope: !17245)
!17257 = !DILocation(line: 519, column: 18, scope: !17245)
!17258 = !DILocation(line: 520, column: 22, scope: !17259)
!17259 = distinct !DILexicalBlock(scope: !17245, file: !3064, line: 520, column: 9)
!17260 = !DILocation(line: 520, column: 9, scope: !17245)
!17261 = !DILocation(line: 524, column: 28, scope: !17245)
!17262 = !DILocation(line: 524, column: 26, scope: !17245)
!17263 = !DILocation(line: 524, column: 13, scope: !17245)
!17264 = !DILocation(line: 526, column: 5, scope: !17245)
!17265 = !DILocation(line: 527, column: 1, scope: !17245)
!17266 = distinct !DISubprogram(name: "NOR_BlockIndexOffset2Addr", scope: !3064, file: !3064, line: 532, type: !17267, scopeLine: 533, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3063, retainedNodes: !17269)
!17267 = !DISubroutineType(types: !17268)
!17268 = !{!1349, !61, !61, !1716}
!17269 = !{!17270, !17271, !17272, !17273, !17274}
!17270 = !DILocalVariable(name: "block_index", arg: 1, scope: !17266, file: !3064, line: 532, type: !61)
!17271 = !DILocalVariable(name: "offset", arg: 2, scope: !17266, file: !3064, line: 532, type: !61)
!17272 = !DILocalVariable(name: "addr", arg: 3, scope: !17266, file: !3064, line: 532, type: !1716)
!17273 = !DILocalVariable(name: "D", scope: !17266, file: !3064, line: 534, type: !16912)
!17274 = !DILocalVariable(name: "mtdData", scope: !17266, file: !3064, line: 535, type: !3072)
!17275 = !DILocation(line: 0, scope: !17266)
!17276 = !DILocation(line: 535, column: 60, scope: !17266)
!17277 = !DILocation(line: 537, column: 23, scope: !17266)
!17278 = !DILocation(line: 537, column: 13, scope: !17266)
!17279 = !DILocation(line: 537, column: 79, scope: !17266)
!17280 = !DILocation(line: 537, column: 60, scope: !17266)
!17281 = !DILocation(line: 537, column: 58, scope: !17266)
!17282 = !DILocation(line: 537, column: 88, scope: !17266)
!17283 = !DILocation(line: 537, column: 11, scope: !17266)
!17284 = !DILocation(line: 539, column: 5, scope: !17266)
!17285 = distinct !DISubprogram(name: "get_rawdisk_error_code", scope: !3064, file: !3064, line: 545, type: !17286, scopeLine: 546, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3063, retainedNodes: !17288)
!17286 = !DISubroutineType(types: !17287)
!17287 = !{!3120, !1349}
!17288 = !{!17289}
!17289 = !DILocalVariable(name: "ori_err_code", arg: 1, scope: !17285, file: !3064, line: 545, type: !1349)
!17290 = !DILocation(line: 0, scope: !17285)
!17291 = !DILocation(line: 547, column: 9, scope: !17285)
!17292 = !DILocation(line: 558, column: 9, scope: !17293)
!17293 = distinct !DILexicalBlock(scope: !17294, file: !3064, line: 558, column: 9)
!17294 = distinct !DILexicalBlock(scope: !17295, file: !3064, line: 558, column: 9)
!17295 = distinct !DILexicalBlock(scope: !17296, file: !3064, line: 558, column: 9)
!17296 = distinct !DILexicalBlock(scope: !17297, file: !3064, line: 557, column: 12)
!17297 = distinct !DILexicalBlock(scope: !17298, file: !3064, line: 555, column: 16)
!17298 = distinct !DILexicalBlock(scope: !17299, file: !3064, line: 553, column: 16)
!17299 = distinct !DILexicalBlock(scope: !17300, file: !3064, line: 551, column: 16)
!17300 = distinct !DILexicalBlock(scope: !17301, file: !3064, line: 549, column: 16)
!17301 = distinct !DILexicalBlock(scope: !17285, file: !3064, line: 547, column: 9)
!17302 = !DILocation(line: 560, column: 1, scope: !17285)
!17303 = distinct !DISubprogram(name: "get_block_size_from_address", scope: !3064, file: !3064, line: 561, type: !17304, scopeLine: 562, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3063, retainedNodes: !17307)
!17304 = !DISubroutineType(types: !17305)
!17305 = !{!17306, !61}
!17306 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_flash_block_t", file: !2409, line: 127, baseType: !3066)
!17307 = !{!17308, !17309, !17310}
!17308 = !DILocalVariable(name: "address", arg: 1, scope: !17303, file: !3064, line: 561, type: !61)
!17309 = !DILocalVariable(name: "block_size", scope: !17303, file: !3064, line: 563, type: !61)
!17310 = !DILocalVariable(name: "block_index", scope: !17303, file: !3064, line: 564, type: !61)
!17311 = !DILocation(line: 0, scope: !17303)
!17312 = !DILocation(line: 566, column: 19, scope: !17303)
!17313 = !DILocation(line: 567, column: 21, scope: !17314)
!17314 = distinct !DILexicalBlock(scope: !17303, file: !3064, line: 567, column: 9)
!17315 = !DILocation(line: 567, column: 9, scope: !17303)
!17316 = !DILocation(line: 568, column: 9, scope: !17317)
!17317 = distinct !DILexicalBlock(scope: !17318, file: !3064, line: 568, column: 9)
!17318 = distinct !DILexicalBlock(scope: !17319, file: !3064, line: 568, column: 9)
!17319 = distinct !DILexicalBlock(scope: !17320, file: !3064, line: 568, column: 9)
!17320 = distinct !DILexicalBlock(scope: !17314, file: !3064, line: 567, column: 45)
!17321 = !DILocation(line: 570, column: 18, scope: !17303)
!17322 = !DILocation(line: 571, column: 9, scope: !17303)
!17323 = !DILocation(line: 574, column: 9, scope: !17324)
!17324 = distinct !DILexicalBlock(scope: !17325, file: !3064, line: 573, column: 38)
!17325 = distinct !DILexicalBlock(scope: !17326, file: !3064, line: 573, column: 16)
!17326 = distinct !DILexicalBlock(scope: !17303, file: !3064, line: 571, column: 9)
!17327 = !DILocation(line: 576, column: 9, scope: !17328)
!17328 = distinct !DILexicalBlock(scope: !17329, file: !3064, line: 575, column: 39)
!17329 = distinct !DILexicalBlock(scope: !17325, file: !3064, line: 575, column: 16)
!17330 = !DILocation(line: 578, column: 9, scope: !17331)
!17331 = distinct !DILexicalBlock(scope: !17332, file: !3064, line: 578, column: 9)
!17332 = distinct !DILexicalBlock(scope: !17333, file: !3064, line: 578, column: 9)
!17333 = distinct !DILexicalBlock(scope: !17334, file: !3064, line: 578, column: 9)
!17334 = distinct !DILexicalBlock(scope: !17329, file: !3064, line: 577, column: 12)
!17335 = !DILocation(line: 0, scope: !17326)
!17336 = !DILocation(line: 580, column: 1, scope: !17303)
!17337 = distinct !DISubprogram(name: "hal_flash_init", scope: !3064, file: !3064, line: 583, type: !15029, scopeLine: 584, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3063, retainedNodes: !345)
!17338 = !DILocation(line: 585, column: 5, scope: !17337)
!17339 = !DILocation(line: 586, column: 5, scope: !17337)
!17340 = distinct !DISubprogram(name: "hal_flash_deinit", scope: !3064, file: !3064, line: 589, type: !15029, scopeLine: 590, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3063, retainedNodes: !345)
!17341 = !DILocation(line: 591, column: 5, scope: !17340)
!17342 = distinct !DISubprogram(name: "hal_flash_erase", scope: !3064, file: !3064, line: 595, type: !17343, scopeLine: 596, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3063, retainedNodes: !17345)
!17343 = !DISubroutineType(types: !17344)
!17344 = !{!3120, !61, !17306}
!17345 = !{!17346, !17347, !17348, !17349, !17350}
!17346 = !DILocalVariable(name: "start_address", arg: 1, scope: !17342, file: !3064, line: 595, type: !61)
!17347 = !DILocalVariable(name: "block", arg: 2, scope: !17342, file: !3064, line: 595, type: !17306)
!17348 = !DILocalVariable(name: "result", scope: !17342, file: !3064, line: 597, type: !1349)
!17349 = !DILocalVariable(name: "block_index", scope: !17342, file: !3064, line: 598, type: !61)
!17350 = !DILocalVariable(name: "erase_type", scope: !17342, file: !3064, line: 599, type: !61)
!17351 = !DILocation(line: 0, scope: !17342)
!17352 = !DILocation(line: 601, column: 9, scope: !17342)
!17353 = !DILocation(line: 602, column: 28, scope: !17354)
!17354 = distinct !DILexicalBlock(scope: !17355, file: !3064, line: 602, column: 13)
!17355 = distinct !DILexicalBlock(scope: !17356, file: !3064, line: 601, column: 38)
!17356 = distinct !DILexicalBlock(scope: !17342, file: !3064, line: 601, column: 9)
!17357 = !DILocation(line: 602, column: 37, scope: !17354)
!17358 = !DILocation(line: 602, column: 13, scope: !17355)
!17359 = !DILocation(line: 607, column: 28, scope: !17360)
!17360 = distinct !DILexicalBlock(scope: !17361, file: !3064, line: 607, column: 13)
!17361 = distinct !DILexicalBlock(scope: !17362, file: !3064, line: 606, column: 46)
!17362 = distinct !DILexicalBlock(scope: !17356, file: !3064, line: 606, column: 16)
!17363 = !DILocation(line: 607, column: 38, scope: !17360)
!17364 = !DILocation(line: 607, column: 13, scope: !17361)
!17365 = !DILocation(line: 612, column: 28, scope: !17366)
!17366 = distinct !DILexicalBlock(scope: !17367, file: !3064, line: 612, column: 13)
!17367 = distinct !DILexicalBlock(scope: !17368, file: !3064, line: 611, column: 46)
!17368 = distinct !DILexicalBlock(scope: !17362, file: !3064, line: 611, column: 16)
!17369 = !DILocation(line: 612, column: 38, scope: !17366)
!17370 = !DILocation(line: 612, column: 13, scope: !17367)
!17371 = !DILocation(line: 0, scope: !17356)
!17372 = !DILocation(line: 621, column: 19, scope: !17342)
!17373 = !DILocation(line: 622, column: 21, scope: !17374)
!17374 = distinct !DILexicalBlock(scope: !17342, file: !3064, line: 622, column: 9)
!17375 = !DILocation(line: 622, column: 9, scope: !17342)
!17376 = !DILocation(line: 626, column: 17, scope: !17342)
!17377 = !DILocation(line: 627, column: 14, scope: !17342)
!17378 = !DILocation(line: 628, column: 16, scope: !17379)
!17379 = distinct !DILexicalBlock(scope: !17342, file: !3064, line: 628, column: 9)
!17380 = !DILocation(line: 628, column: 9, scope: !17342)
!17381 = !DILocation(line: 629, column: 16, scope: !17382)
!17382 = distinct !DILexicalBlock(scope: !17379, file: !3064, line: 628, column: 38)
!17383 = !DILocation(line: 629, column: 9, scope: !17382)
!17384 = !DILocation(line: 632, column: 1, scope: !17342)
!17385 = distinct !DISubprogram(name: "hal_flash_read", scope: !3064, file: !3064, line: 634, type: !17386, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3063, retainedNodes: !17388)
!17386 = !DISubroutineType(types: !17387)
!17387 = !{!3120, !61, !1055, !61}
!17388 = !{!17389, !17390, !17391, !17392, !17393}
!17389 = !DILocalVariable(name: "start_address", arg: 1, scope: !17385, file: !3064, line: 634, type: !61)
!17390 = !DILocalVariable(name: "buffer", arg: 2, scope: !17385, file: !3064, line: 634, type: !1055)
!17391 = !DILocalVariable(name: "length", arg: 3, scope: !17385, file: !3064, line: 634, type: !61)
!17392 = !DILocalVariable(name: "D", scope: !17385, file: !3064, line: 636, type: !16912)
!17393 = !DILocalVariable(name: "result", scope: !17385, file: !3064, line: 637, type: !1349)
!17394 = !DILocation(line: 0, scope: !17385)
!17395 = !DILocation(line: 639, column: 14, scope: !17385)
!17396 = !DILocation(line: 641, column: 16, scope: !17397)
!17397 = distinct !DILexicalBlock(scope: !17385, file: !3064, line: 641, column: 9)
!17398 = !DILocation(line: 641, column: 9, scope: !17385)
!17399 = !DILocation(line: 642, column: 16, scope: !17400)
!17400 = distinct !DILexicalBlock(scope: !17397, file: !3064, line: 641, column: 38)
!17401 = !DILocation(line: 642, column: 9, scope: !17400)
!17402 = !DILocation(line: 645, column: 1, scope: !17385)
!17403 = distinct !DISubprogram(name: "hal_flash_write", scope: !3064, file: !3064, line: 647, type: !17404, scopeLine: 648, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3063, retainedNodes: !17406)
!17404 = !DISubroutineType(types: !17405)
!17405 = !{!3120, !61, !8027, !61}
!17406 = !{!17407, !17408, !17409, !17410, !17411, !17412}
!17407 = !DILocalVariable(name: "address", arg: 1, scope: !17403, file: !3064, line: 647, type: !61)
!17408 = !DILocalVariable(name: "data", arg: 2, scope: !17403, file: !3064, line: 647, type: !8027)
!17409 = !DILocalVariable(name: "length", arg: 3, scope: !17403, file: !3064, line: 647, type: !61)
!17410 = !DILocalVariable(name: "D", scope: !17403, file: !3064, line: 649, type: !16912)
!17411 = !DILocalVariable(name: "result", scope: !17403, file: !3064, line: 650, type: !1349)
!17412 = !DILocalVariable(name: "addr", scope: !17413, file: !3064, line: 660, type: !61)
!17413 = distinct !DILexicalBlock(scope: !17414, file: !3064, line: 659, column: 40)
!17414 = distinct !DILexicalBlock(scope: !17403, file: !3064, line: 659, column: 8)
!17415 = !DILocation(line: 0, scope: !17403)
!17416 = !DILocation(line: 652, column: 14, scope: !17403)
!17417 = !DILocation(line: 653, column: 16, scope: !17418)
!17418 = distinct !DILexicalBlock(scope: !17403, file: !3064, line: 653, column: 9)
!17419 = !DILocation(line: 653, column: 9, scope: !17403)
!17420 = !DILocation(line: 654, column: 16, scope: !17421)
!17421 = distinct !DILexicalBlock(scope: !17418, file: !3064, line: 653, column: 38)
!17422 = !DILocation(line: 654, column: 9, scope: !17421)
!17423 = !DILocation(line: 659, column: 8, scope: !17414)
!17424 = !DILocation(line: 659, column: 8, scope: !17403)
!17425 = !DILocation(line: 661, column: 25, scope: !17426)
!17426 = distinct !DILexicalBlock(scope: !17413, file: !3064, line: 661, column: 8)
!17427 = !DILocation(line: 0, scope: !17413)
!17428 = !DILocation(line: 661, column: 58, scope: !17429)
!17429 = distinct !DILexicalBlock(scope: !17426, file: !3064, line: 661, column: 8)
!17430 = !DILocation(line: 661, column: 8, scope: !17426)
!17431 = !DILocation(line: 662, column: 13, scope: !17432)
!17432 = distinct !DILexicalBlock(scope: !17429, file: !3064, line: 661, column: 147)
!17433 = !DILocation(line: 661, column: 128, scope: !17429)
!17434 = distinct !{!17434, !17430, !17435}
!17435 = !DILocation(line: 663, column: 8, scope: !17426)
!17436 = !DILocation(line: 668, column: 1, scope: !17403)
!17437 = distinct !DISubprogram(name: "BlockAddress", scope: !3125, file: !3125, line: 111, type: !17438, scopeLine: 112, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3124, retainedNodes: !17440)
!17438 = !DISubroutineType(types: !17439)
!17439 = !{!88, !88, !61}
!17440 = !{!17441, !17442, !17443, !17444, !17445, !17446}
!17441 = !DILocalVariable(name: "DriverData", arg: 1, scope: !17437, file: !3125, line: 111, type: !88)
!17442 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !17437, file: !3125, line: 111, type: !61)
!17443 = !DILocalVariable(name: "D", scope: !17437, file: !3125, line: 113, type: !3146)
!17444 = !DILocalVariable(name: "addr", scope: !17437, file: !3125, line: 114, type: !61)
!17445 = !DILocalVariable(name: "region", scope: !17437, file: !3125, line: 115, type: !61)
!17446 = !DILocalVariable(name: "BlockUpperBound", scope: !17437, file: !3125, line: 115, type: !61)
!17447 = !DILocation(line: 0, scope: !17437)
!17448 = !DILocation(line: 117, column: 26, scope: !17437)
!17449 = !DILocation(line: 117, column: 40, scope: !17437)
!17450 = !DILocation(line: 118, column: 28, scope: !17437)
!17451 = !DILocation(line: 118, column: 5, scope: !17437)
!17452 = !DILocation(line: 119, column: 39, scope: !17453)
!17453 = distinct !DILexicalBlock(scope: !17437, file: !3125, line: 118, column: 43)
!17454 = !DILocation(line: 119, column: 76, scope: !17453)
!17455 = !DILocation(line: 119, column: 52, scope: !17453)
!17456 = !DILocation(line: 119, column: 14, scope: !17453)
!17457 = !DILocation(line: 120, column: 15, scope: !17453)
!17458 = !DILocation(line: 121, column: 50, scope: !17453)
!17459 = !DILocation(line: 121, column: 25, scope: !17453)
!17460 = distinct !{!17460, !17451, !17461}
!17461 = !DILocation(line: 122, column: 5, scope: !17437)
!17462 = !DILocation(line: 123, column: 68, scope: !17437)
!17463 = !DILocation(line: 123, column: 44, scope: !17437)
!17464 = !DILocation(line: 123, column: 25, scope: !17437)
!17465 = !DILocation(line: 123, column: 107, scope: !17437)
!17466 = !DILocation(line: 123, column: 83, scope: !17437)
!17467 = !DILocation(line: 123, column: 10, scope: !17437)
!17468 = !DILocation(line: 125, column: 16, scope: !17437)
!17469 = !DILocation(line: 125, column: 25, scope: !17437)
!17470 = !DILocation(line: 125, column: 5, scope: !17437)
!17471 = distinct !DISubprogram(name: "MapWindow", scope: !3125, file: !3125, line: 180, type: !2758, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3124, retainedNodes: !17472)
!17472 = !{!17473, !17474, !17475, !17476}
!17473 = !DILocalVariable(name: "DriveData", arg: 1, scope: !17471, file: !3125, line: 180, type: !88)
!17474 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !17471, file: !3125, line: 180, type: !61)
!17475 = !DILocalVariable(name: "WindowIndex", arg: 3, scope: !17471, file: !3125, line: 180, type: !61)
!17476 = !DILocalVariable(name: "D", scope: !17471, file: !3125, line: 182, type: !3146)
!17477 = !DILocation(line: 0, scope: !17471)
!17478 = !DILocation(line: 185, column: 5, scope: !17479)
!17479 = distinct !DILexicalBlock(scope: !17480, file: !3125, line: 185, column: 5)
!17480 = distinct !DILexicalBlock(scope: !17471, file: !3125, line: 185, column: 5)
!17481 = !DILocation(line: 185, column: 5, scope: !17480)
!17482 = !DILocation(line: 185, column: 5, scope: !17483)
!17483 = distinct !DILexicalBlock(scope: !17479, file: !3125, line: 185, column: 5)
!17484 = !DILocation(line: 186, column: 27, scope: !17471)
!17485 = !DILocation(line: 186, column: 19, scope: !17471)
!17486 = !DILocation(line: 186, column: 8, scope: !17471)
!17487 = !DILocation(line: 186, column: 17, scope: !17471)
!17488 = !DILocation(line: 188, column: 5, scope: !17471)
!17489 = !DILocation(line: 0, scope: !3139)
!17490 = !DILocation(line: 142, column: 12, scope: !17491)
!17491 = distinct !DILexicalBlock(scope: !3139, file: !3125, line: 142, column: 9)
!17492 = !DILocation(line: 142, column: 34, scope: !17491)
!17493 = !DILocation(line: 142, column: 64, scope: !17491)
!17494 = !DILocation(line: 142, column: 75, scope: !17491)
!17495 = !DILocation(line: 142, column: 9, scope: !3139)
!17496 = !DILocation(line: 143, column: 79, scope: !17497)
!17497 = distinct !DILexicalBlock(scope: !17498, file: !3125, line: 143, column: 13)
!17498 = distinct !DILexicalBlock(scope: !17491, file: !3125, line: 142, column: 99)
!17499 = !DILocation(line: 143, column: 13, scope: !17498)
!17500 = !DILocation(line: 144, column: 72, scope: !17501)
!17501 = distinct !DILexicalBlock(scope: !17502, file: !3125, line: 144, column: 17)
!17502 = distinct !DILexicalBlock(scope: !17497, file: !3125, line: 143, column: 94)
!17503 = !DILocation(line: 144, column: 83, scope: !17501)
!17504 = !DILocation(line: 144, column: 17, scope: !17502)
!17505 = !DILocation(line: 145, column: 87, scope: !17506)
!17506 = distinct !DILexicalBlock(scope: !17507, file: !3125, line: 145, column: 21)
!17507 = distinct !DILexicalBlock(scope: !17501, file: !3125, line: 144, column: 107)
!17508 = !DILocation(line: 145, column: 21, scope: !17507)
!17509 = !DILocation(line: 146, column: 33, scope: !17510)
!17510 = distinct !DILexicalBlock(scope: !17506, file: !3125, line: 145, column: 102)
!17511 = !DILocation(line: 147, column: 25, scope: !17512)
!17512 = distinct !DILexicalBlock(scope: !17510, file: !3125, line: 147, column: 25)
!17513 = !DILocation(line: 147, column: 62, scope: !17512)
!17514 = !DILocation(line: 147, column: 34, scope: !17512)
!17515 = !DILocation(line: 147, column: 25, scope: !17510)
!17516 = !DILocation(line: 148, column: 91, scope: !17517)
!17517 = distinct !DILexicalBlock(scope: !17512, file: !3125, line: 147, column: 106)
!17518 = !DILocation(line: 149, column: 111, scope: !17517)
!17519 = !DILocation(line: 149, column: 101, scope: !17517)
!17520 = !DILocation(line: 149, column: 87, scope: !17517)
!17521 = !DILocation(line: 149, column: 99, scope: !17517)
!17522 = !DILocation(line: 150, column: 37, scope: !17517)
!17523 = !DILocation(line: 150, column: 34, scope: !17517)
!17524 = !DILocation(line: 151, column: 21, scope: !17517)
!17525 = !DILocation(line: 152, column: 91, scope: !17526)
!17526 = distinct !DILexicalBlock(scope: !17512, file: !3125, line: 151, column: 28)
!17527 = !DILocation(line: 153, column: 111, scope: !17526)
!17528 = !DILocation(line: 153, column: 101, scope: !17526)
!17529 = !DILocation(line: 153, column: 87, scope: !17526)
!17530 = !DILocation(line: 153, column: 99, scope: !17526)
!17531 = !DILocation(line: 154, column: 34, scope: !17526)
!17532 = !DILocation(line: 157, column: 32, scope: !17533)
!17533 = distinct !DILexicalBlock(scope: !17506, file: !3125, line: 156, column: 24)
!17534 = !DILocation(line: 158, column: 83, scope: !17533)
!17535 = !DILocation(line: 159, column: 60, scope: !17533)
!17536 = !DILocation(line: 159, column: 33, scope: !17533)
!17537 = !DILocation(line: 159, column: 30, scope: !17533)
!17538 = !DILocation(line: 162, column: 29, scope: !17539)
!17539 = distinct !DILexicalBlock(scope: !17501, file: !3125, line: 161, column: 20)
!17540 = !DILocation(line: 163, column: 83, scope: !17539)
!17541 = !DILocation(line: 164, column: 103, scope: !17539)
!17542 = !DILocation(line: 164, column: 93, scope: !17539)
!17543 = !DILocation(line: 164, column: 79, scope: !17539)
!17544 = !DILocation(line: 164, column: 91, scope: !17539)
!17545 = !DILocation(line: 165, column: 56, scope: !17539)
!17546 = !DILocation(line: 165, column: 29, scope: !17539)
!17547 = !DILocation(line: 165, column: 26, scope: !17539)
!17548 = !DILocation(line: 168, column: 24, scope: !17549)
!17549 = distinct !DILexicalBlock(scope: !17497, file: !3125, line: 167, column: 16)
!17550 = !DILocation(line: 169, column: 75, scope: !17549)
!17551 = !DILocation(line: 170, column: 50, scope: !17549)
!17552 = !DILocation(line: 170, column: 22, scope: !17549)
!17553 = !DILocation(line: 173, column: 21, scope: !17554)
!17554 = distinct !DILexicalBlock(scope: !17491, file: !3125, line: 172, column: 12)
!17555 = !DILocation(line: 174, column: 75, scope: !17554)
!17556 = !DILocation(line: 175, column: 95, scope: !17554)
!17557 = !DILocation(line: 175, column: 85, scope: !17554)
!17558 = !DILocation(line: 175, column: 71, scope: !17554)
!17559 = !DILocation(line: 175, column: 83, scope: !17554)
!17560 = !DILocation(line: 176, column: 46, scope: !17554)
!17561 = !DILocation(line: 176, column: 18, scope: !17554)
!17562 = !DILocation(line: 0, scope: !17491)
!17563 = !DILocation(line: 178, column: 5, scope: !3139)
!17564 = distinct !DISubprogram(name: "BlockSize", scope: !3125, file: !3125, line: 191, type: !3140, scopeLine: 192, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3124, retainedNodes: !17565)
!17565 = !{!17566, !17567, !17568, !17569, !17570}
!17566 = !DILocalVariable(name: "DriveData", arg: 1, scope: !17564, file: !3125, line: 191, type: !88)
!17567 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !17564, file: !3125, line: 191, type: !61)
!17568 = !DILocalVariable(name: "D", scope: !17564, file: !3125, line: 193, type: !3146)
!17569 = !DILocalVariable(name: "region", scope: !17564, file: !3125, line: 194, type: !61)
!17570 = !DILocalVariable(name: "BlockUpperBound", scope: !17564, file: !3125, line: 194, type: !61)
!17571 = !DILocation(line: 0, scope: !17564)
!17572 = !DILocation(line: 196, column: 26, scope: !17564)
!17573 = !DILocation(line: 196, column: 45, scope: !17564)
!17574 = !DILocation(line: 197, column: 28, scope: !17564)
!17575 = !DILocation(line: 197, column: 5, scope: !17564)
!17576 = !DILocation(line: 198, column: 15, scope: !17577)
!17577 = distinct !DILexicalBlock(scope: !17564, file: !3125, line: 197, column: 43)
!17578 = !DILocation(line: 199, column: 50, scope: !17577)
!17579 = !DILocation(line: 199, column: 25, scope: !17577)
!17580 = distinct !{!17580, !17575, !17581}
!17581 = !DILocation(line: 200, column: 5, scope: !17564)
!17582 = !DILocation(line: 202, column: 35, scope: !17564)
!17583 = !DILocation(line: 202, column: 5, scope: !17564)
!17584 = distinct !DISubprogram(name: "BlockIndex", scope: !3125, file: !3125, line: 205, type: !3140, scopeLine: 206, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3124, retainedNodes: !17585)
!17585 = !{!17586, !17587, !17588, !17589, !17590, !17591}
!17586 = !DILocalVariable(name: "DriveData", arg: 1, scope: !17584, file: !3125, line: 205, type: !88)
!17587 = !DILocalVariable(name: "blk_addr", arg: 2, scope: !17584, file: !3125, line: 205, type: !61)
!17588 = !DILocalVariable(name: "D", scope: !17584, file: !3125, line: 207, type: !3146)
!17589 = !DILocalVariable(name: "region", scope: !17584, file: !3125, line: 208, type: !61)
!17590 = !DILocalVariable(name: "BlockUpperAddr", scope: !17584, file: !3125, line: 208, type: !61)
!17591 = !DILocalVariable(name: "blk_idx", scope: !17584, file: !3125, line: 209, type: !61)
!17592 = !DILocation(line: 0, scope: !17584)
!17593 = !DILocation(line: 211, column: 25, scope: !17584)
!17594 = !DILocation(line: 211, column: 44, scope: !17584)
!17595 = !DILocation(line: 211, column: 81, scope: !17584)
!17596 = !DILocation(line: 211, column: 57, scope: !17584)
!17597 = !DILocation(line: 213, column: 28, scope: !17584)
!17598 = !DILocation(line: 213, column: 40, scope: !17584)
!17599 = !DILocation(line: 213, column: 66, scope: !17584)
!17600 = !DILocation(line: 213, column: 5, scope: !17584)
!17601 = !DILocation(line: 214, column: 17, scope: !17602)
!17602 = distinct !DILexicalBlock(scope: !17584, file: !3125, line: 213, column: 78)
!17603 = !DILocation(line: 215, column: 18, scope: !17602)
!17604 = !DILocation(line: 216, column: 15, scope: !17602)
!17605 = !DILocation(line: 217, column: 48, scope: !17602)
!17606 = !DILocation(line: 217, column: 85, scope: !17602)
!17607 = !DILocation(line: 217, column: 61, scope: !17602)
!17608 = distinct !{!17608, !17600, !17609}
!17609 = !DILocation(line: 218, column: 5, scope: !17584)
!17610 = !DILocation(line: 221, column: 53, scope: !17611)
!17611 = distinct !DILexicalBlock(scope: !17612, file: !3125, line: 220, column: 37)
!17612 = distinct !DILexicalBlock(scope: !17584, file: !3125, line: 220, column: 9)
!17613 = !DILocation(line: 221, column: 29, scope: !17611)
!17614 = !DILocation(line: 221, column: 17, scope: !17611)
!17615 = !DILocation(line: 222, column: 5, scope: !17611)
!17616 = !DILocation(line: 0, scope: !17612)
!17617 = !DILocation(line: 225, column: 5, scope: !17584)
!17618 = distinct !DISubprogram(name: "get_ROM_BASE", scope: !3125, file: !3125, line: 232, type: !5387, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3124, retainedNodes: !345)
!17619 = !DILocation(line: 238, column: 5, scope: !17618)
!17620 = distinct !DISubprogram(name: "get_NOR_FLASH_BASE_ADDRESS", scope: !3125, file: !3125, line: 243, type: !5387, scopeLine: 244, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3124, retainedNodes: !345)
!17621 = !DILocation(line: 245, column: 5, scope: !17620)
!17622 = distinct !DISubprogram(name: "get_Dual_NOR_FLASH_SIZE", scope: !3125, file: !3125, line: 249, type: !5387, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3124, retainedNodes: !345)
!17623 = !DILocation(line: 254, column: 5, scope: !17622)
!17624 = distinct !DISubprogram(name: "get_NOR_ALLOCATED_FAT_SPACE", scope: !3125, file: !3125, line: 259, type: !5387, scopeLine: 260, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3124, retainedNodes: !345)
!17625 = !DILocation(line: 261, column: 5, scope: !17624)
!17626 = distinct !DISubprogram(name: "DelayAWhile_UST", scope: !3125, file: !3125, line: 271, type: !5526, scopeLine: 272, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3124, retainedNodes: !17627)
!17627 = !{!17628, !17629}
!17628 = !DILocalVariable(name: "delay", arg: 1, scope: !17626, file: !3125, line: 271, type: !61)
!17629 = !DILocalVariable(name: "ret", scope: !17626, file: !3125, line: 276, type: !4544)
!17630 = !DILocation(line: 0, scope: !17626)
!17631 = !DILocation(line: 277, column: 11, scope: !17626)
!17632 = !DILocation(line: 278, column: 13, scope: !17633)
!17633 = distinct !DILexicalBlock(scope: !17626, file: !3125, line: 278, column: 9)
!17634 = !DILocation(line: 278, column: 9, scope: !17626)
!17635 = !DILocation(line: 279, column: 9, scope: !17636)
!17636 = distinct !DILexicalBlock(scope: !17637, file: !3125, line: 279, column: 9)
!17637 = distinct !DILexicalBlock(scope: !17638, file: !3125, line: 279, column: 9)
!17638 = distinct !DILexicalBlock(scope: !17639, file: !3125, line: 279, column: 9)
!17639 = distinct !DILexicalBlock(scope: !17633, file: !3125, line: 278, column: 35)
!17640 = !DILocation(line: 282, column: 1, scope: !17626)
!17641 = !DILocation(line: 96, column: 5, scope: !3197)
!17642 = !DILocation(line: 96, column: 23, scope: !3197)
!17643 = !DILocation(line: 98, column: 9, scope: !17644)
!17644 = distinct !DILexicalBlock(scope: !3197, file: !3198, line: 98, column: 9)
!17645 = !DILocation(line: 98, column: 9, scope: !3197)
!17646 = !DILocation(line: 101, column: 10, scope: !3197)
!17647 = !DILocation(line: 103, column: 12, scope: !3197)
!17648 = !DILocation(line: 103, column: 31, scope: !3197)
!17649 = !DILocation(line: 104, column: 5, scope: !3197)
!17650 = !DILocation(line: 106, column: 5, scope: !3197)
!17651 = !DILocation(line: 108, column: 12, scope: !3197)
!17652 = !DILocation(line: 0, scope: !3197)
!17653 = !DILocation(line: 109, column: 12, scope: !3197)
!17654 = !DILocation(line: 110, column: 15, scope: !17655)
!17655 = distinct !DILexicalBlock(scope: !3197, file: !3198, line: 110, column: 9)
!17656 = !DILocation(line: 110, column: 24, scope: !17655)
!17657 = !DILocation(line: 111, column: 9, scope: !17658)
!17658 = distinct !DILexicalBlock(scope: !17655, file: !3198, line: 110, column: 43)
!17659 = !DILocation(line: 113, column: 24, scope: !17660)
!17660 = distinct !DILexicalBlock(scope: !3197, file: !3198, line: 113, column: 9)
!17661 = !DILocation(line: 113, column: 15, scope: !17660)
!17662 = !DILocation(line: 114, column: 9, scope: !17663)
!17663 = distinct !DILexicalBlock(scope: !17660, file: !3198, line: 113, column: 43)
!17664 = !DILocation(line: 115, column: 5, scope: !17663)
!17665 = !DILocation(line: 118, column: 9, scope: !3197)
!17666 = !DILocation(line: 119, column: 9, scope: !17667)
!17667 = distinct !DILexicalBlock(scope: !17668, file: !3198, line: 118, column: 23)
!17668 = distinct !DILexicalBlock(scope: !3197, file: !3198, line: 118, column: 9)
!17669 = !DILocation(line: 122, column: 9, scope: !17667)
!17670 = !DILocation(line: 128, column: 9, scope: !17667)
!17671 = !DILocation(line: 131, column: 9, scope: !17667)
!17672 = !DILocation(line: 134, column: 9, scope: !17667)
!17673 = !DILocation(line: 137, column: 9, scope: !17667)
!17674 = !DILocation(line: 140, column: 9, scope: !17667)
!17675 = !DILocation(line: 142, column: 9, scope: !17667)
!17676 = !DILocation(line: 143, column: 9, scope: !17667)
!17677 = !DILocation(line: 144, column: 9, scope: !17667)
!17678 = !DILocation(line: 147, column: 9, scope: !17667)
!17679 = !DILocation(line: 149, column: 9, scope: !17667)
!17680 = !DILocation(line: 150, column: 5, scope: !17667)
!17681 = !DILocation(line: 153, column: 9, scope: !3197)
!17682 = !DILocation(line: 155, column: 9, scope: !17683)
!17683 = distinct !DILexicalBlock(scope: !17684, file: !3198, line: 153, column: 23)
!17684 = distinct !DILexicalBlock(scope: !3197, file: !3198, line: 153, column: 9)
!17685 = !DILocation(line: 160, column: 9, scope: !17683)
!17686 = !DILocation(line: 162, column: 9, scope: !17683)
!17687 = !DILocation(line: 164, column: 9, scope: !17683)
!17688 = !DILocation(line: 166, column: 9, scope: !17683)
!17689 = !DILocation(line: 168, column: 9, scope: !17683)
!17690 = !DILocation(line: 170, column: 9, scope: !17683)
!17691 = !DILocation(line: 172, column: 9, scope: !17683)
!17692 = !DILocation(line: 174, column: 9, scope: !17683)
!17693 = !DILocation(line: 176, column: 9, scope: !17683)
!17694 = !DILocation(line: 179, column: 9, scope: !17683)
!17695 = !DILocation(line: 181, column: 9, scope: !17683)
!17696 = !DILocation(line: 183, column: 9, scope: !17683)
!17697 = !DILocation(line: 185, column: 9, scope: !17683)
!17698 = !DILocation(line: 186, column: 9, scope: !17683)
!17699 = !DILocation(line: 188, column: 9, scope: !17683)
!17700 = !DILocation(line: 189, column: 5, scope: !17683)
!17701 = !DILocation(line: 192, column: 5, scope: !3197)
!17702 = !DILocation(line: 195, column: 5, scope: !3197)
!17703 = !DILocation(line: 197, column: 5, scope: !3197)
!17704 = !DILocation(line: 199, column: 5, scope: !3197)
!17705 = !DILocation(line: 200, column: 1, scope: !3197)
!17706 = distinct !DISubprogram(name: "pmu_init_power_mode", scope: !3198, file: !3198, line: 650, type: !17707, scopeLine: 651, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3199, retainedNodes: !17711)
!17707 = !DISubroutineType(types: !17708)
!17708 = !{null, !17709}
!17709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17710, size: 32)
!17710 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 64, elements: !1046)
!17711 = !{!17712, !17713}
!17712 = !DILocalVariable(name: "power_mode_setting", arg: 1, scope: !17706, file: !3198, line: 650, type: !17709)
!17713 = !DILocalVariable(name: "i", scope: !17706, file: !3198, line: 652, type: !18)
!17714 = !DILocation(line: 0, scope: !17706)
!17715 = !DILocation(line: 655, column: 5, scope: !17716)
!17716 = distinct !DILexicalBlock(scope: !17706, file: !3198, line: 655, column: 5)
!17717 = !DILocation(line: 656, column: 70, scope: !17718)
!17718 = distinct !DILexicalBlock(scope: !17719, file: !3198, line: 655, column: 29)
!17719 = distinct !DILexicalBlock(scope: !17716, file: !3198, line: 655, column: 5)
!17720 = !DILocation(line: 656, column: 91, scope: !17718)
!17721 = !DILocation(line: 656, column: 76, scope: !17718)
!17722 = !DILocation(line: 656, column: 9, scope: !17718)
!17723 = !DILocation(line: 657, column: 91, scope: !17718)
!17724 = !DILocation(line: 657, column: 76, scope: !17718)
!17725 = !DILocation(line: 657, column: 9, scope: !17718)
!17726 = !DILocation(line: 658, column: 91, scope: !17718)
!17727 = !DILocation(line: 658, column: 76, scope: !17718)
!17728 = !DILocation(line: 658, column: 9, scope: !17718)
!17729 = !DILocation(line: 659, column: 91, scope: !17718)
!17730 = !DILocation(line: 659, column: 76, scope: !17718)
!17731 = !DILocation(line: 659, column: 9, scope: !17718)
!17732 = !DILocation(line: 660, column: 91, scope: !17718)
!17733 = !DILocation(line: 660, column: 76, scope: !17718)
!17734 = !DILocation(line: 660, column: 9, scope: !17718)
!17735 = !DILocation(line: 661, column: 91, scope: !17718)
!17736 = !DILocation(line: 661, column: 76, scope: !17718)
!17737 = !DILocation(line: 661, column: 9, scope: !17718)
!17738 = !DILocation(line: 662, column: 91, scope: !17718)
!17739 = !DILocation(line: 662, column: 76, scope: !17718)
!17740 = !DILocation(line: 662, column: 9, scope: !17718)
!17741 = !DILocation(line: 663, column: 91, scope: !17718)
!17742 = !DILocation(line: 663, column: 76, scope: !17718)
!17743 = !DILocation(line: 663, column: 9, scope: !17718)
!17744 = !DILocation(line: 664, column: 91, scope: !17718)
!17745 = !DILocation(line: 664, column: 76, scope: !17718)
!17746 = !DILocation(line: 664, column: 9, scope: !17718)
!17747 = !DILocation(line: 665, column: 91, scope: !17718)
!17748 = !DILocation(line: 665, column: 76, scope: !17718)
!17749 = !DILocation(line: 665, column: 9, scope: !17718)
!17750 = !DILocation(line: 655, column: 19, scope: !17719)
!17751 = distinct !{!17751, !17715, !17752}
!17752 = !DILocation(line: 666, column: 5, scope: !17716)
!17753 = !DILocation(line: 667, column: 5, scope: !17706)
!17754 = !DILocation(line: 668, column: 5, scope: !17706)
!17755 = !DILocation(line: 671, column: 5, scope: !17756)
!17756 = distinct !DILexicalBlock(scope: !17706, file: !3198, line: 671, column: 5)
!17757 = !DILocation(line: 672, column: 74, scope: !17758)
!17758 = distinct !DILexicalBlock(scope: !17759, file: !3198, line: 671, column: 29)
!17759 = distinct !DILexicalBlock(scope: !17756, file: !3198, line: 671, column: 5)
!17760 = !DILocation(line: 672, column: 100, scope: !17758)
!17761 = !DILocation(line: 672, column: 80, scope: !17758)
!17762 = !DILocation(line: 672, column: 155, scope: !17758)
!17763 = !DILocation(line: 672, column: 131, scope: !17758)
!17764 = !DILocation(line: 672, column: 126, scope: !17758)
!17765 = !DILocation(line: 672, column: 9, scope: !17758)
!17766 = !DILocation(line: 673, column: 100, scope: !17758)
!17767 = !DILocation(line: 673, column: 80, scope: !17758)
!17768 = !DILocation(line: 673, column: 131, scope: !17758)
!17769 = !DILocation(line: 673, column: 126, scope: !17758)
!17770 = !DILocation(line: 673, column: 9, scope: !17758)
!17771 = !DILocation(line: 674, column: 100, scope: !17758)
!17772 = !DILocation(line: 674, column: 80, scope: !17758)
!17773 = !DILocation(line: 674, column: 131, scope: !17758)
!17774 = !DILocation(line: 674, column: 126, scope: !17758)
!17775 = !DILocation(line: 674, column: 9, scope: !17758)
!17776 = !DILocation(line: 675, column: 100, scope: !17758)
!17777 = !DILocation(line: 675, column: 80, scope: !17758)
!17778 = !DILocation(line: 675, column: 131, scope: !17758)
!17779 = !DILocation(line: 675, column: 126, scope: !17758)
!17780 = !DILocation(line: 675, column: 9, scope: !17758)
!17781 = !DILocation(line: 676, column: 100, scope: !17758)
!17782 = !DILocation(line: 676, column: 80, scope: !17758)
!17783 = !DILocation(line: 676, column: 131, scope: !17758)
!17784 = !DILocation(line: 676, column: 126, scope: !17758)
!17785 = !DILocation(line: 676, column: 9, scope: !17758)
!17786 = !DILocation(line: 677, column: 100, scope: !17758)
!17787 = !DILocation(line: 677, column: 80, scope: !17758)
!17788 = !DILocation(line: 677, column: 131, scope: !17758)
!17789 = !DILocation(line: 677, column: 126, scope: !17758)
!17790 = !DILocation(line: 677, column: 9, scope: !17758)
!17791 = !DILocation(line: 678, column: 100, scope: !17758)
!17792 = !DILocation(line: 678, column: 80, scope: !17758)
!17793 = !DILocation(line: 678, column: 131, scope: !17758)
!17794 = !DILocation(line: 678, column: 126, scope: !17758)
!17795 = !DILocation(line: 678, column: 9, scope: !17758)
!17796 = distinct !{!17796, !17755, !17797}
!17797 = !DILocation(line: 679, column: 5, scope: !17756)
!17798 = !DILocation(line: 680, column: 5, scope: !17706)
!17799 = !DILocation(line: 681, column: 5, scope: !17706)
!17800 = !DILocation(line: 682, column: 5, scope: !17706)
!17801 = !DILocation(line: 683, column: 5, scope: !17706)
!17802 = !DILocation(line: 686, column: 48, scope: !17706)
!17803 = !DILocation(line: 686, column: 35, scope: !17706)
!17804 = !DILocation(line: 686, column: 5, scope: !17706)
!17805 = !DILocation(line: 687, column: 48, scope: !17706)
!17806 = !DILocation(line: 687, column: 35, scope: !17706)
!17807 = !DILocation(line: 687, column: 5, scope: !17706)
!17808 = !DILocation(line: 688, column: 48, scope: !17706)
!17809 = !DILocation(line: 688, column: 35, scope: !17706)
!17810 = !DILocation(line: 688, column: 5, scope: !17706)
!17811 = !DILocation(line: 689, column: 48, scope: !17706)
!17812 = !DILocation(line: 689, column: 35, scope: !17706)
!17813 = !DILocation(line: 689, column: 5, scope: !17706)
!17814 = !DILocation(line: 690, column: 48, scope: !17706)
!17815 = !DILocation(line: 690, column: 35, scope: !17706)
!17816 = !DILocation(line: 690, column: 5, scope: !17706)
!17817 = !DILocation(line: 691, column: 48, scope: !17706)
!17818 = !DILocation(line: 691, column: 35, scope: !17706)
!17819 = !DILocation(line: 691, column: 5, scope: !17706)
!17820 = !DILocation(line: 692, column: 48, scope: !17706)
!17821 = !DILocation(line: 692, column: 35, scope: !17706)
!17822 = !DILocation(line: 692, column: 5, scope: !17706)
!17823 = !DILocation(line: 693, column: 5, scope: !17706)
!17824 = !DILocation(line: 694, column: 5, scope: !17706)
!17825 = !DILocation(line: 695, column: 5, scope: !17706)
!17826 = !DILocation(line: 696, column: 5, scope: !17706)
!17827 = !DILocation(line: 697, column: 5, scope: !17706)
!17828 = !DILocation(line: 699, column: 5, scope: !17706)
!17829 = !DILocation(line: 700, column: 5, scope: !17706)
!17830 = !DILocation(line: 703, column: 5, scope: !17706)
!17831 = !DILocation(line: 705, column: 5, scope: !17706)
!17832 = !DILocation(line: 709, column: 5, scope: !17706)
!17833 = !DILocation(line: 710, column: 5, scope: !17706)
!17834 = !DILocation(line: 717, column: 5, scope: !17706)
!17835 = !DILocation(line: 718, column: 5, scope: !17706)
!17836 = !DILocation(line: 720, column: 5, scope: !17706)
!17837 = !DILocation(line: 721, column: 5, scope: !17706)
!17838 = !DILocation(line: 722, column: 1, scope: !17706)
!17839 = distinct !DISubprogram(name: "pmu_eint_init", scope: !3198, file: !3198, line: 278, type: !343, scopeLine: 279, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3199, retainedNodes: !17840)
!17840 = !{!17841}
!17841 = !DILocalVariable(name: "config", scope: !17839, file: !3198, line: 280, type: !17842)
!17842 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_eint_config_t", file: !3216, line: 225, baseType: !17843)
!17843 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3216, line: 222, size: 64, elements: !17844)
!17844 = !{!17845, !17847}
!17845 = !DIDerivedType(tag: DW_TAG_member, name: "trigger_mode", scope: !17843, file: !3216, line: 223, baseType: !17846, size: 32)
!17846 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_eint_trigger_mode_t", file: !3216, line: 200, baseType: !3215)
!17847 = !DIDerivedType(tag: DW_TAG_member, name: "debounce_time", scope: !17843, file: !3216, line: 224, baseType: !61, size: 32, offset: 32)
!17848 = !DILocation(line: 280, column: 5, scope: !17839)
!17849 = !DILocation(line: 280, column: 23, scope: !17839)
!17850 = !DILocation(line: 281, column: 12, scope: !17839)
!17851 = !DILocation(line: 281, column: 25, scope: !17839)
!17852 = !DILocation(line: 282, column: 12, scope: !17839)
!17853 = !DILocation(line: 282, column: 26, scope: !17839)
!17854 = !DILocation(line: 284, column: 5, scope: !17839)
!17855 = !DILocation(line: 285, column: 5, scope: !17839)
!17856 = !DILocation(line: 287, column: 5, scope: !17839)
!17857 = !DILocation(line: 288, column: 1, scope: !17839)
!17858 = !DILocation(line: 0, scope: !3361)
!17859 = !DILocation(line: 297, column: 5, scope: !3361)
!17860 = !DILocation(line: 298, column: 12, scope: !3361)
!17861 = !DILocation(line: 0, scope: !17862)
!17862 = distinct !DILexicalBlock(scope: !3361, file: !3198, line: 300, column: 5)
!17863 = !DILocation(line: 300, column: 5, scope: !17862)
!17864 = !DILocation(line: 0, scope: !17865)
!17865 = distinct !DILexicalBlock(scope: !3361, file: !3198, line: 305, column: 5)
!17866 = !DILocation(line: 306, column: 26, scope: !17867)
!17867 = distinct !DILexicalBlock(scope: !17868, file: !3198, line: 305, column: 41)
!17868 = distinct !DILexicalBlock(scope: !17865, file: !3198, line: 305, column: 5)
!17869 = !DILocation(line: 305, column: 5, scope: !17865)
!17870 = !DILocation(line: 301, column: 49, scope: !17871)
!17871 = distinct !DILexicalBlock(scope: !17872, file: !3198, line: 300, column: 41)
!17872 = distinct !DILexicalBlock(scope: !17862, file: !3198, line: 300, column: 5)
!17873 = !DILocation(line: 301, column: 26, scope: !17871)
!17874 = !DILocation(line: 301, column: 17, scope: !17871)
!17875 = !DILocation(line: 301, column: 9, scope: !17871)
!17876 = !DILocation(line: 301, column: 24, scope: !17871)
!17877 = !DILocation(line: 300, column: 37, scope: !17872)
!17878 = !DILocation(line: 300, column: 27, scope: !17872)
!17879 = distinct !{!17879, !17863, !17880}
!17880 = !DILocation(line: 302, column: 5, scope: !17862)
!17881 = !DILocation(line: 0, scope: !17882)
!17882 = distinct !DILexicalBlock(scope: !3361, file: !3198, line: 313, column: 5)
!17883 = !DILocation(line: 314, column: 26, scope: !17884)
!17884 = distinct !DILexicalBlock(scope: !17885, file: !3198, line: 313, column: 41)
!17885 = distinct !DILexicalBlock(scope: !17882, file: !3198, line: 313, column: 5)
!17886 = !DILocation(line: 313, column: 5, scope: !17882)
!17887 = !DILocation(line: 306, column: 47, scope: !17867)
!17888 = !DILocation(line: 306, column: 37, scope: !17867)
!17889 = !DILocation(line: 306, column: 53, scope: !17867)
!17890 = !DILocation(line: 307, column: 28, scope: !17891)
!17891 = distinct !DILexicalBlock(scope: !17867, file: !3198, line: 307, column: 13)
!17892 = !DILocation(line: 307, column: 34, scope: !17891)
!17893 = !DILocation(line: 307, column: 64, scope: !17891)
!17894 = !DILocation(line: 307, column: 13, scope: !17867)
!17895 = !DILocation(line: 308, column: 39, scope: !17896)
!17896 = distinct !DILexicalBlock(scope: !17891, file: !3198, line: 307, column: 90)
!17897 = !DILocation(line: 308, column: 52, scope: !17896)
!17898 = !DILocation(line: 308, column: 93, scope: !17896)
!17899 = !DILocation(line: 308, column: 13, scope: !17896)
!17900 = !DILocation(line: 305, column: 37, scope: !17868)
!17901 = !DILocation(line: 309, column: 9, scope: !17896)
!17902 = !DILocation(line: 305, column: 27, scope: !17868)
!17903 = distinct !{!17903, !17869, !17904}
!17904 = !DILocation(line: 310, column: 5, scope: !17865)
!17905 = !DILocation(line: 0, scope: !17906)
!17906 = distinct !DILexicalBlock(scope: !3361, file: !3198, line: 321, column: 5)
!17907 = !DILocation(line: 322, column: 26, scope: !17908)
!17908 = distinct !DILexicalBlock(scope: !17909, file: !3198, line: 321, column: 41)
!17909 = distinct !DILexicalBlock(scope: !17906, file: !3198, line: 321, column: 5)
!17910 = !DILocation(line: 321, column: 5, scope: !17906)
!17911 = !DILocation(line: 314, column: 47, scope: !17884)
!17912 = !DILocation(line: 314, column: 37, scope: !17884)
!17913 = !DILocation(line: 314, column: 53, scope: !17884)
!17914 = !DILocation(line: 315, column: 28, scope: !17915)
!17915 = distinct !DILexicalBlock(scope: !17884, file: !3198, line: 315, column: 13)
!17916 = !DILocation(line: 315, column: 34, scope: !17915)
!17917 = !DILocation(line: 315, column: 63, scope: !17915)
!17918 = !DILocation(line: 315, column: 68, scope: !17915)
!17919 = !DILocation(line: 315, column: 13, scope: !17884)
!17920 = !DILocation(line: 316, column: 43, scope: !17921)
!17921 = distinct !DILexicalBlock(scope: !17915, file: !3198, line: 315, column: 94)
!17922 = !DILocation(line: 316, column: 56, scope: !17921)
!17923 = !DILocation(line: 316, column: 101, scope: !17921)
!17924 = !DILocation(line: 316, column: 13, scope: !17921)
!17925 = !DILocation(line: 313, column: 37, scope: !17885)
!17926 = !DILocation(line: 317, column: 9, scope: !17921)
!17927 = !DILocation(line: 313, column: 27, scope: !17885)
!17928 = distinct !{!17928, !17886, !17929}
!17929 = !DILocation(line: 318, column: 5, scope: !17882)
!17930 = !DILocation(line: 0, scope: !17931)
!17931 = distinct !DILexicalBlock(scope: !3361, file: !3198, line: 329, column: 5)
!17932 = !DILocation(line: 330, column: 26, scope: !17933)
!17933 = distinct !DILexicalBlock(scope: !17934, file: !3198, line: 329, column: 41)
!17934 = distinct !DILexicalBlock(scope: !17931, file: !3198, line: 329, column: 5)
!17935 = !DILocation(line: 329, column: 5, scope: !17931)
!17936 = !DILocation(line: 322, column: 47, scope: !17908)
!17937 = !DILocation(line: 322, column: 37, scope: !17908)
!17938 = !DILocation(line: 322, column: 53, scope: !17908)
!17939 = !DILocation(line: 323, column: 28, scope: !17940)
!17940 = distinct !DILexicalBlock(scope: !17908, file: !3198, line: 323, column: 13)
!17941 = !DILocation(line: 323, column: 34, scope: !17940)
!17942 = !DILocation(line: 323, column: 63, scope: !17940)
!17943 = !DILocation(line: 323, column: 68, scope: !17940)
!17944 = !DILocation(line: 323, column: 13, scope: !17908)
!17945 = !DILocation(line: 324, column: 43, scope: !17946)
!17946 = distinct !DILexicalBlock(scope: !17940, file: !3198, line: 323, column: 94)
!17947 = !DILocation(line: 324, column: 56, scope: !17946)
!17948 = !DILocation(line: 324, column: 101, scope: !17946)
!17949 = !DILocation(line: 324, column: 13, scope: !17946)
!17950 = !DILocation(line: 321, column: 37, scope: !17909)
!17951 = !DILocation(line: 325, column: 9, scope: !17946)
!17952 = !DILocation(line: 321, column: 27, scope: !17909)
!17953 = distinct !{!17953, !17910, !17954}
!17954 = !DILocation(line: 326, column: 5, scope: !17906)
!17955 = !DILocation(line: 0, scope: !17956)
!17956 = distinct !DILexicalBlock(scope: !3361, file: !3198, line: 337, column: 5)
!17957 = !DILocation(line: 338, column: 26, scope: !17958)
!17958 = distinct !DILexicalBlock(scope: !17959, file: !3198, line: 337, column: 41)
!17959 = distinct !DILexicalBlock(scope: !17956, file: !3198, line: 337, column: 5)
!17960 = !DILocation(line: 337, column: 5, scope: !17956)
!17961 = !DILocation(line: 330, column: 47, scope: !17933)
!17962 = !DILocation(line: 330, column: 37, scope: !17933)
!17963 = !DILocation(line: 330, column: 53, scope: !17933)
!17964 = !DILocation(line: 331, column: 28, scope: !17965)
!17965 = distinct !DILexicalBlock(scope: !17933, file: !3198, line: 331, column: 13)
!17966 = !DILocation(line: 331, column: 34, scope: !17965)
!17967 = !DILocation(line: 331, column: 63, scope: !17965)
!17968 = !DILocation(line: 331, column: 69, scope: !17965)
!17969 = !DILocation(line: 331, column: 13, scope: !17933)
!17970 = !DILocation(line: 332, column: 44, scope: !17971)
!17971 = distinct !DILexicalBlock(scope: !17965, file: !3198, line: 331, column: 95)
!17972 = !DILocation(line: 332, column: 57, scope: !17971)
!17973 = !DILocation(line: 332, column: 103, scope: !17971)
!17974 = !DILocation(line: 332, column: 13, scope: !17971)
!17975 = !DILocation(line: 329, column: 37, scope: !17934)
!17976 = !DILocation(line: 333, column: 9, scope: !17971)
!17977 = !DILocation(line: 329, column: 27, scope: !17934)
!17978 = distinct !{!17978, !17935, !17979}
!17979 = !DILocation(line: 334, column: 5, scope: !17931)
!17980 = !DILocation(line: 0, scope: !17981)
!17981 = distinct !DILexicalBlock(scope: !3361, file: !3198, line: 345, column: 5)
!17982 = !DILocation(line: 346, column: 26, scope: !17983)
!17983 = distinct !DILexicalBlock(scope: !17984, file: !3198, line: 345, column: 41)
!17984 = distinct !DILexicalBlock(scope: !17981, file: !3198, line: 345, column: 5)
!17985 = !DILocation(line: 345, column: 5, scope: !17981)
!17986 = !DILocation(line: 338, column: 47, scope: !17958)
!17987 = !DILocation(line: 338, column: 37, scope: !17958)
!17988 = !DILocation(line: 338, column: 53, scope: !17958)
!17989 = !DILocation(line: 339, column: 28, scope: !17990)
!17990 = distinct !DILexicalBlock(scope: !17958, file: !3198, line: 339, column: 13)
!17991 = !DILocation(line: 339, column: 34, scope: !17990)
!17992 = !DILocation(line: 339, column: 63, scope: !17990)
!17993 = !DILocation(line: 339, column: 69, scope: !17990)
!17994 = !DILocation(line: 339, column: 13, scope: !17958)
!17995 = !DILocation(line: 340, column: 44, scope: !17996)
!17996 = distinct !DILexicalBlock(scope: !17990, file: !3198, line: 339, column: 95)
!17997 = !DILocation(line: 340, column: 57, scope: !17996)
!17998 = !DILocation(line: 340, column: 103, scope: !17996)
!17999 = !DILocation(line: 340, column: 13, scope: !17996)
!18000 = !DILocation(line: 337, column: 37, scope: !17959)
!18001 = !DILocation(line: 341, column: 9, scope: !17996)
!18002 = !DILocation(line: 337, column: 27, scope: !17959)
!18003 = distinct !{!18003, !17960, !18004}
!18004 = !DILocation(line: 342, column: 5, scope: !17956)
!18005 = !DILocation(line: 0, scope: !18006)
!18006 = distinct !DILexicalBlock(scope: !3361, file: !3198, line: 353, column: 5)
!18007 = !DILocation(line: 354, column: 26, scope: !18008)
!18008 = distinct !DILexicalBlock(scope: !18009, file: !3198, line: 353, column: 41)
!18009 = distinct !DILexicalBlock(scope: !18006, file: !3198, line: 353, column: 5)
!18010 = !DILocation(line: 353, column: 5, scope: !18006)
!18011 = !DILocation(line: 347, column: 28, scope: !18012)
!18012 = distinct !DILexicalBlock(scope: !17983, file: !3198, line: 347, column: 13)
!18013 = !DILocation(line: 347, column: 34, scope: !18012)
!18014 = !DILocation(line: 347, column: 63, scope: !18012)
!18015 = !DILocation(line: 347, column: 69, scope: !18012)
!18016 = !DILocation(line: 347, column: 13, scope: !17983)
!18017 = !DILocation(line: 348, column: 44, scope: !18018)
!18018 = distinct !DILexicalBlock(scope: !18012, file: !3198, line: 347, column: 95)
!18019 = !DILocation(line: 348, column: 103, scope: !18018)
!18020 = !DILocation(line: 348, column: 13, scope: !18018)
!18021 = !DILocation(line: 345, column: 37, scope: !17984)
!18022 = !DILocation(line: 349, column: 9, scope: !18018)
!18023 = !DILocation(line: 345, column: 27, scope: !17984)
!18024 = distinct !{!18024, !17985, !18025}
!18025 = !DILocation(line: 350, column: 5, scope: !17981)
!18026 = !DILocation(line: 0, scope: !18027)
!18027 = distinct !DILexicalBlock(scope: !3361, file: !3198, line: 360, column: 5)
!18028 = !DILocation(line: 360, column: 5, scope: !18027)
!18029 = !DILocation(line: 355, column: 28, scope: !18030)
!18030 = distinct !DILexicalBlock(scope: !18008, file: !3198, line: 355, column: 13)
!18031 = !DILocation(line: 355, column: 34, scope: !18030)
!18032 = !DILocation(line: 355, column: 63, scope: !18030)
!18033 = !DILocation(line: 355, column: 69, scope: !18030)
!18034 = !DILocation(line: 355, column: 13, scope: !18008)
!18035 = !DILocation(line: 356, column: 44, scope: !18036)
!18036 = distinct !DILexicalBlock(scope: !18030, file: !3198, line: 355, column: 95)
!18037 = !DILocation(line: 356, column: 103, scope: !18036)
!18038 = !DILocation(line: 356, column: 13, scope: !18036)
!18039 = !DILocation(line: 353, column: 37, scope: !18009)
!18040 = !DILocation(line: 357, column: 9, scope: !18036)
!18041 = !DILocation(line: 353, column: 27, scope: !18009)
!18042 = distinct !{!18042, !18010, !18043}
!18043 = !DILocation(line: 358, column: 5, scope: !18006)
!18044 = !DILocation(line: 0, scope: !18045)
!18045 = distinct !DILexicalBlock(scope: !3361, file: !3198, line: 363, column: 5)
!18046 = !DILocation(line: 363, column: 5, scope: !18045)
!18047 = !DILocation(line: 361, column: 32, scope: !18048)
!18048 = distinct !DILexicalBlock(scope: !18049, file: !3198, line: 360, column: 41)
!18049 = distinct !DILexicalBlock(scope: !18027, file: !3198, line: 360, column: 5)
!18050 = !DILocation(line: 361, column: 9, scope: !18048)
!18051 = !DILocation(line: 360, column: 37, scope: !18049)
!18052 = !DILocation(line: 360, column: 27, scope: !18049)
!18053 = distinct !{!18053, !18028, !18054}
!18054 = !DILocation(line: 362, column: 5, scope: !18027)
!18055 = !DILocation(line: 364, column: 49, scope: !18056)
!18056 = distinct !DILexicalBlock(scope: !18057, file: !3198, line: 363, column: 41)
!18057 = distinct !DILexicalBlock(scope: !18045, file: !3198, line: 363, column: 5)
!18058 = !DILocation(line: 364, column: 26, scope: !18056)
!18059 = !DILocation(line: 364, column: 17, scope: !18056)
!18060 = !DILocation(line: 364, column: 9, scope: !18056)
!18061 = !DILocation(line: 364, column: 24, scope: !18056)
!18062 = !DILocation(line: 365, column: 28, scope: !18063)
!18063 = distinct !DILexicalBlock(scope: !18056, file: !3198, line: 365, column: 13)
!18064 = !DILocation(line: 365, column: 13, scope: !18056)
!18065 = !DILocation(line: 366, column: 36, scope: !18066)
!18066 = distinct !DILexicalBlock(scope: !18063, file: !3198, line: 365, column: 34)
!18067 = !DILocation(line: 366, column: 13, scope: !18066)
!18068 = !DILocation(line: 363, column: 37, scope: !18057)
!18069 = !DILocation(line: 367, column: 9, scope: !18066)
!18070 = !DILocation(line: 363, column: 27, scope: !18057)
!18071 = distinct !{!18071, !18046, !18072}
!18072 = !DILocation(line: 368, column: 5, scope: !18045)
!18073 = !DILocation(line: 369, column: 5, scope: !3361)
!18074 = !DILocation(line: 370, column: 5, scope: !3361)
!18075 = !DILocation(line: 371, column: 1, scope: !3361)
!18076 = distinct !DISubprogram(name: "pmu_set_register_value_mt6385", scope: !3198, file: !3198, line: 202, type: !4155, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3199, retainedNodes: !18077)
!18077 = !{!18078, !18079, !18080, !18081, !18082, !18083, !18084}
!18078 = !DILocalVariable(name: "address", arg: 1, scope: !18076, file: !3198, line: 202, type: !1214)
!18079 = !DILocalVariable(name: "mask", arg: 2, scope: !18076, file: !3198, line: 202, type: !1214)
!18080 = !DILocalVariable(name: "shift", arg: 3, scope: !18076, file: !3198, line: 202, type: !1214)
!18081 = !DILocalVariable(name: "value", arg: 4, scope: !18076, file: !3198, line: 202, type: !1214)
!18082 = !DILocalVariable(name: "send_buffer", scope: !18076, file: !3198, line: 204, type: !3801)
!18083 = !DILocalVariable(name: "receive_buffer", scope: !18076, file: !3198, line: 204, type: !3803)
!18084 = !DILocalVariable(name: "mask_pri", scope: !18076, file: !3198, line: 205, type: !18)
!18085 = !DILocation(line: 0, scope: !18076)
!18086 = !DILocation(line: 204, column: 5, scope: !18076)
!18087 = !DILocation(line: 204, column: 19, scope: !18076)
!18088 = !DILocation(line: 204, column: 35, scope: !18076)
!18089 = !DILocation(line: 207, column: 22, scope: !18076)
!18090 = !DILocation(line: 207, column: 5, scope: !18076)
!18091 = !DILocation(line: 207, column: 20, scope: !18076)
!18092 = !DILocation(line: 208, column: 32, scope: !18076)
!18093 = !DILocation(line: 208, column: 22, scope: !18076)
!18094 = !DILocation(line: 208, column: 20, scope: !18076)
!18095 = !DILocation(line: 210, column: 16, scope: !18076)
!18096 = !DILocation(line: 212, column: 5, scope: !18076)
!18097 = !DILocation(line: 214, column: 29, scope: !18076)
!18098 = !DILocation(line: 214, column: 37, scope: !18076)
!18099 = !DILocation(line: 214, column: 34, scope: !18076)
!18100 = !DILocation(line: 214, column: 23, scope: !18076)
!18101 = !DILocation(line: 215, column: 43, scope: !18076)
!18102 = !DILocation(line: 215, column: 49, scope: !18076)
!18103 = !DILocation(line: 215, column: 22, scope: !18076)
!18104 = !DILocation(line: 215, column: 5, scope: !18076)
!18105 = !DILocation(line: 215, column: 20, scope: !18076)
!18106 = !DILocation(line: 217, column: 9, scope: !18107)
!18107 = distinct !DILexicalBlock(scope: !18076, file: !3198, line: 217, column: 9)
!18108 = !DILocation(line: 217, column: 41, scope: !18107)
!18109 = !DILocation(line: 0, scope: !18107)
!18110 = !DILocation(line: 224, column: 1, scope: !18076)
!18111 = distinct !DISubprogram(name: "Wrap_D2D_I2C_Read", scope: !3198, file: !3198, line: 257, type: !18112, scopeLine: 258, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3199, retainedNodes: !18114)
!18112 = !DISubroutineType(types: !18113)
!18113 = !{!161, !3765, !3765}
!18114 = !{!18115, !18116, !18117, !18126, !18127}
!18115 = !DILocalVariable(name: "ptr_send", arg: 1, scope: !18111, file: !3198, line: 257, type: !3765)
!18116 = !DILocalVariable(name: "ptr_read", arg: 2, scope: !18111, file: !3198, line: 257, type: !3765)
!18117 = !DILocalVariable(name: "config", scope: !18111, file: !3198, line: 259, type: !18118)
!18118 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmic_i2c_send_to_receive_config_t", file: !3202, line: 100, baseType: !18119)
!18119 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3202, line: 94, size: 160, elements: !18120)
!18120 = !{!18121, !18122, !18123, !18124, !18125}
!18121 = !DIDerivedType(tag: DW_TAG_member, name: "slave_address", scope: !18119, file: !3202, line: 95, baseType: !159, size: 8)
!18122 = !DIDerivedType(tag: DW_TAG_member, name: "send_data", scope: !18119, file: !3202, line: 96, baseType: !8027, size: 32, offset: 32)
!18123 = !DIDerivedType(tag: DW_TAG_member, name: "send_length", scope: !18119, file: !3202, line: 97, baseType: !61, size: 32, offset: 64)
!18124 = !DIDerivedType(tag: DW_TAG_member, name: "receive_buffer", scope: !18119, file: !3202, line: 98, baseType: !1055, size: 32, offset: 96)
!18125 = !DIDerivedType(tag: DW_TAG_member, name: "receive_length", scope: !18119, file: !3202, line: 99, baseType: !61, size: 32, offset: 128)
!18126 = !DILocalVariable(name: "retry_cnt", scope: !18111, file: !3198, line: 260, type: !161)
!18127 = !DILocalVariable(name: "result_read", scope: !18111, file: !3198, line: 260, type: !161)
!18128 = !DILocation(line: 0, scope: !18111)
!18129 = !DILocation(line: 259, column: 5, scope: !18111)
!18130 = !DILocation(line: 259, column: 39, scope: !18111)
!18131 = !DILocation(line: 262, column: 19, scope: !18111)
!18132 = !DILocation(line: 262, column: 31, scope: !18111)
!18133 = !DILocation(line: 262, column: 17, scope: !18111)
!18134 = !DILocation(line: 263, column: 31, scope: !18111)
!18135 = !DILocation(line: 264, column: 12, scope: !18111)
!18136 = !DILocation(line: 264, column: 31, scope: !18111)
!18137 = !DILocation(line: 265, column: 12, scope: !18111)
!18138 = !DILocation(line: 265, column: 31, scope: !18111)
!18139 = !DILocation(line: 266, column: 12, scope: !18111)
!18140 = !DILocation(line: 266, column: 31, scope: !18111)
!18141 = !DILocation(line: 267, column: 12, scope: !18111)
!18142 = !DILocation(line: 267, column: 31, scope: !18111)
!18143 = !DILocation(line: 269, column: 5, scope: !18111)
!18144 = !DILocation(line: 270, column: 23, scope: !18145)
!18145 = distinct !DILexicalBlock(scope: !18111, file: !3198, line: 269, column: 8)
!18146 = !DILocation(line: 271, column: 18, scope: !18145)
!18147 = !DILocation(line: 272, column: 15, scope: !18111)
!18148 = !DILocation(line: 272, column: 27, scope: !18111)
!18149 = !DILocation(line: 272, column: 33, scope: !18111)
!18150 = !DILocation(line: 272, column: 5, scope: !18145)
!18151 = distinct !{!18151, !18143, !18152}
!18152 = !DILocation(line: 272, column: 53, scope: !18111)
!18153 = !DILocation(line: 276, column: 1, scope: !18111)
!18154 = !DILocation(line: 275, column: 5, scope: !18111)
!18155 = distinct !DISubprogram(name: "Wrap_D2D_I2C_Write", scope: !3198, file: !3198, line: 241, type: !18156, scopeLine: 242, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3199, retainedNodes: !18158)
!18156 = !DISubroutineType(types: !18157)
!18157 = !{!161, !3765}
!18158 = !{!18159, !18160, !18161}
!18159 = !DILocalVariable(name: "ptr_send", arg: 1, scope: !18155, file: !3198, line: 241, type: !3765)
!18160 = !DILocalVariable(name: "retry_cnt", scope: !18155, file: !3198, line: 243, type: !161)
!18161 = !DILocalVariable(name: "result_read", scope: !18155, file: !3198, line: 243, type: !161)
!18162 = !DILocation(line: 0, scope: !18155)
!18163 = !DILocation(line: 245, column: 19, scope: !18155)
!18164 = !DILocation(line: 245, column: 31, scope: !18155)
!18165 = !DILocation(line: 245, column: 17, scope: !18155)
!18166 = !DILocation(line: 247, column: 5, scope: !18155)
!18167 = !DILocation(line: 248, column: 23, scope: !18168)
!18168 = distinct !DILexicalBlock(scope: !18155, file: !3198, line: 247, column: 8)
!18169 = !DILocation(line: 249, column: 18, scope: !18168)
!18170 = !DILocation(line: 250, column: 15, scope: !18155)
!18171 = !DILocation(line: 250, column: 27, scope: !18155)
!18172 = !DILocation(line: 250, column: 33, scope: !18155)
!18173 = !DILocation(line: 250, column: 5, scope: !18168)
!18174 = distinct !{!18174, !18166, !18175}
!18175 = !DILocation(line: 250, column: 53, scope: !18155)
!18176 = !DILocation(line: 253, column: 5, scope: !18155)
!18177 = distinct !DISubprogram(name: "pmu_get_register_value_mt6385", scope: !3198, file: !3198, line: 226, type: !4159, scopeLine: 227, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3199, retainedNodes: !18178)
!18178 = !{!18179, !18180, !18181, !18182, !18184, !18185}
!18179 = !DILocalVariable(name: "address", arg: 1, scope: !18177, file: !3198, line: 226, type: !1214)
!18180 = !DILocalVariable(name: "mask", arg: 2, scope: !18177, file: !3198, line: 226, type: !1214)
!18181 = !DILocalVariable(name: "shift", arg: 3, scope: !18177, file: !3198, line: 226, type: !1214)
!18182 = !DILocalVariable(name: "send_buffer", scope: !18177, file: !3198, line: 228, type: !18183)
!18183 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 16, elements: !522)
!18184 = !DILocalVariable(name: "receive_buffer", scope: !18177, file: !3198, line: 228, type: !3803)
!18185 = !DILocalVariable(name: "mask_pri", scope: !18177, file: !3198, line: 229, type: !18)
!18186 = !DILocation(line: 0, scope: !18177)
!18187 = !DILocation(line: 228, column: 5, scope: !18177)
!18188 = !DILocation(line: 228, column: 19, scope: !18177)
!18189 = !DILocation(line: 228, column: 35, scope: !18177)
!18190 = !DILocation(line: 231, column: 22, scope: !18177)
!18191 = !DILocation(line: 231, column: 5, scope: !18177)
!18192 = !DILocation(line: 231, column: 20, scope: !18177)
!18193 = !DILocation(line: 232, column: 32, scope: !18177)
!18194 = !DILocation(line: 232, column: 22, scope: !18177)
!18195 = !DILocation(line: 232, column: 20, scope: !18177)
!18196 = !DILocation(line: 234, column: 16, scope: !18177)
!18197 = !DILocation(line: 235, column: 5, scope: !18177)
!18198 = !DILocation(line: 236, column: 5, scope: !18177)
!18199 = !DILocation(line: 237, column: 14, scope: !18177)
!18200 = !DILocation(line: 237, column: 35, scope: !18177)
!18201 = !DILocation(line: 237, column: 32, scope: !18177)
!18202 = !DILocation(line: 237, column: 42, scope: !18177)
!18203 = !DILocation(line: 237, column: 41, scope: !18177)
!18204 = !DILocation(line: 237, column: 12, scope: !18177)
!18205 = !DILocation(line: 238, column: 1, scope: !18177)
!18206 = !DILocation(line: 237, column: 5, scope: !18177)
!18207 = distinct !DISubprogram(name: "pmu_register_callback", scope: !3198, file: !3198, line: 373, type: !18208, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3199, retainedNodes: !18214)
!18208 = !DISubroutineType(types: !18209)
!18209 = !{!18210, !18211, !18212, !18213, !88}
!18210 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmu_status_t", file: !3259, line: 99, baseType: !3263)
!18211 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmu_int_ch_t", file: !3259, line: 91, baseType: !3269)
!18212 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmu_int_trigger_mode_t", file: !3259, line: 50, baseType: !3304)
!18213 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmu_callback_t", file: !3259, line: 108, baseType: !3377)
!18214 = !{!18215, !18216, !18217, !18218, !18219, !18220}
!18215 = !DILocalVariable(name: "pmu_int_ch", arg: 1, scope: !18207, file: !3198, line: 373, type: !18211)
!18216 = !DILocalVariable(name: "trigger_mode", arg: 2, scope: !18207, file: !3198, line: 373, type: !18212)
!18217 = !DILocalVariable(name: "callback", arg: 3, scope: !18207, file: !3198, line: 373, type: !18213)
!18218 = !DILocalVariable(name: "user_data", arg: 4, scope: !18207, file: !3198, line: 373, type: !88)
!18219 = !DILocalVariable(name: "status", scope: !18207, file: !3198, line: 375, type: !18210)
!18220 = !DILocalVariable(name: "mask", scope: !18207, file: !3198, line: 376, type: !18)
!18221 = !DILocation(line: 0, scope: !18207)
!18222 = !DILocation(line: 378, column: 20, scope: !18223)
!18223 = distinct !DILexicalBlock(scope: !18207, file: !3198, line: 378, column: 9)
!18224 = !DILocation(line: 378, column: 35, scope: !18223)
!18225 = !DILocation(line: 383, column: 12, scope: !18207)
!18226 = !DILocation(line: 385, column: 36, scope: !18207)
!18227 = !DILocation(line: 385, column: 49, scope: !18207)
!18228 = !DILocation(line: 386, column: 36, scope: !18207)
!18229 = !DILocation(line: 386, column: 46, scope: !18207)
!18230 = !DILocation(line: 387, column: 51, scope: !18207)
!18231 = !DILocation(line: 387, column: 36, scope: !18207)
!18232 = !DILocation(line: 387, column: 49, scope: !18207)
!18233 = !DILocation(line: 388, column: 36, scope: !18207)
!18234 = !DILocation(line: 388, column: 48, scope: !18207)
!18235 = !DILocation(line: 390, column: 5, scope: !18207)
!18236 = !DILocation(line: 392, column: 5, scope: !18207)
!18237 = !DILocation(line: 395, column: 5, scope: !18207)
!18238 = !DILocation(line: 396, column: 1, scope: !18207)
!18239 = distinct !DISubprogram(name: "pmu_enable_interrupt", scope: !3198, file: !3198, line: 414, type: !18240, scopeLine: 415, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3199, retainedNodes: !18242)
!18240 = !DISubroutineType(types: !18241)
!18241 = !{!18210, !18211, !18212, !161}
!18242 = !{!18243, !18244, !18245, !18246}
!18243 = !DILocalVariable(name: "int_ch", arg: 1, scope: !18239, file: !3198, line: 414, type: !18211)
!18244 = !DILocalVariable(name: "trigger_mode", arg: 2, scope: !18239, file: !3198, line: 414, type: !18212)
!18245 = !DILocalVariable(name: "enable", arg: 3, scope: !18239, file: !3198, line: 414, type: !161)
!18246 = !DILocalVariable(name: "Channel", scope: !18239, file: !3198, line: 416, type: !161)
!18247 = !DILocation(line: 0, scope: !18239)
!18248 = !DILocation(line: 418, column: 9, scope: !18249)
!18249 = distinct !DILexicalBlock(scope: !18239, file: !3198, line: 418, column: 9)
!18250 = !DILocation(line: 418, column: 17, scope: !18249)
!18251 = !DILocation(line: 418, column: 9, scope: !18239)
!18252 = !DILocation(line: 422, column: 5, scope: !18239)
!18253 = !DILocation(line: 424, column: 31, scope: !18254)
!18254 = distinct !DILexicalBlock(scope: !18255, file: !3198, line: 424, column: 17)
!18255 = distinct !DILexicalBlock(scope: !18239, file: !3198, line: 422, column: 22)
!18256 = !DILocation(line: 424, column: 39, scope: !18254)
!18257 = !DILocation(line: 424, column: 17, scope: !18255)
!18258 = !DILocation(line: 425, column: 94, scope: !18259)
!18259 = distinct !DILexicalBlock(scope: !18254, file: !3198, line: 424, column: 48)
!18260 = !DILocation(line: 425, column: 17, scope: !18259)
!18261 = !DILocation(line: 426, column: 13, scope: !18259)
!18262 = !DILocation(line: 427, column: 31, scope: !18263)
!18263 = distinct !DILexicalBlock(scope: !18255, file: !3198, line: 427, column: 17)
!18264 = !DILocation(line: 427, column: 39, scope: !18263)
!18265 = !DILocation(line: 427, column: 17, scope: !18255)
!18266 = !DILocation(line: 428, column: 94, scope: !18267)
!18267 = distinct !DILexicalBlock(scope: !18263, file: !3198, line: 427, column: 48)
!18268 = !DILocation(line: 428, column: 17, scope: !18267)
!18269 = !DILocation(line: 429, column: 13, scope: !18267)
!18270 = !DILocation(line: 433, column: 31, scope: !18271)
!18271 = distinct !DILexicalBlock(scope: !18255, file: !3198, line: 433, column: 17)
!18272 = !DILocation(line: 433, column: 39, scope: !18271)
!18273 = !DILocation(line: 433, column: 17, scope: !18255)
!18274 = !DILocation(line: 434, column: 94, scope: !18275)
!18275 = distinct !DILexicalBlock(scope: !18271, file: !3198, line: 433, column: 48)
!18276 = !DILocation(line: 434, column: 17, scope: !18275)
!18277 = !DILocation(line: 435, column: 13, scope: !18275)
!18278 = !DILocation(line: 436, column: 31, scope: !18279)
!18279 = distinct !DILexicalBlock(scope: !18255, file: !3198, line: 436, column: 17)
!18280 = !DILocation(line: 436, column: 39, scope: !18279)
!18281 = !DILocation(line: 436, column: 17, scope: !18255)
!18282 = !DILocation(line: 437, column: 94, scope: !18283)
!18283 = distinct !DILexicalBlock(scope: !18279, file: !3198, line: 436, column: 48)
!18284 = !DILocation(line: 437, column: 17, scope: !18283)
!18285 = !DILocation(line: 438, column: 13, scope: !18283)
!18286 = !DILocation(line: 442, column: 31, scope: !18287)
!18287 = distinct !DILexicalBlock(scope: !18255, file: !3198, line: 442, column: 17)
!18288 = !DILocation(line: 442, column: 39, scope: !18287)
!18289 = !DILocation(line: 442, column: 17, scope: !18255)
!18290 = !DILocation(line: 443, column: 94, scope: !18291)
!18291 = distinct !DILexicalBlock(scope: !18287, file: !3198, line: 442, column: 48)
!18292 = !DILocation(line: 443, column: 17, scope: !18291)
!18293 = !DILocation(line: 444, column: 13, scope: !18291)
!18294 = !DILocation(line: 445, column: 31, scope: !18295)
!18295 = distinct !DILexicalBlock(scope: !18255, file: !3198, line: 445, column: 17)
!18296 = !DILocation(line: 445, column: 39, scope: !18295)
!18297 = !DILocation(line: 445, column: 17, scope: !18255)
!18298 = !DILocation(line: 446, column: 94, scope: !18299)
!18299 = distinct !DILexicalBlock(scope: !18295, file: !3198, line: 445, column: 48)
!18300 = !DILocation(line: 446, column: 17, scope: !18299)
!18301 = !DILocation(line: 447, column: 13, scope: !18299)
!18302 = !DILocation(line: 451, column: 31, scope: !18303)
!18303 = distinct !DILexicalBlock(scope: !18255, file: !3198, line: 451, column: 17)
!18304 = !DILocation(line: 451, column: 39, scope: !18303)
!18305 = !DILocation(line: 451, column: 17, scope: !18255)
!18306 = !DILocation(line: 452, column: 94, scope: !18307)
!18307 = distinct !DILexicalBlock(scope: !18303, file: !3198, line: 451, column: 48)
!18308 = !DILocation(line: 452, column: 17, scope: !18307)
!18309 = !DILocation(line: 453, column: 13, scope: !18307)
!18310 = !DILocation(line: 454, column: 31, scope: !18311)
!18311 = distinct !DILexicalBlock(scope: !18255, file: !3198, line: 454, column: 17)
!18312 = !DILocation(line: 454, column: 39, scope: !18311)
!18313 = !DILocation(line: 454, column: 17, scope: !18255)
!18314 = !DILocation(line: 455, column: 94, scope: !18315)
!18315 = distinct !DILexicalBlock(scope: !18311, file: !3198, line: 454, column: 48)
!18316 = !DILocation(line: 455, column: 17, scope: !18315)
!18317 = !DILocation(line: 456, column: 13, scope: !18315)
!18318 = !DILocation(line: 460, column: 31, scope: !18319)
!18319 = distinct !DILexicalBlock(scope: !18255, file: !3198, line: 460, column: 17)
!18320 = !DILocation(line: 460, column: 39, scope: !18319)
!18321 = !DILocation(line: 460, column: 17, scope: !18255)
!18322 = !DILocation(line: 461, column: 100, scope: !18323)
!18323 = distinct !DILexicalBlock(scope: !18319, file: !3198, line: 460, column: 48)
!18324 = !DILocation(line: 461, column: 17, scope: !18323)
!18325 = !DILocation(line: 462, column: 13, scope: !18323)
!18326 = !DILocation(line: 463, column: 31, scope: !18327)
!18327 = distinct !DILexicalBlock(scope: !18255, file: !3198, line: 463, column: 17)
!18328 = !DILocation(line: 463, column: 39, scope: !18327)
!18329 = !DILocation(line: 463, column: 17, scope: !18255)
!18330 = !DILocation(line: 464, column: 100, scope: !18331)
!18331 = distinct !DILexicalBlock(scope: !18327, file: !3198, line: 463, column: 48)
!18332 = !DILocation(line: 464, column: 17, scope: !18331)
!18333 = !DILocation(line: 465, column: 13, scope: !18331)
!18334 = !DILocation(line: 469, column: 31, scope: !18335)
!18335 = distinct !DILexicalBlock(scope: !18255, file: !3198, line: 469, column: 17)
!18336 = !DILocation(line: 469, column: 39, scope: !18335)
!18337 = !DILocation(line: 469, column: 17, scope: !18255)
!18338 = !DILocation(line: 470, column: 96, scope: !18339)
!18339 = distinct !DILexicalBlock(scope: !18335, file: !3198, line: 469, column: 48)
!18340 = !DILocation(line: 470, column: 17, scope: !18339)
!18341 = !DILocation(line: 471, column: 13, scope: !18339)
!18342 = !DILocation(line: 472, column: 31, scope: !18343)
!18343 = distinct !DILexicalBlock(scope: !18255, file: !3198, line: 472, column: 17)
!18344 = !DILocation(line: 472, column: 39, scope: !18343)
!18345 = !DILocation(line: 472, column: 17, scope: !18255)
!18346 = !DILocation(line: 473, column: 96, scope: !18347)
!18347 = distinct !DILexicalBlock(scope: !18343, file: !3198, line: 472, column: 48)
!18348 = !DILocation(line: 473, column: 17, scope: !18347)
!18349 = !DILocation(line: 474, column: 13, scope: !18347)
!18350 = !DILocation(line: 478, column: 31, scope: !18351)
!18351 = distinct !DILexicalBlock(scope: !18255, file: !3198, line: 478, column: 17)
!18352 = !DILocation(line: 478, column: 39, scope: !18351)
!18353 = !DILocation(line: 478, column: 17, scope: !18255)
!18354 = !DILocation(line: 479, column: 98, scope: !18355)
!18355 = distinct !DILexicalBlock(scope: !18351, file: !3198, line: 478, column: 48)
!18356 = !DILocation(line: 479, column: 17, scope: !18355)
!18357 = !DILocation(line: 480, column: 13, scope: !18355)
!18358 = !DILocation(line: 481, column: 31, scope: !18359)
!18359 = distinct !DILexicalBlock(scope: !18255, file: !3198, line: 481, column: 17)
!18360 = !DILocation(line: 481, column: 39, scope: !18359)
!18361 = !DILocation(line: 481, column: 17, scope: !18255)
!18362 = !DILocation(line: 482, column: 98, scope: !18363)
!18363 = distinct !DILexicalBlock(scope: !18359, file: !3198, line: 481, column: 48)
!18364 = !DILocation(line: 482, column: 17, scope: !18363)
!18365 = !DILocation(line: 483, column: 13, scope: !18363)
!18366 = !DILocation(line: 487, column: 31, scope: !18367)
!18367 = distinct !DILexicalBlock(scope: !18255, file: !3198, line: 487, column: 17)
!18368 = !DILocation(line: 487, column: 39, scope: !18367)
!18369 = !DILocation(line: 487, column: 17, scope: !18255)
!18370 = !DILocation(line: 488, column: 92, scope: !18371)
!18371 = distinct !DILexicalBlock(scope: !18367, file: !3198, line: 487, column: 48)
!18372 = !DILocation(line: 488, column: 17, scope: !18371)
!18373 = !DILocation(line: 489, column: 13, scope: !18371)
!18374 = !DILocation(line: 490, column: 31, scope: !18375)
!18375 = distinct !DILexicalBlock(scope: !18255, file: !3198, line: 490, column: 17)
!18376 = !DILocation(line: 490, column: 39, scope: !18375)
!18377 = !DILocation(line: 490, column: 17, scope: !18255)
!18378 = !DILocation(line: 491, column: 92, scope: !18379)
!18379 = distinct !DILexicalBlock(scope: !18375, file: !3198, line: 490, column: 48)
!18380 = !DILocation(line: 491, column: 17, scope: !18379)
!18381 = !DILocation(line: 492, column: 13, scope: !18379)
!18382 = !DILocation(line: 496, column: 31, scope: !18383)
!18383 = distinct !DILexicalBlock(scope: !18255, file: !3198, line: 496, column: 17)
!18384 = !DILocation(line: 496, column: 39, scope: !18383)
!18385 = !DILocation(line: 496, column: 17, scope: !18255)
!18386 = !DILocation(line: 497, column: 88, scope: !18387)
!18387 = distinct !DILexicalBlock(scope: !18383, file: !3198, line: 496, column: 48)
!18388 = !DILocation(line: 497, column: 17, scope: !18387)
!18389 = !DILocation(line: 498, column: 13, scope: !18387)
!18390 = !DILocation(line: 499, column: 31, scope: !18391)
!18391 = distinct !DILexicalBlock(scope: !18255, file: !3198, line: 499, column: 17)
!18392 = !DILocation(line: 499, column: 39, scope: !18391)
!18393 = !DILocation(line: 499, column: 17, scope: !18255)
!18394 = !DILocation(line: 500, column: 88, scope: !18395)
!18395 = distinct !DILexicalBlock(scope: !18391, file: !3198, line: 499, column: 48)
!18396 = !DILocation(line: 500, column: 17, scope: !18395)
!18397 = !DILocation(line: 501, column: 13, scope: !18395)
!18398 = !DILocation(line: 505, column: 31, scope: !18399)
!18399 = distinct !DILexicalBlock(scope: !18255, file: !3198, line: 505, column: 17)
!18400 = !DILocation(line: 505, column: 39, scope: !18399)
!18401 = !DILocation(line: 505, column: 17, scope: !18255)
!18402 = !DILocation(line: 506, column: 88, scope: !18403)
!18403 = distinct !DILexicalBlock(scope: !18399, file: !3198, line: 505, column: 48)
!18404 = !DILocation(line: 506, column: 17, scope: !18403)
!18405 = !DILocation(line: 507, column: 13, scope: !18403)
!18406 = !DILocation(line: 508, column: 31, scope: !18407)
!18407 = distinct !DILexicalBlock(scope: !18255, file: !3198, line: 508, column: 17)
!18408 = !DILocation(line: 508, column: 39, scope: !18407)
!18409 = !DILocation(line: 508, column: 17, scope: !18255)
!18410 = !DILocation(line: 509, column: 88, scope: !18411)
!18411 = distinct !DILexicalBlock(scope: !18407, file: !3198, line: 508, column: 48)
!18412 = !DILocation(line: 509, column: 17, scope: !18411)
!18413 = !DILocation(line: 510, column: 13, scope: !18411)
!18414 = !DILocation(line: 514, column: 31, scope: !18415)
!18415 = distinct !DILexicalBlock(scope: !18255, file: !3198, line: 514, column: 17)
!18416 = !DILocation(line: 514, column: 39, scope: !18415)
!18417 = !DILocation(line: 514, column: 17, scope: !18255)
!18418 = !DILocation(line: 515, column: 92, scope: !18419)
!18419 = distinct !DILexicalBlock(scope: !18415, file: !3198, line: 514, column: 48)
!18420 = !DILocation(line: 515, column: 17, scope: !18419)
!18421 = !DILocation(line: 516, column: 13, scope: !18419)
!18422 = !DILocation(line: 517, column: 31, scope: !18423)
!18423 = distinct !DILexicalBlock(scope: !18255, file: !3198, line: 517, column: 17)
!18424 = !DILocation(line: 517, column: 39, scope: !18423)
!18425 = !DILocation(line: 517, column: 17, scope: !18255)
!18426 = !DILocation(line: 518, column: 92, scope: !18427)
!18427 = distinct !DILexicalBlock(scope: !18423, file: !3198, line: 517, column: 48)
!18428 = !DILocation(line: 518, column: 17, scope: !18427)
!18429 = !DILocation(line: 519, column: 13, scope: !18427)
!18430 = !DILocation(line: 523, column: 31, scope: !18431)
!18431 = distinct !DILexicalBlock(scope: !18255, file: !3198, line: 523, column: 17)
!18432 = !DILocation(line: 523, column: 39, scope: !18431)
!18433 = !DILocation(line: 523, column: 17, scope: !18255)
!18434 = !DILocation(line: 524, column: 92, scope: !18435)
!18435 = distinct !DILexicalBlock(scope: !18431, file: !3198, line: 523, column: 48)
!18436 = !DILocation(line: 524, column: 17, scope: !18435)
!18437 = !DILocation(line: 525, column: 13, scope: !18435)
!18438 = !DILocation(line: 526, column: 31, scope: !18439)
!18439 = distinct !DILexicalBlock(scope: !18255, file: !3198, line: 526, column: 17)
!18440 = !DILocation(line: 526, column: 39, scope: !18439)
!18441 = !DILocation(line: 526, column: 17, scope: !18255)
!18442 = !DILocation(line: 527, column: 92, scope: !18443)
!18443 = distinct !DILexicalBlock(scope: !18439, file: !3198, line: 526, column: 48)
!18444 = !DILocation(line: 527, column: 17, scope: !18443)
!18445 = !DILocation(line: 528, column: 13, scope: !18443)
!18446 = !DILocation(line: 532, column: 31, scope: !18447)
!18447 = distinct !DILexicalBlock(scope: !18255, file: !3198, line: 532, column: 17)
!18448 = !DILocation(line: 532, column: 39, scope: !18447)
!18449 = !DILocation(line: 532, column: 17, scope: !18255)
!18450 = !DILocation(line: 533, column: 90, scope: !18451)
!18451 = distinct !DILexicalBlock(scope: !18447, file: !3198, line: 532, column: 48)
!18452 = !DILocation(line: 533, column: 17, scope: !18451)
!18453 = !DILocation(line: 534, column: 13, scope: !18451)
!18454 = !DILocation(line: 535, column: 31, scope: !18455)
!18455 = distinct !DILexicalBlock(scope: !18255, file: !3198, line: 535, column: 17)
!18456 = !DILocation(line: 535, column: 39, scope: !18455)
!18457 = !DILocation(line: 535, column: 17, scope: !18255)
!18458 = !DILocation(line: 536, column: 90, scope: !18459)
!18459 = distinct !DILexicalBlock(scope: !18455, file: !3198, line: 535, column: 48)
!18460 = !DILocation(line: 536, column: 17, scope: !18459)
!18461 = !DILocation(line: 537, column: 13, scope: !18459)
!18462 = !DILocation(line: 541, column: 31, scope: !18463)
!18463 = distinct !DILexicalBlock(scope: !18255, file: !3198, line: 541, column: 17)
!18464 = !DILocation(line: 541, column: 39, scope: !18463)
!18465 = !DILocation(line: 541, column: 17, scope: !18255)
!18466 = !DILocation(line: 542, column: 92, scope: !18467)
!18467 = distinct !DILexicalBlock(scope: !18463, file: !3198, line: 541, column: 48)
!18468 = !DILocation(line: 542, column: 17, scope: !18467)
!18469 = !DILocation(line: 543, column: 13, scope: !18467)
!18470 = !DILocation(line: 544, column: 31, scope: !18471)
!18471 = distinct !DILexicalBlock(scope: !18255, file: !3198, line: 544, column: 17)
!18472 = !DILocation(line: 544, column: 39, scope: !18471)
!18473 = !DILocation(line: 544, column: 17, scope: !18255)
!18474 = !DILocation(line: 545, column: 92, scope: !18475)
!18475 = distinct !DILexicalBlock(scope: !18471, file: !3198, line: 544, column: 48)
!18476 = !DILocation(line: 545, column: 17, scope: !18475)
!18477 = !DILocation(line: 546, column: 13, scope: !18475)
!18478 = !DILocation(line: 550, column: 31, scope: !18479)
!18479 = distinct !DILexicalBlock(scope: !18255, file: !3198, line: 550, column: 17)
!18480 = !DILocation(line: 550, column: 39, scope: !18479)
!18481 = !DILocation(line: 550, column: 17, scope: !18255)
!18482 = !DILocation(line: 551, column: 90, scope: !18483)
!18483 = distinct !DILexicalBlock(scope: !18479, file: !3198, line: 550, column: 48)
!18484 = !DILocation(line: 551, column: 17, scope: !18483)
!18485 = !DILocation(line: 552, column: 13, scope: !18483)
!18486 = !DILocation(line: 553, column: 31, scope: !18487)
!18487 = distinct !DILexicalBlock(scope: !18255, file: !3198, line: 553, column: 17)
!18488 = !DILocation(line: 553, column: 39, scope: !18487)
!18489 = !DILocation(line: 553, column: 17, scope: !18255)
!18490 = !DILocation(line: 554, column: 90, scope: !18491)
!18491 = distinct !DILexicalBlock(scope: !18487, file: !3198, line: 553, column: 48)
!18492 = !DILocation(line: 554, column: 17, scope: !18491)
!18493 = !DILocation(line: 555, column: 13, scope: !18491)
!18494 = !DILocation(line: 559, column: 31, scope: !18495)
!18495 = distinct !DILexicalBlock(scope: !18255, file: !3198, line: 559, column: 17)
!18496 = !DILocation(line: 559, column: 39, scope: !18495)
!18497 = !DILocation(line: 559, column: 17, scope: !18255)
!18498 = !DILocation(line: 560, column: 90, scope: !18499)
!18499 = distinct !DILexicalBlock(scope: !18495, file: !3198, line: 559, column: 48)
!18500 = !DILocation(line: 560, column: 17, scope: !18499)
!18501 = !DILocation(line: 561, column: 13, scope: !18499)
!18502 = !DILocation(line: 562, column: 31, scope: !18503)
!18503 = distinct !DILexicalBlock(scope: !18255, file: !3198, line: 562, column: 17)
!18504 = !DILocation(line: 562, column: 39, scope: !18503)
!18505 = !DILocation(line: 562, column: 17, scope: !18255)
!18506 = !DILocation(line: 563, column: 90, scope: !18507)
!18507 = distinct !DILexicalBlock(scope: !18503, file: !3198, line: 562, column: 48)
!18508 = !DILocation(line: 563, column: 17, scope: !18507)
!18509 = !DILocation(line: 564, column: 13, scope: !18507)
!18510 = !DILocation(line: 568, column: 31, scope: !18511)
!18511 = distinct !DILexicalBlock(scope: !18255, file: !3198, line: 568, column: 17)
!18512 = !DILocation(line: 568, column: 39, scope: !18511)
!18513 = !DILocation(line: 568, column: 17, scope: !18255)
!18514 = !DILocation(line: 569, column: 94, scope: !18515)
!18515 = distinct !DILexicalBlock(scope: !18511, file: !3198, line: 568, column: 48)
!18516 = !DILocation(line: 569, column: 17, scope: !18515)
!18517 = !DILocation(line: 570, column: 13, scope: !18515)
!18518 = !DILocation(line: 571, column: 31, scope: !18519)
!18519 = distinct !DILexicalBlock(scope: !18255, file: !3198, line: 571, column: 17)
!18520 = !DILocation(line: 571, column: 39, scope: !18519)
!18521 = !DILocation(line: 571, column: 17, scope: !18255)
!18522 = !DILocation(line: 572, column: 94, scope: !18523)
!18523 = distinct !DILexicalBlock(scope: !18519, file: !3198, line: 571, column: 48)
!18524 = !DILocation(line: 572, column: 17, scope: !18523)
!18525 = !DILocation(line: 573, column: 13, scope: !18523)
!18526 = !DILocation(line: 577, column: 31, scope: !18527)
!18527 = distinct !DILexicalBlock(scope: !18255, file: !3198, line: 577, column: 17)
!18528 = !DILocation(line: 577, column: 39, scope: !18527)
!18529 = !DILocation(line: 577, column: 17, scope: !18255)
!18530 = !DILocation(line: 578, column: 92, scope: !18531)
!18531 = distinct !DILexicalBlock(scope: !18527, file: !3198, line: 577, column: 48)
!18532 = !DILocation(line: 578, column: 17, scope: !18531)
!18533 = !DILocation(line: 579, column: 13, scope: !18531)
!18534 = !DILocation(line: 580, column: 31, scope: !18535)
!18535 = distinct !DILexicalBlock(scope: !18255, file: !3198, line: 580, column: 17)
!18536 = !DILocation(line: 580, column: 39, scope: !18535)
!18537 = !DILocation(line: 580, column: 17, scope: !18255)
!18538 = !DILocation(line: 581, column: 92, scope: !18539)
!18539 = distinct !DILexicalBlock(scope: !18535, file: !3198, line: 580, column: 48)
!18540 = !DILocation(line: 581, column: 17, scope: !18539)
!18541 = !DILocation(line: 582, column: 13, scope: !18539)
!18542 = !DILocation(line: 586, column: 31, scope: !18543)
!18543 = distinct !DILexicalBlock(scope: !18255, file: !3198, line: 586, column: 17)
!18544 = !DILocation(line: 586, column: 39, scope: !18543)
!18545 = !DILocation(line: 586, column: 17, scope: !18255)
!18546 = !DILocation(line: 587, column: 92, scope: !18547)
!18547 = distinct !DILexicalBlock(scope: !18543, file: !3198, line: 586, column: 48)
!18548 = !DILocation(line: 587, column: 17, scope: !18547)
!18549 = !DILocation(line: 588, column: 13, scope: !18547)
!18550 = !DILocation(line: 589, column: 31, scope: !18551)
!18551 = distinct !DILexicalBlock(scope: !18255, file: !3198, line: 589, column: 17)
!18552 = !DILocation(line: 589, column: 39, scope: !18551)
!18553 = !DILocation(line: 589, column: 17, scope: !18255)
!18554 = !DILocation(line: 590, column: 92, scope: !18555)
!18555 = distinct !DILexicalBlock(scope: !18551, file: !3198, line: 589, column: 48)
!18556 = !DILocation(line: 590, column: 17, scope: !18555)
!18557 = !DILocation(line: 591, column: 13, scope: !18555)
!18558 = !DILocation(line: 595, column: 88, scope: !18255)
!18559 = !DILocation(line: 595, column: 13, scope: !18255)
!18560 = !DILocation(line: 596, column: 13, scope: !18255)
!18561 = !DILocation(line: 599, column: 88, scope: !18255)
!18562 = !DILocation(line: 599, column: 13, scope: !18255)
!18563 = !DILocation(line: 600, column: 13, scope: !18255)
!18564 = !DILocation(line: 603, column: 96, scope: !18255)
!18565 = !DILocation(line: 603, column: 13, scope: !18255)
!18566 = !DILocation(line: 604, column: 13, scope: !18255)
!18567 = !DILocation(line: 607, column: 98, scope: !18255)
!18568 = !DILocation(line: 607, column: 13, scope: !18255)
!18569 = !DILocation(line: 608, column: 13, scope: !18255)
!18570 = !DILocation(line: 611, column: 98, scope: !18255)
!18571 = !DILocation(line: 611, column: 13, scope: !18255)
!18572 = !DILocation(line: 612, column: 13, scope: !18255)
!18573 = !DILocation(line: 615, column: 90, scope: !18255)
!18574 = !DILocation(line: 615, column: 13, scope: !18255)
!18575 = !DILocation(line: 616, column: 13, scope: !18255)
!18576 = !DILocation(line: 619, column: 84, scope: !18255)
!18577 = !DILocation(line: 619, column: 13, scope: !18255)
!18578 = !DILocation(line: 620, column: 13, scope: !18255)
!18579 = !DILocation(line: 623, column: 86, scope: !18255)
!18580 = !DILocation(line: 623, column: 13, scope: !18255)
!18581 = !DILocation(line: 624, column: 13, scope: !18255)
!18582 = !DILocation(line: 627, column: 86, scope: !18255)
!18583 = !DILocation(line: 627, column: 13, scope: !18255)
!18584 = !DILocation(line: 628, column: 13, scope: !18255)
!18585 = !DILocation(line: 631, column: 86, scope: !18255)
!18586 = !DILocation(line: 631, column: 13, scope: !18255)
!18587 = !DILocation(line: 632, column: 13, scope: !18255)
!18588 = !DILocation(line: 635, column: 84, scope: !18255)
!18589 = !DILocation(line: 635, column: 13, scope: !18255)
!18590 = !DILocation(line: 636, column: 13, scope: !18255)
!18591 = !DILocation(line: 639, column: 88, scope: !18255)
!18592 = !DILocation(line: 639, column: 13, scope: !18255)
!18593 = !DILocation(line: 640, column: 13, scope: !18255)
!18594 = !DILocation(line: 643, column: 92, scope: !18255)
!18595 = !DILocation(line: 643, column: 13, scope: !18255)
!18596 = !DILocation(line: 644, column: 13, scope: !18255)
!18597 = !DILocation(line: 648, column: 1, scope: !18239)
!18598 = distinct !DISubprogram(name: "pmu_disable_interrupt", scope: !3198, file: !3198, line: 398, type: !18599, scopeLine: 399, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3199, retainedNodes: !18601)
!18599 = !DISubroutineType(types: !18600)
!18600 = !{!18210, !18211, !18212}
!18601 = !{!18602, !18603, !18604, !18605}
!18602 = !DILocalVariable(name: "int_ch", arg: 1, scope: !18598, file: !3198, line: 398, type: !18211)
!18603 = !DILocalVariable(name: "trigger_mode", arg: 2, scope: !18598, file: !3198, line: 398, type: !18212)
!18604 = !DILocalVariable(name: "status", scope: !18598, file: !3198, line: 400, type: !18210)
!18605 = !DILocalVariable(name: "mask", scope: !18598, file: !3198, line: 401, type: !18)
!18606 = !DILocation(line: 0, scope: !18598)
!18607 = !DILocation(line: 403, column: 12, scope: !18598)
!18608 = !DILocation(line: 405, column: 5, scope: !18598)
!18609 = !DILocation(line: 406, column: 32, scope: !18598)
!18610 = !DILocation(line: 406, column: 44, scope: !18598)
!18611 = !DILocation(line: 408, column: 5, scope: !18598)
!18612 = !DILocation(line: 411, column: 5, scope: !18598)
!18613 = distinct !DISubprogram(name: "pmu_init", scope: !4143, file: !4143, line: 93, type: !343, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4142, retainedNodes: !345)
!18614 = !DILocation(line: 98, column: 5, scope: !18613)
!18615 = !DILocation(line: 100, column: 5, scope: !18613)
!18616 = !DILocation(line: 101, column: 1, scope: !18613)
!18617 = distinct !DISubprogram(name: "pmu_set_register_value", scope: !4143, file: !4143, line: 104, type: !4155, scopeLine: 105, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4142, retainedNodes: !18618)
!18618 = !{!18619, !18620, !18621, !18622}
!18619 = !DILocalVariable(name: "address", arg: 1, scope: !18617, file: !4143, line: 104, type: !1214)
!18620 = !DILocalVariable(name: "mask", arg: 2, scope: !18617, file: !4143, line: 104, type: !1214)
!18621 = !DILocalVariable(name: "shift", arg: 3, scope: !18617, file: !4143, line: 104, type: !1214)
!18622 = !DILocalVariable(name: "value", arg: 4, scope: !18617, file: !4143, line: 104, type: !1214)
!18623 = !DILocation(line: 0, scope: !18617)
!18624 = !DILocation(line: 106, column: 13, scope: !18617)
!18625 = !DILocation(line: 106, column: 5, scope: !18617)
!18626 = distinct !DISubprogram(name: "pmu_get_register_value", scope: !4143, file: !4143, line: 110, type: !4159, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4142, retainedNodes: !18627)
!18627 = !{!18628, !18629, !18630}
!18628 = !DILocalVariable(name: "address", arg: 1, scope: !18626, file: !4143, line: 110, type: !1214)
!18629 = !DILocalVariable(name: "mask", arg: 2, scope: !18626, file: !4143, line: 110, type: !1214)
!18630 = !DILocalVariable(name: "shift", arg: 3, scope: !18626, file: !4143, line: 110, type: !1214)
!18631 = !DILocation(line: 0, scope: !18626)
!18632 = !DILocation(line: 112, column: 13, scope: !18626)
!18633 = !DILocation(line: 112, column: 5, scope: !18626)
!18634 = distinct !DISubprogram(name: "pmu_control_mtcmos", scope: !4143, file: !4143, line: 116, type: !343, scopeLine: 117, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4142, retainedNodes: !345)
!18635 = !DILocation(line: 118, column: 5, scope: !18634)
!18636 = !DILocation(line: 119, column: 1, scope: !18634)
!18637 = distinct !DISubprogram(name: "pmu_get_vcore_voltage", scope: !4143, file: !4143, line: 123, type: !4164, scopeLine: 124, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4142, retainedNodes: !345)
!18638 = !DILocation(line: 125, column: 13, scope: !18637)
!18639 = !DILocation(line: 125, column: 5, scope: !18637)
!18640 = distinct !DISubprogram(name: "pmu_set_vcore_voltage", scope: !4143, file: !4143, line: 131, type: !3450, scopeLine: 132, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4142, retainedNodes: !18641)
!18641 = !{!18642, !18643}
!18642 = !DILocalVariable(name: "lock", arg: 1, scope: !18640, file: !4143, line: 131, type: !161)
!18643 = !DILocalVariable(name: "vcore", arg: 2, scope: !18640, file: !4143, line: 131, type: !161)
!18644 = !DILocation(line: 0, scope: !18640)
!18645 = !DILocation(line: 133, column: 13, scope: !18640)
!18646 = !DILocation(line: 133, column: 5, scope: !18640)
!18647 = distinct !DISubprogram(name: "pmu_set_vcore_s1_buck", scope: !4143, file: !4143, line: 137, type: !343, scopeLine: 138, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4142, retainedNodes: !345)
!18648 = !DILocation(line: 139, column: 5, scope: !18647)
!18649 = !DILocation(line: 140, column: 1, scope: !18647)
!18650 = distinct !DISubprogram(name: "pmu_ctrl_driver_power", scope: !4143, file: !4143, line: 143, type: !4171, scopeLine: 144, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4142, retainedNodes: !18651)
!18651 = !{!18652, !18653}
!18652 = !DILocalVariable(name: "driver_name", arg: 1, scope: !18650, file: !4143, line: 143, type: !161)
!18653 = !DILocalVariable(name: "enable", arg: 2, scope: !18650, file: !4143, line: 143, type: !161)
!18654 = !DILocation(line: 0, scope: !18650)
!18655 = !DILocation(line: 145, column: 5, scope: !18650)
!18656 = !DILocation(line: 146, column: 1, scope: !18650)
!18657 = distinct !DISubprogram(name: "internal_pmu_ctrl_power", scope: !4143, file: !4143, line: 189, type: !4171, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !4142, retainedNodes: !18658)
!18658 = !{!18659, !18660}
!18659 = !DILocalVariable(name: "driver_name", arg: 1, scope: !18657, file: !4143, line: 189, type: !161)
!18660 = !DILocalVariable(name: "enable", arg: 2, scope: !18657, file: !4143, line: 189, type: !161)
!18661 = !DILocation(line: 0, scope: !18657)
!18662 = !DILocation(line: 191, column: 5, scope: !18657)
!18663 = !DILocation(line: 193, column: 13, scope: !18664)
!18664 = distinct !DILexicalBlock(scope: !18657, file: !4143, line: 191, column: 26)
!18665 = !DILocation(line: 194, column: 13, scope: !18664)
!18666 = !DILocation(line: 197, column: 13, scope: !18664)
!18667 = !DILocation(line: 198, column: 13, scope: !18664)
!18668 = !DILocation(line: 201, column: 40, scope: !18664)
!18669 = !DILocation(line: 201, column: 13, scope: !18664)
!18670 = !DILocation(line: 202, column: 13, scope: !18664)
!18671 = !DILocation(line: 205, column: 41, scope: !18664)
!18672 = !DILocation(line: 205, column: 13, scope: !18664)
!18673 = !DILocation(line: 206, column: 13, scope: !18664)
!18674 = !DILocation(line: 209, column: 39, scope: !18664)
!18675 = !DILocation(line: 209, column: 13, scope: !18664)
!18676 = !DILocation(line: 210, column: 13, scope: !18664)
!18677 = !DILocation(line: 213, column: 13, scope: !18664)
!18678 = !DILocation(line: 214, column: 13, scope: !18664)
!18679 = !DILocation(line: 217, column: 13, scope: !18664)
!18680 = !DILocation(line: 218, column: 13, scope: !18664)
!18681 = !DILocation(line: 221, column: 13, scope: !18664)
!18682 = !DILocation(line: 222, column: 13, scope: !18664)
!18683 = !DILocation(line: 225, column: 13, scope: !18664)
!18684 = !DILocation(line: 226, column: 13, scope: !18664)
!18685 = !DILocation(line: 228, column: 1, scope: !18657)
!18686 = distinct !DISubprogram(name: "pmu_audio_lock_voltage", scope: !4143, file: !4143, line: 149, type: !343, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4142, retainedNodes: !345)
!18687 = !DILocation(line: 151, column: 5, scope: !18686)
!18688 = !DILocation(line: 152, column: 1, scope: !18686)
!18689 = distinct !DISubprogram(name: "internal_pmu_audio_lock_voltage", scope: !4143, file: !4143, line: 230, type: !343, scopeLine: 231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !4142, retainedNodes: !345)
!18690 = !DILocation(line: 232, column: 5, scope: !18689)
!18691 = !DILocation(line: 233, column: 5, scope: !18689)
!18692 = !DILocation(line: 234, column: 1, scope: !18689)
!18693 = distinct !DISubprogram(name: "pmu_audio_unlock_voltage", scope: !4143, file: !4143, line: 155, type: !343, scopeLine: 156, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4142, retainedNodes: !345)
!18694 = !DILocation(line: 158, column: 1, scope: !18693)
!18695 = distinct !DISubprogram(name: "pmu_get_usb_input_status", scope: !4143, file: !4143, line: 161, type: !4164, scopeLine: 162, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4142, retainedNodes: !345)
!18696 = !DILocation(line: 163, column: 13, scope: !18695)
!18697 = !DILocation(line: 163, column: 5, scope: !18695)
!18698 = distinct !DISubprogram(name: "pmu_enter_power_off", scope: !4143, file: !4143, line: 167, type: !343, scopeLine: 168, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4142, retainedNodes: !345)
!18699 = !DILocation(line: 169, column: 5, scope: !18698)
!18700 = !DILocation(line: 170, column: 1, scope: !18698)
!18701 = distinct !DISubprogram(name: "pmu_reset", scope: !4143, file: !4143, line: 173, type: !343, scopeLine: 174, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4142, retainedNodes: !345)
!18702 = !DILocation(line: 175, column: 5, scope: !18701)
!18703 = !DILocation(line: 176, column: 1, scope: !18701)
!18704 = distinct !DISubprogram(name: "pmu_get_type", scope: !4143, file: !4143, line: 178, type: !18705, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4142, retainedNodes: !345)
!18705 = !DISubroutineType(types: !18706)
!18706 = !{!18}
!18707 = !DILocation(line: 183, column: 5, scope: !18704)
!18708 = distinct !DISubprogram(name: "null_pmu_set_register_value", scope: !4143, file: !4143, line: 238, type: !4155, scopeLine: 239, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4142, retainedNodes: !18709)
!18709 = !{!18710, !18711, !18712, !18713}
!18710 = !DILocalVariable(name: "address", arg: 1, scope: !18708, file: !4143, line: 238, type: !1214)
!18711 = !DILocalVariable(name: "mask", arg: 2, scope: !18708, file: !4143, line: 238, type: !1214)
!18712 = !DILocalVariable(name: "shift", arg: 3, scope: !18708, file: !4143, line: 238, type: !1214)
!18713 = !DILocalVariable(name: "value", arg: 4, scope: !18708, file: !4143, line: 238, type: !1214)
!18714 = !DILocation(line: 0, scope: !18708)
!18715 = !DILocation(line: 240, column: 5, scope: !18708)
!18716 = distinct !DISubprogram(name: "null_pmu_get_register_value", scope: !4143, file: !4143, line: 244, type: !4159, scopeLine: 245, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4142, retainedNodes: !18717)
!18717 = !{!18718, !18719, !18720}
!18718 = !DILocalVariable(name: "address", arg: 1, scope: !18716, file: !4143, line: 244, type: !1214)
!18719 = !DILocalVariable(name: "mask", arg: 2, scope: !18716, file: !4143, line: 244, type: !1214)
!18720 = !DILocalVariable(name: "shift", arg: 3, scope: !18716, file: !4143, line: 244, type: !1214)
!18721 = !DILocation(line: 0, scope: !18716)
!18722 = !DILocation(line: 246, column: 5, scope: !18716)
!18723 = distinct !DISubprogram(name: "null_function", scope: !4143, file: !4143, line: 250, type: !343, scopeLine: 251, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4142, retainedNodes: !345)
!18724 = !DILocation(line: 252, column: 1, scope: !18723)
!18725 = distinct !DISubprogram(name: "log_hal_error_internal", scope: !4179, file: !4179, line: 58, type: !18726, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4178, retainedNodes: !18728)
!18726 = !DISubroutineType(types: !18727)
!18727 = !{null, !165, !7, !165, null}
!18728 = !{!18729, !18730, !18731, !18732, !18741}
!18729 = !DILocalVariable(name: "func", arg: 1, scope: !18725, file: !4179, line: 58, type: !165)
!18730 = !DILocalVariable(name: "line", arg: 2, scope: !18725, file: !4179, line: 58, type: !7)
!18731 = !DILocalVariable(name: "message", arg: 3, scope: !18725, file: !4179, line: 58, type: !165)
!18732 = !DILocalVariable(name: "ap", scope: !18725, file: !4179, line: 60, type: !18733)
!18733 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !18734, line: 46, baseType: !18735)
!18734 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/stdio.h", directory: "/home/mjshen/RTOSExploration")
!18735 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !18736, line: 32, baseType: !18737)
!18736 = !DIFile(filename: "/usr/lib/llvm-14/lib/clang/14.0.6/include/stdarg.h", directory: "")
!18737 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !4179, baseType: !18738)
!18738 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !18739)
!18739 = !{!18740}
!18740 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !18738, file: !4179, line: 60, baseType: !88, size: 32)
!18741 = !DILocalVariable(name: "mask", scope: !18725, file: !4179, line: 62, type: !61)
!18742 = !DILocation(line: 0, scope: !18725)
!18743 = !DILocation(line: 60, column: 5, scope: !18725)
!18744 = !DILocation(line: 60, column: 13, scope: !18725)
!18745 = !DILocation(line: 62, column: 5, scope: !18725)
!18746 = !DILocation(line: 63, column: 5, scope: !18725)
!18747 = !DILocation(line: 65, column: 5, scope: !18725)
!18748 = !DILocation(line: 66, column: 5, scope: !18725)
!18749 = !DILocation(line: 67, column: 5, scope: !18725)
!18750 = !DILocation(line: 69, column: 37, scope: !18725)
!18751 = !DILocation(line: 69, column: 5, scope: !18725)
!18752 = !DILocation(line: 71, column: 1, scope: !18725)
!18753 = distinct !DISubprogram(name: "log_hal_warning_internal", scope: !4179, file: !4179, line: 72, type: !18726, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4178, retainedNodes: !18754)
!18754 = !{!18755, !18756, !18757, !18758, !18759}
!18755 = !DILocalVariable(name: "func", arg: 1, scope: !18753, file: !4179, line: 72, type: !165)
!18756 = !DILocalVariable(name: "line", arg: 2, scope: !18753, file: !4179, line: 72, type: !7)
!18757 = !DILocalVariable(name: "message", arg: 3, scope: !18753, file: !4179, line: 72, type: !165)
!18758 = !DILocalVariable(name: "ap", scope: !18753, file: !4179, line: 74, type: !18733)
!18759 = !DILocalVariable(name: "mask", scope: !18753, file: !4179, line: 76, type: !61)
!18760 = !DILocation(line: 0, scope: !18753)
!18761 = !DILocation(line: 74, column: 5, scope: !18753)
!18762 = !DILocation(line: 74, column: 13, scope: !18753)
!18763 = !DILocation(line: 76, column: 5, scope: !18753)
!18764 = !DILocation(line: 77, column: 5, scope: !18753)
!18765 = !DILocation(line: 79, column: 5, scope: !18753)
!18766 = !DILocation(line: 80, column: 5, scope: !18753)
!18767 = !DILocation(line: 81, column: 5, scope: !18753)
!18768 = !DILocation(line: 83, column: 37, scope: !18753)
!18769 = !DILocation(line: 83, column: 5, scope: !18753)
!18770 = !DILocation(line: 85, column: 1, scope: !18753)
!18771 = distinct !DISubprogram(name: "log_hal_info_internal", scope: !4179, file: !4179, line: 86, type: !18726, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4178, retainedNodes: !18772)
!18772 = !{!18773, !18774, !18775, !18776, !18777}
!18773 = !DILocalVariable(name: "func", arg: 1, scope: !18771, file: !4179, line: 86, type: !165)
!18774 = !DILocalVariable(name: "line", arg: 2, scope: !18771, file: !4179, line: 86, type: !7)
!18775 = !DILocalVariable(name: "message", arg: 3, scope: !18771, file: !4179, line: 86, type: !165)
!18776 = !DILocalVariable(name: "ap", scope: !18771, file: !4179, line: 88, type: !18733)
!18777 = !DILocalVariable(name: "mask", scope: !18771, file: !4179, line: 90, type: !61)
!18778 = !DILocation(line: 0, scope: !18771)
!18779 = !DILocation(line: 88, column: 5, scope: !18771)
!18780 = !DILocation(line: 88, column: 13, scope: !18771)
!18781 = !DILocation(line: 90, column: 5, scope: !18771)
!18782 = !DILocation(line: 91, column: 5, scope: !18771)
!18783 = !DILocation(line: 93, column: 5, scope: !18771)
!18784 = !DILocation(line: 94, column: 5, scope: !18771)
!18785 = !DILocation(line: 95, column: 5, scope: !18771)
!18786 = !DILocation(line: 97, column: 37, scope: !18771)
!18787 = !DILocation(line: 97, column: 5, scope: !18771)
!18788 = !DILocation(line: 99, column: 1, scope: !18771)
!18789 = distinct !DISubprogram(name: "log_hal_dump_internal", scope: !4179, file: !4179, line: 101, type: !18790, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4178, retainedNodes: !18794)
!18790 = !DISubroutineType(types: !18791)
!18791 = !{null, !165, !7, !165, !18792, !7, null}
!18792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18793, size: 32)
!18793 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!18794 = !{!18795, !18796, !18797, !18798, !18799}
!18795 = !DILocalVariable(name: "func", arg: 1, scope: !18789, file: !4179, line: 101, type: !165)
!18796 = !DILocalVariable(name: "line", arg: 2, scope: !18789, file: !4179, line: 101, type: !7)
!18797 = !DILocalVariable(name: "message", arg: 3, scope: !18789, file: !4179, line: 101, type: !165)
!18798 = !DILocalVariable(name: "data", arg: 4, scope: !18789, file: !4179, line: 101, type: !18792)
!18799 = !DILocalVariable(name: "length", arg: 5, scope: !18789, file: !4179, line: 101, type: !7)
!18800 = !DILocation(line: 0, scope: !18789)
!18801 = !DILocation(line: 103, column: 1, scope: !18789)
!18802 = distinct !DISubprogram(name: "PMIC_VR_PSI_PMOD_CONFIG", scope: !3400, file: !3400, line: 58, type: !18803, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3399, retainedNodes: !18806)
!18803 = !DISubroutineType(types: !18804)
!18804 = !{null, !18805, !3353, !3354}
!18805 = !DIDerivedType(tag: DW_TAG_typedef, name: "PMIC_VR", file: !3207, line: 60, baseType: !3310)
!18806 = !{!18807, !18808, !18809, !18810}
!18807 = !DILocalVariable(name: "vr_name", arg: 1, scope: !18802, file: !3400, line: 58, type: !18805)
!18808 = !DILocalVariable(name: "psi_mode", arg: 2, scope: !18802, file: !3400, line: 58, type: !3353)
!18809 = !DILocalVariable(name: "pmod", arg: 3, scope: !18802, file: !3400, line: 58, type: !3354)
!18810 = !DILocalVariable(name: "hwid", scope: !18802, file: !3400, line: 60, type: !161)
!18811 = !DILocation(line: 0, scope: !18802)
!18812 = !DILocation(line: 63, column: 5, scope: !18802)
!18813 = !DILocation(line: 64, column: 5, scope: !18802)
!18814 = !DILocation(line: 66, column: 5, scope: !18802)
!18815 = !DILocation(line: 68, column: 13, scope: !18816)
!18816 = distinct !DILexicalBlock(scope: !18802, file: !3400, line: 66, column: 22)
!18817 = !DILocation(line: 70, column: 142, scope: !18818)
!18818 = distinct !DILexicalBlock(scope: !18816, file: !3400, line: 68, column: 31)
!18819 = !DILocation(line: 70, column: 21, scope: !18818)
!18820 = !DILocation(line: 71, column: 21, scope: !18818)
!18821 = !DILocation(line: 73, column: 142, scope: !18818)
!18822 = !DILocation(line: 73, column: 21, scope: !18818)
!18823 = !DILocation(line: 74, column: 21, scope: !18818)
!18824 = !DILocation(line: 76, column: 142, scope: !18818)
!18825 = !DILocation(line: 76, column: 21, scope: !18818)
!18826 = !DILocation(line: 77, column: 21, scope: !18818)
!18827 = !DILocation(line: 79, column: 142, scope: !18818)
!18828 = !DILocation(line: 79, column: 21, scope: !18818)
!18829 = !DILocation(line: 80, column: 21, scope: !18818)
!18830 = !DILocation(line: 82, column: 142, scope: !18818)
!18831 = !DILocation(line: 82, column: 21, scope: !18818)
!18832 = !DILocation(line: 83, column: 21, scope: !18818)
!18833 = !DILocation(line: 85, column: 21, scope: !18818)
!18834 = !DILocation(line: 86, column: 21, scope: !18818)
!18835 = !DILocation(line: 91, column: 13, scope: !18816)
!18836 = !DILocation(line: 93, column: 142, scope: !18837)
!18837 = distinct !DILexicalBlock(scope: !18816, file: !3400, line: 91, column: 31)
!18838 = !DILocation(line: 93, column: 21, scope: !18837)
!18839 = !DILocation(line: 94, column: 21, scope: !18837)
!18840 = !DILocation(line: 96, column: 142, scope: !18837)
!18841 = !DILocation(line: 96, column: 21, scope: !18837)
!18842 = !DILocation(line: 97, column: 21, scope: !18837)
!18843 = !DILocation(line: 99, column: 142, scope: !18837)
!18844 = !DILocation(line: 99, column: 21, scope: !18837)
!18845 = !DILocation(line: 100, column: 21, scope: !18837)
!18846 = !DILocation(line: 102, column: 142, scope: !18837)
!18847 = !DILocation(line: 102, column: 21, scope: !18837)
!18848 = !DILocation(line: 103, column: 21, scope: !18837)
!18849 = !DILocation(line: 105, column: 142, scope: !18837)
!18850 = !DILocation(line: 105, column: 21, scope: !18837)
!18851 = !DILocation(line: 106, column: 21, scope: !18837)
!18852 = !DILocation(line: 108, column: 21, scope: !18837)
!18853 = !DILocation(line: 109, column: 21, scope: !18837)
!18854 = !DILocation(line: 114, column: 13, scope: !18816)
!18855 = !DILocation(line: 116, column: 142, scope: !18856)
!18856 = distinct !DILexicalBlock(scope: !18816, file: !3400, line: 114, column: 31)
!18857 = !DILocation(line: 116, column: 21, scope: !18856)
!18858 = !DILocation(line: 117, column: 21, scope: !18856)
!18859 = !DILocation(line: 119, column: 142, scope: !18856)
!18860 = !DILocation(line: 119, column: 21, scope: !18856)
!18861 = !DILocation(line: 120, column: 21, scope: !18856)
!18862 = !DILocation(line: 122, column: 142, scope: !18856)
!18863 = !DILocation(line: 122, column: 21, scope: !18856)
!18864 = !DILocation(line: 123, column: 21, scope: !18856)
!18865 = !DILocation(line: 125, column: 142, scope: !18856)
!18866 = !DILocation(line: 125, column: 21, scope: !18856)
!18867 = !DILocation(line: 126, column: 21, scope: !18856)
!18868 = !DILocation(line: 128, column: 142, scope: !18856)
!18869 = !DILocation(line: 128, column: 21, scope: !18856)
!18870 = !DILocation(line: 129, column: 21, scope: !18856)
!18871 = !DILocation(line: 131, column: 21, scope: !18856)
!18872 = !DILocation(line: 132, column: 21, scope: !18856)
!18873 = !DILocation(line: 137, column: 13, scope: !18816)
!18874 = !DILocation(line: 138, column: 13, scope: !18816)
!18875 = !DILocation(line: 140, column: 20, scope: !18816)
!18876 = !DILocation(line: 142, column: 17, scope: !18816)
!18877 = !DILocation(line: 143, column: 17, scope: !18878)
!18878 = distinct !DILexicalBlock(scope: !18879, file: !3400, line: 142, column: 31)
!18879 = distinct !DILexicalBlock(scope: !18816, file: !3400, line: 142, column: 17)
!18880 = !DILocation(line: 145, column: 146, scope: !18881)
!18881 = distinct !DILexicalBlock(scope: !18878, file: !3400, line: 143, column: 35)
!18882 = !DILocation(line: 145, column: 25, scope: !18881)
!18883 = !DILocation(line: 146, column: 25, scope: !18881)
!18884 = !DILocation(line: 148, column: 146, scope: !18881)
!18885 = !DILocation(line: 148, column: 25, scope: !18881)
!18886 = !DILocation(line: 149, column: 25, scope: !18881)
!18887 = !DILocation(line: 151, column: 146, scope: !18881)
!18888 = !DILocation(line: 151, column: 25, scope: !18881)
!18889 = !DILocation(line: 152, column: 25, scope: !18881)
!18890 = !DILocation(line: 154, column: 146, scope: !18881)
!18891 = !DILocation(line: 154, column: 25, scope: !18881)
!18892 = !DILocation(line: 155, column: 60, scope: !18893)
!18893 = distinct !DILexicalBlock(scope: !18881, file: !3400, line: 155, column: 29)
!18894 = !DILocation(line: 0, scope: !18893)
!18895 = !DILocation(line: 156, column: 51, scope: !18896)
!18896 = distinct !DILexicalBlock(scope: !18893, file: !3400, line: 155, column: 93)
!18897 = !DILocation(line: 157, column: 25, scope: !18896)
!18898 = !DILocation(line: 158, column: 51, scope: !18899)
!18899 = distinct !DILexicalBlock(scope: !18893, file: !3400, line: 157, column: 32)
!18900 = !DILocation(line: 162, column: 146, scope: !18881)
!18901 = !DILocation(line: 162, column: 25, scope: !18881)
!18902 = !DILocation(line: 163, column: 60, scope: !18903)
!18903 = distinct !DILexicalBlock(scope: !18881, file: !3400, line: 163, column: 29)
!18904 = !DILocation(line: 0, scope: !18903)
!18905 = !DILocation(line: 164, column: 51, scope: !18906)
!18906 = distinct !DILexicalBlock(scope: !18903, file: !3400, line: 163, column: 93)
!18907 = !DILocation(line: 165, column: 25, scope: !18906)
!18908 = !DILocation(line: 166, column: 51, scope: !18909)
!18909 = distinct !DILexicalBlock(scope: !18903, file: !3400, line: 165, column: 32)
!18910 = !DILocation(line: 170, column: 25, scope: !18881)
!18911 = !DILocation(line: 171, column: 25, scope: !18881)
!18912 = !DILocation(line: 176, column: 17, scope: !18913)
!18913 = distinct !DILexicalBlock(scope: !18914, file: !3400, line: 175, column: 31)
!18914 = distinct !DILexicalBlock(scope: !18816, file: !3400, line: 175, column: 17)
!18915 = !DILocation(line: 178, column: 146, scope: !18916)
!18916 = distinct !DILexicalBlock(scope: !18913, file: !3400, line: 176, column: 35)
!18917 = !DILocation(line: 178, column: 25, scope: !18916)
!18918 = !DILocation(line: 179, column: 25, scope: !18916)
!18919 = !DILocation(line: 181, column: 146, scope: !18916)
!18920 = !DILocation(line: 181, column: 25, scope: !18916)
!18921 = !DILocation(line: 182, column: 25, scope: !18916)
!18922 = !DILocation(line: 184, column: 146, scope: !18916)
!18923 = !DILocation(line: 184, column: 25, scope: !18916)
!18924 = !DILocation(line: 185, column: 25, scope: !18916)
!18925 = !DILocation(line: 187, column: 146, scope: !18916)
!18926 = !DILocation(line: 187, column: 25, scope: !18916)
!18927 = !DILocation(line: 188, column: 60, scope: !18928)
!18928 = distinct !DILexicalBlock(scope: !18916, file: !3400, line: 188, column: 29)
!18929 = !DILocation(line: 0, scope: !18928)
!18930 = !DILocation(line: 189, column: 51, scope: !18931)
!18931 = distinct !DILexicalBlock(scope: !18928, file: !3400, line: 188, column: 93)
!18932 = !DILocation(line: 190, column: 25, scope: !18931)
!18933 = !DILocation(line: 191, column: 51, scope: !18934)
!18934 = distinct !DILexicalBlock(scope: !18928, file: !3400, line: 190, column: 32)
!18935 = !DILocation(line: 195, column: 146, scope: !18916)
!18936 = !DILocation(line: 195, column: 25, scope: !18916)
!18937 = !DILocation(line: 196, column: 60, scope: !18938)
!18938 = distinct !DILexicalBlock(scope: !18916, file: !3400, line: 196, column: 29)
!18939 = !DILocation(line: 0, scope: !18938)
!18940 = !DILocation(line: 197, column: 51, scope: !18941)
!18941 = distinct !DILexicalBlock(scope: !18938, file: !3400, line: 196, column: 93)
!18942 = !DILocation(line: 198, column: 25, scope: !18941)
!18943 = !DILocation(line: 199, column: 51, scope: !18944)
!18944 = distinct !DILexicalBlock(scope: !18938, file: !3400, line: 198, column: 32)
!18945 = !DILocation(line: 203, column: 25, scope: !18916)
!18946 = !DILocation(line: 204, column: 25, scope: !18916)
!18947 = !DILocation(line: 208, column: 13, scope: !18816)
!18948 = !DILocation(line: 209, column: 13, scope: !18816)
!18949 = !DILocation(line: 210, column: 13, scope: !18816)
!18950 = !DILocation(line: 213, column: 13, scope: !18816)
!18951 = !DILocation(line: 215, column: 142, scope: !18952)
!18952 = distinct !DILexicalBlock(scope: !18816, file: !3400, line: 213, column: 31)
!18953 = !DILocation(line: 215, column: 21, scope: !18952)
!18954 = !DILocation(line: 216, column: 21, scope: !18952)
!18955 = !DILocation(line: 218, column: 142, scope: !18952)
!18956 = !DILocation(line: 218, column: 21, scope: !18952)
!18957 = !DILocation(line: 219, column: 21, scope: !18952)
!18958 = !DILocation(line: 221, column: 142, scope: !18952)
!18959 = !DILocation(line: 221, column: 21, scope: !18952)
!18960 = !DILocation(line: 222, column: 21, scope: !18952)
!18961 = !DILocation(line: 224, column: 142, scope: !18952)
!18962 = !DILocation(line: 224, column: 21, scope: !18952)
!18963 = !DILocation(line: 225, column: 21, scope: !18952)
!18964 = !DILocation(line: 227, column: 142, scope: !18952)
!18965 = !DILocation(line: 227, column: 21, scope: !18952)
!18966 = !DILocation(line: 228, column: 21, scope: !18952)
!18967 = !DILocation(line: 230, column: 142, scope: !18952)
!18968 = !DILocation(line: 230, column: 21, scope: !18952)
!18969 = !DILocation(line: 231, column: 21, scope: !18952)
!18970 = !DILocation(line: 233, column: 142, scope: !18952)
!18971 = !DILocation(line: 233, column: 21, scope: !18952)
!18972 = !DILocation(line: 234, column: 21, scope: !18952)
!18973 = !DILocation(line: 236, column: 142, scope: !18952)
!18974 = !DILocation(line: 236, column: 21, scope: !18952)
!18975 = !DILocation(line: 237, column: 21, scope: !18952)
!18976 = !DILocation(line: 239, column: 21, scope: !18952)
!18977 = !DILocation(line: 240, column: 21, scope: !18952)
!18978 = !DILocation(line: 245, column: 13, scope: !18816)
!18979 = !DILocation(line: 247, column: 142, scope: !18980)
!18980 = distinct !DILexicalBlock(scope: !18816, file: !3400, line: 245, column: 31)
!18981 = !DILocation(line: 247, column: 21, scope: !18980)
!18982 = !DILocation(line: 248, column: 21, scope: !18980)
!18983 = !DILocation(line: 250, column: 142, scope: !18980)
!18984 = !DILocation(line: 250, column: 21, scope: !18980)
!18985 = !DILocation(line: 251, column: 21, scope: !18980)
!18986 = !DILocation(line: 253, column: 142, scope: !18980)
!18987 = !DILocation(line: 253, column: 21, scope: !18980)
!18988 = !DILocation(line: 254, column: 21, scope: !18980)
!18989 = !DILocation(line: 256, column: 142, scope: !18980)
!18990 = !DILocation(line: 256, column: 21, scope: !18980)
!18991 = !DILocation(line: 257, column: 21, scope: !18980)
!18992 = !DILocation(line: 259, column: 142, scope: !18980)
!18993 = !DILocation(line: 259, column: 21, scope: !18980)
!18994 = !DILocation(line: 260, column: 21, scope: !18980)
!18995 = !DILocation(line: 262, column: 142, scope: !18980)
!18996 = !DILocation(line: 262, column: 21, scope: !18980)
!18997 = !DILocation(line: 263, column: 21, scope: !18980)
!18998 = !DILocation(line: 265, column: 21, scope: !18980)
!18999 = !DILocation(line: 266, column: 21, scope: !18980)
!19000 = !DILocation(line: 271, column: 13, scope: !18816)
!19001 = !DILocation(line: 273, column: 142, scope: !19002)
!19002 = distinct !DILexicalBlock(scope: !18816, file: !3400, line: 271, column: 31)
!19003 = !DILocation(line: 273, column: 21, scope: !19002)
!19004 = !DILocation(line: 274, column: 21, scope: !19002)
!19005 = !DILocation(line: 276, column: 142, scope: !19002)
!19006 = !DILocation(line: 276, column: 21, scope: !19002)
!19007 = !DILocation(line: 277, column: 21, scope: !19002)
!19008 = !DILocation(line: 279, column: 142, scope: !19002)
!19009 = !DILocation(line: 279, column: 21, scope: !19002)
!19010 = !DILocation(line: 280, column: 21, scope: !19002)
!19011 = !DILocation(line: 282, column: 142, scope: !19002)
!19012 = !DILocation(line: 282, column: 21, scope: !19002)
!19013 = !DILocation(line: 283, column: 21, scope: !19002)
!19014 = !DILocation(line: 285, column: 142, scope: !19002)
!19015 = !DILocation(line: 285, column: 21, scope: !19002)
!19016 = !DILocation(line: 286, column: 21, scope: !19002)
!19017 = !DILocation(line: 288, column: 21, scope: !19002)
!19018 = !DILocation(line: 289, column: 21, scope: !19002)
!19019 = !DILocation(line: 294, column: 13, scope: !18816)
!19020 = !DILocation(line: 296, column: 142, scope: !19021)
!19021 = distinct !DILexicalBlock(scope: !18816, file: !3400, line: 294, column: 31)
!19022 = !DILocation(line: 296, column: 21, scope: !19021)
!19023 = !DILocation(line: 297, column: 21, scope: !19021)
!19024 = !DILocation(line: 299, column: 142, scope: !19021)
!19025 = !DILocation(line: 299, column: 21, scope: !19021)
!19026 = !DILocation(line: 300, column: 21, scope: !19021)
!19027 = !DILocation(line: 302, column: 142, scope: !19021)
!19028 = !DILocation(line: 302, column: 21, scope: !19021)
!19029 = !DILocation(line: 303, column: 21, scope: !19021)
!19030 = !DILocation(line: 305, column: 142, scope: !19021)
!19031 = !DILocation(line: 305, column: 21, scope: !19021)
!19032 = !DILocation(line: 306, column: 21, scope: !19021)
!19033 = !DILocation(line: 308, column: 142, scope: !19021)
!19034 = !DILocation(line: 308, column: 21, scope: !19021)
!19035 = !DILocation(line: 309, column: 21, scope: !19021)
!19036 = !DILocation(line: 311, column: 21, scope: !19021)
!19037 = !DILocation(line: 312, column: 21, scope: !19021)
!19038 = !DILocation(line: 317, column: 13, scope: !18816)
!19039 = !DILocation(line: 319, column: 142, scope: !19040)
!19040 = distinct !DILexicalBlock(scope: !18816, file: !3400, line: 317, column: 31)
!19041 = !DILocation(line: 319, column: 21, scope: !19040)
!19042 = !DILocation(line: 320, column: 21, scope: !19040)
!19043 = !DILocation(line: 322, column: 142, scope: !19040)
!19044 = !DILocation(line: 322, column: 21, scope: !19040)
!19045 = !DILocation(line: 323, column: 21, scope: !19040)
!19046 = !DILocation(line: 325, column: 142, scope: !19040)
!19047 = !DILocation(line: 325, column: 21, scope: !19040)
!19048 = !DILocation(line: 326, column: 21, scope: !19040)
!19049 = !DILocation(line: 328, column: 142, scope: !19040)
!19050 = !DILocation(line: 328, column: 21, scope: !19040)
!19051 = !DILocation(line: 329, column: 21, scope: !19040)
!19052 = !DILocation(line: 331, column: 142, scope: !19040)
!19053 = !DILocation(line: 331, column: 21, scope: !19040)
!19054 = !DILocation(line: 332, column: 21, scope: !19040)
!19055 = !DILocation(line: 334, column: 21, scope: !19040)
!19056 = !DILocation(line: 335, column: 21, scope: !19040)
!19057 = !DILocation(line: 340, column: 13, scope: !18816)
!19058 = !DILocation(line: 342, column: 142, scope: !19059)
!19059 = distinct !DILexicalBlock(scope: !18816, file: !3400, line: 340, column: 31)
!19060 = !DILocation(line: 342, column: 21, scope: !19059)
!19061 = !DILocation(line: 343, column: 21, scope: !19059)
!19062 = !DILocation(line: 345, column: 142, scope: !19059)
!19063 = !DILocation(line: 345, column: 21, scope: !19059)
!19064 = !DILocation(line: 346, column: 21, scope: !19059)
!19065 = !DILocation(line: 348, column: 142, scope: !19059)
!19066 = !DILocation(line: 348, column: 21, scope: !19059)
!19067 = !DILocation(line: 349, column: 21, scope: !19059)
!19068 = !DILocation(line: 351, column: 142, scope: !19059)
!19069 = !DILocation(line: 351, column: 21, scope: !19059)
!19070 = !DILocation(line: 352, column: 21, scope: !19059)
!19071 = !DILocation(line: 354, column: 142, scope: !19059)
!19072 = !DILocation(line: 354, column: 21, scope: !19059)
!19073 = !DILocation(line: 355, column: 21, scope: !19059)
!19074 = !DILocation(line: 357, column: 21, scope: !19059)
!19075 = !DILocation(line: 358, column: 21, scope: !19059)
!19076 = !DILocation(line: 363, column: 135, scope: !18816)
!19077 = !DILocation(line: 363, column: 13, scope: !18816)
!19078 = !DILocation(line: 364, column: 13, scope: !18816)
!19079 = !DILocation(line: 367, column: 135, scope: !18816)
!19080 = !DILocation(line: 367, column: 13, scope: !18816)
!19081 = !DILocation(line: 368, column: 13, scope: !18816)
!19082 = !DILocation(line: 371, column: 13, scope: !18816)
!19083 = !DILocation(line: 372, column: 13, scope: !18816)
!19084 = !DILocation(line: 374, column: 5, scope: !18802)
!19085 = !DILocation(line: 376, column: 5, scope: !18802)
!19086 = !DILocation(line: 377, column: 1, scope: !18802)
!19087 = distinct !DISubprogram(name: "pmu_set_vrc_key_mt6385", scope: !3400, file: !3400, line: 1119, type: !19088, scopeLine: 1120, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3399, retainedNodes: !19091)
!19088 = !DISubroutineType(types: !19089)
!19089 = !{null, !19090}
!19090 = !DIDerivedType(tag: DW_TAG_typedef, name: "PMIC_SET_KEY", file: !3207, line: 121, baseType: !3206)
!19091 = !{!19092}
!19092 = !DILocalVariable(name: "mode", arg: 1, scope: !19087, file: !3400, line: 1119, type: !19090)
!19093 = !DILocation(line: 0, scope: !19087)
!19094 = !DILocation(line: 1121, column: 13, scope: !19095)
!19095 = distinct !DILexicalBlock(scope: !19087, file: !3400, line: 1121, column: 8)
!19096 = !DILocation(line: 0, scope: !19095)
!19097 = !DILocation(line: 1128, column: 1, scope: !19087)
!19098 = distinct !DISubprogram(name: "pmu_set_ovr_mode_mt6385", scope: !3400, file: !3400, line: 1109, type: !19099, scopeLine: 1110, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3399, retainedNodes: !19102)
!19099 = !DISubroutineType(types: !19100)
!19100 = !{null, !19101}
!19101 = !DIDerivedType(tag: DW_TAG_typedef, name: "PMIC_SET_OVR_MODE", file: !3207, line: 116, baseType: !3211)
!19102 = !{!19103}
!19103 = !DILocalVariable(name: "mode", arg: 1, scope: !19098, file: !3400, line: 1109, type: !19101)
!19104 = !DILocation(line: 0, scope: !19098)
!19105 = !DILocation(line: 1111, column: 13, scope: !19106)
!19106 = distinct !DILexicalBlock(scope: !19098, file: !3400, line: 1111, column: 8)
!19107 = !DILocation(line: 1111, column: 8, scope: !19098)
!19108 = !DILocation(line: 1112, column: 9, scope: !19109)
!19109 = distinct !DILexicalBlock(scope: !19106, file: !3400, line: 1111, column: 37)
!19110 = !DILocation(line: 1114, column: 5, scope: !19109)
!19111 = !DILocation(line: 0, scope: !19106)
!19112 = !DILocation(line: 1117, column: 1, scope: !19098)
!19113 = distinct !DISubprogram(name: "PMIC_VR_SLEEP_WKUP_CONFIG", scope: !3400, file: !3400, line: 380, type: !19114, scopeLine: 381, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3399, retainedNodes: !19116)
!19114 = !DISubroutineType(types: !19115)
!19115 = !{null, !18805, !3353, !3355, !7}
!19116 = !{!19117, !19118, !19119, !19120, !19121, !19122}
!19117 = !DILocalVariable(name: "vr_name", arg: 1, scope: !19113, file: !3400, line: 380, type: !18805)
!19118 = !DILocalVariable(name: "psi_mode", arg: 2, scope: !19113, file: !3400, line: 380, type: !3353)
!19119 = !DILocalVariable(name: "ctl_mode", arg: 3, scope: !19113, file: !3400, line: 380, type: !3355)
!19120 = !DILocalVariable(name: "wk_slot", arg: 4, scope: !19113, file: !3400, line: 380, type: !7)
!19121 = !DILocalVariable(name: "wk_seq_len", scope: !19113, file: !3400, line: 388, type: !7)
!19122 = !DILocalVariable(name: "wk_slot_final", scope: !19113, file: !3400, line: 389, type: !7)
!19123 = !DILocation(line: 0, scope: !19113)
!19124 = !DILocation(line: 392, column: 5, scope: !19113)
!19125 = !DILocation(line: 394, column: 26, scope: !19126)
!19126 = distinct !DILexicalBlock(scope: !19113, file: !3400, line: 392, column: 23)
!19127 = !DILocation(line: 395, column: 13, scope: !19126)
!19128 = !DILocation(line: 397, column: 26, scope: !19126)
!19129 = !DILocation(line: 398, column: 13, scope: !19126)
!19130 = !DILocation(line: 400, column: 13, scope: !19126)
!19131 = !DILocation(line: 401, column: 13, scope: !19126)
!19132 = !DILocation(line: 404, column: 17, scope: !19133)
!19133 = distinct !DILexicalBlock(scope: !19113, file: !3400, line: 404, column: 9)
!19134 = !DILocation(line: 404, column: 9, scope: !19113)
!19135 = !DILocation(line: 405, column: 9, scope: !19136)
!19136 = distinct !DILexicalBlock(scope: !19133, file: !3400, line: 404, column: 31)
!19137 = !DILocation(line: 406, column: 5, scope: !19136)
!19138 = !DILocation(line: 408, column: 5, scope: !19113)
!19139 = !DILocation(line: 414, column: 13, scope: !19140)
!19140 = distinct !DILexicalBlock(scope: !19113, file: !3400, line: 408, column: 23)
!19141 = !DILocation(line: 417, column: 13, scope: !19140)
!19142 = !DILocation(line: 419, column: 13, scope: !19140)
!19143 = !DILocation(line: 420, column: 13, scope: !19140)
!19144 = !DILocation(line: 426, column: 5, scope: !19113)
!19145 = !DILocation(line: 427, column: 5, scope: !19113)
!19146 = !DILocation(line: 429, column: 5, scope: !19113)
!19147 = !DILocation(line: 431, column: 13, scope: !19148)
!19148 = distinct !DILexicalBlock(scope: !19113, file: !3400, line: 429, column: 22)
!19149 = !DILocation(line: 432, column: 13, scope: !19148)
!19150 = !DILocation(line: 435, column: 13, scope: !19148)
!19151 = !DILocation(line: 436, column: 13, scope: !19148)
!19152 = !DILocation(line: 439, column: 13, scope: !19148)
!19153 = !DILocation(line: 441, column: 119, scope: !19154)
!19154 = distinct !DILexicalBlock(scope: !19148, file: !3400, line: 439, column: 31)
!19155 = !DILocation(line: 441, column: 21, scope: !19154)
!19156 = !DILocation(line: 442, column: 21, scope: !19154)
!19157 = !DILocation(line: 444, column: 119, scope: !19154)
!19158 = !DILocation(line: 444, column: 21, scope: !19154)
!19159 = !DILocation(line: 445, column: 21, scope: !19154)
!19160 = !DILocation(line: 447, column: 21, scope: !19154)
!19161 = !DILocation(line: 448, column: 21, scope: !19154)
!19162 = !DILocation(line: 453, column: 31, scope: !19163)
!19163 = distinct !DILexicalBlock(scope: !19148, file: !3400, line: 453, column: 17)
!19164 = !DILocation(line: 453, column: 17, scope: !19148)
!19165 = !DILocation(line: 0, scope: !19163)
!19166 = !DILocation(line: 458, column: 13, scope: !19148)
!19167 = !DILocation(line: 460, column: 131, scope: !19168)
!19168 = distinct !DILexicalBlock(scope: !19148, file: !3400, line: 458, column: 31)
!19169 = !DILocation(line: 460, column: 21, scope: !19168)
!19170 = !DILocation(line: 461, column: 21, scope: !19168)
!19171 = !DILocation(line: 463, column: 131, scope: !19168)
!19172 = !DILocation(line: 463, column: 21, scope: !19168)
!19173 = !DILocation(line: 464, column: 21, scope: !19168)
!19174 = !DILocation(line: 466, column: 21, scope: !19168)
!19175 = !DILocation(line: 467, column: 21, scope: !19168)
!19176 = !DILocation(line: 472, column: 13, scope: !19148)
!19177 = !DILocation(line: 473, column: 13, scope: !19148)
!19178 = !DILocation(line: 476, column: 49, scope: !19179)
!19179 = distinct !DILexicalBlock(scope: !19148, file: !3400, line: 476, column: 17)
!19180 = !DILocation(line: 478, column: 17, scope: !19181)
!19181 = distinct !DILexicalBlock(scope: !19179, file: !3400, line: 476, column: 88)
!19182 = !DILocation(line: 479, column: 17, scope: !19181)
!19183 = !DILocation(line: 480, column: 17, scope: !19181)
!19184 = !DILocation(line: 482, column: 25, scope: !19185)
!19185 = distinct !DILexicalBlock(scope: !19181, file: !3400, line: 480, column: 35)
!19186 = !DILocation(line: 483, column: 25, scope: !19185)
!19187 = !DILocation(line: 485, column: 25, scope: !19185)
!19188 = !DILocation(line: 486, column: 25, scope: !19185)
!19189 = !DILocation(line: 488, column: 25, scope: !19185)
!19190 = !DILocation(line: 489, column: 25, scope: !19185)
!19191 = !DILocation(line: 492, column: 17, scope: !19181)
!19192 = !DILocation(line: 493, column: 17, scope: !19181)
!19193 = !DILocation(line: 494, column: 13, scope: !19181)
!19194 = !DILocation(line: 498, column: 13, scope: !19148)
!19195 = !DILocation(line: 500, column: 131, scope: !19196)
!19196 = distinct !DILexicalBlock(scope: !19148, file: !3400, line: 498, column: 31)
!19197 = !DILocation(line: 500, column: 21, scope: !19196)
!19198 = !DILocation(line: 501, column: 21, scope: !19196)
!19199 = !DILocation(line: 503, column: 131, scope: !19196)
!19200 = !DILocation(line: 503, column: 21, scope: !19196)
!19201 = !DILocation(line: 504, column: 21, scope: !19196)
!19202 = !DILocation(line: 506, column: 21, scope: !19196)
!19203 = !DILocation(line: 507, column: 21, scope: !19196)
!19204 = !DILocation(line: 512, column: 31, scope: !19205)
!19205 = distinct !DILexicalBlock(scope: !19148, file: !3400, line: 512, column: 17)
!19206 = !DILocation(line: 512, column: 17, scope: !19148)
!19207 = !DILocation(line: 0, scope: !19205)
!19208 = !DILocation(line: 517, column: 31, scope: !19209)
!19209 = distinct !DILexicalBlock(scope: !19148, file: !3400, line: 517, column: 17)
!19210 = !DILocation(line: 517, column: 17, scope: !19148)
!19211 = !DILocation(line: 519, column: 17, scope: !19212)
!19212 = distinct !DILexicalBlock(scope: !19209, file: !3400, line: 517, column: 37)
!19213 = !DILocation(line: 520, column: 13, scope: !19212)
!19214 = !DILocation(line: 521, column: 13, scope: !19148)
!19215 = !DILocation(line: 523, column: 131, scope: !19216)
!19216 = distinct !DILexicalBlock(scope: !19148, file: !3400, line: 521, column: 31)
!19217 = !DILocation(line: 523, column: 21, scope: !19216)
!19218 = !DILocation(line: 524, column: 21, scope: !19216)
!19219 = !DILocation(line: 526, column: 131, scope: !19216)
!19220 = !DILocation(line: 526, column: 21, scope: !19216)
!19221 = !DILocation(line: 527, column: 21, scope: !19216)
!19222 = !DILocation(line: 529, column: 21, scope: !19216)
!19223 = !DILocation(line: 530, column: 21, scope: !19216)
!19224 = !DILocation(line: 535, column: 31, scope: !19225)
!19225 = distinct !DILexicalBlock(scope: !19148, file: !3400, line: 535, column: 17)
!19226 = !DILocation(line: 535, column: 17, scope: !19148)
!19227 = !DILocation(line: 0, scope: !19225)
!19228 = !DILocation(line: 540, column: 31, scope: !19229)
!19229 = distinct !DILexicalBlock(scope: !19148, file: !3400, line: 540, column: 17)
!19230 = !DILocation(line: 540, column: 17, scope: !19148)
!19231 = !DILocation(line: 542, column: 17, scope: !19232)
!19232 = distinct !DILexicalBlock(scope: !19229, file: !3400, line: 540, column: 37)
!19233 = !DILocation(line: 543, column: 13, scope: !19232)
!19234 = !DILocation(line: 544, column: 13, scope: !19148)
!19235 = !DILocation(line: 546, column: 131, scope: !19236)
!19236 = distinct !DILexicalBlock(scope: !19148, file: !3400, line: 544, column: 31)
!19237 = !DILocation(line: 546, column: 21, scope: !19236)
!19238 = !DILocation(line: 547, column: 21, scope: !19236)
!19239 = !DILocation(line: 549, column: 131, scope: !19236)
!19240 = !DILocation(line: 549, column: 21, scope: !19236)
!19241 = !DILocation(line: 550, column: 21, scope: !19236)
!19242 = !DILocation(line: 552, column: 21, scope: !19236)
!19243 = !DILocation(line: 553, column: 21, scope: !19236)
!19244 = !DILocation(line: 558, column: 31, scope: !19245)
!19245 = distinct !DILexicalBlock(scope: !19148, file: !3400, line: 558, column: 17)
!19246 = !DILocation(line: 558, column: 17, scope: !19148)
!19247 = !DILocation(line: 0, scope: !19245)
!19248 = !DILocation(line: 563, column: 31, scope: !19249)
!19249 = distinct !DILexicalBlock(scope: !19148, file: !3400, line: 563, column: 17)
!19250 = !DILocation(line: 563, column: 17, scope: !19148)
!19251 = !DILocation(line: 565, column: 17, scope: !19252)
!19252 = distinct !DILexicalBlock(scope: !19249, file: !3400, line: 563, column: 37)
!19253 = !DILocation(line: 566, column: 13, scope: !19252)
!19254 = !DILocation(line: 567, column: 13, scope: !19148)
!19255 = !DILocation(line: 569, column: 127, scope: !19256)
!19256 = distinct !DILexicalBlock(scope: !19148, file: !3400, line: 567, column: 31)
!19257 = !DILocation(line: 569, column: 21, scope: !19256)
!19258 = !DILocation(line: 570, column: 21, scope: !19256)
!19259 = !DILocation(line: 572, column: 127, scope: !19256)
!19260 = !DILocation(line: 572, column: 21, scope: !19256)
!19261 = !DILocation(line: 573, column: 21, scope: !19256)
!19262 = !DILocation(line: 575, column: 21, scope: !19256)
!19263 = !DILocation(line: 576, column: 21, scope: !19256)
!19264 = !DILocation(line: 581, column: 13, scope: !19148)
!19265 = !DILocation(line: 582, column: 13, scope: !19148)
!19266 = !DILocation(line: 585, column: 13, scope: !19148)
!19267 = !DILocation(line: 586, column: 13, scope: !19148)
!19268 = !DILocation(line: 589, column: 31, scope: !19269)
!19269 = distinct !DILexicalBlock(scope: !19148, file: !3400, line: 589, column: 17)
!19270 = !DILocation(line: 589, column: 17, scope: !19148)
!19271 = !DILocation(line: 0, scope: !19269)
!19272 = !DILocation(line: 594, column: 31, scope: !19273)
!19273 = distinct !DILexicalBlock(scope: !19148, file: !3400, line: 594, column: 17)
!19274 = !DILocation(line: 594, column: 17, scope: !19148)
!19275 = !DILocation(line: 596, column: 17, scope: !19276)
!19276 = distinct !DILexicalBlock(scope: !19273, file: !3400, line: 594, column: 37)
!19277 = !DILocation(line: 597, column: 13, scope: !19276)
!19278 = !DILocation(line: 598, column: 13, scope: !19148)
!19279 = !DILocation(line: 600, column: 127, scope: !19280)
!19280 = distinct !DILexicalBlock(scope: !19148, file: !3400, line: 598, column: 31)
!19281 = !DILocation(line: 600, column: 21, scope: !19280)
!19282 = !DILocation(line: 601, column: 21, scope: !19280)
!19283 = !DILocation(line: 603, column: 127, scope: !19280)
!19284 = !DILocation(line: 603, column: 21, scope: !19280)
!19285 = !DILocation(line: 604, column: 21, scope: !19280)
!19286 = !DILocation(line: 606, column: 21, scope: !19280)
!19287 = !DILocation(line: 607, column: 21, scope: !19280)
!19288 = !DILocation(line: 612, column: 31, scope: !19289)
!19289 = distinct !DILexicalBlock(scope: !19148, file: !3400, line: 612, column: 17)
!19290 = !DILocation(line: 612, column: 17, scope: !19148)
!19291 = !DILocation(line: 0, scope: !19289)
!19292 = !DILocation(line: 617, column: 31, scope: !19293)
!19293 = distinct !DILexicalBlock(scope: !19148, file: !3400, line: 617, column: 17)
!19294 = !DILocation(line: 617, column: 17, scope: !19148)
!19295 = !DILocation(line: 619, column: 17, scope: !19296)
!19296 = distinct !DILexicalBlock(scope: !19293, file: !3400, line: 617, column: 37)
!19297 = !DILocation(line: 620, column: 13, scope: !19296)
!19298 = !DILocation(line: 621, column: 13, scope: !19148)
!19299 = !DILocation(line: 623, column: 127, scope: !19300)
!19300 = distinct !DILexicalBlock(scope: !19148, file: !3400, line: 621, column: 31)
!19301 = !DILocation(line: 623, column: 21, scope: !19300)
!19302 = !DILocation(line: 624, column: 21, scope: !19300)
!19303 = !DILocation(line: 626, column: 127, scope: !19300)
!19304 = !DILocation(line: 626, column: 21, scope: !19300)
!19305 = !DILocation(line: 627, column: 21, scope: !19300)
!19306 = !DILocation(line: 629, column: 21, scope: !19300)
!19307 = !DILocation(line: 630, column: 21, scope: !19300)
!19308 = !DILocation(line: 635, column: 13, scope: !19148)
!19309 = !DILocation(line: 636, column: 13, scope: !19148)
!19310 = !DILocation(line: 639, column: 13, scope: !19148)
!19311 = !DILocation(line: 640, column: 13, scope: !19148)
!19312 = !DILocation(line: 644, column: 5, scope: !19113)
!19313 = !DILocation(line: 645, column: 5, scope: !19113)
!19314 = !DILocation(line: 646, column: 1, scope: !19113)
!19315 = distinct !DISubprogram(name: "PMIC_VR_CONTROL", scope: !3400, file: !3400, line: 648, type: !19316, scopeLine: 649, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3399, retainedNodes: !19318)
!19316 = !DISubroutineType(types: !19317)
!19317 = !{null, !18805, !3356}
!19318 = !{!19319, !19320, !19321}
!19319 = !DILocalVariable(name: "vr_name", arg: 1, scope: !19315, file: !3400, line: 648, type: !18805)
!19320 = !DILocalVariable(name: "enable", arg: 2, scope: !19315, file: !3400, line: 648, type: !3356)
!19321 = !DILocalVariable(name: "poll_stb_b", scope: !19315, file: !3400, line: 650, type: !7)
!19322 = !DILocation(line: 0, scope: !19315)
!19323 = !DILocation(line: 652, column: 9, scope: !19324)
!19324 = distinct !DILexicalBlock(scope: !19315, file: !3400, line: 652, column: 9)
!19325 = !DILocation(line: 657, column: 5, scope: !19315)
!19326 = !DILocation(line: 658, column: 5, scope: !19315)
!19327 = !DILocation(line: 660, column: 5, scope: !19315)
!19328 = !DILocation(line: 662, column: 13, scope: !19329)
!19329 = distinct !DILexicalBlock(scope: !19315, file: !3400, line: 660, column: 22)
!19330 = !DILocation(line: 663, column: 13, scope: !19329)
!19331 = !DILocation(line: 666, column: 13, scope: !19329)
!19332 = !DILocation(line: 667, column: 13, scope: !19329)
!19333 = !DILocation(line: 670, column: 109, scope: !19329)
!19334 = !DILocation(line: 670, column: 13, scope: !19329)
!19335 = !DILocation(line: 671, column: 13, scope: !19329)
!19336 = !DILocation(line: 672, column: 30, scope: !19337)
!19337 = distinct !DILexicalBlock(scope: !19329, file: !3400, line: 671, column: 37)
!19338 = !DILocation(line: 671, column: 31, scope: !19329)
!19339 = distinct !{!19339, !19335, !19340}
!19340 = !DILocation(line: 673, column: 13, scope: !19329)
!19341 = !DILocation(line: 677, column: 24, scope: !19342)
!19342 = distinct !DILexicalBlock(scope: !19329, file: !3400, line: 677, column: 17)
!19343 = !DILocation(line: 677, column: 17, scope: !19329)
!19344 = !DILocation(line: 0, scope: !19342)
!19345 = !DILocation(line: 682, column: 109, scope: !19329)
!19346 = !DILocation(line: 682, column: 13, scope: !19329)
!19347 = !DILocation(line: 683, column: 13, scope: !19329)
!19348 = !DILocation(line: 684, column: 30, scope: !19349)
!19349 = distinct !DILexicalBlock(scope: !19329, file: !3400, line: 683, column: 37)
!19350 = !DILocation(line: 683, column: 31, scope: !19329)
!19351 = distinct !{!19351, !19347, !19352}
!19352 = !DILocation(line: 685, column: 13, scope: !19329)
!19353 = !DILocation(line: 689, column: 13, scope: !19329)
!19354 = !DILocation(line: 690, column: 13, scope: !19329)
!19355 = !DILocation(line: 693, column: 109, scope: !19329)
!19356 = !DILocation(line: 693, column: 13, scope: !19329)
!19357 = !DILocation(line: 694, column: 13, scope: !19329)
!19358 = !DILocation(line: 697, column: 109, scope: !19329)
!19359 = !DILocation(line: 697, column: 13, scope: !19329)
!19360 = !DILocation(line: 698, column: 13, scope: !19329)
!19361 = !DILocation(line: 699, column: 30, scope: !19362)
!19362 = distinct !DILexicalBlock(scope: !19329, file: !3400, line: 698, column: 37)
!19363 = !DILocation(line: 698, column: 31, scope: !19329)
!19364 = distinct !{!19364, !19360, !19365}
!19365 = !DILocation(line: 700, column: 13, scope: !19329)
!19366 = !DILocation(line: 704, column: 24, scope: !19367)
!19367 = distinct !DILexicalBlock(scope: !19329, file: !3400, line: 704, column: 17)
!19368 = !DILocation(line: 704, column: 17, scope: !19329)
!19369 = !DILocation(line: 0, scope: !19367)
!19370 = !DILocation(line: 709, column: 109, scope: !19329)
!19371 = !DILocation(line: 709, column: 13, scope: !19329)
!19372 = !DILocation(line: 710, column: 13, scope: !19329)
!19373 = !DILocation(line: 711, column: 30, scope: !19374)
!19374 = distinct !DILexicalBlock(scope: !19329, file: !3400, line: 710, column: 37)
!19375 = !DILocation(line: 710, column: 31, scope: !19329)
!19376 = distinct !{!19376, !19372, !19377}
!19377 = !DILocation(line: 712, column: 13, scope: !19329)
!19378 = !DILocation(line: 716, column: 24, scope: !19379)
!19379 = distinct !DILexicalBlock(scope: !19329, file: !3400, line: 716, column: 17)
!19380 = !DILocation(line: 716, column: 17, scope: !19329)
!19381 = !DILocation(line: 0, scope: !19379)
!19382 = !DILocation(line: 721, column: 109, scope: !19329)
!19383 = !DILocation(line: 721, column: 13, scope: !19329)
!19384 = !DILocation(line: 722, column: 13, scope: !19329)
!19385 = !DILocation(line: 723, column: 30, scope: !19386)
!19386 = distinct !DILexicalBlock(scope: !19329, file: !3400, line: 722, column: 37)
!19387 = !DILocation(line: 722, column: 31, scope: !19329)
!19388 = distinct !{!19388, !19384, !19389}
!19389 = !DILocation(line: 724, column: 13, scope: !19329)
!19390 = !DILocation(line: 728, column: 24, scope: !19391)
!19391 = distinct !DILexicalBlock(scope: !19329, file: !3400, line: 728, column: 17)
!19392 = !DILocation(line: 728, column: 17, scope: !19329)
!19393 = !DILocation(line: 0, scope: !19391)
!19394 = !DILocation(line: 733, column: 109, scope: !19329)
!19395 = !DILocation(line: 733, column: 13, scope: !19329)
!19396 = !DILocation(line: 734, column: 13, scope: !19329)
!19397 = !DILocation(line: 735, column: 30, scope: !19398)
!19398 = distinct !DILexicalBlock(scope: !19329, file: !3400, line: 734, column: 37)
!19399 = !DILocation(line: 734, column: 31, scope: !19329)
!19400 = distinct !{!19400, !19396, !19401}
!19401 = !DILocation(line: 736, column: 13, scope: !19329)
!19402 = !DILocation(line: 740, column: 24, scope: !19403)
!19403 = distinct !DILexicalBlock(scope: !19329, file: !3400, line: 740, column: 17)
!19404 = !DILocation(line: 740, column: 17, scope: !19329)
!19405 = !DILocation(line: 0, scope: !19403)
!19406 = !DILocation(line: 745, column: 109, scope: !19329)
!19407 = !DILocation(line: 745, column: 13, scope: !19329)
!19408 = !DILocation(line: 746, column: 13, scope: !19329)
!19409 = !DILocation(line: 747, column: 30, scope: !19410)
!19410 = distinct !DILexicalBlock(scope: !19329, file: !3400, line: 746, column: 37)
!19411 = !DILocation(line: 746, column: 31, scope: !19329)
!19412 = distinct !{!19412, !19408, !19413}
!19413 = !DILocation(line: 748, column: 13, scope: !19329)
!19414 = !DILocation(line: 752, column: 24, scope: !19415)
!19415 = distinct !DILexicalBlock(scope: !19329, file: !3400, line: 752, column: 17)
!19416 = !DILocation(line: 752, column: 17, scope: !19329)
!19417 = !DILocation(line: 0, scope: !19415)
!19418 = !DILocation(line: 757, column: 109, scope: !19329)
!19419 = !DILocation(line: 757, column: 13, scope: !19329)
!19420 = !DILocation(line: 758, column: 13, scope: !19329)
!19421 = !DILocation(line: 759, column: 30, scope: !19422)
!19422 = distinct !DILexicalBlock(scope: !19329, file: !3400, line: 758, column: 37)
!19423 = !DILocation(line: 758, column: 31, scope: !19329)
!19424 = distinct !{!19424, !19420, !19425}
!19425 = !DILocation(line: 760, column: 13, scope: !19329)
!19426 = !DILocation(line: 764, column: 24, scope: !19427)
!19427 = distinct !DILexicalBlock(scope: !19329, file: !3400, line: 764, column: 17)
!19428 = !DILocation(line: 764, column: 17, scope: !19329)
!19429 = !DILocation(line: 0, scope: !19427)
!19430 = !DILocation(line: 769, column: 106, scope: !19329)
!19431 = !DILocation(line: 769, column: 13, scope: !19329)
!19432 = !DILocation(line: 770, column: 13, scope: !19329)
!19433 = !DILocation(line: 773, column: 24, scope: !19434)
!19434 = distinct !DILexicalBlock(scope: !19329, file: !3400, line: 773, column: 17)
!19435 = !DILocation(line: 773, column: 17, scope: !19329)
!19436 = !DILocation(line: 0, scope: !19434)
!19437 = !DILocation(line: 778, column: 109, scope: !19329)
!19438 = !DILocation(line: 778, column: 13, scope: !19329)
!19439 = !DILocation(line: 779, column: 13, scope: !19329)
!19440 = !DILocation(line: 782, column: 24, scope: !19441)
!19441 = distinct !DILexicalBlock(scope: !19329, file: !3400, line: 782, column: 17)
!19442 = !DILocation(line: 782, column: 17, scope: !19329)
!19443 = !DILocation(line: 0, scope: !19441)
!19444 = !DILocation(line: 787, column: 109, scope: !19329)
!19445 = !DILocation(line: 787, column: 13, scope: !19329)
!19446 = !DILocation(line: 788, column: 13, scope: !19329)
!19447 = !DILocation(line: 791, column: 13, scope: !19329)
!19448 = !DILocation(line: 792, column: 13, scope: !19329)
!19449 = !DILocation(line: 796, column: 5, scope: !19315)
!19450 = !DILocation(line: 797, column: 5, scope: !19315)
!19451 = !DILocation(line: 798, column: 1, scope: !19315)
!19452 = distinct !DISubprogram(name: "PMIC_VCORE_VOSEL_CONFIG", scope: !3400, file: !3400, line: 800, type: !19453, scopeLine: 801, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3399, retainedNodes: !19455)
!19453 = !DISubroutineType(types: !19454)
!19454 = !{null, !3353, !3427}
!19455 = !{!19456, !19457, !19458, !19459}
!19456 = !DILocalVariable(name: "psi_mode", arg: 1, scope: !19452, file: !3400, line: 800, type: !3353)
!19457 = !DILocalVariable(name: "vcore_vosel", arg: 2, scope: !19452, file: !3400, line: 800, type: !3427)
!19458 = !DILocalVariable(name: "vcbuck_voval", scope: !19452, file: !3400, line: 803, type: !3470)
!19459 = !DILocalVariable(name: "vc_ldo_vosel", scope: !19452, file: !3400, line: 804, type: !3470)
!19460 = !DILocation(line: 0, scope: !19452)
!19461 = !DILocation(line: 803, column: 9, scope: !19452)
!19462 = !DILocation(line: 804, column: 9, scope: !19452)
!19463 = !DILocation(line: 806, column: 5, scope: !19452)
!19464 = !DILocation(line: 807, column: 5, scope: !19452)
!19465 = !DILocation(line: 808, column: 5, scope: !19452)
!19466 = !DILocation(line: 809, column: 5, scope: !19452)
!19467 = !DILocation(line: 811, column: 137, scope: !19468)
!19468 = distinct !DILexicalBlock(scope: !19452, file: !3400, line: 809, column: 23)
!19469 = !DILocation(line: 811, column: 13, scope: !19468)
!19470 = !DILocation(line: 812, column: 137, scope: !19468)
!19471 = !DILocation(line: 812, column: 13, scope: !19468)
!19472 = !DILocation(line: 813, column: 13, scope: !19468)
!19473 = !DILocation(line: 816, column: 137, scope: !19468)
!19474 = !DILocation(line: 816, column: 13, scope: !19468)
!19475 = !DILocation(line: 817, column: 137, scope: !19468)
!19476 = !DILocation(line: 817, column: 13, scope: !19468)
!19477 = !DILocation(line: 818, column: 13, scope: !19468)
!19478 = !DILocation(line: 821, column: 137, scope: !19468)
!19479 = !DILocation(line: 821, column: 13, scope: !19468)
!19480 = !DILocation(line: 822, column: 137, scope: !19468)
!19481 = !DILocation(line: 822, column: 13, scope: !19468)
!19482 = !DILocation(line: 823, column: 13, scope: !19468)
!19483 = !DILocation(line: 826, column: 137, scope: !19468)
!19484 = !DILocation(line: 826, column: 13, scope: !19468)
!19485 = !DILocation(line: 827, column: 13, scope: !19468)
!19486 = !DILocation(line: 830, column: 13, scope: !19468)
!19487 = !DILocation(line: 831, column: 13, scope: !19468)
!19488 = !DILocation(line: 833, column: 5, scope: !19452)
!19489 = !DILocation(line: 834, column: 5, scope: !19452)
!19490 = !DILocation(line: 835, column: 5, scope: !19452)
!19491 = !DILocation(line: 836, column: 1, scope: !19452)
!19492 = distinct !DISubprogram(name: "PMIC_VR_VOSEL_INIT_CONFIG", scope: !3400, file: !3400, line: 838, type: !19493, scopeLine: 839, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3399, retainedNodes: !19496)
!19493 = !DISubroutineType(types: !19494)
!19494 = !{null, !18805, !19495}
!19495 = !DIDerivedType(tag: DW_TAG_typedef, name: "PMIC_LDO_VOSEL", file: !3207, line: 111, baseType: !3412)
!19496 = !{!19497, !19498, !19499}
!19497 = !DILocalVariable(name: "vr_name", arg: 1, scope: !19492, file: !3400, line: 838, type: !18805)
!19498 = !DILocalVariable(name: "ldo_vosel", arg: 2, scope: !19492, file: !3400, line: 838, type: !19495)
!19499 = !DILocalVariable(name: "viber_vosel", scope: !19492, file: !3400, line: 840, type: !19500)
!19500 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 256, elements: !1046)
!19501 = !DILocation(line: 0, scope: !19492)
!19502 = !DILocation(line: 840, column: 9, scope: !19492)
!19503 = !DILocation(line: 843, column: 5, scope: !19492)
!19504 = !DILocation(line: 844, column: 5, scope: !19492)
!19505 = !DILocation(line: 846, column: 5, scope: !19492)
!19506 = !DILocation(line: 848, column: 13, scope: !19507)
!19507 = distinct !DILexicalBlock(scope: !19492, file: !3400, line: 846, column: 22)
!19508 = !DILocation(line: 850, column: 21, scope: !19509)
!19509 = distinct !DILexicalBlock(scope: !19507, file: !3400, line: 848, column: 32)
!19510 = !DILocation(line: 851, column: 21, scope: !19509)
!19511 = !DILocation(line: 854, column: 21, scope: !19509)
!19512 = !DILocation(line: 855, column: 21, scope: !19509)
!19513 = !DILocation(line: 858, column: 21, scope: !19509)
!19514 = !DILocation(line: 859, column: 21, scope: !19509)
!19515 = !DILocation(line: 862, column: 21, scope: !19509)
!19516 = !DILocation(line: 863, column: 21, scope: !19509)
!19517 = !DILocation(line: 866, column: 21, scope: !19509)
!19518 = !DILocation(line: 867, column: 21, scope: !19509)
!19519 = !DILocation(line: 872, column: 117, scope: !19507)
!19520 = !DILocation(line: 872, column: 13, scope: !19507)
!19521 = !DILocation(line: 873, column: 13, scope: !19507)
!19522 = !DILocation(line: 876, column: 13, scope: !19507)
!19523 = !DILocation(line: 877, column: 13, scope: !19507)
!19524 = !DILocation(line: 881, column: 5, scope: !19492)
!19525 = !DILocation(line: 882, column: 5, scope: !19492)
!19526 = !DILocation(line: 883, column: 1, scope: !19492)
!19527 = !DILocation(line: 889, column: 20, scope: !3435)
!19528 = !DILocation(line: 889, column: 42, scope: !3435)
!19529 = !DILocation(line: 889, column: 40, scope: !3435)
!19530 = !DILocation(line: 889, column: 63, scope: !3435)
!19531 = !DILocation(line: 889, column: 61, scope: !3435)
!19532 = !DILocation(line: 889, column: 17, scope: !3435)
!19533 = !DILocation(line: 894, column: 9, scope: !19534)
!19534 = distinct !DILexicalBlock(scope: !3435, file: !3400, line: 894, column: 9)
!19535 = !DILocation(line: 894, column: 20, scope: !19534)
!19536 = !DILocation(line: 894, column: 9, scope: !3435)
!19537 = !DILocation(line: 895, column: 25, scope: !19538)
!19538 = distinct !DILexicalBlock(scope: !19539, file: !3400, line: 895, column: 13)
!19539 = distinct !DILexicalBlock(scope: !19534, file: !3400, line: 894, column: 36)
!19540 = !DILocation(line: 0, scope: !19538)
!19541 = !DILocation(line: 902, column: 22, scope: !19539)
!19542 = !DILocation(line: 902, column: 20, scope: !19539)
!19543 = !DILocation(line: 903, column: 5, scope: !19539)
!19544 = !DILocation(line: 904, column: 1, scope: !3435)
!19545 = distinct !DISubprogram(name: "pmu_set_mtcmos_mt6385", scope: !3400, file: !3400, line: 950, type: !3441, scopeLine: 951, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3399, retainedNodes: !19546)
!19546 = !{!19547}
!19547 = !DILocalVariable(name: "setting", arg: 1, scope: !19545, file: !3400, line: 950, type: !161)
!19548 = !DILocation(line: 0, scope: !19545)
!19549 = !DILocation(line: 953, column: 5, scope: !19545)
!19550 = !DILocation(line: 954, column: 5, scope: !19545)
!19551 = !DILocation(line: 956, column: 60, scope: !19545)
!19552 = !DILocation(line: 956, column: 5, scope: !19545)
!19553 = !DILocation(line: 959, column: 5, scope: !19545)
!19554 = !DILocation(line: 960, column: 5, scope: !19545)
!19555 = !DILocation(line: 961, column: 1, scope: !19545)
!19556 = !DILocation(line: 0, scope: !3440)
!19557 = !DILocation(line: 912, column: 9, scope: !19558)
!19558 = distinct !DILexicalBlock(scope: !3440, file: !3400, line: 912, column: 9)
!19559 = !DILocation(line: 912, column: 9, scope: !3440)
!19560 = !DILocation(line: 917, column: 19, scope: !19561)
!19561 = distinct !DILexicalBlock(scope: !19562, file: !3400, line: 916, column: 23)
!19562 = distinct !DILexicalBlock(scope: !3440, file: !3400, line: 916, column: 9)
!19563 = !DILocation(line: 917, column: 17, scope: !19561)
!19564 = !DILocation(line: 918, column: 5, scope: !19561)
!19565 = !DILocation(line: 920, column: 16, scope: !19566)
!19566 = distinct !DILexicalBlock(scope: !3440, file: !3400, line: 920, column: 9)
!19567 = !DILocation(line: 0, scope: !19566)
!19568 = !DILocation(line: 920, column: 9, scope: !3440)
!19569 = !DILocation(line: 921, column: 27, scope: !19570)
!19570 = distinct !DILexicalBlock(scope: !19571, file: !3400, line: 921, column: 13)
!19571 = distinct !DILexicalBlock(scope: !19566, file: !3400, line: 920, column: 22)
!19572 = !DILocation(line: 921, column: 13, scope: !19571)
!19573 = !DILocation(line: 922, column: 13, scope: !19574)
!19574 = distinct !DILexicalBlock(scope: !19570, file: !3400, line: 921, column: 33)
!19575 = !DILocation(line: 923, column: 13, scope: !19574)
!19576 = !DILocation(line: 925, column: 22, scope: !19571)
!19577 = !DILocation(line: 924, column: 9, scope: !19574)
!19578 = !DILocation(line: 926, column: 5, scope: !19571)
!19579 = !DILocation(line: 927, column: 27, scope: !19580)
!19580 = distinct !DILexicalBlock(scope: !19581, file: !3400, line: 927, column: 13)
!19581 = distinct !DILexicalBlock(scope: !19566, file: !3400, line: 926, column: 12)
!19582 = !DILocation(line: 927, column: 13, scope: !19581)
!19583 = !DILocation(line: 928, column: 13, scope: !19584)
!19584 = distinct !DILexicalBlock(scope: !19580, file: !3400, line: 927, column: 33)
!19585 = !DILocation(line: 929, column: 13, scope: !19584)
!19586 = !DILocation(line: 931, column: 9, scope: !19584)
!19587 = !DILocation(line: 932, column: 26, scope: !19588)
!19588 = distinct !DILexicalBlock(scope: !19580, file: !3400, line: 931, column: 16)
!19589 = !DILocation(line: 935, column: 1, scope: !3440)
!19590 = distinct !DISubprogram(name: "pmu_ctrl_vbt_ldo_mt6385", scope: !3400, file: !3400, line: 937, type: !3441, scopeLine: 938, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3399, retainedNodes: !19591)
!19591 = !{!19592}
!19592 = !DILocalVariable(name: "enable", arg: 1, scope: !19590, file: !3400, line: 937, type: !161)
!19593 = !DILocation(line: 0, scope: !19590)
!19594 = !DILocation(line: 939, column: 16, scope: !19595)
!19595 = distinct !DILexicalBlock(scope: !19590, file: !3400, line: 939, column: 9)
!19596 = !DILocation(line: 0, scope: !19595)
!19597 = !DILocation(line: 948, column: 1, scope: !19590)
!19598 = distinct !DISubprogram(name: "pmu_get_vcore_setting_index", scope: !3400, file: !3400, line: 963, type: !19599, scopeLine: 964, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3399, retainedNodes: !19601)
!19599 = !DISubroutineType(types: !19600)
!19600 = !{!3427, !161}
!19601 = !{!19602, !19603, !19604}
!19602 = !DILocalVariable(name: "buck_vaval", arg: 1, scope: !19598, file: !3400, line: 963, type: !161)
!19603 = !DILocalVariable(name: "vcbuck_voval", scope: !19598, file: !3400, line: 965, type: !3456)
!19604 = !DILocalVariable(name: "vosel", scope: !19598, file: !3400, line: 966, type: !18)
!19605 = !DILocation(line: 0, scope: !19598)
!19606 = !DILocation(line: 965, column: 19, scope: !19598)
!19607 = !DILocation(line: 968, column: 5, scope: !19608)
!19608 = distinct !DILexicalBlock(scope: !19598, file: !3400, line: 968, column: 5)
!19609 = !DILocation(line: 969, column: 27, scope: !19610)
!19610 = distinct !DILexicalBlock(scope: !19611, file: !3400, line: 969, column: 13)
!19611 = distinct !DILexicalBlock(scope: !19612, file: !3400, line: 968, column: 41)
!19612 = distinct !DILexicalBlock(scope: !19608, file: !3400, line: 968, column: 5)
!19613 = !DILocation(line: 969, column: 24, scope: !19610)
!19614 = !DILocation(line: 969, column: 13, scope: !19611)
!19615 = !DILocation(line: 968, column: 37, scope: !19612)
!19616 = !DILocation(line: 968, column: 27, scope: !19612)
!19617 = distinct !{!19617, !19607, !19618}
!19618 = !DILocation(line: 972, column: 5, scope: !19608)
!19619 = !DILocation(line: 974, column: 1, scope: !19598)
!19620 = !DILocation(line: 0, scope: !3449)
!19621 = !DILocation(line: 982, column: 9, scope: !19622)
!19622 = distinct !DILexicalBlock(scope: !3449, file: !3400, line: 982, column: 9)
!19623 = !DILocation(line: 982, column: 9, scope: !3449)
!19624 = !DILocation(line: 983, column: 24, scope: !19625)
!19625 = distinct !DILexicalBlock(scope: !19622, file: !3400, line: 982, column: 20)
!19626 = !DILocation(line: 984, column: 24, scope: !19625)
!19627 = !DILocation(line: 984, column: 22, scope: !19625)
!19628 = !DILocation(line: 985, column: 24, scope: !19625)
!19629 = !DILocation(line: 986, column: 24, scope: !19625)
!19630 = !DILocation(line: 988, column: 13, scope: !19631)
!19631 = distinct !DILexicalBlock(scope: !19625, file: !3400, line: 988, column: 13)
!19632 = !DILocation(line: 988, column: 32, scope: !19631)
!19633 = !DILocation(line: 0, scope: !19631)
!19634 = !DILocation(line: 995, column: 19, scope: !19625)
!19635 = !DILocation(line: 996, column: 14, scope: !19625)
!19636 = !DILocation(line: 997, column: 5, scope: !19625)
!19637 = !DILocation(line: 999, column: 41, scope: !19638)
!19638 = distinct !DILexicalBlock(scope: !3449, file: !3400, line: 999, column: 9)
!19639 = !DILocation(line: 999, column: 10, scope: !19638)
!19640 = !DILocation(line: 1003, column: 14, scope: !19641)
!19641 = distinct !DILexicalBlock(scope: !3449, file: !3400, line: 1003, column: 9)
!19642 = !DILocation(line: 0, scope: !19641)
!19643 = !DILocation(line: 1003, column: 9, scope: !3449)
!19644 = !DILocation(line: 1006, column: 46, scope: !19645)
!19645 = distinct !DILexicalBlock(scope: !19646, file: !3400, line: 1006, column: 13)
!19646 = distinct !DILexicalBlock(scope: !19641, file: !3400, line: 1005, column: 12)
!19647 = !DILocation(line: 1006, column: 13, scope: !19646)
!19648 = !DILocation(line: 1011, column: 5, scope: !19649)
!19649 = distinct !DILexicalBlock(scope: !3449, file: !3400, line: 1011, column: 5)
!19650 = !DILocation(line: 1012, column: 13, scope: !19651)
!19651 = distinct !DILexicalBlock(scope: !19652, file: !3400, line: 1012, column: 13)
!19652 = distinct !DILexicalBlock(scope: !19653, file: !3400, line: 1011, column: 54)
!19653 = distinct !DILexicalBlock(scope: !19649, file: !3400, line: 1011, column: 5)
!19654 = !DILocation(line: 1012, column: 44, scope: !19651)
!19655 = !DILocation(line: 1012, column: 13, scope: !19652)
!19656 = !DILocation(line: 1011, column: 50, scope: !19653)
!19657 = !DILocation(line: 1011, column: 35, scope: !19653)
!19658 = distinct !{!19658, !19648, !19659}
!19659 = !DILocation(line: 1015, column: 5, scope: !19649)
!19660 = !DILocation(line: 1016, column: 19, scope: !19661)
!19661 = distinct !DILexicalBlock(scope: !3449, file: !3400, line: 1016, column: 9)
!19662 = !DILocation(line: 1016, column: 9, scope: !3449)
!19663 = !DILocation(line: 1021, column: 22, scope: !19664)
!19664 = distinct !DILexicalBlock(scope: !3449, file: !3400, line: 1021, column: 9)
!19665 = !DILocation(line: 1021, column: 19, scope: !19664)
!19666 = !DILocation(line: 1021, column: 9, scope: !3449)
!19667 = !DILocation(line: 1022, column: 19, scope: !19668)
!19668 = distinct !DILexicalBlock(scope: !19664, file: !3400, line: 1021, column: 33)
!19669 = !DILocation(line: 1024, column: 23, scope: !19670)
!19670 = distinct !DILexicalBlock(scope: !19668, file: !3400, line: 1024, column: 13)
!19671 = !DILocation(line: 1024, column: 13, scope: !19668)
!19672 = !DILocation(line: 1025, column: 17, scope: !19673)
!19673 = distinct !DILexicalBlock(scope: !19674, file: !3400, line: 1025, column: 17)
!19674 = distinct !DILexicalBlock(scope: !19670, file: !3400, line: 1024, column: 43)
!19675 = !DILocation(line: 1025, column: 36, scope: !19673)
!19676 = !DILocation(line: 1025, column: 17, scope: !19674)
!19677 = !DILocation(line: 1026, column: 17, scope: !19678)
!19678 = distinct !DILexicalBlock(scope: !19673, file: !3400, line: 1025, column: 42)
!19679 = !DILocation(line: 1027, column: 13, scope: !19678)
!19680 = !DILocation(line: 1029, column: 30, scope: !19681)
!19681 = distinct !DILexicalBlock(scope: !19682, file: !3400, line: 1029, column: 17)
!19682 = distinct !DILexicalBlock(scope: !19670, file: !3400, line: 1028, column: 16)
!19683 = !DILocation(line: 1029, column: 27, scope: !19681)
!19684 = !DILocation(line: 1029, column: 17, scope: !19682)
!19685 = !DILocation(line: 1030, column: 30, scope: !19686)
!19686 = distinct !DILexicalBlock(scope: !19681, file: !3400, line: 1029, column: 44)
!19687 = !DILocation(line: 1031, column: 17, scope: !19686)
!19688 = !DILocation(line: 1032, column: 13, scope: !19686)
!19689 = !DILocation(line: 1033, column: 17, scope: !19690)
!19690 = distinct !DILexicalBlock(scope: !19682, file: !3400, line: 1033, column: 17)
!19691 = !DILocation(line: 1033, column: 36, scope: !19690)
!19692 = !DILocation(line: 1033, column: 17, scope: !19682)
!19693 = !DILocation(line: 1034, column: 17, scope: !19694)
!19694 = distinct !DILexicalBlock(scope: !19690, file: !3400, line: 1033, column: 42)
!19695 = !DILocation(line: 1035, column: 13, scope: !19694)
!19696 = !DILocation(line: 1039, column: 1, scope: !3449)
!19697 = distinct !DISubprogram(name: "pmu_get_vcore_voltage_mt6385", scope: !3400, file: !3400, line: 1041, type: !4164, scopeLine: 1042, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3399, retainedNodes: !19698)
!19698 = !{!19699, !19700}
!19699 = !DILocalVariable(name: "psi_status", scope: !19697, file: !3400, line: 1044, type: !161)
!19700 = !DILocalVariable(name: "vcore", scope: !19697, file: !3400, line: 1044, type: !161)
!19701 = !DILocation(line: 1046, column: 18, scope: !19697)
!19702 = !DILocation(line: 0, scope: !19697)
!19703 = !DILocation(line: 1048, column: 20, scope: !19704)
!19704 = distinct !DILexicalBlock(scope: !19697, file: !3400, line: 1048, column: 9)
!19705 = !DILocation(line: 0, scope: !19704)
!19706 = !DILocation(line: 1057, column: 5, scope: !19697)
!19707 = !DILocation(line: 1063, column: 9, scope: !3467)
!19708 = !DILocation(line: 1065, column: 41, scope: !3467)
!19709 = !DILocation(line: 1065, column: 23, scope: !3467)
!19710 = !DILocation(line: 1067, column: 28, scope: !19711)
!19711 = distinct !DILexicalBlock(scope: !3467, file: !3400, line: 1067, column: 9)
!19712 = !DILocation(line: 1067, column: 25, scope: !19711)
!19713 = !DILocation(line: 1067, column: 9, scope: !3467)
!19714 = !DILocation(line: 1068, column: 20, scope: !19715)
!19715 = distinct !DILexicalBlock(scope: !19711, file: !3400, line: 1067, column: 40)
!19716 = !DILocation(line: 1069, column: 9, scope: !19715)
!19717 = !DILocation(line: 1070, column: 9, scope: !19715)
!19718 = !DILocation(line: 1071, column: 146, scope: !19715)
!19719 = !DILocation(line: 1071, column: 133, scope: !19715)
!19720 = !DILocation(line: 1071, column: 9, scope: !19715)
!19721 = !DILocation(line: 1072, column: 9, scope: !19715)
!19722 = !DILocation(line: 1073, column: 9, scope: !19715)
!19723 = !DILocation(line: 1074, column: 5, scope: !19715)
!19724 = !DILocation(line: 1075, column: 1, scope: !3467)
!19725 = distinct !DISubprogram(name: "pmu_get_usb_input_status_mt6385", scope: !3400, file: !3400, line: 1077, type: !4164, scopeLine: 1078, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3399, retainedNodes: !19726)
!19726 = !{!19727}
!19727 = !DILocalVariable(name: "ret", scope: !19725, file: !3400, line: 1079, type: !167)
!19728 = !DILocation(line: 1080, column: 5, scope: !19725)
!19729 = !DILocation(line: 1081, column: 5, scope: !19725)
!19730 = !DILocation(line: 1083, column: 11, scope: !19725)
!19731 = !DILocation(line: 0, scope: !19725)
!19732 = !DILocation(line: 1086, column: 5, scope: !19725)
!19733 = !DILocation(line: 1087, column: 5, scope: !19725)
!19734 = !DILocation(line: 1088, column: 5, scope: !19725)
!19735 = distinct !DISubprogram(name: "pmu_enter_power_off_mt6385", scope: !3400, file: !3400, line: 1091, type: !343, scopeLine: 1092, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3399, retainedNodes: !345)
!19736 = !DILocation(line: 1093, column: 5, scope: !19735)
!19737 = !DILocation(line: 1094, column: 1, scope: !19735)
!19738 = distinct !DISubprogram(name: "pmu_reset_mt6385", scope: !3400, file: !3400, line: 1096, type: !343, scopeLine: 1097, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3399, retainedNodes: !345)
!19739 = !DILocation(line: 1099, column: 5, scope: !19738)
!19740 = !DILocation(line: 1100, column: 5, scope: !19738)
!19741 = !DILocation(line: 1102, column: 5, scope: !19738)
!19742 = !DILocation(line: 1105, column: 5, scope: !19738)
!19743 = !DILocation(line: 1106, column: 5, scope: !19738)
!19744 = !DILocation(line: 1107, column: 1, scope: !19738)
!19745 = distinct !DISubprogram(name: "__EMI_GetSR", scope: !3477, file: !3477, line: 87, type: !5135, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3476, retainedNodes: !19746)
!19746 = !{!19747, !19748}
!19747 = !DILocalVariable(name: "bank_no", arg: 1, scope: !19745, file: !3477, line: 87, type: !61)
!19748 = !DILocalVariable(name: "value", scope: !19745, file: !3477, line: 89, type: !61)
!19749 = !DILocation(line: 0, scope: !19745)
!19750 = !DILocation(line: 91, column: 41, scope: !19745)
!19751 = !DILocation(line: 91, column: 5, scope: !19745)
!19752 = !DILocation(line: 91, column: 19, scope: !19745)
!19753 = !DILocation(line: 91, column: 31, scope: !19745)
!19754 = !DILocation(line: 92, column: 77, scope: !19745)
!19755 = !DILocation(line: 92, column: 60, scope: !19745)
!19756 = !DILocation(line: 92, column: 31, scope: !19745)
!19757 = !DILocation(line: 94, column: 5, scope: !19745)
!19758 = !DILocation(line: 94, column: 27, scope: !19745)
!19759 = !DILocation(line: 94, column: 39, scope: !19745)
!19760 = !DILocation(line: 94, column: 65, scope: !19745)
!19761 = distinct !{!19761, !19757, !19762}
!19762 = !DILocation(line: 94, column: 70, scope: !19745)
!19763 = !DILocation(line: 96, column: 29, scope: !19745)
!19764 = !DILocation(line: 96, column: 64, scope: !19745)
!19765 = !DILocation(line: 98, column: 5, scope: !19745)
!19766 = distinct !DISubprogram(name: "__EMI_SetSR", scope: !3477, file: !3477, line: 102, type: !1617, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3476, retainedNodes: !19767)
!19767 = !{!19768, !19769}
!19768 = !DILocalVariable(name: "bank_no", arg: 1, scope: !19766, file: !3477, line: 102, type: !61)
!19769 = !DILocalVariable(name: "value", arg: 2, scope: !19766, file: !3477, line: 102, type: !61)
!19770 = !DILocation(line: 0, scope: !19766)
!19771 = !DILocation(line: 106, column: 40, scope: !19766)
!19772 = !DILocation(line: 106, column: 77, scope: !19766)
!19773 = !DILocation(line: 106, column: 102, scope: !19766)
!19774 = !DILocation(line: 106, column: 5, scope: !19766)
!19775 = !DILocation(line: 106, column: 19, scope: !19766)
!19776 = !DILocation(line: 106, column: 31, scope: !19766)
!19777 = !DILocation(line: 107, column: 77, scope: !19766)
!19778 = !DILocation(line: 107, column: 60, scope: !19766)
!19779 = !DILocation(line: 107, column: 31, scope: !19766)
!19780 = !DILocation(line: 109, column: 5, scope: !19766)
!19781 = !DILocation(line: 109, column: 27, scope: !19766)
!19782 = !DILocation(line: 109, column: 39, scope: !19766)
!19783 = !DILocation(line: 109, column: 65, scope: !19766)
!19784 = distinct !{!19784, !19780, !19785}
!19785 = !DILocation(line: 109, column: 70, scope: !19766)
!19786 = !DILocation(line: 111, column: 5, scope: !19766)
!19787 = distinct !DISubprogram(name: "__EMI_SetRegValfromCMCP", scope: !3477, file: !3477, line: 114, type: !343, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3476, retainedNodes: !345)
!19788 = !DILocation(line: 117, column: 36, scope: !19787)
!19789 = !DILocation(line: 117, column: 18, scope: !19787)
!19790 = !DILocation(line: 118, column: 37, scope: !19787)
!19791 = !DILocation(line: 118, column: 18, scope: !19787)
!19792 = !DILocation(line: 119, column: 37, scope: !19787)
!19793 = !DILocation(line: 119, column: 19, scope: !19787)
!19794 = !DILocation(line: 120, column: 37, scope: !19787)
!19795 = !DILocation(line: 120, column: 19, scope: !19787)
!19796 = !DILocation(line: 121, column: 37, scope: !19787)
!19797 = !DILocation(line: 121, column: 19, scope: !19787)
!19798 = !DILocation(line: 122, column: 37, scope: !19787)
!19799 = !DILocation(line: 122, column: 19, scope: !19787)
!19800 = !DILocation(line: 123, column: 37, scope: !19787)
!19801 = !DILocation(line: 123, column: 19, scope: !19787)
!19802 = !DILocation(line: 125, column: 37, scope: !19787)
!19803 = !DILocation(line: 125, column: 19, scope: !19787)
!19804 = !DILocation(line: 126, column: 37, scope: !19787)
!19805 = !DILocation(line: 126, column: 19, scope: !19787)
!19806 = !DILocation(line: 127, column: 37, scope: !19787)
!19807 = !DILocation(line: 127, column: 19, scope: !19787)
!19808 = !DILocation(line: 128, column: 37, scope: !19787)
!19809 = !DILocation(line: 128, column: 19, scope: !19787)
!19810 = !DILocation(line: 130, column: 36, scope: !19787)
!19811 = !DILocation(line: 130, column: 18, scope: !19787)
!19812 = !DILocation(line: 131, column: 36, scope: !19787)
!19813 = !DILocation(line: 131, column: 18, scope: !19787)
!19814 = !DILocation(line: 133, column: 5, scope: !19787)
!19815 = distinct !DISubprogram(name: "__EMI_EnableBandwidthLimiter", scope: !3477, file: !3477, line: 140, type: !19816, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3476, retainedNodes: !345)
!19816 = !DISubroutineType(types: !19817)
!19817 = !{!7}
!19818 = !DILocation(line: 144, column: 5, scope: !19815)
!19819 = !DILocation(line: 144, column: 19, scope: !19815)
!19820 = !DILocation(line: 144, column: 28, scope: !19815)
!19821 = !DILocation(line: 147, column: 19, scope: !19815)
!19822 = !DILocation(line: 147, column: 28, scope: !19815)
!19823 = !DILocation(line: 150, column: 19, scope: !19815)
!19824 = !DILocation(line: 150, column: 28, scope: !19815)
!19825 = !DILocation(line: 152, column: 5, scope: !19815)
!19826 = distinct !DISubprogram(name: "TestCase_MBIST", scope: !3477, file: !3477, line: 157, type: !14563, scopeLine: 158, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3476, retainedNodes: !19827)
!19827 = !{!19828, !19829, !19830, !19831, !19832, !19833}
!19828 = !DILocalVariable(name: "mbist_src", scope: !19826, file: !3477, line: 159, type: !61)
!19829 = !DILocalVariable(name: "mbist_len", scope: !19826, file: !3477, line: 159, type: !61)
!19830 = !DILocalVariable(name: "mbist_data", scope: !19826, file: !3477, line: 159, type: !2211)
!19831 = !DILocalVariable(name: "i", scope: !19826, file: !3477, line: 160, type: !61)
!19832 = !DILocalVariable(name: "bist_data_inv", scope: !19826, file: !3477, line: 160, type: !61)
!19833 = !DILocalVariable(name: "bist_data_random", scope: !19826, file: !3477, line: 160, type: !61)
!19834 = !DILocation(line: 159, column: 36, scope: !19826)
!19835 = !DILocation(line: 0, scope: !19826)
!19836 = !DILocation(line: 165, column: 5, scope: !19826)
!19837 = !DILocation(line: 165, column: 19, scope: !19826)
!19838 = !DILocation(line: 165, column: 30, scope: !19826)
!19839 = !DILocation(line: 166, column: 5, scope: !19840)
!19840 = distinct !DILexicalBlock(scope: !19826, file: !3477, line: 166, column: 5)
!19841 = !DILocation(line: 167, column: 9, scope: !19842)
!19842 = distinct !DILexicalBlock(scope: !19843, file: !3477, line: 167, column: 9)
!19843 = distinct !DILexicalBlock(scope: !19844, file: !3477, line: 166, column: 66)
!19844 = distinct !DILexicalBlock(scope: !19840, file: !3477, line: 166, column: 5)
!19845 = !DILocation(line: 168, column: 13, scope: !19846)
!19846 = distinct !DILexicalBlock(scope: !19847, file: !3477, line: 168, column: 13)
!19847 = distinct !DILexicalBlock(scope: !19848, file: !3477, line: 167, column: 34)
!19848 = distinct !DILexicalBlock(scope: !19842, file: !3477, line: 167, column: 9)
!19849 = !DILocation(line: 168, column: 57, scope: !19850)
!19850 = distinct !DILexicalBlock(scope: !19846, file: !3477, line: 168, column: 13)
!19851 = distinct !{!19851, !19845, !19852}
!19852 = !DILocation(line: 183, column: 13, scope: !19846)
!19853 = !DILocation(line: 170, column: 42, scope: !19854)
!19854 = distinct !DILexicalBlock(scope: !19850, file: !3477, line: 168, column: 83)
!19855 = !DILocation(line: 172, column: 42, scope: !19854)
!19856 = !DILocation(line: 174, column: 45, scope: !19854)
!19857 = !DILocation(line: 174, column: 59, scope: !19854)
!19858 = !DILocation(line: 174, column: 154, scope: !19854)
!19859 = !DILocation(line: 174, column: 87, scope: !19854)
!19860 = !DILocation(line: 174, column: 134, scope: !19854)
!19861 = !DILocation(line: 174, column: 42, scope: !19854)
!19862 = !DILocation(line: 175, column: 42, scope: !19854)
!19863 = !DILocation(line: 177, column: 17, scope: !19854)
!19864 = !DILocation(line: 177, column: 39, scope: !19854)
!19865 = !DILocation(line: 177, column: 50, scope: !19854)
!19866 = !DILocation(line: 177, column: 71, scope: !19854)
!19867 = distinct !{!19867, !19863, !19868}
!19868 = !DILocation(line: 177, column: 78, scope: !19854)
!19869 = !DILocation(line: 179, column: 36, scope: !19870)
!19870 = distinct !DILexicalBlock(scope: !19854, file: !3477, line: 179, column: 21)
!19871 = !DILocation(line: 179, column: 47, scope: !19870)
!19872 = !DILocation(line: 179, column: 69, scope: !19870)
!19873 = !DILocation(line: 168, column: 79, scope: !19850)
!19874 = !DILocation(line: 179, column: 21, scope: !19854)
!19875 = !DILocation(line: 167, column: 30, scope: !19848)
!19876 = !DILocation(line: 167, column: 23, scope: !19848)
!19877 = distinct !{!19877, !19841, !19878}
!19878 = !DILocation(line: 184, column: 9, scope: !19842)
!19879 = !DILocation(line: 166, column: 62, scope: !19844)
!19880 = !DILocation(line: 166, column: 43, scope: !19844)
!19881 = distinct !{!19881, !19839, !19882}
!19882 = !DILocation(line: 185, column: 5, scope: !19840)
!19883 = !DILocation(line: 189, column: 1, scope: !19826)
!19884 = distinct !DISubprogram(name: "__EMI_DataAutoTrackingMbistTest", scope: !3477, file: !3477, line: 190, type: !14563, scopeLine: 191, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3476, retainedNodes: !345)
!19885 = !DILocation(line: 192, column: 9, scope: !19886)
!19886 = distinct !DILexicalBlock(scope: !19884, file: !3477, line: 192, column: 9)
!19887 = !DILocation(line: 192, column: 26, scope: !19886)
!19888 = !DILocation(line: 0, scope: !19884)
!19889 = !DILocation(line: 197, column: 1, scope: !19884)
!19890 = distinct !DISubprogram(name: "__EMI_EnableDataAutoTracking", scope: !3477, file: !3477, line: 201, type: !343, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3476, retainedNodes: !19891)
!19891 = !{!19892, !19893}
!19892 = !DILocalVariable(name: "dqy_in_del", scope: !19890, file: !3477, line: 203, type: !1349)
!19893 = !DILocalVariable(name: "dqs_in_del", scope: !19890, file: !3477, line: 204, type: !1349)
!19894 = !DILocation(line: 0, scope: !19890)
!19895 = !DILocation(line: 206, column: 5, scope: !19890)
!19896 = !DILocation(line: 206, column: 19, scope: !19890)
!19897 = !DILocation(line: 206, column: 28, scope: !19890)
!19898 = !DILocation(line: 207, column: 19, scope: !19890)
!19899 = !DILocation(line: 207, column: 28, scope: !19890)
!19900 = !DILocation(line: 208, column: 19, scope: !19890)
!19901 = !DILocation(line: 208, column: 28, scope: !19890)
!19902 = !DILocation(line: 209, column: 19, scope: !19890)
!19903 = !DILocation(line: 209, column: 28, scope: !19890)
!19904 = !DILocation(line: 212, column: 23, scope: !19905)
!19905 = distinct !DILexicalBlock(scope: !19906, file: !3477, line: 211, column: 78)
!19906 = distinct !DILexicalBlock(scope: !19907, file: !3477, line: 211, column: 5)
!19907 = distinct !DILexicalBlock(scope: !19890, file: !3477, line: 211, column: 5)
!19908 = !DILocation(line: 212, column: 32, scope: !19905)
!19909 = !DILocation(line: 213, column: 23, scope: !19905)
!19910 = !DILocation(line: 213, column: 32, scope: !19905)
!19911 = !DILocation(line: 215, column: 19, scope: !19912)
!19912 = distinct !DILexicalBlock(scope: !19905, file: !3477, line: 215, column: 13)
!19913 = !DILocation(line: 215, column: 15, scope: !19912)
!19914 = !DILocation(line: 215, column: 13, scope: !19905)
!19915 = !DILocation(line: 211, column: 40, scope: !19906)
!19916 = !DILocation(line: 211, column: 5, scope: !19907)
!19917 = distinct !{!19917, !19916, !19918}
!19918 = !DILocation(line: 218, column: 5, scope: !19907)
!19919 = !DILocation(line: 211, column: 57, scope: !19906)
!19920 = !DILocation(line: 212, column: 9, scope: !19905)
!19921 = !DILocation(line: 212, column: 45, scope: !19905)
!19922 = !DILocation(line: 212, column: 83, scope: !19905)
!19923 = !DILocation(line: 212, column: 121, scope: !19905)
!19924 = !DILocation(line: 212, column: 70, scope: !19905)
!19925 = !DILocation(line: 212, column: 108, scope: !19905)
!19926 = !DILocation(line: 212, column: 146, scope: !19905)
!19927 = !DILocation(line: 222, column: 49, scope: !19928)
!19928 = distinct !DILexicalBlock(scope: !19929, file: !3477, line: 221, column: 84)
!19929 = distinct !DILexicalBlock(scope: !19930, file: !3477, line: 221, column: 9)
!19930 = distinct !DILexicalBlock(scope: !19931, file: !3477, line: 221, column: 9)
!19931 = distinct !DILexicalBlock(scope: !19932, file: !3477, line: 220, column: 25)
!19932 = distinct !DILexicalBlock(scope: !19890, file: !3477, line: 220, column: 9)
!19933 = !DILocation(line: 222, column: 13, scope: !19928)
!19934 = !DILocation(line: 222, column: 27, scope: !19928)
!19935 = !DILocation(line: 222, column: 36, scope: !19928)
!19936 = !DILocation(line: 224, column: 23, scope: !19937)
!19937 = distinct !DILexicalBlock(scope: !19928, file: !3477, line: 224, column: 17)
!19938 = !DILocation(line: 224, column: 19, scope: !19937)
!19939 = !DILocation(line: 224, column: 17, scope: !19928)
!19940 = distinct !{!19940, !19941, !19942}
!19941 = !DILocation(line: 221, column: 9, scope: !19930)
!19942 = !DILocation(line: 227, column: 9, scope: !19930)
!19943 = !DILocation(line: 230, column: 1, scope: !19890)
!19944 = distinct !DISubprogram(name: "EMI_PowerOn_Init", scope: !3477, file: !3477, line: 253, type: !343, scopeLine: 254, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3476, retainedNodes: !345)
!19945 = !DILocation(line: 257, column: 26, scope: !19944)
!19946 = !DILocation(line: 259, column: 5, scope: !19944)
!19947 = !DILocation(line: 259, column: 19, scope: !19944)
!19948 = !DILocation(line: 259, column: 29, scope: !19944)
!19949 = !DILocation(line: 260, column: 5, scope: !19944)
!19950 = !DILocation(line: 260, column: 27, scope: !19944)
!19951 = !DILocation(line: 260, column: 93, scope: !19944)
!19952 = distinct !{!19952, !19949, !19953}
!19953 = !DILocation(line: 260, column: 98, scope: !19944)
!19954 = !DILocation(line: 261, column: 29, scope: !19944)
!19955 = !DILocation(line: 262, column: 5, scope: !19944)
!19956 = !DILocation(line: 262, column: 27, scope: !19944)
!19957 = !DILocation(line: 262, column: 93, scope: !19944)
!19958 = distinct !{!19958, !19955, !19959}
!19959 = !DILocation(line: 262, column: 98, scope: !19944)
!19960 = !DILocation(line: 264, column: 42, scope: !19944)
!19961 = !DILocation(line: 265, column: 48, scope: !19944)
!19962 = !DILocation(line: 267, column: 5, scope: !19944)
!19963 = !DILocation(line: 267, column: 27, scope: !19944)
!19964 = !DILocation(line: 267, column: 39, scope: !19944)
!19965 = !DILocation(line: 267, column: 65, scope: !19944)
!19966 = distinct !{!19966, !19962, !19967}
!19967 = !DILocation(line: 267, column: 70, scope: !19944)
!19968 = !DILocation(line: 269, column: 5, scope: !19944)
!19969 = !DILocation(line: 273, column: 8, scope: !19944)
!19970 = !DILocation(line: 275, column: 5, scope: !19944)
!19971 = !DILocation(line: 275, column: 27, scope: !19944)
!19972 = !DILocation(line: 275, column: 39, scope: !19944)
!19973 = !DILocation(line: 275, column: 65, scope: !19944)
!19974 = distinct !{!19974, !19970, !19975}
!19975 = !DILocation(line: 275, column: 70, scope: !19944)
!19976 = !DILocation(line: 278, column: 9, scope: !19977)
!19977 = distinct !DILexicalBlock(scope: !19944, file: !3477, line: 278, column: 9)
!19978 = !DILocation(line: 278, column: 44, scope: !19977)
!19979 = !DILocation(line: 278, column: 9, scope: !19944)
!19980 = !DILocation(line: 279, column: 13, scope: !19981)
!19981 = distinct !DILexicalBlock(scope: !19982, file: !3477, line: 279, column: 12)
!19982 = distinct !DILexicalBlock(scope: !19977, file: !3477, line: 278, column: 55)
!19983 = !DILocation(line: 279, column: 48, scope: !19981)
!19984 = !DILocation(line: 279, column: 56, scope: !19981)
!19985 = !DILocation(line: 0, scope: !19981)
!19986 = !DILocation(line: 288, column: 1, scope: !19944)
!19987 = distinct !DISubprogram(name: "custom_setEMI", scope: !3477, file: !3477, line: 294, type: !19988, scopeLine: 295, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3476, retainedNodes: !345)
!19988 = !DISubroutineType(types: !19989)
!19989 = !{!2480}
!19990 = !DILocation(line: 298, column: 5, scope: !19987)
!19991 = !DILocation(line: 300, column: 5, scope: !19987)
!19992 = !DILocation(line: 302, column: 20, scope: !19987)
!19993 = !DILocation(line: 302, column: 18, scope: !19987)
!19994 = !DILocation(line: 303, column: 20, scope: !19987)
!19995 = !DILocation(line: 303, column: 18, scope: !19987)
!19996 = !DILocation(line: 304, column: 20, scope: !19987)
!19997 = !DILocation(line: 304, column: 18, scope: !19987)
!19998 = !DILocation(line: 307, column: 5, scope: !19987)
!19999 = distinct !DISubprogram(name: "custom_setAdvEMI", scope: !3477, file: !3477, line: 312, type: !19988, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3476, retainedNodes: !345)
!20000 = !DILocation(line: 319, column: 29, scope: !19999)
!20001 = !DILocation(line: 319, column: 5, scope: !19999)
!20002 = !DILocation(line: 319, column: 19, scope: !19999)
!20003 = !DILocation(line: 319, column: 27, scope: !19999)
!20004 = !DILocation(line: 320, column: 29, scope: !19999)
!20005 = !DILocation(line: 320, column: 19, scope: !19999)
!20006 = !DILocation(line: 320, column: 27, scope: !19999)
!20007 = !DILocation(line: 322, column: 30, scope: !19999)
!20008 = !DILocation(line: 322, column: 19, scope: !19999)
!20009 = !DILocation(line: 322, column: 28, scope: !19999)
!20010 = !DILocation(line: 324, column: 30, scope: !19999)
!20011 = !DILocation(line: 324, column: 19, scope: !19999)
!20012 = !DILocation(line: 324, column: 28, scope: !19999)
!20013 = !DILocation(line: 326, column: 31, scope: !19999)
!20014 = !DILocation(line: 326, column: 19, scope: !19999)
!20015 = !DILocation(line: 326, column: 29, scope: !19999)
!20016 = !DILocation(line: 327, column: 31, scope: !19999)
!20017 = !DILocation(line: 327, column: 19, scope: !19999)
!20018 = !DILocation(line: 327, column: 29, scope: !19999)
!20019 = !DILocation(line: 332, column: 30, scope: !19999)
!20020 = !DILocation(line: 332, column: 19, scope: !19999)
!20021 = !DILocation(line: 332, column: 28, scope: !19999)
!20022 = !DILocation(line: 333, column: 30, scope: !19999)
!20023 = !DILocation(line: 333, column: 19, scope: !19999)
!20024 = !DILocation(line: 333, column: 28, scope: !19999)
!20025 = !DILocation(line: 334, column: 30, scope: !19999)
!20026 = !DILocation(line: 334, column: 19, scope: !19999)
!20027 = !DILocation(line: 334, column: 28, scope: !19999)
!20028 = !DILocation(line: 336, column: 30, scope: !19999)
!20029 = !DILocation(line: 336, column: 19, scope: !19999)
!20030 = !DILocation(line: 336, column: 28, scope: !19999)
!20031 = !DILocation(line: 337, column: 30, scope: !19999)
!20032 = !DILocation(line: 337, column: 19, scope: !19999)
!20033 = !DILocation(line: 337, column: 28, scope: !19999)
!20034 = !DILocation(line: 338, column: 30, scope: !19999)
!20035 = !DILocation(line: 338, column: 19, scope: !19999)
!20036 = !DILocation(line: 338, column: 28, scope: !19999)
!20037 = !DILocation(line: 339, column: 30, scope: !19999)
!20038 = !DILocation(line: 339, column: 19, scope: !19999)
!20039 = !DILocation(line: 339, column: 28, scope: !19999)
!20040 = !DILocation(line: 341, column: 5, scope: !19999)
!20041 = !DILocation(line: 345, column: 5, scope: !19999)
!20042 = !DILocation(line: 345, column: 19, scope: !19999)
!20043 = !DILocation(line: 345, column: 28, scope: !19999)
!20044 = !DILocation(line: 346, column: 5, scope: !19999)
!20045 = !DILocation(line: 346, column: 28, scope: !19999)
!20046 = !DILocation(line: 346, column: 82, scope: !19999)
!20047 = distinct !{!20047, !20044, !20048}
!20048 = !DILocation(line: 346, column: 87, scope: !19999)
!20049 = !DILocation(line: 347, column: 28, scope: !19999)
!20050 = !DILocation(line: 348, column: 5, scope: !19999)
!20051 = !DILocation(line: 348, column: 28, scope: !19999)
!20052 = !DILocation(line: 348, column: 82, scope: !19999)
!20053 = distinct !{!20053, !20050, !20054}
!20054 = !DILocation(line: 348, column: 87, scope: !19999)
!20055 = !DILocation(line: 349, column: 28, scope: !19999)
!20056 = !DILocation(line: 351, column: 5, scope: !19999)
!20057 = !DILocation(line: 353, column: 5, scope: !19999)
!20058 = distinct !DISubprogram(name: "EMI_Setting_Save", scope: !3477, file: !3477, line: 358, type: !343, scopeLine: 359, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3476, retainedNodes: !345)
!20059 = !DILocation(line: 361, column: 36, scope: !20058)
!20060 = !DILocation(line: 361, column: 50, scope: !20058)
!20061 = !DILocation(line: 361, column: 34, scope: !20058)
!20062 = !DILocation(line: 362, column: 50, scope: !20058)
!20063 = !DILocation(line: 362, column: 34, scope: !20058)
!20064 = !DILocation(line: 363, column: 50, scope: !20058)
!20065 = !DILocation(line: 363, column: 34, scope: !20058)
!20066 = !DILocation(line: 364, column: 50, scope: !20058)
!20067 = !DILocation(line: 364, column: 34, scope: !20058)
!20068 = !DILocation(line: 365, column: 50, scope: !20058)
!20069 = !DILocation(line: 365, column: 34, scope: !20058)
!20070 = !DILocation(line: 366, column: 50, scope: !20058)
!20071 = !DILocation(line: 366, column: 34, scope: !20058)
!20072 = !DILocation(line: 367, column: 50, scope: !20058)
!20073 = !DILocation(line: 367, column: 34, scope: !20058)
!20074 = !DILocation(line: 368, column: 50, scope: !20058)
!20075 = !DILocation(line: 368, column: 34, scope: !20058)
!20076 = !DILocation(line: 369, column: 50, scope: !20058)
!20077 = !DILocation(line: 369, column: 34, scope: !20058)
!20078 = !DILocation(line: 370, column: 50, scope: !20058)
!20079 = !DILocation(line: 370, column: 34, scope: !20058)
!20080 = !DILocation(line: 371, column: 50, scope: !20058)
!20081 = !DILocation(line: 371, column: 34, scope: !20058)
!20082 = !DILocation(line: 372, column: 50, scope: !20058)
!20083 = !DILocation(line: 372, column: 34, scope: !20058)
!20084 = !DILocation(line: 373, column: 51, scope: !20058)
!20085 = !DILocation(line: 373, column: 35, scope: !20058)
!20086 = !DILocation(line: 374, column: 51, scope: !20058)
!20087 = !DILocation(line: 374, column: 35, scope: !20058)
!20088 = !DILocation(line: 375, column: 50, scope: !20058)
!20089 = !DILocation(line: 375, column: 34, scope: !20058)
!20090 = !DILocation(line: 376, column: 50, scope: !20058)
!20091 = !DILocation(line: 376, column: 34, scope: !20058)
!20092 = !DILocation(line: 377, column: 50, scope: !20058)
!20093 = !DILocation(line: 377, column: 34, scope: !20058)
!20094 = !DILocation(line: 378, column: 50, scope: !20058)
!20095 = !DILocation(line: 378, column: 34, scope: !20058)
!20096 = !DILocation(line: 379, column: 50, scope: !20058)
!20097 = !DILocation(line: 379, column: 34, scope: !20058)
!20098 = !DILocation(line: 380, column: 50, scope: !20058)
!20099 = !DILocation(line: 380, column: 34, scope: !20058)
!20100 = !DILocation(line: 382, column: 1, scope: !20058)
!20101 = distinct !DISubprogram(name: "EMI_Setting_restore", scope: !3477, file: !3477, line: 384, type: !343, scopeLine: 385, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3476, retainedNodes: !345)
!20102 = !DILocation(line: 387, column: 5, scope: !20101)
!20103 = !DILocation(line: 387, column: 27, scope: !20101)
!20104 = !DILocation(line: 387, column: 36, scope: !20101)
!20105 = !DILocation(line: 387, column: 76, scope: !20101)
!20106 = distinct !{!20106, !20102, !20107}
!20107 = !DILocation(line: 387, column: 84, scope: !20101)
!20108 = !DILocation(line: 388, column: 50, scope: !20101)
!20109 = !DILocation(line: 388, column: 19, scope: !20101)
!20110 = !DILocation(line: 388, column: 28, scope: !20101)
!20111 = !DILocation(line: 389, column: 50, scope: !20101)
!20112 = !DILocation(line: 389, column: 19, scope: !20101)
!20113 = !DILocation(line: 389, column: 28, scope: !20101)
!20114 = !DILocation(line: 390, column: 50, scope: !20101)
!20115 = !DILocation(line: 390, column: 19, scope: !20101)
!20116 = !DILocation(line: 390, column: 28, scope: !20101)
!20117 = !DILocation(line: 391, column: 50, scope: !20101)
!20118 = !DILocation(line: 391, column: 19, scope: !20101)
!20119 = !DILocation(line: 391, column: 28, scope: !20101)
!20120 = !DILocation(line: 392, column: 50, scope: !20101)
!20121 = !DILocation(line: 392, column: 19, scope: !20101)
!20122 = !DILocation(line: 392, column: 28, scope: !20101)
!20123 = !DILocation(line: 393, column: 50, scope: !20101)
!20124 = !DILocation(line: 393, column: 19, scope: !20101)
!20125 = !DILocation(line: 393, column: 28, scope: !20101)
!20126 = !DILocation(line: 394, column: 51, scope: !20101)
!20127 = !DILocation(line: 394, column: 19, scope: !20101)
!20128 = !DILocation(line: 394, column: 29, scope: !20101)
!20129 = !DILocation(line: 395, column: 51, scope: !20101)
!20130 = !DILocation(line: 395, column: 19, scope: !20101)
!20131 = !DILocation(line: 395, column: 29, scope: !20101)
!20132 = !DILocation(line: 396, column: 50, scope: !20101)
!20133 = !DILocation(line: 396, column: 19, scope: !20101)
!20134 = !DILocation(line: 396, column: 28, scope: !20101)
!20135 = !DILocation(line: 397, column: 50, scope: !20101)
!20136 = !DILocation(line: 397, column: 19, scope: !20101)
!20137 = !DILocation(line: 397, column: 28, scope: !20101)
!20138 = !DILocation(line: 398, column: 50, scope: !20101)
!20139 = !DILocation(line: 398, column: 19, scope: !20101)
!20140 = !DILocation(line: 398, column: 28, scope: !20101)
!20141 = !DILocation(line: 399, column: 50, scope: !20101)
!20142 = !DILocation(line: 399, column: 19, scope: !20101)
!20143 = !DILocation(line: 399, column: 28, scope: !20101)
!20144 = !DILocation(line: 400, column: 50, scope: !20101)
!20145 = !DILocation(line: 400, column: 19, scope: !20101)
!20146 = !DILocation(line: 400, column: 28, scope: !20101)
!20147 = !DILocation(line: 401, column: 50, scope: !20101)
!20148 = !DILocation(line: 401, column: 19, scope: !20101)
!20149 = !DILocation(line: 401, column: 28, scope: !20101)
!20150 = !DILocation(line: 402, column: 50, scope: !20101)
!20151 = !DILocation(line: 402, column: 19, scope: !20101)
!20152 = !DILocation(line: 402, column: 28, scope: !20101)
!20153 = !DILocation(line: 403, column: 50, scope: !20101)
!20154 = !DILocation(line: 403, column: 19, scope: !20101)
!20155 = !DILocation(line: 403, column: 28, scope: !20101)
!20156 = !DILocation(line: 404, column: 50, scope: !20101)
!20157 = !DILocation(line: 404, column: 19, scope: !20101)
!20158 = !DILocation(line: 404, column: 28, scope: !20101)
!20159 = !DILocation(line: 405, column: 50, scope: !20101)
!20160 = !DILocation(line: 405, column: 19, scope: !20101)
!20161 = !DILocation(line: 405, column: 28, scope: !20101)
!20162 = !DILocation(line: 406, column: 50, scope: !20101)
!20163 = !DILocation(line: 406, column: 19, scope: !20101)
!20164 = !DILocation(line: 406, column: 28, scope: !20101)
!20165 = !DILocation(line: 408, column: 1, scope: !20101)
!20166 = distinct !DISubprogram(name: "mtk_psram_half_sleep_exit", scope: !3477, file: !3477, line: 410, type: !343, scopeLine: 411, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3476, retainedNodes: !345)
!20167 = !DILocation(line: 413, column: 29, scope: !20166)
!20168 = !DILocation(line: 413, column: 43, scope: !20166)
!20169 = !DILocation(line: 413, column: 51, scope: !20166)
!20170 = !DILocation(line: 413, column: 27, scope: !20166)
!20171 = !DILocation(line: 416, column: 19, scope: !20166)
!20172 = !DILocation(line: 416, column: 29, scope: !20166)
!20173 = !DILocation(line: 417, column: 5, scope: !20166)
!20174 = !DILocation(line: 417, column: 27, scope: !20166)
!20175 = !DILocation(line: 417, column: 93, scope: !20166)
!20176 = distinct !{!20176, !20173, !20177}
!20177 = !DILocation(line: 417, column: 98, scope: !20166)
!20178 = !DILocation(line: 418, column: 29, scope: !20166)
!20179 = !DILocation(line: 419, column: 5, scope: !20166)
!20180 = !DILocation(line: 419, column: 27, scope: !20166)
!20181 = !DILocation(line: 419, column: 93, scope: !20166)
!20182 = distinct !{!20182, !20179, !20183}
!20183 = !DILocation(line: 419, column: 98, scope: !20166)
!20184 = !DILocation(line: 421, column: 5, scope: !20166)
!20185 = !DILocation(line: 422, column: 5, scope: !20166)
!20186 = !DILocation(line: 422, column: 19, scope: !20166)
!20187 = !DILocation(line: 422, column: 28, scope: !20166)
!20188 = !DILocation(line: 423, column: 5, scope: !20166)
!20189 = !DILocation(line: 423, column: 28, scope: !20166)
!20190 = !DILocation(line: 423, column: 82, scope: !20166)
!20191 = distinct !{!20191, !20188, !20192}
!20192 = !DILocation(line: 423, column: 87, scope: !20166)
!20193 = !DILocation(line: 424, column: 28, scope: !20166)
!20194 = !DILocation(line: 425, column: 5, scope: !20166)
!20195 = !DILocation(line: 425, column: 28, scope: !20166)
!20196 = !DILocation(line: 425, column: 82, scope: !20166)
!20197 = distinct !{!20197, !20194, !20198}
!20198 = !DILocation(line: 425, column: 87, scope: !20166)
!20199 = !DILocation(line: 426, column: 28, scope: !20166)
!20200 = !DILocation(line: 428, column: 50, scope: !20166)
!20201 = !DILocation(line: 428, column: 19, scope: !20166)
!20202 = !DILocation(line: 428, column: 28, scope: !20166)
!20203 = !DILocation(line: 432, column: 1, scope: !20166)
!20204 = distinct !DISubprogram(name: "mtk_psram_half_sleep_enter", scope: !3477, file: !3477, line: 434, type: !343, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3476, retainedNodes: !345)
!20205 = !DILocation(line: 437, column: 5, scope: !20204)
!20206 = !DILocation(line: 440, column: 5, scope: !20204)
!20207 = !DILocation(line: 440, column: 27, scope: !20204)
!20208 = !DILocation(line: 440, column: 36, scope: !20204)
!20209 = !DILocation(line: 440, column: 76, scope: !20204)
!20210 = distinct !{!20210, !20206, !20211}
!20211 = !DILocation(line: 440, column: 84, scope: !20204)
!20212 = !DILocation(line: 441, column: 45, scope: !20204)
!20213 = !DILocation(line: 441, column: 54, scope: !20204)
!20214 = !DILocation(line: 441, column: 28, scope: !20204)
!20215 = !DILocation(line: 442, column: 19, scope: !20204)
!20216 = !DILocation(line: 442, column: 31, scope: !20204)
!20217 = !DILocation(line: 443, column: 5, scope: !20204)
!20218 = !DILocation(line: 443, column: 27, scope: !20204)
!20219 = !DILocation(line: 443, column: 39, scope: !20204)
!20220 = !DILocation(line: 443, column: 65, scope: !20204)
!20221 = distinct !{!20221, !20217, !20222}
!20222 = !DILocation(line: 443, column: 70, scope: !20204)
!20223 = !DILocation(line: 444, column: 19, scope: !20204)
!20224 = !DILocation(line: 444, column: 28, scope: !20204)
!20225 = !DILocation(line: 445, column: 5, scope: !20204)
!20226 = !DILocation(line: 445, column: 27, scope: !20204)
!20227 = !DILocation(line: 445, column: 91, scope: !20204)
!20228 = distinct !{!20228, !20225, !20229}
!20229 = !DILocation(line: 445, column: 96, scope: !20204)
!20230 = !DILocation(line: 447, column: 43, scope: !20204)
!20231 = !DILocation(line: 447, column: 51, scope: !20204)
!20232 = !DILocation(line: 447, column: 27, scope: !20204)
!20233 = !DILocation(line: 450, column: 1, scope: !20204)
!20234 = distinct !DISubprogram(name: "EMI_DynamicClockSwitch", scope: !3477, file: !3477, line: 452, type: !20235, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3476, retainedNodes: !20238)
!20235 = !DISubroutineType(types: !20236)
!20236 = !{!1349, !20237}
!20237 = !DIDerivedType(tag: DW_TAG_typedef, name: "emi_clock", file: !3480, line: 43, baseType: !3479)
!20238 = !{!20239, !20240}
!20239 = !DILocalVariable(name: "clock", arg: 1, scope: !20234, file: !3477, line: 452, type: !20237)
!20240 = !DILocalVariable(name: "delay", scope: !20234, file: !3477, line: 457, type: !60)
!20241 = !DILocation(line: 0, scope: !20234)
!20242 = !DILocation(line: 457, column: 5, scope: !20234)
!20243 = !DILocation(line: 457, column: 23, scope: !20234)
!20244 = !DILocation(line: 458, column: 9, scope: !20234)
!20245 = !DILocation(line: 465, column: 9, scope: !20246)
!20246 = distinct !DILexicalBlock(scope: !20247, file: !3477, line: 458, column: 39)
!20247 = distinct !DILexicalBlock(scope: !20234, file: !3477, line: 458, column: 9)
!20248 = !DILocation(line: 465, column: 23, scope: !20246)
!20249 = !DILocation(line: 465, column: 32, scope: !20246)
!20250 = !DILocation(line: 466, column: 32, scope: !20246)
!20251 = !DILocation(line: 467, column: 9, scope: !20246)
!20252 = !DILocation(line: 467, column: 32, scope: !20246)
!20253 = !DILocation(line: 467, column: 86, scope: !20246)
!20254 = distinct !{!20254, !20251, !20255}
!20255 = !DILocation(line: 467, column: 91, scope: !20246)
!20256 = !DILocation(line: 468, column: 32, scope: !20246)
!20257 = !DILocation(line: 469, column: 9, scope: !20246)
!20258 = !DILocation(line: 469, column: 32, scope: !20246)
!20259 = !DILocation(line: 469, column: 86, scope: !20246)
!20260 = distinct !{!20260, !20257, !20261}
!20261 = !DILocation(line: 469, column: 91, scope: !20246)
!20262 = !DILocation(line: 470, column: 32, scope: !20246)
!20263 = !DILocation(line: 472, column: 20, scope: !20264)
!20264 = distinct !DILexicalBlock(scope: !20246, file: !3477, line: 472, column: 9)
!20265 = !DILocation(line: 472, column: 25, scope: !20266)
!20266 = distinct !DILexicalBlock(scope: !20264, file: !3477, line: 472, column: 9)
!20267 = !DILocation(line: 472, column: 31, scope: !20266)
!20268 = !DILocation(line: 472, column: 9, scope: !20264)
!20269 = !DILocation(line: 472, column: 44, scope: !20266)
!20270 = distinct !{!20270, !20268, !20271}
!20271 = !DILocation(line: 472, column: 47, scope: !20264)
!20272 = !DILocation(line: 478, column: 9, scope: !20273)
!20273 = distinct !DILexicalBlock(scope: !20274, file: !3477, line: 477, column: 12)
!20274 = distinct !DILexicalBlock(scope: !20247, file: !3477, line: 475, column: 16)
!20275 = !DILocation(line: 483, column: 1, scope: !20234)
!20276 = distinct !DISubprogram(name: "emi_mask_master", scope: !3477, file: !3477, line: 487, type: !343, scopeLine: 488, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3476, retainedNodes: !345)
!20277 = !DILocation(line: 490, column: 30, scope: !20276)
!20278 = !DILocation(line: 490, column: 44, scope: !20276)
!20279 = !DILocation(line: 490, column: 53, scope: !20276)
!20280 = !DILocation(line: 490, column: 28, scope: !20276)
!20281 = !DILocation(line: 492, column: 1, scope: !20276)
!20282 = distinct !DISubprogram(name: "emi_unmask_master", scope: !3477, file: !3477, line: 494, type: !343, scopeLine: 495, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3476, retainedNodes: !345)
!20283 = !DILocation(line: 497, column: 30, scope: !20282)
!20284 = !DILocation(line: 497, column: 44, scope: !20282)
!20285 = !DILocation(line: 497, column: 53, scope: !20282)
!20286 = !DILocation(line: 497, column: 28, scope: !20282)
!20287 = !DILocation(line: 500, column: 1, scope: !20282)
!20288 = distinct !DISubprogram(name: "dvfs_notify_is_valid", scope: !3643, file: !3643, line: 51, type: !20289, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3642, retainedNodes: !20291)
!20289 = !DISubroutineType(types: !20290)
!20290 = !{!3687, !3647, !18, !18}
!20291 = !{!20292, !20293, !20294, !20295, !20296}
!20292 = !DILocalVariable(name: "domain", arg: 1, scope: !20288, file: !3643, line: 51, type: !3647)
!20293 = !DILocalVariable(name: "cur_opp", arg: 2, scope: !20288, file: !3643, line: 51, type: !18)
!20294 = !DILocalVariable(name: "next_opp", arg: 3, scope: !20288, file: !3643, line: 52, type: !18)
!20295 = !DILocalVariable(name: "module", scope: !20288, file: !3643, line: 54, type: !3681)
!20296 = !DILocalVariable(name: "notification", scope: !20288, file: !3643, line: 55, type: !3687)
!20297 = !DILocation(line: 0, scope: !20288)
!20298 = !DILocation(line: 57, column: 21, scope: !20299)
!20299 = distinct !DILexicalBlock(scope: !20288, file: !3643, line: 57, column: 9)
!20300 = !DILocation(line: 57, column: 9, scope: !20299)
!20301 = !DILocation(line: 57, column: 9, scope: !20288)
!20302 = !DILocation(line: 59, column: 38, scope: !20303)
!20303 = distinct !DILexicalBlock(scope: !20304, file: !3643, line: 58, column: 31)
!20304 = distinct !DILexicalBlock(scope: !20305, file: !3643, line: 58, column: 9)
!20305 = distinct !DILexicalBlock(scope: !20306, file: !3643, line: 58, column: 9)
!20306 = distinct !DILexicalBlock(scope: !20299, file: !3643, line: 57, column: 39)
!20307 = !DILocation(line: 59, column: 22, scope: !20303)
!20308 = !DILocation(line: 60, column: 18, scope: !20309)
!20309 = distinct !DILexicalBlock(scope: !20303, file: !3643, line: 60, column: 17)
!20310 = !DILocation(line: 60, column: 17, scope: !20303)
!20311 = !DILocation(line: 63, column: 25, scope: !20312)
!20312 = distinct !DILexicalBlock(scope: !20303, file: !3643, line: 63, column: 17)
!20313 = !DILocation(line: 63, column: 17, scope: !20312)
!20314 = !DILocation(line: 63, column: 47, scope: !20312)
!20315 = !DILocation(line: 63, column: 44, scope: !20312)
!20316 = !DILocation(line: 63, column: 17, scope: !20303)
!20317 = !DILocation(line: 64, column: 45, scope: !20318)
!20318 = distinct !DILexicalBlock(scope: !20319, file: !3643, line: 64, column: 17)
!20319 = distinct !DILexicalBlock(scope: !20312, file: !3643, line: 63, column: 76)
!20320 = !DILocation(line: 0, scope: !20318)
!20321 = !DILocation(line: 65, column: 26, scope: !20322)
!20322 = distinct !DILexicalBlock(scope: !20323, file: !3643, line: 65, column: 25)
!20323 = distinct !DILexicalBlock(scope: !20324, file: !3643, line: 64, column: 96)
!20324 = distinct !DILexicalBlock(scope: !20318, file: !3643, line: 64, column: 17)
!20325 = !DILocation(line: 65, column: 25, scope: !20323)
!20326 = !DILocation(line: 68, column: 43, scope: !20327)
!20327 = distinct !DILexicalBlock(scope: !20323, file: !3643, line: 68, column: 25)
!20328 = !DILocation(line: 68, column: 25, scope: !20327)
!20329 = !DILocation(line: 68, column: 25, scope: !20323)
!20330 = !DILocation(line: 69, column: 66, scope: !20331)
!20331 = distinct !DILexicalBlock(scope: !20332, file: !3643, line: 69, column: 29)
!20332 = distinct !DILexicalBlock(scope: !20327, file: !3643, line: 68, column: 50)
!20333 = !DILocation(line: 69, column: 54, scope: !20331)
!20334 = !DILocation(line: 69, column: 93, scope: !20331)
!20335 = !DILocation(line: 69, column: 85, scope: !20331)
!20336 = !DILocation(line: 69, column: 30, scope: !20331)
!20337 = !DILocation(line: 69, column: 29, scope: !20332)
!20338 = !DILocation(line: 64, column: 90, scope: !20324)
!20339 = distinct !{!20339, !20340, !20341}
!20340 = !DILocation(line: 64, column: 17, scope: !20318)
!20341 = !DILocation(line: 73, column: 17, scope: !20318)
!20342 = distinct !{!20342, !20343, !20344}
!20343 = !DILocation(line: 58, column: 9, scope: !20305)
!20344 = !DILocation(line: 75, column: 9, scope: !20305)
!20345 = !DILocation(line: 78, column: 1, scope: !20288)
!20346 = distinct !DISubprogram(name: "dvfs_notify_prepare", scope: !3643, file: !3643, line: 80, type: !20347, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3642, retainedNodes: !20349)
!20347 = !DISubroutineType(types: !20348)
!20348 = !{null, !3647, !18, !18}
!20349 = !{!20350, !20351, !20352, !20353, !20354}
!20350 = !DILocalVariable(name: "domain", arg: 1, scope: !20346, file: !3643, line: 80, type: !3647)
!20351 = !DILocalVariable(name: "cur_opp", arg: 2, scope: !20346, file: !3643, line: 80, type: !18)
!20352 = !DILocalVariable(name: "next_opp", arg: 3, scope: !20346, file: !3643, line: 80, type: !18)
!20353 = !DILocalVariable(name: "module", scope: !20346, file: !3643, line: 82, type: !3681)
!20354 = !DILocalVariable(name: "notification", scope: !20346, file: !3643, line: 83, type: !3687)
!20355 = !DILocation(line: 0, scope: !20346)
!20356 = !DILocation(line: 85, column: 21, scope: !20357)
!20357 = distinct !DILexicalBlock(scope: !20346, file: !3643, line: 85, column: 9)
!20358 = !DILocation(line: 85, column: 9, scope: !20357)
!20359 = !DILocation(line: 85, column: 9, scope: !20346)
!20360 = !DILocation(line: 87, column: 38, scope: !20361)
!20361 = distinct !DILexicalBlock(scope: !20362, file: !3643, line: 86, column: 31)
!20362 = distinct !DILexicalBlock(scope: !20363, file: !3643, line: 86, column: 9)
!20363 = distinct !DILexicalBlock(scope: !20364, file: !3643, line: 86, column: 9)
!20364 = distinct !DILexicalBlock(scope: !20357, file: !3643, line: 85, column: 39)
!20365 = !DILocation(line: 87, column: 22, scope: !20361)
!20366 = !DILocation(line: 88, column: 18, scope: !20367)
!20367 = distinct !DILexicalBlock(scope: !20361, file: !3643, line: 88, column: 17)
!20368 = !DILocation(line: 88, column: 17, scope: !20361)
!20369 = !DILocation(line: 91, column: 25, scope: !20370)
!20370 = distinct !DILexicalBlock(scope: !20361, file: !3643, line: 91, column: 17)
!20371 = !DILocation(line: 91, column: 17, scope: !20370)
!20372 = !DILocation(line: 91, column: 47, scope: !20370)
!20373 = !DILocation(line: 91, column: 44, scope: !20370)
!20374 = !DILocation(line: 91, column: 17, scope: !20361)
!20375 = !DILocation(line: 92, column: 45, scope: !20376)
!20376 = distinct !DILexicalBlock(scope: !20377, file: !3643, line: 92, column: 17)
!20377 = distinct !DILexicalBlock(scope: !20370, file: !3643, line: 91, column: 76)
!20378 = !DILocation(line: 0, scope: !20376)
!20379 = !DILocation(line: 93, column: 26, scope: !20380)
!20380 = distinct !DILexicalBlock(scope: !20381, file: !3643, line: 93, column: 25)
!20381 = distinct !DILexicalBlock(scope: !20382, file: !3643, line: 92, column: 96)
!20382 = distinct !DILexicalBlock(scope: !20376, file: !3643, line: 92, column: 17)
!20383 = !DILocation(line: 93, column: 25, scope: !20381)
!20384 = !DILocation(line: 96, column: 43, scope: !20385)
!20385 = distinct !DILexicalBlock(scope: !20381, file: !3643, line: 96, column: 25)
!20386 = !DILocation(line: 96, column: 25, scope: !20385)
!20387 = !DILocation(line: 96, column: 25, scope: !20381)
!20388 = !DILocation(line: 97, column: 63, scope: !20389)
!20389 = distinct !DILexicalBlock(scope: !20385, file: !3643, line: 96, column: 52)
!20390 = !DILocation(line: 97, column: 51, scope: !20389)
!20391 = !DILocation(line: 97, column: 90, scope: !20389)
!20392 = !DILocation(line: 97, column: 82, scope: !20389)
!20393 = !DILocation(line: 97, column: 25, scope: !20389)
!20394 = !DILocation(line: 98, column: 21, scope: !20389)
!20395 = !DILocation(line: 92, column: 90, scope: !20382)
!20396 = distinct !{!20396, !20397, !20398}
!20397 = !DILocation(line: 92, column: 17, scope: !20376)
!20398 = !DILocation(line: 99, column: 17, scope: !20376)
!20399 = distinct !{!20399, !20400, !20401}
!20400 = !DILocation(line: 86, column: 9, scope: !20363)
!20401 = !DILocation(line: 101, column: 9, scope: !20363)
!20402 = !DILocation(line: 103, column: 1, scope: !20346)
!20403 = distinct !DISubprogram(name: "dvfs_query_frequency", scope: !3643, file: !3643, line: 105, type: !20404, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3642, retainedNodes: !20406)
!20404 = !DISubroutineType(types: !20405)
!20405 = !{!7, !61, !1575, !61}
!20406 = !{!20407, !20408, !20409, !20410}
!20407 = !DILocalVariable(name: "freq", arg: 1, scope: !20403, file: !3643, line: 105, type: !61)
!20408 = !DILocalVariable(name: "frequency", arg: 2, scope: !20403, file: !3643, line: 105, type: !1575)
!20409 = !DILocalVariable(name: "num", arg: 3, scope: !20403, file: !3643, line: 105, type: !61)
!20410 = !DILocalVariable(name: "opp", scope: !20403, file: !3643, line: 107, type: !18)
!20411 = !DILocation(line: 0, scope: !20403)
!20412 = !DILocation(line: 109, column: 23, scope: !20413)
!20413 = distinct !DILexicalBlock(scope: !20414, file: !3643, line: 109, column: 5)
!20414 = distinct !DILexicalBlock(scope: !20403, file: !3643, line: 109, column: 5)
!20415 = !DILocation(line: 109, column: 5, scope: !20414)
!20416 = !DILocation(line: 110, column: 21, scope: !20417)
!20417 = distinct !DILexicalBlock(scope: !20418, file: !3643, line: 110, column: 13)
!20418 = distinct !DILexicalBlock(scope: !20413, file: !3643, line: 109, column: 37)
!20419 = !DILocation(line: 110, column: 18, scope: !20417)
!20420 = !DILocation(line: 110, column: 13, scope: !20418)
!20421 = !DILocation(line: 112, column: 25, scope: !20422)
!20422 = distinct !DILexicalBlock(scope: !20417, file: !3643, line: 112, column: 20)
!20423 = !DILocation(line: 112, column: 20, scope: !20417)
!20424 = distinct !{!20424, !20415, !20425}
!20425 = !DILocation(line: 115, column: 5, scope: !20414)
!20426 = !DILocation(line: 118, column: 1, scope: !20403)
!20427 = distinct !DISubprogram(name: "_dvfs_query_domain", scope: !3643, file: !3643, line: 120, type: !20428, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3642, retainedNodes: !20430)
!20428 = !DISubroutineType(types: !20429)
!20429 = !{!3647, !165}
!20430 = !{!20431, !20432}
!20431 = !DILocalVariable(name: "name", arg: 1, scope: !20427, file: !3643, line: 120, type: !165)
!20432 = !DILocalVariable(name: "p", scope: !20427, file: !3643, line: 122, type: !3647)
!20433 = !DILocation(line: 0, scope: !20427)
!20434 = !DILocation(line: 0, scope: !20435)
!20435 = distinct !DILexicalBlock(scope: !20427, file: !3643, line: 124, column: 5)
!20436 = !DILocation(line: 125, column: 14, scope: !20437)
!20437 = distinct !DILexicalBlock(scope: !20438, file: !3643, line: 125, column: 13)
!20438 = distinct !DILexicalBlock(scope: !20439, file: !3643, line: 124, column: 47)
!20439 = distinct !DILexicalBlock(scope: !20435, file: !3643, line: 124, column: 5)
!20440 = !DILocation(line: 125, column: 13, scope: !20438)
!20441 = !DILocation(line: 129, column: 24, scope: !20442)
!20442 = distinct !DILexicalBlock(scope: !20438, file: !3643, line: 129, column: 13)
!20443 = !DILocation(line: 129, column: 14, scope: !20442)
!20444 = !DILocation(line: 129, column: 13, scope: !20438)
!20445 = !DILocation(line: 124, column: 41, scope: !20439)
!20446 = distinct !{!20446, !20447, !20448}
!20447 = !DILocation(line: 124, column: 5, scope: !20435)
!20448 = !DILocation(line: 132, column: 5, scope: !20435)
!20449 = !DILocation(line: 134, column: 5, scope: !20427)
!20450 = distinct !DISubprogram(name: "_dvfs_map_opp_module", scope: !3643, file: !3643, line: 137, type: !20451, scopeLine: 138, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3642, retainedNodes: !20453)
!20451 = !DISubroutineType(types: !20452)
!20452 = !{!3681, !3647, !165}
!20453 = !{!20454, !20455, !20456}
!20454 = !DILocalVariable(name: "domain", arg: 1, scope: !20450, file: !3643, line: 137, type: !3647)
!20455 = !DILocalVariable(name: "name", arg: 2, scope: !20450, file: !3643, line: 137, type: !165)
!20456 = !DILocalVariable(name: "module", scope: !20450, file: !3643, line: 139, type: !3681)
!20457 = !DILocation(line: 0, scope: !20450)
!20458 = !DILocation(line: 141, column: 10, scope: !20459)
!20459 = distinct !DILexicalBlock(scope: !20450, file: !3643, line: 141, column: 5)
!20460 = !DILocation(line: 0, scope: !20459)
!20461 = !DILocation(line: 142, column: 34, scope: !20462)
!20462 = distinct !DILexicalBlock(scope: !20463, file: !3643, line: 141, column: 27)
!20463 = distinct !DILexicalBlock(scope: !20459, file: !3643, line: 141, column: 5)
!20464 = !DILocation(line: 142, column: 18, scope: !20462)
!20465 = !DILocation(line: 144, column: 14, scope: !20466)
!20466 = distinct !DILexicalBlock(scope: !20462, file: !3643, line: 144, column: 13)
!20467 = !DILocation(line: 144, column: 13, scope: !20462)
!20468 = !DILocation(line: 147, column: 29, scope: !20469)
!20469 = distinct !DILexicalBlock(scope: !20462, file: !3643, line: 147, column: 13)
!20470 = !DILocation(line: 147, column: 14, scope: !20469)
!20471 = !DILocation(line: 147, column: 13, scope: !20462)
!20472 = distinct !{!20472, !20473, !20474}
!20473 = !DILocation(line: 141, column: 5, scope: !20459)
!20474 = !DILocation(line: 150, column: 5, scope: !20459)
!20475 = !DILocation(line: 152, column: 5, scope: !20450)
!20476 = distinct !DISubprogram(name: "dvfs_register_domain", scope: !3643, file: !3643, line: 155, type: !20477, scopeLine: 156, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3642, retainedNodes: !20479)
!20477 = !DISubroutineType(types: !20478)
!20478 = !{null, !3647}
!20479 = !{!20480, !20481}
!20480 = !DILocalVariable(name: "domain", arg: 1, scope: !20476, file: !3643, line: 155, type: !3647)
!20481 = !DILocalVariable(name: "p", scope: !20476, file: !3643, line: 157, type: !3647)
!20482 = !DILocation(line: 0, scope: !20476)
!20483 = !DILocation(line: 159, column: 5, scope: !20476)
!20484 = !DILocation(line: 161, column: 10, scope: !20485)
!20485 = distinct !DILexicalBlock(scope: !20476, file: !3643, line: 161, column: 9)
!20486 = !DILocation(line: 161, column: 9, scope: !20476)
!20487 = !DILocation(line: 164, column: 9, scope: !20488)
!20488 = distinct !DILexicalBlock(scope: !20489, file: !3643, line: 164, column: 9)
!20489 = distinct !DILexicalBlock(scope: !20485, file: !3643, line: 163, column: 12)
!20490 = !DILocation(line: 162, column: 26, scope: !20491)
!20491 = distinct !DILexicalBlock(scope: !20485, file: !3643, line: 161, column: 28)
!20492 = !DILocation(line: 180, column: 1, scope: !20476)
!20493 = !DILocation(line: 0, scope: !20488)
!20494 = !DILocation(line: 169, column: 28, scope: !20495)
!20495 = distinct !DILexicalBlock(scope: !20496, file: !3643, line: 169, column: 17)
!20496 = distinct !DILexicalBlock(scope: !20497, file: !3643, line: 164, column: 51)
!20497 = distinct !DILexicalBlock(scope: !20488, file: !3643, line: 164, column: 9)
!20498 = !DILocation(line: 169, column: 42, scope: !20495)
!20499 = !DILocation(line: 169, column: 18, scope: !20495)
!20500 = !DILocation(line: 169, column: 17, scope: !20496)
!20501 = !DILocation(line: 170, column: 17, scope: !20502)
!20502 = distinct !DILexicalBlock(scope: !20495, file: !3643, line: 169, column: 49)
!20503 = !DILocation(line: 171, column: 17, scope: !20502)
!20504 = !DILocation(line: 174, column: 21, scope: !20505)
!20505 = distinct !DILexicalBlock(scope: !20496, file: !3643, line: 174, column: 17)
!20506 = !DILocation(line: 174, column: 18, scope: !20505)
!20507 = !DILocation(line: 174, column: 17, scope: !20496)
!20508 = distinct !{!20508, !20487, !20509}
!20509 = !DILocation(line: 178, column: 9, scope: !20488)
!20510 = !DILocation(line: 175, column: 25, scope: !20511)
!20511 = distinct !DILexicalBlock(scope: !20505, file: !3643, line: 174, column: 27)
!20512 = !DILocation(line: 176, column: 17, scope: !20511)
!20513 = distinct !DISubprogram(name: "dvfs_register_notification", scope: !3643, file: !3643, line: 182, type: !20514, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3642, retainedNodes: !20516)
!20514 = !DISubroutineType(types: !20515)
!20515 = !{null, !3687}
!20516 = !{!20517, !20518, !20519, !20520}
!20517 = !DILocalVariable(name: "node", arg: 1, scope: !20513, file: !3643, line: 182, type: !3687)
!20518 = !DILocalVariable(name: "irq_flag", scope: !20513, file: !3643, line: 184, type: !61)
!20519 = !DILocalVariable(name: "head", scope: !20513, file: !3643, line: 185, type: !3687)
!20520 = !DILabel(scope: !20513, name: "_exit", file: !3643, line: 221)
!20521 = !DILocation(line: 0, scope: !20513)
!20522 = !DILocation(line: 187, column: 5, scope: !20513)
!20523 = !DILocation(line: 188, column: 5, scope: !20513)
!20524 = !DILocation(line: 189, column: 5, scope: !20513)
!20525 = !DILocation(line: 190, column: 5, scope: !20513)
!20526 = !DILocation(line: 191, column: 5, scope: !20513)
!20527 = !DILocation(line: 192, column: 5, scope: !20513)
!20528 = !DILocation(line: 194, column: 16, scope: !20513)
!20529 = !DILocation(line: 196, column: 41, scope: !20513)
!20530 = !DILocation(line: 196, column: 16, scope: !20513)
!20531 = !DILocation(line: 196, column: 11, scope: !20513)
!20532 = !DILocation(line: 196, column: 14, scope: !20513)
!20533 = !DILocation(line: 197, column: 10, scope: !20534)
!20534 = distinct !DILexicalBlock(scope: !20513, file: !3643, line: 197, column: 9)
!20535 = !DILocation(line: 197, column: 9, scope: !20513)
!20536 = !DILocation(line: 201, column: 54, scope: !20513)
!20537 = !DILocation(line: 201, column: 17, scope: !20513)
!20538 = !DILocation(line: 201, column: 11, scope: !20513)
!20539 = !DILocation(line: 201, column: 15, scope: !20513)
!20540 = !DILocation(line: 202, column: 5, scope: !20513)
!20541 = !DILocation(line: 204, column: 16, scope: !20513)
!20542 = !DILocation(line: 205, column: 16, scope: !20513)
!20543 = !DILocation(line: 207, column: 28, scope: !20544)
!20544 = distinct !DILexicalBlock(scope: !20513, file: !3643, line: 207, column: 5)
!20545 = !DILocation(line: 207, column: 10, scope: !20544)
!20546 = !DILocation(line: 0, scope: !20544)
!20547 = !DILocation(line: 208, column: 14, scope: !20548)
!20548 = distinct !DILexicalBlock(scope: !20549, file: !3643, line: 208, column: 13)
!20549 = distinct !DILexicalBlock(scope: !20550, file: !3643, line: 207, column: 63)
!20550 = distinct !DILexicalBlock(scope: !20544, file: !3643, line: 207, column: 5)
!20551 = !DILocation(line: 208, column: 13, scope: !20549)
!20552 = !DILocation(line: 209, column: 37, scope: !20553)
!20553 = distinct !DILexicalBlock(scope: !20548, file: !3643, line: 208, column: 20)
!20554 = !DILocation(line: 210, column: 13, scope: !20553)
!20555 = !DILocation(line: 212, column: 20, scope: !20556)
!20556 = distinct !DILexicalBlock(scope: !20549, file: !3643, line: 212, column: 13)
!20557 = !DILocation(line: 212, column: 14, scope: !20556)
!20558 = !DILocation(line: 212, column: 13, scope: !20549)
!20559 = distinct !{!20559, !20560, !20561}
!20560 = !DILocation(line: 207, column: 5, scope: !20544)
!20561 = !DILocation(line: 217, column: 5, scope: !20544)
!20562 = !DILocation(line: 213, column: 24, scope: !20563)
!20563 = distinct !DILexicalBlock(scope: !20556, file: !3643, line: 212, column: 26)
!20564 = !DILocation(line: 214, column: 24, scope: !20563)
!20565 = !DILocation(line: 215, column: 13, scope: !20563)
!20566 = !DILocation(line: 219, column: 11, scope: !20513)
!20567 = !DILocation(line: 219, column: 19, scope: !20513)
!20568 = !DILocation(line: 219, column: 35, scope: !20513)
!20569 = !DILocation(line: 219, column: 5, scope: !20513)
!20570 = !DILocation(line: 221, column: 1, scope: !20513)
!20571 = !DILocation(line: 222, column: 5, scope: !20513)
!20572 = !DILocation(line: 223, column: 1, scope: !20513)
!20573 = distinct !DISubprogram(name: "dvfs_deregister_notification", scope: !3643, file: !3643, line: 225, type: !20514, scopeLine: 226, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3642, retainedNodes: !20574)
!20574 = !{!20575, !20576}
!20575 = !DILocalVariable(name: "node", arg: 1, scope: !20573, file: !3643, line: 225, type: !3687)
!20576 = !DILocalVariable(name: "irq_flag", scope: !20573, file: !3643, line: 227, type: !61)
!20577 = !DILocation(line: 0, scope: !20573)
!20578 = !DILocation(line: 229, column: 5, scope: !20573)
!20579 = !DILocation(line: 231, column: 16, scope: !20580)
!20580 = distinct !DILexicalBlock(scope: !20573, file: !3643, line: 231, column: 9)
!20581 = !DILocation(line: 231, column: 10, scope: !20580)
!20582 = !DILocation(line: 231, column: 9, scope: !20573)
!20583 = !DILocation(line: 235, column: 16, scope: !20573)
!20584 = !DILocation(line: 237, column: 15, scope: !20585)
!20585 = distinct !DILexicalBlock(scope: !20573, file: !3643, line: 237, column: 9)
!20586 = !DILocation(line: 237, column: 9, scope: !20585)
!20587 = !DILocation(line: 237, column: 9, scope: !20573)
!20588 = !DILocation(line: 238, column: 34, scope: !20589)
!20589 = distinct !DILexicalBlock(scope: !20585, file: !3643, line: 237, column: 21)
!20590 = !DILocation(line: 238, column: 21, scope: !20589)
!20591 = !DILocation(line: 238, column: 26, scope: !20589)
!20592 = !DILocation(line: 239, column: 5, scope: !20589)
!20593 = !DILocation(line: 241, column: 15, scope: !20594)
!20594 = distinct !DILexicalBlock(scope: !20573, file: !3643, line: 241, column: 9)
!20595 = !DILocation(line: 241, column: 9, scope: !20594)
!20596 = !DILocation(line: 241, column: 9, scope: !20573)
!20597 = !DILocation(line: 242, column: 34, scope: !20598)
!20598 = distinct !DILexicalBlock(scope: !20594, file: !3643, line: 241, column: 21)
!20599 = !DILocation(line: 242, column: 21, scope: !20598)
!20600 = !DILocation(line: 242, column: 26, scope: !20598)
!20601 = !DILocation(line: 243, column: 5, scope: !20598)
!20602 = !DILocation(line: 245, column: 15, scope: !20603)
!20603 = distinct !DILexicalBlock(scope: !20573, file: !3643, line: 245, column: 9)
!20604 = !DILocation(line: 245, column: 20, scope: !20603)
!20605 = !DILocation(line: 245, column: 33, scope: !20603)
!20606 = !DILocation(line: 245, column: 9, scope: !20573)
!20607 = !DILocation(line: 246, column: 41, scope: !20608)
!20608 = distinct !DILexicalBlock(scope: !20603, file: !3643, line: 245, column: 42)
!20609 = !DILocation(line: 246, column: 33, scope: !20608)
!20610 = !DILocation(line: 247, column: 5, scope: !20608)
!20611 = !DILocation(line: 249, column: 11, scope: !20573)
!20612 = !DILocation(line: 249, column: 19, scope: !20573)
!20613 = !DILocation(line: 249, column: 35, scope: !20573)
!20614 = !DILocation(line: 251, column: 16, scope: !20573)
!20615 = !DILocation(line: 252, column: 16, scope: !20573)
!20616 = !DILocation(line: 254, column: 5, scope: !20573)
!20617 = !DILocation(line: 255, column: 1, scope: !20573)
!20618 = distinct !DISubprogram(name: "dvfs_lock", scope: !3643, file: !3643, line: 257, type: !20619, scopeLine: 258, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3642, retainedNodes: !20621)
!20619 = !DISubroutineType(types: !20620)
!20620 = !{null, !3709}
!20621 = !{!20622, !20623, !20624}
!20622 = !DILocalVariable(name: "lock", arg: 1, scope: !20618, file: !3643, line: 257, type: !3709)
!20623 = !DILocalVariable(name: "irq_flag", scope: !20618, file: !3643, line: 259, type: !61)
!20624 = !DILabel(scope: !20618, name: "_exit", file: !3643, line: 291)
!20625 = !DILocation(line: 0, scope: !20618)
!20626 = !DILocation(line: 261, column: 5, scope: !20618)
!20627 = !DILocation(line: 262, column: 5, scope: !20618)
!20628 = !DILocation(line: 263, column: 5, scope: !20618)
!20629 = !DILocation(line: 265, column: 16, scope: !20618)
!20630 = !DILocation(line: 267, column: 16, scope: !20631)
!20631 = distinct !DILexicalBlock(scope: !20618, file: !3643, line: 267, column: 9)
!20632 = !DILocation(line: 267, column: 10, scope: !20631)
!20633 = !DILocation(line: 267, column: 9, scope: !20618)
!20634 = !DILocation(line: 268, column: 45, scope: !20635)
!20635 = distinct !DILexicalBlock(scope: !20631, file: !3643, line: 267, column: 20)
!20636 = !DILocation(line: 268, column: 20, scope: !20635)
!20637 = !DILocation(line: 268, column: 18, scope: !20635)
!20638 = !DILocation(line: 269, column: 14, scope: !20639)
!20639 = distinct !DILexicalBlock(scope: !20635, file: !3643, line: 269, column: 13)
!20640 = !DILocation(line: 269, column: 13, scope: !20635)
!20641 = !DILocation(line: 274, column: 15, scope: !20642)
!20642 = distinct !DILexicalBlock(scope: !20618, file: !3643, line: 274, column: 9)
!20643 = !DILocation(line: 274, column: 9, scope: !20642)
!20644 = !DILocation(line: 274, column: 9, scope: !20618)
!20645 = !DILocation(line: 275, column: 20, scope: !20646)
!20646 = distinct !DILexicalBlock(scope: !20642, file: !3643, line: 274, column: 22)
!20647 = !DILocation(line: 276, column: 5, scope: !20646)
!20648 = !DILocation(line: 277, column: 9, scope: !20649)
!20649 = distinct !DILexicalBlock(scope: !20642, file: !3643, line: 276, column: 12)
!20650 = !DILocation(line: 278, column: 9, scope: !20649)
!20651 = !DILocation(line: 279, column: 21, scope: !20649)
!20652 = !DILocation(line: 280, column: 24, scope: !20653)
!20653 = distinct !DILexicalBlock(scope: !20649, file: !3643, line: 280, column: 13)
!20654 = !DILocation(line: 280, column: 14, scope: !20653)
!20655 = !DILocation(line: 0, scope: !20653)
!20656 = !DILocation(line: 280, column: 13, scope: !20649)
!20657 = !DILocation(line: 281, column: 13, scope: !20658)
!20658 = distinct !DILexicalBlock(scope: !20653, file: !3643, line: 280, column: 35)
!20659 = !DILocation(line: 282, column: 33, scope: !20658)
!20660 = !DILocation(line: 283, column: 19, scope: !20658)
!20661 = !DILocation(line: 283, column: 23, scope: !20658)
!20662 = !DILocation(line: 283, column: 32, scope: !20658)
!20663 = !DILocation(line: 284, column: 9, scope: !20658)
!20664 = !DILocation(line: 285, column: 33, scope: !20665)
!20665 = distinct !DILexicalBlock(scope: !20653, file: !3643, line: 284, column: 16)
!20666 = !DILocation(line: 285, column: 38, scope: !20665)
!20667 = !DILocation(line: 286, column: 32, scope: !20665)
!20668 = !DILocation(line: 286, column: 36, scope: !20665)
!20669 = !DILocation(line: 286, column: 24, scope: !20665)
!20670 = !DILocation(line: 287, column: 32, scope: !20665)
!20671 = !DILocation(line: 291, column: 1, scope: !20618)
!20672 = !DILocation(line: 292, column: 5, scope: !20618)
!20673 = !DILocation(line: 293, column: 1, scope: !20618)
!20674 = distinct !DISubprogram(name: "dvfs_unlock", scope: !3643, file: !3643, line: 295, type: !20619, scopeLine: 296, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3642, retainedNodes: !20675)
!20675 = !{!20676, !20677}
!20676 = !DILocalVariable(name: "lock", arg: 1, scope: !20674, file: !3643, line: 295, type: !3709)
!20677 = !DILocalVariable(name: "irq_flag", scope: !20674, file: !3643, line: 297, type: !61)
!20678 = !DILocation(line: 0, scope: !20674)
!20679 = !DILocation(line: 299, column: 5, scope: !20674)
!20680 = !DILocation(line: 301, column: 16, scope: !20681)
!20681 = distinct !DILexicalBlock(scope: !20674, file: !3643, line: 301, column: 9)
!20682 = !DILocation(line: 301, column: 10, scope: !20681)
!20683 = !DILocation(line: 301, column: 9, scope: !20674)
!20684 = !DILocation(line: 305, column: 16, scope: !20674)
!20685 = !DILocation(line: 307, column: 11, scope: !20674)
!20686 = !DILocation(line: 307, column: 16, scope: !20674)
!20687 = !DILocation(line: 309, column: 10, scope: !20688)
!20688 = distinct !DILexicalBlock(scope: !20674, file: !3643, line: 309, column: 9)
!20689 = !DILocation(line: 309, column: 9, scope: !20674)
!20690 = !DILocation(line: 310, column: 19, scope: !20691)
!20691 = distinct !DILexicalBlock(scope: !20692, file: !3643, line: 310, column: 13)
!20692 = distinct !DILexicalBlock(scope: !20688, file: !3643, line: 309, column: 23)
!20693 = !DILocation(line: 310, column: 13, scope: !20691)
!20694 = !DILocation(line: 310, column: 13, scope: !20692)
!20695 = !DILocation(line: 311, column: 38, scope: !20696)
!20696 = distinct !DILexicalBlock(scope: !20691, file: !3643, line: 310, column: 25)
!20697 = !DILocation(line: 311, column: 25, scope: !20696)
!20698 = !DILocation(line: 311, column: 30, scope: !20696)
!20699 = !DILocation(line: 312, column: 9, scope: !20696)
!20700 = !DILocation(line: 314, column: 19, scope: !20701)
!20701 = distinct !DILexicalBlock(scope: !20692, file: !3643, line: 314, column: 13)
!20702 = !DILocation(line: 314, column: 13, scope: !20701)
!20703 = !DILocation(line: 314, column: 13, scope: !20692)
!20704 = !DILocation(line: 315, column: 38, scope: !20705)
!20705 = distinct !DILexicalBlock(scope: !20701, file: !3643, line: 314, column: 25)
!20706 = !DILocation(line: 315, column: 25, scope: !20705)
!20707 = !DILocation(line: 315, column: 30, scope: !20705)
!20708 = !DILocation(line: 316, column: 9, scope: !20705)
!20709 = !DILocation(line: 318, column: 19, scope: !20710)
!20710 = distinct !DILexicalBlock(scope: !20692, file: !3643, line: 318, column: 13)
!20711 = !DILocation(line: 318, column: 23, scope: !20710)
!20712 = !DILocation(line: 318, column: 32, scope: !20710)
!20713 = !DILocation(line: 318, column: 13, scope: !20692)
!20714 = !DILocation(line: 319, column: 40, scope: !20715)
!20715 = distinct !DILexicalBlock(scope: !20710, file: !3643, line: 318, column: 41)
!20716 = !DILocation(line: 319, column: 32, scope: !20715)
!20717 = !DILocation(line: 322, column: 19, scope: !20718)
!20718 = distinct !DILexicalBlock(scope: !20692, file: !3643, line: 322, column: 13)
!20719 = !DILocation(line: 320, column: 9, scope: !20715)
!20720 = !DILocation(line: 322, column: 23, scope: !20718)
!20721 = !DILocation(line: 322, column: 33, scope: !20718)
!20722 = !DILocation(line: 322, column: 13, scope: !20692)
!20723 = !DILocation(line: 323, column: 41, scope: !20724)
!20724 = distinct !DILexicalBlock(scope: !20718, file: !3643, line: 322, column: 42)
!20725 = !DILocation(line: 323, column: 33, scope: !20724)
!20726 = !DILocation(line: 324, column: 9, scope: !20724)
!20727 = !DILocation(line: 326, column: 20, scope: !20692)
!20728 = !DILocation(line: 327, column: 20, scope: !20692)
!20729 = !DILocation(line: 328, column: 5, scope: !20692)
!20730 = !DILocation(line: 330, column: 5, scope: !20674)
!20731 = !DILocation(line: 331, column: 1, scope: !20674)
!20732 = distinct !DISubprogram(name: "dvfs_debug_dump", scope: !3643, file: !3643, line: 333, type: !343, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3642, retainedNodes: !20733)
!20733 = !{!20734, !20735, !20736, !20737, !20738}
!20734 = !DILocalVariable(name: "domain", scope: !20732, file: !3643, line: 335, type: !3647)
!20735 = !DILocalVariable(name: "module", scope: !20732, file: !3643, line: 336, type: !3681)
!20736 = !DILocalVariable(name: "notification", scope: !20732, file: !3643, line: 337, type: !3687)
!20737 = !DILocalVariable(name: "lock", scope: !20732, file: !3643, line: 338, type: !3709)
!20738 = !DILocalVariable(name: "opp", scope: !20732, file: !3643, line: 339, type: !18)
!20739 = !DILocation(line: 0, scope: !20732)
!20740 = !DILocation(line: 0, scope: !20741)
!20741 = distinct !DILexicalBlock(scope: !20732, file: !3643, line: 341, column: 5)
!20742 = !DILocation(line: 342, column: 14, scope: !20743)
!20743 = distinct !DILexicalBlock(scope: !20744, file: !3643, line: 342, column: 13)
!20744 = distinct !DILexicalBlock(scope: !20745, file: !3643, line: 341, column: 62)
!20745 = distinct !DILexicalBlock(scope: !20741, file: !3643, line: 341, column: 5)
!20746 = !DILocation(line: 342, column: 13, scope: !20744)
!20747 = !DILocation(line: 346, column: 9, scope: !20744)
!20748 = !DILocation(line: 347, column: 9, scope: !20744)
!20749 = !DILocation(line: 350, column: 41, scope: !20750)
!20750 = distinct !DILexicalBlock(scope: !20751, file: !3643, line: 350, column: 9)
!20751 = distinct !DILexicalBlock(scope: !20744, file: !3643, line: 350, column: 9)
!20752 = !DILocation(line: 350, column: 27, scope: !20750)
!20753 = !DILocation(line: 350, column: 9, scope: !20751)
!20754 = !DILocation(line: 0, scope: !20755)
!20755 = distinct !DILexicalBlock(scope: !20744, file: !3643, line: 355, column: 9)
!20756 = !DILocation(line: 356, column: 18, scope: !20757)
!20757 = distinct !DILexicalBlock(scope: !20758, file: !3643, line: 356, column: 17)
!20758 = distinct !DILexicalBlock(scope: !20759, file: !3643, line: 355, column: 61)
!20759 = distinct !DILexicalBlock(scope: !20755, file: !3643, line: 355, column: 9)
!20760 = !DILocation(line: 356, column: 17, scope: !20758)
!20761 = !DILocation(line: 351, column: 13, scope: !20762)
!20762 = distinct !DILexicalBlock(scope: !20750, file: !3643, line: 350, column: 57)
!20763 = !DILocation(line: 350, column: 53, scope: !20750)
!20764 = distinct !{!20764, !20753, !20765}
!20765 = !DILocation(line: 353, column: 9, scope: !20751)
!20766 = !DILocation(line: 363, column: 38, scope: !20767)
!20767 = distinct !DILexicalBlock(scope: !20768, file: !3643, line: 362, column: 31)
!20768 = distinct !DILexicalBlock(scope: !20769, file: !3643, line: 362, column: 9)
!20769 = distinct !DILexicalBlock(scope: !20744, file: !3643, line: 362, column: 9)
!20770 = !DILocation(line: 363, column: 22, scope: !20767)
!20771 = !DILocation(line: 365, column: 18, scope: !20772)
!20772 = distinct !DILexicalBlock(scope: !20767, file: !3643, line: 365, column: 17)
!20773 = !DILocation(line: 365, column: 17, scope: !20767)
!20774 = !DILocation(line: 359, column: 13, scope: !20758)
!20775 = !DILocation(line: 355, column: 55, scope: !20759)
!20776 = distinct !{!20776, !20777, !20778}
!20777 = !DILocation(line: 355, column: 9, scope: !20755)
!20778 = !DILocation(line: 360, column: 9, scope: !20755)
!20779 = distinct !{!20779, !20780, !20781}
!20780 = !DILocation(line: 362, column: 9, scope: !20769)
!20781 = !DILocation(line: 382, column: 9, scope: !20769)
!20782 = !DILocation(line: 369, column: 13, scope: !20767)
!20783 = !DILocation(line: 371, column: 45, scope: !20784)
!20784 = distinct !DILexicalBlock(scope: !20785, file: !3643, line: 371, column: 13)
!20785 = distinct !DILexicalBlock(scope: !20767, file: !3643, line: 371, column: 13)
!20786 = !DILocation(line: 371, column: 31, scope: !20784)
!20787 = !DILocation(line: 371, column: 13, scope: !20785)
!20788 = !DILocation(line: 372, column: 17, scope: !20789)
!20789 = distinct !DILexicalBlock(scope: !20784, file: !3643, line: 371, column: 61)
!20790 = !DILocation(line: 371, column: 57, scope: !20784)
!20791 = distinct !{!20791, !20787, !20792}
!20792 = !DILocation(line: 373, column: 13, scope: !20785)
!20793 = !DILocation(line: 375, column: 41, scope: !20794)
!20794 = distinct !DILexicalBlock(scope: !20767, file: !3643, line: 375, column: 13)
!20795 = !DILocation(line: 0, scope: !20794)
!20796 = !DILocation(line: 376, column: 22, scope: !20797)
!20797 = distinct !DILexicalBlock(scope: !20798, file: !3643, line: 376, column: 21)
!20798 = distinct !DILexicalBlock(scope: !20799, file: !3643, line: 375, column: 92)
!20799 = distinct !DILexicalBlock(scope: !20794, file: !3643, line: 375, column: 13)
!20800 = !DILocation(line: 376, column: 21, scope: !20798)
!20801 = !DILocation(line: 380, column: 17, scope: !20798)
!20802 = !DILocation(line: 375, column: 86, scope: !20799)
!20803 = distinct !{!20803, !20804, !20805}
!20804 = !DILocation(line: 375, column: 13, scope: !20794)
!20805 = !DILocation(line: 381, column: 13, scope: !20794)
!20806 = !DILocation(line: 341, column: 56, scope: !20745)
!20807 = distinct !{!20807, !20808, !20809}
!20808 = !DILocation(line: 341, column: 5, scope: !20741)
!20809 = !DILocation(line: 384, column: 5, scope: !20741)
!20810 = !DILocation(line: 385, column: 1, scope: !20732)
!20811 = distinct !DISubprogram(name: "is_clk_use_lfosc", scope: !3725, file: !3725, line: 56, type: !15044, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3724, retainedNodes: !345)
!20812 = !DILocation(line: 61, column: 5, scope: !20811)
!20813 = distinct !DISubprogram(name: "is_clk_use_mpll", scope: !3725, file: !3725, line: 65, type: !15044, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3724, retainedNodes: !345)
!20814 = !DILocation(line: 70, column: 5, scope: !20813)
!20815 = distinct !DISubprogram(name: "cm_bus_clk_208m", scope: !3725, file: !3725, line: 74, type: !343, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3724, retainedNodes: !345)
!20816 = !DILocation(line: 79, column: 9, scope: !20817)
!20817 = distinct !DILexicalBlock(scope: !20818, file: !3725, line: 78, column: 12)
!20818 = distinct !DILexicalBlock(scope: !20815, file: !3725, line: 76, column: 9)
!20819 = !DILocation(line: 81, column: 1, scope: !20815)
!20820 = distinct !DISubprogram(name: "cm_bus_clk_104m", scope: !3725, file: !3725, line: 83, type: !343, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3724, retainedNodes: !345)
!20821 = !DILocation(line: 88, column: 9, scope: !20822)
!20822 = distinct !DILexicalBlock(scope: !20823, file: !3725, line: 87, column: 12)
!20823 = distinct !DILexicalBlock(scope: !20820, file: !3725, line: 85, column: 9)
!20824 = !DILocation(line: 90, column: 1, scope: !20820)
!20825 = distinct !DISubprogram(name: "cm_bus_clk_26m", scope: !3725, file: !3725, line: 92, type: !343, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3724, retainedNodes: !345)
!20826 = !DILocation(line: 97, column: 9, scope: !20827)
!20827 = distinct !DILexicalBlock(scope: !20828, file: !3725, line: 96, column: 12)
!20828 = distinct !DILexicalBlock(scope: !20825, file: !3725, line: 94, column: 9)
!20829 = !DILocation(line: 99, column: 1, scope: !20825)
!20830 = distinct !DISubprogram(name: "peri_clk_26m", scope: !3725, file: !3725, line: 101, type: !343, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3724, retainedNodes: !345)
!20831 = !DILocation(line: 106, column: 9, scope: !20832)
!20832 = distinct !DILexicalBlock(scope: !20833, file: !3725, line: 105, column: 12)
!20833 = distinct !DILexicalBlock(scope: !20830, file: !3725, line: 103, column: 9)
!20834 = !DILocation(line: 108, column: 1, scope: !20830)
!20835 = distinct !DISubprogram(name: "__io_putchar", scope: !3737, file: !3737, line: 59, type: !20836, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3736, retainedNodes: !20838)
!20836 = !DISubroutineType(types: !20837)
!20837 = !{!7, !7}
!20838 = !{!20839}
!20839 = !DILocalVariable(name: "ch", arg: 1, scope: !20835, file: !3737, line: 59, type: !7)
!20840 = !DILocation(line: 0, scope: !20835)
!20841 = !DILocation(line: 66, column: 35, scope: !20835)
!20842 = !DILocation(line: 66, column: 5, scope: !20835)
!20843 = !DILocation(line: 67, column: 5, scope: !20835)
!20844 = distinct !DISubprogram(name: "main", scope: !3737, file: !3737, line: 217, type: !19816, scopeLine: 218, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3736, retainedNodes: !345)
!20845 = !DILocation(line: 220, column: 5, scope: !20844)
!20846 = !DILocation(line: 222, column: 5, scope: !20844)
!20847 = !DILocation(line: 225, column: 5, scope: !20844)
!20848 = !DILocation(line: 319, column: 3, scope: !20849, inlinedAt: !20850)
!20849 = distinct !DISubprogram(name: "__enable_irq", scope: !9536, file: !9536, line: 317, type: !343, scopeLine: 318, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3736, retainedNodes: !345)
!20850 = distinct !DILocation(line: 228, column: 5, scope: !20844)
!20851 = !{i64 661344}
!20852 = !DILocation(line: 496, column: 3, scope: !20853, inlinedAt: !20854)
!20853 = distinct !DISubprogram(name: "__enable_fault_irq", scope: !9536, file: !9536, line: 494, type: !343, scopeLine: 495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3736, retainedNodes: !345)
!20854 = distinct !DILocation(line: 229, column: 5, scope: !20844)
!20855 = !{i64 665619}
!20856 = !DILocation(line: 232, column: 5, scope: !20844)
!20857 = !DILocation(line: 233, column: 5, scope: !20844)
!20858 = !DILocation(line: 234, column: 5, scope: !20844)
!20859 = !DILocation(line: 236, column: 5, scope: !20844)
!20860 = !DILocation(line: 238, column: 5, scope: !20844)
!20861 = distinct !{!20861, !20860, !20862}
!20862 = !DILocation(line: 238, column: 14, scope: !20844)
!20863 = distinct !DISubprogram(name: "SystemClock_Config", scope: !3737, file: !3737, line: 98, type: !343, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3736, retainedNodes: !345)
!20864 = !DILocation(line: 100, column: 5, scope: !20863)
!20865 = !DILocation(line: 101, column: 1, scope: !20863)
!20866 = distinct !DISubprogram(name: "prvSetupHardware", scope: !3737, file: !3737, line: 108, type: !343, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3736, retainedNodes: !345)
!20867 = !DILocation(line: 111, column: 5, scope: !20866)
!20868 = !DILocation(line: 112, column: 5, scope: !20866)
!20869 = !DILocation(line: 113, column: 5, scope: !20866)
!20870 = !DILocation(line: 115, column: 1, scope: !20866)
!20871 = distinct !DISubprogram(name: "sd_read_write_data_dma_example", scope: !3737, file: !3737, line: 122, type: !343, scopeLine: 123, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3736, retainedNodes: !20872)
!20872 = !{!20873, !20879, !20880, !20881, !20882}
!20873 = !DILocalVariable(name: "sd_cfg", scope: !20871, file: !3737, line: 124, type: !20874)
!20874 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_sd_config_t", file: !1375, line: 859, baseType: !20875)
!20875 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1375, line: 856, size: 64, elements: !20876)
!20876 = !{!20877, !20878}
!20877 = !DIDerivedType(tag: DW_TAG_member, name: "bus_width", scope: !20875, file: !1375, line: 857, baseType: !1909, size: 32)
!20878 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !20875, file: !1375, line: 858, baseType: !61, size: 32, offset: 32)
!20879 = !DILocalVariable(name: "read_block_number", scope: !20871, file: !3737, line: 125, type: !61)
!20880 = !DILocalVariable(name: "write_block_number", scope: !20871, file: !3737, line: 126, type: !61)
!20881 = !DILocalVariable(name: "i", scope: !20871, file: !3737, line: 127, type: !61)
!20882 = !DILocalVariable(name: "retry", scope: !20871, file: !3737, line: 128, type: !61)
!20883 = !DILocation(line: 124, column: 5, scope: !20871)
!20884 = !DILocation(line: 124, column: 21, scope: !20871)
!20885 = !DILocation(line: 0, scope: !20871)
!20886 = !DILocation(line: 129, column: 5, scope: !20871)
!20887 = !DILocation(line: 132, column: 5, scope: !20871)
!20888 = !DILocation(line: 133, column: 5, scope: !20871)
!20889 = !DILocation(line: 134, column: 5, scope: !20871)
!20890 = !DILocation(line: 135, column: 5, scope: !20871)
!20891 = !DILocation(line: 136, column: 5, scope: !20871)
!20892 = !DILocation(line: 137, column: 5, scope: !20871)
!20893 = !DILocation(line: 141, column: 5, scope: !20871)
!20894 = !DILocation(line: 143, column: 18, scope: !20895)
!20895 = distinct !DILexicalBlock(scope: !20896, file: !3737, line: 142, column: 70)
!20896 = distinct !DILexicalBlock(scope: !20897, file: !3737, line: 142, column: 13)
!20897 = distinct !DILexicalBlock(scope: !20871, file: !3737, line: 141, column: 23)
!20898 = !DILocation(line: 141, column: 18, scope: !20871)
!20899 = distinct !{!20899, !20893, !20900}
!20900 = !DILocation(line: 147, column: 5, scope: !20871)
!20901 = !DILocation(line: 142, column: 33, scope: !20896)
!20902 = !DILocation(line: 142, column: 30, scope: !20896)
!20903 = !DILocation(line: 142, column: 13, scope: !20897)
!20904 = !DILocation(line: 156, column: 9, scope: !20905)
!20905 = distinct !DILexicalBlock(scope: !20906, file: !3737, line: 155, column: 31)
!20906 = distinct !DILexicalBlock(scope: !20907, file: !3737, line: 155, column: 5)
!20907 = distinct !DILexicalBlock(scope: !20871, file: !3737, line: 155, column: 5)
!20908 = !DILocation(line: 156, column: 34, scope: !20905)
!20909 = !DILocation(line: 155, column: 27, scope: !20906)
!20910 = !DILocation(line: 155, column: 19, scope: !20906)
!20911 = !DILocation(line: 155, column: 5, scope: !20907)
!20912 = distinct !{!20912, !20911, !20913}
!20913 = !DILocation(line: 157, column: 5, scope: !20907)
!20914 = !DILocation(line: 164, column: 33, scope: !20915)
!20915 = distinct !DILexicalBlock(scope: !20916, file: !3737, line: 164, column: 13)
!20916 = distinct !DILexicalBlock(scope: !20871, file: !3737, line: 162, column: 23)
!20917 = !DILocation(line: 164, column: 30, scope: !20915)
!20918 = !DILocation(line: 164, column: 13, scope: !20916)
!20919 = !DILocation(line: 165, column: 37, scope: !20920)
!20920 = distinct !DILexicalBlock(scope: !20921, file: !3737, line: 165, column: 17)
!20921 = distinct !DILexicalBlock(scope: !20915, file: !3737, line: 164, column: 131)
!20922 = !DILocation(line: 165, column: 34, scope: !20920)
!20923 = !DILocation(line: 165, column: 17, scope: !20921)
!20924 = distinct !{!20924, !20925, !20926}
!20925 = !DILocation(line: 162, column: 5, scope: !20871)
!20926 = !DILocation(line: 174, column: 5, scope: !20871)
!20927 = !DILocation(line: 182, column: 5, scope: !20871)
!20928 = !DILocation(line: 183, column: 33, scope: !20929)
!20929 = distinct !DILexicalBlock(scope: !20930, file: !3737, line: 183, column: 13)
!20930 = distinct !DILexicalBlock(scope: !20871, file: !3737, line: 182, column: 23)
!20931 = !DILocation(line: 183, column: 30, scope: !20929)
!20932 = !DILocation(line: 183, column: 13, scope: !20930)
!20933 = !DILocation(line: 184, column: 37, scope: !20934)
!20934 = distinct !DILexicalBlock(scope: !20935, file: !3737, line: 184, column: 17)
!20935 = distinct !DILexicalBlock(scope: !20929, file: !3737, line: 183, column: 128)
!20936 = !DILocation(line: 184, column: 34, scope: !20934)
!20937 = !DILocation(line: 184, column: 17, scope: !20935)
!20938 = distinct !{!20938, !20927, !20939}
!20939 = !DILocation(line: 193, column: 5, scope: !20871)
!20940 = !DILocation(line: 200, column: 5, scope: !20941)
!20941 = distinct !DILexicalBlock(scope: !20871, file: !3737, line: 200, column: 5)
!20942 = !DILocation(line: 200, column: 27, scope: !20943)
!20943 = distinct !DILexicalBlock(scope: !20941, file: !3737, line: 200, column: 5)
!20944 = !DILocation(line: 200, column: 19, scope: !20943)
!20945 = distinct !{!20945, !20940, !20946}
!20946 = !DILocation(line: 206, column: 5, scope: !20941)
!20947 = !DILocation(line: 201, column: 13, scope: !20948)
!20948 = distinct !DILexicalBlock(scope: !20949, file: !3737, line: 201, column: 13)
!20949 = distinct !DILexicalBlock(scope: !20943, file: !3737, line: 200, column: 31)
!20950 = !DILocation(line: 201, column: 37, scope: !20948)
!20951 = !DILocation(line: 201, column: 13, scope: !20949)
!20952 = !DILocation(line: 208, column: 5, scope: !20871)
!20953 = !DILocation(line: 214, column: 1, scope: !20871)
!20954 = distinct !DISubprogram(name: "plain_log_uart_init", scope: !3737, file: !3737, line: 75, type: !343, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3736, retainedNodes: !20955)
!20955 = !{!20956}
!20956 = !DILocalVariable(name: "uart_config", scope: !20954, file: !3737, line: 77, type: !20957)
!20957 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_config_t", file: !920, line: 378, baseType: !20958)
!20958 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !920, line: 373, size: 128, elements: !20959)
!20959 = !{!20960, !20961, !20962, !20963}
!20960 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !20958, file: !920, line: 374, baseType: !1021, size: 32)
!20961 = !DIDerivedType(tag: DW_TAG_member, name: "word_length", scope: !20958, file: !920, line: 375, baseType: !1023, size: 32, offset: 32)
!20962 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bit", scope: !20958, file: !920, line: 376, baseType: !1025, size: 32, offset: 64)
!20963 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !20958, file: !920, line: 377, baseType: !1027, size: 32, offset: 96)
!20964 = !DILocation(line: 77, column: 5, scope: !20954)
!20965 = !DILocation(line: 77, column: 23, scope: !20954)
!20966 = !DILocation(line: 80, column: 5, scope: !20954)
!20967 = !DILocation(line: 81, column: 5, scope: !20954)
!20968 = !DILocation(line: 82, column: 5, scope: !20954)
!20969 = !DILocation(line: 83, column: 5, scope: !20954)
!20970 = !DILocation(line: 85, column: 17, scope: !20954)
!20971 = !DILocation(line: 85, column: 26, scope: !20954)
!20972 = !DILocation(line: 86, column: 17, scope: !20954)
!20973 = !DILocation(line: 86, column: 29, scope: !20954)
!20974 = !DILocation(line: 87, column: 17, scope: !20954)
!20975 = !DILocation(line: 87, column: 26, scope: !20954)
!20976 = !DILocation(line: 88, column: 17, scope: !20954)
!20977 = !DILocation(line: 88, column: 24, scope: !20954)
!20978 = !DILocation(line: 89, column: 5, scope: !20954)
!20979 = !DILocation(line: 90, column: 1, scope: !20954)
!20980 = distinct !DISubprogram(name: "_close", scope: !3749, file: !3749, line: 5, type: !20836, scopeLine: 6, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3938, retainedNodes: !20981)
!20981 = !{!20982}
!20982 = !DILocalVariable(name: "file", arg: 1, scope: !20980, file: !3749, line: 5, type: !7)
!20983 = !DILocation(line: 0, scope: !20980)
!20984 = !DILocation(line: 7, column: 5, scope: !20980)
!20985 = distinct !DISubprogram(name: "_fstat", scope: !3749, file: !3749, line: 10, type: !20986, scopeLine: 11, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3938, retainedNodes: !21034)
!20986 = !DISubroutineType(types: !20987)
!20987 = !{!7, !7, !20988}
!20988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !20989, size: 32)
!20989 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !20990, line: 27, size: 704, elements: !20991)
!20990 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/stat.h", directory: "/home/mjshen/RTOSExploration")
!20991 = !{!20992, !20995, !20998, !21001, !21004, !21007, !21010, !21011, !21014, !21024, !21025, !21026, !21029, !21032}
!20992 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !20989, file: !20990, line: 29, baseType: !20993, size: 16)
!20993 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !3753, line: 161, baseType: !20994)
!20994 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !3791, line: 56, baseType: !2660)
!20995 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !20989, file: !20990, line: 30, baseType: !20996, size: 16, offset: 16)
!20996 = !DIDerivedType(tag: DW_TAG_typedef, name: "ino_t", file: !3753, line: 139, baseType: !20997)
!20997 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !3791, line: 75, baseType: !1214)
!20998 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !20989, file: !20990, line: 31, baseType: !20999, size: 32, offset: 32)
!20999 = !DIDerivedType(tag: DW_TAG_typedef, name: "mode_t", file: !3753, line: 189, baseType: !21000)
!21000 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !3791, line: 90, baseType: !63)
!21001 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !20989, file: !20990, line: 32, baseType: !21002, size: 16, offset: 64)
!21002 = !DIDerivedType(tag: DW_TAG_typedef, name: "nlink_t", file: !3753, line: 194, baseType: !21003)
!21003 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !3791, line: 209, baseType: !1214)
!21004 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !20989, file: !20990, line: 33, baseType: !21005, size: 16, offset: 80)
!21005 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !3753, line: 165, baseType: !21006)
!21006 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !3791, line: 60, baseType: !1214)
!21007 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !20989, file: !20990, line: 34, baseType: !21008, size: 16, offset: 96)
!21008 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !3753, line: 169, baseType: !21009)
!21009 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !3791, line: 63, baseType: !1214)
!21010 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !20989, file: !20990, line: 35, baseType: !20993, size: 16, offset: 112)
!21011 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !20989, file: !20990, line: 36, baseType: !21012, size: 32, offset: 128)
!21012 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !3753, line: 157, baseType: !21013)
!21013 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !3791, line: 102, baseType: !3807)
!21014 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !20989, file: !20990, line: 42, baseType: !21015, size: 128, offset: 192)
!21015 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !21016, line: 47, size: 128, elements: !21017)
!21016 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_timespec.h", directory: "/home/mjshen/RTOSExploration")
!21017 = !{!21018, !21023}
!21018 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !21015, file: !21016, line: 48, baseType: !21019, size: 64)
!21019 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !21020, line: 42, baseType: !21021)
!21020 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_timeval.h", directory: "/home/mjshen/RTOSExploration")
!21021 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int_least64_t", file: !64, line: 200, baseType: !21022)
!21022 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!21023 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !21015, file: !21016, line: 49, baseType: !3792, size: 32, offset: 64)
!21024 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !20989, file: !20990, line: 43, baseType: !21015, size: 128, offset: 320)
!21025 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !20989, file: !20990, line: 44, baseType: !21015, size: 128, offset: 448)
!21026 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !20989, file: !20990, line: 45, baseType: !21027, size: 32, offset: 576)
!21027 = !DIDerivedType(tag: DW_TAG_typedef, name: "blksize_t", file: !3753, line: 102, baseType: !21028)
!21028 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !3791, line: 34, baseType: !3792)
!21029 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !20989, file: !20990, line: 46, baseType: !21030, size: 32, offset: 608)
!21030 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !3753, line: 97, baseType: !21031)
!21031 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !3791, line: 30, baseType: !3792)
!21032 = !DIDerivedType(tag: DW_TAG_member, name: "st_spare4", scope: !20989, file: !20990, line: 48, baseType: !21033, size: 64, offset: 640)
!21033 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3792, size: 64, elements: !522)
!21034 = !{!21035, !21036}
!21035 = !DILocalVariable(name: "file", arg: 1, scope: !20985, file: !3749, line: 10, type: !7)
!21036 = !DILocalVariable(name: "st", arg: 2, scope: !20985, file: !3749, line: 10, type: !20988)
!21037 = !DILocation(line: 0, scope: !20985)
!21038 = !DILocation(line: 12, column: 5, scope: !20985)
!21039 = distinct !DISubprogram(name: "_isatty", scope: !3749, file: !3749, line: 15, type: !20836, scopeLine: 16, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3938, retainedNodes: !21040)
!21040 = !{!21041}
!21041 = !DILocalVariable(name: "file", arg: 1, scope: !21039, file: !3749, line: 15, type: !7)
!21042 = !DILocation(line: 0, scope: !21039)
!21043 = !DILocation(line: 17, column: 5, scope: !21039)
!21044 = distinct !DISubprogram(name: "_lseek", scope: !3749, file: !3749, line: 20, type: !21045, scopeLine: 21, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3938, retainedNodes: !21047)
!21045 = !DISubroutineType(types: !21046)
!21046 = !{!7, !7, !7, !7}
!21047 = !{!21048, !21049, !21050}
!21048 = !DILocalVariable(name: "file", arg: 1, scope: !21044, file: !3749, line: 20, type: !7)
!21049 = !DILocalVariable(name: "ptr", arg: 2, scope: !21044, file: !3749, line: 20, type: !7)
!21050 = !DILocalVariable(name: "dir", arg: 3, scope: !21044, file: !3749, line: 20, type: !7)
!21051 = !DILocation(line: 0, scope: !21044)
!21052 = !DILocation(line: 22, column: 5, scope: !21044)
!21053 = distinct !DISubprogram(name: "_open", scope: !3749, file: !3749, line: 25, type: !21054, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3938, retainedNodes: !21056)
!21054 = !DISubroutineType(types: !21055)
!21055 = !{!7, !165, !7, !7}
!21056 = !{!21057, !21058, !21059}
!21057 = !DILocalVariable(name: "name", arg: 1, scope: !21053, file: !3749, line: 25, type: !165)
!21058 = !DILocalVariable(name: "flags", arg: 2, scope: !21053, file: !3749, line: 25, type: !7)
!21059 = !DILocalVariable(name: "mode", arg: 3, scope: !21053, file: !3749, line: 25, type: !7)
!21060 = !DILocation(line: 0, scope: !21053)
!21061 = !DILocation(line: 27, column: 5, scope: !21053)
!21062 = distinct !DISubprogram(name: "_read", scope: !3749, file: !3749, line: 30, type: !21063, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3938, retainedNodes: !21065)
!21063 = !DISubroutineType(types: !21064)
!21064 = !{!7, !7, !982, !7}
!21065 = !{!21066, !21067, !21068}
!21066 = !DILocalVariable(name: "file", arg: 1, scope: !21062, file: !3749, line: 30, type: !7)
!21067 = !DILocalVariable(name: "ptr", arg: 2, scope: !21062, file: !3749, line: 30, type: !982)
!21068 = !DILocalVariable(name: "len", arg: 3, scope: !21062, file: !3749, line: 30, type: !7)
!21069 = !DILocation(line: 0, scope: !21062)
!21070 = !DILocation(line: 32, column: 5, scope: !21062)
!21071 = distinct !DISubprogram(name: "_getpid", scope: !3749, file: !3749, line: 48, type: !19816, scopeLine: 49, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3938, retainedNodes: !345)
!21072 = !DILocation(line: 50, column: 5, scope: !21071)
!21073 = distinct !DISubprogram(name: "_kill", scope: !3749, file: !3749, line: 56, type: !21074, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3938, retainedNodes: !21076)
!21074 = !DISubroutineType(types: !21075)
!21075 = !{!7, !7, !7}
!21076 = !{!21077, !21078}
!21077 = !DILocalVariable(name: "pid", arg: 1, scope: !21073, file: !3749, line: 56, type: !7)
!21078 = !DILocalVariable(name: "sig", arg: 2, scope: !21073, file: !3749, line: 56, type: !7)
!21079 = !DILocation(line: 0, scope: !21073)
!21080 = !DILocation(line: 58, column: 5, scope: !21073)
!21081 = distinct !DISubprogram(name: "_exit", scope: !3749, file: !3749, line: 61, type: !20836, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3938, retainedNodes: !21082)
!21082 = !{!21083}
!21083 = !DILocalVariable(name: "val", arg: 1, scope: !21081, file: !3749, line: 61, type: !7)
!21084 = !DILocation(line: 0, scope: !21081)
!21085 = !DILocation(line: 63, column: 5, scope: !21081)
!21086 = !DILocation(line: 0, scope: !3748)
!21087 = !DILocation(line: 73, column: 5, scope: !3748)
!21088 = !{i64 1127}
!21089 = !DILocation(line: 75, column: 14, scope: !21090)
!21090 = distinct !DILexicalBlock(scope: !3748, file: !3749, line: 75, column: 9)
!21091 = !DILocation(line: 75, column: 11, scope: !21090)
!21092 = !DILocation(line: 75, column: 9, scope: !3748)
!21093 = !DILocation(line: 81, column: 32, scope: !21094)
!21094 = distinct !DILexicalBlock(scope: !3748, file: !3749, line: 81, column: 9)
!21095 = !DILocation(line: 81, column: 15, scope: !21094)
!21096 = !DILocation(line: 92, column: 1, scope: !3748)
!21097 = !DILocation(line: 81, column: 9, scope: !3748)
!21098 = distinct !DISubprogram(name: "_write", scope: !3749, file: !3749, line: 94, type: !21063, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3938, retainedNodes: !21099)
!21099 = !{!21100, !21101, !21102, !21103}
!21100 = !DILocalVariable(name: "file", arg: 1, scope: !21098, file: !3749, line: 94, type: !7)
!21101 = !DILocalVariable(name: "ptr", arg: 2, scope: !21098, file: !3749, line: 94, type: !982)
!21102 = !DILocalVariable(name: "len", arg: 3, scope: !21098, file: !3749, line: 94, type: !7)
!21103 = !DILocalVariable(name: "DataIdx", scope: !21098, file: !3749, line: 96, type: !7)
!21104 = !DILocation(line: 0, scope: !21098)
!21105 = !DILocation(line: 98, column: 31, scope: !21106)
!21106 = distinct !DILexicalBlock(scope: !21107, file: !3749, line: 98, column: 5)
!21107 = distinct !DILexicalBlock(scope: !21098, file: !3749, line: 98, column: 5)
!21108 = !DILocation(line: 98, column: 5, scope: !21107)
!21109 = !DILocation(line: 99, column: 26, scope: !21110)
!21110 = distinct !DILexicalBlock(scope: !21106, file: !3749, line: 98, column: 49)
!21111 = !DILocation(line: 99, column: 22, scope: !21110)
!21112 = !DILocation(line: 99, column: 9, scope: !21110)
!21113 = !DILocation(line: 98, column: 45, scope: !21106)
!21114 = distinct !{!21114, !21108, !21115}
!21115 = !DILocation(line: 100, column: 5, scope: !21107)
!21116 = !DILocation(line: 101, column: 5, scope: !21098)
!21117 = distinct !DISubprogram(name: "SysTick_Set", scope: !3950, file: !3950, line: 62, type: !5135, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3949, retainedNodes: !21118)
!21118 = !{!21119, !21120}
!21119 = !DILocalVariable(name: "ticks", arg: 1, scope: !21117, file: !3950, line: 62, type: !61)
!21120 = !DILocalVariable(name: "val", scope: !21117, file: !3950, line: 64, type: !61)
!21121 = !DILocation(line: 0, scope: !21117)
!21122 = !DILocation(line: 67, column: 16, scope: !21123)
!21123 = distinct !DILexicalBlock(scope: !21117, file: !3950, line: 67, column: 9)
!21124 = !DILocation(line: 67, column: 21, scope: !21123)
!21125 = !DILocation(line: 67, column: 9, scope: !21117)
!21126 = !DILocation(line: 72, column: 20, scope: !21117)
!21127 = !DILocation(line: 75, column: 19, scope: !21117)
!21128 = !DILocation(line: 79, column: 20, scope: !21117)
!21129 = !DILocation(line: 80, column: 20, scope: !21117)
!21130 = !DILocation(line: 83, column: 19, scope: !21117)
!21131 = !DILocation(line: 85, column: 5, scope: !21117)
!21132 = !DILocation(line: 86, column: 1, scope: !21117)
!21133 = distinct !DISubprogram(name: "SysInitStatus_Set", scope: !3950, file: !3950, line: 95, type: !343, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3949, retainedNodes: !345)
!21134 = !DILocation(line: 97, column: 28, scope: !21133)
!21135 = !DILocation(line: 98, column: 1, scope: !21133)
!21136 = distinct !DISubprogram(name: "SysInitStatus_Query", scope: !3950, file: !3950, line: 107, type: !5387, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3949, retainedNodes: !345)
!21137 = !DILocation(line: 109, column: 12, scope: !21136)
!21138 = !DILocation(line: 109, column: 5, scope: !21136)
!21139 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !3950, file: !3950, line: 119, type: !343, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3949, retainedNodes: !21140)
!21140 = !{!21141}
!21141 = !DILocalVariable(name: "cm_mux_sel", scope: !21139, file: !3950, line: 121, type: !159)
!21142 = !DILocation(line: 121, column: 38, scope: !21139)
!21143 = !DILocation(line: 121, column: 26, scope: !21139)
!21144 = !DILocation(line: 0, scope: !21139)
!21145 = !DILocation(line: 123, column: 5, scope: !21139)
!21146 = !DILocation(line: 132, column: 13, scope: !21147)
!21147 = distinct !DILexicalBlock(scope: !21139, file: !3950, line: 123, column: 25)
!21148 = !DILocation(line: 140, column: 13, scope: !21147)
!21149 = !DILocation(line: 0, scope: !21147)
!21150 = !DILocation(line: 146, column: 26, scope: !21151)
!21151 = distinct !DILexicalBlock(scope: !21139, file: !3950, line: 146, column: 9)
!21152 = !DILocation(line: 146, column: 50, scope: !21151)
!21153 = !DILocation(line: 146, column: 41, scope: !21151)
!21154 = !DILocation(line: 148, column: 25, scope: !21155)
!21155 = distinct !DILexicalBlock(scope: !21151, file: !3950, line: 147, column: 52)
!21156 = !DILocation(line: 149, column: 5, scope: !21155)
!21157 = !DILocation(line: 150, column: 1, scope: !21139)
!21158 = distinct !DISubprogram(name: "SystemInit", scope: !3950, file: !3950, line: 158, type: !343, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3949, retainedNodes: !345)
!21159 = !DILocation(line: 162, column: 16, scope: !21158)
!21160 = !DILocation(line: 166, column: 16, scope: !21158)
!21161 = !DILocation(line: 169, column: 16, scope: !21158)
!21162 = !DILocation(line: 172, column: 1, scope: !21158)
!21163 = distinct !DISubprogram(name: "CachePreInit", scope: !3950, file: !3950, line: 180, type: !343, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3949, retainedNodes: !345)
!21164 = !DILocation(line: 183, column: 22, scope: !21163)
!21165 = !DILocation(line: 186, column: 21, scope: !21163)
!21166 = !DILocation(line: 189, column: 21, scope: !21163)
!21167 = !DILocation(line: 192, column: 29, scope: !21163)
!21168 = !DILocation(line: 193, column: 33, scope: !21163)
!21169 = !DILocation(line: 195, column: 28, scope: !21163)
!21170 = !DILocation(line: 200, column: 30, scope: !21163)
!21171 = !DILocation(line: 214, column: 1, scope: !21163)
